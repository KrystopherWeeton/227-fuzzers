; ModuleID = '../../v8/src/compiler/backend/register-allocator.cc'
source_filename = "../../v8/src/compiler/backend/register-allocator.cc"
target datalayout = "e-m:e-i64:64-f80:128-n8:16:32:64-S128"
target triple = "x86_64-unknown-linux-gnu"

module asm ".symver exp, exp@GLIBC_2.2.5"
module asm ".symver exp2, exp2@GLIBC_2.2.5"
module asm ".symver exp2f, exp2f@GLIBC_2.2.5"
module asm ".symver expf, expf@GLIBC_2.2.5"
module asm ".symver lgamma, lgamma@GLIBC_2.2.5"
module asm ".symver lgammaf, lgammaf@GLIBC_2.2.5"
module asm ".symver lgammal, lgammal@GLIBC_2.2.5"
module asm ".symver log, log@GLIBC_2.2.5"
module asm ".symver log2, log2@GLIBC_2.2.5"
module asm ".symver log2f, log2f@GLIBC_2.2.5"
module asm ".symver logf, logf@GLIBC_2.2.5"
module asm ".symver pow, pow@GLIBC_2.2.5"
module asm ".symver powf, powf@GLIBC_2.2.5"

%"class.std::__1::basic_ostream" = type { i32 (...)**, %"class.std::__1::basic_ios.base" }
%"class.std::__1::basic_ios.base" = type <{ %"class.std::__1::ios_base", %"class.std::__1::basic_ostream"*, i32 }>
%"class.std::__1::ios_base" = type { i32 (...)**, i32, i64, i64, i32, i32, i8*, i8*, void (i32, %"class.std::__1::ios_base"*, i32)**, i32*, i64, i64, i64*, i64, i64, i8**, i64, i64 }
%struct._IO_FILE = type { i32, i8*, i8*, i8*, i8*, i8*, i8*, i8*, i8*, i8*, i8*, i8*, %struct._IO_marker*, %struct._IO_FILE*, i32, i32, i64, i16, i8, [1 x i8], i8*, i64, %struct._IO_codecvt*, %struct._IO_wide_data*, %struct._IO_FILE*, i8*, i64, i32, [20 x i8] }
%struct._IO_marker = type opaque
%struct._IO_codecvt = type opaque
%struct._IO_wide_data = type opaque
%"struct.std::__1::__function::__policy" = type { i8* (i8*)*, void (i8*)*, i8, %"class.std::type_info"* }
%"class.std::type_info" = type { i32 (...)**, i8* }
%"class.std::__1::locale::id" = type <{ %"struct.std::__1::once_flag", i32, [4 x i8] }>
%"struct.std::__1::once_flag" = type { i64 }
%"class.v8::internal::compiler::LiveRangeFinder" = type { %"class.v8::internal::compiler::TopTierRegisterAllocationData"*, i32, %"class.v8::internal::compiler::LiveRangeBoundArray"*, %"class.v8::internal::Zone"* }
%"class.v8::internal::compiler::LiveRangeBoundArray" = type { i64, %"class.v8::internal::compiler::LiveRangeBound"* }
%"class.v8::internal::compiler::LiveRangeBound" = type <{ %"class.v8::internal::compiler::LiveRange"*, %"class.v8::internal::compiler::LifetimePosition", %"class.v8::internal::compiler::LifetimePosition", i8, [7 x i8] }>
%"class.v8::internal::compiler::LiveRange" = type <{ i32, i32, %"class.v8::internal::compiler::UseInterval"*, %"class.v8::internal::compiler::UseInterval"*, %"class.v8::internal::compiler::UsePosition"*, %"class.v8::internal::compiler::TopLevelLiveRange"*, %"class.v8::internal::compiler::LiveRange"*, %"class.v8::internal::compiler::UseInterval"*, %"class.v8::internal::compiler::UsePosition"*, %"class.v8::internal::compiler::UsePosition"*, %"class.v8::internal::compiler::LiveRangeBundle"*, %"class.v8::internal::compiler::LifetimePosition", [4 x i8] }>
%"class.v8::internal::compiler::TopLevelLiveRange" = type { %"class.v8::internal::compiler::LiveRange.base", i32, i32, %union.anon, %union.anon.36, i8, i8, i32, %"class.v8::internal::compiler::UsePosition"*, %"class.v8::internal::compiler::LiveRange"* }
%"class.v8::internal::compiler::LiveRange.base" = type <{ i32, i32, %"class.v8::internal::compiler::UseInterval"*, %"class.v8::internal::compiler::UseInterval"*, %"class.v8::internal::compiler::UsePosition"*, %"class.v8::internal::compiler::TopLevelLiveRange"*, %"class.v8::internal::compiler::LiveRange"*, %"class.v8::internal::compiler::UseInterval"*, %"class.v8::internal::compiler::UsePosition"*, %"class.v8::internal::compiler::UsePosition"*, %"class.v8::internal::compiler::LiveRangeBundle"*, %"class.v8::internal::compiler::LifetimePosition" }>
%union.anon = type { %"class.v8::internal::compiler::InstructionOperand"* }
%"class.v8::internal::compiler::InstructionOperand" = type { i64 }
%union.anon.36 = type { %"struct.v8::internal::compiler::TopLevelLiveRange::SpillMoveInsertionList"* }
%"struct.v8::internal::compiler::TopLevelLiveRange::SpillMoveInsertionList" = type { i32, %"class.v8::internal::compiler::InstructionOperand"*, %"struct.v8::internal::compiler::TopLevelLiveRange::SpillMoveInsertionList"* }
%"class.v8::internal::compiler::UseInterval" = type { %"class.v8::internal::compiler::LifetimePosition", %"class.v8::internal::compiler::LifetimePosition", %"class.v8::internal::compiler::UseInterval"* }
%"class.v8::internal::compiler::UsePosition" = type { %"class.v8::internal::compiler::InstructionOperand"*, i8*, %"class.v8::internal::compiler::UsePosition"*, %"class.v8::internal::compiler::LifetimePosition", i32 }
%"class.v8::internal::compiler::LiveRangeBundle" = type { %"class.v8::internal::ZoneSet", %"class.v8::internal::ZoneSet.24", i32, i32 }
%"class.v8::internal::ZoneSet" = type { %"class.std::__1::set" }
%"class.std::__1::set" = type { %"class.std::__1::__tree" }
%"class.std::__1::__tree" = type { %"class.std::__1::__tree_end_node"*, %"class.std::__1::__compressed_pair", %"class.std::__1::__compressed_pair.22" }
%"class.std::__1::__tree_end_node" = type { %"class.std::__1::__tree_node_base"* }
%"class.std::__1::__tree_node_base" = type <{ %"class.std::__1::__tree_end_node", %"class.std::__1::__tree_node_base"*, %"class.std::__1::__tree_end_node"*, i8, [7 x i8] }>
%"class.std::__1::__compressed_pair" = type { %"struct.std::__1::__compressed_pair_elem", %"struct.std::__1::__compressed_pair_elem.0" }
%"struct.std::__1::__compressed_pair_elem" = type { %"class.std::__1::__tree_end_node" }
%"struct.std::__1::__compressed_pair_elem.0" = type { %"class.v8::internal::ZoneAllocator" }
%"class.v8::internal::ZoneAllocator" = type { %"class.v8::internal::Zone"* }
%"class.std::__1::__compressed_pair.22" = type { %"struct.std::__1::__compressed_pair_elem.13" }
%"struct.std::__1::__compressed_pair_elem.13" = type { i64 }
%"class.v8::internal::ZoneSet.24" = type { %"class.std::__1::set.25" }
%"class.std::__1::set.25" = type { %"class.std::__1::__tree.26" }
%"class.std::__1::__tree.26" = type { %"class.std::__1::__tree_end_node"*, %"class.std::__1::__compressed_pair.27", %"class.std::__1::__compressed_pair.30" }
%"class.std::__1::__compressed_pair.27" = type { %"struct.std::__1::__compressed_pair_elem", %"struct.std::__1::__compressed_pair_elem.28" }
%"struct.std::__1::__compressed_pair_elem.28" = type { %"class.v8::internal::ZoneAllocator.29" }
%"class.v8::internal::ZoneAllocator.29" = type { %"class.v8::internal::Zone"* }
%"class.std::__1::__compressed_pair.30" = type { %"struct.std::__1::__compressed_pair_elem.13" }
%"class.v8::internal::compiler::LifetimePosition" = type { i32 }
%"class.v8::internal::compiler::TopTierRegisterAllocationData" = type { %"class.v8::internal::compiler::RegisterAllocationData", %"class.v8::internal::Zone"*, %"class.v8::internal::compiler::Frame"*, %"class.v8::internal::compiler::InstructionSequence"*, i8*, %"class.v8::internal::RegisterConfiguration"*, %"class.v8::internal::ZoneMap.1268", %"class.v8::internal::ZoneVector.1277", %"class.v8::internal::ZoneVector.1277", %"class.v8::internal::ZoneVector", %"class.v8::internal::ZoneVector", %"class.v8::internal::ZoneVector", %"class.v8::internal::ZoneVector", %"class.v8::internal::ZoneVector", %"class.v8::internal::ZoneVector.1284", %"class.v8::internal::ZoneVector.1291", %"class.v8::internal::BitVector"*, %"class.v8::internal::BitVector"*, %"class.v8::internal::BitVector"*, %"class.v8::internal::BitVector"*, i32, %"class.v8::internal::ZoneVector.1298", %"class.v8::internal::ZoneVector.1306", %"class.v8::base::Flags", %"class.v8::internal::TickCounter"*, %"class.v8::internal::ZoneMap.1320" }
%"class.v8::internal::compiler::RegisterAllocationData" = type { i32 }
%"class.v8::internal::compiler::Frame" = type { i32, i32, i32, %"class.v8::internal::AlignedSlotAllocator", %"class.v8::internal::BitVector"*, %"class.v8::internal::BitVector"* }
%"class.v8::internal::AlignedSlotAllocator" = type { i32, i32, i32, i32 }
%"class.v8::internal::compiler::InstructionSequence" = type { %"class.v8::internal::Isolate"*, %"class.v8::internal::Zone"*, %"class.v8::internal::ZoneVector.1170"*, %"class.v8::internal::ZoneVector.1170"*, %"class.v8::internal::ZoneMap", %"class.std::__1::map.1185", %"class.v8::internal::ZoneVector.1193", %"class.v8::internal::ZoneVector.37", %"class.v8::internal::ZoneDeque", i32, %"class.v8::internal::ZoneDeque.1225", %"class.v8::internal::ZoneVector.1238", i32, %"class.v8::internal::ZoneVector.1245", %"class.v8::internal::compiler::InstructionBlock"* }
%"class.v8::internal::Isolate" = type { %"class.v8::internal::IsolateData", %"class.std::__1::unique_ptr.63", %"class.v8::internal::Heap", %"class.v8::internal::ReadOnlyHeap"*, %"class.std::__1::shared_ptr.693", %"class.std::__1::unique_ptr.714", i32, %"class.v8::internal::Isolate::EntryStackItem"*, i32, %"class.v8::internal::StringStream"*, [13 x i64], %"class.v8::internal::Bootstrapper"*, %"class.v8::internal::RuntimeProfiler"*, %"class.v8::internal::CompilationCache"*, %"class.std::__1::shared_ptr.724", %"class.v8::base::RecursiveMutex", %"class.v8::base::SharedMutex", %"class.v8::base::SharedMutex", %"class.v8::base::SharedMutex", %"class.v8::base::SharedMutex", %"class.v8::base::SharedMutex", %"class.v8::internal::Logger"*, %"class.v8::internal::StubCache"*, %"class.v8::internal::StubCache"*, %"class.v8::internal::Deoptimizer"*, i8, %"class.v8::internal::MaterializedObjectStore"*, i8, i32, i32, %"class.v8::internal::DescriptorLookupCache"*, %"struct.v8::internal::HandleScopeData", %"class.v8::internal::HandleScopeImplementer"*, %"class.v8::internal::UnicodeCache"*, %"class.v8::internal::AccountingAllocator"*, %"class.v8::internal::InnerPointerToCodeCache"*, %"class.v8::internal::GlobalHandles"*, %"class.v8::internal::EternalHandles"*, %"class.v8::internal::ThreadManager"*, %"class.v8::bigint::Processor"*, %"class.v8::internal::RuntimeState", %"class.v8::internal::Builtins", %"class.v8::internal::SetupIsolateDelegate"*, %"class.v8::internal::RegExpStack"*, %"class.std::__1::vector.858", %"class.v8::internal::DateCache"*, %"class.v8::base::RandomNumberGenerator"*, %"class.v8::base::RandomNumberGenerator"*, %"struct.std::__1::atomic.870", {}*, i8*, void (i32, %"class.v8::Promise"*, %"class.v8::Value"*)*, {}*, {}*, %"struct.std::__1::atomic.880", {}*, %"class.v8::base::Mutex", double, %"class.std::__1::basic_string", %"class.std::__1::unordered_map.891", %"struct.std::__1::atomic.218", i8, i8, i8, i8, i8, i8, double, %"class.v8::internal::Debug"*, %"class.v8::internal::HeapProfiler"*, %"class.std::__1::unique_ptr.966", %"class.v8::internal::AstStringConstants"*, %"class.v8::internal::interpreter::Interpreter"*, %"class.v8::internal::compiler::PerIsolateCompilerCache"*, %"class.v8::internal::Zone"*, %"class.v8::internal::CompilerDispatcher"*, %"class.std::__1::queue", void (i8*, i8*)*, void (i8*, i1)*, void (i8*, i32)*, i1 (%"class.v8::Context"*, %"class.v8::String"*)*, { i8, %"class.v8::String"* } (%"class.v8::Context"*, %"class.v8::Value"*)*, { i8, %"class.v8::String"* } (%"class.v8::Context"*, %"class.v8::Value"*, i1)*, i1 (%"class.v8::Context"*, %"class.v8::String"*)*, i1 (%"class.v8::FunctionCallbackInfo"*)*, i1 (%"class.v8::FunctionCallbackInfo"*)*, i1 (%"class.v8::Context"*)*, void (%"class.v8::FunctionCallbackInfo"*)*, %"class.v8::String"* (%"class.v8::Isolate"*, i8*)*, i1 (%"class.v8::Context"*)*, i1 (%"class.v8::Context"*)*, %"class.v8::internal::Relocatable"*, %"class.std::__1::vector.1009"*, %"class.v8::internal::Object", i64*, %"class.v8::internal::AddressToIndexHashMap"*, %"class.v8::internal::HeapObjectToIndexHashMap"*, %"class.v8::internal::MicrotaskQueue"*, %"class.v8::internal::CompilationStatistics"*, %"class.v8::internal::CodeTracer"*, i32, void (%"class.v8::PromiseRejectMessage"*)*, %"class.v8::StartupData"*, i32, i32, i32, i64, i8, i8, i32, i8, i32, %"class.v8_inspector::V8Inspector"*, i8, i8, i8, i32, i32, %"class.v8::internal::compiler::NodeObserver"*, i8, [128 x i32], [256 x i32], [251 x i32], [251 x i32], %"class.v8::internal::OptimizingCompileDispatcher"*, %"class.std::__1::unique_ptr.1017", i32, i8, i8, i32, i32, %"class.std::__1::vector.1023", %"class.std::__1::vector.1023", void (%"class.v8::Isolate"*, i32)*, %"class.std::__1::shared_ptr.1030", i64, %"class.std::__1::unordered_map.1031", i64, %"struct.v8::metrics::LongTaskStats", %"class.std::__1::vector.589", %"class.v8::internal::BuiltinsConstantsTableBuilder"*, i8*, i32, i8*, i32, %"class.v8::ArrayBuffer::Allocator"*, %"class.std::__1::shared_ptr.226", %"class.v8::internal::FutexWaitListNode", %"class.v8::internal::CancelableTaskManager"*, %"class.v8::debug::ConsoleDelegate"*, %"class.v8::debug::AsyncEventDelegate"*, i32, i32, %"class.std::__1::unique_ptr.1087", i1 (%"class.v8::Isolate"*)*, i8, %"class.v8::base::Mutex", %"struct.v8::internal::ManagedPtrDestructor"*, i64, i64, %"class.v8::internal::wasm::WasmEngine"*, %"class.std::__1::unique_ptr.1125", %"class.v8::internal::EmbeddedFileWriterInterface"*, %"class.v8::Context::BackupIncumbentScope"*, {}*, %"class.v8::base::Mutex", %"class.v8::internal::Isolate::ThreadDataTable", i8, %"class.v8::internal::Isolate"*, %"class.v8::base::Mutex", %"class.v8::internal::Isolate"*, %"class.v8::internal::Isolate"*, %"class.v8::internal::Isolate"*, %"struct.std::__1::atomic.1159", %"class.std::__1::vector.1163", %"class.std::__1::vector.1163", void (i32, %"class.std::__1::basic_string"*)* }
%"class.v8::internal::IsolateData" = type { [4 x i8*], i64, i64, i64, i64, i64, %"class.v8::internal::StackGuard", %"class.v8::internal::RootsTable", %"class.v8::internal::ExternalReferenceTable", %"class.v8::internal::ThreadLocalTop", [1711 x i64], [1711 x i64], i8, [15 x i8] }
%"class.v8::internal::StackGuard" = type { %"class.v8::internal::Isolate"*, %"class.v8::internal::StackGuard::ThreadLocal" }
%"class.v8::internal::StackGuard::ThreadLocal" = type { i64, i64, i64, i64, %"class.v8::internal::InterruptsScope"*, i64 }
%"class.v8::internal::InterruptsScope" = type { i32 (...)**, %"class.v8::internal::StackGuard"*, i64, i64, i32, %"class.v8::internal::InterruptsScope"* }
%"class.v8::internal::RootsTable" = type { [669 x i64] }
%"class.v8::internal::ExternalReferenceTable" = type { [1042 x i64], i32, i32 }
%"class.v8::internal::ThreadLocalTop" = type { %"class.v8::TryCatch"*, %"class.v8::internal::Isolate"*, %"class.v8::internal::Context", %"struct.std::__1::atomic.58", %"class.v8::internal::Object", %"class.v8::internal::Context", i64, i64, i64, i64, i64, %"class.v8::internal::Object", i8, i8, %"class.v8::internal::Object", i64, i64, i64, %"class.v8::internal::PromiseOnStack"*, %"class.v8::internal::Simulator"*, i64, %"class.v8::internal::ExternalCallbackScope"*, i32, void (%"class.v8::Object"*, i32, %"class.v8::Value"*)*, i64 }
%"class.v8::TryCatch" = type <{ %"class.v8::internal::Isolate"*, %"class.v8::TryCatch"*, i8*, i8*, i8*, i8, [7 x i8] }>
%"struct.std::__1::atomic.58" = type { %"struct.std::__1::__atomic_base.59" }
%"struct.std::__1::__atomic_base.59" = type { %"struct.std::__1::__cxx_atomic_impl.60" }
%"struct.std::__1::__cxx_atomic_impl.60" = type { %"struct.std::__1::__cxx_atomic_base_impl.61" }
%"struct.std::__1::__cxx_atomic_base_impl.61" = type { %"class.v8::internal::ThreadId" }
%"class.v8::internal::ThreadId" = type { i32 }
%"class.v8::internal::Context" = type { %"class.v8::internal::TorqueGeneratedContext" }
%"class.v8::internal::TorqueGeneratedContext" = type { %"class.v8::internal::HeapObject" }
%"class.v8::internal::HeapObject" = type { %"class.v8::internal::Object" }
%"class.v8::internal::PromiseOnStack" = type { %"class.v8::internal::Handle", %"class.v8::internal::PromiseOnStack"* }
%"class.v8::internal::Handle" = type { %"class.v8::internal::HandleBase" }
%"class.v8::internal::HandleBase" = type { i64* }
%"class.v8::internal::Simulator" = type opaque
%"class.v8::internal::ExternalCallbackScope" = type opaque
%"class.v8::Object" = type { i8 }
%"class.v8::Value" = type { i8 }
%"class.std::__1::unique_ptr.63" = type { %"class.std::__1::__compressed_pair.64" }
%"class.std::__1::__compressed_pair.64" = type { %"struct.std::__1::__compressed_pair_elem.65" }
%"struct.std::__1::__compressed_pair_elem.65" = type { %"class.v8::internal::IsolateAllocator"* }
%"class.v8::internal::IsolateAllocator" = type { i8*, %"class.v8::PageAllocator"* }
%"class.v8::PageAllocator" = type { i32 (...)** }
%"class.v8::internal::Heap" = type { %"class.std::__1::unordered_map", %"struct.std::__1::atomic", %"class.v8::internal::Heap::ExternalMemoryAccounting", %"class.v8::internal::Isolate"*, i64, i64, i64, i64, %"struct.std::__1::atomic", i64, i64, i64, i64, i64, i8, i64, i64, %"struct.std::__1::atomic", i64, i64, %"struct.std::__1::atomic", %"struct.std::__1::atomic.92", %"class.std::__1::vector.96", i32, %"class.v8::internal::NewSpace"*, %"class.v8::internal::OldSpace"*, %"class.v8::internal::CodeSpace"*, %"class.v8::internal::MapSpace"*, %"class.v8::internal::OldLargeObjectSpace"*, %"class.v8::internal::CodeLargeObjectSpace"*, %"class.v8::internal::NewLargeObjectSpace"*, %"class.v8::internal::ReadOnlySpace"*, %"class.v8::internal::OldSpace"*, %"class.v8::internal::MapSpace"*, %"class.std::__1::unique_ptr.212", %"class.std::__1::unique_ptr.212", [8 x %"class.v8::internal::Space"*], %"class.v8::internal::LocalHeap"*, %"class.v8::internal::ArrayBufferExtension"*, %"class.v8::internal::ArrayBufferExtension"*, i8, i64, %"struct.std::__1::atomic.227", i32, i32, i32, i32, %"class.v8::internal::AllocationObserver"*, %"class.v8::internal::StressScavengeObserver"*, double, i32, i32, i32, i64, i32, [128 x i64], %"struct.std::__1::atomic", i64, i8, %"struct.std::__1::atomic", %"class.v8::internal::Object", %"class.v8::internal::Object", %"class.v8::internal::Object", %"class.std::__1::vector.231", %"class.std::__1::vector.231", i64 ()*, [113 x i32], i64, double, double, i64, i64, double, i32, i32, i32, i32, double, double, double, %"class.std::__1::unique_ptr.238", %"class.std::__1::unique_ptr.244", %"class.v8::internal::MinorMarkCompactCollector"*, %"class.std::__1::unique_ptr.374", %"class.std::__1::unique_ptr.380", %"class.std::__1::unique_ptr.386", %"class.std::__1::unique_ptr.425", %"class.std::__1::unique_ptr.464", %"class.std::__1::unique_ptr.494", %"class.std::__1::unique_ptr.500", %"class.std::__1::unique_ptr.510", %"class.std::__1::unique_ptr.516", %"class.std::__1::unique_ptr.516", %"class.std::__1::unique_ptr.522", %"class.std::__1::unique_ptr.528", %"class.std::__1::unique_ptr.528", %"class.std::__1::unique_ptr.534", %"class.std::__1::unique_ptr.540", %"class.std::__1::shared_ptr.546", %"class.v8::CppHeap"*, %"class.v8::EmbedderRootsHandler"*, %"class.v8::internal::StrongRootsEntry"*, %"class.v8::base::Mutex", i8, i64, i64, i64, i64, %"class.std::__1::unordered_map.551", %"class.std::__1::unique_ptr.577", [512 x i8], i8, i8, i64, i8, i32, i32, %"class.std::__1::unique_ptr.583", i8, %"class.v8::internal::Heap::ExternalStringTable", %"class.v8::base::Mutex", %"class.std::__1::unique_ptr.596", i32, i8, i8, i8, i8, i8, %"class.v8::internal::HeapObject", %"class.v8::base::SharedMutex", %"class.v8::base::Mutex", %"class.std::__1::unordered_set.396", i8, [7 x i8], %"class.std::__1::unordered_map.602", %"class.std::__1::unordered_map.628", %"class.std::__1::unordered_map.602", %"class.std::__1::unordered_map.652", %"class.std::__1::vector.680", i8, %"class.std::__1::unique_ptr.687", i32, i32 }
%"class.std::__1::unordered_map" = type { %"class.std::__1::__hash_table" }
%"class.std::__1::__hash_table" = type <{ %"class.std::__1::unique_ptr.69", %"class.std::__1::__compressed_pair.77", %"class.std::__1::__compressed_pair.82", %"class.std::__1::__compressed_pair.84", [4 x i8] }>
%"class.std::__1::unique_ptr.69" = type { %"class.std::__1::__compressed_pair.70" }
%"class.std::__1::__compressed_pair.70" = type { %"struct.std::__1::__compressed_pair_elem.71", %"struct.std::__1::__compressed_pair_elem.72" }
%"struct.std::__1::__compressed_pair_elem.71" = type { %"struct.std::__1::__hash_node_base"** }
%"struct.std::__1::__hash_node_base" = type { %"struct.std::__1::__hash_node_base"* }
%"struct.std::__1::__compressed_pair_elem.72" = type { %"class.std::__1::__bucket_list_deallocator" }
%"class.std::__1::__bucket_list_deallocator" = type { %"class.std::__1::__compressed_pair.73" }
%"class.std::__1::__compressed_pair.73" = type { %"struct.std::__1::__compressed_pair_elem.13" }
%"class.std::__1::__compressed_pair.77" = type { %"struct.std::__1::__compressed_pair_elem.78" }
%"struct.std::__1::__compressed_pair_elem.78" = type { %"struct.std::__1::__hash_node_base" }
%"class.std::__1::__compressed_pair.82" = type { %"struct.std::__1::__compressed_pair_elem.13" }
%"class.std::__1::__compressed_pair.84" = type { %"struct.std::__1::__compressed_pair_elem.85" }
%"struct.std::__1::__compressed_pair_elem.85" = type { float }
%"class.v8::internal::Heap::ExternalMemoryAccounting" = type { %"struct.std::__1::atomic.87", %"struct.std::__1::atomic.87", %"struct.std::__1::atomic.87" }
%"struct.std::__1::atomic.87" = type { %"struct.std::__1::__atomic_base.88" }
%"struct.std::__1::__atomic_base.88" = type { %"struct.std::__1::__atomic_base.89" }
%"struct.std::__1::__atomic_base.89" = type { %"struct.std::__1::__cxx_atomic_impl.90" }
%"struct.std::__1::__cxx_atomic_impl.90" = type { %"struct.std::__1::__cxx_atomic_base_impl.91" }
%"struct.std::__1::__cxx_atomic_base_impl.91" = type { i64 }
%"struct.std::__1::atomic.92" = type { %"struct.std::__1::__atomic_base.93" }
%"struct.std::__1::__atomic_base.93" = type { %"struct.std::__1::__cxx_atomic_impl.94" }
%"struct.std::__1::__cxx_atomic_impl.94" = type { %"struct.std::__1::__cxx_atomic_base_impl.95" }
%"struct.std::__1::__cxx_atomic_base_impl.95" = type { i32 }
%"class.std::__1::vector.96" = type { %"class.std::__1::__vector_base.97" }
%"class.std::__1::__vector_base.97" = type { %"struct.std::__1::pair"*, %"struct.std::__1::pair"*, %"class.std::__1::__compressed_pair.98" }
%"struct.std::__1::pair" = type opaque
%"class.std::__1::__compressed_pair.98" = type { %"struct.std::__1::__compressed_pair_elem.99" }
%"struct.std::__1::__compressed_pair_elem.99" = type { %"struct.std::__1::pair"* }
%"class.v8::internal::NewSpace" = type { %"class.v8::internal::SpaceWithLinearArea", %"class.v8::base::Mutex", %"struct.std::__1::atomic", %"struct.std::__1::atomic", %"class.v8::internal::SemiSpace", %"class.v8::internal::SemiSpace", %"class.v8::internal::VirtualMemory", %"class.std::__1::vector.169" }
%"class.v8::internal::SpaceWithLinearArea" = type { %"class.v8::internal::Space", %"class.v8::internal::LinearAllocationArea", [3 x i64] }
%"class.v8::internal::Space" = type { %"class.v8::internal::BaseSpace", %"class.v8::internal::AllocationCounter", %"class.v8::internal::heap::List", %"struct.std::__1::atomic"*, %"class.std::__1::unique_ptr.163" }
%"class.v8::internal::BaseSpace" = type { i32 (...)**, %"class.v8::internal::Heap"*, i32, %"struct.std::__1::atomic", i64 }
%"class.v8::internal::AllocationCounter" = type <{ %"class.std::__1::vector.103", %"class.std::__1::vector.103", %"class.std::__1::unordered_set", i8, [7 x i8], i64, i64, i8, [7 x i8] }>
%"class.std::__1::vector.103" = type { %"class.std::__1::__vector_base.104" }
%"class.std::__1::__vector_base.104" = type { %"struct.v8::internal::AllocationCounter::AllocationObserverCounter"*, %"struct.v8::internal::AllocationCounter::AllocationObserverCounter"*, %"class.std::__1::__compressed_pair.105" }
%"struct.v8::internal::AllocationCounter::AllocationObserverCounter" = type { %"class.v8::internal::AllocationObserver"*, i64, i64 }
%"class.std::__1::__compressed_pair.105" = type { %"struct.std::__1::__compressed_pair_elem.106" }
%"struct.std::__1::__compressed_pair_elem.106" = type { %"struct.v8::internal::AllocationCounter::AllocationObserverCounter"* }
%"class.std::__1::unordered_set" = type { %"class.std::__1::__hash_table.110" }
%"class.std::__1::__hash_table.110" = type <{ %"class.std::__1::unique_ptr.111", %"class.std::__1::__compressed_pair.121", %"class.std::__1::__compressed_pair.126", %"class.std::__1::__compressed_pair.128", [4 x i8] }>
%"class.std::__1::unique_ptr.111" = type { %"class.std::__1::__compressed_pair.112" }
%"class.std::__1::__compressed_pair.112" = type { %"struct.std::__1::__compressed_pair_elem.113", %"struct.std::__1::__compressed_pair_elem.115" }
%"struct.std::__1::__compressed_pair_elem.113" = type { %"struct.std::__1::__hash_node_base.114"** }
%"struct.std::__1::__hash_node_base.114" = type { %"struct.std::__1::__hash_node_base.114"* }
%"struct.std::__1::__compressed_pair_elem.115" = type { %"class.std::__1::__bucket_list_deallocator.116" }
%"class.std::__1::__bucket_list_deallocator.116" = type { %"class.std::__1::__compressed_pair.117" }
%"class.std::__1::__compressed_pair.117" = type { %"struct.std::__1::__compressed_pair_elem.13" }
%"class.std::__1::__compressed_pair.121" = type { %"struct.std::__1::__compressed_pair_elem.122" }
%"struct.std::__1::__compressed_pair_elem.122" = type { %"struct.std::__1::__hash_node_base.114" }
%"class.std::__1::__compressed_pair.126" = type { %"struct.std::__1::__compressed_pair_elem.13" }
%"class.std::__1::__compressed_pair.128" = type { %"struct.std::__1::__compressed_pair_elem.85" }
%"class.v8::internal::heap::List" = type { %"class.v8::internal::MemoryChunk"*, %"class.v8::internal::MemoryChunk"* }
%"class.v8::internal::MemoryChunk" = type { %"class.v8::internal::BasicMemoryChunk", [2 x %"class.v8::internal::SlotSet"*], %"struct.std::__1::atomic", %"struct.std::__1::atomic.87", %"class.v8::internal::SlotSet"*, [2 x %"class.v8::internal::TypedSlotSet"*], [2 x %"class.std::__1::set.144"*], %"class.v8::base::Mutex"*, %"struct.std::__1::atomic.152", %"class.v8::base::Mutex"*, i64, [2 x %"struct.std::__1::atomic"], %"class.v8::internal::heap::ListNode", %"class.v8::internal::FreeListCategory"**, %"struct.std::__1::atomic.87", %"class.v8::internal::Bitmap"*, %"class.v8::internal::CodeObjectRegistry"*, %"class.v8::internal::PossiblyEmptyBuckets" }
%"class.v8::internal::BasicMemoryChunk" = type { i64, i64, %"class.v8::internal::Heap"*, i64, i64, i64, i64, %"struct.std::__1::atomic.87", %"struct.std::__1::atomic.133", %"class.v8::internal::VirtualMemory" }
%"struct.std::__1::atomic.133" = type { %"struct.std::__1::__atomic_base.134" }
%"struct.std::__1::__atomic_base.134" = type { %"struct.std::__1::__cxx_atomic_impl.135" }
%"struct.std::__1::__cxx_atomic_impl.135" = type { %"struct.std::__1::__cxx_atomic_base_impl.136" }
%"struct.std::__1::__cxx_atomic_base_impl.136" = type { %"class.v8::internal::BaseSpace"* }
%"class.v8::internal::SlotSet" = type { i8 }
%"class.v8::internal::TypedSlotSet" = type { %"class.v8::internal::TypedSlots", i64 }
%"class.v8::internal::TypedSlots" = type { i32 (...)**, %"struct.v8::internal::TypedSlots::Chunk"*, %"struct.v8::internal::TypedSlots::Chunk"* }
%"struct.v8::internal::TypedSlots::Chunk" = type { %"struct.v8::internal::TypedSlots::Chunk"*, %"class.std::__1::vector.137" }
%"class.std::__1::vector.137" = type { %"class.std::__1::__vector_base.138" }
%"class.std::__1::__vector_base.138" = type { %"struct.v8::internal::TypedSlots::TypedSlot"*, %"struct.v8::internal::TypedSlots::TypedSlot"*, %"class.std::__1::__compressed_pair.139" }
%"struct.v8::internal::TypedSlots::TypedSlot" = type { i32 }
%"class.std::__1::__compressed_pair.139" = type { %"struct.std::__1::__compressed_pair_elem.140" }
%"struct.std::__1::__compressed_pair_elem.140" = type { %"struct.v8::internal::TypedSlots::TypedSlot"* }
%"class.std::__1::set.144" = type { %"class.std::__1::__tree.145" }
%"class.std::__1::__tree.145" = type { %"class.std::__1::__tree_end_node"*, %"class.std::__1::__compressed_pair.146", %"class.std::__1::__compressed_pair.150" }
%"class.std::__1::__compressed_pair.146" = type { %"struct.std::__1::__compressed_pair_elem" }
%"class.std::__1::__compressed_pair.150" = type { %"struct.std::__1::__compressed_pair_elem.13" }
%"struct.std::__1::atomic.152" = type { %"struct.std::__1::__atomic_base.153" }
%"struct.std::__1::__atomic_base.153" = type { %"struct.std::__1::__cxx_atomic_impl.154" }
%"struct.std::__1::__cxx_atomic_impl.154" = type { %"struct.std::__1::__cxx_atomic_base_impl.155" }
%"struct.std::__1::__cxx_atomic_base_impl.155" = type { i64 }
%"class.v8::internal::heap::ListNode" = type { %"class.v8::internal::MemoryChunk"*, %"class.v8::internal::MemoryChunk"* }
%"class.v8::internal::FreeListCategory" = type { i32, i32, %"class.v8::internal::FreeSpace", %"class.v8::internal::FreeListCategory"*, %"class.v8::internal::FreeListCategory"* }
%"class.v8::internal::FreeSpace" = type { %"class.v8::internal::TorqueGeneratedFreeSpace" }
%"class.v8::internal::TorqueGeneratedFreeSpace" = type { %"class.v8::internal::HeapObject" }
%"class.v8::internal::Bitmap" = type { i8 }
%"class.v8::internal::CodeObjectRegistry" = type <{ %"class.std::__1::vector.156", i8, [7 x i8] }>
%"class.std::__1::vector.156" = type { %"class.std::__1::__vector_base.157" }
%"class.std::__1::__vector_base.157" = type { i64*, i64*, %"class.std::__1::__compressed_pair.158" }
%"class.std::__1::__compressed_pair.158" = type { %"struct.std::__1::__compressed_pair_elem.159" }
%"struct.std::__1::__compressed_pair_elem.159" = type { i64* }
%"class.v8::internal::PossiblyEmptyBuckets" = type { i64 }
%"class.std::__1::unique_ptr.163" = type { %"class.std::__1::__compressed_pair.164" }
%"class.std::__1::__compressed_pair.164" = type { %"struct.std::__1::__compressed_pair_elem.165" }
%"struct.std::__1::__compressed_pair_elem.165" = type { %"class.v8::internal::FreeList"* }
%"class.v8::internal::FreeList" = type { i32 (...)**, i32, i32, i64, %"struct.std::__1::atomic", %"class.v8::internal::FreeListCategory"**, i64 }
%"class.v8::internal::LinearAllocationArea" = type { i64, i64, i64 }
%"class.v8::internal::SemiSpace" = type { %"class.v8::internal::Space", i64, i64, i64, i64, i64, i32, %"class.v8::internal::Page"* }
%"class.v8::internal::Page" = type { %"class.v8::internal::MemoryChunk" }
%"class.v8::internal::VirtualMemory" = type { %"class.v8::PageAllocator"*, %"class.v8::base::AddressRegion" }
%"class.v8::base::AddressRegion" = type { i64, i64 }
%"class.std::__1::vector.169" = type { %"class.std::__1::__vector_base.170" }
%"class.std::__1::__vector_base.170" = type { %"struct.std::__1::pair.171"*, %"struct.std::__1::pair.171"*, %"class.std::__1::__compressed_pair.172" }
%"struct.std::__1::pair.171" = type { i32, i64 }
%"class.std::__1::__compressed_pair.172" = type { %"struct.std::__1::__compressed_pair_elem.173" }
%"struct.std::__1::__compressed_pair_elem.173" = type { %"struct.std::__1::pair.171"* }
%"class.v8::internal::CodeSpace" = type { %"class.v8::internal::PagedSpace" }
%"class.v8::internal::PagedSpace" = type { %"class.v8::internal::SpaceWithLinearArea", i32, i32, i64, %"class.v8::internal::AllocationStats", %"class.v8::base::Mutex", i64, i64 }
%"class.v8::internal::AllocationStats" = type { %"struct.std::__1::atomic", i64, %"struct.std::__1::atomic" }
%"class.v8::internal::OldLargeObjectSpace" = type { %"class.v8::internal::LargeObjectSpace" }
%"class.v8::internal::LargeObjectSpace" = type { %"class.v8::internal::Space", %"struct.std::__1::atomic", i32, %"struct.std::__1::atomic", %"class.v8::base::Mutex", %"struct.std::__1::atomic" }
%"class.v8::internal::CodeLargeObjectSpace" = type { %"class.v8::internal::OldLargeObjectSpace", %"class.std::__1::unordered_map.177" }
%"class.std::__1::unordered_map.177" = type { %"class.std::__1::__hash_table.178" }
%"class.std::__1::__hash_table.178" = type <{ %"class.std::__1::unique_ptr.179", %"class.std::__1::__compressed_pair.189", %"class.std::__1::__compressed_pair.194", %"class.std::__1::__compressed_pair.199", [4 x i8] }>
%"class.std::__1::unique_ptr.179" = type { %"class.std::__1::__compressed_pair.180" }
%"class.std::__1::__compressed_pair.180" = type { %"struct.std::__1::__compressed_pair_elem.181", %"struct.std::__1::__compressed_pair_elem.183" }
%"struct.std::__1::__compressed_pair_elem.181" = type { %"struct.std::__1::__hash_node_base.182"** }
%"struct.std::__1::__hash_node_base.182" = type { %"struct.std::__1::__hash_node_base.182"* }
%"struct.std::__1::__compressed_pair_elem.183" = type { %"class.std::__1::__bucket_list_deallocator.184" }
%"class.std::__1::__bucket_list_deallocator.184" = type { %"class.std::__1::__compressed_pair.185" }
%"class.std::__1::__compressed_pair.185" = type { %"struct.std::__1::__compressed_pair_elem.13" }
%"class.std::__1::__compressed_pair.189" = type { %"struct.std::__1::__compressed_pair_elem.190" }
%"struct.std::__1::__compressed_pair_elem.190" = type { %"struct.std::__1::__hash_node_base.182" }
%"class.std::__1::__compressed_pair.194" = type { %"struct.std::__1::__compressed_pair_elem.13" }
%"class.std::__1::__compressed_pair.199" = type { %"struct.std::__1::__compressed_pair_elem.85" }
%"class.v8::internal::NewLargeObjectSpace" = type { %"class.v8::internal::LargeObjectSpace", i64 }
%"class.v8::internal::ReadOnlySpace" = type { %"class.v8::internal::BaseSpace", i8, %"class.v8::internal::AllocationStats", %"class.std::__1::vector.205", i64, i64, i8, i64, i64 }
%"class.std::__1::vector.205" = type { %"class.std::__1::__vector_base.206" }
%"class.std::__1::__vector_base.206" = type { %"class.v8::internal::ReadOnlyPage"**, %"class.v8::internal::ReadOnlyPage"**, %"class.std::__1::__compressed_pair.207" }
%"class.v8::internal::ReadOnlyPage" = type { %"class.v8::internal::BasicMemoryChunk" }
%"class.std::__1::__compressed_pair.207" = type { %"struct.std::__1::__compressed_pair_elem.208" }
%"struct.std::__1::__compressed_pair_elem.208" = type { %"class.v8::internal::ReadOnlyPage"** }
%"class.v8::internal::OldSpace" = type { %"class.v8::internal::PagedSpace" }
%"class.v8::internal::MapSpace" = type { %"class.v8::internal::PagedSpace" }
%"class.std::__1::unique_ptr.212" = type { %"class.std::__1::__compressed_pair.213" }
%"class.std::__1::__compressed_pair.213" = type { %"struct.std::__1::__compressed_pair_elem.214" }
%"struct.std::__1::__compressed_pair_elem.214" = type { %"class.v8::internal::ConcurrentAllocator"* }
%"class.v8::internal::ConcurrentAllocator" = type { %"class.v8::internal::LocalHeap"*, %"class.v8::internal::PagedSpace"*, %"class.v8::internal::LocalAllocationBuffer" }
%"class.v8::internal::LocalAllocationBuffer" = type { %"class.v8::internal::Heap"*, %"class.v8::internal::LinearAllocationArea" }
%"class.v8::internal::LocalHeap" = type { %"class.v8::internal::Heap"*, i8, %"struct.std::__1::atomic.1092", i8, i8, %"class.v8::internal::LocalHeap"*, %"class.v8::internal::LocalHeap"*, %"class.std::__1::unique_ptr.1096", %"class.std::__1::unique_ptr.1102", %"class.std::__1::unique_ptr.540", %"class.std::__1::vector.1108", %"class.v8::internal::ConcurrentAllocator" }
%"struct.std::__1::atomic.1092" = type { %"struct.std::__1::__atomic_base.1093" }
%"struct.std::__1::__atomic_base.1093" = type { %"struct.std::__1::__cxx_atomic_impl.1094" }
%"struct.std::__1::__cxx_atomic_impl.1094" = type { %"struct.std::__1::__cxx_atomic_base_impl.1095" }
%"struct.std::__1::__cxx_atomic_base_impl.1095" = type { i32 }
%"class.std::__1::unique_ptr.1096" = type { %"class.std::__1::__compressed_pair.1097" }
%"class.std::__1::__compressed_pair.1097" = type { %"struct.std::__1::__compressed_pair_elem.1098" }
%"struct.std::__1::__compressed_pair_elem.1098" = type { %"class.v8::internal::LocalHandles"* }
%"class.v8::internal::LocalHandles" = type { %"struct.v8::internal::HandleScopeData", %"class.std::__1::vector.851" }
%"class.std::__1::vector.851" = type { %"class.std::__1::__vector_base.852" }
%"class.std::__1::__vector_base.852" = type { i64**, i64**, %"class.std::__1::__compressed_pair.853" }
%"class.std::__1::__compressed_pair.853" = type { %"struct.std::__1::__compressed_pair_elem.854" }
%"struct.std::__1::__compressed_pair_elem.854" = type { i64** }
%"class.std::__1::unique_ptr.1102" = type { %"class.std::__1::__compressed_pair.1103" }
%"class.std::__1::__compressed_pair.1103" = type { %"struct.std::__1::__compressed_pair_elem.1104" }
%"struct.std::__1::__compressed_pair_elem.1104" = type { %"class.v8::internal::PersistentHandles"* }
%"class.v8::internal::PersistentHandles" = type { %"class.v8::internal::Isolate"*, %"class.std::__1::vector.851", i64*, i64*, %"class.v8::internal::PersistentHandles"*, %"class.v8::internal::PersistentHandles"* }
%"class.std::__1::vector.1108" = type { %"class.std::__1::__vector_base.1109" }
%"class.std::__1::__vector_base.1109" = type { %"struct.std::__1::pair.1110"*, %"struct.std::__1::pair.1110"*, %"class.std::__1::__compressed_pair.1111" }
%"struct.std::__1::pair.1110" = type opaque
%"class.std::__1::__compressed_pair.1111" = type { %"struct.std::__1::__compressed_pair_elem.1112" }
%"struct.std::__1::__compressed_pair_elem.1112" = type { %"struct.std::__1::pair.1110"* }
%"class.v8::internal::ArrayBufferExtension" = type { %"struct.std::__1::atomic.218", %"struct.std::__1::atomic.222", %"class.std::__1::shared_ptr", %"class.v8::internal::ArrayBufferExtension"*, %"struct.std::__1::atomic" }
%"struct.std::__1::atomic.222" = type { %"struct.std::__1::__atomic_base.223" }
%"struct.std::__1::__atomic_base.223" = type { %"struct.std::__1::__cxx_atomic_impl.224" }
%"struct.std::__1::__cxx_atomic_impl.224" = type { %"struct.std::__1::__cxx_atomic_base_impl.225" }
%"struct.std::__1::__cxx_atomic_base_impl.225" = type { i8 }
%"class.std::__1::shared_ptr" = type { %"class.v8::internal::BackingStore"*, %"class.std::__1::__shared_weak_count"* }
%"class.v8::internal::BackingStore" = type <{ i8*, %"struct.std::__1::atomic", i64, %"union.v8::internal::BackingStore::TypeSpecificData", i16, [6 x i8] }>
%"union.v8::internal::BackingStore::TypeSpecificData" = type { %"class.std::__1::shared_ptr.226" }
%"class.std::__1::__shared_weak_count" = type { %"class.std::__1::__shared_count", i64 }
%"class.std::__1::__shared_count" = type { i32 (...)**, i64 }
%"struct.std::__1::atomic.227" = type { %"struct.std::__1::__atomic_base.228" }
%"struct.std::__1::__atomic_base.228" = type { %"struct.std::__1::__cxx_atomic_impl.229" }
%"struct.std::__1::__cxx_atomic_impl.229" = type { %"struct.std::__1::__cxx_atomic_base_impl.230" }
%"struct.std::__1::__cxx_atomic_base_impl.230" = type { i32 }
%"class.v8::internal::AllocationObserver" = type { i32 (...)**, i64 }
%"class.v8::internal::StressScavengeObserver" = type opaque
%"struct.std::__1::atomic" = type { %"struct.std::__1::__atomic_base" }
%"struct.std::__1::__atomic_base" = type { %"struct.std::__1::__atomic_base.1" }
%"struct.std::__1::__atomic_base.1" = type { %"struct.std::__1::__cxx_atomic_impl" }
%"struct.std::__1::__cxx_atomic_impl" = type { %"struct.std::__1::__cxx_atomic_base_impl" }
%"struct.std::__1::__cxx_atomic_base_impl" = type { i64 }
%"class.std::__1::vector.231" = type { %"class.std::__1::__vector_base.232" }
%"class.std::__1::__vector_base.232" = type { %"struct.v8::internal::Heap::GCCallbackTuple"*, %"struct.v8::internal::Heap::GCCallbackTuple"*, %"class.std::__1::__compressed_pair.233" }
%"struct.v8::internal::Heap::GCCallbackTuple" = type { void (%"class.v8::Isolate"*, i32, i32, i8*)*, i32, i8* }
%"class.v8::Isolate" = type { i8 }
%"class.std::__1::__compressed_pair.233" = type { %"struct.std::__1::__compressed_pair_elem.234" }
%"struct.std::__1::__compressed_pair_elem.234" = type { %"struct.v8::internal::Heap::GCCallbackTuple"* }
%"class.std::__1::unique_ptr.238" = type { %"class.std::__1::__compressed_pair.239" }
%"class.std::__1::__compressed_pair.239" = type { %"struct.std::__1::__compressed_pair_elem.240" }
%"struct.std::__1::__compressed_pair_elem.240" = type { %"class.v8::internal::GCTracer"* }
%"class.v8::internal::GCTracer" = type opaque
%"class.std::__1::unique_ptr.244" = type { %"class.std::__1::__compressed_pair.245" }
%"class.std::__1::__compressed_pair.245" = type { %"struct.std::__1::__compressed_pair_elem.246" }
%"struct.std::__1::__compressed_pair_elem.246" = type { %"class.v8::internal::MarkCompactCollector"* }
%"class.v8::internal::MarkCompactCollector" = type <{ %"class.v8::internal::MarkCompactCollectorBase", %"class.v8::base::Mutex", %"class.v8::base::Semaphore", i8, i8, i8, i8, i8, i8, [2 x i8], %"class.v8::internal::MarkingWorklists", %"class.v8::internal::WeakObjects", %"struct.v8::internal::EphemeronMarking", %"class.std::__1::unique_ptr.286", %"class.std::__1::unique_ptr.292", %"class.v8::internal::NativeContextInferrer", [7 x i8], %"class.v8::internal::NativeContextStats", %"class.std::__1::vector.346", %"class.std::__1::vector.346", %"class.std::__1::vector.346", %"class.std::__1::vector.353", %"class.v8::internal::Sweeper"*, %"class.v8::internal::MajorMarkingState", %"class.v8::internal::MajorNonAtomicMarkingState", [2 x i8], i32, i32, [4 x i8] }>
%"class.v8::internal::MarkCompactCollectorBase" = type { i32 (...)**, %"class.v8::internal::Heap"* }
%"class.v8::base::Semaphore" = type { %union.sem_t }
%union.sem_t = type { i64, [24 x i8] }
%"class.v8::internal::MarkingWorklists" = type { %"class.heap::base::Worklist", %"class.heap::base::Worklist", %"class.heap::base::Worklist.247", %"class.std::__1::vector.248", %"class.std::__1::vector.255", %"class.heap::base::Worklist" }
%"class.heap::base::Worklist.247" = type { %"class.v8::base::Mutex", %"class.heap::base::Worklist<v8::internal::HeapObject, 16>::Segment"*, %"struct.std::__1::atomic" }
%"class.heap::base::Worklist<v8::internal::HeapObject, 16>::Segment" = type opaque
%"class.std::__1::vector.248" = type { %"class.std::__1::__vector_base.249" }
%"class.std::__1::__vector_base.249" = type { %"struct.v8::internal::ContextWorklistPair"*, %"struct.v8::internal::ContextWorklistPair"*, %"class.std::__1::__compressed_pair.250" }
%"struct.v8::internal::ContextWorklistPair" = type { i64, %"class.heap::base::Worklist"* }
%"class.std::__1::__compressed_pair.250" = type { %"struct.std::__1::__compressed_pair_elem.251" }
%"struct.std::__1::__compressed_pair_elem.251" = type { %"struct.v8::internal::ContextWorklistPair"* }
%"class.std::__1::vector.255" = type { %"class.std::__1::__vector_base.256" }
%"class.std::__1::__vector_base.256" = type { %"class.std::__1::unique_ptr.257"*, %"class.std::__1::unique_ptr.257"*, %"class.std::__1::__compressed_pair.258" }
%"class.std::__1::unique_ptr.257" = type opaque
%"class.std::__1::__compressed_pair.258" = type { %"struct.std::__1::__compressed_pair_elem.259" }
%"struct.std::__1::__compressed_pair_elem.259" = type { %"class.std::__1::unique_ptr.257"* }
%"class.heap::base::Worklist" = type { %"class.v8::base::Mutex", %"class.heap::base::Worklist<v8::internal::HeapObject, 64>::Segment"*, %"struct.std::__1::atomic" }
%"class.heap::base::Worklist<v8::internal::HeapObject, 64>::Segment" = type opaque
%"class.v8::internal::WeakObjects" = type { %"class.v8::internal::Worklist", %"class.v8::internal::Worklist.263", %"class.v8::internal::Worklist.265", %"class.v8::internal::Worklist.265", %"class.v8::internal::Worklist.265", %"class.v8::internal::Worklist.267", %"class.v8::internal::Worklist.269", %"class.v8::internal::Worklist.271", %"class.v8::internal::Worklist.273", %"class.v8::internal::Worklist.275", %"class.v8::internal::Worklist.277" }
%"class.v8::internal::Worklist" = type <{ [8 x %"struct.v8::internal::Worklist<v8::internal::TransitionArray, 64>::PrivateSegmentHolder"], %"class.v8::internal::Worklist<v8::internal::TransitionArray, 64>::GlobalPool", i32, [4 x i8] }>
%"struct.v8::internal::Worklist<v8::internal::TransitionArray, 64>::PrivateSegmentHolder" = type { %"class.v8::internal::Worklist<v8::internal::TransitionArray, 64>::Segment"*, %"class.v8::internal::Worklist<v8::internal::TransitionArray, 64>::Segment"*, [64 x i8] }
%"class.v8::internal::Worklist<v8::internal::TransitionArray, 64>::Segment" = type opaque
%"class.v8::internal::Worklist<v8::internal::TransitionArray, 64>::GlobalPool" = type { %"class.v8::base::Mutex", %"class.v8::internal::Worklist<v8::internal::TransitionArray, 64>::Segment"*, %"struct.std::__1::atomic" }
%"class.v8::internal::Worklist.263" = type <{ [8 x %"struct.v8::internal::Worklist<v8::internal::EphemeronHashTable, 64>::PrivateSegmentHolder"], %"class.v8::internal::Worklist<v8::internal::EphemeronHashTable, 64>::GlobalPool", i32, [4 x i8] }>
%"struct.v8::internal::Worklist<v8::internal::EphemeronHashTable, 64>::PrivateSegmentHolder" = type { %"class.v8::internal::Worklist<v8::internal::EphemeronHashTable, 64>::Segment"*, %"class.v8::internal::Worklist<v8::internal::EphemeronHashTable, 64>::Segment"*, [64 x i8] }
%"class.v8::internal::Worklist<v8::internal::EphemeronHashTable, 64>::Segment" = type opaque
%"class.v8::internal::Worklist<v8::internal::EphemeronHashTable, 64>::GlobalPool" = type { %"class.v8::base::Mutex", %"class.v8::internal::Worklist<v8::internal::EphemeronHashTable, 64>::Segment"*, %"struct.std::__1::atomic" }
%"class.v8::internal::Worklist.265" = type <{ [8 x %"struct.v8::internal::Worklist<v8::internal::Ephemeron, 64>::PrivateSegmentHolder"], %"class.v8::internal::Worklist<v8::internal::Ephemeron, 64>::GlobalPool", i32, [4 x i8] }>
%"struct.v8::internal::Worklist<v8::internal::Ephemeron, 64>::PrivateSegmentHolder" = type { %"class.v8::internal::Worklist<v8::internal::Ephemeron, 64>::Segment"*, %"class.v8::internal::Worklist<v8::internal::Ephemeron, 64>::Segment"*, [64 x i8] }
%"class.v8::internal::Worklist<v8::internal::Ephemeron, 64>::Segment" = type opaque
%"class.v8::internal::Worklist<v8::internal::Ephemeron, 64>::GlobalPool" = type { %"class.v8::base::Mutex", %"class.v8::internal::Worklist<v8::internal::Ephemeron, 64>::Segment"*, %"struct.std::__1::atomic" }
%"class.v8::internal::Worklist.267" = type <{ [8 x %"struct.v8::internal::Worklist<std::__1::pair<v8::internal::HeapObject, v8::internal::CompressedHeapObjectSlot>, 64>::PrivateSegmentHolder"], %"class.v8::internal::Worklist<std::__1::pair<v8::internal::HeapObject, v8::internal::CompressedHeapObjectSlot>, 64>::GlobalPool", i32, [4 x i8] }>
%"struct.v8::internal::Worklist<std::__1::pair<v8::internal::HeapObject, v8::internal::CompressedHeapObjectSlot>, 64>::PrivateSegmentHolder" = type { %"class.v8::internal::Worklist<std::__1::pair<v8::internal::HeapObject, v8::internal::CompressedHeapObjectSlot>, 64>::Segment"*, %"class.v8::internal::Worklist<std::__1::pair<v8::internal::HeapObject, v8::internal::CompressedHeapObjectSlot>, 64>::Segment"*, [64 x i8] }
%"class.v8::internal::Worklist<std::__1::pair<v8::internal::HeapObject, v8::internal::CompressedHeapObjectSlot>, 64>::Segment" = type opaque
%"class.v8::internal::Worklist<std::__1::pair<v8::internal::HeapObject, v8::internal::CompressedHeapObjectSlot>, 64>::GlobalPool" = type { %"class.v8::base::Mutex", %"class.v8::internal::Worklist<std::__1::pair<v8::internal::HeapObject, v8::internal::CompressedHeapObjectSlot>, 64>::Segment"*, %"struct.std::__1::atomic" }
%"class.v8::internal::Worklist.269" = type <{ [8 x %"struct.v8::internal::Worklist<std::__1::pair<v8::internal::HeapObject, v8::internal::Code>, 64>::PrivateSegmentHolder"], %"class.v8::internal::Worklist<std::__1::pair<v8::internal::HeapObject, v8::internal::Code>, 64>::GlobalPool", i32, [4 x i8] }>
%"struct.v8::internal::Worklist<std::__1::pair<v8::internal::HeapObject, v8::internal::Code>, 64>::PrivateSegmentHolder" = type { %"class.v8::internal::Worklist<std::__1::pair<v8::internal::HeapObject, v8::internal::Code>, 64>::Segment"*, %"class.v8::internal::Worklist<std::__1::pair<v8::internal::HeapObject, v8::internal::Code>, 64>::Segment"*, [64 x i8] }
%"class.v8::internal::Worklist<std::__1::pair<v8::internal::HeapObject, v8::internal::Code>, 64>::Segment" = type opaque
%"class.v8::internal::Worklist<std::__1::pair<v8::internal::HeapObject, v8::internal::Code>, 64>::GlobalPool" = type { %"class.v8::base::Mutex", %"class.v8::internal::Worklist<std::__1::pair<v8::internal::HeapObject, v8::internal::Code>, 64>::Segment"*, %"struct.std::__1::atomic" }
%"class.v8::internal::Worklist.271" = type <{ [8 x %"struct.v8::internal::Worklist<v8::internal::JSWeakRef, 64>::PrivateSegmentHolder"], %"class.v8::internal::Worklist<v8::internal::JSWeakRef, 64>::GlobalPool", i32, [4 x i8] }>
%"struct.v8::internal::Worklist<v8::internal::JSWeakRef, 64>::PrivateSegmentHolder" = type { %"class.v8::internal::Worklist<v8::internal::JSWeakRef, 64>::Segment"*, %"class.v8::internal::Worklist<v8::internal::JSWeakRef, 64>::Segment"*, [64 x i8] }
%"class.v8::internal::Worklist<v8::internal::JSWeakRef, 64>::Segment" = type opaque
%"class.v8::internal::Worklist<v8::internal::JSWeakRef, 64>::GlobalPool" = type { %"class.v8::base::Mutex", %"class.v8::internal::Worklist<v8::internal::JSWeakRef, 64>::Segment"*, %"struct.std::__1::atomic" }
%"class.v8::internal::Worklist.273" = type <{ [8 x %"struct.v8::internal::Worklist<v8::internal::WeakCell, 64>::PrivateSegmentHolder"], %"class.v8::internal::Worklist<v8::internal::WeakCell, 64>::GlobalPool", i32, [4 x i8] }>
%"struct.v8::internal::Worklist<v8::internal::WeakCell, 64>::PrivateSegmentHolder" = type { %"class.v8::internal::Worklist<v8::internal::WeakCell, 64>::Segment"*, %"class.v8::internal::Worklist<v8::internal::WeakCell, 64>::Segment"*, [64 x i8] }
%"class.v8::internal::Worklist<v8::internal::WeakCell, 64>::Segment" = type opaque
%"class.v8::internal::Worklist<v8::internal::WeakCell, 64>::GlobalPool" = type { %"class.v8::base::Mutex", %"class.v8::internal::Worklist<v8::internal::WeakCell, 64>::Segment"*, %"struct.std::__1::atomic" }
%"class.v8::internal::Worklist.275" = type <{ [8 x %"struct.v8::internal::Worklist<v8::internal::SharedFunctionInfo, 64>::PrivateSegmentHolder"], %"class.v8::internal::Worklist<v8::internal::SharedFunctionInfo, 64>::GlobalPool", i32, [4 x i8] }>
%"struct.v8::internal::Worklist<v8::internal::SharedFunctionInfo, 64>::PrivateSegmentHolder" = type { %"class.v8::internal::Worklist<v8::internal::SharedFunctionInfo, 64>::Segment"*, %"class.v8::internal::Worklist<v8::internal::SharedFunctionInfo, 64>::Segment"*, [64 x i8] }
%"class.v8::internal::Worklist<v8::internal::SharedFunctionInfo, 64>::Segment" = type opaque
%"class.v8::internal::Worklist<v8::internal::SharedFunctionInfo, 64>::GlobalPool" = type { %"class.v8::base::Mutex", %"class.v8::internal::Worklist<v8::internal::SharedFunctionInfo, 64>::Segment"*, %"struct.std::__1::atomic" }
%"class.v8::internal::Worklist.277" = type <{ [8 x %"struct.v8::internal::Worklist<v8::internal::JSFunction, 64>::PrivateSegmentHolder"], %"class.v8::internal::Worklist<v8::internal::JSFunction, 64>::GlobalPool", i32, [4 x i8] }>
%"struct.v8::internal::Worklist<v8::internal::JSFunction, 64>::PrivateSegmentHolder" = type { %"class.v8::internal::Worklist<v8::internal::JSFunction, 64>::Segment"*, %"class.v8::internal::Worklist<v8::internal::JSFunction, 64>::Segment"*, [64 x i8] }
%"class.v8::internal::Worklist<v8::internal::JSFunction, 64>::Segment" = type opaque
%"class.v8::internal::Worklist<v8::internal::JSFunction, 64>::GlobalPool" = type { %"class.v8::base::Mutex", %"class.v8::internal::Worklist<v8::internal::JSFunction, 64>::Segment"*, %"struct.std::__1::atomic" }
%"struct.v8::internal::EphemeronMarking" = type { %"class.std::__1::vector.279", i8, i64 }
%"class.std::__1::vector.279" = type { %"class.std::__1::__vector_base.280" }
%"class.std::__1::__vector_base.280" = type { %"class.v8::internal::HeapObject"*, %"class.v8::internal::HeapObject"*, %"class.std::__1::__compressed_pair.281" }
%"class.std::__1::__compressed_pair.281" = type { %"struct.std::__1::__compressed_pair_elem.282" }
%"struct.std::__1::__compressed_pair_elem.282" = type { %"class.v8::internal::HeapObject"* }
%"class.std::__1::unique_ptr.286" = type { %"class.std::__1::__compressed_pair.287" }
%"class.std::__1::__compressed_pair.287" = type { %"struct.std::__1::__compressed_pair_elem.288" }
%"struct.std::__1::__compressed_pair_elem.288" = type { %"class.v8::internal::MainMarkingVisitor"* }
%"class.v8::internal::MainMarkingVisitor" = type opaque
%"class.std::__1::unique_ptr.292" = type { %"class.std::__1::__compressed_pair.293" }
%"class.std::__1::__compressed_pair.293" = type { %"struct.std::__1::__compressed_pair_elem.294" }
%"struct.std::__1::__compressed_pair_elem.294" = type { %"class.v8::internal::MarkingWorklists::Local"* }
%"class.v8::internal::MarkingWorklists::Local" = type { %"class.heap::base::Worklist<v8::internal::HeapObject, 64>::Local", %"class.heap::base::Worklist<v8::internal::HeapObject, 16>::Local", %"class.heap::base::Worklist<v8::internal::HeapObject, 64>::Local", i64, %"class.heap::base::Worklist<v8::internal::HeapObject, 64>::Local"*, i8, [7 x i8], %"class.std::__1::unordered_map.295" }
%"class.heap::base::Worklist<v8::internal::HeapObject, 16>::Local" = type { %"class.heap::base::Worklist.247"*, %"class.heap::base::internal::SegmentBase"*, %"class.heap::base::internal::SegmentBase"* }
%"class.heap::base::internal::SegmentBase" = type { i16, i16 }
%"class.heap::base::Worklist<v8::internal::HeapObject, 64>::Local" = type { %"class.heap::base::Worklist"*, %"class.heap::base::internal::SegmentBase"*, %"class.heap::base::internal::SegmentBase"* }
%"class.std::__1::unordered_map.295" = type { %"class.std::__1::__hash_table.296" }
%"class.std::__1::__hash_table.296" = type <{ %"class.std::__1::unique_ptr.297", %"class.std::__1::__compressed_pair.307", %"class.std::__1::__compressed_pair.312", %"class.std::__1::__compressed_pair.315", [4 x i8] }>
%"class.std::__1::unique_ptr.297" = type { %"class.std::__1::__compressed_pair.298" }
%"class.std::__1::__compressed_pair.298" = type { %"struct.std::__1::__compressed_pair_elem.299", %"struct.std::__1::__compressed_pair_elem.301" }
%"struct.std::__1::__compressed_pair_elem.299" = type { %"struct.std::__1::__hash_node_base.300"** }
%"struct.std::__1::__hash_node_base.300" = type { %"struct.std::__1::__hash_node_base.300"* }
%"struct.std::__1::__compressed_pair_elem.301" = type { %"class.std::__1::__bucket_list_deallocator.302" }
%"class.std::__1::__bucket_list_deallocator.302" = type { %"class.std::__1::__compressed_pair.303" }
%"class.std::__1::__compressed_pair.303" = type { %"struct.std::__1::__compressed_pair_elem.13" }
%"class.std::__1::__compressed_pair.307" = type { %"struct.std::__1::__compressed_pair_elem.308" }
%"struct.std::__1::__compressed_pair_elem.308" = type { %"struct.std::__1::__hash_node_base.300" }
%"class.std::__1::__compressed_pair.312" = type { %"struct.std::__1::__compressed_pair_elem.13" }
%"class.std::__1::__compressed_pair.315" = type { %"struct.std::__1::__compressed_pair_elem.85" }
%"class.v8::internal::NativeContextInferrer" = type { i8 }
%"class.v8::internal::NativeContextStats" = type { %"class.std::__1::unordered_map.322" }
%"class.std::__1::unordered_map.322" = type { %"class.std::__1::__hash_table.323" }
%"class.std::__1::__hash_table.323" = type <{ %"class.std::__1::unique_ptr.324", %"class.std::__1::__compressed_pair.334", %"class.std::__1::__compressed_pair.339", %"class.std::__1::__compressed_pair.342", [4 x i8] }>
%"class.std::__1::unique_ptr.324" = type { %"class.std::__1::__compressed_pair.325" }
%"class.std::__1::__compressed_pair.325" = type { %"struct.std::__1::__compressed_pair_elem.326", %"struct.std::__1::__compressed_pair_elem.328" }
%"struct.std::__1::__compressed_pair_elem.326" = type { %"struct.std::__1::__hash_node_base.327"** }
%"struct.std::__1::__hash_node_base.327" = type { %"struct.std::__1::__hash_node_base.327"* }
%"struct.std::__1::__compressed_pair_elem.328" = type { %"class.std::__1::__bucket_list_deallocator.329" }
%"class.std::__1::__bucket_list_deallocator.329" = type { %"class.std::__1::__compressed_pair.330" }
%"class.std::__1::__compressed_pair.330" = type { %"struct.std::__1::__compressed_pair_elem.13" }
%"class.std::__1::__compressed_pair.334" = type { %"struct.std::__1::__compressed_pair_elem.335" }
%"struct.std::__1::__compressed_pair_elem.335" = type { %"struct.std::__1::__hash_node_base.327" }
%"class.std::__1::__compressed_pair.339" = type { %"struct.std::__1::__compressed_pair_elem.13" }
%"class.std::__1::__compressed_pair.342" = type { %"struct.std::__1::__compressed_pair_elem.85" }
%"class.std::__1::vector.346" = type { %"class.std::__1::__vector_base.347" }
%"class.std::__1::__vector_base.347" = type { %"class.v8::internal::Page"**, %"class.v8::internal::Page"**, %"class.std::__1::__compressed_pair.348" }
%"class.std::__1::__compressed_pair.348" = type { %"struct.std::__1::__compressed_pair_elem.349" }
%"struct.std::__1::__compressed_pair_elem.349" = type { %"class.v8::internal::Page"** }
%"class.std::__1::vector.353" = type { %"class.std::__1::__vector_base.354" }
%"class.std::__1::__vector_base.354" = type { %"struct.std::__1::pair.355"*, %"struct.std::__1::pair.355"*, %"class.std::__1::__compressed_pair.356" }
%"struct.std::__1::pair.355" = type opaque
%"class.std::__1::__compressed_pair.356" = type { %"struct.std::__1::__compressed_pair_elem.357" }
%"struct.std::__1::__compressed_pair_elem.357" = type { %"struct.std::__1::pair.355"* }
%"class.v8::internal::Sweeper" = type <{ %"class.v8::internal::Heap"*, %"class.v8::internal::MajorNonAtomicMarkingState"*, %"class.std::__1::unique_ptr.361", %"class.v8::base::Mutex", [3 x %"class.std::__1::vector.346"], [3 x %"class.std::__1::vector.346"], i8, %"struct.std::__1::atomic.218", [6 x i8], %"class.std::__1::vector.346", i64, %"class.v8::base::Semaphore", i8, i8, i8, [5 x i8] }>
%"class.std::__1::unique_ptr.361" = type { %"class.std::__1::__compressed_pair.362" }
%"class.std::__1::__compressed_pair.362" = type { %"struct.std::__1::__compressed_pair_elem.363" }
%"struct.std::__1::__compressed_pair_elem.363" = type { %"class.v8::JobHandle"* }
%"class.v8::JobHandle" = type { i32 (...)** }
%"class.v8::internal::MajorMarkingState" = type { i8 }
%"class.v8::internal::MajorNonAtomicMarkingState" = type { i8 }
%"class.v8::internal::MinorMarkCompactCollector" = type <{ %"class.v8::internal::MarkCompactCollectorBase", %"class.v8::internal::Worklist.371"*, %"class.v8::internal::YoungGenerationMarkingVisitor"*, %"class.v8::base::Semaphore", %"class.std::__1::vector.346", %"class.std::__1::vector.346", %"class.v8::internal::MinorMarkingState", %"class.v8::internal::MinorNonAtomicMarkingState", [6 x i8] }>
%"class.v8::internal::Worklist.371" = type opaque
%"class.v8::internal::YoungGenerationMarkingVisitor" = type opaque
%"class.v8::internal::MinorMarkingState" = type { i8 }
%"class.v8::internal::MinorNonAtomicMarkingState" = type { i8 }
%"class.std::__1::unique_ptr.374" = type { %"class.std::__1::__compressed_pair.375" }
%"class.std::__1::__compressed_pair.375" = type { %"struct.std::__1::__compressed_pair_elem.376" }
%"struct.std::__1::__compressed_pair_elem.376" = type { %"class.v8::internal::ScavengerCollector"* }
%"class.v8::internal::ScavengerCollector" = type opaque
%"class.std::__1::unique_ptr.380" = type { %"class.std::__1::__compressed_pair.381" }
%"class.std::__1::__compressed_pair.381" = type { %"struct.std::__1::__compressed_pair_elem.382" }
%"struct.std::__1::__compressed_pair_elem.382" = type { %"class.v8::internal::ArrayBufferSweeper"* }
%"class.v8::internal::ArrayBufferSweeper" = type opaque
%"class.std::__1::unique_ptr.386" = type { %"class.std::__1::__compressed_pair.387" }
%"class.std::__1::__compressed_pair.387" = type { %"struct.std::__1::__compressed_pair_elem.388" }
%"struct.std::__1::__compressed_pair_elem.388" = type { %"class.v8::internal::MemoryAllocator"* }
%"class.v8::internal::MemoryAllocator" = type { %"class.v8::internal::Isolate"*, %"class.v8::PageAllocator"*, %"class.v8::PageAllocator"*, i64, %"struct.std::__1::atomic", %"struct.std::__1::atomic", %"struct.std::__1::atomic", %"struct.std::__1::atomic", %"class.v8::internal::VirtualMemory", %"class.v8::internal::MemoryAllocator::Unmapper", %"class.std::__1::unordered_set.396", %"class.v8::base::Mutex" }
%"class.v8::internal::MemoryAllocator::Unmapper" = type { %"class.v8::internal::Heap"*, %"class.v8::internal::MemoryAllocator"*, %"class.v8::base::Mutex", [3 x %"class.std::__1::vector.389"], %"class.std::__1::unique_ptr.361" }
%"class.std::__1::vector.389" = type { %"class.std::__1::__vector_base.390" }
%"class.std::__1::__vector_base.390" = type { %"class.v8::internal::MemoryChunk"**, %"class.v8::internal::MemoryChunk"**, %"class.std::__1::__compressed_pair.391" }
%"class.std::__1::__compressed_pair.391" = type { %"struct.std::__1::__compressed_pair_elem.392" }
%"struct.std::__1::__compressed_pair_elem.392" = type { %"class.v8::internal::MemoryChunk"** }
%"class.std::__1::unique_ptr.425" = type { %"class.std::__1::__compressed_pair.426" }
%"class.std::__1::__compressed_pair.426" = type { %"struct.std::__1::__compressed_pair_elem.427" }
%"struct.std::__1::__compressed_pair_elem.427" = type { %"class.v8::internal::IncrementalMarking"* }
%"class.v8::internal::IncrementalMarking" = type { %"class.v8::internal::Heap"*, %"class.v8::internal::MarkCompactCollector"*, %"class.v8::internal::WeakObjects"*, double, double, i64, i64, i64, i64, double, i64, %"struct.std::__1::atomic.428", i8, i8, i8, i8, [3 x i8], %"class.v8::internal::IncrementalMarkingJob", %"struct.std::__1::atomic.432", %"class.v8::internal::IncrementalMarking::Observer", %"class.v8::internal::IncrementalMarking::Observer", %"class.v8::internal::MajorMarkingState", %"class.v8::internal::MajorAtomicMarkingState", %"class.v8::internal::MajorNonAtomicMarkingState", %"class.v8::base::Mutex", %"class.std::__1::unordered_map.437" }
%"struct.std::__1::atomic.428" = type { %"struct.std::__1::__atomic_base.429" }
%"struct.std::__1::__atomic_base.429" = type { %"struct.std::__1::__cxx_atomic_impl.430" }
%"struct.std::__1::__cxx_atomic_impl.430" = type { %"struct.std::__1::__cxx_atomic_base_impl.431" }
%"struct.std::__1::__cxx_atomic_base_impl.431" = type { i8 }
%"class.v8::internal::IncrementalMarkingJob" = type <{ %"class.v8::base::Mutex", double, i8, i8, [6 x i8] }>
%"struct.std::__1::atomic.432" = type { %"struct.std::__1::__atomic_base.433" }
%"struct.std::__1::__atomic_base.433" = type { %"struct.std::__1::__cxx_atomic_impl.434" }
%"struct.std::__1::__cxx_atomic_impl.434" = type { %"struct.std::__1::__cxx_atomic_base_impl.435" }
%"struct.std::__1::__cxx_atomic_base_impl.435" = type { i32 }
%"class.v8::internal::IncrementalMarking::Observer" = type { %"class.v8::internal::AllocationObserver", %"class.v8::internal::IncrementalMarking"* }
%"class.v8::internal::MajorAtomicMarkingState" = type { i8 }
%"class.std::__1::unordered_map.437" = type { %"class.std::__1::__hash_table.438" }
%"class.std::__1::__hash_table.438" = type <{ %"class.std::__1::unique_ptr.439", %"class.std::__1::__compressed_pair.449", %"class.std::__1::__compressed_pair.454", %"class.std::__1::__compressed_pair.457", [4 x i8] }>
%"class.std::__1::unique_ptr.439" = type { %"class.std::__1::__compressed_pair.440" }
%"class.std::__1::__compressed_pair.440" = type { %"struct.std::__1::__compressed_pair_elem.441", %"struct.std::__1::__compressed_pair_elem.443" }
%"struct.std::__1::__compressed_pair_elem.441" = type { %"struct.std::__1::__hash_node_base.442"** }
%"struct.std::__1::__hash_node_base.442" = type { %"struct.std::__1::__hash_node_base.442"* }
%"struct.std::__1::__compressed_pair_elem.443" = type { %"class.std::__1::__bucket_list_deallocator.444" }
%"class.std::__1::__bucket_list_deallocator.444" = type { %"class.std::__1::__compressed_pair.445" }
%"class.std::__1::__compressed_pair.445" = type { %"struct.std::__1::__compressed_pair_elem.13" }
%"class.std::__1::__compressed_pair.449" = type { %"struct.std::__1::__compressed_pair_elem.450" }
%"struct.std::__1::__compressed_pair_elem.450" = type { %"struct.std::__1::__hash_node_base.442" }
%"class.std::__1::__compressed_pair.454" = type { %"struct.std::__1::__compressed_pair_elem.13" }
%"class.std::__1::__compressed_pair.457" = type { %"struct.std::__1::__compressed_pair_elem.85" }
%"class.std::__1::unique_ptr.464" = type { %"class.std::__1::__compressed_pair.465" }
%"class.std::__1::__compressed_pair.465" = type { %"struct.std::__1::__compressed_pair_elem.466" }
%"struct.std::__1::__compressed_pair_elem.466" = type { %"class.v8::internal::ConcurrentMarking"* }
%"class.v8::internal::ConcurrentMarking" = type <{ %"class.std::__1::unique_ptr.361", %"class.v8::internal::Heap"*, %"class.v8::internal::MarkingWorklists"*, %"class.v8::internal::WeakObjects"*, [8 x %"struct.v8::internal::ConcurrentMarking::TaskState"], %"struct.std::__1::atomic", %"struct.std::__1::atomic.218", [7 x i8] }>
%"struct.v8::internal::ConcurrentMarking::TaskState" = type { i64, %"class.std::__1::unordered_map.467", %"class.v8::internal::NativeContextInferrer", [7 x i8], %"class.v8::internal::NativeContextStats", [64 x i8] }
%"class.std::__1::unordered_map.467" = type { %"class.std::__1::__hash_table.468" }
%"class.std::__1::__hash_table.468" = type <{ %"class.std::__1::unique_ptr.469", %"class.std::__1::__compressed_pair.479", %"class.std::__1::__compressed_pair.484", %"class.std::__1::__compressed_pair.487", [4 x i8] }>
%"class.std::__1::unique_ptr.469" = type { %"class.std::__1::__compressed_pair.470" }
%"class.std::__1::__compressed_pair.470" = type { %"struct.std::__1::__compressed_pair_elem.471", %"struct.std::__1::__compressed_pair_elem.473" }
%"struct.std::__1::__compressed_pair_elem.471" = type { %"struct.std::__1::__hash_node_base.472"** }
%"struct.std::__1::__hash_node_base.472" = type { %"struct.std::__1::__hash_node_base.472"* }
%"struct.std::__1::__compressed_pair_elem.473" = type { %"class.std::__1::__bucket_list_deallocator.474" }
%"class.std::__1::__bucket_list_deallocator.474" = type { %"class.std::__1::__compressed_pair.475" }
%"class.std::__1::__compressed_pair.475" = type { %"struct.std::__1::__compressed_pair_elem.13" }
%"class.std::__1::__compressed_pair.479" = type { %"struct.std::__1::__compressed_pair_elem.480" }
%"struct.std::__1::__compressed_pair_elem.480" = type { %"struct.std::__1::__hash_node_base.472" }
%"class.std::__1::__compressed_pair.484" = type { %"struct.std::__1::__compressed_pair_elem.13" }
%"class.std::__1::__compressed_pair.487" = type { %"struct.std::__1::__compressed_pair_elem.85" }
%"class.std::__1::unique_ptr.494" = type { %"class.std::__1::__compressed_pair.495" }
%"class.std::__1::__compressed_pair.495" = type { %"struct.std::__1::__compressed_pair_elem.496" }
%"struct.std::__1::__compressed_pair_elem.496" = type { %"class.v8::internal::GCIdleTimeHandler"* }
%"class.v8::internal::GCIdleTimeHandler" = type opaque
%"class.std::__1::unique_ptr.500" = type { %"class.std::__1::__compressed_pair.501" }
%"class.std::__1::__compressed_pair.501" = type { %"struct.std::__1::__compressed_pair_elem.502" }
%"struct.std::__1::__compressed_pair_elem.502" = type { %"class.v8::internal::MemoryMeasurement"* }
%"class.v8::internal::MemoryMeasurement" = type { %"class.std::__1::list", %"class.std::__1::list", %"class.std::__1::list", %"class.v8::internal::Isolate"*, i8, i8, i8, %"class.v8::base::RandomNumberGenerator" }
%"class.std::__1::list" = type { %"class.std::__1::__list_imp" }
%"class.std::__1::__list_imp" = type { %"struct.std::__1::__list_node_base", %"class.std::__1::__compressed_pair.503" }
%"struct.std::__1::__list_node_base" = type { %"struct.std::__1::__list_node_base"*, %"struct.std::__1::__list_node_base"* }
%"class.std::__1::__compressed_pair.503" = type { %"struct.std::__1::__compressed_pair_elem.13" }
%"class.v8::base::RandomNumberGenerator" = type { i64, i64, i64 }
%"class.std::__1::unique_ptr.510" = type { %"class.std::__1::__compressed_pair.511" }
%"class.std::__1::__compressed_pair.511" = type { %"struct.std::__1::__compressed_pair_elem.512" }
%"struct.std::__1::__compressed_pair_elem.512" = type { %"class.v8::internal::MemoryReducer"* }
%"class.v8::internal::MemoryReducer" = type opaque
%"class.std::__1::unique_ptr.516" = type { %"class.std::__1::__compressed_pair.517" }
%"class.std::__1::__compressed_pair.517" = type { %"struct.std::__1::__compressed_pair_elem.518" }
%"struct.std::__1::__compressed_pair_elem.518" = type { %"class.v8::internal::ObjectStats"* }
%"class.v8::internal::ObjectStats" = type opaque
%"class.std::__1::unique_ptr.522" = type { %"class.std::__1::__compressed_pair.523" }
%"class.std::__1::__compressed_pair.523" = type { %"struct.std::__1::__compressed_pair_elem.524" }
%"struct.std::__1::__compressed_pair_elem.524" = type { %"class.v8::internal::ScavengeJob"* }
%"class.v8::internal::ScavengeJob" = type opaque
%"class.std::__1::unique_ptr.528" = type { %"class.std::__1::__compressed_pair.529" }
%"class.std::__1::__compressed_pair.529" = type { %"struct.std::__1::__compressed_pair_elem.530" }
%"struct.std::__1::__compressed_pair_elem.530" = type { %"class.v8::internal::AllocationObserver"* }
%"class.std::__1::unique_ptr.534" = type { %"class.std::__1::__compressed_pair.535" }
%"class.std::__1::__compressed_pair.535" = type { %"struct.std::__1::__compressed_pair_elem.536" }
%"struct.std::__1::__compressed_pair_elem.536" = type { %"class.v8::internal::LocalEmbedderHeapTracer"* }
%"class.v8::internal::LocalEmbedderHeapTracer" = type opaque
%"class.std::__1::unique_ptr.540" = type { %"class.std::__1::__compressed_pair.541" }
%"class.std::__1::__compressed_pair.541" = type { %"struct.std::__1::__compressed_pair_elem.542" }
%"struct.std::__1::__compressed_pair_elem.542" = type { %"class.v8::internal::MarkingBarrier"* }
%"class.v8::internal::MarkingBarrier" = type opaque
%"class.std::__1::shared_ptr.546" = type { %"class.v8::internal::CodeRange"*, %"class.std::__1::__shared_weak_count"* }
%"class.v8::internal::CodeRange" = type { %"class.v8::internal::VirtualMemoryCage", %"struct.std::__1::atomic.547", %"class.v8::base::Mutex" }
%"class.v8::internal::VirtualMemoryCage" = type { i32 (...)**, i64, %"class.std::__1::unique_ptr.5", %"class.v8::internal::VirtualMemory" }
%"class.std::__1::unique_ptr.5" = type { %"class.std::__1::__compressed_pair.6" }
%"class.std::__1::__compressed_pair.6" = type { %"struct.std::__1::__compressed_pair_elem.7" }
%"struct.std::__1::__compressed_pair_elem.7" = type { %"class.v8::base::BoundedPageAllocator"* }
%"class.v8::base::BoundedPageAllocator" = type { %"class.v8::PageAllocator", %"class.v8::base::Mutex", i64, i64, %"class.v8::PageAllocator"*, %"class.v8::base::RegionAllocator" }
%"class.v8::base::RegionAllocator" = type { %"class.v8::base::RegionAllocator::Region", i64, i64, i64, i64, %"class.std::__1::set.8", %"class.std::__1::set.15" }
%"class.v8::base::RegionAllocator::Region" = type <{ %"class.v8::base::AddressRegion", i32, [4 x i8] }>
%"class.std::__1::set.8" = type { %"class.std::__1::__tree.9" }
%"class.std::__1::__tree.9" = type { %"class.std::__1::__tree_end_node"*, %"class.std::__1::__compressed_pair.10", %"class.std::__1::__compressed_pair.12" }
%"class.std::__1::__compressed_pair.10" = type { %"struct.std::__1::__compressed_pair_elem" }
%"class.std::__1::__compressed_pair.12" = type { %"struct.std::__1::__compressed_pair_elem.13" }
%"class.std::__1::set.15" = type { %"class.std::__1::__tree.16" }
%"class.std::__1::__tree.16" = type { %"class.std::__1::__tree_end_node"*, %"class.std::__1::__compressed_pair.10", %"class.std::__1::__compressed_pair.17" }
%"class.std::__1::__compressed_pair.17" = type { %"struct.std::__1::__compressed_pair_elem.13" }
%"struct.std::__1::atomic.547" = type { %"struct.std::__1::__atomic_base.548" }
%"struct.std::__1::__atomic_base.548" = type { %"struct.std::__1::__cxx_atomic_impl.549" }
%"struct.std::__1::__cxx_atomic_impl.549" = type { %"struct.std::__1::__cxx_atomic_base_impl.550" }
%"struct.std::__1::__cxx_atomic_base_impl.550" = type { i8* }
%"class.v8::CppHeap" = type opaque
%"class.v8::EmbedderRootsHandler" = type { i32 (...)** }
%"class.v8::internal::StrongRootsEntry" = type { %"class.v8::internal::FullObjectSlot", %"class.v8::internal::FullObjectSlot", %"class.v8::internal::StrongRootsEntry"*, %"class.v8::internal::StrongRootsEntry"* }
%"class.v8::internal::FullObjectSlot" = type { %"class.v8::internal::SlotBase" }
%"class.v8::internal::SlotBase" = type { i64 }
%"class.std::__1::unordered_map.551" = type { %"class.std::__1::__hash_table.552" }
%"class.std::__1::__hash_table.552" = type <{ %"class.std::__1::unique_ptr.553", %"class.std::__1::__compressed_pair.563", %"class.std::__1::__compressed_pair.568", %"class.std::__1::__compressed_pair.571", [4 x i8] }>
%"class.std::__1::unique_ptr.553" = type { %"class.std::__1::__compressed_pair.554" }
%"class.std::__1::__compressed_pair.554" = type { %"struct.std::__1::__compressed_pair_elem.555", %"struct.std::__1::__compressed_pair_elem.557" }
%"struct.std::__1::__compressed_pair_elem.555" = type { %"struct.std::__1::__hash_node_base.556"** }
%"struct.std::__1::__hash_node_base.556" = type { %"struct.std::__1::__hash_node_base.556"* }
%"struct.std::__1::__compressed_pair_elem.557" = type { %"class.std::__1::__bucket_list_deallocator.558" }
%"class.std::__1::__bucket_list_deallocator.558" = type { %"class.std::__1::__compressed_pair.559" }
%"class.std::__1::__compressed_pair.559" = type { %"struct.std::__1::__compressed_pair_elem.13" }
%"class.std::__1::__compressed_pair.563" = type { %"struct.std::__1::__compressed_pair_elem.564" }
%"struct.std::__1::__compressed_pair_elem.564" = type { %"struct.std::__1::__hash_node_base.556" }
%"class.std::__1::__compressed_pair.568" = type { %"struct.std::__1::__compressed_pair_elem.13" }
%"class.std::__1::__compressed_pair.571" = type { %"struct.std::__1::__compressed_pair_elem.85" }
%"class.std::__1::unique_ptr.577" = type { %"class.std::__1::__compressed_pair.578" }
%"class.std::__1::__compressed_pair.578" = type { %"struct.std::__1::__compressed_pair_elem.579" }
%"struct.std::__1::__compressed_pair_elem.579" = type { %"class.v8::internal::GlobalHandleVector"* }
%"class.v8::internal::GlobalHandleVector" = type opaque
%"class.std::__1::unique_ptr.583" = type { %"class.std::__1::__compressed_pair.584" }
%"class.std::__1::__compressed_pair.584" = type { %"struct.std::__1::__compressed_pair_elem.585" }
%"struct.std::__1::__compressed_pair_elem.585" = type { %"class.v8::internal::GlobalSafepoint"* }
%"class.v8::internal::GlobalSafepoint" = type opaque
%"class.v8::internal::Heap::ExternalStringTable" = type { %"class.v8::internal::Heap"*, %"class.std::__1::vector.589", %"class.std::__1::vector.589" }
%"class.std::__1::unique_ptr.596" = type { %"class.std::__1::__compressed_pair.597" }
%"class.std::__1::__compressed_pair.597" = type { %"struct.std::__1::__compressed_pair_elem.598" }
%"struct.std::__1::__compressed_pair_elem.598" = type { %"class.v8::internal::CollectionBarrier"* }
%"class.v8::internal::CollectionBarrier" = type opaque
%"class.std::__1::unordered_set.396" = type { %"class.std::__1::__hash_table.397" }
%"class.std::__1::__hash_table.397" = type <{ %"class.std::__1::unique_ptr.398", %"class.std::__1::__compressed_pair.408", %"class.std::__1::__compressed_pair.413", %"class.std::__1::__compressed_pair.417", [4 x i8] }>
%"class.std::__1::unique_ptr.398" = type { %"class.std::__1::__compressed_pair.399" }
%"class.std::__1::__compressed_pair.399" = type { %"struct.std::__1::__compressed_pair_elem.400", %"struct.std::__1::__compressed_pair_elem.402" }
%"struct.std::__1::__compressed_pair_elem.400" = type { %"struct.std::__1::__hash_node_base.401"** }
%"struct.std::__1::__hash_node_base.401" = type { %"struct.std::__1::__hash_node_base.401"* }
%"struct.std::__1::__compressed_pair_elem.402" = type { %"class.std::__1::__bucket_list_deallocator.403" }
%"class.std::__1::__bucket_list_deallocator.403" = type { %"class.std::__1::__compressed_pair.404" }
%"class.std::__1::__compressed_pair.404" = type { %"struct.std::__1::__compressed_pair_elem.13" }
%"class.std::__1::__compressed_pair.408" = type { %"struct.std::__1::__compressed_pair_elem.409" }
%"struct.std::__1::__compressed_pair_elem.409" = type { %"struct.std::__1::__hash_node_base.401" }
%"class.std::__1::__compressed_pair.413" = type { %"struct.std::__1::__compressed_pair_elem.13" }
%"class.std::__1::__compressed_pair.417" = type { %"struct.std::__1::__compressed_pair_elem.85" }
%"class.std::__1::unordered_map.628" = type { %"class.std::__1::__hash_table.629" }
%"class.std::__1::__hash_table.629" = type <{ %"class.std::__1::unique_ptr.630", %"class.std::__1::__compressed_pair.640", %"class.std::__1::__compressed_pair.645", %"class.std::__1::__compressed_pair.648", [4 x i8] }>
%"class.std::__1::unique_ptr.630" = type { %"class.std::__1::__compressed_pair.631" }
%"class.std::__1::__compressed_pair.631" = type { %"struct.std::__1::__compressed_pair_elem.632", %"struct.std::__1::__compressed_pair_elem.634" }
%"struct.std::__1::__compressed_pair_elem.632" = type { %"struct.std::__1::__hash_node_base.633"** }
%"struct.std::__1::__hash_node_base.633" = type { %"struct.std::__1::__hash_node_base.633"* }
%"struct.std::__1::__compressed_pair_elem.634" = type { %"class.std::__1::__bucket_list_deallocator.635" }
%"class.std::__1::__bucket_list_deallocator.635" = type { %"class.std::__1::__compressed_pair.636" }
%"class.std::__1::__compressed_pair.636" = type { %"struct.std::__1::__compressed_pair_elem.13" }
%"class.std::__1::__compressed_pair.640" = type { %"struct.std::__1::__compressed_pair_elem.641" }
%"struct.std::__1::__compressed_pair_elem.641" = type { %"struct.std::__1::__hash_node_base.633" }
%"class.std::__1::__compressed_pair.645" = type { %"struct.std::__1::__compressed_pair_elem.13" }
%"class.std::__1::__compressed_pair.648" = type { %"struct.std::__1::__compressed_pair_elem.85" }
%"class.std::__1::unordered_map.602" = type { %"class.std::__1::__hash_table.603" }
%"class.std::__1::__hash_table.603" = type <{ %"class.std::__1::unique_ptr.604", %"class.std::__1::__compressed_pair.614", %"class.std::__1::__compressed_pair.619", %"class.std::__1::__compressed_pair.622", [4 x i8] }>
%"class.std::__1::unique_ptr.604" = type { %"class.std::__1::__compressed_pair.605" }
%"class.std::__1::__compressed_pair.605" = type { %"struct.std::__1::__compressed_pair_elem.606", %"struct.std::__1::__compressed_pair_elem.608" }
%"struct.std::__1::__compressed_pair_elem.606" = type { %"struct.std::__1::__hash_node_base.607"** }
%"struct.std::__1::__hash_node_base.607" = type { %"struct.std::__1::__hash_node_base.607"* }
%"struct.std::__1::__compressed_pair_elem.608" = type { %"class.std::__1::__bucket_list_deallocator.609" }
%"class.std::__1::__bucket_list_deallocator.609" = type { %"class.std::__1::__compressed_pair.610" }
%"class.std::__1::__compressed_pair.610" = type { %"struct.std::__1::__compressed_pair_elem.13" }
%"class.std::__1::__compressed_pair.614" = type { %"struct.std::__1::__compressed_pair_elem.615" }
%"struct.std::__1::__compressed_pair_elem.615" = type { %"struct.std::__1::__hash_node_base.607" }
%"class.std::__1::__compressed_pair.619" = type { %"struct.std::__1::__compressed_pair_elem.13" }
%"class.std::__1::__compressed_pair.622" = type { %"struct.std::__1::__compressed_pair_elem.85" }
%"class.std::__1::unordered_map.652" = type { %"class.std::__1::__hash_table.653" }
%"class.std::__1::__hash_table.653" = type <{ %"class.std::__1::unique_ptr.654", %"class.std::__1::__compressed_pair.664", %"class.std::__1::__compressed_pair.669", %"class.std::__1::__compressed_pair.674", [4 x i8] }>
%"class.std::__1::unique_ptr.654" = type { %"class.std::__1::__compressed_pair.655" }
%"class.std::__1::__compressed_pair.655" = type { %"struct.std::__1::__compressed_pair_elem.656", %"struct.std::__1::__compressed_pair_elem.658" }
%"struct.std::__1::__compressed_pair_elem.656" = type { %"struct.std::__1::__hash_node_base.657"** }
%"struct.std::__1::__hash_node_base.657" = type { %"struct.std::__1::__hash_node_base.657"* }
%"struct.std::__1::__compressed_pair_elem.658" = type { %"class.std::__1::__bucket_list_deallocator.659" }
%"class.std::__1::__bucket_list_deallocator.659" = type { %"class.std::__1::__compressed_pair.660" }
%"class.std::__1::__compressed_pair.660" = type { %"struct.std::__1::__compressed_pair_elem.13" }
%"class.std::__1::__compressed_pair.664" = type { %"struct.std::__1::__compressed_pair_elem.665" }
%"struct.std::__1::__compressed_pair_elem.665" = type { %"struct.std::__1::__hash_node_base.657" }
%"class.std::__1::__compressed_pair.669" = type { %"struct.std::__1::__compressed_pair_elem.13" }
%"class.std::__1::__compressed_pair.674" = type { %"struct.std::__1::__compressed_pair_elem.85" }
%"class.std::__1::vector.680" = type { %"class.std::__1::__vector_base.681" }
%"class.std::__1::__vector_base.681" = type { %"class.v8::internal::HeapObjectAllocationTracker"**, %"class.v8::internal::HeapObjectAllocationTracker"**, %"class.std::__1::__compressed_pair.682" }
%"class.v8::internal::HeapObjectAllocationTracker" = type { i32 (...)** }
%"class.std::__1::__compressed_pair.682" = type { %"struct.std::__1::__compressed_pair_elem.683" }
%"struct.std::__1::__compressed_pair_elem.683" = type { %"class.v8::internal::HeapObjectAllocationTracker"** }
%"class.std::__1::unique_ptr.687" = type { %"class.std::__1::__compressed_pair.688" }
%"class.std::__1::__compressed_pair.688" = type { %"struct.std::__1::__compressed_pair_elem.689" }
%"struct.std::__1::__compressed_pair_elem.689" = type { %"class.v8::internal::third_party_heap::Heap"* }
%"class.v8::internal::third_party_heap::Heap" = type { i8 }
%"class.v8::internal::ReadOnlyHeap" = type { i32 (...)**, i8, %"class.v8::internal::ReadOnlySpace"*, %"class.std::__1::vector.589" }
%"class.std::__1::shared_ptr.693" = type { %"class.v8::internal::ReadOnlyArtifacts"*, %"class.std::__1::__shared_weak_count"* }
%"class.v8::internal::ReadOnlyArtifacts" = type { i32 (...)**, %"class.std::__1::vector.205", %"class.v8::internal::AllocationStats", %"class.std::__1::unique_ptr.694", %"class.std::__1::unique_ptr.708" }
%"class.std::__1::unique_ptr.694" = type { %"class.std::__1::__compressed_pair.695" }
%"class.std::__1::__compressed_pair.695" = type { %"struct.std::__1::__compressed_pair_elem.696" }
%"struct.std::__1::__compressed_pair_elem.696" = type { %"class.v8::internal::SharedReadOnlySpace"* }
%"class.v8::internal::SharedReadOnlySpace" = type { %"class.v8::internal::ReadOnlySpace", %"class.std::__1::vector.697" }
%"class.std::__1::vector.697" = type { %"class.std::__1::__vector_base.698" }
%"class.std::__1::__vector_base.698" = type { %"class.std::__1::unique_ptr.699"*, %"class.std::__1::unique_ptr.699"*, %"class.std::__1::__compressed_pair.700" }
%"class.std::__1::unique_ptr.699" = type { %"class.std::__1::__compressed_pair.1485" }
%"class.std::__1::__compressed_pair.1485" = type { %"struct.std::__1::__compressed_pair_elem.1486" }
%"struct.std::__1::__compressed_pair_elem.1486" = type { %"class.v8::PageAllocator::SharedMemoryMapping"* }
%"class.v8::PageAllocator::SharedMemoryMapping" = type { i32 (...)** }
%"class.std::__1::__compressed_pair.700" = type { %"struct.std::__1::__compressed_pair_elem.701" }
%"struct.std::__1::__compressed_pair_elem.701" = type { %"class.std::__1::unique_ptr.699"* }
%"class.std::__1::unique_ptr.708" = type { %"class.std::__1::__compressed_pair.709" }
%"class.std::__1::__compressed_pair.709" = type { %"struct.std::__1::__compressed_pair_elem.710" }
%"struct.std::__1::__compressed_pair_elem.710" = type { %"class.v8::internal::ReadOnlyHeap"* }
%"class.std::__1::unique_ptr.714" = type { %"class.std::__1::__compressed_pair.715" }
%"class.std::__1::__compressed_pair.715" = type { %"struct.std::__1::__compressed_pair_elem.716" }
%"struct.std::__1::__compressed_pair_elem.716" = type { %"class.v8::internal::StringTable"* }
%"class.v8::internal::StringTable" = type { %"struct.std::__1::atomic.717", %"class.v8::base::Mutex" }
%"struct.std::__1::atomic.717" = type { %"struct.std::__1::__atomic_base.718" }
%"struct.std::__1::__atomic_base.718" = type { %"struct.std::__1::__cxx_atomic_impl.719" }
%"struct.std::__1::__cxx_atomic_impl.719" = type { %"struct.std::__1::__cxx_atomic_base_impl.720" }
%"struct.std::__1::__cxx_atomic_base_impl.720" = type { %"class.v8::internal::StringTable::Data"* }
%"class.v8::internal::StringTable::Data" = type opaque
%"class.v8::internal::Isolate::EntryStackItem" = type { i32, %"class.v8::internal::Isolate::PerIsolateThreadData"*, %"class.v8::internal::Isolate"*, %"class.v8::internal::Isolate::EntryStackItem"* }
%"class.v8::internal::Isolate::PerIsolateThreadData" = type { %"class.v8::internal::Isolate"*, %"class.v8::internal::ThreadId", i64, %"class.v8::internal::ThreadState"* }
%"class.v8::internal::ThreadState" = type opaque
%"class.v8::internal::StringStream" = type { %"class.v8::internal::StringAllocator"*, i32, i32, i32, i8* }
%"class.v8::internal::StringAllocator" = type { i32 (...)** }
%"class.v8::internal::Bootstrapper" = type { %"class.v8::internal::Isolate"*, i32, %"class.v8::internal::SourceCodeCache" }
%"class.v8::internal::SourceCodeCache" = type { i32, %"class.v8::internal::FixedArray" }
%"class.v8::internal::FixedArray" = type { %"class.v8::internal::TorqueGeneratedFixedArray" }
%"class.v8::internal::TorqueGeneratedFixedArray" = type { %"class.v8::internal::FixedArrayBase" }
%"class.v8::internal::FixedArrayBase" = type { %"class.v8::internal::TorqueGeneratedFixedArrayBase" }
%"class.v8::internal::TorqueGeneratedFixedArrayBase" = type { %"class.v8::internal::HeapObject" }
%"class.v8::internal::RuntimeProfiler" = type opaque
%"class.v8::internal::CompilationCache" = type opaque
%"class.std::__1::shared_ptr.724" = type { %"class.v8::internal::Counters"*, %"class.std::__1::__shared_weak_count"* }
%"class.v8::internal::Counters" = type { %"class.std::__1::enable_shared_from_this", %"class.v8::internal::Histogram", %"class.v8::internal::Histogram", %"class.v8::internal::Histogram", %"class.v8::internal::Histogram", %"class.v8::internal::Histogram", %"class.v8::internal::Histogram", %"class.v8::internal::Histogram", %"class.v8::internal::Histogram", %"class.v8::internal::Histogram", %"class.v8::internal::Histogram", %"class.v8::internal::Histogram", %"class.v8::internal::Histogram", %"class.v8::internal::Histogram", %"class.v8::internal::Histogram", %"class.v8::internal::Histogram", %"class.v8::internal::Histogram", %"class.v8::internal::Histogram", %"class.v8::internal::Histogram", %"class.v8::internal::Histogram", %"class.v8::internal::Histogram", %"class.v8::internal::Histogram", %"class.v8::internal::Histogram", %"class.v8::internal::Histogram", %"class.v8::internal::Histogram", %"class.v8::internal::Histogram", %"class.v8::internal::Histogram", %"class.v8::internal::Histogram", %"class.v8::internal::Histogram", %"class.v8::internal::Histogram", %"class.v8::internal::Histogram", %"class.v8::internal::Histogram", %"class.v8::internal::Histogram", %"class.v8::internal::Histogram", %"class.v8::internal::Histogram", %"class.v8::internal::Histogram", %"class.v8::internal::Histogram", %"class.v8::internal::Histogram", %"class.v8::internal::Histogram", %"class.v8::internal::Histogram", %"class.v8::internal::Histogram", %"class.v8::internal::Histogram", %"class.v8::internal::Histogram", %"class.v8::internal::Histogram", %"class.v8::internal::Histogram", %"class.v8::internal::Histogram", %"class.v8::internal::Histogram", %"class.v8::internal::Histogram", %"class.v8::internal::Histogram", %"class.v8::internal::Histogram", %"class.v8::internal::Histogram", %"class.v8::internal::Histogram", %"class.v8::internal::Histogram", %"class.v8::internal::Histogram", %"class.v8::internal::Histogram", %"class.v8::internal::Histogram", %"class.v8::internal::HistogramTimer", %"class.v8::internal::HistogramTimer", %"class.v8::internal::HistogramTimer", %"class.v8::internal::HistogramTimer", %"class.v8::internal::HistogramTimer", %"class.v8::internal::HistogramTimer", %"class.v8::internal::HistogramTimer", %"class.v8::internal::HistogramTimer", %"class.v8::internal::HistogramTimer", %"class.v8::internal::HistogramTimer", %"class.v8::internal::HistogramTimer", %"class.v8::internal::HistogramTimer", %"class.v8::internal::TimedHistogram", %"class.v8::internal::TimedHistogram", %"class.v8::internal::TimedHistogram", %"class.v8::internal::TimedHistogram", %"class.v8::internal::TimedHistogram", %"class.v8::internal::TimedHistogram", %"class.v8::internal::TimedHistogram", %"class.v8::internal::TimedHistogram", %"class.v8::internal::TimedHistogram", %"class.v8::internal::TimedHistogram", %"class.v8::internal::TimedHistogram", %"class.v8::internal::TimedHistogram", %"class.v8::internal::TimedHistogram", %"class.v8::internal::TimedHistogram", %"class.v8::internal::TimedHistogram", %"class.v8::internal::TimedHistogram", %"class.v8::internal::TimedHistogram", %"class.v8::internal::TimedHistogram", %"class.v8::internal::TimedHistogram", %"class.v8::internal::TimedHistogram", %"class.v8::internal::TimedHistogram", %"class.v8::internal::TimedHistogram", %"class.v8::internal::TimedHistogram", %"class.v8::internal::TimedHistogram", %"class.v8::internal::TimedHistogram", %"class.v8::internal::TimedHistogram", %"class.v8::internal::TimedHistogram", %"class.v8::internal::TimedHistogram", %"class.v8::internal::TimedHistogram", %"class.v8::internal::TimedHistogram", %"class.v8::internal::TimedHistogram", %"class.v8::internal::TimedHistogram", %"class.v8::internal::TimedHistogram", %"class.v8::internal::TimedHistogram", %"class.v8::internal::TimedHistogram", %"class.v8::internal::TimedHistogram", %"class.v8::internal::TimedHistogram", %"class.v8::internal::TimedHistogram", %"class.v8::internal::TimedHistogram", %"class.v8::internal::TimedHistogram", %"class.v8::internal::TimedHistogram", %"class.v8::internal::TimedHistogram", %"class.v8::internal::TimedHistogram", %"class.v8::internal::TimedHistogram", %"class.v8::internal::TimedHistogram", %"class.v8::internal::TimedHistogram", %"class.v8::internal::TimedHistogram", %"class.v8::internal::TimedHistogram", %"class.v8::internal::TimedHistogram", %"class.v8::internal::TimedHistogram", %"class.v8::internal::TimedHistogram", %"class.v8::internal::TimedHistogram", %"class.v8::internal::AggregatableHistogramTimer", %"class.v8::internal::Histogram", %"class.v8::internal::Histogram", %"class.v8::internal::Histogram", %"class.v8::internal::Histogram", %"class.v8::internal::Histogram", %"class.v8::internal::Histogram", %"class.v8::internal::Histogram", %"class.v8::internal::Histogram", %"class.v8::internal::Histogram", %"class.v8::internal::Histogram", %"class.v8::internal::StatsCounter", %"class.v8::internal::StatsCounter", %"class.v8::internal::StatsCounter", %"class.v8::internal::StatsCounter", %"class.v8::internal::StatsCounter", %"class.v8::internal::StatsCounter", %"class.v8::internal::StatsCounter", %"class.v8::internal::StatsCounter", %"class.v8::internal::StatsCounter", %"class.v8::internal::StatsCounter", %"class.v8::internal::StatsCounter", %"class.v8::internal::StatsCounter", %"class.v8::internal::StatsCounter", %"class.v8::internal::StatsCounter", %"class.v8::internal::StatsCounter", %"class.v8::internal::StatsCounter", %"class.v8::internal::StatsCounter", %"class.v8::internal::StatsCounter", %"class.v8::internal::StatsCounter", %"class.v8::internal::StatsCounter", %"class.v8::internal::StatsCounter", %"class.v8::internal::StatsCounter", %"class.v8::internal::StatsCounter", %"class.v8::internal::StatsCounter", %"class.v8::internal::StatsCounter", %"class.v8::internal::StatsCounter", %"class.v8::internal::StatsCounter", %"class.v8::internal::StatsCounter", %"class.v8::internal::StatsCounter", %"class.v8::internal::StatsCounter", %"class.v8::internal::StatsCounter", %"class.v8::internal::StatsCounter", %"class.v8::internal::StatsCounter", %"class.v8::internal::StatsCounter", %"class.v8::internal::StatsCounter", %"class.v8::internal::StatsCounter", %"class.v8::internal::StatsCounter", %"class.v8::internal::StatsCounter", %"class.v8::internal::StatsCounter", %"class.v8::internal::StatsCounter", %"class.v8::internal::StatsCounter", %"class.v8::internal::StatsCounter", %"class.v8::internal::StatsCounter", %"class.v8::internal::StatsCounter", %"class.v8::internal::StatsCounter", %"class.v8::internal::StatsCounter", %"class.v8::internal::StatsCounter", %"class.v8::internal::StatsCounter", %"class.v8::internal::StatsCounter", %"class.v8::internal::StatsCounter", %"class.v8::internal::StatsCounter", %"class.v8::internal::StatsCounter", %"class.v8::internal::StatsCounter", %"class.v8::internal::StatsCounter", %"class.v8::internal::StatsCounter", %"class.v8::internal::StatsCounter", %"class.v8::internal::StatsCounter", %"class.v8::internal::StatsCounter", %"class.v8::internal::StatsCounter", %"class.v8::internal::StatsCounter", %"class.v8::internal::StatsCounter", %"class.v8::internal::StatsCounter", %"class.v8::internal::StatsCounter", %"class.v8::internal::StatsCounter", %"class.v8::internal::StatsCounter", %"class.v8::internal::StatsCounter", %"class.v8::internal::StatsCounter", %"class.v8::internal::StatsCounter", %"class.v8::internal::StatsCounter", %"class.v8::internal::StatsCounterThreadSafe", %"class.v8::internal::StatsCounterThreadSafe", %"class.v8::internal::StatsCounterThreadSafe", %"class.v8::internal::StatsCounter", %"class.v8::internal::StatsCounter", %"class.v8::internal::StatsCounter", %"class.v8::internal::StatsCounter", %"class.v8::internal::StatsCounter", %"class.v8::internal::StatsCounter", %"class.v8::internal::StatsCounter", %"class.v8::internal::StatsCounter", %"class.v8::internal::StatsCounter", %"class.v8::internal::StatsCounter", %"class.v8::internal::StatsCounter", %"class.v8::internal::StatsCounter", %"class.v8::internal::StatsCounter", %"class.v8::internal::StatsCounter", %"class.v8::internal::StatsCounter", %"class.v8::internal::StatsCounter", %"class.v8::internal::StatsCounter", %"class.v8::internal::StatsCounter", %"class.v8::internal::StatsCounter", %"class.v8::internal::StatsCounter", %"class.v8::internal::StatsCounter", %"class.v8::internal::StatsCounter", %"class.v8::internal::StatsCounter", %"class.v8::internal::StatsCounter", %"class.v8::internal::StatsCounter", %"class.v8::internal::StatsCounter", %"class.v8::internal::StatsCounter", %"class.v8::internal::StatsCounter", %"class.v8::internal::StatsCounter", %"class.v8::internal::StatsCounter", %"class.v8::internal::StatsCounter", %"class.v8::internal::StatsCounter", %"class.v8::internal::StatsCounter", %"class.v8::internal::StatsCounter", %"class.v8::internal::StatsCounter", %"class.v8::internal::StatsCounter", %"class.v8::internal::StatsCounter", %"class.v8::internal::StatsCounter", %"class.v8::internal::StatsCounter", %"class.v8::internal::StatsCounter", %"class.v8::internal::StatsCounter", %"class.v8::internal::StatsCounter", %"class.v8::internal::StatsCounter", %"class.v8::internal::StatsCounter", %"class.v8::internal::StatsCounter", %"class.v8::internal::StatsCounter", %"class.v8::internal::StatsCounter", %"class.v8::internal::StatsCounter", %"class.v8::internal::StatsCounter", %"class.v8::internal::StatsCounter", %"class.v8::internal::StatsCounter", %"class.v8::internal::StatsCounter", %"class.v8::internal::StatsCounter", %"class.v8::internal::StatsCounter", %"class.v8::internal::StatsCounter", %"class.v8::internal::StatsCounter", %"class.v8::internal::StatsCounter", %"class.v8::internal::StatsCounter", %"class.v8::internal::StatsCounter", %"class.v8::internal::StatsCounter", %"class.v8::internal::StatsCounter", %"class.v8::internal::StatsCounter", %"class.v8::internal::StatsCounter", %"class.v8::internal::StatsCounter", %"class.v8::internal::StatsCounter", %"class.v8::internal::StatsCounter", %"class.v8::internal::StatsCounter", %"class.v8::internal::StatsCounter", %"class.v8::internal::StatsCounter", %"class.v8::internal::StatsCounter", %"class.v8::internal::StatsCounter", %"class.v8::internal::StatsCounter", %"class.v8::internal::StatsCounter", %"class.v8::internal::StatsCounter", %"class.v8::internal::StatsCounter", %"class.v8::internal::StatsCounter", %"class.v8::internal::StatsCounter", %"class.v8::internal::StatsCounter", %"class.v8::internal::StatsCounter", %"class.v8::internal::StatsCounter", %"class.v8::internal::StatsCounter", %"class.v8::internal::StatsCounter", %"class.v8::internal::StatsCounter", %"class.v8::internal::StatsCounter", %"class.v8::internal::StatsCounter", %"class.v8::internal::StatsCounter", %"class.v8::internal::StatsCounter", %"class.v8::internal::StatsCounter", %"class.v8::internal::StatsCounter", %"class.v8::internal::StatsCounter", %"class.v8::internal::StatsCounter", %"class.v8::internal::StatsCounter", %"class.v8::internal::StatsCounter", %"class.v8::internal::StatsCounter", %"class.v8::internal::StatsCounter", %"class.v8::internal::StatsCounter", %"class.v8::internal::StatsCounter", %"class.v8::internal::StatsCounter", %"class.v8::internal::StatsCounter", %"class.v8::internal::StatsCounter", %"class.v8::internal::StatsCounter", %"class.v8::internal::StatsCounter", %"class.v8::internal::StatsCounter", %"class.v8::internal::StatsCounter", %"class.v8::internal::StatsCounter", %"class.v8::internal::StatsCounter", %"class.v8::internal::StatsCounter", %"class.v8::internal::StatsCounter", %"class.v8::internal::StatsCounter", %"class.v8::internal::StatsCounter", %"class.v8::internal::StatsCounter", %"class.v8::internal::StatsCounter", %"class.v8::internal::StatsCounter", %"class.v8::internal::StatsCounter", %"class.v8::internal::StatsCounter", %"class.v8::internal::StatsCounter", %"class.v8::internal::StatsCounter", %"class.v8::internal::StatsCounter", %"class.v8::internal::StatsCounter", %"class.v8::internal::StatsCounter", %"class.v8::internal::StatsCounter", %"class.v8::internal::StatsCounter", %"class.v8::internal::StatsCounter", %"class.v8::internal::StatsCounter", %"class.v8::internal::StatsCounter", %"class.v8::internal::StatsCounter", %"class.v8::internal::StatsCounter", %"class.v8::internal::StatsCounter", %"class.v8::internal::StatsCounter", %"class.v8::internal::StatsCounter", %"class.v8::internal::StatsCounter", %"class.v8::internal::StatsCounter", %"class.v8::internal::StatsCounter", %"class.v8::internal::StatsCounter", %"class.v8::internal::StatsCounter", %"class.v8::internal::StatsCounter", %"class.v8::internal::StatsCounter", %"class.v8::internal::StatsCounter", %"class.v8::internal::StatsCounter", %"class.v8::internal::StatsCounter", %"class.v8::internal::StatsCounter", %"class.v8::internal::StatsCounter", %"class.v8::internal::StatsCounter", %"class.v8::internal::StatsCounter", %"class.v8::internal::StatsCounter", %"class.v8::internal::StatsCounter", %"class.v8::internal::StatsCounter", %"class.v8::internal::StatsCounter", %"class.v8::internal::StatsCounter", %"class.v8::internal::StatsCounter", %"class.v8::internal::StatsCounter", %"class.v8::internal::StatsCounter", %"class.v8::internal::StatsCounter", %"class.v8::internal::StatsCounter", %"class.v8::internal::StatsCounter", %"class.v8::internal::StatsCounter", %"class.v8::internal::StatsCounter", %"class.v8::internal::StatsCounter", %"class.v8::internal::StatsCounter", %"class.v8::internal::StatsCounter", %"class.v8::internal::StatsCounter", %"class.v8::internal::StatsCounter", %"class.v8::internal::StatsCounter", %"class.v8::internal::StatsCounter", %"class.v8::internal::StatsCounter", %"class.v8::internal::StatsCounter", %"class.v8::internal::StatsCounter", %"class.v8::internal::StatsCounter", %"class.v8::internal::StatsCounter", %"class.v8::internal::StatsCounter", %"class.v8::internal::StatsCounter", %"class.v8::internal::StatsCounter", %"class.v8::internal::StatsCounter", %"class.v8::internal::StatsCounter", %"class.v8::internal::StatsCounter", %"class.v8::internal::StatsCounter", %"class.v8::internal::StatsCounter", %"class.v8::internal::StatsCounter", %"class.v8::internal::StatsCounter", %"class.v8::internal::StatsCounter", %"class.v8::internal::StatsCounter", %"class.v8::internal::StatsCounter", %"class.v8::internal::StatsCounter", %"class.v8::internal::StatsCounter", %"class.v8::internal::StatsCounter", %"class.v8::internal::StatsCounter", %"class.v8::internal::StatsCounter", %"class.v8::internal::StatsCounter", %"class.v8::internal::StatsCounter", %"class.v8::internal::StatsCounter", %"class.v8::internal::StatsCounter", %"class.v8::internal::StatsCounter", %"class.v8::internal::StatsCounter", %"class.v8::internal::StatsCounter", %"class.v8::internal::StatsCounter", %"class.v8::internal::StatsCounter", %"class.v8::internal::StatsCounter", %"class.v8::internal::StatsCounter", %"class.v8::internal::StatsCounter", %"class.v8::internal::StatsCounter", %"class.v8::internal::StatsCounter", %"class.v8::internal::StatsCounter", %"class.v8::internal::StatsCounter", %"class.v8::internal::StatsCounter", %"class.v8::internal::StatsCounter", %"class.v8::internal::StatsCounter", %"class.v8::internal::StatsCounter", %"class.v8::internal::StatsCounter", %"class.v8::internal::StatsCounter", %"class.v8::internal::StatsCounter", %"class.v8::internal::StatsCounter", %"class.v8::internal::StatsCounter", %"class.v8::internal::StatsCounter", %"class.v8::internal::StatsCounter", %"class.v8::internal::StatsCounter", %"class.v8::internal::StatsCounter", %"class.v8::internal::StatsCounter", %"class.v8::internal::StatsCounter", %"class.v8::internal::StatsCounter", %"class.v8::internal::StatsCounter", %"class.v8::internal::StatsCounter", %"class.v8::internal::StatsCounter", %"class.v8::internal::StatsCounter", %"class.v8::internal::StatsCounter", %"class.v8::internal::StatsCounter", %"class.v8::internal::StatsCounter", %"class.v8::internal::StatsCounter", %"class.v8::internal::StatsCounter", %"class.v8::internal::StatsCounter", %"class.v8::internal::StatsCounter", %"class.v8::internal::StatsCounter", %"class.v8::internal::StatsCounter", %"class.v8::internal::StatsCounter", %"class.v8::internal::StatsCounter", %"class.v8::internal::StatsCounter", %"class.v8::internal::StatsCounter", %"class.v8::internal::StatsCounter", %"class.v8::internal::StatsCounter", %"class.v8::internal::StatsCounter", %"class.v8::internal::StatsCounter", %"class.v8::internal::StatsCounter", %"class.v8::internal::StatsCounter", %"class.v8::internal::StatsCounter", %"class.v8::internal::StatsCounter", %"class.v8::internal::StatsCounter", %"class.v8::internal::StatsCounter", %"class.v8::internal::StatsCounter", %"class.v8::internal::StatsCounter", %"class.v8::internal::StatsCounter", %"class.v8::internal::StatsCounter", %"class.v8::internal::StatsCounter", %"class.v8::internal::StatsCounter", %"class.v8::internal::StatsCounter", %"class.v8::internal::StatsCounter", %"class.v8::internal::StatsCounter", %"class.v8::internal::StatsCounter", %"class.v8::internal::StatsCounter", %"class.v8::internal::StatsCounter", %"class.v8::internal::StatsCounter", %"class.v8::internal::StatsCounter", %"class.v8::internal::StatsCounter", %"class.v8::internal::StatsCounter", %"class.v8::internal::StatsCounter", %"class.v8::internal::StatsCounter", %"class.v8::internal::StatsCounter", %"class.v8::internal::StatsCounter", %"class.v8::internal::StatsCounter", %"class.v8::internal::StatsCounter", %"class.v8::internal::StatsCounter", %"class.v8::internal::StatsCounter", %"class.v8::internal::StatsCounter", %"class.v8::internal::StatsCounter", %"class.v8::internal::StatsCounter", %"class.v8::internal::StatsCounter", %"class.v8::internal::StatsCounter", %"class.v8::internal::StatsCounter", %"class.v8::internal::StatsCounter", %"class.v8::internal::StatsCounter", %"class.v8::internal::StatsCounter", %"class.v8::internal::StatsCounter", %"class.v8::internal::StatsCounter", %"class.v8::internal::StatsCounter", %"class.v8::internal::StatsCounter", %"class.v8::internal::StatsCounter", %"class.v8::internal::StatsCounter", %"class.v8::internal::StatsCounter", %"class.v8::internal::StatsCounter", %"class.v8::internal::StatsCounter", %"class.v8::internal::StatsCounter", %"class.v8::internal::StatsCounter", %"class.v8::internal::StatsCounter", %"class.v8::internal::StatsCounter", %"class.v8::internal::StatsCounter", %"class.v8::internal::StatsCounter", %"class.v8::internal::StatsCounter", %"class.v8::internal::StatsCounter", %"class.v8::internal::StatsCounter", %"class.v8::internal::StatsCounter", %"class.v8::internal::StatsCounter", %"class.v8::internal::StatsCounter", %"class.v8::internal::StatsCounter", %"class.v8::internal::StatsCounter", %"class.v8::internal::StatsCounter", %"class.v8::internal::StatsCounter", %"class.v8::internal::StatsCounter", %"class.v8::internal::StatsCounter", %"class.v8::internal::StatsCounter", %"class.v8::internal::StatsCounter", %"class.v8::internal::StatsCounter", %"class.v8::internal::StatsCounter", %"class.v8::internal::StatsCounter", %"class.v8::internal::StatsCounter", %"class.v8::internal::StatsCounter", %"class.v8::internal::StatsCounter", %"class.v8::internal::StatsCounter", %"class.v8::internal::StatsCounter", %"class.v8::internal::StatsCounter", %"class.v8::internal::StatsCounter", %"class.v8::internal::StatsCounter", %"class.v8::internal::StatsCounter", %"class.v8::internal::StatsCounter", %"class.v8::internal::StatsCounter", %"class.v8::internal::StatsCounter", %"class.v8::internal::StatsCounter", %"class.v8::internal::StatsCounter", %"class.v8::internal::StatsCounter", %"class.v8::internal::StatsCounter", %"class.v8::internal::StatsCounter", %"class.v8::internal::StatsCounter", %"class.v8::internal::StatsCounter", %"class.v8::internal::StatsCounter", %"class.v8::internal::StatsCounter", %"class.v8::internal::StatsCounter", %"class.v8::internal::StatsCounter", %"class.v8::internal::StatsCounter", %"class.v8::internal::StatsCounter", %"class.v8::internal::StatsCounter", %"class.v8::internal::StatsCounter", %"class.v8::internal::StatsCounter", %"class.v8::internal::StatsCounter", %"class.v8::internal::StatsCounter", %"class.v8::internal::StatsCounter", %"class.v8::internal::StatsCounter", %"class.v8::internal::StatsCounter", %"class.v8::internal::StatsCounter", %"class.v8::internal::StatsCounter", %"class.v8::internal::StatsCounter", %"class.v8::internal::StatsCounter", %"class.v8::internal::StatsCounter", %"class.v8::internal::StatsCounter", %"class.v8::internal::StatsCounter", %"class.v8::internal::StatsCounter", %"class.v8::internal::StatsCounter", %"class.v8::internal::StatsCounter", %"class.v8::internal::StatsCounter", %"class.v8::internal::StatsCounter", %"class.v8::internal::StatsCounter", %"class.v8::internal::StatsCounter", %"class.v8::internal::StatsCounter", %"class.v8::internal::StatsCounter", %"class.v8::internal::StatsCounter", %"class.v8::internal::StatsCounter", %"class.v8::internal::StatsCounter", %"class.v8::internal::StatsCounter", %"class.v8::internal::StatsCounter", %"class.v8::internal::StatsCounter", %"class.v8::internal::StatsCounter", %"class.v8::internal::StatsCounter", %"class.v8::internal::StatsCounter", %"class.v8::internal::StatsCounter", %"class.v8::internal::StatsCounter", %"class.v8::internal::StatsCounter", %"class.v8::internal::StatsCounter", %"class.v8::internal::StatsCounter", %"class.v8::internal::StatsCounter", %"class.v8::internal::StatsCounter", %"class.v8::internal::StatsCounter", %"class.v8::internal::StatsCounter", %"class.v8::internal::StatsCounter", %"class.v8::internal::StatsCounter", %"class.v8::internal::StatsCounter", %"class.v8::internal::StatsCounter", %"class.v8::internal::StatsCounter", %"class.v8::internal::StatsCounter", %"class.v8::internal::StatsCounter", %"class.v8::internal::StatsCounter", %"class.v8::internal::StatsCounter", %"class.v8::internal::StatsCounter", %"class.v8::internal::StatsCounter", %"class.v8::internal::StatsCounter", %"class.v8::internal::StatsCounter", %"class.v8::internal::StatsCounter", %"class.v8::internal::StatsCounter", %"class.v8::internal::StatsCounter", %"class.v8::internal::StatsCounter", %"class.v8::internal::StatsCounter", %"class.v8::internal::StatsCounter", %"class.v8::internal::StatsCounter", %"class.v8::internal::StatsCounter", %"class.v8::internal::StatsCounter", %"class.v8::internal::StatsCounter", %"class.v8::internal::StatsCounter", %"class.v8::internal::StatsCounter", %"class.v8::internal::StatsCounter", %"class.v8::internal::StatsCounter", %"class.v8::internal::StatsCounter", %"class.v8::internal::StatsCounter", %"class.v8::internal::StatsCounter", %"class.v8::internal::StatsCounter", %"class.v8::internal::StatsCounter", %"class.v8::internal::StatsCounter", %"class.v8::internal::StatsCounter", %"class.v8::internal::StatsCounter", %"class.v8::internal::StatsCounter", %"class.v8::internal::StatsCounter", %"class.v8::internal::StatsCounter", %"class.v8::internal::StatsCounter", %"class.v8::internal::StatsCounter", %"class.v8::internal::StatsCounter", %"class.v8::internal::StatsCounter", %"class.v8::internal::StatsCounter", %"class.v8::internal::StatsCounter", %"class.v8::internal::StatsCounter", %"class.v8::internal::StatsCounter", %"class.v8::internal::StatsCounter", %"class.v8::internal::StatsCounter", %"class.v8::internal::StatsCounter", %"class.v8::internal::StatsCounter", %"class.v8::internal::StatsCounter", %"class.v8::internal::StatsCounter", %"class.v8::internal::StatsCounter", %"class.v8::internal::StatsCounter", %"class.v8::internal::StatsCounter", %"class.v8::internal::StatsCounter", %"class.v8::internal::StatsCounter", %"class.v8::internal::StatsCounter", %"class.v8::internal::StatsCounter", %"class.v8::internal::StatsCounter", %"class.v8::internal::StatsCounter", %"class.v8::internal::StatsCounter", %"class.v8::internal::StatsCounter", %"class.v8::internal::StatsCounter", %"class.v8::internal::StatsCounter", %"class.v8::internal::StatsCounter", %"class.v8::internal::StatsCounter", %"class.v8::internal::StatsCounter", %"class.v8::internal::StatsCounter", %"class.v8::internal::StatsCounter", %"class.v8::internal::StatsCounter", %"class.v8::internal::StatsCounter", %"class.v8::internal::StatsCounter", %"class.v8::internal::StatsCounter", %"class.v8::internal::StatsCounter", %"class.v8::internal::StatsCounter", %"class.v8::internal::StatsCounter", %"class.v8::internal::StatsCounter", %"class.v8::internal::StatsCounter", %"class.v8::internal::StatsCounter", %"class.v8::internal::StatsCounter", %"class.v8::internal::StatsCounter", %"class.v8::internal::StatsCounter", %"class.v8::internal::StatsCounter", %"class.v8::internal::StatsCounter", %"class.v8::internal::StatsCounter", %"class.v8::internal::StatsCounter", %"class.v8::internal::StatsCounter", %"class.v8::internal::StatsCounter", %"class.v8::internal::StatsCounter", %"class.v8::internal::StatsCounter", %"class.v8::internal::StatsCounter", %"class.v8::internal::StatsCounter", %"class.v8::internal::StatsCounter", %"class.v8::internal::StatsCounter", %"class.v8::internal::StatsCounter", %"class.v8::internal::StatsCounter", %"class.v8::internal::StatsCounter", %"class.v8::internal::StatsCounter", %"class.v8::internal::StatsCounter", %"class.v8::internal::StatsCounter", %"class.v8::internal::StatsCounter", %"class.v8::internal::StatsCounter", %"class.v8::internal::StatsCounter", %"class.v8::internal::StatsCounter", %"class.v8::internal::StatsCounter", %"class.v8::internal::StatsCounter", %"class.v8::internal::StatsCounter", %"class.v8::internal::StatsCounter", %"class.v8::internal::StatsCounter", %"class.v8::internal::StatsCounter", %"class.v8::internal::StatsCounter", %"class.v8::internal::StatsCounter", %"class.v8::internal::StatsCounter", %"class.v8::internal::StatsCounter", %"class.v8::internal::StatsCounter", %"class.v8::internal::StatsCounter", %"class.v8::internal::StatsCounter", %"class.v8::internal::StatsCounter", %"class.v8::internal::StatsCounter", %"class.v8::internal::StatsCounter", %"class.v8::internal::StatsCounter", %"class.v8::internal::StatsCounter", %"class.v8::internal::StatsCounter", %"class.v8::internal::StatsCounter", %"class.v8::internal::StatsCounter", %"class.v8::internal::StatsCounter", %"class.v8::internal::StatsCounter", %"class.v8::internal::StatsCounter", %"class.v8::internal::StatsCounter", %"class.v8::internal::StatsCounter", %"class.v8::internal::StatsCounter", %"class.v8::internal::StatsCounter", %"class.v8::internal::StatsCounter", %"class.v8::internal::StatsCounter", %"class.v8::internal::StatsCounter", %"class.v8::internal::StatsCounter", %"class.v8::internal::StatsCounter", %"class.v8::internal::StatsCounter", %"class.v8::internal::StatsCounter", %"class.v8::internal::StatsCounter", %"class.v8::internal::StatsCounter", %"class.v8::internal::StatsCounter", %"class.v8::internal::StatsCounter", %"class.v8::internal::StatsCounter", %"class.v8::internal::StatsCounter", %"class.v8::internal::StatsCounter", %"class.v8::internal::StatsCounter", %"class.v8::internal::StatsCounter", %"class.v8::internal::StatsCounter", %"class.v8::internal::StatsCounter", %"class.v8::internal::StatsCounter", %"class.v8::internal::StatsCounter", %"class.v8::internal::StatsCounter", %"class.v8::internal::StatsCounter", %"class.v8::internal::StatsCounter", %"class.v8::internal::StatsCounter", %"class.v8::internal::StatsCounter", %"class.v8::internal::StatsCounter", %"class.v8::internal::StatsCounter", %"class.v8::internal::StatsCounter", %"class.v8::internal::StatsCounter", %"class.v8::internal::StatsCounter", %"class.v8::internal::StatsCounter", %"class.v8::internal::StatsCounter", %"class.v8::internal::StatsCounter", %"class.v8::internal::StatsCounter", %"class.v8::internal::StatsCounter", %"class.v8::internal::StatsCounter", %"class.v8::internal::StatsCounter", %"class.v8::internal::StatsCounter", %"class.v8::internal::StatsCounter", %"class.v8::internal::StatsCounter", %"class.v8::internal::StatsCounter", %"class.v8::internal::StatsCounter", %"class.v8::internal::StatsCounter", %"class.v8::internal::RuntimeCallStats", %"class.v8::internal::WorkerThreadRuntimeCallStats", %"class.v8::internal::Isolate"*, %"class.v8::internal::StatsTable" }
%"class.std::__1::enable_shared_from_this" = type { %"class.std::__1::weak_ptr" }
%"class.std::__1::weak_ptr" = type { %"class.v8::internal::Counters"*, %"class.std::__1::__shared_weak_count"* }
%"class.v8::internal::HistogramTimer" = type { %"class.v8::internal::TimedHistogram.base", %"class.v8::base::ElapsedTimer" }
%"class.v8::internal::TimedHistogram.base" = type <{ %"class.v8::internal::Histogram", i32 }>
%"class.v8::base::ElapsedTimer" = type { %"class.v8::base::TimeTicks" }
%"class.v8::base::TimeTicks" = type { %"class.v8::base::time_internal::TimeBase" }
%"class.v8::base::time_internal::TimeBase" = type { i64 }
%"class.v8::internal::TimedHistogram" = type <{ %"class.v8::internal::Histogram", i32, [4 x i8] }>
%"class.v8::internal::AggregatableHistogramTimer" = type { %"class.v8::internal::Histogram", %"class.v8::base::TimeDelta" }
%"class.v8::base::TimeDelta" = type { i64 }
%"class.v8::internal::Histogram" = type { i8*, i32, i32, i32, i8*, %"class.v8::internal::Counters"* }
%"class.v8::internal::StatsCounterThreadSafe" = type { %"class.v8::internal::StatsCounterBase", %"class.v8::base::Mutex" }
%"class.v8::internal::StatsCounterBase" = type { %"class.v8::internal::Counters"*, i8*, i32* }
%"class.v8::internal::StatsCounter" = type <{ %"class.v8::internal::StatsCounterBase", i8, [7 x i8] }>
%"class.v8::internal::RuntimeCallStats" = type { %"class.v8::base::AtomicValue", %"class.v8::base::AtomicValue.725", i8, i32, %"class.v8::internal::ThreadId", [1370 x %"class.v8::internal::RuntimeCallCounter"] }
%"class.v8::base::AtomicValue" = type { i64 }
%"class.v8::base::AtomicValue.725" = type { i64 }
%"class.v8::internal::RuntimeCallCounter" = type { i8*, i64, i64 }
%"class.v8::internal::WorkerThreadRuntimeCallStats" = type <{ %"class.v8::base::Mutex", %"class.std::__1::vector.726", %"class.v8::base::Optional", %"class.v8::internal::ThreadId", [4 x i8] }>
%"class.std::__1::vector.726" = type { %"class.std::__1::__vector_base.727" }
%"class.std::__1::__vector_base.727" = type { %"class.std::__1::unique_ptr.728"*, %"class.std::__1::unique_ptr.728"*, %"class.std::__1::__compressed_pair.729" }
%"class.std::__1::unique_ptr.728" = type opaque
%"class.std::__1::__compressed_pair.729" = type { %"struct.std::__1::__compressed_pair_elem.730" }
%"struct.std::__1::__compressed_pair_elem.730" = type { %"class.std::__1::unique_ptr.728"* }
%"class.v8::base::Optional" = type { %"class.v8::base::internal::OptionalBase" }
%"class.v8::base::internal::OptionalBase" = type { %"struct.v8::base::internal::OptionalStorage" }
%"struct.v8::base::internal::OptionalStorage" = type { %"struct.v8::base::internal::OptionalStorageBase" }
%"struct.v8::base::internal::OptionalStorageBase" = type { i8, %union.anon.734 }
%union.anon.734 = type { i32 }
%"class.v8::internal::StatsTable" = type { i32* (i8*)*, i8* (i8*, i32, i32, i64)*, void (i8*, i32)* }
%"class.v8::base::RecursiveMutex" = type { %union.pthread_mutex_t }
%union.pthread_mutex_t = type { %struct.__pthread_mutex_s }
%struct.__pthread_mutex_s = type { i32, i32, i32, i32, i32, i16, i16, %struct.__pthread_internal_list }
%struct.__pthread_internal_list = type { %struct.__pthread_internal_list*, %struct.__pthread_internal_list* }
%"class.v8::base::SharedMutex" = type { %union.pthread_rwlock_t }
%union.pthread_rwlock_t = type { %struct.__pthread_rwlock_arch_t }
%struct.__pthread_rwlock_arch_t = type { i32, i32, i32, i32, i32, i32, i32, i32, i8, [7 x i8], i64, i32 }
%"class.v8::internal::Logger" = type { %"class.v8::internal::CodeEventListener", %"class.v8::internal::Isolate"*, %"class.std::__1::unique_ptr.735", %"class.std::__1::unique_ptr.741", %"struct.std::__1::atomic.218", %"class.std::__1::unique_ptr.747", %"class.std::__1::unique_ptr.753", %"class.std::__1::unique_ptr.759", %"class.std::__1::unique_ptr.765", %"class.std::__1::unique_ptr.771", %"class.std::__1::set.777", i32, i8, %"class.v8::internal::ExistingCodeLogger", %"class.v8::base::ElapsedTimer" }
%"class.v8::internal::CodeEventListener" = type { i32 (...)** }
%"class.std::__1::unique_ptr.735" = type { %"class.std::__1::__compressed_pair.736" }
%"class.std::__1::__compressed_pair.736" = type { %"struct.std::__1::__compressed_pair_elem.737" }
%"struct.std::__1::__compressed_pair_elem.737" = type { %"class.v8::internal::Ticker"* }
%"class.v8::internal::Ticker" = type opaque
%"class.std::__1::unique_ptr.741" = type { %"class.std::__1::__compressed_pair.742" }
%"class.std::__1::__compressed_pair.742" = type { %"struct.std::__1::__compressed_pair_elem.743" }
%"struct.std::__1::__compressed_pair_elem.743" = type { %"class.v8::internal::Profiler"* }
%"class.v8::internal::Profiler" = type opaque
%"class.std::__1::unique_ptr.747" = type { %"class.std::__1::__compressed_pair.748" }
%"class.std::__1::__compressed_pair.748" = type { %"struct.std::__1::__compressed_pair_elem.749" }
%"struct.std::__1::__compressed_pair_elem.749" = type { %"class.v8::internal::Log"* }
%"class.v8::internal::Log" = type opaque
%"class.std::__1::unique_ptr.753" = type { %"class.std::__1::__compressed_pair.754" }
%"class.std::__1::__compressed_pair.754" = type { %"struct.std::__1::__compressed_pair_elem.755" }
%"struct.std::__1::__compressed_pair_elem.755" = type { %"class.v8::internal::PerfBasicLogger"* }
%"class.v8::internal::PerfBasicLogger" = type opaque
%"class.std::__1::unique_ptr.759" = type { %"class.std::__1::__compressed_pair.760" }
%"class.std::__1::__compressed_pair.760" = type { %"struct.std::__1::__compressed_pair_elem.761" }
%"struct.std::__1::__compressed_pair_elem.761" = type { %"class.v8::internal::PerfJitLogger"* }
%"class.v8::internal::PerfJitLogger" = type opaque
%"class.std::__1::unique_ptr.765" = type { %"class.std::__1::__compressed_pair.766" }
%"class.std::__1::__compressed_pair.766" = type { %"struct.std::__1::__compressed_pair_elem.767" }
%"struct.std::__1::__compressed_pair_elem.767" = type { %"class.v8::internal::LowLevelLogger"* }
%"class.v8::internal::LowLevelLogger" = type opaque
%"class.std::__1::unique_ptr.771" = type { %"class.std::__1::__compressed_pair.772" }
%"class.std::__1::__compressed_pair.772" = type { %"struct.std::__1::__compressed_pair_elem.773" }
%"struct.std::__1::__compressed_pair_elem.773" = type { %"class.v8::internal::JitLogger"* }
%"class.v8::internal::JitLogger" = type opaque
%"class.std::__1::set.777" = type { %"class.std::__1::__tree.778" }
%"class.std::__1::__tree.778" = type { %"class.std::__1::__tree_end_node"*, %"class.std::__1::__compressed_pair.779", %"class.std::__1::__compressed_pair.783" }
%"class.std::__1::__compressed_pair.779" = type { %"struct.std::__1::__compressed_pair_elem" }
%"class.std::__1::__compressed_pair.783" = type { %"struct.std::__1::__compressed_pair_elem.13" }
%"class.v8::internal::ExistingCodeLogger" = type { %"class.v8::internal::Isolate"*, %"class.v8::internal::CodeEventListener"* }
%"class.v8::internal::StubCache" = type { [2048 x %"struct.v8::internal::StubCache::Entry"], [512 x %"struct.v8::internal::StubCache::Entry"], %"class.v8::internal::Isolate"* }
%"struct.v8::internal::StubCache::Entry" = type { %"class.v8::internal::StrongTaggedValue", %"class.v8::internal::TaggedValue", %"class.v8::internal::StrongTaggedValue" }
%"class.v8::internal::TaggedValue" = type { %"class.v8::internal::TaggedImpl.786" }
%"class.v8::internal::TaggedImpl.786" = type { i32 }
%"class.v8::internal::StrongTaggedValue" = type { %"class.v8::internal::TaggedImpl.785" }
%"class.v8::internal::TaggedImpl.785" = type { i32 }
%"class.v8::internal::Deoptimizer" = type opaque
%"class.v8::internal::MaterializedObjectStore" = type opaque
%"class.v8::internal::DescriptorLookupCache" = type { [64 x %"struct.v8::internal::DescriptorLookupCache::Key"], [64 x i32] }
%"struct.v8::internal::DescriptorLookupCache::Key" = type { %"class.v8::internal::Map", %"class.v8::internal::Name" }
%"class.v8::internal::Map" = type { %"class.v8::internal::HeapObject" }
%"class.v8::internal::Name" = type { %"class.v8::internal::TorqueGeneratedName" }
%"class.v8::internal::TorqueGeneratedName" = type { %"class.v8::internal::PrimitiveHeapObject" }
%"class.v8::internal::PrimitiveHeapObject" = type { %"class.v8::internal::TorqueGeneratedPrimitiveHeapObject" }
%"class.v8::internal::TorqueGeneratedPrimitiveHeapObject" = type { %"class.v8::internal::HeapObject" }
%"struct.v8::internal::HandleScopeData" = type { i64*, i64*, i32, i32, %"class.v8::internal::CanonicalHandleScope"* }
%"class.v8::internal::CanonicalHandleScope" = type { %"class.v8::internal::Isolate"*, %"class.v8::internal::OptimizedCompilationInfo"*, %"class.v8::internal::Zone"*, %"class.v8::internal::RootIndexMap"*, %"class.std::__1::unique_ptr.787", i32, %"class.v8::internal::CanonicalHandleScope"* }
%"class.v8::internal::OptimizedCompilationInfo" = type opaque
%"class.v8::internal::RootIndexMap" = type opaque
%"class.std::__1::unique_ptr.787" = type { %"class.std::__1::__compressed_pair.788" }
%"class.std::__1::__compressed_pair.788" = type { %"struct.std::__1::__compressed_pair_elem.789" }
%"struct.std::__1::__compressed_pair_elem.789" = type { %"class.v8::internal::IdentityMap"* }
%"class.v8::internal::IdentityMap" = type opaque
%"class.v8::internal::HandleScopeImplementer" = type { %"class.v8::internal::Isolate"*, %"class.v8::internal::DetachableVector", %"class.v8::internal::DetachableVector.793", %"class.v8::internal::DetachableVector.794", %"class.v8::internal::DetachableVector.793", i64*, i64*, %"struct.v8::internal::HandleScopeData" }
%"class.v8::internal::DetachableVector" = type { %"class.v8::internal::DetachableVectorBase" }
%"class.v8::internal::DetachableVectorBase" = type { i8*, i64, i64 }
%"class.v8::internal::DetachableVector.794" = type { %"class.v8::internal::DetachableVectorBase" }
%"class.v8::internal::DetachableVector.793" = type { %"class.v8::internal::DetachableVectorBase" }
%"class.v8::internal::UnicodeCache" = type opaque
%"class.v8::internal::AccountingAllocator" = type { i32 (...)**, %"struct.std::__1::atomic", %"struct.std::__1::atomic", %"class.std::__1::unique_ptr", %"class.std::__1::unique_ptr.5" }
%"class.std::__1::unique_ptr" = type { %"class.std::__1::__compressed_pair.2" }
%"class.std::__1::__compressed_pair.2" = type { %"struct.std::__1::__compressed_pair_elem.3" }
%"struct.std::__1::__compressed_pair_elem.3" = type { %"class.v8::internal::VirtualMemory"* }
%"class.v8::internal::InnerPointerToCodeCache" = type opaque
%"class.v8::internal::GlobalHandles" = type { %"class.v8::internal::Isolate"*, %"class.std::__1::unique_ptr.795", %"class.std::__1::vector.801", %"class.std::__1::unique_ptr.808", %"class.std::__1::vector.815", %"class.std::__1::unique_ptr.822", i64, %"class.std::__1::vector.828", %"class.std::__1::vector.836", %"class.std::__1::vector.844", i8, i8, i32 }
%"class.std::__1::unique_ptr.795" = type { %"class.std::__1::__compressed_pair.796" }
%"class.std::__1::__compressed_pair.796" = type { %"struct.std::__1::__compressed_pair_elem.797" }
%"struct.std::__1::__compressed_pair_elem.797" = type { %"class.v8::internal::GlobalHandles::NodeSpace"* }
%"class.v8::internal::GlobalHandles::NodeSpace" = type opaque
%"class.std::__1::vector.801" = type { %"class.std::__1::__vector_base.802" }
%"class.std::__1::__vector_base.802" = type { %"class.v8::internal::GlobalHandles::Node"**, %"class.v8::internal::GlobalHandles::Node"**, %"class.std::__1::__compressed_pair.803" }
%"class.v8::internal::GlobalHandles::Node" = type opaque
%"class.std::__1::__compressed_pair.803" = type { %"struct.std::__1::__compressed_pair_elem.804" }
%"struct.std::__1::__compressed_pair_elem.804" = type { %"class.v8::internal::GlobalHandles::Node"** }
%"class.std::__1::unique_ptr.808" = type { %"class.std::__1::__compressed_pair.809" }
%"class.std::__1::__compressed_pair.809" = type { %"struct.std::__1::__compressed_pair_elem.810" }
%"struct.std::__1::__compressed_pair_elem.810" = type { %"class.v8::internal::GlobalHandles::NodeSpace.811"* }
%"class.v8::internal::GlobalHandles::NodeSpace.811" = type opaque
%"class.std::__1::vector.815" = type { %"class.std::__1::__vector_base.816" }
%"class.std::__1::__vector_base.816" = type { %"class.v8::internal::GlobalHandles::TracedNode"**, %"class.v8::internal::GlobalHandles::TracedNode"**, %"class.std::__1::__compressed_pair.817" }
%"class.v8::internal::GlobalHandles::TracedNode" = type opaque
%"class.std::__1::__compressed_pair.817" = type { %"struct.std::__1::__compressed_pair_elem.818" }
%"struct.std::__1::__compressed_pair_elem.818" = type { %"class.v8::internal::GlobalHandles::TracedNode"** }
%"class.std::__1::unique_ptr.822" = type { %"class.std::__1::__compressed_pair.823" }
%"class.std::__1::__compressed_pair.823" = type { %"struct.std::__1::__compressed_pair_elem.824" }
%"struct.std::__1::__compressed_pair_elem.824" = type { %"class.v8::internal::GlobalHandles::OnStackTracedNodeSpace"* }
%"class.v8::internal::GlobalHandles::OnStackTracedNodeSpace" = type opaque
%"class.std::__1::vector.828" = type { %"class.std::__1::__vector_base.829" }
%"class.std::__1::__vector_base.829" = type { %"struct.std::__1::pair.830"*, %"struct.std::__1::pair.830"*, %"class.std::__1::__compressed_pair.831" }
%"struct.std::__1::pair.830" = type opaque
%"class.std::__1::__compressed_pair.831" = type { %"struct.std::__1::__compressed_pair_elem.832" }
%"struct.std::__1::__compressed_pair_elem.832" = type { %"struct.std::__1::pair.830"* }
%"class.std::__1::vector.836" = type { %"class.std::__1::__vector_base.837" }
%"class.std::__1::__vector_base.837" = type { %"struct.std::__1::pair.838"*, %"struct.std::__1::pair.838"*, %"class.std::__1::__compressed_pair.839" }
%"struct.std::__1::pair.838" = type opaque
%"class.std::__1::__compressed_pair.839" = type { %"struct.std::__1::__compressed_pair_elem.840" }
%"struct.std::__1::__compressed_pair_elem.840" = type { %"struct.std::__1::pair.838"* }
%"class.std::__1::vector.844" = type { %"class.std::__1::__vector_base.845" }
%"class.std::__1::__vector_base.845" = type { %"class.v8::internal::GlobalHandles::PendingPhantomCallback"*, %"class.v8::internal::GlobalHandles::PendingPhantomCallback"*, %"class.std::__1::__compressed_pair.846" }
%"class.v8::internal::GlobalHandles::PendingPhantomCallback" = type { void (%"class.v8::WeakCallbackInfo"*)*, i8*, [2 x i8*] }
%"class.v8::WeakCallbackInfo" = type { %"class.v8::Isolate"*, i8*, {}**, [2 x i8*] }
%"class.std::__1::__compressed_pair.846" = type { %"struct.std::__1::__compressed_pair_elem.847" }
%"struct.std::__1::__compressed_pair_elem.847" = type { %"class.v8::internal::GlobalHandles::PendingPhantomCallback"* }
%"class.v8::internal::EternalHandles" = type { i32, %"class.std::__1::vector.851", %"class.std::__1::vector.858" }
%"class.v8::internal::ThreadManager" = type opaque
%"class.v8::bigint::Processor" = type opaque
%"class.v8::internal::RuntimeState" = type { %"class.std::__1::unique_ptr.864" }
%"class.std::__1::unique_ptr.864" = type { %"class.std::__1::__compressed_pair.865" }
%"class.std::__1::__compressed_pair.865" = type { %"struct.std::__1::__compressed_pair_elem.866" }
%"struct.std::__1::__compressed_pair_elem.866" = type { %"struct.v8::internal::Runtime::Function"* }
%"struct.v8::internal::Runtime::Function" = type { i32, i32, i8*, i64, i8, i8 }
%"class.v8::internal::Builtins" = type { %"class.v8::internal::Isolate"*, i8, i32 }
%"class.v8::internal::SetupIsolateDelegate" = type opaque
%"class.v8::internal::RegExpStack" = type opaque
%"class.std::__1::vector.858" = type { %"class.std::__1::__vector_base.859" }
%"class.std::__1::__vector_base.859" = type { i32*, i32*, %"class.std::__1::__compressed_pair.860" }
%"class.std::__1::__compressed_pair.860" = type { %"struct.std::__1::__compressed_pair_elem.51" }
%"struct.std::__1::__compressed_pair_elem.51" = type { i32* }
%"class.v8::internal::DateCache" = type opaque
%"struct.std::__1::atomic.870" = type { %"struct.std::__1::__atomic_base.871" }
%"struct.std::__1::__atomic_base.871" = type { %"struct.std::__1::__cxx_atomic_impl.872" }
%"struct.std::__1::__cxx_atomic_impl.872" = type { %"struct.std::__1::__cxx_atomic_base_impl.873" }
%"struct.std::__1::__cxx_atomic_base_impl.873" = type { i32 }
%"class.v8::Promise" = type { i8 }
%"struct.std::__1::atomic.880" = type { %"struct.std::__1::__atomic_base.881" }
%"struct.std::__1::__atomic_base.881" = type { %"struct.std::__1::__cxx_atomic_impl.882" }
%"struct.std::__1::__cxx_atomic_impl.882" = type { %"struct.std::__1::__cxx_atomic_base_impl.883" }
%"struct.std::__1::__cxx_atomic_base_impl.883" = type { i32 }
%"class.std::__1::basic_string" = type { %"class.std::__1::__compressed_pair.885" }
%"class.std::__1::__compressed_pair.885" = type { %"struct.std::__1::__compressed_pair_elem.886" }
%"struct.std::__1::__compressed_pair_elem.886" = type { %"struct.std::__1::basic_string<char, std::__1::char_traits<char>, std::__1::allocator<char> >::__rep" }
%"struct.std::__1::basic_string<char, std::__1::char_traits<char>, std::__1::allocator<char> >::__rep" = type { %union.anon.887 }
%union.anon.887 = type { %"struct.std::__1::basic_string<char, std::__1::char_traits<char>, std::__1::allocator<char> >::__long" }
%"struct.std::__1::basic_string<char, std::__1::char_traits<char>, std::__1::allocator<char> >::__long" = type { i8*, i64, i64 }
%"class.std::__1::unordered_map.891" = type { %"class.std::__1::__hash_table.892" }
%"class.std::__1::__hash_table.892" = type <{ %"class.std::__1::unique_ptr.893", %"class.std::__1::__compressed_pair.903", %"class.std::__1::__compressed_pair.908", %"class.std::__1::__compressed_pair.911", [4 x i8] }>
%"class.std::__1::unique_ptr.893" = type { %"class.std::__1::__compressed_pair.894" }
%"class.std::__1::__compressed_pair.894" = type { %"struct.std::__1::__compressed_pair_elem.895", %"struct.std::__1::__compressed_pair_elem.897" }
%"struct.std::__1::__compressed_pair_elem.895" = type { %"struct.std::__1::__hash_node_base.896"** }
%"struct.std::__1::__hash_node_base.896" = type { %"struct.std::__1::__hash_node_base.896"* }
%"struct.std::__1::__compressed_pair_elem.897" = type { %"class.std::__1::__bucket_list_deallocator.898" }
%"class.std::__1::__bucket_list_deallocator.898" = type { %"class.std::__1::__compressed_pair.899" }
%"class.std::__1::__compressed_pair.899" = type { %"struct.std::__1::__compressed_pair_elem.13" }
%"class.std::__1::__compressed_pair.903" = type { %"struct.std::__1::__compressed_pair_elem.904" }
%"struct.std::__1::__compressed_pair_elem.904" = type { %"struct.std::__1::__hash_node_base.896" }
%"class.std::__1::__compressed_pair.908" = type { %"struct.std::__1::__compressed_pair_elem.13" }
%"class.std::__1::__compressed_pair.911" = type { %"struct.std::__1::__compressed_pair_elem.85" }
%"struct.std::__1::atomic.218" = type { %"struct.std::__1::__atomic_base.219" }
%"struct.std::__1::__atomic_base.219" = type { %"struct.std::__1::__cxx_atomic_impl.220" }
%"struct.std::__1::__cxx_atomic_impl.220" = type { %"struct.std::__1::__cxx_atomic_base_impl.221" }
%"struct.std::__1::__cxx_atomic_base_impl.221" = type { i8 }
%"class.v8::internal::Debug" = type { %"class.v8::debug::DebugDelegate"*, i8, i8, i8, i8, i8, i8, i8, i8, i8, %"class.v8::internal::DebugInfoListNode"*, %"class.std::__1::unique_ptr.917", %"class.v8::internal::Handle.923", %"class.v8::internal::DebugFeatureTracker", %"class.v8::internal::Debug::ThreadLocal", %"class.v8::internal::Handle.924", %"class.v8::internal::Isolate"* }
%"class.v8::debug::DebugDelegate" = type { i32 (...)** }
%"class.v8::internal::DebugInfoListNode" = type { i64*, %"class.v8::internal::DebugInfoListNode"* }
%"class.std::__1::unique_ptr.917" = type { %"class.std::__1::__compressed_pair.918" }
%"class.std::__1::__compressed_pair.918" = type { %"struct.std::__1::__compressed_pair_elem.919" }
%"struct.std::__1::__compressed_pair_elem.919" = type { %"class.v8::internal::Debug::TemporaryObjectsTracker"* }
%"class.v8::internal::Debug::TemporaryObjectsTracker" = type opaque
%"class.v8::internal::Handle.923" = type { %"class.v8::internal::HandleBase" }
%"class.v8::internal::DebugFeatureTracker" = type <{ %"class.v8::internal::Isolate"*, i32, [4 x i8] }>
%"class.v8::internal::Debug::ThreadLocal" = type <{ i64, i32, i8, [3 x i8], %"class.v8::internal::Object", i8, [3 x i8], i32, i32, i32, %"class.v8::internal::Object", %"class.v8::internal::Object", i32, i8, [3 x i8] }>
%"class.v8::internal::Handle.924" = type { %"class.v8::internal::HandleBase" }
%"class.v8::internal::HeapProfiler" = type { %"class.v8::internal::HeapObjectAllocationTracker", %"class.std::__1::unique_ptr.925", %"class.std::__1::vector.931", %"class.std::__1::unique_ptr.939", %"class.std::__1::unique_ptr.945", i8, i8, %"class.v8::base::Mutex", %"class.std::__1::unique_ptr.951", %"class.std::__1::vector.957", %"struct.std::__1::pair.965" }
%"class.std::__1::unique_ptr.925" = type { %"class.std::__1::__compressed_pair.926" }
%"class.std::__1::__compressed_pair.926" = type { %"struct.std::__1::__compressed_pair_elem.927" }
%"struct.std::__1::__compressed_pair_elem.927" = type { %"class.v8::internal::HeapObjectsMap"* }
%"class.v8::internal::HeapObjectsMap" = type opaque
%"class.std::__1::vector.931" = type { %"class.std::__1::__vector_base.932" }
%"class.std::__1::__vector_base.932" = type { %"class.std::__1::unique_ptr.933"*, %"class.std::__1::unique_ptr.933"*, %"class.std::__1::__compressed_pair.934" }
%"class.std::__1::unique_ptr.933" = type opaque
%"class.std::__1::__compressed_pair.934" = type { %"struct.std::__1::__compressed_pair_elem.935" }
%"struct.std::__1::__compressed_pair_elem.935" = type { %"class.std::__1::unique_ptr.933"* }
%"class.std::__1::unique_ptr.939" = type { %"class.std::__1::__compressed_pair.940" }
%"class.std::__1::__compressed_pair.940" = type { %"struct.std::__1::__compressed_pair_elem.941" }
%"struct.std::__1::__compressed_pair_elem.941" = type { %"class.v8::internal::StringsStorage"* }
%"class.v8::internal::StringsStorage" = type opaque
%"class.std::__1::unique_ptr.945" = type { %"class.std::__1::__compressed_pair.946" }
%"class.std::__1::__compressed_pair.946" = type { %"struct.std::__1::__compressed_pair_elem.947" }
%"struct.std::__1::__compressed_pair_elem.947" = type { %"class.v8::internal::AllocationTracker"* }
%"class.v8::internal::AllocationTracker" = type opaque
%"class.std::__1::unique_ptr.951" = type { %"class.std::__1::__compressed_pair.952" }
%"class.std::__1::__compressed_pair.952" = type { %"struct.std::__1::__compressed_pair_elem.953" }
%"struct.std::__1::__compressed_pair_elem.953" = type { %"class.v8::internal::SamplingHeapProfiler"* }
%"class.v8::internal::SamplingHeapProfiler" = type opaque
%"class.std::__1::vector.957" = type { %"class.std::__1::__vector_base.958" }
%"class.std::__1::__vector_base.958" = type { %"struct.std::__1::pair.959"*, %"struct.std::__1::pair.959"*, %"class.std::__1::__compressed_pair.960" }
%"struct.std::__1::pair.959" = type opaque
%"class.std::__1::__compressed_pair.960" = type { %"struct.std::__1::__compressed_pair_elem.961" }
%"struct.std::__1::__compressed_pair_elem.961" = type { %"struct.std::__1::pair.959"* }
%"struct.std::__1::pair.965" = type { i8 (%"class.v8::Isolate"*, %"class.v8::Local.62"*, i16, i8*)*, i8* }
%"class.v8::Local.62" = type { %"class.v8::Value"* }
%"class.std::__1::unique_ptr.966" = type { %"class.std::__1::__compressed_pair.967" }
%"class.std::__1::__compressed_pair.967" = type { %"struct.std::__1::__compressed_pair_elem.968" }
%"struct.std::__1::__compressed_pair_elem.968" = type { %"class.v8::internal::CodeEventDispatcher"* }
%"class.v8::internal::CodeEventDispatcher" = type { %"class.v8::internal::CodeEventListener", %"class.std::__1::unordered_set.969", %"class.v8::base::Mutex" }
%"class.std::__1::unordered_set.969" = type { %"class.std::__1::__hash_table.970" }
%"class.std::__1::__hash_table.970" = type <{ %"class.std::__1::unique_ptr.971", %"class.std::__1::__compressed_pair.981", %"class.std::__1::__compressed_pair.986", %"class.std::__1::__compressed_pair.990", [4 x i8] }>
%"class.std::__1::unique_ptr.971" = type { %"class.std::__1::__compressed_pair.972" }
%"class.std::__1::__compressed_pair.972" = type { %"struct.std::__1::__compressed_pair_elem.973", %"struct.std::__1::__compressed_pair_elem.975" }
%"struct.std::__1::__compressed_pair_elem.973" = type { %"struct.std::__1::__hash_node_base.974"** }
%"struct.std::__1::__hash_node_base.974" = type { %"struct.std::__1::__hash_node_base.974"* }
%"struct.std::__1::__compressed_pair_elem.975" = type { %"class.std::__1::__bucket_list_deallocator.976" }
%"class.std::__1::__bucket_list_deallocator.976" = type { %"class.std::__1::__compressed_pair.977" }
%"class.std::__1::__compressed_pair.977" = type { %"struct.std::__1::__compressed_pair_elem.13" }
%"class.std::__1::__compressed_pair.981" = type { %"struct.std::__1::__compressed_pair_elem.982" }
%"struct.std::__1::__compressed_pair_elem.982" = type { %"struct.std::__1::__hash_node_base.974" }
%"class.std::__1::__compressed_pair.986" = type { %"struct.std::__1::__compressed_pair_elem.13" }
%"class.std::__1::__compressed_pair.990" = type { %"struct.std::__1::__compressed_pair_elem.85" }
%"class.v8::internal::AstStringConstants" = type opaque
%"class.v8::internal::interpreter::Interpreter" = type opaque
%"class.v8::internal::compiler::PerIsolateCompilerCache" = type opaque
%"class.v8::internal::CompilerDispatcher" = type opaque
%"class.std::__1::queue" = type { %"class.std::__1::deque" }
%"class.std::__1::deque" = type { %"class.std::__1::__deque_base" }
%"class.std::__1::__deque_base" = type { %"struct.std::__1::__split_buffer", i64, %"class.std::__1::__compressed_pair.1004" }
%"struct.std::__1::__split_buffer" = type { %"struct.std::__1::pair.998"**, %"struct.std::__1::pair.998"**, %"struct.std::__1::pair.998"**, %"class.std::__1::__compressed_pair.999" }
%"struct.std::__1::pair.998" = type opaque
%"class.std::__1::__compressed_pair.999" = type { %"struct.std::__1::__compressed_pair_elem.1000" }
%"struct.std::__1::__compressed_pair_elem.1000" = type { %"struct.std::__1::pair.998"** }
%"class.std::__1::__compressed_pair.1004" = type { %"struct.std::__1::__compressed_pair_elem.13" }
%"class.v8::String" = type { i8 }
%"class.v8::Context" = type { i8 }
%"class.v8::FunctionCallbackInfo" = type <{ i64*, i64*, i32, [4 x i8] }>
%"class.v8::internal::Relocatable" = type { i32 (...)**, %"class.v8::internal::Isolate"*, %"class.v8::internal::Relocatable"* }
%"class.std::__1::vector.1009" = type { %"class.std::__1::__vector_base.1010" }
%"class.std::__1::__vector_base.1010" = type { %"class.v8::internal::Handle.1011"*, %"class.v8::internal::Handle.1011"*, %"class.std::__1::__compressed_pair.1012" }
%"class.v8::internal::Handle.1011" = type { %"class.v8::internal::HandleBase" }
%"class.std::__1::__compressed_pair.1012" = type { %"struct.std::__1::__compressed_pair_elem.1013" }
%"struct.std::__1::__compressed_pair_elem.1013" = type { %"class.v8::internal::Handle.1011"* }
%"class.v8::internal::Object" = type { %"class.v8::internal::TaggedImpl" }
%"class.v8::internal::TaggedImpl" = type { i64 }
%"class.v8::internal::AddressToIndexHashMap" = type opaque
%"class.v8::internal::HeapObjectToIndexHashMap" = type opaque
%"class.v8::internal::MicrotaskQueue" = type opaque
%"class.v8::internal::CompilationStatistics" = type opaque
%"class.v8::internal::CodeTracer" = type <{ %"class.v8::internal::EmbeddedVector", %struct._IO_FILE*, i32, [4 x i8] }>
%"class.v8::internal::EmbeddedVector" = type { %"class.v8::internal::Vector", [128 x i8] }
%"class.v8::internal::Vector" = type { i8*, i64 }
%"class.v8::PromiseRejectMessage" = type { %"class.v8::Local.875", i32, %"class.v8::Local.62" }
%"class.v8::Local.875" = type { %"class.v8::Promise"* }
%"class.v8::StartupData" = type { i8*, i32 }
%"class.v8_inspector::V8Inspector" = type opaque
%"class.v8::internal::compiler::NodeObserver" = type opaque
%"class.v8::internal::OptimizingCompileDispatcher" = type opaque
%"class.std::__1::unique_ptr.1017" = type { %"class.std::__1::__compressed_pair.1018" }
%"class.std::__1::__compressed_pair.1018" = type { %"struct.std::__1::__compressed_pair_elem.1019" }
%"struct.std::__1::__compressed_pair_elem.1019" = type { %"class.v8::internal::PersistentHandlesList"* }
%"class.v8::internal::PersistentHandlesList" = type { %"class.v8::base::Mutex", %"class.v8::internal::PersistentHandles"* }
%"class.std::__1::vector.1023" = type { %"class.std::__1::__vector_base.1024" }
%"class.std::__1::__vector_base.1024" = type { void (%"class.v8::Isolate"*)**, void (%"class.v8::Isolate"*)**, %"class.std::__1::__compressed_pair.1025" }
%"class.std::__1::__compressed_pair.1025" = type { %"struct.std::__1::__compressed_pair_elem.1026" }
%"struct.std::__1::__compressed_pair_elem.1026" = type { void (%"class.v8::Isolate"*)** }
%"class.std::__1::shared_ptr.1030" = type { %"class.v8::internal::metrics::Recorder"*, %"class.std::__1::__shared_weak_count"* }
%"class.v8::internal::metrics::Recorder" = type opaque
%"class.std::__1::unordered_map.1031" = type { %"class.std::__1::__hash_table.1032" }
%"class.std::__1::__hash_table.1032" = type <{ %"class.std::__1::unique_ptr.1033", %"class.std::__1::__compressed_pair.1043", %"class.std::__1::__compressed_pair.1048", %"class.std::__1::__compressed_pair.1051", [4 x i8] }>
%"class.std::__1::unique_ptr.1033" = type { %"class.std::__1::__compressed_pair.1034" }
%"class.std::__1::__compressed_pair.1034" = type { %"struct.std::__1::__compressed_pair_elem.1035", %"struct.std::__1::__compressed_pair_elem.1037" }
%"struct.std::__1::__compressed_pair_elem.1035" = type { %"struct.std::__1::__hash_node_base.1036"** }
%"struct.std::__1::__hash_node_base.1036" = type { %"struct.std::__1::__hash_node_base.1036"* }
%"struct.std::__1::__compressed_pair_elem.1037" = type { %"class.std::__1::__bucket_list_deallocator.1038" }
%"class.std::__1::__bucket_list_deallocator.1038" = type { %"class.std::__1::__compressed_pair.1039" }
%"class.std::__1::__compressed_pair.1039" = type { %"struct.std::__1::__compressed_pair_elem.13" }
%"class.std::__1::__compressed_pair.1043" = type { %"struct.std::__1::__compressed_pair_elem.1044" }
%"struct.std::__1::__compressed_pair_elem.1044" = type { %"struct.std::__1::__hash_node_base.1036" }
%"class.std::__1::__compressed_pair.1048" = type { %"struct.std::__1::__compressed_pair_elem.13" }
%"class.std::__1::__compressed_pair.1051" = type { %"struct.std::__1::__compressed_pair_elem.85" }
%"struct.v8::metrics::LongTaskStats" = type { i64, i64, i64 }
%"class.std::__1::vector.589" = type { %"class.std::__1::__vector_base.590" }
%"class.std::__1::__vector_base.590" = type { %"class.v8::internal::Object"*, %"class.v8::internal::Object"*, %"class.std::__1::__compressed_pair.591" }
%"class.std::__1::__compressed_pair.591" = type { %"struct.std::__1::__compressed_pair_elem.592" }
%"struct.std::__1::__compressed_pair_elem.592" = type { %"class.v8::internal::Object"* }
%"class.v8::internal::BuiltinsConstantsTableBuilder" = type opaque
%"class.v8::ArrayBuffer::Allocator" = type { i32 (...)** }
%"class.std::__1::shared_ptr.226" = type { %"class.v8::ArrayBuffer::Allocator"*, %"class.std::__1::__shared_weak_count"* }
%"class.v8::internal::FutexWaitListNode" = type { %"class.v8::internal::Isolate"*, %"class.std::__1::shared_ptr.1055", %"class.v8::internal::CancelableTaskManager"*, %"class.v8::base::ConditionVariable", %"class.v8::internal::FutexWaitListNode"*, %"class.v8::internal::FutexWaitListNode"*, %"class.std::__1::weak_ptr.1084", i64, i8*, i8, i8, %"class.v8::Global", %"class.v8::Global.1085", %"class.v8::base::TimeTicks", i64 }
%"class.std::__1::shared_ptr.1055" = type { %"class.v8::TaskRunner"*, %"class.std::__1::__shared_weak_count"* }
%"class.v8::TaskRunner" = type { i32 (...)** }
%"class.v8::base::ConditionVariable" = type { %union.pthread_cond_t }
%union.pthread_cond_t = type { %struct.__pthread_cond_s }
%struct.__pthread_cond_s = type { %union.anon.1080, %union.anon.1082, [2 x i32], [2 x i32], i32, i32, [2 x i32] }
%union.anon.1080 = type { i64 }
%union.anon.1082 = type { i64 }
%"class.std::__1::weak_ptr.1084" = type { %"class.v8::internal::BackingStore"*, %"class.std::__1::__shared_weak_count"* }
%"class.v8::Global" = type { %"class.v8::PersistentBase" }
%"class.v8::PersistentBase" = type { %"class.v8::Promise"* }
%"class.v8::Global.1085" = type { %"class.v8::PersistentBase.1086" }
%"class.v8::PersistentBase.1086" = type { %"class.v8::Context"* }
%"class.v8::internal::CancelableTaskManager" = type <{ i64, %"class.std::__1::unordered_map.1056", %"class.v8::base::ConditionVariable", %"class.v8::base::Mutex", i8, [7 x i8] }>
%"class.std::__1::unordered_map.1056" = type { %"class.std::__1::__hash_table.1057" }
%"class.std::__1::__hash_table.1057" = type <{ %"class.std::__1::unique_ptr.1058", %"class.std::__1::__compressed_pair.1068", %"class.std::__1::__compressed_pair.1073", %"class.std::__1::__compressed_pair.1076", [4 x i8] }>
%"class.std::__1::unique_ptr.1058" = type { %"class.std::__1::__compressed_pair.1059" }
%"class.std::__1::__compressed_pair.1059" = type { %"struct.std::__1::__compressed_pair_elem.1060", %"struct.std::__1::__compressed_pair_elem.1062" }
%"struct.std::__1::__compressed_pair_elem.1060" = type { %"struct.std::__1::__hash_node_base.1061"** }
%"struct.std::__1::__hash_node_base.1061" = type { %"struct.std::__1::__hash_node_base.1061"* }
%"struct.std::__1::__compressed_pair_elem.1062" = type { %"class.std::__1::__bucket_list_deallocator.1063" }
%"class.std::__1::__bucket_list_deallocator.1063" = type { %"class.std::__1::__compressed_pair.1064" }
%"class.std::__1::__compressed_pair.1064" = type { %"struct.std::__1::__compressed_pair_elem.13" }
%"class.std::__1::__compressed_pair.1068" = type { %"struct.std::__1::__compressed_pair_elem.1069" }
%"struct.std::__1::__compressed_pair_elem.1069" = type { %"struct.std::__1::__hash_node_base.1061" }
%"class.std::__1::__compressed_pair.1073" = type { %"struct.std::__1::__compressed_pair_elem.13" }
%"class.std::__1::__compressed_pair.1076" = type { %"struct.std::__1::__compressed_pair_elem.85" }
%"class.v8::debug::ConsoleDelegate" = type { i32 (...)** }
%"class.v8::debug::AsyncEventDelegate" = type { i32 (...)** }
%"class.std::__1::unique_ptr.1087" = type { %"class.std::__1::__compressed_pair.1088" }
%"class.std::__1::__compressed_pair.1088" = type { %"struct.std::__1::__compressed_pair_elem.1089" }
%"struct.std::__1::__compressed_pair_elem.1089" = type { %"class.v8::internal::LocalIsolate"* }
%"class.v8::internal::LocalIsolate" = type { %"class.v8::internal::HiddenLocalFactory", %"class.v8::internal::LocalHeap", %"class.v8::internal::Isolate"*, %"class.std::__1::unique_ptr.1116", %"class.v8::internal::ThreadId", i64, %"class.v8::internal::RuntimeCallStats"* }
%"class.v8::internal::HiddenLocalFactory" = type { %"class.v8::internal::LocalFactory" }
%"class.v8::internal::LocalFactory" = type { %"class.v8::internal::ReadOnlyRoots" }
%"class.v8::internal::ReadOnlyRoots" = type { i64* }
%"class.std::__1::unique_ptr.1116" = type { %"class.std::__1::__compressed_pair.1117" }
%"class.std::__1::__compressed_pair.1117" = type { %"struct.std::__1::__compressed_pair_elem.1118" }
%"struct.std::__1::__compressed_pair_elem.1118" = type { %"class.v8::internal::LocalLogger"* }
%"class.v8::internal::LocalLogger" = type opaque
%"struct.v8::internal::ManagedPtrDestructor" = type { i64, %"struct.v8::internal::ManagedPtrDestructor"*, %"struct.v8::internal::ManagedPtrDestructor"*, i8*, void (i8*)*, i64* }
%"class.v8::internal::wasm::WasmEngine" = type opaque
%"class.std::__1::unique_ptr.1125" = type { %"class.std::__1::__compressed_pair.1126" }
%"class.std::__1::__compressed_pair.1126" = type { %"struct.std::__1::__compressed_pair_elem.1127" }
%"struct.std::__1::__compressed_pair_elem.1127" = type { %"class.v8::internal::TracingCpuProfilerImpl"* }
%"class.v8::internal::TracingCpuProfilerImpl" = type opaque
%"class.v8::internal::EmbeddedFileWriterInterface" = type opaque
%"class.v8::Context::BackupIncumbentScope" = type { %"class.v8::Local.876", i64, %"class.v8::Context::BackupIncumbentScope"* }
%"class.v8::Local.876" = type { %"class.v8::Context"* }
%"class.v8::internal::Isolate::ThreadDataTable" = type { %"class.std::__1::unordered_map.1133" }
%"class.std::__1::unordered_map.1133" = type { %"class.std::__1::__hash_table.1134" }
%"class.std::__1::__hash_table.1134" = type <{ %"class.std::__1::unique_ptr.1135", %"class.std::__1::__compressed_pair.1145", %"class.std::__1::__compressed_pair.1150", %"class.std::__1::__compressed_pair.1153", [4 x i8] }>
%"class.std::__1::unique_ptr.1135" = type { %"class.std::__1::__compressed_pair.1136" }
%"class.std::__1::__compressed_pair.1136" = type { %"struct.std::__1::__compressed_pair_elem.1137", %"struct.std::__1::__compressed_pair_elem.1139" }
%"struct.std::__1::__compressed_pair_elem.1137" = type { %"struct.std::__1::__hash_node_base.1138"** }
%"struct.std::__1::__hash_node_base.1138" = type { %"struct.std::__1::__hash_node_base.1138"* }
%"struct.std::__1::__compressed_pair_elem.1139" = type { %"class.std::__1::__bucket_list_deallocator.1140" }
%"class.std::__1::__bucket_list_deallocator.1140" = type { %"class.std::__1::__compressed_pair.1141" }
%"class.std::__1::__compressed_pair.1141" = type { %"struct.std::__1::__compressed_pair_elem.13" }
%"class.std::__1::__compressed_pair.1145" = type { %"struct.std::__1::__compressed_pair_elem.1146" }
%"struct.std::__1::__compressed_pair_elem.1146" = type { %"struct.std::__1::__hash_node_base.1138" }
%"class.std::__1::__compressed_pair.1150" = type { %"struct.std::__1::__compressed_pair_elem.13" }
%"class.std::__1::__compressed_pair.1153" = type { %"struct.std::__1::__compressed_pair_elem.85" }
%"class.v8::base::Mutex" = type { %union.pthread_mutex_t }
%"struct.std::__1::atomic.1159" = type { %"struct.std::__1::__atomic_base.1160" }
%"struct.std::__1::__atomic_base.1160" = type { %"struct.std::__1::__cxx_atomic_impl.1161" }
%"struct.std::__1::__cxx_atomic_impl.1161" = type { %"struct.std::__1::__cxx_atomic_base_impl.1162" }
%"struct.std::__1::__cxx_atomic_base_impl.1162" = type { %"class.std::__1::vector.1163"* }
%"class.std::__1::vector.1163" = type { %"class.std::__1::__vector_base.1164" }
%"class.std::__1::__vector_base.1164" = type { %"struct.v8::MemoryRange"*, %"struct.v8::MemoryRange"*, %"class.std::__1::__compressed_pair.1165" }
%"struct.v8::MemoryRange" = type { i8*, i64 }
%"class.std::__1::__compressed_pair.1165" = type { %"struct.std::__1::__compressed_pair_elem.1166" }
%"struct.std::__1::__compressed_pair_elem.1166" = type { %"struct.v8::MemoryRange"* }
%"class.v8::internal::ZoneVector.1170" = type { %"class.std::__1::vector.1171" }
%"class.std::__1::vector.1171" = type { %"class.std::__1::__vector_base.1172" }
%"class.std::__1::__vector_base.1172" = type { %"class.v8::internal::compiler::InstructionBlock"**, %"class.v8::internal::compiler::InstructionBlock"**, %"class.std::__1::__compressed_pair.1173" }
%"class.std::__1::__compressed_pair.1173" = type { %"struct.std::__1::__compressed_pair_elem.1174", %"struct.std::__1::__compressed_pair_elem.1175" }
%"struct.std::__1::__compressed_pair_elem.1174" = type { %"class.v8::internal::compiler::InstructionBlock"** }
%"struct.std::__1::__compressed_pair_elem.1175" = type { %"class.v8::internal::ZoneAllocator.1176" }
%"class.v8::internal::ZoneAllocator.1176" = type { %"class.v8::internal::Zone"* }
%"class.v8::internal::ZoneMap" = type { %"class.std::__1::map" }
%"class.std::__1::map" = type { %"class.std::__1::__tree.1177" }
%"class.std::__1::__tree.1177" = type { %"class.std::__1::__tree_end_node"*, %"class.std::__1::__compressed_pair.1178", %"class.std::__1::__compressed_pair.1181" }
%"class.std::__1::__compressed_pair.1178" = type { %"struct.std::__1::__compressed_pair_elem", %"struct.std::__1::__compressed_pair_elem.1179" }
%"struct.std::__1::__compressed_pair_elem.1179" = type { %"class.v8::internal::ZoneAllocator.1180" }
%"class.v8::internal::ZoneAllocator.1180" = type { %"class.v8::internal::Zone"* }
%"class.std::__1::__compressed_pair.1181" = type { %"struct.std::__1::__compressed_pair_elem.13" }
%"class.std::__1::map.1185" = type { %"class.std::__1::__tree.1186" }
%"class.std::__1::__tree.1186" = type { %"class.std::__1::__tree_end_node"*, %"class.std::__1::__compressed_pair.1187", %"class.std::__1::__compressed_pair.1190" }
%"class.std::__1::__compressed_pair.1187" = type { %"struct.std::__1::__compressed_pair_elem", %"struct.std::__1::__compressed_pair_elem.1188" }
%"struct.std::__1::__compressed_pair_elem.1188" = type { %"class.v8::internal::ZoneAllocator.1189" }
%"class.v8::internal::ZoneAllocator.1189" = type { %"class.v8::internal::Zone"* }
%"class.std::__1::__compressed_pair.1190" = type { %"struct.std::__1::__compressed_pair_elem.13" }
%"class.v8::internal::ZoneVector.1193" = type { %"class.std::__1::vector.1194" }
%"class.std::__1::vector.1194" = type { %"class.std::__1::__vector_base.1195" }
%"class.std::__1::__vector_base.1195" = type { %"class.v8::internal::compiler::Constant"*, %"class.v8::internal::compiler::Constant"*, %"class.std::__1::__compressed_pair.1196" }
%"class.v8::internal::compiler::Constant" = type { i32, i8, i64 }
%"class.std::__1::__compressed_pair.1196" = type { %"struct.std::__1::__compressed_pair_elem.1197", %"struct.std::__1::__compressed_pair_elem.1198" }
%"struct.std::__1::__compressed_pair_elem.1197" = type { %"class.v8::internal::compiler::Constant"* }
%"struct.std::__1::__compressed_pair_elem.1198" = type { %"class.v8::internal::ZoneAllocator.1199" }
%"class.v8::internal::ZoneAllocator.1199" = type { %"class.v8::internal::Zone"* }
%"class.v8::internal::ZoneVector.37" = type { %"class.std::__1::vector.38" }
%"class.std::__1::vector.38" = type { %"class.std::__1::__vector_base.39" }
%"class.std::__1::__vector_base.39" = type { %"class.v8::internal::compiler::RpoNumber"*, %"class.v8::internal::compiler::RpoNumber"*, %"class.std::__1::__compressed_pair.40" }
%"class.v8::internal::compiler::RpoNumber" = type { i32 }
%"class.std::__1::__compressed_pair.40" = type { %"struct.std::__1::__compressed_pair_elem.41", %"struct.std::__1::__compressed_pair_elem.42" }
%"struct.std::__1::__compressed_pair_elem.41" = type { %"class.v8::internal::compiler::RpoNumber"* }
%"struct.std::__1::__compressed_pair_elem.42" = type { %"class.v8::internal::ZoneAllocator.43" }
%"class.v8::internal::ZoneAllocator.43" = type { %"class.v8::internal::Zone"* }
%"class.v8::internal::ZoneDeque" = type { %"class.std::__1::deque.1200" }
%"class.std::__1::deque.1200" = type { %"class.std::__1::__deque_base.1201" }
%"class.std::__1::__deque_base.1201" = type { %"struct.std::__1::__split_buffer.1202", i64, %"class.std::__1::__compressed_pair.1221" }
%"struct.std::__1::__split_buffer.1202" = type { %"class.v8::internal::compiler::Instruction"***, %"class.v8::internal::compiler::Instruction"***, %"class.v8::internal::compiler::Instruction"***, %"class.std::__1::__compressed_pair.1217" }
%"class.v8::internal::compiler::Instruction" = type { i32, i32, [2 x %"class.v8::internal::compiler::ParallelMove"*], %"class.v8::internal::compiler::ReferenceMap"*, %"class.v8::internal::compiler::InstructionBlock"*, [1 x %"class.v8::internal::compiler::InstructionOperand"] }
%"class.v8::internal::compiler::ParallelMove" = type { %"class.v8::internal::ZoneVector.1203" }
%"class.v8::internal::ZoneVector.1203" = type { %"class.std::__1::vector.1204" }
%"class.std::__1::vector.1204" = type { %"class.std::__1::__vector_base.1205" }
%"class.std::__1::__vector_base.1205" = type { %"class.v8::internal::compiler::MoveOperands"**, %"class.v8::internal::compiler::MoveOperands"**, %"class.std::__1::__compressed_pair.1206" }
%"class.v8::internal::compiler::MoveOperands" = type { %"class.v8::internal::compiler::InstructionOperand", %"class.v8::internal::compiler::InstructionOperand" }
%"class.std::__1::__compressed_pair.1206" = type { %"struct.std::__1::__compressed_pair_elem.1207", %"struct.std::__1::__compressed_pair_elem.1208" }
%"struct.std::__1::__compressed_pair_elem.1207" = type { %"class.v8::internal::compiler::MoveOperands"** }
%"struct.std::__1::__compressed_pair_elem.1208" = type { %"class.v8::internal::ZoneAllocator.1209" }
%"class.v8::internal::ZoneAllocator.1209" = type { %"class.v8::internal::Zone"* }
%"class.v8::internal::compiler::ReferenceMap" = type <{ %"class.v8::internal::ZoneVector.1210", i32, [4 x i8] }>
%"class.v8::internal::ZoneVector.1210" = type { %"class.std::__1::vector.1211" }
%"class.std::__1::vector.1211" = type { %"class.std::__1::__vector_base.1212" }
%"class.std::__1::__vector_base.1212" = type { %"class.v8::internal::compiler::InstructionOperand"*, %"class.v8::internal::compiler::InstructionOperand"*, %"class.std::__1::__compressed_pair.1213" }
%"class.std::__1::__compressed_pair.1213" = type { %"struct.std::__1::__compressed_pair_elem.1214", %"struct.std::__1::__compressed_pair_elem.1215" }
%"struct.std::__1::__compressed_pair_elem.1214" = type { %"class.v8::internal::compiler::InstructionOperand"* }
%"struct.std::__1::__compressed_pair_elem.1215" = type { %"class.v8::internal::ZoneAllocator.1216" }
%"class.v8::internal::ZoneAllocator.1216" = type { %"class.v8::internal::Zone"* }
%"class.std::__1::__compressed_pair.1217" = type { %"struct.std::__1::__compressed_pair_elem.1218", %"struct.std::__1::__compressed_pair_elem.1219" }
%"struct.std::__1::__compressed_pair_elem.1218" = type { %"class.v8::internal::compiler::Instruction"*** }
%"struct.std::__1::__compressed_pair_elem.1219" = type { %"class.v8::internal::RecyclingZoneAllocator" }
%"class.v8::internal::RecyclingZoneAllocator" = type { %"class.v8::internal::ZoneAllocator.1220", %"struct.v8::internal::RecyclingZoneAllocator<v8::internal::compiler::Instruction **>::FreeBlock"* }
%"class.v8::internal::ZoneAllocator.1220" = type { %"class.v8::internal::Zone"* }
%"struct.v8::internal::RecyclingZoneAllocator<v8::internal::compiler::Instruction **>::FreeBlock" = type opaque
%"class.std::__1::__compressed_pair.1221" = type { %"struct.std::__1::__compressed_pair_elem.13", %"struct.std::__1::__compressed_pair_elem.1222" }
%"struct.std::__1::__compressed_pair_elem.1222" = type { %"class.v8::internal::RecyclingZoneAllocator.1223" }
%"class.v8::internal::RecyclingZoneAllocator.1223" = type { %"class.v8::internal::ZoneAllocator.1224", %"struct.v8::internal::RecyclingZoneAllocator<v8::internal::compiler::Instruction *>::FreeBlock"* }
%"class.v8::internal::ZoneAllocator.1224" = type { %"class.v8::internal::Zone"* }
%"struct.v8::internal::RecyclingZoneAllocator<v8::internal::compiler::Instruction *>::FreeBlock" = type opaque
%"class.v8::internal::ZoneDeque.1225" = type { %"class.std::__1::deque.1226" }
%"class.std::__1::deque.1226" = type { %"class.std::__1::__deque_base.1227" }
%"class.std::__1::__deque_base.1227" = type { %"struct.std::__1::__split_buffer.1228", i64, %"class.std::__1::__compressed_pair.1234" }
%"struct.std::__1::__split_buffer.1228" = type { %"class.v8::internal::compiler::ReferenceMap"***, %"class.v8::internal::compiler::ReferenceMap"***, %"class.v8::internal::compiler::ReferenceMap"***, %"class.std::__1::__compressed_pair.1229" }
%"class.std::__1::__compressed_pair.1229" = type { %"struct.std::__1::__compressed_pair_elem.1230", %"struct.std::__1::__compressed_pair_elem.1231" }
%"struct.std::__1::__compressed_pair_elem.1230" = type { %"class.v8::internal::compiler::ReferenceMap"*** }
%"struct.std::__1::__compressed_pair_elem.1231" = type { %"class.v8::internal::RecyclingZoneAllocator.1232" }
%"class.v8::internal::RecyclingZoneAllocator.1232" = type { %"class.v8::internal::ZoneAllocator.1233", %"struct.v8::internal::RecyclingZoneAllocator<v8::internal::compiler::ReferenceMap **>::FreeBlock"* }
%"class.v8::internal::ZoneAllocator.1233" = type { %"class.v8::internal::Zone"* }
%"struct.v8::internal::RecyclingZoneAllocator<v8::internal::compiler::ReferenceMap **>::FreeBlock" = type opaque
%"class.std::__1::__compressed_pair.1234" = type { %"struct.std::__1::__compressed_pair_elem.13", %"struct.std::__1::__compressed_pair_elem.1235" }
%"struct.std::__1::__compressed_pair_elem.1235" = type { %"class.v8::internal::RecyclingZoneAllocator.1236" }
%"class.v8::internal::RecyclingZoneAllocator.1236" = type { %"class.v8::internal::ZoneAllocator.1237", %"struct.v8::internal::RecyclingZoneAllocator<v8::internal::compiler::ReferenceMap *>::FreeBlock"* }
%"class.v8::internal::ZoneAllocator.1237" = type { %"class.v8::internal::Zone"* }
%"struct.v8::internal::RecyclingZoneAllocator<v8::internal::compiler::ReferenceMap *>::FreeBlock" = type opaque
%"class.v8::internal::ZoneVector.1238" = type { %"class.std::__1::vector.1239" }
%"class.std::__1::vector.1239" = type { %"class.std::__1::__vector_base.1240" }
%"class.std::__1::__vector_base.1240" = type { i8*, i8*, %"class.std::__1::__compressed_pair.1241" }
%"class.std::__1::__compressed_pair.1241" = type { %"struct.std::__1::__compressed_pair_elem.1242", %"struct.std::__1::__compressed_pair_elem.1243" }
%"struct.std::__1::__compressed_pair_elem.1242" = type { i8* }
%"struct.std::__1::__compressed_pair_elem.1243" = type { %"class.v8::internal::ZoneAllocator.1244" }
%"class.v8::internal::ZoneAllocator.1244" = type { %"class.v8::internal::Zone"* }
%"class.v8::internal::ZoneVector.1245" = type { %"class.std::__1::vector.1246" }
%"class.std::__1::vector.1246" = type { %"class.std::__1::__vector_base.1247" }
%"class.std::__1::__vector_base.1247" = type { %"class.v8::internal::compiler::DeoptimizationEntry"*, %"class.v8::internal::compiler::DeoptimizationEntry"*, %"class.std::__1::__compressed_pair.1264" }
%"class.v8::internal::compiler::DeoptimizationEntry" = type { %"class.v8::internal::compiler::FrameStateDescriptor"*, i8, i8, [6 x i8], %"struct.v8::internal::compiler::FeedbackSource" }
%"class.v8::internal::compiler::FrameStateDescriptor" = type { i32, %"class.v8::internal::BytecodeOffset", %"class.v8::internal::compiler::OutputFrameStateCombine", i64, i64, i64, i64, %"class.v8::internal::compiler::StateValueList", %"class.v8::internal::MaybeHandle", %"class.v8::internal::compiler::FrameStateDescriptor"* }
%"class.v8::internal::BytecodeOffset" = type { i32 }
%"class.v8::internal::compiler::OutputFrameStateCombine" = type { i64 }
%"class.v8::internal::compiler::StateValueList" = type { %"class.v8::internal::ZoneVector.1248", %"class.v8::internal::ZoneVector.1256" }
%"class.v8::internal::ZoneVector.1248" = type { %"class.std::__1::vector.1249" }
%"class.std::__1::vector.1249" = type { %"class.std::__1::__vector_base.1250" }
%"class.std::__1::__vector_base.1250" = type { %"class.v8::internal::compiler::StateValueDescriptor"*, %"class.v8::internal::compiler::StateValueDescriptor"*, %"class.std::__1::__compressed_pair.1252" }
%"class.v8::internal::compiler::StateValueDescriptor" = type { i8, %"class.v8::internal::MachineType", %union.anon.1251 }
%"class.v8::internal::MachineType" = type { i8, i8 }
%union.anon.1251 = type { i64 }
%"class.std::__1::__compressed_pair.1252" = type { %"struct.std::__1::__compressed_pair_elem.1253", %"struct.std::__1::__compressed_pair_elem.1254" }
%"struct.std::__1::__compressed_pair_elem.1253" = type { %"class.v8::internal::compiler::StateValueDescriptor"* }
%"struct.std::__1::__compressed_pair_elem.1254" = type { %"class.v8::internal::ZoneAllocator.1255" }
%"class.v8::internal::ZoneAllocator.1255" = type { %"class.v8::internal::Zone"* }
%"class.v8::internal::ZoneVector.1256" = type { %"class.std::__1::vector.1257" }
%"class.std::__1::vector.1257" = type { %"class.std::__1::__vector_base.1258" }
%"class.std::__1::__vector_base.1258" = type { %"class.v8::internal::compiler::StateValueList"**, %"class.v8::internal::compiler::StateValueList"**, %"class.std::__1::__compressed_pair.1259" }
%"class.std::__1::__compressed_pair.1259" = type { %"struct.std::__1::__compressed_pair_elem.1260", %"struct.std::__1::__compressed_pair_elem.1261" }
%"struct.std::__1::__compressed_pair_elem.1260" = type { %"class.v8::internal::compiler::StateValueList"** }
%"struct.std::__1::__compressed_pair_elem.1261" = type { %"class.v8::internal::ZoneAllocator.1262" }
%"class.v8::internal::ZoneAllocator.1262" = type { %"class.v8::internal::Zone"* }
%"class.v8::internal::MaybeHandle" = type { i64* }
%"struct.v8::internal::compiler::FeedbackSource" = type <{ %"class.v8::internal::Handle.1263", %"class.v8::internal::FeedbackSlot", [4 x i8] }>
%"class.v8::internal::Handle.1263" = type { %"class.v8::internal::HandleBase" }
%"class.v8::internal::FeedbackSlot" = type { i32 }
%"class.std::__1::__compressed_pair.1264" = type { %"struct.std::__1::__compressed_pair_elem.1265", %"struct.std::__1::__compressed_pair_elem.1266" }
%"struct.std::__1::__compressed_pair_elem.1265" = type { %"class.v8::internal::compiler::DeoptimizationEntry"* }
%"struct.std::__1::__compressed_pair_elem.1266" = type { %"class.v8::internal::ZoneAllocator.1267" }
%"class.v8::internal::ZoneAllocator.1267" = type { %"class.v8::internal::Zone"* }
%"class.v8::internal::compiler::InstructionBlock" = type <{ %"class.v8::internal::ZoneVector.37", %"class.v8::internal::ZoneVector.37", %"class.v8::internal::ZoneVector.44", %"class.v8::internal::compiler::RpoNumber", %"class.v8::internal::compiler::RpoNumber", %"class.v8::internal::compiler::RpoNumber", %"class.v8::internal::compiler::RpoNumber", %"class.v8::internal::compiler::RpoNumber", i32, i32, i8, i8, i8, i8, i8, i8, i8, [5 x i8] }>
%"class.v8::internal::ZoneVector.44" = type { %"class.std::__1::vector.45" }
%"class.std::__1::vector.45" = type { %"class.std::__1::__vector_base.46" }
%"class.std::__1::__vector_base.46" = type { %"class.v8::internal::compiler::PhiInstruction"**, %"class.v8::internal::compiler::PhiInstruction"**, %"class.std::__1::__compressed_pair.54" }
%"class.v8::internal::compiler::PhiInstruction" = type { i32, %"class.v8::internal::compiler::InstructionOperand", %"class.v8::internal::ZoneVector.47" }
%"class.v8::internal::ZoneVector.47" = type { %"class.std::__1::vector.48" }
%"class.std::__1::vector.48" = type { %"class.std::__1::__vector_base.49" }
%"class.std::__1::__vector_base.49" = type { i32*, i32*, %"class.std::__1::__compressed_pair.50" }
%"class.std::__1::__compressed_pair.50" = type { %"struct.std::__1::__compressed_pair_elem.51", %"struct.std::__1::__compressed_pair_elem.52" }
%"struct.std::__1::__compressed_pair_elem.52" = type { %"class.v8::internal::ZoneAllocator.53" }
%"class.v8::internal::ZoneAllocator.53" = type { %"class.v8::internal::Zone"* }
%"class.std::__1::__compressed_pair.54" = type { %"struct.std::__1::__compressed_pair_elem.55", %"struct.std::__1::__compressed_pair_elem.56" }
%"struct.std::__1::__compressed_pair_elem.55" = type { %"class.v8::internal::compiler::PhiInstruction"** }
%"struct.std::__1::__compressed_pair_elem.56" = type { %"class.v8::internal::ZoneAllocator.57" }
%"class.v8::internal::ZoneAllocator.57" = type { %"class.v8::internal::Zone"* }
%"class.v8::internal::RegisterConfiguration" = type <{ i32 (...)**, i32, i32, i32, i32, i32, i32, i32, i32, i32, i32, i32, i32, i32*, [32 x i32], i32*, [32 x i32], i32, [4 x i8] }>
%"class.v8::internal::ZoneMap.1268" = type { %"class.std::__1::map.1269" }
%"class.std::__1::map.1269" = type { %"class.std::__1::__tree.1270" }
%"class.std::__1::__tree.1270" = type { %"class.std::__1::__tree_end_node"*, %"class.std::__1::__compressed_pair.1271", %"class.std::__1::__compressed_pair.1274" }
%"class.std::__1::__compressed_pair.1271" = type { %"struct.std::__1::__compressed_pair_elem", %"struct.std::__1::__compressed_pair_elem.1272" }
%"struct.std::__1::__compressed_pair_elem.1272" = type { %"class.v8::internal::ZoneAllocator.1273" }
%"class.v8::internal::ZoneAllocator.1273" = type { %"class.v8::internal::Zone"* }
%"class.std::__1::__compressed_pair.1274" = type { %"struct.std::__1::__compressed_pair_elem.13" }
%"class.v8::internal::ZoneVector.1277" = type { %"class.std::__1::vector.1278" }
%"class.std::__1::vector.1278" = type { %"class.std::__1::__vector_base.1279" }
%"class.std::__1::__vector_base.1279" = type { %"class.v8::internal::BitVector"**, %"class.v8::internal::BitVector"**, %"class.std::__1::__compressed_pair.1280" }
%"class.std::__1::__compressed_pair.1280" = type { %"struct.std::__1::__compressed_pair_elem.1281", %"struct.std::__1::__compressed_pair_elem.1282" }
%"struct.std::__1::__compressed_pair_elem.1281" = type { %"class.v8::internal::BitVector"** }
%"struct.std::__1::__compressed_pair_elem.1282" = type { %"class.v8::internal::ZoneAllocator.1283" }
%"class.v8::internal::ZoneAllocator.1283" = type { %"class.v8::internal::Zone"* }
%"class.v8::internal::ZoneVector" = type { %"class.std::__1::vector" }
%"class.std::__1::vector" = type { %"class.std::__1::__vector_base" }
%"class.std::__1::__vector_base" = type { %"class.v8::internal::compiler::TopLevelLiveRange"**, %"class.v8::internal::compiler::TopLevelLiveRange"**, %"class.std::__1::__compressed_pair.32" }
%"class.std::__1::__compressed_pair.32" = type { %"struct.std::__1::__compressed_pair_elem.33", %"struct.std::__1::__compressed_pair_elem.34" }
%"struct.std::__1::__compressed_pair_elem.33" = type { %"class.v8::internal::compiler::TopLevelLiveRange"** }
%"struct.std::__1::__compressed_pair_elem.34" = type { %"class.v8::internal::ZoneAllocator.35" }
%"class.v8::internal::ZoneAllocator.35" = type { %"class.v8::internal::Zone"* }
%"class.v8::internal::ZoneVector.1284" = type { %"class.std::__1::vector.1285" }
%"class.std::__1::vector.1285" = type { %"class.std::__1::__vector_base.1286" }
%"class.std::__1::__vector_base.1286" = type { %"class.v8::internal::compiler::SpillRange"**, %"class.v8::internal::compiler::SpillRange"**, %"class.std::__1::__compressed_pair.1287" }
%"class.v8::internal::compiler::SpillRange" = type <{ %"class.v8::internal::ZoneVector", %"class.v8::internal::compiler::UseInterval"*, %"class.v8::internal::compiler::LifetimePosition", i32, i32, [4 x i8] }>
%"class.std::__1::__compressed_pair.1287" = type { %"struct.std::__1::__compressed_pair_elem.1288", %"struct.std::__1::__compressed_pair_elem.1289" }
%"struct.std::__1::__compressed_pair_elem.1288" = type { %"class.v8::internal::compiler::SpillRange"** }
%"struct.std::__1::__compressed_pair_elem.1289" = type { %"class.v8::internal::ZoneAllocator.1290" }
%"class.v8::internal::ZoneAllocator.1290" = type { %"class.v8::internal::Zone"* }
%"class.v8::internal::ZoneVector.1291" = type { %"class.std::__1::vector.1292" }
%"class.std::__1::vector.1292" = type { %"class.std::__1::__vector_base.1293" }
%"class.std::__1::__vector_base.1293" = type { %"struct.v8::internal::compiler::TopTierRegisterAllocationData::DelayedReference"*, %"struct.v8::internal::compiler::TopTierRegisterAllocationData::DelayedReference"*, %"class.std::__1::__compressed_pair.1294" }
%"struct.v8::internal::compiler::TopTierRegisterAllocationData::DelayedReference" = type { %"class.v8::internal::compiler::ReferenceMap"*, %"class.v8::internal::compiler::InstructionOperand"* }
%"class.std::__1::__compressed_pair.1294" = type { %"struct.std::__1::__compressed_pair_elem.1295", %"struct.std::__1::__compressed_pair_elem.1296" }
%"struct.std::__1::__compressed_pair_elem.1295" = type { %"struct.v8::internal::compiler::TopTierRegisterAllocationData::DelayedReference"* }
%"struct.std::__1::__compressed_pair_elem.1296" = type { %"class.v8::internal::ZoneAllocator.1297" }
%"class.v8::internal::ZoneAllocator.1297" = type { %"class.v8::internal::Zone"* }
%"class.v8::internal::BitVector" = type { i32, i32, %"union.v8::internal::BitVector::DataStorage" }
%"union.v8::internal::BitVector::DataStorage" = type { i64* }
%"class.v8::internal::ZoneVector.1298" = type { %"class.std::__1::vector.1299" }
%"class.std::__1::vector.1299" = type { %"class.std::__1::__vector_base.1300" }
%"class.std::__1::__vector_base.1300" = type { %"struct.std::__1::pair.1301"*, %"struct.std::__1::pair.1301"*, %"class.std::__1::__compressed_pair.1302" }
%"struct.std::__1::pair.1301" = type <{ %"class.v8::internal::compiler::TopLevelLiveRange"*, i32, [4 x i8] }>
%"class.std::__1::__compressed_pair.1302" = type { %"struct.std::__1::__compressed_pair_elem.1303", %"struct.std::__1::__compressed_pair_elem.1304" }
%"struct.std::__1::__compressed_pair_elem.1303" = type { %"struct.std::__1::pair.1301"* }
%"struct.std::__1::__compressed_pair_elem.1304" = type { %"class.v8::internal::ZoneAllocator.1305" }
%"class.v8::internal::ZoneAllocator.1305" = type { %"class.v8::internal::Zone"* }
%"class.v8::internal::ZoneVector.1306" = type { %"class.std::__1::vector.1307" }
%"class.std::__1::vector.1307" = type { %"class.std::__1::__vector_base.1308" }
%"class.std::__1::__vector_base.1308" = type { %"class.v8::internal::ZoneVector.1309"*, %"class.v8::internal::ZoneVector.1309"*, %"class.std::__1::__compressed_pair.1316" }
%"class.v8::internal::ZoneVector.1309" = type { %"class.std::__1::vector.1310" }
%"class.std::__1::vector.1310" = type { %"class.std::__1::__vector_base.1311" }
%"class.std::__1::__vector_base.1311" = type { %"class.v8::internal::compiler::LiveRange"**, %"class.v8::internal::compiler::LiveRange"**, %"class.std::__1::__compressed_pair.1312" }
%"class.std::__1::__compressed_pair.1312" = type { %"struct.std::__1::__compressed_pair_elem.1313", %"struct.std::__1::__compressed_pair_elem.1314" }
%"struct.std::__1::__compressed_pair_elem.1313" = type { %"class.v8::internal::compiler::LiveRange"** }
%"struct.std::__1::__compressed_pair_elem.1314" = type { %"class.v8::internal::ZoneAllocator.1315" }
%"class.v8::internal::ZoneAllocator.1315" = type { %"class.v8::internal::Zone"* }
%"class.std::__1::__compressed_pair.1316" = type { %"struct.std::__1::__compressed_pair_elem.1317", %"struct.std::__1::__compressed_pair_elem.1318" }
%"struct.std::__1::__compressed_pair_elem.1317" = type { %"class.v8::internal::ZoneVector.1309"* }
%"struct.std::__1::__compressed_pair_elem.1318" = type { %"class.v8::internal::ZoneAllocator.1319" }
%"class.v8::internal::ZoneAllocator.1319" = type { %"class.v8::internal::Zone"* }
%"class.v8::base::Flags" = type { i32 }
%"class.v8::internal::TickCounter" = type { i64, %"class.v8::internal::LocalHeap"* }
%"class.v8::internal::ZoneMap.1320" = type { %"class.std::__1::map.1321" }
%"class.std::__1::map.1321" = type { %"class.std::__1::__tree.1322" }
%"class.std::__1::__tree.1322" = type { %"class.std::__1::__tree_end_node"*, %"class.std::__1::__compressed_pair.1323", %"class.std::__1::__compressed_pair.1326" }
%"class.std::__1::__compressed_pair.1323" = type { %"struct.std::__1::__compressed_pair_elem", %"struct.std::__1::__compressed_pair_elem.1324" }
%"struct.std::__1::__compressed_pair_elem.1324" = type { %"class.v8::internal::ZoneAllocator.1325" }
%"class.v8::internal::ZoneAllocator.1325" = type { %"class.v8::internal::Zone"* }
%"class.std::__1::__compressed_pair.1326" = type { %"struct.std::__1::__compressed_pair_elem.13" }
%"class.v8::internal::Zone" = type <{ i64, i64, i64, i64, %"class.v8::internal::AccountingAllocator"*, %"class.v8::internal::Segment"*, i8*, i8, i8, [6 x i8] }>
%"class.v8::internal::Segment" = type { %"class.v8::internal::Zone"*, %"class.v8::internal::Segment"*, i64 }
%"class.v8::internal::compiler::TopTierRegisterAllocationData::PhiMapValue" = type <{ %"class.v8::internal::compiler::PhiInstruction"*, %"class.v8::internal::compiler::InstructionBlock"*, %"class.v8::internal::ZoneVector.1331", i32, [4 x i8] }>
%"class.v8::internal::ZoneVector.1331" = type { %"class.std::__1::vector.1332" }
%"class.std::__1::vector.1332" = type { %"class.std::__1::__vector_base.1333" }
%"class.std::__1::__vector_base.1333" = type { %"class.v8::internal::compiler::InstructionOperand"**, %"class.v8::internal::compiler::InstructionOperand"**, %"class.std::__1::__compressed_pair.1334" }
%"class.std::__1::__compressed_pair.1334" = type { %"struct.std::__1::__compressed_pair_elem.1335", %"struct.std::__1::__compressed_pair_elem.1336" }
%"struct.std::__1::__compressed_pair_elem.1335" = type { %"class.v8::internal::compiler::InstructionOperand"** }
%"struct.std::__1::__compressed_pair_elem.1336" = type { %"class.v8::internal::ZoneAllocator.1337" }
%"class.v8::internal::ZoneAllocator.1337" = type { %"class.v8::internal::Zone"* }
%"class.v8::internal::compiler::ConstraintBuilder" = type { %"class.v8::internal::compiler::TopTierRegisterAllocationData"* }
%"class.v8::internal::compiler::LiveRangeBuilder" = type { %"class.v8::internal::compiler::TopTierRegisterAllocationData"*, %"class.v8::internal::ZoneMap.1368" }
%"class.v8::internal::ZoneMap.1368" = type { %"class.std::__1::map.1369" }
%"class.std::__1::map.1369" = type { %"class.std::__1::__tree.1370" }
%"class.std::__1::__tree.1370" = type { %"class.std::__1::__tree_end_node"*, %"class.std::__1::__compressed_pair.1371", %"class.std::__1::__compressed_pair.1374" }
%"class.std::__1::__compressed_pair.1371" = type { %"struct.std::__1::__compressed_pair_elem", %"struct.std::__1::__compressed_pair_elem.1372" }
%"struct.std::__1::__compressed_pair_elem.1372" = type { %"class.v8::internal::ZoneAllocator.1373" }
%"class.v8::internal::ZoneAllocator.1373" = type { %"class.v8::internal::Zone"* }
%"class.std::__1::__compressed_pair.1374" = type { %"struct.std::__1::__compressed_pair_elem.13" }
%"class.v8::internal::compiler::RegisterAllocator" = type <{ %"class.v8::internal::compiler::TopTierRegisterAllocationData"*, i32, i32, i32, [4 x i8], i32*, i8, i8, [6 x i8] }>
%"class.v8::internal::compiler::LinearScanAllocator" = type { %"class.v8::internal::compiler::RegisterAllocator.base", %"class.v8::internal::ZoneMultiset", %"class.v8::internal::ZoneVector.1309", %"class.v8::internal::ZoneVector.1341", %"class.v8::internal::compiler::LifetimePosition", %"class.v8::internal::compiler::LifetimePosition" }
%"class.v8::internal::compiler::RegisterAllocator.base" = type <{ %"class.v8::internal::compiler::TopTierRegisterAllocationData"*, i32, i32, i32, [4 x i8], i32*, i8, i8 }>
%"class.v8::internal::ZoneMultiset" = type { %"class.std::__1::multiset" }
%"class.std::__1::multiset" = type { %"class.std::__1::__tree.1338" }
%"class.std::__1::__tree.1338" = type { %"class.std::__1::__tree_end_node"*, %"class.std::__1::__compressed_pair", %"class.std::__1::__compressed_pair.1339" }
%"class.std::__1::__compressed_pair.1339" = type { %"struct.std::__1::__compressed_pair_elem.13" }
%"class.v8::internal::ZoneVector.1341" = type { %"class.std::__1::vector.1342" }
%"class.std::__1::vector.1342" = type { %"class.std::__1::__vector_base.1343" }
%"class.std::__1::__vector_base.1343" = type { %"class.v8::internal::ZoneMultiset.1344"*, %"class.v8::internal::ZoneMultiset.1344"*, %"class.std::__1::__compressed_pair.1349" }
%"class.v8::internal::ZoneMultiset.1344" = type { %"class.std::__1::multiset.1345" }
%"class.std::__1::multiset.1345" = type { %"class.std::__1::__tree.1346" }
%"class.std::__1::__tree.1346" = type { %"class.std::__1::__tree_end_node"*, %"class.std::__1::__compressed_pair", %"class.std::__1::__compressed_pair.1347" }
%"class.std::__1::__compressed_pair.1347" = type { %"struct.std::__1::__compressed_pair_elem.13" }
%"class.std::__1::__compressed_pair.1349" = type { %"struct.std::__1::__compressed_pair_elem.1350", %"struct.std::__1::__compressed_pair_elem.1351" }
%"struct.std::__1::__compressed_pair_elem.1350" = type { %"class.v8::internal::ZoneMultiset.1344"* }
%"struct.std::__1::__compressed_pair_elem.1351" = type { %"class.v8::internal::ZoneAllocator.1352" }
%"class.v8::internal::ZoneAllocator.1352" = type { %"class.v8::internal::Zone"* }
%"class.v8::internal::compiler::OperandAssigner" = type { %"class.v8::internal::compiler::TopTierRegisterAllocationData"* }
%"class.v8::internal::compiler::ReferenceMapPopulator" = type { %"class.v8::internal::compiler::TopTierRegisterAllocationData"* }
%"class.v8::internal::compiler::LiveRangeConnector" = type { %"class.v8::internal::compiler::TopTierRegisterAllocationData"* }
%"struct.v8::internal::compiler::FindResult" = type { %"class.v8::internal::compiler::LiveRange"*, %"class.v8::internal::compiler::LiveRange"* }
%"class.std::__1::locale" = type { %"class.std::__1::locale::__imp"* }
%"class.std::__1::locale::__imp" = type opaque
%"class.v8::internal::StdoutStream" = type { %"class.v8::internal::OFStream.base", %"class.v8::base::LockGuard", %"class.std::__1::basic_ios.base" }
%"class.v8::internal::OFStream.base" = type { %"class.std::__1::basic_ostream.base", %"class.v8::internal::OFStreamBase" }
%"class.std::__1::basic_ostream.base" = type { i32 (...)** }
%"class.v8::internal::OFStreamBase" = type { %"class.std::__1::basic_streambuf", %struct._IO_FILE* }
%"class.std::__1::basic_streambuf" = type { i32 (...)**, %"class.std::__1::locale", i8*, i8*, i8*, i8*, i8*, i8* }
%"class.v8::base::LockGuard" = type { %"class.v8::base::RecursiveMutex"* }
%"class.v8::internal::OFStream" = type { %"class.std::__1::basic_ostream.base", %"class.v8::internal::OFStreamBase", %"class.std::__1::basic_ios.base" }
%"class.std::__1::locale::facet" = type { %"class.std::__1::__shared_count" }
%"class.std::__1::ctype" = type <{ %"class.std::__1::locale::facet", i16*, i8, [7 x i8] }>
%"class.std::__1::basic_ios" = type <{ %"class.std::__1::ios_base", %"class.std::__1::basic_ostream"*, i32, [4 x i8] }>
%"struct.v8::internal::compiler::PrintableLiveRange" = type { %"class.v8::internal::RegisterConfiguration"*, %"class.v8::internal::compiler::LiveRange"* }
%"class.std::__1::__vector_base_common" = type { i8 }
%"class.std::__1::__tree_node.1558" = type { %"class.std::__1::__tree_node_base.base", %"struct.std::__1::__value_type.1559" }
%"class.std::__1::__tree_node_base.base" = type <{ %"class.std::__1::__tree_end_node", %"class.std::__1::__tree_node_base"*, %"class.std::__1::__tree_end_node"*, i8 }>
%"struct.std::__1::__value_type.1559" = type { %"struct.std::__1::pair.1359" }
%"struct.std::__1::pair.1359" = type { i32, %"class.v8::internal::compiler::TopTierRegisterAllocationData::PhiMapValue"* }
%"class.v8::internal::compiler::UnallocatedOperand" = type { %"class.v8::internal::compiler::InstructionOperand" }
%"class.v8::internal::compiler::AllocatedOperand" = type { %"class.v8::internal::compiler::LocationOperand" }
%"class.v8::internal::compiler::LocationOperand" = type { %"class.v8::internal::compiler::InstructionOperand" }
%"class.std::__1::__tree_node.1569" = type { %"class.std::__1::__tree_node_base.base", %"struct.std::__1::__value_type.1570" }
%"struct.std::__1::__value_type.1570" = type { %"struct.std::__1::pair.1366" }
%"struct.std::__1::pair.1366" = type { %"class.v8::internal::compiler::TopLevelLiveRange"*, %"class.v8::internal::compiler::AllocatedOperand"* }
%"class.std::__1::__tree_node.1587" = type { %"class.std::__1::__tree_node_base.base", %"struct.std::__1::__value_type.1588" }
%"struct.std::__1::__value_type.1588" = type { %"struct.std::__1::pair.1386" }
%"struct.std::__1::pair.1386" = type { %"class.v8::internal::compiler::InstructionOperand"*, %"class.v8::internal::compiler::UsePosition"* }
%"class.v8::internal::compiler::BundleBuilder" = type <{ %"class.v8::internal::compiler::TopTierRegisterAllocationData"*, i32, [4 x i8] }>
%"class.std::__1::__tree_node" = type { %"class.std::__1::__tree_node_base.base", %"class.v8::internal::compiler::LiveRangeBundle::Range", [4 x i8] }
%"class.v8::internal::compiler::LiveRangeBundle::Range" = type { i32, i32 }
%"class.std::__1::__tree_node.1501" = type { %"class.std::__1::__tree_node_base.base", %"class.v8::internal::compiler::LiveRange"* }
%"class.v8::internal::ZoneUnorderedSet" = type { %"class.std::__1::unordered_set.1393" }
%"class.std::__1::unordered_set.1393" = type { %"class.std::__1::__hash_table.1394" }
%"class.std::__1::__hash_table.1394" = type <{ %"class.std::__1::unique_ptr.1395", %"class.std::__1::__compressed_pair.1404", %"class.std::__1::__compressed_pair.1408", %"class.std::__1::__compressed_pair.1410", [4 x i8] }>
%"class.std::__1::unique_ptr.1395" = type { %"class.std::__1::__compressed_pair.1396" }
%"class.std::__1::__compressed_pair.1396" = type { %"struct.std::__1::__compressed_pair_elem.1397", %"struct.std::__1::__compressed_pair_elem.1399" }
%"struct.std::__1::__compressed_pair_elem.1397" = type { %"struct.std::__1::__hash_node_base.1398"** }
%"struct.std::__1::__hash_node_base.1398" = type { %"struct.std::__1::__hash_node_base.1398"* }
%"struct.std::__1::__compressed_pair_elem.1399" = type { %"class.std::__1::__bucket_list_deallocator.1400" }
%"class.std::__1::__bucket_list_deallocator.1400" = type { %"class.std::__1::__compressed_pair.1401" }
%"class.std::__1::__compressed_pair.1401" = type { %"struct.std::__1::__compressed_pair_elem.13", %"struct.std::__1::__compressed_pair_elem.1402" }
%"struct.std::__1::__compressed_pair_elem.1402" = type { %"class.v8::internal::ZoneAllocator.1403" }
%"class.v8::internal::ZoneAllocator.1403" = type { %"class.v8::internal::Zone"* }
%"class.std::__1::__compressed_pair.1404" = type { %"struct.std::__1::__compressed_pair_elem.1405", %"struct.std::__1::__compressed_pair_elem.1406" }
%"struct.std::__1::__compressed_pair_elem.1405" = type { %"struct.std::__1::__hash_node_base.1398" }
%"struct.std::__1::__compressed_pair_elem.1406" = type { %"class.v8::internal::ZoneAllocator.1407" }
%"class.v8::internal::ZoneAllocator.1407" = type { %"class.v8::internal::Zone"* }
%"class.std::__1::__compressed_pair.1408" = type { %"struct.std::__1::__compressed_pair_elem.13" }
%"class.std::__1::__compressed_pair.1410" = type { %"struct.std::__1::__compressed_pair_elem.85" }
%"class.std::__1::unique_ptr.1517" = type { %"class.std::__1::__compressed_pair.1518" }
%"class.std::__1::__compressed_pair.1518" = type { %"struct.std::__1::__compressed_pair_elem.1519", %"struct.std::__1::__compressed_pair_elem.1520" }
%"struct.std::__1::__compressed_pair_elem.1519" = type { %"struct.std::__1::__hash_node"* }
%"struct.std::__1::__hash_node" = type { %"struct.std::__1::__hash_node_base.1398", i64, %"struct.v8::internal::compiler::LinearScanAllocator::RangeWithRegister" }
%"struct.v8::internal::compiler::LinearScanAllocator::RangeWithRegister" = type <{ %"class.v8::internal::compiler::TopLevelLiveRange"*, i32, [4 x i8] }>
%"struct.std::__1::__compressed_pair_elem.1520" = type { %"class.std::__1::__hash_node_destructor" }
%"class.std::__1::__hash_node_destructor" = type <{ %"class.v8::internal::ZoneAllocator.1407"*, i8, [7 x i8] }>
%"class.v8::base::SmallVector" = type { %"class.v8::internal::compiler::TopLevelLiveRange"**, %"class.v8::internal::compiler::TopLevelLiveRange"**, %"class.v8::internal::compiler::TopLevelLiveRange"**, %"struct.std::__1::aligned_storage<256, 8>::type" }
%"struct.std::__1::aligned_storage<256, 8>::type" = type { [256 x i8] }
%"class.v8::internal::ZoneMap.1414" = type { %"class.std::__1::map.1415" }
%"class.std::__1::map.1415" = type { %"class.std::__1::__tree.1416" }
%"class.std::__1::__tree.1416" = type { %"class.std::__1::__tree_end_node"*, %"class.std::__1::__compressed_pair.1417", %"class.std::__1::__compressed_pair.1420" }
%"class.std::__1::__compressed_pair.1417" = type { %"struct.std::__1::__compressed_pair_elem", %"struct.std::__1::__compressed_pair_elem.1418" }
%"struct.std::__1::__compressed_pair_elem.1418" = type { %"class.v8::internal::ZoneAllocator.1419" }
%"class.v8::internal::ZoneAllocator.1419" = type { %"class.v8::internal::Zone"* }
%"class.std::__1::__compressed_pair.1420" = type { %"struct.std::__1::__compressed_pair_elem.13" }
%class.anon = type { %"class.v8::internal::compiler::LinearScanAllocator"*, %"class.v8::internal::ZoneMap.1414", i64 }
%"class.std::__1::function" = type { %"class.std::__1::__function::__policy_func" }
%"class.std::__1::__function::__policy_func" = type { %"union.std::__1::__function::__policy_storage", %"struct.std::__1::__function::__policy_invoker", %"struct.std::__1::__function::__policy"* }
%"union.std::__1::__function::__policy_storage" = type { i8*, [8 x i8] }
%"struct.std::__1::__function::__policy_invoker" = type { i1 (%"union.std::__1::__function::__policy_storage"*, %"class.v8::internal::compiler::TopLevelLiveRange"*)* }
%"class.std::__1::__tree_node.1506" = type { %"class.std::__1::__tree_node_base.base", %"struct.std::__1::__value_type" }
%"struct.std::__1::__value_type" = type { %"struct.std::__1::pair.1430" }
%"struct.std::__1::pair.1430" = type { %"class.v8::internal::compiler::TopLevelLiveRange"*, %struct.Vote }
%struct.Vote = type { i64, [32 x i32] }
%class.anon.1435 = type <{ %"class.v8::internal::compiler::LinearScanAllocator"*, %"class.v8::internal::compiler::LifetimePosition", [4 x i8] }>
%class.anon.1522 = type <{ %"class.v8::internal::compiler::LinearScanAllocator"*, %"class.v8::internal::compiler::LifetimePosition", [4 x i8] }>
%"class.std::__1::function.1524" = type { %"class.std::__1::__function::__policy_func.1528" }
%"class.std::__1::__function::__policy_func.1528" = type { %"union.std::__1::__function::__policy_storage", %"struct.std::__1::__function::__policy_invoker.1529", %"struct.std::__1::__function::__policy"* }
%"struct.std::__1::__function::__policy_invoker.1529" = type { void (%"union.std::__1::__function::__policy_storage"*, %"class.v8::internal::compiler::LiveRange"*)* }
%"class.v8::internal::EmbeddedVector.1439" = type { %"class.v8::internal::Vector.1438", [32 x %"class.v8::internal::compiler::LifetimePosition"] }
%"class.v8::internal::Vector.1438" = type { %"class.v8::internal::compiler::LifetimePosition"*, i64 }
%class.anon.1437 = type { %"class.v8::internal::compiler::LinearScanAllocator"*, %"class.v8::internal::compiler::InstructionBlock"* }
%"class.v8::internal::compiler::SpillPlacer" = type <{ %"class.v8::internal::compiler::LiveRangeFinder"*, %"class.v8::internal::compiler::TopTierRegisterAllocationData"*, %"class.v8::internal::Zone"*, %"class.v8::internal::compiler::SpillPlacer::Entry"*, i32*, i32, %"class.v8::internal::compiler::RpoNumber", %"class.v8::internal::compiler::RpoNumber", [4 x i8] }>
%"class.v8::internal::compiler::SpillPlacer::Entry" = type opaque
%"class.v8::internal::ZoneDeque.1459" = type { %"class.std::__1::deque.1460" }
%"class.std::__1::deque.1460" = type { %"class.std::__1::__deque_base.1461" }
%"class.std::__1::__deque_base.1461" = type { %"struct.std::__1::__split_buffer.1462", i64, %"class.std::__1::__compressed_pair.1468" }
%"struct.std::__1::__split_buffer.1462" = type { i32**, i32**, i32**, %"class.std::__1::__compressed_pair.1463" }
%"class.std::__1::__compressed_pair.1463" = type { %"struct.std::__1::__compressed_pair_elem.1464", %"struct.std::__1::__compressed_pair_elem.1465" }
%"struct.std::__1::__compressed_pair_elem.1464" = type { i32** }
%"struct.std::__1::__compressed_pair_elem.1465" = type { %"class.v8::internal::RecyclingZoneAllocator.1466" }
%"class.v8::internal::RecyclingZoneAllocator.1466" = type { %"class.v8::internal::ZoneAllocator.1467", %"struct.v8::internal::RecyclingZoneAllocator<int *>::FreeBlock"* }
%"class.v8::internal::ZoneAllocator.1467" = type { %"class.v8::internal::Zone"* }
%"struct.v8::internal::RecyclingZoneAllocator<int *>::FreeBlock" = type { %"struct.v8::internal::RecyclingZoneAllocator<int *>::FreeBlock"*, i64 }
%"class.std::__1::__compressed_pair.1468" = type { %"struct.std::__1::__compressed_pair_elem.13", %"struct.std::__1::__compressed_pair_elem.1469" }
%"struct.std::__1::__compressed_pair_elem.1469" = type { %"class.v8::internal::RecyclingZoneAllocator.1470" }
%"class.v8::internal::RecyclingZoneAllocator.1470" = type { %"class.v8::internal::ZoneAllocator.53", %"struct.v8::internal::RecyclingZoneAllocator<int>::FreeBlock"* }
%"struct.v8::internal::RecyclingZoneAllocator<int>::FreeBlock" = type { %"struct.v8::internal::RecyclingZoneAllocator<int>::FreeBlock"*, i64 }
%"class.v8::internal::ZoneQueue" = type { %"class.std::__1::queue.1458" }
%"class.std::__1::queue.1458" = type { %"class.v8::internal::ZoneDeque.1459" }
%"class.v8::internal::ZoneSet.1471" = type { %"class.std::__1::set.1472" }
%"class.std::__1::set.1472" = type { %"class.std::__1::__tree.1473" }
%"class.std::__1::__tree.1473" = type { %"class.std::__1::__tree_end_node"*, %"class.std::__1::__compressed_pair.1474", %"class.std::__1::__compressed_pair.1477" }
%"class.std::__1::__compressed_pair.1474" = type { %"struct.std::__1::__compressed_pair_elem", %"struct.std::__1::__compressed_pair_elem.1475" }
%"struct.std::__1::__compressed_pair_elem.1475" = type { %"class.v8::internal::ZoneAllocator.1476" }
%"class.v8::internal::ZoneAllocator.1476" = type { %"class.v8::internal::Zone"* }
%"class.std::__1::__compressed_pair.1477" = type { %"struct.std::__1::__compressed_pair_elem.13" }
%"class.std::__1::__tree_node.1538" = type { %"class.std::__1::__tree_node_base.base", %"struct.std::__1::pair.1482", [4 x i8] }
%"struct.std::__1::pair.1482" = type { %"class.v8::internal::compiler::RpoNumber", i32 }
%"class.v8::internal::ZoneMap.1442" = type { %"class.std::__1::map.1443" }
%"class.std::__1::map.1443" = type { %"class.std::__1::__tree.1444" }
%"class.std::__1::__tree.1444" = type { %"class.std::__1::__tree_end_node"*, %"class.std::__1::__compressed_pair.1445", %"class.std::__1::__compressed_pair.1448" }
%"class.std::__1::__compressed_pair.1445" = type { %"struct.std::__1::__compressed_pair_elem", %"struct.std::__1::__compressed_pair_elem.1446" }
%"struct.std::__1::__compressed_pair_elem.1446" = type { %"class.v8::internal::ZoneAllocator.1447" }
%"class.v8::internal::ZoneAllocator.1447" = type { %"class.v8::internal::Zone"* }
%"class.std::__1::__compressed_pair.1448" = type { %"struct.std::__1::__compressed_pair_elem.13" }
%"class.std::__1::__tree_node.1536" = type { %"class.std::__1::__tree_node_base.base", %"struct.std::__1::__value_type.1537" }
%"struct.std::__1::__value_type.1537" = type { %"struct.std::__1::pair.1457" }
%"struct.std::__1::pair.1457" = type { %"struct.std::__1::pair.1456", %"class.v8::internal::compiler::InstructionOperand" }
%"struct.std::__1::pair.1456" = type { %"class.v8::internal::compiler::ParallelMove"*, %"class.v8::internal::compiler::InstructionOperand" }
%"class.std::__1::basic_ostream<char, std::__1::char_traits<char> >::sentry" = type { i8, %"class.std::__1::basic_ostream"* }
%"struct.std::__1::basic_string<char, std::__1::char_traits<char>, std::__1::allocator<char> >::__short" = type { [23 x i8], %struct.anon }
%struct.anon = type { i8 }
%"struct.std::__1::__split_buffer.1628" = type { i32**, i32**, i32**, %"class.std::__1::__compressed_pair.1629" }
%"class.std::__1::__compressed_pair.1629" = type { %"struct.std::__1::__compressed_pair_elem.1464", %"struct.std::__1::__compressed_pair_elem.1630" }
%"struct.std::__1::__compressed_pair_elem.1630" = type { %"class.v8::internal::RecyclingZoneAllocator.1466"* }

$_ZN2v88internal12StdoutStreamD1Ev = comdat any

$_ZNSt3__16vectorIPN2v88internal8compiler17TopLevelLiveRangeENS2_13ZoneAllocatorIS5_EEE6insertINS_11__wrap_iterIPS5_EEEENS_9enable_ifIXaasr27__is_cpp17_forward_iteratorIT_EE5valuesr16is_constructibleIS5_NS_15iterator_traitsISE_E9referenceEEE5valueESC_E4typeENSA_IPKS5_EESE_SE_ = comdat any

$_ZN2v88internal4Zone3NewINS0_9BitVectorEJiPS1_EEEPT_DpOT0_ = comdat any

$_ZN2v88internal4Zone3NewINS0_9BitVectorEJiRPS1_EEEPT_DpOT0_ = comdat any

$_ZN2v88internal8compiler15LiveRangeBundle10InsertUsesEPNS1_11UseIntervalE = comdat any

$_ZN2v88internal8OFStreamD1Ev = comdat any

$_ZN2v88internal8OFStreamD0Ev = comdat any

$_ZTv0_n24_N2v88internal8OFStreamD1Ev = comdat any

$_ZTv0_n24_N2v88internal8OFStreamD0Ev = comdat any

$_ZN2v88internal12StdoutStreamD0Ev = comdat any

$_ZTv0_n24_N2v88internal12StdoutStreamD1Ev = comdat any

$_ZTv0_n24_N2v88internal12StdoutStreamD0Ev = comdat any

$_ZN2v88internal8compiler12ParallelMove7AddMoveERKNS1_18InstructionOperandES5_PNS0_4ZoneE = comdat any

$_ZNSt3__127__tree_balance_after_insertIPNS_16__tree_node_baseIPvEEEEvT_S5_ = comdat any

$_ZNSt3__16__treeIPN2v88internal8compiler9LiveRangeENS3_19LinearScanAllocator25InactiveLiveRangeOrderingENS2_13ZoneAllocatorIS5_EEE7destroyEPNS_11__tree_nodeIS5_PvEE = comdat any

$_ZNSt3__112__hash_tableIN2v88internal8compiler19LinearScanAllocator17RangeWithRegisterENS5_4HashENS5_6EqualsENS2_13ZoneAllocatorIS5_EEE28__node_insert_unique_prepareEmRS5_ = comdat any

$_ZNSt3__112__hash_tableIN2v88internal8compiler19LinearScanAllocator17RangeWithRegisterENS5_4HashENS5_6EqualsENS2_13ZoneAllocatorIS5_EEE6rehashEm = comdat any

$_ZNSt3__112__hash_tableIN2v88internal8compiler19LinearScanAllocator17RangeWithRegisterENS5_4HashENS5_6EqualsENS2_13ZoneAllocatorIS5_EEE8__rehashEm = comdat any

$_ZNSt3__16vectorIPN2v88internal8compiler9LiveRangeENS2_13ZoneAllocatorIS5_EEE6assignIPS5_EENS_9enable_ifIXaasr27__is_cpp17_forward_iteratorIT_EE5valuesr16is_constructibleIS5_NS_15iterator_traitsISC_E9referenceEEE5valueEvE4typeESC_SC_ = comdat any

$_ZN2v88internal4Zone3NewINS0_9BitVectorEJRiRPS1_EEEPT_DpOT0_ = comdat any

$_ZNSt3__16__treeINS_12__value_typeINS_4pairIPN2v88internal8compiler12ParallelMoveENS5_18InstructionOperandEEES8_EENS_19__map_value_compareIS9_SA_NS5_26DelayedInsertionMapCompareELb1EEENS4_13ZoneAllocatorISA_EEE7destroyEPNS_11__tree_nodeISA_PvEE = comdat any

$_ZNSt3__16__treeINS_4pairIN2v88internal8compiler9RpoNumberEiEENS_4lessIS6_EENS3_13ZoneAllocatorIS6_EEE7destroyEPNS_11__tree_nodeIS6_PvEE = comdat any

$_ZNSt3__112__deque_baseIiN2v88internal22RecyclingZoneAllocatorIiEEED2Ev = comdat any

$_ZNSt3__124__put_character_sequenceIcNS_11char_traitsIcEEEERNS_13basic_ostreamIT_T0_EES7_PKS4_m = comdat any

$_ZNSt3__116__pad_and_outputIcNS_11char_traitsIcEEEENS_19ostreambuf_iteratorIT_T0_EES6_PKS4_S8_S8_RNS_8ios_baseES4_ = comdat any

$_ZNSt3__16vectorIPN2v88internal8compiler17TopLevelLiveRangeENS2_13ZoneAllocatorIS5_EEE8__appendEmRKS5_ = comdat any

$_ZNSt3__16__treeIPN2v88internal8compiler9LiveRangeENS3_17LiveRangeOrderingENS2_13ZoneAllocatorIS5_EEE25__emplace_unique_key_argsIS5_JRKS5_EEENS_4pairINS_15__tree_iteratorIS5_PNS_11__tree_nodeIS5_PvEElEEbEERKT_DpOT0_ = comdat any

$_ZNSt3__16__treeIPN2v88internal8compiler9LiveRangeENS3_17LiveRangeOrderingENS2_13ZoneAllocatorIS5_EEE7destroyEPNS_11__tree_nodeIS5_PvEE = comdat any

$_ZNSt3__16__treeIN2v88internal8compiler15LiveRangeBundle5RangeENS4_13RangeOrderingENS2_13ZoneAllocatorIS5_EEE7destroyEPNS_11__tree_nodeIS5_PvEE = comdat any

$_ZNSt3__16vectorIN2v88internal12ZoneMultisetIPNS2_8compiler9LiveRangeENS4_19LinearScanAllocator25InactiveLiveRangeOrderingEEENS2_13ZoneAllocatorIS9_EEEC2EmRKS9_RKSB_ = comdat any

$_ZNSt3__16__treeIPN2v88internal8compiler9LiveRangeENS3_19LinearScanAllocator25InactiveLiveRangeOrderingENS2_13ZoneAllocatorIS5_EEE20__emplace_hint_multiIJRKS5_EEENS_15__tree_iteratorIS5_PNS_11__tree_nodeIS5_PvEElEENS_21__tree_const_iteratorIS5_SI_lEEDpOT_ = comdat any

$_ZNSt3__16__treeIPN2v88internal8compiler9LiveRangeENS3_19LinearScanAllocator26UnhandledLiveRangeOrderingENS2_13ZoneAllocatorIS5_EEE19__equal_range_multiIS5_EENS_4pairINS_15__tree_iteratorIS5_PNS_11__tree_nodeIS5_PvEElEESI_EERKT_ = comdat any

$_ZNSt3__113__tree_removeIPNS_16__tree_node_baseIPvEEEEvT_S5_ = comdat any

$_ZNSt3__112__hash_tableIN2v88internal8compiler19LinearScanAllocator17RangeWithRegisterENS5_4HashENS5_6EqualsENS2_13ZoneAllocatorIS5_EEE6removeENS_21__hash_const_iteratorIPNS_11__hash_nodeIS5_PvEEEE = comdat any

$_ZN2v84base11SmallVectorIPNS_8internal8compiler17TopLevelLiveRangeELm32EE4GrowEv = comdat any

$_ZN2v84base11SmallVectorIPNS_8internal8compiler17TopLevelLiveRangeELm32EE4GrowEm = comdat any

$_ZNSt3__16__treeIPN2v88internal8compiler9LiveRangeENS3_19LinearScanAllocator26UnhandledLiveRangeOrderingENS2_13ZoneAllocatorIS5_EEE15__emplace_multiIJRKS5_EEENS_15__tree_iteratorIS5_PNS_11__tree_nodeIS5_PvEElEEDpOT_ = comdat any

$_ZNSt3__15dequeIiN2v88internal22RecyclingZoneAllocatorIiEEE19__add_back_capacityEv = comdat any

$_ZNSt3__114__split_bufferIPiN2v88internal22RecyclingZoneAllocatorIS1_EEE9push_backERKS1_ = comdat any

$_ZNSt3__114__split_bufferIPiN2v88internal22RecyclingZoneAllocatorIS1_EEE9push_backEOS1_ = comdat any

$_ZNSt3__114__split_bufferIPiN2v88internal22RecyclingZoneAllocatorIS1_EEE10push_frontEOS1_ = comdat any

$_ZNSt3__114__split_bufferIPiRN2v88internal22RecyclingZoneAllocatorIS1_EEE9push_backEOS1_ = comdat any

$_ZNSt3__114__split_bufferIPiRN2v88internal22RecyclingZoneAllocatorIS1_EEE10push_frontERKS1_ = comdat any

$_ZTVN2v88internal12StdoutStreamE = comdat any

$_ZTTN2v88internal12StdoutStreamE = comdat any

$_ZTCN2v88internal12StdoutStreamE0_NS0_8OFStreamE = comdat any

$_ZTCN2v88internal12StdoutStreamE0_NSt3__113basic_ostreamIcNS1_11char_traitsIcEEEE = comdat any

$_ZTVN2v88internal8OFStreamE = comdat any

$_ZTTN2v88internal8OFStreamE = comdat any

$_ZTCN2v88internal8OFStreamE0_NSt3__113basic_ostreamIcNS1_11char_traitsIcEEEE = comdat any

$_ZZN2v88internal12RegisterNameENS0_8RegisterEE5Names = comdat any

$_ZZN2v88internal12RegisterNameENS0_11XMMRegisterEE5Names = comdat any

@.str = private unnamed_addr constant [17 x i8] c"unreachable code\00", align 1
@.str.1 = private unnamed_addr constant [18 x i8] c"Check failed: %s.\00", align 1
@.str.2 = private unnamed_addr constant [22 x i8] c"Start() <= pos->pos()\00", align 1
@.str.3 = private unnamed_addr constant [20 x i8] c"pos->pos() <= End()\00", align 1
@.str.4 = private unnamed_addr constant [22 x i8] c"(interval) != nullptr\00", align 1
@.str.5 = private unnamed_addr constant [30 x i8] c"Shorten live range %d to [%d\0A\00", align 1
@.str.6 = private unnamed_addr constant [42 x i8] c"Ensure live range %d in interval [%d %d[\0A\00", align 1
@.str.7 = private unnamed_addr constant [39 x i8] c"Add to live range %d interval [%d %d[\0A\00", align 1
@.str.8 = private unnamed_addr constant [38 x i8] c"Add to live range %d use position %d\0A\00", align 1
@.str.9 = private unnamed_addr constant [8 x i8] c"Range: \00", align 1
@.str.10 = private unnamed_addr constant [2 x i8] c":\00", align 1
@.str.11 = private unnamed_addr constant [2 x i8] c" \00", align 1
@.str.12 = private unnamed_addr constant [5 x i8] c"phi \00", align 1
@.str.13 = private unnamed_addr constant [7 x i8] c"nlphi \00", align 1
@.str.14 = private unnamed_addr constant [2 x i8] c"{\00", align 1
@.str.15 = private unnamed_addr constant [3 x i8] c", \00", align 1
@.str.16 = private unnamed_addr constant [2 x i8] c"}\00", align 1
@.str.17 = private unnamed_addr constant [3 x i8] c": \00", align 1
@.str.18 = private unnamed_addr constant [3 x i8] c"ss\00", align 1
@.str.19 = private unnamed_addr constant [3 x i8] c"sd\00", align 1
@.str.20 = private unnamed_addr constant [3 x i8] c"so\00", align 1
@.str.21 = private unnamed_addr constant [3 x i8] c"s?\00", align 1
@.str.22 = private unnamed_addr constant [26 x i8] c"start.value() >= position\00", align 1
@.str.23 = private unnamed_addr constant [4 x i8] c"|%s\00", align 1
@.str.24 = private unnamed_addr constant [24 x i8] c"end.value() >= position\00", align 1
@.str.25 = private unnamed_addr constant [57 x i8] c"Register allocator error: live v%d reached first block.\0A\00", align 1
@.str.26 = private unnamed_addr constant [24 x i8] c"  (first use is at %d)\0A\00", align 1
@.str.27 = private unnamed_addr constant [2 x i8] c"\0A\00", align 1
@.str.28 = private unnamed_addr constant [18 x i8] c"  (function: %s)\0A\00", align 1
@.str.29 = private unnamed_addr constant [41 x i8] c"live_ranges_size == live_ranges().size()\00", align 1
@.str.30 = private unnamed_addr constant [32 x i8] c"Allocating fixed reg for op %d\0A\00", align 1
@.str.31 = private unnamed_addr constant [27 x i8] c"Fixed reg is tagged at %d\0A\00", align 1
@_ZZN2v88internal8compiler16LiveRangeBuilder19ProcessInstructionsEPKNS1_16InstructionBlockEPNS0_9BitVectorEE10kPositions = internal constant [2 x i32] [i32 1, i32 0], align 4
@.str.32 = private unnamed_addr constant [49 x i8] c"live_ranges_size == data()->live_ranges().size()\00", align 1
@.str.33 = private unnamed_addr constant [26 x i8] c"hint.second->IsResolved()\00", align 1
@.str.34 = private unnamed_addr constant [29 x i8] c"(current->next()) == nullptr\00", align 1
@.str.35 = private unnamed_addr constant [43 x i8] c"NextIntervalStartsInDifferentBlocks(first)\00", align 1
@.str.36 = private unnamed_addr constant [33 x i8] c"IntervalStartsAtBlockBoundary(i)\00", align 1
@.str.37 = private unnamed_addr constant [47 x i8] c"IntervalPredecessorsCoveredByRange(i, current)\00", align 1
@.str.38 = private unnamed_addr constant [39 x i8] c"NextIntervalStartsInDifferentBlocks(i)\00", align 1
@.str.39 = private unnamed_addr constant [15 x i8] c"Build bundles\0A\00", align 1
@.str.40 = private unnamed_addr constant [11 x i8] c"Block B%d\0A\00", align 1
@.str.41 = private unnamed_addr constant [35 x i8] c"Processing phi for v%d with %d:%d\0A\00", align 1
@.str.42 = private unnamed_addr constant [34 x i8] c"Input value v%d with range %d:%d\0A\00", align 1
@.str.43 = private unnamed_addr constant [7 x i8] c"Merge\0A\00", align 1
@.str.44 = private unnamed_addr constant [24 x i8] c"Merged %d and %d to %d\0A\00", align 1
@.str.45 = private unnamed_addr constant [5 x i8] c"Add\0A\00", align 1
@.str.46 = private unnamed_addr constant [23 x i8] c"Added %d and %d to %d\0A\00", align 1
@.str.47 = private unnamed_addr constant [16 x i8] c"Done block B%d\0A\00", align 1
@.str.48 = private unnamed_addr constant [22 x i8] c"No merge %d:%d %d:%d\0A\00", align 1
@.str.49 = private unnamed_addr constant [52 x i8] c"initial_range_count == data()->live_ranges().size()\00", align 1
@.str.50 = private unnamed_addr constant [49 x i8] c"Live range %d:%d is defined by a spill operand.\0A\00", align 1
@.str.51 = private unnamed_addr constant [34 x i8] c"Splitting live range %d:%d at %d\0A\00", align 1
@.str.52 = private unnamed_addr constant [57 x i8] c"Splitting live range %d:%d in position between [%d, %d]\0A\00", align 1
@.str.53 = private unnamed_addr constant [35 x i8] c"Spilling live range %d:%d mode %d\0A\00", align 1
@.str.54 = private unnamed_addr constant [27 x i8] c"Starting spill type is %d\0A\00", align 1
@.str.55 = private unnamed_addr constant [23 x i8] c"New spill range needed\00", align 1
@.str.56 = private unnamed_addr constant [11 x i8] c"Upgrading\0A\00", align 1
@.str.57 = private unnamed_addr constant [24 x i8] c"Final spill type is %d\0A\00", align 1
@.str.58 = private unnamed_addr constant [11 x i8] c"unassigned\00", align 1
@.str.59 = private unnamed_addr constant [27 x i8] c"Recombining %d:%d with %d\0A\00", align 1
@.str.60 = private unnamed_addr constant [30 x i8] c"No recombine for %d:%d to %d\0A\00", align 1
@.str.61 = private unnamed_addr constant [40 x i8] c"Keeping reactivated fixed range for %s\0A\00", align 1
@.str.62 = private unnamed_addr constant [20 x i8] c"Putting back %d:%d\0A\00", align 1
@.str.63 = private unnamed_addr constant [16 x i8] c"Next use at %d\0A\00", align 1
@.str.64 = private unnamed_addr constant [28 x i8] c"Marking %d:%d to recombine\0A\00", align 1
@.str.65 = private unnamed_addr constant [21 x i8] c"Keeping %d:%d in %s\0A\00", align 1
@.str.66 = private unnamed_addr constant [18 x i8] c"Scheduling %d:%d\0A\00", align 1
@.str.67 = private unnamed_addr constant [31 x i8] c"Found new end for %d:%d at %d\0A\00", align 1
@.str.68 = private unnamed_addr constant [27 x i8] c"No candidate for %d at %d\0A\00", align 1
@.str.69 = private unnamed_addr constant [36 x i8] c"Reload %d:%d starting at %d itself\0A\00", align 1
@.str.70 = private unnamed_addr constant [35 x i8] c"Reload %d:%d starting at %d as %d\0A\00", align 1
@.str.71 = private unnamed_addr constant [22 x i8] c"Looking at only uses\0A\00", align 1
@.str.72 = private unnamed_addr constant [22 x i8] c"Vote went %zu vs %zu\0A\00", align 1
@.str.73 = private unnamed_addr constant [14 x i8] c"result.second\00", align 1
@_ZNSt3__14coutE = external global %"class.std::__1::basic_ostream", align 8
@.str.74 = private unnamed_addr constant [38 x i8] c"Processing boundary at %d leaving %d\0A\00", align 1
@.str.75 = private unnamed_addr constant [28 x i8] c"Single predecessor for B%d\0A\00", align 1
@.str.76 = private unnamed_addr constant [26 x i8] c"Two predecessors for B%d\0A\00", align 1
@.str.77 = private unnamed_addr constant [36 x i8] c"Processing interval %d:%d start=%d\0A\00", align 1
@.str.78 = private unnamed_addr constant [38 x i8] c"Add live range %d:%d in %s to active\0A\00", align 1
@.str.79 = private unnamed_addr constant [34 x i8] c"Add live range %d:%d to inactive\0A\00", align 1
@.str.80 = private unnamed_addr constant [35 x i8] c"Add live range %d:%d to unhandled\0A\00", align 1
@.str.81 = private unnamed_addr constant [48 x i8] c"Moving live range %d:%d from active to handled\0A\00", align 1
@.str.82 = private unnamed_addr constant [49 x i8] c"Moving live range %d:%d from active to inactive\0A\00", align 1
@.str.83 = private unnamed_addr constant [50 x i8] c"Moving live range %d:%d from inactive to handled\0A\00", align 1
@.str.84 = private unnamed_addr constant [49 x i8] c"Moving live range %d:%d from inactive to active\0A\00", align 1
@.str.85 = private unnamed_addr constant [48 x i8] c"Register %s is free until pos %d (1) due to %d\0A\00", align 1
@.str.86 = private unnamed_addr constant [45 x i8] c"cur_inactive->assigned_register() == cur_reg\00", align 1
@.str.87 = private unnamed_addr constant [38 x i8] c"Register %s is free until pos %d (2)\0A\00", align 1
@.str.88 = private unnamed_addr constant [68 x i8] c"Found reg hint %s (free until [%d) for live range %d:%d (end %d[).\0A\00", align 1
@.str.89 = private unnamed_addr constant [48 x i8] c"Assigning preferred reg %s to live range %d:%d\0A\00", align 1
@.str.90 = private unnamed_addr constant [30 x i8] c"Register %s in free until %d\0A\00", align 1
@.str.91 = private unnamed_addr constant [43 x i8] c"Assigning free reg %s to live range %d:%d\0A\00", align 1
@.str.92 = private unnamed_addr constant [46 x i8] c"Assigning blocked reg %s to live range %d:%d\0A\00", align 1
@.str.93 = private unnamed_addr constant [12 x i8] c"start < end\00", align 1
@.str.94 = private unnamed_addr constant [43 x i8] c"Setting control flow hint for %d:%d to %s\0A\00", align 1
@.str.95 = private unnamed_addr constant [58 x i8] c"Live range %d is spilled and alive in deferred code only\0A\00", align 1
@.str.96 = private unnamed_addr constant [63 x i8] c"Live range %d is spilled deferred code only but alive outside\0A\00", align 1
@.str.97 = private unnamed_addr constant [55 x i8] c"Pointer for range %d (spilled at %d) at safe point %d\0A\00", align 1
@.str.98 = private unnamed_addr constant [68 x i8] c"Pointer in register for range %d:%d (start at %d) at safe point %d\0A\00", align 1
@.str.99 = private unnamed_addr constant [43 x i8] c"Adding B%d to list of spill blocks for %d\0A\00", align 1
@.str.100 = private unnamed_addr constant [56 x i8] c"Live Range %d will be spilled only in deferred blocks.\0A\00", align 1
@.str.101 = private unnamed_addr constant [45 x i8] c"Spilling deferred spill for range %d at B%d\0A\00", align 1
@stdout = external local_unnamed_addr global %struct._IO_FILE*, align 8
@_ZTVN2v88internal12StdoutStreamE = linkonce_odr hidden unnamed_addr constant { [5 x i8*], [5 x i8*] } { [5 x i8*] [i8* inttoptr (i64 88 to i8*), i8* null, i8* null, i8* bitcast (void (%"class.v8::internal::StdoutStream"*)* @_ZN2v88internal12StdoutStreamD1Ev to i8*), i8* bitcast (void (%"class.v8::internal::StdoutStream"*)* @_ZN2v88internal12StdoutStreamD0Ev to i8*)], [5 x i8*] [i8* inttoptr (i64 -88 to i8*), i8* inttoptr (i64 -88 to i8*), i8* null, i8* bitcast (void (%"class.v8::internal::StdoutStream"*)* @_ZTv0_n24_N2v88internal12StdoutStreamD1Ev to i8*), i8* bitcast (void (%"class.v8::internal::StdoutStream"*)* @_ZTv0_n24_N2v88internal12StdoutStreamD0Ev to i8*)] }, comdat, align 8
@_ZTTN2v88internal12StdoutStreamE = linkonce_odr hidden unnamed_addr constant [6 x i8*] [i8* bitcast (i8** getelementptr inbounds ({ [5 x i8*], [5 x i8*] }, { [5 x i8*], [5 x i8*] }* @_ZTVN2v88internal12StdoutStreamE, i32 0, inrange i32 0, i32 3) to i8*), i8* bitcast (i8** getelementptr inbounds ({ [5 x i8*], [5 x i8*] }, { [5 x i8*], [5 x i8*] }* @_ZTCN2v88internal12StdoutStreamE0_NS0_8OFStreamE, i32 0, inrange i32 0, i32 3) to i8*), i8* bitcast (i8** getelementptr inbounds ({ [5 x i8*], [5 x i8*] }, { [5 x i8*], [5 x i8*] }* @_ZTCN2v88internal12StdoutStreamE0_NSt3__113basic_ostreamIcNS1_11char_traitsIcEEEE, i32 0, inrange i32 0, i32 3) to i8*), i8* bitcast (i8** getelementptr inbounds ({ [5 x i8*], [5 x i8*] }, { [5 x i8*], [5 x i8*] }* @_ZTCN2v88internal12StdoutStreamE0_NSt3__113basic_ostreamIcNS1_11char_traitsIcEEEE, i32 0, inrange i32 1, i32 3) to i8*), i8* bitcast (i8** getelementptr inbounds ({ [5 x i8*], [5 x i8*] }, { [5 x i8*], [5 x i8*] }* @_ZTCN2v88internal12StdoutStreamE0_NS0_8OFStreamE, i32 0, inrange i32 1, i32 3) to i8*), i8* bitcast (i8** getelementptr inbounds ({ [5 x i8*], [5 x i8*] }, { [5 x i8*], [5 x i8*] }* @_ZTVN2v88internal12StdoutStreamE, i32 0, inrange i32 1, i32 3) to i8*)], comdat, align 8
@_ZTCN2v88internal12StdoutStreamE0_NS0_8OFStreamE = linkonce_odr hidden unnamed_addr constant { [5 x i8*], [5 x i8*] } { [5 x i8*] [i8* inttoptr (i64 88 to i8*), i8* null, i8* null, i8* bitcast (void (%"class.v8::internal::OFStream"*)* @_ZN2v88internal8OFStreamD1Ev to i8*), i8* bitcast (void (%"class.v8::internal::OFStream"*)* @_ZN2v88internal8OFStreamD0Ev to i8*)], [5 x i8*] [i8* inttoptr (i64 -88 to i8*), i8* inttoptr (i64 -88 to i8*), i8* null, i8* bitcast (void (%"class.v8::internal::OFStream"*)* @_ZTv0_n24_N2v88internal8OFStreamD1Ev to i8*), i8* bitcast (void (%"class.v8::internal::OFStream"*)* @_ZTv0_n24_N2v88internal8OFStreamD0Ev to i8*)] }, comdat, align 8
@_ZTCN2v88internal12StdoutStreamE0_NSt3__113basic_ostreamIcNS1_11char_traitsIcEEEE = linkonce_odr hidden unnamed_addr constant { [5 x i8*], [5 x i8*] } { [5 x i8*] [i8* inttoptr (i64 88 to i8*), i8* null, i8* null, i8* bitcast (void (%"class.std::__1::basic_ostream"*)* @_ZNSt3__113basic_ostreamIcNS_11char_traitsIcEEED1Ev to i8*), i8* bitcast (void (%"class.std::__1::basic_ostream"*)* @_ZNSt3__113basic_ostreamIcNS_11char_traitsIcEEED0Ev to i8*)], [5 x i8*] [i8* inttoptr (i64 -88 to i8*), i8* inttoptr (i64 -88 to i8*), i8* null, i8* bitcast (void (%"class.std::__1::basic_ostream"*)* @_ZTv0_n24_NSt3__113basic_ostreamIcNS_11char_traitsIcEEED1Ev to i8*), i8* bitcast (void (%"class.std::__1::basic_ostream"*)* @_ZTv0_n24_NSt3__113basic_ostreamIcNS_11char_traitsIcEEED0Ev to i8*)] }, comdat, align 8
@_ZTVNSt3__19basic_iosIcNS_11char_traitsIcEEEE = external unnamed_addr constant { [4 x i8*] }, align 8
@_ZTVN2v88internal8OFStreamE = linkonce_odr hidden unnamed_addr constant { [5 x i8*], [5 x i8*] } { [5 x i8*] [i8* inttoptr (i64 80 to i8*), i8* null, i8* null, i8* bitcast (void (%"class.v8::internal::OFStream"*)* @_ZN2v88internal8OFStreamD1Ev to i8*), i8* bitcast (void (%"class.v8::internal::OFStream"*)* @_ZN2v88internal8OFStreamD0Ev to i8*)], [5 x i8*] [i8* inttoptr (i64 -80 to i8*), i8* inttoptr (i64 -80 to i8*), i8* null, i8* bitcast (void (%"class.v8::internal::OFStream"*)* @_ZTv0_n24_N2v88internal8OFStreamD1Ev to i8*), i8* bitcast (void (%"class.v8::internal::OFStream"*)* @_ZTv0_n24_N2v88internal8OFStreamD0Ev to i8*)] }, comdat, align 8
@_ZTTN2v88internal8OFStreamE = linkonce_odr hidden unnamed_addr constant [4 x i8*] [i8* bitcast (i8** getelementptr inbounds ({ [5 x i8*], [5 x i8*] }, { [5 x i8*], [5 x i8*] }* @_ZTVN2v88internal8OFStreamE, i32 0, inrange i32 0, i32 3) to i8*), i8* bitcast (i8** getelementptr inbounds ({ [5 x i8*], [5 x i8*] }, { [5 x i8*], [5 x i8*] }* @_ZTCN2v88internal8OFStreamE0_NSt3__113basic_ostreamIcNS1_11char_traitsIcEEEE, i32 0, inrange i32 0, i32 3) to i8*), i8* bitcast (i8** getelementptr inbounds ({ [5 x i8*], [5 x i8*] }, { [5 x i8*], [5 x i8*] }* @_ZTCN2v88internal8OFStreamE0_NSt3__113basic_ostreamIcNS1_11char_traitsIcEEEE, i32 0, inrange i32 1, i32 3) to i8*), i8* bitcast (i8** getelementptr inbounds ({ [5 x i8*], [5 x i8*] }, { [5 x i8*], [5 x i8*] }* @_ZTVN2v88internal8OFStreamE, i32 0, inrange i32 1, i32 3) to i8*)], comdat, align 8
@_ZTCN2v88internal8OFStreamE0_NSt3__113basic_ostreamIcNS1_11char_traitsIcEEEE = linkonce_odr hidden unnamed_addr constant { [5 x i8*], [5 x i8*] } { [5 x i8*] [i8* inttoptr (i64 80 to i8*), i8* null, i8* null, i8* bitcast (void (%"class.std::__1::basic_ostream"*)* @_ZNSt3__113basic_ostreamIcNS_11char_traitsIcEEED1Ev to i8*), i8* bitcast (void (%"class.std::__1::basic_ostream"*)* @_ZNSt3__113basic_ostreamIcNS_11char_traitsIcEEED0Ev to i8*)], [5 x i8*] [i8* inttoptr (i64 -80 to i8*), i8* inttoptr (i64 -80 to i8*), i8* null, i8* bitcast (void (%"class.std::__1::basic_ostream"*)* @_ZTv0_n24_NSt3__113basic_ostreamIcNS_11char_traitsIcEEED1Ev to i8*), i8* bitcast (void (%"class.std::__1::basic_ostream"*)* @_ZTv0_n24_NSt3__113basic_ostreamIcNS_11char_traitsIcEEED0Ev to i8*)] }, comdat, align 8
@.str.102 = private unnamed_addr constant [6 x i8] c"     \00", align 1
@.str.103 = private unnamed_addr constant [11 x i8] c"(deferred)\00", align 1
@.str.104 = private unnamed_addr constant [1 x i8] zeroinitializer, align 1
@.str.105 = private unnamed_addr constant [9 x i8] c"[-B%d-%s\00", align 1
@_ZZN2v88internal12RegisterNameENS0_8RegisterEE5Names = linkonce_odr hidden local_unnamed_addr constant [16 x i8*] [i8* getelementptr inbounds ([4 x i8], [4 x i8]* @.str.107, i32 0, i32 0), i8* getelementptr inbounds ([4 x i8], [4 x i8]* @.str.108, i32 0, i32 0), i8* getelementptr inbounds ([4 x i8], [4 x i8]* @.str.109, i32 0, i32 0), i8* getelementptr inbounds ([4 x i8], [4 x i8]* @.str.110, i32 0, i32 0), i8* getelementptr inbounds ([4 x i8], [4 x i8]* @.str.111, i32 0, i32 0), i8* getelementptr inbounds ([4 x i8], [4 x i8]* @.str.112, i32 0, i32 0), i8* getelementptr inbounds ([4 x i8], [4 x i8]* @.str.113, i32 0, i32 0), i8* getelementptr inbounds ([4 x i8], [4 x i8]* @.str.114, i32 0, i32 0), i8* getelementptr inbounds ([3 x i8], [3 x i8]* @.str.115, i32 0, i32 0), i8* getelementptr inbounds ([3 x i8], [3 x i8]* @.str.116, i32 0, i32 0), i8* getelementptr inbounds ([4 x i8], [4 x i8]* @.str.117, i32 0, i32 0), i8* getelementptr inbounds ([4 x i8], [4 x i8]* @.str.118, i32 0, i32 0), i8* getelementptr inbounds ([4 x i8], [4 x i8]* @.str.119, i32 0, i32 0), i8* getelementptr inbounds ([4 x i8], [4 x i8]* @.str.120, i32 0, i32 0), i8* getelementptr inbounds ([4 x i8], [4 x i8]* @.str.121, i32 0, i32 0), i8* getelementptr inbounds ([4 x i8], [4 x i8]* @.str.122, i32 0, i32 0)], comdat, align 16
@.str.107 = private unnamed_addr constant [4 x i8] c"rax\00", align 1
@.str.108 = private unnamed_addr constant [4 x i8] c"rcx\00", align 1
@.str.109 = private unnamed_addr constant [4 x i8] c"rdx\00", align 1
@.str.110 = private unnamed_addr constant [4 x i8] c"rbx\00", align 1
@.str.111 = private unnamed_addr constant [4 x i8] c"rsp\00", align 1
@.str.112 = private unnamed_addr constant [4 x i8] c"rbp\00", align 1
@.str.113 = private unnamed_addr constant [4 x i8] c"rsi\00", align 1
@.str.114 = private unnamed_addr constant [4 x i8] c"rdi\00", align 1
@.str.115 = private unnamed_addr constant [3 x i8] c"r8\00", align 1
@.str.116 = private unnamed_addr constant [3 x i8] c"r9\00", align 1
@.str.117 = private unnamed_addr constant [4 x i8] c"r10\00", align 1
@.str.118 = private unnamed_addr constant [4 x i8] c"r11\00", align 1
@.str.119 = private unnamed_addr constant [4 x i8] c"r12\00", align 1
@.str.120 = private unnamed_addr constant [4 x i8] c"r13\00", align 1
@.str.121 = private unnamed_addr constant [4 x i8] c"r14\00", align 1
@.str.122 = private unnamed_addr constant [4 x i8] c"r15\00", align 1
@.str.123 = private unnamed_addr constant [8 x i8] c"invalid\00", align 1
@_ZZN2v88internal12RegisterNameENS0_11XMMRegisterEE5Names = linkonce_odr hidden local_unnamed_addr constant [16 x i8*] [i8* getelementptr inbounds ([5 x i8], [5 x i8]* @.str.124, i32 0, i32 0), i8* getelementptr inbounds ([5 x i8], [5 x i8]* @.str.125, i32 0, i32 0), i8* getelementptr inbounds ([5 x i8], [5 x i8]* @.str.126, i32 0, i32 0), i8* getelementptr inbounds ([5 x i8], [5 x i8]* @.str.127, i32 0, i32 0), i8* getelementptr inbounds ([5 x i8], [5 x i8]* @.str.128, i32 0, i32 0), i8* getelementptr inbounds ([5 x i8], [5 x i8]* @.str.129, i32 0, i32 0), i8* getelementptr inbounds ([5 x i8], [5 x i8]* @.str.130, i32 0, i32 0), i8* getelementptr inbounds ([5 x i8], [5 x i8]* @.str.131, i32 0, i32 0), i8* getelementptr inbounds ([5 x i8], [5 x i8]* @.str.132, i32 0, i32 0), i8* getelementptr inbounds ([5 x i8], [5 x i8]* @.str.133, i32 0, i32 0), i8* getelementptr inbounds ([6 x i8], [6 x i8]* @.str.134, i32 0, i32 0), i8* getelementptr inbounds ([6 x i8], [6 x i8]* @.str.135, i32 0, i32 0), i8* getelementptr inbounds ([6 x i8], [6 x i8]* @.str.136, i32 0, i32 0), i8* getelementptr inbounds ([6 x i8], [6 x i8]* @.str.137, i32 0, i32 0), i8* getelementptr inbounds ([6 x i8], [6 x i8]* @.str.138, i32 0, i32 0), i8* getelementptr inbounds ([6 x i8], [6 x i8]* @.str.139, i32 0, i32 0)], comdat, align 16
@.str.124 = private unnamed_addr constant [5 x i8] c"xmm0\00", align 1
@.str.125 = private unnamed_addr constant [5 x i8] c"xmm1\00", align 1
@.str.126 = private unnamed_addr constant [5 x i8] c"xmm2\00", align 1
@.str.127 = private unnamed_addr constant [5 x i8] c"xmm3\00", align 1
@.str.128 = private unnamed_addr constant [5 x i8] c"xmm4\00", align 1
@.str.129 = private unnamed_addr constant [5 x i8] c"xmm5\00", align 1
@.str.130 = private unnamed_addr constant [5 x i8] c"xmm6\00", align 1
@.str.131 = private unnamed_addr constant [5 x i8] c"xmm7\00", align 1
@.str.132 = private unnamed_addr constant [5 x i8] c"xmm8\00", align 1
@.str.133 = private unnamed_addr constant [5 x i8] c"xmm9\00", align 1
@.str.134 = private unnamed_addr constant [6 x i8] c"xmm10\00", align 1
@.str.135 = private unnamed_addr constant [6 x i8] c"xmm11\00", align 1
@.str.136 = private unnamed_addr constant [6 x i8] c"xmm12\00", align 1
@.str.137 = private unnamed_addr constant [6 x i8] c"xmm13\00", align 1
@.str.138 = private unnamed_addr constant [6 x i8] c"xmm14\00", align 1
@.str.139 = private unnamed_addr constant [6 x i8] c"xmm15\00", align 1
@.str.140 = private unnamed_addr constant [37 x i8] c"Reset %d as live due vote %zu in %s\0A\00", align 1
@.str.141 = private unnamed_addr constant [62 x i8] c"Resolving conflict of %d with deferred fixed for register %s\0A\00", align 1
@"_ZZNSt3__110__function8__policy15__choose_policyINS0_20__default_alloc_funcIZZN2v88internal8compiler19LinearScanAllocator25UpdateDeferredFixedRangesENS6_29TopTierRegisterAllocationData9SpillModeEPNS6_16InstructionBlockEENK3$_3clEPNS6_9LiveRangeEEUlSE_E_FvSE_EEEEEPKS1_NS_17integral_constantIbLb1EEEE9__policy_" = internal constant %"struct.std::__1::__function::__policy" zeroinitializer, align 8
@"_ZZNSt3__110__function8__policy15__choose_policyINS0_20__default_alloc_funcIZZN2v88internal8compiler19LinearScanAllocator25UpdateDeferredFixedRangesENS6_29TopTierRegisterAllocationData9SpillModeEPNS6_16InstructionBlockEENK3$_3clEPNS6_9LiveRangeEEUlSE_E0_FvSE_EEEEEPKS1_NS_17integral_constantIbLb1EEEE9__policy_" = internal constant %"struct.std::__1::__function::__policy" zeroinitializer, align 8
@.str.142 = private unnamed_addr constant [28 x i8] c"Using information from B%d\0A\00", align 1
@.str.143 = private unnamed_addr constant [43 x i8] c"Not a fallthrough. Adding %zu elements...\0A\00", align 1
@_ZNSt3__15ctypeIcE2idE = external global %"class.std::__1::locale::id", align 8
@.str.145 = private unnamed_addr constant [53 x i8] c"Fatal process out of memory: base::SmallVector::Grow\00", align 1
@"_ZZNSt3__110__function8__policy15__choose_policyINS0_20__default_alloc_funcIZN2v88internal8compiler19LinearScanAllocator32ComputeStateFromManyPredecessorsEPNS6_16InstructionBlockEPNS5_16ZoneUnorderedSetINS7_17RangeWithRegisterENSB_4HashENSB_6EqualsEEEE3$_1FbPNS6_17TopLevelLiveRangeEEEEEEPKS1_NS_17integral_constantIbLb1EEEE9__policy_" = internal constant %"struct.std::__1::__function::__policy" zeroinitializer, align 8
@"_ZZNSt3__110__function8__policy15__choose_policyINS0_20__default_alloc_funcIZN2v88internal8compiler19LinearScanAllocator32ComputeStateFromManyPredecessorsEPNS6_16InstructionBlockEPNS5_16ZoneUnorderedSetINS7_17RangeWithRegisterENSB_4HashENSB_6EqualsEEEE3$_2FbPNS6_17TopLevelLiveRangeEEEEEEPKS1_NS_17integral_constantIbLb1EEEE9__policy_" = internal constant %"struct.std::__1::__function::__policy" zeroinitializer, align 8
@switch.table._ZN2v88internal8compiler19LinearScanAllocator13PrintRangeRowERNSt3__113basic_ostreamIcNS3_11char_traitsIcEEEEPKNS1_17TopLevelLiveRangeE = private unnamed_addr constant [3 x i8*] [i8* getelementptr inbounds ([3 x i8], [3 x i8]* @.str.20, i64 0, i64 0), i8* getelementptr inbounds ([3 x i8], [3 x i8]* @.str.18, i64 0, i64 0), i8* getelementptr inbounds ([3 x i8], [3 x i8]* @.str.19, i64 0, i64 0)], align 8
@switch.table._ZN2v88internal8compiler10SpillRangeC2EPNS1_17TopLevelLiveRangeEPNS0_4ZoneE = private unnamed_addr constant [14 x i32] [i32 8, i32 8, i32 8, i32 8, i32 8, i32 8, i32 8, i32 8, i32 8, i32 8, i32 8, i32 8, i32 8, i32 16], align 4

@_ZN2v88internal8compiler15LiveRangeFinderC1EPKNS1_29TopTierRegisterAllocationDataEPNS0_4ZoneE = hidden unnamed_addr alias void (%"class.v8::internal::compiler::LiveRangeFinder"*, %"class.v8::internal::compiler::TopTierRegisterAllocationData"*, %"class.v8::internal::Zone"*), void (%"class.v8::internal::compiler::LiveRangeFinder"*, %"class.v8::internal::compiler::TopTierRegisterAllocationData"*, %"class.v8::internal::Zone"*)* @_ZN2v88internal8compiler15LiveRangeFinderC2EPKNS1_29TopTierRegisterAllocationDataEPNS0_4ZoneE
@_ZN2v88internal8compiler11UsePositionC1ENS1_16LifetimePositionEPNS1_18InstructionOperandEPvNS1_19UsePositionHintTypeE = hidden unnamed_addr alias void (%"class.v8::internal::compiler::UsePosition"*, i32, %"class.v8::internal::compiler::InstructionOperand"*, i8*, i8), void (%"class.v8::internal::compiler::UsePosition"*, i32, %"class.v8::internal::compiler::InstructionOperand"*, i8*, i8)* @_ZN2v88internal8compiler11UsePositionC2ENS1_16LifetimePositionEPNS1_18InstructionOperandEPvNS1_19UsePositionHintTypeE
@_ZN2v88internal8compiler9LiveRangeC1EiNS0_21MachineRepresentationEPNS1_17TopLevelLiveRangeE = hidden unnamed_addr alias void (%"class.v8::internal::compiler::LiveRange"*, i32, i8, %"class.v8::internal::compiler::TopLevelLiveRange"*), void (%"class.v8::internal::compiler::LiveRange"*, i32, i8, %"class.v8::internal::compiler::TopLevelLiveRange"*)* @_ZN2v88internal8compiler9LiveRangeC2EiNS0_21MachineRepresentationEPNS1_17TopLevelLiveRangeE
@_ZN2v88internal8compiler17TopLevelLiveRangeC1EiNS0_21MachineRepresentationE = hidden unnamed_addr alias void (%"class.v8::internal::compiler::TopLevelLiveRange"*, i32, i8), void (%"class.v8::internal::compiler::TopLevelLiveRange"*, i32, i8)* @_ZN2v88internal8compiler17TopLevelLiveRangeC2EiNS0_21MachineRepresentationE
@_ZN2v88internal8compiler10SpillRangeC1EPNS1_17TopLevelLiveRangeEPNS0_4ZoneE = hidden unnamed_addr alias void (%"class.v8::internal::compiler::SpillRange"*, %"class.v8::internal::compiler::TopLevelLiveRange"*, %"class.v8::internal::Zone"*), void (%"class.v8::internal::compiler::SpillRange"*, %"class.v8::internal::compiler::TopLevelLiveRange"*, %"class.v8::internal::Zone"*)* @_ZN2v88internal8compiler10SpillRangeC2EPNS1_17TopLevelLiveRangeEPNS0_4ZoneE
@_ZN2v88internal8compiler29TopTierRegisterAllocationData11PhiMapValueC1EPNS1_14PhiInstructionEPKNS1_16InstructionBlockEPNS0_4ZoneE = hidden unnamed_addr alias void (%"class.v8::internal::compiler::TopTierRegisterAllocationData::PhiMapValue"*, %"class.v8::internal::compiler::PhiInstruction"*, %"class.v8::internal::compiler::InstructionBlock"*, %"class.v8::internal::Zone"*), void (%"class.v8::internal::compiler::TopTierRegisterAllocationData::PhiMapValue"*, %"class.v8::internal::compiler::PhiInstruction"*, %"class.v8::internal::compiler::InstructionBlock"*, %"class.v8::internal::Zone"*)* @_ZN2v88internal8compiler29TopTierRegisterAllocationData11PhiMapValueC2EPNS1_14PhiInstructionEPKNS1_16InstructionBlockEPNS0_4ZoneE
@_ZN2v88internal8compiler29TopTierRegisterAllocationDataC1EPKNS0_21RegisterConfigurationEPNS0_4ZoneEPNS1_5FrameEPNS1_19InstructionSequenceENS_4base5FlagsINS1_22RegisterAllocationFlagEiEEPNS0_11TickCounterEPKc = hidden unnamed_addr alias void (%"class.v8::internal::compiler::TopTierRegisterAllocationData"*, %"class.v8::internal::RegisterConfiguration"*, %"class.v8::internal::Zone"*, %"class.v8::internal::compiler::Frame"*, %"class.v8::internal::compiler::InstructionSequence"*, i32, %"class.v8::internal::TickCounter"*, i8*), void (%"class.v8::internal::compiler::TopTierRegisterAllocationData"*, %"class.v8::internal::RegisterConfiguration"*, %"class.v8::internal::Zone"*, %"class.v8::internal::compiler::Frame"*, %"class.v8::internal::compiler::InstructionSequence"*, i32, %"class.v8::internal::TickCounter"*, i8*)* @_ZN2v88internal8compiler29TopTierRegisterAllocationDataC2EPKNS0_21RegisterConfigurationEPNS0_4ZoneEPNS1_5FrameEPNS1_19InstructionSequenceENS_4base5FlagsINS1_22RegisterAllocationFlagEiEEPNS0_11TickCounterEPKc
@_ZN2v88internal8compiler17ConstraintBuilderC1EPNS1_29TopTierRegisterAllocationDataE = hidden unnamed_addr alias void (%"class.v8::internal::compiler::ConstraintBuilder"*, %"class.v8::internal::compiler::TopTierRegisterAllocationData"*), void (%"class.v8::internal::compiler::ConstraintBuilder"*, %"class.v8::internal::compiler::TopTierRegisterAllocationData"*)* @_ZN2v88internal8compiler17ConstraintBuilderC2EPNS1_29TopTierRegisterAllocationDataE
@_ZN2v88internal8compiler16LiveRangeBuilderC1EPNS1_29TopTierRegisterAllocationDataEPNS0_4ZoneE = hidden unnamed_addr alias void (%"class.v8::internal::compiler::LiveRangeBuilder"*, %"class.v8::internal::compiler::TopTierRegisterAllocationData"*, %"class.v8::internal::Zone"*), void (%"class.v8::internal::compiler::LiveRangeBuilder"*, %"class.v8::internal::compiler::TopTierRegisterAllocationData"*, %"class.v8::internal::Zone"*)* @_ZN2v88internal8compiler16LiveRangeBuilderC2EPNS1_29TopTierRegisterAllocationDataEPNS0_4ZoneE
@_ZN2v88internal8compiler17RegisterAllocatorC1EPNS1_29TopTierRegisterAllocationDataENS1_12RegisterKindE = hidden unnamed_addr alias void (%"class.v8::internal::compiler::RegisterAllocator"*, %"class.v8::internal::compiler::TopTierRegisterAllocationData"*, i32), void (%"class.v8::internal::compiler::RegisterAllocator"*, %"class.v8::internal::compiler::TopTierRegisterAllocationData"*, i32)* @_ZN2v88internal8compiler17RegisterAllocatorC2EPNS1_29TopTierRegisterAllocationDataENS1_12RegisterKindE
@_ZN2v88internal8compiler19LinearScanAllocatorC1EPNS1_29TopTierRegisterAllocationDataENS1_12RegisterKindEPNS0_4ZoneE = hidden unnamed_addr alias void (%"class.v8::internal::compiler::LinearScanAllocator"*, %"class.v8::internal::compiler::TopTierRegisterAllocationData"*, i32, %"class.v8::internal::Zone"*), void (%"class.v8::internal::compiler::LinearScanAllocator"*, %"class.v8::internal::compiler::TopTierRegisterAllocationData"*, i32, %"class.v8::internal::Zone"*)* @_ZN2v88internal8compiler19LinearScanAllocatorC2EPNS1_29TopTierRegisterAllocationDataENS1_12RegisterKindEPNS0_4ZoneE
@_ZN2v88internal8compiler15OperandAssignerC1EPNS1_29TopTierRegisterAllocationDataE = hidden unnamed_addr alias void (%"class.v8::internal::compiler::OperandAssigner"*, %"class.v8::internal::compiler::TopTierRegisterAllocationData"*), void (%"class.v8::internal::compiler::OperandAssigner"*, %"class.v8::internal::compiler::TopTierRegisterAllocationData"*)* @_ZN2v88internal8compiler15OperandAssignerC2EPNS1_29TopTierRegisterAllocationDataE
@_ZN2v88internal8compiler21ReferenceMapPopulatorC1EPNS1_29TopTierRegisterAllocationDataE = hidden unnamed_addr alias void (%"class.v8::internal::compiler::ReferenceMapPopulator"*, %"class.v8::internal::compiler::TopTierRegisterAllocationData"*), void (%"class.v8::internal::compiler::ReferenceMapPopulator"*, %"class.v8::internal::compiler::TopTierRegisterAllocationData"*)* @_ZN2v88internal8compiler21ReferenceMapPopulatorC2EPNS1_29TopTierRegisterAllocationDataE
@_ZN2v88internal8compiler18LiveRangeConnectorC1EPNS1_29TopTierRegisterAllocationDataE = hidden unnamed_addr alias void (%"class.v8::internal::compiler::LiveRangeConnector"*, %"class.v8::internal::compiler::TopTierRegisterAllocationData"*), void (%"class.v8::internal::compiler::LiveRangeConnector"*, %"class.v8::internal::compiler::TopTierRegisterAllocationData"*)* @_ZN2v88internal8compiler18LiveRangeConnectorC2EPNS1_29TopTierRegisterAllocationDataE

; Function Attrs: nounwind ssp uwtable
define hidden void @_ZN2v88internal8compiler19LiveRangeBoundArray10InitializeEPNS0_4ZoneEPNS1_17TopLevelLiveRangeE(%"class.v8::internal::compiler::LiveRangeBoundArray"* nocapture, %"class.v8::internal::Zone"*, %"class.v8::internal::compiler::TopLevelLiveRange"*) local_unnamed_addr #0 align 2 {
  %4 = getelementptr inbounds %"class.v8::internal::compiler::TopLevelLiveRange", %"class.v8::internal::compiler::TopLevelLiveRange"* %2, i64 0, i32 2
  %5 = load i32, i32* %4, align 8
  %6 = add nsw i32 %5, 1
  %7 = sext i32 %6 to i64
  %8 = mul nsw i64 %7, 24
  %9 = getelementptr inbounds %"class.v8::internal::Zone", %"class.v8::internal::Zone"* %1, i64 0, i32 2
  %10 = load i64, i64* %9, align 8
  %11 = getelementptr inbounds %"class.v8::internal::Zone", %"class.v8::internal::Zone"* %1, i64 0, i32 3
  %12 = load i64, i64* %11, align 8
  %13 = sub i64 %12, %10
  %14 = icmp ugt i64 %8, %13
  br i1 %14, label %15, label %17, !prof !2

15:                                               ; preds = %3
  %16 = tail call i64 @_ZN2v88internal4Zone9NewExpandEm(%"class.v8::internal::Zone"* %1, i64 %8) #16
  br label %19

17:                                               ; preds = %3
  %18 = add i64 %8, %10
  store i64 %18, i64* %9, align 8
  br label %19

19:                                               ; preds = %15, %17
  %20 = phi i64 [ %16, %15 ], [ %10, %17 ]
  %21 = inttoptr i64 %20 to %"class.v8::internal::compiler::LiveRangeBound"*
  %22 = getelementptr inbounds %"class.v8::internal::compiler::LiveRangeBoundArray", %"class.v8::internal::compiler::LiveRangeBoundArray"* %0, i64 0, i32 1
  store %"class.v8::internal::compiler::LiveRangeBound"* %21, %"class.v8::internal::compiler::LiveRangeBound"** %22, align 8
  %23 = getelementptr inbounds %"class.v8::internal::compiler::LiveRangeBoundArray", %"class.v8::internal::compiler::LiveRangeBoundArray"* %0, i64 0, i32 0
  store i64 0, i64* %23, align 8
  %24 = icmp eq %"class.v8::internal::compiler::TopLevelLiveRange"* %2, null
  br i1 %24, label %27, label %25

25:                                               ; preds = %19
  %26 = bitcast %"class.v8::internal::compiler::TopLevelLiveRange"* %2 to %"class.v8::internal::compiler::LiveRange"*
  br label %28

27:                                               ; preds = %28, %19
  ret void

28:                                               ; preds = %25, %28
  %29 = phi %"class.v8::internal::compiler::LiveRange"* [ %48, %28 ], [ %26, %25 ]
  %30 = phi %"class.v8::internal::compiler::LiveRangeBound"* [ %49, %28 ], [ %21, %25 ]
  %31 = getelementptr inbounds %"class.v8::internal::compiler::LiveRange", %"class.v8::internal::compiler::LiveRange"* %29, i64 0, i32 1
  %32 = load i32, i32* %31, align 4
  %33 = trunc i32 %32 to i8
  %34 = and i8 %33, 1
  %35 = getelementptr inbounds %"class.v8::internal::compiler::LiveRangeBound", %"class.v8::internal::compiler::LiveRangeBound"* %30, i64 0, i32 0
  store %"class.v8::internal::compiler::LiveRange"* %29, %"class.v8::internal::compiler::LiveRange"** %35, align 8
  %36 = getelementptr inbounds %"class.v8::internal::compiler::LiveRange", %"class.v8::internal::compiler::LiveRange"* %29, i64 0, i32 3
  %37 = load %"class.v8::internal::compiler::UseInterval"*, %"class.v8::internal::compiler::UseInterval"** %36, align 8
  %38 = getelementptr inbounds %"class.v8::internal::compiler::UseInterval", %"class.v8::internal::compiler::UseInterval"* %37, i64 0, i32 0, i32 0
  %39 = load i32, i32* %38, align 8
  %40 = getelementptr inbounds %"class.v8::internal::compiler::LiveRangeBound", %"class.v8::internal::compiler::LiveRangeBound"* %30, i64 0, i32 1, i32 0
  store i32 %39, i32* %40, align 8
  %41 = getelementptr inbounds %"class.v8::internal::compiler::LiveRange", %"class.v8::internal::compiler::LiveRange"* %29, i64 0, i32 2
  %42 = load %"class.v8::internal::compiler::UseInterval"*, %"class.v8::internal::compiler::UseInterval"** %41, align 8
  %43 = getelementptr inbounds %"class.v8::internal::compiler::UseInterval", %"class.v8::internal::compiler::UseInterval"* %42, i64 0, i32 1, i32 0
  %44 = load i32, i32* %43, align 4
  %45 = getelementptr inbounds %"class.v8::internal::compiler::LiveRangeBound", %"class.v8::internal::compiler::LiveRangeBound"* %30, i64 0, i32 2, i32 0
  store i32 %44, i32* %45, align 4
  %46 = getelementptr inbounds %"class.v8::internal::compiler::LiveRangeBound", %"class.v8::internal::compiler::LiveRangeBound"* %30, i64 0, i32 3
  store i8 %34, i8* %46, align 8
  %47 = getelementptr inbounds %"class.v8::internal::compiler::LiveRange", %"class.v8::internal::compiler::LiveRange"* %29, i64 0, i32 6
  %48 = load %"class.v8::internal::compiler::LiveRange"*, %"class.v8::internal::compiler::LiveRange"** %47, align 8
  %49 = getelementptr inbounds %"class.v8::internal::compiler::LiveRangeBound", %"class.v8::internal::compiler::LiveRangeBound"* %30, i64 1
  %50 = load i64, i64* %23, align 8
  %51 = add i64 %50, 1
  store i64 %51, i64* %23, align 8
  %52 = icmp eq %"class.v8::internal::compiler::LiveRange"* %48, null
  br i1 %52, label %27, label %28
}

; Function Attrs: argmemonly nounwind
declare void @llvm.lifetime.start.p0i8(i64 immarg, i8* nocapture) #1

; Function Attrs: argmemonly nounwind
declare void @llvm.lifetime.end.p0i8(i64 immarg, i8* nocapture) #1

; Function Attrs: norecurse nounwind readonly ssp uwtable
define hidden %"class.v8::internal::compiler::LiveRangeBound"* @_ZNK2v88internal8compiler19LiveRangeBoundArray4FindENS1_16LifetimePositionE(%"class.v8::internal::compiler::LiveRangeBoundArray"* nocapture readonly, i32) local_unnamed_addr #2 align 2 {
  %3 = getelementptr inbounds %"class.v8::internal::compiler::LiveRangeBoundArray", %"class.v8::internal::compiler::LiveRangeBoundArray"* %0, i64 0, i32 0
  %4 = load i64, i64* %3, align 8
  %5 = getelementptr inbounds %"class.v8::internal::compiler::LiveRangeBoundArray", %"class.v8::internal::compiler::LiveRangeBoundArray"* %0, i64 0, i32 1
  %6 = load %"class.v8::internal::compiler::LiveRangeBound"*, %"class.v8::internal::compiler::LiveRangeBound"** %5, align 8
  br label %7

7:                                                ; preds = %10, %2
  %8 = phi i64 [ %4, %2 ], [ %14, %10 ]
  %9 = phi i64 [ 0, %2 ], [ %11, %10 ]
  br label %10

10:                                               ; preds = %7, %18
  %11 = phi i64 [ %14, %18 ], [ %9, %7 ]
  %12 = sub i64 %8, %11
  %13 = lshr i64 %12, 1
  %14 = add i64 %13, %11
  %15 = getelementptr inbounds %"class.v8::internal::compiler::LiveRangeBound", %"class.v8::internal::compiler::LiveRangeBound"* %6, i64 %14, i32 1, i32 0
  %16 = load i32, i32* %15, align 4
  %17 = icmp sgt i32 %16, %1
  br i1 %17, label %7, label %18

18:                                               ; preds = %10
  %19 = getelementptr inbounds %"class.v8::internal::compiler::LiveRangeBound", %"class.v8::internal::compiler::LiveRangeBound"* %6, i64 %14, i32 2, i32 0
  %20 = load i32, i32* %19, align 4
  %21 = icmp sgt i32 %20, %1
  br i1 %21, label %22, label %10

22:                                               ; preds = %18
  %23 = getelementptr inbounds %"class.v8::internal::compiler::LiveRangeBound", %"class.v8::internal::compiler::LiveRangeBound"* %6, i64 %14
  ret %"class.v8::internal::compiler::LiveRangeBound"* %23
}

; Function Attrs: norecurse nounwind readonly ssp uwtable
define hidden %"class.v8::internal::compiler::LiveRangeBound"* @_ZN2v88internal8compiler19LiveRangeBoundArray8FindPredEPKNS1_16InstructionBlockE(%"class.v8::internal::compiler::LiveRangeBoundArray"* nocapture readonly, %"class.v8::internal::compiler::InstructionBlock"* nocapture readonly) local_unnamed_addr #2 align 2 {
  %3 = getelementptr inbounds %"class.v8::internal::compiler::InstructionBlock", %"class.v8::internal::compiler::InstructionBlock"* %1, i64 0, i32 9
  %4 = load i32, i32* %3, align 8
  %5 = shl i32 %4, 2
  %6 = add i32 %5, -4
  %7 = or i32 %6, 2
  %8 = getelementptr inbounds %"class.v8::internal::compiler::LiveRangeBoundArray", %"class.v8::internal::compiler::LiveRangeBoundArray"* %0, i64 0, i32 0
  %9 = load i64, i64* %8, align 8
  %10 = getelementptr inbounds %"class.v8::internal::compiler::LiveRangeBoundArray", %"class.v8::internal::compiler::LiveRangeBoundArray"* %0, i64 0, i32 1
  %11 = load %"class.v8::internal::compiler::LiveRangeBound"*, %"class.v8::internal::compiler::LiveRangeBound"** %10, align 8
  br label %12

12:                                               ; preds = %15, %2
  %13 = phi i64 [ %9, %2 ], [ %19, %15 ]
  %14 = phi i64 [ 0, %2 ], [ %16, %15 ]
  br label %15

15:                                               ; preds = %12, %23
  %16 = phi i64 [ %19, %23 ], [ %14, %12 ]
  %17 = sub i64 %13, %16
  %18 = lshr i64 %17, 1
  %19 = add i64 %18, %16
  %20 = getelementptr inbounds %"class.v8::internal::compiler::LiveRangeBound", %"class.v8::internal::compiler::LiveRangeBound"* %11, i64 %19, i32 1, i32 0
  %21 = load i32, i32* %20, align 4
  %22 = icmp sgt i32 %21, %7
  br i1 %22, label %12, label %23

23:                                               ; preds = %15
  %24 = getelementptr inbounds %"class.v8::internal::compiler::LiveRangeBound", %"class.v8::internal::compiler::LiveRangeBound"* %11, i64 %19, i32 2, i32 0
  %25 = load i32, i32* %24, align 4
  %26 = icmp sgt i32 %25, %7
  br i1 %26, label %27, label %15

27:                                               ; preds = %23
  %28 = getelementptr inbounds %"class.v8::internal::compiler::LiveRangeBound", %"class.v8::internal::compiler::LiveRangeBound"* %11, i64 %19
  ret %"class.v8::internal::compiler::LiveRangeBound"* %28
}

; Function Attrs: argmemonly nounwind
declare void @llvm.memcpy.p0i8.p0i8.i64(i8* nocapture writeonly, i8* nocapture readonly, i64, i1 immarg) #1

; Function Attrs: norecurse nounwind readonly ssp uwtable
define hidden %"class.v8::internal::compiler::LiveRangeBound"* @_ZN2v88internal8compiler19LiveRangeBoundArray8FindSuccEPKNS1_16InstructionBlockE(%"class.v8::internal::compiler::LiveRangeBoundArray"* nocapture readonly, %"class.v8::internal::compiler::InstructionBlock"* nocapture readonly) local_unnamed_addr #2 align 2 {
  %3 = getelementptr inbounds %"class.v8::internal::compiler::InstructionBlock", %"class.v8::internal::compiler::InstructionBlock"* %1, i64 0, i32 8
  %4 = load i32, i32* %3, align 4
  %5 = shl nsw i32 %4, 2
  %6 = getelementptr inbounds %"class.v8::internal::compiler::LiveRangeBoundArray", %"class.v8::internal::compiler::LiveRangeBoundArray"* %0, i64 0, i32 0
  %7 = load i64, i64* %6, align 8
  %8 = getelementptr inbounds %"class.v8::internal::compiler::LiveRangeBoundArray", %"class.v8::internal::compiler::LiveRangeBoundArray"* %0, i64 0, i32 1
  %9 = load %"class.v8::internal::compiler::LiveRangeBound"*, %"class.v8::internal::compiler::LiveRangeBound"** %8, align 8
  br label %10

10:                                               ; preds = %13, %2
  %11 = phi i64 [ %7, %2 ], [ %17, %13 ]
  %12 = phi i64 [ 0, %2 ], [ %14, %13 ]
  br label %13

13:                                               ; preds = %10, %21
  %14 = phi i64 [ %17, %21 ], [ %12, %10 ]
  %15 = sub i64 %11, %14
  %16 = lshr i64 %15, 1
  %17 = add i64 %16, %14
  %18 = getelementptr inbounds %"class.v8::internal::compiler::LiveRangeBound", %"class.v8::internal::compiler::LiveRangeBound"* %9, i64 %17, i32 1, i32 0
  %19 = load i32, i32* %18, align 4
  %20 = icmp sgt i32 %19, %5
  br i1 %20, label %10, label %21

21:                                               ; preds = %13
  %22 = getelementptr inbounds %"class.v8::internal::compiler::LiveRangeBound", %"class.v8::internal::compiler::LiveRangeBound"* %9, i64 %17, i32 2, i32 0
  %23 = load i32, i32* %22, align 4
  %24 = icmp sgt i32 %23, %5
  br i1 %24, label %25, label %13

25:                                               ; preds = %21
  %26 = getelementptr inbounds %"class.v8::internal::compiler::LiveRangeBound", %"class.v8::internal::compiler::LiveRangeBound"* %9, i64 %17
  ret %"class.v8::internal::compiler::LiveRangeBound"* %26
}

; Function Attrs: nofree norecurse nounwind ssp uwtable
define hidden zeroext i1 @_ZNK2v88internal8compiler19LiveRangeBoundArray24FindConnectableSubrangesEPKNS1_16InstructionBlockES5_PNS1_10FindResultE(%"class.v8::internal::compiler::LiveRangeBoundArray"* nocapture readonly, %"class.v8::internal::compiler::InstructionBlock"* nocapture readonly, %"class.v8::internal::compiler::InstructionBlock"* nocapture readonly, %"struct.v8::internal::compiler::FindResult"* nocapture) local_unnamed_addr #3 align 2 {
  %5 = getelementptr inbounds %"class.v8::internal::compiler::InstructionBlock", %"class.v8::internal::compiler::InstructionBlock"* %2, i64 0, i32 9
  %6 = load i32, i32* %5, align 8
  %7 = shl i32 %6, 2
  %8 = add i32 %7, -4
  %9 = or i32 %8, 2
  %10 = getelementptr inbounds %"class.v8::internal::compiler::LiveRangeBoundArray", %"class.v8::internal::compiler::LiveRangeBoundArray"* %0, i64 0, i32 0
  %11 = load i64, i64* %10, align 8
  %12 = getelementptr inbounds %"class.v8::internal::compiler::LiveRangeBoundArray", %"class.v8::internal::compiler::LiveRangeBoundArray"* %0, i64 0, i32 1
  %13 = load %"class.v8::internal::compiler::LiveRangeBound"*, %"class.v8::internal::compiler::LiveRangeBound"** %12, align 8
  br label %14

14:                                               ; preds = %17, %4
  %15 = phi i64 [ %11, %4 ], [ %21, %17 ]
  %16 = phi i64 [ 0, %4 ], [ %18, %17 ]
  br label %17

17:                                               ; preds = %14, %25
  %18 = phi i64 [ %21, %25 ], [ %16, %14 ]
  %19 = sub i64 %15, %18
  %20 = lshr i64 %19, 1
  %21 = add i64 %20, %18
  %22 = getelementptr inbounds %"class.v8::internal::compiler::LiveRangeBound", %"class.v8::internal::compiler::LiveRangeBound"* %13, i64 %21, i32 1, i32 0
  %23 = load i32, i32* %22, align 4
  %24 = icmp sgt i32 %23, %9
  br i1 %24, label %14, label %25

25:                                               ; preds = %17
  %26 = getelementptr inbounds %"class.v8::internal::compiler::LiveRangeBound", %"class.v8::internal::compiler::LiveRangeBound"* %13, i64 %21, i32 2, i32 0
  %27 = load i32, i32* %26, align 4
  %28 = icmp sgt i32 %27, %9
  br i1 %28, label %29, label %17

29:                                               ; preds = %25
  %30 = getelementptr inbounds %"class.v8::internal::compiler::LiveRangeBound", %"class.v8::internal::compiler::LiveRangeBound"* %13, i64 %21
  %31 = bitcast %"class.v8::internal::compiler::LiveRangeBound"* %30 to i64*
  %32 = load i64, i64* %31, align 8
  %33 = getelementptr inbounds %"struct.v8::internal::compiler::FindResult", %"struct.v8::internal::compiler::FindResult"* %3, i64 0, i32 1
  %34 = bitcast %"class.v8::internal::compiler::LiveRange"** %33 to i64*
  store i64 %32, i64* %34, align 8
  %35 = getelementptr inbounds %"class.v8::internal::compiler::InstructionBlock", %"class.v8::internal::compiler::InstructionBlock"* %1, i64 0, i32 8
  %36 = load i32, i32* %35, align 4
  %37 = shl nsw i32 %36, 2
  %38 = load i32, i32* %22, align 4
  %39 = icmp sgt i32 %38, %37
  %40 = inttoptr i64 %32 to %"class.v8::internal::compiler::LiveRange"*
  br i1 %39, label %44, label %41

41:                                               ; preds = %29
  %42 = load i32, i32* %26, align 4
  %43 = icmp sgt i32 %42, %37
  br i1 %43, label %71, label %44

44:                                               ; preds = %29, %41
  %45 = load i64, i64* %10, align 8
  %46 = load %"class.v8::internal::compiler::LiveRangeBound"*, %"class.v8::internal::compiler::LiveRangeBound"** %12, align 8
  br label %47

47:                                               ; preds = %50, %44
  %48 = phi i64 [ %45, %44 ], [ %54, %50 ]
  %49 = phi i64 [ 0, %44 ], [ %51, %50 ]
  br label %50

50:                                               ; preds = %47, %58
  %51 = phi i64 [ %54, %58 ], [ %49, %47 ]
  %52 = sub i64 %48, %51
  %53 = lshr i64 %52, 1
  %54 = add i64 %53, %51
  %55 = getelementptr inbounds %"class.v8::internal::compiler::LiveRangeBound", %"class.v8::internal::compiler::LiveRangeBound"* %46, i64 %54, i32 1, i32 0
  %56 = load i32, i32* %55, align 4
  %57 = icmp sgt i32 %56, %37
  br i1 %57, label %47, label %58

58:                                               ; preds = %50
  %59 = getelementptr inbounds %"class.v8::internal::compiler::LiveRangeBound", %"class.v8::internal::compiler::LiveRangeBound"* %46, i64 %54, i32 2, i32 0
  %60 = load i32, i32* %59, align 4
  %61 = icmp sgt i32 %60, %37
  br i1 %61, label %62, label %50

62:                                               ; preds = %58
  %63 = getelementptr inbounds %"class.v8::internal::compiler::LiveRangeBound", %"class.v8::internal::compiler::LiveRangeBound"* %46, i64 %54, i32 3
  %64 = load i8, i8* %63, align 8, !range !3
  %65 = icmp eq i8 %64, 0
  br i1 %65, label %66, label %71

66:                                               ; preds = %62
  %67 = getelementptr inbounds %"class.v8::internal::compiler::LiveRangeBound", %"class.v8::internal::compiler::LiveRangeBound"* %46, i64 %54, i32 0
  %68 = load %"class.v8::internal::compiler::LiveRange"*, %"class.v8::internal::compiler::LiveRange"** %67, align 8
  %69 = getelementptr inbounds %"struct.v8::internal::compiler::FindResult", %"struct.v8::internal::compiler::FindResult"* %3, i64 0, i32 0
  store %"class.v8::internal::compiler::LiveRange"* %68, %"class.v8::internal::compiler::LiveRange"** %69, align 8
  %70 = icmp ne %"class.v8::internal::compiler::LiveRange"* %68, %40
  br label %71

71:                                               ; preds = %62, %41, %66
  %72 = phi i1 [ %70, %66 ], [ false, %41 ], [ false, %62 ]
  ret i1 %72
}

; Function Attrs: nounwind ssp uwtable
define hidden void @_ZN2v88internal8compiler15LiveRangeFinderC2EPKNS1_29TopTierRegisterAllocationDataEPNS0_4ZoneE(%"class.v8::internal::compiler::LiveRangeFinder"* nocapture, %"class.v8::internal::compiler::TopTierRegisterAllocationData"*, %"class.v8::internal::Zone"*) unnamed_addr #0 align 2 {
  %4 = getelementptr inbounds %"class.v8::internal::compiler::LiveRangeFinder", %"class.v8::internal::compiler::LiveRangeFinder"* %0, i64 0, i32 0
  store %"class.v8::internal::compiler::TopTierRegisterAllocationData"* %1, %"class.v8::internal::compiler::TopTierRegisterAllocationData"** %4, align 8
  %5 = getelementptr inbounds %"class.v8::internal::compiler::LiveRangeFinder", %"class.v8::internal::compiler::LiveRangeFinder"* %0, i64 0, i32 1
  %6 = getelementptr inbounds %"class.v8::internal::compiler::TopTierRegisterAllocationData", %"class.v8::internal::compiler::TopTierRegisterAllocationData"* %1, i64 0, i32 9, i32 0
  %7 = getelementptr inbounds %"class.v8::internal::compiler::TopTierRegisterAllocationData", %"class.v8::internal::compiler::TopTierRegisterAllocationData"* %1, i64 0, i32 9, i32 0, i32 0, i32 1
  %8 = bitcast %"class.v8::internal::compiler::TopLevelLiveRange"*** %7 to i64*
  %9 = load i64, i64* %8, align 8
  %10 = bitcast %"class.std::__1::vector"* %6 to i64*
  %11 = load i64, i64* %10, align 8
  %12 = sub i64 %9, %11
  %13 = lshr exact i64 %12, 3
  %14 = trunc i64 %13 to i32
  store i32 %14, i32* %5, align 8
  %15 = getelementptr inbounds %"class.v8::internal::compiler::LiveRangeFinder", %"class.v8::internal::compiler::LiveRangeFinder"* %0, i64 0, i32 2
  %16 = shl i64 %12, 29
  %17 = ashr exact i64 %16, 28
  %18 = getelementptr inbounds %"class.v8::internal::Zone", %"class.v8::internal::Zone"* %2, i64 0, i32 2
  %19 = load i64, i64* %18, align 8
  %20 = getelementptr inbounds %"class.v8::internal::Zone", %"class.v8::internal::Zone"* %2, i64 0, i32 3
  %21 = load i64, i64* %20, align 8
  %22 = sub i64 %21, %19
  %23 = icmp ugt i64 %17, %22
  br i1 %23, label %24, label %26, !prof !2

24:                                               ; preds = %3
  %25 = tail call i64 @_ZN2v88internal4Zone9NewExpandEm(%"class.v8::internal::Zone"* %2, i64 %17) #16
  br label %28

26:                                               ; preds = %3
  %27 = add i64 %17, %19
  store i64 %27, i64* %18, align 8
  br label %28

28:                                               ; preds = %24, %26
  %29 = phi i64 [ %25, %24 ], [ %19, %26 ]
  %30 = inttoptr i64 %29 to %"class.v8::internal::compiler::LiveRangeBoundArray"*
  store %"class.v8::internal::compiler::LiveRangeBoundArray"* %30, %"class.v8::internal::compiler::LiveRangeBoundArray"** %15, align 8
  %31 = getelementptr inbounds %"class.v8::internal::compiler::LiveRangeFinder", %"class.v8::internal::compiler::LiveRangeFinder"* %0, i64 0, i32 3
  store %"class.v8::internal::Zone"* %2, %"class.v8::internal::Zone"** %31, align 8
  %32 = load i32, i32* %5, align 8
  %33 = icmp sgt i32 %32, 0
  br i1 %33, label %34, label %38

34:                                               ; preds = %28
  %35 = inttoptr i64 %29 to i8*
  tail call void @llvm.memset.p0i8.i64(i8* align 8 %35, i8 0, i64 16, i1 false) #16
  %36 = load i32, i32* %5, align 8
  %37 = icmp sgt i32 %36, 1
  br i1 %37, label %39, label %38

38:                                               ; preds = %39, %34, %28
  ret void

39:                                               ; preds = %34, %39
  %40 = phi i64 [ %44, %39 ], [ 1, %34 ]
  %41 = load %"class.v8::internal::compiler::LiveRangeBoundArray"*, %"class.v8::internal::compiler::LiveRangeBoundArray"** %15, align 8
  %42 = getelementptr inbounds %"class.v8::internal::compiler::LiveRangeBoundArray", %"class.v8::internal::compiler::LiveRangeBoundArray"* %41, i64 %40
  %43 = bitcast %"class.v8::internal::compiler::LiveRangeBoundArray"* %42 to i8*
  tail call void @llvm.memset.p0i8.i64(i8* align 8 %43, i8 0, i64 16, i1 false) #16
  %44 = add nuw nsw i64 %40, 1
  %45 = load i32, i32* %5, align 8
  %46 = sext i32 %45 to i64
  %47 = icmp slt i64 %44, %46
  br i1 %47, label %39, label %38
}

; Function Attrs: nounwind ssp uwtable
define hidden %"class.v8::internal::compiler::LiveRangeBoundArray"* @_ZN2v88internal8compiler15LiveRangeFinder8ArrayForEi(%"class.v8::internal::compiler::LiveRangeFinder"* nocapture readonly, i32) local_unnamed_addr #0 align 2 {
  %3 = getelementptr inbounds %"class.v8::internal::compiler::LiveRangeFinder", %"class.v8::internal::compiler::LiveRangeFinder"* %0, i64 0, i32 0
  %4 = load %"class.v8::internal::compiler::TopTierRegisterAllocationData"*, %"class.v8::internal::compiler::TopTierRegisterAllocationData"** %3, align 8
  %5 = sext i32 %1 to i64
  %6 = getelementptr inbounds %"class.v8::internal::compiler::TopTierRegisterAllocationData", %"class.v8::internal::compiler::TopTierRegisterAllocationData"* %4, i64 0, i32 9, i32 0, i32 0, i32 0
  %7 = load %"class.v8::internal::compiler::TopLevelLiveRange"**, %"class.v8::internal::compiler::TopLevelLiveRange"*** %6, align 8
  %8 = getelementptr inbounds %"class.v8::internal::compiler::TopLevelLiveRange"*, %"class.v8::internal::compiler::TopLevelLiveRange"** %7, i64 %5
  %9 = load %"class.v8::internal::compiler::TopLevelLiveRange"*, %"class.v8::internal::compiler::TopLevelLiveRange"** %8, align 8
  %10 = getelementptr inbounds %"class.v8::internal::compiler::LiveRangeFinder", %"class.v8::internal::compiler::LiveRangeFinder"* %0, i64 0, i32 2
  %11 = load %"class.v8::internal::compiler::LiveRangeBoundArray"*, %"class.v8::internal::compiler::LiveRangeBoundArray"** %10, align 8
  %12 = getelementptr inbounds %"class.v8::internal::compiler::LiveRangeBoundArray", %"class.v8::internal::compiler::LiveRangeBoundArray"* %11, i64 %5
  %13 = getelementptr inbounds %"class.v8::internal::compiler::LiveRangeBoundArray", %"class.v8::internal::compiler::LiveRangeBoundArray"* %11, i64 %5, i32 1
  %14 = load %"class.v8::internal::compiler::LiveRangeBound"*, %"class.v8::internal::compiler::LiveRangeBound"** %13, align 8
  %15 = icmp eq %"class.v8::internal::compiler::LiveRangeBound"* %14, null
  br i1 %15, label %16, label %66

16:                                               ; preds = %2
  %17 = getelementptr inbounds %"class.v8::internal::compiler::LiveRangeFinder", %"class.v8::internal::compiler::LiveRangeFinder"* %0, i64 0, i32 3
  %18 = load %"class.v8::internal::Zone"*, %"class.v8::internal::Zone"** %17, align 8
  %19 = getelementptr inbounds %"class.v8::internal::compiler::TopLevelLiveRange", %"class.v8::internal::compiler::TopLevelLiveRange"* %9, i64 0, i32 2
  %20 = load i32, i32* %19, align 8
  %21 = add nsw i32 %20, 1
  %22 = sext i32 %21 to i64
  %23 = mul nsw i64 %22, 24
  %24 = getelementptr inbounds %"class.v8::internal::Zone", %"class.v8::internal::Zone"* %18, i64 0, i32 2
  %25 = load i64, i64* %24, align 8
  %26 = getelementptr inbounds %"class.v8::internal::Zone", %"class.v8::internal::Zone"* %18, i64 0, i32 3
  %27 = load i64, i64* %26, align 8
  %28 = sub i64 %27, %25
  %29 = icmp ugt i64 %23, %28
  br i1 %29, label %30, label %32, !prof !2

30:                                               ; preds = %16
  %31 = tail call i64 @_ZN2v88internal4Zone9NewExpandEm(%"class.v8::internal::Zone"* %18, i64 %23) #16
  br label %34

32:                                               ; preds = %16
  %33 = add i64 %23, %25
  store i64 %33, i64* %24, align 8
  br label %34

34:                                               ; preds = %32, %30
  %35 = phi i64 [ %31, %30 ], [ %25, %32 ]
  %36 = inttoptr i64 %35 to %"class.v8::internal::compiler::LiveRangeBound"*
  store %"class.v8::internal::compiler::LiveRangeBound"* %36, %"class.v8::internal::compiler::LiveRangeBound"** %13, align 8
  %37 = getelementptr inbounds %"class.v8::internal::compiler::LiveRangeBoundArray", %"class.v8::internal::compiler::LiveRangeBoundArray"* %12, i64 0, i32 0
  store i64 0, i64* %37, align 8
  %38 = icmp eq %"class.v8::internal::compiler::TopLevelLiveRange"* %9, null
  br i1 %38, label %66, label %39

39:                                               ; preds = %34
  %40 = bitcast %"class.v8::internal::compiler::TopLevelLiveRange"* %9 to %"class.v8::internal::compiler::LiveRange"*
  br label %41

41:                                               ; preds = %41, %39
  %42 = phi %"class.v8::internal::compiler::LiveRange"* [ %61, %41 ], [ %40, %39 ]
  %43 = phi %"class.v8::internal::compiler::LiveRangeBound"* [ %62, %41 ], [ %36, %39 ]
  %44 = getelementptr inbounds %"class.v8::internal::compiler::LiveRange", %"class.v8::internal::compiler::LiveRange"* %42, i64 0, i32 1
  %45 = load i32, i32* %44, align 4
  %46 = trunc i32 %45 to i8
  %47 = and i8 %46, 1
  %48 = getelementptr inbounds %"class.v8::internal::compiler::LiveRangeBound", %"class.v8::internal::compiler::LiveRangeBound"* %43, i64 0, i32 0
  store %"class.v8::internal::compiler::LiveRange"* %42, %"class.v8::internal::compiler::LiveRange"** %48, align 8
  %49 = getelementptr inbounds %"class.v8::internal::compiler::LiveRange", %"class.v8::internal::compiler::LiveRange"* %42, i64 0, i32 3
  %50 = load %"class.v8::internal::compiler::UseInterval"*, %"class.v8::internal::compiler::UseInterval"** %49, align 8
  %51 = getelementptr inbounds %"class.v8::internal::compiler::UseInterval", %"class.v8::internal::compiler::UseInterval"* %50, i64 0, i32 0, i32 0
  %52 = load i32, i32* %51, align 8
  %53 = getelementptr inbounds %"class.v8::internal::compiler::LiveRangeBound", %"class.v8::internal::compiler::LiveRangeBound"* %43, i64 0, i32 1, i32 0
  store i32 %52, i32* %53, align 8
  %54 = getelementptr inbounds %"class.v8::internal::compiler::LiveRange", %"class.v8::internal::compiler::LiveRange"* %42, i64 0, i32 2
  %55 = load %"class.v8::internal::compiler::UseInterval"*, %"class.v8::internal::compiler::UseInterval"** %54, align 8
  %56 = getelementptr inbounds %"class.v8::internal::compiler::UseInterval", %"class.v8::internal::compiler::UseInterval"* %55, i64 0, i32 1, i32 0
  %57 = load i32, i32* %56, align 4
  %58 = getelementptr inbounds %"class.v8::internal::compiler::LiveRangeBound", %"class.v8::internal::compiler::LiveRangeBound"* %43, i64 0, i32 2, i32 0
  store i32 %57, i32* %58, align 4
  %59 = getelementptr inbounds %"class.v8::internal::compiler::LiveRangeBound", %"class.v8::internal::compiler::LiveRangeBound"* %43, i64 0, i32 3
  store i8 %47, i8* %59, align 8
  %60 = getelementptr inbounds %"class.v8::internal::compiler::LiveRange", %"class.v8::internal::compiler::LiveRange"* %42, i64 0, i32 6
  %61 = load %"class.v8::internal::compiler::LiveRange"*, %"class.v8::internal::compiler::LiveRange"** %60, align 8
  %62 = getelementptr inbounds %"class.v8::internal::compiler::LiveRangeBound", %"class.v8::internal::compiler::LiveRangeBound"* %43, i64 1
  %63 = load i64, i64* %37, align 8
  %64 = add i64 %63, 1
  store i64 %64, i64* %37, align 8
  %65 = icmp eq %"class.v8::internal::compiler::LiveRange"* %61, null
  br i1 %65, label %66, label %41

66:                                               ; preds = %41, %34, %2
  ret %"class.v8::internal::compiler::LiveRangeBoundArray"* %12
}

; Function Attrs: nofree norecurse nounwind ssp uwtable
define hidden void @_ZN2v88internal8compiler11UsePositionC2ENS1_16LifetimePositionEPNS1_18InstructionOperandEPvNS1_19UsePositionHintTypeE(%"class.v8::internal::compiler::UsePosition"* nocapture, i32, %"class.v8::internal::compiler::InstructionOperand"*, i8*, i8 zeroext) unnamed_addr #3 align 2 {
  %6 = getelementptr inbounds %"class.v8::internal::compiler::UsePosition", %"class.v8::internal::compiler::UsePosition"* %0, i64 0, i32 0
  store %"class.v8::internal::compiler::InstructionOperand"* %2, %"class.v8::internal::compiler::InstructionOperand"** %6, align 8
  %7 = getelementptr inbounds %"class.v8::internal::compiler::UsePosition", %"class.v8::internal::compiler::UsePosition"* %0, i64 0, i32 1
  store i8* %3, i8** %7, align 8
  %8 = getelementptr inbounds %"class.v8::internal::compiler::UsePosition", %"class.v8::internal::compiler::UsePosition"* %0, i64 0, i32 2
  store %"class.v8::internal::compiler::UsePosition"* null, %"class.v8::internal::compiler::UsePosition"** %8, align 8
  %9 = getelementptr inbounds %"class.v8::internal::compiler::UsePosition", %"class.v8::internal::compiler::UsePosition"* %0, i64 0, i32 3, i32 0
  store i32 %1, i32* %9, align 8
  %10 = getelementptr inbounds %"class.v8::internal::compiler::UsePosition", %"class.v8::internal::compiler::UsePosition"* %0, i64 0, i32 4
  store i32 0, i32* %10, align 4
  %11 = icmp eq %"class.v8::internal::compiler::InstructionOperand"* %2, null
  br i1 %11, label %25, label %12

12:                                               ; preds = %5
  %13 = getelementptr inbounds %"class.v8::internal::compiler::InstructionOperand", %"class.v8::internal::compiler::InstructionOperand"* %2, i64 0, i32 0
  %14 = load i64, i64* %13, align 8
  %15 = and i64 %14, 7
  %16 = icmp eq i64 %15, 1
  br i1 %16, label %17, label %25

17:                                               ; preds = %12
  %18 = and i64 %14, 515396075520
  switch i64 %18, label %19 [
    i64 377957122048, label %25
    i64 446676598784, label %23
    i64 171798691840, label %24
  ]

19:                                               ; preds = %17
  %20 = icmp ne i64 %18, 103079215104
  %21 = zext i1 %20 to i32
  %22 = shl nuw nsw i32 %21, 5
  br label %25

23:                                               ; preds = %17
  br label %25

24:                                               ; preds = %17
  br label %25

25:                                               ; preds = %17, %24, %23, %19, %5, %12
  %26 = phi i32 [ 0, %12 ], [ 0, %5 ], [ 0, %19 ], [ 2, %17 ], [ 3, %23 ], [ 1, %24 ]
  %27 = phi i32 [ 32, %12 ], [ 32, %5 ], [ %22, %19 ], [ 32, %17 ], [ 0, %23 ], [ 0, %24 ]
  %28 = zext i8 %4 to i32
  %29 = shl nuw nsw i32 %28, 2
  %30 = or i32 %29, %26
  %31 = or i32 %30, %27
  %32 = or i32 %31, 2048
  store i32 %32, i32* %10, align 4
  ret void
}

; Function Attrs: nounwind ssp uwtable
define hidden zeroext i1 @_ZNK2v88internal8compiler11UsePosition7HasHintEv(%"class.v8::internal::compiler::UsePosition"* nocapture readonly) local_unnamed_addr #0 align 2 {
  %2 = getelementptr inbounds %"class.v8::internal::compiler::UsePosition", %"class.v8::internal::compiler::UsePosition"* %0, i64 0, i32 1
  %3 = load i8*, i8** %2, align 8
  %4 = icmp eq i8* %3, null
  br i1 %4, label %24, label %5

5:                                                ; preds = %1
  %6 = getelementptr inbounds %"class.v8::internal::compiler::UsePosition", %"class.v8::internal::compiler::UsePosition"* %0, i64 0, i32 4
  %7 = load i32, i32* %6, align 4
  %8 = lshr i32 %7, 2
  %9 = trunc i32 %8 to i8
  %10 = and i8 %9, 7
  switch i8 %10, label %23 [
    i8 0, label %24
    i8 4, label %24
    i8 2, label %11
    i8 1, label %17
    i8 3, label %18
  ]

11:                                               ; preds = %5
  %12 = getelementptr inbounds i8, i8* %3, i64 28
  %13 = bitcast i8* %12 to i32*
  %14 = load i32, i32* %13, align 4
  %15 = and i32 %14, 4032
  %16 = icmp ne i32 %15, 2048
  br label %24

17:                                               ; preds = %5
  br label %24

18:                                               ; preds = %5
  %19 = getelementptr inbounds i8, i8* %3, i64 48
  %20 = bitcast i8* %19 to i32*
  %21 = load i32, i32* %20, align 8
  %22 = icmp ne i32 %21, 32
  ret i1 %22

23:                                               ; preds = %5
  tail call void (i8*, ...) @_Z8V8_FatalPKcz(i8* getelementptr inbounds ([17 x i8], [17 x i8]* @.str, i64 0, i64 0)) #17
  unreachable

24:                                               ; preds = %11, %1, %5, %5, %17
  %25 = phi i1 [ true, %17 ], [ false, %1 ], [ false, %5 ], [ false, %5 ], [ %16, %11 ]
  ret i1 %25
}

; Function Attrs: nounwind ssp uwtable
define hidden zeroext i1 @_ZNK2v88internal8compiler11UsePosition12HintRegisterEPi(%"class.v8::internal::compiler::UsePosition"* nocapture readonly, i32* nocapture) local_unnamed_addr #0 align 2 {
  %3 = getelementptr inbounds %"class.v8::internal::compiler::UsePosition", %"class.v8::internal::compiler::UsePosition"* %0, i64 0, i32 1
  %4 = load i8*, i8** %3, align 8
  %5 = icmp eq i8* %4, null
  br i1 %5, label %32, label %6

6:                                                ; preds = %2
  %7 = getelementptr inbounds %"class.v8::internal::compiler::UsePosition", %"class.v8::internal::compiler::UsePosition"* %0, i64 0, i32 4
  %8 = load i32, i32* %7, align 4
  %9 = lshr i32 %8, 2
  %10 = trunc i32 %9 to i8
  %11 = and i8 %10, 7
  switch i8 %11, label %31 [
    i8 0, label %32
    i8 4, label %32
    i8 2, label %12
    i8 1, label %20
    i8 3, label %25
  ]

12:                                               ; preds = %6
  %13 = getelementptr inbounds i8, i8* %4, i64 28
  %14 = bitcast i8* %13 to i32*
  %15 = load i32, i32* %14, align 4
  %16 = lshr i32 %15, 6
  %17 = and i32 %16, 63
  %18 = icmp eq i32 %17, 32
  br i1 %18, label %32, label %19

19:                                               ; preds = %12
  store i32 %17, i32* %1, align 4
  br label %32

20:                                               ; preds = %6
  %21 = bitcast i8* %4 to i64*
  %22 = load i64, i64* %21, align 8
  %23 = ashr i64 %22, 35
  %24 = trunc i64 %23 to i32
  store i32 %24, i32* %1, align 4
  br label %32

25:                                               ; preds = %6
  %26 = getelementptr inbounds i8, i8* %4, i64 48
  %27 = bitcast i8* %26 to i32*
  %28 = load i32, i32* %27, align 8
  %29 = icmp eq i32 %28, 32
  br i1 %29, label %32, label %30

30:                                               ; preds = %25
  store i32 %28, i32* %1, align 4
  br label %32

31:                                               ; preds = %6
  tail call void (i8*, ...) @_Z8V8_FatalPKcz(i8* getelementptr inbounds ([17 x i8], [17 x i8]* @.str, i64 0, i64 0)) #17
  unreachable

32:                                               ; preds = %30, %25, %19, %12, %6, %6, %2, %20
  %33 = phi i1 [ true, %20 ], [ false, %2 ], [ false, %6 ], [ false, %6 ], [ true, %19 ], [ false, %12 ], [ true, %30 ], [ false, %25 ]
  ret i1 %33
}

; Function Attrs: noreturn
declare void @_Z8V8_FatalPKcz(i8*, ...) local_unnamed_addr #4

; Function Attrs: nounwind ssp uwtable
define hidden zeroext i8 @_ZN2v88internal8compiler11UsePosition18HintTypeForOperandERKNS1_18InstructionOperandE(%"class.v8::internal::compiler::InstructionOperand"* nocapture readonly dereferenceable(8)) local_unnamed_addr #0 align 2 {
  %2 = getelementptr inbounds %"class.v8::internal::compiler::InstructionOperand", %"class.v8::internal::compiler::InstructionOperand"* %0, i64 0, i32 0
  %3 = load i64, i64* %2, align 8
  %4 = trunc i64 %3 to i32
  %5 = and i32 %4, 7
  switch i32 %5, label %16 [
    i32 2, label %14
    i32 3, label %14
    i32 1, label %6
    i32 5, label %7
  ]

6:                                                ; preds = %1
  br label %14

7:                                                ; preds = %1
  %8 = and i64 %3, 7
  %9 = icmp ugt i64 %8, 4
  %10 = and i64 %3, 24
  %11 = icmp eq i64 %10, 0
  %12 = and i1 %9, %11
  %13 = zext i1 %12 to i8
  ret i8 %13

14:                                               ; preds = %1, %1, %6
  %15 = phi i8 [ 4, %6 ], [ 0, %1 ], [ 0, %1 ]
  ret i8 %15

16:                                               ; preds = %1
  tail call void (i8*, ...) @_Z8V8_FatalPKcz(i8* getelementptr inbounds ([17 x i8], [17 x i8]* @.str, i64 0, i64 0)) #17
  unreachable
}

; Function Attrs: nofree norecurse nounwind ssp uwtable
define hidden void @_ZN2v88internal8compiler11UsePosition7SetHintEPS2_(%"class.v8::internal::compiler::UsePosition"* nocapture, %"class.v8::internal::compiler::UsePosition"*) local_unnamed_addr #3 align 2 {
  %3 = getelementptr inbounds %"class.v8::internal::compiler::UsePosition", %"class.v8::internal::compiler::UsePosition"* %0, i64 0, i32 1
  %4 = bitcast i8** %3 to %"class.v8::internal::compiler::UsePosition"**
  store %"class.v8::internal::compiler::UsePosition"* %1, %"class.v8::internal::compiler::UsePosition"** %4, align 8
  %5 = getelementptr inbounds %"class.v8::internal::compiler::UsePosition", %"class.v8::internal::compiler::UsePosition"* %0, i64 0, i32 4
  %6 = load i32, i32* %5, align 4
  %7 = and i32 %6, -29
  %8 = or i32 %7, 8
  store i32 %8, i32* %5, align 4
  ret void
}

; Function Attrs: nofree norecurse nounwind ssp uwtable
define hidden void @_ZN2v88internal8compiler11UsePosition11ResolveHintEPS2_(%"class.v8::internal::compiler::UsePosition"* nocapture, %"class.v8::internal::compiler::UsePosition"*) local_unnamed_addr #3 align 2 {
  %3 = getelementptr inbounds %"class.v8::internal::compiler::UsePosition", %"class.v8::internal::compiler::UsePosition"* %0, i64 0, i32 4
  %4 = load i32, i32* %3, align 4
  %5 = and i32 %4, 28
  %6 = icmp eq i32 %5, 16
  br i1 %6, label %7, label %12

7:                                                ; preds = %2
  %8 = getelementptr inbounds %"class.v8::internal::compiler::UsePosition", %"class.v8::internal::compiler::UsePosition"* %0, i64 0, i32 1
  %9 = bitcast i8** %8 to %"class.v8::internal::compiler::UsePosition"**
  store %"class.v8::internal::compiler::UsePosition"* %1, %"class.v8::internal::compiler::UsePosition"** %9, align 8
  %10 = and i32 %4, -29
  %11 = or i32 %10, 8
  store i32 %11, i32* %3, align 4
  br label %12

12:                                               ; preds = %2, %7
  ret void
}

; Function Attrs: nofree norecurse nounwind ssp uwtable
define hidden void @_ZN2v88internal8compiler11UsePosition8set_typeENS1_15UsePositionTypeEb(%"class.v8::internal::compiler::UsePosition"* nocapture, i8 zeroext, i1 zeroext) local_unnamed_addr #3 align 2 {
  %4 = zext i8 %1 to i32
  %5 = zext i1 %2 to i32
  %6 = shl nuw nsw i32 %5, 5
  %7 = getelementptr inbounds %"class.v8::internal::compiler::UsePosition", %"class.v8::internal::compiler::UsePosition"* %0, i64 0, i32 4
  %8 = load i32, i32* %7, align 4
  %9 = and i32 %8, 28
  %10 = or i32 %6, %4
  %11 = or i32 %10, %9
  %12 = or i32 %11, 2048
  store i32 %12, i32* %7, align 4
  ret void
}

; Function Attrs: nounwind ssp uwtable
define hidden %"class.v8::internal::compiler::UseInterval"* @_ZN2v88internal8compiler11UseInterval7SplitAtENS1_16LifetimePositionEPNS0_4ZoneE(%"class.v8::internal::compiler::UseInterval"* nocapture, i32, %"class.v8::internal::Zone"*) local_unnamed_addr #0 align 2 {
  %4 = getelementptr inbounds %"class.v8::internal::Zone", %"class.v8::internal::Zone"* %2, i64 0, i32 2
  %5 = load i64, i64* %4, align 8
  %6 = getelementptr inbounds %"class.v8::internal::Zone", %"class.v8::internal::Zone"* %2, i64 0, i32 3
  %7 = load i64, i64* %6, align 8
  %8 = sub i64 %7, %5
  %9 = icmp ult i64 %8, 16
  br i1 %9, label %10, label %12, !prof !2

10:                                               ; preds = %3
  %11 = tail call i64 @_ZN2v88internal4Zone9NewExpandEm(%"class.v8::internal::Zone"* %2, i64 16) #16
  br label %14

12:                                               ; preds = %3
  %13 = add i64 %5, 16
  store i64 %13, i64* %4, align 8
  br label %14

14:                                               ; preds = %10, %12
  %15 = phi i64 [ %11, %10 ], [ %5, %12 ]
  %16 = inttoptr i64 %15 to %"class.v8::internal::compiler::UseInterval"*
  %17 = getelementptr inbounds %"class.v8::internal::compiler::UseInterval", %"class.v8::internal::compiler::UseInterval"* %0, i64 0, i32 1, i32 0
  %18 = load i32, i32* %17, align 4
  %19 = getelementptr inbounds %"class.v8::internal::compiler::UseInterval", %"class.v8::internal::compiler::UseInterval"* %16, i64 0, i32 0, i32 0
  store i32 %1, i32* %19, align 8
  %20 = getelementptr inbounds %"class.v8::internal::compiler::UseInterval", %"class.v8::internal::compiler::UseInterval"* %16, i64 0, i32 1, i32 0
  store i32 %18, i32* %20, align 4
  %21 = getelementptr inbounds %"class.v8::internal::compiler::UseInterval", %"class.v8::internal::compiler::UseInterval"* %16, i64 0, i32 2
  store %"class.v8::internal::compiler::UseInterval"* null, %"class.v8::internal::compiler::UseInterval"** %21, align 8
  %22 = getelementptr inbounds %"class.v8::internal::compiler::UseInterval", %"class.v8::internal::compiler::UseInterval"* %0, i64 0, i32 2
  %23 = bitcast %"class.v8::internal::compiler::UseInterval"** %22 to i64*
  %24 = load i64, i64* %23, align 8
  %25 = bitcast %"class.v8::internal::compiler::UseInterval"** %21 to i64*
  store i64 %24, i64* %25, align 8
  store %"class.v8::internal::compiler::UseInterval"* null, %"class.v8::internal::compiler::UseInterval"** %22, align 8
  store i32 %1, i32* %17, align 4
  ret %"class.v8::internal::compiler::UseInterval"* %16
}

; Function Attrs: nounwind ssp uwtable
define hidden void @_ZNK2v88internal8compiler16LifetimePosition5PrintEv(%"class.v8::internal::compiler::LifetimePosition"* nocapture readonly) local_unnamed_addr #0 align 2 {
  %2 = alloca %"class.std::__1::locale", align 8
  %3 = alloca %"class.v8::internal::StdoutStream", align 8
  %4 = bitcast %"class.v8::internal::StdoutStream"* %3 to i8*
  call void @llvm.lifetime.start.p0i8(i64 240, i8* nonnull %4) #16
  %5 = getelementptr inbounds %"class.v8::internal::StdoutStream", %"class.v8::internal::StdoutStream"* %3, i64 0, i32 2, i32 0, i32 0
  store i32 (...)** bitcast (i8** getelementptr inbounds ({ [4 x i8*] }, { [4 x i8*] }* @_ZTVNSt3__19basic_iosIcNS_11char_traitsIcEEEE, i64 0, inrange i32 0, i64 2) to i32 (...)**), i32 (...)*** %5, align 8
  %6 = bitcast %"class.v8::internal::StdoutStream"* %3 to %"class.v8::internal::OFStream"*
  %7 = load %struct._IO_FILE*, %struct._IO_FILE** @stdout, align 8
  call void @_ZN2v88internal8OFStreamC2EP8_IO_FILE(%"class.v8::internal::OFStream"* nonnull %6, i8** getelementptr inbounds ([6 x i8*], [6 x i8*]* @_ZTTN2v88internal12StdoutStreamE, i64 0, i64 1), %struct._IO_FILE* %7) #16
  %8 = getelementptr inbounds %"class.v8::internal::StdoutStream", %"class.v8::internal::StdoutStream"* %3, i64 0, i32 0, i32 0, i32 0
  store i32 (...)** bitcast (i8** getelementptr inbounds ({ [5 x i8*], [5 x i8*] }, { [5 x i8*], [5 x i8*] }* @_ZTVN2v88internal12StdoutStreamE, i64 0, inrange i32 0, i64 3) to i32 (...)**), i32 (...)*** %8, align 8
  store i32 (...)** bitcast (i8** getelementptr inbounds ({ [5 x i8*], [5 x i8*] }, { [5 x i8*], [5 x i8*] }* @_ZTVN2v88internal12StdoutStreamE, i64 0, inrange i32 1, i64 3) to i32 (...)**), i32 (...)*** %5, align 8
  %9 = call %"class.v8::base::RecursiveMutex"* @_ZN2v88internal12StdoutStream14GetStdoutMutexEv() #16
  %10 = getelementptr inbounds %"class.v8::internal::StdoutStream", %"class.v8::internal::StdoutStream"* %3, i64 0, i32 1, i32 0
  store %"class.v8::base::RecursiveMutex"* %9, %"class.v8::base::RecursiveMutex"** %10, align 8
  call void @_ZN2v84base14RecursiveMutex4LockEv(%"class.v8::base::RecursiveMutex"* %9) #16
  %11 = bitcast %"class.v8::internal::StdoutStream"* %3 to %"class.std::__1::basic_ostream"*
  %12 = getelementptr inbounds %"class.v8::internal::compiler::LifetimePosition", %"class.v8::internal::compiler::LifetimePosition"* %0, i64 0, i32 0
  %13 = load i32, i32* %12, align 4
  %14 = call dereferenceable(160) %"class.std::__1::basic_ostream"* @_ZN2v88internal8compilerlsERNSt3__113basic_ostreamIcNS2_11char_traitsIcEEEENS1_16LifetimePositionE(%"class.std::__1::basic_ostream"* nonnull dereferenceable(160) %11, i32 %13) #16
  %15 = bitcast %"class.v8::internal::StdoutStream"* %3 to i8**
  %16 = load i8*, i8** %15, align 8
  %17 = getelementptr i8, i8* %16, i64 -24
  %18 = bitcast i8* %17 to i64*
  %19 = load i64, i64* %18, align 8
  %20 = getelementptr inbounds i8, i8* %4, i64 %19
  %21 = bitcast %"class.std::__1::locale"* %2 to i8*
  call void @llvm.lifetime.start.p0i8(i64 8, i8* nonnull %21) #16
  %22 = bitcast i8* %20 to %"class.std::__1::ios_base"*
  call void @_ZNKSt3__18ios_base6getlocEv(%"class.std::__1::locale"* nonnull sret %2, %"class.std::__1::ios_base"* %22) #16
  %23 = call %"class.std::__1::locale::facet"* @_ZNKSt3__16locale9use_facetERNS0_2idE(%"class.std::__1::locale"* nonnull %2, %"class.std::__1::locale::id"* nonnull dereferenceable(16) @_ZNSt3__15ctypeIcE2idE) #16
  %24 = bitcast %"class.std::__1::locale::facet"* %23 to %"class.std::__1::ctype"*
  %25 = bitcast %"class.std::__1::locale::facet"* %23 to i8 (%"class.std::__1::ctype"*, i8)***
  %26 = load i8 (%"class.std::__1::ctype"*, i8)**, i8 (%"class.std::__1::ctype"*, i8)*** %25, align 8
  %27 = getelementptr inbounds i8 (%"class.std::__1::ctype"*, i8)*, i8 (%"class.std::__1::ctype"*, i8)** %26, i64 7
  %28 = load i8 (%"class.std::__1::ctype"*, i8)*, i8 (%"class.std::__1::ctype"*, i8)** %27, align 8
  %29 = call signext i8 %28(%"class.std::__1::ctype"* %24, i8 signext 10) #16
  call void @_ZNSt3__16localeD1Ev(%"class.std::__1::locale"* nonnull %2) #16
  call void @llvm.lifetime.end.p0i8(i64 8, i8* nonnull %21) #16
  %30 = call dereferenceable(160) %"class.std::__1::basic_ostream"* @_ZNSt3__113basic_ostreamIcNS_11char_traitsIcEEE3putEc(%"class.std::__1::basic_ostream"* nonnull %11, i8 signext %29) #16
  %31 = call dereferenceable(160) %"class.std::__1::basic_ostream"* @_ZNSt3__113basic_ostreamIcNS_11char_traitsIcEEE5flushEv(%"class.std::__1::basic_ostream"* nonnull %11) #16
  %32 = bitcast %"class.v8::internal::StdoutStream"* %3 to i64*
  store i64 ptrtoint (i8** getelementptr inbounds ({ [5 x i8*], [5 x i8*] }, { [5 x i8*], [5 x i8*] }* @_ZTVN2v88internal12StdoutStreamE, i64 0, inrange i32 0, i64 3) to i64), i64* %32, align 8
  %33 = getelementptr inbounds %"class.v8::internal::StdoutStream", %"class.v8::internal::StdoutStream"* %3, i64 0, i32 2
  %34 = bitcast %"class.std::__1::basic_ios.base"* %33 to i64*
  store i64 ptrtoint (i8** getelementptr inbounds ({ [5 x i8*], [5 x i8*] }, { [5 x i8*], [5 x i8*] }* @_ZTVN2v88internal12StdoutStreamE, i64 0, inrange i32 1, i64 3) to i64), i64* %34, align 8
  %35 = load %"class.v8::base::RecursiveMutex"*, %"class.v8::base::RecursiveMutex"** %10, align 8
  call void @_ZN2v84base14RecursiveMutex6UnlockEv(%"class.v8::base::RecursiveMutex"* %35) #16
  store i64 ptrtoint (i8** getelementptr inbounds ({ [5 x i8*], [5 x i8*] }, { [5 x i8*], [5 x i8*] }* @_ZTCN2v88internal12StdoutStreamE0_NS0_8OFStreamE, i64 0, inrange i32 0, i64 3) to i64), i64* %32, align 8
  store i64 ptrtoint (i8** getelementptr inbounds ({ [5 x i8*], [5 x i8*] }, { [5 x i8*], [5 x i8*] }* @_ZTCN2v88internal12StdoutStreamE0_NS0_8OFStreamE, i64 0, inrange i32 1, i64 3) to i64), i64* %34, align 8
  %36 = getelementptr inbounds %"class.v8::internal::StdoutStream", %"class.v8::internal::StdoutStream"* %3, i64 0, i32 0, i32 1, i32 0
  call void @_ZNSt3__115basic_streambufIcNS_11char_traitsIcEEED2Ev(%"class.std::__1::basic_streambuf"* %36) #16
  call void @_ZNSt3__113basic_ostreamIcNS_11char_traitsIcEEED2Ev(%"class.std::__1::basic_ostream"* nonnull %11, i8** getelementptr inbounds ([6 x i8*], [6 x i8*]* @_ZTTN2v88internal12StdoutStreamE, i64 0, i64 2)) #16
  %37 = bitcast %"class.std::__1::basic_ios.base"* %33 to %"class.std::__1::basic_ios"*
  call void @_ZNSt3__19basic_iosIcNS_11char_traitsIcEEED2Ev(%"class.std::__1::basic_ios"* %37) #16
  call void @llvm.lifetime.end.p0i8(i64 240, i8* nonnull %4) #16
  ret void
}

; Function Attrs: inlinehint nounwind ssp uwtable
define linkonce_odr hidden void @_ZN2v88internal12StdoutStreamD1Ev(%"class.v8::internal::StdoutStream"*) unnamed_addr #5 comdat align 2 {
  %2 = bitcast %"class.v8::internal::StdoutStream"* %0 to i64*
  store i64 ptrtoint (i8** getelementptr inbounds ({ [5 x i8*], [5 x i8*] }, { [5 x i8*], [5 x i8*] }* @_ZTVN2v88internal12StdoutStreamE, i64 0, inrange i32 0, i64 3) to i64), i64* %2, align 8
  %3 = getelementptr inbounds %"class.v8::internal::StdoutStream", %"class.v8::internal::StdoutStream"* %0, i64 0, i32 2
  %4 = bitcast %"class.std::__1::basic_ios.base"* %3 to i64*
  store i64 ptrtoint (i8** getelementptr inbounds ({ [5 x i8*], [5 x i8*] }, { [5 x i8*], [5 x i8*] }* @_ZTVN2v88internal12StdoutStreamE, i64 0, inrange i32 1, i64 3) to i64), i64* %4, align 8
  %5 = getelementptr inbounds %"class.v8::internal::StdoutStream", %"class.v8::internal::StdoutStream"* %0, i64 0, i32 1, i32 0
  %6 = load %"class.v8::base::RecursiveMutex"*, %"class.v8::base::RecursiveMutex"** %5, align 8
  tail call void @_ZN2v84base14RecursiveMutex6UnlockEv(%"class.v8::base::RecursiveMutex"* %6) #16
  store i64 ptrtoint (i8** getelementptr inbounds ({ [5 x i8*], [5 x i8*] }, { [5 x i8*], [5 x i8*] }* @_ZTCN2v88internal12StdoutStreamE0_NS0_8OFStreamE, i64 0, inrange i32 0, i64 3) to i64), i64* %2, align 8
  store i64 ptrtoint (i8** getelementptr inbounds ({ [5 x i8*], [5 x i8*] }, { [5 x i8*], [5 x i8*] }* @_ZTCN2v88internal12StdoutStreamE0_NS0_8OFStreamE, i64 0, inrange i32 1, i64 3) to i64), i64* %4, align 8
  %7 = getelementptr inbounds %"class.v8::internal::StdoutStream", %"class.v8::internal::StdoutStream"* %0, i64 0, i32 0, i32 1, i32 0
  tail call void @_ZNSt3__115basic_streambufIcNS_11char_traitsIcEEED2Ev(%"class.std::__1::basic_streambuf"* %7) #16
  %8 = bitcast %"class.v8::internal::StdoutStream"* %0 to %"class.std::__1::basic_ostream"*
  tail call void @_ZNSt3__113basic_ostreamIcNS_11char_traitsIcEEED2Ev(%"class.std::__1::basic_ostream"* %8, i8** getelementptr inbounds ([6 x i8*], [6 x i8*]* @_ZTTN2v88internal12StdoutStreamE, i64 0, i64 2)) #16
  %9 = bitcast %"class.std::__1::basic_ios.base"* %3 to %"class.std::__1::basic_ios"*
  tail call void @_ZNSt3__19basic_iosIcNS_11char_traitsIcEEED2Ev(%"class.std::__1::basic_ios"* %9) #16
  ret void
}

; Function Attrs: nounwind ssp uwtable
define hidden dereferenceable(160) %"class.std::__1::basic_ostream"* @_ZN2v88internal8compilerlsERNSt3__113basic_ostreamIcNS2_11char_traitsIcEEEENS1_16LifetimePositionE(%"class.std::__1::basic_ostream"* returned dereferenceable(160), i32) local_unnamed_addr #0 {
  %3 = alloca i8, align 1
  %4 = alloca i8, align 1
  %5 = alloca i8, align 1
  %6 = alloca i8, align 1
  %7 = alloca i8, align 1
  call void @llvm.lifetime.start.p0i8(i64 1, i8* nonnull %7)
  store i8 64, i8* %7, align 1
  %8 = call dereferenceable(160) %"class.std::__1::basic_ostream"* @_ZNSt3__124__put_character_sequenceIcNS_11char_traitsIcEEEERNS_13basic_ostreamIT_T0_EES7_PKS4_m(%"class.std::__1::basic_ostream"* dereferenceable(160) %0, i8* nonnull %7, i64 1) #16
  call void @llvm.lifetime.end.p0i8(i64 1, i8* nonnull %7)
  %9 = sdiv i32 %1, 4
  %10 = call dereferenceable(160) %"class.std::__1::basic_ostream"* @_ZNSt3__113basic_ostreamIcNS_11char_traitsIcEEElsEi(%"class.std::__1::basic_ostream"* %8, i32 %9) #16
  %11 = and i32 %1, 2
  %12 = icmp eq i32 %11, 0
  br i1 %12, label %13, label %14

13:                                               ; preds = %2
  call void @llvm.lifetime.start.p0i8(i64 1, i8* nonnull %4)
  store i8 103, i8* %4, align 1
  br label %15

14:                                               ; preds = %2
  call void @llvm.lifetime.start.p0i8(i64 1, i8* nonnull %3)
  store i8 105, i8* %3, align 1
  br label %15

15:                                               ; preds = %14, %13
  %16 = phi i8* [ %3, %14 ], [ %4, %13 ]
  %17 = call dereferenceable(160) %"class.std::__1::basic_ostream"* @_ZNSt3__124__put_character_sequenceIcNS_11char_traitsIcEEEERNS_13basic_ostreamIT_T0_EES7_PKS4_m(%"class.std::__1::basic_ostream"* dereferenceable(160) %0, i8* nonnull %16, i64 1) #16
  call void @llvm.lifetime.end.p0i8(i64 1, i8* nonnull %16)
  %18 = and i32 %1, 1
  %19 = icmp eq i32 %18, 0
  br i1 %19, label %20, label %21

20:                                               ; preds = %15
  call void @llvm.lifetime.start.p0i8(i64 1, i8* nonnull %5)
  store i8 115, i8* %5, align 1
  br label %22

21:                                               ; preds = %15
  call void @llvm.lifetime.start.p0i8(i64 1, i8* nonnull %6)
  store i8 101, i8* %6, align 1
  br label %22

22:                                               ; preds = %21, %20
  %23 = phi i8* [ %6, %21 ], [ %5, %20 ]
  %24 = call dereferenceable(160) %"class.std::__1::basic_ostream"* @_ZNSt3__124__put_character_sequenceIcNS_11char_traitsIcEEEERNS_13basic_ostreamIT_T0_EES7_PKS4_m(%"class.std::__1::basic_ostream"* dereferenceable(160) %0, i8* nonnull %23, i64 1) #16
  call void @llvm.lifetime.end.p0i8(i64 1, i8* nonnull %23)
  ret %"class.std::__1::basic_ostream"* %0
}

declare dereferenceable(160) %"class.std::__1::basic_ostream"* @_ZNSt3__113basic_ostreamIcNS_11char_traitsIcEEElsEi(%"class.std::__1::basic_ostream"*, i32) local_unnamed_addr #6

; Function Attrs: nofree norecurse nounwind ssp uwtable writeonly
define hidden void @_ZN2v88internal8compiler9LiveRangeC2EiNS0_21MachineRepresentationEPNS1_17TopLevelLiveRangeE(%"class.v8::internal::compiler::LiveRange"* nocapture, i32, i8 zeroext, %"class.v8::internal::compiler::TopLevelLiveRange"*) unnamed_addr #7 align 2 {
  %5 = getelementptr inbounds %"class.v8::internal::compiler::LiveRange", %"class.v8::internal::compiler::LiveRange"* %0, i64 0, i32 0
  store i32 %1, i32* %5, align 8
  %6 = getelementptr inbounds %"class.v8::internal::compiler::LiveRange", %"class.v8::internal::compiler::LiveRange"* %0, i64 0, i32 1
  %7 = getelementptr inbounds %"class.v8::internal::compiler::LiveRange", %"class.v8::internal::compiler::LiveRange"* %0, i64 0, i32 5
  %8 = getelementptr inbounds i32, i32* %6, i64 1
  %9 = bitcast i32* %8 to i8*
  call void @llvm.memset.p0i8.i64(i8* align 4 %9, i8 0, i64 24, i1 false)
  store %"class.v8::internal::compiler::TopLevelLiveRange"* %3, %"class.v8::internal::compiler::TopLevelLiveRange"** %7, align 8
  %10 = getelementptr inbounds %"class.v8::internal::compiler::LiveRange", %"class.v8::internal::compiler::LiveRange"* %0, i64 0, i32 6
  %11 = getelementptr inbounds %"class.v8::internal::compiler::LiveRange", %"class.v8::internal::compiler::LiveRange"* %0, i64 0, i32 11, i32 0
  %12 = bitcast %"class.v8::internal::compiler::LiveRange"** %10 to i8*
  call void @llvm.memset.p0i8.i64(i8* align 8 %12, i8 0, i64 40, i1 false)
  store i32 -1, i32* %11, align 4
  %13 = zext i8 %2 to i32
  %14 = shl nuw nsw i32 %13, 13
  %15 = or i32 %14, 134221824
  store i32 %15, i32* %6, align 4
  ret void
}

; Function Attrs: nounwind ssp uwtable
define hidden void @_ZNK2v88internal8compiler9LiveRange15VerifyPositionsEv(%"class.v8::internal::compiler::LiveRange"* nocapture readonly) local_unnamed_addr #0 align 2 {
  %2 = getelementptr inbounds %"class.v8::internal::compiler::LiveRange", %"class.v8::internal::compiler::LiveRange"* %0, i64 0, i32 3
  %3 = load %"class.v8::internal::compiler::UseInterval"*, %"class.v8::internal::compiler::UseInterval"** %2, align 8
  %4 = getelementptr inbounds %"class.v8::internal::compiler::LiveRange", %"class.v8::internal::compiler::LiveRange"* %0, i64 0, i32 4
  %5 = load %"class.v8::internal::compiler::UsePosition"*, %"class.v8::internal::compiler::UsePosition"** %4, align 8
  %6 = icmp eq %"class.v8::internal::compiler::UsePosition"* %5, null
  br i1 %6, label %11, label %7

7:                                                ; preds = %1
  %8 = getelementptr inbounds %"class.v8::internal::compiler::UseInterval", %"class.v8::internal::compiler::UseInterval"* %3, i64 0, i32 0, i32 0
  %9 = load i32, i32* %8, align 8
  %10 = getelementptr inbounds %"class.v8::internal::compiler::LiveRange", %"class.v8::internal::compiler::LiveRange"* %0, i64 0, i32 2
  br label %12

11:                                               ; preds = %44, %1
  ret void

12:                                               ; preds = %7, %44
  %13 = phi %"class.v8::internal::compiler::UsePosition"* [ %5, %7 ], [ %46, %44 ]
  %14 = phi %"class.v8::internal::compiler::UseInterval"* [ %3, %7 ], [ %29, %44 ]
  %15 = getelementptr inbounds %"class.v8::internal::compiler::UsePosition", %"class.v8::internal::compiler::UsePosition"* %13, i64 0, i32 3, i32 0
  %16 = load i32, i32* %15, align 8
  %17 = icmp sgt i32 %9, %16
  br i1 %17, label %18, label %19, !prof !2

18:                                               ; preds = %12
  tail call void (i8*, ...) @_Z8V8_FatalPKcz(i8* getelementptr inbounds ([18 x i8], [18 x i8]* @.str.1, i64 0, i64 0), i8* getelementptr inbounds ([22 x i8], [22 x i8]* @.str.2, i64 0, i64 0)) #17
  unreachable

19:                                               ; preds = %12
  %20 = load %"class.v8::internal::compiler::UseInterval"*, %"class.v8::internal::compiler::UseInterval"** %10, align 8
  %21 = getelementptr inbounds %"class.v8::internal::compiler::UseInterval", %"class.v8::internal::compiler::UseInterval"* %20, i64 0, i32 1, i32 0
  %22 = load i32, i32* %21, align 4
  %23 = icmp sgt i32 %16, %22
  br i1 %23, label %24, label %25, !prof !2

24:                                               ; preds = %19
  tail call void (i8*, ...) @_Z8V8_FatalPKcz(i8* getelementptr inbounds ([18 x i8], [18 x i8]* @.str.1, i64 0, i64 0), i8* getelementptr inbounds ([20 x i8], [20 x i8]* @.str.3, i64 0, i64 0)) #17
  unreachable

25:                                               ; preds = %19
  %26 = icmp eq %"class.v8::internal::compiler::UseInterval"* %14, null
  br i1 %26, label %27, label %28, !prof !2

27:                                               ; preds = %25
  tail call void (i8*, ...) @_Z8V8_FatalPKcz(i8* getelementptr inbounds ([18 x i8], [18 x i8]* @.str.1, i64 0, i64 0), i8* getelementptr inbounds ([22 x i8], [22 x i8]* @.str.4, i64 0, i64 0)) #17
  unreachable

28:                                               ; preds = %25, %39
  %29 = phi %"class.v8::internal::compiler::UseInterval"* [ %41, %39 ], [ %14, %25 ]
  %30 = getelementptr inbounds %"class.v8::internal::compiler::UseInterval", %"class.v8::internal::compiler::UseInterval"* %29, i64 0, i32 0, i32 0
  %31 = load i32, i32* %30, align 4
  %32 = icmp sle i32 %31, %16
  %33 = getelementptr inbounds %"class.v8::internal::compiler::UseInterval", %"class.v8::internal::compiler::UseInterval"* %29, i64 0, i32 1, i32 0
  %34 = load i32, i32* %33, align 4
  %35 = icmp sgt i32 %34, %16
  %36 = and i1 %32, %35
  %37 = icmp eq i32 %34, %16
  %38 = or i1 %36, %37
  br i1 %38, label %44, label %39

39:                                               ; preds = %28
  %40 = getelementptr inbounds %"class.v8::internal::compiler::UseInterval", %"class.v8::internal::compiler::UseInterval"* %29, i64 0, i32 2
  %41 = load %"class.v8::internal::compiler::UseInterval"*, %"class.v8::internal::compiler::UseInterval"** %40, align 8
  %42 = icmp eq %"class.v8::internal::compiler::UseInterval"* %41, null
  br i1 %42, label %43, label %28, !prof !2

43:                                               ; preds = %39
  tail call void (i8*, ...) @_Z8V8_FatalPKcz(i8* getelementptr inbounds ([18 x i8], [18 x i8]* @.str.1, i64 0, i64 0), i8* getelementptr inbounds ([22 x i8], [22 x i8]* @.str.4, i64 0, i64 0)) #17
  unreachable

44:                                               ; preds = %28
  %45 = getelementptr inbounds %"class.v8::internal::compiler::UsePosition", %"class.v8::internal::compiler::UsePosition"* %13, i64 0, i32 2
  %46 = load %"class.v8::internal::compiler::UsePosition"*, %"class.v8::internal::compiler::UsePosition"** %45, align 8
  %47 = icmp eq %"class.v8::internal::compiler::UsePosition"* %46, null
  br i1 %47, label %11, label %12
}

; Function Attrs: norecurse nounwind readonly ssp uwtable
define hidden void @_ZNK2v88internal8compiler9LiveRange15VerifyIntervalsEv(%"class.v8::internal::compiler::LiveRange"* nocapture) local_unnamed_addr #2 align 2 {
  %2 = getelementptr inbounds %"class.v8::internal::compiler::LiveRange", %"class.v8::internal::compiler::LiveRange"* %0, i64 0, i32 3
  %3 = load %"class.v8::internal::compiler::UseInterval"*, %"class.v8::internal::compiler::UseInterval"** %2, align 8
  br label %4

4:                                                ; preds = %4, %1
  %5 = phi %"class.v8::internal::compiler::UseInterval"* [ %3, %1 ], [ %7, %4 ]
  %6 = getelementptr inbounds %"class.v8::internal::compiler::UseInterval", %"class.v8::internal::compiler::UseInterval"* %5, i64 0, i32 2
  %7 = load %"class.v8::internal::compiler::UseInterval"*, %"class.v8::internal::compiler::UseInterval"** %6, align 8
  %8 = icmp eq %"class.v8::internal::compiler::UseInterval"* %7, null
  br i1 %8, label %9, label %4

9:                                                ; preds = %4
  ret void
}

; Function Attrs: nofree norecurse nounwind ssp uwtable
define hidden void @_ZN2v88internal8compiler9LiveRange21set_assigned_registerEi(%"class.v8::internal::compiler::LiveRange"* nocapture, i32) local_unnamed_addr #3 align 2 {
  %3 = getelementptr inbounds %"class.v8::internal::compiler::LiveRange", %"class.v8::internal::compiler::LiveRange"* %0, i64 0, i32 1
  %4 = load i32, i32* %3, align 4
  %5 = and i32 %4, -8065
  %6 = shl i32 %1, 7
  %7 = or i32 %5, %6
  store i32 %7, i32* %3, align 4
  ret void
}

; Function Attrs: nofree norecurse nounwind ssp uwtable
define hidden void @_ZN2v88internal8compiler9LiveRange21UnsetAssignedRegisterEv(%"class.v8::internal::compiler::LiveRange"* nocapture) local_unnamed_addr #3 align 2 {
  %2 = getelementptr inbounds %"class.v8::internal::compiler::LiveRange", %"class.v8::internal::compiler::LiveRange"* %0, i64 0, i32 1
  %3 = load i32, i32* %2, align 4
  %4 = and i32 %3, -8065
  %5 = or i32 %4, 4096
  store i32 %5, i32* %2, align 4
  ret void
}

; Function Attrs: nofree norecurse nounwind ssp uwtable
define hidden void @_ZN2v88internal8compiler9LiveRange12AttachToNextEv(%"class.v8::internal::compiler::LiveRange"* nocapture) local_unnamed_addr #3 align 2 {
  %2 = getelementptr inbounds %"class.v8::internal::compiler::LiveRange", %"class.v8::internal::compiler::LiveRange"* %0, i64 0, i32 2
  %3 = load %"class.v8::internal::compiler::UseInterval"*, %"class.v8::internal::compiler::UseInterval"** %2, align 8
  %4 = getelementptr inbounds %"class.v8::internal::compiler::LiveRange", %"class.v8::internal::compiler::LiveRange"* %0, i64 0, i32 6
  %5 = load %"class.v8::internal::compiler::LiveRange"*, %"class.v8::internal::compiler::LiveRange"** %4, align 8
  %6 = getelementptr inbounds %"class.v8::internal::compiler::LiveRange", %"class.v8::internal::compiler::LiveRange"* %5, i64 0, i32 3
  %7 = bitcast %"class.v8::internal::compiler::UseInterval"** %6 to i64*
  %8 = load i64, i64* %7, align 8
  %9 = getelementptr inbounds %"class.v8::internal::compiler::UseInterval", %"class.v8::internal::compiler::UseInterval"* %3, i64 0, i32 2
  %10 = bitcast %"class.v8::internal::compiler::UseInterval"** %9 to i64*
  store i64 %8, i64* %10, align 8
  %11 = load %"class.v8::internal::compiler::LiveRange"*, %"class.v8::internal::compiler::LiveRange"** %4, align 8
  %12 = getelementptr inbounds %"class.v8::internal::compiler::LiveRange", %"class.v8::internal::compiler::LiveRange"* %11, i64 0, i32 3
  store %"class.v8::internal::compiler::UseInterval"* null, %"class.v8::internal::compiler::UseInterval"** %12, align 8
  %13 = load %"class.v8::internal::compiler::LiveRange"*, %"class.v8::internal::compiler::LiveRange"** %4, align 8
  %14 = getelementptr inbounds %"class.v8::internal::compiler::LiveRange", %"class.v8::internal::compiler::LiveRange"* %13, i64 0, i32 2
  %15 = bitcast %"class.v8::internal::compiler::UseInterval"** %14 to i64*
  %16 = load i64, i64* %15, align 8
  %17 = bitcast %"class.v8::internal::compiler::UseInterval"** %2 to i64*
  store i64 %16, i64* %17, align 8
  store %"class.v8::internal::compiler::UseInterval"* null, %"class.v8::internal::compiler::UseInterval"** %14, align 8
  %18 = getelementptr inbounds %"class.v8::internal::compiler::LiveRange", %"class.v8::internal::compiler::LiveRange"* %0, i64 0, i32 4
  %19 = load %"class.v8::internal::compiler::UsePosition"*, %"class.v8::internal::compiler::UsePosition"** %18, align 8
  %20 = icmp eq %"class.v8::internal::compiler::UsePosition"* %19, null
  br i1 %20, label %21, label %27

21:                                               ; preds = %1
  %22 = load %"class.v8::internal::compiler::LiveRange"*, %"class.v8::internal::compiler::LiveRange"** %4, align 8
  %23 = getelementptr inbounds %"class.v8::internal::compiler::LiveRange", %"class.v8::internal::compiler::LiveRange"* %22, i64 0, i32 4
  %24 = bitcast %"class.v8::internal::compiler::UsePosition"** %23 to i64*
  %25 = load i64, i64* %24, align 8
  %26 = bitcast %"class.v8::internal::compiler::UsePosition"** %18 to i64*
  store i64 %25, i64* %26, align 8
  br label %40

27:                                               ; preds = %1, %27
  %28 = phi %"class.v8::internal::compiler::UsePosition"* [ %30, %27 ], [ %19, %1 ]
  %29 = getelementptr inbounds %"class.v8::internal::compiler::UsePosition", %"class.v8::internal::compiler::UsePosition"* %28, i64 0, i32 2
  %30 = load %"class.v8::internal::compiler::UsePosition"*, %"class.v8::internal::compiler::UsePosition"** %29, align 8
  %31 = icmp eq %"class.v8::internal::compiler::UsePosition"* %30, null
  br i1 %31, label %32, label %27

32:                                               ; preds = %27
  %33 = getelementptr inbounds %"class.v8::internal::compiler::UsePosition", %"class.v8::internal::compiler::UsePosition"* %28, i64 0, i32 2
  %34 = load %"class.v8::internal::compiler::LiveRange"*, %"class.v8::internal::compiler::LiveRange"** %4, align 8
  %35 = getelementptr inbounds %"class.v8::internal::compiler::LiveRange", %"class.v8::internal::compiler::LiveRange"* %34, i64 0, i32 4
  %36 = bitcast %"class.v8::internal::compiler::UsePosition"** %35 to i64*
  %37 = load i64, i64* %36, align 8
  %38 = bitcast %"class.v8::internal::compiler::UsePosition"** %33 to i64*
  store i64 %37, i64* %38, align 8
  %39 = load %"class.v8::internal::compiler::LiveRange"*, %"class.v8::internal::compiler::LiveRange"** %4, align 8
  br label %40

40:                                               ; preds = %32, %21
  %41 = phi %"class.v8::internal::compiler::LiveRange"* [ %39, %32 ], [ %22, %21 ]
  %42 = getelementptr inbounds %"class.v8::internal::compiler::LiveRange", %"class.v8::internal::compiler::LiveRange"* %41, i64 0, i32 4
  store %"class.v8::internal::compiler::UsePosition"* null, %"class.v8::internal::compiler::UsePosition"** %42, align 8
  %43 = load %"class.v8::internal::compiler::LiveRange"*, %"class.v8::internal::compiler::LiveRange"** %4, align 8
  %44 = getelementptr inbounds %"class.v8::internal::compiler::LiveRange", %"class.v8::internal::compiler::LiveRange"* %43, i64 0, i32 6
  %45 = bitcast %"class.v8::internal::compiler::LiveRange"** %44 to i64*
  %46 = load i64, i64* %45, align 8
  %47 = bitcast %"class.v8::internal::compiler::LiveRange"** %4 to i64*
  store i64 %46, i64* %47, align 8
  store %"class.v8::internal::compiler::LiveRange"* null, %"class.v8::internal::compiler::LiveRange"** %44, align 8
  ret void
}

; Function Attrs: nofree norecurse nounwind ssp uwtable
define hidden void @_ZN2v88internal8compiler9LiveRange7UnspillEv(%"class.v8::internal::compiler::LiveRange"* nocapture) local_unnamed_addr #3 align 2 {
  %2 = getelementptr inbounds %"class.v8::internal::compiler::LiveRange", %"class.v8::internal::compiler::LiveRange"* %0, i64 0, i32 1
  %3 = load i32, i32* %2, align 4
  %4 = and i32 %3, -8066
  %5 = or i32 %4, 4096
  store i32 %5, i32* %2, align 4
  ret void
}

; Function Attrs: nofree norecurse nounwind ssp uwtable
define hidden void @_ZN2v88internal8compiler9LiveRange5SpillEv(%"class.v8::internal::compiler::LiveRange"* nocapture) local_unnamed_addr #3 align 2 {
  %2 = getelementptr inbounds %"class.v8::internal::compiler::LiveRange", %"class.v8::internal::compiler::LiveRange"* %0, i64 0, i32 1
  %3 = load i32, i32* %2, align 4
  %4 = and i32 %3, -8066
  %5 = or i32 %4, 4097
  store i32 %5, i32* %2, align 4
  ret void
}

; Function Attrs: norecurse nounwind readonly ssp uwtable
define hidden i32 @_ZNK2v88internal8compiler9LiveRange4kindEv(%"class.v8::internal::compiler::LiveRange"* nocapture readonly) local_unnamed_addr #2 align 2 {
  %2 = getelementptr inbounds %"class.v8::internal::compiler::LiveRange", %"class.v8::internal::compiler::LiveRange"* %0, i64 0, i32 1
  %3 = load i32, i32* %2, align 4
  %4 = lshr i32 %3, 13
  %5 = trunc i32 %4 to i8
  %6 = icmp ugt i8 %5, 11
  %7 = zext i1 %6 to i32
  ret i32 %7
}

; Function Attrs: nounwind ssp uwtable
define hidden %"class.v8::internal::compiler::UsePosition"* @_ZN2v88internal8compiler9LiveRange17FirstHintPositionEPi(%"class.v8::internal::compiler::LiveRange"* nocapture, i32* nocapture) local_unnamed_addr #0 align 2 {
  %3 = getelementptr inbounds %"class.v8::internal::compiler::LiveRange", %"class.v8::internal::compiler::LiveRange"* %0, i64 0, i32 4
  %4 = load %"class.v8::internal::compiler::UsePosition"*, %"class.v8::internal::compiler::UsePosition"** %3, align 8
  %5 = icmp eq %"class.v8::internal::compiler::UsePosition"* %4, null
  %6 = ptrtoint %"class.v8::internal::compiler::UsePosition"* %4 to i64
  br i1 %5, label %78, label %7

7:                                                ; preds = %2
  %8 = getelementptr inbounds %"class.v8::internal::compiler::LiveRange", %"class.v8::internal::compiler::LiveRange"* %0, i64 0, i32 9
  %9 = load %"class.v8::internal::compiler::UsePosition"*, %"class.v8::internal::compiler::UsePosition"** %8, align 8
  %10 = icmp eq %"class.v8::internal::compiler::UsePosition"* %9, null
  br i1 %10, label %76, label %11

11:                                               ; preds = %7
  %12 = getelementptr inbounds %"class.v8::internal::compiler::UsePosition", %"class.v8::internal::compiler::UsePosition"* %9, i64 0, i32 3, i32 0
  %13 = load i32, i32* %12, align 8
  %14 = getelementptr inbounds %"class.v8::internal::compiler::UsePosition", %"class.v8::internal::compiler::UsePosition"* %4, i64 0, i32 3, i32 0
  %15 = load i32, i32* %14, align 8
  %16 = icmp slt i32 %13, %15
  br i1 %16, label %17, label %20

17:                                               ; preds = %11
  %18 = bitcast %"class.v8::internal::compiler::UsePosition"** %8 to i64*
  store i64 %6, i64* %18, align 8
  %19 = load i32, i32* %14, align 8
  br label %20

20:                                               ; preds = %17, %11
  %21 = phi %"class.v8::internal::compiler::UsePosition"* [ %4, %17 ], [ %9, %11 ]
  %22 = phi i32 [ %19, %17 ], [ %13, %11 ]
  %23 = getelementptr inbounds %"class.v8::internal::compiler::LiveRange", %"class.v8::internal::compiler::LiveRange"* %0, i64 0, i32 2
  %24 = load %"class.v8::internal::compiler::UseInterval"*, %"class.v8::internal::compiler::UseInterval"** %23, align 8
  %25 = getelementptr inbounds %"class.v8::internal::compiler::UseInterval", %"class.v8::internal::compiler::UseInterval"* %24, i64 0, i32 1, i32 0
  %26 = load i32, i32* %25, align 4
  %27 = icmp sgt i32 %22, %26
  br i1 %27, label %28, label %29

28:                                               ; preds = %20
  store %"class.v8::internal::compiler::UsePosition"* null, %"class.v8::internal::compiler::UsePosition"** %8, align 8
  br label %76

29:                                               ; preds = %20, %70
  %30 = phi %"class.v8::internal::compiler::UsePosition"* [ %73, %70 ], [ %21, %20 ]
  %31 = phi i1 [ %71, %70 ], [ false, %20 ]
  %32 = getelementptr inbounds %"class.v8::internal::compiler::UsePosition", %"class.v8::internal::compiler::UsePosition"* %30, i64 0, i32 1
  %33 = load i8*, i8** %32, align 8
  %34 = icmp eq i8* %33, null
  br i1 %34, label %61, label %35

35:                                               ; preds = %29
  %36 = getelementptr inbounds %"class.v8::internal::compiler::UsePosition", %"class.v8::internal::compiler::UsePosition"* %30, i64 0, i32 4
  %37 = load i32, i32* %36, align 4
  %38 = lshr i32 %37, 2
  %39 = trunc i32 %38 to i8
  %40 = and i8 %39, 7
  switch i8 %40, label %60 [
    i8 0, label %61
    i8 4, label %61
    i8 2, label %41
    i8 1, label %49
    i8 3, label %54
  ]

41:                                               ; preds = %35
  %42 = getelementptr inbounds i8, i8* %33, i64 28
  %43 = bitcast i8* %42 to i32*
  %44 = load i32, i32* %43, align 4
  %45 = lshr i32 %44, 6
  %46 = and i32 %45, 63
  %47 = icmp eq i32 %46, 32
  br i1 %47, label %61, label %48

48:                                               ; preds = %41
  store i32 %46, i32* %1, align 4
  br i1 %31, label %78, label %76

49:                                               ; preds = %35
  %50 = bitcast i8* %33 to i64*
  %51 = load i64, i64* %50, align 8
  %52 = ashr i64 %51, 35
  %53 = trunc i64 %52 to i32
  store i32 %53, i32* %1, align 4
  br i1 %31, label %78, label %76

54:                                               ; preds = %35
  %55 = getelementptr inbounds i8, i8* %33, i64 48
  %56 = bitcast i8* %55 to i32*
  %57 = load i32, i32* %56, align 8
  %58 = icmp eq i32 %57, 32
  br i1 %58, label %61, label %59

59:                                               ; preds = %54
  store i32 %57, i32* %1, align 4
  br i1 %31, label %78, label %76

60:                                               ; preds = %35
  tail call void (i8*, ...) @_Z8V8_FatalPKcz(i8* getelementptr inbounds ([17 x i8], [17 x i8]* @.str, i64 0, i64 0)) #17
  unreachable

61:                                               ; preds = %29, %35, %35, %41, %54
  br i1 %31, label %70, label %62

62:                                               ; preds = %61
  %63 = getelementptr inbounds %"class.v8::internal::compiler::UsePosition", %"class.v8::internal::compiler::UsePosition"* %30, i64 0, i32 4
  %64 = load i32, i32* %63, align 4
  %65 = lshr i32 %64, 2
  %66 = trunc i32 %65 to i8
  %67 = and i8 %66, 6
  %68 = or i8 %67, 1
  %69 = icmp eq i8 %68, 3
  br label %70

70:                                               ; preds = %62, %61
  %71 = phi i1 [ true, %61 ], [ %69, %62 ]
  %72 = getelementptr inbounds %"class.v8::internal::compiler::UsePosition", %"class.v8::internal::compiler::UsePosition"* %30, i64 0, i32 2
  %73 = load %"class.v8::internal::compiler::UsePosition"*, %"class.v8::internal::compiler::UsePosition"** %72, align 8
  %74 = icmp eq %"class.v8::internal::compiler::UsePosition"* %73, null
  br i1 %74, label %75, label %29

75:                                               ; preds = %70
  br i1 %71, label %78, label %76

76:                                               ; preds = %7, %28, %48, %49, %59, %75
  %77 = phi %"class.v8::internal::compiler::UsePosition"* [ null, %75 ], [ %30, %59 ], [ %30, %49 ], [ %30, %48 ], [ null, %28 ], [ null, %7 ]
  store %"class.v8::internal::compiler::UsePosition"* %77, %"class.v8::internal::compiler::UsePosition"** %8, align 8
  br label %78

78:                                               ; preds = %48, %49, %59, %75, %76, %2
  %79 = phi %"class.v8::internal::compiler::UsePosition"* [ null, %2 ], [ %77, %76 ], [ null, %75 ], [ %30, %59 ], [ %30, %49 ], [ %30, %48 ]
  ret %"class.v8::internal::compiler::UsePosition"* %79
}

; Function Attrs: nounwind ssp uwtable
define hidden %"class.v8::internal::compiler::UsePosition"* @_ZNK2v88internal8compiler9LiveRange15NextUsePositionENS1_16LifetimePositionE(%"class.v8::internal::compiler::LiveRange"* nocapture, i32) local_unnamed_addr #0 align 2 {
  %3 = getelementptr inbounds %"class.v8::internal::compiler::LiveRange", %"class.v8::internal::compiler::LiveRange"* %0, i64 0, i32 8
  %4 = load %"class.v8::internal::compiler::UsePosition"*, %"class.v8::internal::compiler::UsePosition"** %3, align 8
  %5 = icmp eq %"class.v8::internal::compiler::UsePosition"* %4, null
  br i1 %5, label %10, label %6

6:                                                ; preds = %2
  %7 = getelementptr inbounds %"class.v8::internal::compiler::UsePosition", %"class.v8::internal::compiler::UsePosition"* %4, i64 0, i32 3, i32 0
  %8 = load i32, i32* %7, align 8
  %9 = icmp sgt i32 %8, %1
  br i1 %9, label %10, label %14

10:                                               ; preds = %6, %2
  %11 = getelementptr inbounds %"class.v8::internal::compiler::LiveRange", %"class.v8::internal::compiler::LiveRange"* %0, i64 0, i32 4
  %12 = load %"class.v8::internal::compiler::UsePosition"*, %"class.v8::internal::compiler::UsePosition"** %11, align 8
  %13 = icmp eq %"class.v8::internal::compiler::UsePosition"* %12, null
  br i1 %13, label %25, label %14

14:                                               ; preds = %6, %10
  %15 = phi %"class.v8::internal::compiler::UsePosition"* [ %4, %6 ], [ %12, %10 ]
  br label %16

16:                                               ; preds = %14, %21
  %17 = phi %"class.v8::internal::compiler::UsePosition"* [ %23, %21 ], [ %15, %14 ]
  %18 = getelementptr inbounds %"class.v8::internal::compiler::UsePosition", %"class.v8::internal::compiler::UsePosition"* %17, i64 0, i32 3, i32 0
  %19 = load i32, i32* %18, align 8
  %20 = icmp slt i32 %19, %1
  br i1 %20, label %21, label %25

21:                                               ; preds = %16
  %22 = getelementptr inbounds %"class.v8::internal::compiler::UsePosition", %"class.v8::internal::compiler::UsePosition"* %17, i64 0, i32 2
  %23 = load %"class.v8::internal::compiler::UsePosition"*, %"class.v8::internal::compiler::UsePosition"** %22, align 8
  %24 = icmp eq %"class.v8::internal::compiler::UsePosition"* %23, null
  br i1 %24, label %25, label %16

25:                                               ; preds = %16, %21, %10
  %26 = phi %"class.v8::internal::compiler::UsePosition"* [ null, %10 ], [ null, %21 ], [ %17, %16 ]
  store %"class.v8::internal::compiler::UsePosition"* %26, %"class.v8::internal::compiler::UsePosition"** %3, align 8
  ret %"class.v8::internal::compiler::UsePosition"* %26
}

; Function Attrs: nofree norecurse nounwind ssp uwtable
define hidden %"class.v8::internal::compiler::UsePosition"* @_ZNK2v88internal8compiler9LiveRange35NextUsePositionRegisterIsBeneficialENS1_16LifetimePositionE(%"class.v8::internal::compiler::LiveRange"* nocapture, i32) local_unnamed_addr #3 align 2 {
  %3 = getelementptr inbounds %"class.v8::internal::compiler::LiveRange", %"class.v8::internal::compiler::LiveRange"* %0, i64 0, i32 8
  %4 = load %"class.v8::internal::compiler::UsePosition"*, %"class.v8::internal::compiler::UsePosition"** %3, align 8
  %5 = icmp eq %"class.v8::internal::compiler::UsePosition"* %4, null
  br i1 %5, label %10, label %6

6:                                                ; preds = %2
  %7 = getelementptr inbounds %"class.v8::internal::compiler::UsePosition", %"class.v8::internal::compiler::UsePosition"* %4, i64 0, i32 3, i32 0
  %8 = load i32, i32* %7, align 8
  %9 = icmp sgt i32 %8, %1
  br i1 %9, label %10, label %14

10:                                               ; preds = %6, %2
  %11 = getelementptr inbounds %"class.v8::internal::compiler::LiveRange", %"class.v8::internal::compiler::LiveRange"* %0, i64 0, i32 4
  %12 = load %"class.v8::internal::compiler::UsePosition"*, %"class.v8::internal::compiler::UsePosition"** %11, align 8
  %13 = icmp eq %"class.v8::internal::compiler::UsePosition"* %12, null
  br i1 %13, label %25, label %14

14:                                               ; preds = %10, %6
  %15 = phi %"class.v8::internal::compiler::UsePosition"* [ %4, %6 ], [ %12, %10 ]
  br label %16

16:                                               ; preds = %14, %21
  %17 = phi %"class.v8::internal::compiler::UsePosition"* [ %23, %21 ], [ %15, %14 ]
  %18 = getelementptr inbounds %"class.v8::internal::compiler::UsePosition", %"class.v8::internal::compiler::UsePosition"* %17, i64 0, i32 3, i32 0
  %19 = load i32, i32* %18, align 8
  %20 = icmp slt i32 %19, %1
  br i1 %20, label %21, label %26

21:                                               ; preds = %16
  %22 = getelementptr inbounds %"class.v8::internal::compiler::UsePosition", %"class.v8::internal::compiler::UsePosition"* %17, i64 0, i32 2
  %23 = load %"class.v8::internal::compiler::UsePosition"*, %"class.v8::internal::compiler::UsePosition"** %22, align 8
  %24 = icmp eq %"class.v8::internal::compiler::UsePosition"* %23, null
  br i1 %24, label %25, label %16

25:                                               ; preds = %21, %10
  store %"class.v8::internal::compiler::UsePosition"* null, %"class.v8::internal::compiler::UsePosition"** %3, align 8
  br label %37

26:                                               ; preds = %16
  store %"class.v8::internal::compiler::UsePosition"* %17, %"class.v8::internal::compiler::UsePosition"** %3, align 8
  br label %27

27:                                               ; preds = %26, %33
  %28 = phi %"class.v8::internal::compiler::UsePosition"* [ %35, %33 ], [ %17, %26 ]
  %29 = getelementptr inbounds %"class.v8::internal::compiler::UsePosition", %"class.v8::internal::compiler::UsePosition"* %28, i64 0, i32 4
  %30 = load i32, i32* %29, align 4
  %31 = and i32 %30, 32
  %32 = icmp eq i32 %31, 0
  br i1 %32, label %33, label %37

33:                                               ; preds = %27
  %34 = getelementptr inbounds %"class.v8::internal::compiler::UsePosition", %"class.v8::internal::compiler::UsePosition"* %28, i64 0, i32 2
  %35 = load %"class.v8::internal::compiler::UsePosition"*, %"class.v8::internal::compiler::UsePosition"** %34, align 8
  %36 = icmp eq %"class.v8::internal::compiler::UsePosition"* %35, null
  br i1 %36, label %37, label %27

37:                                               ; preds = %27, %33, %25
  %38 = phi %"class.v8::internal::compiler::UsePosition"* [ null, %25 ], [ null, %33 ], [ %28, %27 ]
  ret %"class.v8::internal::compiler::UsePosition"* %38
}

; Function Attrs: nofree norecurse nounwind ssp uwtable
define hidden i32 @_ZNK2v88internal8compiler9LiveRange40NextLifetimePositionRegisterIsBeneficialERKNS1_16LifetimePositionE(%"class.v8::internal::compiler::LiveRange"* nocapture, %"class.v8::internal::compiler::LifetimePosition"* nocapture readonly dereferenceable(4)) local_unnamed_addr #3 align 2 {
  %3 = getelementptr inbounds %"class.v8::internal::compiler::LifetimePosition", %"class.v8::internal::compiler::LifetimePosition"* %1, i64 0, i32 0
  %4 = load i32, i32* %3, align 4
  %5 = getelementptr inbounds %"class.v8::internal::compiler::LiveRange", %"class.v8::internal::compiler::LiveRange"* %0, i64 0, i32 8
  %6 = load %"class.v8::internal::compiler::UsePosition"*, %"class.v8::internal::compiler::UsePosition"** %5, align 8
  %7 = icmp eq %"class.v8::internal::compiler::UsePosition"* %6, null
  br i1 %7, label %12, label %8

8:                                                ; preds = %2
  %9 = getelementptr inbounds %"class.v8::internal::compiler::UsePosition", %"class.v8::internal::compiler::UsePosition"* %6, i64 0, i32 3, i32 0
  %10 = load i32, i32* %9, align 8
  %11 = icmp sgt i32 %10, %4
  br i1 %11, label %12, label %16

12:                                               ; preds = %8, %2
  %13 = getelementptr inbounds %"class.v8::internal::compiler::LiveRange", %"class.v8::internal::compiler::LiveRange"* %0, i64 0, i32 4
  %14 = load %"class.v8::internal::compiler::UsePosition"*, %"class.v8::internal::compiler::UsePosition"** %13, align 8
  %15 = icmp eq %"class.v8::internal::compiler::UsePosition"* %14, null
  br i1 %15, label %27, label %16

16:                                               ; preds = %12, %8
  %17 = phi %"class.v8::internal::compiler::UsePosition"* [ %6, %8 ], [ %14, %12 ]
  br label %18

18:                                               ; preds = %16, %23
  %19 = phi %"class.v8::internal::compiler::UsePosition"* [ %25, %23 ], [ %17, %16 ]
  %20 = getelementptr inbounds %"class.v8::internal::compiler::UsePosition", %"class.v8::internal::compiler::UsePosition"* %19, i64 0, i32 3, i32 0
  %21 = load i32, i32* %20, align 8
  %22 = icmp slt i32 %21, %4
  br i1 %22, label %23, label %28

23:                                               ; preds = %18
  %24 = getelementptr inbounds %"class.v8::internal::compiler::UsePosition", %"class.v8::internal::compiler::UsePosition"* %19, i64 0, i32 2
  %25 = load %"class.v8::internal::compiler::UsePosition"*, %"class.v8::internal::compiler::UsePosition"** %24, align 8
  %26 = icmp eq %"class.v8::internal::compiler::UsePosition"* %25, null
  br i1 %26, label %27, label %18

27:                                               ; preds = %23, %12
  store %"class.v8::internal::compiler::UsePosition"* null, %"class.v8::internal::compiler::UsePosition"** %5, align 8
  br label %39

28:                                               ; preds = %18
  store %"class.v8::internal::compiler::UsePosition"* %19, %"class.v8::internal::compiler::UsePosition"** %5, align 8
  br label %29

29:                                               ; preds = %35, %28
  %30 = phi %"class.v8::internal::compiler::UsePosition"* [ %37, %35 ], [ %19, %28 ]
  %31 = getelementptr inbounds %"class.v8::internal::compiler::UsePosition", %"class.v8::internal::compiler::UsePosition"* %30, i64 0, i32 4
  %32 = load i32, i32* %31, align 4
  %33 = and i32 %32, 32
  %34 = icmp eq i32 %33, 0
  br i1 %34, label %35, label %43

35:                                               ; preds = %29
  %36 = getelementptr inbounds %"class.v8::internal::compiler::UsePosition", %"class.v8::internal::compiler::UsePosition"* %30, i64 0, i32 2
  %37 = load %"class.v8::internal::compiler::UsePosition"*, %"class.v8::internal::compiler::UsePosition"** %36, align 8
  %38 = icmp eq %"class.v8::internal::compiler::UsePosition"* %37, null
  br i1 %38, label %39, label %29

39:                                               ; preds = %35, %27
  %40 = getelementptr inbounds %"class.v8::internal::compiler::LiveRange", %"class.v8::internal::compiler::LiveRange"* %0, i64 0, i32 2
  %41 = load %"class.v8::internal::compiler::UseInterval"*, %"class.v8::internal::compiler::UseInterval"** %40, align 8
  %42 = getelementptr inbounds %"class.v8::internal::compiler::UseInterval", %"class.v8::internal::compiler::UseInterval"* %41, i64 0, i32 1, i32 0
  br label %45

43:                                               ; preds = %29
  %44 = getelementptr inbounds %"class.v8::internal::compiler::UsePosition", %"class.v8::internal::compiler::UsePosition"* %30, i64 0, i32 3, i32 0
  br label %45

45:                                               ; preds = %43, %39
  %46 = phi i32* [ %42, %39 ], [ %44, %43 ]
  %47 = load i32, i32* %46, align 4
  ret i32 %47
}

; Function Attrs: nounwind readonly ssp uwtable
define hidden %"class.v8::internal::compiler::UsePosition"* @_ZNK2v88internal8compiler9LiveRange39PreviousUsePositionRegisterIsBeneficialENS1_16LifetimePositionE(%"class.v8::internal::compiler::LiveRange"* nocapture readonly, i32) local_unnamed_addr #8 align 2 {
  %3 = getelementptr inbounds %"class.v8::internal::compiler::LiveRange", %"class.v8::internal::compiler::LiveRange"* %0, i64 0, i32 4
  %4 = load %"class.v8::internal::compiler::UsePosition"*, %"class.v8::internal::compiler::UsePosition"** %3, align 8
  %5 = icmp eq %"class.v8::internal::compiler::UsePosition"* %4, null
  br i1 %5, label %21, label %6

6:                                                ; preds = %2, %12
  %7 = phi %"class.v8::internal::compiler::UsePosition"* [ %19, %12 ], [ %4, %2 ]
  %8 = phi %"class.v8::internal::compiler::UsePosition"* [ %17, %12 ], [ null, %2 ]
  %9 = getelementptr inbounds %"class.v8::internal::compiler::UsePosition", %"class.v8::internal::compiler::UsePosition"* %7, i64 0, i32 3, i32 0
  %10 = load i32, i32* %9, align 8
  %11 = icmp slt i32 %10, %1
  br i1 %11, label %12, label %21

12:                                               ; preds = %6
  %13 = getelementptr inbounds %"class.v8::internal::compiler::UsePosition", %"class.v8::internal::compiler::UsePosition"* %7, i64 0, i32 4
  %14 = load i32, i32* %13, align 4
  %15 = and i32 %14, 32
  %16 = icmp eq i32 %15, 0
  %17 = select i1 %16, %"class.v8::internal::compiler::UsePosition"* %8, %"class.v8::internal::compiler::UsePosition"* %7
  %18 = getelementptr inbounds %"class.v8::internal::compiler::UsePosition", %"class.v8::internal::compiler::UsePosition"* %7, i64 0, i32 2
  %19 = load %"class.v8::internal::compiler::UsePosition"*, %"class.v8::internal::compiler::UsePosition"** %18, align 8
  %20 = icmp eq %"class.v8::internal::compiler::UsePosition"* %19, null
  br i1 %20, label %21, label %6

21:                                               ; preds = %6, %12, %2
  %22 = phi %"class.v8::internal::compiler::UsePosition"* [ null, %2 ], [ %17, %12 ], [ %8, %6 ]
  ret %"class.v8::internal::compiler::UsePosition"* %22
}

; Function Attrs: nofree norecurse nounwind ssp uwtable
define hidden %"class.v8::internal::compiler::UsePosition"* @_ZNK2v88internal8compiler9LiveRange31NextUsePositionSpillDetrimentalENS1_16LifetimePositionE(%"class.v8::internal::compiler::LiveRange"* nocapture, i32) local_unnamed_addr #3 align 2 {
  %3 = getelementptr inbounds %"class.v8::internal::compiler::LiveRange", %"class.v8::internal::compiler::LiveRange"* %0, i64 0, i32 8
  %4 = load %"class.v8::internal::compiler::UsePosition"*, %"class.v8::internal::compiler::UsePosition"** %3, align 8
  %5 = icmp eq %"class.v8::internal::compiler::UsePosition"* %4, null
  br i1 %5, label %10, label %6

6:                                                ; preds = %2
  %7 = getelementptr inbounds %"class.v8::internal::compiler::UsePosition", %"class.v8::internal::compiler::UsePosition"* %4, i64 0, i32 3, i32 0
  %8 = load i32, i32* %7, align 8
  %9 = icmp sgt i32 %8, %1
  br i1 %9, label %10, label %14

10:                                               ; preds = %6, %2
  %11 = getelementptr inbounds %"class.v8::internal::compiler::LiveRange", %"class.v8::internal::compiler::LiveRange"* %0, i64 0, i32 4
  %12 = load %"class.v8::internal::compiler::UsePosition"*, %"class.v8::internal::compiler::UsePosition"** %11, align 8
  %13 = icmp eq %"class.v8::internal::compiler::UsePosition"* %12, null
  br i1 %13, label %25, label %14

14:                                               ; preds = %10, %6
  %15 = phi %"class.v8::internal::compiler::UsePosition"* [ %4, %6 ], [ %12, %10 ]
  br label %16

16:                                               ; preds = %14, %21
  %17 = phi %"class.v8::internal::compiler::UsePosition"* [ %23, %21 ], [ %15, %14 ]
  %18 = getelementptr inbounds %"class.v8::internal::compiler::UsePosition", %"class.v8::internal::compiler::UsePosition"* %17, i64 0, i32 3, i32 0
  %19 = load i32, i32* %18, align 8
  %20 = icmp slt i32 %19, %1
  br i1 %20, label %21, label %26

21:                                               ; preds = %16
  %22 = getelementptr inbounds %"class.v8::internal::compiler::UsePosition", %"class.v8::internal::compiler::UsePosition"* %17, i64 0, i32 2
  %23 = load %"class.v8::internal::compiler::UsePosition"*, %"class.v8::internal::compiler::UsePosition"** %22, align 8
  %24 = icmp eq %"class.v8::internal::compiler::UsePosition"* %23, null
  br i1 %24, label %25, label %16

25:                                               ; preds = %21, %10
  store %"class.v8::internal::compiler::UsePosition"* null, %"class.v8::internal::compiler::UsePosition"** %3, align 8
  br label %40

26:                                               ; preds = %16
  store %"class.v8::internal::compiler::UsePosition"* %17, %"class.v8::internal::compiler::UsePosition"** %3, align 8
  br label %27

27:                                               ; preds = %26, %36
  %28 = phi %"class.v8::internal::compiler::UsePosition"* [ %38, %36 ], [ %17, %26 ]
  %29 = getelementptr inbounds %"class.v8::internal::compiler::UsePosition", %"class.v8::internal::compiler::UsePosition"* %28, i64 0, i32 4
  %30 = load i32, i32* %29, align 4
  %31 = and i32 %30, 3
  %32 = icmp ne i32 %31, 2
  %33 = and i32 %30, 4096
  %34 = icmp eq i32 %33, 0
  %35 = and i1 %32, %34
  br i1 %35, label %36, label %40

36:                                               ; preds = %27
  %37 = getelementptr inbounds %"class.v8::internal::compiler::UsePosition", %"class.v8::internal::compiler::UsePosition"* %28, i64 0, i32 2
  %38 = load %"class.v8::internal::compiler::UsePosition"*, %"class.v8::internal::compiler::UsePosition"** %37, align 8
  %39 = icmp eq %"class.v8::internal::compiler::UsePosition"* %38, null
  br i1 %39, label %40, label %27

40:                                               ; preds = %36, %27, %25
  %41 = phi %"class.v8::internal::compiler::UsePosition"* [ null, %25 ], [ %28, %27 ], [ null, %36 ]
  ret %"class.v8::internal::compiler::UsePosition"* %41
}

; Function Attrs: nofree norecurse nounwind ssp uwtable
define hidden %"class.v8::internal::compiler::UsePosition"* @_ZNK2v88internal8compiler9LiveRange20NextRegisterPositionENS1_16LifetimePositionE(%"class.v8::internal::compiler::LiveRange"* nocapture, i32) local_unnamed_addr #3 align 2 {
  %3 = getelementptr inbounds %"class.v8::internal::compiler::LiveRange", %"class.v8::internal::compiler::LiveRange"* %0, i64 0, i32 8
  %4 = load %"class.v8::internal::compiler::UsePosition"*, %"class.v8::internal::compiler::UsePosition"** %3, align 8
  %5 = icmp eq %"class.v8::internal::compiler::UsePosition"* %4, null
  br i1 %5, label %10, label %6

6:                                                ; preds = %2
  %7 = getelementptr inbounds %"class.v8::internal::compiler::UsePosition", %"class.v8::internal::compiler::UsePosition"* %4, i64 0, i32 3, i32 0
  %8 = load i32, i32* %7, align 8
  %9 = icmp sgt i32 %8, %1
  br i1 %9, label %10, label %14

10:                                               ; preds = %6, %2
  %11 = getelementptr inbounds %"class.v8::internal::compiler::LiveRange", %"class.v8::internal::compiler::LiveRange"* %0, i64 0, i32 4
  %12 = load %"class.v8::internal::compiler::UsePosition"*, %"class.v8::internal::compiler::UsePosition"** %11, align 8
  %13 = icmp eq %"class.v8::internal::compiler::UsePosition"* %12, null
  br i1 %13, label %25, label %14

14:                                               ; preds = %10, %6
  %15 = phi %"class.v8::internal::compiler::UsePosition"* [ %4, %6 ], [ %12, %10 ]
  br label %16

16:                                               ; preds = %14, %21
  %17 = phi %"class.v8::internal::compiler::UsePosition"* [ %23, %21 ], [ %15, %14 ]
  %18 = getelementptr inbounds %"class.v8::internal::compiler::UsePosition", %"class.v8::internal::compiler::UsePosition"* %17, i64 0, i32 3, i32 0
  %19 = load i32, i32* %18, align 8
  %20 = icmp slt i32 %19, %1
  br i1 %20, label %21, label %26

21:                                               ; preds = %16
  %22 = getelementptr inbounds %"class.v8::internal::compiler::UsePosition", %"class.v8::internal::compiler::UsePosition"* %17, i64 0, i32 2
  %23 = load %"class.v8::internal::compiler::UsePosition"*, %"class.v8::internal::compiler::UsePosition"** %22, align 8
  %24 = icmp eq %"class.v8::internal::compiler::UsePosition"* %23, null
  br i1 %24, label %25, label %16

25:                                               ; preds = %21, %10
  store %"class.v8::internal::compiler::UsePosition"* null, %"class.v8::internal::compiler::UsePosition"** %3, align 8
  br label %37

26:                                               ; preds = %16
  store %"class.v8::internal::compiler::UsePosition"* %17, %"class.v8::internal::compiler::UsePosition"** %3, align 8
  br label %27

27:                                               ; preds = %26, %33
  %28 = phi %"class.v8::internal::compiler::UsePosition"* [ %35, %33 ], [ %17, %26 ]
  %29 = getelementptr inbounds %"class.v8::internal::compiler::UsePosition", %"class.v8::internal::compiler::UsePosition"* %28, i64 0, i32 4
  %30 = load i32, i32* %29, align 4
  %31 = and i32 %30, 3
  %32 = icmp eq i32 %31, 2
  br i1 %32, label %37, label %33

33:                                               ; preds = %27
  %34 = getelementptr inbounds %"class.v8::internal::compiler::UsePosition", %"class.v8::internal::compiler::UsePosition"* %28, i64 0, i32 2
  %35 = load %"class.v8::internal::compiler::UsePosition"*, %"class.v8::internal::compiler::UsePosition"** %34, align 8
  %36 = icmp eq %"class.v8::internal::compiler::UsePosition"* %35, null
  br i1 %36, label %37, label %27

37:                                               ; preds = %33, %27, %25
  %38 = phi %"class.v8::internal::compiler::UsePosition"* [ null, %25 ], [ %28, %27 ], [ null, %33 ]
  ret %"class.v8::internal::compiler::UsePosition"* %38
}

; Function Attrs: nounwind ssp uwtable
define hidden zeroext i1 @_ZNK2v88internal8compiler9LiveRange12CanBeSpilledENS1_16LifetimePositionE(%"class.v8::internal::compiler::LiveRange"* nocapture, i32) local_unnamed_addr #0 align 2 {
  %3 = getelementptr inbounds %"class.v8::internal::compiler::LiveRange", %"class.v8::internal::compiler::LiveRange"* %0, i64 0, i32 8
  %4 = load %"class.v8::internal::compiler::UsePosition"*, %"class.v8::internal::compiler::UsePosition"** %3, align 8
  %5 = icmp eq %"class.v8::internal::compiler::UsePosition"* %4, null
  br i1 %5, label %10, label %6

6:                                                ; preds = %2
  %7 = getelementptr inbounds %"class.v8::internal::compiler::UsePosition", %"class.v8::internal::compiler::UsePosition"* %4, i64 0, i32 3, i32 0
  %8 = load i32, i32* %7, align 8
  %9 = icmp sgt i32 %8, %1
  br i1 %9, label %10, label %14

10:                                               ; preds = %6, %2
  %11 = getelementptr inbounds %"class.v8::internal::compiler::LiveRange", %"class.v8::internal::compiler::LiveRange"* %0, i64 0, i32 4
  %12 = load %"class.v8::internal::compiler::UsePosition"*, %"class.v8::internal::compiler::UsePosition"** %11, align 8
  %13 = icmp eq %"class.v8::internal::compiler::UsePosition"* %12, null
  br i1 %13, label %25, label %14

14:                                               ; preds = %10, %6
  %15 = phi %"class.v8::internal::compiler::UsePosition"* [ %4, %6 ], [ %12, %10 ]
  br label %16

16:                                               ; preds = %14, %21
  %17 = phi %"class.v8::internal::compiler::UsePosition"* [ %23, %21 ], [ %15, %14 ]
  %18 = getelementptr inbounds %"class.v8::internal::compiler::UsePosition", %"class.v8::internal::compiler::UsePosition"* %17, i64 0, i32 3, i32 0
  %19 = load i32, i32* %18, align 8
  %20 = icmp slt i32 %19, %1
  br i1 %20, label %21, label %26

21:                                               ; preds = %16
  %22 = getelementptr inbounds %"class.v8::internal::compiler::UsePosition", %"class.v8::internal::compiler::UsePosition"* %17, i64 0, i32 2
  %23 = load %"class.v8::internal::compiler::UsePosition"*, %"class.v8::internal::compiler::UsePosition"** %22, align 8
  %24 = icmp eq %"class.v8::internal::compiler::UsePosition"* %23, null
  br i1 %24, label %25, label %16

25:                                               ; preds = %21, %10
  store %"class.v8::internal::compiler::UsePosition"* null, %"class.v8::internal::compiler::UsePosition"** %3, align 8
  br label %43

26:                                               ; preds = %16
  store %"class.v8::internal::compiler::UsePosition"* %17, %"class.v8::internal::compiler::UsePosition"** %3, align 8
  br label %27

27:                                               ; preds = %33, %26
  %28 = phi %"class.v8::internal::compiler::UsePosition"* [ %35, %33 ], [ %17, %26 ]
  %29 = getelementptr inbounds %"class.v8::internal::compiler::UsePosition", %"class.v8::internal::compiler::UsePosition"* %28, i64 0, i32 4
  %30 = load i32, i32* %29, align 4
  %31 = and i32 %30, 3
  %32 = icmp eq i32 %31, 2
  br i1 %32, label %37, label %33

33:                                               ; preds = %27
  %34 = getelementptr inbounds %"class.v8::internal::compiler::UsePosition", %"class.v8::internal::compiler::UsePosition"* %28, i64 0, i32 2
  %35 = load %"class.v8::internal::compiler::UsePosition"*, %"class.v8::internal::compiler::UsePosition"** %34, align 8
  %36 = icmp eq %"class.v8::internal::compiler::UsePosition"* %35, null
  br i1 %36, label %43, label %27

37:                                               ; preds = %27
  %38 = getelementptr inbounds %"class.v8::internal::compiler::UsePosition", %"class.v8::internal::compiler::UsePosition"* %28, i64 0, i32 3, i32 0
  %39 = load i32, i32* %38, align 8
  %40 = add i32 %1, 2
  %41 = or i32 %40, 1
  %42 = icmp sgt i32 %39, %41
  br label %43

43:                                               ; preds = %33, %25, %37
  %44 = phi i1 [ %42, %37 ], [ true, %25 ], [ true, %33 ]
  ret i1 %44
}

; Function Attrs: norecurse nounwind readonly ssp uwtable
define hidden zeroext i1 @_ZNK2v88internal8compiler9LiveRange10IsTopLevelEv(%"class.v8::internal::compiler::LiveRange"* readonly) local_unnamed_addr #2 align 2 {
  %2 = getelementptr inbounds %"class.v8::internal::compiler::LiveRange", %"class.v8::internal::compiler::LiveRange"* %0, i64 0, i32 5
  %3 = bitcast %"class.v8::internal::compiler::TopLevelLiveRange"** %2 to %"class.v8::internal::compiler::LiveRange"**
  %4 = load %"class.v8::internal::compiler::LiveRange"*, %"class.v8::internal::compiler::LiveRange"** %3, align 8
  %5 = icmp eq %"class.v8::internal::compiler::LiveRange"* %4, %0
  ret i1 %5
}

; Function Attrs: nounwind readonly ssp uwtable
define hidden i64 @_ZNK2v88internal8compiler9LiveRange18GetAssignedOperandEv(%"class.v8::internal::compiler::LiveRange"* nocapture readonly) local_unnamed_addr #8 align 2 {
  %2 = getelementptr inbounds %"class.v8::internal::compiler::LiveRange", %"class.v8::internal::compiler::LiveRange"* %0, i64 0, i32 1
  %3 = load i32, i32* %2, align 4
  %4 = and i32 %3, 8064
  %5 = icmp eq i32 %4, 4096
  br i1 %5, label %16, label %6

6:                                                ; preds = %1
  %7 = lshr i32 %3, 7
  %8 = and i32 %7, 63
  %9 = lshr i32 %3, 8
  %10 = and i32 %9, 8160
  %11 = zext i32 %8 to i64
  %12 = shl nuw nsw i64 %11, 35
  %13 = or i32 %10, 5
  %14 = zext i32 %13 to i64
  %15 = or i64 %12, %14
  br label %41

16:                                               ; preds = %1
  %17 = getelementptr inbounds %"class.v8::internal::compiler::LiveRange", %"class.v8::internal::compiler::LiveRange"* %0, i64 0, i32 5
  %18 = load %"class.v8::internal::compiler::TopLevelLiveRange"*, %"class.v8::internal::compiler::TopLevelLiveRange"** %17, align 8
  %19 = getelementptr inbounds %"class.v8::internal::compiler::TopLevelLiveRange", %"class.v8::internal::compiler::TopLevelLiveRange"* %18, i64 0, i32 0, i32 1
  %20 = load i32, i32* %19, align 4
  %21 = and i32 %20, 96
  %22 = icmp eq i32 %21, 32
  br i1 %22, label %23, label %28

23:                                               ; preds = %16
  %24 = getelementptr inbounds %"class.v8::internal::compiler::TopLevelLiveRange", %"class.v8::internal::compiler::TopLevelLiveRange"* %18, i64 0, i32 3, i32 0
  %25 = load %"class.v8::internal::compiler::InstructionOperand"*, %"class.v8::internal::compiler::InstructionOperand"** %24, align 8
  %26 = getelementptr inbounds %"class.v8::internal::compiler::InstructionOperand", %"class.v8::internal::compiler::InstructionOperand"* %25, i64 0, i32 0
  %27 = load i64, i64* %26, align 8
  br label %41

28:                                               ; preds = %16
  %29 = getelementptr inbounds %"class.v8::internal::compiler::TopLevelLiveRange", %"class.v8::internal::compiler::TopLevelLiveRange"* %18, i64 0, i32 3
  %30 = bitcast %union.anon* %29 to %"class.v8::internal::compiler::SpillRange"**
  %31 = load %"class.v8::internal::compiler::SpillRange"*, %"class.v8::internal::compiler::SpillRange"** %30, align 8
  %32 = getelementptr inbounds %"class.v8::internal::compiler::SpillRange", %"class.v8::internal::compiler::SpillRange"* %31, i64 0, i32 3
  %33 = load i32, i32* %32, align 4
  %34 = lshr i32 %20, 8
  %35 = and i32 %34, 8160
  %36 = zext i32 %33 to i64
  %37 = shl i64 %36, 35
  %38 = or i32 %35, 13
  %39 = zext i32 %38 to i64
  %40 = or i64 %37, %39
  br label %41

41:                                               ; preds = %28, %23, %6
  %42 = phi i64 [ %15, %6 ], [ %27, %23 ], [ %40, %28 ]
  ret i64 %42
}

; Function Attrs: norecurse nounwind readonly ssp uwtable
define hidden i64 @_ZNK2v88internal8compiler17TopLevelLiveRange20GetSpillRangeOperandEv(%"class.v8::internal::compiler::TopLevelLiveRange"* nocapture readonly) local_unnamed_addr #2 align 2 {
  %2 = getelementptr inbounds %"class.v8::internal::compiler::TopLevelLiveRange", %"class.v8::internal::compiler::TopLevelLiveRange"* %0, i64 0, i32 3
  %3 = bitcast %union.anon* %2 to %"class.v8::internal::compiler::SpillRange"**
  %4 = load %"class.v8::internal::compiler::SpillRange"*, %"class.v8::internal::compiler::SpillRange"** %3, align 8
  %5 = getelementptr inbounds %"class.v8::internal::compiler::SpillRange", %"class.v8::internal::compiler::SpillRange"* %4, i64 0, i32 3
  %6 = load i32, i32* %5, align 4
  %7 = getelementptr inbounds %"class.v8::internal::compiler::TopLevelLiveRange", %"class.v8::internal::compiler::TopLevelLiveRange"* %0, i64 0, i32 0, i32 1
  %8 = load i32, i32* %7, align 4
  %9 = lshr i32 %8, 8
  %10 = and i32 %9, 8160
  %11 = zext i32 %6 to i64
  %12 = shl i64 %11, 35
  %13 = or i32 %10, 8
  %14 = zext i32 %13 to i64
  %15 = or i64 %12, %14
  %16 = or i64 %15, 5
  ret i64 %16
}

; Function Attrs: nounwind ssp uwtable
define hidden %"class.v8::internal::compiler::UseInterval"* @_ZNK2v88internal8compiler9LiveRange30FirstSearchIntervalForPositionENS1_16LifetimePositionE(%"class.v8::internal::compiler::LiveRange"* nocapture, i32) local_unnamed_addr #0 align 2 {
  %3 = getelementptr inbounds %"class.v8::internal::compiler::LiveRange", %"class.v8::internal::compiler::LiveRange"* %0, i64 0, i32 7
  %4 = load %"class.v8::internal::compiler::UseInterval"*, %"class.v8::internal::compiler::UseInterval"** %3, align 8
  %5 = icmp eq %"class.v8::internal::compiler::UseInterval"* %4, null
  br i1 %5, label %6, label %8

6:                                                ; preds = %2
  %7 = getelementptr inbounds %"class.v8::internal::compiler::LiveRange", %"class.v8::internal::compiler::LiveRange"* %0, i64 0, i32 3
  br label %14

8:                                                ; preds = %2
  %9 = getelementptr inbounds %"class.v8::internal::compiler::UseInterval", %"class.v8::internal::compiler::UseInterval"* %4, i64 0, i32 0, i32 0
  %10 = load i32, i32* %9, align 8
  %11 = icmp sgt i32 %10, %1
  br i1 %11, label %12, label %14

12:                                               ; preds = %8
  store %"class.v8::internal::compiler::UseInterval"* null, %"class.v8::internal::compiler::UseInterval"** %3, align 8
  %13 = getelementptr inbounds %"class.v8::internal::compiler::LiveRange", %"class.v8::internal::compiler::LiveRange"* %0, i64 0, i32 3
  br label %14

14:                                               ; preds = %8, %12, %6
  %15 = phi %"class.v8::internal::compiler::UseInterval"** [ %7, %6 ], [ %13, %12 ], [ %3, %8 ]
  %16 = load %"class.v8::internal::compiler::UseInterval"*, %"class.v8::internal::compiler::UseInterval"** %15, align 8
  ret %"class.v8::internal::compiler::UseInterval"* %16
}

; Function Attrs: nounwind ssp uwtable
define hidden void @_ZNK2v88internal8compiler9LiveRange26AdvanceLastProcessedMarkerEPNS1_11UseIntervalENS1_16LifetimePositionE(%"class.v8::internal::compiler::LiveRange"* nocapture, %"class.v8::internal::compiler::UseInterval"*, i32) local_unnamed_addr #0 align 2 {
  %4 = icmp eq %"class.v8::internal::compiler::UseInterval"* %1, null
  br i1 %4, label %20, label %5

5:                                                ; preds = %3
  %6 = getelementptr inbounds %"class.v8::internal::compiler::UseInterval", %"class.v8::internal::compiler::UseInterval"* %1, i64 0, i32 0, i32 0
  %7 = load i32, i32* %6, align 8
  %8 = icmp sgt i32 %7, %2
  br i1 %8, label %20, label %9

9:                                                ; preds = %5
  %10 = getelementptr inbounds %"class.v8::internal::compiler::LiveRange", %"class.v8::internal::compiler::LiveRange"* %0, i64 0, i32 7
  %11 = load %"class.v8::internal::compiler::UseInterval"*, %"class.v8::internal::compiler::UseInterval"** %10, align 8
  %12 = icmp eq %"class.v8::internal::compiler::UseInterval"* %11, null
  br i1 %12, label %16, label %13

13:                                               ; preds = %9
  %14 = getelementptr inbounds %"class.v8::internal::compiler::UseInterval", %"class.v8::internal::compiler::UseInterval"* %11, i64 0, i32 0, i32 0
  %15 = load i32, i32* %14, align 8
  br label %16

16:                                               ; preds = %9, %13
  %17 = phi i32 [ %15, %13 ], [ -1, %9 ]
  %18 = icmp sgt i32 %7, %17
  br i1 %18, label %19, label %20

19:                                               ; preds = %16
  store %"class.v8::internal::compiler::UseInterval"* %1, %"class.v8::internal::compiler::UseInterval"** %10, align 8
  br label %20

20:                                               ; preds = %16, %19, %5, %3
  ret void
}

; Function Attrs: nounwind ssp uwtable
define hidden %"class.v8::internal::compiler::LiveRange"* @_ZN2v88internal8compiler9LiveRange7SplitAtENS1_16LifetimePositionEPNS0_4ZoneE(%"class.v8::internal::compiler::LiveRange"* nocapture, i32, %"class.v8::internal::Zone"*) local_unnamed_addr #0 align 2 {
  %4 = getelementptr inbounds %"class.v8::internal::compiler::LiveRange", %"class.v8::internal::compiler::LiveRange"* %0, i64 0, i32 5
  %5 = load %"class.v8::internal::compiler::TopLevelLiveRange"*, %"class.v8::internal::compiler::TopLevelLiveRange"** %4, align 8
  %6 = getelementptr inbounds %"class.v8::internal::compiler::TopLevelLiveRange", %"class.v8::internal::compiler::TopLevelLiveRange"* %5, i64 0, i32 2
  %7 = load i32, i32* %6, align 8
  %8 = add nsw i32 %7, 1
  store i32 %8, i32* %6, align 8
  %9 = getelementptr inbounds %"class.v8::internal::compiler::LiveRange", %"class.v8::internal::compiler::LiveRange"* %0, i64 0, i32 1
  %10 = load i32, i32* %9, align 4
  %11 = bitcast %"class.v8::internal::compiler::TopLevelLiveRange"** %4 to i64*
  %12 = load i64, i64* %11, align 8
  %13 = getelementptr inbounds %"class.v8::internal::Zone", %"class.v8::internal::Zone"* %2, i64 0, i32 2
  %14 = load i64, i64* %13, align 8
  %15 = getelementptr inbounds %"class.v8::internal::Zone", %"class.v8::internal::Zone"* %2, i64 0, i32 3
  %16 = load i64, i64* %15, align 8
  %17 = sub i64 %16, %14
  %18 = icmp ult i64 %17, 88
  br i1 %18, label %19, label %21, !prof !2

19:                                               ; preds = %3
  %20 = tail call i64 @_ZN2v88internal4Zone9NewExpandEm(%"class.v8::internal::Zone"* %2, i64 88) #16
  br label %23

21:                                               ; preds = %3
  %22 = add i64 %14, 88
  store i64 %22, i64* %13, align 8
  br label %23

23:                                               ; preds = %19, %21
  %24 = phi i64 [ %20, %19 ], [ %14, %21 ]
  %25 = inttoptr i64 %24 to %"class.v8::internal::compiler::LiveRange"*
  %26 = getelementptr inbounds %"class.v8::internal::compiler::LiveRange", %"class.v8::internal::compiler::LiveRange"* %25, i64 0, i32 0
  store i32 %8, i32* %26, align 8
  %27 = getelementptr inbounds %"class.v8::internal::compiler::LiveRange", %"class.v8::internal::compiler::LiveRange"* %25, i64 0, i32 1
  %28 = getelementptr inbounds %"class.v8::internal::compiler::LiveRange", %"class.v8::internal::compiler::LiveRange"* %25, i64 0, i32 5
  %29 = getelementptr inbounds i32, i32* %27, i64 1
  %30 = bitcast i32* %29 to i8*
  tail call void @llvm.memset.p0i8.i64(i8* align 4 %30, i8 0, i64 24, i1 false) #16
  %31 = bitcast %"class.v8::internal::compiler::TopLevelLiveRange"** %28 to i64*
  store i64 %12, i64* %31, align 8
  %32 = getelementptr inbounds %"class.v8::internal::compiler::LiveRange", %"class.v8::internal::compiler::LiveRange"* %25, i64 0, i32 6
  %33 = getelementptr inbounds %"class.v8::internal::compiler::LiveRange", %"class.v8::internal::compiler::LiveRange"* %25, i64 0, i32 11, i32 0
  %34 = bitcast %"class.v8::internal::compiler::LiveRange"** %32 to i8*
  tail call void @llvm.memset.p0i8.i64(i8* align 8 %34, i8 0, i64 40, i1 false) #16
  store i32 -1, i32* %33, align 4
  %35 = and i32 %10, 2088960
  %36 = or i32 %35, 134221824
  store i32 %36, i32* %27, align 4
  %37 = getelementptr inbounds %"class.v8::internal::compiler::LiveRange", %"class.v8::internal::compiler::LiveRange"* %0, i64 0, i32 10
  %38 = bitcast %"class.v8::internal::compiler::LiveRangeBundle"** %37 to i64*
  %39 = load i64, i64* %38, align 8
  %40 = getelementptr inbounds %"class.v8::internal::compiler::LiveRange", %"class.v8::internal::compiler::LiveRange"* %25, i64 0, i32 10
  %41 = bitcast %"class.v8::internal::compiler::LiveRangeBundle"** %40 to i64*
  store i64 %39, i64* %41, align 8
  %42 = tail call %"class.v8::internal::compiler::UsePosition"* @_ZN2v88internal8compiler9LiveRange8DetachAtENS1_16LifetimePositionEPS2_PNS0_4ZoneENS2_20HintConnectionOptionE(%"class.v8::internal::compiler::LiveRange"* %0, i32 %1, %"class.v8::internal::compiler::LiveRange"* %25, %"class.v8::internal::Zone"* %2, i1 zeroext false)
  %43 = load i64, i64* %11, align 8
  store i64 %43, i64* %31, align 8
  %44 = getelementptr inbounds %"class.v8::internal::compiler::LiveRange", %"class.v8::internal::compiler::LiveRange"* %0, i64 0, i32 6
  %45 = bitcast %"class.v8::internal::compiler::LiveRange"** %44 to i64*
  %46 = load i64, i64* %45, align 8
  %47 = bitcast %"class.v8::internal::compiler::LiveRange"** %32 to i64*
  store i64 %46, i64* %47, align 8
  store %"class.v8::internal::compiler::LiveRange"* %25, %"class.v8::internal::compiler::LiveRange"** %44, align 8
  ret %"class.v8::internal::compiler::LiveRange"* %25
}

; Function Attrs: nounwind ssp uwtable
define hidden %"class.v8::internal::compiler::UsePosition"* @_ZN2v88internal8compiler9LiveRange8DetachAtENS1_16LifetimePositionEPS2_PNS0_4ZoneENS2_20HintConnectionOptionE(%"class.v8::internal::compiler::LiveRange"* nocapture, i32, %"class.v8::internal::compiler::LiveRange"* nocapture, %"class.v8::internal::Zone"*, i1 zeroext) local_unnamed_addr #0 align 2 {
  %6 = getelementptr inbounds %"class.v8::internal::compiler::LiveRange", %"class.v8::internal::compiler::LiveRange"* %0, i64 0, i32 7
  %7 = load %"class.v8::internal::compiler::UseInterval"*, %"class.v8::internal::compiler::UseInterval"** %6, align 8
  %8 = icmp eq %"class.v8::internal::compiler::UseInterval"* %7, null
  br i1 %8, label %9, label %11

9:                                                ; preds = %5
  %10 = getelementptr inbounds %"class.v8::internal::compiler::LiveRange", %"class.v8::internal::compiler::LiveRange"* %0, i64 0, i32 3
  br label %17

11:                                               ; preds = %5
  %12 = getelementptr inbounds %"class.v8::internal::compiler::UseInterval", %"class.v8::internal::compiler::UseInterval"* %7, i64 0, i32 0, i32 0
  %13 = load i32, i32* %12, align 8
  %14 = icmp sgt i32 %13, %1
  br i1 %14, label %15, label %17

15:                                               ; preds = %11
  store %"class.v8::internal::compiler::UseInterval"* null, %"class.v8::internal::compiler::UseInterval"** %6, align 8
  %16 = getelementptr inbounds %"class.v8::internal::compiler::LiveRange", %"class.v8::internal::compiler::LiveRange"* %0, i64 0, i32 3
  br label %17

17:                                               ; preds = %9, %11, %15
  %18 = phi %"class.v8::internal::compiler::UseInterval"** [ %10, %9 ], [ %16, %15 ], [ %6, %11 ]
  %19 = load %"class.v8::internal::compiler::UseInterval"*, %"class.v8::internal::compiler::UseInterval"** %18, align 8
  %20 = getelementptr inbounds %"class.v8::internal::compiler::UseInterval", %"class.v8::internal::compiler::UseInterval"* %19, i64 0, i32 0, i32 0
  %21 = load i32, i32* %20, align 8
  %22 = icmp eq i32 %21, %1
  br i1 %22, label %23, label %26

23:                                               ; preds = %17
  %24 = getelementptr inbounds %"class.v8::internal::compiler::LiveRange", %"class.v8::internal::compiler::LiveRange"* %0, i64 0, i32 3
  %25 = load %"class.v8::internal::compiler::UseInterval"*, %"class.v8::internal::compiler::UseInterval"** %24, align 8
  br label %26

26:                                               ; preds = %23, %17
  %27 = phi %"class.v8::internal::compiler::UseInterval"* [ %19, %17 ], [ %25, %23 ]
  br label %28

28:                                               ; preds = %26, %62
  %29 = phi %"class.v8::internal::compiler::UseInterval"* [ %64, %62 ], [ %27, %26 ]
  %30 = icmp eq %"class.v8::internal::compiler::UseInterval"* %29, null
  br i1 %30, label %71, label %31

31:                                               ; preds = %28
  %32 = getelementptr inbounds %"class.v8::internal::compiler::UseInterval", %"class.v8::internal::compiler::UseInterval"* %29, i64 0, i32 0, i32 0
  %33 = load i32, i32* %32, align 4
  %34 = icmp sgt i32 %33, %1
  br i1 %34, label %62, label %35

35:                                               ; preds = %31
  %36 = getelementptr inbounds %"class.v8::internal::compiler::UseInterval", %"class.v8::internal::compiler::UseInterval"* %29, i64 0, i32 1, i32 0
  %37 = load i32, i32* %36, align 4
  %38 = icmp sgt i32 %37, %1
  br i1 %38, label %39, label %62

39:                                               ; preds = %35
  %40 = getelementptr inbounds %"class.v8::internal::compiler::UseInterval", %"class.v8::internal::compiler::UseInterval"* %29, i64 0, i32 1, i32 0
  %41 = getelementptr inbounds %"class.v8::internal::Zone", %"class.v8::internal::Zone"* %3, i64 0, i32 2
  %42 = load i64, i64* %41, align 8
  %43 = getelementptr inbounds %"class.v8::internal::Zone", %"class.v8::internal::Zone"* %3, i64 0, i32 3
  %44 = load i64, i64* %43, align 8
  %45 = sub i64 %44, %42
  %46 = icmp ult i64 %45, 16
  br i1 %46, label %47, label %49, !prof !2

47:                                               ; preds = %39
  %48 = tail call i64 @_ZN2v88internal4Zone9NewExpandEm(%"class.v8::internal::Zone"* %3, i64 16) #16
  br label %51

49:                                               ; preds = %39
  %50 = add i64 %42, 16
  store i64 %50, i64* %41, align 8
  br label %51

51:                                               ; preds = %47, %49
  %52 = phi i64 [ %48, %47 ], [ %42, %49 ]
  %53 = inttoptr i64 %52 to %"class.v8::internal::compiler::UseInterval"*
  %54 = load i32, i32* %40, align 4
  %55 = getelementptr inbounds %"class.v8::internal::compiler::UseInterval", %"class.v8::internal::compiler::UseInterval"* %53, i64 0, i32 0, i32 0
  store i32 %1, i32* %55, align 8
  %56 = getelementptr inbounds %"class.v8::internal::compiler::UseInterval", %"class.v8::internal::compiler::UseInterval"* %53, i64 0, i32 1, i32 0
  store i32 %54, i32* %56, align 4
  %57 = getelementptr inbounds %"class.v8::internal::compiler::UseInterval", %"class.v8::internal::compiler::UseInterval"* %53, i64 0, i32 2
  store %"class.v8::internal::compiler::UseInterval"* null, %"class.v8::internal::compiler::UseInterval"** %57, align 8
  %58 = getelementptr inbounds %"class.v8::internal::compiler::UseInterval", %"class.v8::internal::compiler::UseInterval"* %29, i64 0, i32 2
  %59 = bitcast %"class.v8::internal::compiler::UseInterval"** %58 to i64*
  %60 = load i64, i64* %59, align 8
  %61 = bitcast %"class.v8::internal::compiler::UseInterval"** %57 to i64*
  store i64 %60, i64* %61, align 8
  store %"class.v8::internal::compiler::UseInterval"* null, %"class.v8::internal::compiler::UseInterval"** %58, align 8
  store i32 %1, i32* %40, align 4
  br label %71

62:                                               ; preds = %31, %35
  %63 = getelementptr inbounds %"class.v8::internal::compiler::UseInterval", %"class.v8::internal::compiler::UseInterval"* %29, i64 0, i32 2
  %64 = load %"class.v8::internal::compiler::UseInterval"*, %"class.v8::internal::compiler::UseInterval"** %63, align 8
  %65 = getelementptr inbounds %"class.v8::internal::compiler::UseInterval", %"class.v8::internal::compiler::UseInterval"* %64, i64 0, i32 0, i32 0
  %66 = load i32, i32* %65, align 8
  %67 = icmp slt i32 %66, %1
  br i1 %67, label %28, label %68

68:                                               ; preds = %62
  %69 = getelementptr inbounds %"class.v8::internal::compiler::UseInterval", %"class.v8::internal::compiler::UseInterval"* %29, i64 0, i32 2
  %70 = icmp ne i32 %66, %1
  store %"class.v8::internal::compiler::UseInterval"* null, %"class.v8::internal::compiler::UseInterval"** %69, align 8
  br label %71

71:                                               ; preds = %28, %68, %51
  %72 = phi %"class.v8::internal::compiler::UseInterval"* [ %53, %51 ], [ %64, %68 ], [ null, %28 ]
  %73 = phi i1 [ true, %51 ], [ %70, %68 ], [ true, %28 ]
  %74 = getelementptr inbounds %"class.v8::internal::compiler::LiveRange", %"class.v8::internal::compiler::LiveRange"* %0, i64 0, i32 2
  %75 = load %"class.v8::internal::compiler::UseInterval"*, %"class.v8::internal::compiler::UseInterval"** %74, align 8
  %76 = icmp eq %"class.v8::internal::compiler::UseInterval"* %75, %29
  %77 = select i1 %76, %"class.v8::internal::compiler::UseInterval"* %72, %"class.v8::internal::compiler::UseInterval"* %75
  %78 = getelementptr inbounds %"class.v8::internal::compiler::LiveRange", %"class.v8::internal::compiler::LiveRange"* %2, i64 0, i32 2
  store %"class.v8::internal::compiler::UseInterval"* %77, %"class.v8::internal::compiler::UseInterval"** %78, align 8
  %79 = getelementptr inbounds %"class.v8::internal::compiler::LiveRange", %"class.v8::internal::compiler::LiveRange"* %2, i64 0, i32 3
  store %"class.v8::internal::compiler::UseInterval"* %72, %"class.v8::internal::compiler::UseInterval"** %79, align 8
  store %"class.v8::internal::compiler::UseInterval"* %29, %"class.v8::internal::compiler::UseInterval"** %74, align 8
  %80 = getelementptr inbounds %"class.v8::internal::compiler::LiveRange", %"class.v8::internal::compiler::LiveRange"* %0, i64 0, i32 4
  %81 = load %"class.v8::internal::compiler::UsePosition"*, %"class.v8::internal::compiler::UsePosition"** %80, align 8
  %82 = icmp eq %"class.v8::internal::compiler::UsePosition"* %81, null
  br i1 %73, label %88, label %83

83:                                               ; preds = %71
  br i1 %82, label %123, label %84

84:                                               ; preds = %83
  %85 = getelementptr inbounds %"class.v8::internal::compiler::UsePosition", %"class.v8::internal::compiler::UsePosition"* %81, i64 0, i32 3, i32 0
  %86 = load i32, i32* %85, align 8
  %87 = icmp slt i32 %86, %1
  br i1 %87, label %97, label %114

88:                                               ; preds = %71
  br i1 %82, label %123, label %89

89:                                               ; preds = %88
  %90 = getelementptr inbounds %"class.v8::internal::compiler::UsePosition", %"class.v8::internal::compiler::UsePosition"* %81, i64 0, i32 3, i32 0
  %91 = load i32, i32* %90, align 8
  %92 = icmp sgt i32 %91, %1
  br i1 %92, label %114, label %106

93:                                               ; preds = %97
  %94 = getelementptr inbounds %"class.v8::internal::compiler::UsePosition", %"class.v8::internal::compiler::UsePosition"* %100, i64 0, i32 3, i32 0
  %95 = load i32, i32* %94, align 8
  %96 = icmp slt i32 %95, %1
  br i1 %96, label %97, label %114

97:                                               ; preds = %84, %93
  %98 = phi %"class.v8::internal::compiler::UsePosition"* [ %100, %93 ], [ %81, %84 ]
  %99 = getelementptr inbounds %"class.v8::internal::compiler::UsePosition", %"class.v8::internal::compiler::UsePosition"* %98, i64 0, i32 2
  %100 = load %"class.v8::internal::compiler::UsePosition"*, %"class.v8::internal::compiler::UsePosition"** %99, align 8
  %101 = icmp eq %"class.v8::internal::compiler::UsePosition"* %100, null
  br i1 %101, label %111, label %93

102:                                              ; preds = %106
  %103 = getelementptr inbounds %"class.v8::internal::compiler::UsePosition", %"class.v8::internal::compiler::UsePosition"* %109, i64 0, i32 3, i32 0
  %104 = load i32, i32* %103, align 8
  %105 = icmp sgt i32 %104, %1
  br i1 %105, label %114, label %106

106:                                              ; preds = %89, %102
  %107 = phi %"class.v8::internal::compiler::UsePosition"* [ %109, %102 ], [ %81, %89 ]
  %108 = getelementptr inbounds %"class.v8::internal::compiler::UsePosition", %"class.v8::internal::compiler::UsePosition"* %107, i64 0, i32 2
  %109 = load %"class.v8::internal::compiler::UsePosition"*, %"class.v8::internal::compiler::UsePosition"** %108, align 8
  %110 = icmp eq %"class.v8::internal::compiler::UsePosition"* %109, null
  br i1 %110, label %111, label %102

111:                                              ; preds = %97, %106
  %112 = phi %"class.v8::internal::compiler::UsePosition"* [ %107, %106 ], [ %98, %97 ]
  %113 = icmp ne %"class.v8::internal::compiler::UsePosition"* %112, null
  br label %118

114:                                              ; preds = %93, %102, %84, %89
  %115 = phi %"class.v8::internal::compiler::UsePosition"* [ %81, %89 ], [ %81, %84 ], [ %109, %102 ], [ %100, %93 ]
  %116 = phi %"class.v8::internal::compiler::UsePosition"* [ null, %89 ], [ null, %84 ], [ %107, %102 ], [ %98, %93 ]
  %117 = icmp eq %"class.v8::internal::compiler::UsePosition"* %116, null
  br i1 %117, label %123, label %118

118:                                              ; preds = %114, %111
  %119 = phi i1 [ %113, %111 ], [ true, %114 ]
  %120 = phi %"class.v8::internal::compiler::UsePosition"* [ %112, %111 ], [ %116, %114 ]
  %121 = phi %"class.v8::internal::compiler::UsePosition"* [ null, %111 ], [ %115, %114 ]
  %122 = getelementptr inbounds %"class.v8::internal::compiler::UsePosition", %"class.v8::internal::compiler::UsePosition"* %120, i64 0, i32 2
  br label %123

123:                                              ; preds = %88, %83, %114, %118
  %124 = phi %"class.v8::internal::compiler::UsePosition"** [ %122, %118 ], [ %80, %114 ], [ %80, %83 ], [ %80, %88 ]
  %125 = phi i1 [ %119, %118 ], [ false, %114 ], [ false, %83 ], [ false, %88 ]
  %126 = phi %"class.v8::internal::compiler::UsePosition"* [ %120, %118 ], [ null, %114 ], [ null, %83 ], [ null, %88 ]
  %127 = phi %"class.v8::internal::compiler::UsePosition"* [ %121, %118 ], [ %115, %114 ], [ null, %83 ], [ null, %88 ]
  store %"class.v8::internal::compiler::UsePosition"* null, %"class.v8::internal::compiler::UsePosition"** %124, align 8
  %128 = getelementptr inbounds %"class.v8::internal::compiler::LiveRange", %"class.v8::internal::compiler::LiveRange"* %2, i64 0, i32 4
  store %"class.v8::internal::compiler::UsePosition"* %127, %"class.v8::internal::compiler::UsePosition"** %128, align 8
  %129 = getelementptr inbounds %"class.v8::internal::compiler::LiveRange", %"class.v8::internal::compiler::LiveRange"* %0, i64 0, i32 9
  %130 = bitcast %"class.v8::internal::compiler::UsePosition"** %129 to i64*
  %131 = load i64, i64* %130, align 8
  %132 = getelementptr inbounds %"class.v8::internal::compiler::LiveRange", %"class.v8::internal::compiler::LiveRange"* %2, i64 0, i32 9
  %133 = bitcast %"class.v8::internal::compiler::UsePosition"** %132 to i64*
  store i64 %131, i64* %133, align 8
  %134 = and i1 %125, %4
  %135 = icmp ne %"class.v8::internal::compiler::UsePosition"* %127, null
  %136 = and i1 %135, %134
  %137 = bitcast %"class.v8::internal::compiler::UseInterval"** %6 to i8*
  call void @llvm.memset.p0i8.i64(i8* align 8 %137, i8 0, i64 16, i1 false)
  br i1 %136, label %138, label %145

138:                                              ; preds = %123
  %139 = getelementptr inbounds %"class.v8::internal::compiler::UsePosition", %"class.v8::internal::compiler::UsePosition"* %127, i64 0, i32 1
  %140 = bitcast i8** %139 to %"class.v8::internal::compiler::UsePosition"**
  store %"class.v8::internal::compiler::UsePosition"* %126, %"class.v8::internal::compiler::UsePosition"** %140, align 8
  %141 = getelementptr inbounds %"class.v8::internal::compiler::UsePosition", %"class.v8::internal::compiler::UsePosition"* %127, i64 0, i32 4
  %142 = load i32, i32* %141, align 4
  %143 = and i32 %142, -29
  %144 = or i32 %143, 8
  store i32 %144, i32* %141, align 4
  store %"class.v8::internal::compiler::UsePosition"* %127, %"class.v8::internal::compiler::UsePosition"** %132, align 8
  br label %145

145:                                              ; preds = %138, %123
  ret %"class.v8::internal::compiler::UsePosition"* %126
}

; Function Attrs: nofree norecurse nounwind ssp uwtable
define hidden void @_ZN2v88internal8compiler9LiveRange26UpdateParentForAllChildrenEPNS1_17TopLevelLiveRangeE(%"class.v8::internal::compiler::LiveRange"*, %"class.v8::internal::compiler::TopLevelLiveRange"*) local_unnamed_addr #3 align 2 {
  %3 = icmp eq %"class.v8::internal::compiler::LiveRange"* %0, null
  br i1 %3, label %10, label %4

4:                                                ; preds = %2, %4
  %5 = phi %"class.v8::internal::compiler::LiveRange"* [ %8, %4 ], [ %0, %2 ]
  %6 = getelementptr inbounds %"class.v8::internal::compiler::LiveRange", %"class.v8::internal::compiler::LiveRange"* %5, i64 0, i32 5
  store %"class.v8::internal::compiler::TopLevelLiveRange"* %1, %"class.v8::internal::compiler::TopLevelLiveRange"** %6, align 8
  %7 = getelementptr inbounds %"class.v8::internal::compiler::LiveRange", %"class.v8::internal::compiler::LiveRange"* %5, i64 0, i32 6
  %8 = load %"class.v8::internal::compiler::LiveRange"*, %"class.v8::internal::compiler::LiveRange"** %7, align 8
  %9 = icmp eq %"class.v8::internal::compiler::LiveRange"* %8, null
  br i1 %9, label %10, label %4

10:                                               ; preds = %4, %2
  ret void
}

; Function Attrs: nofree norecurse nounwind ssp uwtable
define hidden void @_ZN2v88internal8compiler9LiveRange20ConvertUsesToOperandERKNS1_18InstructionOperandES5_(%"class.v8::internal::compiler::LiveRange"* nocapture readonly, %"class.v8::internal::compiler::InstructionOperand"* nocapture readonly dereferenceable(8), %"class.v8::internal::compiler::InstructionOperand"* nocapture readonly dereferenceable(8)) local_unnamed_addr #3 align 2 {
  %4 = getelementptr inbounds %"class.v8::internal::compiler::LiveRange", %"class.v8::internal::compiler::LiveRange"* %0, i64 0, i32 4
  %5 = load %"class.v8::internal::compiler::UsePosition"*, %"class.v8::internal::compiler::UsePosition"** %4, align 8
  %6 = icmp eq %"class.v8::internal::compiler::UsePosition"* %5, null
  br i1 %6, label %10, label %7

7:                                                ; preds = %3
  %8 = getelementptr inbounds %"class.v8::internal::compiler::InstructionOperand", %"class.v8::internal::compiler::InstructionOperand"* %1, i64 0, i32 0
  %9 = getelementptr inbounds %"class.v8::internal::compiler::InstructionOperand", %"class.v8::internal::compiler::InstructionOperand"* %2, i64 0, i32 0
  br label %11

10:                                               ; preds = %25, %3
  ret void

11:                                               ; preds = %7, %25
  %12 = phi %"class.v8::internal::compiler::UsePosition"* [ %5, %7 ], [ %27, %25 ]
  %13 = getelementptr inbounds %"class.v8::internal::compiler::UsePosition", %"class.v8::internal::compiler::UsePosition"* %12, i64 0, i32 0
  %14 = load %"class.v8::internal::compiler::InstructionOperand"*, %"class.v8::internal::compiler::InstructionOperand"** %13, align 8
  %15 = icmp eq %"class.v8::internal::compiler::InstructionOperand"* %14, null
  br i1 %15, label %25, label %16

16:                                               ; preds = %11
  %17 = getelementptr inbounds %"class.v8::internal::compiler::UsePosition", %"class.v8::internal::compiler::UsePosition"* %12, i64 0, i32 4
  %18 = load i32, i32* %17, align 4
  %19 = and i32 %18, 3
  %20 = icmp eq i32 %19, 3
  %21 = getelementptr inbounds %"class.v8::internal::compiler::InstructionOperand", %"class.v8::internal::compiler::InstructionOperand"* %14, i64 0, i32 0
  %22 = load i64, i64* %9, align 8
  %23 = load i64, i64* %8, align 8
  %24 = select i1 %20, i64 %22, i64 %23
  store i64 %24, i64* %21, align 8
  br label %25

25:                                               ; preds = %16, %11
  %26 = getelementptr inbounds %"class.v8::internal::compiler::UsePosition", %"class.v8::internal::compiler::UsePosition"* %12, i64 0, i32 2
  %27 = load %"class.v8::internal::compiler::UsePosition"*, %"class.v8::internal::compiler::UsePosition"** %26, align 8
  %28 = icmp eq %"class.v8::internal::compiler::UsePosition"* %27, null
  br i1 %28, label %10, label %11
}

; Function Attrs: nounwind readonly ssp uwtable
define hidden zeroext i1 @_ZNK2v88internal8compiler9LiveRange23ShouldBeAllocatedBeforeEPKS2_(%"class.v8::internal::compiler::LiveRange"* nocapture readonly, %"class.v8::internal::compiler::LiveRange"* nocapture readonly) local_unnamed_addr #8 align 2 {
  %3 = getelementptr inbounds %"class.v8::internal::compiler::LiveRange", %"class.v8::internal::compiler::LiveRange"* %0, i64 0, i32 3
  %4 = load %"class.v8::internal::compiler::UseInterval"*, %"class.v8::internal::compiler::UseInterval"** %3, align 8
  %5 = getelementptr inbounds %"class.v8::internal::compiler::UseInterval", %"class.v8::internal::compiler::UseInterval"* %4, i64 0, i32 0, i32 0
  %6 = load i32, i32* %5, align 8
  %7 = getelementptr inbounds %"class.v8::internal::compiler::LiveRange", %"class.v8::internal::compiler::LiveRange"* %1, i64 0, i32 3
  %8 = load %"class.v8::internal::compiler::UseInterval"*, %"class.v8::internal::compiler::UseInterval"** %7, align 8
  %9 = getelementptr inbounds %"class.v8::internal::compiler::UseInterval", %"class.v8::internal::compiler::UseInterval"* %8, i64 0, i32 0, i32 0
  %10 = load i32, i32* %9, align 8
  %11 = icmp eq i32 %6, %10
  br i1 %11, label %12, label %62

12:                                               ; preds = %2
  %13 = getelementptr inbounds %"class.v8::internal::compiler::LiveRange", %"class.v8::internal::compiler::LiveRange"* %0, i64 0, i32 1
  %14 = load i32, i32* %13, align 4
  %15 = lshr i32 %14, 22
  %16 = and i32 %15, 63
  %17 = getelementptr inbounds %"class.v8::internal::compiler::LiveRange", %"class.v8::internal::compiler::LiveRange"* %1, i64 0, i32 1
  %18 = load i32, i32* %17, align 4
  %19 = lshr i32 %18, 22
  %20 = and i32 %19, 63
  %21 = icmp ult i32 %16, %20
  br i1 %21, label %64, label %22

22:                                               ; preds = %12
  %23 = icmp ugt i32 %16, %20
  br i1 %23, label %64, label %24

24:                                               ; preds = %22
  %25 = getelementptr inbounds %"class.v8::internal::compiler::LiveRange", %"class.v8::internal::compiler::LiveRange"* %0, i64 0, i32 4
  %26 = load %"class.v8::internal::compiler::UsePosition"*, %"class.v8::internal::compiler::UsePosition"** %25, align 8
  %27 = getelementptr inbounds %"class.v8::internal::compiler::LiveRange", %"class.v8::internal::compiler::LiveRange"* %1, i64 0, i32 4
  %28 = load %"class.v8::internal::compiler::UsePosition"*, %"class.v8::internal::compiler::UsePosition"** %27, align 8
  %29 = icmp eq %"class.v8::internal::compiler::UsePosition"* %26, %28
  br i1 %29, label %30, label %40

30:                                               ; preds = %24
  %31 = getelementptr inbounds %"class.v8::internal::compiler::LiveRange", %"class.v8::internal::compiler::LiveRange"* %0, i64 0, i32 5
  %32 = load %"class.v8::internal::compiler::TopLevelLiveRange"*, %"class.v8::internal::compiler::TopLevelLiveRange"** %31, align 8
  %33 = getelementptr inbounds %"class.v8::internal::compiler::TopLevelLiveRange", %"class.v8::internal::compiler::TopLevelLiveRange"* %32, i64 0, i32 1
  %34 = load i32, i32* %33, align 4
  %35 = getelementptr inbounds %"class.v8::internal::compiler::LiveRange", %"class.v8::internal::compiler::LiveRange"* %1, i64 0, i32 5
  %36 = load %"class.v8::internal::compiler::TopLevelLiveRange"*, %"class.v8::internal::compiler::TopLevelLiveRange"** %35, align 8
  %37 = getelementptr inbounds %"class.v8::internal::compiler::TopLevelLiveRange", %"class.v8::internal::compiler::TopLevelLiveRange"* %36, i64 0, i32 1
  %38 = load i32, i32* %37, align 4
  %39 = icmp slt i32 %34, %38
  br label %64

40:                                               ; preds = %24
  %41 = icmp eq %"class.v8::internal::compiler::UsePosition"* %26, null
  br i1 %41, label %64, label %42

42:                                               ; preds = %40
  %43 = icmp eq %"class.v8::internal::compiler::UsePosition"* %28, null
  br i1 %43, label %64, label %44

44:                                               ; preds = %42
  %45 = getelementptr inbounds %"class.v8::internal::compiler::UsePosition", %"class.v8::internal::compiler::UsePosition"* %26, i64 0, i32 3, i32 0
  %46 = load i32, i32* %45, align 8
  %47 = getelementptr inbounds %"class.v8::internal::compiler::UsePosition", %"class.v8::internal::compiler::UsePosition"* %28, i64 0, i32 3, i32 0
  %48 = load i32, i32* %47, align 8
  %49 = icmp eq i32 %46, %48
  br i1 %49, label %50, label %60

50:                                               ; preds = %44
  %51 = getelementptr inbounds %"class.v8::internal::compiler::LiveRange", %"class.v8::internal::compiler::LiveRange"* %0, i64 0, i32 5
  %52 = load %"class.v8::internal::compiler::TopLevelLiveRange"*, %"class.v8::internal::compiler::TopLevelLiveRange"** %51, align 8
  %53 = getelementptr inbounds %"class.v8::internal::compiler::TopLevelLiveRange", %"class.v8::internal::compiler::TopLevelLiveRange"* %52, i64 0, i32 1
  %54 = load i32, i32* %53, align 4
  %55 = getelementptr inbounds %"class.v8::internal::compiler::LiveRange", %"class.v8::internal::compiler::LiveRange"* %1, i64 0, i32 5
  %56 = load %"class.v8::internal::compiler::TopLevelLiveRange"*, %"class.v8::internal::compiler::TopLevelLiveRange"** %55, align 8
  %57 = getelementptr inbounds %"class.v8::internal::compiler::TopLevelLiveRange", %"class.v8::internal::compiler::TopLevelLiveRange"* %56, i64 0, i32 1
  %58 = load i32, i32* %57, align 4
  %59 = icmp slt i32 %54, %58
  br label %64

60:                                               ; preds = %44
  %61 = icmp slt i32 %46, %48
  br label %64

62:                                               ; preds = %2
  %63 = icmp slt i32 %6, %10
  br label %64

64:                                               ; preds = %30, %50, %60, %40, %42, %22, %12, %62
  %65 = phi i1 [ %63, %62 ], [ true, %12 ], [ false, %22 ], [ %39, %30 ], [ %59, %50 ], [ %61, %60 ], [ false, %40 ], [ true, %42 ]
  ret i1 %65
}

; Function Attrs: nofree norecurse nounwind ssp uwtable
define hidden void @_ZN2v88internal8compiler9LiveRange11SetUseHintsEi(%"class.v8::internal::compiler::LiveRange"* nocapture readonly, i32) local_unnamed_addr #3 align 2 {
  %3 = getelementptr inbounds %"class.v8::internal::compiler::LiveRange", %"class.v8::internal::compiler::LiveRange"* %0, i64 0, i32 4
  %4 = load %"class.v8::internal::compiler::UsePosition"*, %"class.v8::internal::compiler::UsePosition"** %3, align 8
  %5 = icmp eq %"class.v8::internal::compiler::UsePosition"* %4, null
  br i1 %5, label %8, label %6

6:                                                ; preds = %2
  %7 = shl i32 %1, 6
  br label %9

8:                                                ; preds = %22, %2
  ret void

9:                                                ; preds = %6, %22
  %10 = phi %"class.v8::internal::compiler::UsePosition"* [ %4, %6 ], [ %24, %22 ]
  %11 = getelementptr inbounds %"class.v8::internal::compiler::UsePosition", %"class.v8::internal::compiler::UsePosition"* %10, i64 0, i32 0
  %12 = load %"class.v8::internal::compiler::InstructionOperand"*, %"class.v8::internal::compiler::InstructionOperand"** %11, align 8
  %13 = icmp eq %"class.v8::internal::compiler::InstructionOperand"* %12, null
  br i1 %13, label %22, label %14

14:                                               ; preds = %9
  %15 = getelementptr inbounds %"class.v8::internal::compiler::UsePosition", %"class.v8::internal::compiler::UsePosition"* %10, i64 0, i32 4
  %16 = load i32, i32* %15, align 4
  %17 = and i32 %16, 3
  %18 = icmp eq i32 %17, 3
  br i1 %18, label %22, label %19

19:                                               ; preds = %14
  %20 = and i32 %16, -4033
  %21 = or i32 %20, %7
  store i32 %21, i32* %15, align 4
  br label %22

22:                                               ; preds = %14, %9, %19
  %23 = getelementptr inbounds %"class.v8::internal::compiler::UsePosition", %"class.v8::internal::compiler::UsePosition"* %10, i64 0, i32 2
  %24 = load %"class.v8::internal::compiler::UsePosition"*, %"class.v8::internal::compiler::UsePosition"** %23, align 8
  %25 = icmp eq %"class.v8::internal::compiler::UsePosition"* %24, null
  br i1 %25, label %8, label %9
}

; Function Attrs: nounwind readonly ssp uwtable
define hidden zeroext i1 @_ZNK2v88internal8compiler9LiveRange8CanCoverENS1_16LifetimePositionE(%"class.v8::internal::compiler::LiveRange"* nocapture readonly, i32) local_unnamed_addr #8 align 2 {
  %3 = getelementptr inbounds %"class.v8::internal::compiler::LiveRange", %"class.v8::internal::compiler::LiveRange"* %0, i64 0, i32 3
  %4 = load %"class.v8::internal::compiler::UseInterval"*, %"class.v8::internal::compiler::UseInterval"** %3, align 8
  %5 = icmp eq %"class.v8::internal::compiler::UseInterval"* %4, null
  br i1 %5, label %16, label %6

6:                                                ; preds = %2
  %7 = getelementptr inbounds %"class.v8::internal::compiler::UseInterval", %"class.v8::internal::compiler::UseInterval"* %4, i64 0, i32 0, i32 0
  %8 = load i32, i32* %7, align 8
  %9 = icmp sgt i32 %8, %1
  br i1 %9, label %16, label %10

10:                                               ; preds = %6
  %11 = getelementptr inbounds %"class.v8::internal::compiler::LiveRange", %"class.v8::internal::compiler::LiveRange"* %0, i64 0, i32 2
  %12 = load %"class.v8::internal::compiler::UseInterval"*, %"class.v8::internal::compiler::UseInterval"** %11, align 8
  %13 = getelementptr inbounds %"class.v8::internal::compiler::UseInterval", %"class.v8::internal::compiler::UseInterval"* %12, i64 0, i32 1, i32 0
  %14 = load i32, i32* %13, align 4
  %15 = icmp sgt i32 %14, %1
  br label %16

16:                                               ; preds = %6, %10, %2
  %17 = phi i1 [ false, %2 ], [ false, %6 ], [ %15, %10 ]
  ret i1 %17
}

; Function Attrs: nounwind ssp uwtable
define hidden zeroext i1 @_ZNK2v88internal8compiler9LiveRange6CoversENS1_16LifetimePositionE(%"class.v8::internal::compiler::LiveRange"* nocapture, i32) local_unnamed_addr #0 align 2 {
  %3 = getelementptr inbounds %"class.v8::internal::compiler::LiveRange", %"class.v8::internal::compiler::LiveRange"* %0, i64 0, i32 3
  %4 = load %"class.v8::internal::compiler::UseInterval"*, %"class.v8::internal::compiler::UseInterval"** %3, align 8
  %5 = icmp eq %"class.v8::internal::compiler::UseInterval"* %4, null
  br i1 %5, label %56, label %6

6:                                                ; preds = %2
  %7 = getelementptr inbounds %"class.v8::internal::compiler::UseInterval", %"class.v8::internal::compiler::UseInterval"* %4, i64 0, i32 0, i32 0
  %8 = load i32, i32* %7, align 8
  %9 = icmp sgt i32 %8, %1
  br i1 %9, label %56, label %10

10:                                               ; preds = %6
  %11 = getelementptr inbounds %"class.v8::internal::compiler::LiveRange", %"class.v8::internal::compiler::LiveRange"* %0, i64 0, i32 2
  %12 = load %"class.v8::internal::compiler::UseInterval"*, %"class.v8::internal::compiler::UseInterval"** %11, align 8
  %13 = getelementptr inbounds %"class.v8::internal::compiler::UseInterval", %"class.v8::internal::compiler::UseInterval"* %12, i64 0, i32 1, i32 0
  %14 = load i32, i32* %13, align 4
  %15 = icmp sgt i32 %14, %1
  br i1 %15, label %16, label %56

16:                                               ; preds = %10
  %17 = getelementptr inbounds %"class.v8::internal::compiler::LiveRange", %"class.v8::internal::compiler::LiveRange"* %0, i64 0, i32 7
  %18 = load %"class.v8::internal::compiler::UseInterval"*, %"class.v8::internal::compiler::UseInterval"** %17, align 8
  %19 = icmp eq %"class.v8::internal::compiler::UseInterval"* %18, null
  br i1 %19, label %25, label %20

20:                                               ; preds = %16
  %21 = getelementptr inbounds %"class.v8::internal::compiler::UseInterval", %"class.v8::internal::compiler::UseInterval"* %18, i64 0, i32 0, i32 0
  %22 = load i32, i32* %21, align 8
  %23 = icmp sgt i32 %22, %1
  br i1 %23, label %24, label %25

24:                                               ; preds = %20
  store %"class.v8::internal::compiler::UseInterval"* null, %"class.v8::internal::compiler::UseInterval"** %17, align 8
  br label %25

25:                                               ; preds = %16, %20, %24
  %26 = phi %"class.v8::internal::compiler::UseInterval"** [ %3, %24 ], [ %17, %20 ], [ %3, %16 ]
  %27 = load %"class.v8::internal::compiler::UseInterval"*, %"class.v8::internal::compiler::UseInterval"** %26, align 8
  %28 = icmp eq %"class.v8::internal::compiler::UseInterval"* %27, null
  br i1 %28, label %56, label %33

29:                                               ; preds = %52
  %30 = getelementptr inbounds %"class.v8::internal::compiler::UseInterval", %"class.v8::internal::compiler::UseInterval"* %34, i64 0, i32 2
  %31 = load %"class.v8::internal::compiler::UseInterval"*, %"class.v8::internal::compiler::UseInterval"** %30, align 8
  %32 = icmp eq %"class.v8::internal::compiler::UseInterval"* %31, null
  br i1 %32, label %56, label %33

33:                                               ; preds = %25, %29
  %34 = phi %"class.v8::internal::compiler::UseInterval"* [ %31, %29 ], [ %27, %25 ]
  %35 = getelementptr inbounds %"class.v8::internal::compiler::UseInterval", %"class.v8::internal::compiler::UseInterval"* %34, i64 0, i32 0, i32 0
  %36 = load i32, i32* %35, align 8
  %37 = icmp sgt i32 %36, %1
  br i1 %37, label %49, label %38

38:                                               ; preds = %33
  %39 = load %"class.v8::internal::compiler::UseInterval"*, %"class.v8::internal::compiler::UseInterval"** %17, align 8
  %40 = icmp eq %"class.v8::internal::compiler::UseInterval"* %39, null
  br i1 %40, label %44, label %41

41:                                               ; preds = %38
  %42 = getelementptr inbounds %"class.v8::internal::compiler::UseInterval", %"class.v8::internal::compiler::UseInterval"* %39, i64 0, i32 0, i32 0
  %43 = load i32, i32* %42, align 8
  br label %44

44:                                               ; preds = %41, %38
  %45 = phi i32 [ %43, %41 ], [ -1, %38 ]
  %46 = icmp sgt i32 %36, %45
  br i1 %46, label %47, label %49

47:                                               ; preds = %44
  store %"class.v8::internal::compiler::UseInterval"* %34, %"class.v8::internal::compiler::UseInterval"** %17, align 8
  %48 = load i32, i32* %35, align 4
  br label %49

49:                                               ; preds = %33, %44, %47
  %50 = phi i32 [ %36, %33 ], [ %36, %44 ], [ %48, %47 ]
  %51 = icmp sgt i32 %50, %1
  br i1 %51, label %56, label %52

52:                                               ; preds = %49
  %53 = getelementptr inbounds %"class.v8::internal::compiler::UseInterval", %"class.v8::internal::compiler::UseInterval"* %34, i64 0, i32 1, i32 0
  %54 = load i32, i32* %53, align 4
  %55 = icmp sgt i32 %54, %1
  br i1 %55, label %56, label %29

56:                                               ; preds = %29, %52, %49, %25, %6, %2, %10
  %57 = phi i1 [ false, %10 ], [ false, %2 ], [ false, %6 ], [ false, %25 ], [ false, %29 ], [ true, %52 ], [ false, %49 ]
  ret i1 %57
}

; Function Attrs: nounwind ssp uwtable
define hidden i32 @_ZNK2v88internal8compiler9LiveRange12NextEndAfterENS1_16LifetimePositionE(%"class.v8::internal::compiler::LiveRange"* nocapture, i32) local_unnamed_addr #0 align 2 {
  %3 = getelementptr inbounds %"class.v8::internal::compiler::LiveRange", %"class.v8::internal::compiler::LiveRange"* %0, i64 0, i32 7
  %4 = load %"class.v8::internal::compiler::UseInterval"*, %"class.v8::internal::compiler::UseInterval"** %3, align 8
  %5 = icmp eq %"class.v8::internal::compiler::UseInterval"* %4, null
  br i1 %5, label %6, label %8

6:                                                ; preds = %2
  %7 = getelementptr inbounds %"class.v8::internal::compiler::LiveRange", %"class.v8::internal::compiler::LiveRange"* %0, i64 0, i32 3
  br label %14

8:                                                ; preds = %2
  %9 = getelementptr inbounds %"class.v8::internal::compiler::UseInterval", %"class.v8::internal::compiler::UseInterval"* %4, i64 0, i32 0, i32 0
  %10 = load i32, i32* %9, align 8
  %11 = icmp sgt i32 %10, %1
  br i1 %11, label %12, label %14

12:                                               ; preds = %8
  store %"class.v8::internal::compiler::UseInterval"* null, %"class.v8::internal::compiler::UseInterval"** %3, align 8
  %13 = getelementptr inbounds %"class.v8::internal::compiler::LiveRange", %"class.v8::internal::compiler::LiveRange"* %0, i64 0, i32 3
  br label %14

14:                                               ; preds = %6, %8, %12
  %15 = phi %"class.v8::internal::compiler::UseInterval"** [ %3, %8 ], [ %13, %12 ], [ %7, %6 ]
  br label %16

16:                                               ; preds = %14, %16
  %17 = phi %"class.v8::internal::compiler::UseInterval"** [ %22, %16 ], [ %15, %14 ]
  %18 = load %"class.v8::internal::compiler::UseInterval"*, %"class.v8::internal::compiler::UseInterval"** %17, align 8
  %19 = getelementptr inbounds %"class.v8::internal::compiler::UseInterval", %"class.v8::internal::compiler::UseInterval"* %18, i64 0, i32 1, i32 0
  %20 = load i32, i32* %19, align 4
  %21 = icmp slt i32 %20, %1
  %22 = getelementptr inbounds %"class.v8::internal::compiler::UseInterval", %"class.v8::internal::compiler::UseInterval"* %18, i64 0, i32 2
  br i1 %21, label %16, label %23

23:                                               ; preds = %16
  ret i32 %20
}

; Function Attrs: nounwind ssp uwtable
define hidden i32 @_ZN2v88internal8compiler9LiveRange14NextStartAfterENS1_16LifetimePositionE(%"class.v8::internal::compiler::LiveRange"* nocapture, i32) local_unnamed_addr #0 align 2 {
  %3 = getelementptr inbounds %"class.v8::internal::compiler::LiveRange", %"class.v8::internal::compiler::LiveRange"* %0, i64 0, i32 7
  %4 = load %"class.v8::internal::compiler::UseInterval"*, %"class.v8::internal::compiler::UseInterval"** %3, align 8
  %5 = icmp eq %"class.v8::internal::compiler::UseInterval"* %4, null
  br i1 %5, label %6, label %8

6:                                                ; preds = %2
  %7 = getelementptr inbounds %"class.v8::internal::compiler::LiveRange", %"class.v8::internal::compiler::LiveRange"* %0, i64 0, i32 3
  br label %14

8:                                                ; preds = %2
  %9 = getelementptr inbounds %"class.v8::internal::compiler::UseInterval", %"class.v8::internal::compiler::UseInterval"* %4, i64 0, i32 0, i32 0
  %10 = load i32, i32* %9, align 8
  %11 = icmp sgt i32 %10, %1
  br i1 %11, label %12, label %14

12:                                               ; preds = %8
  store %"class.v8::internal::compiler::UseInterval"* null, %"class.v8::internal::compiler::UseInterval"** %3, align 8
  %13 = getelementptr inbounds %"class.v8::internal::compiler::LiveRange", %"class.v8::internal::compiler::LiveRange"* %0, i64 0, i32 3
  br label %14

14:                                               ; preds = %6, %8, %12
  %15 = phi %"class.v8::internal::compiler::UseInterval"** [ %3, %8 ], [ %13, %12 ], [ %7, %6 ]
  br label %16

16:                                               ; preds = %14, %16
  %17 = phi %"class.v8::internal::compiler::UseInterval"** [ %22, %16 ], [ %15, %14 ]
  %18 = load %"class.v8::internal::compiler::UseInterval"*, %"class.v8::internal::compiler::UseInterval"** %17, align 8
  %19 = getelementptr inbounds %"class.v8::internal::compiler::UseInterval", %"class.v8::internal::compiler::UseInterval"* %18, i64 0, i32 0, i32 0
  %20 = load i32, i32* %19, align 8
  %21 = icmp slt i32 %20, %1
  %22 = getelementptr inbounds %"class.v8::internal::compiler::UseInterval", %"class.v8::internal::compiler::UseInterval"* %18, i64 0, i32 2
  br i1 %21, label %16, label %23

23:                                               ; preds = %16
  %24 = getelementptr inbounds %"class.v8::internal::compiler::LiveRange", %"class.v8::internal::compiler::LiveRange"* %0, i64 0, i32 11, i32 0
  store i32 %20, i32* %24, align 8
  ret i32 %20
}

; Function Attrs: nounwind ssp uwtable
define hidden i32 @_ZNK2v88internal8compiler9LiveRange17FirstIntersectionEPS2_(%"class.v8::internal::compiler::LiveRange"* nocapture, %"class.v8::internal::compiler::LiveRange"* nocapture readonly) local_unnamed_addr #0 align 2 {
  %3 = getelementptr inbounds %"class.v8::internal::compiler::LiveRange", %"class.v8::internal::compiler::LiveRange"* %1, i64 0, i32 3
  %4 = load %"class.v8::internal::compiler::UseInterval"*, %"class.v8::internal::compiler::UseInterval"** %3, align 8
  %5 = icmp eq %"class.v8::internal::compiler::UseInterval"* %4, null
  br i1 %5, label %91, label %6

6:                                                ; preds = %2
  %7 = getelementptr inbounds %"class.v8::internal::compiler::UseInterval", %"class.v8::internal::compiler::UseInterval"* %4, i64 0, i32 0, i32 0
  %8 = load i32, i32* %7, align 8
  %9 = getelementptr inbounds %"class.v8::internal::compiler::LiveRange", %"class.v8::internal::compiler::LiveRange"* %0, i64 0, i32 7
  %10 = load %"class.v8::internal::compiler::UseInterval"*, %"class.v8::internal::compiler::UseInterval"** %9, align 8
  %11 = icmp eq %"class.v8::internal::compiler::UseInterval"* %10, null
  br i1 %11, label %12, label %14

12:                                               ; preds = %6
  %13 = getelementptr inbounds %"class.v8::internal::compiler::LiveRange", %"class.v8::internal::compiler::LiveRange"* %0, i64 0, i32 3
  br label %20

14:                                               ; preds = %6
  %15 = getelementptr inbounds %"class.v8::internal::compiler::UseInterval", %"class.v8::internal::compiler::UseInterval"* %10, i64 0, i32 0, i32 0
  %16 = load i32, i32* %15, align 8
  %17 = icmp sgt i32 %16, %8
  br i1 %17, label %18, label %20

18:                                               ; preds = %14
  store %"class.v8::internal::compiler::UseInterval"* null, %"class.v8::internal::compiler::UseInterval"** %9, align 8
  %19 = getelementptr inbounds %"class.v8::internal::compiler::LiveRange", %"class.v8::internal::compiler::LiveRange"* %0, i64 0, i32 3
  br label %20

20:                                               ; preds = %12, %14, %18
  %21 = phi %"class.v8::internal::compiler::UseInterval"** [ %13, %12 ], [ %19, %18 ], [ %9, %14 ]
  %22 = load %"class.v8::internal::compiler::UseInterval"*, %"class.v8::internal::compiler::UseInterval"** %21, align 8
  %23 = icmp eq %"class.v8::internal::compiler::UseInterval"* %22, null
  br i1 %23, label %91, label %24

24:                                               ; preds = %20
  %25 = getelementptr inbounds %"class.v8::internal::compiler::LiveRange", %"class.v8::internal::compiler::LiveRange"* %1, i64 0, i32 2
  %26 = getelementptr inbounds %"class.v8::internal::compiler::LiveRange", %"class.v8::internal::compiler::LiveRange"* %0, i64 0, i32 2
  br label %27

27:                                               ; preds = %24, %85
  %28 = phi %"class.v8::internal::compiler::UseInterval"* [ %4, %24 ], [ %87, %85 ]
  %29 = phi %"class.v8::internal::compiler::UseInterval"* [ %22, %24 ], [ %86, %85 ]
  %30 = getelementptr inbounds %"class.v8::internal::compiler::UseInterval", %"class.v8::internal::compiler::UseInterval"* %29, i64 0, i32 0, i32 0
  %31 = load i32, i32* %30, align 8
  %32 = load %"class.v8::internal::compiler::UseInterval"*, %"class.v8::internal::compiler::UseInterval"** %25, align 8
  %33 = getelementptr inbounds %"class.v8::internal::compiler::UseInterval", %"class.v8::internal::compiler::UseInterval"* %32, i64 0, i32 1, i32 0
  %34 = load i32, i32* %33, align 4
  %35 = icmp sgt i32 %31, %34
  br i1 %35, label %91, label %36

36:                                               ; preds = %27
  %37 = getelementptr inbounds %"class.v8::internal::compiler::UseInterval", %"class.v8::internal::compiler::UseInterval"* %28, i64 0, i32 0, i32 0
  %38 = load i32, i32* %37, align 8
  %39 = load %"class.v8::internal::compiler::UseInterval"*, %"class.v8::internal::compiler::UseInterval"** %26, align 8
  %40 = getelementptr inbounds %"class.v8::internal::compiler::UseInterval", %"class.v8::internal::compiler::UseInterval"* %39, i64 0, i32 1, i32 0
  %41 = load i32, i32* %40, align 4
  %42 = icmp sgt i32 %38, %41
  br i1 %42, label %91, label %43

43:                                               ; preds = %36
  %44 = icmp slt i32 %38, %31
  br i1 %44, label %45, label %52

45:                                               ; preds = %43, %45
  %46 = phi %"class.v8::internal::compiler::UseInterval"* [ %47, %45 ], [ %28, %43 ]
  %47 = phi %"class.v8::internal::compiler::UseInterval"* [ %46, %45 ], [ %29, %43 ]
  %48 = phi i32 [ %50, %45 ], [ %31, %43 ]
  %49 = getelementptr inbounds %"class.v8::internal::compiler::UseInterval", %"class.v8::internal::compiler::UseInterval"* %46, i64 0, i32 0, i32 0
  %50 = load i32, i32* %49, align 4
  %51 = icmp slt i32 %48, %50
  br i1 %51, label %45, label %52

52:                                               ; preds = %45, %43
  %53 = phi i32 [ %38, %43 ], [ %48, %45 ]
  %54 = phi %"class.v8::internal::compiler::UseInterval"* [ %29, %43 ], [ %46, %45 ]
  %55 = getelementptr inbounds %"class.v8::internal::compiler::UseInterval", %"class.v8::internal::compiler::UseInterval"* %54, i64 0, i32 1, i32 0
  %56 = load i32, i32* %55, align 4
  %57 = icmp slt i32 %53, %56
  %58 = icmp ne i32 %53, -1
  %59 = and i1 %58, %57
  br i1 %59, label %91, label %60

60:                                               ; preds = %52
  %61 = icmp slt i32 %31, %38
  br i1 %61, label %62, label %82

62:                                               ; preds = %60
  %63 = getelementptr inbounds %"class.v8::internal::compiler::UseInterval", %"class.v8::internal::compiler::UseInterval"* %29, i64 0, i32 2
  %64 = load %"class.v8::internal::compiler::UseInterval"*, %"class.v8::internal::compiler::UseInterval"** %63, align 8
  %65 = icmp eq %"class.v8::internal::compiler::UseInterval"* %64, null
  br i1 %65, label %91, label %66

66:                                               ; preds = %62
  %67 = getelementptr inbounds %"class.v8::internal::compiler::UseInterval", %"class.v8::internal::compiler::UseInterval"* %64, i64 0, i32 0, i32 0
  %68 = load i32, i32* %67, align 8
  %69 = icmp sgt i32 %68, %34
  br i1 %69, label %91, label %70

70:                                               ; preds = %66
  %71 = icmp sgt i32 %68, %8
  br i1 %71, label %85, label %72

72:                                               ; preds = %70
  %73 = load %"class.v8::internal::compiler::UseInterval"*, %"class.v8::internal::compiler::UseInterval"** %9, align 8
  %74 = icmp eq %"class.v8::internal::compiler::UseInterval"* %73, null
  br i1 %74, label %78, label %75

75:                                               ; preds = %72
  %76 = getelementptr inbounds %"class.v8::internal::compiler::UseInterval", %"class.v8::internal::compiler::UseInterval"* %73, i64 0, i32 0, i32 0
  %77 = load i32, i32* %76, align 8
  br label %78

78:                                               ; preds = %75, %72
  %79 = phi i32 [ %77, %75 ], [ -1, %72 ]
  %80 = icmp sgt i32 %68, %79
  br i1 %80, label %81, label %85

81:                                               ; preds = %78
  store %"class.v8::internal::compiler::UseInterval"* %64, %"class.v8::internal::compiler::UseInterval"** %9, align 8
  br label %85

82:                                               ; preds = %60
  %83 = getelementptr inbounds %"class.v8::internal::compiler::UseInterval", %"class.v8::internal::compiler::UseInterval"* %28, i64 0, i32 2
  %84 = load %"class.v8::internal::compiler::UseInterval"*, %"class.v8::internal::compiler::UseInterval"** %83, align 8
  br label %85

85:                                               ; preds = %81, %78, %70, %82
  %86 = phi %"class.v8::internal::compiler::UseInterval"* [ %29, %82 ], [ %64, %70 ], [ %64, %78 ], [ %64, %81 ]
  %87 = phi %"class.v8::internal::compiler::UseInterval"* [ %84, %82 ], [ %28, %70 ], [ %28, %78 ], [ %28, %81 ]
  %88 = icmp ne %"class.v8::internal::compiler::UseInterval"* %86, null
  %89 = icmp ne %"class.v8::internal::compiler::UseInterval"* %87, null
  %90 = and i1 %88, %89
  br i1 %90, label %27, label %91

91:                                               ; preds = %52, %62, %66, %36, %27, %85, %20, %2
  %92 = phi i32 [ -1, %2 ], [ -1, %20 ], [ %53, %52 ], [ -1, %62 ], [ -1, %66 ], [ -1, %36 ], [ -1, %27 ], [ -1, %85 ]
  ret i32 %92
}

; Function Attrs: nounwind ssp uwtable
define hidden void @_ZNK2v88internal8compiler9LiveRange5PrintEPKNS0_21RegisterConfigurationEb(%"class.v8::internal::compiler::LiveRange"*, %"class.v8::internal::RegisterConfiguration"*, i1 zeroext) local_unnamed_addr #0 align 2 {
  %4 = alloca %"class.std::__1::locale", align 8
  %5 = alloca %"class.v8::internal::StdoutStream", align 8
  %6 = alloca %"struct.v8::internal::compiler::PrintableLiveRange", align 8
  %7 = bitcast %"class.v8::internal::StdoutStream"* %5 to i8*
  call void @llvm.lifetime.start.p0i8(i64 240, i8* nonnull %7) #16
  %8 = getelementptr inbounds %"class.v8::internal::StdoutStream", %"class.v8::internal::StdoutStream"* %5, i64 0, i32 2, i32 0, i32 0
  store i32 (...)** bitcast (i8** getelementptr inbounds ({ [4 x i8*] }, { [4 x i8*] }* @_ZTVNSt3__19basic_iosIcNS_11char_traitsIcEEEE, i64 0, inrange i32 0, i64 2) to i32 (...)**), i32 (...)*** %8, align 8
  %9 = bitcast %"class.v8::internal::StdoutStream"* %5 to %"class.v8::internal::OFStream"*
  %10 = load %struct._IO_FILE*, %struct._IO_FILE** @stdout, align 8
  call void @_ZN2v88internal8OFStreamC2EP8_IO_FILE(%"class.v8::internal::OFStream"* nonnull %9, i8** getelementptr inbounds ([6 x i8*], [6 x i8*]* @_ZTTN2v88internal12StdoutStreamE, i64 0, i64 1), %struct._IO_FILE* %10) #16
  %11 = getelementptr inbounds %"class.v8::internal::StdoutStream", %"class.v8::internal::StdoutStream"* %5, i64 0, i32 0, i32 0, i32 0
  store i32 (...)** bitcast (i8** getelementptr inbounds ({ [5 x i8*], [5 x i8*] }, { [5 x i8*], [5 x i8*] }* @_ZTVN2v88internal12StdoutStreamE, i64 0, inrange i32 0, i64 3) to i32 (...)**), i32 (...)*** %11, align 8
  store i32 (...)** bitcast (i8** getelementptr inbounds ({ [5 x i8*], [5 x i8*] }, { [5 x i8*], [5 x i8*] }* @_ZTVN2v88internal12StdoutStreamE, i64 0, inrange i32 1, i64 3) to i32 (...)**), i32 (...)*** %8, align 8
  %12 = call %"class.v8::base::RecursiveMutex"* @_ZN2v88internal12StdoutStream14GetStdoutMutexEv() #16
  %13 = getelementptr inbounds %"class.v8::internal::StdoutStream", %"class.v8::internal::StdoutStream"* %5, i64 0, i32 1, i32 0
  store %"class.v8::base::RecursiveMutex"* %12, %"class.v8::base::RecursiveMutex"** %13, align 8
  call void @_ZN2v84base14RecursiveMutex4LockEv(%"class.v8::base::RecursiveMutex"* %12) #16
  %14 = bitcast %"struct.v8::internal::compiler::PrintableLiveRange"* %6 to i8*
  call void @llvm.lifetime.start.p0i8(i64 16, i8* nonnull %14) #16
  %15 = getelementptr inbounds %"struct.v8::internal::compiler::PrintableLiveRange", %"struct.v8::internal::compiler::PrintableLiveRange"* %6, i64 0, i32 0
  store %"class.v8::internal::RegisterConfiguration"* %1, %"class.v8::internal::RegisterConfiguration"** %15, align 8
  %16 = icmp eq %"class.v8::internal::compiler::LiveRange"* %0, null
  br i1 %16, label %17, label %19

17:                                               ; preds = %3
  %18 = bitcast %"class.v8::internal::StdoutStream"* %5 to %"class.std::__1::basic_ostream"*
  br label %65

19:                                               ; preds = %3
  %20 = getelementptr inbounds %"struct.v8::internal::compiler::PrintableLiveRange", %"struct.v8::internal::compiler::PrintableLiveRange"* %6, i64 0, i32 1
  %21 = bitcast %"class.v8::internal::StdoutStream"* %5 to %"class.std::__1::basic_ostream"*
  %22 = bitcast %"class.std::__1::locale"* %4 to i8*
  br i1 %2, label %23, label %46

23:                                               ; preds = %19, %23
  %24 = phi %"class.v8::internal::compiler::LiveRange"* [ %44, %23 ], [ %0, %19 ]
  store %"class.v8::internal::compiler::LiveRange"* %24, %"class.v8::internal::compiler::LiveRange"** %20, align 8
  %25 = call dereferenceable(160) %"class.std::__1::basic_ostream"* @_ZN2v88internal8compilerlsERNSt3__113basic_ostreamIcNS2_11char_traitsIcEEEERKNS1_18PrintableLiveRangeE(%"class.std::__1::basic_ostream"* nonnull dereferenceable(160) %21, %"struct.v8::internal::compiler::PrintableLiveRange"* nonnull dereferenceable(16) %6)
  %26 = bitcast %"class.std::__1::basic_ostream"* %25 to i8**
  %27 = load i8*, i8** %26, align 8
  %28 = getelementptr i8, i8* %27, i64 -24
  %29 = bitcast i8* %28 to i64*
  %30 = load i64, i64* %29, align 8
  %31 = bitcast %"class.std::__1::basic_ostream"* %25 to i8*
  %32 = getelementptr inbounds i8, i8* %31, i64 %30
  call void @llvm.lifetime.start.p0i8(i64 8, i8* nonnull %22) #16
  %33 = bitcast i8* %32 to %"class.std::__1::ios_base"*
  call void @_ZNKSt3__18ios_base6getlocEv(%"class.std::__1::locale"* nonnull sret %4, %"class.std::__1::ios_base"* %33) #16
  %34 = call %"class.std::__1::locale::facet"* @_ZNKSt3__16locale9use_facetERNS0_2idE(%"class.std::__1::locale"* nonnull %4, %"class.std::__1::locale::id"* nonnull dereferenceable(16) @_ZNSt3__15ctypeIcE2idE) #16
  %35 = bitcast %"class.std::__1::locale::facet"* %34 to %"class.std::__1::ctype"*
  %36 = bitcast %"class.std::__1::locale::facet"* %34 to i8 (%"class.std::__1::ctype"*, i8)***
  %37 = load i8 (%"class.std::__1::ctype"*, i8)**, i8 (%"class.std::__1::ctype"*, i8)*** %36, align 8
  %38 = getelementptr inbounds i8 (%"class.std::__1::ctype"*, i8)*, i8 (%"class.std::__1::ctype"*, i8)** %37, i64 7
  %39 = load i8 (%"class.std::__1::ctype"*, i8)*, i8 (%"class.std::__1::ctype"*, i8)** %38, align 8
  %40 = call signext i8 %39(%"class.std::__1::ctype"* %35, i8 signext 10) #16
  call void @_ZNSt3__16localeD1Ev(%"class.std::__1::locale"* nonnull %4) #16
  call void @llvm.lifetime.end.p0i8(i64 8, i8* nonnull %22) #16
  %41 = call dereferenceable(160) %"class.std::__1::basic_ostream"* @_ZNSt3__113basic_ostreamIcNS_11char_traitsIcEEE3putEc(%"class.std::__1::basic_ostream"* nonnull %25, i8 signext %40) #16
  %42 = call dereferenceable(160) %"class.std::__1::basic_ostream"* @_ZNSt3__113basic_ostreamIcNS_11char_traitsIcEEE5flushEv(%"class.std::__1::basic_ostream"* nonnull %25) #16
  %43 = getelementptr inbounds %"class.v8::internal::compiler::LiveRange", %"class.v8::internal::compiler::LiveRange"* %24, i64 0, i32 6
  %44 = load %"class.v8::internal::compiler::LiveRange"*, %"class.v8::internal::compiler::LiveRange"** %43, align 8
  %45 = icmp eq %"class.v8::internal::compiler::LiveRange"* %44, null
  br i1 %45, label %65, label %23

46:                                               ; preds = %19
  store %"class.v8::internal::compiler::LiveRange"* %0, %"class.v8::internal::compiler::LiveRange"** %20, align 8
  %47 = call dereferenceable(160) %"class.std::__1::basic_ostream"* @_ZN2v88internal8compilerlsERNSt3__113basic_ostreamIcNS2_11char_traitsIcEEEERKNS1_18PrintableLiveRangeE(%"class.std::__1::basic_ostream"* nonnull dereferenceable(160) %21, %"struct.v8::internal::compiler::PrintableLiveRange"* nonnull dereferenceable(16) %6)
  %48 = bitcast %"class.std::__1::basic_ostream"* %47 to i8**
  %49 = load i8*, i8** %48, align 8
  %50 = getelementptr i8, i8* %49, i64 -24
  %51 = bitcast i8* %50 to i64*
  %52 = load i64, i64* %51, align 8
  %53 = bitcast %"class.std::__1::basic_ostream"* %47 to i8*
  %54 = getelementptr inbounds i8, i8* %53, i64 %52
  call void @llvm.lifetime.start.p0i8(i64 8, i8* nonnull %22) #16
  %55 = bitcast i8* %54 to %"class.std::__1::ios_base"*
  call void @_ZNKSt3__18ios_base6getlocEv(%"class.std::__1::locale"* nonnull sret %4, %"class.std::__1::ios_base"* %55) #16
  %56 = call %"class.std::__1::locale::facet"* @_ZNKSt3__16locale9use_facetERNS0_2idE(%"class.std::__1::locale"* nonnull %4, %"class.std::__1::locale::id"* nonnull dereferenceable(16) @_ZNSt3__15ctypeIcE2idE) #16
  %57 = bitcast %"class.std::__1::locale::facet"* %56 to %"class.std::__1::ctype"*
  %58 = bitcast %"class.std::__1::locale::facet"* %56 to i8 (%"class.std::__1::ctype"*, i8)***
  %59 = load i8 (%"class.std::__1::ctype"*, i8)**, i8 (%"class.std::__1::ctype"*, i8)*** %58, align 8
  %60 = getelementptr inbounds i8 (%"class.std::__1::ctype"*, i8)*, i8 (%"class.std::__1::ctype"*, i8)** %59, i64 7
  %61 = load i8 (%"class.std::__1::ctype"*, i8)*, i8 (%"class.std::__1::ctype"*, i8)** %60, align 8
  %62 = call signext i8 %61(%"class.std::__1::ctype"* %57, i8 signext 10) #16
  call void @_ZNSt3__16localeD1Ev(%"class.std::__1::locale"* nonnull %4) #16
  call void @llvm.lifetime.end.p0i8(i64 8, i8* nonnull %22) #16
  %63 = call dereferenceable(160) %"class.std::__1::basic_ostream"* @_ZNSt3__113basic_ostreamIcNS_11char_traitsIcEEE3putEc(%"class.std::__1::basic_ostream"* nonnull %47, i8 signext %62) #16
  %64 = call dereferenceable(160) %"class.std::__1::basic_ostream"* @_ZNSt3__113basic_ostreamIcNS_11char_traitsIcEEE5flushEv(%"class.std::__1::basic_ostream"* nonnull %47) #16
  br label %65

65:                                               ; preds = %23, %17, %46
  %66 = phi %"class.std::__1::basic_ostream"* [ %18, %17 ], [ %21, %46 ], [ %21, %23 ]
  call void @llvm.lifetime.end.p0i8(i64 16, i8* nonnull %14) #16
  %67 = bitcast %"class.v8::internal::StdoutStream"* %5 to i64*
  store i64 ptrtoint (i8** getelementptr inbounds ({ [5 x i8*], [5 x i8*] }, { [5 x i8*], [5 x i8*] }* @_ZTVN2v88internal12StdoutStreamE, i64 0, inrange i32 0, i64 3) to i64), i64* %67, align 8
  %68 = getelementptr inbounds %"class.v8::internal::StdoutStream", %"class.v8::internal::StdoutStream"* %5, i64 0, i32 2
  %69 = bitcast %"class.std::__1::basic_ios.base"* %68 to i64*
  store i64 ptrtoint (i8** getelementptr inbounds ({ [5 x i8*], [5 x i8*] }, { [5 x i8*], [5 x i8*] }* @_ZTVN2v88internal12StdoutStreamE, i64 0, inrange i32 1, i64 3) to i64), i64* %69, align 8
  %70 = load %"class.v8::base::RecursiveMutex"*, %"class.v8::base::RecursiveMutex"** %13, align 8
  call void @_ZN2v84base14RecursiveMutex6UnlockEv(%"class.v8::base::RecursiveMutex"* %70) #16
  store i64 ptrtoint (i8** getelementptr inbounds ({ [5 x i8*], [5 x i8*] }, { [5 x i8*], [5 x i8*] }* @_ZTCN2v88internal12StdoutStreamE0_NS0_8OFStreamE, i64 0, inrange i32 0, i64 3) to i64), i64* %67, align 8
  store i64 ptrtoint (i8** getelementptr inbounds ({ [5 x i8*], [5 x i8*] }, { [5 x i8*], [5 x i8*] }* @_ZTCN2v88internal12StdoutStreamE0_NS0_8OFStreamE, i64 0, inrange i32 1, i64 3) to i64), i64* %69, align 8
  %71 = getelementptr inbounds %"class.v8::internal::StdoutStream", %"class.v8::internal::StdoutStream"* %5, i64 0, i32 0, i32 1, i32 0
  call void @_ZNSt3__115basic_streambufIcNS_11char_traitsIcEEED2Ev(%"class.std::__1::basic_streambuf"* %71) #16
  call void @_ZNSt3__113basic_ostreamIcNS_11char_traitsIcEEED2Ev(%"class.std::__1::basic_ostream"* nonnull %66, i8** getelementptr inbounds ([6 x i8*], [6 x i8*]* @_ZTTN2v88internal12StdoutStreamE, i64 0, i64 2)) #16
  %72 = bitcast %"class.std::__1::basic_ios.base"* %68 to %"class.std::__1::basic_ios"*
  call void @_ZNSt3__19basic_iosIcNS_11char_traitsIcEEED2Ev(%"class.std::__1::basic_ios"* %72) #16
  call void @llvm.lifetime.end.p0i8(i64 240, i8* nonnull %7) #16
  ret void
}

; Function Attrs: nounwind ssp uwtable
define hidden dereferenceable(160) %"class.std::__1::basic_ostream"* @_ZN2v88internal8compilerlsERNSt3__113basic_ostreamIcNS2_11char_traitsIcEEEERKNS1_18PrintableLiveRangeE(%"class.std::__1::basic_ostream"* returned dereferenceable(160), %"struct.v8::internal::compiler::PrintableLiveRange"* nocapture readonly dereferenceable(16)) local_unnamed_addr #0 {
  %3 = alloca i8, align 1
  %4 = alloca i8, align 1
  %5 = alloca %"class.std::__1::locale", align 8
  %6 = alloca %"class.std::__1::locale", align 8
  %7 = alloca %"class.std::__1::locale", align 8
  %8 = getelementptr inbounds %"struct.v8::internal::compiler::PrintableLiveRange", %"struct.v8::internal::compiler::PrintableLiveRange"* %1, i64 0, i32 1
  %9 = load %"class.v8::internal::compiler::LiveRange"*, %"class.v8::internal::compiler::LiveRange"** %8, align 8
  %10 = tail call dereferenceable(160) %"class.std::__1::basic_ostream"* @_ZNSt3__124__put_character_sequenceIcNS_11char_traitsIcEEEERNS_13basic_ostreamIT_T0_EES7_PKS4_m(%"class.std::__1::basic_ostream"* dereferenceable(160) %0, i8* getelementptr inbounds ([8 x i8], [8 x i8]* @.str.9, i64 0, i64 0), i64 7) #16
  %11 = getelementptr inbounds %"class.v8::internal::compiler::LiveRange", %"class.v8::internal::compiler::LiveRange"* %9, i64 0, i32 5
  %12 = load %"class.v8::internal::compiler::TopLevelLiveRange"*, %"class.v8::internal::compiler::TopLevelLiveRange"** %11, align 8
  %13 = getelementptr inbounds %"class.v8::internal::compiler::TopLevelLiveRange", %"class.v8::internal::compiler::TopLevelLiveRange"* %12, i64 0, i32 1
  %14 = load i32, i32* %13, align 4
  %15 = tail call dereferenceable(160) %"class.std::__1::basic_ostream"* @_ZNSt3__113basic_ostreamIcNS_11char_traitsIcEEElsEi(%"class.std::__1::basic_ostream"* %10, i32 %14) #16
  %16 = tail call dereferenceable(160) %"class.std::__1::basic_ostream"* @_ZNSt3__124__put_character_sequenceIcNS_11char_traitsIcEEEERNS_13basic_ostreamIT_T0_EES7_PKS4_m(%"class.std::__1::basic_ostream"* dereferenceable(160) %15, i8* getelementptr inbounds ([2 x i8], [2 x i8]* @.str.10, i64 0, i64 0), i64 1) #16
  %17 = getelementptr inbounds %"class.v8::internal::compiler::LiveRange", %"class.v8::internal::compiler::LiveRange"* %9, i64 0, i32 0
  %18 = load i32, i32* %17, align 8
  %19 = tail call dereferenceable(160) %"class.std::__1::basic_ostream"* @_ZNSt3__113basic_ostreamIcNS_11char_traitsIcEEElsEi(%"class.std::__1::basic_ostream"* %16, i32 %18) #16
  %20 = tail call dereferenceable(160) %"class.std::__1::basic_ostream"* @_ZNSt3__124__put_character_sequenceIcNS_11char_traitsIcEEEERNS_13basic_ostreamIT_T0_EES7_PKS4_m(%"class.std::__1::basic_ostream"* dereferenceable(160) %19, i8* getelementptr inbounds ([2 x i8], [2 x i8]* @.str.11, i64 0, i64 0), i64 1) #16
  %21 = load %"class.v8::internal::compiler::TopLevelLiveRange"*, %"class.v8::internal::compiler::TopLevelLiveRange"** %11, align 8
  %22 = getelementptr inbounds %"class.v8::internal::compiler::TopLevelLiveRange", %"class.v8::internal::compiler::TopLevelLiveRange"* %21, i64 0, i32 0, i32 1
  %23 = load i32, i32* %22, align 4
  %24 = and i32 %23, 8
  %25 = icmp eq i32 %24, 0
  br i1 %25, label %31, label %26

26:                                               ; preds = %2
  %27 = tail call dereferenceable(160) %"class.std::__1::basic_ostream"* @_ZNSt3__124__put_character_sequenceIcNS_11char_traitsIcEEEERNS_13basic_ostreamIT_T0_EES7_PKS4_m(%"class.std::__1::basic_ostream"* dereferenceable(160) %0, i8* getelementptr inbounds ([5 x i8], [5 x i8]* @.str.12, i64 0, i64 0), i64 4) #16
  %28 = load %"class.v8::internal::compiler::TopLevelLiveRange"*, %"class.v8::internal::compiler::TopLevelLiveRange"** %11, align 8
  %29 = getelementptr inbounds %"class.v8::internal::compiler::TopLevelLiveRange", %"class.v8::internal::compiler::TopLevelLiveRange"* %28, i64 0, i32 0, i32 1
  %30 = load i32, i32* %29, align 4
  br label %31

31:                                               ; preds = %2, %26
  %32 = phi i32 [ %23, %2 ], [ %30, %26 ]
  %33 = and i32 %32, 16
  %34 = icmp eq i32 %33, 0
  br i1 %34, label %37, label %35

35:                                               ; preds = %31
  %36 = tail call dereferenceable(160) %"class.std::__1::basic_ostream"* @_ZNSt3__124__put_character_sequenceIcNS_11char_traitsIcEEEERNS_13basic_ostreamIT_T0_EES7_PKS4_m(%"class.std::__1::basic_ostream"* dereferenceable(160) %0, i8* getelementptr inbounds ([7 x i8], [7 x i8]* @.str.13, i64 0, i64 0), i64 6) #16
  br label %37

37:                                               ; preds = %31, %35
  %38 = tail call dereferenceable(160) %"class.std::__1::basic_ostream"* @_ZNSt3__124__put_character_sequenceIcNS_11char_traitsIcEEEERNS_13basic_ostreamIT_T0_EES7_PKS4_m(%"class.std::__1::basic_ostream"* dereferenceable(160) %0, i8* getelementptr inbounds ([2 x i8], [2 x i8]* @.str.14, i64 0, i64 0), i64 1) #16
  %39 = bitcast %"class.std::__1::basic_ostream"* %38 to i8**
  %40 = load i8*, i8** %39, align 8
  %41 = getelementptr i8, i8* %40, i64 -24
  %42 = bitcast i8* %41 to i64*
  %43 = load i64, i64* %42, align 8
  %44 = bitcast %"class.std::__1::basic_ostream"* %38 to i8*
  %45 = getelementptr inbounds i8, i8* %44, i64 %43
  %46 = bitcast %"class.std::__1::locale"* %6 to i8*
  call void @llvm.lifetime.start.p0i8(i64 8, i8* nonnull %46) #16
  %47 = bitcast i8* %45 to %"class.std::__1::ios_base"*
  call void @_ZNKSt3__18ios_base6getlocEv(%"class.std::__1::locale"* nonnull sret %6, %"class.std::__1::ios_base"* %47) #16
  %48 = call %"class.std::__1::locale::facet"* @_ZNKSt3__16locale9use_facetERNS0_2idE(%"class.std::__1::locale"* nonnull %6, %"class.std::__1::locale::id"* nonnull dereferenceable(16) @_ZNSt3__15ctypeIcE2idE) #16
  %49 = bitcast %"class.std::__1::locale::facet"* %48 to %"class.std::__1::ctype"*
  %50 = bitcast %"class.std::__1::locale::facet"* %48 to i8 (%"class.std::__1::ctype"*, i8)***
  %51 = load i8 (%"class.std::__1::ctype"*, i8)**, i8 (%"class.std::__1::ctype"*, i8)*** %50, align 8
  %52 = getelementptr inbounds i8 (%"class.std::__1::ctype"*, i8)*, i8 (%"class.std::__1::ctype"*, i8)** %51, i64 7
  %53 = load i8 (%"class.std::__1::ctype"*, i8)*, i8 (%"class.std::__1::ctype"*, i8)** %52, align 8
  %54 = call signext i8 %53(%"class.std::__1::ctype"* %49, i8 signext 10) #16
  call void @_ZNSt3__16localeD1Ev(%"class.std::__1::locale"* nonnull %6) #16
  call void @llvm.lifetime.end.p0i8(i64 8, i8* nonnull %46) #16
  %55 = call dereferenceable(160) %"class.std::__1::basic_ostream"* @_ZNSt3__113basic_ostreamIcNS_11char_traitsIcEEE3putEc(%"class.std::__1::basic_ostream"* %38, i8 signext %54) #16
  %56 = call dereferenceable(160) %"class.std::__1::basic_ostream"* @_ZNSt3__113basic_ostreamIcNS_11char_traitsIcEEE5flushEv(%"class.std::__1::basic_ostream"* %38) #16
  %57 = getelementptr inbounds %"class.v8::internal::compiler::LiveRange", %"class.v8::internal::compiler::LiveRange"* %9, i64 0, i32 3
  %58 = load %"class.v8::internal::compiler::UseInterval"*, %"class.v8::internal::compiler::UseInterval"** %57, align 8
  %59 = getelementptr inbounds %"class.v8::internal::compiler::LiveRange", %"class.v8::internal::compiler::LiveRange"* %9, i64 0, i32 4
  %60 = load %"class.v8::internal::compiler::UsePosition"*, %"class.v8::internal::compiler::UsePosition"** %59, align 8
  %61 = icmp eq %"class.v8::internal::compiler::UsePosition"* %60, null
  br i1 %61, label %77, label %62

62:                                               ; preds = %37, %73
  %63 = phi %"class.v8::internal::compiler::UsePosition"* [ %75, %73 ], [ %60, %37 ]
  %64 = getelementptr inbounds %"class.v8::internal::compiler::UsePosition", %"class.v8::internal::compiler::UsePosition"* %63, i64 0, i32 0
  %65 = load %"class.v8::internal::compiler::InstructionOperand"*, %"class.v8::internal::compiler::InstructionOperand"** %64, align 8
  %66 = icmp eq %"class.v8::internal::compiler::InstructionOperand"* %65, null
  br i1 %66, label %73, label %67

67:                                               ; preds = %62
  %68 = call dereferenceable(160) %"class.std::__1::basic_ostream"* @_ZN2v88internal8compilerlsERNSt3__113basic_ostreamIcNS2_11char_traitsIcEEEERKNS1_18InstructionOperandE(%"class.std::__1::basic_ostream"* dereferenceable(160) %0, %"class.v8::internal::compiler::InstructionOperand"* nonnull dereferenceable(8) %65) #16
  %69 = getelementptr inbounds %"class.v8::internal::compiler::UsePosition", %"class.v8::internal::compiler::UsePosition"* %63, i64 0, i32 3, i32 0
  %70 = load i32, i32* %69, align 8
  %71 = call dereferenceable(160) %"class.std::__1::basic_ostream"* @_ZN2v88internal8compilerlsERNSt3__113basic_ostreamIcNS2_11char_traitsIcEEEENS1_16LifetimePositionE(%"class.std::__1::basic_ostream"* dereferenceable(160) %68, i32 %70)
  %72 = call dereferenceable(160) %"class.std::__1::basic_ostream"* @_ZNSt3__124__put_character_sequenceIcNS_11char_traitsIcEEEERNS_13basic_ostreamIT_T0_EES7_PKS4_m(%"class.std::__1::basic_ostream"* dereferenceable(160) %71, i8* getelementptr inbounds ([2 x i8], [2 x i8]* @.str.11, i64 0, i64 0), i64 1) #16
  br label %73

73:                                               ; preds = %62, %67
  %74 = getelementptr inbounds %"class.v8::internal::compiler::UsePosition", %"class.v8::internal::compiler::UsePosition"* %63, i64 0, i32 2
  %75 = load %"class.v8::internal::compiler::UsePosition"*, %"class.v8::internal::compiler::UsePosition"** %74, align 8
  %76 = icmp eq %"class.v8::internal::compiler::UsePosition"* %75, null
  br i1 %76, label %77, label %62

77:                                               ; preds = %73, %37
  %78 = bitcast %"class.std::__1::basic_ostream"* %0 to i8**
  %79 = load i8*, i8** %78, align 8
  %80 = getelementptr i8, i8* %79, i64 -24
  %81 = bitcast i8* %80 to i64*
  %82 = load i64, i64* %81, align 8
  %83 = bitcast %"class.std::__1::basic_ostream"* %0 to i8*
  %84 = getelementptr inbounds i8, i8* %83, i64 %82
  %85 = bitcast %"class.std::__1::locale"* %5 to i8*
  call void @llvm.lifetime.start.p0i8(i64 8, i8* nonnull %85) #16
  %86 = bitcast i8* %84 to %"class.std::__1::ios_base"*
  call void @_ZNKSt3__18ios_base6getlocEv(%"class.std::__1::locale"* nonnull sret %5, %"class.std::__1::ios_base"* %86) #16
  %87 = call %"class.std::__1::locale::facet"* @_ZNKSt3__16locale9use_facetERNS0_2idE(%"class.std::__1::locale"* nonnull %5, %"class.std::__1::locale::id"* nonnull dereferenceable(16) @_ZNSt3__15ctypeIcE2idE) #16
  %88 = bitcast %"class.std::__1::locale::facet"* %87 to %"class.std::__1::ctype"*
  %89 = bitcast %"class.std::__1::locale::facet"* %87 to i8 (%"class.std::__1::ctype"*, i8)***
  %90 = load i8 (%"class.std::__1::ctype"*, i8)**, i8 (%"class.std::__1::ctype"*, i8)*** %89, align 8
  %91 = getelementptr inbounds i8 (%"class.std::__1::ctype"*, i8)*, i8 (%"class.std::__1::ctype"*, i8)** %90, i64 7
  %92 = load i8 (%"class.std::__1::ctype"*, i8)*, i8 (%"class.std::__1::ctype"*, i8)** %91, align 8
  %93 = call signext i8 %92(%"class.std::__1::ctype"* %88, i8 signext 10) #16
  call void @_ZNSt3__16localeD1Ev(%"class.std::__1::locale"* nonnull %5) #16
  call void @llvm.lifetime.end.p0i8(i64 8, i8* nonnull %85) #16
  %94 = call dereferenceable(160) %"class.std::__1::basic_ostream"* @_ZNSt3__113basic_ostreamIcNS_11char_traitsIcEEE3putEc(%"class.std::__1::basic_ostream"* %0, i8 signext %93) #16
  %95 = call dereferenceable(160) %"class.std::__1::basic_ostream"* @_ZNSt3__113basic_ostreamIcNS_11char_traitsIcEEE5flushEv(%"class.std::__1::basic_ostream"* %0) #16
  %96 = icmp eq %"class.v8::internal::compiler::UseInterval"* %58, null
  br i1 %96, label %130, label %97

97:                                               ; preds = %77
  %98 = bitcast %"class.std::__1::locale"* %7 to i8*
  br label %99

99:                                               ; preds = %97, %99
  %100 = phi %"class.v8::internal::compiler::UseInterval"* [ %58, %97 ], [ %128, %99 ]
  call void @llvm.lifetime.start.p0i8(i64 1, i8* nonnull %4)
  store i8 91, i8* %4, align 1
  %101 = call dereferenceable(160) %"class.std::__1::basic_ostream"* @_ZNSt3__124__put_character_sequenceIcNS_11char_traitsIcEEEERNS_13basic_ostreamIT_T0_EES7_PKS4_m(%"class.std::__1::basic_ostream"* dereferenceable(160) %0, i8* nonnull %4, i64 1) #16
  call void @llvm.lifetime.end.p0i8(i64 1, i8* nonnull %4)
  %102 = getelementptr inbounds %"class.v8::internal::compiler::UseInterval", %"class.v8::internal::compiler::UseInterval"* %100, i64 0, i32 0, i32 0
  %103 = load i32, i32* %102, align 8
  %104 = call dereferenceable(160) %"class.std::__1::basic_ostream"* @_ZN2v88internal8compilerlsERNSt3__113basic_ostreamIcNS2_11char_traitsIcEEEENS1_16LifetimePositionE(%"class.std::__1::basic_ostream"* dereferenceable(160) %101, i32 %103)
  %105 = call dereferenceable(160) %"class.std::__1::basic_ostream"* @_ZNSt3__124__put_character_sequenceIcNS_11char_traitsIcEEEERNS_13basic_ostreamIT_T0_EES7_PKS4_m(%"class.std::__1::basic_ostream"* dereferenceable(160) %104, i8* getelementptr inbounds ([3 x i8], [3 x i8]* @.str.15, i64 0, i64 0), i64 2) #16
  %106 = getelementptr inbounds %"class.v8::internal::compiler::UseInterval", %"class.v8::internal::compiler::UseInterval"* %100, i64 0, i32 1, i32 0
  %107 = load i32, i32* %106, align 4
  %108 = call dereferenceable(160) %"class.std::__1::basic_ostream"* @_ZN2v88internal8compilerlsERNSt3__113basic_ostreamIcNS2_11char_traitsIcEEEENS1_16LifetimePositionE(%"class.std::__1::basic_ostream"* dereferenceable(160) %105, i32 %107)
  call void @llvm.lifetime.start.p0i8(i64 1, i8* nonnull %3)
  store i8 41, i8* %3, align 1
  %109 = call dereferenceable(160) %"class.std::__1::basic_ostream"* @_ZNSt3__124__put_character_sequenceIcNS_11char_traitsIcEEEERNS_13basic_ostreamIT_T0_EES7_PKS4_m(%"class.std::__1::basic_ostream"* dereferenceable(160) %108, i8* nonnull %3, i64 1) #16
  call void @llvm.lifetime.end.p0i8(i64 1, i8* nonnull %3)
  %110 = bitcast %"class.std::__1::basic_ostream"* %109 to i8**
  %111 = load i8*, i8** %110, align 8
  %112 = getelementptr i8, i8* %111, i64 -24
  %113 = bitcast i8* %112 to i64*
  %114 = load i64, i64* %113, align 8
  %115 = bitcast %"class.std::__1::basic_ostream"* %109 to i8*
  %116 = getelementptr inbounds i8, i8* %115, i64 %114
  call void @llvm.lifetime.start.p0i8(i64 8, i8* nonnull %98) #16
  %117 = bitcast i8* %116 to %"class.std::__1::ios_base"*
  call void @_ZNKSt3__18ios_base6getlocEv(%"class.std::__1::locale"* nonnull sret %7, %"class.std::__1::ios_base"* %117) #16
  %118 = call %"class.std::__1::locale::facet"* @_ZNKSt3__16locale9use_facetERNS0_2idE(%"class.std::__1::locale"* nonnull %7, %"class.std::__1::locale::id"* nonnull dereferenceable(16) @_ZNSt3__15ctypeIcE2idE) #16
  %119 = bitcast %"class.std::__1::locale::facet"* %118 to %"class.std::__1::ctype"*
  %120 = bitcast %"class.std::__1::locale::facet"* %118 to i8 (%"class.std::__1::ctype"*, i8)***
  %121 = load i8 (%"class.std::__1::ctype"*, i8)**, i8 (%"class.std::__1::ctype"*, i8)*** %120, align 8
  %122 = getelementptr inbounds i8 (%"class.std::__1::ctype"*, i8)*, i8 (%"class.std::__1::ctype"*, i8)** %121, i64 7
  %123 = load i8 (%"class.std::__1::ctype"*, i8)*, i8 (%"class.std::__1::ctype"*, i8)** %122, align 8
  %124 = call signext i8 %123(%"class.std::__1::ctype"* %119, i8 signext 10) #16
  call void @_ZNSt3__16localeD1Ev(%"class.std::__1::locale"* nonnull %7) #16
  call void @llvm.lifetime.end.p0i8(i64 8, i8* nonnull %98) #16
  %125 = call dereferenceable(160) %"class.std::__1::basic_ostream"* @_ZNSt3__113basic_ostreamIcNS_11char_traitsIcEEE3putEc(%"class.std::__1::basic_ostream"* %109, i8 signext %124) #16
  %126 = call dereferenceable(160) %"class.std::__1::basic_ostream"* @_ZNSt3__113basic_ostreamIcNS_11char_traitsIcEEE5flushEv(%"class.std::__1::basic_ostream"* %109) #16
  %127 = getelementptr inbounds %"class.v8::internal::compiler::UseInterval", %"class.v8::internal::compiler::UseInterval"* %100, i64 0, i32 2
  %128 = load %"class.v8::internal::compiler::UseInterval"*, %"class.v8::internal::compiler::UseInterval"** %127, align 8
  %129 = icmp eq %"class.v8::internal::compiler::UseInterval"* %128, null
  br i1 %129, label %130, label %99

130:                                              ; preds = %99, %77
  %131 = call dereferenceable(160) %"class.std::__1::basic_ostream"* @_ZNSt3__124__put_character_sequenceIcNS_11char_traitsIcEEEERNS_13basic_ostreamIT_T0_EES7_PKS4_m(%"class.std::__1::basic_ostream"* dereferenceable(160) %0, i8* getelementptr inbounds ([2 x i8], [2 x i8]* @.str.16, i64 0, i64 0), i64 1) #16
  ret %"class.std::__1::basic_ostream"* %0
}

; Function Attrs: nounwind ssp uwtable
define hidden void @_ZNK2v88internal8compiler9LiveRange5PrintEb(%"class.v8::internal::compiler::LiveRange"*, i1 zeroext) local_unnamed_addr #0 align 2 {
  %3 = tail call %"class.v8::internal::RegisterConfiguration"* @_ZN2v88internal21RegisterConfiguration7DefaultEv() #16
  tail call void @_ZNK2v88internal8compiler9LiveRange5PrintEPKNS0_21RegisterConfigurationEb(%"class.v8::internal::compiler::LiveRange"* %0, %"class.v8::internal::RegisterConfiguration"* %3, i1 zeroext %1)
  ret void
}

declare %"class.v8::internal::RegisterConfiguration"* @_ZN2v88internal21RegisterConfiguration7DefaultEv() local_unnamed_addr #6

; Function Attrs: nofree norecurse nounwind ssp uwtable
define hidden zeroext i1 @_ZNK2v88internal8compiler9LiveRange18RegisterFromBundleEPi(%"class.v8::internal::compiler::LiveRange"* nocapture readonly, i32* nocapture) local_unnamed_addr #3 align 2 {
  %3 = getelementptr inbounds %"class.v8::internal::compiler::LiveRange", %"class.v8::internal::compiler::LiveRange"* %0, i64 0, i32 10
  %4 = load %"class.v8::internal::compiler::LiveRangeBundle"*, %"class.v8::internal::compiler::LiveRangeBundle"** %3, align 8
  %5 = icmp eq %"class.v8::internal::compiler::LiveRangeBundle"* %4, null
  br i1 %5, label %11, label %6

6:                                                ; preds = %2
  %7 = getelementptr inbounds %"class.v8::internal::compiler::LiveRangeBundle", %"class.v8::internal::compiler::LiveRangeBundle"* %4, i64 0, i32 3
  %8 = load i32, i32* %7, align 4
  %9 = icmp eq i32 %8, 32
  br i1 %9, label %11, label %10

10:                                               ; preds = %6
  store i32 %8, i32* %1, align 4
  br label %11

11:                                               ; preds = %2, %6, %10
  %12 = phi i1 [ true, %10 ], [ false, %6 ], [ false, %2 ]
  ret i1 %12
}

; Function Attrs: nofree norecurse nounwind ssp uwtable
define hidden void @_ZNK2v88internal8compiler9LiveRange20UpdateBundleRegisterEi(%"class.v8::internal::compiler::LiveRange"* nocapture readonly, i32) local_unnamed_addr #3 align 2 {
  %3 = getelementptr inbounds %"class.v8::internal::compiler::LiveRange", %"class.v8::internal::compiler::LiveRange"* %0, i64 0, i32 10
  %4 = load %"class.v8::internal::compiler::LiveRangeBundle"*, %"class.v8::internal::compiler::LiveRangeBundle"** %3, align 8
  %5 = icmp eq %"class.v8::internal::compiler::LiveRangeBundle"* %4, null
  br i1 %5, label %11, label %6

6:                                                ; preds = %2
  %7 = getelementptr inbounds %"class.v8::internal::compiler::LiveRangeBundle", %"class.v8::internal::compiler::LiveRangeBundle"* %4, i64 0, i32 3
  %8 = load i32, i32* %7, align 4
  %9 = icmp eq i32 %8, 32
  br i1 %9, label %10, label %11

10:                                               ; preds = %6
  store i32 %1, i32* %7, align 4
  br label %11

11:                                               ; preds = %6, %2, %10
  ret void
}

; Function Attrs: nounwind ssp uwtable
define hidden void @_ZN2v88internal8compiler17TopLevelLiveRangeC2EiNS0_21MachineRepresentationE(%"class.v8::internal::compiler::TopLevelLiveRange"*, i32, i8 zeroext) unnamed_addr #0 align 2 {
  %4 = getelementptr inbounds %"class.v8::internal::compiler::TopLevelLiveRange", %"class.v8::internal::compiler::TopLevelLiveRange"* %0, i64 0, i32 0, i32 0
  store i32 0, i32* %4, align 8
  %5 = getelementptr inbounds %"class.v8::internal::compiler::TopLevelLiveRange", %"class.v8::internal::compiler::TopLevelLiveRange"* %0, i64 0, i32 0, i32 1
  %6 = getelementptr inbounds %"class.v8::internal::compiler::TopLevelLiveRange", %"class.v8::internal::compiler::TopLevelLiveRange"* %0, i64 0, i32 0, i32 5
  %7 = getelementptr inbounds i32, i32* %5, i64 1
  %8 = bitcast i32* %7 to i8*
  tail call void @llvm.memset.p0i8.i64(i8* align 4 %8, i8 0, i64 24, i1 false) #16
  store %"class.v8::internal::compiler::TopLevelLiveRange"* %0, %"class.v8::internal::compiler::TopLevelLiveRange"** %6, align 8
  %9 = getelementptr inbounds %"class.v8::internal::compiler::TopLevelLiveRange", %"class.v8::internal::compiler::TopLevelLiveRange"* %0, i64 0, i32 0, i32 6
  %10 = getelementptr inbounds %"class.v8::internal::compiler::TopLevelLiveRange", %"class.v8::internal::compiler::TopLevelLiveRange"* %0, i64 0, i32 0, i32 11, i32 0
  %11 = bitcast %"class.v8::internal::compiler::LiveRange"** %9 to i8*
  tail call void @llvm.memset.p0i8.i64(i8* align 8 %11, i8 0, i64 40, i1 false) #16
  store i32 -1, i32* %10, align 4
  %12 = zext i8 %2 to i32
  %13 = shl nuw nsw i32 %12, 13
  %14 = or i32 %13, 134221824
  store i32 %14, i32* %5, align 4
  %15 = getelementptr inbounds %"class.v8::internal::compiler::TopLevelLiveRange", %"class.v8::internal::compiler::TopLevelLiveRange"* %0, i64 0, i32 1
  store i32 %1, i32* %15, align 4
  %16 = getelementptr inbounds %"class.v8::internal::compiler::TopLevelLiveRange", %"class.v8::internal::compiler::TopLevelLiveRange"* %0, i64 0, i32 2
  store i32 0, i32* %16, align 8
  %17 = getelementptr inbounds %"class.v8::internal::compiler::TopLevelLiveRange", %"class.v8::internal::compiler::TopLevelLiveRange"* %0, i64 0, i32 3, i32 0
  %18 = getelementptr inbounds %"class.v8::internal::compiler::TopLevelLiveRange", %"class.v8::internal::compiler::TopLevelLiveRange"* %0, i64 0, i32 7
  %19 = bitcast %"class.v8::internal::compiler::InstructionOperand"** %17 to i8*
  call void @llvm.memset.p0i8.i64(i8* align 8 %19, i8 0, i64 18, i1 false)
  store i32 2147483647, i32* %18, align 4
  %20 = getelementptr inbounds %"class.v8::internal::compiler::TopLevelLiveRange", %"class.v8::internal::compiler::TopLevelLiveRange"* %0, i64 0, i32 8
  store %"class.v8::internal::compiler::UsePosition"* null, %"class.v8::internal::compiler::UsePosition"** %20, align 8
  %21 = getelementptr inbounds %"class.v8::internal::compiler::TopLevelLiveRange", %"class.v8::internal::compiler::TopLevelLiveRange"* %0, i64 0, i32 9
  %22 = bitcast %"class.v8::internal::compiler::LiveRange"** %21 to %"class.v8::internal::compiler::TopLevelLiveRange"**
  store %"class.v8::internal::compiler::TopLevelLiveRange"* %0, %"class.v8::internal::compiler::TopLevelLiveRange"** %22, align 8
  ret void
}

; Function Attrs: nounwind ssp uwtable
define hidden void @_ZN2v88internal8compiler17TopLevelLiveRange19RecordSpillLocationEPNS0_4ZoneEiPNS1_18InstructionOperandE(%"class.v8::internal::compiler::TopLevelLiveRange"* nocapture, %"class.v8::internal::Zone"*, i32, %"class.v8::internal::compiler::InstructionOperand"*) local_unnamed_addr #0 align 2 {
  %5 = ptrtoint %"class.v8::internal::compiler::InstructionOperand"* %3 to i64
  %6 = getelementptr inbounds %"class.v8::internal::compiler::TopLevelLiveRange", %"class.v8::internal::compiler::TopLevelLiveRange"* %0, i64 0, i32 4, i32 0
  %7 = getelementptr inbounds %"class.v8::internal::Zone", %"class.v8::internal::Zone"* %1, i64 0, i32 2
  %8 = load i64, i64* %7, align 8
  %9 = getelementptr inbounds %"class.v8::internal::Zone", %"class.v8::internal::Zone"* %1, i64 0, i32 3
  %10 = load i64, i64* %9, align 8
  %11 = sub i64 %10, %8
  %12 = icmp ult i64 %11, 24
  br i1 %12, label %13, label %15, !prof !2

13:                                               ; preds = %4
  %14 = tail call i64 @_ZN2v88internal4Zone9NewExpandEm(%"class.v8::internal::Zone"* %1, i64 24) #16
  br label %17

15:                                               ; preds = %4
  %16 = add i64 %8, 24
  store i64 %16, i64* %7, align 8
  br label %17

17:                                               ; preds = %13, %15
  %18 = phi i64 [ %14, %13 ], [ %8, %15 ]
  %19 = inttoptr i64 %18 to %"struct.v8::internal::compiler::TopLevelLiveRange::SpillMoveInsertionList"*
  %20 = bitcast %"struct.v8::internal::compiler::TopLevelLiveRange::SpillMoveInsertionList"** %6 to i64*
  %21 = load i64, i64* %20, align 8
  %22 = getelementptr inbounds %"struct.v8::internal::compiler::TopLevelLiveRange::SpillMoveInsertionList", %"struct.v8::internal::compiler::TopLevelLiveRange::SpillMoveInsertionList"* %19, i64 0, i32 0
  store i32 %2, i32* %22, align 8
  %23 = getelementptr inbounds %"struct.v8::internal::compiler::TopLevelLiveRange::SpillMoveInsertionList", %"struct.v8::internal::compiler::TopLevelLiveRange::SpillMoveInsertionList"* %19, i64 0, i32 1
  %24 = bitcast %"class.v8::internal::compiler::InstructionOperand"** %23 to i64*
  store i64 %5, i64* %24, align 8
  %25 = getelementptr inbounds %"struct.v8::internal::compiler::TopLevelLiveRange::SpillMoveInsertionList", %"struct.v8::internal::compiler::TopLevelLiveRange::SpillMoveInsertionList"* %19, i64 0, i32 2
  %26 = bitcast %"struct.v8::internal::compiler::TopLevelLiveRange::SpillMoveInsertionList"** %25 to i64*
  store i64 %21, i64* %26, align 8
  store %"struct.v8::internal::compiler::TopLevelLiveRange::SpillMoveInsertionList"* %19, %"struct.v8::internal::compiler::TopLevelLiveRange::SpillMoveInsertionList"** %6, align 8
  ret void
}

; Function Attrs: nounwind ssp uwtable
define hidden void @_ZN2v88internal8compiler17TopLevelLiveRange16CommitSpillMovesEPNS1_29TopTierRegisterAllocationDataERKNS1_18InstructionOperandE(%"class.v8::internal::compiler::TopLevelLiveRange"* nocapture, %"class.v8::internal::compiler::TopTierRegisterAllocationData"* nocapture readonly, %"class.v8::internal::compiler::InstructionOperand"* dereferenceable(8)) local_unnamed_addr #0 align 2 {
  %4 = getelementptr inbounds %"class.v8::internal::compiler::TopLevelLiveRange", %"class.v8::internal::compiler::TopLevelLiveRange"* %0, i64 0, i32 0, i32 1
  %5 = load i32, i32* %4, align 4
  %6 = and i32 %5, 96
  %7 = icmp eq i32 %6, 64
  br i1 %7, label %8, label %11

8:                                                ; preds = %3
  %9 = and i32 %5, 1073741823
  %10 = or i32 %9, 1073741824
  store i32 %10, i32* %4, align 4
  br label %11

11:                                               ; preds = %8, %3
  %12 = getelementptr inbounds %"class.v8::internal::compiler::TopTierRegisterAllocationData", %"class.v8::internal::compiler::TopTierRegisterAllocationData"* %1, i64 0, i32 3
  %13 = load %"class.v8::internal::compiler::InstructionSequence"*, %"class.v8::internal::compiler::InstructionSequence"** %12, align 8
  %14 = getelementptr inbounds %"class.v8::internal::compiler::InstructionSequence", %"class.v8::internal::compiler::InstructionSequence"* %13, i64 0, i32 1
  %15 = load %"class.v8::internal::Zone"*, %"class.v8::internal::Zone"** %14, align 8
  %16 = getelementptr inbounds %"class.v8::internal::compiler::TopLevelLiveRange", %"class.v8::internal::compiler::TopLevelLiveRange"* %0, i64 0, i32 4, i32 0
  %17 = load %"struct.v8::internal::compiler::TopLevelLiveRange::SpillMoveInsertionList"*, %"struct.v8::internal::compiler::TopLevelLiveRange::SpillMoveInsertionList"** %16, align 8
  %18 = icmp eq %"struct.v8::internal::compiler::TopLevelLiveRange::SpillMoveInsertionList"* %17, null
  br i1 %18, label %25, label %19

19:                                               ; preds = %11
  %20 = getelementptr inbounds %"class.v8::internal::compiler::InstructionSequence", %"class.v8::internal::compiler::InstructionSequence"* %13, i64 0, i32 8, i32 0, i32 0, i32 1
  %21 = getelementptr inbounds %"class.v8::internal::compiler::InstructionSequence", %"class.v8::internal::compiler::InstructionSequence"* %13, i64 0, i32 8, i32 0, i32 0, i32 0, i32 1
  %22 = ptrtoint %"class.v8::internal::Zone"* %15 to i64
  %23 = getelementptr inbounds %"class.v8::internal::Zone", %"class.v8::internal::Zone"* %15, i64 0, i32 2
  %24 = getelementptr inbounds %"class.v8::internal::Zone", %"class.v8::internal::Zone"* %15, i64 0, i32 3
  br label %26

25:                                               ; preds = %58, %11
  ret void

26:                                               ; preds = %19, %58
  %27 = phi %"struct.v8::internal::compiler::TopLevelLiveRange::SpillMoveInsertionList"* [ %17, %19 ], [ %69, %58 ]
  %28 = getelementptr inbounds %"struct.v8::internal::compiler::TopLevelLiveRange::SpillMoveInsertionList", %"struct.v8::internal::compiler::TopLevelLiveRange::SpillMoveInsertionList"* %27, i64 0, i32 0
  %29 = load i32, i32* %28, align 8
  %30 = sext i32 %29 to i64
  %31 = load i64, i64* %20, align 8
  %32 = add i64 %31, %30
  %33 = load %"class.v8::internal::compiler::Instruction"***, %"class.v8::internal::compiler::Instruction"**** %21, align 8
  %34 = lshr i64 %32, 9
  %35 = getelementptr inbounds %"class.v8::internal::compiler::Instruction"**, %"class.v8::internal::compiler::Instruction"*** %33, i64 %34
  %36 = load %"class.v8::internal::compiler::Instruction"**, %"class.v8::internal::compiler::Instruction"*** %35, align 8
  %37 = and i64 %32, 511
  %38 = getelementptr inbounds %"class.v8::internal::compiler::Instruction"*, %"class.v8::internal::compiler::Instruction"** %36, i64 %37
  %39 = load %"class.v8::internal::compiler::Instruction"*, %"class.v8::internal::compiler::Instruction"** %38, align 8
  %40 = getelementptr inbounds %"class.v8::internal::compiler::Instruction", %"class.v8::internal::compiler::Instruction"* %39, i64 0, i32 2, i64 0
  %41 = load %"class.v8::internal::compiler::ParallelMove"*, %"class.v8::internal::compiler::ParallelMove"** %40, align 8
  %42 = icmp eq %"class.v8::internal::compiler::ParallelMove"* %41, null
  br i1 %42, label %43, label %58

43:                                               ; preds = %26
  %44 = load i64, i64* %23, align 8
  %45 = load i64, i64* %24, align 8
  %46 = sub i64 %45, %44
  %47 = icmp ult i64 %46, 32
  br i1 %47, label %48, label %50, !prof !2

48:                                               ; preds = %43
  %49 = tail call i64 @_ZN2v88internal4Zone9NewExpandEm(%"class.v8::internal::Zone"* %15, i64 32) #16
  br label %52

50:                                               ; preds = %43
  %51 = add i64 %44, 32
  store i64 %51, i64* %23, align 8
  br label %52

52:                                               ; preds = %50, %48
  %53 = phi i64 [ %49, %48 ], [ %44, %50 ]
  %54 = inttoptr i64 %53 to i8*
  %55 = inttoptr i64 %53 to %"class.v8::internal::compiler::ParallelMove"*
  %56 = getelementptr inbounds %"class.v8::internal::compiler::ParallelMove", %"class.v8::internal::compiler::ParallelMove"* %55, i64 0, i32 0, i32 0, i32 0, i32 2, i32 1
  %57 = bitcast %"struct.std::__1::__compressed_pair_elem.1208"* %56 to i64*
  tail call void @llvm.memset.p0i8.i64(i8* align 8 %54, i8 0, i64 24, i1 false) #16
  store i64 %22, i64* %57, align 8
  store %"class.v8::internal::compiler::ParallelMove"* %55, %"class.v8::internal::compiler::ParallelMove"** %40, align 8
  br label %58

58:                                               ; preds = %26, %52
  %59 = phi %"class.v8::internal::compiler::ParallelMove"* [ %55, %52 ], [ %41, %26 ]
  %60 = getelementptr inbounds %"struct.v8::internal::compiler::TopLevelLiveRange::SpillMoveInsertionList", %"struct.v8::internal::compiler::TopLevelLiveRange::SpillMoveInsertionList"* %27, i64 0, i32 1
  %61 = load %"class.v8::internal::compiler::InstructionOperand"*, %"class.v8::internal::compiler::InstructionOperand"** %60, align 8
  %62 = getelementptr inbounds %"class.v8::internal::compiler::ParallelMove", %"class.v8::internal::compiler::ParallelMove"* %59, i64 0, i32 0, i32 0, i32 0, i32 2, i32 1, i32 0, i32 0
  %63 = load %"class.v8::internal::Zone"*, %"class.v8::internal::Zone"** %62, align 8
  %64 = tail call %"class.v8::internal::compiler::MoveOperands"* @_ZN2v88internal8compiler12ParallelMove7AddMoveERKNS1_18InstructionOperandES5_PNS0_4ZoneE(%"class.v8::internal::compiler::ParallelMove"* %59, %"class.v8::internal::compiler::InstructionOperand"* dereferenceable(8) %61, %"class.v8::internal::compiler::InstructionOperand"* dereferenceable(8) %2, %"class.v8::internal::Zone"* %63) #16
  %65 = getelementptr inbounds %"class.v8::internal::compiler::Instruction", %"class.v8::internal::compiler::Instruction"* %39, i64 0, i32 4
  %66 = load %"class.v8::internal::compiler::InstructionBlock"*, %"class.v8::internal::compiler::InstructionBlock"** %65, align 8
  %67 = getelementptr inbounds %"class.v8::internal::compiler::InstructionBlock", %"class.v8::internal::compiler::InstructionBlock"* %66, i64 0, i32 14
  store i8 1, i8* %67, align 8
  %68 = getelementptr inbounds %"struct.v8::internal::compiler::TopLevelLiveRange::SpillMoveInsertionList", %"struct.v8::internal::compiler::TopLevelLiveRange::SpillMoveInsertionList"* %27, i64 0, i32 2
  %69 = load %"struct.v8::internal::compiler::TopLevelLiveRange::SpillMoveInsertionList"*, %"struct.v8::internal::compiler::TopLevelLiveRange::SpillMoveInsertionList"** %68, align 8
  %70 = icmp eq %"struct.v8::internal::compiler::TopLevelLiveRange::SpillMoveInsertionList"* %69, null
  br i1 %70, label %25, label %26
}

; Function Attrs: nounwind ssp uwtable
define hidden void @_ZN2v88internal8compiler17TopLevelLiveRange16FilterSpillMovesEPNS1_29TopTierRegisterAllocationDataERKNS1_18InstructionOperandE(%"class.v8::internal::compiler::TopLevelLiveRange"* nocapture, %"class.v8::internal::compiler::TopTierRegisterAllocationData"* nocapture readonly, %"class.v8::internal::compiler::InstructionOperand"* readonly dereferenceable(8)) local_unnamed_addr #0 align 2 {
  %4 = getelementptr inbounds %"class.v8::internal::compiler::TopTierRegisterAllocationData", %"class.v8::internal::compiler::TopTierRegisterAllocationData"* %1, i64 0, i32 3
  %5 = load %"class.v8::internal::compiler::InstructionSequence"*, %"class.v8::internal::compiler::InstructionSequence"** %4, align 8
  %6 = getelementptr inbounds %"class.v8::internal::compiler::TopLevelLiveRange", %"class.v8::internal::compiler::TopLevelLiveRange"* %0, i64 0, i32 4, i32 0
  %7 = load %"struct.v8::internal::compiler::TopLevelLiveRange::SpillMoveInsertionList"*, %"struct.v8::internal::compiler::TopLevelLiveRange::SpillMoveInsertionList"** %6, align 8
  %8 = icmp eq %"struct.v8::internal::compiler::TopLevelLiveRange::SpillMoveInsertionList"* %7, null
  br i1 %8, label %98, label %9

9:                                                ; preds = %3
  %10 = getelementptr inbounds %"class.v8::internal::compiler::TopLevelLiveRange", %"class.v8::internal::compiler::TopLevelLiveRange"* %0, i64 0, i32 0, i32 1
  %11 = load i32, i32* %10, align 4
  %12 = and i32 %11, 7
  %13 = icmp eq i32 %12, 0
  %14 = getelementptr inbounds %"class.v8::internal::compiler::InstructionSequence", %"class.v8::internal::compiler::InstructionSequence"* %5, i64 0, i32 8, i32 0, i32 0, i32 1
  %15 = getelementptr inbounds %"class.v8::internal::compiler::InstructionSequence", %"class.v8::internal::compiler::InstructionSequence"* %5, i64 0, i32 8, i32 0, i32 0, i32 0, i32 1
  %16 = getelementptr inbounds %"class.v8::internal::compiler::TopLevelLiveRange", %"class.v8::internal::compiler::TopLevelLiveRange"* %0, i64 0, i32 6
  %17 = getelementptr inbounds %"class.v8::internal::compiler::InstructionOperand", %"class.v8::internal::compiler::InstructionOperand"* %2, i64 0, i32 0
  %18 = getelementptr inbounds %"class.v8::internal::compiler::TopLevelLiveRange", %"class.v8::internal::compiler::TopLevelLiveRange"* %0, i64 0, i32 4
  %19 = bitcast %union.anon.36* %18 to i64*
  br i1 %13, label %99, label %20

20:                                               ; preds = %9, %91
  %21 = phi %"struct.v8::internal::compiler::TopLevelLiveRange::SpillMoveInsertionList"* [ %93, %91 ], [ %7, %9 ]
  %22 = phi %"struct.v8::internal::compiler::TopLevelLiveRange::SpillMoveInsertionList"* [ %21, %91 ], [ null, %9 ]
  %23 = getelementptr inbounds %"struct.v8::internal::compiler::TopLevelLiveRange::SpillMoveInsertionList", %"struct.v8::internal::compiler::TopLevelLiveRange::SpillMoveInsertionList"* %21, i64 0, i32 0
  %24 = load i32, i32* %23, align 8
  %25 = sext i32 %24 to i64
  %26 = load i64, i64* %14, align 8
  %27 = add i64 %26, %25
  %28 = load %"class.v8::internal::compiler::Instruction"***, %"class.v8::internal::compiler::Instruction"**** %15, align 8
  %29 = lshr i64 %27, 9
  %30 = getelementptr inbounds %"class.v8::internal::compiler::Instruction"**, %"class.v8::internal::compiler::Instruction"*** %28, i64 %29
  %31 = load %"class.v8::internal::compiler::Instruction"**, %"class.v8::internal::compiler::Instruction"*** %30, align 8
  %32 = and i64 %27, 511
  %33 = getelementptr inbounds %"class.v8::internal::compiler::Instruction"*, %"class.v8::internal::compiler::Instruction"** %31, i64 %32
  %34 = load %"class.v8::internal::compiler::Instruction"*, %"class.v8::internal::compiler::Instruction"** %33, align 8
  %35 = getelementptr inbounds %"class.v8::internal::compiler::Instruction", %"class.v8::internal::compiler::Instruction"* %34, i64 0, i32 2, i64 0
  %36 = load %"class.v8::internal::compiler::ParallelMove"*, %"class.v8::internal::compiler::ParallelMove"** %35, align 8
  %37 = icmp eq %"class.v8::internal::compiler::ParallelMove"* %36, null
  br i1 %37, label %77, label %38

38:                                               ; preds = %20
  %39 = getelementptr inbounds %"class.v8::internal::compiler::ParallelMove", %"class.v8::internal::compiler::ParallelMove"* %36, i64 0, i32 0, i32 0, i32 0, i32 0
  %40 = load %"class.v8::internal::compiler::MoveOperands"**, %"class.v8::internal::compiler::MoveOperands"*** %39, align 8
  %41 = getelementptr inbounds %"class.v8::internal::compiler::ParallelMove", %"class.v8::internal::compiler::ParallelMove"* %36, i64 0, i32 0, i32 0, i32 0, i32 1
  %42 = load %"class.v8::internal::compiler::MoveOperands"**, %"class.v8::internal::compiler::MoveOperands"*** %41, align 8
  %43 = icmp eq %"class.v8::internal::compiler::MoveOperands"** %40, %42
  br i1 %43, label %77, label %95

44:                                               ; preds = %95, %74
  %45 = phi %"class.v8::internal::compiler::MoveOperands"** [ %40, %95 ], [ %75, %74 ]
  %46 = load %"class.v8::internal::compiler::MoveOperands"*, %"class.v8::internal::compiler::MoveOperands"** %45, align 8
  %47 = getelementptr inbounds %"class.v8::internal::compiler::MoveOperands", %"class.v8::internal::compiler::MoveOperands"* %46, i64 0, i32 0, i32 0
  %48 = load i64, i64* %47, align 8
  %49 = and i64 %48, 7
  %50 = icmp eq i64 %49, 0
  br i1 %50, label %74, label %51

51:                                               ; preds = %44
  %52 = getelementptr inbounds %"class.v8::internal::compiler::MoveOperands", %"class.v8::internal::compiler::MoveOperands"* %46, i64 0, i32 0
  %53 = load %"class.v8::internal::compiler::InstructionOperand"*, %"class.v8::internal::compiler::InstructionOperand"** %96, align 8
  %54 = icmp eq i64 %49, 4
  %55 = icmp eq %"class.v8::internal::compiler::InstructionOperand"* %52, %53
  %56 = getelementptr inbounds %"class.v8::internal::compiler::InstructionOperand", %"class.v8::internal::compiler::InstructionOperand"* %53, i64 0, i32 0
  %57 = load i64, i64* %56, align 8
  %58 = icmp eq i64 %48, %57
  %59 = select i1 %54, i1 %55, i1 %58
  br i1 %59, label %60, label %74

60:                                               ; preds = %51
  %61 = getelementptr inbounds %"class.v8::internal::compiler::MoveOperands", %"class.v8::internal::compiler::MoveOperands"* %46, i64 0, i32 1
  %62 = getelementptr inbounds %"class.v8::internal::compiler::InstructionOperand", %"class.v8::internal::compiler::InstructionOperand"* %61, i64 0, i32 0
  %63 = load i64, i64* %62, align 8
  %64 = and i64 %63, 7
  %65 = icmp eq i64 %64, 4
  %66 = icmp eq %"class.v8::internal::compiler::InstructionOperand"* %61, %2
  %67 = icmp eq i64 %63, %97
  %68 = select i1 %65, i1 %66, i1 %67
  br i1 %68, label %69, label %74

69:                                               ; preds = %60
  %70 = load i8, i8* %16, align 1, !range !3
  %71 = icmp eq i8 %70, 0
  br i1 %71, label %80, label %72

72:                                               ; preds = %69
  %73 = bitcast %"class.v8::internal::compiler::MoveOperands"* %46 to i8*
  tail call void @llvm.memset.p0i8.i64(i8* align 8 %73, i8 0, i64 16, i1 false) #16
  br label %80

74:                                               ; preds = %60, %51, %44
  %75 = getelementptr inbounds %"class.v8::internal::compiler::MoveOperands"*, %"class.v8::internal::compiler::MoveOperands"** %45, i64 1
  %76 = icmp eq %"class.v8::internal::compiler::MoveOperands"** %75, %42
  br i1 %76, label %77, label %44

77:                                               ; preds = %74, %38, %20
  %78 = load i8, i8* %16, align 1, !range !3
  %79 = icmp eq i8 %78, 0
  br i1 %79, label %91, label %80

80:                                               ; preds = %77, %72, %69
  %81 = icmp eq %"struct.v8::internal::compiler::TopLevelLiveRange::SpillMoveInsertionList"* %22, null
  %82 = getelementptr inbounds %"struct.v8::internal::compiler::TopLevelLiveRange::SpillMoveInsertionList", %"struct.v8::internal::compiler::TopLevelLiveRange::SpillMoveInsertionList"* %21, i64 0, i32 2
  %83 = bitcast %"struct.v8::internal::compiler::TopLevelLiveRange::SpillMoveInsertionList"** %82 to i64*
  %84 = load i64, i64* %83, align 8
  %85 = getelementptr inbounds %"struct.v8::internal::compiler::TopLevelLiveRange::SpillMoveInsertionList", %"struct.v8::internal::compiler::TopLevelLiveRange::SpillMoveInsertionList"* %22, i64 0, i32 2
  %86 = bitcast %"struct.v8::internal::compiler::TopLevelLiveRange::SpillMoveInsertionList"** %85 to i64*
  %87 = select i1 %81, i64* %19, i64* %86
  store i64 %84, i64* %87, align 8
  %88 = getelementptr inbounds %"class.v8::internal::compiler::Instruction", %"class.v8::internal::compiler::Instruction"* %34, i64 0, i32 4
  %89 = load %"class.v8::internal::compiler::InstructionBlock"*, %"class.v8::internal::compiler::InstructionBlock"** %88, align 8
  %90 = getelementptr inbounds %"class.v8::internal::compiler::InstructionBlock", %"class.v8::internal::compiler::InstructionBlock"* %89, i64 0, i32 14
  store i8 1, i8* %90, align 8
  br label %91

91:                                               ; preds = %80, %77
  %92 = getelementptr inbounds %"struct.v8::internal::compiler::TopLevelLiveRange::SpillMoveInsertionList", %"struct.v8::internal::compiler::TopLevelLiveRange::SpillMoveInsertionList"* %21, i64 0, i32 2
  %93 = load %"struct.v8::internal::compiler::TopLevelLiveRange::SpillMoveInsertionList"*, %"struct.v8::internal::compiler::TopLevelLiveRange::SpillMoveInsertionList"** %92, align 8
  %94 = icmp eq %"struct.v8::internal::compiler::TopLevelLiveRange::SpillMoveInsertionList"* %93, null
  br i1 %94, label %98, label %20

95:                                               ; preds = %38
  %96 = getelementptr inbounds %"struct.v8::internal::compiler::TopLevelLiveRange::SpillMoveInsertionList", %"struct.v8::internal::compiler::TopLevelLiveRange::SpillMoveInsertionList"* %21, i64 0, i32 1
  %97 = load i64, i64* %17, align 8
  br label %44

98:                                               ; preds = %91, %172, %3
  ret void

99:                                               ; preds = %9, %172
  %100 = phi %"struct.v8::internal::compiler::TopLevelLiveRange::SpillMoveInsertionList"* [ %174, %172 ], [ %7, %9 ]
  %101 = phi %"struct.v8::internal::compiler::TopLevelLiveRange::SpillMoveInsertionList"* [ %100, %172 ], [ null, %9 ]
  %102 = getelementptr inbounds %"struct.v8::internal::compiler::TopLevelLiveRange::SpillMoveInsertionList", %"struct.v8::internal::compiler::TopLevelLiveRange::SpillMoveInsertionList"* %100, i64 0, i32 0
  %103 = load i32, i32* %102, align 8
  %104 = sext i32 %103 to i64
  %105 = load i64, i64* %14, align 8
  %106 = add i64 %105, %104
  %107 = load %"class.v8::internal::compiler::Instruction"***, %"class.v8::internal::compiler::Instruction"**** %15, align 8
  %108 = lshr i64 %106, 9
  %109 = getelementptr inbounds %"class.v8::internal::compiler::Instruction"**, %"class.v8::internal::compiler::Instruction"*** %107, i64 %108
  %110 = load %"class.v8::internal::compiler::Instruction"**, %"class.v8::internal::compiler::Instruction"*** %109, align 8
  %111 = and i64 %106, 511
  %112 = getelementptr inbounds %"class.v8::internal::compiler::Instruction"*, %"class.v8::internal::compiler::Instruction"** %110, i64 %111
  %113 = load %"class.v8::internal::compiler::Instruction"*, %"class.v8::internal::compiler::Instruction"** %112, align 8
  %114 = getelementptr inbounds %"class.v8::internal::compiler::Instruction", %"class.v8::internal::compiler::Instruction"* %113, i64 0, i32 2, i64 0
  %115 = load %"class.v8::internal::compiler::ParallelMove"*, %"class.v8::internal::compiler::ParallelMove"** %114, align 8
  %116 = icmp eq %"class.v8::internal::compiler::ParallelMove"* %115, null
  %117 = load i8, i8* %16, align 1, !range !3
  br i1 %116, label %159, label %118

118:                                              ; preds = %99
  %119 = icmp eq i8 %117, 0
  br i1 %119, label %172, label %120

120:                                              ; preds = %118
  %121 = getelementptr inbounds %"class.v8::internal::compiler::ParallelMove", %"class.v8::internal::compiler::ParallelMove"* %115, i64 0, i32 0, i32 0, i32 0, i32 0
  %122 = load %"class.v8::internal::compiler::MoveOperands"**, %"class.v8::internal::compiler::MoveOperands"*** %121, align 8
  %123 = getelementptr inbounds %"class.v8::internal::compiler::ParallelMove", %"class.v8::internal::compiler::ParallelMove"* %115, i64 0, i32 0, i32 0, i32 0, i32 1
  %124 = load %"class.v8::internal::compiler::MoveOperands"**, %"class.v8::internal::compiler::MoveOperands"*** %123, align 8
  %125 = icmp eq %"class.v8::internal::compiler::MoveOperands"** %122, %124
  br i1 %125, label %161, label %126

126:                                              ; preds = %120
  %127 = getelementptr inbounds %"struct.v8::internal::compiler::TopLevelLiveRange::SpillMoveInsertionList", %"struct.v8::internal::compiler::TopLevelLiveRange::SpillMoveInsertionList"* %100, i64 0, i32 1
  %128 = load i64, i64* %17, align 8
  br label %129

129:                                              ; preds = %126, %156
  %130 = phi %"class.v8::internal::compiler::MoveOperands"** [ %122, %126 ], [ %157, %156 ]
  %131 = load %"class.v8::internal::compiler::MoveOperands"*, %"class.v8::internal::compiler::MoveOperands"** %130, align 8
  %132 = getelementptr inbounds %"class.v8::internal::compiler::MoveOperands", %"class.v8::internal::compiler::MoveOperands"* %131, i64 0, i32 0, i32 0
  %133 = load i64, i64* %132, align 8
  %134 = and i64 %133, 7
  %135 = icmp eq i64 %134, 0
  br i1 %135, label %156, label %136

136:                                              ; preds = %129
  %137 = getelementptr inbounds %"class.v8::internal::compiler::MoveOperands", %"class.v8::internal::compiler::MoveOperands"* %131, i64 0, i32 0
  %138 = load %"class.v8::internal::compiler::InstructionOperand"*, %"class.v8::internal::compiler::InstructionOperand"** %127, align 8
  %139 = icmp eq i64 %134, 4
  %140 = icmp eq %"class.v8::internal::compiler::InstructionOperand"* %137, %138
  %141 = getelementptr inbounds %"class.v8::internal::compiler::InstructionOperand", %"class.v8::internal::compiler::InstructionOperand"* %138, i64 0, i32 0
  %142 = load i64, i64* %141, align 8
  %143 = icmp eq i64 %133, %142
  %144 = select i1 %139, i1 %140, i1 %143
  br i1 %144, label %145, label %156

145:                                              ; preds = %136
  %146 = getelementptr inbounds %"class.v8::internal::compiler::MoveOperands", %"class.v8::internal::compiler::MoveOperands"* %131, i64 0, i32 1
  %147 = getelementptr inbounds %"class.v8::internal::compiler::InstructionOperand", %"class.v8::internal::compiler::InstructionOperand"* %146, i64 0, i32 0
  %148 = load i64, i64* %147, align 8
  %149 = and i64 %148, 7
  %150 = icmp eq i64 %149, 4
  %151 = icmp eq %"class.v8::internal::compiler::InstructionOperand"* %146, %2
  %152 = icmp eq i64 %148, %128
  %153 = select i1 %150, i1 %151, i1 %152
  br i1 %153, label %154, label %156

154:                                              ; preds = %145
  %155 = bitcast %"class.v8::internal::compiler::MoveOperands"* %131 to i8*
  tail call void @llvm.memset.p0i8.i64(i8* align 8 %155, i8 0, i64 16, i1 false) #16
  br label %161

156:                                              ; preds = %129, %145, %136
  %157 = getelementptr inbounds %"class.v8::internal::compiler::MoveOperands"*, %"class.v8::internal::compiler::MoveOperands"** %130, i64 1
  %158 = icmp eq %"class.v8::internal::compiler::MoveOperands"** %157, %124
  br i1 %158, label %159, label %129

159:                                              ; preds = %156, %99
  %160 = icmp eq i8 %117, 0
  br i1 %160, label %172, label %161

161:                                              ; preds = %120, %159, %154
  %162 = icmp eq %"struct.v8::internal::compiler::TopLevelLiveRange::SpillMoveInsertionList"* %101, null
  %163 = getelementptr inbounds %"struct.v8::internal::compiler::TopLevelLiveRange::SpillMoveInsertionList", %"struct.v8::internal::compiler::TopLevelLiveRange::SpillMoveInsertionList"* %100, i64 0, i32 2
  %164 = bitcast %"struct.v8::internal::compiler::TopLevelLiveRange::SpillMoveInsertionList"** %163 to i64*
  %165 = load i64, i64* %164, align 8
  %166 = getelementptr inbounds %"struct.v8::internal::compiler::TopLevelLiveRange::SpillMoveInsertionList", %"struct.v8::internal::compiler::TopLevelLiveRange::SpillMoveInsertionList"* %101, i64 0, i32 2
  %167 = bitcast %"struct.v8::internal::compiler::TopLevelLiveRange::SpillMoveInsertionList"** %166 to i64*
  %168 = select i1 %162, i64* %19, i64* %167
  store i64 %165, i64* %168, align 8
  %169 = getelementptr inbounds %"class.v8::internal::compiler::Instruction", %"class.v8::internal::compiler::Instruction"* %113, i64 0, i32 4
  %170 = load %"class.v8::internal::compiler::InstructionBlock"*, %"class.v8::internal::compiler::InstructionBlock"** %169, align 8
  %171 = getelementptr inbounds %"class.v8::internal::compiler::InstructionBlock", %"class.v8::internal::compiler::InstructionBlock"* %170, i64 0, i32 14
  store i8 1, i8* %171, align 8
  br label %172

172:                                              ; preds = %118, %159, %161
  %173 = getelementptr inbounds %"struct.v8::internal::compiler::TopLevelLiveRange::SpillMoveInsertionList", %"struct.v8::internal::compiler::TopLevelLiveRange::SpillMoveInsertionList"* %100, i64 0, i32 2
  %174 = load %"struct.v8::internal::compiler::TopLevelLiveRange::SpillMoveInsertionList"*, %"struct.v8::internal::compiler::TopLevelLiveRange::SpillMoveInsertionList"** %173, align 8
  %175 = icmp eq %"struct.v8::internal::compiler::TopLevelLiveRange::SpillMoveInsertionList"* %174, null
  br i1 %175, label %98, label %99
}

; Function Attrs: nofree norecurse nounwind ssp uwtable
define hidden void @_ZN2v88internal8compiler17TopLevelLiveRange15SetSpillOperandEPNS1_18InstructionOperandE(%"class.v8::internal::compiler::TopLevelLiveRange"* nocapture, %"class.v8::internal::compiler::InstructionOperand"*) local_unnamed_addr #3 align 2 {
  %3 = getelementptr inbounds %"class.v8::internal::compiler::TopLevelLiveRange", %"class.v8::internal::compiler::TopLevelLiveRange"* %0, i64 0, i32 0, i32 1
  %4 = load i32, i32* %3, align 4
  %5 = and i32 %4, -97
  %6 = or i32 %5, 32
  store i32 %6, i32* %3, align 4
  %7 = getelementptr inbounds %"class.v8::internal::compiler::TopLevelLiveRange", %"class.v8::internal::compiler::TopLevelLiveRange"* %0, i64 0, i32 3, i32 0
  store %"class.v8::internal::compiler::InstructionOperand"* %1, %"class.v8::internal::compiler::InstructionOperand"** %7, align 8
  ret void
}

; Function Attrs: nofree norecurse nounwind ssp uwtable writeonly
define hidden void @_ZN2v88internal8compiler17TopLevelLiveRange13SetSpillRangeEPNS1_10SpillRangeE(%"class.v8::internal::compiler::TopLevelLiveRange"* nocapture, %"class.v8::internal::compiler::SpillRange"*) local_unnamed_addr #7 align 2 {
  %3 = getelementptr inbounds %"class.v8::internal::compiler::TopLevelLiveRange", %"class.v8::internal::compiler::TopLevelLiveRange"* %0, i64 0, i32 3
  %4 = bitcast %union.anon* %3 to %"class.v8::internal::compiler::SpillRange"**
  store %"class.v8::internal::compiler::SpillRange"* %1, %"class.v8::internal::compiler::SpillRange"** %4, align 8
  ret void
}

; Function Attrs: norecurse nounwind readonly ssp uwtable
define hidden void @_ZNK2v88internal8compiler17TopLevelLiveRange21VerifyChildrenInOrderEv(%"class.v8::internal::compiler::TopLevelLiveRange"* nocapture) local_unnamed_addr #2 align 2 {
  %2 = getelementptr inbounds %"class.v8::internal::compiler::TopLevelLiveRange", %"class.v8::internal::compiler::TopLevelLiveRange"* %0, i64 0, i32 0, i32 6
  br label %3

3:                                                ; preds = %3, %1
  %4 = phi %"class.v8::internal::compiler::LiveRange"** [ %2, %1 ], [ %7, %3 ]
  %5 = load %"class.v8::internal::compiler::LiveRange"*, %"class.v8::internal::compiler::LiveRange"** %4, align 8
  %6 = icmp eq %"class.v8::internal::compiler::LiveRange"* %5, null
  %7 = getelementptr inbounds %"class.v8::internal::compiler::LiveRange", %"class.v8::internal::compiler::LiveRange"* %5, i64 0, i32 6
  br i1 %6, label %8, label %3

8:                                                ; preds = %3
  ret void
}

; Function Attrs: nounwind ssp uwtable
define hidden %"class.v8::internal::compiler::LiveRange"* @_ZN2v88internal8compiler17TopLevelLiveRange14GetChildCoversENS1_16LifetimePositionE(%"class.v8::internal::compiler::TopLevelLiveRange"*, i32) local_unnamed_addr #0 align 2 {
  %3 = getelementptr inbounds %"class.v8::internal::compiler::TopLevelLiveRange", %"class.v8::internal::compiler::TopLevelLiveRange"* %0, i64 0, i32 9
  %4 = load %"class.v8::internal::compiler::LiveRange"*, %"class.v8::internal::compiler::LiveRange"** %3, align 8
  %5 = getelementptr inbounds %"class.v8::internal::compiler::LiveRange", %"class.v8::internal::compiler::LiveRange"* %4, i64 0, i32 3
  %6 = load %"class.v8::internal::compiler::UseInterval"*, %"class.v8::internal::compiler::UseInterval"** %5, align 8
  %7 = getelementptr inbounds %"class.v8::internal::compiler::UseInterval", %"class.v8::internal::compiler::UseInterval"* %6, i64 0, i32 0, i32 0
  %8 = load i32, i32* %7, align 8
  %9 = icmp sgt i32 %8, %1
  %10 = bitcast %"class.v8::internal::compiler::TopLevelLiveRange"* %0 to %"class.v8::internal::compiler::LiveRange"*
  %11 = select i1 %9, %"class.v8::internal::compiler::LiveRange"* %10, %"class.v8::internal::compiler::LiveRange"* %4
  %12 = icmp eq %"class.v8::internal::compiler::LiveRange"* %11, null
  br i1 %12, label %24, label %13

13:                                               ; preds = %2, %20
  %14 = phi %"class.v8::internal::compiler::LiveRange"* [ %22, %20 ], [ %11, %2 ]
  %15 = getelementptr inbounds %"class.v8::internal::compiler::LiveRange", %"class.v8::internal::compiler::LiveRange"* %14, i64 0, i32 2
  %16 = load %"class.v8::internal::compiler::UseInterval"*, %"class.v8::internal::compiler::UseInterval"** %15, align 8
  %17 = getelementptr inbounds %"class.v8::internal::compiler::UseInterval", %"class.v8::internal::compiler::UseInterval"* %16, i64 0, i32 1, i32 0
  %18 = load i32, i32* %17, align 4
  %19 = icmp sgt i32 %18, %1
  br i1 %19, label %26, label %20

20:                                               ; preds = %13
  %21 = getelementptr inbounds %"class.v8::internal::compiler::LiveRange", %"class.v8::internal::compiler::LiveRange"* %14, i64 0, i32 6
  %22 = load %"class.v8::internal::compiler::LiveRange"*, %"class.v8::internal::compiler::LiveRange"** %21, align 8
  %23 = icmp eq %"class.v8::internal::compiler::LiveRange"* %22, null
  br i1 %23, label %24, label %13

24:                                               ; preds = %20, %2
  %25 = phi %"class.v8::internal::compiler::LiveRange"* [ null, %2 ], [ %14, %20 ]
  store %"class.v8::internal::compiler::LiveRange"* %25, %"class.v8::internal::compiler::LiveRange"** %3, align 8
  br label %80

26:                                               ; preds = %13
  %27 = getelementptr inbounds %"class.v8::internal::compiler::LiveRange", %"class.v8::internal::compiler::LiveRange"* %14, i64 0, i32 2
  store %"class.v8::internal::compiler::LiveRange"* %14, %"class.v8::internal::compiler::LiveRange"** %3, align 8
  %28 = getelementptr inbounds %"class.v8::internal::compiler::LiveRange", %"class.v8::internal::compiler::LiveRange"* %14, i64 0, i32 3
  %29 = load %"class.v8::internal::compiler::UseInterval"*, %"class.v8::internal::compiler::UseInterval"** %28, align 8
  %30 = icmp eq %"class.v8::internal::compiler::UseInterval"* %29, null
  br i1 %30, label %80, label %31

31:                                               ; preds = %26
  %32 = getelementptr inbounds %"class.v8::internal::compiler::UseInterval", %"class.v8::internal::compiler::UseInterval"* %29, i64 0, i32 0, i32 0
  %33 = load i32, i32* %32, align 8
  %34 = icmp sgt i32 %33, %1
  br i1 %34, label %80, label %35

35:                                               ; preds = %31
  %36 = load %"class.v8::internal::compiler::UseInterval"*, %"class.v8::internal::compiler::UseInterval"** %27, align 8
  %37 = getelementptr inbounds %"class.v8::internal::compiler::UseInterval", %"class.v8::internal::compiler::UseInterval"* %36, i64 0, i32 1, i32 0
  %38 = load i32, i32* %37, align 4
  %39 = icmp sgt i32 %38, %1
  br i1 %39, label %40, label %80

40:                                               ; preds = %35
  %41 = getelementptr inbounds %"class.v8::internal::compiler::LiveRange", %"class.v8::internal::compiler::LiveRange"* %14, i64 0, i32 7
  %42 = load %"class.v8::internal::compiler::UseInterval"*, %"class.v8::internal::compiler::UseInterval"** %41, align 8
  %43 = icmp eq %"class.v8::internal::compiler::UseInterval"* %42, null
  br i1 %43, label %49, label %44

44:                                               ; preds = %40
  %45 = getelementptr inbounds %"class.v8::internal::compiler::UseInterval", %"class.v8::internal::compiler::UseInterval"* %42, i64 0, i32 0, i32 0
  %46 = load i32, i32* %45, align 8
  %47 = icmp sgt i32 %46, %1
  br i1 %47, label %48, label %49

48:                                               ; preds = %44
  store %"class.v8::internal::compiler::UseInterval"* null, %"class.v8::internal::compiler::UseInterval"** %41, align 8
  br label %49

49:                                               ; preds = %48, %44, %40
  %50 = phi %"class.v8::internal::compiler::UseInterval"** [ %28, %48 ], [ %41, %44 ], [ %28, %40 ]
  %51 = load %"class.v8::internal::compiler::UseInterval"*, %"class.v8::internal::compiler::UseInterval"** %50, align 8
  %52 = icmp eq %"class.v8::internal::compiler::UseInterval"* %51, null
  br i1 %52, label %80, label %57

53:                                               ; preds = %76
  %54 = getelementptr inbounds %"class.v8::internal::compiler::UseInterval", %"class.v8::internal::compiler::UseInterval"* %58, i64 0, i32 2
  %55 = load %"class.v8::internal::compiler::UseInterval"*, %"class.v8::internal::compiler::UseInterval"** %54, align 8
  %56 = icmp eq %"class.v8::internal::compiler::UseInterval"* %55, null
  br i1 %56, label %80, label %57

57:                                               ; preds = %49, %53
  %58 = phi %"class.v8::internal::compiler::UseInterval"* [ %55, %53 ], [ %51, %49 ]
  %59 = getelementptr inbounds %"class.v8::internal::compiler::UseInterval", %"class.v8::internal::compiler::UseInterval"* %58, i64 0, i32 0, i32 0
  %60 = load i32, i32* %59, align 8
  %61 = icmp sgt i32 %60, %1
  br i1 %61, label %73, label %62

62:                                               ; preds = %57
  %63 = load %"class.v8::internal::compiler::UseInterval"*, %"class.v8::internal::compiler::UseInterval"** %41, align 8
  %64 = icmp eq %"class.v8::internal::compiler::UseInterval"* %63, null
  br i1 %64, label %68, label %65

65:                                               ; preds = %62
  %66 = getelementptr inbounds %"class.v8::internal::compiler::UseInterval", %"class.v8::internal::compiler::UseInterval"* %63, i64 0, i32 0, i32 0
  %67 = load i32, i32* %66, align 8
  br label %68

68:                                               ; preds = %65, %62
  %69 = phi i32 [ %67, %65 ], [ -1, %62 ]
  %70 = icmp sgt i32 %60, %69
  br i1 %70, label %71, label %73

71:                                               ; preds = %68
  store %"class.v8::internal::compiler::UseInterval"* %58, %"class.v8::internal::compiler::UseInterval"** %41, align 8
  %72 = load i32, i32* %59, align 4
  br label %73

73:                                               ; preds = %71, %68, %57
  %74 = phi i32 [ %60, %57 ], [ %60, %68 ], [ %72, %71 ]
  %75 = icmp sgt i32 %74, %1
  br i1 %75, label %80, label %76

76:                                               ; preds = %73
  %77 = getelementptr inbounds %"class.v8::internal::compiler::UseInterval", %"class.v8::internal::compiler::UseInterval"* %58, i64 0, i32 1, i32 0
  %78 = load i32, i32* %77, align 4
  %79 = icmp sgt i32 %78, %1
  br i1 %79, label %80, label %53

80:                                               ; preds = %73, %53, %76, %49, %31, %26, %35, %24
  %81 = phi %"class.v8::internal::compiler::LiveRange"* [ null, %24 ], [ null, %35 ], [ null, %26 ], [ null, %31 ], [ null, %49 ], [ null, %73 ], [ null, %53 ], [ %14, %76 ]
  ret %"class.v8::internal::compiler::LiveRange"* %81
}

; Function Attrs: nounwind ssp uwtable
define hidden void @_ZNK2v88internal8compiler17TopLevelLiveRange6VerifyEv(%"class.v8::internal::compiler::TopLevelLiveRange"* readonly) local_unnamed_addr #0 align 2 {
  %2 = bitcast %"class.v8::internal::compiler::TopLevelLiveRange"* %0 to %"class.v8::internal::compiler::LiveRange"*
  %3 = icmp eq %"class.v8::internal::compiler::TopLevelLiveRange"* %0, null
  br i1 %3, label %4, label %5

4:                                                ; preds = %5, %1
  ret void

5:                                                ; preds = %1, %5
  %6 = phi %"class.v8::internal::compiler::LiveRange"* [ %8, %5 ], [ %2, %1 ]
  tail call void @_ZNK2v88internal8compiler9LiveRange15VerifyPositionsEv(%"class.v8::internal::compiler::LiveRange"* nonnull %2) #16
  %7 = getelementptr inbounds %"class.v8::internal::compiler::LiveRange", %"class.v8::internal::compiler::LiveRange"* %6, i64 0, i32 6
  %8 = load %"class.v8::internal::compiler::LiveRange"*, %"class.v8::internal::compiler::LiveRange"** %7, align 8
  %9 = icmp eq %"class.v8::internal::compiler::LiveRange"* %8, null
  br i1 %9, label %4, label %5
}

; Function Attrs: nounwind ssp uwtable
define hidden void @_ZN2v88internal8compiler17TopLevelLiveRange9ShortenToENS1_16LifetimePositionEb(%"class.v8::internal::compiler::TopLevelLiveRange"* nocapture readonly, i32, i1 zeroext) local_unnamed_addr #0 align 2 {
  br i1 %2, label %4, label %7

4:                                                ; preds = %3
  %5 = getelementptr inbounds %"class.v8::internal::compiler::TopLevelLiveRange", %"class.v8::internal::compiler::TopLevelLiveRange"* %0, i64 0, i32 1
  %6 = load i32, i32* %5, align 4
  tail call void (i8*, ...) @_ZN2v88internal6PrintFEPKcz(i8* getelementptr inbounds ([30 x i8], [30 x i8]* @.str.5, i64 0, i64 0), i32 %6, i32 %1) #16
  br label %7

7:                                                ; preds = %3, %4
  %8 = getelementptr inbounds %"class.v8::internal::compiler::TopLevelLiveRange", %"class.v8::internal::compiler::TopLevelLiveRange"* %0, i64 0, i32 0, i32 3
  %9 = load %"class.v8::internal::compiler::UseInterval"*, %"class.v8::internal::compiler::UseInterval"** %8, align 8
  %10 = getelementptr inbounds %"class.v8::internal::compiler::UseInterval", %"class.v8::internal::compiler::UseInterval"* %9, i64 0, i32 0, i32 0
  store i32 %1, i32* %10, align 8
  ret void
}

declare void @_ZN2v88internal6PrintFEPKcz(i8*, ...) local_unnamed_addr #6

; Function Attrs: nounwind ssp uwtable
define hidden void @_ZN2v88internal8compiler17TopLevelLiveRange14EnsureIntervalENS1_16LifetimePositionES3_PNS0_4ZoneEb(%"class.v8::internal::compiler::TopLevelLiveRange"* nocapture, i32, i32, %"class.v8::internal::Zone"*, i1 zeroext) local_unnamed_addr #0 align 2 {
  br i1 %4, label %6, label %9

6:                                                ; preds = %5
  %7 = getelementptr inbounds %"class.v8::internal::compiler::TopLevelLiveRange", %"class.v8::internal::compiler::TopLevelLiveRange"* %0, i64 0, i32 1
  %8 = load i32, i32* %7, align 4
  tail call void (i8*, ...) @_ZN2v88internal6PrintFEPKcz(i8* getelementptr inbounds ([42 x i8], [42 x i8]* @.str.6, i64 0, i64 0), i32 %8, i32 %1, i32 %2) #16
  br label %9

9:                                                ; preds = %5, %6
  %10 = getelementptr inbounds %"class.v8::internal::compiler::TopLevelLiveRange", %"class.v8::internal::compiler::TopLevelLiveRange"* %0, i64 0, i32 0, i32 3
  %11 = load %"class.v8::internal::compiler::UseInterval"*, %"class.v8::internal::compiler::UseInterval"** %10, align 8
  %12 = icmp eq %"class.v8::internal::compiler::UseInterval"* %11, null
  br i1 %12, label %31, label %13

13:                                               ; preds = %9
  %14 = bitcast %"class.v8::internal::compiler::UseInterval"** %10 to i64*
  br label %15

15:                                               ; preds = %13, %21
  %16 = phi %"class.v8::internal::compiler::UseInterval"* [ %11, %13 ], [ %29, %21 ]
  %17 = phi i32 [ %2, %13 ], [ %25, %21 ]
  %18 = getelementptr inbounds %"class.v8::internal::compiler::UseInterval", %"class.v8::internal::compiler::UseInterval"* %16, i64 0, i32 0, i32 0
  %19 = load i32, i32* %18, align 8
  %20 = icmp sgt i32 %19, %2
  br i1 %20, label %31, label %21

21:                                               ; preds = %15
  %22 = getelementptr inbounds %"class.v8::internal::compiler::UseInterval", %"class.v8::internal::compiler::UseInterval"* %16, i64 0, i32 1, i32 0
  %23 = load i32, i32* %22, align 4
  %24 = icmp sgt i32 %23, %2
  %25 = select i1 %24, i32 %23, i32 %17
  %26 = getelementptr inbounds %"class.v8::internal::compiler::UseInterval", %"class.v8::internal::compiler::UseInterval"* %16, i64 0, i32 2
  %27 = bitcast %"class.v8::internal::compiler::UseInterval"** %26 to i64*
  %28 = load i64, i64* %27, align 8
  store i64 %28, i64* %14, align 8
  %29 = inttoptr i64 %28 to %"class.v8::internal::compiler::UseInterval"*
  %30 = icmp eq i64 %28, 0
  br i1 %30, label %31, label %15

31:                                               ; preds = %21, %15, %9
  %32 = phi i32 [ %2, %9 ], [ %17, %15 ], [ %25, %21 ]
  %33 = getelementptr inbounds %"class.v8::internal::Zone", %"class.v8::internal::Zone"* %3, i64 0, i32 2
  %34 = load i64, i64* %33, align 8
  %35 = getelementptr inbounds %"class.v8::internal::Zone", %"class.v8::internal::Zone"* %3, i64 0, i32 3
  %36 = load i64, i64* %35, align 8
  %37 = sub i64 %36, %34
  %38 = icmp ult i64 %37, 16
  br i1 %38, label %39, label %41, !prof !2

39:                                               ; preds = %31
  %40 = tail call i64 @_ZN2v88internal4Zone9NewExpandEm(%"class.v8::internal::Zone"* %3, i64 16) #16
  br label %43

41:                                               ; preds = %31
  %42 = add i64 %34, 16
  store i64 %42, i64* %33, align 8
  br label %43

43:                                               ; preds = %39, %41
  %44 = phi i64 [ %40, %39 ], [ %34, %41 ]
  %45 = inttoptr i64 %44 to %"class.v8::internal::compiler::UseInterval"*
  %46 = getelementptr inbounds %"class.v8::internal::compiler::UseInterval", %"class.v8::internal::compiler::UseInterval"* %45, i64 0, i32 0, i32 0
  store i32 %1, i32* %46, align 8
  %47 = getelementptr inbounds %"class.v8::internal::compiler::UseInterval", %"class.v8::internal::compiler::UseInterval"* %45, i64 0, i32 1, i32 0
  store i32 %32, i32* %47, align 4
  %48 = getelementptr inbounds %"class.v8::internal::compiler::UseInterval", %"class.v8::internal::compiler::UseInterval"* %45, i64 0, i32 2
  store %"class.v8::internal::compiler::UseInterval"* null, %"class.v8::internal::compiler::UseInterval"** %48, align 8
  %49 = bitcast %"class.v8::internal::compiler::UseInterval"** %10 to i64*
  %50 = load i64, i64* %49, align 8
  %51 = bitcast %"class.v8::internal::compiler::UseInterval"** %48 to i64*
  store i64 %50, i64* %51, align 8
  store %"class.v8::internal::compiler::UseInterval"* %45, %"class.v8::internal::compiler::UseInterval"** %10, align 8
  %52 = load %"class.v8::internal::compiler::UseInterval"*, %"class.v8::internal::compiler::UseInterval"** %48, align 8
  %53 = icmp eq %"class.v8::internal::compiler::UseInterval"* %52, null
  br i1 %53, label %54, label %56

54:                                               ; preds = %43
  %55 = getelementptr inbounds %"class.v8::internal::compiler::TopLevelLiveRange", %"class.v8::internal::compiler::TopLevelLiveRange"* %0, i64 0, i32 0, i32 2
  store %"class.v8::internal::compiler::UseInterval"* %45, %"class.v8::internal::compiler::UseInterval"** %55, align 8
  br label %56

56:                                               ; preds = %54, %43
  ret void
}

; Function Attrs: nounwind ssp uwtable
define hidden void @_ZN2v88internal8compiler17TopLevelLiveRange14AddUseIntervalENS1_16LifetimePositionES3_PNS0_4ZoneEb(%"class.v8::internal::compiler::TopLevelLiveRange"* nocapture, i32, i32, %"class.v8::internal::Zone"*, i1 zeroext) local_unnamed_addr #0 align 2 {
  br i1 %4, label %6, label %9

6:                                                ; preds = %5
  %7 = getelementptr inbounds %"class.v8::internal::compiler::TopLevelLiveRange", %"class.v8::internal::compiler::TopLevelLiveRange"* %0, i64 0, i32 1
  %8 = load i32, i32* %7, align 4
  tail call void (i8*, ...) @_ZN2v88internal6PrintFEPKcz(i8* getelementptr inbounds ([39 x i8], [39 x i8]* @.str.7, i64 0, i64 0), i32 %8, i32 %1, i32 %2) #16
  br label %9

9:                                                ; preds = %5, %6
  %10 = getelementptr inbounds %"class.v8::internal::compiler::TopLevelLiveRange", %"class.v8::internal::compiler::TopLevelLiveRange"* %0, i64 0, i32 0, i32 3
  %11 = load %"class.v8::internal::compiler::UseInterval"*, %"class.v8::internal::compiler::UseInterval"** %10, align 8
  %12 = icmp eq %"class.v8::internal::compiler::UseInterval"* %11, null
  br i1 %12, label %13, label %31

13:                                               ; preds = %9
  %14 = getelementptr inbounds %"class.v8::internal::Zone", %"class.v8::internal::Zone"* %3, i64 0, i32 2
  %15 = load i64, i64* %14, align 8
  %16 = getelementptr inbounds %"class.v8::internal::Zone", %"class.v8::internal::Zone"* %3, i64 0, i32 3
  %17 = load i64, i64* %16, align 8
  %18 = sub i64 %17, %15
  %19 = icmp ult i64 %18, 16
  br i1 %19, label %20, label %22, !prof !2

20:                                               ; preds = %13
  %21 = tail call i64 @_ZN2v88internal4Zone9NewExpandEm(%"class.v8::internal::Zone"* %3, i64 16) #16
  br label %24

22:                                               ; preds = %13
  %23 = add i64 %15, 16
  store i64 %23, i64* %14, align 8
  br label %24

24:                                               ; preds = %20, %22
  %25 = phi i64 [ %21, %20 ], [ %15, %22 ]
  %26 = inttoptr i64 %25 to %"class.v8::internal::compiler::UseInterval"*
  %27 = getelementptr inbounds %"class.v8::internal::compiler::UseInterval", %"class.v8::internal::compiler::UseInterval"* %26, i64 0, i32 0, i32 0
  store i32 %1, i32* %27, align 8
  %28 = getelementptr inbounds %"class.v8::internal::compiler::UseInterval", %"class.v8::internal::compiler::UseInterval"* %26, i64 0, i32 1, i32 0
  store i32 %2, i32* %28, align 4
  %29 = getelementptr inbounds %"class.v8::internal::compiler::UseInterval", %"class.v8::internal::compiler::UseInterval"* %26, i64 0, i32 2
  store %"class.v8::internal::compiler::UseInterval"* null, %"class.v8::internal::compiler::UseInterval"** %29, align 8
  store %"class.v8::internal::compiler::UseInterval"* %26, %"class.v8::internal::compiler::UseInterval"** %10, align 8
  %30 = getelementptr inbounds %"class.v8::internal::compiler::TopLevelLiveRange", %"class.v8::internal::compiler::TopLevelLiveRange"* %0, i64 0, i32 0, i32 2
  store %"class.v8::internal::compiler::UseInterval"* %26, %"class.v8::internal::compiler::UseInterval"** %30, align 8
  br label %66

31:                                               ; preds = %9
  %32 = getelementptr inbounds %"class.v8::internal::compiler::UseInterval", %"class.v8::internal::compiler::UseInterval"* %11, i64 0, i32 0, i32 0
  %33 = load i32, i32* %32, align 8
  %34 = icmp eq i32 %33, %2
  br i1 %34, label %35, label %36

35:                                               ; preds = %31
  store i32 %1, i32* %32, align 8
  br label %66

36:                                               ; preds = %31
  %37 = icmp sgt i32 %33, %2
  br i1 %37, label %38, label %58

38:                                               ; preds = %36
  %39 = getelementptr inbounds %"class.v8::internal::Zone", %"class.v8::internal::Zone"* %3, i64 0, i32 2
  %40 = load i64, i64* %39, align 8
  %41 = getelementptr inbounds %"class.v8::internal::Zone", %"class.v8::internal::Zone"* %3, i64 0, i32 3
  %42 = load i64, i64* %41, align 8
  %43 = sub i64 %42, %40
  %44 = icmp ult i64 %43, 16
  br i1 %44, label %45, label %47, !prof !2

45:                                               ; preds = %38
  %46 = tail call i64 @_ZN2v88internal4Zone9NewExpandEm(%"class.v8::internal::Zone"* %3, i64 16) #16
  br label %49

47:                                               ; preds = %38
  %48 = add i64 %40, 16
  store i64 %48, i64* %39, align 8
  br label %49

49:                                               ; preds = %45, %47
  %50 = phi i64 [ %46, %45 ], [ %40, %47 ]
  %51 = inttoptr i64 %50 to %"class.v8::internal::compiler::UseInterval"*
  %52 = getelementptr inbounds %"class.v8::internal::compiler::UseInterval", %"class.v8::internal::compiler::UseInterval"* %51, i64 0, i32 0, i32 0
  store i32 %1, i32* %52, align 8
  %53 = getelementptr inbounds %"class.v8::internal::compiler::UseInterval", %"class.v8::internal::compiler::UseInterval"* %51, i64 0, i32 1, i32 0
  store i32 %2, i32* %53, align 4
  %54 = getelementptr inbounds %"class.v8::internal::compiler::UseInterval", %"class.v8::internal::compiler::UseInterval"* %51, i64 0, i32 2
  store %"class.v8::internal::compiler::UseInterval"* null, %"class.v8::internal::compiler::UseInterval"** %54, align 8
  %55 = bitcast %"class.v8::internal::compiler::UseInterval"** %10 to i64*
  %56 = load i64, i64* %55, align 8
  %57 = bitcast %"class.v8::internal::compiler::UseInterval"** %54 to i64*
  store i64 %56, i64* %57, align 8
  store %"class.v8::internal::compiler::UseInterval"* %51, %"class.v8::internal::compiler::UseInterval"** %10, align 8
  br label %66

58:                                               ; preds = %36
  %59 = icmp slt i32 %33, %1
  %60 = select i1 %59, i32 %33, i32 %1
  store i32 %60, i32* %32, align 8
  %61 = load %"class.v8::internal::compiler::UseInterval"*, %"class.v8::internal::compiler::UseInterval"** %10, align 8
  %62 = getelementptr inbounds %"class.v8::internal::compiler::UseInterval", %"class.v8::internal::compiler::UseInterval"* %61, i64 0, i32 1, i32 0
  %63 = load i32, i32* %62, align 4
  %64 = icmp sgt i32 %63, %2
  %65 = select i1 %64, i32 %63, i32 %2
  store i32 %65, i32* %62, align 4
  br label %66

66:                                               ; preds = %35, %58, %49, %24
  ret void
}

; Function Attrs: nounwind ssp uwtable
define hidden void @_ZN2v88internal8compiler17TopLevelLiveRange14AddUsePositionEPNS1_11UsePositionEb(%"class.v8::internal::compiler::TopLevelLiveRange"* nocapture, %"class.v8::internal::compiler::UsePosition"*, i1 zeroext) local_unnamed_addr #0 align 2 {
  %4 = getelementptr inbounds %"class.v8::internal::compiler::UsePosition", %"class.v8::internal::compiler::UsePosition"* %1, i64 0, i32 3, i32 0
  %5 = load i32, i32* %4, align 8
  br i1 %2, label %6, label %9

6:                                                ; preds = %3
  %7 = getelementptr inbounds %"class.v8::internal::compiler::TopLevelLiveRange", %"class.v8::internal::compiler::TopLevelLiveRange"* %0, i64 0, i32 1
  %8 = load i32, i32* %7, align 4
  tail call void (i8*, ...) @_ZN2v88internal6PrintFEPKcz(i8* getelementptr inbounds ([38 x i8], [38 x i8]* @.str.8, i64 0, i64 0), i32 %8, i32 %5) #16
  br label %9

9:                                                ; preds = %6, %3
  %10 = getelementptr inbounds %"class.v8::internal::compiler::TopLevelLiveRange", %"class.v8::internal::compiler::TopLevelLiveRange"* %0, i64 0, i32 0, i32 4
  %11 = load %"class.v8::internal::compiler::UsePosition"*, %"class.v8::internal::compiler::UsePosition"** %10, align 8
  %12 = icmp eq %"class.v8::internal::compiler::UsePosition"* %11, null
  br i1 %12, label %55, label %13

13:                                               ; preds = %9
  %14 = getelementptr inbounds %"class.v8::internal::compiler::UsePosition", %"class.v8::internal::compiler::UsePosition"* %11, i64 0, i32 3, i32 0
  %15 = load i32, i32* %14, align 8
  %16 = icmp slt i32 %15, %5
  br i1 %16, label %21, label %51

17:                                               ; preds = %46
  %18 = getelementptr inbounds %"class.v8::internal::compiler::UsePosition", %"class.v8::internal::compiler::UsePosition"* %49, i64 0, i32 3, i32 0
  %19 = load i32, i32* %18, align 8
  %20 = icmp slt i32 %19, %5
  br i1 %20, label %21, label %51

21:                                               ; preds = %13, %17
  %22 = phi %"class.v8::internal::compiler::UsePosition"* [ %47, %17 ], [ null, %13 ]
  %23 = phi %"class.v8::internal::compiler::UsePosition"* [ %49, %17 ], [ %11, %13 ]
  %24 = getelementptr inbounds %"class.v8::internal::compiler::UsePosition", %"class.v8::internal::compiler::UsePosition"* %23, i64 0, i32 1
  %25 = load i8*, i8** %24, align 8
  %26 = icmp eq i8* %25, null
  br i1 %26, label %46, label %27

27:                                               ; preds = %21
  %28 = getelementptr inbounds %"class.v8::internal::compiler::UsePosition", %"class.v8::internal::compiler::UsePosition"* %23, i64 0, i32 4
  %29 = load i32, i32* %28, align 4
  %30 = lshr i32 %29, 2
  %31 = trunc i32 %30 to i8
  %32 = and i8 %31, 7
  switch i8 %32, label %38 [
    i8 0, label %46
    i8 4, label %46
    i8 2, label %39
    i8 1, label %45
    i8 3, label %33
  ]

33:                                               ; preds = %27
  %34 = getelementptr inbounds i8, i8* %25, i64 48
  %35 = bitcast i8* %34 to i32*
  %36 = load i32, i32* %35, align 8
  %37 = icmp eq i32 %36, 32
  br i1 %37, label %46, label %45

38:                                               ; preds = %27
  tail call void (i8*, ...) @_Z8V8_FatalPKcz(i8* getelementptr inbounds ([17 x i8], [17 x i8]* @.str, i64 0, i64 0)) #17
  unreachable

39:                                               ; preds = %27
  %40 = getelementptr inbounds i8, i8* %25, i64 28
  %41 = bitcast i8* %40 to i32*
  %42 = load i32, i32* %41, align 4
  %43 = and i32 %42, 4032
  %44 = icmp eq i32 %43, 2048
  br i1 %44, label %46, label %45

45:                                               ; preds = %39, %33, %27
  br label %46

46:                                               ; preds = %39, %33, %27, %27, %21, %45
  %47 = phi %"class.v8::internal::compiler::UsePosition"* [ %23, %45 ], [ %22, %39 ], [ %22, %33 ], [ %22, %21 ], [ %22, %27 ], [ %22, %27 ]
  %48 = getelementptr inbounds %"class.v8::internal::compiler::UsePosition", %"class.v8::internal::compiler::UsePosition"* %23, i64 0, i32 2
  %49 = load %"class.v8::internal::compiler::UsePosition"*, %"class.v8::internal::compiler::UsePosition"** %48, align 8
  %50 = icmp eq %"class.v8::internal::compiler::UsePosition"* %49, null
  br i1 %50, label %58, label %17

51:                                               ; preds = %17, %13
  %52 = phi %"class.v8::internal::compiler::UsePosition"* [ null, %13 ], [ %23, %17 ]
  %53 = phi %"class.v8::internal::compiler::UsePosition"* [ null, %13 ], [ %47, %17 ]
  %54 = icmp eq %"class.v8::internal::compiler::UsePosition"* %52, null
  br i1 %54, label %55, label %58

55:                                               ; preds = %9, %51
  %56 = phi %"class.v8::internal::compiler::UsePosition"* [ %53, %51 ], [ null, %9 ]
  %57 = getelementptr inbounds %"class.v8::internal::compiler::UsePosition", %"class.v8::internal::compiler::UsePosition"* %1, i64 0, i32 2
  store %"class.v8::internal::compiler::UsePosition"* %11, %"class.v8::internal::compiler::UsePosition"** %57, align 8
  br label %66

58:                                               ; preds = %46, %51
  %59 = phi %"class.v8::internal::compiler::UsePosition"* [ %52, %51 ], [ %23, %46 ]
  %60 = phi %"class.v8::internal::compiler::UsePosition"* [ %53, %51 ], [ %47, %46 ]
  %61 = getelementptr inbounds %"class.v8::internal::compiler::UsePosition", %"class.v8::internal::compiler::UsePosition"* %59, i64 0, i32 2
  %62 = bitcast %"class.v8::internal::compiler::UsePosition"** %61 to i64*
  %63 = load i64, i64* %62, align 8
  %64 = getelementptr inbounds %"class.v8::internal::compiler::UsePosition", %"class.v8::internal::compiler::UsePosition"* %1, i64 0, i32 2
  %65 = bitcast %"class.v8::internal::compiler::UsePosition"** %64 to i64*
  store i64 %63, i64* %65, align 8
  br label %66

66:                                               ; preds = %58, %55
  %67 = phi %"class.v8::internal::compiler::UsePosition"** [ %61, %58 ], [ %10, %55 ]
  %68 = phi %"class.v8::internal::compiler::UsePosition"* [ %60, %58 ], [ %56, %55 ]
  store %"class.v8::internal::compiler::UsePosition"* %1, %"class.v8::internal::compiler::UsePosition"** %67, align 8
  %69 = icmp eq %"class.v8::internal::compiler::UsePosition"* %68, null
  br i1 %69, label %70, label %94

70:                                               ; preds = %66
  %71 = getelementptr inbounds %"class.v8::internal::compiler::UsePosition", %"class.v8::internal::compiler::UsePosition"* %1, i64 0, i32 1
  %72 = load i8*, i8** %71, align 8
  %73 = icmp eq i8* %72, null
  br i1 %73, label %94, label %74

74:                                               ; preds = %70
  %75 = getelementptr inbounds %"class.v8::internal::compiler::UsePosition", %"class.v8::internal::compiler::UsePosition"* %1, i64 0, i32 4
  %76 = load i32, i32* %75, align 4
  %77 = lshr i32 %76, 2
  %78 = trunc i32 %77 to i8
  %79 = and i8 %78, 7
  switch i8 %79, label %85 [
    i8 0, label %94
    i8 4, label %94
    i8 2, label %86
    i8 1, label %92
    i8 3, label %80
  ]

80:                                               ; preds = %74
  %81 = getelementptr inbounds i8, i8* %72, i64 48
  %82 = bitcast i8* %81 to i32*
  %83 = load i32, i32* %82, align 8
  %84 = icmp eq i32 %83, 32
  br i1 %84, label %94, label %92

85:                                               ; preds = %74
  tail call void (i8*, ...) @_Z8V8_FatalPKcz(i8* getelementptr inbounds ([17 x i8], [17 x i8]* @.str, i64 0, i64 0)) #17
  unreachable

86:                                               ; preds = %74
  %87 = getelementptr inbounds i8, i8* %72, i64 28
  %88 = bitcast i8* %87 to i32*
  %89 = load i32, i32* %88, align 4
  %90 = and i32 %89, 4032
  %91 = icmp eq i32 %90, 2048
  br i1 %91, label %94, label %92

92:                                               ; preds = %86, %80, %74
  %93 = getelementptr inbounds %"class.v8::internal::compiler::TopLevelLiveRange", %"class.v8::internal::compiler::TopLevelLiveRange"* %0, i64 0, i32 0, i32 9
  store %"class.v8::internal::compiler::UsePosition"* %1, %"class.v8::internal::compiler::UsePosition"** %93, align 8
  br label %94

94:                                               ; preds = %86, %80, %74, %74, %70, %92, %66
  ret void
}

declare dereferenceable(160) %"class.std::__1::basic_ostream"* @_ZN2v88internal8compilerlsERNSt3__113basic_ostreamIcNS2_11char_traitsIcEEEERKNS1_18InstructionOperandE(%"class.std::__1::basic_ostream"* dereferenceable(160), %"class.v8::internal::compiler::InstructionOperand"* dereferenceable(8)) local_unnamed_addr #6

; Function Attrs: nounwind ssp uwtable
define hidden void @_ZN2v88internal8compiler19LinearScanAllocator13PrintRangeRowERNSt3__113basic_ostreamIcNS3_11char_traitsIcEEEEPKNS1_17TopLevelLiveRangeE(%"class.v8::internal::compiler::LinearScanAllocator"* nocapture readonly, %"class.std::__1::basic_ostream"* dereferenceable(160), %"class.v8::internal::compiler::TopLevelLiveRange"* readonly) local_unnamed_addr #0 align 2 {
  %4 = alloca i8, align 1
  %5 = alloca i8, align 1
  %6 = alloca i8, align 1
  %7 = alloca [32 x i8], align 16
  %8 = bitcast %"class.std::__1::basic_ostream"* %1 to i8**
  %9 = load i8*, i8** %8, align 8
  %10 = getelementptr i8, i8* %9, i64 -24
  %11 = bitcast i8* %10 to i64*
  %12 = load i64, i64* %11, align 8
  %13 = bitcast %"class.std::__1::basic_ostream"* %1 to i8*
  %14 = getelementptr inbounds i8, i8* %13, i64 %12
  %15 = getelementptr inbounds i8, i8* %14, i64 24
  %16 = bitcast i8* %15 to i64*
  store i64 3, i64* %16, align 8
  %17 = getelementptr inbounds %"class.v8::internal::compiler::TopLevelLiveRange", %"class.v8::internal::compiler::TopLevelLiveRange"* %2, i64 0, i32 1
  %18 = load i32, i32* %17, align 4
  %19 = tail call dereferenceable(160) %"class.std::__1::basic_ostream"* @_ZNSt3__113basic_ostreamIcNS_11char_traitsIcEEElsEi(%"class.std::__1::basic_ostream"* %1, i32 %18) #16
  %20 = tail call dereferenceable(160) %"class.std::__1::basic_ostream"* @_ZNSt3__124__put_character_sequenceIcNS_11char_traitsIcEEEERNS_13basic_ostreamIT_T0_EES7_PKS4_m(%"class.std::__1::basic_ostream"* dereferenceable(160) %19, i8* getelementptr inbounds ([3 x i8], [3 x i8]* @.str.17, i64 0, i64 0), i64 2) #16
  %21 = getelementptr inbounds %"class.v8::internal::compiler::TopLevelLiveRange", %"class.v8::internal::compiler::TopLevelLiveRange"* %2, i64 0, i32 0, i32 1
  %22 = load i32, i32* %21, align 4
  %23 = lshr i32 %22, 5
  %24 = and i32 %23, 3
  %25 = add nsw i32 %24, -1
  %26 = icmp ult i32 %25, 3
  br i1 %26, label %27, label %31

27:                                               ; preds = %3
  %28 = sext i32 %25 to i64
  %29 = getelementptr inbounds [3 x i8*], [3 x i8*]* @switch.table._ZN2v88internal8compiler19LinearScanAllocator13PrintRangeRowERNSt3__113basic_ostreamIcNS3_11char_traitsIcEEEEPKNS1_17TopLevelLiveRangeE, i64 0, i64 %28
  %30 = load i8*, i8** %29, align 8
  br label %31

31:                                               ; preds = %3, %27
  %32 = phi i8* [ %30, %27 ], [ getelementptr inbounds ([3 x i8], [3 x i8]* @.str.21, i64 0, i64 0), %3 ]
  %33 = icmp eq %"class.v8::internal::compiler::TopLevelLiveRange"* %2, null
  br i1 %33, label %38, label %34

34:                                               ; preds = %31
  %35 = bitcast %"class.v8::internal::compiler::TopLevelLiveRange"* %2 to %"class.v8::internal::compiler::LiveRange"*
  %36 = getelementptr inbounds [32 x i8], [32 x i8]* %7, i64 0, i64 0
  %37 = getelementptr inbounds %"class.v8::internal::compiler::LinearScanAllocator", %"class.v8::internal::compiler::LinearScanAllocator"* %0, i64 0, i32 0, i32 1
  br label %40

38:                                               ; preds = %48, %31
  call void @llvm.lifetime.start.p0i8(i64 1, i8* nonnull %5)
  store i8 10, i8* %5, align 1
  %39 = call dereferenceable(160) %"class.std::__1::basic_ostream"* @_ZNSt3__124__put_character_sequenceIcNS_11char_traitsIcEEEERNS_13basic_ostreamIT_T0_EES7_PKS4_m(%"class.std::__1::basic_ostream"* dereferenceable(160) %1, i8* nonnull %5, i64 1) #16
  call void @llvm.lifetime.end.p0i8(i64 1, i8* nonnull %5)
  ret void

40:                                               ; preds = %34, %48
  %41 = phi i32 [ 0, %34 ], [ %49, %48 ]
  %42 = phi %"class.v8::internal::compiler::LiveRange"* [ %35, %34 ], [ %51, %48 ]
  %43 = getelementptr inbounds %"class.v8::internal::compiler::LiveRange", %"class.v8::internal::compiler::LiveRange"* %42, i64 0, i32 3
  %44 = load %"class.v8::internal::compiler::UseInterval"*, %"class.v8::internal::compiler::UseInterval"** %43, align 8
  %45 = icmp eq %"class.v8::internal::compiler::UseInterval"* %44, null
  br i1 %45, label %48, label %46

46:                                               ; preds = %40
  %47 = getelementptr inbounds %"class.v8::internal::compiler::LiveRange", %"class.v8::internal::compiler::LiveRange"* %42, i64 0, i32 1
  br label %53

48:                                               ; preds = %111, %40
  %49 = phi i32 [ %41, %40 ], [ %112, %111 ]
  %50 = getelementptr inbounds %"class.v8::internal::compiler::LiveRange", %"class.v8::internal::compiler::LiveRange"* %42, i64 0, i32 6
  %51 = load %"class.v8::internal::compiler::LiveRange"*, %"class.v8::internal::compiler::LiveRange"** %50, align 8
  %52 = icmp eq %"class.v8::internal::compiler::LiveRange"* %51, null
  br i1 %52, label %38, label %40

53:                                               ; preds = %46, %111
  %54 = phi %"class.v8::internal::compiler::UseInterval"* [ %44, %46 ], [ %114, %111 ]
  %55 = phi i32 [ %41, %46 ], [ %112, %111 ]
  %56 = getelementptr inbounds %"class.v8::internal::compiler::UseInterval", %"class.v8::internal::compiler::UseInterval"* %54, i64 0, i32 0, i32 0
  %57 = load i32, i32* %56, align 8
  %58 = getelementptr inbounds %"class.v8::internal::compiler::UseInterval", %"class.v8::internal::compiler::UseInterval"* %54, i64 0, i32 1, i32 0
  %59 = load i32, i32* %58, align 4
  %60 = icmp slt i32 %57, %55
  br i1 %60, label %63, label %61, !prof !2

61:                                               ; preds = %53
  %62 = icmp sgt i32 %57, %55
  br i1 %62, label %64, label %69

63:                                               ; preds = %53
  call void (i8*, ...) @_Z8V8_FatalPKcz(i8* getelementptr inbounds ([18 x i8], [18 x i8]* @.str.1, i64 0, i64 0), i8* getelementptr inbounds ([26 x i8], [26 x i8]* @.str.22, i64 0, i64 0)) #17
  unreachable

64:                                               ; preds = %61, %64
  %65 = phi i32 [ %67, %64 ], [ %55, %61 ]
  call void @llvm.lifetime.start.p0i8(i64 1, i8* nonnull %4)
  store i8 32, i8* %4, align 1
  %66 = call dereferenceable(160) %"class.std::__1::basic_ostream"* @_ZNSt3__124__put_character_sequenceIcNS_11char_traitsIcEEEERNS_13basic_ostreamIT_T0_EES7_PKS4_m(%"class.std::__1::basic_ostream"* dereferenceable(160) %1, i8* nonnull %4, i64 1) #16
  call void @llvm.lifetime.end.p0i8(i64 1, i8* nonnull %4)
  %67 = add i32 %65, 1
  %68 = icmp eq i32 %67, %57
  br i1 %68, label %69, label %64

69:                                               ; preds = %64, %61
  %70 = phi i32 [ %55, %61 ], [ %57, %64 ]
  %71 = sub nsw i32 %59, %57
  call void @llvm.lifetime.start.p0i8(i64 32, i8* nonnull %36) #16
  %72 = icmp slt i32 %71, 31
  %73 = select i1 %72, i32 %71, i32 31
  %74 = add nsw i32 %73, 1
  %75 = load i32, i32* %47, align 4
  %76 = and i32 %75, 1
  %77 = icmp eq i32 %76, 0
  %78 = sext i32 %74 to i64
  br i1 %77, label %79, label %90

79:                                               ; preds = %69
  %80 = lshr i32 %75, 7
  %81 = and i32 %80, 63
  %82 = icmp eq i32 %81, 32
  br i1 %82, label %90, label %83

83:                                               ; preds = %79
  %84 = load i32, i32* %37, align 8
  %85 = icmp eq i32 %84, 0
  %86 = zext i32 %81 to i64
  %87 = select i1 %85, [16 x i8*]* @_ZZN2v88internal12RegisterNameENS0_8RegisterEE5Names, [16 x i8*]* @_ZZN2v88internal12RegisterNameENS0_11XMMRegisterEE5Names
  %88 = getelementptr inbounds [16 x i8*], [16 x i8*]* %87, i64 0, i64 %86
  %89 = load i8*, i8** %88, align 8
  br label %90

90:                                               ; preds = %79, %83, %69
  %91 = phi i8* [ %32, %69 ], [ getelementptr inbounds ([11 x i8], [11 x i8]* @.str.58, i64 0, i64 0), %79 ], [ %89, %83 ]
  %92 = call i32 (i8*, i64, i8*, ...) @snprintf(i8* nonnull %36, i64 %78, i8* getelementptr inbounds ([4 x i8], [4 x i8]* @.str.23, i64 0, i64 0), i8* %91) #16
  %93 = call i64 @strlen(i8* nonnull %36) #16
  %94 = call dereferenceable(160) %"class.std::__1::basic_ostream"* @_ZNSt3__124__put_character_sequenceIcNS_11char_traitsIcEEEERNS_13basic_ostreamIT_T0_EES7_PKS4_m(%"class.std::__1::basic_ostream"* dereferenceable(160) %1, i8* nonnull %36, i64 %93) #16
  %95 = icmp slt i32 %73, %92
  %96 = select i1 %95, i32 %73, i32 %92
  %97 = add nsw i32 %96, %70
  %98 = icmp slt i32 %59, %97
  br i1 %98, label %99, label %100, !prof !2

99:                                               ; preds = %90
  call void (i8*, ...) @_Z8V8_FatalPKcz(i8* getelementptr inbounds ([18 x i8], [18 x i8]* @.str.1, i64 0, i64 0), i8* getelementptr inbounds ([24 x i8], [24 x i8]* @.str.24, i64 0, i64 0)) #17
  unreachable

100:                                              ; preds = %90
  %101 = load i32, i32* %47, align 4
  %102 = and i32 %101, 1
  %103 = icmp eq i32 %102, 0
  %104 = select i1 %103, i8 61, i8 45
  %105 = icmp sgt i32 %59, %97
  br i1 %105, label %106, label %111

106:                                              ; preds = %100, %106
  %107 = phi i32 [ %109, %106 ], [ %97, %100 ]
  call void @llvm.lifetime.start.p0i8(i64 1, i8* nonnull %6)
  store i8 %104, i8* %6, align 1
  %108 = call dereferenceable(160) %"class.std::__1::basic_ostream"* @_ZNSt3__124__put_character_sequenceIcNS_11char_traitsIcEEEERNS_13basic_ostreamIT_T0_EES7_PKS4_m(%"class.std::__1::basic_ostream"* dereferenceable(160) %1, i8* nonnull %6, i64 1) #16
  call void @llvm.lifetime.end.p0i8(i64 1, i8* nonnull %6)
  %109 = add nsw i32 %107, 1
  %110 = icmp sgt i32 %59, %109
  br i1 %110, label %106, label %111

111:                                              ; preds = %106, %100
  %112 = phi i32 [ %97, %100 ], [ %59, %106 ]
  call void @llvm.lifetime.end.p0i8(i64 32, i8* nonnull %36) #16
  %113 = getelementptr inbounds %"class.v8::internal::compiler::UseInterval", %"class.v8::internal::compiler::UseInterval"* %54, i64 0, i32 2
  %114 = load %"class.v8::internal::compiler::UseInterval"*, %"class.v8::internal::compiler::UseInterval"** %113, align 8
  %115 = icmp eq %"class.v8::internal::compiler::UseInterval"* %114, null
  br i1 %115, label %48, label %53
}

; Function Attrs: nofree nounwind
declare i32 @snprintf(i8* nocapture, i64, i8* nocapture readonly, ...) local_unnamed_addr #9

; Function Attrs: norecurse nounwind readonly ssp uwtable
define hidden i8* @_ZNK2v88internal8compiler17RegisterAllocator12RegisterNameEi(%"class.v8::internal::compiler::RegisterAllocator"* nocapture readonly, i32) local_unnamed_addr #2 align 2 {
  %3 = icmp eq i32 %1, 32
  br i1 %3, label %19, label %4

4:                                                ; preds = %2
  %5 = getelementptr inbounds %"class.v8::internal::compiler::RegisterAllocator", %"class.v8::internal::compiler::RegisterAllocator"* %0, i64 0, i32 1
  %6 = load i32, i32* %5, align 8
  %7 = icmp eq i32 %6, 0
  %8 = icmp eq i32 %1, -1
  br i1 %7, label %9, label %14

9:                                                ; preds = %4
  br i1 %8, label %19, label %10

10:                                               ; preds = %9
  %11 = sext i32 %1 to i64
  %12 = getelementptr inbounds [16 x i8*], [16 x i8*]* @_ZZN2v88internal12RegisterNameENS0_8RegisterEE5Names, i64 0, i64 %11
  %13 = load i8*, i8** %12, align 8
  br label %19

14:                                               ; preds = %4
  br i1 %8, label %19, label %15

15:                                               ; preds = %14
  %16 = sext i32 %1 to i64
  %17 = getelementptr inbounds [16 x i8*], [16 x i8*]* @_ZZN2v88internal12RegisterNameENS0_11XMMRegisterEE5Names, i64 0, i64 %16
  %18 = load i8*, i8** %17, align 8
  br label %19

19:                                               ; preds = %15, %14, %10, %9, %2
  %20 = phi i8* [ getelementptr inbounds ([11 x i8], [11 x i8]* @.str.58, i64 0, i64 0), %2 ], [ %13, %10 ], [ getelementptr inbounds ([8 x i8], [8 x i8]* @.str.123, i64 0, i64 0), %9 ], [ %18, %15 ], [ getelementptr inbounds ([8 x i8], [8 x i8]* @.str.123, i64 0, i64 0), %14 ]
  ret i8* %20
}

; Function Attrs: nounwind ssp uwtable
define hidden void @_ZN2v88internal8compiler19LinearScanAllocator18PrintRangeOverviewERNSt3__113basic_ostreamIcNS3_11char_traitsIcEEEE(%"class.v8::internal::compiler::LinearScanAllocator"* nocapture readonly, %"class.std::__1::basic_ostream"* dereferenceable(160)) local_unnamed_addr #0 align 2 {
  %3 = getelementptr inbounds %"class.v8::internal::compiler::LinearScanAllocator", %"class.v8::internal::compiler::LinearScanAllocator"* %0, i64 0, i32 0, i32 0
  %4 = load %"class.v8::internal::compiler::TopTierRegisterAllocationData"*, %"class.v8::internal::compiler::TopTierRegisterAllocationData"** %3, align 8
  %5 = getelementptr inbounds %"class.v8::internal::compiler::TopTierRegisterAllocationData", %"class.v8::internal::compiler::TopTierRegisterAllocationData"* %4, i64 0, i32 3
  %6 = load %"class.v8::internal::compiler::InstructionSequence"*, %"class.v8::internal::compiler::InstructionSequence"** %5, align 8
  %7 = getelementptr inbounds %"class.v8::internal::compiler::InstructionSequence", %"class.v8::internal::compiler::InstructionSequence"* %6, i64 0, i32 2
  %8 = load %"class.v8::internal::ZoneVector.1170"*, %"class.v8::internal::ZoneVector.1170"** %7, align 8
  tail call fastcc void @_ZN2v88internal8compiler12_GLOBAL__N_113PrintBlockRowERNSt3__113basic_ostreamIcNS3_11char_traitsIcEEEERKNS0_10ZoneVectorIPNS1_16InstructionBlockEEE(%"class.std::__1::basic_ostream"* dereferenceable(160) %1, %"class.v8::internal::ZoneVector.1170"* dereferenceable(32) %8)
  %9 = load %"class.v8::internal::compiler::TopTierRegisterAllocationData"*, %"class.v8::internal::compiler::TopTierRegisterAllocationData"** %3, align 8
  %10 = getelementptr inbounds %"class.v8::internal::compiler::TopTierRegisterAllocationData", %"class.v8::internal::compiler::TopTierRegisterAllocationData"* %9, i64 0, i32 10, i32 0, i32 0, i32 0
  %11 = load %"class.v8::internal::compiler::TopLevelLiveRange"**, %"class.v8::internal::compiler::TopLevelLiveRange"*** %10, align 8
  %12 = getelementptr inbounds %"class.v8::internal::compiler::TopTierRegisterAllocationData", %"class.v8::internal::compiler::TopTierRegisterAllocationData"* %9, i64 0, i32 10, i32 0, i32 0, i32 1
  %13 = load %"class.v8::internal::compiler::TopLevelLiveRange"**, %"class.v8::internal::compiler::TopLevelLiveRange"*** %12, align 8
  %14 = icmp eq %"class.v8::internal::compiler::TopLevelLiveRange"** %11, %13
  br i1 %14, label %17, label %26

15:                                               ; preds = %31
  %16 = load %"class.v8::internal::compiler::TopTierRegisterAllocationData"*, %"class.v8::internal::compiler::TopTierRegisterAllocationData"** %3, align 8
  br label %17

17:                                               ; preds = %15, %2
  %18 = phi %"class.v8::internal::compiler::TopTierRegisterAllocationData"* [ %16, %15 ], [ %9, %2 ]
  %19 = getelementptr inbounds %"class.v8::internal::compiler::TopTierRegisterAllocationData", %"class.v8::internal::compiler::TopTierRegisterAllocationData"* %18, i64 0, i32 9, i32 0, i32 0, i32 0
  %20 = load %"class.v8::internal::compiler::TopLevelLiveRange"**, %"class.v8::internal::compiler::TopLevelLiveRange"*** %19, align 8
  %21 = getelementptr inbounds %"class.v8::internal::compiler::TopTierRegisterAllocationData", %"class.v8::internal::compiler::TopTierRegisterAllocationData"* %18, i64 0, i32 9, i32 0, i32 0, i32 1
  %22 = load %"class.v8::internal::compiler::TopLevelLiveRange"**, %"class.v8::internal::compiler::TopLevelLiveRange"*** %21, align 8
  %23 = icmp eq %"class.v8::internal::compiler::TopLevelLiveRange"** %20, %22
  br i1 %23, label %34, label %24

24:                                               ; preds = %17
  %25 = getelementptr inbounds %"class.v8::internal::compiler::LinearScanAllocator", %"class.v8::internal::compiler::LinearScanAllocator"* %0, i64 0, i32 0, i32 1
  br label %35

26:                                               ; preds = %2, %31
  %27 = phi %"class.v8::internal::compiler::TopLevelLiveRange"** [ %32, %31 ], [ %11, %2 ]
  %28 = load %"class.v8::internal::compiler::TopLevelLiveRange"*, %"class.v8::internal::compiler::TopLevelLiveRange"** %27, align 8
  %29 = icmp eq %"class.v8::internal::compiler::TopLevelLiveRange"* %28, null
  br i1 %29, label %31, label %30

30:                                               ; preds = %26
  tail call void @_ZN2v88internal8compiler19LinearScanAllocator13PrintRangeRowERNSt3__113basic_ostreamIcNS3_11char_traitsIcEEEEPKNS1_17TopLevelLiveRangeE(%"class.v8::internal::compiler::LinearScanAllocator"* %0, %"class.std::__1::basic_ostream"* dereferenceable(160) %1, %"class.v8::internal::compiler::TopLevelLiveRange"* nonnull %28)
  br label %31

31:                                               ; preds = %26, %30
  %32 = getelementptr inbounds %"class.v8::internal::compiler::TopLevelLiveRange"*, %"class.v8::internal::compiler::TopLevelLiveRange"** %27, i64 1
  %33 = icmp eq %"class.v8::internal::compiler::TopLevelLiveRange"** %32, %13
  br i1 %33, label %15, label %26

34:                                               ; preds = %64, %17
  ret void

35:                                               ; preds = %24, %64
  %36 = phi i32 [ 0, %24 ], [ %65, %64 ]
  %37 = phi %"class.v8::internal::compiler::TopLevelLiveRange"** [ %20, %24 ], [ %66, %64 ]
  %38 = load %"class.v8::internal::compiler::TopLevelLiveRange"*, %"class.v8::internal::compiler::TopLevelLiveRange"** %37, align 8
  %39 = icmp eq %"class.v8::internal::compiler::TopLevelLiveRange"* %38, null
  br i1 %39, label %64, label %40

40:                                               ; preds = %35
  %41 = getelementptr inbounds %"class.v8::internal::compiler::TopLevelLiveRange", %"class.v8::internal::compiler::TopLevelLiveRange"* %38, i64 0, i32 0, i32 3
  %42 = load %"class.v8::internal::compiler::UseInterval"*, %"class.v8::internal::compiler::UseInterval"** %41, align 8
  %43 = icmp eq %"class.v8::internal::compiler::UseInterval"* %42, null
  br i1 %43, label %64, label %44

44:                                               ; preds = %40
  %45 = getelementptr inbounds %"class.v8::internal::compiler::TopLevelLiveRange", %"class.v8::internal::compiler::TopLevelLiveRange"* %38, i64 0, i32 0, i32 1
  %46 = load i32, i32* %45, align 4
  %47 = lshr i32 %46, 13
  %48 = trunc i32 %47 to i8
  %49 = icmp ugt i8 %48, 11
  %50 = zext i1 %49 to i32
  %51 = load i32, i32* %25, align 8
  %52 = icmp eq i32 %51, %50
  br i1 %52, label %53, label %64

53:                                               ; preds = %44
  %54 = add nsw i32 %36, 1
  %55 = srem i32 %36, 10
  %56 = icmp eq i32 %55, 0
  br i1 %56, label %57, label %63

57:                                               ; preds = %53
  %58 = load %"class.v8::internal::compiler::TopTierRegisterAllocationData"*, %"class.v8::internal::compiler::TopTierRegisterAllocationData"** %3, align 8
  %59 = getelementptr inbounds %"class.v8::internal::compiler::TopTierRegisterAllocationData", %"class.v8::internal::compiler::TopTierRegisterAllocationData"* %58, i64 0, i32 3
  %60 = load %"class.v8::internal::compiler::InstructionSequence"*, %"class.v8::internal::compiler::InstructionSequence"** %59, align 8
  %61 = getelementptr inbounds %"class.v8::internal::compiler::InstructionSequence", %"class.v8::internal::compiler::InstructionSequence"* %60, i64 0, i32 2
  %62 = load %"class.v8::internal::ZoneVector.1170"*, %"class.v8::internal::ZoneVector.1170"** %61, align 8
  tail call fastcc void @_ZN2v88internal8compiler12_GLOBAL__N_113PrintBlockRowERNSt3__113basic_ostreamIcNS3_11char_traitsIcEEEERKNS0_10ZoneVectorIPNS1_16InstructionBlockEEE(%"class.std::__1::basic_ostream"* dereferenceable(160) %1, %"class.v8::internal::ZoneVector.1170"* dereferenceable(32) %62)
  br label %63

63:                                               ; preds = %57, %53
  tail call void @_ZN2v88internal8compiler19LinearScanAllocator13PrintRangeRowERNSt3__113basic_ostreamIcNS3_11char_traitsIcEEEEPKNS1_17TopLevelLiveRangeE(%"class.v8::internal::compiler::LinearScanAllocator"* %0, %"class.std::__1::basic_ostream"* dereferenceable(160) %1, %"class.v8::internal::compiler::TopLevelLiveRange"* nonnull %38)
  br label %64

64:                                               ; preds = %35, %40, %44, %63
  %65 = phi i32 [ %54, %63 ], [ %36, %44 ], [ %36, %40 ], [ %36, %35 ]
  %66 = getelementptr inbounds %"class.v8::internal::compiler::TopLevelLiveRange"*, %"class.v8::internal::compiler::TopLevelLiveRange"** %37, i64 1
  %67 = icmp eq %"class.v8::internal::compiler::TopLevelLiveRange"** %66, %22
  br i1 %67, label %34, label %35
}

; Function Attrs: nounwind ssp uwtable
define internal fastcc void @_ZN2v88internal8compiler12_GLOBAL__N_113PrintBlockRowERNSt3__113basic_ostreamIcNS3_11char_traitsIcEEEERKNS0_10ZoneVectorIPNS1_16InstructionBlockEEE(%"class.std::__1::basic_ostream"* dereferenceable(160), %"class.v8::internal::ZoneVector.1170"* nocapture readonly dereferenceable(32)) unnamed_addr #0 {
  %3 = alloca i8, align 1
  %4 = alloca i8, align 1
  %5 = alloca i8, align 1
  %6 = alloca [32 x i8], align 16
  %7 = tail call dereferenceable(160) %"class.std::__1::basic_ostream"* @_ZNSt3__124__put_character_sequenceIcNS_11char_traitsIcEEEERNS_13basic_ostreamIT_T0_EES7_PKS4_m(%"class.std::__1::basic_ostream"* dereferenceable(160) %0, i8* getelementptr inbounds ([6 x i8], [6 x i8]* @.str.102, i64 0, i64 0), i64 5) #16
  %8 = getelementptr inbounds %"class.v8::internal::ZoneVector.1170", %"class.v8::internal::ZoneVector.1170"* %1, i64 0, i32 0, i32 0, i32 0
  %9 = load %"class.v8::internal::compiler::InstructionBlock"**, %"class.v8::internal::compiler::InstructionBlock"*** %8, align 8
  %10 = getelementptr inbounds %"class.v8::internal::ZoneVector.1170", %"class.v8::internal::ZoneVector.1170"* %1, i64 0, i32 0, i32 0, i32 1
  %11 = load %"class.v8::internal::compiler::InstructionBlock"**, %"class.v8::internal::compiler::InstructionBlock"*** %10, align 8
  %12 = icmp eq %"class.v8::internal::compiler::InstructionBlock"** %9, %11
  br i1 %12, label %15, label %13

13:                                               ; preds = %2
  %14 = getelementptr inbounds [32 x i8], [32 x i8]* %6, i64 0, i64 0
  br label %17

15:                                               ; preds = %43, %2
  call void @llvm.lifetime.start.p0i8(i64 1, i8* nonnull %3)
  store i8 10, i8* %3, align 1
  %16 = call dereferenceable(160) %"class.std::__1::basic_ostream"* @_ZNSt3__124__put_character_sequenceIcNS_11char_traitsIcEEEERNS_13basic_ostreamIT_T0_EES7_PKS4_m(%"class.std::__1::basic_ostream"* dereferenceable(160) %0, i8* nonnull %3, i64 1) #16
  call void @llvm.lifetime.end.p0i8(i64 1, i8* nonnull %3)
  ret void

17:                                               ; preds = %13, %43
  %18 = phi %"class.v8::internal::compiler::InstructionBlock"** [ %9, %13 ], [ %45, %43 ]
  %19 = load %"class.v8::internal::compiler::InstructionBlock"*, %"class.v8::internal::compiler::InstructionBlock"** %18, align 8
  %20 = getelementptr inbounds %"class.v8::internal::compiler::InstructionBlock", %"class.v8::internal::compiler::InstructionBlock"* %19, i64 0, i32 8
  %21 = load i32, i32* %20, align 4
  %22 = getelementptr inbounds %"class.v8::internal::compiler::InstructionBlock", %"class.v8::internal::compiler::InstructionBlock"* %19, i64 0, i32 9
  %23 = load i32, i32* %22, align 8
  %24 = sub i32 %23, %21
  %25 = shl i32 %24, 2
  call void @llvm.lifetime.start.p0i8(i64 32, i8* nonnull %14) #16
  %26 = getelementptr inbounds %"class.v8::internal::compiler::InstructionBlock", %"class.v8::internal::compiler::InstructionBlock"* %19, i64 0, i32 4, i32 0
  %27 = load i32, i32* %26, align 4
  %28 = getelementptr inbounds %"class.v8::internal::compiler::InstructionBlock", %"class.v8::internal::compiler::InstructionBlock"* %19, i64 0, i32 10
  %29 = load i8, i8* %28, align 4, !range !3
  %30 = icmp eq i8 %29, 0
  %31 = select i1 %30, i8* getelementptr inbounds ([1 x i8], [1 x i8]* @.str.104, i64 0, i64 0), i8* getelementptr inbounds ([11 x i8], [11 x i8]* @.str.103, i64 0, i64 0)
  %32 = icmp slt i32 %25, 32
  %33 = select i1 %32, i32 %25, i32 32
  %34 = sext i32 %33 to i64
  %35 = call i32 (i8*, i64, i8*, ...) @snprintf(i8* nonnull %14, i64 %34, i8* getelementptr inbounds ([9 x i8], [9 x i8]* @.str.105, i64 0, i64 0), i32 %27, i8* %31) #16
  %36 = call i64 @strlen(i8* nonnull %14) #16
  %37 = call dereferenceable(160) %"class.std::__1::basic_ostream"* @_ZNSt3__124__put_character_sequenceIcNS_11char_traitsIcEEEERNS_13basic_ostreamIT_T0_EES7_PKS4_m(%"class.std::__1::basic_ostream"* dereferenceable(160) %0, i8* nonnull %14, i64 %36) #16
  %38 = icmp slt i32 %33, %35
  %39 = select i1 %38, i32 %33, i32 %35
  %40 = xor i32 %39, -1
  %41 = add i32 %25, %40
  %42 = icmp sgt i32 %41, 0
  br i1 %42, label %47, label %43

43:                                               ; preds = %47, %17
  call void @llvm.lifetime.start.p0i8(i64 1, i8* nonnull %4)
  store i8 93, i8* %4, align 1
  %44 = call dereferenceable(160) %"class.std::__1::basic_ostream"* @_ZNSt3__124__put_character_sequenceIcNS_11char_traitsIcEEEERNS_13basic_ostreamIT_T0_EES7_PKS4_m(%"class.std::__1::basic_ostream"* dereferenceable(160) %0, i8* nonnull %4, i64 1) #16
  call void @llvm.lifetime.end.p0i8(i64 1, i8* nonnull %4)
  call void @llvm.lifetime.end.p0i8(i64 32, i8* nonnull %14) #16
  %45 = getelementptr inbounds %"class.v8::internal::compiler::InstructionBlock"*, %"class.v8::internal::compiler::InstructionBlock"** %18, i64 1
  %46 = icmp eq %"class.v8::internal::compiler::InstructionBlock"** %45, %11
  br i1 %46, label %15, label %17

47:                                               ; preds = %17, %47
  %48 = phi i32 [ %50, %47 ], [ 0, %17 ]
  call void @llvm.lifetime.start.p0i8(i64 1, i8* nonnull %5)
  store i8 45, i8* %5, align 1
  %49 = call dereferenceable(160) %"class.std::__1::basic_ostream"* @_ZNSt3__124__put_character_sequenceIcNS_11char_traitsIcEEEERNS_13basic_ostreamIT_T0_EES7_PKS4_m(%"class.std::__1::basic_ostream"* dereferenceable(160) %0, i8* nonnull %5, i64 1) #16
  call void @llvm.lifetime.end.p0i8(i64 1, i8* nonnull %5)
  %50 = add nuw nsw i32 %48, 1
  %51 = icmp slt i32 %50, %41
  br i1 %51, label %47, label %43
}

; Function Attrs: nounwind ssp uwtable
define hidden void @_ZN2v88internal8compiler10SpillRangeC2EPNS1_17TopLevelLiveRangeEPNS0_4ZoneE(%"class.v8::internal::compiler::SpillRange"*, %"class.v8::internal::compiler::TopLevelLiveRange"*, %"class.v8::internal::Zone"*) unnamed_addr #0 align 2 {
  %4 = ptrtoint %"class.v8::internal::compiler::TopLevelLiveRange"* %1 to i64
  %5 = ptrtoint %"class.v8::internal::Zone"* %2 to i64
  %6 = getelementptr inbounds %"class.v8::internal::compiler::SpillRange", %"class.v8::internal::compiler::SpillRange"* %0, i64 0, i32 0, i32 0, i32 0, i32 2, i32 1
  %7 = bitcast %"struct.std::__1::__compressed_pair_elem.34"* %6 to i64*
  %8 = bitcast %"class.v8::internal::compiler::SpillRange"* %0 to i8*
  tail call void @llvm.memset.p0i8.i64(i8* align 8 %8, i8 0, i64 24, i1 false) #16
  store i64 %5, i64* %7, align 8
  %9 = getelementptr inbounds %"class.v8::internal::compiler::SpillRange", %"class.v8::internal::compiler::SpillRange"* %0, i64 0, i32 2, i32 0
  store i32 -1, i32* %9, align 4
  %10 = getelementptr inbounds %"class.v8::internal::compiler::SpillRange", %"class.v8::internal::compiler::SpillRange"* %0, i64 0, i32 3
  store i32 -1, i32* %10, align 4
  %11 = getelementptr inbounds %"class.v8::internal::compiler::SpillRange", %"class.v8::internal::compiler::SpillRange"* %0, i64 0, i32 4
  %12 = bitcast %"class.v8::internal::compiler::TopLevelLiveRange"* %1 to %"class.v8::internal::compiler::LiveRange"*
  %13 = getelementptr inbounds %"class.v8::internal::compiler::TopLevelLiveRange", %"class.v8::internal::compiler::TopLevelLiveRange"* %1, i64 0, i32 0, i32 1
  %14 = load i32, i32* %13, align 4
  %15 = lshr i32 %14, 13
  %16 = trunc i32 %15 to i8
  %17 = add i8 %16, -1
  %18 = icmp ult i8 %17, 14
  br i1 %18, label %20, label %19

19:                                               ; preds = %20, %3
  tail call void (i8*, ...) @_Z8V8_FatalPKcz(i8* getelementptr inbounds ([17 x i8], [17 x i8]* @.str, i64 0, i64 0)) #17
  unreachable

20:                                               ; preds = %3
  %21 = zext i8 %17 to i16
  %22 = lshr i16 16351, %21
  %23 = and i16 %22, 1
  %24 = icmp eq i16 %23, 0
  br i1 %24, label %19, label %25

25:                                               ; preds = %20
  %26 = sext i8 %17 to i64
  %27 = getelementptr inbounds [14 x i32], [14 x i32]* @switch.table._ZN2v88internal8compiler10SpillRangeC2EPNS1_17TopLevelLiveRangeEPNS0_4ZoneE, i64 0, i64 %26
  %28 = load i32, i32* %27, align 4
  store i32 %28, i32* %11, align 8
  %29 = icmp eq %"class.v8::internal::compiler::TopLevelLiveRange"* %1, null
  br i1 %29, label %30, label %33

30:                                               ; preds = %25
  %31 = getelementptr inbounds %"class.v8::internal::compiler::SpillRange", %"class.v8::internal::compiler::SpillRange"* %0, i64 0, i32 1
  store %"class.v8::internal::compiler::UseInterval"* null, %"class.v8::internal::compiler::UseInterval"** %31, align 8
  %32 = getelementptr inbounds %"class.v8::internal::compiler::SpillRange", %"class.v8::internal::compiler::SpillRange"* %0, i64 0, i32 0, i32 0, i32 0, i32 1
  br label %49

33:                                               ; preds = %25
  %34 = getelementptr inbounds %"class.v8::internal::Zone", %"class.v8::internal::Zone"* %2, i64 0, i32 2
  %35 = getelementptr inbounds %"class.v8::internal::Zone", %"class.v8::internal::Zone"* %2, i64 0, i32 3
  br label %282

36:                                               ; preds = %321
  %37 = getelementptr inbounds %"class.v8::internal::compiler::SpillRange", %"class.v8::internal::compiler::SpillRange"* %0, i64 0, i32 0, i32 0, i32 0, i32 1
  %38 = load %"class.v8::internal::compiler::TopLevelLiveRange"**, %"class.v8::internal::compiler::TopLevelLiveRange"*** %37, align 8
  %39 = getelementptr inbounds %"class.v8::internal::compiler::SpillRange", %"class.v8::internal::compiler::SpillRange"* %0, i64 0, i32 0, i32 0, i32 0, i32 2, i32 0, i32 0
  %40 = load %"class.v8::internal::compiler::TopLevelLiveRange"**, %"class.v8::internal::compiler::TopLevelLiveRange"*** %39, align 8
  %41 = getelementptr inbounds %"class.v8::internal::compiler::SpillRange", %"class.v8::internal::compiler::SpillRange"* %0, i64 0, i32 1
  store %"class.v8::internal::compiler::UseInterval"* %323, %"class.v8::internal::compiler::UseInterval"** %41, align 8
  %42 = getelementptr inbounds %"class.v8::internal::compiler::SpillRange", %"class.v8::internal::compiler::SpillRange"* %0, i64 0, i32 0, i32 0, i32 0, i32 1
  %43 = icmp eq %"class.v8::internal::compiler::TopLevelLiveRange"** %38, %40
  br i1 %43, label %49, label %44

44:                                               ; preds = %36
  %45 = bitcast %"class.v8::internal::compiler::TopLevelLiveRange"** %38 to i64*
  store i64 %4, i64* %45, align 8
  %46 = getelementptr inbounds %"class.v8::internal::compiler::TopLevelLiveRange"*, %"class.v8::internal::compiler::TopLevelLiveRange"** %38, i64 1
  %47 = ptrtoint %"class.v8::internal::compiler::TopLevelLiveRange"** %46 to i64
  %48 = bitcast %"class.v8::internal::compiler::TopLevelLiveRange"*** %42 to i64*
  store i64 %47, i64* %48, align 8
  br label %276

49:                                               ; preds = %30, %36
  %50 = phi %"class.v8::internal::compiler::TopLevelLiveRange"*** [ %32, %30 ], [ %42, %36 ]
  %51 = phi %"class.v8::internal::compiler::UseInterval"* [ null, %30 ], [ %322, %36 ]
  %52 = phi %"class.v8::internal::compiler::TopLevelLiveRange"** [ null, %30 ], [ %40, %36 ]
  %53 = ptrtoint %"class.v8::internal::compiler::TopLevelLiveRange"** %52 to i64
  %54 = bitcast %"class.v8::internal::compiler::TopLevelLiveRange"*** %50 to i64*
  %55 = bitcast %"class.v8::internal::compiler::SpillRange"* %0 to i64*
  %56 = load i64, i64* %55, align 8
  %57 = sub i64 %53, %56
  %58 = ashr exact i64 %57, 3
  %59 = add nsw i64 %58, 1
  %60 = icmp ugt i64 %59, 268435455
  br i1 %60, label %61, label %63

61:                                               ; preds = %49
  %62 = bitcast %"class.v8::internal::compiler::SpillRange"* %0 to %"class.std::__1::__vector_base_common"*
  tail call void @_ZNKSt3__120__vector_base_commonILb1EE20__throw_length_errorEv(%"class.std::__1::__vector_base_common"* %62) #17
  unreachable

63:                                               ; preds = %49
  %64 = getelementptr inbounds %"class.v8::internal::compiler::SpillRange", %"class.v8::internal::compiler::SpillRange"* %0, i64 0, i32 0, i32 0, i32 0, i32 2, i32 0, i32 0
  %65 = bitcast %"class.v8::internal::compiler::TopLevelLiveRange"*** %64 to i64*
  %66 = icmp ult i64 %58, 134217727
  br i1 %66, label %67, label %72

67:                                               ; preds = %63
  %68 = ashr exact i64 %57, 2
  %69 = icmp ult i64 %68, %59
  %70 = select i1 %69, i64 %59, i64 %68
  %71 = icmp eq i64 %70, 0
  br i1 %71, label %90, label %72

72:                                               ; preds = %67, %63
  %73 = phi i64 [ %70, %67 ], [ 268435455, %63 ]
  %74 = getelementptr inbounds %"class.v8::internal::compiler::SpillRange", %"class.v8::internal::compiler::SpillRange"* %0, i64 0, i32 0, i32 0, i32 0, i32 2, i32 1, i32 0, i32 0
  %75 = load %"class.v8::internal::Zone"*, %"class.v8::internal::Zone"** %74, align 8
  %76 = shl i64 %73, 3
  %77 = getelementptr inbounds %"class.v8::internal::Zone", %"class.v8::internal::Zone"* %75, i64 0, i32 2
  %78 = load i64, i64* %77, align 8
  %79 = getelementptr inbounds %"class.v8::internal::Zone", %"class.v8::internal::Zone"* %75, i64 0, i32 3
  %80 = load i64, i64* %79, align 8
  %81 = sub i64 %80, %78
  %82 = icmp ugt i64 %76, %81
  br i1 %82, label %83, label %85, !prof !2

83:                                               ; preds = %72
  %84 = tail call i64 @_ZN2v88internal4Zone9NewExpandEm(%"class.v8::internal::Zone"* %75, i64 %76) #16
  br label %87

85:                                               ; preds = %72
  %86 = add i64 %78, %76
  store i64 %86, i64* %77, align 8
  br label %87

87:                                               ; preds = %85, %83
  %88 = phi i64 [ %84, %83 ], [ %78, %85 ]
  %89 = inttoptr i64 %88 to %"class.v8::internal::compiler::TopLevelLiveRange"**
  br label %90

90:                                               ; preds = %87, %67
  %91 = phi i64 [ %73, %87 ], [ 0, %67 ]
  %92 = phi %"class.v8::internal::compiler::TopLevelLiveRange"** [ %89, %87 ], [ null, %67 ]
  %93 = getelementptr inbounds %"class.v8::internal::compiler::TopLevelLiveRange"*, %"class.v8::internal::compiler::TopLevelLiveRange"** %92, i64 %58
  %94 = getelementptr inbounds %"class.v8::internal::compiler::TopLevelLiveRange"*, %"class.v8::internal::compiler::TopLevelLiveRange"** %92, i64 %91
  %95 = ptrtoint %"class.v8::internal::compiler::TopLevelLiveRange"** %94 to i64
  %96 = bitcast %"class.v8::internal::compiler::TopLevelLiveRange"** %93 to i64*
  store i64 %4, i64* %96, align 8
  %97 = getelementptr inbounds %"class.v8::internal::compiler::TopLevelLiveRange"*, %"class.v8::internal::compiler::TopLevelLiveRange"** %93, i64 1
  %98 = ptrtoint %"class.v8::internal::compiler::TopLevelLiveRange"** %97 to i64
  %99 = getelementptr inbounds %"class.v8::internal::compiler::SpillRange", %"class.v8::internal::compiler::SpillRange"* %0, i64 0, i32 0, i32 0, i32 0, i32 0
  %100 = load %"class.v8::internal::compiler::TopLevelLiveRange"**, %"class.v8::internal::compiler::TopLevelLiveRange"*** %99, align 8
  %101 = ptrtoint %"class.v8::internal::compiler::TopLevelLiveRange"** %100 to i64
  %102 = load %"class.v8::internal::compiler::TopLevelLiveRange"**, %"class.v8::internal::compiler::TopLevelLiveRange"*** %50, align 8
  %103 = icmp eq %"class.v8::internal::compiler::TopLevelLiveRange"** %102, %100
  br i1 %103, label %273, label %104

104:                                              ; preds = %90
  %105 = getelementptr %"class.v8::internal::compiler::TopLevelLiveRange"*, %"class.v8::internal::compiler::TopLevelLiveRange"** %102, i64 -1
  %106 = ptrtoint %"class.v8::internal::compiler::TopLevelLiveRange"** %105 to i64
  %107 = sub i64 %106, %101
  %108 = lshr i64 %107, 3
  %109 = add nuw nsw i64 %108, 1
  %110 = icmp ult i64 %109, 4
  br i1 %110, label %203, label %111

111:                                              ; preds = %104
  %112 = getelementptr %"class.v8::internal::compiler::TopLevelLiveRange"*, %"class.v8::internal::compiler::TopLevelLiveRange"** %102, i64 -1
  %113 = ptrtoint %"class.v8::internal::compiler::TopLevelLiveRange"** %112 to i64
  %114 = sub i64 %113, %101
  %115 = lshr i64 %114, 3
  %116 = xor i64 %115, -1
  %117 = add nsw i64 %58, %116
  %118 = getelementptr %"class.v8::internal::compiler::TopLevelLiveRange"*, %"class.v8::internal::compiler::TopLevelLiveRange"** %92, i64 %117
  %119 = xor i64 %115, -1
  %120 = getelementptr %"class.v8::internal::compiler::TopLevelLiveRange"*, %"class.v8::internal::compiler::TopLevelLiveRange"** %102, i64 %119
  %121 = icmp ult %"class.v8::internal::compiler::TopLevelLiveRange"** %118, %102
  %122 = icmp ult %"class.v8::internal::compiler::TopLevelLiveRange"** %120, %93
  %123 = and i1 %121, %122
  br i1 %123, label %203, label %124

124:                                              ; preds = %111
  %125 = and i64 %109, 4611686018427387900
  %126 = sub nsw i64 0, %125
  %127 = getelementptr %"class.v8::internal::compiler::TopLevelLiveRange"*, %"class.v8::internal::compiler::TopLevelLiveRange"** %93, i64 %126
  %128 = sub nsw i64 0, %125
  %129 = getelementptr %"class.v8::internal::compiler::TopLevelLiveRange"*, %"class.v8::internal::compiler::TopLevelLiveRange"** %102, i64 %128
  %130 = add nsw i64 %125, -4
  %131 = lshr exact i64 %130, 2
  %132 = add nuw nsw i64 %131, 1
  %133 = and i64 %132, 1
  %134 = icmp eq i64 %130, 0
  br i1 %134, label %181, label %135

135:                                              ; preds = %124
  %136 = sub nuw nsw i64 %132, %133
  %137 = getelementptr %"class.v8::internal::compiler::TopLevelLiveRange"*, %"class.v8::internal::compiler::TopLevelLiveRange"** %93, i64 -1
  %138 = getelementptr %"class.v8::internal::compiler::TopLevelLiveRange"*, %"class.v8::internal::compiler::TopLevelLiveRange"** %102, i64 -1
  %139 = getelementptr %"class.v8::internal::compiler::TopLevelLiveRange"*, %"class.v8::internal::compiler::TopLevelLiveRange"** %93, i64 -1
  %140 = getelementptr %"class.v8::internal::compiler::TopLevelLiveRange"*, %"class.v8::internal::compiler::TopLevelLiveRange"** %102, i64 -1
  br label %141

141:                                              ; preds = %141, %135
  %142 = phi i64 [ 0, %135 ], [ %176, %141 ]
  %143 = phi i64 [ %136, %135 ], [ %177, %141 ]
  %144 = sub i64 0, %142
  %145 = sub i64 0, %142
  %146 = getelementptr inbounds %"class.v8::internal::compiler::TopLevelLiveRange"*, %"class.v8::internal::compiler::TopLevelLiveRange"** %137, i64 %144
  %147 = getelementptr inbounds %"class.v8::internal::compiler::TopLevelLiveRange"*, %"class.v8::internal::compiler::TopLevelLiveRange"** %138, i64 %145
  %148 = getelementptr inbounds %"class.v8::internal::compiler::TopLevelLiveRange"*, %"class.v8::internal::compiler::TopLevelLiveRange"** %147, i64 -1
  %149 = bitcast %"class.v8::internal::compiler::TopLevelLiveRange"** %148 to <2 x i64>*
  %150 = load <2 x i64>, <2 x i64>* %149, align 8, !alias.scope !4
  %151 = getelementptr inbounds %"class.v8::internal::compiler::TopLevelLiveRange"*, %"class.v8::internal::compiler::TopLevelLiveRange"** %147, i64 -2
  %152 = getelementptr inbounds %"class.v8::internal::compiler::TopLevelLiveRange"*, %"class.v8::internal::compiler::TopLevelLiveRange"** %151, i64 -1
  %153 = bitcast %"class.v8::internal::compiler::TopLevelLiveRange"** %152 to <2 x i64>*
  %154 = load <2 x i64>, <2 x i64>* %153, align 8, !alias.scope !4
  %155 = getelementptr inbounds %"class.v8::internal::compiler::TopLevelLiveRange"*, %"class.v8::internal::compiler::TopLevelLiveRange"** %146, i64 -1
  %156 = bitcast %"class.v8::internal::compiler::TopLevelLiveRange"** %155 to <2 x i64>*
  store <2 x i64> %150, <2 x i64>* %156, align 8, !alias.scope !7, !noalias !4
  %157 = getelementptr inbounds %"class.v8::internal::compiler::TopLevelLiveRange"*, %"class.v8::internal::compiler::TopLevelLiveRange"** %146, i64 -2
  %158 = getelementptr inbounds %"class.v8::internal::compiler::TopLevelLiveRange"*, %"class.v8::internal::compiler::TopLevelLiveRange"** %157, i64 -1
  %159 = bitcast %"class.v8::internal::compiler::TopLevelLiveRange"** %158 to <2 x i64>*
  store <2 x i64> %154, <2 x i64>* %159, align 8, !alias.scope !7, !noalias !4
  %160 = sub nuw nsw i64 -4, %142
  %161 = sub nuw nsw i64 -4, %142
  %162 = getelementptr inbounds %"class.v8::internal::compiler::TopLevelLiveRange"*, %"class.v8::internal::compiler::TopLevelLiveRange"** %139, i64 %160
  %163 = getelementptr inbounds %"class.v8::internal::compiler::TopLevelLiveRange"*, %"class.v8::internal::compiler::TopLevelLiveRange"** %140, i64 %161
  %164 = getelementptr inbounds %"class.v8::internal::compiler::TopLevelLiveRange"*, %"class.v8::internal::compiler::TopLevelLiveRange"** %163, i64 -1
  %165 = bitcast %"class.v8::internal::compiler::TopLevelLiveRange"** %164 to <2 x i64>*
  %166 = load <2 x i64>, <2 x i64>* %165, align 8, !alias.scope !4
  %167 = getelementptr inbounds %"class.v8::internal::compiler::TopLevelLiveRange"*, %"class.v8::internal::compiler::TopLevelLiveRange"** %163, i64 -2
  %168 = getelementptr inbounds %"class.v8::internal::compiler::TopLevelLiveRange"*, %"class.v8::internal::compiler::TopLevelLiveRange"** %167, i64 -1
  %169 = bitcast %"class.v8::internal::compiler::TopLevelLiveRange"** %168 to <2 x i64>*
  %170 = load <2 x i64>, <2 x i64>* %169, align 8, !alias.scope !4
  %171 = getelementptr inbounds %"class.v8::internal::compiler::TopLevelLiveRange"*, %"class.v8::internal::compiler::TopLevelLiveRange"** %162, i64 -1
  %172 = bitcast %"class.v8::internal::compiler::TopLevelLiveRange"** %171 to <2 x i64>*
  store <2 x i64> %166, <2 x i64>* %172, align 8, !alias.scope !7, !noalias !4
  %173 = getelementptr inbounds %"class.v8::internal::compiler::TopLevelLiveRange"*, %"class.v8::internal::compiler::TopLevelLiveRange"** %162, i64 -2
  %174 = getelementptr inbounds %"class.v8::internal::compiler::TopLevelLiveRange"*, %"class.v8::internal::compiler::TopLevelLiveRange"** %173, i64 -1
  %175 = bitcast %"class.v8::internal::compiler::TopLevelLiveRange"** %174 to <2 x i64>*
  store <2 x i64> %170, <2 x i64>* %175, align 8, !alias.scope !7, !noalias !4
  %176 = add i64 %142, 8
  %177 = add i64 %143, -2
  %178 = icmp eq i64 %177, 0
  br i1 %178, label %179, label %141, !llvm.loop !9

179:                                              ; preds = %141
  %180 = sub nuw nsw i64 -8, %142
  br label %181

181:                                              ; preds = %179, %124
  %182 = phi i64 [ 0, %124 ], [ %180, %179 ]
  %183 = icmp eq i64 %133, 0
  br i1 %183, label %201, label %184

184:                                              ; preds = %181
  %185 = getelementptr %"class.v8::internal::compiler::TopLevelLiveRange"*, %"class.v8::internal::compiler::TopLevelLiveRange"** %93, i64 -1
  %186 = getelementptr %"class.v8::internal::compiler::TopLevelLiveRange"*, %"class.v8::internal::compiler::TopLevelLiveRange"** %102, i64 -1
  %187 = getelementptr inbounds %"class.v8::internal::compiler::TopLevelLiveRange"*, %"class.v8::internal::compiler::TopLevelLiveRange"** %185, i64 %182
  %188 = getelementptr inbounds %"class.v8::internal::compiler::TopLevelLiveRange"*, %"class.v8::internal::compiler::TopLevelLiveRange"** %186, i64 %182
  %189 = getelementptr inbounds %"class.v8::internal::compiler::TopLevelLiveRange"*, %"class.v8::internal::compiler::TopLevelLiveRange"** %188, i64 -1
  %190 = bitcast %"class.v8::internal::compiler::TopLevelLiveRange"** %189 to <2 x i64>*
  %191 = load <2 x i64>, <2 x i64>* %190, align 8, !alias.scope !4
  %192 = getelementptr inbounds %"class.v8::internal::compiler::TopLevelLiveRange"*, %"class.v8::internal::compiler::TopLevelLiveRange"** %188, i64 -2
  %193 = getelementptr inbounds %"class.v8::internal::compiler::TopLevelLiveRange"*, %"class.v8::internal::compiler::TopLevelLiveRange"** %192, i64 -1
  %194 = bitcast %"class.v8::internal::compiler::TopLevelLiveRange"** %193 to <2 x i64>*
  %195 = load <2 x i64>, <2 x i64>* %194, align 8, !alias.scope !4
  %196 = getelementptr inbounds %"class.v8::internal::compiler::TopLevelLiveRange"*, %"class.v8::internal::compiler::TopLevelLiveRange"** %187, i64 -1
  %197 = bitcast %"class.v8::internal::compiler::TopLevelLiveRange"** %196 to <2 x i64>*
  store <2 x i64> %191, <2 x i64>* %197, align 8, !alias.scope !7, !noalias !4
  %198 = getelementptr inbounds %"class.v8::internal::compiler::TopLevelLiveRange"*, %"class.v8::internal::compiler::TopLevelLiveRange"** %187, i64 -2
  %199 = getelementptr inbounds %"class.v8::internal::compiler::TopLevelLiveRange"*, %"class.v8::internal::compiler::TopLevelLiveRange"** %198, i64 -1
  %200 = bitcast %"class.v8::internal::compiler::TopLevelLiveRange"** %199 to <2 x i64>*
  store <2 x i64> %195, <2 x i64>* %200, align 8, !alias.scope !7, !noalias !4
  br label %201

201:                                              ; preds = %181, %184
  %202 = icmp eq i64 %109, %125
  br i1 %202, label %273, label %203

203:                                              ; preds = %201, %111, %104
  %204 = phi %"class.v8::internal::compiler::TopLevelLiveRange"** [ %93, %111 ], [ %93, %104 ], [ %127, %201 ]
  %205 = phi %"class.v8::internal::compiler::TopLevelLiveRange"** [ %102, %111 ], [ %102, %104 ], [ %129, %201 ]
  %206 = getelementptr %"class.v8::internal::compiler::TopLevelLiveRange"*, %"class.v8::internal::compiler::TopLevelLiveRange"** %205, i64 -1
  %207 = ptrtoint %"class.v8::internal::compiler::TopLevelLiveRange"** %206 to i64
  %208 = sub i64 %207, %101
  %209 = lshr i64 %208, 3
  %210 = add nuw nsw i64 %209, 1
  %211 = and i64 %210, 7
  %212 = icmp eq i64 %211, 0
  br i1 %212, label %224, label %213

213:                                              ; preds = %203, %213
  %214 = phi %"class.v8::internal::compiler::TopLevelLiveRange"** [ %217, %213 ], [ %204, %203 ]
  %215 = phi %"class.v8::internal::compiler::TopLevelLiveRange"** [ %218, %213 ], [ %205, %203 ]
  %216 = phi i64 [ %222, %213 ], [ %211, %203 ]
  %217 = getelementptr inbounds %"class.v8::internal::compiler::TopLevelLiveRange"*, %"class.v8::internal::compiler::TopLevelLiveRange"** %214, i64 -1
  %218 = getelementptr inbounds %"class.v8::internal::compiler::TopLevelLiveRange"*, %"class.v8::internal::compiler::TopLevelLiveRange"** %215, i64 -1
  %219 = bitcast %"class.v8::internal::compiler::TopLevelLiveRange"** %218 to i64*
  %220 = load i64, i64* %219, align 8
  %221 = bitcast %"class.v8::internal::compiler::TopLevelLiveRange"** %217 to i64*
  store i64 %220, i64* %221, align 8
  %222 = add i64 %216, -1
  %223 = icmp eq i64 %222, 0
  br i1 %223, label %224, label %213, !llvm.loop !11

224:                                              ; preds = %213, %203
  %225 = phi %"class.v8::internal::compiler::TopLevelLiveRange"** [ undef, %203 ], [ %217, %213 ]
  %226 = phi %"class.v8::internal::compiler::TopLevelLiveRange"** [ %204, %203 ], [ %217, %213 ]
  %227 = phi %"class.v8::internal::compiler::TopLevelLiveRange"** [ %205, %203 ], [ %218, %213 ]
  %228 = icmp ult i64 %208, 56
  br i1 %228, label %273, label %229

229:                                              ; preds = %224, %229
  %230 = phi %"class.v8::internal::compiler::TopLevelLiveRange"** [ %267, %229 ], [ %226, %224 ]
  %231 = phi %"class.v8::internal::compiler::TopLevelLiveRange"** [ %268, %229 ], [ %227, %224 ]
  %232 = getelementptr inbounds %"class.v8::internal::compiler::TopLevelLiveRange"*, %"class.v8::internal::compiler::TopLevelLiveRange"** %230, i64 -1
  %233 = getelementptr inbounds %"class.v8::internal::compiler::TopLevelLiveRange"*, %"class.v8::internal::compiler::TopLevelLiveRange"** %231, i64 -1
  %234 = bitcast %"class.v8::internal::compiler::TopLevelLiveRange"** %233 to i64*
  %235 = load i64, i64* %234, align 8
  %236 = bitcast %"class.v8::internal::compiler::TopLevelLiveRange"** %232 to i64*
  store i64 %235, i64* %236, align 8
  %237 = getelementptr inbounds %"class.v8::internal::compiler::TopLevelLiveRange"*, %"class.v8::internal::compiler::TopLevelLiveRange"** %230, i64 -2
  %238 = getelementptr inbounds %"class.v8::internal::compiler::TopLevelLiveRange"*, %"class.v8::internal::compiler::TopLevelLiveRange"** %231, i64 -2
  %239 = bitcast %"class.v8::internal::compiler::TopLevelLiveRange"** %238 to i64*
  %240 = load i64, i64* %239, align 8
  %241 = bitcast %"class.v8::internal::compiler::TopLevelLiveRange"** %237 to i64*
  store i64 %240, i64* %241, align 8
  %242 = getelementptr inbounds %"class.v8::internal::compiler::TopLevelLiveRange"*, %"class.v8::internal::compiler::TopLevelLiveRange"** %230, i64 -3
  %243 = getelementptr inbounds %"class.v8::internal::compiler::TopLevelLiveRange"*, %"class.v8::internal::compiler::TopLevelLiveRange"** %231, i64 -3
  %244 = bitcast %"class.v8::internal::compiler::TopLevelLiveRange"** %243 to i64*
  %245 = load i64, i64* %244, align 8
  %246 = bitcast %"class.v8::internal::compiler::TopLevelLiveRange"** %242 to i64*
  store i64 %245, i64* %246, align 8
  %247 = getelementptr inbounds %"class.v8::internal::compiler::TopLevelLiveRange"*, %"class.v8::internal::compiler::TopLevelLiveRange"** %230, i64 -4
  %248 = getelementptr inbounds %"class.v8::internal::compiler::TopLevelLiveRange"*, %"class.v8::internal::compiler::TopLevelLiveRange"** %231, i64 -4
  %249 = bitcast %"class.v8::internal::compiler::TopLevelLiveRange"** %248 to i64*
  %250 = load i64, i64* %249, align 8
  %251 = bitcast %"class.v8::internal::compiler::TopLevelLiveRange"** %247 to i64*
  store i64 %250, i64* %251, align 8
  %252 = getelementptr inbounds %"class.v8::internal::compiler::TopLevelLiveRange"*, %"class.v8::internal::compiler::TopLevelLiveRange"** %230, i64 -5
  %253 = getelementptr inbounds %"class.v8::internal::compiler::TopLevelLiveRange"*, %"class.v8::internal::compiler::TopLevelLiveRange"** %231, i64 -5
  %254 = bitcast %"class.v8::internal::compiler::TopLevelLiveRange"** %253 to i64*
  %255 = load i64, i64* %254, align 8
  %256 = bitcast %"class.v8::internal::compiler::TopLevelLiveRange"** %252 to i64*
  store i64 %255, i64* %256, align 8
  %257 = getelementptr inbounds %"class.v8::internal::compiler::TopLevelLiveRange"*, %"class.v8::internal::compiler::TopLevelLiveRange"** %230, i64 -6
  %258 = getelementptr inbounds %"class.v8::internal::compiler::TopLevelLiveRange"*, %"class.v8::internal::compiler::TopLevelLiveRange"** %231, i64 -6
  %259 = bitcast %"class.v8::internal::compiler::TopLevelLiveRange"** %258 to i64*
  %260 = load i64, i64* %259, align 8
  %261 = bitcast %"class.v8::internal::compiler::TopLevelLiveRange"** %257 to i64*
  store i64 %260, i64* %261, align 8
  %262 = getelementptr inbounds %"class.v8::internal::compiler::TopLevelLiveRange"*, %"class.v8::internal::compiler::TopLevelLiveRange"** %230, i64 -7
  %263 = getelementptr inbounds %"class.v8::internal::compiler::TopLevelLiveRange"*, %"class.v8::internal::compiler::TopLevelLiveRange"** %231, i64 -7
  %264 = bitcast %"class.v8::internal::compiler::TopLevelLiveRange"** %263 to i64*
  %265 = load i64, i64* %264, align 8
  %266 = bitcast %"class.v8::internal::compiler::TopLevelLiveRange"** %262 to i64*
  store i64 %265, i64* %266, align 8
  %267 = getelementptr inbounds %"class.v8::internal::compiler::TopLevelLiveRange"*, %"class.v8::internal::compiler::TopLevelLiveRange"** %230, i64 -8
  %268 = getelementptr inbounds %"class.v8::internal::compiler::TopLevelLiveRange"*, %"class.v8::internal::compiler::TopLevelLiveRange"** %231, i64 -8
  %269 = bitcast %"class.v8::internal::compiler::TopLevelLiveRange"** %268 to i64*
  %270 = load i64, i64* %269, align 8
  %271 = bitcast %"class.v8::internal::compiler::TopLevelLiveRange"** %267 to i64*
  store i64 %270, i64* %271, align 8
  %272 = icmp eq %"class.v8::internal::compiler::TopLevelLiveRange"** %268, %100
  br i1 %272, label %273, label %229, !llvm.loop !13

273:                                              ; preds = %224, %229, %201, %90
  %274 = phi %"class.v8::internal::compiler::TopLevelLiveRange"** [ %93, %90 ], [ %127, %201 ], [ %225, %224 ], [ %267, %229 ]
  %275 = ptrtoint %"class.v8::internal::compiler::TopLevelLiveRange"** %274 to i64
  store i64 %275, i64* %55, align 8
  store i64 %98, i64* %54, align 8
  store i64 %95, i64* %65, align 8
  br label %276

276:                                              ; preds = %44, %273
  %277 = phi %"class.v8::internal::compiler::UseInterval"* [ %322, %44 ], [ %51, %273 ]
  %278 = getelementptr inbounds %"class.v8::internal::compiler::UseInterval", %"class.v8::internal::compiler::UseInterval"* %277, i64 0, i32 1, i32 0
  %279 = load i32, i32* %278, align 4
  store i32 %279, i32* %9, align 8
  %280 = getelementptr inbounds %"class.v8::internal::compiler::TopLevelLiveRange", %"class.v8::internal::compiler::TopLevelLiveRange"* %1, i64 0, i32 3
  %281 = bitcast %union.anon* %280 to %"class.v8::internal::compiler::SpillRange"**
  store %"class.v8::internal::compiler::SpillRange"* %0, %"class.v8::internal::compiler::SpillRange"** %281, align 8
  ret void

282:                                              ; preds = %33, %321
  %283 = phi %"class.v8::internal::compiler::UseInterval"* [ null, %33 ], [ %323, %321 ]
  %284 = phi %"class.v8::internal::compiler::UseInterval"* [ null, %33 ], [ %322, %321 ]
  %285 = phi %"class.v8::internal::compiler::LiveRange"* [ %12, %33 ], [ %325, %321 ]
  %286 = getelementptr inbounds %"class.v8::internal::compiler::LiveRange", %"class.v8::internal::compiler::LiveRange"* %285, i64 0, i32 3
  %287 = load %"class.v8::internal::compiler::UseInterval"*, %"class.v8::internal::compiler::UseInterval"** %286, align 8
  %288 = icmp eq %"class.v8::internal::compiler::UseInterval"* %287, null
  br i1 %288, label %321, label %289

289:                                              ; preds = %282, %314
  %290 = phi %"class.v8::internal::compiler::UseInterval"* [ %317, %314 ], [ %287, %282 ]
  %291 = phi %"class.v8::internal::compiler::UseInterval"* [ %315, %314 ], [ %283, %282 ]
  %292 = phi %"class.v8::internal::compiler::UseInterval"* [ %307, %314 ], [ %284, %282 ]
  %293 = getelementptr inbounds %"class.v8::internal::compiler::UseInterval", %"class.v8::internal::compiler::UseInterval"* %290, i64 0, i32 0, i32 0
  %294 = load i32, i32* %293, align 8
  %295 = getelementptr inbounds %"class.v8::internal::compiler::UseInterval", %"class.v8::internal::compiler::UseInterval"* %290, i64 0, i32 1, i32 0
  %296 = load i32, i32* %295, align 4
  %297 = load i64, i64* %34, align 8
  %298 = load i64, i64* %35, align 8
  %299 = sub i64 %298, %297
  %300 = icmp ult i64 %299, 16
  br i1 %300, label %301, label %303, !prof !2

301:                                              ; preds = %289
  %302 = tail call i64 @_ZN2v88internal4Zone9NewExpandEm(%"class.v8::internal::Zone"* %2, i64 16) #16
  br label %305

303:                                              ; preds = %289
  %304 = add i64 %297, 16
  store i64 %304, i64* %34, align 8
  br label %305

305:                                              ; preds = %301, %303
  %306 = phi i64 [ %302, %301 ], [ %297, %303 ]
  %307 = inttoptr i64 %306 to %"class.v8::internal::compiler::UseInterval"*
  %308 = getelementptr inbounds %"class.v8::internal::compiler::UseInterval", %"class.v8::internal::compiler::UseInterval"* %307, i64 0, i32 0, i32 0
  store i32 %294, i32* %308, align 8
  %309 = getelementptr inbounds %"class.v8::internal::compiler::UseInterval", %"class.v8::internal::compiler::UseInterval"* %307, i64 0, i32 1, i32 0
  store i32 %296, i32* %309, align 4
  %310 = getelementptr inbounds %"class.v8::internal::compiler::UseInterval", %"class.v8::internal::compiler::UseInterval"* %307, i64 0, i32 2
  store %"class.v8::internal::compiler::UseInterval"* null, %"class.v8::internal::compiler::UseInterval"** %310, align 8
  %311 = icmp eq %"class.v8::internal::compiler::UseInterval"* %291, null
  br i1 %311, label %314, label %312

312:                                              ; preds = %305
  %313 = getelementptr inbounds %"class.v8::internal::compiler::UseInterval", %"class.v8::internal::compiler::UseInterval"* %292, i64 0, i32 2
  store %"class.v8::internal::compiler::UseInterval"* %307, %"class.v8::internal::compiler::UseInterval"** %313, align 8
  br label %314

314:                                              ; preds = %305, %312
  %315 = phi %"class.v8::internal::compiler::UseInterval"* [ %291, %312 ], [ %307, %305 ]
  %316 = getelementptr inbounds %"class.v8::internal::compiler::UseInterval", %"class.v8::internal::compiler::UseInterval"* %290, i64 0, i32 2
  %317 = load %"class.v8::internal::compiler::UseInterval"*, %"class.v8::internal::compiler::UseInterval"** %316, align 8
  %318 = icmp eq %"class.v8::internal::compiler::UseInterval"* %317, null
  br i1 %318, label %319, label %289

319:                                              ; preds = %314
  %320 = inttoptr i64 %306 to %"class.v8::internal::compiler::UseInterval"*
  br label %321

321:                                              ; preds = %319, %282
  %322 = phi %"class.v8::internal::compiler::UseInterval"* [ %284, %282 ], [ %320, %319 ]
  %323 = phi %"class.v8::internal::compiler::UseInterval"* [ %283, %282 ], [ %315, %319 ]
  %324 = getelementptr inbounds %"class.v8::internal::compiler::LiveRange", %"class.v8::internal::compiler::LiveRange"* %285, i64 0, i32 6
  %325 = load %"class.v8::internal::compiler::LiveRange"*, %"class.v8::internal::compiler::LiveRange"** %324, align 8
  %326 = icmp eq %"class.v8::internal::compiler::LiveRange"* %325, null
  br i1 %326, label %36, label %282
}

; Function Attrs: nounwind readonly ssp uwtable
define hidden zeroext i1 @_ZNK2v88internal8compiler10SpillRange18IsIntersectingWithEPS2_(%"class.v8::internal::compiler::SpillRange"* nocapture readonly, %"class.v8::internal::compiler::SpillRange"* nocapture readonly) local_unnamed_addr #8 align 2 {
  %3 = getelementptr inbounds %"class.v8::internal::compiler::SpillRange", %"class.v8::internal::compiler::SpillRange"* %0, i64 0, i32 1
  %4 = load %"class.v8::internal::compiler::UseInterval"*, %"class.v8::internal::compiler::UseInterval"** %3, align 8
  %5 = icmp eq %"class.v8::internal::compiler::UseInterval"* %4, null
  br i1 %5, label %53, label %6

6:                                                ; preds = %2
  %7 = getelementptr inbounds %"class.v8::internal::compiler::SpillRange", %"class.v8::internal::compiler::SpillRange"* %1, i64 0, i32 1
  %8 = load %"class.v8::internal::compiler::UseInterval"*, %"class.v8::internal::compiler::UseInterval"** %7, align 8
  %9 = icmp eq %"class.v8::internal::compiler::UseInterval"* %8, null
  br i1 %9, label %53, label %10

10:                                               ; preds = %6
  %11 = getelementptr inbounds %"class.v8::internal::compiler::SpillRange", %"class.v8::internal::compiler::SpillRange"* %0, i64 0, i32 2, i32 0
  %12 = load i32, i32* %11, align 8
  %13 = getelementptr inbounds %"class.v8::internal::compiler::UseInterval", %"class.v8::internal::compiler::UseInterval"* %8, i64 0, i32 0, i32 0
  %14 = load i32, i32* %13, align 8
  %15 = icmp sgt i32 %12, %14
  br i1 %15, label %16, label %53

16:                                               ; preds = %10
  %17 = getelementptr inbounds %"class.v8::internal::compiler::SpillRange", %"class.v8::internal::compiler::SpillRange"* %1, i64 0, i32 2, i32 0
  %18 = load i32, i32* %17, align 8
  %19 = getelementptr inbounds %"class.v8::internal::compiler::UseInterval", %"class.v8::internal::compiler::UseInterval"* %4, i64 0, i32 0, i32 0
  %20 = load i32, i32* %19, align 8
  %21 = icmp sgt i32 %18, %20
  br i1 %21, label %22, label %53

22:                                               ; preds = %16, %48
  %23 = phi i32 [ %52, %48 ], [ %14, %16 ]
  %24 = phi i32 [ %50, %48 ], [ %20, %16 ]
  %25 = phi %"class.v8::internal::compiler::UseInterval"* [ %44, %48 ], [ %8, %16 ]
  %26 = phi %"class.v8::internal::compiler::UseInterval"* [ %43, %48 ], [ %4, %16 ]
  %27 = icmp slt i32 %24, %23
  br i1 %27, label %28, label %35

28:                                               ; preds = %22
  %29 = getelementptr inbounds %"class.v8::internal::compiler::UseInterval", %"class.v8::internal::compiler::UseInterval"* %26, i64 0, i32 1, i32 0
  %30 = load i32, i32* %29, align 4
  %31 = icmp sgt i32 %30, %23
  br i1 %31, label %53, label %32

32:                                               ; preds = %28
  %33 = getelementptr inbounds %"class.v8::internal::compiler::UseInterval", %"class.v8::internal::compiler::UseInterval"* %26, i64 0, i32 2
  %34 = load %"class.v8::internal::compiler::UseInterval"*, %"class.v8::internal::compiler::UseInterval"** %33, align 8
  br label %42

35:                                               ; preds = %22
  %36 = getelementptr inbounds %"class.v8::internal::compiler::UseInterval", %"class.v8::internal::compiler::UseInterval"* %25, i64 0, i32 1, i32 0
  %37 = load i32, i32* %36, align 4
  %38 = icmp sgt i32 %37, %24
  br i1 %38, label %53, label %39

39:                                               ; preds = %35
  %40 = getelementptr inbounds %"class.v8::internal::compiler::UseInterval", %"class.v8::internal::compiler::UseInterval"* %25, i64 0, i32 2
  %41 = load %"class.v8::internal::compiler::UseInterval"*, %"class.v8::internal::compiler::UseInterval"** %40, align 8
  br label %42

42:                                               ; preds = %39, %32
  %43 = phi %"class.v8::internal::compiler::UseInterval"* [ %34, %32 ], [ %26, %39 ]
  %44 = phi %"class.v8::internal::compiler::UseInterval"* [ %25, %32 ], [ %41, %39 ]
  %45 = icmp ne %"class.v8::internal::compiler::UseInterval"* %43, null
  %46 = icmp ne %"class.v8::internal::compiler::UseInterval"* %44, null
  %47 = and i1 %45, %46
  br i1 %47, label %48, label %53

48:                                               ; preds = %42
  %49 = getelementptr inbounds %"class.v8::internal::compiler::UseInterval", %"class.v8::internal::compiler::UseInterval"* %43, i64 0, i32 0, i32 0
  %50 = load i32, i32* %49, align 8
  %51 = getelementptr inbounds %"class.v8::internal::compiler::UseInterval", %"class.v8::internal::compiler::UseInterval"* %44, i64 0, i32 0, i32 0
  %52 = load i32, i32* %51, align 8
  br label %22

53:                                               ; preds = %42, %35, %28, %16, %10, %2, %6
  %54 = phi i1 [ false, %16 ], [ false, %10 ], [ false, %6 ], [ false, %2 ], [ true, %28 ], [ true, %35 ], [ false, %42 ]
  ret i1 %54
}

; Function Attrs: nounwind ssp uwtable
define hidden zeroext i1 @_ZN2v88internal8compiler10SpillRange8TryMergeEPS2_(%"class.v8::internal::compiler::SpillRange"*, %"class.v8::internal::compiler::SpillRange"* nocapture) local_unnamed_addr #0 align 2 {
  %3 = getelementptr inbounds %"class.v8::internal::compiler::SpillRange", %"class.v8::internal::compiler::SpillRange"* %0, i64 0, i32 3
  %4 = load i32, i32* %3, align 4
  %5 = icmp eq i32 %4, -1
  br i1 %5, label %6, label %188

6:                                                ; preds = %2
  %7 = getelementptr inbounds %"class.v8::internal::compiler::SpillRange", %"class.v8::internal::compiler::SpillRange"* %1, i64 0, i32 3
  %8 = load i32, i32* %7, align 4
  %9 = icmp eq i32 %8, -1
  br i1 %9, label %10, label %188

10:                                               ; preds = %6
  %11 = getelementptr inbounds %"class.v8::internal::compiler::SpillRange", %"class.v8::internal::compiler::SpillRange"* %0, i64 0, i32 4
  %12 = load i32, i32* %11, align 8
  %13 = getelementptr inbounds %"class.v8::internal::compiler::SpillRange", %"class.v8::internal::compiler::SpillRange"* %1, i64 0, i32 4
  %14 = load i32, i32* %13, align 8
  %15 = icmp eq i32 %12, %14
  br i1 %15, label %16, label %188

16:                                               ; preds = %10
  %17 = getelementptr inbounds %"class.v8::internal::compiler::SpillRange", %"class.v8::internal::compiler::SpillRange"* %0, i64 0, i32 1
  %18 = load %"class.v8::internal::compiler::UseInterval"*, %"class.v8::internal::compiler::UseInterval"** %17, align 8
  %19 = icmp eq %"class.v8::internal::compiler::UseInterval"* %18, null
  br i1 %19, label %67, label %20

20:                                               ; preds = %16
  %21 = getelementptr inbounds %"class.v8::internal::compiler::SpillRange", %"class.v8::internal::compiler::SpillRange"* %1, i64 0, i32 1
  %22 = load %"class.v8::internal::compiler::UseInterval"*, %"class.v8::internal::compiler::UseInterval"** %21, align 8
  %23 = icmp eq %"class.v8::internal::compiler::UseInterval"* %22, null
  br i1 %23, label %67, label %24

24:                                               ; preds = %20
  %25 = getelementptr inbounds %"class.v8::internal::compiler::SpillRange", %"class.v8::internal::compiler::SpillRange"* %0, i64 0, i32 2, i32 0
  %26 = load i32, i32* %25, align 8
  %27 = getelementptr inbounds %"class.v8::internal::compiler::UseInterval", %"class.v8::internal::compiler::UseInterval"* %22, i64 0, i32 0, i32 0
  %28 = load i32, i32* %27, align 8
  %29 = icmp sgt i32 %26, %28
  br i1 %29, label %30, label %67

30:                                               ; preds = %24
  %31 = getelementptr inbounds %"class.v8::internal::compiler::SpillRange", %"class.v8::internal::compiler::SpillRange"* %1, i64 0, i32 2, i32 0
  %32 = load i32, i32* %31, align 8
  %33 = getelementptr inbounds %"class.v8::internal::compiler::UseInterval", %"class.v8::internal::compiler::UseInterval"* %18, i64 0, i32 0, i32 0
  %34 = load i32, i32* %33, align 8
  %35 = icmp sgt i32 %32, %34
  br i1 %35, label %36, label %67

36:                                               ; preds = %30, %62
  %37 = phi i32 [ %66, %62 ], [ %28, %30 ]
  %38 = phi i32 [ %64, %62 ], [ %34, %30 ]
  %39 = phi %"class.v8::internal::compiler::UseInterval"* [ %58, %62 ], [ %22, %30 ]
  %40 = phi %"class.v8::internal::compiler::UseInterval"* [ %57, %62 ], [ %18, %30 ]
  %41 = icmp slt i32 %38, %37
  br i1 %41, label %42, label %49

42:                                               ; preds = %36
  %43 = getelementptr inbounds %"class.v8::internal::compiler::UseInterval", %"class.v8::internal::compiler::UseInterval"* %40, i64 0, i32 1, i32 0
  %44 = load i32, i32* %43, align 4
  %45 = icmp sgt i32 %44, %37
  br i1 %45, label %188, label %46

46:                                               ; preds = %42
  %47 = getelementptr inbounds %"class.v8::internal::compiler::UseInterval", %"class.v8::internal::compiler::UseInterval"* %40, i64 0, i32 2
  %48 = load %"class.v8::internal::compiler::UseInterval"*, %"class.v8::internal::compiler::UseInterval"** %47, align 8
  br label %56

49:                                               ; preds = %36
  %50 = getelementptr inbounds %"class.v8::internal::compiler::UseInterval", %"class.v8::internal::compiler::UseInterval"* %39, i64 0, i32 1, i32 0
  %51 = load i32, i32* %50, align 4
  %52 = icmp sgt i32 %51, %38
  br i1 %52, label %188, label %53

53:                                               ; preds = %49
  %54 = getelementptr inbounds %"class.v8::internal::compiler::UseInterval", %"class.v8::internal::compiler::UseInterval"* %39, i64 0, i32 2
  %55 = load %"class.v8::internal::compiler::UseInterval"*, %"class.v8::internal::compiler::UseInterval"** %54, align 8
  br label %56

56:                                               ; preds = %53, %46
  %57 = phi %"class.v8::internal::compiler::UseInterval"* [ %48, %46 ], [ %40, %53 ]
  %58 = phi %"class.v8::internal::compiler::UseInterval"* [ %39, %46 ], [ %55, %53 ]
  %59 = icmp ne %"class.v8::internal::compiler::UseInterval"* %57, null
  %60 = icmp ne %"class.v8::internal::compiler::UseInterval"* %58, null
  %61 = and i1 %59, %60
  br i1 %61, label %62, label %67

62:                                               ; preds = %56
  %63 = getelementptr inbounds %"class.v8::internal::compiler::UseInterval", %"class.v8::internal::compiler::UseInterval"* %57, i64 0, i32 0, i32 0
  %64 = load i32, i32* %63, align 8
  %65 = getelementptr inbounds %"class.v8::internal::compiler::UseInterval", %"class.v8::internal::compiler::UseInterval"* %58, i64 0, i32 0, i32 0
  %66 = load i32, i32* %65, align 8
  br label %36

67:                                               ; preds = %56, %30, %24, %20, %16
  %68 = getelementptr inbounds %"class.v8::internal::compiler::SpillRange", %"class.v8::internal::compiler::SpillRange"* %0, i64 0, i32 2, i32 0
  %69 = load i32, i32* %68, align 8
  %70 = getelementptr inbounds %"class.v8::internal::compiler::SpillRange", %"class.v8::internal::compiler::SpillRange"* %1, i64 0, i32 2, i32 0
  %71 = load i32, i32* %70, align 8
  %72 = icmp slt i32 %69, %71
  %73 = icmp ne i32 %71, 2147483647
  %74 = and i1 %72, %73
  br i1 %74, label %75, label %76

75:                                               ; preds = %67
  store i32 %71, i32* %68, align 8
  br label %76

76:                                               ; preds = %67, %75
  store i32 2147483647, i32* %70, align 8
  %77 = getelementptr inbounds %"class.v8::internal::compiler::SpillRange", %"class.v8::internal::compiler::SpillRange"* %1, i64 0, i32 1
  %78 = load %"class.v8::internal::compiler::UseInterval"*, %"class.v8::internal::compiler::UseInterval"** %77, align 8
  %79 = bitcast %"class.v8::internal::compiler::UseInterval"** %17 to i64*
  %80 = icmp eq %"class.v8::internal::compiler::UseInterval"* %78, null
  br i1 %80, label %113, label %81

81:                                               ; preds = %76
  %82 = ptrtoint %"class.v8::internal::compiler::UseInterval"* %78 to i64
  br label %83

83:                                               ; preds = %107, %81
  %84 = phi %"class.v8::internal::compiler::UseInterval"* [ %111, %107 ], [ %78, %81 ]
  %85 = phi i64* [ %110, %107 ], [ %79, %81 ]
  %86 = phi %"class.v8::internal::compiler::UseInterval"* [ %108, %107 ], [ null, %81 ]
  %87 = phi i64 [ %100, %107 ], [ %82, %81 ]
  %88 = load i64, i64* %85, align 8
  %89 = icmp eq i64 %88, 0
  br i1 %89, label %97, label %90

90:                                               ; preds = %83
  %91 = inttoptr i64 %88 to %"class.v8::internal::compiler::UseInterval"*
  %92 = getelementptr inbounds %"class.v8::internal::compiler::UseInterval", %"class.v8::internal::compiler::UseInterval"* %91, i64 0, i32 0, i32 0
  %93 = load i32, i32* %92, align 8
  %94 = getelementptr inbounds %"class.v8::internal::compiler::UseInterval", %"class.v8::internal::compiler::UseInterval"* %84, i64 0, i32 0, i32 0
  %95 = load i32, i32* %94, align 8
  %96 = icmp sgt i32 %93, %95
  br i1 %96, label %97, label %98

97:                                               ; preds = %90, %83
  br label %98

98:                                               ; preds = %97, %90
  %99 = phi i64 [ %87, %97 ], [ %88, %90 ]
  %100 = phi i64 [ %88, %97 ], [ %87, %90 ]
  %101 = icmp eq %"class.v8::internal::compiler::UseInterval"* %86, null
  br i1 %101, label %102, label %104

102:                                              ; preds = %98
  store i64 %99, i64* %79, align 8
  %103 = inttoptr i64 %99 to %"class.v8::internal::compiler::UseInterval"*
  br label %107

104:                                              ; preds = %98
  %105 = inttoptr i64 %99 to %"class.v8::internal::compiler::UseInterval"*
  %106 = getelementptr inbounds %"class.v8::internal::compiler::UseInterval", %"class.v8::internal::compiler::UseInterval"* %86, i64 0, i32 2
  store %"class.v8::internal::compiler::UseInterval"* %105, %"class.v8::internal::compiler::UseInterval"** %106, align 8
  br label %107

107:                                              ; preds = %104, %102
  %108 = phi %"class.v8::internal::compiler::UseInterval"* [ %105, %104 ], [ %103, %102 ]
  %109 = getelementptr inbounds %"class.v8::internal::compiler::UseInterval", %"class.v8::internal::compiler::UseInterval"* %108, i64 0, i32 2
  %110 = bitcast %"class.v8::internal::compiler::UseInterval"** %109 to i64*
  %111 = inttoptr i64 %100 to %"class.v8::internal::compiler::UseInterval"*
  %112 = icmp eq i64 %100, 0
  br i1 %112, label %113, label %83

113:                                              ; preds = %107, %76
  store %"class.v8::internal::compiler::UseInterval"* null, %"class.v8::internal::compiler::UseInterval"** %77, align 8
  %114 = getelementptr inbounds %"class.v8::internal::compiler::SpillRange", %"class.v8::internal::compiler::SpillRange"* %1, i64 0, i32 0, i32 0, i32 0, i32 0
  %115 = load %"class.v8::internal::compiler::TopLevelLiveRange"**, %"class.v8::internal::compiler::TopLevelLiveRange"*** %114, align 8
  %116 = getelementptr inbounds %"class.v8::internal::compiler::SpillRange", %"class.v8::internal::compiler::SpillRange"* %1, i64 0, i32 0, i32 0, i32 0, i32 1
  %117 = load %"class.v8::internal::compiler::TopLevelLiveRange"**, %"class.v8::internal::compiler::TopLevelLiveRange"*** %116, align 8
  %118 = icmp eq %"class.v8::internal::compiler::TopLevelLiveRange"** %115, %117
  br i1 %118, label %143, label %119

119:                                              ; preds = %113
  %120 = ptrtoint %"class.v8::internal::compiler::TopLevelLiveRange"** %115 to i64
  %121 = getelementptr %"class.v8::internal::compiler::TopLevelLiveRange"*, %"class.v8::internal::compiler::TopLevelLiveRange"** %117, i64 -1
  %122 = ptrtoint %"class.v8::internal::compiler::TopLevelLiveRange"** %121 to i64
  %123 = sub i64 %122, %120
  %124 = lshr i64 %123, 3
  %125 = add nuw nsw i64 %124, 1
  %126 = and i64 %125, 7
  %127 = icmp eq i64 %126, 0
  br i1 %127, label %137, label %128

128:                                              ; preds = %119, %128
  %129 = phi %"class.v8::internal::compiler::TopLevelLiveRange"** [ %134, %128 ], [ %115, %119 ]
  %130 = phi i64 [ %135, %128 ], [ %126, %119 ]
  %131 = load %"class.v8::internal::compiler::TopLevelLiveRange"*, %"class.v8::internal::compiler::TopLevelLiveRange"** %129, align 8
  %132 = getelementptr inbounds %"class.v8::internal::compiler::TopLevelLiveRange", %"class.v8::internal::compiler::TopLevelLiveRange"* %131, i64 0, i32 3
  %133 = bitcast %union.anon* %132 to %"class.v8::internal::compiler::SpillRange"**
  store %"class.v8::internal::compiler::SpillRange"* %0, %"class.v8::internal::compiler::SpillRange"** %133, align 8
  %134 = getelementptr inbounds %"class.v8::internal::compiler::TopLevelLiveRange"*, %"class.v8::internal::compiler::TopLevelLiveRange"** %129, i64 1
  %135 = add i64 %130, -1
  %136 = icmp eq i64 %135, 0
  br i1 %136, label %137, label %128, !llvm.loop !14

137:                                              ; preds = %128, %119
  %138 = phi %"class.v8::internal::compiler::TopLevelLiveRange"** [ %115, %119 ], [ %134, %128 ]
  %139 = icmp ult i64 %123, 56
  br i1 %139, label %140, label %153

140:                                              ; preds = %153, %137
  %141 = load %"class.v8::internal::compiler::TopLevelLiveRange"**, %"class.v8::internal::compiler::TopLevelLiveRange"*** %114, align 8
  %142 = load %"class.v8::internal::compiler::TopLevelLiveRange"**, %"class.v8::internal::compiler::TopLevelLiveRange"*** %116, align 8
  br label %143

143:                                              ; preds = %140, %113
  %144 = phi %"class.v8::internal::compiler::TopLevelLiveRange"** [ %142, %140 ], [ %115, %113 ]
  %145 = phi %"class.v8::internal::compiler::TopLevelLiveRange"** [ %141, %140 ], [ %115, %113 ]
  %146 = getelementptr inbounds %"class.v8::internal::compiler::SpillRange", %"class.v8::internal::compiler::SpillRange"* %0, i64 0, i32 0, i32 0
  %147 = getelementptr inbounds %"class.v8::internal::compiler::SpillRange", %"class.v8::internal::compiler::SpillRange"* %0, i64 0, i32 0, i32 0, i32 0, i32 1
  %148 = load %"class.v8::internal::compiler::TopLevelLiveRange"**, %"class.v8::internal::compiler::TopLevelLiveRange"*** %147, align 8
  %149 = tail call %"class.v8::internal::compiler::TopLevelLiveRange"** @_ZNSt3__16vectorIPN2v88internal8compiler17TopLevelLiveRangeENS2_13ZoneAllocatorIS5_EEE6insertINS_11__wrap_iterIPS5_EEEENS_9enable_ifIXaasr27__is_cpp17_forward_iteratorIT_EE5valuesr16is_constructibleIS5_NS_15iterator_traitsISE_E9referenceEEE5valueESC_E4typeENSA_IPKS5_EESE_SE_(%"class.std::__1::vector"* %146, %"class.v8::internal::compiler::TopLevelLiveRange"** %148, %"class.v8::internal::compiler::TopLevelLiveRange"** %145, %"class.v8::internal::compiler::TopLevelLiveRange"** %144)
  %150 = bitcast %"class.v8::internal::compiler::SpillRange"* %1 to i64*
  %151 = load i64, i64* %150, align 8
  %152 = bitcast %"class.v8::internal::compiler::TopLevelLiveRange"*** %116 to i64*
  store i64 %151, i64* %152, align 8
  br label %188

153:                                              ; preds = %137, %153
  %154 = phi %"class.v8::internal::compiler::TopLevelLiveRange"** [ %186, %153 ], [ %138, %137 ]
  %155 = load %"class.v8::internal::compiler::TopLevelLiveRange"*, %"class.v8::internal::compiler::TopLevelLiveRange"** %154, align 8
  %156 = getelementptr inbounds %"class.v8::internal::compiler::TopLevelLiveRange", %"class.v8::internal::compiler::TopLevelLiveRange"* %155, i64 0, i32 3
  %157 = bitcast %union.anon* %156 to %"class.v8::internal::compiler::SpillRange"**
  store %"class.v8::internal::compiler::SpillRange"* %0, %"class.v8::internal::compiler::SpillRange"** %157, align 8
  %158 = getelementptr inbounds %"class.v8::internal::compiler::TopLevelLiveRange"*, %"class.v8::internal::compiler::TopLevelLiveRange"** %154, i64 1
  %159 = load %"class.v8::internal::compiler::TopLevelLiveRange"*, %"class.v8::internal::compiler::TopLevelLiveRange"** %158, align 8
  %160 = getelementptr inbounds %"class.v8::internal::compiler::TopLevelLiveRange", %"class.v8::internal::compiler::TopLevelLiveRange"* %159, i64 0, i32 3
  %161 = bitcast %union.anon* %160 to %"class.v8::internal::compiler::SpillRange"**
  store %"class.v8::internal::compiler::SpillRange"* %0, %"class.v8::internal::compiler::SpillRange"** %161, align 8
  %162 = getelementptr inbounds %"class.v8::internal::compiler::TopLevelLiveRange"*, %"class.v8::internal::compiler::TopLevelLiveRange"** %154, i64 2
  %163 = load %"class.v8::internal::compiler::TopLevelLiveRange"*, %"class.v8::internal::compiler::TopLevelLiveRange"** %162, align 8
  %164 = getelementptr inbounds %"class.v8::internal::compiler::TopLevelLiveRange", %"class.v8::internal::compiler::TopLevelLiveRange"* %163, i64 0, i32 3
  %165 = bitcast %union.anon* %164 to %"class.v8::internal::compiler::SpillRange"**
  store %"class.v8::internal::compiler::SpillRange"* %0, %"class.v8::internal::compiler::SpillRange"** %165, align 8
  %166 = getelementptr inbounds %"class.v8::internal::compiler::TopLevelLiveRange"*, %"class.v8::internal::compiler::TopLevelLiveRange"** %154, i64 3
  %167 = load %"class.v8::internal::compiler::TopLevelLiveRange"*, %"class.v8::internal::compiler::TopLevelLiveRange"** %166, align 8
  %168 = getelementptr inbounds %"class.v8::internal::compiler::TopLevelLiveRange", %"class.v8::internal::compiler::TopLevelLiveRange"* %167, i64 0, i32 3
  %169 = bitcast %union.anon* %168 to %"class.v8::internal::compiler::SpillRange"**
  store %"class.v8::internal::compiler::SpillRange"* %0, %"class.v8::internal::compiler::SpillRange"** %169, align 8
  %170 = getelementptr inbounds %"class.v8::internal::compiler::TopLevelLiveRange"*, %"class.v8::internal::compiler::TopLevelLiveRange"** %154, i64 4
  %171 = load %"class.v8::internal::compiler::TopLevelLiveRange"*, %"class.v8::internal::compiler::TopLevelLiveRange"** %170, align 8
  %172 = getelementptr inbounds %"class.v8::internal::compiler::TopLevelLiveRange", %"class.v8::internal::compiler::TopLevelLiveRange"* %171, i64 0, i32 3
  %173 = bitcast %union.anon* %172 to %"class.v8::internal::compiler::SpillRange"**
  store %"class.v8::internal::compiler::SpillRange"* %0, %"class.v8::internal::compiler::SpillRange"** %173, align 8
  %174 = getelementptr inbounds %"class.v8::internal::compiler::TopLevelLiveRange"*, %"class.v8::internal::compiler::TopLevelLiveRange"** %154, i64 5
  %175 = load %"class.v8::internal::compiler::TopLevelLiveRange"*, %"class.v8::internal::compiler::TopLevelLiveRange"** %174, align 8
  %176 = getelementptr inbounds %"class.v8::internal::compiler::TopLevelLiveRange", %"class.v8::internal::compiler::TopLevelLiveRange"* %175, i64 0, i32 3
  %177 = bitcast %union.anon* %176 to %"class.v8::internal::compiler::SpillRange"**
  store %"class.v8::internal::compiler::SpillRange"* %0, %"class.v8::internal::compiler::SpillRange"** %177, align 8
  %178 = getelementptr inbounds %"class.v8::internal::compiler::TopLevelLiveRange"*, %"class.v8::internal::compiler::TopLevelLiveRange"** %154, i64 6
  %179 = load %"class.v8::internal::compiler::TopLevelLiveRange"*, %"class.v8::internal::compiler::TopLevelLiveRange"** %178, align 8
  %180 = getelementptr inbounds %"class.v8::internal::compiler::TopLevelLiveRange", %"class.v8::internal::compiler::TopLevelLiveRange"* %179, i64 0, i32 3
  %181 = bitcast %union.anon* %180 to %"class.v8::internal::compiler::SpillRange"**
  store %"class.v8::internal::compiler::SpillRange"* %0, %"class.v8::internal::compiler::SpillRange"** %181, align 8
  %182 = getelementptr inbounds %"class.v8::internal::compiler::TopLevelLiveRange"*, %"class.v8::internal::compiler::TopLevelLiveRange"** %154, i64 7
  %183 = load %"class.v8::internal::compiler::TopLevelLiveRange"*, %"class.v8::internal::compiler::TopLevelLiveRange"** %182, align 8
  %184 = getelementptr inbounds %"class.v8::internal::compiler::TopLevelLiveRange", %"class.v8::internal::compiler::TopLevelLiveRange"* %183, i64 0, i32 3
  %185 = bitcast %union.anon* %184 to %"class.v8::internal::compiler::SpillRange"**
  store %"class.v8::internal::compiler::SpillRange"* %0, %"class.v8::internal::compiler::SpillRange"** %185, align 8
  %186 = getelementptr inbounds %"class.v8::internal::compiler::TopLevelLiveRange"*, %"class.v8::internal::compiler::TopLevelLiveRange"** %154, i64 8
  %187 = icmp eq %"class.v8::internal::compiler::TopLevelLiveRange"** %186, %117
  br i1 %187, label %140, label %153

188:                                              ; preds = %49, %42, %6, %2, %10, %143
  %189 = phi i1 [ true, %143 ], [ false, %6 ], [ false, %2 ], [ false, %10 ], [ false, %42 ], [ false, %49 ]
  ret i1 %189
}

; Function Attrs: nounwind ssp uwtable
define hidden void @_ZN2v88internal8compiler10SpillRange22MergeDisjointIntervalsEPNS1_11UseIntervalE(%"class.v8::internal::compiler::SpillRange"* nocapture, %"class.v8::internal::compiler::UseInterval"*) local_unnamed_addr #0 align 2 {
  %3 = getelementptr inbounds %"class.v8::internal::compiler::SpillRange", %"class.v8::internal::compiler::SpillRange"* %0, i64 0, i32 1
  %4 = bitcast %"class.v8::internal::compiler::UseInterval"** %3 to i64*
  %5 = icmp eq %"class.v8::internal::compiler::UseInterval"* %1, null
  br i1 %5, label %38, label %6

6:                                                ; preds = %2
  %7 = ptrtoint %"class.v8::internal::compiler::UseInterval"* %1 to i64
  br label %8

8:                                                ; preds = %6, %32
  %9 = phi %"class.v8::internal::compiler::UseInterval"* [ %36, %32 ], [ %1, %6 ]
  %10 = phi i64* [ %35, %32 ], [ %4, %6 ]
  %11 = phi %"class.v8::internal::compiler::UseInterval"* [ %33, %32 ], [ null, %6 ]
  %12 = phi i64 [ %25, %32 ], [ %7, %6 ]
  %13 = load i64, i64* %10, align 8
  %14 = icmp eq i64 %13, 0
  br i1 %14, label %22, label %15

15:                                               ; preds = %8
  %16 = inttoptr i64 %13 to %"class.v8::internal::compiler::UseInterval"*
  %17 = getelementptr inbounds %"class.v8::internal::compiler::UseInterval", %"class.v8::internal::compiler::UseInterval"* %16, i64 0, i32 0, i32 0
  %18 = load i32, i32* %17, align 8
  %19 = getelementptr inbounds %"class.v8::internal::compiler::UseInterval", %"class.v8::internal::compiler::UseInterval"* %9, i64 0, i32 0, i32 0
  %20 = load i32, i32* %19, align 8
  %21 = icmp sgt i32 %18, %20
  br i1 %21, label %22, label %23

22:                                               ; preds = %8, %15
  br label %23

23:                                               ; preds = %22, %15
  %24 = phi i64 [ %12, %22 ], [ %13, %15 ]
  %25 = phi i64 [ %13, %22 ], [ %12, %15 ]
  %26 = icmp eq %"class.v8::internal::compiler::UseInterval"* %11, null
  br i1 %26, label %27, label %29

27:                                               ; preds = %23
  store i64 %24, i64* %4, align 8
  %28 = inttoptr i64 %24 to %"class.v8::internal::compiler::UseInterval"*
  br label %32

29:                                               ; preds = %23
  %30 = inttoptr i64 %24 to %"class.v8::internal::compiler::UseInterval"*
  %31 = getelementptr inbounds %"class.v8::internal::compiler::UseInterval", %"class.v8::internal::compiler::UseInterval"* %11, i64 0, i32 2
  store %"class.v8::internal::compiler::UseInterval"* %30, %"class.v8::internal::compiler::UseInterval"** %31, align 8
  br label %32

32:                                               ; preds = %29, %27
  %33 = phi %"class.v8::internal::compiler::UseInterval"* [ %30, %29 ], [ %28, %27 ]
  %34 = getelementptr inbounds %"class.v8::internal::compiler::UseInterval", %"class.v8::internal::compiler::UseInterval"* %33, i64 0, i32 2
  %35 = bitcast %"class.v8::internal::compiler::UseInterval"** %34 to i64*
  %36 = inttoptr i64 %25 to %"class.v8::internal::compiler::UseInterval"*
  %37 = icmp eq i64 %25, 0
  br i1 %37, label %38, label %8

38:                                               ; preds = %32, %2
  ret void
}

; Function Attrs: nounwind ssp uwtable
define linkonce_odr hidden %"class.v8::internal::compiler::TopLevelLiveRange"** @_ZNSt3__16vectorIPN2v88internal8compiler17TopLevelLiveRangeENS2_13ZoneAllocatorIS5_EEE6insertINS_11__wrap_iterIPS5_EEEENS_9enable_ifIXaasr27__is_cpp17_forward_iteratorIT_EE5valuesr16is_constructibleIS5_NS_15iterator_traitsISE_E9referenceEEE5valueESC_E4typeENSA_IPKS5_EESE_SE_(%"class.std::__1::vector"*, %"class.v8::internal::compiler::TopLevelLiveRange"**, %"class.v8::internal::compiler::TopLevelLiveRange"**, %"class.v8::internal::compiler::TopLevelLiveRange"**) local_unnamed_addr #0 comdat align 2 {
  %5 = bitcast %"class.v8::internal::compiler::TopLevelLiveRange"** %1 to i8*
  %6 = ptrtoint %"class.v8::internal::compiler::TopLevelLiveRange"** %1 to i64
  %7 = ptrtoint %"class.v8::internal::compiler::TopLevelLiveRange"** %2 to i64
  %8 = getelementptr inbounds %"class.std::__1::vector", %"class.std::__1::vector"* %0, i64 0, i32 0, i32 0
  %9 = ptrtoint %"class.v8::internal::compiler::TopLevelLiveRange"** %3 to i64
  %10 = sub i64 %9, %7
  %11 = ashr exact i64 %10, 3
  %12 = icmp sgt i64 %10, 0
  br i1 %12, label %13, label %846

13:                                               ; preds = %4
  %14 = getelementptr inbounds %"class.std::__1::vector", %"class.std::__1::vector"* %0, i64 0, i32 0, i32 2, i32 0, i32 0
  %15 = bitcast %"class.v8::internal::compiler::TopLevelLiveRange"*** %14 to i64*
  %16 = load i64, i64* %15, align 8
  %17 = getelementptr inbounds %"class.std::__1::vector", %"class.std::__1::vector"* %0, i64 0, i32 0, i32 1
  %18 = load %"class.v8::internal::compiler::TopLevelLiveRange"**, %"class.v8::internal::compiler::TopLevelLiveRange"*** %17, align 8
  %19 = ptrtoint %"class.v8::internal::compiler::TopLevelLiveRange"** %18 to i64
  %20 = sub i64 %16, %19
  %21 = ashr exact i64 %20, 3
  %22 = icmp sgt i64 %11, %21
  %23 = bitcast %"class.v8::internal::compiler::TopLevelLiveRange"*** %17 to i64*
  br i1 %22, label %359, label %24

24:                                               ; preds = %13
  %25 = sub i64 %19, %6
  %26 = ashr exact i64 %25, 3
  %27 = icmp sgt i64 %11, %26
  br i1 %27, label %28, label %213

28:                                               ; preds = %24
  %29 = getelementptr inbounds %"class.v8::internal::compiler::TopLevelLiveRange"*, %"class.v8::internal::compiler::TopLevelLiveRange"** %2, i64 %26
  %30 = icmp eq %"class.v8::internal::compiler::TopLevelLiveRange"** %29, %3
  br i1 %30, label %208, label %31

31:                                               ; preds = %28
  %32 = xor i64 %26, -1
  %33 = getelementptr %"class.v8::internal::compiler::TopLevelLiveRange"*, %"class.v8::internal::compiler::TopLevelLiveRange"** %3, i64 %32
  %34 = ptrtoint %"class.v8::internal::compiler::TopLevelLiveRange"** %33 to i64
  %35 = sub i64 %34, %7
  %36 = lshr i64 %35, 3
  %37 = add nuw nsw i64 %36, 1
  %38 = icmp ult i64 %37, 4
  br i1 %38, label %134, label %39

39:                                               ; preds = %31
  %40 = xor i64 %26, -1
  %41 = getelementptr %"class.v8::internal::compiler::TopLevelLiveRange"*, %"class.v8::internal::compiler::TopLevelLiveRange"** %3, i64 %40
  %42 = ptrtoint %"class.v8::internal::compiler::TopLevelLiveRange"** %41 to i64
  %43 = sub i64 %42, %7
  %44 = lshr i64 %43, 3
  %45 = add nuw nsw i64 %44, 1
  %46 = getelementptr %"class.v8::internal::compiler::TopLevelLiveRange"*, %"class.v8::internal::compiler::TopLevelLiveRange"** %18, i64 %45
  %47 = add nsw i64 %26, %44
  %48 = add nsw i64 %47, 1
  %49 = getelementptr %"class.v8::internal::compiler::TopLevelLiveRange"*, %"class.v8::internal::compiler::TopLevelLiveRange"** %2, i64 %48
  %50 = icmp ult %"class.v8::internal::compiler::TopLevelLiveRange"** %18, %49
  %51 = icmp ult %"class.v8::internal::compiler::TopLevelLiveRange"** %29, %46
  %52 = and i1 %50, %51
  br i1 %52, label %134, label %53

53:                                               ; preds = %39
  %54 = and i64 %37, 4611686018427387900
  %55 = getelementptr %"class.v8::internal::compiler::TopLevelLiveRange"*, %"class.v8::internal::compiler::TopLevelLiveRange"** %18, i64 %54
  %56 = getelementptr %"class.v8::internal::compiler::TopLevelLiveRange"*, %"class.v8::internal::compiler::TopLevelLiveRange"** %29, i64 %54
  %57 = add nsw i64 %54, -4
  %58 = lshr exact i64 %57, 2
  %59 = add nuw nsw i64 %58, 1
  %60 = and i64 %59, 3
  %61 = icmp ult i64 %57, 12
  br i1 %61, label %113, label %62

62:                                               ; preds = %53
  %63 = sub nsw i64 %59, %60
  br label %64

64:                                               ; preds = %64, %62
  %65 = phi i64 [ 0, %62 ], [ %110, %64 ]
  %66 = phi i64 [ %63, %62 ], [ %111, %64 ]
  %67 = getelementptr %"class.v8::internal::compiler::TopLevelLiveRange"*, %"class.v8::internal::compiler::TopLevelLiveRange"** %18, i64 %65
  %68 = getelementptr %"class.v8::internal::compiler::TopLevelLiveRange"*, %"class.v8::internal::compiler::TopLevelLiveRange"** %29, i64 %65
  %69 = bitcast %"class.v8::internal::compiler::TopLevelLiveRange"** %68 to <2 x i64>*
  %70 = load <2 x i64>, <2 x i64>* %69, align 8, !alias.scope !15
  %71 = getelementptr %"class.v8::internal::compiler::TopLevelLiveRange"*, %"class.v8::internal::compiler::TopLevelLiveRange"** %68, i64 2
  %72 = bitcast %"class.v8::internal::compiler::TopLevelLiveRange"** %71 to <2 x i64>*
  %73 = load <2 x i64>, <2 x i64>* %72, align 8, !alias.scope !15
  %74 = bitcast %"class.v8::internal::compiler::TopLevelLiveRange"** %67 to <2 x i64>*
  store <2 x i64> %70, <2 x i64>* %74, align 8, !alias.scope !18, !noalias !15
  %75 = getelementptr %"class.v8::internal::compiler::TopLevelLiveRange"*, %"class.v8::internal::compiler::TopLevelLiveRange"** %67, i64 2
  %76 = bitcast %"class.v8::internal::compiler::TopLevelLiveRange"** %75 to <2 x i64>*
  store <2 x i64> %73, <2 x i64>* %76, align 8, !alias.scope !18, !noalias !15
  %77 = or i64 %65, 4
  %78 = getelementptr %"class.v8::internal::compiler::TopLevelLiveRange"*, %"class.v8::internal::compiler::TopLevelLiveRange"** %18, i64 %77
  %79 = getelementptr %"class.v8::internal::compiler::TopLevelLiveRange"*, %"class.v8::internal::compiler::TopLevelLiveRange"** %29, i64 %77
  %80 = bitcast %"class.v8::internal::compiler::TopLevelLiveRange"** %79 to <2 x i64>*
  %81 = load <2 x i64>, <2 x i64>* %80, align 8, !alias.scope !15
  %82 = getelementptr %"class.v8::internal::compiler::TopLevelLiveRange"*, %"class.v8::internal::compiler::TopLevelLiveRange"** %79, i64 2
  %83 = bitcast %"class.v8::internal::compiler::TopLevelLiveRange"** %82 to <2 x i64>*
  %84 = load <2 x i64>, <2 x i64>* %83, align 8, !alias.scope !15
  %85 = bitcast %"class.v8::internal::compiler::TopLevelLiveRange"** %78 to <2 x i64>*
  store <2 x i64> %81, <2 x i64>* %85, align 8, !alias.scope !18, !noalias !15
  %86 = getelementptr %"class.v8::internal::compiler::TopLevelLiveRange"*, %"class.v8::internal::compiler::TopLevelLiveRange"** %78, i64 2
  %87 = bitcast %"class.v8::internal::compiler::TopLevelLiveRange"** %86 to <2 x i64>*
  store <2 x i64> %84, <2 x i64>* %87, align 8, !alias.scope !18, !noalias !15
  %88 = or i64 %65, 8
  %89 = getelementptr %"class.v8::internal::compiler::TopLevelLiveRange"*, %"class.v8::internal::compiler::TopLevelLiveRange"** %18, i64 %88
  %90 = getelementptr %"class.v8::internal::compiler::TopLevelLiveRange"*, %"class.v8::internal::compiler::TopLevelLiveRange"** %29, i64 %88
  %91 = bitcast %"class.v8::internal::compiler::TopLevelLiveRange"** %90 to <2 x i64>*
  %92 = load <2 x i64>, <2 x i64>* %91, align 8, !alias.scope !15
  %93 = getelementptr %"class.v8::internal::compiler::TopLevelLiveRange"*, %"class.v8::internal::compiler::TopLevelLiveRange"** %90, i64 2
  %94 = bitcast %"class.v8::internal::compiler::TopLevelLiveRange"** %93 to <2 x i64>*
  %95 = load <2 x i64>, <2 x i64>* %94, align 8, !alias.scope !15
  %96 = bitcast %"class.v8::internal::compiler::TopLevelLiveRange"** %89 to <2 x i64>*
  store <2 x i64> %92, <2 x i64>* %96, align 8, !alias.scope !18, !noalias !15
  %97 = getelementptr %"class.v8::internal::compiler::TopLevelLiveRange"*, %"class.v8::internal::compiler::TopLevelLiveRange"** %89, i64 2
  %98 = bitcast %"class.v8::internal::compiler::TopLevelLiveRange"** %97 to <2 x i64>*
  store <2 x i64> %95, <2 x i64>* %98, align 8, !alias.scope !18, !noalias !15
  %99 = or i64 %65, 12
  %100 = getelementptr %"class.v8::internal::compiler::TopLevelLiveRange"*, %"class.v8::internal::compiler::TopLevelLiveRange"** %18, i64 %99
  %101 = getelementptr %"class.v8::internal::compiler::TopLevelLiveRange"*, %"class.v8::internal::compiler::TopLevelLiveRange"** %29, i64 %99
  %102 = bitcast %"class.v8::internal::compiler::TopLevelLiveRange"** %101 to <2 x i64>*
  %103 = load <2 x i64>, <2 x i64>* %102, align 8, !alias.scope !15
  %104 = getelementptr %"class.v8::internal::compiler::TopLevelLiveRange"*, %"class.v8::internal::compiler::TopLevelLiveRange"** %101, i64 2
  %105 = bitcast %"class.v8::internal::compiler::TopLevelLiveRange"** %104 to <2 x i64>*
  %106 = load <2 x i64>, <2 x i64>* %105, align 8, !alias.scope !15
  %107 = bitcast %"class.v8::internal::compiler::TopLevelLiveRange"** %100 to <2 x i64>*
  store <2 x i64> %103, <2 x i64>* %107, align 8, !alias.scope !18, !noalias !15
  %108 = getelementptr %"class.v8::internal::compiler::TopLevelLiveRange"*, %"class.v8::internal::compiler::TopLevelLiveRange"** %100, i64 2
  %109 = bitcast %"class.v8::internal::compiler::TopLevelLiveRange"** %108 to <2 x i64>*
  store <2 x i64> %106, <2 x i64>* %109, align 8, !alias.scope !18, !noalias !15
  %110 = add i64 %65, 16
  %111 = add i64 %66, -4
  %112 = icmp eq i64 %111, 0
  br i1 %112, label %113, label %64, !llvm.loop !20

113:                                              ; preds = %64, %53
  %114 = phi i64 [ 0, %53 ], [ %110, %64 ]
  %115 = icmp eq i64 %60, 0
  br i1 %115, label %132, label %116

116:                                              ; preds = %113, %116
  %117 = phi i64 [ %129, %116 ], [ %114, %113 ]
  %118 = phi i64 [ %130, %116 ], [ %60, %113 ]
  %119 = getelementptr %"class.v8::internal::compiler::TopLevelLiveRange"*, %"class.v8::internal::compiler::TopLevelLiveRange"** %18, i64 %117
  %120 = getelementptr %"class.v8::internal::compiler::TopLevelLiveRange"*, %"class.v8::internal::compiler::TopLevelLiveRange"** %29, i64 %117
  %121 = bitcast %"class.v8::internal::compiler::TopLevelLiveRange"** %120 to <2 x i64>*
  %122 = load <2 x i64>, <2 x i64>* %121, align 8, !alias.scope !15
  %123 = getelementptr %"class.v8::internal::compiler::TopLevelLiveRange"*, %"class.v8::internal::compiler::TopLevelLiveRange"** %120, i64 2
  %124 = bitcast %"class.v8::internal::compiler::TopLevelLiveRange"** %123 to <2 x i64>*
  %125 = load <2 x i64>, <2 x i64>* %124, align 8, !alias.scope !15
  %126 = bitcast %"class.v8::internal::compiler::TopLevelLiveRange"** %119 to <2 x i64>*
  store <2 x i64> %122, <2 x i64>* %126, align 8, !alias.scope !18, !noalias !15
  %127 = getelementptr %"class.v8::internal::compiler::TopLevelLiveRange"*, %"class.v8::internal::compiler::TopLevelLiveRange"** %119, i64 2
  %128 = bitcast %"class.v8::internal::compiler::TopLevelLiveRange"** %127 to <2 x i64>*
  store <2 x i64> %125, <2 x i64>* %128, align 8, !alias.scope !18, !noalias !15
  %129 = add i64 %117, 4
  %130 = add i64 %118, -1
  %131 = icmp eq i64 %130, 0
  br i1 %131, label %132, label %116, !llvm.loop !21

132:                                              ; preds = %116, %113
  %133 = icmp eq i64 %37, %54
  br i1 %133, label %205, label %134

134:                                              ; preds = %132, %39, %31
  %135 = phi %"class.v8::internal::compiler::TopLevelLiveRange"** [ %18, %39 ], [ %18, %31 ], [ %55, %132 ]
  %136 = phi %"class.v8::internal::compiler::TopLevelLiveRange"** [ %29, %39 ], [ %29, %31 ], [ %56, %132 ]
  %137 = ptrtoint %"class.v8::internal::compiler::TopLevelLiveRange"** %136 to i64
  %138 = getelementptr %"class.v8::internal::compiler::TopLevelLiveRange"*, %"class.v8::internal::compiler::TopLevelLiveRange"** %3, i64 -1
  %139 = ptrtoint %"class.v8::internal::compiler::TopLevelLiveRange"** %138 to i64
  %140 = sub i64 %139, %137
  %141 = lshr i64 %140, 3
  %142 = add nuw nsw i64 %141, 1
  %143 = and i64 %142, 7
  %144 = icmp eq i64 %143, 0
  br i1 %144, label %156, label %145

145:                                              ; preds = %134, %145
  %146 = phi %"class.v8::internal::compiler::TopLevelLiveRange"** [ %153, %145 ], [ %135, %134 ]
  %147 = phi %"class.v8::internal::compiler::TopLevelLiveRange"** [ %152, %145 ], [ %136, %134 ]
  %148 = phi i64 [ %154, %145 ], [ %143, %134 ]
  %149 = bitcast %"class.v8::internal::compiler::TopLevelLiveRange"** %146 to i64*
  %150 = bitcast %"class.v8::internal::compiler::TopLevelLiveRange"** %147 to i64*
  %151 = load i64, i64* %150, align 8
  store i64 %151, i64* %149, align 8
  %152 = getelementptr inbounds %"class.v8::internal::compiler::TopLevelLiveRange"*, %"class.v8::internal::compiler::TopLevelLiveRange"** %147, i64 1
  %153 = getelementptr inbounds %"class.v8::internal::compiler::TopLevelLiveRange"*, %"class.v8::internal::compiler::TopLevelLiveRange"** %146, i64 1
  %154 = add i64 %148, -1
  %155 = icmp eq i64 %154, 0
  br i1 %155, label %156, label %145, !llvm.loop !22

156:                                              ; preds = %145, %134
  %157 = phi %"class.v8::internal::compiler::TopLevelLiveRange"** [ undef, %134 ], [ %153, %145 ]
  %158 = phi %"class.v8::internal::compiler::TopLevelLiveRange"** [ %135, %134 ], [ %153, %145 ]
  %159 = phi %"class.v8::internal::compiler::TopLevelLiveRange"** [ %136, %134 ], [ %152, %145 ]
  %160 = icmp ult i64 %140, 56
  br i1 %160, label %205, label %161

161:                                              ; preds = %156, %161
  %162 = phi %"class.v8::internal::compiler::TopLevelLiveRange"** [ %203, %161 ], [ %158, %156 ]
  %163 = phi %"class.v8::internal::compiler::TopLevelLiveRange"** [ %202, %161 ], [ %159, %156 ]
  %164 = bitcast %"class.v8::internal::compiler::TopLevelLiveRange"** %162 to i64*
  %165 = bitcast %"class.v8::internal::compiler::TopLevelLiveRange"** %163 to i64*
  %166 = load i64, i64* %165, align 8
  store i64 %166, i64* %164, align 8
  %167 = getelementptr inbounds %"class.v8::internal::compiler::TopLevelLiveRange"*, %"class.v8::internal::compiler::TopLevelLiveRange"** %163, i64 1
  %168 = getelementptr inbounds %"class.v8::internal::compiler::TopLevelLiveRange"*, %"class.v8::internal::compiler::TopLevelLiveRange"** %162, i64 1
  %169 = bitcast %"class.v8::internal::compiler::TopLevelLiveRange"** %168 to i64*
  %170 = bitcast %"class.v8::internal::compiler::TopLevelLiveRange"** %167 to i64*
  %171 = load i64, i64* %170, align 8
  store i64 %171, i64* %169, align 8
  %172 = getelementptr inbounds %"class.v8::internal::compiler::TopLevelLiveRange"*, %"class.v8::internal::compiler::TopLevelLiveRange"** %163, i64 2
  %173 = getelementptr inbounds %"class.v8::internal::compiler::TopLevelLiveRange"*, %"class.v8::internal::compiler::TopLevelLiveRange"** %162, i64 2
  %174 = bitcast %"class.v8::internal::compiler::TopLevelLiveRange"** %173 to i64*
  %175 = bitcast %"class.v8::internal::compiler::TopLevelLiveRange"** %172 to i64*
  %176 = load i64, i64* %175, align 8
  store i64 %176, i64* %174, align 8
  %177 = getelementptr inbounds %"class.v8::internal::compiler::TopLevelLiveRange"*, %"class.v8::internal::compiler::TopLevelLiveRange"** %163, i64 3
  %178 = getelementptr inbounds %"class.v8::internal::compiler::TopLevelLiveRange"*, %"class.v8::internal::compiler::TopLevelLiveRange"** %162, i64 3
  %179 = bitcast %"class.v8::internal::compiler::TopLevelLiveRange"** %178 to i64*
  %180 = bitcast %"class.v8::internal::compiler::TopLevelLiveRange"** %177 to i64*
  %181 = load i64, i64* %180, align 8
  store i64 %181, i64* %179, align 8
  %182 = getelementptr inbounds %"class.v8::internal::compiler::TopLevelLiveRange"*, %"class.v8::internal::compiler::TopLevelLiveRange"** %163, i64 4
  %183 = getelementptr inbounds %"class.v8::internal::compiler::TopLevelLiveRange"*, %"class.v8::internal::compiler::TopLevelLiveRange"** %162, i64 4
  %184 = bitcast %"class.v8::internal::compiler::TopLevelLiveRange"** %183 to i64*
  %185 = bitcast %"class.v8::internal::compiler::TopLevelLiveRange"** %182 to i64*
  %186 = load i64, i64* %185, align 8
  store i64 %186, i64* %184, align 8
  %187 = getelementptr inbounds %"class.v8::internal::compiler::TopLevelLiveRange"*, %"class.v8::internal::compiler::TopLevelLiveRange"** %163, i64 5
  %188 = getelementptr inbounds %"class.v8::internal::compiler::TopLevelLiveRange"*, %"class.v8::internal::compiler::TopLevelLiveRange"** %162, i64 5
  %189 = bitcast %"class.v8::internal::compiler::TopLevelLiveRange"** %188 to i64*
  %190 = bitcast %"class.v8::internal::compiler::TopLevelLiveRange"** %187 to i64*
  %191 = load i64, i64* %190, align 8
  store i64 %191, i64* %189, align 8
  %192 = getelementptr inbounds %"class.v8::internal::compiler::TopLevelLiveRange"*, %"class.v8::internal::compiler::TopLevelLiveRange"** %163, i64 6
  %193 = getelementptr inbounds %"class.v8::internal::compiler::TopLevelLiveRange"*, %"class.v8::internal::compiler::TopLevelLiveRange"** %162, i64 6
  %194 = bitcast %"class.v8::internal::compiler::TopLevelLiveRange"** %193 to i64*
  %195 = bitcast %"class.v8::internal::compiler::TopLevelLiveRange"** %192 to i64*
  %196 = load i64, i64* %195, align 8
  store i64 %196, i64* %194, align 8
  %197 = getelementptr inbounds %"class.v8::internal::compiler::TopLevelLiveRange"*, %"class.v8::internal::compiler::TopLevelLiveRange"** %163, i64 7
  %198 = getelementptr inbounds %"class.v8::internal::compiler::TopLevelLiveRange"*, %"class.v8::internal::compiler::TopLevelLiveRange"** %162, i64 7
  %199 = bitcast %"class.v8::internal::compiler::TopLevelLiveRange"** %198 to i64*
  %200 = bitcast %"class.v8::internal::compiler::TopLevelLiveRange"** %197 to i64*
  %201 = load i64, i64* %200, align 8
  store i64 %201, i64* %199, align 8
  %202 = getelementptr inbounds %"class.v8::internal::compiler::TopLevelLiveRange"*, %"class.v8::internal::compiler::TopLevelLiveRange"** %163, i64 8
  %203 = getelementptr inbounds %"class.v8::internal::compiler::TopLevelLiveRange"*, %"class.v8::internal::compiler::TopLevelLiveRange"** %162, i64 8
  %204 = icmp eq %"class.v8::internal::compiler::TopLevelLiveRange"** %202, %3
  br i1 %204, label %205, label %161, !llvm.loop !23

205:                                              ; preds = %156, %161, %132
  %206 = phi %"class.v8::internal::compiler::TopLevelLiveRange"** [ %55, %132 ], [ %157, %156 ], [ %203, %161 ]
  %207 = ptrtoint %"class.v8::internal::compiler::TopLevelLiveRange"** %206 to i64
  br label %208

208:                                              ; preds = %205, %28
  %209 = phi i64 [ %19, %28 ], [ %207, %205 ]
  store i64 %209, i64* %23, align 8
  %210 = icmp sgt i64 %25, 0
  br i1 %210, label %211, label %846

211:                                              ; preds = %208
  %212 = inttoptr i64 %209 to %"class.v8::internal::compiler::TopLevelLiveRange"**
  br label %213

213:                                              ; preds = %211, %24
  %214 = phi i64 [ %209, %211 ], [ %19, %24 ]
  %215 = phi %"class.v8::internal::compiler::TopLevelLiveRange"** [ %212, %211 ], [ %18, %24 ]
  %216 = phi %"class.v8::internal::compiler::TopLevelLiveRange"** [ %29, %211 ], [ %3, %24 ]
  %217 = getelementptr inbounds %"class.v8::internal::compiler::TopLevelLiveRange"*, %"class.v8::internal::compiler::TopLevelLiveRange"** %1, i64 %11
  %218 = ptrtoint %"class.v8::internal::compiler::TopLevelLiveRange"** %217 to i64
  %219 = sub i64 %214, %218
  %220 = ashr exact i64 %219, 3
  %221 = getelementptr inbounds %"class.v8::internal::compiler::TopLevelLiveRange"*, %"class.v8::internal::compiler::TopLevelLiveRange"** %1, i64 %220
  %222 = icmp ult %"class.v8::internal::compiler::TopLevelLiveRange"** %221, %18
  br i1 %222, label %223, label %336

223:                                              ; preds = %213
  %224 = sub nsw i64 0, %220
  %225 = getelementptr %"class.v8::internal::compiler::TopLevelLiveRange"*, %"class.v8::internal::compiler::TopLevelLiveRange"** %18, i64 %224
  %226 = bitcast %"class.v8::internal::compiler::TopLevelLiveRange"** %225 to i8*
  %227 = xor i64 %6, -1
  %228 = getelementptr i8, i8* %226, i64 %227
  %229 = ptrtoint i8* %228 to i64
  %230 = lshr i64 %229, 3
  %231 = add nuw nsw i64 %230, 1
  %232 = icmp ult i64 %231, 4
  br i1 %232, label %233, label %236

233:                                              ; preds = %331, %236, %223
  %234 = phi %"class.v8::internal::compiler::TopLevelLiveRange"** [ %215, %236 ], [ %215, %223 ], [ %254, %331 ]
  %235 = phi %"class.v8::internal::compiler::TopLevelLiveRange"** [ %221, %236 ], [ %221, %223 ], [ %255, %331 ]
  br label %344

236:                                              ; preds = %223
  %237 = sub nsw i64 0, %220
  %238 = getelementptr %"class.v8::internal::compiler::TopLevelLiveRange"*, %"class.v8::internal::compiler::TopLevelLiveRange"** %18, i64 %237
  %239 = bitcast %"class.v8::internal::compiler::TopLevelLiveRange"** %238 to i8*
  %240 = xor i64 %6, -1
  %241 = getelementptr i8, i8* %239, i64 %240
  %242 = ptrtoint i8* %241 to i64
  %243 = lshr i64 %242, 3
  %244 = add nuw nsw i64 %243, 1
  %245 = getelementptr %"class.v8::internal::compiler::TopLevelLiveRange"*, %"class.v8::internal::compiler::TopLevelLiveRange"** %215, i64 %244
  %246 = add nsw i64 %220, %243
  %247 = add nsw i64 %246, 1
  %248 = getelementptr %"class.v8::internal::compiler::TopLevelLiveRange"*, %"class.v8::internal::compiler::TopLevelLiveRange"** %1, i64 %247
  %249 = icmp ult %"class.v8::internal::compiler::TopLevelLiveRange"** %215, %248
  %250 = icmp ult %"class.v8::internal::compiler::TopLevelLiveRange"** %221, %245
  %251 = and i1 %249, %250
  br i1 %251, label %233, label %252

252:                                              ; preds = %236
  %253 = and i64 %231, 4611686018427387900
  %254 = getelementptr %"class.v8::internal::compiler::TopLevelLiveRange"*, %"class.v8::internal::compiler::TopLevelLiveRange"** %215, i64 %253
  %255 = getelementptr %"class.v8::internal::compiler::TopLevelLiveRange"*, %"class.v8::internal::compiler::TopLevelLiveRange"** %221, i64 %253
  %256 = add nsw i64 %253, -4
  %257 = lshr exact i64 %256, 2
  %258 = add nuw nsw i64 %257, 1
  %259 = and i64 %258, 3
  %260 = icmp ult i64 %256, 12
  br i1 %260, label %312, label %261

261:                                              ; preds = %252
  %262 = sub nsw i64 %258, %259
  br label %263

263:                                              ; preds = %263, %261
  %264 = phi i64 [ 0, %261 ], [ %309, %263 ]
  %265 = phi i64 [ %262, %261 ], [ %310, %263 ]
  %266 = getelementptr %"class.v8::internal::compiler::TopLevelLiveRange"*, %"class.v8::internal::compiler::TopLevelLiveRange"** %215, i64 %264
  %267 = getelementptr %"class.v8::internal::compiler::TopLevelLiveRange"*, %"class.v8::internal::compiler::TopLevelLiveRange"** %221, i64 %264
  %268 = bitcast %"class.v8::internal::compiler::TopLevelLiveRange"** %267 to <2 x i64>*
  %269 = load <2 x i64>, <2 x i64>* %268, align 8, !alias.scope !24
  %270 = getelementptr %"class.v8::internal::compiler::TopLevelLiveRange"*, %"class.v8::internal::compiler::TopLevelLiveRange"** %267, i64 2
  %271 = bitcast %"class.v8::internal::compiler::TopLevelLiveRange"** %270 to <2 x i64>*
  %272 = load <2 x i64>, <2 x i64>* %271, align 8, !alias.scope !24
  %273 = bitcast %"class.v8::internal::compiler::TopLevelLiveRange"** %266 to <2 x i64>*
  store <2 x i64> %269, <2 x i64>* %273, align 8, !alias.scope !27, !noalias !24
  %274 = getelementptr %"class.v8::internal::compiler::TopLevelLiveRange"*, %"class.v8::internal::compiler::TopLevelLiveRange"** %266, i64 2
  %275 = bitcast %"class.v8::internal::compiler::TopLevelLiveRange"** %274 to <2 x i64>*
  store <2 x i64> %272, <2 x i64>* %275, align 8, !alias.scope !27, !noalias !24
  %276 = or i64 %264, 4
  %277 = getelementptr %"class.v8::internal::compiler::TopLevelLiveRange"*, %"class.v8::internal::compiler::TopLevelLiveRange"** %215, i64 %276
  %278 = getelementptr %"class.v8::internal::compiler::TopLevelLiveRange"*, %"class.v8::internal::compiler::TopLevelLiveRange"** %221, i64 %276
  %279 = bitcast %"class.v8::internal::compiler::TopLevelLiveRange"** %278 to <2 x i64>*
  %280 = load <2 x i64>, <2 x i64>* %279, align 8, !alias.scope !24
  %281 = getelementptr %"class.v8::internal::compiler::TopLevelLiveRange"*, %"class.v8::internal::compiler::TopLevelLiveRange"** %278, i64 2
  %282 = bitcast %"class.v8::internal::compiler::TopLevelLiveRange"** %281 to <2 x i64>*
  %283 = load <2 x i64>, <2 x i64>* %282, align 8, !alias.scope !24
  %284 = bitcast %"class.v8::internal::compiler::TopLevelLiveRange"** %277 to <2 x i64>*
  store <2 x i64> %280, <2 x i64>* %284, align 8, !alias.scope !27, !noalias !24
  %285 = getelementptr %"class.v8::internal::compiler::TopLevelLiveRange"*, %"class.v8::internal::compiler::TopLevelLiveRange"** %277, i64 2
  %286 = bitcast %"class.v8::internal::compiler::TopLevelLiveRange"** %285 to <2 x i64>*
  store <2 x i64> %283, <2 x i64>* %286, align 8, !alias.scope !27, !noalias !24
  %287 = or i64 %264, 8
  %288 = getelementptr %"class.v8::internal::compiler::TopLevelLiveRange"*, %"class.v8::internal::compiler::TopLevelLiveRange"** %215, i64 %287
  %289 = getelementptr %"class.v8::internal::compiler::TopLevelLiveRange"*, %"class.v8::internal::compiler::TopLevelLiveRange"** %221, i64 %287
  %290 = bitcast %"class.v8::internal::compiler::TopLevelLiveRange"** %289 to <2 x i64>*
  %291 = load <2 x i64>, <2 x i64>* %290, align 8, !alias.scope !24
  %292 = getelementptr %"class.v8::internal::compiler::TopLevelLiveRange"*, %"class.v8::internal::compiler::TopLevelLiveRange"** %289, i64 2
  %293 = bitcast %"class.v8::internal::compiler::TopLevelLiveRange"** %292 to <2 x i64>*
  %294 = load <2 x i64>, <2 x i64>* %293, align 8, !alias.scope !24
  %295 = bitcast %"class.v8::internal::compiler::TopLevelLiveRange"** %288 to <2 x i64>*
  store <2 x i64> %291, <2 x i64>* %295, align 8, !alias.scope !27, !noalias !24
  %296 = getelementptr %"class.v8::internal::compiler::TopLevelLiveRange"*, %"class.v8::internal::compiler::TopLevelLiveRange"** %288, i64 2
  %297 = bitcast %"class.v8::internal::compiler::TopLevelLiveRange"** %296 to <2 x i64>*
  store <2 x i64> %294, <2 x i64>* %297, align 8, !alias.scope !27, !noalias !24
  %298 = or i64 %264, 12
  %299 = getelementptr %"class.v8::internal::compiler::TopLevelLiveRange"*, %"class.v8::internal::compiler::TopLevelLiveRange"** %215, i64 %298
  %300 = getelementptr %"class.v8::internal::compiler::TopLevelLiveRange"*, %"class.v8::internal::compiler::TopLevelLiveRange"** %221, i64 %298
  %301 = bitcast %"class.v8::internal::compiler::TopLevelLiveRange"** %300 to <2 x i64>*
  %302 = load <2 x i64>, <2 x i64>* %301, align 8, !alias.scope !24
  %303 = getelementptr %"class.v8::internal::compiler::TopLevelLiveRange"*, %"class.v8::internal::compiler::TopLevelLiveRange"** %300, i64 2
  %304 = bitcast %"class.v8::internal::compiler::TopLevelLiveRange"** %303 to <2 x i64>*
  %305 = load <2 x i64>, <2 x i64>* %304, align 8, !alias.scope !24
  %306 = bitcast %"class.v8::internal::compiler::TopLevelLiveRange"** %299 to <2 x i64>*
  store <2 x i64> %302, <2 x i64>* %306, align 8, !alias.scope !27, !noalias !24
  %307 = getelementptr %"class.v8::internal::compiler::TopLevelLiveRange"*, %"class.v8::internal::compiler::TopLevelLiveRange"** %299, i64 2
  %308 = bitcast %"class.v8::internal::compiler::TopLevelLiveRange"** %307 to <2 x i64>*
  store <2 x i64> %305, <2 x i64>* %308, align 8, !alias.scope !27, !noalias !24
  %309 = add i64 %264, 16
  %310 = add i64 %265, -4
  %311 = icmp eq i64 %310, 0
  br i1 %311, label %312, label %263, !llvm.loop !29

312:                                              ; preds = %263, %252
  %313 = phi i64 [ 0, %252 ], [ %309, %263 ]
  %314 = icmp eq i64 %259, 0
  br i1 %314, label %331, label %315

315:                                              ; preds = %312, %315
  %316 = phi i64 [ %328, %315 ], [ %313, %312 ]
  %317 = phi i64 [ %329, %315 ], [ %259, %312 ]
  %318 = getelementptr %"class.v8::internal::compiler::TopLevelLiveRange"*, %"class.v8::internal::compiler::TopLevelLiveRange"** %215, i64 %316
  %319 = getelementptr %"class.v8::internal::compiler::TopLevelLiveRange"*, %"class.v8::internal::compiler::TopLevelLiveRange"** %221, i64 %316
  %320 = bitcast %"class.v8::internal::compiler::TopLevelLiveRange"** %319 to <2 x i64>*
  %321 = load <2 x i64>, <2 x i64>* %320, align 8, !alias.scope !24
  %322 = getelementptr %"class.v8::internal::compiler::TopLevelLiveRange"*, %"class.v8::internal::compiler::TopLevelLiveRange"** %319, i64 2
  %323 = bitcast %"class.v8::internal::compiler::TopLevelLiveRange"** %322 to <2 x i64>*
  %324 = load <2 x i64>, <2 x i64>* %323, align 8, !alias.scope !24
  %325 = bitcast %"class.v8::internal::compiler::TopLevelLiveRange"** %318 to <2 x i64>*
  store <2 x i64> %321, <2 x i64>* %325, align 8, !alias.scope !27, !noalias !24
  %326 = getelementptr %"class.v8::internal::compiler::TopLevelLiveRange"*, %"class.v8::internal::compiler::TopLevelLiveRange"** %318, i64 2
  %327 = bitcast %"class.v8::internal::compiler::TopLevelLiveRange"** %326 to <2 x i64>*
  store <2 x i64> %324, <2 x i64>* %327, align 8, !alias.scope !27, !noalias !24
  %328 = add i64 %316, 4
  %329 = add i64 %317, -1
  %330 = icmp eq i64 %329, 0
  br i1 %330, label %331, label %315, !llvm.loop !30

331:                                              ; preds = %315, %312
  %332 = icmp eq i64 %231, %253
  br i1 %332, label %333, label %233

333:                                              ; preds = %344, %331
  %334 = phi %"class.v8::internal::compiler::TopLevelLiveRange"** [ %254, %331 ], [ %351, %344 ]
  %335 = ptrtoint %"class.v8::internal::compiler::TopLevelLiveRange"** %334 to i64
  br label %336

336:                                              ; preds = %333, %213
  %337 = phi i64 [ %335, %333 ], [ %214, %213 ]
  store i64 %337, i64* %23, align 8
  %338 = icmp eq i64 %219, 0
  br i1 %338, label %353, label %339

339:                                              ; preds = %336
  %340 = sub nsw i64 0, %220
  %341 = getelementptr inbounds %"class.v8::internal::compiler::TopLevelLiveRange"*, %"class.v8::internal::compiler::TopLevelLiveRange"** %215, i64 %340
  %342 = bitcast %"class.v8::internal::compiler::TopLevelLiveRange"** %341 to i8*
  %343 = bitcast %"class.v8::internal::compiler::TopLevelLiveRange"** %1 to i8*
  tail call void @llvm.memmove.p0i8.p0i8.i64(i8* align 8 %342, i8* align 8 %343, i64 %219, i1 false) #16
  br label %353

344:                                              ; preds = %233, %344
  %345 = phi %"class.v8::internal::compiler::TopLevelLiveRange"** [ %351, %344 ], [ %234, %233 ]
  %346 = phi %"class.v8::internal::compiler::TopLevelLiveRange"** [ %350, %344 ], [ %235, %233 ]
  %347 = bitcast %"class.v8::internal::compiler::TopLevelLiveRange"** %346 to i64*
  %348 = load i64, i64* %347, align 8
  %349 = bitcast %"class.v8::internal::compiler::TopLevelLiveRange"** %345 to i64*
  store i64 %348, i64* %349, align 8
  %350 = getelementptr inbounds %"class.v8::internal::compiler::TopLevelLiveRange"*, %"class.v8::internal::compiler::TopLevelLiveRange"** %346, i64 1
  %351 = getelementptr inbounds %"class.v8::internal::compiler::TopLevelLiveRange"*, %"class.v8::internal::compiler::TopLevelLiveRange"** %345, i64 1
  %352 = icmp ult %"class.v8::internal::compiler::TopLevelLiveRange"** %350, %18
  br i1 %352, label %344, label %333, !llvm.loop !31

353:                                              ; preds = %336, %339
  %354 = ptrtoint %"class.v8::internal::compiler::TopLevelLiveRange"** %216 to i64
  %355 = sub i64 %354, %7
  %356 = icmp eq i64 %355, 0
  br i1 %356, label %846, label %357

357:                                              ; preds = %353
  %358 = bitcast %"class.v8::internal::compiler::TopLevelLiveRange"** %2 to i8*
  tail call void @llvm.memmove.p0i8.p0i8.i64(i8* align 8 %5, i8* align 8 %358, i64 %355, i1 false) #16
  br label %846

359:                                              ; preds = %13
  %360 = bitcast %"class.std::__1::vector"* %0 to i64*
  %361 = load i64, i64* %360, align 8
  %362 = sub i64 %19, %361
  %363 = ashr exact i64 %362, 3
  %364 = add nsw i64 %363, %11
  %365 = icmp ugt i64 %364, 268435455
  br i1 %365, label %366, label %368

366:                                              ; preds = %359
  %367 = bitcast %"class.std::__1::vector"* %0 to %"class.std::__1::__vector_base_common"*
  tail call void @_ZNKSt3__120__vector_base_commonILb1EE20__throw_length_errorEv(%"class.std::__1::__vector_base_common"* %367) #17
  unreachable

368:                                              ; preds = %359
  %369 = sub i64 %16, %361
  %370 = ashr exact i64 %369, 3
  %371 = icmp ult i64 %370, 134217727
  br i1 %371, label %375, label %372

372:                                              ; preds = %368
  %373 = sub i64 %6, %361
  %374 = ashr exact i64 %373, 3
  br label %382

375:                                              ; preds = %368
  %376 = ashr exact i64 %369, 2
  %377 = icmp ult i64 %376, %364
  %378 = select i1 %377, i64 %364, i64 %376
  %379 = sub i64 %6, %361
  %380 = ashr exact i64 %379, 3
  %381 = icmp eq i64 %378, 0
  br i1 %381, label %401, label %382

382:                                              ; preds = %372, %375
  %383 = phi i64 [ %374, %372 ], [ %380, %375 ]
  %384 = phi i64 [ 268435455, %372 ], [ %378, %375 ]
  %385 = getelementptr inbounds %"class.std::__1::vector", %"class.std::__1::vector"* %0, i64 0, i32 0, i32 2, i32 1, i32 0, i32 0
  %386 = load %"class.v8::internal::Zone"*, %"class.v8::internal::Zone"** %385, align 8
  %387 = shl i64 %384, 3
  %388 = getelementptr inbounds %"class.v8::internal::Zone", %"class.v8::internal::Zone"* %386, i64 0, i32 2
  %389 = load i64, i64* %388, align 8
  %390 = getelementptr inbounds %"class.v8::internal::Zone", %"class.v8::internal::Zone"* %386, i64 0, i32 3
  %391 = load i64, i64* %390, align 8
  %392 = sub i64 %391, %389
  %393 = icmp ugt i64 %387, %392
  br i1 %393, label %394, label %396, !prof !2

394:                                              ; preds = %382
  %395 = tail call i64 @_ZN2v88internal4Zone9NewExpandEm(%"class.v8::internal::Zone"* %386, i64 %387) #16
  br label %398

396:                                              ; preds = %382
  %397 = add i64 %389, %387
  store i64 %397, i64* %388, align 8
  br label %398

398:                                              ; preds = %396, %394
  %399 = phi i64 [ %395, %394 ], [ %389, %396 ]
  %400 = inttoptr i64 %399 to %"class.v8::internal::compiler::TopLevelLiveRange"**
  br label %401

401:                                              ; preds = %398, %375
  %402 = phi i64 [ %383, %398 ], [ %380, %375 ]
  %403 = phi i64 [ %384, %398 ], [ 0, %375 ]
  %404 = phi %"class.v8::internal::compiler::TopLevelLiveRange"** [ %400, %398 ], [ null, %375 ]
  %405 = getelementptr inbounds %"class.v8::internal::compiler::TopLevelLiveRange"*, %"class.v8::internal::compiler::TopLevelLiveRange"** %404, i64 %402
  %406 = ptrtoint %"class.v8::internal::compiler::TopLevelLiveRange"** %405 to i64
  %407 = getelementptr inbounds %"class.v8::internal::compiler::TopLevelLiveRange"*, %"class.v8::internal::compiler::TopLevelLiveRange"** %404, i64 %403
  %408 = ptrtoint %"class.v8::internal::compiler::TopLevelLiveRange"** %407 to i64
  %409 = getelementptr inbounds %"class.v8::internal::compiler::TopLevelLiveRange"*, %"class.v8::internal::compiler::TopLevelLiveRange"** %405, i64 %11
  %410 = add i64 %10, -8
  %411 = lshr i64 %410, 3
  %412 = add nuw nsw i64 %411, 1
  %413 = and i64 %412, 7
  %414 = icmp eq i64 %413, 0
  br i1 %414, label %430, label %415

415:                                              ; preds = %401, %415
  %416 = phi %"class.v8::internal::compiler::TopLevelLiveRange"** [ %423, %415 ], [ %405, %401 ]
  %417 = phi i64 [ %424, %415 ], [ %406, %401 ]
  %418 = phi %"class.v8::internal::compiler::TopLevelLiveRange"** [ %425, %415 ], [ %2, %401 ]
  %419 = phi i64 [ %426, %415 ], [ %413, %401 ]
  %420 = bitcast %"class.v8::internal::compiler::TopLevelLiveRange"** %418 to i64*
  %421 = load i64, i64* %420, align 8
  %422 = inttoptr i64 %417 to i64*
  store i64 %421, i64* %422, align 8
  %423 = getelementptr inbounds %"class.v8::internal::compiler::TopLevelLiveRange"*, %"class.v8::internal::compiler::TopLevelLiveRange"** %416, i64 1
  %424 = ptrtoint %"class.v8::internal::compiler::TopLevelLiveRange"** %423 to i64
  %425 = getelementptr inbounds %"class.v8::internal::compiler::TopLevelLiveRange"*, %"class.v8::internal::compiler::TopLevelLiveRange"** %418, i64 1
  %426 = add i64 %419, -1
  %427 = icmp eq i64 %426, 0
  br i1 %427, label %428, label %415, !llvm.loop !32

428:                                              ; preds = %415
  %429 = ptrtoint %"class.v8::internal::compiler::TopLevelLiveRange"** %423 to i64
  br label %430

430:                                              ; preds = %401, %428
  %431 = phi %"class.v8::internal::compiler::TopLevelLiveRange"** [ %405, %401 ], [ %423, %428 ]
  %432 = phi i64 [ %406, %401 ], [ %429, %428 ]
  %433 = phi %"class.v8::internal::compiler::TopLevelLiveRange"** [ %2, %401 ], [ %425, %428 ]
  %434 = icmp ult i64 %410, 56
  br i1 %434, label %481, label %435

435:                                              ; preds = %430, %435
  %436 = phi %"class.v8::internal::compiler::TopLevelLiveRange"** [ %477, %435 ], [ %431, %430 ]
  %437 = phi i64 [ %478, %435 ], [ %432, %430 ]
  %438 = phi %"class.v8::internal::compiler::TopLevelLiveRange"** [ %479, %435 ], [ %433, %430 ]
  %439 = bitcast %"class.v8::internal::compiler::TopLevelLiveRange"** %438 to i64*
  %440 = load i64, i64* %439, align 8
  %441 = inttoptr i64 %437 to i64*
  store i64 %440, i64* %441, align 8
  %442 = getelementptr inbounds %"class.v8::internal::compiler::TopLevelLiveRange"*, %"class.v8::internal::compiler::TopLevelLiveRange"** %436, i64 1
  %443 = getelementptr inbounds %"class.v8::internal::compiler::TopLevelLiveRange"*, %"class.v8::internal::compiler::TopLevelLiveRange"** %438, i64 1
  %444 = bitcast %"class.v8::internal::compiler::TopLevelLiveRange"** %443 to i64*
  %445 = load i64, i64* %444, align 8
  %446 = bitcast %"class.v8::internal::compiler::TopLevelLiveRange"** %442 to i64*
  store i64 %445, i64* %446, align 8
  %447 = getelementptr inbounds %"class.v8::internal::compiler::TopLevelLiveRange"*, %"class.v8::internal::compiler::TopLevelLiveRange"** %436, i64 2
  %448 = getelementptr inbounds %"class.v8::internal::compiler::TopLevelLiveRange"*, %"class.v8::internal::compiler::TopLevelLiveRange"** %438, i64 2
  %449 = bitcast %"class.v8::internal::compiler::TopLevelLiveRange"** %448 to i64*
  %450 = load i64, i64* %449, align 8
  %451 = bitcast %"class.v8::internal::compiler::TopLevelLiveRange"** %447 to i64*
  store i64 %450, i64* %451, align 8
  %452 = getelementptr inbounds %"class.v8::internal::compiler::TopLevelLiveRange"*, %"class.v8::internal::compiler::TopLevelLiveRange"** %436, i64 3
  %453 = getelementptr inbounds %"class.v8::internal::compiler::TopLevelLiveRange"*, %"class.v8::internal::compiler::TopLevelLiveRange"** %438, i64 3
  %454 = bitcast %"class.v8::internal::compiler::TopLevelLiveRange"** %453 to i64*
  %455 = load i64, i64* %454, align 8
  %456 = bitcast %"class.v8::internal::compiler::TopLevelLiveRange"** %452 to i64*
  store i64 %455, i64* %456, align 8
  %457 = getelementptr inbounds %"class.v8::internal::compiler::TopLevelLiveRange"*, %"class.v8::internal::compiler::TopLevelLiveRange"** %436, i64 4
  %458 = getelementptr inbounds %"class.v8::internal::compiler::TopLevelLiveRange"*, %"class.v8::internal::compiler::TopLevelLiveRange"** %438, i64 4
  %459 = bitcast %"class.v8::internal::compiler::TopLevelLiveRange"** %458 to i64*
  %460 = load i64, i64* %459, align 8
  %461 = bitcast %"class.v8::internal::compiler::TopLevelLiveRange"** %457 to i64*
  store i64 %460, i64* %461, align 8
  %462 = getelementptr inbounds %"class.v8::internal::compiler::TopLevelLiveRange"*, %"class.v8::internal::compiler::TopLevelLiveRange"** %436, i64 5
  %463 = getelementptr inbounds %"class.v8::internal::compiler::TopLevelLiveRange"*, %"class.v8::internal::compiler::TopLevelLiveRange"** %438, i64 5
  %464 = bitcast %"class.v8::internal::compiler::TopLevelLiveRange"** %463 to i64*
  %465 = load i64, i64* %464, align 8
  %466 = bitcast %"class.v8::internal::compiler::TopLevelLiveRange"** %462 to i64*
  store i64 %465, i64* %466, align 8
  %467 = getelementptr inbounds %"class.v8::internal::compiler::TopLevelLiveRange"*, %"class.v8::internal::compiler::TopLevelLiveRange"** %436, i64 6
  %468 = getelementptr inbounds %"class.v8::internal::compiler::TopLevelLiveRange"*, %"class.v8::internal::compiler::TopLevelLiveRange"** %438, i64 6
  %469 = bitcast %"class.v8::internal::compiler::TopLevelLiveRange"** %468 to i64*
  %470 = load i64, i64* %469, align 8
  %471 = bitcast %"class.v8::internal::compiler::TopLevelLiveRange"** %467 to i64*
  store i64 %470, i64* %471, align 8
  %472 = getelementptr inbounds %"class.v8::internal::compiler::TopLevelLiveRange"*, %"class.v8::internal::compiler::TopLevelLiveRange"** %436, i64 7
  %473 = getelementptr inbounds %"class.v8::internal::compiler::TopLevelLiveRange"*, %"class.v8::internal::compiler::TopLevelLiveRange"** %438, i64 7
  %474 = bitcast %"class.v8::internal::compiler::TopLevelLiveRange"** %473 to i64*
  %475 = load i64, i64* %474, align 8
  %476 = bitcast %"class.v8::internal::compiler::TopLevelLiveRange"** %472 to i64*
  store i64 %475, i64* %476, align 8
  %477 = getelementptr inbounds %"class.v8::internal::compiler::TopLevelLiveRange"*, %"class.v8::internal::compiler::TopLevelLiveRange"** %436, i64 8
  %478 = ptrtoint %"class.v8::internal::compiler::TopLevelLiveRange"** %477 to i64
  %479 = getelementptr inbounds %"class.v8::internal::compiler::TopLevelLiveRange"*, %"class.v8::internal::compiler::TopLevelLiveRange"** %438, i64 8
  %480 = icmp eq %"class.v8::internal::compiler::TopLevelLiveRange"** %409, %477
  br i1 %480, label %481, label %435

481:                                              ; preds = %435, %430
  %482 = load %"class.v8::internal::compiler::TopLevelLiveRange"**, %"class.v8::internal::compiler::TopLevelLiveRange"*** %8, align 8
  %483 = ptrtoint %"class.v8::internal::compiler::TopLevelLiveRange"** %482 to i64
  %484 = icmp eq %"class.v8::internal::compiler::TopLevelLiveRange"** %482, %1
  br i1 %484, label %657, label %485

485:                                              ; preds = %481
  %486 = getelementptr %"class.v8::internal::compiler::TopLevelLiveRange"*, %"class.v8::internal::compiler::TopLevelLiveRange"** %1, i64 -1
  %487 = ptrtoint %"class.v8::internal::compiler::TopLevelLiveRange"** %486 to i64
  %488 = sub i64 %487, %483
  %489 = lshr i64 %488, 3
  %490 = add nuw nsw i64 %489, 1
  %491 = icmp ult i64 %490, 4
  br i1 %491, label %584, label %492

492:                                              ; preds = %485
  %493 = getelementptr %"class.v8::internal::compiler::TopLevelLiveRange"*, %"class.v8::internal::compiler::TopLevelLiveRange"** %1, i64 -1
  %494 = ptrtoint %"class.v8::internal::compiler::TopLevelLiveRange"** %493 to i64
  %495 = sub i64 %494, %483
  %496 = lshr i64 %495, 3
  %497 = xor i64 %496, -1
  %498 = add nsw i64 %402, %497
  %499 = getelementptr %"class.v8::internal::compiler::TopLevelLiveRange"*, %"class.v8::internal::compiler::TopLevelLiveRange"** %404, i64 %498
  %500 = xor i64 %496, -1
  %501 = getelementptr %"class.v8::internal::compiler::TopLevelLiveRange"*, %"class.v8::internal::compiler::TopLevelLiveRange"** %1, i64 %500
  %502 = icmp ult %"class.v8::internal::compiler::TopLevelLiveRange"** %499, %1
  %503 = icmp ult %"class.v8::internal::compiler::TopLevelLiveRange"** %501, %405
  %504 = and i1 %502, %503
  br i1 %504, label %584, label %505

505:                                              ; preds = %492
  %506 = and i64 %490, 4611686018427387900
  %507 = sub nsw i64 0, %506
  %508 = getelementptr %"class.v8::internal::compiler::TopLevelLiveRange"*, %"class.v8::internal::compiler::TopLevelLiveRange"** %405, i64 %507
  %509 = sub nsw i64 0, %506
  %510 = getelementptr %"class.v8::internal::compiler::TopLevelLiveRange"*, %"class.v8::internal::compiler::TopLevelLiveRange"** %1, i64 %509
  %511 = add nsw i64 %506, -4
  %512 = lshr exact i64 %511, 2
  %513 = add nuw nsw i64 %512, 1
  %514 = and i64 %513, 1
  %515 = icmp eq i64 %511, 0
  br i1 %515, label %560, label %516

516:                                              ; preds = %505
  %517 = sub nuw nsw i64 %513, %514
  %518 = getelementptr %"class.v8::internal::compiler::TopLevelLiveRange"*, %"class.v8::internal::compiler::TopLevelLiveRange"** %405, i64 -1
  %519 = getelementptr %"class.v8::internal::compiler::TopLevelLiveRange"*, %"class.v8::internal::compiler::TopLevelLiveRange"** %1, i64 -1
  %520 = getelementptr %"class.v8::internal::compiler::TopLevelLiveRange"*, %"class.v8::internal::compiler::TopLevelLiveRange"** %405, i64 -1
  %521 = getelementptr %"class.v8::internal::compiler::TopLevelLiveRange"*, %"class.v8::internal::compiler::TopLevelLiveRange"** %1, i64 -1
  br label %522

522:                                              ; preds = %522, %516
  %523 = phi i64 [ 0, %516 ], [ %557, %522 ]
  %524 = phi i64 [ %517, %516 ], [ %558, %522 ]
  %525 = sub i64 0, %523
  %526 = sub i64 0, %523
  %527 = getelementptr inbounds %"class.v8::internal::compiler::TopLevelLiveRange"*, %"class.v8::internal::compiler::TopLevelLiveRange"** %518, i64 %525
  %528 = getelementptr inbounds %"class.v8::internal::compiler::TopLevelLiveRange"*, %"class.v8::internal::compiler::TopLevelLiveRange"** %519, i64 %526
  %529 = getelementptr inbounds %"class.v8::internal::compiler::TopLevelLiveRange"*, %"class.v8::internal::compiler::TopLevelLiveRange"** %528, i64 -1
  %530 = bitcast %"class.v8::internal::compiler::TopLevelLiveRange"** %529 to <2 x i64>*
  %531 = load <2 x i64>, <2 x i64>* %530, align 8, !alias.scope !33
  %532 = getelementptr inbounds %"class.v8::internal::compiler::TopLevelLiveRange"*, %"class.v8::internal::compiler::TopLevelLiveRange"** %528, i64 -2
  %533 = getelementptr inbounds %"class.v8::internal::compiler::TopLevelLiveRange"*, %"class.v8::internal::compiler::TopLevelLiveRange"** %532, i64 -1
  %534 = bitcast %"class.v8::internal::compiler::TopLevelLiveRange"** %533 to <2 x i64>*
  %535 = load <2 x i64>, <2 x i64>* %534, align 8, !alias.scope !33
  %536 = getelementptr inbounds %"class.v8::internal::compiler::TopLevelLiveRange"*, %"class.v8::internal::compiler::TopLevelLiveRange"** %527, i64 -1
  %537 = bitcast %"class.v8::internal::compiler::TopLevelLiveRange"** %536 to <2 x i64>*
  store <2 x i64> %531, <2 x i64>* %537, align 8, !alias.scope !36, !noalias !33
  %538 = getelementptr inbounds %"class.v8::internal::compiler::TopLevelLiveRange"*, %"class.v8::internal::compiler::TopLevelLiveRange"** %527, i64 -2
  %539 = getelementptr inbounds %"class.v8::internal::compiler::TopLevelLiveRange"*, %"class.v8::internal::compiler::TopLevelLiveRange"** %538, i64 -1
  %540 = bitcast %"class.v8::internal::compiler::TopLevelLiveRange"** %539 to <2 x i64>*
  store <2 x i64> %535, <2 x i64>* %540, align 8, !alias.scope !36, !noalias !33
  %541 = sub nuw nsw i64 -4, %523
  %542 = sub nuw nsw i64 -4, %523
  %543 = getelementptr inbounds %"class.v8::internal::compiler::TopLevelLiveRange"*, %"class.v8::internal::compiler::TopLevelLiveRange"** %520, i64 %541
  %544 = getelementptr inbounds %"class.v8::internal::compiler::TopLevelLiveRange"*, %"class.v8::internal::compiler::TopLevelLiveRange"** %521, i64 %542
  %545 = getelementptr inbounds %"class.v8::internal::compiler::TopLevelLiveRange"*, %"class.v8::internal::compiler::TopLevelLiveRange"** %544, i64 -1
  %546 = bitcast %"class.v8::internal::compiler::TopLevelLiveRange"** %545 to <2 x i64>*
  %547 = load <2 x i64>, <2 x i64>* %546, align 8, !alias.scope !33
  %548 = getelementptr inbounds %"class.v8::internal::compiler::TopLevelLiveRange"*, %"class.v8::internal::compiler::TopLevelLiveRange"** %544, i64 -2
  %549 = getelementptr inbounds %"class.v8::internal::compiler::TopLevelLiveRange"*, %"class.v8::internal::compiler::TopLevelLiveRange"** %548, i64 -1
  %550 = bitcast %"class.v8::internal::compiler::TopLevelLiveRange"** %549 to <2 x i64>*
  %551 = load <2 x i64>, <2 x i64>* %550, align 8, !alias.scope !33
  %552 = getelementptr inbounds %"class.v8::internal::compiler::TopLevelLiveRange"*, %"class.v8::internal::compiler::TopLevelLiveRange"** %543, i64 -1
  %553 = bitcast %"class.v8::internal::compiler::TopLevelLiveRange"** %552 to <2 x i64>*
  store <2 x i64> %547, <2 x i64>* %553, align 8, !alias.scope !36, !noalias !33
  %554 = getelementptr inbounds %"class.v8::internal::compiler::TopLevelLiveRange"*, %"class.v8::internal::compiler::TopLevelLiveRange"** %543, i64 -2
  %555 = getelementptr inbounds %"class.v8::internal::compiler::TopLevelLiveRange"*, %"class.v8::internal::compiler::TopLevelLiveRange"** %554, i64 -1
  %556 = bitcast %"class.v8::internal::compiler::TopLevelLiveRange"** %555 to <2 x i64>*
  store <2 x i64> %551, <2 x i64>* %556, align 8, !alias.scope !36, !noalias !33
  %557 = add i64 %523, 8
  %558 = add i64 %524, -2
  %559 = icmp eq i64 %558, 0
  br i1 %559, label %560, label %522, !llvm.loop !38

560:                                              ; preds = %522, %505
  %561 = phi i64 [ 0, %505 ], [ %557, %522 ]
  %562 = icmp eq i64 %514, 0
  br i1 %562, label %582, label %563

563:                                              ; preds = %560
  %564 = sub i64 0, %561
  %565 = getelementptr %"class.v8::internal::compiler::TopLevelLiveRange"*, %"class.v8::internal::compiler::TopLevelLiveRange"** %405, i64 -1
  %566 = sub i64 0, %561
  %567 = getelementptr %"class.v8::internal::compiler::TopLevelLiveRange"*, %"class.v8::internal::compiler::TopLevelLiveRange"** %1, i64 -1
  %568 = getelementptr inbounds %"class.v8::internal::compiler::TopLevelLiveRange"*, %"class.v8::internal::compiler::TopLevelLiveRange"** %565, i64 %564
  %569 = getelementptr inbounds %"class.v8::internal::compiler::TopLevelLiveRange"*, %"class.v8::internal::compiler::TopLevelLiveRange"** %567, i64 %566
  %570 = getelementptr inbounds %"class.v8::internal::compiler::TopLevelLiveRange"*, %"class.v8::internal::compiler::TopLevelLiveRange"** %569, i64 -1
  %571 = bitcast %"class.v8::internal::compiler::TopLevelLiveRange"** %570 to <2 x i64>*
  %572 = load <2 x i64>, <2 x i64>* %571, align 8, !alias.scope !33
  %573 = getelementptr inbounds %"class.v8::internal::compiler::TopLevelLiveRange"*, %"class.v8::internal::compiler::TopLevelLiveRange"** %569, i64 -2
  %574 = getelementptr inbounds %"class.v8::internal::compiler::TopLevelLiveRange"*, %"class.v8::internal::compiler::TopLevelLiveRange"** %573, i64 -1
  %575 = bitcast %"class.v8::internal::compiler::TopLevelLiveRange"** %574 to <2 x i64>*
  %576 = load <2 x i64>, <2 x i64>* %575, align 8, !alias.scope !33
  %577 = getelementptr inbounds %"class.v8::internal::compiler::TopLevelLiveRange"*, %"class.v8::internal::compiler::TopLevelLiveRange"** %568, i64 -1
  %578 = bitcast %"class.v8::internal::compiler::TopLevelLiveRange"** %577 to <2 x i64>*
  store <2 x i64> %572, <2 x i64>* %578, align 8, !alias.scope !36, !noalias !33
  %579 = getelementptr inbounds %"class.v8::internal::compiler::TopLevelLiveRange"*, %"class.v8::internal::compiler::TopLevelLiveRange"** %568, i64 -2
  %580 = getelementptr inbounds %"class.v8::internal::compiler::TopLevelLiveRange"*, %"class.v8::internal::compiler::TopLevelLiveRange"** %579, i64 -1
  %581 = bitcast %"class.v8::internal::compiler::TopLevelLiveRange"** %580 to <2 x i64>*
  store <2 x i64> %576, <2 x i64>* %581, align 8, !alias.scope !36, !noalias !33
  br label %582

582:                                              ; preds = %560, %563
  %583 = icmp eq i64 %490, %506
  br i1 %583, label %654, label %584

584:                                              ; preds = %582, %492, %485
  %585 = phi %"class.v8::internal::compiler::TopLevelLiveRange"** [ %405, %492 ], [ %405, %485 ], [ %508, %582 ]
  %586 = phi %"class.v8::internal::compiler::TopLevelLiveRange"** [ %1, %492 ], [ %1, %485 ], [ %510, %582 ]
  %587 = getelementptr %"class.v8::internal::compiler::TopLevelLiveRange"*, %"class.v8::internal::compiler::TopLevelLiveRange"** %586, i64 -1
  %588 = ptrtoint %"class.v8::internal::compiler::TopLevelLiveRange"** %587 to i64
  %589 = sub i64 %588, %483
  %590 = lshr i64 %589, 3
  %591 = add nuw nsw i64 %590, 1
  %592 = and i64 %591, 7
  %593 = icmp eq i64 %592, 0
  br i1 %593, label %605, label %594

594:                                              ; preds = %584, %594
  %595 = phi %"class.v8::internal::compiler::TopLevelLiveRange"** [ %598, %594 ], [ %585, %584 ]
  %596 = phi %"class.v8::internal::compiler::TopLevelLiveRange"** [ %599, %594 ], [ %586, %584 ]
  %597 = phi i64 [ %603, %594 ], [ %592, %584 ]
  %598 = getelementptr inbounds %"class.v8::internal::compiler::TopLevelLiveRange"*, %"class.v8::internal::compiler::TopLevelLiveRange"** %595, i64 -1
  %599 = getelementptr inbounds %"class.v8::internal::compiler::TopLevelLiveRange"*, %"class.v8::internal::compiler::TopLevelLiveRange"** %596, i64 -1
  %600 = bitcast %"class.v8::internal::compiler::TopLevelLiveRange"** %599 to i64*
  %601 = load i64, i64* %600, align 8
  %602 = bitcast %"class.v8::internal::compiler::TopLevelLiveRange"** %598 to i64*
  store i64 %601, i64* %602, align 8
  %603 = add i64 %597, -1
  %604 = icmp eq i64 %603, 0
  br i1 %604, label %605, label %594, !llvm.loop !39

605:                                              ; preds = %594, %584
  %606 = phi %"class.v8::internal::compiler::TopLevelLiveRange"** [ undef, %584 ], [ %598, %594 ]
  %607 = phi %"class.v8::internal::compiler::TopLevelLiveRange"** [ %585, %584 ], [ %598, %594 ]
  %608 = phi %"class.v8::internal::compiler::TopLevelLiveRange"** [ %586, %584 ], [ %599, %594 ]
  %609 = icmp ult i64 %589, 56
  br i1 %609, label %654, label %610

610:                                              ; preds = %605, %610
  %611 = phi %"class.v8::internal::compiler::TopLevelLiveRange"** [ %648, %610 ], [ %607, %605 ]
  %612 = phi %"class.v8::internal::compiler::TopLevelLiveRange"** [ %649, %610 ], [ %608, %605 ]
  %613 = getelementptr inbounds %"class.v8::internal::compiler::TopLevelLiveRange"*, %"class.v8::internal::compiler::TopLevelLiveRange"** %611, i64 -1
  %614 = getelementptr inbounds %"class.v8::internal::compiler::TopLevelLiveRange"*, %"class.v8::internal::compiler::TopLevelLiveRange"** %612, i64 -1
  %615 = bitcast %"class.v8::internal::compiler::TopLevelLiveRange"** %614 to i64*
  %616 = load i64, i64* %615, align 8
  %617 = bitcast %"class.v8::internal::compiler::TopLevelLiveRange"** %613 to i64*
  store i64 %616, i64* %617, align 8
  %618 = getelementptr inbounds %"class.v8::internal::compiler::TopLevelLiveRange"*, %"class.v8::internal::compiler::TopLevelLiveRange"** %611, i64 -2
  %619 = getelementptr inbounds %"class.v8::internal::compiler::TopLevelLiveRange"*, %"class.v8::internal::compiler::TopLevelLiveRange"** %612, i64 -2
  %620 = bitcast %"class.v8::internal::compiler::TopLevelLiveRange"** %619 to i64*
  %621 = load i64, i64* %620, align 8
  %622 = bitcast %"class.v8::internal::compiler::TopLevelLiveRange"** %618 to i64*
  store i64 %621, i64* %622, align 8
  %623 = getelementptr inbounds %"class.v8::internal::compiler::TopLevelLiveRange"*, %"class.v8::internal::compiler::TopLevelLiveRange"** %611, i64 -3
  %624 = getelementptr inbounds %"class.v8::internal::compiler::TopLevelLiveRange"*, %"class.v8::internal::compiler::TopLevelLiveRange"** %612, i64 -3
  %625 = bitcast %"class.v8::internal::compiler::TopLevelLiveRange"** %624 to i64*
  %626 = load i64, i64* %625, align 8
  %627 = bitcast %"class.v8::internal::compiler::TopLevelLiveRange"** %623 to i64*
  store i64 %626, i64* %627, align 8
  %628 = getelementptr inbounds %"class.v8::internal::compiler::TopLevelLiveRange"*, %"class.v8::internal::compiler::TopLevelLiveRange"** %611, i64 -4
  %629 = getelementptr inbounds %"class.v8::internal::compiler::TopLevelLiveRange"*, %"class.v8::internal::compiler::TopLevelLiveRange"** %612, i64 -4
  %630 = bitcast %"class.v8::internal::compiler::TopLevelLiveRange"** %629 to i64*
  %631 = load i64, i64* %630, align 8
  %632 = bitcast %"class.v8::internal::compiler::TopLevelLiveRange"** %628 to i64*
  store i64 %631, i64* %632, align 8
  %633 = getelementptr inbounds %"class.v8::internal::compiler::TopLevelLiveRange"*, %"class.v8::internal::compiler::TopLevelLiveRange"** %611, i64 -5
  %634 = getelementptr inbounds %"class.v8::internal::compiler::TopLevelLiveRange"*, %"class.v8::internal::compiler::TopLevelLiveRange"** %612, i64 -5
  %635 = bitcast %"class.v8::internal::compiler::TopLevelLiveRange"** %634 to i64*
  %636 = load i64, i64* %635, align 8
  %637 = bitcast %"class.v8::internal::compiler::TopLevelLiveRange"** %633 to i64*
  store i64 %636, i64* %637, align 8
  %638 = getelementptr inbounds %"class.v8::internal::compiler::TopLevelLiveRange"*, %"class.v8::internal::compiler::TopLevelLiveRange"** %611, i64 -6
  %639 = getelementptr inbounds %"class.v8::internal::compiler::TopLevelLiveRange"*, %"class.v8::internal::compiler::TopLevelLiveRange"** %612, i64 -6
  %640 = bitcast %"class.v8::internal::compiler::TopLevelLiveRange"** %639 to i64*
  %641 = load i64, i64* %640, align 8
  %642 = bitcast %"class.v8::internal::compiler::TopLevelLiveRange"** %638 to i64*
  store i64 %641, i64* %642, align 8
  %643 = getelementptr inbounds %"class.v8::internal::compiler::TopLevelLiveRange"*, %"class.v8::internal::compiler::TopLevelLiveRange"** %611, i64 -7
  %644 = getelementptr inbounds %"class.v8::internal::compiler::TopLevelLiveRange"*, %"class.v8::internal::compiler::TopLevelLiveRange"** %612, i64 -7
  %645 = bitcast %"class.v8::internal::compiler::TopLevelLiveRange"** %644 to i64*
  %646 = load i64, i64* %645, align 8
  %647 = bitcast %"class.v8::internal::compiler::TopLevelLiveRange"** %643 to i64*
  store i64 %646, i64* %647, align 8
  %648 = getelementptr inbounds %"class.v8::internal::compiler::TopLevelLiveRange"*, %"class.v8::internal::compiler::TopLevelLiveRange"** %611, i64 -8
  %649 = getelementptr inbounds %"class.v8::internal::compiler::TopLevelLiveRange"*, %"class.v8::internal::compiler::TopLevelLiveRange"** %612, i64 -8
  %650 = bitcast %"class.v8::internal::compiler::TopLevelLiveRange"** %649 to i64*
  %651 = load i64, i64* %650, align 8
  %652 = bitcast %"class.v8::internal::compiler::TopLevelLiveRange"** %648 to i64*
  store i64 %651, i64* %652, align 8
  %653 = icmp eq %"class.v8::internal::compiler::TopLevelLiveRange"** %649, %482
  br i1 %653, label %654, label %610, !llvm.loop !40

654:                                              ; preds = %605, %610, %582
  %655 = phi %"class.v8::internal::compiler::TopLevelLiveRange"** [ %508, %582 ], [ %606, %605 ], [ %648, %610 ]
  %656 = ptrtoint %"class.v8::internal::compiler::TopLevelLiveRange"** %655 to i64
  br label %657

657:                                              ; preds = %654, %481
  %658 = phi i64 [ %406, %481 ], [ %656, %654 ]
  %659 = phi %"class.v8::internal::compiler::TopLevelLiveRange"** [ %405, %481 ], [ %655, %654 ]
  %660 = load %"class.v8::internal::compiler::TopLevelLiveRange"**, %"class.v8::internal::compiler::TopLevelLiveRange"*** %17, align 8
  %661 = icmp eq %"class.v8::internal::compiler::TopLevelLiveRange"** %660, %1
  br i1 %661, label %662, label %664

662:                                              ; preds = %657
  %663 = ptrtoint %"class.v8::internal::compiler::TopLevelLiveRange"** %659 to i64
  br label %842

664:                                              ; preds = %657
  %665 = getelementptr %"class.v8::internal::compiler::TopLevelLiveRange"*, %"class.v8::internal::compiler::TopLevelLiveRange"** %660, i64 -1
  %666 = ptrtoint %"class.v8::internal::compiler::TopLevelLiveRange"** %665 to i64
  %667 = sub i64 %666, %6
  %668 = lshr i64 %667, 3
  %669 = add nuw nsw i64 %668, 1
  %670 = icmp ult i64 %669, 4
  br i1 %670, label %767, label %671

671:                                              ; preds = %664
  %672 = add nsw i64 %402, %11
  %673 = getelementptr %"class.v8::internal::compiler::TopLevelLiveRange"*, %"class.v8::internal::compiler::TopLevelLiveRange"** %660, i64 -1
  %674 = ptrtoint %"class.v8::internal::compiler::TopLevelLiveRange"** %673 to i64
  %675 = sub i64 %674, %6
  %676 = lshr i64 %675, 3
  %677 = add nsw i64 %672, %676
  %678 = add nsw i64 %677, 1
  %679 = getelementptr %"class.v8::internal::compiler::TopLevelLiveRange"*, %"class.v8::internal::compiler::TopLevelLiveRange"** %404, i64 %678
  %680 = add nuw nsw i64 %676, 1
  %681 = getelementptr %"class.v8::internal::compiler::TopLevelLiveRange"*, %"class.v8::internal::compiler::TopLevelLiveRange"** %1, i64 %680
  %682 = icmp ult %"class.v8::internal::compiler::TopLevelLiveRange"** %409, %681
  %683 = icmp ugt %"class.v8::internal::compiler::TopLevelLiveRange"** %679, %1
  %684 = and i1 %682, %683
  br i1 %684, label %767, label %685

685:                                              ; preds = %671
  %686 = and i64 %669, 4611686018427387900
  %687 = getelementptr %"class.v8::internal::compiler::TopLevelLiveRange"*, %"class.v8::internal::compiler::TopLevelLiveRange"** %409, i64 %686
  %688 = getelementptr %"class.v8::internal::compiler::TopLevelLiveRange"*, %"class.v8::internal::compiler::TopLevelLiveRange"** %409, i64 %686
  %689 = getelementptr %"class.v8::internal::compiler::TopLevelLiveRange"*, %"class.v8::internal::compiler::TopLevelLiveRange"** %1, i64 %686
  %690 = add nsw i64 %686, -4
  %691 = lshr exact i64 %690, 2
  %692 = add nuw nsw i64 %691, 1
  %693 = and i64 %692, 3
  %694 = icmp ult i64 %690, 12
  br i1 %694, label %746, label %695

695:                                              ; preds = %685
  %696 = sub nsw i64 %692, %693
  br label %697

697:                                              ; preds = %697, %695
  %698 = phi i64 [ 0, %695 ], [ %743, %697 ]
  %699 = phi i64 [ %696, %695 ], [ %744, %697 ]
  %700 = getelementptr %"class.v8::internal::compiler::TopLevelLiveRange"*, %"class.v8::internal::compiler::TopLevelLiveRange"** %409, i64 %698
  %701 = getelementptr %"class.v8::internal::compiler::TopLevelLiveRange"*, %"class.v8::internal::compiler::TopLevelLiveRange"** %1, i64 %698
  %702 = bitcast %"class.v8::internal::compiler::TopLevelLiveRange"** %701 to <2 x i64>*
  %703 = load <2 x i64>, <2 x i64>* %702, align 8, !alias.scope !41
  %704 = getelementptr %"class.v8::internal::compiler::TopLevelLiveRange"*, %"class.v8::internal::compiler::TopLevelLiveRange"** %701, i64 2
  %705 = bitcast %"class.v8::internal::compiler::TopLevelLiveRange"** %704 to <2 x i64>*
  %706 = load <2 x i64>, <2 x i64>* %705, align 8, !alias.scope !41
  %707 = bitcast %"class.v8::internal::compiler::TopLevelLiveRange"** %700 to <2 x i64>*
  store <2 x i64> %703, <2 x i64>* %707, align 8, !alias.scope !44, !noalias !41
  %708 = getelementptr %"class.v8::internal::compiler::TopLevelLiveRange"*, %"class.v8::internal::compiler::TopLevelLiveRange"** %700, i64 2
  %709 = bitcast %"class.v8::internal::compiler::TopLevelLiveRange"** %708 to <2 x i64>*
  store <2 x i64> %706, <2 x i64>* %709, align 8, !alias.scope !44, !noalias !41
  %710 = or i64 %698, 4
  %711 = getelementptr %"class.v8::internal::compiler::TopLevelLiveRange"*, %"class.v8::internal::compiler::TopLevelLiveRange"** %409, i64 %710
  %712 = getelementptr %"class.v8::internal::compiler::TopLevelLiveRange"*, %"class.v8::internal::compiler::TopLevelLiveRange"** %1, i64 %710
  %713 = bitcast %"class.v8::internal::compiler::TopLevelLiveRange"** %712 to <2 x i64>*
  %714 = load <2 x i64>, <2 x i64>* %713, align 8, !alias.scope !41
  %715 = getelementptr %"class.v8::internal::compiler::TopLevelLiveRange"*, %"class.v8::internal::compiler::TopLevelLiveRange"** %712, i64 2
  %716 = bitcast %"class.v8::internal::compiler::TopLevelLiveRange"** %715 to <2 x i64>*
  %717 = load <2 x i64>, <2 x i64>* %716, align 8, !alias.scope !41
  %718 = bitcast %"class.v8::internal::compiler::TopLevelLiveRange"** %711 to <2 x i64>*
  store <2 x i64> %714, <2 x i64>* %718, align 8, !alias.scope !44, !noalias !41
  %719 = getelementptr %"class.v8::internal::compiler::TopLevelLiveRange"*, %"class.v8::internal::compiler::TopLevelLiveRange"** %711, i64 2
  %720 = bitcast %"class.v8::internal::compiler::TopLevelLiveRange"** %719 to <2 x i64>*
  store <2 x i64> %717, <2 x i64>* %720, align 8, !alias.scope !44, !noalias !41
  %721 = or i64 %698, 8
  %722 = getelementptr %"class.v8::internal::compiler::TopLevelLiveRange"*, %"class.v8::internal::compiler::TopLevelLiveRange"** %409, i64 %721
  %723 = getelementptr %"class.v8::internal::compiler::TopLevelLiveRange"*, %"class.v8::internal::compiler::TopLevelLiveRange"** %1, i64 %721
  %724 = bitcast %"class.v8::internal::compiler::TopLevelLiveRange"** %723 to <2 x i64>*
  %725 = load <2 x i64>, <2 x i64>* %724, align 8, !alias.scope !41
  %726 = getelementptr %"class.v8::internal::compiler::TopLevelLiveRange"*, %"class.v8::internal::compiler::TopLevelLiveRange"** %723, i64 2
  %727 = bitcast %"class.v8::internal::compiler::TopLevelLiveRange"** %726 to <2 x i64>*
  %728 = load <2 x i64>, <2 x i64>* %727, align 8, !alias.scope !41
  %729 = bitcast %"class.v8::internal::compiler::TopLevelLiveRange"** %722 to <2 x i64>*
  store <2 x i64> %725, <2 x i64>* %729, align 8, !alias.scope !44, !noalias !41
  %730 = getelementptr %"class.v8::internal::compiler::TopLevelLiveRange"*, %"class.v8::internal::compiler::TopLevelLiveRange"** %722, i64 2
  %731 = bitcast %"class.v8::internal::compiler::TopLevelLiveRange"** %730 to <2 x i64>*
  store <2 x i64> %728, <2 x i64>* %731, align 8, !alias.scope !44, !noalias !41
  %732 = or i64 %698, 12
  %733 = getelementptr %"class.v8::internal::compiler::TopLevelLiveRange"*, %"class.v8::internal::compiler::TopLevelLiveRange"** %409, i64 %732
  %734 = getelementptr %"class.v8::internal::compiler::TopLevelLiveRange"*, %"class.v8::internal::compiler::TopLevelLiveRange"** %1, i64 %732
  %735 = bitcast %"class.v8::internal::compiler::TopLevelLiveRange"** %734 to <2 x i64>*
  %736 = load <2 x i64>, <2 x i64>* %735, align 8, !alias.scope !41
  %737 = getelementptr %"class.v8::internal::compiler::TopLevelLiveRange"*, %"class.v8::internal::compiler::TopLevelLiveRange"** %734, i64 2
  %738 = bitcast %"class.v8::internal::compiler::TopLevelLiveRange"** %737 to <2 x i64>*
  %739 = load <2 x i64>, <2 x i64>* %738, align 8, !alias.scope !41
  %740 = bitcast %"class.v8::internal::compiler::TopLevelLiveRange"** %733 to <2 x i64>*
  store <2 x i64> %736, <2 x i64>* %740, align 8, !alias.scope !44, !noalias !41
  %741 = getelementptr %"class.v8::internal::compiler::TopLevelLiveRange"*, %"class.v8::internal::compiler::TopLevelLiveRange"** %733, i64 2
  %742 = bitcast %"class.v8::internal::compiler::TopLevelLiveRange"** %741 to <2 x i64>*
  store <2 x i64> %739, <2 x i64>* %742, align 8, !alias.scope !44, !noalias !41
  %743 = add i64 %698, 16
  %744 = add i64 %699, -4
  %745 = icmp eq i64 %744, 0
  br i1 %745, label %746, label %697, !llvm.loop !46

746:                                              ; preds = %697, %685
  %747 = phi i64 [ 0, %685 ], [ %743, %697 ]
  %748 = icmp eq i64 %693, 0
  br i1 %748, label %765, label %749

749:                                              ; preds = %746, %749
  %750 = phi i64 [ %762, %749 ], [ %747, %746 ]
  %751 = phi i64 [ %763, %749 ], [ %693, %746 ]
  %752 = getelementptr %"class.v8::internal::compiler::TopLevelLiveRange"*, %"class.v8::internal::compiler::TopLevelLiveRange"** %409, i64 %750
  %753 = getelementptr %"class.v8::internal::compiler::TopLevelLiveRange"*, %"class.v8::internal::compiler::TopLevelLiveRange"** %1, i64 %750
  %754 = bitcast %"class.v8::internal::compiler::TopLevelLiveRange"** %753 to <2 x i64>*
  %755 = load <2 x i64>, <2 x i64>* %754, align 8, !alias.scope !41
  %756 = getelementptr %"class.v8::internal::compiler::TopLevelLiveRange"*, %"class.v8::internal::compiler::TopLevelLiveRange"** %753, i64 2
  %757 = bitcast %"class.v8::internal::compiler::TopLevelLiveRange"** %756 to <2 x i64>*
  %758 = load <2 x i64>, <2 x i64>* %757, align 8, !alias.scope !41
  %759 = bitcast %"class.v8::internal::compiler::TopLevelLiveRange"** %752 to <2 x i64>*
  store <2 x i64> %755, <2 x i64>* %759, align 8, !alias.scope !44, !noalias !41
  %760 = getelementptr %"class.v8::internal::compiler::TopLevelLiveRange"*, %"class.v8::internal::compiler::TopLevelLiveRange"** %752, i64 2
  %761 = bitcast %"class.v8::internal::compiler::TopLevelLiveRange"** %760 to <2 x i64>*
  store <2 x i64> %758, <2 x i64>* %761, align 8, !alias.scope !44, !noalias !41
  %762 = add i64 %750, 4
  %763 = add i64 %751, -1
  %764 = icmp eq i64 %763, 0
  br i1 %764, label %765, label %749, !llvm.loop !47

765:                                              ; preds = %749, %746
  %766 = icmp eq i64 %669, %686
  br i1 %766, label %842, label %767

767:                                              ; preds = %765, %671, %664
  %768 = phi %"class.v8::internal::compiler::TopLevelLiveRange"** [ %409, %671 ], [ %409, %664 ], [ %687, %765 ]
  %769 = phi %"class.v8::internal::compiler::TopLevelLiveRange"** [ %409, %671 ], [ %409, %664 ], [ %688, %765 ]
  %770 = phi %"class.v8::internal::compiler::TopLevelLiveRange"** [ %1, %671 ], [ %1, %664 ], [ %689, %765 ]
  %771 = ptrtoint %"class.v8::internal::compiler::TopLevelLiveRange"** %770 to i64
  %772 = getelementptr %"class.v8::internal::compiler::TopLevelLiveRange"*, %"class.v8::internal::compiler::TopLevelLiveRange"** %660, i64 -1
  %773 = ptrtoint %"class.v8::internal::compiler::TopLevelLiveRange"** %772 to i64
  %774 = sub i64 %773, %771
  %775 = lshr i64 %774, 3
  %776 = add nuw nsw i64 %775, 1
  %777 = and i64 %776, 7
  %778 = icmp eq i64 %777, 0
  br i1 %778, label %791, label %779

779:                                              ; preds = %767, %779
  %780 = phi %"class.v8::internal::compiler::TopLevelLiveRange"** [ %788, %779 ], [ %768, %767 ]
  %781 = phi %"class.v8::internal::compiler::TopLevelLiveRange"** [ %788, %779 ], [ %769, %767 ]
  %782 = phi %"class.v8::internal::compiler::TopLevelLiveRange"** [ %787, %779 ], [ %770, %767 ]
  %783 = phi i64 [ %789, %779 ], [ %777, %767 ]
  %784 = bitcast %"class.v8::internal::compiler::TopLevelLiveRange"** %781 to i64*
  %785 = bitcast %"class.v8::internal::compiler::TopLevelLiveRange"** %782 to i64*
  %786 = load i64, i64* %785, align 8
  store i64 %786, i64* %784, align 8
  %787 = getelementptr inbounds %"class.v8::internal::compiler::TopLevelLiveRange"*, %"class.v8::internal::compiler::TopLevelLiveRange"** %782, i64 1
  %788 = getelementptr inbounds %"class.v8::internal::compiler::TopLevelLiveRange"*, %"class.v8::internal::compiler::TopLevelLiveRange"** %780, i64 1
  %789 = add i64 %783, -1
  %790 = icmp eq i64 %789, 0
  br i1 %790, label %791, label %779, !llvm.loop !48

791:                                              ; preds = %779, %767
  %792 = phi %"class.v8::internal::compiler::TopLevelLiveRange"** [ undef, %767 ], [ %788, %779 ]
  %793 = phi %"class.v8::internal::compiler::TopLevelLiveRange"** [ %768, %767 ], [ %788, %779 ]
  %794 = phi %"class.v8::internal::compiler::TopLevelLiveRange"** [ %769, %767 ], [ %788, %779 ]
  %795 = phi %"class.v8::internal::compiler::TopLevelLiveRange"** [ %770, %767 ], [ %787, %779 ]
  %796 = icmp ult i64 %774, 56
  br i1 %796, label %842, label %797

797:                                              ; preds = %791, %797
  %798 = phi %"class.v8::internal::compiler::TopLevelLiveRange"** [ %840, %797 ], [ %793, %791 ]
  %799 = phi %"class.v8::internal::compiler::TopLevelLiveRange"** [ %840, %797 ], [ %794, %791 ]
  %800 = phi %"class.v8::internal::compiler::TopLevelLiveRange"** [ %839, %797 ], [ %795, %791 ]
  %801 = bitcast %"class.v8::internal::compiler::TopLevelLiveRange"** %799 to i64*
  %802 = bitcast %"class.v8::internal::compiler::TopLevelLiveRange"** %800 to i64*
  %803 = load i64, i64* %802, align 8
  store i64 %803, i64* %801, align 8
  %804 = getelementptr inbounds %"class.v8::internal::compiler::TopLevelLiveRange"*, %"class.v8::internal::compiler::TopLevelLiveRange"** %800, i64 1
  %805 = getelementptr inbounds %"class.v8::internal::compiler::TopLevelLiveRange"*, %"class.v8::internal::compiler::TopLevelLiveRange"** %798, i64 1
  %806 = bitcast %"class.v8::internal::compiler::TopLevelLiveRange"** %805 to i64*
  %807 = bitcast %"class.v8::internal::compiler::TopLevelLiveRange"** %804 to i64*
  %808 = load i64, i64* %807, align 8
  store i64 %808, i64* %806, align 8
  %809 = getelementptr inbounds %"class.v8::internal::compiler::TopLevelLiveRange"*, %"class.v8::internal::compiler::TopLevelLiveRange"** %800, i64 2
  %810 = getelementptr inbounds %"class.v8::internal::compiler::TopLevelLiveRange"*, %"class.v8::internal::compiler::TopLevelLiveRange"** %798, i64 2
  %811 = bitcast %"class.v8::internal::compiler::TopLevelLiveRange"** %810 to i64*
  %812 = bitcast %"class.v8::internal::compiler::TopLevelLiveRange"** %809 to i64*
  %813 = load i64, i64* %812, align 8
  store i64 %813, i64* %811, align 8
  %814 = getelementptr inbounds %"class.v8::internal::compiler::TopLevelLiveRange"*, %"class.v8::internal::compiler::TopLevelLiveRange"** %800, i64 3
  %815 = getelementptr inbounds %"class.v8::internal::compiler::TopLevelLiveRange"*, %"class.v8::internal::compiler::TopLevelLiveRange"** %798, i64 3
  %816 = bitcast %"class.v8::internal::compiler::TopLevelLiveRange"** %815 to i64*
  %817 = bitcast %"class.v8::internal::compiler::TopLevelLiveRange"** %814 to i64*
  %818 = load i64, i64* %817, align 8
  store i64 %818, i64* %816, align 8
  %819 = getelementptr inbounds %"class.v8::internal::compiler::TopLevelLiveRange"*, %"class.v8::internal::compiler::TopLevelLiveRange"** %800, i64 4
  %820 = getelementptr inbounds %"class.v8::internal::compiler::TopLevelLiveRange"*, %"class.v8::internal::compiler::TopLevelLiveRange"** %798, i64 4
  %821 = bitcast %"class.v8::internal::compiler::TopLevelLiveRange"** %820 to i64*
  %822 = bitcast %"class.v8::internal::compiler::TopLevelLiveRange"** %819 to i64*
  %823 = load i64, i64* %822, align 8
  store i64 %823, i64* %821, align 8
  %824 = getelementptr inbounds %"class.v8::internal::compiler::TopLevelLiveRange"*, %"class.v8::internal::compiler::TopLevelLiveRange"** %800, i64 5
  %825 = getelementptr inbounds %"class.v8::internal::compiler::TopLevelLiveRange"*, %"class.v8::internal::compiler::TopLevelLiveRange"** %798, i64 5
  %826 = bitcast %"class.v8::internal::compiler::TopLevelLiveRange"** %825 to i64*
  %827 = bitcast %"class.v8::internal::compiler::TopLevelLiveRange"** %824 to i64*
  %828 = load i64, i64* %827, align 8
  store i64 %828, i64* %826, align 8
  %829 = getelementptr inbounds %"class.v8::internal::compiler::TopLevelLiveRange"*, %"class.v8::internal::compiler::TopLevelLiveRange"** %800, i64 6
  %830 = getelementptr inbounds %"class.v8::internal::compiler::TopLevelLiveRange"*, %"class.v8::internal::compiler::TopLevelLiveRange"** %798, i64 6
  %831 = bitcast %"class.v8::internal::compiler::TopLevelLiveRange"** %830 to i64*
  %832 = bitcast %"class.v8::internal::compiler::TopLevelLiveRange"** %829 to i64*
  %833 = load i64, i64* %832, align 8
  store i64 %833, i64* %831, align 8
  %834 = getelementptr inbounds %"class.v8::internal::compiler::TopLevelLiveRange"*, %"class.v8::internal::compiler::TopLevelLiveRange"** %800, i64 7
  %835 = getelementptr inbounds %"class.v8::internal::compiler::TopLevelLiveRange"*, %"class.v8::internal::compiler::TopLevelLiveRange"** %798, i64 7
  %836 = bitcast %"class.v8::internal::compiler::TopLevelLiveRange"** %835 to i64*
  %837 = bitcast %"class.v8::internal::compiler::TopLevelLiveRange"** %834 to i64*
  %838 = load i64, i64* %837, align 8
  store i64 %838, i64* %836, align 8
  %839 = getelementptr inbounds %"class.v8::internal::compiler::TopLevelLiveRange"*, %"class.v8::internal::compiler::TopLevelLiveRange"** %800, i64 8
  %840 = getelementptr inbounds %"class.v8::internal::compiler::TopLevelLiveRange"*, %"class.v8::internal::compiler::TopLevelLiveRange"** %798, i64 8
  %841 = icmp eq %"class.v8::internal::compiler::TopLevelLiveRange"** %839, %660
  br i1 %841, label %842, label %797, !llvm.loop !49

842:                                              ; preds = %791, %797, %765, %662
  %843 = phi %"class.v8::internal::compiler::TopLevelLiveRange"** [ %409, %662 ], [ %687, %765 ], [ %792, %791 ], [ %840, %797 ]
  %844 = phi i64 [ %663, %662 ], [ %658, %765 ], [ %658, %797 ], [ %658, %791 ]
  %845 = ptrtoint %"class.v8::internal::compiler::TopLevelLiveRange"** %843 to i64
  store i64 %844, i64* %360, align 8
  store i64 %845, i64* %23, align 8
  store i64 %408, i64* %15, align 8
  ret %"class.v8::internal::compiler::TopLevelLiveRange"** %405

846:                                              ; preds = %208, %353, %357, %4
  ret %"class.v8::internal::compiler::TopLevelLiveRange"** %1
}

; Function Attrs: nounwind ssp uwtable
define hidden void @_ZNK2v88internal8compiler10SpillRange5PrintEv(%"class.v8::internal::compiler::SpillRange"* nocapture readonly) local_unnamed_addr #0 align 2 {
  %2 = alloca %"class.std::__1::locale", align 8
  %3 = alloca i8, align 1
  %4 = alloca i8, align 1
  %5 = alloca %"class.std::__1::locale", align 8
  %6 = alloca %"class.std::__1::locale", align 8
  %7 = alloca %"class.std::__1::locale", align 8
  %8 = alloca %"class.v8::internal::StdoutStream", align 8
  %9 = bitcast %"class.v8::internal::StdoutStream"* %8 to i8*
  call void @llvm.lifetime.start.p0i8(i64 240, i8* nonnull %9) #16
  %10 = getelementptr inbounds %"class.v8::internal::StdoutStream", %"class.v8::internal::StdoutStream"* %8, i64 0, i32 2, i32 0, i32 0
  store i32 (...)** bitcast (i8** getelementptr inbounds ({ [4 x i8*] }, { [4 x i8*] }* @_ZTVNSt3__19basic_iosIcNS_11char_traitsIcEEEE, i64 0, inrange i32 0, i64 2) to i32 (...)**), i32 (...)*** %10, align 8
  %11 = bitcast %"class.v8::internal::StdoutStream"* %8 to %"class.v8::internal::OFStream"*
  %12 = load %struct._IO_FILE*, %struct._IO_FILE** @stdout, align 8
  call void @_ZN2v88internal8OFStreamC2EP8_IO_FILE(%"class.v8::internal::OFStream"* nonnull %11, i8** getelementptr inbounds ([6 x i8*], [6 x i8*]* @_ZTTN2v88internal12StdoutStreamE, i64 0, i64 1), %struct._IO_FILE* %12) #16
  %13 = getelementptr inbounds %"class.v8::internal::StdoutStream", %"class.v8::internal::StdoutStream"* %8, i64 0, i32 0, i32 0, i32 0
  store i32 (...)** bitcast (i8** getelementptr inbounds ({ [5 x i8*], [5 x i8*] }, { [5 x i8*], [5 x i8*] }* @_ZTVN2v88internal12StdoutStreamE, i64 0, inrange i32 0, i64 3) to i32 (...)**), i32 (...)*** %13, align 8
  store i32 (...)** bitcast (i8** getelementptr inbounds ({ [5 x i8*], [5 x i8*] }, { [5 x i8*], [5 x i8*] }* @_ZTVN2v88internal12StdoutStreamE, i64 0, inrange i32 1, i64 3) to i32 (...)**), i32 (...)*** %10, align 8
  %14 = call %"class.v8::base::RecursiveMutex"* @_ZN2v88internal12StdoutStream14GetStdoutMutexEv() #16
  %15 = getelementptr inbounds %"class.v8::internal::StdoutStream", %"class.v8::internal::StdoutStream"* %8, i64 0, i32 1, i32 0
  store %"class.v8::base::RecursiveMutex"* %14, %"class.v8::base::RecursiveMutex"** %15, align 8
  call void @_ZN2v84base14RecursiveMutex4LockEv(%"class.v8::base::RecursiveMutex"* %14) #16
  %16 = bitcast %"class.v8::internal::StdoutStream"* %8 to %"class.std::__1::basic_ostream"*
  %17 = call dereferenceable(160) %"class.std::__1::basic_ostream"* @_ZNSt3__124__put_character_sequenceIcNS_11char_traitsIcEEEERNS_13basic_ostreamIT_T0_EES7_PKS4_m(%"class.std::__1::basic_ostream"* nonnull dereferenceable(160) %16, i8* getelementptr inbounds ([2 x i8], [2 x i8]* @.str.14, i64 0, i64 0), i64 1) #16
  %18 = bitcast %"class.std::__1::basic_ostream"* %17 to i8**
  %19 = load i8*, i8** %18, align 8
  %20 = getelementptr i8, i8* %19, i64 -24
  %21 = bitcast i8* %20 to i64*
  %22 = load i64, i64* %21, align 8
  %23 = bitcast %"class.std::__1::basic_ostream"* %17 to i8*
  %24 = getelementptr inbounds i8, i8* %23, i64 %22
  %25 = bitcast %"class.std::__1::locale"* %7 to i8*
  call void @llvm.lifetime.start.p0i8(i64 8, i8* nonnull %25) #16
  %26 = bitcast i8* %24 to %"class.std::__1::ios_base"*
  call void @_ZNKSt3__18ios_base6getlocEv(%"class.std::__1::locale"* nonnull sret %7, %"class.std::__1::ios_base"* %26) #16
  %27 = call %"class.std::__1::locale::facet"* @_ZNKSt3__16locale9use_facetERNS0_2idE(%"class.std::__1::locale"* nonnull %7, %"class.std::__1::locale::id"* nonnull dereferenceable(16) @_ZNSt3__15ctypeIcE2idE) #16
  %28 = bitcast %"class.std::__1::locale::facet"* %27 to %"class.std::__1::ctype"*
  %29 = bitcast %"class.std::__1::locale::facet"* %27 to i8 (%"class.std::__1::ctype"*, i8)***
  %30 = load i8 (%"class.std::__1::ctype"*, i8)**, i8 (%"class.std::__1::ctype"*, i8)*** %29, align 8
  %31 = getelementptr inbounds i8 (%"class.std::__1::ctype"*, i8)*, i8 (%"class.std::__1::ctype"*, i8)** %30, i64 7
  %32 = load i8 (%"class.std::__1::ctype"*, i8)*, i8 (%"class.std::__1::ctype"*, i8)** %31, align 8
  %33 = call signext i8 %32(%"class.std::__1::ctype"* %28, i8 signext 10) #16
  call void @_ZNSt3__16localeD1Ev(%"class.std::__1::locale"* nonnull %7) #16
  call void @llvm.lifetime.end.p0i8(i64 8, i8* nonnull %25) #16
  %34 = call dereferenceable(160) %"class.std::__1::basic_ostream"* @_ZNSt3__113basic_ostreamIcNS_11char_traitsIcEEE3putEc(%"class.std::__1::basic_ostream"* %17, i8 signext %33) #16
  %35 = call dereferenceable(160) %"class.std::__1::basic_ostream"* @_ZNSt3__113basic_ostreamIcNS_11char_traitsIcEEE5flushEv(%"class.std::__1::basic_ostream"* %17) #16
  %36 = getelementptr inbounds %"class.v8::internal::compiler::SpillRange", %"class.v8::internal::compiler::SpillRange"* %0, i64 0, i32 0, i32 0, i32 0, i32 0
  %37 = load %"class.v8::internal::compiler::TopLevelLiveRange"**, %"class.v8::internal::compiler::TopLevelLiveRange"*** %36, align 8
  %38 = getelementptr inbounds %"class.v8::internal::compiler::SpillRange", %"class.v8::internal::compiler::SpillRange"* %0, i64 0, i32 0, i32 0, i32 0, i32 1
  %39 = load %"class.v8::internal::compiler::TopLevelLiveRange"**, %"class.v8::internal::compiler::TopLevelLiveRange"*** %38, align 8
  %40 = icmp eq %"class.v8::internal::compiler::TopLevelLiveRange"** %37, %39
  br i1 %40, label %41, label %64

41:                                               ; preds = %64, %1
  %42 = bitcast %"class.v8::internal::StdoutStream"* %8 to i8**
  %43 = load i8*, i8** %42, align 8
  %44 = getelementptr i8, i8* %43, i64 -24
  %45 = bitcast i8* %44 to i64*
  %46 = load i64, i64* %45, align 8
  %47 = getelementptr inbounds i8, i8* %9, i64 %46
  %48 = bitcast %"class.std::__1::locale"* %6 to i8*
  call void @llvm.lifetime.start.p0i8(i64 8, i8* nonnull %48) #16
  %49 = bitcast i8* %47 to %"class.std::__1::ios_base"*
  call void @_ZNKSt3__18ios_base6getlocEv(%"class.std::__1::locale"* nonnull sret %6, %"class.std::__1::ios_base"* %49) #16
  %50 = call %"class.std::__1::locale::facet"* @_ZNKSt3__16locale9use_facetERNS0_2idE(%"class.std::__1::locale"* nonnull %6, %"class.std::__1::locale::id"* nonnull dereferenceable(16) @_ZNSt3__15ctypeIcE2idE) #16
  %51 = bitcast %"class.std::__1::locale::facet"* %50 to %"class.std::__1::ctype"*
  %52 = bitcast %"class.std::__1::locale::facet"* %50 to i8 (%"class.std::__1::ctype"*, i8)***
  %53 = load i8 (%"class.std::__1::ctype"*, i8)**, i8 (%"class.std::__1::ctype"*, i8)*** %52, align 8
  %54 = getelementptr inbounds i8 (%"class.std::__1::ctype"*, i8)*, i8 (%"class.std::__1::ctype"*, i8)** %53, i64 7
  %55 = load i8 (%"class.std::__1::ctype"*, i8)*, i8 (%"class.std::__1::ctype"*, i8)** %54, align 8
  %56 = call signext i8 %55(%"class.std::__1::ctype"* %51, i8 signext 10) #16
  call void @_ZNSt3__16localeD1Ev(%"class.std::__1::locale"* nonnull %6) #16
  call void @llvm.lifetime.end.p0i8(i64 8, i8* nonnull %48) #16
  %57 = call dereferenceable(160) %"class.std::__1::basic_ostream"* @_ZNSt3__113basic_ostreamIcNS_11char_traitsIcEEE3putEc(%"class.std::__1::basic_ostream"* nonnull %16, i8 signext %56) #16
  %58 = call dereferenceable(160) %"class.std::__1::basic_ostream"* @_ZNSt3__113basic_ostreamIcNS_11char_traitsIcEEE5flushEv(%"class.std::__1::basic_ostream"* nonnull %16) #16
  %59 = getelementptr inbounds %"class.v8::internal::compiler::SpillRange", %"class.v8::internal::compiler::SpillRange"* %0, i64 0, i32 1
  %60 = load %"class.v8::internal::compiler::UseInterval"*, %"class.v8::internal::compiler::UseInterval"** %59, align 8
  %61 = icmp eq %"class.v8::internal::compiler::UseInterval"* %60, null
  br i1 %61, label %73, label %62

62:                                               ; preds = %41
  %63 = bitcast %"class.std::__1::locale"* %2 to i8*
  br label %99

64:                                               ; preds = %1, %64
  %65 = phi %"class.v8::internal::compiler::TopLevelLiveRange"** [ %71, %64 ], [ %37, %1 ]
  %66 = load %"class.v8::internal::compiler::TopLevelLiveRange"*, %"class.v8::internal::compiler::TopLevelLiveRange"** %65, align 8
  %67 = getelementptr inbounds %"class.v8::internal::compiler::TopLevelLiveRange", %"class.v8::internal::compiler::TopLevelLiveRange"* %66, i64 0, i32 1
  %68 = load i32, i32* %67, align 4
  %69 = call dereferenceable(160) %"class.std::__1::basic_ostream"* @_ZNSt3__113basic_ostreamIcNS_11char_traitsIcEEElsEi(%"class.std::__1::basic_ostream"* nonnull %16, i32 %68) #16
  %70 = call dereferenceable(160) %"class.std::__1::basic_ostream"* @_ZNSt3__124__put_character_sequenceIcNS_11char_traitsIcEEEERNS_13basic_ostreamIT_T0_EES7_PKS4_m(%"class.std::__1::basic_ostream"* dereferenceable(160) %69, i8* getelementptr inbounds ([2 x i8], [2 x i8]* @.str.11, i64 0, i64 0), i64 1) #16
  %71 = getelementptr inbounds %"class.v8::internal::compiler::TopLevelLiveRange"*, %"class.v8::internal::compiler::TopLevelLiveRange"** %65, i64 1
  %72 = icmp eq %"class.v8::internal::compiler::TopLevelLiveRange"** %71, %39
  br i1 %72, label %41, label %64

73:                                               ; preds = %99, %41
  %74 = call dereferenceable(160) %"class.std::__1::basic_ostream"* @_ZNSt3__124__put_character_sequenceIcNS_11char_traitsIcEEEERNS_13basic_ostreamIT_T0_EES7_PKS4_m(%"class.std::__1::basic_ostream"* nonnull dereferenceable(160) %16, i8* getelementptr inbounds ([2 x i8], [2 x i8]* @.str.16, i64 0, i64 0), i64 1) #16
  %75 = bitcast %"class.std::__1::basic_ostream"* %74 to i8**
  %76 = load i8*, i8** %75, align 8
  %77 = getelementptr i8, i8* %76, i64 -24
  %78 = bitcast i8* %77 to i64*
  %79 = load i64, i64* %78, align 8
  %80 = bitcast %"class.std::__1::basic_ostream"* %74 to i8*
  %81 = getelementptr inbounds i8, i8* %80, i64 %79
  %82 = bitcast %"class.std::__1::locale"* %5 to i8*
  call void @llvm.lifetime.start.p0i8(i64 8, i8* nonnull %82) #16
  %83 = bitcast i8* %81 to %"class.std::__1::ios_base"*
  call void @_ZNKSt3__18ios_base6getlocEv(%"class.std::__1::locale"* nonnull sret %5, %"class.std::__1::ios_base"* %83) #16
  %84 = call %"class.std::__1::locale::facet"* @_ZNKSt3__16locale9use_facetERNS0_2idE(%"class.std::__1::locale"* nonnull %5, %"class.std::__1::locale::id"* nonnull dereferenceable(16) @_ZNSt3__15ctypeIcE2idE) #16
  %85 = bitcast %"class.std::__1::locale::facet"* %84 to %"class.std::__1::ctype"*
  %86 = bitcast %"class.std::__1::locale::facet"* %84 to i8 (%"class.std::__1::ctype"*, i8)***
  %87 = load i8 (%"class.std::__1::ctype"*, i8)**, i8 (%"class.std::__1::ctype"*, i8)*** %86, align 8
  %88 = getelementptr inbounds i8 (%"class.std::__1::ctype"*, i8)*, i8 (%"class.std::__1::ctype"*, i8)** %87, i64 7
  %89 = load i8 (%"class.std::__1::ctype"*, i8)*, i8 (%"class.std::__1::ctype"*, i8)** %88, align 8
  %90 = call signext i8 %89(%"class.std::__1::ctype"* %85, i8 signext 10) #16
  call void @_ZNSt3__16localeD1Ev(%"class.std::__1::locale"* nonnull %5) #16
  call void @llvm.lifetime.end.p0i8(i64 8, i8* nonnull %82) #16
  %91 = call dereferenceable(160) %"class.std::__1::basic_ostream"* @_ZNSt3__113basic_ostreamIcNS_11char_traitsIcEEE3putEc(%"class.std::__1::basic_ostream"* %74, i8 signext %90) #16
  %92 = call dereferenceable(160) %"class.std::__1::basic_ostream"* @_ZNSt3__113basic_ostreamIcNS_11char_traitsIcEEE5flushEv(%"class.std::__1::basic_ostream"* %74) #16
  %93 = bitcast %"class.v8::internal::StdoutStream"* %8 to i64*
  store i64 ptrtoint (i8** getelementptr inbounds ({ [5 x i8*], [5 x i8*] }, { [5 x i8*], [5 x i8*] }* @_ZTVN2v88internal12StdoutStreamE, i64 0, inrange i32 0, i64 3) to i64), i64* %93, align 8
  %94 = getelementptr inbounds %"class.v8::internal::StdoutStream", %"class.v8::internal::StdoutStream"* %8, i64 0, i32 2
  %95 = bitcast %"class.std::__1::basic_ios.base"* %94 to i64*
  store i64 ptrtoint (i8** getelementptr inbounds ({ [5 x i8*], [5 x i8*] }, { [5 x i8*], [5 x i8*] }* @_ZTVN2v88internal12StdoutStreamE, i64 0, inrange i32 1, i64 3) to i64), i64* %95, align 8
  %96 = load %"class.v8::base::RecursiveMutex"*, %"class.v8::base::RecursiveMutex"** %15, align 8
  call void @_ZN2v84base14RecursiveMutex6UnlockEv(%"class.v8::base::RecursiveMutex"* %96) #16
  store i64 ptrtoint (i8** getelementptr inbounds ({ [5 x i8*], [5 x i8*] }, { [5 x i8*], [5 x i8*] }* @_ZTCN2v88internal12StdoutStreamE0_NS0_8OFStreamE, i64 0, inrange i32 0, i64 3) to i64), i64* %93, align 8
  store i64 ptrtoint (i8** getelementptr inbounds ({ [5 x i8*], [5 x i8*] }, { [5 x i8*], [5 x i8*] }* @_ZTCN2v88internal12StdoutStreamE0_NS0_8OFStreamE, i64 0, inrange i32 1, i64 3) to i64), i64* %95, align 8
  %97 = getelementptr inbounds %"class.v8::internal::StdoutStream", %"class.v8::internal::StdoutStream"* %8, i64 0, i32 0, i32 1, i32 0
  call void @_ZNSt3__115basic_streambufIcNS_11char_traitsIcEEED2Ev(%"class.std::__1::basic_streambuf"* %97) #16
  call void @_ZNSt3__113basic_ostreamIcNS_11char_traitsIcEEED2Ev(%"class.std::__1::basic_ostream"* nonnull %16, i8** getelementptr inbounds ([6 x i8*], [6 x i8*]* @_ZTTN2v88internal12StdoutStreamE, i64 0, i64 2)) #16
  %98 = bitcast %"class.std::__1::basic_ios.base"* %94 to %"class.std::__1::basic_ios"*
  call void @_ZNSt3__19basic_iosIcNS_11char_traitsIcEEED2Ev(%"class.std::__1::basic_ios"* %98) #16
  call void @llvm.lifetime.end.p0i8(i64 240, i8* nonnull %9) #16
  ret void

99:                                               ; preds = %62, %99
  %100 = phi %"class.v8::internal::compiler::UseInterval"* [ %60, %62 ], [ %128, %99 ]
  call void @llvm.lifetime.start.p0i8(i64 1, i8* nonnull %4)
  store i8 91, i8* %4, align 1
  %101 = call dereferenceable(160) %"class.std::__1::basic_ostream"* @_ZNSt3__124__put_character_sequenceIcNS_11char_traitsIcEEEERNS_13basic_ostreamIT_T0_EES7_PKS4_m(%"class.std::__1::basic_ostream"* nonnull dereferenceable(160) %16, i8* nonnull %4, i64 1) #16
  call void @llvm.lifetime.end.p0i8(i64 1, i8* nonnull %4)
  %102 = getelementptr inbounds %"class.v8::internal::compiler::UseInterval", %"class.v8::internal::compiler::UseInterval"* %100, i64 0, i32 0, i32 0
  %103 = load i32, i32* %102, align 8
  %104 = call dereferenceable(160) %"class.std::__1::basic_ostream"* @_ZN2v88internal8compilerlsERNSt3__113basic_ostreamIcNS2_11char_traitsIcEEEENS1_16LifetimePositionE(%"class.std::__1::basic_ostream"* dereferenceable(160) %101, i32 %103)
  %105 = call dereferenceable(160) %"class.std::__1::basic_ostream"* @_ZNSt3__124__put_character_sequenceIcNS_11char_traitsIcEEEERNS_13basic_ostreamIT_T0_EES7_PKS4_m(%"class.std::__1::basic_ostream"* dereferenceable(160) %104, i8* getelementptr inbounds ([3 x i8], [3 x i8]* @.str.15, i64 0, i64 0), i64 2) #16
  %106 = getelementptr inbounds %"class.v8::internal::compiler::UseInterval", %"class.v8::internal::compiler::UseInterval"* %100, i64 0, i32 1, i32 0
  %107 = load i32, i32* %106, align 4
  %108 = call dereferenceable(160) %"class.std::__1::basic_ostream"* @_ZN2v88internal8compilerlsERNSt3__113basic_ostreamIcNS2_11char_traitsIcEEEENS1_16LifetimePositionE(%"class.std::__1::basic_ostream"* dereferenceable(160) %105, i32 %107)
  call void @llvm.lifetime.start.p0i8(i64 1, i8* nonnull %3)
  store i8 41, i8* %3, align 1
  %109 = call dereferenceable(160) %"class.std::__1::basic_ostream"* @_ZNSt3__124__put_character_sequenceIcNS_11char_traitsIcEEEERNS_13basic_ostreamIT_T0_EES7_PKS4_m(%"class.std::__1::basic_ostream"* dereferenceable(160) %108, i8* nonnull %3, i64 1) #16
  call void @llvm.lifetime.end.p0i8(i64 1, i8* nonnull %3)
  %110 = bitcast %"class.std::__1::basic_ostream"* %109 to i8**
  %111 = load i8*, i8** %110, align 8
  %112 = getelementptr i8, i8* %111, i64 -24
  %113 = bitcast i8* %112 to i64*
  %114 = load i64, i64* %113, align 8
  %115 = bitcast %"class.std::__1::basic_ostream"* %109 to i8*
  %116 = getelementptr inbounds i8, i8* %115, i64 %114
  call void @llvm.lifetime.start.p0i8(i64 8, i8* nonnull %63) #16
  %117 = bitcast i8* %116 to %"class.std::__1::ios_base"*
  call void @_ZNKSt3__18ios_base6getlocEv(%"class.std::__1::locale"* nonnull sret %2, %"class.std::__1::ios_base"* %117) #16
  %118 = call %"class.std::__1::locale::facet"* @_ZNKSt3__16locale9use_facetERNS0_2idE(%"class.std::__1::locale"* nonnull %2, %"class.std::__1::locale::id"* nonnull dereferenceable(16) @_ZNSt3__15ctypeIcE2idE) #16
  %119 = bitcast %"class.std::__1::locale::facet"* %118 to %"class.std::__1::ctype"*
  %120 = bitcast %"class.std::__1::locale::facet"* %118 to i8 (%"class.std::__1::ctype"*, i8)***
  %121 = load i8 (%"class.std::__1::ctype"*, i8)**, i8 (%"class.std::__1::ctype"*, i8)*** %120, align 8
  %122 = getelementptr inbounds i8 (%"class.std::__1::ctype"*, i8)*, i8 (%"class.std::__1::ctype"*, i8)** %121, i64 7
  %123 = load i8 (%"class.std::__1::ctype"*, i8)*, i8 (%"class.std::__1::ctype"*, i8)** %122, align 8
  %124 = call signext i8 %123(%"class.std::__1::ctype"* %119, i8 signext 10) #16
  call void @_ZNSt3__16localeD1Ev(%"class.std::__1::locale"* nonnull %2) #16
  call void @llvm.lifetime.end.p0i8(i64 8, i8* nonnull %63) #16
  %125 = call dereferenceable(160) %"class.std::__1::basic_ostream"* @_ZNSt3__113basic_ostreamIcNS_11char_traitsIcEEE3putEc(%"class.std::__1::basic_ostream"* %109, i8 signext %124) #16
  %126 = call dereferenceable(160) %"class.std::__1::basic_ostream"* @_ZNSt3__113basic_ostreamIcNS_11char_traitsIcEEE5flushEv(%"class.std::__1::basic_ostream"* %109) #16
  %127 = getelementptr inbounds %"class.v8::internal::compiler::UseInterval", %"class.v8::internal::compiler::UseInterval"* %100, i64 0, i32 2
  %128 = load %"class.v8::internal::compiler::UseInterval"*, %"class.v8::internal::compiler::UseInterval"** %127, align 8
  %129 = icmp eq %"class.v8::internal::compiler::UseInterval"* %128, null
  br i1 %129, label %73, label %99
}

; Function Attrs: nounwind ssp uwtable
define hidden void @_ZN2v88internal8compiler29TopTierRegisterAllocationData11PhiMapValueC2EPNS1_14PhiInstructionEPKNS1_16InstructionBlockEPNS0_4ZoneE(%"class.v8::internal::compiler::TopTierRegisterAllocationData::PhiMapValue"* nocapture, %"class.v8::internal::compiler::PhiInstruction"*, %"class.v8::internal::compiler::InstructionBlock"*, %"class.v8::internal::Zone"*) unnamed_addr #0 align 2 {
  %5 = getelementptr inbounds %"class.v8::internal::compiler::TopTierRegisterAllocationData::PhiMapValue", %"class.v8::internal::compiler::TopTierRegisterAllocationData::PhiMapValue"* %0, i64 0, i32 0
  store %"class.v8::internal::compiler::PhiInstruction"* %1, %"class.v8::internal::compiler::PhiInstruction"** %5, align 8
  %6 = getelementptr inbounds %"class.v8::internal::compiler::TopTierRegisterAllocationData::PhiMapValue", %"class.v8::internal::compiler::TopTierRegisterAllocationData::PhiMapValue"* %0, i64 0, i32 1
  store %"class.v8::internal::compiler::InstructionBlock"* %2, %"class.v8::internal::compiler::InstructionBlock"** %6, align 8
  %7 = getelementptr inbounds %"class.v8::internal::compiler::TopTierRegisterAllocationData::PhiMapValue", %"class.v8::internal::compiler::TopTierRegisterAllocationData::PhiMapValue"* %0, i64 0, i32 2
  %8 = ptrtoint %"class.v8::internal::Zone"* %3 to i64
  %9 = getelementptr inbounds %"class.v8::internal::compiler::TopTierRegisterAllocationData::PhiMapValue", %"class.v8::internal::compiler::TopTierRegisterAllocationData::PhiMapValue"* %0, i64 0, i32 2, i32 0, i32 0, i32 2, i32 1
  %10 = bitcast %"struct.std::__1::__compressed_pair_elem.1336"* %9 to i64*
  %11 = bitcast %"class.v8::internal::ZoneVector.1331"* %7 to i8*
  tail call void @llvm.memset.p0i8.i64(i8* align 8 %11, i8 0, i64 24, i1 false) #16
  store i64 %8, i64* %10, align 8
  %12 = getelementptr inbounds %"class.v8::internal::compiler::TopTierRegisterAllocationData::PhiMapValue", %"class.v8::internal::compiler::TopTierRegisterAllocationData::PhiMapValue"* %0, i64 0, i32 3
  store i32 32, i32* %12, align 8
  %13 = getelementptr inbounds %"class.v8::internal::compiler::PhiInstruction", %"class.v8::internal::compiler::PhiInstruction"* %1, i64 0, i32 2, i32 0
  %14 = getelementptr inbounds %"class.v8::internal::compiler::PhiInstruction", %"class.v8::internal::compiler::PhiInstruction"* %1, i64 0, i32 2, i32 0, i32 0, i32 1
  %15 = bitcast i32** %14 to i64*
  %16 = load i64, i64* %15, align 8
  %17 = bitcast %"class.std::__1::vector.48"* %13 to i64*
  %18 = load i64, i64* %17, align 8
  %19 = sub i64 %16, %18
  %20 = ashr exact i64 %19, 2
  %21 = getelementptr inbounds %"class.v8::internal::compiler::TopTierRegisterAllocationData::PhiMapValue", %"class.v8::internal::compiler::TopTierRegisterAllocationData::PhiMapValue"* %0, i64 0, i32 2, i32 0, i32 0, i32 2, i32 0, i32 0
  %22 = bitcast %"class.v8::internal::compiler::InstructionOperand"*** %21 to i64*
  %23 = bitcast %"class.v8::internal::ZoneVector.1331"* %7 to i64*
  %24 = icmp eq i64 %19, 0
  br i1 %24, label %223, label %25

25:                                               ; preds = %4
  %26 = getelementptr inbounds %"class.v8::internal::compiler::TopTierRegisterAllocationData::PhiMapValue", %"class.v8::internal::compiler::TopTierRegisterAllocationData::PhiMapValue"* %0, i64 0, i32 2, i32 0, i32 0, i32 1
  %27 = bitcast %"class.v8::internal::compiler::InstructionOperand"*** %26 to i64*
  %28 = shl i64 %19, 1
  %29 = getelementptr inbounds %"class.v8::internal::Zone", %"class.v8::internal::Zone"* %3, i64 0, i32 2
  %30 = load i64, i64* %29, align 8
  %31 = getelementptr inbounds %"class.v8::internal::Zone", %"class.v8::internal::Zone"* %3, i64 0, i32 3
  %32 = load i64, i64* %31, align 8
  %33 = sub i64 %32, %30
  %34 = icmp ugt i64 %28, %33
  br i1 %34, label %35, label %37, !prof !2

35:                                               ; preds = %25
  %36 = tail call i64 @_ZN2v88internal4Zone9NewExpandEm(%"class.v8::internal::Zone"* %3, i64 %28) #16
  br label %39

37:                                               ; preds = %25
  %38 = add i64 %30, %28
  store i64 %38, i64* %29, align 8
  br label %39

39:                                               ; preds = %37, %35
  %40 = phi i64 [ %36, %35 ], [ %30, %37 ]
  %41 = inttoptr i64 %40 to %"class.v8::internal::compiler::InstructionOperand"**
  %42 = inttoptr i64 %40 to i8*
  %43 = getelementptr inbounds %"class.v8::internal::compiler::InstructionOperand"*, %"class.v8::internal::compiler::InstructionOperand"** %41, i64 %20
  %44 = ptrtoint %"class.v8::internal::compiler::InstructionOperand"** %43 to i64
  %45 = getelementptr inbounds %"class.v8::internal::ZoneVector.1331", %"class.v8::internal::ZoneVector.1331"* %7, i64 0, i32 0, i32 0, i32 0
  %46 = load %"class.v8::internal::compiler::InstructionOperand"**, %"class.v8::internal::compiler::InstructionOperand"*** %45, align 8
  %47 = ptrtoint %"class.v8::internal::compiler::InstructionOperand"** %46 to i64
  %48 = load %"class.v8::internal::compiler::InstructionOperand"**, %"class.v8::internal::compiler::InstructionOperand"*** %26, align 8
  %49 = icmp eq %"class.v8::internal::compiler::InstructionOperand"** %48, %46
  br i1 %49, label %221, label %50

50:                                               ; preds = %39
  %51 = getelementptr %"class.v8::internal::compiler::InstructionOperand"*, %"class.v8::internal::compiler::InstructionOperand"** %48, i64 -1
  %52 = ptrtoint %"class.v8::internal::compiler::InstructionOperand"** %51 to i64
  %53 = sub i64 %52, %47
  %54 = lshr i64 %53, 3
  %55 = add nuw nsw i64 %54, 1
  %56 = icmp ult i64 %55, 4
  br i1 %56, label %148, label %57

57:                                               ; preds = %50
  %58 = getelementptr %"class.v8::internal::compiler::InstructionOperand"*, %"class.v8::internal::compiler::InstructionOperand"** %48, i64 -1
  %59 = ptrtoint %"class.v8::internal::compiler::InstructionOperand"** %58 to i64
  %60 = sub i64 %59, %47
  %61 = lshr i64 %60, 3
  %62 = xor i64 %61, -1
  %63 = getelementptr %"class.v8::internal::compiler::InstructionOperand"*, %"class.v8::internal::compiler::InstructionOperand"** %41, i64 %62
  %64 = getelementptr %"class.v8::internal::compiler::InstructionOperand"*, %"class.v8::internal::compiler::InstructionOperand"** %48, i64 %62
  %65 = bitcast %"class.v8::internal::compiler::InstructionOperand"** %64 to i8*
  %66 = icmp ult %"class.v8::internal::compiler::InstructionOperand"** %63, %48
  %67 = icmp ult i8* %65, %42
  %68 = and i1 %66, %67
  br i1 %68, label %148, label %69

69:                                               ; preds = %57
  %70 = and i64 %55, 4611686018427387900
  %71 = sub nsw i64 0, %70
  %72 = getelementptr %"class.v8::internal::compiler::InstructionOperand"*, %"class.v8::internal::compiler::InstructionOperand"** %41, i64 %71
  %73 = sub nsw i64 0, %70
  %74 = getelementptr %"class.v8::internal::compiler::InstructionOperand"*, %"class.v8::internal::compiler::InstructionOperand"** %48, i64 %73
  %75 = add nsw i64 %70, -4
  %76 = lshr exact i64 %75, 2
  %77 = add nuw nsw i64 %76, 1
  %78 = and i64 %77, 1
  %79 = icmp eq i64 %75, 0
  br i1 %79, label %126, label %80

80:                                               ; preds = %69
  %81 = sub nuw nsw i64 %77, %78
  %82 = getelementptr %"class.v8::internal::compiler::InstructionOperand"*, %"class.v8::internal::compiler::InstructionOperand"** %41, i64 -1
  %83 = getelementptr %"class.v8::internal::compiler::InstructionOperand"*, %"class.v8::internal::compiler::InstructionOperand"** %48, i64 -1
  %84 = getelementptr %"class.v8::internal::compiler::InstructionOperand"*, %"class.v8::internal::compiler::InstructionOperand"** %41, i64 -1
  %85 = getelementptr %"class.v8::internal::compiler::InstructionOperand"*, %"class.v8::internal::compiler::InstructionOperand"** %48, i64 -1
  br label %86

86:                                               ; preds = %86, %80
  %87 = phi i64 [ 0, %80 ], [ %121, %86 ]
  %88 = phi i64 [ %81, %80 ], [ %122, %86 ]
  %89 = sub i64 0, %87
  %90 = sub i64 0, %87
  %91 = getelementptr inbounds %"class.v8::internal::compiler::InstructionOperand"*, %"class.v8::internal::compiler::InstructionOperand"** %82, i64 %89
  %92 = getelementptr inbounds %"class.v8::internal::compiler::InstructionOperand"*, %"class.v8::internal::compiler::InstructionOperand"** %83, i64 %90
  %93 = getelementptr inbounds %"class.v8::internal::compiler::InstructionOperand"*, %"class.v8::internal::compiler::InstructionOperand"** %92, i64 -1
  %94 = bitcast %"class.v8::internal::compiler::InstructionOperand"** %93 to <2 x i64>*
  %95 = load <2 x i64>, <2 x i64>* %94, align 8, !alias.scope !50
  %96 = getelementptr inbounds %"class.v8::internal::compiler::InstructionOperand"*, %"class.v8::internal::compiler::InstructionOperand"** %92, i64 -2
  %97 = getelementptr inbounds %"class.v8::internal::compiler::InstructionOperand"*, %"class.v8::internal::compiler::InstructionOperand"** %96, i64 -1
  %98 = bitcast %"class.v8::internal::compiler::InstructionOperand"** %97 to <2 x i64>*
  %99 = load <2 x i64>, <2 x i64>* %98, align 8, !alias.scope !50
  %100 = getelementptr inbounds %"class.v8::internal::compiler::InstructionOperand"*, %"class.v8::internal::compiler::InstructionOperand"** %91, i64 -1
  %101 = bitcast %"class.v8::internal::compiler::InstructionOperand"** %100 to <2 x i64>*
  store <2 x i64> %95, <2 x i64>* %101, align 8, !alias.scope !53, !noalias !50
  %102 = getelementptr inbounds %"class.v8::internal::compiler::InstructionOperand"*, %"class.v8::internal::compiler::InstructionOperand"** %91, i64 -2
  %103 = getelementptr inbounds %"class.v8::internal::compiler::InstructionOperand"*, %"class.v8::internal::compiler::InstructionOperand"** %102, i64 -1
  %104 = bitcast %"class.v8::internal::compiler::InstructionOperand"** %103 to <2 x i64>*
  store <2 x i64> %99, <2 x i64>* %104, align 8, !alias.scope !53, !noalias !50
  %105 = sub nuw nsw i64 -4, %87
  %106 = sub nuw nsw i64 -4, %87
  %107 = getelementptr inbounds %"class.v8::internal::compiler::InstructionOperand"*, %"class.v8::internal::compiler::InstructionOperand"** %84, i64 %105
  %108 = getelementptr inbounds %"class.v8::internal::compiler::InstructionOperand"*, %"class.v8::internal::compiler::InstructionOperand"** %85, i64 %106
  %109 = getelementptr inbounds %"class.v8::internal::compiler::InstructionOperand"*, %"class.v8::internal::compiler::InstructionOperand"** %108, i64 -1
  %110 = bitcast %"class.v8::internal::compiler::InstructionOperand"** %109 to <2 x i64>*
  %111 = load <2 x i64>, <2 x i64>* %110, align 8, !alias.scope !50
  %112 = getelementptr inbounds %"class.v8::internal::compiler::InstructionOperand"*, %"class.v8::internal::compiler::InstructionOperand"** %108, i64 -2
  %113 = getelementptr inbounds %"class.v8::internal::compiler::InstructionOperand"*, %"class.v8::internal::compiler::InstructionOperand"** %112, i64 -1
  %114 = bitcast %"class.v8::internal::compiler::InstructionOperand"** %113 to <2 x i64>*
  %115 = load <2 x i64>, <2 x i64>* %114, align 8, !alias.scope !50
  %116 = getelementptr inbounds %"class.v8::internal::compiler::InstructionOperand"*, %"class.v8::internal::compiler::InstructionOperand"** %107, i64 -1
  %117 = bitcast %"class.v8::internal::compiler::InstructionOperand"** %116 to <2 x i64>*
  store <2 x i64> %111, <2 x i64>* %117, align 8, !alias.scope !53, !noalias !50
  %118 = getelementptr inbounds %"class.v8::internal::compiler::InstructionOperand"*, %"class.v8::internal::compiler::InstructionOperand"** %107, i64 -2
  %119 = getelementptr inbounds %"class.v8::internal::compiler::InstructionOperand"*, %"class.v8::internal::compiler::InstructionOperand"** %118, i64 -1
  %120 = bitcast %"class.v8::internal::compiler::InstructionOperand"** %119 to <2 x i64>*
  store <2 x i64> %115, <2 x i64>* %120, align 8, !alias.scope !53, !noalias !50
  %121 = add i64 %87, 8
  %122 = add i64 %88, -2
  %123 = icmp eq i64 %122, 0
  br i1 %123, label %124, label %86, !llvm.loop !55

124:                                              ; preds = %86
  %125 = sub nuw nsw i64 -8, %87
  br label %126

126:                                              ; preds = %124, %69
  %127 = phi i64 [ 0, %69 ], [ %125, %124 ]
  %128 = icmp eq i64 %78, 0
  br i1 %128, label %146, label %129

129:                                              ; preds = %126
  %130 = getelementptr %"class.v8::internal::compiler::InstructionOperand"*, %"class.v8::internal::compiler::InstructionOperand"** %41, i64 -1
  %131 = getelementptr %"class.v8::internal::compiler::InstructionOperand"*, %"class.v8::internal::compiler::InstructionOperand"** %48, i64 -1
  %132 = getelementptr inbounds %"class.v8::internal::compiler::InstructionOperand"*, %"class.v8::internal::compiler::InstructionOperand"** %130, i64 %127
  %133 = getelementptr inbounds %"class.v8::internal::compiler::InstructionOperand"*, %"class.v8::internal::compiler::InstructionOperand"** %131, i64 %127
  %134 = getelementptr inbounds %"class.v8::internal::compiler::InstructionOperand"*, %"class.v8::internal::compiler::InstructionOperand"** %133, i64 -1
  %135 = bitcast %"class.v8::internal::compiler::InstructionOperand"** %134 to <2 x i64>*
  %136 = load <2 x i64>, <2 x i64>* %135, align 8, !alias.scope !50
  %137 = getelementptr inbounds %"class.v8::internal::compiler::InstructionOperand"*, %"class.v8::internal::compiler::InstructionOperand"** %133, i64 -2
  %138 = getelementptr inbounds %"class.v8::internal::compiler::InstructionOperand"*, %"class.v8::internal::compiler::InstructionOperand"** %137, i64 -1
  %139 = bitcast %"class.v8::internal::compiler::InstructionOperand"** %138 to <2 x i64>*
  %140 = load <2 x i64>, <2 x i64>* %139, align 8, !alias.scope !50
  %141 = getelementptr inbounds %"class.v8::internal::compiler::InstructionOperand"*, %"class.v8::internal::compiler::InstructionOperand"** %132, i64 -1
  %142 = bitcast %"class.v8::internal::compiler::InstructionOperand"** %141 to <2 x i64>*
  store <2 x i64> %136, <2 x i64>* %142, align 8, !alias.scope !53, !noalias !50
  %143 = getelementptr inbounds %"class.v8::internal::compiler::InstructionOperand"*, %"class.v8::internal::compiler::InstructionOperand"** %132, i64 -2
  %144 = getelementptr inbounds %"class.v8::internal::compiler::InstructionOperand"*, %"class.v8::internal::compiler::InstructionOperand"** %143, i64 -1
  %145 = bitcast %"class.v8::internal::compiler::InstructionOperand"** %144 to <2 x i64>*
  store <2 x i64> %140, <2 x i64>* %145, align 8, !alias.scope !53, !noalias !50
  br label %146

146:                                              ; preds = %126, %129
  %147 = icmp eq i64 %55, %70
  br i1 %147, label %218, label %148

148:                                              ; preds = %146, %57, %50
  %149 = phi %"class.v8::internal::compiler::InstructionOperand"** [ %41, %57 ], [ %41, %50 ], [ %72, %146 ]
  %150 = phi %"class.v8::internal::compiler::InstructionOperand"** [ %48, %57 ], [ %48, %50 ], [ %74, %146 ]
  %151 = getelementptr %"class.v8::internal::compiler::InstructionOperand"*, %"class.v8::internal::compiler::InstructionOperand"** %150, i64 -1
  %152 = ptrtoint %"class.v8::internal::compiler::InstructionOperand"** %151 to i64
  %153 = sub i64 %152, %47
  %154 = lshr i64 %153, 3
  %155 = add nuw nsw i64 %154, 1
  %156 = and i64 %155, 7
  %157 = icmp eq i64 %156, 0
  br i1 %157, label %169, label %158

158:                                              ; preds = %148, %158
  %159 = phi %"class.v8::internal::compiler::InstructionOperand"** [ %162, %158 ], [ %149, %148 ]
  %160 = phi %"class.v8::internal::compiler::InstructionOperand"** [ %163, %158 ], [ %150, %148 ]
  %161 = phi i64 [ %167, %158 ], [ %156, %148 ]
  %162 = getelementptr inbounds %"class.v8::internal::compiler::InstructionOperand"*, %"class.v8::internal::compiler::InstructionOperand"** %159, i64 -1
  %163 = getelementptr inbounds %"class.v8::internal::compiler::InstructionOperand"*, %"class.v8::internal::compiler::InstructionOperand"** %160, i64 -1
  %164 = bitcast %"class.v8::internal::compiler::InstructionOperand"** %163 to i64*
  %165 = load i64, i64* %164, align 8
  %166 = bitcast %"class.v8::internal::compiler::InstructionOperand"** %162 to i64*
  store i64 %165, i64* %166, align 8
  %167 = add i64 %161, -1
  %168 = icmp eq i64 %167, 0
  br i1 %168, label %169, label %158, !llvm.loop !56

169:                                              ; preds = %158, %148
  %170 = phi %"class.v8::internal::compiler::InstructionOperand"** [ undef, %148 ], [ %162, %158 ]
  %171 = phi %"class.v8::internal::compiler::InstructionOperand"** [ %149, %148 ], [ %162, %158 ]
  %172 = phi %"class.v8::internal::compiler::InstructionOperand"** [ %150, %148 ], [ %163, %158 ]
  %173 = icmp ult i64 %153, 56
  br i1 %173, label %218, label %174

174:                                              ; preds = %169, %174
  %175 = phi %"class.v8::internal::compiler::InstructionOperand"** [ %212, %174 ], [ %171, %169 ]
  %176 = phi %"class.v8::internal::compiler::InstructionOperand"** [ %213, %174 ], [ %172, %169 ]
  %177 = getelementptr inbounds %"class.v8::internal::compiler::InstructionOperand"*, %"class.v8::internal::compiler::InstructionOperand"** %175, i64 -1
  %178 = getelementptr inbounds %"class.v8::internal::compiler::InstructionOperand"*, %"class.v8::internal::compiler::InstructionOperand"** %176, i64 -1
  %179 = bitcast %"class.v8::internal::compiler::InstructionOperand"** %178 to i64*
  %180 = load i64, i64* %179, align 8
  %181 = bitcast %"class.v8::internal::compiler::InstructionOperand"** %177 to i64*
  store i64 %180, i64* %181, align 8
  %182 = getelementptr inbounds %"class.v8::internal::compiler::InstructionOperand"*, %"class.v8::internal::compiler::InstructionOperand"** %175, i64 -2
  %183 = getelementptr inbounds %"class.v8::internal::compiler::InstructionOperand"*, %"class.v8::internal::compiler::InstructionOperand"** %176, i64 -2
  %184 = bitcast %"class.v8::internal::compiler::InstructionOperand"** %183 to i64*
  %185 = load i64, i64* %184, align 8
  %186 = bitcast %"class.v8::internal::compiler::InstructionOperand"** %182 to i64*
  store i64 %185, i64* %186, align 8
  %187 = getelementptr inbounds %"class.v8::internal::compiler::InstructionOperand"*, %"class.v8::internal::compiler::InstructionOperand"** %175, i64 -3
  %188 = getelementptr inbounds %"class.v8::internal::compiler::InstructionOperand"*, %"class.v8::internal::compiler::InstructionOperand"** %176, i64 -3
  %189 = bitcast %"class.v8::internal::compiler::InstructionOperand"** %188 to i64*
  %190 = load i64, i64* %189, align 8
  %191 = bitcast %"class.v8::internal::compiler::InstructionOperand"** %187 to i64*
  store i64 %190, i64* %191, align 8
  %192 = getelementptr inbounds %"class.v8::internal::compiler::InstructionOperand"*, %"class.v8::internal::compiler::InstructionOperand"** %175, i64 -4
  %193 = getelementptr inbounds %"class.v8::internal::compiler::InstructionOperand"*, %"class.v8::internal::compiler::InstructionOperand"** %176, i64 -4
  %194 = bitcast %"class.v8::internal::compiler::InstructionOperand"** %193 to i64*
  %195 = load i64, i64* %194, align 8
  %196 = bitcast %"class.v8::internal::compiler::InstructionOperand"** %192 to i64*
  store i64 %195, i64* %196, align 8
  %197 = getelementptr inbounds %"class.v8::internal::compiler::InstructionOperand"*, %"class.v8::internal::compiler::InstructionOperand"** %175, i64 -5
  %198 = getelementptr inbounds %"class.v8::internal::compiler::InstructionOperand"*, %"class.v8::internal::compiler::InstructionOperand"** %176, i64 -5
  %199 = bitcast %"class.v8::internal::compiler::InstructionOperand"** %198 to i64*
  %200 = load i64, i64* %199, align 8
  %201 = bitcast %"class.v8::internal::compiler::InstructionOperand"** %197 to i64*
  store i64 %200, i64* %201, align 8
  %202 = getelementptr inbounds %"class.v8::internal::compiler::InstructionOperand"*, %"class.v8::internal::compiler::InstructionOperand"** %175, i64 -6
  %203 = getelementptr inbounds %"class.v8::internal::compiler::InstructionOperand"*, %"class.v8::internal::compiler::InstructionOperand"** %176, i64 -6
  %204 = bitcast %"class.v8::internal::compiler::InstructionOperand"** %203 to i64*
  %205 = load i64, i64* %204, align 8
  %206 = bitcast %"class.v8::internal::compiler::InstructionOperand"** %202 to i64*
  store i64 %205, i64* %206, align 8
  %207 = getelementptr inbounds %"class.v8::internal::compiler::InstructionOperand"*, %"class.v8::internal::compiler::InstructionOperand"** %175, i64 -7
  %208 = getelementptr inbounds %"class.v8::internal::compiler::InstructionOperand"*, %"class.v8::internal::compiler::InstructionOperand"** %176, i64 -7
  %209 = bitcast %"class.v8::internal::compiler::InstructionOperand"** %208 to i64*
  %210 = load i64, i64* %209, align 8
  %211 = bitcast %"class.v8::internal::compiler::InstructionOperand"** %207 to i64*
  store i64 %210, i64* %211, align 8
  %212 = getelementptr inbounds %"class.v8::internal::compiler::InstructionOperand"*, %"class.v8::internal::compiler::InstructionOperand"** %175, i64 -8
  %213 = getelementptr inbounds %"class.v8::internal::compiler::InstructionOperand"*, %"class.v8::internal::compiler::InstructionOperand"** %176, i64 -8
  %214 = bitcast %"class.v8::internal::compiler::InstructionOperand"** %213 to i64*
  %215 = load i64, i64* %214, align 8
  %216 = bitcast %"class.v8::internal::compiler::InstructionOperand"** %212 to i64*
  store i64 %215, i64* %216, align 8
  %217 = icmp eq %"class.v8::internal::compiler::InstructionOperand"** %213, %46
  br i1 %217, label %218, label %174, !llvm.loop !57

218:                                              ; preds = %169, %174, %146
  %219 = phi %"class.v8::internal::compiler::InstructionOperand"** [ %72, %146 ], [ %170, %169 ], [ %212, %174 ]
  %220 = ptrtoint %"class.v8::internal::compiler::InstructionOperand"** %219 to i64
  br label %221

221:                                              ; preds = %218, %39
  %222 = phi i64 [ %220, %218 ], [ %40, %39 ]
  store i64 %222, i64* %23, align 8
  store i64 %40, i64* %27, align 8
  store i64 %44, i64* %22, align 8
  br label %223

223:                                              ; preds = %4, %221
  ret void
}

; Function Attrs: nounwind ssp uwtable
define hidden void @_ZN2v88internal8compiler29TopTierRegisterAllocationData11PhiMapValue10AddOperandEPNS1_18InstructionOperandE(%"class.v8::internal::compiler::TopTierRegisterAllocationData::PhiMapValue"*, %"class.v8::internal::compiler::InstructionOperand"*) local_unnamed_addr #0 align 2 {
  %3 = ptrtoint %"class.v8::internal::compiler::InstructionOperand"* %1 to i64
  %4 = getelementptr inbounds %"class.v8::internal::compiler::TopTierRegisterAllocationData::PhiMapValue", %"class.v8::internal::compiler::TopTierRegisterAllocationData::PhiMapValue"* %0, i64 0, i32 2, i32 0
  %5 = getelementptr inbounds %"class.v8::internal::compiler::TopTierRegisterAllocationData::PhiMapValue", %"class.v8::internal::compiler::TopTierRegisterAllocationData::PhiMapValue"* %0, i64 0, i32 2, i32 0, i32 0, i32 1
  %6 = load %"class.v8::internal::compiler::InstructionOperand"**, %"class.v8::internal::compiler::InstructionOperand"*** %5, align 8
  %7 = getelementptr inbounds %"class.v8::internal::compiler::TopTierRegisterAllocationData::PhiMapValue", %"class.v8::internal::compiler::TopTierRegisterAllocationData::PhiMapValue"* %0, i64 0, i32 2, i32 0, i32 0, i32 2, i32 0, i32 0
  %8 = load %"class.v8::internal::compiler::InstructionOperand"**, %"class.v8::internal::compiler::InstructionOperand"*** %7, align 8
  %9 = icmp eq %"class.v8::internal::compiler::InstructionOperand"** %6, %8
  %10 = ptrtoint %"class.v8::internal::compiler::InstructionOperand"** %8 to i64
  br i1 %9, label %16, label %11

11:                                               ; preds = %2
  %12 = bitcast %"class.v8::internal::compiler::InstructionOperand"** %6 to i64*
  store i64 %3, i64* %12, align 8
  %13 = getelementptr inbounds %"class.v8::internal::compiler::InstructionOperand"*, %"class.v8::internal::compiler::InstructionOperand"** %6, i64 1
  %14 = ptrtoint %"class.v8::internal::compiler::InstructionOperand"** %13 to i64
  %15 = bitcast %"class.v8::internal::compiler::InstructionOperand"*** %5 to i64*
  store i64 %14, i64* %15, align 8
  br label %241

16:                                               ; preds = %2
  %17 = ptrtoint %"class.v8::internal::compiler::InstructionOperand"** %6 to i64
  %18 = bitcast %"class.v8::internal::compiler::InstructionOperand"*** %5 to i64*
  %19 = bitcast %"class.std::__1::vector.1332"* %4 to i64*
  %20 = load i64, i64* %19, align 8
  %21 = sub i64 %17, %20
  %22 = ashr exact i64 %21, 3
  %23 = add nsw i64 %22, 1
  %24 = icmp ugt i64 %23, 268435455
  br i1 %24, label %25, label %27

25:                                               ; preds = %16
  %26 = bitcast %"class.std::__1::vector.1332"* %4 to %"class.std::__1::__vector_base_common"*
  tail call void @_ZNKSt3__120__vector_base_commonILb1EE20__throw_length_errorEv(%"class.std::__1::__vector_base_common"* %26) #17
  unreachable

27:                                               ; preds = %16
  %28 = bitcast %"class.v8::internal::compiler::InstructionOperand"*** %7 to i64*
  %29 = sub i64 %10, %20
  %30 = ashr exact i64 %29, 3
  %31 = icmp ult i64 %30, 134217727
  br i1 %31, label %32, label %37

32:                                               ; preds = %27
  %33 = ashr exact i64 %29, 2
  %34 = icmp ult i64 %33, %23
  %35 = select i1 %34, i64 %23, i64 %33
  %36 = icmp eq i64 %35, 0
  br i1 %36, label %55, label %37

37:                                               ; preds = %32, %27
  %38 = phi i64 [ %35, %32 ], [ 268435455, %27 ]
  %39 = getelementptr inbounds %"class.v8::internal::compiler::TopTierRegisterAllocationData::PhiMapValue", %"class.v8::internal::compiler::TopTierRegisterAllocationData::PhiMapValue"* %0, i64 0, i32 2, i32 0, i32 0, i32 2, i32 1, i32 0, i32 0
  %40 = load %"class.v8::internal::Zone"*, %"class.v8::internal::Zone"** %39, align 8
  %41 = shl i64 %38, 3
  %42 = getelementptr inbounds %"class.v8::internal::Zone", %"class.v8::internal::Zone"* %40, i64 0, i32 2
  %43 = load i64, i64* %42, align 8
  %44 = getelementptr inbounds %"class.v8::internal::Zone", %"class.v8::internal::Zone"* %40, i64 0, i32 3
  %45 = load i64, i64* %44, align 8
  %46 = sub i64 %45, %43
  %47 = icmp ugt i64 %41, %46
  br i1 %47, label %48, label %50, !prof !2

48:                                               ; preds = %37
  %49 = tail call i64 @_ZN2v88internal4Zone9NewExpandEm(%"class.v8::internal::Zone"* %40, i64 %41) #16
  br label %52

50:                                               ; preds = %37
  %51 = add i64 %43, %41
  store i64 %51, i64* %42, align 8
  br label %52

52:                                               ; preds = %50, %48
  %53 = phi i64 [ %49, %48 ], [ %43, %50 ]
  %54 = inttoptr i64 %53 to %"class.v8::internal::compiler::InstructionOperand"**
  br label %55

55:                                               ; preds = %52, %32
  %56 = phi i64 [ %38, %52 ], [ 0, %32 ]
  %57 = phi %"class.v8::internal::compiler::InstructionOperand"** [ %54, %52 ], [ null, %32 ]
  %58 = getelementptr inbounds %"class.v8::internal::compiler::InstructionOperand"*, %"class.v8::internal::compiler::InstructionOperand"** %57, i64 %22
  %59 = getelementptr inbounds %"class.v8::internal::compiler::InstructionOperand"*, %"class.v8::internal::compiler::InstructionOperand"** %57, i64 %56
  %60 = ptrtoint %"class.v8::internal::compiler::InstructionOperand"** %59 to i64
  %61 = bitcast %"class.v8::internal::compiler::InstructionOperand"** %58 to i64*
  store i64 %3, i64* %61, align 8
  %62 = getelementptr inbounds %"class.v8::internal::compiler::InstructionOperand"*, %"class.v8::internal::compiler::InstructionOperand"** %58, i64 1
  %63 = ptrtoint %"class.v8::internal::compiler::InstructionOperand"** %62 to i64
  %64 = getelementptr inbounds %"class.std::__1::vector.1332", %"class.std::__1::vector.1332"* %4, i64 0, i32 0, i32 0
  %65 = load %"class.v8::internal::compiler::InstructionOperand"**, %"class.v8::internal::compiler::InstructionOperand"*** %64, align 8
  %66 = ptrtoint %"class.v8::internal::compiler::InstructionOperand"** %65 to i64
  %67 = load %"class.v8::internal::compiler::InstructionOperand"**, %"class.v8::internal::compiler::InstructionOperand"*** %5, align 8
  %68 = icmp eq %"class.v8::internal::compiler::InstructionOperand"** %67, %65
  br i1 %68, label %238, label %69

69:                                               ; preds = %55
  %70 = getelementptr %"class.v8::internal::compiler::InstructionOperand"*, %"class.v8::internal::compiler::InstructionOperand"** %67, i64 -1
  %71 = ptrtoint %"class.v8::internal::compiler::InstructionOperand"** %70 to i64
  %72 = sub i64 %71, %66
  %73 = lshr i64 %72, 3
  %74 = add nuw nsw i64 %73, 1
  %75 = icmp ult i64 %74, 4
  br i1 %75, label %168, label %76

76:                                               ; preds = %69
  %77 = getelementptr %"class.v8::internal::compiler::InstructionOperand"*, %"class.v8::internal::compiler::InstructionOperand"** %67, i64 -1
  %78 = ptrtoint %"class.v8::internal::compiler::InstructionOperand"** %77 to i64
  %79 = sub i64 %78, %66
  %80 = lshr i64 %79, 3
  %81 = xor i64 %80, -1
  %82 = add nsw i64 %22, %81
  %83 = getelementptr %"class.v8::internal::compiler::InstructionOperand"*, %"class.v8::internal::compiler::InstructionOperand"** %57, i64 %82
  %84 = xor i64 %80, -1
  %85 = getelementptr %"class.v8::internal::compiler::InstructionOperand"*, %"class.v8::internal::compiler::InstructionOperand"** %67, i64 %84
  %86 = icmp ult %"class.v8::internal::compiler::InstructionOperand"** %83, %67
  %87 = icmp ult %"class.v8::internal::compiler::InstructionOperand"** %85, %58
  %88 = and i1 %86, %87
  br i1 %88, label %168, label %89

89:                                               ; preds = %76
  %90 = and i64 %74, 4611686018427387900
  %91 = sub nsw i64 0, %90
  %92 = getelementptr %"class.v8::internal::compiler::InstructionOperand"*, %"class.v8::internal::compiler::InstructionOperand"** %58, i64 %91
  %93 = sub nsw i64 0, %90
  %94 = getelementptr %"class.v8::internal::compiler::InstructionOperand"*, %"class.v8::internal::compiler::InstructionOperand"** %67, i64 %93
  %95 = add nsw i64 %90, -4
  %96 = lshr exact i64 %95, 2
  %97 = add nuw nsw i64 %96, 1
  %98 = and i64 %97, 1
  %99 = icmp eq i64 %95, 0
  br i1 %99, label %146, label %100

100:                                              ; preds = %89
  %101 = sub nuw nsw i64 %97, %98
  %102 = getelementptr %"class.v8::internal::compiler::InstructionOperand"*, %"class.v8::internal::compiler::InstructionOperand"** %58, i64 -1
  %103 = getelementptr %"class.v8::internal::compiler::InstructionOperand"*, %"class.v8::internal::compiler::InstructionOperand"** %67, i64 -1
  %104 = getelementptr %"class.v8::internal::compiler::InstructionOperand"*, %"class.v8::internal::compiler::InstructionOperand"** %58, i64 -1
  %105 = getelementptr %"class.v8::internal::compiler::InstructionOperand"*, %"class.v8::internal::compiler::InstructionOperand"** %67, i64 -1
  br label %106

106:                                              ; preds = %106, %100
  %107 = phi i64 [ 0, %100 ], [ %141, %106 ]
  %108 = phi i64 [ %101, %100 ], [ %142, %106 ]
  %109 = sub i64 0, %107
  %110 = sub i64 0, %107
  %111 = getelementptr inbounds %"class.v8::internal::compiler::InstructionOperand"*, %"class.v8::internal::compiler::InstructionOperand"** %102, i64 %109
  %112 = getelementptr inbounds %"class.v8::internal::compiler::InstructionOperand"*, %"class.v8::internal::compiler::InstructionOperand"** %103, i64 %110
  %113 = getelementptr inbounds %"class.v8::internal::compiler::InstructionOperand"*, %"class.v8::internal::compiler::InstructionOperand"** %112, i64 -1
  %114 = bitcast %"class.v8::internal::compiler::InstructionOperand"** %113 to <2 x i64>*
  %115 = load <2 x i64>, <2 x i64>* %114, align 8, !alias.scope !58
  %116 = getelementptr inbounds %"class.v8::internal::compiler::InstructionOperand"*, %"class.v8::internal::compiler::InstructionOperand"** %112, i64 -2
  %117 = getelementptr inbounds %"class.v8::internal::compiler::InstructionOperand"*, %"class.v8::internal::compiler::InstructionOperand"** %116, i64 -1
  %118 = bitcast %"class.v8::internal::compiler::InstructionOperand"** %117 to <2 x i64>*
  %119 = load <2 x i64>, <2 x i64>* %118, align 8, !alias.scope !58
  %120 = getelementptr inbounds %"class.v8::internal::compiler::InstructionOperand"*, %"class.v8::internal::compiler::InstructionOperand"** %111, i64 -1
  %121 = bitcast %"class.v8::internal::compiler::InstructionOperand"** %120 to <2 x i64>*
  store <2 x i64> %115, <2 x i64>* %121, align 8, !alias.scope !61, !noalias !58
  %122 = getelementptr inbounds %"class.v8::internal::compiler::InstructionOperand"*, %"class.v8::internal::compiler::InstructionOperand"** %111, i64 -2
  %123 = getelementptr inbounds %"class.v8::internal::compiler::InstructionOperand"*, %"class.v8::internal::compiler::InstructionOperand"** %122, i64 -1
  %124 = bitcast %"class.v8::internal::compiler::InstructionOperand"** %123 to <2 x i64>*
  store <2 x i64> %119, <2 x i64>* %124, align 8, !alias.scope !61, !noalias !58
  %125 = sub nuw nsw i64 -4, %107
  %126 = sub nuw nsw i64 -4, %107
  %127 = getelementptr inbounds %"class.v8::internal::compiler::InstructionOperand"*, %"class.v8::internal::compiler::InstructionOperand"** %104, i64 %125
  %128 = getelementptr inbounds %"class.v8::internal::compiler::InstructionOperand"*, %"class.v8::internal::compiler::InstructionOperand"** %105, i64 %126
  %129 = getelementptr inbounds %"class.v8::internal::compiler::InstructionOperand"*, %"class.v8::internal::compiler::InstructionOperand"** %128, i64 -1
  %130 = bitcast %"class.v8::internal::compiler::InstructionOperand"** %129 to <2 x i64>*
  %131 = load <2 x i64>, <2 x i64>* %130, align 8, !alias.scope !58
  %132 = getelementptr inbounds %"class.v8::internal::compiler::InstructionOperand"*, %"class.v8::internal::compiler::InstructionOperand"** %128, i64 -2
  %133 = getelementptr inbounds %"class.v8::internal::compiler::InstructionOperand"*, %"class.v8::internal::compiler::InstructionOperand"** %132, i64 -1
  %134 = bitcast %"class.v8::internal::compiler::InstructionOperand"** %133 to <2 x i64>*
  %135 = load <2 x i64>, <2 x i64>* %134, align 8, !alias.scope !58
  %136 = getelementptr inbounds %"class.v8::internal::compiler::InstructionOperand"*, %"class.v8::internal::compiler::InstructionOperand"** %127, i64 -1
  %137 = bitcast %"class.v8::internal::compiler::InstructionOperand"** %136 to <2 x i64>*
  store <2 x i64> %131, <2 x i64>* %137, align 8, !alias.scope !61, !noalias !58
  %138 = getelementptr inbounds %"class.v8::internal::compiler::InstructionOperand"*, %"class.v8::internal::compiler::InstructionOperand"** %127, i64 -2
  %139 = getelementptr inbounds %"class.v8::internal::compiler::InstructionOperand"*, %"class.v8::internal::compiler::InstructionOperand"** %138, i64 -1
  %140 = bitcast %"class.v8::internal::compiler::InstructionOperand"** %139 to <2 x i64>*
  store <2 x i64> %135, <2 x i64>* %140, align 8, !alias.scope !61, !noalias !58
  %141 = add i64 %107, 8
  %142 = add i64 %108, -2
  %143 = icmp eq i64 %142, 0
  br i1 %143, label %144, label %106, !llvm.loop !63

144:                                              ; preds = %106
  %145 = sub nuw nsw i64 -8, %107
  br label %146

146:                                              ; preds = %144, %89
  %147 = phi i64 [ 0, %89 ], [ %145, %144 ]
  %148 = icmp eq i64 %98, 0
  br i1 %148, label %166, label %149

149:                                              ; preds = %146
  %150 = getelementptr %"class.v8::internal::compiler::InstructionOperand"*, %"class.v8::internal::compiler::InstructionOperand"** %58, i64 -1
  %151 = getelementptr %"class.v8::internal::compiler::InstructionOperand"*, %"class.v8::internal::compiler::InstructionOperand"** %67, i64 -1
  %152 = getelementptr inbounds %"class.v8::internal::compiler::InstructionOperand"*, %"class.v8::internal::compiler::InstructionOperand"** %150, i64 %147
  %153 = getelementptr inbounds %"class.v8::internal::compiler::InstructionOperand"*, %"class.v8::internal::compiler::InstructionOperand"** %151, i64 %147
  %154 = getelementptr inbounds %"class.v8::internal::compiler::InstructionOperand"*, %"class.v8::internal::compiler::InstructionOperand"** %153, i64 -1
  %155 = bitcast %"class.v8::internal::compiler::InstructionOperand"** %154 to <2 x i64>*
  %156 = load <2 x i64>, <2 x i64>* %155, align 8, !alias.scope !58
  %157 = getelementptr inbounds %"class.v8::internal::compiler::InstructionOperand"*, %"class.v8::internal::compiler::InstructionOperand"** %153, i64 -2
  %158 = getelementptr inbounds %"class.v8::internal::compiler::InstructionOperand"*, %"class.v8::internal::compiler::InstructionOperand"** %157, i64 -1
  %159 = bitcast %"class.v8::internal::compiler::InstructionOperand"** %158 to <2 x i64>*
  %160 = load <2 x i64>, <2 x i64>* %159, align 8, !alias.scope !58
  %161 = getelementptr inbounds %"class.v8::internal::compiler::InstructionOperand"*, %"class.v8::internal::compiler::InstructionOperand"** %152, i64 -1
  %162 = bitcast %"class.v8::internal::compiler::InstructionOperand"** %161 to <2 x i64>*
  store <2 x i64> %156, <2 x i64>* %162, align 8, !alias.scope !61, !noalias !58
  %163 = getelementptr inbounds %"class.v8::internal::compiler::InstructionOperand"*, %"class.v8::internal::compiler::InstructionOperand"** %152, i64 -2
  %164 = getelementptr inbounds %"class.v8::internal::compiler::InstructionOperand"*, %"class.v8::internal::compiler::InstructionOperand"** %163, i64 -1
  %165 = bitcast %"class.v8::internal::compiler::InstructionOperand"** %164 to <2 x i64>*
  store <2 x i64> %160, <2 x i64>* %165, align 8, !alias.scope !61, !noalias !58
  br label %166

166:                                              ; preds = %146, %149
  %167 = icmp eq i64 %74, %90
  br i1 %167, label %238, label %168

168:                                              ; preds = %166, %76, %69
  %169 = phi %"class.v8::internal::compiler::InstructionOperand"** [ %58, %76 ], [ %58, %69 ], [ %92, %166 ]
  %170 = phi %"class.v8::internal::compiler::InstructionOperand"** [ %67, %76 ], [ %67, %69 ], [ %94, %166 ]
  %171 = getelementptr %"class.v8::internal::compiler::InstructionOperand"*, %"class.v8::internal::compiler::InstructionOperand"** %170, i64 -1
  %172 = ptrtoint %"class.v8::internal::compiler::InstructionOperand"** %171 to i64
  %173 = sub i64 %172, %66
  %174 = lshr i64 %173, 3
  %175 = add nuw nsw i64 %174, 1
  %176 = and i64 %175, 7
  %177 = icmp eq i64 %176, 0
  br i1 %177, label %189, label %178

178:                                              ; preds = %168, %178
  %179 = phi %"class.v8::internal::compiler::InstructionOperand"** [ %182, %178 ], [ %169, %168 ]
  %180 = phi %"class.v8::internal::compiler::InstructionOperand"** [ %183, %178 ], [ %170, %168 ]
  %181 = phi i64 [ %187, %178 ], [ %176, %168 ]
  %182 = getelementptr inbounds %"class.v8::internal::compiler::InstructionOperand"*, %"class.v8::internal::compiler::InstructionOperand"** %179, i64 -1
  %183 = getelementptr inbounds %"class.v8::internal::compiler::InstructionOperand"*, %"class.v8::internal::compiler::InstructionOperand"** %180, i64 -1
  %184 = bitcast %"class.v8::internal::compiler::InstructionOperand"** %183 to i64*
  %185 = load i64, i64* %184, align 8
  %186 = bitcast %"class.v8::internal::compiler::InstructionOperand"** %182 to i64*
  store i64 %185, i64* %186, align 8
  %187 = add i64 %181, -1
  %188 = icmp eq i64 %187, 0
  br i1 %188, label %189, label %178, !llvm.loop !64

189:                                              ; preds = %178, %168
  %190 = phi %"class.v8::internal::compiler::InstructionOperand"** [ undef, %168 ], [ %182, %178 ]
  %191 = phi %"class.v8::internal::compiler::InstructionOperand"** [ %169, %168 ], [ %182, %178 ]
  %192 = phi %"class.v8::internal::compiler::InstructionOperand"** [ %170, %168 ], [ %183, %178 ]
  %193 = icmp ult i64 %173, 56
  br i1 %193, label %238, label %194

194:                                              ; preds = %189, %194
  %195 = phi %"class.v8::internal::compiler::InstructionOperand"** [ %232, %194 ], [ %191, %189 ]
  %196 = phi %"class.v8::internal::compiler::InstructionOperand"** [ %233, %194 ], [ %192, %189 ]
  %197 = getelementptr inbounds %"class.v8::internal::compiler::InstructionOperand"*, %"class.v8::internal::compiler::InstructionOperand"** %195, i64 -1
  %198 = getelementptr inbounds %"class.v8::internal::compiler::InstructionOperand"*, %"class.v8::internal::compiler::InstructionOperand"** %196, i64 -1
  %199 = bitcast %"class.v8::internal::compiler::InstructionOperand"** %198 to i64*
  %200 = load i64, i64* %199, align 8
  %201 = bitcast %"class.v8::internal::compiler::InstructionOperand"** %197 to i64*
  store i64 %200, i64* %201, align 8
  %202 = getelementptr inbounds %"class.v8::internal::compiler::InstructionOperand"*, %"class.v8::internal::compiler::InstructionOperand"** %195, i64 -2
  %203 = getelementptr inbounds %"class.v8::internal::compiler::InstructionOperand"*, %"class.v8::internal::compiler::InstructionOperand"** %196, i64 -2
  %204 = bitcast %"class.v8::internal::compiler::InstructionOperand"** %203 to i64*
  %205 = load i64, i64* %204, align 8
  %206 = bitcast %"class.v8::internal::compiler::InstructionOperand"** %202 to i64*
  store i64 %205, i64* %206, align 8
  %207 = getelementptr inbounds %"class.v8::internal::compiler::InstructionOperand"*, %"class.v8::internal::compiler::InstructionOperand"** %195, i64 -3
  %208 = getelementptr inbounds %"class.v8::internal::compiler::InstructionOperand"*, %"class.v8::internal::compiler::InstructionOperand"** %196, i64 -3
  %209 = bitcast %"class.v8::internal::compiler::InstructionOperand"** %208 to i64*
  %210 = load i64, i64* %209, align 8
  %211 = bitcast %"class.v8::internal::compiler::InstructionOperand"** %207 to i64*
  store i64 %210, i64* %211, align 8
  %212 = getelementptr inbounds %"class.v8::internal::compiler::InstructionOperand"*, %"class.v8::internal::compiler::InstructionOperand"** %195, i64 -4
  %213 = getelementptr inbounds %"class.v8::internal::compiler::InstructionOperand"*, %"class.v8::internal::compiler::InstructionOperand"** %196, i64 -4
  %214 = bitcast %"class.v8::internal::compiler::InstructionOperand"** %213 to i64*
  %215 = load i64, i64* %214, align 8
  %216 = bitcast %"class.v8::internal::compiler::InstructionOperand"** %212 to i64*
  store i64 %215, i64* %216, align 8
  %217 = getelementptr inbounds %"class.v8::internal::compiler::InstructionOperand"*, %"class.v8::internal::compiler::InstructionOperand"** %195, i64 -5
  %218 = getelementptr inbounds %"class.v8::internal::compiler::InstructionOperand"*, %"class.v8::internal::compiler::InstructionOperand"** %196, i64 -5
  %219 = bitcast %"class.v8::internal::compiler::InstructionOperand"** %218 to i64*
  %220 = load i64, i64* %219, align 8
  %221 = bitcast %"class.v8::internal::compiler::InstructionOperand"** %217 to i64*
  store i64 %220, i64* %221, align 8
  %222 = getelementptr inbounds %"class.v8::internal::compiler::InstructionOperand"*, %"class.v8::internal::compiler::InstructionOperand"** %195, i64 -6
  %223 = getelementptr inbounds %"class.v8::internal::compiler::InstructionOperand"*, %"class.v8::internal::compiler::InstructionOperand"** %196, i64 -6
  %224 = bitcast %"class.v8::internal::compiler::InstructionOperand"** %223 to i64*
  %225 = load i64, i64* %224, align 8
  %226 = bitcast %"class.v8::internal::compiler::InstructionOperand"** %222 to i64*
  store i64 %225, i64* %226, align 8
  %227 = getelementptr inbounds %"class.v8::internal::compiler::InstructionOperand"*, %"class.v8::internal::compiler::InstructionOperand"** %195, i64 -7
  %228 = getelementptr inbounds %"class.v8::internal::compiler::InstructionOperand"*, %"class.v8::internal::compiler::InstructionOperand"** %196, i64 -7
  %229 = bitcast %"class.v8::internal::compiler::InstructionOperand"** %228 to i64*
  %230 = load i64, i64* %229, align 8
  %231 = bitcast %"class.v8::internal::compiler::InstructionOperand"** %227 to i64*
  store i64 %230, i64* %231, align 8
  %232 = getelementptr inbounds %"class.v8::internal::compiler::InstructionOperand"*, %"class.v8::internal::compiler::InstructionOperand"** %195, i64 -8
  %233 = getelementptr inbounds %"class.v8::internal::compiler::InstructionOperand"*, %"class.v8::internal::compiler::InstructionOperand"** %196, i64 -8
  %234 = bitcast %"class.v8::internal::compiler::InstructionOperand"** %233 to i64*
  %235 = load i64, i64* %234, align 8
  %236 = bitcast %"class.v8::internal::compiler::InstructionOperand"** %232 to i64*
  store i64 %235, i64* %236, align 8
  %237 = icmp eq %"class.v8::internal::compiler::InstructionOperand"** %233, %65
  br i1 %237, label %238, label %194, !llvm.loop !65

238:                                              ; preds = %189, %194, %166, %55
  %239 = phi %"class.v8::internal::compiler::InstructionOperand"** [ %58, %55 ], [ %92, %166 ], [ %190, %189 ], [ %232, %194 ]
  %240 = ptrtoint %"class.v8::internal::compiler::InstructionOperand"** %239 to i64
  store i64 %240, i64* %19, align 8
  store i64 %63, i64* %18, align 8
  store i64 %60, i64* %28, align 8
  br label %241

241:                                              ; preds = %11, %238
  ret void
}

; Function Attrs: nounwind ssp uwtable
define hidden void @_ZN2v88internal8compiler29TopTierRegisterAllocationData11PhiMapValue16CommitAssignmentERKNS1_18InstructionOperandE(%"class.v8::internal::compiler::TopTierRegisterAllocationData::PhiMapValue"* nocapture readonly, %"class.v8::internal::compiler::InstructionOperand"* nocapture readonly dereferenceable(8)) local_unnamed_addr #0 align 2 {
  %3 = getelementptr inbounds %"class.v8::internal::compiler::TopTierRegisterAllocationData::PhiMapValue", %"class.v8::internal::compiler::TopTierRegisterAllocationData::PhiMapValue"* %0, i64 0, i32 2, i32 0, i32 0, i32 0
  %4 = load %"class.v8::internal::compiler::InstructionOperand"**, %"class.v8::internal::compiler::InstructionOperand"*** %3, align 8
  %5 = getelementptr inbounds %"class.v8::internal::compiler::TopTierRegisterAllocationData::PhiMapValue", %"class.v8::internal::compiler::TopTierRegisterAllocationData::PhiMapValue"* %0, i64 0, i32 2, i32 0, i32 0, i32 1
  %6 = load %"class.v8::internal::compiler::InstructionOperand"**, %"class.v8::internal::compiler::InstructionOperand"*** %5, align 8
  %7 = icmp eq %"class.v8::internal::compiler::InstructionOperand"** %4, %6
  br i1 %7, label %30, label %8

8:                                                ; preds = %2
  %9 = ptrtoint %"class.v8::internal::compiler::InstructionOperand"** %4 to i64
  %10 = getelementptr inbounds %"class.v8::internal::compiler::InstructionOperand", %"class.v8::internal::compiler::InstructionOperand"* %1, i64 0, i32 0
  %11 = getelementptr %"class.v8::internal::compiler::InstructionOperand"*, %"class.v8::internal::compiler::InstructionOperand"** %6, i64 -1
  %12 = ptrtoint %"class.v8::internal::compiler::InstructionOperand"** %11 to i64
  %13 = sub i64 %12, %9
  %14 = lshr i64 %13, 3
  %15 = add nuw nsw i64 %14, 1
  %16 = and i64 %15, 7
  %17 = icmp eq i64 %16, 0
  br i1 %17, label %27, label %18

18:                                               ; preds = %8, %18
  %19 = phi %"class.v8::internal::compiler::InstructionOperand"** [ %24, %18 ], [ %4, %8 ]
  %20 = phi i64 [ %25, %18 ], [ %16, %8 ]
  %21 = load %"class.v8::internal::compiler::InstructionOperand"*, %"class.v8::internal::compiler::InstructionOperand"** %19, align 8
  %22 = getelementptr inbounds %"class.v8::internal::compiler::InstructionOperand", %"class.v8::internal::compiler::InstructionOperand"* %21, i64 0, i32 0
  %23 = load i64, i64* %10, align 8
  store i64 %23, i64* %22, align 8
  %24 = getelementptr inbounds %"class.v8::internal::compiler::InstructionOperand"*, %"class.v8::internal::compiler::InstructionOperand"** %19, i64 1
  %25 = add i64 %20, -1
  %26 = icmp eq i64 %25, 0
  br i1 %26, label %27, label %18, !llvm.loop !66

27:                                               ; preds = %18, %8
  %28 = phi %"class.v8::internal::compiler::InstructionOperand"** [ %4, %8 ], [ %24, %18 ]
  %29 = icmp ult i64 %13, 56
  br i1 %29, label %30, label %31

30:                                               ; preds = %27, %31, %2
  ret void

31:                                               ; preds = %27, %31
  %32 = phi %"class.v8::internal::compiler::InstructionOperand"** [ %64, %31 ], [ %28, %27 ]
  %33 = load %"class.v8::internal::compiler::InstructionOperand"*, %"class.v8::internal::compiler::InstructionOperand"** %32, align 8
  %34 = getelementptr inbounds %"class.v8::internal::compiler::InstructionOperand", %"class.v8::internal::compiler::InstructionOperand"* %33, i64 0, i32 0
  %35 = load i64, i64* %10, align 8
  store i64 %35, i64* %34, align 8
  %36 = getelementptr inbounds %"class.v8::internal::compiler::InstructionOperand"*, %"class.v8::internal::compiler::InstructionOperand"** %32, i64 1
  %37 = load %"class.v8::internal::compiler::InstructionOperand"*, %"class.v8::internal::compiler::InstructionOperand"** %36, align 8
  %38 = getelementptr inbounds %"class.v8::internal::compiler::InstructionOperand", %"class.v8::internal::compiler::InstructionOperand"* %37, i64 0, i32 0
  %39 = load i64, i64* %10, align 8
  store i64 %39, i64* %38, align 8
  %40 = getelementptr inbounds %"class.v8::internal::compiler::InstructionOperand"*, %"class.v8::internal::compiler::InstructionOperand"** %32, i64 2
  %41 = load %"class.v8::internal::compiler::InstructionOperand"*, %"class.v8::internal::compiler::InstructionOperand"** %40, align 8
  %42 = getelementptr inbounds %"class.v8::internal::compiler::InstructionOperand", %"class.v8::internal::compiler::InstructionOperand"* %41, i64 0, i32 0
  %43 = load i64, i64* %10, align 8
  store i64 %43, i64* %42, align 8
  %44 = getelementptr inbounds %"class.v8::internal::compiler::InstructionOperand"*, %"class.v8::internal::compiler::InstructionOperand"** %32, i64 3
  %45 = load %"class.v8::internal::compiler::InstructionOperand"*, %"class.v8::internal::compiler::InstructionOperand"** %44, align 8
  %46 = getelementptr inbounds %"class.v8::internal::compiler::InstructionOperand", %"class.v8::internal::compiler::InstructionOperand"* %45, i64 0, i32 0
  %47 = load i64, i64* %10, align 8
  store i64 %47, i64* %46, align 8
  %48 = getelementptr inbounds %"class.v8::internal::compiler::InstructionOperand"*, %"class.v8::internal::compiler::InstructionOperand"** %32, i64 4
  %49 = load %"class.v8::internal::compiler::InstructionOperand"*, %"class.v8::internal::compiler::InstructionOperand"** %48, align 8
  %50 = getelementptr inbounds %"class.v8::internal::compiler::InstructionOperand", %"class.v8::internal::compiler::InstructionOperand"* %49, i64 0, i32 0
  %51 = load i64, i64* %10, align 8
  store i64 %51, i64* %50, align 8
  %52 = getelementptr inbounds %"class.v8::internal::compiler::InstructionOperand"*, %"class.v8::internal::compiler::InstructionOperand"** %32, i64 5
  %53 = load %"class.v8::internal::compiler::InstructionOperand"*, %"class.v8::internal::compiler::InstructionOperand"** %52, align 8
  %54 = getelementptr inbounds %"class.v8::internal::compiler::InstructionOperand", %"class.v8::internal::compiler::InstructionOperand"* %53, i64 0, i32 0
  %55 = load i64, i64* %10, align 8
  store i64 %55, i64* %54, align 8
  %56 = getelementptr inbounds %"class.v8::internal::compiler::InstructionOperand"*, %"class.v8::internal::compiler::InstructionOperand"** %32, i64 6
  %57 = load %"class.v8::internal::compiler::InstructionOperand"*, %"class.v8::internal::compiler::InstructionOperand"** %56, align 8
  %58 = getelementptr inbounds %"class.v8::internal::compiler::InstructionOperand", %"class.v8::internal::compiler::InstructionOperand"* %57, i64 0, i32 0
  %59 = load i64, i64* %10, align 8
  store i64 %59, i64* %58, align 8
  %60 = getelementptr inbounds %"class.v8::internal::compiler::InstructionOperand"*, %"class.v8::internal::compiler::InstructionOperand"** %32, i64 7
  %61 = load %"class.v8::internal::compiler::InstructionOperand"*, %"class.v8::internal::compiler::InstructionOperand"** %60, align 8
  %62 = getelementptr inbounds %"class.v8::internal::compiler::InstructionOperand", %"class.v8::internal::compiler::InstructionOperand"* %61, i64 0, i32 0
  %63 = load i64, i64* %10, align 8
  store i64 %63, i64* %62, align 8
  %64 = getelementptr inbounds %"class.v8::internal::compiler::InstructionOperand"*, %"class.v8::internal::compiler::InstructionOperand"** %32, i64 8
  %65 = icmp eq %"class.v8::internal::compiler::InstructionOperand"** %64, %6
  br i1 %65, label %30, label %31
}

; Function Attrs: nounwind ssp uwtable
define hidden void @_ZN2v88internal8compiler29TopTierRegisterAllocationDataC2EPKNS0_21RegisterConfigurationEPNS0_4ZoneEPNS1_5FrameEPNS1_19InstructionSequenceENS_4base5FlagsINS1_22RegisterAllocationFlagEiEEPNS0_11TickCounterEPKc(%"class.v8::internal::compiler::TopTierRegisterAllocationData"*, %"class.v8::internal::RegisterConfiguration"*, %"class.v8::internal::Zone"*, %"class.v8::internal::compiler::Frame"*, %"class.v8::internal::compiler::InstructionSequence"*, i32, %"class.v8::internal::TickCounter"*, i8*) unnamed_addr #0 align 2 {
  %9 = alloca i32, align 4
  %10 = alloca %"class.v8::internal::Zone"*, align 8
  %11 = alloca i32, align 4
  %12 = alloca %"class.v8::internal::Zone"*, align 8
  %13 = alloca i32, align 4
  %14 = alloca %"class.v8::internal::Zone"*, align 8
  %15 = alloca i32, align 4
  %16 = alloca %"class.v8::internal::Zone"*, align 8
  %17 = getelementptr inbounds %"class.v8::internal::compiler::TopTierRegisterAllocationData", %"class.v8::internal::compiler::TopTierRegisterAllocationData"* %0, i64 0, i32 0, i32 0
  store i32 0, i32* %17, align 4
  %18 = getelementptr inbounds %"class.v8::internal::compiler::TopTierRegisterAllocationData", %"class.v8::internal::compiler::TopTierRegisterAllocationData"* %0, i64 0, i32 1
  store %"class.v8::internal::Zone"* %2, %"class.v8::internal::Zone"** %18, align 8
  %19 = getelementptr inbounds %"class.v8::internal::compiler::TopTierRegisterAllocationData", %"class.v8::internal::compiler::TopTierRegisterAllocationData"* %0, i64 0, i32 2
  store %"class.v8::internal::compiler::Frame"* %3, %"class.v8::internal::compiler::Frame"** %19, align 8
  %20 = getelementptr inbounds %"class.v8::internal::compiler::TopTierRegisterAllocationData", %"class.v8::internal::compiler::TopTierRegisterAllocationData"* %0, i64 0, i32 3
  store %"class.v8::internal::compiler::InstructionSequence"* %4, %"class.v8::internal::compiler::InstructionSequence"** %20, align 8
  %21 = getelementptr inbounds %"class.v8::internal::compiler::TopTierRegisterAllocationData", %"class.v8::internal::compiler::TopTierRegisterAllocationData"* %0, i64 0, i32 4
  store i8* %7, i8** %21, align 8
  %22 = getelementptr inbounds %"class.v8::internal::compiler::TopTierRegisterAllocationData", %"class.v8::internal::compiler::TopTierRegisterAllocationData"* %0, i64 0, i32 5
  store %"class.v8::internal::RegisterConfiguration"* %1, %"class.v8::internal::RegisterConfiguration"** %22, align 8
  %23 = ptrtoint %"class.v8::internal::Zone"* %2 to i64
  %24 = getelementptr inbounds %"class.v8::internal::compiler::TopTierRegisterAllocationData", %"class.v8::internal::compiler::TopTierRegisterAllocationData"* %0, i64 0, i32 6, i32 0, i32 0, i32 0
  %25 = getelementptr inbounds %"class.v8::internal::compiler::TopTierRegisterAllocationData", %"class.v8::internal::compiler::TopTierRegisterAllocationData"* %0, i64 0, i32 6, i32 0, i32 0, i32 1, i32 1
  %26 = bitcast %"struct.std::__1::__compressed_pair_elem.1272"* %25 to i64*
  %27 = getelementptr inbounds %"class.v8::internal::compiler::TopTierRegisterAllocationData", %"class.v8::internal::compiler::TopTierRegisterAllocationData"* %0, i64 0, i32 6, i32 0, i32 0, i32 1
  %28 = bitcast %"class.std::__1::__compressed_pair.1271"* %27 to i64*
  store i64 0, i64* %28, align 8
  store i64 %23, i64* %26, align 8
  %29 = getelementptr inbounds %"class.v8::internal::compiler::TopTierRegisterAllocationData", %"class.v8::internal::compiler::TopTierRegisterAllocationData"* %0, i64 0, i32 6, i32 0, i32 0, i32 2, i32 0, i32 0
  store i64 0, i64* %29, align 8
  %30 = getelementptr inbounds %"class.v8::internal::compiler::TopTierRegisterAllocationData", %"class.v8::internal::compiler::TopTierRegisterAllocationData"* %0, i64 0, i32 6, i32 0, i32 0, i32 1, i32 0, i32 0
  store %"class.std::__1::__tree_end_node"* %30, %"class.std::__1::__tree_end_node"** %24, align 8
  %31 = getelementptr inbounds %"class.v8::internal::compiler::TopTierRegisterAllocationData", %"class.v8::internal::compiler::TopTierRegisterAllocationData"* %0, i64 0, i32 7
  %32 = getelementptr inbounds %"class.v8::internal::compiler::InstructionSequence", %"class.v8::internal::compiler::InstructionSequence"* %4, i64 0, i32 2
  %33 = bitcast %"class.v8::internal::ZoneVector.1170"** %32 to %"class.std::__1::vector.1171"**
  %34 = load %"class.std::__1::vector.1171"*, %"class.std::__1::vector.1171"** %33, align 8
  %35 = getelementptr inbounds %"class.std::__1::vector.1171", %"class.std::__1::vector.1171"* %34, i64 0, i32 0, i32 1
  %36 = bitcast %"class.v8::internal::compiler::InstructionBlock"*** %35 to i64*
  %37 = load i64, i64* %36, align 8
  %38 = bitcast %"class.std::__1::vector.1171"* %34 to i64*
  %39 = load i64, i64* %38, align 8
  %40 = sub i64 %37, %39
  %41 = shl i64 %40, 29
  %42 = ashr i64 %41, 32
  %43 = getelementptr inbounds %"class.v8::internal::compiler::TopTierRegisterAllocationData", %"class.v8::internal::compiler::TopTierRegisterAllocationData"* %0, i64 0, i32 7, i32 0, i32 0, i32 2, i32 1
  %44 = bitcast %"struct.std::__1::__compressed_pair_elem.1282"* %43 to i64*
  %45 = bitcast %"class.v8::internal::ZoneVector.1277"* %31 to i8*
  tail call void @llvm.memset.p0i8.i64(i8* align 8 %45, i8 0, i64 24, i1 false) #16
  store i64 %23, i64* %44, align 8
  %46 = icmp eq i64 %42, 0
  br i1 %46, label %75, label %47

47:                                               ; preds = %8
  %48 = icmp ugt i64 %42, 268435455
  br i1 %48, label %49, label %51

49:                                               ; preds = %47
  %50 = bitcast %"class.v8::internal::ZoneVector.1277"* %31 to %"class.std::__1::__vector_base_common"*
  tail call void @_ZNKSt3__120__vector_base_commonILb1EE20__throw_length_errorEv(%"class.std::__1::__vector_base_common"* %50) #17
  unreachable

51:                                               ; preds = %47
  %52 = shl nsw i64 %42, 3
  %53 = getelementptr inbounds %"class.v8::internal::Zone", %"class.v8::internal::Zone"* %2, i64 0, i32 2
  %54 = load i64, i64* %53, align 8
  %55 = getelementptr inbounds %"class.v8::internal::Zone", %"class.v8::internal::Zone"* %2, i64 0, i32 3
  %56 = load i64, i64* %55, align 8
  %57 = sub i64 %56, %54
  %58 = icmp ugt i64 %52, %57
  br i1 %58, label %59, label %61, !prof !2

59:                                               ; preds = %51
  %60 = tail call i64 @_ZN2v88internal4Zone9NewExpandEm(%"class.v8::internal::Zone"* %2, i64 %52) #16
  br label %63

61:                                               ; preds = %51
  %62 = add i64 %54, %52
  store i64 %62, i64* %53, align 8
  br label %63

63:                                               ; preds = %61, %59
  %64 = phi i64 [ %60, %59 ], [ %54, %61 ]
  %65 = inttoptr i64 %64 to %"class.v8::internal::BitVector"**
  %66 = inttoptr i64 %64 to i8*
  %67 = getelementptr inbounds %"class.v8::internal::compiler::TopTierRegisterAllocationData", %"class.v8::internal::compiler::TopTierRegisterAllocationData"* %0, i64 0, i32 7, i32 0, i32 0, i32 1
  %68 = getelementptr inbounds %"class.v8::internal::ZoneVector.1277", %"class.v8::internal::ZoneVector.1277"* %31, i64 0, i32 0, i32 0, i32 0
  store %"class.v8::internal::BitVector"** %65, %"class.v8::internal::BitVector"*** %68, align 8
  %69 = getelementptr inbounds %"class.v8::internal::BitVector"*, %"class.v8::internal::BitVector"** %65, i64 %42
  %70 = getelementptr inbounds %"class.v8::internal::compiler::TopTierRegisterAllocationData", %"class.v8::internal::compiler::TopTierRegisterAllocationData"* %0, i64 0, i32 7, i32 0, i32 0, i32 2, i32 0, i32 0
  store %"class.v8::internal::BitVector"** %69, %"class.v8::internal::BitVector"*** %70, align 8
  call void @llvm.memset.p0i8.i64(i8* align 8 %66, i8 0, i64 %52, i1 false)
  %71 = bitcast %"class.v8::internal::BitVector"*** %67 to i64*
  %72 = ptrtoint %"class.v8::internal::BitVector"** %69 to i64
  store i64 %72, i64* %71, align 8
  %73 = load %"class.v8::internal::Zone"*, %"class.v8::internal::Zone"** %18, align 8
  %74 = ptrtoint %"class.v8::internal::Zone"* %73 to i64
  br label %75

75:                                               ; preds = %8, %63
  %76 = phi i64 [ %23, %8 ], [ %74, %63 ]
  %77 = phi %"class.v8::internal::Zone"* [ %2, %8 ], [ %73, %63 ]
  %78 = getelementptr inbounds %"class.v8::internal::compiler::TopTierRegisterAllocationData", %"class.v8::internal::compiler::TopTierRegisterAllocationData"* %0, i64 0, i32 8
  %79 = load %"class.std::__1::vector.1171"*, %"class.std::__1::vector.1171"** %33, align 8
  %80 = getelementptr inbounds %"class.std::__1::vector.1171", %"class.std::__1::vector.1171"* %79, i64 0, i32 0, i32 1
  %81 = bitcast %"class.v8::internal::compiler::InstructionBlock"*** %80 to i64*
  %82 = load i64, i64* %81, align 8
  %83 = bitcast %"class.std::__1::vector.1171"* %79 to i64*
  %84 = load i64, i64* %83, align 8
  %85 = sub i64 %82, %84
  %86 = shl i64 %85, 29
  %87 = ashr i64 %86, 32
  %88 = getelementptr inbounds %"class.v8::internal::compiler::TopTierRegisterAllocationData", %"class.v8::internal::compiler::TopTierRegisterAllocationData"* %0, i64 0, i32 8, i32 0, i32 0, i32 2, i32 1
  %89 = bitcast %"struct.std::__1::__compressed_pair_elem.1282"* %88 to i64*
  %90 = bitcast %"class.v8::internal::ZoneVector.1277"* %78 to i8*
  tail call void @llvm.memset.p0i8.i64(i8* align 8 %90, i8 0, i64 24, i1 false) #16
  store i64 %76, i64* %89, align 8
  %91 = icmp eq i64 %87, 0
  br i1 %91, label %120, label %92

92:                                               ; preds = %75
  %93 = icmp ugt i64 %87, 268435455
  br i1 %93, label %94, label %96

94:                                               ; preds = %92
  %95 = bitcast %"class.v8::internal::ZoneVector.1277"* %78 to %"class.std::__1::__vector_base_common"*
  tail call void @_ZNKSt3__120__vector_base_commonILb1EE20__throw_length_errorEv(%"class.std::__1::__vector_base_common"* %95) #17
  unreachable

96:                                               ; preds = %92
  %97 = shl nsw i64 %87, 3
  %98 = getelementptr inbounds %"class.v8::internal::Zone", %"class.v8::internal::Zone"* %77, i64 0, i32 2
  %99 = load i64, i64* %98, align 8
  %100 = getelementptr inbounds %"class.v8::internal::Zone", %"class.v8::internal::Zone"* %77, i64 0, i32 3
  %101 = load i64, i64* %100, align 8
  %102 = sub i64 %101, %99
  %103 = icmp ugt i64 %97, %102
  br i1 %103, label %104, label %106, !prof !2

104:                                              ; preds = %96
  %105 = tail call i64 @_ZN2v88internal4Zone9NewExpandEm(%"class.v8::internal::Zone"* %77, i64 %97) #16
  br label %108

106:                                              ; preds = %96
  %107 = add i64 %99, %97
  store i64 %107, i64* %98, align 8
  br label %108

108:                                              ; preds = %106, %104
  %109 = phi i64 [ %105, %104 ], [ %99, %106 ]
  %110 = inttoptr i64 %109 to %"class.v8::internal::BitVector"**
  %111 = inttoptr i64 %109 to i8*
  %112 = getelementptr inbounds %"class.v8::internal::compiler::TopTierRegisterAllocationData", %"class.v8::internal::compiler::TopTierRegisterAllocationData"* %0, i64 0, i32 8, i32 0, i32 0, i32 1
  %113 = getelementptr inbounds %"class.v8::internal::ZoneVector.1277", %"class.v8::internal::ZoneVector.1277"* %78, i64 0, i32 0, i32 0, i32 0
  store %"class.v8::internal::BitVector"** %110, %"class.v8::internal::BitVector"*** %113, align 8
  %114 = getelementptr inbounds %"class.v8::internal::BitVector"*, %"class.v8::internal::BitVector"** %110, i64 %87
  %115 = getelementptr inbounds %"class.v8::internal::compiler::TopTierRegisterAllocationData", %"class.v8::internal::compiler::TopTierRegisterAllocationData"* %0, i64 0, i32 8, i32 0, i32 0, i32 2, i32 0, i32 0
  store %"class.v8::internal::BitVector"** %114, %"class.v8::internal::BitVector"*** %115, align 8
  call void @llvm.memset.p0i8.i64(i8* align 8 %111, i8 0, i64 %97, i1 false)
  %116 = bitcast %"class.v8::internal::BitVector"*** %112 to i64*
  %117 = ptrtoint %"class.v8::internal::BitVector"** %114 to i64
  store i64 %117, i64* %116, align 8
  %118 = load %"class.v8::internal::Zone"*, %"class.v8::internal::Zone"** %18, align 8
  %119 = ptrtoint %"class.v8::internal::Zone"* %118 to i64
  br label %120

120:                                              ; preds = %75, %108
  %121 = phi i64 [ %76, %75 ], [ %119, %108 ]
  %122 = phi %"class.v8::internal::Zone"* [ %77, %75 ], [ %118, %108 ]
  %123 = getelementptr inbounds %"class.v8::internal::compiler::TopTierRegisterAllocationData", %"class.v8::internal::compiler::TopTierRegisterAllocationData"* %0, i64 0, i32 9
  %124 = getelementptr inbounds %"class.v8::internal::compiler::InstructionSequence", %"class.v8::internal::compiler::InstructionSequence"* %4, i64 0, i32 9
  %125 = load i32, i32* %124, align 8
  %126 = shl nsw i32 %125, 1
  %127 = sext i32 %126 to i64
  %128 = getelementptr inbounds %"class.v8::internal::compiler::TopTierRegisterAllocationData", %"class.v8::internal::compiler::TopTierRegisterAllocationData"* %0, i64 0, i32 9, i32 0, i32 0, i32 2, i32 1
  %129 = bitcast %"struct.std::__1::__compressed_pair_elem.34"* %128 to i64*
  %130 = bitcast %"class.v8::internal::ZoneVector"* %123 to i8*
  tail call void @llvm.memset.p0i8.i64(i8* align 8 %130, i8 0, i64 24, i1 false) #16
  store i64 %121, i64* %129, align 8
  %131 = icmp eq i32 %125, 0
  br i1 %131, label %160, label %132

132:                                              ; preds = %120
  %133 = icmp ugt i32 %126, 268435455
  br i1 %133, label %134, label %136

134:                                              ; preds = %132
  %135 = bitcast %"class.v8::internal::ZoneVector"* %123 to %"class.std::__1::__vector_base_common"*
  tail call void @_ZNKSt3__120__vector_base_commonILb1EE20__throw_length_errorEv(%"class.std::__1::__vector_base_common"* %135) #17
  unreachable

136:                                              ; preds = %132
  %137 = shl nsw i64 %127, 3
  %138 = getelementptr inbounds %"class.v8::internal::Zone", %"class.v8::internal::Zone"* %122, i64 0, i32 2
  %139 = load i64, i64* %138, align 8
  %140 = getelementptr inbounds %"class.v8::internal::Zone", %"class.v8::internal::Zone"* %122, i64 0, i32 3
  %141 = load i64, i64* %140, align 8
  %142 = sub i64 %141, %139
  %143 = icmp ugt i64 %137, %142
  br i1 %143, label %144, label %146, !prof !2

144:                                              ; preds = %136
  %145 = tail call i64 @_ZN2v88internal4Zone9NewExpandEm(%"class.v8::internal::Zone"* %122, i64 %137) #16
  br label %148

146:                                              ; preds = %136
  %147 = add i64 %139, %137
  store i64 %147, i64* %138, align 8
  br label %148

148:                                              ; preds = %146, %144
  %149 = phi i64 [ %145, %144 ], [ %139, %146 ]
  %150 = inttoptr i64 %149 to %"class.v8::internal::compiler::TopLevelLiveRange"**
  %151 = inttoptr i64 %149 to i8*
  %152 = getelementptr inbounds %"class.v8::internal::compiler::TopTierRegisterAllocationData", %"class.v8::internal::compiler::TopTierRegisterAllocationData"* %0, i64 0, i32 9, i32 0, i32 0, i32 1
  %153 = getelementptr inbounds %"class.v8::internal::ZoneVector", %"class.v8::internal::ZoneVector"* %123, i64 0, i32 0, i32 0, i32 0
  store %"class.v8::internal::compiler::TopLevelLiveRange"** %150, %"class.v8::internal::compiler::TopLevelLiveRange"*** %153, align 8
  %154 = getelementptr inbounds %"class.v8::internal::compiler::TopLevelLiveRange"*, %"class.v8::internal::compiler::TopLevelLiveRange"** %150, i64 %127
  %155 = getelementptr inbounds %"class.v8::internal::compiler::TopTierRegisterAllocationData", %"class.v8::internal::compiler::TopTierRegisterAllocationData"* %0, i64 0, i32 9, i32 0, i32 0, i32 2, i32 0, i32 0
  store %"class.v8::internal::compiler::TopLevelLiveRange"** %154, %"class.v8::internal::compiler::TopLevelLiveRange"*** %155, align 8
  call void @llvm.memset.p0i8.i64(i8* align 8 %151, i8 0, i64 %137, i1 false)
  %156 = bitcast %"class.v8::internal::compiler::TopLevelLiveRange"*** %152 to i64*
  %157 = ptrtoint %"class.v8::internal::compiler::TopLevelLiveRange"** %154 to i64
  store i64 %157, i64* %156, align 8
  %158 = load %"class.v8::internal::Zone"*, %"class.v8::internal::Zone"** %18, align 8
  %159 = ptrtoint %"class.v8::internal::Zone"* %158 to i64
  br label %160

160:                                              ; preds = %120, %148
  %161 = phi i64 [ %121, %120 ], [ %159, %148 ]
  %162 = phi %"class.v8::internal::Zone"* [ %122, %120 ], [ %158, %148 ]
  %163 = getelementptr inbounds %"class.v8::internal::compiler::TopTierRegisterAllocationData", %"class.v8::internal::compiler::TopTierRegisterAllocationData"* %0, i64 0, i32 10
  %164 = load %"class.v8::internal::RegisterConfiguration"*, %"class.v8::internal::RegisterConfiguration"** %22, align 8
  %165 = getelementptr inbounds %"class.v8::internal::RegisterConfiguration", %"class.v8::internal::RegisterConfiguration"* %164, i64 0, i32 1
  %166 = load i32, i32* %165, align 8
  %167 = shl nsw i32 %166, 1
  %168 = sext i32 %167 to i64
  %169 = getelementptr inbounds %"class.v8::internal::compiler::TopTierRegisterAllocationData", %"class.v8::internal::compiler::TopTierRegisterAllocationData"* %0, i64 0, i32 10, i32 0, i32 0, i32 2, i32 1
  %170 = bitcast %"struct.std::__1::__compressed_pair_elem.34"* %169 to i64*
  %171 = bitcast %"class.v8::internal::ZoneVector"* %163 to i8*
  tail call void @llvm.memset.p0i8.i64(i8* align 8 %171, i8 0, i64 24, i1 false) #16
  store i64 %161, i64* %170, align 8
  %172 = icmp eq i32 %166, 0
  br i1 %172, label %202, label %173

173:                                              ; preds = %160
  %174 = icmp ugt i32 %167, 268435455
  br i1 %174, label %175, label %177

175:                                              ; preds = %173
  %176 = bitcast %"class.v8::internal::ZoneVector"* %163 to %"class.std::__1::__vector_base_common"*
  tail call void @_ZNKSt3__120__vector_base_commonILb1EE20__throw_length_errorEv(%"class.std::__1::__vector_base_common"* %176) #17
  unreachable

177:                                              ; preds = %173
  %178 = shl nsw i64 %168, 3
  %179 = getelementptr inbounds %"class.v8::internal::Zone", %"class.v8::internal::Zone"* %162, i64 0, i32 2
  %180 = load i64, i64* %179, align 8
  %181 = getelementptr inbounds %"class.v8::internal::Zone", %"class.v8::internal::Zone"* %162, i64 0, i32 3
  %182 = load i64, i64* %181, align 8
  %183 = sub i64 %182, %180
  %184 = icmp ugt i64 %178, %183
  br i1 %184, label %185, label %187, !prof !2

185:                                              ; preds = %177
  %186 = tail call i64 @_ZN2v88internal4Zone9NewExpandEm(%"class.v8::internal::Zone"* %162, i64 %178) #16
  br label %189

187:                                              ; preds = %177
  %188 = add i64 %180, %178
  store i64 %188, i64* %179, align 8
  br label %189

189:                                              ; preds = %187, %185
  %190 = phi i64 [ %186, %185 ], [ %180, %187 ]
  %191 = inttoptr i64 %190 to %"class.v8::internal::compiler::TopLevelLiveRange"**
  %192 = inttoptr i64 %190 to i8*
  %193 = getelementptr inbounds %"class.v8::internal::compiler::TopTierRegisterAllocationData", %"class.v8::internal::compiler::TopTierRegisterAllocationData"* %0, i64 0, i32 10, i32 0, i32 0, i32 1
  %194 = getelementptr inbounds %"class.v8::internal::ZoneVector", %"class.v8::internal::ZoneVector"* %163, i64 0, i32 0, i32 0, i32 0
  store %"class.v8::internal::compiler::TopLevelLiveRange"** %191, %"class.v8::internal::compiler::TopLevelLiveRange"*** %194, align 8
  %195 = getelementptr inbounds %"class.v8::internal::compiler::TopLevelLiveRange"*, %"class.v8::internal::compiler::TopLevelLiveRange"** %191, i64 %168
  %196 = getelementptr inbounds %"class.v8::internal::compiler::TopTierRegisterAllocationData", %"class.v8::internal::compiler::TopTierRegisterAllocationData"* %0, i64 0, i32 10, i32 0, i32 0, i32 2, i32 0, i32 0
  store %"class.v8::internal::compiler::TopLevelLiveRange"** %195, %"class.v8::internal::compiler::TopLevelLiveRange"*** %196, align 8
  call void @llvm.memset.p0i8.i64(i8* align 8 %192, i8 0, i64 %178, i1 false)
  %197 = bitcast %"class.v8::internal::compiler::TopLevelLiveRange"*** %193 to i64*
  %198 = ptrtoint %"class.v8::internal::compiler::TopLevelLiveRange"** %195 to i64
  store i64 %198, i64* %197, align 8
  %199 = load %"class.v8::internal::Zone"*, %"class.v8::internal::Zone"** %18, align 8
  %200 = load %"class.v8::internal::RegisterConfiguration"*, %"class.v8::internal::RegisterConfiguration"** %22, align 8
  %201 = ptrtoint %"class.v8::internal::Zone"* %199 to i64
  br label %202

202:                                              ; preds = %160, %189
  %203 = phi i64 [ %161, %160 ], [ %201, %189 ]
  %204 = phi %"class.v8::internal::RegisterConfiguration"* [ %164, %160 ], [ %200, %189 ]
  %205 = phi %"class.v8::internal::Zone"* [ %162, %160 ], [ %199, %189 ]
  %206 = getelementptr inbounds %"class.v8::internal::compiler::TopTierRegisterAllocationData", %"class.v8::internal::compiler::TopTierRegisterAllocationData"* %0, i64 0, i32 11
  %207 = getelementptr inbounds %"class.v8::internal::compiler::TopTierRegisterAllocationData", %"class.v8::internal::compiler::TopTierRegisterAllocationData"* %0, i64 0, i32 11, i32 0, i32 0, i32 2, i32 1
  %208 = bitcast %"struct.std::__1::__compressed_pair_elem.34"* %207 to i64*
  %209 = bitcast %"class.v8::internal::ZoneVector"* %206 to i8*
  tail call void @llvm.memset.p0i8.i64(i8* align 8 %209, i8 0, i64 24, i1 false) #16
  store i64 %203, i64* %208, align 8
  %210 = getelementptr inbounds %"class.v8::internal::compiler::TopTierRegisterAllocationData", %"class.v8::internal::compiler::TopTierRegisterAllocationData"* %0, i64 0, i32 12
  %211 = getelementptr inbounds %"class.v8::internal::RegisterConfiguration", %"class.v8::internal::RegisterConfiguration"* %204, i64 0, i32 3
  %212 = load i32, i32* %211, align 8
  %213 = shl nsw i32 %212, 1
  %214 = sext i32 %213 to i64
  %215 = getelementptr inbounds %"class.v8::internal::compiler::TopTierRegisterAllocationData", %"class.v8::internal::compiler::TopTierRegisterAllocationData"* %0, i64 0, i32 12, i32 0, i32 0, i32 2, i32 1
  %216 = bitcast %"struct.std::__1::__compressed_pair_elem.34"* %215 to i64*
  %217 = bitcast %"class.v8::internal::ZoneVector"* %210 to i8*
  tail call void @llvm.memset.p0i8.i64(i8* align 8 %217, i8 0, i64 24, i1 false) #16
  store i64 %203, i64* %216, align 8
  %218 = icmp eq i32 %212, 0
  br i1 %218, label %247, label %219

219:                                              ; preds = %202
  %220 = icmp ugt i32 %213, 268435455
  br i1 %220, label %221, label %223

221:                                              ; preds = %219
  %222 = bitcast %"class.v8::internal::ZoneVector"* %210 to %"class.std::__1::__vector_base_common"*
  tail call void @_ZNKSt3__120__vector_base_commonILb1EE20__throw_length_errorEv(%"class.std::__1::__vector_base_common"* %222) #17
  unreachable

223:                                              ; preds = %219
  %224 = shl nsw i64 %214, 3
  %225 = getelementptr inbounds %"class.v8::internal::Zone", %"class.v8::internal::Zone"* %205, i64 0, i32 2
  %226 = load i64, i64* %225, align 8
  %227 = getelementptr inbounds %"class.v8::internal::Zone", %"class.v8::internal::Zone"* %205, i64 0, i32 3
  %228 = load i64, i64* %227, align 8
  %229 = sub i64 %228, %226
  %230 = icmp ugt i64 %224, %229
  br i1 %230, label %231, label %233, !prof !2

231:                                              ; preds = %223
  %232 = tail call i64 @_ZN2v88internal4Zone9NewExpandEm(%"class.v8::internal::Zone"* %205, i64 %224) #16
  br label %235

233:                                              ; preds = %223
  %234 = add i64 %226, %224
  store i64 %234, i64* %225, align 8
  br label %235

235:                                              ; preds = %233, %231
  %236 = phi i64 [ %232, %231 ], [ %226, %233 ]
  %237 = inttoptr i64 %236 to %"class.v8::internal::compiler::TopLevelLiveRange"**
  %238 = inttoptr i64 %236 to i8*
  %239 = getelementptr inbounds %"class.v8::internal::compiler::TopTierRegisterAllocationData", %"class.v8::internal::compiler::TopTierRegisterAllocationData"* %0, i64 0, i32 12, i32 0, i32 0, i32 1
  %240 = getelementptr inbounds %"class.v8::internal::ZoneVector", %"class.v8::internal::ZoneVector"* %210, i64 0, i32 0, i32 0, i32 0
  store %"class.v8::internal::compiler::TopLevelLiveRange"** %237, %"class.v8::internal::compiler::TopLevelLiveRange"*** %240, align 8
  %241 = getelementptr inbounds %"class.v8::internal::compiler::TopLevelLiveRange"*, %"class.v8::internal::compiler::TopLevelLiveRange"** %237, i64 %214
  %242 = getelementptr inbounds %"class.v8::internal::compiler::TopTierRegisterAllocationData", %"class.v8::internal::compiler::TopTierRegisterAllocationData"* %0, i64 0, i32 12, i32 0, i32 0, i32 2, i32 0, i32 0
  store %"class.v8::internal::compiler::TopLevelLiveRange"** %241, %"class.v8::internal::compiler::TopLevelLiveRange"*** %242, align 8
  call void @llvm.memset.p0i8.i64(i8* align 8 %238, i8 0, i64 %224, i1 false)
  %243 = bitcast %"class.v8::internal::compiler::TopLevelLiveRange"*** %239 to i64*
  %244 = ptrtoint %"class.v8::internal::compiler::TopLevelLiveRange"** %241 to i64
  store i64 %244, i64* %243, align 8
  %245 = load %"class.v8::internal::Zone"*, %"class.v8::internal::Zone"** %18, align 8
  %246 = ptrtoint %"class.v8::internal::Zone"* %245 to i64
  br label %247

247:                                              ; preds = %202, %235
  %248 = phi i64 [ %203, %202 ], [ %246, %235 ]
  %249 = phi %"class.v8::internal::Zone"* [ %205, %202 ], [ %245, %235 ]
  %250 = getelementptr inbounds %"class.v8::internal::compiler::TopTierRegisterAllocationData", %"class.v8::internal::compiler::TopTierRegisterAllocationData"* %0, i64 0, i32 13
  %251 = getelementptr inbounds %"class.v8::internal::compiler::TopTierRegisterAllocationData", %"class.v8::internal::compiler::TopTierRegisterAllocationData"* %0, i64 0, i32 13, i32 0, i32 0, i32 2, i32 1
  %252 = bitcast %"struct.std::__1::__compressed_pair_elem.34"* %251 to i64*
  %253 = bitcast %"class.v8::internal::ZoneVector"* %250 to i8*
  tail call void @llvm.memset.p0i8.i64(i8* align 8 %253, i8 0, i64 24, i1 false) #16
  store i64 %248, i64* %252, align 8
  %254 = getelementptr inbounds %"class.v8::internal::compiler::TopTierRegisterAllocationData", %"class.v8::internal::compiler::TopTierRegisterAllocationData"* %0, i64 0, i32 14
  %255 = load i32, i32* %124, align 8
  %256 = sext i32 %255 to i64
  %257 = getelementptr inbounds %"class.v8::internal::compiler::TopTierRegisterAllocationData", %"class.v8::internal::compiler::TopTierRegisterAllocationData"* %0, i64 0, i32 14, i32 0, i32 0, i32 2, i32 1
  %258 = bitcast %"struct.std::__1::__compressed_pair_elem.1289"* %257 to i64*
  %259 = bitcast %"class.v8::internal::ZoneVector.1284"* %254 to i8*
  tail call void @llvm.memset.p0i8.i64(i8* align 8 %259, i8 0, i64 24, i1 false) #16
  store i64 %248, i64* %258, align 8
  %260 = icmp eq i32 %255, 0
  br i1 %260, label %289, label %261

261:                                              ; preds = %247
  %262 = icmp ugt i32 %255, 268435455
  br i1 %262, label %263, label %265

263:                                              ; preds = %261
  %264 = bitcast %"class.v8::internal::ZoneVector.1284"* %254 to %"class.std::__1::__vector_base_common"*
  tail call void @_ZNKSt3__120__vector_base_commonILb1EE20__throw_length_errorEv(%"class.std::__1::__vector_base_common"* %264) #17
  unreachable

265:                                              ; preds = %261
  %266 = shl nsw i64 %256, 3
  %267 = getelementptr inbounds %"class.v8::internal::Zone", %"class.v8::internal::Zone"* %249, i64 0, i32 2
  %268 = load i64, i64* %267, align 8
  %269 = getelementptr inbounds %"class.v8::internal::Zone", %"class.v8::internal::Zone"* %249, i64 0, i32 3
  %270 = load i64, i64* %269, align 8
  %271 = sub i64 %270, %268
  %272 = icmp ugt i64 %266, %271
  br i1 %272, label %273, label %275, !prof !2

273:                                              ; preds = %265
  %274 = tail call i64 @_ZN2v88internal4Zone9NewExpandEm(%"class.v8::internal::Zone"* %249, i64 %266) #16
  br label %277

275:                                              ; preds = %265
  %276 = add i64 %268, %266
  store i64 %276, i64* %267, align 8
  br label %277

277:                                              ; preds = %275, %273
  %278 = phi i64 [ %274, %273 ], [ %268, %275 ]
  %279 = inttoptr i64 %278 to %"class.v8::internal::compiler::SpillRange"**
  %280 = inttoptr i64 %278 to i8*
  %281 = getelementptr inbounds %"class.v8::internal::compiler::TopTierRegisterAllocationData", %"class.v8::internal::compiler::TopTierRegisterAllocationData"* %0, i64 0, i32 14, i32 0, i32 0, i32 1
  %282 = getelementptr inbounds %"class.v8::internal::ZoneVector.1284", %"class.v8::internal::ZoneVector.1284"* %254, i64 0, i32 0, i32 0, i32 0
  store %"class.v8::internal::compiler::SpillRange"** %279, %"class.v8::internal::compiler::SpillRange"*** %282, align 8
  %283 = getelementptr inbounds %"class.v8::internal::compiler::SpillRange"*, %"class.v8::internal::compiler::SpillRange"** %279, i64 %256
  %284 = getelementptr inbounds %"class.v8::internal::compiler::TopTierRegisterAllocationData", %"class.v8::internal::compiler::TopTierRegisterAllocationData"* %0, i64 0, i32 14, i32 0, i32 0, i32 2, i32 0, i32 0
  store %"class.v8::internal::compiler::SpillRange"** %283, %"class.v8::internal::compiler::SpillRange"*** %284, align 8
  call void @llvm.memset.p0i8.i64(i8* align 8 %280, i8 0, i64 %266, i1 false)
  %285 = bitcast %"class.v8::internal::compiler::SpillRange"*** %281 to i64*
  %286 = ptrtoint %"class.v8::internal::compiler::SpillRange"** %283 to i64
  store i64 %286, i64* %285, align 8
  %287 = bitcast %"class.v8::internal::Zone"** %18 to i64*
  %288 = load i64, i64* %287, align 8
  br label %289

289:                                              ; preds = %247, %277
  %290 = phi i64 [ %288, %277 ], [ %248, %247 ]
  %291 = getelementptr inbounds %"class.v8::internal::compiler::TopTierRegisterAllocationData", %"class.v8::internal::compiler::TopTierRegisterAllocationData"* %0, i64 0, i32 15
  %292 = getelementptr inbounds %"class.v8::internal::compiler::TopTierRegisterAllocationData", %"class.v8::internal::compiler::TopTierRegisterAllocationData"* %0, i64 0, i32 15, i32 0, i32 0, i32 2, i32 1
  %293 = bitcast %"struct.std::__1::__compressed_pair_elem.1296"* %292 to i64*
  %294 = bitcast %"class.v8::internal::ZoneVector.1291"* %291 to i8*
  tail call void @llvm.memset.p0i8.i64(i8* align 8 %294, i8 0, i64 24, i1 false) #16
  store i64 %290, i64* %293, align 8
  %295 = getelementptr inbounds %"class.v8::internal::compiler::TopTierRegisterAllocationData", %"class.v8::internal::compiler::TopTierRegisterAllocationData"* %0, i64 0, i32 16
  %296 = getelementptr inbounds %"class.v8::internal::compiler::TopTierRegisterAllocationData", %"class.v8::internal::compiler::TopTierRegisterAllocationData"* %0, i64 0, i32 17
  %297 = getelementptr inbounds %"class.v8::internal::compiler::TopTierRegisterAllocationData", %"class.v8::internal::compiler::TopTierRegisterAllocationData"* %0, i64 0, i32 20
  %298 = bitcast %"class.v8::internal::BitVector"** %295 to i8*
  call void @llvm.memset.p0i8.i64(i8* align 8 %298, i8 0, i64 16, i1 false)
  %299 = load i32, i32* %124, align 8
  store i32 %299, i32* %297, align 8
  %300 = getelementptr inbounds %"class.v8::internal::compiler::TopTierRegisterAllocationData", %"class.v8::internal::compiler::TopTierRegisterAllocationData"* %0, i64 0, i32 21
  %301 = getelementptr inbounds %"class.v8::internal::compiler::TopTierRegisterAllocationData", %"class.v8::internal::compiler::TopTierRegisterAllocationData"* %0, i64 0, i32 21, i32 0, i32 0, i32 2, i32 1
  %302 = bitcast %"struct.std::__1::__compressed_pair_elem.1304"* %301 to i64*
  %303 = bitcast %"class.v8::internal::ZoneVector.1298"* %300 to i8*
  tail call void @llvm.memset.p0i8.i64(i8* align 8 %303, i8 0, i64 24, i1 false) #16
  store i64 %23, i64* %302, align 8
  %304 = getelementptr inbounds %"class.v8::internal::compiler::TopTierRegisterAllocationData", %"class.v8::internal::compiler::TopTierRegisterAllocationData"* %0, i64 0, i32 22
  %305 = load %"class.std::__1::vector.1171"*, %"class.std::__1::vector.1171"** %33, align 8
  %306 = getelementptr inbounds %"class.std::__1::vector.1171", %"class.std::__1::vector.1171"* %305, i64 0, i32 0, i32 1
  %307 = bitcast %"class.v8::internal::compiler::InstructionBlock"*** %306 to i64*
  %308 = load i64, i64* %307, align 8
  %309 = bitcast %"class.std::__1::vector.1171"* %305 to i64*
  %310 = load i64, i64* %309, align 8
  %311 = sub i64 %308, %310
  %312 = shl i64 %311, 29
  %313 = ashr i64 %312, 32
  %314 = getelementptr inbounds %"class.v8::internal::compiler::TopTierRegisterAllocationData", %"class.v8::internal::compiler::TopTierRegisterAllocationData"* %0, i64 0, i32 22, i32 0, i32 0, i32 2, i32 1
  %315 = bitcast %"struct.std::__1::__compressed_pair_elem.1318"* %314 to i64*
  %316 = bitcast %"class.v8::internal::ZoneVector.1306"* %304 to i8*
  tail call void @llvm.memset.p0i8.i64(i8* align 8 %316, i8 0, i64 24, i1 false) #16
  store i64 %23, i64* %315, align 8
  %317 = icmp eq i64 %313, 0
  br i1 %317, label %397, label %318

318:                                              ; preds = %289
  %319 = icmp ugt i64 %313, 67108863
  br i1 %319, label %320, label %322

320:                                              ; preds = %318
  %321 = bitcast %"class.v8::internal::ZoneVector.1306"* %304 to %"class.std::__1::__vector_base_common"*
  tail call void @_ZNKSt3__120__vector_base_commonILb1EE20__throw_length_errorEv(%"class.std::__1::__vector_base_common"* %321) #17
  unreachable

322:                                              ; preds = %318
  %323 = shl nsw i64 %313, 5
  %324 = getelementptr inbounds %"class.v8::internal::Zone", %"class.v8::internal::Zone"* %2, i64 0, i32 2
  %325 = load i64, i64* %324, align 8
  %326 = getelementptr inbounds %"class.v8::internal::Zone", %"class.v8::internal::Zone"* %2, i64 0, i32 3
  %327 = load i64, i64* %326, align 8
  %328 = sub i64 %327, %325
  %329 = icmp ugt i64 %323, %328
  br i1 %329, label %330, label %332, !prof !2

330:                                              ; preds = %322
  %331 = tail call i64 @_ZN2v88internal4Zone9NewExpandEm(%"class.v8::internal::Zone"* %2, i64 %323) #16
  br label %334

332:                                              ; preds = %322
  %333 = add i64 %325, %323
  store i64 %333, i64* %324, align 8
  br label %334

334:                                              ; preds = %330, %332
  %335 = phi i64 [ %331, %330 ], [ %325, %332 ]
  %336 = inttoptr i64 %335 to %"class.v8::internal::ZoneVector.1309"*
  %337 = getelementptr inbounds %"class.v8::internal::compiler::TopTierRegisterAllocationData", %"class.v8::internal::compiler::TopTierRegisterAllocationData"* %0, i64 0, i32 22, i32 0, i32 0, i32 1
  store %"class.v8::internal::ZoneVector.1309"* %336, %"class.v8::internal::ZoneVector.1309"** %337, align 8
  %338 = getelementptr inbounds %"class.v8::internal::ZoneVector.1306", %"class.v8::internal::ZoneVector.1306"* %304, i64 0, i32 0, i32 0, i32 0
  store %"class.v8::internal::ZoneVector.1309"* %336, %"class.v8::internal::ZoneVector.1309"** %338, align 8
  %339 = getelementptr inbounds %"class.v8::internal::ZoneVector.1309", %"class.v8::internal::ZoneVector.1309"* %336, i64 %313
  %340 = getelementptr inbounds %"class.v8::internal::compiler::TopTierRegisterAllocationData", %"class.v8::internal::compiler::TopTierRegisterAllocationData"* %0, i64 0, i32 22, i32 0, i32 0, i32 2, i32 0, i32 0
  store %"class.v8::internal::ZoneVector.1309"* %339, %"class.v8::internal::ZoneVector.1309"** %340, align 8
  %341 = shl nsw i64 %313, 5
  %342 = add nsw i64 %341, -32
  %343 = lshr exact i64 %342, 5
  %344 = add nuw nsw i64 %343, 1
  %345 = and i64 %344, 7
  %346 = icmp eq i64 %345, 0
  br i1 %346, label %356, label %347

347:                                              ; preds = %334, %347
  %348 = phi %"class.v8::internal::ZoneVector.1309"* [ %353, %347 ], [ %336, %334 ]
  %349 = phi i64 [ %354, %347 ], [ %345, %334 ]
  %350 = getelementptr inbounds %"class.v8::internal::ZoneVector.1309", %"class.v8::internal::ZoneVector.1309"* %348, i64 0, i32 0, i32 0, i32 2, i32 1
  %351 = bitcast %"struct.std::__1::__compressed_pair_elem.1314"* %350 to i64*
  %352 = bitcast %"class.v8::internal::ZoneVector.1309"* %348 to i8*
  tail call void @llvm.memset.p0i8.i64(i8* align 8 %352, i8 0, i64 24, i1 false) #16
  store i64 %23, i64* %351, align 8
  %353 = getelementptr inbounds %"class.v8::internal::ZoneVector.1309", %"class.v8::internal::ZoneVector.1309"* %348, i64 1
  %354 = add i64 %349, -1
  %355 = icmp eq i64 %354, 0
  br i1 %355, label %356, label %347, !llvm.loop !67

356:                                              ; preds = %347, %334
  %357 = phi %"class.v8::internal::ZoneVector.1309"* [ %336, %334 ], [ %353, %347 ]
  %358 = icmp ult i64 %342, 224
  br i1 %358, label %394, label %359

359:                                              ; preds = %356, %359
  %360 = phi %"class.v8::internal::ZoneVector.1309"* [ %392, %359 ], [ %357, %356 ]
  %361 = getelementptr inbounds %"class.v8::internal::ZoneVector.1309", %"class.v8::internal::ZoneVector.1309"* %360, i64 0, i32 0, i32 0, i32 2, i32 1
  %362 = bitcast %"struct.std::__1::__compressed_pair_elem.1314"* %361 to i64*
  %363 = bitcast %"class.v8::internal::ZoneVector.1309"* %360 to i8*
  tail call void @llvm.memset.p0i8.i64(i8* align 8 %363, i8 0, i64 24, i1 false) #16
  store i64 %23, i64* %362, align 8
  %364 = getelementptr inbounds %"class.v8::internal::ZoneVector.1309", %"class.v8::internal::ZoneVector.1309"* %360, i64 1
  %365 = getelementptr inbounds %"class.v8::internal::ZoneVector.1309", %"class.v8::internal::ZoneVector.1309"* %360, i64 1, i32 0, i32 0, i32 2, i32 1
  %366 = bitcast %"struct.std::__1::__compressed_pair_elem.1314"* %365 to i64*
  %367 = bitcast %"class.v8::internal::ZoneVector.1309"* %364 to i8*
  tail call void @llvm.memset.p0i8.i64(i8* align 8 %367, i8 0, i64 24, i1 false) #16
  store i64 %23, i64* %366, align 8
  %368 = getelementptr inbounds %"class.v8::internal::ZoneVector.1309", %"class.v8::internal::ZoneVector.1309"* %360, i64 2
  %369 = getelementptr inbounds %"class.v8::internal::ZoneVector.1309", %"class.v8::internal::ZoneVector.1309"* %360, i64 2, i32 0, i32 0, i32 2, i32 1
  %370 = bitcast %"struct.std::__1::__compressed_pair_elem.1314"* %369 to i64*
  %371 = bitcast %"class.v8::internal::ZoneVector.1309"* %368 to i8*
  tail call void @llvm.memset.p0i8.i64(i8* align 8 %371, i8 0, i64 24, i1 false) #16
  store i64 %23, i64* %370, align 8
  %372 = getelementptr inbounds %"class.v8::internal::ZoneVector.1309", %"class.v8::internal::ZoneVector.1309"* %360, i64 3
  %373 = getelementptr inbounds %"class.v8::internal::ZoneVector.1309", %"class.v8::internal::ZoneVector.1309"* %360, i64 3, i32 0, i32 0, i32 2, i32 1
  %374 = bitcast %"struct.std::__1::__compressed_pair_elem.1314"* %373 to i64*
  %375 = bitcast %"class.v8::internal::ZoneVector.1309"* %372 to i8*
  tail call void @llvm.memset.p0i8.i64(i8* align 8 %375, i8 0, i64 24, i1 false) #16
  store i64 %23, i64* %374, align 8
  %376 = getelementptr inbounds %"class.v8::internal::ZoneVector.1309", %"class.v8::internal::ZoneVector.1309"* %360, i64 4
  %377 = getelementptr inbounds %"class.v8::internal::ZoneVector.1309", %"class.v8::internal::ZoneVector.1309"* %360, i64 4, i32 0, i32 0, i32 2, i32 1
  %378 = bitcast %"struct.std::__1::__compressed_pair_elem.1314"* %377 to i64*
  %379 = bitcast %"class.v8::internal::ZoneVector.1309"* %376 to i8*
  tail call void @llvm.memset.p0i8.i64(i8* align 8 %379, i8 0, i64 24, i1 false) #16
  store i64 %23, i64* %378, align 8
  %380 = getelementptr inbounds %"class.v8::internal::ZoneVector.1309", %"class.v8::internal::ZoneVector.1309"* %360, i64 5
  %381 = getelementptr inbounds %"class.v8::internal::ZoneVector.1309", %"class.v8::internal::ZoneVector.1309"* %360, i64 5, i32 0, i32 0, i32 2, i32 1
  %382 = bitcast %"struct.std::__1::__compressed_pair_elem.1314"* %381 to i64*
  %383 = bitcast %"class.v8::internal::ZoneVector.1309"* %380 to i8*
  tail call void @llvm.memset.p0i8.i64(i8* align 8 %383, i8 0, i64 24, i1 false) #16
  store i64 %23, i64* %382, align 8
  %384 = getelementptr inbounds %"class.v8::internal::ZoneVector.1309", %"class.v8::internal::ZoneVector.1309"* %360, i64 6
  %385 = getelementptr inbounds %"class.v8::internal::ZoneVector.1309", %"class.v8::internal::ZoneVector.1309"* %360, i64 6, i32 0, i32 0, i32 2, i32 1
  %386 = bitcast %"struct.std::__1::__compressed_pair_elem.1314"* %385 to i64*
  %387 = bitcast %"class.v8::internal::ZoneVector.1309"* %384 to i8*
  tail call void @llvm.memset.p0i8.i64(i8* align 8 %387, i8 0, i64 24, i1 false) #16
  store i64 %23, i64* %386, align 8
  %388 = getelementptr inbounds %"class.v8::internal::ZoneVector.1309", %"class.v8::internal::ZoneVector.1309"* %360, i64 7
  %389 = getelementptr inbounds %"class.v8::internal::ZoneVector.1309", %"class.v8::internal::ZoneVector.1309"* %360, i64 7, i32 0, i32 0, i32 2, i32 1
  %390 = bitcast %"struct.std::__1::__compressed_pair_elem.1314"* %389 to i64*
  %391 = bitcast %"class.v8::internal::ZoneVector.1309"* %388 to i8*
  tail call void @llvm.memset.p0i8.i64(i8* align 8 %391, i8 0, i64 24, i1 false) #16
  store i64 %23, i64* %390, align 8
  %392 = getelementptr inbounds %"class.v8::internal::ZoneVector.1309", %"class.v8::internal::ZoneVector.1309"* %360, i64 8
  %393 = icmp eq %"class.v8::internal::ZoneVector.1309"* %392, %339
  br i1 %393, label %394, label %359

394:                                              ; preds = %359, %356
  %395 = bitcast %"class.v8::internal::ZoneVector.1309"** %337 to i64*
  %396 = ptrtoint %"class.v8::internal::ZoneVector.1309"* %339 to i64
  store i64 %396, i64* %395, align 8
  br label %397

397:                                              ; preds = %394, %289
  %398 = getelementptr inbounds %"class.v8::internal::compiler::TopTierRegisterAllocationData", %"class.v8::internal::compiler::TopTierRegisterAllocationData"* %0, i64 0, i32 23, i32 0
  store i32 %5, i32* %398, align 8
  %399 = getelementptr inbounds %"class.v8::internal::compiler::TopTierRegisterAllocationData", %"class.v8::internal::compiler::TopTierRegisterAllocationData"* %0, i64 0, i32 24
  store %"class.v8::internal::TickCounter"* %6, %"class.v8::internal::TickCounter"** %399, align 8
  %400 = getelementptr inbounds %"class.v8::internal::compiler::TopTierRegisterAllocationData", %"class.v8::internal::compiler::TopTierRegisterAllocationData"* %0, i64 0, i32 25, i32 0, i32 0, i32 0
  %401 = getelementptr inbounds %"class.v8::internal::compiler::TopTierRegisterAllocationData", %"class.v8::internal::compiler::TopTierRegisterAllocationData"* %0, i64 0, i32 25, i32 0, i32 0, i32 1, i32 1
  %402 = bitcast %"struct.std::__1::__compressed_pair_elem.1324"* %401 to i64*
  %403 = getelementptr inbounds %"class.v8::internal::compiler::TopTierRegisterAllocationData", %"class.v8::internal::compiler::TopTierRegisterAllocationData"* %0, i64 0, i32 25, i32 0, i32 0, i32 1
  %404 = bitcast %"class.std::__1::__compressed_pair.1323"* %403 to i64*
  store i64 0, i64* %404, align 8
  store i64 %23, i64* %402, align 8
  %405 = getelementptr inbounds %"class.v8::internal::compiler::TopTierRegisterAllocationData", %"class.v8::internal::compiler::TopTierRegisterAllocationData"* %0, i64 0, i32 25, i32 0, i32 0, i32 2, i32 0, i32 0
  store i64 0, i64* %405, align 8
  %406 = getelementptr inbounds %"class.v8::internal::compiler::TopTierRegisterAllocationData", %"class.v8::internal::compiler::TopTierRegisterAllocationData"* %0, i64 0, i32 25, i32 0, i32 0, i32 1, i32 0, i32 0
  store %"class.std::__1::__tree_end_node"* %406, %"class.std::__1::__tree_end_node"** %400, align 8
  %407 = load %"class.v8::internal::compiler::InstructionSequence"*, %"class.v8::internal::compiler::InstructionSequence"** %20, align 8
  %408 = getelementptr inbounds %"class.v8::internal::compiler::InstructionSequence", %"class.v8::internal::compiler::InstructionSequence"* %407, i64 0, i32 1
  %409 = load %"class.v8::internal::Zone"*, %"class.v8::internal::Zone"** %408, align 8
  %410 = bitcast i32* %9 to i8*
  call void @llvm.lifetime.start.p0i8(i64 4, i8* nonnull %410) #16
  %411 = load %"class.v8::internal::RegisterConfiguration"*, %"class.v8::internal::RegisterConfiguration"** %22, align 8
  %412 = getelementptr inbounds %"class.v8::internal::RegisterConfiguration", %"class.v8::internal::RegisterConfiguration"* %411, i64 0, i32 1
  %413 = load i32, i32* %412, align 8
  store i32 %413, i32* %9, align 4
  %414 = bitcast %"class.v8::internal::Zone"** %10 to i8*
  call void @llvm.lifetime.start.p0i8(i64 8, i8* nonnull %414) #16
  %415 = ptrtoint %"class.v8::internal::Zone"* %409 to i64
  %416 = bitcast %"class.v8::internal::Zone"** %10 to i64*
  store i64 %415, i64* %416, align 8
  %417 = call %"class.v8::internal::BitVector"* @_ZN2v88internal4Zone3NewINS0_9BitVectorEJiPS1_EEEPT_DpOT0_(%"class.v8::internal::Zone"* %409, i32* nonnull dereferenceable(4) %9, %"class.v8::internal::Zone"** nonnull dereferenceable(8) %10)
  store %"class.v8::internal::BitVector"* %417, %"class.v8::internal::BitVector"** %295, align 8
  call void @llvm.lifetime.end.p0i8(i64 8, i8* nonnull %414) #16
  call void @llvm.lifetime.end.p0i8(i64 4, i8* nonnull %410) #16
  %418 = load %"class.v8::internal::compiler::InstructionSequence"*, %"class.v8::internal::compiler::InstructionSequence"** %20, align 8
  %419 = getelementptr inbounds %"class.v8::internal::compiler::InstructionSequence", %"class.v8::internal::compiler::InstructionSequence"* %418, i64 0, i32 1
  %420 = load %"class.v8::internal::Zone"*, %"class.v8::internal::Zone"** %419, align 8
  %421 = bitcast i32* %11 to i8*
  call void @llvm.lifetime.start.p0i8(i64 4, i8* nonnull %421) #16
  %422 = load %"class.v8::internal::RegisterConfiguration"*, %"class.v8::internal::RegisterConfiguration"** %22, align 8
  %423 = getelementptr inbounds %"class.v8::internal::RegisterConfiguration", %"class.v8::internal::RegisterConfiguration"* %422, i64 0, i32 3
  %424 = load i32, i32* %423, align 8
  store i32 %424, i32* %11, align 4
  %425 = bitcast %"class.v8::internal::Zone"** %12 to i8*
  call void @llvm.lifetime.start.p0i8(i64 8, i8* nonnull %425) #16
  %426 = ptrtoint %"class.v8::internal::Zone"* %420 to i64
  %427 = bitcast %"class.v8::internal::Zone"** %12 to i64*
  store i64 %426, i64* %427, align 8
  %428 = call %"class.v8::internal::BitVector"* @_ZN2v88internal4Zone3NewINS0_9BitVectorEJiPS1_EEEPT_DpOT0_(%"class.v8::internal::Zone"* %420, i32* nonnull dereferenceable(4) %11, %"class.v8::internal::Zone"** nonnull dereferenceable(8) %12)
  store %"class.v8::internal::BitVector"* %428, %"class.v8::internal::BitVector"** %296, align 8
  call void @llvm.lifetime.end.p0i8(i64 8, i8* nonnull %425) #16
  call void @llvm.lifetime.end.p0i8(i64 4, i8* nonnull %421) #16
  %429 = load %"class.v8::internal::compiler::InstructionSequence"*, %"class.v8::internal::compiler::InstructionSequence"** %20, align 8
  %430 = getelementptr inbounds %"class.v8::internal::compiler::InstructionSequence", %"class.v8::internal::compiler::InstructionSequence"* %429, i64 0, i32 1
  %431 = load %"class.v8::internal::Zone"*, %"class.v8::internal::Zone"** %430, align 8
  %432 = bitcast i32* %13 to i8*
  call void @llvm.lifetime.start.p0i8(i64 4, i8* nonnull %432) #16
  %433 = load %"class.v8::internal::RegisterConfiguration"*, %"class.v8::internal::RegisterConfiguration"** %22, align 8
  %434 = getelementptr inbounds %"class.v8::internal::RegisterConfiguration", %"class.v8::internal::RegisterConfiguration"* %433, i64 0, i32 1
  %435 = load i32, i32* %434, align 8
  store i32 %435, i32* %13, align 4
  %436 = bitcast %"class.v8::internal::Zone"** %14 to i8*
  call void @llvm.lifetime.start.p0i8(i64 8, i8* nonnull %436) #16
  %437 = ptrtoint %"class.v8::internal::Zone"* %431 to i64
  %438 = bitcast %"class.v8::internal::Zone"** %14 to i64*
  store i64 %437, i64* %438, align 8
  %439 = call %"class.v8::internal::BitVector"* @_ZN2v88internal4Zone3NewINS0_9BitVectorEJiPS1_EEEPT_DpOT0_(%"class.v8::internal::Zone"* %431, i32* nonnull dereferenceable(4) %13, %"class.v8::internal::Zone"** nonnull dereferenceable(8) %14)
  %440 = getelementptr inbounds %"class.v8::internal::compiler::TopTierRegisterAllocationData", %"class.v8::internal::compiler::TopTierRegisterAllocationData"* %0, i64 0, i32 18
  store %"class.v8::internal::BitVector"* %439, %"class.v8::internal::BitVector"** %440, align 8
  call void @llvm.lifetime.end.p0i8(i64 8, i8* nonnull %436) #16
  call void @llvm.lifetime.end.p0i8(i64 4, i8* nonnull %432) #16
  %441 = load %"class.v8::internal::compiler::InstructionSequence"*, %"class.v8::internal::compiler::InstructionSequence"** %20, align 8
  %442 = getelementptr inbounds %"class.v8::internal::compiler::InstructionSequence", %"class.v8::internal::compiler::InstructionSequence"* %441, i64 0, i32 1
  %443 = load %"class.v8::internal::Zone"*, %"class.v8::internal::Zone"** %442, align 8
  %444 = bitcast i32* %15 to i8*
  call void @llvm.lifetime.start.p0i8(i64 4, i8* nonnull %444) #16
  %445 = load %"class.v8::internal::RegisterConfiguration"*, %"class.v8::internal::RegisterConfiguration"** %22, align 8
  %446 = getelementptr inbounds %"class.v8::internal::RegisterConfiguration", %"class.v8::internal::RegisterConfiguration"* %445, i64 0, i32 3
  %447 = load i32, i32* %446, align 8
  store i32 %447, i32* %15, align 4
  %448 = bitcast %"class.v8::internal::Zone"** %16 to i8*
  call void @llvm.lifetime.start.p0i8(i64 8, i8* nonnull %448) #16
  %449 = ptrtoint %"class.v8::internal::Zone"* %443 to i64
  %450 = bitcast %"class.v8::internal::Zone"** %16 to i64*
  store i64 %449, i64* %450, align 8
  %451 = call %"class.v8::internal::BitVector"* @_ZN2v88internal4Zone3NewINS0_9BitVectorEJiPS1_EEEPT_DpOT0_(%"class.v8::internal::Zone"* %443, i32* nonnull dereferenceable(4) %15, %"class.v8::internal::Zone"** nonnull dereferenceable(8) %16)
  %452 = getelementptr inbounds %"class.v8::internal::compiler::TopTierRegisterAllocationData", %"class.v8::internal::compiler::TopTierRegisterAllocationData"* %0, i64 0, i32 19
  store %"class.v8::internal::BitVector"* %451, %"class.v8::internal::BitVector"** %452, align 8
  call void @llvm.lifetime.end.p0i8(i64 8, i8* nonnull %448) #16
  call void @llvm.lifetime.end.p0i8(i64 4, i8* nonnull %444) #16
  %453 = load %"class.v8::internal::compiler::Frame"*, %"class.v8::internal::compiler::Frame"** %19, align 8
  %454 = bitcast %"class.v8::internal::BitVector"** %295 to i64*
  %455 = load i64, i64* %454, align 8
  %456 = getelementptr inbounds %"class.v8::internal::compiler::Frame", %"class.v8::internal::compiler::Frame"* %453, i64 0, i32 4
  %457 = bitcast %"class.v8::internal::BitVector"** %456 to i64*
  store i64 %455, i64* %457, align 8
  %458 = load %"class.v8::internal::compiler::Frame"*, %"class.v8::internal::compiler::Frame"** %19, align 8
  %459 = bitcast %"class.v8::internal::BitVector"** %296 to i64*
  %460 = load i64, i64* %459, align 8
  %461 = getelementptr inbounds %"class.v8::internal::compiler::Frame", %"class.v8::internal::compiler::Frame"* %458, i64 0, i32 5
  %462 = bitcast %"class.v8::internal::BitVector"** %461 to i64*
  store i64 %460, i64* %462, align 8
  ret void
}

; Function Attrs: nounwind ssp uwtable
define linkonce_odr hidden %"class.v8::internal::BitVector"* @_ZN2v88internal4Zone3NewINS0_9BitVectorEJiPS1_EEEPT_DpOT0_(%"class.v8::internal::Zone"*, i32* dereferenceable(4), %"class.v8::internal::Zone"** dereferenceable(8)) local_unnamed_addr #0 comdat align 2 {
  %4 = getelementptr inbounds %"class.v8::internal::Zone", %"class.v8::internal::Zone"* %0, i64 0, i32 2
  %5 = load i64, i64* %4, align 8
  %6 = getelementptr inbounds %"class.v8::internal::Zone", %"class.v8::internal::Zone"* %0, i64 0, i32 3
  %7 = load i64, i64* %6, align 8
  %8 = sub i64 %7, %5
  %9 = icmp ult i64 %8, 16
  br i1 %9, label %10, label %12, !prof !2

10:                                               ; preds = %3
  %11 = tail call i64 @_ZN2v88internal4Zone9NewExpandEm(%"class.v8::internal::Zone"* %0, i64 16) #16
  br label %14

12:                                               ; preds = %3
  %13 = add i64 %5, 16
  store i64 %13, i64* %4, align 8
  br label %14

14:                                               ; preds = %10, %12
  %15 = phi i64 [ %11, %10 ], [ %5, %12 ]
  %16 = inttoptr i64 %15 to %"class.v8::internal::BitVector"*
  %17 = load i32, i32* %1, align 4
  %18 = load %"class.v8::internal::Zone"*, %"class.v8::internal::Zone"** %2, align 8
  %19 = getelementptr inbounds %"class.v8::internal::BitVector", %"class.v8::internal::BitVector"* %16, i64 0, i32 0
  store i32 %17, i32* %19, align 8
  %20 = getelementptr inbounds %"class.v8::internal::BitVector", %"class.v8::internal::BitVector"* %16, i64 0, i32 1
  %21 = icmp slt i32 %17, 65
  br i1 %21, label %22, label %25

22:                                               ; preds = %14
  store i32 1, i32* %20, align 4
  %23 = getelementptr inbounds %"class.v8::internal::BitVector", %"class.v8::internal::BitVector"* %16, i64 0, i32 2
  %24 = bitcast %"union.v8::internal::BitVector::DataStorage"* %23 to i64*
  store i64 0, i64* %24, align 8
  br label %64

25:                                               ; preds = %14
  %26 = add nsw i32 %17, -1
  %27 = sdiv i32 %26, 64
  %28 = add nuw nsw i32 %27, 1
  store i32 %28, i32* %20, align 4
  %29 = getelementptr inbounds %"class.v8::internal::BitVector", %"class.v8::internal::BitVector"* %16, i64 0, i32 2
  %30 = bitcast %"union.v8::internal::BitVector::DataStorage"* %29 to i64*
  store i64 0, i64* %30, align 8
  %31 = sext i32 %28 to i64
  %32 = shl nsw i64 %31, 3
  %33 = getelementptr inbounds %"class.v8::internal::Zone", %"class.v8::internal::Zone"* %18, i64 0, i32 2
  %34 = load i64, i64* %33, align 8
  %35 = getelementptr inbounds %"class.v8::internal::Zone", %"class.v8::internal::Zone"* %18, i64 0, i32 3
  %36 = load i64, i64* %35, align 8
  %37 = sub i64 %36, %34
  %38 = icmp ugt i64 %32, %37
  br i1 %38, label %39, label %41, !prof !2

39:                                               ; preds = %25
  %40 = tail call i64 @_ZN2v88internal4Zone9NewExpandEm(%"class.v8::internal::Zone"* %18, i64 %32) #16
  br label %43

41:                                               ; preds = %25
  %42 = add i64 %34, %32
  store i64 %42, i64* %33, align 8
  br label %43

43:                                               ; preds = %41, %39
  %44 = phi i64 [ %40, %39 ], [ %34, %41 ]
  %45 = inttoptr i64 %44 to i64*
  %46 = getelementptr inbounds %"union.v8::internal::BitVector::DataStorage", %"union.v8::internal::BitVector::DataStorage"* %29, i64 0, i32 0
  store i64* %45, i64** %46, align 8
  %47 = load i32, i32* %20, align 4
  %48 = icmp eq i32 %47, 1
  br i1 %48, label %55, label %49

49:                                               ; preds = %43
  %50 = icmp sgt i32 %47, 0
  br i1 %50, label %51, label %64

51:                                               ; preds = %49
  %52 = getelementptr inbounds %"class.v8::internal::BitVector", %"class.v8::internal::BitVector"* %16, i64 0, i32 2, i32 0
  store i64 0, i64* %45, align 8
  %53 = load i32, i32* %20, align 4
  %54 = icmp sgt i32 %53, 1
  br i1 %54, label %56, label %64

55:                                               ; preds = %43
  store i64 0, i64* %30, align 8
  br label %64

56:                                               ; preds = %51, %56
  %57 = phi i64 [ %60, %56 ], [ 1, %51 ]
  %58 = load i64*, i64** %52, align 8
  %59 = getelementptr inbounds i64, i64* %58, i64 %57
  store i64 0, i64* %59, align 8
  %60 = add nuw nsw i64 %57, 1
  %61 = load i32, i32* %20, align 4
  %62 = sext i32 %61 to i64
  %63 = icmp slt i64 %60, %62
  br i1 %63, label %56, label %64

64:                                               ; preds = %56, %51, %22, %49, %55
  ret %"class.v8::internal::BitVector"* %16
}

; Function Attrs: nounwind ssp uwtable
define hidden %"class.v8::internal::compiler::MoveOperands"* @_ZN2v88internal8compiler29TopTierRegisterAllocationData10AddGapMoveEiNS1_11Instruction11GapPositionERKNS1_18InstructionOperandES7_(%"class.v8::internal::compiler::TopTierRegisterAllocationData"* nocapture readonly, i32, i32, %"class.v8::internal::compiler::InstructionOperand"* dereferenceable(8), %"class.v8::internal::compiler::InstructionOperand"* dereferenceable(8)) local_unnamed_addr #0 align 2 {
  %6 = getelementptr inbounds %"class.v8::internal::compiler::TopTierRegisterAllocationData", %"class.v8::internal::compiler::TopTierRegisterAllocationData"* %0, i64 0, i32 3
  %7 = load %"class.v8::internal::compiler::InstructionSequence"*, %"class.v8::internal::compiler::InstructionSequence"** %6, align 8
  %8 = sext i32 %1 to i64
  %9 = getelementptr inbounds %"class.v8::internal::compiler::InstructionSequence", %"class.v8::internal::compiler::InstructionSequence"* %7, i64 0, i32 8, i32 0, i32 0, i32 1
  %10 = load i64, i64* %9, align 8
  %11 = add i64 %10, %8
  %12 = getelementptr inbounds %"class.v8::internal::compiler::InstructionSequence", %"class.v8::internal::compiler::InstructionSequence"* %7, i64 0, i32 8, i32 0, i32 0, i32 0, i32 1
  %13 = load %"class.v8::internal::compiler::Instruction"***, %"class.v8::internal::compiler::Instruction"**** %12, align 8
  %14 = lshr i64 %11, 9
  %15 = getelementptr inbounds %"class.v8::internal::compiler::Instruction"**, %"class.v8::internal::compiler::Instruction"*** %13, i64 %14
  %16 = load %"class.v8::internal::compiler::Instruction"**, %"class.v8::internal::compiler::Instruction"*** %15, align 8
  %17 = and i64 %11, 511
  %18 = getelementptr inbounds %"class.v8::internal::compiler::Instruction"*, %"class.v8::internal::compiler::Instruction"** %16, i64 %17
  %19 = load %"class.v8::internal::compiler::Instruction"*, %"class.v8::internal::compiler::Instruction"** %18, align 8
  %20 = getelementptr inbounds %"class.v8::internal::compiler::InstructionSequence", %"class.v8::internal::compiler::InstructionSequence"* %7, i64 0, i32 1
  %21 = load %"class.v8::internal::Zone"*, %"class.v8::internal::Zone"** %20, align 8
  %22 = ptrtoint %"class.v8::internal::Zone"* %21 to i64
  %23 = zext i32 %2 to i64
  %24 = getelementptr inbounds %"class.v8::internal::compiler::Instruction", %"class.v8::internal::compiler::Instruction"* %19, i64 0, i32 2, i64 %23
  %25 = load %"class.v8::internal::compiler::ParallelMove"*, %"class.v8::internal::compiler::ParallelMove"** %24, align 8
  %26 = icmp eq %"class.v8::internal::compiler::ParallelMove"* %25, null
  br i1 %26, label %27, label %44

27:                                               ; preds = %5
  %28 = getelementptr inbounds %"class.v8::internal::Zone", %"class.v8::internal::Zone"* %21, i64 0, i32 2
  %29 = load i64, i64* %28, align 8
  %30 = getelementptr inbounds %"class.v8::internal::Zone", %"class.v8::internal::Zone"* %21, i64 0, i32 3
  %31 = load i64, i64* %30, align 8
  %32 = sub i64 %31, %29
  %33 = icmp ult i64 %32, 32
  br i1 %33, label %34, label %36, !prof !2

34:                                               ; preds = %27
  %35 = tail call i64 @_ZN2v88internal4Zone9NewExpandEm(%"class.v8::internal::Zone"* %21, i64 32) #16
  br label %38

36:                                               ; preds = %27
  %37 = add i64 %29, 32
  store i64 %37, i64* %28, align 8
  br label %38

38:                                               ; preds = %36, %34
  %39 = phi i64 [ %35, %34 ], [ %29, %36 ]
  %40 = inttoptr i64 %39 to i8*
  %41 = inttoptr i64 %39 to %"class.v8::internal::compiler::ParallelMove"*
  %42 = getelementptr inbounds %"class.v8::internal::compiler::ParallelMove", %"class.v8::internal::compiler::ParallelMove"* %41, i64 0, i32 0, i32 0, i32 0, i32 2, i32 1
  %43 = bitcast %"struct.std::__1::__compressed_pair_elem.1208"* %42 to i64*
  tail call void @llvm.memset.p0i8.i64(i8* align 8 %40, i8 0, i64 24, i1 false) #16
  store i64 %22, i64* %43, align 8
  store %"class.v8::internal::compiler::ParallelMove"* %41, %"class.v8::internal::compiler::ParallelMove"** %24, align 8
  br label %44

44:                                               ; preds = %5, %38
  %45 = phi %"class.v8::internal::compiler::ParallelMove"* [ %41, %38 ], [ %25, %5 ]
  %46 = getelementptr inbounds %"class.v8::internal::compiler::ParallelMove", %"class.v8::internal::compiler::ParallelMove"* %45, i64 0, i32 0, i32 0, i32 0, i32 2, i32 1, i32 0, i32 0
  %47 = load %"class.v8::internal::Zone"*, %"class.v8::internal::Zone"** %46, align 8
  %48 = tail call %"class.v8::internal::compiler::MoveOperands"* @_ZN2v88internal8compiler12ParallelMove7AddMoveERKNS1_18InstructionOperandES5_PNS0_4ZoneE(%"class.v8::internal::compiler::ParallelMove"* %45, %"class.v8::internal::compiler::InstructionOperand"* dereferenceable(8) %3, %"class.v8::internal::compiler::InstructionOperand"* dereferenceable(8) %4, %"class.v8::internal::Zone"* %47) #16
  ret %"class.v8::internal::compiler::MoveOperands"* %48
}

; Function Attrs: nounwind ssp uwtable
define hidden zeroext i8 @_ZN2v88internal8compiler29TopTierRegisterAllocationData17RepresentationForEi(%"class.v8::internal::compiler::TopTierRegisterAllocationData"* nocapture readonly, i32) local_unnamed_addr #0 align 2 {
  %3 = getelementptr inbounds %"class.v8::internal::compiler::TopTierRegisterAllocationData", %"class.v8::internal::compiler::TopTierRegisterAllocationData"* %0, i64 0, i32 3
  %4 = load %"class.v8::internal::compiler::InstructionSequence"*, %"class.v8::internal::compiler::InstructionSequence"** %3, align 8
  %5 = tail call zeroext i8 @_ZNK2v88internal8compiler19InstructionSequence17GetRepresentationEi(%"class.v8::internal::compiler::InstructionSequence"* %4, i32 %1) #16
  ret i8 %5
}

declare zeroext i8 @_ZNK2v88internal8compiler19InstructionSequence17GetRepresentationEi(%"class.v8::internal::compiler::InstructionSequence"*, i32) local_unnamed_addr #6

; Function Attrs: nounwind ssp uwtable
define hidden %"class.v8::internal::compiler::TopLevelLiveRange"* @_ZN2v88internal8compiler29TopTierRegisterAllocationData23GetOrCreateLiveRangeForEi(%"class.v8::internal::compiler::TopTierRegisterAllocationData"*, i32) local_unnamed_addr #0 align 2 {
  %3 = alloca %"class.v8::internal::compiler::TopLevelLiveRange"*, align 8
  %4 = getelementptr inbounds %"class.v8::internal::compiler::TopTierRegisterAllocationData", %"class.v8::internal::compiler::TopTierRegisterAllocationData"* %0, i64 0, i32 9, i32 0
  %5 = getelementptr inbounds %"class.v8::internal::compiler::TopTierRegisterAllocationData", %"class.v8::internal::compiler::TopTierRegisterAllocationData"* %0, i64 0, i32 9, i32 0, i32 0, i32 1
  %6 = bitcast %"class.v8::internal::compiler::TopLevelLiveRange"*** %5 to i64*
  %7 = load i64, i64* %6, align 8
  %8 = bitcast %"class.std::__1::vector"* %4 to i64*
  %9 = load i64, i64* %8, align 8
  %10 = sub i64 %7, %9
  %11 = ashr exact i64 %10, 3
  %12 = trunc i64 %11 to i32
  %13 = icmp sgt i32 %12, %1
  %14 = inttoptr i64 %9 to %"class.v8::internal::compiler::TopLevelLiveRange"**
  br i1 %13, label %30, label %15

15:                                               ; preds = %2
  %16 = add nsw i32 %1, 1
  %17 = sext i32 %16 to i64
  %18 = bitcast %"class.v8::internal::compiler::TopLevelLiveRange"** %3 to i8*
  call void @llvm.lifetime.start.p0i8(i64 8, i8* nonnull %18) #16
  store %"class.v8::internal::compiler::TopLevelLiveRange"* null, %"class.v8::internal::compiler::TopLevelLiveRange"** %3, align 8
  %19 = icmp ult i64 %11, %17
  br i1 %19, label %20, label %24

20:                                               ; preds = %15
  %21 = sub nsw i64 %17, %11
  call void @_ZNSt3__16vectorIPN2v88internal8compiler17TopLevelLiveRangeENS2_13ZoneAllocatorIS5_EEE8__appendEmRKS5_(%"class.std::__1::vector"* %4, i64 %21, %"class.v8::internal::compiler::TopLevelLiveRange"** nonnull dereferenceable(8) %3) #16
  %22 = getelementptr inbounds %"class.std::__1::vector", %"class.std::__1::vector"* %4, i64 0, i32 0, i32 0
  %23 = load %"class.v8::internal::compiler::TopLevelLiveRange"**, %"class.v8::internal::compiler::TopLevelLiveRange"*** %22, align 8
  br label %28

24:                                               ; preds = %15
  %25 = icmp ugt i64 %11, %17
  br i1 %25, label %26, label %28

26:                                               ; preds = %24
  %27 = getelementptr inbounds %"class.v8::internal::compiler::TopLevelLiveRange"*, %"class.v8::internal::compiler::TopLevelLiveRange"** %14, i64 %17
  store %"class.v8::internal::compiler::TopLevelLiveRange"** %27, %"class.v8::internal::compiler::TopLevelLiveRange"*** %5, align 8
  br label %28

28:                                               ; preds = %20, %24, %26
  %29 = phi %"class.v8::internal::compiler::TopLevelLiveRange"** [ %23, %20 ], [ %14, %24 ], [ %14, %26 ]
  call void @llvm.lifetime.end.p0i8(i64 8, i8* nonnull %18) #16
  br label %30

30:                                               ; preds = %2, %28
  %31 = phi %"class.v8::internal::compiler::TopLevelLiveRange"** [ %14, %2 ], [ %29, %28 ]
  %32 = sext i32 %1 to i64
  %33 = getelementptr inbounds %"class.std::__1::vector", %"class.std::__1::vector"* %4, i64 0, i32 0, i32 0
  %34 = getelementptr inbounds %"class.v8::internal::compiler::TopLevelLiveRange"*, %"class.v8::internal::compiler::TopLevelLiveRange"** %31, i64 %32
  %35 = load %"class.v8::internal::compiler::TopLevelLiveRange"*, %"class.v8::internal::compiler::TopLevelLiveRange"** %34, align 8
  %36 = icmp eq %"class.v8::internal::compiler::TopLevelLiveRange"* %35, null
  br i1 %36, label %37, label %77

37:                                               ; preds = %30
  %38 = getelementptr inbounds %"class.v8::internal::compiler::TopTierRegisterAllocationData", %"class.v8::internal::compiler::TopTierRegisterAllocationData"* %0, i64 0, i32 3
  %39 = load %"class.v8::internal::compiler::InstructionSequence"*, %"class.v8::internal::compiler::InstructionSequence"** %38, align 8
  %40 = call zeroext i8 @_ZNK2v88internal8compiler19InstructionSequence17GetRepresentationEi(%"class.v8::internal::compiler::InstructionSequence"* %39, i32 %1) #16
  %41 = getelementptr inbounds %"class.v8::internal::compiler::TopTierRegisterAllocationData", %"class.v8::internal::compiler::TopTierRegisterAllocationData"* %0, i64 0, i32 1
  %42 = load %"class.v8::internal::Zone"*, %"class.v8::internal::Zone"** %41, align 8
  %43 = getelementptr inbounds %"class.v8::internal::Zone", %"class.v8::internal::Zone"* %42, i64 0, i32 2
  %44 = load i64, i64* %43, align 8
  %45 = getelementptr inbounds %"class.v8::internal::Zone", %"class.v8::internal::Zone"* %42, i64 0, i32 3
  %46 = load i64, i64* %45, align 8
  %47 = sub i64 %46, %44
  %48 = icmp ult i64 %47, 136
  br i1 %48, label %49, label %51, !prof !2

49:                                               ; preds = %37
  %50 = call i64 @_ZN2v88internal4Zone9NewExpandEm(%"class.v8::internal::Zone"* %42, i64 136) #16
  br label %53

51:                                               ; preds = %37
  %52 = add i64 %44, 136
  store i64 %52, i64* %43, align 8
  br label %53

53:                                               ; preds = %49, %51
  %54 = phi i64 [ %50, %49 ], [ %44, %51 ]
  %55 = inttoptr i64 %54 to %"class.v8::internal::compiler::TopLevelLiveRange"*
  %56 = getelementptr inbounds %"class.v8::internal::compiler::TopLevelLiveRange", %"class.v8::internal::compiler::TopLevelLiveRange"* %55, i64 0, i32 0, i32 0
  store i32 0, i32* %56, align 8
  %57 = getelementptr inbounds %"class.v8::internal::compiler::TopLevelLiveRange", %"class.v8::internal::compiler::TopLevelLiveRange"* %55, i64 0, i32 0, i32 1
  %58 = getelementptr inbounds %"class.v8::internal::compiler::TopLevelLiveRange", %"class.v8::internal::compiler::TopLevelLiveRange"* %55, i64 0, i32 0, i32 5
  %59 = getelementptr inbounds i32, i32* %57, i64 1
  %60 = bitcast i32* %59 to i8*
  call void @llvm.memset.p0i8.i64(i8* align 4 %60, i8 0, i64 24, i1 false) #16
  store %"class.v8::internal::compiler::TopLevelLiveRange"* %55, %"class.v8::internal::compiler::TopLevelLiveRange"** %58, align 8
  %61 = getelementptr inbounds %"class.v8::internal::compiler::TopLevelLiveRange", %"class.v8::internal::compiler::TopLevelLiveRange"* %55, i64 0, i32 0, i32 6
  %62 = getelementptr inbounds %"class.v8::internal::compiler::TopLevelLiveRange", %"class.v8::internal::compiler::TopLevelLiveRange"* %55, i64 0, i32 0, i32 11, i32 0
  %63 = bitcast %"class.v8::internal::compiler::LiveRange"** %61 to i8*
  call void @llvm.memset.p0i8.i64(i8* align 8 %63, i8 0, i64 40, i1 false) #16
  store i32 -1, i32* %62, align 4
  %64 = zext i8 %40 to i32
  %65 = shl nuw nsw i32 %64, 13
  %66 = or i32 %65, 134221824
  store i32 %66, i32* %57, align 4
  %67 = getelementptr inbounds %"class.v8::internal::compiler::TopLevelLiveRange", %"class.v8::internal::compiler::TopLevelLiveRange"* %55, i64 0, i32 1
  store i32 %1, i32* %67, align 4
  %68 = getelementptr inbounds %"class.v8::internal::compiler::TopLevelLiveRange", %"class.v8::internal::compiler::TopLevelLiveRange"* %55, i64 0, i32 2
  store i32 0, i32* %68, align 8
  %69 = getelementptr inbounds %"class.v8::internal::compiler::TopLevelLiveRange", %"class.v8::internal::compiler::TopLevelLiveRange"* %55, i64 0, i32 3, i32 0
  %70 = getelementptr inbounds %"class.v8::internal::compiler::TopLevelLiveRange", %"class.v8::internal::compiler::TopLevelLiveRange"* %55, i64 0, i32 7
  %71 = bitcast %"class.v8::internal::compiler::InstructionOperand"** %69 to i8*
  call void @llvm.memset.p0i8.i64(i8* align 8 %71, i8 0, i64 18, i1 false) #16
  store i32 2147483647, i32* %70, align 4
  %72 = getelementptr inbounds %"class.v8::internal::compiler::TopLevelLiveRange", %"class.v8::internal::compiler::TopLevelLiveRange"* %55, i64 0, i32 8
  store %"class.v8::internal::compiler::UsePosition"* null, %"class.v8::internal::compiler::UsePosition"** %72, align 8
  %73 = getelementptr inbounds %"class.v8::internal::compiler::TopLevelLiveRange", %"class.v8::internal::compiler::TopLevelLiveRange"* %55, i64 0, i32 9
  %74 = bitcast %"class.v8::internal::compiler::LiveRange"** %73 to %"class.v8::internal::compiler::TopLevelLiveRange"**
  store %"class.v8::internal::compiler::TopLevelLiveRange"* %55, %"class.v8::internal::compiler::TopLevelLiveRange"** %74, align 8
  %75 = load %"class.v8::internal::compiler::TopLevelLiveRange"**, %"class.v8::internal::compiler::TopLevelLiveRange"*** %33, align 8
  %76 = getelementptr inbounds %"class.v8::internal::compiler::TopLevelLiveRange"*, %"class.v8::internal::compiler::TopLevelLiveRange"** %75, i64 %32
  store %"class.v8::internal::compiler::TopLevelLiveRange"* %55, %"class.v8::internal::compiler::TopLevelLiveRange"** %76, align 8
  br label %77

77:                                               ; preds = %53, %30
  %78 = phi %"class.v8::internal::compiler::TopLevelLiveRange"* [ %55, %53 ], [ %35, %30 ]
  ret %"class.v8::internal::compiler::TopLevelLiveRange"* %78
}

; Function Attrs: nounwind ssp uwtable
define hidden %"class.v8::internal::compiler::TopLevelLiveRange"* @_ZN2v88internal8compiler29TopTierRegisterAllocationData12NewLiveRangeEiNS0_21MachineRepresentationE(%"class.v8::internal::compiler::TopTierRegisterAllocationData"* nocapture readonly, i32, i8 zeroext) local_unnamed_addr #0 align 2 {
  %4 = getelementptr inbounds %"class.v8::internal::compiler::TopTierRegisterAllocationData", %"class.v8::internal::compiler::TopTierRegisterAllocationData"* %0, i64 0, i32 1
  %5 = load %"class.v8::internal::Zone"*, %"class.v8::internal::Zone"** %4, align 8
  %6 = getelementptr inbounds %"class.v8::internal::Zone", %"class.v8::internal::Zone"* %5, i64 0, i32 2
  %7 = load i64, i64* %6, align 8
  %8 = getelementptr inbounds %"class.v8::internal::Zone", %"class.v8::internal::Zone"* %5, i64 0, i32 3
  %9 = load i64, i64* %8, align 8
  %10 = sub i64 %9, %7
  %11 = icmp ult i64 %10, 136
  br i1 %11, label %12, label %14, !prof !2

12:                                               ; preds = %3
  %13 = tail call i64 @_ZN2v88internal4Zone9NewExpandEm(%"class.v8::internal::Zone"* %5, i64 136) #16
  br label %16

14:                                               ; preds = %3
  %15 = add i64 %7, 136
  store i64 %15, i64* %6, align 8
  br label %16

16:                                               ; preds = %12, %14
  %17 = phi i64 [ %13, %12 ], [ %7, %14 ]
  %18 = inttoptr i64 %17 to %"class.v8::internal::compiler::TopLevelLiveRange"*
  %19 = getelementptr inbounds %"class.v8::internal::compiler::TopLevelLiveRange", %"class.v8::internal::compiler::TopLevelLiveRange"* %18, i64 0, i32 0, i32 0
  store i32 0, i32* %19, align 8
  %20 = getelementptr inbounds %"class.v8::internal::compiler::TopLevelLiveRange", %"class.v8::internal::compiler::TopLevelLiveRange"* %18, i64 0, i32 0, i32 1
  %21 = getelementptr inbounds %"class.v8::internal::compiler::TopLevelLiveRange", %"class.v8::internal::compiler::TopLevelLiveRange"* %18, i64 0, i32 0, i32 5
  %22 = getelementptr inbounds i32, i32* %20, i64 1
  %23 = bitcast i32* %22 to i8*
  tail call void @llvm.memset.p0i8.i64(i8* align 4 %23, i8 0, i64 24, i1 false) #16
  store %"class.v8::internal::compiler::TopLevelLiveRange"* %18, %"class.v8::internal::compiler::TopLevelLiveRange"** %21, align 8
  %24 = getelementptr inbounds %"class.v8::internal::compiler::TopLevelLiveRange", %"class.v8::internal::compiler::TopLevelLiveRange"* %18, i64 0, i32 0, i32 6
  %25 = getelementptr inbounds %"class.v8::internal::compiler::TopLevelLiveRange", %"class.v8::internal::compiler::TopLevelLiveRange"* %18, i64 0, i32 0, i32 11, i32 0
  %26 = bitcast %"class.v8::internal::compiler::LiveRange"** %24 to i8*
  tail call void @llvm.memset.p0i8.i64(i8* align 8 %26, i8 0, i64 40, i1 false) #16
  store i32 -1, i32* %25, align 4
  %27 = zext i8 %2 to i32
  %28 = shl nuw nsw i32 %27, 13
  %29 = or i32 %28, 134221824
  store i32 %29, i32* %20, align 4
  %30 = getelementptr inbounds %"class.v8::internal::compiler::TopLevelLiveRange", %"class.v8::internal::compiler::TopLevelLiveRange"* %18, i64 0, i32 1
  store i32 %1, i32* %30, align 4
  %31 = getelementptr inbounds %"class.v8::internal::compiler::TopLevelLiveRange", %"class.v8::internal::compiler::TopLevelLiveRange"* %18, i64 0, i32 2
  store i32 0, i32* %31, align 8
  %32 = getelementptr inbounds %"class.v8::internal::compiler::TopLevelLiveRange", %"class.v8::internal::compiler::TopLevelLiveRange"* %18, i64 0, i32 3, i32 0
  %33 = getelementptr inbounds %"class.v8::internal::compiler::TopLevelLiveRange", %"class.v8::internal::compiler::TopLevelLiveRange"* %18, i64 0, i32 7
  %34 = bitcast %"class.v8::internal::compiler::InstructionOperand"** %32 to i8*
  tail call void @llvm.memset.p0i8.i64(i8* align 8 %34, i8 0, i64 18, i1 false) #16
  store i32 2147483647, i32* %33, align 4
  %35 = getelementptr inbounds %"class.v8::internal::compiler::TopLevelLiveRange", %"class.v8::internal::compiler::TopLevelLiveRange"* %18, i64 0, i32 8
  store %"class.v8::internal::compiler::UsePosition"* null, %"class.v8::internal::compiler::UsePosition"** %35, align 8
  %36 = getelementptr inbounds %"class.v8::internal::compiler::TopLevelLiveRange", %"class.v8::internal::compiler::TopLevelLiveRange"* %18, i64 0, i32 9
  %37 = bitcast %"class.v8::internal::compiler::LiveRange"** %36 to %"class.v8::internal::compiler::TopLevelLiveRange"**
  store %"class.v8::internal::compiler::TopLevelLiveRange"* %18, %"class.v8::internal::compiler::TopLevelLiveRange"** %37, align 8
  ret %"class.v8::internal::compiler::TopLevelLiveRange"* %18
}

; Function Attrs: nounwind ssp uwtable
define hidden %"class.v8::internal::compiler::TopTierRegisterAllocationData::PhiMapValue"* @_ZN2v88internal8compiler29TopTierRegisterAllocationData16InitializePhiMapEPKNS1_16InstructionBlockEPNS1_14PhiInstructionE(%"class.v8::internal::compiler::TopTierRegisterAllocationData"*, %"class.v8::internal::compiler::InstructionBlock"*, %"class.v8::internal::compiler::PhiInstruction"*) local_unnamed_addr #0 align 2 {
  %4 = ptrtoint %"class.v8::internal::compiler::InstructionBlock"* %1 to i64
  %5 = getelementptr inbounds %"class.v8::internal::compiler::TopTierRegisterAllocationData", %"class.v8::internal::compiler::TopTierRegisterAllocationData"* %0, i64 0, i32 1
  %6 = load %"class.v8::internal::Zone"*, %"class.v8::internal::Zone"** %5, align 8
  %7 = getelementptr inbounds %"class.v8::internal::Zone", %"class.v8::internal::Zone"* %6, i64 0, i32 2
  %8 = load i64, i64* %7, align 8
  %9 = getelementptr inbounds %"class.v8::internal::Zone", %"class.v8::internal::Zone"* %6, i64 0, i32 3
  %10 = load i64, i64* %9, align 8
  %11 = sub i64 %10, %8
  %12 = icmp ult i64 %11, 56
  br i1 %12, label %13, label %15, !prof !2

13:                                               ; preds = %3
  %14 = tail call i64 @_ZN2v88internal4Zone9NewExpandEm(%"class.v8::internal::Zone"* %6, i64 56) #16
  br label %17

15:                                               ; preds = %3
  %16 = add i64 %8, 56
  store i64 %16, i64* %7, align 8
  br label %17

17:                                               ; preds = %15, %13
  %18 = phi i64 [ %14, %13 ], [ %8, %15 ]
  %19 = inttoptr i64 %18 to %"class.v8::internal::compiler::TopTierRegisterAllocationData::PhiMapValue"*
  %20 = getelementptr inbounds %"class.v8::internal::compiler::TopTierRegisterAllocationData::PhiMapValue", %"class.v8::internal::compiler::TopTierRegisterAllocationData::PhiMapValue"* %19, i64 0, i32 0
  store %"class.v8::internal::compiler::PhiInstruction"* %2, %"class.v8::internal::compiler::PhiInstruction"** %20, align 8
  %21 = getelementptr inbounds %"class.v8::internal::compiler::TopTierRegisterAllocationData::PhiMapValue", %"class.v8::internal::compiler::TopTierRegisterAllocationData::PhiMapValue"* %19, i64 0, i32 1
  %22 = bitcast %"class.v8::internal::compiler::InstructionBlock"** %21 to i64*
  store i64 %4, i64* %22, align 8
  %23 = getelementptr inbounds %"class.v8::internal::compiler::TopTierRegisterAllocationData::PhiMapValue", %"class.v8::internal::compiler::TopTierRegisterAllocationData::PhiMapValue"* %19, i64 0, i32 2
  %24 = ptrtoint %"class.v8::internal::Zone"* %6 to i64
  %25 = getelementptr inbounds %"class.v8::internal::compiler::TopTierRegisterAllocationData::PhiMapValue", %"class.v8::internal::compiler::TopTierRegisterAllocationData::PhiMapValue"* %19, i64 0, i32 2, i32 0, i32 0, i32 2, i32 1
  %26 = bitcast %"struct.std::__1::__compressed_pair_elem.1336"* %25 to i64*
  %27 = bitcast %"class.v8::internal::ZoneVector.1331"* %23 to i8*
  tail call void @llvm.memset.p0i8.i64(i8* align 8 %27, i8 0, i64 24, i1 false) #16
  store i64 %24, i64* %26, align 8
  %28 = getelementptr inbounds %"class.v8::internal::compiler::TopTierRegisterAllocationData::PhiMapValue", %"class.v8::internal::compiler::TopTierRegisterAllocationData::PhiMapValue"* %19, i64 0, i32 3
  store i32 32, i32* %28, align 8
  %29 = getelementptr inbounds %"class.v8::internal::compiler::PhiInstruction", %"class.v8::internal::compiler::PhiInstruction"* %2, i64 0, i32 2, i32 0
  %30 = getelementptr inbounds %"class.v8::internal::compiler::PhiInstruction", %"class.v8::internal::compiler::PhiInstruction"* %2, i64 0, i32 2, i32 0, i32 0, i32 1
  %31 = bitcast i32** %30 to i64*
  %32 = load i64, i64* %31, align 8
  %33 = bitcast %"class.std::__1::vector.48"* %29 to i64*
  %34 = load i64, i64* %33, align 8
  %35 = sub i64 %32, %34
  %36 = ashr exact i64 %35, 2
  %37 = getelementptr inbounds %"class.v8::internal::compiler::TopTierRegisterAllocationData::PhiMapValue", %"class.v8::internal::compiler::TopTierRegisterAllocationData::PhiMapValue"* %19, i64 0, i32 2, i32 0, i32 0, i32 2, i32 0, i32 0
  %38 = bitcast %"class.v8::internal::compiler::InstructionOperand"*** %37 to i64*
  %39 = bitcast %"class.v8::internal::ZoneVector.1331"* %23 to i64*
  %40 = icmp eq i64 %35, 0
  br i1 %40, label %237, label %41

41:                                               ; preds = %17
  %42 = getelementptr inbounds %"class.v8::internal::compiler::TopTierRegisterAllocationData::PhiMapValue", %"class.v8::internal::compiler::TopTierRegisterAllocationData::PhiMapValue"* %19, i64 0, i32 2, i32 0, i32 0, i32 1
  %43 = bitcast %"class.v8::internal::compiler::InstructionOperand"*** %42 to i64*
  %44 = shl i64 %35, 1
  %45 = load i64, i64* %7, align 8
  %46 = load i64, i64* %9, align 8
  %47 = sub i64 %46, %45
  %48 = icmp ugt i64 %44, %47
  br i1 %48, label %49, label %51, !prof !2

49:                                               ; preds = %41
  %50 = tail call i64 @_ZN2v88internal4Zone9NewExpandEm(%"class.v8::internal::Zone"* %6, i64 %44) #16
  br label %53

51:                                               ; preds = %41
  %52 = add i64 %45, %44
  store i64 %52, i64* %7, align 8
  br label %53

53:                                               ; preds = %51, %49
  %54 = phi i64 [ %50, %49 ], [ %45, %51 ]
  %55 = inttoptr i64 %54 to %"class.v8::internal::compiler::InstructionOperand"**
  %56 = inttoptr i64 %54 to i8*
  %57 = getelementptr inbounds %"class.v8::internal::compiler::InstructionOperand"*, %"class.v8::internal::compiler::InstructionOperand"** %55, i64 %36
  %58 = ptrtoint %"class.v8::internal::compiler::InstructionOperand"** %57 to i64
  %59 = getelementptr inbounds %"class.v8::internal::ZoneVector.1331", %"class.v8::internal::ZoneVector.1331"* %23, i64 0, i32 0, i32 0, i32 0
  %60 = load %"class.v8::internal::compiler::InstructionOperand"**, %"class.v8::internal::compiler::InstructionOperand"*** %59, align 8
  %61 = ptrtoint %"class.v8::internal::compiler::InstructionOperand"** %60 to i64
  %62 = load %"class.v8::internal::compiler::InstructionOperand"**, %"class.v8::internal::compiler::InstructionOperand"*** %42, align 8
  %63 = icmp eq %"class.v8::internal::compiler::InstructionOperand"** %62, %60
  br i1 %63, label %235, label %64

64:                                               ; preds = %53
  %65 = getelementptr %"class.v8::internal::compiler::InstructionOperand"*, %"class.v8::internal::compiler::InstructionOperand"** %62, i64 -1
  %66 = ptrtoint %"class.v8::internal::compiler::InstructionOperand"** %65 to i64
  %67 = sub i64 %66, %61
  %68 = lshr i64 %67, 3
  %69 = add nuw nsw i64 %68, 1
  %70 = icmp ult i64 %69, 4
  br i1 %70, label %162, label %71

71:                                               ; preds = %64
  %72 = getelementptr %"class.v8::internal::compiler::InstructionOperand"*, %"class.v8::internal::compiler::InstructionOperand"** %62, i64 -1
  %73 = ptrtoint %"class.v8::internal::compiler::InstructionOperand"** %72 to i64
  %74 = sub i64 %73, %61
  %75 = lshr i64 %74, 3
  %76 = xor i64 %75, -1
  %77 = getelementptr %"class.v8::internal::compiler::InstructionOperand"*, %"class.v8::internal::compiler::InstructionOperand"** %55, i64 %76
  %78 = getelementptr %"class.v8::internal::compiler::InstructionOperand"*, %"class.v8::internal::compiler::InstructionOperand"** %62, i64 %76
  %79 = bitcast %"class.v8::internal::compiler::InstructionOperand"** %78 to i8*
  %80 = icmp ult %"class.v8::internal::compiler::InstructionOperand"** %77, %62
  %81 = icmp ult i8* %79, %56
  %82 = and i1 %80, %81
  br i1 %82, label %162, label %83

83:                                               ; preds = %71
  %84 = and i64 %69, 4611686018427387900
  %85 = sub nsw i64 0, %84
  %86 = getelementptr %"class.v8::internal::compiler::InstructionOperand"*, %"class.v8::internal::compiler::InstructionOperand"** %55, i64 %85
  %87 = sub nsw i64 0, %84
  %88 = getelementptr %"class.v8::internal::compiler::InstructionOperand"*, %"class.v8::internal::compiler::InstructionOperand"** %62, i64 %87
  %89 = add nsw i64 %84, -4
  %90 = lshr exact i64 %89, 2
  %91 = add nuw nsw i64 %90, 1
  %92 = and i64 %91, 1
  %93 = icmp eq i64 %89, 0
  br i1 %93, label %140, label %94

94:                                               ; preds = %83
  %95 = sub nuw nsw i64 %91, %92
  %96 = getelementptr %"class.v8::internal::compiler::InstructionOperand"*, %"class.v8::internal::compiler::InstructionOperand"** %55, i64 -1
  %97 = getelementptr %"class.v8::internal::compiler::InstructionOperand"*, %"class.v8::internal::compiler::InstructionOperand"** %62, i64 -1
  %98 = getelementptr %"class.v8::internal::compiler::InstructionOperand"*, %"class.v8::internal::compiler::InstructionOperand"** %55, i64 -1
  %99 = getelementptr %"class.v8::internal::compiler::InstructionOperand"*, %"class.v8::internal::compiler::InstructionOperand"** %62, i64 -1
  br label %100

100:                                              ; preds = %100, %94
  %101 = phi i64 [ 0, %94 ], [ %135, %100 ]
  %102 = phi i64 [ %95, %94 ], [ %136, %100 ]
  %103 = sub i64 0, %101
  %104 = sub i64 0, %101
  %105 = getelementptr inbounds %"class.v8::internal::compiler::InstructionOperand"*, %"class.v8::internal::compiler::InstructionOperand"** %96, i64 %103
  %106 = getelementptr inbounds %"class.v8::internal::compiler::InstructionOperand"*, %"class.v8::internal::compiler::InstructionOperand"** %97, i64 %104
  %107 = getelementptr inbounds %"class.v8::internal::compiler::InstructionOperand"*, %"class.v8::internal::compiler::InstructionOperand"** %106, i64 -1
  %108 = bitcast %"class.v8::internal::compiler::InstructionOperand"** %107 to <2 x i64>*
  %109 = load <2 x i64>, <2 x i64>* %108, align 8, !alias.scope !68
  %110 = getelementptr inbounds %"class.v8::internal::compiler::InstructionOperand"*, %"class.v8::internal::compiler::InstructionOperand"** %106, i64 -2
  %111 = getelementptr inbounds %"class.v8::internal::compiler::InstructionOperand"*, %"class.v8::internal::compiler::InstructionOperand"** %110, i64 -1
  %112 = bitcast %"class.v8::internal::compiler::InstructionOperand"** %111 to <2 x i64>*
  %113 = load <2 x i64>, <2 x i64>* %112, align 8, !alias.scope !68
  %114 = getelementptr inbounds %"class.v8::internal::compiler::InstructionOperand"*, %"class.v8::internal::compiler::InstructionOperand"** %105, i64 -1
  %115 = bitcast %"class.v8::internal::compiler::InstructionOperand"** %114 to <2 x i64>*
  store <2 x i64> %109, <2 x i64>* %115, align 8, !alias.scope !71, !noalias !68
  %116 = getelementptr inbounds %"class.v8::internal::compiler::InstructionOperand"*, %"class.v8::internal::compiler::InstructionOperand"** %105, i64 -2
  %117 = getelementptr inbounds %"class.v8::internal::compiler::InstructionOperand"*, %"class.v8::internal::compiler::InstructionOperand"** %116, i64 -1
  %118 = bitcast %"class.v8::internal::compiler::InstructionOperand"** %117 to <2 x i64>*
  store <2 x i64> %113, <2 x i64>* %118, align 8, !alias.scope !71, !noalias !68
  %119 = sub nuw nsw i64 -4, %101
  %120 = sub nuw nsw i64 -4, %101
  %121 = getelementptr inbounds %"class.v8::internal::compiler::InstructionOperand"*, %"class.v8::internal::compiler::InstructionOperand"** %98, i64 %119
  %122 = getelementptr inbounds %"class.v8::internal::compiler::InstructionOperand"*, %"class.v8::internal::compiler::InstructionOperand"** %99, i64 %120
  %123 = getelementptr inbounds %"class.v8::internal::compiler::InstructionOperand"*, %"class.v8::internal::compiler::InstructionOperand"** %122, i64 -1
  %124 = bitcast %"class.v8::internal::compiler::InstructionOperand"** %123 to <2 x i64>*
  %125 = load <2 x i64>, <2 x i64>* %124, align 8, !alias.scope !68
  %126 = getelementptr inbounds %"class.v8::internal::compiler::InstructionOperand"*, %"class.v8::internal::compiler::InstructionOperand"** %122, i64 -2
  %127 = getelementptr inbounds %"class.v8::internal::compiler::InstructionOperand"*, %"class.v8::internal::compiler::InstructionOperand"** %126, i64 -1
  %128 = bitcast %"class.v8::internal::compiler::InstructionOperand"** %127 to <2 x i64>*
  %129 = load <2 x i64>, <2 x i64>* %128, align 8, !alias.scope !68
  %130 = getelementptr inbounds %"class.v8::internal::compiler::InstructionOperand"*, %"class.v8::internal::compiler::InstructionOperand"** %121, i64 -1
  %131 = bitcast %"class.v8::internal::compiler::InstructionOperand"** %130 to <2 x i64>*
  store <2 x i64> %125, <2 x i64>* %131, align 8, !alias.scope !71, !noalias !68
  %132 = getelementptr inbounds %"class.v8::internal::compiler::InstructionOperand"*, %"class.v8::internal::compiler::InstructionOperand"** %121, i64 -2
  %133 = getelementptr inbounds %"class.v8::internal::compiler::InstructionOperand"*, %"class.v8::internal::compiler::InstructionOperand"** %132, i64 -1
  %134 = bitcast %"class.v8::internal::compiler::InstructionOperand"** %133 to <2 x i64>*
  store <2 x i64> %129, <2 x i64>* %134, align 8, !alias.scope !71, !noalias !68
  %135 = add i64 %101, 8
  %136 = add i64 %102, -2
  %137 = icmp eq i64 %136, 0
  br i1 %137, label %138, label %100, !llvm.loop !73

138:                                              ; preds = %100
  %139 = sub nuw nsw i64 -8, %101
  br label %140

140:                                              ; preds = %138, %83
  %141 = phi i64 [ 0, %83 ], [ %139, %138 ]
  %142 = icmp eq i64 %92, 0
  br i1 %142, label %160, label %143

143:                                              ; preds = %140
  %144 = getelementptr %"class.v8::internal::compiler::InstructionOperand"*, %"class.v8::internal::compiler::InstructionOperand"** %55, i64 -1
  %145 = getelementptr %"class.v8::internal::compiler::InstructionOperand"*, %"class.v8::internal::compiler::InstructionOperand"** %62, i64 -1
  %146 = getelementptr inbounds %"class.v8::internal::compiler::InstructionOperand"*, %"class.v8::internal::compiler::InstructionOperand"** %144, i64 %141
  %147 = getelementptr inbounds %"class.v8::internal::compiler::InstructionOperand"*, %"class.v8::internal::compiler::InstructionOperand"** %145, i64 %141
  %148 = getelementptr inbounds %"class.v8::internal::compiler::InstructionOperand"*, %"class.v8::internal::compiler::InstructionOperand"** %147, i64 -1
  %149 = bitcast %"class.v8::internal::compiler::InstructionOperand"** %148 to <2 x i64>*
  %150 = load <2 x i64>, <2 x i64>* %149, align 8, !alias.scope !68
  %151 = getelementptr inbounds %"class.v8::internal::compiler::InstructionOperand"*, %"class.v8::internal::compiler::InstructionOperand"** %147, i64 -2
  %152 = getelementptr inbounds %"class.v8::internal::compiler::InstructionOperand"*, %"class.v8::internal::compiler::InstructionOperand"** %151, i64 -1
  %153 = bitcast %"class.v8::internal::compiler::InstructionOperand"** %152 to <2 x i64>*
  %154 = load <2 x i64>, <2 x i64>* %153, align 8, !alias.scope !68
  %155 = getelementptr inbounds %"class.v8::internal::compiler::InstructionOperand"*, %"class.v8::internal::compiler::InstructionOperand"** %146, i64 -1
  %156 = bitcast %"class.v8::internal::compiler::InstructionOperand"** %155 to <2 x i64>*
  store <2 x i64> %150, <2 x i64>* %156, align 8, !alias.scope !71, !noalias !68
  %157 = getelementptr inbounds %"class.v8::internal::compiler::InstructionOperand"*, %"class.v8::internal::compiler::InstructionOperand"** %146, i64 -2
  %158 = getelementptr inbounds %"class.v8::internal::compiler::InstructionOperand"*, %"class.v8::internal::compiler::InstructionOperand"** %157, i64 -1
  %159 = bitcast %"class.v8::internal::compiler::InstructionOperand"** %158 to <2 x i64>*
  store <2 x i64> %154, <2 x i64>* %159, align 8, !alias.scope !71, !noalias !68
  br label %160

160:                                              ; preds = %140, %143
  %161 = icmp eq i64 %69, %84
  br i1 %161, label %232, label %162

162:                                              ; preds = %160, %71, %64
  %163 = phi %"class.v8::internal::compiler::InstructionOperand"** [ %55, %71 ], [ %55, %64 ], [ %86, %160 ]
  %164 = phi %"class.v8::internal::compiler::InstructionOperand"** [ %62, %71 ], [ %62, %64 ], [ %88, %160 ]
  %165 = getelementptr %"class.v8::internal::compiler::InstructionOperand"*, %"class.v8::internal::compiler::InstructionOperand"** %164, i64 -1
  %166 = ptrtoint %"class.v8::internal::compiler::InstructionOperand"** %165 to i64
  %167 = sub i64 %166, %61
  %168 = lshr i64 %167, 3
  %169 = add nuw nsw i64 %168, 1
  %170 = and i64 %169, 7
  %171 = icmp eq i64 %170, 0
  br i1 %171, label %183, label %172

172:                                              ; preds = %162, %172
  %173 = phi %"class.v8::internal::compiler::InstructionOperand"** [ %176, %172 ], [ %163, %162 ]
  %174 = phi %"class.v8::internal::compiler::InstructionOperand"** [ %177, %172 ], [ %164, %162 ]
  %175 = phi i64 [ %181, %172 ], [ %170, %162 ]
  %176 = getelementptr inbounds %"class.v8::internal::compiler::InstructionOperand"*, %"class.v8::internal::compiler::InstructionOperand"** %173, i64 -1
  %177 = getelementptr inbounds %"class.v8::internal::compiler::InstructionOperand"*, %"class.v8::internal::compiler::InstructionOperand"** %174, i64 -1
  %178 = bitcast %"class.v8::internal::compiler::InstructionOperand"** %177 to i64*
  %179 = load i64, i64* %178, align 8
  %180 = bitcast %"class.v8::internal::compiler::InstructionOperand"** %176 to i64*
  store i64 %179, i64* %180, align 8
  %181 = add i64 %175, -1
  %182 = icmp eq i64 %181, 0
  br i1 %182, label %183, label %172, !llvm.loop !74

183:                                              ; preds = %172, %162
  %184 = phi %"class.v8::internal::compiler::InstructionOperand"** [ undef, %162 ], [ %176, %172 ]
  %185 = phi %"class.v8::internal::compiler::InstructionOperand"** [ %163, %162 ], [ %176, %172 ]
  %186 = phi %"class.v8::internal::compiler::InstructionOperand"** [ %164, %162 ], [ %177, %172 ]
  %187 = icmp ult i64 %167, 56
  br i1 %187, label %232, label %188

188:                                              ; preds = %183, %188
  %189 = phi %"class.v8::internal::compiler::InstructionOperand"** [ %226, %188 ], [ %185, %183 ]
  %190 = phi %"class.v8::internal::compiler::InstructionOperand"** [ %227, %188 ], [ %186, %183 ]
  %191 = getelementptr inbounds %"class.v8::internal::compiler::InstructionOperand"*, %"class.v8::internal::compiler::InstructionOperand"** %189, i64 -1
  %192 = getelementptr inbounds %"class.v8::internal::compiler::InstructionOperand"*, %"class.v8::internal::compiler::InstructionOperand"** %190, i64 -1
  %193 = bitcast %"class.v8::internal::compiler::InstructionOperand"** %192 to i64*
  %194 = load i64, i64* %193, align 8
  %195 = bitcast %"class.v8::internal::compiler::InstructionOperand"** %191 to i64*
  store i64 %194, i64* %195, align 8
  %196 = getelementptr inbounds %"class.v8::internal::compiler::InstructionOperand"*, %"class.v8::internal::compiler::InstructionOperand"** %189, i64 -2
  %197 = getelementptr inbounds %"class.v8::internal::compiler::InstructionOperand"*, %"class.v8::internal::compiler::InstructionOperand"** %190, i64 -2
  %198 = bitcast %"class.v8::internal::compiler::InstructionOperand"** %197 to i64*
  %199 = load i64, i64* %198, align 8
  %200 = bitcast %"class.v8::internal::compiler::InstructionOperand"** %196 to i64*
  store i64 %199, i64* %200, align 8
  %201 = getelementptr inbounds %"class.v8::internal::compiler::InstructionOperand"*, %"class.v8::internal::compiler::InstructionOperand"** %189, i64 -3
  %202 = getelementptr inbounds %"class.v8::internal::compiler::InstructionOperand"*, %"class.v8::internal::compiler::InstructionOperand"** %190, i64 -3
  %203 = bitcast %"class.v8::internal::compiler::InstructionOperand"** %202 to i64*
  %204 = load i64, i64* %203, align 8
  %205 = bitcast %"class.v8::internal::compiler::InstructionOperand"** %201 to i64*
  store i64 %204, i64* %205, align 8
  %206 = getelementptr inbounds %"class.v8::internal::compiler::InstructionOperand"*, %"class.v8::internal::compiler::InstructionOperand"** %189, i64 -4
  %207 = getelementptr inbounds %"class.v8::internal::compiler::InstructionOperand"*, %"class.v8::internal::compiler::InstructionOperand"** %190, i64 -4
  %208 = bitcast %"class.v8::internal::compiler::InstructionOperand"** %207 to i64*
  %209 = load i64, i64* %208, align 8
  %210 = bitcast %"class.v8::internal::compiler::InstructionOperand"** %206 to i64*
  store i64 %209, i64* %210, align 8
  %211 = getelementptr inbounds %"class.v8::internal::compiler::InstructionOperand"*, %"class.v8::internal::compiler::InstructionOperand"** %189, i64 -5
  %212 = getelementptr inbounds %"class.v8::internal::compiler::InstructionOperand"*, %"class.v8::internal::compiler::InstructionOperand"** %190, i64 -5
  %213 = bitcast %"class.v8::internal::compiler::InstructionOperand"** %212 to i64*
  %214 = load i64, i64* %213, align 8
  %215 = bitcast %"class.v8::internal::compiler::InstructionOperand"** %211 to i64*
  store i64 %214, i64* %215, align 8
  %216 = getelementptr inbounds %"class.v8::internal::compiler::InstructionOperand"*, %"class.v8::internal::compiler::InstructionOperand"** %189, i64 -6
  %217 = getelementptr inbounds %"class.v8::internal::compiler::InstructionOperand"*, %"class.v8::internal::compiler::InstructionOperand"** %190, i64 -6
  %218 = bitcast %"class.v8::internal::compiler::InstructionOperand"** %217 to i64*
  %219 = load i64, i64* %218, align 8
  %220 = bitcast %"class.v8::internal::compiler::InstructionOperand"** %216 to i64*
  store i64 %219, i64* %220, align 8
  %221 = getelementptr inbounds %"class.v8::internal::compiler::InstructionOperand"*, %"class.v8::internal::compiler::InstructionOperand"** %189, i64 -7
  %222 = getelementptr inbounds %"class.v8::internal::compiler::InstructionOperand"*, %"class.v8::internal::compiler::InstructionOperand"** %190, i64 -7
  %223 = bitcast %"class.v8::internal::compiler::InstructionOperand"** %222 to i64*
  %224 = load i64, i64* %223, align 8
  %225 = bitcast %"class.v8::internal::compiler::InstructionOperand"** %221 to i64*
  store i64 %224, i64* %225, align 8
  %226 = getelementptr inbounds %"class.v8::internal::compiler::InstructionOperand"*, %"class.v8::internal::compiler::InstructionOperand"** %189, i64 -8
  %227 = getelementptr inbounds %"class.v8::internal::compiler::InstructionOperand"*, %"class.v8::internal::compiler::InstructionOperand"** %190, i64 -8
  %228 = bitcast %"class.v8::internal::compiler::InstructionOperand"** %227 to i64*
  %229 = load i64, i64* %228, align 8
  %230 = bitcast %"class.v8::internal::compiler::InstructionOperand"** %226 to i64*
  store i64 %229, i64* %230, align 8
  %231 = icmp eq %"class.v8::internal::compiler::InstructionOperand"** %227, %60
  br i1 %231, label %232, label %188, !llvm.loop !75

232:                                              ; preds = %183, %188, %160
  %233 = phi %"class.v8::internal::compiler::InstructionOperand"** [ %86, %160 ], [ %184, %183 ], [ %226, %188 ]
  %234 = ptrtoint %"class.v8::internal::compiler::InstructionOperand"** %233 to i64
  br label %235

235:                                              ; preds = %232, %53
  %236 = phi i64 [ %234, %232 ], [ %54, %53 ]
  store i64 %236, i64* %39, align 8
  store i64 %54, i64* %43, align 8
  store i64 %58, i64* %38, align 8
  br label %237

237:                                              ; preds = %17, %235
  %238 = getelementptr inbounds %"class.v8::internal::compiler::PhiInstruction", %"class.v8::internal::compiler::PhiInstruction"* %2, i64 0, i32 0
  %239 = load i32, i32* %238, align 8
  %240 = getelementptr inbounds %"class.v8::internal::compiler::TopTierRegisterAllocationData", %"class.v8::internal::compiler::TopTierRegisterAllocationData"* %0, i64 0, i32 6, i32 0, i32 0
  %241 = getelementptr inbounds %"class.v8::internal::compiler::TopTierRegisterAllocationData", %"class.v8::internal::compiler::TopTierRegisterAllocationData"* %0, i64 0, i32 6, i32 0, i32 0, i32 1, i32 0, i32 0
  %242 = bitcast %"class.std::__1::__tree_end_node"* %241 to %"class.std::__1::__tree_node.1558"**
  %243 = load %"class.std::__1::__tree_node.1558"*, %"class.std::__1::__tree_node.1558"** %242, align 8
  %244 = icmp eq %"class.std::__1::__tree_node.1558"* %243, null
  br i1 %244, label %273, label %245

245:                                              ; preds = %237
  %246 = getelementptr inbounds %"class.v8::internal::compiler::TopTierRegisterAllocationData", %"class.v8::internal::compiler::TopTierRegisterAllocationData"* %0, i64 0, i32 6, i32 0, i32 0, i32 1, i32 0, i32 0, i32 0
  br label %247

247:                                              ; preds = %269, %245
  %248 = phi %"class.std::__1::__tree_node.1558"* [ %272, %269 ], [ %243, %245 ]
  %249 = phi %"class.std::__1::__tree_node_base"** [ %271, %269 ], [ %246, %245 ]
  %250 = getelementptr inbounds %"class.std::__1::__tree_node.1558", %"class.std::__1::__tree_node.1558"* %248, i64 0, i32 1, i32 0, i32 0
  %251 = load i32, i32* %250, align 4
  %252 = icmp slt i32 %239, %251
  br i1 %252, label %253, label %259

253:                                              ; preds = %247
  %254 = getelementptr inbounds %"class.std::__1::__tree_node.1558", %"class.std::__1::__tree_node.1558"* %248, i64 0, i32 0, i32 0, i32 0
  %255 = load %"class.std::__1::__tree_node_base"*, %"class.std::__1::__tree_node_base"** %254, align 8
  %256 = icmp eq %"class.std::__1::__tree_node_base"* %255, null
  br i1 %256, label %257, label %269

257:                                              ; preds = %253
  %258 = getelementptr inbounds %"class.std::__1::__tree_node.1558", %"class.std::__1::__tree_node.1558"* %248, i64 0, i32 0, i32 0
  br label %275

259:                                              ; preds = %247
  %260 = icmp slt i32 %251, %239
  br i1 %260, label %261, label %267

261:                                              ; preds = %259
  %262 = getelementptr inbounds %"class.std::__1::__tree_node.1558", %"class.std::__1::__tree_node.1558"* %248, i64 0, i32 0, i32 1
  %263 = load %"class.std::__1::__tree_node_base"*, %"class.std::__1::__tree_node_base"** %262, align 8
  %264 = icmp eq %"class.std::__1::__tree_node_base"* %263, null
  br i1 %264, label %265, label %269

265:                                              ; preds = %261
  %266 = getelementptr inbounds %"class.std::__1::__tree_node.1558", %"class.std::__1::__tree_node.1558"* %248, i64 0, i32 0, i32 0
  br label %275

267:                                              ; preds = %259
  %268 = getelementptr inbounds %"class.std::__1::__tree_node.1558", %"class.std::__1::__tree_node.1558"* %248, i64 0, i32 0, i32 0
  br label %275

269:                                              ; preds = %261, %253
  %270 = phi %"class.std::__1::__tree_node_base"* [ %255, %253 ], [ %263, %261 ]
  %271 = phi %"class.std::__1::__tree_node_base"** [ %254, %253 ], [ %262, %261 ]
  %272 = bitcast %"class.std::__1::__tree_node_base"* %270 to %"class.std::__1::__tree_node.1558"*
  br label %247

273:                                              ; preds = %237
  %274 = getelementptr inbounds %"class.std::__1::__tree_end_node", %"class.std::__1::__tree_end_node"* %241, i64 0, i32 0
  br label %275

275:                                              ; preds = %273, %267, %265, %257
  %276 = phi %"class.std::__1::__tree_end_node"* [ %241, %273 ], [ %258, %257 ], [ %266, %265 ], [ %268, %267 ]
  %277 = phi %"class.std::__1::__tree_node_base"** [ %274, %273 ], [ %254, %257 ], [ %262, %265 ], [ %249, %267 ]
  %278 = bitcast %"class.std::__1::__tree_node_base"** %277 to %"class.std::__1::__tree_node.1558"**
  %279 = load %"class.std::__1::__tree_node.1558"*, %"class.std::__1::__tree_node.1558"** %278, align 8
  %280 = icmp eq %"class.std::__1::__tree_node.1558"* %279, null
  br i1 %280, label %281, label %319

281:                                              ; preds = %275
  %282 = getelementptr inbounds %"class.v8::internal::compiler::TopTierRegisterAllocationData", %"class.v8::internal::compiler::TopTierRegisterAllocationData"* %0, i64 0, i32 6, i32 0, i32 0, i32 1, i32 1, i32 0, i32 0
  %283 = load %"class.v8::internal::Zone"*, %"class.v8::internal::Zone"** %282, align 8, !noalias !76
  %284 = getelementptr inbounds %"class.v8::internal::Zone", %"class.v8::internal::Zone"* %283, i64 0, i32 2
  %285 = load i64, i64* %284, align 8, !noalias !76
  %286 = getelementptr inbounds %"class.v8::internal::Zone", %"class.v8::internal::Zone"* %283, i64 0, i32 3
  %287 = load i64, i64* %286, align 8, !noalias !76
  %288 = sub i64 %287, %285
  %289 = icmp ult i64 %288, 48
  br i1 %289, label %290, label %292, !prof !2

290:                                              ; preds = %281
  %291 = tail call i64 @_ZN2v88internal4Zone9NewExpandEm(%"class.v8::internal::Zone"* %283, i64 48) #16, !noalias !76
  br label %294

292:                                              ; preds = %281
  %293 = add i64 %285, 48
  store i64 %293, i64* %284, align 8, !noalias !76
  br label %294

294:                                              ; preds = %292, %290
  %295 = phi i64 [ %291, %290 ], [ %285, %292 ]
  %296 = inttoptr i64 %295 to %"class.std::__1::__tree_node.1558"*
  %297 = getelementptr inbounds %"class.std::__1::__tree_node.1558", %"class.std::__1::__tree_node.1558"* %296, i64 0, i32 1, i32 0, i32 0
  store i32 %239, i32* %297, align 8, !noalias !76
  %298 = getelementptr inbounds %"class.std::__1::__tree_node.1558", %"class.std::__1::__tree_node.1558"* %296, i64 0, i32 1, i32 0, i32 1
  %299 = bitcast %"class.v8::internal::compiler::TopTierRegisterAllocationData::PhiMapValue"** %298 to i64*
  store i64 %18, i64* %299, align 8, !noalias !76
  %300 = inttoptr i64 %295 to %"class.std::__1::__tree_node_base"*
  %301 = getelementptr inbounds %"class.std::__1::__tree_node_base", %"class.std::__1::__tree_node_base"* %300, i64 0, i32 2
  %302 = inttoptr i64 %295 to i8*
  tail call void @llvm.memset.p0i8.i64(i8* align 8 %302, i8 0, i64 16, i1 false) #16
  store %"class.std::__1::__tree_end_node"* %276, %"class.std::__1::__tree_end_node"** %301, align 8
  store %"class.std::__1::__tree_node_base"* %300, %"class.std::__1::__tree_node_base"** %277, align 8
  %303 = getelementptr inbounds %"class.std::__1::__tree.1270", %"class.std::__1::__tree.1270"* %240, i64 0, i32 0
  %304 = load %"class.std::__1::__tree_end_node"*, %"class.std::__1::__tree_end_node"** %303, align 8
  %305 = getelementptr inbounds %"class.std::__1::__tree_end_node", %"class.std::__1::__tree_end_node"* %304, i64 0, i32 0
  %306 = load %"class.std::__1::__tree_node_base"*, %"class.std::__1::__tree_node_base"** %305, align 8
  %307 = icmp eq %"class.std::__1::__tree_node_base"* %306, null
  br i1 %307, label %312, label %308

308:                                              ; preds = %294
  %309 = ptrtoint %"class.std::__1::__tree_node_base"* %306 to i64
  %310 = bitcast %"class.std::__1::__tree.1270"* %240 to i64*
  store i64 %309, i64* %310, align 8
  %311 = load %"class.std::__1::__tree_node_base"*, %"class.std::__1::__tree_node_base"** %277, align 8
  br label %312

312:                                              ; preds = %308, %294
  %313 = phi %"class.std::__1::__tree_node_base"* [ %300, %294 ], [ %311, %308 ]
  %314 = getelementptr inbounds %"class.v8::internal::compiler::TopTierRegisterAllocationData", %"class.v8::internal::compiler::TopTierRegisterAllocationData"* %0, i64 0, i32 6, i32 0, i32 0, i32 1, i32 0, i32 0, i32 0
  %315 = load %"class.std::__1::__tree_node_base"*, %"class.std::__1::__tree_node_base"** %314, align 8
  tail call void @_ZNSt3__127__tree_balance_after_insertIPNS_16__tree_node_baseIPvEEEEvT_S5_(%"class.std::__1::__tree_node_base"* %315, %"class.std::__1::__tree_node_base"* %313) #16
  %316 = getelementptr inbounds %"class.v8::internal::compiler::TopTierRegisterAllocationData", %"class.v8::internal::compiler::TopTierRegisterAllocationData"* %0, i64 0, i32 6, i32 0, i32 0, i32 2, i32 0, i32 0
  %317 = load i64, i64* %316, align 8
  %318 = add i64 %317, 1
  store i64 %318, i64* %316, align 8
  br label %319

319:                                              ; preds = %275, %312
  ret %"class.v8::internal::compiler::TopTierRegisterAllocationData::PhiMapValue"* %19
}

; Function Attrs: nounwind readonly ssp uwtable
define hidden %"class.v8::internal::compiler::TopTierRegisterAllocationData::PhiMapValue"* @_ZN2v88internal8compiler29TopTierRegisterAllocationData17GetPhiMapValueForEi(%"class.v8::internal::compiler::TopTierRegisterAllocationData"*, i32) local_unnamed_addr #8 align 2 {
  %3 = getelementptr inbounds %"class.v8::internal::compiler::TopTierRegisterAllocationData", %"class.v8::internal::compiler::TopTierRegisterAllocationData"* %0, i64 0, i32 6, i32 0, i32 0, i32 1, i32 0, i32 0
  %4 = bitcast %"class.std::__1::__tree_end_node"* %3 to %"class.std::__1::__tree_node.1558"**
  %5 = load %"class.std::__1::__tree_node.1558"*, %"class.std::__1::__tree_node.1558"** %4, align 8
  %6 = icmp eq %"class.std::__1::__tree_node.1558"* %5, null
  br i1 %6, label %28, label %7

7:                                                ; preds = %2, %7
  %8 = phi %"class.std::__1::__tree_end_node"* [ %18, %7 ], [ %3, %2 ]
  %9 = phi %"class.std::__1::__tree_node.1558"* [ %19, %7 ], [ %5, %2 ]
  %10 = getelementptr inbounds %"class.std::__1::__tree_node.1558", %"class.std::__1::__tree_node.1558"* %9, i64 0, i32 1, i32 0, i32 0
  %11 = load i32, i32* %10, align 4
  %12 = icmp slt i32 %11, %1
  %13 = getelementptr inbounds %"class.std::__1::__tree_node.1558", %"class.std::__1::__tree_node.1558"* %9, i64 0, i32 0, i32 1
  %14 = bitcast %"class.std::__1::__tree_node_base"** %13 to %"class.std::__1::__tree_node.1558"**
  %15 = getelementptr inbounds %"class.std::__1::__tree_node.1558", %"class.std::__1::__tree_node.1558"* %9, i64 0, i32 0, i32 0
  %16 = bitcast %"class.std::__1::__tree_node.1558"* %9 to %"class.std::__1::__tree_node.1558"**
  %17 = select i1 %12, %"class.std::__1::__tree_node.1558"** %14, %"class.std::__1::__tree_node.1558"** %16
  %18 = select i1 %12, %"class.std::__1::__tree_end_node"* %8, %"class.std::__1::__tree_end_node"* %15
  %19 = load %"class.std::__1::__tree_node.1558"*, %"class.std::__1::__tree_node.1558"** %17, align 8
  %20 = icmp eq %"class.std::__1::__tree_node.1558"* %19, null
  br i1 %20, label %21, label %7

21:                                               ; preds = %7
  %22 = icmp eq %"class.std::__1::__tree_end_node"* %18, %3
  br i1 %22, label %28, label %23

23:                                               ; preds = %21
  %24 = getelementptr inbounds %"class.std::__1::__tree_end_node", %"class.std::__1::__tree_end_node"* %18, i64 4
  %25 = bitcast %"class.std::__1::__tree_end_node"* %24 to i32*
  %26 = load i32, i32* %25, align 4
  %27 = icmp sgt i32 %26, %1
  br i1 %27, label %28, label %29

28:                                               ; preds = %23, %21, %2
  br label %29

29:                                               ; preds = %23, %28
  %30 = phi %"class.std::__1::__tree_end_node"* [ %3, %28 ], [ %18, %23 ]
  %31 = getelementptr inbounds %"class.std::__1::__tree_end_node", %"class.std::__1::__tree_end_node"* %30, i64 5
  %32 = bitcast %"class.std::__1::__tree_end_node"* %31 to %"class.v8::internal::compiler::TopTierRegisterAllocationData::PhiMapValue"**
  %33 = load %"class.v8::internal::compiler::TopTierRegisterAllocationData::PhiMapValue"*, %"class.v8::internal::compiler::TopTierRegisterAllocationData::PhiMapValue"** %32, align 8
  ret %"class.v8::internal::compiler::TopTierRegisterAllocationData::PhiMapValue"* %33
}

; Function Attrs: norecurse nounwind readonly ssp uwtable
define hidden %"class.v8::internal::compiler::TopTierRegisterAllocationData::PhiMapValue"* @_ZN2v88internal8compiler29TopTierRegisterAllocationData17GetPhiMapValueForEPNS1_17TopLevelLiveRangeE(%"class.v8::internal::compiler::TopTierRegisterAllocationData"* readonly, %"class.v8::internal::compiler::TopLevelLiveRange"* nocapture readonly) local_unnamed_addr #2 align 2 {
  %3 = getelementptr inbounds %"class.v8::internal::compiler::TopLevelLiveRange", %"class.v8::internal::compiler::TopLevelLiveRange"* %1, i64 0, i32 1
  %4 = load i32, i32* %3, align 4
  %5 = getelementptr inbounds %"class.v8::internal::compiler::TopTierRegisterAllocationData", %"class.v8::internal::compiler::TopTierRegisterAllocationData"* %0, i64 0, i32 6, i32 0, i32 0, i32 1, i32 0, i32 0
  %6 = bitcast %"class.std::__1::__tree_end_node"* %5 to %"class.std::__1::__tree_node.1558"**
  %7 = load %"class.std::__1::__tree_node.1558"*, %"class.std::__1::__tree_node.1558"** %6, align 8
  %8 = icmp eq %"class.std::__1::__tree_node.1558"* %7, null
  br i1 %8, label %30, label %9

9:                                                ; preds = %2, %9
  %10 = phi %"class.std::__1::__tree_end_node"* [ %20, %9 ], [ %5, %2 ]
  %11 = phi %"class.std::__1::__tree_node.1558"* [ %21, %9 ], [ %7, %2 ]
  %12 = getelementptr inbounds %"class.std::__1::__tree_node.1558", %"class.std::__1::__tree_node.1558"* %11, i64 0, i32 1, i32 0, i32 0
  %13 = load i32, i32* %12, align 4
  %14 = icmp slt i32 %13, %4
  %15 = getelementptr inbounds %"class.std::__1::__tree_node.1558", %"class.std::__1::__tree_node.1558"* %11, i64 0, i32 0, i32 1
  %16 = bitcast %"class.std::__1::__tree_node_base"** %15 to %"class.std::__1::__tree_node.1558"**
  %17 = getelementptr inbounds %"class.std::__1::__tree_node.1558", %"class.std::__1::__tree_node.1558"* %11, i64 0, i32 0, i32 0
  %18 = bitcast %"class.std::__1::__tree_node.1558"* %11 to %"class.std::__1::__tree_node.1558"**
  %19 = select i1 %14, %"class.std::__1::__tree_node.1558"** %16, %"class.std::__1::__tree_node.1558"** %18
  %20 = select i1 %14, %"class.std::__1::__tree_end_node"* %10, %"class.std::__1::__tree_end_node"* %17
  %21 = load %"class.std::__1::__tree_node.1558"*, %"class.std::__1::__tree_node.1558"** %19, align 8
  %22 = icmp eq %"class.std::__1::__tree_node.1558"* %21, null
  br i1 %22, label %23, label %9

23:                                               ; preds = %9
  %24 = icmp eq %"class.std::__1::__tree_end_node"* %20, %5
  br i1 %24, label %30, label %25

25:                                               ; preds = %23
  %26 = getelementptr inbounds %"class.std::__1::__tree_end_node", %"class.std::__1::__tree_end_node"* %20, i64 4
  %27 = bitcast %"class.std::__1::__tree_end_node"* %26 to i32*
  %28 = load i32, i32* %27, align 4
  %29 = icmp sgt i32 %28, %4
  br i1 %29, label %30, label %31

30:                                               ; preds = %25, %23, %2
  br label %31

31:                                               ; preds = %25, %30
  %32 = phi %"class.std::__1::__tree_end_node"* [ %5, %30 ], [ %20, %25 ]
  %33 = getelementptr inbounds %"class.std::__1::__tree_end_node", %"class.std::__1::__tree_end_node"* %32, i64 5
  %34 = bitcast %"class.std::__1::__tree_end_node"* %33 to %"class.v8::internal::compiler::TopTierRegisterAllocationData::PhiMapValue"**
  %35 = load %"class.v8::internal::compiler::TopTierRegisterAllocationData::PhiMapValue"*, %"class.v8::internal::compiler::TopTierRegisterAllocationData::PhiMapValue"** %34, align 8
  ret %"class.v8::internal::compiler::TopTierRegisterAllocationData::PhiMapValue"* %35
}

; Function Attrs: nounwind ssp uwtable
define hidden zeroext i1 @_ZN2v88internal8compiler29TopTierRegisterAllocationData26ExistsUseWithoutDefinitionEv(%"class.v8::internal::compiler::TopTierRegisterAllocationData"*) local_unnamed_addr #0 align 2 {
  %2 = getelementptr inbounds %"class.v8::internal::compiler::TopTierRegisterAllocationData", %"class.v8::internal::compiler::TopTierRegisterAllocationData"* %0, i64 0, i32 7, i32 0, i32 0, i32 0
  %3 = load %"class.v8::internal::BitVector"**, %"class.v8::internal::BitVector"*** %2, align 8
  %4 = load %"class.v8::internal::BitVector"*, %"class.v8::internal::BitVector"** %3, align 8
  %5 = getelementptr inbounds %"class.v8::internal::BitVector", %"class.v8::internal::BitVector"* %4, i64 0, i32 1
  %6 = load i32, i32* %5, align 4
  %7 = icmp eq i32 %6, 1
  %8 = getelementptr inbounds %"class.v8::internal::BitVector", %"class.v8::internal::BitVector"* %4, i64 0, i32 2
  br i1 %7, label %9, label %11

9:                                                ; preds = %1
  %10 = bitcast %"union.v8::internal::BitVector::DataStorage"* %8 to i64*
  br label %14

11:                                               ; preds = %1
  %12 = getelementptr inbounds %"union.v8::internal::BitVector::DataStorage", %"union.v8::internal::BitVector::DataStorage"* %8, i64 0, i32 0
  %13 = load i64*, i64** %12, align 8
  br label %14

14:                                               ; preds = %11, %9
  %15 = phi i64* [ %10, %9 ], [ %13, %11 ]
  %16 = load i64, i64* %15, align 8
  %17 = icmp eq i64 %16, 0
  br i1 %17, label %18, label %41

18:                                               ; preds = %14
  %19 = sext i32 %6 to i64
  %20 = icmp sgt i32 %6, 1
  br i1 %20, label %21, label %50

21:                                               ; preds = %18
  %22 = getelementptr inbounds %"class.v8::internal::BitVector", %"class.v8::internal::BitVector"* %4, i64 0, i32 2, i32 0
  %23 = load i64*, i64** %22, align 8
  %24 = getelementptr inbounds i64, i64* %23, i64 1
  %25 = load i64, i64* %24, align 8
  %26 = icmp eq i64 %25, 0
  br i1 %26, label %27, label %37

27:                                               ; preds = %21, %31
  %28 = phi i64 [ %29, %31 ], [ 1, %21 ]
  %29 = add nuw nsw i64 %28, 1
  %30 = icmp eq i64 %29, %19
  br i1 %30, label %115, label %31

31:                                               ; preds = %27
  %32 = getelementptr inbounds i64, i64* %23, i64 %29
  %33 = load i64, i64* %32, align 8
  %34 = icmp eq i64 %33, 0
  br i1 %34, label %27, label %35

35:                                               ; preds = %31
  %36 = trunc i64 %29 to i32
  br label %37

37:                                               ; preds = %35, %21
  %38 = phi i32 [ %36, %35 ], [ 1, %21 ]
  %39 = phi i64 [ %33, %35 ], [ %25, %21 ]
  %40 = shl i32 %38, 6
  br label %41

41:                                               ; preds = %37, %14
  %42 = phi i32 [ 0, %14 ], [ %38, %37 ]
  %43 = phi i32 [ 0, %14 ], [ %40, %37 ]
  %44 = phi i64 [ %16, %14 ], [ %39, %37 ]
  %45 = tail call i64 @llvm.cttz.i64(i64 %44, i1 true) #16, !range !79
  %46 = trunc i64 %45 to i32
  %47 = or i32 %43, %46
  %48 = lshr i64 %44, %45
  %49 = lshr i64 %48, 1
  br label %50

50:                                               ; preds = %18, %41
  %51 = phi i32 [ %42, %41 ], [ 1, %18 ]
  %52 = phi i64 [ %49, %41 ], [ 0, %18 ]
  %53 = phi i32 [ %47, %41 ], [ 0, %18 ]
  %54 = icmp slt i32 %51, %6
  br i1 %54, label %55, label %115

55:                                               ; preds = %50
  %56 = getelementptr inbounds %"class.v8::internal::compiler::TopTierRegisterAllocationData", %"class.v8::internal::compiler::TopTierRegisterAllocationData"* %0, i64 0, i32 4
  %57 = getelementptr inbounds %"class.v8::internal::BitVector", %"class.v8::internal::BitVector"* %4, i64 0, i32 2, i32 0
  br label %58

58:                                               ; preds = %55, %109
  %59 = phi i32 [ %53, %55 ], [ %113, %109 ]
  %60 = phi i64 [ %52, %55 ], [ %112, %109 ]
  %61 = phi i32 [ %51, %55 ], [ %111, %109 ]
  tail call void (i8*, ...) @_ZN2v88internal6PrintFEPKcz(i8* getelementptr inbounds ([57 x i8], [57 x i8]* @.str.25, i64 0, i64 0), i32 %59) #16
  %62 = tail call %"class.v8::internal::compiler::TopLevelLiveRange"* @_ZN2v88internal8compiler29TopTierRegisterAllocationData23GetOrCreateLiveRangeForEi(%"class.v8::internal::compiler::TopTierRegisterAllocationData"* %0, i32 %59)
  %63 = getelementptr inbounds %"class.v8::internal::compiler::TopLevelLiveRange", %"class.v8::internal::compiler::TopLevelLiveRange"* %62, i64 0, i32 0, i32 4
  %64 = load %"class.v8::internal::compiler::UsePosition"*, %"class.v8::internal::compiler::UsePosition"** %63, align 8
  %65 = getelementptr inbounds %"class.v8::internal::compiler::UsePosition", %"class.v8::internal::compiler::UsePosition"* %64, i64 0, i32 3, i32 0
  %66 = load i32, i32* %65, align 8
  tail call void (i8*, ...) @_ZN2v88internal6PrintFEPKcz(i8* getelementptr inbounds ([24 x i8], [24 x i8]* @.str.26, i64 0, i64 0), i32 %66) #16
  %67 = load i8*, i8** %56, align 8
  %68 = icmp eq i8* %67, null
  br i1 %68, label %69, label %70

69:                                               ; preds = %58
  tail call void (i8*, ...) @_ZN2v88internal6PrintFEPKcz(i8* getelementptr inbounds ([2 x i8], [2 x i8]* @.str.27, i64 0, i64 0)) #16
  br label %71

70:                                               ; preds = %58
  tail call void (i8*, ...) @_ZN2v88internal6PrintFEPKcz(i8* getelementptr inbounds ([18 x i8], [18 x i8]* @.str.28, i64 0, i64 0), i8* nonnull %67) #16
  br label %71

71:                                               ; preds = %70, %69
  %72 = add nsw i32 %59, 1
  %73 = icmp eq i64 %60, 0
  br i1 %73, label %76, label %74

74:                                               ; preds = %71
  %75 = load i32, i32* %5, align 4
  br label %95

76:                                               ; preds = %71
  %77 = add nsw i32 %61, 1
  %78 = load i32, i32* %5, align 4
  %79 = icmp slt i32 %77, %78
  br i1 %79, label %80, label %109

80:                                               ; preds = %76
  %81 = load i64*, i64** %57, align 8
  %82 = sext i32 %77 to i64
  %83 = sext i32 %78 to i64
  br label %87

84:                                               ; preds = %87
  %85 = add nsw i64 %88, 1
  %86 = icmp slt i64 %85, %83
  br i1 %86, label %87, label %105

87:                                               ; preds = %80, %84
  %88 = phi i64 [ %82, %80 ], [ %85, %84 ]
  %89 = getelementptr inbounds i64, i64* %81, i64 %88
  %90 = load i64, i64* %89, align 8
  %91 = icmp eq i64 %90, 0
  br i1 %91, label %84, label %92

92:                                               ; preds = %87
  %93 = trunc i64 %88 to i32
  %94 = shl i32 %93, 6
  br label %95

95:                                               ; preds = %92, %74
  %96 = phi i32 [ %75, %74 ], [ %78, %92 ]
  %97 = phi i32 [ %61, %74 ], [ %93, %92 ]
  %98 = phi i32 [ %72, %74 ], [ %94, %92 ]
  %99 = phi i64 [ %60, %74 ], [ %90, %92 ]
  %100 = tail call i64 @llvm.cttz.i64(i64 %99, i1 true) #16, !range !79
  %101 = trunc i64 %100 to i32
  %102 = add i32 %98, %101
  %103 = lshr i64 %99, %100
  %104 = lshr i64 %103, 1
  br label %109

105:                                              ; preds = %84
  %106 = trunc i64 %88 to i32
  %107 = shl i32 %106, 6
  %108 = trunc i64 %85 to i32
  br label %109

109:                                              ; preds = %105, %76, %95
  %110 = phi i32 [ %96, %95 ], [ %78, %76 ], [ %78, %105 ]
  %111 = phi i32 [ %97, %95 ], [ %77, %76 ], [ %108, %105 ]
  %112 = phi i64 [ %104, %95 ], [ 0, %76 ], [ 0, %105 ]
  %113 = phi i32 [ %102, %95 ], [ %72, %76 ], [ %107, %105 ]
  %114 = icmp slt i32 %111, %110
  br i1 %114, label %58, label %115

115:                                              ; preds = %27, %109, %50
  %116 = phi i1 [ false, %50 ], [ true, %109 ], [ false, %27 ]
  ret i1 %116
}

; Function Attrs: nounwind ssp uwtable
define hidden zeroext i1 @_ZN2v88internal8compiler29TopTierRegisterAllocationData37RangesDefinedInDeferredStayInDeferredEv(%"class.v8::internal::compiler::TopTierRegisterAllocationData"* nocapture readonly) local_unnamed_addr #0 align 2 {
  %2 = getelementptr inbounds %"class.v8::internal::compiler::TopTierRegisterAllocationData", %"class.v8::internal::compiler::TopTierRegisterAllocationData"* %0, i64 0, i32 9, i32 0
  %3 = getelementptr inbounds %"class.v8::internal::compiler::TopTierRegisterAllocationData", %"class.v8::internal::compiler::TopTierRegisterAllocationData"* %0, i64 0, i32 9, i32 0, i32 0, i32 1
  %4 = bitcast %"class.v8::internal::compiler::TopLevelLiveRange"*** %3 to i64*
  %5 = load i64, i64* %4, align 8
  %6 = bitcast %"class.std::__1::vector"* %2 to i64*
  %7 = load i64, i64* %6, align 8
  %8 = sub i64 %5, %7
  %9 = inttoptr i64 %7 to %"class.v8::internal::compiler::TopLevelLiveRange"**
  %10 = inttoptr i64 %5 to %"class.v8::internal::compiler::TopLevelLiveRange"**
  %11 = icmp eq %"class.v8::internal::compiler::TopLevelLiveRange"** %9, %10
  br i1 %11, label %80, label %12

12:                                               ; preds = %1
  %13 = getelementptr inbounds %"class.v8::internal::compiler::TopTierRegisterAllocationData", %"class.v8::internal::compiler::TopTierRegisterAllocationData"* %0, i64 0, i32 3
  %14 = sub i64 %5, %7
  %15 = icmp eq i64 %8, %14
  br i1 %15, label %17, label %16, !prof !80

16:                                               ; preds = %75, %12
  tail call void (i8*, ...) @_Z8V8_FatalPKcz(i8* getelementptr inbounds ([18 x i8], [18 x i8]* @.str.1, i64 0, i64 0), i8* getelementptr inbounds ([41 x i8], [41 x i8]* @.str.29, i64 0, i64 0)) #17
  unreachable

17:                                               ; preds = %12, %75
  %18 = phi %"class.v8::internal::compiler::TopLevelLiveRange"** [ %73, %75 ], [ %9, %12 ]
  %19 = load %"class.v8::internal::compiler::TopLevelLiveRange"*, %"class.v8::internal::compiler::TopLevelLiveRange"** %18, align 8
  %20 = icmp eq %"class.v8::internal::compiler::TopLevelLiveRange"* %19, null
  br i1 %20, label %72, label %21

21:                                               ; preds = %17
  %22 = getelementptr inbounds %"class.v8::internal::compiler::TopLevelLiveRange", %"class.v8::internal::compiler::TopLevelLiveRange"* %19, i64 0, i32 0, i32 3
  %23 = load %"class.v8::internal::compiler::UseInterval"*, %"class.v8::internal::compiler::UseInterval"** %22, align 8
  %24 = icmp eq %"class.v8::internal::compiler::UseInterval"* %23, null
  br i1 %24, label %72, label %25

25:                                               ; preds = %21
  %26 = load %"class.v8::internal::compiler::InstructionSequence"*, %"class.v8::internal::compiler::InstructionSequence"** %13, align 8
  %27 = getelementptr inbounds %"class.v8::internal::compiler::UseInterval", %"class.v8::internal::compiler::UseInterval"* %23, i64 0, i32 0, i32 0
  %28 = load i32, i32* %27, align 8
  %29 = sdiv i32 %28, 4
  %30 = tail call %"class.v8::internal::compiler::InstructionBlock"* @_ZNK2v88internal8compiler19InstructionSequence19GetInstructionBlockEi(%"class.v8::internal::compiler::InstructionSequence"* %26, i32 %29) #16
  %31 = getelementptr inbounds %"class.v8::internal::compiler::InstructionBlock", %"class.v8::internal::compiler::InstructionBlock"* %30, i64 0, i32 10
  %32 = load i8, i8* %31, align 4, !range !3
  %33 = icmp eq i8 %32, 0
  br i1 %33, label %72, label %34

34:                                               ; preds = %25
  %35 = load %"class.v8::internal::compiler::UseInterval"*, %"class.v8::internal::compiler::UseInterval"** %22, align 8
  %36 = icmp eq %"class.v8::internal::compiler::UseInterval"* %35, null
  br i1 %36, label %72, label %37

37:                                               ; preds = %34, %68
  %38 = phi %"class.v8::internal::compiler::UseInterval"* [ %70, %68 ], [ %35, %34 ]
  %39 = getelementptr inbounds %"class.v8::internal::compiler::UseInterval", %"class.v8::internal::compiler::UseInterval"* %38, i64 0, i32 0, i32 0
  %40 = load i32, i32* %39, align 4
  %41 = sdiv i32 %40, 4
  %42 = lshr i32 %40, 1
  %43 = and i32 %42, 1
  %44 = add nsw i32 %43, %41
  %45 = getelementptr inbounds %"class.v8::internal::compiler::UseInterval", %"class.v8::internal::compiler::UseInterval"* %38, i64 0, i32 1, i32 0
  %46 = load i32, i32* %45, align 4
  %47 = sdiv i32 %46, 4
  %48 = and i32 %46, 2
  %49 = icmp eq i32 %48, 0
  br i1 %49, label %50, label %54

50:                                               ; preds = %37
  %51 = and i32 %46, 1
  %52 = add nsw i32 %51, -1
  %53 = add nsw i32 %52, %47
  br label %54

54:                                               ; preds = %37, %50
  %55 = phi i32 [ %53, %50 ], [ %47, %37 ]
  %56 = icmp sgt i32 %44, %55
  br i1 %56, label %68, label %57

57:                                               ; preds = %54, %64
  %58 = phi i32 [ %66, %64 ], [ %44, %54 ]
  %59 = load %"class.v8::internal::compiler::InstructionSequence"*, %"class.v8::internal::compiler::InstructionSequence"** %13, align 8
  %60 = tail call %"class.v8::internal::compiler::InstructionBlock"* @_ZNK2v88internal8compiler19InstructionSequence19GetInstructionBlockEi(%"class.v8::internal::compiler::InstructionSequence"* %59, i32 %58) #16
  %61 = getelementptr inbounds %"class.v8::internal::compiler::InstructionBlock", %"class.v8::internal::compiler::InstructionBlock"* %60, i64 0, i32 10
  %62 = load i8, i8* %61, align 4, !range !3
  %63 = icmp eq i8 %62, 0
  br i1 %63, label %80, label %64

64:                                               ; preds = %57
  %65 = getelementptr inbounds %"class.v8::internal::compiler::InstructionBlock", %"class.v8::internal::compiler::InstructionBlock"* %60, i64 0, i32 9
  %66 = load i32, i32* %65, align 8
  %67 = icmp sgt i32 %66, %55
  br i1 %67, label %68, label %57

68:                                               ; preds = %64, %54
  %69 = getelementptr inbounds %"class.v8::internal::compiler::UseInterval", %"class.v8::internal::compiler::UseInterval"* %38, i64 0, i32 2
  %70 = load %"class.v8::internal::compiler::UseInterval"*, %"class.v8::internal::compiler::UseInterval"** %69, align 8
  %71 = icmp eq %"class.v8::internal::compiler::UseInterval"* %70, null
  br i1 %71, label %72, label %37

72:                                               ; preds = %68, %34, %25, %21, %17
  %73 = getelementptr inbounds %"class.v8::internal::compiler::TopLevelLiveRange"*, %"class.v8::internal::compiler::TopLevelLiveRange"** %18, i64 1
  %74 = icmp eq %"class.v8::internal::compiler::TopLevelLiveRange"** %73, %10
  br i1 %74, label %80, label %75

75:                                               ; preds = %72
  %76 = load i64, i64* %4, align 8
  %77 = load i64, i64* %6, align 8
  %78 = sub i64 %76, %77
  %79 = icmp eq i64 %8, %78
  br i1 %79, label %17, label %16, !prof !80

80:                                               ; preds = %72, %57, %1
  %81 = phi i1 [ true, %1 ], [ false, %57 ], [ true, %72 ]
  ret i1 %81
}

declare %"class.v8::internal::compiler::InstructionBlock"* @_ZNK2v88internal8compiler19InstructionSequence19GetInstructionBlockEi(%"class.v8::internal::compiler::InstructionSequence"*, i32) local_unnamed_addr #6

; Function Attrs: nounwind ssp uwtable
define hidden %"class.v8::internal::compiler::SpillRange"* @_ZN2v88internal8compiler29TopTierRegisterAllocationData27AssignSpillRangeToLiveRangeEPNS1_17TopLevelLiveRangeENS2_9SpillModeE(%"class.v8::internal::compiler::TopTierRegisterAllocationData"* nocapture readonly, %"class.v8::internal::compiler::TopLevelLiveRange"*, i32) local_unnamed_addr #0 align 2 {
  %4 = getelementptr inbounds %"class.v8::internal::compiler::TopLevelLiveRange", %"class.v8::internal::compiler::TopLevelLiveRange"* %1, i64 0, i32 3
  %5 = bitcast %union.anon* %4 to %"class.v8::internal::compiler::SpillRange"**
  %6 = load %"class.v8::internal::compiler::SpillRange"*, %"class.v8::internal::compiler::SpillRange"** %5, align 8
  %7 = icmp eq %"class.v8::internal::compiler::SpillRange"* %6, null
  br i1 %7, label %8, label %24

8:                                                ; preds = %3
  %9 = getelementptr inbounds %"class.v8::internal::compiler::TopTierRegisterAllocationData", %"class.v8::internal::compiler::TopTierRegisterAllocationData"* %0, i64 0, i32 1
  %10 = load %"class.v8::internal::Zone"*, %"class.v8::internal::Zone"** %9, align 8
  %11 = getelementptr inbounds %"class.v8::internal::Zone", %"class.v8::internal::Zone"* %10, i64 0, i32 2
  %12 = load i64, i64* %11, align 8
  %13 = getelementptr inbounds %"class.v8::internal::Zone", %"class.v8::internal::Zone"* %10, i64 0, i32 3
  %14 = load i64, i64* %13, align 8
  %15 = sub i64 %14, %12
  %16 = icmp ult i64 %15, 56
  br i1 %16, label %17, label %19, !prof !2

17:                                               ; preds = %8
  %18 = tail call i64 @_ZN2v88internal4Zone9NewExpandEm(%"class.v8::internal::Zone"* %10, i64 56) #16
  br label %21

19:                                               ; preds = %8
  %20 = add i64 %12, 56
  store i64 %20, i64* %11, align 8
  br label %21

21:                                               ; preds = %17, %19
  %22 = phi i64 [ %18, %17 ], [ %12, %19 ]
  %23 = inttoptr i64 %22 to %"class.v8::internal::compiler::SpillRange"*
  tail call void @_ZN2v88internal8compiler10SpillRangeC2EPNS1_17TopLevelLiveRangeEPNS0_4ZoneE(%"class.v8::internal::compiler::SpillRange"* %23, %"class.v8::internal::compiler::TopLevelLiveRange"* %1, %"class.v8::internal::Zone"* %10) #16
  br label %24

24:                                               ; preds = %21, %3
  %25 = phi %"class.v8::internal::compiler::SpillRange"* [ %23, %21 ], [ %6, %3 ]
  %26 = icmp ne i32 %2, 1
  %27 = getelementptr inbounds %"class.v8::internal::compiler::TopLevelLiveRange", %"class.v8::internal::compiler::TopLevelLiveRange"* %1, i64 0, i32 0, i32 1
  %28 = load i32, i32* %27, align 4
  %29 = and i32 %28, 96
  %30 = icmp eq i32 %29, 64
  %31 = or i1 %26, %30
  %32 = getelementptr inbounds %"class.v8::internal::compiler::TopLevelLiveRange", %"class.v8::internal::compiler::TopLevelLiveRange"* %1, i64 0, i32 0, i32 1
  %33 = and i32 %28, -97
  %34 = or i32 %33, 64
  %35 = or i32 %28, 96
  %36 = select i1 %31, i32* %32, i32* %27
  %37 = select i1 %31, i32 %34, i32 %35
  store i32 %37, i32* %36, align 4
  %38 = getelementptr inbounds %"class.v8::internal::compiler::TopLevelLiveRange", %"class.v8::internal::compiler::TopLevelLiveRange"* %1, i64 0, i32 1
  %39 = load i32, i32* %38, align 4
  %40 = sext i32 %39 to i64
  %41 = getelementptr inbounds %"class.v8::internal::compiler::TopTierRegisterAllocationData", %"class.v8::internal::compiler::TopTierRegisterAllocationData"* %0, i64 0, i32 14, i32 0, i32 0, i32 0
  %42 = load %"class.v8::internal::compiler::SpillRange"**, %"class.v8::internal::compiler::SpillRange"*** %41, align 8
  %43 = getelementptr inbounds %"class.v8::internal::compiler::SpillRange"*, %"class.v8::internal::compiler::SpillRange"** %42, i64 %40
  store %"class.v8::internal::compiler::SpillRange"* %25, %"class.v8::internal::compiler::SpillRange"** %43, align 8
  ret %"class.v8::internal::compiler::SpillRange"* %25
}

; Function Attrs: nofree norecurse nounwind ssp uwtable
define hidden void @_ZN2v88internal8compiler29TopTierRegisterAllocationData12MarkFixedUseENS0_21MachineRepresentationEi(%"class.v8::internal::compiler::TopTierRegisterAllocationData"* nocapture readonly, i8 zeroext, i32) local_unnamed_addr #3 align 2 {
  switch i8 %1, label %36 [
    i8 12, label %4
    i8 14, label %4
    i8 13, label %20
  ]

4:                                                ; preds = %3, %3
  %5 = getelementptr inbounds %"class.v8::internal::compiler::TopTierRegisterAllocationData", %"class.v8::internal::compiler::TopTierRegisterAllocationData"* %0, i64 0, i32 19
  %6 = load %"class.v8::internal::BitVector"*, %"class.v8::internal::BitVector"** %5, align 8
  %7 = getelementptr inbounds %"class.v8::internal::BitVector", %"class.v8::internal::BitVector"* %6, i64 0, i32 1
  %8 = load i32, i32* %7, align 4
  %9 = icmp eq i32 %8, 1
  br i1 %9, label %10, label %13

10:                                               ; preds = %4
  %11 = getelementptr inbounds %"class.v8::internal::BitVector", %"class.v8::internal::BitVector"* %6, i64 0, i32 2
  %12 = bitcast %"union.v8::internal::BitVector::DataStorage"* %11 to i64*
  br label %52

13:                                               ; preds = %4
  %14 = srem i32 %2, 64
  %15 = getelementptr inbounds %"class.v8::internal::BitVector", %"class.v8::internal::BitVector"* %6, i64 0, i32 2, i32 0
  %16 = load i64*, i64** %15, align 8
  %17 = sdiv i32 %2, 64
  %18 = sext i32 %17 to i64
  %19 = getelementptr inbounds i64, i64* %16, i64 %18
  br label %52

20:                                               ; preds = %3
  %21 = getelementptr inbounds %"class.v8::internal::compiler::TopTierRegisterAllocationData", %"class.v8::internal::compiler::TopTierRegisterAllocationData"* %0, i64 0, i32 19
  %22 = load %"class.v8::internal::BitVector"*, %"class.v8::internal::BitVector"** %21, align 8
  %23 = getelementptr inbounds %"class.v8::internal::BitVector", %"class.v8::internal::BitVector"* %22, i64 0, i32 1
  %24 = load i32, i32* %23, align 4
  %25 = icmp eq i32 %24, 1
  br i1 %25, label %26, label %29

26:                                               ; preds = %20
  %27 = getelementptr inbounds %"class.v8::internal::BitVector", %"class.v8::internal::BitVector"* %22, i64 0, i32 2
  %28 = bitcast %"union.v8::internal::BitVector::DataStorage"* %27 to i64*
  br label %52

29:                                               ; preds = %20
  %30 = srem i32 %2, 64
  %31 = getelementptr inbounds %"class.v8::internal::BitVector", %"class.v8::internal::BitVector"* %22, i64 0, i32 2, i32 0
  %32 = load i64*, i64** %31, align 8
  %33 = sdiv i32 %2, 64
  %34 = sext i32 %33 to i64
  %35 = getelementptr inbounds i64, i64* %32, i64 %34
  br label %52

36:                                               ; preds = %3
  %37 = getelementptr inbounds %"class.v8::internal::compiler::TopTierRegisterAllocationData", %"class.v8::internal::compiler::TopTierRegisterAllocationData"* %0, i64 0, i32 18
  %38 = load %"class.v8::internal::BitVector"*, %"class.v8::internal::BitVector"** %37, align 8
  %39 = getelementptr inbounds %"class.v8::internal::BitVector", %"class.v8::internal::BitVector"* %38, i64 0, i32 1
  %40 = load i32, i32* %39, align 4
  %41 = icmp eq i32 %40, 1
  br i1 %41, label %42, label %45

42:                                               ; preds = %36
  %43 = getelementptr inbounds %"class.v8::internal::BitVector", %"class.v8::internal::BitVector"* %38, i64 0, i32 2
  %44 = bitcast %"union.v8::internal::BitVector::DataStorage"* %43 to i64*
  br label %52

45:                                               ; preds = %36
  %46 = srem i32 %2, 64
  %47 = getelementptr inbounds %"class.v8::internal::BitVector", %"class.v8::internal::BitVector"* %38, i64 0, i32 2, i32 0
  %48 = load i64*, i64** %47, align 8
  %49 = sdiv i32 %2, 64
  %50 = sext i32 %49 to i64
  %51 = getelementptr inbounds i64, i64* %48, i64 %50
  br label %52

52:                                               ; preds = %45, %42, %29, %26, %13, %10
  %53 = phi i64* [ %51, %45 ], [ %44, %42 ], [ %35, %29 ], [ %28, %26 ], [ %19, %13 ], [ %12, %10 ]
  %54 = phi i32 [ %46, %45 ], [ %2, %42 ], [ %30, %29 ], [ %2, %26 ], [ %14, %13 ], [ %2, %10 ]
  %55 = zext i32 %54 to i64
  %56 = shl i64 1, %55
  %57 = load i64, i64* %53, align 8
  %58 = or i64 %57, %56
  store i64 %58, i64* %53, align 8
  ret void
}

; Function Attrs: norecurse nounwind readonly ssp uwtable
define hidden zeroext i1 @_ZN2v88internal8compiler29TopTierRegisterAllocationData11HasFixedUseENS0_21MachineRepresentationEi(%"class.v8::internal::compiler::TopTierRegisterAllocationData"* nocapture readonly, i8 zeroext, i32) local_unnamed_addr #2 align 2 {
  switch i8 %1, label %34 [
    i8 12, label %4
    i8 14, label %4
    i8 13, label %19
  ]

4:                                                ; preds = %3, %3
  %5 = getelementptr inbounds %"class.v8::internal::compiler::TopTierRegisterAllocationData", %"class.v8::internal::compiler::TopTierRegisterAllocationData"* %0, i64 0, i32 19
  %6 = load %"class.v8::internal::BitVector"*, %"class.v8::internal::BitVector"** %5, align 8
  %7 = getelementptr inbounds %"class.v8::internal::BitVector", %"class.v8::internal::BitVector"* %6, i64 0, i32 1
  %8 = load i32, i32* %7, align 4
  %9 = icmp eq i32 %8, 1
  %10 = getelementptr inbounds %"class.v8::internal::BitVector", %"class.v8::internal::BitVector"* %6, i64 0, i32 2
  br i1 %9, label %11, label %13

11:                                               ; preds = %4
  %12 = bitcast %"union.v8::internal::BitVector::DataStorage"* %10 to i64*
  br label %49

13:                                               ; preds = %4
  %14 = getelementptr inbounds %"union.v8::internal::BitVector::DataStorage", %"union.v8::internal::BitVector::DataStorage"* %10, i64 0, i32 0
  %15 = load i64*, i64** %14, align 8
  %16 = sdiv i32 %2, 64
  %17 = sext i32 %16 to i64
  %18 = getelementptr inbounds i64, i64* %15, i64 %17
  br label %49

19:                                               ; preds = %3
  %20 = getelementptr inbounds %"class.v8::internal::compiler::TopTierRegisterAllocationData", %"class.v8::internal::compiler::TopTierRegisterAllocationData"* %0, i64 0, i32 19
  %21 = load %"class.v8::internal::BitVector"*, %"class.v8::internal::BitVector"** %20, align 8
  %22 = getelementptr inbounds %"class.v8::internal::BitVector", %"class.v8::internal::BitVector"* %21, i64 0, i32 1
  %23 = load i32, i32* %22, align 4
  %24 = icmp eq i32 %23, 1
  %25 = getelementptr inbounds %"class.v8::internal::BitVector", %"class.v8::internal::BitVector"* %21, i64 0, i32 2
  br i1 %24, label %26, label %28

26:                                               ; preds = %19
  %27 = bitcast %"union.v8::internal::BitVector::DataStorage"* %25 to i64*
  br label %49

28:                                               ; preds = %19
  %29 = getelementptr inbounds %"union.v8::internal::BitVector::DataStorage", %"union.v8::internal::BitVector::DataStorage"* %25, i64 0, i32 0
  %30 = load i64*, i64** %29, align 8
  %31 = sdiv i32 %2, 64
  %32 = sext i32 %31 to i64
  %33 = getelementptr inbounds i64, i64* %30, i64 %32
  br label %49

34:                                               ; preds = %3
  %35 = getelementptr inbounds %"class.v8::internal::compiler::TopTierRegisterAllocationData", %"class.v8::internal::compiler::TopTierRegisterAllocationData"* %0, i64 0, i32 18
  %36 = load %"class.v8::internal::BitVector"*, %"class.v8::internal::BitVector"** %35, align 8
  %37 = getelementptr inbounds %"class.v8::internal::BitVector", %"class.v8::internal::BitVector"* %36, i64 0, i32 1
  %38 = load i32, i32* %37, align 4
  %39 = icmp eq i32 %38, 1
  %40 = getelementptr inbounds %"class.v8::internal::BitVector", %"class.v8::internal::BitVector"* %36, i64 0, i32 2
  br i1 %39, label %41, label %43

41:                                               ; preds = %34
  %42 = bitcast %"union.v8::internal::BitVector::DataStorage"* %40 to i64*
  br label %49

43:                                               ; preds = %34
  %44 = getelementptr inbounds %"union.v8::internal::BitVector::DataStorage", %"union.v8::internal::BitVector::DataStorage"* %40, i64 0, i32 0
  %45 = load i64*, i64** %44, align 8
  %46 = sdiv i32 %2, 64
  %47 = sext i32 %46 to i64
  %48 = getelementptr inbounds i64, i64* %45, i64 %47
  br label %49

49:                                               ; preds = %43, %41, %28, %26, %13, %11
  %50 = phi i64* [ %12, %11 ], [ %18, %13 ], [ %27, %26 ], [ %33, %28 ], [ %42, %41 ], [ %48, %43 ]
  %51 = load i64, i64* %50, align 8
  %52 = srem i32 %2, 64
  %53 = zext i32 %52 to i64
  %54 = shl i64 1, %53
  %55 = and i64 %51, %54
  %56 = icmp ne i64 %55, 0
  ret i1 %56
}

; Function Attrs: nofree norecurse nounwind ssp uwtable
define hidden void @_ZN2v88internal8compiler29TopTierRegisterAllocationData13MarkAllocatedENS0_21MachineRepresentationEi(%"class.v8::internal::compiler::TopTierRegisterAllocationData"* nocapture readonly, i8 zeroext, i32) local_unnamed_addr #3 align 2 {
  switch i8 %1, label %36 [
    i8 12, label %4
    i8 14, label %4
    i8 13, label %20
  ]

4:                                                ; preds = %3, %3
  %5 = getelementptr inbounds %"class.v8::internal::compiler::TopTierRegisterAllocationData", %"class.v8::internal::compiler::TopTierRegisterAllocationData"* %0, i64 0, i32 17
  %6 = load %"class.v8::internal::BitVector"*, %"class.v8::internal::BitVector"** %5, align 8
  %7 = getelementptr inbounds %"class.v8::internal::BitVector", %"class.v8::internal::BitVector"* %6, i64 0, i32 1
  %8 = load i32, i32* %7, align 4
  %9 = icmp eq i32 %8, 1
  br i1 %9, label %10, label %13

10:                                               ; preds = %4
  %11 = getelementptr inbounds %"class.v8::internal::BitVector", %"class.v8::internal::BitVector"* %6, i64 0, i32 2
  %12 = bitcast %"union.v8::internal::BitVector::DataStorage"* %11 to i64*
  br label %52

13:                                               ; preds = %4
  %14 = srem i32 %2, 64
  %15 = getelementptr inbounds %"class.v8::internal::BitVector", %"class.v8::internal::BitVector"* %6, i64 0, i32 2, i32 0
  %16 = load i64*, i64** %15, align 8
  %17 = sdiv i32 %2, 64
  %18 = sext i32 %17 to i64
  %19 = getelementptr inbounds i64, i64* %16, i64 %18
  br label %52

20:                                               ; preds = %3
  %21 = getelementptr inbounds %"class.v8::internal::compiler::TopTierRegisterAllocationData", %"class.v8::internal::compiler::TopTierRegisterAllocationData"* %0, i64 0, i32 17
  %22 = load %"class.v8::internal::BitVector"*, %"class.v8::internal::BitVector"** %21, align 8
  %23 = getelementptr inbounds %"class.v8::internal::BitVector", %"class.v8::internal::BitVector"* %22, i64 0, i32 1
  %24 = load i32, i32* %23, align 4
  %25 = icmp eq i32 %24, 1
  br i1 %25, label %26, label %29

26:                                               ; preds = %20
  %27 = getelementptr inbounds %"class.v8::internal::BitVector", %"class.v8::internal::BitVector"* %22, i64 0, i32 2
  %28 = bitcast %"union.v8::internal::BitVector::DataStorage"* %27 to i64*
  br label %52

29:                                               ; preds = %20
  %30 = srem i32 %2, 64
  %31 = getelementptr inbounds %"class.v8::internal::BitVector", %"class.v8::internal::BitVector"* %22, i64 0, i32 2, i32 0
  %32 = load i64*, i64** %31, align 8
  %33 = sdiv i32 %2, 64
  %34 = sext i32 %33 to i64
  %35 = getelementptr inbounds i64, i64* %32, i64 %34
  br label %52

36:                                               ; preds = %3
  %37 = getelementptr inbounds %"class.v8::internal::compiler::TopTierRegisterAllocationData", %"class.v8::internal::compiler::TopTierRegisterAllocationData"* %0, i64 0, i32 16
  %38 = load %"class.v8::internal::BitVector"*, %"class.v8::internal::BitVector"** %37, align 8
  %39 = getelementptr inbounds %"class.v8::internal::BitVector", %"class.v8::internal::BitVector"* %38, i64 0, i32 1
  %40 = load i32, i32* %39, align 4
  %41 = icmp eq i32 %40, 1
  br i1 %41, label %42, label %45

42:                                               ; preds = %36
  %43 = getelementptr inbounds %"class.v8::internal::BitVector", %"class.v8::internal::BitVector"* %38, i64 0, i32 2
  %44 = bitcast %"union.v8::internal::BitVector::DataStorage"* %43 to i64*
  br label %52

45:                                               ; preds = %36
  %46 = srem i32 %2, 64
  %47 = getelementptr inbounds %"class.v8::internal::BitVector", %"class.v8::internal::BitVector"* %38, i64 0, i32 2, i32 0
  %48 = load i64*, i64** %47, align 8
  %49 = sdiv i32 %2, 64
  %50 = sext i32 %49 to i64
  %51 = getelementptr inbounds i64, i64* %48, i64 %50
  br label %52

52:                                               ; preds = %45, %42, %29, %26, %13, %10
  %53 = phi i64* [ %51, %45 ], [ %44, %42 ], [ %35, %29 ], [ %28, %26 ], [ %19, %13 ], [ %12, %10 ]
  %54 = phi i32 [ %46, %45 ], [ %2, %42 ], [ %30, %29 ], [ %2, %26 ], [ %14, %13 ], [ %2, %10 ]
  %55 = zext i32 %54 to i64
  %56 = shl i64 1, %55
  %57 = load i64, i64* %53, align 8
  %58 = or i64 %57, %56
  store i64 %58, i64* %53, align 8
  ret void
}

; Function Attrs: nounwind ssp uwtable
define hidden zeroext i1 @_ZNK2v88internal8compiler29TopTierRegisterAllocationData15IsBlockBoundaryENS1_16LifetimePositionE(%"class.v8::internal::compiler::TopTierRegisterAllocationData"* nocapture readonly, i32) local_unnamed_addr #0 align 2 {
  %3 = and i32 %1, 3
  %4 = icmp eq i32 %3, 0
  br i1 %4, label %5, label %18

5:                                                ; preds = %2
  %6 = sdiv i32 %1, 4
  %7 = sext i32 %6 to i64
  %8 = getelementptr inbounds %"class.v8::internal::compiler::TopTierRegisterAllocationData", %"class.v8::internal::compiler::TopTierRegisterAllocationData"* %0, i64 0, i32 3
  %9 = load %"class.v8::internal::compiler::InstructionSequence"*, %"class.v8::internal::compiler::InstructionSequence"** %8, align 8
  %10 = getelementptr inbounds %"class.v8::internal::compiler::InstructionSequence", %"class.v8::internal::compiler::InstructionSequence"* %9, i64 0, i32 8, i32 0, i32 0, i32 2, i32 0, i32 0
  %11 = load i64, i64* %10, align 8
  %12 = icmp eq i64 %11, %7
  br i1 %12, label %18, label %13

13:                                               ; preds = %5
  %14 = tail call %"class.v8::internal::compiler::InstructionBlock"* @_ZNK2v88internal8compiler19InstructionSequence19GetInstructionBlockEi(%"class.v8::internal::compiler::InstructionSequence"* %9, i32 %6) #16
  %15 = getelementptr inbounds %"class.v8::internal::compiler::InstructionBlock", %"class.v8::internal::compiler::InstructionBlock"* %14, i64 0, i32 8
  %16 = load i32, i32* %15, align 4
  %17 = icmp eq i32 %16, %6
  br label %18

18:                                               ; preds = %5, %13, %2
  %19 = phi i1 [ false, %2 ], [ true, %5 ], [ %17, %13 ]
  ret i1 %19
}

; Function Attrs: nofree norecurse nounwind ssp uwtable writeonly
define hidden void @_ZN2v88internal8compiler17ConstraintBuilderC2EPNS1_29TopTierRegisterAllocationDataE(%"class.v8::internal::compiler::ConstraintBuilder"* nocapture, %"class.v8::internal::compiler::TopTierRegisterAllocationData"*) unnamed_addr #7 align 2 {
  %3 = getelementptr inbounds %"class.v8::internal::compiler::ConstraintBuilder", %"class.v8::internal::compiler::ConstraintBuilder"* %0, i64 0, i32 0
  store %"class.v8::internal::compiler::TopTierRegisterAllocationData"* %1, %"class.v8::internal::compiler::TopTierRegisterAllocationData"** %3, align 8
  ret void
}

; Function Attrs: nounwind ssp uwtable
define hidden %"class.v8::internal::compiler::InstructionOperand"* @_ZN2v88internal8compiler17ConstraintBuilder13AllocateFixedEPNS1_18UnallocatedOperandEibb(%"class.v8::internal::compiler::ConstraintBuilder"* nocapture readonly, %"class.v8::internal::compiler::UnallocatedOperand"*, i32, i1 zeroext, i1 zeroext) local_unnamed_addr #0 align 2 {
  %6 = getelementptr inbounds %"class.v8::internal::compiler::ConstraintBuilder", %"class.v8::internal::compiler::ConstraintBuilder"* %0, i64 0, i32 0
  %7 = load %"class.v8::internal::compiler::TopTierRegisterAllocationData"*, %"class.v8::internal::compiler::TopTierRegisterAllocationData"** %6, align 8
  %8 = getelementptr inbounds %"class.v8::internal::compiler::TopTierRegisterAllocationData", %"class.v8::internal::compiler::TopTierRegisterAllocationData"* %7, i64 0, i32 23, i32 0
  %9 = load i32, i32* %8, align 4
  %10 = and i32 %9, 1
  %11 = icmp eq i32 %10, 0
  br i1 %11, label %17, label %12

12:                                               ; preds = %5
  %13 = getelementptr inbounds %"class.v8::internal::compiler::UnallocatedOperand", %"class.v8::internal::compiler::UnallocatedOperand"* %1, i64 0, i32 0, i32 0
  %14 = load i64, i64* %13, align 8
  %15 = lshr i64 %14, 3
  %16 = trunc i64 %15 to i32
  tail call void (i8*, ...) @_ZN2v88internal6PrintFEPKcz(i8* getelementptr inbounds ([32 x i8], [32 x i8]* @.str.30, i64 0, i64 0), i32 %16) #16
  br label %17

17:                                               ; preds = %5, %12
  %18 = getelementptr inbounds %"class.v8::internal::compiler::UnallocatedOperand", %"class.v8::internal::compiler::UnallocatedOperand"* %1, i64 0, i32 0, i32 0
  %19 = load i64, i64* %18, align 8
  %20 = lshr i64 %19, 3
  %21 = trunc i64 %20 to i32
  %22 = icmp eq i32 %21, -1
  br i1 %22, label %29, label %23

23:                                               ; preds = %17
  %24 = load %"class.v8::internal::compiler::TopTierRegisterAllocationData"*, %"class.v8::internal::compiler::TopTierRegisterAllocationData"** %6, align 8
  %25 = getelementptr inbounds %"class.v8::internal::compiler::TopTierRegisterAllocationData", %"class.v8::internal::compiler::TopTierRegisterAllocationData"* %24, i64 0, i32 3
  %26 = load %"class.v8::internal::compiler::InstructionSequence"*, %"class.v8::internal::compiler::InstructionSequence"** %25, align 8
  %27 = tail call zeroext i8 @_ZNK2v88internal8compiler19InstructionSequence17GetRepresentationEi(%"class.v8::internal::compiler::InstructionSequence"* %26, i32 %21) #16
  %28 = load i64, i64* %18, align 8
  br label %29

29:                                               ; preds = %17, %23
  %30 = phi i64 [ %28, %23 ], [ %19, %17 ]
  %31 = phi i8 [ %27, %23 ], [ 5, %17 ]
  %32 = and i64 %30, 34359738368
  %33 = icmp eq i64 %32, 0
  br i1 %33, label %34, label %41

34:                                               ; preds = %29
  %35 = ashr i64 %30, 36
  %36 = zext i8 %31 to i64
  %37 = shl nuw nsw i64 %36, 5
  %38 = shl nsw i64 %35, 35
  %39 = or i64 %37, %38
  %40 = or i64 %39, 8
  br label %56

41:                                               ; preds = %29
  %42 = and i64 %30, 515396075520
  switch i64 %42, label %55 [
    i64 240518168576, label %43
    i64 309237645312, label %49
  ]

43:                                               ; preds = %41
  %44 = zext i8 %31 to i64
  %45 = shl nuw nsw i64 %44, 5
  %46 = lshr i64 %30, 6
  %47 = and i64 %46, 2164663517184
  %48 = or i64 %47, %45
  br label %56

49:                                               ; preds = %41
  %50 = zext i8 %31 to i64
  %51 = shl nuw nsw i64 %50, 5
  %52 = lshr i64 %30, 6
  %53 = and i64 %52, 2164663517184
  %54 = or i64 %53, %51
  br label %56

55:                                               ; preds = %41
  tail call void (i8*, ...) @_Z8V8_FatalPKcz(i8* getelementptr inbounds ([17 x i8], [17 x i8]* @.str, i64 0, i64 0)) #17
  unreachable

56:                                               ; preds = %43, %49, %34
  %57 = phi i64 [ %40, %34 ], [ %48, %43 ], [ %54, %49 ]
  %58 = or i64 %57, 5
  %59 = and i64 %57, 24
  %60 = icmp eq i64 %59, 0
  %61 = and i1 %60, %4
  br i1 %61, label %62, label %114

62:                                               ; preds = %56
  %63 = load %"class.v8::internal::compiler::TopTierRegisterAllocationData"*, %"class.v8::internal::compiler::TopTierRegisterAllocationData"** %6, align 8
  %64 = lshr i64 %30, 41
  %65 = trunc i64 %64 to i32
  %66 = and i32 %65, 63
  switch i8 %31, label %95 [
    i8 12, label %67
    i8 14, label %67
    i8 13, label %81
  ]

67:                                               ; preds = %62, %62
  %68 = getelementptr inbounds %"class.v8::internal::compiler::TopTierRegisterAllocationData", %"class.v8::internal::compiler::TopTierRegisterAllocationData"* %63, i64 0, i32 19
  %69 = load %"class.v8::internal::BitVector"*, %"class.v8::internal::BitVector"** %68, align 8
  %70 = getelementptr inbounds %"class.v8::internal::BitVector", %"class.v8::internal::BitVector"* %69, i64 0, i32 1
  %71 = load i32, i32* %70, align 4
  %72 = icmp eq i32 %71, 1
  %73 = zext i32 %66 to i64
  %74 = shl i64 1, %73
  br i1 %72, label %75, label %78

75:                                               ; preds = %67
  %76 = getelementptr inbounds %"class.v8::internal::BitVector", %"class.v8::internal::BitVector"* %69, i64 0, i32 2
  %77 = bitcast %"union.v8::internal::BitVector::DataStorage"* %76 to i64*
  br label %109

78:                                               ; preds = %67
  %79 = getelementptr inbounds %"class.v8::internal::BitVector", %"class.v8::internal::BitVector"* %69, i64 0, i32 2, i32 0
  %80 = load i64*, i64** %79, align 8
  br label %109

81:                                               ; preds = %62
  %82 = getelementptr inbounds %"class.v8::internal::compiler::TopTierRegisterAllocationData", %"class.v8::internal::compiler::TopTierRegisterAllocationData"* %63, i64 0, i32 19
  %83 = load %"class.v8::internal::BitVector"*, %"class.v8::internal::BitVector"** %82, align 8
  %84 = getelementptr inbounds %"class.v8::internal::BitVector", %"class.v8::internal::BitVector"* %83, i64 0, i32 1
  %85 = load i32, i32* %84, align 4
  %86 = icmp eq i32 %85, 1
  %87 = zext i32 %66 to i64
  %88 = shl i64 1, %87
  br i1 %86, label %89, label %92

89:                                               ; preds = %81
  %90 = getelementptr inbounds %"class.v8::internal::BitVector", %"class.v8::internal::BitVector"* %83, i64 0, i32 2
  %91 = bitcast %"union.v8::internal::BitVector::DataStorage"* %90 to i64*
  br label %109

92:                                               ; preds = %81
  %93 = getelementptr inbounds %"class.v8::internal::BitVector", %"class.v8::internal::BitVector"* %83, i64 0, i32 2, i32 0
  %94 = load i64*, i64** %93, align 8
  br label %109

95:                                               ; preds = %62
  %96 = getelementptr inbounds %"class.v8::internal::compiler::TopTierRegisterAllocationData", %"class.v8::internal::compiler::TopTierRegisterAllocationData"* %63, i64 0, i32 18
  %97 = load %"class.v8::internal::BitVector"*, %"class.v8::internal::BitVector"** %96, align 8
  %98 = getelementptr inbounds %"class.v8::internal::BitVector", %"class.v8::internal::BitVector"* %97, i64 0, i32 1
  %99 = load i32, i32* %98, align 4
  %100 = icmp eq i32 %99, 1
  %101 = zext i32 %66 to i64
  %102 = shl i64 1, %101
  br i1 %100, label %103, label %106

103:                                              ; preds = %95
  %104 = getelementptr inbounds %"class.v8::internal::BitVector", %"class.v8::internal::BitVector"* %97, i64 0, i32 2
  %105 = bitcast %"union.v8::internal::BitVector::DataStorage"* %104 to i64*
  br label %109

106:                                              ; preds = %95
  %107 = getelementptr inbounds %"class.v8::internal::BitVector", %"class.v8::internal::BitVector"* %97, i64 0, i32 2, i32 0
  %108 = load i64*, i64** %107, align 8
  br label %109

109:                                              ; preds = %75, %78, %89, %92, %103, %106
  %110 = phi i64* [ %108, %106 ], [ %105, %103 ], [ %94, %92 ], [ %91, %89 ], [ %80, %78 ], [ %77, %75 ]
  %111 = phi i64 [ %102, %106 ], [ %102, %103 ], [ %88, %92 ], [ %88, %89 ], [ %74, %78 ], [ %74, %75 ]
  %112 = load i64, i64* %110, align 8
  %113 = or i64 %112, %111
  store i64 %113, i64* %110, align 8
  br label %114

114:                                              ; preds = %109, %56
  %115 = getelementptr inbounds %"class.v8::internal::compiler::UnallocatedOperand", %"class.v8::internal::compiler::UnallocatedOperand"* %1, i64 0, i32 0
  store i64 %58, i64* %18, align 8
  br i1 %3, label %116, label %145

116:                                              ; preds = %114
  %117 = load %"class.v8::internal::compiler::TopTierRegisterAllocationData"*, %"class.v8::internal::compiler::TopTierRegisterAllocationData"** %6, align 8
  %118 = getelementptr inbounds %"class.v8::internal::compiler::TopTierRegisterAllocationData", %"class.v8::internal::compiler::TopTierRegisterAllocationData"* %117, i64 0, i32 23, i32 0
  %119 = load i32, i32* %118, align 4
  %120 = and i32 %119, 1
  %121 = icmp eq i32 %120, 0
  br i1 %121, label %124, label %122

122:                                              ; preds = %116
  tail call void (i8*, ...) @_ZN2v88internal6PrintFEPKcz(i8* getelementptr inbounds ([27 x i8], [27 x i8]* @.str.31, i64 0, i64 0), i32 %2) #16
  %123 = load %"class.v8::internal::compiler::TopTierRegisterAllocationData"*, %"class.v8::internal::compiler::TopTierRegisterAllocationData"** %6, align 8
  br label %124

124:                                              ; preds = %116, %122
  %125 = phi %"class.v8::internal::compiler::TopTierRegisterAllocationData"* [ %117, %116 ], [ %123, %122 ]
  %126 = getelementptr inbounds %"class.v8::internal::compiler::TopTierRegisterAllocationData", %"class.v8::internal::compiler::TopTierRegisterAllocationData"* %125, i64 0, i32 3
  %127 = load %"class.v8::internal::compiler::InstructionSequence"*, %"class.v8::internal::compiler::InstructionSequence"** %126, align 8
  %128 = sext i32 %2 to i64
  %129 = getelementptr inbounds %"class.v8::internal::compiler::InstructionSequence", %"class.v8::internal::compiler::InstructionSequence"* %127, i64 0, i32 8, i32 0, i32 0, i32 1
  %130 = load i64, i64* %129, align 8
  %131 = add i64 %130, %128
  %132 = getelementptr inbounds %"class.v8::internal::compiler::InstructionSequence", %"class.v8::internal::compiler::InstructionSequence"* %127, i64 0, i32 8, i32 0, i32 0, i32 0, i32 1
  %133 = load %"class.v8::internal::compiler::Instruction"***, %"class.v8::internal::compiler::Instruction"**** %132, align 8
  %134 = lshr i64 %131, 9
  %135 = getelementptr inbounds %"class.v8::internal::compiler::Instruction"**, %"class.v8::internal::compiler::Instruction"*** %133, i64 %134
  %136 = load %"class.v8::internal::compiler::Instruction"**, %"class.v8::internal::compiler::Instruction"*** %135, align 8
  %137 = and i64 %131, 511
  %138 = getelementptr inbounds %"class.v8::internal::compiler::Instruction"*, %"class.v8::internal::compiler::Instruction"** %136, i64 %137
  %139 = load %"class.v8::internal::compiler::Instruction"*, %"class.v8::internal::compiler::Instruction"** %138, align 8
  %140 = getelementptr inbounds %"class.v8::internal::compiler::Instruction", %"class.v8::internal::compiler::Instruction"* %139, i64 0, i32 3
  %141 = load %"class.v8::internal::compiler::ReferenceMap"*, %"class.v8::internal::compiler::ReferenceMap"** %140, align 8
  %142 = icmp eq %"class.v8::internal::compiler::ReferenceMap"* %141, null
  br i1 %142, label %145, label %143

143:                                              ; preds = %124
  %144 = bitcast %"class.v8::internal::compiler::UnallocatedOperand"* %1 to %"class.v8::internal::compiler::AllocatedOperand"*
  tail call void @_ZN2v88internal8compiler12ReferenceMap15RecordReferenceERKNS1_16AllocatedOperandE(%"class.v8::internal::compiler::ReferenceMap"* nonnull %141, %"class.v8::internal::compiler::AllocatedOperand"* dereferenceable(8) %144) #16
  br label %145

145:                                              ; preds = %124, %143, %114
  ret %"class.v8::internal::compiler::InstructionOperand"* %115
}

declare void @_ZN2v88internal8compiler12ReferenceMap15RecordReferenceERKNS1_16AllocatedOperandE(%"class.v8::internal::compiler::ReferenceMap"*, %"class.v8::internal::compiler::AllocatedOperand"* dereferenceable(8)) local_unnamed_addr #6

; Function Attrs: nounwind ssp uwtable
define hidden void @_ZN2v88internal8compiler17ConstraintBuilder23MeetRegisterConstraintsEv(%"class.v8::internal::compiler::ConstraintBuilder"* nocapture readonly) local_unnamed_addr #0 align 2 {
  %2 = getelementptr inbounds %"class.v8::internal::compiler::ConstraintBuilder", %"class.v8::internal::compiler::ConstraintBuilder"* %0, i64 0, i32 0
  %3 = load %"class.v8::internal::compiler::TopTierRegisterAllocationData"*, %"class.v8::internal::compiler::TopTierRegisterAllocationData"** %2, align 8
  %4 = getelementptr inbounds %"class.v8::internal::compiler::TopTierRegisterAllocationData", %"class.v8::internal::compiler::TopTierRegisterAllocationData"* %3, i64 0, i32 3
  %5 = load %"class.v8::internal::compiler::InstructionSequence"*, %"class.v8::internal::compiler::InstructionSequence"** %4, align 8
  %6 = getelementptr inbounds %"class.v8::internal::compiler::InstructionSequence", %"class.v8::internal::compiler::InstructionSequence"* %5, i64 0, i32 2
  %7 = load %"class.v8::internal::ZoneVector.1170"*, %"class.v8::internal::ZoneVector.1170"** %6, align 8
  %8 = getelementptr inbounds %"class.v8::internal::ZoneVector.1170", %"class.v8::internal::ZoneVector.1170"* %7, i64 0, i32 0, i32 0, i32 0
  %9 = load %"class.v8::internal::compiler::InstructionBlock"**, %"class.v8::internal::compiler::InstructionBlock"*** %8, align 8
  %10 = getelementptr inbounds %"class.v8::internal::ZoneVector.1170", %"class.v8::internal::ZoneVector.1170"* %7, i64 0, i32 0, i32 0, i32 1
  %11 = load %"class.v8::internal::compiler::InstructionBlock"**, %"class.v8::internal::compiler::InstructionBlock"*** %10, align 8
  %12 = icmp eq %"class.v8::internal::compiler::InstructionBlock"** %9, %11
  br i1 %12, label %13, label %14

13:                                               ; preds = %33, %1
  ret void

14:                                               ; preds = %1, %36
  %15 = phi %"class.v8::internal::compiler::TopTierRegisterAllocationData"* [ %37, %36 ], [ %3, %1 ]
  %16 = phi %"class.v8::internal::compiler::InstructionBlock"** [ %34, %36 ], [ %9, %1 ]
  %17 = load %"class.v8::internal::compiler::InstructionBlock"*, %"class.v8::internal::compiler::InstructionBlock"** %16, align 8
  %18 = getelementptr inbounds %"class.v8::internal::compiler::TopTierRegisterAllocationData", %"class.v8::internal::compiler::TopTierRegisterAllocationData"* %15, i64 0, i32 24
  %19 = load %"class.v8::internal::TickCounter"*, %"class.v8::internal::TickCounter"** %18, align 8
  tail call void @_ZN2v88internal11TickCounter26TickAndMaybeEnterSafepointEv(%"class.v8::internal::TickCounter"* %19) #16
  %20 = getelementptr inbounds %"class.v8::internal::compiler::InstructionBlock", %"class.v8::internal::compiler::InstructionBlock"* %17, i64 0, i32 8
  %21 = load i32, i32* %20, align 4
  %22 = getelementptr inbounds %"class.v8::internal::compiler::InstructionBlock", %"class.v8::internal::compiler::InstructionBlock"* %17, i64 0, i32 9
  %23 = load i32, i32* %22, align 8
  %24 = add nsw i32 %23, -1
  %25 = icmp slt i32 %21, %23
  br i1 %25, label %26, label %33

26:                                               ; preds = %14, %30
  %27 = phi i32 [ %31, %30 ], [ %21, %14 ]
  tail call void @_ZN2v88internal8compiler17ConstraintBuilder21MeetConstraintsBeforeEi(%"class.v8::internal::compiler::ConstraintBuilder"* %0, i32 %27) #16
  %28 = icmp eq i32 %27, %24
  br i1 %28, label %30, label %29

29:                                               ; preds = %26
  tail call void @_ZN2v88internal8compiler17ConstraintBuilder20MeetConstraintsAfterEi(%"class.v8::internal::compiler::ConstraintBuilder"* %0, i32 %27) #16
  br label %30

30:                                               ; preds = %29, %26
  %31 = add i32 %27, 1
  %32 = icmp eq i32 %31, %23
  br i1 %32, label %33, label %26

33:                                               ; preds = %30, %14
  tail call void @_ZN2v88internal8compiler17ConstraintBuilder48MeetRegisterConstraintsForLastInstructionInBlockEPKNS1_16InstructionBlockE(%"class.v8::internal::compiler::ConstraintBuilder"* %0, %"class.v8::internal::compiler::InstructionBlock"* %17) #16
  %34 = getelementptr inbounds %"class.v8::internal::compiler::InstructionBlock"*, %"class.v8::internal::compiler::InstructionBlock"** %16, i64 1
  %35 = icmp eq %"class.v8::internal::compiler::InstructionBlock"** %34, %11
  br i1 %35, label %13, label %36

36:                                               ; preds = %33
  %37 = load %"class.v8::internal::compiler::TopTierRegisterAllocationData"*, %"class.v8::internal::compiler::TopTierRegisterAllocationData"** %2, align 8
  br label %14
}

declare void @_ZN2v88internal11TickCounter26TickAndMaybeEnterSafepointEv(%"class.v8::internal::TickCounter"*) local_unnamed_addr #6

; Function Attrs: nounwind ssp uwtable
define hidden void @_ZN2v88internal8compiler17ConstraintBuilder23MeetRegisterConstraintsEPKNS1_16InstructionBlockE(%"class.v8::internal::compiler::ConstraintBuilder"* nocapture readonly, %"class.v8::internal::compiler::InstructionBlock"* nocapture readonly) local_unnamed_addr #0 align 2 {
  %3 = getelementptr inbounds %"class.v8::internal::compiler::InstructionBlock", %"class.v8::internal::compiler::InstructionBlock"* %1, i64 0, i32 8
  %4 = load i32, i32* %3, align 4
  %5 = getelementptr inbounds %"class.v8::internal::compiler::InstructionBlock", %"class.v8::internal::compiler::InstructionBlock"* %1, i64 0, i32 9
  %6 = load i32, i32* %5, align 8
  %7 = add nsw i32 %6, -1
  %8 = icmp slt i32 %4, %6
  br i1 %8, label %10, label %9

9:                                                ; preds = %14, %2
  tail call void @_ZN2v88internal8compiler17ConstraintBuilder48MeetRegisterConstraintsForLastInstructionInBlockEPKNS1_16InstructionBlockE(%"class.v8::internal::compiler::ConstraintBuilder"* %0, %"class.v8::internal::compiler::InstructionBlock"* %1)
  ret void

10:                                               ; preds = %2, %14
  %11 = phi i32 [ %15, %14 ], [ %4, %2 ]
  tail call void @_ZN2v88internal8compiler17ConstraintBuilder21MeetConstraintsBeforeEi(%"class.v8::internal::compiler::ConstraintBuilder"* %0, i32 %11)
  %12 = icmp eq i32 %11, %7
  br i1 %12, label %14, label %13

13:                                               ; preds = %10
  tail call void @_ZN2v88internal8compiler17ConstraintBuilder20MeetConstraintsAfterEi(%"class.v8::internal::compiler::ConstraintBuilder"* %0, i32 %11)
  br label %14

14:                                               ; preds = %10, %13
  %15 = add i32 %11, 1
  %16 = icmp eq i32 %15, %6
  br i1 %16, label %9, label %10
}

; Function Attrs: nounwind ssp uwtable
define hidden void @_ZN2v88internal8compiler17ConstraintBuilder21MeetConstraintsBeforeEi(%"class.v8::internal::compiler::ConstraintBuilder"* nocapture readonly, i32) local_unnamed_addr #0 align 2 {
  %3 = alloca %"class.v8::internal::compiler::UnallocatedOperand", align 8
  %4 = alloca %"class.v8::internal::compiler::UnallocatedOperand", align 8
  %5 = alloca %"class.v8::internal::compiler::UnallocatedOperand", align 8
  %6 = getelementptr inbounds %"class.v8::internal::compiler::ConstraintBuilder", %"class.v8::internal::compiler::ConstraintBuilder"* %0, i64 0, i32 0
  %7 = load %"class.v8::internal::compiler::TopTierRegisterAllocationData"*, %"class.v8::internal::compiler::TopTierRegisterAllocationData"** %6, align 8
  %8 = getelementptr inbounds %"class.v8::internal::compiler::TopTierRegisterAllocationData", %"class.v8::internal::compiler::TopTierRegisterAllocationData"* %7, i64 0, i32 3
  %9 = load %"class.v8::internal::compiler::InstructionSequence"*, %"class.v8::internal::compiler::InstructionSequence"** %8, align 8
  %10 = sext i32 %1 to i64
  %11 = getelementptr inbounds %"class.v8::internal::compiler::InstructionSequence", %"class.v8::internal::compiler::InstructionSequence"* %9, i64 0, i32 8, i32 0, i32 0, i32 1
  %12 = load i64, i64* %11, align 8
  %13 = add i64 %12, %10
  %14 = getelementptr inbounds %"class.v8::internal::compiler::InstructionSequence", %"class.v8::internal::compiler::InstructionSequence"* %9, i64 0, i32 8, i32 0, i32 0, i32 0, i32 1
  %15 = load %"class.v8::internal::compiler::Instruction"***, %"class.v8::internal::compiler::Instruction"**** %14, align 8
  %16 = lshr i64 %13, 9
  %17 = getelementptr inbounds %"class.v8::internal::compiler::Instruction"**, %"class.v8::internal::compiler::Instruction"*** %15, i64 %16
  %18 = load %"class.v8::internal::compiler::Instruction"**, %"class.v8::internal::compiler::Instruction"*** %17, align 8
  %19 = and i64 %13, 511
  %20 = getelementptr inbounds %"class.v8::internal::compiler::Instruction"*, %"class.v8::internal::compiler::Instruction"** %18, i64 %19
  %21 = load %"class.v8::internal::compiler::Instruction"*, %"class.v8::internal::compiler::Instruction"** %20, align 8
  %22 = getelementptr inbounds %"class.v8::internal::compiler::Instruction", %"class.v8::internal::compiler::Instruction"* %21, i64 0, i32 1
  %23 = load i32, i32* %22, align 4
  %24 = and i32 %23, 16776960
  %25 = icmp eq i32 %24, 0
  br i1 %25, label %33, label %26

26:                                               ; preds = %2
  %27 = bitcast %"class.v8::internal::compiler::UnallocatedOperand"* %3 to i8*
  %28 = getelementptr inbounds %"class.v8::internal::compiler::UnallocatedOperand", %"class.v8::internal::compiler::UnallocatedOperand"* %3, i64 0, i32 0, i32 0
  %29 = getelementptr inbounds %"class.v8::internal::compiler::UnallocatedOperand", %"class.v8::internal::compiler::UnallocatedOperand"* %3, i64 0, i32 0
  %30 = bitcast %"class.v8::internal::compiler::UnallocatedOperand"* %4 to i8*
  %31 = getelementptr inbounds %"class.v8::internal::compiler::UnallocatedOperand", %"class.v8::internal::compiler::UnallocatedOperand"* %4, i64 0, i32 0, i32 0
  %32 = getelementptr inbounds %"class.v8::internal::compiler::UnallocatedOperand", %"class.v8::internal::compiler::UnallocatedOperand"* %4, i64 0, i32 0
  br label %43

33:                                               ; preds = %641, %2
  %34 = phi i32 [ %23, %2 ], [ %644, %641 ]
  %35 = and i32 %34, 255
  %36 = icmp eq i32 %35, 0
  br i1 %36, label %649, label %37

37:                                               ; preds = %33
  %38 = zext i32 %35 to i64
  %39 = bitcast %"class.v8::internal::compiler::UnallocatedOperand"* %5 to i8*
  %40 = getelementptr inbounds %"class.v8::internal::compiler::UnallocatedOperand", %"class.v8::internal::compiler::UnallocatedOperand"* %5, i64 0, i32 0, i32 0
  %41 = getelementptr inbounds %"class.v8::internal::compiler::UnallocatedOperand", %"class.v8::internal::compiler::UnallocatedOperand"* %5, i64 0, i32 0
  %42 = getelementptr inbounds %"class.v8::internal::compiler::Instruction", %"class.v8::internal::compiler::Instruction"* %21, i64 0, i32 3
  br label %650

43:                                               ; preds = %26, %641
  %44 = phi i32 [ %23, %26 ], [ %644, %641 ]
  %45 = phi %"class.v8::internal::ZoneVector"* [ null, %26 ], [ %642, %641 ]
  %46 = phi i64 [ 0, %26 ], [ %643, %641 ]
  %47 = and i32 %44, 255
  %48 = zext i32 %47 to i64
  %49 = add nuw i64 %46, %48
  %50 = getelementptr inbounds %"class.v8::internal::compiler::Instruction", %"class.v8::internal::compiler::Instruction"* %21, i64 0, i32 5, i64 %49
  %51 = getelementptr inbounds %"class.v8::internal::compiler::InstructionOperand", %"class.v8::internal::compiler::InstructionOperand"* %50, i64 0, i32 0
  %52 = load i64, i64* %51, align 8
  %53 = and i64 %52, 7
  %54 = icmp eq i64 %53, 3
  br i1 %54, label %641, label %55

55:                                               ; preds = %43
  %56 = bitcast %"class.v8::internal::compiler::InstructionOperand"* %50 to %"class.v8::internal::compiler::UnallocatedOperand"*
  %57 = and i64 %52, 515396075520
  %58 = icmp eq i64 %57, 446676598784
  br i1 %58, label %59, label %573

59:                                               ; preds = %55
  %60 = load %"class.v8::internal::compiler::TopTierRegisterAllocationData"*, %"class.v8::internal::compiler::TopTierRegisterAllocationData"** %6, align 8
  %61 = lshr i64 %52, 3
  %62 = trunc i64 %61 to i32
  %63 = call %"class.v8::internal::compiler::TopLevelLiveRange"* @_ZN2v88internal8compiler29TopTierRegisterAllocationData23GetOrCreateLiveRangeForEi(%"class.v8::internal::compiler::TopTierRegisterAllocationData"* %60, i32 %62)
  %64 = ptrtoint %"class.v8::internal::compiler::TopLevelLiveRange"* %63 to i64
  %65 = getelementptr inbounds %"class.v8::internal::compiler::TopLevelLiveRange", %"class.v8::internal::compiler::TopLevelLiveRange"* %63, i64 0, i32 0, i32 1
  %66 = load i32, i32* %65, align 4
  %67 = and i32 %66, 96
  %68 = icmp eq i32 %67, 32
  br i1 %68, label %69, label %573

69:                                               ; preds = %59
  %70 = getelementptr inbounds %"class.v8::internal::compiler::TopLevelLiveRange", %"class.v8::internal::compiler::TopLevelLiveRange"* %63, i64 0, i32 3, i32 0
  %71 = load %"class.v8::internal::compiler::InstructionOperand"*, %"class.v8::internal::compiler::InstructionOperand"** %70, align 8
  %72 = getelementptr inbounds %"class.v8::internal::compiler::InstructionOperand", %"class.v8::internal::compiler::InstructionOperand"* %71, i64 0, i32 0
  %73 = load i64, i64* %72, align 8
  %74 = and i64 %73, 7
  %75 = icmp eq i64 %74, 2
  br i1 %75, label %76, label %573

76:                                               ; preds = %69
  %77 = icmp eq %"class.v8::internal::ZoneVector"* %45, null
  br i1 %77, label %78, label %99

78:                                               ; preds = %76
  %79 = load %"class.v8::internal::compiler::TopTierRegisterAllocationData"*, %"class.v8::internal::compiler::TopTierRegisterAllocationData"** %6, align 8
  %80 = getelementptr inbounds %"class.v8::internal::compiler::TopTierRegisterAllocationData", %"class.v8::internal::compiler::TopTierRegisterAllocationData"* %79, i64 0, i32 1
  %81 = load %"class.v8::internal::Zone"*, %"class.v8::internal::Zone"** %80, align 8
  %82 = ptrtoint %"class.v8::internal::Zone"* %81 to i64
  %83 = getelementptr inbounds %"class.v8::internal::Zone", %"class.v8::internal::Zone"* %81, i64 0, i32 2
  %84 = load i64, i64* %83, align 8
  %85 = getelementptr inbounds %"class.v8::internal::Zone", %"class.v8::internal::Zone"* %81, i64 0, i32 3
  %86 = load i64, i64* %85, align 8
  %87 = sub i64 %86, %84
  %88 = icmp ult i64 %87, 32
  br i1 %88, label %89, label %91, !prof !2

89:                                               ; preds = %78
  %90 = call i64 @_ZN2v88internal4Zone9NewExpandEm(%"class.v8::internal::Zone"* %81, i64 32) #16
  br label %93

91:                                               ; preds = %78
  %92 = add i64 %84, 32
  store i64 %92, i64* %83, align 8
  br label %93

93:                                               ; preds = %89, %91
  %94 = phi i64 [ %90, %89 ], [ %84, %91 ]
  %95 = inttoptr i64 %94 to i8*
  %96 = inttoptr i64 %94 to %"class.v8::internal::ZoneVector"*
  %97 = getelementptr inbounds %"class.v8::internal::ZoneVector", %"class.v8::internal::ZoneVector"* %96, i64 0, i32 0, i32 0, i32 2, i32 1
  %98 = bitcast %"struct.std::__1::__compressed_pair_elem.34"* %97 to i64*
  call void @llvm.memset.p0i8.i64(i8* align 8 %95, i8 0, i64 24, i1 false) #16
  store i64 %82, i64* %98, align 8
  br label %115

99:                                               ; preds = %76
  %100 = getelementptr inbounds %"class.v8::internal::ZoneVector", %"class.v8::internal::ZoneVector"* %45, i64 0, i32 0, i32 0, i32 0
  %101 = load %"class.v8::internal::compiler::TopLevelLiveRange"**, %"class.v8::internal::compiler::TopLevelLiveRange"*** %100, align 8
  %102 = getelementptr inbounds %"class.v8::internal::ZoneVector", %"class.v8::internal::ZoneVector"* %45, i64 0, i32 0, i32 0, i32 1
  %103 = load %"class.v8::internal::compiler::TopLevelLiveRange"**, %"class.v8::internal::compiler::TopLevelLiveRange"*** %102, align 8
  %104 = icmp eq %"class.v8::internal::compiler::TopLevelLiveRange"** %101, %103
  br i1 %104, label %112, label %105

105:                                              ; preds = %99, %109
  %106 = phi %"class.v8::internal::compiler::TopLevelLiveRange"** [ %110, %109 ], [ %101, %99 ]
  %107 = load %"class.v8::internal::compiler::TopLevelLiveRange"*, %"class.v8::internal::compiler::TopLevelLiveRange"** %106, align 8
  %108 = icmp eq %"class.v8::internal::compiler::TopLevelLiveRange"* %107, %63
  br i1 %108, label %112, label %109

109:                                              ; preds = %105
  %110 = getelementptr inbounds %"class.v8::internal::compiler::TopLevelLiveRange"*, %"class.v8::internal::compiler::TopLevelLiveRange"** %106, i64 1
  %111 = icmp eq %"class.v8::internal::compiler::TopLevelLiveRange"** %110, %103
  br i1 %111, label %112, label %105

112:                                              ; preds = %105, %109, %99
  %113 = phi %"class.v8::internal::compiler::TopLevelLiveRange"** [ %101, %99 ], [ %106, %105 ], [ %103, %109 ]
  %114 = icmp ne %"class.v8::internal::compiler::TopLevelLiveRange"** %113, %103
  br label %115

115:                                              ; preds = %112, %93
  %116 = phi i1 [ false, %93 ], [ %114, %112 ]
  %117 = phi %"class.v8::internal::ZoneVector"* [ %96, %93 ], [ %45, %112 ]
  %118 = load %"class.v8::internal::compiler::TopTierRegisterAllocationData"*, %"class.v8::internal::compiler::TopTierRegisterAllocationData"** %6, align 8
  %119 = getelementptr inbounds %"class.v8::internal::compiler::TopTierRegisterAllocationData", %"class.v8::internal::compiler::TopTierRegisterAllocationData"* %118, i64 0, i32 25, i32 0, i32 0, i32 1, i32 0, i32 0
  %120 = bitcast %"class.std::__1::__tree_end_node"* %119 to %"class.std::__1::__tree_node.1569"**
  %121 = load %"class.std::__1::__tree_node.1569"*, %"class.std::__1::__tree_node.1569"** %120, align 8
  %122 = icmp eq %"class.std::__1::__tree_node.1569"* %121, null
  br i1 %122, label %144, label %123

123:                                              ; preds = %115, %123
  %124 = phi %"class.std::__1::__tree_end_node"* [ %134, %123 ], [ %119, %115 ]
  %125 = phi %"class.std::__1::__tree_node.1569"* [ %135, %123 ], [ %121, %115 ]
  %126 = getelementptr inbounds %"class.std::__1::__tree_node.1569", %"class.std::__1::__tree_node.1569"* %125, i64 0, i32 1, i32 0, i32 0
  %127 = load %"class.v8::internal::compiler::TopLevelLiveRange"*, %"class.v8::internal::compiler::TopLevelLiveRange"** %126, align 8
  %128 = icmp ult %"class.v8::internal::compiler::TopLevelLiveRange"* %127, %63
  %129 = getelementptr inbounds %"class.std::__1::__tree_node.1569", %"class.std::__1::__tree_node.1569"* %125, i64 0, i32 0, i32 1
  %130 = bitcast %"class.std::__1::__tree_node_base"** %129 to %"class.std::__1::__tree_node.1569"**
  %131 = getelementptr inbounds %"class.std::__1::__tree_node.1569", %"class.std::__1::__tree_node.1569"* %125, i64 0, i32 0, i32 0
  %132 = bitcast %"class.std::__1::__tree_node.1569"* %125 to %"class.std::__1::__tree_node.1569"**
  %133 = select i1 %128, %"class.std::__1::__tree_node.1569"** %130, %"class.std::__1::__tree_node.1569"** %132
  %134 = select i1 %128, %"class.std::__1::__tree_end_node"* %124, %"class.std::__1::__tree_end_node"* %131
  %135 = load %"class.std::__1::__tree_node.1569"*, %"class.std::__1::__tree_node.1569"** %133, align 8
  %136 = icmp eq %"class.std::__1::__tree_node.1569"* %135, null
  br i1 %136, label %137, label %123

137:                                              ; preds = %123
  %138 = icmp eq %"class.std::__1::__tree_end_node"* %134, %119
  br i1 %138, label %144, label %139

139:                                              ; preds = %137
  %140 = getelementptr inbounds %"class.std::__1::__tree_end_node", %"class.std::__1::__tree_end_node"* %134, i64 4
  %141 = bitcast %"class.std::__1::__tree_end_node"* %140 to %"class.v8::internal::compiler::TopLevelLiveRange"**
  %142 = load %"class.v8::internal::compiler::TopLevelLiveRange"*, %"class.v8::internal::compiler::TopLevelLiveRange"** %141, align 8
  %143 = icmp ult %"class.v8::internal::compiler::TopLevelLiveRange"* %63, %142
  br i1 %143, label %144, label %284

144:                                              ; preds = %139, %137, %115
  %145 = load i32, i32* %65, align 4
  %146 = lshr i32 %145, 13
  %147 = trunc i32 %146 to i8
  switch i8 %147, label %148 [
    i8 1, label %149
    i8 2, label %149
    i8 3, label %149
    i8 4, label %149
    i8 12, label %149
    i8 7, label %149
    i8 8, label %149
    i8 9, label %149
    i8 10, label %149
    i8 11, label %149
    i8 5, label %149
    i8 13, label %149
    i8 14, label %156
  ]

148:                                              ; preds = %144
  call void (i8*, ...) @_Z8V8_FatalPKcz(i8* getelementptr inbounds ([17 x i8], [17 x i8]* @.str, i64 0, i64 0)) #17
  unreachable

149:                                              ; preds = %144, %144, %144, %144, %144, %144, %144, %144, %144, %144, %144, %144
  %150 = getelementptr inbounds %"class.v8::internal::compiler::TopTierRegisterAllocationData", %"class.v8::internal::compiler::TopTierRegisterAllocationData"* %118, i64 0, i32 2
  %151 = load %"class.v8::internal::compiler::Frame"*, %"class.v8::internal::compiler::Frame"** %150, align 8
  %152 = getelementptr inbounds %"class.v8::internal::compiler::Frame", %"class.v8::internal::compiler::Frame"* %151, i64 0, i32 3
  %153 = getelementptr inbounds %"class.v8::internal::compiler::Frame", %"class.v8::internal::compiler::Frame"* %151, i64 0, i32 3, i32 3
  %154 = load i32, i32* %153, align 4
  %155 = call i32 @_ZN2v88internal20AlignedSlotAllocator8AllocateEi(%"class.v8::internal::AlignedSlotAllocator"* %152, i32 1) #16
  br label %163

156:                                              ; preds = %144
  %157 = getelementptr inbounds %"class.v8::internal::compiler::TopTierRegisterAllocationData", %"class.v8::internal::compiler::TopTierRegisterAllocationData"* %118, i64 0, i32 2
  %158 = load %"class.v8::internal::compiler::Frame"*, %"class.v8::internal::compiler::Frame"** %157, align 8
  %159 = getelementptr inbounds %"class.v8::internal::compiler::Frame", %"class.v8::internal::compiler::Frame"* %158, i64 0, i32 3
  %160 = getelementptr inbounds %"class.v8::internal::compiler::Frame", %"class.v8::internal::compiler::Frame"* %158, i64 0, i32 3, i32 3
  %161 = load i32, i32* %160, align 4
  %162 = call i32 @_ZN2v88internal20AlignedSlotAllocator17AllocateUnalignedEi(%"class.v8::internal::AlignedSlotAllocator"* %159, i32 2) #16
  br label %163

163:                                              ; preds = %149, %156
  %164 = phi i32 [ %154, %149 ], [ %161, %156 ]
  %165 = phi i32* [ %153, %149 ], [ %160, %156 ]
  %166 = phi i32 [ 0, %149 ], [ 1, %156 ]
  %167 = phi %"class.v8::internal::compiler::Frame"* [ %151, %149 ], [ %158, %156 ]
  %168 = phi i32 [ %155, %149 ], [ %162, %156 ]
  %169 = load i32, i32* %165, align 4
  %170 = sub i32 %169, %164
  %171 = getelementptr inbounds %"class.v8::internal::compiler::Frame", %"class.v8::internal::compiler::Frame"* %167, i64 0, i32 1
  %172 = load i32, i32* %171, align 4
  %173 = add nsw i32 %170, %172
  store i32 %173, i32* %171, align 4
  %174 = add i32 %168, %166
  %175 = load %"class.v8::internal::compiler::TopTierRegisterAllocationData"*, %"class.v8::internal::compiler::TopTierRegisterAllocationData"** %6, align 8
  %176 = getelementptr inbounds %"class.v8::internal::compiler::TopTierRegisterAllocationData", %"class.v8::internal::compiler::TopTierRegisterAllocationData"* %175, i64 0, i32 1
  %177 = load %"class.v8::internal::Zone"*, %"class.v8::internal::Zone"** %176, align 8
  %178 = load i32, i32* %65, align 4
  %179 = lshr i32 %178, 8
  %180 = and i32 %179, 8160
  %181 = zext i32 %174 to i64
  %182 = shl i64 %181, 35
  %183 = or i32 %180, 8
  %184 = zext i32 %183 to i64
  %185 = or i64 %182, %184
  %186 = or i64 %185, 5
  %187 = getelementptr inbounds %"class.v8::internal::Zone", %"class.v8::internal::Zone"* %177, i64 0, i32 2
  %188 = load i64, i64* %187, align 8
  %189 = getelementptr inbounds %"class.v8::internal::Zone", %"class.v8::internal::Zone"* %177, i64 0, i32 3
  %190 = load i64, i64* %189, align 8
  %191 = sub i64 %190, %188
  %192 = icmp ult i64 %191, 8
  br i1 %192, label %193, label %195, !prof !2

193:                                              ; preds = %163
  %194 = call i64 @_ZN2v88internal4Zone9NewExpandEm(%"class.v8::internal::Zone"* %177, i64 8) #16
  br label %197

195:                                              ; preds = %163
  %196 = add i64 %188, 8
  store i64 %196, i64* %187, align 8
  br label %197

197:                                              ; preds = %193, %195
  %198 = phi i64 [ %194, %193 ], [ %188, %195 ]
  %199 = inttoptr i64 %198 to i64*
  store i64 %186, i64* %199, align 8
  %200 = load %"class.v8::internal::compiler::TopTierRegisterAllocationData"*, %"class.v8::internal::compiler::TopTierRegisterAllocationData"** %6, align 8
  %201 = getelementptr inbounds %"class.v8::internal::compiler::TopTierRegisterAllocationData", %"class.v8::internal::compiler::TopTierRegisterAllocationData"* %200, i64 0, i32 25, i32 0, i32 0
  %202 = getelementptr inbounds %"class.v8::internal::compiler::TopTierRegisterAllocationData", %"class.v8::internal::compiler::TopTierRegisterAllocationData"* %200, i64 0, i32 25, i32 0, i32 0, i32 1, i32 0, i32 0
  %203 = bitcast %"class.std::__1::__tree_end_node"* %202 to %"class.std::__1::__tree_node.1569"**
  %204 = load %"class.std::__1::__tree_node.1569"*, %"class.std::__1::__tree_node.1569"** %203, align 8
  %205 = icmp eq %"class.std::__1::__tree_node.1569"* %204, null
  br i1 %205, label %234, label %206

206:                                              ; preds = %197
  %207 = getelementptr inbounds %"class.v8::internal::compiler::TopTierRegisterAllocationData", %"class.v8::internal::compiler::TopTierRegisterAllocationData"* %200, i64 0, i32 25, i32 0, i32 0, i32 1, i32 0, i32 0, i32 0
  br label %208

208:                                              ; preds = %230, %206
  %209 = phi %"class.std::__1::__tree_node.1569"* [ %233, %230 ], [ %204, %206 ]
  %210 = phi %"class.std::__1::__tree_node_base"** [ %232, %230 ], [ %207, %206 ]
  %211 = getelementptr inbounds %"class.std::__1::__tree_node.1569", %"class.std::__1::__tree_node.1569"* %209, i64 0, i32 1, i32 0, i32 0
  %212 = load %"class.v8::internal::compiler::TopLevelLiveRange"*, %"class.v8::internal::compiler::TopLevelLiveRange"** %211, align 8
  %213 = icmp ult %"class.v8::internal::compiler::TopLevelLiveRange"* %63, %212
  br i1 %213, label %214, label %220

214:                                              ; preds = %208
  %215 = getelementptr inbounds %"class.std::__1::__tree_node.1569", %"class.std::__1::__tree_node.1569"* %209, i64 0, i32 0, i32 0, i32 0
  %216 = load %"class.std::__1::__tree_node_base"*, %"class.std::__1::__tree_node_base"** %215, align 8
  %217 = icmp eq %"class.std::__1::__tree_node_base"* %216, null
  br i1 %217, label %218, label %230

218:                                              ; preds = %214
  %219 = getelementptr inbounds %"class.std::__1::__tree_node.1569", %"class.std::__1::__tree_node.1569"* %209, i64 0, i32 0, i32 0
  br label %236

220:                                              ; preds = %208
  %221 = icmp ult %"class.v8::internal::compiler::TopLevelLiveRange"* %212, %63
  br i1 %221, label %222, label %228

222:                                              ; preds = %220
  %223 = getelementptr inbounds %"class.std::__1::__tree_node.1569", %"class.std::__1::__tree_node.1569"* %209, i64 0, i32 0, i32 1
  %224 = load %"class.std::__1::__tree_node_base"*, %"class.std::__1::__tree_node_base"** %223, align 8
  %225 = icmp eq %"class.std::__1::__tree_node_base"* %224, null
  br i1 %225, label %226, label %230

226:                                              ; preds = %222
  %227 = getelementptr inbounds %"class.std::__1::__tree_node.1569", %"class.std::__1::__tree_node.1569"* %209, i64 0, i32 0, i32 0
  br label %236

228:                                              ; preds = %220
  %229 = getelementptr inbounds %"class.std::__1::__tree_node.1569", %"class.std::__1::__tree_node.1569"* %209, i64 0, i32 0, i32 0
  br label %236

230:                                              ; preds = %222, %214
  %231 = phi %"class.std::__1::__tree_node_base"* [ %216, %214 ], [ %224, %222 ]
  %232 = phi %"class.std::__1::__tree_node_base"** [ %215, %214 ], [ %223, %222 ]
  %233 = bitcast %"class.std::__1::__tree_node_base"* %231 to %"class.std::__1::__tree_node.1569"*
  br label %208

234:                                              ; preds = %197
  %235 = getelementptr inbounds %"class.std::__1::__tree_end_node", %"class.std::__1::__tree_end_node"* %202, i64 0, i32 0
  br label %236

236:                                              ; preds = %234, %228, %226, %218
  %237 = phi %"class.std::__1::__tree_end_node"* [ %202, %234 ], [ %219, %218 ], [ %227, %226 ], [ %229, %228 ]
  %238 = phi %"class.std::__1::__tree_node_base"** [ %235, %234 ], [ %215, %218 ], [ %223, %226 ], [ %210, %228 ]
  %239 = bitcast %"class.std::__1::__tree_node_base"** %238 to %"class.std::__1::__tree_node.1569"**
  %240 = load %"class.std::__1::__tree_node.1569"*, %"class.std::__1::__tree_node.1569"** %239, align 8
  %241 = icmp eq %"class.std::__1::__tree_node.1569"* %240, null
  br i1 %241, label %242, label %281

242:                                              ; preds = %236
  %243 = getelementptr inbounds %"class.v8::internal::compiler::TopTierRegisterAllocationData", %"class.v8::internal::compiler::TopTierRegisterAllocationData"* %200, i64 0, i32 25, i32 0, i32 0, i32 1, i32 1, i32 0, i32 0
  %244 = load %"class.v8::internal::Zone"*, %"class.v8::internal::Zone"** %243, align 8, !noalias !81
  %245 = getelementptr inbounds %"class.v8::internal::Zone", %"class.v8::internal::Zone"* %244, i64 0, i32 2
  %246 = load i64, i64* %245, align 8, !noalias !81
  %247 = getelementptr inbounds %"class.v8::internal::Zone", %"class.v8::internal::Zone"* %244, i64 0, i32 3
  %248 = load i64, i64* %247, align 8, !noalias !81
  %249 = sub i64 %248, %246
  %250 = icmp ult i64 %249, 48
  br i1 %250, label %251, label %253, !prof !2

251:                                              ; preds = %242
  %252 = call i64 @_ZN2v88internal4Zone9NewExpandEm(%"class.v8::internal::Zone"* %244, i64 48) #16, !noalias !81
  br label %255

253:                                              ; preds = %242
  %254 = add i64 %246, 48
  store i64 %254, i64* %245, align 8, !noalias !81
  br label %255

255:                                              ; preds = %253, %251
  %256 = phi i64 [ %252, %251 ], [ %246, %253 ]
  %257 = inttoptr i64 %256 to %"class.std::__1::__tree_node.1569"*
  %258 = getelementptr inbounds %"class.std::__1::__tree_node.1569", %"class.std::__1::__tree_node.1569"* %257, i64 0, i32 1, i32 0
  %259 = bitcast %"struct.std::__1::pair.1366"* %258 to i64*
  store i64 %64, i64* %259, align 8, !noalias !81
  %260 = getelementptr inbounds %"class.std::__1::__tree_node.1569", %"class.std::__1::__tree_node.1569"* %257, i64 0, i32 1, i32 0, i32 1
  %261 = bitcast %"class.v8::internal::compiler::AllocatedOperand"** %260 to i64*
  store i64 %198, i64* %261, align 8, !noalias !81
  %262 = inttoptr i64 %256 to %"class.std::__1::__tree_node_base"*
  %263 = getelementptr inbounds %"class.std::__1::__tree_node_base", %"class.std::__1::__tree_node_base"* %262, i64 0, i32 2
  %264 = inttoptr i64 %256 to i8*
  call void @llvm.memset.p0i8.i64(i8* align 8 %264, i8 0, i64 16, i1 false) #16
  store %"class.std::__1::__tree_end_node"* %237, %"class.std::__1::__tree_end_node"** %263, align 8
  store %"class.std::__1::__tree_node_base"* %262, %"class.std::__1::__tree_node_base"** %238, align 8
  %265 = getelementptr inbounds %"class.std::__1::__tree.1322", %"class.std::__1::__tree.1322"* %201, i64 0, i32 0
  %266 = load %"class.std::__1::__tree_end_node"*, %"class.std::__1::__tree_end_node"** %265, align 8
  %267 = getelementptr inbounds %"class.std::__1::__tree_end_node", %"class.std::__1::__tree_end_node"* %266, i64 0, i32 0
  %268 = load %"class.std::__1::__tree_node_base"*, %"class.std::__1::__tree_node_base"** %267, align 8
  %269 = icmp eq %"class.std::__1::__tree_node_base"* %268, null
  br i1 %269, label %274, label %270

270:                                              ; preds = %255
  %271 = ptrtoint %"class.std::__1::__tree_node_base"* %268 to i64
  %272 = bitcast %"class.std::__1::__tree.1322"* %201 to i64*
  store i64 %271, i64* %272, align 8
  %273 = load %"class.std::__1::__tree_node_base"*, %"class.std::__1::__tree_node_base"** %238, align 8
  br label %274

274:                                              ; preds = %270, %255
  %275 = phi %"class.std::__1::__tree_node_base"* [ %262, %255 ], [ %273, %270 ]
  %276 = getelementptr inbounds %"class.v8::internal::compiler::TopTierRegisterAllocationData", %"class.v8::internal::compiler::TopTierRegisterAllocationData"* %200, i64 0, i32 25, i32 0, i32 0, i32 1, i32 0, i32 0, i32 0
  %277 = load %"class.std::__1::__tree_node_base"*, %"class.std::__1::__tree_node_base"** %276, align 8
  call void @_ZNSt3__127__tree_balance_after_insertIPNS_16__tree_node_baseIPvEEEEvT_S5_(%"class.std::__1::__tree_node_base"* %277, %"class.std::__1::__tree_node_base"* %275) #16
  %278 = getelementptr inbounds %"class.v8::internal::compiler::TopTierRegisterAllocationData", %"class.v8::internal::compiler::TopTierRegisterAllocationData"* %200, i64 0, i32 25, i32 0, i32 0, i32 2, i32 0, i32 0
  %279 = load i64, i64* %278, align 8
  %280 = add i64 %279, 1
  store i64 %280, i64* %278, align 8
  br label %281

281:                                              ; preds = %236, %274
  %282 = phi %"class.std::__1::__tree_node.1569"* [ %257, %274 ], [ %240, %236 ]
  %283 = getelementptr inbounds %"class.std::__1::__tree_node.1569", %"class.std::__1::__tree_node.1569"* %282, i64 0, i32 0, i32 0
  br label %284

284:                                              ; preds = %139, %281
  %285 = phi %"class.std::__1::__tree_end_node"* [ %283, %281 ], [ %134, %139 ]
  br i1 %116, label %573, label %286

286:                                              ; preds = %284
  %287 = getelementptr inbounds %"class.std::__1::__tree_end_node", %"class.std::__1::__tree_end_node"* %285, i64 5
  %288 = bitcast %"class.std::__1::__tree_end_node"* %287 to %"class.v8::internal::compiler::InstructionOperand"**
  %289 = load %"class.v8::internal::compiler::InstructionOperand"*, %"class.v8::internal::compiler::InstructionOperand"** %288, align 8
  %290 = load i64, i64* %51, align 8
  call void @llvm.lifetime.start.p0i8(i64 8, i8* nonnull %27) #16
  %291 = and i64 %290, 34359738360
  %292 = or i64 %291, 652835028993
  store i64 %292, i64* %28, align 8
  %293 = load %"class.v8::internal::compiler::TopTierRegisterAllocationData"*, %"class.v8::internal::compiler::TopTierRegisterAllocationData"** %6, align 8
  %294 = getelementptr inbounds %"class.v8::internal::compiler::TopTierRegisterAllocationData", %"class.v8::internal::compiler::TopTierRegisterAllocationData"* %293, i64 0, i32 3
  %295 = load %"class.v8::internal::compiler::InstructionSequence"*, %"class.v8::internal::compiler::InstructionSequence"** %294, align 8
  %296 = getelementptr inbounds %"class.v8::internal::compiler::InstructionSequence", %"class.v8::internal::compiler::InstructionSequence"* %295, i64 0, i32 8, i32 0, i32 0, i32 1
  %297 = load i64, i64* %296, align 8
  %298 = add i64 %297, %10
  %299 = getelementptr inbounds %"class.v8::internal::compiler::InstructionSequence", %"class.v8::internal::compiler::InstructionSequence"* %295, i64 0, i32 8, i32 0, i32 0, i32 0, i32 1
  %300 = load %"class.v8::internal::compiler::Instruction"***, %"class.v8::internal::compiler::Instruction"**** %299, align 8
  %301 = lshr i64 %298, 9
  %302 = getelementptr inbounds %"class.v8::internal::compiler::Instruction"**, %"class.v8::internal::compiler::Instruction"*** %300, i64 %301
  %303 = load %"class.v8::internal::compiler::Instruction"**, %"class.v8::internal::compiler::Instruction"*** %302, align 8
  %304 = and i64 %298, 511
  %305 = getelementptr inbounds %"class.v8::internal::compiler::Instruction"*, %"class.v8::internal::compiler::Instruction"** %303, i64 %304
  %306 = load %"class.v8::internal::compiler::Instruction"*, %"class.v8::internal::compiler::Instruction"** %305, align 8
  %307 = getelementptr inbounds %"class.v8::internal::compiler::InstructionSequence", %"class.v8::internal::compiler::InstructionSequence"* %295, i64 0, i32 1
  %308 = load %"class.v8::internal::Zone"*, %"class.v8::internal::Zone"** %307, align 8
  %309 = ptrtoint %"class.v8::internal::Zone"* %308 to i64
  %310 = getelementptr inbounds %"class.v8::internal::compiler::Instruction", %"class.v8::internal::compiler::Instruction"* %306, i64 0, i32 2, i64 1
  %311 = load %"class.v8::internal::compiler::ParallelMove"*, %"class.v8::internal::compiler::ParallelMove"** %310, align 8
  %312 = icmp eq %"class.v8::internal::compiler::ParallelMove"* %311, null
  br i1 %312, label %313, label %330

313:                                              ; preds = %286
  %314 = getelementptr inbounds %"class.v8::internal::Zone", %"class.v8::internal::Zone"* %308, i64 0, i32 2
  %315 = load i64, i64* %314, align 8
  %316 = getelementptr inbounds %"class.v8::internal::Zone", %"class.v8::internal::Zone"* %308, i64 0, i32 3
  %317 = load i64, i64* %316, align 8
  %318 = sub i64 %317, %315
  %319 = icmp ult i64 %318, 32
  br i1 %319, label %320, label %322, !prof !2

320:                                              ; preds = %313
  %321 = call i64 @_ZN2v88internal4Zone9NewExpandEm(%"class.v8::internal::Zone"* %308, i64 32) #16
  br label %324

322:                                              ; preds = %313
  %323 = add i64 %315, 32
  store i64 %323, i64* %314, align 8
  br label %324

324:                                              ; preds = %322, %320
  %325 = phi i64 [ %321, %320 ], [ %315, %322 ]
  %326 = inttoptr i64 %325 to i8*
  %327 = inttoptr i64 %325 to %"class.v8::internal::compiler::ParallelMove"*
  %328 = getelementptr inbounds %"class.v8::internal::compiler::ParallelMove", %"class.v8::internal::compiler::ParallelMove"* %327, i64 0, i32 0, i32 0, i32 0, i32 2, i32 1
  %329 = bitcast %"struct.std::__1::__compressed_pair_elem.1208"* %328 to i64*
  call void @llvm.memset.p0i8.i64(i8* align 8 %326, i8 0, i64 24, i1 false) #16
  store i64 %309, i64* %329, align 8
  store %"class.v8::internal::compiler::ParallelMove"* %327, %"class.v8::internal::compiler::ParallelMove"** %310, align 8
  br label %330

330:                                              ; preds = %286, %324
  %331 = phi %"class.v8::internal::compiler::ParallelMove"* [ %327, %324 ], [ %311, %286 ]
  %332 = getelementptr inbounds %"class.v8::internal::compiler::ParallelMove", %"class.v8::internal::compiler::ParallelMove"* %331, i64 0, i32 0, i32 0, i32 0, i32 2, i32 1, i32 0, i32 0
  %333 = load %"class.v8::internal::Zone"*, %"class.v8::internal::Zone"** %332, align 8
  %334 = call %"class.v8::internal::compiler::MoveOperands"* @_ZN2v88internal8compiler12ParallelMove7AddMoveERKNS1_18InstructionOperandES5_PNS0_4ZoneE(%"class.v8::internal::compiler::ParallelMove"* %331, %"class.v8::internal::compiler::InstructionOperand"* nonnull dereferenceable(8) %29, %"class.v8::internal::compiler::InstructionOperand"* dereferenceable(8) %289, %"class.v8::internal::Zone"* %333) #16
  %335 = getelementptr inbounds %"class.v8::internal::ZoneVector", %"class.v8::internal::ZoneVector"* %117, i64 0, i32 0, i32 0, i32 1
  %336 = load %"class.v8::internal::compiler::TopLevelLiveRange"**, %"class.v8::internal::compiler::TopLevelLiveRange"*** %335, align 8
  %337 = getelementptr inbounds %"class.v8::internal::ZoneVector", %"class.v8::internal::ZoneVector"* %117, i64 0, i32 0, i32 0, i32 2, i32 0, i32 0
  %338 = load %"class.v8::internal::compiler::TopLevelLiveRange"**, %"class.v8::internal::compiler::TopLevelLiveRange"*** %337, align 8
  %339 = icmp eq %"class.v8::internal::compiler::TopLevelLiveRange"** %336, %338
  %340 = ptrtoint %"class.v8::internal::compiler::TopLevelLiveRange"** %338 to i64
  br i1 %339, label %346, label %341

341:                                              ; preds = %330
  %342 = bitcast %"class.v8::internal::compiler::TopLevelLiveRange"** %336 to i64*
  store i64 %64, i64* %342, align 8
  %343 = getelementptr inbounds %"class.v8::internal::compiler::TopLevelLiveRange"*, %"class.v8::internal::compiler::TopLevelLiveRange"** %336, i64 1
  %344 = ptrtoint %"class.v8::internal::compiler::TopLevelLiveRange"** %343 to i64
  %345 = bitcast %"class.v8::internal::compiler::TopLevelLiveRange"*** %335 to i64*
  store i64 %344, i64* %345, align 8
  br label %572

346:                                              ; preds = %330
  %347 = ptrtoint %"class.v8::internal::compiler::TopLevelLiveRange"** %336 to i64
  %348 = bitcast %"class.v8::internal::compiler::TopLevelLiveRange"*** %335 to i64*
  %349 = bitcast %"class.v8::internal::ZoneVector"* %117 to i64*
  %350 = load i64, i64* %349, align 8
  %351 = sub i64 %347, %350
  %352 = ashr exact i64 %351, 3
  %353 = add nsw i64 %352, 1
  %354 = icmp ugt i64 %353, 268435455
  br i1 %354, label %355, label %357

355:                                              ; preds = %346
  %356 = bitcast %"class.v8::internal::ZoneVector"* %117 to %"class.std::__1::__vector_base_common"*
  call void @_ZNKSt3__120__vector_base_commonILb1EE20__throw_length_errorEv(%"class.std::__1::__vector_base_common"* %356) #17
  unreachable

357:                                              ; preds = %346
  %358 = bitcast %"class.v8::internal::compiler::TopLevelLiveRange"*** %337 to i64*
  %359 = sub i64 %340, %350
  %360 = ashr exact i64 %359, 3
  %361 = icmp ult i64 %360, 134217727
  br i1 %361, label %362, label %367

362:                                              ; preds = %357
  %363 = ashr exact i64 %359, 2
  %364 = icmp ult i64 %363, %353
  %365 = select i1 %364, i64 %353, i64 %363
  %366 = icmp eq i64 %365, 0
  br i1 %366, label %385, label %367

367:                                              ; preds = %362, %357
  %368 = phi i64 [ %365, %362 ], [ 268435455, %357 ]
  %369 = getelementptr inbounds %"class.v8::internal::ZoneVector", %"class.v8::internal::ZoneVector"* %117, i64 0, i32 0, i32 0, i32 2, i32 1, i32 0, i32 0
  %370 = load %"class.v8::internal::Zone"*, %"class.v8::internal::Zone"** %369, align 8
  %371 = shl i64 %368, 3
  %372 = getelementptr inbounds %"class.v8::internal::Zone", %"class.v8::internal::Zone"* %370, i64 0, i32 2
  %373 = load i64, i64* %372, align 8
  %374 = getelementptr inbounds %"class.v8::internal::Zone", %"class.v8::internal::Zone"* %370, i64 0, i32 3
  %375 = load i64, i64* %374, align 8
  %376 = sub i64 %375, %373
  %377 = icmp ugt i64 %371, %376
  br i1 %377, label %378, label %380, !prof !2

378:                                              ; preds = %367
  %379 = call i64 @_ZN2v88internal4Zone9NewExpandEm(%"class.v8::internal::Zone"* %370, i64 %371) #16
  br label %382

380:                                              ; preds = %367
  %381 = add i64 %373, %371
  store i64 %381, i64* %372, align 8
  br label %382

382:                                              ; preds = %380, %378
  %383 = phi i64 [ %379, %378 ], [ %373, %380 ]
  %384 = inttoptr i64 %383 to %"class.v8::internal::compiler::TopLevelLiveRange"**
  br label %385

385:                                              ; preds = %382, %362
  %386 = phi i64 [ %368, %382 ], [ 0, %362 ]
  %387 = phi %"class.v8::internal::compiler::TopLevelLiveRange"** [ %384, %382 ], [ null, %362 ]
  %388 = getelementptr inbounds %"class.v8::internal::compiler::TopLevelLiveRange"*, %"class.v8::internal::compiler::TopLevelLiveRange"** %387, i64 %352
  %389 = getelementptr inbounds %"class.v8::internal::compiler::TopLevelLiveRange"*, %"class.v8::internal::compiler::TopLevelLiveRange"** %387, i64 %386
  %390 = ptrtoint %"class.v8::internal::compiler::TopLevelLiveRange"** %389 to i64
  %391 = bitcast %"class.v8::internal::compiler::TopLevelLiveRange"** %388 to i64*
  store i64 %64, i64* %391, align 8
  %392 = getelementptr inbounds %"class.v8::internal::compiler::TopLevelLiveRange"*, %"class.v8::internal::compiler::TopLevelLiveRange"** %388, i64 1
  %393 = ptrtoint %"class.v8::internal::compiler::TopLevelLiveRange"** %392 to i64
  %394 = getelementptr inbounds %"class.v8::internal::ZoneVector", %"class.v8::internal::ZoneVector"* %117, i64 0, i32 0, i32 0, i32 0
  %395 = load %"class.v8::internal::compiler::TopLevelLiveRange"**, %"class.v8::internal::compiler::TopLevelLiveRange"*** %394, align 8
  %396 = ptrtoint %"class.v8::internal::compiler::TopLevelLiveRange"** %395 to i64
  %397 = load %"class.v8::internal::compiler::TopLevelLiveRange"**, %"class.v8::internal::compiler::TopLevelLiveRange"*** %335, align 8
  %398 = icmp eq %"class.v8::internal::compiler::TopLevelLiveRange"** %397, %395
  br i1 %398, label %569, label %399

399:                                              ; preds = %385
  %400 = getelementptr %"class.v8::internal::compiler::TopLevelLiveRange"*, %"class.v8::internal::compiler::TopLevelLiveRange"** %397, i64 -1
  %401 = ptrtoint %"class.v8::internal::compiler::TopLevelLiveRange"** %400 to i64
  %402 = sub i64 %401, %396
  %403 = lshr i64 %402, 3
  %404 = add nuw nsw i64 %403, 1
  %405 = icmp ult i64 %404, 4
  br i1 %405, label %499, label %406

406:                                              ; preds = %399
  %407 = getelementptr %"class.v8::internal::compiler::TopLevelLiveRange"*, %"class.v8::internal::compiler::TopLevelLiveRange"** %387, i64 -1
  %408 = getelementptr %"class.v8::internal::compiler::TopLevelLiveRange"*, %"class.v8::internal::compiler::TopLevelLiveRange"** %397, i64 -1
  %409 = ptrtoint %"class.v8::internal::compiler::TopLevelLiveRange"** %408 to i64
  %410 = sub i64 %409, %396
  %411 = lshr i64 %410, 3
  %412 = sub nsw i64 %352, %411
  %413 = getelementptr %"class.v8::internal::compiler::TopLevelLiveRange"*, %"class.v8::internal::compiler::TopLevelLiveRange"** %407, i64 %412
  %414 = getelementptr %"class.v8::internal::compiler::TopLevelLiveRange"*, %"class.v8::internal::compiler::TopLevelLiveRange"** %397, i64 -1
  %415 = sub nsw i64 0, %411
  %416 = getelementptr %"class.v8::internal::compiler::TopLevelLiveRange"*, %"class.v8::internal::compiler::TopLevelLiveRange"** %414, i64 %415
  %417 = icmp ult %"class.v8::internal::compiler::TopLevelLiveRange"** %413, %397
  %418 = icmp ult %"class.v8::internal::compiler::TopLevelLiveRange"** %416, %388
  %419 = and i1 %417, %418
  br i1 %419, label %499, label %420

420:                                              ; preds = %406
  %421 = and i64 %404, 4611686018427387900
  %422 = sub nsw i64 0, %421
  %423 = getelementptr %"class.v8::internal::compiler::TopLevelLiveRange"*, %"class.v8::internal::compiler::TopLevelLiveRange"** %388, i64 %422
  %424 = sub nsw i64 0, %421
  %425 = getelementptr %"class.v8::internal::compiler::TopLevelLiveRange"*, %"class.v8::internal::compiler::TopLevelLiveRange"** %397, i64 %424
  %426 = add nsw i64 %421, -4
  %427 = lshr exact i64 %426, 2
  %428 = add nuw nsw i64 %427, 1
  %429 = and i64 %428, 1
  %430 = icmp eq i64 %426, 0
  br i1 %430, label %475, label %431

431:                                              ; preds = %420
  %432 = sub nuw nsw i64 %428, %429
  %433 = getelementptr %"class.v8::internal::compiler::TopLevelLiveRange"*, %"class.v8::internal::compiler::TopLevelLiveRange"** %388, i64 -1
  %434 = getelementptr %"class.v8::internal::compiler::TopLevelLiveRange"*, %"class.v8::internal::compiler::TopLevelLiveRange"** %397, i64 -1
  %435 = getelementptr %"class.v8::internal::compiler::TopLevelLiveRange"*, %"class.v8::internal::compiler::TopLevelLiveRange"** %388, i64 -1
  %436 = getelementptr %"class.v8::internal::compiler::TopLevelLiveRange"*, %"class.v8::internal::compiler::TopLevelLiveRange"** %397, i64 -1
  br label %437

437:                                              ; preds = %437, %431
  %438 = phi i64 [ 0, %431 ], [ %472, %437 ]
  %439 = phi i64 [ %432, %431 ], [ %473, %437 ]
  %440 = sub i64 0, %438
  %441 = sub i64 0, %438
  %442 = getelementptr inbounds %"class.v8::internal::compiler::TopLevelLiveRange"*, %"class.v8::internal::compiler::TopLevelLiveRange"** %433, i64 %440
  %443 = getelementptr inbounds %"class.v8::internal::compiler::TopLevelLiveRange"*, %"class.v8::internal::compiler::TopLevelLiveRange"** %434, i64 %441
  %444 = getelementptr inbounds %"class.v8::internal::compiler::TopLevelLiveRange"*, %"class.v8::internal::compiler::TopLevelLiveRange"** %443, i64 -1
  %445 = bitcast %"class.v8::internal::compiler::TopLevelLiveRange"** %444 to <2 x i64>*
  %446 = load <2 x i64>, <2 x i64>* %445, align 8, !alias.scope !84
  %447 = getelementptr inbounds %"class.v8::internal::compiler::TopLevelLiveRange"*, %"class.v8::internal::compiler::TopLevelLiveRange"** %443, i64 -2
  %448 = getelementptr inbounds %"class.v8::internal::compiler::TopLevelLiveRange"*, %"class.v8::internal::compiler::TopLevelLiveRange"** %447, i64 -1
  %449 = bitcast %"class.v8::internal::compiler::TopLevelLiveRange"** %448 to <2 x i64>*
  %450 = load <2 x i64>, <2 x i64>* %449, align 8, !alias.scope !84
  %451 = getelementptr inbounds %"class.v8::internal::compiler::TopLevelLiveRange"*, %"class.v8::internal::compiler::TopLevelLiveRange"** %442, i64 -1
  %452 = bitcast %"class.v8::internal::compiler::TopLevelLiveRange"** %451 to <2 x i64>*
  store <2 x i64> %446, <2 x i64>* %452, align 8, !alias.scope !87, !noalias !84
  %453 = getelementptr inbounds %"class.v8::internal::compiler::TopLevelLiveRange"*, %"class.v8::internal::compiler::TopLevelLiveRange"** %442, i64 -2
  %454 = getelementptr inbounds %"class.v8::internal::compiler::TopLevelLiveRange"*, %"class.v8::internal::compiler::TopLevelLiveRange"** %453, i64 -1
  %455 = bitcast %"class.v8::internal::compiler::TopLevelLiveRange"** %454 to <2 x i64>*
  store <2 x i64> %450, <2 x i64>* %455, align 8, !alias.scope !87, !noalias !84
  %456 = sub nuw nsw i64 -4, %438
  %457 = sub nuw nsw i64 -4, %438
  %458 = getelementptr inbounds %"class.v8::internal::compiler::TopLevelLiveRange"*, %"class.v8::internal::compiler::TopLevelLiveRange"** %435, i64 %456
  %459 = getelementptr inbounds %"class.v8::internal::compiler::TopLevelLiveRange"*, %"class.v8::internal::compiler::TopLevelLiveRange"** %436, i64 %457
  %460 = getelementptr inbounds %"class.v8::internal::compiler::TopLevelLiveRange"*, %"class.v8::internal::compiler::TopLevelLiveRange"** %459, i64 -1
  %461 = bitcast %"class.v8::internal::compiler::TopLevelLiveRange"** %460 to <2 x i64>*
  %462 = load <2 x i64>, <2 x i64>* %461, align 8, !alias.scope !84
  %463 = getelementptr inbounds %"class.v8::internal::compiler::TopLevelLiveRange"*, %"class.v8::internal::compiler::TopLevelLiveRange"** %459, i64 -2
  %464 = getelementptr inbounds %"class.v8::internal::compiler::TopLevelLiveRange"*, %"class.v8::internal::compiler::TopLevelLiveRange"** %463, i64 -1
  %465 = bitcast %"class.v8::internal::compiler::TopLevelLiveRange"** %464 to <2 x i64>*
  %466 = load <2 x i64>, <2 x i64>* %465, align 8, !alias.scope !84
  %467 = getelementptr inbounds %"class.v8::internal::compiler::TopLevelLiveRange"*, %"class.v8::internal::compiler::TopLevelLiveRange"** %458, i64 -1
  %468 = bitcast %"class.v8::internal::compiler::TopLevelLiveRange"** %467 to <2 x i64>*
  store <2 x i64> %462, <2 x i64>* %468, align 8, !alias.scope !87, !noalias !84
  %469 = getelementptr inbounds %"class.v8::internal::compiler::TopLevelLiveRange"*, %"class.v8::internal::compiler::TopLevelLiveRange"** %458, i64 -2
  %470 = getelementptr inbounds %"class.v8::internal::compiler::TopLevelLiveRange"*, %"class.v8::internal::compiler::TopLevelLiveRange"** %469, i64 -1
  %471 = bitcast %"class.v8::internal::compiler::TopLevelLiveRange"** %470 to <2 x i64>*
  store <2 x i64> %466, <2 x i64>* %471, align 8, !alias.scope !87, !noalias !84
  %472 = add i64 %438, 8
  %473 = add i64 %439, -2
  %474 = icmp eq i64 %473, 0
  br i1 %474, label %475, label %437, !llvm.loop !89

475:                                              ; preds = %437, %420
  %476 = phi i64 [ 0, %420 ], [ %472, %437 ]
  %477 = icmp eq i64 %429, 0
  br i1 %477, label %497, label %478

478:                                              ; preds = %475
  %479 = sub i64 0, %476
  %480 = getelementptr %"class.v8::internal::compiler::TopLevelLiveRange"*, %"class.v8::internal::compiler::TopLevelLiveRange"** %388, i64 -1
  %481 = sub i64 0, %476
  %482 = getelementptr %"class.v8::internal::compiler::TopLevelLiveRange"*, %"class.v8::internal::compiler::TopLevelLiveRange"** %397, i64 -1
  %483 = getelementptr inbounds %"class.v8::internal::compiler::TopLevelLiveRange"*, %"class.v8::internal::compiler::TopLevelLiveRange"** %480, i64 %479
  %484 = getelementptr inbounds %"class.v8::internal::compiler::TopLevelLiveRange"*, %"class.v8::internal::compiler::TopLevelLiveRange"** %482, i64 %481
  %485 = getelementptr inbounds %"class.v8::internal::compiler::TopLevelLiveRange"*, %"class.v8::internal::compiler::TopLevelLiveRange"** %484, i64 -1
  %486 = bitcast %"class.v8::internal::compiler::TopLevelLiveRange"** %485 to <2 x i64>*
  %487 = load <2 x i64>, <2 x i64>* %486, align 8, !alias.scope !84
  %488 = getelementptr inbounds %"class.v8::internal::compiler::TopLevelLiveRange"*, %"class.v8::internal::compiler::TopLevelLiveRange"** %484, i64 -2
  %489 = getelementptr inbounds %"class.v8::internal::compiler::TopLevelLiveRange"*, %"class.v8::internal::compiler::TopLevelLiveRange"** %488, i64 -1
  %490 = bitcast %"class.v8::internal::compiler::TopLevelLiveRange"** %489 to <2 x i64>*
  %491 = load <2 x i64>, <2 x i64>* %490, align 8, !alias.scope !84
  %492 = getelementptr inbounds %"class.v8::internal::compiler::TopLevelLiveRange"*, %"class.v8::internal::compiler::TopLevelLiveRange"** %483, i64 -1
  %493 = bitcast %"class.v8::internal::compiler::TopLevelLiveRange"** %492 to <2 x i64>*
  store <2 x i64> %487, <2 x i64>* %493, align 8, !alias.scope !87, !noalias !84
  %494 = getelementptr inbounds %"class.v8::internal::compiler::TopLevelLiveRange"*, %"class.v8::internal::compiler::TopLevelLiveRange"** %483, i64 -2
  %495 = getelementptr inbounds %"class.v8::internal::compiler::TopLevelLiveRange"*, %"class.v8::internal::compiler::TopLevelLiveRange"** %494, i64 -1
  %496 = bitcast %"class.v8::internal::compiler::TopLevelLiveRange"** %495 to <2 x i64>*
  store <2 x i64> %491, <2 x i64>* %496, align 8, !alias.scope !87, !noalias !84
  br label %497

497:                                              ; preds = %475, %478
  %498 = icmp eq i64 %404, %421
  br i1 %498, label %569, label %499

499:                                              ; preds = %497, %406, %399
  %500 = phi %"class.v8::internal::compiler::TopLevelLiveRange"** [ %388, %406 ], [ %388, %399 ], [ %423, %497 ]
  %501 = phi %"class.v8::internal::compiler::TopLevelLiveRange"** [ %397, %406 ], [ %397, %399 ], [ %425, %497 ]
  %502 = getelementptr %"class.v8::internal::compiler::TopLevelLiveRange"*, %"class.v8::internal::compiler::TopLevelLiveRange"** %501, i64 -1
  %503 = ptrtoint %"class.v8::internal::compiler::TopLevelLiveRange"** %502 to i64
  %504 = sub i64 %503, %396
  %505 = lshr i64 %504, 3
  %506 = add nuw nsw i64 %505, 1
  %507 = and i64 %506, 7
  %508 = icmp eq i64 %507, 0
  br i1 %508, label %520, label %509

509:                                              ; preds = %499, %509
  %510 = phi %"class.v8::internal::compiler::TopLevelLiveRange"** [ %513, %509 ], [ %500, %499 ]
  %511 = phi %"class.v8::internal::compiler::TopLevelLiveRange"** [ %514, %509 ], [ %501, %499 ]
  %512 = phi i64 [ %518, %509 ], [ %507, %499 ]
  %513 = getelementptr inbounds %"class.v8::internal::compiler::TopLevelLiveRange"*, %"class.v8::internal::compiler::TopLevelLiveRange"** %510, i64 -1
  %514 = getelementptr inbounds %"class.v8::internal::compiler::TopLevelLiveRange"*, %"class.v8::internal::compiler::TopLevelLiveRange"** %511, i64 -1
  %515 = bitcast %"class.v8::internal::compiler::TopLevelLiveRange"** %514 to i64*
  %516 = load i64, i64* %515, align 8
  %517 = bitcast %"class.v8::internal::compiler::TopLevelLiveRange"** %513 to i64*
  store i64 %516, i64* %517, align 8
  %518 = add i64 %512, -1
  %519 = icmp eq i64 %518, 0
  br i1 %519, label %520, label %509, !llvm.loop !90

520:                                              ; preds = %509, %499
  %521 = phi %"class.v8::internal::compiler::TopLevelLiveRange"** [ undef, %499 ], [ %513, %509 ]
  %522 = phi %"class.v8::internal::compiler::TopLevelLiveRange"** [ %500, %499 ], [ %513, %509 ]
  %523 = phi %"class.v8::internal::compiler::TopLevelLiveRange"** [ %501, %499 ], [ %514, %509 ]
  %524 = icmp ult i64 %504, 56
  br i1 %524, label %569, label %525

525:                                              ; preds = %520, %525
  %526 = phi %"class.v8::internal::compiler::TopLevelLiveRange"** [ %563, %525 ], [ %522, %520 ]
  %527 = phi %"class.v8::internal::compiler::TopLevelLiveRange"** [ %564, %525 ], [ %523, %520 ]
  %528 = getelementptr inbounds %"class.v8::internal::compiler::TopLevelLiveRange"*, %"class.v8::internal::compiler::TopLevelLiveRange"** %526, i64 -1
  %529 = getelementptr inbounds %"class.v8::internal::compiler::TopLevelLiveRange"*, %"class.v8::internal::compiler::TopLevelLiveRange"** %527, i64 -1
  %530 = bitcast %"class.v8::internal::compiler::TopLevelLiveRange"** %529 to i64*
  %531 = load i64, i64* %530, align 8
  %532 = bitcast %"class.v8::internal::compiler::TopLevelLiveRange"** %528 to i64*
  store i64 %531, i64* %532, align 8
  %533 = getelementptr inbounds %"class.v8::internal::compiler::TopLevelLiveRange"*, %"class.v8::internal::compiler::TopLevelLiveRange"** %526, i64 -2
  %534 = getelementptr inbounds %"class.v8::internal::compiler::TopLevelLiveRange"*, %"class.v8::internal::compiler::TopLevelLiveRange"** %527, i64 -2
  %535 = bitcast %"class.v8::internal::compiler::TopLevelLiveRange"** %534 to i64*
  %536 = load i64, i64* %535, align 8
  %537 = bitcast %"class.v8::internal::compiler::TopLevelLiveRange"** %533 to i64*
  store i64 %536, i64* %537, align 8
  %538 = getelementptr inbounds %"class.v8::internal::compiler::TopLevelLiveRange"*, %"class.v8::internal::compiler::TopLevelLiveRange"** %526, i64 -3
  %539 = getelementptr inbounds %"class.v8::internal::compiler::TopLevelLiveRange"*, %"class.v8::internal::compiler::TopLevelLiveRange"** %527, i64 -3
  %540 = bitcast %"class.v8::internal::compiler::TopLevelLiveRange"** %539 to i64*
  %541 = load i64, i64* %540, align 8
  %542 = bitcast %"class.v8::internal::compiler::TopLevelLiveRange"** %538 to i64*
  store i64 %541, i64* %542, align 8
  %543 = getelementptr inbounds %"class.v8::internal::compiler::TopLevelLiveRange"*, %"class.v8::internal::compiler::TopLevelLiveRange"** %526, i64 -4
  %544 = getelementptr inbounds %"class.v8::internal::compiler::TopLevelLiveRange"*, %"class.v8::internal::compiler::TopLevelLiveRange"** %527, i64 -4
  %545 = bitcast %"class.v8::internal::compiler::TopLevelLiveRange"** %544 to i64*
  %546 = load i64, i64* %545, align 8
  %547 = bitcast %"class.v8::internal::compiler::TopLevelLiveRange"** %543 to i64*
  store i64 %546, i64* %547, align 8
  %548 = getelementptr inbounds %"class.v8::internal::compiler::TopLevelLiveRange"*, %"class.v8::internal::compiler::TopLevelLiveRange"** %526, i64 -5
  %549 = getelementptr inbounds %"class.v8::internal::compiler::TopLevelLiveRange"*, %"class.v8::internal::compiler::TopLevelLiveRange"** %527, i64 -5
  %550 = bitcast %"class.v8::internal::compiler::TopLevelLiveRange"** %549 to i64*
  %551 = load i64, i64* %550, align 8
  %552 = bitcast %"class.v8::internal::compiler::TopLevelLiveRange"** %548 to i64*
  store i64 %551, i64* %552, align 8
  %553 = getelementptr inbounds %"class.v8::internal::compiler::TopLevelLiveRange"*, %"class.v8::internal::compiler::TopLevelLiveRange"** %526, i64 -6
  %554 = getelementptr inbounds %"class.v8::internal::compiler::TopLevelLiveRange"*, %"class.v8::internal::compiler::TopLevelLiveRange"** %527, i64 -6
  %555 = bitcast %"class.v8::internal::compiler::TopLevelLiveRange"** %554 to i64*
  %556 = load i64, i64* %555, align 8
  %557 = bitcast %"class.v8::internal::compiler::TopLevelLiveRange"** %553 to i64*
  store i64 %556, i64* %557, align 8
  %558 = getelementptr inbounds %"class.v8::internal::compiler::TopLevelLiveRange"*, %"class.v8::internal::compiler::TopLevelLiveRange"** %526, i64 -7
  %559 = getelementptr inbounds %"class.v8::internal::compiler::TopLevelLiveRange"*, %"class.v8::internal::compiler::TopLevelLiveRange"** %527, i64 -7
  %560 = bitcast %"class.v8::internal::compiler::TopLevelLiveRange"** %559 to i64*
  %561 = load i64, i64* %560, align 8
  %562 = bitcast %"class.v8::internal::compiler::TopLevelLiveRange"** %558 to i64*
  store i64 %561, i64* %562, align 8
  %563 = getelementptr inbounds %"class.v8::internal::compiler::TopLevelLiveRange"*, %"class.v8::internal::compiler::TopLevelLiveRange"** %526, i64 -8
  %564 = getelementptr inbounds %"class.v8::internal::compiler::TopLevelLiveRange"*, %"class.v8::internal::compiler::TopLevelLiveRange"** %527, i64 -8
  %565 = bitcast %"class.v8::internal::compiler::TopLevelLiveRange"** %564 to i64*
  %566 = load i64, i64* %565, align 8
  %567 = bitcast %"class.v8::internal::compiler::TopLevelLiveRange"** %563 to i64*
  store i64 %566, i64* %567, align 8
  %568 = icmp eq %"class.v8::internal::compiler::TopLevelLiveRange"** %564, %395
  br i1 %568, label %569, label %525, !llvm.loop !91

569:                                              ; preds = %520, %525, %497, %385
  %570 = phi %"class.v8::internal::compiler::TopLevelLiveRange"** [ %388, %385 ], [ %423, %497 ], [ %521, %520 ], [ %563, %525 ]
  %571 = ptrtoint %"class.v8::internal::compiler::TopLevelLiveRange"** %570 to i64
  store i64 %571, i64* %349, align 8
  store i64 %393, i64* %348, align 8
  store i64 %390, i64* %358, align 8
  br label %572

572:                                              ; preds = %341, %569
  call void @llvm.lifetime.end.p0i8(i64 8, i8* nonnull %27) #16
  br label %573

573:                                              ; preds = %59, %69, %572, %284, %55
  %574 = phi %"class.v8::internal::ZoneVector"* [ %45, %55 ], [ %45, %69 ], [ %45, %59 ], [ %117, %572 ], [ %117, %284 ]
  %575 = load i64, i64* %51, align 8
  %576 = and i64 %575, 34359738368
  %577 = icmp eq i64 %576, 0
  br i1 %577, label %584, label %578

578:                                              ; preds = %573
  %579 = lshr i64 %575, 36
  %580 = trunc i64 %579 to i32
  %581 = and i32 %580, 7
  %582 = add nsw i32 %581, -3
  %583 = icmp ult i32 %582, 2
  br i1 %583, label %584, label %641

584:                                              ; preds = %573, %578
  %585 = lshr i64 %575, 3
  %586 = trunc i64 %585 to i32
  call void @llvm.lifetime.start.p0i8(i64 8, i8* nonnull %30) #16
  %587 = and i64 %575, 34359738360
  %588 = or i64 %587, 652835028993
  store i64 %588, i64* %31, align 8
  %589 = load %"class.v8::internal::compiler::TopTierRegisterAllocationData"*, %"class.v8::internal::compiler::TopTierRegisterAllocationData"** %6, align 8
  %590 = getelementptr inbounds %"class.v8::internal::compiler::TopTierRegisterAllocationData", %"class.v8::internal::compiler::TopTierRegisterAllocationData"* %589, i64 0, i32 3
  %591 = load %"class.v8::internal::compiler::InstructionSequence"*, %"class.v8::internal::compiler::InstructionSequence"** %590, align 8
  %592 = call zeroext i8 @_ZNK2v88internal8compiler19InstructionSequence17GetRepresentationEi(%"class.v8::internal::compiler::InstructionSequence"* %591, i32 %586) #16
  switch i8 %592, label %593 [
    i8 9, label %596
    i8 8, label %596
    i8 6, label %596
  ]

593:                                              ; preds = %584
  %594 = or i8 %592, 1
  %595 = icmp eq i8 %594, 11
  br label %596

596:                                              ; preds = %584, %584, %584, %593
  %597 = phi i1 [ true, %584 ], [ %595, %593 ], [ true, %584 ], [ true, %584 ]
  %598 = call %"class.v8::internal::compiler::InstructionOperand"* @_ZN2v88internal8compiler17ConstraintBuilder13AllocateFixedEPNS1_18UnallocatedOperandEibb(%"class.v8::internal::compiler::ConstraintBuilder"* %0, %"class.v8::internal::compiler::UnallocatedOperand"* %56, i32 %1, i1 zeroext %597, i1 zeroext true)
  %599 = load %"class.v8::internal::compiler::TopTierRegisterAllocationData"*, %"class.v8::internal::compiler::TopTierRegisterAllocationData"** %6, align 8
  %600 = getelementptr inbounds %"class.v8::internal::compiler::TopTierRegisterAllocationData", %"class.v8::internal::compiler::TopTierRegisterAllocationData"* %599, i64 0, i32 3
  %601 = load %"class.v8::internal::compiler::InstructionSequence"*, %"class.v8::internal::compiler::InstructionSequence"** %600, align 8
  %602 = getelementptr inbounds %"class.v8::internal::compiler::InstructionSequence", %"class.v8::internal::compiler::InstructionSequence"* %601, i64 0, i32 8, i32 0, i32 0, i32 1
  %603 = load i64, i64* %602, align 8
  %604 = add i64 %603, %10
  %605 = getelementptr inbounds %"class.v8::internal::compiler::InstructionSequence", %"class.v8::internal::compiler::InstructionSequence"* %601, i64 0, i32 8, i32 0, i32 0, i32 0, i32 1
  %606 = load %"class.v8::internal::compiler::Instruction"***, %"class.v8::internal::compiler::Instruction"**** %605, align 8
  %607 = lshr i64 %604, 9
  %608 = getelementptr inbounds %"class.v8::internal::compiler::Instruction"**, %"class.v8::internal::compiler::Instruction"*** %606, i64 %607
  %609 = load %"class.v8::internal::compiler::Instruction"**, %"class.v8::internal::compiler::Instruction"*** %608, align 8
  %610 = and i64 %604, 511
  %611 = getelementptr inbounds %"class.v8::internal::compiler::Instruction"*, %"class.v8::internal::compiler::Instruction"** %609, i64 %610
  %612 = load %"class.v8::internal::compiler::Instruction"*, %"class.v8::internal::compiler::Instruction"** %611, align 8
  %613 = getelementptr inbounds %"class.v8::internal::compiler::InstructionSequence", %"class.v8::internal::compiler::InstructionSequence"* %601, i64 0, i32 1
  %614 = load %"class.v8::internal::Zone"*, %"class.v8::internal::Zone"** %613, align 8
  %615 = ptrtoint %"class.v8::internal::Zone"* %614 to i64
  %616 = getelementptr inbounds %"class.v8::internal::compiler::Instruction", %"class.v8::internal::compiler::Instruction"* %612, i64 0, i32 2, i64 1
  %617 = load %"class.v8::internal::compiler::ParallelMove"*, %"class.v8::internal::compiler::ParallelMove"** %616, align 8
  %618 = icmp eq %"class.v8::internal::compiler::ParallelMove"* %617, null
  br i1 %618, label %619, label %636

619:                                              ; preds = %596
  %620 = getelementptr inbounds %"class.v8::internal::Zone", %"class.v8::internal::Zone"* %614, i64 0, i32 2
  %621 = load i64, i64* %620, align 8
  %622 = getelementptr inbounds %"class.v8::internal::Zone", %"class.v8::internal::Zone"* %614, i64 0, i32 3
  %623 = load i64, i64* %622, align 8
  %624 = sub i64 %623, %621
  %625 = icmp ult i64 %624, 32
  br i1 %625, label %626, label %628, !prof !2

626:                                              ; preds = %619
  %627 = call i64 @_ZN2v88internal4Zone9NewExpandEm(%"class.v8::internal::Zone"* %614, i64 32) #16
  br label %630

628:                                              ; preds = %619
  %629 = add i64 %621, 32
  store i64 %629, i64* %620, align 8
  br label %630

630:                                              ; preds = %628, %626
  %631 = phi i64 [ %627, %626 ], [ %621, %628 ]
  %632 = inttoptr i64 %631 to i8*
  %633 = inttoptr i64 %631 to %"class.v8::internal::compiler::ParallelMove"*
  %634 = getelementptr inbounds %"class.v8::internal::compiler::ParallelMove", %"class.v8::internal::compiler::ParallelMove"* %633, i64 0, i32 0, i32 0, i32 0, i32 2, i32 1
  %635 = bitcast %"struct.std::__1::__compressed_pair_elem.1208"* %634 to i64*
  call void @llvm.memset.p0i8.i64(i8* align 8 %632, i8 0, i64 24, i1 false) #16
  store i64 %615, i64* %635, align 8
  store %"class.v8::internal::compiler::ParallelMove"* %633, %"class.v8::internal::compiler::ParallelMove"** %616, align 8
  br label %636

636:                                              ; preds = %596, %630
  %637 = phi %"class.v8::internal::compiler::ParallelMove"* [ %633, %630 ], [ %617, %596 ]
  %638 = getelementptr inbounds %"class.v8::internal::compiler::ParallelMove", %"class.v8::internal::compiler::ParallelMove"* %637, i64 0, i32 0, i32 0, i32 0, i32 2, i32 1, i32 0, i32 0
  %639 = load %"class.v8::internal::Zone"*, %"class.v8::internal::Zone"** %638, align 8
  %640 = call %"class.v8::internal::compiler::MoveOperands"* @_ZN2v88internal8compiler12ParallelMove7AddMoveERKNS1_18InstructionOperandES5_PNS0_4ZoneE(%"class.v8::internal::compiler::ParallelMove"* %637, %"class.v8::internal::compiler::InstructionOperand"* nonnull dereferenceable(8) %32, %"class.v8::internal::compiler::InstructionOperand"* dereferenceable(8) %50, %"class.v8::internal::Zone"* %639) #16
  call void @llvm.lifetime.end.p0i8(i64 8, i8* nonnull %30) #16
  br label %641

641:                                              ; preds = %578, %636, %43
  %642 = phi %"class.v8::internal::ZoneVector"* [ %45, %43 ], [ %574, %636 ], [ %574, %578 ]
  %643 = add nuw nsw i64 %46, 1
  %644 = load i32, i32* %22, align 4
  %645 = lshr i32 %644, 8
  %646 = and i32 %645, 65535
  %647 = zext i32 %646 to i64
  %648 = icmp ult i64 %643, %647
  br i1 %648, label %43, label %33

649:                                              ; preds = %854, %33
  ret void

650:                                              ; preds = %37, %854
  %651 = phi i32 [ %34, %37 ], [ %855, %854 ]
  %652 = phi i64 [ %38, %37 ], [ %858, %854 ]
  %653 = phi i64 [ 0, %37 ], [ %856, %854 ]
  %654 = getelementptr inbounds %"class.v8::internal::compiler::Instruction", %"class.v8::internal::compiler::Instruction"* %21, i64 0, i32 5, i64 %653, i32 0
  %655 = load i64, i64* %654, align 8
  %656 = and i64 %655, 515396075527
  %657 = icmp eq i64 %656, 515396075521
  br i1 %657, label %658, label %854

658:                                              ; preds = %650
  %659 = lshr i64 %655, 50
  %660 = and i64 %659, 7
  %661 = add nuw nsw i64 %660, %652
  %662 = getelementptr inbounds %"class.v8::internal::compiler::Instruction", %"class.v8::internal::compiler::Instruction"* %21, i64 0, i32 5, i64 %661
  %663 = lshr i64 %655, 3
  %664 = trunc i64 %663 to i32
  %665 = getelementptr inbounds %"class.v8::internal::compiler::InstructionOperand", %"class.v8::internal::compiler::InstructionOperand"* %662, i64 0, i32 0
  %666 = load i64, i64* %665, align 8
  %667 = lshr i64 %666, 3
  %668 = trunc i64 %667 to i32
  call void @llvm.lifetime.start.p0i8(i64 8, i8* nonnull %39) #16
  %669 = and i64 %666, 34359738360
  %670 = or i64 %669, 652835028993
  store i64 %670, i64* %40, align 8
  %671 = load i64, i64* %654, align 8
  %672 = load i64, i64* %665, align 8
  %673 = and i64 %672, -34359738361
  %674 = and i64 %671, 34359738360
  %675 = or i64 %673, %674
  store i64 %675, i64* %665, align 8
  %676 = load %"class.v8::internal::compiler::TopTierRegisterAllocationData"*, %"class.v8::internal::compiler::TopTierRegisterAllocationData"** %6, align 8
  %677 = getelementptr inbounds %"class.v8::internal::compiler::TopTierRegisterAllocationData", %"class.v8::internal::compiler::TopTierRegisterAllocationData"* %676, i64 0, i32 3
  %678 = load %"class.v8::internal::compiler::InstructionSequence"*, %"class.v8::internal::compiler::InstructionSequence"** %677, align 8
  %679 = getelementptr inbounds %"class.v8::internal::compiler::InstructionSequence", %"class.v8::internal::compiler::InstructionSequence"* %678, i64 0, i32 8, i32 0, i32 0, i32 1
  %680 = load i64, i64* %679, align 8
  %681 = add i64 %680, %10
  %682 = getelementptr inbounds %"class.v8::internal::compiler::InstructionSequence", %"class.v8::internal::compiler::InstructionSequence"* %678, i64 0, i32 8, i32 0, i32 0, i32 0, i32 1
  %683 = load %"class.v8::internal::compiler::Instruction"***, %"class.v8::internal::compiler::Instruction"**** %682, align 8
  %684 = lshr i64 %681, 9
  %685 = getelementptr inbounds %"class.v8::internal::compiler::Instruction"**, %"class.v8::internal::compiler::Instruction"*** %683, i64 %684
  %686 = load %"class.v8::internal::compiler::Instruction"**, %"class.v8::internal::compiler::Instruction"*** %685, align 8
  %687 = and i64 %681, 511
  %688 = getelementptr inbounds %"class.v8::internal::compiler::Instruction"*, %"class.v8::internal::compiler::Instruction"** %686, i64 %687
  %689 = load %"class.v8::internal::compiler::Instruction"*, %"class.v8::internal::compiler::Instruction"** %688, align 8
  %690 = getelementptr inbounds %"class.v8::internal::compiler::InstructionSequence", %"class.v8::internal::compiler::InstructionSequence"* %678, i64 0, i32 1
  %691 = load %"class.v8::internal::Zone"*, %"class.v8::internal::Zone"** %690, align 8
  %692 = ptrtoint %"class.v8::internal::Zone"* %691 to i64
  %693 = getelementptr inbounds %"class.v8::internal::compiler::Instruction", %"class.v8::internal::compiler::Instruction"* %689, i64 0, i32 2, i64 1
  %694 = load %"class.v8::internal::compiler::ParallelMove"*, %"class.v8::internal::compiler::ParallelMove"** %693, align 8
  %695 = icmp eq %"class.v8::internal::compiler::ParallelMove"* %694, null
  br i1 %695, label %696, label %713

696:                                              ; preds = %658
  %697 = getelementptr inbounds %"class.v8::internal::Zone", %"class.v8::internal::Zone"* %691, i64 0, i32 2
  %698 = load i64, i64* %697, align 8
  %699 = getelementptr inbounds %"class.v8::internal::Zone", %"class.v8::internal::Zone"* %691, i64 0, i32 3
  %700 = load i64, i64* %699, align 8
  %701 = sub i64 %700, %698
  %702 = icmp ult i64 %701, 32
  br i1 %702, label %703, label %705, !prof !2

703:                                              ; preds = %696
  %704 = call i64 @_ZN2v88internal4Zone9NewExpandEm(%"class.v8::internal::Zone"* %691, i64 32) #16
  br label %707

705:                                              ; preds = %696
  %706 = add i64 %698, 32
  store i64 %706, i64* %697, align 8
  br label %707

707:                                              ; preds = %705, %703
  %708 = phi i64 [ %704, %703 ], [ %698, %705 ]
  %709 = inttoptr i64 %708 to i8*
  %710 = inttoptr i64 %708 to %"class.v8::internal::compiler::ParallelMove"*
  %711 = getelementptr inbounds %"class.v8::internal::compiler::ParallelMove", %"class.v8::internal::compiler::ParallelMove"* %710, i64 0, i32 0, i32 0, i32 0, i32 2, i32 1
  %712 = bitcast %"struct.std::__1::__compressed_pair_elem.1208"* %711 to i64*
  call void @llvm.memset.p0i8.i64(i8* align 8 %709, i8 0, i64 24, i1 false) #16
  store i64 %692, i64* %712, align 8
  store %"class.v8::internal::compiler::ParallelMove"* %710, %"class.v8::internal::compiler::ParallelMove"** %693, align 8
  br label %713

713:                                              ; preds = %658, %707
  %714 = phi %"class.v8::internal::compiler::ParallelMove"* [ %710, %707 ], [ %694, %658 ]
  %715 = getelementptr inbounds %"class.v8::internal::compiler::ParallelMove", %"class.v8::internal::compiler::ParallelMove"* %714, i64 0, i32 0, i32 0, i32 0, i32 2, i32 1, i32 0, i32 0
  %716 = load %"class.v8::internal::Zone"*, %"class.v8::internal::Zone"** %715, align 8
  %717 = call %"class.v8::internal::compiler::MoveOperands"* @_ZN2v88internal8compiler12ParallelMove7AddMoveERKNS1_18InstructionOperandES5_PNS0_4ZoneE(%"class.v8::internal::compiler::ParallelMove"* %714, %"class.v8::internal::compiler::InstructionOperand"* nonnull dereferenceable(8) %41, %"class.v8::internal::compiler::InstructionOperand"* dereferenceable(8) %662, %"class.v8::internal::Zone"* %716) #16
  %718 = load %"class.v8::internal::compiler::TopTierRegisterAllocationData"*, %"class.v8::internal::compiler::TopTierRegisterAllocationData"** %6, align 8
  %719 = getelementptr inbounds %"class.v8::internal::compiler::TopTierRegisterAllocationData", %"class.v8::internal::compiler::TopTierRegisterAllocationData"* %718, i64 0, i32 3
  %720 = load %"class.v8::internal::compiler::InstructionSequence"*, %"class.v8::internal::compiler::InstructionSequence"** %719, align 8
  %721 = call zeroext i8 @_ZNK2v88internal8compiler19InstructionSequence17GetRepresentationEi(%"class.v8::internal::compiler::InstructionSequence"* %720, i32 %668) #16
  switch i8 %721, label %722 [
    i8 9, label %725
    i8 8, label %725
    i8 6, label %725
  ]

722:                                              ; preds = %713
  %723 = or i8 %721, 1
  %724 = icmp eq i8 %723, 11
  br i1 %724, label %725, label %852

725:                                              ; preds = %713, %713, %713, %722
  %726 = load %"class.v8::internal::compiler::TopTierRegisterAllocationData"*, %"class.v8::internal::compiler::TopTierRegisterAllocationData"** %6, align 8
  %727 = getelementptr inbounds %"class.v8::internal::compiler::TopTierRegisterAllocationData", %"class.v8::internal::compiler::TopTierRegisterAllocationData"* %726, i64 0, i32 3
  %728 = load %"class.v8::internal::compiler::InstructionSequence"*, %"class.v8::internal::compiler::InstructionSequence"** %727, align 8
  %729 = call zeroext i8 @_ZNK2v88internal8compiler19InstructionSequence17GetRepresentationEi(%"class.v8::internal::compiler::InstructionSequence"* %728, i32 %664) #16
  switch i8 %729, label %730 [
    i8 9, label %852
    i8 8, label %852
    i8 6, label %852
  ]

730:                                              ; preds = %725
  %731 = or i8 %729, 1
  %732 = icmp eq i8 %731, 11
  br i1 %732, label %852, label %733

733:                                              ; preds = %730
  %734 = load %"class.v8::internal::compiler::ReferenceMap"*, %"class.v8::internal::compiler::ReferenceMap"** %42, align 8
  %735 = icmp eq %"class.v8::internal::compiler::ReferenceMap"* %734, null
  br i1 %735, label %852, label %736

736:                                              ; preds = %733
  %737 = getelementptr inbounds %"class.v8::internal::compiler::MoveOperands", %"class.v8::internal::compiler::MoveOperands"* %717, i64 0, i32 0
  %738 = load %"class.v8::internal::compiler::TopTierRegisterAllocationData"*, %"class.v8::internal::compiler::TopTierRegisterAllocationData"** %6, align 8
  %739 = getelementptr inbounds %"class.v8::internal::compiler::TopTierRegisterAllocationData", %"class.v8::internal::compiler::TopTierRegisterAllocationData"* %738, i64 0, i32 15, i32 0
  %740 = getelementptr inbounds %"class.v8::internal::compiler::TopTierRegisterAllocationData", %"class.v8::internal::compiler::TopTierRegisterAllocationData"* %738, i64 0, i32 15, i32 0, i32 0, i32 1
  %741 = load %"struct.v8::internal::compiler::TopTierRegisterAllocationData::DelayedReference"*, %"struct.v8::internal::compiler::TopTierRegisterAllocationData::DelayedReference"** %740, align 8
  %742 = getelementptr inbounds %"class.v8::internal::compiler::TopTierRegisterAllocationData", %"class.v8::internal::compiler::TopTierRegisterAllocationData"* %738, i64 0, i32 15, i32 0, i32 0, i32 2, i32 0, i32 0
  %743 = load %"struct.v8::internal::compiler::TopTierRegisterAllocationData::DelayedReference"*, %"struct.v8::internal::compiler::TopTierRegisterAllocationData::DelayedReference"** %742, align 8
  %744 = icmp eq %"struct.v8::internal::compiler::TopTierRegisterAllocationData::DelayedReference"* %741, %743
  %745 = ptrtoint %"struct.v8::internal::compiler::TopTierRegisterAllocationData::DelayedReference"* %743 to i64
  br i1 %744, label %752, label %746

746:                                              ; preds = %736
  %747 = getelementptr inbounds %"struct.v8::internal::compiler::TopTierRegisterAllocationData::DelayedReference", %"struct.v8::internal::compiler::TopTierRegisterAllocationData::DelayedReference"* %741, i64 0, i32 0
  store %"class.v8::internal::compiler::ReferenceMap"* %734, %"class.v8::internal::compiler::ReferenceMap"** %747, align 8
  %748 = getelementptr inbounds %"struct.v8::internal::compiler::TopTierRegisterAllocationData::DelayedReference", %"struct.v8::internal::compiler::TopTierRegisterAllocationData::DelayedReference"* %741, i64 0, i32 1
  store %"class.v8::internal::compiler::InstructionOperand"* %737, %"class.v8::internal::compiler::InstructionOperand"** %748, align 8
  %749 = getelementptr inbounds %"struct.v8::internal::compiler::TopTierRegisterAllocationData::DelayedReference", %"struct.v8::internal::compiler::TopTierRegisterAllocationData::DelayedReference"* %741, i64 1
  %750 = ptrtoint %"struct.v8::internal::compiler::TopTierRegisterAllocationData::DelayedReference"* %749 to i64
  %751 = bitcast %"struct.v8::internal::compiler::TopTierRegisterAllocationData::DelayedReference"** %740 to i64*
  store i64 %750, i64* %751, align 8
  br label %852

752:                                              ; preds = %736
  %753 = ptrtoint %"struct.v8::internal::compiler::TopTierRegisterAllocationData::DelayedReference"* %741 to i64
  %754 = bitcast %"struct.v8::internal::compiler::TopTierRegisterAllocationData::DelayedReference"** %740 to i64*
  %755 = bitcast %"class.std::__1::vector.1292"* %739 to i64*
  %756 = load i64, i64* %755, align 8
  %757 = sub i64 %753, %756
  %758 = ashr exact i64 %757, 4
  %759 = add nsw i64 %758, 1
  %760 = icmp ugt i64 %759, 134217727
  br i1 %760, label %761, label %763

761:                                              ; preds = %752
  %762 = bitcast %"class.std::__1::vector.1292"* %739 to %"class.std::__1::__vector_base_common"*
  call void @_ZNKSt3__120__vector_base_commonILb1EE20__throw_length_errorEv(%"class.std::__1::__vector_base_common"* %762) #17
  unreachable

763:                                              ; preds = %752
  %764 = bitcast %"struct.v8::internal::compiler::TopTierRegisterAllocationData::DelayedReference"** %742 to i64*
  %765 = sub i64 %745, %756
  %766 = ashr exact i64 %765, 4
  %767 = icmp ult i64 %766, 67108863
  br i1 %767, label %768, label %773

768:                                              ; preds = %763
  %769 = ashr exact i64 %765, 3
  %770 = icmp ult i64 %769, %759
  %771 = select i1 %770, i64 %759, i64 %769
  %772 = icmp eq i64 %771, 0
  br i1 %772, label %791, label %773

773:                                              ; preds = %768, %763
  %774 = phi i64 [ %771, %768 ], [ 134217727, %763 ]
  %775 = getelementptr inbounds %"class.v8::internal::compiler::TopTierRegisterAllocationData", %"class.v8::internal::compiler::TopTierRegisterAllocationData"* %738, i64 0, i32 15, i32 0, i32 0, i32 2, i32 1, i32 0, i32 0
  %776 = load %"class.v8::internal::Zone"*, %"class.v8::internal::Zone"** %775, align 8
  %777 = shl i64 %774, 4
  %778 = getelementptr inbounds %"class.v8::internal::Zone", %"class.v8::internal::Zone"* %776, i64 0, i32 2
  %779 = load i64, i64* %778, align 8
  %780 = getelementptr inbounds %"class.v8::internal::Zone", %"class.v8::internal::Zone"* %776, i64 0, i32 3
  %781 = load i64, i64* %780, align 8
  %782 = sub i64 %781, %779
  %783 = icmp ugt i64 %777, %782
  br i1 %783, label %784, label %786, !prof !2

784:                                              ; preds = %773
  %785 = call i64 @_ZN2v88internal4Zone9NewExpandEm(%"class.v8::internal::Zone"* %776, i64 %777) #16
  br label %788

786:                                              ; preds = %773
  %787 = add i64 %779, %777
  store i64 %787, i64* %778, align 8
  br label %788

788:                                              ; preds = %786, %784
  %789 = phi i64 [ %785, %784 ], [ %779, %786 ]
  %790 = inttoptr i64 %789 to %"struct.v8::internal::compiler::TopTierRegisterAllocationData::DelayedReference"*
  br label %791

791:                                              ; preds = %788, %768
  %792 = phi i64 [ %774, %788 ], [ 0, %768 ]
  %793 = phi %"struct.v8::internal::compiler::TopTierRegisterAllocationData::DelayedReference"* [ %790, %788 ], [ null, %768 ]
  %794 = getelementptr inbounds %"struct.v8::internal::compiler::TopTierRegisterAllocationData::DelayedReference", %"struct.v8::internal::compiler::TopTierRegisterAllocationData::DelayedReference"* %793, i64 %758
  %795 = getelementptr inbounds %"struct.v8::internal::compiler::TopTierRegisterAllocationData::DelayedReference", %"struct.v8::internal::compiler::TopTierRegisterAllocationData::DelayedReference"* %793, i64 %792
  %796 = ptrtoint %"struct.v8::internal::compiler::TopTierRegisterAllocationData::DelayedReference"* %795 to i64
  %797 = getelementptr inbounds %"struct.v8::internal::compiler::TopTierRegisterAllocationData::DelayedReference", %"struct.v8::internal::compiler::TopTierRegisterAllocationData::DelayedReference"* %794, i64 0, i32 0
  store %"class.v8::internal::compiler::ReferenceMap"* %734, %"class.v8::internal::compiler::ReferenceMap"** %797, align 8
  %798 = getelementptr inbounds %"struct.v8::internal::compiler::TopTierRegisterAllocationData::DelayedReference", %"struct.v8::internal::compiler::TopTierRegisterAllocationData::DelayedReference"* %793, i64 %758, i32 1
  store %"class.v8::internal::compiler::InstructionOperand"* %737, %"class.v8::internal::compiler::InstructionOperand"** %798, align 8
  %799 = getelementptr inbounds %"struct.v8::internal::compiler::TopTierRegisterAllocationData::DelayedReference", %"struct.v8::internal::compiler::TopTierRegisterAllocationData::DelayedReference"* %794, i64 1
  %800 = ptrtoint %"struct.v8::internal::compiler::TopTierRegisterAllocationData::DelayedReference"* %799 to i64
  %801 = getelementptr inbounds %"class.std::__1::vector.1292", %"class.std::__1::vector.1292"* %739, i64 0, i32 0, i32 0
  %802 = load %"struct.v8::internal::compiler::TopTierRegisterAllocationData::DelayedReference"*, %"struct.v8::internal::compiler::TopTierRegisterAllocationData::DelayedReference"** %801, align 8
  %803 = load %"struct.v8::internal::compiler::TopTierRegisterAllocationData::DelayedReference"*, %"struct.v8::internal::compiler::TopTierRegisterAllocationData::DelayedReference"** %740, align 8
  %804 = icmp eq %"struct.v8::internal::compiler::TopTierRegisterAllocationData::DelayedReference"* %803, %802
  br i1 %804, label %849, label %805

805:                                              ; preds = %791
  %806 = ptrtoint %"struct.v8::internal::compiler::TopTierRegisterAllocationData::DelayedReference"* %802 to i64
  %807 = getelementptr %"struct.v8::internal::compiler::TopTierRegisterAllocationData::DelayedReference", %"struct.v8::internal::compiler::TopTierRegisterAllocationData::DelayedReference"* %803, i64 -1
  %808 = ptrtoint %"struct.v8::internal::compiler::TopTierRegisterAllocationData::DelayedReference"* %807 to i64
  %809 = sub i64 %808, %806
  %810 = lshr i64 %809, 4
  %811 = add nuw nsw i64 %810, 1
  %812 = and i64 %811, 3
  %813 = icmp eq i64 %812, 0
  br i1 %813, label %824, label %814

814:                                              ; preds = %805, %814
  %815 = phi %"struct.v8::internal::compiler::TopTierRegisterAllocationData::DelayedReference"* [ %818, %814 ], [ %794, %805 ]
  %816 = phi %"struct.v8::internal::compiler::TopTierRegisterAllocationData::DelayedReference"* [ %819, %814 ], [ %803, %805 ]
  %817 = phi i64 [ %822, %814 ], [ %812, %805 ]
  %818 = getelementptr inbounds %"struct.v8::internal::compiler::TopTierRegisterAllocationData::DelayedReference", %"struct.v8::internal::compiler::TopTierRegisterAllocationData::DelayedReference"* %815, i64 -1
  %819 = getelementptr inbounds %"struct.v8::internal::compiler::TopTierRegisterAllocationData::DelayedReference", %"struct.v8::internal::compiler::TopTierRegisterAllocationData::DelayedReference"* %816, i64 -1
  %820 = bitcast %"struct.v8::internal::compiler::TopTierRegisterAllocationData::DelayedReference"* %818 to i8*
  %821 = bitcast %"struct.v8::internal::compiler::TopTierRegisterAllocationData::DelayedReference"* %819 to i8*
  call void @llvm.memcpy.p0i8.p0i8.i64(i8* align 8 %820, i8* align 8 %821, i64 16, i1 false) #16
  %822 = add i64 %817, -1
  %823 = icmp eq i64 %822, 0
  br i1 %823, label %824, label %814, !llvm.loop !92

824:                                              ; preds = %814, %805
  %825 = phi %"struct.v8::internal::compiler::TopTierRegisterAllocationData::DelayedReference"* [ undef, %805 ], [ %818, %814 ]
  %826 = phi %"struct.v8::internal::compiler::TopTierRegisterAllocationData::DelayedReference"* [ %794, %805 ], [ %818, %814 ]
  %827 = phi %"struct.v8::internal::compiler::TopTierRegisterAllocationData::DelayedReference"* [ %803, %805 ], [ %819, %814 ]
  %828 = icmp ult i64 %809, 48
  br i1 %828, label %849, label %829

829:                                              ; preds = %824, %829
  %830 = phi %"struct.v8::internal::compiler::TopTierRegisterAllocationData::DelayedReference"* [ %844, %829 ], [ %826, %824 ]
  %831 = phi %"struct.v8::internal::compiler::TopTierRegisterAllocationData::DelayedReference"* [ %845, %829 ], [ %827, %824 ]
  %832 = getelementptr inbounds %"struct.v8::internal::compiler::TopTierRegisterAllocationData::DelayedReference", %"struct.v8::internal::compiler::TopTierRegisterAllocationData::DelayedReference"* %830, i64 -1
  %833 = getelementptr inbounds %"struct.v8::internal::compiler::TopTierRegisterAllocationData::DelayedReference", %"struct.v8::internal::compiler::TopTierRegisterAllocationData::DelayedReference"* %831, i64 -1
  %834 = bitcast %"struct.v8::internal::compiler::TopTierRegisterAllocationData::DelayedReference"* %832 to i8*
  %835 = bitcast %"struct.v8::internal::compiler::TopTierRegisterAllocationData::DelayedReference"* %833 to i8*
  call void @llvm.memcpy.p0i8.p0i8.i64(i8* align 8 %834, i8* align 8 %835, i64 16, i1 false) #16
  %836 = getelementptr inbounds %"struct.v8::internal::compiler::TopTierRegisterAllocationData::DelayedReference", %"struct.v8::internal::compiler::TopTierRegisterAllocationData::DelayedReference"* %830, i64 -2
  %837 = getelementptr inbounds %"struct.v8::internal::compiler::TopTierRegisterAllocationData::DelayedReference", %"struct.v8::internal::compiler::TopTierRegisterAllocationData::DelayedReference"* %831, i64 -2
  %838 = bitcast %"struct.v8::internal::compiler::TopTierRegisterAllocationData::DelayedReference"* %836 to i8*
  %839 = bitcast %"struct.v8::internal::compiler::TopTierRegisterAllocationData::DelayedReference"* %837 to i8*
  call void @llvm.memcpy.p0i8.p0i8.i64(i8* align 8 %838, i8* align 8 %839, i64 16, i1 false) #16
  %840 = getelementptr inbounds %"struct.v8::internal::compiler::TopTierRegisterAllocationData::DelayedReference", %"struct.v8::internal::compiler::TopTierRegisterAllocationData::DelayedReference"* %830, i64 -3
  %841 = getelementptr inbounds %"struct.v8::internal::compiler::TopTierRegisterAllocationData::DelayedReference", %"struct.v8::internal::compiler::TopTierRegisterAllocationData::DelayedReference"* %831, i64 -3
  %842 = bitcast %"struct.v8::internal::compiler::TopTierRegisterAllocationData::DelayedReference"* %840 to i8*
  %843 = bitcast %"struct.v8::internal::compiler::TopTierRegisterAllocationData::DelayedReference"* %841 to i8*
  call void @llvm.memcpy.p0i8.p0i8.i64(i8* align 8 %842, i8* align 8 %843, i64 16, i1 false) #16
  %844 = getelementptr inbounds %"struct.v8::internal::compiler::TopTierRegisterAllocationData::DelayedReference", %"struct.v8::internal::compiler::TopTierRegisterAllocationData::DelayedReference"* %830, i64 -4
  %845 = getelementptr inbounds %"struct.v8::internal::compiler::TopTierRegisterAllocationData::DelayedReference", %"struct.v8::internal::compiler::TopTierRegisterAllocationData::DelayedReference"* %831, i64 -4
  %846 = bitcast %"struct.v8::internal::compiler::TopTierRegisterAllocationData::DelayedReference"* %844 to i8*
  %847 = bitcast %"struct.v8::internal::compiler::TopTierRegisterAllocationData::DelayedReference"* %845 to i8*
  call void @llvm.memcpy.p0i8.p0i8.i64(i8* align 8 %846, i8* align 8 %847, i64 16, i1 false) #16
  %848 = icmp eq %"struct.v8::internal::compiler::TopTierRegisterAllocationData::DelayedReference"* %845, %802
  br i1 %848, label %849, label %829

849:                                              ; preds = %824, %829, %791
  %850 = phi %"struct.v8::internal::compiler::TopTierRegisterAllocationData::DelayedReference"* [ %794, %791 ], [ %825, %824 ], [ %844, %829 ]
  %851 = ptrtoint %"struct.v8::internal::compiler::TopTierRegisterAllocationData::DelayedReference"* %850 to i64
  store i64 %851, i64* %755, align 8
  store i64 %800, i64* %754, align 8
  store i64 %796, i64* %764, align 8
  br label %852

852:                                              ; preds = %733, %725, %725, %725, %849, %746, %730, %722
  call void @llvm.lifetime.end.p0i8(i64 8, i8* nonnull %39) #16
  %853 = load i32, i32* %22, align 4
  br label %854

854:                                              ; preds = %852, %650
  %855 = phi i32 [ %853, %852 ], [ %651, %650 ]
  %856 = add nuw nsw i64 %653, 1
  %857 = and i32 %855, 255
  %858 = zext i32 %857 to i64
  %859 = icmp ult i64 %856, %858
  br i1 %859, label %650, label %649
}

; Function Attrs: nounwind ssp uwtable
define hidden void @_ZN2v88internal8compiler17ConstraintBuilder20MeetConstraintsAfterEi(%"class.v8::internal::compiler::ConstraintBuilder"* nocapture readonly, i32) local_unnamed_addr #0 align 2 {
  %3 = alloca %"class.v8::internal::compiler::UnallocatedOperand", align 8
  %4 = getelementptr inbounds %"class.v8::internal::compiler::ConstraintBuilder", %"class.v8::internal::compiler::ConstraintBuilder"* %0, i64 0, i32 0
  %5 = load %"class.v8::internal::compiler::TopTierRegisterAllocationData"*, %"class.v8::internal::compiler::TopTierRegisterAllocationData"** %4, align 8
  %6 = getelementptr inbounds %"class.v8::internal::compiler::TopTierRegisterAllocationData", %"class.v8::internal::compiler::TopTierRegisterAllocationData"* %5, i64 0, i32 3
  %7 = load %"class.v8::internal::compiler::InstructionSequence"*, %"class.v8::internal::compiler::InstructionSequence"** %6, align 8
  %8 = sext i32 %1 to i64
  %9 = getelementptr inbounds %"class.v8::internal::compiler::InstructionSequence", %"class.v8::internal::compiler::InstructionSequence"* %7, i64 0, i32 8, i32 0, i32 0, i32 1
  %10 = load i64, i64* %9, align 8
  %11 = add i64 %10, %8
  %12 = getelementptr inbounds %"class.v8::internal::compiler::InstructionSequence", %"class.v8::internal::compiler::InstructionSequence"* %7, i64 0, i32 8, i32 0, i32 0, i32 0, i32 1
  %13 = load %"class.v8::internal::compiler::Instruction"***, %"class.v8::internal::compiler::Instruction"**** %12, align 8
  %14 = lshr i64 %11, 9
  %15 = getelementptr inbounds %"class.v8::internal::compiler::Instruction"**, %"class.v8::internal::compiler::Instruction"*** %13, i64 %14
  %16 = load %"class.v8::internal::compiler::Instruction"**, %"class.v8::internal::compiler::Instruction"*** %15, align 8
  %17 = and i64 %11, 511
  %18 = getelementptr inbounds %"class.v8::internal::compiler::Instruction"*, %"class.v8::internal::compiler::Instruction"** %16, i64 %17
  %19 = load %"class.v8::internal::compiler::Instruction"*, %"class.v8::internal::compiler::Instruction"** %18, align 8
  %20 = getelementptr inbounds %"class.v8::internal::compiler::Instruction", %"class.v8::internal::compiler::Instruction"* %19, i64 0, i32 1
  %21 = load i32, i32* %20, align 4
  %22 = and i32 %21, 1056964608
  %23 = icmp eq i32 %22, 0
  br i1 %23, label %24, label %34

24:                                               ; preds = %58, %2
  %25 = phi i32 [ %21, %2 ], [ %59, %58 ]
  %26 = and i32 %25, 255
  %27 = icmp eq i32 %26, 0
  br i1 %27, label %65, label %28

28:                                               ; preds = %24
  %29 = bitcast %"class.v8::internal::compiler::UnallocatedOperand"* %3 to i8*
  %30 = getelementptr inbounds %"class.v8::internal::compiler::UnallocatedOperand", %"class.v8::internal::compiler::UnallocatedOperand"* %3, i64 0, i32 0, i32 0
  %31 = add nsw i32 %1, 1
  %32 = getelementptr inbounds %"class.v8::internal::compiler::UnallocatedOperand", %"class.v8::internal::compiler::UnallocatedOperand"* %3, i64 0, i32 0
  %33 = sext i32 %31 to i64
  br label %66

34:                                               ; preds = %2, %58
  %35 = phi i32 [ %59, %58 ], [ %21, %2 ]
  %36 = phi i64 [ %60, %58 ], [ 0, %2 ]
  %37 = and i32 %35, 255
  %38 = lshr i32 %35, 8
  %39 = and i32 %38, 65535
  %40 = add nuw nsw i32 %39, %37
  %41 = zext i32 %40 to i64
  %42 = add nuw i64 %36, %41
  %43 = getelementptr inbounds %"class.v8::internal::compiler::Instruction", %"class.v8::internal::compiler::Instruction"* %19, i64 0, i32 5, i64 %42
  %44 = bitcast %"class.v8::internal::compiler::InstructionOperand"* %43 to %"class.v8::internal::compiler::UnallocatedOperand"*
  %45 = getelementptr inbounds %"class.v8::internal::compiler::InstructionOperand", %"class.v8::internal::compiler::InstructionOperand"* %43, i64 0, i32 0
  %46 = load i64, i64* %45, align 8
  %47 = and i64 %46, 34359738368
  %48 = icmp eq i64 %47, 0
  br i1 %48, label %55, label %49

49:                                               ; preds = %34
  %50 = lshr i64 %46, 36
  %51 = trunc i64 %50 to i32
  %52 = and i32 %51, 7
  %53 = add nsw i32 %52, -3
  %54 = icmp ult i32 %53, 2
  br i1 %54, label %55, label %58

55:                                               ; preds = %34, %49
  %56 = tail call %"class.v8::internal::compiler::InstructionOperand"* @_ZN2v88internal8compiler17ConstraintBuilder13AllocateFixedEPNS1_18UnallocatedOperandEibb(%"class.v8::internal::compiler::ConstraintBuilder"* %0, %"class.v8::internal::compiler::UnallocatedOperand"* %44, i32 %1, i1 zeroext false, i1 zeroext false)
  %57 = load i32, i32* %20, align 4
  br label %58

58:                                               ; preds = %55, %49
  %59 = phi i32 [ %57, %55 ], [ %35, %49 ]
  %60 = add nuw nsw i64 %36, 1
  %61 = lshr i32 %59, 24
  %62 = and i32 %61, 63
  %63 = zext i32 %62 to i64
  %64 = icmp ult i64 %60, %63
  br i1 %64, label %34, label %24

65:                                               ; preds = %376, %24
  ret void

66:                                               ; preds = %28, %376
  %67 = phi i64 [ 0, %28 ], [ %377, %376 ]
  %68 = getelementptr inbounds %"class.v8::internal::compiler::Instruction", %"class.v8::internal::compiler::Instruction"* %19, i64 0, i32 5, i64 %67
  %69 = getelementptr inbounds %"class.v8::internal::compiler::InstructionOperand", %"class.v8::internal::compiler::InstructionOperand"* %68, i64 0, i32 0
  %70 = load i64, i64* %69, align 8
  %71 = and i64 %70, 7
  %72 = icmp eq i64 %71, 2
  br i1 %72, label %73, label %87

73:                                               ; preds = %66
  %74 = lshr i64 %70, 3
  %75 = trunc i64 %74 to i32
  %76 = load %"class.v8::internal::compiler::TopTierRegisterAllocationData"*, %"class.v8::internal::compiler::TopTierRegisterAllocationData"** %4, align 8
  %77 = call %"class.v8::internal::compiler::TopLevelLiveRange"* @_ZN2v88internal8compiler29TopTierRegisterAllocationData23GetOrCreateLiveRangeForEi(%"class.v8::internal::compiler::TopTierRegisterAllocationData"* %76, i32 %75)
  %78 = getelementptr inbounds %"class.v8::internal::compiler::TopLevelLiveRange", %"class.v8::internal::compiler::TopLevelLiveRange"* %77, i64 0, i32 7
  %79 = load i32, i32* %78, align 4
  %80 = icmp slt i32 %79, %31
  %81 = select i1 %80, i32 %79, i32 %31
  store i32 %81, i32* %78, align 4
  %82 = getelementptr inbounds %"class.v8::internal::compiler::TopLevelLiveRange", %"class.v8::internal::compiler::TopLevelLiveRange"* %77, i64 0, i32 0, i32 1
  %83 = load i32, i32* %82, align 4
  %84 = and i32 %83, -97
  %85 = or i32 %84, 32
  store i32 %85, i32* %82, align 4
  %86 = getelementptr inbounds %"class.v8::internal::compiler::TopLevelLiveRange", %"class.v8::internal::compiler::TopLevelLiveRange"* %77, i64 0, i32 3, i32 0
  store %"class.v8::internal::compiler::InstructionOperand"* %68, %"class.v8::internal::compiler::InstructionOperand"** %86, align 8
  br label %376

87:                                               ; preds = %66
  %88 = bitcast %"class.v8::internal::compiler::InstructionOperand"* %68 to %"class.v8::internal::compiler::UnallocatedOperand"*
  %89 = load %"class.v8::internal::compiler::TopTierRegisterAllocationData"*, %"class.v8::internal::compiler::TopTierRegisterAllocationData"** %4, align 8
  %90 = lshr i64 %70, 3
  %91 = trunc i64 %90 to i32
  %92 = call %"class.v8::internal::compiler::TopLevelLiveRange"* @_ZN2v88internal8compiler29TopTierRegisterAllocationData23GetOrCreateLiveRangeForEi(%"class.v8::internal::compiler::TopTierRegisterAllocationData"* %89, i32 %91)
  %93 = load i64, i64* %69, align 8
  %94 = and i64 %93, 34359738368
  %95 = icmp eq i64 %94, 0
  br i1 %95, label %102, label %96

96:                                               ; preds = %87
  %97 = lshr i64 %93, 36
  %98 = trunc i64 %97 to i32
  %99 = and i32 %98, 7
  %100 = add nsw i32 %99, -3
  %101 = icmp ult i32 %100, 2
  br i1 %101, label %102, label %346

102:                                              ; preds = %87, %96
  %103 = lshr i64 %93, 3
  %104 = trunc i64 %103 to i32
  call void @llvm.lifetime.start.p0i8(i64 8, i8* nonnull %29) #16
  %105 = and i64 %93, 34359738360
  %106 = or i64 %105, 652835028993
  store i64 %106, i64* %30, align 8
  %107 = load %"class.v8::internal::compiler::TopTierRegisterAllocationData"*, %"class.v8::internal::compiler::TopTierRegisterAllocationData"** %4, align 8
  %108 = getelementptr inbounds %"class.v8::internal::compiler::TopTierRegisterAllocationData", %"class.v8::internal::compiler::TopTierRegisterAllocationData"* %107, i64 0, i32 3
  %109 = load %"class.v8::internal::compiler::InstructionSequence"*, %"class.v8::internal::compiler::InstructionSequence"** %108, align 8
  %110 = call zeroext i8 @_ZNK2v88internal8compiler19InstructionSequence17GetRepresentationEi(%"class.v8::internal::compiler::InstructionSequence"* %109, i32 %104) #16
  switch i8 %110, label %111 [
    i8 9, label %114
    i8 8, label %114
    i8 6, label %114
  ]

111:                                              ; preds = %102
  %112 = or i8 %110, 1
  %113 = icmp eq i8 %112, 11
  br label %114

114:                                              ; preds = %102, %102, %102, %111
  %115 = phi i1 [ true, %102 ], [ %113, %111 ], [ true, %102 ], [ true, %102 ]
  %116 = load i64, i64* %69, align 8
  %117 = and i64 %116, 1614907703296
  %118 = icmp eq i64 %117, 1340029796352
  br i1 %118, label %119, label %239

119:                                              ; preds = %114
  %120 = getelementptr inbounds %"class.v8::internal::compiler::TopLevelLiveRange", %"class.v8::internal::compiler::TopLevelLiveRange"* %92, i64 0, i32 6
  store i8 1, i8* %120, align 1
  %121 = load %"class.v8::internal::compiler::TopTierRegisterAllocationData"*, %"class.v8::internal::compiler::TopTierRegisterAllocationData"** %4, align 8
  %122 = getelementptr inbounds %"class.v8::internal::compiler::TopTierRegisterAllocationData", %"class.v8::internal::compiler::TopTierRegisterAllocationData"* %121, i64 0, i32 21, i32 0
  %123 = load i64, i64* %69, align 8
  %124 = lshr i64 %123, 47
  %125 = trunc i64 %124 to i32
  %126 = and i32 %125, 7
  %127 = getelementptr inbounds %"class.v8::internal::compiler::TopTierRegisterAllocationData", %"class.v8::internal::compiler::TopTierRegisterAllocationData"* %121, i64 0, i32 21, i32 0, i32 0, i32 1
  %128 = load %"struct.std::__1::pair.1301"*, %"struct.std::__1::pair.1301"** %127, align 8
  %129 = getelementptr inbounds %"class.v8::internal::compiler::TopTierRegisterAllocationData", %"class.v8::internal::compiler::TopTierRegisterAllocationData"* %121, i64 0, i32 21, i32 0, i32 0, i32 2, i32 0, i32 0
  %130 = load %"struct.std::__1::pair.1301"*, %"struct.std::__1::pair.1301"** %129, align 8
  %131 = icmp ult %"struct.std::__1::pair.1301"* %128, %130
  %132 = ptrtoint %"struct.std::__1::pair.1301"* %130 to i64
  br i1 %131, label %133, label %139

133:                                              ; preds = %119
  %134 = getelementptr inbounds %"struct.std::__1::pair.1301", %"struct.std::__1::pair.1301"* %128, i64 0, i32 0
  store %"class.v8::internal::compiler::TopLevelLiveRange"* %92, %"class.v8::internal::compiler::TopLevelLiveRange"** %134, align 8
  %135 = getelementptr inbounds %"struct.std::__1::pair.1301", %"struct.std::__1::pair.1301"* %128, i64 0, i32 1
  store i32 %126, i32* %135, align 8
  %136 = getelementptr inbounds %"struct.std::__1::pair.1301", %"struct.std::__1::pair.1301"* %128, i64 1
  %137 = ptrtoint %"struct.std::__1::pair.1301"* %136 to i64
  %138 = bitcast %"struct.std::__1::pair.1301"** %127 to i64*
  store i64 %137, i64* %138, align 8
  br label %239

139:                                              ; preds = %119
  %140 = ptrtoint %"struct.std::__1::pair.1301"* %128 to i64
  %141 = bitcast %"struct.std::__1::pair.1301"** %127 to i64*
  %142 = bitcast %"class.std::__1::vector.1299"* %122 to i64*
  %143 = load i64, i64* %142, align 8
  %144 = sub i64 %140, %143
  %145 = ashr exact i64 %144, 4
  %146 = add nsw i64 %145, 1
  %147 = icmp ugt i64 %146, 134217727
  br i1 %147, label %148, label %150

148:                                              ; preds = %139
  %149 = bitcast %"class.std::__1::vector.1299"* %122 to %"class.std::__1::__vector_base_common"*
  call void @_ZNKSt3__120__vector_base_commonILb1EE20__throw_length_errorEv(%"class.std::__1::__vector_base_common"* %149) #17
  unreachable

150:                                              ; preds = %139
  %151 = bitcast %"struct.std::__1::pair.1301"** %129 to i64*
  %152 = sub i64 %132, %143
  %153 = ashr exact i64 %152, 4
  %154 = icmp ult i64 %153, 67108863
  br i1 %154, label %155, label %160

155:                                              ; preds = %150
  %156 = ashr exact i64 %152, 3
  %157 = icmp ult i64 %156, %146
  %158 = select i1 %157, i64 %146, i64 %156
  %159 = icmp eq i64 %158, 0
  br i1 %159, label %178, label %160

160:                                              ; preds = %155, %150
  %161 = phi i64 [ %158, %155 ], [ 134217727, %150 ]
  %162 = getelementptr inbounds %"class.v8::internal::compiler::TopTierRegisterAllocationData", %"class.v8::internal::compiler::TopTierRegisterAllocationData"* %121, i64 0, i32 21, i32 0, i32 0, i32 2, i32 1, i32 0, i32 0
  %163 = load %"class.v8::internal::Zone"*, %"class.v8::internal::Zone"** %162, align 8
  %164 = shl i64 %161, 4
  %165 = getelementptr inbounds %"class.v8::internal::Zone", %"class.v8::internal::Zone"* %163, i64 0, i32 2
  %166 = load i64, i64* %165, align 8
  %167 = getelementptr inbounds %"class.v8::internal::Zone", %"class.v8::internal::Zone"* %163, i64 0, i32 3
  %168 = load i64, i64* %167, align 8
  %169 = sub i64 %168, %166
  %170 = icmp ugt i64 %164, %169
  br i1 %170, label %171, label %173, !prof !2

171:                                              ; preds = %160
  %172 = call i64 @_ZN2v88internal4Zone9NewExpandEm(%"class.v8::internal::Zone"* %163, i64 %164) #16
  br label %175

173:                                              ; preds = %160
  %174 = add i64 %166, %164
  store i64 %174, i64* %165, align 8
  br label %175

175:                                              ; preds = %173, %171
  %176 = phi i64 [ %172, %171 ], [ %166, %173 ]
  %177 = inttoptr i64 %176 to %"struct.std::__1::pair.1301"*
  br label %178

178:                                              ; preds = %175, %155
  %179 = phi i64 [ %161, %175 ], [ 0, %155 ]
  %180 = phi %"struct.std::__1::pair.1301"* [ %177, %175 ], [ null, %155 ]
  %181 = getelementptr inbounds %"struct.std::__1::pair.1301", %"struct.std::__1::pair.1301"* %180, i64 %145
  %182 = getelementptr inbounds %"struct.std::__1::pair.1301", %"struct.std::__1::pair.1301"* %180, i64 %179
  %183 = ptrtoint %"struct.std::__1::pair.1301"* %182 to i64
  %184 = getelementptr inbounds %"struct.std::__1::pair.1301", %"struct.std::__1::pair.1301"* %181, i64 0, i32 0
  store %"class.v8::internal::compiler::TopLevelLiveRange"* %92, %"class.v8::internal::compiler::TopLevelLiveRange"** %184, align 8
  %185 = getelementptr inbounds %"struct.std::__1::pair.1301", %"struct.std::__1::pair.1301"* %180, i64 %145, i32 1
  store i32 %126, i32* %185, align 8
  %186 = getelementptr inbounds %"struct.std::__1::pair.1301", %"struct.std::__1::pair.1301"* %181, i64 1
  %187 = ptrtoint %"struct.std::__1::pair.1301"* %186 to i64
  %188 = getelementptr inbounds %"class.std::__1::vector.1299", %"class.std::__1::vector.1299"* %122, i64 0, i32 0, i32 0
  %189 = load %"struct.std::__1::pair.1301"*, %"struct.std::__1::pair.1301"** %188, align 8
  %190 = load %"struct.std::__1::pair.1301"*, %"struct.std::__1::pair.1301"** %127, align 8
  %191 = icmp eq %"struct.std::__1::pair.1301"* %190, %189
  br i1 %191, label %236, label %192

192:                                              ; preds = %178
  %193 = ptrtoint %"struct.std::__1::pair.1301"* %189 to i64
  %194 = getelementptr %"struct.std::__1::pair.1301", %"struct.std::__1::pair.1301"* %190, i64 -1
  %195 = ptrtoint %"struct.std::__1::pair.1301"* %194 to i64
  %196 = sub i64 %195, %193
  %197 = lshr i64 %196, 4
  %198 = add nuw nsw i64 %197, 1
  %199 = and i64 %198, 3
  %200 = icmp eq i64 %199, 0
  br i1 %200, label %211, label %201

201:                                              ; preds = %192, %201
  %202 = phi %"struct.std::__1::pair.1301"* [ %205, %201 ], [ %181, %192 ]
  %203 = phi %"struct.std::__1::pair.1301"* [ %206, %201 ], [ %190, %192 ]
  %204 = phi i64 [ %209, %201 ], [ %199, %192 ]
  %205 = getelementptr inbounds %"struct.std::__1::pair.1301", %"struct.std::__1::pair.1301"* %202, i64 -1
  %206 = getelementptr inbounds %"struct.std::__1::pair.1301", %"struct.std::__1::pair.1301"* %203, i64 -1
  %207 = bitcast %"struct.std::__1::pair.1301"* %205 to i8*
  %208 = bitcast %"struct.std::__1::pair.1301"* %206 to i8*
  call void @llvm.memcpy.p0i8.p0i8.i64(i8* align 8 %207, i8* align 8 %208, i64 16, i1 false) #16
  %209 = add i64 %204, -1
  %210 = icmp eq i64 %209, 0
  br i1 %210, label %211, label %201, !llvm.loop !93

211:                                              ; preds = %201, %192
  %212 = phi %"struct.std::__1::pair.1301"* [ undef, %192 ], [ %205, %201 ]
  %213 = phi %"struct.std::__1::pair.1301"* [ %181, %192 ], [ %205, %201 ]
  %214 = phi %"struct.std::__1::pair.1301"* [ %190, %192 ], [ %206, %201 ]
  %215 = icmp ult i64 %196, 48
  br i1 %215, label %236, label %216

216:                                              ; preds = %211, %216
  %217 = phi %"struct.std::__1::pair.1301"* [ %231, %216 ], [ %213, %211 ]
  %218 = phi %"struct.std::__1::pair.1301"* [ %232, %216 ], [ %214, %211 ]
  %219 = getelementptr inbounds %"struct.std::__1::pair.1301", %"struct.std::__1::pair.1301"* %217, i64 -1
  %220 = getelementptr inbounds %"struct.std::__1::pair.1301", %"struct.std::__1::pair.1301"* %218, i64 -1
  %221 = bitcast %"struct.std::__1::pair.1301"* %219 to i8*
  %222 = bitcast %"struct.std::__1::pair.1301"* %220 to i8*
  call void @llvm.memcpy.p0i8.p0i8.i64(i8* align 8 %221, i8* align 8 %222, i64 16, i1 false) #16
  %223 = getelementptr inbounds %"struct.std::__1::pair.1301", %"struct.std::__1::pair.1301"* %217, i64 -2
  %224 = getelementptr inbounds %"struct.std::__1::pair.1301", %"struct.std::__1::pair.1301"* %218, i64 -2
  %225 = bitcast %"struct.std::__1::pair.1301"* %223 to i8*
  %226 = bitcast %"struct.std::__1::pair.1301"* %224 to i8*
  call void @llvm.memcpy.p0i8.p0i8.i64(i8* align 8 %225, i8* align 8 %226, i64 16, i1 false) #16
  %227 = getelementptr inbounds %"struct.std::__1::pair.1301", %"struct.std::__1::pair.1301"* %217, i64 -3
  %228 = getelementptr inbounds %"struct.std::__1::pair.1301", %"struct.std::__1::pair.1301"* %218, i64 -3
  %229 = bitcast %"struct.std::__1::pair.1301"* %227 to i8*
  %230 = bitcast %"struct.std::__1::pair.1301"* %228 to i8*
  call void @llvm.memcpy.p0i8.p0i8.i64(i8* align 8 %229, i8* align 8 %230, i64 16, i1 false) #16
  %231 = getelementptr inbounds %"struct.std::__1::pair.1301", %"struct.std::__1::pair.1301"* %217, i64 -4
  %232 = getelementptr inbounds %"struct.std::__1::pair.1301", %"struct.std::__1::pair.1301"* %218, i64 -4
  %233 = bitcast %"struct.std::__1::pair.1301"* %231 to i8*
  %234 = bitcast %"struct.std::__1::pair.1301"* %232 to i8*
  call void @llvm.memcpy.p0i8.p0i8.i64(i8* align 8 %233, i8* align 8 %234, i64 16, i1 false) #16
  %235 = icmp eq %"struct.std::__1::pair.1301"* %232, %189
  br i1 %235, label %236, label %216

236:                                              ; preds = %211, %216, %178
  %237 = phi %"struct.std::__1::pair.1301"* [ %181, %178 ], [ %212, %211 ], [ %231, %216 ]
  %238 = ptrtoint %"struct.std::__1::pair.1301"* %237 to i64
  store i64 %238, i64* %142, align 8
  store i64 %187, i64* %141, align 8
  store i64 %183, i64* %151, align 8
  br label %239

239:                                              ; preds = %236, %133, %114
  %240 = call %"class.v8::internal::compiler::InstructionOperand"* @_ZN2v88internal8compiler17ConstraintBuilder13AllocateFixedEPNS1_18UnallocatedOperandEibb(%"class.v8::internal::compiler::ConstraintBuilder"* %0, %"class.v8::internal::compiler::UnallocatedOperand"* %88, i32 %1, i1 zeroext %115, i1 zeroext false)
  %241 = load i64, i64* %69, align 8
  %242 = and i64 %241, 7
  %243 = icmp ugt i64 %242, 4
  %244 = and i64 %241, 24
  %245 = icmp eq i64 %244, 8
  %246 = and i1 %243, %245
  br i1 %246, label %247, label %303

247:                                              ; preds = %239
  %248 = lshr i64 %241, 5
  %249 = trunc i64 %248 to i8
  %250 = icmp ult i8 %249, 12
  br i1 %250, label %251, label %303

251:                                              ; preds = %247
  %252 = getelementptr inbounds %"class.v8::internal::compiler::TopLevelLiveRange", %"class.v8::internal::compiler::TopLevelLiveRange"* %92, i64 0, i32 0, i32 1
  %253 = load i32, i32* %252, align 4
  %254 = and i32 %253, -97
  %255 = or i32 %254, 32
  store i32 %255, i32* %252, align 4
  %256 = getelementptr inbounds %"class.v8::internal::compiler::TopLevelLiveRange", %"class.v8::internal::compiler::TopLevelLiveRange"* %92, i64 0, i32 3, i32 0
  store %"class.v8::internal::compiler::InstructionOperand"* %68, %"class.v8::internal::compiler::InstructionOperand"** %256, align 8
  %257 = getelementptr inbounds %"class.v8::internal::compiler::TopLevelLiveRange", %"class.v8::internal::compiler::TopLevelLiveRange"* %92, i64 0, i32 7
  %258 = load i32, i32* %257, align 4
  %259 = icmp slt i32 %258, %31
  %260 = select i1 %259, i32 %258, i32 %31
  store i32 %260, i32* %257, align 4
  %261 = load %"class.v8::internal::compiler::TopTierRegisterAllocationData"*, %"class.v8::internal::compiler::TopTierRegisterAllocationData"** %4, align 8
  %262 = getelementptr inbounds %"class.v8::internal::compiler::TopTierRegisterAllocationData", %"class.v8::internal::compiler::TopTierRegisterAllocationData"* %261, i64 0, i32 3
  %263 = load %"class.v8::internal::compiler::InstructionSequence"*, %"class.v8::internal::compiler::InstructionSequence"** %262, align 8
  %264 = getelementptr inbounds %"class.v8::internal::compiler::InstructionSequence", %"class.v8::internal::compiler::InstructionSequence"* %263, i64 0, i32 8, i32 0, i32 0, i32 1
  %265 = load i64, i64* %264, align 8
  %266 = add i64 %265, %33
  %267 = getelementptr inbounds %"class.v8::internal::compiler::InstructionSequence", %"class.v8::internal::compiler::InstructionSequence"* %263, i64 0, i32 8, i32 0, i32 0, i32 0, i32 1
  %268 = load %"class.v8::internal::compiler::Instruction"***, %"class.v8::internal::compiler::Instruction"**** %267, align 8
  %269 = lshr i64 %266, 9
  %270 = getelementptr inbounds %"class.v8::internal::compiler::Instruction"**, %"class.v8::internal::compiler::Instruction"*** %268, i64 %269
  %271 = load %"class.v8::internal::compiler::Instruction"**, %"class.v8::internal::compiler::Instruction"*** %270, align 8
  %272 = and i64 %266, 511
  %273 = getelementptr inbounds %"class.v8::internal::compiler::Instruction"*, %"class.v8::internal::compiler::Instruction"** %271, i64 %272
  %274 = load %"class.v8::internal::compiler::Instruction"*, %"class.v8::internal::compiler::Instruction"** %273, align 8
  %275 = getelementptr inbounds %"class.v8::internal::compiler::InstructionSequence", %"class.v8::internal::compiler::InstructionSequence"* %263, i64 0, i32 1
  %276 = load %"class.v8::internal::Zone"*, %"class.v8::internal::Zone"** %275, align 8
  %277 = ptrtoint %"class.v8::internal::Zone"* %276 to i64
  %278 = getelementptr inbounds %"class.v8::internal::compiler::Instruction", %"class.v8::internal::compiler::Instruction"* %274, i64 0, i32 2, i64 0
  %279 = load %"class.v8::internal::compiler::ParallelMove"*, %"class.v8::internal::compiler::ParallelMove"** %278, align 8
  %280 = icmp eq %"class.v8::internal::compiler::ParallelMove"* %279, null
  br i1 %280, label %281, label %298

281:                                              ; preds = %251
  %282 = getelementptr inbounds %"class.v8::internal::Zone", %"class.v8::internal::Zone"* %276, i64 0, i32 2
  %283 = load i64, i64* %282, align 8
  %284 = getelementptr inbounds %"class.v8::internal::Zone", %"class.v8::internal::Zone"* %276, i64 0, i32 3
  %285 = load i64, i64* %284, align 8
  %286 = sub i64 %285, %283
  %287 = icmp ult i64 %286, 32
  br i1 %287, label %288, label %290, !prof !2

288:                                              ; preds = %281
  %289 = call i64 @_ZN2v88internal4Zone9NewExpandEm(%"class.v8::internal::Zone"* %276, i64 32) #16
  br label %292

290:                                              ; preds = %281
  %291 = add i64 %283, 32
  store i64 %291, i64* %282, align 8
  br label %292

292:                                              ; preds = %290, %288
  %293 = phi i64 [ %289, %288 ], [ %283, %290 ]
  %294 = inttoptr i64 %293 to i8*
  %295 = inttoptr i64 %293 to %"class.v8::internal::compiler::ParallelMove"*
  %296 = getelementptr inbounds %"class.v8::internal::compiler::ParallelMove", %"class.v8::internal::compiler::ParallelMove"* %295, i64 0, i32 0, i32 0, i32 0, i32 2, i32 1
  %297 = bitcast %"struct.std::__1::__compressed_pair_elem.1208"* %296 to i64*
  call void @llvm.memset.p0i8.i64(i8* align 8 %294, i8 0, i64 24, i1 false) #16
  store i64 %277, i64* %297, align 8
  store %"class.v8::internal::compiler::ParallelMove"* %295, %"class.v8::internal::compiler::ParallelMove"** %278, align 8
  br label %298

298:                                              ; preds = %251, %292
  %299 = phi %"class.v8::internal::compiler::ParallelMove"* [ %295, %292 ], [ %279, %251 ]
  %300 = getelementptr inbounds %"class.v8::internal::compiler::ParallelMove", %"class.v8::internal::compiler::ParallelMove"* %299, i64 0, i32 0, i32 0, i32 0, i32 2, i32 1, i32 0, i32 0
  %301 = load %"class.v8::internal::Zone"*, %"class.v8::internal::Zone"** %300, align 8
  %302 = call %"class.v8::internal::compiler::MoveOperands"* @_ZN2v88internal8compiler12ParallelMove7AddMoveERKNS1_18InstructionOperandES5_PNS0_4ZoneE(%"class.v8::internal::compiler::ParallelMove"* %299, %"class.v8::internal::compiler::InstructionOperand"* dereferenceable(8) %68, %"class.v8::internal::compiler::InstructionOperand"* nonnull dereferenceable(8) %32, %"class.v8::internal::Zone"* %301) #16
  call void @llvm.lifetime.end.p0i8(i64 8, i8* nonnull %29) #16
  br label %376

303:                                              ; preds = %239, %247
  %304 = load %"class.v8::internal::compiler::TopTierRegisterAllocationData"*, %"class.v8::internal::compiler::TopTierRegisterAllocationData"** %4, align 8
  %305 = getelementptr inbounds %"class.v8::internal::compiler::TopTierRegisterAllocationData", %"class.v8::internal::compiler::TopTierRegisterAllocationData"* %304, i64 0, i32 3
  %306 = load %"class.v8::internal::compiler::InstructionSequence"*, %"class.v8::internal::compiler::InstructionSequence"** %305, align 8
  %307 = getelementptr inbounds %"class.v8::internal::compiler::InstructionSequence", %"class.v8::internal::compiler::InstructionSequence"* %306, i64 0, i32 8, i32 0, i32 0, i32 1
  %308 = load i64, i64* %307, align 8
  %309 = add i64 %308, %33
  %310 = getelementptr inbounds %"class.v8::internal::compiler::InstructionSequence", %"class.v8::internal::compiler::InstructionSequence"* %306, i64 0, i32 8, i32 0, i32 0, i32 0, i32 1
  %311 = load %"class.v8::internal::compiler::Instruction"***, %"class.v8::internal::compiler::Instruction"**** %310, align 8
  %312 = lshr i64 %309, 9
  %313 = getelementptr inbounds %"class.v8::internal::compiler::Instruction"**, %"class.v8::internal::compiler::Instruction"*** %311, i64 %312
  %314 = load %"class.v8::internal::compiler::Instruction"**, %"class.v8::internal::compiler::Instruction"*** %313, align 8
  %315 = and i64 %309, 511
  %316 = getelementptr inbounds %"class.v8::internal::compiler::Instruction"*, %"class.v8::internal::compiler::Instruction"** %314, i64 %315
  %317 = load %"class.v8::internal::compiler::Instruction"*, %"class.v8::internal::compiler::Instruction"** %316, align 8
  %318 = getelementptr inbounds %"class.v8::internal::compiler::InstructionSequence", %"class.v8::internal::compiler::InstructionSequence"* %306, i64 0, i32 1
  %319 = load %"class.v8::internal::Zone"*, %"class.v8::internal::Zone"** %318, align 8
  %320 = ptrtoint %"class.v8::internal::Zone"* %319 to i64
  %321 = getelementptr inbounds %"class.v8::internal::compiler::Instruction", %"class.v8::internal::compiler::Instruction"* %317, i64 0, i32 2, i64 0
  %322 = load %"class.v8::internal::compiler::ParallelMove"*, %"class.v8::internal::compiler::ParallelMove"** %321, align 8
  %323 = icmp eq %"class.v8::internal::compiler::ParallelMove"* %322, null
  br i1 %323, label %324, label %341

324:                                              ; preds = %303
  %325 = getelementptr inbounds %"class.v8::internal::Zone", %"class.v8::internal::Zone"* %319, i64 0, i32 2
  %326 = load i64, i64* %325, align 8
  %327 = getelementptr inbounds %"class.v8::internal::Zone", %"class.v8::internal::Zone"* %319, i64 0, i32 3
  %328 = load i64, i64* %327, align 8
  %329 = sub i64 %328, %326
  %330 = icmp ult i64 %329, 32
  br i1 %330, label %331, label %333, !prof !2

331:                                              ; preds = %324
  %332 = call i64 @_ZN2v88internal4Zone9NewExpandEm(%"class.v8::internal::Zone"* %319, i64 32) #16
  br label %335

333:                                              ; preds = %324
  %334 = add i64 %326, 32
  store i64 %334, i64* %325, align 8
  br label %335

335:                                              ; preds = %333, %331
  %336 = phi i64 [ %332, %331 ], [ %326, %333 ]
  %337 = inttoptr i64 %336 to i8*
  %338 = inttoptr i64 %336 to %"class.v8::internal::compiler::ParallelMove"*
  %339 = getelementptr inbounds %"class.v8::internal::compiler::ParallelMove", %"class.v8::internal::compiler::ParallelMove"* %338, i64 0, i32 0, i32 0, i32 0, i32 2, i32 1
  %340 = bitcast %"struct.std::__1::__compressed_pair_elem.1208"* %339 to i64*
  call void @llvm.memset.p0i8.i64(i8* align 8 %337, i8 0, i64 24, i1 false) #16
  store i64 %320, i64* %340, align 8
  store %"class.v8::internal::compiler::ParallelMove"* %338, %"class.v8::internal::compiler::ParallelMove"** %321, align 8
  br label %341

341:                                              ; preds = %303, %335
  %342 = phi %"class.v8::internal::compiler::ParallelMove"* [ %338, %335 ], [ %322, %303 ]
  %343 = getelementptr inbounds %"class.v8::internal::compiler::ParallelMove", %"class.v8::internal::compiler::ParallelMove"* %342, i64 0, i32 0, i32 0, i32 0, i32 2, i32 1, i32 0, i32 0
  %344 = load %"class.v8::internal::Zone"*, %"class.v8::internal::Zone"** %343, align 8
  %345 = call %"class.v8::internal::compiler::MoveOperands"* @_ZN2v88internal8compiler12ParallelMove7AddMoveERKNS1_18InstructionOperandES5_PNS0_4ZoneE(%"class.v8::internal::compiler::ParallelMove"* %342, %"class.v8::internal::compiler::InstructionOperand"* dereferenceable(8) %68, %"class.v8::internal::compiler::InstructionOperand"* nonnull dereferenceable(8) %32, %"class.v8::internal::Zone"* %344) #16
  call void @llvm.lifetime.end.p0i8(i64 8, i8* nonnull %29) #16
  br label %346

346:                                              ; preds = %96, %341
  %347 = load %"class.v8::internal::compiler::TopTierRegisterAllocationData"*, %"class.v8::internal::compiler::TopTierRegisterAllocationData"** %4, align 8
  %348 = getelementptr inbounds %"class.v8::internal::compiler::TopTierRegisterAllocationData", %"class.v8::internal::compiler::TopTierRegisterAllocationData"* %347, i64 0, i32 1
  %349 = load %"class.v8::internal::Zone"*, %"class.v8::internal::Zone"** %348, align 8
  %350 = ptrtoint %"class.v8::internal::compiler::InstructionOperand"* %68 to i64
  %351 = getelementptr inbounds %"class.v8::internal::compiler::TopLevelLiveRange", %"class.v8::internal::compiler::TopLevelLiveRange"* %92, i64 0, i32 4, i32 0
  %352 = getelementptr inbounds %"class.v8::internal::Zone", %"class.v8::internal::Zone"* %349, i64 0, i32 2
  %353 = load i64, i64* %352, align 8
  %354 = getelementptr inbounds %"class.v8::internal::Zone", %"class.v8::internal::Zone"* %349, i64 0, i32 3
  %355 = load i64, i64* %354, align 8
  %356 = sub i64 %355, %353
  %357 = icmp ult i64 %356, 24
  br i1 %357, label %358, label %360, !prof !2

358:                                              ; preds = %346
  %359 = call i64 @_ZN2v88internal4Zone9NewExpandEm(%"class.v8::internal::Zone"* %349, i64 24) #16
  br label %362

360:                                              ; preds = %346
  %361 = add i64 %353, 24
  store i64 %361, i64* %352, align 8
  br label %362

362:                                              ; preds = %358, %360
  %363 = phi i64 [ %359, %358 ], [ %353, %360 ]
  %364 = inttoptr i64 %363 to %"struct.v8::internal::compiler::TopLevelLiveRange::SpillMoveInsertionList"*
  %365 = bitcast %"struct.v8::internal::compiler::TopLevelLiveRange::SpillMoveInsertionList"** %351 to i64*
  %366 = load i64, i64* %365, align 8
  %367 = getelementptr inbounds %"struct.v8::internal::compiler::TopLevelLiveRange::SpillMoveInsertionList", %"struct.v8::internal::compiler::TopLevelLiveRange::SpillMoveInsertionList"* %364, i64 0, i32 0
  store i32 %31, i32* %367, align 8
  %368 = getelementptr inbounds %"struct.v8::internal::compiler::TopLevelLiveRange::SpillMoveInsertionList", %"struct.v8::internal::compiler::TopLevelLiveRange::SpillMoveInsertionList"* %364, i64 0, i32 1
  %369 = bitcast %"class.v8::internal::compiler::InstructionOperand"** %368 to i64*
  store i64 %350, i64* %369, align 8
  %370 = getelementptr inbounds %"struct.v8::internal::compiler::TopLevelLiveRange::SpillMoveInsertionList", %"struct.v8::internal::compiler::TopLevelLiveRange::SpillMoveInsertionList"* %364, i64 0, i32 2
  %371 = bitcast %"struct.v8::internal::compiler::TopLevelLiveRange::SpillMoveInsertionList"** %370 to i64*
  store i64 %366, i64* %371, align 8
  store %"struct.v8::internal::compiler::TopLevelLiveRange::SpillMoveInsertionList"* %364, %"struct.v8::internal::compiler::TopLevelLiveRange::SpillMoveInsertionList"** %351, align 8
  %372 = getelementptr inbounds %"class.v8::internal::compiler::TopLevelLiveRange", %"class.v8::internal::compiler::TopLevelLiveRange"* %92, i64 0, i32 7
  %373 = load i32, i32* %372, align 4
  %374 = icmp slt i32 %373, %31
  %375 = select i1 %374, i32 %373, i32 %31
  store i32 %375, i32* %372, align 4
  br label %376

376:                                              ; preds = %362, %298, %73
  %377 = add nuw nsw i64 %67, 1
  %378 = load i32, i32* %20, align 4
  %379 = and i32 %378, 255
  %380 = zext i32 %379 to i64
  %381 = icmp ult i64 %377, %380
  br i1 %381, label %66, label %65
}

; Function Attrs: nounwind ssp uwtable
define hidden void @_ZN2v88internal8compiler17ConstraintBuilder48MeetRegisterConstraintsForLastInstructionInBlockEPKNS1_16InstructionBlockE(%"class.v8::internal::compiler::ConstraintBuilder"* nocapture readonly, %"class.v8::internal::compiler::InstructionBlock"* nocapture readonly) local_unnamed_addr #0 align 2 {
  %3 = alloca %"class.v8::internal::compiler::UnallocatedOperand", align 8
  %4 = getelementptr inbounds %"class.v8::internal::compiler::InstructionBlock", %"class.v8::internal::compiler::InstructionBlock"* %1, i64 0, i32 9
  %5 = load i32, i32* %4, align 8
  %6 = add nsw i32 %5, -1
  %7 = getelementptr inbounds %"class.v8::internal::compiler::ConstraintBuilder", %"class.v8::internal::compiler::ConstraintBuilder"* %0, i64 0, i32 0
  %8 = load %"class.v8::internal::compiler::TopTierRegisterAllocationData"*, %"class.v8::internal::compiler::TopTierRegisterAllocationData"** %7, align 8
  %9 = getelementptr inbounds %"class.v8::internal::compiler::TopTierRegisterAllocationData", %"class.v8::internal::compiler::TopTierRegisterAllocationData"* %8, i64 0, i32 3
  %10 = load %"class.v8::internal::compiler::InstructionSequence"*, %"class.v8::internal::compiler::InstructionSequence"** %9, align 8
  %11 = sext i32 %6 to i64
  %12 = getelementptr inbounds %"class.v8::internal::compiler::InstructionSequence", %"class.v8::internal::compiler::InstructionSequence"* %10, i64 0, i32 8, i32 0, i32 0, i32 1
  %13 = load i64, i64* %12, align 8
  %14 = add i64 %13, %11
  %15 = getelementptr inbounds %"class.v8::internal::compiler::InstructionSequence", %"class.v8::internal::compiler::InstructionSequence"* %10, i64 0, i32 8, i32 0, i32 0, i32 0, i32 1
  %16 = load %"class.v8::internal::compiler::Instruction"***, %"class.v8::internal::compiler::Instruction"**** %15, align 8
  %17 = lshr i64 %14, 9
  %18 = getelementptr inbounds %"class.v8::internal::compiler::Instruction"**, %"class.v8::internal::compiler::Instruction"*** %16, i64 %17
  %19 = load %"class.v8::internal::compiler::Instruction"**, %"class.v8::internal::compiler::Instruction"*** %18, align 8
  %20 = and i64 %14, 511
  %21 = getelementptr inbounds %"class.v8::internal::compiler::Instruction"*, %"class.v8::internal::compiler::Instruction"** %19, i64 %20
  %22 = load %"class.v8::internal::compiler::Instruction"*, %"class.v8::internal::compiler::Instruction"** %21, align 8
  %23 = getelementptr inbounds %"class.v8::internal::compiler::Instruction", %"class.v8::internal::compiler::Instruction"* %22, i64 0, i32 1
  %24 = load i32, i32* %23, align 4
  %25 = and i32 %24, 255
  %26 = icmp eq i32 %25, 0
  br i1 %26, label %33, label %27

27:                                               ; preds = %2
  %28 = getelementptr inbounds %"class.v8::internal::compiler::InstructionBlock", %"class.v8::internal::compiler::InstructionBlock"* %1, i64 0, i32 0, i32 0, i32 0, i32 0
  %29 = getelementptr inbounds %"class.v8::internal::compiler::InstructionBlock", %"class.v8::internal::compiler::InstructionBlock"* %1, i64 0, i32 0, i32 0, i32 0, i32 1
  %30 = bitcast %"class.v8::internal::compiler::UnallocatedOperand"* %3 to i8*
  %31 = getelementptr inbounds %"class.v8::internal::compiler::UnallocatedOperand", %"class.v8::internal::compiler::UnallocatedOperand"* %3, i64 0, i32 0, i32 0
  %32 = getelementptr inbounds %"class.v8::internal::compiler::UnallocatedOperand", %"class.v8::internal::compiler::UnallocatedOperand"* %3, i64 0, i32 0
  br label %34

33:                                               ; preds = %215, %2
  ret void

34:                                               ; preds = %221, %27
  %35 = phi %"class.v8::internal::compiler::TopTierRegisterAllocationData"* [ %8, %27 ], [ %222, %221 ]
  %36 = phi i64 [ 0, %27 ], [ %216, %221 ]
  %37 = getelementptr inbounds %"class.v8::internal::compiler::Instruction", %"class.v8::internal::compiler::Instruction"* %22, i64 0, i32 5, i64 %36
  %38 = bitcast %"class.v8::internal::compiler::InstructionOperand"* %37 to %"class.v8::internal::compiler::UnallocatedOperand"*
  %39 = getelementptr inbounds %"class.v8::internal::compiler::InstructionOperand", %"class.v8::internal::compiler::InstructionOperand"* %37, i64 0, i32 0
  %40 = load i64, i64* %39, align 8
  %41 = lshr i64 %40, 3
  %42 = trunc i64 %41 to i32
  %43 = call %"class.v8::internal::compiler::TopLevelLiveRange"* @_ZN2v88internal8compiler29TopTierRegisterAllocationData23GetOrCreateLiveRangeForEi(%"class.v8::internal::compiler::TopTierRegisterAllocationData"* %35, i32 %42)
  %44 = load i64, i64* %39, align 8
  %45 = and i64 %44, 34359738368
  %46 = icmp eq i64 %45, 0
  br i1 %46, label %53, label %47

47:                                               ; preds = %34
  %48 = lshr i64 %44, 36
  %49 = trunc i64 %48 to i32
  %50 = and i32 %49, 7
  %51 = add nsw i32 %50, -3
  %52 = icmp ult i32 %51, 2
  br i1 %52, label %53, label %153

53:                                               ; preds = %34, %47
  %54 = call %"class.v8::internal::compiler::InstructionOperand"* @_ZN2v88internal8compiler17ConstraintBuilder13AllocateFixedEPNS1_18UnallocatedOperandEibb(%"class.v8::internal::compiler::ConstraintBuilder"* %0, %"class.v8::internal::compiler::UnallocatedOperand"* %38, i32 -1, i1 zeroext false, i1 zeroext false)
  %55 = load i64, i64* %39, align 8
  %56 = and i64 %55, 7
  %57 = icmp ugt i64 %56, 4
  %58 = and i64 %55, 24
  %59 = icmp eq i64 %58, 8
  %60 = and i1 %57, %59
  br i1 %60, label %61, label %75

61:                                               ; preds = %53
  %62 = lshr i64 %55, 5
  %63 = trunc i64 %62 to i8
  %64 = icmp ult i8 %63, 12
  br i1 %64, label %65, label %75

65:                                               ; preds = %61
  %66 = getelementptr inbounds %"class.v8::internal::compiler::TopLevelLiveRange", %"class.v8::internal::compiler::TopLevelLiveRange"* %43, i64 0, i32 0, i32 1
  %67 = load i32, i32* %66, align 4
  %68 = and i32 %67, -97
  %69 = or i32 %68, 32
  store i32 %69, i32* %66, align 4
  %70 = getelementptr inbounds %"class.v8::internal::compiler::TopLevelLiveRange", %"class.v8::internal::compiler::TopLevelLiveRange"* %43, i64 0, i32 3, i32 0
  store %"class.v8::internal::compiler::InstructionOperand"* %37, %"class.v8::internal::compiler::InstructionOperand"** %70, align 8
  %71 = getelementptr inbounds %"class.v8::internal::compiler::TopLevelLiveRange", %"class.v8::internal::compiler::TopLevelLiveRange"* %43, i64 0, i32 7
  %72 = load i32, i32* %71, align 4
  %73 = icmp slt i32 %72, %6
  %74 = select i1 %73, i32 %72, i32 %6
  store i32 %74, i32* %71, align 4
  br label %75

75:                                               ; preds = %53, %65, %61
  %76 = phi i1 [ true, %65 ], [ false, %61 ], [ false, %53 ]
  %77 = load %"class.v8::internal::compiler::RpoNumber"*, %"class.v8::internal::compiler::RpoNumber"** %28, align 8
  %78 = load %"class.v8::internal::compiler::RpoNumber"*, %"class.v8::internal::compiler::RpoNumber"** %29, align 8
  %79 = icmp eq %"class.v8::internal::compiler::RpoNumber"* %77, %78
  br i1 %79, label %83, label %80

80:                                               ; preds = %75
  %81 = and i64 %40, 34359738360
  %82 = or i64 %81, 652835028993
  br label %84

83:                                               ; preds = %146, %75
  br i1 %76, label %215, label %153

84:                                               ; preds = %80, %146
  %85 = phi %"class.v8::internal::compiler::RpoNumber"* [ %77, %80 ], [ %151, %146 ]
  %86 = load %"class.v8::internal::compiler::TopTierRegisterAllocationData"*, %"class.v8::internal::compiler::TopTierRegisterAllocationData"** %7, align 8
  %87 = getelementptr inbounds %"class.v8::internal::compiler::TopTierRegisterAllocationData", %"class.v8::internal::compiler::TopTierRegisterAllocationData"* %86, i64 0, i32 3
  %88 = load %"class.v8::internal::compiler::InstructionSequence"*, %"class.v8::internal::compiler::InstructionSequence"** %87, align 8
  %89 = getelementptr inbounds %"class.v8::internal::compiler::RpoNumber", %"class.v8::internal::compiler::RpoNumber"* %85, i64 0, i32 0
  %90 = load i32, i32* %89, align 4
  %91 = getelementptr inbounds %"class.v8::internal::compiler::InstructionSequence", %"class.v8::internal::compiler::InstructionSequence"* %88, i64 0, i32 2
  %92 = bitcast %"class.v8::internal::ZoneVector.1170"** %91 to %"class.std::__1::vector.1171"**
  %93 = load %"class.std::__1::vector.1171"*, %"class.std::__1::vector.1171"** %92, align 8
  %94 = sext i32 %90 to i64
  %95 = getelementptr inbounds %"class.std::__1::vector.1171", %"class.std::__1::vector.1171"* %93, i64 0, i32 0, i32 1
  %96 = bitcast %"class.v8::internal::compiler::InstructionBlock"*** %95 to i64*
  %97 = load i64, i64* %96, align 8
  %98 = bitcast %"class.std::__1::vector.1171"* %93 to i64*
  %99 = load i64, i64* %98, align 8
  %100 = sub i64 %97, %99
  %101 = ashr exact i64 %100, 3
  %102 = icmp ugt i64 %101, %94
  br i1 %102, label %105, label %103

103:                                              ; preds = %84
  %104 = bitcast %"class.std::__1::vector.1171"* %93 to %"class.std::__1::__vector_base_common"*
  call void @_ZNKSt3__120__vector_base_commonILb1EE20__throw_out_of_rangeEv(%"class.std::__1::__vector_base_common"* %104) #17
  unreachable

105:                                              ; preds = %84
  %106 = inttoptr i64 %99 to %"class.v8::internal::compiler::InstructionBlock"**
  %107 = getelementptr inbounds %"class.v8::internal::compiler::InstructionBlock"*, %"class.v8::internal::compiler::InstructionBlock"** %106, i64 %94
  %108 = load %"class.v8::internal::compiler::InstructionBlock"*, %"class.v8::internal::compiler::InstructionBlock"** %107, align 8
  %109 = getelementptr inbounds %"class.v8::internal::compiler::InstructionBlock", %"class.v8::internal::compiler::InstructionBlock"* %108, i64 0, i32 8
  %110 = load i32, i32* %109, align 4
  call void @llvm.lifetime.start.p0i8(i64 8, i8* nonnull %30) #16
  store i64 %82, i64* %31, align 8
  %111 = sext i32 %110 to i64
  %112 = getelementptr inbounds %"class.v8::internal::compiler::InstructionSequence", %"class.v8::internal::compiler::InstructionSequence"* %88, i64 0, i32 8, i32 0, i32 0, i32 1
  %113 = load i64, i64* %112, align 8
  %114 = add i64 %113, %111
  %115 = getelementptr inbounds %"class.v8::internal::compiler::InstructionSequence", %"class.v8::internal::compiler::InstructionSequence"* %88, i64 0, i32 8, i32 0, i32 0, i32 0, i32 1
  %116 = load %"class.v8::internal::compiler::Instruction"***, %"class.v8::internal::compiler::Instruction"**** %115, align 8
  %117 = lshr i64 %114, 9
  %118 = getelementptr inbounds %"class.v8::internal::compiler::Instruction"**, %"class.v8::internal::compiler::Instruction"*** %116, i64 %117
  %119 = load %"class.v8::internal::compiler::Instruction"**, %"class.v8::internal::compiler::Instruction"*** %118, align 8
  %120 = and i64 %114, 511
  %121 = getelementptr inbounds %"class.v8::internal::compiler::Instruction"*, %"class.v8::internal::compiler::Instruction"** %119, i64 %120
  %122 = load %"class.v8::internal::compiler::Instruction"*, %"class.v8::internal::compiler::Instruction"** %121, align 8
  %123 = getelementptr inbounds %"class.v8::internal::compiler::InstructionSequence", %"class.v8::internal::compiler::InstructionSequence"* %88, i64 0, i32 1
  %124 = load %"class.v8::internal::Zone"*, %"class.v8::internal::Zone"** %123, align 8
  %125 = ptrtoint %"class.v8::internal::Zone"* %124 to i64
  %126 = getelementptr inbounds %"class.v8::internal::compiler::Instruction", %"class.v8::internal::compiler::Instruction"* %122, i64 0, i32 2, i64 0
  %127 = load %"class.v8::internal::compiler::ParallelMove"*, %"class.v8::internal::compiler::ParallelMove"** %126, align 8
  %128 = icmp eq %"class.v8::internal::compiler::ParallelMove"* %127, null
  br i1 %128, label %129, label %146

129:                                              ; preds = %105
  %130 = getelementptr inbounds %"class.v8::internal::Zone", %"class.v8::internal::Zone"* %124, i64 0, i32 2
  %131 = load i64, i64* %130, align 8
  %132 = getelementptr inbounds %"class.v8::internal::Zone", %"class.v8::internal::Zone"* %124, i64 0, i32 3
  %133 = load i64, i64* %132, align 8
  %134 = sub i64 %133, %131
  %135 = icmp ult i64 %134, 32
  br i1 %135, label %136, label %138, !prof !2

136:                                              ; preds = %129
  %137 = call i64 @_ZN2v88internal4Zone9NewExpandEm(%"class.v8::internal::Zone"* %124, i64 32) #16
  br label %140

138:                                              ; preds = %129
  %139 = add i64 %131, 32
  store i64 %139, i64* %130, align 8
  br label %140

140:                                              ; preds = %138, %136
  %141 = phi i64 [ %137, %136 ], [ %131, %138 ]
  %142 = inttoptr i64 %141 to i8*
  %143 = inttoptr i64 %141 to %"class.v8::internal::compiler::ParallelMove"*
  %144 = getelementptr inbounds %"class.v8::internal::compiler::ParallelMove", %"class.v8::internal::compiler::ParallelMove"* %143, i64 0, i32 0, i32 0, i32 0, i32 2, i32 1
  %145 = bitcast %"struct.std::__1::__compressed_pair_elem.1208"* %144 to i64*
  call void @llvm.memset.p0i8.i64(i8* align 8 %142, i8 0, i64 24, i1 false) #16
  store i64 %125, i64* %145, align 8
  store %"class.v8::internal::compiler::ParallelMove"* %143, %"class.v8::internal::compiler::ParallelMove"** %126, align 8
  br label %146

146:                                              ; preds = %105, %140
  %147 = phi %"class.v8::internal::compiler::ParallelMove"* [ %143, %140 ], [ %127, %105 ]
  %148 = getelementptr inbounds %"class.v8::internal::compiler::ParallelMove", %"class.v8::internal::compiler::ParallelMove"* %147, i64 0, i32 0, i32 0, i32 0, i32 2, i32 1, i32 0, i32 0
  %149 = load %"class.v8::internal::Zone"*, %"class.v8::internal::Zone"** %148, align 8
  %150 = call %"class.v8::internal::compiler::MoveOperands"* @_ZN2v88internal8compiler12ParallelMove7AddMoveERKNS1_18InstructionOperandES5_PNS0_4ZoneE(%"class.v8::internal::compiler::ParallelMove"* %147, %"class.v8::internal::compiler::InstructionOperand"* dereferenceable(8) %37, %"class.v8::internal::compiler::InstructionOperand"* nonnull dereferenceable(8) %32, %"class.v8::internal::Zone"* %149) #16
  call void @llvm.lifetime.end.p0i8(i64 8, i8* nonnull %30) #16
  %151 = getelementptr inbounds %"class.v8::internal::compiler::RpoNumber", %"class.v8::internal::compiler::RpoNumber"* %85, i64 1
  %152 = icmp eq %"class.v8::internal::compiler::RpoNumber"* %151, %78
  br i1 %152, label %83, label %84

153:                                              ; preds = %47, %83
  %154 = load %"class.v8::internal::compiler::RpoNumber"*, %"class.v8::internal::compiler::RpoNumber"** %28, align 8
  %155 = load %"class.v8::internal::compiler::RpoNumber"*, %"class.v8::internal::compiler::RpoNumber"** %29, align 8
  %156 = icmp eq %"class.v8::internal::compiler::RpoNumber"* %154, %155
  br i1 %156, label %215, label %157

157:                                              ; preds = %153
  %158 = ptrtoint %"class.v8::internal::compiler::InstructionOperand"* %37 to i64
  %159 = getelementptr inbounds %"class.v8::internal::compiler::TopLevelLiveRange", %"class.v8::internal::compiler::TopLevelLiveRange"* %43, i64 0, i32 4, i32 0
  %160 = bitcast %"struct.v8::internal::compiler::TopLevelLiveRange::SpillMoveInsertionList"** %159 to i64*
  %161 = getelementptr inbounds %"class.v8::internal::compiler::TopLevelLiveRange", %"class.v8::internal::compiler::TopLevelLiveRange"* %43, i64 0, i32 7
  br label %162

162:                                              ; preds = %157, %201
  %163 = phi %"class.v8::internal::compiler::RpoNumber"* [ %154, %157 ], [ %213, %201 ]
  %164 = load %"class.v8::internal::compiler::TopTierRegisterAllocationData"*, %"class.v8::internal::compiler::TopTierRegisterAllocationData"** %7, align 8
  %165 = getelementptr inbounds %"class.v8::internal::compiler::TopTierRegisterAllocationData", %"class.v8::internal::compiler::TopTierRegisterAllocationData"* %164, i64 0, i32 3
  %166 = load %"class.v8::internal::compiler::InstructionSequence"*, %"class.v8::internal::compiler::InstructionSequence"** %165, align 8
  %167 = getelementptr inbounds %"class.v8::internal::compiler::RpoNumber", %"class.v8::internal::compiler::RpoNumber"* %163, i64 0, i32 0
  %168 = load i32, i32* %167, align 4
  %169 = getelementptr inbounds %"class.v8::internal::compiler::InstructionSequence", %"class.v8::internal::compiler::InstructionSequence"* %166, i64 0, i32 2
  %170 = bitcast %"class.v8::internal::ZoneVector.1170"** %169 to %"class.std::__1::vector.1171"**
  %171 = load %"class.std::__1::vector.1171"*, %"class.std::__1::vector.1171"** %170, align 8
  %172 = sext i32 %168 to i64
  %173 = getelementptr inbounds %"class.std::__1::vector.1171", %"class.std::__1::vector.1171"* %171, i64 0, i32 0, i32 1
  %174 = bitcast %"class.v8::internal::compiler::InstructionBlock"*** %173 to i64*
  %175 = load i64, i64* %174, align 8
  %176 = bitcast %"class.std::__1::vector.1171"* %171 to i64*
  %177 = load i64, i64* %176, align 8
  %178 = sub i64 %175, %177
  %179 = ashr exact i64 %178, 3
  %180 = icmp ugt i64 %179, %172
  br i1 %180, label %183, label %181

181:                                              ; preds = %162
  %182 = bitcast %"class.std::__1::vector.1171"* %171 to %"class.std::__1::__vector_base_common"*
  call void @_ZNKSt3__120__vector_base_commonILb1EE20__throw_out_of_rangeEv(%"class.std::__1::__vector_base_common"* %182) #17
  unreachable

183:                                              ; preds = %162
  %184 = inttoptr i64 %177 to %"class.v8::internal::compiler::InstructionBlock"**
  %185 = getelementptr inbounds %"class.v8::internal::compiler::InstructionBlock"*, %"class.v8::internal::compiler::InstructionBlock"** %184, i64 %172
  %186 = load %"class.v8::internal::compiler::InstructionBlock"*, %"class.v8::internal::compiler::InstructionBlock"** %185, align 8
  %187 = getelementptr inbounds %"class.v8::internal::compiler::InstructionBlock", %"class.v8::internal::compiler::InstructionBlock"* %186, i64 0, i32 8
  %188 = load i32, i32* %187, align 4
  %189 = getelementptr inbounds %"class.v8::internal::compiler::TopTierRegisterAllocationData", %"class.v8::internal::compiler::TopTierRegisterAllocationData"* %164, i64 0, i32 1
  %190 = load %"class.v8::internal::Zone"*, %"class.v8::internal::Zone"** %189, align 8
  %191 = getelementptr inbounds %"class.v8::internal::Zone", %"class.v8::internal::Zone"* %190, i64 0, i32 2
  %192 = load i64, i64* %191, align 8
  %193 = getelementptr inbounds %"class.v8::internal::Zone", %"class.v8::internal::Zone"* %190, i64 0, i32 3
  %194 = load i64, i64* %193, align 8
  %195 = sub i64 %194, %192
  %196 = icmp ult i64 %195, 24
  br i1 %196, label %197, label %199, !prof !2

197:                                              ; preds = %183
  %198 = call i64 @_ZN2v88internal4Zone9NewExpandEm(%"class.v8::internal::Zone"* %190, i64 24) #16
  br label %201

199:                                              ; preds = %183
  %200 = add i64 %192, 24
  store i64 %200, i64* %191, align 8
  br label %201

201:                                              ; preds = %197, %199
  %202 = phi i64 [ %198, %197 ], [ %192, %199 ]
  %203 = inttoptr i64 %202 to %"struct.v8::internal::compiler::TopLevelLiveRange::SpillMoveInsertionList"*
  %204 = load i64, i64* %160, align 8
  %205 = getelementptr inbounds %"struct.v8::internal::compiler::TopLevelLiveRange::SpillMoveInsertionList", %"struct.v8::internal::compiler::TopLevelLiveRange::SpillMoveInsertionList"* %203, i64 0, i32 0
  store i32 %188, i32* %205, align 8
  %206 = getelementptr inbounds %"struct.v8::internal::compiler::TopLevelLiveRange::SpillMoveInsertionList", %"struct.v8::internal::compiler::TopLevelLiveRange::SpillMoveInsertionList"* %203, i64 0, i32 1
  %207 = bitcast %"class.v8::internal::compiler::InstructionOperand"** %206 to i64*
  store i64 %158, i64* %207, align 8
  %208 = getelementptr inbounds %"struct.v8::internal::compiler::TopLevelLiveRange::SpillMoveInsertionList", %"struct.v8::internal::compiler::TopLevelLiveRange::SpillMoveInsertionList"* %203, i64 0, i32 2
  %209 = bitcast %"struct.v8::internal::compiler::TopLevelLiveRange::SpillMoveInsertionList"** %208 to i64*
  store i64 %204, i64* %209, align 8
  store %"struct.v8::internal::compiler::TopLevelLiveRange::SpillMoveInsertionList"* %203, %"struct.v8::internal::compiler::TopLevelLiveRange::SpillMoveInsertionList"** %159, align 8
  %210 = load i32, i32* %161, align 4
  %211 = icmp slt i32 %210, %188
  %212 = select i1 %211, i32 %210, i32 %188
  store i32 %212, i32* %161, align 4
  %213 = getelementptr inbounds %"class.v8::internal::compiler::RpoNumber", %"class.v8::internal::compiler::RpoNumber"* %163, i64 1
  %214 = icmp eq %"class.v8::internal::compiler::RpoNumber"* %213, %155
  br i1 %214, label %215, label %162

215:                                              ; preds = %201, %153, %83
  %216 = add nuw nsw i64 %36, 1
  %217 = load i32, i32* %23, align 4
  %218 = and i32 %217, 255
  %219 = zext i32 %218 to i64
  %220 = icmp ult i64 %216, %219
  br i1 %220, label %221, label %33

221:                                              ; preds = %215
  %222 = load %"class.v8::internal::compiler::TopTierRegisterAllocationData"*, %"class.v8::internal::compiler::TopTierRegisterAllocationData"** %7, align 8
  br label %34
}

; Function Attrs: nounwind ssp uwtable
define hidden void @_ZN2v88internal8compiler17ConstraintBuilder11ResolvePhisEv(%"class.v8::internal::compiler::ConstraintBuilder"* nocapture readonly) local_unnamed_addr #0 align 2 {
  %2 = getelementptr inbounds %"class.v8::internal::compiler::ConstraintBuilder", %"class.v8::internal::compiler::ConstraintBuilder"* %0, i64 0, i32 0
  %3 = load %"class.v8::internal::compiler::TopTierRegisterAllocationData"*, %"class.v8::internal::compiler::TopTierRegisterAllocationData"** %2, align 8
  %4 = getelementptr inbounds %"class.v8::internal::compiler::TopTierRegisterAllocationData", %"class.v8::internal::compiler::TopTierRegisterAllocationData"* %3, i64 0, i32 3
  %5 = load %"class.v8::internal::compiler::InstructionSequence"*, %"class.v8::internal::compiler::InstructionSequence"** %4, align 8
  %6 = getelementptr inbounds %"class.v8::internal::compiler::InstructionSequence", %"class.v8::internal::compiler::InstructionSequence"* %5, i64 0, i32 2
  %7 = load %"class.v8::internal::ZoneVector.1170"*, %"class.v8::internal::ZoneVector.1170"** %6, align 8
  %8 = getelementptr inbounds %"class.v8::internal::ZoneVector.1170", %"class.v8::internal::ZoneVector.1170"* %7, i64 0, i32 0, i32 0, i32 1
  %9 = load %"class.v8::internal::compiler::InstructionBlock"**, %"class.v8::internal::compiler::InstructionBlock"*** %8, align 8, !noalias !94
  %10 = getelementptr inbounds %"class.v8::internal::ZoneVector.1170", %"class.v8::internal::ZoneVector.1170"* %7, i64 0, i32 0, i32 0, i32 0
  %11 = load %"class.v8::internal::compiler::InstructionBlock"**, %"class.v8::internal::compiler::InstructionBlock"*** %10, align 8, !noalias !94
  %12 = icmp eq %"class.v8::internal::compiler::InstructionBlock"** %9, %11
  br i1 %12, label %19, label %13

13:                                               ; preds = %1
  %14 = getelementptr inbounds %"class.v8::internal::compiler::InstructionBlock"*, %"class.v8::internal::compiler::InstructionBlock"** %9, i64 -1
  %15 = load %"class.v8::internal::compiler::InstructionBlock"*, %"class.v8::internal::compiler::InstructionBlock"** %14, align 8
  %16 = getelementptr inbounds %"class.v8::internal::compiler::TopTierRegisterAllocationData", %"class.v8::internal::compiler::TopTierRegisterAllocationData"* %3, i64 0, i32 24
  %17 = load %"class.v8::internal::TickCounter"*, %"class.v8::internal::TickCounter"** %16, align 8
  tail call void @_ZN2v88internal11TickCounter26TickAndMaybeEnterSafepointEv(%"class.v8::internal::TickCounter"* %17) #16
  tail call void @_ZN2v88internal8compiler17ConstraintBuilder11ResolvePhisEPKNS1_16InstructionBlockE(%"class.v8::internal::compiler::ConstraintBuilder"* %0, %"class.v8::internal::compiler::InstructionBlock"* %15)
  %18 = icmp eq %"class.v8::internal::compiler::InstructionBlock"** %14, %11
  br i1 %18, label %19, label %20

19:                                               ; preds = %20, %13, %1
  ret void

20:                                               ; preds = %13, %20
  %21 = phi %"class.v8::internal::compiler::InstructionBlock"** [ %23, %20 ], [ %14, %13 ]
  %22 = load %"class.v8::internal::compiler::TopTierRegisterAllocationData"*, %"class.v8::internal::compiler::TopTierRegisterAllocationData"** %2, align 8
  %23 = getelementptr inbounds %"class.v8::internal::compiler::InstructionBlock"*, %"class.v8::internal::compiler::InstructionBlock"** %21, i64 -1
  %24 = load %"class.v8::internal::compiler::InstructionBlock"*, %"class.v8::internal::compiler::InstructionBlock"** %23, align 8
  %25 = getelementptr inbounds %"class.v8::internal::compiler::TopTierRegisterAllocationData", %"class.v8::internal::compiler::TopTierRegisterAllocationData"* %22, i64 0, i32 24
  %26 = load %"class.v8::internal::TickCounter"*, %"class.v8::internal::TickCounter"** %25, align 8
  tail call void @_ZN2v88internal11TickCounter26TickAndMaybeEnterSafepointEv(%"class.v8::internal::TickCounter"* %26) #16
  tail call void @_ZN2v88internal8compiler17ConstraintBuilder11ResolvePhisEPKNS1_16InstructionBlockE(%"class.v8::internal::compiler::ConstraintBuilder"* %0, %"class.v8::internal::compiler::InstructionBlock"* %24)
  %27 = icmp eq %"class.v8::internal::compiler::InstructionBlock"** %23, %11
  br i1 %27, label %19, label %20
}

; Function Attrs: nounwind ssp uwtable
define hidden void @_ZN2v88internal8compiler17ConstraintBuilder11ResolvePhisEPKNS1_16InstructionBlockE(%"class.v8::internal::compiler::ConstraintBuilder"* nocapture readonly, %"class.v8::internal::compiler::InstructionBlock"*) local_unnamed_addr #0 align 2 {
  %3 = alloca %"class.v8::internal::compiler::UnallocatedOperand", align 8
  %4 = getelementptr inbounds %"class.v8::internal::compiler::InstructionBlock", %"class.v8::internal::compiler::InstructionBlock"* %1, i64 0, i32 2, i32 0, i32 0, i32 0
  %5 = load %"class.v8::internal::compiler::PhiInstruction"**, %"class.v8::internal::compiler::PhiInstruction"*** %4, align 8
  %6 = getelementptr inbounds %"class.v8::internal::compiler::InstructionBlock", %"class.v8::internal::compiler::InstructionBlock"* %1, i64 0, i32 2, i32 0, i32 0, i32 1
  %7 = load %"class.v8::internal::compiler::PhiInstruction"**, %"class.v8::internal::compiler::PhiInstruction"*** %6, align 8
  %8 = icmp eq %"class.v8::internal::compiler::PhiInstruction"** %5, %7
  br i1 %8, label %17, label %9

9:                                                ; preds = %2
  %10 = getelementptr inbounds %"class.v8::internal::compiler::ConstraintBuilder", %"class.v8::internal::compiler::ConstraintBuilder"* %0, i64 0, i32 0
  %11 = getelementptr inbounds %"class.v8::internal::compiler::InstructionBlock", %"class.v8::internal::compiler::InstructionBlock"* %1, i64 0, i32 1, i32 0, i32 0, i32 0
  %12 = bitcast %"class.v8::internal::compiler::UnallocatedOperand"* %3 to i8*
  %13 = getelementptr inbounds %"class.v8::internal::compiler::UnallocatedOperand", %"class.v8::internal::compiler::UnallocatedOperand"* %3, i64 0, i32 0, i32 0
  %14 = getelementptr inbounds %"class.v8::internal::compiler::UnallocatedOperand", %"class.v8::internal::compiler::UnallocatedOperand"* %3, i64 0, i32 0
  %15 = getelementptr inbounds %"class.v8::internal::compiler::InstructionBlock", %"class.v8::internal::compiler::InstructionBlock"* %1, i64 0, i32 8
  %16 = getelementptr inbounds %"class.v8::internal::compiler::InstructionBlock", %"class.v8::internal::compiler::InstructionBlock"* %1, i64 0, i32 6, i32 0
  br label %18

17:                                               ; preds = %62, %2
  ret void

18:                                               ; preds = %9, %62
  %19 = phi %"class.v8::internal::compiler::PhiInstruction"** [ %5, %9 ], [ %84, %62 ]
  %20 = load %"class.v8::internal::compiler::PhiInstruction"*, %"class.v8::internal::compiler::PhiInstruction"** %19, align 8
  %21 = getelementptr inbounds %"class.v8::internal::compiler::PhiInstruction", %"class.v8::internal::compiler::PhiInstruction"* %20, i64 0, i32 0
  %22 = load i32, i32* %21, align 8
  %23 = load %"class.v8::internal::compiler::TopTierRegisterAllocationData"*, %"class.v8::internal::compiler::TopTierRegisterAllocationData"** %10, align 8
  %24 = call %"class.v8::internal::compiler::TopTierRegisterAllocationData::PhiMapValue"* @_ZN2v88internal8compiler29TopTierRegisterAllocationData16InitializePhiMapEPKNS1_16InstructionBlockEPNS1_14PhiInstructionE(%"class.v8::internal::compiler::TopTierRegisterAllocationData"* %23, %"class.v8::internal::compiler::InstructionBlock"* %1, %"class.v8::internal::compiler::PhiInstruction"* %20)
  %25 = getelementptr inbounds %"class.v8::internal::compiler::PhiInstruction", %"class.v8::internal::compiler::PhiInstruction"* %20, i64 0, i32 1
  %26 = getelementptr inbounds %"class.v8::internal::compiler::PhiInstruction", %"class.v8::internal::compiler::PhiInstruction"* %20, i64 0, i32 2, i32 0
  %27 = getelementptr inbounds %"class.v8::internal::compiler::PhiInstruction", %"class.v8::internal::compiler::PhiInstruction"* %20, i64 0, i32 2, i32 0, i32 0, i32 1
  %28 = bitcast i32** %27 to i64*
  %29 = load i64, i64* %28, align 8
  %30 = bitcast %"class.std::__1::vector.48"* %26 to i64*
  %31 = load i64, i64* %30, align 8
  %32 = icmp eq i64 %29, %31
  %33 = load %"class.v8::internal::compiler::TopTierRegisterAllocationData"*, %"class.v8::internal::compiler::TopTierRegisterAllocationData"** %10, align 8
  br i1 %32, label %43, label %34

34:                                               ; preds = %18
  %35 = getelementptr inbounds %"class.v8::internal::compiler::TopTierRegisterAllocationData::PhiMapValue", %"class.v8::internal::compiler::TopTierRegisterAllocationData::PhiMapValue"* %24, i64 0, i32 2, i32 0
  %36 = getelementptr inbounds %"class.v8::internal::compiler::TopTierRegisterAllocationData::PhiMapValue", %"class.v8::internal::compiler::TopTierRegisterAllocationData::PhiMapValue"* %24, i64 0, i32 2, i32 0, i32 0, i32 1
  %37 = getelementptr inbounds %"class.v8::internal::compiler::TopTierRegisterAllocationData::PhiMapValue", %"class.v8::internal::compiler::TopTierRegisterAllocationData::PhiMapValue"* %24, i64 0, i32 2, i32 0, i32 0, i32 2, i32 0, i32 0
  %38 = bitcast %"class.v8::internal::compiler::InstructionOperand"*** %36 to i64*
  %39 = bitcast %"class.std::__1::vector.1332"* %35 to i64*
  %40 = bitcast %"class.v8::internal::compiler::InstructionOperand"*** %37 to i64*
  %41 = getelementptr inbounds %"class.v8::internal::compiler::TopTierRegisterAllocationData::PhiMapValue", %"class.v8::internal::compiler::TopTierRegisterAllocationData::PhiMapValue"* %24, i64 0, i32 2, i32 0, i32 0, i32 2, i32 1, i32 0, i32 0
  %42 = getelementptr inbounds %"class.std::__1::vector.1332", %"class.std::__1::vector.1332"* %35, i64 0, i32 0, i32 0
  br label %86

43:                                               ; preds = %393, %18
  %44 = phi %"class.v8::internal::compiler::TopTierRegisterAllocationData"* [ %33, %18 ], [ %400, %393 ]
  %45 = call %"class.v8::internal::compiler::TopLevelLiveRange"* @_ZN2v88internal8compiler29TopTierRegisterAllocationData23GetOrCreateLiveRangeForEi(%"class.v8::internal::compiler::TopTierRegisterAllocationData"* %44, i32 %22)
  %46 = load i32, i32* %15, align 4
  %47 = load %"class.v8::internal::compiler::TopTierRegisterAllocationData"*, %"class.v8::internal::compiler::TopTierRegisterAllocationData"** %10, align 8
  %48 = getelementptr inbounds %"class.v8::internal::compiler::TopTierRegisterAllocationData", %"class.v8::internal::compiler::TopTierRegisterAllocationData"* %47, i64 0, i32 1
  %49 = load %"class.v8::internal::Zone"*, %"class.v8::internal::Zone"** %48, align 8
  %50 = ptrtoint %"class.v8::internal::compiler::InstructionOperand"* %25 to i64
  %51 = getelementptr inbounds %"class.v8::internal::compiler::TopLevelLiveRange", %"class.v8::internal::compiler::TopLevelLiveRange"* %45, i64 0, i32 4, i32 0
  %52 = getelementptr inbounds %"class.v8::internal::Zone", %"class.v8::internal::Zone"* %49, i64 0, i32 2
  %53 = load i64, i64* %52, align 8
  %54 = getelementptr inbounds %"class.v8::internal::Zone", %"class.v8::internal::Zone"* %49, i64 0, i32 3
  %55 = load i64, i64* %54, align 8
  %56 = sub i64 %55, %53
  %57 = icmp ult i64 %56, 24
  br i1 %57, label %58, label %60, !prof !2

58:                                               ; preds = %43
  %59 = call i64 @_ZN2v88internal4Zone9NewExpandEm(%"class.v8::internal::Zone"* %49, i64 24) #16
  br label %62

60:                                               ; preds = %43
  %61 = add i64 %53, 24
  store i64 %61, i64* %52, align 8
  br label %62

62:                                               ; preds = %58, %60
  %63 = phi i64 [ %59, %58 ], [ %53, %60 ]
  %64 = inttoptr i64 %63 to %"struct.v8::internal::compiler::TopLevelLiveRange::SpillMoveInsertionList"*
  %65 = bitcast %"struct.v8::internal::compiler::TopLevelLiveRange::SpillMoveInsertionList"** %51 to i64*
  %66 = load i64, i64* %65, align 8
  %67 = getelementptr inbounds %"struct.v8::internal::compiler::TopLevelLiveRange::SpillMoveInsertionList", %"struct.v8::internal::compiler::TopLevelLiveRange::SpillMoveInsertionList"* %64, i64 0, i32 0
  store i32 %46, i32* %67, align 8
  %68 = getelementptr inbounds %"struct.v8::internal::compiler::TopLevelLiveRange::SpillMoveInsertionList", %"struct.v8::internal::compiler::TopLevelLiveRange::SpillMoveInsertionList"* %64, i64 0, i32 1
  %69 = bitcast %"class.v8::internal::compiler::InstructionOperand"** %68 to i64*
  store i64 %50, i64* %69, align 8
  %70 = getelementptr inbounds %"struct.v8::internal::compiler::TopLevelLiveRange::SpillMoveInsertionList", %"struct.v8::internal::compiler::TopLevelLiveRange::SpillMoveInsertionList"* %64, i64 0, i32 2
  %71 = bitcast %"struct.v8::internal::compiler::TopLevelLiveRange::SpillMoveInsertionList"** %70 to i64*
  store i64 %66, i64* %71, align 8
  store %"struct.v8::internal::compiler::TopLevelLiveRange::SpillMoveInsertionList"* %64, %"struct.v8::internal::compiler::TopLevelLiveRange::SpillMoveInsertionList"** %51, align 8
  %72 = getelementptr inbounds %"class.v8::internal::compiler::TopLevelLiveRange", %"class.v8::internal::compiler::TopLevelLiveRange"* %45, i64 0, i32 7
  %73 = load i32, i32* %72, align 4
  %74 = icmp slt i32 %73, %46
  %75 = select i1 %74, i32 %73, i32 %46
  store i32 %75, i32* %72, align 4
  %76 = getelementptr inbounds %"class.v8::internal::compiler::TopLevelLiveRange", %"class.v8::internal::compiler::TopLevelLiveRange"* %45, i64 0, i32 0, i32 1
  %77 = load i32, i32* %76, align 4
  %78 = or i32 %77, 8
  store i32 %78, i32* %76, align 4
  %79 = load i32, i32* %16, align 4
  %80 = and i32 %78, -17
  %81 = lshr i32 %79, 31
  %82 = shl nuw nsw i32 %81, 4
  %83 = or i32 %82, %80
  store i32 %83, i32* %76, align 4
  %84 = getelementptr inbounds %"class.v8::internal::compiler::PhiInstruction"*, %"class.v8::internal::compiler::PhiInstruction"** %19, i64 1
  %85 = icmp eq %"class.v8::internal::compiler::PhiInstruction"** %84, %7
  br i1 %85, label %17, label %18

86:                                               ; preds = %34, %393
  %87 = phi i64 [ %31, %34 ], [ %396, %393 ]
  %88 = phi %"class.v8::internal::compiler::TopTierRegisterAllocationData"* [ %33, %34 ], [ %400, %393 ]
  %89 = phi i64 [ 0, %34 ], [ %394, %393 ]
  %90 = getelementptr inbounds %"class.v8::internal::compiler::TopTierRegisterAllocationData", %"class.v8::internal::compiler::TopTierRegisterAllocationData"* %88, i64 0, i32 3
  %91 = load %"class.v8::internal::compiler::InstructionSequence"*, %"class.v8::internal::compiler::InstructionSequence"** %90, align 8
  %92 = load %"class.v8::internal::compiler::RpoNumber"*, %"class.v8::internal::compiler::RpoNumber"** %11, align 8
  %93 = getelementptr inbounds %"class.v8::internal::compiler::RpoNumber", %"class.v8::internal::compiler::RpoNumber"* %92, i64 %89, i32 0
  %94 = load i32, i32* %93, align 4
  %95 = getelementptr inbounds %"class.v8::internal::compiler::InstructionSequence", %"class.v8::internal::compiler::InstructionSequence"* %91, i64 0, i32 2
  %96 = bitcast %"class.v8::internal::ZoneVector.1170"** %95 to %"class.std::__1::vector.1171"**
  %97 = load %"class.std::__1::vector.1171"*, %"class.std::__1::vector.1171"** %96, align 8
  %98 = sext i32 %94 to i64
  %99 = getelementptr inbounds %"class.std::__1::vector.1171", %"class.std::__1::vector.1171"* %97, i64 0, i32 0, i32 1
  %100 = bitcast %"class.v8::internal::compiler::InstructionBlock"*** %99 to i64*
  %101 = load i64, i64* %100, align 8
  %102 = bitcast %"class.std::__1::vector.1171"* %97 to i64*
  %103 = load i64, i64* %102, align 8
  %104 = sub i64 %101, %103
  %105 = ashr exact i64 %104, 3
  %106 = icmp ugt i64 %105, %98
  br i1 %106, label %109, label %107

107:                                              ; preds = %86
  %108 = bitcast %"class.std::__1::vector.1171"* %97 to %"class.std::__1::__vector_base_common"*
  call void @_ZNKSt3__120__vector_base_commonILb1EE20__throw_out_of_rangeEv(%"class.std::__1::__vector_base_common"* %108) #17
  unreachable

109:                                              ; preds = %86
  %110 = inttoptr i64 %87 to i32*
  %111 = inttoptr i64 %103 to %"class.v8::internal::compiler::InstructionBlock"**
  %112 = getelementptr inbounds %"class.v8::internal::compiler::InstructionBlock"*, %"class.v8::internal::compiler::InstructionBlock"** %111, i64 %98
  %113 = load %"class.v8::internal::compiler::InstructionBlock"*, %"class.v8::internal::compiler::InstructionBlock"** %112, align 8
  call void @llvm.lifetime.start.p0i8(i64 8, i8* nonnull %12) #16
  %114 = getelementptr inbounds i32, i32* %110, i64 %89
  %115 = load i32, i32* %114, align 4
  %116 = zext i32 %115 to i64
  %117 = shl nuw nsw i64 %116, 3
  %118 = or i64 %117, 652835028993
  store i64 %118, i64* %13, align 8
  %119 = getelementptr inbounds %"class.v8::internal::compiler::InstructionBlock", %"class.v8::internal::compiler::InstructionBlock"* %113, i64 0, i32 9
  %120 = load i32, i32* %119, align 8
  %121 = add nsw i32 %120, -1
  %122 = sext i32 %121 to i64
  %123 = getelementptr inbounds %"class.v8::internal::compiler::InstructionSequence", %"class.v8::internal::compiler::InstructionSequence"* %91, i64 0, i32 8, i32 0, i32 0, i32 1
  %124 = load i64, i64* %123, align 8
  %125 = add i64 %124, %122
  %126 = getelementptr inbounds %"class.v8::internal::compiler::InstructionSequence", %"class.v8::internal::compiler::InstructionSequence"* %91, i64 0, i32 8, i32 0, i32 0, i32 0, i32 1
  %127 = load %"class.v8::internal::compiler::Instruction"***, %"class.v8::internal::compiler::Instruction"**** %126, align 8
  %128 = lshr i64 %125, 9
  %129 = getelementptr inbounds %"class.v8::internal::compiler::Instruction"**, %"class.v8::internal::compiler::Instruction"*** %127, i64 %128
  %130 = load %"class.v8::internal::compiler::Instruction"**, %"class.v8::internal::compiler::Instruction"*** %129, align 8
  %131 = and i64 %125, 511
  %132 = getelementptr inbounds %"class.v8::internal::compiler::Instruction"*, %"class.v8::internal::compiler::Instruction"** %130, i64 %131
  %133 = load %"class.v8::internal::compiler::Instruction"*, %"class.v8::internal::compiler::Instruction"** %132, align 8
  %134 = getelementptr inbounds %"class.v8::internal::compiler::InstructionSequence", %"class.v8::internal::compiler::InstructionSequence"* %91, i64 0, i32 1
  %135 = load %"class.v8::internal::Zone"*, %"class.v8::internal::Zone"** %134, align 8
  %136 = ptrtoint %"class.v8::internal::Zone"* %135 to i64
  %137 = getelementptr inbounds %"class.v8::internal::compiler::Instruction", %"class.v8::internal::compiler::Instruction"* %133, i64 0, i32 2, i64 1
  %138 = load %"class.v8::internal::compiler::ParallelMove"*, %"class.v8::internal::compiler::ParallelMove"** %137, align 8
  %139 = icmp eq %"class.v8::internal::compiler::ParallelMove"* %138, null
  br i1 %139, label %140, label %157

140:                                              ; preds = %109
  %141 = getelementptr inbounds %"class.v8::internal::Zone", %"class.v8::internal::Zone"* %135, i64 0, i32 2
  %142 = load i64, i64* %141, align 8
  %143 = getelementptr inbounds %"class.v8::internal::Zone", %"class.v8::internal::Zone"* %135, i64 0, i32 3
  %144 = load i64, i64* %143, align 8
  %145 = sub i64 %144, %142
  %146 = icmp ult i64 %145, 32
  br i1 %146, label %147, label %149, !prof !2

147:                                              ; preds = %140
  %148 = call i64 @_ZN2v88internal4Zone9NewExpandEm(%"class.v8::internal::Zone"* %135, i64 32) #16
  br label %151

149:                                              ; preds = %140
  %150 = add i64 %142, 32
  store i64 %150, i64* %141, align 8
  br label %151

151:                                              ; preds = %149, %147
  %152 = phi i64 [ %148, %147 ], [ %142, %149 ]
  %153 = inttoptr i64 %152 to i8*
  %154 = inttoptr i64 %152 to %"class.v8::internal::compiler::ParallelMove"*
  %155 = getelementptr inbounds %"class.v8::internal::compiler::ParallelMove", %"class.v8::internal::compiler::ParallelMove"* %154, i64 0, i32 0, i32 0, i32 0, i32 2, i32 1
  %156 = bitcast %"struct.std::__1::__compressed_pair_elem.1208"* %155 to i64*
  call void @llvm.memset.p0i8.i64(i8* align 8 %153, i8 0, i64 24, i1 false) #16
  store i64 %136, i64* %156, align 8
  store %"class.v8::internal::compiler::ParallelMove"* %154, %"class.v8::internal::compiler::ParallelMove"** %137, align 8
  br label %157

157:                                              ; preds = %109, %151
  %158 = phi %"class.v8::internal::compiler::ParallelMove"* [ %154, %151 ], [ %138, %109 ]
  %159 = getelementptr inbounds %"class.v8::internal::compiler::ParallelMove", %"class.v8::internal::compiler::ParallelMove"* %158, i64 0, i32 0, i32 0, i32 0, i32 2, i32 1, i32 0, i32 0
  %160 = load %"class.v8::internal::Zone"*, %"class.v8::internal::Zone"** %159, align 8
  %161 = call %"class.v8::internal::compiler::MoveOperands"* @_ZN2v88internal8compiler12ParallelMove7AddMoveERKNS1_18InstructionOperandES5_PNS0_4ZoneE(%"class.v8::internal::compiler::ParallelMove"* %158, %"class.v8::internal::compiler::InstructionOperand"* nonnull dereferenceable(8) %14, %"class.v8::internal::compiler::InstructionOperand"* dereferenceable(8) %25, %"class.v8::internal::Zone"* %160) #16
  %162 = getelementptr inbounds %"class.v8::internal::compiler::MoveOperands", %"class.v8::internal::compiler::MoveOperands"* %161, i64 0, i32 1
  %163 = ptrtoint %"class.v8::internal::compiler::InstructionOperand"* %162 to i64
  %164 = load %"class.v8::internal::compiler::InstructionOperand"**, %"class.v8::internal::compiler::InstructionOperand"*** %36, align 8
  %165 = load %"class.v8::internal::compiler::InstructionOperand"**, %"class.v8::internal::compiler::InstructionOperand"*** %37, align 8
  %166 = icmp eq %"class.v8::internal::compiler::InstructionOperand"** %164, %165
  %167 = ptrtoint %"class.v8::internal::compiler::InstructionOperand"** %165 to i64
  br i1 %166, label %172, label %168

168:                                              ; preds = %157
  %169 = bitcast %"class.v8::internal::compiler::InstructionOperand"** %164 to i64*
  store i64 %163, i64* %169, align 8
  %170 = getelementptr inbounds %"class.v8::internal::compiler::InstructionOperand"*, %"class.v8::internal::compiler::InstructionOperand"** %164, i64 1
  %171 = ptrtoint %"class.v8::internal::compiler::InstructionOperand"** %170 to i64
  store i64 %171, i64* %38, align 8
  br label %393

172:                                              ; preds = %157
  %173 = ptrtoint %"class.v8::internal::compiler::InstructionOperand"** %164 to i64
  %174 = load i64, i64* %39, align 8
  %175 = sub i64 %173, %174
  %176 = ashr exact i64 %175, 3
  %177 = add nsw i64 %176, 1
  %178 = icmp ugt i64 %177, 268435455
  br i1 %178, label %179, label %181

179:                                              ; preds = %172
  %180 = bitcast %"class.std::__1::vector.1332"* %35 to %"class.std::__1::__vector_base_common"*
  call void @_ZNKSt3__120__vector_base_commonILb1EE20__throw_length_errorEv(%"class.std::__1::__vector_base_common"* %180) #17
  unreachable

181:                                              ; preds = %172
  %182 = sub i64 %167, %174
  %183 = ashr exact i64 %182, 3
  %184 = icmp ult i64 %183, 134217727
  br i1 %184, label %185, label %190

185:                                              ; preds = %181
  %186 = ashr exact i64 %182, 2
  %187 = icmp ult i64 %186, %177
  %188 = select i1 %187, i64 %177, i64 %186
  %189 = icmp eq i64 %188, 0
  br i1 %189, label %207, label %190

190:                                              ; preds = %185, %181
  %191 = phi i64 [ %188, %185 ], [ 268435455, %181 ]
  %192 = load %"class.v8::internal::Zone"*, %"class.v8::internal::Zone"** %41, align 8
  %193 = shl i64 %191, 3
  %194 = getelementptr inbounds %"class.v8::internal::Zone", %"class.v8::internal::Zone"* %192, i64 0, i32 2
  %195 = load i64, i64* %194, align 8
  %196 = getelementptr inbounds %"class.v8::internal::Zone", %"class.v8::internal::Zone"* %192, i64 0, i32 3
  %197 = load i64, i64* %196, align 8
  %198 = sub i64 %197, %195
  %199 = icmp ugt i64 %193, %198
  br i1 %199, label %200, label %202, !prof !2

200:                                              ; preds = %190
  %201 = call i64 @_ZN2v88internal4Zone9NewExpandEm(%"class.v8::internal::Zone"* %192, i64 %193) #16
  br label %204

202:                                              ; preds = %190
  %203 = add i64 %195, %193
  store i64 %203, i64* %194, align 8
  br label %204

204:                                              ; preds = %202, %200
  %205 = phi i64 [ %201, %200 ], [ %195, %202 ]
  %206 = inttoptr i64 %205 to %"class.v8::internal::compiler::InstructionOperand"**
  br label %207

207:                                              ; preds = %204, %185
  %208 = phi i64 [ %191, %204 ], [ 0, %185 ]
  %209 = phi %"class.v8::internal::compiler::InstructionOperand"** [ %206, %204 ], [ null, %185 ]
  %210 = getelementptr inbounds %"class.v8::internal::compiler::InstructionOperand"*, %"class.v8::internal::compiler::InstructionOperand"** %209, i64 %176
  %211 = getelementptr inbounds %"class.v8::internal::compiler::InstructionOperand"*, %"class.v8::internal::compiler::InstructionOperand"** %209, i64 %208
  %212 = ptrtoint %"class.v8::internal::compiler::InstructionOperand"** %211 to i64
  %213 = bitcast %"class.v8::internal::compiler::InstructionOperand"** %210 to i64*
  store i64 %163, i64* %213, align 8
  %214 = getelementptr inbounds %"class.v8::internal::compiler::InstructionOperand"*, %"class.v8::internal::compiler::InstructionOperand"** %210, i64 1
  %215 = ptrtoint %"class.v8::internal::compiler::InstructionOperand"** %214 to i64
  %216 = load %"class.v8::internal::compiler::InstructionOperand"**, %"class.v8::internal::compiler::InstructionOperand"*** %42, align 8
  %217 = ptrtoint %"class.v8::internal::compiler::InstructionOperand"** %216 to i64
  %218 = load %"class.v8::internal::compiler::InstructionOperand"**, %"class.v8::internal::compiler::InstructionOperand"*** %36, align 8
  %219 = icmp eq %"class.v8::internal::compiler::InstructionOperand"** %218, %216
  br i1 %219, label %390, label %220

220:                                              ; preds = %207
  %221 = getelementptr %"class.v8::internal::compiler::InstructionOperand"*, %"class.v8::internal::compiler::InstructionOperand"** %218, i64 -1
  %222 = ptrtoint %"class.v8::internal::compiler::InstructionOperand"** %221 to i64
  %223 = sub i64 %222, %217
  %224 = lshr i64 %223, 3
  %225 = add nuw nsw i64 %224, 1
  %226 = icmp ult i64 %225, 4
  br i1 %226, label %320, label %227

227:                                              ; preds = %220
  %228 = getelementptr %"class.v8::internal::compiler::InstructionOperand"*, %"class.v8::internal::compiler::InstructionOperand"** %209, i64 -1
  %229 = getelementptr %"class.v8::internal::compiler::InstructionOperand"*, %"class.v8::internal::compiler::InstructionOperand"** %218, i64 -1
  %230 = ptrtoint %"class.v8::internal::compiler::InstructionOperand"** %229 to i64
  %231 = sub i64 %230, %217
  %232 = lshr i64 %231, 3
  %233 = sub nsw i64 %176, %232
  %234 = getelementptr %"class.v8::internal::compiler::InstructionOperand"*, %"class.v8::internal::compiler::InstructionOperand"** %228, i64 %233
  %235 = getelementptr %"class.v8::internal::compiler::InstructionOperand"*, %"class.v8::internal::compiler::InstructionOperand"** %218, i64 -1
  %236 = sub nsw i64 0, %232
  %237 = getelementptr %"class.v8::internal::compiler::InstructionOperand"*, %"class.v8::internal::compiler::InstructionOperand"** %235, i64 %236
  %238 = icmp ult %"class.v8::internal::compiler::InstructionOperand"** %234, %218
  %239 = icmp ult %"class.v8::internal::compiler::InstructionOperand"** %237, %210
  %240 = and i1 %238, %239
  br i1 %240, label %320, label %241

241:                                              ; preds = %227
  %242 = and i64 %225, 4611686018427387900
  %243 = sub nsw i64 0, %242
  %244 = getelementptr %"class.v8::internal::compiler::InstructionOperand"*, %"class.v8::internal::compiler::InstructionOperand"** %210, i64 %243
  %245 = sub nsw i64 0, %242
  %246 = getelementptr %"class.v8::internal::compiler::InstructionOperand"*, %"class.v8::internal::compiler::InstructionOperand"** %218, i64 %245
  %247 = add nsw i64 %242, -4
  %248 = lshr exact i64 %247, 2
  %249 = add nuw nsw i64 %248, 1
  %250 = and i64 %249, 1
  %251 = icmp eq i64 %247, 0
  br i1 %251, label %296, label %252

252:                                              ; preds = %241
  %253 = sub nuw nsw i64 %249, %250
  %254 = getelementptr %"class.v8::internal::compiler::InstructionOperand"*, %"class.v8::internal::compiler::InstructionOperand"** %210, i64 -1
  %255 = getelementptr %"class.v8::internal::compiler::InstructionOperand"*, %"class.v8::internal::compiler::InstructionOperand"** %218, i64 -1
  %256 = getelementptr %"class.v8::internal::compiler::InstructionOperand"*, %"class.v8::internal::compiler::InstructionOperand"** %210, i64 -1
  %257 = getelementptr %"class.v8::internal::compiler::InstructionOperand"*, %"class.v8::internal::compiler::InstructionOperand"** %218, i64 -1
  br label %258

258:                                              ; preds = %258, %252
  %259 = phi i64 [ 0, %252 ], [ %293, %258 ]
  %260 = phi i64 [ %253, %252 ], [ %294, %258 ]
  %261 = sub i64 0, %259
  %262 = sub i64 0, %259
  %263 = getelementptr inbounds %"class.v8::internal::compiler::InstructionOperand"*, %"class.v8::internal::compiler::InstructionOperand"** %254, i64 %261
  %264 = getelementptr inbounds %"class.v8::internal::compiler::InstructionOperand"*, %"class.v8::internal::compiler::InstructionOperand"** %255, i64 %262
  %265 = getelementptr inbounds %"class.v8::internal::compiler::InstructionOperand"*, %"class.v8::internal::compiler::InstructionOperand"** %264, i64 -1
  %266 = bitcast %"class.v8::internal::compiler::InstructionOperand"** %265 to <2 x i64>*
  %267 = load <2 x i64>, <2 x i64>* %266, align 8, !alias.scope !97
  %268 = getelementptr inbounds %"class.v8::internal::compiler::InstructionOperand"*, %"class.v8::internal::compiler::InstructionOperand"** %264, i64 -2
  %269 = getelementptr inbounds %"class.v8::internal::compiler::InstructionOperand"*, %"class.v8::internal::compiler::InstructionOperand"** %268, i64 -1
  %270 = bitcast %"class.v8::internal::compiler::InstructionOperand"** %269 to <2 x i64>*
  %271 = load <2 x i64>, <2 x i64>* %270, align 8, !alias.scope !97
  %272 = getelementptr inbounds %"class.v8::internal::compiler::InstructionOperand"*, %"class.v8::internal::compiler::InstructionOperand"** %263, i64 -1
  %273 = bitcast %"class.v8::internal::compiler::InstructionOperand"** %272 to <2 x i64>*
  store <2 x i64> %267, <2 x i64>* %273, align 8, !alias.scope !100, !noalias !97
  %274 = getelementptr inbounds %"class.v8::internal::compiler::InstructionOperand"*, %"class.v8::internal::compiler::InstructionOperand"** %263, i64 -2
  %275 = getelementptr inbounds %"class.v8::internal::compiler::InstructionOperand"*, %"class.v8::internal::compiler::InstructionOperand"** %274, i64 -1
  %276 = bitcast %"class.v8::internal::compiler::InstructionOperand"** %275 to <2 x i64>*
  store <2 x i64> %271, <2 x i64>* %276, align 8, !alias.scope !100, !noalias !97
  %277 = sub nuw nsw i64 -4, %259
  %278 = sub nuw nsw i64 -4, %259
  %279 = getelementptr inbounds %"class.v8::internal::compiler::InstructionOperand"*, %"class.v8::internal::compiler::InstructionOperand"** %256, i64 %277
  %280 = getelementptr inbounds %"class.v8::internal::compiler::InstructionOperand"*, %"class.v8::internal::compiler::InstructionOperand"** %257, i64 %278
  %281 = getelementptr inbounds %"class.v8::internal::compiler::InstructionOperand"*, %"class.v8::internal::compiler::InstructionOperand"** %280, i64 -1
  %282 = bitcast %"class.v8::internal::compiler::InstructionOperand"** %281 to <2 x i64>*
  %283 = load <2 x i64>, <2 x i64>* %282, align 8, !alias.scope !97
  %284 = getelementptr inbounds %"class.v8::internal::compiler::InstructionOperand"*, %"class.v8::internal::compiler::InstructionOperand"** %280, i64 -2
  %285 = getelementptr inbounds %"class.v8::internal::compiler::InstructionOperand"*, %"class.v8::internal::compiler::InstructionOperand"** %284, i64 -1
  %286 = bitcast %"class.v8::internal::compiler::InstructionOperand"** %285 to <2 x i64>*
  %287 = load <2 x i64>, <2 x i64>* %286, align 8, !alias.scope !97
  %288 = getelementptr inbounds %"class.v8::internal::compiler::InstructionOperand"*, %"class.v8::internal::compiler::InstructionOperand"** %279, i64 -1
  %289 = bitcast %"class.v8::internal::compiler::InstructionOperand"** %288 to <2 x i64>*
  store <2 x i64> %283, <2 x i64>* %289, align 8, !alias.scope !100, !noalias !97
  %290 = getelementptr inbounds %"class.v8::internal::compiler::InstructionOperand"*, %"class.v8::internal::compiler::InstructionOperand"** %279, i64 -2
  %291 = getelementptr inbounds %"class.v8::internal::compiler::InstructionOperand"*, %"class.v8::internal::compiler::InstructionOperand"** %290, i64 -1
  %292 = bitcast %"class.v8::internal::compiler::InstructionOperand"** %291 to <2 x i64>*
  store <2 x i64> %287, <2 x i64>* %292, align 8, !alias.scope !100, !noalias !97
  %293 = add i64 %259, 8
  %294 = add i64 %260, -2
  %295 = icmp eq i64 %294, 0
  br i1 %295, label %296, label %258, !llvm.loop !102

296:                                              ; preds = %258, %241
  %297 = phi i64 [ 0, %241 ], [ %293, %258 ]
  %298 = icmp eq i64 %250, 0
  br i1 %298, label %318, label %299

299:                                              ; preds = %296
  %300 = sub i64 0, %297
  %301 = getelementptr %"class.v8::internal::compiler::InstructionOperand"*, %"class.v8::internal::compiler::InstructionOperand"** %210, i64 -1
  %302 = sub i64 0, %297
  %303 = getelementptr %"class.v8::internal::compiler::InstructionOperand"*, %"class.v8::internal::compiler::InstructionOperand"** %218, i64 -1
  %304 = getelementptr inbounds %"class.v8::internal::compiler::InstructionOperand"*, %"class.v8::internal::compiler::InstructionOperand"** %301, i64 %300
  %305 = getelementptr inbounds %"class.v8::internal::compiler::InstructionOperand"*, %"class.v8::internal::compiler::InstructionOperand"** %303, i64 %302
  %306 = getelementptr inbounds %"class.v8::internal::compiler::InstructionOperand"*, %"class.v8::internal::compiler::InstructionOperand"** %305, i64 -1
  %307 = bitcast %"class.v8::internal::compiler::InstructionOperand"** %306 to <2 x i64>*
  %308 = load <2 x i64>, <2 x i64>* %307, align 8, !alias.scope !97
  %309 = getelementptr inbounds %"class.v8::internal::compiler::InstructionOperand"*, %"class.v8::internal::compiler::InstructionOperand"** %305, i64 -2
  %310 = getelementptr inbounds %"class.v8::internal::compiler::InstructionOperand"*, %"class.v8::internal::compiler::InstructionOperand"** %309, i64 -1
  %311 = bitcast %"class.v8::internal::compiler::InstructionOperand"** %310 to <2 x i64>*
  %312 = load <2 x i64>, <2 x i64>* %311, align 8, !alias.scope !97
  %313 = getelementptr inbounds %"class.v8::internal::compiler::InstructionOperand"*, %"class.v8::internal::compiler::InstructionOperand"** %304, i64 -1
  %314 = bitcast %"class.v8::internal::compiler::InstructionOperand"** %313 to <2 x i64>*
  store <2 x i64> %308, <2 x i64>* %314, align 8, !alias.scope !100, !noalias !97
  %315 = getelementptr inbounds %"class.v8::internal::compiler::InstructionOperand"*, %"class.v8::internal::compiler::InstructionOperand"** %304, i64 -2
  %316 = getelementptr inbounds %"class.v8::internal::compiler::InstructionOperand"*, %"class.v8::internal::compiler::InstructionOperand"** %315, i64 -1
  %317 = bitcast %"class.v8::internal::compiler::InstructionOperand"** %316 to <2 x i64>*
  store <2 x i64> %312, <2 x i64>* %317, align 8, !alias.scope !100, !noalias !97
  br label %318

318:                                              ; preds = %296, %299
  %319 = icmp eq i64 %225, %242
  br i1 %319, label %390, label %320

320:                                              ; preds = %318, %227, %220
  %321 = phi %"class.v8::internal::compiler::InstructionOperand"** [ %210, %227 ], [ %210, %220 ], [ %244, %318 ]
  %322 = phi %"class.v8::internal::compiler::InstructionOperand"** [ %218, %227 ], [ %218, %220 ], [ %246, %318 ]
  %323 = getelementptr %"class.v8::internal::compiler::InstructionOperand"*, %"class.v8::internal::compiler::InstructionOperand"** %322, i64 -1
  %324 = ptrtoint %"class.v8::internal::compiler::InstructionOperand"** %323 to i64
  %325 = sub i64 %324, %217
  %326 = lshr i64 %325, 3
  %327 = add nuw nsw i64 %326, 1
  %328 = and i64 %327, 7
  %329 = icmp eq i64 %328, 0
  br i1 %329, label %341, label %330

330:                                              ; preds = %320, %330
  %331 = phi %"class.v8::internal::compiler::InstructionOperand"** [ %334, %330 ], [ %321, %320 ]
  %332 = phi %"class.v8::internal::compiler::InstructionOperand"** [ %335, %330 ], [ %322, %320 ]
  %333 = phi i64 [ %339, %330 ], [ %328, %320 ]
  %334 = getelementptr inbounds %"class.v8::internal::compiler::InstructionOperand"*, %"class.v8::internal::compiler::InstructionOperand"** %331, i64 -1
  %335 = getelementptr inbounds %"class.v8::internal::compiler::InstructionOperand"*, %"class.v8::internal::compiler::InstructionOperand"** %332, i64 -1
  %336 = bitcast %"class.v8::internal::compiler::InstructionOperand"** %335 to i64*
  %337 = load i64, i64* %336, align 8
  %338 = bitcast %"class.v8::internal::compiler::InstructionOperand"** %334 to i64*
  store i64 %337, i64* %338, align 8
  %339 = add i64 %333, -1
  %340 = icmp eq i64 %339, 0
  br i1 %340, label %341, label %330, !llvm.loop !103

341:                                              ; preds = %330, %320
  %342 = phi %"class.v8::internal::compiler::InstructionOperand"** [ undef, %320 ], [ %334, %330 ]
  %343 = phi %"class.v8::internal::compiler::InstructionOperand"** [ %321, %320 ], [ %334, %330 ]
  %344 = phi %"class.v8::internal::compiler::InstructionOperand"** [ %322, %320 ], [ %335, %330 ]
  %345 = icmp ult i64 %325, 56
  br i1 %345, label %390, label %346

346:                                              ; preds = %341, %346
  %347 = phi %"class.v8::internal::compiler::InstructionOperand"** [ %384, %346 ], [ %343, %341 ]
  %348 = phi %"class.v8::internal::compiler::InstructionOperand"** [ %385, %346 ], [ %344, %341 ]
  %349 = getelementptr inbounds %"class.v8::internal::compiler::InstructionOperand"*, %"class.v8::internal::compiler::InstructionOperand"** %347, i64 -1
  %350 = getelementptr inbounds %"class.v8::internal::compiler::InstructionOperand"*, %"class.v8::internal::compiler::InstructionOperand"** %348, i64 -1
  %351 = bitcast %"class.v8::internal::compiler::InstructionOperand"** %350 to i64*
  %352 = load i64, i64* %351, align 8
  %353 = bitcast %"class.v8::internal::compiler::InstructionOperand"** %349 to i64*
  store i64 %352, i64* %353, align 8
  %354 = getelementptr inbounds %"class.v8::internal::compiler::InstructionOperand"*, %"class.v8::internal::compiler::InstructionOperand"** %347, i64 -2
  %355 = getelementptr inbounds %"class.v8::internal::compiler::InstructionOperand"*, %"class.v8::internal::compiler::InstructionOperand"** %348, i64 -2
  %356 = bitcast %"class.v8::internal::compiler::InstructionOperand"** %355 to i64*
  %357 = load i64, i64* %356, align 8
  %358 = bitcast %"class.v8::internal::compiler::InstructionOperand"** %354 to i64*
  store i64 %357, i64* %358, align 8
  %359 = getelementptr inbounds %"class.v8::internal::compiler::InstructionOperand"*, %"class.v8::internal::compiler::InstructionOperand"** %347, i64 -3
  %360 = getelementptr inbounds %"class.v8::internal::compiler::InstructionOperand"*, %"class.v8::internal::compiler::InstructionOperand"** %348, i64 -3
  %361 = bitcast %"class.v8::internal::compiler::InstructionOperand"** %360 to i64*
  %362 = load i64, i64* %361, align 8
  %363 = bitcast %"class.v8::internal::compiler::InstructionOperand"** %359 to i64*
  store i64 %362, i64* %363, align 8
  %364 = getelementptr inbounds %"class.v8::internal::compiler::InstructionOperand"*, %"class.v8::internal::compiler::InstructionOperand"** %347, i64 -4
  %365 = getelementptr inbounds %"class.v8::internal::compiler::InstructionOperand"*, %"class.v8::internal::compiler::InstructionOperand"** %348, i64 -4
  %366 = bitcast %"class.v8::internal::compiler::InstructionOperand"** %365 to i64*
  %367 = load i64, i64* %366, align 8
  %368 = bitcast %"class.v8::internal::compiler::InstructionOperand"** %364 to i64*
  store i64 %367, i64* %368, align 8
  %369 = getelementptr inbounds %"class.v8::internal::compiler::InstructionOperand"*, %"class.v8::internal::compiler::InstructionOperand"** %347, i64 -5
  %370 = getelementptr inbounds %"class.v8::internal::compiler::InstructionOperand"*, %"class.v8::internal::compiler::InstructionOperand"** %348, i64 -5
  %371 = bitcast %"class.v8::internal::compiler::InstructionOperand"** %370 to i64*
  %372 = load i64, i64* %371, align 8
  %373 = bitcast %"class.v8::internal::compiler::InstructionOperand"** %369 to i64*
  store i64 %372, i64* %373, align 8
  %374 = getelementptr inbounds %"class.v8::internal::compiler::InstructionOperand"*, %"class.v8::internal::compiler::InstructionOperand"** %347, i64 -6
  %375 = getelementptr inbounds %"class.v8::internal::compiler::InstructionOperand"*, %"class.v8::internal::compiler::InstructionOperand"** %348, i64 -6
  %376 = bitcast %"class.v8::internal::compiler::InstructionOperand"** %375 to i64*
  %377 = load i64, i64* %376, align 8
  %378 = bitcast %"class.v8::internal::compiler::InstructionOperand"** %374 to i64*
  store i64 %377, i64* %378, align 8
  %379 = getelementptr inbounds %"class.v8::internal::compiler::InstructionOperand"*, %"class.v8::internal::compiler::InstructionOperand"** %347, i64 -7
  %380 = getelementptr inbounds %"class.v8::internal::compiler::InstructionOperand"*, %"class.v8::internal::compiler::InstructionOperand"** %348, i64 -7
  %381 = bitcast %"class.v8::internal::compiler::InstructionOperand"** %380 to i64*
  %382 = load i64, i64* %381, align 8
  %383 = bitcast %"class.v8::internal::compiler::InstructionOperand"** %379 to i64*
  store i64 %382, i64* %383, align 8
  %384 = getelementptr inbounds %"class.v8::internal::compiler::InstructionOperand"*, %"class.v8::internal::compiler::InstructionOperand"** %347, i64 -8
  %385 = getelementptr inbounds %"class.v8::internal::compiler::InstructionOperand"*, %"class.v8::internal::compiler::InstructionOperand"** %348, i64 -8
  %386 = bitcast %"class.v8::internal::compiler::InstructionOperand"** %385 to i64*
  %387 = load i64, i64* %386, align 8
  %388 = bitcast %"class.v8::internal::compiler::InstructionOperand"** %384 to i64*
  store i64 %387, i64* %388, align 8
  %389 = icmp eq %"class.v8::internal::compiler::InstructionOperand"** %385, %216
  br i1 %389, label %390, label %346, !llvm.loop !104

390:                                              ; preds = %341, %346, %318, %207
  %391 = phi %"class.v8::internal::compiler::InstructionOperand"** [ %210, %207 ], [ %244, %318 ], [ %342, %341 ], [ %384, %346 ]
  %392 = ptrtoint %"class.v8::internal::compiler::InstructionOperand"** %391 to i64
  store i64 %392, i64* %39, align 8
  store i64 %215, i64* %38, align 8
  store i64 %212, i64* %40, align 8
  br label %393

393:                                              ; preds = %168, %390
  call void @llvm.lifetime.end.p0i8(i64 8, i8* nonnull %12) #16
  %394 = add nuw i64 %89, 1
  %395 = load i64, i64* %28, align 8
  %396 = load i64, i64* %30, align 8
  %397 = sub i64 %395, %396
  %398 = ashr exact i64 %397, 2
  %399 = icmp ult i64 %394, %398
  %400 = load %"class.v8::internal::compiler::TopTierRegisterAllocationData"*, %"class.v8::internal::compiler::TopTierRegisterAllocationData"** %10, align 8
  br i1 %399, label %86, label %43
}

; Function Attrs: nofree norecurse nounwind ssp uwtable writeonly
define hidden void @_ZN2v88internal8compiler16LiveRangeBuilderC2EPNS1_29TopTierRegisterAllocationDataEPNS0_4ZoneE(%"class.v8::internal::compiler::LiveRangeBuilder"*, %"class.v8::internal::compiler::TopTierRegisterAllocationData"*, %"class.v8::internal::Zone"*) unnamed_addr #7 align 2 {
  %4 = getelementptr inbounds %"class.v8::internal::compiler::LiveRangeBuilder", %"class.v8::internal::compiler::LiveRangeBuilder"* %0, i64 0, i32 0
  store %"class.v8::internal::compiler::TopTierRegisterAllocationData"* %1, %"class.v8::internal::compiler::TopTierRegisterAllocationData"** %4, align 8
  %5 = ptrtoint %"class.v8::internal::Zone"* %2 to i64
  %6 = getelementptr inbounds %"class.v8::internal::compiler::LiveRangeBuilder", %"class.v8::internal::compiler::LiveRangeBuilder"* %0, i64 0, i32 1, i32 0, i32 0, i32 0
  %7 = getelementptr inbounds %"class.v8::internal::compiler::LiveRangeBuilder", %"class.v8::internal::compiler::LiveRangeBuilder"* %0, i64 0, i32 1, i32 0, i32 0, i32 1, i32 1
  %8 = bitcast %"struct.std::__1::__compressed_pair_elem.1372"* %7 to i64*
  %9 = getelementptr inbounds %"class.v8::internal::compiler::LiveRangeBuilder", %"class.v8::internal::compiler::LiveRangeBuilder"* %0, i64 0, i32 1, i32 0, i32 0, i32 1
  %10 = bitcast %"class.std::__1::__compressed_pair.1371"* %9 to i64*
  store i64 0, i64* %10, align 8
  store i64 %5, i64* %8, align 8
  %11 = getelementptr inbounds %"class.v8::internal::compiler::LiveRangeBuilder", %"class.v8::internal::compiler::LiveRangeBuilder"* %0, i64 0, i32 1, i32 0, i32 0, i32 2, i32 0, i32 0
  store i64 0, i64* %11, align 8
  %12 = getelementptr inbounds %"class.v8::internal::compiler::LiveRangeBuilder", %"class.v8::internal::compiler::LiveRangeBuilder"* %0, i64 0, i32 1, i32 0, i32 0, i32 1, i32 0, i32 0
  store %"class.std::__1::__tree_end_node"* %12, %"class.std::__1::__tree_end_node"** %6, align 8
  ret void
}

; Function Attrs: nounwind ssp uwtable
define hidden %"class.v8::internal::BitVector"* @_ZN2v88internal8compiler16LiveRangeBuilder14ComputeLiveOutEPKNS1_16InstructionBlockEPNS1_29TopTierRegisterAllocationDataE(%"class.v8::internal::compiler::InstructionBlock"* nocapture readonly, %"class.v8::internal::compiler::TopTierRegisterAllocationData"* nocapture readonly) local_unnamed_addr #0 align 2 {
  %3 = alloca %"class.v8::internal::Zone"*, align 8
  %4 = alloca i32, align 4
  %5 = getelementptr inbounds %"class.v8::internal::compiler::InstructionBlock", %"class.v8::internal::compiler::InstructionBlock"* %0, i64 0, i32 4, i32 0
  %6 = load i32, i32* %5, align 4
  %7 = sext i32 %6 to i64
  %8 = getelementptr inbounds %"class.v8::internal::compiler::TopTierRegisterAllocationData", %"class.v8::internal::compiler::TopTierRegisterAllocationData"* %1, i64 0, i32 8, i32 0, i32 0, i32 0
  %9 = load %"class.v8::internal::BitVector"**, %"class.v8::internal::BitVector"*** %8, align 8
  %10 = getelementptr inbounds %"class.v8::internal::BitVector"*, %"class.v8::internal::BitVector"** %9, i64 %7
  %11 = load %"class.v8::internal::BitVector"*, %"class.v8::internal::BitVector"** %10, align 8
  %12 = icmp eq %"class.v8::internal::BitVector"* %11, null
  br i1 %12, label %13, label %129

13:                                               ; preds = %2
  %14 = bitcast %"class.v8::internal::Zone"** %3 to i8*
  call void @llvm.lifetime.start.p0i8(i64 8, i8* nonnull %14) #16
  %15 = getelementptr inbounds %"class.v8::internal::compiler::TopTierRegisterAllocationData", %"class.v8::internal::compiler::TopTierRegisterAllocationData"* %1, i64 0, i32 1
  %16 = load %"class.v8::internal::Zone"*, %"class.v8::internal::Zone"** %15, align 8
  store %"class.v8::internal::Zone"* %16, %"class.v8::internal::Zone"** %3, align 8
  %17 = getelementptr inbounds %"class.v8::internal::compiler::TopTierRegisterAllocationData", %"class.v8::internal::compiler::TopTierRegisterAllocationData"* %1, i64 0, i32 3
  %18 = load %"class.v8::internal::compiler::InstructionSequence"*, %"class.v8::internal::compiler::InstructionSequence"** %17, align 8
  %19 = bitcast i32* %4 to i8*
  call void @llvm.lifetime.start.p0i8(i64 4, i8* nonnull %19) #16
  %20 = getelementptr inbounds %"class.v8::internal::compiler::InstructionSequence", %"class.v8::internal::compiler::InstructionSequence"* %18, i64 0, i32 9
  %21 = load i32, i32* %20, align 8
  store i32 %21, i32* %4, align 4
  %22 = call %"class.v8::internal::BitVector"* @_ZN2v88internal4Zone3NewINS0_9BitVectorEJiRPS1_EEEPT_DpOT0_(%"class.v8::internal::Zone"* %16, i32* nonnull dereferenceable(4) %4, %"class.v8::internal::Zone"** nonnull dereferenceable(8) %3)
  call void @llvm.lifetime.end.p0i8(i64 4, i8* nonnull %19) #16
  %23 = getelementptr inbounds %"class.v8::internal::compiler::InstructionBlock", %"class.v8::internal::compiler::InstructionBlock"* %0, i64 0, i32 0, i32 0, i32 0, i32 0
  %24 = load %"class.v8::internal::compiler::RpoNumber"*, %"class.v8::internal::compiler::RpoNumber"** %23, align 8
  %25 = getelementptr inbounds %"class.v8::internal::compiler::InstructionBlock", %"class.v8::internal::compiler::InstructionBlock"* %0, i64 0, i32 0, i32 0, i32 0, i32 1
  %26 = load %"class.v8::internal::compiler::RpoNumber"*, %"class.v8::internal::compiler::RpoNumber"** %25, align 8
  %27 = icmp eq %"class.v8::internal::compiler::RpoNumber"* %24, %26
  br i1 %27, label %36, label %28

28:                                               ; preds = %13
  %29 = getelementptr inbounds %"class.v8::internal::compiler::TopTierRegisterAllocationData", %"class.v8::internal::compiler::TopTierRegisterAllocationData"* %1, i64 0, i32 7, i32 0, i32 0, i32 0
  %30 = getelementptr inbounds %"class.v8::internal::BitVector", %"class.v8::internal::BitVector"* %22, i64 0, i32 1
  %31 = getelementptr inbounds %"class.v8::internal::BitVector", %"class.v8::internal::BitVector"* %22, i64 0, i32 2, i32 0
  %32 = getelementptr inbounds %"class.v8::internal::BitVector", %"class.v8::internal::BitVector"* %22, i64 0, i32 2
  %33 = bitcast %"union.v8::internal::BitVector::DataStorage"* %32 to i64*
  %34 = getelementptr inbounds %"class.v8::internal::compiler::InstructionSequence", %"class.v8::internal::compiler::InstructionSequence"* %18, i64 0, i32 2
  %35 = bitcast %"class.v8::internal::ZoneVector.1170"** %34 to %"class.std::__1::vector.1171"**
  br label %39

36:                                               ; preds = %126, %13
  %37 = load %"class.v8::internal::BitVector"**, %"class.v8::internal::BitVector"*** %8, align 8
  %38 = getelementptr inbounds %"class.v8::internal::BitVector"*, %"class.v8::internal::BitVector"** %37, i64 %7
  store %"class.v8::internal::BitVector"* %22, %"class.v8::internal::BitVector"** %38, align 8
  call void @llvm.lifetime.end.p0i8(i64 8, i8* nonnull %14) #16
  br label %129

39:                                               ; preds = %28, %126
  %40 = phi %"class.v8::internal::compiler::RpoNumber"* [ %24, %28 ], [ %127, %126 ]
  %41 = load i32, i32* %5, align 4
  %42 = getelementptr inbounds %"class.v8::internal::compiler::RpoNumber", %"class.v8::internal::compiler::RpoNumber"* %40, i64 0, i32 0
  %43 = load i32, i32* %42, align 4
  %44 = icmp sgt i32 %43, %41
  br i1 %44, label %45, label %126

45:                                               ; preds = %39
  %46 = sext i32 %43 to i64
  %47 = load %"class.v8::internal::BitVector"**, %"class.v8::internal::BitVector"*** %29, align 8
  %48 = getelementptr inbounds %"class.v8::internal::BitVector"*, %"class.v8::internal::BitVector"** %47, i64 %46
  %49 = load %"class.v8::internal::BitVector"*, %"class.v8::internal::BitVector"** %48, align 8
  %50 = icmp eq %"class.v8::internal::BitVector"* %49, null
  br i1 %50, label %77, label %51

51:                                               ; preds = %45
  %52 = load i32, i32* %30, align 4
  %53 = icmp eq i32 %52, 1
  br i1 %53, label %58, label %54

54:                                               ; preds = %51
  %55 = icmp sgt i32 %52, 0
  br i1 %55, label %56, label %77

56:                                               ; preds = %54
  %57 = getelementptr inbounds %"class.v8::internal::BitVector", %"class.v8::internal::BitVector"* %49, i64 0, i32 2, i32 0
  br label %64

58:                                               ; preds = %51
  %59 = getelementptr inbounds %"class.v8::internal::BitVector", %"class.v8::internal::BitVector"* %49, i64 0, i32 2
  %60 = bitcast %"union.v8::internal::BitVector::DataStorage"* %59 to i64*
  %61 = load i64, i64* %60, align 8
  %62 = load i64, i64* %33, align 8
  %63 = or i64 %62, %61
  store i64 %63, i64* %33, align 8
  br label %77

64:                                               ; preds = %64, %56
  %65 = phi i64 [ 0, %56 ], [ %73, %64 ]
  %66 = load i64*, i64** %57, align 8
  %67 = getelementptr inbounds i64, i64* %66, i64 %65
  %68 = load i64, i64* %67, align 8
  %69 = load i64*, i64** %31, align 8
  %70 = getelementptr inbounds i64, i64* %69, i64 %65
  %71 = load i64, i64* %70, align 8
  %72 = or i64 %71, %68
  store i64 %72, i64* %70, align 8
  %73 = add nuw nsw i64 %65, 1
  %74 = load i32, i32* %30, align 4
  %75 = sext i32 %74 to i64
  %76 = icmp slt i64 %73, %75
  br i1 %76, label %64, label %77

77:                                               ; preds = %64, %58, %54, %45
  %78 = load i32, i32* %42, align 4
  %79 = load %"class.std::__1::vector.1171"*, %"class.std::__1::vector.1171"** %35, align 8
  %80 = sext i32 %78 to i64
  %81 = getelementptr inbounds %"class.std::__1::vector.1171", %"class.std::__1::vector.1171"* %79, i64 0, i32 0, i32 1
  %82 = bitcast %"class.v8::internal::compiler::InstructionBlock"*** %81 to i64*
  %83 = load i64, i64* %82, align 8
  %84 = bitcast %"class.std::__1::vector.1171"* %79 to i64*
  %85 = load i64, i64* %84, align 8
  %86 = sub i64 %83, %85
  %87 = ashr exact i64 %86, 3
  %88 = icmp ugt i64 %87, %80
  br i1 %88, label %91, label %89

89:                                               ; preds = %77
  %90 = bitcast %"class.std::__1::vector.1171"* %79 to %"class.std::__1::__vector_base_common"*
  call void @_ZNKSt3__120__vector_base_commonILb1EE20__throw_out_of_rangeEv(%"class.std::__1::__vector_base_common"* %90) #17
  unreachable

91:                                               ; preds = %77
  %92 = inttoptr i64 %85 to %"class.v8::internal::compiler::InstructionBlock"**
  %93 = getelementptr inbounds %"class.v8::internal::compiler::InstructionBlock"*, %"class.v8::internal::compiler::InstructionBlock"** %92, i64 %80
  %94 = load %"class.v8::internal::compiler::InstructionBlock"*, %"class.v8::internal::compiler::InstructionBlock"** %93, align 8
  %95 = load i32, i32* %5, align 4
  %96 = call i64 @_ZNK2v88internal8compiler16InstructionBlock18PredecessorIndexOfENS1_9RpoNumberE(%"class.v8::internal::compiler::InstructionBlock"* %94, i32 %95) #16
  %97 = getelementptr inbounds %"class.v8::internal::compiler::InstructionBlock", %"class.v8::internal::compiler::InstructionBlock"* %94, i64 0, i32 2, i32 0, i32 0, i32 0
  %98 = load %"class.v8::internal::compiler::PhiInstruction"**, %"class.v8::internal::compiler::PhiInstruction"*** %97, align 8
  %99 = getelementptr inbounds %"class.v8::internal::compiler::InstructionBlock", %"class.v8::internal::compiler::InstructionBlock"* %94, i64 0, i32 2, i32 0, i32 0, i32 1
  %100 = load %"class.v8::internal::compiler::PhiInstruction"**, %"class.v8::internal::compiler::PhiInstruction"*** %99, align 8
  %101 = icmp eq %"class.v8::internal::compiler::PhiInstruction"** %98, %100
  br i1 %101, label %126, label %102

102:                                              ; preds = %91, %117
  %103 = phi %"class.v8::internal::compiler::PhiInstruction"** [ %124, %117 ], [ %98, %91 ]
  %104 = load %"class.v8::internal::compiler::PhiInstruction"*, %"class.v8::internal::compiler::PhiInstruction"** %103, align 8
  %105 = getelementptr inbounds %"class.v8::internal::compiler::PhiInstruction", %"class.v8::internal::compiler::PhiInstruction"* %104, i64 0, i32 2, i32 0, i32 0, i32 0
  %106 = load i32*, i32** %105, align 8
  %107 = getelementptr inbounds i32, i32* %106, i64 %96
  %108 = load i32, i32* %107, align 4
  %109 = load i32, i32* %30, align 4
  %110 = icmp eq i32 %109, 1
  br i1 %110, label %117, label %111

111:                                              ; preds = %102
  %112 = srem i32 %108, 64
  %113 = load i64*, i64** %31, align 8
  %114 = sdiv i32 %108, 64
  %115 = sext i32 %114 to i64
  %116 = getelementptr inbounds i64, i64* %113, i64 %115
  br label %117

117:                                              ; preds = %102, %111
  %118 = phi i64* [ %116, %111 ], [ %33, %102 ]
  %119 = phi i32 [ %112, %111 ], [ %108, %102 ]
  %120 = zext i32 %119 to i64
  %121 = shl i64 1, %120
  %122 = load i64, i64* %118, align 8
  %123 = or i64 %122, %121
  store i64 %123, i64* %118, align 8
  %124 = getelementptr inbounds %"class.v8::internal::compiler::PhiInstruction"*, %"class.v8::internal::compiler::PhiInstruction"** %103, i64 1
  %125 = icmp eq %"class.v8::internal::compiler::PhiInstruction"** %124, %100
  br i1 %125, label %126, label %102

126:                                              ; preds = %117, %91, %39
  %127 = getelementptr inbounds %"class.v8::internal::compiler::RpoNumber", %"class.v8::internal::compiler::RpoNumber"* %40, i64 1
  %128 = icmp eq %"class.v8::internal::compiler::RpoNumber"* %127, %26
  br i1 %128, label %36, label %39

129:                                              ; preds = %36, %2
  %130 = phi %"class.v8::internal::BitVector"* [ %22, %36 ], [ %11, %2 ]
  ret %"class.v8::internal::BitVector"* %130
}

; Function Attrs: nounwind ssp uwtable
define linkonce_odr hidden %"class.v8::internal::BitVector"* @_ZN2v88internal4Zone3NewINS0_9BitVectorEJiRPS1_EEEPT_DpOT0_(%"class.v8::internal::Zone"*, i32* dereferenceable(4), %"class.v8::internal::Zone"** dereferenceable(8)) local_unnamed_addr #0 comdat align 2 {
  %4 = getelementptr inbounds %"class.v8::internal::Zone", %"class.v8::internal::Zone"* %0, i64 0, i32 2
  %5 = load i64, i64* %4, align 8
  %6 = getelementptr inbounds %"class.v8::internal::Zone", %"class.v8::internal::Zone"* %0, i64 0, i32 3
  %7 = load i64, i64* %6, align 8
  %8 = sub i64 %7, %5
  %9 = icmp ult i64 %8, 16
  br i1 %9, label %10, label %12, !prof !2

10:                                               ; preds = %3
  %11 = tail call i64 @_ZN2v88internal4Zone9NewExpandEm(%"class.v8::internal::Zone"* %0, i64 16) #16
  br label %14

12:                                               ; preds = %3
  %13 = add i64 %5, 16
  store i64 %13, i64* %4, align 8
  br label %14

14:                                               ; preds = %10, %12
  %15 = phi i64 [ %11, %10 ], [ %5, %12 ]
  %16 = inttoptr i64 %15 to %"class.v8::internal::BitVector"*
  %17 = load i32, i32* %1, align 4
  %18 = load %"class.v8::internal::Zone"*, %"class.v8::internal::Zone"** %2, align 8
  %19 = getelementptr inbounds %"class.v8::internal::BitVector", %"class.v8::internal::BitVector"* %16, i64 0, i32 0
  store i32 %17, i32* %19, align 8
  %20 = getelementptr inbounds %"class.v8::internal::BitVector", %"class.v8::internal::BitVector"* %16, i64 0, i32 1
  %21 = icmp slt i32 %17, 65
  br i1 %21, label %22, label %25

22:                                               ; preds = %14
  store i32 1, i32* %20, align 4
  %23 = getelementptr inbounds %"class.v8::internal::BitVector", %"class.v8::internal::BitVector"* %16, i64 0, i32 2
  %24 = bitcast %"union.v8::internal::BitVector::DataStorage"* %23 to i64*
  store i64 0, i64* %24, align 8
  br label %64

25:                                               ; preds = %14
  %26 = add nsw i32 %17, -1
  %27 = sdiv i32 %26, 64
  %28 = add nuw nsw i32 %27, 1
  store i32 %28, i32* %20, align 4
  %29 = getelementptr inbounds %"class.v8::internal::BitVector", %"class.v8::internal::BitVector"* %16, i64 0, i32 2
  %30 = bitcast %"union.v8::internal::BitVector::DataStorage"* %29 to i64*
  store i64 0, i64* %30, align 8
  %31 = sext i32 %28 to i64
  %32 = shl nsw i64 %31, 3
  %33 = getelementptr inbounds %"class.v8::internal::Zone", %"class.v8::internal::Zone"* %18, i64 0, i32 2
  %34 = load i64, i64* %33, align 8
  %35 = getelementptr inbounds %"class.v8::internal::Zone", %"class.v8::internal::Zone"* %18, i64 0, i32 3
  %36 = load i64, i64* %35, align 8
  %37 = sub i64 %36, %34
  %38 = icmp ugt i64 %32, %37
  br i1 %38, label %39, label %41, !prof !2

39:                                               ; preds = %25
  %40 = tail call i64 @_ZN2v88internal4Zone9NewExpandEm(%"class.v8::internal::Zone"* %18, i64 %32) #16
  br label %43

41:                                               ; preds = %25
  %42 = add i64 %34, %32
  store i64 %42, i64* %33, align 8
  br label %43

43:                                               ; preds = %41, %39
  %44 = phi i64 [ %40, %39 ], [ %34, %41 ]
  %45 = inttoptr i64 %44 to i64*
  %46 = getelementptr inbounds %"union.v8::internal::BitVector::DataStorage", %"union.v8::internal::BitVector::DataStorage"* %29, i64 0, i32 0
  store i64* %45, i64** %46, align 8
  %47 = load i32, i32* %20, align 4
  %48 = icmp eq i32 %47, 1
  br i1 %48, label %55, label %49

49:                                               ; preds = %43
  %50 = icmp sgt i32 %47, 0
  br i1 %50, label %51, label %64

51:                                               ; preds = %49
  %52 = getelementptr inbounds %"class.v8::internal::BitVector", %"class.v8::internal::BitVector"* %16, i64 0, i32 2, i32 0
  store i64 0, i64* %45, align 8
  %53 = load i32, i32* %20, align 4
  %54 = icmp sgt i32 %53, 1
  br i1 %54, label %56, label %64

55:                                               ; preds = %43
  store i64 0, i64* %30, align 8
  br label %64

56:                                               ; preds = %51, %56
  %57 = phi i64 [ %60, %56 ], [ 1, %51 ]
  %58 = load i64*, i64** %52, align 8
  %59 = getelementptr inbounds i64, i64* %58, i64 %57
  store i64 0, i64* %59, align 8
  %60 = add nuw nsw i64 %57, 1
  %61 = load i32, i32* %20, align 4
  %62 = sext i32 %61 to i64
  %63 = icmp slt i64 %60, %62
  br i1 %63, label %56, label %64

64:                                               ; preds = %56, %51, %22, %49, %55
  ret %"class.v8::internal::BitVector"* %16
}

declare i64 @_ZNK2v88internal8compiler16InstructionBlock18PredecessorIndexOfENS1_9RpoNumberE(%"class.v8::internal::compiler::InstructionBlock"*, i32) local_unnamed_addr #6

; Function Attrs: nounwind ssp uwtable
define hidden void @_ZN2v88internal8compiler16LiveRangeBuilder19AddInitialIntervalsEPKNS1_16InstructionBlockEPNS0_9BitVectorE(%"class.v8::internal::compiler::LiveRangeBuilder"* nocapture readonly, %"class.v8::internal::compiler::InstructionBlock"* nocapture readonly, %"class.v8::internal::BitVector"*) local_unnamed_addr #0 align 2 {
  %4 = getelementptr inbounds %"class.v8::internal::compiler::InstructionBlock", %"class.v8::internal::compiler::InstructionBlock"* %1, i64 0, i32 8
  %5 = load i32, i32* %4, align 4
  %6 = shl nsw i32 %5, 2
  %7 = getelementptr inbounds %"class.v8::internal::compiler::InstructionBlock", %"class.v8::internal::compiler::InstructionBlock"* %1, i64 0, i32 9
  %8 = load i32, i32* %7, align 8
  %9 = shl i32 %8, 2
  %10 = add i32 %9, -4
  %11 = or i32 %10, 2
  %12 = add i32 %11, 2
  %13 = getelementptr inbounds %"class.v8::internal::BitVector", %"class.v8::internal::BitVector"* %2, i64 0, i32 1
  %14 = load i32, i32* %13, align 4
  %15 = icmp eq i32 %14, 1
  %16 = getelementptr inbounds %"class.v8::internal::BitVector", %"class.v8::internal::BitVector"* %2, i64 0, i32 2
  br i1 %15, label %17, label %19

17:                                               ; preds = %3
  %18 = bitcast %"union.v8::internal::BitVector::DataStorage"* %16 to i64*
  br label %22

19:                                               ; preds = %3
  %20 = getelementptr inbounds %"union.v8::internal::BitVector::DataStorage", %"union.v8::internal::BitVector::DataStorage"* %16, i64 0, i32 0
  %21 = load i64*, i64** %20, align 8
  br label %22

22:                                               ; preds = %19, %17
  %23 = phi i64* [ %18, %17 ], [ %21, %19 ]
  %24 = load i64, i64* %23, align 8
  %25 = icmp eq i64 %24, 0
  br i1 %25, label %26, label %49

26:                                               ; preds = %22
  %27 = sext i32 %14 to i64
  %28 = icmp sgt i32 %14, 1
  br i1 %28, label %29, label %58

29:                                               ; preds = %26
  %30 = getelementptr inbounds %"class.v8::internal::BitVector", %"class.v8::internal::BitVector"* %2, i64 0, i32 2, i32 0
  %31 = load i64*, i64** %30, align 8
  %32 = getelementptr inbounds i64, i64* %31, i64 1
  %33 = load i64, i64* %32, align 8
  %34 = icmp eq i64 %33, 0
  br i1 %34, label %35, label %45

35:                                               ; preds = %29, %39
  %36 = phi i64 [ %37, %39 ], [ 1, %29 ]
  %37 = add nuw nsw i64 %36, 1
  %38 = icmp eq i64 %37, %27
  br i1 %38, label %122, label %39

39:                                               ; preds = %35
  %40 = getelementptr inbounds i64, i64* %31, i64 %37
  %41 = load i64, i64* %40, align 8
  %42 = icmp eq i64 %41, 0
  br i1 %42, label %35, label %43

43:                                               ; preds = %39
  %44 = trunc i64 %37 to i32
  br label %45

45:                                               ; preds = %43, %29
  %46 = phi i32 [ %44, %43 ], [ 1, %29 ]
  %47 = phi i64 [ %41, %43 ], [ %33, %29 ]
  %48 = shl i32 %46, 6
  br label %49

49:                                               ; preds = %45, %22
  %50 = phi i32 [ 0, %22 ], [ %46, %45 ]
  %51 = phi i32 [ 0, %22 ], [ %48, %45 ]
  %52 = phi i64 [ %24, %22 ], [ %47, %45 ]
  %53 = tail call i64 @llvm.cttz.i64(i64 %52, i1 true) #16, !range !79
  %54 = trunc i64 %53 to i32
  %55 = or i32 %51, %54
  %56 = lshr i64 %52, %53
  %57 = lshr i64 %56, 1
  br label %58

58:                                               ; preds = %26, %49
  %59 = phi i64 [ %57, %49 ], [ 0, %26 ]
  %60 = phi i32 [ %50, %49 ], [ 1, %26 ]
  %61 = phi i32 [ %55, %49 ], [ 0, %26 ]
  %62 = icmp slt i32 %60, %14
  br i1 %62, label %63, label %122

63:                                               ; preds = %58
  %64 = getelementptr inbounds %"class.v8::internal::compiler::LiveRangeBuilder", %"class.v8::internal::compiler::LiveRangeBuilder"* %0, i64 0, i32 0
  %65 = getelementptr inbounds %"class.v8::internal::BitVector", %"class.v8::internal::BitVector"* %2, i64 0, i32 2, i32 0
  br label %66

66:                                               ; preds = %63, %116
  %67 = phi i32 [ %61, %63 ], [ %120, %116 ]
  %68 = phi i32 [ %60, %63 ], [ %119, %116 ]
  %69 = phi i64 [ %59, %63 ], [ %118, %116 ]
  %70 = load %"class.v8::internal::compiler::TopTierRegisterAllocationData"*, %"class.v8::internal::compiler::TopTierRegisterAllocationData"** %64, align 8
  %71 = tail call %"class.v8::internal::compiler::TopLevelLiveRange"* @_ZN2v88internal8compiler29TopTierRegisterAllocationData23GetOrCreateLiveRangeForEi(%"class.v8::internal::compiler::TopTierRegisterAllocationData"* %70, i32 %67)
  %72 = load %"class.v8::internal::compiler::TopTierRegisterAllocationData"*, %"class.v8::internal::compiler::TopTierRegisterAllocationData"** %64, align 8
  %73 = getelementptr inbounds %"class.v8::internal::compiler::TopTierRegisterAllocationData", %"class.v8::internal::compiler::TopTierRegisterAllocationData"* %72, i64 0, i32 1
  %74 = load %"class.v8::internal::Zone"*, %"class.v8::internal::Zone"** %73, align 8
  %75 = getelementptr inbounds %"class.v8::internal::compiler::TopTierRegisterAllocationData", %"class.v8::internal::compiler::TopTierRegisterAllocationData"* %72, i64 0, i32 23, i32 0
  %76 = load i32, i32* %75, align 4
  %77 = and i32 %76, 1
  %78 = icmp ne i32 %77, 0
  tail call void @_ZN2v88internal8compiler17TopLevelLiveRange14AddUseIntervalENS1_16LifetimePositionES3_PNS0_4ZoneEb(%"class.v8::internal::compiler::TopLevelLiveRange"* %71, i32 %6, i32 %12, %"class.v8::internal::Zone"* %74, i1 zeroext %78)
  %79 = add nsw i32 %67, 1
  %80 = icmp eq i64 %69, 0
  br i1 %80, label %83, label %81

81:                                               ; preds = %66
  %82 = load i32, i32* %13, align 4
  br label %102

83:                                               ; preds = %66
  %84 = add nsw i32 %68, 1
  %85 = load i32, i32* %13, align 4
  %86 = icmp slt i32 %84, %85
  br i1 %86, label %87, label %116

87:                                               ; preds = %83
  %88 = load i64*, i64** %65, align 8
  %89 = sext i32 %84 to i64
  %90 = sext i32 %85 to i64
  br label %94

91:                                               ; preds = %94
  %92 = add nsw i64 %95, 1
  %93 = icmp slt i64 %92, %90
  br i1 %93, label %94, label %112

94:                                               ; preds = %87, %91
  %95 = phi i64 [ %89, %87 ], [ %92, %91 ]
  %96 = getelementptr inbounds i64, i64* %88, i64 %95
  %97 = load i64, i64* %96, align 8
  %98 = icmp eq i64 %97, 0
  br i1 %98, label %91, label %99

99:                                               ; preds = %94
  %100 = trunc i64 %95 to i32
  %101 = shl i32 %100, 6
  br label %102

102:                                              ; preds = %99, %81
  %103 = phi i32 [ %82, %81 ], [ %85, %99 ]
  %104 = phi i32 [ %68, %81 ], [ %100, %99 ]
  %105 = phi i32 [ %79, %81 ], [ %101, %99 ]
  %106 = phi i64 [ %69, %81 ], [ %97, %99 ]
  %107 = tail call i64 @llvm.cttz.i64(i64 %106, i1 true) #16, !range !79
  %108 = trunc i64 %107 to i32
  %109 = add i32 %105, %108
  %110 = lshr i64 %106, %107
  %111 = lshr i64 %110, 1
  br label %116

112:                                              ; preds = %91
  %113 = trunc i64 %95 to i32
  %114 = shl i32 %113, 6
  %115 = trunc i64 %92 to i32
  br label %116

116:                                              ; preds = %112, %83, %102
  %117 = phi i32 [ %103, %102 ], [ %85, %83 ], [ %85, %112 ]
  %118 = phi i64 [ %111, %102 ], [ 0, %83 ], [ 0, %112 ]
  %119 = phi i32 [ %104, %102 ], [ %84, %83 ], [ %115, %112 ]
  %120 = phi i32 [ %109, %102 ], [ %79, %83 ], [ %114, %112 ]
  %121 = icmp slt i32 %119, %117
  br i1 %121, label %66, label %122

122:                                              ; preds = %35, %116, %58
  ret void
}

; Function Attrs: nounwind ssp uwtable
define hidden i32 @_ZN2v88internal8compiler16LiveRangeBuilder18FixedFPLiveRangeIDEiNS0_21MachineRepresentationE(%"class.v8::internal::compiler::LiveRangeBuilder"* nocapture readonly, i32, i8 zeroext) local_unnamed_addr #0 align 2 {
  %4 = xor i32 %1, -1
  switch i8 %2, label %38 [
    i8 14, label %15
    i8 12, label %10
    i8 13, label %5
  ]

5:                                                ; preds = %3
  %6 = getelementptr inbounds %"class.v8::internal::compiler::LiveRangeBuilder", %"class.v8::internal::compiler::LiveRangeBuilder"* %0, i64 0, i32 0
  %7 = load %"class.v8::internal::compiler::TopTierRegisterAllocationData"*, %"class.v8::internal::compiler::TopTierRegisterAllocationData"** %6, align 8
  %8 = getelementptr inbounds %"class.v8::internal::compiler::TopTierRegisterAllocationData", %"class.v8::internal::compiler::TopTierRegisterAllocationData"* %7, i64 0, i32 5
  %9 = load %"class.v8::internal::RegisterConfiguration"*, %"class.v8::internal::RegisterConfiguration"** %8, align 8
  br label %31

10:                                               ; preds = %3
  %11 = getelementptr inbounds %"class.v8::internal::compiler::LiveRangeBuilder", %"class.v8::internal::compiler::LiveRangeBuilder"* %0, i64 0, i32 0
  %12 = load %"class.v8::internal::compiler::TopTierRegisterAllocationData"*, %"class.v8::internal::compiler::TopTierRegisterAllocationData"** %11, align 8
  %13 = getelementptr inbounds %"class.v8::internal::compiler::TopTierRegisterAllocationData", %"class.v8::internal::compiler::TopTierRegisterAllocationData"* %12, i64 0, i32 5
  %14 = load %"class.v8::internal::RegisterConfiguration"*, %"class.v8::internal::RegisterConfiguration"** %13, align 8
  br label %24

15:                                               ; preds = %3
  %16 = getelementptr inbounds %"class.v8::internal::compiler::LiveRangeBuilder", %"class.v8::internal::compiler::LiveRangeBuilder"* %0, i64 0, i32 0
  %17 = load %"class.v8::internal::compiler::TopTierRegisterAllocationData"*, %"class.v8::internal::compiler::TopTierRegisterAllocationData"** %16, align 8
  %18 = getelementptr inbounds %"class.v8::internal::compiler::TopTierRegisterAllocationData", %"class.v8::internal::compiler::TopTierRegisterAllocationData"* %17, i64 0, i32 5
  %19 = load %"class.v8::internal::RegisterConfiguration"*, %"class.v8::internal::RegisterConfiguration"** %18, align 8
  %20 = getelementptr inbounds %"class.v8::internal::RegisterConfiguration", %"class.v8::internal::RegisterConfiguration"* %19, i64 0, i32 2
  %21 = load i32, i32* %20, align 4
  %22 = shl nsw i32 %21, 1
  %23 = sub nsw i32 %4, %22
  br label %24

24:                                               ; preds = %10, %15
  %25 = phi %"class.v8::internal::RegisterConfiguration"* [ %14, %10 ], [ %19, %15 ]
  %26 = phi i32 [ %4, %10 ], [ %23, %15 ]
  %27 = getelementptr inbounds %"class.v8::internal::RegisterConfiguration", %"class.v8::internal::RegisterConfiguration"* %25, i64 0, i32 3
  %28 = load i32, i32* %27, align 8
  %29 = shl nsw i32 %28, 1
  %30 = sub nsw i32 %26, %29
  br label %31

31:                                               ; preds = %5, %24
  %32 = phi %"class.v8::internal::RegisterConfiguration"* [ %9, %5 ], [ %25, %24 ]
  %33 = phi i32 [ %4, %5 ], [ %30, %24 ]
  %34 = getelementptr inbounds %"class.v8::internal::RegisterConfiguration", %"class.v8::internal::RegisterConfiguration"* %32, i64 0, i32 1
  %35 = load i32, i32* %34, align 8
  %36 = shl nsw i32 %35, 1
  %37 = sub nsw i32 %33, %36
  ret i32 %37

38:                                               ; preds = %3
  tail call void (i8*, ...) @_Z8V8_FatalPKcz(i8* getelementptr inbounds ([17 x i8], [17 x i8]* @.str, i64 0, i64 0)) #17
  unreachable
}

; Function Attrs: nounwind ssp uwtable
define hidden %"class.v8::internal::compiler::TopLevelLiveRange"* @_ZN2v88internal8compiler16LiveRangeBuilder17FixedLiveRangeForEiNS1_29TopTierRegisterAllocationData9SpillModeE(%"class.v8::internal::compiler::LiveRangeBuilder"* nocapture readonly, i32, i32) local_unnamed_addr #0 align 2 {
  %4 = icmp eq i32 %2, 0
  %5 = getelementptr inbounds %"class.v8::internal::compiler::LiveRangeBuilder", %"class.v8::internal::compiler::LiveRangeBuilder"* %0, i64 0, i32 0
  %6 = load %"class.v8::internal::compiler::TopTierRegisterAllocationData"*, %"class.v8::internal::compiler::TopTierRegisterAllocationData"** %5, align 8
  br i1 %4, label %12, label %7

7:                                                ; preds = %3
  %8 = getelementptr inbounds %"class.v8::internal::compiler::TopTierRegisterAllocationData", %"class.v8::internal::compiler::TopTierRegisterAllocationData"* %6, i64 0, i32 5
  %9 = load %"class.v8::internal::RegisterConfiguration"*, %"class.v8::internal::RegisterConfiguration"** %8, align 8
  %10 = getelementptr inbounds %"class.v8::internal::RegisterConfiguration", %"class.v8::internal::RegisterConfiguration"* %9, i64 0, i32 1
  %11 = load i32, i32* %10, align 8
  br label %12

12:                                               ; preds = %3, %7
  %13 = phi i32 [ %11, %7 ], [ 0, %3 ]
  %14 = getelementptr inbounds %"class.v8::internal::compiler::LiveRangeBuilder", %"class.v8::internal::compiler::LiveRangeBuilder"* %0, i64 0, i32 0
  %15 = add nsw i32 %13, %1
  %16 = sext i32 %15 to i64
  %17 = getelementptr inbounds %"class.v8::internal::compiler::TopTierRegisterAllocationData", %"class.v8::internal::compiler::TopTierRegisterAllocationData"* %6, i64 0, i32 10, i32 0, i32 0, i32 0
  %18 = load %"class.v8::internal::compiler::TopLevelLiveRange"**, %"class.v8::internal::compiler::TopLevelLiveRange"*** %17, align 8
  %19 = getelementptr inbounds %"class.v8::internal::compiler::TopLevelLiveRange"*, %"class.v8::internal::compiler::TopLevelLiveRange"** %18, i64 %16
  %20 = load %"class.v8::internal::compiler::TopLevelLiveRange"*, %"class.v8::internal::compiler::TopLevelLiveRange"** %19, align 8
  %21 = icmp eq %"class.v8::internal::compiler::TopLevelLiveRange"* %20, null
  br i1 %21, label %22, label %93

22:                                               ; preds = %12
  %23 = xor i32 %15, -1
  %24 = getelementptr inbounds %"class.v8::internal::compiler::TopTierRegisterAllocationData", %"class.v8::internal::compiler::TopTierRegisterAllocationData"* %6, i64 0, i32 1
  %25 = load %"class.v8::internal::Zone"*, %"class.v8::internal::Zone"** %24, align 8
  %26 = getelementptr inbounds %"class.v8::internal::Zone", %"class.v8::internal::Zone"* %25, i64 0, i32 2
  %27 = load i64, i64* %26, align 8
  %28 = getelementptr inbounds %"class.v8::internal::Zone", %"class.v8::internal::Zone"* %25, i64 0, i32 3
  %29 = load i64, i64* %28, align 8
  %30 = sub i64 %29, %27
  %31 = icmp ult i64 %30, 136
  br i1 %31, label %32, label %34, !prof !2

32:                                               ; preds = %22
  %33 = tail call i64 @_ZN2v88internal4Zone9NewExpandEm(%"class.v8::internal::Zone"* %25, i64 136) #16
  br label %36

34:                                               ; preds = %22
  %35 = add i64 %27, 136
  store i64 %35, i64* %26, align 8
  br label %36

36:                                               ; preds = %34, %32
  %37 = phi i64 [ %33, %32 ], [ %27, %34 ]
  %38 = inttoptr i64 %37 to %"class.v8::internal::compiler::TopLevelLiveRange"*
  %39 = getelementptr inbounds %"class.v8::internal::compiler::TopLevelLiveRange", %"class.v8::internal::compiler::TopLevelLiveRange"* %38, i64 0, i32 0, i32 0
  store i32 0, i32* %39, align 8
  %40 = getelementptr inbounds %"class.v8::internal::compiler::TopLevelLiveRange", %"class.v8::internal::compiler::TopLevelLiveRange"* %38, i64 0, i32 0, i32 1
  %41 = getelementptr inbounds %"class.v8::internal::compiler::TopLevelLiveRange", %"class.v8::internal::compiler::TopLevelLiveRange"* %38, i64 0, i32 0, i32 5
  %42 = getelementptr inbounds i32, i32* %40, i64 1
  %43 = bitcast i32* %42 to i8*
  tail call void @llvm.memset.p0i8.i64(i8* align 4 %43, i8 0, i64 24, i1 false) #16
  store %"class.v8::internal::compiler::TopLevelLiveRange"* %38, %"class.v8::internal::compiler::TopLevelLiveRange"** %41, align 8
  %44 = getelementptr inbounds %"class.v8::internal::compiler::TopLevelLiveRange", %"class.v8::internal::compiler::TopLevelLiveRange"* %38, i64 0, i32 0, i32 6
  %45 = getelementptr inbounds %"class.v8::internal::compiler::TopLevelLiveRange", %"class.v8::internal::compiler::TopLevelLiveRange"* %38, i64 0, i32 0, i32 11, i32 0
  %46 = bitcast %"class.v8::internal::compiler::LiveRange"** %44 to i8*
  tail call void @llvm.memset.p0i8.i64(i8* align 8 %46, i8 0, i64 40, i1 false) #16
  store i32 -1, i32* %45, align 4
  store i32 134262784, i32* %40, align 4
  %47 = getelementptr inbounds %"class.v8::internal::compiler::TopLevelLiveRange", %"class.v8::internal::compiler::TopLevelLiveRange"* %38, i64 0, i32 1
  store i32 %23, i32* %47, align 4
  %48 = getelementptr inbounds %"class.v8::internal::compiler::TopLevelLiveRange", %"class.v8::internal::compiler::TopLevelLiveRange"* %38, i64 0, i32 2
  store i32 0, i32* %48, align 8
  %49 = getelementptr inbounds %"class.v8::internal::compiler::TopLevelLiveRange", %"class.v8::internal::compiler::TopLevelLiveRange"* %38, i64 0, i32 3, i32 0
  %50 = getelementptr inbounds %"class.v8::internal::compiler::TopLevelLiveRange", %"class.v8::internal::compiler::TopLevelLiveRange"* %38, i64 0, i32 7
  %51 = bitcast %"class.v8::internal::compiler::InstructionOperand"** %49 to i8*
  tail call void @llvm.memset.p0i8.i64(i8* align 8 %51, i8 0, i64 18, i1 false) #16
  store i32 2147483647, i32* %50, align 4
  %52 = getelementptr inbounds %"class.v8::internal::compiler::TopLevelLiveRange", %"class.v8::internal::compiler::TopLevelLiveRange"* %38, i64 0, i32 8
  store %"class.v8::internal::compiler::UsePosition"* null, %"class.v8::internal::compiler::UsePosition"** %52, align 8
  %53 = getelementptr inbounds %"class.v8::internal::compiler::TopLevelLiveRange", %"class.v8::internal::compiler::TopLevelLiveRange"* %38, i64 0, i32 9
  %54 = bitcast %"class.v8::internal::compiler::LiveRange"** %53 to %"class.v8::internal::compiler::TopLevelLiveRange"**
  store %"class.v8::internal::compiler::TopLevelLiveRange"* %38, %"class.v8::internal::compiler::TopLevelLiveRange"** %54, align 8
  %55 = inttoptr i64 %37 to %"class.v8::internal::compiler::LiveRange"*
  %56 = getelementptr inbounds %"class.v8::internal::compiler::LiveRange", %"class.v8::internal::compiler::LiveRange"* %55, i64 0, i32 1
  %57 = load i32, i32* %56, align 4
  %58 = and i32 %57, -8065
  %59 = shl i32 %1, 7
  %60 = or i32 %58, %59
  store i32 %60, i32* %56, align 4
  %61 = load %"class.v8::internal::compiler::TopTierRegisterAllocationData"*, %"class.v8::internal::compiler::TopTierRegisterAllocationData"** %14, align 8
  %62 = getelementptr inbounds %"class.v8::internal::compiler::TopTierRegisterAllocationData", %"class.v8::internal::compiler::TopTierRegisterAllocationData"* %61, i64 0, i32 16
  %63 = load %"class.v8::internal::BitVector"*, %"class.v8::internal::BitVector"** %62, align 8
  %64 = getelementptr inbounds %"class.v8::internal::BitVector", %"class.v8::internal::BitVector"* %63, i64 0, i32 1
  %65 = load i32, i32* %64, align 4
  %66 = icmp eq i32 %65, 1
  br i1 %66, label %67, label %70

67:                                               ; preds = %36
  %68 = getelementptr inbounds %"class.v8::internal::BitVector", %"class.v8::internal::BitVector"* %63, i64 0, i32 2
  %69 = bitcast %"union.v8::internal::BitVector::DataStorage"* %68 to i64*
  br label %77

70:                                               ; preds = %36
  %71 = srem i32 %1, 64
  %72 = getelementptr inbounds %"class.v8::internal::BitVector", %"class.v8::internal::BitVector"* %63, i64 0, i32 2, i32 0
  %73 = load i64*, i64** %72, align 8
  %74 = sdiv i32 %1, 64
  %75 = sext i32 %74 to i64
  %76 = getelementptr inbounds i64, i64* %73, i64 %75
  br label %77

77:                                               ; preds = %67, %70
  %78 = phi i64* [ %69, %67 ], [ %76, %70 ]
  %79 = phi i32 [ %1, %67 ], [ %71, %70 ]
  %80 = zext i32 %79 to i64
  %81 = shl i64 1, %80
  %82 = load i64, i64* %78, align 8
  %83 = or i64 %82, %81
  store i64 %83, i64* %78, align 8
  %84 = icmp eq i32 %2, 1
  br i1 %84, label %85, label %88

85:                                               ; preds = %77
  %86 = load i32, i32* %40, align 4
  %87 = or i32 %86, 268435456
  store i32 %87, i32* %40, align 4
  br label %88

88:                                               ; preds = %85, %77
  %89 = load %"class.v8::internal::compiler::TopTierRegisterAllocationData"*, %"class.v8::internal::compiler::TopTierRegisterAllocationData"** %14, align 8
  %90 = getelementptr inbounds %"class.v8::internal::compiler::TopTierRegisterAllocationData", %"class.v8::internal::compiler::TopTierRegisterAllocationData"* %89, i64 0, i32 10, i32 0, i32 0, i32 0
  %91 = load %"class.v8::internal::compiler::TopLevelLiveRange"**, %"class.v8::internal::compiler::TopLevelLiveRange"*** %90, align 8
  %92 = getelementptr inbounds %"class.v8::internal::compiler::TopLevelLiveRange"*, %"class.v8::internal::compiler::TopLevelLiveRange"** %91, i64 %16
  store %"class.v8::internal::compiler::TopLevelLiveRange"* %38, %"class.v8::internal::compiler::TopLevelLiveRange"** %92, align 8
  br label %93

93:                                               ; preds = %88, %12
  %94 = phi %"class.v8::internal::compiler::TopLevelLiveRange"* [ %38, %88 ], [ %20, %12 ]
  ret %"class.v8::internal::compiler::TopLevelLiveRange"* %94
}

; Function Attrs: nounwind ssp uwtable
define hidden %"class.v8::internal::compiler::TopLevelLiveRange"* @_ZN2v88internal8compiler16LiveRangeBuilder19FixedFPLiveRangeForEiNS0_21MachineRepresentationENS1_29TopTierRegisterAllocationData9SpillModeE(%"class.v8::internal::compiler::LiveRangeBuilder"* nocapture readonly, i32, i8 zeroext, i32) local_unnamed_addr #0 align 2 {
  %5 = getelementptr inbounds %"class.v8::internal::compiler::LiveRangeBuilder", %"class.v8::internal::compiler::LiveRangeBuilder"* %0, i64 0, i32 0
  %6 = load %"class.v8::internal::compiler::TopTierRegisterAllocationData"*, %"class.v8::internal::compiler::TopTierRegisterAllocationData"** %5, align 8
  %7 = getelementptr inbounds %"class.v8::internal::compiler::TopTierRegisterAllocationData", %"class.v8::internal::compiler::TopTierRegisterAllocationData"* %6, i64 0, i32 5
  %8 = load %"class.v8::internal::RegisterConfiguration"*, %"class.v8::internal::RegisterConfiguration"** %7, align 8
  %9 = getelementptr inbounds %"class.v8::internal::RegisterConfiguration", %"class.v8::internal::RegisterConfiguration"* %8, i64 0, i32 3
  %10 = load i32, i32* %9, align 8
  %11 = icmp eq i32 %3, 0
  %12 = select i1 %11, i32 0, i32 %10
  %13 = add nsw i32 %12, %1
  %14 = sext i32 %13 to i64
  %15 = getelementptr inbounds %"class.v8::internal::compiler::TopTierRegisterAllocationData", %"class.v8::internal::compiler::TopTierRegisterAllocationData"* %6, i64 0, i32 12, i32 0, i32 0, i32 0
  %16 = load %"class.v8::internal::compiler::TopLevelLiveRange"**, %"class.v8::internal::compiler::TopLevelLiveRange"*** %15, align 8
  %17 = getelementptr inbounds %"class.v8::internal::compiler::TopLevelLiveRange"*, %"class.v8::internal::compiler::TopLevelLiveRange"** %16, i64 %14
  %18 = load %"class.v8::internal::compiler::TopLevelLiveRange"*, %"class.v8::internal::compiler::TopLevelLiveRange"** %17, align 8
  %19 = icmp eq %"class.v8::internal::compiler::TopLevelLiveRange"* %18, null
  br i1 %19, label %20, label %141

20:                                               ; preds = %4
  %21 = xor i32 %13, -1
  switch i8 %2, label %31 [
    i8 14, label %22
    i8 12, label %27
    i8 13, label %32
  ]

22:                                               ; preds = %20
  %23 = getelementptr inbounds %"class.v8::internal::RegisterConfiguration", %"class.v8::internal::RegisterConfiguration"* %8, i64 0, i32 2
  %24 = load i32, i32* %23, align 4
  %25 = shl nsw i32 %24, 1
  %26 = sub nsw i32 %21, %25
  br label %27

27:                                               ; preds = %20, %22
  %28 = phi i32 [ %26, %22 ], [ %21, %20 ]
  %29 = shl nsw i32 %10, 1
  %30 = sub nsw i32 %28, %29
  br label %32

31:                                               ; preds = %20
  tail call void (i8*, ...) @_Z8V8_FatalPKcz(i8* getelementptr inbounds ([17 x i8], [17 x i8]* @.str, i64 0, i64 0)) #17
  unreachable

32:                                               ; preds = %20, %27
  %33 = phi i32 [ %30, %27 ], [ %21, %20 ]
  %34 = getelementptr inbounds %"class.v8::internal::RegisterConfiguration", %"class.v8::internal::RegisterConfiguration"* %8, i64 0, i32 1
  %35 = load i32, i32* %34, align 8
  %36 = shl nsw i32 %35, 1
  %37 = sub nsw i32 %33, %36
  %38 = getelementptr inbounds %"class.v8::internal::compiler::TopTierRegisterAllocationData", %"class.v8::internal::compiler::TopTierRegisterAllocationData"* %6, i64 0, i32 1
  %39 = load %"class.v8::internal::Zone"*, %"class.v8::internal::Zone"** %38, align 8
  %40 = getelementptr inbounds %"class.v8::internal::Zone", %"class.v8::internal::Zone"* %39, i64 0, i32 2
  %41 = load i64, i64* %40, align 8
  %42 = getelementptr inbounds %"class.v8::internal::Zone", %"class.v8::internal::Zone"* %39, i64 0, i32 3
  %43 = load i64, i64* %42, align 8
  %44 = sub i64 %43, %41
  %45 = icmp ult i64 %44, 136
  br i1 %45, label %46, label %48, !prof !2

46:                                               ; preds = %32
  %47 = tail call i64 @_ZN2v88internal4Zone9NewExpandEm(%"class.v8::internal::Zone"* %39, i64 136) #16
  br label %50

48:                                               ; preds = %32
  %49 = add i64 %41, 136
  store i64 %49, i64* %40, align 8
  br label %50

50:                                               ; preds = %46, %48
  %51 = phi i64 [ %47, %46 ], [ %41, %48 ]
  %52 = inttoptr i64 %51 to %"class.v8::internal::compiler::TopLevelLiveRange"*
  %53 = getelementptr inbounds %"class.v8::internal::compiler::TopLevelLiveRange", %"class.v8::internal::compiler::TopLevelLiveRange"* %52, i64 0, i32 0, i32 0
  store i32 0, i32* %53, align 8
  %54 = getelementptr inbounds %"class.v8::internal::compiler::TopLevelLiveRange", %"class.v8::internal::compiler::TopLevelLiveRange"* %52, i64 0, i32 0, i32 1
  %55 = getelementptr inbounds %"class.v8::internal::compiler::TopLevelLiveRange", %"class.v8::internal::compiler::TopLevelLiveRange"* %52, i64 0, i32 0, i32 5
  %56 = getelementptr inbounds i32, i32* %54, i64 1
  %57 = bitcast i32* %56 to i8*
  tail call void @llvm.memset.p0i8.i64(i8* align 4 %57, i8 0, i64 24, i1 false) #16
  store %"class.v8::internal::compiler::TopLevelLiveRange"* %52, %"class.v8::internal::compiler::TopLevelLiveRange"** %55, align 8
  %58 = getelementptr inbounds %"class.v8::internal::compiler::TopLevelLiveRange", %"class.v8::internal::compiler::TopLevelLiveRange"* %52, i64 0, i32 0, i32 6
  %59 = getelementptr inbounds %"class.v8::internal::compiler::TopLevelLiveRange", %"class.v8::internal::compiler::TopLevelLiveRange"* %52, i64 0, i32 0, i32 11, i32 0
  %60 = bitcast %"class.v8::internal::compiler::LiveRange"** %58 to i8*
  tail call void @llvm.memset.p0i8.i64(i8* align 8 %60, i8 0, i64 40, i1 false) #16
  store i32 -1, i32* %59, align 4
  %61 = zext i8 %2 to i32
  %62 = shl nuw nsw i32 %61, 13
  %63 = or i32 %62, 134221824
  store i32 %63, i32* %54, align 4
  %64 = getelementptr inbounds %"class.v8::internal::compiler::TopLevelLiveRange", %"class.v8::internal::compiler::TopLevelLiveRange"* %52, i64 0, i32 1
  store i32 %37, i32* %64, align 4
  %65 = getelementptr inbounds %"class.v8::internal::compiler::TopLevelLiveRange", %"class.v8::internal::compiler::TopLevelLiveRange"* %52, i64 0, i32 2
  store i32 0, i32* %65, align 8
  %66 = getelementptr inbounds %"class.v8::internal::compiler::TopLevelLiveRange", %"class.v8::internal::compiler::TopLevelLiveRange"* %52, i64 0, i32 3, i32 0
  %67 = getelementptr inbounds %"class.v8::internal::compiler::TopLevelLiveRange", %"class.v8::internal::compiler::TopLevelLiveRange"* %52, i64 0, i32 7
  %68 = bitcast %"class.v8::internal::compiler::InstructionOperand"** %66 to i8*
  tail call void @llvm.memset.p0i8.i64(i8* align 8 %68, i8 0, i64 18, i1 false) #16
  store i32 2147483647, i32* %67, align 4
  %69 = getelementptr inbounds %"class.v8::internal::compiler::TopLevelLiveRange", %"class.v8::internal::compiler::TopLevelLiveRange"* %52, i64 0, i32 8
  store %"class.v8::internal::compiler::UsePosition"* null, %"class.v8::internal::compiler::UsePosition"** %69, align 8
  %70 = getelementptr inbounds %"class.v8::internal::compiler::TopLevelLiveRange", %"class.v8::internal::compiler::TopLevelLiveRange"* %52, i64 0, i32 9
  %71 = bitcast %"class.v8::internal::compiler::LiveRange"** %70 to %"class.v8::internal::compiler::TopLevelLiveRange"**
  store %"class.v8::internal::compiler::TopLevelLiveRange"* %52, %"class.v8::internal::compiler::TopLevelLiveRange"** %71, align 8
  %72 = inttoptr i64 %51 to %"class.v8::internal::compiler::LiveRange"*
  %73 = getelementptr inbounds %"class.v8::internal::compiler::LiveRange", %"class.v8::internal::compiler::LiveRange"* %72, i64 0, i32 1
  %74 = load i32, i32* %73, align 4
  %75 = and i32 %74, -8065
  %76 = shl i32 %1, 7
  %77 = or i32 %75, %76
  store i32 %77, i32* %73, align 4
  %78 = load %"class.v8::internal::compiler::TopTierRegisterAllocationData"*, %"class.v8::internal::compiler::TopTierRegisterAllocationData"** %5, align 8
  switch i8 %2, label %111 [
    i8 12, label %79
    i8 14, label %79
    i8 13, label %95
  ]

79:                                               ; preds = %50, %50
  %80 = getelementptr inbounds %"class.v8::internal::compiler::TopTierRegisterAllocationData", %"class.v8::internal::compiler::TopTierRegisterAllocationData"* %78, i64 0, i32 17
  %81 = load %"class.v8::internal::BitVector"*, %"class.v8::internal::BitVector"** %80, align 8
  %82 = getelementptr inbounds %"class.v8::internal::BitVector", %"class.v8::internal::BitVector"* %81, i64 0, i32 1
  %83 = load i32, i32* %82, align 4
  %84 = icmp eq i32 %83, 1
  br i1 %84, label %85, label %88

85:                                               ; preds = %79
  %86 = getelementptr inbounds %"class.v8::internal::BitVector", %"class.v8::internal::BitVector"* %81, i64 0, i32 2
  %87 = bitcast %"union.v8::internal::BitVector::DataStorage"* %86 to i64*
  br label %127

88:                                               ; preds = %79
  %89 = srem i32 %1, 64
  %90 = getelementptr inbounds %"class.v8::internal::BitVector", %"class.v8::internal::BitVector"* %81, i64 0, i32 2, i32 0
  %91 = load i64*, i64** %90, align 8
  %92 = sdiv i32 %1, 64
  %93 = sext i32 %92 to i64
  %94 = getelementptr inbounds i64, i64* %91, i64 %93
  br label %127

95:                                               ; preds = %50
  %96 = getelementptr inbounds %"class.v8::internal::compiler::TopTierRegisterAllocationData", %"class.v8::internal::compiler::TopTierRegisterAllocationData"* %78, i64 0, i32 17
  %97 = load %"class.v8::internal::BitVector"*, %"class.v8::internal::BitVector"** %96, align 8
  %98 = getelementptr inbounds %"class.v8::internal::BitVector", %"class.v8::internal::BitVector"* %97, i64 0, i32 1
  %99 = load i32, i32* %98, align 4
  %100 = icmp eq i32 %99, 1
  br i1 %100, label %101, label %104

101:                                              ; preds = %95
  %102 = getelementptr inbounds %"class.v8::internal::BitVector", %"class.v8::internal::BitVector"* %97, i64 0, i32 2
  %103 = bitcast %"union.v8::internal::BitVector::DataStorage"* %102 to i64*
  br label %127

104:                                              ; preds = %95
  %105 = srem i32 %1, 64
  %106 = getelementptr inbounds %"class.v8::internal::BitVector", %"class.v8::internal::BitVector"* %97, i64 0, i32 2, i32 0
  %107 = load i64*, i64** %106, align 8
  %108 = sdiv i32 %1, 64
  %109 = sext i32 %108 to i64
  %110 = getelementptr inbounds i64, i64* %107, i64 %109
  br label %127

111:                                              ; preds = %50
  %112 = getelementptr inbounds %"class.v8::internal::compiler::TopTierRegisterAllocationData", %"class.v8::internal::compiler::TopTierRegisterAllocationData"* %78, i64 0, i32 16
  %113 = load %"class.v8::internal::BitVector"*, %"class.v8::internal::BitVector"** %112, align 8
  %114 = getelementptr inbounds %"class.v8::internal::BitVector", %"class.v8::internal::BitVector"* %113, i64 0, i32 1
  %115 = load i32, i32* %114, align 4
  %116 = icmp eq i32 %115, 1
  br i1 %116, label %117, label %120

117:                                              ; preds = %111
  %118 = getelementptr inbounds %"class.v8::internal::BitVector", %"class.v8::internal::BitVector"* %113, i64 0, i32 2
  %119 = bitcast %"union.v8::internal::BitVector::DataStorage"* %118 to i64*
  br label %127

120:                                              ; preds = %111
  %121 = srem i32 %1, 64
  %122 = getelementptr inbounds %"class.v8::internal::BitVector", %"class.v8::internal::BitVector"* %113, i64 0, i32 2, i32 0
  %123 = load i64*, i64** %122, align 8
  %124 = sdiv i32 %1, 64
  %125 = sext i32 %124 to i64
  %126 = getelementptr inbounds i64, i64* %123, i64 %125
  br label %127

127:                                              ; preds = %85, %88, %101, %104, %117, %120
  %128 = phi i64* [ %87, %85 ], [ %94, %88 ], [ %103, %101 ], [ %110, %104 ], [ %119, %117 ], [ %126, %120 ]
  %129 = phi i32 [ %1, %85 ], [ %89, %88 ], [ %1, %101 ], [ %105, %104 ], [ %1, %117 ], [ %121, %120 ]
  %130 = zext i32 %129 to i64
  %131 = shl i64 1, %130
  %132 = load i64, i64* %128, align 8
  %133 = or i64 %132, %131
  store i64 %133, i64* %128, align 8
  %134 = icmp eq i32 %3, 1
  br i1 %134, label %135, label %138

135:                                              ; preds = %127
  %136 = load i32, i32* %54, align 4
  %137 = or i32 %136, 268435456
  store i32 %137, i32* %54, align 4
  br label %138

138:                                              ; preds = %135, %127
  %139 = load %"class.v8::internal::compiler::TopLevelLiveRange"**, %"class.v8::internal::compiler::TopLevelLiveRange"*** %15, align 8
  %140 = getelementptr inbounds %"class.v8::internal::compiler::TopLevelLiveRange"*, %"class.v8::internal::compiler::TopLevelLiveRange"** %139, i64 %14
  store %"class.v8::internal::compiler::TopLevelLiveRange"* %52, %"class.v8::internal::compiler::TopLevelLiveRange"** %140, align 8
  br label %141

141:                                              ; preds = %138, %4
  %142 = phi %"class.v8::internal::compiler::TopLevelLiveRange"* [ %52, %138 ], [ %18, %4 ]
  ret %"class.v8::internal::compiler::TopLevelLiveRange"* %142
}

; Function Attrs: nounwind ssp uwtable
define hidden %"class.v8::internal::compiler::TopLevelLiveRange"* @_ZN2v88internal8compiler16LiveRangeBuilder12LiveRangeForEPNS1_18InstructionOperandENS1_29TopTierRegisterAllocationData9SpillModeE(%"class.v8::internal::compiler::LiveRangeBuilder"* nocapture readonly, %"class.v8::internal::compiler::InstructionOperand"* nocapture readonly, i32) local_unnamed_addr #0 align 2 {
  %4 = getelementptr inbounds %"class.v8::internal::compiler::InstructionOperand", %"class.v8::internal::compiler::InstructionOperand"* %1, i64 0, i32 0
  %5 = load i64, i64* %4, align 8
  %6 = and i64 %5, 7
  switch i64 %6, label %19 [
    i64 1, label %7
    i64 2, label %13
  ]

7:                                                ; preds = %3
  %8 = getelementptr inbounds %"class.v8::internal::compiler::LiveRangeBuilder", %"class.v8::internal::compiler::LiveRangeBuilder"* %0, i64 0, i32 0
  %9 = load %"class.v8::internal::compiler::TopTierRegisterAllocationData"*, %"class.v8::internal::compiler::TopTierRegisterAllocationData"** %8, align 8
  %10 = lshr i64 %5, 3
  %11 = trunc i64 %10 to i32
  %12 = tail call %"class.v8::internal::compiler::TopLevelLiveRange"* @_ZN2v88internal8compiler29TopTierRegisterAllocationData23GetOrCreateLiveRangeForEi(%"class.v8::internal::compiler::TopTierRegisterAllocationData"* %9, i32 %11)
  br label %34

13:                                               ; preds = %3
  %14 = getelementptr inbounds %"class.v8::internal::compiler::LiveRangeBuilder", %"class.v8::internal::compiler::LiveRangeBuilder"* %0, i64 0, i32 0
  %15 = load %"class.v8::internal::compiler::TopTierRegisterAllocationData"*, %"class.v8::internal::compiler::TopTierRegisterAllocationData"** %14, align 8
  %16 = lshr i64 %5, 3
  %17 = trunc i64 %16 to i32
  %18 = tail call %"class.v8::internal::compiler::TopLevelLiveRange"* @_ZN2v88internal8compiler29TopTierRegisterAllocationData23GetOrCreateLiveRangeForEi(%"class.v8::internal::compiler::TopTierRegisterAllocationData"* %15, i32 %17)
  br label %34

19:                                               ; preds = %3
  %20 = icmp ugt i64 %6, 4
  %21 = and i64 %5, 24
  %22 = icmp eq i64 %21, 0
  %23 = and i1 %20, %22
  br i1 %23, label %24, label %34

24:                                               ; preds = %19
  %25 = lshr i64 %5, 5
  %26 = trunc i64 %25 to i8
  %27 = icmp ult i8 %26, 12
  %28 = ashr i64 %5, 35
  %29 = trunc i64 %28 to i32
  br i1 %27, label %30, label %32

30:                                               ; preds = %24
  %31 = tail call %"class.v8::internal::compiler::TopLevelLiveRange"* @_ZN2v88internal8compiler16LiveRangeBuilder17FixedLiveRangeForEiNS1_29TopTierRegisterAllocationData9SpillModeE(%"class.v8::internal::compiler::LiveRangeBuilder"* %0, i32 %29, i32 %2)
  br label %34

32:                                               ; preds = %24
  %33 = tail call %"class.v8::internal::compiler::TopLevelLiveRange"* @_ZN2v88internal8compiler16LiveRangeBuilder19FixedFPLiveRangeForEiNS0_21MachineRepresentationENS1_29TopTierRegisterAllocationData9SpillModeE(%"class.v8::internal::compiler::LiveRangeBuilder"* %0, i32 %29, i8 zeroext %26, i32 %2)
  br label %34

34:                                               ; preds = %19, %32, %30, %13, %7
  %35 = phi %"class.v8::internal::compiler::TopLevelLiveRange"* [ %12, %7 ], [ %18, %13 ], [ %31, %30 ], [ %33, %32 ], [ null, %19 ]
  ret %"class.v8::internal::compiler::TopLevelLiveRange"* %35
}

; Function Attrs: nounwind ssp uwtable
define hidden %"class.v8::internal::compiler::UsePosition"* @_ZN2v88internal8compiler16LiveRangeBuilder14NewUsePositionENS1_16LifetimePositionEPNS1_18InstructionOperandEPvNS1_19UsePositionHintTypeE(%"class.v8::internal::compiler::LiveRangeBuilder"* nocapture readonly, i32, %"class.v8::internal::compiler::InstructionOperand"*, i8*, i8 zeroext) local_unnamed_addr #0 align 2 {
  %6 = ptrtoint i8* %3 to i64
  %7 = getelementptr inbounds %"class.v8::internal::compiler::LiveRangeBuilder", %"class.v8::internal::compiler::LiveRangeBuilder"* %0, i64 0, i32 0
  %8 = load %"class.v8::internal::compiler::TopTierRegisterAllocationData"*, %"class.v8::internal::compiler::TopTierRegisterAllocationData"** %7, align 8
  %9 = getelementptr inbounds %"class.v8::internal::compiler::TopTierRegisterAllocationData", %"class.v8::internal::compiler::TopTierRegisterAllocationData"* %8, i64 0, i32 1
  %10 = load %"class.v8::internal::Zone"*, %"class.v8::internal::Zone"** %9, align 8
  %11 = getelementptr inbounds %"class.v8::internal::Zone", %"class.v8::internal::Zone"* %10, i64 0, i32 2
  %12 = load i64, i64* %11, align 8
  %13 = getelementptr inbounds %"class.v8::internal::Zone", %"class.v8::internal::Zone"* %10, i64 0, i32 3
  %14 = load i64, i64* %13, align 8
  %15 = sub i64 %14, %12
  %16 = icmp ult i64 %15, 32
  br i1 %16, label %17, label %19, !prof !2

17:                                               ; preds = %5
  %18 = tail call i64 @_ZN2v88internal4Zone9NewExpandEm(%"class.v8::internal::Zone"* %10, i64 32) #16
  br label %21

19:                                               ; preds = %5
  %20 = add i64 %12, 32
  store i64 %20, i64* %11, align 8
  br label %21

21:                                               ; preds = %19, %17
  %22 = phi i64 [ %18, %17 ], [ %12, %19 ]
  %23 = inttoptr i64 %22 to %"class.v8::internal::compiler::UsePosition"*
  %24 = getelementptr inbounds %"class.v8::internal::compiler::UsePosition", %"class.v8::internal::compiler::UsePosition"* %23, i64 0, i32 0
  store %"class.v8::internal::compiler::InstructionOperand"* %2, %"class.v8::internal::compiler::InstructionOperand"** %24, align 8
  %25 = getelementptr inbounds %"class.v8::internal::compiler::UsePosition", %"class.v8::internal::compiler::UsePosition"* %23, i64 0, i32 1
  %26 = bitcast i8** %25 to i64*
  store i64 %6, i64* %26, align 8
  %27 = getelementptr inbounds %"class.v8::internal::compiler::UsePosition", %"class.v8::internal::compiler::UsePosition"* %23, i64 0, i32 2
  store %"class.v8::internal::compiler::UsePosition"* null, %"class.v8::internal::compiler::UsePosition"** %27, align 8
  %28 = getelementptr inbounds %"class.v8::internal::compiler::UsePosition", %"class.v8::internal::compiler::UsePosition"* %23, i64 0, i32 3, i32 0
  store i32 %1, i32* %28, align 8
  %29 = getelementptr inbounds %"class.v8::internal::compiler::UsePosition", %"class.v8::internal::compiler::UsePosition"* %23, i64 0, i32 4
  store i32 0, i32* %29, align 4
  %30 = icmp eq %"class.v8::internal::compiler::InstructionOperand"* %2, null
  br i1 %30, label %44, label %31

31:                                               ; preds = %21
  %32 = getelementptr inbounds %"class.v8::internal::compiler::InstructionOperand", %"class.v8::internal::compiler::InstructionOperand"* %2, i64 0, i32 0
  %33 = load i64, i64* %32, align 8
  %34 = and i64 %33, 7
  %35 = icmp eq i64 %34, 1
  br i1 %35, label %36, label %44

36:                                               ; preds = %31
  %37 = and i64 %33, 515396075520
  switch i64 %37, label %38 [
    i64 377957122048, label %44
    i64 446676598784, label %42
    i64 171798691840, label %43
  ]

38:                                               ; preds = %36
  %39 = icmp ne i64 %37, 103079215104
  %40 = zext i1 %39 to i32
  %41 = shl nuw nsw i32 %40, 5
  br label %44

42:                                               ; preds = %36
  br label %44

43:                                               ; preds = %36
  br label %44

44:                                               ; preds = %21, %31, %36, %38, %42, %43
  %45 = phi i32 [ 0, %31 ], [ 0, %21 ], [ 0, %38 ], [ 2, %36 ], [ 3, %42 ], [ 1, %43 ]
  %46 = phi i32 [ 32, %31 ], [ 32, %21 ], [ %41, %38 ], [ 32, %36 ], [ 0, %42 ], [ 0, %43 ]
  %47 = zext i8 %4 to i32
  %48 = shl nuw nsw i32 %47, 2
  %49 = or i32 %48, %45
  %50 = or i32 %49, %46
  %51 = or i32 %50, 2048
  store i32 %51, i32* %29, align 4
  ret %"class.v8::internal::compiler::UsePosition"* %23
}

; Function Attrs: nounwind ssp uwtable
define hidden %"class.v8::internal::compiler::UsePosition"* @_ZN2v88internal8compiler16LiveRangeBuilder6DefineENS1_16LifetimePositionEPNS1_18InstructionOperandEPvNS1_19UsePositionHintTypeENS1_29TopTierRegisterAllocationData9SpillModeE(%"class.v8::internal::compiler::LiveRangeBuilder"* nocapture readonly, i32, %"class.v8::internal::compiler::InstructionOperand"*, i8*, i8 zeroext, i32) local_unnamed_addr #0 align 2 {
  %7 = getelementptr inbounds %"class.v8::internal::compiler::InstructionOperand", %"class.v8::internal::compiler::InstructionOperand"* %2, i64 0, i32 0
  %8 = load i64, i64* %7, align 8
  %9 = and i64 %8, 7
  switch i64 %9, label %22 [
    i64 1, label %10
    i64 2, label %16
  ]

10:                                               ; preds = %6
  %11 = getelementptr inbounds %"class.v8::internal::compiler::LiveRangeBuilder", %"class.v8::internal::compiler::LiveRangeBuilder"* %0, i64 0, i32 0
  %12 = load %"class.v8::internal::compiler::TopTierRegisterAllocationData"*, %"class.v8::internal::compiler::TopTierRegisterAllocationData"** %11, align 8
  %13 = lshr i64 %8, 3
  %14 = trunc i64 %13 to i32
  %15 = tail call %"class.v8::internal::compiler::TopLevelLiveRange"* @_ZN2v88internal8compiler29TopTierRegisterAllocationData23GetOrCreateLiveRangeForEi(%"class.v8::internal::compiler::TopTierRegisterAllocationData"* %12, i32 %14) #16
  br label %37

16:                                               ; preds = %6
  %17 = getelementptr inbounds %"class.v8::internal::compiler::LiveRangeBuilder", %"class.v8::internal::compiler::LiveRangeBuilder"* %0, i64 0, i32 0
  %18 = load %"class.v8::internal::compiler::TopTierRegisterAllocationData"*, %"class.v8::internal::compiler::TopTierRegisterAllocationData"** %17, align 8
  %19 = lshr i64 %8, 3
  %20 = trunc i64 %19 to i32
  %21 = tail call %"class.v8::internal::compiler::TopLevelLiveRange"* @_ZN2v88internal8compiler29TopTierRegisterAllocationData23GetOrCreateLiveRangeForEi(%"class.v8::internal::compiler::TopTierRegisterAllocationData"* %18, i32 %20) #16
  br label %37

22:                                               ; preds = %6
  %23 = icmp ugt i64 %9, 4
  %24 = and i64 %8, 24
  %25 = icmp eq i64 %24, 0
  %26 = and i1 %23, %25
  br i1 %26, label %27, label %152

27:                                               ; preds = %22
  %28 = lshr i64 %8, 5
  %29 = trunc i64 %28 to i8
  %30 = icmp ult i8 %29, 12
  %31 = ashr i64 %8, 35
  %32 = trunc i64 %31 to i32
  br i1 %30, label %33, label %35

33:                                               ; preds = %27
  %34 = tail call %"class.v8::internal::compiler::TopLevelLiveRange"* @_ZN2v88internal8compiler16LiveRangeBuilder17FixedLiveRangeForEiNS1_29TopTierRegisterAllocationData9SpillModeE(%"class.v8::internal::compiler::LiveRangeBuilder"* %0, i32 %32, i32 %5) #16
  br label %37

35:                                               ; preds = %27
  %36 = tail call %"class.v8::internal::compiler::TopLevelLiveRange"* @_ZN2v88internal8compiler16LiveRangeBuilder19FixedFPLiveRangeForEiNS0_21MachineRepresentationENS1_29TopTierRegisterAllocationData9SpillModeE(%"class.v8::internal::compiler::LiveRangeBuilder"* %0, i32 %32, i8 zeroext %29, i32 %5) #16
  br label %37

37:                                               ; preds = %10, %16, %33, %35
  %38 = phi %"class.v8::internal::compiler::TopLevelLiveRange"* [ %15, %10 ], [ %21, %16 ], [ %34, %33 ], [ %36, %35 ]
  %39 = icmp eq %"class.v8::internal::compiler::TopLevelLiveRange"* %38, null
  br i1 %39, label %152, label %40

40:                                               ; preds = %37
  %41 = getelementptr inbounds %"class.v8::internal::compiler::TopLevelLiveRange", %"class.v8::internal::compiler::TopLevelLiveRange"* %38, i64 0, i32 0, i32 3
  %42 = load %"class.v8::internal::compiler::UseInterval"*, %"class.v8::internal::compiler::UseInterval"** %41, align 8
  %43 = icmp eq %"class.v8::internal::compiler::UseInterval"* %42, null
  br i1 %43, label %48, label %44

44:                                               ; preds = %40
  %45 = getelementptr inbounds %"class.v8::internal::compiler::UseInterval", %"class.v8::internal::compiler::UseInterval"* %42, i64 0, i32 0, i32 0
  %46 = load i32, i32* %45, align 8
  %47 = icmp sgt i32 %46, %1
  br i1 %47, label %48, label %83

48:                                               ; preds = %40, %44
  %49 = add i32 %1, 2
  %50 = and i32 %49, -2
  %51 = getelementptr inbounds %"class.v8::internal::compiler::LiveRangeBuilder", %"class.v8::internal::compiler::LiveRangeBuilder"* %0, i64 0, i32 0
  %52 = load %"class.v8::internal::compiler::TopTierRegisterAllocationData"*, %"class.v8::internal::compiler::TopTierRegisterAllocationData"** %51, align 8
  %53 = getelementptr inbounds %"class.v8::internal::compiler::TopTierRegisterAllocationData", %"class.v8::internal::compiler::TopTierRegisterAllocationData"* %52, i64 0, i32 1
  %54 = load %"class.v8::internal::Zone"*, %"class.v8::internal::Zone"** %53, align 8
  %55 = getelementptr inbounds %"class.v8::internal::compiler::TopTierRegisterAllocationData", %"class.v8::internal::compiler::TopTierRegisterAllocationData"* %52, i64 0, i32 23, i32 0
  %56 = load i32, i32* %55, align 4
  %57 = and i32 %56, 1
  %58 = icmp ne i32 %57, 0
  tail call void @_ZN2v88internal8compiler17TopLevelLiveRange14AddUseIntervalENS1_16LifetimePositionES3_PNS0_4ZoneEb(%"class.v8::internal::compiler::TopLevelLiveRange"* nonnull %38, i32 %1, i32 %50, %"class.v8::internal::Zone"* %54, i1 zeroext %58)
  %59 = load %"class.v8::internal::compiler::TopTierRegisterAllocationData"*, %"class.v8::internal::compiler::TopTierRegisterAllocationData"** %51, align 8
  %60 = getelementptr inbounds %"class.v8::internal::compiler::TopTierRegisterAllocationData", %"class.v8::internal::compiler::TopTierRegisterAllocationData"* %59, i64 0, i32 1
  %61 = load %"class.v8::internal::Zone"*, %"class.v8::internal::Zone"** %60, align 8
  %62 = getelementptr inbounds %"class.v8::internal::Zone", %"class.v8::internal::Zone"* %61, i64 0, i32 2
  %63 = load i64, i64* %62, align 8
  %64 = getelementptr inbounds %"class.v8::internal::Zone", %"class.v8::internal::Zone"* %61, i64 0, i32 3
  %65 = load i64, i64* %64, align 8
  %66 = sub i64 %65, %63
  %67 = icmp ult i64 %66, 32
  br i1 %67, label %68, label %70, !prof !2

68:                                               ; preds = %48
  %69 = tail call i64 @_ZN2v88internal4Zone9NewExpandEm(%"class.v8::internal::Zone"* %61, i64 32) #16
  br label %72

70:                                               ; preds = %48
  %71 = add i64 %63, 32
  store i64 %71, i64* %62, align 8
  br label %72

72:                                               ; preds = %68, %70
  %73 = phi i64 [ %69, %68 ], [ %63, %70 ]
  %74 = inttoptr i64 %73 to %"class.v8::internal::compiler::UsePosition"*
  %75 = getelementptr inbounds %"class.v8::internal::compiler::UsePosition", %"class.v8::internal::compiler::UsePosition"* %74, i64 0, i32 3, i32 0
  %76 = inttoptr i64 %73 to i8*
  tail call void @llvm.memset.p0i8.i64(i8* align 8 %76, i8 0, i64 24, i1 false) #16
  store i32 %50, i32* %75, align 8
  %77 = getelementptr inbounds %"class.v8::internal::compiler::UsePosition", %"class.v8::internal::compiler::UsePosition"* %74, i64 0, i32 4
  store i32 2080, i32* %77, align 4
  %78 = load %"class.v8::internal::compiler::TopTierRegisterAllocationData"*, %"class.v8::internal::compiler::TopTierRegisterAllocationData"** %51, align 8
  %79 = getelementptr inbounds %"class.v8::internal::compiler::TopTierRegisterAllocationData", %"class.v8::internal::compiler::TopTierRegisterAllocationData"* %78, i64 0, i32 23, i32 0
  %80 = load i32, i32* %79, align 4
  %81 = and i32 %80, 1
  %82 = icmp ne i32 %81, 0
  tail call void @_ZN2v88internal8compiler17TopLevelLiveRange14AddUsePositionEPNS1_11UsePositionEb(%"class.v8::internal::compiler::TopLevelLiveRange"* nonnull %38, %"class.v8::internal::compiler::UsePosition"* %74, i1 zeroext %82)
  br label %97

83:                                               ; preds = %44
  %84 = getelementptr inbounds %"class.v8::internal::compiler::LiveRangeBuilder", %"class.v8::internal::compiler::LiveRangeBuilder"* %0, i64 0, i32 0
  %85 = load %"class.v8::internal::compiler::TopTierRegisterAllocationData"*, %"class.v8::internal::compiler::TopTierRegisterAllocationData"** %84, align 8
  %86 = getelementptr inbounds %"class.v8::internal::compiler::TopTierRegisterAllocationData", %"class.v8::internal::compiler::TopTierRegisterAllocationData"* %85, i64 0, i32 23, i32 0
  %87 = load i32, i32* %86, align 4
  %88 = and i32 %87, 1
  %89 = icmp eq i32 %88, 0
  br i1 %89, label %94, label %90

90:                                               ; preds = %83
  %91 = getelementptr inbounds %"class.v8::internal::compiler::TopLevelLiveRange", %"class.v8::internal::compiler::TopLevelLiveRange"* %38, i64 0, i32 1
  %92 = load i32, i32* %91, align 4
  tail call void (i8*, ...) @_ZN2v88internal6PrintFEPKcz(i8* getelementptr inbounds ([30 x i8], [30 x i8]* @.str.5, i64 0, i64 0), i32 %92, i32 %1) #16
  %93 = load %"class.v8::internal::compiler::UseInterval"*, %"class.v8::internal::compiler::UseInterval"** %41, align 8
  br label %94

94:                                               ; preds = %83, %90
  %95 = phi %"class.v8::internal::compiler::UseInterval"* [ %42, %83 ], [ %93, %90 ]
  %96 = getelementptr inbounds %"class.v8::internal::compiler::UseInterval", %"class.v8::internal::compiler::UseInterval"* %95, i64 0, i32 0, i32 0
  store i32 %1, i32* %96, align 8
  br label %97

97:                                               ; preds = %94, %72
  %98 = load i64, i64* %7, align 8
  %99 = and i64 %98, 7
  %100 = icmp eq i64 %99, 1
  br i1 %100, label %101, label %152

101:                                              ; preds = %97
  %102 = ptrtoint i8* %3 to i64
  %103 = getelementptr inbounds %"class.v8::internal::compiler::LiveRangeBuilder", %"class.v8::internal::compiler::LiveRangeBuilder"* %0, i64 0, i32 0
  %104 = load %"class.v8::internal::compiler::TopTierRegisterAllocationData"*, %"class.v8::internal::compiler::TopTierRegisterAllocationData"** %103, align 8
  %105 = getelementptr inbounds %"class.v8::internal::compiler::TopTierRegisterAllocationData", %"class.v8::internal::compiler::TopTierRegisterAllocationData"* %104, i64 0, i32 1
  %106 = load %"class.v8::internal::Zone"*, %"class.v8::internal::Zone"** %105, align 8
  %107 = getelementptr inbounds %"class.v8::internal::Zone", %"class.v8::internal::Zone"* %106, i64 0, i32 2
  %108 = load i64, i64* %107, align 8
  %109 = getelementptr inbounds %"class.v8::internal::Zone", %"class.v8::internal::Zone"* %106, i64 0, i32 3
  %110 = load i64, i64* %109, align 8
  %111 = sub i64 %110, %108
  %112 = icmp ult i64 %111, 32
  br i1 %112, label %113, label %115, !prof !2

113:                                              ; preds = %101
  %114 = tail call i64 @_ZN2v88internal4Zone9NewExpandEm(%"class.v8::internal::Zone"* %106, i64 32) #16
  br label %117

115:                                              ; preds = %101
  %116 = add i64 %108, 32
  store i64 %116, i64* %107, align 8
  br label %117

117:                                              ; preds = %115, %113
  %118 = phi i64 [ %114, %113 ], [ %108, %115 ]
  %119 = inttoptr i64 %118 to %"class.v8::internal::compiler::UsePosition"*
  %120 = getelementptr inbounds %"class.v8::internal::compiler::UsePosition", %"class.v8::internal::compiler::UsePosition"* %119, i64 0, i32 0
  store %"class.v8::internal::compiler::InstructionOperand"* %2, %"class.v8::internal::compiler::InstructionOperand"** %120, align 8
  %121 = getelementptr inbounds %"class.v8::internal::compiler::UsePosition", %"class.v8::internal::compiler::UsePosition"* %119, i64 0, i32 1
  %122 = bitcast i8** %121 to i64*
  store i64 %102, i64* %122, align 8
  %123 = getelementptr inbounds %"class.v8::internal::compiler::UsePosition", %"class.v8::internal::compiler::UsePosition"* %119, i64 0, i32 2
  store %"class.v8::internal::compiler::UsePosition"* null, %"class.v8::internal::compiler::UsePosition"** %123, align 8
  %124 = getelementptr inbounds %"class.v8::internal::compiler::UsePosition", %"class.v8::internal::compiler::UsePosition"* %119, i64 0, i32 3, i32 0
  store i32 %1, i32* %124, align 8
  %125 = getelementptr inbounds %"class.v8::internal::compiler::UsePosition", %"class.v8::internal::compiler::UsePosition"* %119, i64 0, i32 4
  store i32 0, i32* %125, align 4
  %126 = icmp eq %"class.v8::internal::compiler::InstructionOperand"* %2, null
  br i1 %126, label %139, label %127

127:                                              ; preds = %117
  %128 = load i64, i64* %7, align 8
  %129 = and i64 %128, 7
  %130 = icmp eq i64 %129, 1
  br i1 %130, label %131, label %139

131:                                              ; preds = %127
  %132 = and i64 %128, 515396075520
  switch i64 %132, label %133 [
    i64 377957122048, label %139
    i64 446676598784, label %137
    i64 171798691840, label %138
  ]

133:                                              ; preds = %131
  %134 = icmp ne i64 %132, 103079215104
  %135 = zext i1 %134 to i32
  %136 = shl nuw nsw i32 %135, 5
  br label %139

137:                                              ; preds = %131
  br label %139

138:                                              ; preds = %131
  br label %139

139:                                              ; preds = %117, %127, %131, %133, %137, %138
  %140 = phi i32 [ 0, %127 ], [ 0, %117 ], [ 0, %133 ], [ 2, %131 ], [ 3, %137 ], [ 1, %138 ]
  %141 = phi i32 [ 32, %127 ], [ 32, %117 ], [ %136, %133 ], [ 32, %131 ], [ 0, %137 ], [ 0, %138 ]
  %142 = zext i8 %4 to i32
  %143 = shl nuw nsw i32 %142, 2
  %144 = or i32 %143, %140
  %145 = or i32 %144, %141
  %146 = or i32 %145, 2048
  store i32 %146, i32* %125, align 4
  %147 = load %"class.v8::internal::compiler::TopTierRegisterAllocationData"*, %"class.v8::internal::compiler::TopTierRegisterAllocationData"** %103, align 8
  %148 = getelementptr inbounds %"class.v8::internal::compiler::TopTierRegisterAllocationData", %"class.v8::internal::compiler::TopTierRegisterAllocationData"* %147, i64 0, i32 23, i32 0
  %149 = load i32, i32* %148, align 4
  %150 = and i32 %149, 1
  %151 = icmp ne i32 %150, 0
  tail call void @_ZN2v88internal8compiler17TopLevelLiveRange14AddUsePositionEPNS1_11UsePositionEb(%"class.v8::internal::compiler::TopLevelLiveRange"* nonnull %38, %"class.v8::internal::compiler::UsePosition"* %119, i1 zeroext %151)
  br label %152

152:                                              ; preds = %22, %97, %37, %139
  %153 = phi %"class.v8::internal::compiler::UsePosition"* [ %119, %139 ], [ null, %37 ], [ null, %97 ], [ null, %22 ]
  ret %"class.v8::internal::compiler::UsePosition"* %153
}

; Function Attrs: nounwind ssp uwtable
define hidden %"class.v8::internal::compiler::UsePosition"* @_ZN2v88internal8compiler16LiveRangeBuilder3UseENS1_16LifetimePositionES3_PNS1_18InstructionOperandEPvNS1_19UsePositionHintTypeENS1_29TopTierRegisterAllocationData9SpillModeE(%"class.v8::internal::compiler::LiveRangeBuilder"* nocapture readonly, i32, i32, %"class.v8::internal::compiler::InstructionOperand"*, i8*, i8 zeroext, i32) local_unnamed_addr #0 align 2 {
  %8 = getelementptr inbounds %"class.v8::internal::compiler::InstructionOperand", %"class.v8::internal::compiler::InstructionOperand"* %3, i64 0, i32 0
  %9 = load i64, i64* %8, align 8
  %10 = and i64 %9, 7
  switch i64 %10, label %23 [
    i64 1, label %11
    i64 2, label %17
  ]

11:                                               ; preds = %7
  %12 = getelementptr inbounds %"class.v8::internal::compiler::LiveRangeBuilder", %"class.v8::internal::compiler::LiveRangeBuilder"* %0, i64 0, i32 0
  %13 = load %"class.v8::internal::compiler::TopTierRegisterAllocationData"*, %"class.v8::internal::compiler::TopTierRegisterAllocationData"** %12, align 8
  %14 = lshr i64 %9, 3
  %15 = trunc i64 %14 to i32
  %16 = tail call %"class.v8::internal::compiler::TopLevelLiveRange"* @_ZN2v88internal8compiler29TopTierRegisterAllocationData23GetOrCreateLiveRangeForEi(%"class.v8::internal::compiler::TopTierRegisterAllocationData"* %13, i32 %15) #16
  br label %38

17:                                               ; preds = %7
  %18 = getelementptr inbounds %"class.v8::internal::compiler::LiveRangeBuilder", %"class.v8::internal::compiler::LiveRangeBuilder"* %0, i64 0, i32 0
  %19 = load %"class.v8::internal::compiler::TopTierRegisterAllocationData"*, %"class.v8::internal::compiler::TopTierRegisterAllocationData"** %18, align 8
  %20 = lshr i64 %9, 3
  %21 = trunc i64 %20 to i32
  %22 = tail call %"class.v8::internal::compiler::TopLevelLiveRange"* @_ZN2v88internal8compiler29TopTierRegisterAllocationData23GetOrCreateLiveRangeForEi(%"class.v8::internal::compiler::TopTierRegisterAllocationData"* %19, i32 %21) #16
  br label %38

23:                                               ; preds = %7
  %24 = icmp ugt i64 %10, 4
  %25 = and i64 %9, 24
  %26 = icmp eq i64 %25, 0
  %27 = and i1 %24, %26
  br i1 %27, label %28, label %106

28:                                               ; preds = %23
  %29 = lshr i64 %9, 5
  %30 = trunc i64 %29 to i8
  %31 = icmp ult i8 %30, 12
  %32 = ashr i64 %9, 35
  %33 = trunc i64 %32 to i32
  br i1 %31, label %34, label %36

34:                                               ; preds = %28
  %35 = tail call %"class.v8::internal::compiler::TopLevelLiveRange"* @_ZN2v88internal8compiler16LiveRangeBuilder17FixedLiveRangeForEiNS1_29TopTierRegisterAllocationData9SpillModeE(%"class.v8::internal::compiler::LiveRangeBuilder"* %0, i32 %33, i32 %6) #16
  br label %38

36:                                               ; preds = %28
  %37 = tail call %"class.v8::internal::compiler::TopLevelLiveRange"* @_ZN2v88internal8compiler16LiveRangeBuilder19FixedFPLiveRangeForEiNS0_21MachineRepresentationENS1_29TopTierRegisterAllocationData9SpillModeE(%"class.v8::internal::compiler::LiveRangeBuilder"* %0, i32 %33, i8 zeroext %30, i32 %6) #16
  br label %38

38:                                               ; preds = %11, %17, %34, %36
  %39 = phi %"class.v8::internal::compiler::TopLevelLiveRange"* [ %16, %11 ], [ %22, %17 ], [ %35, %34 ], [ %37, %36 ]
  %40 = icmp eq %"class.v8::internal::compiler::TopLevelLiveRange"* %39, null
  br i1 %40, label %106, label %41

41:                                               ; preds = %38
  %42 = load i64, i64* %8, align 8
  %43 = and i64 %42, 7
  %44 = icmp eq i64 %43, 1
  br i1 %44, label %45, label %96

45:                                               ; preds = %41
  %46 = ptrtoint i8* %4 to i64
  %47 = getelementptr inbounds %"class.v8::internal::compiler::LiveRangeBuilder", %"class.v8::internal::compiler::LiveRangeBuilder"* %0, i64 0, i32 0
  %48 = load %"class.v8::internal::compiler::TopTierRegisterAllocationData"*, %"class.v8::internal::compiler::TopTierRegisterAllocationData"** %47, align 8
  %49 = getelementptr inbounds %"class.v8::internal::compiler::TopTierRegisterAllocationData", %"class.v8::internal::compiler::TopTierRegisterAllocationData"* %48, i64 0, i32 1
  %50 = load %"class.v8::internal::Zone"*, %"class.v8::internal::Zone"** %49, align 8
  %51 = getelementptr inbounds %"class.v8::internal::Zone", %"class.v8::internal::Zone"* %50, i64 0, i32 2
  %52 = load i64, i64* %51, align 8
  %53 = getelementptr inbounds %"class.v8::internal::Zone", %"class.v8::internal::Zone"* %50, i64 0, i32 3
  %54 = load i64, i64* %53, align 8
  %55 = sub i64 %54, %52
  %56 = icmp ult i64 %55, 32
  br i1 %56, label %57, label %59, !prof !2

57:                                               ; preds = %45
  %58 = tail call i64 @_ZN2v88internal4Zone9NewExpandEm(%"class.v8::internal::Zone"* %50, i64 32) #16
  br label %61

59:                                               ; preds = %45
  %60 = add i64 %52, 32
  store i64 %60, i64* %51, align 8
  br label %61

61:                                               ; preds = %59, %57
  %62 = phi i64 [ %58, %57 ], [ %52, %59 ]
  %63 = inttoptr i64 %62 to %"class.v8::internal::compiler::UsePosition"*
  %64 = getelementptr inbounds %"class.v8::internal::compiler::UsePosition", %"class.v8::internal::compiler::UsePosition"* %63, i64 0, i32 0
  store %"class.v8::internal::compiler::InstructionOperand"* %3, %"class.v8::internal::compiler::InstructionOperand"** %64, align 8
  %65 = getelementptr inbounds %"class.v8::internal::compiler::UsePosition", %"class.v8::internal::compiler::UsePosition"* %63, i64 0, i32 1
  %66 = bitcast i8** %65 to i64*
  store i64 %46, i64* %66, align 8
  %67 = getelementptr inbounds %"class.v8::internal::compiler::UsePosition", %"class.v8::internal::compiler::UsePosition"* %63, i64 0, i32 2
  store %"class.v8::internal::compiler::UsePosition"* null, %"class.v8::internal::compiler::UsePosition"** %67, align 8
  %68 = getelementptr inbounds %"class.v8::internal::compiler::UsePosition", %"class.v8::internal::compiler::UsePosition"* %63, i64 0, i32 3, i32 0
  store i32 %2, i32* %68, align 8
  %69 = getelementptr inbounds %"class.v8::internal::compiler::UsePosition", %"class.v8::internal::compiler::UsePosition"* %63, i64 0, i32 4
  store i32 0, i32* %69, align 4
  %70 = icmp eq %"class.v8::internal::compiler::InstructionOperand"* %3, null
  br i1 %70, label %83, label %71

71:                                               ; preds = %61
  %72 = load i64, i64* %8, align 8
  %73 = and i64 %72, 7
  %74 = icmp eq i64 %73, 1
  br i1 %74, label %75, label %83

75:                                               ; preds = %71
  %76 = and i64 %72, 515396075520
  switch i64 %76, label %77 [
    i64 377957122048, label %83
    i64 446676598784, label %81
    i64 171798691840, label %82
  ]

77:                                               ; preds = %75
  %78 = icmp ne i64 %76, 103079215104
  %79 = zext i1 %78 to i32
  %80 = shl nuw nsw i32 %79, 5
  br label %83

81:                                               ; preds = %75
  br label %83

82:                                               ; preds = %75
  br label %83

83:                                               ; preds = %61, %71, %75, %77, %81, %82
  %84 = phi i32 [ 0, %71 ], [ 0, %61 ], [ 0, %77 ], [ 2, %75 ], [ 3, %81 ], [ 1, %82 ]
  %85 = phi i32 [ 32, %71 ], [ 32, %61 ], [ %80, %77 ], [ 32, %75 ], [ 0, %81 ], [ 0, %82 ]
  %86 = zext i8 %5 to i32
  %87 = shl nuw nsw i32 %86, 2
  %88 = or i32 %87, %84
  %89 = or i32 %88, %85
  %90 = or i32 %89, 2048
  store i32 %90, i32* %69, align 4
  %91 = load %"class.v8::internal::compiler::TopTierRegisterAllocationData"*, %"class.v8::internal::compiler::TopTierRegisterAllocationData"** %47, align 8
  %92 = getelementptr inbounds %"class.v8::internal::compiler::TopTierRegisterAllocationData", %"class.v8::internal::compiler::TopTierRegisterAllocationData"* %91, i64 0, i32 23, i32 0
  %93 = load i32, i32* %92, align 4
  %94 = and i32 %93, 1
  %95 = icmp ne i32 %94, 0
  tail call void @_ZN2v88internal8compiler17TopLevelLiveRange14AddUsePositionEPNS1_11UsePositionEb(%"class.v8::internal::compiler::TopLevelLiveRange"* nonnull %39, %"class.v8::internal::compiler::UsePosition"* %63, i1 zeroext %95)
  br label %96

96:                                               ; preds = %83, %41
  %97 = phi %"class.v8::internal::compiler::UsePosition"* [ %63, %83 ], [ null, %41 ]
  %98 = getelementptr inbounds %"class.v8::internal::compiler::LiveRangeBuilder", %"class.v8::internal::compiler::LiveRangeBuilder"* %0, i64 0, i32 0
  %99 = load %"class.v8::internal::compiler::TopTierRegisterAllocationData"*, %"class.v8::internal::compiler::TopTierRegisterAllocationData"** %98, align 8
  %100 = getelementptr inbounds %"class.v8::internal::compiler::TopTierRegisterAllocationData", %"class.v8::internal::compiler::TopTierRegisterAllocationData"* %99, i64 0, i32 1
  %101 = load %"class.v8::internal::Zone"*, %"class.v8::internal::Zone"** %100, align 8
  %102 = getelementptr inbounds %"class.v8::internal::compiler::TopTierRegisterAllocationData", %"class.v8::internal::compiler::TopTierRegisterAllocationData"* %99, i64 0, i32 23, i32 0
  %103 = load i32, i32* %102, align 4
  %104 = and i32 %103, 1
  %105 = icmp ne i32 %104, 0
  tail call void @_ZN2v88internal8compiler17TopLevelLiveRange14AddUseIntervalENS1_16LifetimePositionES3_PNS0_4ZoneEb(%"class.v8::internal::compiler::TopLevelLiveRange"* nonnull %39, i32 %1, i32 %2, %"class.v8::internal::Zone"* %101, i1 zeroext %105)
  br label %106

106:                                              ; preds = %23, %38, %96
  %107 = phi %"class.v8::internal::compiler::UsePosition"* [ %97, %96 ], [ null, %38 ], [ null, %23 ]
  ret %"class.v8::internal::compiler::UsePosition"* %107
}

; Function Attrs: nounwind ssp uwtable
define hidden void @_ZN2v88internal8compiler16LiveRangeBuilder19ProcessInstructionsEPKNS1_16InstructionBlockEPNS0_9BitVectorE(%"class.v8::internal::compiler::LiveRangeBuilder"* readonly, %"class.v8::internal::compiler::InstructionBlock"* nocapture readonly, %"class.v8::internal::BitVector"* nocapture) local_unnamed_addr #0 align 2 {
  %4 = getelementptr inbounds %"class.v8::internal::compiler::InstructionBlock", %"class.v8::internal::compiler::InstructionBlock"* %1, i64 0, i32 8
  %5 = load i32, i32* %4, align 4
  %6 = shl nsw i32 %5, 2
  %7 = getelementptr inbounds %"class.v8::internal::compiler::InstructionBlock", %"class.v8::internal::compiler::InstructionBlock"* %1, i64 0, i32 10
  %8 = load i8, i8* %7, align 4, !range !3
  %9 = zext i8 %8 to i32
  %10 = getelementptr inbounds %"class.v8::internal::compiler::InstructionBlock", %"class.v8::internal::compiler::InstructionBlock"* %1, i64 0, i32 9
  %11 = load i32, i32* %10, align 8
  %12 = icmp sgt i32 %11, %5
  br i1 %12, label %13, label %27

13:                                               ; preds = %3
  %14 = getelementptr inbounds %"class.v8::internal::compiler::LiveRangeBuilder", %"class.v8::internal::compiler::LiveRangeBuilder"* %0, i64 0, i32 0
  %15 = getelementptr inbounds %"class.v8::internal::BitVector", %"class.v8::internal::BitVector"* %2, i64 0, i32 1
  %16 = getelementptr inbounds %"class.v8::internal::BitVector", %"class.v8::internal::BitVector"* %2, i64 0, i32 2, i32 0
  %17 = getelementptr inbounds %"class.v8::internal::BitVector", %"class.v8::internal::BitVector"* %2, i64 0, i32 2
  %18 = bitcast %"union.v8::internal::BitVector::DataStorage"* %17 to i64*
  %19 = getelementptr inbounds %"class.v8::internal::compiler::InstructionBlock", %"class.v8::internal::compiler::InstructionBlock"* %1, i64 0, i32 11
  %20 = getelementptr inbounds %"union.v8::internal::BitVector::DataStorage", %"union.v8::internal::BitVector::DataStorage"* %17, i64 0, i32 0
  %21 = getelementptr inbounds %"class.v8::internal::compiler::LiveRangeBuilder", %"class.v8::internal::compiler::LiveRangeBuilder"* %0, i64 0, i32 1, i32 0, i32 0, i32 1, i32 0, i32 0
  %22 = bitcast %"class.std::__1::__tree_end_node"* %21 to %"class.std::__1::__tree_node.1587"**
  %23 = sext i32 %11 to i64
  %24 = sext i32 %5 to i64
  br label %28

25:                                               ; preds = %618
  %26 = icmp sgt i64 %30, %24
  br i1 %26, label %28, label %27

27:                                               ; preds = %25, %3
  ret void

28:                                               ; preds = %13, %25
  %29 = phi i64 [ %23, %13 ], [ %30, %25 ]
  %30 = add nsw i64 %29, -1
  %31 = trunc i64 %30 to i32
  %32 = shl nsw i32 %31, 2
  %33 = or i32 %32, 2
  %34 = load %"class.v8::internal::compiler::TopTierRegisterAllocationData"*, %"class.v8::internal::compiler::TopTierRegisterAllocationData"** %14, align 8
  %35 = getelementptr inbounds %"class.v8::internal::compiler::TopTierRegisterAllocationData", %"class.v8::internal::compiler::TopTierRegisterAllocationData"* %34, i64 0, i32 3
  %36 = load %"class.v8::internal::compiler::InstructionSequence"*, %"class.v8::internal::compiler::InstructionSequence"** %35, align 8
  %37 = getelementptr inbounds %"class.v8::internal::compiler::InstructionSequence", %"class.v8::internal::compiler::InstructionSequence"* %36, i64 0, i32 8, i32 0, i32 0, i32 1
  %38 = load i64, i64* %37, align 8
  %39 = add i64 %38, %30
  %40 = getelementptr inbounds %"class.v8::internal::compiler::InstructionSequence", %"class.v8::internal::compiler::InstructionSequence"* %36, i64 0, i32 8, i32 0, i32 0, i32 0, i32 1
  %41 = load %"class.v8::internal::compiler::Instruction"***, %"class.v8::internal::compiler::Instruction"**** %40, align 8
  %42 = lshr i64 %39, 9
  %43 = getelementptr inbounds %"class.v8::internal::compiler::Instruction"**, %"class.v8::internal::compiler::Instruction"*** %41, i64 %42
  %44 = load %"class.v8::internal::compiler::Instruction"**, %"class.v8::internal::compiler::Instruction"*** %43, align 8
  %45 = and i64 %39, 511
  %46 = getelementptr inbounds %"class.v8::internal::compiler::Instruction"*, %"class.v8::internal::compiler::Instruction"** %44, i64 %45
  %47 = load %"class.v8::internal::compiler::Instruction"*, %"class.v8::internal::compiler::Instruction"** %46, align 8
  %48 = getelementptr inbounds %"class.v8::internal::compiler::Instruction", %"class.v8::internal::compiler::Instruction"* %47, i64 0, i32 1
  %49 = load i32, i32* %48, align 4
  %50 = and i32 %49, 255
  %51 = icmp eq i32 %50, 0
  br i1 %51, label %119, label %52

52:                                               ; preds = %28
  %53 = icmp eq i64 %30, %24
  br i1 %53, label %54, label %132

54:                                               ; preds = %52, %111
  %55 = phi i64 [ %114, %111 ], [ 0, %52 ]
  %56 = getelementptr inbounds %"class.v8::internal::compiler::Instruction", %"class.v8::internal::compiler::Instruction"* %47, i64 0, i32 5, i64 %55
  %57 = getelementptr inbounds %"class.v8::internal::compiler::InstructionOperand", %"class.v8::internal::compiler::InstructionOperand"* %56, i64 0, i32 0
  %58 = load i64, i64* %57, align 8
  %59 = and i64 %58, 7
  switch i64 %59, label %95 [
    i64 1, label %74
    i64 2, label %60
  ]

60:                                               ; preds = %54
  %61 = lshr i64 %58, 3
  %62 = trunc i64 %61 to i32
  %63 = load i32, i32* %15, align 4
  %64 = icmp eq i32 %63, 1
  br i1 %64, label %72, label %65

65:                                               ; preds = %60
  %66 = srem i32 %62, 64
  %67 = zext i32 %66 to i64
  %68 = load i64*, i64** %16, align 8
  %69 = sdiv i32 %62, 64
  %70 = sext i32 %69 to i64
  %71 = getelementptr inbounds i64, i64* %68, i64 %70
  br label %88

72:                                               ; preds = %60
  %73 = and i64 %61, 4294967295
  br label %88

74:                                               ; preds = %54
  %75 = lshr i64 %58, 3
  %76 = trunc i64 %75 to i32
  %77 = load i32, i32* %15, align 4
  %78 = icmp eq i32 %77, 1
  br i1 %78, label %86, label %79

79:                                               ; preds = %74
  %80 = srem i32 %76, 64
  %81 = zext i32 %80 to i64
  %82 = load i64*, i64** %16, align 8
  %83 = sdiv i32 %76, 64
  %84 = sext i32 %83 to i64
  %85 = getelementptr inbounds i64, i64* %82, i64 %84
  br label %88

86:                                               ; preds = %74
  %87 = and i64 %75, 4294967295
  br label %88

88:                                               ; preds = %65, %72, %79, %86
  %89 = phi i64* [ %18, %86 ], [ %85, %79 ], [ %18, %72 ], [ %71, %65 ]
  %90 = phi i64 [ %87, %86 ], [ %81, %79 ], [ %73, %72 ], [ %67, %65 ]
  %91 = shl i64 1, %90
  %92 = xor i64 %91, -1
  %93 = load i64, i64* %89, align 8
  %94 = and i64 %93, %92
  store i64 %94, i64* %89, align 8
  br label %95

95:                                               ; preds = %88, %54
  %96 = load i8, i8* %19, align 1, !range !3
  %97 = icmp eq i8 %96, 0
  br i1 %97, label %111, label %98

98:                                               ; preds = %95
  %99 = load i64, i64* %57, align 8
  %100 = and i64 %99, 31
  %101 = icmp eq i64 %100, 5
  br i1 %101, label %102, label %111

102:                                              ; preds = %98
  %103 = lshr i64 %99, 5
  %104 = trunc i64 %103 to i8
  %105 = icmp ult i8 %104, 12
  br i1 %105, label %106, label %111

106:                                              ; preds = %102
  %107 = ashr i64 %99, 35
  %108 = trunc i64 %107 to i32
  %109 = icmp eq i32 %108, 0
  %110 = select i1 %109, i32 %32, i32 %33
  br label %111

111:                                              ; preds = %106, %98, %102, %95
  %112 = phi i32 [ %33, %95 ], [ %33, %102 ], [ %33, %98 ], [ %110, %106 ]
  %113 = tail call %"class.v8::internal::compiler::UsePosition"* @_ZN2v88internal8compiler16LiveRangeBuilder6DefineENS1_16LifetimePositionEPNS1_18InstructionOperandEPvNS1_19UsePositionHintTypeENS1_29TopTierRegisterAllocationData9SpillModeE(%"class.v8::internal::compiler::LiveRangeBuilder"* %0, i32 %112, %"class.v8::internal::compiler::InstructionOperand"* %56, i8* null, i8 zeroext 0, i32 %9) #16
  %114 = add nuw nsw i64 %55, 1
  %115 = load i32, i32* %48, align 4
  %116 = and i32 %115, 255
  %117 = zext i32 %116 to i64
  %118 = icmp ult i64 %114, %117
  br i1 %118, label %54, label %119

119:                                              ; preds = %173, %111, %28
  %120 = phi i32 [ %49, %28 ], [ %115, %111 ], [ %176, %173 ]
  %121 = and i32 %120, 1073741824
  %122 = icmp eq i32 %121, 0
  br i1 %122, label %242, label %123

123:                                              ; preds = %119
  %124 = load %"class.v8::internal::compiler::TopTierRegisterAllocationData"*, %"class.v8::internal::compiler::TopTierRegisterAllocationData"** %14, align 8
  %125 = getelementptr inbounds %"class.v8::internal::compiler::TopTierRegisterAllocationData", %"class.v8::internal::compiler::TopTierRegisterAllocationData"* %124, i64 0, i32 5
  %126 = load %"class.v8::internal::RegisterConfiguration"*, %"class.v8::internal::RegisterConfiguration"** %125, align 8
  %127 = getelementptr inbounds %"class.v8::internal::RegisterConfiguration", %"class.v8::internal::RegisterConfiguration"* %126, i64 0, i32 5
  %128 = load i32, i32* %127, align 8
  %129 = icmp sgt i32 %128, 0
  br i1 %129, label %130, label %207

130:                                              ; preds = %123
  %131 = or i32 %32, 3
  br label %180

132:                                              ; preds = %52, %173
  %133 = phi i64 [ %175, %173 ], [ 0, %52 ]
  %134 = getelementptr inbounds %"class.v8::internal::compiler::Instruction", %"class.v8::internal::compiler::Instruction"* %47, i64 0, i32 5, i64 %133
  %135 = getelementptr inbounds %"class.v8::internal::compiler::InstructionOperand", %"class.v8::internal::compiler::InstructionOperand"* %134, i64 0, i32 0
  %136 = load i64, i64* %135, align 8
  %137 = and i64 %136, 7
  switch i64 %137, label %173 [
    i64 1, label %138
    i64 2, label %152
  ]

138:                                              ; preds = %132
  %139 = lshr i64 %136, 3
  %140 = trunc i64 %139 to i32
  %141 = load i32, i32* %15, align 4
  %142 = icmp eq i32 %141, 1
  br i1 %142, label %143, label %145

143:                                              ; preds = %138
  %144 = and i64 %139, 4294967295
  br label %166

145:                                              ; preds = %138
  %146 = srem i32 %140, 64
  %147 = zext i32 %146 to i64
  %148 = load i64*, i64** %16, align 8
  %149 = sdiv i32 %140, 64
  %150 = sext i32 %149 to i64
  %151 = getelementptr inbounds i64, i64* %148, i64 %150
  br label %166

152:                                              ; preds = %132
  %153 = lshr i64 %136, 3
  %154 = trunc i64 %153 to i32
  %155 = load i32, i32* %15, align 4
  %156 = icmp eq i32 %155, 1
  br i1 %156, label %157, label %159

157:                                              ; preds = %152
  %158 = and i64 %153, 4294967295
  br label %166

159:                                              ; preds = %152
  %160 = srem i32 %154, 64
  %161 = zext i32 %160 to i64
  %162 = load i64*, i64** %16, align 8
  %163 = sdiv i32 %154, 64
  %164 = sext i32 %163 to i64
  %165 = getelementptr inbounds i64, i64* %162, i64 %164
  br label %166

166:                                              ; preds = %159, %157, %145, %143
  %167 = phi i64* [ %18, %143 ], [ %151, %145 ], [ %18, %157 ], [ %165, %159 ]
  %168 = phi i64 [ %144, %143 ], [ %147, %145 ], [ %158, %157 ], [ %161, %159 ]
  %169 = shl i64 1, %168
  %170 = xor i64 %169, -1
  %171 = load i64, i64* %167, align 8
  %172 = and i64 %171, %170
  store i64 %172, i64* %167, align 8
  br label %173

173:                                              ; preds = %166, %132
  %174 = tail call %"class.v8::internal::compiler::UsePosition"* @_ZN2v88internal8compiler16LiveRangeBuilder6DefineENS1_16LifetimePositionEPNS1_18InstructionOperandEPvNS1_19UsePositionHintTypeENS1_29TopTierRegisterAllocationData9SpillModeE(%"class.v8::internal::compiler::LiveRangeBuilder"* %0, i32 %33, %"class.v8::internal::compiler::InstructionOperand"* %134, i8* null, i8 zeroext 0, i32 %9) #16
  %175 = add nuw nsw i64 %133, 1
  %176 = load i32, i32* %48, align 4
  %177 = and i32 %176, 255
  %178 = zext i32 %177 to i64
  %179 = icmp ult i64 %175, %178
  br i1 %179, label %132, label %119

180:                                              ; preds = %130, %180
  %181 = phi i64 [ 0, %130 ], [ %195, %180 ]
  %182 = phi %"class.v8::internal::RegisterConfiguration"* [ %126, %130 ], [ %198, %180 ]
  %183 = getelementptr inbounds %"class.v8::internal::RegisterConfiguration", %"class.v8::internal::RegisterConfiguration"* %182, i64 0, i32 13
  %184 = load i32*, i32** %183, align 8
  %185 = getelementptr inbounds i32, i32* %184, i64 %181
  %186 = load i32, i32* %185, align 4
  %187 = tail call %"class.v8::internal::compiler::TopLevelLiveRange"* @_ZN2v88internal8compiler16LiveRangeBuilder17FixedLiveRangeForEiNS1_29TopTierRegisterAllocationData9SpillModeE(%"class.v8::internal::compiler::LiveRangeBuilder"* %0, i32 %186, i32 %9)
  %188 = load %"class.v8::internal::compiler::TopTierRegisterAllocationData"*, %"class.v8::internal::compiler::TopTierRegisterAllocationData"** %14, align 8
  %189 = getelementptr inbounds %"class.v8::internal::compiler::TopTierRegisterAllocationData", %"class.v8::internal::compiler::TopTierRegisterAllocationData"* %188, i64 0, i32 1
  %190 = load %"class.v8::internal::Zone"*, %"class.v8::internal::Zone"** %189, align 8
  %191 = getelementptr inbounds %"class.v8::internal::compiler::TopTierRegisterAllocationData", %"class.v8::internal::compiler::TopTierRegisterAllocationData"* %188, i64 0, i32 23, i32 0
  %192 = load i32, i32* %191, align 4
  %193 = and i32 %192, 1
  %194 = icmp ne i32 %193, 0
  tail call void @_ZN2v88internal8compiler17TopLevelLiveRange14AddUseIntervalENS1_16LifetimePositionES3_PNS0_4ZoneEb(%"class.v8::internal::compiler::TopLevelLiveRange"* %187, i32 %33, i32 %131, %"class.v8::internal::Zone"* %190, i1 zeroext %194)
  %195 = add nuw nsw i64 %181, 1
  %196 = load %"class.v8::internal::compiler::TopTierRegisterAllocationData"*, %"class.v8::internal::compiler::TopTierRegisterAllocationData"** %14, align 8
  %197 = getelementptr inbounds %"class.v8::internal::compiler::TopTierRegisterAllocationData", %"class.v8::internal::compiler::TopTierRegisterAllocationData"* %196, i64 0, i32 5
  %198 = load %"class.v8::internal::RegisterConfiguration"*, %"class.v8::internal::RegisterConfiguration"** %197, align 8
  %199 = getelementptr inbounds %"class.v8::internal::RegisterConfiguration", %"class.v8::internal::RegisterConfiguration"* %198, i64 0, i32 5
  %200 = load i32, i32* %199, align 8
  %201 = sext i32 %200 to i64
  %202 = icmp slt i64 %195, %201
  br i1 %202, label %180, label %203

203:                                              ; preds = %180
  %204 = load i32, i32* %48, align 4
  %205 = and i32 %204, 1073741824
  %206 = icmp eq i32 %205, 0
  br i1 %206, label %242, label %207

207:                                              ; preds = %123, %203
  %208 = phi i32 [ %204, %203 ], [ %120, %123 ]
  %209 = load %"class.v8::internal::compiler::TopTierRegisterAllocationData"*, %"class.v8::internal::compiler::TopTierRegisterAllocationData"** %14, align 8
  %210 = getelementptr inbounds %"class.v8::internal::compiler::TopTierRegisterAllocationData", %"class.v8::internal::compiler::TopTierRegisterAllocationData"* %209, i64 0, i32 5
  %211 = load %"class.v8::internal::RegisterConfiguration"*, %"class.v8::internal::RegisterConfiguration"** %210, align 8
  %212 = getelementptr inbounds %"class.v8::internal::RegisterConfiguration", %"class.v8::internal::RegisterConfiguration"* %211, i64 0, i32 7
  %213 = load i32, i32* %212, align 8
  %214 = icmp sgt i32 %213, 0
  br i1 %214, label %215, label %242

215:                                              ; preds = %207
  %216 = or i32 %32, 3
  br label %217

217:                                              ; preds = %215, %217
  %218 = phi i64 [ 0, %215 ], [ %232, %217 ]
  %219 = phi %"class.v8::internal::RegisterConfiguration"* [ %211, %215 ], [ %235, %217 ]
  %220 = getelementptr inbounds %"class.v8::internal::RegisterConfiguration", %"class.v8::internal::RegisterConfiguration"* %219, i64 0, i32 15
  %221 = load i32*, i32** %220, align 8
  %222 = getelementptr inbounds i32, i32* %221, i64 %218
  %223 = load i32, i32* %222, align 4
  %224 = tail call %"class.v8::internal::compiler::TopLevelLiveRange"* @_ZN2v88internal8compiler16LiveRangeBuilder19FixedFPLiveRangeForEiNS0_21MachineRepresentationENS1_29TopTierRegisterAllocationData9SpillModeE(%"class.v8::internal::compiler::LiveRangeBuilder"* %0, i32 %223, i8 zeroext 13, i32 %9)
  %225 = load %"class.v8::internal::compiler::TopTierRegisterAllocationData"*, %"class.v8::internal::compiler::TopTierRegisterAllocationData"** %14, align 8
  %226 = getelementptr inbounds %"class.v8::internal::compiler::TopTierRegisterAllocationData", %"class.v8::internal::compiler::TopTierRegisterAllocationData"* %225, i64 0, i32 1
  %227 = load %"class.v8::internal::Zone"*, %"class.v8::internal::Zone"** %226, align 8
  %228 = getelementptr inbounds %"class.v8::internal::compiler::TopTierRegisterAllocationData", %"class.v8::internal::compiler::TopTierRegisterAllocationData"* %225, i64 0, i32 23, i32 0
  %229 = load i32, i32* %228, align 4
  %230 = and i32 %229, 1
  %231 = icmp ne i32 %230, 0
  tail call void @_ZN2v88internal8compiler17TopLevelLiveRange14AddUseIntervalENS1_16LifetimePositionES3_PNS0_4ZoneEb(%"class.v8::internal::compiler::TopLevelLiveRange"* %224, i32 %33, i32 %216, %"class.v8::internal::Zone"* %227, i1 zeroext %231)
  %232 = add nuw nsw i64 %218, 1
  %233 = load %"class.v8::internal::compiler::TopTierRegisterAllocationData"*, %"class.v8::internal::compiler::TopTierRegisterAllocationData"** %14, align 8
  %234 = getelementptr inbounds %"class.v8::internal::compiler::TopTierRegisterAllocationData", %"class.v8::internal::compiler::TopTierRegisterAllocationData"* %233, i64 0, i32 5
  %235 = load %"class.v8::internal::RegisterConfiguration"*, %"class.v8::internal::RegisterConfiguration"** %234, align 8
  %236 = getelementptr inbounds %"class.v8::internal::RegisterConfiguration", %"class.v8::internal::RegisterConfiguration"* %235, i64 0, i32 7
  %237 = load i32, i32* %236, align 8
  %238 = sext i32 %237 to i64
  %239 = icmp slt i64 %232, %238
  br i1 %239, label %217, label %240

240:                                              ; preds = %217
  %241 = load i32, i32* %48, align 4
  br label %242

242:                                              ; preds = %119, %240, %207, %203
  %243 = phi i32 [ %241, %240 ], [ %208, %207 ], [ %204, %203 ], [ %120, %119 ]
  %244 = and i32 %243, 16776960
  %245 = icmp eq i32 %244, 0
  br i1 %245, label %248, label %246

246:                                              ; preds = %242
  %247 = or i32 %32, 3
  br label %254

248:                                              ; preds = %309, %242
  %249 = phi i32 [ %243, %242 ], [ %310, %309 ]
  %250 = and i32 %249, 1056964608
  %251 = icmp eq i32 %250, 0
  br i1 %251, label %362, label %252

252:                                              ; preds = %248
  %253 = or i32 %32, 3
  br label %316

254:                                              ; preds = %246, %309
  %255 = phi i32 [ %243, %246 ], [ %310, %309 ]
  %256 = phi i64 [ 0, %246 ], [ %311, %309 ]
  %257 = and i32 %255, 255
  %258 = zext i32 %257 to i64
  %259 = add nuw i64 %256, %258
  %260 = getelementptr inbounds %"class.v8::internal::compiler::Instruction", %"class.v8::internal::compiler::Instruction"* %47, i64 0, i32 5, i64 %259
  %261 = getelementptr inbounds %"class.v8::internal::compiler::InstructionOperand", %"class.v8::internal::compiler::InstructionOperand"* %260, i64 0, i32 0
  %262 = load i64, i64* %261, align 8
  %263 = and i64 %262, 7
  switch i64 %263, label %305 [
    i64 3, label %309
    i64 1, label %264
  ]

264:                                              ; preds = %254
  %265 = and i64 %262, 584115552256
  %266 = icmp eq i64 %265, 34359738368
  %267 = select i1 %266, i32 %33, i32 %247
  %268 = lshr i64 %262, 3
  %269 = trunc i64 %268 to i32
  %270 = load i32, i32* %15, align 4
  %271 = icmp eq i32 %270, 1
  br i1 %271, label %272, label %274

272:                                              ; preds = %264
  %273 = and i64 %268, 4294967295
  br label %281

274:                                              ; preds = %264
  %275 = srem i32 %269, 64
  %276 = zext i32 %275 to i64
  %277 = load i64*, i64** %16, align 8
  %278 = sdiv i32 %269, 64
  %279 = sext i32 %278 to i64
  %280 = getelementptr inbounds i64, i64* %277, i64 %279
  br label %281

281:                                              ; preds = %272, %274
  %282 = phi i64* [ %18, %272 ], [ %280, %274 ]
  %283 = phi i64 [ %273, %272 ], [ %276, %274 ]
  %284 = shl i64 1, %283
  %285 = load i64, i64* %282, align 8
  %286 = or i64 %285, %284
  store i64 %286, i64* %282, align 8
  %287 = load i64, i64* %261, align 8
  %288 = and i64 %287, 515396075520
  %289 = icmp eq i64 %288, 446676598784
  br i1 %289, label %290, label %305

290:                                              ; preds = %281
  %291 = load %"class.v8::internal::compiler::TopTierRegisterAllocationData"*, %"class.v8::internal::compiler::TopTierRegisterAllocationData"** %14, align 8
  %292 = tail call %"class.v8::internal::compiler::TopLevelLiveRange"* @_ZN2v88internal8compiler29TopTierRegisterAllocationData23GetOrCreateLiveRangeForEi(%"class.v8::internal::compiler::TopTierRegisterAllocationData"* %291, i32 %269)
  %293 = load i8, i8* %7, align 4, !range !3
  %294 = icmp eq i8 %293, 0
  %295 = select i1 %294, i32 2, i32 1
  %296 = getelementptr inbounds %"class.v8::internal::compiler::TopLevelLiveRange", %"class.v8::internal::compiler::TopLevelLiveRange"* %292, i64 0, i32 0, i32 1
  %297 = load i32, i32* %296, align 4
  %298 = lshr i32 %297, 1
  %299 = and i32 %298, 3
  %300 = icmp ult i32 %299, %295
  %301 = select i1 %300, i32 %295, i32 %299
  %302 = and i32 %297, -7
  %303 = shl nuw nsw i32 %301, 1
  %304 = or i32 %303, %302
  store i32 %304, i32* %296, align 4
  br label %305

305:                                              ; preds = %254, %281, %290
  %306 = phi i32 [ %267, %281 ], [ %267, %290 ], [ %247, %254 ]
  %307 = tail call %"class.v8::internal::compiler::UsePosition"* @_ZN2v88internal8compiler16LiveRangeBuilder3UseENS1_16LifetimePositionES3_PNS1_18InstructionOperandEPvNS1_19UsePositionHintTypeENS1_29TopTierRegisterAllocationData9SpillModeE(%"class.v8::internal::compiler::LiveRangeBuilder"* %0, i32 %6, i32 %306, %"class.v8::internal::compiler::InstructionOperand"* %260, i8* null, i8 zeroext 0, i32 %9) #16
  %308 = load i32, i32* %48, align 4
  br label %309

309:                                              ; preds = %254, %305
  %310 = phi i32 [ %255, %254 ], [ %308, %305 ]
  %311 = add nuw nsw i64 %256, 1
  %312 = lshr i32 %310, 8
  %313 = and i32 %312, 65535
  %314 = zext i32 %313 to i64
  %315 = icmp ult i64 %311, %314
  br i1 %315, label %254, label %248

316:                                              ; preds = %252, %355
  %317 = phi i32 [ %249, %252 ], [ %356, %355 ]
  %318 = phi i64 [ 0, %252 ], [ %357, %355 ]
  %319 = and i32 %317, 255
  %320 = lshr i32 %317, 8
  %321 = and i32 %320, 65535
  %322 = add nuw nsw i32 %321, %319
  %323 = zext i32 %322 to i64
  %324 = add nuw i64 %318, %323
  %325 = getelementptr inbounds %"class.v8::internal::compiler::Instruction", %"class.v8::internal::compiler::Instruction"* %47, i64 0, i32 5, i64 %324
  %326 = and i32 %317, 1073741824
  %327 = icmp eq i32 %326, 0
  br i1 %327, label %351, label %328

328:                                              ; preds = %316
  %329 = getelementptr inbounds %"class.v8::internal::compiler::InstructionOperand", %"class.v8::internal::compiler::InstructionOperand"* %325, i64 0, i32 0
  %330 = load i64, i64* %329, align 8
  %331 = and i64 %330, 7
  %332 = icmp ugt i64 %331, 4
  %333 = and i64 %330, 24
  %334 = icmp eq i64 %333, 0
  %335 = and i1 %332, %334
  br i1 %335, label %336, label %340

336:                                              ; preds = %328
  %337 = lshr i64 %330, 5
  %338 = trunc i64 %337 to i8
  %339 = icmp ult i8 %338, 12
  br i1 %339, label %355, label %351

340:                                              ; preds = %328
  %341 = icmp eq i64 %331, 1
  br i1 %341, label %342, label %351

342:                                              ; preds = %340
  %343 = and i64 %330, 34359738368
  %344 = icmp eq i64 %343, 0
  br i1 %344, label %355, label %345

345:                                              ; preds = %342
  %346 = lshr i64 %330, 36
  %347 = trunc i64 %346 to i32
  %348 = and i32 %347, 7
  %349 = add nsw i32 %348, -3
  %350 = icmp ult i32 %349, 2
  br i1 %350, label %355, label %351

351:                                              ; preds = %316, %345, %336, %340
  %352 = tail call %"class.v8::internal::compiler::UsePosition"* @_ZN2v88internal8compiler16LiveRangeBuilder3UseENS1_16LifetimePositionES3_PNS1_18InstructionOperandEPvNS1_19UsePositionHintTypeENS1_29TopTierRegisterAllocationData9SpillModeE(%"class.v8::internal::compiler::LiveRangeBuilder"* %0, i32 %6, i32 %253, %"class.v8::internal::compiler::InstructionOperand"* %325, i8* null, i8 zeroext 0, i32 %9) #16
  %353 = tail call %"class.v8::internal::compiler::UsePosition"* @_ZN2v88internal8compiler16LiveRangeBuilder6DefineENS1_16LifetimePositionEPNS1_18InstructionOperandEPvNS1_19UsePositionHintTypeENS1_29TopTierRegisterAllocationData9SpillModeE(%"class.v8::internal::compiler::LiveRangeBuilder"* %0, i32 %33, %"class.v8::internal::compiler::InstructionOperand"* %325, i8* null, i8 zeroext 0, i32 %9) #16
  %354 = load i32, i32* %48, align 4
  br label %355

355:                                              ; preds = %342, %345, %336, %351
  %356 = phi i32 [ %317, %342 ], [ %317, %345 ], [ %317, %336 ], [ %354, %351 ]
  %357 = add nuw nsw i64 %318, 1
  %358 = lshr i32 %356, 24
  %359 = and i32 %358, 63
  %360 = zext i32 %359 to i64
  %361 = icmp ult i64 %357, %360
  br i1 %361, label %316, label %362

362:                                              ; preds = %355, %248
  br label %363

363:                                              ; preds = %362, %618
  %364 = phi i32* [ %620, %618 ], [ getelementptr inbounds ([2 x i32], [2 x i32]* @_ZZN2v88internal8compiler16LiveRangeBuilder19ProcessInstructionsEPKNS1_16InstructionBlockEPNS0_9BitVectorEE10kPositions, i64 0, i64 0), %362 ]
  %365 = phi i32 [ %619, %618 ], [ %32, %362 ]
  %366 = load i32, i32* %364, align 4
  %367 = zext i32 %366 to i64
  %368 = getelementptr inbounds %"class.v8::internal::compiler::Instruction", %"class.v8::internal::compiler::Instruction"* %47, i64 0, i32 2, i64 %367
  %369 = load %"class.v8::internal::compiler::ParallelMove"*, %"class.v8::internal::compiler::ParallelMove"** %368, align 8
  %370 = icmp eq %"class.v8::internal::compiler::ParallelMove"* %369, null
  br i1 %370, label %618, label %371

371:                                              ; preds = %363
  %372 = icmp eq i32 %366, 1
  %373 = and i32 %365, -2
  %374 = or i32 %365, 1
  %375 = select i1 %372, i32 %374, i32 %373
  %376 = getelementptr inbounds %"class.v8::internal::compiler::ParallelMove", %"class.v8::internal::compiler::ParallelMove"* %369, i64 0, i32 0, i32 0, i32 0, i32 0
  %377 = load %"class.v8::internal::compiler::MoveOperands"**, %"class.v8::internal::compiler::MoveOperands"*** %376, align 8
  %378 = getelementptr inbounds %"class.v8::internal::compiler::ParallelMove", %"class.v8::internal::compiler::ParallelMove"* %369, i64 0, i32 0, i32 0, i32 0, i32 1
  %379 = load %"class.v8::internal::compiler::MoveOperands"**, %"class.v8::internal::compiler::MoveOperands"*** %378, align 8
  %380 = icmp eq %"class.v8::internal::compiler::MoveOperands"** %377, %379
  br i1 %380, label %618, label %381

381:                                              ; preds = %371, %615
  %382 = phi %"class.v8::internal::compiler::MoveOperands"** [ %616, %615 ], [ %377, %371 ]
  %383 = load %"class.v8::internal::compiler::MoveOperands"*, %"class.v8::internal::compiler::MoveOperands"** %382, align 8
  %384 = getelementptr inbounds %"class.v8::internal::compiler::MoveOperands", %"class.v8::internal::compiler::MoveOperands"* %383, i64 0, i32 0
  %385 = getelementptr inbounds %"class.v8::internal::compiler::MoveOperands", %"class.v8::internal::compiler::MoveOperands"* %383, i64 0, i32 1
  %386 = bitcast %"class.v8::internal::compiler::InstructionOperand"* %385 to i8*
  %387 = getelementptr inbounds %"class.v8::internal::compiler::InstructionOperand", %"class.v8::internal::compiler::InstructionOperand"* %385, i64 0, i32 0
  %388 = load i64, i64* %387, align 8
  %389 = trunc i64 %388 to i32
  %390 = and i32 %389, 7
  switch i32 %390, label %399 [
    i32 2, label %400
    i32 3, label %400
    i32 1, label %391
    i32 5, label %392
  ]

391:                                              ; preds = %381
  br label %400

392:                                              ; preds = %381
  %393 = and i64 %388, 7
  %394 = icmp ugt i64 %393, 4
  %395 = and i64 %388, 24
  %396 = icmp eq i64 %395, 0
  %397 = and i1 %394, %396
  %398 = zext i1 %397 to i8
  br label %400

399:                                              ; preds = %381
  tail call void (i8*, ...) @_Z8V8_FatalPKcz(i8* getelementptr inbounds ([17 x i8], [17 x i8]* @.str, i64 0, i64 0)) #17
  unreachable

400:                                              ; preds = %381, %381, %391, %392
  %401 = phi i8 [ %398, %392 ], [ 4, %391 ], [ 0, %381 ], [ 0, %381 ]
  %402 = and i64 %388, 7
  %403 = icmp eq i64 %402, 1
  br i1 %403, label %404, label %506

404:                                              ; preds = %400
  %405 = lshr i64 %388, 3
  %406 = trunc i64 %405 to i32
  %407 = load %"class.v8::internal::compiler::TopTierRegisterAllocationData"*, %"class.v8::internal::compiler::TopTierRegisterAllocationData"** %14, align 8
  %408 = tail call %"class.v8::internal::compiler::TopLevelLiveRange"* @_ZN2v88internal8compiler29TopTierRegisterAllocationData23GetOrCreateLiveRangeForEi(%"class.v8::internal::compiler::TopTierRegisterAllocationData"* %407, i32 %406)
  %409 = getelementptr inbounds %"class.v8::internal::compiler::TopLevelLiveRange", %"class.v8::internal::compiler::TopLevelLiveRange"* %408, i64 0, i32 0, i32 1
  %410 = load i32, i32* %409, align 4
  %411 = and i32 %410, 8
  %412 = icmp eq i32 %411, 0
  br i1 %412, label %455, label %413

413:                                              ; preds = %404
  %414 = and i32 %410, 16
  %415 = icmp eq i32 %414, 0
  br i1 %415, label %422, label %416

416:                                              ; preds = %413
  %417 = getelementptr inbounds %"class.v8::internal::compiler::TopLevelLiveRange", %"class.v8::internal::compiler::TopLevelLiveRange"* %408, i64 0, i32 0, i32 9
  %418 = load %"class.v8::internal::compiler::UsePosition"*, %"class.v8::internal::compiler::UsePosition"** %417, align 8
  %419 = bitcast %"class.v8::internal::compiler::UsePosition"* %418 to i8*
  %420 = icmp eq %"class.v8::internal::compiler::UsePosition"* %418, null
  %421 = select i1 %420, i8 0, i8 2
  br label %508

422:                                              ; preds = %413
  %423 = load %"class.v8::internal::compiler::TopTierRegisterAllocationData"*, %"class.v8::internal::compiler::TopTierRegisterAllocationData"** %14, align 8
  %424 = getelementptr inbounds %"class.v8::internal::compiler::TopTierRegisterAllocationData", %"class.v8::internal::compiler::TopTierRegisterAllocationData"* %423, i64 0, i32 6, i32 0, i32 0, i32 1, i32 0, i32 0
  %425 = bitcast %"class.std::__1::__tree_end_node"* %424 to %"class.std::__1::__tree_node.1558"**
  %426 = load %"class.std::__1::__tree_node.1558"*, %"class.std::__1::__tree_node.1558"** %425, align 8
  %427 = icmp eq %"class.std::__1::__tree_node.1558"* %426, null
  br i1 %427, label %449, label %428

428:                                              ; preds = %422, %428
  %429 = phi %"class.std::__1::__tree_end_node"* [ %439, %428 ], [ %424, %422 ]
  %430 = phi %"class.std::__1::__tree_node.1558"* [ %440, %428 ], [ %426, %422 ]
  %431 = getelementptr inbounds %"class.std::__1::__tree_node.1558", %"class.std::__1::__tree_node.1558"* %430, i64 0, i32 1, i32 0, i32 0
  %432 = load i32, i32* %431, align 4
  %433 = icmp slt i32 %432, %406
  %434 = getelementptr inbounds %"class.std::__1::__tree_node.1558", %"class.std::__1::__tree_node.1558"* %430, i64 0, i32 0, i32 1
  %435 = bitcast %"class.std::__1::__tree_node_base"** %434 to %"class.std::__1::__tree_node.1558"**
  %436 = getelementptr inbounds %"class.std::__1::__tree_node.1558", %"class.std::__1::__tree_node.1558"* %430, i64 0, i32 0, i32 0
  %437 = bitcast %"class.std::__1::__tree_node.1558"* %430 to %"class.std::__1::__tree_node.1558"**
  %438 = select i1 %433, %"class.std::__1::__tree_node.1558"** %435, %"class.std::__1::__tree_node.1558"** %437
  %439 = select i1 %433, %"class.std::__1::__tree_end_node"* %429, %"class.std::__1::__tree_end_node"* %436
  %440 = load %"class.std::__1::__tree_node.1558"*, %"class.std::__1::__tree_node.1558"** %438, align 8
  %441 = icmp eq %"class.std::__1::__tree_node.1558"* %440, null
  br i1 %441, label %442, label %428

442:                                              ; preds = %428
  %443 = icmp eq %"class.std::__1::__tree_end_node"* %439, %424
  br i1 %443, label %449, label %444

444:                                              ; preds = %442
  %445 = getelementptr inbounds %"class.std::__1::__tree_end_node", %"class.std::__1::__tree_end_node"* %439, i64 4
  %446 = bitcast %"class.std::__1::__tree_end_node"* %445 to i32*
  %447 = load i32, i32* %446, align 4
  %448 = icmp sgt i32 %447, %406
  br i1 %448, label %449, label %450

449:                                              ; preds = %444, %442, %422
  br label %450

450:                                              ; preds = %444, %449
  %451 = phi %"class.std::__1::__tree_end_node"* [ %424, %449 ], [ %439, %444 ]
  %452 = getelementptr inbounds %"class.std::__1::__tree_end_node", %"class.std::__1::__tree_end_node"* %451, i64 5
  %453 = bitcast %"class.std::__1::__tree_end_node"* %452 to i8**
  %454 = load i8*, i8** %453, align 8
  br label %508

455:                                              ; preds = %404
  %456 = load i32, i32* %15, align 4
  %457 = icmp eq i32 %456, 1
  br i1 %457, label %463, label %458

458:                                              ; preds = %455
  %459 = load i64*, i64** %20, align 8
  %460 = sdiv i32 %406, 64
  %461 = sext i32 %460 to i64
  %462 = getelementptr inbounds i64, i64* %459, i64 %461
  br label %463

463:                                              ; preds = %455, %458
  %464 = phi i64* [ %462, %458 ], [ %18, %455 ]
  %465 = load i64, i64* %464, align 8
  %466 = srem i32 %406, 64
  %467 = sdiv i32 %406, 64
  %468 = zext i32 %466 to i64
  %469 = shl i64 1, %468
  %470 = and i64 %465, %469
  %471 = icmp eq i64 %470, 0
  %472 = bitcast %"class.v8::internal::compiler::MoveOperands"* %383 to i8*
  br i1 %471, label %505, label %473

473:                                              ; preds = %463
  %474 = getelementptr inbounds %"class.v8::internal::compiler::MoveOperands", %"class.v8::internal::compiler::MoveOperands"* %383, i64 0, i32 0, i32 0
  %475 = load i64, i64* %474, align 8
  %476 = trunc i64 %475 to i32
  %477 = and i32 %476, 7
  switch i32 %477, label %486 [
    i32 2, label %487
    i32 3, label %487
    i32 1, label %478
    i32 5, label %479
  ]

478:                                              ; preds = %473
  br label %487

479:                                              ; preds = %473
  %480 = and i64 %475, 7
  %481 = icmp ugt i64 %480, 4
  %482 = and i64 %475, 24
  %483 = icmp eq i64 %482, 0
  %484 = and i1 %481, %483
  %485 = zext i1 %484 to i8
  br label %487

486:                                              ; preds = %473
  tail call void (i8*, ...) @_Z8V8_FatalPKcz(i8* getelementptr inbounds ([17 x i8], [17 x i8]* @.str, i64 0, i64 0)) #17
  unreachable

487:                                              ; preds = %473, %473, %478, %479
  %488 = phi i8 [ %485, %479 ], [ 4, %478 ], [ 0, %473 ], [ 0, %473 ]
  %489 = tail call %"class.v8::internal::compiler::UsePosition"* @_ZN2v88internal8compiler16LiveRangeBuilder6DefineENS1_16LifetimePositionEPNS1_18InstructionOperandEPvNS1_19UsePositionHintTypeENS1_29TopTierRegisterAllocationData9SpillModeE(%"class.v8::internal::compiler::LiveRangeBuilder"* %0, i32 %375, %"class.v8::internal::compiler::InstructionOperand"* %385, i8* %472, i8 zeroext %488, i32 %9)
  %490 = load i32, i32* %15, align 4
  %491 = icmp eq i32 %490, 1
  br i1 %491, label %492, label %498

492:                                              ; preds = %487
  %493 = and i64 %405, 4294967295
  %494 = shl i64 1, %493
  %495 = xor i64 %494, -1
  %496 = load i64, i64* %18, align 8
  %497 = and i64 %496, %495
  store i64 %497, i64* %18, align 8
  br label %508

498:                                              ; preds = %487
  %499 = xor i64 %469, -1
  %500 = load i64*, i64** %16, align 8
  %501 = sext i32 %467 to i64
  %502 = getelementptr inbounds i64, i64* %500, i64 %501
  %503 = load i64, i64* %502, align 8
  %504 = and i64 %503, %499
  store i64 %504, i64* %502, align 8
  br label %508

505:                                              ; preds = %463
  tail call void @llvm.memset.p0i8.i64(i8* align 8 %472, i8 0, i64 16, i1 false) #16
  br label %615

506:                                              ; preds = %400
  %507 = tail call %"class.v8::internal::compiler::UsePosition"* @_ZN2v88internal8compiler16LiveRangeBuilder6DefineENS1_16LifetimePositionEPNS1_18InstructionOperandEPvNS1_19UsePositionHintTypeENS1_29TopTierRegisterAllocationData9SpillModeE(%"class.v8::internal::compiler::LiveRangeBuilder"* %0, i32 %375, %"class.v8::internal::compiler::InstructionOperand"* %385, i8* null, i8 zeroext 0, i32 %9) #16
  br label %508

508:                                              ; preds = %498, %492, %450, %416, %506
  %509 = phi i8* [ %386, %506 ], [ %386, %498 ], [ %386, %492 ], [ %454, %450 ], [ %419, %416 ]
  %510 = phi i8 [ %401, %506 ], [ %401, %498 ], [ %401, %492 ], [ 3, %450 ], [ %421, %416 ]
  %511 = phi %"class.v8::internal::compiler::UsePosition"* [ null, %506 ], [ %489, %498 ], [ %489, %492 ], [ null, %450 ], [ null, %416 ]
  %512 = phi i32 [ -1, %506 ], [ -1, %498 ], [ -1, %492 ], [ %406, %450 ], [ %406, %416 ]
  %513 = tail call %"class.v8::internal::compiler::UsePosition"* @_ZN2v88internal8compiler16LiveRangeBuilder3UseENS1_16LifetimePositionES3_PNS1_18InstructionOperandEPvNS1_19UsePositionHintTypeENS1_29TopTierRegisterAllocationData9SpillModeE(%"class.v8::internal::compiler::LiveRangeBuilder"* %0, i32 %6, i32 %375, %"class.v8::internal::compiler::InstructionOperand"* %384, i8* %509, i8 zeroext %510, i32 %9)
  %514 = getelementptr inbounds %"class.v8::internal::compiler::MoveOperands", %"class.v8::internal::compiler::MoveOperands"* %383, i64 0, i32 0, i32 0
  %515 = load i64, i64* %514, align 8
  %516 = and i64 %515, 7
  %517 = icmp eq i64 %516, 1
  br i1 %517, label %518, label %538

518:                                              ; preds = %508
  %519 = lshr i64 %515, 3
  %520 = trunc i64 %519 to i32
  %521 = load i32, i32* %15, align 4
  %522 = icmp eq i32 %521, 1
  br i1 %522, label %523, label %525

523:                                              ; preds = %518
  %524 = and i64 %519, 4294967295
  br label %532

525:                                              ; preds = %518
  %526 = srem i32 %520, 64
  %527 = zext i32 %526 to i64
  %528 = load i64*, i64** %16, align 8
  %529 = sdiv i32 %520, 64
  %530 = sext i32 %529 to i64
  %531 = getelementptr inbounds i64, i64* %528, i64 %530
  br label %532

532:                                              ; preds = %523, %525
  %533 = phi i64* [ %531, %525 ], [ %18, %523 ]
  %534 = phi i64 [ %527, %525 ], [ %524, %523 ]
  %535 = shl i64 1, %534
  %536 = load i64, i64* %533, align 8
  %537 = or i64 %536, %535
  store i64 %537, i64* %533, align 8
  br label %538

538:                                              ; preds = %532, %508
  %539 = load i64, i64* %387, align 8
  %540 = and i64 %539, 7
  %541 = icmp ugt i64 %540, 4
  %542 = and i64 %539, 24
  %543 = icmp eq i64 %542, 0
  %544 = and i1 %541, %543
  %545 = and i64 %539, 515396075527
  %546 = icmp eq i64 %545, 377957122049
  %547 = or i1 %544, %546
  br i1 %547, label %548, label %552

548:                                              ; preds = %538
  %549 = getelementptr inbounds %"class.v8::internal::compiler::UsePosition", %"class.v8::internal::compiler::UsePosition"* %513, i64 0, i32 4
  %550 = load i32, i32* %549, align 4
  %551 = or i32 %550, 4096
  store i32 %551, i32* %549, align 4
  br label %552

552:                                              ; preds = %538, %548
  %553 = icmp ne %"class.v8::internal::compiler::UsePosition"* %511, null
  %554 = icmp ne %"class.v8::internal::compiler::UsePosition"* %513, null
  %555 = and i1 %553, %554
  br i1 %555, label %556, label %576

556:                                              ; preds = %552
  %557 = getelementptr inbounds %"class.v8::internal::compiler::UsePosition", %"class.v8::internal::compiler::UsePosition"* %511, i64 0, i32 4
  %558 = load i32, i32* %557, align 4
  %559 = and i32 %558, 28
  %560 = icmp eq i32 %559, 16
  br i1 %560, label %561, label %566

561:                                              ; preds = %556
  %562 = getelementptr inbounds %"class.v8::internal::compiler::UsePosition", %"class.v8::internal::compiler::UsePosition"* %511, i64 0, i32 1
  %563 = bitcast i8** %562 to %"class.v8::internal::compiler::UsePosition"**
  store %"class.v8::internal::compiler::UsePosition"* %513, %"class.v8::internal::compiler::UsePosition"** %563, align 8
  %564 = and i32 %558, -29
  %565 = or i32 %564, 8
  store i32 %565, i32* %557, align 4
  br label %566

566:                                              ; preds = %556, %561
  %567 = getelementptr inbounds %"class.v8::internal::compiler::UsePosition", %"class.v8::internal::compiler::UsePosition"* %513, i64 0, i32 4
  %568 = load i32, i32* %567, align 4
  %569 = and i32 %568, 28
  %570 = icmp eq i32 %569, 16
  br i1 %570, label %571, label %576

571:                                              ; preds = %566
  %572 = getelementptr inbounds %"class.v8::internal::compiler::UsePosition", %"class.v8::internal::compiler::UsePosition"* %513, i64 0, i32 1
  %573 = bitcast i8** %572 to %"class.v8::internal::compiler::UsePosition"**
  store %"class.v8::internal::compiler::UsePosition"* %511, %"class.v8::internal::compiler::UsePosition"** %573, align 8
  %574 = and i32 %568, -29
  %575 = or i32 %574, 8
  store i32 %575, i32* %567, align 4
  br label %576

576:                                              ; preds = %571, %566, %552
  %577 = icmp eq i32 %512, -1
  br i1 %577, label %615, label %578

578:                                              ; preds = %576
  %579 = load %"class.std::__1::__tree_node.1587"*, %"class.std::__1::__tree_node.1587"** %22, align 8
  %580 = icmp eq %"class.std::__1::__tree_node.1587"* %579, null
  br i1 %580, label %615, label %581

581:                                              ; preds = %578, %581
  %582 = phi %"class.std::__1::__tree_end_node"* [ %592, %581 ], [ %21, %578 ]
  %583 = phi %"class.std::__1::__tree_node.1587"* [ %593, %581 ], [ %579, %578 ]
  %584 = getelementptr inbounds %"class.std::__1::__tree_node.1587", %"class.std::__1::__tree_node.1587"* %583, i64 0, i32 1, i32 0, i32 0
  %585 = load %"class.v8::internal::compiler::InstructionOperand"*, %"class.v8::internal::compiler::InstructionOperand"** %584, align 8
  %586 = icmp ult %"class.v8::internal::compiler::InstructionOperand"* %585, %384
  %587 = getelementptr inbounds %"class.std::__1::__tree_node.1587", %"class.std::__1::__tree_node.1587"* %583, i64 0, i32 0, i32 1
  %588 = bitcast %"class.std::__1::__tree_node_base"** %587 to %"class.std::__1::__tree_node.1587"**
  %589 = getelementptr inbounds %"class.std::__1::__tree_node.1587", %"class.std::__1::__tree_node.1587"* %583, i64 0, i32 0, i32 0
  %590 = bitcast %"class.std::__1::__tree_node.1587"* %583 to %"class.std::__1::__tree_node.1587"**
  %591 = select i1 %586, %"class.std::__1::__tree_node.1587"** %588, %"class.std::__1::__tree_node.1587"** %590
  %592 = select i1 %586, %"class.std::__1::__tree_end_node"* %582, %"class.std::__1::__tree_end_node"* %589
  %593 = load %"class.std::__1::__tree_node.1587"*, %"class.std::__1::__tree_node.1587"** %591, align 8
  %594 = icmp eq %"class.std::__1::__tree_node.1587"* %593, null
  br i1 %594, label %595, label %581

595:                                              ; preds = %581
  %596 = icmp eq %"class.std::__1::__tree_end_node"* %592, %21
  br i1 %596, label %615, label %597

597:                                              ; preds = %595
  %598 = getelementptr inbounds %"class.std::__1::__tree_end_node", %"class.std::__1::__tree_end_node"* %592, i64 4
  %599 = bitcast %"class.std::__1::__tree_end_node"* %598 to %"class.v8::internal::compiler::InstructionOperand"**
  %600 = load %"class.v8::internal::compiler::InstructionOperand"*, %"class.v8::internal::compiler::InstructionOperand"** %599, align 8
  %601 = icmp ugt %"class.v8::internal::compiler::InstructionOperand"* %600, %384
  br i1 %601, label %615, label %602

602:                                              ; preds = %597
  %603 = getelementptr inbounds %"class.std::__1::__tree_end_node", %"class.std::__1::__tree_end_node"* %592, i64 5
  %604 = bitcast %"class.std::__1::__tree_end_node"* %603 to %"class.v8::internal::compiler::UsePosition"**
  %605 = load %"class.v8::internal::compiler::UsePosition"*, %"class.v8::internal::compiler::UsePosition"** %604, align 8
  %606 = getelementptr inbounds %"class.v8::internal::compiler::UsePosition", %"class.v8::internal::compiler::UsePosition"* %605, i64 0, i32 4
  %607 = load i32, i32* %606, align 4
  %608 = and i32 %607, 28
  %609 = icmp eq i32 %608, 16
  br i1 %609, label %610, label %615

610:                                              ; preds = %602
  %611 = getelementptr inbounds %"class.v8::internal::compiler::UsePosition", %"class.v8::internal::compiler::UsePosition"* %605, i64 0, i32 1
  %612 = bitcast i8** %611 to %"class.v8::internal::compiler::UsePosition"**
  store %"class.v8::internal::compiler::UsePosition"* %513, %"class.v8::internal::compiler::UsePosition"** %612, align 8
  %613 = and i32 %607, -29
  %614 = or i32 %613, 8
  store i32 %614, i32* %606, align 4
  br label %615

615:                                              ; preds = %610, %602, %597, %595, %578, %505, %576
  %616 = getelementptr inbounds %"class.v8::internal::compiler::MoveOperands"*, %"class.v8::internal::compiler::MoveOperands"** %382, i64 1
  %617 = icmp eq %"class.v8::internal::compiler::MoveOperands"** %616, %379
  br i1 %617, label %618, label %381

618:                                              ; preds = %615, %371, %363
  %619 = phi i32 [ %365, %363 ], [ %375, %371 ], [ %375, %615 ]
  %620 = getelementptr inbounds i32, i32* %364, i64 1
  %621 = icmp eq i32* %620, getelementptr inbounds ([2 x i32], [2 x i32]* @_ZZN2v88internal8compiler16LiveRangeBuilder19ProcessInstructionsEPKNS1_16InstructionBlockEPNS0_9BitVectorEE10kPositions, i64 1, i64 0)
  br i1 %621, label %25, label %363
}

; Function Attrs: nounwind ssp uwtable
define hidden void @_ZN2v88internal8compiler16LiveRangeBuilder14ResolvePhiHintEPNS1_18InstructionOperandEPNS1_11UsePositionE(%"class.v8::internal::compiler::LiveRangeBuilder"*, %"class.v8::internal::compiler::InstructionOperand"*, %"class.v8::internal::compiler::UsePosition"*) local_unnamed_addr #0 align 2 {
  %4 = getelementptr inbounds %"class.v8::internal::compiler::LiveRangeBuilder", %"class.v8::internal::compiler::LiveRangeBuilder"* %0, i64 0, i32 1, i32 0, i32 0, i32 1, i32 0, i32 0
  %5 = bitcast %"class.std::__1::__tree_end_node"* %4 to %"class.std::__1::__tree_node.1587"**
  %6 = load %"class.std::__1::__tree_node.1587"*, %"class.std::__1::__tree_node.1587"** %5, align 8
  %7 = icmp eq %"class.std::__1::__tree_node.1587"* %6, null
  br i1 %7, label %42, label %8

8:                                                ; preds = %3, %8
  %9 = phi %"class.std::__1::__tree_end_node"* [ %19, %8 ], [ %4, %3 ]
  %10 = phi %"class.std::__1::__tree_node.1587"* [ %20, %8 ], [ %6, %3 ]
  %11 = getelementptr inbounds %"class.std::__1::__tree_node.1587", %"class.std::__1::__tree_node.1587"* %10, i64 0, i32 1, i32 0, i32 0
  %12 = load %"class.v8::internal::compiler::InstructionOperand"*, %"class.v8::internal::compiler::InstructionOperand"** %11, align 8
  %13 = icmp ult %"class.v8::internal::compiler::InstructionOperand"* %12, %1
  %14 = getelementptr inbounds %"class.std::__1::__tree_node.1587", %"class.std::__1::__tree_node.1587"* %10, i64 0, i32 0, i32 1
  %15 = bitcast %"class.std::__1::__tree_node_base"** %14 to %"class.std::__1::__tree_node.1587"**
  %16 = getelementptr inbounds %"class.std::__1::__tree_node.1587", %"class.std::__1::__tree_node.1587"* %10, i64 0, i32 0, i32 0
  %17 = bitcast %"class.std::__1::__tree_node.1587"* %10 to %"class.std::__1::__tree_node.1587"**
  %18 = select i1 %13, %"class.std::__1::__tree_node.1587"** %15, %"class.std::__1::__tree_node.1587"** %17
  %19 = select i1 %13, %"class.std::__1::__tree_end_node"* %9, %"class.std::__1::__tree_end_node"* %16
  %20 = load %"class.std::__1::__tree_node.1587"*, %"class.std::__1::__tree_node.1587"** %18, align 8
  %21 = icmp eq %"class.std::__1::__tree_node.1587"* %20, null
  br i1 %21, label %22, label %8

22:                                               ; preds = %8
  %23 = icmp eq %"class.std::__1::__tree_end_node"* %19, %4
  br i1 %23, label %42, label %24

24:                                               ; preds = %22
  %25 = getelementptr inbounds %"class.std::__1::__tree_end_node", %"class.std::__1::__tree_end_node"* %19, i64 4
  %26 = bitcast %"class.std::__1::__tree_end_node"* %25 to %"class.v8::internal::compiler::InstructionOperand"**
  %27 = load %"class.v8::internal::compiler::InstructionOperand"*, %"class.v8::internal::compiler::InstructionOperand"** %26, align 8
  %28 = icmp ugt %"class.v8::internal::compiler::InstructionOperand"* %27, %1
  br i1 %28, label %42, label %29

29:                                               ; preds = %24
  %30 = getelementptr inbounds %"class.std::__1::__tree_end_node", %"class.std::__1::__tree_end_node"* %19, i64 5
  %31 = bitcast %"class.std::__1::__tree_end_node"* %30 to %"class.v8::internal::compiler::UsePosition"**
  %32 = load %"class.v8::internal::compiler::UsePosition"*, %"class.v8::internal::compiler::UsePosition"** %31, align 8
  %33 = getelementptr inbounds %"class.v8::internal::compiler::UsePosition", %"class.v8::internal::compiler::UsePosition"* %32, i64 0, i32 4
  %34 = load i32, i32* %33, align 4
  %35 = and i32 %34, 28
  %36 = icmp eq i32 %35, 16
  br i1 %36, label %37, label %42

37:                                               ; preds = %29
  %38 = getelementptr inbounds %"class.v8::internal::compiler::UsePosition", %"class.v8::internal::compiler::UsePosition"* %32, i64 0, i32 1
  %39 = bitcast i8** %38 to %"class.v8::internal::compiler::UsePosition"**
  store %"class.v8::internal::compiler::UsePosition"* %2, %"class.v8::internal::compiler::UsePosition"** %39, align 8
  %40 = and i32 %34, -29
  %41 = or i32 %40, 8
  store i32 %41, i32* %33, align 4
  br label %42

42:                                               ; preds = %24, %22, %3, %37, %29
  ret void
}

; Function Attrs: nounwind ssp uwtable
define hidden void @_ZN2v88internal8compiler16LiveRangeBuilder11ProcessPhisEPKNS1_16InstructionBlockEPNS0_9BitVectorE(%"class.v8::internal::compiler::LiveRangeBuilder"*, %"class.v8::internal::compiler::InstructionBlock"* nocapture readonly, %"class.v8::internal::BitVector"* nocapture) local_unnamed_addr #0 align 2 {
  %4 = getelementptr inbounds %"class.v8::internal::compiler::InstructionBlock", %"class.v8::internal::compiler::InstructionBlock"* %1, i64 0, i32 2, i32 0, i32 0, i32 0
  %5 = load %"class.v8::internal::compiler::PhiInstruction"**, %"class.v8::internal::compiler::PhiInstruction"*** %4, align 8
  %6 = getelementptr inbounds %"class.v8::internal::compiler::InstructionBlock", %"class.v8::internal::compiler::InstructionBlock"* %1, i64 0, i32 2, i32 0, i32 0, i32 1
  %7 = load %"class.v8::internal::compiler::PhiInstruction"**, %"class.v8::internal::compiler::PhiInstruction"*** %6, align 8
  %8 = icmp eq %"class.v8::internal::compiler::PhiInstruction"** %5, %7
  br i1 %8, label %29, label %9

9:                                                ; preds = %3
  %10 = getelementptr inbounds %"class.v8::internal::BitVector", %"class.v8::internal::BitVector"* %2, i64 0, i32 1
  %11 = getelementptr inbounds %"class.v8::internal::BitVector", %"class.v8::internal::BitVector"* %2, i64 0, i32 2, i32 0
  %12 = getelementptr inbounds %"class.v8::internal::BitVector", %"class.v8::internal::BitVector"* %2, i64 0, i32 2
  %13 = bitcast %"union.v8::internal::BitVector::DataStorage"* %12 to i64*
  %14 = getelementptr inbounds %"class.v8::internal::compiler::InstructionBlock", %"class.v8::internal::compiler::InstructionBlock"* %1, i64 0, i32 1, i32 0, i32 0, i32 0
  %15 = getelementptr inbounds %"class.v8::internal::compiler::InstructionBlock", %"class.v8::internal::compiler::InstructionBlock"* %1, i64 0, i32 1, i32 0, i32 0, i32 1
  %16 = getelementptr inbounds %"class.v8::internal::compiler::LiveRangeBuilder", %"class.v8::internal::compiler::LiveRangeBuilder"* %0, i64 0, i32 0
  %17 = getelementptr inbounds %"class.v8::internal::compiler::InstructionBlock", %"class.v8::internal::compiler::InstructionBlock"* %1, i64 0, i32 4, i32 0
  %18 = getelementptr inbounds %"class.v8::internal::compiler::InstructionBlock", %"class.v8::internal::compiler::InstructionBlock"* %1, i64 0, i32 8
  %19 = getelementptr inbounds %"class.v8::internal::compiler::InstructionBlock", %"class.v8::internal::compiler::InstructionBlock"* %1, i64 0, i32 10
  %20 = getelementptr inbounds %"class.v8::internal::compiler::LiveRangeBuilder", %"class.v8::internal::compiler::LiveRangeBuilder"* %0, i64 0, i32 1, i32 0, i32 0
  %21 = getelementptr inbounds %"class.v8::internal::compiler::LiveRangeBuilder", %"class.v8::internal::compiler::LiveRangeBuilder"* %0, i64 0, i32 1, i32 0, i32 0, i32 1, i32 0, i32 0
  %22 = bitcast %"class.std::__1::__tree_end_node"* %21 to %"class.std::__1::__tree_node.1587"**
  %23 = getelementptr inbounds %"class.v8::internal::compiler::LiveRangeBuilder", %"class.v8::internal::compiler::LiveRangeBuilder"* %0, i64 0, i32 1, i32 0, i32 0, i32 1, i32 0, i32 0, i32 0
  %24 = getelementptr inbounds %"class.std::__1::__tree_end_node", %"class.std::__1::__tree_end_node"* %21, i64 0, i32 0
  %25 = getelementptr inbounds %"class.v8::internal::compiler::LiveRangeBuilder", %"class.v8::internal::compiler::LiveRangeBuilder"* %0, i64 0, i32 1, i32 0, i32 0, i32 1, i32 1, i32 0, i32 0
  %26 = getelementptr inbounds %"class.std::__1::__tree.1370", %"class.std::__1::__tree.1370"* %20, i64 0, i32 0
  %27 = bitcast %"class.std::__1::__tree.1370"* %20 to i64*
  %28 = getelementptr inbounds %"class.v8::internal::compiler::LiveRangeBuilder", %"class.v8::internal::compiler::LiveRangeBuilder"* %0, i64 0, i32 1, i32 0, i32 0, i32 2, i32 0, i32 0
  br label %30

29:                                               ; preds = %283, %3
  ret void

30:                                               ; preds = %9, %283
  %31 = phi %"class.v8::internal::compiler::PhiInstruction"** [ %5, %9 ], [ %284, %283 ]
  %32 = load %"class.v8::internal::compiler::PhiInstruction"*, %"class.v8::internal::compiler::PhiInstruction"** %31, align 8
  %33 = getelementptr inbounds %"class.v8::internal::compiler::PhiInstruction", %"class.v8::internal::compiler::PhiInstruction"* %32, i64 0, i32 0
  %34 = load i32, i32* %33, align 8
  %35 = load i32, i32* %10, align 4
  %36 = icmp eq i32 %35, 1
  br i1 %36, label %43, label %37

37:                                               ; preds = %30
  %38 = srem i32 %34, 64
  %39 = load i64*, i64** %11, align 8
  %40 = sdiv i32 %34, 64
  %41 = sext i32 %40 to i64
  %42 = getelementptr inbounds i64, i64* %39, i64 %41
  br label %43

43:                                               ; preds = %30, %37
  %44 = phi i64* [ %42, %37 ], [ %13, %30 ]
  %45 = phi i32 [ %38, %37 ], [ %34, %30 ]
  %46 = zext i32 %45 to i64
  %47 = shl i64 1, %46
  %48 = xor i64 %47, -1
  %49 = load i64, i64* %44, align 8
  %50 = and i64 %49, %48
  store i64 %50, i64* %44, align 8
  %51 = load %"class.v8::internal::compiler::RpoNumber"*, %"class.v8::internal::compiler::RpoNumber"** %14, align 8
  %52 = load %"class.v8::internal::compiler::RpoNumber"*, %"class.v8::internal::compiler::RpoNumber"** %15, align 8
  %53 = icmp eq %"class.v8::internal::compiler::RpoNumber"* %51, %52
  br i1 %53, label %189, label %54

54:                                               ; preds = %43
  %55 = load %"class.v8::internal::compiler::TopTierRegisterAllocationData"*, %"class.v8::internal::compiler::TopTierRegisterAllocationData"** %16, align 8
  %56 = getelementptr inbounds %"class.v8::internal::compiler::TopTierRegisterAllocationData", %"class.v8::internal::compiler::TopTierRegisterAllocationData"* %55, i64 0, i32 3
  %57 = load %"class.v8::internal::compiler::InstructionSequence"*, %"class.v8::internal::compiler::InstructionSequence"** %56, align 8
  %58 = getelementptr inbounds %"class.v8::internal::compiler::InstructionSequence", %"class.v8::internal::compiler::InstructionSequence"* %57, i64 0, i32 2
  %59 = bitcast %"class.v8::internal::ZoneVector.1170"** %58 to %"class.std::__1::vector.1171"**
  %60 = load %"class.std::__1::vector.1171"*, %"class.std::__1::vector.1171"** %59, align 8
  %61 = getelementptr inbounds %"class.std::__1::vector.1171", %"class.std::__1::vector.1171"* %60, i64 0, i32 0, i32 1
  %62 = bitcast %"class.v8::internal::compiler::InstructionBlock"*** %61 to i64*
  %63 = load i64, i64* %62, align 8
  %64 = bitcast %"class.std::__1::vector.1171"* %60 to i64*
  %65 = load i64, i64* %64, align 8
  %66 = sub i64 %63, %65
  %67 = ashr exact i64 %66, 3
  %68 = inttoptr i64 %65 to %"class.v8::internal::compiler::InstructionBlock"**
  %69 = getelementptr %"class.v8::internal::compiler::InstructionSequence", %"class.v8::internal::compiler::InstructionSequence"* %57, i64 0, i32 8, i32 0, i32 0, i32 0, i32 1
  %70 = getelementptr %"class.v8::internal::compiler::InstructionSequence", %"class.v8::internal::compiler::InstructionSequence"* %57, i64 0, i32 8, i32 0, i32 0, i32 1
  br label %71

71:                                               ; preds = %54, %183
  %72 = phi %"class.v8::internal::compiler::InstructionOperand"* [ null, %54 ], [ %186, %183 ]
  %73 = phi i32 [ 0, %54 ], [ %185, %183 ]
  %74 = phi i32 [ 2, %54 ], [ %184, %183 ]
  %75 = phi %"class.v8::internal::compiler::RpoNumber"* [ %51, %54 ], [ %187, %183 ]
  %76 = getelementptr inbounds %"class.v8::internal::compiler::RpoNumber", %"class.v8::internal::compiler::RpoNumber"* %75, i64 0, i32 0
  %77 = load i32, i32* %76, align 4
  %78 = sext i32 %77 to i64
  %79 = icmp ugt i64 %67, %78
  br i1 %79, label %82, label %80

80:                                               ; preds = %71
  %81 = bitcast %"class.std::__1::vector.1171"* %60 to %"class.std::__1::__vector_base_common"*
  tail call void @_ZNKSt3__120__vector_base_commonILb1EE20__throw_out_of_rangeEv(%"class.std::__1::__vector_base_common"* %81) #17
  unreachable

82:                                               ; preds = %71
  %83 = getelementptr inbounds %"class.v8::internal::compiler::InstructionBlock"*, %"class.v8::internal::compiler::InstructionBlock"** %68, i64 %78
  %84 = load %"class.v8::internal::compiler::InstructionBlock"*, %"class.v8::internal::compiler::InstructionBlock"** %83, align 8
  %85 = load i32, i32* %17, align 4
  %86 = icmp slt i32 %77, %85
  br i1 %86, label %87, label %183

87:                                               ; preds = %82
  %88 = load %"class.v8::internal::compiler::Instruction"***, %"class.v8::internal::compiler::Instruction"**** %69, align 8
  %89 = load i64, i64* %70, align 8
  %90 = getelementptr %"class.v8::internal::compiler::InstructionBlock", %"class.v8::internal::compiler::InstructionBlock"* %84, i64 0, i32 9
  %91 = load i32, i32* %90, align 8
  %92 = add nsw i32 %91, -1
  %93 = sext i32 %92 to i64
  %94 = add i64 %89, %93
  %95 = lshr i64 %94, 9
  %96 = getelementptr inbounds %"class.v8::internal::compiler::Instruction"**, %"class.v8::internal::compiler::Instruction"*** %88, i64 %95
  %97 = load %"class.v8::internal::compiler::Instruction"**, %"class.v8::internal::compiler::Instruction"*** %96, align 8
  %98 = and i64 %94, 511
  %99 = getelementptr inbounds %"class.v8::internal::compiler::Instruction"*, %"class.v8::internal::compiler::Instruction"** %97, i64 %98
  %100 = load %"class.v8::internal::compiler::Instruction"*, %"class.v8::internal::compiler::Instruction"** %99, align 8
  %101 = getelementptr inbounds %"class.v8::internal::compiler::Instruction", %"class.v8::internal::compiler::Instruction"* %100, i64 0, i32 2, i64 1
  %102 = load %"class.v8::internal::compiler::ParallelMove"*, %"class.v8::internal::compiler::ParallelMove"** %101, align 8
  %103 = getelementptr inbounds %"class.v8::internal::compiler::ParallelMove", %"class.v8::internal::compiler::ParallelMove"* %102, i64 0, i32 0, i32 0, i32 0, i32 0
  %104 = load %"class.v8::internal::compiler::MoveOperands"**, %"class.v8::internal::compiler::MoveOperands"*** %103, align 8
  %105 = getelementptr inbounds %"class.v8::internal::compiler::ParallelMove", %"class.v8::internal::compiler::ParallelMove"* %102, i64 0, i32 0, i32 0, i32 0, i32 1
  %106 = load %"class.v8::internal::compiler::MoveOperands"**, %"class.v8::internal::compiler::MoveOperands"*** %105, align 8
  %107 = icmp eq %"class.v8::internal::compiler::MoveOperands"** %104, %106
  br i1 %107, label %124, label %108

108:                                              ; preds = %87, %121
  %109 = phi %"class.v8::internal::compiler::MoveOperands"** [ %122, %121 ], [ %104, %87 ]
  %110 = load %"class.v8::internal::compiler::MoveOperands"*, %"class.v8::internal::compiler::MoveOperands"** %109, align 8
  %111 = getelementptr inbounds %"class.v8::internal::compiler::MoveOperands", %"class.v8::internal::compiler::MoveOperands"* %110, i64 0, i32 1, i32 0
  %112 = load i64, i64* %111, align 8
  %113 = and i64 %112, 7
  %114 = icmp eq i64 %113, 1
  br i1 %114, label %115, label %121

115:                                              ; preds = %108
  %116 = lshr i64 %112, 3
  %117 = trunc i64 %116 to i32
  %118 = icmp eq i32 %34, %117
  br i1 %118, label %119, label %121

119:                                              ; preds = %115
  %120 = getelementptr inbounds %"class.v8::internal::compiler::MoveOperands", %"class.v8::internal::compiler::MoveOperands"* %110, i64 0, i32 0
  br label %124

121:                                              ; preds = %115, %108
  %122 = getelementptr inbounds %"class.v8::internal::compiler::MoveOperands"*, %"class.v8::internal::compiler::MoveOperands"** %109, i64 1
  %123 = icmp eq %"class.v8::internal::compiler::MoveOperands"** %122, %106
  br i1 %123, label %124, label %108

124:                                              ; preds = %121, %87, %119
  %125 = phi %"class.v8::internal::compiler::InstructionOperand"* [ %120, %119 ], [ null, %87 ], [ null, %121 ]
  %126 = getelementptr inbounds %"class.v8::internal::compiler::InstructionBlock", %"class.v8::internal::compiler::InstructionBlock"* %84, i64 0, i32 10
  %127 = load i8, i8* %126, align 4, !range !3
  %128 = icmp eq i8 %127, 0
  %129 = select i1 %128, i32 4, i32 0
  %130 = getelementptr inbounds %"class.v8::internal::compiler::Instruction", %"class.v8::internal::compiler::Instruction"* %100, i64 0, i32 2, i64 0
  %131 = load %"class.v8::internal::compiler::ParallelMove"*, %"class.v8::internal::compiler::ParallelMove"** %130, align 8
  %132 = icmp eq %"class.v8::internal::compiler::ParallelMove"* %131, null
  br i1 %132, label %169, label %133

133:                                              ; preds = %124
  %134 = getelementptr inbounds %"class.v8::internal::compiler::ParallelMove", %"class.v8::internal::compiler::ParallelMove"* %131, i64 0, i32 0, i32 0, i32 0, i32 0
  %135 = load %"class.v8::internal::compiler::MoveOperands"**, %"class.v8::internal::compiler::MoveOperands"*** %134, align 8
  %136 = getelementptr inbounds %"class.v8::internal::compiler::ParallelMove", %"class.v8::internal::compiler::ParallelMove"* %131, i64 0, i32 0, i32 0, i32 0, i32 1
  %137 = load %"class.v8::internal::compiler::MoveOperands"**, %"class.v8::internal::compiler::MoveOperands"*** %136, align 8
  %138 = icmp eq %"class.v8::internal::compiler::MoveOperands"** %135, %137
  br i1 %138, label %169, label %139

139:                                              ; preds = %133
  %140 = getelementptr inbounds %"class.v8::internal::compiler::InstructionOperand", %"class.v8::internal::compiler::InstructionOperand"* %125, i64 0, i32 0
  %141 = load i64, i64* %140, align 8
  %142 = and i64 %141, 7
  %143 = icmp eq i64 %142, 4
  br i1 %143, label %144, label %154

144:                                              ; preds = %139, %150
  %145 = phi %"class.v8::internal::compiler::MoveOperands"** [ %149, %150 ], [ %135, %139 ]
  %146 = load %"class.v8::internal::compiler::MoveOperands"*, %"class.v8::internal::compiler::MoveOperands"** %145, align 8
  %147 = getelementptr inbounds %"class.v8::internal::compiler::MoveOperands", %"class.v8::internal::compiler::MoveOperands"* %146, i64 0, i32 1
  %148 = icmp eq %"class.v8::internal::compiler::InstructionOperand"* %125, %147
  %149 = getelementptr inbounds %"class.v8::internal::compiler::MoveOperands"*, %"class.v8::internal::compiler::MoveOperands"** %145, i64 1
  br i1 %148, label %161, label %150

150:                                              ; preds = %144
  %151 = icmp eq %"class.v8::internal::compiler::MoveOperands"** %149, %137
  br i1 %151, label %169, label %144

152:                                              ; preds = %154
  %153 = icmp eq %"class.v8::internal::compiler::MoveOperands"** %160, %137
  br i1 %153, label %169, label %154

154:                                              ; preds = %139, %152
  %155 = phi %"class.v8::internal::compiler::MoveOperands"** [ %160, %152 ], [ %135, %139 ]
  %156 = load %"class.v8::internal::compiler::MoveOperands"*, %"class.v8::internal::compiler::MoveOperands"** %155, align 8
  %157 = getelementptr inbounds %"class.v8::internal::compiler::MoveOperands", %"class.v8::internal::compiler::MoveOperands"* %156, i64 0, i32 1, i32 0
  %158 = load i64, i64* %157, align 8
  %159 = icmp eq i64 %141, %158
  %160 = getelementptr inbounds %"class.v8::internal::compiler::MoveOperands"*, %"class.v8::internal::compiler::MoveOperands"** %155, i64 1
  br i1 %159, label %161, label %152

161:                                              ; preds = %154, %144
  %162 = phi %"class.v8::internal::compiler::MoveOperands"* [ %146, %144 ], [ %156, %154 ]
  %163 = getelementptr inbounds %"class.v8::internal::compiler::MoveOperands", %"class.v8::internal::compiler::MoveOperands"* %162, i64 0, i32 0, i32 0
  %164 = load i64, i64* %163, align 8
  %165 = and i64 %164, 7
  %166 = icmp eq i64 %165, 5
  %167 = or i32 %129, 2
  %168 = select i1 %166, i32 %167, i32 %129
  br label %169

169:                                              ; preds = %152, %150, %133, %161, %124
  %170 = phi i32 [ %129, %124 ], [ %168, %161 ], [ %129, %133 ], [ %129, %150 ], [ %129, %152 ]
  %171 = getelementptr inbounds %"class.v8::internal::compiler::InstructionBlock", %"class.v8::internal::compiler::InstructionBlock"* %84, i64 0, i32 8
  %172 = load i32, i32* %171, align 4
  %173 = icmp eq i32 %92, %172
  %174 = zext i1 %173 to i32
  %175 = or i32 %170, %174
  %176 = icmp eq %"class.v8::internal::compiler::InstructionOperand"* %72, null
  %177 = icmp sgt i32 %175, %73
  %178 = or i1 %176, %177
  %179 = select i1 %178, i32 %175, i32 %73
  %180 = select i1 %178, %"class.v8::internal::compiler::InstructionOperand"* %125, %"class.v8::internal::compiler::InstructionOperand"* %72
  %181 = add nsw i32 %74, -1
  %182 = icmp slt i32 %74, 2
  br i1 %182, label %189, label %183

183:                                              ; preds = %82, %169
  %184 = phi i32 [ %74, %82 ], [ %181, %169 ]
  %185 = phi i32 [ %73, %82 ], [ %179, %169 ]
  %186 = phi %"class.v8::internal::compiler::InstructionOperand"* [ %72, %82 ], [ %180, %169 ]
  %187 = getelementptr inbounds %"class.v8::internal::compiler::RpoNumber", %"class.v8::internal::compiler::RpoNumber"* %75, i64 1
  %188 = icmp eq %"class.v8::internal::compiler::RpoNumber"* %187, %52
  br i1 %188, label %189, label %71

189:                                              ; preds = %169, %183, %43
  %190 = phi %"class.v8::internal::compiler::InstructionOperand"* [ null, %43 ], [ %186, %183 ], [ %180, %169 ]
  %191 = load i32, i32* %18, align 4
  %192 = shl nsw i32 %191, 2
  %193 = getelementptr inbounds %"class.v8::internal::compiler::PhiInstruction", %"class.v8::internal::compiler::PhiInstruction"* %32, i64 0, i32 1
  %194 = bitcast %"class.v8::internal::compiler::InstructionOperand"* %190 to i8*
  %195 = getelementptr inbounds %"class.v8::internal::compiler::InstructionOperand", %"class.v8::internal::compiler::InstructionOperand"* %190, i64 0, i32 0
  %196 = load i64, i64* %195, align 8
  %197 = trunc i64 %196 to i32
  %198 = and i32 %197, 7
  switch i32 %198, label %207 [
    i32 2, label %208
    i32 3, label %208
    i32 1, label %199
    i32 5, label %200
  ]

199:                                              ; preds = %189
  br label %208

200:                                              ; preds = %189
  %201 = and i64 %196, 7
  %202 = icmp ugt i64 %201, 4
  %203 = and i64 %196, 24
  %204 = icmp eq i64 %203, 0
  %205 = and i1 %202, %204
  %206 = zext i1 %205 to i8
  br label %208

207:                                              ; preds = %189
  tail call void (i8*, ...) @_Z8V8_FatalPKcz(i8* getelementptr inbounds ([17 x i8], [17 x i8]* @.str, i64 0, i64 0)) #17
  unreachable

208:                                              ; preds = %189, %189, %199, %200
  %209 = phi i8 [ %206, %200 ], [ 4, %199 ], [ 0, %189 ], [ 0, %189 ]
  %210 = load i8, i8* %19, align 4, !range !3
  %211 = zext i8 %210 to i32
  %212 = tail call %"class.v8::internal::compiler::UsePosition"* @_ZN2v88internal8compiler16LiveRangeBuilder6DefineENS1_16LifetimePositionEPNS1_18InstructionOperandEPvNS1_19UsePositionHintTypeENS1_29TopTierRegisterAllocationData9SpillModeE(%"class.v8::internal::compiler::LiveRangeBuilder"* %0, i32 %192, %"class.v8::internal::compiler::InstructionOperand"* %193, i8* %194, i8 zeroext %209, i32 %211)
  %213 = ptrtoint %"class.v8::internal::compiler::InstructionOperand"* %190 to i64
  %214 = ptrtoint %"class.v8::internal::compiler::UsePosition"* %212 to i64
  %215 = load %"class.std::__1::__tree_node.1587"*, %"class.std::__1::__tree_node.1587"** %22, align 8
  %216 = icmp eq %"class.std::__1::__tree_node.1587"* %215, null
  br i1 %216, label %243, label %217

217:                                              ; preds = %208, %239
  %218 = phi %"class.std::__1::__tree_node.1587"* [ %242, %239 ], [ %215, %208 ]
  %219 = phi %"class.std::__1::__tree_node_base"** [ %241, %239 ], [ %23, %208 ]
  %220 = getelementptr inbounds %"class.std::__1::__tree_node.1587", %"class.std::__1::__tree_node.1587"* %218, i64 0, i32 1, i32 0, i32 0
  %221 = load %"class.v8::internal::compiler::InstructionOperand"*, %"class.v8::internal::compiler::InstructionOperand"** %220, align 8
  %222 = icmp ugt %"class.v8::internal::compiler::InstructionOperand"* %221, %190
  br i1 %222, label %223, label %229

223:                                              ; preds = %217
  %224 = getelementptr inbounds %"class.std::__1::__tree_node.1587", %"class.std::__1::__tree_node.1587"* %218, i64 0, i32 0, i32 0, i32 0
  %225 = load %"class.std::__1::__tree_node_base"*, %"class.std::__1::__tree_node_base"** %224, align 8
  %226 = icmp eq %"class.std::__1::__tree_node_base"* %225, null
  br i1 %226, label %227, label %239

227:                                              ; preds = %223
  %228 = getelementptr inbounds %"class.std::__1::__tree_node.1587", %"class.std::__1::__tree_node.1587"* %218, i64 0, i32 0, i32 0
  br label %243

229:                                              ; preds = %217
  %230 = icmp ult %"class.v8::internal::compiler::InstructionOperand"* %221, %190
  br i1 %230, label %231, label %237

231:                                              ; preds = %229
  %232 = getelementptr inbounds %"class.std::__1::__tree_node.1587", %"class.std::__1::__tree_node.1587"* %218, i64 0, i32 0, i32 1
  %233 = load %"class.std::__1::__tree_node_base"*, %"class.std::__1::__tree_node_base"** %232, align 8
  %234 = icmp eq %"class.std::__1::__tree_node_base"* %233, null
  br i1 %234, label %235, label %239

235:                                              ; preds = %231
  %236 = getelementptr inbounds %"class.std::__1::__tree_node.1587", %"class.std::__1::__tree_node.1587"* %218, i64 0, i32 0, i32 0
  br label %243

237:                                              ; preds = %229
  %238 = getelementptr inbounds %"class.std::__1::__tree_node.1587", %"class.std::__1::__tree_node.1587"* %218, i64 0, i32 0, i32 0
  br label %243

239:                                              ; preds = %231, %223
  %240 = phi %"class.std::__1::__tree_node_base"* [ %225, %223 ], [ %233, %231 ]
  %241 = phi %"class.std::__1::__tree_node_base"** [ %224, %223 ], [ %232, %231 ]
  %242 = bitcast %"class.std::__1::__tree_node_base"* %240 to %"class.std::__1::__tree_node.1587"*
  br label %217

243:                                              ; preds = %208, %237, %235, %227
  %244 = phi %"class.std::__1::__tree_end_node"* [ %228, %227 ], [ %236, %235 ], [ %238, %237 ], [ %21, %208 ]
  %245 = phi %"class.std::__1::__tree_node_base"** [ %224, %227 ], [ %232, %235 ], [ %219, %237 ], [ %24, %208 ]
  %246 = bitcast %"class.std::__1::__tree_node_base"** %245 to %"class.std::__1::__tree_node.1587"**
  %247 = load %"class.std::__1::__tree_node.1587"*, %"class.std::__1::__tree_node.1587"** %246, align 8
  %248 = icmp eq %"class.std::__1::__tree_node.1587"* %247, null
  br i1 %248, label %249, label %283

249:                                              ; preds = %243
  %250 = load %"class.v8::internal::Zone"*, %"class.v8::internal::Zone"** %25, align 8, !noalias !105
  %251 = getelementptr inbounds %"class.v8::internal::Zone", %"class.v8::internal::Zone"* %250, i64 0, i32 2
  %252 = load i64, i64* %251, align 8, !noalias !105
  %253 = getelementptr inbounds %"class.v8::internal::Zone", %"class.v8::internal::Zone"* %250, i64 0, i32 3
  %254 = load i64, i64* %253, align 8, !noalias !105
  %255 = sub i64 %254, %252
  %256 = icmp ult i64 %255, 48
  br i1 %256, label %257, label %259, !prof !2

257:                                              ; preds = %249
  %258 = tail call i64 @_ZN2v88internal4Zone9NewExpandEm(%"class.v8::internal::Zone"* %250, i64 48) #16, !noalias !105
  br label %261

259:                                              ; preds = %249
  %260 = add i64 %252, 48
  store i64 %260, i64* %251, align 8, !noalias !105
  br label %261

261:                                              ; preds = %259, %257
  %262 = phi i64 [ %258, %257 ], [ %252, %259 ]
  %263 = inttoptr i64 %262 to %"class.std::__1::__tree_node.1587"*
  %264 = getelementptr inbounds %"class.std::__1::__tree_node.1587", %"class.std::__1::__tree_node.1587"* %263, i64 0, i32 1, i32 0
  %265 = bitcast %"struct.std::__1::pair.1386"* %264 to i64*
  store i64 %213, i64* %265, align 8, !noalias !105
  %266 = getelementptr inbounds %"class.std::__1::__tree_node.1587", %"class.std::__1::__tree_node.1587"* %263, i64 0, i32 1, i32 0, i32 1
  %267 = bitcast %"class.v8::internal::compiler::UsePosition"** %266 to i64*
  store i64 %214, i64* %267, align 8, !noalias !105
  %268 = inttoptr i64 %262 to %"class.std::__1::__tree_node_base"*
  %269 = getelementptr inbounds %"class.std::__1::__tree_node_base", %"class.std::__1::__tree_node_base"* %268, i64 0, i32 2
  %270 = inttoptr i64 %262 to i8*
  tail call void @llvm.memset.p0i8.i64(i8* align 8 %270, i8 0, i64 16, i1 false) #16
  store %"class.std::__1::__tree_end_node"* %244, %"class.std::__1::__tree_end_node"** %269, align 8
  store %"class.std::__1::__tree_node_base"* %268, %"class.std::__1::__tree_node_base"** %245, align 8
  %271 = load %"class.std::__1::__tree_end_node"*, %"class.std::__1::__tree_end_node"** %26, align 8
  %272 = getelementptr inbounds %"class.std::__1::__tree_end_node", %"class.std::__1::__tree_end_node"* %271, i64 0, i32 0
  %273 = load %"class.std::__1::__tree_node_base"*, %"class.std::__1::__tree_node_base"** %272, align 8
  %274 = icmp eq %"class.std::__1::__tree_node_base"* %273, null
  br i1 %274, label %278, label %275

275:                                              ; preds = %261
  %276 = ptrtoint %"class.std::__1::__tree_node_base"* %273 to i64
  store i64 %276, i64* %27, align 8
  %277 = load %"class.std::__1::__tree_node_base"*, %"class.std::__1::__tree_node_base"** %245, align 8
  br label %278

278:                                              ; preds = %275, %261
  %279 = phi %"class.std::__1::__tree_node_base"* [ %268, %261 ], [ %277, %275 ]
  %280 = load %"class.std::__1::__tree_node_base"*, %"class.std::__1::__tree_node_base"** %23, align 8
  tail call void @_ZNSt3__127__tree_balance_after_insertIPNS_16__tree_node_baseIPvEEEEvT_S5_(%"class.std::__1::__tree_node_base"* %280, %"class.std::__1::__tree_node_base"* %279) #16
  %281 = load i64, i64* %28, align 8
  %282 = add i64 %281, 1
  store i64 %282, i64* %28, align 8
  br label %283

283:                                              ; preds = %243, %278
  %284 = getelementptr inbounds %"class.v8::internal::compiler::PhiInstruction"*, %"class.v8::internal::compiler::PhiInstruction"** %31, i64 1
  %285 = icmp eq %"class.v8::internal::compiler::PhiInstruction"** %284, %7
  br i1 %285, label %29, label %30
}

; Function Attrs: nounwind ssp uwtable
define hidden void @_ZN2v88internal8compiler16LiveRangeBuilder10MapPhiHintEPNS1_18InstructionOperandEPNS1_11UsePositionE(%"class.v8::internal::compiler::LiveRangeBuilder"*, %"class.v8::internal::compiler::InstructionOperand"*, %"class.v8::internal::compiler::UsePosition"*) local_unnamed_addr #0 align 2 {
  %4 = ptrtoint %"class.v8::internal::compiler::InstructionOperand"* %1 to i64
  %5 = ptrtoint %"class.v8::internal::compiler::UsePosition"* %2 to i64
  %6 = getelementptr inbounds %"class.v8::internal::compiler::LiveRangeBuilder", %"class.v8::internal::compiler::LiveRangeBuilder"* %0, i64 0, i32 1, i32 0, i32 0
  %7 = getelementptr inbounds %"class.v8::internal::compiler::LiveRangeBuilder", %"class.v8::internal::compiler::LiveRangeBuilder"* %0, i64 0, i32 1, i32 0, i32 0, i32 1, i32 0, i32 0
  %8 = bitcast %"class.std::__1::__tree_end_node"* %7 to %"class.std::__1::__tree_node.1587"**
  %9 = load %"class.std::__1::__tree_node.1587"*, %"class.std::__1::__tree_node.1587"** %8, align 8
  %10 = icmp eq %"class.std::__1::__tree_node.1587"* %9, null
  br i1 %10, label %39, label %11

11:                                               ; preds = %3
  %12 = getelementptr inbounds %"class.v8::internal::compiler::LiveRangeBuilder", %"class.v8::internal::compiler::LiveRangeBuilder"* %0, i64 0, i32 1, i32 0, i32 0, i32 1, i32 0, i32 0, i32 0
  br label %13

13:                                               ; preds = %35, %11
  %14 = phi %"class.std::__1::__tree_node.1587"* [ %38, %35 ], [ %9, %11 ]
  %15 = phi %"class.std::__1::__tree_node_base"** [ %37, %35 ], [ %12, %11 ]
  %16 = getelementptr inbounds %"class.std::__1::__tree_node.1587", %"class.std::__1::__tree_node.1587"* %14, i64 0, i32 1, i32 0, i32 0
  %17 = load %"class.v8::internal::compiler::InstructionOperand"*, %"class.v8::internal::compiler::InstructionOperand"** %16, align 8
  %18 = icmp ugt %"class.v8::internal::compiler::InstructionOperand"* %17, %1
  br i1 %18, label %19, label %25

19:                                               ; preds = %13
  %20 = getelementptr inbounds %"class.std::__1::__tree_node.1587", %"class.std::__1::__tree_node.1587"* %14, i64 0, i32 0, i32 0, i32 0
  %21 = load %"class.std::__1::__tree_node_base"*, %"class.std::__1::__tree_node_base"** %20, align 8
  %22 = icmp eq %"class.std::__1::__tree_node_base"* %21, null
  br i1 %22, label %23, label %35

23:                                               ; preds = %19
  %24 = getelementptr inbounds %"class.std::__1::__tree_node.1587", %"class.std::__1::__tree_node.1587"* %14, i64 0, i32 0, i32 0
  br label %41

25:                                               ; preds = %13
  %26 = icmp ult %"class.v8::internal::compiler::InstructionOperand"* %17, %1
  br i1 %26, label %27, label %33

27:                                               ; preds = %25
  %28 = getelementptr inbounds %"class.std::__1::__tree_node.1587", %"class.std::__1::__tree_node.1587"* %14, i64 0, i32 0, i32 1
  %29 = load %"class.std::__1::__tree_node_base"*, %"class.std::__1::__tree_node_base"** %28, align 8
  %30 = icmp eq %"class.std::__1::__tree_node_base"* %29, null
  br i1 %30, label %31, label %35

31:                                               ; preds = %27
  %32 = getelementptr inbounds %"class.std::__1::__tree_node.1587", %"class.std::__1::__tree_node.1587"* %14, i64 0, i32 0, i32 0
  br label %41

33:                                               ; preds = %25
  %34 = getelementptr inbounds %"class.std::__1::__tree_node.1587", %"class.std::__1::__tree_node.1587"* %14, i64 0, i32 0, i32 0
  br label %41

35:                                               ; preds = %27, %19
  %36 = phi %"class.std::__1::__tree_node_base"* [ %21, %19 ], [ %29, %27 ]
  %37 = phi %"class.std::__1::__tree_node_base"** [ %20, %19 ], [ %28, %27 ]
  %38 = bitcast %"class.std::__1::__tree_node_base"* %36 to %"class.std::__1::__tree_node.1587"*
  br label %13

39:                                               ; preds = %3
  %40 = getelementptr inbounds %"class.std::__1::__tree_end_node", %"class.std::__1::__tree_end_node"* %7, i64 0, i32 0
  br label %41

41:                                               ; preds = %39, %33, %31, %23
  %42 = phi %"class.std::__1::__tree_end_node"* [ %7, %39 ], [ %24, %23 ], [ %32, %31 ], [ %34, %33 ]
  %43 = phi %"class.std::__1::__tree_node_base"** [ %40, %39 ], [ %20, %23 ], [ %28, %31 ], [ %15, %33 ]
  %44 = bitcast %"class.std::__1::__tree_node_base"** %43 to %"class.std::__1::__tree_node.1587"**
  %45 = load %"class.std::__1::__tree_node.1587"*, %"class.std::__1::__tree_node.1587"** %44, align 8
  %46 = icmp eq %"class.std::__1::__tree_node.1587"* %45, null
  br i1 %46, label %47, label %86

47:                                               ; preds = %41
  %48 = getelementptr inbounds %"class.v8::internal::compiler::LiveRangeBuilder", %"class.v8::internal::compiler::LiveRangeBuilder"* %0, i64 0, i32 1, i32 0, i32 0, i32 1, i32 1, i32 0, i32 0
  %49 = load %"class.v8::internal::Zone"*, %"class.v8::internal::Zone"** %48, align 8, !noalias !108
  %50 = getelementptr inbounds %"class.v8::internal::Zone", %"class.v8::internal::Zone"* %49, i64 0, i32 2
  %51 = load i64, i64* %50, align 8, !noalias !108
  %52 = getelementptr inbounds %"class.v8::internal::Zone", %"class.v8::internal::Zone"* %49, i64 0, i32 3
  %53 = load i64, i64* %52, align 8, !noalias !108
  %54 = sub i64 %53, %51
  %55 = icmp ult i64 %54, 48
  br i1 %55, label %56, label %58, !prof !2

56:                                               ; preds = %47
  %57 = tail call i64 @_ZN2v88internal4Zone9NewExpandEm(%"class.v8::internal::Zone"* %49, i64 48) #16, !noalias !108
  br label %60

58:                                               ; preds = %47
  %59 = add i64 %51, 48
  store i64 %59, i64* %50, align 8, !noalias !108
  br label %60

60:                                               ; preds = %58, %56
  %61 = phi i64 [ %57, %56 ], [ %51, %58 ]
  %62 = inttoptr i64 %61 to %"class.std::__1::__tree_node.1587"*
  %63 = getelementptr inbounds %"class.std::__1::__tree_node.1587", %"class.std::__1::__tree_node.1587"* %62, i64 0, i32 1, i32 0
  %64 = bitcast %"struct.std::__1::pair.1386"* %63 to i64*
  store i64 %4, i64* %64, align 8, !noalias !108
  %65 = getelementptr inbounds %"class.std::__1::__tree_node.1587", %"class.std::__1::__tree_node.1587"* %62, i64 0, i32 1, i32 0, i32 1
  %66 = bitcast %"class.v8::internal::compiler::UsePosition"** %65 to i64*
  store i64 %5, i64* %66, align 8, !noalias !108
  %67 = inttoptr i64 %61 to %"class.std::__1::__tree_node_base"*
  %68 = getelementptr inbounds %"class.std::__1::__tree_node_base", %"class.std::__1::__tree_node_base"* %67, i64 0, i32 2
  %69 = inttoptr i64 %61 to i8*
  tail call void @llvm.memset.p0i8.i64(i8* align 8 %69, i8 0, i64 16, i1 false) #16
  store %"class.std::__1::__tree_end_node"* %42, %"class.std::__1::__tree_end_node"** %68, align 8
  store %"class.std::__1::__tree_node_base"* %67, %"class.std::__1::__tree_node_base"** %43, align 8
  %70 = getelementptr inbounds %"class.std::__1::__tree.1370", %"class.std::__1::__tree.1370"* %6, i64 0, i32 0
  %71 = load %"class.std::__1::__tree_end_node"*, %"class.std::__1::__tree_end_node"** %70, align 8
  %72 = getelementptr inbounds %"class.std::__1::__tree_end_node", %"class.std::__1::__tree_end_node"* %71, i64 0, i32 0
  %73 = load %"class.std::__1::__tree_node_base"*, %"class.std::__1::__tree_node_base"** %72, align 8
  %74 = icmp eq %"class.std::__1::__tree_node_base"* %73, null
  br i1 %74, label %79, label %75

75:                                               ; preds = %60
  %76 = ptrtoint %"class.std::__1::__tree_node_base"* %73 to i64
  %77 = bitcast %"class.std::__1::__tree.1370"* %6 to i64*
  store i64 %76, i64* %77, align 8
  %78 = load %"class.std::__1::__tree_node_base"*, %"class.std::__1::__tree_node_base"** %43, align 8
  br label %79

79:                                               ; preds = %75, %60
  %80 = phi %"class.std::__1::__tree_node_base"* [ %67, %60 ], [ %78, %75 ]
  %81 = getelementptr inbounds %"class.v8::internal::compiler::LiveRangeBuilder", %"class.v8::internal::compiler::LiveRangeBuilder"* %0, i64 0, i32 1, i32 0, i32 0, i32 1, i32 0, i32 0, i32 0
  %82 = load %"class.std::__1::__tree_node_base"*, %"class.std::__1::__tree_node_base"** %81, align 8
  tail call void @_ZNSt3__127__tree_balance_after_insertIPNS_16__tree_node_baseIPvEEEEvT_S5_(%"class.std::__1::__tree_node_base"* %82, %"class.std::__1::__tree_node_base"* %80) #16
  %83 = getelementptr inbounds %"class.v8::internal::compiler::LiveRangeBuilder", %"class.v8::internal::compiler::LiveRangeBuilder"* %0, i64 0, i32 1, i32 0, i32 0, i32 2, i32 0, i32 0
  %84 = load i64, i64* %83, align 8
  %85 = add i64 %84, 1
  store i64 %85, i64* %83, align 8
  br label %86

86:                                               ; preds = %41, %79
  ret void
}

; Function Attrs: nounwind ssp uwtable
define hidden void @_ZN2v88internal8compiler16LiveRangeBuilder17ProcessLoopHeaderEPKNS1_16InstructionBlockEPNS0_9BitVectorE(%"class.v8::internal::compiler::LiveRangeBuilder"* nocapture readonly, %"class.v8::internal::compiler::InstructionBlock"* nocapture readonly, %"class.v8::internal::BitVector"*) local_unnamed_addr #0 align 2 {
  %4 = getelementptr inbounds %"class.v8::internal::BitVector", %"class.v8::internal::BitVector"* %2, i64 0, i32 1
  %5 = load i32, i32* %4, align 4
  %6 = icmp eq i32 %5, 1
  %7 = getelementptr inbounds %"class.v8::internal::BitVector", %"class.v8::internal::BitVector"* %2, i64 0, i32 2
  br i1 %6, label %8, label %10

8:                                                ; preds = %3
  %9 = bitcast %"union.v8::internal::BitVector::DataStorage"* %7 to i64*
  br label %13

10:                                               ; preds = %3
  %11 = getelementptr inbounds %"union.v8::internal::BitVector::DataStorage", %"union.v8::internal::BitVector::DataStorage"* %7, i64 0, i32 0
  %12 = load i64*, i64** %11, align 8
  br label %13

13:                                               ; preds = %10, %8
  %14 = phi i64* [ %9, %8 ], [ %12, %10 ]
  %15 = load i64, i64* %14, align 8
  %16 = icmp eq i64 %15, 0
  br i1 %16, label %17, label %35

17:                                               ; preds = %13
  %18 = sext i32 %5 to i64
  %19 = icmp sgt i32 %5, 1
  br i1 %19, label %20, label %46

20:                                               ; preds = %17
  %21 = getelementptr inbounds %"class.v8::internal::BitVector", %"class.v8::internal::BitVector"* %2, i64 0, i32 2, i32 0
  %22 = load i64*, i64** %21, align 8
  br label %27

23:                                               ; preds = %27
  %24 = add nuw nsw i64 %29, 1
  %25 = trunc i64 %24 to i32
  %26 = icmp eq i64 %24, %18
  br i1 %26, label %44, label %27

27:                                               ; preds = %23, %20
  %28 = phi i32 [ 1, %20 ], [ %25, %23 ]
  %29 = phi i64 [ 1, %20 ], [ %24, %23 ]
  %30 = getelementptr inbounds i64, i64* %22, i64 %29
  %31 = load i64, i64* %30, align 8
  %32 = icmp eq i64 %31, 0
  br i1 %32, label %23, label %33

33:                                               ; preds = %27
  %34 = shl i32 %28, 6
  br label %35

35:                                               ; preds = %33, %13
  %36 = phi i32 [ 0, %13 ], [ %28, %33 ]
  %37 = phi i32 [ 0, %13 ], [ %34, %33 ]
  %38 = phi i64 [ %15, %13 ], [ %31, %33 ]
  %39 = tail call i64 @llvm.cttz.i64(i64 %38, i1 true) #16, !range !79
  %40 = trunc i64 %39 to i32
  %41 = or i32 %37, %40
  %42 = lshr i64 %38, %39
  %43 = lshr i64 %42, 1
  br label %46

44:                                               ; preds = %23
  %45 = shl i32 %28, 6
  br label %46

46:                                               ; preds = %44, %17, %35
  %47 = phi i32 [ %36, %35 ], [ 1, %17 ], [ %5, %44 ]
  %48 = phi i64 [ %43, %35 ], [ 0, %17 ], [ 0, %44 ]
  %49 = phi i32 [ %41, %35 ], [ 0, %17 ], [ %45, %44 ]
  %50 = getelementptr inbounds %"class.v8::internal::compiler::InstructionBlock", %"class.v8::internal::compiler::InstructionBlock"* %1, i64 0, i32 8
  %51 = load i32, i32* %50, align 4
  %52 = shl nsw i32 %51, 2
  %53 = getelementptr inbounds %"class.v8::internal::compiler::LiveRangeBuilder", %"class.v8::internal::compiler::LiveRangeBuilder"* %0, i64 0, i32 0
  %54 = load %"class.v8::internal::compiler::TopTierRegisterAllocationData"*, %"class.v8::internal::compiler::TopTierRegisterAllocationData"** %53, align 8
  %55 = getelementptr inbounds %"class.v8::internal::compiler::TopTierRegisterAllocationData", %"class.v8::internal::compiler::TopTierRegisterAllocationData"* %54, i64 0, i32 3
  %56 = load %"class.v8::internal::compiler::InstructionSequence"*, %"class.v8::internal::compiler::InstructionSequence"** %55, align 8
  %57 = getelementptr inbounds %"class.v8::internal::compiler::InstructionSequence", %"class.v8::internal::compiler::InstructionSequence"* %56, i64 0, i32 2
  %58 = bitcast %"class.v8::internal::ZoneVector.1170"** %57 to %"class.std::__1::vector.1171"**
  %59 = load %"class.std::__1::vector.1171"*, %"class.std::__1::vector.1171"** %58, align 8
  %60 = getelementptr inbounds %"class.v8::internal::compiler::InstructionBlock", %"class.v8::internal::compiler::InstructionBlock"* %1, i64 0, i32 6, i32 0
  %61 = load i32, i32* %60, align 4
  %62 = sext i32 %61 to i64
  %63 = add nsw i64 %62, -1
  %64 = getelementptr inbounds %"class.std::__1::vector.1171", %"class.std::__1::vector.1171"* %59, i64 0, i32 0, i32 1
  %65 = bitcast %"class.v8::internal::compiler::InstructionBlock"*** %64 to i64*
  %66 = load i64, i64* %65, align 8
  %67 = bitcast %"class.std::__1::vector.1171"* %59 to i64*
  %68 = load i64, i64* %67, align 8
  %69 = sub i64 %66, %68
  %70 = ashr exact i64 %69, 3
  %71 = icmp ugt i64 %70, %63
  br i1 %71, label %74, label %72

72:                                               ; preds = %46
  %73 = bitcast %"class.std::__1::vector.1171"* %59 to %"class.std::__1::__vector_base_common"*
  tail call void @_ZNKSt3__120__vector_base_commonILb1EE20__throw_out_of_rangeEv(%"class.std::__1::__vector_base_common"* %73) #17
  unreachable

74:                                               ; preds = %46
  %75 = inttoptr i64 %68 to %"class.v8::internal::compiler::InstructionBlock"**
  %76 = getelementptr inbounds %"class.v8::internal::compiler::InstructionBlock"*, %"class.v8::internal::compiler::InstructionBlock"** %75, i64 %63
  %77 = load %"class.v8::internal::compiler::InstructionBlock"*, %"class.v8::internal::compiler::InstructionBlock"** %76, align 8
  %78 = getelementptr inbounds %"class.v8::internal::compiler::InstructionBlock", %"class.v8::internal::compiler::InstructionBlock"* %77, i64 0, i32 9
  %79 = load i32, i32* %78, align 8
  %80 = shl i32 %79, 2
  %81 = icmp slt i32 %47, %5
  br i1 %81, label %82, label %195

82:                                               ; preds = %74
  %83 = getelementptr inbounds %"class.v8::internal::BitVector", %"class.v8::internal::BitVector"* %2, i64 0, i32 2, i32 0
  br label %84

84:                                               ; preds = %191, %82
  %85 = phi %"class.v8::internal::compiler::TopTierRegisterAllocationData"* [ %54, %82 ], [ %192, %191 ]
  %86 = phi i32 [ %49, %82 ], [ %189, %191 ]
  %87 = phi i64 [ %48, %82 ], [ %188, %191 ]
  %88 = phi i32 [ %47, %82 ], [ %187, %191 ]
  %89 = tail call %"class.v8::internal::compiler::TopLevelLiveRange"* @_ZN2v88internal8compiler29TopTierRegisterAllocationData23GetOrCreateLiveRangeForEi(%"class.v8::internal::compiler::TopTierRegisterAllocationData"* %85, i32 %86)
  %90 = load %"class.v8::internal::compiler::TopTierRegisterAllocationData"*, %"class.v8::internal::compiler::TopTierRegisterAllocationData"** %53, align 8
  %91 = getelementptr inbounds %"class.v8::internal::compiler::TopTierRegisterAllocationData", %"class.v8::internal::compiler::TopTierRegisterAllocationData"* %90, i64 0, i32 1
  %92 = load %"class.v8::internal::Zone"*, %"class.v8::internal::Zone"** %91, align 8
  %93 = getelementptr inbounds %"class.v8::internal::compiler::TopTierRegisterAllocationData", %"class.v8::internal::compiler::TopTierRegisterAllocationData"* %90, i64 0, i32 23, i32 0
  %94 = load i32, i32* %93, align 4
  %95 = and i32 %94, 1
  %96 = icmp eq i32 %95, 0
  br i1 %96, label %100, label %97

97:                                               ; preds = %84
  %98 = getelementptr inbounds %"class.v8::internal::compiler::TopLevelLiveRange", %"class.v8::internal::compiler::TopLevelLiveRange"* %89, i64 0, i32 1
  %99 = load i32, i32* %98, align 4
  tail call void (i8*, ...) @_ZN2v88internal6PrintFEPKcz(i8* getelementptr inbounds ([42 x i8], [42 x i8]* @.str.6, i64 0, i64 0), i32 %99, i32 %52, i32 %80) #16
  br label %100

100:                                              ; preds = %84, %97
  %101 = getelementptr inbounds %"class.v8::internal::compiler::TopLevelLiveRange", %"class.v8::internal::compiler::TopLevelLiveRange"* %89, i64 0, i32 0, i32 3
  %102 = load %"class.v8::internal::compiler::UseInterval"*, %"class.v8::internal::compiler::UseInterval"** %101, align 8
  %103 = icmp eq %"class.v8::internal::compiler::UseInterval"* %102, null
  br i1 %103, label %122, label %104

104:                                              ; preds = %100
  %105 = bitcast %"class.v8::internal::compiler::UseInterval"** %101 to i64*
  br label %106

106:                                              ; preds = %112, %104
  %107 = phi %"class.v8::internal::compiler::UseInterval"* [ %102, %104 ], [ %120, %112 ]
  %108 = phi i32 [ %80, %104 ], [ %116, %112 ]
  %109 = getelementptr inbounds %"class.v8::internal::compiler::UseInterval", %"class.v8::internal::compiler::UseInterval"* %107, i64 0, i32 0, i32 0
  %110 = load i32, i32* %109, align 8
  %111 = icmp sgt i32 %110, %80
  br i1 %111, label %122, label %112

112:                                              ; preds = %106
  %113 = getelementptr inbounds %"class.v8::internal::compiler::UseInterval", %"class.v8::internal::compiler::UseInterval"* %107, i64 0, i32 1, i32 0
  %114 = load i32, i32* %113, align 4
  %115 = icmp sgt i32 %114, %80
  %116 = select i1 %115, i32 %114, i32 %108
  %117 = getelementptr inbounds %"class.v8::internal::compiler::UseInterval", %"class.v8::internal::compiler::UseInterval"* %107, i64 0, i32 2
  %118 = bitcast %"class.v8::internal::compiler::UseInterval"** %117 to i64*
  %119 = load i64, i64* %118, align 8
  store i64 %119, i64* %105, align 8
  %120 = inttoptr i64 %119 to %"class.v8::internal::compiler::UseInterval"*
  %121 = icmp eq i64 %119, 0
  br i1 %121, label %122, label %106

122:                                              ; preds = %112, %106, %100
  %123 = phi i32 [ %80, %100 ], [ %116, %112 ], [ %108, %106 ]
  %124 = getelementptr inbounds %"class.v8::internal::Zone", %"class.v8::internal::Zone"* %92, i64 0, i32 2
  %125 = load i64, i64* %124, align 8
  %126 = getelementptr inbounds %"class.v8::internal::Zone", %"class.v8::internal::Zone"* %92, i64 0, i32 3
  %127 = load i64, i64* %126, align 8
  %128 = sub i64 %127, %125
  %129 = icmp ult i64 %128, 16
  br i1 %129, label %130, label %132, !prof !2

130:                                              ; preds = %122
  %131 = tail call i64 @_ZN2v88internal4Zone9NewExpandEm(%"class.v8::internal::Zone"* %92, i64 16) #16
  br label %134

132:                                              ; preds = %122
  %133 = add i64 %125, 16
  store i64 %133, i64* %124, align 8
  br label %134

134:                                              ; preds = %132, %130
  %135 = phi i64 [ %131, %130 ], [ %125, %132 ]
  %136 = inttoptr i64 %135 to %"class.v8::internal::compiler::UseInterval"*
  %137 = getelementptr inbounds %"class.v8::internal::compiler::UseInterval", %"class.v8::internal::compiler::UseInterval"* %136, i64 0, i32 0, i32 0
  store i32 %52, i32* %137, align 8
  %138 = getelementptr inbounds %"class.v8::internal::compiler::UseInterval", %"class.v8::internal::compiler::UseInterval"* %136, i64 0, i32 1, i32 0
  store i32 %123, i32* %138, align 4
  %139 = getelementptr inbounds %"class.v8::internal::compiler::UseInterval", %"class.v8::internal::compiler::UseInterval"* %136, i64 0, i32 2
  store %"class.v8::internal::compiler::UseInterval"* null, %"class.v8::internal::compiler::UseInterval"** %139, align 8
  %140 = bitcast %"class.v8::internal::compiler::UseInterval"** %101 to i64*
  %141 = load i64, i64* %140, align 8
  %142 = bitcast %"class.v8::internal::compiler::UseInterval"** %139 to i64*
  store i64 %141, i64* %142, align 8
  store %"class.v8::internal::compiler::UseInterval"* %136, %"class.v8::internal::compiler::UseInterval"** %101, align 8
  %143 = load %"class.v8::internal::compiler::UseInterval"*, %"class.v8::internal::compiler::UseInterval"** %139, align 8
  %144 = icmp eq %"class.v8::internal::compiler::UseInterval"* %143, null
  br i1 %144, label %145, label %147

145:                                              ; preds = %134
  %146 = getelementptr inbounds %"class.v8::internal::compiler::TopLevelLiveRange", %"class.v8::internal::compiler::TopLevelLiveRange"* %89, i64 0, i32 0, i32 2
  store %"class.v8::internal::compiler::UseInterval"* %136, %"class.v8::internal::compiler::UseInterval"** %146, align 8
  br label %147

147:                                              ; preds = %134, %145
  %148 = add nsw i32 %86, 1
  %149 = icmp eq i64 %87, 0
  br i1 %149, label %152, label %150

150:                                              ; preds = %147
  %151 = load i32, i32* %4, align 4
  br label %171

152:                                              ; preds = %147
  %153 = add i32 %88, 1
  %154 = load i32, i32* %4, align 4
  %155 = icmp slt i32 %153, %154
  br i1 %155, label %156, label %185

156:                                              ; preds = %152
  %157 = load i64*, i64** %83, align 8
  %158 = sext i32 %153 to i64
  %159 = sext i32 %154 to i64
  br label %163

160:                                              ; preds = %163
  %161 = add nsw i64 %164, 1
  %162 = icmp slt i64 %161, %159
  br i1 %162, label %163, label %181

163:                                              ; preds = %156, %160
  %164 = phi i64 [ %158, %156 ], [ %161, %160 ]
  %165 = getelementptr inbounds i64, i64* %157, i64 %164
  %166 = load i64, i64* %165, align 8
  %167 = icmp eq i64 %166, 0
  br i1 %167, label %160, label %168

168:                                              ; preds = %163
  %169 = trunc i64 %164 to i32
  %170 = shl i32 %169, 6
  br label %171

171:                                              ; preds = %168, %150
  %172 = phi i32 [ %151, %150 ], [ %154, %168 ]
  %173 = phi i32 [ %88, %150 ], [ %169, %168 ]
  %174 = phi i32 [ %148, %150 ], [ %170, %168 ]
  %175 = phi i64 [ %87, %150 ], [ %166, %168 ]
  %176 = tail call i64 @llvm.cttz.i64(i64 %175, i1 true) #16, !range !79
  %177 = trunc i64 %176 to i32
  %178 = add i32 %174, %177
  %179 = lshr i64 %175, %176
  %180 = lshr i64 %179, 1
  br label %185

181:                                              ; preds = %160
  %182 = trunc i64 %164 to i32
  %183 = shl i32 %182, 6
  %184 = trunc i64 %161 to i32
  br label %185

185:                                              ; preds = %181, %152, %171
  %186 = phi i32 [ %172, %171 ], [ %154, %152 ], [ %154, %181 ]
  %187 = phi i32 [ %173, %171 ], [ %153, %152 ], [ %184, %181 ]
  %188 = phi i64 [ %180, %171 ], [ 0, %152 ], [ 0, %181 ]
  %189 = phi i32 [ %178, %171 ], [ %148, %152 ], [ %183, %181 ]
  %190 = icmp slt i32 %187, %186
  br i1 %190, label %191, label %193

191:                                              ; preds = %185
  %192 = load %"class.v8::internal::compiler::TopTierRegisterAllocationData"*, %"class.v8::internal::compiler::TopTierRegisterAllocationData"** %53, align 8
  br label %84

193:                                              ; preds = %185
  %194 = load i32, i32* %60, align 4
  br label %195

195:                                              ; preds = %193, %74
  %196 = phi i32 [ %194, %193 ], [ %61, %74 ]
  %197 = getelementptr inbounds %"class.v8::internal::compiler::InstructionBlock", %"class.v8::internal::compiler::InstructionBlock"* %1, i64 0, i32 4, i32 0
  %198 = load i32, i32* %197, align 4
  %199 = add i32 %198, 1
  %200 = icmp slt i32 %199, %196
  br i1 %200, label %201, label %205

201:                                              ; preds = %195
  %202 = getelementptr inbounds %"class.v8::internal::BitVector", %"class.v8::internal::BitVector"* %2, i64 0, i32 2, i32 0
  %203 = bitcast %"union.v8::internal::BitVector::DataStorage"* %7 to i64*
  %204 = sext i32 %199 to i64
  br label %206

205:                                              ; preds = %239, %195
  ret void

206:                                              ; preds = %201, %239
  %207 = phi i64 [ %204, %201 ], [ %240, %239 ]
  %208 = load %"class.v8::internal::compiler::TopTierRegisterAllocationData"*, %"class.v8::internal::compiler::TopTierRegisterAllocationData"** %53, align 8
  %209 = getelementptr inbounds %"class.v8::internal::compiler::TopTierRegisterAllocationData", %"class.v8::internal::compiler::TopTierRegisterAllocationData"* %208, i64 0, i32 7, i32 0, i32 0, i32 0
  %210 = load %"class.v8::internal::BitVector"**, %"class.v8::internal::BitVector"*** %209, align 8
  %211 = getelementptr inbounds %"class.v8::internal::BitVector"*, %"class.v8::internal::BitVector"** %210, i64 %207
  %212 = load %"class.v8::internal::BitVector"*, %"class.v8::internal::BitVector"** %211, align 8
  %213 = getelementptr inbounds %"class.v8::internal::BitVector", %"class.v8::internal::BitVector"* %212, i64 0, i32 1
  %214 = load i32, i32* %213, align 4
  %215 = icmp eq i32 %214, 1
  br i1 %215, label %220, label %216

216:                                              ; preds = %206
  %217 = icmp sgt i32 %214, 0
  br i1 %217, label %218, label %239

218:                                              ; preds = %216
  %219 = getelementptr inbounds %"class.v8::internal::BitVector", %"class.v8::internal::BitVector"* %212, i64 0, i32 2, i32 0
  br label %226

220:                                              ; preds = %206
  %221 = load i64, i64* %203, align 8
  %222 = getelementptr inbounds %"class.v8::internal::BitVector", %"class.v8::internal::BitVector"* %212, i64 0, i32 2
  %223 = bitcast %"union.v8::internal::BitVector::DataStorage"* %222 to i64*
  %224 = load i64, i64* %223, align 8
  %225 = or i64 %224, %221
  store i64 %225, i64* %223, align 8
  br label %239

226:                                              ; preds = %226, %218
  %227 = phi i64 [ 0, %218 ], [ %235, %226 ]
  %228 = load i64*, i64** %202, align 8
  %229 = getelementptr inbounds i64, i64* %228, i64 %227
  %230 = load i64, i64* %229, align 8
  %231 = load i64*, i64** %219, align 8
  %232 = getelementptr inbounds i64, i64* %231, i64 %227
  %233 = load i64, i64* %232, align 8
  %234 = or i64 %233, %230
  store i64 %234, i64* %232, align 8
  %235 = add nuw nsw i64 %227, 1
  %236 = load i32, i32* %213, align 4
  %237 = sext i32 %236 to i64
  %238 = icmp slt i64 %235, %237
  br i1 %238, label %226, label %239

239:                                              ; preds = %226, %216, %220
  %240 = add nsw i64 %207, 1
  %241 = load i32, i32* %60, align 4
  %242 = sext i32 %241 to i64
  %243 = icmp slt i64 %240, %242
  br i1 %243, label %206, label %205
}

; Function Attrs: nounwind ssp uwtable
define hidden void @_ZN2v88internal8compiler16LiveRangeBuilder15BuildLiveRangesEv(%"class.v8::internal::compiler::LiveRangeBuilder"*) local_unnamed_addr #0 align 2 {
  %2 = getelementptr inbounds %"class.v8::internal::compiler::LiveRangeBuilder", %"class.v8::internal::compiler::LiveRangeBuilder"* %0, i64 0, i32 0
  %3 = load %"class.v8::internal::compiler::TopTierRegisterAllocationData"*, %"class.v8::internal::compiler::TopTierRegisterAllocationData"** %2, align 8
  %4 = getelementptr inbounds %"class.v8::internal::compiler::TopTierRegisterAllocationData", %"class.v8::internal::compiler::TopTierRegisterAllocationData"* %3, i64 0, i32 3
  %5 = load %"class.v8::internal::compiler::InstructionSequence"*, %"class.v8::internal::compiler::InstructionSequence"** %4, align 8
  %6 = getelementptr inbounds %"class.v8::internal::compiler::InstructionSequence", %"class.v8::internal::compiler::InstructionSequence"* %5, i64 0, i32 2
  %7 = bitcast %"class.v8::internal::ZoneVector.1170"** %6 to %"class.std::__1::vector.1171"**
  %8 = load %"class.std::__1::vector.1171"*, %"class.std::__1::vector.1171"** %7, align 8
  %9 = getelementptr inbounds %"class.std::__1::vector.1171", %"class.std::__1::vector.1171"* %8, i64 0, i32 0, i32 1
  %10 = bitcast %"class.v8::internal::compiler::InstructionBlock"*** %9 to i64*
  %11 = load i64, i64* %10, align 8
  %12 = bitcast %"class.std::__1::vector.1171"* %8 to i64*
  %13 = load i64, i64* %12, align 8
  %14 = sub i64 %11, %13
  %15 = lshr exact i64 %14, 3
  %16 = trunc i64 %15 to i32
  %17 = icmp sgt i32 %16, 0
  br i1 %17, label %18, label %21

18:                                               ; preds = %1
  %19 = shl i64 %14, 29
  %20 = ashr exact i64 %19, 32
  br label %33

21:                                               ; preds = %64, %1
  %22 = phi %"class.v8::internal::compiler::TopTierRegisterAllocationData"* [ %3, %1 ], [ %70, %64 ]
  %23 = getelementptr inbounds %"class.v8::internal::compiler::TopTierRegisterAllocationData", %"class.v8::internal::compiler::TopTierRegisterAllocationData"* %22, i64 0, i32 9, i32 0
  %24 = getelementptr inbounds %"class.v8::internal::compiler::TopTierRegisterAllocationData", %"class.v8::internal::compiler::TopTierRegisterAllocationData"* %22, i64 0, i32 9, i32 0, i32 0, i32 1
  %25 = bitcast %"class.v8::internal::compiler::TopLevelLiveRange"*** %24 to i64*
  %26 = load i64, i64* %25, align 8
  %27 = bitcast %"class.std::__1::vector"* %23 to i64*
  %28 = load i64, i64* %27, align 8
  %29 = sub i64 %26, %28
  %30 = inttoptr i64 %28 to %"class.v8::internal::compiler::TopLevelLiveRange"**
  %31 = inttoptr i64 %26 to %"class.v8::internal::compiler::TopLevelLiveRange"**
  %32 = icmp eq %"class.v8::internal::compiler::TopLevelLiveRange"** %30, %31
  br i1 %32, label %71, label %78

33:                                               ; preds = %18, %64
  %34 = phi i64 [ %20, %18 ], [ %36, %64 ]
  %35 = phi %"class.v8::internal::compiler::TopTierRegisterAllocationData"* [ %3, %18 ], [ %70, %64 ]
  %36 = add nsw i64 %34, -1
  %37 = getelementptr inbounds %"class.v8::internal::compiler::TopTierRegisterAllocationData", %"class.v8::internal::compiler::TopTierRegisterAllocationData"* %35, i64 0, i32 24
  %38 = load %"class.v8::internal::TickCounter"*, %"class.v8::internal::TickCounter"** %37, align 8
  tail call void @_ZN2v88internal11TickCounter26TickAndMaybeEnterSafepointEv(%"class.v8::internal::TickCounter"* %38) #16
  %39 = load %"class.v8::internal::compiler::TopTierRegisterAllocationData"*, %"class.v8::internal::compiler::TopTierRegisterAllocationData"** %2, align 8
  %40 = getelementptr inbounds %"class.v8::internal::compiler::TopTierRegisterAllocationData", %"class.v8::internal::compiler::TopTierRegisterAllocationData"* %39, i64 0, i32 3
  %41 = load %"class.v8::internal::compiler::InstructionSequence"*, %"class.v8::internal::compiler::InstructionSequence"** %40, align 8
  %42 = getelementptr inbounds %"class.v8::internal::compiler::InstructionSequence", %"class.v8::internal::compiler::InstructionSequence"* %41, i64 0, i32 2
  %43 = bitcast %"class.v8::internal::ZoneVector.1170"** %42 to %"class.std::__1::vector.1171"**
  %44 = load %"class.std::__1::vector.1171"*, %"class.std::__1::vector.1171"** %43, align 8
  %45 = getelementptr inbounds %"class.std::__1::vector.1171", %"class.std::__1::vector.1171"* %44, i64 0, i32 0, i32 1
  %46 = bitcast %"class.v8::internal::compiler::InstructionBlock"*** %45 to i64*
  %47 = load i64, i64* %46, align 8
  %48 = bitcast %"class.std::__1::vector.1171"* %44 to i64*
  %49 = load i64, i64* %48, align 8
  %50 = sub i64 %47, %49
  %51 = ashr exact i64 %50, 3
  %52 = icmp ugt i64 %51, %36
  br i1 %52, label %55, label %53

53:                                               ; preds = %33
  %54 = bitcast %"class.std::__1::vector.1171"* %44 to %"class.std::__1::__vector_base_common"*
  tail call void @_ZNKSt3__120__vector_base_commonILb1EE20__throw_out_of_rangeEv(%"class.std::__1::__vector_base_common"* %54) #17
  unreachable

55:                                               ; preds = %33
  %56 = inttoptr i64 %49 to %"class.v8::internal::compiler::InstructionBlock"**
  %57 = getelementptr inbounds %"class.v8::internal::compiler::InstructionBlock"*, %"class.v8::internal::compiler::InstructionBlock"** %56, i64 %36
  %58 = load %"class.v8::internal::compiler::InstructionBlock"*, %"class.v8::internal::compiler::InstructionBlock"** %57, align 8
  %59 = tail call %"class.v8::internal::BitVector"* @_ZN2v88internal8compiler16LiveRangeBuilder14ComputeLiveOutEPKNS1_16InstructionBlockEPNS1_29TopTierRegisterAllocationDataE(%"class.v8::internal::compiler::InstructionBlock"* %58, %"class.v8::internal::compiler::TopTierRegisterAllocationData"* %39)
  tail call void @_ZN2v88internal8compiler16LiveRangeBuilder19AddInitialIntervalsEPKNS1_16InstructionBlockEPNS0_9BitVectorE(%"class.v8::internal::compiler::LiveRangeBuilder"* %0, %"class.v8::internal::compiler::InstructionBlock"* %58, %"class.v8::internal::BitVector"* %59)
  tail call void @_ZN2v88internal8compiler16LiveRangeBuilder19ProcessInstructionsEPKNS1_16InstructionBlockEPNS0_9BitVectorE(%"class.v8::internal::compiler::LiveRangeBuilder"* %0, %"class.v8::internal::compiler::InstructionBlock"* %58, %"class.v8::internal::BitVector"* %59)
  tail call void @_ZN2v88internal8compiler16LiveRangeBuilder11ProcessPhisEPKNS1_16InstructionBlockEPNS0_9BitVectorE(%"class.v8::internal::compiler::LiveRangeBuilder"* %0, %"class.v8::internal::compiler::InstructionBlock"* %58, %"class.v8::internal::BitVector"* %59)
  %60 = getelementptr inbounds %"class.v8::internal::compiler::InstructionBlock", %"class.v8::internal::compiler::InstructionBlock"* %58, i64 0, i32 6, i32 0
  %61 = load i32, i32* %60, align 4
  %62 = icmp sgt i32 %61, -1
  br i1 %62, label %63, label %64

63:                                               ; preds = %55
  tail call void @_ZN2v88internal8compiler16LiveRangeBuilder17ProcessLoopHeaderEPKNS1_16InstructionBlockEPNS0_9BitVectorE(%"class.v8::internal::compiler::LiveRangeBuilder"* %0, %"class.v8::internal::compiler::InstructionBlock"* %58, %"class.v8::internal::BitVector"* %59)
  br label %64

64:                                               ; preds = %63, %55
  %65 = load %"class.v8::internal::compiler::TopTierRegisterAllocationData"*, %"class.v8::internal::compiler::TopTierRegisterAllocationData"** %2, align 8
  %66 = getelementptr inbounds %"class.v8::internal::compiler::TopTierRegisterAllocationData", %"class.v8::internal::compiler::TopTierRegisterAllocationData"* %65, i64 0, i32 7, i32 0, i32 0, i32 0
  %67 = load %"class.v8::internal::BitVector"**, %"class.v8::internal::BitVector"*** %66, align 8
  %68 = getelementptr inbounds %"class.v8::internal::BitVector"*, %"class.v8::internal::BitVector"** %67, i64 %36
  store %"class.v8::internal::BitVector"* %59, %"class.v8::internal::BitVector"** %68, align 8
  %69 = icmp sgt i64 %36, 0
  %70 = load %"class.v8::internal::compiler::TopTierRegisterAllocationData"*, %"class.v8::internal::compiler::TopTierRegisterAllocationData"** %2, align 8
  br i1 %69, label %33, label %21

71:                                               ; preds = %186, %21
  %72 = phi %"class.v8::internal::compiler::TopTierRegisterAllocationData"* [ %22, %21 ], [ %189, %186 ]
  %73 = getelementptr inbounds %"class.v8::internal::compiler::TopTierRegisterAllocationData", %"class.v8::internal::compiler::TopTierRegisterAllocationData"* %72, i64 0, i32 21, i32 0, i32 0, i32 0
  %74 = load %"struct.std::__1::pair.1301"*, %"struct.std::__1::pair.1301"** %73, align 8
  %75 = getelementptr inbounds %"class.v8::internal::compiler::TopTierRegisterAllocationData", %"class.v8::internal::compiler::TopTierRegisterAllocationData"* %72, i64 0, i32 21, i32 0, i32 0, i32 1
  %76 = load %"struct.std::__1::pair.1301"*, %"struct.std::__1::pair.1301"** %75, align 8
  %77 = icmp eq %"struct.std::__1::pair.1301"* %74, %76
  br i1 %77, label %190, label %191

78:                                               ; preds = %21, %186
  %79 = phi %"class.v8::internal::compiler::TopTierRegisterAllocationData"* [ %189, %186 ], [ %22, %21 ]
  %80 = phi %"class.v8::internal::compiler::TopLevelLiveRange"** [ %187, %186 ], [ %30, %21 ]
  %81 = load %"class.v8::internal::compiler::TopLevelLiveRange"*, %"class.v8::internal::compiler::TopLevelLiveRange"** %80, align 8
  %82 = getelementptr inbounds %"class.v8::internal::compiler::TopTierRegisterAllocationData", %"class.v8::internal::compiler::TopTierRegisterAllocationData"* %79, i64 0, i32 24
  %83 = load %"class.v8::internal::TickCounter"*, %"class.v8::internal::TickCounter"** %82, align 8
  tail call void @_ZN2v88internal11TickCounter26TickAndMaybeEnterSafepointEv(%"class.v8::internal::TickCounter"* %83) #16
  %84 = load %"class.v8::internal::compiler::TopTierRegisterAllocationData"*, %"class.v8::internal::compiler::TopTierRegisterAllocationData"** %2, align 8
  %85 = getelementptr inbounds %"class.v8::internal::compiler::TopTierRegisterAllocationData", %"class.v8::internal::compiler::TopTierRegisterAllocationData"* %84, i64 0, i32 9, i32 0
  %86 = getelementptr inbounds %"class.v8::internal::compiler::TopTierRegisterAllocationData", %"class.v8::internal::compiler::TopTierRegisterAllocationData"* %84, i64 0, i32 9, i32 0, i32 0, i32 1
  %87 = bitcast %"class.v8::internal::compiler::TopLevelLiveRange"*** %86 to i64*
  %88 = load i64, i64* %87, align 8
  %89 = bitcast %"class.std::__1::vector"* %85 to i64*
  %90 = load i64, i64* %89, align 8
  %91 = sub i64 %88, %90
  %92 = icmp eq i64 %29, %91
  br i1 %92, label %94, label %93, !prof !80

93:                                               ; preds = %78
  tail call void (i8*, ...) @_Z8V8_FatalPKcz(i8* getelementptr inbounds ([18 x i8], [18 x i8]* @.str.1, i64 0, i64 0), i8* getelementptr inbounds ([49 x i8], [49 x i8]* @.str.32, i64 0, i64 0)) #17
  unreachable

94:                                               ; preds = %78
  %95 = icmp eq %"class.v8::internal::compiler::TopLevelLiveRange"* %81, null
  br i1 %95, label %186, label %96

96:                                               ; preds = %94
  %97 = getelementptr inbounds %"class.v8::internal::compiler::TopLevelLiveRange", %"class.v8::internal::compiler::TopLevelLiveRange"* %81, i64 0, i32 0, i32 1
  %98 = load i32, i32* %97, align 4
  %99 = and i32 %98, 6
  %100 = icmp ne i32 %99, 0
  %101 = and i32 %98, 96
  %102 = icmp eq i32 %101, 0
  %103 = and i1 %100, %102
  br i1 %103, label %104, label %145

104:                                              ; preds = %96
  %105 = icmp ne i32 %99, 2
  %106 = getelementptr inbounds %"class.v8::internal::compiler::TopLevelLiveRange", %"class.v8::internal::compiler::TopLevelLiveRange"* %81, i64 0, i32 3
  %107 = bitcast %union.anon* %106 to %"class.v8::internal::compiler::SpillRange"**
  %108 = load %"class.v8::internal::compiler::SpillRange"*, %"class.v8::internal::compiler::SpillRange"** %107, align 8
  %109 = icmp eq %"class.v8::internal::compiler::SpillRange"* %108, null
  br i1 %109, label %110, label %128

110:                                              ; preds = %104
  %111 = getelementptr inbounds %"class.v8::internal::compiler::TopTierRegisterAllocationData", %"class.v8::internal::compiler::TopTierRegisterAllocationData"* %84, i64 0, i32 1
  %112 = load %"class.v8::internal::Zone"*, %"class.v8::internal::Zone"** %111, align 8
  %113 = getelementptr inbounds %"class.v8::internal::Zone", %"class.v8::internal::Zone"* %112, i64 0, i32 2
  %114 = load i64, i64* %113, align 8
  %115 = getelementptr inbounds %"class.v8::internal::Zone", %"class.v8::internal::Zone"* %112, i64 0, i32 3
  %116 = load i64, i64* %115, align 8
  %117 = sub i64 %116, %114
  %118 = icmp ult i64 %117, 56
  br i1 %118, label %119, label %121, !prof !2

119:                                              ; preds = %110
  %120 = tail call i64 @_ZN2v88internal4Zone9NewExpandEm(%"class.v8::internal::Zone"* %112, i64 56) #16
  br label %123

121:                                              ; preds = %110
  %122 = add i64 %114, 56
  store i64 %122, i64* %113, align 8
  br label %123

123:                                              ; preds = %121, %119
  %124 = phi i64 [ %120, %119 ], [ %114, %121 ]
  %125 = inttoptr i64 %124 to %"class.v8::internal::compiler::SpillRange"*
  tail call void @_ZN2v88internal8compiler10SpillRangeC2EPNS1_17TopLevelLiveRangeEPNS0_4ZoneE(%"class.v8::internal::compiler::SpillRange"* %125, %"class.v8::internal::compiler::TopLevelLiveRange"* nonnull %81, %"class.v8::internal::Zone"* %112) #16
  %126 = load i32, i32* %97, align 4
  %127 = and i32 %126, 96
  br label %128

128:                                              ; preds = %123, %104
  %129 = phi i32 [ %127, %123 ], [ 0, %104 ]
  %130 = phi i32 [ %126, %123 ], [ %98, %104 ]
  %131 = phi %"class.v8::internal::compiler::SpillRange"* [ %125, %123 ], [ %108, %104 ]
  %132 = icmp eq i32 %129, 64
  %133 = or i1 %105, %132
  %134 = or i32 %130, 96
  %135 = and i32 %130, -97
  %136 = or i32 %135, 64
  %137 = select i1 %133, i32 %136, i32 %134
  store i32 %137, i32* %97, align 4
  %138 = getelementptr inbounds %"class.v8::internal::compiler::TopLevelLiveRange", %"class.v8::internal::compiler::TopLevelLiveRange"* %81, i64 0, i32 1
  %139 = load i32, i32* %138, align 4
  %140 = sext i32 %139 to i64
  %141 = getelementptr inbounds %"class.v8::internal::compiler::TopTierRegisterAllocationData", %"class.v8::internal::compiler::TopTierRegisterAllocationData"* %84, i64 0, i32 14, i32 0, i32 0, i32 0
  %142 = load %"class.v8::internal::compiler::SpillRange"**, %"class.v8::internal::compiler::SpillRange"*** %141, align 8
  %143 = getelementptr inbounds %"class.v8::internal::compiler::SpillRange"*, %"class.v8::internal::compiler::SpillRange"** %142, i64 %140
  store %"class.v8::internal::compiler::SpillRange"* %131, %"class.v8::internal::compiler::SpillRange"** %143, align 8
  %144 = load i32, i32* %97, align 4
  br label %145

145:                                              ; preds = %128, %96
  %146 = phi i32 [ %144, %128 ], [ %98, %96 ]
  %147 = and i32 %146, 96
  %148 = icmp eq i32 %147, 32
  br i1 %148, label %149, label %180

149:                                              ; preds = %145
  %150 = getelementptr inbounds %"class.v8::internal::compiler::TopLevelLiveRange", %"class.v8::internal::compiler::TopLevelLiveRange"* %81, i64 0, i32 3, i32 0
  %151 = load %"class.v8::internal::compiler::InstructionOperand"*, %"class.v8::internal::compiler::InstructionOperand"** %150, align 8
  %152 = getelementptr inbounds %"class.v8::internal::compiler::InstructionOperand", %"class.v8::internal::compiler::InstructionOperand"* %151, i64 0, i32 0
  %153 = load i64, i64* %152, align 8
  %154 = and i64 %153, 7
  %155 = icmp eq i64 %154, 2
  br i1 %155, label %156, label %180

156:                                              ; preds = %149
  %157 = getelementptr inbounds %"class.v8::internal::compiler::TopLevelLiveRange", %"class.v8::internal::compiler::TopLevelLiveRange"* %81, i64 0, i32 0, i32 4
  %158 = load %"class.v8::internal::compiler::UsePosition"*, %"class.v8::internal::compiler::UsePosition"** %157, align 8
  %159 = icmp eq %"class.v8::internal::compiler::UsePosition"* %158, null
  br i1 %159, label %180, label %160

160:                                              ; preds = %156, %176
  %161 = phi %"class.v8::internal::compiler::UsePosition"* [ %178, %176 ], [ %158, %156 ]
  %162 = getelementptr inbounds %"class.v8::internal::compiler::UsePosition", %"class.v8::internal::compiler::UsePosition"* %161, i64 0, i32 4
  %163 = load i32, i32* %162, align 4
  %164 = trunc i32 %163 to i8
  %165 = and i8 %164, 3
  switch i8 %165, label %166 [
    i8 3, label %176
    i8 1, label %176
  ]

166:                                              ; preds = %160
  %167 = getelementptr inbounds %"class.v8::internal::compiler::UsePosition", %"class.v8::internal::compiler::UsePosition"* %161, i64 0, i32 3, i32 0
  %168 = load i32, i32* %167, align 8
  %169 = and i32 %168, 2
  %170 = icmp eq i32 %169, 0
  %171 = and i32 %163, 28
  br i1 %170, label %172, label %174

172:                                              ; preds = %166
  %173 = or i32 %171, 2080
  store i32 %173, i32* %162, align 4
  br label %176

174:                                              ; preds = %166
  %175 = or i32 %171, 2082
  store i32 %175, i32* %162, align 4
  br label %176

176:                                              ; preds = %160, %160, %174, %172
  %177 = getelementptr inbounds %"class.v8::internal::compiler::UsePosition", %"class.v8::internal::compiler::UsePosition"* %161, i64 0, i32 2
  %178 = load %"class.v8::internal::compiler::UsePosition"*, %"class.v8::internal::compiler::UsePosition"** %177, align 8
  %179 = icmp eq %"class.v8::internal::compiler::UsePosition"* %178, null
  br i1 %179, label %180, label %160

180:                                              ; preds = %176, %156, %149, %145
  %181 = getelementptr inbounds %"class.v8::internal::compiler::TopLevelLiveRange", %"class.v8::internal::compiler::TopLevelLiveRange"* %81, i64 0, i32 0, i32 4
  %182 = bitcast %"class.v8::internal::compiler::UsePosition"** %181 to i64*
  %183 = load i64, i64* %182, align 8
  %184 = getelementptr inbounds %"class.v8::internal::compiler::TopLevelLiveRange", %"class.v8::internal::compiler::TopLevelLiveRange"* %81, i64 0, i32 0, i32 9
  %185 = bitcast %"class.v8::internal::compiler::UsePosition"** %184 to i64*
  store i64 %183, i64* %185, align 8
  br label %186

186:                                              ; preds = %94, %180
  %187 = getelementptr inbounds %"class.v8::internal::compiler::TopLevelLiveRange"*, %"class.v8::internal::compiler::TopLevelLiveRange"** %80, i64 1
  %188 = icmp eq %"class.v8::internal::compiler::TopLevelLiveRange"** %187, %31
  %189 = load %"class.v8::internal::compiler::TopTierRegisterAllocationData"*, %"class.v8::internal::compiler::TopTierRegisterAllocationData"** %2, align 8
  br i1 %188, label %71, label %78

190:                                              ; preds = %239, %71
  ret void

191:                                              ; preds = %71, %239
  %192 = phi %"struct.std::__1::pair.1301"* [ %242, %239 ], [ %74, %71 ]
  %193 = getelementptr inbounds %"struct.std::__1::pair.1301", %"struct.std::__1::pair.1301"* %192, i64 0, i32 0
  %194 = load %"class.v8::internal::compiler::TopLevelLiveRange"*, %"class.v8::internal::compiler::TopLevelLiveRange"** %193, align 8
  %195 = getelementptr inbounds %"struct.std::__1::pair.1301", %"struct.std::__1::pair.1301"* %192, i64 0, i32 1
  %196 = load i32, i32* %195, align 8
  %197 = getelementptr inbounds %"class.v8::internal::compiler::TopLevelLiveRange", %"class.v8::internal::compiler::TopLevelLiveRange"* %194, i64 0, i32 0, i32 1
  %198 = load i32, i32* %197, align 4
  %199 = and i32 %198, 64
  %200 = icmp eq i32 %199, 0
  br i1 %200, label %205, label %201

201:                                              ; preds = %191
  %202 = getelementptr inbounds %"class.v8::internal::compiler::TopLevelLiveRange", %"class.v8::internal::compiler::TopLevelLiveRange"* %194, i64 0, i32 3
  %203 = bitcast %union.anon* %202 to %"class.v8::internal::compiler::SpillRange"**
  %204 = load %"class.v8::internal::compiler::SpillRange"*, %"class.v8::internal::compiler::SpillRange"** %203, align 8
  br label %239

205:                                              ; preds = %191
  %206 = load %"class.v8::internal::compiler::TopTierRegisterAllocationData"*, %"class.v8::internal::compiler::TopTierRegisterAllocationData"** %2, align 8
  %207 = getelementptr inbounds %"class.v8::internal::compiler::TopLevelLiveRange", %"class.v8::internal::compiler::TopLevelLiveRange"* %194, i64 0, i32 3
  %208 = bitcast %union.anon* %207 to %"class.v8::internal::compiler::SpillRange"**
  %209 = load %"class.v8::internal::compiler::SpillRange"*, %"class.v8::internal::compiler::SpillRange"** %208, align 8
  %210 = icmp eq %"class.v8::internal::compiler::SpillRange"* %209, null
  br i1 %210, label %211, label %228

211:                                              ; preds = %205
  %212 = getelementptr inbounds %"class.v8::internal::compiler::TopTierRegisterAllocationData", %"class.v8::internal::compiler::TopTierRegisterAllocationData"* %206, i64 0, i32 1
  %213 = load %"class.v8::internal::Zone"*, %"class.v8::internal::Zone"** %212, align 8
  %214 = getelementptr inbounds %"class.v8::internal::Zone", %"class.v8::internal::Zone"* %213, i64 0, i32 2
  %215 = load i64, i64* %214, align 8
  %216 = getelementptr inbounds %"class.v8::internal::Zone", %"class.v8::internal::Zone"* %213, i64 0, i32 3
  %217 = load i64, i64* %216, align 8
  %218 = sub i64 %217, %215
  %219 = icmp ult i64 %218, 56
  br i1 %219, label %220, label %222, !prof !2

220:                                              ; preds = %211
  %221 = tail call i64 @_ZN2v88internal4Zone9NewExpandEm(%"class.v8::internal::Zone"* %213, i64 56) #16
  br label %224

222:                                              ; preds = %211
  %223 = add i64 %215, 56
  store i64 %223, i64* %214, align 8
  br label %224

224:                                              ; preds = %222, %220
  %225 = phi i64 [ %221, %220 ], [ %215, %222 ]
  %226 = inttoptr i64 %225 to %"class.v8::internal::compiler::SpillRange"*
  tail call void @_ZN2v88internal8compiler10SpillRangeC2EPNS1_17TopLevelLiveRangeEPNS0_4ZoneE(%"class.v8::internal::compiler::SpillRange"* %226, %"class.v8::internal::compiler::TopLevelLiveRange"* %194, %"class.v8::internal::Zone"* %213) #16
  %227 = load i32, i32* %197, align 4
  br label %228

228:                                              ; preds = %205, %224
  %229 = phi i32 [ %227, %224 ], [ %198, %205 ]
  %230 = phi %"class.v8::internal::compiler::SpillRange"* [ %226, %224 ], [ %209, %205 ]
  %231 = and i32 %229, -97
  %232 = or i32 %231, 64
  store i32 %232, i32* %197, align 4
  %233 = getelementptr inbounds %"class.v8::internal::compiler::TopLevelLiveRange", %"class.v8::internal::compiler::TopLevelLiveRange"* %194, i64 0, i32 1
  %234 = load i32, i32* %233, align 4
  %235 = sext i32 %234 to i64
  %236 = getelementptr inbounds %"class.v8::internal::compiler::TopTierRegisterAllocationData", %"class.v8::internal::compiler::TopTierRegisterAllocationData"* %206, i64 0, i32 14, i32 0, i32 0, i32 0
  %237 = load %"class.v8::internal::compiler::SpillRange"**, %"class.v8::internal::compiler::SpillRange"*** %236, align 8
  %238 = getelementptr inbounds %"class.v8::internal::compiler::SpillRange"*, %"class.v8::internal::compiler::SpillRange"** %237, i64 %235
  store %"class.v8::internal::compiler::SpillRange"* %230, %"class.v8::internal::compiler::SpillRange"** %238, align 8
  br label %239

239:                                              ; preds = %228, %201
  %240 = phi %"class.v8::internal::compiler::SpillRange"* [ %204, %201 ], [ %230, %228 ]
  %241 = getelementptr inbounds %"class.v8::internal::compiler::SpillRange", %"class.v8::internal::compiler::SpillRange"* %240, i64 0, i32 3
  store i32 %196, i32* %241, align 4
  %242 = getelementptr inbounds %"struct.std::__1::pair.1301", %"struct.std::__1::pair.1301"* %192, i64 1
  %243 = icmp eq %"struct.std::__1::pair.1301"* %242, %76
  br i1 %243, label %190, label %191
}

; Function Attrs: nounwind ssp uwtable
define hidden void @_ZNK2v88internal8compiler16LiveRangeBuilder6VerifyEv(%"class.v8::internal::compiler::LiveRangeBuilder"*) local_unnamed_addr #0 align 2 {
  %2 = getelementptr inbounds %"class.v8::internal::compiler::LiveRangeBuilder", %"class.v8::internal::compiler::LiveRangeBuilder"* %0, i64 0, i32 1, i32 0, i32 0, i32 0
  %3 = load %"class.std::__1::__tree_end_node"*, %"class.std::__1::__tree_end_node"** %2, align 8
  %4 = getelementptr inbounds %"class.v8::internal::compiler::LiveRangeBuilder", %"class.v8::internal::compiler::LiveRangeBuilder"* %0, i64 0, i32 1, i32 0, i32 0, i32 1, i32 0, i32 0
  %5 = icmp eq %"class.std::__1::__tree_end_node"* %3, %4
  br i1 %5, label %6, label %14

6:                                                ; preds = %52, %1
  %7 = getelementptr inbounds %"class.v8::internal::compiler::LiveRangeBuilder", %"class.v8::internal::compiler::LiveRangeBuilder"* %0, i64 0, i32 0
  %8 = load %"class.v8::internal::compiler::TopTierRegisterAllocationData"*, %"class.v8::internal::compiler::TopTierRegisterAllocationData"** %7, align 8
  %9 = getelementptr inbounds %"class.v8::internal::compiler::TopTierRegisterAllocationData", %"class.v8::internal::compiler::TopTierRegisterAllocationData"* %8, i64 0, i32 9, i32 0, i32 0, i32 0
  %10 = load %"class.v8::internal::compiler::TopLevelLiveRange"**, %"class.v8::internal::compiler::TopLevelLiveRange"*** %9, align 8
  %11 = getelementptr inbounds %"class.v8::internal::compiler::TopTierRegisterAllocationData", %"class.v8::internal::compiler::TopTierRegisterAllocationData"* %8, i64 0, i32 9, i32 0, i32 0, i32 1
  %12 = load %"class.v8::internal::compiler::TopLevelLiveRange"**, %"class.v8::internal::compiler::TopLevelLiveRange"*** %11, align 8
  %13 = icmp eq %"class.v8::internal::compiler::TopLevelLiveRange"** %10, %12
  br i1 %13, label %55, label %56

14:                                               ; preds = %1, %52
  %15 = phi %"class.std::__1::__tree_end_node"* [ %53, %52 ], [ %3, %1 ]
  %16 = getelementptr inbounds %"class.std::__1::__tree_end_node", %"class.std::__1::__tree_end_node"* %15, i64 5
  %17 = bitcast %"class.std::__1::__tree_end_node"* %16 to %"class.v8::internal::compiler::UsePosition"**
  %18 = load %"class.v8::internal::compiler::UsePosition"*, %"class.v8::internal::compiler::UsePosition"** %17, align 8
  %19 = getelementptr inbounds %"class.v8::internal::compiler::UsePosition", %"class.v8::internal::compiler::UsePosition"* %18, i64 0, i32 4
  %20 = load i32, i32* %19, align 4
  %21 = and i32 %20, 28
  %22 = icmp eq i32 %21, 16
  br i1 %22, label %23, label %24, !prof !2

23:                                               ; preds = %14
  tail call void (i8*, ...) @_Z8V8_FatalPKcz(i8* getelementptr inbounds ([18 x i8], [18 x i8]* @.str.1, i64 0, i64 0), i8* getelementptr inbounds ([26 x i8], [26 x i8]* @.str.33, i64 0, i64 0)) #17
  unreachable

24:                                               ; preds = %14
  %25 = getelementptr inbounds %"class.std::__1::__tree_end_node", %"class.std::__1::__tree_end_node"* %15, i64 1, i32 0
  %26 = load %"class.std::__1::__tree_node_base"*, %"class.std::__1::__tree_node_base"** %25, align 8
  %27 = icmp eq %"class.std::__1::__tree_node_base"* %26, null
  br i1 %27, label %28, label %36

28:                                               ; preds = %24
  %29 = bitcast %"class.std::__1::__tree_end_node"* %15 to %"class.std::__1::__tree_node_base"*
  %30 = getelementptr inbounds %"class.std::__1::__tree_end_node", %"class.std::__1::__tree_end_node"* %15, i64 2
  %31 = bitcast %"class.std::__1::__tree_end_node"* %30 to %"class.std::__1::__tree_end_node"**
  %32 = load %"class.std::__1::__tree_end_node"*, %"class.std::__1::__tree_end_node"** %31, align 8
  %33 = getelementptr inbounds %"class.std::__1::__tree_end_node", %"class.std::__1::__tree_end_node"* %32, i64 0, i32 0
  %34 = load %"class.std::__1::__tree_node_base"*, %"class.std::__1::__tree_node_base"** %33, align 8
  %35 = icmp eq %"class.std::__1::__tree_node_base"* %34, %29
  br i1 %35, label %52, label %43

36:                                               ; preds = %24, %36
  %37 = phi %"class.std::__1::__tree_node_base"* [ %39, %36 ], [ %26, %24 ]
  %38 = getelementptr inbounds %"class.std::__1::__tree_node_base", %"class.std::__1::__tree_node_base"* %37, i64 0, i32 0, i32 0
  %39 = load %"class.std::__1::__tree_node_base"*, %"class.std::__1::__tree_node_base"** %38, align 8
  %40 = icmp eq %"class.std::__1::__tree_node_base"* %39, null
  br i1 %40, label %41, label %36

41:                                               ; preds = %36
  %42 = getelementptr inbounds %"class.std::__1::__tree_node_base", %"class.std::__1::__tree_node_base"* %37, i64 0, i32 0
  br label %52

43:                                               ; preds = %28, %43
  %44 = phi %"class.std::__1::__tree_end_node"** [ %47, %43 ], [ %31, %28 ]
  %45 = bitcast %"class.std::__1::__tree_end_node"** %44 to %"class.std::__1::__tree_node_base"**
  %46 = load %"class.std::__1::__tree_node_base"*, %"class.std::__1::__tree_node_base"** %45, align 8
  %47 = getelementptr inbounds %"class.std::__1::__tree_node_base", %"class.std::__1::__tree_node_base"* %46, i64 0, i32 2
  %48 = load %"class.std::__1::__tree_end_node"*, %"class.std::__1::__tree_end_node"** %47, align 8
  %49 = getelementptr inbounds %"class.std::__1::__tree_end_node", %"class.std::__1::__tree_end_node"* %48, i64 0, i32 0
  %50 = load %"class.std::__1::__tree_node_base"*, %"class.std::__1::__tree_node_base"** %49, align 8
  %51 = icmp eq %"class.std::__1::__tree_node_base"* %50, %46
  br i1 %51, label %52, label %43

52:                                               ; preds = %43, %28, %41
  %53 = phi %"class.std::__1::__tree_end_node"* [ %42, %41 ], [ %32, %28 ], [ %48, %43 ]
  %54 = icmp eq %"class.std::__1::__tree_end_node"* %53, %4
  br i1 %54, label %6, label %14

55:                                               ; preds = %163, %6
  ret void

56:                                               ; preds = %6, %163
  %57 = phi %"class.v8::internal::compiler::TopLevelLiveRange"** [ %164, %163 ], [ %10, %6 ]
  %58 = load %"class.v8::internal::compiler::TopLevelLiveRange"*, %"class.v8::internal::compiler::TopLevelLiveRange"** %57, align 8
  %59 = icmp eq %"class.v8::internal::compiler::TopLevelLiveRange"* %58, null
  br i1 %59, label %163, label %60

60:                                               ; preds = %56
  %61 = bitcast %"class.v8::internal::compiler::TopLevelLiveRange"* %58 to %"class.v8::internal::compiler::LiveRange"*
  %62 = getelementptr inbounds %"class.v8::internal::compiler::TopLevelLiveRange", %"class.v8::internal::compiler::TopLevelLiveRange"* %58, i64 0, i32 0, i32 3
  %63 = load %"class.v8::internal::compiler::UseInterval"*, %"class.v8::internal::compiler::UseInterval"** %62, align 8
  %64 = icmp eq %"class.v8::internal::compiler::UseInterval"* %63, null
  br i1 %64, label %163, label %65

65:                                               ; preds = %60
  %66 = getelementptr inbounds %"class.v8::internal::compiler::TopLevelLiveRange", %"class.v8::internal::compiler::TopLevelLiveRange"* %58, i64 0, i32 0, i32 6
  %67 = load %"class.v8::internal::compiler::LiveRange"*, %"class.v8::internal::compiler::LiveRange"** %66, align 8
  %68 = icmp eq %"class.v8::internal::compiler::LiveRange"* %67, null
  br i1 %68, label %70, label %69, !prof !80

69:                                               ; preds = %65
  tail call void (i8*, ...) @_Z8V8_FatalPKcz(i8* getelementptr inbounds ([18 x i8], [18 x i8]* @.str.1, i64 0, i64 0), i8* getelementptr inbounds ([29 x i8], [29 x i8]* @.str.34, i64 0, i64 0)) #17
  unreachable

70:                                               ; preds = %65, %70
  %71 = phi %"class.v8::internal::compiler::LiveRange"* [ %73, %70 ], [ %61, %65 ]
  tail call void @_ZNK2v88internal8compiler9LiveRange15VerifyPositionsEv(%"class.v8::internal::compiler::LiveRange"* nonnull %61) #16
  %72 = getelementptr inbounds %"class.v8::internal::compiler::LiveRange", %"class.v8::internal::compiler::LiveRange"* %71, i64 0, i32 6
  %73 = load %"class.v8::internal::compiler::LiveRange"*, %"class.v8::internal::compiler::LiveRange"** %72, align 8
  %74 = icmp eq %"class.v8::internal::compiler::LiveRange"* %73, null
  br i1 %74, label %75, label %70

75:                                               ; preds = %70
  %76 = load %"class.v8::internal::compiler::UseInterval"*, %"class.v8::internal::compiler::UseInterval"** %62, align 8
  %77 = getelementptr inbounds %"class.v8::internal::compiler::UseInterval", %"class.v8::internal::compiler::UseInterval"* %76, i64 0, i32 2
  %78 = load %"class.v8::internal::compiler::UseInterval"*, %"class.v8::internal::compiler::UseInterval"** %77, align 8
  %79 = icmp eq %"class.v8::internal::compiler::UseInterval"* %78, null
  br i1 %79, label %163, label %80

80:                                               ; preds = %75
  %81 = getelementptr inbounds %"class.v8::internal::compiler::UseInterval", %"class.v8::internal::compiler::UseInterval"* %76, i64 0, i32 1, i32 0
  %82 = load i32, i32* %81, align 4
  %83 = getelementptr inbounds %"class.v8::internal::compiler::UseInterval", %"class.v8::internal::compiler::UseInterval"* %78, i64 0, i32 0, i32 0
  %84 = load i32, i32* %83, align 8
  %85 = and i32 %82, 1
  %86 = icmp eq i32 %85, 0
  %87 = add i32 %82, -2
  %88 = or i32 %87, 1
  %89 = and i32 %82, -2
  %90 = select i1 %86, i32 %88, i32 %89
  %91 = sdiv i32 %90, 4
  %92 = load %"class.v8::internal::compiler::TopTierRegisterAllocationData"*, %"class.v8::internal::compiler::TopTierRegisterAllocationData"** %7, align 8
  %93 = getelementptr inbounds %"class.v8::internal::compiler::TopTierRegisterAllocationData", %"class.v8::internal::compiler::TopTierRegisterAllocationData"* %92, i64 0, i32 3
  %94 = load %"class.v8::internal::compiler::InstructionSequence"*, %"class.v8::internal::compiler::InstructionSequence"** %93, align 8
  %95 = tail call %"class.v8::internal::compiler::InstructionBlock"* @_ZNK2v88internal8compiler19InstructionSequence19GetInstructionBlockEi(%"class.v8::internal::compiler::InstructionSequence"* %94, i32 %91) #16
  %96 = load %"class.v8::internal::compiler::TopTierRegisterAllocationData"*, %"class.v8::internal::compiler::TopTierRegisterAllocationData"** %7, align 8
  %97 = getelementptr inbounds %"class.v8::internal::compiler::TopTierRegisterAllocationData", %"class.v8::internal::compiler::TopTierRegisterAllocationData"* %96, i64 0, i32 3
  %98 = load %"class.v8::internal::compiler::InstructionSequence"*, %"class.v8::internal::compiler::InstructionSequence"** %97, align 8
  %99 = sdiv i32 %84, 4
  %100 = tail call %"class.v8::internal::compiler::InstructionBlock"* @_ZNK2v88internal8compiler19InstructionSequence19GetInstructionBlockEi(%"class.v8::internal::compiler::InstructionSequence"* %98, i32 %99) #16
  %101 = getelementptr inbounds %"class.v8::internal::compiler::InstructionBlock", %"class.v8::internal::compiler::InstructionBlock"* %95, i64 0, i32 4, i32 0
  %102 = load i32, i32* %101, align 4
  %103 = getelementptr inbounds %"class.v8::internal::compiler::InstructionBlock", %"class.v8::internal::compiler::InstructionBlock"* %100, i64 0, i32 4, i32 0
  %104 = load i32, i32* %103, align 4
  %105 = icmp slt i32 %102, %104
  br i1 %105, label %106, label %109, !prof !80

106:                                              ; preds = %80
  %107 = load %"class.v8::internal::compiler::UseInterval"*, %"class.v8::internal::compiler::UseInterval"** %77, align 8
  %108 = icmp eq %"class.v8::internal::compiler::UseInterval"* %107, null
  br i1 %108, label %163, label %110

109:                                              ; preds = %80
  tail call void (i8*, ...) @_Z8V8_FatalPKcz(i8* getelementptr inbounds ([18 x i8], [18 x i8]* @.str.1, i64 0, i64 0), i8* getelementptr inbounds ([43 x i8], [43 x i8]* @.str.35, i64 0, i64 0)) #17
  unreachable

110:                                              ; preds = %106, %160
  %111 = phi %"class.v8::internal::compiler::UseInterval"* [ %161, %160 ], [ %107, %106 ]
  %112 = getelementptr inbounds %"class.v8::internal::compiler::UseInterval", %"class.v8::internal::compiler::UseInterval"* %111, i64 0, i32 0, i32 0
  %113 = load i32, i32* %112, align 8
  %114 = and i32 %113, 3
  %115 = icmp eq i32 %114, 0
  br i1 %115, label %116, label %125, !prof !111

116:                                              ; preds = %110
  %117 = sdiv i32 %113, 4
  %118 = load %"class.v8::internal::compiler::TopTierRegisterAllocationData"*, %"class.v8::internal::compiler::TopTierRegisterAllocationData"** %7, align 8
  %119 = getelementptr inbounds %"class.v8::internal::compiler::TopTierRegisterAllocationData", %"class.v8::internal::compiler::TopTierRegisterAllocationData"* %118, i64 0, i32 3
  %120 = load %"class.v8::internal::compiler::InstructionSequence"*, %"class.v8::internal::compiler::InstructionSequence"** %119, align 8
  %121 = tail call %"class.v8::internal::compiler::InstructionBlock"* @_ZNK2v88internal8compiler19InstructionSequence19GetInstructionBlockEi(%"class.v8::internal::compiler::InstructionSequence"* %120, i32 %117) #16
  %122 = getelementptr inbounds %"class.v8::internal::compiler::InstructionBlock", %"class.v8::internal::compiler::InstructionBlock"* %121, i64 0, i32 8
  %123 = load i32, i32* %122, align 4
  %124 = icmp eq i32 %123, %117
  br i1 %124, label %126, label %125, !prof !80

125:                                              ; preds = %110, %116
  tail call void (i8*, ...) @_Z8V8_FatalPKcz(i8* getelementptr inbounds ([18 x i8], [18 x i8]* @.str.1, i64 0, i64 0), i8* getelementptr inbounds ([33 x i8], [33 x i8]* @.str.36, i64 0, i64 0)) #17
  unreachable

126:                                              ; preds = %116
  %127 = tail call zeroext i1 @_ZNK2v88internal8compiler16LiveRangeBuilder34IntervalPredecessorsCoveredByRangeEPKNS1_11UseIntervalEPKNS1_17TopLevelLiveRangeE(%"class.v8::internal::compiler::LiveRangeBuilder"* %0, %"class.v8::internal::compiler::UseInterval"* nonnull %111, %"class.v8::internal::compiler::TopLevelLiveRange"* nonnull %58)
  br i1 %127, label %129, label %128, !prof !80

128:                                              ; preds = %126
  tail call void (i8*, ...) @_Z8V8_FatalPKcz(i8* getelementptr inbounds ([18 x i8], [18 x i8]* @.str.1, i64 0, i64 0), i8* getelementptr inbounds ([47 x i8], [47 x i8]* @.str.37, i64 0, i64 0)) #17
  unreachable

129:                                              ; preds = %126
  %130 = getelementptr inbounds %"class.v8::internal::compiler::UseInterval", %"class.v8::internal::compiler::UseInterval"* %111, i64 0, i32 2
  %131 = load %"class.v8::internal::compiler::UseInterval"*, %"class.v8::internal::compiler::UseInterval"** %130, align 8
  %132 = icmp eq %"class.v8::internal::compiler::UseInterval"* %131, null
  br i1 %132, label %163, label %133

133:                                              ; preds = %129
  %134 = getelementptr inbounds %"class.v8::internal::compiler::UseInterval", %"class.v8::internal::compiler::UseInterval"* %111, i64 0, i32 1, i32 0
  %135 = load i32, i32* %134, align 4
  %136 = getelementptr inbounds %"class.v8::internal::compiler::UseInterval", %"class.v8::internal::compiler::UseInterval"* %131, i64 0, i32 0, i32 0
  %137 = load i32, i32* %136, align 8
  %138 = and i32 %135, 1
  %139 = icmp eq i32 %138, 0
  %140 = add i32 %135, -2
  %141 = or i32 %140, 1
  %142 = and i32 %135, -2
  %143 = select i1 %139, i32 %141, i32 %142
  %144 = sdiv i32 %143, 4
  %145 = load %"class.v8::internal::compiler::TopTierRegisterAllocationData"*, %"class.v8::internal::compiler::TopTierRegisterAllocationData"** %7, align 8
  %146 = getelementptr inbounds %"class.v8::internal::compiler::TopTierRegisterAllocationData", %"class.v8::internal::compiler::TopTierRegisterAllocationData"* %145, i64 0, i32 3
  %147 = load %"class.v8::internal::compiler::InstructionSequence"*, %"class.v8::internal::compiler::InstructionSequence"** %146, align 8
  %148 = tail call %"class.v8::internal::compiler::InstructionBlock"* @_ZNK2v88internal8compiler19InstructionSequence19GetInstructionBlockEi(%"class.v8::internal::compiler::InstructionSequence"* %147, i32 %144) #16
  %149 = load %"class.v8::internal::compiler::TopTierRegisterAllocationData"*, %"class.v8::internal::compiler::TopTierRegisterAllocationData"** %7, align 8
  %150 = getelementptr inbounds %"class.v8::internal::compiler::TopTierRegisterAllocationData", %"class.v8::internal::compiler::TopTierRegisterAllocationData"* %149, i64 0, i32 3
  %151 = load %"class.v8::internal::compiler::InstructionSequence"*, %"class.v8::internal::compiler::InstructionSequence"** %150, align 8
  %152 = sdiv i32 %137, 4
  %153 = tail call %"class.v8::internal::compiler::InstructionBlock"* @_ZNK2v88internal8compiler19InstructionSequence19GetInstructionBlockEi(%"class.v8::internal::compiler::InstructionSequence"* %151, i32 %152) #16
  %154 = getelementptr inbounds %"class.v8::internal::compiler::InstructionBlock", %"class.v8::internal::compiler::InstructionBlock"* %148, i64 0, i32 4, i32 0
  %155 = load i32, i32* %154, align 4
  %156 = getelementptr inbounds %"class.v8::internal::compiler::InstructionBlock", %"class.v8::internal::compiler::InstructionBlock"* %153, i64 0, i32 4, i32 0
  %157 = load i32, i32* %156, align 4
  %158 = icmp slt i32 %155, %157
  br i1 %158, label %160, label %159, !prof !80

159:                                              ; preds = %133
  tail call void (i8*, ...) @_Z8V8_FatalPKcz(i8* getelementptr inbounds ([18 x i8], [18 x i8]* @.str.1, i64 0, i64 0), i8* getelementptr inbounds ([39 x i8], [39 x i8]* @.str.38, i64 0, i64 0)) #17
  unreachable

160:                                              ; preds = %133
  %161 = load %"class.v8::internal::compiler::UseInterval"*, %"class.v8::internal::compiler::UseInterval"** %130, align 8
  %162 = icmp eq %"class.v8::internal::compiler::UseInterval"* %161, null
  br i1 %162, label %163, label %110

163:                                              ; preds = %129, %160, %106, %75, %60, %56
  %164 = getelementptr inbounds %"class.v8::internal::compiler::TopLevelLiveRange"*, %"class.v8::internal::compiler::TopLevelLiveRange"** %57, i64 1
  %165 = icmp eq %"class.v8::internal::compiler::TopLevelLiveRange"** %164, %12
  br i1 %165, label %55, label %56
}

; Function Attrs: nounwind ssp uwtable
define hidden zeroext i1 @_ZNK2v88internal8compiler16LiveRangeBuilder35NextIntervalStartsInDifferentBlocksEPKNS1_11UseIntervalE(%"class.v8::internal::compiler::LiveRangeBuilder"* nocapture readonly, %"class.v8::internal::compiler::UseInterval"* nocapture readonly) local_unnamed_addr #0 align 2 {
  %3 = getelementptr inbounds %"class.v8::internal::compiler::UseInterval", %"class.v8::internal::compiler::UseInterval"* %1, i64 0, i32 1, i32 0
  %4 = load i32, i32* %3, align 4
  %5 = getelementptr inbounds %"class.v8::internal::compiler::UseInterval", %"class.v8::internal::compiler::UseInterval"* %1, i64 0, i32 2
  %6 = load %"class.v8::internal::compiler::UseInterval"*, %"class.v8::internal::compiler::UseInterval"** %5, align 8
  %7 = getelementptr inbounds %"class.v8::internal::compiler::UseInterval", %"class.v8::internal::compiler::UseInterval"* %6, i64 0, i32 0, i32 0
  %8 = load i32, i32* %7, align 8
  %9 = and i32 %4, 1
  %10 = icmp eq i32 %9, 0
  %11 = add i32 %4, -2
  %12 = or i32 %11, 1
  %13 = and i32 %4, -2
  %14 = select i1 %10, i32 %12, i32 %13
  %15 = sdiv i32 %14, 4
  %16 = getelementptr inbounds %"class.v8::internal::compiler::LiveRangeBuilder", %"class.v8::internal::compiler::LiveRangeBuilder"* %0, i64 0, i32 0
  %17 = load %"class.v8::internal::compiler::TopTierRegisterAllocationData"*, %"class.v8::internal::compiler::TopTierRegisterAllocationData"** %16, align 8
  %18 = getelementptr inbounds %"class.v8::internal::compiler::TopTierRegisterAllocationData", %"class.v8::internal::compiler::TopTierRegisterAllocationData"* %17, i64 0, i32 3
  %19 = load %"class.v8::internal::compiler::InstructionSequence"*, %"class.v8::internal::compiler::InstructionSequence"** %18, align 8
  %20 = tail call %"class.v8::internal::compiler::InstructionBlock"* @_ZNK2v88internal8compiler19InstructionSequence19GetInstructionBlockEi(%"class.v8::internal::compiler::InstructionSequence"* %19, i32 %15) #16
  %21 = load %"class.v8::internal::compiler::TopTierRegisterAllocationData"*, %"class.v8::internal::compiler::TopTierRegisterAllocationData"** %16, align 8
  %22 = getelementptr inbounds %"class.v8::internal::compiler::TopTierRegisterAllocationData", %"class.v8::internal::compiler::TopTierRegisterAllocationData"* %21, i64 0, i32 3
  %23 = load %"class.v8::internal::compiler::InstructionSequence"*, %"class.v8::internal::compiler::InstructionSequence"** %22, align 8
  %24 = sdiv i32 %8, 4
  %25 = tail call %"class.v8::internal::compiler::InstructionBlock"* @_ZNK2v88internal8compiler19InstructionSequence19GetInstructionBlockEi(%"class.v8::internal::compiler::InstructionSequence"* %23, i32 %24) #16
  %26 = getelementptr inbounds %"class.v8::internal::compiler::InstructionBlock", %"class.v8::internal::compiler::InstructionBlock"* %20, i64 0, i32 4, i32 0
  %27 = load i32, i32* %26, align 4
  %28 = getelementptr inbounds %"class.v8::internal::compiler::InstructionBlock", %"class.v8::internal::compiler::InstructionBlock"* %25, i64 0, i32 4, i32 0
  %29 = load i32, i32* %28, align 4
  %30 = icmp slt i32 %27, %29
  ret i1 %30
}

; Function Attrs: nounwind ssp uwtable
define hidden zeroext i1 @_ZNK2v88internal8compiler16LiveRangeBuilder29IntervalStartsAtBlockBoundaryEPKNS1_11UseIntervalE(%"class.v8::internal::compiler::LiveRangeBuilder"* nocapture readonly, %"class.v8::internal::compiler::UseInterval"* nocapture readonly) local_unnamed_addr #0 align 2 {
  %3 = getelementptr inbounds %"class.v8::internal::compiler::UseInterval", %"class.v8::internal::compiler::UseInterval"* %1, i64 0, i32 0, i32 0
  %4 = load i32, i32* %3, align 8
  %5 = and i32 %4, 3
  %6 = icmp eq i32 %5, 0
  br i1 %6, label %7, label %17

7:                                                ; preds = %2
  %8 = sdiv i32 %4, 4
  %9 = getelementptr inbounds %"class.v8::internal::compiler::LiveRangeBuilder", %"class.v8::internal::compiler::LiveRangeBuilder"* %0, i64 0, i32 0
  %10 = load %"class.v8::internal::compiler::TopTierRegisterAllocationData"*, %"class.v8::internal::compiler::TopTierRegisterAllocationData"** %9, align 8
  %11 = getelementptr inbounds %"class.v8::internal::compiler::TopTierRegisterAllocationData", %"class.v8::internal::compiler::TopTierRegisterAllocationData"* %10, i64 0, i32 3
  %12 = load %"class.v8::internal::compiler::InstructionSequence"*, %"class.v8::internal::compiler::InstructionSequence"** %11, align 8
  %13 = tail call %"class.v8::internal::compiler::InstructionBlock"* @_ZNK2v88internal8compiler19InstructionSequence19GetInstructionBlockEi(%"class.v8::internal::compiler::InstructionSequence"* %12, i32 %8) #16
  %14 = getelementptr inbounds %"class.v8::internal::compiler::InstructionBlock", %"class.v8::internal::compiler::InstructionBlock"* %13, i64 0, i32 8
  %15 = load i32, i32* %14, align 4
  %16 = icmp eq i32 %15, %8
  br label %17

17:                                               ; preds = %2, %7
  %18 = phi i1 [ %16, %7 ], [ false, %2 ]
  ret i1 %18
}

; Function Attrs: nounwind ssp uwtable
define hidden zeroext i1 @_ZNK2v88internal8compiler16LiveRangeBuilder34IntervalPredecessorsCoveredByRangeEPKNS1_11UseIntervalEPKNS1_17TopLevelLiveRangeE(%"class.v8::internal::compiler::LiveRangeBuilder"* nocapture readonly, %"class.v8::internal::compiler::UseInterval"* nocapture readonly, %"class.v8::internal::compiler::TopLevelLiveRange"* nocapture) local_unnamed_addr #0 align 2 {
  %4 = getelementptr inbounds %"class.v8::internal::compiler::UseInterval", %"class.v8::internal::compiler::UseInterval"* %1, i64 0, i32 0, i32 0
  %5 = load i32, i32* %4, align 8
  %6 = sdiv i32 %5, 4
  %7 = getelementptr inbounds %"class.v8::internal::compiler::LiveRangeBuilder", %"class.v8::internal::compiler::LiveRangeBuilder"* %0, i64 0, i32 0
  %8 = load %"class.v8::internal::compiler::TopTierRegisterAllocationData"*, %"class.v8::internal::compiler::TopTierRegisterAllocationData"** %7, align 8
  %9 = getelementptr inbounds %"class.v8::internal::compiler::TopTierRegisterAllocationData", %"class.v8::internal::compiler::TopTierRegisterAllocationData"* %8, i64 0, i32 3
  %10 = load %"class.v8::internal::compiler::InstructionSequence"*, %"class.v8::internal::compiler::InstructionSequence"** %9, align 8
  %11 = tail call %"class.v8::internal::compiler::InstructionBlock"* @_ZNK2v88internal8compiler19InstructionSequence19GetInstructionBlockEi(%"class.v8::internal::compiler::InstructionSequence"* %10, i32 %6) #16
  %12 = getelementptr inbounds %"class.v8::internal::compiler::InstructionBlock", %"class.v8::internal::compiler::InstructionBlock"* %11, i64 0, i32 1, i32 0, i32 0, i32 0
  %13 = load %"class.v8::internal::compiler::RpoNumber"*, %"class.v8::internal::compiler::RpoNumber"** %12, align 8
  %14 = getelementptr inbounds %"class.v8::internal::compiler::InstructionBlock", %"class.v8::internal::compiler::InstructionBlock"* %11, i64 0, i32 1, i32 0, i32 0, i32 1
  %15 = load %"class.v8::internal::compiler::RpoNumber"*, %"class.v8::internal::compiler::RpoNumber"** %14, align 8
  %16 = icmp eq %"class.v8::internal::compiler::RpoNumber"* %13, %15
  br i1 %16, label %104, label %17

17:                                               ; preds = %3
  %18 = getelementptr inbounds %"class.v8::internal::compiler::TopLevelLiveRange", %"class.v8::internal::compiler::TopLevelLiveRange"* %2, i64 0, i32 0, i32 3
  %19 = getelementptr inbounds %"class.v8::internal::compiler::TopLevelLiveRange", %"class.v8::internal::compiler::TopLevelLiveRange"* %2, i64 0, i32 0, i32 2
  %20 = getelementptr inbounds %"class.v8::internal::compiler::TopLevelLiveRange", %"class.v8::internal::compiler::TopLevelLiveRange"* %2, i64 0, i32 0, i32 7
  br label %21

21:                                               ; preds = %17, %101
  %22 = phi %"class.v8::internal::compiler::RpoNumber"* [ %13, %17 ], [ %102, %101 ]
  %23 = getelementptr inbounds %"class.v8::internal::compiler::RpoNumber", %"class.v8::internal::compiler::RpoNumber"* %22, i64 0, i32 0
  %24 = load i32, i32* %23, align 4
  %25 = load %"class.v8::internal::compiler::TopTierRegisterAllocationData"*, %"class.v8::internal::compiler::TopTierRegisterAllocationData"** %7, align 8
  %26 = getelementptr inbounds %"class.v8::internal::compiler::TopTierRegisterAllocationData", %"class.v8::internal::compiler::TopTierRegisterAllocationData"* %25, i64 0, i32 3
  %27 = load %"class.v8::internal::compiler::InstructionSequence"*, %"class.v8::internal::compiler::InstructionSequence"** %26, align 8
  %28 = getelementptr inbounds %"class.v8::internal::compiler::InstructionSequence", %"class.v8::internal::compiler::InstructionSequence"* %27, i64 0, i32 2
  %29 = bitcast %"class.v8::internal::ZoneVector.1170"** %28 to %"class.std::__1::vector.1171"**
  %30 = load %"class.std::__1::vector.1171"*, %"class.std::__1::vector.1171"** %29, align 8
  %31 = sext i32 %24 to i64
  %32 = getelementptr inbounds %"class.std::__1::vector.1171", %"class.std::__1::vector.1171"* %30, i64 0, i32 0, i32 1
  %33 = bitcast %"class.v8::internal::compiler::InstructionBlock"*** %32 to i64*
  %34 = load i64, i64* %33, align 8
  %35 = bitcast %"class.std::__1::vector.1171"* %30 to i64*
  %36 = load i64, i64* %35, align 8
  %37 = sub i64 %34, %36
  %38 = ashr exact i64 %37, 3
  %39 = icmp ugt i64 %38, %31
  br i1 %39, label %42, label %40

40:                                               ; preds = %21
  %41 = bitcast %"class.std::__1::vector.1171"* %30 to %"class.std::__1::__vector_base_common"*
  tail call void @_ZNKSt3__120__vector_base_commonILb1EE20__throw_out_of_rangeEv(%"class.std::__1::__vector_base_common"* %41) #17
  unreachable

42:                                               ; preds = %21
  %43 = inttoptr i64 %36 to %"class.v8::internal::compiler::InstructionBlock"**
  %44 = getelementptr inbounds %"class.v8::internal::compiler::InstructionBlock"*, %"class.v8::internal::compiler::InstructionBlock"** %43, i64 %31
  %45 = load %"class.v8::internal::compiler::InstructionBlock"*, %"class.v8::internal::compiler::InstructionBlock"** %44, align 8
  %46 = getelementptr inbounds %"class.v8::internal::compiler::InstructionBlock", %"class.v8::internal::compiler::InstructionBlock"* %45, i64 0, i32 9
  %47 = load i32, i32* %46, align 8
  %48 = shl i32 %47, 2
  %49 = add i32 %48, -2
  %50 = or i32 %49, 1
  %51 = load %"class.v8::internal::compiler::UseInterval"*, %"class.v8::internal::compiler::UseInterval"** %18, align 8
  %52 = icmp eq %"class.v8::internal::compiler::UseInterval"* %51, null
  br i1 %52, label %104, label %53

53:                                               ; preds = %42
  %54 = getelementptr inbounds %"class.v8::internal::compiler::UseInterval", %"class.v8::internal::compiler::UseInterval"* %51, i64 0, i32 0, i32 0
  %55 = load i32, i32* %54, align 8
  %56 = icmp sgt i32 %55, %50
  br i1 %56, label %104, label %57

57:                                               ; preds = %53
  %58 = load %"class.v8::internal::compiler::UseInterval"*, %"class.v8::internal::compiler::UseInterval"** %19, align 8
  %59 = getelementptr inbounds %"class.v8::internal::compiler::UseInterval", %"class.v8::internal::compiler::UseInterval"* %58, i64 0, i32 1, i32 0
  %60 = load i32, i32* %59, align 4
  %61 = icmp sgt i32 %60, %50
  br i1 %61, label %62, label %104

62:                                               ; preds = %57
  %63 = load %"class.v8::internal::compiler::UseInterval"*, %"class.v8::internal::compiler::UseInterval"** %20, align 8
  %64 = icmp eq %"class.v8::internal::compiler::UseInterval"* %63, null
  br i1 %64, label %70, label %65

65:                                               ; preds = %62
  %66 = getelementptr inbounds %"class.v8::internal::compiler::UseInterval", %"class.v8::internal::compiler::UseInterval"* %63, i64 0, i32 0, i32 0
  %67 = load i32, i32* %66, align 8
  %68 = icmp sgt i32 %67, %50
  br i1 %68, label %69, label %70

69:                                               ; preds = %65
  store %"class.v8::internal::compiler::UseInterval"* null, %"class.v8::internal::compiler::UseInterval"** %20, align 8
  br label %70

70:                                               ; preds = %69, %65, %62
  %71 = phi %"class.v8::internal::compiler::UseInterval"** [ %18, %69 ], [ %20, %65 ], [ %18, %62 ]
  %72 = load %"class.v8::internal::compiler::UseInterval"*, %"class.v8::internal::compiler::UseInterval"** %71, align 8
  %73 = icmp eq %"class.v8::internal::compiler::UseInterval"* %72, null
  br i1 %73, label %104, label %78

74:                                               ; preds = %97
  %75 = getelementptr inbounds %"class.v8::internal::compiler::UseInterval", %"class.v8::internal::compiler::UseInterval"* %79, i64 0, i32 2
  %76 = load %"class.v8::internal::compiler::UseInterval"*, %"class.v8::internal::compiler::UseInterval"** %75, align 8
  %77 = icmp eq %"class.v8::internal::compiler::UseInterval"* %76, null
  br i1 %77, label %104, label %78

78:                                               ; preds = %70, %74
  %79 = phi %"class.v8::internal::compiler::UseInterval"* [ %76, %74 ], [ %72, %70 ]
  %80 = getelementptr inbounds %"class.v8::internal::compiler::UseInterval", %"class.v8::internal::compiler::UseInterval"* %79, i64 0, i32 0, i32 0
  %81 = load i32, i32* %80, align 8
  %82 = icmp sgt i32 %81, %50
  br i1 %82, label %94, label %83

83:                                               ; preds = %78
  %84 = load %"class.v8::internal::compiler::UseInterval"*, %"class.v8::internal::compiler::UseInterval"** %20, align 8
  %85 = icmp eq %"class.v8::internal::compiler::UseInterval"* %84, null
  br i1 %85, label %89, label %86

86:                                               ; preds = %83
  %87 = getelementptr inbounds %"class.v8::internal::compiler::UseInterval", %"class.v8::internal::compiler::UseInterval"* %84, i64 0, i32 0, i32 0
  %88 = load i32, i32* %87, align 8
  br label %89

89:                                               ; preds = %86, %83
  %90 = phi i32 [ %88, %86 ], [ -1, %83 ]
  %91 = icmp sgt i32 %81, %90
  br i1 %91, label %92, label %94

92:                                               ; preds = %89
  store %"class.v8::internal::compiler::UseInterval"* %79, %"class.v8::internal::compiler::UseInterval"** %20, align 8
  %93 = load i32, i32* %80, align 4
  br label %94

94:                                               ; preds = %92, %89, %78
  %95 = phi i32 [ %81, %78 ], [ %81, %89 ], [ %93, %92 ]
  %96 = icmp sgt i32 %95, %50
  br i1 %96, label %104, label %97

97:                                               ; preds = %94
  %98 = getelementptr inbounds %"class.v8::internal::compiler::UseInterval", %"class.v8::internal::compiler::UseInterval"* %79, i64 0, i32 1, i32 0
  %99 = load i32, i32* %98, align 4
  %100 = icmp sgt i32 %99, %50
  br i1 %100, label %101, label %74

101:                                              ; preds = %97
  %102 = getelementptr inbounds %"class.v8::internal::compiler::RpoNumber", %"class.v8::internal::compiler::RpoNumber"* %22, i64 1
  %103 = icmp eq %"class.v8::internal::compiler::RpoNumber"* %102, %15
  br i1 %103, label %104, label %21

104:                                              ; preds = %57, %42, %53, %70, %101, %94, %74, %3
  %105 = phi i1 [ true, %3 ], [ false, %74 ], [ false, %94 ], [ false, %57 ], [ false, %42 ], [ false, %53 ], [ false, %70 ], [ true, %101 ]
  ret i1 %105
}

; Function Attrs: nounwind ssp uwtable
define hidden void @_ZN2v88internal8compiler13BundleBuilder12BuildBundlesEv(%"class.v8::internal::compiler::BundleBuilder"* nocapture) local_unnamed_addr #0 align 2 {
  %2 = alloca %"class.v8::internal::compiler::LiveRange"*, align 8
  %3 = alloca %"class.v8::internal::compiler::LiveRange"*, align 8
  %4 = getelementptr inbounds %"class.v8::internal::compiler::BundleBuilder", %"class.v8::internal::compiler::BundleBuilder"* %0, i64 0, i32 0
  %5 = load %"class.v8::internal::compiler::TopTierRegisterAllocationData"*, %"class.v8::internal::compiler::TopTierRegisterAllocationData"** %4, align 8
  %6 = getelementptr inbounds %"class.v8::internal::compiler::TopTierRegisterAllocationData", %"class.v8::internal::compiler::TopTierRegisterAllocationData"* %5, i64 0, i32 23, i32 0
  %7 = load i32, i32* %6, align 4
  %8 = and i32 %7, 1
  %9 = icmp eq i32 %8, 0
  br i1 %9, label %12, label %10

10:                                               ; preds = %1
  tail call void (i8*, ...) @_ZN2v88internal6PrintFEPKcz(i8* getelementptr inbounds ([15 x i8], [15 x i8]* @.str.39, i64 0, i64 0)) #16
  %11 = load %"class.v8::internal::compiler::TopTierRegisterAllocationData"*, %"class.v8::internal::compiler::TopTierRegisterAllocationData"** %4, align 8
  br label %12

12:                                               ; preds = %1, %10
  %13 = phi %"class.v8::internal::compiler::TopTierRegisterAllocationData"* [ %5, %1 ], [ %11, %10 ]
  %14 = getelementptr inbounds %"class.v8::internal::compiler::TopTierRegisterAllocationData", %"class.v8::internal::compiler::TopTierRegisterAllocationData"* %13, i64 0, i32 3
  %15 = load %"class.v8::internal::compiler::InstructionSequence"*, %"class.v8::internal::compiler::InstructionSequence"** %14, align 8
  %16 = getelementptr inbounds %"class.v8::internal::compiler::InstructionSequence", %"class.v8::internal::compiler::InstructionSequence"* %15, i64 0, i32 2
  %17 = bitcast %"class.v8::internal::ZoneVector.1170"** %16 to %"class.std::__1::vector.1171"**
  %18 = load %"class.std::__1::vector.1171"*, %"class.std::__1::vector.1171"** %17, align 8
  %19 = getelementptr inbounds %"class.std::__1::vector.1171", %"class.std::__1::vector.1171"* %18, i64 0, i32 0, i32 1
  %20 = bitcast %"class.v8::internal::compiler::InstructionBlock"*** %19 to i64*
  %21 = load i64, i64* %20, align 8
  %22 = bitcast %"class.std::__1::vector.1171"* %18 to i64*
  %23 = load i64, i64* %22, align 8
  %24 = sub i64 %21, %23
  %25 = lshr exact i64 %24, 3
  %26 = trunc i64 %25 to i32
  %27 = icmp sgt i32 %26, 0
  br i1 %27, label %28, label %40

28:                                               ; preds = %12
  %29 = getelementptr inbounds %"class.v8::internal::compiler::BundleBuilder", %"class.v8::internal::compiler::BundleBuilder"* %0, i64 0, i32 1
  %30 = bitcast %"class.v8::internal::compiler::LiveRange"** %2 to i8*
  %31 = bitcast %"class.v8::internal::compiler::LiveRange"** %2 to %"class.v8::internal::compiler::TopLevelLiveRange"**
  %32 = bitcast %"class.v8::internal::compiler::LiveRange"** %3 to i8*
  %33 = bitcast %"class.v8::internal::compiler::LiveRange"** %3 to %"class.v8::internal::compiler::TopLevelLiveRange"**
  %34 = shl i64 %24, 29
  %35 = ashr exact i64 %34, 32
  %36 = add nsw i64 %35, -1
  %37 = sub i64 %21, %23
  %38 = ashr exact i64 %37, 3
  %39 = icmp ugt i64 %38, %36
  br i1 %39, label %44, label %41

40:                                               ; preds = %311, %12
  ret void

41:                                               ; preds = %313, %28
  %42 = phi %"class.std::__1::vector.1171"* [ %18, %28 ], [ %319, %313 ]
  %43 = bitcast %"class.std::__1::vector.1171"* %42 to %"class.std::__1::__vector_base_common"*
  call void @_ZNKSt3__120__vector_base_commonILb1EE20__throw_out_of_rangeEv(%"class.std::__1::__vector_base_common"* %43) #17
  unreachable

44:                                               ; preds = %28, %313
  %45 = phi i64 [ %325, %313 ], [ %36, %28 ]
  %46 = phi %"class.v8::internal::compiler::TopTierRegisterAllocationData"* [ %314, %313 ], [ %13, %28 ]
  %47 = phi i64 [ %324, %313 ], [ %23, %28 ]
  %48 = inttoptr i64 %47 to %"class.v8::internal::compiler::InstructionBlock"**
  %49 = getelementptr inbounds %"class.v8::internal::compiler::InstructionBlock"*, %"class.v8::internal::compiler::InstructionBlock"** %48, i64 %45
  %50 = load %"class.v8::internal::compiler::InstructionBlock"*, %"class.v8::internal::compiler::InstructionBlock"** %49, align 8
  %51 = getelementptr inbounds %"class.v8::internal::compiler::TopTierRegisterAllocationData", %"class.v8::internal::compiler::TopTierRegisterAllocationData"* %46, i64 0, i32 23, i32 0
  %52 = load i32, i32* %51, align 4
  %53 = and i32 %52, 1
  %54 = icmp eq i32 %53, 0
  br i1 %54, label %57, label %55

55:                                               ; preds = %44
  %56 = trunc i64 %45 to i32
  call void (i8*, ...) @_ZN2v88internal6PrintFEPKcz(i8* getelementptr inbounds ([11 x i8], [11 x i8]* @.str.40, i64 0, i64 0), i32 %56) #16
  br label %57

57:                                               ; preds = %44, %55
  %58 = getelementptr inbounds %"class.v8::internal::compiler::InstructionBlock", %"class.v8::internal::compiler::InstructionBlock"* %50, i64 0, i32 2, i32 0, i32 0, i32 0
  %59 = load %"class.v8::internal::compiler::PhiInstruction"**, %"class.v8::internal::compiler::PhiInstruction"*** %58, align 8
  %60 = getelementptr inbounds %"class.v8::internal::compiler::InstructionBlock", %"class.v8::internal::compiler::InstructionBlock"* %50, i64 0, i32 2, i32 0, i32 0, i32 1
  %61 = load %"class.v8::internal::compiler::PhiInstruction"**, %"class.v8::internal::compiler::PhiInstruction"*** %60, align 8
  %62 = icmp eq %"class.v8::internal::compiler::PhiInstruction"** %59, %61
  br i1 %62, label %63, label %69

63:                                               ; preds = %306, %57
  %64 = load %"class.v8::internal::compiler::TopTierRegisterAllocationData"*, %"class.v8::internal::compiler::TopTierRegisterAllocationData"** %4, align 8
  %65 = getelementptr inbounds %"class.v8::internal::compiler::TopTierRegisterAllocationData", %"class.v8::internal::compiler::TopTierRegisterAllocationData"* %64, i64 0, i32 23, i32 0
  %66 = load i32, i32* %65, align 4
  %67 = and i32 %66, 1
  %68 = icmp eq i32 %67, 0
  br i1 %68, label %311, label %309

69:                                               ; preds = %57, %306
  %70 = phi %"class.v8::internal::compiler::PhiInstruction"** [ %307, %306 ], [ %59, %57 ]
  %71 = load %"class.v8::internal::compiler::PhiInstruction"*, %"class.v8::internal::compiler::PhiInstruction"** %70, align 8
  %72 = load %"class.v8::internal::compiler::TopTierRegisterAllocationData"*, %"class.v8::internal::compiler::TopTierRegisterAllocationData"** %4, align 8
  %73 = getelementptr inbounds %"class.v8::internal::compiler::PhiInstruction", %"class.v8::internal::compiler::PhiInstruction"* %71, i64 0, i32 0
  %74 = load i32, i32* %73, align 8
  %75 = call %"class.v8::internal::compiler::TopLevelLiveRange"* @_ZN2v88internal8compiler29TopTierRegisterAllocationData23GetOrCreateLiveRangeForEi(%"class.v8::internal::compiler::TopTierRegisterAllocationData"* %72, i32 %74)
  %76 = getelementptr inbounds %"class.v8::internal::compiler::TopLevelLiveRange", %"class.v8::internal::compiler::TopLevelLiveRange"* %75, i64 0, i32 0, i32 10
  %77 = load %"class.v8::internal::compiler::LiveRangeBundle"*, %"class.v8::internal::compiler::LiveRangeBundle"** %76, align 8
  %78 = icmp eq %"class.v8::internal::compiler::LiveRangeBundle"* %77, null
  br i1 %78, label %79, label %121

79:                                               ; preds = %69
  %80 = load %"class.v8::internal::compiler::TopTierRegisterAllocationData"*, %"class.v8::internal::compiler::TopTierRegisterAllocationData"** %4, align 8
  %81 = getelementptr inbounds %"class.v8::internal::compiler::TopTierRegisterAllocationData", %"class.v8::internal::compiler::TopTierRegisterAllocationData"* %80, i64 0, i32 1
  %82 = load %"class.v8::internal::Zone"*, %"class.v8::internal::Zone"** %81, align 8
  %83 = ptrtoint %"class.v8::internal::Zone"* %82 to i64
  %84 = load i32, i32* %29, align 8
  %85 = add nsw i32 %84, 1
  store i32 %85, i32* %29, align 8
  %86 = getelementptr inbounds %"class.v8::internal::Zone", %"class.v8::internal::Zone"* %82, i64 0, i32 2
  %87 = load i64, i64* %86, align 8
  %88 = getelementptr inbounds %"class.v8::internal::Zone", %"class.v8::internal::Zone"* %82, i64 0, i32 3
  %89 = load i64, i64* %88, align 8
  %90 = sub i64 %89, %87
  %91 = icmp ult i64 %90, 72
  br i1 %91, label %92, label %94, !prof !2

92:                                               ; preds = %79
  %93 = call i64 @_ZN2v88internal4Zone9NewExpandEm(%"class.v8::internal::Zone"* %82, i64 72) #16
  br label %96

94:                                               ; preds = %79
  %95 = add i64 %87, 72
  store i64 %95, i64* %86, align 8
  br label %96

96:                                               ; preds = %92, %94
  %97 = phi i64 [ %93, %92 ], [ %87, %94 ]
  %98 = inttoptr i64 %97 to %"class.v8::internal::compiler::LiveRangeBundle"*
  %99 = getelementptr inbounds %"class.v8::internal::compiler::LiveRangeBundle", %"class.v8::internal::compiler::LiveRangeBundle"* %98, i64 0, i32 0, i32 0, i32 0, i32 0
  %100 = getelementptr inbounds %"class.v8::internal::compiler::LiveRangeBundle", %"class.v8::internal::compiler::LiveRangeBundle"* %98, i64 0, i32 0, i32 0, i32 0, i32 1, i32 1
  %101 = bitcast %"struct.std::__1::__compressed_pair_elem.0"* %100 to i64*
  %102 = getelementptr inbounds %"class.v8::internal::compiler::LiveRangeBundle", %"class.v8::internal::compiler::LiveRangeBundle"* %98, i64 0, i32 0, i32 0, i32 0, i32 1
  %103 = bitcast %"class.std::__1::__compressed_pair"* %102 to i64*
  store i64 0, i64* %103, align 8
  store i64 %83, i64* %101, align 8
  %104 = getelementptr inbounds %"class.v8::internal::compiler::LiveRangeBundle", %"class.v8::internal::compiler::LiveRangeBundle"* %98, i64 0, i32 0, i32 0, i32 0, i32 2, i32 0, i32 0
  store i64 0, i64* %104, align 8
  %105 = getelementptr inbounds %"class.v8::internal::compiler::LiveRangeBundle", %"class.v8::internal::compiler::LiveRangeBundle"* %98, i64 0, i32 0, i32 0, i32 0, i32 1, i32 0, i32 0
  store %"class.std::__1::__tree_end_node"* %105, %"class.std::__1::__tree_end_node"** %99, align 8
  %106 = getelementptr inbounds %"class.v8::internal::compiler::LiveRangeBundle", %"class.v8::internal::compiler::LiveRangeBundle"* %98, i64 0, i32 1, i32 0, i32 0, i32 0
  %107 = getelementptr inbounds %"class.v8::internal::compiler::LiveRangeBundle", %"class.v8::internal::compiler::LiveRangeBundle"* %98, i64 0, i32 1, i32 0, i32 0, i32 1, i32 1
  %108 = bitcast %"struct.std::__1::__compressed_pair_elem.28"* %107 to i64*
  %109 = getelementptr inbounds %"class.v8::internal::compiler::LiveRangeBundle", %"class.v8::internal::compiler::LiveRangeBundle"* %98, i64 0, i32 1, i32 0, i32 0, i32 1
  %110 = bitcast %"class.std::__1::__compressed_pair.27"* %109 to i64*
  store i64 0, i64* %110, align 8
  store i64 %83, i64* %108, align 8
  %111 = getelementptr inbounds %"class.v8::internal::compiler::LiveRangeBundle", %"class.v8::internal::compiler::LiveRangeBundle"* %98, i64 0, i32 1, i32 0, i32 0, i32 2, i32 0, i32 0
  store i64 0, i64* %111, align 8
  %112 = getelementptr inbounds %"class.v8::internal::compiler::LiveRangeBundle", %"class.v8::internal::compiler::LiveRangeBundle"* %98, i64 0, i32 1, i32 0, i32 0, i32 1, i32 0, i32 0
  store %"class.std::__1::__tree_end_node"* %112, %"class.std::__1::__tree_end_node"** %106, align 8
  %113 = getelementptr inbounds %"class.v8::internal::compiler::LiveRangeBundle", %"class.v8::internal::compiler::LiveRangeBundle"* %98, i64 0, i32 2
  store i32 %84, i32* %113, align 8
  %114 = getelementptr inbounds %"class.v8::internal::compiler::LiveRangeBundle", %"class.v8::internal::compiler::LiveRangeBundle"* %98, i64 0, i32 3
  store i32 32, i32* %114, align 4
  call void @llvm.lifetime.start.p0i8(i64 8, i8* nonnull %30)
  store %"class.v8::internal::compiler::TopLevelLiveRange"* %75, %"class.v8::internal::compiler::TopLevelLiveRange"** %31, align 8
  %115 = getelementptr inbounds %"class.v8::internal::compiler::LiveRangeBundle", %"class.v8::internal::compiler::LiveRangeBundle"* %98, i64 0, i32 0, i32 0, i32 0
  %116 = call { %"class.std::__1::__tree_end_node"*, i8 } @_ZNSt3__16__treeIPN2v88internal8compiler9LiveRangeENS3_17LiveRangeOrderingENS2_13ZoneAllocatorIS5_EEE25__emplace_unique_key_argsIS5_JRKS5_EEENS_4pairINS_15__tree_iteratorIS5_PNS_11__tree_nodeIS5_PvEElEEbEERKT_DpOT0_(%"class.std::__1::__tree"* %115, %"class.v8::internal::compiler::LiveRange"** nonnull dereferenceable(8) %2, %"class.v8::internal::compiler::LiveRange"** nonnull dereferenceable(8) %2) #16
  %117 = load %"class.v8::internal::compiler::LiveRange"*, %"class.v8::internal::compiler::LiveRange"** %2, align 8
  %118 = getelementptr inbounds %"class.v8::internal::compiler::LiveRange", %"class.v8::internal::compiler::LiveRange"* %117, i64 0, i32 10
  store %"class.v8::internal::compiler::LiveRangeBundle"* %98, %"class.v8::internal::compiler::LiveRangeBundle"** %118, align 8
  %119 = getelementptr inbounds %"class.v8::internal::compiler::LiveRange", %"class.v8::internal::compiler::LiveRange"* %117, i64 0, i32 3
  %120 = load %"class.v8::internal::compiler::UseInterval"*, %"class.v8::internal::compiler::UseInterval"** %119, align 8
  call void @_ZN2v88internal8compiler15LiveRangeBundle10InsertUsesEPNS1_11UseIntervalE(%"class.v8::internal::compiler::LiveRangeBundle"* %98, %"class.v8::internal::compiler::UseInterval"* %120) #16
  call void @llvm.lifetime.end.p0i8(i64 8, i8* nonnull %30)
  br label %121

121:                                              ; preds = %69, %96
  %122 = phi %"class.v8::internal::compiler::LiveRangeBundle"* [ %98, %96 ], [ %77, %69 ]
  %123 = load %"class.v8::internal::compiler::TopTierRegisterAllocationData"*, %"class.v8::internal::compiler::TopTierRegisterAllocationData"** %4, align 8
  %124 = getelementptr inbounds %"class.v8::internal::compiler::TopTierRegisterAllocationData", %"class.v8::internal::compiler::TopTierRegisterAllocationData"* %123, i64 0, i32 23, i32 0
  %125 = load i32, i32* %124, align 4
  %126 = and i32 %125, 1
  %127 = icmp eq i32 %126, 0
  br i1 %127, label %136, label %128

128:                                              ; preds = %121
  %129 = load i32, i32* %73, align 8
  %130 = getelementptr inbounds %"class.v8::internal::compiler::TopLevelLiveRange", %"class.v8::internal::compiler::TopLevelLiveRange"* %75, i64 0, i32 0, i32 5
  %131 = load %"class.v8::internal::compiler::TopLevelLiveRange"*, %"class.v8::internal::compiler::TopLevelLiveRange"** %130, align 8
  %132 = getelementptr inbounds %"class.v8::internal::compiler::TopLevelLiveRange", %"class.v8::internal::compiler::TopLevelLiveRange"* %131, i64 0, i32 1
  %133 = load i32, i32* %132, align 4
  %134 = getelementptr inbounds %"class.v8::internal::compiler::TopLevelLiveRange", %"class.v8::internal::compiler::TopLevelLiveRange"* %75, i64 0, i32 0, i32 0
  %135 = load i32, i32* %134, align 8
  call void (i8*, ...) @_ZN2v88internal6PrintFEPKcz(i8* getelementptr inbounds ([35 x i8], [35 x i8]* @.str.41, i64 0, i64 0), i32 %129, i32 %133, i32 %135) #16
  br label %136

136:                                              ; preds = %121, %128
  %137 = getelementptr inbounds %"class.v8::internal::compiler::PhiInstruction", %"class.v8::internal::compiler::PhiInstruction"* %71, i64 0, i32 2, i32 0, i32 0, i32 0
  %138 = load i32*, i32** %137, align 8
  %139 = getelementptr inbounds %"class.v8::internal::compiler::PhiInstruction", %"class.v8::internal::compiler::PhiInstruction"* %71, i64 0, i32 2, i32 0, i32 0, i32 1
  %140 = load i32*, i32** %139, align 8
  %141 = icmp eq i32* %138, %140
  br i1 %141, label %306, label %142

142:                                              ; preds = %136
  %143 = getelementptr inbounds %"class.v8::internal::compiler::TopLevelLiveRange", %"class.v8::internal::compiler::TopLevelLiveRange"* %75, i64 0, i32 0, i32 3
  br label %147

144:                                              ; preds = %295
  %145 = and i8 %296, 1
  %146 = icmp eq i8 %145, 0
  br i1 %146, label %306, label %300

147:                                              ; preds = %142, %295
  %148 = phi %"class.v8::internal::compiler::LiveRangeBundle"* [ %122, %142 ], [ %297, %295 ]
  %149 = phi i8 [ 0, %142 ], [ %296, %295 ]
  %150 = phi i32* [ %138, %142 ], [ %298, %295 ]
  %151 = load i32, i32* %150, align 4
  %152 = load %"class.v8::internal::compiler::TopTierRegisterAllocationData"*, %"class.v8::internal::compiler::TopTierRegisterAllocationData"** %4, align 8
  %153 = call %"class.v8::internal::compiler::TopLevelLiveRange"* @_ZN2v88internal8compiler29TopTierRegisterAllocationData23GetOrCreateLiveRangeForEi(%"class.v8::internal::compiler::TopTierRegisterAllocationData"* %152, i32 %151)
  %154 = load %"class.v8::internal::compiler::TopTierRegisterAllocationData"*, %"class.v8::internal::compiler::TopTierRegisterAllocationData"** %4, align 8
  %155 = getelementptr inbounds %"class.v8::internal::compiler::TopTierRegisterAllocationData", %"class.v8::internal::compiler::TopTierRegisterAllocationData"* %154, i64 0, i32 23, i32 0
  %156 = load i32, i32* %155, align 4
  %157 = and i32 %156, 1
  %158 = icmp eq i32 %157, 0
  br i1 %158, label %170, label %159

159:                                              ; preds = %147
  %160 = getelementptr inbounds %"class.v8::internal::compiler::TopLevelLiveRange", %"class.v8::internal::compiler::TopLevelLiveRange"* %153, i64 0, i32 0, i32 5
  %161 = load %"class.v8::internal::compiler::TopLevelLiveRange"*, %"class.v8::internal::compiler::TopLevelLiveRange"** %160, align 8
  %162 = getelementptr inbounds %"class.v8::internal::compiler::TopLevelLiveRange", %"class.v8::internal::compiler::TopLevelLiveRange"* %161, i64 0, i32 1
  %163 = load i32, i32* %162, align 4
  %164 = getelementptr inbounds %"class.v8::internal::compiler::TopLevelLiveRange", %"class.v8::internal::compiler::TopLevelLiveRange"* %153, i64 0, i32 0, i32 0
  %165 = load i32, i32* %164, align 8
  call void (i8*, ...) @_ZN2v88internal6PrintFEPKcz(i8* getelementptr inbounds ([34 x i8], [34 x i8]* @.str.42, i64 0, i64 0), i32 %151, i32 %163, i32 %165) #16
  %166 = load %"class.v8::internal::compiler::TopTierRegisterAllocationData"*, %"class.v8::internal::compiler::TopTierRegisterAllocationData"** %4, align 8
  %167 = getelementptr inbounds %"class.v8::internal::compiler::TopTierRegisterAllocationData", %"class.v8::internal::compiler::TopTierRegisterAllocationData"* %166, i64 0, i32 23, i32 0
  %168 = load i32, i32* %167, align 4
  %169 = and i32 %168, 1
  br label %170

170:                                              ; preds = %147, %159
  %171 = phi i32 [ 0, %147 ], [ %169, %159 ]
  %172 = getelementptr inbounds %"class.v8::internal::compiler::TopLevelLiveRange", %"class.v8::internal::compiler::TopLevelLiveRange"* %153, i64 0, i32 0, i32 10
  %173 = load %"class.v8::internal::compiler::LiveRangeBundle"*, %"class.v8::internal::compiler::LiveRangeBundle"** %172, align 8
  %174 = icmp eq %"class.v8::internal::compiler::LiveRangeBundle"* %173, null
  %175 = icmp ne i32 %171, 0
  br i1 %174, label %207, label %176

176:                                              ; preds = %170
  br i1 %175, label %177, label %182

177:                                              ; preds = %176
  call void (i8*, ...) @_ZN2v88internal6PrintFEPKcz(i8* getelementptr inbounds ([7 x i8], [7 x i8]* @.str.43, i64 0, i64 0)) #16
  %178 = load %"class.v8::internal::compiler::TopTierRegisterAllocationData"*, %"class.v8::internal::compiler::TopTierRegisterAllocationData"** %4, align 8
  %179 = getelementptr inbounds %"class.v8::internal::compiler::TopTierRegisterAllocationData", %"class.v8::internal::compiler::TopTierRegisterAllocationData"* %178, i64 0, i32 23, i32 0
  %180 = load i32, i32* %179, align 4
  %181 = and i32 %180, 1
  br label %182

182:                                              ; preds = %177, %176
  %183 = phi i32 [ %181, %177 ], [ 0, %176 ]
  %184 = icmp ne i32 %183, 0
  %185 = call %"class.v8::internal::compiler::LiveRangeBundle"* @_ZN2v88internal8compiler15LiveRangeBundle8TryMergeEPS2_S3_b(%"class.v8::internal::compiler::LiveRangeBundle"* %148, %"class.v8::internal::compiler::LiveRangeBundle"* nonnull %173, i1 zeroext %184)
  %186 = icmp eq %"class.v8::internal::compiler::LiveRangeBundle"* %185, null
  br i1 %186, label %197, label %187

187:                                              ; preds = %182
  %188 = load %"class.v8::internal::compiler::TopTierRegisterAllocationData"*, %"class.v8::internal::compiler::TopTierRegisterAllocationData"** %4, align 8
  %189 = getelementptr inbounds %"class.v8::internal::compiler::TopTierRegisterAllocationData", %"class.v8::internal::compiler::TopTierRegisterAllocationData"* %188, i64 0, i32 23, i32 0
  %190 = load i32, i32* %189, align 4
  %191 = and i32 %190, 1
  %192 = icmp eq i32 %191, 0
  br i1 %192, label %295, label %193

193:                                              ; preds = %187
  %194 = load i32, i32* %73, align 8
  %195 = getelementptr inbounds %"class.v8::internal::compiler::LiveRangeBundle", %"class.v8::internal::compiler::LiveRangeBundle"* %185, i64 0, i32 2
  %196 = load i32, i32* %195, align 8
  call void (i8*, ...) @_ZN2v88internal6PrintFEPKcz(i8* getelementptr inbounds ([24 x i8], [24 x i8]* @.str.44, i64 0, i64 0), i32 %194, i32 %151, i32 %196) #16
  br label %295

197:                                              ; preds = %182
  %198 = getelementptr inbounds %"class.v8::internal::compiler::TopLevelLiveRange", %"class.v8::internal::compiler::TopLevelLiveRange"* %153, i64 0, i32 0, i32 3
  %199 = load %"class.v8::internal::compiler::UseInterval"*, %"class.v8::internal::compiler::UseInterval"** %198, align 8
  %200 = getelementptr inbounds %"class.v8::internal::compiler::UseInterval", %"class.v8::internal::compiler::UseInterval"* %199, i64 0, i32 0, i32 0
  %201 = load i32, i32* %200, align 8
  %202 = load %"class.v8::internal::compiler::UseInterval"*, %"class.v8::internal::compiler::UseInterval"** %143, align 8
  %203 = getelementptr inbounds %"class.v8::internal::compiler::UseInterval", %"class.v8::internal::compiler::UseInterval"* %202, i64 0, i32 0, i32 0
  %204 = load i32, i32* %203, align 8
  %205 = icmp sgt i32 %201, %204
  %206 = select i1 %205, i8 1, i8 %149
  br label %295

207:                                              ; preds = %170
  br i1 %175, label %208, label %209

208:                                              ; preds = %207
  call void (i8*, ...) @_ZN2v88internal6PrintFEPKcz(i8* getelementptr inbounds ([5 x i8], [5 x i8]* @.str.45, i64 0, i64 0)) #16
  br label %209

209:                                              ; preds = %208, %207
  call void @llvm.lifetime.start.p0i8(i64 8, i8* nonnull %32)
  store %"class.v8::internal::compiler::TopLevelLiveRange"* %153, %"class.v8::internal::compiler::TopLevelLiveRange"** %33, align 8
  %210 = getelementptr inbounds %"class.v8::internal::compiler::TopLevelLiveRange", %"class.v8::internal::compiler::TopLevelLiveRange"* %153, i64 0, i32 0, i32 3
  %211 = load %"class.v8::internal::compiler::UseInterval"*, %"class.v8::internal::compiler::UseInterval"** %210, align 8
  %212 = getelementptr inbounds %"class.v8::internal::compiler::LiveRangeBundle", %"class.v8::internal::compiler::LiveRangeBundle"* %148, i64 0, i32 1, i32 0, i32 0, i32 0
  %213 = load %"class.std::__1::__tree_end_node"*, %"class.std::__1::__tree_end_node"** %212, align 8
  %214 = icmp ne %"class.v8::internal::compiler::UseInterval"* %211, null
  %215 = getelementptr inbounds %"class.v8::internal::compiler::LiveRangeBundle", %"class.v8::internal::compiler::LiveRangeBundle"* %148, i64 0, i32 1, i32 0, i32 0, i32 1, i32 0, i32 0
  %216 = icmp ne %"class.std::__1::__tree_end_node"* %213, %215
  %217 = and i1 %214, %216
  br i1 %217, label %218, label %271

218:                                              ; preds = %209, %265
  %219 = phi %"class.v8::internal::compiler::UseInterval"* [ %267, %265 ], [ %211, %209 ]
  %220 = phi %"class.std::__1::__tree_end_node"* [ %266, %265 ], [ %213, %209 ]
  %221 = getelementptr inbounds %"class.std::__1::__tree_end_node", %"class.std::__1::__tree_end_node"* %220, i64 4
  %222 = bitcast %"class.std::__1::__tree_end_node"* %221 to i32*
  %223 = load i32, i32* %222, align 4
  %224 = getelementptr inbounds %"class.v8::internal::compiler::UseInterval", %"class.v8::internal::compiler::UseInterval"* %219, i64 0, i32 0, i32 0
  %225 = load i32, i32* %224, align 8
  %226 = icmp sgt i32 %223, %225
  br i1 %226, label %255, label %227

227:                                              ; preds = %218
  %228 = getelementptr inbounds %"class.std::__1::__tree_end_node", %"class.std::__1::__tree_end_node"* %220, i64 1, i32 0
  %229 = load %"class.std::__1::__tree_node_base"*, %"class.std::__1::__tree_node_base"** %228, align 8
  %230 = icmp eq %"class.std::__1::__tree_node_base"* %229, null
  br i1 %230, label %231, label %239

231:                                              ; preds = %227
  %232 = bitcast %"class.std::__1::__tree_end_node"* %220 to %"class.std::__1::__tree_node_base"*
  %233 = getelementptr inbounds %"class.std::__1::__tree_end_node", %"class.std::__1::__tree_end_node"* %220, i64 2
  %234 = bitcast %"class.std::__1::__tree_end_node"* %233 to %"class.std::__1::__tree_end_node"**
  %235 = load %"class.std::__1::__tree_end_node"*, %"class.std::__1::__tree_end_node"** %234, align 8
  %236 = getelementptr inbounds %"class.std::__1::__tree_end_node", %"class.std::__1::__tree_end_node"* %235, i64 0, i32 0
  %237 = load %"class.std::__1::__tree_node_base"*, %"class.std::__1::__tree_node_base"** %236, align 8
  %238 = icmp eq %"class.std::__1::__tree_node_base"* %237, %232
  br i1 %238, label %265, label %246

239:                                              ; preds = %227, %239
  %240 = phi %"class.std::__1::__tree_node_base"* [ %242, %239 ], [ %229, %227 ]
  %241 = getelementptr inbounds %"class.std::__1::__tree_node_base", %"class.std::__1::__tree_node_base"* %240, i64 0, i32 0, i32 0
  %242 = load %"class.std::__1::__tree_node_base"*, %"class.std::__1::__tree_node_base"** %241, align 8
  %243 = icmp eq %"class.std::__1::__tree_node_base"* %242, null
  br i1 %243, label %244, label %239

244:                                              ; preds = %239
  %245 = getelementptr inbounds %"class.std::__1::__tree_node_base", %"class.std::__1::__tree_node_base"* %240, i64 0, i32 0
  br label %265

246:                                              ; preds = %231, %246
  %247 = phi %"class.std::__1::__tree_end_node"** [ %250, %246 ], [ %234, %231 ]
  %248 = bitcast %"class.std::__1::__tree_end_node"** %247 to %"class.std::__1::__tree_node_base"**
  %249 = load %"class.std::__1::__tree_node_base"*, %"class.std::__1::__tree_node_base"** %248, align 8
  %250 = getelementptr inbounds %"class.std::__1::__tree_node_base", %"class.std::__1::__tree_node_base"* %249, i64 0, i32 2
  %251 = load %"class.std::__1::__tree_end_node"*, %"class.std::__1::__tree_end_node"** %250, align 8
  %252 = getelementptr inbounds %"class.std::__1::__tree_end_node", %"class.std::__1::__tree_end_node"* %251, i64 0, i32 0
  %253 = load %"class.std::__1::__tree_node_base"*, %"class.std::__1::__tree_node_base"** %252, align 8
  %254 = icmp eq %"class.std::__1::__tree_node_base"* %253, %249
  br i1 %254, label %265, label %246

255:                                              ; preds = %218
  %256 = bitcast %"class.std::__1::__tree_end_node"* %220 to %"class.std::__1::__tree_node"*
  %257 = getelementptr inbounds %"class.v8::internal::compiler::UseInterval", %"class.v8::internal::compiler::UseInterval"* %219, i64 0, i32 1, i32 0
  %258 = load i32, i32* %257, align 4
  %259 = getelementptr inbounds %"class.std::__1::__tree_node", %"class.std::__1::__tree_node"* %256, i64 0, i32 1, i32 0
  %260 = load i32, i32* %259, align 4
  %261 = icmp sgt i32 %258, %260
  br i1 %261, label %287, label %262

262:                                              ; preds = %255
  %263 = getelementptr inbounds %"class.v8::internal::compiler::UseInterval", %"class.v8::internal::compiler::UseInterval"* %219, i64 0, i32 2
  %264 = load %"class.v8::internal::compiler::UseInterval"*, %"class.v8::internal::compiler::UseInterval"** %263, align 8
  br label %265

265:                                              ; preds = %246, %262, %244, %231
  %266 = phi %"class.std::__1::__tree_end_node"* [ %220, %262 ], [ %245, %244 ], [ %235, %231 ], [ %251, %246 ]
  %267 = phi %"class.v8::internal::compiler::UseInterval"* [ %264, %262 ], [ %219, %244 ], [ %219, %231 ], [ %219, %246 ]
  %268 = icmp ne %"class.v8::internal::compiler::UseInterval"* %267, null
  %269 = icmp ne %"class.std::__1::__tree_end_node"* %266, %215
  %270 = and i1 %269, %268
  br i1 %270, label %218, label %271

271:                                              ; preds = %265, %209
  %272 = getelementptr inbounds %"class.v8::internal::compiler::LiveRangeBundle", %"class.v8::internal::compiler::LiveRangeBundle"* %148, i64 0, i32 0, i32 0, i32 0
  %273 = call { %"class.std::__1::__tree_end_node"*, i8 } @_ZNSt3__16__treeIPN2v88internal8compiler9LiveRangeENS3_17LiveRangeOrderingENS2_13ZoneAllocatorIS5_EEE25__emplace_unique_key_argsIS5_JRKS5_EEENS_4pairINS_15__tree_iteratorIS5_PNS_11__tree_nodeIS5_PvEElEEbEERKT_DpOT0_(%"class.std::__1::__tree"* %272, %"class.v8::internal::compiler::LiveRange"** nonnull dereferenceable(8) %3, %"class.v8::internal::compiler::LiveRange"** nonnull dereferenceable(8) %3) #16
  %274 = load %"class.v8::internal::compiler::LiveRange"*, %"class.v8::internal::compiler::LiveRange"** %3, align 8
  %275 = getelementptr inbounds %"class.v8::internal::compiler::LiveRange", %"class.v8::internal::compiler::LiveRange"* %274, i64 0, i32 10
  store %"class.v8::internal::compiler::LiveRangeBundle"* %148, %"class.v8::internal::compiler::LiveRangeBundle"** %275, align 8
  %276 = getelementptr inbounds %"class.v8::internal::compiler::LiveRange", %"class.v8::internal::compiler::LiveRange"* %274, i64 0, i32 3
  %277 = load %"class.v8::internal::compiler::UseInterval"*, %"class.v8::internal::compiler::UseInterval"** %276, align 8
  call void @_ZN2v88internal8compiler15LiveRangeBundle10InsertUsesEPNS1_11UseIntervalE(%"class.v8::internal::compiler::LiveRangeBundle"* %148, %"class.v8::internal::compiler::UseInterval"* %277) #16
  call void @llvm.lifetime.end.p0i8(i64 8, i8* nonnull %32)
  %278 = load %"class.v8::internal::compiler::TopTierRegisterAllocationData"*, %"class.v8::internal::compiler::TopTierRegisterAllocationData"** %4, align 8
  %279 = getelementptr inbounds %"class.v8::internal::compiler::TopTierRegisterAllocationData", %"class.v8::internal::compiler::TopTierRegisterAllocationData"* %278, i64 0, i32 23, i32 0
  %280 = load i32, i32* %279, align 4
  %281 = and i32 %280, 1
  %282 = icmp eq i32 %281, 0
  br i1 %282, label %295, label %283

283:                                              ; preds = %271
  %284 = load i32, i32* %73, align 8
  %285 = getelementptr inbounds %"class.v8::internal::compiler::LiveRangeBundle", %"class.v8::internal::compiler::LiveRangeBundle"* %148, i64 0, i32 2
  %286 = load i32, i32* %285, align 8
  call void (i8*, ...) @_ZN2v88internal6PrintFEPKcz(i8* getelementptr inbounds ([23 x i8], [23 x i8]* @.str.46, i64 0, i64 0), i32 %284, i32 %151, i32 %286) #16
  br label %295

287:                                              ; preds = %255
  call void @llvm.lifetime.end.p0i8(i64 8, i8* nonnull %32)
  %288 = getelementptr inbounds %"class.v8::internal::compiler::UseInterval", %"class.v8::internal::compiler::UseInterval"* %211, i64 0, i32 0, i32 0
  %289 = load i32, i32* %288, align 8
  %290 = load %"class.v8::internal::compiler::UseInterval"*, %"class.v8::internal::compiler::UseInterval"** %143, align 8
  %291 = getelementptr inbounds %"class.v8::internal::compiler::UseInterval", %"class.v8::internal::compiler::UseInterval"* %290, i64 0, i32 0, i32 0
  %292 = load i32, i32* %291, align 8
  %293 = icmp sgt i32 %289, %292
  %294 = select i1 %293, i8 1, i8 %149
  br label %295

295:                                              ; preds = %271, %187, %287, %197, %193, %283
  %296 = phi i8 [ %149, %283 ], [ %149, %271 ], [ %149, %193 ], [ %149, %187 ], [ %206, %197 ], [ %294, %287 ]
  %297 = phi %"class.v8::internal::compiler::LiveRangeBundle"* [ %148, %283 ], [ %148, %271 ], [ %185, %193 ], [ %185, %187 ], [ %148, %197 ], [ %148, %287 ]
  %298 = getelementptr inbounds i32, i32* %150, i64 1
  %299 = icmp eq i32* %298, %140
  br i1 %299, label %144, label %147

300:                                              ; preds = %144
  %301 = getelementptr inbounds %"class.v8::internal::compiler::TopLevelLiveRange", %"class.v8::internal::compiler::TopLevelLiveRange"* %75, i64 0, i32 0, i32 5
  %302 = load %"class.v8::internal::compiler::TopLevelLiveRange"*, %"class.v8::internal::compiler::TopLevelLiveRange"** %301, align 8
  %303 = getelementptr inbounds %"class.v8::internal::compiler::TopLevelLiveRange", %"class.v8::internal::compiler::TopLevelLiveRange"* %302, i64 0, i32 0, i32 1
  %304 = load i32, i32* %303, align 4
  %305 = or i32 %304, 536870912
  store i32 %305, i32* %303, align 4
  br label %306

306:                                              ; preds = %136, %144, %300
  %307 = getelementptr inbounds %"class.v8::internal::compiler::PhiInstruction"*, %"class.v8::internal::compiler::PhiInstruction"** %70, i64 1
  %308 = icmp eq %"class.v8::internal::compiler::PhiInstruction"** %307, %61
  br i1 %308, label %63, label %69

309:                                              ; preds = %63
  %310 = trunc i64 %45 to i32
  call void (i8*, ...) @_ZN2v88internal6PrintFEPKcz(i8* getelementptr inbounds ([16 x i8], [16 x i8]* @.str.47, i64 0, i64 0), i32 %310) #16
  br label %311

311:                                              ; preds = %63, %309
  %312 = icmp sgt i64 %45, 0
  br i1 %312, label %313, label %40

313:                                              ; preds = %311
  %314 = load %"class.v8::internal::compiler::TopTierRegisterAllocationData"*, %"class.v8::internal::compiler::TopTierRegisterAllocationData"** %4, align 8
  %315 = getelementptr inbounds %"class.v8::internal::compiler::TopTierRegisterAllocationData", %"class.v8::internal::compiler::TopTierRegisterAllocationData"* %314, i64 0, i32 3
  %316 = load %"class.v8::internal::compiler::InstructionSequence"*, %"class.v8::internal::compiler::InstructionSequence"** %315, align 8
  %317 = getelementptr inbounds %"class.v8::internal::compiler::InstructionSequence", %"class.v8::internal::compiler::InstructionSequence"* %316, i64 0, i32 2
  %318 = bitcast %"class.v8::internal::ZoneVector.1170"** %317 to %"class.std::__1::vector.1171"**
  %319 = load %"class.std::__1::vector.1171"*, %"class.std::__1::vector.1171"** %318, align 8
  %320 = getelementptr inbounds %"class.std::__1::vector.1171", %"class.std::__1::vector.1171"* %319, i64 0, i32 0, i32 1
  %321 = bitcast %"class.v8::internal::compiler::InstructionBlock"*** %320 to i64*
  %322 = load i64, i64* %321, align 8
  %323 = bitcast %"class.std::__1::vector.1171"* %319 to i64*
  %324 = load i64, i64* %323, align 8
  %325 = add nsw i64 %45, -1
  %326 = sub i64 %322, %324
  %327 = ashr exact i64 %326, 3
  %328 = icmp ugt i64 %327, %325
  br i1 %328, label %44, label %41
}

; Function Attrs: nounwind ssp uwtable
define hidden zeroext i1 @_ZN2v88internal8compiler15LiveRangeBundle11TryAddRangeEPNS1_9LiveRangeE(%"class.v8::internal::compiler::LiveRangeBundle"*, %"class.v8::internal::compiler::LiveRange"*) local_unnamed_addr #0 align 2 {
  %3 = alloca %"class.v8::internal::compiler::LiveRange"*, align 8
  store %"class.v8::internal::compiler::LiveRange"* %1, %"class.v8::internal::compiler::LiveRange"** %3, align 8
  %4 = getelementptr inbounds %"class.v8::internal::compiler::LiveRange", %"class.v8::internal::compiler::LiveRange"* %1, i64 0, i32 3
  %5 = load %"class.v8::internal::compiler::UseInterval"*, %"class.v8::internal::compiler::UseInterval"** %4, align 8
  %6 = getelementptr inbounds %"class.v8::internal::compiler::LiveRangeBundle", %"class.v8::internal::compiler::LiveRangeBundle"* %0, i64 0, i32 1, i32 0, i32 0, i32 0
  %7 = load %"class.std::__1::__tree_end_node"*, %"class.std::__1::__tree_end_node"** %6, align 8
  %8 = icmp ne %"class.v8::internal::compiler::UseInterval"* %5, null
  %9 = getelementptr inbounds %"class.v8::internal::compiler::LiveRangeBundle", %"class.v8::internal::compiler::LiveRangeBundle"* %0, i64 0, i32 1, i32 0, i32 0, i32 1, i32 0, i32 0
  %10 = icmp ne %"class.std::__1::__tree_end_node"* %7, %9
  %11 = and i1 %8, %10
  br i1 %11, label %12, label %65

12:                                               ; preds = %2, %59
  %13 = phi %"class.v8::internal::compiler::UseInterval"* [ %61, %59 ], [ %5, %2 ]
  %14 = phi %"class.std::__1::__tree_end_node"* [ %60, %59 ], [ %7, %2 ]
  %15 = getelementptr inbounds %"class.std::__1::__tree_end_node", %"class.std::__1::__tree_end_node"* %14, i64 4
  %16 = bitcast %"class.std::__1::__tree_end_node"* %15 to i32*
  %17 = load i32, i32* %16, align 4
  %18 = getelementptr inbounds %"class.v8::internal::compiler::UseInterval", %"class.v8::internal::compiler::UseInterval"* %13, i64 0, i32 0, i32 0
  %19 = load i32, i32* %18, align 8
  %20 = icmp sgt i32 %17, %19
  br i1 %20, label %49, label %21

21:                                               ; preds = %12
  %22 = getelementptr inbounds %"class.std::__1::__tree_end_node", %"class.std::__1::__tree_end_node"* %14, i64 1, i32 0
  %23 = load %"class.std::__1::__tree_node_base"*, %"class.std::__1::__tree_node_base"** %22, align 8
  %24 = icmp eq %"class.std::__1::__tree_node_base"* %23, null
  br i1 %24, label %25, label %33

25:                                               ; preds = %21
  %26 = bitcast %"class.std::__1::__tree_end_node"* %14 to %"class.std::__1::__tree_node_base"*
  %27 = getelementptr inbounds %"class.std::__1::__tree_end_node", %"class.std::__1::__tree_end_node"* %14, i64 2
  %28 = bitcast %"class.std::__1::__tree_end_node"* %27 to %"class.std::__1::__tree_end_node"**
  %29 = load %"class.std::__1::__tree_end_node"*, %"class.std::__1::__tree_end_node"** %28, align 8
  %30 = getelementptr inbounds %"class.std::__1::__tree_end_node", %"class.std::__1::__tree_end_node"* %29, i64 0, i32 0
  %31 = load %"class.std::__1::__tree_node_base"*, %"class.std::__1::__tree_node_base"** %30, align 8
  %32 = icmp eq %"class.std::__1::__tree_node_base"* %31, %26
  br i1 %32, label %59, label %40

33:                                               ; preds = %21, %33
  %34 = phi %"class.std::__1::__tree_node_base"* [ %36, %33 ], [ %23, %21 ]
  %35 = getelementptr inbounds %"class.std::__1::__tree_node_base", %"class.std::__1::__tree_node_base"* %34, i64 0, i32 0, i32 0
  %36 = load %"class.std::__1::__tree_node_base"*, %"class.std::__1::__tree_node_base"** %35, align 8
  %37 = icmp eq %"class.std::__1::__tree_node_base"* %36, null
  br i1 %37, label %38, label %33

38:                                               ; preds = %33
  %39 = getelementptr inbounds %"class.std::__1::__tree_node_base", %"class.std::__1::__tree_node_base"* %34, i64 0, i32 0
  br label %59

40:                                               ; preds = %25, %40
  %41 = phi %"class.std::__1::__tree_end_node"** [ %44, %40 ], [ %28, %25 ]
  %42 = bitcast %"class.std::__1::__tree_end_node"** %41 to %"class.std::__1::__tree_node_base"**
  %43 = load %"class.std::__1::__tree_node_base"*, %"class.std::__1::__tree_node_base"** %42, align 8
  %44 = getelementptr inbounds %"class.std::__1::__tree_node_base", %"class.std::__1::__tree_node_base"* %43, i64 0, i32 2
  %45 = load %"class.std::__1::__tree_end_node"*, %"class.std::__1::__tree_end_node"** %44, align 8
  %46 = getelementptr inbounds %"class.std::__1::__tree_end_node", %"class.std::__1::__tree_end_node"* %45, i64 0, i32 0
  %47 = load %"class.std::__1::__tree_node_base"*, %"class.std::__1::__tree_node_base"** %46, align 8
  %48 = icmp eq %"class.std::__1::__tree_node_base"* %47, %43
  br i1 %48, label %59, label %40

49:                                               ; preds = %12
  %50 = bitcast %"class.std::__1::__tree_end_node"* %14 to %"class.std::__1::__tree_node"*
  %51 = getelementptr inbounds %"class.v8::internal::compiler::UseInterval", %"class.v8::internal::compiler::UseInterval"* %13, i64 0, i32 1, i32 0
  %52 = load i32, i32* %51, align 4
  %53 = getelementptr inbounds %"class.std::__1::__tree_node", %"class.std::__1::__tree_node"* %50, i64 0, i32 1, i32 0
  %54 = load i32, i32* %53, align 4
  %55 = icmp sgt i32 %52, %54
  br i1 %55, label %72, label %56

56:                                               ; preds = %49
  %57 = getelementptr inbounds %"class.v8::internal::compiler::UseInterval", %"class.v8::internal::compiler::UseInterval"* %13, i64 0, i32 2
  %58 = load %"class.v8::internal::compiler::UseInterval"*, %"class.v8::internal::compiler::UseInterval"** %57, align 8
  br label %59

59:                                               ; preds = %40, %56, %38, %25
  %60 = phi %"class.std::__1::__tree_end_node"* [ %14, %56 ], [ %39, %38 ], [ %29, %25 ], [ %45, %40 ]
  %61 = phi %"class.v8::internal::compiler::UseInterval"* [ %58, %56 ], [ %13, %38 ], [ %13, %25 ], [ %13, %40 ]
  %62 = icmp ne %"class.v8::internal::compiler::UseInterval"* %61, null
  %63 = icmp ne %"class.std::__1::__tree_end_node"* %60, %9
  %64 = and i1 %63, %62
  br i1 %64, label %12, label %65

65:                                               ; preds = %59, %2
  %66 = getelementptr inbounds %"class.v8::internal::compiler::LiveRangeBundle", %"class.v8::internal::compiler::LiveRangeBundle"* %0, i64 0, i32 0, i32 0, i32 0
  %67 = call { %"class.std::__1::__tree_end_node"*, i8 } @_ZNSt3__16__treeIPN2v88internal8compiler9LiveRangeENS3_17LiveRangeOrderingENS2_13ZoneAllocatorIS5_EEE25__emplace_unique_key_argsIS5_JRKS5_EEENS_4pairINS_15__tree_iteratorIS5_PNS_11__tree_nodeIS5_PvEElEEbEERKT_DpOT0_(%"class.std::__1::__tree"* %66, %"class.v8::internal::compiler::LiveRange"** nonnull dereferenceable(8) %3, %"class.v8::internal::compiler::LiveRange"** nonnull dereferenceable(8) %3) #16
  %68 = load %"class.v8::internal::compiler::LiveRange"*, %"class.v8::internal::compiler::LiveRange"** %3, align 8
  %69 = getelementptr inbounds %"class.v8::internal::compiler::LiveRange", %"class.v8::internal::compiler::LiveRange"* %68, i64 0, i32 10
  store %"class.v8::internal::compiler::LiveRangeBundle"* %0, %"class.v8::internal::compiler::LiveRangeBundle"** %69, align 8
  %70 = getelementptr inbounds %"class.v8::internal::compiler::LiveRange", %"class.v8::internal::compiler::LiveRange"* %68, i64 0, i32 3
  %71 = load %"class.v8::internal::compiler::UseInterval"*, %"class.v8::internal::compiler::UseInterval"** %70, align 8
  call void @_ZN2v88internal8compiler15LiveRangeBundle10InsertUsesEPNS1_11UseIntervalE(%"class.v8::internal::compiler::LiveRangeBundle"* %0, %"class.v8::internal::compiler::UseInterval"* %71)
  br label %72

72:                                               ; preds = %49, %65
  %73 = phi i1 [ true, %65 ], [ false, %49 ]
  ret i1 %73
}

; Function Attrs: nounwind ssp uwtable
define hidden %"class.v8::internal::compiler::LiveRangeBundle"* @_ZN2v88internal8compiler15LiveRangeBundle8TryMergeEPS2_S3_b(%"class.v8::internal::compiler::LiveRangeBundle"*, %"class.v8::internal::compiler::LiveRangeBundle"*, i1 zeroext) local_unnamed_addr #0 align 2 {
  %4 = ptrtoint %"class.v8::internal::compiler::LiveRangeBundle"* %0 to i64
  %5 = ptrtoint %"class.v8::internal::compiler::LiveRangeBundle"* %1 to i64
  %6 = icmp eq %"class.v8::internal::compiler::LiveRangeBundle"* %1, %0
  br i1 %6, label %323, label %7

7:                                                ; preds = %3
  %8 = getelementptr inbounds %"class.v8::internal::compiler::LiveRangeBundle", %"class.v8::internal::compiler::LiveRangeBundle"* %0, i64 0, i32 1, i32 0, i32 0, i32 0
  %9 = load %"class.std::__1::__tree_end_node"*, %"class.std::__1::__tree_end_node"** %8, align 8
  %10 = getelementptr inbounds %"class.v8::internal::compiler::LiveRangeBundle", %"class.v8::internal::compiler::LiveRangeBundle"* %1, i64 0, i32 1, i32 0, i32 0, i32 0
  %11 = load %"class.std::__1::__tree_end_node"*, %"class.std::__1::__tree_end_node"** %10, align 8
  %12 = getelementptr inbounds %"class.v8::internal::compiler::LiveRangeBundle", %"class.v8::internal::compiler::LiveRangeBundle"* %0, i64 0, i32 1, i32 0, i32 0, i32 1, i32 0, i32 0
  %13 = icmp ne %"class.std::__1::__tree_end_node"* %9, %12
  %14 = getelementptr inbounds %"class.v8::internal::compiler::LiveRangeBundle", %"class.v8::internal::compiler::LiveRangeBundle"* %1, i64 0, i32 1, i32 0, i32 0, i32 1, i32 0, i32 0
  %15 = icmp ne %"class.std::__1::__tree_end_node"* %11, %14
  %16 = and i1 %13, %15
  br i1 %16, label %17, label %99

17:                                               ; preds = %7, %93
  %18 = phi %"class.std::__1::__tree_end_node"* [ %95, %93 ], [ %11, %7 ]
  %19 = phi %"class.std::__1::__tree_end_node"* [ %94, %93 ], [ %9, %7 ]
  %20 = bitcast %"class.std::__1::__tree_end_node"* %19 to %"class.std::__1::__tree_node"*
  %21 = getelementptr inbounds %"class.std::__1::__tree_node", %"class.std::__1::__tree_node"* %20, i64 0, i32 1, i32 0
  %22 = load i32, i32* %21, align 4
  %23 = getelementptr inbounds %"class.std::__1::__tree_end_node", %"class.std::__1::__tree_end_node"* %18, i64 4
  %24 = bitcast %"class.std::__1::__tree_end_node"* %23 to i32*
  %25 = load i32, i32* %24, align 4
  %26 = icmp slt i32 %22, %25
  br i1 %26, label %55, label %27

27:                                               ; preds = %17
  %28 = getelementptr inbounds %"class.std::__1::__tree_end_node", %"class.std::__1::__tree_end_node"* %18, i64 1, i32 0
  %29 = load %"class.std::__1::__tree_node_base"*, %"class.std::__1::__tree_node_base"** %28, align 8
  %30 = icmp eq %"class.std::__1::__tree_node_base"* %29, null
  br i1 %30, label %31, label %39

31:                                               ; preds = %27
  %32 = bitcast %"class.std::__1::__tree_end_node"* %18 to %"class.std::__1::__tree_node_base"*
  %33 = getelementptr inbounds %"class.std::__1::__tree_end_node", %"class.std::__1::__tree_end_node"* %18, i64 2
  %34 = bitcast %"class.std::__1::__tree_end_node"* %33 to %"class.std::__1::__tree_end_node"**
  %35 = load %"class.std::__1::__tree_end_node"*, %"class.std::__1::__tree_end_node"** %34, align 8
  %36 = getelementptr inbounds %"class.std::__1::__tree_end_node", %"class.std::__1::__tree_end_node"* %35, i64 0, i32 0
  %37 = load %"class.std::__1::__tree_node_base"*, %"class.std::__1::__tree_node_base"** %36, align 8
  %38 = icmp eq %"class.std::__1::__tree_node_base"* %37, %32
  br i1 %38, label %93, label %46

39:                                               ; preds = %27, %39
  %40 = phi %"class.std::__1::__tree_node_base"* [ %42, %39 ], [ %29, %27 ]
  %41 = getelementptr inbounds %"class.std::__1::__tree_node_base", %"class.std::__1::__tree_node_base"* %40, i64 0, i32 0, i32 0
  %42 = load %"class.std::__1::__tree_node_base"*, %"class.std::__1::__tree_node_base"** %41, align 8
  %43 = icmp eq %"class.std::__1::__tree_node_base"* %42, null
  br i1 %43, label %44, label %39

44:                                               ; preds = %39
  %45 = getelementptr inbounds %"class.std::__1::__tree_node_base", %"class.std::__1::__tree_node_base"* %40, i64 0, i32 0
  br label %93

46:                                               ; preds = %31, %46
  %47 = phi %"class.std::__1::__tree_end_node"** [ %50, %46 ], [ %34, %31 ]
  %48 = bitcast %"class.std::__1::__tree_end_node"** %47 to %"class.std::__1::__tree_node_base"**
  %49 = load %"class.std::__1::__tree_node_base"*, %"class.std::__1::__tree_node_base"** %48, align 8
  %50 = getelementptr inbounds %"class.std::__1::__tree_node_base", %"class.std::__1::__tree_node_base"* %49, i64 0, i32 2
  %51 = load %"class.std::__1::__tree_end_node"*, %"class.std::__1::__tree_end_node"** %50, align 8
  %52 = getelementptr inbounds %"class.std::__1::__tree_end_node", %"class.std::__1::__tree_end_node"* %51, i64 0, i32 0
  %53 = load %"class.std::__1::__tree_node_base"*, %"class.std::__1::__tree_node_base"** %52, align 8
  %54 = icmp eq %"class.std::__1::__tree_node_base"* %53, %49
  br i1 %54, label %93, label %46

55:                                               ; preds = %17
  %56 = bitcast %"class.std::__1::__tree_end_node"* %18 to %"class.std::__1::__tree_node"*
  %57 = getelementptr inbounds %"class.std::__1::__tree_node", %"class.std::__1::__tree_node"* %56, i64 0, i32 1, i32 0
  %58 = load i32, i32* %57, align 4
  %59 = getelementptr inbounds %"class.std::__1::__tree_end_node", %"class.std::__1::__tree_end_node"* %19, i64 4
  %60 = bitcast %"class.std::__1::__tree_end_node"* %59 to i32*
  %61 = load i32, i32* %60, align 4
  %62 = icmp slt i32 %58, %61
  br i1 %62, label %91, label %63

63:                                               ; preds = %55
  %64 = getelementptr inbounds %"class.std::__1::__tree_end_node", %"class.std::__1::__tree_end_node"* %19, i64 1, i32 0
  %65 = load %"class.std::__1::__tree_node_base"*, %"class.std::__1::__tree_node_base"** %64, align 8
  %66 = icmp eq %"class.std::__1::__tree_node_base"* %65, null
  br i1 %66, label %67, label %75

67:                                               ; preds = %63
  %68 = bitcast %"class.std::__1::__tree_end_node"* %19 to %"class.std::__1::__tree_node_base"*
  %69 = getelementptr inbounds %"class.std::__1::__tree_end_node", %"class.std::__1::__tree_end_node"* %19, i64 2
  %70 = bitcast %"class.std::__1::__tree_end_node"* %69 to %"class.std::__1::__tree_end_node"**
  %71 = load %"class.std::__1::__tree_end_node"*, %"class.std::__1::__tree_end_node"** %70, align 8
  %72 = getelementptr inbounds %"class.std::__1::__tree_end_node", %"class.std::__1::__tree_end_node"* %71, i64 0, i32 0
  %73 = load %"class.std::__1::__tree_node_base"*, %"class.std::__1::__tree_node_base"** %72, align 8
  %74 = icmp eq %"class.std::__1::__tree_node_base"* %73, %68
  br i1 %74, label %93, label %82

75:                                               ; preds = %63, %75
  %76 = phi %"class.std::__1::__tree_node_base"* [ %78, %75 ], [ %65, %63 ]
  %77 = getelementptr inbounds %"class.std::__1::__tree_node_base", %"class.std::__1::__tree_node_base"* %76, i64 0, i32 0, i32 0
  %78 = load %"class.std::__1::__tree_node_base"*, %"class.std::__1::__tree_node_base"** %77, align 8
  %79 = icmp eq %"class.std::__1::__tree_node_base"* %78, null
  br i1 %79, label %80, label %75

80:                                               ; preds = %75
  %81 = getelementptr inbounds %"class.std::__1::__tree_node_base", %"class.std::__1::__tree_node_base"* %76, i64 0, i32 0
  br label %93

82:                                               ; preds = %67, %82
  %83 = phi %"class.std::__1::__tree_end_node"** [ %86, %82 ], [ %70, %67 ]
  %84 = bitcast %"class.std::__1::__tree_end_node"** %83 to %"class.std::__1::__tree_node_base"**
  %85 = load %"class.std::__1::__tree_node_base"*, %"class.std::__1::__tree_node_base"** %84, align 8
  %86 = getelementptr inbounds %"class.std::__1::__tree_node_base", %"class.std::__1::__tree_node_base"* %85, i64 0, i32 2
  %87 = load %"class.std::__1::__tree_end_node"*, %"class.std::__1::__tree_end_node"** %86, align 8
  %88 = getelementptr inbounds %"class.std::__1::__tree_end_node", %"class.std::__1::__tree_end_node"* %87, i64 0, i32 0
  %89 = load %"class.std::__1::__tree_node_base"*, %"class.std::__1::__tree_node_base"** %88, align 8
  %90 = icmp eq %"class.std::__1::__tree_node_base"* %89, %85
  br i1 %90, label %93, label %82

91:                                               ; preds = %55
  br i1 %2, label %92, label %323

92:                                               ; preds = %91
  tail call void (i8*, ...) @_ZN2v88internal6PrintFEPKcz(i8* getelementptr inbounds ([22 x i8], [22 x i8]* @.str.48, i64 0, i64 0), i32 %22, i32 %61, i32 %58, i32 %25) #16
  br label %323

93:                                               ; preds = %46, %82, %80, %67, %44, %31
  %94 = phi %"class.std::__1::__tree_end_node"* [ %19, %31 ], [ %19, %44 ], [ %81, %80 ], [ %71, %67 ], [ %87, %82 ], [ %19, %46 ]
  %95 = phi %"class.std::__1::__tree_end_node"* [ %35, %31 ], [ %45, %44 ], [ %18, %80 ], [ %18, %67 ], [ %18, %82 ], [ %51, %46 ]
  %96 = icmp ne %"class.std::__1::__tree_end_node"* %94, %12
  %97 = icmp ne %"class.std::__1::__tree_end_node"* %95, %14
  %98 = and i1 %96, %97
  br i1 %98, label %17, label %99

99:                                               ; preds = %93, %7
  %100 = getelementptr inbounds %"class.v8::internal::compiler::LiveRangeBundle", %"class.v8::internal::compiler::LiveRangeBundle"* %0, i64 0, i32 1, i32 0, i32 0, i32 2, i32 0, i32 0
  %101 = load i64, i64* %100, align 8
  %102 = getelementptr inbounds %"class.v8::internal::compiler::LiveRangeBundle", %"class.v8::internal::compiler::LiveRangeBundle"* %1, i64 0, i32 1, i32 0, i32 0, i32 2, i32 0, i32 0
  %103 = load i64, i64* %102, align 8
  %104 = icmp ult i64 %101, %103
  %105 = select i1 %104, i64 %4, i64 %5
  %106 = select i1 %104, i64 %5, i64 %4
  %107 = inttoptr i64 %105 to %"class.v8::internal::compiler::LiveRangeBundle"*
  %108 = getelementptr inbounds %"class.v8::internal::compiler::LiveRangeBundle", %"class.v8::internal::compiler::LiveRangeBundle"* %107, i64 0, i32 0, i32 0, i32 0, i32 0
  %109 = load %"class.std::__1::__tree_end_node"*, %"class.std::__1::__tree_end_node"** %108, align 8
  %110 = getelementptr inbounds %"class.v8::internal::compiler::LiveRangeBundle", %"class.v8::internal::compiler::LiveRangeBundle"* %107, i64 0, i32 0, i32 0, i32 0, i32 1, i32 0, i32 0
  %111 = icmp eq %"class.std::__1::__tree_end_node"* %109, %110
  %112 = inttoptr i64 %106 to %"class.v8::internal::compiler::LiveRangeBundle"*
  br i1 %111, label %115, label %284

113:                                              ; preds = %320
  %114 = load %"class.std::__1::__tree_end_node"*, %"class.std::__1::__tree_end_node"** %108, align 8
  br label %115

115:                                              ; preds = %99, %113
  %116 = phi %"class.std::__1::__tree_end_node"* [ %114, %113 ], [ %109, %99 ]
  %117 = getelementptr inbounds %"class.v8::internal::compiler::LiveRangeBundle", %"class.v8::internal::compiler::LiveRangeBundle"* %112, i64 0, i32 0, i32 0, i32 0, i32 1, i32 0, i32 0
  %118 = icmp eq %"class.std::__1::__tree_end_node"* %116, %110
  br i1 %118, label %278, label %119

119:                                              ; preds = %115
  %120 = ptrtoint %"class.std::__1::__tree_end_node"* %117 to i64
  %121 = getelementptr inbounds %"class.v8::internal::compiler::LiveRangeBundle", %"class.v8::internal::compiler::LiveRangeBundle"* %112, i64 0, i32 0, i32 0, i32 0, i32 0
  %122 = getelementptr inbounds %"class.std::__1::__tree_end_node", %"class.std::__1::__tree_end_node"* %117, i64 0, i32 0
  %123 = getelementptr inbounds %"class.v8::internal::compiler::LiveRangeBundle", %"class.v8::internal::compiler::LiveRangeBundle"* %112, i64 0, i32 0, i32 0, i32 0, i32 1, i32 0, i32 0, i32 0
  %124 = getelementptr inbounds %"class.v8::internal::compiler::LiveRangeBundle", %"class.v8::internal::compiler::LiveRangeBundle"* %112, i64 0, i32 0, i32 0, i32 0, i32 1, i32 1, i32 0, i32 0
  %125 = inttoptr i64 %106 to i64*
  %126 = getelementptr inbounds %"class.v8::internal::compiler::LiveRangeBundle", %"class.v8::internal::compiler::LiveRangeBundle"* %112, i64 0, i32 0, i32 0, i32 0, i32 2, i32 0, i32 0
  br label %127

127:                                              ; preds = %119, %275
  %128 = phi %"class.std::__1::__tree_end_node"* [ %276, %275 ], [ %116, %119 ]
  %129 = getelementptr inbounds %"class.std::__1::__tree_end_node", %"class.std::__1::__tree_end_node"* %128, i64 4
  %130 = bitcast %"class.std::__1::__tree_end_node"* %129 to %"class.v8::internal::compiler::LiveRange"**
  %131 = load %"class.std::__1::__tree_end_node"*, %"class.std::__1::__tree_end_node"** %121, align 8
  %132 = icmp eq %"class.std::__1::__tree_end_node"* %131, %117
  %133 = load %"class.std::__1::__tree_node_base"*, %"class.std::__1::__tree_node_base"** %122, align 8
  br i1 %132, label %168, label %134

134:                                              ; preds = %127
  %135 = icmp eq %"class.std::__1::__tree_node_base"* %133, null
  br i1 %135, label %141, label %136

136:                                              ; preds = %134, %136
  %137 = phi %"class.std::__1::__tree_node_base"* [ %139, %136 ], [ %133, %134 ]
  %138 = getelementptr inbounds %"class.std::__1::__tree_node_base", %"class.std::__1::__tree_node_base"* %137, i64 0, i32 1
  %139 = load %"class.std::__1::__tree_node_base"*, %"class.std::__1::__tree_node_base"** %138, align 8
  %140 = icmp eq %"class.std::__1::__tree_node_base"* %139, null
  br i1 %140, label %152, label %136

141:                                              ; preds = %134, %141
  %142 = phi %"class.std::__1::__tree_end_node"* [ %146, %141 ], [ %117, %134 ]
  %143 = bitcast %"class.std::__1::__tree_end_node"* %142 to %"class.std::__1::__tree_node_base"*
  %144 = getelementptr inbounds %"class.std::__1::__tree_end_node", %"class.std::__1::__tree_end_node"* %142, i64 2
  %145 = bitcast %"class.std::__1::__tree_end_node"* %144 to %"class.std::__1::__tree_end_node"**
  %146 = load %"class.std::__1::__tree_end_node"*, %"class.std::__1::__tree_end_node"** %145, align 8
  %147 = getelementptr inbounds %"class.std::__1::__tree_end_node", %"class.std::__1::__tree_end_node"* %146, i64 0, i32 0
  %148 = load %"class.std::__1::__tree_node_base"*, %"class.std::__1::__tree_node_base"** %147, align 8
  %149 = icmp eq %"class.std::__1::__tree_node_base"* %148, %143
  br i1 %149, label %141, label %150

150:                                              ; preds = %141
  %151 = bitcast %"class.std::__1::__tree_end_node"* %146 to %"class.std::__1::__tree_node_base"*
  br label %152

152:                                              ; preds = %136, %150
  %153 = phi %"class.std::__1::__tree_node_base"* [ %151, %150 ], [ %137, %136 ]
  %154 = ptrtoint %"class.std::__1::__tree_node_base"* %153 to i64
  %155 = getelementptr inbounds %"class.std::__1::__tree_node_base", %"class.std::__1::__tree_node_base"* %153, i64 1
  %156 = bitcast %"class.std::__1::__tree_node_base"* %155 to %"class.v8::internal::compiler::LiveRange"**
  %157 = load %"class.v8::internal::compiler::LiveRange"*, %"class.v8::internal::compiler::LiveRange"** %156, align 8
  %158 = load %"class.v8::internal::compiler::LiveRange"*, %"class.v8::internal::compiler::LiveRange"** %130, align 8
  %159 = getelementptr inbounds %"class.v8::internal::compiler::LiveRange", %"class.v8::internal::compiler::LiveRange"* %157, i64 0, i32 3
  %160 = load %"class.v8::internal::compiler::UseInterval"*, %"class.v8::internal::compiler::UseInterval"** %159, align 8
  %161 = getelementptr inbounds %"class.v8::internal::compiler::UseInterval", %"class.v8::internal::compiler::UseInterval"* %160, i64 0, i32 0, i32 0
  %162 = load i32, i32* %161, align 8
  %163 = getelementptr inbounds %"class.v8::internal::compiler::LiveRange", %"class.v8::internal::compiler::LiveRange"* %158, i64 0, i32 3
  %164 = load %"class.v8::internal::compiler::UseInterval"*, %"class.v8::internal::compiler::UseInterval"** %163, align 8
  %165 = getelementptr inbounds %"class.v8::internal::compiler::UseInterval", %"class.v8::internal::compiler::UseInterval"* %164, i64 0, i32 0, i32 0
  %166 = load i32, i32* %165, align 8
  %167 = icmp slt i32 %162, %166
  br i1 %167, label %168, label %174

168:                                              ; preds = %152, %127
  %169 = phi i64 [ %154, %152 ], [ %120, %127 ]
  %170 = icmp eq %"class.std::__1::__tree_node_base"* %133, null
  br i1 %170, label %206, label %171

171:                                              ; preds = %168
  %172 = inttoptr i64 %169 to %"class.std::__1::__tree_node_base"*
  %173 = getelementptr inbounds %"class.std::__1::__tree_node_base", %"class.std::__1::__tree_node_base"* %172, i64 0, i32 1
  br label %206

174:                                              ; preds = %152
  %175 = icmp eq %"class.std::__1::__tree_node_base"* %133, null
  br i1 %175, label %206, label %176

176:                                              ; preds = %174, %199
  %177 = phi %"class.std::__1::__tree_node_base"* [ %200, %199 ], [ %133, %174 ]
  %178 = phi %"class.std::__1::__tree_node_base"** [ %201, %199 ], [ %123, %174 ]
  %179 = getelementptr inbounds %"class.std::__1::__tree_node_base", %"class.std::__1::__tree_node_base"* %177, i64 1
  %180 = bitcast %"class.std::__1::__tree_node_base"* %179 to %"class.v8::internal::compiler::LiveRange"**
  %181 = load %"class.v8::internal::compiler::LiveRange"*, %"class.v8::internal::compiler::LiveRange"** %180, align 8
  %182 = getelementptr inbounds %"class.v8::internal::compiler::LiveRange", %"class.v8::internal::compiler::LiveRange"* %181, i64 0, i32 3
  %183 = load %"class.v8::internal::compiler::UseInterval"*, %"class.v8::internal::compiler::UseInterval"** %182, align 8
  %184 = getelementptr inbounds %"class.v8::internal::compiler::UseInterval", %"class.v8::internal::compiler::UseInterval"* %183, i64 0, i32 0, i32 0
  %185 = load i32, i32* %184, align 8
  %186 = icmp slt i32 %166, %185
  br i1 %186, label %187, label %193

187:                                              ; preds = %176
  %188 = getelementptr inbounds %"class.std::__1::__tree_node_base", %"class.std::__1::__tree_node_base"* %177, i64 0, i32 0, i32 0
  %189 = load %"class.std::__1::__tree_node_base"*, %"class.std::__1::__tree_node_base"** %188, align 8
  %190 = icmp eq %"class.std::__1::__tree_node_base"* %189, null
  br i1 %190, label %191, label %199

191:                                              ; preds = %187
  %192 = ptrtoint %"class.std::__1::__tree_node_base"* %177 to i64
  br label %206

193:                                              ; preds = %176
  %194 = icmp slt i32 %185, %166
  br i1 %194, label %195, label %204

195:                                              ; preds = %193
  %196 = getelementptr inbounds %"class.std::__1::__tree_node_base", %"class.std::__1::__tree_node_base"* %177, i64 0, i32 1
  %197 = load %"class.std::__1::__tree_node_base"*, %"class.std::__1::__tree_node_base"** %196, align 8
  %198 = icmp eq %"class.std::__1::__tree_node_base"* %197, null
  br i1 %198, label %202, label %199

199:                                              ; preds = %195, %187
  %200 = phi %"class.std::__1::__tree_node_base"* [ %189, %187 ], [ %197, %195 ]
  %201 = phi %"class.std::__1::__tree_node_base"** [ %188, %187 ], [ %196, %195 ]
  br label %176

202:                                              ; preds = %195
  %203 = ptrtoint %"class.std::__1::__tree_node_base"* %177 to i64
  br label %206

204:                                              ; preds = %193
  %205 = ptrtoint %"class.std::__1::__tree_node_base"* %177 to i64
  br label %206

206:                                              ; preds = %174, %168, %171, %191, %202, %204
  %207 = phi i64 [ %169, %171 ], [ %192, %191 ], [ %203, %202 ], [ %205, %204 ], [ %120, %168 ], [ %120, %174 ]
  %208 = phi %"class.std::__1::__tree_node_base"** [ %173, %171 ], [ %188, %191 ], [ %196, %202 ], [ %178, %204 ], [ %122, %168 ], [ %122, %174 ]
  %209 = bitcast %"class.std::__1::__tree_node_base"** %208 to %"class.std::__1::__tree_node.1501"**
  %210 = load %"class.std::__1::__tree_node.1501"*, %"class.std::__1::__tree_node.1501"** %209, align 8
  %211 = icmp eq %"class.std::__1::__tree_node.1501"* %210, null
  br i1 %211, label %212, label %247

212:                                              ; preds = %206
  %213 = load %"class.v8::internal::Zone"*, %"class.v8::internal::Zone"** %124, align 8, !noalias !112
  %214 = getelementptr inbounds %"class.v8::internal::Zone", %"class.v8::internal::Zone"* %213, i64 0, i32 2
  %215 = load i64, i64* %214, align 8, !noalias !112
  %216 = getelementptr inbounds %"class.v8::internal::Zone", %"class.v8::internal::Zone"* %213, i64 0, i32 3
  %217 = load i64, i64* %216, align 8, !noalias !112
  %218 = sub i64 %217, %215
  %219 = icmp ult i64 %218, 40
  br i1 %219, label %220, label %222, !prof !2

220:                                              ; preds = %212
  %221 = tail call i64 @_ZN2v88internal4Zone9NewExpandEm(%"class.v8::internal::Zone"* %213, i64 40) #16, !noalias !112
  br label %224

222:                                              ; preds = %212
  %223 = add i64 %215, 40
  store i64 %223, i64* %214, align 8, !noalias !112
  br label %224

224:                                              ; preds = %222, %220
  %225 = phi i64 [ %221, %220 ], [ %215, %222 ]
  %226 = inttoptr i64 %225 to %"class.std::__1::__tree_node.1501"*
  %227 = getelementptr inbounds %"class.std::__1::__tree_node.1501", %"class.std::__1::__tree_node.1501"* %226, i64 0, i32 1
  %228 = bitcast %"class.std::__1::__tree_end_node"* %129 to i64*
  %229 = load i64, i64* %228, align 8, !noalias !112
  %230 = bitcast %"class.v8::internal::compiler::LiveRange"** %227 to i64*
  store i64 %229, i64* %230, align 8, !noalias !112
  %231 = inttoptr i64 %225 to %"class.std::__1::__tree_node_base"*
  %232 = getelementptr inbounds %"class.std::__1::__tree_node_base", %"class.std::__1::__tree_node_base"* %231, i64 0, i32 2
  %233 = inttoptr i64 %225 to i8*
  tail call void @llvm.memset.p0i8.i64(i8* align 8 %233, i8 0, i64 16, i1 false) #16
  %234 = bitcast %"class.std::__1::__tree_end_node"** %232 to i64*
  store i64 %207, i64* %234, align 8
  store %"class.std::__1::__tree_node_base"* %231, %"class.std::__1::__tree_node_base"** %208, align 8
  %235 = load %"class.std::__1::__tree_end_node"*, %"class.std::__1::__tree_end_node"** %121, align 8
  %236 = getelementptr inbounds %"class.std::__1::__tree_end_node", %"class.std::__1::__tree_end_node"* %235, i64 0, i32 0
  %237 = load %"class.std::__1::__tree_node_base"*, %"class.std::__1::__tree_node_base"** %236, align 8
  %238 = icmp eq %"class.std::__1::__tree_node_base"* %237, null
  br i1 %238, label %242, label %239

239:                                              ; preds = %224
  %240 = ptrtoint %"class.std::__1::__tree_node_base"* %237 to i64
  store i64 %240, i64* %125, align 8
  %241 = load %"class.std::__1::__tree_node_base"*, %"class.std::__1::__tree_node_base"** %208, align 8
  br label %242

242:                                              ; preds = %239, %224
  %243 = phi %"class.std::__1::__tree_node_base"* [ %231, %224 ], [ %241, %239 ]
  %244 = load %"class.std::__1::__tree_node_base"*, %"class.std::__1::__tree_node_base"** %123, align 8
  tail call void @_ZNSt3__127__tree_balance_after_insertIPNS_16__tree_node_baseIPvEEEEvT_S5_(%"class.std::__1::__tree_node_base"* %244, %"class.std::__1::__tree_node_base"* %243) #16
  %245 = load i64, i64* %126, align 8
  %246 = add i64 %245, 1
  store i64 %246, i64* %126, align 8
  br label %247

247:                                              ; preds = %206, %242
  %248 = getelementptr inbounds %"class.std::__1::__tree_end_node", %"class.std::__1::__tree_end_node"* %128, i64 1, i32 0
  %249 = load %"class.std::__1::__tree_node_base"*, %"class.std::__1::__tree_node_base"** %248, align 8
  %250 = icmp eq %"class.std::__1::__tree_node_base"* %249, null
  br i1 %250, label %251, label %259

251:                                              ; preds = %247
  %252 = bitcast %"class.std::__1::__tree_end_node"* %128 to %"class.std::__1::__tree_node_base"*
  %253 = getelementptr inbounds %"class.std::__1::__tree_end_node", %"class.std::__1::__tree_end_node"* %128, i64 2
  %254 = bitcast %"class.std::__1::__tree_end_node"* %253 to %"class.std::__1::__tree_end_node"**
  %255 = load %"class.std::__1::__tree_end_node"*, %"class.std::__1::__tree_end_node"** %254, align 8
  %256 = getelementptr inbounds %"class.std::__1::__tree_end_node", %"class.std::__1::__tree_end_node"* %255, i64 0, i32 0
  %257 = load %"class.std::__1::__tree_node_base"*, %"class.std::__1::__tree_node_base"** %256, align 8
  %258 = icmp eq %"class.std::__1::__tree_node_base"* %257, %252
  br i1 %258, label %275, label %266

259:                                              ; preds = %247, %259
  %260 = phi %"class.std::__1::__tree_node_base"* [ %262, %259 ], [ %249, %247 ]
  %261 = getelementptr inbounds %"class.std::__1::__tree_node_base", %"class.std::__1::__tree_node_base"* %260, i64 0, i32 0, i32 0
  %262 = load %"class.std::__1::__tree_node_base"*, %"class.std::__1::__tree_node_base"** %261, align 8
  %263 = icmp eq %"class.std::__1::__tree_node_base"* %262, null
  br i1 %263, label %264, label %259

264:                                              ; preds = %259
  %265 = getelementptr inbounds %"class.std::__1::__tree_node_base", %"class.std::__1::__tree_node_base"* %260, i64 0, i32 0
  br label %275

266:                                              ; preds = %251, %266
  %267 = phi %"class.std::__1::__tree_end_node"** [ %270, %266 ], [ %254, %251 ]
  %268 = bitcast %"class.std::__1::__tree_end_node"** %267 to %"class.std::__1::__tree_node_base"**
  %269 = load %"class.std::__1::__tree_node_base"*, %"class.std::__1::__tree_node_base"** %268, align 8
  %270 = getelementptr inbounds %"class.std::__1::__tree_node_base", %"class.std::__1::__tree_node_base"* %269, i64 0, i32 2
  %271 = load %"class.std::__1::__tree_end_node"*, %"class.std::__1::__tree_end_node"** %270, align 8
  %272 = getelementptr inbounds %"class.std::__1::__tree_end_node", %"class.std::__1::__tree_end_node"* %271, i64 0, i32 0
  %273 = load %"class.std::__1::__tree_node_base"*, %"class.std::__1::__tree_node_base"** %272, align 8
  %274 = icmp eq %"class.std::__1::__tree_node_base"* %273, %269
  br i1 %274, label %275, label %266

275:                                              ; preds = %266, %264, %251
  %276 = phi %"class.std::__1::__tree_end_node"* [ %265, %264 ], [ %255, %251 ], [ %271, %266 ]
  %277 = icmp eq %"class.std::__1::__tree_end_node"* %276, %110
  br i1 %277, label %278, label %127

278:                                              ; preds = %275, %115
  %279 = getelementptr inbounds %"class.v8::internal::compiler::LiveRangeBundle", %"class.v8::internal::compiler::LiveRangeBundle"* %107, i64 0, i32 0, i32 0, i32 0
  %280 = bitcast %"class.std::__1::__tree_end_node"* %110 to %"class.std::__1::__tree_node.1501"**
  %281 = load %"class.std::__1::__tree_node.1501"*, %"class.std::__1::__tree_node.1501"** %280, align 8
  tail call void @_ZNSt3__16__treeIPN2v88internal8compiler9LiveRangeENS3_17LiveRangeOrderingENS2_13ZoneAllocatorIS5_EEE7destroyEPNS_11__tree_nodeIS5_PvEE(%"class.std::__1::__tree"* %279, %"class.std::__1::__tree_node.1501"* %281) #16
  %282 = getelementptr inbounds %"class.v8::internal::compiler::LiveRangeBundle", %"class.v8::internal::compiler::LiveRangeBundle"* %107, i64 0, i32 0, i32 0, i32 0, i32 2, i32 0, i32 0
  store i64 0, i64* %282, align 8
  store %"class.std::__1::__tree_end_node"* %110, %"class.std::__1::__tree_end_node"** %108, align 8
  %283 = getelementptr inbounds %"class.std::__1::__tree_end_node", %"class.std::__1::__tree_end_node"* %110, i64 0, i32 0
  store %"class.std::__1::__tree_node_base"* null, %"class.std::__1::__tree_node_base"** %283, align 8
  br label %323

284:                                              ; preds = %99, %320
  %285 = phi %"class.std::__1::__tree_end_node"* [ %321, %320 ], [ %109, %99 ]
  %286 = getelementptr inbounds %"class.std::__1::__tree_end_node", %"class.std::__1::__tree_end_node"* %285, i64 4
  %287 = bitcast %"class.std::__1::__tree_end_node"* %286 to %"class.v8::internal::compiler::LiveRange"**
  %288 = load %"class.v8::internal::compiler::LiveRange"*, %"class.v8::internal::compiler::LiveRange"** %287, align 8
  %289 = getelementptr inbounds %"class.v8::internal::compiler::LiveRange", %"class.v8::internal::compiler::LiveRange"* %288, i64 0, i32 10
  store %"class.v8::internal::compiler::LiveRangeBundle"* %112, %"class.v8::internal::compiler::LiveRangeBundle"** %289, align 8
  %290 = load %"class.v8::internal::compiler::LiveRange"*, %"class.v8::internal::compiler::LiveRange"** %287, align 8
  %291 = getelementptr inbounds %"class.v8::internal::compiler::LiveRange", %"class.v8::internal::compiler::LiveRange"* %290, i64 0, i32 3
  %292 = load %"class.v8::internal::compiler::UseInterval"*, %"class.v8::internal::compiler::UseInterval"** %291, align 8
  tail call void @_ZN2v88internal8compiler15LiveRangeBundle10InsertUsesEPNS1_11UseIntervalE(%"class.v8::internal::compiler::LiveRangeBundle"* %112, %"class.v8::internal::compiler::UseInterval"* %292)
  %293 = getelementptr inbounds %"class.std::__1::__tree_end_node", %"class.std::__1::__tree_end_node"* %285, i64 1, i32 0
  %294 = load %"class.std::__1::__tree_node_base"*, %"class.std::__1::__tree_node_base"** %293, align 8
  %295 = icmp eq %"class.std::__1::__tree_node_base"* %294, null
  br i1 %295, label %296, label %304

296:                                              ; preds = %284
  %297 = bitcast %"class.std::__1::__tree_end_node"* %285 to %"class.std::__1::__tree_node_base"*
  %298 = getelementptr inbounds %"class.std::__1::__tree_end_node", %"class.std::__1::__tree_end_node"* %285, i64 2
  %299 = bitcast %"class.std::__1::__tree_end_node"* %298 to %"class.std::__1::__tree_end_node"**
  %300 = load %"class.std::__1::__tree_end_node"*, %"class.std::__1::__tree_end_node"** %299, align 8
  %301 = getelementptr inbounds %"class.std::__1::__tree_end_node", %"class.std::__1::__tree_end_node"* %300, i64 0, i32 0
  %302 = load %"class.std::__1::__tree_node_base"*, %"class.std::__1::__tree_node_base"** %301, align 8
  %303 = icmp eq %"class.std::__1::__tree_node_base"* %302, %297
  br i1 %303, label %320, label %311

304:                                              ; preds = %284, %304
  %305 = phi %"class.std::__1::__tree_node_base"* [ %307, %304 ], [ %294, %284 ]
  %306 = getelementptr inbounds %"class.std::__1::__tree_node_base", %"class.std::__1::__tree_node_base"* %305, i64 0, i32 0, i32 0
  %307 = load %"class.std::__1::__tree_node_base"*, %"class.std::__1::__tree_node_base"** %306, align 8
  %308 = icmp eq %"class.std::__1::__tree_node_base"* %307, null
  br i1 %308, label %309, label %304

309:                                              ; preds = %304
  %310 = getelementptr inbounds %"class.std::__1::__tree_node_base", %"class.std::__1::__tree_node_base"* %305, i64 0, i32 0
  br label %320

311:                                              ; preds = %296, %311
  %312 = phi %"class.std::__1::__tree_end_node"** [ %315, %311 ], [ %299, %296 ]
  %313 = bitcast %"class.std::__1::__tree_end_node"** %312 to %"class.std::__1::__tree_node_base"**
  %314 = load %"class.std::__1::__tree_node_base"*, %"class.std::__1::__tree_node_base"** %313, align 8
  %315 = getelementptr inbounds %"class.std::__1::__tree_node_base", %"class.std::__1::__tree_node_base"* %314, i64 0, i32 2
  %316 = load %"class.std::__1::__tree_end_node"*, %"class.std::__1::__tree_end_node"** %315, align 8
  %317 = getelementptr inbounds %"class.std::__1::__tree_end_node", %"class.std::__1::__tree_end_node"* %316, i64 0, i32 0
  %318 = load %"class.std::__1::__tree_node_base"*, %"class.std::__1::__tree_node_base"** %317, align 8
  %319 = icmp eq %"class.std::__1::__tree_node_base"* %318, %314
  br i1 %319, label %320, label %311

320:                                              ; preds = %311, %296, %309
  %321 = phi %"class.std::__1::__tree_end_node"* [ %310, %309 ], [ %300, %296 ], [ %316, %311 ]
  %322 = icmp eq %"class.std::__1::__tree_end_node"* %321, %110
  br i1 %322, label %113, label %284

323:                                              ; preds = %278, %92, %91, %3
  %324 = phi %"class.v8::internal::compiler::LiveRangeBundle"* [ %0, %3 ], [ %112, %278 ], [ null, %92 ], [ null, %91 ]
  ret %"class.v8::internal::compiler::LiveRangeBundle"* %324
}

; Function Attrs: nounwind ssp uwtable
define linkonce_odr hidden void @_ZN2v88internal8compiler15LiveRangeBundle10InsertUsesEPNS1_11UseIntervalE(%"class.v8::internal::compiler::LiveRangeBundle"*, %"class.v8::internal::compiler::UseInterval"*) local_unnamed_addr #0 comdat align 2 {
  %3 = icmp eq %"class.v8::internal::compiler::UseInterval"* %1, null
  br i1 %3, label %96, label %4

4:                                                ; preds = %2
  %5 = getelementptr inbounds %"class.v8::internal::compiler::LiveRangeBundle", %"class.v8::internal::compiler::LiveRangeBundle"* %0, i64 0, i32 1, i32 0, i32 0
  %6 = getelementptr inbounds %"class.v8::internal::compiler::LiveRangeBundle", %"class.v8::internal::compiler::LiveRangeBundle"* %0, i64 0, i32 1, i32 0, i32 0, i32 1, i32 0, i32 0
  %7 = bitcast %"class.std::__1::__tree_end_node"* %6 to %"class.std::__1::__tree_node"**
  %8 = getelementptr inbounds %"class.v8::internal::compiler::LiveRangeBundle", %"class.v8::internal::compiler::LiveRangeBundle"* %0, i64 0, i32 1, i32 0, i32 0, i32 1, i32 0, i32 0, i32 0
  %9 = getelementptr inbounds %"class.std::__1::__tree_end_node", %"class.std::__1::__tree_end_node"* %6, i64 0, i32 0
  %10 = getelementptr inbounds %"class.v8::internal::compiler::LiveRangeBundle", %"class.v8::internal::compiler::LiveRangeBundle"* %0, i64 0, i32 1, i32 0, i32 0, i32 1, i32 1, i32 0, i32 0
  %11 = getelementptr inbounds %"class.std::__1::__tree.26", %"class.std::__1::__tree.26"* %5, i64 0, i32 0
  %12 = bitcast %"class.std::__1::__tree.26"* %5 to i64*
  %13 = getelementptr inbounds %"class.v8::internal::compiler::LiveRangeBundle", %"class.v8::internal::compiler::LiveRangeBundle"* %0, i64 0, i32 1, i32 0, i32 0, i32 2, i32 0, i32 0
  br label %14

14:                                               ; preds = %4, %92
  %15 = phi %"class.v8::internal::compiler::UseInterval"* [ %1, %4 ], [ %94, %92 ]
  %16 = getelementptr inbounds %"class.v8::internal::compiler::UseInterval", %"class.v8::internal::compiler::UseInterval"* %15, i64 0, i32 0, i32 0
  %17 = load i32, i32* %16, align 8
  %18 = getelementptr inbounds %"class.v8::internal::compiler::UseInterval", %"class.v8::internal::compiler::UseInterval"* %15, i64 0, i32 1, i32 0
  %19 = load i32, i32* %18, align 4
  %20 = load %"class.std::__1::__tree_node"*, %"class.std::__1::__tree_node"** %7, align 8
  %21 = icmp eq %"class.std::__1::__tree_node"* %20, null
  br i1 %21, label %50, label %22

22:                                               ; preds = %14, %46
  %23 = phi %"class.std::__1::__tree_node_base"** [ %48, %46 ], [ %8, %14 ]
  %24 = phi %"class.std::__1::__tree_node"* [ %49, %46 ], [ %20, %14 ]
  %25 = getelementptr inbounds %"class.std::__1::__tree_node", %"class.std::__1::__tree_node"* %24, i64 0, i32 1
  %26 = bitcast %"class.v8::internal::compiler::LiveRangeBundle::Range"* %25 to i64*
  %27 = load i64, i64* %26, align 4
  %28 = trunc i64 %27 to i32
  %29 = icmp slt i32 %17, %28
  br i1 %29, label %30, label %36

30:                                               ; preds = %22
  %31 = getelementptr inbounds %"class.std::__1::__tree_node", %"class.std::__1::__tree_node"* %24, i64 0, i32 0, i32 0, i32 0
  %32 = load %"class.std::__1::__tree_node_base"*, %"class.std::__1::__tree_node_base"** %31, align 8
  %33 = icmp eq %"class.std::__1::__tree_node_base"* %32, null
  br i1 %33, label %34, label %46

34:                                               ; preds = %30
  %35 = getelementptr inbounds %"class.std::__1::__tree_node", %"class.std::__1::__tree_node"* %24, i64 0, i32 0, i32 0
  br label %50

36:                                               ; preds = %22
  %37 = icmp sgt i32 %17, %28
  br i1 %37, label %38, label %44

38:                                               ; preds = %36
  %39 = getelementptr inbounds %"class.std::__1::__tree_node", %"class.std::__1::__tree_node"* %24, i64 0, i32 0, i32 1
  %40 = load %"class.std::__1::__tree_node_base"*, %"class.std::__1::__tree_node_base"** %39, align 8
  %41 = icmp eq %"class.std::__1::__tree_node_base"* %40, null
  br i1 %41, label %42, label %46

42:                                               ; preds = %38
  %43 = getelementptr inbounds %"class.std::__1::__tree_node", %"class.std::__1::__tree_node"* %24, i64 0, i32 0, i32 0
  br label %50

44:                                               ; preds = %36
  %45 = getelementptr inbounds %"class.std::__1::__tree_node", %"class.std::__1::__tree_node"* %24, i64 0, i32 0, i32 0
  br label %50

46:                                               ; preds = %38, %30
  %47 = phi %"class.std::__1::__tree_node_base"* [ %32, %30 ], [ %40, %38 ]
  %48 = phi %"class.std::__1::__tree_node_base"** [ %31, %30 ], [ %39, %38 ]
  %49 = bitcast %"class.std::__1::__tree_node_base"* %47 to %"class.std::__1::__tree_node"*
  br label %22

50:                                               ; preds = %14, %44, %42, %34
  %51 = phi %"class.std::__1::__tree_end_node"* [ %35, %34 ], [ %43, %42 ], [ %45, %44 ], [ %6, %14 ]
  %52 = phi %"class.std::__1::__tree_node_base"** [ %31, %34 ], [ %39, %42 ], [ %23, %44 ], [ %9, %14 ]
  %53 = bitcast %"class.std::__1::__tree_node_base"** %52 to %"class.std::__1::__tree_node"**
  %54 = load %"class.std::__1::__tree_node"*, %"class.std::__1::__tree_node"** %53, align 8
  %55 = icmp eq %"class.std::__1::__tree_node"* %54, null
  br i1 %55, label %56, label %92

56:                                               ; preds = %50
  %57 = load %"class.v8::internal::Zone"*, %"class.v8::internal::Zone"** %10, align 8, !noalias !115
  %58 = getelementptr inbounds %"class.v8::internal::Zone", %"class.v8::internal::Zone"* %57, i64 0, i32 2
  %59 = load i64, i64* %58, align 8, !noalias !115
  %60 = getelementptr inbounds %"class.v8::internal::Zone", %"class.v8::internal::Zone"* %57, i64 0, i32 3
  %61 = load i64, i64* %60, align 8, !noalias !115
  %62 = sub i64 %61, %59
  %63 = icmp ult i64 %62, 40
  br i1 %63, label %64, label %66, !prof !2

64:                                               ; preds = %56
  %65 = tail call i64 @_ZN2v88internal4Zone9NewExpandEm(%"class.v8::internal::Zone"* %57, i64 40) #16, !noalias !115
  br label %68

66:                                               ; preds = %56
  %67 = add i64 %59, 40
  store i64 %67, i64* %58, align 8, !noalias !115
  br label %68

68:                                               ; preds = %66, %64
  %69 = phi i64 [ %65, %64 ], [ %59, %66 ]
  %70 = inttoptr i64 %69 to %"class.std::__1::__tree_node"*
  %71 = getelementptr inbounds %"class.std::__1::__tree_node", %"class.std::__1::__tree_node"* %70, i64 0, i32 1
  %72 = bitcast %"class.v8::internal::compiler::LiveRangeBundle::Range"* %71 to i64*
  %73 = zext i32 %19 to i64
  %74 = shl nuw i64 %73, 32
  %75 = zext i32 %17 to i64
  %76 = or i64 %74, %75
  store i64 %76, i64* %72, align 4, !noalias !115
  %77 = inttoptr i64 %69 to %"class.std::__1::__tree_node_base"*
  %78 = getelementptr inbounds %"class.std::__1::__tree_node_base", %"class.std::__1::__tree_node_base"* %77, i64 0, i32 2
  %79 = inttoptr i64 %69 to i8*
  tail call void @llvm.memset.p0i8.i64(i8* align 8 %79, i8 0, i64 16, i1 false) #16
  store %"class.std::__1::__tree_end_node"* %51, %"class.std::__1::__tree_end_node"** %78, align 8
  store %"class.std::__1::__tree_node_base"* %77, %"class.std::__1::__tree_node_base"** %52, align 8
  %80 = load %"class.std::__1::__tree_end_node"*, %"class.std::__1::__tree_end_node"** %11, align 8
  %81 = getelementptr inbounds %"class.std::__1::__tree_end_node", %"class.std::__1::__tree_end_node"* %80, i64 0, i32 0
  %82 = load %"class.std::__1::__tree_node_base"*, %"class.std::__1::__tree_node_base"** %81, align 8
  %83 = icmp eq %"class.std::__1::__tree_node_base"* %82, null
  br i1 %83, label %87, label %84

84:                                               ; preds = %68
  %85 = ptrtoint %"class.std::__1::__tree_node_base"* %82 to i64
  store i64 %85, i64* %12, align 8
  %86 = load %"class.std::__1::__tree_node_base"*, %"class.std::__1::__tree_node_base"** %52, align 8
  br label %87

87:                                               ; preds = %84, %68
  %88 = phi %"class.std::__1::__tree_node_base"* [ %77, %68 ], [ %86, %84 ]
  %89 = load %"class.std::__1::__tree_node_base"*, %"class.std::__1::__tree_node_base"** %8, align 8
  tail call void @_ZNSt3__127__tree_balance_after_insertIPNS_16__tree_node_baseIPvEEEEvT_S5_(%"class.std::__1::__tree_node_base"* %89, %"class.std::__1::__tree_node_base"* %88) #16
  %90 = load i64, i64* %13, align 8
  %91 = add i64 %90, 1
  store i64 %91, i64* %13, align 8
  br label %92

92:                                               ; preds = %50, %87
  %93 = getelementptr inbounds %"class.v8::internal::compiler::UseInterval", %"class.v8::internal::compiler::UseInterval"* %15, i64 0, i32 2
  %94 = load %"class.v8::internal::compiler::UseInterval"*, %"class.v8::internal::compiler::UseInterval"** %93, align 8
  %95 = icmp eq %"class.v8::internal::compiler::UseInterval"* %94, null
  br i1 %95, label %96, label %14

96:                                               ; preds = %92, %2
  ret void
}

; Function Attrs: nounwind ssp uwtable
define hidden void @_ZN2v88internal8compiler15LiveRangeBundle24MergeSpillRangesAndClearEv(%"class.v8::internal::compiler::LiveRangeBundle"*) local_unnamed_addr #0 align 2 {
  %2 = getelementptr inbounds %"class.v8::internal::compiler::LiveRangeBundle", %"class.v8::internal::compiler::LiveRangeBundle"* %0, i64 0, i32 0, i32 0, i32 0, i32 0
  %3 = load %"class.std::__1::__tree_end_node"*, %"class.std::__1::__tree_end_node"** %2, align 8
  %4 = getelementptr inbounds %"class.v8::internal::compiler::LiveRangeBundle", %"class.v8::internal::compiler::LiveRangeBundle"* %0, i64 0, i32 0, i32 0, i32 0, i32 1, i32 0, i32 0
  %5 = icmp eq %"class.std::__1::__tree_end_node"* %3, %4
  br i1 %5, label %6, label %20

6:                                                ; preds = %70, %1
  %7 = getelementptr inbounds %"class.v8::internal::compiler::LiveRangeBundle", %"class.v8::internal::compiler::LiveRangeBundle"* %0, i64 0, i32 0, i32 0, i32 0
  %8 = bitcast %"class.std::__1::__tree_end_node"* %4 to %"class.std::__1::__tree_node.1501"**
  %9 = load %"class.std::__1::__tree_node.1501"*, %"class.std::__1::__tree_node.1501"** %8, align 8
  tail call void @_ZNSt3__16__treeIPN2v88internal8compiler9LiveRangeENS3_17LiveRangeOrderingENS2_13ZoneAllocatorIS5_EEE7destroyEPNS_11__tree_nodeIS5_PvEE(%"class.std::__1::__tree"* %7, %"class.std::__1::__tree_node.1501"* %9) #16
  %10 = getelementptr inbounds %"class.v8::internal::compiler::LiveRangeBundle", %"class.v8::internal::compiler::LiveRangeBundle"* %0, i64 0, i32 0, i32 0, i32 0, i32 2, i32 0, i32 0
  store i64 0, i64* %10, align 8
  store %"class.std::__1::__tree_end_node"* %4, %"class.std::__1::__tree_end_node"** %2, align 8
  %11 = getelementptr inbounds %"class.std::__1::__tree_end_node", %"class.std::__1::__tree_end_node"* %4, i64 0, i32 0
  store %"class.std::__1::__tree_node_base"* null, %"class.std::__1::__tree_node_base"** %11, align 8
  %12 = getelementptr inbounds %"class.v8::internal::compiler::LiveRangeBundle", %"class.v8::internal::compiler::LiveRangeBundle"* %0, i64 0, i32 1, i32 0
  %13 = getelementptr inbounds %"class.std::__1::set.25", %"class.std::__1::set.25"* %12, i64 0, i32 0
  %14 = getelementptr inbounds %"class.v8::internal::compiler::LiveRangeBundle", %"class.v8::internal::compiler::LiveRangeBundle"* %0, i64 0, i32 1, i32 0, i32 0, i32 1, i32 0, i32 0
  %15 = bitcast %"class.std::__1::__tree_end_node"* %14 to %"class.std::__1::__tree_node"**
  %16 = load %"class.std::__1::__tree_node"*, %"class.std::__1::__tree_node"** %15, align 8
  tail call void @_ZNSt3__16__treeIN2v88internal8compiler15LiveRangeBundle5RangeENS4_13RangeOrderingENS2_13ZoneAllocatorIS5_EEE7destroyEPNS_11__tree_nodeIS5_PvEE(%"class.std::__1::__tree.26"* %13, %"class.std::__1::__tree_node"* %16) #16
  %17 = getelementptr inbounds %"class.v8::internal::compiler::LiveRangeBundle", %"class.v8::internal::compiler::LiveRangeBundle"* %0, i64 0, i32 1, i32 0, i32 0, i32 2, i32 0, i32 0
  store i64 0, i64* %17, align 8
  %18 = getelementptr inbounds %"class.std::__1::set.25", %"class.std::__1::set.25"* %12, i64 0, i32 0, i32 0
  store %"class.std::__1::__tree_end_node"* %14, %"class.std::__1::__tree_end_node"** %18, align 8
  %19 = getelementptr inbounds %"class.std::__1::__tree_end_node", %"class.std::__1::__tree_end_node"* %14, i64 0, i32 0
  store %"class.std::__1::__tree_node_base"* null, %"class.std::__1::__tree_node_base"** %19, align 8
  ret void

20:                                               ; preds = %1, %70
  %21 = phi %"class.v8::internal::compiler::SpillRange"* [ %42, %70 ], [ null, %1 ]
  %22 = phi %"class.std::__1::__tree_end_node"* [ %71, %70 ], [ %3, %1 ]
  %23 = getelementptr inbounds %"class.std::__1::__tree_end_node", %"class.std::__1::__tree_end_node"* %22, i64 4
  %24 = bitcast %"class.std::__1::__tree_end_node"* %23 to %"class.v8::internal::compiler::LiveRange"**
  %25 = load %"class.v8::internal::compiler::LiveRange"*, %"class.v8::internal::compiler::LiveRange"** %24, align 8
  %26 = getelementptr inbounds %"class.v8::internal::compiler::LiveRange", %"class.v8::internal::compiler::LiveRange"* %25, i64 0, i32 5
  %27 = load %"class.v8::internal::compiler::TopLevelLiveRange"*, %"class.v8::internal::compiler::TopLevelLiveRange"** %26, align 8
  %28 = getelementptr inbounds %"class.v8::internal::compiler::TopLevelLiveRange", %"class.v8::internal::compiler::TopLevelLiveRange"* %27, i64 0, i32 0, i32 1
  %29 = load i32, i32* %28, align 4
  %30 = and i32 %29, 64
  %31 = icmp eq i32 %30, 0
  br i1 %31, label %41, label %32

32:                                               ; preds = %20
  %33 = getelementptr inbounds %"class.v8::internal::compiler::TopLevelLiveRange", %"class.v8::internal::compiler::TopLevelLiveRange"* %27, i64 0, i32 3
  %34 = bitcast %union.anon* %33 to %"class.v8::internal::compiler::SpillRange"**
  %35 = load %"class.v8::internal::compiler::SpillRange"*, %"class.v8::internal::compiler::SpillRange"** %34, align 8
  %36 = icmp eq %"class.v8::internal::compiler::SpillRange"* %21, null
  br i1 %36, label %41, label %37

37:                                               ; preds = %32
  %38 = icmp eq %"class.v8::internal::compiler::SpillRange"* %21, %35
  br i1 %38, label %41, label %39

39:                                               ; preds = %37
  %40 = tail call zeroext i1 @_ZN2v88internal8compiler10SpillRange8TryMergeEPS2_(%"class.v8::internal::compiler::SpillRange"* nonnull %21, %"class.v8::internal::compiler::SpillRange"* %35)
  br label %41

41:                                               ; preds = %20, %39, %37, %32
  %42 = phi %"class.v8::internal::compiler::SpillRange"* [ %21, %20 ], [ %21, %39 ], [ %21, %37 ], [ %35, %32 ]
  %43 = getelementptr inbounds %"class.std::__1::__tree_end_node", %"class.std::__1::__tree_end_node"* %22, i64 1, i32 0
  %44 = load %"class.std::__1::__tree_node_base"*, %"class.std::__1::__tree_node_base"** %43, align 8
  %45 = icmp eq %"class.std::__1::__tree_node_base"* %44, null
  br i1 %45, label %46, label %54

46:                                               ; preds = %41
  %47 = bitcast %"class.std::__1::__tree_end_node"* %22 to %"class.std::__1::__tree_node_base"*
  %48 = getelementptr inbounds %"class.std::__1::__tree_end_node", %"class.std::__1::__tree_end_node"* %22, i64 2
  %49 = bitcast %"class.std::__1::__tree_end_node"* %48 to %"class.std::__1::__tree_end_node"**
  %50 = load %"class.std::__1::__tree_end_node"*, %"class.std::__1::__tree_end_node"** %49, align 8
  %51 = getelementptr inbounds %"class.std::__1::__tree_end_node", %"class.std::__1::__tree_end_node"* %50, i64 0, i32 0
  %52 = load %"class.std::__1::__tree_node_base"*, %"class.std::__1::__tree_node_base"** %51, align 8
  %53 = icmp eq %"class.std::__1::__tree_node_base"* %52, %47
  br i1 %53, label %70, label %61

54:                                               ; preds = %41, %54
  %55 = phi %"class.std::__1::__tree_node_base"* [ %57, %54 ], [ %44, %41 ]
  %56 = getelementptr inbounds %"class.std::__1::__tree_node_base", %"class.std::__1::__tree_node_base"* %55, i64 0, i32 0, i32 0
  %57 = load %"class.std::__1::__tree_node_base"*, %"class.std::__1::__tree_node_base"** %56, align 8
  %58 = icmp eq %"class.std::__1::__tree_node_base"* %57, null
  br i1 %58, label %59, label %54

59:                                               ; preds = %54
  %60 = getelementptr inbounds %"class.std::__1::__tree_node_base", %"class.std::__1::__tree_node_base"* %55, i64 0, i32 0
  br label %70

61:                                               ; preds = %46, %61
  %62 = phi %"class.std::__1::__tree_end_node"** [ %65, %61 ], [ %49, %46 ]
  %63 = bitcast %"class.std::__1::__tree_end_node"** %62 to %"class.std::__1::__tree_node_base"**
  %64 = load %"class.std::__1::__tree_node_base"*, %"class.std::__1::__tree_node_base"** %63, align 8
  %65 = getelementptr inbounds %"class.std::__1::__tree_node_base", %"class.std::__1::__tree_node_base"* %64, i64 0, i32 2
  %66 = load %"class.std::__1::__tree_end_node"*, %"class.std::__1::__tree_end_node"** %65, align 8
  %67 = getelementptr inbounds %"class.std::__1::__tree_end_node", %"class.std::__1::__tree_end_node"* %66, i64 0, i32 0
  %68 = load %"class.std::__1::__tree_node_base"*, %"class.std::__1::__tree_node_base"** %67, align 8
  %69 = icmp eq %"class.std::__1::__tree_node_base"* %68, %64
  br i1 %69, label %70, label %61

70:                                               ; preds = %61, %46, %59
  %71 = phi %"class.std::__1::__tree_end_node"* [ %60, %59 ], [ %50, %46 ], [ %66, %61 ]
  %72 = icmp eq %"class.std::__1::__tree_end_node"* %71, %4
  br i1 %72, label %6, label %20
}

; Function Attrs: nofree norecurse nounwind ssp uwtable
define hidden void @_ZN2v88internal8compiler17RegisterAllocatorC2EPNS1_29TopTierRegisterAllocationDataENS1_12RegisterKindE(%"class.v8::internal::compiler::RegisterAllocator"* nocapture, %"class.v8::internal::compiler::TopTierRegisterAllocationData"*, i32) unnamed_addr #3 align 2 {
  %4 = getelementptr inbounds %"class.v8::internal::compiler::RegisterAllocator", %"class.v8::internal::compiler::RegisterAllocator"* %0, i64 0, i32 0
  store %"class.v8::internal::compiler::TopTierRegisterAllocationData"* %1, %"class.v8::internal::compiler::TopTierRegisterAllocationData"** %4, align 8
  %5 = getelementptr inbounds %"class.v8::internal::compiler::RegisterAllocator", %"class.v8::internal::compiler::RegisterAllocator"* %0, i64 0, i32 1
  store i32 %2, i32* %5, align 8
  %6 = getelementptr inbounds %"class.v8::internal::compiler::RegisterAllocator", %"class.v8::internal::compiler::RegisterAllocator"* %0, i64 0, i32 2
  %7 = getelementptr inbounds %"class.v8::internal::compiler::TopTierRegisterAllocationData", %"class.v8::internal::compiler::TopTierRegisterAllocationData"* %1, i64 0, i32 5
  %8 = load %"class.v8::internal::RegisterConfiguration"*, %"class.v8::internal::RegisterConfiguration"** %7, align 8
  %9 = icmp eq i32 %2, 0
  %10 = getelementptr inbounds %"class.v8::internal::RegisterConfiguration", %"class.v8::internal::RegisterConfiguration"* %8, i64 0, i32 1
  %11 = getelementptr inbounds %"class.v8::internal::RegisterConfiguration", %"class.v8::internal::RegisterConfiguration"* %8, i64 0, i32 3
  %12 = select i1 %9, i32* %10, i32* %11
  %13 = load i32, i32* %12, align 8
  store i32 %13, i32* %6, align 4
  %14 = getelementptr inbounds %"class.v8::internal::compiler::RegisterAllocator", %"class.v8::internal::compiler::RegisterAllocator"* %0, i64 0, i32 3
  %15 = load %"class.v8::internal::RegisterConfiguration"*, %"class.v8::internal::RegisterConfiguration"** %7, align 8
  %16 = getelementptr inbounds %"class.v8::internal::RegisterConfiguration", %"class.v8::internal::RegisterConfiguration"* %15, i64 0, i32 5
  %17 = getelementptr inbounds %"class.v8::internal::RegisterConfiguration", %"class.v8::internal::RegisterConfiguration"* %15, i64 0, i32 7
  %18 = select i1 %9, i32* %16, i32* %17
  %19 = load i32, i32* %18, align 8
  store i32 %19, i32* %14, align 8
  %20 = getelementptr inbounds %"class.v8::internal::compiler::RegisterAllocator", %"class.v8::internal::compiler::RegisterAllocator"* %0, i64 0, i32 5
  %21 = load %"class.v8::internal::RegisterConfiguration"*, %"class.v8::internal::RegisterConfiguration"** %7, align 8
  %22 = getelementptr inbounds %"class.v8::internal::RegisterConfiguration", %"class.v8::internal::RegisterConfiguration"* %21, i64 0, i32 13
  %23 = getelementptr inbounds %"class.v8::internal::RegisterConfiguration", %"class.v8::internal::RegisterConfiguration"* %21, i64 0, i32 15
  %24 = select i1 %9, i32** %22, i32** %23
  %25 = bitcast i32** %24 to i64*
  %26 = load i64, i64* %25, align 8
  %27 = bitcast i32** %20 to i64*
  store i64 %26, i64* %27, align 8
  %28 = getelementptr inbounds %"class.v8::internal::compiler::RegisterAllocator", %"class.v8::internal::compiler::RegisterAllocator"* %0, i64 0, i32 6
  store i8 0, i8* %28, align 8
  ret void
}

; Function Attrs: nounwind readonly ssp uwtable
define hidden i32 @_ZN2v88internal8compiler17RegisterAllocator30GetSplitPositionForInstructionEPKNS1_9LiveRangeEi(%"class.v8::internal::compiler::RegisterAllocator"* nocapture readnone, %"class.v8::internal::compiler::LiveRange"* nocapture readonly, i32) local_unnamed_addr #8 align 2 {
  %4 = shl nsw i32 %2, 2
  %5 = getelementptr inbounds %"class.v8::internal::compiler::LiveRange", %"class.v8::internal::compiler::LiveRange"* %1, i64 0, i32 3
  %6 = load %"class.v8::internal::compiler::UseInterval"*, %"class.v8::internal::compiler::UseInterval"** %5, align 8
  %7 = getelementptr inbounds %"class.v8::internal::compiler::UseInterval", %"class.v8::internal::compiler::UseInterval"* %6, i64 0, i32 0, i32 0
  %8 = load i32, i32* %7, align 8
  %9 = icmp slt i32 %8, %4
  br i1 %9, label %10, label %17

10:                                               ; preds = %3
  %11 = getelementptr inbounds %"class.v8::internal::compiler::LiveRange", %"class.v8::internal::compiler::LiveRange"* %1, i64 0, i32 2
  %12 = load %"class.v8::internal::compiler::UseInterval"*, %"class.v8::internal::compiler::UseInterval"** %11, align 8
  %13 = getelementptr inbounds %"class.v8::internal::compiler::UseInterval", %"class.v8::internal::compiler::UseInterval"* %12, i64 0, i32 1, i32 0
  %14 = load i32, i32* %13, align 4
  %15 = icmp slt i32 %4, %14
  %16 = select i1 %15, i32 %4, i32 -1
  ret i32 %16

17:                                               ; preds = %3
  ret i32 -1
}

; Function Attrs: nounwind ssp uwtable
define hidden void @_ZN2v88internal8compiler17RegisterAllocator41SplitAndSpillRangesDefinedByMemoryOperandEv(%"class.v8::internal::compiler::RegisterAllocator"* nocapture readonly) local_unnamed_addr #0 align 2 {
  %2 = getelementptr inbounds %"class.v8::internal::compiler::RegisterAllocator", %"class.v8::internal::compiler::RegisterAllocator"* %0, i64 0, i32 0
  %3 = load %"class.v8::internal::compiler::TopTierRegisterAllocationData"*, %"class.v8::internal::compiler::TopTierRegisterAllocationData"** %2, align 8
  %4 = getelementptr inbounds %"class.v8::internal::compiler::TopTierRegisterAllocationData", %"class.v8::internal::compiler::TopTierRegisterAllocationData"* %3, i64 0, i32 9, i32 0
  %5 = getelementptr inbounds %"class.v8::internal::compiler::TopTierRegisterAllocationData", %"class.v8::internal::compiler::TopTierRegisterAllocationData"* %3, i64 0, i32 9, i32 0, i32 0, i32 1
  %6 = bitcast %"class.v8::internal::compiler::TopLevelLiveRange"*** %5 to i64*
  %7 = load i64, i64* %6, align 8
  %8 = bitcast %"class.std::__1::vector"* %4 to i64*
  %9 = load i64, i64* %8, align 8
  %10 = sub i64 %7, %9
  %11 = ashr exact i64 %10, 3
  %12 = icmp eq i64 %10, 0
  br i1 %12, label %18, label %13

13:                                               ; preds = %1
  %14 = getelementptr inbounds %"class.v8::internal::compiler::RegisterAllocator", %"class.v8::internal::compiler::RegisterAllocator"* %0, i64 0, i32 1
  %15 = sub i64 %7, %9
  %16 = ashr exact i64 %15, 3
  %17 = icmp eq i64 %11, %16
  br i1 %17, label %20, label %19, !prof !80

18:                                               ; preds = %130, %1
  ret void

19:                                               ; preds = %133, %13
  tail call void (i8*, ...) @_Z8V8_FatalPKcz(i8* getelementptr inbounds ([18 x i8], [18 x i8]* @.str.1, i64 0, i64 0), i8* getelementptr inbounds ([52 x i8], [52 x i8]* @.str.49, i64 0, i64 0)) #17
  unreachable

20:                                               ; preds = %13, %133
  %21 = phi i64 [ %131, %133 ], [ 0, %13 ]
  %22 = phi %"class.v8::internal::compiler::TopTierRegisterAllocationData"* [ %134, %133 ], [ %3, %13 ]
  %23 = getelementptr inbounds %"class.v8::internal::compiler::TopTierRegisterAllocationData", %"class.v8::internal::compiler::TopTierRegisterAllocationData"* %22, i64 0, i32 9, i32 0, i32 0, i32 0
  %24 = load %"class.v8::internal::compiler::TopLevelLiveRange"**, %"class.v8::internal::compiler::TopLevelLiveRange"*** %23, align 8
  %25 = getelementptr inbounds %"class.v8::internal::compiler::TopLevelLiveRange"*, %"class.v8::internal::compiler::TopLevelLiveRange"** %24, i64 %21
  %26 = load %"class.v8::internal::compiler::TopLevelLiveRange"*, %"class.v8::internal::compiler::TopLevelLiveRange"** %25, align 8
  %27 = bitcast %"class.v8::internal::compiler::TopLevelLiveRange"* %26 to %"class.v8::internal::compiler::LiveRange"*
  %28 = icmp eq %"class.v8::internal::compiler::TopLevelLiveRange"* %26, null
  br i1 %28, label %130, label %29

29:                                               ; preds = %20
  %30 = getelementptr inbounds %"class.v8::internal::compiler::TopLevelLiveRange", %"class.v8::internal::compiler::TopLevelLiveRange"* %26, i64 0, i32 0, i32 3
  %31 = load %"class.v8::internal::compiler::UseInterval"*, %"class.v8::internal::compiler::UseInterval"** %30, align 8
  %32 = icmp eq %"class.v8::internal::compiler::UseInterval"* %31, null
  br i1 %32, label %130, label %33

33:                                               ; preds = %29
  %34 = getelementptr inbounds %"class.v8::internal::compiler::TopLevelLiveRange", %"class.v8::internal::compiler::TopLevelLiveRange"* %26, i64 0, i32 0, i32 1
  %35 = load i32, i32* %34, align 4
  %36 = lshr i32 %35, 13
  %37 = trunc i32 %36 to i8
  %38 = icmp ugt i8 %37, 11
  %39 = zext i1 %38 to i32
  %40 = load i32, i32* %14, align 8
  %41 = icmp ne i32 %40, %39
  %42 = and i32 %35, 96
  %43 = icmp eq i32 %42, 0
  %44 = or i1 %41, %43
  br i1 %44, label %130, label %45

45:                                               ; preds = %33
  %46 = and i32 %35, 64
  %47 = icmp eq i32 %46, 0
  %48 = and i32 %35, 6
  %49 = icmp eq i32 %48, 4
  %50 = or i1 %47, %49
  br i1 %50, label %51, label %130

51:                                               ; preds = %45
  %52 = getelementptr inbounds %"class.v8::internal::compiler::UseInterval", %"class.v8::internal::compiler::UseInterval"* %31, i64 0, i32 0, i32 0
  %53 = load i32, i32* %52, align 8
  %54 = getelementptr inbounds %"class.v8::internal::compiler::TopTierRegisterAllocationData", %"class.v8::internal::compiler::TopTierRegisterAllocationData"* %22, i64 0, i32 23, i32 0
  %55 = load i32, i32* %54, align 4
  %56 = and i32 %55, 1
  %57 = icmp eq i32 %56, 0
  br i1 %57, label %65, label %58

58:                                               ; preds = %51
  %59 = getelementptr inbounds %"class.v8::internal::compiler::TopLevelLiveRange", %"class.v8::internal::compiler::TopLevelLiveRange"* %26, i64 0, i32 0, i32 5
  %60 = load %"class.v8::internal::compiler::TopLevelLiveRange"*, %"class.v8::internal::compiler::TopLevelLiveRange"** %59, align 8
  %61 = getelementptr inbounds %"class.v8::internal::compiler::TopLevelLiveRange", %"class.v8::internal::compiler::TopLevelLiveRange"* %60, i64 0, i32 1
  %62 = load i32, i32* %61, align 4
  %63 = getelementptr inbounds %"class.v8::internal::compiler::TopLevelLiveRange", %"class.v8::internal::compiler::TopLevelLiveRange"* %26, i64 0, i32 0, i32 0
  %64 = load i32, i32* %63, align 8
  tail call void (i8*, ...) @_ZN2v88internal6PrintFEPKcz(i8* getelementptr inbounds ([49 x i8], [49 x i8]* @.str.50, i64 0, i64 0), i32 %62, i32 %64) #16
  br label %65

65:                                               ; preds = %51, %58
  %66 = and i32 %53, 2
  %67 = icmp eq i32 %66, 0
  %68 = add i32 %53, 2
  %69 = and i32 %68, -2
  %70 = select i1 %67, i32 %69, i32 %53
  %71 = getelementptr inbounds %"class.v8::internal::compiler::TopLevelLiveRange", %"class.v8::internal::compiler::TopLevelLiveRange"* %26, i64 0, i32 0, i32 8
  %72 = load %"class.v8::internal::compiler::UsePosition"*, %"class.v8::internal::compiler::UsePosition"** %71, align 8
  %73 = icmp eq %"class.v8::internal::compiler::UsePosition"* %72, null
  br i1 %73, label %78, label %74

74:                                               ; preds = %65
  %75 = getelementptr inbounds %"class.v8::internal::compiler::UsePosition", %"class.v8::internal::compiler::UsePosition"* %72, i64 0, i32 3, i32 0
  %76 = load i32, i32* %75, align 8
  %77 = icmp sgt i32 %76, %70
  br i1 %77, label %78, label %82

78:                                               ; preds = %74, %65
  %79 = getelementptr inbounds %"class.v8::internal::compiler::TopLevelLiveRange", %"class.v8::internal::compiler::TopLevelLiveRange"* %26, i64 0, i32 0, i32 4
  %80 = load %"class.v8::internal::compiler::UsePosition"*, %"class.v8::internal::compiler::UsePosition"** %79, align 8
  %81 = icmp eq %"class.v8::internal::compiler::UsePosition"* %80, null
  br i1 %81, label %93, label %82

82:                                               ; preds = %78, %74
  %83 = phi %"class.v8::internal::compiler::UsePosition"* [ %72, %74 ], [ %80, %78 ]
  br label %84

84:                                               ; preds = %82, %89
  %85 = phi %"class.v8::internal::compiler::UsePosition"* [ %91, %89 ], [ %83, %82 ]
  %86 = getelementptr inbounds %"class.v8::internal::compiler::UsePosition", %"class.v8::internal::compiler::UsePosition"* %85, i64 0, i32 3, i32 0
  %87 = load i32, i32* %86, align 8
  %88 = icmp slt i32 %87, %70
  br i1 %88, label %89, label %94

89:                                               ; preds = %84
  %90 = getelementptr inbounds %"class.v8::internal::compiler::UsePosition", %"class.v8::internal::compiler::UsePosition"* %85, i64 0, i32 2
  %91 = load %"class.v8::internal::compiler::UsePosition"*, %"class.v8::internal::compiler::UsePosition"** %90, align 8
  %92 = icmp eq %"class.v8::internal::compiler::UsePosition"* %91, null
  br i1 %92, label %93, label %84

93:                                               ; preds = %89, %78
  store %"class.v8::internal::compiler::UsePosition"* null, %"class.v8::internal::compiler::UsePosition"** %71, align 8
  br label %105

94:                                               ; preds = %84
  store %"class.v8::internal::compiler::UsePosition"* %85, %"class.v8::internal::compiler::UsePosition"** %71, align 8
  br label %95

95:                                               ; preds = %101, %94
  %96 = phi %"class.v8::internal::compiler::UsePosition"* [ %103, %101 ], [ %85, %94 ]
  %97 = getelementptr inbounds %"class.v8::internal::compiler::UsePosition", %"class.v8::internal::compiler::UsePosition"* %96, i64 0, i32 4
  %98 = load i32, i32* %97, align 4
  %99 = and i32 %98, 32
  %100 = icmp eq i32 %99, 0
  br i1 %100, label %101, label %106

101:                                              ; preds = %95
  %102 = getelementptr inbounds %"class.v8::internal::compiler::UsePosition", %"class.v8::internal::compiler::UsePosition"* %96, i64 0, i32 2
  %103 = load %"class.v8::internal::compiler::UsePosition"*, %"class.v8::internal::compiler::UsePosition"** %102, align 8
  %104 = icmp eq %"class.v8::internal::compiler::UsePosition"* %103, null
  br i1 %104, label %105, label %95

105:                                              ; preds = %101, %93
  tail call void @_ZN2v88internal8compiler17RegisterAllocator5SpillEPNS1_9LiveRangeENS1_29TopTierRegisterAllocationData9SpillModeE(%"class.v8::internal::compiler::RegisterAllocator"* %0, %"class.v8::internal::compiler::LiveRange"* nonnull %27, i32 0)
  br label %130

106:                                              ; preds = %95
  %107 = getelementptr inbounds %"class.v8::internal::compiler::UsePosition", %"class.v8::internal::compiler::UsePosition"* %96, i64 0, i32 3, i32 0
  %108 = load i32, i32* %107, align 8
  %109 = load %"class.v8::internal::compiler::UseInterval"*, %"class.v8::internal::compiler::UseInterval"** %30, align 8
  %110 = getelementptr inbounds %"class.v8::internal::compiler::UseInterval", %"class.v8::internal::compiler::UseInterval"* %109, i64 0, i32 0, i32 0
  %111 = load i32, i32* %110, align 8
  %112 = add i32 %111, 2
  %113 = and i32 %112, -2
  %114 = icmp sgt i32 %108, %113
  br i1 %114, label %115, label %130

115:                                              ; preds = %106
  %116 = sdiv i32 %108, 4
  %117 = shl nsw i32 %116, 2
  %118 = icmp slt i32 %111, %117
  br i1 %118, label %119, label %130

119:                                              ; preds = %115
  %120 = getelementptr inbounds %"class.v8::internal::compiler::TopLevelLiveRange", %"class.v8::internal::compiler::TopLevelLiveRange"* %26, i64 0, i32 0, i32 2
  %121 = load %"class.v8::internal::compiler::UseInterval"*, %"class.v8::internal::compiler::UseInterval"** %120, align 8
  %122 = getelementptr inbounds %"class.v8::internal::compiler::UseInterval", %"class.v8::internal::compiler::UseInterval"* %121, i64 0, i32 1, i32 0
  %123 = load i32, i32* %122, align 4
  %124 = icmp slt i32 %117, %123
  br i1 %124, label %125, label %130

125:                                              ; preds = %119
  %126 = add i32 %111, 4
  %127 = and i32 %126, -4
  %128 = tail call i32 @_ZN2v88internal8compiler17RegisterAllocator19FindOptimalSplitPosENS1_16LifetimePositionES3_(%"class.v8::internal::compiler::RegisterAllocator"* %0, i32 %127, i32 %117)
  %129 = tail call %"class.v8::internal::compiler::LiveRange"* @_ZN2v88internal8compiler17RegisterAllocator12SplitRangeAtEPNS1_9LiveRangeENS1_16LifetimePositionE(%"class.v8::internal::compiler::RegisterAllocator"* %0, %"class.v8::internal::compiler::LiveRange"* nonnull %27, i32 %128)
  tail call void @_ZN2v88internal8compiler17RegisterAllocator5SpillEPNS1_9LiveRangeENS1_29TopTierRegisterAllocationData9SpillModeE(%"class.v8::internal::compiler::RegisterAllocator"* %0, %"class.v8::internal::compiler::LiveRange"* nonnull %27, i32 0)
  br label %130

130:                                              ; preds = %33, %45, %115, %119, %20, %29, %125, %106, %105
  %131 = add nuw i64 %21, 1
  %132 = icmp ult i64 %131, %11
  br i1 %132, label %133, label %18

133:                                              ; preds = %130
  %134 = load %"class.v8::internal::compiler::TopTierRegisterAllocationData"*, %"class.v8::internal::compiler::TopTierRegisterAllocationData"** %2, align 8
  %135 = getelementptr inbounds %"class.v8::internal::compiler::TopTierRegisterAllocationData", %"class.v8::internal::compiler::TopTierRegisterAllocationData"* %134, i64 0, i32 9, i32 0, i32 0, i32 1
  %136 = bitcast %"class.v8::internal::compiler::TopLevelLiveRange"*** %135 to i64*
  %137 = load i64, i64* %136, align 8
  %138 = getelementptr inbounds %"class.v8::internal::compiler::TopTierRegisterAllocationData", %"class.v8::internal::compiler::TopTierRegisterAllocationData"* %134, i64 0, i32 9, i32 0
  %139 = bitcast %"class.std::__1::vector"* %138 to i64*
  %140 = load i64, i64* %139, align 8
  %141 = sub i64 %137, %140
  %142 = ashr exact i64 %141, 3
  %143 = icmp eq i64 %11, %142
  br i1 %143, label %20, label %19, !prof !80
}

; Function Attrs: nounwind ssp uwtable
define hidden void @_ZN2v88internal8compiler17RegisterAllocator5SpillEPNS1_9LiveRangeENS1_29TopTierRegisterAllocationData9SpillModeE(%"class.v8::internal::compiler::RegisterAllocator"* nocapture readonly, %"class.v8::internal::compiler::LiveRange"* nocapture, i32) local_unnamed_addr #0 align 2 {
  %4 = getelementptr inbounds %"class.v8::internal::compiler::LiveRange", %"class.v8::internal::compiler::LiveRange"* %1, i64 0, i32 5
  %5 = load %"class.v8::internal::compiler::TopLevelLiveRange"*, %"class.v8::internal::compiler::TopLevelLiveRange"** %4, align 8
  %6 = getelementptr inbounds %"class.v8::internal::compiler::RegisterAllocator", %"class.v8::internal::compiler::RegisterAllocator"* %0, i64 0, i32 0
  %7 = load %"class.v8::internal::compiler::TopTierRegisterAllocationData"*, %"class.v8::internal::compiler::TopTierRegisterAllocationData"** %6, align 8
  %8 = getelementptr inbounds %"class.v8::internal::compiler::TopTierRegisterAllocationData", %"class.v8::internal::compiler::TopTierRegisterAllocationData"* %7, i64 0, i32 23, i32 0
  %9 = load i32, i32* %8, align 4
  %10 = and i32 %9, 1
  %11 = icmp eq i32 %10, 0
  br i1 %11, label %27, label %12

12:                                               ; preds = %3
  %13 = getelementptr inbounds %"class.v8::internal::compiler::TopLevelLiveRange", %"class.v8::internal::compiler::TopLevelLiveRange"* %5, i64 0, i32 1
  %14 = load i32, i32* %13, align 4
  %15 = getelementptr inbounds %"class.v8::internal::compiler::LiveRange", %"class.v8::internal::compiler::LiveRange"* %1, i64 0, i32 0
  %16 = load i32, i32* %15, align 8
  tail call void (i8*, ...) @_ZN2v88internal6PrintFEPKcz(i8* getelementptr inbounds ([35 x i8], [35 x i8]* @.str.53, i64 0, i64 0), i32 %14, i32 %16, i32 %2) #16
  %17 = load %"class.v8::internal::compiler::TopTierRegisterAllocationData"*, %"class.v8::internal::compiler::TopTierRegisterAllocationData"** %6, align 8
  %18 = getelementptr inbounds %"class.v8::internal::compiler::TopTierRegisterAllocationData", %"class.v8::internal::compiler::TopTierRegisterAllocationData"* %17, i64 0, i32 23, i32 0
  %19 = load i32, i32* %18, align 4
  %20 = and i32 %19, 1
  %21 = icmp eq i32 %20, 0
  br i1 %21, label %27, label %22

22:                                               ; preds = %12
  %23 = getelementptr inbounds %"class.v8::internal::compiler::TopLevelLiveRange", %"class.v8::internal::compiler::TopLevelLiveRange"* %5, i64 0, i32 0, i32 1
  %24 = load i32, i32* %23, align 4
  %25 = lshr i32 %24, 5
  %26 = and i32 %25, 3
  tail call void (i8*, ...) @_ZN2v88internal6PrintFEPKcz(i8* getelementptr inbounds ([27 x i8], [27 x i8]* @.str.54, i64 0, i64 0), i32 %26) #16
  br label %27

27:                                               ; preds = %3, %12, %22
  %28 = getelementptr inbounds %"class.v8::internal::compiler::TopLevelLiveRange", %"class.v8::internal::compiler::TopLevelLiveRange"* %5, i64 0, i32 0, i32 1
  %29 = load i32, i32* %28, align 4
  %30 = and i32 %29, 96
  %31 = icmp eq i32 %30, 0
  br i1 %31, label %32, label %79

32:                                               ; preds = %27
  %33 = load %"class.v8::internal::compiler::TopTierRegisterAllocationData"*, %"class.v8::internal::compiler::TopTierRegisterAllocationData"** %6, align 8
  %34 = getelementptr inbounds %"class.v8::internal::compiler::TopTierRegisterAllocationData", %"class.v8::internal::compiler::TopTierRegisterAllocationData"* %33, i64 0, i32 23, i32 0
  %35 = load i32, i32* %34, align 4
  %36 = and i32 %35, 1
  %37 = icmp eq i32 %36, 0
  br i1 %37, label %40, label %38

38:                                               ; preds = %32
  tail call void (i8*, ...) @_ZN2v88internal6PrintFEPKcz(i8* getelementptr inbounds ([23 x i8], [23 x i8]* @.str.55, i64 0, i64 0)) #16
  %39 = load %"class.v8::internal::compiler::TopTierRegisterAllocationData"*, %"class.v8::internal::compiler::TopTierRegisterAllocationData"** %6, align 8
  br label %40

40:                                               ; preds = %32, %38
  %41 = phi %"class.v8::internal::compiler::TopTierRegisterAllocationData"* [ %33, %32 ], [ %39, %38 ]
  %42 = getelementptr inbounds %"class.v8::internal::compiler::TopLevelLiveRange", %"class.v8::internal::compiler::TopLevelLiveRange"* %5, i64 0, i32 3
  %43 = bitcast %union.anon* %42 to %"class.v8::internal::compiler::SpillRange"**
  %44 = load %"class.v8::internal::compiler::SpillRange"*, %"class.v8::internal::compiler::SpillRange"** %43, align 8
  %45 = icmp eq %"class.v8::internal::compiler::SpillRange"* %44, null
  br i1 %45, label %46, label %62

46:                                               ; preds = %40
  %47 = getelementptr inbounds %"class.v8::internal::compiler::TopTierRegisterAllocationData", %"class.v8::internal::compiler::TopTierRegisterAllocationData"* %41, i64 0, i32 1
  %48 = load %"class.v8::internal::Zone"*, %"class.v8::internal::Zone"** %47, align 8
  %49 = getelementptr inbounds %"class.v8::internal::Zone", %"class.v8::internal::Zone"* %48, i64 0, i32 2
  %50 = load i64, i64* %49, align 8
  %51 = getelementptr inbounds %"class.v8::internal::Zone", %"class.v8::internal::Zone"* %48, i64 0, i32 3
  %52 = load i64, i64* %51, align 8
  %53 = sub i64 %52, %50
  %54 = icmp ult i64 %53, 56
  br i1 %54, label %55, label %57, !prof !2

55:                                               ; preds = %46
  %56 = tail call i64 @_ZN2v88internal4Zone9NewExpandEm(%"class.v8::internal::Zone"* %48, i64 56) #16
  br label %59

57:                                               ; preds = %46
  %58 = add i64 %50, 56
  store i64 %58, i64* %49, align 8
  br label %59

59:                                               ; preds = %57, %55
  %60 = phi i64 [ %56, %55 ], [ %50, %57 ]
  %61 = inttoptr i64 %60 to %"class.v8::internal::compiler::SpillRange"*
  tail call void @_ZN2v88internal8compiler10SpillRangeC2EPNS1_17TopLevelLiveRangeEPNS0_4ZoneE(%"class.v8::internal::compiler::SpillRange"* %61, %"class.v8::internal::compiler::TopLevelLiveRange"* %5, %"class.v8::internal::Zone"* %48) #16
  br label %62

62:                                               ; preds = %59, %40
  %63 = phi %"class.v8::internal::compiler::SpillRange"* [ %61, %59 ], [ %44, %40 ]
  %64 = icmp ne i32 %2, 1
  %65 = load i32, i32* %28, align 4
  %66 = and i32 %65, 96
  %67 = icmp eq i32 %66, 64
  %68 = or i1 %64, %67
  %69 = or i32 %65, 96
  %70 = and i32 %65, -97
  %71 = or i32 %70, 64
  %72 = select i1 %68, i32 %71, i32 %69
  store i32 %72, i32* %28, align 4
  %73 = getelementptr inbounds %"class.v8::internal::compiler::TopLevelLiveRange", %"class.v8::internal::compiler::TopLevelLiveRange"* %5, i64 0, i32 1
  %74 = load i32, i32* %73, align 4
  %75 = sext i32 %74 to i64
  %76 = getelementptr inbounds %"class.v8::internal::compiler::TopTierRegisterAllocationData", %"class.v8::internal::compiler::TopTierRegisterAllocationData"* %41, i64 0, i32 14, i32 0, i32 0, i32 0
  %77 = load %"class.v8::internal::compiler::SpillRange"**, %"class.v8::internal::compiler::SpillRange"*** %76, align 8
  %78 = getelementptr inbounds %"class.v8::internal::compiler::SpillRange"*, %"class.v8::internal::compiler::SpillRange"** %77, i64 %75
  store %"class.v8::internal::compiler::SpillRange"* %63, %"class.v8::internal::compiler::SpillRange"** %78, align 8
  br label %79

79:                                               ; preds = %62, %27
  %80 = icmp eq i32 %2, 0
  br i1 %80, label %81, label %97

81:                                               ; preds = %79
  %82 = load i32, i32* %28, align 4
  %83 = and i32 %82, 96
  %84 = icmp eq i32 %83, 96
  br i1 %84, label %85, label %97

85:                                               ; preds = %81
  %86 = load %"class.v8::internal::compiler::TopTierRegisterAllocationData"*, %"class.v8::internal::compiler::TopTierRegisterAllocationData"** %6, align 8
  %87 = getelementptr inbounds %"class.v8::internal::compiler::TopTierRegisterAllocationData", %"class.v8::internal::compiler::TopTierRegisterAllocationData"* %86, i64 0, i32 23, i32 0
  %88 = load i32, i32* %87, align 4
  %89 = and i32 %88, 1
  %90 = icmp eq i32 %89, 0
  br i1 %90, label %93, label %91

91:                                               ; preds = %85
  tail call void (i8*, ...) @_ZN2v88internal6PrintFEPKcz(i8* getelementptr inbounds ([11 x i8], [11 x i8]* @.str.56, i64 0, i64 0)) #16
  %92 = load i32, i32* %28, align 4
  br label %93

93:                                               ; preds = %85, %91
  %94 = phi i32 [ %82, %85 ], [ %92, %91 ]
  %95 = and i32 %94, -97
  %96 = or i32 %95, 64
  store i32 %96, i32* %28, align 4
  br label %97

97:                                               ; preds = %79, %81, %93
  %98 = load %"class.v8::internal::compiler::TopTierRegisterAllocationData"*, %"class.v8::internal::compiler::TopTierRegisterAllocationData"** %6, align 8
  %99 = getelementptr inbounds %"class.v8::internal::compiler::TopTierRegisterAllocationData", %"class.v8::internal::compiler::TopTierRegisterAllocationData"* %98, i64 0, i32 23, i32 0
  %100 = load i32, i32* %99, align 4
  %101 = and i32 %100, 1
  %102 = icmp eq i32 %101, 0
  br i1 %102, label %107, label %103

103:                                              ; preds = %97
  %104 = load i32, i32* %28, align 4
  %105 = lshr i32 %104, 5
  %106 = and i32 %105, 3
  tail call void (i8*, ...) @_ZN2v88internal6PrintFEPKcz(i8* getelementptr inbounds ([24 x i8], [24 x i8]* @.str.57, i64 0, i64 0), i32 %106) #16
  br label %107

107:                                              ; preds = %97, %103
  %108 = getelementptr inbounds %"class.v8::internal::compiler::LiveRange", %"class.v8::internal::compiler::LiveRange"* %1, i64 0, i32 1
  %109 = load i32, i32* %108, align 4
  %110 = and i32 %109, -8066
  %111 = or i32 %110, 4097
  store i32 %111, i32* %108, align 4
  ret void
}

; Function Attrs: nounwind ssp uwtable
define hidden i32 @_ZN2v88internal8compiler17RegisterAllocator19FindOptimalSplitPosENS1_16LifetimePositionES3_(%"class.v8::internal::compiler::RegisterAllocator"* nocapture readonly, i32, i32) local_unnamed_addr #0 align 2 {
  %4 = sdiv i32 %1, 4
  %5 = sdiv i32 %2, 4
  %6 = icmp eq i32 %4, %5
  br i1 %6, label %63, label %7

7:                                                ; preds = %3
  %8 = getelementptr inbounds %"class.v8::internal::compiler::RegisterAllocator", %"class.v8::internal::compiler::RegisterAllocator"* %0, i64 0, i32 0
  %9 = load %"class.v8::internal::compiler::TopTierRegisterAllocationData"*, %"class.v8::internal::compiler::TopTierRegisterAllocationData"** %8, align 8
  %10 = getelementptr inbounds %"class.v8::internal::compiler::TopTierRegisterAllocationData", %"class.v8::internal::compiler::TopTierRegisterAllocationData"* %9, i64 0, i32 3
  %11 = load %"class.v8::internal::compiler::InstructionSequence"*, %"class.v8::internal::compiler::InstructionSequence"** %10, align 8
  %12 = tail call %"class.v8::internal::compiler::InstructionBlock"* @_ZNK2v88internal8compiler19InstructionSequence19GetInstructionBlockEi(%"class.v8::internal::compiler::InstructionSequence"* %11, i32 %4) #16
  %13 = load %"class.v8::internal::compiler::TopTierRegisterAllocationData"*, %"class.v8::internal::compiler::TopTierRegisterAllocationData"** %8, align 8
  %14 = getelementptr inbounds %"class.v8::internal::compiler::TopTierRegisterAllocationData", %"class.v8::internal::compiler::TopTierRegisterAllocationData"* %13, i64 0, i32 3
  %15 = load %"class.v8::internal::compiler::InstructionSequence"*, %"class.v8::internal::compiler::InstructionSequence"** %14, align 8
  %16 = tail call %"class.v8::internal::compiler::InstructionBlock"* @_ZNK2v88internal8compiler19InstructionSequence19GetInstructionBlockEi(%"class.v8::internal::compiler::InstructionSequence"* %15, i32 %5) #16
  %17 = icmp eq %"class.v8::internal::compiler::InstructionBlock"* %16, %12
  br i1 %17, label %63, label %18

18:                                               ; preds = %7
  %19 = getelementptr inbounds %"class.v8::internal::compiler::InstructionBlock", %"class.v8::internal::compiler::InstructionBlock"* %12, i64 0, i32 4, i32 0
  br label %20

20:                                               ; preds = %18, %48
  %21 = phi %"class.v8::internal::compiler::InstructionBlock"* [ %46, %48 ], [ %16, %18 ]
  %22 = getelementptr %"class.v8::internal::compiler::InstructionBlock", %"class.v8::internal::compiler::InstructionBlock"* %21, i64 0, i32 5, i32 0
  %23 = load i32, i32* %22, align 8
  %24 = icmp sgt i32 %23, -1
  br i1 %24, label %25, label %53

25:                                               ; preds = %20
  %26 = load %"class.v8::internal::compiler::TopTierRegisterAllocationData"*, %"class.v8::internal::compiler::TopTierRegisterAllocationData"** %8, align 8
  %27 = getelementptr inbounds %"class.v8::internal::compiler::TopTierRegisterAllocationData", %"class.v8::internal::compiler::TopTierRegisterAllocationData"* %26, i64 0, i32 3
  %28 = load %"class.v8::internal::compiler::InstructionSequence"*, %"class.v8::internal::compiler::InstructionSequence"** %27, align 8
  %29 = getelementptr inbounds %"class.v8::internal::compiler::InstructionSequence", %"class.v8::internal::compiler::InstructionSequence"* %28, i64 0, i32 2
  %30 = bitcast %"class.v8::internal::ZoneVector.1170"** %29 to %"class.std::__1::vector.1171"**
  %31 = load %"class.std::__1::vector.1171"*, %"class.std::__1::vector.1171"** %30, align 8
  %32 = sext i32 %23 to i64
  %33 = getelementptr inbounds %"class.std::__1::vector.1171", %"class.std::__1::vector.1171"* %31, i64 0, i32 0, i32 1
  %34 = bitcast %"class.v8::internal::compiler::InstructionBlock"*** %33 to i64*
  %35 = load i64, i64* %34, align 8
  %36 = bitcast %"class.std::__1::vector.1171"* %31 to i64*
  %37 = load i64, i64* %36, align 8
  %38 = sub i64 %35, %37
  %39 = ashr exact i64 %38, 3
  %40 = icmp ugt i64 %39, %32
  br i1 %40, label %43, label %41

41:                                               ; preds = %25
  %42 = bitcast %"class.std::__1::vector.1171"* %31 to %"class.std::__1::__vector_base_common"*
  tail call void @_ZNKSt3__120__vector_base_commonILb1EE20__throw_out_of_rangeEv(%"class.std::__1::__vector_base_common"* %42) #17
  unreachable

43:                                               ; preds = %25
  %44 = inttoptr i64 %37 to %"class.v8::internal::compiler::InstructionBlock"**
  %45 = getelementptr inbounds %"class.v8::internal::compiler::InstructionBlock"*, %"class.v8::internal::compiler::InstructionBlock"** %44, i64 %32
  %46 = load %"class.v8::internal::compiler::InstructionBlock"*, %"class.v8::internal::compiler::InstructionBlock"** %45, align 8
  %47 = icmp eq %"class.v8::internal::compiler::InstructionBlock"* %46, null
  br i1 %47, label %53, label %48

48:                                               ; preds = %43
  %49 = getelementptr inbounds %"class.v8::internal::compiler::InstructionBlock", %"class.v8::internal::compiler::InstructionBlock"* %46, i64 0, i32 4, i32 0
  %50 = load i32, i32* %49, align 4
  %51 = load i32, i32* %19, align 4
  %52 = icmp sgt i32 %50, %51
  br i1 %52, label %20, label %53

53:                                               ; preds = %20, %43, %48
  %54 = icmp eq %"class.v8::internal::compiler::InstructionBlock"* %21, %16
  br i1 %54, label %55, label %59

55:                                               ; preds = %53
  %56 = getelementptr inbounds %"class.v8::internal::compiler::InstructionBlock", %"class.v8::internal::compiler::InstructionBlock"* %16, i64 0, i32 6, i32 0
  %57 = load i32, i32* %56, align 4
  %58 = icmp sgt i32 %57, -1
  br i1 %58, label %59, label %63

59:                                               ; preds = %55, %53
  %60 = getelementptr inbounds %"class.v8::internal::compiler::InstructionBlock", %"class.v8::internal::compiler::InstructionBlock"* %21, i64 0, i32 8
  %61 = load i32, i32* %60, align 4
  %62 = shl nsw i32 %61, 2
  br label %63

63:                                               ; preds = %55, %7, %3, %59
  %64 = phi i32 [ %62, %59 ], [ %2, %3 ], [ %2, %7 ], [ %2, %55 ]
  ret i32 %64
}

; Function Attrs: nounwind ssp uwtable
define hidden %"class.v8::internal::compiler::LiveRange"* @_ZN2v88internal8compiler17RegisterAllocator12SplitRangeAtEPNS1_9LiveRangeENS1_16LifetimePositionE(%"class.v8::internal::compiler::RegisterAllocator"* nocapture readonly, %"class.v8::internal::compiler::LiveRange"*, i32) local_unnamed_addr #0 align 2 {
  %4 = getelementptr inbounds %"class.v8::internal::compiler::RegisterAllocator", %"class.v8::internal::compiler::RegisterAllocator"* %0, i64 0, i32 0
  %5 = load %"class.v8::internal::compiler::TopTierRegisterAllocationData"*, %"class.v8::internal::compiler::TopTierRegisterAllocationData"** %4, align 8
  %6 = getelementptr inbounds %"class.v8::internal::compiler::TopTierRegisterAllocationData", %"class.v8::internal::compiler::TopTierRegisterAllocationData"* %5, i64 0, i32 23, i32 0
  %7 = load i32, i32* %6, align 4
  %8 = and i32 %7, 1
  %9 = icmp eq i32 %8, 0
  br i1 %9, label %17, label %10

10:                                               ; preds = %3
  %11 = getelementptr inbounds %"class.v8::internal::compiler::LiveRange", %"class.v8::internal::compiler::LiveRange"* %1, i64 0, i32 5
  %12 = load %"class.v8::internal::compiler::TopLevelLiveRange"*, %"class.v8::internal::compiler::TopLevelLiveRange"** %11, align 8
  %13 = getelementptr inbounds %"class.v8::internal::compiler::TopLevelLiveRange", %"class.v8::internal::compiler::TopLevelLiveRange"* %12, i64 0, i32 1
  %14 = load i32, i32* %13, align 4
  %15 = getelementptr inbounds %"class.v8::internal::compiler::LiveRange", %"class.v8::internal::compiler::LiveRange"* %1, i64 0, i32 0
  %16 = load i32, i32* %15, align 8
  tail call void (i8*, ...) @_ZN2v88internal6PrintFEPKcz(i8* getelementptr inbounds ([34 x i8], [34 x i8]* @.str.51, i64 0, i64 0), i32 %14, i32 %16, i32 %2) #16
  br label %17

17:                                               ; preds = %3, %10
  %18 = getelementptr inbounds %"class.v8::internal::compiler::LiveRange", %"class.v8::internal::compiler::LiveRange"* %1, i64 0, i32 3
  %19 = load %"class.v8::internal::compiler::UseInterval"*, %"class.v8::internal::compiler::UseInterval"** %18, align 8
  %20 = getelementptr inbounds %"class.v8::internal::compiler::UseInterval", %"class.v8::internal::compiler::UseInterval"* %19, i64 0, i32 0, i32 0
  %21 = load i32, i32* %20, align 8
  %22 = icmp slt i32 %21, %2
  br i1 %22, label %23, label %71

23:                                               ; preds = %17
  %24 = load %"class.v8::internal::compiler::TopTierRegisterAllocationData"*, %"class.v8::internal::compiler::TopTierRegisterAllocationData"** %4, align 8
  %25 = getelementptr inbounds %"class.v8::internal::compiler::TopTierRegisterAllocationData", %"class.v8::internal::compiler::TopTierRegisterAllocationData"* %24, i64 0, i32 1
  %26 = load %"class.v8::internal::Zone"*, %"class.v8::internal::Zone"** %25, align 8
  %27 = getelementptr inbounds %"class.v8::internal::compiler::LiveRange", %"class.v8::internal::compiler::LiveRange"* %1, i64 0, i32 5
  %28 = load %"class.v8::internal::compiler::TopLevelLiveRange"*, %"class.v8::internal::compiler::TopLevelLiveRange"** %27, align 8
  %29 = getelementptr inbounds %"class.v8::internal::compiler::TopLevelLiveRange", %"class.v8::internal::compiler::TopLevelLiveRange"* %28, i64 0, i32 2
  %30 = load i32, i32* %29, align 8
  %31 = add nsw i32 %30, 1
  store i32 %31, i32* %29, align 8
  %32 = getelementptr inbounds %"class.v8::internal::compiler::LiveRange", %"class.v8::internal::compiler::LiveRange"* %1, i64 0, i32 1
  %33 = load i32, i32* %32, align 4
  %34 = bitcast %"class.v8::internal::compiler::TopLevelLiveRange"** %27 to i64*
  %35 = load i64, i64* %34, align 8
  %36 = getelementptr inbounds %"class.v8::internal::Zone", %"class.v8::internal::Zone"* %26, i64 0, i32 2
  %37 = load i64, i64* %36, align 8
  %38 = getelementptr inbounds %"class.v8::internal::Zone", %"class.v8::internal::Zone"* %26, i64 0, i32 3
  %39 = load i64, i64* %38, align 8
  %40 = sub i64 %39, %37
  %41 = icmp ult i64 %40, 88
  br i1 %41, label %42, label %44, !prof !2

42:                                               ; preds = %23
  %43 = tail call i64 @_ZN2v88internal4Zone9NewExpandEm(%"class.v8::internal::Zone"* %26, i64 88) #16
  br label %46

44:                                               ; preds = %23
  %45 = add i64 %37, 88
  store i64 %45, i64* %36, align 8
  br label %46

46:                                               ; preds = %42, %44
  %47 = phi i64 [ %43, %42 ], [ %37, %44 ]
  %48 = inttoptr i64 %47 to %"class.v8::internal::compiler::LiveRange"*
  %49 = getelementptr inbounds %"class.v8::internal::compiler::LiveRange", %"class.v8::internal::compiler::LiveRange"* %48, i64 0, i32 0
  store i32 %31, i32* %49, align 8
  %50 = getelementptr inbounds %"class.v8::internal::compiler::LiveRange", %"class.v8::internal::compiler::LiveRange"* %48, i64 0, i32 1
  %51 = getelementptr inbounds %"class.v8::internal::compiler::LiveRange", %"class.v8::internal::compiler::LiveRange"* %48, i64 0, i32 5
  %52 = getelementptr inbounds i32, i32* %50, i64 1
  %53 = bitcast i32* %52 to i8*
  tail call void @llvm.memset.p0i8.i64(i8* align 4 %53, i8 0, i64 24, i1 false) #16
  %54 = bitcast %"class.v8::internal::compiler::TopLevelLiveRange"** %51 to i64*
  store i64 %35, i64* %54, align 8
  %55 = getelementptr inbounds %"class.v8::internal::compiler::LiveRange", %"class.v8::internal::compiler::LiveRange"* %48, i64 0, i32 6
  %56 = getelementptr inbounds %"class.v8::internal::compiler::LiveRange", %"class.v8::internal::compiler::LiveRange"* %48, i64 0, i32 11, i32 0
  %57 = bitcast %"class.v8::internal::compiler::LiveRange"** %55 to i8*
  tail call void @llvm.memset.p0i8.i64(i8* align 8 %57, i8 0, i64 40, i1 false) #16
  store i32 -1, i32* %56, align 4
  %58 = and i32 %33, 2088960
  %59 = or i32 %58, 134221824
  store i32 %59, i32* %50, align 4
  %60 = getelementptr inbounds %"class.v8::internal::compiler::LiveRange", %"class.v8::internal::compiler::LiveRange"* %1, i64 0, i32 10
  %61 = bitcast %"class.v8::internal::compiler::LiveRangeBundle"** %60 to i64*
  %62 = load i64, i64* %61, align 8
  %63 = getelementptr inbounds %"class.v8::internal::compiler::LiveRange", %"class.v8::internal::compiler::LiveRange"* %48, i64 0, i32 10
  %64 = bitcast %"class.v8::internal::compiler::LiveRangeBundle"** %63 to i64*
  store i64 %62, i64* %64, align 8
  %65 = tail call %"class.v8::internal::compiler::UsePosition"* @_ZN2v88internal8compiler9LiveRange8DetachAtENS1_16LifetimePositionEPS2_PNS0_4ZoneENS2_20HintConnectionOptionE(%"class.v8::internal::compiler::LiveRange"* %1, i32 %2, %"class.v8::internal::compiler::LiveRange"* %48, %"class.v8::internal::Zone"* %26, i1 zeroext false) #16
  %66 = load i64, i64* %34, align 8
  store i64 %66, i64* %54, align 8
  %67 = getelementptr inbounds %"class.v8::internal::compiler::LiveRange", %"class.v8::internal::compiler::LiveRange"* %1, i64 0, i32 6
  %68 = bitcast %"class.v8::internal::compiler::LiveRange"** %67 to i64*
  %69 = load i64, i64* %68, align 8
  %70 = bitcast %"class.v8::internal::compiler::LiveRange"** %55 to i64*
  store i64 %69, i64* %70, align 8
  store %"class.v8::internal::compiler::LiveRange"* %48, %"class.v8::internal::compiler::LiveRange"** %67, align 8
  br label %71

71:                                               ; preds = %17, %46
  %72 = phi %"class.v8::internal::compiler::LiveRange"* [ %48, %46 ], [ %1, %17 ]
  ret %"class.v8::internal::compiler::LiveRange"* %72
}

; Function Attrs: nounwind ssp uwtable
define hidden %"class.v8::internal::compiler::LiveRange"* @_ZN2v88internal8compiler17RegisterAllocator12SplitBetweenEPNS1_9LiveRangeENS1_16LifetimePositionES5_(%"class.v8::internal::compiler::RegisterAllocator"* nocapture readonly, %"class.v8::internal::compiler::LiveRange"*, i32, i32) local_unnamed_addr #0 align 2 {
  %5 = getelementptr inbounds %"class.v8::internal::compiler::RegisterAllocator", %"class.v8::internal::compiler::RegisterAllocator"* %0, i64 0, i32 0
  %6 = load %"class.v8::internal::compiler::TopTierRegisterAllocationData"*, %"class.v8::internal::compiler::TopTierRegisterAllocationData"** %5, align 8
  %7 = getelementptr inbounds %"class.v8::internal::compiler::TopTierRegisterAllocationData", %"class.v8::internal::compiler::TopTierRegisterAllocationData"* %6, i64 0, i32 23, i32 0
  %8 = load i32, i32* %7, align 4
  %9 = and i32 %8, 1
  %10 = icmp eq i32 %9, 0
  br i1 %10, label %18, label %11

11:                                               ; preds = %4
  %12 = getelementptr inbounds %"class.v8::internal::compiler::LiveRange", %"class.v8::internal::compiler::LiveRange"* %1, i64 0, i32 5
  %13 = load %"class.v8::internal::compiler::TopLevelLiveRange"*, %"class.v8::internal::compiler::TopLevelLiveRange"** %12, align 8
  %14 = getelementptr inbounds %"class.v8::internal::compiler::TopLevelLiveRange", %"class.v8::internal::compiler::TopLevelLiveRange"* %13, i64 0, i32 1
  %15 = load i32, i32* %14, align 4
  %16 = getelementptr inbounds %"class.v8::internal::compiler::LiveRange", %"class.v8::internal::compiler::LiveRange"* %1, i64 0, i32 0
  %17 = load i32, i32* %16, align 8
  tail call void (i8*, ...) @_ZN2v88internal6PrintFEPKcz(i8* getelementptr inbounds ([57 x i8], [57 x i8]* @.str.52, i64 0, i64 0), i32 %15, i32 %17, i32 %2, i32 %3) #16
  br label %18

18:                                               ; preds = %4, %11
  %19 = tail call i32 @_ZN2v88internal8compiler17RegisterAllocator19FindOptimalSplitPosENS1_16LifetimePositionES3_(%"class.v8::internal::compiler::RegisterAllocator"* %0, i32 %2, i32 %3)
  %20 = tail call %"class.v8::internal::compiler::LiveRange"* @_ZN2v88internal8compiler17RegisterAllocator12SplitRangeAtEPNS1_9LiveRangeENS1_16LifetimePositionE(%"class.v8::internal::compiler::RegisterAllocator"* %0, %"class.v8::internal::compiler::LiveRange"* %1, i32 %19)
  ret %"class.v8::internal::compiler::LiveRange"* %20
}

; Function Attrs: nounwind ssp uwtable
define hidden i32 @_ZN2v88internal8compiler17RegisterAllocator22FindOptimalSpillingPosEPNS1_9LiveRangeENS1_16LifetimePositionENS1_29TopTierRegisterAllocationData9SpillModeEPS4_(%"class.v8::internal::compiler::RegisterAllocator"* nocapture readonly, %"class.v8::internal::compiler::LiveRange"*, i32, i32, %"class.v8::internal::compiler::LiveRange"** nocapture) local_unnamed_addr #0 align 2 {
  store %"class.v8::internal::compiler::LiveRange"* %1, %"class.v8::internal::compiler::LiveRange"** %4, align 8
  %6 = icmp eq i32 %3, 1
  br i1 %6, label %235, label %7

7:                                                ; preds = %5
  %8 = getelementptr inbounds %"class.v8::internal::compiler::RegisterAllocator", %"class.v8::internal::compiler::RegisterAllocator"* %0, i64 0, i32 0
  %9 = load %"class.v8::internal::compiler::TopTierRegisterAllocationData"*, %"class.v8::internal::compiler::TopTierRegisterAllocationData"** %8, align 8
  %10 = getelementptr inbounds %"class.v8::internal::compiler::TopTierRegisterAllocationData", %"class.v8::internal::compiler::TopTierRegisterAllocationData"* %9, i64 0, i32 3
  %11 = load %"class.v8::internal::compiler::InstructionSequence"*, %"class.v8::internal::compiler::InstructionSequence"** %10, align 8
  %12 = and i32 %2, -2
  %13 = sdiv i32 %12, 4
  %14 = tail call %"class.v8::internal::compiler::InstructionBlock"* @_ZNK2v88internal8compiler19InstructionSequence19GetInstructionBlockEi(%"class.v8::internal::compiler::InstructionSequence"* %11, i32 %13) #16
  %15 = getelementptr inbounds %"class.v8::internal::compiler::InstructionBlock", %"class.v8::internal::compiler::InstructionBlock"* %14, i64 0, i32 6, i32 0
  %16 = load i32, i32* %15, align 4
  %17 = icmp sgt i32 %16, -1
  br i1 %17, label %44, label %18

18:                                               ; preds = %7
  %19 = getelementptr %"class.v8::internal::compiler::InstructionBlock", %"class.v8::internal::compiler::InstructionBlock"* %14, i64 0, i32 5, i32 0
  %20 = load i32, i32* %19, align 8
  %21 = icmp sgt i32 %20, -1
  br i1 %21, label %22, label %235

22:                                               ; preds = %18
  %23 = load %"class.v8::internal::compiler::TopTierRegisterAllocationData"*, %"class.v8::internal::compiler::TopTierRegisterAllocationData"** %8, align 8
  %24 = getelementptr inbounds %"class.v8::internal::compiler::TopTierRegisterAllocationData", %"class.v8::internal::compiler::TopTierRegisterAllocationData"* %23, i64 0, i32 3
  %25 = load %"class.v8::internal::compiler::InstructionSequence"*, %"class.v8::internal::compiler::InstructionSequence"** %24, align 8
  %26 = getelementptr inbounds %"class.v8::internal::compiler::InstructionSequence", %"class.v8::internal::compiler::InstructionSequence"* %25, i64 0, i32 2
  %27 = bitcast %"class.v8::internal::ZoneVector.1170"** %26 to %"class.std::__1::vector.1171"**
  %28 = load %"class.std::__1::vector.1171"*, %"class.std::__1::vector.1171"** %27, align 8
  %29 = sext i32 %20 to i64
  %30 = getelementptr inbounds %"class.std::__1::vector.1171", %"class.std::__1::vector.1171"* %28, i64 0, i32 0, i32 1
  %31 = bitcast %"class.v8::internal::compiler::InstructionBlock"*** %30 to i64*
  %32 = load i64, i64* %31, align 8
  %33 = bitcast %"class.std::__1::vector.1171"* %28 to i64*
  %34 = load i64, i64* %33, align 8
  %35 = sub i64 %32, %34
  %36 = ashr exact i64 %35, 3
  %37 = icmp ugt i64 %36, %29
  br i1 %37, label %40, label %38

38:                                               ; preds = %22
  %39 = bitcast %"class.std::__1::vector.1171"* %28 to %"class.std::__1::__vector_base_common"*
  tail call void @_ZNKSt3__120__vector_base_commonILb1EE20__throw_out_of_rangeEv(%"class.std::__1::__vector_base_common"* %39) #17
  unreachable

40:                                               ; preds = %22
  %41 = inttoptr i64 %34 to %"class.v8::internal::compiler::InstructionBlock"**
  %42 = getelementptr inbounds %"class.v8::internal::compiler::InstructionBlock"*, %"class.v8::internal::compiler::InstructionBlock"** %41, i64 %29
  %43 = load %"class.v8::internal::compiler::InstructionBlock"*, %"class.v8::internal::compiler::InstructionBlock"** %42, align 8
  br label %44

44:                                               ; preds = %40, %7
  %45 = phi %"class.v8::internal::compiler::InstructionBlock"* [ %14, %7 ], [ %43, %40 ]
  %46 = icmp eq %"class.v8::internal::compiler::InstructionBlock"* %45, null
  br i1 %46, label %235, label %47

47:                                               ; preds = %44
  %48 = getelementptr inbounds %"class.v8::internal::compiler::LiveRange", %"class.v8::internal::compiler::LiveRange"* %1, i64 0, i32 5
  br label %49

49:                                               ; preds = %47, %230
  %50 = phi %"class.v8::internal::compiler::InstructionBlock"* [ %45, %47 ], [ %233, %230 ]
  %51 = phi i32 [ %2, %47 ], [ %208, %230 ]
  %52 = getelementptr inbounds %"class.v8::internal::compiler::InstructionBlock", %"class.v8::internal::compiler::InstructionBlock"* %50, i64 0, i32 8
  %53 = load i32, i32* %52, align 4
  %54 = shl nsw i32 %53, 2
  %55 = load %"class.v8::internal::compiler::TopLevelLiveRange"*, %"class.v8::internal::compiler::TopLevelLiveRange"** %48, align 8
  %56 = bitcast %"class.v8::internal::compiler::TopLevelLiveRange"* %55 to %"class.v8::internal::compiler::LiveRange"*
  %57 = getelementptr inbounds %"class.v8::internal::compiler::TopLevelLiveRange", %"class.v8::internal::compiler::TopLevelLiveRange"* %55, i64 0, i32 0, i32 3
  %58 = load %"class.v8::internal::compiler::UseInterval"*, %"class.v8::internal::compiler::UseInterval"** %57, align 8
  %59 = getelementptr inbounds %"class.v8::internal::compiler::UseInterval", %"class.v8::internal::compiler::UseInterval"* %58, i64 0, i32 0, i32 0
  %60 = load i32, i32* %59, align 8
  %61 = icmp sgt i32 %60, %54
  br i1 %61, label %235, label %62

62:                                               ; preds = %49
  %63 = icmp eq i32 %60, %54
  br i1 %63, label %64, label %69

64:                                               ; preds = %62
  %65 = getelementptr inbounds %"class.v8::internal::compiler::TopLevelLiveRange", %"class.v8::internal::compiler::TopLevelLiveRange"* %55, i64 0, i32 0, i32 1
  %66 = load i32, i32* %65, align 4
  %67 = and i32 %66, 536870912
  %68 = icmp eq i32 %67, 0
  br i1 %68, label %69, label %235

69:                                               ; preds = %64, %62
  %70 = getelementptr inbounds %"class.v8::internal::compiler::TopLevelLiveRange", %"class.v8::internal::compiler::TopLevelLiveRange"* %55, i64 0, i32 9
  %71 = load %"class.v8::internal::compiler::LiveRange"*, %"class.v8::internal::compiler::LiveRange"** %70, align 8
  %72 = getelementptr inbounds %"class.v8::internal::compiler::LiveRange", %"class.v8::internal::compiler::LiveRange"* %71, i64 0, i32 3
  %73 = load %"class.v8::internal::compiler::UseInterval"*, %"class.v8::internal::compiler::UseInterval"** %72, align 8
  %74 = getelementptr inbounds %"class.v8::internal::compiler::UseInterval", %"class.v8::internal::compiler::UseInterval"* %73, i64 0, i32 0, i32 0
  %75 = load i32, i32* %74, align 8
  %76 = icmp sgt i32 %75, %54
  %77 = select i1 %76, %"class.v8::internal::compiler::LiveRange"* %56, %"class.v8::internal::compiler::LiveRange"* %71
  %78 = icmp eq %"class.v8::internal::compiler::LiveRange"* %77, null
  br i1 %78, label %90, label %79

79:                                               ; preds = %69, %86
  %80 = phi %"class.v8::internal::compiler::LiveRange"* [ %88, %86 ], [ %77, %69 ]
  %81 = getelementptr inbounds %"class.v8::internal::compiler::LiveRange", %"class.v8::internal::compiler::LiveRange"* %80, i64 0, i32 2
  %82 = load %"class.v8::internal::compiler::UseInterval"*, %"class.v8::internal::compiler::UseInterval"** %81, align 8
  %83 = getelementptr inbounds %"class.v8::internal::compiler::UseInterval", %"class.v8::internal::compiler::UseInterval"* %82, i64 0, i32 1, i32 0
  %84 = load i32, i32* %83, align 4
  %85 = icmp sgt i32 %84, %54
  br i1 %85, label %92, label %86

86:                                               ; preds = %79
  %87 = getelementptr inbounds %"class.v8::internal::compiler::LiveRange", %"class.v8::internal::compiler::LiveRange"* %80, i64 0, i32 6
  %88 = load %"class.v8::internal::compiler::LiveRange"*, %"class.v8::internal::compiler::LiveRange"** %87, align 8
  %89 = icmp eq %"class.v8::internal::compiler::LiveRange"* %88, null
  br i1 %89, label %90, label %79

90:                                               ; preds = %86, %69
  %91 = phi %"class.v8::internal::compiler::LiveRange"* [ null, %69 ], [ %80, %86 ]
  store %"class.v8::internal::compiler::LiveRange"* %91, %"class.v8::internal::compiler::LiveRange"** %70, align 8
  br label %207

92:                                               ; preds = %79
  %93 = getelementptr inbounds %"class.v8::internal::compiler::LiveRange", %"class.v8::internal::compiler::LiveRange"* %80, i64 0, i32 2
  store %"class.v8::internal::compiler::LiveRange"* %80, %"class.v8::internal::compiler::LiveRange"** %70, align 8
  %94 = getelementptr inbounds %"class.v8::internal::compiler::LiveRange", %"class.v8::internal::compiler::LiveRange"* %80, i64 0, i32 3
  %95 = load %"class.v8::internal::compiler::UseInterval"*, %"class.v8::internal::compiler::UseInterval"** %94, align 8
  %96 = icmp eq %"class.v8::internal::compiler::UseInterval"* %95, null
  br i1 %96, label %207, label %97

97:                                               ; preds = %92
  %98 = getelementptr inbounds %"class.v8::internal::compiler::UseInterval", %"class.v8::internal::compiler::UseInterval"* %95, i64 0, i32 0, i32 0
  %99 = load i32, i32* %98, align 8
  %100 = icmp sgt i32 %99, %54
  br i1 %100, label %207, label %101

101:                                              ; preds = %97
  %102 = load %"class.v8::internal::compiler::UseInterval"*, %"class.v8::internal::compiler::UseInterval"** %93, align 8
  %103 = getelementptr inbounds %"class.v8::internal::compiler::UseInterval", %"class.v8::internal::compiler::UseInterval"* %102, i64 0, i32 1, i32 0
  %104 = load i32, i32* %103, align 4
  %105 = icmp sgt i32 %104, %54
  br i1 %105, label %106, label %207

106:                                              ; preds = %101
  %107 = getelementptr inbounds %"class.v8::internal::compiler::LiveRange", %"class.v8::internal::compiler::LiveRange"* %80, i64 0, i32 7
  %108 = load %"class.v8::internal::compiler::UseInterval"*, %"class.v8::internal::compiler::UseInterval"** %107, align 8
  %109 = icmp eq %"class.v8::internal::compiler::UseInterval"* %108, null
  br i1 %109, label %115, label %110

110:                                              ; preds = %106
  %111 = getelementptr inbounds %"class.v8::internal::compiler::UseInterval", %"class.v8::internal::compiler::UseInterval"* %108, i64 0, i32 0, i32 0
  %112 = load i32, i32* %111, align 8
  %113 = icmp sgt i32 %112, %54
  br i1 %113, label %114, label %115

114:                                              ; preds = %110
  store %"class.v8::internal::compiler::UseInterval"* null, %"class.v8::internal::compiler::UseInterval"** %107, align 8
  br label %115

115:                                              ; preds = %114, %110, %106
  %116 = phi %"class.v8::internal::compiler::UseInterval"** [ %94, %114 ], [ %107, %110 ], [ %94, %106 ]
  %117 = load %"class.v8::internal::compiler::UseInterval"*, %"class.v8::internal::compiler::UseInterval"** %116, align 8
  %118 = icmp eq %"class.v8::internal::compiler::UseInterval"* %117, null
  br i1 %118, label %207, label %123

119:                                              ; preds = %142
  %120 = getelementptr inbounds %"class.v8::internal::compiler::UseInterval", %"class.v8::internal::compiler::UseInterval"* %124, i64 0, i32 2
  %121 = load %"class.v8::internal::compiler::UseInterval"*, %"class.v8::internal::compiler::UseInterval"** %120, align 8
  %122 = icmp eq %"class.v8::internal::compiler::UseInterval"* %121, null
  br i1 %122, label %207, label %123

123:                                              ; preds = %115, %119
  %124 = phi %"class.v8::internal::compiler::UseInterval"* [ %121, %119 ], [ %117, %115 ]
  %125 = getelementptr inbounds %"class.v8::internal::compiler::UseInterval", %"class.v8::internal::compiler::UseInterval"* %124, i64 0, i32 0, i32 0
  %126 = load i32, i32* %125, align 8
  %127 = icmp sgt i32 %126, %54
  br i1 %127, label %139, label %128

128:                                              ; preds = %123
  %129 = load %"class.v8::internal::compiler::UseInterval"*, %"class.v8::internal::compiler::UseInterval"** %107, align 8
  %130 = icmp eq %"class.v8::internal::compiler::UseInterval"* %129, null
  br i1 %130, label %134, label %131

131:                                              ; preds = %128
  %132 = getelementptr inbounds %"class.v8::internal::compiler::UseInterval", %"class.v8::internal::compiler::UseInterval"* %129, i64 0, i32 0, i32 0
  %133 = load i32, i32* %132, align 8
  br label %134

134:                                              ; preds = %131, %128
  %135 = phi i32 [ %133, %131 ], [ -1, %128 ]
  %136 = icmp sgt i32 %126, %135
  br i1 %136, label %137, label %139

137:                                              ; preds = %134
  store %"class.v8::internal::compiler::UseInterval"* %124, %"class.v8::internal::compiler::UseInterval"** %107, align 8
  %138 = load i32, i32* %125, align 4
  br label %139

139:                                              ; preds = %137, %134, %123
  %140 = phi i32 [ %126, %123 ], [ %126, %134 ], [ %138, %137 ]
  %141 = icmp sgt i32 %140, %54
  br i1 %141, label %207, label %142

142:                                              ; preds = %139
  %143 = getelementptr inbounds %"class.v8::internal::compiler::UseInterval", %"class.v8::internal::compiler::UseInterval"* %124, i64 0, i32 1, i32 0
  %144 = load i32, i32* %143, align 4
  %145 = icmp sgt i32 %144, %54
  br i1 %145, label %146, label %119

146:                                              ; preds = %142
  %147 = icmp eq %"class.v8::internal::compiler::LiveRange"* %80, null
  br i1 %147, label %207, label %148

148:                                              ; preds = %146
  %149 = getelementptr inbounds %"class.v8::internal::compiler::LiveRange", %"class.v8::internal::compiler::LiveRange"* %80, i64 0, i32 1
  %150 = load i32, i32* %149, align 4
  %151 = and i32 %150, 1
  %152 = icmp eq i32 %151, 0
  br i1 %152, label %153, label %207

153:                                              ; preds = %148, %202
  %154 = phi %"class.v8::internal::compiler::LiveRange"* [ %204, %202 ], [ %80, %148 ]
  %155 = getelementptr inbounds %"class.v8::internal::compiler::LiveRange", %"class.v8::internal::compiler::LiveRange"* %154, i64 0, i32 3
  %156 = load %"class.v8::internal::compiler::UseInterval"*, %"class.v8::internal::compiler::UseInterval"** %155, align 8
  %157 = getelementptr inbounds %"class.v8::internal::compiler::UseInterval", %"class.v8::internal::compiler::UseInterval"* %156, i64 0, i32 0, i32 0
  %158 = load i32, i32* %157, align 8
  %159 = icmp slt i32 %158, %51
  br i1 %159, label %160, label %206

160:                                              ; preds = %153
  %161 = getelementptr inbounds %"class.v8::internal::compiler::LiveRange", %"class.v8::internal::compiler::LiveRange"* %154, i64 0, i32 8
  %162 = load %"class.v8::internal::compiler::UsePosition"*, %"class.v8::internal::compiler::UsePosition"** %161, align 8
  %163 = icmp eq %"class.v8::internal::compiler::UsePosition"* %162, null
  br i1 %163, label %168, label %164

164:                                              ; preds = %160
  %165 = getelementptr inbounds %"class.v8::internal::compiler::UsePosition", %"class.v8::internal::compiler::UsePosition"* %162, i64 0, i32 3, i32 0
  %166 = load i32, i32* %165, align 8
  %167 = icmp sgt i32 %166, %54
  br i1 %167, label %168, label %172

168:                                              ; preds = %164, %160
  %169 = getelementptr inbounds %"class.v8::internal::compiler::LiveRange", %"class.v8::internal::compiler::LiveRange"* %154, i64 0, i32 4
  %170 = load %"class.v8::internal::compiler::UsePosition"*, %"class.v8::internal::compiler::UsePosition"** %169, align 8
  %171 = icmp eq %"class.v8::internal::compiler::UsePosition"* %170, null
  br i1 %171, label %183, label %172

172:                                              ; preds = %168, %164
  %173 = phi %"class.v8::internal::compiler::UsePosition"* [ %162, %164 ], [ %170, %168 ]
  br label %174

174:                                              ; preds = %172, %179
  %175 = phi %"class.v8::internal::compiler::UsePosition"* [ %181, %179 ], [ %173, %172 ]
  %176 = getelementptr inbounds %"class.v8::internal::compiler::UsePosition", %"class.v8::internal::compiler::UsePosition"* %175, i64 0, i32 3, i32 0
  %177 = load i32, i32* %176, align 8
  %178 = icmp slt i32 %177, %54
  br i1 %178, label %179, label %184

179:                                              ; preds = %174
  %180 = getelementptr inbounds %"class.v8::internal::compiler::UsePosition", %"class.v8::internal::compiler::UsePosition"* %175, i64 0, i32 2
  %181 = load %"class.v8::internal::compiler::UsePosition"*, %"class.v8::internal::compiler::UsePosition"** %180, align 8
  %182 = icmp eq %"class.v8::internal::compiler::UsePosition"* %181, null
  br i1 %182, label %183, label %174

183:                                              ; preds = %179, %168
  store %"class.v8::internal::compiler::UsePosition"* null, %"class.v8::internal::compiler::UsePosition"** %161, align 8
  br label %202

184:                                              ; preds = %174
  store %"class.v8::internal::compiler::UsePosition"* %175, %"class.v8::internal::compiler::UsePosition"** %161, align 8
  br label %185

185:                                              ; preds = %194, %184
  %186 = phi %"class.v8::internal::compiler::UsePosition"* [ %196, %194 ], [ %175, %184 ]
  %187 = getelementptr inbounds %"class.v8::internal::compiler::UsePosition", %"class.v8::internal::compiler::UsePosition"* %186, i64 0, i32 4
  %188 = load i32, i32* %187, align 4
  %189 = and i32 %188, 3
  %190 = icmp ne i32 %189, 2
  %191 = and i32 %188, 4096
  %192 = icmp eq i32 %191, 0
  %193 = and i1 %190, %192
  br i1 %193, label %194, label %198

194:                                              ; preds = %185
  %195 = getelementptr inbounds %"class.v8::internal::compiler::UsePosition", %"class.v8::internal::compiler::UsePosition"* %186, i64 0, i32 2
  %196 = load %"class.v8::internal::compiler::UsePosition"*, %"class.v8::internal::compiler::UsePosition"** %195, align 8
  %197 = icmp eq %"class.v8::internal::compiler::UsePosition"* %196, null
  br i1 %197, label %202, label %185

198:                                              ; preds = %185
  %199 = getelementptr inbounds %"class.v8::internal::compiler::UsePosition", %"class.v8::internal::compiler::UsePosition"* %186, i64 0, i32 3, i32 0
  %200 = load i32, i32* %199, align 8
  %201 = icmp sgt i32 %200, %51
  br i1 %201, label %202, label %235

202:                                              ; preds = %194, %198, %183
  %203 = getelementptr inbounds %"class.v8::internal::compiler::LiveRange", %"class.v8::internal::compiler::LiveRange"* %154, i64 0, i32 6
  %204 = load %"class.v8::internal::compiler::LiveRange"*, %"class.v8::internal::compiler::LiveRange"** %203, align 8
  %205 = icmp eq %"class.v8::internal::compiler::LiveRange"* %204, null
  br i1 %205, label %206, label %153

206:                                              ; preds = %202, %153
  store %"class.v8::internal::compiler::LiveRange"* %80, %"class.v8::internal::compiler::LiveRange"** %4, align 8
  br label %207

207:                                              ; preds = %119, %139, %148, %115, %97, %92, %101, %90, %146, %206
  %208 = phi i32 [ %51, %146 ], [ %51, %148 ], [ %54, %206 ], [ %51, %90 ], [ %51, %101 ], [ %51, %92 ], [ %51, %97 ], [ %51, %115 ], [ %51, %139 ], [ %51, %119 ]
  %209 = getelementptr %"class.v8::internal::compiler::InstructionBlock", %"class.v8::internal::compiler::InstructionBlock"* %50, i64 0, i32 5, i32 0
  %210 = load i32, i32* %209, align 8
  %211 = icmp sgt i32 %210, -1
  br i1 %211, label %212, label %235

212:                                              ; preds = %207
  %213 = load %"class.v8::internal::compiler::TopTierRegisterAllocationData"*, %"class.v8::internal::compiler::TopTierRegisterAllocationData"** %8, align 8
  %214 = getelementptr inbounds %"class.v8::internal::compiler::TopTierRegisterAllocationData", %"class.v8::internal::compiler::TopTierRegisterAllocationData"* %213, i64 0, i32 3
  %215 = load %"class.v8::internal::compiler::InstructionSequence"*, %"class.v8::internal::compiler::InstructionSequence"** %214, align 8
  %216 = getelementptr inbounds %"class.v8::internal::compiler::InstructionSequence", %"class.v8::internal::compiler::InstructionSequence"* %215, i64 0, i32 2
  %217 = bitcast %"class.v8::internal::ZoneVector.1170"** %216 to %"class.std::__1::vector.1171"**
  %218 = load %"class.std::__1::vector.1171"*, %"class.std::__1::vector.1171"** %217, align 8
  %219 = sext i32 %210 to i64
  %220 = getelementptr inbounds %"class.std::__1::vector.1171", %"class.std::__1::vector.1171"* %218, i64 0, i32 0, i32 1
  %221 = bitcast %"class.v8::internal::compiler::InstructionBlock"*** %220 to i64*
  %222 = load i64, i64* %221, align 8
  %223 = bitcast %"class.std::__1::vector.1171"* %218 to i64*
  %224 = load i64, i64* %223, align 8
  %225 = sub i64 %222, %224
  %226 = ashr exact i64 %225, 3
  %227 = icmp ugt i64 %226, %219
  br i1 %227, label %230, label %228

228:                                              ; preds = %212
  %229 = bitcast %"class.std::__1::vector.1171"* %218 to %"class.std::__1::__vector_base_common"*
  tail call void @_ZNKSt3__120__vector_base_commonILb1EE20__throw_out_of_rangeEv(%"class.std::__1::__vector_base_common"* %229) #17
  unreachable

230:                                              ; preds = %212
  %231 = inttoptr i64 %224 to %"class.v8::internal::compiler::InstructionBlock"**
  %232 = getelementptr inbounds %"class.v8::internal::compiler::InstructionBlock"*, %"class.v8::internal::compiler::InstructionBlock"** %231, i64 %219
  %233 = load %"class.v8::internal::compiler::InstructionBlock"*, %"class.v8::internal::compiler::InstructionBlock"** %232, align 8
  %234 = icmp eq %"class.v8::internal::compiler::InstructionBlock"* %233, null
  br i1 %234, label %235, label %49

235:                                              ; preds = %207, %230, %49, %64, %198, %18, %44, %5
  %236 = phi i32 [ %2, %5 ], [ %2, %44 ], [ %2, %18 ], [ %51, %198 ], [ %208, %207 ], [ %208, %230 ], [ %51, %49 ], [ %51, %64 ]
  ret i32 %236
}

; Function Attrs: nounwind ssp uwtable
define hidden void @_ZN2v88internal8compiler19LinearScanAllocatorC2EPNS1_29TopTierRegisterAllocationDataENS1_12RegisterKindEPNS0_4ZoneE(%"class.v8::internal::compiler::LinearScanAllocator"*, %"class.v8::internal::compiler::TopTierRegisterAllocationData"*, i32, %"class.v8::internal::Zone"*) unnamed_addr #0 align 2 {
  %5 = alloca %"class.v8::internal::ZoneAllocator.1352", align 8
  %6 = alloca %"class.v8::internal::ZoneMultiset.1344", align 8
  %7 = getelementptr inbounds %"class.v8::internal::compiler::LinearScanAllocator", %"class.v8::internal::compiler::LinearScanAllocator"* %0, i64 0, i32 0, i32 0
  store %"class.v8::internal::compiler::TopTierRegisterAllocationData"* %1, %"class.v8::internal::compiler::TopTierRegisterAllocationData"** %7, align 8
  %8 = getelementptr inbounds %"class.v8::internal::compiler::LinearScanAllocator", %"class.v8::internal::compiler::LinearScanAllocator"* %0, i64 0, i32 0, i32 1
  store i32 %2, i32* %8, align 8
  %9 = getelementptr inbounds %"class.v8::internal::compiler::LinearScanAllocator", %"class.v8::internal::compiler::LinearScanAllocator"* %0, i64 0, i32 0, i32 2
  %10 = getelementptr inbounds %"class.v8::internal::compiler::TopTierRegisterAllocationData", %"class.v8::internal::compiler::TopTierRegisterAllocationData"* %1, i64 0, i32 5
  %11 = load %"class.v8::internal::RegisterConfiguration"*, %"class.v8::internal::RegisterConfiguration"** %10, align 8
  %12 = icmp eq i32 %2, 0
  %13 = getelementptr inbounds %"class.v8::internal::RegisterConfiguration", %"class.v8::internal::RegisterConfiguration"* %11, i64 0, i32 1
  %14 = getelementptr inbounds %"class.v8::internal::RegisterConfiguration", %"class.v8::internal::RegisterConfiguration"* %11, i64 0, i32 3
  %15 = select i1 %12, i32* %13, i32* %14
  %16 = load i32, i32* %15, align 8
  store i32 %16, i32* %9, align 4
  %17 = getelementptr inbounds %"class.v8::internal::compiler::LinearScanAllocator", %"class.v8::internal::compiler::LinearScanAllocator"* %0, i64 0, i32 0, i32 3
  %18 = load %"class.v8::internal::RegisterConfiguration"*, %"class.v8::internal::RegisterConfiguration"** %10, align 8
  %19 = getelementptr inbounds %"class.v8::internal::RegisterConfiguration", %"class.v8::internal::RegisterConfiguration"* %18, i64 0, i32 5
  %20 = getelementptr inbounds %"class.v8::internal::RegisterConfiguration", %"class.v8::internal::RegisterConfiguration"* %18, i64 0, i32 7
  %21 = select i1 %12, i32* %19, i32* %20
  %22 = load i32, i32* %21, align 8
  store i32 %22, i32* %17, align 8
  %23 = getelementptr inbounds %"class.v8::internal::compiler::LinearScanAllocator", %"class.v8::internal::compiler::LinearScanAllocator"* %0, i64 0, i32 0, i32 5
  %24 = load %"class.v8::internal::RegisterConfiguration"*, %"class.v8::internal::RegisterConfiguration"** %10, align 8
  %25 = getelementptr inbounds %"class.v8::internal::RegisterConfiguration", %"class.v8::internal::RegisterConfiguration"* %24, i64 0, i32 13
  %26 = getelementptr inbounds %"class.v8::internal::RegisterConfiguration", %"class.v8::internal::RegisterConfiguration"* %24, i64 0, i32 15
  %27 = select i1 %12, i32** %25, i32** %26
  %28 = bitcast i32** %27 to i64*
  %29 = load i64, i64* %28, align 8
  %30 = bitcast i32** %23 to i64*
  store i64 %29, i64* %30, align 8
  %31 = getelementptr inbounds %"class.v8::internal::compiler::LinearScanAllocator", %"class.v8::internal::compiler::LinearScanAllocator"* %0, i64 0, i32 0, i32 6
  store i8 0, i8* %31, align 8
  %32 = ptrtoint %"class.v8::internal::Zone"* %3 to i64
  %33 = getelementptr inbounds %"class.v8::internal::compiler::LinearScanAllocator", %"class.v8::internal::compiler::LinearScanAllocator"* %0, i64 0, i32 1, i32 0, i32 0, i32 0
  %34 = getelementptr inbounds %"class.v8::internal::compiler::LinearScanAllocator", %"class.v8::internal::compiler::LinearScanAllocator"* %0, i64 0, i32 1, i32 0, i32 0, i32 1, i32 1
  %35 = bitcast %"struct.std::__1::__compressed_pair_elem.0"* %34 to i64*
  %36 = getelementptr inbounds %"class.v8::internal::compiler::LinearScanAllocator", %"class.v8::internal::compiler::LinearScanAllocator"* %0, i64 0, i32 1, i32 0, i32 0, i32 1
  %37 = bitcast %"class.std::__1::__compressed_pair"* %36 to i64*
  store i64 0, i64* %37, align 8
  store i64 %32, i64* %35, align 8
  %38 = getelementptr inbounds %"class.v8::internal::compiler::LinearScanAllocator", %"class.v8::internal::compiler::LinearScanAllocator"* %0, i64 0, i32 1, i32 0, i32 0, i32 2, i32 0, i32 0
  store i64 0, i64* %38, align 8
  %39 = getelementptr inbounds %"class.v8::internal::compiler::LinearScanAllocator", %"class.v8::internal::compiler::LinearScanAllocator"* %0, i64 0, i32 1, i32 0, i32 0, i32 1, i32 0, i32 0
  store %"class.std::__1::__tree_end_node"* %39, %"class.std::__1::__tree_end_node"** %33, align 8
  %40 = getelementptr inbounds %"class.v8::internal::compiler::LinearScanAllocator", %"class.v8::internal::compiler::LinearScanAllocator"* %0, i64 0, i32 2
  %41 = getelementptr inbounds %"class.v8::internal::compiler::LinearScanAllocator", %"class.v8::internal::compiler::LinearScanAllocator"* %0, i64 0, i32 2, i32 0, i32 0, i32 2, i32 1
  %42 = bitcast %"struct.std::__1::__compressed_pair_elem.1314"* %41 to i64*
  %43 = bitcast %"class.v8::internal::ZoneVector.1309"* %40 to i8*
  tail call void @llvm.memset.p0i8.i64(i8* align 8 %43, i8 0, i64 24, i1 false) #16
  store i64 %32, i64* %42, align 8
  %44 = sext i32 %16 to i64
  %45 = getelementptr inbounds %"class.v8::internal::ZoneMultiset.1344", %"class.v8::internal::ZoneMultiset.1344"* %6, i64 0, i32 0, i32 0, i32 0
  %46 = getelementptr inbounds %"class.v8::internal::ZoneMultiset.1344", %"class.v8::internal::ZoneMultiset.1344"* %6, i64 0, i32 0, i32 0, i32 1, i32 1
  %47 = bitcast %"struct.std::__1::__compressed_pair_elem.0"* %46 to i64*
  %48 = getelementptr inbounds %"class.v8::internal::ZoneMultiset.1344", %"class.v8::internal::ZoneMultiset.1344"* %6, i64 0, i32 0, i32 0, i32 1
  %49 = bitcast %"class.std::__1::__compressed_pair"* %48 to i64*
  store i64 0, i64* %49, align 8
  store i64 %32, i64* %47, align 8
  %50 = getelementptr inbounds %"class.v8::internal::ZoneMultiset.1344", %"class.v8::internal::ZoneMultiset.1344"* %6, i64 0, i32 0, i32 0, i32 2, i32 0, i32 0
  store i64 0, i64* %50, align 8
  %51 = getelementptr inbounds %"class.v8::internal::ZoneMultiset.1344", %"class.v8::internal::ZoneMultiset.1344"* %6, i64 0, i32 0, i32 0, i32 1, i32 0, i32 0
  store %"class.std::__1::__tree_end_node"* %51, %"class.std::__1::__tree_end_node"** %45, align 8
  %52 = getelementptr inbounds %"class.v8::internal::compiler::LinearScanAllocator", %"class.v8::internal::compiler::LinearScanAllocator"* %0, i64 0, i32 3, i32 0
  %53 = bitcast %"class.v8::internal::ZoneAllocator.1352"* %5 to i8*
  call void @llvm.lifetime.start.p0i8(i64 8, i8* nonnull %53) #16
  %54 = getelementptr inbounds %"class.v8::internal::ZoneAllocator.1352", %"class.v8::internal::ZoneAllocator.1352"* %5, i64 0, i32 0
  store %"class.v8::internal::Zone"* %3, %"class.v8::internal::Zone"** %54, align 8
  call void @_ZNSt3__16vectorIN2v88internal12ZoneMultisetIPNS2_8compiler9LiveRangeENS4_19LinearScanAllocator25InactiveLiveRangeOrderingEEENS2_13ZoneAllocatorIS9_EEEC2EmRKS9_RKSB_(%"class.std::__1::vector.1342"* %52, i64 %44, %"class.v8::internal::ZoneMultiset.1344"* nonnull dereferenceable(32) %6, %"class.v8::internal::ZoneAllocator.1352"* nonnull dereferenceable(8) %5) #16
  call void @llvm.lifetime.end.p0i8(i64 8, i8* nonnull %53) #16
  %55 = getelementptr inbounds %"class.v8::internal::ZoneMultiset.1344", %"class.v8::internal::ZoneMultiset.1344"* %6, i64 0, i32 0, i32 0
  %56 = bitcast %"class.std::__1::__tree_end_node"* %51 to %"class.std::__1::__tree_node.1501"**
  %57 = load %"class.std::__1::__tree_node.1501"*, %"class.std::__1::__tree_node.1501"** %56, align 8
  call void @_ZNSt3__16__treeIPN2v88internal8compiler9LiveRangeENS3_19LinearScanAllocator25InactiveLiveRangeOrderingENS2_13ZoneAllocatorIS5_EEE7destroyEPNS_11__tree_nodeIS5_PvEE(%"class.std::__1::__tree.1346"* nonnull %55, %"class.std::__1::__tree_node.1501"* %57) #16
  %58 = getelementptr inbounds %"class.v8::internal::compiler::LinearScanAllocator", %"class.v8::internal::compiler::LinearScanAllocator"* %0, i64 0, i32 4, i32 0
  store i32 -1, i32* %58, align 8
  %59 = getelementptr inbounds %"class.v8::internal::compiler::LinearScanAllocator", %"class.v8::internal::compiler::LinearScanAllocator"* %0, i64 0, i32 5, i32 0
  store i32 -1, i32* %59, align 4
  %60 = getelementptr inbounds %"class.v8::internal::compiler::LinearScanAllocator", %"class.v8::internal::compiler::LinearScanAllocator"* %0, i64 0, i32 2, i32 0, i32 0, i32 2, i32 0, i32 0
  %61 = bitcast %"class.v8::internal::compiler::LiveRange"*** %60 to i64*
  %62 = load i64, i64* %61, align 8
  %63 = bitcast %"class.v8::internal::ZoneVector.1309"* %40 to i64*
  %64 = load i64, i64* %63, align 8
  %65 = sub i64 %62, %64
  %66 = ashr exact i64 %65, 3
  %67 = icmp ult i64 %66, 8
  br i1 %67, label %68, label %272

68:                                               ; preds = %4
  %69 = getelementptr inbounds %"class.v8::internal::compiler::LinearScanAllocator", %"class.v8::internal::compiler::LinearScanAllocator"* %0, i64 0, i32 2, i32 0, i32 0, i32 1
  %70 = bitcast %"class.v8::internal::compiler::LiveRange"*** %69 to i64*
  %71 = load i64, i64* %70, align 8
  %72 = sub i64 %71, %64
  %73 = ashr exact i64 %72, 3
  %74 = getelementptr inbounds %"class.v8::internal::compiler::LinearScanAllocator", %"class.v8::internal::compiler::LinearScanAllocator"* %0, i64 0, i32 2, i32 0, i32 0, i32 2, i32 1, i32 0, i32 0
  %75 = load %"class.v8::internal::Zone"*, %"class.v8::internal::Zone"** %74, align 8
  %76 = getelementptr inbounds %"class.v8::internal::Zone", %"class.v8::internal::Zone"* %75, i64 0, i32 2
  %77 = load i64, i64* %76, align 8
  %78 = getelementptr inbounds %"class.v8::internal::Zone", %"class.v8::internal::Zone"* %75, i64 0, i32 3
  %79 = load i64, i64* %78, align 8
  %80 = sub i64 %79, %77
  %81 = icmp ult i64 %80, 64
  br i1 %81, label %82, label %84, !prof !2

82:                                               ; preds = %68
  %83 = call i64 @_ZN2v88internal4Zone9NewExpandEm(%"class.v8::internal::Zone"* %75, i64 64) #16
  br label %86

84:                                               ; preds = %68
  %85 = add i64 %77, 64
  store i64 %85, i64* %76, align 8
  br label %86

86:                                               ; preds = %84, %82
  %87 = phi i64 [ %83, %82 ], [ %77, %84 ]
  %88 = inttoptr i64 %87 to %"class.v8::internal::compiler::LiveRange"**
  %89 = getelementptr inbounds %"class.v8::internal::compiler::LiveRange"*, %"class.v8::internal::compiler::LiveRange"** %88, i64 %73
  %90 = ptrtoint %"class.v8::internal::compiler::LiveRange"** %89 to i64
  %91 = getelementptr inbounds %"class.v8::internal::compiler::LiveRange"*, %"class.v8::internal::compiler::LiveRange"** %88, i64 8
  %92 = ptrtoint %"class.v8::internal::compiler::LiveRange"** %91 to i64
  %93 = getelementptr inbounds %"class.v8::internal::ZoneVector.1309", %"class.v8::internal::ZoneVector.1309"* %40, i64 0, i32 0, i32 0, i32 0
  %94 = load %"class.v8::internal::compiler::LiveRange"**, %"class.v8::internal::compiler::LiveRange"*** %93, align 8
  %95 = ptrtoint %"class.v8::internal::compiler::LiveRange"** %94 to i64
  %96 = load %"class.v8::internal::compiler::LiveRange"**, %"class.v8::internal::compiler::LiveRange"*** %69, align 8
  %97 = icmp eq %"class.v8::internal::compiler::LiveRange"** %96, %94
  br i1 %97, label %270, label %98

98:                                               ; preds = %86
  %99 = getelementptr %"class.v8::internal::compiler::LiveRange"*, %"class.v8::internal::compiler::LiveRange"** %96, i64 -1
  %100 = ptrtoint %"class.v8::internal::compiler::LiveRange"** %99 to i64
  %101 = sub i64 %100, %95
  %102 = lshr i64 %101, 3
  %103 = add nuw nsw i64 %102, 1
  %104 = icmp ult i64 %103, 4
  br i1 %104, label %197, label %105

105:                                              ; preds = %98
  %106 = getelementptr %"class.v8::internal::compiler::LiveRange"*, %"class.v8::internal::compiler::LiveRange"** %96, i64 -1
  %107 = ptrtoint %"class.v8::internal::compiler::LiveRange"** %106 to i64
  %108 = sub i64 %107, %95
  %109 = lshr i64 %108, 3
  %110 = xor i64 %109, -1
  %111 = add nsw i64 %73, %110
  %112 = getelementptr %"class.v8::internal::compiler::LiveRange"*, %"class.v8::internal::compiler::LiveRange"** %88, i64 %111
  %113 = xor i64 %109, -1
  %114 = getelementptr %"class.v8::internal::compiler::LiveRange"*, %"class.v8::internal::compiler::LiveRange"** %96, i64 %113
  %115 = icmp ult %"class.v8::internal::compiler::LiveRange"** %112, %96
  %116 = icmp ult %"class.v8::internal::compiler::LiveRange"** %114, %89
  %117 = and i1 %115, %116
  br i1 %117, label %197, label %118

118:                                              ; preds = %105
  %119 = and i64 %103, 4611686018427387900
  %120 = sub nsw i64 0, %119
  %121 = getelementptr %"class.v8::internal::compiler::LiveRange"*, %"class.v8::internal::compiler::LiveRange"** %89, i64 %120
  %122 = sub nsw i64 0, %119
  %123 = getelementptr %"class.v8::internal::compiler::LiveRange"*, %"class.v8::internal::compiler::LiveRange"** %96, i64 %122
  %124 = add nsw i64 %119, -4
  %125 = lshr exact i64 %124, 2
  %126 = add nuw nsw i64 %125, 1
  %127 = and i64 %126, 1
  %128 = icmp eq i64 %124, 0
  br i1 %128, label %175, label %129

129:                                              ; preds = %118
  %130 = sub nuw nsw i64 %126, %127
  %131 = getelementptr %"class.v8::internal::compiler::LiveRange"*, %"class.v8::internal::compiler::LiveRange"** %89, i64 -1
  %132 = getelementptr %"class.v8::internal::compiler::LiveRange"*, %"class.v8::internal::compiler::LiveRange"** %96, i64 -1
  %133 = getelementptr %"class.v8::internal::compiler::LiveRange"*, %"class.v8::internal::compiler::LiveRange"** %89, i64 -1
  %134 = getelementptr %"class.v8::internal::compiler::LiveRange"*, %"class.v8::internal::compiler::LiveRange"** %96, i64 -1
  br label %135

135:                                              ; preds = %135, %129
  %136 = phi i64 [ 0, %129 ], [ %170, %135 ]
  %137 = phi i64 [ %130, %129 ], [ %171, %135 ]
  %138 = sub i64 0, %136
  %139 = sub i64 0, %136
  %140 = getelementptr inbounds %"class.v8::internal::compiler::LiveRange"*, %"class.v8::internal::compiler::LiveRange"** %131, i64 %138
  %141 = getelementptr inbounds %"class.v8::internal::compiler::LiveRange"*, %"class.v8::internal::compiler::LiveRange"** %132, i64 %139
  %142 = getelementptr inbounds %"class.v8::internal::compiler::LiveRange"*, %"class.v8::internal::compiler::LiveRange"** %141, i64 -1
  %143 = bitcast %"class.v8::internal::compiler::LiveRange"** %142 to <2 x i64>*
  %144 = load <2 x i64>, <2 x i64>* %143, align 8, !alias.scope !118
  %145 = getelementptr inbounds %"class.v8::internal::compiler::LiveRange"*, %"class.v8::internal::compiler::LiveRange"** %141, i64 -2
  %146 = getelementptr inbounds %"class.v8::internal::compiler::LiveRange"*, %"class.v8::internal::compiler::LiveRange"** %145, i64 -1
  %147 = bitcast %"class.v8::internal::compiler::LiveRange"** %146 to <2 x i64>*
  %148 = load <2 x i64>, <2 x i64>* %147, align 8, !alias.scope !118
  %149 = getelementptr inbounds %"class.v8::internal::compiler::LiveRange"*, %"class.v8::internal::compiler::LiveRange"** %140, i64 -1
  %150 = bitcast %"class.v8::internal::compiler::LiveRange"** %149 to <2 x i64>*
  store <2 x i64> %144, <2 x i64>* %150, align 8, !alias.scope !121, !noalias !118
  %151 = getelementptr inbounds %"class.v8::internal::compiler::LiveRange"*, %"class.v8::internal::compiler::LiveRange"** %140, i64 -2
  %152 = getelementptr inbounds %"class.v8::internal::compiler::LiveRange"*, %"class.v8::internal::compiler::LiveRange"** %151, i64 -1
  %153 = bitcast %"class.v8::internal::compiler::LiveRange"** %152 to <2 x i64>*
  store <2 x i64> %148, <2 x i64>* %153, align 8, !alias.scope !121, !noalias !118
  %154 = sub nuw nsw i64 -4, %136
  %155 = sub nuw nsw i64 -4, %136
  %156 = getelementptr inbounds %"class.v8::internal::compiler::LiveRange"*, %"class.v8::internal::compiler::LiveRange"** %133, i64 %154
  %157 = getelementptr inbounds %"class.v8::internal::compiler::LiveRange"*, %"class.v8::internal::compiler::LiveRange"** %134, i64 %155
  %158 = getelementptr inbounds %"class.v8::internal::compiler::LiveRange"*, %"class.v8::internal::compiler::LiveRange"** %157, i64 -1
  %159 = bitcast %"class.v8::internal::compiler::LiveRange"** %158 to <2 x i64>*
  %160 = load <2 x i64>, <2 x i64>* %159, align 8, !alias.scope !118
  %161 = getelementptr inbounds %"class.v8::internal::compiler::LiveRange"*, %"class.v8::internal::compiler::LiveRange"** %157, i64 -2
  %162 = getelementptr inbounds %"class.v8::internal::compiler::LiveRange"*, %"class.v8::internal::compiler::LiveRange"** %161, i64 -1
  %163 = bitcast %"class.v8::internal::compiler::LiveRange"** %162 to <2 x i64>*
  %164 = load <2 x i64>, <2 x i64>* %163, align 8, !alias.scope !118
  %165 = getelementptr inbounds %"class.v8::internal::compiler::LiveRange"*, %"class.v8::internal::compiler::LiveRange"** %156, i64 -1
  %166 = bitcast %"class.v8::internal::compiler::LiveRange"** %165 to <2 x i64>*
  store <2 x i64> %160, <2 x i64>* %166, align 8, !alias.scope !121, !noalias !118
  %167 = getelementptr inbounds %"class.v8::internal::compiler::LiveRange"*, %"class.v8::internal::compiler::LiveRange"** %156, i64 -2
  %168 = getelementptr inbounds %"class.v8::internal::compiler::LiveRange"*, %"class.v8::internal::compiler::LiveRange"** %167, i64 -1
  %169 = bitcast %"class.v8::internal::compiler::LiveRange"** %168 to <2 x i64>*
  store <2 x i64> %164, <2 x i64>* %169, align 8, !alias.scope !121, !noalias !118
  %170 = add i64 %136, 8
  %171 = add i64 %137, -2
  %172 = icmp eq i64 %171, 0
  br i1 %172, label %173, label %135, !llvm.loop !123

173:                                              ; preds = %135
  %174 = sub nuw nsw i64 -8, %136
  br label %175

175:                                              ; preds = %173, %118
  %176 = phi i64 [ 0, %118 ], [ %174, %173 ]
  %177 = icmp eq i64 %127, 0
  br i1 %177, label %195, label %178

178:                                              ; preds = %175
  %179 = getelementptr %"class.v8::internal::compiler::LiveRange"*, %"class.v8::internal::compiler::LiveRange"** %89, i64 -1
  %180 = getelementptr %"class.v8::internal::compiler::LiveRange"*, %"class.v8::internal::compiler::LiveRange"** %96, i64 -1
  %181 = getelementptr inbounds %"class.v8::internal::compiler::LiveRange"*, %"class.v8::internal::compiler::LiveRange"** %179, i64 %176
  %182 = getelementptr inbounds %"class.v8::internal::compiler::LiveRange"*, %"class.v8::internal::compiler::LiveRange"** %180, i64 %176
  %183 = getelementptr inbounds %"class.v8::internal::compiler::LiveRange"*, %"class.v8::internal::compiler::LiveRange"** %182, i64 -1
  %184 = bitcast %"class.v8::internal::compiler::LiveRange"** %183 to <2 x i64>*
  %185 = load <2 x i64>, <2 x i64>* %184, align 8, !alias.scope !118
  %186 = getelementptr inbounds %"class.v8::internal::compiler::LiveRange"*, %"class.v8::internal::compiler::LiveRange"** %182, i64 -2
  %187 = getelementptr inbounds %"class.v8::internal::compiler::LiveRange"*, %"class.v8::internal::compiler::LiveRange"** %186, i64 -1
  %188 = bitcast %"class.v8::internal::compiler::LiveRange"** %187 to <2 x i64>*
  %189 = load <2 x i64>, <2 x i64>* %188, align 8, !alias.scope !118
  %190 = getelementptr inbounds %"class.v8::internal::compiler::LiveRange"*, %"class.v8::internal::compiler::LiveRange"** %181, i64 -1
  %191 = bitcast %"class.v8::internal::compiler::LiveRange"** %190 to <2 x i64>*
  store <2 x i64> %185, <2 x i64>* %191, align 8, !alias.scope !121, !noalias !118
  %192 = getelementptr inbounds %"class.v8::internal::compiler::LiveRange"*, %"class.v8::internal::compiler::LiveRange"** %181, i64 -2
  %193 = getelementptr inbounds %"class.v8::internal::compiler::LiveRange"*, %"class.v8::internal::compiler::LiveRange"** %192, i64 -1
  %194 = bitcast %"class.v8::internal::compiler::LiveRange"** %193 to <2 x i64>*
  store <2 x i64> %189, <2 x i64>* %194, align 8, !alias.scope !121, !noalias !118
  br label %195

195:                                              ; preds = %175, %178
  %196 = icmp eq i64 %103, %119
  br i1 %196, label %267, label %197

197:                                              ; preds = %195, %105, %98
  %198 = phi %"class.v8::internal::compiler::LiveRange"** [ %89, %105 ], [ %89, %98 ], [ %121, %195 ]
  %199 = phi %"class.v8::internal::compiler::LiveRange"** [ %96, %105 ], [ %96, %98 ], [ %123, %195 ]
  %200 = getelementptr %"class.v8::internal::compiler::LiveRange"*, %"class.v8::internal::compiler::LiveRange"** %199, i64 -1
  %201 = ptrtoint %"class.v8::internal::compiler::LiveRange"** %200 to i64
  %202 = sub i64 %201, %95
  %203 = lshr i64 %202, 3
  %204 = add nuw nsw i64 %203, 1
  %205 = and i64 %204, 7
  %206 = icmp eq i64 %205, 0
  br i1 %206, label %218, label %207

207:                                              ; preds = %197, %207
  %208 = phi %"class.v8::internal::compiler::LiveRange"** [ %211, %207 ], [ %198, %197 ]
  %209 = phi %"class.v8::internal::compiler::LiveRange"** [ %212, %207 ], [ %199, %197 ]
  %210 = phi i64 [ %216, %207 ], [ %205, %197 ]
  %211 = getelementptr inbounds %"class.v8::internal::compiler::LiveRange"*, %"class.v8::internal::compiler::LiveRange"** %208, i64 -1
  %212 = getelementptr inbounds %"class.v8::internal::compiler::LiveRange"*, %"class.v8::internal::compiler::LiveRange"** %209, i64 -1
  %213 = bitcast %"class.v8::internal::compiler::LiveRange"** %212 to i64*
  %214 = load i64, i64* %213, align 8
  %215 = bitcast %"class.v8::internal::compiler::LiveRange"** %211 to i64*
  store i64 %214, i64* %215, align 8
  %216 = add i64 %210, -1
  %217 = icmp eq i64 %216, 0
  br i1 %217, label %218, label %207, !llvm.loop !124

218:                                              ; preds = %207, %197
  %219 = phi %"class.v8::internal::compiler::LiveRange"** [ undef, %197 ], [ %211, %207 ]
  %220 = phi %"class.v8::internal::compiler::LiveRange"** [ %198, %197 ], [ %211, %207 ]
  %221 = phi %"class.v8::internal::compiler::LiveRange"** [ %199, %197 ], [ %212, %207 ]
  %222 = icmp ult i64 %202, 56
  br i1 %222, label %267, label %223

223:                                              ; preds = %218, %223
  %224 = phi %"class.v8::internal::compiler::LiveRange"** [ %261, %223 ], [ %220, %218 ]
  %225 = phi %"class.v8::internal::compiler::LiveRange"** [ %262, %223 ], [ %221, %218 ]
  %226 = getelementptr inbounds %"class.v8::internal::compiler::LiveRange"*, %"class.v8::internal::compiler::LiveRange"** %224, i64 -1
  %227 = getelementptr inbounds %"class.v8::internal::compiler::LiveRange"*, %"class.v8::internal::compiler::LiveRange"** %225, i64 -1
  %228 = bitcast %"class.v8::internal::compiler::LiveRange"** %227 to i64*
  %229 = load i64, i64* %228, align 8
  %230 = bitcast %"class.v8::internal::compiler::LiveRange"** %226 to i64*
  store i64 %229, i64* %230, align 8
  %231 = getelementptr inbounds %"class.v8::internal::compiler::LiveRange"*, %"class.v8::internal::compiler::LiveRange"** %224, i64 -2
  %232 = getelementptr inbounds %"class.v8::internal::compiler::LiveRange"*, %"class.v8::internal::compiler::LiveRange"** %225, i64 -2
  %233 = bitcast %"class.v8::internal::compiler::LiveRange"** %232 to i64*
  %234 = load i64, i64* %233, align 8
  %235 = bitcast %"class.v8::internal::compiler::LiveRange"** %231 to i64*
  store i64 %234, i64* %235, align 8
  %236 = getelementptr inbounds %"class.v8::internal::compiler::LiveRange"*, %"class.v8::internal::compiler::LiveRange"** %224, i64 -3
  %237 = getelementptr inbounds %"class.v8::internal::compiler::LiveRange"*, %"class.v8::internal::compiler::LiveRange"** %225, i64 -3
  %238 = bitcast %"class.v8::internal::compiler::LiveRange"** %237 to i64*
  %239 = load i64, i64* %238, align 8
  %240 = bitcast %"class.v8::internal::compiler::LiveRange"** %236 to i64*
  store i64 %239, i64* %240, align 8
  %241 = getelementptr inbounds %"class.v8::internal::compiler::LiveRange"*, %"class.v8::internal::compiler::LiveRange"** %224, i64 -4
  %242 = getelementptr inbounds %"class.v8::internal::compiler::LiveRange"*, %"class.v8::internal::compiler::LiveRange"** %225, i64 -4
  %243 = bitcast %"class.v8::internal::compiler::LiveRange"** %242 to i64*
  %244 = load i64, i64* %243, align 8
  %245 = bitcast %"class.v8::internal::compiler::LiveRange"** %241 to i64*
  store i64 %244, i64* %245, align 8
  %246 = getelementptr inbounds %"class.v8::internal::compiler::LiveRange"*, %"class.v8::internal::compiler::LiveRange"** %224, i64 -5
  %247 = getelementptr inbounds %"class.v8::internal::compiler::LiveRange"*, %"class.v8::internal::compiler::LiveRange"** %225, i64 -5
  %248 = bitcast %"class.v8::internal::compiler::LiveRange"** %247 to i64*
  %249 = load i64, i64* %248, align 8
  %250 = bitcast %"class.v8::internal::compiler::LiveRange"** %246 to i64*
  store i64 %249, i64* %250, align 8
  %251 = getelementptr inbounds %"class.v8::internal::compiler::LiveRange"*, %"class.v8::internal::compiler::LiveRange"** %224, i64 -6
  %252 = getelementptr inbounds %"class.v8::internal::compiler::LiveRange"*, %"class.v8::internal::compiler::LiveRange"** %225, i64 -6
  %253 = bitcast %"class.v8::internal::compiler::LiveRange"** %252 to i64*
  %254 = load i64, i64* %253, align 8
  %255 = bitcast %"class.v8::internal::compiler::LiveRange"** %251 to i64*
  store i64 %254, i64* %255, align 8
  %256 = getelementptr inbounds %"class.v8::internal::compiler::LiveRange"*, %"class.v8::internal::compiler::LiveRange"** %224, i64 -7
  %257 = getelementptr inbounds %"class.v8::internal::compiler::LiveRange"*, %"class.v8::internal::compiler::LiveRange"** %225, i64 -7
  %258 = bitcast %"class.v8::internal::compiler::LiveRange"** %257 to i64*
  %259 = load i64, i64* %258, align 8
  %260 = bitcast %"class.v8::internal::compiler::LiveRange"** %256 to i64*
  store i64 %259, i64* %260, align 8
  %261 = getelementptr inbounds %"class.v8::internal::compiler::LiveRange"*, %"class.v8::internal::compiler::LiveRange"** %224, i64 -8
  %262 = getelementptr inbounds %"class.v8::internal::compiler::LiveRange"*, %"class.v8::internal::compiler::LiveRange"** %225, i64 -8
  %263 = bitcast %"class.v8::internal::compiler::LiveRange"** %262 to i64*
  %264 = load i64, i64* %263, align 8
  %265 = bitcast %"class.v8::internal::compiler::LiveRange"** %261 to i64*
  store i64 %264, i64* %265, align 8
  %266 = icmp eq %"class.v8::internal::compiler::LiveRange"** %262, %94
  br i1 %266, label %267, label %223, !llvm.loop !125

267:                                              ; preds = %218, %223, %195
  %268 = phi %"class.v8::internal::compiler::LiveRange"** [ %121, %195 ], [ %219, %218 ], [ %261, %223 ]
  %269 = ptrtoint %"class.v8::internal::compiler::LiveRange"** %268 to i64
  br label %270

270:                                              ; preds = %267, %86
  %271 = phi i64 [ %269, %267 ], [ %90, %86 ]
  store i64 %271, i64* %63, align 8
  store i64 %90, i64* %70, align 8
  store i64 %92, i64* %61, align 8
  br label %272

272:                                              ; preds = %4, %270
  ret void
}

; Function Attrs: nounwind ssp uwtable
define hidden void @_ZN2v88internal8compiler19LinearScanAllocator24MaybeSpillPreviousRangesEPNS1_9LiveRangeENS1_16LifetimePositionES4_(%"class.v8::internal::compiler::LinearScanAllocator"* nocapture readonly, %"class.v8::internal::compiler::LiveRange"*, i32, %"class.v8::internal::compiler::LiveRange"* readnone) local_unnamed_addr #0 align 2 {
  %5 = icmp eq %"class.v8::internal::compiler::LiveRange"* %1, %3
  br i1 %5, label %31, label %6

6:                                                ; preds = %4
  %7 = getelementptr inbounds %"class.v8::internal::compiler::LiveRange", %"class.v8::internal::compiler::LiveRange"* %1, i64 0, i32 1
  %8 = load i32, i32* %7, align 4
  %9 = and i32 %8, 1
  %10 = icmp eq i32 %9, 0
  br i1 %10, label %11, label %14

11:                                               ; preds = %6
  %12 = bitcast %"class.v8::internal::compiler::LinearScanAllocator"* %0 to %"class.v8::internal::compiler::RegisterAllocator"*
  %13 = tail call %"class.v8::internal::compiler::LiveRange"* @_ZN2v88internal8compiler17RegisterAllocator12SplitRangeAtEPNS1_9LiveRangeENS1_16LifetimePositionE(%"class.v8::internal::compiler::RegisterAllocator"* %12, %"class.v8::internal::compiler::LiveRange"* %1, i32 %2) #16
  tail call void @_ZN2v88internal8compiler17RegisterAllocator5SpillEPNS1_9LiveRangeENS1_29TopTierRegisterAllocationData9SpillModeE(%"class.v8::internal::compiler::RegisterAllocator"* %12, %"class.v8::internal::compiler::LiveRange"* %13, i32 0) #16
  br label %14

14:                                               ; preds = %6, %11
  %15 = getelementptr inbounds %"class.v8::internal::compiler::LiveRange", %"class.v8::internal::compiler::LiveRange"* %1, i64 0, i32 6
  %16 = load %"class.v8::internal::compiler::LiveRange"*, %"class.v8::internal::compiler::LiveRange"** %15, align 8
  %17 = icmp eq %"class.v8::internal::compiler::LiveRange"* %16, %3
  br i1 %17, label %31, label %18

18:                                               ; preds = %14, %27
  %19 = phi %"class.v8::internal::compiler::LiveRange"* [ %29, %27 ], [ %16, %14 ]
  %20 = getelementptr inbounds %"class.v8::internal::compiler::LiveRange", %"class.v8::internal::compiler::LiveRange"* %19, i64 0, i32 1
  %21 = load i32, i32* %20, align 4
  %22 = and i32 %21, 1
  %23 = icmp eq i32 %22, 0
  br i1 %23, label %24, label %27

24:                                               ; preds = %18
  %25 = and i32 %21, -8066
  %26 = or i32 %25, 4097
  store i32 %26, i32* %20, align 4
  br label %27

27:                                               ; preds = %18, %24
  %28 = getelementptr inbounds %"class.v8::internal::compiler::LiveRange", %"class.v8::internal::compiler::LiveRange"* %19, i64 0, i32 6
  %29 = load %"class.v8::internal::compiler::LiveRange"*, %"class.v8::internal::compiler::LiveRange"** %28, align 8
  %30 = icmp eq %"class.v8::internal::compiler::LiveRange"* %29, %3
  br i1 %30, label %31, label %18

31:                                               ; preds = %27, %14, %4
  ret void
}

; Function Attrs: nounwind ssp uwtable
define hidden void @_ZN2v88internal8compiler19LinearScanAllocator10SpillAfterEPNS1_9LiveRangeENS1_16LifetimePositionENS1_29TopTierRegisterAllocationData9SpillModeE(%"class.v8::internal::compiler::LinearScanAllocator"* nocapture readonly, %"class.v8::internal::compiler::LiveRange"*, i32, i32) local_unnamed_addr #0 align 2 {
  %5 = bitcast %"class.v8::internal::compiler::LinearScanAllocator"* %0 to %"class.v8::internal::compiler::RegisterAllocator"*
  %6 = tail call %"class.v8::internal::compiler::LiveRange"* @_ZN2v88internal8compiler17RegisterAllocator12SplitRangeAtEPNS1_9LiveRangeENS1_16LifetimePositionE(%"class.v8::internal::compiler::RegisterAllocator"* %5, %"class.v8::internal::compiler::LiveRange"* %1, i32 %2)
  tail call void @_ZN2v88internal8compiler17RegisterAllocator5SpillEPNS1_9LiveRangeENS1_29TopTierRegisterAllocationData9SpillModeE(%"class.v8::internal::compiler::RegisterAllocator"* %5, %"class.v8::internal::compiler::LiveRange"* %6, i32 %3)
  ret void
}

; Function Attrs: nounwind ssp uwtable
define hidden void @_ZN2v88internal8compiler19LinearScanAllocator22MaybeUndoPreviousSplitEPNS1_9LiveRangeE(%"class.v8::internal::compiler::LinearScanAllocator"*, %"class.v8::internal::compiler::LiveRange"* nocapture) local_unnamed_addr #0 align 2 {
  %3 = alloca %"class.v8::internal::compiler::LiveRange"*, align 8
  %4 = getelementptr inbounds %"class.v8::internal::compiler::LiveRange", %"class.v8::internal::compiler::LiveRange"* %1, i64 0, i32 6
  %5 = load %"class.v8::internal::compiler::LiveRange"*, %"class.v8::internal::compiler::LiveRange"** %4, align 8
  %6 = icmp eq %"class.v8::internal::compiler::LiveRange"* %5, null
  br i1 %6, label %144, label %7

7:                                                ; preds = %2
  %8 = getelementptr inbounds %"class.v8::internal::compiler::LiveRange", %"class.v8::internal::compiler::LiveRange"* %5, i64 0, i32 1
  %9 = load i32, i32* %8, align 4
  %10 = and i32 %9, 2097152
  %11 = icmp eq i32 %10, 0
  br i1 %11, label %128, label %12

12:                                               ; preds = %7
  %13 = bitcast %"class.v8::internal::compiler::LiveRange"** %3 to i8*
  call void @llvm.lifetime.start.p0i8(i64 8, i8* nonnull %13) #16
  store %"class.v8::internal::compiler::LiveRange"* %5, %"class.v8::internal::compiler::LiveRange"** %3, align 8
  %14 = getelementptr inbounds %"class.v8::internal::compiler::LinearScanAllocator", %"class.v8::internal::compiler::LinearScanAllocator"* %0, i64 0, i32 0, i32 0
  %15 = load %"class.v8::internal::compiler::TopTierRegisterAllocationData"*, %"class.v8::internal::compiler::TopTierRegisterAllocationData"** %14, align 8
  %16 = getelementptr inbounds %"class.v8::internal::compiler::TopTierRegisterAllocationData", %"class.v8::internal::compiler::TopTierRegisterAllocationData"* %15, i64 0, i32 23, i32 0
  %17 = load i32, i32* %16, align 4
  %18 = and i32 %17, 1
  %19 = icmp eq i32 %18, 0
  br i1 %19, label %29, label %20

20:                                               ; preds = %12
  %21 = getelementptr inbounds %"class.v8::internal::compiler::LiveRange", %"class.v8::internal::compiler::LiveRange"* %1, i64 0, i32 5
  %22 = load %"class.v8::internal::compiler::TopLevelLiveRange"*, %"class.v8::internal::compiler::TopLevelLiveRange"** %21, align 8
  %23 = getelementptr inbounds %"class.v8::internal::compiler::TopLevelLiveRange", %"class.v8::internal::compiler::TopLevelLiveRange"* %22, i64 0, i32 1
  %24 = load i32, i32* %23, align 4
  %25 = getelementptr inbounds %"class.v8::internal::compiler::LiveRange", %"class.v8::internal::compiler::LiveRange"* %1, i64 0, i32 0
  %26 = load i32, i32* %25, align 8
  %27 = getelementptr inbounds %"class.v8::internal::compiler::LiveRange", %"class.v8::internal::compiler::LiveRange"* %5, i64 0, i32 0
  %28 = load i32, i32* %27, align 8
  tail call void (i8*, ...) @_ZN2v88internal6PrintFEPKcz(i8* getelementptr inbounds ([27 x i8], [27 x i8]* @.str.59, i64 0, i64 0), i32 %24, i32 %26, i32 %28) #16
  br label %29

29:                                               ; preds = %12, %20
  %30 = getelementptr inbounds %"class.v8::internal::compiler::LinearScanAllocator", %"class.v8::internal::compiler::LinearScanAllocator"* %0, i64 0, i32 1, i32 0
  %31 = getelementptr inbounds %"class.std::__1::multiset", %"class.std::__1::multiset"* %30, i64 0, i32 0
  %32 = call { %"class.std::__1::__tree_end_node"*, %"class.std::__1::__tree_end_node"* } @_ZNSt3__16__treeIPN2v88internal8compiler9LiveRangeENS3_19LinearScanAllocator26UnhandledLiveRangeOrderingENS2_13ZoneAllocatorIS5_EEE19__equal_range_multiIS5_EENS_4pairINS_15__tree_iteratorIS5_PNS_11__tree_nodeIS5_PvEElEESI_EERKT_(%"class.std::__1::__tree.1338"* %31, %"class.v8::internal::compiler::LiveRange"** nonnull dereferenceable(8) %3) #16
  %33 = extractvalue { %"class.std::__1::__tree_end_node"*, %"class.std::__1::__tree_end_node"* } %32, 0
  %34 = extractvalue { %"class.std::__1::__tree_end_node"*, %"class.std::__1::__tree_end_node"* } %32, 1
  %35 = icmp eq %"class.std::__1::__tree_end_node"* %33, %34
  br i1 %35, label %82, label %36

36:                                               ; preds = %29
  %37 = getelementptr inbounds %"class.std::__1::multiset", %"class.std::__1::multiset"* %30, i64 0, i32 0, i32 0
  %38 = bitcast %"class.std::__1::multiset"* %30 to i64*
  %39 = getelementptr inbounds %"class.v8::internal::compiler::LinearScanAllocator", %"class.v8::internal::compiler::LinearScanAllocator"* %0, i64 0, i32 1, i32 0, i32 0, i32 2, i32 0, i32 0
  %40 = getelementptr inbounds %"class.v8::internal::compiler::LinearScanAllocator", %"class.v8::internal::compiler::LinearScanAllocator"* %0, i64 0, i32 1, i32 0, i32 0, i32 1, i32 0, i32 0, i32 0
  br label %41

41:                                               ; preds = %76, %36
  %42 = phi %"class.std::__1::__tree_end_node"* [ %33, %36 ], [ %71, %76 ]
  %43 = getelementptr inbounds %"class.std::__1::__tree_end_node", %"class.std::__1::__tree_end_node"* %42, i64 1, i32 0
  %44 = load %"class.std::__1::__tree_node_base"*, %"class.std::__1::__tree_node_base"** %43, align 8
  %45 = icmp eq %"class.std::__1::__tree_node_base"* %44, null
  br i1 %45, label %46, label %54

46:                                               ; preds = %41
  %47 = bitcast %"class.std::__1::__tree_end_node"* %42 to %"class.std::__1::__tree_node_base"*
  %48 = getelementptr inbounds %"class.std::__1::__tree_end_node", %"class.std::__1::__tree_end_node"* %42, i64 2
  %49 = bitcast %"class.std::__1::__tree_end_node"* %48 to %"class.std::__1::__tree_end_node"**
  %50 = load %"class.std::__1::__tree_end_node"*, %"class.std::__1::__tree_end_node"** %49, align 8
  %51 = getelementptr inbounds %"class.std::__1::__tree_end_node", %"class.std::__1::__tree_end_node"* %50, i64 0, i32 0
  %52 = load %"class.std::__1::__tree_node_base"*, %"class.std::__1::__tree_node_base"** %51, align 8
  %53 = icmp eq %"class.std::__1::__tree_node_base"* %52, %47
  br i1 %53, label %70, label %61

54:                                               ; preds = %41, %54
  %55 = phi %"class.std::__1::__tree_node_base"* [ %57, %54 ], [ %44, %41 ]
  %56 = getelementptr inbounds %"class.std::__1::__tree_node_base", %"class.std::__1::__tree_node_base"* %55, i64 0, i32 0, i32 0
  %57 = load %"class.std::__1::__tree_node_base"*, %"class.std::__1::__tree_node_base"** %56, align 8
  %58 = icmp eq %"class.std::__1::__tree_node_base"* %57, null
  br i1 %58, label %59, label %54

59:                                               ; preds = %54
  %60 = getelementptr inbounds %"class.std::__1::__tree_node_base", %"class.std::__1::__tree_node_base"* %55, i64 0, i32 0
  br label %70

61:                                               ; preds = %46, %61
  %62 = phi %"class.std::__1::__tree_end_node"** [ %65, %61 ], [ %49, %46 ]
  %63 = bitcast %"class.std::__1::__tree_end_node"** %62 to %"class.std::__1::__tree_node_base"**
  %64 = load %"class.std::__1::__tree_node_base"*, %"class.std::__1::__tree_node_base"** %63, align 8
  %65 = getelementptr inbounds %"class.std::__1::__tree_node_base", %"class.std::__1::__tree_node_base"* %64, i64 0, i32 2
  %66 = load %"class.std::__1::__tree_end_node"*, %"class.std::__1::__tree_end_node"** %65, align 8
  %67 = getelementptr inbounds %"class.std::__1::__tree_end_node", %"class.std::__1::__tree_end_node"* %66, i64 0, i32 0
  %68 = load %"class.std::__1::__tree_node_base"*, %"class.std::__1::__tree_node_base"** %67, align 8
  %69 = icmp eq %"class.std::__1::__tree_node_base"* %68, %64
  br i1 %69, label %70, label %61

70:                                               ; preds = %61, %59, %46
  %71 = phi %"class.std::__1::__tree_end_node"* [ %60, %59 ], [ %50, %46 ], [ %66, %61 ]
  %72 = load %"class.std::__1::__tree_end_node"*, %"class.std::__1::__tree_end_node"** %37, align 8
  %73 = icmp eq %"class.std::__1::__tree_end_node"* %72, %42
  br i1 %73, label %74, label %76

74:                                               ; preds = %70
  %75 = ptrtoint %"class.std::__1::__tree_end_node"* %71 to i64
  store i64 %75, i64* %38, align 8
  br label %76

76:                                               ; preds = %74, %70
  %77 = load i64, i64* %39, align 8
  %78 = add i64 %77, -1
  store i64 %78, i64* %39, align 8
  %79 = load %"class.std::__1::__tree_node_base"*, %"class.std::__1::__tree_node_base"** %40, align 8
  %80 = bitcast %"class.std::__1::__tree_end_node"* %42 to %"class.std::__1::__tree_node_base"*
  call void @_ZNSt3__113__tree_removeIPNS_16__tree_node_baseIPvEEEEvT_S5_(%"class.std::__1::__tree_node_base"* %79, %"class.std::__1::__tree_node_base"* %80) #16
  %81 = icmp eq %"class.std::__1::__tree_end_node"* %71, %34
  br i1 %81, label %82, label %41

82:                                               ; preds = %76, %29
  %83 = getelementptr inbounds %"class.v8::internal::compiler::LiveRange", %"class.v8::internal::compiler::LiveRange"* %1, i64 0, i32 2
  %84 = load %"class.v8::internal::compiler::UseInterval"*, %"class.v8::internal::compiler::UseInterval"** %83, align 8
  %85 = load %"class.v8::internal::compiler::LiveRange"*, %"class.v8::internal::compiler::LiveRange"** %4, align 8
  %86 = getelementptr inbounds %"class.v8::internal::compiler::LiveRange", %"class.v8::internal::compiler::LiveRange"* %85, i64 0, i32 3
  %87 = bitcast %"class.v8::internal::compiler::UseInterval"** %86 to i64*
  %88 = load i64, i64* %87, align 8
  %89 = getelementptr inbounds %"class.v8::internal::compiler::UseInterval", %"class.v8::internal::compiler::UseInterval"* %84, i64 0, i32 2
  %90 = bitcast %"class.v8::internal::compiler::UseInterval"** %89 to i64*
  store i64 %88, i64* %90, align 8
  %91 = load %"class.v8::internal::compiler::LiveRange"*, %"class.v8::internal::compiler::LiveRange"** %4, align 8
  %92 = getelementptr inbounds %"class.v8::internal::compiler::LiveRange", %"class.v8::internal::compiler::LiveRange"* %91, i64 0, i32 3
  store %"class.v8::internal::compiler::UseInterval"* null, %"class.v8::internal::compiler::UseInterval"** %92, align 8
  %93 = load %"class.v8::internal::compiler::LiveRange"*, %"class.v8::internal::compiler::LiveRange"** %4, align 8
  %94 = getelementptr inbounds %"class.v8::internal::compiler::LiveRange", %"class.v8::internal::compiler::LiveRange"* %93, i64 0, i32 2
  %95 = bitcast %"class.v8::internal::compiler::UseInterval"** %94 to i64*
  %96 = load i64, i64* %95, align 8
  %97 = bitcast %"class.v8::internal::compiler::UseInterval"** %83 to i64*
  store i64 %96, i64* %97, align 8
  store %"class.v8::internal::compiler::UseInterval"* null, %"class.v8::internal::compiler::UseInterval"** %94, align 8
  %98 = getelementptr inbounds %"class.v8::internal::compiler::LiveRange", %"class.v8::internal::compiler::LiveRange"* %1, i64 0, i32 4
  %99 = load %"class.v8::internal::compiler::UsePosition"*, %"class.v8::internal::compiler::UsePosition"** %98, align 8
  %100 = icmp eq %"class.v8::internal::compiler::UsePosition"* %99, null
  br i1 %100, label %101, label %107

101:                                              ; preds = %82
  %102 = load %"class.v8::internal::compiler::LiveRange"*, %"class.v8::internal::compiler::LiveRange"** %4, align 8
  %103 = getelementptr inbounds %"class.v8::internal::compiler::LiveRange", %"class.v8::internal::compiler::LiveRange"* %102, i64 0, i32 4
  %104 = bitcast %"class.v8::internal::compiler::UsePosition"** %103 to i64*
  %105 = load i64, i64* %104, align 8
  %106 = bitcast %"class.v8::internal::compiler::UsePosition"** %98 to i64*
  store i64 %105, i64* %106, align 8
  br label %120

107:                                              ; preds = %82, %107
  %108 = phi %"class.v8::internal::compiler::UsePosition"* [ %110, %107 ], [ %99, %82 ]
  %109 = getelementptr inbounds %"class.v8::internal::compiler::UsePosition", %"class.v8::internal::compiler::UsePosition"* %108, i64 0, i32 2
  %110 = load %"class.v8::internal::compiler::UsePosition"*, %"class.v8::internal::compiler::UsePosition"** %109, align 8
  %111 = icmp eq %"class.v8::internal::compiler::UsePosition"* %110, null
  br i1 %111, label %112, label %107

112:                                              ; preds = %107
  %113 = getelementptr inbounds %"class.v8::internal::compiler::UsePosition", %"class.v8::internal::compiler::UsePosition"* %108, i64 0, i32 2
  %114 = load %"class.v8::internal::compiler::LiveRange"*, %"class.v8::internal::compiler::LiveRange"** %4, align 8
  %115 = getelementptr inbounds %"class.v8::internal::compiler::LiveRange", %"class.v8::internal::compiler::LiveRange"* %114, i64 0, i32 4
  %116 = bitcast %"class.v8::internal::compiler::UsePosition"** %115 to i64*
  %117 = load i64, i64* %116, align 8
  %118 = bitcast %"class.v8::internal::compiler::UsePosition"** %113 to i64*
  store i64 %117, i64* %118, align 8
  %119 = load %"class.v8::internal::compiler::LiveRange"*, %"class.v8::internal::compiler::LiveRange"** %4, align 8
  br label %120

120:                                              ; preds = %101, %112
  %121 = phi %"class.v8::internal::compiler::LiveRange"* [ %119, %112 ], [ %102, %101 ]
  %122 = getelementptr inbounds %"class.v8::internal::compiler::LiveRange", %"class.v8::internal::compiler::LiveRange"* %121, i64 0, i32 4
  store %"class.v8::internal::compiler::UsePosition"* null, %"class.v8::internal::compiler::UsePosition"** %122, align 8
  %123 = load %"class.v8::internal::compiler::LiveRange"*, %"class.v8::internal::compiler::LiveRange"** %4, align 8
  %124 = getelementptr inbounds %"class.v8::internal::compiler::LiveRange", %"class.v8::internal::compiler::LiveRange"* %123, i64 0, i32 6
  %125 = bitcast %"class.v8::internal::compiler::LiveRange"** %124 to i64*
  %126 = load i64, i64* %125, align 8
  %127 = bitcast %"class.v8::internal::compiler::LiveRange"** %4 to i64*
  store i64 %126, i64* %127, align 8
  store %"class.v8::internal::compiler::LiveRange"* null, %"class.v8::internal::compiler::LiveRange"** %124, align 8
  call void @llvm.lifetime.end.p0i8(i64 8, i8* nonnull %13) #16
  br label %144

128:                                              ; preds = %7
  %129 = getelementptr inbounds %"class.v8::internal::compiler::LinearScanAllocator", %"class.v8::internal::compiler::LinearScanAllocator"* %0, i64 0, i32 0, i32 0
  %130 = load %"class.v8::internal::compiler::TopTierRegisterAllocationData"*, %"class.v8::internal::compiler::TopTierRegisterAllocationData"** %129, align 8
  %131 = getelementptr inbounds %"class.v8::internal::compiler::TopTierRegisterAllocationData", %"class.v8::internal::compiler::TopTierRegisterAllocationData"* %130, i64 0, i32 23, i32 0
  %132 = load i32, i32* %131, align 4
  %133 = and i32 %132, 1
  %134 = icmp eq i32 %133, 0
  br i1 %134, label %144, label %135

135:                                              ; preds = %128
  %136 = getelementptr inbounds %"class.v8::internal::compiler::LiveRange", %"class.v8::internal::compiler::LiveRange"* %1, i64 0, i32 5
  %137 = load %"class.v8::internal::compiler::TopLevelLiveRange"*, %"class.v8::internal::compiler::TopLevelLiveRange"** %136, align 8
  %138 = getelementptr inbounds %"class.v8::internal::compiler::TopLevelLiveRange", %"class.v8::internal::compiler::TopLevelLiveRange"* %137, i64 0, i32 1
  %139 = load i32, i32* %138, align 4
  %140 = getelementptr inbounds %"class.v8::internal::compiler::LiveRange", %"class.v8::internal::compiler::LiveRange"* %1, i64 0, i32 0
  %141 = load i32, i32* %140, align 8
  %142 = getelementptr inbounds %"class.v8::internal::compiler::LiveRange", %"class.v8::internal::compiler::LiveRange"* %5, i64 0, i32 0
  %143 = load i32, i32* %142, align 8
  tail call void (i8*, ...) @_ZN2v88internal6PrintFEPKcz(i8* getelementptr inbounds ([30 x i8], [30 x i8]* @.str.60, i64 0, i64 0), i32 %139, i32 %141, i32 %143) #16
  br label %144

144:                                              ; preds = %128, %2, %135, %120
  ret void
}

; Function Attrs: nounwind ssp uwtable
define hidden void @_ZN2v88internal8compiler19LinearScanAllocator18SpillNotLiveRangesEPNS0_16ZoneUnorderedSetINS2_17RangeWithRegisterENS4_4HashENS4_6EqualsEEENS1_16LifetimePositionENS1_29TopTierRegisterAllocationData9SpillModeE(%"class.v8::internal::compiler::LinearScanAllocator"*, %"class.v8::internal::ZoneUnorderedSet"*, i32, i32) local_unnamed_addr #0 align 2 {
  %5 = alloca %"class.v8::internal::compiler::LiveRange"*, align 8
  %6 = alloca %"class.v8::internal::compiler::LiveRange"*, align 8
  %7 = alloca %"class.std::__1::unique_ptr.1517", align 8
  %8 = alloca %"class.v8::internal::compiler::LiveRange"*, align 8
  %9 = getelementptr inbounds %"class.v8::internal::compiler::LinearScanAllocator", %"class.v8::internal::compiler::LinearScanAllocator"* %0, i64 0, i32 2, i32 0, i32 0, i32 0
  %10 = load %"class.v8::internal::compiler::LiveRange"**, %"class.v8::internal::compiler::LiveRange"*** %9, align 8
  %11 = getelementptr inbounds %"class.v8::internal::compiler::LinearScanAllocator", %"class.v8::internal::compiler::LinearScanAllocator"* %0, i64 0, i32 2, i32 0, i32 0, i32 1
  %12 = load %"class.v8::internal::compiler::LiveRange"**, %"class.v8::internal::compiler::LiveRange"*** %11, align 8
  %13 = icmp eq %"class.v8::internal::compiler::LiveRange"** %10, %12
  br i1 %13, label %27, label %14

14:                                               ; preds = %4
  %15 = getelementptr inbounds %"class.v8::internal::ZoneUnorderedSet", %"class.v8::internal::ZoneUnorderedSet"* %1, i64 0, i32 0, i32 0, i32 0, i32 0, i32 1, i32 0, i32 0, i32 0, i32 0
  %16 = getelementptr inbounds %"class.v8::internal::ZoneUnorderedSet", %"class.v8::internal::ZoneUnorderedSet"* %1, i64 0, i32 0, i32 0, i32 0, i32 0, i32 0, i32 0
  %17 = getelementptr inbounds %"class.v8::internal::ZoneUnorderedSet", %"class.v8::internal::ZoneUnorderedSet"* %1, i64 0, i32 0, i32 0
  %18 = bitcast %"class.std::__1::unique_ptr.1517"* %7 to i8*
  %19 = bitcast %"class.v8::internal::compiler::LinearScanAllocator"* %0 to %"class.v8::internal::compiler::RegisterAllocator"*
  %20 = getelementptr inbounds %"class.v8::internal::compiler::LinearScanAllocator", %"class.v8::internal::compiler::LinearScanAllocator"* %0, i64 0, i32 0, i32 0
  %21 = bitcast %"class.v8::internal::compiler::LiveRange"** %8 to i8*
  %22 = getelementptr inbounds %"class.v8::internal::compiler::LinearScanAllocator", %"class.v8::internal::compiler::LinearScanAllocator"* %0, i64 0, i32 1, i32 0, i32 0
  %23 = bitcast %"class.v8::internal::compiler::LiveRange"*** %11 to i64*
  %24 = getelementptr inbounds %"class.v8::internal::compiler::LinearScanAllocator", %"class.v8::internal::compiler::LinearScanAllocator"* %0, i64 0, i32 0, i32 1
  %25 = bitcast %"class.v8::internal::compiler::LiveRange"** %6 to i8*
  %26 = bitcast %"class.v8::internal::compiler::LiveRange"** %5 to i8*
  br label %28

27:                                               ; preds = %378, %4
  ret void

28:                                               ; preds = %14, %378
  %29 = phi %"class.v8::internal::compiler::LiveRange"** [ %10, %14 ], [ %379, %378 ]
  %30 = load %"class.v8::internal::compiler::LiveRange"*, %"class.v8::internal::compiler::LiveRange"** %29, align 8
  %31 = getelementptr inbounds %"class.v8::internal::compiler::LiveRange", %"class.v8::internal::compiler::LiveRange"* %30, i64 0, i32 5
  %32 = load %"class.v8::internal::compiler::TopLevelLiveRange"*, %"class.v8::internal::compiler::TopLevelLiveRange"** %31, align 8
  %33 = getelementptr inbounds %"class.v8::internal::compiler::TopLevelLiveRange", %"class.v8::internal::compiler::TopLevelLiveRange"* %32, i64 0, i32 1
  %34 = load i32, i32* %33, align 4
  %35 = sext i32 %34 to i64
  %36 = load i64, i64* %15, align 8
  %37 = icmp eq i64 %36, 0
  br i1 %37, label %100, label %38

38:                                               ; preds = %28
  %39 = call i64 @llvm.ctpop.i64(i64 %36) #16, !range !79
  %40 = icmp ugt i64 %39, 1
  br i1 %40, label %44, label %41

41:                                               ; preds = %38
  %42 = add i64 %36, -1
  %43 = and i64 %42, %35
  br label %48

44:                                               ; preds = %38
  %45 = icmp ugt i64 %36, %35
  br i1 %45, label %48, label %46

46:                                               ; preds = %44
  %47 = urem i64 %35, %36
  br label %48

48:                                               ; preds = %46, %44, %41
  %49 = phi i64 [ %43, %41 ], [ %47, %46 ], [ %35, %44 ]
  %50 = load %"struct.std::__1::__hash_node_base.1398"**, %"struct.std::__1::__hash_node_base.1398"*** %16, align 8
  %51 = getelementptr inbounds %"struct.std::__1::__hash_node_base.1398"*, %"struct.std::__1::__hash_node_base.1398"** %50, i64 %49
  %52 = load %"struct.std::__1::__hash_node_base.1398"*, %"struct.std::__1::__hash_node_base.1398"** %51, align 8
  %53 = icmp eq %"struct.std::__1::__hash_node_base.1398"* %52, null
  br i1 %53, label %100, label %54

54:                                               ; preds = %48
  %55 = getelementptr inbounds %"struct.std::__1::__hash_node_base.1398", %"struct.std::__1::__hash_node_base.1398"* %52, i64 0, i32 0
  %56 = load %"struct.std::__1::__hash_node_base.1398"*, %"struct.std::__1::__hash_node_base.1398"** %55, align 8
  %57 = icmp eq %"struct.std::__1::__hash_node_base.1398"* %56, null
  br i1 %57, label %100, label %58

58:                                               ; preds = %54
  %59 = add i64 %36, -1
  br i1 %40, label %60, label %82

60:                                               ; preds = %58, %78
  %61 = phi %"struct.std::__1::__hash_node_base.1398"* [ %80, %78 ], [ %56, %58 ]
  %62 = getelementptr inbounds %"struct.std::__1::__hash_node_base.1398", %"struct.std::__1::__hash_node_base.1398"* %61, i64 1
  %63 = bitcast %"struct.std::__1::__hash_node_base.1398"* %62 to i64*
  %64 = load i64, i64* %63, align 8
  %65 = icmp eq i64 %64, %35
  br i1 %65, label %73, label %66

66:                                               ; preds = %60
  %67 = icmp ult i64 %64, %36
  br i1 %67, label %70, label %68

68:                                               ; preds = %66
  %69 = urem i64 %64, %36
  br label %70

70:                                               ; preds = %68, %66
  %71 = phi i64 [ %69, %68 ], [ %64, %66 ]
  %72 = icmp eq i64 %71, %49
  br i1 %72, label %78, label %100

73:                                               ; preds = %60
  %74 = getelementptr inbounds %"struct.std::__1::__hash_node_base.1398", %"struct.std::__1::__hash_node_base.1398"* %61, i64 2
  %75 = bitcast %"struct.std::__1::__hash_node_base.1398"* %74 to %"class.v8::internal::compiler::TopLevelLiveRange"**
  %76 = load %"class.v8::internal::compiler::TopLevelLiveRange"*, %"class.v8::internal::compiler::TopLevelLiveRange"** %75, align 8
  %77 = icmp eq %"class.v8::internal::compiler::TopLevelLiveRange"* %76, %32
  br i1 %77, label %287, label %78

78:                                               ; preds = %73, %70
  %79 = getelementptr inbounds %"struct.std::__1::__hash_node_base.1398", %"struct.std::__1::__hash_node_base.1398"* %61, i64 0, i32 0
  %80 = load %"struct.std::__1::__hash_node_base.1398"*, %"struct.std::__1::__hash_node_base.1398"** %79, align 8
  %81 = icmp eq %"struct.std::__1::__hash_node_base.1398"* %80, null
  br i1 %81, label %100, label %60

82:                                               ; preds = %58, %96
  %83 = phi %"struct.std::__1::__hash_node_base.1398"* [ %98, %96 ], [ %56, %58 ]
  %84 = getelementptr inbounds %"struct.std::__1::__hash_node_base.1398", %"struct.std::__1::__hash_node_base.1398"* %83, i64 1
  %85 = bitcast %"struct.std::__1::__hash_node_base.1398"* %84 to i64*
  %86 = load i64, i64* %85, align 8
  %87 = icmp eq i64 %86, %35
  br i1 %87, label %91, label %88

88:                                               ; preds = %82
  %89 = and i64 %86, %59
  %90 = icmp eq i64 %89, %49
  br i1 %90, label %96, label %100

91:                                               ; preds = %82
  %92 = getelementptr inbounds %"struct.std::__1::__hash_node_base.1398", %"struct.std::__1::__hash_node_base.1398"* %83, i64 2
  %93 = bitcast %"struct.std::__1::__hash_node_base.1398"* %92 to %"class.v8::internal::compiler::TopLevelLiveRange"**
  %94 = load %"class.v8::internal::compiler::TopLevelLiveRange"*, %"class.v8::internal::compiler::TopLevelLiveRange"** %93, align 8
  %95 = icmp eq %"class.v8::internal::compiler::TopLevelLiveRange"* %94, %32
  br i1 %95, label %287, label %96

96:                                               ; preds = %91, %88
  %97 = getelementptr inbounds %"struct.std::__1::__hash_node_base.1398", %"struct.std::__1::__hash_node_base.1398"* %83, i64 0, i32 0
  %98 = load %"struct.std::__1::__hash_node_base.1398"*, %"struct.std::__1::__hash_node_base.1398"** %97, align 8
  %99 = icmp eq %"struct.std::__1::__hash_node_base.1398"* %98, null
  br i1 %99, label %100, label %82

100:                                              ; preds = %88, %96, %70, %78, %48, %28, %54
  %101 = icmp slt i32 %34, 0
  br i1 %101, label %102, label %125

102:                                              ; preds = %100
  %103 = load %"class.v8::internal::compiler::TopTierRegisterAllocationData"*, %"class.v8::internal::compiler::TopTierRegisterAllocationData"** %20, align 8
  %104 = getelementptr inbounds %"class.v8::internal::compiler::TopTierRegisterAllocationData", %"class.v8::internal::compiler::TopTierRegisterAllocationData"* %103, i64 0, i32 23, i32 0
  %105 = load i32, i32* %104, align 4
  %106 = and i32 %105, 1
  %107 = icmp eq i32 %106, 0
  br i1 %107, label %123, label %108

108:                                              ; preds = %102
  %109 = getelementptr inbounds %"class.v8::internal::compiler::TopLevelLiveRange", %"class.v8::internal::compiler::TopLevelLiveRange"* %32, i64 0, i32 0, i32 1
  %110 = load i32, i32* %109, align 4
  %111 = lshr i32 %110, 7
  %112 = and i32 %111, 63
  %113 = icmp eq i32 %112, 32
  br i1 %113, label %121, label %114

114:                                              ; preds = %108
  %115 = load i32, i32* %24, align 8
  %116 = icmp eq i32 %115, 0
  %117 = zext i32 %112 to i64
  %118 = select i1 %116, [16 x i8*]* @_ZZN2v88internal12RegisterNameENS0_8RegisterEE5Names, [16 x i8*]* @_ZZN2v88internal12RegisterNameENS0_11XMMRegisterEE5Names
  %119 = getelementptr inbounds [16 x i8*], [16 x i8*]* %118, i64 0, i64 %117
  %120 = load i8*, i8** %119, align 8
  br label %121

121:                                              ; preds = %114, %108
  %122 = phi i8* [ getelementptr inbounds ([11 x i8], [11 x i8]* @.str.58, i64 0, i64 0), %108 ], [ %120, %114 ]
  call void (i8*, ...) @_ZN2v88internal6PrintFEPKcz(i8* getelementptr inbounds ([40 x i8], [40 x i8]* @.str.61, i64 0, i64 0), i8* %122) #16
  br label %123

123:                                              ; preds = %102, %121
  %124 = getelementptr inbounds %"class.v8::internal::compiler::LiveRange"*, %"class.v8::internal::compiler::LiveRange"** %29, i64 1
  br label %378

125:                                              ; preds = %100
  call void @_ZN2v88internal8compiler19LinearScanAllocator22MaybeUndoPreviousSplitEPNS1_9LiveRangeE(%"class.v8::internal::compiler::LinearScanAllocator"* %0, %"class.v8::internal::compiler::LiveRange"* %30)
  %126 = load %"class.v8::internal::compiler::TopTierRegisterAllocationData"*, %"class.v8::internal::compiler::TopTierRegisterAllocationData"** %20, align 8
  %127 = getelementptr inbounds %"class.v8::internal::compiler::TopTierRegisterAllocationData", %"class.v8::internal::compiler::TopTierRegisterAllocationData"* %126, i64 0, i32 23, i32 0
  %128 = load i32, i32* %127, align 4
  %129 = and i32 %128, 1
  %130 = icmp eq i32 %129, 0
  br i1 %130, label %135, label %131

131:                                              ; preds = %125
  %132 = load i32, i32* %33, align 4
  %133 = getelementptr inbounds %"class.v8::internal::compiler::LiveRange", %"class.v8::internal::compiler::LiveRange"* %30, i64 0, i32 0
  %134 = load i32, i32* %133, align 8
  call void (i8*, ...) @_ZN2v88internal6PrintFEPKcz(i8* getelementptr inbounds ([20 x i8], [20 x i8]* @.str.62, i64 0, i64 0), i32 %132, i32 %134) #16
  br label %135

135:                                              ; preds = %125, %131
  %136 = call %"class.v8::internal::compiler::LiveRange"* @_ZN2v88internal8compiler17RegisterAllocator12SplitRangeAtEPNS1_9LiveRangeENS1_16LifetimePositionE(%"class.v8::internal::compiler::RegisterAllocator"* %19, %"class.v8::internal::compiler::LiveRange"* %30, i32 %2)
  %137 = getelementptr inbounds %"class.v8::internal::compiler::LiveRange", %"class.v8::internal::compiler::LiveRange"* %136, i64 0, i32 8
  %138 = load %"class.v8::internal::compiler::UsePosition"*, %"class.v8::internal::compiler::UsePosition"** %137, align 8
  %139 = icmp eq %"class.v8::internal::compiler::UsePosition"* %138, null
  br i1 %139, label %144, label %140

140:                                              ; preds = %135
  %141 = getelementptr inbounds %"class.v8::internal::compiler::UsePosition", %"class.v8::internal::compiler::UsePosition"* %138, i64 0, i32 3, i32 0
  %142 = load i32, i32* %141, align 8
  %143 = icmp sgt i32 %142, %2
  br i1 %143, label %144, label %148

144:                                              ; preds = %140, %135
  %145 = getelementptr inbounds %"class.v8::internal::compiler::LiveRange", %"class.v8::internal::compiler::LiveRange"* %136, i64 0, i32 4
  %146 = load %"class.v8::internal::compiler::UsePosition"*, %"class.v8::internal::compiler::UsePosition"** %145, align 8
  %147 = icmp eq %"class.v8::internal::compiler::UsePosition"* %146, null
  br i1 %147, label %159, label %148

148:                                              ; preds = %144, %140
  %149 = phi %"class.v8::internal::compiler::UsePosition"* [ %138, %140 ], [ %146, %144 ]
  br label %150

150:                                              ; preds = %148, %155
  %151 = phi %"class.v8::internal::compiler::UsePosition"* [ %157, %155 ], [ %149, %148 ]
  %152 = getelementptr inbounds %"class.v8::internal::compiler::UsePosition", %"class.v8::internal::compiler::UsePosition"* %151, i64 0, i32 3, i32 0
  %153 = load i32, i32* %152, align 8
  %154 = icmp slt i32 %153, %2
  br i1 %154, label %155, label %160

155:                                              ; preds = %150
  %156 = getelementptr inbounds %"class.v8::internal::compiler::UsePosition", %"class.v8::internal::compiler::UsePosition"* %151, i64 0, i32 2
  %157 = load %"class.v8::internal::compiler::UsePosition"*, %"class.v8::internal::compiler::UsePosition"** %156, align 8
  %158 = icmp eq %"class.v8::internal::compiler::UsePosition"* %157, null
  br i1 %158, label %159, label %150

159:                                              ; preds = %155, %144
  store %"class.v8::internal::compiler::UsePosition"* null, %"class.v8::internal::compiler::UsePosition"** %137, align 8
  br label %260

160:                                              ; preds = %150
  store %"class.v8::internal::compiler::UsePosition"* %151, %"class.v8::internal::compiler::UsePosition"** %137, align 8
  br label %161

161:                                              ; preds = %167, %160
  %162 = phi %"class.v8::internal::compiler::UsePosition"* [ %169, %167 ], [ %151, %160 ]
  %163 = getelementptr inbounds %"class.v8::internal::compiler::UsePosition", %"class.v8::internal::compiler::UsePosition"* %162, i64 0, i32 4
  %164 = load i32, i32* %163, align 4
  %165 = and i32 %164, 3
  %166 = icmp eq i32 %165, 2
  br i1 %166, label %171, label %167

167:                                              ; preds = %161
  %168 = getelementptr inbounds %"class.v8::internal::compiler::UsePosition", %"class.v8::internal::compiler::UsePosition"* %162, i64 0, i32 2
  %169 = load %"class.v8::internal::compiler::UsePosition"*, %"class.v8::internal::compiler::UsePosition"** %168, align 8
  %170 = icmp eq %"class.v8::internal::compiler::UsePosition"* %169, null
  br i1 %170, label %260, label %161

171:                                              ; preds = %161
  %172 = getelementptr inbounds %"class.v8::internal::compiler::UsePosition", %"class.v8::internal::compiler::UsePosition"* %162, i64 0, i32 3, i32 0
  %173 = load i32, i32* %172, align 8
  %174 = and i32 %173, -4
  %175 = load %"class.v8::internal::compiler::TopTierRegisterAllocationData"*, %"class.v8::internal::compiler::TopTierRegisterAllocationData"** %20, align 8
  %176 = getelementptr inbounds %"class.v8::internal::compiler::TopTierRegisterAllocationData", %"class.v8::internal::compiler::TopTierRegisterAllocationData"* %175, i64 0, i32 23, i32 0
  %177 = load i32, i32* %176, align 4
  %178 = and i32 %177, 1
  %179 = icmp eq i32 %178, 0
  br i1 %179, label %182, label %180

180:                                              ; preds = %171
  call void (i8*, ...) @_ZN2v88internal6PrintFEPKcz(i8* getelementptr inbounds ([16 x i8], [16 x i8]* @.str.63, i64 0, i64 0), i32 %174) #16
  %181 = load %"class.v8::internal::compiler::TopTierRegisterAllocationData"*, %"class.v8::internal::compiler::TopTierRegisterAllocationData"** %20, align 8
  br label %182

182:                                              ; preds = %171, %180
  %183 = phi %"class.v8::internal::compiler::TopTierRegisterAllocationData"* [ %175, %171 ], [ %181, %180 ]
  %184 = sdiv i32 %174, 4
  %185 = sext i32 %184 to i64
  %186 = getelementptr inbounds %"class.v8::internal::compiler::TopTierRegisterAllocationData", %"class.v8::internal::compiler::TopTierRegisterAllocationData"* %183, i64 0, i32 3
  %187 = load %"class.v8::internal::compiler::InstructionSequence"*, %"class.v8::internal::compiler::InstructionSequence"** %186, align 8
  %188 = getelementptr inbounds %"class.v8::internal::compiler::InstructionSequence", %"class.v8::internal::compiler::InstructionSequence"* %187, i64 0, i32 8, i32 0, i32 0, i32 2, i32 0, i32 0
  %189 = load i64, i64* %188, align 8
  %190 = icmp eq i64 %189, %185
  br i1 %190, label %199, label %191

191:                                              ; preds = %182
  %192 = call %"class.v8::internal::compiler::InstructionBlock"* @_ZNK2v88internal8compiler19InstructionSequence19GetInstructionBlockEi(%"class.v8::internal::compiler::InstructionSequence"* %187, i32 %184) #16
  %193 = getelementptr inbounds %"class.v8::internal::compiler::InstructionBlock", %"class.v8::internal::compiler::InstructionBlock"* %192, i64 0, i32 8
  %194 = load i32, i32* %193, align 4
  %195 = icmp eq i32 %194, %184
  br i1 %195, label %199, label %196

196:                                              ; preds = %191
  %197 = add i32 %174, -2
  %198 = and i32 %197, -4
  br label %199

199:                                              ; preds = %182, %196, %191
  %200 = phi i32 [ %174, %191 ], [ %198, %196 ], [ %174, %182 ]
  %201 = icmp sgt i32 %200, %2
  br i1 %201, label %202, label %238

202:                                              ; preds = %199
  %203 = call %"class.v8::internal::compiler::LiveRange"* @_ZN2v88internal8compiler17RegisterAllocator12SplitRangeAtEPNS1_9LiveRangeENS1_16LifetimePositionE(%"class.v8::internal::compiler::RegisterAllocator"* %19, %"class.v8::internal::compiler::LiveRange"* %136, i32 %200)
  call void @_ZN2v88internal8compiler17RegisterAllocator5SpillEPNS1_9LiveRangeENS1_29TopTierRegisterAllocationData9SpillModeE(%"class.v8::internal::compiler::RegisterAllocator"* %19, %"class.v8::internal::compiler::LiveRange"* %136, i32 %3)
  %204 = load %"class.v8::internal::compiler::TopTierRegisterAllocationData"*, %"class.v8::internal::compiler::TopTierRegisterAllocationData"** %20, align 8
  %205 = getelementptr inbounds %"class.v8::internal::compiler::TopTierRegisterAllocationData", %"class.v8::internal::compiler::TopTierRegisterAllocationData"* %204, i64 0, i32 23, i32 0
  %206 = load i32, i32* %205, align 4
  %207 = and i32 %206, 1
  %208 = icmp eq i32 %207, 0
  br i1 %208, label %213, label %209

209:                                              ; preds = %202
  %210 = load i32, i32* %33, align 4
  %211 = getelementptr inbounds %"class.v8::internal::compiler::LiveRange", %"class.v8::internal::compiler::LiveRange"* %203, i64 0, i32 0
  %212 = load i32, i32* %211, align 8
  call void (i8*, ...) @_ZN2v88internal6PrintFEPKcz(i8* getelementptr inbounds ([28 x i8], [28 x i8]* @.str.64, i64 0, i64 0), i32 %210, i32 %212) #16
  br label %213

213:                                              ; preds = %202, %209
  %214 = getelementptr inbounds %"class.v8::internal::compiler::LiveRange", %"class.v8::internal::compiler::LiveRange"* %203, i64 0, i32 1
  %215 = load i32, i32* %214, align 4
  %216 = or i32 %215, 2097152
  store i32 %216, i32* %214, align 4
  call void @llvm.lifetime.start.p0i8(i64 8, i8* nonnull %26)
  store %"class.v8::internal::compiler::LiveRange"* %203, %"class.v8::internal::compiler::LiveRange"** %5, align 8
  %217 = icmp eq %"class.v8::internal::compiler::LiveRange"* %203, null
  br i1 %217, label %237, label %218

218:                                              ; preds = %213
  %219 = getelementptr inbounds %"class.v8::internal::compiler::LiveRange", %"class.v8::internal::compiler::LiveRange"* %203, i64 0, i32 3
  %220 = load %"class.v8::internal::compiler::UseInterval"*, %"class.v8::internal::compiler::UseInterval"** %219, align 8
  %221 = icmp eq %"class.v8::internal::compiler::UseInterval"* %220, null
  br i1 %221, label %237, label %222

222:                                              ; preds = %218
  %223 = load %"class.v8::internal::compiler::TopTierRegisterAllocationData"*, %"class.v8::internal::compiler::TopTierRegisterAllocationData"** %20, align 8
  %224 = getelementptr inbounds %"class.v8::internal::compiler::TopTierRegisterAllocationData", %"class.v8::internal::compiler::TopTierRegisterAllocationData"* %223, i64 0, i32 23, i32 0
  %225 = load i32, i32* %224, align 4
  %226 = and i32 %225, 1
  %227 = icmp eq i32 %226, 0
  br i1 %227, label %235, label %228

228:                                              ; preds = %222
  %229 = getelementptr inbounds %"class.v8::internal::compiler::LiveRange", %"class.v8::internal::compiler::LiveRange"* %203, i64 0, i32 5
  %230 = load %"class.v8::internal::compiler::TopLevelLiveRange"*, %"class.v8::internal::compiler::TopLevelLiveRange"** %229, align 8
  %231 = getelementptr inbounds %"class.v8::internal::compiler::TopLevelLiveRange", %"class.v8::internal::compiler::TopLevelLiveRange"* %230, i64 0, i32 1
  %232 = load i32, i32* %231, align 4
  %233 = getelementptr inbounds %"class.v8::internal::compiler::LiveRange", %"class.v8::internal::compiler::LiveRange"* %203, i64 0, i32 0
  %234 = load i32, i32* %233, align 8
  call void (i8*, ...) @_ZN2v88internal6PrintFEPKcz(i8* getelementptr inbounds ([35 x i8], [35 x i8]* @.str.80, i64 0, i64 0), i32 %232, i32 %234) #16
  br label %235

235:                                              ; preds = %228, %222
  %236 = call %"class.std::__1::__tree_end_node"* @_ZNSt3__16__treeIPN2v88internal8compiler9LiveRangeENS3_19LinearScanAllocator26UnhandledLiveRangeOrderingENS2_13ZoneAllocatorIS5_EEE15__emplace_multiIJRKS5_EEENS_15__tree_iteratorIS5_PNS_11__tree_nodeIS5_PvEElEEDpOT_(%"class.std::__1::__tree.1338"* %22, %"class.v8::internal::compiler::LiveRange"** nonnull dereferenceable(8) %5) #16
  br label %237

237:                                              ; preds = %213, %218, %235
  call void @llvm.lifetime.end.p0i8(i64 8, i8* nonnull %26)
  br label %261

238:                                              ; preds = %199
  call void @llvm.lifetime.start.p0i8(i64 8, i8* nonnull %25)
  store %"class.v8::internal::compiler::LiveRange"* %136, %"class.v8::internal::compiler::LiveRange"** %6, align 8
  %239 = icmp eq %"class.v8::internal::compiler::LiveRange"* %136, null
  br i1 %239, label %259, label %240

240:                                              ; preds = %238
  %241 = getelementptr inbounds %"class.v8::internal::compiler::LiveRange", %"class.v8::internal::compiler::LiveRange"* %136, i64 0, i32 3
  %242 = load %"class.v8::internal::compiler::UseInterval"*, %"class.v8::internal::compiler::UseInterval"** %241, align 8
  %243 = icmp eq %"class.v8::internal::compiler::UseInterval"* %242, null
  br i1 %243, label %259, label %244

244:                                              ; preds = %240
  %245 = load %"class.v8::internal::compiler::TopTierRegisterAllocationData"*, %"class.v8::internal::compiler::TopTierRegisterAllocationData"** %20, align 8
  %246 = getelementptr inbounds %"class.v8::internal::compiler::TopTierRegisterAllocationData", %"class.v8::internal::compiler::TopTierRegisterAllocationData"* %245, i64 0, i32 23, i32 0
  %247 = load i32, i32* %246, align 4
  %248 = and i32 %247, 1
  %249 = icmp eq i32 %248, 0
  br i1 %249, label %257, label %250

250:                                              ; preds = %244
  %251 = getelementptr inbounds %"class.v8::internal::compiler::LiveRange", %"class.v8::internal::compiler::LiveRange"* %136, i64 0, i32 5
  %252 = load %"class.v8::internal::compiler::TopLevelLiveRange"*, %"class.v8::internal::compiler::TopLevelLiveRange"** %251, align 8
  %253 = getelementptr inbounds %"class.v8::internal::compiler::TopLevelLiveRange", %"class.v8::internal::compiler::TopLevelLiveRange"* %252, i64 0, i32 1
  %254 = load i32, i32* %253, align 4
  %255 = getelementptr inbounds %"class.v8::internal::compiler::LiveRange", %"class.v8::internal::compiler::LiveRange"* %136, i64 0, i32 0
  %256 = load i32, i32* %255, align 8
  call void (i8*, ...) @_ZN2v88internal6PrintFEPKcz(i8* getelementptr inbounds ([35 x i8], [35 x i8]* @.str.80, i64 0, i64 0), i32 %254, i32 %256) #16
  br label %257

257:                                              ; preds = %250, %244
  %258 = call %"class.std::__1::__tree_end_node"* @_ZNSt3__16__treeIPN2v88internal8compiler9LiveRangeENS3_19LinearScanAllocator26UnhandledLiveRangeOrderingENS2_13ZoneAllocatorIS5_EEE15__emplace_multiIJRKS5_EEENS_15__tree_iteratorIS5_PNS_11__tree_nodeIS5_PvEElEEDpOT_(%"class.std::__1::__tree.1338"* %22, %"class.v8::internal::compiler::LiveRange"** nonnull dereferenceable(8) %6) #16
  br label %259

259:                                              ; preds = %238, %240, %257
  call void @llvm.lifetime.end.p0i8(i64 8, i8* nonnull %25)
  br label %261

260:                                              ; preds = %167, %159
  call void @_ZN2v88internal8compiler17RegisterAllocator5SpillEPNS1_9LiveRangeENS1_29TopTierRegisterAllocationData9SpillModeE(%"class.v8::internal::compiler::RegisterAllocator"* %19, %"class.v8::internal::compiler::LiveRange"* %136, i32 %3)
  br label %261

261:                                              ; preds = %237, %259, %260
  %262 = load %"class.v8::internal::compiler::TopTierRegisterAllocationData"*, %"class.v8::internal::compiler::TopTierRegisterAllocationData"** %20, align 8
  %263 = getelementptr inbounds %"class.v8::internal::compiler::TopTierRegisterAllocationData", %"class.v8::internal::compiler::TopTierRegisterAllocationData"* %262, i64 0, i32 23, i32 0
  %264 = load i32, i32* %263, align 4
  %265 = and i32 %264, 1
  %266 = icmp eq i32 %265, 0
  br i1 %266, label %275, label %267

267:                                              ; preds = %261
  %268 = load %"class.v8::internal::compiler::LiveRange"*, %"class.v8::internal::compiler::LiveRange"** %29, align 8
  %269 = getelementptr inbounds %"class.v8::internal::compiler::LiveRange", %"class.v8::internal::compiler::LiveRange"* %268, i64 0, i32 5
  %270 = load %"class.v8::internal::compiler::TopLevelLiveRange"*, %"class.v8::internal::compiler::TopLevelLiveRange"** %269, align 8
  %271 = getelementptr inbounds %"class.v8::internal::compiler::TopLevelLiveRange", %"class.v8::internal::compiler::TopLevelLiveRange"* %270, i64 0, i32 1
  %272 = load i32, i32* %271, align 4
  %273 = getelementptr inbounds %"class.v8::internal::compiler::LiveRange", %"class.v8::internal::compiler::LiveRange"* %268, i64 0, i32 0
  %274 = load i32, i32* %273, align 8
  call void (i8*, ...) @_ZN2v88internal6PrintFEPKcz(i8* getelementptr inbounds ([48 x i8], [48 x i8]* @.str.81, i64 0, i64 0), i32 %272, i32 %274) #16
  br label %275

275:                                              ; preds = %267, %261
  %276 = getelementptr inbounds %"class.v8::internal::compiler::LiveRange"*, %"class.v8::internal::compiler::LiveRange"** %29, i64 1
  %277 = load i64, i64* %23, align 8
  %278 = ptrtoint %"class.v8::internal::compiler::LiveRange"** %276 to i64
  %279 = sub i64 %277, %278
  %280 = ashr exact i64 %279, 3
  %281 = icmp eq i64 %279, 0
  br i1 %281, label %285, label %282

282:                                              ; preds = %275
  %283 = bitcast %"class.v8::internal::compiler::LiveRange"** %29 to i8*
  %284 = bitcast %"class.v8::internal::compiler::LiveRange"** %276 to i8*
  call void @llvm.memmove.p0i8.p0i8.i64(i8* align 8 %283, i8* align 8 %284, i64 %279, i1 false) #16
  br label %285

285:                                              ; preds = %275, %282
  %286 = getelementptr inbounds %"class.v8::internal::compiler::LiveRange"*, %"class.v8::internal::compiler::LiveRange"** %29, i64 %280
  store %"class.v8::internal::compiler::LiveRange"** %286, %"class.v8::internal::compiler::LiveRange"*** %11, align 8
  br label %378

287:                                              ; preds = %91, %73
  %288 = phi %"struct.std::__1::__hash_node_base.1398"* [ %61, %73 ], [ %83, %91 ]
  %289 = getelementptr inbounds %"struct.std::__1::__hash_node_base.1398", %"struct.std::__1::__hash_node_base.1398"* %288, i64 3
  %290 = bitcast %"struct.std::__1::__hash_node_base.1398"* %289 to i32*
  %291 = load i32, i32* %290, align 8
  call void @llvm.lifetime.start.p0i8(i64 24, i8* nonnull %18) #16
  call void @_ZNSt3__112__hash_tableIN2v88internal8compiler19LinearScanAllocator17RangeWithRegisterENS5_4HashENS5_6EqualsENS2_13ZoneAllocatorIS5_EEE6removeENS_21__hash_const_iteratorIPNS_11__hash_nodeIS5_PvEEEE(%"class.std::__1::unique_ptr.1517"* nonnull sret %7, %"class.std::__1::__hash_table.1394"* %17, %"struct.std::__1::__hash_node_base.1398"* nonnull %288) #16
  call void @llvm.lifetime.end.p0i8(i64 24, i8* nonnull %18) #16
  %292 = getelementptr inbounds %"class.v8::internal::compiler::LiveRange", %"class.v8::internal::compiler::LiveRange"* %30, i64 0, i32 1
  %293 = load i32, i32* %292, align 4
  %294 = lshr i32 %293, 7
  %295 = and i32 %294, 63
  %296 = icmp eq i32 %291, %295
  %297 = load %"class.v8::internal::compiler::TopTierRegisterAllocationData"*, %"class.v8::internal::compiler::TopTierRegisterAllocationData"** %20, align 8
  %298 = getelementptr inbounds %"class.v8::internal::compiler::TopTierRegisterAllocationData", %"class.v8::internal::compiler::TopTierRegisterAllocationData"* %297, i64 0, i32 23, i32 0
  %299 = load i32, i32* %298, align 4
  %300 = and i32 %299, 1
  %301 = icmp ne i32 %300, 0
  br i1 %296, label %302, label %319

302:                                              ; preds = %287
  br i1 %301, label %303, label %317

303:                                              ; preds = %302
  %304 = load i32, i32* %33, align 4
  %305 = getelementptr inbounds %"class.v8::internal::compiler::LiveRange", %"class.v8::internal::compiler::LiveRange"* %30, i64 0, i32 0
  %306 = load i32, i32* %305, align 8
  %307 = icmp eq i32 %291, 32
  br i1 %307, label %315, label %308

308:                                              ; preds = %303
  %309 = load i32, i32* %24, align 8
  %310 = icmp eq i32 %309, 0
  %311 = zext i32 %291 to i64
  %312 = select i1 %310, [16 x i8*]* @_ZZN2v88internal12RegisterNameENS0_8RegisterEE5Names, [16 x i8*]* @_ZZN2v88internal12RegisterNameENS0_11XMMRegisterEE5Names
  %313 = getelementptr inbounds [16 x i8*], [16 x i8*]* %312, i64 0, i64 %311
  %314 = load i8*, i8** %313, align 8
  br label %315

315:                                              ; preds = %308, %303
  %316 = phi i8* [ getelementptr inbounds ([11 x i8], [11 x i8]* @.str.58, i64 0, i64 0), %303 ], [ %314, %308 ]
  call void (i8*, ...) @_ZN2v88internal6PrintFEPKcz(i8* getelementptr inbounds ([21 x i8], [21 x i8]* @.str.65, i64 0, i64 0), i32 %304, i32 %306, i8* %316) #16
  br label %317

317:                                              ; preds = %315, %302
  %318 = getelementptr inbounds %"class.v8::internal::compiler::LiveRange"*, %"class.v8::internal::compiler::LiveRange"** %29, i64 1
  br label %378

319:                                              ; preds = %287
  br i1 %301, label %320, label %324

320:                                              ; preds = %319
  %321 = load i32, i32* %33, align 4
  %322 = getelementptr inbounds %"class.v8::internal::compiler::LiveRange", %"class.v8::internal::compiler::LiveRange"* %30, i64 0, i32 0
  %323 = load i32, i32* %322, align 8
  call void (i8*, ...) @_ZN2v88internal6PrintFEPKcz(i8* getelementptr inbounds ([18 x i8], [18 x i8]* @.str.66, i64 0, i64 0), i32 %321, i32 %323) #16
  br label %324

324:                                              ; preds = %320, %319
  %325 = call %"class.v8::internal::compiler::LiveRange"* @_ZN2v88internal8compiler17RegisterAllocator12SplitRangeAtEPNS1_9LiveRangeENS1_16LifetimePositionE(%"class.v8::internal::compiler::RegisterAllocator"* %19, %"class.v8::internal::compiler::LiveRange"* %30, i32 %2)
  %326 = getelementptr inbounds %"class.v8::internal::compiler::LiveRange", %"class.v8::internal::compiler::LiveRange"* %325, i64 0, i32 1
  %327 = load i32, i32* %326, align 4
  %328 = and i32 %327, -264241153
  %329 = shl i32 %291, 22
  %330 = and i32 %329, 1069547520
  %331 = or i32 %328, %330
  store i32 %331, i32* %326, align 4
  call void @llvm.lifetime.start.p0i8(i64 8, i8* nonnull %21)
  store %"class.v8::internal::compiler::LiveRange"* %325, %"class.v8::internal::compiler::LiveRange"** %8, align 8
  %332 = icmp eq %"class.v8::internal::compiler::LiveRange"* %325, null
  br i1 %332, label %352, label %333

333:                                              ; preds = %324
  %334 = getelementptr inbounds %"class.v8::internal::compiler::LiveRange", %"class.v8::internal::compiler::LiveRange"* %325, i64 0, i32 3
  %335 = load %"class.v8::internal::compiler::UseInterval"*, %"class.v8::internal::compiler::UseInterval"** %334, align 8
  %336 = icmp eq %"class.v8::internal::compiler::UseInterval"* %335, null
  br i1 %336, label %352, label %337

337:                                              ; preds = %333
  %338 = load %"class.v8::internal::compiler::TopTierRegisterAllocationData"*, %"class.v8::internal::compiler::TopTierRegisterAllocationData"** %20, align 8
  %339 = getelementptr inbounds %"class.v8::internal::compiler::TopTierRegisterAllocationData", %"class.v8::internal::compiler::TopTierRegisterAllocationData"* %338, i64 0, i32 23, i32 0
  %340 = load i32, i32* %339, align 4
  %341 = and i32 %340, 1
  %342 = icmp eq i32 %341, 0
  br i1 %342, label %350, label %343

343:                                              ; preds = %337
  %344 = getelementptr inbounds %"class.v8::internal::compiler::LiveRange", %"class.v8::internal::compiler::LiveRange"* %325, i64 0, i32 5
  %345 = load %"class.v8::internal::compiler::TopLevelLiveRange"*, %"class.v8::internal::compiler::TopLevelLiveRange"** %344, align 8
  %346 = getelementptr inbounds %"class.v8::internal::compiler::TopLevelLiveRange", %"class.v8::internal::compiler::TopLevelLiveRange"* %345, i64 0, i32 1
  %347 = load i32, i32* %346, align 4
  %348 = getelementptr inbounds %"class.v8::internal::compiler::LiveRange", %"class.v8::internal::compiler::LiveRange"* %325, i64 0, i32 0
  %349 = load i32, i32* %348, align 8
  call void (i8*, ...) @_ZN2v88internal6PrintFEPKcz(i8* getelementptr inbounds ([35 x i8], [35 x i8]* @.str.80, i64 0, i64 0), i32 %347, i32 %349) #16
  br label %350

350:                                              ; preds = %343, %337
  %351 = call %"class.std::__1::__tree_end_node"* @_ZNSt3__16__treeIPN2v88internal8compiler9LiveRangeENS3_19LinearScanAllocator26UnhandledLiveRangeOrderingENS2_13ZoneAllocatorIS5_EEE15__emplace_multiIJRKS5_EEENS_15__tree_iteratorIS5_PNS_11__tree_nodeIS5_PvEElEEDpOT_(%"class.std::__1::__tree.1338"* %22, %"class.v8::internal::compiler::LiveRange"** nonnull dereferenceable(8) %8) #16
  br label %352

352:                                              ; preds = %324, %333, %350
  call void @llvm.lifetime.end.p0i8(i64 8, i8* nonnull %21)
  %353 = load %"class.v8::internal::compiler::TopTierRegisterAllocationData"*, %"class.v8::internal::compiler::TopTierRegisterAllocationData"** %20, align 8
  %354 = getelementptr inbounds %"class.v8::internal::compiler::TopTierRegisterAllocationData", %"class.v8::internal::compiler::TopTierRegisterAllocationData"* %353, i64 0, i32 23, i32 0
  %355 = load i32, i32* %354, align 4
  %356 = and i32 %355, 1
  %357 = icmp eq i32 %356, 0
  br i1 %357, label %366, label %358

358:                                              ; preds = %352
  %359 = load %"class.v8::internal::compiler::LiveRange"*, %"class.v8::internal::compiler::LiveRange"** %29, align 8
  %360 = getelementptr inbounds %"class.v8::internal::compiler::LiveRange", %"class.v8::internal::compiler::LiveRange"* %359, i64 0, i32 5
  %361 = load %"class.v8::internal::compiler::TopLevelLiveRange"*, %"class.v8::internal::compiler::TopLevelLiveRange"** %360, align 8
  %362 = getelementptr inbounds %"class.v8::internal::compiler::TopLevelLiveRange", %"class.v8::internal::compiler::TopLevelLiveRange"* %361, i64 0, i32 1
  %363 = load i32, i32* %362, align 4
  %364 = getelementptr inbounds %"class.v8::internal::compiler::LiveRange", %"class.v8::internal::compiler::LiveRange"* %359, i64 0, i32 0
  %365 = load i32, i32* %364, align 8
  call void (i8*, ...) @_ZN2v88internal6PrintFEPKcz(i8* getelementptr inbounds ([48 x i8], [48 x i8]* @.str.81, i64 0, i64 0), i32 %363, i32 %365) #16
  br label %366

366:                                              ; preds = %358, %352
  %367 = getelementptr inbounds %"class.v8::internal::compiler::LiveRange"*, %"class.v8::internal::compiler::LiveRange"** %29, i64 1
  %368 = load i64, i64* %23, align 8
  %369 = ptrtoint %"class.v8::internal::compiler::LiveRange"** %367 to i64
  %370 = sub i64 %368, %369
  %371 = ashr exact i64 %370, 3
  %372 = icmp eq i64 %370, 0
  br i1 %372, label %376, label %373

373:                                              ; preds = %366
  %374 = bitcast %"class.v8::internal::compiler::LiveRange"** %29 to i8*
  %375 = bitcast %"class.v8::internal::compiler::LiveRange"** %367 to i8*
  call void @llvm.memmove.p0i8.p0i8.i64(i8* align 8 %374, i8* align 8 %375, i64 %370, i1 false) #16
  br label %376

376:                                              ; preds = %366, %373
  %377 = getelementptr inbounds %"class.v8::internal::compiler::LiveRange"*, %"class.v8::internal::compiler::LiveRange"** %29, i64 %371
  store %"class.v8::internal::compiler::LiveRange"** %377, %"class.v8::internal::compiler::LiveRange"*** %11, align 8
  br label %378

378:                                              ; preds = %317, %376, %123, %285
  %379 = phi %"class.v8::internal::compiler::LiveRange"** [ %124, %123 ], [ %29, %285 ], [ %318, %317 ], [ %29, %376 ]
  %380 = load %"class.v8::internal::compiler::LiveRange"**, %"class.v8::internal::compiler::LiveRange"*** %11, align 8
  %381 = icmp eq %"class.v8::internal::compiler::LiveRange"** %379, %380
  br i1 %381, label %27, label %28
}

; Function Attrs: nounwind ssp uwtable
define hidden void @_ZN2v88internal8compiler19LinearScanAllocator14AddToUnhandledEPNS1_9LiveRangeE(%"class.v8::internal::compiler::LinearScanAllocator"*, %"class.v8::internal::compiler::LiveRange"*) local_unnamed_addr #0 align 2 {
  %3 = alloca %"class.v8::internal::compiler::LiveRange"*, align 8
  store %"class.v8::internal::compiler::LiveRange"* %1, %"class.v8::internal::compiler::LiveRange"** %3, align 8
  %4 = icmp eq %"class.v8::internal::compiler::LiveRange"* %1, null
  br i1 %4, label %26, label %5

5:                                                ; preds = %2
  %6 = getelementptr inbounds %"class.v8::internal::compiler::LiveRange", %"class.v8::internal::compiler::LiveRange"* %1, i64 0, i32 3
  %7 = load %"class.v8::internal::compiler::UseInterval"*, %"class.v8::internal::compiler::UseInterval"** %6, align 8
  %8 = icmp eq %"class.v8::internal::compiler::UseInterval"* %7, null
  br i1 %8, label %26, label %9

9:                                                ; preds = %5
  %10 = getelementptr inbounds %"class.v8::internal::compiler::LinearScanAllocator", %"class.v8::internal::compiler::LinearScanAllocator"* %0, i64 0, i32 0, i32 0
  %11 = load %"class.v8::internal::compiler::TopTierRegisterAllocationData"*, %"class.v8::internal::compiler::TopTierRegisterAllocationData"** %10, align 8
  %12 = getelementptr inbounds %"class.v8::internal::compiler::TopTierRegisterAllocationData", %"class.v8::internal::compiler::TopTierRegisterAllocationData"* %11, i64 0, i32 23, i32 0
  %13 = load i32, i32* %12, align 4
  %14 = and i32 %13, 1
  %15 = icmp eq i32 %14, 0
  br i1 %15, label %23, label %16

16:                                               ; preds = %9
  %17 = getelementptr inbounds %"class.v8::internal::compiler::LiveRange", %"class.v8::internal::compiler::LiveRange"* %1, i64 0, i32 5
  %18 = load %"class.v8::internal::compiler::TopLevelLiveRange"*, %"class.v8::internal::compiler::TopLevelLiveRange"** %17, align 8
  %19 = getelementptr inbounds %"class.v8::internal::compiler::TopLevelLiveRange", %"class.v8::internal::compiler::TopLevelLiveRange"* %18, i64 0, i32 1
  %20 = load i32, i32* %19, align 4
  %21 = getelementptr inbounds %"class.v8::internal::compiler::LiveRange", %"class.v8::internal::compiler::LiveRange"* %1, i64 0, i32 0
  %22 = load i32, i32* %21, align 8
  tail call void (i8*, ...) @_ZN2v88internal6PrintFEPKcz(i8* getelementptr inbounds ([35 x i8], [35 x i8]* @.str.80, i64 0, i64 0), i32 %20, i32 %22) #16
  br label %23

23:                                               ; preds = %9, %16
  %24 = getelementptr inbounds %"class.v8::internal::compiler::LinearScanAllocator", %"class.v8::internal::compiler::LinearScanAllocator"* %0, i64 0, i32 1, i32 0, i32 0
  %25 = call %"class.std::__1::__tree_end_node"* @_ZNSt3__16__treeIPN2v88internal8compiler9LiveRangeENS3_19LinearScanAllocator26UnhandledLiveRangeOrderingENS2_13ZoneAllocatorIS5_EEE15__emplace_multiIJRKS5_EEENS_15__tree_iteratorIS5_PNS_11__tree_nodeIS5_PvEElEEDpOT_(%"class.std::__1::__tree.1338"* %24, %"class.v8::internal::compiler::LiveRange"** nonnull dereferenceable(8) %3) #16
  br label %26

26:                                               ; preds = %2, %5, %23
  ret void
}

; Function Attrs: nounwind ssp uwtable
define hidden %"class.v8::internal::compiler::LiveRange"** @_ZN2v88internal8compiler19LinearScanAllocator15ActiveToHandledENSt3__111__wrap_iterIPPNS1_9LiveRangeEEE(%"class.v8::internal::compiler::LinearScanAllocator"* nocapture, %"class.v8::internal::compiler::LiveRange"**) local_unnamed_addr #0 align 2 {
  %3 = getelementptr inbounds %"class.v8::internal::compiler::LinearScanAllocator", %"class.v8::internal::compiler::LinearScanAllocator"* %0, i64 0, i32 0, i32 0
  %4 = load %"class.v8::internal::compiler::TopTierRegisterAllocationData"*, %"class.v8::internal::compiler::TopTierRegisterAllocationData"** %3, align 8
  %5 = getelementptr inbounds %"class.v8::internal::compiler::TopTierRegisterAllocationData", %"class.v8::internal::compiler::TopTierRegisterAllocationData"* %4, i64 0, i32 23, i32 0
  %6 = load i32, i32* %5, align 4
  %7 = and i32 %6, 1
  %8 = icmp eq i32 %7, 0
  br i1 %8, label %17, label %9

9:                                                ; preds = %2
  %10 = load %"class.v8::internal::compiler::LiveRange"*, %"class.v8::internal::compiler::LiveRange"** %1, align 8
  %11 = getelementptr inbounds %"class.v8::internal::compiler::LiveRange", %"class.v8::internal::compiler::LiveRange"* %10, i64 0, i32 5
  %12 = load %"class.v8::internal::compiler::TopLevelLiveRange"*, %"class.v8::internal::compiler::TopLevelLiveRange"** %11, align 8
  %13 = getelementptr inbounds %"class.v8::internal::compiler::TopLevelLiveRange", %"class.v8::internal::compiler::TopLevelLiveRange"* %12, i64 0, i32 1
  %14 = load i32, i32* %13, align 4
  %15 = getelementptr inbounds %"class.v8::internal::compiler::LiveRange", %"class.v8::internal::compiler::LiveRange"* %10, i64 0, i32 0
  %16 = load i32, i32* %15, align 8
  tail call void (i8*, ...) @_ZN2v88internal6PrintFEPKcz(i8* getelementptr inbounds ([48 x i8], [48 x i8]* @.str.81, i64 0, i64 0), i32 %14, i32 %16) #16
  br label %17

17:                                               ; preds = %2, %9
  %18 = getelementptr inbounds %"class.v8::internal::compiler::LiveRange"*, %"class.v8::internal::compiler::LiveRange"** %1, i64 1
  %19 = getelementptr inbounds %"class.v8::internal::compiler::LinearScanAllocator", %"class.v8::internal::compiler::LinearScanAllocator"* %0, i64 0, i32 2, i32 0, i32 0, i32 1
  %20 = bitcast %"class.v8::internal::compiler::LiveRange"*** %19 to i64*
  %21 = load i64, i64* %20, align 8
  %22 = ptrtoint %"class.v8::internal::compiler::LiveRange"** %18 to i64
  %23 = sub i64 %21, %22
  %24 = ashr exact i64 %23, 3
  %25 = icmp eq i64 %23, 0
  br i1 %25, label %29, label %26

26:                                               ; preds = %17
  %27 = bitcast %"class.v8::internal::compiler::LiveRange"** %1 to i8*
  %28 = bitcast %"class.v8::internal::compiler::LiveRange"** %18 to i8*
  tail call void @llvm.memmove.p0i8.p0i8.i64(i8* align 8 %27, i8* align 8 %28, i64 %23, i1 false) #16
  br label %29

29:                                               ; preds = %17, %26
  %30 = getelementptr inbounds %"class.v8::internal::compiler::LiveRange"*, %"class.v8::internal::compiler::LiveRange"** %1, i64 %24
  store %"class.v8::internal::compiler::LiveRange"** %30, %"class.v8::internal::compiler::LiveRange"*** %19, align 8
  ret %"class.v8::internal::compiler::LiveRange"** %1
}

; Function Attrs: nounwind ssp uwtable
define hidden %"class.v8::internal::compiler::LiveRange"* @_ZN2v88internal8compiler19LinearScanAllocator22AssignRegisterOnReloadEPNS1_9LiveRangeEi(%"class.v8::internal::compiler::LinearScanAllocator"*, %"class.v8::internal::compiler::LiveRange"* returned, i32) local_unnamed_addr #0 align 2 {
  %4 = alloca %"class.v8::internal::compiler::LiveRange"*, align 8
  %5 = getelementptr inbounds %"class.v8::internal::compiler::LiveRange", %"class.v8::internal::compiler::LiveRange"* %1, i64 0, i32 2
  %6 = bitcast %"class.v8::internal::compiler::LinearScanAllocator"* %0 to %"class.v8::internal::compiler::RegisterAllocator"*
  %7 = getelementptr inbounds %"class.v8::internal::compiler::LinearScanAllocator", %"class.v8::internal::compiler::LinearScanAllocator"* %0, i64 0, i32 0, i32 2
  %8 = load i32, i32* %7, align 4
  %9 = icmp sgt i32 %8, 0
  br i1 %9, label %10, label %202

10:                                               ; preds = %3
  %11 = load %"class.v8::internal::compiler::UseInterval"*, %"class.v8::internal::compiler::UseInterval"** %5, align 8
  %12 = getelementptr inbounds %"class.v8::internal::compiler::UseInterval", %"class.v8::internal::compiler::UseInterval"* %11, i64 0, i32 1, i32 0
  %13 = load i32, i32* %12, align 4
  %14 = getelementptr inbounds %"class.v8::internal::compiler::LinearScanAllocator", %"class.v8::internal::compiler::LinearScanAllocator"* %0, i64 0, i32 3, i32 0, i32 0, i32 0
  %15 = getelementptr inbounds %"class.v8::internal::compiler::LiveRange", %"class.v8::internal::compiler::LiveRange"* %1, i64 0, i32 3
  %16 = zext i32 %2 to i64
  br label %22

17:                                               ; preds = %157
  %18 = load %"class.v8::internal::compiler::UseInterval"*, %"class.v8::internal::compiler::UseInterval"** %5, align 8
  %19 = getelementptr inbounds %"class.v8::internal::compiler::UseInterval", %"class.v8::internal::compiler::UseInterval"* %18, i64 0, i32 1, i32 0
  %20 = load i32, i32* %19, align 4
  %21 = icmp eq i32 %158, %20
  br i1 %21, label %202, label %163

22:                                               ; preds = %10, %157
  %23 = phi i32 [ %13, %10 ], [ %158, %157 ]
  %24 = phi i64 [ 0, %10 ], [ %159, %157 ]
  %25 = icmp eq i64 %24, %16
  br i1 %25, label %26, label %157

26:                                               ; preds = %22
  %27 = load %"class.v8::internal::ZoneMultiset.1344"*, %"class.v8::internal::ZoneMultiset.1344"** %14, align 8
  %28 = getelementptr inbounds %"class.v8::internal::ZoneMultiset.1344", %"class.v8::internal::ZoneMultiset.1344"* %27, i64 %16, i32 0, i32 0, i32 0
  %29 = load %"class.std::__1::__tree_end_node"*, %"class.std::__1::__tree_end_node"** %28, align 8
  %30 = getelementptr inbounds %"class.v8::internal::ZoneMultiset.1344", %"class.v8::internal::ZoneMultiset.1344"* %27, i64 %16, i32 0, i32 0, i32 1, i32 0, i32 0
  %31 = icmp eq %"class.std::__1::__tree_end_node"* %29, %30
  br i1 %31, label %157, label %32

32:                                               ; preds = %26, %154
  %33 = phi i32 [ %126, %154 ], [ %23, %26 ]
  %34 = phi %"class.std::__1::__tree_end_node"* [ %155, %154 ], [ %29, %26 ]
  %35 = getelementptr inbounds %"class.std::__1::__tree_end_node", %"class.std::__1::__tree_end_node"* %34, i64 4
  %36 = bitcast %"class.std::__1::__tree_end_node"* %35 to %"class.v8::internal::compiler::LiveRange"**
  %37 = load %"class.v8::internal::compiler::LiveRange"*, %"class.v8::internal::compiler::LiveRange"** %36, align 8
  %38 = getelementptr inbounds %"class.v8::internal::compiler::LiveRange", %"class.v8::internal::compiler::LiveRange"* %37, i64 0, i32 11, i32 0
  %39 = load i32, i32* %38, align 8
  %40 = icmp sgt i32 %33, %39
  br i1 %40, label %41, label %157

41:                                               ; preds = %32
  %42 = load %"class.v8::internal::compiler::UseInterval"*, %"class.v8::internal::compiler::UseInterval"** %15, align 8
  %43 = icmp eq %"class.v8::internal::compiler::UseInterval"* %42, null
  br i1 %43, label %125, label %44

44:                                               ; preds = %41
  %45 = getelementptr inbounds %"class.v8::internal::compiler::UseInterval", %"class.v8::internal::compiler::UseInterval"* %42, i64 0, i32 0, i32 0
  %46 = load i32, i32* %45, align 8
  %47 = getelementptr inbounds %"class.v8::internal::compiler::LiveRange", %"class.v8::internal::compiler::LiveRange"* %37, i64 0, i32 7
  %48 = load %"class.v8::internal::compiler::UseInterval"*, %"class.v8::internal::compiler::UseInterval"** %47, align 8
  %49 = icmp eq %"class.v8::internal::compiler::UseInterval"* %48, null
  br i1 %49, label %50, label %52

50:                                               ; preds = %44
  %51 = getelementptr inbounds %"class.v8::internal::compiler::LiveRange", %"class.v8::internal::compiler::LiveRange"* %37, i64 0, i32 3
  br label %58

52:                                               ; preds = %44
  %53 = getelementptr inbounds %"class.v8::internal::compiler::UseInterval", %"class.v8::internal::compiler::UseInterval"* %48, i64 0, i32 0, i32 0
  %54 = load i32, i32* %53, align 8
  %55 = icmp sgt i32 %54, %46
  br i1 %55, label %56, label %58

56:                                               ; preds = %52
  store %"class.v8::internal::compiler::UseInterval"* null, %"class.v8::internal::compiler::UseInterval"** %47, align 8
  %57 = getelementptr inbounds %"class.v8::internal::compiler::LiveRange", %"class.v8::internal::compiler::LiveRange"* %37, i64 0, i32 3
  br label %58

58:                                               ; preds = %56, %52, %50
  %59 = phi %"class.v8::internal::compiler::UseInterval"* [ null, %50 ], [ null, %56 ], [ %48, %52 ]
  %60 = phi %"class.v8::internal::compiler::UseInterval"** [ %51, %50 ], [ %57, %56 ], [ %47, %52 ]
  %61 = load %"class.v8::internal::compiler::UseInterval"*, %"class.v8::internal::compiler::UseInterval"** %60, align 8
  %62 = icmp eq %"class.v8::internal::compiler::UseInterval"* %61, null
  br i1 %62, label %125, label %63

63:                                               ; preds = %58
  %64 = getelementptr inbounds %"class.v8::internal::compiler::LiveRange", %"class.v8::internal::compiler::LiveRange"* %37, i64 0, i32 2
  br label %65

65:                                               ; preds = %115, %63
  %66 = phi %"class.v8::internal::compiler::UseInterval"* [ %59, %63 ], [ %116, %115 ]
  %67 = phi %"class.v8::internal::compiler::UseInterval"* [ %42, %63 ], [ %118, %115 ]
  %68 = phi %"class.v8::internal::compiler::UseInterval"* [ %61, %63 ], [ %117, %115 ]
  %69 = getelementptr inbounds %"class.v8::internal::compiler::UseInterval", %"class.v8::internal::compiler::UseInterval"* %68, i64 0, i32 0, i32 0
  %70 = load i32, i32* %69, align 8
  %71 = load %"class.v8::internal::compiler::UseInterval"*, %"class.v8::internal::compiler::UseInterval"** %5, align 8
  %72 = getelementptr inbounds %"class.v8::internal::compiler::UseInterval", %"class.v8::internal::compiler::UseInterval"* %71, i64 0, i32 1, i32 0
  %73 = load i32, i32* %72, align 4
  %74 = icmp sgt i32 %70, %73
  br i1 %74, label %125, label %75

75:                                               ; preds = %65
  %76 = getelementptr inbounds %"class.v8::internal::compiler::UseInterval", %"class.v8::internal::compiler::UseInterval"* %67, i64 0, i32 0, i32 0
  %77 = load i32, i32* %76, align 8
  %78 = load %"class.v8::internal::compiler::UseInterval"*, %"class.v8::internal::compiler::UseInterval"** %64, align 8
  %79 = getelementptr inbounds %"class.v8::internal::compiler::UseInterval", %"class.v8::internal::compiler::UseInterval"* %78, i64 0, i32 1, i32 0
  %80 = load i32, i32* %79, align 4
  %81 = icmp sgt i32 %77, %80
  br i1 %81, label %125, label %82

82:                                               ; preds = %75
  %83 = icmp slt i32 %77, %70
  %84 = select i1 %83, i32 %70, i32 %77
  %85 = select i1 %83, %"class.v8::internal::compiler::UseInterval"* %67, %"class.v8::internal::compiler::UseInterval"* %68
  %86 = getelementptr inbounds %"class.v8::internal::compiler::UseInterval", %"class.v8::internal::compiler::UseInterval"* %85, i64 0, i32 1, i32 0
  %87 = load i32, i32* %86, align 4
  %88 = icmp slt i32 %84, %87
  %89 = icmp ne i32 %84, -1
  %90 = and i1 %89, %88
  br i1 %90, label %122, label %91

91:                                               ; preds = %82
  %92 = icmp slt i32 %70, %77
  br i1 %92, label %93, label %112

93:                                               ; preds = %91
  %94 = getelementptr inbounds %"class.v8::internal::compiler::UseInterval", %"class.v8::internal::compiler::UseInterval"* %68, i64 0, i32 2
  %95 = load %"class.v8::internal::compiler::UseInterval"*, %"class.v8::internal::compiler::UseInterval"** %94, align 8
  %96 = icmp eq %"class.v8::internal::compiler::UseInterval"* %95, null
  br i1 %96, label %125, label %97

97:                                               ; preds = %93
  %98 = getelementptr inbounds %"class.v8::internal::compiler::UseInterval", %"class.v8::internal::compiler::UseInterval"* %95, i64 0, i32 0, i32 0
  %99 = load i32, i32* %98, align 8
  %100 = icmp sgt i32 %99, %73
  br i1 %100, label %125, label %101

101:                                              ; preds = %97
  %102 = icmp sgt i32 %99, %46
  br i1 %102, label %115, label %103

103:                                              ; preds = %101
  %104 = icmp eq %"class.v8::internal::compiler::UseInterval"* %66, null
  br i1 %104, label %108, label %105

105:                                              ; preds = %103
  %106 = getelementptr inbounds %"class.v8::internal::compiler::UseInterval", %"class.v8::internal::compiler::UseInterval"* %66, i64 0, i32 0, i32 0
  %107 = load i32, i32* %106, align 8
  br label %108

108:                                              ; preds = %105, %103
  %109 = phi i32 [ %107, %105 ], [ -1, %103 ]
  %110 = icmp sgt i32 %99, %109
  br i1 %110, label %111, label %115

111:                                              ; preds = %108
  store %"class.v8::internal::compiler::UseInterval"* %95, %"class.v8::internal::compiler::UseInterval"** %47, align 8
  br label %115

112:                                              ; preds = %91
  %113 = getelementptr inbounds %"class.v8::internal::compiler::UseInterval", %"class.v8::internal::compiler::UseInterval"* %67, i64 0, i32 2
  %114 = load %"class.v8::internal::compiler::UseInterval"*, %"class.v8::internal::compiler::UseInterval"** %113, align 8
  br label %115

115:                                              ; preds = %112, %111, %108, %101
  %116 = phi %"class.v8::internal::compiler::UseInterval"* [ %66, %112 ], [ %66, %101 ], [ %66, %108 ], [ %95, %111 ]
  %117 = phi %"class.v8::internal::compiler::UseInterval"* [ %68, %112 ], [ %95, %101 ], [ %95, %108 ], [ %95, %111 ]
  %118 = phi %"class.v8::internal::compiler::UseInterval"* [ %114, %112 ], [ %67, %101 ], [ %67, %108 ], [ %67, %111 ]
  %119 = icmp ne %"class.v8::internal::compiler::UseInterval"* %117, null
  %120 = icmp ne %"class.v8::internal::compiler::UseInterval"* %118, null
  %121 = and i1 %119, %120
  br i1 %121, label %65, label %125

122:                                              ; preds = %82
  %123 = icmp slt i32 %84, %33
  %124 = select i1 %123, i32 %84, i32 %33
  br label %125

125:                                              ; preds = %115, %65, %75, %97, %93, %58, %41, %122
  %126 = phi i32 [ %33, %58 ], [ %33, %41 ], [ %124, %122 ], [ %33, %93 ], [ %33, %97 ], [ %33, %75 ], [ %33, %65 ], [ %33, %115 ]
  %127 = getelementptr inbounds %"class.std::__1::__tree_end_node", %"class.std::__1::__tree_end_node"* %34, i64 1, i32 0
  %128 = load %"class.std::__1::__tree_node_base"*, %"class.std::__1::__tree_node_base"** %127, align 8
  %129 = icmp eq %"class.std::__1::__tree_node_base"* %128, null
  br i1 %129, label %130, label %138

130:                                              ; preds = %125
  %131 = bitcast %"class.std::__1::__tree_end_node"* %34 to %"class.std::__1::__tree_node_base"*
  %132 = getelementptr inbounds %"class.std::__1::__tree_end_node", %"class.std::__1::__tree_end_node"* %34, i64 2
  %133 = bitcast %"class.std::__1::__tree_end_node"* %132 to %"class.std::__1::__tree_end_node"**
  %134 = load %"class.std::__1::__tree_end_node"*, %"class.std::__1::__tree_end_node"** %133, align 8
  %135 = getelementptr inbounds %"class.std::__1::__tree_end_node", %"class.std::__1::__tree_end_node"* %134, i64 0, i32 0
  %136 = load %"class.std::__1::__tree_node_base"*, %"class.std::__1::__tree_node_base"** %135, align 8
  %137 = icmp eq %"class.std::__1::__tree_node_base"* %136, %131
  br i1 %137, label %154, label %145

138:                                              ; preds = %125, %138
  %139 = phi %"class.std::__1::__tree_node_base"* [ %141, %138 ], [ %128, %125 ]
  %140 = getelementptr inbounds %"class.std::__1::__tree_node_base", %"class.std::__1::__tree_node_base"* %139, i64 0, i32 0, i32 0
  %141 = load %"class.std::__1::__tree_node_base"*, %"class.std::__1::__tree_node_base"** %140, align 8
  %142 = icmp eq %"class.std::__1::__tree_node_base"* %141, null
  br i1 %142, label %143, label %138

143:                                              ; preds = %138
  %144 = getelementptr inbounds %"class.std::__1::__tree_node_base", %"class.std::__1::__tree_node_base"* %139, i64 0, i32 0
  br label %154

145:                                              ; preds = %130, %145
  %146 = phi %"class.std::__1::__tree_end_node"** [ %149, %145 ], [ %133, %130 ]
  %147 = bitcast %"class.std::__1::__tree_end_node"** %146 to %"class.std::__1::__tree_node_base"**
  %148 = load %"class.std::__1::__tree_node_base"*, %"class.std::__1::__tree_node_base"** %147, align 8
  %149 = getelementptr inbounds %"class.std::__1::__tree_node_base", %"class.std::__1::__tree_node_base"* %148, i64 0, i32 2
  %150 = load %"class.std::__1::__tree_end_node"*, %"class.std::__1::__tree_end_node"** %149, align 8
  %151 = getelementptr inbounds %"class.std::__1::__tree_end_node", %"class.std::__1::__tree_end_node"* %150, i64 0, i32 0
  %152 = load %"class.std::__1::__tree_node_base"*, %"class.std::__1::__tree_node_base"** %151, align 8
  %153 = icmp eq %"class.std::__1::__tree_node_base"* %152, %148
  br i1 %153, label %154, label %145

154:                                              ; preds = %145, %130, %143
  %155 = phi %"class.std::__1::__tree_end_node"* [ %144, %143 ], [ %134, %130 ], [ %150, %145 ]
  %156 = icmp eq %"class.std::__1::__tree_end_node"* %155, %30
  br i1 %156, label %157, label %32

157:                                              ; preds = %154, %32, %26, %22
  %158 = phi i32 [ %23, %26 ], [ %23, %22 ], [ %126, %154 ], [ %33, %32 ]
  %159 = add nuw nsw i64 %24, 1
  %160 = load i32, i32* %7, align 4
  %161 = sext i32 %160 to i64
  %162 = icmp slt i64 %159, %161
  br i1 %162, label %22, label %17

163:                                              ; preds = %17
  %164 = getelementptr inbounds %"class.v8::internal::compiler::LinearScanAllocator", %"class.v8::internal::compiler::LinearScanAllocator"* %0, i64 0, i32 0, i32 0
  %165 = load %"class.v8::internal::compiler::TopTierRegisterAllocationData"*, %"class.v8::internal::compiler::TopTierRegisterAllocationData"** %164, align 8
  %166 = getelementptr inbounds %"class.v8::internal::compiler::TopTierRegisterAllocationData", %"class.v8::internal::compiler::TopTierRegisterAllocationData"* %165, i64 0, i32 23, i32 0
  %167 = load i32, i32* %166, align 4
  %168 = and i32 %167, 1
  %169 = icmp eq i32 %168, 0
  br i1 %169, label %177, label %170

170:                                              ; preds = %163
  %171 = getelementptr inbounds %"class.v8::internal::compiler::LiveRange", %"class.v8::internal::compiler::LiveRange"* %1, i64 0, i32 5
  %172 = load %"class.v8::internal::compiler::TopLevelLiveRange"*, %"class.v8::internal::compiler::TopLevelLiveRange"** %171, align 8
  %173 = getelementptr inbounds %"class.v8::internal::compiler::TopLevelLiveRange", %"class.v8::internal::compiler::TopLevelLiveRange"* %172, i64 0, i32 1
  %174 = load i32, i32* %173, align 4
  %175 = getelementptr inbounds %"class.v8::internal::compiler::LiveRange", %"class.v8::internal::compiler::LiveRange"* %1, i64 0, i32 0
  %176 = load i32, i32* %175, align 8
  tail call void (i8*, ...) @_ZN2v88internal6PrintFEPKcz(i8* getelementptr inbounds ([31 x i8], [31 x i8]* @.str.67, i64 0, i64 0), i32 %174, i32 %176, i32 %158) #16
  br label %177

177:                                              ; preds = %163, %170
  %178 = tail call %"class.v8::internal::compiler::LiveRange"* @_ZN2v88internal8compiler17RegisterAllocator12SplitRangeAtEPNS1_9LiveRangeENS1_16LifetimePositionE(%"class.v8::internal::compiler::RegisterAllocator"* %6, %"class.v8::internal::compiler::LiveRange"* %1, i32 %158)
  %179 = bitcast %"class.v8::internal::compiler::LiveRange"** %4 to i8*
  call void @llvm.lifetime.start.p0i8(i64 8, i8* nonnull %179)
  store %"class.v8::internal::compiler::LiveRange"* %178, %"class.v8::internal::compiler::LiveRange"** %4, align 8
  %180 = icmp eq %"class.v8::internal::compiler::LiveRange"* %178, null
  br i1 %180, label %201, label %181

181:                                              ; preds = %177
  %182 = getelementptr inbounds %"class.v8::internal::compiler::LiveRange", %"class.v8::internal::compiler::LiveRange"* %178, i64 0, i32 3
  %183 = load %"class.v8::internal::compiler::UseInterval"*, %"class.v8::internal::compiler::UseInterval"** %182, align 8
  %184 = icmp eq %"class.v8::internal::compiler::UseInterval"* %183, null
  br i1 %184, label %201, label %185

185:                                              ; preds = %181
  %186 = load %"class.v8::internal::compiler::TopTierRegisterAllocationData"*, %"class.v8::internal::compiler::TopTierRegisterAllocationData"** %164, align 8
  %187 = getelementptr inbounds %"class.v8::internal::compiler::TopTierRegisterAllocationData", %"class.v8::internal::compiler::TopTierRegisterAllocationData"* %186, i64 0, i32 23, i32 0
  %188 = load i32, i32* %187, align 4
  %189 = and i32 %188, 1
  %190 = icmp eq i32 %189, 0
  br i1 %190, label %198, label %191

191:                                              ; preds = %185
  %192 = getelementptr inbounds %"class.v8::internal::compiler::LiveRange", %"class.v8::internal::compiler::LiveRange"* %178, i64 0, i32 5
  %193 = load %"class.v8::internal::compiler::TopLevelLiveRange"*, %"class.v8::internal::compiler::TopLevelLiveRange"** %192, align 8
  %194 = getelementptr inbounds %"class.v8::internal::compiler::TopLevelLiveRange", %"class.v8::internal::compiler::TopLevelLiveRange"* %193, i64 0, i32 1
  %195 = load i32, i32* %194, align 4
  %196 = getelementptr inbounds %"class.v8::internal::compiler::LiveRange", %"class.v8::internal::compiler::LiveRange"* %178, i64 0, i32 0
  %197 = load i32, i32* %196, align 8
  tail call void (i8*, ...) @_ZN2v88internal6PrintFEPKcz(i8* getelementptr inbounds ([35 x i8], [35 x i8]* @.str.80, i64 0, i64 0), i32 %195, i32 %197) #16
  br label %198

198:                                              ; preds = %191, %185
  %199 = getelementptr inbounds %"class.v8::internal::compiler::LinearScanAllocator", %"class.v8::internal::compiler::LinearScanAllocator"* %0, i64 0, i32 1, i32 0, i32 0
  %200 = call %"class.std::__1::__tree_end_node"* @_ZNSt3__16__treeIPN2v88internal8compiler9LiveRangeENS3_19LinearScanAllocator26UnhandledLiveRangeOrderingENS2_13ZoneAllocatorIS5_EEE15__emplace_multiIJRKS5_EEENS_15__tree_iteratorIS5_PNS_11__tree_nodeIS5_PvEElEEDpOT_(%"class.std::__1::__tree.1338"* %199, %"class.v8::internal::compiler::LiveRange"** nonnull dereferenceable(8) %4) #16
  br label %201

201:                                              ; preds = %177, %181, %198
  call void @llvm.lifetime.end.p0i8(i64 8, i8* nonnull %179)
  br label %202

202:                                              ; preds = %3, %17, %201
  call void @_ZN2v88internal8compiler19LinearScanAllocator28SetLiveRangeAssignedRegisterEPNS1_9LiveRangeEi(%"class.v8::internal::compiler::LinearScanAllocator"* %0, %"class.v8::internal::compiler::LiveRange"* %1, i32 %2)
  ret %"class.v8::internal::compiler::LiveRange"* %1
}

; Function Attrs: nofree norecurse nounwind ssp uwtable
define hidden void @_ZN2v88internal8compiler19LinearScanAllocator28SetLiveRangeAssignedRegisterEPNS1_9LiveRangeEi(%"class.v8::internal::compiler::LinearScanAllocator"* nocapture readonly, %"class.v8::internal::compiler::LiveRange"*, i32) local_unnamed_addr #3 align 2 {
  %4 = getelementptr inbounds %"class.v8::internal::compiler::LinearScanAllocator", %"class.v8::internal::compiler::LinearScanAllocator"* %0, i64 0, i32 0, i32 0
  %5 = load %"class.v8::internal::compiler::TopTierRegisterAllocationData"*, %"class.v8::internal::compiler::TopTierRegisterAllocationData"** %4, align 8
  %6 = getelementptr inbounds %"class.v8::internal::compiler::LiveRange", %"class.v8::internal::compiler::LiveRange"* %1, i64 0, i32 1
  %7 = load i32, i32* %6, align 4
  %8 = lshr i32 %7, 13
  %9 = trunc i32 %8 to i8
  switch i8 %9, label %42 [
    i8 12, label %10
    i8 14, label %10
    i8 13, label %26
  ]

10:                                               ; preds = %3, %3
  %11 = getelementptr inbounds %"class.v8::internal::compiler::TopTierRegisterAllocationData", %"class.v8::internal::compiler::TopTierRegisterAllocationData"* %5, i64 0, i32 17
  %12 = load %"class.v8::internal::BitVector"*, %"class.v8::internal::BitVector"** %11, align 8
  %13 = getelementptr inbounds %"class.v8::internal::BitVector", %"class.v8::internal::BitVector"* %12, i64 0, i32 1
  %14 = load i32, i32* %13, align 4
  %15 = icmp eq i32 %14, 1
  br i1 %15, label %16, label %19

16:                                               ; preds = %10
  %17 = getelementptr inbounds %"class.v8::internal::BitVector", %"class.v8::internal::BitVector"* %12, i64 0, i32 2
  %18 = bitcast %"union.v8::internal::BitVector::DataStorage"* %17 to i64*
  br label %58

19:                                               ; preds = %10
  %20 = srem i32 %2, 64
  %21 = getelementptr inbounds %"class.v8::internal::BitVector", %"class.v8::internal::BitVector"* %12, i64 0, i32 2, i32 0
  %22 = load i64*, i64** %21, align 8
  %23 = sdiv i32 %2, 64
  %24 = sext i32 %23 to i64
  %25 = getelementptr inbounds i64, i64* %22, i64 %24
  br label %58

26:                                               ; preds = %3
  %27 = getelementptr inbounds %"class.v8::internal::compiler::TopTierRegisterAllocationData", %"class.v8::internal::compiler::TopTierRegisterAllocationData"* %5, i64 0, i32 17
  %28 = load %"class.v8::internal::BitVector"*, %"class.v8::internal::BitVector"** %27, align 8
  %29 = getelementptr inbounds %"class.v8::internal::BitVector", %"class.v8::internal::BitVector"* %28, i64 0, i32 1
  %30 = load i32, i32* %29, align 4
  %31 = icmp eq i32 %30, 1
  br i1 %31, label %32, label %35

32:                                               ; preds = %26
  %33 = getelementptr inbounds %"class.v8::internal::BitVector", %"class.v8::internal::BitVector"* %28, i64 0, i32 2
  %34 = bitcast %"union.v8::internal::BitVector::DataStorage"* %33 to i64*
  br label %58

35:                                               ; preds = %26
  %36 = srem i32 %2, 64
  %37 = getelementptr inbounds %"class.v8::internal::BitVector", %"class.v8::internal::BitVector"* %28, i64 0, i32 2, i32 0
  %38 = load i64*, i64** %37, align 8
  %39 = sdiv i32 %2, 64
  %40 = sext i32 %39 to i64
  %41 = getelementptr inbounds i64, i64* %38, i64 %40
  br label %58

42:                                               ; preds = %3
  %43 = getelementptr inbounds %"class.v8::internal::compiler::TopTierRegisterAllocationData", %"class.v8::internal::compiler::TopTierRegisterAllocationData"* %5, i64 0, i32 16
  %44 = load %"class.v8::internal::BitVector"*, %"class.v8::internal::BitVector"** %43, align 8
  %45 = getelementptr inbounds %"class.v8::internal::BitVector", %"class.v8::internal::BitVector"* %44, i64 0, i32 1
  %46 = load i32, i32* %45, align 4
  %47 = icmp eq i32 %46, 1
  br i1 %47, label %48, label %51

48:                                               ; preds = %42
  %49 = getelementptr inbounds %"class.v8::internal::BitVector", %"class.v8::internal::BitVector"* %44, i64 0, i32 2
  %50 = bitcast %"union.v8::internal::BitVector::DataStorage"* %49 to i64*
  br label %58

51:                                               ; preds = %42
  %52 = srem i32 %2, 64
  %53 = getelementptr inbounds %"class.v8::internal::BitVector", %"class.v8::internal::BitVector"* %44, i64 0, i32 2, i32 0
  %54 = load i64*, i64** %53, align 8
  %55 = sdiv i32 %2, 64
  %56 = sext i32 %55 to i64
  %57 = getelementptr inbounds i64, i64* %54, i64 %56
  br label %58

58:                                               ; preds = %16, %19, %32, %35, %48, %51
  %59 = phi i64* [ %18, %16 ], [ %25, %19 ], [ %34, %32 ], [ %41, %35 ], [ %50, %48 ], [ %57, %51 ]
  %60 = phi i32 [ %2, %16 ], [ %20, %19 ], [ %2, %32 ], [ %36, %35 ], [ %2, %48 ], [ %52, %51 ]
  %61 = zext i32 %60 to i64
  %62 = shl i64 1, %61
  %63 = load i64, i64* %59, align 8
  %64 = or i64 %63, %62
  store i64 %64, i64* %59, align 8
  %65 = load i32, i32* %6, align 4
  %66 = and i32 %65, -8065
  %67 = shl i32 %2, 7
  %68 = or i32 %66, %67
  store i32 %68, i32* %6, align 4
  %69 = getelementptr inbounds %"class.v8::internal::compiler::LiveRange", %"class.v8::internal::compiler::LiveRange"* %1, i64 0, i32 4
  %70 = load %"class.v8::internal::compiler::UsePosition"*, %"class.v8::internal::compiler::UsePosition"** %69, align 8
  %71 = icmp eq %"class.v8::internal::compiler::UsePosition"* %70, null
  br i1 %71, label %91, label %72

72:                                               ; preds = %58
  %73 = shl i32 %2, 6
  br label %74

74:                                               ; preds = %87, %72
  %75 = phi %"class.v8::internal::compiler::UsePosition"* [ %70, %72 ], [ %89, %87 ]
  %76 = getelementptr inbounds %"class.v8::internal::compiler::UsePosition", %"class.v8::internal::compiler::UsePosition"* %75, i64 0, i32 0
  %77 = load %"class.v8::internal::compiler::InstructionOperand"*, %"class.v8::internal::compiler::InstructionOperand"** %76, align 8
  %78 = icmp eq %"class.v8::internal::compiler::InstructionOperand"* %77, null
  br i1 %78, label %87, label %79

79:                                               ; preds = %74
  %80 = getelementptr inbounds %"class.v8::internal::compiler::UsePosition", %"class.v8::internal::compiler::UsePosition"* %75, i64 0, i32 4
  %81 = load i32, i32* %80, align 4
  %82 = and i32 %81, 3
  %83 = icmp eq i32 %82, 3
  br i1 %83, label %87, label %84

84:                                               ; preds = %79
  %85 = and i32 %81, -4033
  %86 = or i32 %85, %73
  store i32 %86, i32* %80, align 4
  br label %87

87:                                               ; preds = %84, %79, %74
  %88 = getelementptr inbounds %"class.v8::internal::compiler::UsePosition", %"class.v8::internal::compiler::UsePosition"* %75, i64 0, i32 2
  %89 = load %"class.v8::internal::compiler::UsePosition"*, %"class.v8::internal::compiler::UsePosition"** %88, align 8
  %90 = icmp eq %"class.v8::internal::compiler::UsePosition"* %89, null
  br i1 %90, label %91, label %74

91:                                               ; preds = %87, %58
  %92 = getelementptr inbounds %"class.v8::internal::compiler::LiveRange", %"class.v8::internal::compiler::LiveRange"* %1, i64 0, i32 10
  %93 = load %"class.v8::internal::compiler::LiveRangeBundle"*, %"class.v8::internal::compiler::LiveRangeBundle"** %92, align 8
  %94 = icmp eq %"class.v8::internal::compiler::LiveRangeBundle"* %93, null
  br i1 %94, label %100, label %95

95:                                               ; preds = %91
  %96 = getelementptr inbounds %"class.v8::internal::compiler::LiveRangeBundle", %"class.v8::internal::compiler::LiveRangeBundle"* %93, i64 0, i32 3
  %97 = load i32, i32* %96, align 4
  %98 = icmp eq i32 %97, 32
  br i1 %98, label %99, label %100

99:                                               ; preds = %95
  store i32 %2, i32* %96, align 4
  br label %100

100:                                              ; preds = %91, %95, %99
  %101 = getelementptr inbounds %"class.v8::internal::compiler::LiveRange", %"class.v8::internal::compiler::LiveRange"* %1, i64 0, i32 5
  %102 = bitcast %"class.v8::internal::compiler::TopLevelLiveRange"** %101 to %"class.v8::internal::compiler::LiveRange"**
  %103 = load %"class.v8::internal::compiler::LiveRange"*, %"class.v8::internal::compiler::LiveRange"** %102, align 8
  %104 = icmp eq %"class.v8::internal::compiler::LiveRange"* %103, %1
  br i1 %104, label %105, label %147

105:                                              ; preds = %100
  %106 = getelementptr inbounds %"class.v8::internal::compiler::LiveRange", %"class.v8::internal::compiler::LiveRange"* %103, i64 0, i32 1
  %107 = load i32, i32* %106, align 4
  %108 = and i32 %107, 8
  %109 = icmp eq i32 %108, 0
  br i1 %109, label %147, label %110

110:                                              ; preds = %105
  %111 = load %"class.v8::internal::compiler::TopTierRegisterAllocationData"*, %"class.v8::internal::compiler::TopTierRegisterAllocationData"** %4, align 8
  %112 = getelementptr inbounds %"class.v8::internal::compiler::LiveRange", %"class.v8::internal::compiler::LiveRange"* %103, i64 0, i32 12
  %113 = bitcast [4 x i8]* %112 to i32*
  %114 = load i32, i32* %113, align 4
  %115 = getelementptr inbounds %"class.v8::internal::compiler::TopTierRegisterAllocationData", %"class.v8::internal::compiler::TopTierRegisterAllocationData"* %111, i64 0, i32 6, i32 0, i32 0, i32 1, i32 0, i32 0
  %116 = bitcast %"class.std::__1::__tree_end_node"* %115 to %"class.std::__1::__tree_node.1558"**
  %117 = load %"class.std::__1::__tree_node.1558"*, %"class.std::__1::__tree_node.1558"** %116, align 8
  %118 = icmp eq %"class.std::__1::__tree_node.1558"* %117, null
  br i1 %118, label %140, label %119

119:                                              ; preds = %110, %119
  %120 = phi %"class.std::__1::__tree_end_node"* [ %130, %119 ], [ %115, %110 ]
  %121 = phi %"class.std::__1::__tree_node.1558"* [ %131, %119 ], [ %117, %110 ]
  %122 = getelementptr inbounds %"class.std::__1::__tree_node.1558", %"class.std::__1::__tree_node.1558"* %121, i64 0, i32 1, i32 0, i32 0
  %123 = load i32, i32* %122, align 4
  %124 = icmp slt i32 %123, %114
  %125 = getelementptr inbounds %"class.std::__1::__tree_node.1558", %"class.std::__1::__tree_node.1558"* %121, i64 0, i32 0, i32 1
  %126 = bitcast %"class.std::__1::__tree_node_base"** %125 to %"class.std::__1::__tree_node.1558"**
  %127 = getelementptr inbounds %"class.std::__1::__tree_node.1558", %"class.std::__1::__tree_node.1558"* %121, i64 0, i32 0, i32 0
  %128 = bitcast %"class.std::__1::__tree_node.1558"* %121 to %"class.std::__1::__tree_node.1558"**
  %129 = select i1 %124, %"class.std::__1::__tree_node.1558"** %126, %"class.std::__1::__tree_node.1558"** %128
  %130 = select i1 %124, %"class.std::__1::__tree_end_node"* %120, %"class.std::__1::__tree_end_node"* %127
  %131 = load %"class.std::__1::__tree_node.1558"*, %"class.std::__1::__tree_node.1558"** %129, align 8
  %132 = icmp eq %"class.std::__1::__tree_node.1558"* %131, null
  br i1 %132, label %133, label %119

133:                                              ; preds = %119
  %134 = icmp eq %"class.std::__1::__tree_end_node"* %130, %115
  br i1 %134, label %140, label %135

135:                                              ; preds = %133
  %136 = getelementptr inbounds %"class.std::__1::__tree_end_node", %"class.std::__1::__tree_end_node"* %130, i64 4
  %137 = bitcast %"class.std::__1::__tree_end_node"* %136 to i32*
  %138 = load i32, i32* %137, align 4
  %139 = icmp sgt i32 %138, %114
  br i1 %139, label %140, label %141

140:                                              ; preds = %135, %133, %110
  br label %141

141:                                              ; preds = %135, %140
  %142 = phi %"class.std::__1::__tree_end_node"* [ %115, %140 ], [ %130, %135 ]
  %143 = getelementptr inbounds %"class.std::__1::__tree_end_node", %"class.std::__1::__tree_end_node"* %142, i64 5
  %144 = bitcast %"class.std::__1::__tree_end_node"* %143 to %"class.v8::internal::compiler::TopTierRegisterAllocationData::PhiMapValue"**
  %145 = load %"class.v8::internal::compiler::TopTierRegisterAllocationData::PhiMapValue"*, %"class.v8::internal::compiler::TopTierRegisterAllocationData::PhiMapValue"** %144, align 8
  %146 = getelementptr inbounds %"class.v8::internal::compiler::TopTierRegisterAllocationData::PhiMapValue", %"class.v8::internal::compiler::TopTierRegisterAllocationData::PhiMapValue"* %145, i64 0, i32 3
  store i32 %2, i32* %146, align 8
  br label %147

147:                                              ; preds = %105, %141, %100
  ret void
}

; Function Attrs: nounwind ssp uwtable
define hidden void @_ZN2v88internal8compiler19LinearScanAllocator16ReloadLiveRangesERKNS0_16ZoneUnorderedSetINS2_17RangeWithRegisterENS4_4HashENS4_6EqualsEEENS1_16LifetimePositionE(%"class.v8::internal::compiler::LinearScanAllocator"*, %"class.v8::internal::ZoneUnorderedSet"* nocapture readonly dereferenceable(56), i32) local_unnamed_addr #0 align 2 {
  %4 = alloca %"class.v8::internal::compiler::LiveRange"*, align 8
  %5 = alloca %"class.v8::internal::compiler::LiveRange"*, align 8
  %6 = alloca %"class.v8::internal::compiler::LiveRange"*, align 8
  %7 = getelementptr inbounds %"class.v8::internal::ZoneUnorderedSet", %"class.v8::internal::ZoneUnorderedSet"* %1, i64 0, i32 0, i32 0, i32 1, i32 0, i32 0, i32 0
  %8 = bitcast %"struct.std::__1::__hash_node_base.1398"** %7 to i64*
  %9 = load i64, i64* %8, align 8
  %10 = icmp eq i64 %9, 0
  br i1 %10, label %24, label %11

11:                                               ; preds = %3
  %12 = bitcast %"class.v8::internal::compiler::LiveRange"** %6 to i8*
  %13 = bitcast %"class.v8::internal::compiler::LinearScanAllocator"* %0 to %"class.v8::internal::compiler::RegisterAllocator"*
  %14 = getelementptr inbounds %"class.v8::internal::compiler::LinearScanAllocator", %"class.v8::internal::compiler::LinearScanAllocator"* %0, i64 0, i32 0, i32 0
  %15 = bitcast %"class.v8::internal::compiler::LiveRange"** %5 to i8*
  %16 = getelementptr inbounds %"class.v8::internal::compiler::LinearScanAllocator", %"class.v8::internal::compiler::LinearScanAllocator"* %0, i64 0, i32 1, i32 0, i32 0
  %17 = bitcast %"class.v8::internal::compiler::LiveRange"** %4 to i8*
  %18 = getelementptr inbounds %"class.v8::internal::compiler::LinearScanAllocator", %"class.v8::internal::compiler::LinearScanAllocator"* %0, i64 0, i32 1, i32 0
  %19 = getelementptr inbounds %"class.std::__1::multiset", %"class.std::__1::multiset"* %18, i64 0, i32 0
  %20 = getelementptr inbounds %"class.std::__1::multiset", %"class.std::__1::multiset"* %18, i64 0, i32 0, i32 0
  %21 = bitcast %"class.std::__1::multiset"* %18 to i64*
  %22 = getelementptr inbounds %"class.v8::internal::compiler::LinearScanAllocator", %"class.v8::internal::compiler::LinearScanAllocator"* %0, i64 0, i32 1, i32 0, i32 0, i32 2, i32 0, i32 0
  %23 = getelementptr inbounds %"class.v8::internal::compiler::LinearScanAllocator", %"class.v8::internal::compiler::LinearScanAllocator"* %0, i64 0, i32 1, i32 0, i32 0, i32 1, i32 0, i32 0, i32 0
  br label %25

24:                                               ; preds = %278, %3
  ret void

25:                                               ; preds = %11, %278
  %26 = phi i64 [ %9, %11 ], [ %280, %278 ]
  %27 = inttoptr i64 %26 to %"struct.std::__1::__hash_node"*
  %28 = getelementptr inbounds %"struct.std::__1::__hash_node", %"struct.std::__1::__hash_node"* %27, i64 0, i32 2, i32 0
  %29 = load %"class.v8::internal::compiler::TopLevelLiveRange"*, %"class.v8::internal::compiler::TopLevelLiveRange"** %28, align 8
  %30 = getelementptr inbounds %"struct.std::__1::__hash_node", %"struct.std::__1::__hash_node"* %27, i64 0, i32 2, i32 1
  %31 = load i32, i32* %30, align 8
  call void @llvm.lifetime.start.p0i8(i64 8, i8* nonnull %12) #16
  %32 = getelementptr inbounds %"class.v8::internal::compiler::TopLevelLiveRange", %"class.v8::internal::compiler::TopLevelLiveRange"* %29, i64 0, i32 9
  %33 = load %"class.v8::internal::compiler::LiveRange"*, %"class.v8::internal::compiler::LiveRange"** %32, align 8
  %34 = getelementptr inbounds %"class.v8::internal::compiler::LiveRange", %"class.v8::internal::compiler::LiveRange"* %33, i64 0, i32 3
  %35 = load %"class.v8::internal::compiler::UseInterval"*, %"class.v8::internal::compiler::UseInterval"** %34, align 8
  %36 = getelementptr inbounds %"class.v8::internal::compiler::UseInterval", %"class.v8::internal::compiler::UseInterval"* %35, i64 0, i32 0, i32 0
  %37 = load i32, i32* %36, align 8
  %38 = icmp sgt i32 %37, %2
  %39 = bitcast %"class.v8::internal::compiler::TopLevelLiveRange"* %29 to %"class.v8::internal::compiler::LiveRange"*
  %40 = select i1 %38, %"class.v8::internal::compiler::LiveRange"* %39, %"class.v8::internal::compiler::LiveRange"* %33
  %41 = icmp eq %"class.v8::internal::compiler::LiveRange"* %40, null
  br i1 %41, label %53, label %42

42:                                               ; preds = %25, %49
  %43 = phi %"class.v8::internal::compiler::LiveRange"* [ %51, %49 ], [ %40, %25 ]
  %44 = getelementptr inbounds %"class.v8::internal::compiler::LiveRange", %"class.v8::internal::compiler::LiveRange"* %43, i64 0, i32 2
  %45 = load %"class.v8::internal::compiler::UseInterval"*, %"class.v8::internal::compiler::UseInterval"** %44, align 8
  %46 = getelementptr inbounds %"class.v8::internal::compiler::UseInterval", %"class.v8::internal::compiler::UseInterval"* %45, i64 0, i32 1, i32 0
  %47 = load i32, i32* %46, align 4
  %48 = icmp sgt i32 %47, %2
  br i1 %48, label %55, label %49

49:                                               ; preds = %42
  %50 = getelementptr inbounds %"class.v8::internal::compiler::LiveRange", %"class.v8::internal::compiler::LiveRange"* %43, i64 0, i32 6
  %51 = load %"class.v8::internal::compiler::LiveRange"*, %"class.v8::internal::compiler::LiveRange"** %50, align 8
  %52 = icmp eq %"class.v8::internal::compiler::LiveRange"* %51, null
  br i1 %52, label %53, label %42

53:                                               ; preds = %49, %25
  %54 = phi %"class.v8::internal::compiler::LiveRange"* [ null, %25 ], [ %43, %49 ]
  store %"class.v8::internal::compiler::LiveRange"* %54, %"class.v8::internal::compiler::LiveRange"** %32, align 8
  br label %109

55:                                               ; preds = %42
  %56 = getelementptr inbounds %"class.v8::internal::compiler::LiveRange", %"class.v8::internal::compiler::LiveRange"* %43, i64 0, i32 2
  store %"class.v8::internal::compiler::LiveRange"* %43, %"class.v8::internal::compiler::LiveRange"** %32, align 8
  %57 = getelementptr inbounds %"class.v8::internal::compiler::LiveRange", %"class.v8::internal::compiler::LiveRange"* %43, i64 0, i32 3
  %58 = load %"class.v8::internal::compiler::UseInterval"*, %"class.v8::internal::compiler::UseInterval"** %57, align 8
  %59 = icmp eq %"class.v8::internal::compiler::UseInterval"* %58, null
  br i1 %59, label %109, label %60

60:                                               ; preds = %55
  %61 = getelementptr inbounds %"class.v8::internal::compiler::UseInterval", %"class.v8::internal::compiler::UseInterval"* %58, i64 0, i32 0, i32 0
  %62 = load i32, i32* %61, align 8
  %63 = icmp sgt i32 %62, %2
  br i1 %63, label %109, label %64

64:                                               ; preds = %60
  %65 = load %"class.v8::internal::compiler::UseInterval"*, %"class.v8::internal::compiler::UseInterval"** %56, align 8
  %66 = getelementptr inbounds %"class.v8::internal::compiler::UseInterval", %"class.v8::internal::compiler::UseInterval"* %65, i64 0, i32 1, i32 0
  %67 = load i32, i32* %66, align 4
  %68 = icmp sgt i32 %67, %2
  br i1 %68, label %69, label %109

69:                                               ; preds = %64
  %70 = getelementptr inbounds %"class.v8::internal::compiler::LiveRange", %"class.v8::internal::compiler::LiveRange"* %43, i64 0, i32 7
  %71 = load %"class.v8::internal::compiler::UseInterval"*, %"class.v8::internal::compiler::UseInterval"** %70, align 8
  %72 = icmp eq %"class.v8::internal::compiler::UseInterval"* %71, null
  br i1 %72, label %78, label %73

73:                                               ; preds = %69
  %74 = getelementptr inbounds %"class.v8::internal::compiler::UseInterval", %"class.v8::internal::compiler::UseInterval"* %71, i64 0, i32 0, i32 0
  %75 = load i32, i32* %74, align 8
  %76 = icmp sgt i32 %75, %2
  br i1 %76, label %77, label %78

77:                                               ; preds = %73
  store %"class.v8::internal::compiler::UseInterval"* null, %"class.v8::internal::compiler::UseInterval"** %70, align 8
  br label %78

78:                                               ; preds = %77, %73, %69
  %79 = phi %"class.v8::internal::compiler::UseInterval"** [ %57, %77 ], [ %70, %73 ], [ %57, %69 ]
  %80 = load %"class.v8::internal::compiler::UseInterval"*, %"class.v8::internal::compiler::UseInterval"** %79, align 8
  %81 = icmp eq %"class.v8::internal::compiler::UseInterval"* %80, null
  br i1 %81, label %109, label %86

82:                                               ; preds = %105
  %83 = getelementptr inbounds %"class.v8::internal::compiler::UseInterval", %"class.v8::internal::compiler::UseInterval"* %87, i64 0, i32 2
  %84 = load %"class.v8::internal::compiler::UseInterval"*, %"class.v8::internal::compiler::UseInterval"** %83, align 8
  %85 = icmp eq %"class.v8::internal::compiler::UseInterval"* %84, null
  br i1 %85, label %109, label %86

86:                                               ; preds = %78, %82
  %87 = phi %"class.v8::internal::compiler::UseInterval"* [ %84, %82 ], [ %80, %78 ]
  %88 = getelementptr inbounds %"class.v8::internal::compiler::UseInterval", %"class.v8::internal::compiler::UseInterval"* %87, i64 0, i32 0, i32 0
  %89 = load i32, i32* %88, align 8
  %90 = icmp sgt i32 %89, %2
  br i1 %90, label %102, label %91

91:                                               ; preds = %86
  %92 = load %"class.v8::internal::compiler::UseInterval"*, %"class.v8::internal::compiler::UseInterval"** %70, align 8
  %93 = icmp eq %"class.v8::internal::compiler::UseInterval"* %92, null
  br i1 %93, label %97, label %94

94:                                               ; preds = %91
  %95 = getelementptr inbounds %"class.v8::internal::compiler::UseInterval", %"class.v8::internal::compiler::UseInterval"* %92, i64 0, i32 0, i32 0
  %96 = load i32, i32* %95, align 8
  br label %97

97:                                               ; preds = %94, %91
  %98 = phi i32 [ %96, %94 ], [ -1, %91 ]
  %99 = icmp sgt i32 %89, %98
  br i1 %99, label %100, label %102

100:                                              ; preds = %97
  store %"class.v8::internal::compiler::UseInterval"* %87, %"class.v8::internal::compiler::UseInterval"** %70, align 8
  %101 = load i32, i32* %88, align 4
  br label %102

102:                                              ; preds = %100, %97, %86
  %103 = phi i32 [ %89, %86 ], [ %89, %97 ], [ %101, %100 ]
  %104 = icmp sgt i32 %103, %2
  br i1 %104, label %109, label %105

105:                                              ; preds = %102
  %106 = getelementptr inbounds %"class.v8::internal::compiler::UseInterval", %"class.v8::internal::compiler::UseInterval"* %87, i64 0, i32 1, i32 0
  %107 = load i32, i32* %106, align 4
  %108 = icmp sgt i32 %107, %2
  br i1 %108, label %110, label %82

109:                                              ; preds = %102, %82, %53, %64, %55, %60, %78
  store %"class.v8::internal::compiler::LiveRange"* null, %"class.v8::internal::compiler::LiveRange"** %6, align 8
  br label %112

110:                                              ; preds = %105
  store %"class.v8::internal::compiler::LiveRange"* %43, %"class.v8::internal::compiler::LiveRange"** %6, align 8
  %111 = icmp eq %"class.v8::internal::compiler::LiveRange"* %43, null
  br i1 %111, label %112, label %121

112:                                              ; preds = %109, %110
  %113 = load %"class.v8::internal::compiler::TopTierRegisterAllocationData"*, %"class.v8::internal::compiler::TopTierRegisterAllocationData"** %14, align 8
  %114 = getelementptr inbounds %"class.v8::internal::compiler::TopTierRegisterAllocationData", %"class.v8::internal::compiler::TopTierRegisterAllocationData"* %113, i64 0, i32 23, i32 0
  %115 = load i32, i32* %114, align 4
  %116 = and i32 %115, 1
  %117 = icmp eq i32 %116, 0
  br i1 %117, label %278, label %118

118:                                              ; preds = %112
  %119 = getelementptr inbounds %"class.v8::internal::compiler::TopLevelLiveRange", %"class.v8::internal::compiler::TopLevelLiveRange"* %29, i64 0, i32 1
  %120 = load i32, i32* %119, align 4
  call void (i8*, ...) @_ZN2v88internal6PrintFEPKcz(i8* getelementptr inbounds ([27 x i8], [27 x i8]* @.str.68, i64 0, i64 0), i32 %120, i32 %2) #16
  br label %278

121:                                              ; preds = %110
  call void @_ZN2v88internal8compiler19LinearScanAllocator22MaybeUndoPreviousSplitEPNS1_9LiveRangeE(%"class.v8::internal::compiler::LinearScanAllocator"* %0, %"class.v8::internal::compiler::LiveRange"* nonnull %43)
  %122 = load %"class.v8::internal::compiler::LiveRange"*, %"class.v8::internal::compiler::LiveRange"** %6, align 8
  %123 = getelementptr inbounds %"class.v8::internal::compiler::LiveRange", %"class.v8::internal::compiler::LiveRange"* %122, i64 0, i32 3
  %124 = load %"class.v8::internal::compiler::UseInterval"*, %"class.v8::internal::compiler::UseInterval"** %123, align 8
  %125 = getelementptr inbounds %"class.v8::internal::compiler::UseInterval", %"class.v8::internal::compiler::UseInterval"* %124, i64 0, i32 0, i32 0
  %126 = load i32, i32* %125, align 8
  %127 = icmp eq i32 %126, %2
  br i1 %127, label %128, label %229

128:                                              ; preds = %121
  %129 = load %"class.v8::internal::compiler::TopTierRegisterAllocationData"*, %"class.v8::internal::compiler::TopTierRegisterAllocationData"** %14, align 8
  %130 = getelementptr inbounds %"class.v8::internal::compiler::TopTierRegisterAllocationData", %"class.v8::internal::compiler::TopTierRegisterAllocationData"* %129, i64 0, i32 23, i32 0
  %131 = load i32, i32* %130, align 4
  %132 = and i32 %131, 1
  %133 = icmp eq i32 %132, 0
  br i1 %133, label %140, label %134

134:                                              ; preds = %128
  %135 = getelementptr inbounds %"class.v8::internal::compiler::TopLevelLiveRange", %"class.v8::internal::compiler::TopLevelLiveRange"* %29, i64 0, i32 1
  %136 = load i32, i32* %135, align 4
  %137 = getelementptr inbounds %"class.v8::internal::compiler::LiveRange", %"class.v8::internal::compiler::LiveRange"* %122, i64 0, i32 0
  %138 = load i32, i32* %137, align 8
  call void (i8*, ...) @_ZN2v88internal6PrintFEPKcz(i8* getelementptr inbounds ([36 x i8], [36 x i8]* @.str.69, i64 0, i64 0), i32 %136, i32 %138, i32 %2) #16
  %139 = load %"class.v8::internal::compiler::LiveRange"*, %"class.v8::internal::compiler::LiveRange"** %6, align 8
  br label %140

140:                                              ; preds = %128, %134
  %141 = phi %"class.v8::internal::compiler::LiveRange"* [ %122, %128 ], [ %139, %134 ]
  %142 = getelementptr inbounds %"class.v8::internal::compiler::LiveRange", %"class.v8::internal::compiler::LiveRange"* %141, i64 0, i32 1
  %143 = load i32, i32* %142, align 4
  %144 = and i32 %143, 1
  %145 = icmp eq i32 %144, 0
  br i1 %145, label %178, label %146

146:                                              ; preds = %140
  %147 = and i32 %143, -8066
  %148 = or i32 %147, 4096
  store i32 %148, i32* %142, align 4
  %149 = load %"class.v8::internal::compiler::LiveRange"*, %"class.v8::internal::compiler::LiveRange"** %6, align 8
  %150 = getelementptr inbounds %"class.v8::internal::compiler::LiveRange", %"class.v8::internal::compiler::LiveRange"* %149, i64 0, i32 1
  %151 = load i32, i32* %150, align 4
  %152 = and i32 %151, -264241153
  %153 = shl i32 %31, 22
  %154 = and i32 %153, 1069547520
  %155 = or i32 %152, %154
  store i32 %155, i32* %150, align 4
  %156 = load %"class.v8::internal::compiler::LiveRange"*, %"class.v8::internal::compiler::LiveRange"** %6, align 8
  call void @llvm.lifetime.start.p0i8(i64 8, i8* nonnull %17)
  store %"class.v8::internal::compiler::LiveRange"* %156, %"class.v8::internal::compiler::LiveRange"** %4, align 8
  %157 = icmp eq %"class.v8::internal::compiler::LiveRange"* %156, null
  br i1 %157, label %177, label %158

158:                                              ; preds = %146
  %159 = getelementptr inbounds %"class.v8::internal::compiler::LiveRange", %"class.v8::internal::compiler::LiveRange"* %156, i64 0, i32 3
  %160 = load %"class.v8::internal::compiler::UseInterval"*, %"class.v8::internal::compiler::UseInterval"** %159, align 8
  %161 = icmp eq %"class.v8::internal::compiler::UseInterval"* %160, null
  br i1 %161, label %177, label %162

162:                                              ; preds = %158
  %163 = load %"class.v8::internal::compiler::TopTierRegisterAllocationData"*, %"class.v8::internal::compiler::TopTierRegisterAllocationData"** %14, align 8
  %164 = getelementptr inbounds %"class.v8::internal::compiler::TopTierRegisterAllocationData", %"class.v8::internal::compiler::TopTierRegisterAllocationData"* %163, i64 0, i32 23, i32 0
  %165 = load i32, i32* %164, align 4
  %166 = and i32 %165, 1
  %167 = icmp eq i32 %166, 0
  br i1 %167, label %175, label %168

168:                                              ; preds = %162
  %169 = getelementptr inbounds %"class.v8::internal::compiler::LiveRange", %"class.v8::internal::compiler::LiveRange"* %156, i64 0, i32 5
  %170 = load %"class.v8::internal::compiler::TopLevelLiveRange"*, %"class.v8::internal::compiler::TopLevelLiveRange"** %169, align 8
  %171 = getelementptr inbounds %"class.v8::internal::compiler::TopLevelLiveRange", %"class.v8::internal::compiler::TopLevelLiveRange"* %170, i64 0, i32 1
  %172 = load i32, i32* %171, align 4
  %173 = getelementptr inbounds %"class.v8::internal::compiler::LiveRange", %"class.v8::internal::compiler::LiveRange"* %156, i64 0, i32 0
  %174 = load i32, i32* %173, align 8
  call void (i8*, ...) @_ZN2v88internal6PrintFEPKcz(i8* getelementptr inbounds ([35 x i8], [35 x i8]* @.str.80, i64 0, i64 0), i32 %172, i32 %174) #16
  br label %175

175:                                              ; preds = %168, %162
  %176 = call %"class.std::__1::__tree_end_node"* @_ZNSt3__16__treeIPN2v88internal8compiler9LiveRangeENS3_19LinearScanAllocator26UnhandledLiveRangeOrderingENS2_13ZoneAllocatorIS5_EEE15__emplace_multiIJRKS5_EEENS_15__tree_iteratorIS5_PNS_11__tree_nodeIS5_PvEElEEDpOT_(%"class.std::__1::__tree.1338"* %16, %"class.v8::internal::compiler::LiveRange"** nonnull dereferenceable(8) %4) #16
  br label %177

177:                                              ; preds = %146, %158, %175
  call void @llvm.lifetime.end.p0i8(i64 8, i8* nonnull %17)
  br label %278

178:                                              ; preds = %140
  %179 = icmp eq i32 %31, 32
  br i1 %179, label %278, label %180

180:                                              ; preds = %178
  %181 = call { %"class.std::__1::__tree_end_node"*, %"class.std::__1::__tree_end_node"* } @_ZNSt3__16__treeIPN2v88internal8compiler9LiveRangeENS3_19LinearScanAllocator26UnhandledLiveRangeOrderingENS2_13ZoneAllocatorIS5_EEE19__equal_range_multiIS5_EENS_4pairINS_15__tree_iteratorIS5_PNS_11__tree_nodeIS5_PvEElEESI_EERKT_(%"class.std::__1::__tree.1338"* %19, %"class.v8::internal::compiler::LiveRange"** nonnull dereferenceable(8) %6) #16
  %182 = extractvalue { %"class.std::__1::__tree_end_node"*, %"class.std::__1::__tree_end_node"* } %181, 0
  %183 = extractvalue { %"class.std::__1::__tree_end_node"*, %"class.std::__1::__tree_end_node"* } %181, 1
  %184 = icmp eq %"class.std::__1::__tree_end_node"* %182, %183
  br i1 %184, label %226, label %185

185:                                              ; preds = %180, %220
  %186 = phi %"class.std::__1::__tree_end_node"* [ %215, %220 ], [ %182, %180 ]
  %187 = getelementptr inbounds %"class.std::__1::__tree_end_node", %"class.std::__1::__tree_end_node"* %186, i64 1, i32 0
  %188 = load %"class.std::__1::__tree_node_base"*, %"class.std::__1::__tree_node_base"** %187, align 8
  %189 = icmp eq %"class.std::__1::__tree_node_base"* %188, null
  br i1 %189, label %190, label %198

190:                                              ; preds = %185
  %191 = bitcast %"class.std::__1::__tree_end_node"* %186 to %"class.std::__1::__tree_node_base"*
  %192 = getelementptr inbounds %"class.std::__1::__tree_end_node", %"class.std::__1::__tree_end_node"* %186, i64 2
  %193 = bitcast %"class.std::__1::__tree_end_node"* %192 to %"class.std::__1::__tree_end_node"**
  %194 = load %"class.std::__1::__tree_end_node"*, %"class.std::__1::__tree_end_node"** %193, align 8
  %195 = getelementptr inbounds %"class.std::__1::__tree_end_node", %"class.std::__1::__tree_end_node"* %194, i64 0, i32 0
  %196 = load %"class.std::__1::__tree_node_base"*, %"class.std::__1::__tree_node_base"** %195, align 8
  %197 = icmp eq %"class.std::__1::__tree_node_base"* %196, %191
  br i1 %197, label %214, label %205

198:                                              ; preds = %185, %198
  %199 = phi %"class.std::__1::__tree_node_base"* [ %201, %198 ], [ %188, %185 ]
  %200 = getelementptr inbounds %"class.std::__1::__tree_node_base", %"class.std::__1::__tree_node_base"* %199, i64 0, i32 0, i32 0
  %201 = load %"class.std::__1::__tree_node_base"*, %"class.std::__1::__tree_node_base"** %200, align 8
  %202 = icmp eq %"class.std::__1::__tree_node_base"* %201, null
  br i1 %202, label %203, label %198

203:                                              ; preds = %198
  %204 = getelementptr inbounds %"class.std::__1::__tree_node_base", %"class.std::__1::__tree_node_base"* %199, i64 0, i32 0
  br label %214

205:                                              ; preds = %190, %205
  %206 = phi %"class.std::__1::__tree_end_node"** [ %209, %205 ], [ %193, %190 ]
  %207 = bitcast %"class.std::__1::__tree_end_node"** %206 to %"class.std::__1::__tree_node_base"**
  %208 = load %"class.std::__1::__tree_node_base"*, %"class.std::__1::__tree_node_base"** %207, align 8
  %209 = getelementptr inbounds %"class.std::__1::__tree_node_base", %"class.std::__1::__tree_node_base"* %208, i64 0, i32 2
  %210 = load %"class.std::__1::__tree_end_node"*, %"class.std::__1::__tree_end_node"** %209, align 8
  %211 = getelementptr inbounds %"class.std::__1::__tree_end_node", %"class.std::__1::__tree_end_node"* %210, i64 0, i32 0
  %212 = load %"class.std::__1::__tree_node_base"*, %"class.std::__1::__tree_node_base"** %211, align 8
  %213 = icmp eq %"class.std::__1::__tree_node_base"* %212, %208
  br i1 %213, label %214, label %205

214:                                              ; preds = %205, %203, %190
  %215 = phi %"class.std::__1::__tree_end_node"* [ %204, %203 ], [ %194, %190 ], [ %210, %205 ]
  %216 = load %"class.std::__1::__tree_end_node"*, %"class.std::__1::__tree_end_node"** %20, align 8
  %217 = icmp eq %"class.std::__1::__tree_end_node"* %216, %186
  br i1 %217, label %218, label %220

218:                                              ; preds = %214
  %219 = ptrtoint %"class.std::__1::__tree_end_node"* %215 to i64
  store i64 %219, i64* %21, align 8
  br label %220

220:                                              ; preds = %218, %214
  %221 = load i64, i64* %22, align 8
  %222 = add i64 %221, -1
  store i64 %222, i64* %22, align 8
  %223 = load %"class.std::__1::__tree_node_base"*, %"class.std::__1::__tree_node_base"** %23, align 8
  %224 = bitcast %"class.std::__1::__tree_end_node"* %186 to %"class.std::__1::__tree_node_base"*
  call void @_ZNSt3__113__tree_removeIPNS_16__tree_node_baseIPvEEEEvT_S5_(%"class.std::__1::__tree_node_base"* %223, %"class.std::__1::__tree_node_base"* %224) #16
  %225 = icmp eq %"class.std::__1::__tree_end_node"* %215, %183
  br i1 %225, label %226, label %185

226:                                              ; preds = %220, %180
  %227 = load %"class.v8::internal::compiler::LiveRange"*, %"class.v8::internal::compiler::LiveRange"** %6, align 8
  %228 = call %"class.v8::internal::compiler::LiveRange"* @_ZN2v88internal8compiler19LinearScanAllocator22AssignRegisterOnReloadEPNS1_9LiveRangeEi(%"class.v8::internal::compiler::LinearScanAllocator"* %0, %"class.v8::internal::compiler::LiveRange"* %227, i32 %31)
  store %"class.v8::internal::compiler::LiveRange"* %228, %"class.v8::internal::compiler::LiveRange"** %6, align 8
  call void @_ZN2v88internal8compiler19LinearScanAllocator11AddToActiveEPNS1_9LiveRangeE(%"class.v8::internal::compiler::LinearScanAllocator"* %0, %"class.v8::internal::compiler::LiveRange"* %228)
  br label %278

229:                                              ; preds = %121
  %230 = call %"class.v8::internal::compiler::LiveRange"* @_ZN2v88internal8compiler17RegisterAllocator12SplitRangeAtEPNS1_9LiveRangeENS1_16LifetimePositionE(%"class.v8::internal::compiler::RegisterAllocator"* %13, %"class.v8::internal::compiler::LiveRange"* %122, i32 %2)
  %231 = load %"class.v8::internal::compiler::TopTierRegisterAllocationData"*, %"class.v8::internal::compiler::TopTierRegisterAllocationData"** %14, align 8
  %232 = getelementptr inbounds %"class.v8::internal::compiler::TopTierRegisterAllocationData", %"class.v8::internal::compiler::TopTierRegisterAllocationData"* %231, i64 0, i32 23, i32 0
  %233 = load i32, i32* %232, align 4
  %234 = and i32 %233, 1
  %235 = icmp eq i32 %234, 0
  br i1 %235, label %248, label %236

236:                                              ; preds = %229
  %237 = getelementptr inbounds %"class.v8::internal::compiler::TopLevelLiveRange", %"class.v8::internal::compiler::TopLevelLiveRange"* %29, i64 0, i32 1
  %238 = load i32, i32* %237, align 4
  %239 = load %"class.v8::internal::compiler::LiveRange"*, %"class.v8::internal::compiler::LiveRange"** %6, align 8
  %240 = getelementptr inbounds %"class.v8::internal::compiler::LiveRange", %"class.v8::internal::compiler::LiveRange"* %239, i64 0, i32 0
  %241 = load i32, i32* %240, align 8
  %242 = getelementptr inbounds %"class.v8::internal::compiler::LiveRange", %"class.v8::internal::compiler::LiveRange"* %230, i64 0, i32 3
  %243 = load %"class.v8::internal::compiler::UseInterval"*, %"class.v8::internal::compiler::UseInterval"** %242, align 8
  %244 = getelementptr inbounds %"class.v8::internal::compiler::UseInterval", %"class.v8::internal::compiler::UseInterval"* %243, i64 0, i32 0, i32 0
  %245 = load i32, i32* %244, align 8
  %246 = getelementptr inbounds %"class.v8::internal::compiler::LiveRange", %"class.v8::internal::compiler::LiveRange"* %230, i64 0, i32 0
  %247 = load i32, i32* %246, align 8
  call void (i8*, ...) @_ZN2v88internal6PrintFEPKcz(i8* getelementptr inbounds ([35 x i8], [35 x i8]* @.str.70, i64 0, i64 0), i32 %238, i32 %241, i32 %245, i32 %247) #16
  br label %248

248:                                              ; preds = %229, %236
  %249 = icmp eq i32 %31, 32
  br i1 %249, label %252, label %250

250:                                              ; preds = %248
  %251 = call %"class.v8::internal::compiler::LiveRange"* @_ZN2v88internal8compiler19LinearScanAllocator22AssignRegisterOnReloadEPNS1_9LiveRangeEi(%"class.v8::internal::compiler::LinearScanAllocator"* %0, %"class.v8::internal::compiler::LiveRange"* %230, i32 %31)
  call void @_ZN2v88internal8compiler19LinearScanAllocator11AddToActiveEPNS1_9LiveRangeE(%"class.v8::internal::compiler::LinearScanAllocator"* %0, %"class.v8::internal::compiler::LiveRange"* %251)
  br label %278

252:                                              ; preds = %248
  %253 = getelementptr inbounds %"class.v8::internal::compiler::LiveRange", %"class.v8::internal::compiler::LiveRange"* %230, i64 0, i32 1
  %254 = load i32, i32* %253, align 4
  %255 = and i32 %254, -264241153
  %256 = or i32 %255, 134217728
  store i32 %256, i32* %253, align 4
  call void @llvm.lifetime.start.p0i8(i64 8, i8* nonnull %15)
  store %"class.v8::internal::compiler::LiveRange"* %230, %"class.v8::internal::compiler::LiveRange"** %5, align 8
  %257 = icmp eq %"class.v8::internal::compiler::LiveRange"* %230, null
  br i1 %257, label %277, label %258

258:                                              ; preds = %252
  %259 = getelementptr inbounds %"class.v8::internal::compiler::LiveRange", %"class.v8::internal::compiler::LiveRange"* %230, i64 0, i32 3
  %260 = load %"class.v8::internal::compiler::UseInterval"*, %"class.v8::internal::compiler::UseInterval"** %259, align 8
  %261 = icmp eq %"class.v8::internal::compiler::UseInterval"* %260, null
  br i1 %261, label %277, label %262

262:                                              ; preds = %258
  %263 = load %"class.v8::internal::compiler::TopTierRegisterAllocationData"*, %"class.v8::internal::compiler::TopTierRegisterAllocationData"** %14, align 8
  %264 = getelementptr inbounds %"class.v8::internal::compiler::TopTierRegisterAllocationData", %"class.v8::internal::compiler::TopTierRegisterAllocationData"* %263, i64 0, i32 23, i32 0
  %265 = load i32, i32* %264, align 4
  %266 = and i32 %265, 1
  %267 = icmp eq i32 %266, 0
  br i1 %267, label %275, label %268

268:                                              ; preds = %262
  %269 = getelementptr inbounds %"class.v8::internal::compiler::LiveRange", %"class.v8::internal::compiler::LiveRange"* %230, i64 0, i32 5
  %270 = load %"class.v8::internal::compiler::TopLevelLiveRange"*, %"class.v8::internal::compiler::TopLevelLiveRange"** %269, align 8
  %271 = getelementptr inbounds %"class.v8::internal::compiler::TopLevelLiveRange", %"class.v8::internal::compiler::TopLevelLiveRange"* %270, i64 0, i32 1
  %272 = load i32, i32* %271, align 4
  %273 = getelementptr inbounds %"class.v8::internal::compiler::LiveRange", %"class.v8::internal::compiler::LiveRange"* %230, i64 0, i32 0
  %274 = load i32, i32* %273, align 8
  call void (i8*, ...) @_ZN2v88internal6PrintFEPKcz(i8* getelementptr inbounds ([35 x i8], [35 x i8]* @.str.80, i64 0, i64 0), i32 %272, i32 %274) #16
  br label %275

275:                                              ; preds = %268, %262
  %276 = call %"class.std::__1::__tree_end_node"* @_ZNSt3__16__treeIPN2v88internal8compiler9LiveRangeENS3_19LinearScanAllocator26UnhandledLiveRangeOrderingENS2_13ZoneAllocatorIS5_EEE15__emplace_multiIJRKS5_EEENS_15__tree_iteratorIS5_PNS_11__tree_nodeIS5_PvEElEEDpOT_(%"class.std::__1::__tree.1338"* %16, %"class.v8::internal::compiler::LiveRange"** nonnull dereferenceable(8) %5) #16
  br label %277

277:                                              ; preds = %252, %258, %275
  call void @llvm.lifetime.end.p0i8(i64 8, i8* nonnull %15)
  br label %278

278:                                              ; preds = %112, %250, %277, %178, %226, %177, %118
  call void @llvm.lifetime.end.p0i8(i64 8, i8* nonnull %12) #16
  %279 = inttoptr i64 %26 to i64*
  %280 = load i64, i64* %279, align 8
  %281 = icmp eq i64 %280, 0
  br i1 %281, label %24, label %25
}

; Function Attrs: nounwind ssp uwtable
define hidden void @_ZN2v88internal8compiler19LinearScanAllocator11AddToActiveEPNS1_9LiveRangeE(%"class.v8::internal::compiler::LinearScanAllocator"*, %"class.v8::internal::compiler::LiveRange"*) local_unnamed_addr #0 align 2 {
  %3 = alloca i32, align 4
  %4 = ptrtoint %"class.v8::internal::compiler::LiveRange"* %1 to i64
  %5 = getelementptr inbounds %"class.v8::internal::compiler::LinearScanAllocator", %"class.v8::internal::compiler::LinearScanAllocator"* %0, i64 0, i32 0, i32 0
  %6 = load %"class.v8::internal::compiler::TopTierRegisterAllocationData"*, %"class.v8::internal::compiler::TopTierRegisterAllocationData"** %5, align 8
  %7 = getelementptr inbounds %"class.v8::internal::compiler::TopTierRegisterAllocationData", %"class.v8::internal::compiler::TopTierRegisterAllocationData"* %6, i64 0, i32 23, i32 0
  %8 = load i32, i32* %7, align 4
  %9 = and i32 %8, 1
  %10 = icmp eq i32 %9, 0
  br i1 %10, label %33, label %11

11:                                               ; preds = %2
  %12 = getelementptr inbounds %"class.v8::internal::compiler::LiveRange", %"class.v8::internal::compiler::LiveRange"* %1, i64 0, i32 5
  %13 = load %"class.v8::internal::compiler::TopLevelLiveRange"*, %"class.v8::internal::compiler::TopLevelLiveRange"** %12, align 8
  %14 = getelementptr inbounds %"class.v8::internal::compiler::TopLevelLiveRange", %"class.v8::internal::compiler::TopLevelLiveRange"* %13, i64 0, i32 1
  %15 = load i32, i32* %14, align 4
  %16 = getelementptr inbounds %"class.v8::internal::compiler::LiveRange", %"class.v8::internal::compiler::LiveRange"* %1, i64 0, i32 0
  %17 = load i32, i32* %16, align 8
  %18 = getelementptr inbounds %"class.v8::internal::compiler::LiveRange", %"class.v8::internal::compiler::LiveRange"* %1, i64 0, i32 1
  %19 = load i32, i32* %18, align 4
  %20 = lshr i32 %19, 7
  %21 = and i32 %20, 63
  %22 = icmp eq i32 %21, 32
  br i1 %22, label %31, label %23

23:                                               ; preds = %11
  %24 = getelementptr inbounds %"class.v8::internal::compiler::LinearScanAllocator", %"class.v8::internal::compiler::LinearScanAllocator"* %0, i64 0, i32 0, i32 1
  %25 = load i32, i32* %24, align 8
  %26 = icmp eq i32 %25, 0
  %27 = zext i32 %21 to i64
  %28 = select i1 %26, [16 x i8*]* @_ZZN2v88internal12RegisterNameENS0_8RegisterEE5Names, [16 x i8*]* @_ZZN2v88internal12RegisterNameENS0_11XMMRegisterEE5Names
  %29 = getelementptr inbounds [16 x i8*], [16 x i8*]* %28, i64 0, i64 %27
  %30 = load i8*, i8** %29, align 8
  br label %31

31:                                               ; preds = %23, %11
  %32 = phi i8* [ getelementptr inbounds ([11 x i8], [11 x i8]* @.str.58, i64 0, i64 0), %11 ], [ %30, %23 ]
  tail call void (i8*, ...) @_ZN2v88internal6PrintFEPKcz(i8* getelementptr inbounds ([38 x i8], [38 x i8]* @.str.78, i64 0, i64 0), i32 %15, i32 %17, i8* %32) #16
  br label %33

33:                                               ; preds = %2, %31
  %34 = getelementptr inbounds %"class.v8::internal::compiler::LinearScanAllocator", %"class.v8::internal::compiler::LinearScanAllocator"* %0, i64 0, i32 2, i32 0
  %35 = getelementptr inbounds %"class.v8::internal::compiler::LinearScanAllocator", %"class.v8::internal::compiler::LinearScanAllocator"* %0, i64 0, i32 2, i32 0, i32 0, i32 1
  %36 = load %"class.v8::internal::compiler::LiveRange"**, %"class.v8::internal::compiler::LiveRange"*** %35, align 8
  %37 = getelementptr inbounds %"class.v8::internal::compiler::LinearScanAllocator", %"class.v8::internal::compiler::LinearScanAllocator"* %0, i64 0, i32 2, i32 0, i32 0, i32 2, i32 0, i32 0
  %38 = load %"class.v8::internal::compiler::LiveRange"**, %"class.v8::internal::compiler::LiveRange"*** %37, align 8
  %39 = icmp eq %"class.v8::internal::compiler::LiveRange"** %36, %38
  %40 = ptrtoint %"class.v8::internal::compiler::LiveRange"** %38 to i64
  br i1 %39, label %46, label %41

41:                                               ; preds = %33
  %42 = bitcast %"class.v8::internal::compiler::LiveRange"** %36 to i64*
  store i64 %4, i64* %42, align 8
  %43 = getelementptr inbounds %"class.v8::internal::compiler::LiveRange"*, %"class.v8::internal::compiler::LiveRange"** %36, i64 1
  %44 = ptrtoint %"class.v8::internal::compiler::LiveRange"** %43 to i64
  %45 = bitcast %"class.v8::internal::compiler::LiveRange"*** %35 to i64*
  store i64 %44, i64* %45, align 8
  br label %271

46:                                               ; preds = %33
  %47 = ptrtoint %"class.v8::internal::compiler::LiveRange"** %36 to i64
  %48 = bitcast %"class.v8::internal::compiler::LiveRange"*** %35 to i64*
  %49 = bitcast %"class.std::__1::vector.1310"* %34 to i64*
  %50 = load i64, i64* %49, align 8
  %51 = sub i64 %47, %50
  %52 = ashr exact i64 %51, 3
  %53 = add nsw i64 %52, 1
  %54 = icmp ugt i64 %53, 268435455
  br i1 %54, label %55, label %57

55:                                               ; preds = %46
  %56 = bitcast %"class.std::__1::vector.1310"* %34 to %"class.std::__1::__vector_base_common"*
  tail call void @_ZNKSt3__120__vector_base_commonILb1EE20__throw_length_errorEv(%"class.std::__1::__vector_base_common"* %56) #17
  unreachable

57:                                               ; preds = %46
  %58 = bitcast %"class.v8::internal::compiler::LiveRange"*** %37 to i64*
  %59 = sub i64 %40, %50
  %60 = ashr exact i64 %59, 3
  %61 = icmp ult i64 %60, 134217727
  br i1 %61, label %62, label %67

62:                                               ; preds = %57
  %63 = ashr exact i64 %59, 2
  %64 = icmp ult i64 %63, %53
  %65 = select i1 %64, i64 %53, i64 %63
  %66 = icmp eq i64 %65, 0
  br i1 %66, label %85, label %67

67:                                               ; preds = %62, %57
  %68 = phi i64 [ %65, %62 ], [ 268435455, %57 ]
  %69 = getelementptr inbounds %"class.v8::internal::compiler::LinearScanAllocator", %"class.v8::internal::compiler::LinearScanAllocator"* %0, i64 0, i32 2, i32 0, i32 0, i32 2, i32 1, i32 0, i32 0
  %70 = load %"class.v8::internal::Zone"*, %"class.v8::internal::Zone"** %69, align 8
  %71 = shl i64 %68, 3
  %72 = getelementptr inbounds %"class.v8::internal::Zone", %"class.v8::internal::Zone"* %70, i64 0, i32 2
  %73 = load i64, i64* %72, align 8
  %74 = getelementptr inbounds %"class.v8::internal::Zone", %"class.v8::internal::Zone"* %70, i64 0, i32 3
  %75 = load i64, i64* %74, align 8
  %76 = sub i64 %75, %73
  %77 = icmp ugt i64 %71, %76
  br i1 %77, label %78, label %80, !prof !2

78:                                               ; preds = %67
  %79 = tail call i64 @_ZN2v88internal4Zone9NewExpandEm(%"class.v8::internal::Zone"* %70, i64 %71) #16
  br label %82

80:                                               ; preds = %67
  %81 = add i64 %73, %71
  store i64 %81, i64* %72, align 8
  br label %82

82:                                               ; preds = %80, %78
  %83 = phi i64 [ %79, %78 ], [ %73, %80 ]
  %84 = inttoptr i64 %83 to %"class.v8::internal::compiler::LiveRange"**
  br label %85

85:                                               ; preds = %82, %62
  %86 = phi i64 [ %68, %82 ], [ 0, %62 ]
  %87 = phi %"class.v8::internal::compiler::LiveRange"** [ %84, %82 ], [ null, %62 ]
  %88 = getelementptr inbounds %"class.v8::internal::compiler::LiveRange"*, %"class.v8::internal::compiler::LiveRange"** %87, i64 %52
  %89 = getelementptr inbounds %"class.v8::internal::compiler::LiveRange"*, %"class.v8::internal::compiler::LiveRange"** %87, i64 %86
  %90 = ptrtoint %"class.v8::internal::compiler::LiveRange"** %89 to i64
  %91 = bitcast %"class.v8::internal::compiler::LiveRange"** %88 to i64*
  store i64 %4, i64* %91, align 8
  %92 = getelementptr inbounds %"class.v8::internal::compiler::LiveRange"*, %"class.v8::internal::compiler::LiveRange"** %88, i64 1
  %93 = ptrtoint %"class.v8::internal::compiler::LiveRange"** %92 to i64
  %94 = getelementptr inbounds %"class.std::__1::vector.1310", %"class.std::__1::vector.1310"* %34, i64 0, i32 0, i32 0
  %95 = load %"class.v8::internal::compiler::LiveRange"**, %"class.v8::internal::compiler::LiveRange"*** %94, align 8
  %96 = ptrtoint %"class.v8::internal::compiler::LiveRange"** %95 to i64
  %97 = load %"class.v8::internal::compiler::LiveRange"**, %"class.v8::internal::compiler::LiveRange"*** %35, align 8
  %98 = icmp eq %"class.v8::internal::compiler::LiveRange"** %97, %95
  br i1 %98, label %268, label %99

99:                                               ; preds = %85
  %100 = getelementptr %"class.v8::internal::compiler::LiveRange"*, %"class.v8::internal::compiler::LiveRange"** %97, i64 -1
  %101 = ptrtoint %"class.v8::internal::compiler::LiveRange"** %100 to i64
  %102 = sub i64 %101, %96
  %103 = lshr i64 %102, 3
  %104 = add nuw nsw i64 %103, 1
  %105 = icmp ult i64 %104, 4
  br i1 %105, label %198, label %106

106:                                              ; preds = %99
  %107 = getelementptr %"class.v8::internal::compiler::LiveRange"*, %"class.v8::internal::compiler::LiveRange"** %97, i64 -1
  %108 = ptrtoint %"class.v8::internal::compiler::LiveRange"** %107 to i64
  %109 = sub i64 %108, %96
  %110 = lshr i64 %109, 3
  %111 = xor i64 %110, -1
  %112 = add nsw i64 %52, %111
  %113 = getelementptr %"class.v8::internal::compiler::LiveRange"*, %"class.v8::internal::compiler::LiveRange"** %87, i64 %112
  %114 = xor i64 %110, -1
  %115 = getelementptr %"class.v8::internal::compiler::LiveRange"*, %"class.v8::internal::compiler::LiveRange"** %97, i64 %114
  %116 = icmp ult %"class.v8::internal::compiler::LiveRange"** %113, %97
  %117 = icmp ult %"class.v8::internal::compiler::LiveRange"** %115, %88
  %118 = and i1 %116, %117
  br i1 %118, label %198, label %119

119:                                              ; preds = %106
  %120 = and i64 %104, 4611686018427387900
  %121 = sub nsw i64 0, %120
  %122 = getelementptr %"class.v8::internal::compiler::LiveRange"*, %"class.v8::internal::compiler::LiveRange"** %88, i64 %121
  %123 = sub nsw i64 0, %120
  %124 = getelementptr %"class.v8::internal::compiler::LiveRange"*, %"class.v8::internal::compiler::LiveRange"** %97, i64 %123
  %125 = add nsw i64 %120, -4
  %126 = lshr exact i64 %125, 2
  %127 = add nuw nsw i64 %126, 1
  %128 = and i64 %127, 1
  %129 = icmp eq i64 %125, 0
  br i1 %129, label %176, label %130

130:                                              ; preds = %119
  %131 = sub nuw nsw i64 %127, %128
  %132 = getelementptr %"class.v8::internal::compiler::LiveRange"*, %"class.v8::internal::compiler::LiveRange"** %88, i64 -1
  %133 = getelementptr %"class.v8::internal::compiler::LiveRange"*, %"class.v8::internal::compiler::LiveRange"** %97, i64 -1
  %134 = getelementptr %"class.v8::internal::compiler::LiveRange"*, %"class.v8::internal::compiler::LiveRange"** %88, i64 -1
  %135 = getelementptr %"class.v8::internal::compiler::LiveRange"*, %"class.v8::internal::compiler::LiveRange"** %97, i64 -1
  br label %136

136:                                              ; preds = %136, %130
  %137 = phi i64 [ 0, %130 ], [ %171, %136 ]
  %138 = phi i64 [ %131, %130 ], [ %172, %136 ]
  %139 = sub i64 0, %137
  %140 = sub i64 0, %137
  %141 = getelementptr inbounds %"class.v8::internal::compiler::LiveRange"*, %"class.v8::internal::compiler::LiveRange"** %132, i64 %139
  %142 = getelementptr inbounds %"class.v8::internal::compiler::LiveRange"*, %"class.v8::internal::compiler::LiveRange"** %133, i64 %140
  %143 = getelementptr inbounds %"class.v8::internal::compiler::LiveRange"*, %"class.v8::internal::compiler::LiveRange"** %142, i64 -1
  %144 = bitcast %"class.v8::internal::compiler::LiveRange"** %143 to <2 x i64>*
  %145 = load <2 x i64>, <2 x i64>* %144, align 8, !alias.scope !126
  %146 = getelementptr inbounds %"class.v8::internal::compiler::LiveRange"*, %"class.v8::internal::compiler::LiveRange"** %142, i64 -2
  %147 = getelementptr inbounds %"class.v8::internal::compiler::LiveRange"*, %"class.v8::internal::compiler::LiveRange"** %146, i64 -1
  %148 = bitcast %"class.v8::internal::compiler::LiveRange"** %147 to <2 x i64>*
  %149 = load <2 x i64>, <2 x i64>* %148, align 8, !alias.scope !126
  %150 = getelementptr inbounds %"class.v8::internal::compiler::LiveRange"*, %"class.v8::internal::compiler::LiveRange"** %141, i64 -1
  %151 = bitcast %"class.v8::internal::compiler::LiveRange"** %150 to <2 x i64>*
  store <2 x i64> %145, <2 x i64>* %151, align 8, !alias.scope !129, !noalias !126
  %152 = getelementptr inbounds %"class.v8::internal::compiler::LiveRange"*, %"class.v8::internal::compiler::LiveRange"** %141, i64 -2
  %153 = getelementptr inbounds %"class.v8::internal::compiler::LiveRange"*, %"class.v8::internal::compiler::LiveRange"** %152, i64 -1
  %154 = bitcast %"class.v8::internal::compiler::LiveRange"** %153 to <2 x i64>*
  store <2 x i64> %149, <2 x i64>* %154, align 8, !alias.scope !129, !noalias !126
  %155 = sub nuw nsw i64 -4, %137
  %156 = sub nuw nsw i64 -4, %137
  %157 = getelementptr inbounds %"class.v8::internal::compiler::LiveRange"*, %"class.v8::internal::compiler::LiveRange"** %134, i64 %155
  %158 = getelementptr inbounds %"class.v8::internal::compiler::LiveRange"*, %"class.v8::internal::compiler::LiveRange"** %135, i64 %156
  %159 = getelementptr inbounds %"class.v8::internal::compiler::LiveRange"*, %"class.v8::internal::compiler::LiveRange"** %158, i64 -1
  %160 = bitcast %"class.v8::internal::compiler::LiveRange"** %159 to <2 x i64>*
  %161 = load <2 x i64>, <2 x i64>* %160, align 8, !alias.scope !126
  %162 = getelementptr inbounds %"class.v8::internal::compiler::LiveRange"*, %"class.v8::internal::compiler::LiveRange"** %158, i64 -2
  %163 = getelementptr inbounds %"class.v8::internal::compiler::LiveRange"*, %"class.v8::internal::compiler::LiveRange"** %162, i64 -1
  %164 = bitcast %"class.v8::internal::compiler::LiveRange"** %163 to <2 x i64>*
  %165 = load <2 x i64>, <2 x i64>* %164, align 8, !alias.scope !126
  %166 = getelementptr inbounds %"class.v8::internal::compiler::LiveRange"*, %"class.v8::internal::compiler::LiveRange"** %157, i64 -1
  %167 = bitcast %"class.v8::internal::compiler::LiveRange"** %166 to <2 x i64>*
  store <2 x i64> %161, <2 x i64>* %167, align 8, !alias.scope !129, !noalias !126
  %168 = getelementptr inbounds %"class.v8::internal::compiler::LiveRange"*, %"class.v8::internal::compiler::LiveRange"** %157, i64 -2
  %169 = getelementptr inbounds %"class.v8::internal::compiler::LiveRange"*, %"class.v8::internal::compiler::LiveRange"** %168, i64 -1
  %170 = bitcast %"class.v8::internal::compiler::LiveRange"** %169 to <2 x i64>*
  store <2 x i64> %165, <2 x i64>* %170, align 8, !alias.scope !129, !noalias !126
  %171 = add i64 %137, 8
  %172 = add i64 %138, -2
  %173 = icmp eq i64 %172, 0
  br i1 %173, label %174, label %136, !llvm.loop !131

174:                                              ; preds = %136
  %175 = sub nuw nsw i64 -8, %137
  br label %176

176:                                              ; preds = %174, %119
  %177 = phi i64 [ 0, %119 ], [ %175, %174 ]
  %178 = icmp eq i64 %128, 0
  br i1 %178, label %196, label %179

179:                                              ; preds = %176
  %180 = getelementptr %"class.v8::internal::compiler::LiveRange"*, %"class.v8::internal::compiler::LiveRange"** %88, i64 -1
  %181 = getelementptr %"class.v8::internal::compiler::LiveRange"*, %"class.v8::internal::compiler::LiveRange"** %97, i64 -1
  %182 = getelementptr inbounds %"class.v8::internal::compiler::LiveRange"*, %"class.v8::internal::compiler::LiveRange"** %180, i64 %177
  %183 = getelementptr inbounds %"class.v8::internal::compiler::LiveRange"*, %"class.v8::internal::compiler::LiveRange"** %181, i64 %177
  %184 = getelementptr inbounds %"class.v8::internal::compiler::LiveRange"*, %"class.v8::internal::compiler::LiveRange"** %183, i64 -1
  %185 = bitcast %"class.v8::internal::compiler::LiveRange"** %184 to <2 x i64>*
  %186 = load <2 x i64>, <2 x i64>* %185, align 8, !alias.scope !126
  %187 = getelementptr inbounds %"class.v8::internal::compiler::LiveRange"*, %"class.v8::internal::compiler::LiveRange"** %183, i64 -2
  %188 = getelementptr inbounds %"class.v8::internal::compiler::LiveRange"*, %"class.v8::internal::compiler::LiveRange"** %187, i64 -1
  %189 = bitcast %"class.v8::internal::compiler::LiveRange"** %188 to <2 x i64>*
  %190 = load <2 x i64>, <2 x i64>* %189, align 8, !alias.scope !126
  %191 = getelementptr inbounds %"class.v8::internal::compiler::LiveRange"*, %"class.v8::internal::compiler::LiveRange"** %182, i64 -1
  %192 = bitcast %"class.v8::internal::compiler::LiveRange"** %191 to <2 x i64>*
  store <2 x i64> %186, <2 x i64>* %192, align 8, !alias.scope !129, !noalias !126
  %193 = getelementptr inbounds %"class.v8::internal::compiler::LiveRange"*, %"class.v8::internal::compiler::LiveRange"** %182, i64 -2
  %194 = getelementptr inbounds %"class.v8::internal::compiler::LiveRange"*, %"class.v8::internal::compiler::LiveRange"** %193, i64 -1
  %195 = bitcast %"class.v8::internal::compiler::LiveRange"** %194 to <2 x i64>*
  store <2 x i64> %190, <2 x i64>* %195, align 8, !alias.scope !129, !noalias !126
  br label %196

196:                                              ; preds = %176, %179
  %197 = icmp eq i64 %104, %120
  br i1 %197, label %268, label %198

198:                                              ; preds = %196, %106, %99
  %199 = phi %"class.v8::internal::compiler::LiveRange"** [ %88, %106 ], [ %88, %99 ], [ %122, %196 ]
  %200 = phi %"class.v8::internal::compiler::LiveRange"** [ %97, %106 ], [ %97, %99 ], [ %124, %196 ]
  %201 = getelementptr %"class.v8::internal::compiler::LiveRange"*, %"class.v8::internal::compiler::LiveRange"** %200, i64 -1
  %202 = ptrtoint %"class.v8::internal::compiler::LiveRange"** %201 to i64
  %203 = sub i64 %202, %96
  %204 = lshr i64 %203, 3
  %205 = add nuw nsw i64 %204, 1
  %206 = and i64 %205, 7
  %207 = icmp eq i64 %206, 0
  br i1 %207, label %219, label %208

208:                                              ; preds = %198, %208
  %209 = phi %"class.v8::internal::compiler::LiveRange"** [ %212, %208 ], [ %199, %198 ]
  %210 = phi %"class.v8::internal::compiler::LiveRange"** [ %213, %208 ], [ %200, %198 ]
  %211 = phi i64 [ %217, %208 ], [ %206, %198 ]
  %212 = getelementptr inbounds %"class.v8::internal::compiler::LiveRange"*, %"class.v8::internal::compiler::LiveRange"** %209, i64 -1
  %213 = getelementptr inbounds %"class.v8::internal::compiler::LiveRange"*, %"class.v8::internal::compiler::LiveRange"** %210, i64 -1
  %214 = bitcast %"class.v8::internal::compiler::LiveRange"** %213 to i64*
  %215 = load i64, i64* %214, align 8
  %216 = bitcast %"class.v8::internal::compiler::LiveRange"** %212 to i64*
  store i64 %215, i64* %216, align 8
  %217 = add i64 %211, -1
  %218 = icmp eq i64 %217, 0
  br i1 %218, label %219, label %208, !llvm.loop !132

219:                                              ; preds = %208, %198
  %220 = phi %"class.v8::internal::compiler::LiveRange"** [ undef, %198 ], [ %212, %208 ]
  %221 = phi %"class.v8::internal::compiler::LiveRange"** [ %199, %198 ], [ %212, %208 ]
  %222 = phi %"class.v8::internal::compiler::LiveRange"** [ %200, %198 ], [ %213, %208 ]
  %223 = icmp ult i64 %203, 56
  br i1 %223, label %268, label %224

224:                                              ; preds = %219, %224
  %225 = phi %"class.v8::internal::compiler::LiveRange"** [ %262, %224 ], [ %221, %219 ]
  %226 = phi %"class.v8::internal::compiler::LiveRange"** [ %263, %224 ], [ %222, %219 ]
  %227 = getelementptr inbounds %"class.v8::internal::compiler::LiveRange"*, %"class.v8::internal::compiler::LiveRange"** %225, i64 -1
  %228 = getelementptr inbounds %"class.v8::internal::compiler::LiveRange"*, %"class.v8::internal::compiler::LiveRange"** %226, i64 -1
  %229 = bitcast %"class.v8::internal::compiler::LiveRange"** %228 to i64*
  %230 = load i64, i64* %229, align 8
  %231 = bitcast %"class.v8::internal::compiler::LiveRange"** %227 to i64*
  store i64 %230, i64* %231, align 8
  %232 = getelementptr inbounds %"class.v8::internal::compiler::LiveRange"*, %"class.v8::internal::compiler::LiveRange"** %225, i64 -2
  %233 = getelementptr inbounds %"class.v8::internal::compiler::LiveRange"*, %"class.v8::internal::compiler::LiveRange"** %226, i64 -2
  %234 = bitcast %"class.v8::internal::compiler::LiveRange"** %233 to i64*
  %235 = load i64, i64* %234, align 8
  %236 = bitcast %"class.v8::internal::compiler::LiveRange"** %232 to i64*
  store i64 %235, i64* %236, align 8
  %237 = getelementptr inbounds %"class.v8::internal::compiler::LiveRange"*, %"class.v8::internal::compiler::LiveRange"** %225, i64 -3
  %238 = getelementptr inbounds %"class.v8::internal::compiler::LiveRange"*, %"class.v8::internal::compiler::LiveRange"** %226, i64 -3
  %239 = bitcast %"class.v8::internal::compiler::LiveRange"** %238 to i64*
  %240 = load i64, i64* %239, align 8
  %241 = bitcast %"class.v8::internal::compiler::LiveRange"** %237 to i64*
  store i64 %240, i64* %241, align 8
  %242 = getelementptr inbounds %"class.v8::internal::compiler::LiveRange"*, %"class.v8::internal::compiler::LiveRange"** %225, i64 -4
  %243 = getelementptr inbounds %"class.v8::internal::compiler::LiveRange"*, %"class.v8::internal::compiler::LiveRange"** %226, i64 -4
  %244 = bitcast %"class.v8::internal::compiler::LiveRange"** %243 to i64*
  %245 = load i64, i64* %244, align 8
  %246 = bitcast %"class.v8::internal::compiler::LiveRange"** %242 to i64*
  store i64 %245, i64* %246, align 8
  %247 = getelementptr inbounds %"class.v8::internal::compiler::LiveRange"*, %"class.v8::internal::compiler::LiveRange"** %225, i64 -5
  %248 = getelementptr inbounds %"class.v8::internal::compiler::LiveRange"*, %"class.v8::internal::compiler::LiveRange"** %226, i64 -5
  %249 = bitcast %"class.v8::internal::compiler::LiveRange"** %248 to i64*
  %250 = load i64, i64* %249, align 8
  %251 = bitcast %"class.v8::internal::compiler::LiveRange"** %247 to i64*
  store i64 %250, i64* %251, align 8
  %252 = getelementptr inbounds %"class.v8::internal::compiler::LiveRange"*, %"class.v8::internal::compiler::LiveRange"** %225, i64 -6
  %253 = getelementptr inbounds %"class.v8::internal::compiler::LiveRange"*, %"class.v8::internal::compiler::LiveRange"** %226, i64 -6
  %254 = bitcast %"class.v8::internal::compiler::LiveRange"** %253 to i64*
  %255 = load i64, i64* %254, align 8
  %256 = bitcast %"class.v8::internal::compiler::LiveRange"** %252 to i64*
  store i64 %255, i64* %256, align 8
  %257 = getelementptr inbounds %"class.v8::internal::compiler::LiveRange"*, %"class.v8::internal::compiler::LiveRange"** %225, i64 -7
  %258 = getelementptr inbounds %"class.v8::internal::compiler::LiveRange"*, %"class.v8::internal::compiler::LiveRange"** %226, i64 -7
  %259 = bitcast %"class.v8::internal::compiler::LiveRange"** %258 to i64*
  %260 = load i64, i64* %259, align 8
  %261 = bitcast %"class.v8::internal::compiler::LiveRange"** %257 to i64*
  store i64 %260, i64* %261, align 8
  %262 = getelementptr inbounds %"class.v8::internal::compiler::LiveRange"*, %"class.v8::internal::compiler::LiveRange"** %225, i64 -8
  %263 = getelementptr inbounds %"class.v8::internal::compiler::LiveRange"*, %"class.v8::internal::compiler::LiveRange"** %226, i64 -8
  %264 = bitcast %"class.v8::internal::compiler::LiveRange"** %263 to i64*
  %265 = load i64, i64* %264, align 8
  %266 = bitcast %"class.v8::internal::compiler::LiveRange"** %262 to i64*
  store i64 %265, i64* %266, align 8
  %267 = icmp eq %"class.v8::internal::compiler::LiveRange"** %263, %95
  br i1 %267, label %268, label %224, !llvm.loop !133

268:                                              ; preds = %219, %224, %196, %85
  %269 = phi %"class.v8::internal::compiler::LiveRange"** [ %88, %85 ], [ %122, %196 ], [ %220, %219 ], [ %262, %224 ]
  %270 = ptrtoint %"class.v8::internal::compiler::LiveRange"** %269 to i64
  store i64 %270, i64* %49, align 8
  store i64 %93, i64* %48, align 8
  store i64 %90, i64* %58, align 8
  br label %271

271:                                              ; preds = %41, %268
  %272 = getelementptr inbounds %"class.v8::internal::compiler::LinearScanAllocator", %"class.v8::internal::compiler::LinearScanAllocator"* %0, i64 0, i32 4
  %273 = bitcast i32* %3 to i8*
  call void @llvm.lifetime.start.p0i8(i64 4, i8* nonnull %273)
  %274 = getelementptr inbounds %"class.v8::internal::compiler::LiveRange", %"class.v8::internal::compiler::LiveRange"* %1, i64 0, i32 3
  %275 = load %"class.v8::internal::compiler::UseInterval"*, %"class.v8::internal::compiler::UseInterval"** %274, align 8
  %276 = getelementptr inbounds %"class.v8::internal::compiler::UseInterval", %"class.v8::internal::compiler::UseInterval"* %275, i64 0, i32 0, i32 0
  %277 = load i32, i32* %276, align 8
  %278 = getelementptr inbounds %"class.v8::internal::compiler::LiveRange", %"class.v8::internal::compiler::LiveRange"* %1, i64 0, i32 7
  %279 = load %"class.v8::internal::compiler::UseInterval"*, %"class.v8::internal::compiler::UseInterval"** %278, align 8
  %280 = icmp eq %"class.v8::internal::compiler::UseInterval"* %279, null
  br i1 %280, label %286, label %281

281:                                              ; preds = %271
  %282 = getelementptr inbounds %"class.v8::internal::compiler::UseInterval", %"class.v8::internal::compiler::UseInterval"* %279, i64 0, i32 0, i32 0
  %283 = load i32, i32* %282, align 8
  %284 = icmp sgt i32 %283, %277
  br i1 %284, label %285, label %286

285:                                              ; preds = %281
  store %"class.v8::internal::compiler::UseInterval"* null, %"class.v8::internal::compiler::UseInterval"** %278, align 8
  br label %286

286:                                              ; preds = %271, %285, %281
  %287 = phi %"class.v8::internal::compiler::UseInterval"** [ %274, %271 ], [ %278, %281 ], [ %274, %285 ]
  br label %288

288:                                              ; preds = %286, %288
  %289 = phi %"class.v8::internal::compiler::UseInterval"** [ %294, %288 ], [ %287, %286 ]
  %290 = load %"class.v8::internal::compiler::UseInterval"*, %"class.v8::internal::compiler::UseInterval"** %289, align 8
  %291 = getelementptr inbounds %"class.v8::internal::compiler::UseInterval", %"class.v8::internal::compiler::UseInterval"* %290, i64 0, i32 1, i32 0
  %292 = load i32, i32* %291, align 4
  %293 = icmp slt i32 %292, %277
  %294 = getelementptr inbounds %"class.v8::internal::compiler::UseInterval", %"class.v8::internal::compiler::UseInterval"* %290, i64 0, i32 2
  br i1 %293, label %288, label %295

295:                                              ; preds = %288
  store i32 %292, i32* %3, align 4
  %296 = getelementptr inbounds %"class.v8::internal::compiler::LifetimePosition", %"class.v8::internal::compiler::LifetimePosition"* %272, i64 0, i32 0
  %297 = load i32, i32* %296, align 4
  %298 = icmp slt i32 %292, %297
  %299 = bitcast i32* %3 to %"class.v8::internal::compiler::LifetimePosition"*
  %300 = select i1 %298, %"class.v8::internal::compiler::LifetimePosition"* %299, %"class.v8::internal::compiler::LifetimePosition"* %272
  %301 = getelementptr inbounds %"class.v8::internal::compiler::LifetimePosition", %"class.v8::internal::compiler::LifetimePosition"* %300, i64 0, i32 0
  %302 = load i32, i32* %301, align 4
  store i32 %302, i32* %296, align 8
  call void @llvm.lifetime.end.p0i8(i64 4, i8* nonnull %273)
  ret void
}

; Function Attrs: nounwind ssp uwtable
define hidden i32 @_ZN2v88internal8compiler19LinearScanAllocator31ChooseOneOfTwoPredecessorStatesEPNS1_16InstructionBlockENS1_16LifetimePositionE(%"class.v8::internal::compiler::LinearScanAllocator"* nocapture readonly, %"class.v8::internal::compiler::InstructionBlock"* nocapture readonly, i32) local_unnamed_addr #0 align 2 {
  %4 = alloca %"class.v8::base::SmallVector", align 8
  %5 = alloca %"class.v8::base::SmallVector", align 8
  %6 = getelementptr inbounds %"class.v8::internal::compiler::LinearScanAllocator", %"class.v8::internal::compiler::LinearScanAllocator"* %0, i64 0, i32 0, i32 0
  %7 = load %"class.v8::internal::compiler::TopTierRegisterAllocationData"*, %"class.v8::internal::compiler::TopTierRegisterAllocationData"** %6, align 8
  %8 = getelementptr inbounds %"class.v8::internal::compiler::InstructionBlock", %"class.v8::internal::compiler::InstructionBlock"* %1, i64 0, i32 1, i32 0, i32 0, i32 0
  %9 = load %"class.v8::internal::compiler::RpoNumber"*, %"class.v8::internal::compiler::RpoNumber"** %8, align 8
  %10 = getelementptr inbounds %"class.v8::internal::compiler::RpoNumber", %"class.v8::internal::compiler::RpoNumber"* %9, i64 0, i32 0
  %11 = load i32, i32* %10, align 4
  %12 = sext i32 %11 to i64
  %13 = getelementptr inbounds %"class.v8::internal::compiler::TopTierRegisterAllocationData", %"class.v8::internal::compiler::TopTierRegisterAllocationData"* %7, i64 0, i32 22, i32 0, i32 0, i32 0
  %14 = load %"class.v8::internal::ZoneVector.1309"*, %"class.v8::internal::ZoneVector.1309"** %13, align 8
  %15 = getelementptr inbounds %"class.v8::internal::compiler::RpoNumber", %"class.v8::internal::compiler::RpoNumber"* %9, i64 1, i32 0
  %16 = load i32, i32* %15, align 4
  %17 = sext i32 %16 to i64
  %18 = bitcast %"class.v8::base::SmallVector"* %4 to i8*
  call void @llvm.lifetime.start.p0i8(i64 280, i8* nonnull %18) #16
  %19 = getelementptr inbounds %"class.v8::base::SmallVector", %"class.v8::base::SmallVector"* %4, i64 0, i32 3
  %20 = bitcast %"class.v8::base::SmallVector"* %4 to %"struct.std::__1::aligned_storage<256, 8>::type"**
  store %"struct.std::__1::aligned_storage<256, 8>::type"* %19, %"struct.std::__1::aligned_storage<256, 8>::type"** %20, align 8
  %21 = getelementptr inbounds %"class.v8::base::SmallVector", %"class.v8::base::SmallVector"* %4, i64 0, i32 1
  %22 = bitcast %"class.v8::internal::compiler::TopLevelLiveRange"*** %21 to %"struct.std::__1::aligned_storage<256, 8>::type"**
  store %"struct.std::__1::aligned_storage<256, 8>::type"* %19, %"struct.std::__1::aligned_storage<256, 8>::type"** %22, align 8
  %23 = getelementptr inbounds %"class.v8::base::SmallVector", %"class.v8::base::SmallVector"* %4, i64 0, i32 2
  %24 = getelementptr inbounds %"struct.std::__1::aligned_storage<256, 8>::type", %"struct.std::__1::aligned_storage<256, 8>::type"* %19, i64 1
  %25 = bitcast %"class.v8::internal::compiler::TopLevelLiveRange"*** %23 to %"struct.std::__1::aligned_storage<256, 8>::type"**
  store %"struct.std::__1::aligned_storage<256, 8>::type"* %24, %"struct.std::__1::aligned_storage<256, 8>::type"** %25, align 8
  %26 = getelementptr inbounds %"class.v8::internal::ZoneVector.1309", %"class.v8::internal::ZoneVector.1309"* %14, i64 %12, i32 0, i32 0, i32 0
  %27 = load %"class.v8::internal::compiler::LiveRange"**, %"class.v8::internal::compiler::LiveRange"*** %26, align 8
  %28 = getelementptr inbounds %"class.v8::internal::ZoneVector.1309", %"class.v8::internal::ZoneVector.1309"* %14, i64 %12, i32 0, i32 0, i32 1
  %29 = load %"class.v8::internal::compiler::LiveRange"**, %"class.v8::internal::compiler::LiveRange"*** %28, align 8
  %30 = icmp eq %"class.v8::internal::compiler::LiveRange"** %27, %29
  %31 = bitcast %"struct.std::__1::aligned_storage<256, 8>::type"* %19 to %"class.v8::internal::compiler::TopLevelLiveRange"**
  br i1 %30, label %32, label %48

32:                                               ; preds = %180, %3
  %33 = phi %"class.v8::internal::compiler::TopLevelLiveRange"** [ %31, %3 ], [ %181, %180 ]
  %34 = bitcast %"class.v8::base::SmallVector"* %5 to i8*
  call void @llvm.lifetime.start.p0i8(i64 280, i8* nonnull %34) #16
  %35 = getelementptr inbounds %"class.v8::base::SmallVector", %"class.v8::base::SmallVector"* %5, i64 0, i32 3
  %36 = bitcast %"class.v8::base::SmallVector"* %5 to %"struct.std::__1::aligned_storage<256, 8>::type"**
  store %"struct.std::__1::aligned_storage<256, 8>::type"* %35, %"struct.std::__1::aligned_storage<256, 8>::type"** %36, align 8
  %37 = getelementptr inbounds %"class.v8::base::SmallVector", %"class.v8::base::SmallVector"* %5, i64 0, i32 1
  %38 = bitcast %"class.v8::internal::compiler::TopLevelLiveRange"*** %37 to %"struct.std::__1::aligned_storage<256, 8>::type"**
  store %"struct.std::__1::aligned_storage<256, 8>::type"* %35, %"struct.std::__1::aligned_storage<256, 8>::type"** %38, align 8
  %39 = getelementptr inbounds %"class.v8::base::SmallVector", %"class.v8::base::SmallVector"* %5, i64 0, i32 2
  %40 = getelementptr inbounds %"struct.std::__1::aligned_storage<256, 8>::type", %"struct.std::__1::aligned_storage<256, 8>::type"* %35, i64 1
  %41 = bitcast %"class.v8::internal::compiler::TopLevelLiveRange"*** %39 to %"struct.std::__1::aligned_storage<256, 8>::type"**
  store %"struct.std::__1::aligned_storage<256, 8>::type"* %40, %"struct.std::__1::aligned_storage<256, 8>::type"** %41, align 8
  %42 = getelementptr inbounds %"class.v8::internal::ZoneVector.1309", %"class.v8::internal::ZoneVector.1309"* %14, i64 %17, i32 0, i32 0, i32 0
  %43 = load %"class.v8::internal::compiler::LiveRange"**, %"class.v8::internal::compiler::LiveRange"*** %42, align 8
  %44 = getelementptr inbounds %"class.v8::internal::ZoneVector.1309", %"class.v8::internal::ZoneVector.1309"* %14, i64 %17, i32 0, i32 0, i32 1
  %45 = load %"class.v8::internal::compiler::LiveRange"**, %"class.v8::internal::compiler::LiveRange"*** %44, align 8
  %46 = icmp eq %"class.v8::internal::compiler::LiveRange"** %43, %45
  %47 = bitcast %"struct.std::__1::aligned_storage<256, 8>::type"* %35 to %"class.v8::internal::compiler::TopLevelLiveRange"**
  br i1 %46, label %187, label %193

48:                                               ; preds = %3, %180
  %49 = phi %"class.v8::internal::compiler::TopLevelLiveRange"** [ %181, %180 ], [ %31, %3 ]
  %50 = phi %"class.v8::internal::compiler::TopLevelLiveRange"** [ %182, %180 ], [ %31, %3 ]
  %51 = phi %"class.v8::internal::compiler::LiveRange"** [ %183, %180 ], [ %27, %3 ]
  %52 = load %"class.v8::internal::compiler::LiveRange"*, %"class.v8::internal::compiler::LiveRange"** %51, align 8
  %53 = getelementptr inbounds %"class.v8::internal::compiler::LiveRange", %"class.v8::internal::compiler::LiveRange"* %52, i64 0, i32 5
  %54 = load %"class.v8::internal::compiler::TopLevelLiveRange"*, %"class.v8::internal::compiler::TopLevelLiveRange"** %53, align 8
  %55 = getelementptr inbounds %"class.v8::internal::compiler::TopLevelLiveRange", %"class.v8::internal::compiler::TopLevelLiveRange"* %54, i64 0, i32 9
  %56 = load %"class.v8::internal::compiler::LiveRange"*, %"class.v8::internal::compiler::LiveRange"** %55, align 8
  %57 = getelementptr inbounds %"class.v8::internal::compiler::LiveRange", %"class.v8::internal::compiler::LiveRange"* %56, i64 0, i32 3
  %58 = load %"class.v8::internal::compiler::UseInterval"*, %"class.v8::internal::compiler::UseInterval"** %57, align 8
  %59 = getelementptr inbounds %"class.v8::internal::compiler::UseInterval", %"class.v8::internal::compiler::UseInterval"* %58, i64 0, i32 0, i32 0
  %60 = load i32, i32* %59, align 8
  %61 = icmp sgt i32 %60, %2
  %62 = bitcast %"class.v8::internal::compiler::TopLevelLiveRange"* %54 to %"class.v8::internal::compiler::LiveRange"*
  %63 = select i1 %61, %"class.v8::internal::compiler::LiveRange"* %62, %"class.v8::internal::compiler::LiveRange"* %56
  %64 = icmp eq %"class.v8::internal::compiler::LiveRange"* %63, null
  br i1 %64, label %76, label %65

65:                                               ; preds = %48, %72
  %66 = phi %"class.v8::internal::compiler::LiveRange"* [ %74, %72 ], [ %63, %48 ]
  %67 = getelementptr inbounds %"class.v8::internal::compiler::LiveRange", %"class.v8::internal::compiler::LiveRange"* %66, i64 0, i32 2
  %68 = load %"class.v8::internal::compiler::UseInterval"*, %"class.v8::internal::compiler::UseInterval"** %67, align 8
  %69 = getelementptr inbounds %"class.v8::internal::compiler::UseInterval", %"class.v8::internal::compiler::UseInterval"* %68, i64 0, i32 1, i32 0
  %70 = load i32, i32* %69, align 4
  %71 = icmp sgt i32 %70, %2
  br i1 %71, label %78, label %72

72:                                               ; preds = %65
  %73 = getelementptr inbounds %"class.v8::internal::compiler::LiveRange", %"class.v8::internal::compiler::LiveRange"* %66, i64 0, i32 6
  %74 = load %"class.v8::internal::compiler::LiveRange"*, %"class.v8::internal::compiler::LiveRange"** %73, align 8
  %75 = icmp eq %"class.v8::internal::compiler::LiveRange"* %74, null
  br i1 %75, label %76, label %65

76:                                               ; preds = %72, %48
  %77 = phi %"class.v8::internal::compiler::LiveRange"* [ null, %48 ], [ %66, %72 ]
  store %"class.v8::internal::compiler::LiveRange"* %77, %"class.v8::internal::compiler::LiveRange"** %55, align 8
  br label %180

78:                                               ; preds = %65
  %79 = getelementptr inbounds %"class.v8::internal::compiler::LiveRange", %"class.v8::internal::compiler::LiveRange"* %66, i64 0, i32 2
  store %"class.v8::internal::compiler::LiveRange"* %66, %"class.v8::internal::compiler::LiveRange"** %55, align 8
  %80 = getelementptr inbounds %"class.v8::internal::compiler::LiveRange", %"class.v8::internal::compiler::LiveRange"* %66, i64 0, i32 3
  %81 = load %"class.v8::internal::compiler::UseInterval"*, %"class.v8::internal::compiler::UseInterval"** %80, align 8
  %82 = icmp eq %"class.v8::internal::compiler::UseInterval"* %81, null
  br i1 %82, label %180, label %83

83:                                               ; preds = %78
  %84 = getelementptr inbounds %"class.v8::internal::compiler::UseInterval", %"class.v8::internal::compiler::UseInterval"* %81, i64 0, i32 0, i32 0
  %85 = load i32, i32* %84, align 8
  %86 = icmp sgt i32 %85, %2
  br i1 %86, label %180, label %87

87:                                               ; preds = %83
  %88 = load %"class.v8::internal::compiler::UseInterval"*, %"class.v8::internal::compiler::UseInterval"** %79, align 8
  %89 = getelementptr inbounds %"class.v8::internal::compiler::UseInterval", %"class.v8::internal::compiler::UseInterval"* %88, i64 0, i32 1, i32 0
  %90 = load i32, i32* %89, align 4
  %91 = icmp sgt i32 %90, %2
  br i1 %91, label %92, label %180

92:                                               ; preds = %87
  %93 = getelementptr inbounds %"class.v8::internal::compiler::LiveRange", %"class.v8::internal::compiler::LiveRange"* %66, i64 0, i32 7
  %94 = load %"class.v8::internal::compiler::UseInterval"*, %"class.v8::internal::compiler::UseInterval"** %93, align 8
  %95 = icmp eq %"class.v8::internal::compiler::UseInterval"* %94, null
  br i1 %95, label %101, label %96

96:                                               ; preds = %92
  %97 = getelementptr inbounds %"class.v8::internal::compiler::UseInterval", %"class.v8::internal::compiler::UseInterval"* %94, i64 0, i32 0, i32 0
  %98 = load i32, i32* %97, align 8
  %99 = icmp sgt i32 %98, %2
  br i1 %99, label %100, label %101

100:                                              ; preds = %96
  store %"class.v8::internal::compiler::UseInterval"* null, %"class.v8::internal::compiler::UseInterval"** %93, align 8
  br label %101

101:                                              ; preds = %100, %96, %92
  %102 = phi %"class.v8::internal::compiler::UseInterval"** [ %80, %100 ], [ %93, %96 ], [ %80, %92 ]
  %103 = load %"class.v8::internal::compiler::UseInterval"*, %"class.v8::internal::compiler::UseInterval"** %102, align 8
  %104 = icmp eq %"class.v8::internal::compiler::UseInterval"* %103, null
  br i1 %104, label %180, label %109

105:                                              ; preds = %128
  %106 = getelementptr inbounds %"class.v8::internal::compiler::UseInterval", %"class.v8::internal::compiler::UseInterval"* %110, i64 0, i32 2
  %107 = load %"class.v8::internal::compiler::UseInterval"*, %"class.v8::internal::compiler::UseInterval"** %106, align 8
  %108 = icmp eq %"class.v8::internal::compiler::UseInterval"* %107, null
  br i1 %108, label %180, label %109

109:                                              ; preds = %101, %105
  %110 = phi %"class.v8::internal::compiler::UseInterval"* [ %107, %105 ], [ %103, %101 ]
  %111 = getelementptr inbounds %"class.v8::internal::compiler::UseInterval", %"class.v8::internal::compiler::UseInterval"* %110, i64 0, i32 0, i32 0
  %112 = load i32, i32* %111, align 8
  %113 = icmp sgt i32 %112, %2
  br i1 %113, label %125, label %114

114:                                              ; preds = %109
  %115 = load %"class.v8::internal::compiler::UseInterval"*, %"class.v8::internal::compiler::UseInterval"** %93, align 8
  %116 = icmp eq %"class.v8::internal::compiler::UseInterval"* %115, null
  br i1 %116, label %120, label %117

117:                                              ; preds = %114
  %118 = getelementptr inbounds %"class.v8::internal::compiler::UseInterval", %"class.v8::internal::compiler::UseInterval"* %115, i64 0, i32 0, i32 0
  %119 = load i32, i32* %118, align 8
  br label %120

120:                                              ; preds = %117, %114
  %121 = phi i32 [ %119, %117 ], [ -1, %114 ]
  %122 = icmp sgt i32 %112, %121
  br i1 %122, label %123, label %125

123:                                              ; preds = %120
  store %"class.v8::internal::compiler::UseInterval"* %110, %"class.v8::internal::compiler::UseInterval"** %93, align 8
  %124 = load i32, i32* %111, align 4
  br label %125

125:                                              ; preds = %123, %120, %109
  %126 = phi i32 [ %112, %109 ], [ %112, %120 ], [ %124, %123 ]
  %127 = icmp sgt i32 %126, %2
  br i1 %127, label %180, label %128

128:                                              ; preds = %125
  %129 = getelementptr inbounds %"class.v8::internal::compiler::UseInterval", %"class.v8::internal::compiler::UseInterval"* %110, i64 0, i32 1, i32 0
  %130 = load i32, i32* %129, align 4
  %131 = icmp sgt i32 %130, %2
  br i1 %131, label %132, label %105

132:                                              ; preds = %128
  %133 = icmp eq %"class.v8::internal::compiler::LiveRange"* %66, null
  br i1 %133, label %180, label %134

134:                                              ; preds = %132
  %135 = getelementptr inbounds %"class.v8::internal::compiler::LiveRange", %"class.v8::internal::compiler::LiveRange"* %66, i64 0, i32 8
  %136 = load %"class.v8::internal::compiler::UsePosition"*, %"class.v8::internal::compiler::UsePosition"** %135, align 8
  %137 = icmp eq %"class.v8::internal::compiler::UsePosition"* %136, null
  br i1 %137, label %142, label %138

138:                                              ; preds = %134
  %139 = getelementptr inbounds %"class.v8::internal::compiler::UsePosition", %"class.v8::internal::compiler::UsePosition"* %136, i64 0, i32 3, i32 0
  %140 = load i32, i32* %139, align 8
  %141 = icmp sgt i32 %140, %2
  br i1 %141, label %142, label %146

142:                                              ; preds = %138, %134
  %143 = getelementptr inbounds %"class.v8::internal::compiler::LiveRange", %"class.v8::internal::compiler::LiveRange"* %66, i64 0, i32 4
  %144 = load %"class.v8::internal::compiler::UsePosition"*, %"class.v8::internal::compiler::UsePosition"** %143, align 8
  %145 = icmp eq %"class.v8::internal::compiler::UsePosition"* %144, null
  br i1 %145, label %157, label %146

146:                                              ; preds = %142, %138
  %147 = phi %"class.v8::internal::compiler::UsePosition"* [ %136, %138 ], [ %144, %142 ]
  br label %148

148:                                              ; preds = %146, %153
  %149 = phi %"class.v8::internal::compiler::UsePosition"* [ %155, %153 ], [ %147, %146 ]
  %150 = getelementptr inbounds %"class.v8::internal::compiler::UsePosition", %"class.v8::internal::compiler::UsePosition"* %149, i64 0, i32 3, i32 0
  %151 = load i32, i32* %150, align 8
  %152 = icmp slt i32 %151, %2
  br i1 %152, label %153, label %158

153:                                              ; preds = %148
  %154 = getelementptr inbounds %"class.v8::internal::compiler::UsePosition", %"class.v8::internal::compiler::UsePosition"* %149, i64 0, i32 2
  %155 = load %"class.v8::internal::compiler::UsePosition"*, %"class.v8::internal::compiler::UsePosition"** %154, align 8
  %156 = icmp eq %"class.v8::internal::compiler::UsePosition"* %155, null
  br i1 %156, label %157, label %148

157:                                              ; preds = %153, %142
  store %"class.v8::internal::compiler::UsePosition"* null, %"class.v8::internal::compiler::UsePosition"** %135, align 8
  br label %180

158:                                              ; preds = %148
  store %"class.v8::internal::compiler::UsePosition"* %149, %"class.v8::internal::compiler::UsePosition"** %135, align 8
  br label %159

159:                                              ; preds = %165, %158
  %160 = phi %"class.v8::internal::compiler::UsePosition"* [ %167, %165 ], [ %149, %158 ]
  %161 = getelementptr inbounds %"class.v8::internal::compiler::UsePosition", %"class.v8::internal::compiler::UsePosition"* %160, i64 0, i32 4
  %162 = load i32, i32* %161, align 4
  %163 = and i32 %162, 32
  %164 = icmp eq i32 %163, 0
  br i1 %164, label %165, label %169

165:                                              ; preds = %159
  %166 = getelementptr inbounds %"class.v8::internal::compiler::UsePosition", %"class.v8::internal::compiler::UsePosition"* %160, i64 0, i32 2
  %167 = load %"class.v8::internal::compiler::UsePosition"*, %"class.v8::internal::compiler::UsePosition"** %166, align 8
  %168 = icmp eq %"class.v8::internal::compiler::UsePosition"* %167, null
  br i1 %168, label %180, label %159

169:                                              ; preds = %159
  %170 = bitcast %"class.v8::internal::compiler::TopLevelLiveRange"** %53 to i64*
  %171 = load i64, i64* %170, align 8
  %172 = load %"class.v8::internal::compiler::TopLevelLiveRange"**, %"class.v8::internal::compiler::TopLevelLiveRange"*** %23, align 8
  %173 = icmp eq %"class.v8::internal::compiler::TopLevelLiveRange"** %50, %172
  br i1 %173, label %174, label %176, !prof !2

174:                                              ; preds = %169
  %175 = call %"class.v8::internal::compiler::TopLevelLiveRange"** @_ZN2v84base11SmallVectorIPNS_8internal8compiler17TopLevelLiveRangeELm32EE4GrowEv(%"class.v8::base::SmallVector"* nonnull %4) #16
  br label %176

176:                                              ; preds = %169, %174
  %177 = phi %"class.v8::internal::compiler::TopLevelLiveRange"** [ %175, %174 ], [ %50, %169 ]
  %178 = bitcast %"class.v8::internal::compiler::TopLevelLiveRange"** %177 to i64*
  store i64 %171, i64* %178, align 8
  %179 = getelementptr inbounds %"class.v8::internal::compiler::TopLevelLiveRange"*, %"class.v8::internal::compiler::TopLevelLiveRange"** %177, i64 1
  store %"class.v8::internal::compiler::TopLevelLiveRange"** %179, %"class.v8::internal::compiler::TopLevelLiveRange"*** %21, align 8
  br label %180

180:                                              ; preds = %105, %125, %165, %157, %101, %83, %78, %87, %76, %132, %176
  %181 = phi %"class.v8::internal::compiler::TopLevelLiveRange"** [ %49, %157 ], [ %49, %101 ], [ %49, %83 ], [ %49, %78 ], [ %49, %87 ], [ %49, %76 ], [ %49, %132 ], [ %179, %176 ], [ %49, %165 ], [ %49, %125 ], [ %49, %105 ]
  %182 = phi %"class.v8::internal::compiler::TopLevelLiveRange"** [ %50, %157 ], [ %50, %101 ], [ %50, %83 ], [ %50, %78 ], [ %50, %87 ], [ %50, %76 ], [ %50, %132 ], [ %179, %176 ], [ %50, %165 ], [ %50, %125 ], [ %50, %105 ]
  %183 = getelementptr inbounds %"class.v8::internal::compiler::LiveRange"*, %"class.v8::internal::compiler::LiveRange"** %51, i64 1
  %184 = icmp eq %"class.v8::internal::compiler::LiveRange"** %183, %29
  br i1 %184, label %32, label %48

185:                                              ; preds = %325
  %186 = load %"class.v8::internal::compiler::TopLevelLiveRange"**, %"class.v8::internal::compiler::TopLevelLiveRange"*** %21, align 8
  br label %187

187:                                              ; preds = %185, %32
  %188 = phi %"class.v8::internal::compiler::TopLevelLiveRange"** [ %326, %185 ], [ %47, %32 ]
  %189 = phi %"class.v8::internal::compiler::TopLevelLiveRange"** [ %186, %185 ], [ %33, %32 ]
  %190 = getelementptr inbounds %"class.v8::base::SmallVector", %"class.v8::base::SmallVector"* %4, i64 0, i32 0
  %191 = load %"class.v8::internal::compiler::TopLevelLiveRange"**, %"class.v8::internal::compiler::TopLevelLiveRange"*** %190, align 8
  %192 = icmp eq %"class.v8::internal::compiler::TopLevelLiveRange"** %189, %191
  br i1 %192, label %330, label %595

193:                                              ; preds = %32, %325
  %194 = phi %"class.v8::internal::compiler::TopLevelLiveRange"** [ %326, %325 ], [ %47, %32 ]
  %195 = phi %"class.v8::internal::compiler::TopLevelLiveRange"** [ %327, %325 ], [ %47, %32 ]
  %196 = phi %"class.v8::internal::compiler::LiveRange"** [ %328, %325 ], [ %43, %32 ]
  %197 = load %"class.v8::internal::compiler::LiveRange"*, %"class.v8::internal::compiler::LiveRange"** %196, align 8
  %198 = getelementptr inbounds %"class.v8::internal::compiler::LiveRange", %"class.v8::internal::compiler::LiveRange"* %197, i64 0, i32 5
  %199 = load %"class.v8::internal::compiler::TopLevelLiveRange"*, %"class.v8::internal::compiler::TopLevelLiveRange"** %198, align 8
  %200 = getelementptr inbounds %"class.v8::internal::compiler::TopLevelLiveRange", %"class.v8::internal::compiler::TopLevelLiveRange"* %199, i64 0, i32 9
  %201 = load %"class.v8::internal::compiler::LiveRange"*, %"class.v8::internal::compiler::LiveRange"** %200, align 8
  %202 = getelementptr inbounds %"class.v8::internal::compiler::LiveRange", %"class.v8::internal::compiler::LiveRange"* %201, i64 0, i32 3
  %203 = load %"class.v8::internal::compiler::UseInterval"*, %"class.v8::internal::compiler::UseInterval"** %202, align 8
  %204 = getelementptr inbounds %"class.v8::internal::compiler::UseInterval", %"class.v8::internal::compiler::UseInterval"* %203, i64 0, i32 0, i32 0
  %205 = load i32, i32* %204, align 8
  %206 = icmp sgt i32 %205, %2
  %207 = bitcast %"class.v8::internal::compiler::TopLevelLiveRange"* %199 to %"class.v8::internal::compiler::LiveRange"*
  %208 = select i1 %206, %"class.v8::internal::compiler::LiveRange"* %207, %"class.v8::internal::compiler::LiveRange"* %201
  %209 = icmp eq %"class.v8::internal::compiler::LiveRange"* %208, null
  br i1 %209, label %221, label %210

210:                                              ; preds = %193, %217
  %211 = phi %"class.v8::internal::compiler::LiveRange"* [ %219, %217 ], [ %208, %193 ]
  %212 = getelementptr inbounds %"class.v8::internal::compiler::LiveRange", %"class.v8::internal::compiler::LiveRange"* %211, i64 0, i32 2
  %213 = load %"class.v8::internal::compiler::UseInterval"*, %"class.v8::internal::compiler::UseInterval"** %212, align 8
  %214 = getelementptr inbounds %"class.v8::internal::compiler::UseInterval", %"class.v8::internal::compiler::UseInterval"* %213, i64 0, i32 1, i32 0
  %215 = load i32, i32* %214, align 4
  %216 = icmp sgt i32 %215, %2
  br i1 %216, label %223, label %217

217:                                              ; preds = %210
  %218 = getelementptr inbounds %"class.v8::internal::compiler::LiveRange", %"class.v8::internal::compiler::LiveRange"* %211, i64 0, i32 6
  %219 = load %"class.v8::internal::compiler::LiveRange"*, %"class.v8::internal::compiler::LiveRange"** %218, align 8
  %220 = icmp eq %"class.v8::internal::compiler::LiveRange"* %219, null
  br i1 %220, label %221, label %210

221:                                              ; preds = %217, %193
  %222 = phi %"class.v8::internal::compiler::LiveRange"* [ null, %193 ], [ %211, %217 ]
  store %"class.v8::internal::compiler::LiveRange"* %222, %"class.v8::internal::compiler::LiveRange"** %200, align 8
  br label %325

223:                                              ; preds = %210
  %224 = getelementptr inbounds %"class.v8::internal::compiler::LiveRange", %"class.v8::internal::compiler::LiveRange"* %211, i64 0, i32 2
  store %"class.v8::internal::compiler::LiveRange"* %211, %"class.v8::internal::compiler::LiveRange"** %200, align 8
  %225 = getelementptr inbounds %"class.v8::internal::compiler::LiveRange", %"class.v8::internal::compiler::LiveRange"* %211, i64 0, i32 3
  %226 = load %"class.v8::internal::compiler::UseInterval"*, %"class.v8::internal::compiler::UseInterval"** %225, align 8
  %227 = icmp eq %"class.v8::internal::compiler::UseInterval"* %226, null
  br i1 %227, label %325, label %228

228:                                              ; preds = %223
  %229 = getelementptr inbounds %"class.v8::internal::compiler::UseInterval", %"class.v8::internal::compiler::UseInterval"* %226, i64 0, i32 0, i32 0
  %230 = load i32, i32* %229, align 8
  %231 = icmp sgt i32 %230, %2
  br i1 %231, label %325, label %232

232:                                              ; preds = %228
  %233 = load %"class.v8::internal::compiler::UseInterval"*, %"class.v8::internal::compiler::UseInterval"** %224, align 8
  %234 = getelementptr inbounds %"class.v8::internal::compiler::UseInterval", %"class.v8::internal::compiler::UseInterval"* %233, i64 0, i32 1, i32 0
  %235 = load i32, i32* %234, align 4
  %236 = icmp sgt i32 %235, %2
  br i1 %236, label %237, label %325

237:                                              ; preds = %232
  %238 = getelementptr inbounds %"class.v8::internal::compiler::LiveRange", %"class.v8::internal::compiler::LiveRange"* %211, i64 0, i32 7
  %239 = load %"class.v8::internal::compiler::UseInterval"*, %"class.v8::internal::compiler::UseInterval"** %238, align 8
  %240 = icmp eq %"class.v8::internal::compiler::UseInterval"* %239, null
  br i1 %240, label %246, label %241

241:                                              ; preds = %237
  %242 = getelementptr inbounds %"class.v8::internal::compiler::UseInterval", %"class.v8::internal::compiler::UseInterval"* %239, i64 0, i32 0, i32 0
  %243 = load i32, i32* %242, align 8
  %244 = icmp sgt i32 %243, %2
  br i1 %244, label %245, label %246

245:                                              ; preds = %241
  store %"class.v8::internal::compiler::UseInterval"* null, %"class.v8::internal::compiler::UseInterval"** %238, align 8
  br label %246

246:                                              ; preds = %245, %241, %237
  %247 = phi %"class.v8::internal::compiler::UseInterval"** [ %225, %245 ], [ %238, %241 ], [ %225, %237 ]
  %248 = load %"class.v8::internal::compiler::UseInterval"*, %"class.v8::internal::compiler::UseInterval"** %247, align 8
  %249 = icmp eq %"class.v8::internal::compiler::UseInterval"* %248, null
  br i1 %249, label %325, label %254

250:                                              ; preds = %273
  %251 = getelementptr inbounds %"class.v8::internal::compiler::UseInterval", %"class.v8::internal::compiler::UseInterval"* %255, i64 0, i32 2
  %252 = load %"class.v8::internal::compiler::UseInterval"*, %"class.v8::internal::compiler::UseInterval"** %251, align 8
  %253 = icmp eq %"class.v8::internal::compiler::UseInterval"* %252, null
  br i1 %253, label %325, label %254

254:                                              ; preds = %246, %250
  %255 = phi %"class.v8::internal::compiler::UseInterval"* [ %252, %250 ], [ %248, %246 ]
  %256 = getelementptr inbounds %"class.v8::internal::compiler::UseInterval", %"class.v8::internal::compiler::UseInterval"* %255, i64 0, i32 0, i32 0
  %257 = load i32, i32* %256, align 8
  %258 = icmp sgt i32 %257, %2
  br i1 %258, label %270, label %259

259:                                              ; preds = %254
  %260 = load %"class.v8::internal::compiler::UseInterval"*, %"class.v8::internal::compiler::UseInterval"** %238, align 8
  %261 = icmp eq %"class.v8::internal::compiler::UseInterval"* %260, null
  br i1 %261, label %265, label %262

262:                                              ; preds = %259
  %263 = getelementptr inbounds %"class.v8::internal::compiler::UseInterval", %"class.v8::internal::compiler::UseInterval"* %260, i64 0, i32 0, i32 0
  %264 = load i32, i32* %263, align 8
  br label %265

265:                                              ; preds = %262, %259
  %266 = phi i32 [ %264, %262 ], [ -1, %259 ]
  %267 = icmp sgt i32 %257, %266
  br i1 %267, label %268, label %270

268:                                              ; preds = %265
  store %"class.v8::internal::compiler::UseInterval"* %255, %"class.v8::internal::compiler::UseInterval"** %238, align 8
  %269 = load i32, i32* %256, align 4
  br label %270

270:                                              ; preds = %268, %265, %254
  %271 = phi i32 [ %257, %254 ], [ %257, %265 ], [ %269, %268 ]
  %272 = icmp sgt i32 %271, %2
  br i1 %272, label %325, label %273

273:                                              ; preds = %270
  %274 = getelementptr inbounds %"class.v8::internal::compiler::UseInterval", %"class.v8::internal::compiler::UseInterval"* %255, i64 0, i32 1, i32 0
  %275 = load i32, i32* %274, align 4
  %276 = icmp sgt i32 %275, %2
  br i1 %276, label %277, label %250

277:                                              ; preds = %273
  %278 = icmp eq %"class.v8::internal::compiler::LiveRange"* %211, null
  br i1 %278, label %325, label %279

279:                                              ; preds = %277
  %280 = getelementptr inbounds %"class.v8::internal::compiler::LiveRange", %"class.v8::internal::compiler::LiveRange"* %211, i64 0, i32 8
  %281 = load %"class.v8::internal::compiler::UsePosition"*, %"class.v8::internal::compiler::UsePosition"** %280, align 8
  %282 = icmp eq %"class.v8::internal::compiler::UsePosition"* %281, null
  br i1 %282, label %287, label %283

283:                                              ; preds = %279
  %284 = getelementptr inbounds %"class.v8::internal::compiler::UsePosition", %"class.v8::internal::compiler::UsePosition"* %281, i64 0, i32 3, i32 0
  %285 = load i32, i32* %284, align 8
  %286 = icmp sgt i32 %285, %2
  br i1 %286, label %287, label %291

287:                                              ; preds = %283, %279
  %288 = getelementptr inbounds %"class.v8::internal::compiler::LiveRange", %"class.v8::internal::compiler::LiveRange"* %211, i64 0, i32 4
  %289 = load %"class.v8::internal::compiler::UsePosition"*, %"class.v8::internal::compiler::UsePosition"** %288, align 8
  %290 = icmp eq %"class.v8::internal::compiler::UsePosition"* %289, null
  br i1 %290, label %302, label %291

291:                                              ; preds = %287, %283
  %292 = phi %"class.v8::internal::compiler::UsePosition"* [ %281, %283 ], [ %289, %287 ]
  br label %293

293:                                              ; preds = %291, %298
  %294 = phi %"class.v8::internal::compiler::UsePosition"* [ %300, %298 ], [ %292, %291 ]
  %295 = getelementptr inbounds %"class.v8::internal::compiler::UsePosition", %"class.v8::internal::compiler::UsePosition"* %294, i64 0, i32 3, i32 0
  %296 = load i32, i32* %295, align 8
  %297 = icmp slt i32 %296, %2
  br i1 %297, label %298, label %303

298:                                              ; preds = %293
  %299 = getelementptr inbounds %"class.v8::internal::compiler::UsePosition", %"class.v8::internal::compiler::UsePosition"* %294, i64 0, i32 2
  %300 = load %"class.v8::internal::compiler::UsePosition"*, %"class.v8::internal::compiler::UsePosition"** %299, align 8
  %301 = icmp eq %"class.v8::internal::compiler::UsePosition"* %300, null
  br i1 %301, label %302, label %293

302:                                              ; preds = %298, %287
  store %"class.v8::internal::compiler::UsePosition"* null, %"class.v8::internal::compiler::UsePosition"** %280, align 8
  br label %325

303:                                              ; preds = %293
  store %"class.v8::internal::compiler::UsePosition"* %294, %"class.v8::internal::compiler::UsePosition"** %280, align 8
  br label %304

304:                                              ; preds = %310, %303
  %305 = phi %"class.v8::internal::compiler::UsePosition"* [ %312, %310 ], [ %294, %303 ]
  %306 = getelementptr inbounds %"class.v8::internal::compiler::UsePosition", %"class.v8::internal::compiler::UsePosition"* %305, i64 0, i32 4
  %307 = load i32, i32* %306, align 4
  %308 = and i32 %307, 32
  %309 = icmp eq i32 %308, 0
  br i1 %309, label %310, label %314

310:                                              ; preds = %304
  %311 = getelementptr inbounds %"class.v8::internal::compiler::UsePosition", %"class.v8::internal::compiler::UsePosition"* %305, i64 0, i32 2
  %312 = load %"class.v8::internal::compiler::UsePosition"*, %"class.v8::internal::compiler::UsePosition"** %311, align 8
  %313 = icmp eq %"class.v8::internal::compiler::UsePosition"* %312, null
  br i1 %313, label %325, label %304

314:                                              ; preds = %304
  %315 = bitcast %"class.v8::internal::compiler::TopLevelLiveRange"** %198 to i64*
  %316 = load i64, i64* %315, align 8
  %317 = load %"class.v8::internal::compiler::TopLevelLiveRange"**, %"class.v8::internal::compiler::TopLevelLiveRange"*** %39, align 8
  %318 = icmp eq %"class.v8::internal::compiler::TopLevelLiveRange"** %195, %317
  br i1 %318, label %319, label %321, !prof !2

319:                                              ; preds = %314
  %320 = call %"class.v8::internal::compiler::TopLevelLiveRange"** @_ZN2v84base11SmallVectorIPNS_8internal8compiler17TopLevelLiveRangeELm32EE4GrowEv(%"class.v8::base::SmallVector"* nonnull %5) #16
  br label %321

321:                                              ; preds = %314, %319
  %322 = phi %"class.v8::internal::compiler::TopLevelLiveRange"** [ %320, %319 ], [ %195, %314 ]
  %323 = bitcast %"class.v8::internal::compiler::TopLevelLiveRange"** %322 to i64*
  store i64 %316, i64* %323, align 8
  %324 = getelementptr inbounds %"class.v8::internal::compiler::TopLevelLiveRange"*, %"class.v8::internal::compiler::TopLevelLiveRange"** %322, i64 1
  store %"class.v8::internal::compiler::TopLevelLiveRange"** %324, %"class.v8::internal::compiler::TopLevelLiveRange"*** %37, align 8
  br label %325

325:                                              ; preds = %250, %270, %310, %302, %246, %228, %223, %232, %221, %277, %321
  %326 = phi %"class.v8::internal::compiler::TopLevelLiveRange"** [ %194, %302 ], [ %194, %246 ], [ %194, %228 ], [ %194, %223 ], [ %194, %232 ], [ %194, %221 ], [ %194, %277 ], [ %324, %321 ], [ %194, %310 ], [ %194, %270 ], [ %194, %250 ]
  %327 = phi %"class.v8::internal::compiler::TopLevelLiveRange"** [ %195, %302 ], [ %195, %246 ], [ %195, %228 ], [ %195, %223 ], [ %195, %232 ], [ %195, %221 ], [ %195, %277 ], [ %324, %321 ], [ %195, %310 ], [ %195, %270 ], [ %195, %250 ]
  %328 = getelementptr inbounds %"class.v8::internal::compiler::LiveRange"*, %"class.v8::internal::compiler::LiveRange"** %196, i64 1
  %329 = icmp eq %"class.v8::internal::compiler::LiveRange"** %328, %45
  br i1 %329, label %185, label %193

330:                                              ; preds = %187
  %331 = getelementptr inbounds %"class.v8::base::SmallVector", %"class.v8::base::SmallVector"* %5, i64 0, i32 0
  %332 = load %"class.v8::internal::compiler::TopLevelLiveRange"**, %"class.v8::internal::compiler::TopLevelLiveRange"*** %331, align 8
  %333 = icmp eq %"class.v8::internal::compiler::TopLevelLiveRange"** %188, %332
  br i1 %333, label %334, label %595

334:                                              ; preds = %330
  %335 = load %"class.v8::internal::compiler::TopTierRegisterAllocationData"*, %"class.v8::internal::compiler::TopTierRegisterAllocationData"** %6, align 8
  %336 = getelementptr inbounds %"class.v8::internal::compiler::TopTierRegisterAllocationData", %"class.v8::internal::compiler::TopTierRegisterAllocationData"* %335, i64 0, i32 23, i32 0
  %337 = load i32, i32* %336, align 4
  %338 = and i32 %337, 1
  %339 = icmp eq i32 %338, 0
  br i1 %339, label %341, label %340

340:                                              ; preds = %334
  call void (i8*, ...) @_ZN2v88internal6PrintFEPKcz(i8* getelementptr inbounds ([22 x i8], [22 x i8]* @.str.71, i64 0, i64 0)) #16
  br label %341

341:                                              ; preds = %334, %340
  %342 = load %"class.v8::internal::compiler::LiveRange"**, %"class.v8::internal::compiler::LiveRange"*** %26, align 8
  %343 = load %"class.v8::internal::compiler::LiveRange"**, %"class.v8::internal::compiler::LiveRange"*** %28, align 8
  %344 = icmp eq %"class.v8::internal::compiler::LiveRange"** %342, %343
  br i1 %344, label %345, label %349

345:                                              ; preds = %469, %341
  %346 = load %"class.v8::internal::compiler::LiveRange"**, %"class.v8::internal::compiler::LiveRange"*** %42, align 8
  %347 = load %"class.v8::internal::compiler::LiveRange"**, %"class.v8::internal::compiler::LiveRange"*** %44, align 8
  %348 = icmp eq %"class.v8::internal::compiler::LiveRange"** %346, %347
  br i1 %348, label %595, label %472

349:                                              ; preds = %341, %469
  %350 = phi %"class.v8::internal::compiler::LiveRange"** [ %470, %469 ], [ %342, %341 ]
  %351 = load %"class.v8::internal::compiler::LiveRange"*, %"class.v8::internal::compiler::LiveRange"** %350, align 8
  %352 = getelementptr inbounds %"class.v8::internal::compiler::LiveRange", %"class.v8::internal::compiler::LiveRange"* %351, i64 0, i32 5
  %353 = load %"class.v8::internal::compiler::TopLevelLiveRange"*, %"class.v8::internal::compiler::TopLevelLiveRange"** %352, align 8
  %354 = getelementptr inbounds %"class.v8::internal::compiler::TopLevelLiveRange", %"class.v8::internal::compiler::TopLevelLiveRange"* %353, i64 0, i32 9
  %355 = load %"class.v8::internal::compiler::LiveRange"*, %"class.v8::internal::compiler::LiveRange"** %354, align 8
  %356 = getelementptr inbounds %"class.v8::internal::compiler::LiveRange", %"class.v8::internal::compiler::LiveRange"* %355, i64 0, i32 3
  %357 = load %"class.v8::internal::compiler::UseInterval"*, %"class.v8::internal::compiler::UseInterval"** %356, align 8
  %358 = getelementptr inbounds %"class.v8::internal::compiler::UseInterval", %"class.v8::internal::compiler::UseInterval"* %357, i64 0, i32 0, i32 0
  %359 = load i32, i32* %358, align 8
  %360 = icmp sgt i32 %359, %2
  %361 = bitcast %"class.v8::internal::compiler::TopLevelLiveRange"* %353 to %"class.v8::internal::compiler::LiveRange"*
  %362 = select i1 %360, %"class.v8::internal::compiler::LiveRange"* %361, %"class.v8::internal::compiler::LiveRange"* %355
  %363 = icmp eq %"class.v8::internal::compiler::LiveRange"* %362, null
  br i1 %363, label %375, label %364

364:                                              ; preds = %349, %371
  %365 = phi %"class.v8::internal::compiler::LiveRange"* [ %373, %371 ], [ %362, %349 ]
  %366 = getelementptr inbounds %"class.v8::internal::compiler::LiveRange", %"class.v8::internal::compiler::LiveRange"* %365, i64 0, i32 2
  %367 = load %"class.v8::internal::compiler::UseInterval"*, %"class.v8::internal::compiler::UseInterval"** %366, align 8
  %368 = getelementptr inbounds %"class.v8::internal::compiler::UseInterval", %"class.v8::internal::compiler::UseInterval"* %367, i64 0, i32 1, i32 0
  %369 = load i32, i32* %368, align 4
  %370 = icmp sgt i32 %369, %2
  br i1 %370, label %377, label %371

371:                                              ; preds = %364
  %372 = getelementptr inbounds %"class.v8::internal::compiler::LiveRange", %"class.v8::internal::compiler::LiveRange"* %365, i64 0, i32 6
  %373 = load %"class.v8::internal::compiler::LiveRange"*, %"class.v8::internal::compiler::LiveRange"** %372, align 8
  %374 = icmp eq %"class.v8::internal::compiler::LiveRange"* %373, null
  br i1 %374, label %375, label %364

375:                                              ; preds = %371, %349
  %376 = phi %"class.v8::internal::compiler::LiveRange"* [ null, %349 ], [ %365, %371 ]
  store %"class.v8::internal::compiler::LiveRange"* %376, %"class.v8::internal::compiler::LiveRange"** %354, align 8
  br label %469

377:                                              ; preds = %364
  %378 = getelementptr inbounds %"class.v8::internal::compiler::LiveRange", %"class.v8::internal::compiler::LiveRange"* %365, i64 0, i32 2
  store %"class.v8::internal::compiler::LiveRange"* %365, %"class.v8::internal::compiler::LiveRange"** %354, align 8
  %379 = getelementptr inbounds %"class.v8::internal::compiler::LiveRange", %"class.v8::internal::compiler::LiveRange"* %365, i64 0, i32 3
  %380 = load %"class.v8::internal::compiler::UseInterval"*, %"class.v8::internal::compiler::UseInterval"** %379, align 8
  %381 = icmp eq %"class.v8::internal::compiler::UseInterval"* %380, null
  br i1 %381, label %469, label %382

382:                                              ; preds = %377
  %383 = getelementptr inbounds %"class.v8::internal::compiler::UseInterval", %"class.v8::internal::compiler::UseInterval"* %380, i64 0, i32 0, i32 0
  %384 = load i32, i32* %383, align 8
  %385 = icmp sgt i32 %384, %2
  br i1 %385, label %469, label %386

386:                                              ; preds = %382
  %387 = load %"class.v8::internal::compiler::UseInterval"*, %"class.v8::internal::compiler::UseInterval"** %378, align 8
  %388 = getelementptr inbounds %"class.v8::internal::compiler::UseInterval", %"class.v8::internal::compiler::UseInterval"* %387, i64 0, i32 1, i32 0
  %389 = load i32, i32* %388, align 4
  %390 = icmp sgt i32 %389, %2
  br i1 %390, label %391, label %469

391:                                              ; preds = %386
  %392 = getelementptr inbounds %"class.v8::internal::compiler::LiveRange", %"class.v8::internal::compiler::LiveRange"* %365, i64 0, i32 7
  %393 = load %"class.v8::internal::compiler::UseInterval"*, %"class.v8::internal::compiler::UseInterval"** %392, align 8
  %394 = icmp eq %"class.v8::internal::compiler::UseInterval"* %393, null
  br i1 %394, label %400, label %395

395:                                              ; preds = %391
  %396 = getelementptr inbounds %"class.v8::internal::compiler::UseInterval", %"class.v8::internal::compiler::UseInterval"* %393, i64 0, i32 0, i32 0
  %397 = load i32, i32* %396, align 8
  %398 = icmp sgt i32 %397, %2
  br i1 %398, label %399, label %400

399:                                              ; preds = %395
  store %"class.v8::internal::compiler::UseInterval"* null, %"class.v8::internal::compiler::UseInterval"** %392, align 8
  br label %400

400:                                              ; preds = %399, %395, %391
  %401 = phi %"class.v8::internal::compiler::UseInterval"** [ %379, %399 ], [ %392, %395 ], [ %379, %391 ]
  %402 = load %"class.v8::internal::compiler::UseInterval"*, %"class.v8::internal::compiler::UseInterval"** %401, align 8
  %403 = icmp eq %"class.v8::internal::compiler::UseInterval"* %402, null
  br i1 %403, label %469, label %408

404:                                              ; preds = %427
  %405 = getelementptr inbounds %"class.v8::internal::compiler::UseInterval", %"class.v8::internal::compiler::UseInterval"* %409, i64 0, i32 2
  %406 = load %"class.v8::internal::compiler::UseInterval"*, %"class.v8::internal::compiler::UseInterval"** %405, align 8
  %407 = icmp eq %"class.v8::internal::compiler::UseInterval"* %406, null
  br i1 %407, label %469, label %408

408:                                              ; preds = %400, %404
  %409 = phi %"class.v8::internal::compiler::UseInterval"* [ %406, %404 ], [ %402, %400 ]
  %410 = getelementptr inbounds %"class.v8::internal::compiler::UseInterval", %"class.v8::internal::compiler::UseInterval"* %409, i64 0, i32 0, i32 0
  %411 = load i32, i32* %410, align 8
  %412 = icmp sgt i32 %411, %2
  br i1 %412, label %424, label %413

413:                                              ; preds = %408
  %414 = load %"class.v8::internal::compiler::UseInterval"*, %"class.v8::internal::compiler::UseInterval"** %392, align 8
  %415 = icmp eq %"class.v8::internal::compiler::UseInterval"* %414, null
  br i1 %415, label %419, label %416

416:                                              ; preds = %413
  %417 = getelementptr inbounds %"class.v8::internal::compiler::UseInterval", %"class.v8::internal::compiler::UseInterval"* %414, i64 0, i32 0, i32 0
  %418 = load i32, i32* %417, align 8
  br label %419

419:                                              ; preds = %416, %413
  %420 = phi i32 [ %418, %416 ], [ -1, %413 ]
  %421 = icmp sgt i32 %411, %420
  br i1 %421, label %422, label %424

422:                                              ; preds = %419
  store %"class.v8::internal::compiler::UseInterval"* %409, %"class.v8::internal::compiler::UseInterval"** %392, align 8
  %423 = load i32, i32* %410, align 4
  br label %424

424:                                              ; preds = %422, %419, %408
  %425 = phi i32 [ %411, %408 ], [ %411, %419 ], [ %423, %422 ]
  %426 = icmp sgt i32 %425, %2
  br i1 %426, label %469, label %427

427:                                              ; preds = %424
  %428 = getelementptr inbounds %"class.v8::internal::compiler::UseInterval", %"class.v8::internal::compiler::UseInterval"* %409, i64 0, i32 1, i32 0
  %429 = load i32, i32* %428, align 4
  %430 = icmp sgt i32 %429, %2
  br i1 %430, label %431, label %404

431:                                              ; preds = %427
  %432 = icmp eq %"class.v8::internal::compiler::LiveRange"* %365, null
  br i1 %432, label %469, label %433

433:                                              ; preds = %431
  %434 = getelementptr inbounds %"class.v8::internal::compiler::LiveRange", %"class.v8::internal::compiler::LiveRange"* %365, i64 0, i32 8
  %435 = load %"class.v8::internal::compiler::UsePosition"*, %"class.v8::internal::compiler::UsePosition"** %434, align 8
  %436 = icmp eq %"class.v8::internal::compiler::UsePosition"* %435, null
  br i1 %436, label %441, label %437

437:                                              ; preds = %433
  %438 = getelementptr inbounds %"class.v8::internal::compiler::UsePosition", %"class.v8::internal::compiler::UsePosition"* %435, i64 0, i32 3, i32 0
  %439 = load i32, i32* %438, align 8
  %440 = icmp sgt i32 %439, %2
  br i1 %440, label %441, label %445

441:                                              ; preds = %437, %433
  %442 = getelementptr inbounds %"class.v8::internal::compiler::LiveRange", %"class.v8::internal::compiler::LiveRange"* %365, i64 0, i32 4
  %443 = load %"class.v8::internal::compiler::UsePosition"*, %"class.v8::internal::compiler::UsePosition"** %442, align 8
  %444 = icmp eq %"class.v8::internal::compiler::UsePosition"* %443, null
  br i1 %444, label %456, label %445

445:                                              ; preds = %441, %437
  %446 = phi %"class.v8::internal::compiler::UsePosition"* [ %435, %437 ], [ %443, %441 ]
  br label %447

447:                                              ; preds = %445, %452
  %448 = phi %"class.v8::internal::compiler::UsePosition"* [ %454, %452 ], [ %446, %445 ]
  %449 = getelementptr inbounds %"class.v8::internal::compiler::UsePosition", %"class.v8::internal::compiler::UsePosition"* %448, i64 0, i32 3, i32 0
  %450 = load i32, i32* %449, align 8
  %451 = icmp slt i32 %450, %2
  br i1 %451, label %452, label %457

452:                                              ; preds = %447
  %453 = getelementptr inbounds %"class.v8::internal::compiler::UsePosition", %"class.v8::internal::compiler::UsePosition"* %448, i64 0, i32 2
  %454 = load %"class.v8::internal::compiler::UsePosition"*, %"class.v8::internal::compiler::UsePosition"** %453, align 8
  %455 = icmp eq %"class.v8::internal::compiler::UsePosition"* %454, null
  br i1 %455, label %456, label %447

456:                                              ; preds = %452, %441
  store %"class.v8::internal::compiler::UsePosition"* null, %"class.v8::internal::compiler::UsePosition"** %434, align 8
  br label %469

457:                                              ; preds = %447
  store %"class.v8::internal::compiler::UsePosition"* %448, %"class.v8::internal::compiler::UsePosition"** %434, align 8
  %458 = bitcast %"class.v8::internal::compiler::TopLevelLiveRange"** %352 to i64*
  %459 = load i64, i64* %458, align 8
  %460 = load %"class.v8::internal::compiler::TopLevelLiveRange"**, %"class.v8::internal::compiler::TopLevelLiveRange"*** %21, align 8
  %461 = load %"class.v8::internal::compiler::TopLevelLiveRange"**, %"class.v8::internal::compiler::TopLevelLiveRange"*** %23, align 8
  %462 = icmp eq %"class.v8::internal::compiler::TopLevelLiveRange"** %460, %461
  br i1 %462, label %463, label %465, !prof !2

463:                                              ; preds = %457
  %464 = call %"class.v8::internal::compiler::TopLevelLiveRange"** @_ZN2v84base11SmallVectorIPNS_8internal8compiler17TopLevelLiveRangeELm32EE4GrowEv(%"class.v8::base::SmallVector"* nonnull %4) #16
  br label %465

465:                                              ; preds = %457, %463
  %466 = phi %"class.v8::internal::compiler::TopLevelLiveRange"** [ %464, %463 ], [ %460, %457 ]
  %467 = bitcast %"class.v8::internal::compiler::TopLevelLiveRange"** %466 to i64*
  store i64 %459, i64* %467, align 8
  %468 = getelementptr inbounds %"class.v8::internal::compiler::TopLevelLiveRange"*, %"class.v8::internal::compiler::TopLevelLiveRange"** %466, i64 1
  store %"class.v8::internal::compiler::TopLevelLiveRange"** %468, %"class.v8::internal::compiler::TopLevelLiveRange"*** %21, align 8
  br label %469

469:                                              ; preds = %404, %424, %400, %382, %377, %386, %375, %456, %431, %465
  %470 = getelementptr inbounds %"class.v8::internal::compiler::LiveRange"*, %"class.v8::internal::compiler::LiveRange"** %350, i64 1
  %471 = icmp eq %"class.v8::internal::compiler::LiveRange"** %470, %343
  br i1 %471, label %345, label %349

472:                                              ; preds = %345, %592
  %473 = phi %"class.v8::internal::compiler::LiveRange"** [ %593, %592 ], [ %346, %345 ]
  %474 = load %"class.v8::internal::compiler::LiveRange"*, %"class.v8::internal::compiler::LiveRange"** %473, align 8
  %475 = getelementptr inbounds %"class.v8::internal::compiler::LiveRange", %"class.v8::internal::compiler::LiveRange"* %474, i64 0, i32 5
  %476 = load %"class.v8::internal::compiler::TopLevelLiveRange"*, %"class.v8::internal::compiler::TopLevelLiveRange"** %475, align 8
  %477 = getelementptr inbounds %"class.v8::internal::compiler::TopLevelLiveRange", %"class.v8::internal::compiler::TopLevelLiveRange"* %476, i64 0, i32 9
  %478 = load %"class.v8::internal::compiler::LiveRange"*, %"class.v8::internal::compiler::LiveRange"** %477, align 8
  %479 = getelementptr inbounds %"class.v8::internal::compiler::LiveRange", %"class.v8::internal::compiler::LiveRange"* %478, i64 0, i32 3
  %480 = load %"class.v8::internal::compiler::UseInterval"*, %"class.v8::internal::compiler::UseInterval"** %479, align 8
  %481 = getelementptr inbounds %"class.v8::internal::compiler::UseInterval", %"class.v8::internal::compiler::UseInterval"* %480, i64 0, i32 0, i32 0
  %482 = load i32, i32* %481, align 8
  %483 = icmp sgt i32 %482, %2
  %484 = bitcast %"class.v8::internal::compiler::TopLevelLiveRange"* %476 to %"class.v8::internal::compiler::LiveRange"*
  %485 = select i1 %483, %"class.v8::internal::compiler::LiveRange"* %484, %"class.v8::internal::compiler::LiveRange"* %478
  %486 = icmp eq %"class.v8::internal::compiler::LiveRange"* %485, null
  br i1 %486, label %498, label %487

487:                                              ; preds = %472, %494
  %488 = phi %"class.v8::internal::compiler::LiveRange"* [ %496, %494 ], [ %485, %472 ]
  %489 = getelementptr inbounds %"class.v8::internal::compiler::LiveRange", %"class.v8::internal::compiler::LiveRange"* %488, i64 0, i32 2
  %490 = load %"class.v8::internal::compiler::UseInterval"*, %"class.v8::internal::compiler::UseInterval"** %489, align 8
  %491 = getelementptr inbounds %"class.v8::internal::compiler::UseInterval", %"class.v8::internal::compiler::UseInterval"* %490, i64 0, i32 1, i32 0
  %492 = load i32, i32* %491, align 4
  %493 = icmp sgt i32 %492, %2
  br i1 %493, label %500, label %494

494:                                              ; preds = %487
  %495 = getelementptr inbounds %"class.v8::internal::compiler::LiveRange", %"class.v8::internal::compiler::LiveRange"* %488, i64 0, i32 6
  %496 = load %"class.v8::internal::compiler::LiveRange"*, %"class.v8::internal::compiler::LiveRange"** %495, align 8
  %497 = icmp eq %"class.v8::internal::compiler::LiveRange"* %496, null
  br i1 %497, label %498, label %487

498:                                              ; preds = %494, %472
  %499 = phi %"class.v8::internal::compiler::LiveRange"* [ null, %472 ], [ %488, %494 ]
  store %"class.v8::internal::compiler::LiveRange"* %499, %"class.v8::internal::compiler::LiveRange"** %477, align 8
  br label %592

500:                                              ; preds = %487
  %501 = getelementptr inbounds %"class.v8::internal::compiler::LiveRange", %"class.v8::internal::compiler::LiveRange"* %488, i64 0, i32 2
  store %"class.v8::internal::compiler::LiveRange"* %488, %"class.v8::internal::compiler::LiveRange"** %477, align 8
  %502 = getelementptr inbounds %"class.v8::internal::compiler::LiveRange", %"class.v8::internal::compiler::LiveRange"* %488, i64 0, i32 3
  %503 = load %"class.v8::internal::compiler::UseInterval"*, %"class.v8::internal::compiler::UseInterval"** %502, align 8
  %504 = icmp eq %"class.v8::internal::compiler::UseInterval"* %503, null
  br i1 %504, label %592, label %505

505:                                              ; preds = %500
  %506 = getelementptr inbounds %"class.v8::internal::compiler::UseInterval", %"class.v8::internal::compiler::UseInterval"* %503, i64 0, i32 0, i32 0
  %507 = load i32, i32* %506, align 8
  %508 = icmp sgt i32 %507, %2
  br i1 %508, label %592, label %509

509:                                              ; preds = %505
  %510 = load %"class.v8::internal::compiler::UseInterval"*, %"class.v8::internal::compiler::UseInterval"** %501, align 8
  %511 = getelementptr inbounds %"class.v8::internal::compiler::UseInterval", %"class.v8::internal::compiler::UseInterval"* %510, i64 0, i32 1, i32 0
  %512 = load i32, i32* %511, align 4
  %513 = icmp sgt i32 %512, %2
  br i1 %513, label %514, label %592

514:                                              ; preds = %509
  %515 = getelementptr inbounds %"class.v8::internal::compiler::LiveRange", %"class.v8::internal::compiler::LiveRange"* %488, i64 0, i32 7
  %516 = load %"class.v8::internal::compiler::UseInterval"*, %"class.v8::internal::compiler::UseInterval"** %515, align 8
  %517 = icmp eq %"class.v8::internal::compiler::UseInterval"* %516, null
  br i1 %517, label %523, label %518

518:                                              ; preds = %514
  %519 = getelementptr inbounds %"class.v8::internal::compiler::UseInterval", %"class.v8::internal::compiler::UseInterval"* %516, i64 0, i32 0, i32 0
  %520 = load i32, i32* %519, align 8
  %521 = icmp sgt i32 %520, %2
  br i1 %521, label %522, label %523

522:                                              ; preds = %518
  store %"class.v8::internal::compiler::UseInterval"* null, %"class.v8::internal::compiler::UseInterval"** %515, align 8
  br label %523

523:                                              ; preds = %522, %518, %514
  %524 = phi %"class.v8::internal::compiler::UseInterval"** [ %502, %522 ], [ %515, %518 ], [ %502, %514 ]
  %525 = load %"class.v8::internal::compiler::UseInterval"*, %"class.v8::internal::compiler::UseInterval"** %524, align 8
  %526 = icmp eq %"class.v8::internal::compiler::UseInterval"* %525, null
  br i1 %526, label %592, label %531

527:                                              ; preds = %550
  %528 = getelementptr inbounds %"class.v8::internal::compiler::UseInterval", %"class.v8::internal::compiler::UseInterval"* %532, i64 0, i32 2
  %529 = load %"class.v8::internal::compiler::UseInterval"*, %"class.v8::internal::compiler::UseInterval"** %528, align 8
  %530 = icmp eq %"class.v8::internal::compiler::UseInterval"* %529, null
  br i1 %530, label %592, label %531

531:                                              ; preds = %523, %527
  %532 = phi %"class.v8::internal::compiler::UseInterval"* [ %529, %527 ], [ %525, %523 ]
  %533 = getelementptr inbounds %"class.v8::internal::compiler::UseInterval", %"class.v8::internal::compiler::UseInterval"* %532, i64 0, i32 0, i32 0
  %534 = load i32, i32* %533, align 8
  %535 = icmp sgt i32 %534, %2
  br i1 %535, label %547, label %536

536:                                              ; preds = %531
  %537 = load %"class.v8::internal::compiler::UseInterval"*, %"class.v8::internal::compiler::UseInterval"** %515, align 8
  %538 = icmp eq %"class.v8::internal::compiler::UseInterval"* %537, null
  br i1 %538, label %542, label %539

539:                                              ; preds = %536
  %540 = getelementptr inbounds %"class.v8::internal::compiler::UseInterval", %"class.v8::internal::compiler::UseInterval"* %537, i64 0, i32 0, i32 0
  %541 = load i32, i32* %540, align 8
  br label %542

542:                                              ; preds = %539, %536
  %543 = phi i32 [ %541, %539 ], [ -1, %536 ]
  %544 = icmp sgt i32 %534, %543
  br i1 %544, label %545, label %547

545:                                              ; preds = %542
  store %"class.v8::internal::compiler::UseInterval"* %532, %"class.v8::internal::compiler::UseInterval"** %515, align 8
  %546 = load i32, i32* %533, align 4
  br label %547

547:                                              ; preds = %545, %542, %531
  %548 = phi i32 [ %534, %531 ], [ %534, %542 ], [ %546, %545 ]
  %549 = icmp sgt i32 %548, %2
  br i1 %549, label %592, label %550

550:                                              ; preds = %547
  %551 = getelementptr inbounds %"class.v8::internal::compiler::UseInterval", %"class.v8::internal::compiler::UseInterval"* %532, i64 0, i32 1, i32 0
  %552 = load i32, i32* %551, align 4
  %553 = icmp sgt i32 %552, %2
  br i1 %553, label %554, label %527

554:                                              ; preds = %550
  %555 = icmp eq %"class.v8::internal::compiler::LiveRange"* %488, null
  br i1 %555, label %592, label %556

556:                                              ; preds = %554
  %557 = getelementptr inbounds %"class.v8::internal::compiler::LiveRange", %"class.v8::internal::compiler::LiveRange"* %488, i64 0, i32 8
  %558 = load %"class.v8::internal::compiler::UsePosition"*, %"class.v8::internal::compiler::UsePosition"** %557, align 8
  %559 = icmp eq %"class.v8::internal::compiler::UsePosition"* %558, null
  br i1 %559, label %564, label %560

560:                                              ; preds = %556
  %561 = getelementptr inbounds %"class.v8::internal::compiler::UsePosition", %"class.v8::internal::compiler::UsePosition"* %558, i64 0, i32 3, i32 0
  %562 = load i32, i32* %561, align 8
  %563 = icmp sgt i32 %562, %2
  br i1 %563, label %564, label %568

564:                                              ; preds = %560, %556
  %565 = getelementptr inbounds %"class.v8::internal::compiler::LiveRange", %"class.v8::internal::compiler::LiveRange"* %488, i64 0, i32 4
  %566 = load %"class.v8::internal::compiler::UsePosition"*, %"class.v8::internal::compiler::UsePosition"** %565, align 8
  %567 = icmp eq %"class.v8::internal::compiler::UsePosition"* %566, null
  br i1 %567, label %579, label %568

568:                                              ; preds = %564, %560
  %569 = phi %"class.v8::internal::compiler::UsePosition"* [ %558, %560 ], [ %566, %564 ]
  br label %570

570:                                              ; preds = %568, %575
  %571 = phi %"class.v8::internal::compiler::UsePosition"* [ %577, %575 ], [ %569, %568 ]
  %572 = getelementptr inbounds %"class.v8::internal::compiler::UsePosition", %"class.v8::internal::compiler::UsePosition"* %571, i64 0, i32 3, i32 0
  %573 = load i32, i32* %572, align 8
  %574 = icmp slt i32 %573, %2
  br i1 %574, label %575, label %580

575:                                              ; preds = %570
  %576 = getelementptr inbounds %"class.v8::internal::compiler::UsePosition", %"class.v8::internal::compiler::UsePosition"* %571, i64 0, i32 2
  %577 = load %"class.v8::internal::compiler::UsePosition"*, %"class.v8::internal::compiler::UsePosition"** %576, align 8
  %578 = icmp eq %"class.v8::internal::compiler::UsePosition"* %577, null
  br i1 %578, label %579, label %570

579:                                              ; preds = %575, %564
  store %"class.v8::internal::compiler::UsePosition"* null, %"class.v8::internal::compiler::UsePosition"** %557, align 8
  br label %592

580:                                              ; preds = %570
  store %"class.v8::internal::compiler::UsePosition"* %571, %"class.v8::internal::compiler::UsePosition"** %557, align 8
  %581 = bitcast %"class.v8::internal::compiler::TopLevelLiveRange"** %475 to i64*
  %582 = load i64, i64* %581, align 8
  %583 = load %"class.v8::internal::compiler::TopLevelLiveRange"**, %"class.v8::internal::compiler::TopLevelLiveRange"*** %37, align 8
  %584 = load %"class.v8::internal::compiler::TopLevelLiveRange"**, %"class.v8::internal::compiler::TopLevelLiveRange"*** %39, align 8
  %585 = icmp eq %"class.v8::internal::compiler::TopLevelLiveRange"** %583, %584
  br i1 %585, label %586, label %588, !prof !2

586:                                              ; preds = %580
  %587 = call %"class.v8::internal::compiler::TopLevelLiveRange"** @_ZN2v84base11SmallVectorIPNS_8internal8compiler17TopLevelLiveRangeELm32EE4GrowEv(%"class.v8::base::SmallVector"* nonnull %5) #16
  br label %588

588:                                              ; preds = %580, %586
  %589 = phi %"class.v8::internal::compiler::TopLevelLiveRange"** [ %587, %586 ], [ %583, %580 ]
  %590 = bitcast %"class.v8::internal::compiler::TopLevelLiveRange"** %589 to i64*
  store i64 %582, i64* %590, align 8
  %591 = getelementptr inbounds %"class.v8::internal::compiler::TopLevelLiveRange"*, %"class.v8::internal::compiler::TopLevelLiveRange"** %589, i64 1
  store %"class.v8::internal::compiler::TopLevelLiveRange"** %591, %"class.v8::internal::compiler::TopLevelLiveRange"*** %37, align 8
  br label %592

592:                                              ; preds = %527, %547, %523, %505, %500, %509, %498, %579, %554, %588
  %593 = getelementptr inbounds %"class.v8::internal::compiler::LiveRange"*, %"class.v8::internal::compiler::LiveRange"** %473, i64 1
  %594 = icmp eq %"class.v8::internal::compiler::LiveRange"** %593, %347
  br i1 %594, label %595, label %472

595:                                              ; preds = %592, %345, %187, %330
  %596 = load %"class.v8::internal::compiler::TopTierRegisterAllocationData"*, %"class.v8::internal::compiler::TopTierRegisterAllocationData"** %6, align 8
  %597 = getelementptr inbounds %"class.v8::internal::compiler::TopTierRegisterAllocationData", %"class.v8::internal::compiler::TopTierRegisterAllocationData"* %596, i64 0, i32 23, i32 0
  %598 = load i32, i32* %597, align 4
  %599 = and i32 %598, 1
  %600 = icmp eq i32 %599, 0
  %601 = bitcast %"class.v8::internal::compiler::TopLevelLiveRange"*** %21 to i64*
  br i1 %600, label %602, label %606

602:                                              ; preds = %595
  %603 = bitcast %"class.v8::base::SmallVector"* %4 to i64*
  %604 = bitcast %"class.v8::internal::compiler::TopLevelLiveRange"*** %37 to i64*
  %605 = bitcast %"class.v8::base::SmallVector"* %5 to i64*
  br label %618

606:                                              ; preds = %595
  %607 = load i64, i64* %601, align 8
  %608 = bitcast %"class.v8::base::SmallVector"* %4 to i64*
  %609 = load i64, i64* %608, align 8
  %610 = sub i64 %607, %609
  %611 = ashr exact i64 %610, 3
  %612 = bitcast %"class.v8::internal::compiler::TopLevelLiveRange"*** %37 to i64*
  %613 = load i64, i64* %612, align 8
  %614 = bitcast %"class.v8::base::SmallVector"* %5 to i64*
  %615 = load i64, i64* %614, align 8
  %616 = sub i64 %613, %615
  %617 = ashr exact i64 %616, 3
  call void (i8*, ...) @_ZN2v88internal6PrintFEPKcz(i8* getelementptr inbounds ([22 x i8], [22 x i8]* @.str.72, i64 0, i64 0), i64 %611, i64 %617) #16
  br label %618

618:                                              ; preds = %602, %606
  %619 = phi i64* [ %605, %602 ], [ %614, %606 ]
  %620 = phi i64* [ %604, %602 ], [ %612, %606 ]
  %621 = phi i64* [ %603, %602 ], [ %608, %606 ]
  %622 = load i64, i64* %601, align 8
  %623 = load i64, i64* %621, align 8
  %624 = sub i64 %622, %623
  %625 = load i64, i64* %620, align 8
  %626 = load i64, i64* %619, align 8
  %627 = sub i64 %625, %626
  %628 = icmp ugt i64 %624, %627
  %629 = load %"class.v8::internal::compiler::RpoNumber"*, %"class.v8::internal::compiler::RpoNumber"** %8, align 8
  %630 = getelementptr inbounds %"class.v8::internal::compiler::RpoNumber", %"class.v8::internal::compiler::RpoNumber"* %629, i64 1
  %631 = select i1 %628, %"class.v8::internal::compiler::RpoNumber"* %629, %"class.v8::internal::compiler::RpoNumber"* %630
  %632 = getelementptr inbounds %"class.v8::internal::compiler::RpoNumber", %"class.v8::internal::compiler::RpoNumber"* %631, i64 0, i32 0
  %633 = load i32, i32* %632, align 4
  %634 = inttoptr i64 %626 to %"class.v8::internal::compiler::TopLevelLiveRange"**
  %635 = icmp eq %"class.v8::internal::compiler::TopLevelLiveRange"** %634, %47
  %636 = inttoptr i64 %623 to %"class.v8::internal::compiler::TopLevelLiveRange"**
  br i1 %635, label %640, label %637

637:                                              ; preds = %618
  %638 = inttoptr i64 %626 to i8*
  call void @free(i8* %638) #16
  %639 = load %"class.v8::internal::compiler::TopLevelLiveRange"**, %"class.v8::internal::compiler::TopLevelLiveRange"*** %190, align 8
  br label %640

640:                                              ; preds = %618, %637
  %641 = phi %"class.v8::internal::compiler::TopLevelLiveRange"** [ %636, %618 ], [ %639, %637 ]
  call void @llvm.lifetime.end.p0i8(i64 280, i8* nonnull %34) #16
  %642 = icmp eq %"class.v8::internal::compiler::TopLevelLiveRange"** %641, %31
  br i1 %642, label %645, label %643

643:                                              ; preds = %640
  %644 = bitcast %"class.v8::internal::compiler::TopLevelLiveRange"** %641 to i8*
  call void @free(i8* %644) #16
  br label %645

645:                                              ; preds = %640, %643
  call void @llvm.lifetime.end.p0i8(i64 280, i8* nonnull %18) #16
  ret i32 %633
}

; Function Attrs: nounwind ssp uwtable
define hidden zeroext i1 @_ZN2v88internal8compiler19LinearScanAllocator13CheckConflictENS0_21MachineRepresentationEiPNS0_16ZoneUnorderedSetINS2_17RangeWithRegisterENS5_4HashENS5_6EqualsEEE(%"class.v8::internal::compiler::LinearScanAllocator"* nocapture readonly, i8 zeroext, i32, %"class.v8::internal::ZoneUnorderedSet"* nocapture readonly) local_unnamed_addr #0 align 2 {
  %5 = getelementptr inbounds %"class.v8::internal::ZoneUnorderedSet", %"class.v8::internal::ZoneUnorderedSet"* %3, i64 0, i32 0, i32 0, i32 1, i32 0, i32 0, i32 0
  %6 = bitcast %"struct.std::__1::__hash_node_base.1398"** %5 to i64*
  %7 = load i64, i64* %6, align 8
  %8 = icmp eq i64 %7, 0
  br i1 %8, label %31, label %9

9:                                                ; preds = %4
  %10 = getelementptr inbounds %"class.v8::internal::compiler::LinearScanAllocator", %"class.v8::internal::compiler::LinearScanAllocator"* %0, i64 0, i32 0, i32 0
  br label %11

11:                                               ; preds = %9, %27
  %12 = phi i64 [ %7, %9 ], [ %29, %27 ]
  %13 = inttoptr i64 %12 to %"struct.std::__1::__hash_node"*
  %14 = getelementptr inbounds %"struct.std::__1::__hash_node", %"struct.std::__1::__hash_node"* %13, i64 0, i32 2
  %15 = bitcast %"struct.v8::internal::compiler::LinearScanAllocator::RangeWithRegister"* %14 to %"class.v8::internal::compiler::LiveRange"**
  %16 = load %"class.v8::internal::compiler::LiveRange"*, %"class.v8::internal::compiler::LiveRange"** %15, align 8
  %17 = getelementptr inbounds %"struct.std::__1::__hash_node", %"struct.std::__1::__hash_node"* %13, i64 0, i32 2, i32 1
  %18 = load i32, i32* %17, align 8
  %19 = load %"class.v8::internal::compiler::TopTierRegisterAllocationData"*, %"class.v8::internal::compiler::TopTierRegisterAllocationData"** %10, align 8
  %20 = getelementptr inbounds %"class.v8::internal::compiler::TopTierRegisterAllocationData", %"class.v8::internal::compiler::TopTierRegisterAllocationData"* %19, i64 0, i32 5
  %21 = load %"class.v8::internal::RegisterConfiguration"*, %"class.v8::internal::RegisterConfiguration"** %20, align 8
  %22 = getelementptr inbounds %"class.v8::internal::compiler::LiveRange", %"class.v8::internal::compiler::LiveRange"* %16, i64 0, i32 1
  %23 = load i32, i32* %22, align 4
  %24 = lshr i32 %23, 13
  %25 = trunc i32 %24 to i8
  %26 = tail call zeroext i1 @_ZNK2v88internal21RegisterConfiguration10AreAliasesENS0_21MachineRepresentationEiS2_i(%"class.v8::internal::RegisterConfiguration"* %21, i8 zeroext %25, i32 %18, i8 zeroext %1, i32 %2) #16
  br i1 %26, label %31, label %27

27:                                               ; preds = %11
  %28 = inttoptr i64 %12 to i64*
  %29 = load i64, i64* %28, align 8
  %30 = icmp eq i64 %29, 0
  br i1 %30, label %31, label %11

31:                                               ; preds = %27, %11, %4
  %32 = phi i1 [ false, %4 ], [ true, %11 ], [ false, %27 ]
  ret i1 %32
}

declare zeroext i1 @_ZNK2v88internal21RegisterConfiguration10AreAliasesENS0_21MachineRepresentationEiS2_i(%"class.v8::internal::RegisterConfiguration"*, i8 zeroext, i32, i8 zeroext, i32) local_unnamed_addr #6

; Function Attrs: nounwind ssp uwtable
define hidden void @_ZN2v88internal8compiler19LinearScanAllocator32ComputeStateFromManyPredecessorsEPNS1_16InstructionBlockEPNS0_16ZoneUnorderedSetINS2_17RangeWithRegisterENS6_4HashENS6_6EqualsEEE(%"class.v8::internal::compiler::LinearScanAllocator"*, %"class.v8::internal::compiler::InstructionBlock"* nocapture readonly, %"class.v8::internal::ZoneUnorderedSet"*) local_unnamed_addr #0 align 2 {
  %4 = alloca %"class.v8::internal::ZoneMap.1414", align 8
  %5 = alloca [32 x i32], align 8
  %6 = alloca [32 x i8], align 16
  %7 = alloca %class.anon, align 8
  %8 = alloca %"class.std::__1::function", align 8
  %9 = alloca %"class.std::__1::function", align 8
  %10 = bitcast %"class.v8::internal::ZoneMap.1414"* %4 to i8*
  call void @llvm.lifetime.start.p0i8(i64 32, i8* nonnull %10) #16
  %11 = getelementptr inbounds %"class.v8::internal::compiler::LinearScanAllocator", %"class.v8::internal::compiler::LinearScanAllocator"* %0, i64 0, i32 0, i32 0
  %12 = load %"class.v8::internal::compiler::TopTierRegisterAllocationData"*, %"class.v8::internal::compiler::TopTierRegisterAllocationData"** %11, align 8
  %13 = getelementptr inbounds %"class.v8::internal::compiler::TopTierRegisterAllocationData", %"class.v8::internal::compiler::TopTierRegisterAllocationData"* %12, i64 0, i32 1
  %14 = bitcast %"class.v8::internal::Zone"** %13 to i64*
  %15 = load i64, i64* %14, align 8
  %16 = getelementptr inbounds %"class.v8::internal::ZoneMap.1414", %"class.v8::internal::ZoneMap.1414"* %4, i64 0, i32 0, i32 0, i32 0
  %17 = getelementptr inbounds %"class.v8::internal::ZoneMap.1414", %"class.v8::internal::ZoneMap.1414"* %4, i64 0, i32 0, i32 0, i32 1, i32 1
  %18 = bitcast %"struct.std::__1::__compressed_pair_elem.1418"* %17 to i64*
  %19 = getelementptr inbounds %"class.v8::internal::ZoneMap.1414", %"class.v8::internal::ZoneMap.1414"* %4, i64 0, i32 0, i32 0, i32 1
  %20 = bitcast %"class.std::__1::__compressed_pair.1417"* %19 to i64*
  store i64 0, i64* %20, align 8
  store i64 %15, i64* %18, align 8
  %21 = getelementptr inbounds %"class.v8::internal::ZoneMap.1414", %"class.v8::internal::ZoneMap.1414"* %4, i64 0, i32 0, i32 0, i32 2, i32 0, i32 0
  store i64 0, i64* %21, align 8
  %22 = getelementptr inbounds %"class.v8::internal::ZoneMap.1414", %"class.v8::internal::ZoneMap.1414"* %4, i64 0, i32 0, i32 0, i32 1, i32 0, i32 0
  store %"class.std::__1::__tree_end_node"* %22, %"class.std::__1::__tree_end_node"** %16, align 8
  %23 = getelementptr inbounds %"class.v8::internal::compiler::InstructionBlock", %"class.v8::internal::compiler::InstructionBlock"* %1, i64 0, i32 1, i32 0, i32 0, i32 0
  %24 = load %"class.v8::internal::compiler::RpoNumber"*, %"class.v8::internal::compiler::RpoNumber"** %23, align 8
  %25 = getelementptr inbounds %"class.v8::internal::compiler::InstructionBlock", %"class.v8::internal::compiler::InstructionBlock"* %1, i64 0, i32 1, i32 0, i32 0, i32 1
  %26 = load %"class.v8::internal::compiler::RpoNumber"*, %"class.v8::internal::compiler::RpoNumber"** %25, align 8
  %27 = icmp eq %"class.v8::internal::compiler::RpoNumber"* %24, %26
  br i1 %27, label %28, label %31

28:                                               ; preds = %3
  %29 = ptrtoint %"class.v8::internal::compiler::RpoNumber"* %24 to i64
  %30 = ptrtoint %"class.v8::internal::compiler::RpoNumber"* %26 to i64
  br label %49

31:                                               ; preds = %3
  %32 = getelementptr inbounds %"class.v8::internal::compiler::InstructionBlock", %"class.v8::internal::compiler::InstructionBlock"* %1, i64 0, i32 4, i32 0
  %33 = getelementptr inbounds %"class.v8::internal::compiler::InstructionBlock", %"class.v8::internal::compiler::InstructionBlock"* %1, i64 0, i32 10
  %34 = bitcast %"class.std::__1::__tree_end_node"* %22 to %"class.std::__1::__tree_node.1506"**
  %35 = bitcast [32 x i32]* %5 to i8*
  %36 = getelementptr inbounds %"class.v8::internal::ZoneMap.1414", %"class.v8::internal::ZoneMap.1414"* %4, i64 0, i32 0, i32 0, i32 1, i32 0, i32 0, i32 0
  %37 = getelementptr inbounds %"class.std::__1::__tree_end_node", %"class.std::__1::__tree_end_node"* %22, i64 0, i32 0
  %38 = getelementptr inbounds %"class.v8::internal::ZoneMap.1414", %"class.v8::internal::ZoneMap.1414"* %4, i64 0, i32 0, i32 0, i32 1, i32 1, i32 0, i32 0
  %39 = bitcast %"class.v8::internal::ZoneMap.1414"* %4 to i64*
  br label %247

40:                                               ; preds = %432
  %41 = bitcast %"class.v8::internal::compiler::RpoNumber"** %25 to i64*
  %42 = load i64, i64* %41, align 8
  %43 = getelementptr inbounds %"class.v8::internal::compiler::InstructionBlock", %"class.v8::internal::compiler::InstructionBlock"* %1, i64 0, i32 1, i32 0
  %44 = bitcast %"class.std::__1::vector.38"* %43 to i64*
  %45 = load i64, i64* %44, align 8
  %46 = bitcast %"class.v8::internal::Zone"** %38 to i64*
  %47 = load i64, i64* %46, align 8
  %48 = load %"class.std::__1::__tree_end_node"*, %"class.std::__1::__tree_end_node"** %16, align 8
  br label %49

49:                                               ; preds = %28, %40
  %50 = phi %"class.std::__1::__tree_end_node"* [ %22, %28 ], [ %48, %40 ]
  %51 = phi i64 [ %15, %28 ], [ %47, %40 ]
  %52 = phi i64 [ %29, %28 ], [ %45, %40 ]
  %53 = phi i64 [ %30, %28 ], [ %42, %40 ]
  %54 = phi i32 [ 0, %28 ], [ %433, %40 ]
  %55 = sub i64 %53, %52
  %56 = ashr exact i64 %55, 2
  %57 = sext i32 %54 to i64
  %58 = sub nsw i64 2, %57
  %59 = add nsw i64 %58, %56
  %60 = lshr i64 %59, 1
  %61 = getelementptr inbounds [32 x i8], [32 x i8]* %6, i64 0, i64 0
  call void @llvm.lifetime.start.p0i8(i64 32, i8* nonnull %61) #16
  call void @llvm.memset.p0i8.i64(i8* nonnull align 16 %61, i8 0, i64 32, i1 false)
  %62 = bitcast %class.anon* %7 to i8*
  call void @llvm.lifetime.start.p0i8(i64 48, i8* nonnull %62) #16
  %63 = getelementptr inbounds %class.anon, %class.anon* %7, i64 0, i32 0
  store %"class.v8::internal::compiler::LinearScanAllocator"* %0, %"class.v8::internal::compiler::LinearScanAllocator"** %63, align 8
  %64 = getelementptr inbounds %class.anon, %class.anon* %7, i64 0, i32 1
  %65 = getelementptr %"class.v8::internal::ZoneMap.1414", %"class.v8::internal::ZoneMap.1414"* %64, i64 0, i32 0, i32 0, i32 0
  %66 = getelementptr inbounds %class.anon, %class.anon* %7, i64 0, i32 1, i32 0, i32 0, i32 1, i32 0, i32 0, i32 0
  %67 = getelementptr inbounds %class.anon, %class.anon* %7, i64 0, i32 1, i32 0, i32 0, i32 1, i32 1
  %68 = bitcast %"struct.std::__1::__compressed_pair_elem.1418"* %67 to i64*
  %69 = getelementptr inbounds %class.anon, %class.anon* %7, i64 0, i32 1, i32 0, i32 0, i32 1
  %70 = bitcast %"class.std::__1::__compressed_pair.1417"* %69 to i64*
  store i64 0, i64* %70, align 8
  store i64 %51, i64* %68, align 8
  %71 = getelementptr inbounds %class.anon, %class.anon* %7, i64 0, i32 1, i32 0, i32 0, i32 2, i32 0, i32 0
  store i64 0, i64* %71, align 8
  %72 = getelementptr inbounds %class.anon, %class.anon* %7, i64 0, i32 1, i32 0, i32 0, i32 1, i32 0, i32 0
  store %"class.std::__1::__tree_end_node"* %72, %"class.std::__1::__tree_end_node"** %65, align 8
  %73 = icmp eq %"class.std::__1::__tree_end_node"* %50, %22
  br i1 %73, label %225, label %74

74:                                               ; preds = %49
  %75 = ptrtoint %"class.std::__1::__tree_end_node"* %72 to i64
  %76 = getelementptr inbounds %"class.std::__1::__tree_end_node", %"class.std::__1::__tree_end_node"* %72, i64 0, i32 0
  %77 = getelementptr inbounds %class.anon, %class.anon* %7, i64 0, i32 1, i32 0, i32 0, i32 1, i32 1, i32 0, i32 0
  %78 = bitcast %"class.v8::internal::ZoneMap.1414"* %64 to i64*
  br label %79

79:                                               ; preds = %222, %74
  %80 = phi %"class.std::__1::__tree_node_base"* [ null, %74 ], [ %224, %222 ]
  %81 = phi %"class.std::__1::__tree_end_node"* [ %72, %74 ], [ %223, %222 ]
  %82 = phi %"class.std::__1::__tree_end_node"* [ %50, %74 ], [ %220, %222 ]
  %83 = getelementptr inbounds %"class.std::__1::__tree_end_node", %"class.std::__1::__tree_end_node"* %82, i64 4
  %84 = bitcast %"class.std::__1::__tree_end_node"* %83 to %"class.v8::internal::compiler::TopLevelLiveRange"**
  %85 = load %"class.v8::internal::compiler::TopLevelLiveRange"*, %"class.v8::internal::compiler::TopLevelLiveRange"** %84, align 8
  %86 = icmp eq %"class.std::__1::__tree_end_node"* %81, %72
  br i1 %86, label %116, label %87

87:                                               ; preds = %79
  %88 = icmp eq %"class.std::__1::__tree_node_base"* %80, null
  br i1 %88, label %94, label %89

89:                                               ; preds = %87, %89
  %90 = phi %"class.std::__1::__tree_node_base"* [ %92, %89 ], [ %80, %87 ]
  %91 = getelementptr inbounds %"class.std::__1::__tree_node_base", %"class.std::__1::__tree_node_base"* %90, i64 0, i32 1
  %92 = load %"class.std::__1::__tree_node_base"*, %"class.std::__1::__tree_node_base"** %91, align 8
  %93 = icmp eq %"class.std::__1::__tree_node_base"* %92, null
  br i1 %93, label %105, label %89

94:                                               ; preds = %87, %94
  %95 = phi %"class.std::__1::__tree_end_node"* [ %99, %94 ], [ %72, %87 ]
  %96 = bitcast %"class.std::__1::__tree_end_node"* %95 to %"class.std::__1::__tree_node_base"*
  %97 = getelementptr inbounds %"class.std::__1::__tree_end_node", %"class.std::__1::__tree_end_node"* %95, i64 2
  %98 = bitcast %"class.std::__1::__tree_end_node"* %97 to %"class.std::__1::__tree_end_node"**
  %99 = load %"class.std::__1::__tree_end_node"*, %"class.std::__1::__tree_end_node"** %98, align 8
  %100 = getelementptr inbounds %"class.std::__1::__tree_end_node", %"class.std::__1::__tree_end_node"* %99, i64 0, i32 0
  %101 = load %"class.std::__1::__tree_node_base"*, %"class.std::__1::__tree_node_base"** %100, align 8
  %102 = icmp eq %"class.std::__1::__tree_node_base"* %101, %96
  br i1 %102, label %94, label %103

103:                                              ; preds = %94
  %104 = bitcast %"class.std::__1::__tree_end_node"* %99 to %"class.std::__1::__tree_node_base"*
  br label %105

105:                                              ; preds = %89, %103
  %106 = phi %"class.std::__1::__tree_node_base"* [ %104, %103 ], [ %90, %89 ]
  %107 = ptrtoint %"class.std::__1::__tree_node_base"* %106 to i64
  %108 = getelementptr inbounds %"class.std::__1::__tree_node_base", %"class.std::__1::__tree_node_base"* %106, i64 1
  %109 = getelementptr %"class.v8::internal::compiler::TopLevelLiveRange", %"class.v8::internal::compiler::TopLevelLiveRange"* %85, i64 0, i32 1
  %110 = load i32, i32* %109, align 4
  %111 = bitcast %"class.std::__1::__tree_node_base"* %108 to %"class.v8::internal::compiler::TopLevelLiveRange"**
  %112 = load %"class.v8::internal::compiler::TopLevelLiveRange"*, %"class.v8::internal::compiler::TopLevelLiveRange"** %111, align 8
  %113 = getelementptr %"class.v8::internal::compiler::TopLevelLiveRange", %"class.v8::internal::compiler::TopLevelLiveRange"* %112, i64 0, i32 1
  %114 = load i32, i32* %113, align 4
  %115 = icmp slt i32 %114, %110
  br i1 %115, label %116, label %122

116:                                              ; preds = %105, %79
  %117 = phi i64 [ %107, %105 ], [ %75, %79 ]
  %118 = icmp eq %"class.std::__1::__tree_node_base"* %80, null
  br i1 %118, label %151, label %119

119:                                              ; preds = %116
  %120 = inttoptr i64 %117 to %"class.std::__1::__tree_node_base"*
  %121 = getelementptr inbounds %"class.std::__1::__tree_node_base", %"class.std::__1::__tree_node_base"* %120, i64 0, i32 1
  br label %151

122:                                              ; preds = %105
  br i1 %88, label %151, label %123

123:                                              ; preds = %122, %144
  %124 = phi %"class.std::__1::__tree_node_base"* [ %145, %144 ], [ %80, %122 ]
  %125 = phi %"class.std::__1::__tree_node_base"** [ %146, %144 ], [ %66, %122 ]
  %126 = getelementptr inbounds %"class.std::__1::__tree_node_base", %"class.std::__1::__tree_node_base"* %124, i64 1
  %127 = bitcast %"class.std::__1::__tree_node_base"* %126 to %"class.v8::internal::compiler::TopLevelLiveRange"**
  %128 = load %"class.v8::internal::compiler::TopLevelLiveRange"*, %"class.v8::internal::compiler::TopLevelLiveRange"** %127, align 8
  %129 = getelementptr %"class.v8::internal::compiler::TopLevelLiveRange", %"class.v8::internal::compiler::TopLevelLiveRange"* %128, i64 0, i32 1
  %130 = load i32, i32* %129, align 4
  %131 = icmp sgt i32 %130, %110
  br i1 %131, label %132, label %138

132:                                              ; preds = %123
  %133 = getelementptr inbounds %"class.std::__1::__tree_node_base", %"class.std::__1::__tree_node_base"* %124, i64 0, i32 0, i32 0
  %134 = load %"class.std::__1::__tree_node_base"*, %"class.std::__1::__tree_node_base"** %133, align 8
  %135 = icmp eq %"class.std::__1::__tree_node_base"* %134, null
  br i1 %135, label %136, label %144

136:                                              ; preds = %132
  %137 = ptrtoint %"class.std::__1::__tree_node_base"* %124 to i64
  br label %151

138:                                              ; preds = %123
  %139 = icmp slt i32 %130, %110
  br i1 %139, label %140, label %149

140:                                              ; preds = %138
  %141 = getelementptr inbounds %"class.std::__1::__tree_node_base", %"class.std::__1::__tree_node_base"* %124, i64 0, i32 1
  %142 = load %"class.std::__1::__tree_node_base"*, %"class.std::__1::__tree_node_base"** %141, align 8
  %143 = icmp eq %"class.std::__1::__tree_node_base"* %142, null
  br i1 %143, label %147, label %144

144:                                              ; preds = %140, %132
  %145 = phi %"class.std::__1::__tree_node_base"* [ %134, %132 ], [ %142, %140 ]
  %146 = phi %"class.std::__1::__tree_node_base"** [ %133, %132 ], [ %141, %140 ]
  br label %123

147:                                              ; preds = %140
  %148 = ptrtoint %"class.std::__1::__tree_node_base"* %124 to i64
  br label %151

149:                                              ; preds = %138
  %150 = ptrtoint %"class.std::__1::__tree_node_base"* %124 to i64
  br label %151

151:                                              ; preds = %149, %147, %136, %122, %119, %116
  %152 = phi i64 [ %117, %119 ], [ %137, %136 ], [ %148, %147 ], [ %150, %149 ], [ %75, %116 ], [ %75, %122 ]
  %153 = phi %"class.std::__1::__tree_node_base"** [ %121, %119 ], [ %133, %136 ], [ %141, %147 ], [ %125, %149 ], [ %76, %116 ], [ %76, %122 ]
  %154 = bitcast %"class.std::__1::__tree_node_base"** %153 to %"class.std::__1::__tree_node.1506"**
  %155 = load %"class.std::__1::__tree_node.1506"*, %"class.std::__1::__tree_node.1506"** %154, align 8
  %156 = icmp eq %"class.std::__1::__tree_node.1506"* %155, null
  br i1 %156, label %157, label %191

157:                                              ; preds = %151
  %158 = load %"class.v8::internal::Zone"*, %"class.v8::internal::Zone"** %77, align 8, !noalias !134
  %159 = getelementptr inbounds %"class.v8::internal::Zone", %"class.v8::internal::Zone"* %158, i64 0, i32 2
  %160 = load i64, i64* %159, align 8, !noalias !134
  %161 = getelementptr inbounds %"class.v8::internal::Zone", %"class.v8::internal::Zone"* %158, i64 0, i32 3
  %162 = load i64, i64* %161, align 8, !noalias !134
  %163 = sub i64 %162, %160
  %164 = icmp ult i64 %163, 176
  br i1 %164, label %165, label %167, !prof !2

165:                                              ; preds = %157
  %166 = call i64 @_ZN2v88internal4Zone9NewExpandEm(%"class.v8::internal::Zone"* %158, i64 176) #16, !noalias !134
  br label %169

167:                                              ; preds = %157
  %168 = add i64 %160, 176
  store i64 %168, i64* %159, align 8, !noalias !134
  br label %169

169:                                              ; preds = %167, %165
  %170 = phi i64 [ %166, %165 ], [ %160, %167 ]
  %171 = inttoptr i64 %170 to %"class.std::__1::__tree_node.1506"*
  %172 = getelementptr inbounds %"class.std::__1::__tree_node.1506", %"class.std::__1::__tree_node.1506"* %171, i64 0, i32 1, i32 0
  %173 = bitcast %"struct.std::__1::pair.1430"* %172 to i8*
  %174 = bitcast %"class.std::__1::__tree_end_node"* %83 to i8*
  call void @llvm.memcpy.p0i8.p0i8.i64(i8* align 8 %173, i8* align 8 %174, i64 144, i1 false) #16, !noalias !134
  %175 = inttoptr i64 %152 to %"class.std::__1::__tree_end_node"*
  %176 = inttoptr i64 %170 to %"class.std::__1::__tree_node_base"*
  %177 = getelementptr inbounds %"class.std::__1::__tree_node_base", %"class.std::__1::__tree_node_base"* %176, i64 0, i32 2
  %178 = inttoptr i64 %170 to i8*
  call void @llvm.memset.p0i8.i64(i8* align 8 %178, i8 0, i64 16, i1 false) #16
  store %"class.std::__1::__tree_end_node"* %175, %"class.std::__1::__tree_end_node"** %177, align 8
  store %"class.std::__1::__tree_node_base"* %176, %"class.std::__1::__tree_node_base"** %153, align 8
  %179 = load %"class.std::__1::__tree_end_node"*, %"class.std::__1::__tree_end_node"** %65, align 8
  %180 = getelementptr inbounds %"class.std::__1::__tree_end_node", %"class.std::__1::__tree_end_node"* %179, i64 0, i32 0
  %181 = load %"class.std::__1::__tree_node_base"*, %"class.std::__1::__tree_node_base"** %180, align 8
  %182 = icmp eq %"class.std::__1::__tree_node_base"* %181, null
  br i1 %182, label %186, label %183

183:                                              ; preds = %169
  %184 = ptrtoint %"class.std::__1::__tree_node_base"* %181 to i64
  store i64 %184, i64* %78, align 8
  %185 = load %"class.std::__1::__tree_node_base"*, %"class.std::__1::__tree_node_base"** %153, align 8
  br label %186

186:                                              ; preds = %183, %169
  %187 = phi %"class.std::__1::__tree_node_base"* [ %176, %169 ], [ %185, %183 ]
  %188 = load %"class.std::__1::__tree_node_base"*, %"class.std::__1::__tree_node_base"** %66, align 8
  call void @_ZNSt3__127__tree_balance_after_insertIPNS_16__tree_node_baseIPvEEEEvT_S5_(%"class.std::__1::__tree_node_base"* %188, %"class.std::__1::__tree_node_base"* %187) #16
  %189 = load i64, i64* %71, align 8
  %190 = add i64 %189, 1
  store i64 %190, i64* %71, align 8
  br label %191

191:                                              ; preds = %186, %151
  %192 = getelementptr inbounds %"class.std::__1::__tree_end_node", %"class.std::__1::__tree_end_node"* %82, i64 1, i32 0
  %193 = load %"class.std::__1::__tree_node_base"*, %"class.std::__1::__tree_node_base"** %192, align 8
  %194 = icmp eq %"class.std::__1::__tree_node_base"* %193, null
  br i1 %194, label %195, label %203

195:                                              ; preds = %191
  %196 = bitcast %"class.std::__1::__tree_end_node"* %82 to %"class.std::__1::__tree_node_base"*
  %197 = getelementptr inbounds %"class.std::__1::__tree_end_node", %"class.std::__1::__tree_end_node"* %82, i64 2
  %198 = bitcast %"class.std::__1::__tree_end_node"* %197 to %"class.std::__1::__tree_end_node"**
  %199 = load %"class.std::__1::__tree_end_node"*, %"class.std::__1::__tree_end_node"** %198, align 8
  %200 = getelementptr inbounds %"class.std::__1::__tree_end_node", %"class.std::__1::__tree_end_node"* %199, i64 0, i32 0
  %201 = load %"class.std::__1::__tree_node_base"*, %"class.std::__1::__tree_node_base"** %200, align 8
  %202 = icmp eq %"class.std::__1::__tree_node_base"* %201, %196
  br i1 %202, label %219, label %210

203:                                              ; preds = %191, %203
  %204 = phi %"class.std::__1::__tree_node_base"* [ %206, %203 ], [ %193, %191 ]
  %205 = getelementptr inbounds %"class.std::__1::__tree_node_base", %"class.std::__1::__tree_node_base"* %204, i64 0, i32 0, i32 0
  %206 = load %"class.std::__1::__tree_node_base"*, %"class.std::__1::__tree_node_base"** %205, align 8
  %207 = icmp eq %"class.std::__1::__tree_node_base"* %206, null
  br i1 %207, label %208, label %203

208:                                              ; preds = %203
  %209 = getelementptr inbounds %"class.std::__1::__tree_node_base", %"class.std::__1::__tree_node_base"* %204, i64 0, i32 0
  br label %219

210:                                              ; preds = %195, %210
  %211 = phi %"class.std::__1::__tree_end_node"** [ %214, %210 ], [ %198, %195 ]
  %212 = bitcast %"class.std::__1::__tree_end_node"** %211 to %"class.std::__1::__tree_node_base"**
  %213 = load %"class.std::__1::__tree_node_base"*, %"class.std::__1::__tree_node_base"** %212, align 8
  %214 = getelementptr inbounds %"class.std::__1::__tree_node_base", %"class.std::__1::__tree_node_base"* %213, i64 0, i32 2
  %215 = load %"class.std::__1::__tree_end_node"*, %"class.std::__1::__tree_end_node"** %214, align 8
  %216 = getelementptr inbounds %"class.std::__1::__tree_end_node", %"class.std::__1::__tree_end_node"* %215, i64 0, i32 0
  %217 = load %"class.std::__1::__tree_node_base"*, %"class.std::__1::__tree_node_base"** %216, align 8
  %218 = icmp eq %"class.std::__1::__tree_node_base"* %217, %213
  br i1 %218, label %219, label %210

219:                                              ; preds = %210, %208, %195
  %220 = phi %"class.std::__1::__tree_end_node"* [ %209, %208 ], [ %199, %195 ], [ %215, %210 ]
  %221 = icmp eq %"class.std::__1::__tree_end_node"* %220, %22
  br i1 %221, label %225, label %222

222:                                              ; preds = %219
  %223 = load %"class.std::__1::__tree_end_node"*, %"class.std::__1::__tree_end_node"** %65, align 8
  %224 = load %"class.std::__1::__tree_node_base"*, %"class.std::__1::__tree_node_base"** %76, align 8
  br label %79

225:                                              ; preds = %219, %49
  %226 = getelementptr inbounds %class.anon, %class.anon* %7, i64 0, i32 2
  store i64 %60, i64* %226, align 8
  %227 = getelementptr inbounds %"class.std::__1::function", %"class.std::__1::function"* %8, i64 0, i32 0, i32 1, i32 0
  %228 = getelementptr inbounds %"class.std::__1::function", %"class.std::__1::function"* %8, i64 0, i32 0, i32 2
  store i1 (%"union.std::__1::__function::__policy_storage"*, %"class.v8::internal::compiler::TopLevelLiveRange"*)* @"_ZNSt3__110__function16__policy_invokerIFbPN2v88internal8compiler17TopLevelLiveRangeEEE11__call_implINS0_20__default_alloc_funcIZNS4_19LinearScanAllocator32ComputeStateFromManyPredecessorsEPNS4_16InstructionBlockEPNS3_16ZoneUnorderedSetINSB_17RangeWithRegisterENSF_4HashENSF_6EqualsEEEE3$_1S7_EEEEbPKNS0_16__policy_storageES6_", i1 (%"union.std::__1::__function::__policy_storage"*, %"class.v8::internal::compiler::TopLevelLiveRange"*)** %227, align 8
  store %"struct.std::__1::__function::__policy"* @"_ZZNSt3__110__function8__policy15__choose_policyINS0_20__default_alloc_funcIZN2v88internal8compiler19LinearScanAllocator32ComputeStateFromManyPredecessorsEPNS6_16InstructionBlockEPNS5_16ZoneUnorderedSetINS7_17RangeWithRegisterENSB_4HashENSB_6EqualsEEEE3$_1FbPNS6_17TopLevelLiveRangeEEEEEEPKS1_NS_17integral_constantIbLb1EEEE9__policy_", %"struct.std::__1::__function::__policy"** %228, align 8
  call fastcc void @"_ZZN2v88internal8compiler19LinearScanAllocator32ComputeStateFromManyPredecessorsEPNS1_16InstructionBlockEPNS0_16ZoneUnorderedSetINS2_17RangeWithRegisterENS6_4HashENS6_6EqualsEEEENK3$_0clENSt3__18functionIFbPNS1_17TopLevelLiveRangeEEEESA_Pb"(%class.anon* nonnull %7, %"class.std::__1::function"* nonnull %8, %"class.v8::internal::ZoneUnorderedSet"* %2, i8* nonnull %61)
  %229 = load %"struct.std::__1::__function::__policy"*, %"struct.std::__1::__function::__policy"** %228, align 8
  %230 = getelementptr inbounds %"struct.std::__1::__function::__policy", %"struct.std::__1::__function::__policy"* %229, i64 0, i32 1
  %231 = load void (i8*)*, void (i8*)** %230, align 8
  %232 = icmp eq void (i8*)* %231, null
  br i1 %232, label %236, label %233

233:                                              ; preds = %225
  %234 = getelementptr inbounds %"class.std::__1::function", %"class.std::__1::function"* %8, i64 0, i32 0, i32 0, i32 0
  %235 = load i8*, i8** %234, align 8
  call void %231(i8* %235) #16
  br label %236

236:                                              ; preds = %225, %233
  %237 = getelementptr inbounds %"class.std::__1::function", %"class.std::__1::function"* %9, i64 0, i32 0, i32 1, i32 0
  %238 = getelementptr inbounds %"class.std::__1::function", %"class.std::__1::function"* %9, i64 0, i32 0, i32 2
  store i1 (%"union.std::__1::__function::__policy_storage"*, %"class.v8::internal::compiler::TopLevelLiveRange"*)* @"_ZNSt3__110__function16__policy_invokerIFbPN2v88internal8compiler17TopLevelLiveRangeEEE11__call_implINS0_20__default_alloc_funcIZNS4_19LinearScanAllocator32ComputeStateFromManyPredecessorsEPNS4_16InstructionBlockEPNS3_16ZoneUnorderedSetINSB_17RangeWithRegisterENSF_4HashENSF_6EqualsEEEE3$_2S7_EEEEbPKNS0_16__policy_storageES6_", i1 (%"union.std::__1::__function::__policy_storage"*, %"class.v8::internal::compiler::TopLevelLiveRange"*)** %237, align 8
  store %"struct.std::__1::__function::__policy"* @"_ZZNSt3__110__function8__policy15__choose_policyINS0_20__default_alloc_funcIZN2v88internal8compiler19LinearScanAllocator32ComputeStateFromManyPredecessorsEPNS6_16InstructionBlockEPNS5_16ZoneUnorderedSetINS7_17RangeWithRegisterENSB_4HashENSB_6EqualsEEEE3$_2FbPNS6_17TopLevelLiveRangeEEEEEEPKS1_NS_17integral_constantIbLb1EEEE9__policy_", %"struct.std::__1::__function::__policy"** %238, align 8
  call fastcc void @"_ZZN2v88internal8compiler19LinearScanAllocator32ComputeStateFromManyPredecessorsEPNS1_16InstructionBlockEPNS0_16ZoneUnorderedSetINS2_17RangeWithRegisterENS6_4HashENS6_6EqualsEEEENK3$_0clENSt3__18functionIFbPNS1_17TopLevelLiveRangeEEEESA_Pb"(%class.anon* nonnull %7, %"class.std::__1::function"* nonnull %9, %"class.v8::internal::ZoneUnorderedSet"* %2, i8* nonnull %61)
  %239 = load %"struct.std::__1::__function::__policy"*, %"struct.std::__1::__function::__policy"** %238, align 8
  %240 = getelementptr inbounds %"struct.std::__1::__function::__policy", %"struct.std::__1::__function::__policy"* %239, i64 0, i32 1
  %241 = load void (i8*)*, void (i8*)** %240, align 8
  %242 = icmp eq void (i8*)* %241, null
  br i1 %242, label %246, label %243

243:                                              ; preds = %236
  %244 = getelementptr inbounds %"class.std::__1::function", %"class.std::__1::function"* %9, i64 0, i32 0, i32 0, i32 0
  %245 = load i8*, i8** %244, align 8
  call void %241(i8* %245) #16
  br label %246

246:                                              ; preds = %236, %243
  call void @llvm.lifetime.end.p0i8(i64 48, i8* nonnull %62) #16
  call void @llvm.lifetime.end.p0i8(i64 32, i8* nonnull %61) #16
  call void @llvm.lifetime.end.p0i8(i64 32, i8* nonnull %10) #16
  ret void

247:                                              ; preds = %31, %432
  %248 = phi i32 [ 0, %31 ], [ %433, %432 ]
  %249 = phi %"class.v8::internal::compiler::RpoNumber"* [ %24, %31 ], [ %434, %432 ]
  %250 = getelementptr inbounds %"class.v8::internal::compiler::RpoNumber", %"class.v8::internal::compiler::RpoNumber"* %249, i64 0, i32 0
  %251 = load i32, i32* %250, align 4
  %252 = load i32, i32* %32, align 4
  %253 = icmp sgt i32 %252, %251
  br i1 %253, label %254, label %284

254:                                              ; preds = %247
  %255 = load i8, i8* %33, align 4, !range !3
  %256 = icmp eq i8 %255, 0
  br i1 %256, label %259, label %257

257:                                              ; preds = %254
  %258 = sext i32 %251 to i64
  br label %286

259:                                              ; preds = %254
  %260 = load %"class.v8::internal::compiler::TopTierRegisterAllocationData"*, %"class.v8::internal::compiler::TopTierRegisterAllocationData"** %11, align 8
  %261 = getelementptr inbounds %"class.v8::internal::compiler::TopTierRegisterAllocationData", %"class.v8::internal::compiler::TopTierRegisterAllocationData"* %260, i64 0, i32 3
  %262 = load %"class.v8::internal::compiler::InstructionSequence"*, %"class.v8::internal::compiler::InstructionSequence"** %261, align 8
  %263 = getelementptr inbounds %"class.v8::internal::compiler::InstructionSequence", %"class.v8::internal::compiler::InstructionSequence"* %262, i64 0, i32 2
  %264 = bitcast %"class.v8::internal::ZoneVector.1170"** %263 to %"class.std::__1::vector.1171"**
  %265 = load %"class.std::__1::vector.1171"*, %"class.std::__1::vector.1171"** %264, align 8
  %266 = sext i32 %251 to i64
  %267 = getelementptr inbounds %"class.std::__1::vector.1171", %"class.std::__1::vector.1171"* %265, i64 0, i32 0, i32 1
  %268 = bitcast %"class.v8::internal::compiler::InstructionBlock"*** %267 to i64*
  %269 = load i64, i64* %268, align 8
  %270 = bitcast %"class.std::__1::vector.1171"* %265 to i64*
  %271 = load i64, i64* %270, align 8
  %272 = sub i64 %269, %271
  %273 = ashr exact i64 %272, 3
  %274 = icmp ugt i64 %273, %266
  br i1 %274, label %277, label %275

275:                                              ; preds = %259
  %276 = bitcast %"class.std::__1::vector.1171"* %265 to %"class.std::__1::__vector_base_common"*
  call void @_ZNKSt3__120__vector_base_commonILb1EE20__throw_out_of_rangeEv(%"class.std::__1::__vector_base_common"* %276) #17
  unreachable

277:                                              ; preds = %259
  %278 = inttoptr i64 %271 to %"class.v8::internal::compiler::InstructionBlock"**
  %279 = getelementptr inbounds %"class.v8::internal::compiler::InstructionBlock"*, %"class.v8::internal::compiler::InstructionBlock"** %278, i64 %266
  %280 = load %"class.v8::internal::compiler::InstructionBlock"*, %"class.v8::internal::compiler::InstructionBlock"** %279, align 8
  %281 = getelementptr inbounds %"class.v8::internal::compiler::InstructionBlock", %"class.v8::internal::compiler::InstructionBlock"* %280, i64 0, i32 10
  %282 = load i8, i8* %281, align 4, !range !3
  %283 = icmp eq i8 %282, 0
  br i1 %283, label %286, label %284

284:                                              ; preds = %247, %277
  %285 = add nsw i32 %248, 1
  br label %432

286:                                              ; preds = %257, %277
  %287 = phi i64 [ %258, %257 ], [ %266, %277 ]
  %288 = load %"class.v8::internal::compiler::TopTierRegisterAllocationData"*, %"class.v8::internal::compiler::TopTierRegisterAllocationData"** %11, align 8
  %289 = getelementptr inbounds %"class.v8::internal::compiler::TopTierRegisterAllocationData", %"class.v8::internal::compiler::TopTierRegisterAllocationData"* %288, i64 0, i32 22, i32 0, i32 0, i32 0
  %290 = load %"class.v8::internal::ZoneVector.1309"*, %"class.v8::internal::ZoneVector.1309"** %289, align 8
  %291 = getelementptr inbounds %"class.v8::internal::ZoneVector.1309", %"class.v8::internal::ZoneVector.1309"* %290, i64 %287, i32 0, i32 0, i32 0
  %292 = load %"class.v8::internal::compiler::LiveRange"**, %"class.v8::internal::compiler::LiveRange"*** %291, align 8
  %293 = getelementptr inbounds %"class.v8::internal::ZoneVector.1309", %"class.v8::internal::ZoneVector.1309"* %290, i64 %287, i32 0, i32 0, i32 1
  %294 = load %"class.v8::internal::compiler::LiveRange"**, %"class.v8::internal::compiler::LiveRange"*** %293, align 8
  %295 = icmp eq %"class.v8::internal::compiler::LiveRange"** %292, %294
  br i1 %295, label %432, label %296

296:                                              ; preds = %286, %429
  %297 = phi %"class.v8::internal::compiler::LiveRange"** [ %430, %429 ], [ %292, %286 ]
  %298 = load %"class.v8::internal::compiler::LiveRange"*, %"class.v8::internal::compiler::LiveRange"** %297, align 8
  %299 = getelementptr inbounds %"class.v8::internal::compiler::LiveRange", %"class.v8::internal::compiler::LiveRange"* %298, i64 0, i32 1
  %300 = load i32, i32* %299, align 4
  %301 = and i32 %300, 8064
  %302 = icmp eq i32 %301, 4096
  br i1 %302, label %429, label %303

303:                                              ; preds = %296
  %304 = getelementptr inbounds %"class.v8::internal::compiler::LiveRange", %"class.v8::internal::compiler::LiveRange"* %298, i64 0, i32 5
  %305 = load %"class.v8::internal::compiler::TopLevelLiveRange"*, %"class.v8::internal::compiler::TopLevelLiveRange"** %304, align 8
  %306 = ptrtoint %"class.v8::internal::compiler::TopLevelLiveRange"* %305 to i64
  %307 = load %"class.std::__1::__tree_node.1506"*, %"class.std::__1::__tree_node.1506"** %34, align 8
  %308 = icmp eq %"class.std::__1::__tree_node.1506"* %307, null
  br i1 %308, label %366, label %309

309:                                              ; preds = %303
  %310 = getelementptr %"class.v8::internal::compiler::TopLevelLiveRange", %"class.v8::internal::compiler::TopLevelLiveRange"* %305, i64 0, i32 1
  %311 = load i32, i32* %310, align 4
  br label %312

312:                                              ; preds = %312, %309
  %313 = phi %"class.std::__1::__tree_end_node"* [ %22, %309 ], [ %325, %312 ]
  %314 = phi %"class.std::__1::__tree_node.1506"* [ %307, %309 ], [ %326, %312 ]
  %315 = getelementptr inbounds %"class.std::__1::__tree_node.1506", %"class.std::__1::__tree_node.1506"* %314, i64 0, i32 1, i32 0, i32 0
  %316 = load %"class.v8::internal::compiler::TopLevelLiveRange"*, %"class.v8::internal::compiler::TopLevelLiveRange"** %315, align 8
  %317 = getelementptr %"class.v8::internal::compiler::TopLevelLiveRange", %"class.v8::internal::compiler::TopLevelLiveRange"* %316, i64 0, i32 1
  %318 = load i32, i32* %317, align 4
  %319 = icmp slt i32 %318, %311
  %320 = getelementptr inbounds %"class.std::__1::__tree_node.1506", %"class.std::__1::__tree_node.1506"* %314, i64 0, i32 0, i32 1
  %321 = bitcast %"class.std::__1::__tree_node_base"** %320 to %"class.std::__1::__tree_node.1506"**
  %322 = getelementptr inbounds %"class.std::__1::__tree_node.1506", %"class.std::__1::__tree_node.1506"* %314, i64 0, i32 0, i32 0
  %323 = bitcast %"class.std::__1::__tree_node.1506"* %314 to %"class.std::__1::__tree_node.1506"**
  %324 = select i1 %319, %"class.std::__1::__tree_node.1506"** %321, %"class.std::__1::__tree_node.1506"** %323
  %325 = select i1 %319, %"class.std::__1::__tree_end_node"* %313, %"class.std::__1::__tree_end_node"* %322
  %326 = load %"class.std::__1::__tree_node.1506"*, %"class.std::__1::__tree_node.1506"** %324, align 8
  %327 = icmp eq %"class.std::__1::__tree_node.1506"* %326, null
  br i1 %327, label %328, label %312

328:                                              ; preds = %312
  %329 = icmp eq %"class.std::__1::__tree_end_node"* %325, %22
  br i1 %329, label %337, label %330

330:                                              ; preds = %328
  %331 = getelementptr inbounds %"class.std::__1::__tree_end_node", %"class.std::__1::__tree_end_node"* %325, i64 4
  %332 = bitcast %"class.std::__1::__tree_end_node"* %331 to %"class.v8::internal::compiler::TopLevelLiveRange"**
  %333 = load %"class.v8::internal::compiler::TopLevelLiveRange"*, %"class.v8::internal::compiler::TopLevelLiveRange"** %332, align 8
  %334 = getelementptr %"class.v8::internal::compiler::TopLevelLiveRange", %"class.v8::internal::compiler::TopLevelLiveRange"* %333, i64 0, i32 1
  %335 = load i32, i32* %334, align 4
  %336 = icmp sgt i32 %335, %311
  br i1 %336, label %337, label %414

337:                                              ; preds = %328, %330
  call void @llvm.lifetime.start.p0i8(i64 128, i8* nonnull %35)
  call void @llvm.memset.p0i8.i64(i8* nonnull align 8 %35, i8 0, i64 128, i1 false)
  br label %338

338:                                              ; preds = %362, %337
  %339 = phi %"class.std::__1::__tree_node.1506"* [ %365, %362 ], [ %307, %337 ]
  %340 = phi %"class.std::__1::__tree_node_base"** [ %364, %362 ], [ %36, %337 ]
  %341 = getelementptr inbounds %"class.std::__1::__tree_node.1506", %"class.std::__1::__tree_node.1506"* %339, i64 0, i32 1, i32 0, i32 0
  %342 = load %"class.v8::internal::compiler::TopLevelLiveRange"*, %"class.v8::internal::compiler::TopLevelLiveRange"** %341, align 8
  %343 = getelementptr %"class.v8::internal::compiler::TopLevelLiveRange", %"class.v8::internal::compiler::TopLevelLiveRange"* %342, i64 0, i32 1
  %344 = load i32, i32* %343, align 4
  %345 = icmp sgt i32 %344, %311
  br i1 %345, label %346, label %352

346:                                              ; preds = %338
  %347 = getelementptr inbounds %"class.std::__1::__tree_node.1506", %"class.std::__1::__tree_node.1506"* %339, i64 0, i32 0, i32 0, i32 0
  %348 = load %"class.std::__1::__tree_node_base"*, %"class.std::__1::__tree_node_base"** %347, align 8
  %349 = icmp eq %"class.std::__1::__tree_node_base"* %348, null
  br i1 %349, label %350, label %362

350:                                              ; preds = %346
  %351 = getelementptr inbounds %"class.std::__1::__tree_node.1506", %"class.std::__1::__tree_node.1506"* %339, i64 0, i32 0, i32 0
  br label %367

352:                                              ; preds = %338
  %353 = icmp slt i32 %344, %311
  br i1 %353, label %354, label %360

354:                                              ; preds = %352
  %355 = getelementptr inbounds %"class.std::__1::__tree_node.1506", %"class.std::__1::__tree_node.1506"* %339, i64 0, i32 0, i32 1
  %356 = load %"class.std::__1::__tree_node_base"*, %"class.std::__1::__tree_node_base"** %355, align 8
  %357 = icmp eq %"class.std::__1::__tree_node_base"* %356, null
  br i1 %357, label %358, label %362

358:                                              ; preds = %354
  %359 = getelementptr inbounds %"class.std::__1::__tree_node.1506", %"class.std::__1::__tree_node.1506"* %339, i64 0, i32 0, i32 0
  br label %367

360:                                              ; preds = %352
  %361 = getelementptr inbounds %"class.std::__1::__tree_node.1506", %"class.std::__1::__tree_node.1506"* %339, i64 0, i32 0, i32 0
  br label %367

362:                                              ; preds = %354, %346
  %363 = phi %"class.std::__1::__tree_node_base"* [ %348, %346 ], [ %356, %354 ]
  %364 = phi %"class.std::__1::__tree_node_base"** [ %347, %346 ], [ %355, %354 ]
  %365 = bitcast %"class.std::__1::__tree_node_base"* %363 to %"class.std::__1::__tree_node.1506"*
  br label %338

366:                                              ; preds = %303
  call void @llvm.lifetime.start.p0i8(i64 128, i8* nonnull %35)
  call void @llvm.memset.p0i8.i64(i8* nonnull align 8 %35, i8 0, i64 128, i1 false)
  br label %367

367:                                              ; preds = %366, %360, %358, %350
  %368 = phi %"class.std::__1::__tree_end_node"* [ %351, %350 ], [ %359, %358 ], [ %361, %360 ], [ %22, %366 ]
  %369 = phi %"class.std::__1::__tree_node_base"** [ %347, %350 ], [ %355, %358 ], [ %340, %360 ], [ %37, %366 ]
  %370 = bitcast %"class.std::__1::__tree_node_base"** %369 to %"class.std::__1::__tree_node.1506"**
  %371 = load %"class.std::__1::__tree_node.1506"*, %"class.std::__1::__tree_node.1506"** %370, align 8
  %372 = icmp eq %"class.std::__1::__tree_node.1506"* %371, null
  br i1 %372, label %373, label %403

373:                                              ; preds = %367
  %374 = load %"class.v8::internal::Zone"*, %"class.v8::internal::Zone"** %38, align 8, !noalias !137
  %375 = getelementptr inbounds %"class.v8::internal::Zone", %"class.v8::internal::Zone"* %374, i64 0, i32 2
  %376 = load i64, i64* %375, align 8, !noalias !137
  %377 = getelementptr inbounds %"class.v8::internal::Zone", %"class.v8::internal::Zone"* %374, i64 0, i32 3
  %378 = load i64, i64* %377, align 8, !noalias !137
  %379 = sub i64 %378, %376
  %380 = icmp ult i64 %379, 176
  br i1 %380, label %381, label %383, !prof !2

381:                                              ; preds = %373
  %382 = call i64 @_ZN2v88internal4Zone9NewExpandEm(%"class.v8::internal::Zone"* %374, i64 176) #16, !noalias !137
  br label %385

383:                                              ; preds = %373
  %384 = add i64 %376, 176
  store i64 %384, i64* %375, align 8, !noalias !137
  br label %385

385:                                              ; preds = %383, %381
  %386 = phi i64 [ %382, %381 ], [ %376, %383 ]
  %387 = inttoptr i64 %386 to %"class.std::__1::__tree_node.1506"*
  %388 = getelementptr inbounds %"class.std::__1::__tree_node.1506", %"class.std::__1::__tree_node.1506"* %387, i64 0, i32 1, i32 0
  %389 = bitcast %"struct.std::__1::pair.1430"* %388 to i64*
  store i64 %306, i64* %389, align 8, !noalias !137
  %390 = getelementptr inbounds %"class.std::__1::__tree_node.1506", %"class.std::__1::__tree_node.1506"* %387, i64 0, i32 1, i32 0, i32 1, i32 0
  store i64 1, i64* %390, align 8, !noalias !137
  %391 = getelementptr inbounds %"class.std::__1::__tree_node.1506", %"class.std::__1::__tree_node.1506"* %387, i64 0, i32 1, i32 0, i32 1, i32 1
  %392 = bitcast [32 x i32]* %391 to i8*
  call void @llvm.memcpy.p0i8.p0i8.i64(i8* align 8 %392, i8* nonnull align 8 %35, i64 128, i1 false), !noalias !137
  %393 = inttoptr i64 %386 to %"class.std::__1::__tree_node_base"*
  %394 = getelementptr inbounds %"class.std::__1::__tree_node_base", %"class.std::__1::__tree_node_base"* %393, i64 0, i32 2
  %395 = inttoptr i64 %386 to i8*
  call void @llvm.memset.p0i8.i64(i8* align 8 %395, i8 0, i64 16, i1 false) #16
  store %"class.std::__1::__tree_end_node"* %368, %"class.std::__1::__tree_end_node"** %394, align 8
  store %"class.std::__1::__tree_node_base"* %393, %"class.std::__1::__tree_node_base"** %369, align 8
  %396 = load %"class.std::__1::__tree_end_node"*, %"class.std::__1::__tree_end_node"** %16, align 8
  %397 = getelementptr inbounds %"class.std::__1::__tree_end_node", %"class.std::__1::__tree_end_node"* %396, i64 0, i32 0
  %398 = load %"class.std::__1::__tree_node_base"*, %"class.std::__1::__tree_node_base"** %397, align 8
  %399 = icmp eq %"class.std::__1::__tree_node_base"* %398, null
  br i1 %399, label %404, label %400

400:                                              ; preds = %385
  %401 = ptrtoint %"class.std::__1::__tree_node_base"* %398 to i64
  store i64 %401, i64* %39, align 8
  %402 = load %"class.std::__1::__tree_node_base"*, %"class.std::__1::__tree_node_base"** %369, align 8
  br label %404

403:                                              ; preds = %367
  call void @llvm.lifetime.end.p0i8(i64 128, i8* nonnull %35)
  call void (i8*, ...) @_Z8V8_FatalPKcz(i8* getelementptr inbounds ([18 x i8], [18 x i8]* @.str.1, i64 0, i64 0), i8* getelementptr inbounds ([14 x i8], [14 x i8]* @.str.73, i64 0, i64 0)) #17
  unreachable

404:                                              ; preds = %400, %385
  %405 = phi %"class.std::__1::__tree_node_base"* [ %393, %385 ], [ %402, %400 ]
  %406 = load %"class.std::__1::__tree_node_base"*, %"class.std::__1::__tree_node_base"** %36, align 8
  call void @_ZNSt3__127__tree_balance_after_insertIPNS_16__tree_node_baseIPvEEEEvT_S5_(%"class.std::__1::__tree_node_base"* %406, %"class.std::__1::__tree_node_base"* %405) #16
  %407 = load i64, i64* %21, align 8
  %408 = add i64 %407, 1
  store i64 %408, i64* %21, align 8
  call void @llvm.lifetime.end.p0i8(i64 128, i8* nonnull %35)
  %409 = load i32, i32* %299, align 4
  %410 = lshr i32 %409, 7
  %411 = and i32 %410, 63
  %412 = zext i32 %411 to i64
  %413 = getelementptr inbounds %"class.std::__1::__tree_node.1506", %"class.std::__1::__tree_node.1506"* %387, i64 0, i32 1, i32 0, i32 1, i32 1, i64 %412
  br label %425

414:                                              ; preds = %330
  %415 = bitcast %"class.std::__1::__tree_end_node"* %331 to %"struct.std::__1::pair.1430"*
  %416 = getelementptr inbounds %"class.std::__1::__tree_end_node", %"class.std::__1::__tree_end_node"* %325, i64 5
  %417 = bitcast %"class.std::__1::__tree_end_node"* %416 to i64*
  %418 = load i64, i64* %417, align 8
  %419 = add i64 %418, 1
  store i64 %419, i64* %417, align 8
  %420 = load i32, i32* %299, align 4
  %421 = lshr i32 %420, 7
  %422 = and i32 %421, 63
  %423 = zext i32 %422 to i64
  %424 = getelementptr inbounds %"struct.std::__1::pair.1430", %"struct.std::__1::pair.1430"* %415, i64 0, i32 1, i32 1, i64 %423
  br label %425

425:                                              ; preds = %414, %404
  %426 = phi i32* [ %413, %404 ], [ %424, %414 ]
  %427 = load i32, i32* %426, align 4
  %428 = add nsw i32 %427, 1
  store i32 %428, i32* %426, align 4
  br label %429

429:                                              ; preds = %425, %296
  %430 = getelementptr inbounds %"class.v8::internal::compiler::LiveRange"*, %"class.v8::internal::compiler::LiveRange"** %297, i64 1
  %431 = icmp eq %"class.v8::internal::compiler::LiveRange"** %430, %294
  br i1 %431, label %432, label %296

432:                                              ; preds = %429, %286, %284
  %433 = phi i32 [ %285, %284 ], [ %248, %286 ], [ %248, %429 ]
  %434 = getelementptr inbounds %"class.v8::internal::compiler::RpoNumber", %"class.v8::internal::compiler::RpoNumber"* %249, i64 1
  %435 = icmp eq %"class.v8::internal::compiler::RpoNumber"* %434, %26
  br i1 %435, label %40, label %247
}

; Function Attrs: nounwind ssp uwtable
define hidden zeroext i1 @_ZN2v88internal8compiler19LinearScanAllocator27ConsiderBlockForControlFlowEPNS1_16InstructionBlockENS1_9RpoNumberE(%"class.v8::internal::compiler::LinearScanAllocator"* nocapture readonly, %"class.v8::internal::compiler::InstructionBlock"* nocapture readonly, i32) local_unnamed_addr #0 align 2 {
  %4 = getelementptr inbounds %"class.v8::internal::compiler::InstructionBlock", %"class.v8::internal::compiler::InstructionBlock"* %1, i64 0, i32 4, i32 0
  %5 = load i32, i32* %4, align 4
  %6 = icmp sgt i32 %5, %2
  br i1 %6, label %7, label %37

7:                                                ; preds = %3
  %8 = getelementptr inbounds %"class.v8::internal::compiler::InstructionBlock", %"class.v8::internal::compiler::InstructionBlock"* %1, i64 0, i32 10
  %9 = load i8, i8* %8, align 4, !range !3
  %10 = icmp eq i8 %9, 0
  br i1 %10, label %11, label %37

11:                                               ; preds = %7
  %12 = getelementptr inbounds %"class.v8::internal::compiler::LinearScanAllocator", %"class.v8::internal::compiler::LinearScanAllocator"* %0, i64 0, i32 0, i32 0
  %13 = load %"class.v8::internal::compiler::TopTierRegisterAllocationData"*, %"class.v8::internal::compiler::TopTierRegisterAllocationData"** %12, align 8
  %14 = getelementptr inbounds %"class.v8::internal::compiler::TopTierRegisterAllocationData", %"class.v8::internal::compiler::TopTierRegisterAllocationData"* %13, i64 0, i32 3
  %15 = load %"class.v8::internal::compiler::InstructionSequence"*, %"class.v8::internal::compiler::InstructionSequence"** %14, align 8
  %16 = getelementptr inbounds %"class.v8::internal::compiler::InstructionSequence", %"class.v8::internal::compiler::InstructionSequence"* %15, i64 0, i32 2
  %17 = bitcast %"class.v8::internal::ZoneVector.1170"** %16 to %"class.std::__1::vector.1171"**
  %18 = load %"class.std::__1::vector.1171"*, %"class.std::__1::vector.1171"** %17, align 8
  %19 = sext i32 %2 to i64
  %20 = getelementptr inbounds %"class.std::__1::vector.1171", %"class.std::__1::vector.1171"* %18, i64 0, i32 0, i32 1
  %21 = bitcast %"class.v8::internal::compiler::InstructionBlock"*** %20 to i64*
  %22 = load i64, i64* %21, align 8
  %23 = bitcast %"class.std::__1::vector.1171"* %18 to i64*
  %24 = load i64, i64* %23, align 8
  %25 = sub i64 %22, %24
  %26 = ashr exact i64 %25, 3
  %27 = icmp ugt i64 %26, %19
  br i1 %27, label %30, label %28

28:                                               ; preds = %11
  %29 = bitcast %"class.std::__1::vector.1171"* %18 to %"class.std::__1::__vector_base_common"*
  tail call void @_ZNKSt3__120__vector_base_commonILb1EE20__throw_out_of_rangeEv(%"class.std::__1::__vector_base_common"* %29) #17
  unreachable

30:                                               ; preds = %11
  %31 = inttoptr i64 %24 to %"class.v8::internal::compiler::InstructionBlock"**
  %32 = getelementptr inbounds %"class.v8::internal::compiler::InstructionBlock"*, %"class.v8::internal::compiler::InstructionBlock"** %31, i64 %19
  %33 = load %"class.v8::internal::compiler::InstructionBlock"*, %"class.v8::internal::compiler::InstructionBlock"** %32, align 8
  %34 = getelementptr inbounds %"class.v8::internal::compiler::InstructionBlock", %"class.v8::internal::compiler::InstructionBlock"* %33, i64 0, i32 10
  %35 = load i8, i8* %34, align 4, !range !3
  %36 = icmp eq i8 %35, 0
  br label %37

37:                                               ; preds = %7, %30, %3
  %38 = phi i1 [ false, %3 ], [ true, %7 ], [ %36, %30 ]
  ret i1 %38
}

; Function Attrs: argmemonly nounwind
declare void @llvm.memset.p0i8.i64(i8* nocapture writeonly, i8, i64, i1 immarg) #1

; Function Attrs: inlinehint nounwind ssp uwtable
define internal fastcc void @"_ZZN2v88internal8compiler19LinearScanAllocator32ComputeStateFromManyPredecessorsEPNS1_16InstructionBlockEPNS0_16ZoneUnorderedSetINS2_17RangeWithRegisterENS6_4HashENS6_6EqualsEEEENK3$_0clENSt3__18functionIFbPNS1_17TopLevelLiveRangeEEEESA_Pb"(%class.anon*, %"class.std::__1::function"*, %"class.v8::internal::ZoneUnorderedSet"*, i8* nocapture) unnamed_addr #5 align 2 {
  %5 = bitcast %class.anon* %0 to %"class.v8::internal::compiler::RegisterAllocator"**
  %6 = load %"class.v8::internal::compiler::RegisterAllocator"*, %"class.v8::internal::compiler::RegisterAllocator"** %5, align 8
  %7 = getelementptr %class.anon, %class.anon* %0, i64 0, i32 1, i32 0, i32 0, i32 0
  %8 = load %"class.std::__1::__tree_end_node"*, %"class.std::__1::__tree_end_node"** %7, align 8
  %9 = getelementptr inbounds %class.anon, %class.anon* %0, i64 0, i32 1, i32 0, i32 0, i32 1, i32 0, i32 0
  %10 = icmp eq %"class.std::__1::__tree_end_node"* %8, %9
  br i1 %10, label %26, label %11

11:                                               ; preds = %4
  %12 = getelementptr inbounds %"class.std::__1::function", %"class.std::__1::function"* %1, i64 0, i32 0, i32 1, i32 0
  %13 = getelementptr inbounds %"class.std::__1::function", %"class.std::__1::function"* %1, i64 0, i32 0, i32 0
  %14 = getelementptr inbounds %class.anon, %class.anon* %0, i64 0, i32 2
  %15 = getelementptr inbounds %"class.v8::internal::compiler::RegisterAllocator", %"class.v8::internal::compiler::RegisterAllocator"* %6, i64 0, i32 2
  %16 = getelementptr inbounds %"class.v8::internal::ZoneUnorderedSet", %"class.v8::internal::ZoneUnorderedSet"* %2, i64 0, i32 0, i32 0
  %17 = getelementptr inbounds %"class.v8::internal::ZoneUnorderedSet", %"class.v8::internal::ZoneUnorderedSet"* %2, i64 0, i32 0, i32 0, i32 1, i32 1, i32 0, i32 0
  %18 = getelementptr inbounds %"class.v8::internal::ZoneUnorderedSet", %"class.v8::internal::ZoneUnorderedSet"* %2, i64 0, i32 0, i32 0, i32 0, i32 0, i32 1, i32 0, i32 0, i32 0, i32 0
  %19 = getelementptr inbounds %"class.v8::internal::ZoneUnorderedSet", %"class.v8::internal::ZoneUnorderedSet"* %2, i64 0, i32 0, i32 0, i32 0, i32 0, i32 0, i32 0
  %20 = getelementptr inbounds %"class.v8::internal::ZoneUnorderedSet", %"class.v8::internal::ZoneUnorderedSet"* %2, i64 0, i32 0, i32 0, i32 1, i32 0, i32 0
  %21 = getelementptr inbounds %"struct.std::__1::__hash_node_base.1398", %"struct.std::__1::__hash_node_base.1398"* %20, i64 0, i32 0
  %22 = bitcast %"struct.std::__1::__hash_node_base.1398"* %20 to i64*
  %23 = getelementptr inbounds %"class.v8::internal::ZoneUnorderedSet", %"class.v8::internal::ZoneUnorderedSet"* %2, i64 0, i32 0, i32 0, i32 2, i32 0, i32 0
  %24 = getelementptr inbounds %"class.v8::internal::compiler::RegisterAllocator", %"class.v8::internal::compiler::RegisterAllocator"* %6, i64 0, i32 0
  %25 = getelementptr inbounds %"class.v8::internal::compiler::RegisterAllocator", %"class.v8::internal::compiler::RegisterAllocator"* %6, i64 0, i32 1
  br label %27

26:                                               ; preds = %253, %4
  ret void

27:                                               ; preds = %11, %253
  %28 = phi %"class.std::__1::__tree_end_node"* [ %8, %11 ], [ %254, %253 ]
  %29 = getelementptr inbounds %"class.std::__1::__tree_end_node", %"class.std::__1::__tree_end_node"* %28, i64 4
  %30 = bitcast %"class.std::__1::__tree_end_node"* %29 to %"struct.std::__1::pair.1430"*
  %31 = bitcast %"class.std::__1::__tree_end_node"* %29 to %"class.v8::internal::compiler::TopLevelLiveRange"**
  %32 = load %"class.v8::internal::compiler::TopLevelLiveRange"*, %"class.v8::internal::compiler::TopLevelLiveRange"** %31, align 8
  %33 = load i1 (%"union.std::__1::__function::__policy_storage"*, %"class.v8::internal::compiler::TopLevelLiveRange"*)*, i1 (%"union.std::__1::__function::__policy_storage"*, %"class.v8::internal::compiler::TopLevelLiveRange"*)** %12, align 8
  %34 = tail call zeroext i1 %33(%"union.std::__1::__function::__policy_storage"* %13, %"class.v8::internal::compiler::TopLevelLiveRange"* %32) #16
  br i1 %34, label %35, label %225

35:                                               ; preds = %27
  %36 = getelementptr inbounds %"class.std::__1::__tree_end_node", %"class.std::__1::__tree_end_node"* %28, i64 5
  %37 = bitcast %"class.std::__1::__tree_end_node"* %36 to i64*
  %38 = load i64, i64* %37, align 8
  %39 = load i64, i64* %14, align 8
  %40 = icmp ult i64 %38, %39
  br i1 %40, label %225, label %41

41:                                               ; preds = %35
  %42 = load i32, i32* %15, align 4
  %43 = bitcast %"class.std::__1::__tree_end_node"* %29 to %"class.v8::internal::compiler::LiveRange"**
  %44 = icmp sgt i32 %42, 0
  br i1 %44, label %45, label %107

45:                                               ; preds = %41
  %46 = zext i32 %42 to i64
  %47 = and i64 %46, 1
  %48 = icmp eq i32 %42, 1
  br i1 %48, label %51, label %49

49:                                               ; preds = %45
  %50 = sub nsw i64 %46, %47
  br label %79

51:                                               ; preds = %267, %45
  %52 = phi i32 [ undef, %45 ], [ %268, %267 ]
  %53 = phi i8 [ undef, %45 ], [ %269, %267 ]
  %54 = phi i64 [ 0, %45 ], [ %271, %267 ]
  %55 = phi i32 [ 0, %45 ], [ %270, %267 ]
  %56 = phi i8 [ 0, %45 ], [ %269, %267 ]
  %57 = phi i32 [ 32, %45 ], [ %268, %267 ]
  %58 = icmp eq i64 %47, 0
  br i1 %58, label %74, label %59

59:                                               ; preds = %51
  %60 = getelementptr inbounds %"struct.std::__1::pair.1430", %"struct.std::__1::pair.1430"* %30, i64 0, i32 1, i32 1, i64 %54
  %61 = load i32, i32* %60, align 4
  %62 = icmp eq i32 %61, 0
  br i1 %62, label %74, label %63

63:                                               ; preds = %59
  %64 = icmp sgt i32 %61, %55
  br i1 %64, label %70, label %65

65:                                               ; preds = %63
  %66 = and i8 %56, 1
  %67 = icmp ne i8 %66, 0
  %68 = icmp eq i32 %61, %55
  %69 = and i1 %67, %68
  br i1 %69, label %70, label %74

70:                                               ; preds = %65, %63
  %71 = getelementptr inbounds i8, i8* %3, i64 %54
  %72 = load i8, i8* %71, align 1, !range !3
  %73 = trunc i64 %54 to i32
  br label %74

74:                                               ; preds = %70, %65, %59, %51
  %75 = phi i32 [ %52, %51 ], [ %57, %59 ], [ %73, %70 ], [ %57, %65 ]
  %76 = phi i8 [ %53, %51 ], [ %56, %59 ], [ %72, %70 ], [ %56, %65 ]
  %77 = and i8 %76, 1
  %78 = icmp eq i8 %77, 0
  br i1 %78, label %107, label %111

79:                                               ; preds = %267, %49
  %80 = phi i64 [ 0, %49 ], [ %271, %267 ]
  %81 = phi i32 [ 0, %49 ], [ %270, %267 ]
  %82 = phi i8 [ 0, %49 ], [ %269, %267 ]
  %83 = phi i32 [ 32, %49 ], [ %268, %267 ]
  %84 = phi i64 [ %50, %49 ], [ %272, %267 ]
  %85 = getelementptr inbounds %"struct.std::__1::pair.1430", %"struct.std::__1::pair.1430"* %30, i64 0, i32 1, i32 1, i64 %80
  %86 = load i32, i32* %85, align 4
  %87 = icmp eq i32 %86, 0
  br i1 %87, label %99, label %88

88:                                               ; preds = %79
  %89 = icmp sgt i32 %86, %81
  br i1 %89, label %95, label %90

90:                                               ; preds = %88
  %91 = and i8 %82, 1
  %92 = icmp ne i8 %91, 0
  %93 = icmp eq i32 %86, %81
  %94 = and i1 %92, %93
  br i1 %94, label %95, label %99

95:                                               ; preds = %90, %88
  %96 = getelementptr inbounds i8, i8* %3, i64 %80
  %97 = load i8, i8* %96, align 1, !range !3
  %98 = trunc i64 %80 to i32
  br label %99

99:                                               ; preds = %95, %90, %79
  %100 = phi i32 [ %83, %79 ], [ %98, %95 ], [ %83, %90 ]
  %101 = phi i8 [ %82, %79 ], [ %97, %95 ], [ %82, %90 ]
  %102 = phi i32 [ %81, %79 ], [ %86, %95 ], [ %81, %90 ]
  %103 = or i64 %80, 1
  %104 = getelementptr inbounds %"struct.std::__1::pair.1430", %"struct.std::__1::pair.1430"* %30, i64 0, i32 1, i32 1, i64 %103
  %105 = load i32, i32* %104, align 4
  %106 = icmp eq i32 %105, 0
  br i1 %106, label %267, label %256

107:                                              ; preds = %41, %74
  %108 = phi i32 [ %75, %74 ], [ 32, %41 ]
  %109 = sext i32 %108 to i64
  %110 = getelementptr inbounds i8, i8* %3, i64 %109
  store i8 1, i8* %110, align 1
  br label %111

111:                                              ; preds = %74, %107
  %112 = phi i32 [ %108, %107 ], [ 32, %74 ]
  %113 = load %"class.v8::internal::Zone"*, %"class.v8::internal::Zone"** %17, align 8, !noalias !140
  %114 = getelementptr inbounds %"class.v8::internal::Zone", %"class.v8::internal::Zone"* %113, i64 0, i32 2
  %115 = load i64, i64* %114, align 8, !noalias !140
  %116 = getelementptr inbounds %"class.v8::internal::Zone", %"class.v8::internal::Zone"* %113, i64 0, i32 3
  %117 = load i64, i64* %116, align 8, !noalias !140
  %118 = sub i64 %117, %115
  %119 = icmp ult i64 %118, 32
  br i1 %119, label %120, label %122, !prof !2

120:                                              ; preds = %111
  %121 = tail call i64 @_ZN2v88internal4Zone9NewExpandEm(%"class.v8::internal::Zone"* %113, i64 32) #16, !noalias !140
  br label %124

122:                                              ; preds = %111
  %123 = add i64 %115, 32
  store i64 %123, i64* %114, align 8, !noalias !140
  br label %124

124:                                              ; preds = %120, %122
  %125 = phi i64 [ %121, %120 ], [ %115, %122 ]
  %126 = inttoptr i64 %125 to %"struct.std::__1::__hash_node"*
  %127 = getelementptr inbounds %"struct.std::__1::__hash_node", %"struct.std::__1::__hash_node"* %126, i64 0, i32 2
  %128 = bitcast %"class.std::__1::__tree_end_node"* %29 to i64*
  %129 = load i64, i64* %128, align 8, !noalias !140
  %130 = bitcast %"struct.v8::internal::compiler::LinearScanAllocator::RangeWithRegister"* %127 to i64*
  store i64 %129, i64* %130, align 8, !noalias !140
  %131 = getelementptr inbounds %"struct.std::__1::__hash_node", %"struct.std::__1::__hash_node"* %126, i64 0, i32 2, i32 1
  store i32 %112, i32* %131, align 8, !noalias !140
  %132 = inttoptr i64 %129 to %"class.v8::internal::compiler::TopLevelLiveRange"*
  %133 = getelementptr inbounds %"class.v8::internal::compiler::TopLevelLiveRange", %"class.v8::internal::compiler::TopLevelLiveRange"* %132, i64 0, i32 1
  %134 = load i32, i32* %133, align 4, !noalias !140
  %135 = sext i32 %134 to i64
  %136 = getelementptr inbounds %"struct.std::__1::__hash_node", %"struct.std::__1::__hash_node"* %126, i64 0, i32 1
  store i64 %135, i64* %136, align 8, !noalias !140
  %137 = getelementptr inbounds %"struct.std::__1::__hash_node", %"struct.std::__1::__hash_node"* %126, i64 0, i32 0, i32 0
  store %"struct.std::__1::__hash_node_base.1398"* null, %"struct.std::__1::__hash_node_base.1398"** %137, align 8, !noalias !140
  %138 = load i32, i32* %133, align 4
  %139 = sext i32 %138 to i64
  store i64 %139, i64* %136, align 8
  %140 = getelementptr inbounds %"struct.std::__1::__hash_node", %"struct.std::__1::__hash_node"* %126, i64 0, i32 0
  %141 = tail call %"struct.std::__1::__hash_node_base.1398"* @_ZNSt3__112__hash_tableIN2v88internal8compiler19LinearScanAllocator17RangeWithRegisterENS5_4HashENS5_6EqualsENS2_13ZoneAllocatorIS5_EEE28__node_insert_unique_prepareEmRS5_(%"class.std::__1::__hash_table.1394"* %16, i64 %139, %"struct.v8::internal::compiler::LinearScanAllocator::RangeWithRegister"* dereferenceable(16) %127) #16
  %142 = icmp eq %"struct.std::__1::__hash_node_base.1398"* %141, null
  br i1 %142, label %143, label %195

143:                                              ; preds = %124
  %144 = getelementptr inbounds %"struct.std::__1::__hash_node_base.1398", %"struct.std::__1::__hash_node_base.1398"* %140, i64 1
  %145 = bitcast %"struct.std::__1::__hash_node_base.1398"* %144 to i64*
  %146 = load i64, i64* %18, align 8
  %147 = load i64, i64* %145, align 8
  %148 = tail call i64 @llvm.ctpop.i64(i64 %146) #16, !range !79
  %149 = icmp ugt i64 %148, 1
  br i1 %149, label %153, label %150

150:                                              ; preds = %143
  %151 = add i64 %146, -1
  %152 = and i64 %151, %147
  br label %157

153:                                              ; preds = %143
  %154 = icmp ult i64 %147, %146
  br i1 %154, label %157, label %155

155:                                              ; preds = %153
  %156 = urem i64 %147, %146
  br label %157

157:                                              ; preds = %155, %153, %150
  %158 = phi i64 [ %152, %150 ], [ %156, %155 ], [ %147, %153 ]
  %159 = load %"struct.std::__1::__hash_node_base.1398"**, %"struct.std::__1::__hash_node_base.1398"*** %19, align 8
  %160 = getelementptr inbounds %"struct.std::__1::__hash_node_base.1398"*, %"struct.std::__1::__hash_node_base.1398"** %159, i64 %158
  %161 = load %"struct.std::__1::__hash_node_base.1398"*, %"struct.std::__1::__hash_node_base.1398"** %160, align 8
  %162 = icmp eq %"struct.std::__1::__hash_node_base.1398"* %161, null
  br i1 %162, label %163, label %185

163:                                              ; preds = %157
  %164 = load i64, i64* %22, align 8
  %165 = inttoptr i64 %125 to i64*
  store i64 %164, i64* %165, align 8
  store %"struct.std::__1::__hash_node_base.1398"* %140, %"struct.std::__1::__hash_node_base.1398"** %21, align 8
  %166 = load %"struct.std::__1::__hash_node_base.1398"**, %"struct.std::__1::__hash_node_base.1398"*** %19, align 8
  %167 = getelementptr inbounds %"struct.std::__1::__hash_node_base.1398"*, %"struct.std::__1::__hash_node_base.1398"** %166, i64 %158
  store %"struct.std::__1::__hash_node_base.1398"* %20, %"struct.std::__1::__hash_node_base.1398"** %167, align 8
  %168 = load %"struct.std::__1::__hash_node_base.1398"*, %"struct.std::__1::__hash_node_base.1398"** %137, align 8
  %169 = icmp eq %"struct.std::__1::__hash_node_base.1398"* %168, null
  br i1 %169, label %192, label %170

170:                                              ; preds = %163
  %171 = getelementptr inbounds %"struct.std::__1::__hash_node_base.1398", %"struct.std::__1::__hash_node_base.1398"* %168, i64 1
  %172 = bitcast %"struct.std::__1::__hash_node_base.1398"* %171 to i64*
  %173 = load i64, i64* %172, align 8
  br i1 %149, label %177, label %174

174:                                              ; preds = %170
  %175 = add i64 %146, -1
  %176 = and i64 %173, %175
  br label %181

177:                                              ; preds = %170
  %178 = icmp ult i64 %173, %146
  br i1 %178, label %181, label %179

179:                                              ; preds = %177
  %180 = urem i64 %173, %146
  br label %181

181:                                              ; preds = %179, %177, %174
  %182 = phi i64 [ %176, %174 ], [ %180, %179 ], [ %173, %177 ]
  %183 = load %"struct.std::__1::__hash_node_base.1398"**, %"struct.std::__1::__hash_node_base.1398"*** %19, align 8
  %184 = getelementptr inbounds %"struct.std::__1::__hash_node_base.1398"*, %"struct.std::__1::__hash_node_base.1398"** %183, i64 %182
  br label %190

185:                                              ; preds = %157
  %186 = getelementptr inbounds %"struct.std::__1::__hash_node_base.1398", %"struct.std::__1::__hash_node_base.1398"* %161, i64 0, i32 0
  %187 = bitcast %"struct.std::__1::__hash_node_base.1398"* %161 to i64*
  %188 = load i64, i64* %187, align 8
  %189 = inttoptr i64 %125 to i64*
  store i64 %188, i64* %189, align 8
  br label %190

190:                                              ; preds = %181, %185
  %191 = phi %"struct.std::__1::__hash_node_base.1398"** [ %186, %185 ], [ %184, %181 ]
  store %"struct.std::__1::__hash_node_base.1398"* %140, %"struct.std::__1::__hash_node_base.1398"** %191, align 8
  br label %192

192:                                              ; preds = %190, %163
  %193 = load i64, i64* %23, align 8
  %194 = add i64 %193, 1
  store i64 %194, i64* %23, align 8
  br label %195

195:                                              ; preds = %124, %192
  %196 = load %"class.v8::internal::compiler::TopTierRegisterAllocationData"*, %"class.v8::internal::compiler::TopTierRegisterAllocationData"** %24, align 8
  %197 = getelementptr inbounds %"class.v8::internal::compiler::TopTierRegisterAllocationData", %"class.v8::internal::compiler::TopTierRegisterAllocationData"* %196, i64 0, i32 23, i32 0
  %198 = load i32, i32* %197, align 4
  %199 = and i32 %198, 1
  %200 = icmp eq i32 %199, 0
  br i1 %200, label %225, label %201

201:                                              ; preds = %195
  %202 = load %"class.v8::internal::compiler::LiveRange"*, %"class.v8::internal::compiler::LiveRange"** %43, align 8
  %203 = getelementptr inbounds %"class.v8::internal::compiler::LiveRange", %"class.v8::internal::compiler::LiveRange"* %202, i64 0, i32 5
  %204 = load %"class.v8::internal::compiler::TopLevelLiveRange"*, %"class.v8::internal::compiler::TopLevelLiveRange"** %203, align 8
  %205 = getelementptr inbounds %"class.v8::internal::compiler::TopLevelLiveRange", %"class.v8::internal::compiler::TopLevelLiveRange"* %204, i64 0, i32 1
  %206 = load i32, i32* %205, align 4
  %207 = load i64, i64* %37, align 8
  %208 = icmp eq i32 %112, 32
  br i1 %208, label %223, label %209

209:                                              ; preds = %201
  %210 = load i32, i32* %25, align 8
  %211 = icmp eq i32 %210, 0
  %212 = icmp eq i32 %112, -1
  br i1 %211, label %213, label %218

213:                                              ; preds = %209
  br i1 %212, label %223, label %214

214:                                              ; preds = %213
  %215 = sext i32 %112 to i64
  %216 = getelementptr inbounds [16 x i8*], [16 x i8*]* @_ZZN2v88internal12RegisterNameENS0_8RegisterEE5Names, i64 0, i64 %215
  %217 = load i8*, i8** %216, align 8
  br label %223

218:                                              ; preds = %209
  br i1 %212, label %223, label %219

219:                                              ; preds = %218
  %220 = sext i32 %112 to i64
  %221 = getelementptr inbounds [16 x i8*], [16 x i8*]* @_ZZN2v88internal12RegisterNameENS0_11XMMRegisterEE5Names, i64 0, i64 %220
  %222 = load i8*, i8** %221, align 8
  br label %223

223:                                              ; preds = %201, %213, %214, %218, %219
  %224 = phi i8* [ getelementptr inbounds ([11 x i8], [11 x i8]* @.str.58, i64 0, i64 0), %201 ], [ %217, %214 ], [ getelementptr inbounds ([8 x i8], [8 x i8]* @.str.123, i64 0, i64 0), %213 ], [ %222, %219 ], [ getelementptr inbounds ([8 x i8], [8 x i8]* @.str.123, i64 0, i64 0), %218 ]
  tail call void (i8*, ...) @_ZN2v88internal6PrintFEPKcz(i8* getelementptr inbounds ([37 x i8], [37 x i8]* @.str.140, i64 0, i64 0), i32 %206, i64 %207, i8* %224) #16
  br label %225

225:                                              ; preds = %195, %223, %35, %27
  %226 = getelementptr inbounds %"class.std::__1::__tree_end_node", %"class.std::__1::__tree_end_node"* %28, i64 1, i32 0
  %227 = load %"class.std::__1::__tree_node_base"*, %"class.std::__1::__tree_node_base"** %226, align 8
  %228 = icmp eq %"class.std::__1::__tree_node_base"* %227, null
  br i1 %228, label %229, label %237

229:                                              ; preds = %225
  %230 = bitcast %"class.std::__1::__tree_end_node"* %28 to %"class.std::__1::__tree_node_base"*
  %231 = getelementptr inbounds %"class.std::__1::__tree_end_node", %"class.std::__1::__tree_end_node"* %28, i64 2
  %232 = bitcast %"class.std::__1::__tree_end_node"* %231 to %"class.std::__1::__tree_end_node"**
  %233 = load %"class.std::__1::__tree_end_node"*, %"class.std::__1::__tree_end_node"** %232, align 8
  %234 = getelementptr inbounds %"class.std::__1::__tree_end_node", %"class.std::__1::__tree_end_node"* %233, i64 0, i32 0
  %235 = load %"class.std::__1::__tree_node_base"*, %"class.std::__1::__tree_node_base"** %234, align 8
  %236 = icmp eq %"class.std::__1::__tree_node_base"* %235, %230
  br i1 %236, label %253, label %244

237:                                              ; preds = %225, %237
  %238 = phi %"class.std::__1::__tree_node_base"* [ %240, %237 ], [ %227, %225 ]
  %239 = getelementptr inbounds %"class.std::__1::__tree_node_base", %"class.std::__1::__tree_node_base"* %238, i64 0, i32 0, i32 0
  %240 = load %"class.std::__1::__tree_node_base"*, %"class.std::__1::__tree_node_base"** %239, align 8
  %241 = icmp eq %"class.std::__1::__tree_node_base"* %240, null
  br i1 %241, label %242, label %237

242:                                              ; preds = %237
  %243 = getelementptr inbounds %"class.std::__1::__tree_node_base", %"class.std::__1::__tree_node_base"* %238, i64 0, i32 0
  br label %253

244:                                              ; preds = %229, %244
  %245 = phi %"class.std::__1::__tree_end_node"** [ %248, %244 ], [ %232, %229 ]
  %246 = bitcast %"class.std::__1::__tree_end_node"** %245 to %"class.std::__1::__tree_node_base"**
  %247 = load %"class.std::__1::__tree_node_base"*, %"class.std::__1::__tree_node_base"** %246, align 8
  %248 = getelementptr inbounds %"class.std::__1::__tree_node_base", %"class.std::__1::__tree_node_base"* %247, i64 0, i32 2
  %249 = load %"class.std::__1::__tree_end_node"*, %"class.std::__1::__tree_end_node"** %248, align 8
  %250 = getelementptr inbounds %"class.std::__1::__tree_end_node", %"class.std::__1::__tree_end_node"* %249, i64 0, i32 0
  %251 = load %"class.std::__1::__tree_node_base"*, %"class.std::__1::__tree_node_base"** %250, align 8
  %252 = icmp eq %"class.std::__1::__tree_node_base"* %251, %247
  br i1 %252, label %253, label %244

253:                                              ; preds = %244, %229, %242
  %254 = phi %"class.std::__1::__tree_end_node"* [ %243, %242 ], [ %233, %229 ], [ %249, %244 ]
  %255 = icmp eq %"class.std::__1::__tree_end_node"* %254, %9
  br i1 %255, label %26, label %27

256:                                              ; preds = %99
  %257 = icmp sgt i32 %105, %102
  br i1 %257, label %263, label %258

258:                                              ; preds = %256
  %259 = and i8 %101, 1
  %260 = icmp ne i8 %259, 0
  %261 = icmp eq i32 %105, %102
  %262 = and i1 %260, %261
  br i1 %262, label %263, label %267

263:                                              ; preds = %258, %256
  %264 = getelementptr inbounds i8, i8* %3, i64 %103
  %265 = load i8, i8* %264, align 1, !range !3
  %266 = trunc i64 %103 to i32
  br label %267

267:                                              ; preds = %263, %258, %99
  %268 = phi i32 [ %100, %99 ], [ %266, %263 ], [ %100, %258 ]
  %269 = phi i8 [ %101, %99 ], [ %265, %263 ], [ %101, %258 ]
  %270 = phi i32 [ %102, %99 ], [ %105, %263 ], [ %102, %258 ]
  %271 = add nuw nsw i64 %80, 2
  %272 = add i64 %84, -2
  %273 = icmp eq i64 %272, 0
  br i1 %273, label %51, label %79
}

; Function Attrs: nounwind ssp uwtable
define hidden void @_ZN2v88internal8compiler19LinearScanAllocator25UpdateDeferredFixedRangesENS1_29TopTierRegisterAllocationData9SpillModeEPNS1_16InstructionBlockE(%"class.v8::internal::compiler::LinearScanAllocator"*, i32, %"class.v8::internal::compiler::InstructionBlock"* nocapture readonly) local_unnamed_addr #0 align 2 {
  %4 = alloca %class.anon.1435, align 8
  %5 = icmp eq i32 %1, 1
  br i1 %5, label %13, label %6

6:                                                ; preds = %3
  %7 = getelementptr inbounds %"class.v8::internal::compiler::LinearScanAllocator", %"class.v8::internal::compiler::LinearScanAllocator"* %0, i64 0, i32 0, i32 2
  %8 = load i32, i32* %7, align 4
  %9 = icmp sgt i32 %8, 0
  br i1 %9, label %10, label %205

10:                                               ; preds = %6
  %11 = getelementptr inbounds %"class.v8::internal::compiler::LinearScanAllocator", %"class.v8::internal::compiler::LinearScanAllocator"* %0, i64 0, i32 3, i32 0, i32 0, i32 0
  %12 = load %"class.v8::internal::ZoneMultiset.1344"*, %"class.v8::internal::ZoneMultiset.1344"** %11, align 8
  br label %102

13:                                               ; preds = %3
  %14 = getelementptr inbounds %"class.v8::internal::compiler::LinearScanAllocator", %"class.v8::internal::compiler::LinearScanAllocator"* %0, i64 0, i32 0, i32 0
  %15 = load %"class.v8::internal::compiler::TopTierRegisterAllocationData"*, %"class.v8::internal::compiler::TopTierRegisterAllocationData"** %14, align 8
  %16 = getelementptr inbounds %"class.v8::internal::compiler::TopTierRegisterAllocationData", %"class.v8::internal::compiler::TopTierRegisterAllocationData"* %15, i64 0, i32 3
  %17 = load %"class.v8::internal::compiler::InstructionSequence"*, %"class.v8::internal::compiler::InstructionSequence"** %16, align 8
  %18 = getelementptr inbounds %"class.v8::internal::compiler::InstructionSequence", %"class.v8::internal::compiler::InstructionSequence"* %17, i64 0, i32 2
  %19 = bitcast %"class.v8::internal::ZoneVector.1170"** %18 to %"class.std::__1::vector.1171"**
  %20 = load %"class.std::__1::vector.1171"*, %"class.std::__1::vector.1171"** %19, align 8
  %21 = getelementptr inbounds %"class.std::__1::vector.1171", %"class.std::__1::vector.1171"* %20, i64 0, i32 0, i32 1
  %22 = bitcast %"class.v8::internal::compiler::InstructionBlock"*** %21 to i64*
  %23 = load i64, i64* %22, align 8
  %24 = bitcast %"class.std::__1::vector.1171"* %20 to i64*
  %25 = load i64, i64* %24, align 8
  %26 = sub i64 %23, %25
  %27 = lshr exact i64 %26, 3
  %28 = trunc i64 %27 to i32
  %29 = add nsw i32 %28, -1
  %30 = ashr exact i64 %26, 3
  %31 = inttoptr i64 %25 to %"class.v8::internal::compiler::InstructionBlock"**
  br label %32

32:                                               ; preds = %43, %13
  %33 = phi %"class.v8::internal::compiler::InstructionBlock"* [ %2, %13 ], [ %45, %43 ]
  %34 = getelementptr inbounds %"class.v8::internal::compiler::InstructionBlock", %"class.v8::internal::compiler::InstructionBlock"* %33, i64 0, i32 4, i32 0
  %35 = load i32, i32* %34, align 4
  %36 = icmp slt i32 %35, %29
  br i1 %36, label %37, label %49

37:                                               ; preds = %32
  %38 = add nsw i32 %35, 1
  %39 = sext i32 %38 to i64
  %40 = icmp ugt i64 %30, %39
  br i1 %40, label %43, label %41

41:                                               ; preds = %37
  %42 = bitcast %"class.std::__1::vector.1171"* %20 to %"class.std::__1::__vector_base_common"*
  tail call void @_ZNKSt3__120__vector_base_commonILb1EE20__throw_out_of_rangeEv(%"class.std::__1::__vector_base_common"* %42) #17
  unreachable

43:                                               ; preds = %37
  %44 = getelementptr inbounds %"class.v8::internal::compiler::InstructionBlock"*, %"class.v8::internal::compiler::InstructionBlock"** %31, i64 %39
  %45 = load %"class.v8::internal::compiler::InstructionBlock"*, %"class.v8::internal::compiler::InstructionBlock"** %44, align 8
  %46 = getelementptr inbounds %"class.v8::internal::compiler::InstructionBlock", %"class.v8::internal::compiler::InstructionBlock"* %45, i64 0, i32 10
  %47 = load i8, i8* %46, align 4, !range !3
  %48 = icmp eq i8 %47, 0
  br i1 %48, label %49, label %32

49:                                               ; preds = %32, %43
  %50 = getelementptr inbounds %"class.v8::internal::compiler::InstructionBlock", %"class.v8::internal::compiler::InstructionBlock"* %33, i64 0, i32 9
  %51 = load i32, i32* %50, align 8
  %52 = shl i32 %51, 2
  %53 = add i32 %52, -4
  %54 = or i32 %53, 2
  %55 = bitcast %class.anon.1435* %4 to i8*
  call void @llvm.lifetime.start.p0i8(i64 16, i8* nonnull %55) #16
  %56 = getelementptr inbounds %class.anon.1435, %class.anon.1435* %4, i64 0, i32 0
  store %"class.v8::internal::compiler::LinearScanAllocator"* %0, %"class.v8::internal::compiler::LinearScanAllocator"** %56, align 8
  %57 = getelementptr inbounds %class.anon.1435, %class.anon.1435* %4, i64 0, i32 1, i32 0
  store i32 %54, i32* %57, align 8
  %58 = getelementptr inbounds %"class.v8::internal::compiler::LinearScanAllocator", %"class.v8::internal::compiler::LinearScanAllocator"* %0, i64 0, i32 0, i32 1
  %59 = load i32, i32* %58, align 8
  %60 = icmp eq i32 %59, 0
  br i1 %60, label %61, label %81

61:                                               ; preds = %49
  %62 = getelementptr inbounds %"class.v8::internal::compiler::TopTierRegisterAllocationData", %"class.v8::internal::compiler::TopTierRegisterAllocationData"* %15, i64 0, i32 10, i32 0, i32 0, i32 0
  %63 = load %"class.v8::internal::compiler::TopLevelLiveRange"**, %"class.v8::internal::compiler::TopLevelLiveRange"*** %62, align 8
  %64 = getelementptr inbounds %"class.v8::internal::compiler::TopTierRegisterAllocationData", %"class.v8::internal::compiler::TopTierRegisterAllocationData"* %15, i64 0, i32 10, i32 0, i32 0, i32 1
  %65 = load %"class.v8::internal::compiler::TopLevelLiveRange"**, %"class.v8::internal::compiler::TopLevelLiveRange"*** %64, align 8
  %66 = icmp eq %"class.v8::internal::compiler::TopLevelLiveRange"** %63, %65
  br i1 %66, label %101, label %67

67:                                               ; preds = %61, %78
  %68 = phi %"class.v8::internal::compiler::TopLevelLiveRange"** [ %79, %78 ], [ %63, %61 ]
  %69 = load %"class.v8::internal::compiler::TopLevelLiveRange"*, %"class.v8::internal::compiler::TopLevelLiveRange"** %68, align 8
  %70 = icmp eq %"class.v8::internal::compiler::TopLevelLiveRange"* %69, null
  br i1 %70, label %78, label %71

71:                                               ; preds = %67
  %72 = getelementptr inbounds %"class.v8::internal::compiler::TopLevelLiveRange", %"class.v8::internal::compiler::TopLevelLiveRange"* %69, i64 0, i32 0, i32 1
  %73 = load i32, i32* %72, align 4
  %74 = and i32 %73, 268435456
  %75 = icmp eq i32 %74, 0
  br i1 %75, label %78, label %76

76:                                               ; preds = %71
  %77 = bitcast %"class.v8::internal::compiler::TopLevelLiveRange"* %69 to %"class.v8::internal::compiler::LiveRange"*
  call fastcc void @"_ZZN2v88internal8compiler19LinearScanAllocator25UpdateDeferredFixedRangesENS1_29TopTierRegisterAllocationData9SpillModeEPNS1_16InstructionBlockEENK3$_3clEPNS1_9LiveRangeE"(%class.anon.1435* nonnull %4, %"class.v8::internal::compiler::LiveRange"* nonnull %77)
  br label %78

78:                                               ; preds = %71, %67, %76
  %79 = getelementptr inbounds %"class.v8::internal::compiler::TopLevelLiveRange"*, %"class.v8::internal::compiler::TopLevelLiveRange"** %68, i64 1
  %80 = icmp eq %"class.v8::internal::compiler::TopLevelLiveRange"** %79, %65
  br i1 %80, label %101, label %67

81:                                               ; preds = %49
  %82 = getelementptr inbounds %"class.v8::internal::compiler::TopTierRegisterAllocationData", %"class.v8::internal::compiler::TopTierRegisterAllocationData"* %15, i64 0, i32 12, i32 0, i32 0, i32 0
  %83 = load %"class.v8::internal::compiler::TopLevelLiveRange"**, %"class.v8::internal::compiler::TopLevelLiveRange"*** %82, align 8
  %84 = getelementptr inbounds %"class.v8::internal::compiler::TopTierRegisterAllocationData", %"class.v8::internal::compiler::TopTierRegisterAllocationData"* %15, i64 0, i32 12, i32 0, i32 0, i32 1
  %85 = load %"class.v8::internal::compiler::TopLevelLiveRange"**, %"class.v8::internal::compiler::TopLevelLiveRange"*** %84, align 8
  %86 = icmp eq %"class.v8::internal::compiler::TopLevelLiveRange"** %83, %85
  br i1 %86, label %101, label %87

87:                                               ; preds = %81, %98
  %88 = phi %"class.v8::internal::compiler::TopLevelLiveRange"** [ %99, %98 ], [ %83, %81 ]
  %89 = load %"class.v8::internal::compiler::TopLevelLiveRange"*, %"class.v8::internal::compiler::TopLevelLiveRange"** %88, align 8
  %90 = icmp eq %"class.v8::internal::compiler::TopLevelLiveRange"* %89, null
  br i1 %90, label %98, label %91

91:                                               ; preds = %87
  %92 = getelementptr inbounds %"class.v8::internal::compiler::TopLevelLiveRange", %"class.v8::internal::compiler::TopLevelLiveRange"* %89, i64 0, i32 0, i32 1
  %93 = load i32, i32* %92, align 4
  %94 = and i32 %93, 268435456
  %95 = icmp eq i32 %94, 0
  br i1 %95, label %98, label %96

96:                                               ; preds = %91
  %97 = bitcast %"class.v8::internal::compiler::TopLevelLiveRange"* %89 to %"class.v8::internal::compiler::LiveRange"*
  call fastcc void @"_ZZN2v88internal8compiler19LinearScanAllocator25UpdateDeferredFixedRangesENS1_29TopTierRegisterAllocationData9SpillModeEPNS1_16InstructionBlockEENK3$_3clEPNS1_9LiveRangeE"(%class.anon.1435* nonnull %4, %"class.v8::internal::compiler::LiveRange"* nonnull %97)
  br label %98

98:                                               ; preds = %91, %87, %96
  %99 = getelementptr inbounds %"class.v8::internal::compiler::TopLevelLiveRange"*, %"class.v8::internal::compiler::TopLevelLiveRange"** %88, i64 1
  %100 = icmp eq %"class.v8::internal::compiler::TopLevelLiveRange"** %99, %85
  br i1 %100, label %101, label %87

101:                                              ; preds = %98, %78, %81, %61
  call void @llvm.lifetime.end.p0i8(i64 16, i8* nonnull %55) #16
  br label %205

102:                                              ; preds = %10, %110
  %103 = phi %"class.v8::internal::ZoneMultiset.1344"* [ %12, %10 ], [ %111, %110 ]
  %104 = phi %"class.v8::internal::ZoneMultiset.1344"* [ %12, %10 ], [ %112, %110 ]
  %105 = phi i64 [ 0, %10 ], [ %113, %110 ]
  %106 = getelementptr inbounds %"class.v8::internal::ZoneMultiset.1344", %"class.v8::internal::ZoneMultiset.1344"* %104, i64 %105, i32 0, i32 0, i32 0
  %107 = load %"class.std::__1::__tree_end_node"*, %"class.std::__1::__tree_end_node"** %106, align 8
  %108 = getelementptr inbounds %"class.v8::internal::ZoneMultiset.1344", %"class.v8::internal::ZoneMultiset.1344"* %104, i64 %105, i32 0, i32 0, i32 1, i32 0, i32 0
  %109 = icmp eq %"class.std::__1::__tree_end_node"* %107, %108
  br i1 %109, label %110, label %117

110:                                              ; preds = %200, %102
  %111 = phi %"class.v8::internal::ZoneMultiset.1344"* [ %103, %102 ], [ %201, %200 ]
  %112 = phi %"class.v8::internal::ZoneMultiset.1344"* [ %104, %102 ], [ %201, %200 ]
  %113 = add nuw nsw i64 %105, 1
  %114 = load i32, i32* %7, align 4
  %115 = sext i32 %114 to i64
  %116 = icmp slt i64 %113, %115
  br i1 %116, label %102, label %205

117:                                              ; preds = %102, %200
  %118 = phi %"class.v8::internal::ZoneMultiset.1344"* [ %201, %200 ], [ %103, %102 ]
  %119 = phi %"class.v8::internal::ZoneMultiset.1344"* [ %201, %200 ], [ %104, %102 ]
  %120 = phi %"class.std::__1::__tree_end_node"* [ %202, %200 ], [ %107, %102 ]
  %121 = getelementptr inbounds %"class.v8::internal::ZoneMultiset.1344", %"class.v8::internal::ZoneMultiset.1344"* %119, i64 %105, i32 0
  %122 = getelementptr inbounds %"class.std::__1::__tree_end_node", %"class.std::__1::__tree_end_node"* %120, i64 4
  %123 = bitcast %"class.std::__1::__tree_end_node"* %122 to %"class.v8::internal::compiler::LiveRange"**
  %124 = load %"class.v8::internal::compiler::LiveRange"*, %"class.v8::internal::compiler::LiveRange"** %123, align 8
  %125 = getelementptr inbounds %"class.v8::internal::compiler::LiveRange", %"class.v8::internal::compiler::LiveRange"* %124, i64 0, i32 5
  %126 = load %"class.v8::internal::compiler::TopLevelLiveRange"*, %"class.v8::internal::compiler::TopLevelLiveRange"** %125, align 8
  %127 = getelementptr inbounds %"class.v8::internal::compiler::TopLevelLiveRange", %"class.v8::internal::compiler::TopLevelLiveRange"* %126, i64 0, i32 0, i32 1
  %128 = load i32, i32* %127, align 4
  %129 = and i32 %128, 268435456
  %130 = icmp eq i32 %129, 0
  %131 = getelementptr inbounds %"class.std::__1::__tree_end_node", %"class.std::__1::__tree_end_node"* %120, i64 1, i32 0
  %132 = load %"class.std::__1::__tree_node_base"*, %"class.std::__1::__tree_node_base"** %131, align 8
  %133 = icmp eq %"class.std::__1::__tree_node_base"* %132, null
  br i1 %130, label %175, label %134

134:                                              ; preds = %117
  br i1 %133, label %135, label %143

135:                                              ; preds = %134
  %136 = bitcast %"class.std::__1::__tree_end_node"* %120 to %"class.std::__1::__tree_node_base"*
  %137 = getelementptr inbounds %"class.std::__1::__tree_end_node", %"class.std::__1::__tree_end_node"* %120, i64 2
  %138 = bitcast %"class.std::__1::__tree_end_node"* %137 to %"class.std::__1::__tree_end_node"**
  %139 = load %"class.std::__1::__tree_end_node"*, %"class.std::__1::__tree_end_node"** %138, align 8
  %140 = getelementptr inbounds %"class.std::__1::__tree_end_node", %"class.std::__1::__tree_end_node"* %139, i64 0, i32 0
  %141 = load %"class.std::__1::__tree_node_base"*, %"class.std::__1::__tree_node_base"** %140, align 8
  %142 = icmp eq %"class.std::__1::__tree_node_base"* %141, %136
  br i1 %142, label %159, label %150

143:                                              ; preds = %134, %143
  %144 = phi %"class.std::__1::__tree_node_base"* [ %146, %143 ], [ %132, %134 ]
  %145 = getelementptr inbounds %"class.std::__1::__tree_node_base", %"class.std::__1::__tree_node_base"* %144, i64 0, i32 0, i32 0
  %146 = load %"class.std::__1::__tree_node_base"*, %"class.std::__1::__tree_node_base"** %145, align 8
  %147 = icmp eq %"class.std::__1::__tree_node_base"* %146, null
  br i1 %147, label %148, label %143

148:                                              ; preds = %143
  %149 = getelementptr inbounds %"class.std::__1::__tree_node_base", %"class.std::__1::__tree_node_base"* %144, i64 0, i32 0
  br label %159

150:                                              ; preds = %135, %150
  %151 = phi %"class.std::__1::__tree_end_node"** [ %154, %150 ], [ %138, %135 ]
  %152 = bitcast %"class.std::__1::__tree_end_node"** %151 to %"class.std::__1::__tree_node_base"**
  %153 = load %"class.std::__1::__tree_node_base"*, %"class.std::__1::__tree_node_base"** %152, align 8
  %154 = getelementptr inbounds %"class.std::__1::__tree_node_base", %"class.std::__1::__tree_node_base"* %153, i64 0, i32 2
  %155 = load %"class.std::__1::__tree_end_node"*, %"class.std::__1::__tree_end_node"** %154, align 8
  %156 = getelementptr inbounds %"class.std::__1::__tree_end_node", %"class.std::__1::__tree_end_node"* %155, i64 0, i32 0
  %157 = load %"class.std::__1::__tree_node_base"*, %"class.std::__1::__tree_node_base"** %156, align 8
  %158 = icmp eq %"class.std::__1::__tree_node_base"* %157, %153
  br i1 %158, label %159, label %150

159:                                              ; preds = %150, %148, %135
  %160 = phi %"class.std::__1::__tree_end_node"* [ %149, %148 ], [ %139, %135 ], [ %155, %150 ]
  %161 = getelementptr inbounds %"class.std::__1::multiset.1345", %"class.std::__1::multiset.1345"* %121, i64 0, i32 0, i32 0
  %162 = load %"class.std::__1::__tree_end_node"*, %"class.std::__1::__tree_end_node"** %161, align 8
  %163 = icmp eq %"class.std::__1::__tree_end_node"* %162, %120
  br i1 %163, label %164, label %167

164:                                              ; preds = %159
  %165 = ptrtoint %"class.std::__1::__tree_end_node"* %160 to i64
  %166 = bitcast %"class.std::__1::multiset.1345"* %121 to i64*
  store i64 %165, i64* %166, align 8
  br label %167

167:                                              ; preds = %159, %164
  %168 = getelementptr inbounds %"class.v8::internal::ZoneMultiset.1344", %"class.v8::internal::ZoneMultiset.1344"* %119, i64 %105, i32 0, i32 0, i32 2, i32 0, i32 0
  %169 = load i64, i64* %168, align 8
  %170 = add i64 %169, -1
  store i64 %170, i64* %168, align 8
  %171 = getelementptr inbounds %"class.v8::internal::ZoneMultiset.1344", %"class.v8::internal::ZoneMultiset.1344"* %119, i64 %105, i32 0, i32 0, i32 1, i32 0, i32 0, i32 0
  %172 = load %"class.std::__1::__tree_node_base"*, %"class.std::__1::__tree_node_base"** %171, align 8
  %173 = bitcast %"class.std::__1::__tree_end_node"* %120 to %"class.std::__1::__tree_node_base"*
  tail call void @_ZNSt3__113__tree_removeIPNS_16__tree_node_baseIPvEEEEvT_S5_(%"class.std::__1::__tree_node_base"* %172, %"class.std::__1::__tree_node_base"* %173) #16
  %174 = load %"class.v8::internal::ZoneMultiset.1344"*, %"class.v8::internal::ZoneMultiset.1344"** %11, align 8
  br label %200

175:                                              ; preds = %117
  br i1 %133, label %176, label %184

176:                                              ; preds = %175
  %177 = bitcast %"class.std::__1::__tree_end_node"* %120 to %"class.std::__1::__tree_node_base"*
  %178 = getelementptr inbounds %"class.std::__1::__tree_end_node", %"class.std::__1::__tree_end_node"* %120, i64 2
  %179 = bitcast %"class.std::__1::__tree_end_node"* %178 to %"class.std::__1::__tree_end_node"**
  %180 = load %"class.std::__1::__tree_end_node"*, %"class.std::__1::__tree_end_node"** %179, align 8
  %181 = getelementptr inbounds %"class.std::__1::__tree_end_node", %"class.std::__1::__tree_end_node"* %180, i64 0, i32 0
  %182 = load %"class.std::__1::__tree_node_base"*, %"class.std::__1::__tree_node_base"** %181, align 8
  %183 = icmp eq %"class.std::__1::__tree_node_base"* %182, %177
  br i1 %183, label %200, label %191

184:                                              ; preds = %175, %184
  %185 = phi %"class.std::__1::__tree_node_base"* [ %187, %184 ], [ %132, %175 ]
  %186 = getelementptr inbounds %"class.std::__1::__tree_node_base", %"class.std::__1::__tree_node_base"* %185, i64 0, i32 0, i32 0
  %187 = load %"class.std::__1::__tree_node_base"*, %"class.std::__1::__tree_node_base"** %186, align 8
  %188 = icmp eq %"class.std::__1::__tree_node_base"* %187, null
  br i1 %188, label %189, label %184

189:                                              ; preds = %184
  %190 = getelementptr inbounds %"class.std::__1::__tree_node_base", %"class.std::__1::__tree_node_base"* %185, i64 0, i32 0
  br label %200

191:                                              ; preds = %176, %191
  %192 = phi %"class.std::__1::__tree_end_node"** [ %195, %191 ], [ %179, %176 ]
  %193 = bitcast %"class.std::__1::__tree_end_node"** %192 to %"class.std::__1::__tree_node_base"**
  %194 = load %"class.std::__1::__tree_node_base"*, %"class.std::__1::__tree_node_base"** %193, align 8
  %195 = getelementptr inbounds %"class.std::__1::__tree_node_base", %"class.std::__1::__tree_node_base"* %194, i64 0, i32 2
  %196 = load %"class.std::__1::__tree_end_node"*, %"class.std::__1::__tree_end_node"** %195, align 8
  %197 = getelementptr inbounds %"class.std::__1::__tree_end_node", %"class.std::__1::__tree_end_node"* %196, i64 0, i32 0
  %198 = load %"class.std::__1::__tree_node_base"*, %"class.std::__1::__tree_node_base"** %197, align 8
  %199 = icmp eq %"class.std::__1::__tree_node_base"* %198, %194
  br i1 %199, label %200, label %191

200:                                              ; preds = %191, %189, %176, %167
  %201 = phi %"class.v8::internal::ZoneMultiset.1344"* [ %174, %167 ], [ %118, %189 ], [ %118, %176 ], [ %118, %191 ]
  %202 = phi %"class.std::__1::__tree_end_node"* [ %160, %167 ], [ %190, %189 ], [ %180, %176 ], [ %196, %191 ]
  %203 = getelementptr inbounds %"class.v8::internal::ZoneMultiset.1344", %"class.v8::internal::ZoneMultiset.1344"* %201, i64 %105, i32 0, i32 0, i32 1, i32 0, i32 0
  %204 = icmp eq %"class.std::__1::__tree_end_node"* %202, %203
  br i1 %204, label %110, label %117

205:                                              ; preds = %110, %6, %101
  ret void
}

; Function Attrs: nounwind ssp uwtable
define hidden i32 @_ZN2v88internal8compiler19LinearScanAllocator28LastDeferredInstructionIndexEPNS1_16InstructionBlockE(%"class.v8::internal::compiler::LinearScanAllocator"* nocapture readonly, %"class.v8::internal::compiler::InstructionBlock"* nocapture readonly) local_unnamed_addr #0 align 2 {
  %3 = getelementptr inbounds %"class.v8::internal::compiler::LinearScanAllocator", %"class.v8::internal::compiler::LinearScanAllocator"* %0, i64 0, i32 0, i32 0
  %4 = load %"class.v8::internal::compiler::TopTierRegisterAllocationData"*, %"class.v8::internal::compiler::TopTierRegisterAllocationData"** %3, align 8
  %5 = getelementptr inbounds %"class.v8::internal::compiler::TopTierRegisterAllocationData", %"class.v8::internal::compiler::TopTierRegisterAllocationData"* %4, i64 0, i32 3
  %6 = load %"class.v8::internal::compiler::InstructionSequence"*, %"class.v8::internal::compiler::InstructionSequence"** %5, align 8
  %7 = getelementptr inbounds %"class.v8::internal::compiler::InstructionSequence", %"class.v8::internal::compiler::InstructionSequence"* %6, i64 0, i32 2
  %8 = bitcast %"class.v8::internal::ZoneVector.1170"** %7 to %"class.std::__1::vector.1171"**
  %9 = load %"class.std::__1::vector.1171"*, %"class.std::__1::vector.1171"** %8, align 8
  %10 = getelementptr inbounds %"class.std::__1::vector.1171", %"class.std::__1::vector.1171"* %9, i64 0, i32 0, i32 1
  %11 = bitcast %"class.v8::internal::compiler::InstructionBlock"*** %10 to i64*
  %12 = load i64, i64* %11, align 8
  %13 = bitcast %"class.std::__1::vector.1171"* %9 to i64*
  %14 = load i64, i64* %13, align 8
  %15 = sub i64 %12, %14
  %16 = lshr exact i64 %15, 3
  %17 = trunc i64 %16 to i32
  %18 = add nsw i32 %17, -1
  %19 = ashr exact i64 %15, 3
  %20 = inttoptr i64 %14 to %"class.v8::internal::compiler::InstructionBlock"**
  br label %21

21:                                               ; preds = %32, %2
  %22 = phi %"class.v8::internal::compiler::InstructionBlock"* [ %1, %2 ], [ %34, %32 ]
  %23 = getelementptr inbounds %"class.v8::internal::compiler::InstructionBlock", %"class.v8::internal::compiler::InstructionBlock"* %22, i64 0, i32 4, i32 0
  %24 = load i32, i32* %23, align 4
  %25 = icmp slt i32 %24, %18
  br i1 %25, label %26, label %38

26:                                               ; preds = %21
  %27 = add nsw i32 %24, 1
  %28 = sext i32 %27 to i64
  %29 = icmp ugt i64 %19, %28
  br i1 %29, label %32, label %30

30:                                               ; preds = %26
  %31 = bitcast %"class.std::__1::vector.1171"* %9 to %"class.std::__1::__vector_base_common"*
  tail call void @_ZNKSt3__120__vector_base_commonILb1EE20__throw_out_of_rangeEv(%"class.std::__1::__vector_base_common"* %31) #17
  unreachable

32:                                               ; preds = %26
  %33 = getelementptr inbounds %"class.v8::internal::compiler::InstructionBlock"*, %"class.v8::internal::compiler::InstructionBlock"** %20, i64 %28
  %34 = load %"class.v8::internal::compiler::InstructionBlock"*, %"class.v8::internal::compiler::InstructionBlock"** %33, align 8
  %35 = getelementptr inbounds %"class.v8::internal::compiler::InstructionBlock", %"class.v8::internal::compiler::InstructionBlock"* %34, i64 0, i32 10
  %36 = load i8, i8* %35, align 4, !range !3
  %37 = icmp eq i8 %36, 0
  br i1 %37, label %38, label %21

38:                                               ; preds = %32, %21
  %39 = getelementptr inbounds %"class.v8::internal::compiler::InstructionBlock", %"class.v8::internal::compiler::InstructionBlock"* %22, i64 0, i32 9
  %40 = load i32, i32* %39, align 8
  %41 = add nsw i32 %40, -1
  ret i32 %41
}

; Function Attrs: inlinehint nounwind ssp uwtable
define internal fastcc void @"_ZZN2v88internal8compiler19LinearScanAllocator25UpdateDeferredFixedRangesENS1_29TopTierRegisterAllocationData9SpillModeEPNS1_16InstructionBlockEENK3$_3clEPNS1_9LiveRangeE"(%class.anon.1435* nocapture readonly, %"class.v8::internal::compiler::LiveRange"*) unnamed_addr #5 align 2 {
  %3 = alloca %class.anon.1522, align 8
  %4 = alloca %"class.std::__1::function.1524", align 8
  %5 = alloca %"class.std::__1::function.1524", align 8
  %6 = getelementptr inbounds %class.anon.1435, %class.anon.1435* %0, i64 0, i32 0
  %7 = load %"class.v8::internal::compiler::LinearScanAllocator"*, %"class.v8::internal::compiler::LinearScanAllocator"** %6, align 8
  tail call void @_ZN2v88internal8compiler19LinearScanAllocator13AddToInactiveEPNS1_9LiveRangeE(%"class.v8::internal::compiler::LinearScanAllocator"* %7, %"class.v8::internal::compiler::LiveRange"* %1)
  %8 = bitcast %class.anon.1522* %3 to i8*
  call void @llvm.lifetime.start.p0i8(i64 16, i8* nonnull %8) #16
  %9 = getelementptr inbounds %class.anon.1522, %class.anon.1522* %3, i64 0, i32 0
  store %"class.v8::internal::compiler::LinearScanAllocator"* %7, %"class.v8::internal::compiler::LinearScanAllocator"** %9, align 8
  %10 = getelementptr inbounds %class.anon.1435, %class.anon.1435* %0, i64 0, i32 1, i32 0
  %11 = getelementptr inbounds %class.anon.1522, %class.anon.1522* %3, i64 0, i32 1, i32 0
  %12 = load i32, i32* %10, align 8
  store i32 %12, i32* %11, align 8
  %13 = getelementptr inbounds %"class.v8::internal::compiler::LinearScanAllocator", %"class.v8::internal::compiler::LinearScanAllocator"* %7, i64 0, i32 2, i32 0, i32 0, i32 0
  %14 = load %"class.v8::internal::compiler::LiveRange"**, %"class.v8::internal::compiler::LiveRange"*** %13, align 8
  %15 = getelementptr inbounds %"class.v8::internal::compiler::LinearScanAllocator", %"class.v8::internal::compiler::LinearScanAllocator"* %7, i64 0, i32 2, i32 0, i32 0, i32 1
  %16 = load %"class.v8::internal::compiler::LiveRange"**, %"class.v8::internal::compiler::LiveRange"*** %15, align 8
  %17 = icmp eq %"class.v8::internal::compiler::LiveRange"** %14, %16
  br i1 %17, label %24, label %18

18:                                               ; preds = %2
  %19 = ptrtoint %"class.v8::internal::compiler::LinearScanAllocator"* %7 to i64
  %20 = getelementptr inbounds %"class.std::__1::function.1524", %"class.std::__1::function.1524"* %4, i64 0, i32 0, i32 1, i32 0
  %21 = getelementptr inbounds %"class.std::__1::function.1524", %"class.std::__1::function.1524"* %4, i64 0, i32 0, i32 2
  %22 = bitcast %"class.std::__1::function.1524"* %4 to i64*
  %23 = getelementptr inbounds %"class.std::__1::function.1524", %"class.std::__1::function.1524"* %4, i64 0, i32 0, i32 0, i32 0
  br label %36

24:                                               ; preds = %45, %2
  %25 = getelementptr inbounds %"class.v8::internal::compiler::LinearScanAllocator", %"class.v8::internal::compiler::LinearScanAllocator"* %7, i64 0, i32 0, i32 2
  %26 = load i32, i32* %25, align 4
  %27 = icmp sgt i32 %26, 0
  br i1 %27, label %28, label %48

28:                                               ; preds = %24
  %29 = getelementptr inbounds %"class.v8::internal::compiler::LiveRange", %"class.v8::internal::compiler::LiveRange"* %1, i64 0, i32 1
  %30 = getelementptr inbounds %"class.v8::internal::compiler::LinearScanAllocator", %"class.v8::internal::compiler::LinearScanAllocator"* %7, i64 0, i32 3, i32 0, i32 0, i32 0
  %31 = ptrtoint %"class.v8::internal::compiler::LinearScanAllocator"* %7 to i64
  %32 = getelementptr inbounds %"class.std::__1::function.1524", %"class.std::__1::function.1524"* %5, i64 0, i32 0, i32 1, i32 0
  %33 = getelementptr inbounds %"class.std::__1::function.1524", %"class.std::__1::function.1524"* %5, i64 0, i32 0, i32 2
  %34 = bitcast %"class.std::__1::function.1524"* %5 to i64*
  %35 = getelementptr inbounds %"class.std::__1::function.1524", %"class.std::__1::function.1524"* %5, i64 0, i32 0, i32 0, i32 0
  br label %49

36:                                               ; preds = %18, %45
  %37 = phi %"class.v8::internal::compiler::LiveRange"** [ %14, %18 ], [ %46, %45 ]
  %38 = load %"class.v8::internal::compiler::LiveRange"*, %"class.v8::internal::compiler::LiveRange"** %37, align 8
  store void (%"union.std::__1::__function::__policy_storage"*, %"class.v8::internal::compiler::LiveRange"*)* @"_ZNSt3__110__function16__policy_invokerIFvPN2v88internal8compiler9LiveRangeEEE11__call_implINS0_20__default_alloc_funcIZZNS4_19LinearScanAllocator25UpdateDeferredFixedRangesENS4_29TopTierRegisterAllocationData9SpillModeEPNS4_16InstructionBlockEENK3$_3clES6_EUlS6_E_S7_EEEEvPKNS0_16__policy_storageES6_", void (%"union.std::__1::__function::__policy_storage"*, %"class.v8::internal::compiler::LiveRange"*)** %20, align 8
  store %"struct.std::__1::__function::__policy"* @"_ZZNSt3__110__function8__policy15__choose_policyINS0_20__default_alloc_funcIZZN2v88internal8compiler19LinearScanAllocator25UpdateDeferredFixedRangesENS6_29TopTierRegisterAllocationData9SpillModeEPNS6_16InstructionBlockEENK3$_3clEPNS6_9LiveRangeEEUlSE_E_FvSE_EEEEEPKS1_NS_17integral_constantIbLb1EEEE9__policy_", %"struct.std::__1::__function::__policy"** %21, align 8
  store i64 %19, i64* %22, align 8
  call fastcc void @"_ZZZN2v88internal8compiler19LinearScanAllocator25UpdateDeferredFixedRangesENS1_29TopTierRegisterAllocationData9SpillModeEPNS1_16InstructionBlockEENK3$_3clEPNS1_9LiveRangeEENKUlS9_S9_NSt3__18functionIFvS9_EEEE_clES9_S9_SD_"(%class.anon.1522* nonnull %3, %"class.v8::internal::compiler::LiveRange"* %1, %"class.v8::internal::compiler::LiveRange"* %38, %"class.std::__1::function.1524"* nonnull %4)
  %39 = load %"struct.std::__1::__function::__policy"*, %"struct.std::__1::__function::__policy"** %21, align 8
  %40 = getelementptr inbounds %"struct.std::__1::__function::__policy", %"struct.std::__1::__function::__policy"* %39, i64 0, i32 1
  %41 = load void (i8*)*, void (i8*)** %40, align 8
  %42 = icmp eq void (i8*)* %41, null
  br i1 %42, label %45, label %43

43:                                               ; preds = %36
  %44 = load i8*, i8** %23, align 8
  call void %41(i8* %44) #16
  br label %45

45:                                               ; preds = %36, %43
  %46 = getelementptr inbounds %"class.v8::internal::compiler::LiveRange"*, %"class.v8::internal::compiler::LiveRange"** %37, i64 1
  %47 = icmp eq %"class.v8::internal::compiler::LiveRange"** %46, %16
  br i1 %47, label %24, label %36

48:                                               ; preds = %107, %24
  call void @llvm.lifetime.end.p0i8(i64 16, i8* nonnull %8) #16
  ret void

49:                                               ; preds = %28, %107
  %50 = phi i32 [ %26, %28 ], [ %108, %107 ]
  %51 = phi i64 [ 0, %28 ], [ %109, %107 ]
  %52 = load i32, i32* %29, align 4
  %53 = lshr i32 %52, 7
  %54 = and i32 %53, 63
  %55 = zext i32 %54 to i64
  %56 = icmp eq i64 %51, %55
  br i1 %56, label %57, label %107

57:                                               ; preds = %49
  %58 = load %"class.v8::internal::ZoneMultiset.1344"*, %"class.v8::internal::ZoneMultiset.1344"** %30, align 8
  %59 = getelementptr inbounds %"class.v8::internal::ZoneMultiset.1344", %"class.v8::internal::ZoneMultiset.1344"* %58, i64 %51, i32 0, i32 0, i32 0
  %60 = load %"class.std::__1::__tree_end_node"*, %"class.std::__1::__tree_end_node"** %59, align 8
  %61 = getelementptr inbounds %"class.v8::internal::ZoneMultiset.1344", %"class.v8::internal::ZoneMultiset.1344"* %58, i64 %51, i32 0, i32 0, i32 1, i32 0, i32 0
  %62 = icmp eq %"class.std::__1::__tree_end_node"* %60, %61
  br i1 %62, label %107, label %63

63:                                               ; preds = %57, %102
  %64 = phi %"class.std::__1::__tree_end_node"* [ %103, %102 ], [ %60, %57 ]
  %65 = getelementptr inbounds %"class.std::__1::__tree_end_node", %"class.std::__1::__tree_end_node"* %64, i64 4
  %66 = bitcast %"class.std::__1::__tree_end_node"* %65 to %"class.v8::internal::compiler::LiveRange"**
  %67 = load %"class.v8::internal::compiler::LiveRange"*, %"class.v8::internal::compiler::LiveRange"** %66, align 8
  store void (%"union.std::__1::__function::__policy_storage"*, %"class.v8::internal::compiler::LiveRange"*)* @"_ZNSt3__110__function16__policy_invokerIFvPN2v88internal8compiler9LiveRangeEEE11__call_implINS0_20__default_alloc_funcIZZNS4_19LinearScanAllocator25UpdateDeferredFixedRangesENS4_29TopTierRegisterAllocationData9SpillModeEPNS4_16InstructionBlockEENK3$_3clES6_EUlS6_E0_S7_EEEEvPKNS0_16__policy_storageES6_", void (%"union.std::__1::__function::__policy_storage"*, %"class.v8::internal::compiler::LiveRange"*)** %32, align 8
  store %"struct.std::__1::__function::__policy"* @"_ZZNSt3__110__function8__policy15__choose_policyINS0_20__default_alloc_funcIZZN2v88internal8compiler19LinearScanAllocator25UpdateDeferredFixedRangesENS6_29TopTierRegisterAllocationData9SpillModeEPNS6_16InstructionBlockEENK3$_3clEPNS6_9LiveRangeEEUlSE_E0_FvSE_EEEEEPKS1_NS_17integral_constantIbLb1EEEE9__policy_", %"struct.std::__1::__function::__policy"** %33, align 8
  store i64 %31, i64* %34, align 8
  call fastcc void @"_ZZZN2v88internal8compiler19LinearScanAllocator25UpdateDeferredFixedRangesENS1_29TopTierRegisterAllocationData9SpillModeEPNS1_16InstructionBlockEENK3$_3clEPNS1_9LiveRangeEENKUlS9_S9_NSt3__18functionIFvS9_EEEE_clES9_S9_SD_"(%class.anon.1522* nonnull %3, %"class.v8::internal::compiler::LiveRange"* %1, %"class.v8::internal::compiler::LiveRange"* %67, %"class.std::__1::function.1524"* nonnull %5)
  %68 = load %"struct.std::__1::__function::__policy"*, %"struct.std::__1::__function::__policy"** %33, align 8
  %69 = getelementptr inbounds %"struct.std::__1::__function::__policy", %"struct.std::__1::__function::__policy"* %68, i64 0, i32 1
  %70 = load void (i8*)*, void (i8*)** %69, align 8
  %71 = icmp eq void (i8*)* %70, null
  br i1 %71, label %74, label %72

72:                                               ; preds = %63
  %73 = load i8*, i8** %35, align 8
  call void %70(i8* %73) #16
  br label %74

74:                                               ; preds = %63, %72
  %75 = getelementptr inbounds %"class.std::__1::__tree_end_node", %"class.std::__1::__tree_end_node"* %64, i64 1, i32 0
  %76 = load %"class.std::__1::__tree_node_base"*, %"class.std::__1::__tree_node_base"** %75, align 8
  %77 = icmp eq %"class.std::__1::__tree_node_base"* %76, null
  br i1 %77, label %78, label %86

78:                                               ; preds = %74
  %79 = bitcast %"class.std::__1::__tree_end_node"* %64 to %"class.std::__1::__tree_node_base"*
  %80 = getelementptr inbounds %"class.std::__1::__tree_end_node", %"class.std::__1::__tree_end_node"* %64, i64 2
  %81 = bitcast %"class.std::__1::__tree_end_node"* %80 to %"class.std::__1::__tree_end_node"**
  %82 = load %"class.std::__1::__tree_end_node"*, %"class.std::__1::__tree_end_node"** %81, align 8
  %83 = getelementptr inbounds %"class.std::__1::__tree_end_node", %"class.std::__1::__tree_end_node"* %82, i64 0, i32 0
  %84 = load %"class.std::__1::__tree_node_base"*, %"class.std::__1::__tree_node_base"** %83, align 8
  %85 = icmp eq %"class.std::__1::__tree_node_base"* %84, %79
  br i1 %85, label %102, label %93

86:                                               ; preds = %74, %86
  %87 = phi %"class.std::__1::__tree_node_base"* [ %89, %86 ], [ %76, %74 ]
  %88 = getelementptr inbounds %"class.std::__1::__tree_node_base", %"class.std::__1::__tree_node_base"* %87, i64 0, i32 0, i32 0
  %89 = load %"class.std::__1::__tree_node_base"*, %"class.std::__1::__tree_node_base"** %88, align 8
  %90 = icmp eq %"class.std::__1::__tree_node_base"* %89, null
  br i1 %90, label %91, label %86

91:                                               ; preds = %86
  %92 = getelementptr inbounds %"class.std::__1::__tree_node_base", %"class.std::__1::__tree_node_base"* %87, i64 0, i32 0
  br label %102

93:                                               ; preds = %78, %93
  %94 = phi %"class.std::__1::__tree_end_node"** [ %97, %93 ], [ %81, %78 ]
  %95 = bitcast %"class.std::__1::__tree_end_node"** %94 to %"class.std::__1::__tree_node_base"**
  %96 = load %"class.std::__1::__tree_node_base"*, %"class.std::__1::__tree_node_base"** %95, align 8
  %97 = getelementptr inbounds %"class.std::__1::__tree_node_base", %"class.std::__1::__tree_node_base"* %96, i64 0, i32 2
  %98 = load %"class.std::__1::__tree_end_node"*, %"class.std::__1::__tree_end_node"** %97, align 8
  %99 = getelementptr inbounds %"class.std::__1::__tree_end_node", %"class.std::__1::__tree_end_node"* %98, i64 0, i32 0
  %100 = load %"class.std::__1::__tree_node_base"*, %"class.std::__1::__tree_node_base"** %99, align 8
  %101 = icmp eq %"class.std::__1::__tree_node_base"* %100, %96
  br i1 %101, label %102, label %93

102:                                              ; preds = %93, %78, %91
  %103 = phi %"class.std::__1::__tree_end_node"* [ %92, %91 ], [ %82, %78 ], [ %98, %93 ]
  %104 = icmp eq %"class.std::__1::__tree_end_node"* %103, %61
  br i1 %104, label %105, label %63

105:                                              ; preds = %102
  %106 = load i32, i32* %25, align 4
  br label %107

107:                                              ; preds = %105, %57, %49
  %108 = phi i32 [ %106, %105 ], [ %50, %57 ], [ %50, %49 ]
  %109 = add nuw nsw i64 %51, 1
  %110 = sext i32 %108 to i64
  %111 = icmp slt i64 %109, %110
  br i1 %111, label %49, label %48
}

; Function Attrs: nounwind ssp uwtable
define hidden zeroext i1 @_ZN2v88internal8compiler19LinearScanAllocator50BlockIsDeferredOrImmediatePredecessorIsNotDeferredEPKNS1_16InstructionBlockE(%"class.v8::internal::compiler::LinearScanAllocator"* nocapture readonly, %"class.v8::internal::compiler::InstructionBlock"* nocapture readonly) local_unnamed_addr #0 align 2 {
  %3 = getelementptr inbounds %"class.v8::internal::compiler::InstructionBlock", %"class.v8::internal::compiler::InstructionBlock"* %1, i64 0, i32 10
  %4 = load i8, i8* %3, align 4, !range !3
  %5 = icmp eq i8 %4, 0
  br i1 %5, label %6, label %56

6:                                                ; preds = %2
  %7 = getelementptr inbounds %"class.v8::internal::compiler::InstructionBlock", %"class.v8::internal::compiler::InstructionBlock"* %1, i64 0, i32 1, i32 0
  %8 = getelementptr inbounds %"class.v8::internal::compiler::InstructionBlock", %"class.v8::internal::compiler::InstructionBlock"* %1, i64 0, i32 1, i32 0, i32 0, i32 1
  %9 = bitcast %"class.v8::internal::compiler::RpoNumber"** %8 to i64*
  %10 = load i64, i64* %9, align 8
  %11 = bitcast %"class.std::__1::vector.38"* %7 to i64*
  %12 = load i64, i64* %11, align 8
  %13 = icmp eq i64 %10, %12
  %14 = inttoptr i64 %12 to %"class.v8::internal::compiler::RpoNumber"*
  %15 = inttoptr i64 %10 to %"class.v8::internal::compiler::RpoNumber"*
  %16 = icmp eq %"class.v8::internal::compiler::RpoNumber"* %14, %15
  %17 = or i1 %13, %16
  br i1 %17, label %56, label %18

18:                                               ; preds = %6
  %19 = getelementptr inbounds %"class.v8::internal::compiler::InstructionBlock", %"class.v8::internal::compiler::InstructionBlock"* %1, i64 0, i32 4, i32 0
  %20 = load i32, i32* %19, align 4
  br label %23

21:                                               ; preds = %23
  %22 = icmp eq %"class.v8::internal::compiler::RpoNumber"* %29, %15
  br i1 %22, label %56, label %23

23:                                               ; preds = %18, %21
  %24 = phi %"class.v8::internal::compiler::RpoNumber"* [ %14, %18 ], [ %29, %21 ]
  %25 = getelementptr inbounds %"class.v8::internal::compiler::RpoNumber", %"class.v8::internal::compiler::RpoNumber"* %24, i64 0, i32 0
  %26 = load i32, i32* %25, align 4
  %27 = add nsw i32 %26, 1
  %28 = icmp eq i32 %27, %20
  %29 = getelementptr inbounds %"class.v8::internal::compiler::RpoNumber", %"class.v8::internal::compiler::RpoNumber"* %24, i64 1
  br i1 %28, label %30, label %21

30:                                               ; preds = %23
  %31 = getelementptr inbounds %"class.v8::internal::compiler::LinearScanAllocator", %"class.v8::internal::compiler::LinearScanAllocator"* %0, i64 0, i32 0, i32 0
  %32 = load %"class.v8::internal::compiler::TopTierRegisterAllocationData"*, %"class.v8::internal::compiler::TopTierRegisterAllocationData"** %31, align 8
  %33 = getelementptr inbounds %"class.v8::internal::compiler::TopTierRegisterAllocationData", %"class.v8::internal::compiler::TopTierRegisterAllocationData"* %32, i64 0, i32 3
  %34 = load %"class.v8::internal::compiler::InstructionSequence"*, %"class.v8::internal::compiler::InstructionSequence"** %33, align 8
  %35 = getelementptr inbounds %"class.v8::internal::compiler::InstructionSequence", %"class.v8::internal::compiler::InstructionSequence"* %34, i64 0, i32 2
  %36 = bitcast %"class.v8::internal::ZoneVector.1170"** %35 to %"class.std::__1::vector.1171"**
  %37 = load %"class.std::__1::vector.1171"*, %"class.std::__1::vector.1171"** %36, align 8
  %38 = sext i32 %26 to i64
  %39 = getelementptr inbounds %"class.std::__1::vector.1171", %"class.std::__1::vector.1171"* %37, i64 0, i32 0, i32 1
  %40 = bitcast %"class.v8::internal::compiler::InstructionBlock"*** %39 to i64*
  %41 = load i64, i64* %40, align 8
  %42 = bitcast %"class.std::__1::vector.1171"* %37 to i64*
  %43 = load i64, i64* %42, align 8
  %44 = sub i64 %41, %43
  %45 = ashr exact i64 %44, 3
  %46 = icmp ugt i64 %45, %38
  br i1 %46, label %49, label %47

47:                                               ; preds = %30
  %48 = bitcast %"class.std::__1::vector.1171"* %37 to %"class.std::__1::__vector_base_common"*
  tail call void @_ZNKSt3__120__vector_base_commonILb1EE20__throw_out_of_rangeEv(%"class.std::__1::__vector_base_common"* %48) #17
  unreachable

49:                                               ; preds = %30
  %50 = inttoptr i64 %43 to %"class.v8::internal::compiler::InstructionBlock"**
  %51 = getelementptr inbounds %"class.v8::internal::compiler::InstructionBlock"*, %"class.v8::internal::compiler::InstructionBlock"** %50, i64 %38
  %52 = load %"class.v8::internal::compiler::InstructionBlock"*, %"class.v8::internal::compiler::InstructionBlock"** %51, align 8
  %53 = getelementptr inbounds %"class.v8::internal::compiler::InstructionBlock", %"class.v8::internal::compiler::InstructionBlock"* %52, i64 0, i32 10
  %54 = load i8, i8* %53, align 4, !range !3
  %55 = icmp eq i8 %54, 0
  br label %56

56:                                               ; preds = %21, %49, %2, %6
  %57 = phi i1 [ true, %2 ], [ true, %6 ], [ %55, %49 ], [ true, %21 ]
  ret i1 %57
}

; Function Attrs: nounwind ssp uwtable
define hidden zeroext i1 @_ZN2v88internal8compiler19LinearScanAllocator25HasNonDeferredPredecessorEPNS1_16InstructionBlockE(%"class.v8::internal::compiler::LinearScanAllocator"* nocapture readonly, %"class.v8::internal::compiler::InstructionBlock"* nocapture readonly) local_unnamed_addr #0 align 2 {
  %3 = getelementptr inbounds %"class.v8::internal::compiler::InstructionBlock", %"class.v8::internal::compiler::InstructionBlock"* %1, i64 0, i32 1, i32 0, i32 0, i32 0
  %4 = load %"class.v8::internal::compiler::RpoNumber"*, %"class.v8::internal::compiler::RpoNumber"** %3, align 8
  %5 = getelementptr inbounds %"class.v8::internal::compiler::InstructionBlock", %"class.v8::internal::compiler::InstructionBlock"* %1, i64 0, i32 1, i32 0, i32 0, i32 1
  %6 = load %"class.v8::internal::compiler::RpoNumber"*, %"class.v8::internal::compiler::RpoNumber"** %5, align 8
  %7 = icmp eq %"class.v8::internal::compiler::RpoNumber"* %4, %6
  br i1 %7, label %41, label %8

8:                                                ; preds = %2
  %9 = getelementptr inbounds %"class.v8::internal::compiler::LinearScanAllocator", %"class.v8::internal::compiler::LinearScanAllocator"* %0, i64 0, i32 0, i32 0
  %10 = load %"class.v8::internal::compiler::TopTierRegisterAllocationData"*, %"class.v8::internal::compiler::TopTierRegisterAllocationData"** %9, align 8
  %11 = getelementptr inbounds %"class.v8::internal::compiler::TopTierRegisterAllocationData", %"class.v8::internal::compiler::TopTierRegisterAllocationData"* %10, i64 0, i32 3
  %12 = load %"class.v8::internal::compiler::InstructionSequence"*, %"class.v8::internal::compiler::InstructionSequence"** %11, align 8
  %13 = getelementptr inbounds %"class.v8::internal::compiler::InstructionSequence", %"class.v8::internal::compiler::InstructionSequence"* %12, i64 0, i32 2
  %14 = bitcast %"class.v8::internal::ZoneVector.1170"** %13 to %"class.std::__1::vector.1171"**
  %15 = load %"class.std::__1::vector.1171"*, %"class.std::__1::vector.1171"** %14, align 8
  %16 = getelementptr inbounds %"class.std::__1::vector.1171", %"class.std::__1::vector.1171"* %15, i64 0, i32 0, i32 1
  %17 = bitcast %"class.v8::internal::compiler::InstructionBlock"*** %16 to i64*
  %18 = load i64, i64* %17, align 8
  %19 = bitcast %"class.std::__1::vector.1171"* %15 to i64*
  %20 = load i64, i64* %19, align 8
  %21 = sub i64 %18, %20
  %22 = ashr exact i64 %21, 3
  %23 = inttoptr i64 %20 to %"class.v8::internal::compiler::InstructionBlock"**
  br label %26

24:                                               ; preds = %34
  %25 = icmp eq %"class.v8::internal::compiler::RpoNumber"* %40, %6
  br i1 %25, label %41, label %26

26:                                               ; preds = %8, %24
  %27 = phi %"class.v8::internal::compiler::RpoNumber"* [ %4, %8 ], [ %40, %24 ]
  %28 = getelementptr inbounds %"class.v8::internal::compiler::RpoNumber", %"class.v8::internal::compiler::RpoNumber"* %27, i64 0, i32 0
  %29 = load i32, i32* %28, align 4
  %30 = sext i32 %29 to i64
  %31 = icmp ugt i64 %22, %30
  br i1 %31, label %34, label %32

32:                                               ; preds = %26
  %33 = bitcast %"class.std::__1::vector.1171"* %15 to %"class.std::__1::__vector_base_common"*
  tail call void @_ZNKSt3__120__vector_base_commonILb1EE20__throw_out_of_rangeEv(%"class.std::__1::__vector_base_common"* %33) #17
  unreachable

34:                                               ; preds = %26
  %35 = getelementptr inbounds %"class.v8::internal::compiler::InstructionBlock"*, %"class.v8::internal::compiler::InstructionBlock"** %23, i64 %30
  %36 = load %"class.v8::internal::compiler::InstructionBlock"*, %"class.v8::internal::compiler::InstructionBlock"** %35, align 8
  %37 = getelementptr inbounds %"class.v8::internal::compiler::InstructionBlock", %"class.v8::internal::compiler::InstructionBlock"* %36, i64 0, i32 10
  %38 = load i8, i8* %37, align 4, !range !3
  %39 = icmp eq i8 %38, 0
  %40 = getelementptr inbounds %"class.v8::internal::compiler::RpoNumber", %"class.v8::internal::compiler::RpoNumber"* %27, i64 1
  br i1 %39, label %41, label %24

41:                                               ; preds = %24, %34, %2
  %42 = phi i1 [ false, %2 ], [ true, %34 ], [ false, %24 ]
  ret i1 %42
}

; Function Attrs: nounwind ssp uwtable
define hidden void @_ZN2v88internal8compiler19LinearScanAllocator17AllocateRegistersEv(%"class.v8::internal::compiler::LinearScanAllocator"*) local_unnamed_addr #0 align 2 {
  %2 = alloca %"class.v8::internal::compiler::LiveRange"*, align 8
  %3 = alloca %"class.v8::internal::EmbeddedVector.1439", align 8
  %4 = alloca %"class.v8::internal::ZoneUnorderedSet", align 8
  %5 = alloca %class.anon.1437, align 8
  %6 = bitcast %"class.v8::internal::compiler::LinearScanAllocator"* %0 to %"class.v8::internal::compiler::RegisterAllocator"*
  tail call void @_ZN2v88internal8compiler17RegisterAllocator41SplitAndSpillRangesDefinedByMemoryOperandEv(%"class.v8::internal::compiler::RegisterAllocator"* %6)
  %7 = getelementptr inbounds %"class.v8::internal::compiler::LinearScanAllocator", %"class.v8::internal::compiler::LinearScanAllocator"* %0, i64 0, i32 0, i32 0
  %8 = load %"class.v8::internal::compiler::TopTierRegisterAllocationData"*, %"class.v8::internal::compiler::TopTierRegisterAllocationData"** %7, align 8
  %9 = getelementptr inbounds %"class.v8::internal::compiler::TopTierRegisterAllocationData", %"class.v8::internal::compiler::TopTierRegisterAllocationData"* %8, i64 0, i32 22, i32 0, i32 0, i32 0
  %10 = load %"class.v8::internal::ZoneVector.1309"*, %"class.v8::internal::ZoneVector.1309"** %9, align 8
  %11 = getelementptr inbounds %"class.v8::internal::compiler::TopTierRegisterAllocationData", %"class.v8::internal::compiler::TopTierRegisterAllocationData"* %8, i64 0, i32 22, i32 0, i32 0, i32 1
  %12 = load %"class.v8::internal::ZoneVector.1309"*, %"class.v8::internal::ZoneVector.1309"** %11, align 8
  %13 = icmp eq %"class.v8::internal::ZoneVector.1309"* %10, %12
  br i1 %13, label %81, label %14

14:                                               ; preds = %1
  %15 = ptrtoint %"class.v8::internal::ZoneVector.1309"* %10 to i64
  %16 = getelementptr %"class.v8::internal::ZoneVector.1309", %"class.v8::internal::ZoneVector.1309"* %12, i64 -1, i32 0, i32 0, i32 0
  %17 = ptrtoint %"class.v8::internal::compiler::LiveRange"*** %16 to i64
  %18 = sub i64 %17, %15
  %19 = lshr i64 %18, 5
  %20 = add nuw nsw i64 %19, 1
  %21 = and i64 %20, 7
  %22 = icmp eq i64 %21, 0
  br i1 %22, label %33, label %23

23:                                               ; preds = %14, %23
  %24 = phi %"class.v8::internal::ZoneVector.1309"* [ %30, %23 ], [ %10, %14 ]
  %25 = phi i64 [ %31, %23 ], [ %21, %14 ]
  %26 = bitcast %"class.v8::internal::ZoneVector.1309"* %24 to i64*
  %27 = load i64, i64* %26, align 8
  %28 = getelementptr inbounds %"class.v8::internal::ZoneVector.1309", %"class.v8::internal::ZoneVector.1309"* %24, i64 0, i32 0, i32 0, i32 1
  %29 = bitcast %"class.v8::internal::compiler::LiveRange"*** %28 to i64*
  store i64 %27, i64* %29, align 8
  %30 = getelementptr inbounds %"class.v8::internal::ZoneVector.1309", %"class.v8::internal::ZoneVector.1309"* %24, i64 1
  %31 = add i64 %25, -1
  %32 = icmp eq i64 %31, 0
  br i1 %32, label %33, label %23, !llvm.loop !143

33:                                               ; preds = %23, %14
  %34 = phi %"class.v8::internal::ZoneVector.1309"* [ %10, %14 ], [ %30, %23 ]
  %35 = icmp ult i64 %18, 224
  br i1 %35, label %79, label %36

36:                                               ; preds = %33, %36
  %37 = phi %"class.v8::internal::ZoneVector.1309"* [ %77, %36 ], [ %34, %33 ]
  %38 = bitcast %"class.v8::internal::ZoneVector.1309"* %37 to i64*
  %39 = load i64, i64* %38, align 8
  %40 = getelementptr inbounds %"class.v8::internal::ZoneVector.1309", %"class.v8::internal::ZoneVector.1309"* %37, i64 0, i32 0, i32 0, i32 1
  %41 = bitcast %"class.v8::internal::compiler::LiveRange"*** %40 to i64*
  store i64 %39, i64* %41, align 8
  %42 = getelementptr inbounds %"class.v8::internal::ZoneVector.1309", %"class.v8::internal::ZoneVector.1309"* %37, i64 1
  %43 = bitcast %"class.v8::internal::ZoneVector.1309"* %42 to i64*
  %44 = load i64, i64* %43, align 8
  %45 = getelementptr inbounds %"class.v8::internal::ZoneVector.1309", %"class.v8::internal::ZoneVector.1309"* %37, i64 1, i32 0, i32 0, i32 1
  %46 = bitcast %"class.v8::internal::compiler::LiveRange"*** %45 to i64*
  store i64 %44, i64* %46, align 8
  %47 = getelementptr inbounds %"class.v8::internal::ZoneVector.1309", %"class.v8::internal::ZoneVector.1309"* %37, i64 2
  %48 = bitcast %"class.v8::internal::ZoneVector.1309"* %47 to i64*
  %49 = load i64, i64* %48, align 8
  %50 = getelementptr inbounds %"class.v8::internal::ZoneVector.1309", %"class.v8::internal::ZoneVector.1309"* %37, i64 2, i32 0, i32 0, i32 1
  %51 = bitcast %"class.v8::internal::compiler::LiveRange"*** %50 to i64*
  store i64 %49, i64* %51, align 8
  %52 = getelementptr inbounds %"class.v8::internal::ZoneVector.1309", %"class.v8::internal::ZoneVector.1309"* %37, i64 3
  %53 = bitcast %"class.v8::internal::ZoneVector.1309"* %52 to i64*
  %54 = load i64, i64* %53, align 8
  %55 = getelementptr inbounds %"class.v8::internal::ZoneVector.1309", %"class.v8::internal::ZoneVector.1309"* %37, i64 3, i32 0, i32 0, i32 1
  %56 = bitcast %"class.v8::internal::compiler::LiveRange"*** %55 to i64*
  store i64 %54, i64* %56, align 8
  %57 = getelementptr inbounds %"class.v8::internal::ZoneVector.1309", %"class.v8::internal::ZoneVector.1309"* %37, i64 4
  %58 = bitcast %"class.v8::internal::ZoneVector.1309"* %57 to i64*
  %59 = load i64, i64* %58, align 8
  %60 = getelementptr inbounds %"class.v8::internal::ZoneVector.1309", %"class.v8::internal::ZoneVector.1309"* %37, i64 4, i32 0, i32 0, i32 1
  %61 = bitcast %"class.v8::internal::compiler::LiveRange"*** %60 to i64*
  store i64 %59, i64* %61, align 8
  %62 = getelementptr inbounds %"class.v8::internal::ZoneVector.1309", %"class.v8::internal::ZoneVector.1309"* %37, i64 5
  %63 = bitcast %"class.v8::internal::ZoneVector.1309"* %62 to i64*
  %64 = load i64, i64* %63, align 8
  %65 = getelementptr inbounds %"class.v8::internal::ZoneVector.1309", %"class.v8::internal::ZoneVector.1309"* %37, i64 5, i32 0, i32 0, i32 1
  %66 = bitcast %"class.v8::internal::compiler::LiveRange"*** %65 to i64*
  store i64 %64, i64* %66, align 8
  %67 = getelementptr inbounds %"class.v8::internal::ZoneVector.1309", %"class.v8::internal::ZoneVector.1309"* %37, i64 6
  %68 = bitcast %"class.v8::internal::ZoneVector.1309"* %67 to i64*
  %69 = load i64, i64* %68, align 8
  %70 = getelementptr inbounds %"class.v8::internal::ZoneVector.1309", %"class.v8::internal::ZoneVector.1309"* %37, i64 6, i32 0, i32 0, i32 1
  %71 = bitcast %"class.v8::internal::compiler::LiveRange"*** %70 to i64*
  store i64 %69, i64* %71, align 8
  %72 = getelementptr inbounds %"class.v8::internal::ZoneVector.1309", %"class.v8::internal::ZoneVector.1309"* %37, i64 7
  %73 = bitcast %"class.v8::internal::ZoneVector.1309"* %72 to i64*
  %74 = load i64, i64* %73, align 8
  %75 = getelementptr inbounds %"class.v8::internal::ZoneVector.1309", %"class.v8::internal::ZoneVector.1309"* %37, i64 7, i32 0, i32 0, i32 1
  %76 = bitcast %"class.v8::internal::compiler::LiveRange"*** %75 to i64*
  store i64 %74, i64* %76, align 8
  %77 = getelementptr inbounds %"class.v8::internal::ZoneVector.1309", %"class.v8::internal::ZoneVector.1309"* %37, i64 8
  %78 = icmp eq %"class.v8::internal::ZoneVector.1309"* %77, %12
  br i1 %78, label %79, label %36

79:                                               ; preds = %36, %33
  %80 = load %"class.v8::internal::compiler::TopTierRegisterAllocationData"*, %"class.v8::internal::compiler::TopTierRegisterAllocationData"** %7, align 8
  br label %81

81:                                               ; preds = %79, %1
  %82 = phi %"class.v8::internal::compiler::TopTierRegisterAllocationData"* [ %80, %79 ], [ %8, %1 ]
  %83 = getelementptr inbounds %"class.v8::internal::compiler::TopTierRegisterAllocationData", %"class.v8::internal::compiler::TopTierRegisterAllocationData"* %82, i64 0, i32 23, i32 0
  %84 = load i32, i32* %83, align 4
  %85 = and i32 %84, 1
  %86 = icmp eq i32 %85, 0
  br i1 %86, label %89, label %87

87:                                               ; preds = %81
  tail call void @_ZN2v88internal8compiler19LinearScanAllocator18PrintRangeOverviewERNSt3__113basic_ostreamIcNS3_11char_traitsIcEEEE(%"class.v8::internal::compiler::LinearScanAllocator"* %0, %"class.std::__1::basic_ostream"* nonnull dereferenceable(160) @_ZNSt3__14coutE)
  %88 = load %"class.v8::internal::compiler::TopTierRegisterAllocationData"*, %"class.v8::internal::compiler::TopTierRegisterAllocationData"** %7, align 8
  br label %89

89:                                               ; preds = %81, %87
  %90 = phi %"class.v8::internal::compiler::TopTierRegisterAllocationData"* [ %82, %81 ], [ %88, %87 ]
  %91 = getelementptr inbounds %"class.v8::internal::compiler::TopTierRegisterAllocationData", %"class.v8::internal::compiler::TopTierRegisterAllocationData"* %90, i64 0, i32 9, i32 0
  %92 = getelementptr inbounds %"class.v8::internal::compiler::TopTierRegisterAllocationData", %"class.v8::internal::compiler::TopTierRegisterAllocationData"* %90, i64 0, i32 9, i32 0, i32 0, i32 1
  %93 = bitcast %"class.v8::internal::compiler::TopLevelLiveRange"*** %92 to i64*
  %94 = load i64, i64* %93, align 8
  %95 = bitcast %"class.std::__1::vector"* %91 to i64*
  %96 = load i64, i64* %95, align 8
  %97 = sub i64 %94, %96
  %98 = inttoptr i64 %96 to %"class.v8::internal::compiler::TopLevelLiveRange"**
  %99 = inttoptr i64 %94 to %"class.v8::internal::compiler::TopLevelLiveRange"**
  %100 = icmp eq %"class.v8::internal::compiler::TopLevelLiveRange"** %98, %99
  br i1 %100, label %109, label %101

101:                                              ; preds = %89
  %102 = getelementptr inbounds %"class.v8::internal::compiler::LinearScanAllocator", %"class.v8::internal::compiler::LinearScanAllocator"* %0, i64 0, i32 0, i32 1
  %103 = bitcast %"class.v8::internal::compiler::LiveRange"** %2 to i8*
  %104 = getelementptr inbounds %"class.v8::internal::compiler::LinearScanAllocator", %"class.v8::internal::compiler::LinearScanAllocator"* %0, i64 0, i32 1, i32 0, i32 0
  %105 = sub i64 %94, %96
  %106 = icmp eq i64 %97, %105
  br i1 %106, label %107, label %114, !prof !80

107:                                              ; preds = %101
  %108 = inttoptr i64 %96 to %"class.v8::internal::compiler::LiveRange"**
  br label %115

109:                                              ; preds = %165, %89
  %110 = phi %"class.v8::internal::compiler::TopTierRegisterAllocationData"* [ %90, %89 ], [ %168, %165 ]
  %111 = getelementptr inbounds %"class.v8::internal::compiler::LinearScanAllocator", %"class.v8::internal::compiler::LinearScanAllocator"* %0, i64 0, i32 0, i32 1
  %112 = load i32, i32* %111, align 8
  %113 = icmp eq i32 %112, 0
  br i1 %113, label %179, label %199

114:                                              ; preds = %169, %101
  call void (i8*, ...) @_Z8V8_FatalPKcz(i8* getelementptr inbounds ([18 x i8], [18 x i8]* @.str.1, i64 0, i64 0), i8* getelementptr inbounds ([49 x i8], [49 x i8]* @.str.32, i64 0, i64 0)) #17
  unreachable

115:                                              ; preds = %107, %169
  %116 = phi %"class.v8::internal::compiler::LiveRange"** [ %108, %107 ], [ %176, %169 ]
  %117 = phi %"class.v8::internal::compiler::TopLevelLiveRange"** [ %98, %107 ], [ %166, %169 ]
  %118 = load %"class.v8::internal::compiler::LiveRange"*, %"class.v8::internal::compiler::LiveRange"** %116, align 8
  %119 = icmp eq %"class.v8::internal::compiler::LiveRange"* %118, null
  br i1 %119, label %165, label %120

120:                                              ; preds = %115
  %121 = getelementptr inbounds %"class.v8::internal::compiler::LiveRange", %"class.v8::internal::compiler::LiveRange"* %118, i64 0, i32 3
  %122 = load %"class.v8::internal::compiler::UseInterval"*, %"class.v8::internal::compiler::UseInterval"** %121, align 8
  %123 = icmp eq %"class.v8::internal::compiler::UseInterval"* %122, null
  br i1 %123, label %165, label %124

124:                                              ; preds = %120
  %125 = getelementptr inbounds %"class.v8::internal::compiler::LiveRange", %"class.v8::internal::compiler::LiveRange"* %118, i64 0, i32 1
  %126 = load i32, i32* %125, align 4
  %127 = lshr i32 %126, 13
  %128 = trunc i32 %127 to i8
  %129 = icmp ugt i8 %128, 11
  %130 = zext i1 %129 to i32
  %131 = load i32, i32* %102, align 8
  %132 = icmp eq i32 %131, %130
  br i1 %132, label %133, label %165

133:                                              ; preds = %124, %162
  %134 = phi i32 [ %164, %162 ], [ %126, %124 ]
  %135 = phi %"class.v8::internal::compiler::LiveRange"* [ %160, %162 ], [ %118, %124 ]
  %136 = and i32 %134, 1
  %137 = icmp eq i32 %136, 0
  br i1 %137, label %138, label %158

138:                                              ; preds = %133
  call void @llvm.lifetime.start.p0i8(i64 8, i8* nonnull %103)
  store %"class.v8::internal::compiler::LiveRange"* %135, %"class.v8::internal::compiler::LiveRange"** %2, align 8
  %139 = getelementptr inbounds %"class.v8::internal::compiler::LiveRange", %"class.v8::internal::compiler::LiveRange"* %135, i64 0, i32 3
  %140 = load %"class.v8::internal::compiler::UseInterval"*, %"class.v8::internal::compiler::UseInterval"** %139, align 8
  %141 = icmp eq %"class.v8::internal::compiler::UseInterval"* %140, null
  br i1 %141, label %157, label %142

142:                                              ; preds = %138
  %143 = load %"class.v8::internal::compiler::TopTierRegisterAllocationData"*, %"class.v8::internal::compiler::TopTierRegisterAllocationData"** %7, align 8
  %144 = getelementptr inbounds %"class.v8::internal::compiler::TopTierRegisterAllocationData", %"class.v8::internal::compiler::TopTierRegisterAllocationData"* %143, i64 0, i32 23, i32 0
  %145 = load i32, i32* %144, align 4
  %146 = and i32 %145, 1
  %147 = icmp eq i32 %146, 0
  br i1 %147, label %155, label %148

148:                                              ; preds = %142
  %149 = getelementptr inbounds %"class.v8::internal::compiler::LiveRange", %"class.v8::internal::compiler::LiveRange"* %135, i64 0, i32 5
  %150 = load %"class.v8::internal::compiler::TopLevelLiveRange"*, %"class.v8::internal::compiler::TopLevelLiveRange"** %149, align 8
  %151 = getelementptr inbounds %"class.v8::internal::compiler::TopLevelLiveRange", %"class.v8::internal::compiler::TopLevelLiveRange"* %150, i64 0, i32 1
  %152 = load i32, i32* %151, align 4
  %153 = getelementptr inbounds %"class.v8::internal::compiler::LiveRange", %"class.v8::internal::compiler::LiveRange"* %135, i64 0, i32 0
  %154 = load i32, i32* %153, align 8
  call void (i8*, ...) @_ZN2v88internal6PrintFEPKcz(i8* getelementptr inbounds ([35 x i8], [35 x i8]* @.str.80, i64 0, i64 0), i32 %152, i32 %154) #16
  br label %155

155:                                              ; preds = %148, %142
  %156 = call %"class.std::__1::__tree_end_node"* @_ZNSt3__16__treeIPN2v88internal8compiler9LiveRangeENS3_19LinearScanAllocator26UnhandledLiveRangeOrderingENS2_13ZoneAllocatorIS5_EEE15__emplace_multiIJRKS5_EEENS_15__tree_iteratorIS5_PNS_11__tree_nodeIS5_PvEElEEDpOT_(%"class.std::__1::__tree.1338"* %104, %"class.v8::internal::compiler::LiveRange"** nonnull dereferenceable(8) %2) #16
  br label %157

157:                                              ; preds = %138, %155
  call void @llvm.lifetime.end.p0i8(i64 8, i8* nonnull %103)
  br label %158

158:                                              ; preds = %133, %157
  %159 = getelementptr inbounds %"class.v8::internal::compiler::LiveRange", %"class.v8::internal::compiler::LiveRange"* %135, i64 0, i32 6
  %160 = load %"class.v8::internal::compiler::LiveRange"*, %"class.v8::internal::compiler::LiveRange"** %159, align 8
  %161 = icmp eq %"class.v8::internal::compiler::LiveRange"* %160, null
  br i1 %161, label %165, label %162

162:                                              ; preds = %158
  %163 = getelementptr inbounds %"class.v8::internal::compiler::LiveRange", %"class.v8::internal::compiler::LiveRange"* %160, i64 0, i32 1
  %164 = load i32, i32* %163, align 4
  br label %133

165:                                              ; preds = %158, %124, %115, %120
  %166 = getelementptr inbounds %"class.v8::internal::compiler::TopLevelLiveRange"*, %"class.v8::internal::compiler::TopLevelLiveRange"** %117, i64 1
  %167 = icmp eq %"class.v8::internal::compiler::TopLevelLiveRange"** %166, %99
  %168 = load %"class.v8::internal::compiler::TopTierRegisterAllocationData"*, %"class.v8::internal::compiler::TopTierRegisterAllocationData"** %7, align 8
  br i1 %167, label %109, label %169

169:                                              ; preds = %165
  %170 = getelementptr inbounds %"class.v8::internal::compiler::TopTierRegisterAllocationData", %"class.v8::internal::compiler::TopTierRegisterAllocationData"* %168, i64 0, i32 9, i32 0, i32 0, i32 1
  %171 = bitcast %"class.v8::internal::compiler::TopLevelLiveRange"*** %170 to i64*
  %172 = load i64, i64* %171, align 8
  %173 = getelementptr inbounds %"class.v8::internal::compiler::TopTierRegisterAllocationData", %"class.v8::internal::compiler::TopTierRegisterAllocationData"* %168, i64 0, i32 9, i32 0
  %174 = bitcast %"class.std::__1::vector"* %173 to i64*
  %175 = load i64, i64* %174, align 8
  %176 = bitcast %"class.v8::internal::compiler::TopLevelLiveRange"** %166 to %"class.v8::internal::compiler::LiveRange"**
  %177 = sub i64 %172, %175
  %178 = icmp eq i64 %97, %177
  br i1 %178, label %115, label %114, !prof !80

179:                                              ; preds = %109
  %180 = getelementptr inbounds %"class.v8::internal::compiler::TopTierRegisterAllocationData", %"class.v8::internal::compiler::TopTierRegisterAllocationData"* %110, i64 0, i32 10, i32 0, i32 0, i32 0
  %181 = load %"class.v8::internal::compiler::TopLevelLiveRange"**, %"class.v8::internal::compiler::TopLevelLiveRange"*** %180, align 8
  %182 = getelementptr inbounds %"class.v8::internal::compiler::TopTierRegisterAllocationData", %"class.v8::internal::compiler::TopTierRegisterAllocationData"* %110, i64 0, i32 10, i32 0, i32 0, i32 1
  %183 = load %"class.v8::internal::compiler::TopLevelLiveRange"**, %"class.v8::internal::compiler::TopLevelLiveRange"*** %182, align 8
  %184 = icmp eq %"class.v8::internal::compiler::TopLevelLiveRange"** %181, %183
  br i1 %184, label %219, label %185

185:                                              ; preds = %179, %196
  %186 = phi %"class.v8::internal::compiler::TopLevelLiveRange"** [ %197, %196 ], [ %181, %179 ]
  %187 = load %"class.v8::internal::compiler::TopLevelLiveRange"*, %"class.v8::internal::compiler::TopLevelLiveRange"** %186, align 8
  %188 = icmp eq %"class.v8::internal::compiler::TopLevelLiveRange"* %187, null
  br i1 %188, label %196, label %189

189:                                              ; preds = %185
  %190 = getelementptr inbounds %"class.v8::internal::compiler::TopLevelLiveRange", %"class.v8::internal::compiler::TopLevelLiveRange"* %187, i64 0, i32 0, i32 1
  %191 = load i32, i32* %190, align 4
  %192 = and i32 %191, 268435456
  %193 = icmp eq i32 %192, 0
  br i1 %193, label %194, label %196

194:                                              ; preds = %189
  %195 = bitcast %"class.v8::internal::compiler::TopLevelLiveRange"* %187 to %"class.v8::internal::compiler::LiveRange"*
  call void @_ZN2v88internal8compiler19LinearScanAllocator13AddToInactiveEPNS1_9LiveRangeE(%"class.v8::internal::compiler::LinearScanAllocator"* %0, %"class.v8::internal::compiler::LiveRange"* nonnull %195)
  br label %196

196:                                              ; preds = %189, %194, %185
  %197 = getelementptr inbounds %"class.v8::internal::compiler::TopLevelLiveRange"*, %"class.v8::internal::compiler::TopLevelLiveRange"** %186, i64 1
  %198 = icmp eq %"class.v8::internal::compiler::TopLevelLiveRange"** %197, %183
  br i1 %198, label %219, label %185

199:                                              ; preds = %109
  %200 = getelementptr inbounds %"class.v8::internal::compiler::TopTierRegisterAllocationData", %"class.v8::internal::compiler::TopTierRegisterAllocationData"* %110, i64 0, i32 12, i32 0, i32 0, i32 0
  %201 = load %"class.v8::internal::compiler::TopLevelLiveRange"**, %"class.v8::internal::compiler::TopLevelLiveRange"*** %200, align 8
  %202 = getelementptr inbounds %"class.v8::internal::compiler::TopTierRegisterAllocationData", %"class.v8::internal::compiler::TopTierRegisterAllocationData"* %110, i64 0, i32 12, i32 0, i32 0, i32 1
  %203 = load %"class.v8::internal::compiler::TopLevelLiveRange"**, %"class.v8::internal::compiler::TopLevelLiveRange"*** %202, align 8
  %204 = icmp eq %"class.v8::internal::compiler::TopLevelLiveRange"** %201, %203
  br i1 %204, label %219, label %205

205:                                              ; preds = %199, %216
  %206 = phi %"class.v8::internal::compiler::TopLevelLiveRange"** [ %217, %216 ], [ %201, %199 ]
  %207 = load %"class.v8::internal::compiler::TopLevelLiveRange"*, %"class.v8::internal::compiler::TopLevelLiveRange"** %206, align 8
  %208 = icmp eq %"class.v8::internal::compiler::TopLevelLiveRange"* %207, null
  br i1 %208, label %216, label %209

209:                                              ; preds = %205
  %210 = getelementptr inbounds %"class.v8::internal::compiler::TopLevelLiveRange", %"class.v8::internal::compiler::TopLevelLiveRange"* %207, i64 0, i32 0, i32 1
  %211 = load i32, i32* %210, align 4
  %212 = and i32 %211, 268435456
  %213 = icmp eq i32 %212, 0
  br i1 %213, label %214, label %216

214:                                              ; preds = %209
  %215 = bitcast %"class.v8::internal::compiler::TopLevelLiveRange"* %207 to %"class.v8::internal::compiler::LiveRange"*
  call void @_ZN2v88internal8compiler19LinearScanAllocator13AddToInactiveEPNS1_9LiveRangeE(%"class.v8::internal::compiler::LinearScanAllocator"* %0, %"class.v8::internal::compiler::LiveRange"* nonnull %215)
  br label %216

216:                                              ; preds = %209, %214, %205
  %217 = getelementptr inbounds %"class.v8::internal::compiler::TopLevelLiveRange"*, %"class.v8::internal::compiler::TopLevelLiveRange"** %206, i64 1
  %218 = icmp eq %"class.v8::internal::compiler::TopLevelLiveRange"** %217, %203
  br i1 %218, label %219, label %205

219:                                              ; preds = %216, %196, %199, %179
  %220 = load %"class.v8::internal::compiler::TopTierRegisterAllocationData"*, %"class.v8::internal::compiler::TopTierRegisterAllocationData"** %7, align 8
  %221 = getelementptr inbounds %"class.v8::internal::compiler::TopTierRegisterAllocationData", %"class.v8::internal::compiler::TopTierRegisterAllocationData"* %220, i64 0, i32 3
  %222 = load %"class.v8::internal::compiler::InstructionSequence"*, %"class.v8::internal::compiler::InstructionSequence"** %221, align 8
  %223 = getelementptr inbounds %"class.v8::internal::compiler::InstructionSequence", %"class.v8::internal::compiler::InstructionSequence"* %222, i64 0, i32 2
  %224 = bitcast %"class.v8::internal::ZoneVector.1170"** %223 to %"class.std::__1::vector.1171"**
  %225 = load %"class.std::__1::vector.1171"*, %"class.std::__1::vector.1171"** %224, align 8
  %226 = getelementptr inbounds %"class.std::__1::vector.1171", %"class.std::__1::vector.1171"* %225, i64 0, i32 0, i32 1
  %227 = bitcast %"class.v8::internal::compiler::InstructionBlock"*** %226 to i64*
  %228 = load i64, i64* %227, align 8
  %229 = bitcast %"class.std::__1::vector.1171"* %225 to i64*
  %230 = load i64, i64* %229, align 8
  %231 = sub i64 %228, %230
  %232 = lshr exact i64 %231, 3
  %233 = trunc i64 %232 to i32
  %234 = add nsw i32 %233, -1
  %235 = icmp eq i64 %231, 0
  br i1 %235, label %236, label %238

236:                                              ; preds = %219
  %237 = bitcast %"class.std::__1::vector.1171"* %225 to %"class.std::__1::__vector_base_common"*
  call void @_ZNKSt3__120__vector_base_commonILb1EE20__throw_out_of_rangeEv(%"class.std::__1::__vector_base_common"* %237) #17
  unreachable

238:                                              ; preds = %219
  %239 = inttoptr i64 %230 to %"class.v8::internal::compiler::InstructionBlock"**
  %240 = load %"class.v8::internal::compiler::InstructionBlock"*, %"class.v8::internal::compiler::InstructionBlock"** %239, align 8
  %241 = getelementptr inbounds %"class.v8::internal::compiler::LinearScanAllocator", %"class.v8::internal::compiler::LinearScanAllocator"* %0, i64 0, i32 1, i32 0
  %242 = getelementptr inbounds %"class.v8::internal::compiler::LinearScanAllocator", %"class.v8::internal::compiler::LinearScanAllocator"* %0, i64 0, i32 1, i32 0, i32 0, i32 2, i32 0, i32 0
  %243 = bitcast %"class.std::__1::multiset"* %241 to %"class.std::__1::__tree_node.1501"**
  %244 = getelementptr inbounds %"class.std::__1::multiset", %"class.std::__1::multiset"* %241, i64 0, i32 0, i32 0
  %245 = bitcast %"class.std::__1::multiset"* %241 to i64*
  %246 = getelementptr inbounds %"class.v8::internal::compiler::LinearScanAllocator", %"class.v8::internal::compiler::LinearScanAllocator"* %0, i64 0, i32 1, i32 0, i32 0, i32 1, i32 0, i32 0, i32 0
  %247 = bitcast %"class.v8::internal::EmbeddedVector.1439"* %3 to i8*
  %248 = getelementptr inbounds %"class.v8::internal::EmbeddedVector.1439", %"class.v8::internal::EmbeddedVector.1439"* %3, i64 0, i32 1, i64 0
  %249 = getelementptr inbounds %"class.v8::internal::EmbeddedVector.1439", %"class.v8::internal::EmbeddedVector.1439"* %3, i64 0, i32 0, i32 0
  %250 = getelementptr inbounds %"class.v8::internal::EmbeddedVector.1439", %"class.v8::internal::EmbeddedVector.1439"* %3, i64 0, i32 0, i32 1
  %251 = bitcast %"class.v8::internal::compiler::LifetimePosition"* %248 to i8*
  %252 = getelementptr inbounds %"class.v8::internal::EmbeddedVector.1439", %"class.v8::internal::EmbeddedVector.1439"* %3, i64 0, i32 0
  %253 = getelementptr inbounds %"class.v8::internal::compiler::LinearScanAllocator", %"class.v8::internal::compiler::LinearScanAllocator"* %0, i64 0, i32 2
  %254 = getelementptr inbounds %"class.v8::internal::ZoneVector.1309", %"class.v8::internal::ZoneVector.1309"* %253, i64 0, i32 0, i32 0, i32 0
  %255 = getelementptr inbounds %"class.v8::internal::compiler::LinearScanAllocator", %"class.v8::internal::compiler::LinearScanAllocator"* %0, i64 0, i32 2, i32 0, i32 0, i32 1
  %256 = bitcast %"class.v8::internal::ZoneUnorderedSet"* %4 to i8*
  %257 = getelementptr inbounds %"class.v8::internal::ZoneUnorderedSet", %"class.v8::internal::ZoneUnorderedSet"* %4, i64 0, i32 0, i32 0
  %258 = getelementptr inbounds %"class.v8::internal::ZoneUnorderedSet", %"class.v8::internal::ZoneUnorderedSet"* %4, i64 0, i32 0, i32 0, i32 0, i32 0, i32 1, i32 0, i32 0, i32 1
  %259 = bitcast %"struct.std::__1::__compressed_pair_elem.1402"* %258 to i64*
  %260 = getelementptr inbounds %"class.v8::internal::ZoneUnorderedSet", %"class.v8::internal::ZoneUnorderedSet"* %4, i64 0, i32 0, i32 0, i32 1, i32 0, i32 0, i32 0
  %261 = getelementptr inbounds %"class.v8::internal::ZoneUnorderedSet", %"class.v8::internal::ZoneUnorderedSet"* %4, i64 0, i32 0, i32 0, i32 1, i32 1
  %262 = bitcast %"struct.std::__1::__compressed_pair_elem.1406"* %261 to i64*
  %263 = getelementptr inbounds %"class.v8::internal::ZoneUnorderedSet", %"class.v8::internal::ZoneUnorderedSet"* %4, i64 0, i32 0, i32 0, i32 2, i32 0, i32 0
  %264 = getelementptr inbounds %"class.v8::internal::ZoneUnorderedSet", %"class.v8::internal::ZoneUnorderedSet"* %4, i64 0, i32 0, i32 0, i32 3
  %265 = bitcast %"class.std::__1::__compressed_pair.1410"* %264 to i32*
  %266 = getelementptr inbounds %"class.v8::internal::ZoneUnorderedSet", %"class.v8::internal::ZoneUnorderedSet"* %4, i64 0, i32 0, i32 0, i32 0, i32 0, i32 1, i32 0, i32 0, i32 0, i32 0
  %267 = getelementptr inbounds %"class.v8::internal::ZoneUnorderedSet", %"class.v8::internal::ZoneUnorderedSet"* %4, i64 0, i32 0, i32 0, i32 3, i32 0, i32 0
  %268 = bitcast %class.anon.1437* %5 to i8*
  %269 = getelementptr inbounds %class.anon.1437, %class.anon.1437* %5, i64 0, i32 0
  %270 = getelementptr inbounds %class.anon.1437, %class.anon.1437* %5, i64 0, i32 1
  br label %271

271:                                              ; preds = %523, %238
  %272 = phi %"class.v8::internal::compiler::InstructionBlock"* [ %326, %523 ], [ %240, %238 ]
  %273 = phi i32 [ %525, %523 ], [ 0, %238 ]
  %274 = phi i32 [ %364, %523 ], [ 0, %238 ]
  %275 = getelementptr inbounds %"class.v8::internal::compiler::InstructionBlock", %"class.v8::internal::compiler::InstructionBlock"* %272, i64 0, i32 9
  %276 = load i32, i32* %275, align 8
  %277 = shl i32 %276, 2
  %278 = add i32 %277, -4
  %279 = or i32 %278, 2
  %280 = add i32 %279, 4
  %281 = and i32 %280, -4
  %282 = icmp slt i32 %273, %234
  br label %283

283:                                              ; preds = %579, %271
  %284 = load i64, i64* %242, align 8
  %285 = icmp eq i64 %284, 0
  %286 = load %"class.v8::internal::compiler::TopTierRegisterAllocationData"*, %"class.v8::internal::compiler::TopTierRegisterAllocationData"** %7, align 8
  %287 = xor i1 %285, true
  %288 = or i1 %287, %282
  br i1 %288, label %289, label %592

289:                                              ; preds = %283
  %290 = getelementptr inbounds %"class.v8::internal::compiler::TopTierRegisterAllocationData", %"class.v8::internal::compiler::TopTierRegisterAllocationData"* %286, i64 0, i32 24
  %291 = load %"class.v8::internal::TickCounter"*, %"class.v8::internal::TickCounter"** %290, align 8
  call void @_ZN2v88internal11TickCounter26TickAndMaybeEnterSafepointEv(%"class.v8::internal::TickCounter"* %291) #16
  %292 = load i64, i64* %242, align 8
  %293 = icmp eq i64 %292, 0
  br i1 %293, label %300, label %294

294:                                              ; preds = %289
  %295 = load %"class.std::__1::__tree_node.1501"*, %"class.std::__1::__tree_node.1501"** %243, align 8
  %296 = getelementptr inbounds %"class.std::__1::__tree_node.1501", %"class.std::__1::__tree_node.1501"* %295, i64 0, i32 1
  %297 = load %"class.v8::internal::compiler::LiveRange"*, %"class.v8::internal::compiler::LiveRange"** %296, align 8
  %298 = icmp eq %"class.v8::internal::compiler::LiveRange"* %297, null
  %299 = getelementptr inbounds %"class.std::__1::__tree_node.1501", %"class.std::__1::__tree_node.1501"* %295, i64 0, i32 0, i32 0
  br i1 %298, label %300, label %306

300:                                              ; preds = %294, %289
  %301 = load %"class.v8::internal::compiler::TopTierRegisterAllocationData"*, %"class.v8::internal::compiler::TopTierRegisterAllocationData"** %7, align 8
  %302 = getelementptr inbounds %"class.v8::internal::compiler::TopTierRegisterAllocationData", %"class.v8::internal::compiler::TopTierRegisterAllocationData"* %301, i64 0, i32 23, i32 0
  %303 = load i32, i32* %302, align 4
  %304 = and i32 %303, 1
  %305 = icmp eq i32 %304, 0
  br i1 %305, label %319, label %318

306:                                              ; preds = %294
  %307 = getelementptr inbounds %"class.v8::internal::compiler::LiveRange", %"class.v8::internal::compiler::LiveRange"* %297, i64 0, i32 3
  %308 = load %"class.v8::internal::compiler::UseInterval"*, %"class.v8::internal::compiler::UseInterval"** %307, align 8
  %309 = getelementptr inbounds %"class.v8::internal::compiler::UseInterval", %"class.v8::internal::compiler::UseInterval"* %308, i64 0, i32 0, i32 0
  %310 = load i32, i32* %309, align 8
  %311 = icmp slt i32 %310, %281
  %312 = load %"class.v8::internal::compiler::TopTierRegisterAllocationData"*, %"class.v8::internal::compiler::TopTierRegisterAllocationData"** %7, align 8
  %313 = getelementptr inbounds %"class.v8::internal::compiler::TopTierRegisterAllocationData", %"class.v8::internal::compiler::TopTierRegisterAllocationData"* %312, i64 0, i32 23, i32 0
  %314 = load i32, i32* %313, align 4
  %315 = and i32 %314, 1
  %316 = icmp ne i32 %315, 0
  br i1 %311, label %526, label %317

317:                                              ; preds = %306
  br i1 %316, label %318, label %319

318:                                              ; preds = %300, %317
  call void (i8*, ...) @_ZN2v88internal6PrintFEPKcz(i8* getelementptr inbounds ([38 x i8], [38 x i8]* @.str.74, i64 0, i64 0), i32 %281, i32 %273) #16
  br label %319

319:                                              ; preds = %300, %318, %317
  %320 = add i32 %281, -2
  %321 = or i32 %320, 1
  call void @_ZN2v88internal8compiler19LinearScanAllocator14ForwardStateToENS1_16LifetimePositionE(%"class.v8::internal::compiler::LinearScanAllocator"* %0, i32 %321)
  %322 = load %"class.v8::internal::compiler::TopTierRegisterAllocationData"*, %"class.v8::internal::compiler::TopTierRegisterAllocationData"** %7, align 8
  %323 = getelementptr inbounds %"class.v8::internal::compiler::TopTierRegisterAllocationData", %"class.v8::internal::compiler::TopTierRegisterAllocationData"* %322, i64 0, i32 3
  %324 = load %"class.v8::internal::compiler::InstructionSequence"*, %"class.v8::internal::compiler::InstructionSequence"** %323, align 8
  %325 = sdiv i32 %281, 4
  %326 = call %"class.v8::internal::compiler::InstructionBlock"* @_ZNK2v88internal8compiler19InstructionSequence19GetInstructionBlockEi(%"class.v8::internal::compiler::InstructionSequence"* %324, i32 %325) #16
  %327 = load %"class.v8::internal::compiler::TopTierRegisterAllocationData"*, %"class.v8::internal::compiler::TopTierRegisterAllocationData"** %7, align 8
  %328 = sext i32 %273 to i64
  %329 = getelementptr inbounds %"class.v8::internal::compiler::TopTierRegisterAllocationData", %"class.v8::internal::compiler::TopTierRegisterAllocationData"* %327, i64 0, i32 22, i32 0, i32 0, i32 0
  %330 = load %"class.v8::internal::ZoneVector.1309"*, %"class.v8::internal::ZoneVector.1309"** %329, align 8
  %331 = getelementptr inbounds %"class.v8::internal::ZoneVector.1309", %"class.v8::internal::ZoneVector.1309"* %330, i64 %328
  %332 = icmp eq %"class.v8::internal::ZoneVector.1309"* %331, %253
  br i1 %332, label %337, label %333

333:                                              ; preds = %319
  %334 = getelementptr inbounds %"class.v8::internal::ZoneVector.1309", %"class.v8::internal::ZoneVector.1309"* %331, i64 0, i32 0
  %335 = load %"class.v8::internal::compiler::LiveRange"**, %"class.v8::internal::compiler::LiveRange"*** %254, align 8
  %336 = load %"class.v8::internal::compiler::LiveRange"**, %"class.v8::internal::compiler::LiveRange"*** %255, align 8
  call void @_ZNSt3__16vectorIPN2v88internal8compiler9LiveRangeENS2_13ZoneAllocatorIS5_EEE6assignIPS5_EENS_9enable_ifIXaasr27__is_cpp17_forward_iteratorIT_EE5valuesr16is_constructibleIS5_NS_15iterator_traitsISC_E9referenceEEE5valueEvE4typeESC_SC_(%"class.std::__1::vector.1310"* %334, %"class.v8::internal::compiler::LiveRange"** %335, %"class.v8::internal::compiler::LiveRange"** %336) #16
  br label %337

337:                                              ; preds = %319, %333
  %338 = getelementptr inbounds %"class.v8::internal::compiler::InstructionBlock", %"class.v8::internal::compiler::InstructionBlock"* %326, i64 0, i32 1, i32 0
  %339 = getelementptr inbounds %"class.v8::internal::compiler::InstructionBlock", %"class.v8::internal::compiler::InstructionBlock"* %326, i64 0, i32 1, i32 0, i32 0, i32 1
  %340 = bitcast %"class.v8::internal::compiler::RpoNumber"** %339 to i64*
  %341 = load i64, i64* %340, align 8
  %342 = bitcast %"class.std::__1::vector.38"* %338 to i64*
  %343 = load i64, i64* %342, align 8
  %344 = sub i64 %341, %343
  %345 = icmp eq i64 %344, 4
  br i1 %345, label %346, label %354

346:                                              ; preds = %337
  %347 = inttoptr i64 %343 to %"class.v8::internal::compiler::RpoNumber"*
  %348 = getelementptr inbounds %"class.v8::internal::compiler::InstructionBlock", %"class.v8::internal::compiler::InstructionBlock"* %326, i64 0, i32 4, i32 0
  %349 = load i32, i32* %348, align 4
  %350 = getelementptr inbounds %"class.v8::internal::compiler::RpoNumber", %"class.v8::internal::compiler::RpoNumber"* %347, i64 0, i32 0
  %351 = load i32, i32* %350, align 4
  %352 = add nsw i32 %351, 1
  %353 = icmp eq i32 %352, %349
  br label %354

354:                                              ; preds = %346, %337
  %355 = phi i1 [ false, %337 ], [ %353, %346 ]
  %356 = icmp eq i32 %274, 1
  %357 = getelementptr inbounds %"class.v8::internal::compiler::InstructionBlock", %"class.v8::internal::compiler::InstructionBlock"* %326, i64 0, i32 10
  %358 = load i8, i8* %357, align 4, !range !3
  %359 = icmp ne i8 %358, 0
  %360 = xor i1 %356, %359
  br i1 %360, label %361, label %363

361:                                              ; preds = %354
  %362 = zext i8 %358 to i32
  call void @_ZN2v88internal8compiler19LinearScanAllocator14ForwardStateToENS1_16LifetimePositionE(%"class.v8::internal::compiler::LinearScanAllocator"* %0, i32 %281)
  call void @_ZN2v88internal8compiler19LinearScanAllocator25UpdateDeferredFixedRangesENS1_29TopTierRegisterAllocationData9SpillModeEPNS1_16InstructionBlockE(%"class.v8::internal::compiler::LinearScanAllocator"* %0, i32 %362, %"class.v8::internal::compiler::InstructionBlock"* %326)
  br label %363

363:                                              ; preds = %361, %354
  %364 = phi i32 [ %362, %361 ], [ %274, %354 ]
  br i1 %355, label %523, label %365

365:                                              ; preds = %363
  call void @_ZN2v88internal8compiler19LinearScanAllocator14ForwardStateToENS1_16LifetimePositionE(%"class.v8::internal::compiler::LinearScanAllocator"* %0, i32 %281)
  call void @llvm.lifetime.start.p0i8(i64 56, i8* nonnull %256) #16
  %366 = load %"class.v8::internal::compiler::TopTierRegisterAllocationData"*, %"class.v8::internal::compiler::TopTierRegisterAllocationData"** %7, align 8
  %367 = getelementptr inbounds %"class.v8::internal::compiler::TopTierRegisterAllocationData", %"class.v8::internal::compiler::TopTierRegisterAllocationData"* %366, i64 0, i32 1
  %368 = bitcast %"class.v8::internal::Zone"** %367 to i64*
  %369 = load i64, i64* %368, align 8
  call void @llvm.memset.p0i8.i64(i8* nonnull align 8 %256, i8 0, i64 16, i1 false) #16
  store i64 %369, i64* %259, align 8
  store %"struct.std::__1::__hash_node_base.1398"* null, %"struct.std::__1::__hash_node_base.1398"** %260, align 8
  store i64 %369, i64* %262, align 8
  store i64 0, i64* %263, align 8
  store i32 1065353216, i32* %265, align 8
  %370 = call i64 @_ZNSt3__112__next_primeEm(i64 100) #16
  %371 = load i64, i64* %266, align 8
  %372 = icmp ugt i64 %370, %371
  br i1 %372, label %373, label %374

373:                                              ; preds = %365
  call void @_ZNSt3__112__hash_tableIN2v88internal8compiler19LinearScanAllocator17RangeWithRegisterENS5_4HashENS5_6EqualsENS2_13ZoneAllocatorIS5_EEE8__rehashEm(%"class.std::__1::__hash_table.1394"* nonnull %257, i64 %370) #16
  br label %402

374:                                              ; preds = %365
  %375 = icmp ult i64 %370, %371
  br i1 %375, label %376, label %402

376:                                              ; preds = %374
  %377 = icmp ugt i64 %371, 2
  %378 = call i64 @llvm.ctpop.i64(i64 %371) #16, !range !79
  %379 = icmp ult i64 %378, 2
  %380 = and i1 %377, %379
  %381 = load i64, i64* %263, align 8
  %382 = uitofp i64 %381 to float
  %383 = load float, float* %267, align 8
  %384 = fdiv float %382, %383
  %385 = call float @llvm.ceil.f32(float %384) #16
  %386 = fptoui float %385 to i64
  br i1 %380, label %387, label %394

387:                                              ; preds = %376
  %388 = icmp ult i64 %386, 2
  br i1 %388, label %396, label %389

389:                                              ; preds = %387
  %390 = add i64 %386, -1
  %391 = call i64 @llvm.ctlz.i64(i64 %390, i1 true) #16, !range !79
  %392 = sub nuw nsw i64 64, %391
  %393 = shl i64 1, %392
  br label %396

394:                                              ; preds = %376
  %395 = call i64 @_ZNSt3__112__next_primeEm(i64 %386) #16
  br label %396

396:                                              ; preds = %394, %389, %387
  %397 = phi i64 [ %395, %394 ], [ %393, %389 ], [ %386, %387 ]
  %398 = icmp ult i64 %370, %397
  %399 = select i1 %398, i64 %397, i64 %370
  %400 = icmp ult i64 %399, %371
  br i1 %400, label %401, label %402

401:                                              ; preds = %396
  call void @_ZNSt3__112__hash_tableIN2v88internal8compiler19LinearScanAllocator17RangeWithRegisterENS5_4HashENS5_6EqualsENS2_13ZoneAllocatorIS5_EEE8__rehashEm(%"class.std::__1::__hash_table.1394"* nonnull %257, i64 %399) #16
  br label %402

402:                                              ; preds = %373, %374, %396, %401
  call void @llvm.lifetime.start.p0i8(i64 16, i8* nonnull %268) #16
  store %"class.v8::internal::compiler::LinearScanAllocator"* %0, %"class.v8::internal::compiler::LinearScanAllocator"** %269, align 8
  store %"class.v8::internal::compiler::InstructionBlock"* %326, %"class.v8::internal::compiler::InstructionBlock"** %270, align 8
  %403 = load i64, i64* %340, align 8
  %404 = load i64, i64* %342, align 8
  %405 = sub i64 %403, %404
  %406 = ashr exact i64 %405, 2
  %407 = inttoptr i64 %404 to %"class.v8::internal::compiler::RpoNumber"*
  switch i64 %406, label %509 [
    i64 1, label %408
    i64 2, label %424
  ]

408:                                              ; preds = %402
  %409 = load %"class.v8::internal::compiler::TopTierRegisterAllocationData"*, %"class.v8::internal::compiler::TopTierRegisterAllocationData"** %7, align 8
  %410 = getelementptr inbounds %"class.v8::internal::compiler::TopTierRegisterAllocationData", %"class.v8::internal::compiler::TopTierRegisterAllocationData"* %409, i64 0, i32 23, i32 0
  %411 = load i32, i32* %410, align 4
  %412 = and i32 %411, 1
  %413 = icmp eq i32 %412, 0
  br i1 %413, label %419, label %414

414:                                              ; preds = %408
  %415 = getelementptr inbounds %"class.v8::internal::compiler::InstructionBlock", %"class.v8::internal::compiler::InstructionBlock"* %326, i64 0, i32 4, i32 0
  %416 = load i32, i32* %415, align 4
  call void (i8*, ...) @_ZN2v88internal6PrintFEPKcz(i8* getelementptr inbounds ([28 x i8], [28 x i8]* @.str.75, i64 0, i64 0), i32 %416) #16
  %417 = getelementptr inbounds %"class.v8::internal::compiler::InstructionBlock", %"class.v8::internal::compiler::InstructionBlock"* %326, i64 0, i32 1, i32 0, i32 0, i32 0
  %418 = load %"class.v8::internal::compiler::RpoNumber"*, %"class.v8::internal::compiler::RpoNumber"** %417, align 8
  br label %419

419:                                              ; preds = %408, %414
  %420 = phi %"class.v8::internal::compiler::RpoNumber"* [ %407, %408 ], [ %418, %414 ]
  %421 = getelementptr inbounds %"class.v8::internal::compiler::RpoNumber", %"class.v8::internal::compiler::RpoNumber"* %420, i64 0, i32 0
  %422 = load i32, i32* %421, align 4
  %423 = call fastcc zeroext i1 @"_ZZN2v88internal8compiler19LinearScanAllocator17AllocateRegistersEvENK3$_4clENS1_9RpoNumberEPNS0_16ZoneUnorderedSetINS2_17RangeWithRegisterENS6_4HashENS6_6EqualsEEE"(%class.anon.1437* nonnull %5, i32 %422, %"class.v8::internal::ZoneUnorderedSet"* nonnull %4)
  br i1 %423, label %514, label %513

424:                                              ; preds = %402
  %425 = load %"class.v8::internal::compiler::TopTierRegisterAllocationData"*, %"class.v8::internal::compiler::TopTierRegisterAllocationData"** %7, align 8
  %426 = getelementptr inbounds %"class.v8::internal::compiler::TopTierRegisterAllocationData", %"class.v8::internal::compiler::TopTierRegisterAllocationData"* %425, i64 0, i32 23, i32 0
  %427 = load i32, i32* %426, align 4
  %428 = and i32 %427, 1
  %429 = icmp eq i32 %428, 0
  br i1 %429, label %435, label %430

430:                                              ; preds = %424
  %431 = getelementptr inbounds %"class.v8::internal::compiler::InstructionBlock", %"class.v8::internal::compiler::InstructionBlock"* %326, i64 0, i32 4, i32 0
  %432 = load i32, i32* %431, align 4
  call void (i8*, ...) @_ZN2v88internal6PrintFEPKcz(i8* getelementptr inbounds ([26 x i8], [26 x i8]* @.str.76, i64 0, i64 0), i32 %432) #16
  %433 = getelementptr inbounds %"class.v8::internal::compiler::InstructionBlock", %"class.v8::internal::compiler::InstructionBlock"* %326, i64 0, i32 1, i32 0, i32 0, i32 0
  %434 = load %"class.v8::internal::compiler::RpoNumber"*, %"class.v8::internal::compiler::RpoNumber"** %433, align 8
  br label %435

435:                                              ; preds = %424, %430
  %436 = phi %"class.v8::internal::compiler::RpoNumber"* [ %407, %424 ], [ %434, %430 ]
  %437 = getelementptr inbounds %"class.v8::internal::compiler::RpoNumber", %"class.v8::internal::compiler::RpoNumber"* %436, i64 0, i32 0
  %438 = load i32, i32* %437, align 4
  %439 = getelementptr inbounds %"class.v8::internal::compiler::InstructionBlock", %"class.v8::internal::compiler::InstructionBlock"* %326, i64 0, i32 4, i32 0
  %440 = load i32, i32* %439, align 4
  %441 = icmp sgt i32 %440, %438
  br i1 %441, label %445, label %442

442:                                              ; preds = %435
  %443 = getelementptr inbounds %"class.v8::internal::compiler::RpoNumber", %"class.v8::internal::compiler::RpoNumber"* %436, i64 1, i32 0
  %444 = load i32, i32* %443, align 4
  br label %510

445:                                              ; preds = %435
  %446 = load i8, i8* %357, align 4, !range !3
  %447 = icmp eq i8 %446, 0
  br i1 %447, label %451, label %448

448:                                              ; preds = %445
  %449 = getelementptr inbounds %"class.v8::internal::compiler::RpoNumber", %"class.v8::internal::compiler::RpoNumber"* %436, i64 1, i32 0
  %450 = load i32, i32* %449, align 4
  br label %478

451:                                              ; preds = %445
  %452 = load %"class.v8::internal::compiler::TopTierRegisterAllocationData"*, %"class.v8::internal::compiler::TopTierRegisterAllocationData"** %7, align 8
  %453 = getelementptr inbounds %"class.v8::internal::compiler::TopTierRegisterAllocationData", %"class.v8::internal::compiler::TopTierRegisterAllocationData"* %452, i64 0, i32 3
  %454 = load %"class.v8::internal::compiler::InstructionSequence"*, %"class.v8::internal::compiler::InstructionSequence"** %453, align 8
  %455 = getelementptr inbounds %"class.v8::internal::compiler::InstructionSequence", %"class.v8::internal::compiler::InstructionSequence"* %454, i64 0, i32 2
  %456 = bitcast %"class.v8::internal::ZoneVector.1170"** %455 to %"class.std::__1::vector.1171"**
  %457 = load %"class.std::__1::vector.1171"*, %"class.std::__1::vector.1171"** %456, align 8
  %458 = sext i32 %438 to i64
  %459 = getelementptr inbounds %"class.std::__1::vector.1171", %"class.std::__1::vector.1171"* %457, i64 0, i32 0, i32 1
  %460 = bitcast %"class.v8::internal::compiler::InstructionBlock"*** %459 to i64*
  %461 = load i64, i64* %460, align 8
  %462 = bitcast %"class.std::__1::vector.1171"* %457 to i64*
  %463 = load i64, i64* %462, align 8
  %464 = sub i64 %461, %463
  %465 = ashr exact i64 %464, 3
  %466 = icmp ugt i64 %465, %458
  br i1 %466, label %469, label %467

467:                                              ; preds = %451
  %468 = bitcast %"class.std::__1::vector.1171"* %457 to %"class.std::__1::__vector_base_common"*
  call void @_ZNKSt3__120__vector_base_commonILb1EE20__throw_out_of_rangeEv(%"class.std::__1::__vector_base_common"* %468) #17
  unreachable

469:                                              ; preds = %451
  %470 = inttoptr i64 %463 to %"class.v8::internal::compiler::InstructionBlock"**
  %471 = getelementptr inbounds %"class.v8::internal::compiler::InstructionBlock"*, %"class.v8::internal::compiler::InstructionBlock"** %470, i64 %458
  %472 = load %"class.v8::internal::compiler::InstructionBlock"*, %"class.v8::internal::compiler::InstructionBlock"** %471, align 8
  %473 = getelementptr inbounds %"class.v8::internal::compiler::InstructionBlock", %"class.v8::internal::compiler::InstructionBlock"* %472, i64 0, i32 10
  %474 = load i8, i8* %473, align 4, !range !3
  %475 = icmp eq i8 %474, 0
  %476 = getelementptr inbounds %"class.v8::internal::compiler::RpoNumber", %"class.v8::internal::compiler::RpoNumber"* %436, i64 1, i32 0
  %477 = load i32, i32* %476, align 4
  br i1 %475, label %478, label %510

478:                                              ; preds = %448, %469
  %479 = phi i32 [ %450, %448 ], [ %477, %469 ]
  %480 = icmp sgt i32 %440, %479
  br i1 %480, label %481, label %510

481:                                              ; preds = %478
  br i1 %447, label %482, label %507

482:                                              ; preds = %481
  %483 = load %"class.v8::internal::compiler::TopTierRegisterAllocationData"*, %"class.v8::internal::compiler::TopTierRegisterAllocationData"** %7, align 8
  %484 = getelementptr inbounds %"class.v8::internal::compiler::TopTierRegisterAllocationData", %"class.v8::internal::compiler::TopTierRegisterAllocationData"* %483, i64 0, i32 3
  %485 = load %"class.v8::internal::compiler::InstructionSequence"*, %"class.v8::internal::compiler::InstructionSequence"** %484, align 8
  %486 = getelementptr inbounds %"class.v8::internal::compiler::InstructionSequence", %"class.v8::internal::compiler::InstructionSequence"* %485, i64 0, i32 2
  %487 = bitcast %"class.v8::internal::ZoneVector.1170"** %486 to %"class.std::__1::vector.1171"**
  %488 = load %"class.std::__1::vector.1171"*, %"class.std::__1::vector.1171"** %487, align 8
  %489 = sext i32 %479 to i64
  %490 = getelementptr inbounds %"class.std::__1::vector.1171", %"class.std::__1::vector.1171"* %488, i64 0, i32 0, i32 1
  %491 = bitcast %"class.v8::internal::compiler::InstructionBlock"*** %490 to i64*
  %492 = load i64, i64* %491, align 8
  %493 = bitcast %"class.std::__1::vector.1171"* %488 to i64*
  %494 = load i64, i64* %493, align 8
  %495 = sub i64 %492, %494
  %496 = ashr exact i64 %495, 3
  %497 = icmp ugt i64 %496, %489
  br i1 %497, label %500, label %498

498:                                              ; preds = %482
  %499 = bitcast %"class.std::__1::vector.1171"* %488 to %"class.std::__1::__vector_base_common"*
  call void @_ZNKSt3__120__vector_base_commonILb1EE20__throw_out_of_rangeEv(%"class.std::__1::__vector_base_common"* %499) #17
  unreachable

500:                                              ; preds = %482
  %501 = inttoptr i64 %494 to %"class.v8::internal::compiler::InstructionBlock"**
  %502 = getelementptr inbounds %"class.v8::internal::compiler::InstructionBlock"*, %"class.v8::internal::compiler::InstructionBlock"** %501, i64 %489
  %503 = load %"class.v8::internal::compiler::InstructionBlock"*, %"class.v8::internal::compiler::InstructionBlock"** %502, align 8
  %504 = getelementptr inbounds %"class.v8::internal::compiler::InstructionBlock", %"class.v8::internal::compiler::InstructionBlock"* %503, i64 0, i32 10
  %505 = load i8, i8* %504, align 4, !range !3
  %506 = icmp eq i8 %505, 0
  br i1 %506, label %507, label %510

507:                                              ; preds = %481, %500
  %508 = call i32 @_ZN2v88internal8compiler19LinearScanAllocator31ChooseOneOfTwoPredecessorStatesEPNS1_16InstructionBlockENS1_16LifetimePositionE(%"class.v8::internal::compiler::LinearScanAllocator"* %0, %"class.v8::internal::compiler::InstructionBlock"* %326, i32 %281)
  br label %510

509:                                              ; preds = %402
  call void @_ZN2v88internal8compiler19LinearScanAllocator32ComputeStateFromManyPredecessorsEPNS1_16InstructionBlockEPNS0_16ZoneUnorderedSetINS2_17RangeWithRegisterENS6_4HashENS6_6EqualsEEE(%"class.v8::internal::compiler::LinearScanAllocator"* %0, %"class.v8::internal::compiler::InstructionBlock"* %326, %"class.v8::internal::ZoneUnorderedSet"* nonnull %4)
  br label %513

510:                                              ; preds = %478, %507, %469, %442, %500
  %511 = phi i32 [ %508, %507 ], [ %477, %469 ], [ %444, %442 ], [ %438, %500 ], [ %438, %478 ]
  %512 = call fastcc zeroext i1 @"_ZZN2v88internal8compiler19LinearScanAllocator17AllocateRegistersEvENK3$_4clENS1_9RpoNumberEPNS0_16ZoneUnorderedSetINS2_17RangeWithRegisterENS6_4HashENS6_6EqualsEEE"(%class.anon.1437* nonnull %5, i32 %511, %"class.v8::internal::ZoneUnorderedSet"* nonnull %4)
  br i1 %512, label %514, label %513

513:                                              ; preds = %419, %509, %510
  call void @_ZN2v88internal8compiler19LinearScanAllocator18SpillNotLiveRangesEPNS0_16ZoneUnorderedSetINS2_17RangeWithRegisterENS4_4HashENS4_6EqualsEEENS1_16LifetimePositionENS1_29TopTierRegisterAllocationData9SpillModeE(%"class.v8::internal::compiler::LinearScanAllocator"* %0, %"class.v8::internal::ZoneUnorderedSet"* nonnull %4, i32 %281, i32 %364)
  call void @_ZN2v88internal8compiler19LinearScanAllocator16ReloadLiveRangesERKNS0_16ZoneUnorderedSetINS2_17RangeWithRegisterENS4_4HashENS4_6EqualsEEENS1_16LifetimePositionE(%"class.v8::internal::compiler::LinearScanAllocator"* %0, %"class.v8::internal::ZoneUnorderedSet"* nonnull dereferenceable(56) %4, i32 %281)
  br label %514

514:                                              ; preds = %419, %513, %510
  call void @llvm.lifetime.end.p0i8(i64 16, i8* nonnull %268) #16
  %515 = load %"struct.std::__1::__hash_node_base.1398"*, %"struct.std::__1::__hash_node_base.1398"** %260, align 8
  %516 = icmp eq %"struct.std::__1::__hash_node_base.1398"* %515, null
  br i1 %516, label %522, label %517

517:                                              ; preds = %514, %517
  %518 = phi %"struct.std::__1::__hash_node_base.1398"* [ %520, %517 ], [ %515, %514 ]
  %519 = getelementptr inbounds %"struct.std::__1::__hash_node_base.1398", %"struct.std::__1::__hash_node_base.1398"* %518, i64 0, i32 0
  %520 = load %"struct.std::__1::__hash_node_base.1398"*, %"struct.std::__1::__hash_node_base.1398"** %519, align 8
  %521 = icmp eq %"struct.std::__1::__hash_node_base.1398"* %520, null
  br i1 %521, label %522, label %517

522:                                              ; preds = %517, %514
  call void @llvm.lifetime.end.p0i8(i64 56, i8* nonnull %256) #16
  br label %523

523:                                              ; preds = %522, %363
  %524 = getelementptr inbounds %"class.v8::internal::compiler::InstructionBlock", %"class.v8::internal::compiler::InstructionBlock"* %326, i64 0, i32 4, i32 0
  %525 = load i32, i32* %524, align 4
  br label %271

526:                                              ; preds = %306
  br i1 %316, label %527, label %535

527:                                              ; preds = %526
  %528 = getelementptr inbounds %"class.v8::internal::compiler::LiveRange", %"class.v8::internal::compiler::LiveRange"* %297, i64 0, i32 5
  %529 = load %"class.v8::internal::compiler::TopLevelLiveRange"*, %"class.v8::internal::compiler::TopLevelLiveRange"** %528, align 8
  %530 = getelementptr inbounds %"class.v8::internal::compiler::TopLevelLiveRange", %"class.v8::internal::compiler::TopLevelLiveRange"* %529, i64 0, i32 1
  %531 = load i32, i32* %530, align 4
  %532 = getelementptr inbounds %"class.v8::internal::compiler::LiveRange", %"class.v8::internal::compiler::LiveRange"* %297, i64 0, i32 0
  %533 = load i32, i32* %532, align 8
  call void (i8*, ...) @_ZN2v88internal6PrintFEPKcz(i8* getelementptr inbounds ([36 x i8], [36 x i8]* @.str.77, i64 0, i64 0), i32 %531, i32 %533, i32 %310) #16
  %534 = load %"class.std::__1::__tree_end_node"*, %"class.std::__1::__tree_end_node"** %244, align 8
  br label %535

535:                                              ; preds = %527, %526
  %536 = phi %"class.std::__1::__tree_end_node"* [ %534, %527 ], [ %299, %526 ]
  %537 = getelementptr inbounds %"class.std::__1::__tree_end_node", %"class.std::__1::__tree_end_node"* %536, i64 1, i32 0
  %538 = load %"class.std::__1::__tree_node_base"*, %"class.std::__1::__tree_node_base"** %537, align 8
  %539 = icmp eq %"class.std::__1::__tree_node_base"* %538, null
  br i1 %539, label %540, label %548

540:                                              ; preds = %535
  %541 = bitcast %"class.std::__1::__tree_end_node"* %536 to %"class.std::__1::__tree_node_base"*
  %542 = getelementptr inbounds %"class.std::__1::__tree_end_node", %"class.std::__1::__tree_end_node"* %536, i64 2
  %543 = bitcast %"class.std::__1::__tree_end_node"* %542 to %"class.std::__1::__tree_end_node"**
  %544 = load %"class.std::__1::__tree_end_node"*, %"class.std::__1::__tree_end_node"** %543, align 8
  %545 = getelementptr inbounds %"class.std::__1::__tree_end_node", %"class.std::__1::__tree_end_node"* %544, i64 0, i32 0
  %546 = load %"class.std::__1::__tree_node_base"*, %"class.std::__1::__tree_node_base"** %545, align 8
  %547 = icmp eq %"class.std::__1::__tree_node_base"* %546, %541
  br i1 %547, label %565, label %556

548:                                              ; preds = %535, %548
  %549 = phi %"class.std::__1::__tree_node_base"* [ %551, %548 ], [ %538, %535 ]
  %550 = getelementptr inbounds %"class.std::__1::__tree_node_base", %"class.std::__1::__tree_node_base"* %549, i64 0, i32 0, i32 0
  %551 = load %"class.std::__1::__tree_node_base"*, %"class.std::__1::__tree_node_base"** %550, align 8
  %552 = icmp eq %"class.std::__1::__tree_node_base"* %551, null
  br i1 %552, label %553, label %548

553:                                              ; preds = %548
  %554 = getelementptr inbounds %"class.std::__1::__tree_node_base", %"class.std::__1::__tree_node_base"* %549, i64 0, i32 0
  %555 = bitcast %"class.std::__1::__tree_end_node"* %536 to %"class.std::__1::__tree_node_base"*
  br label %565

556:                                              ; preds = %540, %556
  %557 = phi %"class.std::__1::__tree_end_node"** [ %560, %556 ], [ %543, %540 ]
  %558 = bitcast %"class.std::__1::__tree_end_node"** %557 to %"class.std::__1::__tree_node_base"**
  %559 = load %"class.std::__1::__tree_node_base"*, %"class.std::__1::__tree_node_base"** %558, align 8
  %560 = getelementptr inbounds %"class.std::__1::__tree_node_base", %"class.std::__1::__tree_node_base"* %559, i64 0, i32 2
  %561 = load %"class.std::__1::__tree_end_node"*, %"class.std::__1::__tree_end_node"** %560, align 8
  %562 = getelementptr inbounds %"class.std::__1::__tree_end_node", %"class.std::__1::__tree_end_node"* %561, i64 0, i32 0
  %563 = load %"class.std::__1::__tree_node_base"*, %"class.std::__1::__tree_node_base"** %562, align 8
  %564 = icmp eq %"class.std::__1::__tree_node_base"* %563, %559
  br i1 %564, label %565, label %556

565:                                              ; preds = %556, %553, %540
  %566 = phi %"class.std::__1::__tree_node_base"* [ %555, %553 ], [ %541, %540 ], [ %541, %556 ]
  %567 = phi %"class.std::__1::__tree_end_node"* [ %554, %553 ], [ %544, %540 ], [ %561, %556 ]
  %568 = ptrtoint %"class.std::__1::__tree_end_node"* %567 to i64
  store i64 %568, i64* %245, align 8
  %569 = load i64, i64* %242, align 8
  %570 = add i64 %569, -1
  store i64 %570, i64* %242, align 8
  %571 = load %"class.std::__1::__tree_node_base"*, %"class.std::__1::__tree_node_base"** %246, align 8
  call void @_ZNSt3__113__tree_removeIPNS_16__tree_node_baseIPvEEEEvT_S5_(%"class.std::__1::__tree_node_base"* %571, %"class.std::__1::__tree_node_base"* %566) #16
  %572 = getelementptr inbounds %"class.v8::internal::compiler::LiveRange", %"class.v8::internal::compiler::LiveRange"* %297, i64 0, i32 5
  %573 = bitcast %"class.v8::internal::compiler::TopLevelLiveRange"** %572 to %"class.v8::internal::compiler::LiveRange"**
  %574 = load %"class.v8::internal::compiler::LiveRange"*, %"class.v8::internal::compiler::LiveRange"** %573, align 8
  %575 = icmp eq %"class.v8::internal::compiler::LiveRange"* %574, %297
  br i1 %575, label %576, label %580

576:                                              ; preds = %565
  %577 = bitcast %"class.v8::internal::compiler::LiveRange"* %574 to %"class.v8::internal::compiler::TopLevelLiveRange"*
  %578 = call zeroext i1 @_ZN2v88internal8compiler19LinearScanAllocator19TryReuseSpillForPhiEPNS1_17TopLevelLiveRangeE(%"class.v8::internal::compiler::LinearScanAllocator"* %0, %"class.v8::internal::compiler::TopLevelLiveRange"* %577)
  br i1 %578, label %579, label %580

579:                                              ; preds = %576, %591
  br label %283

580:                                              ; preds = %576, %565
  call void @_ZN2v88internal8compiler19LinearScanAllocator14ForwardStateToENS1_16LifetimePositionE(%"class.v8::internal::compiler::LinearScanAllocator"* %0, i32 %310)
  call void @llvm.lifetime.start.p0i8(i64 144, i8* nonnull %247) #16
  store %"class.v8::internal::compiler::LifetimePosition"* %248, %"class.v8::internal::compiler::LifetimePosition"** %249, align 8
  store i64 32, i64* %250, align 8
  call void @llvm.memset.p0i8.i64(i8* align 8 %251, i8 -1, i64 128, i1 false) #16
  call void @_ZN2v88internal8compiler19LinearScanAllocator25FindFreeRegistersForRangeEPNS1_9LiveRangeENS0_6VectorINS1_16LifetimePositionEEE(%"class.v8::internal::compiler::LinearScanAllocator"* %0, %"class.v8::internal::compiler::LiveRange"* nonnull %297, %"class.v8::internal::compiler::LifetimePosition"* %248, i64 32) #16
  %581 = call zeroext i1 @_ZN2v88internal8compiler19LinearScanAllocator23TryAllocatePreferredRegEPNS1_9LiveRangeERKNS0_6VectorINS1_16LifetimePositionEEE(%"class.v8::internal::compiler::LinearScanAllocator"* %0, %"class.v8::internal::compiler::LiveRange"* nonnull %297, %"class.v8::internal::Vector.1438"* nonnull dereferenceable(16) %252) #16
  br i1 %581, label %585, label %582

582:                                              ; preds = %580
  %583 = call zeroext i1 @_ZN2v88internal8compiler19LinearScanAllocator18TryAllocateFreeRegEPNS1_9LiveRangeERKNS0_6VectorINS1_16LifetimePositionEEE(%"class.v8::internal::compiler::LinearScanAllocator"* %0, %"class.v8::internal::compiler::LiveRange"* nonnull %297, %"class.v8::internal::Vector.1438"* nonnull dereferenceable(16) %252) #16
  br i1 %583, label %585, label %584

584:                                              ; preds = %582
  call void @_ZN2v88internal8compiler19LinearScanAllocator18AllocateBlockedRegEPNS1_9LiveRangeENS1_29TopTierRegisterAllocationData9SpillModeE(%"class.v8::internal::compiler::LinearScanAllocator"* %0, %"class.v8::internal::compiler::LiveRange"* nonnull %297, i32 %274) #16
  br label %585

585:                                              ; preds = %584, %582, %580
  %586 = getelementptr inbounds %"class.v8::internal::compiler::LiveRange", %"class.v8::internal::compiler::LiveRange"* %297, i64 0, i32 1
  %587 = load i32, i32* %586, align 4
  %588 = and i32 %587, 8064
  %589 = icmp eq i32 %588, 4096
  br i1 %589, label %591, label %590

590:                                              ; preds = %585
  call void @_ZN2v88internal8compiler19LinearScanAllocator11AddToActiveEPNS1_9LiveRangeE(%"class.v8::internal::compiler::LinearScanAllocator"* %0, %"class.v8::internal::compiler::LiveRange"* nonnull %297) #16
  br label %591

591:                                              ; preds = %585, %590
  call void @llvm.lifetime.end.p0i8(i64 144, i8* nonnull %247) #16
  br label %579

592:                                              ; preds = %283
  %593 = getelementptr inbounds %"class.v8::internal::compiler::TopTierRegisterAllocationData", %"class.v8::internal::compiler::TopTierRegisterAllocationData"* %286, i64 0, i32 23, i32 0
  %594 = load i32, i32* %593, align 4
  %595 = and i32 %594, 1
  %596 = icmp eq i32 %595, 0
  br i1 %596, label %598, label %597

597:                                              ; preds = %592
  call void @_ZN2v88internal8compiler19LinearScanAllocator18PrintRangeOverviewERNSt3__113basic_ostreamIcNS3_11char_traitsIcEEEE(%"class.v8::internal::compiler::LinearScanAllocator"* %0, %"class.std::__1::basic_ostream"* nonnull dereferenceable(160) @_ZNSt3__14coutE)
  br label %598

598:                                              ; preds = %592, %597
  ret void
}

; Function Attrs: nounwind ssp uwtable
define hidden void @_ZN2v88internal8compiler19LinearScanAllocator13AddToInactiveEPNS1_9LiveRangeE(%"class.v8::internal::compiler::LinearScanAllocator"* nocapture, %"class.v8::internal::compiler::LiveRange"*) local_unnamed_addr #0 align 2 {
  %3 = alloca i32, align 4
  %4 = ptrtoint %"class.v8::internal::compiler::LiveRange"* %1 to i64
  %5 = getelementptr inbounds %"class.v8::internal::compiler::LinearScanAllocator", %"class.v8::internal::compiler::LinearScanAllocator"* %0, i64 0, i32 0, i32 0
  %6 = load %"class.v8::internal::compiler::TopTierRegisterAllocationData"*, %"class.v8::internal::compiler::TopTierRegisterAllocationData"** %5, align 8
  %7 = getelementptr inbounds %"class.v8::internal::compiler::TopTierRegisterAllocationData", %"class.v8::internal::compiler::TopTierRegisterAllocationData"* %6, i64 0, i32 23, i32 0
  %8 = load i32, i32* %7, align 4
  %9 = and i32 %8, 1
  %10 = icmp eq i32 %9, 0
  br i1 %10, label %18, label %11

11:                                               ; preds = %2
  %12 = getelementptr inbounds %"class.v8::internal::compiler::LiveRange", %"class.v8::internal::compiler::LiveRange"* %1, i64 0, i32 5
  %13 = load %"class.v8::internal::compiler::TopLevelLiveRange"*, %"class.v8::internal::compiler::TopLevelLiveRange"** %12, align 8
  %14 = getelementptr inbounds %"class.v8::internal::compiler::TopLevelLiveRange", %"class.v8::internal::compiler::TopLevelLiveRange"* %13, i64 0, i32 1
  %15 = load i32, i32* %14, align 4
  %16 = getelementptr inbounds %"class.v8::internal::compiler::LiveRange", %"class.v8::internal::compiler::LiveRange"* %1, i64 0, i32 0
  %17 = load i32, i32* %16, align 8
  tail call void (i8*, ...) @_ZN2v88internal6PrintFEPKcz(i8* getelementptr inbounds ([34 x i8], [34 x i8]* @.str.79, i64 0, i64 0), i32 %15, i32 %17) #16
  br label %18

18:                                               ; preds = %2, %11
  %19 = getelementptr inbounds %"class.v8::internal::compiler::LinearScanAllocator", %"class.v8::internal::compiler::LinearScanAllocator"* %0, i64 0, i32 5
  %20 = bitcast i32* %3 to i8*
  call void @llvm.lifetime.start.p0i8(i64 4, i8* nonnull %20)
  %21 = getelementptr inbounds %"class.v8::internal::compiler::LiveRange", %"class.v8::internal::compiler::LiveRange"* %1, i64 0, i32 3
  %22 = load %"class.v8::internal::compiler::UseInterval"*, %"class.v8::internal::compiler::UseInterval"** %21, align 8
  %23 = getelementptr inbounds %"class.v8::internal::compiler::UseInterval", %"class.v8::internal::compiler::UseInterval"* %22, i64 0, i32 0, i32 0
  %24 = load i32, i32* %23, align 8
  %25 = getelementptr inbounds %"class.v8::internal::compiler::LiveRange", %"class.v8::internal::compiler::LiveRange"* %1, i64 0, i32 7
  %26 = load %"class.v8::internal::compiler::UseInterval"*, %"class.v8::internal::compiler::UseInterval"** %25, align 8
  %27 = icmp eq %"class.v8::internal::compiler::UseInterval"* %26, null
  br i1 %27, label %33, label %28

28:                                               ; preds = %18
  %29 = getelementptr inbounds %"class.v8::internal::compiler::UseInterval", %"class.v8::internal::compiler::UseInterval"* %26, i64 0, i32 0, i32 0
  %30 = load i32, i32* %29, align 8
  %31 = icmp sgt i32 %30, %24
  br i1 %31, label %32, label %33

32:                                               ; preds = %28
  store %"class.v8::internal::compiler::UseInterval"* null, %"class.v8::internal::compiler::UseInterval"** %25, align 8
  br label %33

33:                                               ; preds = %18, %32, %28
  %34 = phi %"class.v8::internal::compiler::UseInterval"** [ %21, %18 ], [ %25, %28 ], [ %21, %32 ]
  br label %35

35:                                               ; preds = %33, %35
  %36 = phi %"class.v8::internal::compiler::UseInterval"** [ %41, %35 ], [ %34, %33 ]
  %37 = load %"class.v8::internal::compiler::UseInterval"*, %"class.v8::internal::compiler::UseInterval"** %36, align 8
  %38 = getelementptr inbounds %"class.v8::internal::compiler::UseInterval", %"class.v8::internal::compiler::UseInterval"* %37, i64 0, i32 0, i32 0
  %39 = load i32, i32* %38, align 8
  %40 = icmp slt i32 %39, %24
  %41 = getelementptr inbounds %"class.v8::internal::compiler::UseInterval", %"class.v8::internal::compiler::UseInterval"* %37, i64 0, i32 2
  br i1 %40, label %35, label %42

42:                                               ; preds = %35
  %43 = getelementptr inbounds %"class.v8::internal::compiler::LiveRange", %"class.v8::internal::compiler::LiveRange"* %1, i64 0, i32 11, i32 0
  store i32 %39, i32* %43, align 8
  store i32 %39, i32* %3, align 4
  %44 = getelementptr inbounds %"class.v8::internal::compiler::LifetimePosition", %"class.v8::internal::compiler::LifetimePosition"* %19, i64 0, i32 0
  %45 = load i32, i32* %44, align 4
  %46 = icmp slt i32 %39, %45
  %47 = bitcast i32* %3 to %"class.v8::internal::compiler::LifetimePosition"*
  %48 = select i1 %46, %"class.v8::internal::compiler::LifetimePosition"* %47, %"class.v8::internal::compiler::LifetimePosition"* %19
  %49 = getelementptr inbounds %"class.v8::internal::compiler::LifetimePosition", %"class.v8::internal::compiler::LifetimePosition"* %48, i64 0, i32 0
  %50 = load i32, i32* %49, align 4
  store i32 %50, i32* %44, align 4
  call void @llvm.lifetime.end.p0i8(i64 4, i8* nonnull %20)
  %51 = getelementptr inbounds %"class.v8::internal::compiler::LiveRange", %"class.v8::internal::compiler::LiveRange"* %1, i64 0, i32 1
  %52 = load i32, i32* %51, align 4
  %53 = lshr i32 %52, 7
  %54 = and i32 %53, 63
  %55 = zext i32 %54 to i64
  %56 = getelementptr inbounds %"class.v8::internal::compiler::LinearScanAllocator", %"class.v8::internal::compiler::LinearScanAllocator"* %0, i64 0, i32 3, i32 0, i32 0, i32 0
  %57 = load %"class.v8::internal::ZoneMultiset.1344"*, %"class.v8::internal::ZoneMultiset.1344"** %56, align 8
  %58 = getelementptr inbounds %"class.v8::internal::ZoneMultiset.1344", %"class.v8::internal::ZoneMultiset.1344"* %57, i64 %55, i32 0
  %59 = getelementptr inbounds %"class.v8::internal::ZoneMultiset.1344", %"class.v8::internal::ZoneMultiset.1344"* %57, i64 %55, i32 0, i32 0, i32 1, i32 1, i32 0, i32 0
  %60 = load %"class.v8::internal::Zone"*, %"class.v8::internal::Zone"** %59, align 8, !noalias !144
  %61 = getelementptr inbounds %"class.v8::internal::Zone", %"class.v8::internal::Zone"* %60, i64 0, i32 2
  %62 = load i64, i64* %61, align 8, !noalias !144
  %63 = getelementptr inbounds %"class.v8::internal::Zone", %"class.v8::internal::Zone"* %60, i64 0, i32 3
  %64 = load i64, i64* %63, align 8, !noalias !144
  %65 = sub i64 %64, %62
  %66 = icmp ult i64 %65, 40
  br i1 %66, label %67, label %69, !prof !2

67:                                               ; preds = %42
  %68 = tail call i64 @_ZN2v88internal4Zone9NewExpandEm(%"class.v8::internal::Zone"* %60, i64 40) #16, !noalias !144
  br label %71

69:                                               ; preds = %42
  %70 = add i64 %62, 40
  store i64 %70, i64* %61, align 8, !noalias !144
  br label %71

71:                                               ; preds = %69, %67
  %72 = phi i64 [ %68, %67 ], [ %62, %69 ]
  %73 = inttoptr i64 %72 to %"class.std::__1::__tree_node.1501"*
  %74 = getelementptr inbounds %"class.std::__1::__tree_node.1501", %"class.std::__1::__tree_node.1501"* %73, i64 0, i32 1
  %75 = bitcast %"class.v8::internal::compiler::LiveRange"** %74 to i64*
  store i64 %4, i64* %75, align 8, !noalias !144
  %76 = getelementptr inbounds %"class.v8::internal::ZoneMultiset.1344", %"class.v8::internal::ZoneMultiset.1344"* %57, i64 %55, i32 0, i32 0, i32 1, i32 0, i32 0
  %77 = bitcast %"class.std::__1::__tree_end_node"* %76 to %"class.std::__1::__tree_node.1501"**
  %78 = load %"class.std::__1::__tree_node.1501"*, %"class.std::__1::__tree_node.1501"** %77, align 8
  %79 = icmp eq %"class.std::__1::__tree_node.1501"* %78, null
  br i1 %79, label %106, label %80

80:                                               ; preds = %71
  %81 = load i32, i32* %43, align 8
  br label %82

82:                                               ; preds = %103, %80
  %83 = phi %"class.std::__1::__tree_node.1501"* [ %105, %103 ], [ %78, %80 ]
  %84 = getelementptr inbounds %"class.std::__1::__tree_node.1501", %"class.std::__1::__tree_node.1501"* %83, i64 0, i32 1
  %85 = load %"class.v8::internal::compiler::LiveRange"*, %"class.v8::internal::compiler::LiveRange"** %84, align 8
  %86 = getelementptr inbounds %"class.v8::internal::compiler::LiveRange", %"class.v8::internal::compiler::LiveRange"* %85, i64 0, i32 11, i32 0
  %87 = load i32, i32* %86, align 8
  %88 = icmp slt i32 %81, %87
  br i1 %88, label %89, label %96

89:                                               ; preds = %82
  %90 = getelementptr inbounds %"class.std::__1::__tree_node.1501", %"class.std::__1::__tree_node.1501"* %83, i64 0, i32 0, i32 0, i32 0
  %91 = load %"class.std::__1::__tree_node_base"*, %"class.std::__1::__tree_node_base"** %90, align 8
  %92 = icmp eq %"class.std::__1::__tree_node_base"* %91, null
  br i1 %92, label %93, label %103

93:                                               ; preds = %89
  %94 = getelementptr inbounds %"class.std::__1::__tree_node.1501", %"class.std::__1::__tree_node.1501"* %83, i64 0, i32 0, i32 0, i32 0
  %95 = getelementptr inbounds %"class.std::__1::__tree_node.1501", %"class.std::__1::__tree_node.1501"* %83, i64 0, i32 0, i32 0
  br label %108

96:                                               ; preds = %82
  %97 = getelementptr inbounds %"class.std::__1::__tree_node.1501", %"class.std::__1::__tree_node.1501"* %83, i64 0, i32 0, i32 1
  %98 = load %"class.std::__1::__tree_node_base"*, %"class.std::__1::__tree_node_base"** %97, align 8
  %99 = icmp eq %"class.std::__1::__tree_node_base"* %98, null
  br i1 %99, label %100, label %103

100:                                              ; preds = %96
  %101 = getelementptr inbounds %"class.std::__1::__tree_node.1501", %"class.std::__1::__tree_node.1501"* %83, i64 0, i32 0, i32 1
  %102 = getelementptr inbounds %"class.std::__1::__tree_node.1501", %"class.std::__1::__tree_node.1501"* %83, i64 0, i32 0, i32 0
  br label %108

103:                                              ; preds = %96, %89
  %104 = phi %"class.std::__1::__tree_node_base"* [ %91, %89 ], [ %98, %96 ]
  %105 = bitcast %"class.std::__1::__tree_node_base"* %104 to %"class.std::__1::__tree_node.1501"*
  br label %82

106:                                              ; preds = %71
  %107 = getelementptr inbounds %"class.std::__1::__tree_end_node", %"class.std::__1::__tree_end_node"* %76, i64 0, i32 0
  br label %108

108:                                              ; preds = %106, %100, %93
  %109 = phi %"class.std::__1::__tree_end_node"* [ %76, %106 ], [ %95, %93 ], [ %102, %100 ]
  %110 = phi %"class.std::__1::__tree_node_base"** [ %107, %106 ], [ %94, %93 ], [ %101, %100 ]
  %111 = inttoptr i64 %72 to %"class.std::__1::__tree_node_base"*
  %112 = getelementptr inbounds %"class.std::__1::__tree_node_base", %"class.std::__1::__tree_node_base"* %111, i64 0, i32 2
  %113 = inttoptr i64 %72 to i8*
  tail call void @llvm.memset.p0i8.i64(i8* align 8 %113, i8 0, i64 16, i1 false) #16
  store %"class.std::__1::__tree_end_node"* %109, %"class.std::__1::__tree_end_node"** %112, align 8
  store %"class.std::__1::__tree_node_base"* %111, %"class.std::__1::__tree_node_base"** %110, align 8
  %114 = getelementptr inbounds %"class.std::__1::multiset.1345", %"class.std::__1::multiset.1345"* %58, i64 0, i32 0, i32 0
  %115 = load %"class.std::__1::__tree_end_node"*, %"class.std::__1::__tree_end_node"** %114, align 8
  %116 = getelementptr inbounds %"class.std::__1::__tree_end_node", %"class.std::__1::__tree_end_node"* %115, i64 0, i32 0
  %117 = load %"class.std::__1::__tree_node_base"*, %"class.std::__1::__tree_node_base"** %116, align 8
  %118 = icmp eq %"class.std::__1::__tree_node_base"* %117, null
  br i1 %118, label %123, label %119

119:                                              ; preds = %108
  %120 = ptrtoint %"class.std::__1::__tree_node_base"* %117 to i64
  %121 = bitcast %"class.std::__1::multiset.1345"* %58 to i64*
  store i64 %120, i64* %121, align 8
  %122 = load %"class.std::__1::__tree_node_base"*, %"class.std::__1::__tree_node_base"** %110, align 8
  br label %123

123:                                              ; preds = %108, %119
  %124 = phi %"class.std::__1::__tree_node_base"* [ %111, %108 ], [ %122, %119 ]
  %125 = getelementptr inbounds %"class.v8::internal::ZoneMultiset.1344", %"class.v8::internal::ZoneMultiset.1344"* %57, i64 %55, i32 0, i32 0, i32 1, i32 0, i32 0, i32 0
  %126 = load %"class.std::__1::__tree_node_base"*, %"class.std::__1::__tree_node_base"** %125, align 8
  tail call void @_ZNSt3__127__tree_balance_after_insertIPNS_16__tree_node_baseIPvEEEEvT_S5_(%"class.std::__1::__tree_node_base"* %126, %"class.std::__1::__tree_node_base"* %124) #16
  %127 = getelementptr inbounds %"class.v8::internal::ZoneMultiset.1344", %"class.v8::internal::ZoneMultiset.1344"* %57, i64 %55, i32 0, i32 0, i32 2, i32 0, i32 0
  %128 = load i64, i64* %127, align 8
  %129 = add i64 %128, 1
  store i64 %129, i64* %127, align 8
  ret void
}

; Function Attrs: nounwind ssp uwtable
define hidden void @_ZN2v88internal8compiler19LinearScanAllocator14ForwardStateToENS1_16LifetimePositionE(%"class.v8::internal::compiler::LinearScanAllocator"*, i32) local_unnamed_addr #0 align 2 {
  %3 = alloca i32, align 4
  %4 = alloca %"class.v8::internal::ZoneVector.1309", align 8
  %5 = alloca i32, align 4
  %6 = getelementptr inbounds %"class.v8::internal::compiler::LinearScanAllocator", %"class.v8::internal::compiler::LinearScanAllocator"* %0, i64 0, i32 4
  %7 = getelementptr inbounds %"class.v8::internal::compiler::LifetimePosition", %"class.v8::internal::compiler::LifetimePosition"* %6, i64 0, i32 0
  %8 = load i32, i32* %7, align 4
  %9 = icmp sgt i32 %8, %1
  br i1 %9, label %138, label %10

10:                                               ; preds = %2
  %11 = getelementptr inbounds %"class.v8::internal::compiler::LinearScanAllocator", %"class.v8::internal::compiler::LinearScanAllocator"* %0, i64 0, i32 4, i32 0
  store i32 2147483647, i32* %11, align 8
  %12 = getelementptr inbounds %"class.v8::internal::compiler::LinearScanAllocator", %"class.v8::internal::compiler::LinearScanAllocator"* %0, i64 0, i32 2, i32 0, i32 0, i32 0
  %13 = load %"class.v8::internal::compiler::LiveRange"**, %"class.v8::internal::compiler::LiveRange"*** %12, align 8
  %14 = getelementptr inbounds %"class.v8::internal::compiler::LinearScanAllocator", %"class.v8::internal::compiler::LinearScanAllocator"* %0, i64 0, i32 2, i32 0, i32 0, i32 1
  %15 = load %"class.v8::internal::compiler::LiveRange"**, %"class.v8::internal::compiler::LiveRange"*** %14, align 8
  %16 = icmp eq %"class.v8::internal::compiler::LiveRange"** %13, %15
  br i1 %16, label %138, label %17

17:                                               ; preds = %10
  %18 = getelementptr inbounds %"class.v8::internal::compiler::LinearScanAllocator", %"class.v8::internal::compiler::LinearScanAllocator"* %0, i64 0, i32 0, i32 0
  %19 = bitcast %"class.v8::internal::compiler::LiveRange"*** %14 to i64*
  %20 = bitcast i32* %3 to i8*
  %21 = bitcast i32* %3 to %"class.v8::internal::compiler::LifetimePosition"*
  br label %22

22:                                               ; preds = %17, %134
  %23 = phi %"class.v8::internal::compiler::LiveRange"** [ %15, %17 ], [ %136, %134 ]
  %24 = phi %"class.v8::internal::compiler::LiveRange"** [ %13, %17 ], [ %135, %134 ]
  %25 = load %"class.v8::internal::compiler::LiveRange"*, %"class.v8::internal::compiler::LiveRange"** %24, align 8
  %26 = getelementptr inbounds %"class.v8::internal::compiler::LiveRange", %"class.v8::internal::compiler::LiveRange"* %25, i64 0, i32 2
  %27 = load %"class.v8::internal::compiler::UseInterval"*, %"class.v8::internal::compiler::UseInterval"** %26, align 8
  %28 = getelementptr inbounds %"class.v8::internal::compiler::UseInterval", %"class.v8::internal::compiler::UseInterval"* %27, i64 0, i32 1, i32 0
  %29 = load i32, i32* %28, align 4
  %30 = icmp sgt i32 %29, %1
  br i1 %30, label %58, label %31

31:                                               ; preds = %22
  %32 = ptrtoint %"class.v8::internal::compiler::LiveRange"** %23 to i64
  %33 = load %"class.v8::internal::compiler::TopTierRegisterAllocationData"*, %"class.v8::internal::compiler::TopTierRegisterAllocationData"** %18, align 8
  %34 = getelementptr inbounds %"class.v8::internal::compiler::TopTierRegisterAllocationData", %"class.v8::internal::compiler::TopTierRegisterAllocationData"* %33, i64 0, i32 23, i32 0
  %35 = load i32, i32* %34, align 4
  %36 = and i32 %35, 1
  %37 = icmp eq i32 %36, 0
  br i1 %37, label %46, label %38

38:                                               ; preds = %31
  %39 = getelementptr inbounds %"class.v8::internal::compiler::LiveRange", %"class.v8::internal::compiler::LiveRange"* %25, i64 0, i32 5
  %40 = load %"class.v8::internal::compiler::TopLevelLiveRange"*, %"class.v8::internal::compiler::TopLevelLiveRange"** %39, align 8
  %41 = getelementptr inbounds %"class.v8::internal::compiler::TopLevelLiveRange", %"class.v8::internal::compiler::TopLevelLiveRange"* %40, i64 0, i32 1
  %42 = load i32, i32* %41, align 4
  %43 = getelementptr inbounds %"class.v8::internal::compiler::LiveRange", %"class.v8::internal::compiler::LiveRange"* %25, i64 0, i32 0
  %44 = load i32, i32* %43, align 8
  tail call void (i8*, ...) @_ZN2v88internal6PrintFEPKcz(i8* getelementptr inbounds ([48 x i8], [48 x i8]* @.str.81, i64 0, i64 0), i32 %42, i32 %44) #16
  %45 = load i64, i64* %19, align 8
  br label %46

46:                                               ; preds = %38, %31
  %47 = phi i64 [ %45, %38 ], [ %32, %31 ]
  %48 = getelementptr inbounds %"class.v8::internal::compiler::LiveRange"*, %"class.v8::internal::compiler::LiveRange"** %24, i64 1
  %49 = ptrtoint %"class.v8::internal::compiler::LiveRange"** %48 to i64
  %50 = sub i64 %47, %49
  %51 = ashr exact i64 %50, 3
  %52 = icmp eq i64 %50, 0
  br i1 %52, label %56, label %53

53:                                               ; preds = %46
  %54 = bitcast %"class.v8::internal::compiler::LiveRange"** %24 to i8*
  %55 = bitcast %"class.v8::internal::compiler::LiveRange"** %48 to i8*
  tail call void @llvm.memmove.p0i8.p0i8.i64(i8* align 8 %54, i8* align 8 %55, i64 %50, i1 false) #16
  br label %56

56:                                               ; preds = %46, %53
  %57 = getelementptr inbounds %"class.v8::internal::compiler::LiveRange"*, %"class.v8::internal::compiler::LiveRange"** %24, i64 %51
  store %"class.v8::internal::compiler::LiveRange"** %57, %"class.v8::internal::compiler::LiveRange"*** %14, align 8
  br label %134

58:                                               ; preds = %22
  %59 = getelementptr inbounds %"class.v8::internal::compiler::LiveRange", %"class.v8::internal::compiler::LiveRange"* %25, i64 0, i32 3
  %60 = load %"class.v8::internal::compiler::UseInterval"*, %"class.v8::internal::compiler::UseInterval"** %59, align 8
  %61 = icmp eq %"class.v8::internal::compiler::UseInterval"* %60, null
  br i1 %61, label %109, label %62

62:                                               ; preds = %58
  %63 = getelementptr inbounds %"class.v8::internal::compiler::UseInterval", %"class.v8::internal::compiler::UseInterval"* %60, i64 0, i32 0, i32 0
  %64 = load i32, i32* %63, align 8
  %65 = icmp sgt i32 %64, %1
  br i1 %65, label %109, label %66

66:                                               ; preds = %62
  %67 = getelementptr inbounds %"class.v8::internal::compiler::LiveRange", %"class.v8::internal::compiler::LiveRange"* %25, i64 0, i32 7
  %68 = load %"class.v8::internal::compiler::UseInterval"*, %"class.v8::internal::compiler::UseInterval"** %67, align 8
  %69 = icmp eq %"class.v8::internal::compiler::UseInterval"* %68, null
  br i1 %69, label %75, label %70

70:                                               ; preds = %66
  %71 = getelementptr inbounds %"class.v8::internal::compiler::UseInterval", %"class.v8::internal::compiler::UseInterval"* %68, i64 0, i32 0, i32 0
  %72 = load i32, i32* %71, align 8
  %73 = icmp sgt i32 %72, %1
  br i1 %73, label %74, label %75

74:                                               ; preds = %70
  store %"class.v8::internal::compiler::UseInterval"* null, %"class.v8::internal::compiler::UseInterval"** %67, align 8
  br label %75

75:                                               ; preds = %74, %70, %66
  %76 = phi %"class.v8::internal::compiler::UseInterval"* [ null, %74 ], [ %68, %70 ], [ null, %66 ]
  %77 = phi %"class.v8::internal::compiler::UseInterval"** [ %59, %74 ], [ %67, %70 ], [ %59, %66 ]
  %78 = load %"class.v8::internal::compiler::UseInterval"*, %"class.v8::internal::compiler::UseInterval"** %77, align 8
  %79 = icmp eq %"class.v8::internal::compiler::UseInterval"* %78, null
  br i1 %79, label %109, label %84

80:                                               ; preds = %105
  %81 = getelementptr inbounds %"class.v8::internal::compiler::UseInterval", %"class.v8::internal::compiler::UseInterval"* %86, i64 0, i32 2
  %82 = load %"class.v8::internal::compiler::UseInterval"*, %"class.v8::internal::compiler::UseInterval"** %81, align 8
  %83 = icmp eq %"class.v8::internal::compiler::UseInterval"* %82, null
  br i1 %83, label %109, label %84

84:                                               ; preds = %75, %80
  %85 = phi %"class.v8::internal::compiler::UseInterval"* [ %102, %80 ], [ %76, %75 ]
  %86 = phi %"class.v8::internal::compiler::UseInterval"* [ %82, %80 ], [ %78, %75 ]
  %87 = getelementptr inbounds %"class.v8::internal::compiler::UseInterval", %"class.v8::internal::compiler::UseInterval"* %86, i64 0, i32 0, i32 0
  %88 = load i32, i32* %87, align 8
  %89 = icmp sgt i32 %88, %1
  br i1 %89, label %101, label %90

90:                                               ; preds = %84
  %91 = load %"class.v8::internal::compiler::UseInterval"*, %"class.v8::internal::compiler::UseInterval"** %67, align 8
  %92 = icmp eq %"class.v8::internal::compiler::UseInterval"* %91, null
  br i1 %92, label %96, label %93

93:                                               ; preds = %90
  %94 = getelementptr inbounds %"class.v8::internal::compiler::UseInterval", %"class.v8::internal::compiler::UseInterval"* %91, i64 0, i32 0, i32 0
  %95 = load i32, i32* %94, align 8
  br label %96

96:                                               ; preds = %93, %90
  %97 = phi i32 [ %95, %93 ], [ -1, %90 ]
  %98 = icmp sgt i32 %88, %97
  br i1 %98, label %99, label %101

99:                                               ; preds = %96
  store %"class.v8::internal::compiler::UseInterval"* %86, %"class.v8::internal::compiler::UseInterval"** %67, align 8
  %100 = load i32, i32* %87, align 4
  br label %101

101:                                              ; preds = %99, %96, %84
  %102 = phi %"class.v8::internal::compiler::UseInterval"* [ %85, %84 ], [ %91, %96 ], [ %86, %99 ]
  %103 = phi i32 [ %88, %84 ], [ %88, %96 ], [ %100, %99 ]
  %104 = icmp sgt i32 %103, %1
  br i1 %104, label %109, label %105

105:                                              ; preds = %101
  %106 = getelementptr inbounds %"class.v8::internal::compiler::UseInterval", %"class.v8::internal::compiler::UseInterval"* %86, i64 0, i32 1, i32 0
  %107 = load i32, i32* %106, align 4
  %108 = icmp sgt i32 %107, %1
  br i1 %108, label %111, label %80

109:                                              ; preds = %80, %101, %58, %62, %75
  %110 = tail call %"class.v8::internal::compiler::LiveRange"** @_ZN2v88internal8compiler19LinearScanAllocator16ActiveToInactiveENSt3__111__wrap_iterIPPNS1_9LiveRangeEEENS1_16LifetimePositionE(%"class.v8::internal::compiler::LinearScanAllocator"* %0, %"class.v8::internal::compiler::LiveRange"** %24, i32 %1)
  br label %134

111:                                              ; preds = %105
  call void @llvm.lifetime.start.p0i8(i64 4, i8* nonnull %20)
  %112 = icmp eq %"class.v8::internal::compiler::UseInterval"* %102, null
  br i1 %112, label %118, label %113

113:                                              ; preds = %111
  %114 = getelementptr inbounds %"class.v8::internal::compiler::UseInterval", %"class.v8::internal::compiler::UseInterval"* %102, i64 0, i32 0, i32 0
  %115 = load i32, i32* %114, align 8
  %116 = icmp sgt i32 %115, %1
  br i1 %116, label %117, label %118

117:                                              ; preds = %113
  store %"class.v8::internal::compiler::UseInterval"* null, %"class.v8::internal::compiler::UseInterval"** %67, align 8
  br label %118

118:                                              ; preds = %111, %117, %113
  %119 = phi %"class.v8::internal::compiler::UseInterval"** [ %59, %111 ], [ %67, %113 ], [ %59, %117 ]
  br label %120

120:                                              ; preds = %118, %120
  %121 = phi %"class.v8::internal::compiler::UseInterval"** [ %126, %120 ], [ %119, %118 ]
  %122 = load %"class.v8::internal::compiler::UseInterval"*, %"class.v8::internal::compiler::UseInterval"** %121, align 8
  %123 = getelementptr inbounds %"class.v8::internal::compiler::UseInterval", %"class.v8::internal::compiler::UseInterval"* %122, i64 0, i32 1, i32 0
  %124 = load i32, i32* %123, align 4
  %125 = icmp slt i32 %124, %1
  %126 = getelementptr inbounds %"class.v8::internal::compiler::UseInterval", %"class.v8::internal::compiler::UseInterval"* %122, i64 0, i32 2
  br i1 %125, label %120, label %127

127:                                              ; preds = %120
  store i32 %124, i32* %3, align 4
  %128 = load i32, i32* %7, align 4
  %129 = icmp slt i32 %124, %128
  %130 = select i1 %129, %"class.v8::internal::compiler::LifetimePosition"* %21, %"class.v8::internal::compiler::LifetimePosition"* %6
  %131 = getelementptr inbounds %"class.v8::internal::compiler::LifetimePosition", %"class.v8::internal::compiler::LifetimePosition"* %130, i64 0, i32 0
  %132 = load i32, i32* %131, align 4
  store i32 %132, i32* %7, align 8
  call void @llvm.lifetime.end.p0i8(i64 4, i8* nonnull %20)
  %133 = getelementptr inbounds %"class.v8::internal::compiler::LiveRange"*, %"class.v8::internal::compiler::LiveRange"** %24, i64 1
  br label %134

134:                                              ; preds = %109, %127, %56
  %135 = phi %"class.v8::internal::compiler::LiveRange"** [ %24, %56 ], [ %133, %127 ], [ %110, %109 ]
  %136 = load %"class.v8::internal::compiler::LiveRange"**, %"class.v8::internal::compiler::LiveRange"*** %14, align 8
  %137 = icmp eq %"class.v8::internal::compiler::LiveRange"** %135, %136
  br i1 %137, label %138, label %22

138:                                              ; preds = %134, %10, %2
  %139 = getelementptr inbounds %"class.v8::internal::compiler::LinearScanAllocator", %"class.v8::internal::compiler::LinearScanAllocator"* %0, i64 0, i32 5
  %140 = getelementptr inbounds %"class.v8::internal::compiler::LifetimePosition", %"class.v8::internal::compiler::LifetimePosition"* %139, i64 0, i32 0
  %141 = load i32, i32* %140, align 4
  %142 = icmp sgt i32 %141, %1
  br i1 %142, label %702, label %143

143:                                              ; preds = %138
  %144 = getelementptr inbounds %"class.v8::internal::compiler::LinearScanAllocator", %"class.v8::internal::compiler::LinearScanAllocator"* %0, i64 0, i32 5, i32 0
  store i32 2147483647, i32* %144, align 4
  %145 = getelementptr inbounds %"class.v8::internal::compiler::LinearScanAllocator", %"class.v8::internal::compiler::LinearScanAllocator"* %0, i64 0, i32 0, i32 2
  %146 = load i32, i32* %145, align 4
  %147 = icmp sgt i32 %146, 0
  br i1 %147, label %148, label %702

148:                                              ; preds = %143
  %149 = bitcast %"class.v8::internal::ZoneVector.1309"* %4 to i8*
  %150 = getelementptr inbounds %"class.v8::internal::compiler::LinearScanAllocator", %"class.v8::internal::compiler::LinearScanAllocator"* %0, i64 0, i32 0, i32 0
  %151 = getelementptr inbounds %"class.v8::internal::ZoneVector.1309", %"class.v8::internal::ZoneVector.1309"* %4, i64 0, i32 0, i32 0, i32 2, i32 1
  %152 = bitcast %"struct.std::__1::__compressed_pair_elem.1314"* %151 to i64*
  %153 = getelementptr inbounds %"class.v8::internal::compiler::LinearScanAllocator", %"class.v8::internal::compiler::LinearScanAllocator"* %0, i64 0, i32 3, i32 0, i32 0, i32 0
  %154 = bitcast i32* %5 to i8*
  %155 = bitcast i32* %5 to %"class.v8::internal::compiler::LifetimePosition"*
  %156 = getelementptr inbounds %"class.v8::internal::ZoneVector.1309", %"class.v8::internal::ZoneVector.1309"* %4, i64 0, i32 0, i32 0, i32 1
  %157 = getelementptr inbounds %"class.v8::internal::ZoneVector.1309", %"class.v8::internal::ZoneVector.1309"* %4, i64 0, i32 0, i32 0, i32 2, i32 0, i32 0
  %158 = bitcast %"class.v8::internal::compiler::LiveRange"*** %156 to i64*
  %159 = bitcast %"class.v8::internal::ZoneVector.1309"* %4 to i64*
  %160 = bitcast %"class.v8::internal::compiler::LiveRange"*** %157 to i64*
  %161 = getelementptr inbounds %"class.v8::internal::ZoneVector.1309", %"class.v8::internal::ZoneVector.1309"* %4, i64 0, i32 0, i32 0, i32 2, i32 1, i32 0, i32 0
  %162 = getelementptr inbounds %"class.v8::internal::ZoneVector.1309", %"class.v8::internal::ZoneVector.1309"* %4, i64 0, i32 0, i32 0, i32 0
  br label %163

163:                                              ; preds = %148, %614
  %164 = phi i64 [ 0, %148 ], [ %615, %614 ]
  call void @llvm.lifetime.start.p0i8(i64 32, i8* nonnull %149) #16
  %165 = load %"class.v8::internal::compiler::TopTierRegisterAllocationData"*, %"class.v8::internal::compiler::TopTierRegisterAllocationData"** %150, align 8
  %166 = getelementptr inbounds %"class.v8::internal::compiler::TopTierRegisterAllocationData", %"class.v8::internal::compiler::TopTierRegisterAllocationData"* %165, i64 0, i32 1
  %167 = bitcast %"class.v8::internal::Zone"** %166 to i64*
  %168 = load i64, i64* %167, align 8
  call void @llvm.memset.p0i8.i64(i8* nonnull align 8 %149, i8 0, i64 24, i1 false) #16
  store i64 %168, i64* %152, align 8
  %169 = load %"class.v8::internal::ZoneMultiset.1344"*, %"class.v8::internal::ZoneMultiset.1344"** %153, align 8
  %170 = getelementptr inbounds %"class.v8::internal::ZoneMultiset.1344", %"class.v8::internal::ZoneMultiset.1344"* %169, i64 %164, i32 0, i32 0, i32 0
  %171 = load %"class.std::__1::__tree_end_node"*, %"class.std::__1::__tree_end_node"** %170, align 8
  %172 = getelementptr inbounds %"class.v8::internal::ZoneMultiset.1344", %"class.v8::internal::ZoneMultiset.1344"* %169, i64 %164, i32 0, i32 0, i32 1, i32 0, i32 0
  %173 = icmp eq %"class.std::__1::__tree_end_node"* %171, %172
  br i1 %173, label %614, label %178

174:                                              ; preds = %602
  %175 = load %"class.v8::internal::compiler::LiveRange"**, %"class.v8::internal::compiler::LiveRange"*** %162, align 8
  %176 = load %"class.v8::internal::compiler::LiveRange"**, %"class.v8::internal::compiler::LiveRange"*** %156, align 8
  %177 = icmp eq %"class.v8::internal::compiler::LiveRange"** %175, %176
  br i1 %177, label %609, label %619

178:                                              ; preds = %163, %602
  %179 = phi %"class.v8::internal::ZoneMultiset.1344"* [ %604, %602 ], [ %169, %163 ]
  %180 = phi %"class.std::__1::__tree_end_node"* [ %603, %602 ], [ %171, %163 ]
  %181 = getelementptr inbounds %"class.std::__1::__tree_end_node", %"class.std::__1::__tree_end_node"* %180, i64 4
  %182 = bitcast %"class.std::__1::__tree_end_node"* %181 to i64*
  %183 = load i64, i64* %182, align 8
  %184 = inttoptr i64 %183 to %"class.v8::internal::compiler::LiveRange"*
  %185 = getelementptr inbounds %"class.v8::internal::compiler::LiveRange", %"class.v8::internal::compiler::LiveRange"* %184, i64 0, i32 2
  %186 = load %"class.v8::internal::compiler::UseInterval"*, %"class.v8::internal::compiler::UseInterval"** %185, align 8
  %187 = getelementptr inbounds %"class.v8::internal::compiler::UseInterval", %"class.v8::internal::compiler::UseInterval"* %186, i64 0, i32 1, i32 0
  %188 = load i32, i32* %187, align 4
  %189 = icmp sgt i32 %188, %1
  br i1 %189, label %254, label %190

190:                                              ; preds = %178
  %191 = load %"class.v8::internal::compiler::TopTierRegisterAllocationData"*, %"class.v8::internal::compiler::TopTierRegisterAllocationData"** %150, align 8
  %192 = getelementptr inbounds %"class.v8::internal::compiler::TopTierRegisterAllocationData", %"class.v8::internal::compiler::TopTierRegisterAllocationData"* %191, i64 0, i32 23, i32 0
  %193 = load i32, i32* %192, align 4
  %194 = and i32 %193, 1
  %195 = icmp eq i32 %194, 0
  br i1 %195, label %204, label %196

196:                                              ; preds = %190
  %197 = getelementptr inbounds %"class.v8::internal::compiler::LiveRange", %"class.v8::internal::compiler::LiveRange"* %184, i64 0, i32 5
  %198 = load %"class.v8::internal::compiler::TopLevelLiveRange"*, %"class.v8::internal::compiler::TopLevelLiveRange"** %197, align 8
  %199 = getelementptr inbounds %"class.v8::internal::compiler::TopLevelLiveRange", %"class.v8::internal::compiler::TopLevelLiveRange"* %198, i64 0, i32 1
  %200 = load i32, i32* %199, align 4
  %201 = getelementptr inbounds %"class.v8::internal::compiler::LiveRange", %"class.v8::internal::compiler::LiveRange"* %184, i64 0, i32 0
  %202 = load i32, i32* %201, align 8
  tail call void (i8*, ...) @_ZN2v88internal6PrintFEPKcz(i8* getelementptr inbounds ([50 x i8], [50 x i8]* @.str.83, i64 0, i64 0), i32 %200, i32 %202) #16
  %203 = load %"class.v8::internal::ZoneMultiset.1344"*, %"class.v8::internal::ZoneMultiset.1344"** %153, align 8
  br label %204

204:                                              ; preds = %196, %190
  %205 = phi %"class.v8::internal::ZoneMultiset.1344"* [ %203, %196 ], [ %179, %190 ]
  %206 = getelementptr inbounds %"class.v8::internal::compiler::LiveRange", %"class.v8::internal::compiler::LiveRange"* %184, i64 0, i32 1
  %207 = load i32, i32* %206, align 4
  %208 = lshr i32 %207, 7
  %209 = and i32 %208, 63
  %210 = zext i32 %209 to i64
  %211 = getelementptr inbounds %"class.v8::internal::ZoneMultiset.1344", %"class.v8::internal::ZoneMultiset.1344"* %205, i64 %210, i32 0
  %212 = getelementptr inbounds %"class.std::__1::__tree_end_node", %"class.std::__1::__tree_end_node"* %180, i64 1, i32 0
  %213 = load %"class.std::__1::__tree_node_base"*, %"class.std::__1::__tree_node_base"** %212, align 8
  %214 = icmp eq %"class.std::__1::__tree_node_base"* %213, null
  br i1 %214, label %215, label %223

215:                                              ; preds = %204
  %216 = bitcast %"class.std::__1::__tree_end_node"* %180 to %"class.std::__1::__tree_node_base"*
  %217 = getelementptr inbounds %"class.std::__1::__tree_end_node", %"class.std::__1::__tree_end_node"* %180, i64 2
  %218 = bitcast %"class.std::__1::__tree_end_node"* %217 to %"class.std::__1::__tree_end_node"**
  %219 = load %"class.std::__1::__tree_end_node"*, %"class.std::__1::__tree_end_node"** %218, align 8
  %220 = getelementptr inbounds %"class.std::__1::__tree_end_node", %"class.std::__1::__tree_end_node"* %219, i64 0, i32 0
  %221 = load %"class.std::__1::__tree_node_base"*, %"class.std::__1::__tree_node_base"** %220, align 8
  %222 = icmp eq %"class.std::__1::__tree_node_base"* %221, %216
  br i1 %222, label %239, label %230

223:                                              ; preds = %204, %223
  %224 = phi %"class.std::__1::__tree_node_base"* [ %226, %223 ], [ %213, %204 ]
  %225 = getelementptr inbounds %"class.std::__1::__tree_node_base", %"class.std::__1::__tree_node_base"* %224, i64 0, i32 0, i32 0
  %226 = load %"class.std::__1::__tree_node_base"*, %"class.std::__1::__tree_node_base"** %225, align 8
  %227 = icmp eq %"class.std::__1::__tree_node_base"* %226, null
  br i1 %227, label %228, label %223

228:                                              ; preds = %223
  %229 = getelementptr inbounds %"class.std::__1::__tree_node_base", %"class.std::__1::__tree_node_base"* %224, i64 0, i32 0
  br label %239

230:                                              ; preds = %215, %230
  %231 = phi %"class.std::__1::__tree_end_node"** [ %234, %230 ], [ %218, %215 ]
  %232 = bitcast %"class.std::__1::__tree_end_node"** %231 to %"class.std::__1::__tree_node_base"**
  %233 = load %"class.std::__1::__tree_node_base"*, %"class.std::__1::__tree_node_base"** %232, align 8
  %234 = getelementptr inbounds %"class.std::__1::__tree_node_base", %"class.std::__1::__tree_node_base"* %233, i64 0, i32 2
  %235 = load %"class.std::__1::__tree_end_node"*, %"class.std::__1::__tree_end_node"** %234, align 8
  %236 = getelementptr inbounds %"class.std::__1::__tree_end_node", %"class.std::__1::__tree_end_node"* %235, i64 0, i32 0
  %237 = load %"class.std::__1::__tree_node_base"*, %"class.std::__1::__tree_node_base"** %236, align 8
  %238 = icmp eq %"class.std::__1::__tree_node_base"* %237, %233
  br i1 %238, label %239, label %230

239:                                              ; preds = %230, %228, %215
  %240 = phi %"class.std::__1::__tree_end_node"* [ %229, %228 ], [ %219, %215 ], [ %235, %230 ]
  %241 = getelementptr inbounds %"class.std::__1::multiset.1345", %"class.std::__1::multiset.1345"* %211, i64 0, i32 0, i32 0
  %242 = load %"class.std::__1::__tree_end_node"*, %"class.std::__1::__tree_end_node"** %241, align 8
  %243 = icmp eq %"class.std::__1::__tree_end_node"* %242, %180
  br i1 %243, label %244, label %247

244:                                              ; preds = %239
  %245 = ptrtoint %"class.std::__1::__tree_end_node"* %240 to i64
  %246 = bitcast %"class.std::__1::multiset.1345"* %211 to i64*
  store i64 %245, i64* %246, align 8
  br label %247

247:                                              ; preds = %239, %244
  %248 = getelementptr inbounds %"class.v8::internal::ZoneMultiset.1344", %"class.v8::internal::ZoneMultiset.1344"* %205, i64 %210, i32 0, i32 0, i32 2, i32 0, i32 0
  %249 = load i64, i64* %248, align 8
  %250 = add i64 %249, -1
  store i64 %250, i64* %248, align 8
  %251 = getelementptr inbounds %"class.v8::internal::ZoneMultiset.1344", %"class.v8::internal::ZoneMultiset.1344"* %205, i64 %210, i32 0, i32 0, i32 1, i32 0, i32 0, i32 0
  %252 = load %"class.std::__1::__tree_node_base"*, %"class.std::__1::__tree_node_base"** %251, align 8
  %253 = bitcast %"class.std::__1::__tree_end_node"* %180 to %"class.std::__1::__tree_node_base"*
  tail call void @_ZNSt3__113__tree_removeIPNS_16__tree_node_baseIPvEEEEvT_S5_(%"class.std::__1::__tree_node_base"* %252, %"class.std::__1::__tree_node_base"* %253) #16
  br label %602

254:                                              ; preds = %178
  %255 = getelementptr inbounds %"class.v8::internal::compiler::LiveRange", %"class.v8::internal::compiler::LiveRange"* %184, i64 0, i32 3
  %256 = load %"class.v8::internal::compiler::UseInterval"*, %"class.v8::internal::compiler::UseInterval"** %255, align 8
  %257 = icmp eq %"class.v8::internal::compiler::UseInterval"* %256, null
  br i1 %257, label %304, label %258

258:                                              ; preds = %254
  %259 = getelementptr inbounds %"class.v8::internal::compiler::UseInterval", %"class.v8::internal::compiler::UseInterval"* %256, i64 0, i32 0, i32 0
  %260 = load i32, i32* %259, align 8
  %261 = icmp sgt i32 %260, %1
  br i1 %261, label %304, label %262

262:                                              ; preds = %258
  %263 = getelementptr inbounds %"class.v8::internal::compiler::LiveRange", %"class.v8::internal::compiler::LiveRange"* %184, i64 0, i32 7
  %264 = load %"class.v8::internal::compiler::UseInterval"*, %"class.v8::internal::compiler::UseInterval"** %263, align 8
  %265 = icmp eq %"class.v8::internal::compiler::UseInterval"* %264, null
  br i1 %265, label %271, label %266

266:                                              ; preds = %262
  %267 = getelementptr inbounds %"class.v8::internal::compiler::UseInterval", %"class.v8::internal::compiler::UseInterval"* %264, i64 0, i32 0, i32 0
  %268 = load i32, i32* %267, align 8
  %269 = icmp sgt i32 %268, %1
  br i1 %269, label %270, label %271

270:                                              ; preds = %266
  store %"class.v8::internal::compiler::UseInterval"* null, %"class.v8::internal::compiler::UseInterval"** %263, align 8
  br label %271

271:                                              ; preds = %270, %266, %262
  %272 = phi %"class.v8::internal::compiler::UseInterval"** [ %255, %270 ], [ %263, %266 ], [ %255, %262 ]
  %273 = load %"class.v8::internal::compiler::UseInterval"*, %"class.v8::internal::compiler::UseInterval"** %272, align 8
  %274 = icmp eq %"class.v8::internal::compiler::UseInterval"* %273, null
  br i1 %274, label %304, label %279

275:                                              ; preds = %298
  %276 = getelementptr inbounds %"class.v8::internal::compiler::UseInterval", %"class.v8::internal::compiler::UseInterval"* %280, i64 0, i32 2
  %277 = load %"class.v8::internal::compiler::UseInterval"*, %"class.v8::internal::compiler::UseInterval"** %276, align 8
  %278 = icmp eq %"class.v8::internal::compiler::UseInterval"* %277, null
  br i1 %278, label %304, label %279

279:                                              ; preds = %271, %275
  %280 = phi %"class.v8::internal::compiler::UseInterval"* [ %277, %275 ], [ %273, %271 ]
  %281 = getelementptr inbounds %"class.v8::internal::compiler::UseInterval", %"class.v8::internal::compiler::UseInterval"* %280, i64 0, i32 0, i32 0
  %282 = load i32, i32* %281, align 8
  %283 = icmp sgt i32 %282, %1
  br i1 %283, label %295, label %284

284:                                              ; preds = %279
  %285 = load %"class.v8::internal::compiler::UseInterval"*, %"class.v8::internal::compiler::UseInterval"** %263, align 8
  %286 = icmp eq %"class.v8::internal::compiler::UseInterval"* %285, null
  br i1 %286, label %290, label %287

287:                                              ; preds = %284
  %288 = getelementptr inbounds %"class.v8::internal::compiler::UseInterval", %"class.v8::internal::compiler::UseInterval"* %285, i64 0, i32 0, i32 0
  %289 = load i32, i32* %288, align 8
  br label %290

290:                                              ; preds = %287, %284
  %291 = phi i32 [ %289, %287 ], [ -1, %284 ]
  %292 = icmp sgt i32 %282, %291
  br i1 %292, label %293, label %295

293:                                              ; preds = %290
  store %"class.v8::internal::compiler::UseInterval"* %280, %"class.v8::internal::compiler::UseInterval"** %263, align 8
  %294 = load i32, i32* %281, align 4
  br label %295

295:                                              ; preds = %293, %290, %279
  %296 = phi i32 [ %282, %279 ], [ %282, %290 ], [ %294, %293 ]
  %297 = icmp sgt i32 %296, %1
  br i1 %297, label %304, label %298

298:                                              ; preds = %295
  %299 = getelementptr inbounds %"class.v8::internal::compiler::UseInterval", %"class.v8::internal::compiler::UseInterval"* %280, i64 0, i32 1, i32 0
  %300 = load i32, i32* %299, align 4
  %301 = icmp sgt i32 %300, %1
  br i1 %301, label %302, label %275

302:                                              ; preds = %298
  %303 = tail call %"class.std::__1::__tree_end_node"* @_ZN2v88internal8compiler19LinearScanAllocator16InactiveToActiveENSt3__121__tree_const_iteratorIPNS1_9LiveRangeEPNS3_11__tree_nodeIS6_PvEElEENS1_16LifetimePositionE(%"class.v8::internal::compiler::LinearScanAllocator"* %0, %"class.std::__1::__tree_end_node"* %180, i32 %1)
  br label %602

304:                                              ; preds = %275, %295, %254, %258, %271
  call void @llvm.lifetime.start.p0i8(i64 4, i8* nonnull %154)
  %305 = getelementptr inbounds %"class.v8::internal::compiler::LiveRange", %"class.v8::internal::compiler::LiveRange"* %184, i64 0, i32 7
  %306 = load %"class.v8::internal::compiler::UseInterval"*, %"class.v8::internal::compiler::UseInterval"** %305, align 8
  %307 = icmp eq %"class.v8::internal::compiler::UseInterval"* %306, null
  br i1 %307, label %313, label %308

308:                                              ; preds = %304
  %309 = getelementptr inbounds %"class.v8::internal::compiler::UseInterval", %"class.v8::internal::compiler::UseInterval"* %306, i64 0, i32 0, i32 0
  %310 = load i32, i32* %309, align 8
  %311 = icmp sgt i32 %310, %1
  br i1 %311, label %312, label %313

312:                                              ; preds = %308
  store %"class.v8::internal::compiler::UseInterval"* null, %"class.v8::internal::compiler::UseInterval"** %305, align 8
  br label %313

313:                                              ; preds = %304, %312, %308
  %314 = phi %"class.v8::internal::compiler::UseInterval"** [ %255, %304 ], [ %305, %308 ], [ %255, %312 ]
  br label %315

315:                                              ; preds = %313, %315
  %316 = phi %"class.v8::internal::compiler::UseInterval"** [ %321, %315 ], [ %314, %313 ]
  %317 = load %"class.v8::internal::compiler::UseInterval"*, %"class.v8::internal::compiler::UseInterval"** %316, align 8
  %318 = getelementptr inbounds %"class.v8::internal::compiler::UseInterval", %"class.v8::internal::compiler::UseInterval"* %317, i64 0, i32 0, i32 0
  %319 = load i32, i32* %318, align 8
  %320 = icmp slt i32 %319, %1
  %321 = getelementptr inbounds %"class.v8::internal::compiler::UseInterval", %"class.v8::internal::compiler::UseInterval"* %317, i64 0, i32 2
  br i1 %320, label %315, label %322

322:                                              ; preds = %315
  %323 = getelementptr inbounds %"class.v8::internal::compiler::LiveRange", %"class.v8::internal::compiler::LiveRange"* %184, i64 0, i32 11, i32 0
  store i32 %319, i32* %323, align 8
  store i32 %319, i32* %5, align 4
  %324 = load i32, i32* %140, align 4
  %325 = icmp slt i32 %319, %324
  %326 = select i1 %325, %"class.v8::internal::compiler::LifetimePosition"* %155, %"class.v8::internal::compiler::LifetimePosition"* %139
  %327 = getelementptr inbounds %"class.v8::internal::compiler::LifetimePosition", %"class.v8::internal::compiler::LifetimePosition"* %326, i64 0, i32 0
  %328 = load i32, i32* %327, align 4
  store i32 %328, i32* %140, align 4
  call void @llvm.lifetime.end.p0i8(i64 4, i8* nonnull %154)
  %329 = load %"class.v8::internal::ZoneMultiset.1344"*, %"class.v8::internal::ZoneMultiset.1344"** %153, align 8
  %330 = getelementptr inbounds %"class.v8::internal::ZoneMultiset.1344", %"class.v8::internal::ZoneMultiset.1344"* %329, i64 %164, i32 0
  %331 = getelementptr inbounds %"class.std::__1::__tree_end_node", %"class.std::__1::__tree_end_node"* %180, i64 1, i32 0
  %332 = load %"class.std::__1::__tree_node_base"*, %"class.std::__1::__tree_node_base"** %331, align 8
  %333 = icmp eq %"class.std::__1::__tree_node_base"* %332, null
  br i1 %333, label %334, label %342

334:                                              ; preds = %322
  %335 = bitcast %"class.std::__1::__tree_end_node"* %180 to %"class.std::__1::__tree_node_base"*
  %336 = getelementptr inbounds %"class.std::__1::__tree_end_node", %"class.std::__1::__tree_end_node"* %180, i64 2
  %337 = bitcast %"class.std::__1::__tree_end_node"* %336 to %"class.std::__1::__tree_end_node"**
  %338 = load %"class.std::__1::__tree_end_node"*, %"class.std::__1::__tree_end_node"** %337, align 8
  %339 = getelementptr inbounds %"class.std::__1::__tree_end_node", %"class.std::__1::__tree_end_node"* %338, i64 0, i32 0
  %340 = load %"class.std::__1::__tree_node_base"*, %"class.std::__1::__tree_node_base"** %339, align 8
  %341 = icmp eq %"class.std::__1::__tree_node_base"* %340, %335
  br i1 %341, label %358, label %349

342:                                              ; preds = %322, %342
  %343 = phi %"class.std::__1::__tree_node_base"* [ %345, %342 ], [ %332, %322 ]
  %344 = getelementptr inbounds %"class.std::__1::__tree_node_base", %"class.std::__1::__tree_node_base"* %343, i64 0, i32 0, i32 0
  %345 = load %"class.std::__1::__tree_node_base"*, %"class.std::__1::__tree_node_base"** %344, align 8
  %346 = icmp eq %"class.std::__1::__tree_node_base"* %345, null
  br i1 %346, label %347, label %342

347:                                              ; preds = %342
  %348 = getelementptr inbounds %"class.std::__1::__tree_node_base", %"class.std::__1::__tree_node_base"* %343, i64 0, i32 0
  br label %358

349:                                              ; preds = %334, %349
  %350 = phi %"class.std::__1::__tree_end_node"** [ %353, %349 ], [ %337, %334 ]
  %351 = bitcast %"class.std::__1::__tree_end_node"** %350 to %"class.std::__1::__tree_node_base"**
  %352 = load %"class.std::__1::__tree_node_base"*, %"class.std::__1::__tree_node_base"** %351, align 8
  %353 = getelementptr inbounds %"class.std::__1::__tree_node_base", %"class.std::__1::__tree_node_base"* %352, i64 0, i32 2
  %354 = load %"class.std::__1::__tree_end_node"*, %"class.std::__1::__tree_end_node"** %353, align 8
  %355 = getelementptr inbounds %"class.std::__1::__tree_end_node", %"class.std::__1::__tree_end_node"* %354, i64 0, i32 0
  %356 = load %"class.std::__1::__tree_node_base"*, %"class.std::__1::__tree_node_base"** %355, align 8
  %357 = icmp eq %"class.std::__1::__tree_node_base"* %356, %352
  br i1 %357, label %358, label %349

358:                                              ; preds = %349, %347, %334
  %359 = phi %"class.std::__1::__tree_end_node"* [ %348, %347 ], [ %338, %334 ], [ %354, %349 ]
  %360 = getelementptr inbounds %"class.std::__1::multiset.1345", %"class.std::__1::multiset.1345"* %330, i64 0, i32 0, i32 0
  %361 = load %"class.std::__1::__tree_end_node"*, %"class.std::__1::__tree_end_node"** %360, align 8
  %362 = icmp eq %"class.std::__1::__tree_end_node"* %361, %180
  br i1 %362, label %363, label %366

363:                                              ; preds = %358
  %364 = ptrtoint %"class.std::__1::__tree_end_node"* %359 to i64
  %365 = bitcast %"class.std::__1::multiset.1345"* %330 to i64*
  store i64 %364, i64* %365, align 8
  br label %366

366:                                              ; preds = %358, %363
  %367 = getelementptr inbounds %"class.v8::internal::ZoneMultiset.1344", %"class.v8::internal::ZoneMultiset.1344"* %329, i64 %164, i32 0, i32 0, i32 2, i32 0, i32 0
  %368 = load i64, i64* %367, align 8
  %369 = add i64 %368, -1
  store i64 %369, i64* %367, align 8
  %370 = getelementptr inbounds %"class.v8::internal::ZoneMultiset.1344", %"class.v8::internal::ZoneMultiset.1344"* %329, i64 %164, i32 0, i32 0, i32 1, i32 0, i32 0, i32 0
  %371 = load %"class.std::__1::__tree_node_base"*, %"class.std::__1::__tree_node_base"** %370, align 8
  %372 = bitcast %"class.std::__1::__tree_end_node"* %180 to %"class.std::__1::__tree_node_base"*
  tail call void @_ZNSt3__113__tree_removeIPNS_16__tree_node_baseIPvEEEEvT_S5_(%"class.std::__1::__tree_node_base"* %371, %"class.std::__1::__tree_node_base"* %372) #16
  %373 = load %"class.v8::internal::compiler::LiveRange"**, %"class.v8::internal::compiler::LiveRange"*** %156, align 8
  %374 = load %"class.v8::internal::compiler::LiveRange"**, %"class.v8::internal::compiler::LiveRange"*** %157, align 8
  %375 = icmp eq %"class.v8::internal::compiler::LiveRange"** %373, %374
  %376 = ptrtoint %"class.v8::internal::compiler::LiveRange"** %374 to i64
  br i1 %375, label %381, label %377

377:                                              ; preds = %366
  %378 = bitcast %"class.v8::internal::compiler::LiveRange"** %373 to i64*
  store i64 %183, i64* %378, align 8
  %379 = getelementptr inbounds %"class.v8::internal::compiler::LiveRange"*, %"class.v8::internal::compiler::LiveRange"** %373, i64 1
  %380 = ptrtoint %"class.v8::internal::compiler::LiveRange"** %379 to i64
  store i64 %380, i64* %158, align 8
  br label %602

381:                                              ; preds = %366
  %382 = ptrtoint %"class.v8::internal::compiler::LiveRange"** %373 to i64
  %383 = load i64, i64* %159, align 8
  %384 = sub i64 %382, %383
  %385 = ashr exact i64 %384, 3
  %386 = add nsw i64 %385, 1
  %387 = icmp ugt i64 %386, 268435455
  br i1 %387, label %388, label %390

388:                                              ; preds = %381
  %389 = bitcast %"class.v8::internal::ZoneVector.1309"* %4 to %"class.std::__1::__vector_base_common"*
  call void @_ZNKSt3__120__vector_base_commonILb1EE20__throw_length_errorEv(%"class.std::__1::__vector_base_common"* nonnull %389) #17
  unreachable

390:                                              ; preds = %381
  %391 = sub i64 %376, %383
  %392 = ashr exact i64 %391, 3
  %393 = icmp ult i64 %392, 134217727
  br i1 %393, label %394, label %399

394:                                              ; preds = %390
  %395 = ashr exact i64 %391, 2
  %396 = icmp ult i64 %395, %386
  %397 = select i1 %396, i64 %386, i64 %395
  %398 = icmp eq i64 %397, 0
  br i1 %398, label %416, label %399

399:                                              ; preds = %394, %390
  %400 = phi i64 [ %397, %394 ], [ 268435455, %390 ]
  %401 = load %"class.v8::internal::Zone"*, %"class.v8::internal::Zone"** %161, align 8
  %402 = shl i64 %400, 3
  %403 = getelementptr inbounds %"class.v8::internal::Zone", %"class.v8::internal::Zone"* %401, i64 0, i32 2
  %404 = load i64, i64* %403, align 8
  %405 = getelementptr inbounds %"class.v8::internal::Zone", %"class.v8::internal::Zone"* %401, i64 0, i32 3
  %406 = load i64, i64* %405, align 8
  %407 = sub i64 %406, %404
  %408 = icmp ugt i64 %402, %407
  br i1 %408, label %409, label %411, !prof !2

409:                                              ; preds = %399
  %410 = tail call i64 @_ZN2v88internal4Zone9NewExpandEm(%"class.v8::internal::Zone"* %401, i64 %402) #16
  br label %413

411:                                              ; preds = %399
  %412 = add i64 %404, %402
  store i64 %412, i64* %403, align 8
  br label %413

413:                                              ; preds = %411, %409
  %414 = phi i64 [ %410, %409 ], [ %404, %411 ]
  %415 = inttoptr i64 %414 to %"class.v8::internal::compiler::LiveRange"**
  br label %416

416:                                              ; preds = %413, %394
  %417 = phi i64 [ %400, %413 ], [ 0, %394 ]
  %418 = phi %"class.v8::internal::compiler::LiveRange"** [ %415, %413 ], [ null, %394 ]
  %419 = getelementptr inbounds %"class.v8::internal::compiler::LiveRange"*, %"class.v8::internal::compiler::LiveRange"** %418, i64 %385
  %420 = getelementptr inbounds %"class.v8::internal::compiler::LiveRange"*, %"class.v8::internal::compiler::LiveRange"** %418, i64 %417
  %421 = ptrtoint %"class.v8::internal::compiler::LiveRange"** %420 to i64
  %422 = bitcast %"class.v8::internal::compiler::LiveRange"** %419 to i64*
  store i64 %183, i64* %422, align 8
  %423 = getelementptr inbounds %"class.v8::internal::compiler::LiveRange"*, %"class.v8::internal::compiler::LiveRange"** %419, i64 1
  %424 = ptrtoint %"class.v8::internal::compiler::LiveRange"** %423 to i64
  %425 = load %"class.v8::internal::compiler::LiveRange"**, %"class.v8::internal::compiler::LiveRange"*** %162, align 8
  %426 = ptrtoint %"class.v8::internal::compiler::LiveRange"** %425 to i64
  %427 = load %"class.v8::internal::compiler::LiveRange"**, %"class.v8::internal::compiler::LiveRange"*** %156, align 8
  %428 = icmp eq %"class.v8::internal::compiler::LiveRange"** %427, %425
  br i1 %428, label %599, label %429

429:                                              ; preds = %416
  %430 = getelementptr %"class.v8::internal::compiler::LiveRange"*, %"class.v8::internal::compiler::LiveRange"** %427, i64 -1
  %431 = ptrtoint %"class.v8::internal::compiler::LiveRange"** %430 to i64
  %432 = sub i64 %431, %426
  %433 = lshr i64 %432, 3
  %434 = add nuw nsw i64 %433, 1
  %435 = icmp ult i64 %434, 4
  br i1 %435, label %529, label %436

436:                                              ; preds = %429
  %437 = getelementptr %"class.v8::internal::compiler::LiveRange"*, %"class.v8::internal::compiler::LiveRange"** %418, i64 -1
  %438 = getelementptr %"class.v8::internal::compiler::LiveRange"*, %"class.v8::internal::compiler::LiveRange"** %427, i64 -1
  %439 = ptrtoint %"class.v8::internal::compiler::LiveRange"** %438 to i64
  %440 = sub i64 %439, %426
  %441 = lshr i64 %440, 3
  %442 = sub nsw i64 %385, %441
  %443 = getelementptr %"class.v8::internal::compiler::LiveRange"*, %"class.v8::internal::compiler::LiveRange"** %437, i64 %442
  %444 = getelementptr %"class.v8::internal::compiler::LiveRange"*, %"class.v8::internal::compiler::LiveRange"** %427, i64 -1
  %445 = sub nsw i64 0, %441
  %446 = getelementptr %"class.v8::internal::compiler::LiveRange"*, %"class.v8::internal::compiler::LiveRange"** %444, i64 %445
  %447 = icmp ult %"class.v8::internal::compiler::LiveRange"** %443, %427
  %448 = icmp ult %"class.v8::internal::compiler::LiveRange"** %446, %419
  %449 = and i1 %447, %448
  br i1 %449, label %529, label %450

450:                                              ; preds = %436
  %451 = and i64 %434, 4611686018427387900
  %452 = sub nsw i64 0, %451
  %453 = getelementptr %"class.v8::internal::compiler::LiveRange"*, %"class.v8::internal::compiler::LiveRange"** %419, i64 %452
  %454 = sub nsw i64 0, %451
  %455 = getelementptr %"class.v8::internal::compiler::LiveRange"*, %"class.v8::internal::compiler::LiveRange"** %427, i64 %454
  %456 = add nsw i64 %451, -4
  %457 = lshr exact i64 %456, 2
  %458 = add nuw nsw i64 %457, 1
  %459 = and i64 %458, 1
  %460 = icmp eq i64 %456, 0
  br i1 %460, label %505, label %461

461:                                              ; preds = %450
  %462 = sub nuw nsw i64 %458, %459
  %463 = getelementptr %"class.v8::internal::compiler::LiveRange"*, %"class.v8::internal::compiler::LiveRange"** %419, i64 -1
  %464 = getelementptr %"class.v8::internal::compiler::LiveRange"*, %"class.v8::internal::compiler::LiveRange"** %427, i64 -1
  %465 = getelementptr %"class.v8::internal::compiler::LiveRange"*, %"class.v8::internal::compiler::LiveRange"** %419, i64 -1
  %466 = getelementptr %"class.v8::internal::compiler::LiveRange"*, %"class.v8::internal::compiler::LiveRange"** %427, i64 -1
  br label %467

467:                                              ; preds = %467, %461
  %468 = phi i64 [ 0, %461 ], [ %502, %467 ]
  %469 = phi i64 [ %462, %461 ], [ %503, %467 ]
  %470 = sub i64 0, %468
  %471 = sub i64 0, %468
  %472 = getelementptr inbounds %"class.v8::internal::compiler::LiveRange"*, %"class.v8::internal::compiler::LiveRange"** %463, i64 %470
  %473 = getelementptr inbounds %"class.v8::internal::compiler::LiveRange"*, %"class.v8::internal::compiler::LiveRange"** %464, i64 %471
  %474 = getelementptr inbounds %"class.v8::internal::compiler::LiveRange"*, %"class.v8::internal::compiler::LiveRange"** %473, i64 -1
  %475 = bitcast %"class.v8::internal::compiler::LiveRange"** %474 to <2 x i64>*
  %476 = load <2 x i64>, <2 x i64>* %475, align 8, !alias.scope !147
  %477 = getelementptr inbounds %"class.v8::internal::compiler::LiveRange"*, %"class.v8::internal::compiler::LiveRange"** %473, i64 -2
  %478 = getelementptr inbounds %"class.v8::internal::compiler::LiveRange"*, %"class.v8::internal::compiler::LiveRange"** %477, i64 -1
  %479 = bitcast %"class.v8::internal::compiler::LiveRange"** %478 to <2 x i64>*
  %480 = load <2 x i64>, <2 x i64>* %479, align 8, !alias.scope !147
  %481 = getelementptr inbounds %"class.v8::internal::compiler::LiveRange"*, %"class.v8::internal::compiler::LiveRange"** %472, i64 -1
  %482 = bitcast %"class.v8::internal::compiler::LiveRange"** %481 to <2 x i64>*
  store <2 x i64> %476, <2 x i64>* %482, align 8, !alias.scope !150, !noalias !147
  %483 = getelementptr inbounds %"class.v8::internal::compiler::LiveRange"*, %"class.v8::internal::compiler::LiveRange"** %472, i64 -2
  %484 = getelementptr inbounds %"class.v8::internal::compiler::LiveRange"*, %"class.v8::internal::compiler::LiveRange"** %483, i64 -1
  %485 = bitcast %"class.v8::internal::compiler::LiveRange"** %484 to <2 x i64>*
  store <2 x i64> %480, <2 x i64>* %485, align 8, !alias.scope !150, !noalias !147
  %486 = sub nuw nsw i64 -4, %468
  %487 = sub nuw nsw i64 -4, %468
  %488 = getelementptr inbounds %"class.v8::internal::compiler::LiveRange"*, %"class.v8::internal::compiler::LiveRange"** %465, i64 %486
  %489 = getelementptr inbounds %"class.v8::internal::compiler::LiveRange"*, %"class.v8::internal::compiler::LiveRange"** %466, i64 %487
  %490 = getelementptr inbounds %"class.v8::internal::compiler::LiveRange"*, %"class.v8::internal::compiler::LiveRange"** %489, i64 -1
  %491 = bitcast %"class.v8::internal::compiler::LiveRange"** %490 to <2 x i64>*
  %492 = load <2 x i64>, <2 x i64>* %491, align 8, !alias.scope !147
  %493 = getelementptr inbounds %"class.v8::internal::compiler::LiveRange"*, %"class.v8::internal::compiler::LiveRange"** %489, i64 -2
  %494 = getelementptr inbounds %"class.v8::internal::compiler::LiveRange"*, %"class.v8::internal::compiler::LiveRange"** %493, i64 -1
  %495 = bitcast %"class.v8::internal::compiler::LiveRange"** %494 to <2 x i64>*
  %496 = load <2 x i64>, <2 x i64>* %495, align 8, !alias.scope !147
  %497 = getelementptr inbounds %"class.v8::internal::compiler::LiveRange"*, %"class.v8::internal::compiler::LiveRange"** %488, i64 -1
  %498 = bitcast %"class.v8::internal::compiler::LiveRange"** %497 to <2 x i64>*
  store <2 x i64> %492, <2 x i64>* %498, align 8, !alias.scope !150, !noalias !147
  %499 = getelementptr inbounds %"class.v8::internal::compiler::LiveRange"*, %"class.v8::internal::compiler::LiveRange"** %488, i64 -2
  %500 = getelementptr inbounds %"class.v8::internal::compiler::LiveRange"*, %"class.v8::internal::compiler::LiveRange"** %499, i64 -1
  %501 = bitcast %"class.v8::internal::compiler::LiveRange"** %500 to <2 x i64>*
  store <2 x i64> %496, <2 x i64>* %501, align 8, !alias.scope !150, !noalias !147
  %502 = add i64 %468, 8
  %503 = add i64 %469, -2
  %504 = icmp eq i64 %503, 0
  br i1 %504, label %505, label %467, !llvm.loop !152

505:                                              ; preds = %467, %450
  %506 = phi i64 [ 0, %450 ], [ %502, %467 ]
  %507 = icmp eq i64 %459, 0
  br i1 %507, label %527, label %508

508:                                              ; preds = %505
  %509 = sub i64 0, %506
  %510 = getelementptr %"class.v8::internal::compiler::LiveRange"*, %"class.v8::internal::compiler::LiveRange"** %419, i64 -1
  %511 = sub i64 0, %506
  %512 = getelementptr %"class.v8::internal::compiler::LiveRange"*, %"class.v8::internal::compiler::LiveRange"** %427, i64 -1
  %513 = getelementptr inbounds %"class.v8::internal::compiler::LiveRange"*, %"class.v8::internal::compiler::LiveRange"** %510, i64 %509
  %514 = getelementptr inbounds %"class.v8::internal::compiler::LiveRange"*, %"class.v8::internal::compiler::LiveRange"** %512, i64 %511
  %515 = getelementptr inbounds %"class.v8::internal::compiler::LiveRange"*, %"class.v8::internal::compiler::LiveRange"** %514, i64 -1
  %516 = bitcast %"class.v8::internal::compiler::LiveRange"** %515 to <2 x i64>*
  %517 = load <2 x i64>, <2 x i64>* %516, align 8, !alias.scope !147
  %518 = getelementptr inbounds %"class.v8::internal::compiler::LiveRange"*, %"class.v8::internal::compiler::LiveRange"** %514, i64 -2
  %519 = getelementptr inbounds %"class.v8::internal::compiler::LiveRange"*, %"class.v8::internal::compiler::LiveRange"** %518, i64 -1
  %520 = bitcast %"class.v8::internal::compiler::LiveRange"** %519 to <2 x i64>*
  %521 = load <2 x i64>, <2 x i64>* %520, align 8, !alias.scope !147
  %522 = getelementptr inbounds %"class.v8::internal::compiler::LiveRange"*, %"class.v8::internal::compiler::LiveRange"** %513, i64 -1
  %523 = bitcast %"class.v8::internal::compiler::LiveRange"** %522 to <2 x i64>*
  store <2 x i64> %517, <2 x i64>* %523, align 8, !alias.scope !150, !noalias !147
  %524 = getelementptr inbounds %"class.v8::internal::compiler::LiveRange"*, %"class.v8::internal::compiler::LiveRange"** %513, i64 -2
  %525 = getelementptr inbounds %"class.v8::internal::compiler::LiveRange"*, %"class.v8::internal::compiler::LiveRange"** %524, i64 -1
  %526 = bitcast %"class.v8::internal::compiler::LiveRange"** %525 to <2 x i64>*
  store <2 x i64> %521, <2 x i64>* %526, align 8, !alias.scope !150, !noalias !147
  br label %527

527:                                              ; preds = %505, %508
  %528 = icmp eq i64 %434, %451
  br i1 %528, label %599, label %529

529:                                              ; preds = %527, %436, %429
  %530 = phi %"class.v8::internal::compiler::LiveRange"** [ %419, %436 ], [ %419, %429 ], [ %453, %527 ]
  %531 = phi %"class.v8::internal::compiler::LiveRange"** [ %427, %436 ], [ %427, %429 ], [ %455, %527 ]
  %532 = getelementptr %"class.v8::internal::compiler::LiveRange"*, %"class.v8::internal::compiler::LiveRange"** %531, i64 -1
  %533 = ptrtoint %"class.v8::internal::compiler::LiveRange"** %532 to i64
  %534 = sub i64 %533, %426
  %535 = lshr i64 %534, 3
  %536 = add nuw nsw i64 %535, 1
  %537 = and i64 %536, 7
  %538 = icmp eq i64 %537, 0
  br i1 %538, label %550, label %539

539:                                              ; preds = %529, %539
  %540 = phi %"class.v8::internal::compiler::LiveRange"** [ %543, %539 ], [ %530, %529 ]
  %541 = phi %"class.v8::internal::compiler::LiveRange"** [ %544, %539 ], [ %531, %529 ]
  %542 = phi i64 [ %548, %539 ], [ %537, %529 ]
  %543 = getelementptr inbounds %"class.v8::internal::compiler::LiveRange"*, %"class.v8::internal::compiler::LiveRange"** %540, i64 -1
  %544 = getelementptr inbounds %"class.v8::internal::compiler::LiveRange"*, %"class.v8::internal::compiler::LiveRange"** %541, i64 -1
  %545 = bitcast %"class.v8::internal::compiler::LiveRange"** %544 to i64*
  %546 = load i64, i64* %545, align 8
  %547 = bitcast %"class.v8::internal::compiler::LiveRange"** %543 to i64*
  store i64 %546, i64* %547, align 8
  %548 = add i64 %542, -1
  %549 = icmp eq i64 %548, 0
  br i1 %549, label %550, label %539, !llvm.loop !153

550:                                              ; preds = %539, %529
  %551 = phi %"class.v8::internal::compiler::LiveRange"** [ undef, %529 ], [ %543, %539 ]
  %552 = phi %"class.v8::internal::compiler::LiveRange"** [ %530, %529 ], [ %543, %539 ]
  %553 = phi %"class.v8::internal::compiler::LiveRange"** [ %531, %529 ], [ %544, %539 ]
  %554 = icmp ult i64 %534, 56
  br i1 %554, label %599, label %555

555:                                              ; preds = %550, %555
  %556 = phi %"class.v8::internal::compiler::LiveRange"** [ %593, %555 ], [ %552, %550 ]
  %557 = phi %"class.v8::internal::compiler::LiveRange"** [ %594, %555 ], [ %553, %550 ]
  %558 = getelementptr inbounds %"class.v8::internal::compiler::LiveRange"*, %"class.v8::internal::compiler::LiveRange"** %556, i64 -1
  %559 = getelementptr inbounds %"class.v8::internal::compiler::LiveRange"*, %"class.v8::internal::compiler::LiveRange"** %557, i64 -1
  %560 = bitcast %"class.v8::internal::compiler::LiveRange"** %559 to i64*
  %561 = load i64, i64* %560, align 8
  %562 = bitcast %"class.v8::internal::compiler::LiveRange"** %558 to i64*
  store i64 %561, i64* %562, align 8
  %563 = getelementptr inbounds %"class.v8::internal::compiler::LiveRange"*, %"class.v8::internal::compiler::LiveRange"** %556, i64 -2
  %564 = getelementptr inbounds %"class.v8::internal::compiler::LiveRange"*, %"class.v8::internal::compiler::LiveRange"** %557, i64 -2
  %565 = bitcast %"class.v8::internal::compiler::LiveRange"** %564 to i64*
  %566 = load i64, i64* %565, align 8
  %567 = bitcast %"class.v8::internal::compiler::LiveRange"** %563 to i64*
  store i64 %566, i64* %567, align 8
  %568 = getelementptr inbounds %"class.v8::internal::compiler::LiveRange"*, %"class.v8::internal::compiler::LiveRange"** %556, i64 -3
  %569 = getelementptr inbounds %"class.v8::internal::compiler::LiveRange"*, %"class.v8::internal::compiler::LiveRange"** %557, i64 -3
  %570 = bitcast %"class.v8::internal::compiler::LiveRange"** %569 to i64*
  %571 = load i64, i64* %570, align 8
  %572 = bitcast %"class.v8::internal::compiler::LiveRange"** %568 to i64*
  store i64 %571, i64* %572, align 8
  %573 = getelementptr inbounds %"class.v8::internal::compiler::LiveRange"*, %"class.v8::internal::compiler::LiveRange"** %556, i64 -4
  %574 = getelementptr inbounds %"class.v8::internal::compiler::LiveRange"*, %"class.v8::internal::compiler::LiveRange"** %557, i64 -4
  %575 = bitcast %"class.v8::internal::compiler::LiveRange"** %574 to i64*
  %576 = load i64, i64* %575, align 8
  %577 = bitcast %"class.v8::internal::compiler::LiveRange"** %573 to i64*
  store i64 %576, i64* %577, align 8
  %578 = getelementptr inbounds %"class.v8::internal::compiler::LiveRange"*, %"class.v8::internal::compiler::LiveRange"** %556, i64 -5
  %579 = getelementptr inbounds %"class.v8::internal::compiler::LiveRange"*, %"class.v8::internal::compiler::LiveRange"** %557, i64 -5
  %580 = bitcast %"class.v8::internal::compiler::LiveRange"** %579 to i64*
  %581 = load i64, i64* %580, align 8
  %582 = bitcast %"class.v8::internal::compiler::LiveRange"** %578 to i64*
  store i64 %581, i64* %582, align 8
  %583 = getelementptr inbounds %"class.v8::internal::compiler::LiveRange"*, %"class.v8::internal::compiler::LiveRange"** %556, i64 -6
  %584 = getelementptr inbounds %"class.v8::internal::compiler::LiveRange"*, %"class.v8::internal::compiler::LiveRange"** %557, i64 -6
  %585 = bitcast %"class.v8::internal::compiler::LiveRange"** %584 to i64*
  %586 = load i64, i64* %585, align 8
  %587 = bitcast %"class.v8::internal::compiler::LiveRange"** %583 to i64*
  store i64 %586, i64* %587, align 8
  %588 = getelementptr inbounds %"class.v8::internal::compiler::LiveRange"*, %"class.v8::internal::compiler::LiveRange"** %556, i64 -7
  %589 = getelementptr inbounds %"class.v8::internal::compiler::LiveRange"*, %"class.v8::internal::compiler::LiveRange"** %557, i64 -7
  %590 = bitcast %"class.v8::internal::compiler::LiveRange"** %589 to i64*
  %591 = load i64, i64* %590, align 8
  %592 = bitcast %"class.v8::internal::compiler::LiveRange"** %588 to i64*
  store i64 %591, i64* %592, align 8
  %593 = getelementptr inbounds %"class.v8::internal::compiler::LiveRange"*, %"class.v8::internal::compiler::LiveRange"** %556, i64 -8
  %594 = getelementptr inbounds %"class.v8::internal::compiler::LiveRange"*, %"class.v8::internal::compiler::LiveRange"** %557, i64 -8
  %595 = bitcast %"class.v8::internal::compiler::LiveRange"** %594 to i64*
  %596 = load i64, i64* %595, align 8
  %597 = bitcast %"class.v8::internal::compiler::LiveRange"** %593 to i64*
  store i64 %596, i64* %597, align 8
  %598 = icmp eq %"class.v8::internal::compiler::LiveRange"** %594, %425
  br i1 %598, label %599, label %555, !llvm.loop !154

599:                                              ; preds = %550, %555, %527, %416
  %600 = phi %"class.v8::internal::compiler::LiveRange"** [ %419, %416 ], [ %453, %527 ], [ %551, %550 ], [ %593, %555 ]
  %601 = ptrtoint %"class.v8::internal::compiler::LiveRange"** %600 to i64
  store i64 %601, i64* %159, align 8
  store i64 %424, i64* %158, align 8
  store i64 %421, i64* %160, align 8
  br label %602

602:                                              ; preds = %599, %377, %302, %247
  %603 = phi %"class.std::__1::__tree_end_node"* [ %240, %247 ], [ %303, %302 ], [ %359, %377 ], [ %359, %599 ]
  %604 = load %"class.v8::internal::ZoneMultiset.1344"*, %"class.v8::internal::ZoneMultiset.1344"** %153, align 8
  %605 = getelementptr inbounds %"class.v8::internal::ZoneMultiset.1344", %"class.v8::internal::ZoneMultiset.1344"* %604, i64 %164, i32 0, i32 0, i32 1, i32 0, i32 0
  %606 = icmp eq %"class.std::__1::__tree_end_node"* %603, %605
  br i1 %606, label %174, label %178

607:                                              ; preds = %691
  %608 = load %"class.v8::internal::compiler::LiveRange"**, %"class.v8::internal::compiler::LiveRange"*** %162, align 8
  br label %609

609:                                              ; preds = %607, %174
  %610 = phi %"class.v8::internal::compiler::LiveRange"** [ %608, %607 ], [ %176, %174 ]
  %611 = icmp eq %"class.v8::internal::compiler::LiveRange"** %610, null
  br i1 %611, label %614, label %612

612:                                              ; preds = %609
  %613 = ptrtoint %"class.v8::internal::compiler::LiveRange"** %610 to i64
  store i64 %613, i64* %158, align 8
  br label %614

614:                                              ; preds = %163, %609, %612
  call void @llvm.lifetime.end.p0i8(i64 32, i8* nonnull %149) #16
  %615 = add nuw nsw i64 %164, 1
  %616 = load i32, i32* %145, align 4
  %617 = sext i32 %616 to i64
  %618 = icmp slt i64 %615, %617
  br i1 %618, label %163, label %702

619:                                              ; preds = %174, %700
  %620 = phi %"class.v8::internal::ZoneMultiset.1344"* [ %701, %700 ], [ %604, %174 ]
  %621 = phi %"class.v8::internal::compiler::LiveRange"** [ %698, %700 ], [ %175, %174 ]
  %622 = bitcast %"class.v8::internal::compiler::LiveRange"** %621 to i64*
  %623 = load i64, i64* %622, align 8
  %624 = getelementptr inbounds %"class.v8::internal::ZoneMultiset.1344", %"class.v8::internal::ZoneMultiset.1344"* %620, i64 %164, i32 0
  %625 = getelementptr inbounds %"class.v8::internal::ZoneMultiset.1344", %"class.v8::internal::ZoneMultiset.1344"* %620, i64 %164, i32 0, i32 0, i32 1, i32 1, i32 0, i32 0
  %626 = load %"class.v8::internal::Zone"*, %"class.v8::internal::Zone"** %625, align 8, !noalias !155
  %627 = getelementptr inbounds %"class.v8::internal::Zone", %"class.v8::internal::Zone"* %626, i64 0, i32 2
  %628 = load i64, i64* %627, align 8, !noalias !155
  %629 = getelementptr inbounds %"class.v8::internal::Zone", %"class.v8::internal::Zone"* %626, i64 0, i32 3
  %630 = load i64, i64* %629, align 8, !noalias !155
  %631 = sub i64 %630, %628
  %632 = icmp ult i64 %631, 40
  br i1 %632, label %633, label %635, !prof !2

633:                                              ; preds = %619
  %634 = tail call i64 @_ZN2v88internal4Zone9NewExpandEm(%"class.v8::internal::Zone"* %626, i64 40) #16, !noalias !155
  br label %637

635:                                              ; preds = %619
  %636 = add i64 %628, 40
  store i64 %636, i64* %627, align 8, !noalias !155
  br label %637

637:                                              ; preds = %635, %633
  %638 = phi i64 [ %634, %633 ], [ %628, %635 ]
  %639 = inttoptr i64 %638 to %"class.std::__1::__tree_node.1501"*
  %640 = getelementptr inbounds %"class.std::__1::__tree_node.1501", %"class.std::__1::__tree_node.1501"* %639, i64 0, i32 1
  %641 = bitcast %"class.v8::internal::compiler::LiveRange"** %640 to i64*
  store i64 %623, i64* %641, align 8, !noalias !155
  %642 = getelementptr inbounds %"class.v8::internal::ZoneMultiset.1344", %"class.v8::internal::ZoneMultiset.1344"* %620, i64 %164, i32 0, i32 0, i32 1, i32 0, i32 0
  %643 = bitcast %"class.std::__1::__tree_end_node"* %642 to %"class.std::__1::__tree_node.1501"**
  %644 = load %"class.std::__1::__tree_node.1501"*, %"class.std::__1::__tree_node.1501"** %643, align 8
  %645 = icmp eq %"class.std::__1::__tree_node.1501"* %644, null
  br i1 %645, label %674, label %646

646:                                              ; preds = %637
  %647 = inttoptr i64 %623 to %"class.v8::internal::compiler::LiveRange"*
  %648 = getelementptr inbounds %"class.v8::internal::compiler::LiveRange", %"class.v8::internal::compiler::LiveRange"* %647, i64 0, i32 11, i32 0
  %649 = load i32, i32* %648, align 8
  br label %650

650:                                              ; preds = %671, %646
  %651 = phi %"class.std::__1::__tree_node.1501"* [ %673, %671 ], [ %644, %646 ]
  %652 = getelementptr inbounds %"class.std::__1::__tree_node.1501", %"class.std::__1::__tree_node.1501"* %651, i64 0, i32 1
  %653 = load %"class.v8::internal::compiler::LiveRange"*, %"class.v8::internal::compiler::LiveRange"** %652, align 8
  %654 = getelementptr inbounds %"class.v8::internal::compiler::LiveRange", %"class.v8::internal::compiler::LiveRange"* %653, i64 0, i32 11, i32 0
  %655 = load i32, i32* %654, align 8
  %656 = icmp slt i32 %649, %655
  br i1 %656, label %657, label %664

657:                                              ; preds = %650
  %658 = getelementptr inbounds %"class.std::__1::__tree_node.1501", %"class.std::__1::__tree_node.1501"* %651, i64 0, i32 0, i32 0, i32 0
  %659 = load %"class.std::__1::__tree_node_base"*, %"class.std::__1::__tree_node_base"** %658, align 8
  %660 = icmp eq %"class.std::__1::__tree_node_base"* %659, null
  br i1 %660, label %661, label %671

661:                                              ; preds = %657
  %662 = getelementptr inbounds %"class.std::__1::__tree_node.1501", %"class.std::__1::__tree_node.1501"* %651, i64 0, i32 0, i32 0, i32 0
  %663 = getelementptr inbounds %"class.std::__1::__tree_node.1501", %"class.std::__1::__tree_node.1501"* %651, i64 0, i32 0, i32 0
  br label %676

664:                                              ; preds = %650
  %665 = getelementptr inbounds %"class.std::__1::__tree_node.1501", %"class.std::__1::__tree_node.1501"* %651, i64 0, i32 0, i32 1
  %666 = load %"class.std::__1::__tree_node_base"*, %"class.std::__1::__tree_node_base"** %665, align 8
  %667 = icmp eq %"class.std::__1::__tree_node_base"* %666, null
  br i1 %667, label %668, label %671

668:                                              ; preds = %664
  %669 = getelementptr inbounds %"class.std::__1::__tree_node.1501", %"class.std::__1::__tree_node.1501"* %651, i64 0, i32 0, i32 1
  %670 = getelementptr inbounds %"class.std::__1::__tree_node.1501", %"class.std::__1::__tree_node.1501"* %651, i64 0, i32 0, i32 0
  br label %676

671:                                              ; preds = %664, %657
  %672 = phi %"class.std::__1::__tree_node_base"* [ %659, %657 ], [ %666, %664 ]
  %673 = bitcast %"class.std::__1::__tree_node_base"* %672 to %"class.std::__1::__tree_node.1501"*
  br label %650

674:                                              ; preds = %637
  %675 = getelementptr inbounds %"class.std::__1::__tree_end_node", %"class.std::__1::__tree_end_node"* %642, i64 0, i32 0
  br label %676

676:                                              ; preds = %674, %668, %661
  %677 = phi %"class.std::__1::__tree_end_node"* [ %642, %674 ], [ %663, %661 ], [ %670, %668 ]
  %678 = phi %"class.std::__1::__tree_node_base"** [ %675, %674 ], [ %662, %661 ], [ %669, %668 ]
  %679 = inttoptr i64 %638 to %"class.std::__1::__tree_node_base"*
  %680 = getelementptr inbounds %"class.std::__1::__tree_node_base", %"class.std::__1::__tree_node_base"* %679, i64 0, i32 2
  %681 = inttoptr i64 %638 to i8*
  tail call void @llvm.memset.p0i8.i64(i8* align 8 %681, i8 0, i64 16, i1 false) #16
  store %"class.std::__1::__tree_end_node"* %677, %"class.std::__1::__tree_end_node"** %680, align 8
  store %"class.std::__1::__tree_node_base"* %679, %"class.std::__1::__tree_node_base"** %678, align 8
  %682 = getelementptr inbounds %"class.std::__1::multiset.1345", %"class.std::__1::multiset.1345"* %624, i64 0, i32 0, i32 0
  %683 = load %"class.std::__1::__tree_end_node"*, %"class.std::__1::__tree_end_node"** %682, align 8
  %684 = getelementptr inbounds %"class.std::__1::__tree_end_node", %"class.std::__1::__tree_end_node"* %683, i64 0, i32 0
  %685 = load %"class.std::__1::__tree_node_base"*, %"class.std::__1::__tree_node_base"** %684, align 8
  %686 = icmp eq %"class.std::__1::__tree_node_base"* %685, null
  br i1 %686, label %691, label %687

687:                                              ; preds = %676
  %688 = ptrtoint %"class.std::__1::__tree_node_base"* %685 to i64
  %689 = bitcast %"class.std::__1::multiset.1345"* %624 to i64*
  store i64 %688, i64* %689, align 8
  %690 = load %"class.std::__1::__tree_node_base"*, %"class.std::__1::__tree_node_base"** %678, align 8
  br label %691

691:                                              ; preds = %676, %687
  %692 = phi %"class.std::__1::__tree_node_base"* [ %679, %676 ], [ %690, %687 ]
  %693 = getelementptr inbounds %"class.v8::internal::ZoneMultiset.1344", %"class.v8::internal::ZoneMultiset.1344"* %620, i64 %164, i32 0, i32 0, i32 1, i32 0, i32 0, i32 0
  %694 = load %"class.std::__1::__tree_node_base"*, %"class.std::__1::__tree_node_base"** %693, align 8
  tail call void @_ZNSt3__127__tree_balance_after_insertIPNS_16__tree_node_baseIPvEEEEvT_S5_(%"class.std::__1::__tree_node_base"* %694, %"class.std::__1::__tree_node_base"* %692) #16
  %695 = getelementptr inbounds %"class.v8::internal::ZoneMultiset.1344", %"class.v8::internal::ZoneMultiset.1344"* %620, i64 %164, i32 0, i32 0, i32 2, i32 0, i32 0
  %696 = load i64, i64* %695, align 8
  %697 = add i64 %696, 1
  store i64 %697, i64* %695, align 8
  %698 = getelementptr inbounds %"class.v8::internal::compiler::LiveRange"*, %"class.v8::internal::compiler::LiveRange"** %621, i64 1
  %699 = icmp eq %"class.v8::internal::compiler::LiveRange"** %698, %176
  br i1 %699, label %607, label %700

700:                                              ; preds = %691
  %701 = load %"class.v8::internal::ZoneMultiset.1344"*, %"class.v8::internal::ZoneMultiset.1344"** %153, align 8
  br label %619

702:                                              ; preds = %614, %143, %138
  ret void
}

; Function Attrs: inlinehint nounwind ssp uwtable
define internal fastcc zeroext i1 @"_ZZN2v88internal8compiler19LinearScanAllocator17AllocateRegistersEvENK3$_4clENS1_9RpoNumberEPNS0_16ZoneUnorderedSetINS2_17RangeWithRegisterENS6_4HashENS6_6EqualsEEE"(%class.anon.1437* nocapture readonly, i32, %"class.v8::internal::ZoneUnorderedSet"*) unnamed_addr #5 align 2 {
  %4 = bitcast %class.anon.1437* %0 to %"class.v8::internal::compiler::RegisterAllocator"**
  %5 = load %"class.v8::internal::compiler::RegisterAllocator"*, %"class.v8::internal::compiler::RegisterAllocator"** %4, align 8
  %6 = getelementptr inbounds %"class.v8::internal::compiler::RegisterAllocator", %"class.v8::internal::compiler::RegisterAllocator"* %5, i64 0, i32 0
  %7 = load %"class.v8::internal::compiler::TopTierRegisterAllocationData"*, %"class.v8::internal::compiler::TopTierRegisterAllocationData"** %6, align 8
  %8 = getelementptr inbounds %"class.v8::internal::compiler::TopTierRegisterAllocationData", %"class.v8::internal::compiler::TopTierRegisterAllocationData"* %7, i64 0, i32 23, i32 0
  %9 = load i32, i32* %8, align 4
  %10 = and i32 %9, 1
  %11 = icmp eq i32 %10, 0
  br i1 %11, label %13, label %12

12:                                               ; preds = %3
  tail call void (i8*, ...) @_ZN2v88internal6PrintFEPKcz(i8* getelementptr inbounds ([28 x i8], [28 x i8]* @.str.142, i64 0, i64 0), i32 %1) #16
  br label %13

13:                                               ; preds = %3, %12
  %14 = getelementptr inbounds %class.anon.1437, %class.anon.1437* %0, i64 0, i32 1
  %15 = load %"class.v8::internal::compiler::InstructionBlock"*, %"class.v8::internal::compiler::InstructionBlock"** %14, align 8
  %16 = getelementptr inbounds %"class.v8::internal::compiler::InstructionBlock", %"class.v8::internal::compiler::InstructionBlock"* %15, i64 0, i32 4, i32 0
  %17 = load i32, i32* %16, align 4
  %18 = add nsw i32 %1, 1
  %19 = icmp eq i32 %18, %17
  br i1 %19, label %180, label %20

20:                                               ; preds = %13
  %21 = load %"class.v8::internal::compiler::TopTierRegisterAllocationData"*, %"class.v8::internal::compiler::TopTierRegisterAllocationData"** %6, align 8
  %22 = sext i32 %1 to i64
  %23 = getelementptr inbounds %"class.v8::internal::compiler::TopTierRegisterAllocationData", %"class.v8::internal::compiler::TopTierRegisterAllocationData"* %21, i64 0, i32 22, i32 0, i32 0, i32 0
  %24 = load %"class.v8::internal::ZoneVector.1309"*, %"class.v8::internal::ZoneVector.1309"** %23, align 8
  %25 = getelementptr inbounds %"class.v8::internal::ZoneVector.1309", %"class.v8::internal::ZoneVector.1309"* %24, i64 %22
  %26 = getelementptr inbounds %"class.v8::internal::compiler::TopTierRegisterAllocationData", %"class.v8::internal::compiler::TopTierRegisterAllocationData"* %21, i64 0, i32 23, i32 0
  %27 = load i32, i32* %26, align 4
  %28 = and i32 %27, 1
  %29 = icmp eq i32 %28, 0
  br i1 %29, label %39, label %30

30:                                               ; preds = %20
  %31 = getelementptr inbounds %"class.v8::internal::ZoneVector.1309", %"class.v8::internal::ZoneVector.1309"* %24, i64 %22, i32 0, i32 0, i32 1
  %32 = bitcast %"class.v8::internal::compiler::LiveRange"*** %31 to i64*
  %33 = load i64, i64* %32, align 8
  %34 = bitcast %"class.v8::internal::ZoneVector.1309"* %25 to i64*
  %35 = load i64, i64* %34, align 8
  %36 = sub i64 %33, %35
  %37 = ashr exact i64 %36, 3
  tail call void (i8*, ...) @_ZN2v88internal6PrintFEPKcz(i8* getelementptr inbounds ([43 x i8], [43 x i8]* @.str.143, i64 0, i64 0), i64 %37) #16
  %38 = load %"class.v8::internal::compiler::TopTierRegisterAllocationData"*, %"class.v8::internal::compiler::TopTierRegisterAllocationData"** %6, align 8
  br label %39

39:                                               ; preds = %20, %30
  %40 = phi %"class.v8::internal::compiler::TopTierRegisterAllocationData"* [ %21, %20 ], [ %38, %30 ]
  %41 = getelementptr inbounds %"class.v8::internal::compiler::TopTierRegisterAllocationData", %"class.v8::internal::compiler::TopTierRegisterAllocationData"* %40, i64 0, i32 3
  %42 = load %"class.v8::internal::compiler::InstructionSequence"*, %"class.v8::internal::compiler::InstructionSequence"** %41, align 8
  %43 = getelementptr inbounds %"class.v8::internal::compiler::InstructionSequence", %"class.v8::internal::compiler::InstructionSequence"* %42, i64 0, i32 2
  %44 = bitcast %"class.v8::internal::ZoneVector.1170"** %43 to %"class.std::__1::vector.1171"**
  %45 = load %"class.std::__1::vector.1171"*, %"class.std::__1::vector.1171"** %44, align 8
  %46 = getelementptr inbounds %"class.std::__1::vector.1171", %"class.std::__1::vector.1171"* %45, i64 0, i32 0, i32 1
  %47 = bitcast %"class.v8::internal::compiler::InstructionBlock"*** %46 to i64*
  %48 = load i64, i64* %47, align 8
  %49 = bitcast %"class.std::__1::vector.1171"* %45 to i64*
  %50 = load i64, i64* %49, align 8
  %51 = sub i64 %48, %50
  %52 = ashr exact i64 %51, 3
  %53 = icmp ugt i64 %52, %22
  br i1 %53, label %56, label %54

54:                                               ; preds = %39
  %55 = bitcast %"class.std::__1::vector.1171"* %45 to %"class.std::__1::__vector_base_common"*
  tail call void @_ZNKSt3__120__vector_base_commonILb1EE20__throw_out_of_rangeEv(%"class.std::__1::__vector_base_common"* %55) #17
  unreachable

56:                                               ; preds = %39
  %57 = inttoptr i64 %50 to %"class.v8::internal::compiler::InstructionBlock"**
  %58 = getelementptr inbounds %"class.v8::internal::compiler::InstructionBlock"*, %"class.v8::internal::compiler::InstructionBlock"** %57, i64 %22
  %59 = load %"class.v8::internal::compiler::InstructionBlock"*, %"class.v8::internal::compiler::InstructionBlock"** %58, align 8
  %60 = getelementptr inbounds %"class.v8::internal::compiler::InstructionBlock", %"class.v8::internal::compiler::InstructionBlock"* %59, i64 0, i32 9
  %61 = load i32, i32* %60, align 8
  %62 = shl nsw i32 %61, 2
  %63 = getelementptr inbounds %"class.v8::internal::ZoneVector.1309", %"class.v8::internal::ZoneVector.1309"* %25, i64 0, i32 0, i32 0, i32 0
  %64 = load %"class.v8::internal::compiler::LiveRange"**, %"class.v8::internal::compiler::LiveRange"*** %63, align 8
  %65 = getelementptr inbounds %"class.v8::internal::ZoneVector.1309", %"class.v8::internal::ZoneVector.1309"* %24, i64 %22, i32 0, i32 0, i32 1
  %66 = load %"class.v8::internal::compiler::LiveRange"**, %"class.v8::internal::compiler::LiveRange"*** %65, align 8
  %67 = icmp eq %"class.v8::internal::compiler::LiveRange"** %64, %66
  br i1 %67, label %180, label %68

68:                                               ; preds = %56
  %69 = getelementptr inbounds %"class.v8::internal::ZoneUnorderedSet", %"class.v8::internal::ZoneUnorderedSet"* %2, i64 0, i32 0, i32 0
  %70 = getelementptr inbounds %"class.v8::internal::ZoneUnorderedSet", %"class.v8::internal::ZoneUnorderedSet"* %2, i64 0, i32 0, i32 0, i32 1, i32 1, i32 0, i32 0
  %71 = getelementptr inbounds %"class.v8::internal::ZoneUnorderedSet", %"class.v8::internal::ZoneUnorderedSet"* %2, i64 0, i32 0, i32 0, i32 0, i32 0, i32 1, i32 0, i32 0, i32 0, i32 0
  %72 = getelementptr inbounds %"class.v8::internal::ZoneUnorderedSet", %"class.v8::internal::ZoneUnorderedSet"* %2, i64 0, i32 0, i32 0, i32 0, i32 0, i32 0, i32 0
  %73 = getelementptr inbounds %"class.v8::internal::ZoneUnorderedSet", %"class.v8::internal::ZoneUnorderedSet"* %2, i64 0, i32 0, i32 0, i32 1, i32 0, i32 0
  %74 = getelementptr inbounds %"struct.std::__1::__hash_node_base.1398", %"struct.std::__1::__hash_node_base.1398"* %73, i64 0, i32 0
  %75 = bitcast %"struct.std::__1::__hash_node_base.1398"* %73 to i64*
  %76 = getelementptr inbounds %"class.v8::internal::ZoneUnorderedSet", %"class.v8::internal::ZoneUnorderedSet"* %2, i64 0, i32 0, i32 0, i32 2, i32 0, i32 0
  br label %77

77:                                               ; preds = %68, %177
  %78 = phi %"class.v8::internal::compiler::LiveRange"** [ %64, %68 ], [ %178, %177 ]
  %79 = load %"class.v8::internal::compiler::LiveRange"*, %"class.v8::internal::compiler::LiveRange"** %78, align 8
  %80 = getelementptr inbounds %"class.v8::internal::compiler::LiveRange", %"class.v8::internal::compiler::LiveRange"* %79, i64 0, i32 2
  %81 = load %"class.v8::internal::compiler::UseInterval"*, %"class.v8::internal::compiler::UseInterval"** %80, align 8
  %82 = getelementptr inbounds %"class.v8::internal::compiler::UseInterval", %"class.v8::internal::compiler::UseInterval"* %81, i64 0, i32 1, i32 0
  %83 = load i32, i32* %82, align 4
  %84 = icmp slt i32 %83, %62
  br i1 %84, label %177, label %85

85:                                               ; preds = %77
  %86 = getelementptr inbounds %"class.v8::internal::compiler::LiveRange", %"class.v8::internal::compiler::LiveRange"* %79, i64 0, i32 1
  %87 = load i32, i32* %86, align 4
  %88 = and i32 %87, 8064
  %89 = icmp eq i32 %88, 4096
  br i1 %89, label %177, label %90

90:                                               ; preds = %85
  %91 = load %"class.v8::internal::Zone"*, %"class.v8::internal::Zone"** %70, align 8, !noalias !158
  %92 = getelementptr inbounds %"class.v8::internal::Zone", %"class.v8::internal::Zone"* %91, i64 0, i32 2
  %93 = load i64, i64* %92, align 8, !noalias !158
  %94 = getelementptr inbounds %"class.v8::internal::Zone", %"class.v8::internal::Zone"* %91, i64 0, i32 3
  %95 = load i64, i64* %94, align 8, !noalias !158
  %96 = sub i64 %95, %93
  %97 = icmp ult i64 %96, 32
  br i1 %97, label %98, label %100, !prof !2

98:                                               ; preds = %90
  %99 = tail call i64 @_ZN2v88internal4Zone9NewExpandEm(%"class.v8::internal::Zone"* %91, i64 32) #16, !noalias !158
  br label %102

100:                                              ; preds = %90
  %101 = add i64 %93, 32
  store i64 %101, i64* %92, align 8, !noalias !158
  br label %102

102:                                              ; preds = %98, %100
  %103 = phi i64 [ %99, %98 ], [ %93, %100 ]
  %104 = inttoptr i64 %103 to %"struct.std::__1::__hash_node"*
  %105 = getelementptr inbounds %"struct.std::__1::__hash_node", %"struct.std::__1::__hash_node"* %104, i64 0, i32 2
  %106 = getelementptr inbounds %"class.v8::internal::compiler::LiveRange", %"class.v8::internal::compiler::LiveRange"* %79, i64 0, i32 5
  %107 = bitcast %"class.v8::internal::compiler::TopLevelLiveRange"** %106 to i64*
  %108 = load i64, i64* %107, align 8, !noalias !158
  %109 = bitcast %"struct.v8::internal::compiler::LinearScanAllocator::RangeWithRegister"* %105 to i64*
  store i64 %108, i64* %109, align 8, !noalias !158
  %110 = getelementptr inbounds %"struct.std::__1::__hash_node", %"struct.std::__1::__hash_node"* %104, i64 0, i32 2, i32 1
  %111 = load i32, i32* %86, align 4, !noalias !158
  %112 = lshr i32 %111, 7
  %113 = and i32 %112, 63
  store i32 %113, i32* %110, align 8, !noalias !158
  %114 = inttoptr i64 %108 to %"class.v8::internal::compiler::TopLevelLiveRange"*
  %115 = getelementptr inbounds %"class.v8::internal::compiler::TopLevelLiveRange", %"class.v8::internal::compiler::TopLevelLiveRange"* %114, i64 0, i32 1
  %116 = load i32, i32* %115, align 4, !noalias !158
  %117 = sext i32 %116 to i64
  %118 = getelementptr inbounds %"struct.std::__1::__hash_node", %"struct.std::__1::__hash_node"* %104, i64 0, i32 1
  store i64 %117, i64* %118, align 8, !noalias !158
  %119 = getelementptr inbounds %"struct.std::__1::__hash_node", %"struct.std::__1::__hash_node"* %104, i64 0, i32 0, i32 0
  store %"struct.std::__1::__hash_node_base.1398"* null, %"struct.std::__1::__hash_node_base.1398"** %119, align 8, !noalias !158
  %120 = load i32, i32* %115, align 4
  %121 = sext i32 %120 to i64
  store i64 %121, i64* %118, align 8
  %122 = getelementptr inbounds %"struct.std::__1::__hash_node", %"struct.std::__1::__hash_node"* %104, i64 0, i32 0
  %123 = tail call %"struct.std::__1::__hash_node_base.1398"* @_ZNSt3__112__hash_tableIN2v88internal8compiler19LinearScanAllocator17RangeWithRegisterENS5_4HashENS5_6EqualsENS2_13ZoneAllocatorIS5_EEE28__node_insert_unique_prepareEmRS5_(%"class.std::__1::__hash_table.1394"* %69, i64 %121, %"struct.v8::internal::compiler::LinearScanAllocator::RangeWithRegister"* dereferenceable(16) %105) #16
  %124 = icmp eq %"struct.std::__1::__hash_node_base.1398"* %123, null
  br i1 %124, label %125, label %177

125:                                              ; preds = %102
  %126 = getelementptr inbounds %"struct.std::__1::__hash_node_base.1398", %"struct.std::__1::__hash_node_base.1398"* %122, i64 1
  %127 = bitcast %"struct.std::__1::__hash_node_base.1398"* %126 to i64*
  %128 = load i64, i64* %71, align 8
  %129 = load i64, i64* %127, align 8
  %130 = tail call i64 @llvm.ctpop.i64(i64 %128) #16, !range !79
  %131 = icmp ugt i64 %130, 1
  br i1 %131, label %135, label %132

132:                                              ; preds = %125
  %133 = add i64 %128, -1
  %134 = and i64 %133, %129
  br label %139

135:                                              ; preds = %125
  %136 = icmp ult i64 %129, %128
  br i1 %136, label %139, label %137

137:                                              ; preds = %135
  %138 = urem i64 %129, %128
  br label %139

139:                                              ; preds = %137, %135, %132
  %140 = phi i64 [ %134, %132 ], [ %138, %137 ], [ %129, %135 ]
  %141 = load %"struct.std::__1::__hash_node_base.1398"**, %"struct.std::__1::__hash_node_base.1398"*** %72, align 8
  %142 = getelementptr inbounds %"struct.std::__1::__hash_node_base.1398"*, %"struct.std::__1::__hash_node_base.1398"** %141, i64 %140
  %143 = load %"struct.std::__1::__hash_node_base.1398"*, %"struct.std::__1::__hash_node_base.1398"** %142, align 8
  %144 = icmp eq %"struct.std::__1::__hash_node_base.1398"* %143, null
  br i1 %144, label %145, label %167

145:                                              ; preds = %139
  %146 = load i64, i64* %75, align 8
  %147 = inttoptr i64 %103 to i64*
  store i64 %146, i64* %147, align 8
  store %"struct.std::__1::__hash_node_base.1398"* %122, %"struct.std::__1::__hash_node_base.1398"** %74, align 8
  %148 = load %"struct.std::__1::__hash_node_base.1398"**, %"struct.std::__1::__hash_node_base.1398"*** %72, align 8
  %149 = getelementptr inbounds %"struct.std::__1::__hash_node_base.1398"*, %"struct.std::__1::__hash_node_base.1398"** %148, i64 %140
  store %"struct.std::__1::__hash_node_base.1398"* %73, %"struct.std::__1::__hash_node_base.1398"** %149, align 8
  %150 = load %"struct.std::__1::__hash_node_base.1398"*, %"struct.std::__1::__hash_node_base.1398"** %119, align 8
  %151 = icmp eq %"struct.std::__1::__hash_node_base.1398"* %150, null
  br i1 %151, label %174, label %152

152:                                              ; preds = %145
  %153 = getelementptr inbounds %"struct.std::__1::__hash_node_base.1398", %"struct.std::__1::__hash_node_base.1398"* %150, i64 1
  %154 = bitcast %"struct.std::__1::__hash_node_base.1398"* %153 to i64*
  %155 = load i64, i64* %154, align 8
  br i1 %131, label %159, label %156

156:                                              ; preds = %152
  %157 = add i64 %128, -1
  %158 = and i64 %155, %157
  br label %163

159:                                              ; preds = %152
  %160 = icmp ult i64 %155, %128
  br i1 %160, label %163, label %161

161:                                              ; preds = %159
  %162 = urem i64 %155, %128
  br label %163

163:                                              ; preds = %161, %159, %156
  %164 = phi i64 [ %158, %156 ], [ %162, %161 ], [ %155, %159 ]
  %165 = load %"struct.std::__1::__hash_node_base.1398"**, %"struct.std::__1::__hash_node_base.1398"*** %72, align 8
  %166 = getelementptr inbounds %"struct.std::__1::__hash_node_base.1398"*, %"struct.std::__1::__hash_node_base.1398"** %165, i64 %164
  br label %172

167:                                              ; preds = %139
  %168 = getelementptr inbounds %"struct.std::__1::__hash_node_base.1398", %"struct.std::__1::__hash_node_base.1398"* %143, i64 0, i32 0
  %169 = bitcast %"struct.std::__1::__hash_node_base.1398"* %143 to i64*
  %170 = load i64, i64* %169, align 8
  %171 = inttoptr i64 %103 to i64*
  store i64 %170, i64* %171, align 8
  br label %172

172:                                              ; preds = %163, %167
  %173 = phi %"struct.std::__1::__hash_node_base.1398"** [ %168, %167 ], [ %166, %163 ]
  store %"struct.std::__1::__hash_node_base.1398"* %122, %"struct.std::__1::__hash_node_base.1398"** %173, align 8
  br label %174

174:                                              ; preds = %172, %145
  %175 = load i64, i64* %76, align 8
  %176 = add i64 %175, 1
  store i64 %176, i64* %76, align 8
  br label %177

177:                                              ; preds = %174, %102, %85, %77
  %178 = getelementptr inbounds %"class.v8::internal::compiler::LiveRange"*, %"class.v8::internal::compiler::LiveRange"** %78, i64 1
  %179 = icmp eq %"class.v8::internal::compiler::LiveRange"** %178, %66
  br i1 %179, label %180, label %77

180:                                              ; preds = %177, %56, %13
  ret i1 %19
}

; Function Attrs: nounwind ssp uwtable
define hidden zeroext i1 @_ZN2v88internal8compiler19LinearScanAllocator19TryReuseSpillForPhiEPNS1_17TopLevelLiveRangeE(%"class.v8::internal::compiler::LinearScanAllocator"*, %"class.v8::internal::compiler::TopLevelLiveRange"*) local_unnamed_addr #0 align 2 {
  %3 = getelementptr inbounds %"class.v8::internal::compiler::TopLevelLiveRange", %"class.v8::internal::compiler::TopLevelLiveRange"* %1, i64 0, i32 0, i32 1
  %4 = load i32, i32* %3, align 4
  %5 = and i32 %4, 8
  %6 = icmp eq i32 %5, 0
  br i1 %6, label %205, label %7

7:                                                ; preds = %2
  %8 = bitcast %"class.v8::internal::compiler::TopLevelLiveRange"* %1 to %"class.v8::internal::compiler::LiveRange"*
  %9 = getelementptr inbounds %"class.v8::internal::compiler::TopLevelLiveRange", %"class.v8::internal::compiler::TopLevelLiveRange"* %1, i64 0, i32 0, i32 10
  %10 = load %"class.v8::internal::compiler::LiveRangeBundle"*, %"class.v8::internal::compiler::LiveRangeBundle"** %9, align 8
  %11 = bitcast %"class.v8::internal::compiler::LinearScanAllocator"* %0 to %"class.v8::internal::compiler::RegisterAllocator"*
  %12 = getelementptr inbounds %"class.v8::internal::compiler::LinearScanAllocator", %"class.v8::internal::compiler::LinearScanAllocator"* %0, i64 0, i32 0, i32 0
  %13 = load %"class.v8::internal::compiler::TopTierRegisterAllocationData"*, %"class.v8::internal::compiler::TopTierRegisterAllocationData"** %12, align 8
  %14 = getelementptr inbounds %"class.v8::internal::compiler::TopLevelLiveRange", %"class.v8::internal::compiler::TopLevelLiveRange"* %1, i64 0, i32 1
  %15 = load i32, i32* %14, align 4
  %16 = getelementptr inbounds %"class.v8::internal::compiler::TopTierRegisterAllocationData", %"class.v8::internal::compiler::TopTierRegisterAllocationData"* %13, i64 0, i32 6, i32 0, i32 0, i32 1, i32 0, i32 0
  %17 = bitcast %"class.std::__1::__tree_end_node"* %16 to %"class.std::__1::__tree_node.1558"**
  %18 = load %"class.std::__1::__tree_node.1558"*, %"class.std::__1::__tree_node.1558"** %17, align 8
  %19 = icmp eq %"class.std::__1::__tree_node.1558"* %18, null
  br i1 %19, label %41, label %20

20:                                               ; preds = %7, %20
  %21 = phi %"class.std::__1::__tree_end_node"* [ %31, %20 ], [ %16, %7 ]
  %22 = phi %"class.std::__1::__tree_node.1558"* [ %32, %20 ], [ %18, %7 ]
  %23 = getelementptr inbounds %"class.std::__1::__tree_node.1558", %"class.std::__1::__tree_node.1558"* %22, i64 0, i32 1, i32 0, i32 0
  %24 = load i32, i32* %23, align 4
  %25 = icmp slt i32 %24, %15
  %26 = getelementptr inbounds %"class.std::__1::__tree_node.1558", %"class.std::__1::__tree_node.1558"* %22, i64 0, i32 0, i32 1
  %27 = bitcast %"class.std::__1::__tree_node_base"** %26 to %"class.std::__1::__tree_node.1558"**
  %28 = getelementptr inbounds %"class.std::__1::__tree_node.1558", %"class.std::__1::__tree_node.1558"* %22, i64 0, i32 0, i32 0
  %29 = bitcast %"class.std::__1::__tree_node.1558"* %22 to %"class.std::__1::__tree_node.1558"**
  %30 = select i1 %25, %"class.std::__1::__tree_node.1558"** %27, %"class.std::__1::__tree_node.1558"** %29
  %31 = select i1 %25, %"class.std::__1::__tree_end_node"* %21, %"class.std::__1::__tree_end_node"* %28
  %32 = load %"class.std::__1::__tree_node.1558"*, %"class.std::__1::__tree_node.1558"** %30, align 8
  %33 = icmp eq %"class.std::__1::__tree_node.1558"* %32, null
  br i1 %33, label %34, label %20

34:                                               ; preds = %20
  %35 = icmp eq %"class.std::__1::__tree_end_node"* %31, %16
  br i1 %35, label %41, label %36

36:                                               ; preds = %34
  %37 = getelementptr inbounds %"class.std::__1::__tree_end_node", %"class.std::__1::__tree_end_node"* %31, i64 4
  %38 = bitcast %"class.std::__1::__tree_end_node"* %37 to i32*
  %39 = load i32, i32* %38, align 4
  %40 = icmp sgt i32 %39, %15
  br i1 %40, label %41, label %42

41:                                               ; preds = %36, %34, %7
  br label %42

42:                                               ; preds = %36, %41
  %43 = phi %"class.std::__1::__tree_end_node"* [ %16, %41 ], [ %31, %36 ]
  %44 = getelementptr inbounds %"class.std::__1::__tree_end_node", %"class.std::__1::__tree_end_node"* %43, i64 5
  %45 = bitcast %"class.std::__1::__tree_end_node"* %44 to %"class.v8::internal::compiler::TopTierRegisterAllocationData::PhiMapValue"**
  %46 = load %"class.v8::internal::compiler::TopTierRegisterAllocationData::PhiMapValue"*, %"class.v8::internal::compiler::TopTierRegisterAllocationData::PhiMapValue"** %45, align 8
  %47 = getelementptr inbounds %"class.v8::internal::compiler::TopTierRegisterAllocationData::PhiMapValue", %"class.v8::internal::compiler::TopTierRegisterAllocationData::PhiMapValue"* %46, i64 0, i32 0
  %48 = load %"class.v8::internal::compiler::PhiInstruction"*, %"class.v8::internal::compiler::PhiInstruction"** %47, align 8
  %49 = getelementptr inbounds %"class.v8::internal::compiler::PhiInstruction", %"class.v8::internal::compiler::PhiInstruction"* %48, i64 0, i32 2, i32 0
  %50 = getelementptr inbounds %"class.v8::internal::compiler::PhiInstruction", %"class.v8::internal::compiler::PhiInstruction"* %48, i64 0, i32 2, i32 0, i32 0, i32 1
  %51 = bitcast i32** %50 to i64*
  %52 = load i64, i64* %51, align 8
  %53 = bitcast %"class.std::__1::vector.48"* %49 to i64*
  %54 = load i64, i64* %53, align 8
  %55 = icmp eq i64 %52, %54
  br i1 %55, label %60, label %56

56:                                               ; preds = %42
  %57 = getelementptr inbounds %"class.v8::internal::compiler::TopTierRegisterAllocationData::PhiMapValue", %"class.v8::internal::compiler::TopTierRegisterAllocationData::PhiMapValue"* %46, i64 0, i32 1
  %58 = load %"class.v8::internal::compiler::InstructionBlock"*, %"class.v8::internal::compiler::InstructionBlock"** %57, align 8
  %59 = getelementptr inbounds %"class.v8::internal::compiler::InstructionBlock", %"class.v8::internal::compiler::InstructionBlock"* %58, i64 0, i32 1, i32 0, i32 0, i32 0
  br label %65

60:                                               ; preds = %142, %42
  %61 = phi i64 [ 0, %42 ], [ %143, %142 ]
  %62 = phi i64 [ 0, %42 ], [ %148, %142 ]
  %63 = shl i64 %61, 1
  %64 = icmp ugt i64 %63, %62
  br i1 %64, label %152, label %205

65:                                               ; preds = %150, %56
  %66 = phi %"class.v8::internal::compiler::TopTierRegisterAllocationData"* [ %13, %56 ], [ %151, %150 ]
  %67 = phi i64 [ %54, %56 ], [ %146, %150 ]
  %68 = phi i64 [ 0, %56 ], [ %143, %150 ]
  %69 = phi i64 [ 0, %56 ], [ %144, %150 ]
  %70 = inttoptr i64 %67 to i32*
  %71 = getelementptr inbounds i32, i32* %70, i64 %69
  %72 = load i32, i32* %71, align 4
  %73 = tail call %"class.v8::internal::compiler::TopLevelLiveRange"* @_ZN2v88internal8compiler29TopTierRegisterAllocationData23GetOrCreateLiveRangeForEi(%"class.v8::internal::compiler::TopTierRegisterAllocationData"* %66, i32 %72)
  %74 = bitcast %"class.v8::internal::compiler::TopLevelLiveRange"* %73 to %"class.v8::internal::compiler::LiveRange"*
  %75 = getelementptr inbounds %"class.v8::internal::compiler::TopLevelLiveRange", %"class.v8::internal::compiler::TopLevelLiveRange"* %73, i64 0, i32 0, i32 5
  %76 = load %"class.v8::internal::compiler::TopLevelLiveRange"*, %"class.v8::internal::compiler::TopLevelLiveRange"** %75, align 8
  %77 = getelementptr inbounds %"class.v8::internal::compiler::TopLevelLiveRange", %"class.v8::internal::compiler::TopLevelLiveRange"* %76, i64 0, i32 0, i32 1
  %78 = load i32, i32* %77, align 4
  %79 = and i32 %78, 64
  %80 = icmp eq i32 %79, 0
  br i1 %80, label %142, label %81

81:                                               ; preds = %65
  %82 = load %"class.v8::internal::compiler::TopTierRegisterAllocationData"*, %"class.v8::internal::compiler::TopTierRegisterAllocationData"** %12, align 8
  %83 = getelementptr inbounds %"class.v8::internal::compiler::TopTierRegisterAllocationData", %"class.v8::internal::compiler::TopTierRegisterAllocationData"* %82, i64 0, i32 3
  %84 = load %"class.v8::internal::compiler::InstructionSequence"*, %"class.v8::internal::compiler::InstructionSequence"** %83, align 8
  %85 = load %"class.v8::internal::compiler::RpoNumber"*, %"class.v8::internal::compiler::RpoNumber"** %59, align 8
  %86 = getelementptr inbounds %"class.v8::internal::compiler::RpoNumber", %"class.v8::internal::compiler::RpoNumber"* %85, i64 %69, i32 0
  %87 = load i32, i32* %86, align 4
  %88 = getelementptr inbounds %"class.v8::internal::compiler::InstructionSequence", %"class.v8::internal::compiler::InstructionSequence"* %84, i64 0, i32 2
  %89 = bitcast %"class.v8::internal::ZoneVector.1170"** %88 to %"class.std::__1::vector.1171"**
  %90 = load %"class.std::__1::vector.1171"*, %"class.std::__1::vector.1171"** %89, align 8
  %91 = sext i32 %87 to i64
  %92 = getelementptr inbounds %"class.std::__1::vector.1171", %"class.std::__1::vector.1171"* %90, i64 0, i32 0, i32 1
  %93 = bitcast %"class.v8::internal::compiler::InstructionBlock"*** %92 to i64*
  %94 = load i64, i64* %93, align 8
  %95 = bitcast %"class.std::__1::vector.1171"* %90 to i64*
  %96 = load i64, i64* %95, align 8
  %97 = sub i64 %94, %96
  %98 = ashr exact i64 %97, 3
  %99 = icmp ugt i64 %98, %91
  br i1 %99, label %102, label %100

100:                                              ; preds = %81
  %101 = bitcast %"class.std::__1::vector.1171"* %90 to %"class.std::__1::__vector_base_common"*
  tail call void @_ZNKSt3__120__vector_base_commonILb1EE20__throw_out_of_rangeEv(%"class.std::__1::__vector_base_common"* %101) #17
  unreachable

102:                                              ; preds = %81
  %103 = inttoptr i64 %96 to %"class.v8::internal::compiler::InstructionBlock"**
  %104 = getelementptr inbounds %"class.v8::internal::compiler::InstructionBlock"*, %"class.v8::internal::compiler::InstructionBlock"** %103, i64 %91
  %105 = load %"class.v8::internal::compiler::InstructionBlock"*, %"class.v8::internal::compiler::InstructionBlock"** %104, align 8
  %106 = getelementptr inbounds %"class.v8::internal::compiler::InstructionBlock", %"class.v8::internal::compiler::InstructionBlock"* %105, i64 0, i32 9
  %107 = load i32, i32* %106, align 8
  %108 = shl i32 %107, 2
  %109 = add i32 %108, -4
  %110 = or i32 %109, 2
  %111 = icmp eq %"class.v8::internal::compiler::TopLevelLiveRange"* %73, null
  br i1 %111, label %142, label %112

112:                                              ; preds = %102, %127
  %113 = phi %"class.v8::internal::compiler::LiveRange"* [ %129, %127 ], [ %74, %102 ]
  %114 = getelementptr inbounds %"class.v8::internal::compiler::LiveRange", %"class.v8::internal::compiler::LiveRange"* %113, i64 0, i32 3
  %115 = load %"class.v8::internal::compiler::UseInterval"*, %"class.v8::internal::compiler::UseInterval"** %114, align 8
  %116 = icmp eq %"class.v8::internal::compiler::UseInterval"* %115, null
  br i1 %116, label %127, label %117

117:                                              ; preds = %112
  %118 = getelementptr inbounds %"class.v8::internal::compiler::UseInterval", %"class.v8::internal::compiler::UseInterval"* %115, i64 0, i32 0, i32 0
  %119 = load i32, i32* %118, align 8
  %120 = icmp sgt i32 %119, %110
  br i1 %120, label %127, label %121

121:                                              ; preds = %117
  %122 = getelementptr inbounds %"class.v8::internal::compiler::LiveRange", %"class.v8::internal::compiler::LiveRange"* %113, i64 0, i32 2
  %123 = load %"class.v8::internal::compiler::UseInterval"*, %"class.v8::internal::compiler::UseInterval"** %122, align 8
  %124 = getelementptr inbounds %"class.v8::internal::compiler::UseInterval", %"class.v8::internal::compiler::UseInterval"* %123, i64 0, i32 1, i32 0
  %125 = load i32, i32* %124, align 4
  %126 = icmp sgt i32 %125, %110
  br i1 %126, label %131, label %127

127:                                              ; preds = %121, %117, %112
  %128 = getelementptr inbounds %"class.v8::internal::compiler::LiveRange", %"class.v8::internal::compiler::LiveRange"* %113, i64 0, i32 6
  %129 = load %"class.v8::internal::compiler::LiveRange"*, %"class.v8::internal::compiler::LiveRange"** %128, align 8
  %130 = icmp eq %"class.v8::internal::compiler::LiveRange"* %129, null
  br i1 %130, label %142, label %112

131:                                              ; preds = %121
  %132 = getelementptr inbounds %"class.v8::internal::compiler::LiveRange", %"class.v8::internal::compiler::LiveRange"* %113, i64 0, i32 1
  %133 = load i32, i32* %132, align 4
  %134 = and i32 %133, 1
  %135 = icmp eq i32 %134, 0
  br i1 %135, label %142, label %136

136:                                              ; preds = %131
  %137 = getelementptr inbounds %"class.v8::internal::compiler::LiveRange", %"class.v8::internal::compiler::LiveRange"* %113, i64 0, i32 10
  %138 = load %"class.v8::internal::compiler::LiveRangeBundle"*, %"class.v8::internal::compiler::LiveRangeBundle"** %137, align 8
  %139 = icmp eq %"class.v8::internal::compiler::LiveRangeBundle"* %138, %10
  %140 = zext i1 %139 to i64
  %141 = add i64 %68, %140
  br label %142

142:                                              ; preds = %127, %102, %131, %65, %136
  %143 = phi i64 [ %68, %65 ], [ %68, %131 ], [ %141, %136 ], [ %68, %102 ], [ %68, %127 ]
  %144 = add nuw i64 %69, 1
  %145 = load i64, i64* %51, align 8
  %146 = load i64, i64* %53, align 8
  %147 = sub i64 %145, %146
  %148 = ashr exact i64 %147, 2
  %149 = icmp ult i64 %144, %148
  br i1 %149, label %150, label %60

150:                                              ; preds = %142
  %151 = load %"class.v8::internal::compiler::TopTierRegisterAllocationData"*, %"class.v8::internal::compiler::TopTierRegisterAllocationData"** %12, align 8
  br label %65

152:                                              ; preds = %60
  %153 = getelementptr inbounds %"class.v8::internal::compiler::TopLevelLiveRange", %"class.v8::internal::compiler::TopLevelLiveRange"* %1, i64 0, i32 0, i32 3
  %154 = load %"class.v8::internal::compiler::UseInterval"*, %"class.v8::internal::compiler::UseInterval"** %153, align 8
  %155 = getelementptr inbounds %"class.v8::internal::compiler::UseInterval", %"class.v8::internal::compiler::UseInterval"* %154, i64 0, i32 0, i32 0
  %156 = load i32, i32* %155, align 8
  %157 = and i32 %156, 2
  %158 = icmp eq i32 %157, 0
  %159 = add i32 %156, 2
  %160 = and i32 %159, -2
  %161 = select i1 %158, i32 %160, i32 %156
  %162 = getelementptr inbounds %"class.v8::internal::compiler::TopLevelLiveRange", %"class.v8::internal::compiler::TopLevelLiveRange"* %1, i64 0, i32 0, i32 8
  %163 = load %"class.v8::internal::compiler::UsePosition"*, %"class.v8::internal::compiler::UsePosition"** %162, align 8
  %164 = icmp eq %"class.v8::internal::compiler::UsePosition"* %163, null
  br i1 %164, label %169, label %165

165:                                              ; preds = %152
  %166 = getelementptr inbounds %"class.v8::internal::compiler::UsePosition", %"class.v8::internal::compiler::UsePosition"* %163, i64 0, i32 3, i32 0
  %167 = load i32, i32* %166, align 8
  %168 = icmp sgt i32 %167, %161
  br i1 %168, label %169, label %173

169:                                              ; preds = %165, %152
  %170 = getelementptr inbounds %"class.v8::internal::compiler::TopLevelLiveRange", %"class.v8::internal::compiler::TopLevelLiveRange"* %1, i64 0, i32 0, i32 4
  %171 = load %"class.v8::internal::compiler::UsePosition"*, %"class.v8::internal::compiler::UsePosition"** %170, align 8
  %172 = icmp eq %"class.v8::internal::compiler::UsePosition"* %171, null
  br i1 %172, label %184, label %173

173:                                              ; preds = %169, %165
  %174 = phi %"class.v8::internal::compiler::UsePosition"* [ %163, %165 ], [ %171, %169 ]
  br label %175

175:                                              ; preds = %173, %180
  %176 = phi %"class.v8::internal::compiler::UsePosition"* [ %182, %180 ], [ %174, %173 ]
  %177 = getelementptr inbounds %"class.v8::internal::compiler::UsePosition", %"class.v8::internal::compiler::UsePosition"* %176, i64 0, i32 3, i32 0
  %178 = load i32, i32* %177, align 8
  %179 = icmp slt i32 %178, %161
  br i1 %179, label %180, label %185

180:                                              ; preds = %175
  %181 = getelementptr inbounds %"class.v8::internal::compiler::UsePosition", %"class.v8::internal::compiler::UsePosition"* %176, i64 0, i32 2
  %182 = load %"class.v8::internal::compiler::UsePosition"*, %"class.v8::internal::compiler::UsePosition"** %181, align 8
  %183 = icmp eq %"class.v8::internal::compiler::UsePosition"* %182, null
  br i1 %183, label %184, label %175

184:                                              ; preds = %180, %169
  store %"class.v8::internal::compiler::UsePosition"* null, %"class.v8::internal::compiler::UsePosition"** %162, align 8
  br label %196

185:                                              ; preds = %175
  store %"class.v8::internal::compiler::UsePosition"* %176, %"class.v8::internal::compiler::UsePosition"** %162, align 8
  br label %186

186:                                              ; preds = %192, %185
  %187 = phi %"class.v8::internal::compiler::UsePosition"* [ %194, %192 ], [ %176, %185 ]
  %188 = getelementptr inbounds %"class.v8::internal::compiler::UsePosition", %"class.v8::internal::compiler::UsePosition"* %187, i64 0, i32 4
  %189 = load i32, i32* %188, align 4
  %190 = and i32 %189, 32
  %191 = icmp eq i32 %190, 0
  br i1 %191, label %192, label %197

192:                                              ; preds = %186
  %193 = getelementptr inbounds %"class.v8::internal::compiler::UsePosition", %"class.v8::internal::compiler::UsePosition"* %187, i64 0, i32 2
  %194 = load %"class.v8::internal::compiler::UsePosition"*, %"class.v8::internal::compiler::UsePosition"** %193, align 8
  %195 = icmp eq %"class.v8::internal::compiler::UsePosition"* %194, null
  br i1 %195, label %196, label %186

196:                                              ; preds = %192, %184
  tail call void @_ZN2v88internal8compiler17RegisterAllocator5SpillEPNS1_9LiveRangeENS1_29TopTierRegisterAllocationData9SpillModeE(%"class.v8::internal::compiler::RegisterAllocator"* %11, %"class.v8::internal::compiler::LiveRange"* %8, i32 0)
  br label %205

197:                                              ; preds = %186
  %198 = getelementptr inbounds %"class.v8::internal::compiler::UsePosition", %"class.v8::internal::compiler::UsePosition"* %187, i64 0, i32 3, i32 0
  %199 = load i32, i32* %198, align 8
  %200 = load i32, i32* %155, align 8
  %201 = add i32 %200, 2
  %202 = and i32 %201, -2
  %203 = icmp sgt i32 %199, %202
  br i1 %203, label %204, label %205

204:                                              ; preds = %197
  tail call void @_ZN2v88internal8compiler19LinearScanAllocator17SpillBetweenUntilEPNS1_9LiveRangeENS1_16LifetimePositionES5_S5_NS1_29TopTierRegisterAllocationData9SpillModeE(%"class.v8::internal::compiler::LinearScanAllocator"* %0, %"class.v8::internal::compiler::LiveRange"* %8, i32 %200, i32 %200, i32 %199, i32 0) #16
  br label %205

205:                                              ; preds = %2, %196, %204, %197, %60
  %206 = phi i1 [ false, %2 ], [ false, %60 ], [ true, %196 ], [ true, %204 ], [ false, %197 ]
  ret i1 %206
}

; Function Attrs: nounwind ssp uwtable
define hidden void @_ZN2v88internal8compiler19LinearScanAllocator19ProcessCurrentRangeEPNS1_9LiveRangeENS1_29TopTierRegisterAllocationData9SpillModeE(%"class.v8::internal::compiler::LinearScanAllocator"*, %"class.v8::internal::compiler::LiveRange"*, i32) local_unnamed_addr #0 align 2 {
  %4 = alloca %"class.v8::internal::EmbeddedVector.1439", align 8
  %5 = bitcast %"class.v8::internal::EmbeddedVector.1439"* %4 to i8*
  call void @llvm.lifetime.start.p0i8(i64 144, i8* nonnull %5) #16
  %6 = getelementptr inbounds %"class.v8::internal::EmbeddedVector.1439", %"class.v8::internal::EmbeddedVector.1439"* %4, i64 0, i32 1, i64 0
  %7 = getelementptr inbounds %"class.v8::internal::EmbeddedVector.1439", %"class.v8::internal::EmbeddedVector.1439"* %4, i64 0, i32 0, i32 0
  store %"class.v8::internal::compiler::LifetimePosition"* %6, %"class.v8::internal::compiler::LifetimePosition"** %7, align 8
  %8 = getelementptr inbounds %"class.v8::internal::EmbeddedVector.1439", %"class.v8::internal::EmbeddedVector.1439"* %4, i64 0, i32 0, i32 1
  store i64 32, i64* %8, align 8
  %9 = bitcast %"class.v8::internal::compiler::LifetimePosition"* %6 to i8*
  call void @llvm.memset.p0i8.i64(i8* align 8 %9, i8 -1, i64 128, i1 false) #16
  %10 = getelementptr inbounds %"class.v8::internal::EmbeddedVector.1439", %"class.v8::internal::EmbeddedVector.1439"* %4, i64 0, i32 0
  call void @_ZN2v88internal8compiler19LinearScanAllocator25FindFreeRegistersForRangeEPNS1_9LiveRangeENS0_6VectorINS1_16LifetimePositionEEE(%"class.v8::internal::compiler::LinearScanAllocator"* %0, %"class.v8::internal::compiler::LiveRange"* %1, %"class.v8::internal::compiler::LifetimePosition"* %6, i64 32)
  %11 = call zeroext i1 @_ZN2v88internal8compiler19LinearScanAllocator23TryAllocatePreferredRegEPNS1_9LiveRangeERKNS0_6VectorINS1_16LifetimePositionEEE(%"class.v8::internal::compiler::LinearScanAllocator"* %0, %"class.v8::internal::compiler::LiveRange"* %1, %"class.v8::internal::Vector.1438"* nonnull dereferenceable(16) %10)
  br i1 %11, label %15, label %12

12:                                               ; preds = %3
  %13 = call zeroext i1 @_ZN2v88internal8compiler19LinearScanAllocator18TryAllocateFreeRegEPNS1_9LiveRangeERKNS0_6VectorINS1_16LifetimePositionEEE(%"class.v8::internal::compiler::LinearScanAllocator"* %0, %"class.v8::internal::compiler::LiveRange"* %1, %"class.v8::internal::Vector.1438"* nonnull dereferenceable(16) %10)
  br i1 %13, label %15, label %14

14:                                               ; preds = %12
  call void @_ZN2v88internal8compiler19LinearScanAllocator18AllocateBlockedRegEPNS1_9LiveRangeENS1_29TopTierRegisterAllocationData9SpillModeE(%"class.v8::internal::compiler::LinearScanAllocator"* %0, %"class.v8::internal::compiler::LiveRange"* %1, i32 %2)
  br label %15

15:                                               ; preds = %12, %14, %3
  %16 = getelementptr inbounds %"class.v8::internal::compiler::LiveRange", %"class.v8::internal::compiler::LiveRange"* %1, i64 0, i32 1
  %17 = load i32, i32* %16, align 4
  %18 = and i32 %17, 8064
  %19 = icmp eq i32 %18, 4096
  br i1 %19, label %21, label %20

20:                                               ; preds = %15
  call void @_ZN2v88internal8compiler19LinearScanAllocator11AddToActiveEPNS1_9LiveRangeE(%"class.v8::internal::compiler::LinearScanAllocator"* %0, %"class.v8::internal::compiler::LiveRange"* %1)
  br label %21

21:                                               ; preds = %15, %20
  call void @llvm.lifetime.end.p0i8(i64 144, i8* nonnull %5) #16
  ret void
}

; Function Attrs: nounwind ssp uwtable
define hidden %"class.v8::internal::compiler::LiveRange"** @_ZN2v88internal8compiler19LinearScanAllocator16ActiveToInactiveENSt3__111__wrap_iterIPPNS1_9LiveRangeEEENS1_16LifetimePositionE(%"class.v8::internal::compiler::LinearScanAllocator"* nocapture, %"class.v8::internal::compiler::LiveRange"**, i32) local_unnamed_addr #0 align 2 {
  %4 = alloca i32, align 4
  %5 = bitcast %"class.v8::internal::compiler::LiveRange"** %1 to i64*
  %6 = load i64, i64* %5, align 8
  %7 = getelementptr inbounds %"class.v8::internal::compiler::LinearScanAllocator", %"class.v8::internal::compiler::LinearScanAllocator"* %0, i64 0, i32 0, i32 0
  %8 = load %"class.v8::internal::compiler::TopTierRegisterAllocationData"*, %"class.v8::internal::compiler::TopTierRegisterAllocationData"** %7, align 8
  %9 = getelementptr inbounds %"class.v8::internal::compiler::TopTierRegisterAllocationData", %"class.v8::internal::compiler::TopTierRegisterAllocationData"* %8, i64 0, i32 23, i32 0
  %10 = load i32, i32* %9, align 4
  %11 = and i32 %10, 1
  %12 = icmp eq i32 %11, 0
  %13 = inttoptr i64 %6 to %"class.v8::internal::compiler::LiveRange"*
  br i1 %12, label %21, label %14

14:                                               ; preds = %3
  %15 = getelementptr inbounds %"class.v8::internal::compiler::LiveRange", %"class.v8::internal::compiler::LiveRange"* %13, i64 0, i32 5
  %16 = load %"class.v8::internal::compiler::TopLevelLiveRange"*, %"class.v8::internal::compiler::TopLevelLiveRange"** %15, align 8
  %17 = getelementptr inbounds %"class.v8::internal::compiler::TopLevelLiveRange", %"class.v8::internal::compiler::TopLevelLiveRange"* %16, i64 0, i32 1
  %18 = load i32, i32* %17, align 4
  %19 = getelementptr inbounds %"class.v8::internal::compiler::LiveRange", %"class.v8::internal::compiler::LiveRange"* %13, i64 0, i32 0
  %20 = load i32, i32* %19, align 8
  tail call void (i8*, ...) @_ZN2v88internal6PrintFEPKcz(i8* getelementptr inbounds ([49 x i8], [49 x i8]* @.str.82, i64 0, i64 0), i32 %18, i32 %20) #16
  br label %21

21:                                               ; preds = %3, %14
  %22 = bitcast i32* %4 to i8*
  call void @llvm.lifetime.start.p0i8(i64 4, i8* nonnull %22)
  %23 = getelementptr inbounds %"class.v8::internal::compiler::LiveRange", %"class.v8::internal::compiler::LiveRange"* %13, i64 0, i32 7
  %24 = load %"class.v8::internal::compiler::UseInterval"*, %"class.v8::internal::compiler::UseInterval"** %23, align 8
  %25 = icmp eq %"class.v8::internal::compiler::UseInterval"* %24, null
  br i1 %25, label %26, label %28

26:                                               ; preds = %21
  %27 = getelementptr inbounds %"class.v8::internal::compiler::LiveRange", %"class.v8::internal::compiler::LiveRange"* %13, i64 0, i32 3
  br label %34

28:                                               ; preds = %21
  %29 = getelementptr inbounds %"class.v8::internal::compiler::UseInterval", %"class.v8::internal::compiler::UseInterval"* %24, i64 0, i32 0, i32 0
  %30 = load i32, i32* %29, align 8
  %31 = icmp sgt i32 %30, %2
  br i1 %31, label %32, label %34

32:                                               ; preds = %28
  store %"class.v8::internal::compiler::UseInterval"* null, %"class.v8::internal::compiler::UseInterval"** %23, align 8
  %33 = getelementptr inbounds %"class.v8::internal::compiler::LiveRange", %"class.v8::internal::compiler::LiveRange"* %13, i64 0, i32 3
  br label %34

34:                                               ; preds = %32, %28, %26
  %35 = phi %"class.v8::internal::compiler::UseInterval"** [ %23, %28 ], [ %33, %32 ], [ %27, %26 ]
  br label %36

36:                                               ; preds = %34, %36
  %37 = phi %"class.v8::internal::compiler::UseInterval"** [ %42, %36 ], [ %35, %34 ]
  %38 = load %"class.v8::internal::compiler::UseInterval"*, %"class.v8::internal::compiler::UseInterval"** %37, align 8
  %39 = getelementptr inbounds %"class.v8::internal::compiler::UseInterval", %"class.v8::internal::compiler::UseInterval"* %38, i64 0, i32 0, i32 0
  %40 = load i32, i32* %39, align 8
  %41 = icmp slt i32 %40, %2
  %42 = getelementptr inbounds %"class.v8::internal::compiler::UseInterval", %"class.v8::internal::compiler::UseInterval"* %38, i64 0, i32 2
  br i1 %41, label %36, label %43

43:                                               ; preds = %36
  %44 = getelementptr inbounds %"class.v8::internal::compiler::LiveRange", %"class.v8::internal::compiler::LiveRange"* %13, i64 0, i32 11, i32 0
  store i32 %40, i32* %44, align 8
  store i32 %40, i32* %4, align 4
  %45 = getelementptr inbounds %"class.v8::internal::compiler::LinearScanAllocator", %"class.v8::internal::compiler::LinearScanAllocator"* %0, i64 0, i32 5
  %46 = getelementptr inbounds %"class.v8::internal::compiler::LifetimePosition", %"class.v8::internal::compiler::LifetimePosition"* %45, i64 0, i32 0
  %47 = load i32, i32* %46, align 4
  %48 = icmp slt i32 %40, %47
  %49 = bitcast i32* %4 to %"class.v8::internal::compiler::LifetimePosition"*
  %50 = select i1 %48, %"class.v8::internal::compiler::LifetimePosition"* %49, %"class.v8::internal::compiler::LifetimePosition"* %45
  %51 = getelementptr inbounds %"class.v8::internal::compiler::LifetimePosition", %"class.v8::internal::compiler::LifetimePosition"* %50, i64 0, i32 0
  %52 = load i32, i32* %51, align 4
  store i32 %52, i32* %46, align 4
  %53 = getelementptr inbounds %"class.v8::internal::compiler::LiveRange", %"class.v8::internal::compiler::LiveRange"* %13, i64 0, i32 1
  %54 = load i32, i32* %53, align 4
  %55 = lshr i32 %54, 7
  %56 = and i32 %55, 63
  %57 = zext i32 %56 to i64
  %58 = getelementptr inbounds %"class.v8::internal::compiler::LinearScanAllocator", %"class.v8::internal::compiler::LinearScanAllocator"* %0, i64 0, i32 3, i32 0, i32 0, i32 0
  %59 = load %"class.v8::internal::ZoneMultiset.1344"*, %"class.v8::internal::ZoneMultiset.1344"** %58, align 8
  %60 = getelementptr inbounds %"class.v8::internal::ZoneMultiset.1344", %"class.v8::internal::ZoneMultiset.1344"* %59, i64 %57, i32 0
  %61 = getelementptr inbounds %"class.v8::internal::ZoneMultiset.1344", %"class.v8::internal::ZoneMultiset.1344"* %59, i64 %57, i32 0, i32 0, i32 1, i32 1, i32 0, i32 0
  %62 = load %"class.v8::internal::Zone"*, %"class.v8::internal::Zone"** %61, align 8, !noalias !161
  %63 = getelementptr inbounds %"class.v8::internal::Zone", %"class.v8::internal::Zone"* %62, i64 0, i32 2
  %64 = load i64, i64* %63, align 8, !noalias !161
  %65 = getelementptr inbounds %"class.v8::internal::Zone", %"class.v8::internal::Zone"* %62, i64 0, i32 3
  %66 = load i64, i64* %65, align 8, !noalias !161
  %67 = sub i64 %66, %64
  %68 = icmp ult i64 %67, 40
  br i1 %68, label %69, label %71, !prof !2

69:                                               ; preds = %43
  %70 = tail call i64 @_ZN2v88internal4Zone9NewExpandEm(%"class.v8::internal::Zone"* %62, i64 40) #16, !noalias !161
  br label %73

71:                                               ; preds = %43
  %72 = add i64 %64, 40
  store i64 %72, i64* %63, align 8, !noalias !161
  br label %73

73:                                               ; preds = %71, %69
  %74 = phi i64 [ %70, %69 ], [ %64, %71 ]
  %75 = inttoptr i64 %74 to %"class.std::__1::__tree_node.1501"*
  %76 = getelementptr inbounds %"class.std::__1::__tree_node.1501", %"class.std::__1::__tree_node.1501"* %75, i64 0, i32 1
  %77 = bitcast %"class.v8::internal::compiler::LiveRange"** %76 to i64*
  store i64 %6, i64* %77, align 8, !noalias !161
  %78 = getelementptr inbounds %"class.v8::internal::ZoneMultiset.1344", %"class.v8::internal::ZoneMultiset.1344"* %59, i64 %57, i32 0, i32 0, i32 1, i32 0, i32 0
  %79 = bitcast %"class.std::__1::__tree_end_node"* %78 to %"class.std::__1::__tree_node.1501"**
  %80 = load %"class.std::__1::__tree_node.1501"*, %"class.std::__1::__tree_node.1501"** %79, align 8
  %81 = icmp eq %"class.std::__1::__tree_node.1501"* %80, null
  br i1 %81, label %108, label %82

82:                                               ; preds = %73
  %83 = load i32, i32* %44, align 8
  br label %84

84:                                               ; preds = %105, %82
  %85 = phi %"class.std::__1::__tree_node.1501"* [ %107, %105 ], [ %80, %82 ]
  %86 = getelementptr inbounds %"class.std::__1::__tree_node.1501", %"class.std::__1::__tree_node.1501"* %85, i64 0, i32 1
  %87 = load %"class.v8::internal::compiler::LiveRange"*, %"class.v8::internal::compiler::LiveRange"** %86, align 8
  %88 = getelementptr inbounds %"class.v8::internal::compiler::LiveRange", %"class.v8::internal::compiler::LiveRange"* %87, i64 0, i32 11, i32 0
  %89 = load i32, i32* %88, align 8
  %90 = icmp slt i32 %83, %89
  br i1 %90, label %91, label %98

91:                                               ; preds = %84
  %92 = getelementptr inbounds %"class.std::__1::__tree_node.1501", %"class.std::__1::__tree_node.1501"* %85, i64 0, i32 0, i32 0, i32 0
  %93 = load %"class.std::__1::__tree_node_base"*, %"class.std::__1::__tree_node_base"** %92, align 8
  %94 = icmp eq %"class.std::__1::__tree_node_base"* %93, null
  br i1 %94, label %95, label %105

95:                                               ; preds = %91
  %96 = getelementptr inbounds %"class.std::__1::__tree_node.1501", %"class.std::__1::__tree_node.1501"* %85, i64 0, i32 0, i32 0, i32 0
  %97 = getelementptr inbounds %"class.std::__1::__tree_node.1501", %"class.std::__1::__tree_node.1501"* %85, i64 0, i32 0, i32 0
  br label %110

98:                                               ; preds = %84
  %99 = getelementptr inbounds %"class.std::__1::__tree_node.1501", %"class.std::__1::__tree_node.1501"* %85, i64 0, i32 0, i32 1
  %100 = load %"class.std::__1::__tree_node_base"*, %"class.std::__1::__tree_node_base"** %99, align 8
  %101 = icmp eq %"class.std::__1::__tree_node_base"* %100, null
  br i1 %101, label %102, label %105

102:                                              ; preds = %98
  %103 = getelementptr inbounds %"class.std::__1::__tree_node.1501", %"class.std::__1::__tree_node.1501"* %85, i64 0, i32 0, i32 1
  %104 = getelementptr inbounds %"class.std::__1::__tree_node.1501", %"class.std::__1::__tree_node.1501"* %85, i64 0, i32 0, i32 0
  br label %110

105:                                              ; preds = %98, %91
  %106 = phi %"class.std::__1::__tree_node_base"* [ %93, %91 ], [ %100, %98 ]
  %107 = bitcast %"class.std::__1::__tree_node_base"* %106 to %"class.std::__1::__tree_node.1501"*
  br label %84

108:                                              ; preds = %73
  %109 = getelementptr inbounds %"class.std::__1::__tree_end_node", %"class.std::__1::__tree_end_node"* %78, i64 0, i32 0
  br label %110

110:                                              ; preds = %108, %102, %95
  %111 = phi %"class.std::__1::__tree_end_node"* [ %78, %108 ], [ %97, %95 ], [ %104, %102 ]
  %112 = phi %"class.std::__1::__tree_node_base"** [ %109, %108 ], [ %96, %95 ], [ %103, %102 ]
  %113 = inttoptr i64 %74 to %"class.std::__1::__tree_node_base"*
  %114 = getelementptr inbounds %"class.std::__1::__tree_node_base", %"class.std::__1::__tree_node_base"* %113, i64 0, i32 2
  %115 = inttoptr i64 %74 to i8*
  tail call void @llvm.memset.p0i8.i64(i8* align 8 %115, i8 0, i64 16, i1 false) #16
  store %"class.std::__1::__tree_end_node"* %111, %"class.std::__1::__tree_end_node"** %114, align 8
  store %"class.std::__1::__tree_node_base"* %113, %"class.std::__1::__tree_node_base"** %112, align 8
  %116 = getelementptr inbounds %"class.std::__1::multiset.1345", %"class.std::__1::multiset.1345"* %60, i64 0, i32 0, i32 0
  %117 = load %"class.std::__1::__tree_end_node"*, %"class.std::__1::__tree_end_node"** %116, align 8
  %118 = getelementptr inbounds %"class.std::__1::__tree_end_node", %"class.std::__1::__tree_end_node"* %117, i64 0, i32 0
  %119 = load %"class.std::__1::__tree_node_base"*, %"class.std::__1::__tree_node_base"** %118, align 8
  %120 = icmp eq %"class.std::__1::__tree_node_base"* %119, null
  br i1 %120, label %125, label %121

121:                                              ; preds = %110
  %122 = ptrtoint %"class.std::__1::__tree_node_base"* %119 to i64
  %123 = bitcast %"class.std::__1::multiset.1345"* %60 to i64*
  store i64 %122, i64* %123, align 8
  %124 = load %"class.std::__1::__tree_node_base"*, %"class.std::__1::__tree_node_base"** %112, align 8
  br label %125

125:                                              ; preds = %110, %121
  %126 = phi %"class.std::__1::__tree_node_base"* [ %113, %110 ], [ %124, %121 ]
  %127 = getelementptr inbounds %"class.v8::internal::ZoneMultiset.1344", %"class.v8::internal::ZoneMultiset.1344"* %59, i64 %57, i32 0, i32 0, i32 1, i32 0, i32 0, i32 0
  %128 = load %"class.std::__1::__tree_node_base"*, %"class.std::__1::__tree_node_base"** %127, align 8
  tail call void @_ZNSt3__127__tree_balance_after_insertIPNS_16__tree_node_baseIPvEEEEvT_S5_(%"class.std::__1::__tree_node_base"* %128, %"class.std::__1::__tree_node_base"* %126) #16
  %129 = getelementptr inbounds %"class.v8::internal::ZoneMultiset.1344", %"class.v8::internal::ZoneMultiset.1344"* %59, i64 %57, i32 0, i32 0, i32 2, i32 0, i32 0
  %130 = load i64, i64* %129, align 8
  %131 = add i64 %130, 1
  store i64 %131, i64* %129, align 8
  %132 = getelementptr inbounds %"class.v8::internal::compiler::LiveRange"*, %"class.v8::internal::compiler::LiveRange"** %1, i64 1
  %133 = getelementptr inbounds %"class.v8::internal::compiler::LinearScanAllocator", %"class.v8::internal::compiler::LinearScanAllocator"* %0, i64 0, i32 2, i32 0, i32 0, i32 1
  %134 = bitcast %"class.v8::internal::compiler::LiveRange"*** %133 to i64*
  %135 = load i64, i64* %134, align 8
  %136 = ptrtoint %"class.v8::internal::compiler::LiveRange"** %132 to i64
  %137 = sub i64 %135, %136
  %138 = ashr exact i64 %137, 3
  %139 = icmp eq i64 %137, 0
  br i1 %139, label %143, label %140

140:                                              ; preds = %125
  %141 = bitcast %"class.v8::internal::compiler::LiveRange"** %1 to i8*
  %142 = bitcast %"class.v8::internal::compiler::LiveRange"** %132 to i8*
  tail call void @llvm.memmove.p0i8.p0i8.i64(i8* align 8 %141, i8* align 8 %142, i64 %137, i1 false) #16
  br label %143

143:                                              ; preds = %125, %140
  %144 = getelementptr inbounds %"class.v8::internal::compiler::LiveRange"*, %"class.v8::internal::compiler::LiveRange"** %1, i64 %138
  store %"class.v8::internal::compiler::LiveRange"** %144, %"class.v8::internal::compiler::LiveRange"*** %133, align 8
  call void @llvm.lifetime.end.p0i8(i64 4, i8* nonnull %22)
  ret %"class.v8::internal::compiler::LiveRange"** %1
}

; Function Attrs: nounwind ssp uwtable
define hidden %"class.std::__1::__tree_end_node"* @_ZN2v88internal8compiler19LinearScanAllocator17InactiveToHandledENSt3__121__tree_const_iteratorIPNS1_9LiveRangeEPNS3_11__tree_nodeIS6_PvEElEE(%"class.v8::internal::compiler::LinearScanAllocator"* nocapture readonly, %"class.std::__1::__tree_end_node"*) local_unnamed_addr #0 align 2 {
  %3 = getelementptr inbounds %"class.std::__1::__tree_end_node", %"class.std::__1::__tree_end_node"* %1, i64 4
  %4 = bitcast %"class.std::__1::__tree_end_node"* %3 to %"class.v8::internal::compiler::LiveRange"**
  %5 = load %"class.v8::internal::compiler::LiveRange"*, %"class.v8::internal::compiler::LiveRange"** %4, align 8
  %6 = getelementptr inbounds %"class.v8::internal::compiler::LinearScanAllocator", %"class.v8::internal::compiler::LinearScanAllocator"* %0, i64 0, i32 0, i32 0
  %7 = load %"class.v8::internal::compiler::TopTierRegisterAllocationData"*, %"class.v8::internal::compiler::TopTierRegisterAllocationData"** %6, align 8
  %8 = getelementptr inbounds %"class.v8::internal::compiler::TopTierRegisterAllocationData", %"class.v8::internal::compiler::TopTierRegisterAllocationData"* %7, i64 0, i32 23, i32 0
  %9 = load i32, i32* %8, align 4
  %10 = and i32 %9, 1
  %11 = icmp eq i32 %10, 0
  br i1 %11, label %19, label %12

12:                                               ; preds = %2
  %13 = getelementptr inbounds %"class.v8::internal::compiler::LiveRange", %"class.v8::internal::compiler::LiveRange"* %5, i64 0, i32 5
  %14 = load %"class.v8::internal::compiler::TopLevelLiveRange"*, %"class.v8::internal::compiler::TopLevelLiveRange"** %13, align 8
  %15 = getelementptr inbounds %"class.v8::internal::compiler::TopLevelLiveRange", %"class.v8::internal::compiler::TopLevelLiveRange"* %14, i64 0, i32 1
  %16 = load i32, i32* %15, align 4
  %17 = getelementptr inbounds %"class.v8::internal::compiler::LiveRange", %"class.v8::internal::compiler::LiveRange"* %5, i64 0, i32 0
  %18 = load i32, i32* %17, align 8
  tail call void (i8*, ...) @_ZN2v88internal6PrintFEPKcz(i8* getelementptr inbounds ([50 x i8], [50 x i8]* @.str.83, i64 0, i64 0), i32 %16, i32 %18) #16
  br label %19

19:                                               ; preds = %2, %12
  %20 = getelementptr inbounds %"class.v8::internal::compiler::LiveRange", %"class.v8::internal::compiler::LiveRange"* %5, i64 0, i32 1
  %21 = load i32, i32* %20, align 4
  %22 = lshr i32 %21, 7
  %23 = and i32 %22, 63
  %24 = zext i32 %23 to i64
  %25 = getelementptr inbounds %"class.v8::internal::compiler::LinearScanAllocator", %"class.v8::internal::compiler::LinearScanAllocator"* %0, i64 0, i32 3, i32 0, i32 0, i32 0
  %26 = load %"class.v8::internal::ZoneMultiset.1344"*, %"class.v8::internal::ZoneMultiset.1344"** %25, align 8
  %27 = getelementptr inbounds %"class.v8::internal::ZoneMultiset.1344", %"class.v8::internal::ZoneMultiset.1344"* %26, i64 %24, i32 0
  %28 = getelementptr inbounds %"class.std::__1::__tree_end_node", %"class.std::__1::__tree_end_node"* %1, i64 1, i32 0
  %29 = load %"class.std::__1::__tree_node_base"*, %"class.std::__1::__tree_node_base"** %28, align 8
  %30 = icmp eq %"class.std::__1::__tree_node_base"* %29, null
  br i1 %30, label %31, label %39

31:                                               ; preds = %19
  %32 = bitcast %"class.std::__1::__tree_end_node"* %1 to %"class.std::__1::__tree_node_base"*
  %33 = getelementptr inbounds %"class.std::__1::__tree_end_node", %"class.std::__1::__tree_end_node"* %1, i64 2
  %34 = bitcast %"class.std::__1::__tree_end_node"* %33 to %"class.std::__1::__tree_end_node"**
  %35 = load %"class.std::__1::__tree_end_node"*, %"class.std::__1::__tree_end_node"** %34, align 8
  %36 = getelementptr inbounds %"class.std::__1::__tree_end_node", %"class.std::__1::__tree_end_node"* %35, i64 0, i32 0
  %37 = load %"class.std::__1::__tree_node_base"*, %"class.std::__1::__tree_node_base"** %36, align 8
  %38 = icmp eq %"class.std::__1::__tree_node_base"* %37, %32
  br i1 %38, label %55, label %46

39:                                               ; preds = %19, %39
  %40 = phi %"class.std::__1::__tree_node_base"* [ %42, %39 ], [ %29, %19 ]
  %41 = getelementptr inbounds %"class.std::__1::__tree_node_base", %"class.std::__1::__tree_node_base"* %40, i64 0, i32 0, i32 0
  %42 = load %"class.std::__1::__tree_node_base"*, %"class.std::__1::__tree_node_base"** %41, align 8
  %43 = icmp eq %"class.std::__1::__tree_node_base"* %42, null
  br i1 %43, label %44, label %39

44:                                               ; preds = %39
  %45 = getelementptr inbounds %"class.std::__1::__tree_node_base", %"class.std::__1::__tree_node_base"* %40, i64 0, i32 0
  br label %55

46:                                               ; preds = %31, %46
  %47 = phi %"class.std::__1::__tree_end_node"** [ %50, %46 ], [ %34, %31 ]
  %48 = bitcast %"class.std::__1::__tree_end_node"** %47 to %"class.std::__1::__tree_node_base"**
  %49 = load %"class.std::__1::__tree_node_base"*, %"class.std::__1::__tree_node_base"** %48, align 8
  %50 = getelementptr inbounds %"class.std::__1::__tree_node_base", %"class.std::__1::__tree_node_base"* %49, i64 0, i32 2
  %51 = load %"class.std::__1::__tree_end_node"*, %"class.std::__1::__tree_end_node"** %50, align 8
  %52 = getelementptr inbounds %"class.std::__1::__tree_end_node", %"class.std::__1::__tree_end_node"* %51, i64 0, i32 0
  %53 = load %"class.std::__1::__tree_node_base"*, %"class.std::__1::__tree_node_base"** %52, align 8
  %54 = icmp eq %"class.std::__1::__tree_node_base"* %53, %49
  br i1 %54, label %55, label %46

55:                                               ; preds = %46, %44, %31
  %56 = phi %"class.std::__1::__tree_end_node"* [ %45, %44 ], [ %35, %31 ], [ %51, %46 ]
  %57 = getelementptr inbounds %"class.std::__1::multiset.1345", %"class.std::__1::multiset.1345"* %27, i64 0, i32 0, i32 0
  %58 = load %"class.std::__1::__tree_end_node"*, %"class.std::__1::__tree_end_node"** %57, align 8
  %59 = icmp eq %"class.std::__1::__tree_end_node"* %58, %1
  br i1 %59, label %60, label %63

60:                                               ; preds = %55
  %61 = ptrtoint %"class.std::__1::__tree_end_node"* %56 to i64
  %62 = bitcast %"class.std::__1::multiset.1345"* %27 to i64*
  store i64 %61, i64* %62, align 8
  br label %63

63:                                               ; preds = %55, %60
  %64 = getelementptr inbounds %"class.v8::internal::ZoneMultiset.1344", %"class.v8::internal::ZoneMultiset.1344"* %26, i64 %24, i32 0, i32 0, i32 2, i32 0, i32 0
  %65 = load i64, i64* %64, align 8
  %66 = add i64 %65, -1
  store i64 %66, i64* %64, align 8
  %67 = getelementptr inbounds %"class.v8::internal::ZoneMultiset.1344", %"class.v8::internal::ZoneMultiset.1344"* %26, i64 %24, i32 0, i32 0, i32 1, i32 0, i32 0, i32 0
  %68 = load %"class.std::__1::__tree_node_base"*, %"class.std::__1::__tree_node_base"** %67, align 8
  %69 = bitcast %"class.std::__1::__tree_end_node"* %1 to %"class.std::__1::__tree_node_base"*
  tail call void @_ZNSt3__113__tree_removeIPNS_16__tree_node_baseIPvEEEEvT_S5_(%"class.std::__1::__tree_node_base"* %68, %"class.std::__1::__tree_node_base"* %69) #16
  ret %"class.std::__1::__tree_end_node"* %56
}

; Function Attrs: nounwind ssp uwtable
define hidden %"class.std::__1::__tree_end_node"* @_ZN2v88internal8compiler19LinearScanAllocator16InactiveToActiveENSt3__121__tree_const_iteratorIPNS1_9LiveRangeEPNS3_11__tree_nodeIS6_PvEElEENS1_16LifetimePositionE(%"class.v8::internal::compiler::LinearScanAllocator"*, %"class.std::__1::__tree_end_node"*, i32) local_unnamed_addr #0 align 2 {
  %4 = alloca i32, align 4
  %5 = getelementptr inbounds %"class.std::__1::__tree_end_node", %"class.std::__1::__tree_end_node"* %1, i64 4
  %6 = bitcast %"class.std::__1::__tree_end_node"* %5 to i64*
  %7 = load i64, i64* %6, align 8
  %8 = getelementptr inbounds %"class.v8::internal::compiler::LinearScanAllocator", %"class.v8::internal::compiler::LinearScanAllocator"* %0, i64 0, i32 2, i32 0
  %9 = getelementptr inbounds %"class.v8::internal::compiler::LinearScanAllocator", %"class.v8::internal::compiler::LinearScanAllocator"* %0, i64 0, i32 2, i32 0, i32 0, i32 1
  %10 = load %"class.v8::internal::compiler::LiveRange"**, %"class.v8::internal::compiler::LiveRange"*** %9, align 8
  %11 = getelementptr inbounds %"class.v8::internal::compiler::LinearScanAllocator", %"class.v8::internal::compiler::LinearScanAllocator"* %0, i64 0, i32 2, i32 0, i32 0, i32 2, i32 0, i32 0
  %12 = load %"class.v8::internal::compiler::LiveRange"**, %"class.v8::internal::compiler::LiveRange"*** %11, align 8
  %13 = icmp eq %"class.v8::internal::compiler::LiveRange"** %10, %12
  %14 = ptrtoint %"class.v8::internal::compiler::LiveRange"** %12 to i64
  br i1 %13, label %20, label %15

15:                                               ; preds = %3
  %16 = bitcast %"class.v8::internal::compiler::LiveRange"** %10 to i64*
  store i64 %7, i64* %16, align 8
  %17 = getelementptr inbounds %"class.v8::internal::compiler::LiveRange"*, %"class.v8::internal::compiler::LiveRange"** %10, i64 1
  %18 = ptrtoint %"class.v8::internal::compiler::LiveRange"** %17 to i64
  %19 = bitcast %"class.v8::internal::compiler::LiveRange"*** %9 to i64*
  store i64 %18, i64* %19, align 8
  br label %245

20:                                               ; preds = %3
  %21 = ptrtoint %"class.v8::internal::compiler::LiveRange"** %10 to i64
  %22 = bitcast %"class.v8::internal::compiler::LiveRange"*** %9 to i64*
  %23 = bitcast %"class.std::__1::vector.1310"* %8 to i64*
  %24 = load i64, i64* %23, align 8
  %25 = sub i64 %21, %24
  %26 = ashr exact i64 %25, 3
  %27 = add nsw i64 %26, 1
  %28 = icmp ugt i64 %27, 268435455
  br i1 %28, label %29, label %31

29:                                               ; preds = %20
  %30 = bitcast %"class.std::__1::vector.1310"* %8 to %"class.std::__1::__vector_base_common"*
  tail call void @_ZNKSt3__120__vector_base_commonILb1EE20__throw_length_errorEv(%"class.std::__1::__vector_base_common"* %30) #17
  unreachable

31:                                               ; preds = %20
  %32 = bitcast %"class.v8::internal::compiler::LiveRange"*** %11 to i64*
  %33 = sub i64 %14, %24
  %34 = ashr exact i64 %33, 3
  %35 = icmp ult i64 %34, 134217727
  br i1 %35, label %36, label %41

36:                                               ; preds = %31
  %37 = ashr exact i64 %33, 2
  %38 = icmp ult i64 %37, %27
  %39 = select i1 %38, i64 %27, i64 %37
  %40 = icmp eq i64 %39, 0
  br i1 %40, label %59, label %41

41:                                               ; preds = %36, %31
  %42 = phi i64 [ %39, %36 ], [ 268435455, %31 ]
  %43 = getelementptr inbounds %"class.v8::internal::compiler::LinearScanAllocator", %"class.v8::internal::compiler::LinearScanAllocator"* %0, i64 0, i32 2, i32 0, i32 0, i32 2, i32 1, i32 0, i32 0
  %44 = load %"class.v8::internal::Zone"*, %"class.v8::internal::Zone"** %43, align 8
  %45 = shl i64 %42, 3
  %46 = getelementptr inbounds %"class.v8::internal::Zone", %"class.v8::internal::Zone"* %44, i64 0, i32 2
  %47 = load i64, i64* %46, align 8
  %48 = getelementptr inbounds %"class.v8::internal::Zone", %"class.v8::internal::Zone"* %44, i64 0, i32 3
  %49 = load i64, i64* %48, align 8
  %50 = sub i64 %49, %47
  %51 = icmp ugt i64 %45, %50
  br i1 %51, label %52, label %54, !prof !2

52:                                               ; preds = %41
  %53 = tail call i64 @_ZN2v88internal4Zone9NewExpandEm(%"class.v8::internal::Zone"* %44, i64 %45) #16
  br label %56

54:                                               ; preds = %41
  %55 = add i64 %47, %45
  store i64 %55, i64* %46, align 8
  br label %56

56:                                               ; preds = %54, %52
  %57 = phi i64 [ %53, %52 ], [ %47, %54 ]
  %58 = inttoptr i64 %57 to %"class.v8::internal::compiler::LiveRange"**
  br label %59

59:                                               ; preds = %56, %36
  %60 = phi i64 [ %42, %56 ], [ 0, %36 ]
  %61 = phi %"class.v8::internal::compiler::LiveRange"** [ %58, %56 ], [ null, %36 ]
  %62 = getelementptr inbounds %"class.v8::internal::compiler::LiveRange"*, %"class.v8::internal::compiler::LiveRange"** %61, i64 %26
  %63 = getelementptr inbounds %"class.v8::internal::compiler::LiveRange"*, %"class.v8::internal::compiler::LiveRange"** %61, i64 %60
  %64 = ptrtoint %"class.v8::internal::compiler::LiveRange"** %63 to i64
  %65 = bitcast %"class.v8::internal::compiler::LiveRange"** %62 to i64*
  store i64 %7, i64* %65, align 8
  %66 = getelementptr inbounds %"class.v8::internal::compiler::LiveRange"*, %"class.v8::internal::compiler::LiveRange"** %62, i64 1
  %67 = ptrtoint %"class.v8::internal::compiler::LiveRange"** %66 to i64
  %68 = getelementptr inbounds %"class.std::__1::vector.1310", %"class.std::__1::vector.1310"* %8, i64 0, i32 0, i32 0
  %69 = load %"class.v8::internal::compiler::LiveRange"**, %"class.v8::internal::compiler::LiveRange"*** %68, align 8
  %70 = ptrtoint %"class.v8::internal::compiler::LiveRange"** %69 to i64
  %71 = load %"class.v8::internal::compiler::LiveRange"**, %"class.v8::internal::compiler::LiveRange"*** %9, align 8
  %72 = icmp eq %"class.v8::internal::compiler::LiveRange"** %71, %69
  br i1 %72, label %242, label %73

73:                                               ; preds = %59
  %74 = getelementptr %"class.v8::internal::compiler::LiveRange"*, %"class.v8::internal::compiler::LiveRange"** %71, i64 -1
  %75 = ptrtoint %"class.v8::internal::compiler::LiveRange"** %74 to i64
  %76 = sub i64 %75, %70
  %77 = lshr i64 %76, 3
  %78 = add nuw nsw i64 %77, 1
  %79 = icmp ult i64 %78, 4
  br i1 %79, label %172, label %80

80:                                               ; preds = %73
  %81 = getelementptr %"class.v8::internal::compiler::LiveRange"*, %"class.v8::internal::compiler::LiveRange"** %71, i64 -1
  %82 = ptrtoint %"class.v8::internal::compiler::LiveRange"** %81 to i64
  %83 = sub i64 %82, %70
  %84 = lshr i64 %83, 3
  %85 = xor i64 %84, -1
  %86 = add nsw i64 %26, %85
  %87 = getelementptr %"class.v8::internal::compiler::LiveRange"*, %"class.v8::internal::compiler::LiveRange"** %61, i64 %86
  %88 = xor i64 %84, -1
  %89 = getelementptr %"class.v8::internal::compiler::LiveRange"*, %"class.v8::internal::compiler::LiveRange"** %71, i64 %88
  %90 = icmp ult %"class.v8::internal::compiler::LiveRange"** %87, %71
  %91 = icmp ult %"class.v8::internal::compiler::LiveRange"** %89, %62
  %92 = and i1 %90, %91
  br i1 %92, label %172, label %93

93:                                               ; preds = %80
  %94 = and i64 %78, 4611686018427387900
  %95 = sub nsw i64 0, %94
  %96 = getelementptr %"class.v8::internal::compiler::LiveRange"*, %"class.v8::internal::compiler::LiveRange"** %62, i64 %95
  %97 = sub nsw i64 0, %94
  %98 = getelementptr %"class.v8::internal::compiler::LiveRange"*, %"class.v8::internal::compiler::LiveRange"** %71, i64 %97
  %99 = add nsw i64 %94, -4
  %100 = lshr exact i64 %99, 2
  %101 = add nuw nsw i64 %100, 1
  %102 = and i64 %101, 1
  %103 = icmp eq i64 %99, 0
  br i1 %103, label %148, label %104

104:                                              ; preds = %93
  %105 = sub nuw nsw i64 %101, %102
  %106 = getelementptr %"class.v8::internal::compiler::LiveRange"*, %"class.v8::internal::compiler::LiveRange"** %62, i64 -1
  %107 = getelementptr %"class.v8::internal::compiler::LiveRange"*, %"class.v8::internal::compiler::LiveRange"** %71, i64 -1
  %108 = getelementptr %"class.v8::internal::compiler::LiveRange"*, %"class.v8::internal::compiler::LiveRange"** %62, i64 -1
  %109 = getelementptr %"class.v8::internal::compiler::LiveRange"*, %"class.v8::internal::compiler::LiveRange"** %71, i64 -1
  br label %110

110:                                              ; preds = %110, %104
  %111 = phi i64 [ 0, %104 ], [ %145, %110 ]
  %112 = phi i64 [ %105, %104 ], [ %146, %110 ]
  %113 = sub i64 0, %111
  %114 = sub i64 0, %111
  %115 = getelementptr inbounds %"class.v8::internal::compiler::LiveRange"*, %"class.v8::internal::compiler::LiveRange"** %106, i64 %113
  %116 = getelementptr inbounds %"class.v8::internal::compiler::LiveRange"*, %"class.v8::internal::compiler::LiveRange"** %107, i64 %114
  %117 = getelementptr inbounds %"class.v8::internal::compiler::LiveRange"*, %"class.v8::internal::compiler::LiveRange"** %116, i64 -1
  %118 = bitcast %"class.v8::internal::compiler::LiveRange"** %117 to <2 x i64>*
  %119 = load <2 x i64>, <2 x i64>* %118, align 8, !alias.scope !164
  %120 = getelementptr inbounds %"class.v8::internal::compiler::LiveRange"*, %"class.v8::internal::compiler::LiveRange"** %116, i64 -2
  %121 = getelementptr inbounds %"class.v8::internal::compiler::LiveRange"*, %"class.v8::internal::compiler::LiveRange"** %120, i64 -1
  %122 = bitcast %"class.v8::internal::compiler::LiveRange"** %121 to <2 x i64>*
  %123 = load <2 x i64>, <2 x i64>* %122, align 8, !alias.scope !164
  %124 = getelementptr inbounds %"class.v8::internal::compiler::LiveRange"*, %"class.v8::internal::compiler::LiveRange"** %115, i64 -1
  %125 = bitcast %"class.v8::internal::compiler::LiveRange"** %124 to <2 x i64>*
  store <2 x i64> %119, <2 x i64>* %125, align 8, !alias.scope !167, !noalias !164
  %126 = getelementptr inbounds %"class.v8::internal::compiler::LiveRange"*, %"class.v8::internal::compiler::LiveRange"** %115, i64 -2
  %127 = getelementptr inbounds %"class.v8::internal::compiler::LiveRange"*, %"class.v8::internal::compiler::LiveRange"** %126, i64 -1
  %128 = bitcast %"class.v8::internal::compiler::LiveRange"** %127 to <2 x i64>*
  store <2 x i64> %123, <2 x i64>* %128, align 8, !alias.scope !167, !noalias !164
  %129 = sub nuw nsw i64 -4, %111
  %130 = sub nuw nsw i64 -4, %111
  %131 = getelementptr inbounds %"class.v8::internal::compiler::LiveRange"*, %"class.v8::internal::compiler::LiveRange"** %108, i64 %129
  %132 = getelementptr inbounds %"class.v8::internal::compiler::LiveRange"*, %"class.v8::internal::compiler::LiveRange"** %109, i64 %130
  %133 = getelementptr inbounds %"class.v8::internal::compiler::LiveRange"*, %"class.v8::internal::compiler::LiveRange"** %132, i64 -1
  %134 = bitcast %"class.v8::internal::compiler::LiveRange"** %133 to <2 x i64>*
  %135 = load <2 x i64>, <2 x i64>* %134, align 8, !alias.scope !164
  %136 = getelementptr inbounds %"class.v8::internal::compiler::LiveRange"*, %"class.v8::internal::compiler::LiveRange"** %132, i64 -2
  %137 = getelementptr inbounds %"class.v8::internal::compiler::LiveRange"*, %"class.v8::internal::compiler::LiveRange"** %136, i64 -1
  %138 = bitcast %"class.v8::internal::compiler::LiveRange"** %137 to <2 x i64>*
  %139 = load <2 x i64>, <2 x i64>* %138, align 8, !alias.scope !164
  %140 = getelementptr inbounds %"class.v8::internal::compiler::LiveRange"*, %"class.v8::internal::compiler::LiveRange"** %131, i64 -1
  %141 = bitcast %"class.v8::internal::compiler::LiveRange"** %140 to <2 x i64>*
  store <2 x i64> %135, <2 x i64>* %141, align 8, !alias.scope !167, !noalias !164
  %142 = getelementptr inbounds %"class.v8::internal::compiler::LiveRange"*, %"class.v8::internal::compiler::LiveRange"** %131, i64 -2
  %143 = getelementptr inbounds %"class.v8::internal::compiler::LiveRange"*, %"class.v8::internal::compiler::LiveRange"** %142, i64 -1
  %144 = bitcast %"class.v8::internal::compiler::LiveRange"** %143 to <2 x i64>*
  store <2 x i64> %139, <2 x i64>* %144, align 8, !alias.scope !167, !noalias !164
  %145 = add i64 %111, 8
  %146 = add i64 %112, -2
  %147 = icmp eq i64 %146, 0
  br i1 %147, label %148, label %110, !llvm.loop !169

148:                                              ; preds = %110, %93
  %149 = phi i64 [ 0, %93 ], [ %145, %110 ]
  %150 = icmp eq i64 %102, 0
  br i1 %150, label %170, label %151

151:                                              ; preds = %148
  %152 = sub i64 0, %149
  %153 = getelementptr %"class.v8::internal::compiler::LiveRange"*, %"class.v8::internal::compiler::LiveRange"** %62, i64 -1
  %154 = sub i64 0, %149
  %155 = getelementptr %"class.v8::internal::compiler::LiveRange"*, %"class.v8::internal::compiler::LiveRange"** %71, i64 -1
  %156 = getelementptr inbounds %"class.v8::internal::compiler::LiveRange"*, %"class.v8::internal::compiler::LiveRange"** %153, i64 %152
  %157 = getelementptr inbounds %"class.v8::internal::compiler::LiveRange"*, %"class.v8::internal::compiler::LiveRange"** %155, i64 %154
  %158 = getelementptr inbounds %"class.v8::internal::compiler::LiveRange"*, %"class.v8::internal::compiler::LiveRange"** %157, i64 -1
  %159 = bitcast %"class.v8::internal::compiler::LiveRange"** %158 to <2 x i64>*
  %160 = load <2 x i64>, <2 x i64>* %159, align 8, !alias.scope !164
  %161 = getelementptr inbounds %"class.v8::internal::compiler::LiveRange"*, %"class.v8::internal::compiler::LiveRange"** %157, i64 -2
  %162 = getelementptr inbounds %"class.v8::internal::compiler::LiveRange"*, %"class.v8::internal::compiler::LiveRange"** %161, i64 -1
  %163 = bitcast %"class.v8::internal::compiler::LiveRange"** %162 to <2 x i64>*
  %164 = load <2 x i64>, <2 x i64>* %163, align 8, !alias.scope !164
  %165 = getelementptr inbounds %"class.v8::internal::compiler::LiveRange"*, %"class.v8::internal::compiler::LiveRange"** %156, i64 -1
  %166 = bitcast %"class.v8::internal::compiler::LiveRange"** %165 to <2 x i64>*
  store <2 x i64> %160, <2 x i64>* %166, align 8, !alias.scope !167, !noalias !164
  %167 = getelementptr inbounds %"class.v8::internal::compiler::LiveRange"*, %"class.v8::internal::compiler::LiveRange"** %156, i64 -2
  %168 = getelementptr inbounds %"class.v8::internal::compiler::LiveRange"*, %"class.v8::internal::compiler::LiveRange"** %167, i64 -1
  %169 = bitcast %"class.v8::internal::compiler::LiveRange"** %168 to <2 x i64>*
  store <2 x i64> %164, <2 x i64>* %169, align 8, !alias.scope !167, !noalias !164
  br label %170

170:                                              ; preds = %148, %151
  %171 = icmp eq i64 %78, %94
  br i1 %171, label %242, label %172

172:                                              ; preds = %170, %80, %73
  %173 = phi %"class.v8::internal::compiler::LiveRange"** [ %62, %80 ], [ %62, %73 ], [ %96, %170 ]
  %174 = phi %"class.v8::internal::compiler::LiveRange"** [ %71, %80 ], [ %71, %73 ], [ %98, %170 ]
  %175 = getelementptr %"class.v8::internal::compiler::LiveRange"*, %"class.v8::internal::compiler::LiveRange"** %174, i64 -1
  %176 = ptrtoint %"class.v8::internal::compiler::LiveRange"** %175 to i64
  %177 = sub i64 %176, %70
  %178 = lshr i64 %177, 3
  %179 = add nuw nsw i64 %178, 1
  %180 = and i64 %179, 7
  %181 = icmp eq i64 %180, 0
  br i1 %181, label %193, label %182

182:                                              ; preds = %172, %182
  %183 = phi %"class.v8::internal::compiler::LiveRange"** [ %186, %182 ], [ %173, %172 ]
  %184 = phi %"class.v8::internal::compiler::LiveRange"** [ %187, %182 ], [ %174, %172 ]
  %185 = phi i64 [ %191, %182 ], [ %180, %172 ]
  %186 = getelementptr inbounds %"class.v8::internal::compiler::LiveRange"*, %"class.v8::internal::compiler::LiveRange"** %183, i64 -1
  %187 = getelementptr inbounds %"class.v8::internal::compiler::LiveRange"*, %"class.v8::internal::compiler::LiveRange"** %184, i64 -1
  %188 = bitcast %"class.v8::internal::compiler::LiveRange"** %187 to i64*
  %189 = load i64, i64* %188, align 8
  %190 = bitcast %"class.v8::internal::compiler::LiveRange"** %186 to i64*
  store i64 %189, i64* %190, align 8
  %191 = add i64 %185, -1
  %192 = icmp eq i64 %191, 0
  br i1 %192, label %193, label %182, !llvm.loop !170

193:                                              ; preds = %182, %172
  %194 = phi %"class.v8::internal::compiler::LiveRange"** [ undef, %172 ], [ %186, %182 ]
  %195 = phi %"class.v8::internal::compiler::LiveRange"** [ %173, %172 ], [ %186, %182 ]
  %196 = phi %"class.v8::internal::compiler::LiveRange"** [ %174, %172 ], [ %187, %182 ]
  %197 = icmp ult i64 %177, 56
  br i1 %197, label %242, label %198

198:                                              ; preds = %193, %198
  %199 = phi %"class.v8::internal::compiler::LiveRange"** [ %236, %198 ], [ %195, %193 ]
  %200 = phi %"class.v8::internal::compiler::LiveRange"** [ %237, %198 ], [ %196, %193 ]
  %201 = getelementptr inbounds %"class.v8::internal::compiler::LiveRange"*, %"class.v8::internal::compiler::LiveRange"** %199, i64 -1
  %202 = getelementptr inbounds %"class.v8::internal::compiler::LiveRange"*, %"class.v8::internal::compiler::LiveRange"** %200, i64 -1
  %203 = bitcast %"class.v8::internal::compiler::LiveRange"** %202 to i64*
  %204 = load i64, i64* %203, align 8
  %205 = bitcast %"class.v8::internal::compiler::LiveRange"** %201 to i64*
  store i64 %204, i64* %205, align 8
  %206 = getelementptr inbounds %"class.v8::internal::compiler::LiveRange"*, %"class.v8::internal::compiler::LiveRange"** %199, i64 -2
  %207 = getelementptr inbounds %"class.v8::internal::compiler::LiveRange"*, %"class.v8::internal::compiler::LiveRange"** %200, i64 -2
  %208 = bitcast %"class.v8::internal::compiler::LiveRange"** %207 to i64*
  %209 = load i64, i64* %208, align 8
  %210 = bitcast %"class.v8::internal::compiler::LiveRange"** %206 to i64*
  store i64 %209, i64* %210, align 8
  %211 = getelementptr inbounds %"class.v8::internal::compiler::LiveRange"*, %"class.v8::internal::compiler::LiveRange"** %199, i64 -3
  %212 = getelementptr inbounds %"class.v8::internal::compiler::LiveRange"*, %"class.v8::internal::compiler::LiveRange"** %200, i64 -3
  %213 = bitcast %"class.v8::internal::compiler::LiveRange"** %212 to i64*
  %214 = load i64, i64* %213, align 8
  %215 = bitcast %"class.v8::internal::compiler::LiveRange"** %211 to i64*
  store i64 %214, i64* %215, align 8
  %216 = getelementptr inbounds %"class.v8::internal::compiler::LiveRange"*, %"class.v8::internal::compiler::LiveRange"** %199, i64 -4
  %217 = getelementptr inbounds %"class.v8::internal::compiler::LiveRange"*, %"class.v8::internal::compiler::LiveRange"** %200, i64 -4
  %218 = bitcast %"class.v8::internal::compiler::LiveRange"** %217 to i64*
  %219 = load i64, i64* %218, align 8
  %220 = bitcast %"class.v8::internal::compiler::LiveRange"** %216 to i64*
  store i64 %219, i64* %220, align 8
  %221 = getelementptr inbounds %"class.v8::internal::compiler::LiveRange"*, %"class.v8::internal::compiler::LiveRange"** %199, i64 -5
  %222 = getelementptr inbounds %"class.v8::internal::compiler::LiveRange"*, %"class.v8::internal::compiler::LiveRange"** %200, i64 -5
  %223 = bitcast %"class.v8::internal::compiler::LiveRange"** %222 to i64*
  %224 = load i64, i64* %223, align 8
  %225 = bitcast %"class.v8::internal::compiler::LiveRange"** %221 to i64*
  store i64 %224, i64* %225, align 8
  %226 = getelementptr inbounds %"class.v8::internal::compiler::LiveRange"*, %"class.v8::internal::compiler::LiveRange"** %199, i64 -6
  %227 = getelementptr inbounds %"class.v8::internal::compiler::LiveRange"*, %"class.v8::internal::compiler::LiveRange"** %200, i64 -6
  %228 = bitcast %"class.v8::internal::compiler::LiveRange"** %227 to i64*
  %229 = load i64, i64* %228, align 8
  %230 = bitcast %"class.v8::internal::compiler::LiveRange"** %226 to i64*
  store i64 %229, i64* %230, align 8
  %231 = getelementptr inbounds %"class.v8::internal::compiler::LiveRange"*, %"class.v8::internal::compiler::LiveRange"** %199, i64 -7
  %232 = getelementptr inbounds %"class.v8::internal::compiler::LiveRange"*, %"class.v8::internal::compiler::LiveRange"** %200, i64 -7
  %233 = bitcast %"class.v8::internal::compiler::LiveRange"** %232 to i64*
  %234 = load i64, i64* %233, align 8
  %235 = bitcast %"class.v8::internal::compiler::LiveRange"** %231 to i64*
  store i64 %234, i64* %235, align 8
  %236 = getelementptr inbounds %"class.v8::internal::compiler::LiveRange"*, %"class.v8::internal::compiler::LiveRange"** %199, i64 -8
  %237 = getelementptr inbounds %"class.v8::internal::compiler::LiveRange"*, %"class.v8::internal::compiler::LiveRange"** %200, i64 -8
  %238 = bitcast %"class.v8::internal::compiler::LiveRange"** %237 to i64*
  %239 = load i64, i64* %238, align 8
  %240 = bitcast %"class.v8::internal::compiler::LiveRange"** %236 to i64*
  store i64 %239, i64* %240, align 8
  %241 = icmp eq %"class.v8::internal::compiler::LiveRange"** %237, %69
  br i1 %241, label %242, label %198, !llvm.loop !171

242:                                              ; preds = %193, %198, %170, %59
  %243 = phi %"class.v8::internal::compiler::LiveRange"** [ %62, %59 ], [ %96, %170 ], [ %194, %193 ], [ %236, %198 ]
  %244 = ptrtoint %"class.v8::internal::compiler::LiveRange"** %243 to i64
  store i64 %244, i64* %23, align 8
  store i64 %67, i64* %22, align 8
  store i64 %64, i64* %32, align 8
  br label %245

245:                                              ; preds = %15, %242
  %246 = getelementptr inbounds %"class.v8::internal::compiler::LinearScanAllocator", %"class.v8::internal::compiler::LinearScanAllocator"* %0, i64 0, i32 0, i32 0
  %247 = load %"class.v8::internal::compiler::TopTierRegisterAllocationData"*, %"class.v8::internal::compiler::TopTierRegisterAllocationData"** %246, align 8
  %248 = getelementptr inbounds %"class.v8::internal::compiler::TopTierRegisterAllocationData", %"class.v8::internal::compiler::TopTierRegisterAllocationData"* %247, i64 0, i32 23, i32 0
  %249 = load i32, i32* %248, align 4
  %250 = and i32 %249, 1
  %251 = icmp eq i32 %250, 0
  %252 = inttoptr i64 %7 to %"class.v8::internal::compiler::LiveRange"*
  br i1 %251, label %260, label %253

253:                                              ; preds = %245
  %254 = getelementptr inbounds %"class.v8::internal::compiler::LiveRange", %"class.v8::internal::compiler::LiveRange"* %252, i64 0, i32 5
  %255 = load %"class.v8::internal::compiler::TopLevelLiveRange"*, %"class.v8::internal::compiler::TopLevelLiveRange"** %254, align 8
  %256 = getelementptr inbounds %"class.v8::internal::compiler::TopLevelLiveRange", %"class.v8::internal::compiler::TopLevelLiveRange"* %255, i64 0, i32 1
  %257 = load i32, i32* %256, align 4
  %258 = getelementptr inbounds %"class.v8::internal::compiler::LiveRange", %"class.v8::internal::compiler::LiveRange"* %252, i64 0, i32 0
  %259 = load i32, i32* %258, align 8
  tail call void (i8*, ...) @_ZN2v88internal6PrintFEPKcz(i8* getelementptr inbounds ([49 x i8], [49 x i8]* @.str.84, i64 0, i64 0), i32 %257, i32 %259) #16
  br label %260

260:                                              ; preds = %245, %253
  %261 = getelementptr inbounds %"class.v8::internal::compiler::LinearScanAllocator", %"class.v8::internal::compiler::LinearScanAllocator"* %0, i64 0, i32 4
  %262 = bitcast i32* %4 to i8*
  call void @llvm.lifetime.start.p0i8(i64 4, i8* nonnull %262)
  %263 = getelementptr inbounds %"class.v8::internal::compiler::LiveRange", %"class.v8::internal::compiler::LiveRange"* %252, i64 0, i32 7
  %264 = load %"class.v8::internal::compiler::UseInterval"*, %"class.v8::internal::compiler::UseInterval"** %263, align 8
  %265 = icmp eq %"class.v8::internal::compiler::UseInterval"* %264, null
  br i1 %265, label %266, label %268

266:                                              ; preds = %260
  %267 = getelementptr inbounds %"class.v8::internal::compiler::LiveRange", %"class.v8::internal::compiler::LiveRange"* %252, i64 0, i32 3
  br label %274

268:                                              ; preds = %260
  %269 = getelementptr inbounds %"class.v8::internal::compiler::UseInterval", %"class.v8::internal::compiler::UseInterval"* %264, i64 0, i32 0, i32 0
  %270 = load i32, i32* %269, align 8
  %271 = icmp sgt i32 %270, %2
  br i1 %271, label %272, label %274

272:                                              ; preds = %268
  store %"class.v8::internal::compiler::UseInterval"* null, %"class.v8::internal::compiler::UseInterval"** %263, align 8
  %273 = getelementptr inbounds %"class.v8::internal::compiler::LiveRange", %"class.v8::internal::compiler::LiveRange"* %252, i64 0, i32 3
  br label %274

274:                                              ; preds = %272, %268, %266
  %275 = phi %"class.v8::internal::compiler::UseInterval"** [ %263, %268 ], [ %273, %272 ], [ %267, %266 ]
  br label %276

276:                                              ; preds = %274, %276
  %277 = phi %"class.v8::internal::compiler::UseInterval"** [ %282, %276 ], [ %275, %274 ]
  %278 = load %"class.v8::internal::compiler::UseInterval"*, %"class.v8::internal::compiler::UseInterval"** %277, align 8
  %279 = getelementptr inbounds %"class.v8::internal::compiler::UseInterval", %"class.v8::internal::compiler::UseInterval"* %278, i64 0, i32 1, i32 0
  %280 = load i32, i32* %279, align 4
  %281 = icmp slt i32 %280, %2
  %282 = getelementptr inbounds %"class.v8::internal::compiler::UseInterval", %"class.v8::internal::compiler::UseInterval"* %278, i64 0, i32 2
  br i1 %281, label %276, label %283

283:                                              ; preds = %276
  store i32 %280, i32* %4, align 4
  %284 = getelementptr inbounds %"class.v8::internal::compiler::LifetimePosition", %"class.v8::internal::compiler::LifetimePosition"* %261, i64 0, i32 0
  %285 = load i32, i32* %284, align 4
  %286 = icmp slt i32 %280, %285
  %287 = bitcast i32* %4 to %"class.v8::internal::compiler::LifetimePosition"*
  %288 = select i1 %286, %"class.v8::internal::compiler::LifetimePosition"* %287, %"class.v8::internal::compiler::LifetimePosition"* %261
  %289 = getelementptr inbounds %"class.v8::internal::compiler::LifetimePosition", %"class.v8::internal::compiler::LifetimePosition"* %288, i64 0, i32 0
  %290 = load i32, i32* %289, align 4
  store i32 %290, i32* %284, align 8
  call void @llvm.lifetime.end.p0i8(i64 4, i8* nonnull %262)
  %291 = getelementptr inbounds %"class.v8::internal::compiler::LiveRange", %"class.v8::internal::compiler::LiveRange"* %252, i64 0, i32 1
  %292 = load i32, i32* %291, align 4
  %293 = lshr i32 %292, 7
  %294 = and i32 %293, 63
  %295 = zext i32 %294 to i64
  %296 = getelementptr inbounds %"class.v8::internal::compiler::LinearScanAllocator", %"class.v8::internal::compiler::LinearScanAllocator"* %0, i64 0, i32 3, i32 0, i32 0, i32 0
  %297 = load %"class.v8::internal::ZoneMultiset.1344"*, %"class.v8::internal::ZoneMultiset.1344"** %296, align 8
  %298 = getelementptr inbounds %"class.v8::internal::ZoneMultiset.1344", %"class.v8::internal::ZoneMultiset.1344"* %297, i64 %295, i32 0
  %299 = getelementptr inbounds %"class.std::__1::__tree_end_node", %"class.std::__1::__tree_end_node"* %1, i64 1, i32 0
  %300 = load %"class.std::__1::__tree_node_base"*, %"class.std::__1::__tree_node_base"** %299, align 8
  %301 = icmp eq %"class.std::__1::__tree_node_base"* %300, null
  br i1 %301, label %302, label %310

302:                                              ; preds = %283
  %303 = bitcast %"class.std::__1::__tree_end_node"* %1 to %"class.std::__1::__tree_node_base"*
  %304 = getelementptr inbounds %"class.std::__1::__tree_end_node", %"class.std::__1::__tree_end_node"* %1, i64 2
  %305 = bitcast %"class.std::__1::__tree_end_node"* %304 to %"class.std::__1::__tree_end_node"**
  %306 = load %"class.std::__1::__tree_end_node"*, %"class.std::__1::__tree_end_node"** %305, align 8
  %307 = getelementptr inbounds %"class.std::__1::__tree_end_node", %"class.std::__1::__tree_end_node"* %306, i64 0, i32 0
  %308 = load %"class.std::__1::__tree_node_base"*, %"class.std::__1::__tree_node_base"** %307, align 8
  %309 = icmp eq %"class.std::__1::__tree_node_base"* %308, %303
  br i1 %309, label %326, label %317

310:                                              ; preds = %283, %310
  %311 = phi %"class.std::__1::__tree_node_base"* [ %313, %310 ], [ %300, %283 ]
  %312 = getelementptr inbounds %"class.std::__1::__tree_node_base", %"class.std::__1::__tree_node_base"* %311, i64 0, i32 0, i32 0
  %313 = load %"class.std::__1::__tree_node_base"*, %"class.std::__1::__tree_node_base"** %312, align 8
  %314 = icmp eq %"class.std::__1::__tree_node_base"* %313, null
  br i1 %314, label %315, label %310

315:                                              ; preds = %310
  %316 = getelementptr inbounds %"class.std::__1::__tree_node_base", %"class.std::__1::__tree_node_base"* %311, i64 0, i32 0
  br label %326

317:                                              ; preds = %302, %317
  %318 = phi %"class.std::__1::__tree_end_node"** [ %321, %317 ], [ %305, %302 ]
  %319 = bitcast %"class.std::__1::__tree_end_node"** %318 to %"class.std::__1::__tree_node_base"**
  %320 = load %"class.std::__1::__tree_node_base"*, %"class.std::__1::__tree_node_base"** %319, align 8
  %321 = getelementptr inbounds %"class.std::__1::__tree_node_base", %"class.std::__1::__tree_node_base"* %320, i64 0, i32 2
  %322 = load %"class.std::__1::__tree_end_node"*, %"class.std::__1::__tree_end_node"** %321, align 8
  %323 = getelementptr inbounds %"class.std::__1::__tree_end_node", %"class.std::__1::__tree_end_node"* %322, i64 0, i32 0
  %324 = load %"class.std::__1::__tree_node_base"*, %"class.std::__1::__tree_node_base"** %323, align 8
  %325 = icmp eq %"class.std::__1::__tree_node_base"* %324, %320
  br i1 %325, label %326, label %317

326:                                              ; preds = %317, %315, %302
  %327 = phi %"class.std::__1::__tree_end_node"* [ %316, %315 ], [ %306, %302 ], [ %322, %317 ]
  %328 = getelementptr inbounds %"class.std::__1::multiset.1345", %"class.std::__1::multiset.1345"* %298, i64 0, i32 0, i32 0
  %329 = load %"class.std::__1::__tree_end_node"*, %"class.std::__1::__tree_end_node"** %328, align 8
  %330 = icmp eq %"class.std::__1::__tree_end_node"* %329, %1
  br i1 %330, label %331, label %334

331:                                              ; preds = %326
  %332 = ptrtoint %"class.std::__1::__tree_end_node"* %327 to i64
  %333 = bitcast %"class.std::__1::multiset.1345"* %298 to i64*
  store i64 %332, i64* %333, align 8
  br label %334

334:                                              ; preds = %326, %331
  %335 = getelementptr inbounds %"class.v8::internal::ZoneMultiset.1344", %"class.v8::internal::ZoneMultiset.1344"* %297, i64 %295, i32 0, i32 0, i32 2, i32 0, i32 0
  %336 = load i64, i64* %335, align 8
  %337 = add i64 %336, -1
  store i64 %337, i64* %335, align 8
  %338 = getelementptr inbounds %"class.v8::internal::ZoneMultiset.1344", %"class.v8::internal::ZoneMultiset.1344"* %297, i64 %295, i32 0, i32 0, i32 1, i32 0, i32 0, i32 0
  %339 = load %"class.std::__1::__tree_node_base"*, %"class.std::__1::__tree_node_base"** %338, align 8
  %340 = bitcast %"class.std::__1::__tree_end_node"* %1 to %"class.std::__1::__tree_node_base"*
  tail call void @_ZNSt3__113__tree_removeIPNS_16__tree_node_baseIPvEEEEvT_S5_(%"class.std::__1::__tree_node_base"* %339, %"class.std::__1::__tree_node_base"* %340) #16
  ret %"class.std::__1::__tree_end_node"* %327
}

; Function Attrs: nounwind ssp uwtable
define hidden void @_ZNK2v88internal8compiler19LinearScanAllocator16GetFPRegisterSetENS0_21MachineRepresentationEPiS4_PPKi(%"class.v8::internal::compiler::LinearScanAllocator"* nocapture readonly, i8 zeroext, i32* nocapture, i32* nocapture, i32** nocapture) local_unnamed_addr #0 align 2 {
  switch i8 %1, label %38 [
    i8 12, label %6
    i8 14, label %22
  ]

6:                                                ; preds = %5
  %7 = getelementptr inbounds %"class.v8::internal::compiler::LinearScanAllocator", %"class.v8::internal::compiler::LinearScanAllocator"* %0, i64 0, i32 0, i32 0
  %8 = load %"class.v8::internal::compiler::TopTierRegisterAllocationData"*, %"class.v8::internal::compiler::TopTierRegisterAllocationData"** %7, align 8
  %9 = getelementptr inbounds %"class.v8::internal::compiler::TopTierRegisterAllocationData", %"class.v8::internal::compiler::TopTierRegisterAllocationData"* %8, i64 0, i32 5
  %10 = load %"class.v8::internal::RegisterConfiguration"*, %"class.v8::internal::RegisterConfiguration"** %9, align 8
  %11 = getelementptr inbounds %"class.v8::internal::RegisterConfiguration", %"class.v8::internal::RegisterConfiguration"* %10, i64 0, i32 2
  %12 = load i32, i32* %11, align 4
  store i32 %12, i32* %2, align 4
  %13 = load %"class.v8::internal::compiler::TopTierRegisterAllocationData"*, %"class.v8::internal::compiler::TopTierRegisterAllocationData"** %7, align 8
  %14 = getelementptr inbounds %"class.v8::internal::compiler::TopTierRegisterAllocationData", %"class.v8::internal::compiler::TopTierRegisterAllocationData"* %13, i64 0, i32 5
  %15 = load %"class.v8::internal::RegisterConfiguration"*, %"class.v8::internal::RegisterConfiguration"** %14, align 8
  %16 = getelementptr inbounds %"class.v8::internal::RegisterConfiguration", %"class.v8::internal::RegisterConfiguration"* %15, i64 0, i32 6
  %17 = load i32, i32* %16, align 4
  store i32 %17, i32* %3, align 4
  %18 = load %"class.v8::internal::compiler::TopTierRegisterAllocationData"*, %"class.v8::internal::compiler::TopTierRegisterAllocationData"** %7, align 8
  %19 = getelementptr inbounds %"class.v8::internal::compiler::TopTierRegisterAllocationData", %"class.v8::internal::compiler::TopTierRegisterAllocationData"* %18, i64 0, i32 5
  %20 = load %"class.v8::internal::RegisterConfiguration"*, %"class.v8::internal::RegisterConfiguration"** %19, align 8
  %21 = getelementptr inbounds %"class.v8::internal::RegisterConfiguration", %"class.v8::internal::RegisterConfiguration"* %20, i64 0, i32 14, i64 0
  br label %39

22:                                               ; preds = %5
  %23 = getelementptr inbounds %"class.v8::internal::compiler::LinearScanAllocator", %"class.v8::internal::compiler::LinearScanAllocator"* %0, i64 0, i32 0, i32 0
  %24 = load %"class.v8::internal::compiler::TopTierRegisterAllocationData"*, %"class.v8::internal::compiler::TopTierRegisterAllocationData"** %23, align 8
  %25 = getelementptr inbounds %"class.v8::internal::compiler::TopTierRegisterAllocationData", %"class.v8::internal::compiler::TopTierRegisterAllocationData"* %24, i64 0, i32 5
  %26 = load %"class.v8::internal::RegisterConfiguration"*, %"class.v8::internal::RegisterConfiguration"** %25, align 8
  %27 = getelementptr inbounds %"class.v8::internal::RegisterConfiguration", %"class.v8::internal::RegisterConfiguration"* %26, i64 0, i32 4
  %28 = load i32, i32* %27, align 4
  store i32 %28, i32* %2, align 4
  %29 = load %"class.v8::internal::compiler::TopTierRegisterAllocationData"*, %"class.v8::internal::compiler::TopTierRegisterAllocationData"** %23, align 8
  %30 = getelementptr inbounds %"class.v8::internal::compiler::TopTierRegisterAllocationData", %"class.v8::internal::compiler::TopTierRegisterAllocationData"* %29, i64 0, i32 5
  %31 = load %"class.v8::internal::RegisterConfiguration"*, %"class.v8::internal::RegisterConfiguration"** %30, align 8
  %32 = getelementptr inbounds %"class.v8::internal::RegisterConfiguration", %"class.v8::internal::RegisterConfiguration"* %31, i64 0, i32 8
  %33 = load i32, i32* %32, align 4
  store i32 %33, i32* %3, align 4
  %34 = load %"class.v8::internal::compiler::TopTierRegisterAllocationData"*, %"class.v8::internal::compiler::TopTierRegisterAllocationData"** %23, align 8
  %35 = getelementptr inbounds %"class.v8::internal::compiler::TopTierRegisterAllocationData", %"class.v8::internal::compiler::TopTierRegisterAllocationData"* %34, i64 0, i32 5
  %36 = load %"class.v8::internal::RegisterConfiguration"*, %"class.v8::internal::RegisterConfiguration"** %35, align 8
  %37 = getelementptr inbounds %"class.v8::internal::RegisterConfiguration", %"class.v8::internal::RegisterConfiguration"* %36, i64 0, i32 16, i64 0
  br label %39

38:                                               ; preds = %5
  tail call void (i8*, ...) @_Z8V8_FatalPKcz(i8* getelementptr inbounds ([17 x i8], [17 x i8]* @.str, i64 0, i64 0)) #17
  unreachable

39:                                               ; preds = %22, %6
  %40 = phi i32* [ %37, %22 ], [ %21, %6 ]
  store i32* %40, i32** %4, align 8
  ret void
}

; Function Attrs: nounwind ssp uwtable
define hidden void @_ZN2v88internal8compiler19LinearScanAllocator25FindFreeRegistersForRangeEPNS1_9LiveRangeENS0_6VectorINS1_16LifetimePositionEEE(%"class.v8::internal::compiler::LinearScanAllocator"* nocapture readonly, %"class.v8::internal::compiler::LiveRange"* nocapture readonly, %"class.v8::internal::compiler::LifetimePosition"*, i64) local_unnamed_addr #0 align 2 {
  %5 = alloca i32, align 4
  %6 = getelementptr inbounds %"class.v8::internal::compiler::LinearScanAllocator", %"class.v8::internal::compiler::LinearScanAllocator"* %0, i64 0, i32 0, i32 2
  %7 = load i32, i32* %6, align 4
  %8 = icmp sgt i32 %7, 0
  br i1 %8, label %9, label %83

9:                                                ; preds = %4
  %10 = zext i32 %7 to i64
  %11 = icmp ult i32 %7, 8
  br i1 %11, label %12, label %14

12:                                               ; preds = %81, %9
  %13 = phi i64 [ 0, %9 ], [ %15, %81 ]
  br label %92

14:                                               ; preds = %9
  %15 = and i64 %10, 4294967288
  %16 = add nsw i64 %15, -8
  %17 = lshr exact i64 %16, 3
  %18 = add nuw nsw i64 %17, 1
  %19 = and i64 %18, 7
  %20 = icmp ult i64 %16, 56
  br i1 %20, label %68, label %21

21:                                               ; preds = %14
  %22 = sub nsw i64 %18, %19
  br label %23

23:                                               ; preds = %23, %21
  %24 = phi i64 [ 0, %21 ], [ %65, %23 ]
  %25 = phi i64 [ %22, %21 ], [ %66, %23 ]
  %26 = getelementptr inbounds %"class.v8::internal::compiler::LifetimePosition", %"class.v8::internal::compiler::LifetimePosition"* %2, i64 %24, i32 0
  %27 = bitcast i32* %26 to <4 x i32>*
  store <4 x i32> <i32 2147483647, i32 2147483647, i32 2147483647, i32 2147483647>, <4 x i32>* %27, align 4
  %28 = getelementptr inbounds i32, i32* %26, i64 4
  %29 = bitcast i32* %28 to <4 x i32>*
  store <4 x i32> <i32 2147483647, i32 2147483647, i32 2147483647, i32 2147483647>, <4 x i32>* %29, align 4
  %30 = or i64 %24, 8
  %31 = getelementptr inbounds %"class.v8::internal::compiler::LifetimePosition", %"class.v8::internal::compiler::LifetimePosition"* %2, i64 %30, i32 0
  %32 = bitcast i32* %31 to <4 x i32>*
  store <4 x i32> <i32 2147483647, i32 2147483647, i32 2147483647, i32 2147483647>, <4 x i32>* %32, align 4
  %33 = getelementptr inbounds i32, i32* %31, i64 4
  %34 = bitcast i32* %33 to <4 x i32>*
  store <4 x i32> <i32 2147483647, i32 2147483647, i32 2147483647, i32 2147483647>, <4 x i32>* %34, align 4
  %35 = or i64 %24, 16
  %36 = getelementptr inbounds %"class.v8::internal::compiler::LifetimePosition", %"class.v8::internal::compiler::LifetimePosition"* %2, i64 %35, i32 0
  %37 = bitcast i32* %36 to <4 x i32>*
  store <4 x i32> <i32 2147483647, i32 2147483647, i32 2147483647, i32 2147483647>, <4 x i32>* %37, align 4
  %38 = getelementptr inbounds i32, i32* %36, i64 4
  %39 = bitcast i32* %38 to <4 x i32>*
  store <4 x i32> <i32 2147483647, i32 2147483647, i32 2147483647, i32 2147483647>, <4 x i32>* %39, align 4
  %40 = or i64 %24, 24
  %41 = getelementptr inbounds %"class.v8::internal::compiler::LifetimePosition", %"class.v8::internal::compiler::LifetimePosition"* %2, i64 %40, i32 0
  %42 = bitcast i32* %41 to <4 x i32>*
  store <4 x i32> <i32 2147483647, i32 2147483647, i32 2147483647, i32 2147483647>, <4 x i32>* %42, align 4
  %43 = getelementptr inbounds i32, i32* %41, i64 4
  %44 = bitcast i32* %43 to <4 x i32>*
  store <4 x i32> <i32 2147483647, i32 2147483647, i32 2147483647, i32 2147483647>, <4 x i32>* %44, align 4
  %45 = or i64 %24, 32
  %46 = getelementptr inbounds %"class.v8::internal::compiler::LifetimePosition", %"class.v8::internal::compiler::LifetimePosition"* %2, i64 %45, i32 0
  %47 = bitcast i32* %46 to <4 x i32>*
  store <4 x i32> <i32 2147483647, i32 2147483647, i32 2147483647, i32 2147483647>, <4 x i32>* %47, align 4
  %48 = getelementptr inbounds i32, i32* %46, i64 4
  %49 = bitcast i32* %48 to <4 x i32>*
  store <4 x i32> <i32 2147483647, i32 2147483647, i32 2147483647, i32 2147483647>, <4 x i32>* %49, align 4
  %50 = or i64 %24, 40
  %51 = getelementptr inbounds %"class.v8::internal::compiler::LifetimePosition", %"class.v8::internal::compiler::LifetimePosition"* %2, i64 %50, i32 0
  %52 = bitcast i32* %51 to <4 x i32>*
  store <4 x i32> <i32 2147483647, i32 2147483647, i32 2147483647, i32 2147483647>, <4 x i32>* %52, align 4
  %53 = getelementptr inbounds i32, i32* %51, i64 4
  %54 = bitcast i32* %53 to <4 x i32>*
  store <4 x i32> <i32 2147483647, i32 2147483647, i32 2147483647, i32 2147483647>, <4 x i32>* %54, align 4
  %55 = or i64 %24, 48
  %56 = getelementptr inbounds %"class.v8::internal::compiler::LifetimePosition", %"class.v8::internal::compiler::LifetimePosition"* %2, i64 %55, i32 0
  %57 = bitcast i32* %56 to <4 x i32>*
  store <4 x i32> <i32 2147483647, i32 2147483647, i32 2147483647, i32 2147483647>, <4 x i32>* %57, align 4
  %58 = getelementptr inbounds i32, i32* %56, i64 4
  %59 = bitcast i32* %58 to <4 x i32>*
  store <4 x i32> <i32 2147483647, i32 2147483647, i32 2147483647, i32 2147483647>, <4 x i32>* %59, align 4
  %60 = or i64 %24, 56
  %61 = getelementptr inbounds %"class.v8::internal::compiler::LifetimePosition", %"class.v8::internal::compiler::LifetimePosition"* %2, i64 %60, i32 0
  %62 = bitcast i32* %61 to <4 x i32>*
  store <4 x i32> <i32 2147483647, i32 2147483647, i32 2147483647, i32 2147483647>, <4 x i32>* %62, align 4
  %63 = getelementptr inbounds i32, i32* %61, i64 4
  %64 = bitcast i32* %63 to <4 x i32>*
  store <4 x i32> <i32 2147483647, i32 2147483647, i32 2147483647, i32 2147483647>, <4 x i32>* %64, align 4
  %65 = add i64 %24, 64
  %66 = add i64 %25, -8
  %67 = icmp eq i64 %66, 0
  br i1 %67, label %68, label %23, !llvm.loop !172

68:                                               ; preds = %23, %14
  %69 = phi i64 [ 0, %14 ], [ %65, %23 ]
  %70 = icmp eq i64 %19, 0
  br i1 %70, label %81, label %71

71:                                               ; preds = %68, %71
  %72 = phi i64 [ %78, %71 ], [ %69, %68 ]
  %73 = phi i64 [ %79, %71 ], [ %19, %68 ]
  %74 = getelementptr inbounds %"class.v8::internal::compiler::LifetimePosition", %"class.v8::internal::compiler::LifetimePosition"* %2, i64 %72, i32 0
  %75 = bitcast i32* %74 to <4 x i32>*
  store <4 x i32> <i32 2147483647, i32 2147483647, i32 2147483647, i32 2147483647>, <4 x i32>* %75, align 4
  %76 = getelementptr inbounds i32, i32* %74, i64 4
  %77 = bitcast i32* %76 to <4 x i32>*
  store <4 x i32> <i32 2147483647, i32 2147483647, i32 2147483647, i32 2147483647>, <4 x i32>* %77, align 4
  %78 = add i64 %72, 8
  %79 = add i64 %73, -1
  %80 = icmp eq i64 %79, 0
  br i1 %80, label %81, label %71, !llvm.loop !173

81:                                               ; preds = %71, %68
  %82 = icmp eq i64 %15, %10
  br i1 %82, label %83, label %12

83:                                               ; preds = %92, %81, %4
  %84 = getelementptr inbounds %"class.v8::internal::compiler::LinearScanAllocator", %"class.v8::internal::compiler::LinearScanAllocator"* %0, i64 0, i32 2, i32 0, i32 0, i32 0
  %85 = load %"class.v8::internal::compiler::LiveRange"**, %"class.v8::internal::compiler::LiveRange"*** %84, align 8
  %86 = getelementptr inbounds %"class.v8::internal::compiler::LinearScanAllocator", %"class.v8::internal::compiler::LinearScanAllocator"* %0, i64 0, i32 2, i32 0, i32 0, i32 1
  %87 = load %"class.v8::internal::compiler::LiveRange"**, %"class.v8::internal::compiler::LiveRange"*** %86, align 8
  %88 = icmp eq %"class.v8::internal::compiler::LiveRange"** %85, %87
  br i1 %88, label %97, label %89

89:                                               ; preds = %83
  %90 = getelementptr inbounds %"class.v8::internal::compiler::LinearScanAllocator", %"class.v8::internal::compiler::LinearScanAllocator"* %0, i64 0, i32 0, i32 0
  %91 = getelementptr inbounds %"class.v8::internal::compiler::LinearScanAllocator", %"class.v8::internal::compiler::LinearScanAllocator"* %0, i64 0, i32 0, i32 1
  br label %107

92:                                               ; preds = %12, %92
  %93 = phi i64 [ %95, %92 ], [ %13, %12 ]
  %94 = getelementptr inbounds %"class.v8::internal::compiler::LifetimePosition", %"class.v8::internal::compiler::LifetimePosition"* %2, i64 %93, i32 0
  store i32 2147483647, i32* %94, align 4
  %95 = add nuw nsw i64 %93, 1
  %96 = icmp eq i64 %95, %10
  br i1 %96, label %83, label %92, !llvm.loop !174

97:                                               ; preds = %135, %83
  br i1 %8, label %98, label %138

98:                                               ; preds = %97
  %99 = getelementptr inbounds %"class.v8::internal::compiler::LinearScanAllocator", %"class.v8::internal::compiler::LinearScanAllocator"* %0, i64 0, i32 3, i32 0, i32 0, i32 0
  %100 = getelementptr inbounds %"class.v8::internal::compiler::LiveRange", %"class.v8::internal::compiler::LiveRange"* %1, i64 0, i32 2
  %101 = bitcast i32* %5 to i8*
  %102 = getelementptr inbounds %"class.v8::internal::compiler::LiveRange", %"class.v8::internal::compiler::LiveRange"* %1, i64 0, i32 3
  %103 = bitcast i32* %5 to %"class.v8::internal::compiler::LifetimePosition"*
  %104 = getelementptr inbounds %"class.v8::internal::compiler::LinearScanAllocator", %"class.v8::internal::compiler::LinearScanAllocator"* %0, i64 0, i32 0, i32 0
  %105 = getelementptr inbounds %"class.v8::internal::compiler::LinearScanAllocator", %"class.v8::internal::compiler::LinearScanAllocator"* %0, i64 0, i32 0, i32 1
  %106 = zext i32 %7 to i64
  br label %139

107:                                              ; preds = %89, %135
  %108 = phi %"class.v8::internal::compiler::LiveRange"** [ %85, %89 ], [ %136, %135 ]
  %109 = load %"class.v8::internal::compiler::LiveRange"*, %"class.v8::internal::compiler::LiveRange"** %108, align 8
  %110 = getelementptr inbounds %"class.v8::internal::compiler::LiveRange", %"class.v8::internal::compiler::LiveRange"* %109, i64 0, i32 1
  %111 = load i32, i32* %110, align 4
  %112 = lshr i32 %111, 7
  %113 = and i32 %112, 63
  %114 = zext i32 %113 to i64
  %115 = getelementptr inbounds %"class.v8::internal::compiler::LifetimePosition", %"class.v8::internal::compiler::LifetimePosition"* %2, i64 %114, i32 0
  store i32 0, i32* %115, align 4
  %116 = load %"class.v8::internal::compiler::TopTierRegisterAllocationData"*, %"class.v8::internal::compiler::TopTierRegisterAllocationData"** %90, align 8
  %117 = getelementptr inbounds %"class.v8::internal::compiler::TopTierRegisterAllocationData", %"class.v8::internal::compiler::TopTierRegisterAllocationData"* %116, i64 0, i32 23, i32 0
  %118 = load i32, i32* %117, align 4
  %119 = and i32 %118, 1
  %120 = icmp eq i32 %119, 0
  br i1 %120, label %135, label %121

121:                                              ; preds = %107
  %122 = icmp eq i32 %113, 32
  br i1 %122, label %129, label %123

123:                                              ; preds = %121
  %124 = load i32, i32* %91, align 8
  %125 = icmp eq i32 %124, 0
  %126 = select i1 %125, [16 x i8*]* @_ZZN2v88internal12RegisterNameENS0_8RegisterEE5Names, [16 x i8*]* @_ZZN2v88internal12RegisterNameENS0_11XMMRegisterEE5Names
  %127 = getelementptr inbounds [16 x i8*], [16 x i8*]* %126, i64 0, i64 %114
  %128 = load i8*, i8** %127, align 8
  br label %129

129:                                              ; preds = %123, %121
  %130 = phi i8* [ getelementptr inbounds ([11 x i8], [11 x i8]* @.str.58, i64 0, i64 0), %121 ], [ %128, %123 ]
  %131 = getelementptr inbounds %"class.v8::internal::compiler::LiveRange", %"class.v8::internal::compiler::LiveRange"* %109, i64 0, i32 5
  %132 = load %"class.v8::internal::compiler::TopLevelLiveRange"*, %"class.v8::internal::compiler::TopLevelLiveRange"** %131, align 8
  %133 = getelementptr inbounds %"class.v8::internal::compiler::TopLevelLiveRange", %"class.v8::internal::compiler::TopLevelLiveRange"* %132, i64 0, i32 1
  %134 = load i32, i32* %133, align 4
  tail call void (i8*, ...) @_ZN2v88internal6PrintFEPKcz(i8* getelementptr inbounds ([48 x i8], [48 x i8]* @.str.85, i64 0, i64 0), i8* %130, i32 0, i32 %134) #16
  br label %135

135:                                              ; preds = %107, %129
  %136 = getelementptr inbounds %"class.v8::internal::compiler::LiveRange"*, %"class.v8::internal::compiler::LiveRange"** %108, i64 1
  %137 = icmp eq %"class.v8::internal::compiler::LiveRange"** %136, %87
  br i1 %137, label %97, label %107

138:                                              ; preds = %306, %97
  ret void

139:                                              ; preds = %306, %98
  %140 = phi i64 [ 0, %98 ], [ %307, %306 ]
  %141 = load %"class.v8::internal::ZoneMultiset.1344"*, %"class.v8::internal::ZoneMultiset.1344"** %99, align 8
  %142 = getelementptr inbounds %"class.v8::internal::ZoneMultiset.1344", %"class.v8::internal::ZoneMultiset.1344"* %141, i64 %140, i32 0, i32 0, i32 0
  %143 = load %"class.std::__1::__tree_end_node"*, %"class.std::__1::__tree_end_node"** %142, align 8
  %144 = getelementptr inbounds %"class.v8::internal::ZoneMultiset.1344", %"class.v8::internal::ZoneMultiset.1344"* %141, i64 %140, i32 0, i32 0, i32 1, i32 0, i32 0
  %145 = icmp eq %"class.std::__1::__tree_end_node"* %143, %144
  br i1 %145, label %306, label %146

146:                                              ; preds = %139
  %147 = getelementptr inbounds %"class.v8::internal::compiler::LifetimePosition", %"class.v8::internal::compiler::LifetimePosition"* %2, i64 %140
  %148 = getelementptr inbounds %"class.v8::internal::compiler::LifetimePosition", %"class.v8::internal::compiler::LifetimePosition"* %147, i64 0, i32 0
  %149 = icmp eq i64 %140, 32
  %150 = getelementptr inbounds [16 x i8*], [16 x i8*]* @_ZZN2v88internal12RegisterNameENS0_11XMMRegisterEE5Names, i64 0, i64 %140
  %151 = getelementptr inbounds [16 x i8*], [16 x i8*]* @_ZZN2v88internal12RegisterNameENS0_8RegisterEE5Names, i64 0, i64 %140
  br label %152

152:                                              ; preds = %146, %303
  %153 = phi %"class.std::__1::__tree_end_node"* [ %143, %146 ], [ %304, %303 ]
  %154 = getelementptr inbounds %"class.std::__1::__tree_end_node", %"class.std::__1::__tree_end_node"* %153, i64 4
  %155 = bitcast %"class.std::__1::__tree_end_node"* %154 to %"class.v8::internal::compiler::LiveRange"**
  %156 = load %"class.v8::internal::compiler::LiveRange"*, %"class.v8::internal::compiler::LiveRange"** %155, align 8
  %157 = getelementptr inbounds %"class.v8::internal::compiler::LiveRange", %"class.v8::internal::compiler::LiveRange"* %156, i64 0, i32 1
  %158 = load i32, i32* %157, align 4
  %159 = lshr i32 %158, 7
  %160 = and i32 %159, 63
  %161 = zext i32 %160 to i64
  %162 = icmp eq i64 %140, %161
  br i1 %162, label %164, label %163, !prof !80

163:                                              ; preds = %152
  tail call void (i8*, ...) @_Z8V8_FatalPKcz(i8* getelementptr inbounds ([18 x i8], [18 x i8]* @.str.1, i64 0, i64 0), i8* getelementptr inbounds ([45 x i8], [45 x i8]* @.str.86, i64 0, i64 0)) #17
  unreachable

164:                                              ; preds = %152
  %165 = getelementptr inbounds %"class.v8::internal::compiler::LiveRange", %"class.v8::internal::compiler::LiveRange"* %156, i64 0, i32 11, i32 0
  %166 = load i32, i32* %165, align 8
  %167 = load i32, i32* %148, align 4
  %168 = icmp sgt i32 %167, %166
  br i1 %168, label %169, label %306

169:                                              ; preds = %164
  %170 = load %"class.v8::internal::compiler::UseInterval"*, %"class.v8::internal::compiler::UseInterval"** %100, align 8
  %171 = getelementptr inbounds %"class.v8::internal::compiler::UseInterval", %"class.v8::internal::compiler::UseInterval"* %170, i64 0, i32 1, i32 0
  %172 = load i32, i32* %171, align 4
  %173 = icmp sgt i32 %172, %166
  br i1 %173, label %174, label %306

174:                                              ; preds = %169
  call void @llvm.lifetime.start.p0i8(i64 4, i8* nonnull %101)
  %175 = load %"class.v8::internal::compiler::UseInterval"*, %"class.v8::internal::compiler::UseInterval"** %102, align 8
  %176 = icmp eq %"class.v8::internal::compiler::UseInterval"* %175, null
  br i1 %176, label %255, label %177

177:                                              ; preds = %174
  %178 = getelementptr inbounds %"class.v8::internal::compiler::UseInterval", %"class.v8::internal::compiler::UseInterval"* %175, i64 0, i32 0, i32 0
  %179 = load i32, i32* %178, align 8
  %180 = getelementptr inbounds %"class.v8::internal::compiler::LiveRange", %"class.v8::internal::compiler::LiveRange"* %156, i64 0, i32 7
  %181 = load %"class.v8::internal::compiler::UseInterval"*, %"class.v8::internal::compiler::UseInterval"** %180, align 8
  %182 = icmp eq %"class.v8::internal::compiler::UseInterval"* %181, null
  br i1 %182, label %183, label %185

183:                                              ; preds = %177
  %184 = getelementptr inbounds %"class.v8::internal::compiler::LiveRange", %"class.v8::internal::compiler::LiveRange"* %156, i64 0, i32 3
  br label %191

185:                                              ; preds = %177
  %186 = getelementptr inbounds %"class.v8::internal::compiler::UseInterval", %"class.v8::internal::compiler::UseInterval"* %181, i64 0, i32 0, i32 0
  %187 = load i32, i32* %186, align 8
  %188 = icmp sgt i32 %187, %179
  br i1 %188, label %189, label %191

189:                                              ; preds = %185
  store %"class.v8::internal::compiler::UseInterval"* null, %"class.v8::internal::compiler::UseInterval"** %180, align 8
  %190 = getelementptr inbounds %"class.v8::internal::compiler::LiveRange", %"class.v8::internal::compiler::LiveRange"* %156, i64 0, i32 3
  br label %191

191:                                              ; preds = %189, %185, %183
  %192 = phi %"class.v8::internal::compiler::UseInterval"* [ null, %183 ], [ null, %189 ], [ %181, %185 ]
  %193 = phi %"class.v8::internal::compiler::UseInterval"** [ %184, %183 ], [ %190, %189 ], [ %180, %185 ]
  %194 = load %"class.v8::internal::compiler::UseInterval"*, %"class.v8::internal::compiler::UseInterval"** %193, align 8
  %195 = icmp eq %"class.v8::internal::compiler::UseInterval"* %194, null
  br i1 %195, label %255, label %196

196:                                              ; preds = %191
  %197 = getelementptr inbounds %"class.v8::internal::compiler::LiveRange", %"class.v8::internal::compiler::LiveRange"* %156, i64 0, i32 2
  br label %198

198:                                              ; preds = %248, %196
  %199 = phi %"class.v8::internal::compiler::UseInterval"* [ %192, %196 ], [ %249, %248 ]
  %200 = phi %"class.v8::internal::compiler::UseInterval"* [ %175, %196 ], [ %251, %248 ]
  %201 = phi %"class.v8::internal::compiler::UseInterval"* [ %194, %196 ], [ %250, %248 ]
  %202 = getelementptr inbounds %"class.v8::internal::compiler::UseInterval", %"class.v8::internal::compiler::UseInterval"* %201, i64 0, i32 0, i32 0
  %203 = load i32, i32* %202, align 8
  %204 = load %"class.v8::internal::compiler::UseInterval"*, %"class.v8::internal::compiler::UseInterval"** %100, align 8
  %205 = getelementptr inbounds %"class.v8::internal::compiler::UseInterval", %"class.v8::internal::compiler::UseInterval"* %204, i64 0, i32 1, i32 0
  %206 = load i32, i32* %205, align 4
  %207 = icmp sgt i32 %203, %206
  br i1 %207, label %255, label %208

208:                                              ; preds = %198
  %209 = getelementptr inbounds %"class.v8::internal::compiler::UseInterval", %"class.v8::internal::compiler::UseInterval"* %200, i64 0, i32 0, i32 0
  %210 = load i32, i32* %209, align 8
  %211 = load %"class.v8::internal::compiler::UseInterval"*, %"class.v8::internal::compiler::UseInterval"** %197, align 8
  %212 = getelementptr inbounds %"class.v8::internal::compiler::UseInterval", %"class.v8::internal::compiler::UseInterval"* %211, i64 0, i32 1, i32 0
  %213 = load i32, i32* %212, align 4
  %214 = icmp sgt i32 %210, %213
  br i1 %214, label %255, label %215

215:                                              ; preds = %208
  %216 = icmp slt i32 %210, %203
  %217 = select i1 %216, i32 %203, i32 %210
  %218 = select i1 %216, %"class.v8::internal::compiler::UseInterval"* %200, %"class.v8::internal::compiler::UseInterval"* %201
  %219 = getelementptr inbounds %"class.v8::internal::compiler::UseInterval", %"class.v8::internal::compiler::UseInterval"* %218, i64 0, i32 1, i32 0
  %220 = load i32, i32* %219, align 4
  %221 = icmp slt i32 %217, %220
  %222 = icmp ne i32 %217, -1
  %223 = and i1 %222, %221
  br i1 %223, label %256, label %224

224:                                              ; preds = %215
  %225 = icmp slt i32 %203, %210
  br i1 %225, label %226, label %245

226:                                              ; preds = %224
  %227 = getelementptr inbounds %"class.v8::internal::compiler::UseInterval", %"class.v8::internal::compiler::UseInterval"* %201, i64 0, i32 2
  %228 = load %"class.v8::internal::compiler::UseInterval"*, %"class.v8::internal::compiler::UseInterval"** %227, align 8
  %229 = icmp eq %"class.v8::internal::compiler::UseInterval"* %228, null
  br i1 %229, label %255, label %230

230:                                              ; preds = %226
  %231 = getelementptr inbounds %"class.v8::internal::compiler::UseInterval", %"class.v8::internal::compiler::UseInterval"* %228, i64 0, i32 0, i32 0
  %232 = load i32, i32* %231, align 8
  %233 = icmp sgt i32 %232, %206
  br i1 %233, label %255, label %234

234:                                              ; preds = %230
  %235 = icmp sgt i32 %232, %179
  br i1 %235, label %248, label %236

236:                                              ; preds = %234
  %237 = icmp eq %"class.v8::internal::compiler::UseInterval"* %199, null
  br i1 %237, label %241, label %238

238:                                              ; preds = %236
  %239 = getelementptr inbounds %"class.v8::internal::compiler::UseInterval", %"class.v8::internal::compiler::UseInterval"* %199, i64 0, i32 0, i32 0
  %240 = load i32, i32* %239, align 8
  br label %241

241:                                              ; preds = %238, %236
  %242 = phi i32 [ %240, %238 ], [ -1, %236 ]
  %243 = icmp sgt i32 %232, %242
  br i1 %243, label %244, label %248

244:                                              ; preds = %241
  store %"class.v8::internal::compiler::UseInterval"* %228, %"class.v8::internal::compiler::UseInterval"** %180, align 8
  br label %248

245:                                              ; preds = %224
  %246 = getelementptr inbounds %"class.v8::internal::compiler::UseInterval", %"class.v8::internal::compiler::UseInterval"* %200, i64 0, i32 2
  %247 = load %"class.v8::internal::compiler::UseInterval"*, %"class.v8::internal::compiler::UseInterval"** %246, align 8
  br label %248

248:                                              ; preds = %245, %244, %241, %234
  %249 = phi %"class.v8::internal::compiler::UseInterval"* [ %199, %245 ], [ %199, %234 ], [ %199, %241 ], [ %228, %244 ]
  %250 = phi %"class.v8::internal::compiler::UseInterval"* [ %201, %245 ], [ %228, %234 ], [ %228, %241 ], [ %228, %244 ]
  %251 = phi %"class.v8::internal::compiler::UseInterval"* [ %247, %245 ], [ %200, %234 ], [ %200, %241 ], [ %200, %244 ]
  %252 = icmp ne %"class.v8::internal::compiler::UseInterval"* %250, null
  %253 = icmp ne %"class.v8::internal::compiler::UseInterval"* %251, null
  %254 = and i1 %252, %253
  br i1 %254, label %198, label %255

255:                                              ; preds = %226, %230, %208, %198, %248, %174, %191
  store i32 -1, i32* %5, align 4
  br label %275

256:                                              ; preds = %215
  store i32 %217, i32* %5, align 4
  %257 = load i32, i32* %148, align 4
  %258 = icmp slt i32 %217, %257
  %259 = select i1 %258, %"class.v8::internal::compiler::LifetimePosition"* %103, %"class.v8::internal::compiler::LifetimePosition"* %147
  %260 = getelementptr inbounds %"class.v8::internal::compiler::LifetimePosition", %"class.v8::internal::compiler::LifetimePosition"* %259, i64 0, i32 0
  %261 = load i32, i32* %260, align 4
  store i32 %261, i32* %148, align 4
  %262 = load %"class.v8::internal::compiler::TopTierRegisterAllocationData"*, %"class.v8::internal::compiler::TopTierRegisterAllocationData"** %104, align 8
  %263 = getelementptr inbounds %"class.v8::internal::compiler::TopTierRegisterAllocationData", %"class.v8::internal::compiler::TopTierRegisterAllocationData"* %262, i64 0, i32 23, i32 0
  %264 = load i32, i32* %263, align 4
  %265 = and i32 %264, 1
  %266 = icmp eq i32 %265, 0
  br i1 %266, label %275, label %267

267:                                              ; preds = %256
  br i1 %149, label %273, label %268

268:                                              ; preds = %267
  %269 = load i32, i32* %105, align 8
  %270 = icmp eq i32 %269, 0
  %271 = select i1 %270, i8** %151, i8** %150
  %272 = load i8*, i8** %271, align 8
  br label %273

273:                                              ; preds = %268, %267
  %274 = phi i8* [ getelementptr inbounds ([11 x i8], [11 x i8]* @.str.58, i64 0, i64 0), %267 ], [ %272, %268 ]
  tail call void (i8*, ...) @_ZN2v88internal6PrintFEPKcz(i8* getelementptr inbounds ([38 x i8], [38 x i8]* @.str.87, i64 0, i64 0), i8* %274, i32 %261) #16
  br label %275

275:                                              ; preds = %256, %255, %273
  call void @llvm.lifetime.end.p0i8(i64 4, i8* nonnull %101)
  %276 = getelementptr inbounds %"class.std::__1::__tree_end_node", %"class.std::__1::__tree_end_node"* %153, i64 1, i32 0
  %277 = load %"class.std::__1::__tree_node_base"*, %"class.std::__1::__tree_node_base"** %276, align 8
  %278 = icmp eq %"class.std::__1::__tree_node_base"* %277, null
  br i1 %278, label %279, label %287

279:                                              ; preds = %275
  %280 = bitcast %"class.std::__1::__tree_end_node"* %153 to %"class.std::__1::__tree_node_base"*
  %281 = getelementptr inbounds %"class.std::__1::__tree_end_node", %"class.std::__1::__tree_end_node"* %153, i64 2
  %282 = bitcast %"class.std::__1::__tree_end_node"* %281 to %"class.std::__1::__tree_end_node"**
  %283 = load %"class.std::__1::__tree_end_node"*, %"class.std::__1::__tree_end_node"** %282, align 8
  %284 = getelementptr inbounds %"class.std::__1::__tree_end_node", %"class.std::__1::__tree_end_node"* %283, i64 0, i32 0
  %285 = load %"class.std::__1::__tree_node_base"*, %"class.std::__1::__tree_node_base"** %284, align 8
  %286 = icmp eq %"class.std::__1::__tree_node_base"* %285, %280
  br i1 %286, label %303, label %294

287:                                              ; preds = %275, %287
  %288 = phi %"class.std::__1::__tree_node_base"* [ %290, %287 ], [ %277, %275 ]
  %289 = getelementptr inbounds %"class.std::__1::__tree_node_base", %"class.std::__1::__tree_node_base"* %288, i64 0, i32 0, i32 0
  %290 = load %"class.std::__1::__tree_node_base"*, %"class.std::__1::__tree_node_base"** %289, align 8
  %291 = icmp eq %"class.std::__1::__tree_node_base"* %290, null
  br i1 %291, label %292, label %287

292:                                              ; preds = %287
  %293 = getelementptr inbounds %"class.std::__1::__tree_node_base", %"class.std::__1::__tree_node_base"* %288, i64 0, i32 0
  br label %303

294:                                              ; preds = %279, %294
  %295 = phi %"class.std::__1::__tree_end_node"** [ %298, %294 ], [ %282, %279 ]
  %296 = bitcast %"class.std::__1::__tree_end_node"** %295 to %"class.std::__1::__tree_node_base"**
  %297 = load %"class.std::__1::__tree_node_base"*, %"class.std::__1::__tree_node_base"** %296, align 8
  %298 = getelementptr inbounds %"class.std::__1::__tree_node_base", %"class.std::__1::__tree_node_base"* %297, i64 0, i32 2
  %299 = load %"class.std::__1::__tree_end_node"*, %"class.std::__1::__tree_end_node"** %298, align 8
  %300 = getelementptr inbounds %"class.std::__1::__tree_end_node", %"class.std::__1::__tree_end_node"* %299, i64 0, i32 0
  %301 = load %"class.std::__1::__tree_node_base"*, %"class.std::__1::__tree_node_base"** %300, align 8
  %302 = icmp eq %"class.std::__1::__tree_node_base"* %301, %297
  br i1 %302, label %303, label %294

303:                                              ; preds = %294, %279, %292
  %304 = phi %"class.std::__1::__tree_end_node"* [ %293, %292 ], [ %283, %279 ], [ %299, %294 ]
  %305 = icmp eq %"class.std::__1::__tree_end_node"* %304, %144
  br i1 %305, label %306, label %152

306:                                              ; preds = %303, %164, %169, %139
  %307 = add nuw nsw i64 %140, 1
  %308 = icmp eq i64 %307, %106
  br i1 %308, label %138, label %139
}

; Function Attrs: nounwind ssp uwtable
define hidden zeroext i1 @_ZN2v88internal8compiler19LinearScanAllocator23TryAllocatePreferredRegEPNS1_9LiveRangeERKNS0_6VectorINS1_16LifetimePositionEEE(%"class.v8::internal::compiler::LinearScanAllocator"* nocapture readonly, %"class.v8::internal::compiler::LiveRange"*, %"class.v8::internal::Vector.1438"* nocapture readonly dereferenceable(16)) local_unnamed_addr #0 align 2 {
  %4 = alloca i32, align 4
  %5 = bitcast i32* %4 to i8*
  call void @llvm.lifetime.start.p0i8(i64 4, i8* nonnull %5) #16
  %6 = getelementptr inbounds %"class.v8::internal::compiler::LiveRange", %"class.v8::internal::compiler::LiveRange"* %1, i64 0, i32 1
  %7 = load i32, i32* %6, align 4
  %8 = lshr i32 %7, 22
  %9 = and i32 %8, 63
  %10 = icmp eq i32 %9, 32
  br i1 %10, label %12, label %11

11:                                               ; preds = %3
  store i32 %9, i32* %4, align 4
  br label %24

12:                                               ; preds = %3
  %13 = call %"class.v8::internal::compiler::UsePosition"* @_ZN2v88internal8compiler9LiveRange17FirstHintPositionEPi(%"class.v8::internal::compiler::LiveRange"* %1, i32* nonnull %4)
  %14 = icmp eq %"class.v8::internal::compiler::UsePosition"* %13, null
  br i1 %14, label %15, label %24

15:                                               ; preds = %12
  %16 = getelementptr inbounds %"class.v8::internal::compiler::LiveRange", %"class.v8::internal::compiler::LiveRange"* %1, i64 0, i32 10
  %17 = load %"class.v8::internal::compiler::LiveRangeBundle"*, %"class.v8::internal::compiler::LiveRangeBundle"** %16, align 8
  %18 = icmp eq %"class.v8::internal::compiler::LiveRangeBundle"* %17, null
  br i1 %18, label %109, label %19

19:                                               ; preds = %15
  %20 = getelementptr inbounds %"class.v8::internal::compiler::LiveRangeBundle", %"class.v8::internal::compiler::LiveRangeBundle"* %17, i64 0, i32 3
  %21 = load i32, i32* %20, align 4
  %22 = icmp eq i32 %21, 32
  br i1 %22, label %109, label %23

23:                                               ; preds = %19
  store i32 %21, i32* %4, align 4
  br label %24

24:                                               ; preds = %23, %11, %12
  %25 = getelementptr inbounds %"class.v8::internal::compiler::LinearScanAllocator", %"class.v8::internal::compiler::LinearScanAllocator"* %0, i64 0, i32 0, i32 0
  %26 = load %"class.v8::internal::compiler::TopTierRegisterAllocationData"*, %"class.v8::internal::compiler::TopTierRegisterAllocationData"** %25, align 8
  %27 = getelementptr inbounds %"class.v8::internal::compiler::TopTierRegisterAllocationData", %"class.v8::internal::compiler::TopTierRegisterAllocationData"* %26, i64 0, i32 23, i32 0
  %28 = load i32, i32* %27, align 4
  %29 = and i32 %28, 1
  %30 = icmp eq i32 %29, 0
  %31 = load i32, i32* %4, align 4
  br i1 %30, label %32, label %34

32:                                               ; preds = %24
  %33 = sext i32 %31 to i64
  br label %68

34:                                               ; preds = %24
  %35 = icmp eq i32 %31, 32
  br i1 %35, label %51, label %36

36:                                               ; preds = %34
  %37 = getelementptr inbounds %"class.v8::internal::compiler::LinearScanAllocator", %"class.v8::internal::compiler::LinearScanAllocator"* %0, i64 0, i32 0, i32 1
  %38 = load i32, i32* %37, align 8
  %39 = icmp eq i32 %38, 0
  %40 = icmp eq i32 %31, -1
  br i1 %39, label %41, label %46

41:                                               ; preds = %36
  br i1 %40, label %51, label %42

42:                                               ; preds = %41
  %43 = sext i32 %31 to i64
  %44 = getelementptr inbounds [16 x i8*], [16 x i8*]* @_ZZN2v88internal12RegisterNameENS0_8RegisterEE5Names, i64 0, i64 %43
  %45 = load i8*, i8** %44, align 8
  br label %51

46:                                               ; preds = %36
  br i1 %40, label %51, label %47

47:                                               ; preds = %46
  %48 = sext i32 %31 to i64
  %49 = getelementptr inbounds [16 x i8*], [16 x i8*]* @_ZZN2v88internal12RegisterNameENS0_11XMMRegisterEE5Names, i64 0, i64 %48
  %50 = load i8*, i8** %49, align 8
  br label %51

51:                                               ; preds = %34, %41, %42, %46, %47
  %52 = phi i8* [ getelementptr inbounds ([11 x i8], [11 x i8]* @.str.58, i64 0, i64 0), %34 ], [ %45, %42 ], [ getelementptr inbounds ([8 x i8], [8 x i8]* @.str.123, i64 0, i64 0), %41 ], [ %50, %47 ], [ getelementptr inbounds ([8 x i8], [8 x i8]* @.str.123, i64 0, i64 0), %46 ]
  %53 = sext i32 %31 to i64
  %54 = getelementptr inbounds %"class.v8::internal::Vector.1438", %"class.v8::internal::Vector.1438"* %2, i64 0, i32 0
  %55 = load %"class.v8::internal::compiler::LifetimePosition"*, %"class.v8::internal::compiler::LifetimePosition"** %54, align 8
  %56 = getelementptr inbounds %"class.v8::internal::compiler::LifetimePosition", %"class.v8::internal::compiler::LifetimePosition"* %55, i64 %53, i32 0
  %57 = load i32, i32* %56, align 4
  %58 = getelementptr inbounds %"class.v8::internal::compiler::LiveRange", %"class.v8::internal::compiler::LiveRange"* %1, i64 0, i32 5
  %59 = load %"class.v8::internal::compiler::TopLevelLiveRange"*, %"class.v8::internal::compiler::TopLevelLiveRange"** %58, align 8
  %60 = getelementptr inbounds %"class.v8::internal::compiler::TopLevelLiveRange", %"class.v8::internal::compiler::TopLevelLiveRange"* %59, i64 0, i32 1
  %61 = load i32, i32* %60, align 4
  %62 = getelementptr inbounds %"class.v8::internal::compiler::LiveRange", %"class.v8::internal::compiler::LiveRange"* %1, i64 0, i32 0
  %63 = load i32, i32* %62, align 8
  %64 = getelementptr inbounds %"class.v8::internal::compiler::LiveRange", %"class.v8::internal::compiler::LiveRange"* %1, i64 0, i32 2
  %65 = load %"class.v8::internal::compiler::UseInterval"*, %"class.v8::internal::compiler::UseInterval"** %64, align 8
  %66 = getelementptr inbounds %"class.v8::internal::compiler::UseInterval", %"class.v8::internal::compiler::UseInterval"* %65, i64 0, i32 1, i32 0
  %67 = load i32, i32* %66, align 4
  tail call void (i8*, ...) @_ZN2v88internal6PrintFEPKcz(i8* getelementptr inbounds ([68 x i8], [68 x i8]* @.str.88, i64 0, i64 0), i8* %52, i32 %57, i32 %61, i32 %63, i32 %67) #16
  br label %68

68:                                               ; preds = %32, %51
  %69 = phi i64 [ %33, %32 ], [ %53, %51 ]
  %70 = getelementptr inbounds %"class.v8::internal::Vector.1438", %"class.v8::internal::Vector.1438"* %2, i64 0, i32 0
  %71 = load %"class.v8::internal::compiler::LifetimePosition"*, %"class.v8::internal::compiler::LifetimePosition"** %70, align 8
  %72 = getelementptr inbounds %"class.v8::internal::compiler::LiveRange", %"class.v8::internal::compiler::LiveRange"* %1, i64 0, i32 2
  %73 = load %"class.v8::internal::compiler::UseInterval"*, %"class.v8::internal::compiler::UseInterval"** %72, align 8
  %74 = getelementptr inbounds %"class.v8::internal::compiler::UseInterval", %"class.v8::internal::compiler::UseInterval"* %73, i64 0, i32 1, i32 0
  %75 = load i32, i32* %74, align 4
  %76 = getelementptr inbounds %"class.v8::internal::compiler::LifetimePosition", %"class.v8::internal::compiler::LifetimePosition"* %71, i64 %69, i32 0
  %77 = load i32, i32* %76, align 4
  %78 = icmp slt i32 %77, %75
  br i1 %78, label %109, label %79

79:                                               ; preds = %68
  %80 = load %"class.v8::internal::compiler::TopTierRegisterAllocationData"*, %"class.v8::internal::compiler::TopTierRegisterAllocationData"** %25, align 8
  %81 = getelementptr inbounds %"class.v8::internal::compiler::TopTierRegisterAllocationData", %"class.v8::internal::compiler::TopTierRegisterAllocationData"* %80, i64 0, i32 23, i32 0
  %82 = load i32, i32* %81, align 4
  %83 = and i32 %82, 1
  %84 = icmp eq i32 %83, 0
  br i1 %84, label %108, label %85

85:                                               ; preds = %79
  %86 = icmp eq i32 %31, 32
  br i1 %86, label %100, label %87

87:                                               ; preds = %85
  %88 = getelementptr inbounds %"class.v8::internal::compiler::LinearScanAllocator", %"class.v8::internal::compiler::LinearScanAllocator"* %0, i64 0, i32 0, i32 1
  %89 = load i32, i32* %88, align 8
  %90 = icmp eq i32 %89, 0
  %91 = icmp eq i32 %31, -1
  br i1 %90, label %92, label %96

92:                                               ; preds = %87
  br i1 %91, label %100, label %93

93:                                               ; preds = %92
  %94 = getelementptr inbounds [16 x i8*], [16 x i8*]* @_ZZN2v88internal12RegisterNameENS0_8RegisterEE5Names, i64 0, i64 %69
  %95 = load i8*, i8** %94, align 8
  br label %100

96:                                               ; preds = %87
  br i1 %91, label %100, label %97

97:                                               ; preds = %96
  %98 = getelementptr inbounds [16 x i8*], [16 x i8*]* @_ZZN2v88internal12RegisterNameENS0_11XMMRegisterEE5Names, i64 0, i64 %69
  %99 = load i8*, i8** %98, align 8
  br label %100

100:                                              ; preds = %85, %92, %93, %96, %97
  %101 = phi i8* [ getelementptr inbounds ([11 x i8], [11 x i8]* @.str.58, i64 0, i64 0), %85 ], [ %95, %93 ], [ getelementptr inbounds ([8 x i8], [8 x i8]* @.str.123, i64 0, i64 0), %92 ], [ %99, %97 ], [ getelementptr inbounds ([8 x i8], [8 x i8]* @.str.123, i64 0, i64 0), %96 ]
  %102 = getelementptr inbounds %"class.v8::internal::compiler::LiveRange", %"class.v8::internal::compiler::LiveRange"* %1, i64 0, i32 5
  %103 = load %"class.v8::internal::compiler::TopLevelLiveRange"*, %"class.v8::internal::compiler::TopLevelLiveRange"** %102, align 8
  %104 = getelementptr inbounds %"class.v8::internal::compiler::TopLevelLiveRange", %"class.v8::internal::compiler::TopLevelLiveRange"* %103, i64 0, i32 1
  %105 = load i32, i32* %104, align 4
  %106 = getelementptr inbounds %"class.v8::internal::compiler::LiveRange", %"class.v8::internal::compiler::LiveRange"* %1, i64 0, i32 0
  %107 = load i32, i32* %106, align 8
  tail call void (i8*, ...) @_ZN2v88internal6PrintFEPKcz(i8* getelementptr inbounds ([48 x i8], [48 x i8]* @.str.89, i64 0, i64 0), i8* %101, i32 %105, i32 %107) #16
  br label %108

108:                                              ; preds = %79, %100
  tail call void @_ZN2v88internal8compiler19LinearScanAllocator28SetLiveRangeAssignedRegisterEPNS1_9LiveRangeEi(%"class.v8::internal::compiler::LinearScanAllocator"* %0, %"class.v8::internal::compiler::LiveRange"* %1, i32 %31)
  br label %109

109:                                              ; preds = %68, %15, %19, %108
  %110 = phi i1 [ true, %108 ], [ false, %68 ], [ false, %19 ], [ false, %15 ]
  call void @llvm.lifetime.end.p0i8(i64 4, i8* nonnull %5) #16
  ret i1 %110
}

; Function Attrs: nounwind ssp uwtable
define hidden zeroext i1 @_ZN2v88internal8compiler19LinearScanAllocator18TryAllocateFreeRegEPNS1_9LiveRangeERKNS0_6VectorINS1_16LifetimePositionEEE(%"class.v8::internal::compiler::LinearScanAllocator"*, %"class.v8::internal::compiler::LiveRange"*, %"class.v8::internal::Vector.1438"* nocapture readonly dereferenceable(16)) local_unnamed_addr #0 align 2 {
  %4 = alloca %"class.v8::internal::compiler::LiveRange"*, align 8
  %5 = alloca i32, align 4
  %6 = bitcast i32* %5 to i8*
  call void @llvm.lifetime.start.p0i8(i64 4, i8* nonnull %6) #16
  store i32 32, i32* %5, align 4
  %7 = getelementptr inbounds %"class.v8::internal::compiler::LiveRange", %"class.v8::internal::compiler::LiveRange"* %1, i64 0, i32 1
  %8 = load i32, i32* %7, align 4
  %9 = lshr i32 %8, 22
  %10 = and i32 %9, 63
  %11 = icmp eq i32 %10, 32
  br i1 %11, label %13, label %12

12:                                               ; preds = %3
  store i32 %10, i32* %5, align 4
  br label %25

13:                                               ; preds = %3
  %14 = call %"class.v8::internal::compiler::UsePosition"* @_ZN2v88internal8compiler9LiveRange17FirstHintPositionEPi(%"class.v8::internal::compiler::LiveRange"* %1, i32* nonnull %5)
  %15 = icmp eq %"class.v8::internal::compiler::UsePosition"* %14, null
  br i1 %15, label %16, label %25

16:                                               ; preds = %13
  %17 = getelementptr inbounds %"class.v8::internal::compiler::LiveRange", %"class.v8::internal::compiler::LiveRange"* %1, i64 0, i32 10
  %18 = load %"class.v8::internal::compiler::LiveRangeBundle"*, %"class.v8::internal::compiler::LiveRangeBundle"** %17, align 8
  %19 = icmp eq %"class.v8::internal::compiler::LiveRangeBundle"* %18, null
  br i1 %19, label %25, label %20

20:                                               ; preds = %16
  %21 = getelementptr inbounds %"class.v8::internal::compiler::LiveRangeBundle", %"class.v8::internal::compiler::LiveRangeBundle"* %18, i64 0, i32 3
  %22 = load i32, i32* %21, align 4
  %23 = icmp eq i32 %22, 32
  br i1 %23, label %25, label %24

24:                                               ; preds = %20
  store i32 %22, i32* %5, align 4
  br label %25

25:                                               ; preds = %24, %20, %16, %12, %13
  %26 = load i32, i32* %5, align 4
  %27 = tail call i32 @_ZN2v88internal8compiler19LinearScanAllocator34PickRegisterThatIsAvailableLongestEPNS1_9LiveRangeEiRKNS0_6VectorINS1_16LifetimePositionEEE(%"class.v8::internal::compiler::LinearScanAllocator"* %0, %"class.v8::internal::compiler::LiveRange"* %1, i32 %26, %"class.v8::internal::Vector.1438"* dereferenceable(16) %2)
  %28 = sext i32 %27 to i64
  %29 = getelementptr inbounds %"class.v8::internal::Vector.1438", %"class.v8::internal::Vector.1438"* %2, i64 0, i32 0
  %30 = load %"class.v8::internal::compiler::LifetimePosition"*, %"class.v8::internal::compiler::LifetimePosition"** %29, align 8
  %31 = getelementptr inbounds %"class.v8::internal::compiler::LifetimePosition", %"class.v8::internal::compiler::LifetimePosition"* %30, i64 %28, i32 0
  %32 = load i32, i32* %31, align 4
  %33 = getelementptr inbounds %"class.v8::internal::compiler::LiveRange", %"class.v8::internal::compiler::LiveRange"* %1, i64 0, i32 3
  %34 = load %"class.v8::internal::compiler::UseInterval"*, %"class.v8::internal::compiler::UseInterval"** %33, align 8
  %35 = getelementptr inbounds %"class.v8::internal::compiler::UseInterval", %"class.v8::internal::compiler::UseInterval"* %34, i64 0, i32 0, i32 0
  %36 = load i32, i32* %35, align 8
  %37 = icmp sgt i32 %32, %36
  br i1 %37, label %38, label %110

38:                                               ; preds = %25
  %39 = getelementptr inbounds %"class.v8::internal::compiler::LiveRange", %"class.v8::internal::compiler::LiveRange"* %1, i64 0, i32 2
  %40 = load %"class.v8::internal::compiler::UseInterval"*, %"class.v8::internal::compiler::UseInterval"** %39, align 8
  %41 = getelementptr inbounds %"class.v8::internal::compiler::UseInterval", %"class.v8::internal::compiler::UseInterval"* %40, i64 0, i32 1, i32 0
  %42 = load i32, i32* %41, align 4
  %43 = icmp slt i32 %32, %42
  br i1 %43, label %44, label %79

44:                                               ; preds = %38
  %45 = and i32 %32, 2
  %46 = icmp eq i32 %45, 0
  %47 = and i32 %32, -4
  %48 = or i32 %47, 1
  %49 = select i1 %46, i32 %32, i32 %48
  %50 = icmp sgt i32 %49, %36
  br i1 %50, label %51, label %110

51:                                               ; preds = %44
  %52 = bitcast %"class.v8::internal::compiler::LinearScanAllocator"* %0 to %"class.v8::internal::compiler::RegisterAllocator"*
  %53 = tail call %"class.v8::internal::compiler::LiveRange"* @_ZN2v88internal8compiler17RegisterAllocator12SplitRangeAtEPNS1_9LiveRangeENS1_16LifetimePositionE(%"class.v8::internal::compiler::RegisterAllocator"* %52, %"class.v8::internal::compiler::LiveRange"* %1, i32 %49)
  %54 = bitcast %"class.v8::internal::compiler::LiveRange"** %4 to i8*
  call void @llvm.lifetime.start.p0i8(i64 8, i8* nonnull %54)
  store %"class.v8::internal::compiler::LiveRange"* %53, %"class.v8::internal::compiler::LiveRange"** %4, align 8
  %55 = icmp eq %"class.v8::internal::compiler::LiveRange"* %53, null
  br i1 %55, label %77, label %56

56:                                               ; preds = %51
  %57 = getelementptr inbounds %"class.v8::internal::compiler::LiveRange", %"class.v8::internal::compiler::LiveRange"* %53, i64 0, i32 3
  %58 = load %"class.v8::internal::compiler::UseInterval"*, %"class.v8::internal::compiler::UseInterval"** %57, align 8
  %59 = icmp eq %"class.v8::internal::compiler::UseInterval"* %58, null
  br i1 %59, label %77, label %60

60:                                               ; preds = %56
  %61 = getelementptr inbounds %"class.v8::internal::compiler::LinearScanAllocator", %"class.v8::internal::compiler::LinearScanAllocator"* %0, i64 0, i32 0, i32 0
  %62 = load %"class.v8::internal::compiler::TopTierRegisterAllocationData"*, %"class.v8::internal::compiler::TopTierRegisterAllocationData"** %61, align 8
  %63 = getelementptr inbounds %"class.v8::internal::compiler::TopTierRegisterAllocationData", %"class.v8::internal::compiler::TopTierRegisterAllocationData"* %62, i64 0, i32 23, i32 0
  %64 = load i32, i32* %63, align 4
  %65 = and i32 %64, 1
  %66 = icmp eq i32 %65, 0
  br i1 %66, label %74, label %67

67:                                               ; preds = %60
  %68 = getelementptr inbounds %"class.v8::internal::compiler::LiveRange", %"class.v8::internal::compiler::LiveRange"* %53, i64 0, i32 5
  %69 = load %"class.v8::internal::compiler::TopLevelLiveRange"*, %"class.v8::internal::compiler::TopLevelLiveRange"** %68, align 8
  %70 = getelementptr inbounds %"class.v8::internal::compiler::TopLevelLiveRange", %"class.v8::internal::compiler::TopLevelLiveRange"* %69, i64 0, i32 1
  %71 = load i32, i32* %70, align 4
  %72 = getelementptr inbounds %"class.v8::internal::compiler::LiveRange", %"class.v8::internal::compiler::LiveRange"* %53, i64 0, i32 0
  %73 = load i32, i32* %72, align 8
  tail call void (i8*, ...) @_ZN2v88internal6PrintFEPKcz(i8* getelementptr inbounds ([35 x i8], [35 x i8]* @.str.80, i64 0, i64 0), i32 %71, i32 %73) #16
  br label %74

74:                                               ; preds = %67, %60
  %75 = getelementptr inbounds %"class.v8::internal::compiler::LinearScanAllocator", %"class.v8::internal::compiler::LinearScanAllocator"* %0, i64 0, i32 1, i32 0, i32 0
  %76 = call %"class.std::__1::__tree_end_node"* @_ZNSt3__16__treeIPN2v88internal8compiler9LiveRangeENS3_19LinearScanAllocator26UnhandledLiveRangeOrderingENS2_13ZoneAllocatorIS5_EEE15__emplace_multiIJRKS5_EEENS_15__tree_iteratorIS5_PNS_11__tree_nodeIS5_PvEElEEDpOT_(%"class.std::__1::__tree.1338"* %75, %"class.v8::internal::compiler::LiveRange"** nonnull dereferenceable(8) %4) #16
  br label %77

77:                                               ; preds = %51, %56, %74
  call void @llvm.lifetime.end.p0i8(i64 8, i8* nonnull %54)
  %78 = call zeroext i1 @_ZN2v88internal8compiler19LinearScanAllocator23TryAllocatePreferredRegEPNS1_9LiveRangeERKNS0_6VectorINS1_16LifetimePositionEEE(%"class.v8::internal::compiler::LinearScanAllocator"* %0, %"class.v8::internal::compiler::LiveRange"* %1, %"class.v8::internal::Vector.1438"* dereferenceable(16) %2)
  br i1 %78, label %110, label %79

79:                                               ; preds = %77, %38
  %80 = getelementptr inbounds %"class.v8::internal::compiler::LinearScanAllocator", %"class.v8::internal::compiler::LinearScanAllocator"* %0, i64 0, i32 0, i32 0
  %81 = load %"class.v8::internal::compiler::TopTierRegisterAllocationData"*, %"class.v8::internal::compiler::TopTierRegisterAllocationData"** %80, align 8
  %82 = getelementptr inbounds %"class.v8::internal::compiler::TopTierRegisterAllocationData", %"class.v8::internal::compiler::TopTierRegisterAllocationData"* %81, i64 0, i32 23, i32 0
  %83 = load i32, i32* %82, align 4
  %84 = and i32 %83, 1
  %85 = icmp eq i32 %84, 0
  br i1 %85, label %109, label %86

86:                                               ; preds = %79
  %87 = icmp eq i32 %27, 32
  br i1 %87, label %101, label %88

88:                                               ; preds = %86
  %89 = getelementptr inbounds %"class.v8::internal::compiler::LinearScanAllocator", %"class.v8::internal::compiler::LinearScanAllocator"* %0, i64 0, i32 0, i32 1
  %90 = load i32, i32* %89, align 8
  %91 = icmp eq i32 %90, 0
  %92 = icmp eq i32 %27, -1
  br i1 %91, label %93, label %97

93:                                               ; preds = %88
  br i1 %92, label %101, label %94

94:                                               ; preds = %93
  %95 = getelementptr inbounds [16 x i8*], [16 x i8*]* @_ZZN2v88internal12RegisterNameENS0_8RegisterEE5Names, i64 0, i64 %28
  %96 = load i8*, i8** %95, align 8
  br label %101

97:                                               ; preds = %88
  br i1 %92, label %101, label %98

98:                                               ; preds = %97
  %99 = getelementptr inbounds [16 x i8*], [16 x i8*]* @_ZZN2v88internal12RegisterNameENS0_11XMMRegisterEE5Names, i64 0, i64 %28
  %100 = load i8*, i8** %99, align 8
  br label %101

101:                                              ; preds = %86, %93, %94, %97, %98
  %102 = phi i8* [ getelementptr inbounds ([11 x i8], [11 x i8]* @.str.58, i64 0, i64 0), %86 ], [ %96, %94 ], [ getelementptr inbounds ([8 x i8], [8 x i8]* @.str.123, i64 0, i64 0), %93 ], [ %100, %98 ], [ getelementptr inbounds ([8 x i8], [8 x i8]* @.str.123, i64 0, i64 0), %97 ]
  %103 = getelementptr inbounds %"class.v8::internal::compiler::LiveRange", %"class.v8::internal::compiler::LiveRange"* %1, i64 0, i32 5
  %104 = load %"class.v8::internal::compiler::TopLevelLiveRange"*, %"class.v8::internal::compiler::TopLevelLiveRange"** %103, align 8
  %105 = getelementptr inbounds %"class.v8::internal::compiler::TopLevelLiveRange", %"class.v8::internal::compiler::TopLevelLiveRange"* %104, i64 0, i32 1
  %106 = load i32, i32* %105, align 4
  %107 = getelementptr inbounds %"class.v8::internal::compiler::LiveRange", %"class.v8::internal::compiler::LiveRange"* %1, i64 0, i32 0
  %108 = load i32, i32* %107, align 8
  call void (i8*, ...) @_ZN2v88internal6PrintFEPKcz(i8* getelementptr inbounds ([43 x i8], [43 x i8]* @.str.91, i64 0, i64 0), i8* %102, i32 %106, i32 %108) #16
  br label %109

109:                                              ; preds = %79, %101
  call void @_ZN2v88internal8compiler19LinearScanAllocator28SetLiveRangeAssignedRegisterEPNS1_9LiveRangeEi(%"class.v8::internal::compiler::LinearScanAllocator"* %0, %"class.v8::internal::compiler::LiveRange"* %1, i32 %27)
  br label %110

110:                                              ; preds = %44, %25, %77, %109
  %111 = phi i1 [ true, %109 ], [ false, %25 ], [ false, %44 ], [ true, %77 ]
  call void @llvm.lifetime.end.p0i8(i64 4, i8* nonnull %6) #16
  ret i1 %111
}

; Function Attrs: nounwind ssp uwtable
define hidden void @_ZN2v88internal8compiler19LinearScanAllocator18AllocateBlockedRegEPNS1_9LiveRangeENS1_29TopTierRegisterAllocationData9SpillModeE(%"class.v8::internal::compiler::LinearScanAllocator"*, %"class.v8::internal::compiler::LiveRange"*, i32) local_unnamed_addr #0 align 2 {
  %4 = alloca %"class.v8::internal::compiler::LiveRange"*, align 8
  %5 = alloca %"class.v8::internal::compiler::LiveRange"*, align 8
  %6 = alloca %"class.v8::internal::EmbeddedVector.1439", align 8
  %7 = alloca %"class.v8::internal::EmbeddedVector.1439", align 8
  %8 = alloca i32, align 4
  %9 = getelementptr inbounds %"class.v8::internal::compiler::LiveRange", %"class.v8::internal::compiler::LiveRange"* %1, i64 0, i32 3
  %10 = load %"class.v8::internal::compiler::UseInterval"*, %"class.v8::internal::compiler::UseInterval"** %9, align 8
  %11 = getelementptr inbounds %"class.v8::internal::compiler::UseInterval", %"class.v8::internal::compiler::UseInterval"* %10, i64 0, i32 0, i32 0
  %12 = load i32, i32* %11, align 8
  %13 = getelementptr inbounds %"class.v8::internal::compiler::LiveRange", %"class.v8::internal::compiler::LiveRange"* %1, i64 0, i32 8
  %14 = load %"class.v8::internal::compiler::UsePosition"*, %"class.v8::internal::compiler::UsePosition"** %13, align 8
  %15 = icmp eq %"class.v8::internal::compiler::UsePosition"* %14, null
  br i1 %15, label %20, label %16

16:                                               ; preds = %3
  %17 = getelementptr inbounds %"class.v8::internal::compiler::UsePosition", %"class.v8::internal::compiler::UsePosition"* %14, i64 0, i32 3, i32 0
  %18 = load i32, i32* %17, align 8
  %19 = icmp sgt i32 %18, %12
  br i1 %19, label %20, label %24

20:                                               ; preds = %16, %3
  %21 = getelementptr inbounds %"class.v8::internal::compiler::LiveRange", %"class.v8::internal::compiler::LiveRange"* %1, i64 0, i32 4
  %22 = load %"class.v8::internal::compiler::UsePosition"*, %"class.v8::internal::compiler::UsePosition"** %21, align 8
  %23 = icmp eq %"class.v8::internal::compiler::UsePosition"* %22, null
  br i1 %23, label %35, label %24

24:                                               ; preds = %20, %16
  %25 = phi %"class.v8::internal::compiler::UsePosition"* [ %14, %16 ], [ %22, %20 ]
  br label %26

26:                                               ; preds = %24, %31
  %27 = phi %"class.v8::internal::compiler::UsePosition"* [ %33, %31 ], [ %25, %24 ]
  %28 = getelementptr inbounds %"class.v8::internal::compiler::UsePosition", %"class.v8::internal::compiler::UsePosition"* %27, i64 0, i32 3, i32 0
  %29 = load i32, i32* %28, align 8
  %30 = icmp slt i32 %29, %12
  br i1 %30, label %31, label %36

31:                                               ; preds = %26
  %32 = getelementptr inbounds %"class.v8::internal::compiler::UsePosition", %"class.v8::internal::compiler::UsePosition"* %27, i64 0, i32 2
  %33 = load %"class.v8::internal::compiler::UsePosition"*, %"class.v8::internal::compiler::UsePosition"** %32, align 8
  %34 = icmp eq %"class.v8::internal::compiler::UsePosition"* %33, null
  br i1 %34, label %35, label %26

35:                                               ; preds = %31, %20
  store %"class.v8::internal::compiler::UsePosition"* null, %"class.v8::internal::compiler::UsePosition"** %13, align 8
  br label %47

36:                                               ; preds = %26
  store %"class.v8::internal::compiler::UsePosition"* %27, %"class.v8::internal::compiler::UsePosition"** %13, align 8
  br label %37

37:                                               ; preds = %43, %36
  %38 = phi %"class.v8::internal::compiler::UsePosition"* [ %45, %43 ], [ %27, %36 ]
  %39 = getelementptr inbounds %"class.v8::internal::compiler::UsePosition", %"class.v8::internal::compiler::UsePosition"* %38, i64 0, i32 4
  %40 = load i32, i32* %39, align 4
  %41 = and i32 %40, 3
  %42 = icmp eq i32 %41, 2
  br i1 %42, label %79, label %43

43:                                               ; preds = %37
  %44 = getelementptr inbounds %"class.v8::internal::compiler::UsePosition", %"class.v8::internal::compiler::UsePosition"* %38, i64 0, i32 2
  %45 = load %"class.v8::internal::compiler::UsePosition"*, %"class.v8::internal::compiler::UsePosition"** %44, align 8
  %46 = icmp eq %"class.v8::internal::compiler::UsePosition"* %45, null
  br i1 %46, label %47, label %37

47:                                               ; preds = %43, %35
  %48 = bitcast %"class.v8::internal::compiler::LiveRange"** %5 to i8*
  call void @llvm.lifetime.start.p0i8(i64 8, i8* nonnull %48) #16
  store %"class.v8::internal::compiler::LiveRange"* null, %"class.v8::internal::compiler::LiveRange"** %5, align 8
  %49 = bitcast %"class.v8::internal::compiler::LinearScanAllocator"* %0 to %"class.v8::internal::compiler::RegisterAllocator"*
  %50 = load i32, i32* %11, align 8
  %51 = call i32 @_ZN2v88internal8compiler17RegisterAllocator22FindOptimalSpillingPosEPNS1_9LiveRangeENS1_16LifetimePositionENS1_29TopTierRegisterAllocationData9SpillModeEPS4_(%"class.v8::internal::compiler::RegisterAllocator"* %49, %"class.v8::internal::compiler::LiveRange"* %1, i32 %50, i32 %2, %"class.v8::internal::compiler::LiveRange"** nonnull %5)
  %52 = load %"class.v8::internal::compiler::LiveRange"*, %"class.v8::internal::compiler::LiveRange"** %5, align 8
  %53 = icmp eq %"class.v8::internal::compiler::LiveRange"* %52, %1
  br i1 %53, label %78, label %54

54:                                               ; preds = %47
  %55 = getelementptr inbounds %"class.v8::internal::compiler::LiveRange", %"class.v8::internal::compiler::LiveRange"* %52, i64 0, i32 1
  %56 = load i32, i32* %55, align 4
  %57 = and i32 %56, 1
  %58 = icmp eq i32 %57, 0
  br i1 %58, label %59, label %61

59:                                               ; preds = %54
  %60 = tail call %"class.v8::internal::compiler::LiveRange"* @_ZN2v88internal8compiler17RegisterAllocator12SplitRangeAtEPNS1_9LiveRangeENS1_16LifetimePositionE(%"class.v8::internal::compiler::RegisterAllocator"* %49, %"class.v8::internal::compiler::LiveRange"* %52, i32 %51) #16
  tail call void @_ZN2v88internal8compiler17RegisterAllocator5SpillEPNS1_9LiveRangeENS1_29TopTierRegisterAllocationData9SpillModeE(%"class.v8::internal::compiler::RegisterAllocator"* %49, %"class.v8::internal::compiler::LiveRange"* %60, i32 0) #16
  br label %61

61:                                               ; preds = %59, %54
  %62 = getelementptr inbounds %"class.v8::internal::compiler::LiveRange", %"class.v8::internal::compiler::LiveRange"* %52, i64 0, i32 6
  %63 = load %"class.v8::internal::compiler::LiveRange"*, %"class.v8::internal::compiler::LiveRange"** %62, align 8
  %64 = icmp eq %"class.v8::internal::compiler::LiveRange"* %63, %1
  br i1 %64, label %78, label %65

65:                                               ; preds = %61, %74
  %66 = phi %"class.v8::internal::compiler::LiveRange"* [ %76, %74 ], [ %63, %61 ]
  %67 = getelementptr inbounds %"class.v8::internal::compiler::LiveRange", %"class.v8::internal::compiler::LiveRange"* %66, i64 0, i32 1
  %68 = load i32, i32* %67, align 4
  %69 = and i32 %68, 1
  %70 = icmp eq i32 %69, 0
  br i1 %70, label %71, label %74

71:                                               ; preds = %65
  %72 = and i32 %68, -8066
  %73 = or i32 %72, 4097
  store i32 %73, i32* %67, align 4
  br label %74

74:                                               ; preds = %71, %65
  %75 = getelementptr inbounds %"class.v8::internal::compiler::LiveRange", %"class.v8::internal::compiler::LiveRange"* %66, i64 0, i32 6
  %76 = load %"class.v8::internal::compiler::LiveRange"*, %"class.v8::internal::compiler::LiveRange"** %75, align 8
  %77 = icmp eq %"class.v8::internal::compiler::LiveRange"* %76, %1
  br i1 %77, label %78, label %65

78:                                               ; preds = %74, %47, %61
  tail call void @_ZN2v88internal8compiler17RegisterAllocator5SpillEPNS1_9LiveRangeENS1_29TopTierRegisterAllocationData9SpillModeE(%"class.v8::internal::compiler::RegisterAllocator"* %49, %"class.v8::internal::compiler::LiveRange"* %1, i32 %2)
  call void @llvm.lifetime.end.p0i8(i64 8, i8* nonnull %48) #16
  br label %648

79:                                               ; preds = %37
  %80 = getelementptr inbounds %"class.v8::internal::compiler::UsePosition", %"class.v8::internal::compiler::UsePosition"* %38, i64 0, i32 4
  %81 = getelementptr inbounds %"class.v8::internal::compiler::LiveRange", %"class.v8::internal::compiler::LiveRange"* %1, i64 0, i32 1
  %82 = bitcast %"class.v8::internal::EmbeddedVector.1439"* %6 to i8*
  call void @llvm.lifetime.start.p0i8(i64 144, i8* nonnull %82) #16
  %83 = getelementptr inbounds %"class.v8::internal::EmbeddedVector.1439", %"class.v8::internal::EmbeddedVector.1439"* %6, i64 0, i32 1, i64 0
  %84 = getelementptr inbounds %"class.v8::internal::EmbeddedVector.1439", %"class.v8::internal::EmbeddedVector.1439"* %6, i64 0, i32 0, i32 0
  store %"class.v8::internal::compiler::LifetimePosition"* %83, %"class.v8::internal::compiler::LifetimePosition"** %84, align 8
  %85 = getelementptr inbounds %"class.v8::internal::EmbeddedVector.1439", %"class.v8::internal::EmbeddedVector.1439"* %6, i64 0, i32 0, i32 1
  store i64 32, i64* %85, align 8
  %86 = bitcast %"class.v8::internal::compiler::LifetimePosition"* %83 to <4 x i32>*
  store <4 x i32> <i32 2147483647, i32 2147483647, i32 2147483647, i32 2147483647>, <4 x i32>* %86, align 8
  %87 = getelementptr inbounds %"class.v8::internal::EmbeddedVector.1439", %"class.v8::internal::EmbeddedVector.1439"* %6, i64 0, i32 1, i64 4, i32 0
  %88 = bitcast i32* %87 to <4 x i32>*
  store <4 x i32> <i32 2147483647, i32 2147483647, i32 2147483647, i32 2147483647>, <4 x i32>* %88, align 8
  %89 = getelementptr inbounds %"class.v8::internal::EmbeddedVector.1439", %"class.v8::internal::EmbeddedVector.1439"* %6, i64 0, i32 1, i64 8, i32 0
  %90 = bitcast i32* %89 to <4 x i32>*
  store <4 x i32> <i32 2147483647, i32 2147483647, i32 2147483647, i32 2147483647>, <4 x i32>* %90, align 8
  %91 = getelementptr inbounds %"class.v8::internal::EmbeddedVector.1439", %"class.v8::internal::EmbeddedVector.1439"* %6, i64 0, i32 1, i64 12, i32 0
  store i32 2147483647, i32* %91, align 8
  %92 = getelementptr inbounds %"class.v8::internal::EmbeddedVector.1439", %"class.v8::internal::EmbeddedVector.1439"* %6, i64 0, i32 1, i64 13, i32 0
  store i32 2147483647, i32* %92, align 4
  %93 = getelementptr inbounds %"class.v8::internal::EmbeddedVector.1439", %"class.v8::internal::EmbeddedVector.1439"* %6, i64 0, i32 1, i64 14, i32 0
  %94 = bitcast i32* %93 to <4 x i32>*
  store <4 x i32> <i32 2147483647, i32 2147483647, i32 2147483647, i32 2147483647>, <4 x i32>* %94, align 8
  %95 = getelementptr inbounds %"class.v8::internal::EmbeddedVector.1439", %"class.v8::internal::EmbeddedVector.1439"* %6, i64 0, i32 1, i64 18, i32 0
  %96 = bitcast i32* %95 to <4 x i32>*
  store <4 x i32> <i32 2147483647, i32 2147483647, i32 2147483647, i32 2147483647>, <4 x i32>* %96, align 8
  %97 = getelementptr inbounds %"class.v8::internal::EmbeddedVector.1439", %"class.v8::internal::EmbeddedVector.1439"* %6, i64 0, i32 1, i64 22, i32 0
  %98 = bitcast i32* %97 to <4 x i32>*
  store <4 x i32> <i32 2147483647, i32 2147483647, i32 2147483647, i32 2147483647>, <4 x i32>* %98, align 8
  %99 = getelementptr inbounds %"class.v8::internal::EmbeddedVector.1439", %"class.v8::internal::EmbeddedVector.1439"* %6, i64 0, i32 1, i64 26, i32 0
  %100 = bitcast i32* %99 to <4 x i32>*
  store <4 x i32> <i32 2147483647, i32 2147483647, i32 2147483647, i32 2147483647>, <4 x i32>* %100, align 8
  %101 = getelementptr inbounds %"class.v8::internal::EmbeddedVector.1439", %"class.v8::internal::EmbeddedVector.1439"* %6, i64 0, i32 1, i64 30, i32 0
  store i32 2147483647, i32* %101, align 8
  %102 = getelementptr inbounds %"class.v8::internal::EmbeddedVector.1439", %"class.v8::internal::EmbeddedVector.1439"* %6, i64 0, i32 1, i64 31, i32 0
  store i32 2147483647, i32* %102, align 4
  %103 = bitcast %"class.v8::internal::EmbeddedVector.1439"* %7 to i8*
  call void @llvm.lifetime.start.p0i8(i64 144, i8* nonnull %103) #16
  %104 = getelementptr inbounds %"class.v8::internal::EmbeddedVector.1439", %"class.v8::internal::EmbeddedVector.1439"* %7, i64 0, i32 1, i64 0
  %105 = getelementptr inbounds %"class.v8::internal::EmbeddedVector.1439", %"class.v8::internal::EmbeddedVector.1439"* %7, i64 0, i32 0, i32 0
  store %"class.v8::internal::compiler::LifetimePosition"* %104, %"class.v8::internal::compiler::LifetimePosition"** %105, align 8
  %106 = getelementptr inbounds %"class.v8::internal::EmbeddedVector.1439", %"class.v8::internal::EmbeddedVector.1439"* %7, i64 0, i32 0, i32 1
  store i64 32, i64* %106, align 8
  %107 = bitcast %"class.v8::internal::compiler::LifetimePosition"* %104 to <4 x i32>*
  store <4 x i32> <i32 2147483647, i32 2147483647, i32 2147483647, i32 2147483647>, <4 x i32>* %107, align 8
  %108 = getelementptr inbounds %"class.v8::internal::EmbeddedVector.1439", %"class.v8::internal::EmbeddedVector.1439"* %7, i64 0, i32 1, i64 4, i32 0
  %109 = bitcast i32* %108 to <4 x i32>*
  store <4 x i32> <i32 2147483647, i32 2147483647, i32 2147483647, i32 2147483647>, <4 x i32>* %109, align 8
  %110 = getelementptr inbounds %"class.v8::internal::EmbeddedVector.1439", %"class.v8::internal::EmbeddedVector.1439"* %7, i64 0, i32 1, i64 8, i32 0
  %111 = bitcast i32* %110 to <4 x i32>*
  store <4 x i32> <i32 2147483647, i32 2147483647, i32 2147483647, i32 2147483647>, <4 x i32>* %111, align 8
  %112 = getelementptr inbounds %"class.v8::internal::EmbeddedVector.1439", %"class.v8::internal::EmbeddedVector.1439"* %7, i64 0, i32 1, i64 12, i32 0
  store i32 2147483647, i32* %112, align 8
  %113 = getelementptr inbounds %"class.v8::internal::EmbeddedVector.1439", %"class.v8::internal::EmbeddedVector.1439"* %7, i64 0, i32 1, i64 13, i32 0
  store i32 2147483647, i32* %113, align 4
  %114 = getelementptr inbounds %"class.v8::internal::EmbeddedVector.1439", %"class.v8::internal::EmbeddedVector.1439"* %7, i64 0, i32 1, i64 14, i32 0
  %115 = bitcast i32* %114 to <4 x i32>*
  store <4 x i32> <i32 2147483647, i32 2147483647, i32 2147483647, i32 2147483647>, <4 x i32>* %115, align 8
  %116 = getelementptr inbounds %"class.v8::internal::EmbeddedVector.1439", %"class.v8::internal::EmbeddedVector.1439"* %7, i64 0, i32 1, i64 18, i32 0
  %117 = bitcast i32* %116 to <4 x i32>*
  store <4 x i32> <i32 2147483647, i32 2147483647, i32 2147483647, i32 2147483647>, <4 x i32>* %117, align 8
  %118 = getelementptr inbounds %"class.v8::internal::EmbeddedVector.1439", %"class.v8::internal::EmbeddedVector.1439"* %7, i64 0, i32 1, i64 22, i32 0
  %119 = bitcast i32* %118 to <4 x i32>*
  store <4 x i32> <i32 2147483647, i32 2147483647, i32 2147483647, i32 2147483647>, <4 x i32>* %119, align 8
  %120 = getelementptr inbounds %"class.v8::internal::EmbeddedVector.1439", %"class.v8::internal::EmbeddedVector.1439"* %7, i64 0, i32 1, i64 26, i32 0
  %121 = bitcast i32* %120 to <4 x i32>*
  store <4 x i32> <i32 2147483647, i32 2147483647, i32 2147483647, i32 2147483647>, <4 x i32>* %121, align 8
  %122 = getelementptr inbounds %"class.v8::internal::EmbeddedVector.1439", %"class.v8::internal::EmbeddedVector.1439"* %7, i64 0, i32 1, i64 30, i32 0
  store i32 2147483647, i32* %122, align 8
  %123 = getelementptr inbounds %"class.v8::internal::EmbeddedVector.1439", %"class.v8::internal::EmbeddedVector.1439"* %7, i64 0, i32 1, i64 31, i32 0
  store i32 2147483647, i32* %123, align 4
  %124 = getelementptr inbounds %"class.v8::internal::compiler::LinearScanAllocator", %"class.v8::internal::compiler::LinearScanAllocator"* %0, i64 0, i32 2, i32 0, i32 0, i32 0
  %125 = load %"class.v8::internal::compiler::LiveRange"**, %"class.v8::internal::compiler::LiveRange"*** %124, align 8
  %126 = getelementptr inbounds %"class.v8::internal::compiler::LinearScanAllocator", %"class.v8::internal::compiler::LinearScanAllocator"* %0, i64 0, i32 2, i32 0, i32 0, i32 1
  %127 = load %"class.v8::internal::compiler::LiveRange"**, %"class.v8::internal::compiler::LiveRange"*** %126, align 8
  %128 = icmp eq %"class.v8::internal::compiler::LiveRange"** %125, %127
  br i1 %128, label %129, label %139

129:                                              ; preds = %250, %79
  %130 = bitcast %"class.v8::internal::compiler::LinearScanAllocator"* %0 to %"class.v8::internal::compiler::RegisterAllocator"*
  %131 = getelementptr inbounds %"class.v8::internal::compiler::LinearScanAllocator", %"class.v8::internal::compiler::LinearScanAllocator"* %0, i64 0, i32 0, i32 2
  %132 = load i32, i32* %131, align 4
  %133 = icmp sgt i32 %132, 0
  br i1 %133, label %134, label %258

134:                                              ; preds = %129
  %135 = getelementptr inbounds %"class.v8::internal::compiler::LinearScanAllocator", %"class.v8::internal::compiler::LinearScanAllocator"* %0, i64 0, i32 3, i32 0, i32 0, i32 0
  %136 = bitcast i32* %8 to i8*
  %137 = getelementptr inbounds %"class.v8::internal::compiler::LiveRange", %"class.v8::internal::compiler::LiveRange"* %1, i64 0, i32 2
  %138 = bitcast i32* %8 to %"class.v8::internal::compiler::LifetimePosition"*
  br label %263

139:                                              ; preds = %79, %250
  %140 = phi %"class.v8::internal::compiler::LiveRange"** [ %256, %250 ], [ %125, %79 ]
  %141 = load %"class.v8::internal::compiler::LiveRange"*, %"class.v8::internal::compiler::LiveRange"** %140, align 8
  %142 = getelementptr inbounds %"class.v8::internal::compiler::LiveRange", %"class.v8::internal::compiler::LiveRange"* %141, i64 0, i32 1
  %143 = load i32, i32* %142, align 4
  %144 = lshr i32 %143, 7
  %145 = and i32 %144, 63
  %146 = getelementptr inbounds %"class.v8::internal::compiler::LiveRange", %"class.v8::internal::compiler::LiveRange"* %141, i64 0, i32 5
  %147 = load %"class.v8::internal::compiler::TopLevelLiveRange"*, %"class.v8::internal::compiler::TopLevelLiveRange"** %146, align 8
  %148 = getelementptr inbounds %"class.v8::internal::compiler::TopLevelLiveRange", %"class.v8::internal::compiler::TopLevelLiveRange"* %147, i64 0, i32 1
  %149 = load i32, i32* %148, align 4
  %150 = icmp slt i32 %149, 0
  br i1 %150, label %199, label %151

151:                                              ; preds = %139
  %152 = load %"class.v8::internal::compiler::UseInterval"*, %"class.v8::internal::compiler::UseInterval"** %9, align 8
  %153 = getelementptr inbounds %"class.v8::internal::compiler::UseInterval", %"class.v8::internal::compiler::UseInterval"* %152, i64 0, i32 0, i32 0
  %154 = load i32, i32* %153, align 8
  %155 = getelementptr inbounds %"class.v8::internal::compiler::LiveRange", %"class.v8::internal::compiler::LiveRange"* %141, i64 0, i32 8
  %156 = load %"class.v8::internal::compiler::UsePosition"*, %"class.v8::internal::compiler::UsePosition"** %155, align 8
  %157 = icmp eq %"class.v8::internal::compiler::UsePosition"* %156, null
  br i1 %157, label %162, label %158

158:                                              ; preds = %151
  %159 = getelementptr inbounds %"class.v8::internal::compiler::UsePosition", %"class.v8::internal::compiler::UsePosition"* %156, i64 0, i32 3, i32 0
  %160 = load i32, i32* %159, align 8
  %161 = icmp sgt i32 %160, %154
  br i1 %161, label %162, label %166

162:                                              ; preds = %158, %151
  %163 = getelementptr inbounds %"class.v8::internal::compiler::LiveRange", %"class.v8::internal::compiler::LiveRange"* %141, i64 0, i32 4
  %164 = load %"class.v8::internal::compiler::UsePosition"*, %"class.v8::internal::compiler::UsePosition"** %163, align 8
  %165 = icmp eq %"class.v8::internal::compiler::UsePosition"* %164, null
  br i1 %165, label %177, label %166

166:                                              ; preds = %162, %158
  %167 = phi %"class.v8::internal::compiler::UsePosition"* [ %156, %158 ], [ %164, %162 ]
  br label %168

168:                                              ; preds = %166, %173
  %169 = phi %"class.v8::internal::compiler::UsePosition"* [ %175, %173 ], [ %167, %166 ]
  %170 = getelementptr inbounds %"class.v8::internal::compiler::UsePosition", %"class.v8::internal::compiler::UsePosition"* %169, i64 0, i32 3, i32 0
  %171 = load i32, i32* %170, align 8
  %172 = icmp slt i32 %171, %154
  br i1 %172, label %173, label %181

173:                                              ; preds = %168
  %174 = getelementptr inbounds %"class.v8::internal::compiler::UsePosition", %"class.v8::internal::compiler::UsePosition"* %169, i64 0, i32 2
  %175 = load %"class.v8::internal::compiler::UsePosition"*, %"class.v8::internal::compiler::UsePosition"** %174, align 8
  %176 = icmp eq %"class.v8::internal::compiler::UsePosition"* %175, null
  br i1 %176, label %177, label %168

177:                                              ; preds = %173, %162
  store %"class.v8::internal::compiler::UsePosition"* null, %"class.v8::internal::compiler::UsePosition"** %155, align 8
  %178 = load %"class.v8::internal::compiler::UseInterval"*, %"class.v8::internal::compiler::UseInterval"** %9, align 8
  %179 = getelementptr inbounds %"class.v8::internal::compiler::UseInterval", %"class.v8::internal::compiler::UseInterval"* %178, i64 0, i32 0, i32 0
  %180 = load i32, i32* %179, align 8
  br label %211

181:                                              ; preds = %168
  %182 = getelementptr inbounds %"class.v8::internal::compiler::UsePosition", %"class.v8::internal::compiler::UsePosition"* %169, i64 0, i32 3, i32 0
  store %"class.v8::internal::compiler::UsePosition"* %169, %"class.v8::internal::compiler::UsePosition"** %155, align 8
  br label %183

183:                                              ; preds = %189, %181
  %184 = phi %"class.v8::internal::compiler::UsePosition"* [ %191, %189 ], [ %169, %181 ]
  %185 = getelementptr inbounds %"class.v8::internal::compiler::UsePosition", %"class.v8::internal::compiler::UsePosition"* %184, i64 0, i32 4
  %186 = load i32, i32* %185, align 4
  %187 = and i32 %186, 3
  %188 = icmp eq i32 %187, 2
  br i1 %188, label %193, label %189

189:                                              ; preds = %183
  %190 = getelementptr inbounds %"class.v8::internal::compiler::UsePosition", %"class.v8::internal::compiler::UsePosition"* %184, i64 0, i32 2
  %191 = load %"class.v8::internal::compiler::UsePosition"*, %"class.v8::internal::compiler::UsePosition"** %190, align 8
  %192 = icmp eq %"class.v8::internal::compiler::UsePosition"* %191, null
  br i1 %192, label %203, label %183

193:                                              ; preds = %183
  %194 = getelementptr inbounds %"class.v8::internal::compiler::UsePosition", %"class.v8::internal::compiler::UsePosition"* %184, i64 0, i32 3, i32 0
  %195 = load i32, i32* %194, align 8
  %196 = add i32 %154, 2
  %197 = or i32 %196, 1
  %198 = icmp sgt i32 %195, %197
  br i1 %198, label %203, label %199

199:                                              ; preds = %193, %139
  %200 = zext i32 %145 to i64
  %201 = load %"class.v8::internal::compiler::LifetimePosition"*, %"class.v8::internal::compiler::LifetimePosition"** %84, align 8
  %202 = getelementptr inbounds %"class.v8::internal::compiler::LifetimePosition", %"class.v8::internal::compiler::LifetimePosition"* %201, i64 %200, i32 0
  store i32 0, i32* %202, align 4
  br label %250

203:                                              ; preds = %189, %193
  %204 = load %"class.v8::internal::compiler::UseInterval"*, %"class.v8::internal::compiler::UseInterval"** %9, align 8
  %205 = getelementptr inbounds %"class.v8::internal::compiler::UseInterval", %"class.v8::internal::compiler::UseInterval"* %204, i64 0, i32 0, i32 0
  %206 = load i32, i32* %205, align 8
  %207 = icmp eq %"class.v8::internal::compiler::UsePosition"* %169, null
  br i1 %207, label %211, label %208

208:                                              ; preds = %203
  %209 = load i32, i32* %182, align 8
  %210 = icmp sgt i32 %209, %206
  br i1 %210, label %211, label %216

211:                                              ; preds = %177, %208, %203
  %212 = phi i32 [ %180, %177 ], [ %206, %208 ], [ %206, %203 ]
  %213 = getelementptr inbounds %"class.v8::internal::compiler::LiveRange", %"class.v8::internal::compiler::LiveRange"* %141, i64 0, i32 4
  %214 = load %"class.v8::internal::compiler::UsePosition"*, %"class.v8::internal::compiler::UsePosition"** %213, align 8
  %215 = icmp eq %"class.v8::internal::compiler::UsePosition"* %214, null
  br i1 %215, label %228, label %216

216:                                              ; preds = %211, %208
  %217 = phi i32 [ %212, %211 ], [ %206, %208 ]
  %218 = phi %"class.v8::internal::compiler::UsePosition"* [ %214, %211 ], [ %169, %208 ]
  br label %219

219:                                              ; preds = %224, %216
  %220 = phi %"class.v8::internal::compiler::UsePosition"* [ %226, %224 ], [ %218, %216 ]
  %221 = getelementptr inbounds %"class.v8::internal::compiler::UsePosition", %"class.v8::internal::compiler::UsePosition"* %220, i64 0, i32 3, i32 0
  %222 = load i32, i32* %221, align 8
  %223 = icmp slt i32 %222, %217
  br i1 %223, label %224, label %229

224:                                              ; preds = %219
  %225 = getelementptr inbounds %"class.v8::internal::compiler::UsePosition", %"class.v8::internal::compiler::UsePosition"* %220, i64 0, i32 2
  %226 = load %"class.v8::internal::compiler::UsePosition"*, %"class.v8::internal::compiler::UsePosition"** %225, align 8
  %227 = icmp eq %"class.v8::internal::compiler::UsePosition"* %226, null
  br i1 %227, label %228, label %219

228:                                              ; preds = %224, %211
  store %"class.v8::internal::compiler::UsePosition"* null, %"class.v8::internal::compiler::UsePosition"** %155, align 8
  br label %240

229:                                              ; preds = %219
  store %"class.v8::internal::compiler::UsePosition"* %220, %"class.v8::internal::compiler::UsePosition"** %155, align 8
  br label %230

230:                                              ; preds = %236, %229
  %231 = phi %"class.v8::internal::compiler::UsePosition"* [ %238, %236 ], [ %220, %229 ]
  %232 = getelementptr inbounds %"class.v8::internal::compiler::UsePosition", %"class.v8::internal::compiler::UsePosition"* %231, i64 0, i32 4
  %233 = load i32, i32* %232, align 4
  %234 = and i32 %233, 32
  %235 = icmp eq i32 %234, 0
  br i1 %235, label %236, label %244

236:                                              ; preds = %230
  %237 = getelementptr inbounds %"class.v8::internal::compiler::UsePosition", %"class.v8::internal::compiler::UsePosition"* %231, i64 0, i32 2
  %238 = load %"class.v8::internal::compiler::UsePosition"*, %"class.v8::internal::compiler::UsePosition"** %237, align 8
  %239 = icmp eq %"class.v8::internal::compiler::UsePosition"* %238, null
  br i1 %239, label %240, label %230

240:                                              ; preds = %236, %228
  %241 = getelementptr inbounds %"class.v8::internal::compiler::LiveRange", %"class.v8::internal::compiler::LiveRange"* %141, i64 0, i32 2
  %242 = load %"class.v8::internal::compiler::UseInterval"*, %"class.v8::internal::compiler::UseInterval"** %241, align 8
  %243 = getelementptr inbounds %"class.v8::internal::compiler::UseInterval", %"class.v8::internal::compiler::UseInterval"* %242, i64 0, i32 1, i32 0
  br label %246

244:                                              ; preds = %230
  %245 = getelementptr inbounds %"class.v8::internal::compiler::UsePosition", %"class.v8::internal::compiler::UsePosition"* %231, i64 0, i32 3, i32 0
  br label %246

246:                                              ; preds = %240, %244
  %247 = phi i32* [ %243, %240 ], [ %245, %244 ]
  %248 = load i32, i32* %247, align 4
  %249 = zext i32 %145 to i64
  br label %250

250:                                              ; preds = %246, %199
  %251 = phi %"class.v8::internal::compiler::LifetimePosition"** [ %84, %246 ], [ %105, %199 ]
  %252 = phi i64 [ %249, %246 ], [ %200, %199 ]
  %253 = phi i32 [ %248, %246 ], [ 0, %199 ]
  %254 = load %"class.v8::internal::compiler::LifetimePosition"*, %"class.v8::internal::compiler::LifetimePosition"** %251, align 8
  %255 = getelementptr inbounds %"class.v8::internal::compiler::LifetimePosition", %"class.v8::internal::compiler::LifetimePosition"* %254, i64 %252, i32 0
  store i32 %253, i32* %255, align 4
  %256 = getelementptr inbounds %"class.v8::internal::compiler::LiveRange"*, %"class.v8::internal::compiler::LiveRange"** %140, i64 1
  %257 = icmp eq %"class.v8::internal::compiler::LiveRange"** %256, %127
  br i1 %257, label %129, label %139

258:                                              ; preds = %435, %129
  %259 = load i32, i32* %81, align 4
  %260 = lshr i32 %259, 22
  %261 = and i32 %260, 63
  %262 = icmp eq i32 %261, 32
  br i1 %262, label %440, label %474

263:                                              ; preds = %134, %435
  %264 = phi i64 [ 0, %134 ], [ %436, %435 ]
  %265 = load %"class.v8::internal::ZoneMultiset.1344"*, %"class.v8::internal::ZoneMultiset.1344"** %135, align 8
  %266 = getelementptr inbounds %"class.v8::internal::ZoneMultiset.1344", %"class.v8::internal::ZoneMultiset.1344"* %265, i64 %264, i32 0, i32 0, i32 0
  %267 = load %"class.std::__1::__tree_end_node"*, %"class.std::__1::__tree_end_node"** %266, align 8
  %268 = getelementptr inbounds %"class.v8::internal::ZoneMultiset.1344", %"class.v8::internal::ZoneMultiset.1344"* %265, i64 %264, i32 0, i32 0, i32 1, i32 0, i32 0
  %269 = icmp eq %"class.std::__1::__tree_end_node"* %267, %268
  br i1 %269, label %435, label %270

270:                                              ; preds = %263, %432
  %271 = phi %"class.std::__1::__tree_end_node"* [ %433, %432 ], [ %267, %263 ]
  %272 = getelementptr inbounds %"class.std::__1::__tree_end_node", %"class.std::__1::__tree_end_node"* %271, i64 4
  %273 = bitcast %"class.std::__1::__tree_end_node"* %272 to %"class.v8::internal::compiler::LiveRange"**
  %274 = load %"class.v8::internal::compiler::LiveRange"*, %"class.v8::internal::compiler::LiveRange"** %273, align 8
  %275 = getelementptr inbounds %"class.v8::internal::compiler::LiveRange", %"class.v8::internal::compiler::LiveRange"* %274, i64 0, i32 5
  %276 = load %"class.v8::internal::compiler::TopLevelLiveRange"*, %"class.v8::internal::compiler::TopLevelLiveRange"** %275, align 8
  %277 = getelementptr inbounds %"class.v8::internal::compiler::TopLevelLiveRange", %"class.v8::internal::compiler::TopLevelLiveRange"* %276, i64 0, i32 1
  %278 = load i32, i32* %277, align 4
  %279 = icmp slt i32 %278, 0
  %280 = load %"class.v8::internal::compiler::LifetimePosition"*, %"class.v8::internal::compiler::LifetimePosition"** %105, align 8
  %281 = getelementptr inbounds %"class.v8::internal::compiler::LifetimePosition", %"class.v8::internal::compiler::LifetimePosition"* %280, i64 %264
  %282 = getelementptr inbounds %"class.v8::internal::compiler::LiveRange", %"class.v8::internal::compiler::LiveRange"* %274, i64 0, i32 11, i32 0
  %283 = load i32, i32* %282, align 8
  %284 = getelementptr inbounds %"class.v8::internal::compiler::LifetimePosition", %"class.v8::internal::compiler::LifetimePosition"* %281, i64 0, i32 0
  %285 = load i32, i32* %284, align 4
  %286 = icmp sgt i32 %285, %283
  br i1 %286, label %287, label %435

287:                                              ; preds = %270
  br i1 %279, label %293, label %288

288:                                              ; preds = %287
  %289 = load %"class.v8::internal::compiler::LifetimePosition"*, %"class.v8::internal::compiler::LifetimePosition"** %84, align 8
  %290 = getelementptr inbounds %"class.v8::internal::compiler::LifetimePosition", %"class.v8::internal::compiler::LifetimePosition"* %289, i64 %264, i32 0
  %291 = load i32, i32* %290, align 4
  %292 = icmp sgt i32 %291, %283
  br i1 %292, label %293, label %404

293:                                              ; preds = %288, %287
  call void @llvm.lifetime.start.p0i8(i64 4, i8* nonnull %136)
  %294 = load %"class.v8::internal::compiler::UseInterval"*, %"class.v8::internal::compiler::UseInterval"** %9, align 8
  %295 = icmp eq %"class.v8::internal::compiler::UseInterval"* %294, null
  br i1 %295, label %374, label %296

296:                                              ; preds = %293
  %297 = getelementptr inbounds %"class.v8::internal::compiler::UseInterval", %"class.v8::internal::compiler::UseInterval"* %294, i64 0, i32 0, i32 0
  %298 = load i32, i32* %297, align 8
  %299 = getelementptr inbounds %"class.v8::internal::compiler::LiveRange", %"class.v8::internal::compiler::LiveRange"* %274, i64 0, i32 7
  %300 = load %"class.v8::internal::compiler::UseInterval"*, %"class.v8::internal::compiler::UseInterval"** %299, align 8
  %301 = icmp eq %"class.v8::internal::compiler::UseInterval"* %300, null
  br i1 %301, label %302, label %304

302:                                              ; preds = %296
  %303 = getelementptr inbounds %"class.v8::internal::compiler::LiveRange", %"class.v8::internal::compiler::LiveRange"* %274, i64 0, i32 3
  br label %310

304:                                              ; preds = %296
  %305 = getelementptr inbounds %"class.v8::internal::compiler::UseInterval", %"class.v8::internal::compiler::UseInterval"* %300, i64 0, i32 0, i32 0
  %306 = load i32, i32* %305, align 8
  %307 = icmp sgt i32 %306, %298
  br i1 %307, label %308, label %310

308:                                              ; preds = %304
  store %"class.v8::internal::compiler::UseInterval"* null, %"class.v8::internal::compiler::UseInterval"** %299, align 8
  %309 = getelementptr inbounds %"class.v8::internal::compiler::LiveRange", %"class.v8::internal::compiler::LiveRange"* %274, i64 0, i32 3
  br label %310

310:                                              ; preds = %308, %304, %302
  %311 = phi %"class.v8::internal::compiler::UseInterval"* [ null, %302 ], [ null, %308 ], [ %300, %304 ]
  %312 = phi %"class.v8::internal::compiler::UseInterval"** [ %303, %302 ], [ %309, %308 ], [ %299, %304 ]
  %313 = load %"class.v8::internal::compiler::UseInterval"*, %"class.v8::internal::compiler::UseInterval"** %312, align 8
  %314 = icmp eq %"class.v8::internal::compiler::UseInterval"* %313, null
  br i1 %314, label %374, label %315

315:                                              ; preds = %310
  %316 = getelementptr inbounds %"class.v8::internal::compiler::LiveRange", %"class.v8::internal::compiler::LiveRange"* %274, i64 0, i32 2
  br label %317

317:                                              ; preds = %367, %315
  %318 = phi %"class.v8::internal::compiler::UseInterval"* [ %311, %315 ], [ %368, %367 ]
  %319 = phi %"class.v8::internal::compiler::UseInterval"* [ %294, %315 ], [ %370, %367 ]
  %320 = phi %"class.v8::internal::compiler::UseInterval"* [ %313, %315 ], [ %369, %367 ]
  %321 = getelementptr inbounds %"class.v8::internal::compiler::UseInterval", %"class.v8::internal::compiler::UseInterval"* %320, i64 0, i32 0, i32 0
  %322 = load i32, i32* %321, align 8
  %323 = load %"class.v8::internal::compiler::UseInterval"*, %"class.v8::internal::compiler::UseInterval"** %137, align 8
  %324 = getelementptr inbounds %"class.v8::internal::compiler::UseInterval", %"class.v8::internal::compiler::UseInterval"* %323, i64 0, i32 1, i32 0
  %325 = load i32, i32* %324, align 4
  %326 = icmp sgt i32 %322, %325
  br i1 %326, label %374, label %327

327:                                              ; preds = %317
  %328 = getelementptr inbounds %"class.v8::internal::compiler::UseInterval", %"class.v8::internal::compiler::UseInterval"* %319, i64 0, i32 0, i32 0
  %329 = load i32, i32* %328, align 8
  %330 = load %"class.v8::internal::compiler::UseInterval"*, %"class.v8::internal::compiler::UseInterval"** %316, align 8
  %331 = getelementptr inbounds %"class.v8::internal::compiler::UseInterval", %"class.v8::internal::compiler::UseInterval"* %330, i64 0, i32 1, i32 0
  %332 = load i32, i32* %331, align 4
  %333 = icmp sgt i32 %329, %332
  br i1 %333, label %374, label %334

334:                                              ; preds = %327
  %335 = icmp slt i32 %329, %322
  %336 = select i1 %335, i32 %322, i32 %329
  %337 = select i1 %335, %"class.v8::internal::compiler::UseInterval"* %319, %"class.v8::internal::compiler::UseInterval"* %320
  %338 = getelementptr inbounds %"class.v8::internal::compiler::UseInterval", %"class.v8::internal::compiler::UseInterval"* %337, i64 0, i32 1, i32 0
  %339 = load i32, i32* %338, align 4
  %340 = icmp slt i32 %336, %339
  %341 = icmp ne i32 %336, -1
  %342 = and i1 %341, %340
  br i1 %342, label %375, label %343

343:                                              ; preds = %334
  %344 = icmp slt i32 %322, %329
  br i1 %344, label %345, label %364

345:                                              ; preds = %343
  %346 = getelementptr inbounds %"class.v8::internal::compiler::UseInterval", %"class.v8::internal::compiler::UseInterval"* %320, i64 0, i32 2
  %347 = load %"class.v8::internal::compiler::UseInterval"*, %"class.v8::internal::compiler::UseInterval"** %346, align 8
  %348 = icmp eq %"class.v8::internal::compiler::UseInterval"* %347, null
  br i1 %348, label %374, label %349

349:                                              ; preds = %345
  %350 = getelementptr inbounds %"class.v8::internal::compiler::UseInterval", %"class.v8::internal::compiler::UseInterval"* %347, i64 0, i32 0, i32 0
  %351 = load i32, i32* %350, align 8
  %352 = icmp sgt i32 %351, %325
  br i1 %352, label %374, label %353

353:                                              ; preds = %349
  %354 = icmp sgt i32 %351, %298
  br i1 %354, label %367, label %355

355:                                              ; preds = %353
  %356 = icmp eq %"class.v8::internal::compiler::UseInterval"* %318, null
  br i1 %356, label %360, label %357

357:                                              ; preds = %355
  %358 = getelementptr inbounds %"class.v8::internal::compiler::UseInterval", %"class.v8::internal::compiler::UseInterval"* %318, i64 0, i32 0, i32 0
  %359 = load i32, i32* %358, align 8
  br label %360

360:                                              ; preds = %357, %355
  %361 = phi i32 [ %359, %357 ], [ -1, %355 ]
  %362 = icmp sgt i32 %351, %361
  br i1 %362, label %363, label %367

363:                                              ; preds = %360
  store %"class.v8::internal::compiler::UseInterval"* %347, %"class.v8::internal::compiler::UseInterval"** %299, align 8
  br label %367

364:                                              ; preds = %343
  %365 = getelementptr inbounds %"class.v8::internal::compiler::UseInterval", %"class.v8::internal::compiler::UseInterval"* %319, i64 0, i32 2
  %366 = load %"class.v8::internal::compiler::UseInterval"*, %"class.v8::internal::compiler::UseInterval"** %365, align 8
  br label %367

367:                                              ; preds = %364, %363, %360, %353
  %368 = phi %"class.v8::internal::compiler::UseInterval"* [ %318, %364 ], [ %318, %353 ], [ %318, %360 ], [ %347, %363 ]
  %369 = phi %"class.v8::internal::compiler::UseInterval"* [ %320, %364 ], [ %347, %353 ], [ %347, %360 ], [ %347, %363 ]
  %370 = phi %"class.v8::internal::compiler::UseInterval"* [ %366, %364 ], [ %319, %353 ], [ %319, %360 ], [ %319, %363 ]
  %371 = icmp ne %"class.v8::internal::compiler::UseInterval"* %369, null
  %372 = icmp ne %"class.v8::internal::compiler::UseInterval"* %370, null
  %373 = and i1 %371, %372
  br i1 %373, label %317, label %374

374:                                              ; preds = %345, %349, %327, %317, %367, %293, %310
  store i32 -1, i32* %8, align 4
  br label %403

375:                                              ; preds = %334
  store i32 %336, i32* %8, align 4
  br i1 %279, label %376, label %394

376:                                              ; preds = %375
  %377 = load i32, i32* %284, align 4
  %378 = icmp slt i32 %336, %377
  %379 = select i1 %378, %"class.v8::internal::compiler::LifetimePosition"* %138, %"class.v8::internal::compiler::LifetimePosition"* %281
  %380 = getelementptr inbounds %"class.v8::internal::compiler::LifetimePosition", %"class.v8::internal::compiler::LifetimePosition"* %379, i64 0, i32 0
  %381 = load i32, i32* %380, align 4
  store i32 %381, i32* %284, align 4
  %382 = load %"class.v8::internal::compiler::LifetimePosition"*, %"class.v8::internal::compiler::LifetimePosition"** %105, align 8
  %383 = getelementptr inbounds %"class.v8::internal::compiler::LifetimePosition", %"class.v8::internal::compiler::LifetimePosition"* %382, i64 %264
  %384 = load %"class.v8::internal::compiler::LifetimePosition"*, %"class.v8::internal::compiler::LifetimePosition"** %84, align 8
  %385 = getelementptr inbounds %"class.v8::internal::compiler::LifetimePosition", %"class.v8::internal::compiler::LifetimePosition"* %384, i64 %264
  %386 = getelementptr inbounds %"class.v8::internal::compiler::LifetimePosition", %"class.v8::internal::compiler::LifetimePosition"* %385, i64 0, i32 0
  %387 = load i32, i32* %386, align 4
  %388 = getelementptr inbounds %"class.v8::internal::compiler::LifetimePosition", %"class.v8::internal::compiler::LifetimePosition"* %383, i64 0, i32 0
  %389 = load i32, i32* %388, align 4
  %390 = icmp slt i32 %387, %389
  %391 = select i1 %390, %"class.v8::internal::compiler::LifetimePosition"* %385, %"class.v8::internal::compiler::LifetimePosition"* %383
  %392 = getelementptr inbounds %"class.v8::internal::compiler::LifetimePosition", %"class.v8::internal::compiler::LifetimePosition"* %391, i64 0, i32 0
  %393 = load i32, i32* %392, align 4
  store i32 %393, i32* %386, align 4
  br label %403

394:                                              ; preds = %375
  %395 = load %"class.v8::internal::compiler::LifetimePosition"*, %"class.v8::internal::compiler::LifetimePosition"** %84, align 8
  %396 = getelementptr inbounds %"class.v8::internal::compiler::LifetimePosition", %"class.v8::internal::compiler::LifetimePosition"* %395, i64 %264
  %397 = getelementptr inbounds %"class.v8::internal::compiler::LifetimePosition", %"class.v8::internal::compiler::LifetimePosition"* %396, i64 0, i32 0
  %398 = load i32, i32* %397, align 4
  %399 = icmp slt i32 %336, %398
  %400 = select i1 %399, %"class.v8::internal::compiler::LifetimePosition"* %138, %"class.v8::internal::compiler::LifetimePosition"* %396
  %401 = getelementptr inbounds %"class.v8::internal::compiler::LifetimePosition", %"class.v8::internal::compiler::LifetimePosition"* %400, i64 0, i32 0
  %402 = load i32, i32* %401, align 4
  store i32 %402, i32* %397, align 4
  br label %403

403:                                              ; preds = %394, %376, %374
  call void @llvm.lifetime.end.p0i8(i64 4, i8* nonnull %136)
  br label %404

404:                                              ; preds = %288, %403
  %405 = getelementptr inbounds %"class.std::__1::__tree_end_node", %"class.std::__1::__tree_end_node"* %271, i64 1, i32 0
  %406 = load %"class.std::__1::__tree_node_base"*, %"class.std::__1::__tree_node_base"** %405, align 8
  %407 = icmp eq %"class.std::__1::__tree_node_base"* %406, null
  br i1 %407, label %408, label %416

408:                                              ; preds = %404
  %409 = bitcast %"class.std::__1::__tree_end_node"* %271 to %"class.std::__1::__tree_node_base"*
  %410 = getelementptr inbounds %"class.std::__1::__tree_end_node", %"class.std::__1::__tree_end_node"* %271, i64 2
  %411 = bitcast %"class.std::__1::__tree_end_node"* %410 to %"class.std::__1::__tree_end_node"**
  %412 = load %"class.std::__1::__tree_end_node"*, %"class.std::__1::__tree_end_node"** %411, align 8
  %413 = getelementptr inbounds %"class.std::__1::__tree_end_node", %"class.std::__1::__tree_end_node"* %412, i64 0, i32 0
  %414 = load %"class.std::__1::__tree_node_base"*, %"class.std::__1::__tree_node_base"** %413, align 8
  %415 = icmp eq %"class.std::__1::__tree_node_base"* %414, %409
  br i1 %415, label %432, label %423

416:                                              ; preds = %404, %416
  %417 = phi %"class.std::__1::__tree_node_base"* [ %419, %416 ], [ %406, %404 ]
  %418 = getelementptr inbounds %"class.std::__1::__tree_node_base", %"class.std::__1::__tree_node_base"* %417, i64 0, i32 0, i32 0
  %419 = load %"class.std::__1::__tree_node_base"*, %"class.std::__1::__tree_node_base"** %418, align 8
  %420 = icmp eq %"class.std::__1::__tree_node_base"* %419, null
  br i1 %420, label %421, label %416

421:                                              ; preds = %416
  %422 = getelementptr inbounds %"class.std::__1::__tree_node_base", %"class.std::__1::__tree_node_base"* %417, i64 0, i32 0
  br label %432

423:                                              ; preds = %408, %423
  %424 = phi %"class.std::__1::__tree_end_node"** [ %427, %423 ], [ %411, %408 ]
  %425 = bitcast %"class.std::__1::__tree_end_node"** %424 to %"class.std::__1::__tree_node_base"**
  %426 = load %"class.std::__1::__tree_node_base"*, %"class.std::__1::__tree_node_base"** %425, align 8
  %427 = getelementptr inbounds %"class.std::__1::__tree_node_base", %"class.std::__1::__tree_node_base"* %426, i64 0, i32 2
  %428 = load %"class.std::__1::__tree_end_node"*, %"class.std::__1::__tree_end_node"** %427, align 8
  %429 = getelementptr inbounds %"class.std::__1::__tree_end_node", %"class.std::__1::__tree_end_node"* %428, i64 0, i32 0
  %430 = load %"class.std::__1::__tree_node_base"*, %"class.std::__1::__tree_node_base"** %429, align 8
  %431 = icmp eq %"class.std::__1::__tree_node_base"* %430, %426
  br i1 %431, label %432, label %423

432:                                              ; preds = %423, %408, %421
  %433 = phi %"class.std::__1::__tree_end_node"* [ %422, %421 ], [ %412, %408 ], [ %428, %423 ]
  %434 = icmp eq %"class.std::__1::__tree_end_node"* %433, %268
  br i1 %434, label %435, label %270

435:                                              ; preds = %432, %270, %263
  %436 = add nuw nsw i64 %264, 1
  %437 = load i32, i32* %131, align 4
  %438 = sext i32 %437 to i64
  %439 = icmp slt i64 %436, %438
  br i1 %439, label %263, label %258

440:                                              ; preds = %258
  %441 = getelementptr inbounds %"class.v8::internal::compiler::UsePosition", %"class.v8::internal::compiler::UsePosition"* %38, i64 0, i32 1
  %442 = load i8*, i8** %441, align 8
  %443 = icmp eq i8* %442, null
  br i1 %443, label %467, label %444

444:                                              ; preds = %440
  %445 = load i32, i32* %80, align 4
  %446 = lshr i32 %445, 2
  %447 = trunc i32 %446 to i8
  %448 = and i8 %447, 7
  switch i8 %448, label %466 [
    i8 0, label %467
    i8 4, label %467
    i8 2, label %449
    i8 1, label %456
    i8 3, label %461
  ]

449:                                              ; preds = %444
  %450 = getelementptr inbounds i8, i8* %442, i64 28
  %451 = bitcast i8* %450 to i32*
  %452 = load i32, i32* %451, align 4
  %453 = lshr i32 %452, 6
  %454 = and i32 %453, 63
  %455 = icmp eq i32 %454, 32
  br i1 %455, label %467, label %474

456:                                              ; preds = %444
  %457 = bitcast i8* %442 to i64*
  %458 = load i64, i64* %457, align 8
  %459 = ashr i64 %458, 35
  %460 = trunc i64 %459 to i32
  br label %474

461:                                              ; preds = %444
  %462 = getelementptr inbounds i8, i8* %442, i64 48
  %463 = bitcast i8* %462 to i32*
  %464 = load i32, i32* %463, align 8
  %465 = icmp eq i32 %464, 32
  br i1 %465, label %467, label %474

466:                                              ; preds = %444
  call void (i8*, ...) @_Z8V8_FatalPKcz(i8* getelementptr inbounds ([17 x i8], [17 x i8]* @.str, i64 0, i64 0)) #17
  unreachable

467:                                              ; preds = %440, %444, %444, %449, %461
  %468 = getelementptr inbounds %"class.v8::internal::compiler::LiveRange", %"class.v8::internal::compiler::LiveRange"* %1, i64 0, i32 10
  %469 = load %"class.v8::internal::compiler::LiveRangeBundle"*, %"class.v8::internal::compiler::LiveRangeBundle"** %468, align 8
  %470 = icmp eq %"class.v8::internal::compiler::LiveRangeBundle"* %469, null
  br i1 %470, label %474, label %471

471:                                              ; preds = %467
  %472 = getelementptr inbounds %"class.v8::internal::compiler::LiveRangeBundle", %"class.v8::internal::compiler::LiveRangeBundle"* %469, i64 0, i32 3
  %473 = load i32, i32* %472, align 4
  br label %474

474:                                              ; preds = %471, %461, %449, %258, %467, %456
  %475 = phi i32 [ %460, %456 ], [ 32, %467 ], [ %261, %258 ], [ %454, %449 ], [ %464, %461 ], [ %473, %471 ]
  %476 = getelementptr inbounds %"class.v8::internal::EmbeddedVector.1439", %"class.v8::internal::EmbeddedVector.1439"* %6, i64 0, i32 0
  %477 = call i32 @_ZN2v88internal8compiler19LinearScanAllocator34PickRegisterThatIsAvailableLongestEPNS1_9LiveRangeEiRKNS0_6VectorINS1_16LifetimePositionEEE(%"class.v8::internal::compiler::LinearScanAllocator"* %0, %"class.v8::internal::compiler::LiveRange"* %1, i32 %475, %"class.v8::internal::Vector.1438"* nonnull dereferenceable(16) %476)
  %478 = sext i32 %477 to i64
  %479 = load %"class.v8::internal::compiler::LifetimePosition"*, %"class.v8::internal::compiler::LifetimePosition"** %84, align 8
  %480 = getelementptr inbounds %"class.v8::internal::compiler::UsePosition", %"class.v8::internal::compiler::UsePosition"* %38, i64 0, i32 3, i32 0
  %481 = load i32, i32* %480, align 8
  %482 = getelementptr inbounds %"class.v8::internal::compiler::LifetimePosition", %"class.v8::internal::compiler::LifetimePosition"* %479, i64 %478, i32 0
  %483 = load i32, i32* %482, align 4
  %484 = icmp slt i32 %483, %481
  br i1 %484, label %485, label %500

485:                                              ; preds = %474
  %486 = load %"class.v8::internal::compiler::UseInterval"*, %"class.v8::internal::compiler::UseInterval"** %9, align 8
  %487 = getelementptr inbounds %"class.v8::internal::compiler::UseInterval", %"class.v8::internal::compiler::UseInterval"* %486, i64 0, i32 0, i32 0
  %488 = load i32, i32* %487, align 8
  %489 = icmp sgt i32 %488, %481
  %490 = select i1 %489, i32 %488, i32 %481
  %491 = select i1 %489, i32 %481, i32 %488
  %492 = add nsw i32 %491, 1
  %493 = and i32 %492, 2
  %494 = icmp eq i32 %493, 0
  %495 = add i32 %491, 5
  %496 = and i32 %495, -4
  %497 = select i1 %494, i32 %492, i32 %496
  %498 = icmp slt i32 %497, %490
  br i1 %498, label %499, label %500

499:                                              ; preds = %485
  call void @_ZN2v88internal8compiler19LinearScanAllocator17SpillBetweenUntilEPNS1_9LiveRangeENS1_16LifetimePositionES5_S5_NS1_29TopTierRegisterAllocationData9SpillModeE(%"class.v8::internal::compiler::LinearScanAllocator"* %0, %"class.v8::internal::compiler::LiveRange"* %1, i32 %488, i32 %488, i32 %481, i32 %2) #16
  br label %647

500:                                              ; preds = %485, %474
  %501 = getelementptr inbounds %"class.v8::internal::compiler::LiveRange", %"class.v8::internal::compiler::LiveRange"* %1, i64 0, i32 2
  %502 = load %"class.v8::internal::compiler::UseInterval"*, %"class.v8::internal::compiler::UseInterval"** %501, align 8
  %503 = getelementptr inbounds %"class.v8::internal::compiler::UseInterval", %"class.v8::internal::compiler::UseInterval"* %502, i64 0, i32 1, i32 0
  %504 = load i32, i32* %503, align 4
  %505 = icmp eq i32 %2, 1
  br i1 %505, label %506, label %557

506:                                              ; preds = %500
  %507 = getelementptr inbounds %"class.v8::internal::compiler::LinearScanAllocator", %"class.v8::internal::compiler::LinearScanAllocator"* %0, i64 0, i32 0, i32 0
  %508 = load %"class.v8::internal::compiler::TopTierRegisterAllocationData"*, %"class.v8::internal::compiler::TopTierRegisterAllocationData"** %507, align 8
  %509 = getelementptr inbounds %"class.v8::internal::compiler::TopTierRegisterAllocationData", %"class.v8::internal::compiler::TopTierRegisterAllocationData"* %508, i64 0, i32 3
  %510 = load %"class.v8::internal::compiler::InstructionSequence"*, %"class.v8::internal::compiler::InstructionSequence"** %509, align 8
  %511 = load %"class.v8::internal::compiler::UseInterval"*, %"class.v8::internal::compiler::UseInterval"** %9, align 8
  %512 = getelementptr inbounds %"class.v8::internal::compiler::UseInterval", %"class.v8::internal::compiler::UseInterval"* %511, i64 0, i32 0, i32 0
  %513 = load i32, i32* %512, align 8
  %514 = sdiv i32 %513, 4
  %515 = call %"class.v8::internal::compiler::InstructionBlock"* @_ZNK2v88internal8compiler19InstructionSequence19GetInstructionBlockEi(%"class.v8::internal::compiler::InstructionSequence"* %510, i32 %514) #16
  %516 = load %"class.v8::internal::compiler::TopTierRegisterAllocationData"*, %"class.v8::internal::compiler::TopTierRegisterAllocationData"** %507, align 8
  %517 = getelementptr inbounds %"class.v8::internal::compiler::TopTierRegisterAllocationData", %"class.v8::internal::compiler::TopTierRegisterAllocationData"* %516, i64 0, i32 3
  %518 = load %"class.v8::internal::compiler::InstructionSequence"*, %"class.v8::internal::compiler::InstructionSequence"** %517, align 8
  %519 = getelementptr inbounds %"class.v8::internal::compiler::InstructionSequence", %"class.v8::internal::compiler::InstructionSequence"* %518, i64 0, i32 2
  %520 = bitcast %"class.v8::internal::ZoneVector.1170"** %519 to %"class.std::__1::vector.1171"**
  %521 = load %"class.std::__1::vector.1171"*, %"class.std::__1::vector.1171"** %520, align 8
  %522 = getelementptr inbounds %"class.std::__1::vector.1171", %"class.std::__1::vector.1171"* %521, i64 0, i32 0, i32 1
  %523 = bitcast %"class.v8::internal::compiler::InstructionBlock"*** %522 to i64*
  %524 = load i64, i64* %523, align 8
  %525 = bitcast %"class.std::__1::vector.1171"* %521 to i64*
  %526 = load i64, i64* %525, align 8
  %527 = sub i64 %524, %526
  %528 = lshr exact i64 %527, 3
  %529 = trunc i64 %528 to i32
  %530 = add nsw i32 %529, -1
  %531 = ashr exact i64 %527, 3
  %532 = inttoptr i64 %526 to %"class.v8::internal::compiler::InstructionBlock"**
  br label %533

533:                                              ; preds = %544, %506
  %534 = phi %"class.v8::internal::compiler::InstructionBlock"* [ %515, %506 ], [ %546, %544 ]
  %535 = getelementptr inbounds %"class.v8::internal::compiler::InstructionBlock", %"class.v8::internal::compiler::InstructionBlock"* %534, i64 0, i32 4, i32 0
  %536 = load i32, i32* %535, align 4
  %537 = icmp slt i32 %536, %530
  br i1 %537, label %538, label %550

538:                                              ; preds = %533
  %539 = add nsw i32 %536, 1
  %540 = sext i32 %539 to i64
  %541 = icmp ugt i64 %531, %540
  br i1 %541, label %544, label %542

542:                                              ; preds = %538
  %543 = bitcast %"class.std::__1::vector.1171"* %521 to %"class.std::__1::__vector_base_common"*
  call void @_ZNKSt3__120__vector_base_commonILb1EE20__throw_out_of_rangeEv(%"class.std::__1::__vector_base_common"* %543) #17
  unreachable

544:                                              ; preds = %538
  %545 = getelementptr inbounds %"class.v8::internal::compiler::InstructionBlock"*, %"class.v8::internal::compiler::InstructionBlock"** %532, i64 %540
  %546 = load %"class.v8::internal::compiler::InstructionBlock"*, %"class.v8::internal::compiler::InstructionBlock"** %545, align 8
  %547 = getelementptr inbounds %"class.v8::internal::compiler::InstructionBlock", %"class.v8::internal::compiler::InstructionBlock"* %546, i64 0, i32 10
  %548 = load i8, i8* %547, align 4, !range !3
  %549 = icmp eq i8 %548, 0
  br i1 %549, label %550, label %533

550:                                              ; preds = %533, %544
  %551 = getelementptr inbounds %"class.v8::internal::compiler::InstructionBlock", %"class.v8::internal::compiler::InstructionBlock"* %534, i64 0, i32 9
  %552 = load i32, i32* %551, align 8
  %553 = shl i32 %552, 2
  %554 = add i32 %553, -4
  %555 = icmp slt i32 %554, %504
  %556 = select i1 %555, i32 %554, i32 %504
  br label %557

557:                                              ; preds = %550, %500
  %558 = phi i32 [ %556, %550 ], [ %504, %500 ]
  %559 = load %"class.v8::internal::compiler::LifetimePosition"*, %"class.v8::internal::compiler::LifetimePosition"** %105, align 8
  %560 = getelementptr inbounds %"class.v8::internal::compiler::LifetimePosition", %"class.v8::internal::compiler::LifetimePosition"* %559, i64 %478, i32 0
  %561 = load i32, i32* %560, align 4
  %562 = icmp slt i32 %561, %558
  %563 = and i32 %561, -2
  %564 = select i1 %562, i32 %563, i32 %558
  %565 = load %"class.v8::internal::compiler::UseInterval"*, %"class.v8::internal::compiler::UseInterval"** %9, align 8
  %566 = getelementptr inbounds %"class.v8::internal::compiler::UseInterval", %"class.v8::internal::compiler::UseInterval"* %565, i64 0, i32 0, i32 0
  %567 = load i32, i32* %566, align 8
  %568 = icmp eq i32 %564, %567
  br i1 %568, label %569, label %571

569:                                              ; preds = %557
  %570 = load i32, i32* %480, align 8
  call void @_ZN2v88internal8compiler19LinearScanAllocator17SpillBetweenUntilEPNS1_9LiveRangeENS1_16LifetimePositionES5_S5_NS1_29TopTierRegisterAllocationData9SpillModeE(%"class.v8::internal::compiler::LinearScanAllocator"* %0, %"class.v8::internal::compiler::LiveRange"* %1, i32 %564, i32 %564, i32 %570, i32 %2) #16
  br label %647

571:                                              ; preds = %557
  %572 = load %"class.v8::internal::compiler::UseInterval"*, %"class.v8::internal::compiler::UseInterval"** %501, align 8
  %573 = getelementptr inbounds %"class.v8::internal::compiler::UseInterval", %"class.v8::internal::compiler::UseInterval"* %572, i64 0, i32 1, i32 0
  %574 = load i32, i32* %573, align 4
  %575 = icmp eq i32 %564, %574
  br i1 %575, label %616, label %576

576:                                              ; preds = %571
  %577 = getelementptr inbounds %"class.v8::internal::compiler::LinearScanAllocator", %"class.v8::internal::compiler::LinearScanAllocator"* %0, i64 0, i32 0, i32 0
  %578 = load %"class.v8::internal::compiler::TopTierRegisterAllocationData"*, %"class.v8::internal::compiler::TopTierRegisterAllocationData"** %577, align 8
  %579 = getelementptr inbounds %"class.v8::internal::compiler::TopTierRegisterAllocationData", %"class.v8::internal::compiler::TopTierRegisterAllocationData"* %578, i64 0, i32 23, i32 0
  %580 = load i32, i32* %579, align 4
  %581 = and i32 %580, 1
  %582 = icmp eq i32 %581, 0
  br i1 %582, label %590, label %583

583:                                              ; preds = %576
  %584 = getelementptr inbounds %"class.v8::internal::compiler::LiveRange", %"class.v8::internal::compiler::LiveRange"* %1, i64 0, i32 5
  %585 = load %"class.v8::internal::compiler::TopLevelLiveRange"*, %"class.v8::internal::compiler::TopLevelLiveRange"** %584, align 8
  %586 = getelementptr inbounds %"class.v8::internal::compiler::TopLevelLiveRange", %"class.v8::internal::compiler::TopLevelLiveRange"* %585, i64 0, i32 1
  %587 = load i32, i32* %586, align 4
  %588 = getelementptr inbounds %"class.v8::internal::compiler::LiveRange", %"class.v8::internal::compiler::LiveRange"* %1, i64 0, i32 0
  %589 = load i32, i32* %588, align 8
  call void (i8*, ...) @_ZN2v88internal6PrintFEPKcz(i8* getelementptr inbounds ([57 x i8], [57 x i8]* @.str.52, i64 0, i64 0), i32 %587, i32 %589, i32 %567, i32 %564) #16
  br label %590

590:                                              ; preds = %576, %583
  %591 = call i32 @_ZN2v88internal8compiler17RegisterAllocator19FindOptimalSplitPosENS1_16LifetimePositionES3_(%"class.v8::internal::compiler::RegisterAllocator"* %130, i32 %567, i32 %564) #16
  %592 = call %"class.v8::internal::compiler::LiveRange"* @_ZN2v88internal8compiler17RegisterAllocator12SplitRangeAtEPNS1_9LiveRangeENS1_16LifetimePositionE(%"class.v8::internal::compiler::RegisterAllocator"* %130, %"class.v8::internal::compiler::LiveRange"* %1, i32 %591) #16
  %593 = bitcast %"class.v8::internal::compiler::LiveRange"** %4 to i8*
  call void @llvm.lifetime.start.p0i8(i64 8, i8* nonnull %593)
  store %"class.v8::internal::compiler::LiveRange"* %592, %"class.v8::internal::compiler::LiveRange"** %4, align 8
  %594 = icmp eq %"class.v8::internal::compiler::LiveRange"* %592, null
  br i1 %594, label %615, label %595

595:                                              ; preds = %590
  %596 = getelementptr inbounds %"class.v8::internal::compiler::LiveRange", %"class.v8::internal::compiler::LiveRange"* %592, i64 0, i32 3
  %597 = load %"class.v8::internal::compiler::UseInterval"*, %"class.v8::internal::compiler::UseInterval"** %596, align 8
  %598 = icmp eq %"class.v8::internal::compiler::UseInterval"* %597, null
  br i1 %598, label %615, label %599

599:                                              ; preds = %595
  %600 = load %"class.v8::internal::compiler::TopTierRegisterAllocationData"*, %"class.v8::internal::compiler::TopTierRegisterAllocationData"** %577, align 8
  %601 = getelementptr inbounds %"class.v8::internal::compiler::TopTierRegisterAllocationData", %"class.v8::internal::compiler::TopTierRegisterAllocationData"* %600, i64 0, i32 23, i32 0
  %602 = load i32, i32* %601, align 4
  %603 = and i32 %602, 1
  %604 = icmp eq i32 %603, 0
  br i1 %604, label %612, label %605

605:                                              ; preds = %599
  %606 = getelementptr inbounds %"class.v8::internal::compiler::LiveRange", %"class.v8::internal::compiler::LiveRange"* %592, i64 0, i32 5
  %607 = load %"class.v8::internal::compiler::TopLevelLiveRange"*, %"class.v8::internal::compiler::TopLevelLiveRange"** %606, align 8
  %608 = getelementptr inbounds %"class.v8::internal::compiler::TopLevelLiveRange", %"class.v8::internal::compiler::TopLevelLiveRange"* %607, i64 0, i32 1
  %609 = load i32, i32* %608, align 4
  %610 = getelementptr inbounds %"class.v8::internal::compiler::LiveRange", %"class.v8::internal::compiler::LiveRange"* %592, i64 0, i32 0
  %611 = load i32, i32* %610, align 8
  call void (i8*, ...) @_ZN2v88internal6PrintFEPKcz(i8* getelementptr inbounds ([35 x i8], [35 x i8]* @.str.80, i64 0, i64 0), i32 %609, i32 %611) #16
  br label %612

612:                                              ; preds = %605, %599
  %613 = getelementptr inbounds %"class.v8::internal::compiler::LinearScanAllocator", %"class.v8::internal::compiler::LinearScanAllocator"* %0, i64 0, i32 1, i32 0, i32 0
  %614 = call %"class.std::__1::__tree_end_node"* @_ZNSt3__16__treeIPN2v88internal8compiler9LiveRangeENS3_19LinearScanAllocator26UnhandledLiveRangeOrderingENS2_13ZoneAllocatorIS5_EEE15__emplace_multiIJRKS5_EEENS_15__tree_iteratorIS5_PNS_11__tree_nodeIS5_PvEElEEDpOT_(%"class.std::__1::__tree.1338"* %613, %"class.v8::internal::compiler::LiveRange"** nonnull dereferenceable(8) %4) #16
  br label %615

615:                                              ; preds = %590, %595, %612
  call void @llvm.lifetime.end.p0i8(i64 8, i8* nonnull %593)
  br label %616

616:                                              ; preds = %571, %615
  %617 = getelementptr inbounds %"class.v8::internal::compiler::LinearScanAllocator", %"class.v8::internal::compiler::LinearScanAllocator"* %0, i64 0, i32 0, i32 0
  %618 = load %"class.v8::internal::compiler::TopTierRegisterAllocationData"*, %"class.v8::internal::compiler::TopTierRegisterAllocationData"** %617, align 8
  %619 = getelementptr inbounds %"class.v8::internal::compiler::TopTierRegisterAllocationData", %"class.v8::internal::compiler::TopTierRegisterAllocationData"* %618, i64 0, i32 23, i32 0
  %620 = load i32, i32* %619, align 4
  %621 = and i32 %620, 1
  %622 = icmp eq i32 %621, 0
  br i1 %622, label %646, label %623

623:                                              ; preds = %616
  %624 = icmp eq i32 %477, 32
  br i1 %624, label %638, label %625

625:                                              ; preds = %623
  %626 = getelementptr inbounds %"class.v8::internal::compiler::LinearScanAllocator", %"class.v8::internal::compiler::LinearScanAllocator"* %0, i64 0, i32 0, i32 1
  %627 = load i32, i32* %626, align 8
  %628 = icmp eq i32 %627, 0
  %629 = icmp eq i32 %477, -1
  br i1 %628, label %630, label %634

630:                                              ; preds = %625
  br i1 %629, label %638, label %631

631:                                              ; preds = %630
  %632 = getelementptr inbounds [16 x i8*], [16 x i8*]* @_ZZN2v88internal12RegisterNameENS0_8RegisterEE5Names, i64 0, i64 %478
  %633 = load i8*, i8** %632, align 8
  br label %638

634:                                              ; preds = %625
  br i1 %629, label %638, label %635

635:                                              ; preds = %634
  %636 = getelementptr inbounds [16 x i8*], [16 x i8*]* @_ZZN2v88internal12RegisterNameENS0_11XMMRegisterEE5Names, i64 0, i64 %478
  %637 = load i8*, i8** %636, align 8
  br label %638

638:                                              ; preds = %623, %630, %631, %634, %635
  %639 = phi i8* [ getelementptr inbounds ([11 x i8], [11 x i8]* @.str.58, i64 0, i64 0), %623 ], [ %633, %631 ], [ getelementptr inbounds ([8 x i8], [8 x i8]* @.str.123, i64 0, i64 0), %630 ], [ %637, %635 ], [ getelementptr inbounds ([8 x i8], [8 x i8]* @.str.123, i64 0, i64 0), %634 ]
  %640 = getelementptr inbounds %"class.v8::internal::compiler::LiveRange", %"class.v8::internal::compiler::LiveRange"* %1, i64 0, i32 5
  %641 = load %"class.v8::internal::compiler::TopLevelLiveRange"*, %"class.v8::internal::compiler::TopLevelLiveRange"** %640, align 8
  %642 = getelementptr inbounds %"class.v8::internal::compiler::TopLevelLiveRange", %"class.v8::internal::compiler::TopLevelLiveRange"* %641, i64 0, i32 1
  %643 = load i32, i32* %642, align 4
  %644 = getelementptr inbounds %"class.v8::internal::compiler::LiveRange", %"class.v8::internal::compiler::LiveRange"* %1, i64 0, i32 0
  %645 = load i32, i32* %644, align 8
  call void (i8*, ...) @_ZN2v88internal6PrintFEPKcz(i8* getelementptr inbounds ([46 x i8], [46 x i8]* @.str.92, i64 0, i64 0), i8* %639, i32 %643, i32 %645) #16
  br label %646

646:                                              ; preds = %616, %638
  call void @_ZN2v88internal8compiler19LinearScanAllocator28SetLiveRangeAssignedRegisterEPNS1_9LiveRangeEi(%"class.v8::internal::compiler::LinearScanAllocator"* %0, %"class.v8::internal::compiler::LiveRange"* %1, i32 %477)
  call void @_ZN2v88internal8compiler19LinearScanAllocator25SplitAndSpillIntersectingEPNS1_9LiveRangeENS1_29TopTierRegisterAllocationData9SpillModeE(%"class.v8::internal::compiler::LinearScanAllocator"* %0, %"class.v8::internal::compiler::LiveRange"* %1, i32 %2)
  br label %647

647:                                              ; preds = %569, %646, %499
  call void @llvm.lifetime.end.p0i8(i64 144, i8* nonnull %103) #16
  call void @llvm.lifetime.end.p0i8(i64 144, i8* nonnull %82) #16
  br label %648

648:                                              ; preds = %647, %78
  ret void
}

; Function Attrs: nounwind ssp uwtable
define hidden i32 @_ZN2v88internal8compiler19LinearScanAllocator34PickRegisterThatIsAvailableLongestEPNS1_9LiveRangeEiRKNS0_6VectorINS1_16LifetimePositionEEE(%"class.v8::internal::compiler::LinearScanAllocator"* nocapture readonly, %"class.v8::internal::compiler::LiveRange"* nocapture readonly, i32, %"class.v8::internal::Vector.1438"* nocapture readonly dereferenceable(16)) local_unnamed_addr #0 align 2 {
  %5 = getelementptr inbounds %"class.v8::internal::compiler::LinearScanAllocator", %"class.v8::internal::compiler::LinearScanAllocator"* %0, i64 0, i32 0, i32 3
  %6 = load i32, i32* %5, align 8
  %7 = getelementptr inbounds %"class.v8::internal::compiler::LinearScanAllocator", %"class.v8::internal::compiler::LinearScanAllocator"* %0, i64 0, i32 0, i32 5
  %8 = load i32*, i32** %7, align 8
  %9 = getelementptr inbounds %"class.v8::internal::compiler::LiveRange", %"class.v8::internal::compiler::LiveRange"* %1, i64 0, i32 1
  %10 = icmp eq i32 %2, 32
  br i1 %10, label %11, label %13

11:                                               ; preds = %4
  %12 = load i32, i32* %8, align 4
  br label %13

13:                                               ; preds = %4, %11
  %14 = phi i32 [ %12, %11 ], [ %2, %4 ]
  %15 = getelementptr inbounds %"class.v8::internal::Vector.1438", %"class.v8::internal::Vector.1438"* %3, i64 0, i32 0
  %16 = icmp sgt i32 %6, 0
  br i1 %16, label %17, label %26

17:                                               ; preds = %13
  %18 = load %"class.v8::internal::compiler::LifetimePosition"*, %"class.v8::internal::compiler::LifetimePosition"** %15, align 8
  %19 = sext i32 %14 to i64
  %20 = getelementptr inbounds %"class.v8::internal::compiler::LifetimePosition", %"class.v8::internal::compiler::LifetimePosition"* %18, i64 %19, i32 0
  %21 = load i32, i32* %20, align 4
  %22 = sdiv i32 %21, 4
  %23 = getelementptr inbounds %"class.v8::internal::compiler::LinearScanAllocator", %"class.v8::internal::compiler::LinearScanAllocator"* %0, i64 0, i32 0, i32 0
  %24 = getelementptr inbounds %"class.v8::internal::compiler::LinearScanAllocator", %"class.v8::internal::compiler::LinearScanAllocator"* %0, i64 0, i32 0, i32 1
  %25 = zext i32 %6 to i64
  br label %28

26:                                               ; preds = %179, %13
  %27 = phi i32 [ %14, %13 ], [ %181, %179 ]
  ret i32 %27

28:                                               ; preds = %184, %17
  %29 = phi %"class.v8::internal::compiler::LifetimePosition"* [ %18, %17 ], [ %185, %184 ]
  %30 = phi i64 [ 0, %17 ], [ %182, %184 ]
  %31 = phi i32 [ %14, %17 ], [ %181, %184 ]
  %32 = phi i32 [ %22, %17 ], [ %180, %184 ]
  %33 = getelementptr inbounds i32, i32* %8, i64 %30
  %34 = load i32, i32* %33, align 4
  %35 = sext i32 %34 to i64
  %36 = getelementptr inbounds %"class.v8::internal::compiler::LifetimePosition", %"class.v8::internal::compiler::LifetimePosition"* %29, i64 %35, i32 0
  %37 = load i32, i32* %36, align 4
  %38 = sdiv i32 %37, 4
  %39 = load %"class.v8::internal::compiler::TopTierRegisterAllocationData"*, %"class.v8::internal::compiler::TopTierRegisterAllocationData"** %23, align 8
  %40 = getelementptr inbounds %"class.v8::internal::compiler::TopTierRegisterAllocationData", %"class.v8::internal::compiler::TopTierRegisterAllocationData"* %39, i64 0, i32 23, i32 0
  %41 = load i32, i32* %40, align 4
  %42 = and i32 %41, 1
  %43 = icmp eq i32 %42, 0
  br i1 %43, label %60, label %44

44:                                               ; preds = %28
  %45 = icmp eq i32 %34, 32
  br i1 %45, label %58, label %46

46:                                               ; preds = %44
  %47 = load i32, i32* %24, align 8
  %48 = icmp eq i32 %47, 0
  %49 = icmp eq i32 %34, -1
  br i1 %48, label %50, label %54

50:                                               ; preds = %46
  br i1 %49, label %58, label %51

51:                                               ; preds = %50
  %52 = getelementptr inbounds [16 x i8*], [16 x i8*]* @_ZZN2v88internal12RegisterNameENS0_8RegisterEE5Names, i64 0, i64 %35
  %53 = load i8*, i8** %52, align 8
  br label %58

54:                                               ; preds = %46
  br i1 %49, label %58, label %55

55:                                               ; preds = %54
  %56 = getelementptr inbounds [16 x i8*], [16 x i8*]* @_ZZN2v88internal12RegisterNameENS0_11XMMRegisterEE5Names, i64 0, i64 %35
  %57 = load i8*, i8** %56, align 8
  br label %58

58:                                               ; preds = %44, %50, %51, %54, %55
  %59 = phi i8* [ getelementptr inbounds ([11 x i8], [11 x i8]* @.str.58, i64 0, i64 0), %44 ], [ %53, %51 ], [ getelementptr inbounds ([8 x i8], [8 x i8]* @.str.123, i64 0, i64 0), %50 ], [ %57, %55 ], [ getelementptr inbounds ([8 x i8], [8 x i8]* @.str.123, i64 0, i64 0), %54 ]
  tail call void (i8*, ...) @_ZN2v88internal6PrintFEPKcz(i8* getelementptr inbounds ([30 x i8], [30 x i8]* @.str.90, i64 0, i64 0), i8* %59, i32 %38) #16
  br label %60

60:                                               ; preds = %28, %58
  %61 = icmp sgt i32 %38, %32
  br i1 %61, label %178, label %62

62:                                               ; preds = %60
  %63 = icmp ne i32 %38, %32
  %64 = icmp eq i32 %31, %2
  %65 = or i1 %64, %63
  br i1 %65, label %179, label %66

66:                                               ; preds = %62
  %67 = load %"class.v8::internal::compiler::TopTierRegisterAllocationData"*, %"class.v8::internal::compiler::TopTierRegisterAllocationData"** %23, align 8
  %68 = load i32, i32* %9, align 4
  %69 = lshr i32 %68, 13
  %70 = trunc i32 %69 to i8
  switch i8 %70, label %101 [
    i8 12, label %71
    i8 14, label %71
    i8 13, label %86
  ]

71:                                               ; preds = %66, %66
  %72 = getelementptr inbounds %"class.v8::internal::compiler::TopTierRegisterAllocationData", %"class.v8::internal::compiler::TopTierRegisterAllocationData"* %67, i64 0, i32 19
  %73 = load %"class.v8::internal::BitVector"*, %"class.v8::internal::BitVector"** %72, align 8
  %74 = getelementptr inbounds %"class.v8::internal::BitVector", %"class.v8::internal::BitVector"* %73, i64 0, i32 1
  %75 = load i32, i32* %74, align 4
  %76 = icmp eq i32 %75, 1
  %77 = getelementptr inbounds %"class.v8::internal::BitVector", %"class.v8::internal::BitVector"* %73, i64 0, i32 2
  br i1 %76, label %78, label %80

78:                                               ; preds = %71
  %79 = bitcast %"union.v8::internal::BitVector::DataStorage"* %77 to i64*
  br label %116

80:                                               ; preds = %71
  %81 = getelementptr inbounds %"union.v8::internal::BitVector::DataStorage", %"union.v8::internal::BitVector::DataStorage"* %77, i64 0, i32 0
  %82 = load i64*, i64** %81, align 8
  %83 = sdiv i32 %31, 64
  %84 = sext i32 %83 to i64
  %85 = getelementptr inbounds i64, i64* %82, i64 %84
  br label %116

86:                                               ; preds = %66
  %87 = getelementptr inbounds %"class.v8::internal::compiler::TopTierRegisterAllocationData", %"class.v8::internal::compiler::TopTierRegisterAllocationData"* %67, i64 0, i32 19
  %88 = load %"class.v8::internal::BitVector"*, %"class.v8::internal::BitVector"** %87, align 8
  %89 = getelementptr inbounds %"class.v8::internal::BitVector", %"class.v8::internal::BitVector"* %88, i64 0, i32 1
  %90 = load i32, i32* %89, align 4
  %91 = icmp eq i32 %90, 1
  %92 = getelementptr inbounds %"class.v8::internal::BitVector", %"class.v8::internal::BitVector"* %88, i64 0, i32 2
  br i1 %91, label %93, label %95

93:                                               ; preds = %86
  %94 = bitcast %"union.v8::internal::BitVector::DataStorage"* %92 to i64*
  br label %116

95:                                               ; preds = %86
  %96 = getelementptr inbounds %"union.v8::internal::BitVector::DataStorage", %"union.v8::internal::BitVector::DataStorage"* %92, i64 0, i32 0
  %97 = load i64*, i64** %96, align 8
  %98 = sdiv i32 %31, 64
  %99 = sext i32 %98 to i64
  %100 = getelementptr inbounds i64, i64* %97, i64 %99
  br label %116

101:                                              ; preds = %66
  %102 = getelementptr inbounds %"class.v8::internal::compiler::TopTierRegisterAllocationData", %"class.v8::internal::compiler::TopTierRegisterAllocationData"* %67, i64 0, i32 18
  %103 = load %"class.v8::internal::BitVector"*, %"class.v8::internal::BitVector"** %102, align 8
  %104 = getelementptr inbounds %"class.v8::internal::BitVector", %"class.v8::internal::BitVector"* %103, i64 0, i32 1
  %105 = load i32, i32* %104, align 4
  %106 = icmp eq i32 %105, 1
  %107 = getelementptr inbounds %"class.v8::internal::BitVector", %"class.v8::internal::BitVector"* %103, i64 0, i32 2
  br i1 %106, label %108, label %110

108:                                              ; preds = %101
  %109 = bitcast %"union.v8::internal::BitVector::DataStorage"* %107 to i64*
  br label %116

110:                                              ; preds = %101
  %111 = getelementptr inbounds %"union.v8::internal::BitVector::DataStorage", %"union.v8::internal::BitVector::DataStorage"* %107, i64 0, i32 0
  %112 = load i64*, i64** %111, align 8
  %113 = sdiv i32 %31, 64
  %114 = sext i32 %113 to i64
  %115 = getelementptr inbounds i64, i64* %112, i64 %114
  br label %116

116:                                              ; preds = %108, %110, %93, %95, %78, %80
  %117 = phi i64* [ %79, %78 ], [ %85, %80 ], [ %94, %93 ], [ %100, %95 ], [ %109, %108 ], [ %115, %110 ]
  %118 = load i64, i64* %117, align 8
  %119 = srem i32 %31, 64
  %120 = zext i32 %119 to i64
  %121 = shl i64 1, %120
  %122 = and i64 %118, %121
  %123 = icmp eq i64 %122, 0
  br i1 %123, label %179, label %124

124:                                              ; preds = %116
  switch i8 %70, label %155 [
    i8 12, label %125
    i8 14, label %125
    i8 13, label %140
  ]

125:                                              ; preds = %124, %124
  %126 = getelementptr inbounds %"class.v8::internal::compiler::TopTierRegisterAllocationData", %"class.v8::internal::compiler::TopTierRegisterAllocationData"* %67, i64 0, i32 19
  %127 = load %"class.v8::internal::BitVector"*, %"class.v8::internal::BitVector"** %126, align 8
  %128 = getelementptr inbounds %"class.v8::internal::BitVector", %"class.v8::internal::BitVector"* %127, i64 0, i32 1
  %129 = load i32, i32* %128, align 4
  %130 = icmp eq i32 %129, 1
  %131 = getelementptr inbounds %"class.v8::internal::BitVector", %"class.v8::internal::BitVector"* %127, i64 0, i32 2
  br i1 %130, label %132, label %134

132:                                              ; preds = %125
  %133 = bitcast %"union.v8::internal::BitVector::DataStorage"* %131 to i64*
  br label %170

134:                                              ; preds = %125
  %135 = getelementptr inbounds %"union.v8::internal::BitVector::DataStorage", %"union.v8::internal::BitVector::DataStorage"* %131, i64 0, i32 0
  %136 = load i64*, i64** %135, align 8
  %137 = sdiv i32 %34, 64
  %138 = sext i32 %137 to i64
  %139 = getelementptr inbounds i64, i64* %136, i64 %138
  br label %170

140:                                              ; preds = %124
  %141 = getelementptr inbounds %"class.v8::internal::compiler::TopTierRegisterAllocationData", %"class.v8::internal::compiler::TopTierRegisterAllocationData"* %67, i64 0, i32 19
  %142 = load %"class.v8::internal::BitVector"*, %"class.v8::internal::BitVector"** %141, align 8
  %143 = getelementptr inbounds %"class.v8::internal::BitVector", %"class.v8::internal::BitVector"* %142, i64 0, i32 1
  %144 = load i32, i32* %143, align 4
  %145 = icmp eq i32 %144, 1
  %146 = getelementptr inbounds %"class.v8::internal::BitVector", %"class.v8::internal::BitVector"* %142, i64 0, i32 2
  br i1 %145, label %147, label %149

147:                                              ; preds = %140
  %148 = bitcast %"union.v8::internal::BitVector::DataStorage"* %146 to i64*
  br label %170

149:                                              ; preds = %140
  %150 = getelementptr inbounds %"union.v8::internal::BitVector::DataStorage", %"union.v8::internal::BitVector::DataStorage"* %146, i64 0, i32 0
  %151 = load i64*, i64** %150, align 8
  %152 = sdiv i32 %34, 64
  %153 = sext i32 %152 to i64
  %154 = getelementptr inbounds i64, i64* %151, i64 %153
  br label %170

155:                                              ; preds = %124
  %156 = getelementptr inbounds %"class.v8::internal::compiler::TopTierRegisterAllocationData", %"class.v8::internal::compiler::TopTierRegisterAllocationData"* %67, i64 0, i32 18
  %157 = load %"class.v8::internal::BitVector"*, %"class.v8::internal::BitVector"** %156, align 8
  %158 = getelementptr inbounds %"class.v8::internal::BitVector", %"class.v8::internal::BitVector"* %157, i64 0, i32 1
  %159 = load i32, i32* %158, align 4
  %160 = icmp eq i32 %159, 1
  %161 = getelementptr inbounds %"class.v8::internal::BitVector", %"class.v8::internal::BitVector"* %157, i64 0, i32 2
  br i1 %160, label %162, label %164

162:                                              ; preds = %155
  %163 = bitcast %"union.v8::internal::BitVector::DataStorage"* %161 to i64*
  br label %170

164:                                              ; preds = %155
  %165 = getelementptr inbounds %"union.v8::internal::BitVector::DataStorage", %"union.v8::internal::BitVector::DataStorage"* %161, i64 0, i32 0
  %166 = load i64*, i64** %165, align 8
  %167 = sdiv i32 %34, 64
  %168 = sext i32 %167 to i64
  %169 = getelementptr inbounds i64, i64* %166, i64 %168
  br label %170

170:                                              ; preds = %162, %164, %147, %149, %132, %134
  %171 = phi i64* [ %133, %132 ], [ %139, %134 ], [ %148, %147 ], [ %154, %149 ], [ %163, %162 ], [ %169, %164 ]
  %172 = load i64, i64* %171, align 8
  %173 = srem i32 %34, 64
  %174 = zext i32 %173 to i64
  %175 = shl i64 1, %174
  %176 = and i64 %172, %175
  %177 = icmp eq i64 %176, 0
  br i1 %177, label %178, label %179

178:                                              ; preds = %170, %60
  br label %179

179:                                              ; preds = %170, %116, %62, %178
  %180 = phi i32 [ %38, %178 ], [ %32, %170 ], [ %32, %116 ], [ %32, %62 ]
  %181 = phi i32 [ %34, %178 ], [ %31, %170 ], [ %31, %116 ], [ %31, %62 ]
  %182 = add nuw nsw i64 %30, 1
  %183 = icmp eq i64 %182, %25
  br i1 %183, label %26, label %184

184:                                              ; preds = %179
  %185 = load %"class.v8::internal::compiler::LifetimePosition"*, %"class.v8::internal::compiler::LifetimePosition"** %15, align 8
  br label %28
}

; Function Attrs: nounwind ssp uwtable
define hidden void @_ZN2v88internal8compiler19LinearScanAllocator12SpillBetweenEPNS1_9LiveRangeENS1_16LifetimePositionES5_NS1_29TopTierRegisterAllocationData9SpillModeE(%"class.v8::internal::compiler::LinearScanAllocator"*, %"class.v8::internal::compiler::LiveRange"*, i32, i32, i32) local_unnamed_addr #0 align 2 {
  tail call void @_ZN2v88internal8compiler19LinearScanAllocator17SpillBetweenUntilEPNS1_9LiveRangeENS1_16LifetimePositionES5_S5_NS1_29TopTierRegisterAllocationData9SpillModeE(%"class.v8::internal::compiler::LinearScanAllocator"* %0, %"class.v8::internal::compiler::LiveRange"* %1, i32 %2, i32 %2, i32 %3, i32 %4)
  ret void
}

; Function Attrs: nounwind ssp uwtable
define hidden void @_ZN2v88internal8compiler19LinearScanAllocator25SplitAndSpillIntersectingEPNS1_9LiveRangeENS1_29TopTierRegisterAllocationData9SpillModeE(%"class.v8::internal::compiler::LinearScanAllocator"*, %"class.v8::internal::compiler::LiveRange"* nocapture readonly, i32) local_unnamed_addr #0 align 2 {
  %4 = alloca %"class.v8::internal::compiler::LiveRange"*, align 8
  %5 = getelementptr inbounds %"class.v8::internal::compiler::LiveRange", %"class.v8::internal::compiler::LiveRange"* %1, i64 0, i32 1
  %6 = load i32, i32* %5, align 4
  %7 = lshr i32 %6, 7
  %8 = and i32 %7, 63
  %9 = getelementptr inbounds %"class.v8::internal::compiler::LiveRange", %"class.v8::internal::compiler::LiveRange"* %1, i64 0, i32 3
  %10 = load %"class.v8::internal::compiler::UseInterval"*, %"class.v8::internal::compiler::UseInterval"** %9, align 8
  %11 = getelementptr inbounds %"class.v8::internal::compiler::UseInterval", %"class.v8::internal::compiler::UseInterval"* %10, i64 0, i32 0, i32 0
  %12 = load i32, i32* %11, align 8
  %13 = getelementptr inbounds %"class.v8::internal::compiler::LinearScanAllocator", %"class.v8::internal::compiler::LinearScanAllocator"* %0, i64 0, i32 2, i32 0, i32 0, i32 0
  %14 = load %"class.v8::internal::compiler::LiveRange"**, %"class.v8::internal::compiler::LiveRange"*** %13, align 8
  %15 = getelementptr inbounds %"class.v8::internal::compiler::LinearScanAllocator", %"class.v8::internal::compiler::LinearScanAllocator"* %0, i64 0, i32 2, i32 0, i32 0, i32 1
  %16 = load %"class.v8::internal::compiler::LiveRange"**, %"class.v8::internal::compiler::LiveRange"*** %15, align 8
  %17 = icmp eq %"class.v8::internal::compiler::LiveRange"** %14, %16
  br i1 %17, label %18, label %20

18:                                               ; preds = %3
  %19 = bitcast %"class.v8::internal::compiler::LinearScanAllocator"* %0 to %"class.v8::internal::compiler::RegisterAllocator"*
  br label %25

20:                                               ; preds = %3
  %21 = bitcast %"class.v8::internal::compiler::LiveRange"** %4 to i8*
  %22 = bitcast %"class.v8::internal::compiler::LinearScanAllocator"* %0 to %"class.v8::internal::compiler::RegisterAllocator"*
  %23 = getelementptr inbounds %"class.v8::internal::compiler::LinearScanAllocator", %"class.v8::internal::compiler::LinearScanAllocator"* %0, i64 0, i32 0, i32 0
  %24 = bitcast %"class.v8::internal::compiler::LiveRange"*** %15 to i64*
  br label %35

25:                                               ; preds = %149, %18
  %26 = phi %"class.v8::internal::compiler::RegisterAllocator"* [ %19, %18 ], [ %22, %149 ]
  %27 = getelementptr inbounds %"class.v8::internal::compiler::LinearScanAllocator", %"class.v8::internal::compiler::LinearScanAllocator"* %0, i64 0, i32 0, i32 2
  %28 = load i32, i32* %27, align 4
  %29 = icmp sgt i32 %28, 0
  br i1 %29, label %30, label %153

30:                                               ; preds = %25
  %31 = getelementptr inbounds %"class.v8::internal::compiler::LinearScanAllocator", %"class.v8::internal::compiler::LinearScanAllocator"* %0, i64 0, i32 3, i32 0, i32 0, i32 0
  %32 = getelementptr inbounds %"class.v8::internal::compiler::LiveRange", %"class.v8::internal::compiler::LiveRange"* %1, i64 0, i32 2
  %33 = getelementptr inbounds %"class.v8::internal::compiler::LinearScanAllocator", %"class.v8::internal::compiler::LinearScanAllocator"* %0, i64 0, i32 0, i32 0
  %34 = zext i32 %8 to i64
  br label %154

35:                                               ; preds = %20, %149
  %36 = phi %"class.v8::internal::compiler::LiveRange"** [ %16, %20 ], [ %150, %149 ]
  %37 = phi %"class.v8::internal::compiler::LiveRange"** [ %14, %20 ], [ %151, %149 ]
  %38 = load %"class.v8::internal::compiler::LiveRange"*, %"class.v8::internal::compiler::LiveRange"** %37, align 8
  %39 = getelementptr inbounds %"class.v8::internal::compiler::LiveRange", %"class.v8::internal::compiler::LiveRange"* %38, i64 0, i32 1
  %40 = load i32, i32* %39, align 4
  %41 = lshr i32 %40, 7
  %42 = and i32 %41, 63
  %43 = icmp eq i32 %42, %8
  br i1 %43, label %46, label %44

44:                                               ; preds = %35
  %45 = getelementptr inbounds %"class.v8::internal::compiler::LiveRange"*, %"class.v8::internal::compiler::LiveRange"** %37, i64 1
  br label %149

46:                                               ; preds = %35
  %47 = load %"class.v8::internal::compiler::UseInterval"*, %"class.v8::internal::compiler::UseInterval"** %9, align 8
  %48 = getelementptr inbounds %"class.v8::internal::compiler::UseInterval", %"class.v8::internal::compiler::UseInterval"* %47, i64 0, i32 0, i32 0
  %49 = load i32, i32* %48, align 8
  %50 = getelementptr inbounds %"class.v8::internal::compiler::LiveRange", %"class.v8::internal::compiler::LiveRange"* %38, i64 0, i32 8
  %51 = load %"class.v8::internal::compiler::UsePosition"*, %"class.v8::internal::compiler::UsePosition"** %50, align 8
  %52 = icmp eq %"class.v8::internal::compiler::UsePosition"* %51, null
  br i1 %52, label %57, label %53

53:                                               ; preds = %46
  %54 = getelementptr inbounds %"class.v8::internal::compiler::UsePosition", %"class.v8::internal::compiler::UsePosition"* %51, i64 0, i32 3, i32 0
  %55 = load i32, i32* %54, align 8
  %56 = icmp sgt i32 %55, %49
  br i1 %56, label %57, label %61

57:                                               ; preds = %53, %46
  %58 = getelementptr inbounds %"class.v8::internal::compiler::LiveRange", %"class.v8::internal::compiler::LiveRange"* %38, i64 0, i32 4
  %59 = load %"class.v8::internal::compiler::UsePosition"*, %"class.v8::internal::compiler::UsePosition"** %58, align 8
  %60 = icmp eq %"class.v8::internal::compiler::UsePosition"* %59, null
  br i1 %60, label %72, label %61

61:                                               ; preds = %57, %53
  %62 = phi %"class.v8::internal::compiler::UsePosition"* [ %51, %53 ], [ %59, %57 ]
  br label %63

63:                                               ; preds = %61, %68
  %64 = phi %"class.v8::internal::compiler::UsePosition"* [ %70, %68 ], [ %62, %61 ]
  %65 = getelementptr inbounds %"class.v8::internal::compiler::UsePosition", %"class.v8::internal::compiler::UsePosition"* %64, i64 0, i32 3, i32 0
  %66 = load i32, i32* %65, align 8
  %67 = icmp slt i32 %66, %49
  br i1 %67, label %68, label %73

68:                                               ; preds = %63
  %69 = getelementptr inbounds %"class.v8::internal::compiler::UsePosition", %"class.v8::internal::compiler::UsePosition"* %64, i64 0, i32 2
  %70 = load %"class.v8::internal::compiler::UsePosition"*, %"class.v8::internal::compiler::UsePosition"** %69, align 8
  %71 = icmp eq %"class.v8::internal::compiler::UsePosition"* %70, null
  br i1 %71, label %72, label %63

72:                                               ; preds = %68, %57
  store %"class.v8::internal::compiler::UsePosition"* null, %"class.v8::internal::compiler::UsePosition"** %50, align 8
  br label %84

73:                                               ; preds = %63
  store %"class.v8::internal::compiler::UsePosition"* %64, %"class.v8::internal::compiler::UsePosition"** %50, align 8
  br label %74

74:                                               ; preds = %80, %73
  %75 = phi %"class.v8::internal::compiler::UsePosition"* [ %82, %80 ], [ %64, %73 ]
  %76 = getelementptr inbounds %"class.v8::internal::compiler::UsePosition", %"class.v8::internal::compiler::UsePosition"* %75, i64 0, i32 4
  %77 = load i32, i32* %76, align 4
  %78 = and i32 %77, 3
  %79 = icmp eq i32 %78, 2
  br i1 %79, label %84, label %80

80:                                               ; preds = %74
  %81 = getelementptr inbounds %"class.v8::internal::compiler::UsePosition", %"class.v8::internal::compiler::UsePosition"* %75, i64 0, i32 2
  %82 = load %"class.v8::internal::compiler::UsePosition"*, %"class.v8::internal::compiler::UsePosition"** %81, align 8
  %83 = icmp eq %"class.v8::internal::compiler::UsePosition"* %82, null
  br i1 %83, label %84, label %74

84:                                               ; preds = %74, %80, %72
  %85 = phi %"class.v8::internal::compiler::UsePosition"* [ null, %72 ], [ null, %80 ], [ %75, %74 ]
  call void @llvm.lifetime.start.p0i8(i64 8, i8* nonnull %21) #16
  store %"class.v8::internal::compiler::LiveRange"* null, %"class.v8::internal::compiler::LiveRange"** %4, align 8
  %86 = call i32 @_ZN2v88internal8compiler17RegisterAllocator22FindOptimalSpillingPosEPNS1_9LiveRangeENS1_16LifetimePositionENS1_29TopTierRegisterAllocationData9SpillModeEPS4_(%"class.v8::internal::compiler::RegisterAllocator"* %22, %"class.v8::internal::compiler::LiveRange"* %38, i32 %12, i32 %2, %"class.v8::internal::compiler::LiveRange"** nonnull %4)
  %87 = load %"class.v8::internal::compiler::LiveRange"*, %"class.v8::internal::compiler::LiveRange"** %4, align 8
  %88 = icmp eq %"class.v8::internal::compiler::LiveRange"* %87, %38
  br i1 %88, label %113, label %89

89:                                               ; preds = %84
  %90 = getelementptr inbounds %"class.v8::internal::compiler::LiveRange", %"class.v8::internal::compiler::LiveRange"* %87, i64 0, i32 1
  %91 = load i32, i32* %90, align 4
  %92 = and i32 %91, 1
  %93 = icmp eq i32 %92, 0
  br i1 %93, label %94, label %96

94:                                               ; preds = %89
  %95 = tail call %"class.v8::internal::compiler::LiveRange"* @_ZN2v88internal8compiler17RegisterAllocator12SplitRangeAtEPNS1_9LiveRangeENS1_16LifetimePositionE(%"class.v8::internal::compiler::RegisterAllocator"* %22, %"class.v8::internal::compiler::LiveRange"* %87, i32 %86) #16
  tail call void @_ZN2v88internal8compiler17RegisterAllocator5SpillEPNS1_9LiveRangeENS1_29TopTierRegisterAllocationData9SpillModeE(%"class.v8::internal::compiler::RegisterAllocator"* %22, %"class.v8::internal::compiler::LiveRange"* %95, i32 0) #16
  br label %96

96:                                               ; preds = %94, %89
  %97 = getelementptr inbounds %"class.v8::internal::compiler::LiveRange", %"class.v8::internal::compiler::LiveRange"* %87, i64 0, i32 6
  %98 = load %"class.v8::internal::compiler::LiveRange"*, %"class.v8::internal::compiler::LiveRange"** %97, align 8
  %99 = icmp eq %"class.v8::internal::compiler::LiveRange"* %98, %38
  br i1 %99, label %113, label %100

100:                                              ; preds = %96, %109
  %101 = phi %"class.v8::internal::compiler::LiveRange"* [ %111, %109 ], [ %98, %96 ]
  %102 = getelementptr inbounds %"class.v8::internal::compiler::LiveRange", %"class.v8::internal::compiler::LiveRange"* %101, i64 0, i32 1
  %103 = load i32, i32* %102, align 4
  %104 = and i32 %103, 1
  %105 = icmp eq i32 %104, 0
  br i1 %105, label %106, label %109

106:                                              ; preds = %100
  %107 = and i32 %103, -8066
  %108 = or i32 %107, 4097
  store i32 %108, i32* %102, align 4
  br label %109

109:                                              ; preds = %106, %100
  %110 = getelementptr inbounds %"class.v8::internal::compiler::LiveRange", %"class.v8::internal::compiler::LiveRange"* %101, i64 0, i32 6
  %111 = load %"class.v8::internal::compiler::LiveRange"*, %"class.v8::internal::compiler::LiveRange"** %110, align 8
  %112 = icmp eq %"class.v8::internal::compiler::LiveRange"* %111, %38
  br i1 %112, label %113, label %100

113:                                              ; preds = %109, %84, %96
  %114 = icmp eq %"class.v8::internal::compiler::UsePosition"* %85, null
  br i1 %114, label %115, label %117

115:                                              ; preds = %113
  %116 = tail call %"class.v8::internal::compiler::LiveRange"* @_ZN2v88internal8compiler17RegisterAllocator12SplitRangeAtEPNS1_9LiveRangeENS1_16LifetimePositionE(%"class.v8::internal::compiler::RegisterAllocator"* %22, %"class.v8::internal::compiler::LiveRange"* %38, i32 %86) #16
  tail call void @_ZN2v88internal8compiler17RegisterAllocator5SpillEPNS1_9LiveRangeENS1_29TopTierRegisterAllocationData9SpillModeE(%"class.v8::internal::compiler::RegisterAllocator"* %22, %"class.v8::internal::compiler::LiveRange"* %116, i32 %2) #16
  br label %123

117:                                              ; preds = %113
  %118 = load %"class.v8::internal::compiler::UseInterval"*, %"class.v8::internal::compiler::UseInterval"** %9, align 8
  %119 = getelementptr inbounds %"class.v8::internal::compiler::UseInterval", %"class.v8::internal::compiler::UseInterval"* %118, i64 0, i32 0, i32 0
  %120 = load i32, i32* %119, align 8
  %121 = getelementptr inbounds %"class.v8::internal::compiler::UsePosition", %"class.v8::internal::compiler::UsePosition"* %85, i64 0, i32 3, i32 0
  %122 = load i32, i32* %121, align 8
  tail call void @_ZN2v88internal8compiler19LinearScanAllocator17SpillBetweenUntilEPNS1_9LiveRangeENS1_16LifetimePositionES5_S5_NS1_29TopTierRegisterAllocationData9SpillModeE(%"class.v8::internal::compiler::LinearScanAllocator"* %0, %"class.v8::internal::compiler::LiveRange"* %38, i32 %86, i32 %120, i32 %122, i32 %2)
  br label %123

123:                                              ; preds = %117, %115
  %124 = load %"class.v8::internal::compiler::TopTierRegisterAllocationData"*, %"class.v8::internal::compiler::TopTierRegisterAllocationData"** %23, align 8
  %125 = getelementptr inbounds %"class.v8::internal::compiler::TopTierRegisterAllocationData", %"class.v8::internal::compiler::TopTierRegisterAllocationData"* %124, i64 0, i32 23, i32 0
  %126 = load i32, i32* %125, align 4
  %127 = and i32 %126, 1
  %128 = icmp eq i32 %127, 0
  br i1 %128, label %137, label %129

129:                                              ; preds = %123
  %130 = load %"class.v8::internal::compiler::LiveRange"*, %"class.v8::internal::compiler::LiveRange"** %37, align 8
  %131 = getelementptr inbounds %"class.v8::internal::compiler::LiveRange", %"class.v8::internal::compiler::LiveRange"* %130, i64 0, i32 5
  %132 = load %"class.v8::internal::compiler::TopLevelLiveRange"*, %"class.v8::internal::compiler::TopLevelLiveRange"** %131, align 8
  %133 = getelementptr inbounds %"class.v8::internal::compiler::TopLevelLiveRange", %"class.v8::internal::compiler::TopLevelLiveRange"* %132, i64 0, i32 1
  %134 = load i32, i32* %133, align 4
  %135 = getelementptr inbounds %"class.v8::internal::compiler::LiveRange", %"class.v8::internal::compiler::LiveRange"* %130, i64 0, i32 0
  %136 = load i32, i32* %135, align 8
  tail call void (i8*, ...) @_ZN2v88internal6PrintFEPKcz(i8* getelementptr inbounds ([48 x i8], [48 x i8]* @.str.81, i64 0, i64 0), i32 %134, i32 %136) #16
  br label %137

137:                                              ; preds = %129, %123
  %138 = getelementptr inbounds %"class.v8::internal::compiler::LiveRange"*, %"class.v8::internal::compiler::LiveRange"** %37, i64 1
  %139 = load i64, i64* %24, align 8
  %140 = ptrtoint %"class.v8::internal::compiler::LiveRange"** %138 to i64
  %141 = sub i64 %139, %140
  %142 = ashr exact i64 %141, 3
  %143 = icmp eq i64 %141, 0
  br i1 %143, label %147, label %144

144:                                              ; preds = %137
  %145 = bitcast %"class.v8::internal::compiler::LiveRange"** %37 to i8*
  %146 = bitcast %"class.v8::internal::compiler::LiveRange"** %138 to i8*
  tail call void @llvm.memmove.p0i8.p0i8.i64(i8* align 8 %145, i8* align 8 %146, i64 %141, i1 false) #16
  br label %147

147:                                              ; preds = %137, %144
  %148 = getelementptr inbounds %"class.v8::internal::compiler::LiveRange"*, %"class.v8::internal::compiler::LiveRange"** %37, i64 %142
  store %"class.v8::internal::compiler::LiveRange"** %148, %"class.v8::internal::compiler::LiveRange"*** %15, align 8
  call void @llvm.lifetime.end.p0i8(i64 8, i8* nonnull %21) #16
  br label %149

149:                                              ; preds = %147, %44
  %150 = phi %"class.v8::internal::compiler::LiveRange"** [ %148, %147 ], [ %36, %44 ]
  %151 = phi %"class.v8::internal::compiler::LiveRange"** [ %37, %147 ], [ %45, %44 ]
  %152 = icmp eq %"class.v8::internal::compiler::LiveRange"** %151, %150
  br i1 %152, label %25, label %35

153:                                              ; preds = %428, %25
  ret void

154:                                              ; preds = %30, %428
  %155 = phi i64 [ 0, %30 ], [ %429, %428 ]
  %156 = icmp eq i64 %155, %34
  br i1 %156, label %157, label %428

157:                                              ; preds = %154
  %158 = load %"class.v8::internal::ZoneMultiset.1344"*, %"class.v8::internal::ZoneMultiset.1344"** %31, align 8
  %159 = getelementptr inbounds %"class.v8::internal::ZoneMultiset.1344", %"class.v8::internal::ZoneMultiset.1344"* %158, i64 %34, i32 0, i32 0, i32 0
  %160 = load %"class.std::__1::__tree_end_node"*, %"class.std::__1::__tree_end_node"** %159, align 8
  %161 = getelementptr inbounds %"class.v8::internal::ZoneMultiset.1344", %"class.v8::internal::ZoneMultiset.1344"* %158, i64 %34, i32 0, i32 0, i32 1, i32 0, i32 0
  %162 = icmp eq %"class.std::__1::__tree_end_node"* %160, %161
  br i1 %162, label %428, label %163

163:                                              ; preds = %157, %423
  %164 = phi %"class.v8::internal::ZoneMultiset.1344"* [ %424, %423 ], [ %158, %157 ]
  %165 = phi %"class.std::__1::__tree_end_node"* [ %425, %423 ], [ %160, %157 ]
  %166 = getelementptr inbounds %"class.std::__1::__tree_end_node", %"class.std::__1::__tree_end_node"* %165, i64 4
  %167 = bitcast %"class.std::__1::__tree_end_node"* %166 to %"class.v8::internal::compiler::LiveRange"**
  %168 = load %"class.v8::internal::compiler::LiveRange"*, %"class.v8::internal::compiler::LiveRange"** %167, align 8
  %169 = getelementptr inbounds %"class.v8::internal::compiler::LiveRange", %"class.v8::internal::compiler::LiveRange"* %168, i64 0, i32 5
  %170 = load %"class.v8::internal::compiler::TopLevelLiveRange"*, %"class.v8::internal::compiler::TopLevelLiveRange"** %169, align 8
  %171 = getelementptr inbounds %"class.v8::internal::compiler::TopLevelLiveRange", %"class.v8::internal::compiler::TopLevelLiveRange"* %170, i64 0, i32 1
  %172 = load i32, i32* %171, align 4
  %173 = icmp slt i32 %172, 0
  br i1 %173, label %174, label %202

174:                                              ; preds = %163
  %175 = getelementptr inbounds %"class.std::__1::__tree_end_node", %"class.std::__1::__tree_end_node"* %165, i64 1, i32 0
  %176 = load %"class.std::__1::__tree_node_base"*, %"class.std::__1::__tree_node_base"** %175, align 8
  %177 = icmp eq %"class.std::__1::__tree_node_base"* %176, null
  br i1 %177, label %178, label %186

178:                                              ; preds = %174
  %179 = bitcast %"class.std::__1::__tree_end_node"* %165 to %"class.std::__1::__tree_node_base"*
  %180 = getelementptr inbounds %"class.std::__1::__tree_end_node", %"class.std::__1::__tree_end_node"* %165, i64 2
  %181 = bitcast %"class.std::__1::__tree_end_node"* %180 to %"class.std::__1::__tree_end_node"**
  %182 = load %"class.std::__1::__tree_end_node"*, %"class.std::__1::__tree_end_node"** %181, align 8
  %183 = getelementptr inbounds %"class.std::__1::__tree_end_node", %"class.std::__1::__tree_end_node"* %182, i64 0, i32 0
  %184 = load %"class.std::__1::__tree_node_base"*, %"class.std::__1::__tree_node_base"** %183, align 8
  %185 = icmp eq %"class.std::__1::__tree_node_base"* %184, %179
  br i1 %185, label %423, label %193

186:                                              ; preds = %174, %186
  %187 = phi %"class.std::__1::__tree_node_base"* [ %189, %186 ], [ %176, %174 ]
  %188 = getelementptr inbounds %"class.std::__1::__tree_node_base", %"class.std::__1::__tree_node_base"* %187, i64 0, i32 0, i32 0
  %189 = load %"class.std::__1::__tree_node_base"*, %"class.std::__1::__tree_node_base"** %188, align 8
  %190 = icmp eq %"class.std::__1::__tree_node_base"* %189, null
  br i1 %190, label %191, label %186

191:                                              ; preds = %186
  %192 = getelementptr inbounds %"class.std::__1::__tree_node_base", %"class.std::__1::__tree_node_base"* %187, i64 0, i32 0
  br label %423

193:                                              ; preds = %178, %193
  %194 = phi %"class.std::__1::__tree_end_node"** [ %197, %193 ], [ %181, %178 ]
  %195 = bitcast %"class.std::__1::__tree_end_node"** %194 to %"class.std::__1::__tree_node_base"**
  %196 = load %"class.std::__1::__tree_node_base"*, %"class.std::__1::__tree_node_base"** %195, align 8
  %197 = getelementptr inbounds %"class.std::__1::__tree_node_base", %"class.std::__1::__tree_node_base"* %196, i64 0, i32 2
  %198 = load %"class.std::__1::__tree_end_node"*, %"class.std::__1::__tree_end_node"** %197, align 8
  %199 = getelementptr inbounds %"class.std::__1::__tree_end_node", %"class.std::__1::__tree_end_node"* %198, i64 0, i32 0
  %200 = load %"class.std::__1::__tree_node_base"*, %"class.std::__1::__tree_node_base"** %199, align 8
  %201 = icmp eq %"class.std::__1::__tree_node_base"* %200, %196
  br i1 %201, label %423, label %193

202:                                              ; preds = %163
  %203 = load %"class.v8::internal::compiler::UseInterval"*, %"class.v8::internal::compiler::UseInterval"** %9, align 8
  %204 = icmp eq %"class.v8::internal::compiler::UseInterval"* %203, null
  br i1 %204, label %392, label %205

205:                                              ; preds = %202
  %206 = getelementptr inbounds %"class.v8::internal::compiler::UseInterval", %"class.v8::internal::compiler::UseInterval"* %203, i64 0, i32 0, i32 0
  %207 = load i32, i32* %206, align 8
  %208 = getelementptr inbounds %"class.v8::internal::compiler::LiveRange", %"class.v8::internal::compiler::LiveRange"* %168, i64 0, i32 7
  %209 = load %"class.v8::internal::compiler::UseInterval"*, %"class.v8::internal::compiler::UseInterval"** %208, align 8
  %210 = icmp eq %"class.v8::internal::compiler::UseInterval"* %209, null
  br i1 %210, label %211, label %213

211:                                              ; preds = %205
  %212 = getelementptr inbounds %"class.v8::internal::compiler::LiveRange", %"class.v8::internal::compiler::LiveRange"* %168, i64 0, i32 3
  br label %219

213:                                              ; preds = %205
  %214 = getelementptr inbounds %"class.v8::internal::compiler::UseInterval", %"class.v8::internal::compiler::UseInterval"* %209, i64 0, i32 0, i32 0
  %215 = load i32, i32* %214, align 8
  %216 = icmp sgt i32 %215, %207
  br i1 %216, label %217, label %219

217:                                              ; preds = %213
  store %"class.v8::internal::compiler::UseInterval"* null, %"class.v8::internal::compiler::UseInterval"** %208, align 8
  %218 = getelementptr inbounds %"class.v8::internal::compiler::LiveRange", %"class.v8::internal::compiler::LiveRange"* %168, i64 0, i32 3
  br label %219

219:                                              ; preds = %217, %213, %211
  %220 = phi %"class.v8::internal::compiler::UseInterval"* [ null, %211 ], [ null, %217 ], [ %209, %213 ]
  %221 = phi %"class.v8::internal::compiler::UseInterval"** [ %212, %211 ], [ %218, %217 ], [ %208, %213 ]
  %222 = load %"class.v8::internal::compiler::UseInterval"*, %"class.v8::internal::compiler::UseInterval"** %221, align 8
  %223 = icmp eq %"class.v8::internal::compiler::UseInterval"* %222, null
  br i1 %223, label %392, label %224

224:                                              ; preds = %219
  %225 = getelementptr inbounds %"class.v8::internal::compiler::LiveRange", %"class.v8::internal::compiler::LiveRange"* %168, i64 0, i32 2
  br label %226

226:                                              ; preds = %276, %224
  %227 = phi %"class.v8::internal::compiler::UseInterval"* [ %220, %224 ], [ %277, %276 ]
  %228 = phi %"class.v8::internal::compiler::UseInterval"* [ %203, %224 ], [ %279, %276 ]
  %229 = phi %"class.v8::internal::compiler::UseInterval"* [ %222, %224 ], [ %278, %276 ]
  %230 = getelementptr inbounds %"class.v8::internal::compiler::UseInterval", %"class.v8::internal::compiler::UseInterval"* %229, i64 0, i32 0, i32 0
  %231 = load i32, i32* %230, align 8
  %232 = load %"class.v8::internal::compiler::UseInterval"*, %"class.v8::internal::compiler::UseInterval"** %32, align 8
  %233 = getelementptr inbounds %"class.v8::internal::compiler::UseInterval", %"class.v8::internal::compiler::UseInterval"* %232, i64 0, i32 1, i32 0
  %234 = load i32, i32* %233, align 4
  %235 = icmp sgt i32 %231, %234
  br i1 %235, label %392, label %236

236:                                              ; preds = %226
  %237 = getelementptr inbounds %"class.v8::internal::compiler::UseInterval", %"class.v8::internal::compiler::UseInterval"* %228, i64 0, i32 0, i32 0
  %238 = load i32, i32* %237, align 8
  %239 = load %"class.v8::internal::compiler::UseInterval"*, %"class.v8::internal::compiler::UseInterval"** %225, align 8
  %240 = getelementptr inbounds %"class.v8::internal::compiler::UseInterval", %"class.v8::internal::compiler::UseInterval"* %239, i64 0, i32 1, i32 0
  %241 = load i32, i32* %240, align 4
  %242 = icmp sgt i32 %238, %241
  br i1 %242, label %392, label %243

243:                                              ; preds = %236
  %244 = icmp slt i32 %238, %231
  %245 = select i1 %244, i32 %231, i32 %238
  %246 = select i1 %244, %"class.v8::internal::compiler::UseInterval"* %228, %"class.v8::internal::compiler::UseInterval"* %229
  %247 = getelementptr inbounds %"class.v8::internal::compiler::UseInterval", %"class.v8::internal::compiler::UseInterval"* %246, i64 0, i32 1, i32 0
  %248 = load i32, i32* %247, align 4
  %249 = icmp slt i32 %245, %248
  %250 = icmp ne i32 %245, -1
  %251 = and i1 %250, %249
  br i1 %251, label %283, label %252

252:                                              ; preds = %243
  %253 = icmp slt i32 %231, %238
  br i1 %253, label %254, label %273

254:                                              ; preds = %252
  %255 = getelementptr inbounds %"class.v8::internal::compiler::UseInterval", %"class.v8::internal::compiler::UseInterval"* %229, i64 0, i32 2
  %256 = load %"class.v8::internal::compiler::UseInterval"*, %"class.v8::internal::compiler::UseInterval"** %255, align 8
  %257 = icmp eq %"class.v8::internal::compiler::UseInterval"* %256, null
  br i1 %257, label %392, label %258

258:                                              ; preds = %254
  %259 = getelementptr inbounds %"class.v8::internal::compiler::UseInterval", %"class.v8::internal::compiler::UseInterval"* %256, i64 0, i32 0, i32 0
  %260 = load i32, i32* %259, align 8
  %261 = icmp sgt i32 %260, %234
  br i1 %261, label %392, label %262

262:                                              ; preds = %258
  %263 = icmp sgt i32 %260, %207
  br i1 %263, label %276, label %264

264:                                              ; preds = %262
  %265 = icmp eq %"class.v8::internal::compiler::UseInterval"* %227, null
  br i1 %265, label %269, label %266

266:                                              ; preds = %264
  %267 = getelementptr inbounds %"class.v8::internal::compiler::UseInterval", %"class.v8::internal::compiler::UseInterval"* %227, i64 0, i32 0, i32 0
  %268 = load i32, i32* %267, align 8
  br label %269

269:                                              ; preds = %266, %264
  %270 = phi i32 [ %268, %266 ], [ -1, %264 ]
  %271 = icmp sgt i32 %260, %270
  br i1 %271, label %272, label %276

272:                                              ; preds = %269
  store %"class.v8::internal::compiler::UseInterval"* %256, %"class.v8::internal::compiler::UseInterval"** %208, align 8
  br label %276

273:                                              ; preds = %252
  %274 = getelementptr inbounds %"class.v8::internal::compiler::UseInterval", %"class.v8::internal::compiler::UseInterval"* %228, i64 0, i32 2
  %275 = load %"class.v8::internal::compiler::UseInterval"*, %"class.v8::internal::compiler::UseInterval"** %274, align 8
  br label %276

276:                                              ; preds = %273, %272, %269, %262
  %277 = phi %"class.v8::internal::compiler::UseInterval"* [ %227, %273 ], [ %227, %262 ], [ %227, %269 ], [ %256, %272 ]
  %278 = phi %"class.v8::internal::compiler::UseInterval"* [ %229, %273 ], [ %256, %262 ], [ %256, %269 ], [ %256, %272 ]
  %279 = phi %"class.v8::internal::compiler::UseInterval"* [ %275, %273 ], [ %228, %262 ], [ %228, %269 ], [ %228, %272 ]
  %280 = icmp ne %"class.v8::internal::compiler::UseInterval"* %278, null
  %281 = icmp ne %"class.v8::internal::compiler::UseInterval"* %279, null
  %282 = and i1 %280, %281
  br i1 %282, label %226, label %392

283:                                              ; preds = %243
  %284 = load %"class.v8::internal::compiler::UseInterval"*, %"class.v8::internal::compiler::UseInterval"** %9, align 8
  %285 = getelementptr inbounds %"class.v8::internal::compiler::UseInterval", %"class.v8::internal::compiler::UseInterval"* %284, i64 0, i32 0, i32 0
  %286 = load i32, i32* %285, align 8
  %287 = getelementptr inbounds %"class.v8::internal::compiler::LiveRange", %"class.v8::internal::compiler::LiveRange"* %168, i64 0, i32 8
  %288 = load %"class.v8::internal::compiler::UsePosition"*, %"class.v8::internal::compiler::UsePosition"** %287, align 8
  %289 = icmp eq %"class.v8::internal::compiler::UsePosition"* %288, null
  br i1 %289, label %294, label %290

290:                                              ; preds = %283
  %291 = getelementptr inbounds %"class.v8::internal::compiler::UsePosition", %"class.v8::internal::compiler::UsePosition"* %288, i64 0, i32 3, i32 0
  %292 = load i32, i32* %291, align 8
  %293 = icmp sgt i32 %292, %286
  br i1 %293, label %294, label %298

294:                                              ; preds = %290, %283
  %295 = getelementptr inbounds %"class.v8::internal::compiler::LiveRange", %"class.v8::internal::compiler::LiveRange"* %168, i64 0, i32 4
  %296 = load %"class.v8::internal::compiler::UsePosition"*, %"class.v8::internal::compiler::UsePosition"** %295, align 8
  %297 = icmp eq %"class.v8::internal::compiler::UsePosition"* %296, null
  br i1 %297, label %309, label %298

298:                                              ; preds = %294, %290
  %299 = phi %"class.v8::internal::compiler::UsePosition"* [ %288, %290 ], [ %296, %294 ]
  br label %300

300:                                              ; preds = %298, %305
  %301 = phi %"class.v8::internal::compiler::UsePosition"* [ %307, %305 ], [ %299, %298 ]
  %302 = getelementptr inbounds %"class.v8::internal::compiler::UsePosition", %"class.v8::internal::compiler::UsePosition"* %301, i64 0, i32 3, i32 0
  %303 = load i32, i32* %302, align 8
  %304 = icmp slt i32 %303, %286
  br i1 %304, label %305, label %310

305:                                              ; preds = %300
  %306 = getelementptr inbounds %"class.v8::internal::compiler::UsePosition", %"class.v8::internal::compiler::UsePosition"* %301, i64 0, i32 2
  %307 = load %"class.v8::internal::compiler::UsePosition"*, %"class.v8::internal::compiler::UsePosition"** %306, align 8
  %308 = icmp eq %"class.v8::internal::compiler::UsePosition"* %307, null
  br i1 %308, label %309, label %300

309:                                              ; preds = %305, %294
  store %"class.v8::internal::compiler::UsePosition"* null, %"class.v8::internal::compiler::UsePosition"** %287, align 8
  br label %321

310:                                              ; preds = %300
  store %"class.v8::internal::compiler::UsePosition"* %301, %"class.v8::internal::compiler::UsePosition"** %287, align 8
  br label %311

311:                                              ; preds = %317, %310
  %312 = phi %"class.v8::internal::compiler::UsePosition"* [ %319, %317 ], [ %301, %310 ]
  %313 = getelementptr inbounds %"class.v8::internal::compiler::UsePosition", %"class.v8::internal::compiler::UsePosition"* %312, i64 0, i32 4
  %314 = load i32, i32* %313, align 4
  %315 = and i32 %314, 3
  %316 = icmp eq i32 %315, 2
  br i1 %316, label %323, label %317

317:                                              ; preds = %311
  %318 = getelementptr inbounds %"class.v8::internal::compiler::UsePosition", %"class.v8::internal::compiler::UsePosition"* %312, i64 0, i32 2
  %319 = load %"class.v8::internal::compiler::UsePosition"*, %"class.v8::internal::compiler::UsePosition"** %318, align 8
  %320 = icmp eq %"class.v8::internal::compiler::UsePosition"* %319, null
  br i1 %320, label %321, label %311

321:                                              ; preds = %317, %309
  %322 = tail call %"class.v8::internal::compiler::LiveRange"* @_ZN2v88internal8compiler17RegisterAllocator12SplitRangeAtEPNS1_9LiveRangeENS1_16LifetimePositionE(%"class.v8::internal::compiler::RegisterAllocator"* %26, %"class.v8::internal::compiler::LiveRange"* %168, i32 %12) #16
  tail call void @_ZN2v88internal8compiler17RegisterAllocator5SpillEPNS1_9LiveRangeENS1_29TopTierRegisterAllocationData9SpillModeE(%"class.v8::internal::compiler::RegisterAllocator"* %26, %"class.v8::internal::compiler::LiveRange"* %322, i32 %2) #16
  br label %328

323:                                              ; preds = %311
  %324 = getelementptr inbounds %"class.v8::internal::compiler::UsePosition", %"class.v8::internal::compiler::UsePosition"* %312, i64 0, i32 3, i32 0
  %325 = load i32, i32* %324, align 8
  %326 = icmp slt i32 %325, %245
  %327 = select i1 %326, i32 %325, i32 %245
  tail call void @_ZN2v88internal8compiler19LinearScanAllocator17SpillBetweenUntilEPNS1_9LiveRangeENS1_16LifetimePositionES5_S5_NS1_29TopTierRegisterAllocationData9SpillModeE(%"class.v8::internal::compiler::LinearScanAllocator"* %0, %"class.v8::internal::compiler::LiveRange"* %168, i32 %12, i32 %12, i32 %327, i32 %2) #16
  br label %328

328:                                              ; preds = %323, %321
  %329 = load %"class.v8::internal::compiler::LiveRange"*, %"class.v8::internal::compiler::LiveRange"** %167, align 8
  %330 = load %"class.v8::internal::compiler::TopTierRegisterAllocationData"*, %"class.v8::internal::compiler::TopTierRegisterAllocationData"** %33, align 8
  %331 = getelementptr inbounds %"class.v8::internal::compiler::TopTierRegisterAllocationData", %"class.v8::internal::compiler::TopTierRegisterAllocationData"* %330, i64 0, i32 23, i32 0
  %332 = load i32, i32* %331, align 4
  %333 = and i32 %332, 1
  %334 = icmp eq i32 %333, 0
  br i1 %334, label %342, label %335

335:                                              ; preds = %328
  %336 = getelementptr inbounds %"class.v8::internal::compiler::LiveRange", %"class.v8::internal::compiler::LiveRange"* %329, i64 0, i32 5
  %337 = load %"class.v8::internal::compiler::TopLevelLiveRange"*, %"class.v8::internal::compiler::TopLevelLiveRange"** %336, align 8
  %338 = getelementptr inbounds %"class.v8::internal::compiler::TopLevelLiveRange", %"class.v8::internal::compiler::TopLevelLiveRange"* %337, i64 0, i32 1
  %339 = load i32, i32* %338, align 4
  %340 = getelementptr inbounds %"class.v8::internal::compiler::LiveRange", %"class.v8::internal::compiler::LiveRange"* %329, i64 0, i32 0
  %341 = load i32, i32* %340, align 8
  tail call void (i8*, ...) @_ZN2v88internal6PrintFEPKcz(i8* getelementptr inbounds ([50 x i8], [50 x i8]* @.str.83, i64 0, i64 0), i32 %339, i32 %341) #16
  br label %342

342:                                              ; preds = %335, %328
  %343 = getelementptr inbounds %"class.v8::internal::compiler::LiveRange", %"class.v8::internal::compiler::LiveRange"* %329, i64 0, i32 1
  %344 = load i32, i32* %343, align 4
  %345 = lshr i32 %344, 7
  %346 = and i32 %345, 63
  %347 = zext i32 %346 to i64
  %348 = load %"class.v8::internal::ZoneMultiset.1344"*, %"class.v8::internal::ZoneMultiset.1344"** %31, align 8
  %349 = getelementptr inbounds %"class.v8::internal::ZoneMultiset.1344", %"class.v8::internal::ZoneMultiset.1344"* %348, i64 %347, i32 0
  %350 = getelementptr inbounds %"class.std::__1::__tree_end_node", %"class.std::__1::__tree_end_node"* %165, i64 1, i32 0
  %351 = load %"class.std::__1::__tree_node_base"*, %"class.std::__1::__tree_node_base"** %350, align 8
  %352 = icmp eq %"class.std::__1::__tree_node_base"* %351, null
  br i1 %352, label %353, label %361

353:                                              ; preds = %342
  %354 = bitcast %"class.std::__1::__tree_end_node"* %165 to %"class.std::__1::__tree_node_base"*
  %355 = getelementptr inbounds %"class.std::__1::__tree_end_node", %"class.std::__1::__tree_end_node"* %165, i64 2
  %356 = bitcast %"class.std::__1::__tree_end_node"* %355 to %"class.std::__1::__tree_end_node"**
  %357 = load %"class.std::__1::__tree_end_node"*, %"class.std::__1::__tree_end_node"** %356, align 8
  %358 = getelementptr inbounds %"class.std::__1::__tree_end_node", %"class.std::__1::__tree_end_node"* %357, i64 0, i32 0
  %359 = load %"class.std::__1::__tree_node_base"*, %"class.std::__1::__tree_node_base"** %358, align 8
  %360 = icmp eq %"class.std::__1::__tree_node_base"* %359, %354
  br i1 %360, label %377, label %368

361:                                              ; preds = %342, %361
  %362 = phi %"class.std::__1::__tree_node_base"* [ %364, %361 ], [ %351, %342 ]
  %363 = getelementptr inbounds %"class.std::__1::__tree_node_base", %"class.std::__1::__tree_node_base"* %362, i64 0, i32 0, i32 0
  %364 = load %"class.std::__1::__tree_node_base"*, %"class.std::__1::__tree_node_base"** %363, align 8
  %365 = icmp eq %"class.std::__1::__tree_node_base"* %364, null
  br i1 %365, label %366, label %361

366:                                              ; preds = %361
  %367 = getelementptr inbounds %"class.std::__1::__tree_node_base", %"class.std::__1::__tree_node_base"* %362, i64 0, i32 0
  br label %377

368:                                              ; preds = %353, %368
  %369 = phi %"class.std::__1::__tree_end_node"** [ %372, %368 ], [ %356, %353 ]
  %370 = bitcast %"class.std::__1::__tree_end_node"** %369 to %"class.std::__1::__tree_node_base"**
  %371 = load %"class.std::__1::__tree_node_base"*, %"class.std::__1::__tree_node_base"** %370, align 8
  %372 = getelementptr inbounds %"class.std::__1::__tree_node_base", %"class.std::__1::__tree_node_base"* %371, i64 0, i32 2
  %373 = load %"class.std::__1::__tree_end_node"*, %"class.std::__1::__tree_end_node"** %372, align 8
  %374 = getelementptr inbounds %"class.std::__1::__tree_end_node", %"class.std::__1::__tree_end_node"* %373, i64 0, i32 0
  %375 = load %"class.std::__1::__tree_node_base"*, %"class.std::__1::__tree_node_base"** %374, align 8
  %376 = icmp eq %"class.std::__1::__tree_node_base"* %375, %371
  br i1 %376, label %377, label %368

377:                                              ; preds = %368, %366, %353
  %378 = phi %"class.std::__1::__tree_end_node"* [ %367, %366 ], [ %357, %353 ], [ %373, %368 ]
  %379 = getelementptr inbounds %"class.std::__1::multiset.1345", %"class.std::__1::multiset.1345"* %349, i64 0, i32 0, i32 0
  %380 = load %"class.std::__1::__tree_end_node"*, %"class.std::__1::__tree_end_node"** %379, align 8
  %381 = icmp eq %"class.std::__1::__tree_end_node"* %380, %165
  br i1 %381, label %382, label %385

382:                                              ; preds = %377
  %383 = ptrtoint %"class.std::__1::__tree_end_node"* %378 to i64
  %384 = bitcast %"class.std::__1::multiset.1345"* %349 to i64*
  store i64 %383, i64* %384, align 8
  br label %385

385:                                              ; preds = %377, %382
  %386 = getelementptr inbounds %"class.v8::internal::ZoneMultiset.1344", %"class.v8::internal::ZoneMultiset.1344"* %348, i64 %347, i32 0, i32 0, i32 2, i32 0, i32 0
  %387 = load i64, i64* %386, align 8
  %388 = add i64 %387, -1
  store i64 %388, i64* %386, align 8
  %389 = getelementptr inbounds %"class.v8::internal::ZoneMultiset.1344", %"class.v8::internal::ZoneMultiset.1344"* %348, i64 %347, i32 0, i32 0, i32 1, i32 0, i32 0, i32 0
  %390 = load %"class.std::__1::__tree_node_base"*, %"class.std::__1::__tree_node_base"** %389, align 8
  %391 = bitcast %"class.std::__1::__tree_end_node"* %165 to %"class.std::__1::__tree_node_base"*
  tail call void @_ZNSt3__113__tree_removeIPNS_16__tree_node_baseIPvEEEEvT_S5_(%"class.std::__1::__tree_node_base"* %390, %"class.std::__1::__tree_node_base"* %391) #16
  br label %420

392:                                              ; preds = %254, %258, %236, %226, %276, %202, %219
  %393 = getelementptr inbounds %"class.std::__1::__tree_end_node", %"class.std::__1::__tree_end_node"* %165, i64 1, i32 0
  %394 = load %"class.std::__1::__tree_node_base"*, %"class.std::__1::__tree_node_base"** %393, align 8
  %395 = icmp eq %"class.std::__1::__tree_node_base"* %394, null
  br i1 %395, label %396, label %404

396:                                              ; preds = %392
  %397 = bitcast %"class.std::__1::__tree_end_node"* %165 to %"class.std::__1::__tree_node_base"*
  %398 = getelementptr inbounds %"class.std::__1::__tree_end_node", %"class.std::__1::__tree_end_node"* %165, i64 2
  %399 = bitcast %"class.std::__1::__tree_end_node"* %398 to %"class.std::__1::__tree_end_node"**
  %400 = load %"class.std::__1::__tree_end_node"*, %"class.std::__1::__tree_end_node"** %399, align 8
  %401 = getelementptr inbounds %"class.std::__1::__tree_end_node", %"class.std::__1::__tree_end_node"* %400, i64 0, i32 0
  %402 = load %"class.std::__1::__tree_node_base"*, %"class.std::__1::__tree_node_base"** %401, align 8
  %403 = icmp eq %"class.std::__1::__tree_node_base"* %402, %397
  br i1 %403, label %420, label %411

404:                                              ; preds = %392, %404
  %405 = phi %"class.std::__1::__tree_node_base"* [ %407, %404 ], [ %394, %392 ]
  %406 = getelementptr inbounds %"class.std::__1::__tree_node_base", %"class.std::__1::__tree_node_base"* %405, i64 0, i32 0, i32 0
  %407 = load %"class.std::__1::__tree_node_base"*, %"class.std::__1::__tree_node_base"** %406, align 8
  %408 = icmp eq %"class.std::__1::__tree_node_base"* %407, null
  br i1 %408, label %409, label %404

409:                                              ; preds = %404
  %410 = getelementptr inbounds %"class.std::__1::__tree_node_base", %"class.std::__1::__tree_node_base"* %405, i64 0, i32 0
  br label %420

411:                                              ; preds = %396, %411
  %412 = phi %"class.std::__1::__tree_end_node"** [ %415, %411 ], [ %399, %396 ]
  %413 = bitcast %"class.std::__1::__tree_end_node"** %412 to %"class.std::__1::__tree_node_base"**
  %414 = load %"class.std::__1::__tree_node_base"*, %"class.std::__1::__tree_node_base"** %413, align 8
  %415 = getelementptr inbounds %"class.std::__1::__tree_node_base", %"class.std::__1::__tree_node_base"* %414, i64 0, i32 2
  %416 = load %"class.std::__1::__tree_end_node"*, %"class.std::__1::__tree_end_node"** %415, align 8
  %417 = getelementptr inbounds %"class.std::__1::__tree_end_node", %"class.std::__1::__tree_end_node"* %416, i64 0, i32 0
  %418 = load %"class.std::__1::__tree_node_base"*, %"class.std::__1::__tree_node_base"** %417, align 8
  %419 = icmp eq %"class.std::__1::__tree_node_base"* %418, %414
  br i1 %419, label %420, label %411

420:                                              ; preds = %411, %409, %396, %385
  %421 = phi %"class.std::__1::__tree_end_node"* [ %378, %385 ], [ %410, %409 ], [ %400, %396 ], [ %416, %411 ]
  %422 = load %"class.v8::internal::ZoneMultiset.1344"*, %"class.v8::internal::ZoneMultiset.1344"** %31, align 8
  br label %423

423:                                              ; preds = %193, %191, %178, %420
  %424 = phi %"class.v8::internal::ZoneMultiset.1344"* [ %422, %420 ], [ %164, %191 ], [ %164, %178 ], [ %164, %193 ]
  %425 = phi %"class.std::__1::__tree_end_node"* [ %421, %420 ], [ %192, %191 ], [ %182, %178 ], [ %198, %193 ]
  %426 = getelementptr inbounds %"class.v8::internal::ZoneMultiset.1344", %"class.v8::internal::ZoneMultiset.1344"* %424, i64 %34, i32 0, i32 0, i32 1, i32 0, i32 0
  %427 = icmp eq %"class.std::__1::__tree_end_node"* %425, %426
  br i1 %427, label %428, label %163

428:                                              ; preds = %423, %157, %154
  %429 = add nuw nsw i64 %155, 1
  %430 = load i32, i32* %27, align 4
  %431 = sext i32 %430 to i64
  %432 = icmp slt i64 %429, %431
  br i1 %432, label %154, label %153
}

; Function Attrs: nounwind ssp uwtable
define hidden void @_ZN2v88internal8compiler19LinearScanAllocator17SpillBetweenUntilEPNS1_9LiveRangeENS1_16LifetimePositionES5_S5_NS1_29TopTierRegisterAllocationData9SpillModeE(%"class.v8::internal::compiler::LinearScanAllocator"*, %"class.v8::internal::compiler::LiveRange"*, i32, i32, i32, i32) local_unnamed_addr #0 align 2 {
  %7 = alloca %"class.v8::internal::compiler::LiveRange"*, align 8
  %8 = alloca %"class.v8::internal::compiler::LiveRange"*, align 8
  %9 = alloca i32, align 4
  %10 = alloca i32, align 4
  %11 = alloca i32, align 4
  %12 = icmp slt i32 %2, %4
  br i1 %12, label %14, label %13, !prof !80

13:                                               ; preds = %6
  tail call void (i8*, ...) @_Z8V8_FatalPKcz(i8* getelementptr inbounds ([18 x i8], [18 x i8]* @.str.1, i64 0, i64 0), i8* getelementptr inbounds ([12 x i8], [12 x i8]* @.str.93, i64 0, i64 0)) #17
  unreachable

14:                                               ; preds = %6
  %15 = bitcast %"class.v8::internal::compiler::LinearScanAllocator"* %0 to %"class.v8::internal::compiler::RegisterAllocator"*
  %16 = tail call %"class.v8::internal::compiler::LiveRange"* @_ZN2v88internal8compiler17RegisterAllocator12SplitRangeAtEPNS1_9LiveRangeENS1_16LifetimePositionE(%"class.v8::internal::compiler::RegisterAllocator"* %15, %"class.v8::internal::compiler::LiveRange"* %1, i32 %2)
  %17 = getelementptr inbounds %"class.v8::internal::compiler::LiveRange", %"class.v8::internal::compiler::LiveRange"* %16, i64 0, i32 3
  %18 = load %"class.v8::internal::compiler::UseInterval"*, %"class.v8::internal::compiler::UseInterval"** %17, align 8
  %19 = getelementptr inbounds %"class.v8::internal::compiler::UseInterval", %"class.v8::internal::compiler::UseInterval"* %18, i64 0, i32 0, i32 0
  %20 = load i32, i32* %19, align 8
  %21 = icmp slt i32 %20, %4
  br i1 %21, label %22, label %152

22:                                               ; preds = %14
  %23 = bitcast i32* %9 to i8*
  call void @llvm.lifetime.start.p0i8(i64 4, i8* nonnull %23)
  %24 = or i32 %20, 1
  %25 = icmp slt i32 %24, %3
  %26 = select i1 %25, i32 %3, i32 %24
  store i32 %26, i32* %9, align 4
  %27 = bitcast i32* %10 to i8*
  call void @llvm.lifetime.start.p0i8(i64 4, i8* nonnull %27)
  %28 = add i32 %4, -2
  %29 = or i32 %28, 1
  store i32 %29, i32* %10, align 4
  %30 = icmp slt i32 %26, %29
  %31 = bitcast i32* %10 to %"class.v8::internal::compiler::LifetimePosition"*
  %32 = bitcast i32* %9 to %"class.v8::internal::compiler::LifetimePosition"*
  %33 = select i1 %30, %"class.v8::internal::compiler::LifetimePosition"* %31, %"class.v8::internal::compiler::LifetimePosition"* %32
  %34 = getelementptr inbounds %"class.v8::internal::compiler::LifetimePosition", %"class.v8::internal::compiler::LifetimePosition"* %33, i64 0, i32 0
  %35 = load i32, i32* %34, align 4
  call void @llvm.lifetime.end.p0i8(i64 4, i8* nonnull %27)
  %36 = getelementptr inbounds %"class.v8::internal::compiler::LinearScanAllocator", %"class.v8::internal::compiler::LinearScanAllocator"* %0, i64 0, i32 0, i32 0
  %37 = and i32 %4, -2
  %38 = and i32 %4, 2
  %39 = icmp eq i32 %38, 0
  br i1 %39, label %40, label %61

40:                                               ; preds = %22
  %41 = load %"class.v8::internal::compiler::TopTierRegisterAllocationData"*, %"class.v8::internal::compiler::TopTierRegisterAllocationData"** %36, align 8
  %42 = sdiv i32 %37, 4
  %43 = sext i32 %42 to i64
  %44 = getelementptr inbounds %"class.v8::internal::compiler::TopTierRegisterAllocationData", %"class.v8::internal::compiler::TopTierRegisterAllocationData"* %41, i64 0, i32 3
  %45 = load %"class.v8::internal::compiler::InstructionSequence"*, %"class.v8::internal::compiler::InstructionSequence"** %44, align 8
  %46 = getelementptr inbounds %"class.v8::internal::compiler::InstructionSequence", %"class.v8::internal::compiler::InstructionSequence"* %45, i64 0, i32 8, i32 0, i32 0, i32 2, i32 0, i32 0
  %47 = load i64, i64* %46, align 8
  %48 = icmp eq i64 %47, %43
  br i1 %48, label %54, label %49

49:                                               ; preds = %40
  %50 = tail call %"class.v8::internal::compiler::InstructionBlock"* @_ZNK2v88internal8compiler19InstructionSequence19GetInstructionBlockEi(%"class.v8::internal::compiler::InstructionSequence"* %45, i32 %42) #16
  %51 = getelementptr inbounds %"class.v8::internal::compiler::InstructionBlock", %"class.v8::internal::compiler::InstructionBlock"* %50, i64 0, i32 8
  %52 = load i32, i32* %51, align 4
  %53 = icmp eq i32 %52, %42
  br i1 %53, label %54, label %61

54:                                               ; preds = %40, %49
  %55 = bitcast i32* %11 to i8*
  call void @llvm.lifetime.start.p0i8(i64 4, i8* nonnull %55)
  store i32 %37, i32* %11, align 4
  %56 = icmp slt i32 %26, %37
  %57 = bitcast i32* %11 to %"class.v8::internal::compiler::LifetimePosition"*
  %58 = select i1 %56, %"class.v8::internal::compiler::LifetimePosition"* %57, %"class.v8::internal::compiler::LifetimePosition"* %32
  %59 = getelementptr inbounds %"class.v8::internal::compiler::LifetimePosition", %"class.v8::internal::compiler::LifetimePosition"* %58, i64 0, i32 0
  %60 = load i32, i32* %59, align 4
  call void @llvm.lifetime.end.p0i8(i64 4, i8* nonnull %55)
  br label %61

61:                                               ; preds = %22, %54, %49
  %62 = phi i32 [ %60, %54 ], [ %35, %49 ], [ %35, %22 ]
  %63 = load %"class.v8::internal::compiler::TopTierRegisterAllocationData"*, %"class.v8::internal::compiler::TopTierRegisterAllocationData"** %36, align 8
  %64 = getelementptr inbounds %"class.v8::internal::compiler::TopTierRegisterAllocationData", %"class.v8::internal::compiler::TopTierRegisterAllocationData"* %63, i64 0, i32 23, i32 0
  %65 = load i32, i32* %64, align 4
  %66 = and i32 %65, 1
  %67 = icmp eq i32 %66, 0
  br i1 %67, label %75, label %68

68:                                               ; preds = %61
  %69 = getelementptr inbounds %"class.v8::internal::compiler::LiveRange", %"class.v8::internal::compiler::LiveRange"* %16, i64 0, i32 5
  %70 = load %"class.v8::internal::compiler::TopLevelLiveRange"*, %"class.v8::internal::compiler::TopLevelLiveRange"** %69, align 8
  %71 = getelementptr inbounds %"class.v8::internal::compiler::TopLevelLiveRange", %"class.v8::internal::compiler::TopLevelLiveRange"* %70, i64 0, i32 1
  %72 = load i32, i32* %71, align 4
  %73 = getelementptr inbounds %"class.v8::internal::compiler::LiveRange", %"class.v8::internal::compiler::LiveRange"* %16, i64 0, i32 0
  %74 = load i32, i32* %73, align 8
  tail call void (i8*, ...) @_ZN2v88internal6PrintFEPKcz(i8* getelementptr inbounds ([57 x i8], [57 x i8]* @.str.52, i64 0, i64 0), i32 %72, i32 %74, i32 %26, i32 %62) #16
  br label %75

75:                                               ; preds = %61, %68
  %76 = tail call i32 @_ZN2v88internal8compiler17RegisterAllocator19FindOptimalSplitPosENS1_16LifetimePositionES3_(%"class.v8::internal::compiler::RegisterAllocator"* %15, i32 %26, i32 %62) #16
  %77 = tail call %"class.v8::internal::compiler::LiveRange"* @_ZN2v88internal8compiler17RegisterAllocator12SplitRangeAtEPNS1_9LiveRangeENS1_16LifetimePositionE(%"class.v8::internal::compiler::RegisterAllocator"* %15, %"class.v8::internal::compiler::LiveRange"* %16, i32 %76) #16
  %78 = load %"class.v8::internal::compiler::TopTierRegisterAllocationData"*, %"class.v8::internal::compiler::TopTierRegisterAllocationData"** %36, align 8
  %79 = getelementptr inbounds %"class.v8::internal::compiler::TopTierRegisterAllocationData", %"class.v8::internal::compiler::TopTierRegisterAllocationData"* %78, i64 0, i32 3
  %80 = load %"class.v8::internal::compiler::InstructionSequence"*, %"class.v8::internal::compiler::InstructionSequence"** %79, align 8
  %81 = load %"class.v8::internal::compiler::UseInterval"*, %"class.v8::internal::compiler::UseInterval"** %17, align 8
  %82 = getelementptr inbounds %"class.v8::internal::compiler::UseInterval", %"class.v8::internal::compiler::UseInterval"* %81, i64 0, i32 0, i32 0
  %83 = load i32, i32* %82, align 8
  %84 = sdiv i32 %83, 4
  %85 = tail call %"class.v8::internal::compiler::InstructionBlock"* @_ZNK2v88internal8compiler19InstructionSequence19GetInstructionBlockEi(%"class.v8::internal::compiler::InstructionSequence"* %80, i32 %84) #16
  %86 = getelementptr inbounds %"class.v8::internal::compiler::InstructionBlock", %"class.v8::internal::compiler::InstructionBlock"* %85, i64 0, i32 10
  %87 = load i8, i8* %86, align 4, !range !3
  %88 = icmp eq i8 %87, 0
  br i1 %88, label %125, label %89

89:                                               ; preds = %75
  %90 = load %"class.v8::internal::compiler::TopTierRegisterAllocationData"*, %"class.v8::internal::compiler::TopTierRegisterAllocationData"** %36, align 8
  %91 = getelementptr inbounds %"class.v8::internal::compiler::TopTierRegisterAllocationData", %"class.v8::internal::compiler::TopTierRegisterAllocationData"* %90, i64 0, i32 23, i32 0
  %92 = load i32, i32* %91, align 4
  %93 = and i32 %92, 1
  %94 = icmp eq i32 %93, 0
  br i1 %94, label %117, label %95

95:                                               ; preds = %89
  %96 = getelementptr inbounds %"class.v8::internal::compiler::LiveRange", %"class.v8::internal::compiler::LiveRange"* %77, i64 0, i32 5
  %97 = load %"class.v8::internal::compiler::TopLevelLiveRange"*, %"class.v8::internal::compiler::TopLevelLiveRange"** %96, align 8
  %98 = getelementptr inbounds %"class.v8::internal::compiler::TopLevelLiveRange", %"class.v8::internal::compiler::TopLevelLiveRange"* %97, i64 0, i32 1
  %99 = load i32, i32* %98, align 4
  %100 = getelementptr inbounds %"class.v8::internal::compiler::LiveRange", %"class.v8::internal::compiler::LiveRange"* %77, i64 0, i32 0
  %101 = load i32, i32* %100, align 8
  %102 = getelementptr inbounds %"class.v8::internal::compiler::LiveRange", %"class.v8::internal::compiler::LiveRange"* %1, i64 0, i32 1
  %103 = load i32, i32* %102, align 4
  %104 = lshr i32 %103, 22
  %105 = and i32 %104, 63
  %106 = icmp eq i32 %105, 32
  br i1 %106, label %115, label %107

107:                                              ; preds = %95
  %108 = getelementptr inbounds %"class.v8::internal::compiler::LinearScanAllocator", %"class.v8::internal::compiler::LinearScanAllocator"* %0, i64 0, i32 0, i32 1
  %109 = load i32, i32* %108, align 8
  %110 = icmp eq i32 %109, 0
  %111 = zext i32 %105 to i64
  %112 = select i1 %110, [16 x i8*]* @_ZZN2v88internal12RegisterNameENS0_8RegisterEE5Names, [16 x i8*]* @_ZZN2v88internal12RegisterNameENS0_11XMMRegisterEE5Names
  %113 = getelementptr inbounds [16 x i8*], [16 x i8*]* %112, i64 0, i64 %111
  %114 = load i8*, i8** %113, align 8
  br label %115

115:                                              ; preds = %107, %95
  %116 = phi i8* [ getelementptr inbounds ([11 x i8], [11 x i8]* @.str.58, i64 0, i64 0), %95 ], [ %114, %107 ]
  tail call void (i8*, ...) @_ZN2v88internal6PrintFEPKcz(i8* getelementptr inbounds ([43 x i8], [43 x i8]* @.str.94, i64 0, i64 0), i32 %99, i32 %101, i8* %116) #16
  br label %117

117:                                              ; preds = %89, %115
  %118 = getelementptr inbounds %"class.v8::internal::compiler::LiveRange", %"class.v8::internal::compiler::LiveRange"* %1, i64 0, i32 1
  %119 = load i32, i32* %118, align 4
  %120 = and i32 %119, 264241152
  %121 = getelementptr inbounds %"class.v8::internal::compiler::LiveRange", %"class.v8::internal::compiler::LiveRange"* %77, i64 0, i32 1
  %122 = load i32, i32* %121, align 4
  %123 = and i32 %122, -264241153
  %124 = or i32 %123, %120
  store i32 %124, i32* %121, align 4
  br label %125

125:                                              ; preds = %75, %117
  %126 = bitcast %"class.v8::internal::compiler::LiveRange"** %7 to i8*
  call void @llvm.lifetime.start.p0i8(i64 8, i8* nonnull %126)
  store %"class.v8::internal::compiler::LiveRange"* %77, %"class.v8::internal::compiler::LiveRange"** %7, align 8
  %127 = icmp eq %"class.v8::internal::compiler::LiveRange"* %77, null
  br i1 %127, label %148, label %128

128:                                              ; preds = %125
  %129 = getelementptr inbounds %"class.v8::internal::compiler::LiveRange", %"class.v8::internal::compiler::LiveRange"* %77, i64 0, i32 3
  %130 = load %"class.v8::internal::compiler::UseInterval"*, %"class.v8::internal::compiler::UseInterval"** %129, align 8
  %131 = icmp eq %"class.v8::internal::compiler::UseInterval"* %130, null
  br i1 %131, label %148, label %132

132:                                              ; preds = %128
  %133 = load %"class.v8::internal::compiler::TopTierRegisterAllocationData"*, %"class.v8::internal::compiler::TopTierRegisterAllocationData"** %36, align 8
  %134 = getelementptr inbounds %"class.v8::internal::compiler::TopTierRegisterAllocationData", %"class.v8::internal::compiler::TopTierRegisterAllocationData"* %133, i64 0, i32 23, i32 0
  %135 = load i32, i32* %134, align 4
  %136 = and i32 %135, 1
  %137 = icmp eq i32 %136, 0
  br i1 %137, label %145, label %138

138:                                              ; preds = %132
  %139 = getelementptr inbounds %"class.v8::internal::compiler::LiveRange", %"class.v8::internal::compiler::LiveRange"* %77, i64 0, i32 5
  %140 = load %"class.v8::internal::compiler::TopLevelLiveRange"*, %"class.v8::internal::compiler::TopLevelLiveRange"** %139, align 8
  %141 = getelementptr inbounds %"class.v8::internal::compiler::TopLevelLiveRange", %"class.v8::internal::compiler::TopLevelLiveRange"* %140, i64 0, i32 1
  %142 = load i32, i32* %141, align 4
  %143 = getelementptr inbounds %"class.v8::internal::compiler::LiveRange", %"class.v8::internal::compiler::LiveRange"* %77, i64 0, i32 0
  %144 = load i32, i32* %143, align 8
  tail call void (i8*, ...) @_ZN2v88internal6PrintFEPKcz(i8* getelementptr inbounds ([35 x i8], [35 x i8]* @.str.80, i64 0, i64 0), i32 %142, i32 %144) #16
  br label %145

145:                                              ; preds = %138, %132
  %146 = getelementptr inbounds %"class.v8::internal::compiler::LinearScanAllocator", %"class.v8::internal::compiler::LinearScanAllocator"* %0, i64 0, i32 1, i32 0, i32 0
  %147 = call %"class.std::__1::__tree_end_node"* @_ZNSt3__16__treeIPN2v88internal8compiler9LiveRangeENS3_19LinearScanAllocator26UnhandledLiveRangeOrderingENS2_13ZoneAllocatorIS5_EEE15__emplace_multiIJRKS5_EEENS_15__tree_iteratorIS5_PNS_11__tree_nodeIS5_PvEElEEDpOT_(%"class.std::__1::__tree.1338"* %146, %"class.v8::internal::compiler::LiveRange"** nonnull dereferenceable(8) %7) #16
  br label %148

148:                                              ; preds = %125, %128, %145
  call void @llvm.lifetime.end.p0i8(i64 8, i8* nonnull %126)
  %149 = icmp eq %"class.v8::internal::compiler::LiveRange"* %77, %16
  br i1 %149, label %151, label %150

150:                                              ; preds = %148
  call void @_ZN2v88internal8compiler17RegisterAllocator5SpillEPNS1_9LiveRangeENS1_29TopTierRegisterAllocationData9SpillModeE(%"class.v8::internal::compiler::RegisterAllocator"* %15, %"class.v8::internal::compiler::LiveRange"* %16, i32 %5)
  br label %151

151:                                              ; preds = %148, %150
  call void @llvm.lifetime.end.p0i8(i64 4, i8* nonnull %23)
  br label %175

152:                                              ; preds = %14
  %153 = bitcast %"class.v8::internal::compiler::LiveRange"** %8 to i8*
  call void @llvm.lifetime.start.p0i8(i64 8, i8* nonnull %153)
  store %"class.v8::internal::compiler::LiveRange"* %16, %"class.v8::internal::compiler::LiveRange"** %8, align 8
  %154 = icmp eq %"class.v8::internal::compiler::LiveRange"* %16, null
  %155 = icmp eq %"class.v8::internal::compiler::UseInterval"* %18, null
  %156 = or i1 %154, %155
  br i1 %156, label %174, label %157

157:                                              ; preds = %152
  %158 = getelementptr inbounds %"class.v8::internal::compiler::LinearScanAllocator", %"class.v8::internal::compiler::LinearScanAllocator"* %0, i64 0, i32 0, i32 0
  %159 = load %"class.v8::internal::compiler::TopTierRegisterAllocationData"*, %"class.v8::internal::compiler::TopTierRegisterAllocationData"** %158, align 8
  %160 = getelementptr inbounds %"class.v8::internal::compiler::TopTierRegisterAllocationData", %"class.v8::internal::compiler::TopTierRegisterAllocationData"* %159, i64 0, i32 23, i32 0
  %161 = load i32, i32* %160, align 4
  %162 = and i32 %161, 1
  %163 = icmp eq i32 %162, 0
  br i1 %163, label %171, label %164

164:                                              ; preds = %157
  %165 = getelementptr inbounds %"class.v8::internal::compiler::LiveRange", %"class.v8::internal::compiler::LiveRange"* %16, i64 0, i32 5
  %166 = load %"class.v8::internal::compiler::TopLevelLiveRange"*, %"class.v8::internal::compiler::TopLevelLiveRange"** %165, align 8
  %167 = getelementptr inbounds %"class.v8::internal::compiler::TopLevelLiveRange", %"class.v8::internal::compiler::TopLevelLiveRange"* %166, i64 0, i32 1
  %168 = load i32, i32* %167, align 4
  %169 = getelementptr inbounds %"class.v8::internal::compiler::LiveRange", %"class.v8::internal::compiler::LiveRange"* %16, i64 0, i32 0
  %170 = load i32, i32* %169, align 8
  tail call void (i8*, ...) @_ZN2v88internal6PrintFEPKcz(i8* getelementptr inbounds ([35 x i8], [35 x i8]* @.str.80, i64 0, i64 0), i32 %168, i32 %170) #16
  br label %171

171:                                              ; preds = %164, %157
  %172 = getelementptr inbounds %"class.v8::internal::compiler::LinearScanAllocator", %"class.v8::internal::compiler::LinearScanAllocator"* %0, i64 0, i32 1, i32 0, i32 0
  %173 = call %"class.std::__1::__tree_end_node"* @_ZNSt3__16__treeIPN2v88internal8compiler9LiveRangeENS3_19LinearScanAllocator26UnhandledLiveRangeOrderingENS2_13ZoneAllocatorIS5_EEE15__emplace_multiIJRKS5_EEENS_15__tree_iteratorIS5_PNS_11__tree_nodeIS5_PvEElEEDpOT_(%"class.std::__1::__tree.1338"* %172, %"class.v8::internal::compiler::LiveRange"** nonnull dereferenceable(8) %8) #16
  br label %174

174:                                              ; preds = %152, %171
  call void @llvm.lifetime.end.p0i8(i64 8, i8* nonnull %153)
  br label %175

175:                                              ; preds = %174, %151
  ret void
}

; Function Attrs: nofree norecurse nounwind ssp uwtable writeonly
define hidden void @_ZN2v88internal8compiler15OperandAssignerC2EPNS1_29TopTierRegisterAllocationDataE(%"class.v8::internal::compiler::OperandAssigner"* nocapture, %"class.v8::internal::compiler::TopTierRegisterAllocationData"*) unnamed_addr #7 align 2 {
  %3 = getelementptr inbounds %"class.v8::internal::compiler::OperandAssigner", %"class.v8::internal::compiler::OperandAssigner"* %0, i64 0, i32 0
  store %"class.v8::internal::compiler::TopTierRegisterAllocationData"* %1, %"class.v8::internal::compiler::TopTierRegisterAllocationData"** %3, align 8
  ret void
}

; Function Attrs: nounwind ssp uwtable
define hidden void @_ZN2v88internal8compiler15OperandAssigner18DecideSpillingModeEv(%"class.v8::internal::compiler::OperandAssigner"* nocapture readonly) local_unnamed_addr #0 align 2 {
  %2 = alloca %"class.v8::internal::Zone"*, align 8
  %3 = alloca i32, align 4
  %4 = getelementptr inbounds %"class.v8::internal::compiler::OperandAssigner", %"class.v8::internal::compiler::OperandAssigner"* %0, i64 0, i32 0
  %5 = load %"class.v8::internal::compiler::TopTierRegisterAllocationData"*, %"class.v8::internal::compiler::TopTierRegisterAllocationData"** %4, align 8
  %6 = getelementptr inbounds %"class.v8::internal::compiler::TopTierRegisterAllocationData", %"class.v8::internal::compiler::TopTierRegisterAllocationData"* %5, i64 0, i32 9, i32 0, i32 0, i32 0
  %7 = load %"class.v8::internal::compiler::TopLevelLiveRange"**, %"class.v8::internal::compiler::TopLevelLiveRange"*** %6, align 8
  %8 = getelementptr inbounds %"class.v8::internal::compiler::TopTierRegisterAllocationData", %"class.v8::internal::compiler::TopTierRegisterAllocationData"* %5, i64 0, i32 9, i32 0, i32 0, i32 1
  %9 = load %"class.v8::internal::compiler::TopLevelLiveRange"**, %"class.v8::internal::compiler::TopLevelLiveRange"*** %8, align 8
  %10 = icmp eq %"class.v8::internal::compiler::TopLevelLiveRange"** %7, %9
  br i1 %10, label %14, label %11

11:                                               ; preds = %1
  %12 = bitcast %"class.v8::internal::Zone"** %2 to i8*
  %13 = bitcast i32* %3 to i8*
  br label %15

14:                                               ; preds = %81, %1
  ret void

15:                                               ; preds = %84, %11
  %16 = phi %"class.v8::internal::compiler::TopTierRegisterAllocationData"* [ %5, %11 ], [ %85, %84 ]
  %17 = phi %"class.v8::internal::compiler::TopLevelLiveRange"** [ %7, %11 ], [ %82, %84 ]
  %18 = load %"class.v8::internal::compiler::TopLevelLiveRange"*, %"class.v8::internal::compiler::TopLevelLiveRange"** %17, align 8
  %19 = getelementptr inbounds %"class.v8::internal::compiler::TopTierRegisterAllocationData", %"class.v8::internal::compiler::TopTierRegisterAllocationData"* %16, i64 0, i32 24
  %20 = load %"class.v8::internal::TickCounter"*, %"class.v8::internal::TickCounter"** %19, align 8
  call void @_ZN2v88internal11TickCounter26TickAndMaybeEnterSafepointEv(%"class.v8::internal::TickCounter"* %20) #16
  %21 = load %"class.v8::internal::compiler::TopTierRegisterAllocationData"*, %"class.v8::internal::compiler::TopTierRegisterAllocationData"** %4, align 8
  %22 = getelementptr inbounds %"class.v8::internal::compiler::TopTierRegisterAllocationData", %"class.v8::internal::compiler::TopTierRegisterAllocationData"* %21, i64 0, i32 3
  %23 = load %"class.v8::internal::compiler::InstructionSequence"*, %"class.v8::internal::compiler::InstructionSequence"** %22, align 8
  %24 = getelementptr inbounds %"class.v8::internal::compiler::InstructionSequence", %"class.v8::internal::compiler::InstructionSequence"* %23, i64 0, i32 2
  %25 = bitcast %"class.v8::internal::ZoneVector.1170"** %24 to %"class.std::__1::vector.1171"**
  %26 = load %"class.std::__1::vector.1171"*, %"class.std::__1::vector.1171"** %25, align 8
  %27 = getelementptr inbounds %"class.std::__1::vector.1171", %"class.std::__1::vector.1171"* %26, i64 0, i32 0, i32 1
  %28 = bitcast %"class.v8::internal::compiler::InstructionBlock"*** %27 to i64*
  %29 = load i64, i64* %28, align 8
  %30 = bitcast %"class.std::__1::vector.1171"* %26 to i64*
  %31 = load i64, i64* %30, align 8
  %32 = sub i64 %29, %31
  %33 = lshr exact i64 %32, 3
  %34 = trunc i64 %33 to i32
  %35 = icmp eq %"class.v8::internal::compiler::TopLevelLiveRange"* %18, null
  br i1 %35, label %81, label %36

36:                                               ; preds = %15
  %37 = getelementptr inbounds %"class.v8::internal::compiler::TopLevelLiveRange", %"class.v8::internal::compiler::TopLevelLiveRange"* %18, i64 0, i32 0, i32 1
  %38 = load i32, i32* %37, align 4
  %39 = and i32 %38, 96
  %40 = icmp eq i32 %39, 96
  br i1 %40, label %41, label %81

41:                                               ; preds = %36
  %42 = getelementptr inbounds %"class.v8::internal::compiler::TopLevelLiveRange", %"class.v8::internal::compiler::TopLevelLiveRange"* %18, i64 0, i32 0, i32 3
  %43 = load %"class.v8::internal::compiler::UseInterval"*, %"class.v8::internal::compiler::UseInterval"** %42, align 8
  %44 = getelementptr inbounds %"class.v8::internal::compiler::UseInterval", %"class.v8::internal::compiler::UseInterval"* %43, i64 0, i32 0, i32 0
  %45 = load i32, i32* %44, align 8
  %46 = sdiv i32 %45, 4
  %47 = call %"class.v8::internal::compiler::InstructionBlock"* @_ZNK2v88internal8compiler19InstructionSequence19GetInstructionBlockEi(%"class.v8::internal::compiler::InstructionSequence"* %23, i32 %46) #16
  %48 = getelementptr inbounds %"class.v8::internal::compiler::InstructionBlock", %"class.v8::internal::compiler::InstructionBlock"* %47, i64 0, i32 10
  %49 = load i8, i8* %48, align 4, !range !3
  %50 = icmp eq i8 %49, 0
  %51 = load %"class.v8::internal::compiler::TopTierRegisterAllocationData"*, %"class.v8::internal::compiler::TopTierRegisterAllocationData"** %4, align 8
  %52 = getelementptr inbounds %"class.v8::internal::compiler::TopTierRegisterAllocationData", %"class.v8::internal::compiler::TopTierRegisterAllocationData"* %51, i64 0, i32 23, i32 0
  %53 = load i32, i32* %52, align 4
  %54 = and i32 %53, 1
  %55 = icmp ne i32 %54, 0
  br i1 %50, label %67, label %56

56:                                               ; preds = %41
  br i1 %55, label %57, label %60

57:                                               ; preds = %56
  %58 = getelementptr inbounds %"class.v8::internal::compiler::TopLevelLiveRange", %"class.v8::internal::compiler::TopLevelLiveRange"* %18, i64 0, i32 1
  %59 = load i32, i32* %58, align 4
  call void (i8*, ...) @_ZN2v88internal6PrintFEPKcz(i8* getelementptr inbounds ([58 x i8], [58 x i8]* @.str.95, i64 0, i64 0), i32 %59) #16
  br label %60

60:                                               ; preds = %57, %56
  %61 = load i32, i32* %37, align 4
  %62 = and i32 %61, 96
  %63 = icmp eq i32 %62, 96
  br i1 %63, label %64, label %81

64:                                               ; preds = %60
  %65 = and i32 %61, -97
  %66 = or i32 %65, 64
  store i32 %66, i32* %37, align 4
  br label %81

67:                                               ; preds = %41
  br i1 %55, label %68, label %72

68:                                               ; preds = %67
  %69 = getelementptr inbounds %"class.v8::internal::compiler::TopLevelLiveRange", %"class.v8::internal::compiler::TopLevelLiveRange"* %18, i64 0, i32 1
  %70 = load i32, i32* %69, align 4
  call void (i8*, ...) @_ZN2v88internal6PrintFEPKcz(i8* getelementptr inbounds ([63 x i8], [63 x i8]* @.str.96, i64 0, i64 0), i32 %70) #16
  %71 = load %"class.v8::internal::compiler::TopTierRegisterAllocationData"*, %"class.v8::internal::compiler::TopTierRegisterAllocationData"** %4, align 8
  br label %72

72:                                               ; preds = %68, %67
  %73 = phi %"class.v8::internal::compiler::TopTierRegisterAllocationData"* [ %71, %68 ], [ %51, %67 ]
  %74 = getelementptr inbounds %"class.v8::internal::compiler::TopTierRegisterAllocationData", %"class.v8::internal::compiler::TopTierRegisterAllocationData"* %73, i64 0, i32 1
  %75 = load %"class.v8::internal::Zone"*, %"class.v8::internal::Zone"** %74, align 8
  call void @llvm.lifetime.start.p0i8(i64 8, i8* nonnull %12)
  call void @llvm.lifetime.start.p0i8(i64 4, i8* nonnull %13)
  store %"class.v8::internal::Zone"* %75, %"class.v8::internal::Zone"** %2, align 8
  store i32 %34, i32* %3, align 4
  %76 = getelementptr inbounds %"class.v8::internal::compiler::TopLevelLiveRange", %"class.v8::internal::compiler::TopLevelLiveRange"* %18, i64 0, i32 7
  store i32 -1, i32* %76, align 4
  %77 = getelementptr inbounds %"class.v8::internal::compiler::TopLevelLiveRange", %"class.v8::internal::compiler::TopLevelLiveRange"* %18, i64 0, i32 4
  %78 = getelementptr inbounds %union.anon.36, %union.anon.36* %77, i64 0, i32 0
  store %"struct.v8::internal::compiler::TopLevelLiveRange::SpillMoveInsertionList"* null, %"struct.v8::internal::compiler::TopLevelLiveRange::SpillMoveInsertionList"** %78, align 8
  %79 = call %"class.v8::internal::BitVector"* @_ZN2v88internal4Zone3NewINS0_9BitVectorEJRiRPS1_EEEPT_DpOT0_(%"class.v8::internal::Zone"* %75, i32* nonnull dereferenceable(4) %3, %"class.v8::internal::Zone"** nonnull dereferenceable(8) %2) #16
  %80 = bitcast %union.anon.36* %77 to %"class.v8::internal::BitVector"**
  store %"class.v8::internal::BitVector"* %79, %"class.v8::internal::BitVector"** %80, align 8
  call void @llvm.lifetime.end.p0i8(i64 8, i8* nonnull %12)
  call void @llvm.lifetime.end.p0i8(i64 4, i8* nonnull %13)
  br label %81

81:                                               ; preds = %64, %60, %15, %72, %36
  %82 = getelementptr inbounds %"class.v8::internal::compiler::TopLevelLiveRange"*, %"class.v8::internal::compiler::TopLevelLiveRange"** %17, i64 1
  %83 = icmp eq %"class.v8::internal::compiler::TopLevelLiveRange"** %82, %9
  br i1 %83, label %14, label %84

84:                                               ; preds = %81
  %85 = load %"class.v8::internal::compiler::TopTierRegisterAllocationData"*, %"class.v8::internal::compiler::TopTierRegisterAllocationData"** %4, align 8
  br label %15
}

; Function Attrs: nounwind ssp uwtable
define hidden void @_ZN2v88internal8compiler15OperandAssigner16AssignSpillSlotsEv(%"class.v8::internal::compiler::OperandAssigner"* nocapture readonly) local_unnamed_addr #0 align 2 {
  %2 = getelementptr inbounds %"class.v8::internal::compiler::OperandAssigner", %"class.v8::internal::compiler::OperandAssigner"* %0, i64 0, i32 0
  %3 = load %"class.v8::internal::compiler::TopTierRegisterAllocationData"*, %"class.v8::internal::compiler::TopTierRegisterAllocationData"** %2, align 8
  %4 = getelementptr inbounds %"class.v8::internal::compiler::TopTierRegisterAllocationData", %"class.v8::internal::compiler::TopTierRegisterAllocationData"* %3, i64 0, i32 9, i32 0, i32 0, i32 0
  %5 = load %"class.v8::internal::compiler::TopLevelLiveRange"**, %"class.v8::internal::compiler::TopLevelLiveRange"*** %4, align 8
  %6 = getelementptr inbounds %"class.v8::internal::compiler::TopTierRegisterAllocationData", %"class.v8::internal::compiler::TopTierRegisterAllocationData"* %3, i64 0, i32 9, i32 0, i32 0, i32 1
  %7 = load %"class.v8::internal::compiler::TopLevelLiveRange"**, %"class.v8::internal::compiler::TopLevelLiveRange"*** %6, align 8
  %8 = icmp eq %"class.v8::internal::compiler::TopLevelLiveRange"** %5, %7
  br i1 %8, label %9, label %21

9:                                                ; preds = %33, %1
  %10 = phi %"class.v8::internal::compiler::TopTierRegisterAllocationData"* [ %3, %1 ], [ %36, %33 ]
  %11 = getelementptr inbounds %"class.v8::internal::compiler::TopTierRegisterAllocationData", %"class.v8::internal::compiler::TopTierRegisterAllocationData"* %10, i64 0, i32 14, i32 0
  %12 = getelementptr inbounds %"class.v8::internal::compiler::TopTierRegisterAllocationData", %"class.v8::internal::compiler::TopTierRegisterAllocationData"* %10, i64 0, i32 14, i32 0, i32 0, i32 1
  %13 = bitcast %"class.v8::internal::compiler::SpillRange"*** %12 to i64*
  %14 = load i64, i64* %13, align 8
  %15 = bitcast %"class.std::__1::vector.1285"* %11 to i64*
  %16 = load i64, i64* %15, align 8
  %17 = icmp eq i64 %14, %16
  %18 = inttoptr i64 %16 to %"class.v8::internal::compiler::SpillRange"**
  br i1 %17, label %37, label %19

19:                                               ; preds = %9
  %20 = getelementptr inbounds %"class.std::__1::vector.1285", %"class.std::__1::vector.1285"* %11, i64 0, i32 0, i32 0
  br label %42

21:                                               ; preds = %1, %33
  %22 = phi %"class.v8::internal::compiler::TopTierRegisterAllocationData"* [ %36, %33 ], [ %3, %1 ]
  %23 = phi %"class.v8::internal::compiler::TopLevelLiveRange"** [ %34, %33 ], [ %5, %1 ]
  %24 = load %"class.v8::internal::compiler::TopLevelLiveRange"*, %"class.v8::internal::compiler::TopLevelLiveRange"** %23, align 8
  %25 = getelementptr inbounds %"class.v8::internal::compiler::TopTierRegisterAllocationData", %"class.v8::internal::compiler::TopTierRegisterAllocationData"* %22, i64 0, i32 24
  %26 = load %"class.v8::internal::TickCounter"*, %"class.v8::internal::TickCounter"** %25, align 8
  tail call void @_ZN2v88internal11TickCounter26TickAndMaybeEnterSafepointEv(%"class.v8::internal::TickCounter"* %26) #16
  %27 = icmp eq %"class.v8::internal::compiler::TopLevelLiveRange"* %24, null
  br i1 %27, label %33, label %28

28:                                               ; preds = %21
  %29 = getelementptr inbounds %"class.v8::internal::compiler::TopLevelLiveRange", %"class.v8::internal::compiler::TopLevelLiveRange"* %24, i64 0, i32 0, i32 10
  %30 = load %"class.v8::internal::compiler::LiveRangeBundle"*, %"class.v8::internal::compiler::LiveRangeBundle"** %29, align 8
  %31 = icmp eq %"class.v8::internal::compiler::LiveRangeBundle"* %30, null
  br i1 %31, label %33, label %32

32:                                               ; preds = %28
  tail call void @_ZN2v88internal8compiler15LiveRangeBundle24MergeSpillRangesAndClearEv(%"class.v8::internal::compiler::LiveRangeBundle"* nonnull %30)
  br label %33

33:                                               ; preds = %28, %21, %32
  %34 = getelementptr inbounds %"class.v8::internal::compiler::TopLevelLiveRange"*, %"class.v8::internal::compiler::TopLevelLiveRange"** %23, i64 1
  %35 = icmp eq %"class.v8::internal::compiler::TopLevelLiveRange"** %34, %7
  %36 = load %"class.v8::internal::compiler::TopTierRegisterAllocationData"*, %"class.v8::internal::compiler::TopTierRegisterAllocationData"** %2, align 8
  br i1 %35, label %9, label %21

37:                                               ; preds = %95, %9
  %38 = phi i64 [ %14, %9 ], [ %99, %95 ]
  %39 = phi %"class.v8::internal::compiler::SpillRange"** [ %18, %9 ], [ %96, %95 ]
  %40 = inttoptr i64 %38 to %"class.v8::internal::compiler::SpillRange"**
  %41 = icmp eq %"class.v8::internal::compiler::SpillRange"** %39, %40
  br i1 %41, label %105, label %106

42:                                               ; preds = %103, %19
  %43 = phi %"class.v8::internal::compiler::TopTierRegisterAllocationData"* [ %10, %19 ], [ %104, %103 ]
  %44 = phi i64 [ 0, %19 ], [ %98, %103 ]
  %45 = getelementptr inbounds %"class.v8::internal::compiler::TopTierRegisterAllocationData", %"class.v8::internal::compiler::TopTierRegisterAllocationData"* %43, i64 0, i32 24
  %46 = load %"class.v8::internal::TickCounter"*, %"class.v8::internal::TickCounter"** %45, align 8
  tail call void @_ZN2v88internal11TickCounter26TickAndMaybeEnterSafepointEv(%"class.v8::internal::TickCounter"* %46) #16
  %47 = load %"class.v8::internal::compiler::SpillRange"**, %"class.v8::internal::compiler::SpillRange"*** %20, align 8
  %48 = getelementptr inbounds %"class.v8::internal::compiler::SpillRange"*, %"class.v8::internal::compiler::SpillRange"** %47, i64 %44
  %49 = load %"class.v8::internal::compiler::SpillRange"*, %"class.v8::internal::compiler::SpillRange"** %48, align 8
  %50 = icmp eq %"class.v8::internal::compiler::SpillRange"* %49, null
  %51 = ptrtoint %"class.v8::internal::compiler::SpillRange"** %47 to i64
  br i1 %50, label %95, label %52

52:                                               ; preds = %42
  %53 = getelementptr inbounds %"class.v8::internal::compiler::SpillRange", %"class.v8::internal::compiler::SpillRange"* %49, i64 0, i32 0, i32 0, i32 0, i32 0
  %54 = load %"class.v8::internal::compiler::TopLevelLiveRange"**, %"class.v8::internal::compiler::TopLevelLiveRange"*** %53, align 8
  %55 = getelementptr inbounds %"class.v8::internal::compiler::SpillRange", %"class.v8::internal::compiler::SpillRange"* %49, i64 0, i32 0, i32 0, i32 0, i32 1
  %56 = load %"class.v8::internal::compiler::TopLevelLiveRange"**, %"class.v8::internal::compiler::TopLevelLiveRange"*** %55, align 8
  %57 = icmp eq %"class.v8::internal::compiler::TopLevelLiveRange"** %54, %56
  br i1 %57, label %95, label %58

58:                                               ; preds = %52
  %59 = add nuw i64 %44, 1
  %60 = load i64, i64* %13, align 8
  %61 = sub i64 %60, %51
  %62 = ashr exact i64 %61, 3
  %63 = icmp ult i64 %59, %62
  br i1 %63, label %64, label %95

64:                                               ; preds = %58, %85
  %65 = phi %"class.v8::internal::compiler::SpillRange"** [ %86, %85 ], [ %47, %58 ]
  %66 = phi i64 [ %87, %85 ], [ %51, %58 ]
  %67 = phi i64 [ %88, %85 ], [ %51, %58 ]
  %68 = phi i64 [ %89, %85 ], [ %60, %58 ]
  %69 = phi %"class.v8::internal::compiler::SpillRange"** [ %94, %85 ], [ %47, %58 ]
  %70 = phi i64 [ %90, %85 ], [ %59, %58 ]
  %71 = getelementptr inbounds %"class.v8::internal::compiler::SpillRange"*, %"class.v8::internal::compiler::SpillRange"** %69, i64 %70
  %72 = load %"class.v8::internal::compiler::SpillRange"*, %"class.v8::internal::compiler::SpillRange"** %71, align 8
  %73 = icmp eq %"class.v8::internal::compiler::SpillRange"* %72, null
  br i1 %73, label %85, label %74

74:                                               ; preds = %64
  %75 = getelementptr inbounds %"class.v8::internal::compiler::SpillRange", %"class.v8::internal::compiler::SpillRange"* %72, i64 0, i32 0, i32 0, i32 0, i32 0
  %76 = load %"class.v8::internal::compiler::TopLevelLiveRange"**, %"class.v8::internal::compiler::TopLevelLiveRange"*** %75, align 8
  %77 = getelementptr inbounds %"class.v8::internal::compiler::SpillRange", %"class.v8::internal::compiler::SpillRange"* %72, i64 0, i32 0, i32 0, i32 0, i32 1
  %78 = load %"class.v8::internal::compiler::TopLevelLiveRange"**, %"class.v8::internal::compiler::TopLevelLiveRange"*** %77, align 8
  %79 = icmp eq %"class.v8::internal::compiler::TopLevelLiveRange"** %76, %78
  br i1 %79, label %85, label %80

80:                                               ; preds = %74
  %81 = tail call zeroext i1 @_ZN2v88internal8compiler10SpillRange8TryMergeEPS2_(%"class.v8::internal::compiler::SpillRange"* nonnull %49, %"class.v8::internal::compiler::SpillRange"* nonnull %72)
  %82 = load i64, i64* %13, align 8
  %83 = load i64, i64* %15, align 8
  %84 = inttoptr i64 %83 to %"class.v8::internal::compiler::SpillRange"**
  br label %85

85:                                               ; preds = %64, %80, %74
  %86 = phi %"class.v8::internal::compiler::SpillRange"** [ %65, %64 ], [ %84, %80 ], [ %65, %74 ]
  %87 = phi i64 [ %66, %64 ], [ %83, %80 ], [ %66, %74 ]
  %88 = phi i64 [ %67, %64 ], [ %83, %80 ], [ %67, %74 ]
  %89 = phi i64 [ %68, %64 ], [ %82, %80 ], [ %68, %74 ]
  %90 = add nuw i64 %70, 1
  %91 = sub i64 %89, %88
  %92 = ashr exact i64 %91, 3
  %93 = icmp ult i64 %90, %92
  %94 = inttoptr i64 %88 to %"class.v8::internal::compiler::SpillRange"**
  br i1 %93, label %64, label %95

95:                                               ; preds = %85, %58, %52, %42
  %96 = phi %"class.v8::internal::compiler::SpillRange"** [ %47, %58 ], [ %47, %52 ], [ %47, %42 ], [ %86, %85 ]
  %97 = phi i64 [ %51, %58 ], [ %51, %52 ], [ %51, %42 ], [ %87, %85 ]
  %98 = add nuw i64 %44, 1
  %99 = load i64, i64* %13, align 8
  %100 = sub i64 %99, %97
  %101 = ashr exact i64 %100, 3
  %102 = icmp ult i64 %98, %101
  br i1 %102, label %103, label %37

103:                                              ; preds = %95
  %104 = load %"class.v8::internal::compiler::TopTierRegisterAllocationData"*, %"class.v8::internal::compiler::TopTierRegisterAllocationData"** %2, align 8
  br label %42

105:                                              ; preds = %144, %37
  ret void

106:                                              ; preds = %37, %144
  %107 = phi %"class.v8::internal::compiler::SpillRange"** [ %145, %144 ], [ %39, %37 ]
  %108 = load %"class.v8::internal::compiler::SpillRange"*, %"class.v8::internal::compiler::SpillRange"** %107, align 8
  %109 = load %"class.v8::internal::compiler::TopTierRegisterAllocationData"*, %"class.v8::internal::compiler::TopTierRegisterAllocationData"** %2, align 8
  %110 = getelementptr inbounds %"class.v8::internal::compiler::TopTierRegisterAllocationData", %"class.v8::internal::compiler::TopTierRegisterAllocationData"* %109, i64 0, i32 24
  %111 = load %"class.v8::internal::TickCounter"*, %"class.v8::internal::TickCounter"** %110, align 8
  tail call void @_ZN2v88internal11TickCounter26TickAndMaybeEnterSafepointEv(%"class.v8::internal::TickCounter"* %111) #16
  %112 = icmp eq %"class.v8::internal::compiler::SpillRange"* %108, null
  br i1 %112, label %144, label %113

113:                                              ; preds = %106
  %114 = getelementptr inbounds %"class.v8::internal::compiler::SpillRange", %"class.v8::internal::compiler::SpillRange"* %108, i64 0, i32 0, i32 0, i32 0, i32 0
  %115 = load %"class.v8::internal::compiler::TopLevelLiveRange"**, %"class.v8::internal::compiler::TopLevelLiveRange"*** %114, align 8
  %116 = getelementptr inbounds %"class.v8::internal::compiler::SpillRange", %"class.v8::internal::compiler::SpillRange"* %108, i64 0, i32 0, i32 0, i32 0, i32 1
  %117 = load %"class.v8::internal::compiler::TopLevelLiveRange"**, %"class.v8::internal::compiler::TopLevelLiveRange"*** %116, align 8
  %118 = icmp eq %"class.v8::internal::compiler::TopLevelLiveRange"** %115, %117
  br i1 %118, label %144, label %119

119:                                              ; preds = %113
  %120 = getelementptr inbounds %"class.v8::internal::compiler::SpillRange", %"class.v8::internal::compiler::SpillRange"* %108, i64 0, i32 3
  %121 = load i32, i32* %120, align 4
  %122 = icmp eq i32 %121, -1
  br i1 %122, label %123, label %144

123:                                              ; preds = %119
  %124 = getelementptr inbounds %"class.v8::internal::compiler::SpillRange", %"class.v8::internal::compiler::SpillRange"* %108, i64 0, i32 4
  %125 = load i32, i32* %124, align 8
  %126 = load %"class.v8::internal::compiler::TopTierRegisterAllocationData"*, %"class.v8::internal::compiler::TopTierRegisterAllocationData"** %2, align 8
  %127 = getelementptr inbounds %"class.v8::internal::compiler::TopTierRegisterAllocationData", %"class.v8::internal::compiler::TopTierRegisterAllocationData"* %126, i64 0, i32 2
  %128 = load %"class.v8::internal::compiler::Frame"*, %"class.v8::internal::compiler::Frame"** %127, align 8
  %129 = icmp sgt i32 %125, 8
  %130 = select i1 %129, i32 %125, i32 8
  %131 = add nuw nsw i32 %130, 7
  %132 = lshr i32 %131, 3
  %133 = getelementptr inbounds %"class.v8::internal::compiler::Frame", %"class.v8::internal::compiler::Frame"* %128, i64 0, i32 3
  %134 = getelementptr inbounds %"class.v8::internal::compiler::Frame", %"class.v8::internal::compiler::Frame"* %128, i64 0, i32 3, i32 3
  %135 = load i32, i32* %134, align 4
  %136 = tail call i32 @_ZN2v88internal20AlignedSlotAllocator8AllocateEi(%"class.v8::internal::AlignedSlotAllocator"* %133, i32 %132) #16
  %137 = load i32, i32* %134, align 4
  %138 = sub i32 %137, %135
  %139 = getelementptr inbounds %"class.v8::internal::compiler::Frame", %"class.v8::internal::compiler::Frame"* %128, i64 0, i32 1
  %140 = load i32, i32* %139, align 4
  %141 = add nsw i32 %138, %140
  store i32 %141, i32* %139, align 4
  %142 = add nsw i32 %132, -1
  %143 = add i32 %142, %136
  store i32 %143, i32* %120, align 4
  br label %144

144:                                              ; preds = %119, %123, %106, %113
  %145 = getelementptr inbounds %"class.v8::internal::compiler::SpillRange"*, %"class.v8::internal::compiler::SpillRange"** %107, i64 1
  %146 = icmp eq %"class.v8::internal::compiler::SpillRange"** %145, %40
  br i1 %146, label %105, label %106
}

; Function Attrs: nounwind ssp uwtable
define hidden void @_ZN2v88internal8compiler15OperandAssigner16CommitAssignmentEv(%"class.v8::internal::compiler::OperandAssigner"* nocapture readonly) local_unnamed_addr #0 align 2 {
  %2 = alloca %"class.v8::internal::compiler::InstructionOperand", align 8
  %3 = getelementptr inbounds %"class.v8::internal::compiler::OperandAssigner", %"class.v8::internal::compiler::OperandAssigner"* %0, i64 0, i32 0
  %4 = load %"class.v8::internal::compiler::TopTierRegisterAllocationData"*, %"class.v8::internal::compiler::TopTierRegisterAllocationData"** %3, align 8
  %5 = getelementptr inbounds %"class.v8::internal::compiler::TopTierRegisterAllocationData", %"class.v8::internal::compiler::TopTierRegisterAllocationData"* %4, i64 0, i32 9, i32 0
  %6 = getelementptr inbounds %"class.v8::internal::compiler::TopTierRegisterAllocationData", %"class.v8::internal::compiler::TopTierRegisterAllocationData"* %4, i64 0, i32 9, i32 0, i32 0, i32 1
  %7 = bitcast %"class.v8::internal::compiler::TopLevelLiveRange"*** %6 to i64*
  %8 = load i64, i64* %7, align 8
  %9 = bitcast %"class.std::__1::vector"* %5 to i64*
  %10 = load i64, i64* %9, align 8
  %11 = sub i64 %8, %10
  %12 = inttoptr i64 %10 to %"class.v8::internal::compiler::TopLevelLiveRange"**
  %13 = inttoptr i64 %8 to %"class.v8::internal::compiler::TopLevelLiveRange"**
  %14 = icmp eq %"class.v8::internal::compiler::TopLevelLiveRange"** %12, %13
  br i1 %14, label %31, label %15

15:                                               ; preds = %1
  %16 = bitcast %"class.v8::internal::compiler::InstructionOperand"* %2 to i8*
  %17 = getelementptr inbounds %"class.v8::internal::compiler::InstructionOperand", %"class.v8::internal::compiler::InstructionOperand"* %2, i64 0, i32 0
  %18 = inttoptr i64 %10 to i64*
  %19 = load i64, i64* %18, align 8
  %20 = getelementptr inbounds %"class.v8::internal::compiler::TopTierRegisterAllocationData", %"class.v8::internal::compiler::TopTierRegisterAllocationData"* %4, i64 0, i32 24
  %21 = load %"class.v8::internal::TickCounter"*, %"class.v8::internal::TickCounter"** %20, align 8
  call void @_ZN2v88internal11TickCounter26TickAndMaybeEnterSafepointEv(%"class.v8::internal::TickCounter"* %21) #16
  %22 = load %"class.v8::internal::compiler::TopTierRegisterAllocationData"*, %"class.v8::internal::compiler::TopTierRegisterAllocationData"** %3, align 8
  %23 = getelementptr inbounds %"class.v8::internal::compiler::TopTierRegisterAllocationData", %"class.v8::internal::compiler::TopTierRegisterAllocationData"* %22, i64 0, i32 9, i32 0
  %24 = getelementptr inbounds %"class.v8::internal::compiler::TopTierRegisterAllocationData", %"class.v8::internal::compiler::TopTierRegisterAllocationData"* %22, i64 0, i32 9, i32 0, i32 0, i32 1
  %25 = bitcast %"class.v8::internal::compiler::TopLevelLiveRange"*** %24 to i64*
  %26 = load i64, i64* %25, align 8
  %27 = bitcast %"class.std::__1::vector"* %23 to i64*
  %28 = load i64, i64* %27, align 8
  %29 = sub i64 %26, %28
  %30 = icmp eq i64 %11, %29
  br i1 %30, label %33, label %32, !prof !80

31:                                               ; preds = %378, %1
  ret void

32:                                               ; preds = %381, %15
  call void (i8*, ...) @_Z8V8_FatalPKcz(i8* getelementptr inbounds ([18 x i8], [18 x i8]* @.str.1, i64 0, i64 0), i8* getelementptr inbounds ([49 x i8], [49 x i8]* @.str.32, i64 0, i64 0)) #17
  unreachable

33:                                               ; preds = %15, %381
  %34 = phi %"class.v8::internal::compiler::TopTierRegisterAllocationData"* [ %387, %381 ], [ %22, %15 ]
  %35 = phi i64 [ %384, %381 ], [ %19, %15 ]
  %36 = phi %"class.v8::internal::compiler::TopLevelLiveRange"** [ %379, %381 ], [ %12, %15 ]
  %37 = inttoptr i64 %35 to %"class.v8::internal::compiler::TopLevelLiveRange"*
  %38 = icmp eq i64 %35, 0
  br i1 %38, label %378, label %39

39:                                               ; preds = %33
  %40 = inttoptr i64 %35 to %"class.v8::internal::compiler::LiveRange"*
  %41 = getelementptr inbounds %"class.v8::internal::compiler::LiveRange", %"class.v8::internal::compiler::LiveRange"* %40, i64 0, i32 3
  %42 = load %"class.v8::internal::compiler::UseInterval"*, %"class.v8::internal::compiler::UseInterval"** %41, align 8
  %43 = icmp eq %"class.v8::internal::compiler::UseInterval"* %42, null
  br i1 %43, label %378, label %44

44:                                               ; preds = %39
  call void @llvm.lifetime.start.p0i8(i64 8, i8* nonnull %16) #16
  store i64 0, i64* %17, align 8
  %45 = getelementptr inbounds %"class.v8::internal::compiler::TopLevelLiveRange", %"class.v8::internal::compiler::TopLevelLiveRange"* %37, i64 0, i32 0, i32 1
  %46 = load i32, i32* %45, align 4
  %47 = and i32 %46, 96
  %48 = icmp eq i32 %47, 32
  br i1 %48, label %49, label %85

49:                                               ; preds = %44
  %50 = getelementptr inbounds %"class.v8::internal::compiler::TopTierRegisterAllocationData", %"class.v8::internal::compiler::TopTierRegisterAllocationData"* %34, i64 0, i32 25, i32 0, i32 0, i32 1, i32 0, i32 0
  %51 = bitcast %"class.std::__1::__tree_end_node"* %50 to %"class.std::__1::__tree_node.1569"**
  %52 = load %"class.std::__1::__tree_node.1569"*, %"class.std::__1::__tree_node.1569"** %51, align 8
  %53 = icmp eq %"class.std::__1::__tree_node.1569"* %52, null
  br i1 %53, label %80, label %54

54:                                               ; preds = %49, %54
  %55 = phi %"class.std::__1::__tree_end_node"* [ %65, %54 ], [ %50, %49 ]
  %56 = phi %"class.std::__1::__tree_node.1569"* [ %66, %54 ], [ %52, %49 ]
  %57 = getelementptr inbounds %"class.std::__1::__tree_node.1569", %"class.std::__1::__tree_node.1569"* %56, i64 0, i32 1, i32 0, i32 0
  %58 = load %"class.v8::internal::compiler::TopLevelLiveRange"*, %"class.v8::internal::compiler::TopLevelLiveRange"** %57, align 8
  %59 = icmp ult %"class.v8::internal::compiler::TopLevelLiveRange"* %58, %37
  %60 = getelementptr inbounds %"class.std::__1::__tree_node.1569", %"class.std::__1::__tree_node.1569"* %56, i64 0, i32 0, i32 1
  %61 = bitcast %"class.std::__1::__tree_node_base"** %60 to %"class.std::__1::__tree_node.1569"**
  %62 = getelementptr inbounds %"class.std::__1::__tree_node.1569", %"class.std::__1::__tree_node.1569"* %56, i64 0, i32 0, i32 0
  %63 = bitcast %"class.std::__1::__tree_node.1569"* %56 to %"class.std::__1::__tree_node.1569"**
  %64 = select i1 %59, %"class.std::__1::__tree_node.1569"** %61, %"class.std::__1::__tree_node.1569"** %63
  %65 = select i1 %59, %"class.std::__1::__tree_end_node"* %55, %"class.std::__1::__tree_end_node"* %62
  %66 = load %"class.std::__1::__tree_node.1569"*, %"class.std::__1::__tree_node.1569"** %64, align 8
  %67 = icmp eq %"class.std::__1::__tree_node.1569"* %66, null
  br i1 %67, label %68, label %54

68:                                               ; preds = %54
  %69 = icmp eq %"class.std::__1::__tree_end_node"* %65, %50
  br i1 %69, label %80, label %70

70:                                               ; preds = %68
  %71 = getelementptr inbounds %"class.std::__1::__tree_end_node", %"class.std::__1::__tree_end_node"* %65, i64 4
  %72 = bitcast %"class.std::__1::__tree_end_node"* %71 to %"class.v8::internal::compiler::TopLevelLiveRange"**
  %73 = load %"class.v8::internal::compiler::TopLevelLiveRange"*, %"class.v8::internal::compiler::TopLevelLiveRange"** %72, align 8
  %74 = icmp ugt %"class.v8::internal::compiler::TopLevelLiveRange"* %73, %37
  br i1 %74, label %80, label %75

75:                                               ; preds = %70
  %76 = getelementptr inbounds %"class.std::__1::__tree_end_node", %"class.std::__1::__tree_end_node"* %65, i64 5
  %77 = bitcast %"class.std::__1::__tree_end_node"* %76 to i64**
  %78 = load i64*, i64** %77, align 8
  %79 = load i64, i64* %78, align 8
  br label %101

80:                                               ; preds = %70, %68, %49
  %81 = getelementptr inbounds %"class.v8::internal::compiler::TopLevelLiveRange", %"class.v8::internal::compiler::TopLevelLiveRange"* %37, i64 0, i32 3, i32 0
  %82 = load %"class.v8::internal::compiler::InstructionOperand"*, %"class.v8::internal::compiler::InstructionOperand"** %81, align 8
  %83 = getelementptr inbounds %"class.v8::internal::compiler::InstructionOperand", %"class.v8::internal::compiler::InstructionOperand"* %82, i64 0, i32 0
  %84 = load i64, i64* %83, align 8
  br label %101

85:                                               ; preds = %44
  %86 = and i32 %46, 64
  %87 = icmp eq i32 %86, 0
  br i1 %87, label %103, label %88

88:                                               ; preds = %85
  %89 = getelementptr inbounds %"class.v8::internal::compiler::TopLevelLiveRange", %"class.v8::internal::compiler::TopLevelLiveRange"* %37, i64 0, i32 3
  %90 = bitcast %union.anon* %89 to %"class.v8::internal::compiler::SpillRange"**
  %91 = load %"class.v8::internal::compiler::SpillRange"*, %"class.v8::internal::compiler::SpillRange"** %90, align 8
  %92 = getelementptr inbounds %"class.v8::internal::compiler::SpillRange", %"class.v8::internal::compiler::SpillRange"* %91, i64 0, i32 3
  %93 = load i32, i32* %92, align 4
  %94 = lshr i32 %46, 8
  %95 = and i32 %94, 8160
  %96 = zext i32 %93 to i64
  %97 = shl i64 %96, 35
  %98 = or i32 %95, 13
  %99 = zext i32 %98 to i64
  %100 = or i64 %97, %99
  br label %101

101:                                              ; preds = %88, %80, %75
  %102 = phi i64 [ %79, %75 ], [ %84, %80 ], [ %100, %88 ]
  store i64 %102, i64* %17, align 8
  br label %103

103:                                              ; preds = %101, %85
  %104 = load i32, i32* %45, align 4
  %105 = and i32 %104, 8
  %106 = icmp eq i32 %105, 0
  br i1 %106, label %107, label %108

107:                                              ; preds = %205, %208, %181, %103
  br label %239

108:                                              ; preds = %103
  %109 = getelementptr inbounds %"class.v8::internal::compiler::TopLevelLiveRange", %"class.v8::internal::compiler::TopLevelLiveRange"* %37, i64 0, i32 1
  %110 = load i32, i32* %109, align 4
  %111 = getelementptr inbounds %"class.v8::internal::compiler::TopTierRegisterAllocationData", %"class.v8::internal::compiler::TopTierRegisterAllocationData"* %34, i64 0, i32 6, i32 0, i32 0, i32 1, i32 0, i32 0
  %112 = bitcast %"class.std::__1::__tree_end_node"* %111 to %"class.std::__1::__tree_node.1558"**
  %113 = load %"class.std::__1::__tree_node.1558"*, %"class.std::__1::__tree_node.1558"** %112, align 8
  %114 = icmp eq %"class.std::__1::__tree_node.1558"* %113, null
  br i1 %114, label %136, label %115

115:                                              ; preds = %108, %115
  %116 = phi %"class.std::__1::__tree_end_node"* [ %126, %115 ], [ %111, %108 ]
  %117 = phi %"class.std::__1::__tree_node.1558"* [ %127, %115 ], [ %113, %108 ]
  %118 = getelementptr inbounds %"class.std::__1::__tree_node.1558", %"class.std::__1::__tree_node.1558"* %117, i64 0, i32 1, i32 0, i32 0
  %119 = load i32, i32* %118, align 4
  %120 = icmp slt i32 %119, %110
  %121 = getelementptr inbounds %"class.std::__1::__tree_node.1558", %"class.std::__1::__tree_node.1558"* %117, i64 0, i32 0, i32 1
  %122 = bitcast %"class.std::__1::__tree_node_base"** %121 to %"class.std::__1::__tree_node.1558"**
  %123 = getelementptr inbounds %"class.std::__1::__tree_node.1558", %"class.std::__1::__tree_node.1558"* %117, i64 0, i32 0, i32 0
  %124 = bitcast %"class.std::__1::__tree_node.1558"* %117 to %"class.std::__1::__tree_node.1558"**
  %125 = select i1 %120, %"class.std::__1::__tree_node.1558"** %122, %"class.std::__1::__tree_node.1558"** %124
  %126 = select i1 %120, %"class.std::__1::__tree_end_node"* %116, %"class.std::__1::__tree_end_node"* %123
  %127 = load %"class.std::__1::__tree_node.1558"*, %"class.std::__1::__tree_node.1558"** %125, align 8
  %128 = icmp eq %"class.std::__1::__tree_node.1558"* %127, null
  br i1 %128, label %129, label %115

129:                                              ; preds = %115
  %130 = icmp eq %"class.std::__1::__tree_end_node"* %126, %111
  br i1 %130, label %136, label %131

131:                                              ; preds = %129
  %132 = getelementptr inbounds %"class.std::__1::__tree_end_node", %"class.std::__1::__tree_end_node"* %126, i64 4
  %133 = bitcast %"class.std::__1::__tree_end_node"* %132 to i32*
  %134 = load i32, i32* %133, align 4
  %135 = icmp sgt i32 %134, %110
  br i1 %135, label %136, label %137

136:                                              ; preds = %131, %129, %108
  br label %137

137:                                              ; preds = %131, %136
  %138 = phi %"class.std::__1::__tree_end_node"* [ %111, %136 ], [ %126, %131 ]
  %139 = getelementptr inbounds %"class.std::__1::__tree_end_node", %"class.std::__1::__tree_end_node"* %138, i64 5
  %140 = bitcast %"class.std::__1::__tree_end_node"* %139 to %"class.v8::internal::compiler::TopTierRegisterAllocationData::PhiMapValue"**
  %141 = load %"class.v8::internal::compiler::TopTierRegisterAllocationData::PhiMapValue"*, %"class.v8::internal::compiler::TopTierRegisterAllocationData::PhiMapValue"** %140, align 8
  %142 = getelementptr inbounds %"class.v8::internal::compiler::LiveRange", %"class.v8::internal::compiler::LiveRange"* %40, i64 0, i32 1
  %143 = load i32, i32* %142, align 4
  %144 = and i32 %143, 8064
  %145 = icmp eq i32 %144, 4096
  br i1 %145, label %156, label %146

146:                                              ; preds = %137
  %147 = lshr i32 %143, 7
  %148 = and i32 %147, 63
  %149 = lshr i32 %143, 8
  %150 = and i32 %149, 8160
  %151 = zext i32 %148 to i64
  %152 = shl nuw nsw i64 %151, 35
  %153 = or i32 %150, 5
  %154 = zext i32 %153 to i64
  %155 = or i64 %152, %154
  br label %181

156:                                              ; preds = %137
  %157 = getelementptr inbounds %"class.v8::internal::compiler::LiveRange", %"class.v8::internal::compiler::LiveRange"* %40, i64 0, i32 5
  %158 = load %"class.v8::internal::compiler::TopLevelLiveRange"*, %"class.v8::internal::compiler::TopLevelLiveRange"** %157, align 8
  %159 = getelementptr inbounds %"class.v8::internal::compiler::TopLevelLiveRange", %"class.v8::internal::compiler::TopLevelLiveRange"* %158, i64 0, i32 0, i32 1
  %160 = load i32, i32* %159, align 4
  %161 = and i32 %160, 96
  %162 = icmp eq i32 %161, 32
  br i1 %162, label %163, label %168

163:                                              ; preds = %156
  %164 = getelementptr inbounds %"class.v8::internal::compiler::TopLevelLiveRange", %"class.v8::internal::compiler::TopLevelLiveRange"* %158, i64 0, i32 3, i32 0
  %165 = load %"class.v8::internal::compiler::InstructionOperand"*, %"class.v8::internal::compiler::InstructionOperand"** %164, align 8
  %166 = getelementptr inbounds %"class.v8::internal::compiler::InstructionOperand", %"class.v8::internal::compiler::InstructionOperand"* %165, i64 0, i32 0
  %167 = load i64, i64* %166, align 8
  br label %181

168:                                              ; preds = %156
  %169 = getelementptr inbounds %"class.v8::internal::compiler::TopLevelLiveRange", %"class.v8::internal::compiler::TopLevelLiveRange"* %158, i64 0, i32 3
  %170 = bitcast %union.anon* %169 to %"class.v8::internal::compiler::SpillRange"**
  %171 = load %"class.v8::internal::compiler::SpillRange"*, %"class.v8::internal::compiler::SpillRange"** %170, align 8
  %172 = getelementptr inbounds %"class.v8::internal::compiler::SpillRange", %"class.v8::internal::compiler::SpillRange"* %171, i64 0, i32 3
  %173 = load i32, i32* %172, align 4
  %174 = lshr i32 %160, 8
  %175 = and i32 %174, 8160
  %176 = zext i32 %173 to i64
  %177 = shl i64 %176, 35
  %178 = or i32 %175, 13
  %179 = zext i32 %178 to i64
  %180 = or i64 %177, %179
  br label %181

181:                                              ; preds = %146, %163, %168
  %182 = phi i64 [ %155, %146 ], [ %167, %163 ], [ %180, %168 ]
  %183 = getelementptr inbounds %"class.v8::internal::compiler::TopTierRegisterAllocationData::PhiMapValue", %"class.v8::internal::compiler::TopTierRegisterAllocationData::PhiMapValue"* %141, i64 0, i32 2, i32 0, i32 0, i32 0
  %184 = load %"class.v8::internal::compiler::InstructionOperand"**, %"class.v8::internal::compiler::InstructionOperand"*** %183, align 8
  %185 = getelementptr inbounds %"class.v8::internal::compiler::TopTierRegisterAllocationData::PhiMapValue", %"class.v8::internal::compiler::TopTierRegisterAllocationData::PhiMapValue"* %141, i64 0, i32 2, i32 0, i32 0, i32 1
  %186 = load %"class.v8::internal::compiler::InstructionOperand"**, %"class.v8::internal::compiler::InstructionOperand"*** %185, align 8
  %187 = icmp eq %"class.v8::internal::compiler::InstructionOperand"** %184, %186
  br i1 %187, label %107, label %188

188:                                              ; preds = %181
  %189 = ptrtoint %"class.v8::internal::compiler::InstructionOperand"** %184 to i64
  %190 = getelementptr %"class.v8::internal::compiler::InstructionOperand"*, %"class.v8::internal::compiler::InstructionOperand"** %186, i64 -1
  %191 = ptrtoint %"class.v8::internal::compiler::InstructionOperand"** %190 to i64
  %192 = sub i64 %191, %189
  %193 = lshr i64 %192, 3
  %194 = add nuw nsw i64 %193, 1
  %195 = and i64 %194, 7
  %196 = icmp eq i64 %195, 0
  br i1 %196, label %205, label %197

197:                                              ; preds = %188, %197
  %198 = phi %"class.v8::internal::compiler::InstructionOperand"** [ %202, %197 ], [ %184, %188 ]
  %199 = phi i64 [ %203, %197 ], [ %195, %188 ]
  %200 = load %"class.v8::internal::compiler::InstructionOperand"*, %"class.v8::internal::compiler::InstructionOperand"** %198, align 8
  %201 = getelementptr inbounds %"class.v8::internal::compiler::InstructionOperand", %"class.v8::internal::compiler::InstructionOperand"* %200, i64 0, i32 0
  store i64 %182, i64* %201, align 8
  %202 = getelementptr inbounds %"class.v8::internal::compiler::InstructionOperand"*, %"class.v8::internal::compiler::InstructionOperand"** %198, i64 1
  %203 = add i64 %199, -1
  %204 = icmp eq i64 %203, 0
  br i1 %204, label %205, label %197, !llvm.loop !176

205:                                              ; preds = %197, %188
  %206 = phi %"class.v8::internal::compiler::InstructionOperand"** [ %184, %188 ], [ %202, %197 ]
  %207 = icmp ult i64 %192, 56
  br i1 %207, label %107, label %208

208:                                              ; preds = %205, %208
  %209 = phi %"class.v8::internal::compiler::InstructionOperand"** [ %233, %208 ], [ %206, %205 ]
  %210 = load %"class.v8::internal::compiler::InstructionOperand"*, %"class.v8::internal::compiler::InstructionOperand"** %209, align 8
  %211 = getelementptr inbounds %"class.v8::internal::compiler::InstructionOperand", %"class.v8::internal::compiler::InstructionOperand"* %210, i64 0, i32 0
  store i64 %182, i64* %211, align 8
  %212 = getelementptr inbounds %"class.v8::internal::compiler::InstructionOperand"*, %"class.v8::internal::compiler::InstructionOperand"** %209, i64 1
  %213 = load %"class.v8::internal::compiler::InstructionOperand"*, %"class.v8::internal::compiler::InstructionOperand"** %212, align 8
  %214 = getelementptr inbounds %"class.v8::internal::compiler::InstructionOperand", %"class.v8::internal::compiler::InstructionOperand"* %213, i64 0, i32 0
  store i64 %182, i64* %214, align 8
  %215 = getelementptr inbounds %"class.v8::internal::compiler::InstructionOperand"*, %"class.v8::internal::compiler::InstructionOperand"** %209, i64 2
  %216 = load %"class.v8::internal::compiler::InstructionOperand"*, %"class.v8::internal::compiler::InstructionOperand"** %215, align 8
  %217 = getelementptr inbounds %"class.v8::internal::compiler::InstructionOperand", %"class.v8::internal::compiler::InstructionOperand"* %216, i64 0, i32 0
  store i64 %182, i64* %217, align 8
  %218 = getelementptr inbounds %"class.v8::internal::compiler::InstructionOperand"*, %"class.v8::internal::compiler::InstructionOperand"** %209, i64 3
  %219 = load %"class.v8::internal::compiler::InstructionOperand"*, %"class.v8::internal::compiler::InstructionOperand"** %218, align 8
  %220 = getelementptr inbounds %"class.v8::internal::compiler::InstructionOperand", %"class.v8::internal::compiler::InstructionOperand"* %219, i64 0, i32 0
  store i64 %182, i64* %220, align 8
  %221 = getelementptr inbounds %"class.v8::internal::compiler::InstructionOperand"*, %"class.v8::internal::compiler::InstructionOperand"** %209, i64 4
  %222 = load %"class.v8::internal::compiler::InstructionOperand"*, %"class.v8::internal::compiler::InstructionOperand"** %221, align 8
  %223 = getelementptr inbounds %"class.v8::internal::compiler::InstructionOperand", %"class.v8::internal::compiler::InstructionOperand"* %222, i64 0, i32 0
  store i64 %182, i64* %223, align 8
  %224 = getelementptr inbounds %"class.v8::internal::compiler::InstructionOperand"*, %"class.v8::internal::compiler::InstructionOperand"** %209, i64 5
  %225 = load %"class.v8::internal::compiler::InstructionOperand"*, %"class.v8::internal::compiler::InstructionOperand"** %224, align 8
  %226 = getelementptr inbounds %"class.v8::internal::compiler::InstructionOperand", %"class.v8::internal::compiler::InstructionOperand"* %225, i64 0, i32 0
  store i64 %182, i64* %226, align 8
  %227 = getelementptr inbounds %"class.v8::internal::compiler::InstructionOperand"*, %"class.v8::internal::compiler::InstructionOperand"** %209, i64 6
  %228 = load %"class.v8::internal::compiler::InstructionOperand"*, %"class.v8::internal::compiler::InstructionOperand"** %227, align 8
  %229 = getelementptr inbounds %"class.v8::internal::compiler::InstructionOperand", %"class.v8::internal::compiler::InstructionOperand"* %228, i64 0, i32 0
  store i64 %182, i64* %229, align 8
  %230 = getelementptr inbounds %"class.v8::internal::compiler::InstructionOperand"*, %"class.v8::internal::compiler::InstructionOperand"** %209, i64 7
  %231 = load %"class.v8::internal::compiler::InstructionOperand"*, %"class.v8::internal::compiler::InstructionOperand"** %230, align 8
  %232 = getelementptr inbounds %"class.v8::internal::compiler::InstructionOperand", %"class.v8::internal::compiler::InstructionOperand"* %231, i64 0, i32 0
  store i64 %182, i64* %232, align 8
  %233 = getelementptr inbounds %"class.v8::internal::compiler::InstructionOperand"*, %"class.v8::internal::compiler::InstructionOperand"** %209, i64 8
  %234 = icmp eq %"class.v8::internal::compiler::InstructionOperand"** %233, %186
  br i1 %234, label %107, label %208

235:                                              ; preds = %302
  %236 = load i64, i64* %17, align 8
  %237 = and i64 %236, 7
  %238 = icmp eq i64 %237, 0
  br i1 %238, label %377, label %306

239:                                              ; preds = %107, %302
  %240 = phi %"class.v8::internal::compiler::LiveRange"* [ %304, %302 ], [ %40, %107 ]
  %241 = getelementptr inbounds %"class.v8::internal::compiler::LiveRange", %"class.v8::internal::compiler::LiveRange"* %240, i64 0, i32 1
  %242 = load i32, i32* %241, align 4
  %243 = and i32 %242, 8064
  %244 = icmp eq i32 %243, 4096
  br i1 %244, label %255, label %245

245:                                              ; preds = %239
  %246 = lshr i32 %242, 7
  %247 = and i32 %246, 63
  %248 = lshr i32 %242, 8
  %249 = and i32 %248, 8160
  %250 = zext i32 %247 to i64
  %251 = shl nuw nsw i64 %250, 35
  %252 = or i32 %249, 5
  %253 = zext i32 %252 to i64
  %254 = or i64 %251, %253
  br label %280

255:                                              ; preds = %239
  %256 = getelementptr inbounds %"class.v8::internal::compiler::LiveRange", %"class.v8::internal::compiler::LiveRange"* %240, i64 0, i32 5
  %257 = load %"class.v8::internal::compiler::TopLevelLiveRange"*, %"class.v8::internal::compiler::TopLevelLiveRange"** %256, align 8
  %258 = getelementptr inbounds %"class.v8::internal::compiler::TopLevelLiveRange", %"class.v8::internal::compiler::TopLevelLiveRange"* %257, i64 0, i32 0, i32 1
  %259 = load i32, i32* %258, align 4
  %260 = and i32 %259, 96
  %261 = icmp eq i32 %260, 32
  br i1 %261, label %262, label %267

262:                                              ; preds = %255
  %263 = getelementptr inbounds %"class.v8::internal::compiler::TopLevelLiveRange", %"class.v8::internal::compiler::TopLevelLiveRange"* %257, i64 0, i32 3, i32 0
  %264 = load %"class.v8::internal::compiler::InstructionOperand"*, %"class.v8::internal::compiler::InstructionOperand"** %263, align 8
  %265 = getelementptr inbounds %"class.v8::internal::compiler::InstructionOperand", %"class.v8::internal::compiler::InstructionOperand"* %264, i64 0, i32 0
  %266 = load i64, i64* %265, align 8
  br label %280

267:                                              ; preds = %255
  %268 = getelementptr inbounds %"class.v8::internal::compiler::TopLevelLiveRange", %"class.v8::internal::compiler::TopLevelLiveRange"* %257, i64 0, i32 3
  %269 = bitcast %union.anon* %268 to %"class.v8::internal::compiler::SpillRange"**
  %270 = load %"class.v8::internal::compiler::SpillRange"*, %"class.v8::internal::compiler::SpillRange"** %269, align 8
  %271 = getelementptr inbounds %"class.v8::internal::compiler::SpillRange", %"class.v8::internal::compiler::SpillRange"* %270, i64 0, i32 3
  %272 = load i32, i32* %271, align 4
  %273 = lshr i32 %259, 8
  %274 = and i32 %273, 8160
  %275 = zext i32 %272 to i64
  %276 = shl i64 %275, 35
  %277 = or i32 %274, 13
  %278 = zext i32 %277 to i64
  %279 = or i64 %276, %278
  br label %280

280:                                              ; preds = %245, %262, %267
  %281 = phi i64 [ %254, %245 ], [ %266, %262 ], [ %279, %267 ]
  %282 = getelementptr inbounds %"class.v8::internal::compiler::LiveRange", %"class.v8::internal::compiler::LiveRange"* %240, i64 0, i32 4
  %283 = load %"class.v8::internal::compiler::UsePosition"*, %"class.v8::internal::compiler::UsePosition"** %282, align 8
  %284 = icmp eq %"class.v8::internal::compiler::UsePosition"* %283, null
  br i1 %284, label %302, label %285

285:                                              ; preds = %280, %298
  %286 = phi %"class.v8::internal::compiler::UsePosition"* [ %300, %298 ], [ %283, %280 ]
  %287 = getelementptr inbounds %"class.v8::internal::compiler::UsePosition", %"class.v8::internal::compiler::UsePosition"* %286, i64 0, i32 0
  %288 = load %"class.v8::internal::compiler::InstructionOperand"*, %"class.v8::internal::compiler::InstructionOperand"** %287, align 8
  %289 = icmp eq %"class.v8::internal::compiler::InstructionOperand"* %288, null
  br i1 %289, label %298, label %290

290:                                              ; preds = %285
  %291 = getelementptr inbounds %"class.v8::internal::compiler::UsePosition", %"class.v8::internal::compiler::UsePosition"* %286, i64 0, i32 4
  %292 = load i32, i32* %291, align 4
  %293 = and i32 %292, 3
  %294 = icmp eq i32 %293, 3
  %295 = getelementptr inbounds %"class.v8::internal::compiler::InstructionOperand", %"class.v8::internal::compiler::InstructionOperand"* %288, i64 0, i32 0
  %296 = load i64, i64* %17, align 8
  %297 = select i1 %294, i64 %296, i64 %281
  store i64 %297, i64* %295, align 8
  br label %298

298:                                              ; preds = %290, %285
  %299 = getelementptr inbounds %"class.v8::internal::compiler::UsePosition", %"class.v8::internal::compiler::UsePosition"* %286, i64 0, i32 2
  %300 = load %"class.v8::internal::compiler::UsePosition"*, %"class.v8::internal::compiler::UsePosition"** %299, align 8
  %301 = icmp eq %"class.v8::internal::compiler::UsePosition"* %300, null
  br i1 %301, label %302, label %285

302:                                              ; preds = %298, %280
  %303 = getelementptr inbounds %"class.v8::internal::compiler::LiveRange", %"class.v8::internal::compiler::LiveRange"* %240, i64 0, i32 6
  %304 = load %"class.v8::internal::compiler::LiveRange"*, %"class.v8::internal::compiler::LiveRange"** %303, align 8
  %305 = icmp eq %"class.v8::internal::compiler::LiveRange"* %304, null
  br i1 %305, label %235, label %239

306:                                              ; preds = %235
  %307 = load i32, i32* %45, align 4
  %308 = and i32 %307, 96
  switch i32 %308, label %309 [
    i32 96, label %377
    i32 64, label %377
  ]

309:                                              ; preds = %306
  %310 = load %"class.v8::internal::compiler::TopTierRegisterAllocationData"*, %"class.v8::internal::compiler::TopTierRegisterAllocationData"** %3, align 8
  call void @_ZN2v88internal8compiler17TopLevelLiveRange16FilterSpillMovesEPNS1_29TopTierRegisterAllocationDataERKNS1_18InstructionOperandE(%"class.v8::internal::compiler::TopLevelLiveRange"* %37, %"class.v8::internal::compiler::TopTierRegisterAllocationData"* %310, %"class.v8::internal::compiler::InstructionOperand"* nonnull dereferenceable(8) %2)
  %311 = load %"class.v8::internal::compiler::TopTierRegisterAllocationData"*, %"class.v8::internal::compiler::TopTierRegisterAllocationData"** %3, align 8
  %312 = load i32, i32* %45, align 4
  %313 = and i32 %312, 96
  %314 = icmp eq i32 %313, 64
  br i1 %314, label %315, label %318

315:                                              ; preds = %309
  %316 = and i32 %312, 1073741823
  %317 = or i32 %316, 1073741824
  store i32 %317, i32* %45, align 4
  br label %318

318:                                              ; preds = %315, %309
  %319 = getelementptr inbounds %"class.v8::internal::compiler::TopTierRegisterAllocationData", %"class.v8::internal::compiler::TopTierRegisterAllocationData"* %311, i64 0, i32 3
  %320 = load %"class.v8::internal::compiler::InstructionSequence"*, %"class.v8::internal::compiler::InstructionSequence"** %319, align 8
  %321 = getelementptr inbounds %"class.v8::internal::compiler::InstructionSequence", %"class.v8::internal::compiler::InstructionSequence"* %320, i64 0, i32 1
  %322 = load %"class.v8::internal::Zone"*, %"class.v8::internal::Zone"** %321, align 8
  %323 = getelementptr inbounds %"class.v8::internal::compiler::TopLevelLiveRange", %"class.v8::internal::compiler::TopLevelLiveRange"* %37, i64 0, i32 4, i32 0
  %324 = load %"struct.v8::internal::compiler::TopLevelLiveRange::SpillMoveInsertionList"*, %"struct.v8::internal::compiler::TopLevelLiveRange::SpillMoveInsertionList"** %323, align 8
  %325 = icmp eq %"struct.v8::internal::compiler::TopLevelLiveRange::SpillMoveInsertionList"* %324, null
  br i1 %325, label %377, label %326

326:                                              ; preds = %318
  %327 = getelementptr inbounds %"class.v8::internal::compiler::InstructionSequence", %"class.v8::internal::compiler::InstructionSequence"* %320, i64 0, i32 8, i32 0, i32 0, i32 1
  %328 = getelementptr inbounds %"class.v8::internal::compiler::InstructionSequence", %"class.v8::internal::compiler::InstructionSequence"* %320, i64 0, i32 8, i32 0, i32 0, i32 0, i32 1
  %329 = ptrtoint %"class.v8::internal::Zone"* %322 to i64
  %330 = getelementptr inbounds %"class.v8::internal::Zone", %"class.v8::internal::Zone"* %322, i64 0, i32 2
  %331 = getelementptr inbounds %"class.v8::internal::Zone", %"class.v8::internal::Zone"* %322, i64 0, i32 3
  br label %332

332:                                              ; preds = %364, %326
  %333 = phi %"struct.v8::internal::compiler::TopLevelLiveRange::SpillMoveInsertionList"* [ %324, %326 ], [ %375, %364 ]
  %334 = getelementptr inbounds %"struct.v8::internal::compiler::TopLevelLiveRange::SpillMoveInsertionList", %"struct.v8::internal::compiler::TopLevelLiveRange::SpillMoveInsertionList"* %333, i64 0, i32 0
  %335 = load i32, i32* %334, align 8
  %336 = sext i32 %335 to i64
  %337 = load i64, i64* %327, align 8
  %338 = add i64 %337, %336
  %339 = load %"class.v8::internal::compiler::Instruction"***, %"class.v8::internal::compiler::Instruction"**** %328, align 8
  %340 = lshr i64 %338, 9
  %341 = getelementptr inbounds %"class.v8::internal::compiler::Instruction"**, %"class.v8::internal::compiler::Instruction"*** %339, i64 %340
  %342 = load %"class.v8::internal::compiler::Instruction"**, %"class.v8::internal::compiler::Instruction"*** %341, align 8
  %343 = and i64 %338, 511
  %344 = getelementptr inbounds %"class.v8::internal::compiler::Instruction"*, %"class.v8::internal::compiler::Instruction"** %342, i64 %343
  %345 = load %"class.v8::internal::compiler::Instruction"*, %"class.v8::internal::compiler::Instruction"** %344, align 8
  %346 = getelementptr inbounds %"class.v8::internal::compiler::Instruction", %"class.v8::internal::compiler::Instruction"* %345, i64 0, i32 2, i64 0
  %347 = load %"class.v8::internal::compiler::ParallelMove"*, %"class.v8::internal::compiler::ParallelMove"** %346, align 8
  %348 = icmp eq %"class.v8::internal::compiler::ParallelMove"* %347, null
  br i1 %348, label %349, label %364

349:                                              ; preds = %332
  %350 = load i64, i64* %330, align 8
  %351 = load i64, i64* %331, align 8
  %352 = sub i64 %351, %350
  %353 = icmp ult i64 %352, 32
  br i1 %353, label %354, label %356, !prof !2

354:                                              ; preds = %349
  %355 = call i64 @_ZN2v88internal4Zone9NewExpandEm(%"class.v8::internal::Zone"* %322, i64 32) #16
  br label %358

356:                                              ; preds = %349
  %357 = add i64 %350, 32
  store i64 %357, i64* %330, align 8
  br label %358

358:                                              ; preds = %356, %354
  %359 = phi i64 [ %355, %354 ], [ %350, %356 ]
  %360 = inttoptr i64 %359 to i8*
  %361 = inttoptr i64 %359 to %"class.v8::internal::compiler::ParallelMove"*
  %362 = getelementptr inbounds %"class.v8::internal::compiler::ParallelMove", %"class.v8::internal::compiler::ParallelMove"* %361, i64 0, i32 0, i32 0, i32 0, i32 2, i32 1
  %363 = bitcast %"struct.std::__1::__compressed_pair_elem.1208"* %362 to i64*
  call void @llvm.memset.p0i8.i64(i8* align 8 %360, i8 0, i64 24, i1 false) #16
  store i64 %329, i64* %363, align 8
  store %"class.v8::internal::compiler::ParallelMove"* %361, %"class.v8::internal::compiler::ParallelMove"** %346, align 8
  br label %364

364:                                              ; preds = %358, %332
  %365 = phi %"class.v8::internal::compiler::ParallelMove"* [ %361, %358 ], [ %347, %332 ]
  %366 = getelementptr inbounds %"struct.v8::internal::compiler::TopLevelLiveRange::SpillMoveInsertionList", %"struct.v8::internal::compiler::TopLevelLiveRange::SpillMoveInsertionList"* %333, i64 0, i32 1
  %367 = load %"class.v8::internal::compiler::InstructionOperand"*, %"class.v8::internal::compiler::InstructionOperand"** %366, align 8
  %368 = getelementptr inbounds %"class.v8::internal::compiler::ParallelMove", %"class.v8::internal::compiler::ParallelMove"* %365, i64 0, i32 0, i32 0, i32 0, i32 2, i32 1, i32 0, i32 0
  %369 = load %"class.v8::internal::Zone"*, %"class.v8::internal::Zone"** %368, align 8
  %370 = call %"class.v8::internal::compiler::MoveOperands"* @_ZN2v88internal8compiler12ParallelMove7AddMoveERKNS1_18InstructionOperandES5_PNS0_4ZoneE(%"class.v8::internal::compiler::ParallelMove"* %365, %"class.v8::internal::compiler::InstructionOperand"* dereferenceable(8) %367, %"class.v8::internal::compiler::InstructionOperand"* nonnull dereferenceable(8) %2, %"class.v8::internal::Zone"* %369) #16
  %371 = getelementptr inbounds %"class.v8::internal::compiler::Instruction", %"class.v8::internal::compiler::Instruction"* %345, i64 0, i32 4
  %372 = load %"class.v8::internal::compiler::InstructionBlock"*, %"class.v8::internal::compiler::InstructionBlock"** %371, align 8
  %373 = getelementptr inbounds %"class.v8::internal::compiler::InstructionBlock", %"class.v8::internal::compiler::InstructionBlock"* %372, i64 0, i32 14
  store i8 1, i8* %373, align 8
  %374 = getelementptr inbounds %"struct.v8::internal::compiler::TopLevelLiveRange::SpillMoveInsertionList", %"struct.v8::internal::compiler::TopLevelLiveRange::SpillMoveInsertionList"* %333, i64 0, i32 2
  %375 = load %"struct.v8::internal::compiler::TopLevelLiveRange::SpillMoveInsertionList"*, %"struct.v8::internal::compiler::TopLevelLiveRange::SpillMoveInsertionList"** %374, align 8
  %376 = icmp eq %"struct.v8::internal::compiler::TopLevelLiveRange::SpillMoveInsertionList"* %375, null
  br i1 %376, label %377, label %332

377:                                              ; preds = %364, %306, %306, %318, %235
  call void @llvm.lifetime.end.p0i8(i64 8, i8* nonnull %16) #16
  br label %378

378:                                              ; preds = %33, %39, %377
  %379 = getelementptr inbounds %"class.v8::internal::compiler::TopLevelLiveRange"*, %"class.v8::internal::compiler::TopLevelLiveRange"** %36, i64 1
  %380 = icmp eq %"class.v8::internal::compiler::TopLevelLiveRange"** %379, %13
  br i1 %380, label %31, label %381

381:                                              ; preds = %378
  %382 = load %"class.v8::internal::compiler::TopTierRegisterAllocationData"*, %"class.v8::internal::compiler::TopTierRegisterAllocationData"** %3, align 8
  %383 = bitcast %"class.v8::internal::compiler::TopLevelLiveRange"** %379 to i64*
  %384 = load i64, i64* %383, align 8
  %385 = getelementptr inbounds %"class.v8::internal::compiler::TopTierRegisterAllocationData", %"class.v8::internal::compiler::TopTierRegisterAllocationData"* %382, i64 0, i32 24
  %386 = load %"class.v8::internal::TickCounter"*, %"class.v8::internal::TickCounter"** %385, align 8
  call void @_ZN2v88internal11TickCounter26TickAndMaybeEnterSafepointEv(%"class.v8::internal::TickCounter"* %386) #16
  %387 = load %"class.v8::internal::compiler::TopTierRegisterAllocationData"*, %"class.v8::internal::compiler::TopTierRegisterAllocationData"** %3, align 8
  %388 = getelementptr inbounds %"class.v8::internal::compiler::TopTierRegisterAllocationData", %"class.v8::internal::compiler::TopTierRegisterAllocationData"* %387, i64 0, i32 9, i32 0
  %389 = getelementptr inbounds %"class.v8::internal::compiler::TopTierRegisterAllocationData", %"class.v8::internal::compiler::TopTierRegisterAllocationData"* %387, i64 0, i32 9, i32 0, i32 0, i32 1
  %390 = bitcast %"class.v8::internal::compiler::TopLevelLiveRange"*** %389 to i64*
  %391 = load i64, i64* %390, align 8
  %392 = bitcast %"class.std::__1::vector"* %388 to i64*
  %393 = load i64, i64* %392, align 8
  %394 = sub i64 %391, %393
  %395 = icmp eq i64 %11, %394
  br i1 %395, label %33, label %32, !prof !80
}

; Function Attrs: nofree norecurse nounwind ssp uwtable writeonly
define hidden void @_ZN2v88internal8compiler21ReferenceMapPopulatorC2EPNS1_29TopTierRegisterAllocationDataE(%"class.v8::internal::compiler::ReferenceMapPopulator"* nocapture, %"class.v8::internal::compiler::TopTierRegisterAllocationData"*) unnamed_addr #7 align 2 {
  %3 = getelementptr inbounds %"class.v8::internal::compiler::ReferenceMapPopulator", %"class.v8::internal::compiler::ReferenceMapPopulator"* %0, i64 0, i32 0
  store %"class.v8::internal::compiler::TopTierRegisterAllocationData"* %1, %"class.v8::internal::compiler::TopTierRegisterAllocationData"** %3, align 8
  ret void
}

; Function Attrs: nounwind readonly ssp uwtable
define hidden zeroext i1 @_ZNK2v88internal8compiler21ReferenceMapPopulator20SafePointsAreInOrderEv(%"class.v8::internal::compiler::ReferenceMapPopulator"* nocapture readonly) local_unnamed_addr #8 align 2 {
  %2 = getelementptr inbounds %"class.v8::internal::compiler::ReferenceMapPopulator", %"class.v8::internal::compiler::ReferenceMapPopulator"* %0, i64 0, i32 0
  %3 = load %"class.v8::internal::compiler::TopTierRegisterAllocationData"*, %"class.v8::internal::compiler::TopTierRegisterAllocationData"** %2, align 8
  %4 = getelementptr inbounds %"class.v8::internal::compiler::TopTierRegisterAllocationData", %"class.v8::internal::compiler::TopTierRegisterAllocationData"* %3, i64 0, i32 3
  %5 = load %"class.v8::internal::compiler::InstructionSequence"*, %"class.v8::internal::compiler::InstructionSequence"** %4, align 8
  %6 = getelementptr inbounds %"class.v8::internal::compiler::InstructionSequence", %"class.v8::internal::compiler::InstructionSequence"* %5, i64 0, i32 10, i32 0, i32 0, i32 0, i32 1
  %7 = load %"class.v8::internal::compiler::ReferenceMap"***, %"class.v8::internal::compiler::ReferenceMap"**** %6, align 8
  %8 = getelementptr inbounds %"class.v8::internal::compiler::InstructionSequence", %"class.v8::internal::compiler::InstructionSequence"* %5, i64 0, i32 10, i32 0, i32 0, i32 1
  %9 = load i64, i64* %8, align 8
  %10 = lshr i64 %9, 9
  %11 = getelementptr inbounds %"class.v8::internal::compiler::ReferenceMap"**, %"class.v8::internal::compiler::ReferenceMap"*** %7, i64 %10
  %12 = getelementptr inbounds %"class.v8::internal::compiler::InstructionSequence", %"class.v8::internal::compiler::InstructionSequence"* %5, i64 0, i32 10, i32 0, i32 0, i32 0, i32 2
  %13 = load %"class.v8::internal::compiler::ReferenceMap"***, %"class.v8::internal::compiler::ReferenceMap"**** %12, align 8
  %14 = icmp eq %"class.v8::internal::compiler::ReferenceMap"*** %13, %7
  br i1 %14, label %52, label %15

15:                                               ; preds = %1
  %16 = load %"class.v8::internal::compiler::ReferenceMap"**, %"class.v8::internal::compiler::ReferenceMap"*** %11, align 8
  %17 = and i64 %9, 511
  %18 = getelementptr inbounds %"class.v8::internal::compiler::ReferenceMap"*, %"class.v8::internal::compiler::ReferenceMap"** %16, i64 %17
  %19 = getelementptr inbounds %"class.v8::internal::compiler::InstructionSequence", %"class.v8::internal::compiler::InstructionSequence"* %5, i64 0, i32 10, i32 0, i32 0, i32 2, i32 0, i32 0
  %20 = load i64, i64* %19, align 8
  %21 = add i64 %20, %9
  %22 = lshr i64 %21, 9
  %23 = getelementptr inbounds %"class.v8::internal::compiler::ReferenceMap"**, %"class.v8::internal::compiler::ReferenceMap"*** %7, i64 %22
  %24 = load %"class.v8::internal::compiler::ReferenceMap"**, %"class.v8::internal::compiler::ReferenceMap"*** %23, align 8
  %25 = and i64 %21, 511
  %26 = getelementptr inbounds %"class.v8::internal::compiler::ReferenceMap"*, %"class.v8::internal::compiler::ReferenceMap"** %24, i64 %25
  %27 = icmp eq %"class.v8::internal::compiler::ReferenceMap"** %26, %18
  br i1 %27, label %52, label %28

28:                                               ; preds = %15, %47
  %29 = phi %"class.v8::internal::compiler::ReferenceMap"** [ %50, %47 ], [ %18, %15 ]
  %30 = phi i32 [ %34, %47 ], [ 0, %15 ]
  %31 = phi %"class.v8::internal::compiler::ReferenceMap"*** [ %48, %47 ], [ %11, %15 ]
  %32 = load %"class.v8::internal::compiler::ReferenceMap"*, %"class.v8::internal::compiler::ReferenceMap"** %29, align 8
  %33 = getelementptr inbounds %"class.v8::internal::compiler::ReferenceMap", %"class.v8::internal::compiler::ReferenceMap"* %32, i64 0, i32 1
  %34 = load i32, i32* %33, align 8
  %35 = icmp sgt i32 %30, %34
  br i1 %35, label %52, label %36

36:                                               ; preds = %28
  %37 = getelementptr inbounds %"class.v8::internal::compiler::ReferenceMap"*, %"class.v8::internal::compiler::ReferenceMap"** %29, i64 1
  %38 = ptrtoint %"class.v8::internal::compiler::ReferenceMap"** %37 to i64
  %39 = bitcast %"class.v8::internal::compiler::ReferenceMap"*** %31 to i64*
  %40 = load i64, i64* %39, align 8
  %41 = sub i64 %38, %40
  %42 = icmp eq i64 %41, 4096
  br i1 %42, label %43, label %47

43:                                               ; preds = %36
  %44 = getelementptr inbounds %"class.v8::internal::compiler::ReferenceMap"**, %"class.v8::internal::compiler::ReferenceMap"*** %31, i64 1
  %45 = bitcast %"class.v8::internal::compiler::ReferenceMap"*** %44 to i64*
  %46 = load i64, i64* %45, align 8
  br label %47

47:                                               ; preds = %36, %43
  %48 = phi %"class.v8::internal::compiler::ReferenceMap"*** [ %44, %43 ], [ %31, %36 ]
  %49 = phi i64 [ %46, %43 ], [ %38, %36 ]
  %50 = inttoptr i64 %49 to %"class.v8::internal::compiler::ReferenceMap"**
  %51 = icmp eq %"class.v8::internal::compiler::ReferenceMap"** %26, %50
  br i1 %51, label %52, label %28

52:                                               ; preds = %28, %47, %1, %15
  %53 = phi i1 [ true, %15 ], [ true, %1 ], [ true, %47 ], [ false, %28 ]
  ret i1 %53
}

; Function Attrs: nounwind ssp uwtable
define hidden void @_ZN2v88internal8compiler21ReferenceMapPopulator21PopulateReferenceMapsEv(%"class.v8::internal::compiler::ReferenceMapPopulator"* nocapture readonly) local_unnamed_addr #0 align 2 {
  %2 = alloca %"class.v8::internal::compiler::AllocatedOperand", align 8
  %3 = alloca %"class.v8::internal::compiler::AllocatedOperand", align 8
  %4 = alloca %"class.v8::internal::compiler::AllocatedOperand", align 8
  %5 = getelementptr inbounds %"class.v8::internal::compiler::ReferenceMapPopulator", %"class.v8::internal::compiler::ReferenceMapPopulator"* %0, i64 0, i32 0
  %6 = load %"class.v8::internal::compiler::TopTierRegisterAllocationData"*, %"class.v8::internal::compiler::TopTierRegisterAllocationData"** %5, align 8
  %7 = getelementptr inbounds %"class.v8::internal::compiler::TopTierRegisterAllocationData", %"class.v8::internal::compiler::TopTierRegisterAllocationData"* %6, i64 0, i32 15, i32 0, i32 0, i32 0
  %8 = load %"struct.v8::internal::compiler::TopTierRegisterAllocationData::DelayedReference"*, %"struct.v8::internal::compiler::TopTierRegisterAllocationData::DelayedReference"** %7, align 8
  %9 = getelementptr inbounds %"class.v8::internal::compiler::TopTierRegisterAllocationData", %"class.v8::internal::compiler::TopTierRegisterAllocationData"* %6, i64 0, i32 15, i32 0, i32 0, i32 1
  %10 = load %"struct.v8::internal::compiler::TopTierRegisterAllocationData::DelayedReference"*, %"struct.v8::internal::compiler::TopTierRegisterAllocationData::DelayedReference"** %9, align 8
  %11 = icmp eq %"struct.v8::internal::compiler::TopTierRegisterAllocationData::DelayedReference"* %8, %10
  br i1 %11, label %17, label %12

12:                                               ; preds = %1
  %13 = bitcast %"class.v8::internal::compiler::AllocatedOperand"* %2 to i8*
  %14 = getelementptr inbounds %"class.v8::internal::compiler::AllocatedOperand", %"class.v8::internal::compiler::AllocatedOperand"* %2, i64 0, i32 0, i32 0, i32 0
  br label %55

15:                                               ; preds = %55
  %16 = load %"class.v8::internal::compiler::TopTierRegisterAllocationData"*, %"class.v8::internal::compiler::TopTierRegisterAllocationData"** %5, align 8
  br label %17

17:                                               ; preds = %15, %1
  %18 = phi %"class.v8::internal::compiler::TopTierRegisterAllocationData"* [ %16, %15 ], [ %6, %1 ]
  %19 = getelementptr inbounds %"class.v8::internal::compiler::TopTierRegisterAllocationData", %"class.v8::internal::compiler::TopTierRegisterAllocationData"* %18, i64 0, i32 3
  %20 = load %"class.v8::internal::compiler::InstructionSequence"*, %"class.v8::internal::compiler::InstructionSequence"** %19, align 8
  %21 = getelementptr inbounds %"class.v8::internal::compiler::InstructionSequence", %"class.v8::internal::compiler::InstructionSequence"* %20, i64 0, i32 10, i32 0, i32 0, i32 0, i32 1
  %22 = load %"class.v8::internal::compiler::ReferenceMap"***, %"class.v8::internal::compiler::ReferenceMap"**** %21, align 8
  %23 = getelementptr inbounds %"class.v8::internal::compiler::InstructionSequence", %"class.v8::internal::compiler::InstructionSequence"* %20, i64 0, i32 10, i32 0, i32 0, i32 1
  %24 = load i64, i64* %23, align 8
  %25 = lshr i64 %24, 9
  %26 = getelementptr inbounds %"class.v8::internal::compiler::ReferenceMap"**, %"class.v8::internal::compiler::ReferenceMap"*** %22, i64 %25
  %27 = getelementptr inbounds %"class.v8::internal::compiler::InstructionSequence", %"class.v8::internal::compiler::InstructionSequence"* %20, i64 0, i32 10, i32 0, i32 0, i32 0, i32 2
  %28 = load %"class.v8::internal::compiler::ReferenceMap"***, %"class.v8::internal::compiler::ReferenceMap"**** %27, align 8
  %29 = icmp eq %"class.v8::internal::compiler::ReferenceMap"*** %28, %22
  br i1 %29, label %35, label %30

30:                                               ; preds = %17
  %31 = load %"class.v8::internal::compiler::ReferenceMap"**, %"class.v8::internal::compiler::ReferenceMap"*** %26, align 8
  %32 = and i64 %24, 511
  %33 = getelementptr inbounds %"class.v8::internal::compiler::ReferenceMap"*, %"class.v8::internal::compiler::ReferenceMap"** %31, i64 %32
  %34 = ptrtoint %"class.v8::internal::compiler::ReferenceMap"** %33 to i64
  br label %35

35:                                               ; preds = %17, %30
  %36 = phi i64 [ %34, %30 ], [ 0, %17 ]
  %37 = getelementptr inbounds %"class.v8::internal::compiler::TopTierRegisterAllocationData", %"class.v8::internal::compiler::TopTierRegisterAllocationData"* %18, i64 0, i32 9, i32 0
  %38 = getelementptr inbounds %"class.v8::internal::compiler::TopTierRegisterAllocationData", %"class.v8::internal::compiler::TopTierRegisterAllocationData"* %18, i64 0, i32 9, i32 0, i32 0, i32 1
  %39 = bitcast %"class.v8::internal::compiler::TopLevelLiveRange"*** %38 to i64*
  %40 = load i64, i64* %39, align 8
  %41 = bitcast %"class.std::__1::vector"* %37 to i64*
  %42 = load i64, i64* %41, align 8
  %43 = sub i64 %40, %42
  %44 = inttoptr i64 %42 to %"class.v8::internal::compiler::TopLevelLiveRange"**
  %45 = inttoptr i64 %40 to %"class.v8::internal::compiler::TopLevelLiveRange"**
  %46 = icmp eq %"class.v8::internal::compiler::TopLevelLiveRange"** %44, %45
  br i1 %46, label %65, label %47

47:                                               ; preds = %35
  %48 = getelementptr inbounds %"class.v8::internal::compiler::InstructionSequence", %"class.v8::internal::compiler::InstructionSequence"* %20, i64 0, i32 10, i32 0, i32 0, i32 2, i32 0, i32 0
  %49 = bitcast %"class.v8::internal::compiler::AllocatedOperand"* %3 to i8*
  %50 = getelementptr inbounds %"class.v8::internal::compiler::AllocatedOperand", %"class.v8::internal::compiler::AllocatedOperand"* %3, i64 0, i32 0, i32 0, i32 0
  %51 = bitcast %"class.v8::internal::compiler::AllocatedOperand"* %4 to i8*
  %52 = getelementptr inbounds %"class.v8::internal::compiler::AllocatedOperand", %"class.v8::internal::compiler::AllocatedOperand"* %4, i64 0, i32 0, i32 0, i32 0
  %53 = sub i64 %40, %42
  %54 = icmp eq i64 %43, %53
  br i1 %54, label %67, label %66, !prof !80

55:                                               ; preds = %12, %55
  %56 = phi %"struct.v8::internal::compiler::TopTierRegisterAllocationData::DelayedReference"* [ %8, %12 ], [ %63, %55 ]
  %57 = getelementptr inbounds %"struct.v8::internal::compiler::TopTierRegisterAllocationData::DelayedReference", %"struct.v8::internal::compiler::TopTierRegisterAllocationData::DelayedReference"* %56, i64 0, i32 0
  %58 = load %"class.v8::internal::compiler::ReferenceMap"*, %"class.v8::internal::compiler::ReferenceMap"** %57, align 8
  call void @llvm.lifetime.start.p0i8(i64 8, i8* nonnull %13) #16
  %59 = getelementptr inbounds %"struct.v8::internal::compiler::TopTierRegisterAllocationData::DelayedReference", %"struct.v8::internal::compiler::TopTierRegisterAllocationData::DelayedReference"* %56, i64 0, i32 1
  %60 = load %"class.v8::internal::compiler::InstructionOperand"*, %"class.v8::internal::compiler::InstructionOperand"** %59, align 8
  %61 = getelementptr inbounds %"class.v8::internal::compiler::InstructionOperand", %"class.v8::internal::compiler::InstructionOperand"* %60, i64 0, i32 0
  %62 = load i64, i64* %61, align 8
  store i64 %62, i64* %14, align 8
  call void @_ZN2v88internal8compiler12ReferenceMap15RecordReferenceERKNS1_16AllocatedOperandE(%"class.v8::internal::compiler::ReferenceMap"* %58, %"class.v8::internal::compiler::AllocatedOperand"* nonnull dereferenceable(8) %2) #16
  call void @llvm.lifetime.end.p0i8(i64 8, i8* nonnull %13) #16
  %63 = getelementptr inbounds %"struct.v8::internal::compiler::TopTierRegisterAllocationData::DelayedReference", %"struct.v8::internal::compiler::TopTierRegisterAllocationData::DelayedReference"* %56, i64 1
  %64 = icmp eq %"struct.v8::internal::compiler::TopTierRegisterAllocationData::DelayedReference"* %63, %10
  br i1 %64, label %15, label %55

65:                                               ; preds = %438, %35
  ret void

66:                                               ; preds = %444, %47
  call void (i8*, ...) @_Z8V8_FatalPKcz(i8* getelementptr inbounds ([18 x i8], [18 x i8]* @.str.1, i64 0, i64 0), i8* getelementptr inbounds ([49 x i8], [49 x i8]* @.str.32, i64 0, i64 0)) #17
  unreachable

67:                                               ; preds = %47, %444
  %68 = phi %"class.v8::internal::compiler::TopLevelLiveRange"** [ %442, %444 ], [ %44, %47 ]
  %69 = phi %"class.v8::internal::compiler::ReferenceMap"*** [ %439, %444 ], [ %26, %47 ]
  %70 = phi i64 [ %440, %444 ], [ %36, %47 ]
  %71 = phi i32 [ %441, %444 ], [ 0, %47 ]
  %72 = phi %"class.v8::internal::compiler::TopTierRegisterAllocationData"* [ %445, %444 ], [ %18, %47 ]
  %73 = load %"class.v8::internal::compiler::TopLevelLiveRange"*, %"class.v8::internal::compiler::TopLevelLiveRange"** %68, align 8
  %74 = icmp eq %"class.v8::internal::compiler::TopLevelLiveRange"* %73, null
  br i1 %74, label %438, label %75

75:                                               ; preds = %67
  %76 = getelementptr inbounds %"class.v8::internal::compiler::TopTierRegisterAllocationData", %"class.v8::internal::compiler::TopTierRegisterAllocationData"* %72, i64 0, i32 3
  %77 = load %"class.v8::internal::compiler::InstructionSequence"*, %"class.v8::internal::compiler::InstructionSequence"** %76, align 8
  %78 = getelementptr inbounds %"class.v8::internal::compiler::TopLevelLiveRange", %"class.v8::internal::compiler::TopLevelLiveRange"* %73, i64 0, i32 1
  %79 = load i32, i32* %78, align 4
  %80 = call zeroext i8 @_ZNK2v88internal8compiler19InstructionSequence17GetRepresentationEi(%"class.v8::internal::compiler::InstructionSequence"* %77, i32 %79) #16
  switch i8 %80, label %81 [
    i8 9, label %84
    i8 8, label %84
    i8 6, label %84
  ]

81:                                               ; preds = %75
  %82 = or i8 %80, 1
  %83 = icmp eq i8 %82, 11
  br i1 %83, label %84, label %438

84:                                               ; preds = %75, %75, %75, %81
  %85 = bitcast %"class.v8::internal::compiler::TopLevelLiveRange"* %73 to %"class.v8::internal::compiler::LiveRange"*
  %86 = getelementptr inbounds %"class.v8::internal::compiler::TopLevelLiveRange", %"class.v8::internal::compiler::TopLevelLiveRange"* %73, i64 0, i32 0, i32 3
  %87 = load %"class.v8::internal::compiler::UseInterval"*, %"class.v8::internal::compiler::UseInterval"** %86, align 8
  %88 = icmp eq %"class.v8::internal::compiler::UseInterval"* %87, null
  br i1 %88, label %438, label %89

89:                                               ; preds = %84
  %90 = getelementptr inbounds %"class.v8::internal::compiler::TopLevelLiveRange", %"class.v8::internal::compiler::TopLevelLiveRange"* %73, i64 0, i32 6
  %91 = load i8, i8* %90, align 1, !range !3
  %92 = icmp eq i8 %91, 0
  br i1 %92, label %93, label %438

93:                                               ; preds = %89
  %94 = getelementptr inbounds %"class.v8::internal::compiler::UseInterval", %"class.v8::internal::compiler::UseInterval"* %87, i64 0, i32 0, i32 0
  %95 = load i32, i32* %94, align 8
  br label %103

96:                                               ; preds = %103
  %97 = sdiv i32 %95, 4
  %98 = icmp slt i32 %97, %71
  br i1 %98, label %116, label %99

99:                                               ; preds = %96
  %100 = load i64, i64* %23, align 8
  %101 = load %"class.v8::internal::compiler::ReferenceMap"***, %"class.v8::internal::compiler::ReferenceMap"**** %21, align 8
  %102 = load %"class.v8::internal::compiler::ReferenceMap"***, %"class.v8::internal::compiler::ReferenceMap"**** %27, align 8
  br label %130

103:                                              ; preds = %93, %103
  %104 = phi i32 [ 0, %93 ], [ %112, %103 ]
  %105 = phi %"class.v8::internal::compiler::LiveRange"* [ %85, %93 ], [ %114, %103 ]
  %106 = getelementptr inbounds %"class.v8::internal::compiler::LiveRange", %"class.v8::internal::compiler::LiveRange"* %105, i64 0, i32 2
  %107 = load %"class.v8::internal::compiler::UseInterval"*, %"class.v8::internal::compiler::UseInterval"** %106, align 8
  %108 = getelementptr inbounds %"class.v8::internal::compiler::UseInterval", %"class.v8::internal::compiler::UseInterval"* %107, i64 0, i32 1, i32 0
  %109 = load i32, i32* %108, align 4
  %110 = sdiv i32 %109, 4
  %111 = icmp sgt i32 %110, %104
  %112 = select i1 %111, i32 %110, i32 %104
  %113 = getelementptr inbounds %"class.v8::internal::compiler::LiveRange", %"class.v8::internal::compiler::LiveRange"* %105, i64 0, i32 6
  %114 = load %"class.v8::internal::compiler::LiveRange"*, %"class.v8::internal::compiler::LiveRange"** %113, align 8
  %115 = icmp eq %"class.v8::internal::compiler::LiveRange"* %114, null
  br i1 %115, label %96, label %103

116:                                              ; preds = %96
  %117 = load %"class.v8::internal::compiler::ReferenceMap"***, %"class.v8::internal::compiler::ReferenceMap"**** %21, align 8
  %118 = load i64, i64* %23, align 8
  %119 = lshr i64 %118, 9
  %120 = getelementptr inbounds %"class.v8::internal::compiler::ReferenceMap"**, %"class.v8::internal::compiler::ReferenceMap"*** %117, i64 %119
  %121 = load %"class.v8::internal::compiler::ReferenceMap"***, %"class.v8::internal::compiler::ReferenceMap"**** %27, align 8
  %122 = icmp eq %"class.v8::internal::compiler::ReferenceMap"*** %121, %117
  br i1 %122, label %127, label %123

123:                                              ; preds = %116
  %124 = load %"class.v8::internal::compiler::ReferenceMap"**, %"class.v8::internal::compiler::ReferenceMap"*** %120, align 8
  %125 = and i64 %118, 511
  %126 = getelementptr inbounds %"class.v8::internal::compiler::ReferenceMap"*, %"class.v8::internal::compiler::ReferenceMap"** %124, i64 %125
  br label %127

127:                                              ; preds = %116, %123
  %128 = phi %"class.v8::internal::compiler::ReferenceMap"** [ %126, %123 ], [ null, %116 ]
  %129 = ptrtoint %"class.v8::internal::compiler::ReferenceMap"** %128 to i64
  br label %130

130:                                              ; preds = %99, %127
  %131 = phi %"class.v8::internal::compiler::ReferenceMap"*** [ %121, %127 ], [ %102, %99 ]
  %132 = phi %"class.v8::internal::compiler::ReferenceMap"*** [ %117, %127 ], [ %101, %99 ]
  %133 = phi i64 [ %118, %127 ], [ %100, %99 ]
  %134 = phi %"class.v8::internal::compiler::ReferenceMap"*** [ %120, %127 ], [ %69, %99 ]
  %135 = phi i64 [ %129, %127 ], [ %70, %99 ]
  %136 = load i64, i64* %48, align 8
  %137 = add i64 %133, %136
  %138 = icmp eq %"class.v8::internal::compiler::ReferenceMap"*** %131, %132
  br i1 %138, label %139, label %141

139:                                              ; preds = %130
  %140 = icmp eq i64 %135, 0
  br i1 %140, label %196, label %149

141:                                              ; preds = %130
  %142 = and i64 %137, 511
  %143 = lshr i64 %137, 9
  %144 = getelementptr inbounds %"class.v8::internal::compiler::ReferenceMap"**, %"class.v8::internal::compiler::ReferenceMap"*** %132, i64 %143
  %145 = load %"class.v8::internal::compiler::ReferenceMap"**, %"class.v8::internal::compiler::ReferenceMap"*** %144, align 8
  %146 = getelementptr inbounds %"class.v8::internal::compiler::ReferenceMap"*, %"class.v8::internal::compiler::ReferenceMap"** %145, i64 %142
  %147 = inttoptr i64 %135 to %"class.v8::internal::compiler::ReferenceMap"**
  %148 = icmp eq %"class.v8::internal::compiler::ReferenceMap"** %146, %147
  br i1 %148, label %196, label %172

149:                                              ; preds = %139, %168
  %150 = phi i64 [ %170, %168 ], [ %135, %139 ]
  %151 = phi %"class.v8::internal::compiler::ReferenceMap"*** [ %169, %168 ], [ %134, %139 ]
  %152 = inttoptr i64 %150 to %"class.v8::internal::compiler::ReferenceMap"**
  %153 = load %"class.v8::internal::compiler::ReferenceMap"*, %"class.v8::internal::compiler::ReferenceMap"** %152, align 8
  %154 = getelementptr inbounds %"class.v8::internal::compiler::ReferenceMap", %"class.v8::internal::compiler::ReferenceMap"* %153, i64 0, i32 1
  %155 = load i32, i32* %154, align 8
  %156 = icmp slt i32 %155, %97
  br i1 %156, label %157, label %196

157:                                              ; preds = %149
  %158 = getelementptr inbounds %"class.v8::internal::compiler::ReferenceMap"*, %"class.v8::internal::compiler::ReferenceMap"** %152, i64 1
  %159 = ptrtoint %"class.v8::internal::compiler::ReferenceMap"** %158 to i64
  %160 = bitcast %"class.v8::internal::compiler::ReferenceMap"*** %151 to i64*
  %161 = load i64, i64* %160, align 8
  %162 = sub i64 %159, %161
  %163 = icmp eq i64 %162, 4096
  br i1 %163, label %164, label %168

164:                                              ; preds = %157
  %165 = getelementptr inbounds %"class.v8::internal::compiler::ReferenceMap"**, %"class.v8::internal::compiler::ReferenceMap"*** %151, i64 1
  %166 = bitcast %"class.v8::internal::compiler::ReferenceMap"*** %165 to i64*
  %167 = load i64, i64* %166, align 8
  br label %168

168:                                              ; preds = %164, %157
  %169 = phi %"class.v8::internal::compiler::ReferenceMap"*** [ %165, %164 ], [ %151, %157 ]
  %170 = phi i64 [ %167, %164 ], [ %159, %157 ]
  %171 = icmp eq i64 %170, 0
  br i1 %171, label %196, label %149

172:                                              ; preds = %141, %191
  %173 = phi %"class.v8::internal::compiler::ReferenceMap"** [ %194, %191 ], [ %147, %141 ]
  %174 = phi i64 [ %193, %191 ], [ %135, %141 ]
  %175 = phi %"class.v8::internal::compiler::ReferenceMap"*** [ %192, %191 ], [ %134, %141 ]
  %176 = load %"class.v8::internal::compiler::ReferenceMap"*, %"class.v8::internal::compiler::ReferenceMap"** %173, align 8
  %177 = getelementptr inbounds %"class.v8::internal::compiler::ReferenceMap", %"class.v8::internal::compiler::ReferenceMap"* %176, i64 0, i32 1
  %178 = load i32, i32* %177, align 8
  %179 = icmp slt i32 %178, %97
  br i1 %179, label %180, label %196

180:                                              ; preds = %172
  %181 = getelementptr inbounds %"class.v8::internal::compiler::ReferenceMap"*, %"class.v8::internal::compiler::ReferenceMap"** %173, i64 1
  %182 = ptrtoint %"class.v8::internal::compiler::ReferenceMap"** %181 to i64
  %183 = bitcast %"class.v8::internal::compiler::ReferenceMap"*** %175 to i64*
  %184 = load i64, i64* %183, align 8
  %185 = sub i64 %182, %184
  %186 = icmp eq i64 %185, 4096
  br i1 %186, label %187, label %191

187:                                              ; preds = %180
  %188 = getelementptr inbounds %"class.v8::internal::compiler::ReferenceMap"**, %"class.v8::internal::compiler::ReferenceMap"*** %175, i64 1
  %189 = bitcast %"class.v8::internal::compiler::ReferenceMap"*** %188 to i64*
  %190 = load i64, i64* %189, align 8
  br label %191

191:                                              ; preds = %180, %187
  %192 = phi %"class.v8::internal::compiler::ReferenceMap"*** [ %188, %187 ], [ %175, %180 ]
  %193 = phi i64 [ %190, %187 ], [ %182, %180 ]
  %194 = inttoptr i64 %193 to %"class.v8::internal::compiler::ReferenceMap"**
  %195 = icmp eq %"class.v8::internal::compiler::ReferenceMap"** %146, %194
  br i1 %195, label %196, label %172

196:                                              ; preds = %172, %191, %149, %168, %141, %139
  %197 = phi %"class.v8::internal::compiler::ReferenceMap"*** [ %134, %139 ], [ %134, %141 ], [ %169, %168 ], [ %151, %149 ], [ %192, %191 ], [ %175, %172 ]
  %198 = phi i64 [ 0, %139 ], [ %135, %141 ], [ 0, %168 ], [ %150, %149 ], [ %193, %191 ], [ %174, %172 ]
  %199 = getelementptr inbounds %"class.v8::internal::compiler::TopLevelLiveRange", %"class.v8::internal::compiler::TopLevelLiveRange"* %73, i64 0, i32 0, i32 1
  %200 = load i32, i32* %199, align 4
  %201 = and i32 %200, 96
  %202 = icmp eq i32 %201, 32
  br i1 %202, label %203, label %210

203:                                              ; preds = %196
  %204 = getelementptr inbounds %"class.v8::internal::compiler::TopLevelLiveRange", %"class.v8::internal::compiler::TopLevelLiveRange"* %73, i64 0, i32 3, i32 0
  %205 = load %"class.v8::internal::compiler::InstructionOperand"*, %"class.v8::internal::compiler::InstructionOperand"** %204, align 8
  %206 = getelementptr inbounds %"class.v8::internal::compiler::InstructionOperand", %"class.v8::internal::compiler::InstructionOperand"* %205, i64 0, i32 0
  %207 = load i64, i64* %206, align 8
  %208 = and i64 %207, 7
  %209 = icmp eq i64 %208, 2
  br i1 %209, label %210, label %232

210:                                              ; preds = %203, %196
  %211 = and i32 %200, 64
  %212 = icmp eq i32 %211, 0
  br i1 %212, label %232, label %213

213:                                              ; preds = %210
  br i1 %202, label %214, label %219

214:                                              ; preds = %213
  %215 = getelementptr inbounds %"class.v8::internal::compiler::TopLevelLiveRange", %"class.v8::internal::compiler::TopLevelLiveRange"* %73, i64 0, i32 3, i32 0
  %216 = load %"class.v8::internal::compiler::InstructionOperand"*, %"class.v8::internal::compiler::InstructionOperand"** %215, align 8
  %217 = getelementptr inbounds %"class.v8::internal::compiler::InstructionOperand", %"class.v8::internal::compiler::InstructionOperand"* %216, i64 0, i32 0
  %218 = load i64, i64* %217, align 8
  br label %232

219:                                              ; preds = %213
  %220 = getelementptr inbounds %"class.v8::internal::compiler::TopLevelLiveRange", %"class.v8::internal::compiler::TopLevelLiveRange"* %73, i64 0, i32 3
  %221 = bitcast %union.anon* %220 to %"class.v8::internal::compiler::SpillRange"**
  %222 = load %"class.v8::internal::compiler::SpillRange"*, %"class.v8::internal::compiler::SpillRange"** %221, align 8
  %223 = getelementptr inbounds %"class.v8::internal::compiler::SpillRange", %"class.v8::internal::compiler::SpillRange"* %222, i64 0, i32 3
  %224 = load i32, i32* %223, align 4
  %225 = lshr i32 %200, 8
  %226 = and i32 %225, 8160
  %227 = zext i32 %224 to i64
  %228 = shl i64 %227, 35
  %229 = or i32 %226, 13
  %230 = zext i32 %229 to i64
  %231 = or i64 %228, %230
  br label %232

232:                                              ; preds = %203, %214, %210, %219
  %233 = phi i64 [ %231, %219 ], [ 0, %210 ], [ %218, %214 ], [ %207, %203 ]
  %234 = getelementptr inbounds %"class.v8::internal::compiler::TopLevelLiveRange", %"class.v8::internal::compiler::TopLevelLiveRange"* %73, i64 0, i32 7
  %235 = and i64 %233, 7
  %236 = icmp eq i64 %235, 0
  br label %237

237:                                              ; preds = %431, %232
  %238 = phi %"class.v8::internal::compiler::ReferenceMap"*** [ %131, %232 ], [ %437, %431 ]
  %239 = phi %"class.v8::internal::compiler::ReferenceMap"*** [ %132, %232 ], [ %436, %431 ]
  %240 = phi i64 [ %133, %232 ], [ %435, %431 ]
  %241 = phi i64 [ %136, %232 ], [ %434, %431 ]
  %242 = phi %"class.v8::internal::compiler::ReferenceMap"*** [ %197, %232 ], [ %432, %431 ]
  %243 = phi i64 [ %198, %232 ], [ %433, %431 ]
  %244 = phi %"class.v8::internal::compiler::LiveRange"* [ %85, %232 ], [ %267, %431 ]
  %245 = add i64 %240, %241
  %246 = icmp eq %"class.v8::internal::compiler::ReferenceMap"*** %238, %239
  br i1 %246, label %253, label %247

247:                                              ; preds = %237
  %248 = lshr i64 %245, 9
  %249 = getelementptr inbounds %"class.v8::internal::compiler::ReferenceMap"**, %"class.v8::internal::compiler::ReferenceMap"*** %239, i64 %248
  %250 = load %"class.v8::internal::compiler::ReferenceMap"**, %"class.v8::internal::compiler::ReferenceMap"*** %249, align 8
  %251 = and i64 %245, 511
  %252 = getelementptr inbounds %"class.v8::internal::compiler::ReferenceMap"*, %"class.v8::internal::compiler::ReferenceMap"** %250, i64 %251
  br label %253

253:                                              ; preds = %237, %247
  %254 = phi %"class.v8::internal::compiler::ReferenceMap"** [ %252, %247 ], [ null, %237 ]
  %255 = inttoptr i64 %243 to %"class.v8::internal::compiler::ReferenceMap"**
  %256 = icmp eq %"class.v8::internal::compiler::ReferenceMap"** %254, %255
  br i1 %256, label %438, label %257

257:                                              ; preds = %253
  %258 = load %"class.v8::internal::compiler::ReferenceMap"*, %"class.v8::internal::compiler::ReferenceMap"** %255, align 8
  %259 = getelementptr inbounds %"class.v8::internal::compiler::ReferenceMap", %"class.v8::internal::compiler::ReferenceMap"* %258, i64 0, i32 1
  %260 = load i32, i32* %259, align 8
  %261 = add nsw i32 %260, -1
  %262 = icmp sgt i32 %261, %112
  br i1 %262, label %438, label %263

263:                                              ; preds = %257
  %264 = shl nsw i32 %260, 2
  %265 = or i32 %264, 2
  br label %266

266:                                              ; preds = %325, %263
  %267 = phi %"class.v8::internal::compiler::LiveRange"* [ %244, %263 ], [ %323, %325 ]
  %268 = getelementptr inbounds %"class.v8::internal::compiler::LiveRange", %"class.v8::internal::compiler::LiveRange"* %267, i64 0, i32 3
  %269 = load %"class.v8::internal::compiler::UseInterval"*, %"class.v8::internal::compiler::UseInterval"** %268, align 8
  %270 = icmp eq %"class.v8::internal::compiler::UseInterval"* %269, null
  br i1 %270, label %321, label %271

271:                                              ; preds = %266
  %272 = getelementptr inbounds %"class.v8::internal::compiler::UseInterval", %"class.v8::internal::compiler::UseInterval"* %269, i64 0, i32 0, i32 0
  %273 = load i32, i32* %272, align 8
  %274 = icmp sgt i32 %273, %265
  br i1 %274, label %321, label %275

275:                                              ; preds = %271
  %276 = getelementptr inbounds %"class.v8::internal::compiler::LiveRange", %"class.v8::internal::compiler::LiveRange"* %267, i64 0, i32 2
  %277 = load %"class.v8::internal::compiler::UseInterval"*, %"class.v8::internal::compiler::UseInterval"** %276, align 8
  %278 = getelementptr inbounds %"class.v8::internal::compiler::UseInterval", %"class.v8::internal::compiler::UseInterval"* %277, i64 0, i32 1, i32 0
  %279 = load i32, i32* %278, align 4
  %280 = icmp sgt i32 %279, %265
  br i1 %280, label %281, label %321

281:                                              ; preds = %275
  %282 = getelementptr inbounds %"class.v8::internal::compiler::LiveRange", %"class.v8::internal::compiler::LiveRange"* %267, i64 0, i32 7
  %283 = load %"class.v8::internal::compiler::UseInterval"*, %"class.v8::internal::compiler::UseInterval"** %282, align 8
  %284 = icmp eq %"class.v8::internal::compiler::UseInterval"* %283, null
  br i1 %284, label %290, label %285

285:                                              ; preds = %281
  %286 = getelementptr inbounds %"class.v8::internal::compiler::UseInterval", %"class.v8::internal::compiler::UseInterval"* %283, i64 0, i32 0, i32 0
  %287 = load i32, i32* %286, align 8
  %288 = icmp sgt i32 %287, %265
  br i1 %288, label %289, label %290

289:                                              ; preds = %285
  store %"class.v8::internal::compiler::UseInterval"* null, %"class.v8::internal::compiler::UseInterval"** %282, align 8
  br label %290

290:                                              ; preds = %289, %285, %281
  %291 = phi %"class.v8::internal::compiler::UseInterval"** [ %268, %289 ], [ %282, %285 ], [ %268, %281 ]
  %292 = load %"class.v8::internal::compiler::UseInterval"*, %"class.v8::internal::compiler::UseInterval"** %291, align 8
  %293 = icmp eq %"class.v8::internal::compiler::UseInterval"* %292, null
  br i1 %293, label %321, label %298

294:                                              ; preds = %317
  %295 = getelementptr inbounds %"class.v8::internal::compiler::UseInterval", %"class.v8::internal::compiler::UseInterval"* %299, i64 0, i32 2
  %296 = load %"class.v8::internal::compiler::UseInterval"*, %"class.v8::internal::compiler::UseInterval"** %295, align 8
  %297 = icmp eq %"class.v8::internal::compiler::UseInterval"* %296, null
  br i1 %297, label %321, label %298

298:                                              ; preds = %290, %294
  %299 = phi %"class.v8::internal::compiler::UseInterval"* [ %296, %294 ], [ %292, %290 ]
  %300 = getelementptr inbounds %"class.v8::internal::compiler::UseInterval", %"class.v8::internal::compiler::UseInterval"* %299, i64 0, i32 0, i32 0
  %301 = load i32, i32* %300, align 8
  %302 = icmp sgt i32 %301, %265
  br i1 %302, label %314, label %303

303:                                              ; preds = %298
  %304 = load %"class.v8::internal::compiler::UseInterval"*, %"class.v8::internal::compiler::UseInterval"** %282, align 8
  %305 = icmp eq %"class.v8::internal::compiler::UseInterval"* %304, null
  br i1 %305, label %309, label %306

306:                                              ; preds = %303
  %307 = getelementptr inbounds %"class.v8::internal::compiler::UseInterval", %"class.v8::internal::compiler::UseInterval"* %304, i64 0, i32 0, i32 0
  %308 = load i32, i32* %307, align 8
  br label %309

309:                                              ; preds = %306, %303
  %310 = phi i32 [ %308, %306 ], [ -1, %303 ]
  %311 = icmp sgt i32 %301, %310
  br i1 %311, label %312, label %314

312:                                              ; preds = %309
  store %"class.v8::internal::compiler::UseInterval"* %299, %"class.v8::internal::compiler::UseInterval"** %282, align 8
  %313 = load i32, i32* %300, align 4
  br label %314

314:                                              ; preds = %312, %309, %298
  %315 = phi i32 [ %301, %298 ], [ %301, %309 ], [ %313, %312 ]
  %316 = icmp sgt i32 %315, %265
  br i1 %316, label %321, label %317

317:                                              ; preds = %314
  %318 = getelementptr inbounds %"class.v8::internal::compiler::UseInterval", %"class.v8::internal::compiler::UseInterval"* %299, i64 0, i32 1, i32 0
  %319 = load i32, i32* %318, align 4
  %320 = icmp sgt i32 %319, %265
  br i1 %320, label %331, label %294

321:                                              ; preds = %294, %314, %275, %266, %271, %290
  %322 = getelementptr inbounds %"class.v8::internal::compiler::LiveRange", %"class.v8::internal::compiler::LiveRange"* %267, i64 0, i32 6
  %323 = load %"class.v8::internal::compiler::LiveRange"*, %"class.v8::internal::compiler::LiveRange"** %322, align 8
  %324 = icmp eq %"class.v8::internal::compiler::LiveRange"* %323, null
  br i1 %324, label %420, label %325

325:                                              ; preds = %321
  %326 = getelementptr inbounds %"class.v8::internal::compiler::LiveRange", %"class.v8::internal::compiler::LiveRange"* %323, i64 0, i32 3
  %327 = load %"class.v8::internal::compiler::UseInterval"*, %"class.v8::internal::compiler::UseInterval"** %326, align 8
  %328 = getelementptr inbounds %"class.v8::internal::compiler::UseInterval", %"class.v8::internal::compiler::UseInterval"* %327, i64 0, i32 0, i32 0
  %329 = load i32, i32* %328, align 8
  %330 = icmp sgt i32 %329, %265
  br i1 %330, label %420, label %266

331:                                              ; preds = %317
  %332 = load i32, i32* %199, align 4
  %333 = and i32 %332, 96
  %334 = icmp eq i32 %333, 96
  %335 = and i32 %332, -1073741824
  %336 = icmp eq i32 %335, -2147483648
  %337 = or i1 %334, %336
  br i1 %337, label %338, label %344

338:                                              ; preds = %331
  %339 = getelementptr inbounds %"class.v8::internal::compiler::LiveRange", %"class.v8::internal::compiler::LiveRange"* %267, i64 0, i32 3
  %340 = load %"class.v8::internal::compiler::UseInterval"*, %"class.v8::internal::compiler::UseInterval"** %339, align 8
  %341 = getelementptr inbounds %"class.v8::internal::compiler::UseInterval", %"class.v8::internal::compiler::UseInterval"* %340, i64 0, i32 0, i32 0
  %342 = load i32, i32* %341, align 8
  %343 = sdiv i32 %342, 4
  br label %346

344:                                              ; preds = %331
  %345 = load i32, i32* %234, align 4
  br label %346

346:                                              ; preds = %344, %338
  %347 = phi i32 [ %343, %338 ], [ %345, %344 ]
  %348 = icmp slt i32 %260, %347
  %349 = or i1 %236, %348
  br i1 %349, label %359, label %350

350:                                              ; preds = %346
  %351 = load %"class.v8::internal::compiler::TopTierRegisterAllocationData"*, %"class.v8::internal::compiler::TopTierRegisterAllocationData"** %5, align 8
  %352 = getelementptr inbounds %"class.v8::internal::compiler::TopTierRegisterAllocationData", %"class.v8::internal::compiler::TopTierRegisterAllocationData"* %351, i64 0, i32 23, i32 0
  %353 = load i32, i32* %352, align 4
  %354 = and i32 %353, 1
  %355 = icmp eq i32 %354, 0
  br i1 %355, label %358, label %356

356:                                              ; preds = %350
  %357 = load i32, i32* %78, align 4
  call void (i8*, ...) @_ZN2v88internal6PrintFEPKcz(i8* getelementptr inbounds ([55 x i8], [55 x i8]* @.str.97, i64 0, i64 0), i32 %357, i32 %347, i32 %260) #16
  br label %358

358:                                              ; preds = %350, %356
  call void @llvm.lifetime.start.p0i8(i64 8, i8* nonnull %49) #16
  store i64 %233, i64* %50, align 8
  call void @_ZN2v88internal8compiler12ReferenceMap15RecordReferenceERKNS1_16AllocatedOperandE(%"class.v8::internal::compiler::ReferenceMap"* %258, %"class.v8::internal::compiler::AllocatedOperand"* nonnull dereferenceable(8) %3) #16
  call void @llvm.lifetime.end.p0i8(i64 8, i8* nonnull %49) #16
  br label %359

359:                                              ; preds = %358, %346
  %360 = getelementptr inbounds %"class.v8::internal::compiler::LiveRange", %"class.v8::internal::compiler::LiveRange"* %267, i64 0, i32 1
  %361 = load i32, i32* %360, align 4
  %362 = and i32 %361, 1
  %363 = icmp eq i32 %362, 0
  br i1 %363, label %364, label %420

364:                                              ; preds = %359
  %365 = load %"class.v8::internal::compiler::TopTierRegisterAllocationData"*, %"class.v8::internal::compiler::TopTierRegisterAllocationData"** %5, align 8
  %366 = getelementptr inbounds %"class.v8::internal::compiler::TopTierRegisterAllocationData", %"class.v8::internal::compiler::TopTierRegisterAllocationData"* %365, i64 0, i32 23, i32 0
  %367 = load i32, i32* %366, align 4
  %368 = and i32 %367, 1
  %369 = icmp eq i32 %368, 0
  br i1 %369, label %379, label %370

370:                                              ; preds = %364
  %371 = load i32, i32* %78, align 4
  %372 = getelementptr inbounds %"class.v8::internal::compiler::LiveRange", %"class.v8::internal::compiler::LiveRange"* %267, i64 0, i32 0
  %373 = load i32, i32* %372, align 8
  %374 = getelementptr inbounds %"class.v8::internal::compiler::LiveRange", %"class.v8::internal::compiler::LiveRange"* %267, i64 0, i32 3
  %375 = load %"class.v8::internal::compiler::UseInterval"*, %"class.v8::internal::compiler::UseInterval"** %374, align 8
  %376 = getelementptr inbounds %"class.v8::internal::compiler::UseInterval", %"class.v8::internal::compiler::UseInterval"* %375, i64 0, i32 0, i32 0
  %377 = load i32, i32* %376, align 8
  call void (i8*, ...) @_ZN2v88internal6PrintFEPKcz(i8* getelementptr inbounds ([68 x i8], [68 x i8]* @.str.98, i64 0, i64 0), i32 %371, i32 %373, i32 %377, i32 %260) #16
  %378 = load i32, i32* %360, align 4
  br label %379

379:                                              ; preds = %364, %370
  %380 = phi i32 [ %361, %364 ], [ %378, %370 ]
  %381 = and i32 %380, 8064
  %382 = icmp eq i32 %381, 4096
  br i1 %382, label %393, label %383

383:                                              ; preds = %379
  %384 = lshr i32 %380, 7
  %385 = and i32 %384, 63
  %386 = lshr i32 %380, 8
  %387 = and i32 %386, 8160
  %388 = zext i32 %385 to i64
  %389 = shl nuw nsw i64 %388, 35
  %390 = or i32 %387, 5
  %391 = zext i32 %390 to i64
  %392 = or i64 %389, %391
  br label %418

393:                                              ; preds = %379
  %394 = getelementptr inbounds %"class.v8::internal::compiler::LiveRange", %"class.v8::internal::compiler::LiveRange"* %267, i64 0, i32 5
  %395 = load %"class.v8::internal::compiler::TopLevelLiveRange"*, %"class.v8::internal::compiler::TopLevelLiveRange"** %394, align 8
  %396 = getelementptr inbounds %"class.v8::internal::compiler::TopLevelLiveRange", %"class.v8::internal::compiler::TopLevelLiveRange"* %395, i64 0, i32 0, i32 1
  %397 = load i32, i32* %396, align 4
  %398 = and i32 %397, 96
  %399 = icmp eq i32 %398, 32
  br i1 %399, label %400, label %405

400:                                              ; preds = %393
  %401 = getelementptr inbounds %"class.v8::internal::compiler::TopLevelLiveRange", %"class.v8::internal::compiler::TopLevelLiveRange"* %395, i64 0, i32 3, i32 0
  %402 = load %"class.v8::internal::compiler::InstructionOperand"*, %"class.v8::internal::compiler::InstructionOperand"** %401, align 8
  %403 = getelementptr inbounds %"class.v8::internal::compiler::InstructionOperand", %"class.v8::internal::compiler::InstructionOperand"* %402, i64 0, i32 0
  %404 = load i64, i64* %403, align 8
  br label %418

405:                                              ; preds = %393
  %406 = getelementptr inbounds %"class.v8::internal::compiler::TopLevelLiveRange", %"class.v8::internal::compiler::TopLevelLiveRange"* %395, i64 0, i32 3
  %407 = bitcast %union.anon* %406 to %"class.v8::internal::compiler::SpillRange"**
  %408 = load %"class.v8::internal::compiler::SpillRange"*, %"class.v8::internal::compiler::SpillRange"** %407, align 8
  %409 = getelementptr inbounds %"class.v8::internal::compiler::SpillRange", %"class.v8::internal::compiler::SpillRange"* %408, i64 0, i32 3
  %410 = load i32, i32* %409, align 4
  %411 = lshr i32 %397, 8
  %412 = and i32 %411, 8160
  %413 = zext i32 %410 to i64
  %414 = shl i64 %413, 35
  %415 = or i32 %412, 13
  %416 = zext i32 %415 to i64
  %417 = or i64 %414, %416
  br label %418

418:                                              ; preds = %383, %400, %405
  %419 = phi i64 [ %392, %383 ], [ %404, %400 ], [ %417, %405 ]
  call void @llvm.lifetime.start.p0i8(i64 8, i8* nonnull %51) #16
  store i64 %419, i64* %52, align 8
  call void @_ZN2v88internal8compiler12ReferenceMap15RecordReferenceERKNS1_16AllocatedOperandE(%"class.v8::internal::compiler::ReferenceMap"* %258, %"class.v8::internal::compiler::AllocatedOperand"* nonnull dereferenceable(8) %4) #16
  call void @llvm.lifetime.end.p0i8(i64 8, i8* nonnull %51) #16
  br label %420

420:                                              ; preds = %321, %325, %359, %418
  %421 = getelementptr inbounds %"class.v8::internal::compiler::ReferenceMap"*, %"class.v8::internal::compiler::ReferenceMap"** %255, i64 1
  %422 = ptrtoint %"class.v8::internal::compiler::ReferenceMap"** %421 to i64
  %423 = bitcast %"class.v8::internal::compiler::ReferenceMap"*** %242 to i64*
  %424 = load i64, i64* %423, align 8
  %425 = sub i64 %422, %424
  %426 = icmp eq i64 %425, 4096
  br i1 %426, label %427, label %431

427:                                              ; preds = %420
  %428 = getelementptr inbounds %"class.v8::internal::compiler::ReferenceMap"**, %"class.v8::internal::compiler::ReferenceMap"*** %242, i64 1
  %429 = bitcast %"class.v8::internal::compiler::ReferenceMap"*** %428 to i64*
  %430 = load i64, i64* %429, align 8
  br label %431

431:                                              ; preds = %420, %427
  %432 = phi %"class.v8::internal::compiler::ReferenceMap"*** [ %428, %427 ], [ %242, %420 ]
  %433 = phi i64 [ %430, %427 ], [ %422, %420 ]
  %434 = load i64, i64* %48, align 8
  %435 = load i64, i64* %23, align 8
  %436 = load %"class.v8::internal::compiler::ReferenceMap"***, %"class.v8::internal::compiler::ReferenceMap"**** %21, align 8
  %437 = load %"class.v8::internal::compiler::ReferenceMap"***, %"class.v8::internal::compiler::ReferenceMap"**** %27, align 8
  br label %237

438:                                              ; preds = %253, %257, %89, %84, %81, %67
  %439 = phi %"class.v8::internal::compiler::ReferenceMap"*** [ %69, %67 ], [ %69, %84 ], [ %69, %89 ], [ %69, %81 ], [ %197, %257 ], [ %197, %253 ]
  %440 = phi i64 [ %70, %67 ], [ %70, %84 ], [ %70, %89 ], [ %70, %81 ], [ %198, %257 ], [ %198, %253 ]
  %441 = phi i32 [ %71, %67 ], [ %71, %84 ], [ %71, %89 ], [ %71, %81 ], [ %97, %257 ], [ %97, %253 ]
  %442 = getelementptr inbounds %"class.v8::internal::compiler::TopLevelLiveRange"*, %"class.v8::internal::compiler::TopLevelLiveRange"** %68, i64 1
  %443 = icmp eq %"class.v8::internal::compiler::TopLevelLiveRange"** %442, %45
  br i1 %443, label %65, label %444

444:                                              ; preds = %438
  %445 = load %"class.v8::internal::compiler::TopTierRegisterAllocationData"*, %"class.v8::internal::compiler::TopTierRegisterAllocationData"** %5, align 8
  %446 = getelementptr inbounds %"class.v8::internal::compiler::TopTierRegisterAllocationData", %"class.v8::internal::compiler::TopTierRegisterAllocationData"* %445, i64 0, i32 9, i32 0, i32 0, i32 1
  %447 = bitcast %"class.v8::internal::compiler::TopLevelLiveRange"*** %446 to i64*
  %448 = load i64, i64* %447, align 8
  %449 = getelementptr inbounds %"class.v8::internal::compiler::TopTierRegisterAllocationData", %"class.v8::internal::compiler::TopTierRegisterAllocationData"* %445, i64 0, i32 9, i32 0
  %450 = bitcast %"class.std::__1::vector"* %449 to i64*
  %451 = load i64, i64* %450, align 8
  %452 = sub i64 %448, %451
  %453 = icmp eq i64 %43, %452
  br i1 %453, label %67, label %66, !prof !80
}

; Function Attrs: nofree norecurse nounwind ssp uwtable writeonly
define hidden void @_ZN2v88internal8compiler18LiveRangeConnectorC2EPNS1_29TopTierRegisterAllocationDataE(%"class.v8::internal::compiler::LiveRangeConnector"* nocapture, %"class.v8::internal::compiler::TopTierRegisterAllocationData"*) unnamed_addr #7 align 2 {
  %3 = getelementptr inbounds %"class.v8::internal::compiler::LiveRangeConnector", %"class.v8::internal::compiler::LiveRangeConnector"* %0, i64 0, i32 0
  store %"class.v8::internal::compiler::TopTierRegisterAllocationData"* %1, %"class.v8::internal::compiler::TopTierRegisterAllocationData"** %3, align 8
  ret void
}

; Function Attrs: norecurse nounwind readonly ssp uwtable
define hidden zeroext i1 @_ZNK2v88internal8compiler18LiveRangeConnector28CanEagerlyResolveControlFlowEPKNS1_16InstructionBlockE(%"class.v8::internal::compiler::LiveRangeConnector"* nocapture readnone, %"class.v8::internal::compiler::InstructionBlock"* nocapture readonly) local_unnamed_addr #2 align 2 {
  %3 = getelementptr inbounds %"class.v8::internal::compiler::InstructionBlock", %"class.v8::internal::compiler::InstructionBlock"* %1, i64 0, i32 1, i32 0
  %4 = getelementptr inbounds %"class.v8::internal::compiler::InstructionBlock", %"class.v8::internal::compiler::InstructionBlock"* %1, i64 0, i32 1, i32 0, i32 0, i32 1
  %5 = bitcast %"class.v8::internal::compiler::RpoNumber"** %4 to i64*
  %6 = load i64, i64* %5, align 8
  %7 = bitcast %"class.std::__1::vector.38"* %3 to i64*
  %8 = load i64, i64* %7, align 8
  %9 = sub i64 %6, %8
  %10 = icmp eq i64 %9, 4
  br i1 %10, label %11, label %19

11:                                               ; preds = %2
  %12 = inttoptr i64 %8 to %"class.v8::internal::compiler::RpoNumber"*
  %13 = getelementptr inbounds %"class.v8::internal::compiler::InstructionBlock", %"class.v8::internal::compiler::InstructionBlock"* %1, i64 0, i32 4, i32 0
  %14 = load i32, i32* %13, align 4
  %15 = getelementptr inbounds %"class.v8::internal::compiler::RpoNumber", %"class.v8::internal::compiler::RpoNumber"* %12, i64 0, i32 0
  %16 = load i32, i32* %15, align 4
  %17 = add nsw i32 %16, 1
  %18 = icmp eq i32 %17, %14
  br label %19

19:                                               ; preds = %2, %11
  %20 = phi i1 [ %18, %11 ], [ false, %2 ]
  ret i1 %20
}

; Function Attrs: nounwind ssp uwtable
define hidden void @_ZN2v88internal8compiler18LiveRangeConnector18ResolveControlFlowEPNS0_4ZoneE(%"class.v8::internal::compiler::LiveRangeConnector"* nocapture readonly, %"class.v8::internal::Zone"*) local_unnamed_addr #0 align 2 {
  %3 = alloca %"class.v8::internal::compiler::LiveRangeFinder", align 8
  %4 = alloca %"class.v8::internal::compiler::InstructionOperand", align 8
  %5 = alloca %"class.v8::internal::compiler::InstructionOperand", align 8
  %6 = alloca %"class.v8::internal::compiler::SpillPlacer", align 8
  %7 = bitcast %"class.v8::internal::compiler::LiveRangeFinder"* %3 to i8*
  call void @llvm.lifetime.start.p0i8(i64 32, i8* nonnull %7) #16
  %8 = getelementptr inbounds %"class.v8::internal::compiler::LiveRangeConnector", %"class.v8::internal::compiler::LiveRangeConnector"* %0, i64 0, i32 0
  %9 = load %"class.v8::internal::compiler::TopTierRegisterAllocationData"*, %"class.v8::internal::compiler::TopTierRegisterAllocationData"** %8, align 8
  %10 = getelementptr inbounds %"class.v8::internal::compiler::LiveRangeFinder", %"class.v8::internal::compiler::LiveRangeFinder"* %3, i64 0, i32 0
  store %"class.v8::internal::compiler::TopTierRegisterAllocationData"* %9, %"class.v8::internal::compiler::TopTierRegisterAllocationData"** %10, align 8
  %11 = getelementptr inbounds %"class.v8::internal::compiler::LiveRangeFinder", %"class.v8::internal::compiler::LiveRangeFinder"* %3, i64 0, i32 1
  %12 = getelementptr inbounds %"class.v8::internal::compiler::TopTierRegisterAllocationData", %"class.v8::internal::compiler::TopTierRegisterAllocationData"* %9, i64 0, i32 9, i32 0
  %13 = getelementptr inbounds %"class.v8::internal::compiler::TopTierRegisterAllocationData", %"class.v8::internal::compiler::TopTierRegisterAllocationData"* %9, i64 0, i32 9, i32 0, i32 0, i32 1
  %14 = bitcast %"class.v8::internal::compiler::TopLevelLiveRange"*** %13 to i64*
  %15 = load i64, i64* %14, align 8
  %16 = bitcast %"class.std::__1::vector"* %12 to i64*
  %17 = load i64, i64* %16, align 8
  %18 = sub i64 %15, %17
  %19 = lshr exact i64 %18, 3
  %20 = trunc i64 %19 to i32
  store i32 %20, i32* %11, align 8
  %21 = getelementptr inbounds %"class.v8::internal::compiler::LiveRangeFinder", %"class.v8::internal::compiler::LiveRangeFinder"* %3, i64 0, i32 2
  %22 = shl i64 %18, 29
  %23 = ashr exact i64 %22, 28
  %24 = getelementptr inbounds %"class.v8::internal::Zone", %"class.v8::internal::Zone"* %1, i64 0, i32 2
  %25 = load i64, i64* %24, align 8
  %26 = getelementptr inbounds %"class.v8::internal::Zone", %"class.v8::internal::Zone"* %1, i64 0, i32 3
  %27 = load i64, i64* %26, align 8
  %28 = sub i64 %27, %25
  %29 = icmp ugt i64 %23, %28
  br i1 %29, label %30, label %32, !prof !2

30:                                               ; preds = %2
  %31 = tail call i64 @_ZN2v88internal4Zone9NewExpandEm(%"class.v8::internal::Zone"* %1, i64 %23) #16
  br label %34

32:                                               ; preds = %2
  %33 = add i64 %23, %25
  store i64 %33, i64* %24, align 8
  br label %34

34:                                               ; preds = %32, %30
  %35 = phi i64 [ %31, %30 ], [ %25, %32 ]
  %36 = inttoptr i64 %35 to %"class.v8::internal::compiler::LiveRangeBoundArray"*
  store %"class.v8::internal::compiler::LiveRangeBoundArray"* %36, %"class.v8::internal::compiler::LiveRangeBoundArray"** %21, align 8
  %37 = getelementptr inbounds %"class.v8::internal::compiler::LiveRangeFinder", %"class.v8::internal::compiler::LiveRangeFinder"* %3, i64 0, i32 3
  store %"class.v8::internal::Zone"* %1, %"class.v8::internal::Zone"** %37, align 8
  %38 = icmp sgt i32 %20, 0
  br i1 %38, label %39, label %51

39:                                               ; preds = %34
  %40 = inttoptr i64 %35 to i8*
  tail call void @llvm.memset.p0i8.i64(i8* align 8 %40, i8 0, i64 16, i1 false) #16
  %41 = icmp eq i32 %20, 1
  br i1 %41, label %51, label %42

42:                                               ; preds = %39
  %43 = shl i64 %18, 29
  %44 = ashr exact i64 %43, 32
  br label %45

45:                                               ; preds = %42, %45
  %46 = phi i64 [ %49, %45 ], [ 1, %42 ]
  %47 = getelementptr inbounds %"class.v8::internal::compiler::LiveRangeBoundArray", %"class.v8::internal::compiler::LiveRangeBoundArray"* %36, i64 %46
  %48 = bitcast %"class.v8::internal::compiler::LiveRangeBoundArray"* %47 to i8*
  tail call void @llvm.memset.p0i8.i64(i8* align 8 %48, i8 0, i64 16, i1 false) #16
  %49 = add nuw nsw i64 %46, 1
  %50 = icmp slt i64 %49, %44
  br i1 %50, label %45, label %51

51:                                               ; preds = %45, %39, %34
  %52 = load %"class.v8::internal::compiler::TopTierRegisterAllocationData"*, %"class.v8::internal::compiler::TopTierRegisterAllocationData"** %8, align 8
  %53 = getelementptr inbounds %"class.v8::internal::compiler::TopTierRegisterAllocationData", %"class.v8::internal::compiler::TopTierRegisterAllocationData"* %52, i64 0, i32 3
  %54 = load %"class.v8::internal::compiler::InstructionSequence"*, %"class.v8::internal::compiler::InstructionSequence"** %53, align 8
  %55 = getelementptr inbounds %"class.v8::internal::compiler::InstructionSequence", %"class.v8::internal::compiler::InstructionSequence"* %54, i64 0, i32 2
  %56 = load %"class.v8::internal::ZoneVector.1170"*, %"class.v8::internal::ZoneVector.1170"** %55, align 8
  %57 = getelementptr inbounds %"class.v8::internal::ZoneVector.1170", %"class.v8::internal::ZoneVector.1170"* %56, i64 0, i32 0, i32 0, i32 0
  %58 = load %"class.v8::internal::compiler::InstructionBlock"**, %"class.v8::internal::compiler::InstructionBlock"*** %57, align 8
  %59 = getelementptr inbounds %"class.v8::internal::ZoneVector.1170", %"class.v8::internal::ZoneVector.1170"* %56, i64 0, i32 0, i32 0, i32 1
  %60 = load %"class.v8::internal::compiler::InstructionBlock"**, %"class.v8::internal::compiler::InstructionBlock"*** %59, align 8
  %61 = icmp eq %"class.v8::internal::compiler::InstructionBlock"** %58, %60
  br i1 %61, label %70, label %62

62:                                               ; preds = %51
  %63 = getelementptr inbounds %"class.v8::internal::compiler::TopTierRegisterAllocationData", %"class.v8::internal::compiler::TopTierRegisterAllocationData"* %52, i64 0, i32 7, i32 0, i32 0, i32 0
  %64 = bitcast %"class.v8::internal::compiler::InstructionOperand"* %4 to i8*
  %65 = getelementptr inbounds %"class.v8::internal::compiler::InstructionOperand", %"class.v8::internal::compiler::InstructionOperand"* %4, i64 0, i32 0
  %66 = bitcast %"class.v8::internal::compiler::InstructionOperand"* %5 to i8*
  %67 = getelementptr inbounds %"class.v8::internal::compiler::InstructionOperand", %"class.v8::internal::compiler::InstructionOperand"* %5, i64 0, i32 0
  br label %95

68:                                               ; preds = %639
  %69 = load %"class.v8::internal::compiler::TopTierRegisterAllocationData"*, %"class.v8::internal::compiler::TopTierRegisterAllocationData"** %8, align 8
  br label %70

70:                                               ; preds = %68, %51
  %71 = phi %"class.v8::internal::compiler::TopTierRegisterAllocationData"* [ %69, %68 ], [ %52, %51 ]
  %72 = getelementptr inbounds %"class.v8::internal::compiler::TopTierRegisterAllocationData", %"class.v8::internal::compiler::TopTierRegisterAllocationData"* %71, i64 0, i32 9, i32 0
  %73 = getelementptr inbounds %"class.v8::internal::compiler::TopTierRegisterAllocationData", %"class.v8::internal::compiler::TopTierRegisterAllocationData"* %71, i64 0, i32 9, i32 0, i32 0, i32 1
  %74 = bitcast %"class.v8::internal::compiler::TopLevelLiveRange"*** %73 to i64*
  %75 = load i64, i64* %74, align 8
  %76 = bitcast %"class.std::__1::vector"* %72 to i64*
  %77 = load i64, i64* %76, align 8
  %78 = sub i64 %75, %77
  %79 = bitcast %"class.v8::internal::compiler::SpillPlacer"* %6 to i8*
  call void @llvm.lifetime.start.p0i8(i64 56, i8* nonnull %79) #16
  call void @_ZN2v88internal8compiler11SpillPlacerC1EPNS1_15LiveRangeFinderEPNS1_29TopTierRegisterAllocationDataEPNS0_4ZoneE(%"class.v8::internal::compiler::SpillPlacer"* nonnull %6, %"class.v8::internal::compiler::LiveRangeFinder"* nonnull %3, %"class.v8::internal::compiler::TopTierRegisterAllocationData"* %71, %"class.v8::internal::Zone"* %1) #16
  %80 = load %"class.v8::internal::compiler::TopTierRegisterAllocationData"*, %"class.v8::internal::compiler::TopTierRegisterAllocationData"** %8, align 8
  %81 = getelementptr inbounds %"class.v8::internal::compiler::TopTierRegisterAllocationData", %"class.v8::internal::compiler::TopTierRegisterAllocationData"* %80, i64 0, i32 9, i32 0, i32 0, i32 0
  %82 = load %"class.v8::internal::compiler::TopLevelLiveRange"**, %"class.v8::internal::compiler::TopLevelLiveRange"*** %81, align 8
  %83 = getelementptr inbounds %"class.v8::internal::compiler::TopTierRegisterAllocationData", %"class.v8::internal::compiler::TopTierRegisterAllocationData"* %80, i64 0, i32 9, i32 0, i32 0, i32 1
  %84 = load %"class.v8::internal::compiler::TopLevelLiveRange"**, %"class.v8::internal::compiler::TopLevelLiveRange"*** %83, align 8
  %85 = icmp eq %"class.v8::internal::compiler::TopLevelLiveRange"** %82, %84
  br i1 %85, label %642, label %86

86:                                               ; preds = %70
  %87 = getelementptr inbounds %"class.v8::internal::compiler::TopTierRegisterAllocationData", %"class.v8::internal::compiler::TopTierRegisterAllocationData"* %80, i64 0, i32 9, i32 0
  %88 = getelementptr inbounds %"class.v8::internal::compiler::TopTierRegisterAllocationData", %"class.v8::internal::compiler::TopTierRegisterAllocationData"* %80, i64 0, i32 9, i32 0, i32 0, i32 1
  %89 = bitcast %"class.v8::internal::compiler::TopLevelLiveRange"*** %88 to i64*
  %90 = load i64, i64* %89, align 8
  %91 = bitcast %"class.std::__1::vector"* %87 to i64*
  %92 = load i64, i64* %91, align 8
  %93 = sub i64 %90, %92
  %94 = icmp eq i64 %78, %93
  br i1 %94, label %644, label %643, !prof !80

95:                                               ; preds = %62, %639
  %96 = phi %"class.v8::internal::compiler::InstructionBlock"** [ %58, %62 ], [ %640, %639 ]
  %97 = load %"class.v8::internal::compiler::InstructionBlock"*, %"class.v8::internal::compiler::InstructionBlock"** %96, align 8
  %98 = getelementptr inbounds %"class.v8::internal::compiler::InstructionBlock", %"class.v8::internal::compiler::InstructionBlock"* %97, i64 0, i32 1, i32 0
  %99 = getelementptr inbounds %"class.v8::internal::compiler::InstructionBlock", %"class.v8::internal::compiler::InstructionBlock"* %97, i64 0, i32 1, i32 0, i32 0, i32 1
  %100 = bitcast %"class.v8::internal::compiler::RpoNumber"** %99 to i64*
  %101 = load i64, i64* %100, align 8
  %102 = bitcast %"class.std::__1::vector.38"* %98 to i64*
  %103 = load i64, i64* %102, align 8
  %104 = sub i64 %101, %103
  %105 = icmp eq i64 %104, 4
  br i1 %105, label %109, label %106

106:                                              ; preds = %95
  %107 = getelementptr inbounds %"class.v8::internal::compiler::InstructionBlock", %"class.v8::internal::compiler::InstructionBlock"* %97, i64 0, i32 4, i32 0
  %108 = load i32, i32* %107, align 4
  br label %117

109:                                              ; preds = %95
  %110 = inttoptr i64 %103 to %"class.v8::internal::compiler::RpoNumber"*
  %111 = getelementptr inbounds %"class.v8::internal::compiler::InstructionBlock", %"class.v8::internal::compiler::InstructionBlock"* %97, i64 0, i32 4, i32 0
  %112 = load i32, i32* %111, align 4
  %113 = getelementptr inbounds %"class.v8::internal::compiler::RpoNumber", %"class.v8::internal::compiler::RpoNumber"* %110, i64 0, i32 0
  %114 = load i32, i32* %113, align 4
  %115 = add nsw i32 %114, 1
  %116 = icmp eq i32 %115, %112
  br i1 %116, label %639, label %117

117:                                              ; preds = %106, %109
  %118 = phi i32 [ %108, %106 ], [ %112, %109 ]
  %119 = sext i32 %118 to i64
  %120 = load %"class.v8::internal::BitVector"**, %"class.v8::internal::BitVector"*** %63, align 8
  %121 = getelementptr inbounds %"class.v8::internal::BitVector"*, %"class.v8::internal::BitVector"** %120, i64 %119
  %122 = load %"class.v8::internal::BitVector"*, %"class.v8::internal::BitVector"** %121, align 8
  %123 = getelementptr inbounds %"class.v8::internal::BitVector", %"class.v8::internal::BitVector"* %122, i64 0, i32 1
  %124 = load i32, i32* %123, align 4
  %125 = icmp eq i32 %124, 1
  %126 = getelementptr inbounds %"class.v8::internal::BitVector", %"class.v8::internal::BitVector"* %122, i64 0, i32 2
  br i1 %125, label %127, label %129

127:                                              ; preds = %117
  %128 = bitcast %"union.v8::internal::BitVector::DataStorage"* %126 to i64*
  br label %132

129:                                              ; preds = %117
  %130 = getelementptr inbounds %"union.v8::internal::BitVector::DataStorage", %"union.v8::internal::BitVector::DataStorage"* %126, i64 0, i32 0
  %131 = load i64*, i64** %130, align 8
  br label %132

132:                                              ; preds = %129, %127
  %133 = phi i64* [ %128, %127 ], [ %131, %129 ]
  %134 = load i64, i64* %133, align 8
  %135 = icmp eq i64 %134, 0
  br i1 %135, label %136, label %159

136:                                              ; preds = %132
  %137 = sext i32 %124 to i64
  %138 = icmp sgt i32 %124, 1
  br i1 %138, label %139, label %168

139:                                              ; preds = %136
  %140 = getelementptr inbounds %"class.v8::internal::BitVector", %"class.v8::internal::BitVector"* %122, i64 0, i32 2, i32 0
  %141 = load i64*, i64** %140, align 8
  %142 = getelementptr inbounds i64, i64* %141, i64 1
  %143 = load i64, i64* %142, align 8
  %144 = icmp eq i64 %143, 0
  br i1 %144, label %145, label %155

145:                                              ; preds = %139, %149
  %146 = phi i64 [ %147, %149 ], [ 1, %139 ]
  %147 = add nuw nsw i64 %146, 1
  %148 = icmp eq i64 %147, %137
  br i1 %148, label %639, label %149

149:                                              ; preds = %145
  %150 = getelementptr inbounds i64, i64* %141, i64 %147
  %151 = load i64, i64* %150, align 8
  %152 = icmp eq i64 %151, 0
  br i1 %152, label %145, label %153

153:                                              ; preds = %149
  %154 = trunc i64 %147 to i32
  br label %155

155:                                              ; preds = %153, %139
  %156 = phi i32 [ %154, %153 ], [ 1, %139 ]
  %157 = phi i64 [ %151, %153 ], [ %143, %139 ]
  %158 = shl i32 %156, 6
  br label %159

159:                                              ; preds = %155, %132
  %160 = phi i32 [ 0, %132 ], [ %156, %155 ]
  %161 = phi i32 [ 0, %132 ], [ %158, %155 ]
  %162 = phi i64 [ %134, %132 ], [ %157, %155 ]
  %163 = call i64 @llvm.cttz.i64(i64 %162, i1 true) #16, !range !79
  %164 = trunc i64 %163 to i32
  %165 = or i32 %161, %164
  %166 = lshr i64 %162, %163
  %167 = lshr i64 %166, 1
  br label %168

168:                                              ; preds = %136, %159
  %169 = phi i32 [ %160, %159 ], [ 1, %136 ]
  %170 = phi i64 [ %167, %159 ], [ 0, %136 ]
  %171 = phi i32 [ %165, %159 ], [ 0, %136 ]
  %172 = icmp slt i32 %169, %124
  br i1 %172, label %173, label %639

173:                                              ; preds = %168
  %174 = getelementptr inbounds %"class.v8::internal::compiler::InstructionBlock", %"class.v8::internal::compiler::InstructionBlock"* %97, i64 0, i32 1, i32 0, i32 0, i32 0
  %175 = getelementptr inbounds %"class.v8::internal::compiler::InstructionBlock", %"class.v8::internal::compiler::InstructionBlock"* %97, i64 0, i32 8
  %176 = getelementptr inbounds %"class.v8::internal::compiler::InstructionBlock", %"class.v8::internal::compiler::InstructionBlock"* %97, i64 0, i32 9
  %177 = getelementptr inbounds %"class.v8::internal::BitVector", %"class.v8::internal::BitVector"* %122, i64 0, i32 2, i32 0
  br label %178

178:                                              ; preds = %173, %289
  %179 = phi i32 [ %171, %173 ], [ %293, %289 ]
  %180 = phi i64 [ %170, %173 ], [ %292, %289 ]
  %181 = phi i32 [ %169, %173 ], [ %291, %289 ]
  %182 = load %"class.v8::internal::compiler::TopTierRegisterAllocationData"*, %"class.v8::internal::compiler::TopTierRegisterAllocationData"** %8, align 8
  %183 = getelementptr inbounds %"class.v8::internal::compiler::TopTierRegisterAllocationData", %"class.v8::internal::compiler::TopTierRegisterAllocationData"* %182, i64 0, i32 24
  %184 = load %"class.v8::internal::TickCounter"*, %"class.v8::internal::TickCounter"** %183, align 8
  call void @_ZN2v88internal11TickCounter26TickAndMaybeEnterSafepointEv(%"class.v8::internal::TickCounter"* %184) #16
  %185 = load %"class.v8::internal::compiler::TopTierRegisterAllocationData"*, %"class.v8::internal::compiler::TopTierRegisterAllocationData"** %10, align 8
  %186 = sext i32 %179 to i64
  %187 = getelementptr inbounds %"class.v8::internal::compiler::TopTierRegisterAllocationData", %"class.v8::internal::compiler::TopTierRegisterAllocationData"* %185, i64 0, i32 9, i32 0, i32 0, i32 0
  %188 = load %"class.v8::internal::compiler::TopLevelLiveRange"**, %"class.v8::internal::compiler::TopLevelLiveRange"*** %187, align 8
  %189 = getelementptr inbounds %"class.v8::internal::compiler::TopLevelLiveRange"*, %"class.v8::internal::compiler::TopLevelLiveRange"** %188, i64 %186
  %190 = load %"class.v8::internal::compiler::TopLevelLiveRange"*, %"class.v8::internal::compiler::TopLevelLiveRange"** %189, align 8
  %191 = load %"class.v8::internal::compiler::LiveRangeBoundArray"*, %"class.v8::internal::compiler::LiveRangeBoundArray"** %21, align 8
  %192 = getelementptr inbounds %"class.v8::internal::compiler::LiveRangeBoundArray", %"class.v8::internal::compiler::LiveRangeBoundArray"* %191, i64 %186
  %193 = getelementptr inbounds %"class.v8::internal::compiler::LiveRangeBoundArray", %"class.v8::internal::compiler::LiveRangeBoundArray"* %191, i64 %186, i32 1
  %194 = load %"class.v8::internal::compiler::LiveRangeBound"*, %"class.v8::internal::compiler::LiveRangeBound"** %193, align 8
  %195 = icmp eq %"class.v8::internal::compiler::LiveRangeBound"* %194, null
  br i1 %195, label %196, label %245

196:                                              ; preds = %178
  %197 = load %"class.v8::internal::Zone"*, %"class.v8::internal::Zone"** %37, align 8
  %198 = getelementptr inbounds %"class.v8::internal::compiler::TopLevelLiveRange", %"class.v8::internal::compiler::TopLevelLiveRange"* %190, i64 0, i32 2
  %199 = load i32, i32* %198, align 8
  %200 = add nsw i32 %199, 1
  %201 = sext i32 %200 to i64
  %202 = mul nsw i64 %201, 24
  %203 = getelementptr inbounds %"class.v8::internal::Zone", %"class.v8::internal::Zone"* %197, i64 0, i32 2
  %204 = load i64, i64* %203, align 8
  %205 = getelementptr inbounds %"class.v8::internal::Zone", %"class.v8::internal::Zone"* %197, i64 0, i32 3
  %206 = load i64, i64* %205, align 8
  %207 = sub i64 %206, %204
  %208 = icmp ugt i64 %202, %207
  br i1 %208, label %209, label %211, !prof !2

209:                                              ; preds = %196
  %210 = call i64 @_ZN2v88internal4Zone9NewExpandEm(%"class.v8::internal::Zone"* %197, i64 %202) #16
  br label %213

211:                                              ; preds = %196
  %212 = add i64 %202, %204
  store i64 %212, i64* %203, align 8
  br label %213

213:                                              ; preds = %211, %209
  %214 = phi i64 [ %210, %209 ], [ %204, %211 ]
  %215 = inttoptr i64 %214 to %"class.v8::internal::compiler::LiveRangeBound"*
  store %"class.v8::internal::compiler::LiveRangeBound"* %215, %"class.v8::internal::compiler::LiveRangeBound"** %193, align 8
  %216 = getelementptr inbounds %"class.v8::internal::compiler::LiveRangeBoundArray", %"class.v8::internal::compiler::LiveRangeBoundArray"* %192, i64 0, i32 0
  store i64 0, i64* %216, align 8
  %217 = icmp eq %"class.v8::internal::compiler::TopLevelLiveRange"* %190, null
  br i1 %217, label %245, label %218

218:                                              ; preds = %213
  %219 = bitcast %"class.v8::internal::compiler::TopLevelLiveRange"* %190 to %"class.v8::internal::compiler::LiveRange"*
  br label %220

220:                                              ; preds = %220, %218
  %221 = phi %"class.v8::internal::compiler::LiveRange"* [ %240, %220 ], [ %219, %218 ]
  %222 = phi %"class.v8::internal::compiler::LiveRangeBound"* [ %241, %220 ], [ %215, %218 ]
  %223 = getelementptr inbounds %"class.v8::internal::compiler::LiveRange", %"class.v8::internal::compiler::LiveRange"* %221, i64 0, i32 1
  %224 = load i32, i32* %223, align 4
  %225 = trunc i32 %224 to i8
  %226 = and i8 %225, 1
  %227 = getelementptr inbounds %"class.v8::internal::compiler::LiveRangeBound", %"class.v8::internal::compiler::LiveRangeBound"* %222, i64 0, i32 0
  store %"class.v8::internal::compiler::LiveRange"* %221, %"class.v8::internal::compiler::LiveRange"** %227, align 8
  %228 = getelementptr inbounds %"class.v8::internal::compiler::LiveRange", %"class.v8::internal::compiler::LiveRange"* %221, i64 0, i32 3
  %229 = load %"class.v8::internal::compiler::UseInterval"*, %"class.v8::internal::compiler::UseInterval"** %228, align 8
  %230 = getelementptr inbounds %"class.v8::internal::compiler::UseInterval", %"class.v8::internal::compiler::UseInterval"* %229, i64 0, i32 0, i32 0
  %231 = load i32, i32* %230, align 8
  %232 = getelementptr inbounds %"class.v8::internal::compiler::LiveRangeBound", %"class.v8::internal::compiler::LiveRangeBound"* %222, i64 0, i32 1, i32 0
  store i32 %231, i32* %232, align 8
  %233 = getelementptr inbounds %"class.v8::internal::compiler::LiveRange", %"class.v8::internal::compiler::LiveRange"* %221, i64 0, i32 2
  %234 = load %"class.v8::internal::compiler::UseInterval"*, %"class.v8::internal::compiler::UseInterval"** %233, align 8
  %235 = getelementptr inbounds %"class.v8::internal::compiler::UseInterval", %"class.v8::internal::compiler::UseInterval"* %234, i64 0, i32 1, i32 0
  %236 = load i32, i32* %235, align 4
  %237 = getelementptr inbounds %"class.v8::internal::compiler::LiveRangeBound", %"class.v8::internal::compiler::LiveRangeBound"* %222, i64 0, i32 2, i32 0
  store i32 %236, i32* %237, align 4
  %238 = getelementptr inbounds %"class.v8::internal::compiler::LiveRangeBound", %"class.v8::internal::compiler::LiveRangeBound"* %222, i64 0, i32 3
  store i8 %226, i8* %238, align 8
  %239 = getelementptr inbounds %"class.v8::internal::compiler::LiveRange", %"class.v8::internal::compiler::LiveRange"* %221, i64 0, i32 6
  %240 = load %"class.v8::internal::compiler::LiveRange"*, %"class.v8::internal::compiler::LiveRange"** %239, align 8
  %241 = getelementptr inbounds %"class.v8::internal::compiler::LiveRangeBound", %"class.v8::internal::compiler::LiveRangeBound"* %222, i64 1
  %242 = load i64, i64* %216, align 8
  %243 = add i64 %242, 1
  store i64 %243, i64* %216, align 8
  %244 = icmp eq %"class.v8::internal::compiler::LiveRange"* %240, null
  br i1 %244, label %245, label %220

245:                                              ; preds = %220, %178, %213
  %246 = load %"class.v8::internal::compiler::RpoNumber"*, %"class.v8::internal::compiler::RpoNumber"** %174, align 8
  %247 = load %"class.v8::internal::compiler::RpoNumber"*, %"class.v8::internal::compiler::RpoNumber"** %99, align 8
  %248 = icmp eq %"class.v8::internal::compiler::RpoNumber"* %246, %247
  br i1 %248, label %251, label %249

249:                                              ; preds = %245
  %250 = getelementptr inbounds %"class.v8::internal::compiler::LiveRangeBoundArray", %"class.v8::internal::compiler::LiveRangeBoundArray"* %192, i64 0, i32 0
  br label %295

251:                                              ; preds = %636, %245
  %252 = add nsw i32 %179, 1
  %253 = icmp eq i64 %180, 0
  br i1 %253, label %256, label %254

254:                                              ; preds = %251
  %255 = load i32, i32* %123, align 4
  br label %275

256:                                              ; preds = %251
  %257 = add i32 %181, 1
  %258 = load i32, i32* %123, align 4
  %259 = icmp slt i32 %257, %258
  br i1 %259, label %260, label %289

260:                                              ; preds = %256
  %261 = load i64*, i64** %177, align 8
  %262 = sext i32 %257 to i64
  %263 = sext i32 %258 to i64
  br label %267

264:                                              ; preds = %267
  %265 = add nsw i64 %268, 1
  %266 = icmp slt i64 %265, %263
  br i1 %266, label %267, label %285

267:                                              ; preds = %260, %264
  %268 = phi i64 [ %262, %260 ], [ %265, %264 ]
  %269 = getelementptr inbounds i64, i64* %261, i64 %268
  %270 = load i64, i64* %269, align 8
  %271 = icmp eq i64 %270, 0
  br i1 %271, label %264, label %272

272:                                              ; preds = %267
  %273 = trunc i64 %268 to i32
  %274 = shl i32 %273, 6
  br label %275

275:                                              ; preds = %272, %254
  %276 = phi i32 [ %255, %254 ], [ %258, %272 ]
  %277 = phi i32 [ %181, %254 ], [ %273, %272 ]
  %278 = phi i32 [ %252, %254 ], [ %274, %272 ]
  %279 = phi i64 [ %180, %254 ], [ %270, %272 ]
  %280 = call i64 @llvm.cttz.i64(i64 %279, i1 true) #16, !range !79
  %281 = trunc i64 %280 to i32
  %282 = add i32 %278, %281
  %283 = lshr i64 %279, %280
  %284 = lshr i64 %283, 1
  br label %289

285:                                              ; preds = %264
  %286 = trunc i64 %268 to i32
  %287 = shl i32 %286, 6
  %288 = trunc i64 %265 to i32
  br label %289

289:                                              ; preds = %285, %256, %275
  %290 = phi i32 [ %276, %275 ], [ %258, %256 ], [ %258, %285 ]
  %291 = phi i32 [ %277, %275 ], [ %257, %256 ], [ %288, %285 ]
  %292 = phi i64 [ %284, %275 ], [ 0, %256 ], [ 0, %285 ]
  %293 = phi i32 [ %282, %275 ], [ %252, %256 ], [ %287, %285 ]
  %294 = icmp slt i32 %291, %290
  br i1 %294, label %178, label %639

295:                                              ; preds = %249, %636
  %296 = phi %"class.v8::internal::compiler::RpoNumber"* [ %246, %249 ], [ %637, %636 ]
  %297 = load %"class.v8::internal::compiler::TopTierRegisterAllocationData"*, %"class.v8::internal::compiler::TopTierRegisterAllocationData"** %8, align 8
  %298 = getelementptr inbounds %"class.v8::internal::compiler::TopTierRegisterAllocationData", %"class.v8::internal::compiler::TopTierRegisterAllocationData"* %297, i64 0, i32 3
  %299 = load %"class.v8::internal::compiler::InstructionSequence"*, %"class.v8::internal::compiler::InstructionSequence"** %298, align 8
  %300 = getelementptr inbounds %"class.v8::internal::compiler::RpoNumber", %"class.v8::internal::compiler::RpoNumber"* %296, i64 0, i32 0
  %301 = load i32, i32* %300, align 4
  %302 = getelementptr inbounds %"class.v8::internal::compiler::InstructionSequence", %"class.v8::internal::compiler::InstructionSequence"* %299, i64 0, i32 2
  %303 = bitcast %"class.v8::internal::ZoneVector.1170"** %302 to %"class.std::__1::vector.1171"**
  %304 = load %"class.std::__1::vector.1171"*, %"class.std::__1::vector.1171"** %303, align 8
  %305 = sext i32 %301 to i64
  %306 = getelementptr inbounds %"class.std::__1::vector.1171", %"class.std::__1::vector.1171"* %304, i64 0, i32 0, i32 1
  %307 = bitcast %"class.v8::internal::compiler::InstructionBlock"*** %306 to i64*
  %308 = load i64, i64* %307, align 8
  %309 = bitcast %"class.std::__1::vector.1171"* %304 to i64*
  %310 = load i64, i64* %309, align 8
  %311 = sub i64 %308, %310
  %312 = ashr exact i64 %311, 3
  %313 = icmp ugt i64 %312, %305
  br i1 %313, label %316, label %314

314:                                              ; preds = %295
  %315 = bitcast %"class.std::__1::vector.1171"* %304 to %"class.std::__1::__vector_base_common"*
  call void @_ZNKSt3__120__vector_base_commonILb1EE20__throw_out_of_rangeEv(%"class.std::__1::__vector_base_common"* %315) #17
  unreachable

316:                                              ; preds = %295
  %317 = inttoptr i64 %310 to %"class.v8::internal::compiler::InstructionBlock"**
  %318 = getelementptr inbounds %"class.v8::internal::compiler::InstructionBlock"*, %"class.v8::internal::compiler::InstructionBlock"** %317, i64 %305
  %319 = load %"class.v8::internal::compiler::InstructionBlock"*, %"class.v8::internal::compiler::InstructionBlock"** %318, align 8
  %320 = getelementptr inbounds %"class.v8::internal::compiler::InstructionBlock", %"class.v8::internal::compiler::InstructionBlock"* %319, i64 0, i32 9
  %321 = load i32, i32* %320, align 8
  %322 = shl i32 %321, 2
  %323 = add i32 %322, -4
  %324 = or i32 %323, 2
  %325 = load i64, i64* %250, align 8
  %326 = load %"class.v8::internal::compiler::LiveRangeBound"*, %"class.v8::internal::compiler::LiveRangeBound"** %193, align 8
  br label %327

327:                                              ; preds = %330, %316
  %328 = phi i64 [ %325, %316 ], [ %334, %330 ]
  %329 = phi i64 [ 0, %316 ], [ %331, %330 ]
  br label %330

330:                                              ; preds = %327, %338
  %331 = phi i64 [ %334, %338 ], [ %329, %327 ]
  %332 = sub i64 %328, %331
  %333 = lshr i64 %332, 1
  %334 = add i64 %333, %331
  %335 = getelementptr inbounds %"class.v8::internal::compiler::LiveRangeBound", %"class.v8::internal::compiler::LiveRangeBound"* %326, i64 %334, i32 1, i32 0
  %336 = load i32, i32* %335, align 4
  %337 = icmp sgt i32 %336, %324
  br i1 %337, label %327, label %338

338:                                              ; preds = %330
  %339 = getelementptr inbounds %"class.v8::internal::compiler::LiveRangeBound", %"class.v8::internal::compiler::LiveRangeBound"* %326, i64 %334, i32 2, i32 0
  %340 = load i32, i32* %339, align 4
  %341 = icmp sgt i32 %340, %324
  br i1 %341, label %342, label %330

342:                                              ; preds = %338
  %343 = getelementptr inbounds %"class.v8::internal::compiler::LiveRangeBound", %"class.v8::internal::compiler::LiveRangeBound"* %326, i64 %334, i32 0
  %344 = load %"class.v8::internal::compiler::LiveRange"*, %"class.v8::internal::compiler::LiveRange"** %343, align 8
  %345 = load i32, i32* %175, align 4
  %346 = shl nsw i32 %345, 2
  %347 = icmp sle i32 %336, %346
  %348 = icmp sgt i32 %340, %346
  %349 = and i1 %347, %348
  br i1 %349, label %636, label %350

350:                                              ; preds = %353, %342
  %351 = phi i64 [ %325, %342 ], [ %357, %353 ]
  %352 = phi i64 [ 0, %342 ], [ %354, %353 ]
  br label %353

353:                                              ; preds = %350, %361
  %354 = phi i64 [ %357, %361 ], [ %352, %350 ]
  %355 = sub i64 %351, %354
  %356 = lshr i64 %355, 1
  %357 = add i64 %356, %354
  %358 = getelementptr inbounds %"class.v8::internal::compiler::LiveRangeBound", %"class.v8::internal::compiler::LiveRangeBound"* %326, i64 %357, i32 1, i32 0
  %359 = load i32, i32* %358, align 4
  %360 = icmp sgt i32 %359, %346
  br i1 %360, label %350, label %361

361:                                              ; preds = %353
  %362 = getelementptr inbounds %"class.v8::internal::compiler::LiveRangeBound", %"class.v8::internal::compiler::LiveRangeBound"* %326, i64 %357, i32 2, i32 0
  %363 = load i32, i32* %362, align 4
  %364 = icmp sgt i32 %363, %346
  br i1 %364, label %365, label %353

365:                                              ; preds = %361
  %366 = getelementptr inbounds %"class.v8::internal::compiler::LiveRangeBound", %"class.v8::internal::compiler::LiveRangeBound"* %326, i64 %357, i32 3
  %367 = load i8, i8* %366, align 8, !range !3
  %368 = icmp eq i8 %367, 0
  br i1 %368, label %369, label %636

369:                                              ; preds = %365
  %370 = getelementptr inbounds %"class.v8::internal::compiler::LiveRangeBound", %"class.v8::internal::compiler::LiveRangeBound"* %326, i64 %357, i32 0
  %371 = load %"class.v8::internal::compiler::LiveRange"*, %"class.v8::internal::compiler::LiveRange"** %370, align 8
  %372 = icmp eq %"class.v8::internal::compiler::LiveRange"* %371, %344
  br i1 %372, label %636, label %373

373:                                              ; preds = %369
  call void @llvm.lifetime.start.p0i8(i64 8, i8* nonnull %64) #16
  %374 = getelementptr inbounds %"class.v8::internal::compiler::LiveRange", %"class.v8::internal::compiler::LiveRange"* %344, i64 0, i32 1
  %375 = load i32, i32* %374, align 4
  %376 = and i32 %375, 8064
  %377 = icmp eq i32 %376, 4096
  br i1 %377, label %388, label %378

378:                                              ; preds = %373
  %379 = lshr i32 %375, 7
  %380 = and i32 %379, 63
  %381 = lshr i32 %375, 8
  %382 = and i32 %381, 8160
  %383 = zext i32 %380 to i64
  %384 = shl nuw nsw i64 %383, 35
  %385 = or i32 %382, 5
  %386 = zext i32 %385 to i64
  %387 = or i64 %384, %386
  br label %413

388:                                              ; preds = %373
  %389 = getelementptr inbounds %"class.v8::internal::compiler::LiveRange", %"class.v8::internal::compiler::LiveRange"* %344, i64 0, i32 5
  %390 = load %"class.v8::internal::compiler::TopLevelLiveRange"*, %"class.v8::internal::compiler::TopLevelLiveRange"** %389, align 8
  %391 = getelementptr inbounds %"class.v8::internal::compiler::TopLevelLiveRange", %"class.v8::internal::compiler::TopLevelLiveRange"* %390, i64 0, i32 0, i32 1
  %392 = load i32, i32* %391, align 4
  %393 = and i32 %392, 96
  %394 = icmp eq i32 %393, 32
  br i1 %394, label %395, label %400

395:                                              ; preds = %388
  %396 = getelementptr inbounds %"class.v8::internal::compiler::TopLevelLiveRange", %"class.v8::internal::compiler::TopLevelLiveRange"* %390, i64 0, i32 3, i32 0
  %397 = load %"class.v8::internal::compiler::InstructionOperand"*, %"class.v8::internal::compiler::InstructionOperand"** %396, align 8
  %398 = getelementptr inbounds %"class.v8::internal::compiler::InstructionOperand", %"class.v8::internal::compiler::InstructionOperand"* %397, i64 0, i32 0
  %399 = load i64, i64* %398, align 8
  br label %413

400:                                              ; preds = %388
  %401 = getelementptr inbounds %"class.v8::internal::compiler::TopLevelLiveRange", %"class.v8::internal::compiler::TopLevelLiveRange"* %390, i64 0, i32 3
  %402 = bitcast %union.anon* %401 to %"class.v8::internal::compiler::SpillRange"**
  %403 = load %"class.v8::internal::compiler::SpillRange"*, %"class.v8::internal::compiler::SpillRange"** %402, align 8
  %404 = getelementptr inbounds %"class.v8::internal::compiler::SpillRange", %"class.v8::internal::compiler::SpillRange"* %403, i64 0, i32 3
  %405 = load i32, i32* %404, align 4
  %406 = lshr i32 %392, 8
  %407 = and i32 %406, 8160
  %408 = zext i32 %405 to i64
  %409 = shl i64 %408, 35
  %410 = or i32 %407, 13
  %411 = zext i32 %410 to i64
  %412 = or i64 %409, %411
  br label %413

413:                                              ; preds = %378, %395, %400
  %414 = phi i64 [ %387, %378 ], [ %399, %395 ], [ %412, %400 ]
  store i64 %414, i64* %65, align 8
  call void @llvm.lifetime.start.p0i8(i64 8, i8* nonnull %66) #16
  %415 = getelementptr inbounds %"class.v8::internal::compiler::LiveRange", %"class.v8::internal::compiler::LiveRange"* %371, i64 0, i32 1
  %416 = load i32, i32* %415, align 4
  %417 = and i32 %416, 8064
  %418 = icmp eq i32 %417, 4096
  br i1 %418, label %429, label %419

419:                                              ; preds = %413
  %420 = lshr i32 %416, 7
  %421 = and i32 %420, 63
  %422 = lshr i32 %416, 8
  %423 = and i32 %422, 8160
  %424 = zext i32 %421 to i64
  %425 = shl nuw nsw i64 %424, 35
  %426 = or i32 %423, 5
  %427 = zext i32 %426 to i64
  %428 = or i64 %425, %427
  br label %454

429:                                              ; preds = %413
  %430 = getelementptr inbounds %"class.v8::internal::compiler::LiveRange", %"class.v8::internal::compiler::LiveRange"* %371, i64 0, i32 5
  %431 = load %"class.v8::internal::compiler::TopLevelLiveRange"*, %"class.v8::internal::compiler::TopLevelLiveRange"** %430, align 8
  %432 = getelementptr inbounds %"class.v8::internal::compiler::TopLevelLiveRange", %"class.v8::internal::compiler::TopLevelLiveRange"* %431, i64 0, i32 0, i32 1
  %433 = load i32, i32* %432, align 4
  %434 = and i32 %433, 96
  %435 = icmp eq i32 %434, 32
  br i1 %435, label %436, label %441

436:                                              ; preds = %429
  %437 = getelementptr inbounds %"class.v8::internal::compiler::TopLevelLiveRange", %"class.v8::internal::compiler::TopLevelLiveRange"* %431, i64 0, i32 3, i32 0
  %438 = load %"class.v8::internal::compiler::InstructionOperand"*, %"class.v8::internal::compiler::InstructionOperand"** %437, align 8
  %439 = getelementptr inbounds %"class.v8::internal::compiler::InstructionOperand", %"class.v8::internal::compiler::InstructionOperand"* %438, i64 0, i32 0
  %440 = load i64, i64* %439, align 8
  br label %454

441:                                              ; preds = %429
  %442 = getelementptr inbounds %"class.v8::internal::compiler::TopLevelLiveRange", %"class.v8::internal::compiler::TopLevelLiveRange"* %431, i64 0, i32 3
  %443 = bitcast %union.anon* %442 to %"class.v8::internal::compiler::SpillRange"**
  %444 = load %"class.v8::internal::compiler::SpillRange"*, %"class.v8::internal::compiler::SpillRange"** %443, align 8
  %445 = getelementptr inbounds %"class.v8::internal::compiler::SpillRange", %"class.v8::internal::compiler::SpillRange"* %444, i64 0, i32 3
  %446 = load i32, i32* %445, align 4
  %447 = lshr i32 %433, 8
  %448 = and i32 %447, 8160
  %449 = zext i32 %446 to i64
  %450 = shl i64 %449, 35
  %451 = or i32 %448, 13
  %452 = zext i32 %451 to i64
  %453 = or i64 %450, %452
  br label %454

454:                                              ; preds = %419, %436, %441
  %455 = phi i64 [ %428, %419 ], [ %440, %436 ], [ %453, %441 ]
  store i64 %455, i64* %67, align 8
  %456 = and i64 %414, 7
  %457 = icmp ne i64 %456, 4
  %458 = icmp eq i64 %414, %455
  %459 = and i1 %457, %458
  br i1 %459, label %635, label %460

460:                                              ; preds = %454
  %461 = icmp ugt i64 %456, 4
  %462 = and i64 %414, 24
  %463 = icmp eq i64 %462, 0
  %464 = and i1 %461, %463
  br i1 %464, label %579, label %465

465:                                              ; preds = %460
  %466 = and i64 %455, 7
  %467 = icmp ugt i64 %466, 4
  %468 = and i64 %455, 24
  %469 = icmp eq i64 %468, 0
  %470 = and i1 %467, %469
  br i1 %470, label %471, label %579

471:                                              ; preds = %465
  %472 = load i32, i32* %176, align 8
  %473 = shl nsw i32 %472, 2
  %474 = getelementptr inbounds %"class.v8::internal::compiler::LiveRange", %"class.v8::internal::compiler::LiveRange"* %371, i64 0, i32 6
  %475 = load %"class.v8::internal::compiler::LiveRange"*, %"class.v8::internal::compiler::LiveRange"** %474, align 8
  %476 = getelementptr inbounds %"class.v8::internal::compiler::LiveRange", %"class.v8::internal::compiler::LiveRange"* %371, i64 0, i32 2
  %477 = load %"class.v8::internal::compiler::UseInterval"*, %"class.v8::internal::compiler::UseInterval"** %476, align 8
  %478 = getelementptr inbounds %"class.v8::internal::compiler::UseInterval", %"class.v8::internal::compiler::UseInterval"* %477, i64 0, i32 1, i32 0
  %479 = load i32, i32* %478, align 4
  %480 = icmp slt i32 %479, %473
  br i1 %480, label %481, label %528

481:                                              ; preds = %471
  %482 = icmp eq %"class.v8::internal::compiler::LiveRange"* %475, null
  br i1 %482, label %488, label %483

483:                                              ; preds = %481
  %484 = getelementptr inbounds %"class.v8::internal::compiler::LiveRange", %"class.v8::internal::compiler::LiveRange"* %475, i64 0, i32 1
  %485 = load i32, i32* %484, align 4
  %486 = and i32 %485, 1
  %487 = icmp eq i32 %486, 0
  br i1 %487, label %528, label %488

488:                                              ; preds = %483, %481
  %489 = getelementptr inbounds %"class.v8::internal::compiler::LiveRange", %"class.v8::internal::compiler::LiveRange"* %371, i64 0, i32 8
  %490 = load %"class.v8::internal::compiler::UsePosition"*, %"class.v8::internal::compiler::UsePosition"** %489, align 8
  %491 = icmp eq %"class.v8::internal::compiler::UsePosition"* %490, null
  br i1 %491, label %496, label %492

492:                                              ; preds = %488
  %493 = getelementptr inbounds %"class.v8::internal::compiler::UsePosition", %"class.v8::internal::compiler::UsePosition"* %490, i64 0, i32 3, i32 0
  %494 = load i32, i32* %493, align 8
  %495 = icmp sgt i32 %494, %346
  br i1 %495, label %496, label %500

496:                                              ; preds = %492, %488
  %497 = getelementptr inbounds %"class.v8::internal::compiler::LiveRange", %"class.v8::internal::compiler::LiveRange"* %371, i64 0, i32 4
  %498 = load %"class.v8::internal::compiler::UsePosition"*, %"class.v8::internal::compiler::UsePosition"** %497, align 8
  %499 = icmp eq %"class.v8::internal::compiler::UsePosition"* %498, null
  br i1 %499, label %511, label %500

500:                                              ; preds = %496, %492
  %501 = phi %"class.v8::internal::compiler::UsePosition"* [ %490, %492 ], [ %498, %496 ]
  br label %502

502:                                              ; preds = %500, %507
  %503 = phi %"class.v8::internal::compiler::UsePosition"* [ %509, %507 ], [ %501, %500 ]
  %504 = getelementptr inbounds %"class.v8::internal::compiler::UsePosition", %"class.v8::internal::compiler::UsePosition"* %503, i64 0, i32 3, i32 0
  %505 = load i32, i32* %504, align 8
  %506 = icmp slt i32 %505, %346
  br i1 %506, label %507, label %512

507:                                              ; preds = %502
  %508 = getelementptr inbounds %"class.v8::internal::compiler::UsePosition", %"class.v8::internal::compiler::UsePosition"* %503, i64 0, i32 2
  %509 = load %"class.v8::internal::compiler::UsePosition"*, %"class.v8::internal::compiler::UsePosition"** %508, align 8
  %510 = icmp eq %"class.v8::internal::compiler::UsePosition"* %509, null
  br i1 %510, label %511, label %502

511:                                              ; preds = %507, %496
  store %"class.v8::internal::compiler::UsePosition"* null, %"class.v8::internal::compiler::UsePosition"** %489, align 8
  br label %635

512:                                              ; preds = %502
  store %"class.v8::internal::compiler::UsePosition"* %503, %"class.v8::internal::compiler::UsePosition"** %489, align 8
  br label %513

513:                                              ; preds = %512, %524
  %514 = phi %"class.v8::internal::compiler::UsePosition"* [ %526, %524 ], [ %503, %512 ]
  %515 = getelementptr inbounds %"class.v8::internal::compiler::UsePosition", %"class.v8::internal::compiler::UsePosition"* %514, i64 0, i32 0
  %516 = load %"class.v8::internal::compiler::InstructionOperand"*, %"class.v8::internal::compiler::InstructionOperand"** %515, align 8
  %517 = getelementptr inbounds %"class.v8::internal::compiler::InstructionOperand", %"class.v8::internal::compiler::InstructionOperand"* %516, i64 0, i32 0
  %518 = load i64, i64* %517, align 8
  %519 = and i64 %518, 7
  %520 = icmp ugt i64 %519, 4
  %521 = and i64 %518, 24
  %522 = icmp eq i64 %521, 0
  %523 = and i1 %520, %522
  br i1 %523, label %528, label %524

524:                                              ; preds = %513
  %525 = getelementptr inbounds %"class.v8::internal::compiler::UsePosition", %"class.v8::internal::compiler::UsePosition"* %514, i64 0, i32 2
  %526 = load %"class.v8::internal::compiler::UsePosition"*, %"class.v8::internal::compiler::UsePosition"** %525, align 8
  %527 = icmp eq %"class.v8::internal::compiler::UsePosition"* %526, null
  br i1 %527, label %635, label %513

528:                                              ; preds = %513, %483, %471
  %529 = getelementptr inbounds %"class.v8::internal::compiler::LiveRange", %"class.v8::internal::compiler::LiveRange"* %371, i64 0, i32 5
  %530 = load %"class.v8::internal::compiler::TopLevelLiveRange"*, %"class.v8::internal::compiler::TopLevelLiveRange"** %529, align 8
  %531 = getelementptr inbounds %"class.v8::internal::compiler::TopLevelLiveRange", %"class.v8::internal::compiler::TopLevelLiveRange"* %530, i64 0, i32 0, i32 1
  %532 = load i32, i32* %531, align 4
  %533 = and i32 %532, 96
  %534 = icmp eq i32 %533, 96
  br i1 %534, label %535, label %579

535:                                              ; preds = %528
  %536 = getelementptr inbounds %"class.v8::internal::compiler::InstructionBlock", %"class.v8::internal::compiler::InstructionBlock"* %319, i64 0, i32 10
  %537 = load i8, i8* %536, align 4, !range !3
  %538 = icmp eq i8 %537, 0
  br i1 %538, label %579, label %539

539:                                              ; preds = %535
  %540 = load %"class.v8::internal::compiler::TopTierRegisterAllocationData"*, %"class.v8::internal::compiler::TopTierRegisterAllocationData"** %8, align 8
  %541 = getelementptr inbounds %"class.v8::internal::compiler::TopTierRegisterAllocationData", %"class.v8::internal::compiler::TopTierRegisterAllocationData"* %540, i64 0, i32 23, i32 0
  %542 = load i32, i32* %541, align 4
  %543 = and i32 %542, 1
  %544 = icmp eq i32 %543, 0
  br i1 %544, label %551, label %545

545:                                              ; preds = %539
  %546 = getelementptr inbounds %"class.v8::internal::compiler::InstructionBlock", %"class.v8::internal::compiler::InstructionBlock"* %319, i64 0, i32 4, i32 0
  %547 = load i32, i32* %546, align 4
  %548 = getelementptr inbounds %"class.v8::internal::compiler::TopLevelLiveRange", %"class.v8::internal::compiler::TopLevelLiveRange"* %530, i64 0, i32 1
  %549 = load i32, i32* %548, align 4
  call void (i8*, ...) @_ZN2v88internal6PrintFEPKcz(i8* getelementptr inbounds ([43 x i8], [43 x i8]* @.str.99, i64 0, i64 0), i32 %547, i32 %549) #16
  %550 = load %"class.v8::internal::compiler::TopLevelLiveRange"*, %"class.v8::internal::compiler::TopLevelLiveRange"** %529, align 8
  br label %551

551:                                              ; preds = %539, %545
  %552 = phi %"class.v8::internal::compiler::TopLevelLiveRange"* [ %530, %539 ], [ %550, %545 ]
  %553 = getelementptr inbounds %"class.v8::internal::compiler::TopLevelLiveRange", %"class.v8::internal::compiler::TopLevelLiveRange"* %552, i64 0, i32 4
  %554 = bitcast %union.anon.36* %553 to %"class.v8::internal::BitVector"**
  %555 = load %"class.v8::internal::BitVector"*, %"class.v8::internal::BitVector"** %554, align 8
  %556 = getelementptr inbounds %"class.v8::internal::compiler::InstructionBlock", %"class.v8::internal::compiler::InstructionBlock"* %319, i64 0, i32 4, i32 0
  %557 = load i32, i32* %556, align 4
  %558 = getelementptr inbounds %"class.v8::internal::BitVector", %"class.v8::internal::BitVector"* %555, i64 0, i32 1
  %559 = load i32, i32* %558, align 4
  %560 = icmp eq i32 %559, 1
  br i1 %560, label %561, label %568

561:                                              ; preds = %551
  %562 = zext i32 %557 to i64
  %563 = shl i64 1, %562
  %564 = getelementptr inbounds %"class.v8::internal::BitVector", %"class.v8::internal::BitVector"* %555, i64 0, i32 2
  %565 = bitcast %"union.v8::internal::BitVector::DataStorage"* %564 to i64*
  %566 = load i64, i64* %565, align 8
  %567 = or i64 %566, %563
  store i64 %567, i64* %565, align 8
  br label %579

568:                                              ; preds = %551
  %569 = srem i32 %557, 64
  %570 = zext i32 %569 to i64
  %571 = shl i64 1, %570
  %572 = getelementptr inbounds %"class.v8::internal::BitVector", %"class.v8::internal::BitVector"* %555, i64 0, i32 2, i32 0
  %573 = load i64*, i64** %572, align 8
  %574 = sdiv i32 %557, 64
  %575 = sext i32 %574 to i64
  %576 = getelementptr inbounds i64, i64* %573, i64 %575
  %577 = load i64, i64* %576, align 8
  %578 = or i64 %577, %571
  store i64 %578, i64* %576, align 8
  br label %579

579:                                              ; preds = %535, %568, %561, %528, %465, %460
  %580 = load i64, i64* %100, align 8
  %581 = load i64, i64* %102, align 8
  %582 = sub i64 %580, %581
  %583 = icmp eq i64 %582, 4
  br i1 %583, label %584, label %586

584:                                              ; preds = %579
  %585 = load i32, i32* %175, align 4
  br label %589

586:                                              ; preds = %579
  %587 = load i32, i32* %320, align 8
  %588 = add nsw i32 %587, -1
  br label %589

589:                                              ; preds = %586, %584
  %590 = phi i32 [ %585, %584 ], [ %588, %586 ]
  %591 = phi i64 [ 0, %584 ], [ 1, %586 ]
  %592 = load %"class.v8::internal::compiler::TopTierRegisterAllocationData"*, %"class.v8::internal::compiler::TopTierRegisterAllocationData"** %8, align 8
  %593 = getelementptr inbounds %"class.v8::internal::compiler::TopTierRegisterAllocationData", %"class.v8::internal::compiler::TopTierRegisterAllocationData"* %592, i64 0, i32 3
  %594 = load %"class.v8::internal::compiler::InstructionSequence"*, %"class.v8::internal::compiler::InstructionSequence"** %593, align 8
  %595 = sext i32 %590 to i64
  %596 = getelementptr inbounds %"class.v8::internal::compiler::InstructionSequence", %"class.v8::internal::compiler::InstructionSequence"* %594, i64 0, i32 8, i32 0, i32 0, i32 1
  %597 = load i64, i64* %596, align 8
  %598 = add i64 %597, %595
  %599 = getelementptr inbounds %"class.v8::internal::compiler::InstructionSequence", %"class.v8::internal::compiler::InstructionSequence"* %594, i64 0, i32 8, i32 0, i32 0, i32 0, i32 1
  %600 = load %"class.v8::internal::compiler::Instruction"***, %"class.v8::internal::compiler::Instruction"**** %599, align 8
  %601 = lshr i64 %598, 9
  %602 = getelementptr inbounds %"class.v8::internal::compiler::Instruction"**, %"class.v8::internal::compiler::Instruction"*** %600, i64 %601
  %603 = load %"class.v8::internal::compiler::Instruction"**, %"class.v8::internal::compiler::Instruction"*** %602, align 8
  %604 = and i64 %598, 511
  %605 = getelementptr inbounds %"class.v8::internal::compiler::Instruction"*, %"class.v8::internal::compiler::Instruction"** %603, i64 %604
  %606 = load %"class.v8::internal::compiler::Instruction"*, %"class.v8::internal::compiler::Instruction"** %605, align 8
  %607 = getelementptr inbounds %"class.v8::internal::compiler::InstructionSequence", %"class.v8::internal::compiler::InstructionSequence"* %594, i64 0, i32 1
  %608 = load %"class.v8::internal::Zone"*, %"class.v8::internal::Zone"** %607, align 8
  %609 = ptrtoint %"class.v8::internal::Zone"* %608 to i64
  %610 = getelementptr inbounds %"class.v8::internal::compiler::Instruction", %"class.v8::internal::compiler::Instruction"* %606, i64 0, i32 2, i64 %591
  %611 = load %"class.v8::internal::compiler::ParallelMove"*, %"class.v8::internal::compiler::ParallelMove"** %610, align 8
  %612 = icmp eq %"class.v8::internal::compiler::ParallelMove"* %611, null
  br i1 %612, label %613, label %630

613:                                              ; preds = %589
  %614 = getelementptr inbounds %"class.v8::internal::Zone", %"class.v8::internal::Zone"* %608, i64 0, i32 2
  %615 = load i64, i64* %614, align 8
  %616 = getelementptr inbounds %"class.v8::internal::Zone", %"class.v8::internal::Zone"* %608, i64 0, i32 3
  %617 = load i64, i64* %616, align 8
  %618 = sub i64 %617, %615
  %619 = icmp ult i64 %618, 32
  br i1 %619, label %620, label %622, !prof !2

620:                                              ; preds = %613
  %621 = call i64 @_ZN2v88internal4Zone9NewExpandEm(%"class.v8::internal::Zone"* %608, i64 32) #16
  br label %624

622:                                              ; preds = %613
  %623 = add i64 %615, 32
  store i64 %623, i64* %614, align 8
  br label %624

624:                                              ; preds = %622, %620
  %625 = phi i64 [ %621, %620 ], [ %615, %622 ]
  %626 = inttoptr i64 %625 to i8*
  %627 = inttoptr i64 %625 to %"class.v8::internal::compiler::ParallelMove"*
  %628 = getelementptr inbounds %"class.v8::internal::compiler::ParallelMove", %"class.v8::internal::compiler::ParallelMove"* %627, i64 0, i32 0, i32 0, i32 0, i32 2, i32 1
  %629 = bitcast %"struct.std::__1::__compressed_pair_elem.1208"* %628 to i64*
  call void @llvm.memset.p0i8.i64(i8* align 8 %626, i8 0, i64 24, i1 false) #16
  store i64 %609, i64* %629, align 8
  store %"class.v8::internal::compiler::ParallelMove"* %627, %"class.v8::internal::compiler::ParallelMove"** %610, align 8
  br label %630

630:                                              ; preds = %589, %624
  %631 = phi %"class.v8::internal::compiler::ParallelMove"* [ %627, %624 ], [ %611, %589 ]
  %632 = getelementptr inbounds %"class.v8::internal::compiler::ParallelMove", %"class.v8::internal::compiler::ParallelMove"* %631, i64 0, i32 0, i32 0, i32 0, i32 2, i32 1, i32 0, i32 0
  %633 = load %"class.v8::internal::Zone"*, %"class.v8::internal::Zone"** %632, align 8
  %634 = call %"class.v8::internal::compiler::MoveOperands"* @_ZN2v88internal8compiler12ParallelMove7AddMoveERKNS1_18InstructionOperandES5_PNS0_4ZoneE(%"class.v8::internal::compiler::ParallelMove"* %631, %"class.v8::internal::compiler::InstructionOperand"* nonnull dereferenceable(8) %4, %"class.v8::internal::compiler::InstructionOperand"* nonnull dereferenceable(8) %5, %"class.v8::internal::Zone"* %633) #16
  br label %635

635:                                              ; preds = %524, %511, %454, %630
  call void @llvm.lifetime.end.p0i8(i64 8, i8* nonnull %66) #16
  call void @llvm.lifetime.end.p0i8(i64 8, i8* nonnull %64) #16
  br label %636

636:                                              ; preds = %369, %342, %365, %635
  %637 = getelementptr inbounds %"class.v8::internal::compiler::RpoNumber", %"class.v8::internal::compiler::RpoNumber"* %296, i64 1
  %638 = icmp eq %"class.v8::internal::compiler::RpoNumber"* %637, %247
  br i1 %638, label %251, label %295

639:                                              ; preds = %145, %289, %168, %109
  %640 = getelementptr inbounds %"class.v8::internal::compiler::InstructionBlock"*, %"class.v8::internal::compiler::InstructionBlock"** %96, i64 1
  %641 = icmp eq %"class.v8::internal::compiler::InstructionBlock"** %640, %60
  br i1 %641, label %68, label %95

642:                                              ; preds = %721, %70
  call void @_ZN2v88internal8compiler11SpillPlacerD1Ev(%"class.v8::internal::compiler::SpillPlacer"* nonnull %6) #16
  call void @llvm.lifetime.end.p0i8(i64 56, i8* nonnull %79) #16
  call void @llvm.lifetime.end.p0i8(i64 32, i8* nonnull %7) #16
  ret void

643:                                              ; preds = %724, %86
  call void (i8*, ...) @_Z8V8_FatalPKcz(i8* getelementptr inbounds ([18 x i8], [18 x i8]* @.str.1, i64 0, i64 0), i8* getelementptr inbounds ([49 x i8], [49 x i8]* @.str.32, i64 0, i64 0)) #17
  unreachable

644:                                              ; preds = %86, %724
  %645 = phi %"class.v8::internal::compiler::TopLevelLiveRange"** [ %722, %724 ], [ %82, %86 ]
  %646 = load %"class.v8::internal::compiler::TopLevelLiveRange"*, %"class.v8::internal::compiler::TopLevelLiveRange"** %645, align 8
  %647 = icmp eq %"class.v8::internal::compiler::TopLevelLiveRange"* %646, null
  br i1 %647, label %721, label %648

648:                                              ; preds = %644
  %649 = getelementptr inbounds %"class.v8::internal::compiler::TopLevelLiveRange", %"class.v8::internal::compiler::TopLevelLiveRange"* %646, i64 0, i32 0, i32 3
  %650 = load %"class.v8::internal::compiler::UseInterval"*, %"class.v8::internal::compiler::UseInterval"** %649, align 8
  %651 = icmp eq %"class.v8::internal::compiler::UseInterval"* %650, null
  br i1 %651, label %721, label %652

652:                                              ; preds = %648
  %653 = getelementptr inbounds %"class.v8::internal::compiler::TopLevelLiveRange", %"class.v8::internal::compiler::TopLevelLiveRange"* %646, i64 0, i32 0, i32 1
  %654 = load i32, i32* %653, align 4
  %655 = and i32 %654, 96
  switch i32 %655, label %721 [
    i32 96, label %656
    i32 64, label %720
  ]

656:                                              ; preds = %652
  %657 = getelementptr inbounds %"class.v8::internal::compiler::TopLevelLiveRange", %"class.v8::internal::compiler::TopLevelLiveRange"* %646, i64 0, i32 1
  %658 = load i32, i32* %657, align 4
  %659 = load %"class.v8::internal::compiler::TopTierRegisterAllocationData"*, %"class.v8::internal::compiler::TopTierRegisterAllocationData"** %10, align 8
  %660 = sext i32 %658 to i64
  %661 = getelementptr inbounds %"class.v8::internal::compiler::TopTierRegisterAllocationData", %"class.v8::internal::compiler::TopTierRegisterAllocationData"* %659, i64 0, i32 9, i32 0, i32 0, i32 0
  %662 = load %"class.v8::internal::compiler::TopLevelLiveRange"**, %"class.v8::internal::compiler::TopLevelLiveRange"*** %661, align 8
  %663 = getelementptr inbounds %"class.v8::internal::compiler::TopLevelLiveRange"*, %"class.v8::internal::compiler::TopLevelLiveRange"** %662, i64 %660
  %664 = load %"class.v8::internal::compiler::TopLevelLiveRange"*, %"class.v8::internal::compiler::TopLevelLiveRange"** %663, align 8
  %665 = load %"class.v8::internal::compiler::LiveRangeBoundArray"*, %"class.v8::internal::compiler::LiveRangeBoundArray"** %21, align 8
  %666 = getelementptr inbounds %"class.v8::internal::compiler::LiveRangeBoundArray", %"class.v8::internal::compiler::LiveRangeBoundArray"* %665, i64 %660
  %667 = getelementptr inbounds %"class.v8::internal::compiler::LiveRangeBoundArray", %"class.v8::internal::compiler::LiveRangeBoundArray"* %665, i64 %660, i32 1
  %668 = load %"class.v8::internal::compiler::LiveRangeBound"*, %"class.v8::internal::compiler::LiveRangeBound"** %667, align 8
  %669 = icmp eq %"class.v8::internal::compiler::LiveRangeBound"* %668, null
  br i1 %669, label %670, label %719

670:                                              ; preds = %656
  %671 = load %"class.v8::internal::Zone"*, %"class.v8::internal::Zone"** %37, align 8
  %672 = getelementptr inbounds %"class.v8::internal::compiler::TopLevelLiveRange", %"class.v8::internal::compiler::TopLevelLiveRange"* %664, i64 0, i32 2
  %673 = load i32, i32* %672, align 8
  %674 = add nsw i32 %673, 1
  %675 = sext i32 %674 to i64
  %676 = mul nsw i64 %675, 24
  %677 = getelementptr inbounds %"class.v8::internal::Zone", %"class.v8::internal::Zone"* %671, i64 0, i32 2
  %678 = load i64, i64* %677, align 8
  %679 = getelementptr inbounds %"class.v8::internal::Zone", %"class.v8::internal::Zone"* %671, i64 0, i32 3
  %680 = load i64, i64* %679, align 8
  %681 = sub i64 %680, %678
  %682 = icmp ugt i64 %676, %681
  br i1 %682, label %683, label %685, !prof !2

683:                                              ; preds = %670
  %684 = call i64 @_ZN2v88internal4Zone9NewExpandEm(%"class.v8::internal::Zone"* %671, i64 %676) #16
  br label %687

685:                                              ; preds = %670
  %686 = add i64 %676, %678
  store i64 %686, i64* %677, align 8
  br label %687

687:                                              ; preds = %685, %683
  %688 = phi i64 [ %684, %683 ], [ %678, %685 ]
  %689 = inttoptr i64 %688 to %"class.v8::internal::compiler::LiveRangeBound"*
  store %"class.v8::internal::compiler::LiveRangeBound"* %689, %"class.v8::internal::compiler::LiveRangeBound"** %667, align 8
  %690 = getelementptr inbounds %"class.v8::internal::compiler::LiveRangeBoundArray", %"class.v8::internal::compiler::LiveRangeBoundArray"* %666, i64 0, i32 0
  store i64 0, i64* %690, align 8
  %691 = icmp eq %"class.v8::internal::compiler::TopLevelLiveRange"* %664, null
  br i1 %691, label %719, label %692

692:                                              ; preds = %687
  %693 = bitcast %"class.v8::internal::compiler::TopLevelLiveRange"* %664 to %"class.v8::internal::compiler::LiveRange"*
  br label %694

694:                                              ; preds = %694, %692
  %695 = phi %"class.v8::internal::compiler::LiveRange"* [ %714, %694 ], [ %693, %692 ]
  %696 = phi %"class.v8::internal::compiler::LiveRangeBound"* [ %715, %694 ], [ %689, %692 ]
  %697 = getelementptr inbounds %"class.v8::internal::compiler::LiveRange", %"class.v8::internal::compiler::LiveRange"* %695, i64 0, i32 1
  %698 = load i32, i32* %697, align 4
  %699 = trunc i32 %698 to i8
  %700 = and i8 %699, 1
  %701 = getelementptr inbounds %"class.v8::internal::compiler::LiveRangeBound", %"class.v8::internal::compiler::LiveRangeBound"* %696, i64 0, i32 0
  store %"class.v8::internal::compiler::LiveRange"* %695, %"class.v8::internal::compiler::LiveRange"** %701, align 8
  %702 = getelementptr inbounds %"class.v8::internal::compiler::LiveRange", %"class.v8::internal::compiler::LiveRange"* %695, i64 0, i32 3
  %703 = load %"class.v8::internal::compiler::UseInterval"*, %"class.v8::internal::compiler::UseInterval"** %702, align 8
  %704 = getelementptr inbounds %"class.v8::internal::compiler::UseInterval", %"class.v8::internal::compiler::UseInterval"* %703, i64 0, i32 0, i32 0
  %705 = load i32, i32* %704, align 8
  %706 = getelementptr inbounds %"class.v8::internal::compiler::LiveRangeBound", %"class.v8::internal::compiler::LiveRangeBound"* %696, i64 0, i32 1, i32 0
  store i32 %705, i32* %706, align 8
  %707 = getelementptr inbounds %"class.v8::internal::compiler::LiveRange", %"class.v8::internal::compiler::LiveRange"* %695, i64 0, i32 2
  %708 = load %"class.v8::internal::compiler::UseInterval"*, %"class.v8::internal::compiler::UseInterval"** %707, align 8
  %709 = getelementptr inbounds %"class.v8::internal::compiler::UseInterval", %"class.v8::internal::compiler::UseInterval"* %708, i64 0, i32 1, i32 0
  %710 = load i32, i32* %709, align 4
  %711 = getelementptr inbounds %"class.v8::internal::compiler::LiveRangeBound", %"class.v8::internal::compiler::LiveRangeBound"* %696, i64 0, i32 2, i32 0
  store i32 %710, i32* %711, align 4
  %712 = getelementptr inbounds %"class.v8::internal::compiler::LiveRangeBound", %"class.v8::internal::compiler::LiveRangeBound"* %696, i64 0, i32 3
  store i8 %700, i8* %712, align 8
  %713 = getelementptr inbounds %"class.v8::internal::compiler::LiveRange", %"class.v8::internal::compiler::LiveRange"* %695, i64 0, i32 6
  %714 = load %"class.v8::internal::compiler::LiveRange"*, %"class.v8::internal::compiler::LiveRange"** %713, align 8
  %715 = getelementptr inbounds %"class.v8::internal::compiler::LiveRangeBound", %"class.v8::internal::compiler::LiveRangeBound"* %696, i64 1
  %716 = load i64, i64* %690, align 8
  %717 = add i64 %716, 1
  store i64 %717, i64* %690, align 8
  %718 = icmp eq %"class.v8::internal::compiler::LiveRange"* %714, null
  br i1 %718, label %719, label %694

719:                                              ; preds = %694, %656, %687
  call void @_ZN2v88internal8compiler18LiveRangeConnector28CommitSpillsInDeferredBlocksEPNS1_17TopLevelLiveRangeEPNS1_19LiveRangeBoundArrayEPNS0_4ZoneE(%"class.v8::internal::compiler::LiveRangeConnector"* %0, %"class.v8::internal::compiler::TopLevelLiveRange"* nonnull %646, %"class.v8::internal::compiler::LiveRangeBoundArray"* %666, %"class.v8::internal::Zone"* %1)
  br label %721

720:                                              ; preds = %652
  call void @_ZN2v88internal8compiler11SpillPlacer3AddEPNS1_17TopLevelLiveRangeE(%"class.v8::internal::compiler::SpillPlacer"* nonnull %6, %"class.v8::internal::compiler::TopLevelLiveRange"* nonnull %646) #16
  br label %721

721:                                              ; preds = %652, %719, %720, %644, %648
  %722 = getelementptr inbounds %"class.v8::internal::compiler::TopLevelLiveRange"*, %"class.v8::internal::compiler::TopLevelLiveRange"** %645, i64 1
  %723 = icmp eq %"class.v8::internal::compiler::TopLevelLiveRange"** %722, %84
  br i1 %723, label %642, label %724

724:                                              ; preds = %721
  %725 = load %"class.v8::internal::compiler::TopTierRegisterAllocationData"*, %"class.v8::internal::compiler::TopTierRegisterAllocationData"** %8, align 8
  %726 = getelementptr inbounds %"class.v8::internal::compiler::TopTierRegisterAllocationData", %"class.v8::internal::compiler::TopTierRegisterAllocationData"* %725, i64 0, i32 9, i32 0
  %727 = getelementptr inbounds %"class.v8::internal::compiler::TopTierRegisterAllocationData", %"class.v8::internal::compiler::TopTierRegisterAllocationData"* %725, i64 0, i32 9, i32 0, i32 0, i32 1
  %728 = bitcast %"class.v8::internal::compiler::TopLevelLiveRange"*** %727 to i64*
  %729 = load i64, i64* %728, align 8
  %730 = bitcast %"class.std::__1::vector"* %726 to i64*
  %731 = load i64, i64* %730, align 8
  %732 = sub i64 %729, %731
  %733 = icmp eq i64 %78, %732
  br i1 %733, label %644, label %643, !prof !80
}

; Function Attrs: nounwind ssp uwtable
define hidden i32 @_ZN2v88internal8compiler18LiveRangeConnector18ResolveControlFlowEPKNS1_16InstructionBlockERKNS1_18InstructionOperandES5_S8_(%"class.v8::internal::compiler::LiveRangeConnector"* nocapture readonly, %"class.v8::internal::compiler::InstructionBlock"* nocapture readonly, %"class.v8::internal::compiler::InstructionOperand"* dereferenceable(8), %"class.v8::internal::compiler::InstructionBlock"* nocapture readonly, %"class.v8::internal::compiler::InstructionOperand"* dereferenceable(8)) local_unnamed_addr #0 align 2 {
  %6 = getelementptr inbounds %"class.v8::internal::compiler::InstructionBlock", %"class.v8::internal::compiler::InstructionBlock"* %1, i64 0, i32 1, i32 0
  %7 = getelementptr inbounds %"class.v8::internal::compiler::InstructionBlock", %"class.v8::internal::compiler::InstructionBlock"* %1, i64 0, i32 1, i32 0, i32 0, i32 1
  %8 = bitcast %"class.v8::internal::compiler::RpoNumber"** %7 to i64*
  %9 = load i64, i64* %8, align 8
  %10 = bitcast %"class.std::__1::vector.38"* %6 to i64*
  %11 = load i64, i64* %10, align 8
  %12 = sub i64 %9, %11
  %13 = icmp eq i64 %12, 4
  br i1 %13, label %14, label %17

14:                                               ; preds = %5
  %15 = getelementptr inbounds %"class.v8::internal::compiler::InstructionBlock", %"class.v8::internal::compiler::InstructionBlock"* %1, i64 0, i32 8
  %16 = load i32, i32* %15, align 4
  br label %21

17:                                               ; preds = %5
  %18 = getelementptr inbounds %"class.v8::internal::compiler::InstructionBlock", %"class.v8::internal::compiler::InstructionBlock"* %3, i64 0, i32 9
  %19 = load i32, i32* %18, align 8
  %20 = add nsw i32 %19, -1
  br label %21

21:                                               ; preds = %17, %14
  %22 = phi i32 [ %16, %14 ], [ %20, %17 ]
  %23 = phi i64 [ 0, %14 ], [ 1, %17 ]
  %24 = getelementptr inbounds %"class.v8::internal::compiler::LiveRangeConnector", %"class.v8::internal::compiler::LiveRangeConnector"* %0, i64 0, i32 0
  %25 = load %"class.v8::internal::compiler::TopTierRegisterAllocationData"*, %"class.v8::internal::compiler::TopTierRegisterAllocationData"** %24, align 8
  %26 = getelementptr inbounds %"class.v8::internal::compiler::TopTierRegisterAllocationData", %"class.v8::internal::compiler::TopTierRegisterAllocationData"* %25, i64 0, i32 3
  %27 = load %"class.v8::internal::compiler::InstructionSequence"*, %"class.v8::internal::compiler::InstructionSequence"** %26, align 8
  %28 = sext i32 %22 to i64
  %29 = getelementptr inbounds %"class.v8::internal::compiler::InstructionSequence", %"class.v8::internal::compiler::InstructionSequence"* %27, i64 0, i32 8, i32 0, i32 0, i32 1
  %30 = load i64, i64* %29, align 8
  %31 = add i64 %30, %28
  %32 = getelementptr inbounds %"class.v8::internal::compiler::InstructionSequence", %"class.v8::internal::compiler::InstructionSequence"* %27, i64 0, i32 8, i32 0, i32 0, i32 0, i32 1
  %33 = load %"class.v8::internal::compiler::Instruction"***, %"class.v8::internal::compiler::Instruction"**** %32, align 8
  %34 = lshr i64 %31, 9
  %35 = getelementptr inbounds %"class.v8::internal::compiler::Instruction"**, %"class.v8::internal::compiler::Instruction"*** %33, i64 %34
  %36 = load %"class.v8::internal::compiler::Instruction"**, %"class.v8::internal::compiler::Instruction"*** %35, align 8
  %37 = and i64 %31, 511
  %38 = getelementptr inbounds %"class.v8::internal::compiler::Instruction"*, %"class.v8::internal::compiler::Instruction"** %36, i64 %37
  %39 = load %"class.v8::internal::compiler::Instruction"*, %"class.v8::internal::compiler::Instruction"** %38, align 8
  %40 = getelementptr inbounds %"class.v8::internal::compiler::InstructionSequence", %"class.v8::internal::compiler::InstructionSequence"* %27, i64 0, i32 1
  %41 = load %"class.v8::internal::Zone"*, %"class.v8::internal::Zone"** %40, align 8
  %42 = ptrtoint %"class.v8::internal::Zone"* %41 to i64
  %43 = getelementptr inbounds %"class.v8::internal::compiler::Instruction", %"class.v8::internal::compiler::Instruction"* %39, i64 0, i32 2, i64 %23
  %44 = load %"class.v8::internal::compiler::ParallelMove"*, %"class.v8::internal::compiler::ParallelMove"** %43, align 8
  %45 = icmp eq %"class.v8::internal::compiler::ParallelMove"* %44, null
  br i1 %45, label %46, label %63

46:                                               ; preds = %21
  %47 = getelementptr inbounds %"class.v8::internal::Zone", %"class.v8::internal::Zone"* %41, i64 0, i32 2
  %48 = load i64, i64* %47, align 8
  %49 = getelementptr inbounds %"class.v8::internal::Zone", %"class.v8::internal::Zone"* %41, i64 0, i32 3
  %50 = load i64, i64* %49, align 8
  %51 = sub i64 %50, %48
  %52 = icmp ult i64 %51, 32
  br i1 %52, label %53, label %55, !prof !2

53:                                               ; preds = %46
  %54 = tail call i64 @_ZN2v88internal4Zone9NewExpandEm(%"class.v8::internal::Zone"* %41, i64 32) #16
  br label %57

55:                                               ; preds = %46
  %56 = add i64 %48, 32
  store i64 %56, i64* %47, align 8
  br label %57

57:                                               ; preds = %55, %53
  %58 = phi i64 [ %54, %53 ], [ %48, %55 ]
  %59 = inttoptr i64 %58 to i8*
  %60 = inttoptr i64 %58 to %"class.v8::internal::compiler::ParallelMove"*
  %61 = getelementptr inbounds %"class.v8::internal::compiler::ParallelMove", %"class.v8::internal::compiler::ParallelMove"* %60, i64 0, i32 0, i32 0, i32 0, i32 2, i32 1
  %62 = bitcast %"struct.std::__1::__compressed_pair_elem.1208"* %61 to i64*
  tail call void @llvm.memset.p0i8.i64(i8* align 8 %59, i8 0, i64 24, i1 false) #16
  store i64 %42, i64* %62, align 8
  store %"class.v8::internal::compiler::ParallelMove"* %60, %"class.v8::internal::compiler::ParallelMove"** %43, align 8
  br label %63

63:                                               ; preds = %21, %57
  %64 = phi %"class.v8::internal::compiler::ParallelMove"* [ %60, %57 ], [ %44, %21 ]
  %65 = getelementptr inbounds %"class.v8::internal::compiler::ParallelMove", %"class.v8::internal::compiler::ParallelMove"* %64, i64 0, i32 0, i32 0, i32 0, i32 2, i32 1, i32 0, i32 0
  %66 = load %"class.v8::internal::Zone"*, %"class.v8::internal::Zone"** %65, align 8
  %67 = tail call %"class.v8::internal::compiler::MoveOperands"* @_ZN2v88internal8compiler12ParallelMove7AddMoveERKNS1_18InstructionOperandES5_PNS0_4ZoneE(%"class.v8::internal::compiler::ParallelMove"* %64, %"class.v8::internal::compiler::InstructionOperand"* dereferenceable(8) %4, %"class.v8::internal::compiler::InstructionOperand"* dereferenceable(8) %2, %"class.v8::internal::Zone"* %66) #16
  ret i32 %22
}

declare void @_ZN2v88internal8compiler11SpillPlacerC1EPNS1_15LiveRangeFinderEPNS1_29TopTierRegisterAllocationDataEPNS0_4ZoneE(%"class.v8::internal::compiler::SpillPlacer"*, %"class.v8::internal::compiler::LiveRangeFinder"*, %"class.v8::internal::compiler::TopTierRegisterAllocationData"*, %"class.v8::internal::Zone"*) unnamed_addr #6

; Function Attrs: nounwind ssp uwtable
define hidden void @_ZN2v88internal8compiler18LiveRangeConnector28CommitSpillsInDeferredBlocksEPNS1_17TopLevelLiveRangeEPNS1_19LiveRangeBoundArrayEPNS0_4ZoneE(%"class.v8::internal::compiler::LiveRangeConnector"* nocapture readonly, %"class.v8::internal::compiler::TopLevelLiveRange"* readonly, %"class.v8::internal::compiler::LiveRangeBoundArray"* nocapture readonly, %"class.v8::internal::Zone"*) local_unnamed_addr #0 align 2 {
  %5 = alloca %"class.v8::internal::ZoneDeque.1459", align 8
  %6 = alloca %"class.v8::internal::compiler::InstructionOperand", align 8
  %7 = alloca %"class.v8::internal::ZoneQueue", align 8
  %8 = alloca %"class.v8::internal::ZoneSet.1471", align 8
  %9 = alloca %"class.v8::internal::compiler::InstructionOperand", align 8
  %10 = getelementptr inbounds %"class.v8::internal::compiler::LiveRangeConnector", %"class.v8::internal::compiler::LiveRangeConnector"* %0, i64 0, i32 0
  %11 = load %"class.v8::internal::compiler::TopTierRegisterAllocationData"*, %"class.v8::internal::compiler::TopTierRegisterAllocationData"** %10, align 8
  %12 = getelementptr inbounds %"class.v8::internal::compiler::TopTierRegisterAllocationData", %"class.v8::internal::compiler::TopTierRegisterAllocationData"* %11, i64 0, i32 3
  %13 = load %"class.v8::internal::compiler::InstructionSequence"*, %"class.v8::internal::compiler::InstructionSequence"** %12, align 8
  %14 = bitcast %"class.v8::internal::compiler::InstructionOperand"* %6 to i8*
  call void @llvm.lifetime.start.p0i8(i64 8, i8* nonnull %14) #16
  %15 = getelementptr inbounds %"class.v8::internal::compiler::TopLevelLiveRange", %"class.v8::internal::compiler::TopLevelLiveRange"* %1, i64 0, i32 3
  %16 = bitcast %union.anon* %15 to %"class.v8::internal::compiler::SpillRange"**
  %17 = load %"class.v8::internal::compiler::SpillRange"*, %"class.v8::internal::compiler::SpillRange"** %16, align 8
  %18 = getelementptr inbounds %"class.v8::internal::compiler::SpillRange", %"class.v8::internal::compiler::SpillRange"* %17, i64 0, i32 3
  %19 = load i32, i32* %18, align 4
  %20 = getelementptr inbounds %"class.v8::internal::compiler::TopLevelLiveRange", %"class.v8::internal::compiler::TopLevelLiveRange"* %1, i64 0, i32 0, i32 1
  %21 = load i32, i32* %20, align 4
  %22 = lshr i32 %21, 8
  %23 = and i32 %22, 8160
  %24 = zext i32 %19 to i64
  %25 = shl i64 %24, 35
  %26 = or i32 %23, 8
  %27 = zext i32 %26 to i64
  %28 = or i64 %25, %27
  %29 = or i64 %28, 5
  %30 = getelementptr inbounds %"class.v8::internal::compiler::InstructionOperand", %"class.v8::internal::compiler::InstructionOperand"* %6, i64 0, i32 0
  store i64 %29, i64* %30, align 8
  %31 = getelementptr inbounds %"class.v8::internal::compiler::TopTierRegisterAllocationData", %"class.v8::internal::compiler::TopTierRegisterAllocationData"* %11, i64 0, i32 23, i32 0
  %32 = load i32, i32* %31, align 4
  %33 = and i32 %32, 1
  %34 = icmp eq i32 %33, 0
  br i1 %34, label %38, label %35

35:                                               ; preds = %4
  %36 = getelementptr inbounds %"class.v8::internal::compiler::TopLevelLiveRange", %"class.v8::internal::compiler::TopLevelLiveRange"* %1, i64 0, i32 1
  %37 = load i32, i32* %36, align 4
  tail call void (i8*, ...) @_ZN2v88internal6PrintFEPKcz(i8* getelementptr inbounds ([56 x i8], [56 x i8]* @.str.100, i64 0, i64 0), i32 %37) #16
  br label %38

38:                                               ; preds = %4, %35
  %39 = icmp eq %"class.v8::internal::compiler::TopLevelLiveRange"* %1, null
  br i1 %39, label %44, label %40

40:                                               ; preds = %38
  %41 = bitcast %"class.v8::internal::compiler::TopLevelLiveRange"* %1 to %"class.v8::internal::compiler::LiveRange"*
  %42 = getelementptr inbounds %"class.v8::internal::compiler::TopLevelLiveRange", %"class.v8::internal::compiler::TopLevelLiveRange"* %1, i64 0, i32 4
  %43 = bitcast %union.anon.36* %42 to %"class.v8::internal::BitVector"**
  br label %129

44:                                               ; preds = %136, %38
  %45 = bitcast %"class.v8::internal::ZoneQueue"* %7 to i8*
  call void @llvm.lifetime.start.p0i8(i64 80, i8* nonnull %45) #16
  %46 = bitcast %"class.v8::internal::ZoneDeque.1459"* %5 to i8*
  call void @llvm.lifetime.start.p0i8(i64 80, i8* nonnull %46) #16
  %47 = ptrtoint %"class.v8::internal::Zone"* %3 to i64
  call void @llvm.memset.p0i8.i64(i8* nonnull align 8 %46, i8 0, i64 32, i1 false) #16
  %48 = getelementptr inbounds %"class.v8::internal::ZoneDeque.1459", %"class.v8::internal::ZoneDeque.1459"* %5, i64 0, i32 0, i32 0, i32 0, i32 3, i32 1
  %49 = bitcast %"struct.std::__1::__compressed_pair_elem.1465"* %48 to i64*
  store i64 %47, i64* %49, align 8
  %50 = getelementptr inbounds %"class.v8::internal::ZoneDeque.1459", %"class.v8::internal::ZoneDeque.1459"* %5, i64 0, i32 0, i32 0, i32 0, i32 3, i32 1, i32 0, i32 1
  %51 = bitcast %"struct.v8::internal::RecyclingZoneAllocator<int *>::FreeBlock"** %50 to i8*
  call void @llvm.memset.p0i8.i64(i8* align 8 %51, i8 0, i64 24, i1 false) #16
  %52 = getelementptr inbounds %"class.v8::internal::ZoneDeque.1459", %"class.v8::internal::ZoneDeque.1459"* %5, i64 0, i32 0, i32 0, i32 2, i32 1
  %53 = bitcast %"struct.std::__1::__compressed_pair_elem.1469"* %52 to i64*
  store i64 %47, i64* %53, align 8
  %54 = getelementptr inbounds %"class.v8::internal::ZoneDeque.1459", %"class.v8::internal::ZoneDeque.1459"* %5, i64 0, i32 0, i32 0, i32 2, i32 1, i32 0, i32 1
  store %"struct.v8::internal::RecyclingZoneAllocator<int>::FreeBlock"* null, %"struct.v8::internal::RecyclingZoneAllocator<int>::FreeBlock"** %54, align 8
  %55 = getelementptr inbounds %"class.v8::internal::ZoneQueue", %"class.v8::internal::ZoneQueue"* %7, i64 0, i32 0, i32 0, i32 0, i32 0, i32 0, i32 3
  %56 = getelementptr inbounds %"class.v8::internal::ZoneDeque.1459", %"class.v8::internal::ZoneDeque.1459"* %5, i64 0, i32 0, i32 0, i32 0, i32 3
  %57 = bitcast %"class.std::__1::__compressed_pair.1463"* %55 to i8*
  %58 = bitcast %"class.std::__1::__compressed_pair.1463"* %56 to i8*
  call void @llvm.memset.p0i8.i64(i8* nonnull align 8 %45, i8 0, i64 24, i1 false) #16
  call void @llvm.memcpy.p0i8.p0i8.i64(i8* align 8 %57, i8* align 8 %58, i64 24, i1 false) #16
  call void @llvm.memset.p0i8.i64(i8* nonnull align 8 %46, i8 0, i64 32, i1 false) #16
  %59 = getelementptr inbounds %"class.v8::internal::ZoneQueue", %"class.v8::internal::ZoneQueue"* %7, i64 0, i32 0, i32 0, i32 0, i32 0, i32 1
  %60 = getelementptr inbounds %"class.v8::internal::ZoneDeque.1459", %"class.v8::internal::ZoneDeque.1459"* %5, i64 0, i32 0, i32 0, i32 1
  store i64 0, i64* %59, align 8
  %61 = getelementptr inbounds %"class.v8::internal::ZoneQueue", %"class.v8::internal::ZoneQueue"* %7, i64 0, i32 0, i32 0, i32 0, i32 0, i32 2
  %62 = getelementptr inbounds %"class.v8::internal::ZoneDeque.1459", %"class.v8::internal::ZoneDeque.1459"* %5, i64 0, i32 0, i32 0, i32 2
  %63 = bitcast %"class.std::__1::__compressed_pair.1468"* %61 to i8*
  %64 = bitcast %"class.std::__1::__compressed_pair.1468"* %62 to i8*
  call void @llvm.memcpy.p0i8.p0i8.i64(i8* align 8 %63, i8* align 8 %64, i64 24, i1 false) #16
  %65 = bitcast i64* %60 to i8*
  call void @llvm.memset.p0i8.i64(i8* align 8 %65, i8 0, i64 16, i1 false) #16
  %66 = getelementptr inbounds %"class.v8::internal::ZoneDeque.1459", %"class.v8::internal::ZoneDeque.1459"* %5, i64 0, i32 0, i32 0
  call void @_ZNSt3__112__deque_baseIiN2v88internal22RecyclingZoneAllocatorIiEEED2Ev(%"class.std::__1::__deque_base.1461"* nonnull %66) #16
  call void @llvm.lifetime.end.p0i8(i64 80, i8* nonnull %46) #16
  %67 = getelementptr inbounds %"class.v8::internal::compiler::TopLevelLiveRange", %"class.v8::internal::compiler::TopLevelLiveRange"* %1, i64 0, i32 4
  %68 = bitcast %union.anon.36* %67 to %"class.v8::internal::BitVector"**
  %69 = load %"class.v8::internal::BitVector"*, %"class.v8::internal::BitVector"** %68, align 8
  %70 = getelementptr inbounds %"class.v8::internal::BitVector", %"class.v8::internal::BitVector"* %69, i64 0, i32 1
  %71 = load i32, i32* %70, align 4
  %72 = icmp eq i32 %71, 1
  %73 = getelementptr inbounds %"class.v8::internal::BitVector", %"class.v8::internal::BitVector"* %69, i64 0, i32 2
  br i1 %72, label %74, label %76

74:                                               ; preds = %44
  %75 = bitcast %"union.v8::internal::BitVector::DataStorage"* %73 to i64*
  br label %79

76:                                               ; preds = %44
  %77 = getelementptr inbounds %"union.v8::internal::BitVector::DataStorage", %"union.v8::internal::BitVector::DataStorage"* %73, i64 0, i32 0
  %78 = load i64*, i64** %77, align 8
  br label %79

79:                                               ; preds = %76, %74
  %80 = phi i64* [ %75, %74 ], [ %78, %76 ]
  %81 = load i64, i64* %80, align 8
  %82 = icmp eq i64 %81, 0
  br i1 %82, label %83, label %106

83:                                               ; preds = %79
  %84 = sext i32 %71 to i64
  %85 = icmp sgt i32 %71, 1
  br i1 %85, label %86, label %115

86:                                               ; preds = %83
  %87 = getelementptr inbounds %"class.v8::internal::BitVector", %"class.v8::internal::BitVector"* %69, i64 0, i32 2, i32 0
  %88 = load i64*, i64** %87, align 8
  %89 = getelementptr inbounds i64, i64* %88, i64 1
  %90 = load i64, i64* %89, align 8
  %91 = icmp eq i64 %90, 0
  br i1 %91, label %92, label %102

92:                                               ; preds = %86, %96
  %93 = phi i64 [ %94, %96 ], [ 1, %86 ]
  %94 = add nuw nsw i64 %93, 1
  %95 = icmp eq i64 %94, %84
  br i1 %95, label %184, label %96

96:                                               ; preds = %92
  %97 = getelementptr inbounds i64, i64* %88, i64 %94
  %98 = load i64, i64* %97, align 8
  %99 = icmp eq i64 %98, 0
  br i1 %99, label %92, label %100

100:                                              ; preds = %96
  %101 = trunc i64 %94 to i32
  br label %102

102:                                              ; preds = %100, %86
  %103 = phi i32 [ %101, %100 ], [ 1, %86 ]
  %104 = phi i64 [ %98, %100 ], [ %90, %86 ]
  %105 = shl i32 %103, 6
  br label %106

106:                                              ; preds = %102, %79
  %107 = phi i32 [ 0, %79 ], [ %103, %102 ]
  %108 = phi i32 [ 0, %79 ], [ %105, %102 ]
  %109 = phi i64 [ %81, %79 ], [ %104, %102 ]
  %110 = call i64 @llvm.cttz.i64(i64 %109, i1 true) #16, !range !79
  %111 = trunc i64 %110 to i32
  %112 = or i32 %108, %111
  %113 = lshr i64 %109, %110
  %114 = lshr i64 %113, 1
  br label %115

115:                                              ; preds = %83, %106
  %116 = phi i32 [ %107, %106 ], [ 1, %83 ]
  %117 = phi i64 [ %114, %106 ], [ 0, %83 ]
  %118 = phi i32 [ %112, %106 ], [ 0, %83 ]
  %119 = icmp slt i32 %116, %71
  br i1 %119, label %120, label %184

120:                                              ; preds = %115
  %121 = getelementptr inbounds %"class.v8::internal::ZoneQueue", %"class.v8::internal::ZoneQueue"* %7, i64 0, i32 0, i32 0, i32 0, i32 0, i32 0, i32 2
  %122 = bitcast i32*** %121 to i64*
  %123 = getelementptr inbounds %"class.v8::internal::ZoneQueue", %"class.v8::internal::ZoneQueue"* %7, i64 0, i32 0, i32 0, i32 0, i32 0, i32 0, i32 1
  %124 = bitcast i32*** %123 to i64*
  %125 = getelementptr inbounds %"class.v8::internal::ZoneQueue", %"class.v8::internal::ZoneQueue"* %7, i64 0, i32 0, i32 0, i32 0, i32 0, i32 2, i32 0, i32 0
  %126 = getelementptr inbounds %"class.v8::internal::ZoneQueue", %"class.v8::internal::ZoneQueue"* %7, i64 0, i32 0, i32 0, i32 0
  %127 = getelementptr inbounds %"class.v8::internal::BitVector", %"class.v8::internal::BitVector"* %69, i64 0, i32 2, i32 0
  %128 = load i64, i64* %125, align 8
  br label %247

129:                                              ; preds = %40, %136
  %130 = phi %"class.v8::internal::compiler::LiveRange"* [ %41, %40 ], [ %138, %136 ]
  %131 = getelementptr inbounds %"class.v8::internal::compiler::LiveRange", %"class.v8::internal::compiler::LiveRange"* %130, i64 0, i32 4
  %132 = load %"class.v8::internal::compiler::UsePosition"*, %"class.v8::internal::compiler::UsePosition"** %131, align 8
  %133 = icmp eq %"class.v8::internal::compiler::UsePosition"* %132, null
  br i1 %133, label %136, label %134

134:                                              ; preds = %129
  %135 = getelementptr inbounds %"class.v8::internal::compiler::LiveRange", %"class.v8::internal::compiler::LiveRange"* %130, i64 0, i32 1
  br label %140

136:                                              ; preds = %178, %129
  %137 = getelementptr inbounds %"class.v8::internal::compiler::LiveRange", %"class.v8::internal::compiler::LiveRange"* %130, i64 0, i32 6
  %138 = load %"class.v8::internal::compiler::LiveRange"*, %"class.v8::internal::compiler::LiveRange"** %137, align 8
  %139 = icmp eq %"class.v8::internal::compiler::LiveRange"* %138, null
  br i1 %139, label %44, label %129

140:                                              ; preds = %134, %178
  %141 = phi %"class.v8::internal::compiler::UsePosition"* [ %132, %134 ], [ %180, %178 ]
  %142 = getelementptr inbounds %"class.v8::internal::compiler::UsePosition", %"class.v8::internal::compiler::UsePosition"* %141, i64 0, i32 4
  %143 = load i32, i32* %142, align 4
  %144 = and i32 %143, 3
  %145 = icmp eq i32 %144, 3
  br i1 %145, label %150, label %146

146:                                              ; preds = %140
  %147 = load i32, i32* %135, align 4
  %148 = and i32 %147, 1
  %149 = icmp eq i32 %148, 0
  br i1 %149, label %178, label %150

150:                                              ; preds = %146, %140
  %151 = getelementptr inbounds %"class.v8::internal::compiler::UsePosition", %"class.v8::internal::compiler::UsePosition"* %141, i64 0, i32 3, i32 0
  %152 = load i32, i32* %151, align 8
  %153 = sdiv i32 %152, 4
  %154 = tail call %"class.v8::internal::compiler::InstructionBlock"* @_ZNK2v88internal8compiler19InstructionSequence19GetInstructionBlockEi(%"class.v8::internal::compiler::InstructionSequence"* %13, i32 %153) #16
  %155 = getelementptr inbounds %"class.v8::internal::compiler::InstructionBlock", %"class.v8::internal::compiler::InstructionBlock"* %154, i64 0, i32 4, i32 0
  %156 = load i32, i32* %155, align 4
  %157 = load %"class.v8::internal::BitVector"*, %"class.v8::internal::BitVector"** %43, align 8
  %158 = getelementptr inbounds %"class.v8::internal::BitVector", %"class.v8::internal::BitVector"* %157, i64 0, i32 1
  %159 = load i32, i32* %158, align 4
  %160 = icmp eq i32 %159, 1
  br i1 %160, label %161, label %164

161:                                              ; preds = %150
  %162 = getelementptr inbounds %"class.v8::internal::BitVector", %"class.v8::internal::BitVector"* %157, i64 0, i32 2
  %163 = bitcast %"union.v8::internal::BitVector::DataStorage"* %162 to i64*
  br label %171

164:                                              ; preds = %150
  %165 = srem i32 %156, 64
  %166 = getelementptr inbounds %"class.v8::internal::BitVector", %"class.v8::internal::BitVector"* %157, i64 0, i32 2, i32 0
  %167 = load i64*, i64** %166, align 8
  %168 = sdiv i32 %156, 64
  %169 = sext i32 %168 to i64
  %170 = getelementptr inbounds i64, i64* %167, i64 %169
  br label %171

171:                                              ; preds = %161, %164
  %172 = phi i64* [ %170, %164 ], [ %163, %161 ]
  %173 = phi i32 [ %165, %164 ], [ %156, %161 ]
  %174 = zext i32 %173 to i64
  %175 = shl i64 1, %174
  %176 = load i64, i64* %172, align 8
  %177 = or i64 %176, %175
  store i64 %177, i64* %172, align 8
  br label %178

178:                                              ; preds = %171, %146
  %179 = getelementptr inbounds %"class.v8::internal::compiler::UsePosition", %"class.v8::internal::compiler::UsePosition"* %141, i64 0, i32 2
  %180 = load %"class.v8::internal::compiler::UsePosition"*, %"class.v8::internal::compiler::UsePosition"** %179, align 8
  %181 = icmp eq %"class.v8::internal::compiler::UsePosition"* %180, null
  br i1 %181, label %136, label %140

182:                                              ; preds = %322
  %183 = load %"class.v8::internal::BitVector"*, %"class.v8::internal::BitVector"** %68, align 8
  br label %184

184:                                              ; preds = %92, %182, %115
  %185 = phi %"class.v8::internal::BitVector"* [ %183, %182 ], [ %69, %115 ], [ %69, %92 ]
  %186 = bitcast %"class.v8::internal::ZoneSet.1471"* %8 to i8*
  call void @llvm.lifetime.start.p0i8(i64 32, i8* nonnull %186) #16
  %187 = getelementptr inbounds %"class.v8::internal::ZoneSet.1471", %"class.v8::internal::ZoneSet.1471"* %8, i64 0, i32 0, i32 0, i32 0
  %188 = getelementptr inbounds %"class.v8::internal::ZoneSet.1471", %"class.v8::internal::ZoneSet.1471"* %8, i64 0, i32 0, i32 0, i32 1, i32 1
  %189 = bitcast %"struct.std::__1::__compressed_pair_elem.1475"* %188 to i64*
  %190 = getelementptr inbounds %"class.v8::internal::ZoneSet.1471", %"class.v8::internal::ZoneSet.1471"* %8, i64 0, i32 0, i32 0, i32 1
  %191 = bitcast %"class.std::__1::__compressed_pair.1474"* %190 to i64*
  store i64 0, i64* %191, align 8
  store i64 %47, i64* %189, align 8
  %192 = getelementptr inbounds %"class.v8::internal::ZoneSet.1471", %"class.v8::internal::ZoneSet.1471"* %8, i64 0, i32 0, i32 0, i32 2, i32 0, i32 0
  store i64 0, i64* %192, align 8
  %193 = getelementptr inbounds %"class.v8::internal::ZoneSet.1471", %"class.v8::internal::ZoneSet.1471"* %8, i64 0, i32 0, i32 0, i32 1, i32 0, i32 0
  store %"class.std::__1::__tree_end_node"* %193, %"class.std::__1::__tree_end_node"** %187, align 8
  %194 = getelementptr inbounds %"class.v8::internal::BitVector", %"class.v8::internal::BitVector"* %185, i64 0, i32 0
  %195 = load i32, i32* %194, align 8
  %196 = icmp slt i32 %195, 65
  br i1 %196, label %217, label %197

197:                                              ; preds = %184
  %198 = add nsw i32 %195, -1
  %199 = sdiv i32 %198, 64
  %200 = add nuw nsw i32 %199, 1
  %201 = sext i32 %200 to i64
  %202 = shl nsw i64 %201, 3
  %203 = getelementptr inbounds %"class.v8::internal::Zone", %"class.v8::internal::Zone"* %3, i64 0, i32 2
  %204 = load i64, i64* %203, align 8
  %205 = getelementptr inbounds %"class.v8::internal::Zone", %"class.v8::internal::Zone"* %3, i64 0, i32 3
  %206 = load i64, i64* %205, align 8
  %207 = sub i64 %206, %204
  %208 = icmp ugt i64 %202, %207
  br i1 %208, label %209, label %211, !prof !2

209:                                              ; preds = %197
  %210 = call i64 @_ZN2v88internal4Zone9NewExpandEm(%"class.v8::internal::Zone"* %3, i64 %202) #16
  br label %213

211:                                              ; preds = %197
  %212 = add i64 %204, %202
  store i64 %212, i64* %203, align 8
  br label %213

213:                                              ; preds = %211, %209
  %214 = phi i64 [ %210, %209 ], [ %204, %211 ]
  %215 = inttoptr i64 %214 to i8*
  %216 = shl nuw nsw i64 %201, 3
  call void @llvm.memset.p0i8.i64(i8* align 8 %215, i8 0, i64 %216, i1 false)
  br label %217

217:                                              ; preds = %213, %184
  %218 = phi i32 [ 1, %184 ], [ %200, %213 ]
  %219 = phi i64 [ 0, %184 ], [ %214, %213 ]
  %220 = getelementptr inbounds %"class.v8::internal::ZoneQueue", %"class.v8::internal::ZoneQueue"* %7, i64 0, i32 0, i32 0, i32 0, i32 0, i32 2, i32 0, i32 0
  %221 = load i64, i64* %220, align 8
  %222 = icmp eq i64 %221, 0
  br i1 %222, label %223, label %225

223:                                              ; preds = %217
  %224 = bitcast %"class.std::__1::__tree_end_node"* %193 to %"class.std::__1::__tree_node.1538"**
  br label %733

225:                                              ; preds = %217
  %226 = getelementptr inbounds %"class.v8::internal::ZoneQueue", %"class.v8::internal::ZoneQueue"* %7, i64 0, i32 0, i32 0, i32 0, i32 0, i32 0, i32 1
  %227 = getelementptr inbounds %"class.v8::internal::ZoneQueue", %"class.v8::internal::ZoneQueue"* %7, i64 0, i32 0, i32 0, i32 0, i32 0, i32 2, i32 1, i32 0, i32 1
  %228 = bitcast %"struct.v8::internal::RecyclingZoneAllocator<int>::FreeBlock"** %227 to i64*
  %229 = bitcast %"struct.v8::internal::RecyclingZoneAllocator<int>::FreeBlock"** %227 to i32**
  %230 = icmp eq i32 %218, 1
  %231 = getelementptr inbounds %"class.v8::internal::compiler::InstructionSequence", %"class.v8::internal::compiler::InstructionSequence"* %13, i64 0, i32 2
  %232 = bitcast %"class.v8::internal::ZoneVector.1170"** %231 to %"class.std::__1::vector.1171"**
  %233 = getelementptr inbounds %"class.v8::internal::ZoneQueue", %"class.v8::internal::ZoneQueue"* %7, i64 0, i32 0, i32 0, i32 0, i32 0, i32 0, i32 2
  %234 = bitcast i32*** %233 to i64*
  %235 = bitcast i32*** %226 to i64*
  %236 = getelementptr inbounds %"class.v8::internal::ZoneQueue", %"class.v8::internal::ZoneQueue"* %7, i64 0, i32 0, i32 0, i32 0
  %237 = getelementptr inbounds %"class.v8::internal::compiler::LiveRangeBoundArray", %"class.v8::internal::compiler::LiveRangeBoundArray"* %2, i64 0, i32 0
  %238 = getelementptr inbounds %"class.v8::internal::compiler::LiveRangeBoundArray", %"class.v8::internal::compiler::LiveRangeBoundArray"* %2, i64 0, i32 1
  %239 = bitcast %"class.v8::internal::compiler::InstructionOperand"* %9 to i8*
  %240 = getelementptr inbounds %"class.v8::internal::compiler::InstructionOperand", %"class.v8::internal::compiler::InstructionOperand"* %9, i64 0, i32 0
  %241 = getelementptr inbounds %"class.v8::internal::compiler::TopLevelLiveRange", %"class.v8::internal::compiler::TopLevelLiveRange"* %1, i64 0, i32 1
  %242 = bitcast %"class.std::__1::__tree_end_node"* %193 to %"class.std::__1::__tree_node.1538"**
  %243 = getelementptr inbounds %"class.v8::internal::ZoneSet.1471", %"class.v8::internal::ZoneSet.1471"* %8, i64 0, i32 0, i32 0, i32 1, i32 0, i32 0, i32 0
  %244 = getelementptr inbounds %"class.std::__1::__tree_end_node", %"class.std::__1::__tree_end_node"* %193, i64 0, i32 0
  %245 = getelementptr inbounds %"class.v8::internal::ZoneSet.1471", %"class.v8::internal::ZoneSet.1471"* %8, i64 0, i32 0, i32 0, i32 1, i32 1, i32 0, i32 0
  %246 = bitcast %"class.v8::internal::ZoneSet.1471"* %8 to i64*
  br label %328

247:                                              ; preds = %120, %322
  %248 = phi i64 [ %128, %120 ], [ %284, %322 ]
  %249 = phi i32 [ %118, %120 ], [ %326, %322 ]
  %250 = phi i64 [ %117, %120 ], [ %325, %322 ]
  %251 = phi i32 [ %116, %120 ], [ %324, %322 ]
  %252 = load i64, i64* %122, align 8
  %253 = load i64, i64* %124, align 8
  %254 = sub i64 %252, %253
  %255 = icmp eq i64 %254, 0
  %256 = shl i64 %254, 7
  %257 = add i64 %256, -1
  %258 = select i1 %255, i64 0, i64 %257
  %259 = load i64, i64* %59, align 8
  %260 = add i64 %248, %259
  %261 = icmp eq i64 %258, %260
  %262 = inttoptr i64 %253 to i32**
  %263 = inttoptr i64 %252 to i32**
  br i1 %261, label %264, label %270

264:                                              ; preds = %247
  call void @_ZNSt3__15dequeIiN2v88internal22RecyclingZoneAllocatorIiEEE19__add_back_capacityEv(%"class.std::__1::deque.1460"* nonnull %126) #16
  %265 = load i64, i64* %125, align 8
  %266 = load i64, i64* %59, align 8
  %267 = load i32**, i32*** %123, align 8
  %268 = load i32**, i32*** %121, align 8
  %269 = add i64 %266, %265
  br label %270

270:                                              ; preds = %264, %247
  %271 = phi i64 [ %269, %264 ], [ %260, %247 ]
  %272 = phi i32** [ %268, %264 ], [ %263, %247 ]
  %273 = phi i32** [ %267, %264 ], [ %262, %247 ]
  %274 = icmp eq i32** %272, %273
  br i1 %274, label %281, label %275

275:                                              ; preds = %270
  %276 = lshr i64 %271, 10
  %277 = getelementptr inbounds i32*, i32** %273, i64 %276
  %278 = load i32*, i32** %277, align 8
  %279 = and i64 %271, 1023
  %280 = getelementptr inbounds i32, i32* %278, i64 %279
  br label %281

281:                                              ; preds = %270, %275
  %282 = phi i32* [ %280, %275 ], [ null, %270 ]
  store i32 %249, i32* %282, align 4
  %283 = load i64, i64* %125, align 8
  %284 = add i64 %283, 1
  store i64 %284, i64* %125, align 8
  %285 = add nsw i32 %249, 1
  %286 = icmp eq i64 %250, 0
  br i1 %286, label %289, label %287

287:                                              ; preds = %281
  %288 = load i32, i32* %70, align 4
  br label %308

289:                                              ; preds = %281
  %290 = add nsw i32 %251, 1
  %291 = load i32, i32* %70, align 4
  %292 = icmp slt i32 %290, %291
  br i1 %292, label %293, label %322

293:                                              ; preds = %289
  %294 = load i64*, i64** %127, align 8
  %295 = sext i32 %290 to i64
  %296 = sext i32 %291 to i64
  br label %300

297:                                              ; preds = %300
  %298 = add nsw i64 %301, 1
  %299 = icmp slt i64 %298, %296
  br i1 %299, label %300, label %318

300:                                              ; preds = %293, %297
  %301 = phi i64 [ %295, %293 ], [ %298, %297 ]
  %302 = getelementptr inbounds i64, i64* %294, i64 %301
  %303 = load i64, i64* %302, align 8
  %304 = icmp eq i64 %303, 0
  br i1 %304, label %297, label %305

305:                                              ; preds = %300
  %306 = trunc i64 %301 to i32
  %307 = shl i32 %306, 6
  br label %308

308:                                              ; preds = %305, %287
  %309 = phi i32 [ %288, %287 ], [ %291, %305 ]
  %310 = phi i32 [ %251, %287 ], [ %306, %305 ]
  %311 = phi i32 [ %285, %287 ], [ %307, %305 ]
  %312 = phi i64 [ %250, %287 ], [ %303, %305 ]
  %313 = call i64 @llvm.cttz.i64(i64 %312, i1 true) #16, !range !79
  %314 = trunc i64 %313 to i32
  %315 = add i32 %311, %314
  %316 = lshr i64 %312, %313
  %317 = lshr i64 %316, 1
  br label %322

318:                                              ; preds = %297
  %319 = trunc i64 %301 to i32
  %320 = shl i32 %319, 6
  %321 = trunc i64 %298 to i32
  br label %322

322:                                              ; preds = %318, %289, %308
  %323 = phi i32 [ %309, %308 ], [ %291, %289 ], [ %291, %318 ]
  %324 = phi i32 [ %310, %308 ], [ %290, %289 ], [ %321, %318 ]
  %325 = phi i64 [ %317, %308 ], [ 0, %289 ], [ 0, %318 ]
  %326 = phi i32 [ %315, %308 ], [ %285, %289 ], [ %320, %318 ]
  %327 = icmp slt i32 %324, %323
  br i1 %327, label %247, label %182

328:                                              ; preds = %225, %729
  %329 = phi i64 [ %221, %225 ], [ %731, %729 ]
  %330 = phi i64 [ %219, %225 ], [ %730, %729 ]
  %331 = load i32**, i32*** %226, align 8
  %332 = load i64, i64* %59, align 8
  %333 = lshr i64 %332, 10
  %334 = getelementptr inbounds i32*, i32** %331, i64 %333
  %335 = load i32*, i32** %334, align 8
  %336 = and i64 %332, 1023
  %337 = getelementptr inbounds i32, i32* %335, i64 %336
  %338 = load i32, i32* %337, align 4
  %339 = add i64 %329, -1
  store i64 %339, i64* %220, align 8
  %340 = add i64 %332, 1
  store i64 %340, i64* %59, align 8
  %341 = icmp ult i64 %340, 2048
  br i1 %341, label %362, label %342

342:                                              ; preds = %328
  %343 = load i32*, i32** %331, align 8
  %344 = load %"struct.v8::internal::RecyclingZoneAllocator<int>::FreeBlock"*, %"struct.v8::internal::RecyclingZoneAllocator<int>::FreeBlock"** %227, align 8
  %345 = icmp eq %"struct.v8::internal::RecyclingZoneAllocator<int>::FreeBlock"* %344, null
  br i1 %345, label %350, label %346

346:                                              ; preds = %342
  %347 = getelementptr inbounds %"struct.v8::internal::RecyclingZoneAllocator<int>::FreeBlock", %"struct.v8::internal::RecyclingZoneAllocator<int>::FreeBlock"* %344, i64 0, i32 1
  %348 = load i64, i64* %347, align 8
  %349 = icmp ugt i64 %348, 1024
  br i1 %349, label %357, label %350

350:                                              ; preds = %346, %342
  %351 = getelementptr inbounds i32, i32* %343, i64 2
  %352 = bitcast i32* %351 to i64*
  store i64 1024, i64* %352, align 8
  %353 = load i64, i64* %228, align 8
  %354 = bitcast i32* %343 to i64*
  store i64 %353, i64* %354, align 8
  store i32* %343, i32** %229, align 8
  %355 = load i32**, i32*** %226, align 8
  %356 = load i64, i64* %59, align 8
  br label %357

357:                                              ; preds = %350, %346
  %358 = phi i64 [ %340, %346 ], [ %356, %350 ]
  %359 = phi i32** [ %331, %346 ], [ %355, %350 ]
  %360 = getelementptr inbounds i32*, i32** %359, i64 1
  store i32** %360, i32*** %226, align 8
  %361 = add i64 %358, -1024
  store i64 %361, i64* %59, align 8
  br label %362

362:                                              ; preds = %328, %357
  br i1 %230, label %369, label %363

363:                                              ; preds = %362
  %364 = inttoptr i64 %330 to i64*
  %365 = sdiv i32 %338, 64
  %366 = sext i32 %365 to i64
  %367 = getelementptr inbounds i64, i64* %364, i64 %366
  %368 = load i64, i64* %367, align 8
  br label %369

369:                                              ; preds = %362, %363
  %370 = phi i64 [ %368, %363 ], [ %330, %362 ]
  %371 = srem i32 %338, 64
  %372 = sdiv i32 %338, 64
  %373 = zext i32 %371 to i64
  %374 = shl i64 1, %373
  %375 = and i64 %370, %374
  %376 = icmp eq i64 %375, 0
  br i1 %376, label %377, label %729

377:                                              ; preds = %369
  br i1 %230, label %378, label %382

378:                                              ; preds = %377
  %379 = zext i32 %338 to i64
  %380 = shl i64 1, %379
  %381 = or i64 %380, %330
  br label %388

382:                                              ; preds = %377
  %383 = inttoptr i64 %330 to i64*
  %384 = sext i32 %372 to i64
  %385 = getelementptr inbounds i64, i64* %383, i64 %384
  %386 = load i64, i64* %385, align 8
  %387 = or i64 %386, %374
  store i64 %387, i64* %385, align 8
  br label %388

388:                                              ; preds = %378, %382
  %389 = phi i64 [ %381, %378 ], [ %330, %382 ]
  %390 = load %"class.std::__1::vector.1171"*, %"class.std::__1::vector.1171"** %232, align 8
  %391 = sext i32 %338 to i64
  %392 = getelementptr inbounds %"class.std::__1::vector.1171", %"class.std::__1::vector.1171"* %390, i64 0, i32 0, i32 1
  %393 = bitcast %"class.v8::internal::compiler::InstructionBlock"*** %392 to i64*
  %394 = load i64, i64* %393, align 8
  %395 = bitcast %"class.std::__1::vector.1171"* %390 to i64*
  %396 = load i64, i64* %395, align 8
  %397 = sub i64 %394, %396
  %398 = ashr exact i64 %397, 3
  %399 = icmp ugt i64 %398, %391
  br i1 %399, label %402, label %400

400:                                              ; preds = %388
  %401 = bitcast %"class.std::__1::vector.1171"* %390 to %"class.std::__1::__vector_base_common"*
  call void @_ZNKSt3__120__vector_base_commonILb1EE20__throw_out_of_rangeEv(%"class.std::__1::__vector_base_common"* %401) #17
  unreachable

402:                                              ; preds = %388
  %403 = inttoptr i64 %396 to %"class.v8::internal::compiler::InstructionBlock"**
  %404 = getelementptr inbounds %"class.v8::internal::compiler::InstructionBlock"*, %"class.v8::internal::compiler::InstructionBlock"** %403, i64 %391
  %405 = load %"class.v8::internal::compiler::InstructionBlock"*, %"class.v8::internal::compiler::InstructionBlock"** %404, align 8
  %406 = getelementptr inbounds %"class.v8::internal::compiler::InstructionBlock", %"class.v8::internal::compiler::InstructionBlock"* %405, i64 0, i32 1, i32 0, i32 0, i32 0
  %407 = load %"class.v8::internal::compiler::RpoNumber"*, %"class.v8::internal::compiler::RpoNumber"** %406, align 8
  %408 = getelementptr inbounds %"class.v8::internal::compiler::InstructionBlock", %"class.v8::internal::compiler::InstructionBlock"* %405, i64 0, i32 1, i32 0, i32 0, i32 1
  %409 = load %"class.v8::internal::compiler::RpoNumber"*, %"class.v8::internal::compiler::RpoNumber"** %408, align 8
  %410 = icmp eq %"class.v8::internal::compiler::RpoNumber"* %407, %409
  br i1 %410, label %729, label %411

411:                                              ; preds = %402
  %412 = getelementptr inbounds %"class.v8::internal::compiler::InstructionBlock", %"class.v8::internal::compiler::InstructionBlock"* %405, i64 0, i32 4, i32 0
  %413 = getelementptr inbounds %"class.v8::internal::compiler::InstructionBlock", %"class.v8::internal::compiler::InstructionBlock"* %405, i64 0, i32 8
  %414 = getelementptr inbounds %"class.v8::internal::compiler::InstructionBlock", %"class.v8::internal::compiler::InstructionBlock"* %405, i64 0, i32 14
  %415 = getelementptr inbounds %"class.v8::internal::compiler::RpoNumber", %"class.v8::internal::compiler::RpoNumber"* %407, i64 0, i32 0
  %416 = load i32, i32* %415, align 4
  %417 = sext i32 %416 to i64
  %418 = sub i64 %394, %396
  %419 = ashr exact i64 %418, 3
  %420 = icmp ugt i64 %419, %417
  br i1 %420, label %424, label %421

421:                                              ; preds = %411, %716
  %422 = phi %"class.std::__1::vector.1171"* [ %717, %716 ], [ %390, %411 ]
  %423 = bitcast %"class.std::__1::vector.1171"* %422 to %"class.std::__1::__vector_base_common"*
  call void @_ZNKSt3__120__vector_base_commonILb1EE20__throw_out_of_rangeEv(%"class.std::__1::__vector_base_common"* %423) #17
  unreachable

424:                                              ; preds = %411, %716
  %425 = phi i64 [ %725, %716 ], [ %417, %411 ]
  %426 = phi %"class.v8::internal::compiler::RpoNumber"* [ %714, %716 ], [ %407, %411 ]
  %427 = phi i64 [ %722, %716 ], [ %396, %411 ]
  %428 = inttoptr i64 %427 to %"class.v8::internal::compiler::InstructionBlock"**
  %429 = getelementptr inbounds %"class.v8::internal::compiler::InstructionBlock"*, %"class.v8::internal::compiler::InstructionBlock"** %428, i64 %425
  %430 = load %"class.v8::internal::compiler::InstructionBlock"*, %"class.v8::internal::compiler::InstructionBlock"** %429, align 8
  %431 = getelementptr inbounds %"class.v8::internal::compiler::InstructionBlock", %"class.v8::internal::compiler::InstructionBlock"* %430, i64 0, i32 10
  %432 = load i8, i8* %431, align 4, !range !3
  %433 = icmp eq i8 %432, 0
  br i1 %433, label %471, label %434

434:                                              ; preds = %424
  %435 = getelementptr inbounds %"class.v8::internal::compiler::InstructionBlock", %"class.v8::internal::compiler::InstructionBlock"* %430, i64 0, i32 4, i32 0
  %436 = load i32, i32* %435, align 4
  %437 = load i64, i64* %234, align 8
  %438 = load i64, i64* %235, align 8
  %439 = sub i64 %437, %438
  %440 = icmp eq i64 %439, 0
  %441 = shl i64 %439, 7
  %442 = add i64 %441, -1
  %443 = select i1 %440, i64 0, i64 %442
  %444 = load i64, i64* %59, align 8
  %445 = load i64, i64* %220, align 8
  %446 = add i64 %445, %444
  %447 = icmp eq i64 %443, %446
  %448 = inttoptr i64 %438 to i32**
  %449 = inttoptr i64 %437 to i32**
  br i1 %447, label %450, label %456

450:                                              ; preds = %434
  call void @_ZNSt3__15dequeIiN2v88internal22RecyclingZoneAllocatorIiEEE19__add_back_capacityEv(%"class.std::__1::deque.1460"* nonnull %236) #16
  %451 = load i64, i64* %220, align 8
  %452 = load i64, i64* %59, align 8
  %453 = load i32**, i32*** %226, align 8
  %454 = load i32**, i32*** %233, align 8
  %455 = add i64 %452, %451
  br label %456

456:                                              ; preds = %450, %434
  %457 = phi i64 [ %455, %450 ], [ %446, %434 ]
  %458 = phi i32** [ %454, %450 ], [ %449, %434 ]
  %459 = phi i32** [ %453, %450 ], [ %448, %434 ]
  %460 = icmp eq i32** %458, %459
  br i1 %460, label %467, label %461

461:                                              ; preds = %456
  %462 = lshr i64 %457, 10
  %463 = getelementptr inbounds i32*, i32** %459, i64 %462
  %464 = load i32*, i32** %463, align 8
  %465 = and i64 %457, 1023
  %466 = getelementptr inbounds i32, i32* %464, i64 %465
  br label %467

467:                                              ; preds = %456, %461
  %468 = phi i32* [ %466, %461 ], [ null, %456 ]
  store i32 %436, i32* %468, align 4
  %469 = load i64, i64* %220, align 8
  %470 = add i64 %469, 1
  store i64 %470, i64* %220, align 8
  br label %713

471:                                              ; preds = %424
  %472 = getelementptr inbounds %"class.v8::internal::compiler::InstructionBlock", %"class.v8::internal::compiler::InstructionBlock"* %430, i64 0, i32 9
  %473 = load i32, i32* %472, align 8
  %474 = shl i32 %473, 2
  %475 = add i32 %474, -4
  %476 = or i32 %475, 2
  %477 = load i64, i64* %237, align 8
  %478 = load %"class.v8::internal::compiler::LiveRangeBound"*, %"class.v8::internal::compiler::LiveRangeBound"** %238, align 8
  br label %479

479:                                              ; preds = %482, %471
  %480 = phi i64 [ %477, %471 ], [ %486, %482 ]
  %481 = phi i64 [ 0, %471 ], [ %483, %482 ]
  br label %482

482:                                              ; preds = %479, %490
  %483 = phi i64 [ %486, %490 ], [ %481, %479 ]
  %484 = sub i64 %480, %483
  %485 = lshr i64 %484, 1
  %486 = add i64 %485, %483
  %487 = getelementptr inbounds %"class.v8::internal::compiler::LiveRangeBound", %"class.v8::internal::compiler::LiveRangeBound"* %478, i64 %486, i32 1, i32 0
  %488 = load i32, i32* %487, align 4
  %489 = icmp sgt i32 %488, %476
  br i1 %489, label %479, label %490

490:                                              ; preds = %482
  %491 = getelementptr inbounds %"class.v8::internal::compiler::LiveRangeBound", %"class.v8::internal::compiler::LiveRangeBound"* %478, i64 %486, i32 2, i32 0
  %492 = load i32, i32* %491, align 4
  %493 = icmp sgt i32 %492, %476
  br i1 %493, label %494, label %482

494:                                              ; preds = %490
  call void @llvm.lifetime.start.p0i8(i64 8, i8* nonnull %239) #16
  %495 = getelementptr inbounds %"class.v8::internal::compiler::LiveRangeBound", %"class.v8::internal::compiler::LiveRangeBound"* %478, i64 %486, i32 0
  %496 = load %"class.v8::internal::compiler::LiveRange"*, %"class.v8::internal::compiler::LiveRange"** %495, align 8
  %497 = getelementptr inbounds %"class.v8::internal::compiler::LiveRange", %"class.v8::internal::compiler::LiveRange"* %496, i64 0, i32 1
  %498 = load i32, i32* %497, align 4
  %499 = and i32 %498, 8064
  %500 = icmp eq i32 %499, 4096
  br i1 %500, label %511, label %501

501:                                              ; preds = %494
  %502 = lshr i32 %498, 7
  %503 = and i32 %502, 63
  %504 = lshr i32 %498, 8
  %505 = and i32 %504, 8160
  %506 = zext i32 %503 to i64
  %507 = shl nuw nsw i64 %506, 35
  %508 = or i32 %505, 5
  %509 = zext i32 %508 to i64
  %510 = or i64 %507, %509
  br label %536

511:                                              ; preds = %494
  %512 = getelementptr inbounds %"class.v8::internal::compiler::LiveRange", %"class.v8::internal::compiler::LiveRange"* %496, i64 0, i32 5
  %513 = load %"class.v8::internal::compiler::TopLevelLiveRange"*, %"class.v8::internal::compiler::TopLevelLiveRange"** %512, align 8
  %514 = getelementptr inbounds %"class.v8::internal::compiler::TopLevelLiveRange", %"class.v8::internal::compiler::TopLevelLiveRange"* %513, i64 0, i32 0, i32 1
  %515 = load i32, i32* %514, align 4
  %516 = and i32 %515, 96
  %517 = icmp eq i32 %516, 32
  br i1 %517, label %518, label %523

518:                                              ; preds = %511
  %519 = getelementptr inbounds %"class.v8::internal::compiler::TopLevelLiveRange", %"class.v8::internal::compiler::TopLevelLiveRange"* %513, i64 0, i32 3, i32 0
  %520 = load %"class.v8::internal::compiler::InstructionOperand"*, %"class.v8::internal::compiler::InstructionOperand"** %519, align 8
  %521 = getelementptr inbounds %"class.v8::internal::compiler::InstructionOperand", %"class.v8::internal::compiler::InstructionOperand"* %520, i64 0, i32 0
  %522 = load i64, i64* %521, align 8
  br label %536

523:                                              ; preds = %511
  %524 = getelementptr inbounds %"class.v8::internal::compiler::TopLevelLiveRange", %"class.v8::internal::compiler::TopLevelLiveRange"* %513, i64 0, i32 3
  %525 = bitcast %union.anon* %524 to %"class.v8::internal::compiler::SpillRange"**
  %526 = load %"class.v8::internal::compiler::SpillRange"*, %"class.v8::internal::compiler::SpillRange"** %525, align 8
  %527 = getelementptr inbounds %"class.v8::internal::compiler::SpillRange", %"class.v8::internal::compiler::SpillRange"* %526, i64 0, i32 3
  %528 = load i32, i32* %527, align 4
  %529 = lshr i32 %515, 8
  %530 = and i32 %529, 8160
  %531 = zext i32 %528 to i64
  %532 = shl i64 %531, 35
  %533 = or i32 %530, 13
  %534 = zext i32 %533 to i64
  %535 = or i64 %532, %534
  br label %536

536:                                              ; preds = %501, %518, %523
  %537 = phi i64 [ %510, %501 ], [ %522, %518 ], [ %535, %523 ]
  store i64 %537, i64* %240, align 8
  %538 = load i32, i32* %412, align 4
  %539 = load i32, i32* %241, align 4
  %540 = load %"class.std::__1::__tree_node.1538"*, %"class.std::__1::__tree_node.1538"** %242, align 8
  %541 = icmp eq %"class.std::__1::__tree_node.1538"* %540, null
  br i1 %541, label %581, label %542

542:                                              ; preds = %536, %562
  %543 = phi %"class.std::__1::__tree_end_node"* [ %564, %562 ], [ %193, %536 ]
  %544 = phi %"class.std::__1::__tree_node.1538"* [ %565, %562 ], [ %540, %536 ]
  %545 = getelementptr inbounds %"class.std::__1::__tree_node.1538", %"class.std::__1::__tree_node.1538"* %544, i64 0, i32 1, i32 0, i32 0
  %546 = load i32, i32* %545, align 4
  %547 = icmp slt i32 %546, %538
  br i1 %547, label %548, label %551

548:                                              ; preds = %542
  %549 = getelementptr inbounds %"class.std::__1::__tree_node.1538", %"class.std::__1::__tree_node.1538"* %544, i64 0, i32 0, i32 1
  %550 = bitcast %"class.std::__1::__tree_node_base"** %549 to %"class.std::__1::__tree_node.1538"**
  br label %562

551:                                              ; preds = %542
  %552 = icmp slt i32 %538, %546
  br i1 %552, label %559, label %553

553:                                              ; preds = %551
  %554 = getelementptr inbounds %"class.std::__1::__tree_node.1538", %"class.std::__1::__tree_node.1538"* %544, i64 0, i32 1, i32 1
  %555 = load i32, i32* %554, align 4
  %556 = icmp slt i32 %555, %539
  %557 = getelementptr inbounds %"class.std::__1::__tree_node.1538", %"class.std::__1::__tree_node.1538"* %544, i64 0, i32 0, i32 1
  %558 = bitcast %"class.std::__1::__tree_node_base"** %557 to %"class.std::__1::__tree_node.1538"**
  br i1 %556, label %562, label %559

559:                                              ; preds = %553, %551
  %560 = bitcast %"class.std::__1::__tree_node.1538"* %544 to %"class.std::__1::__tree_node.1538"**
  %561 = getelementptr inbounds %"class.std::__1::__tree_node.1538", %"class.std::__1::__tree_node.1538"* %544, i64 0, i32 0, i32 0
  br label %562

562:                                              ; preds = %559, %553, %548
  %563 = phi %"class.std::__1::__tree_node.1538"** [ %560, %559 ], [ %550, %548 ], [ %558, %553 ]
  %564 = phi %"class.std::__1::__tree_end_node"* [ %561, %559 ], [ %543, %548 ], [ %543, %553 ]
  %565 = load %"class.std::__1::__tree_node.1538"*, %"class.std::__1::__tree_node.1538"** %563, align 8
  %566 = icmp eq %"class.std::__1::__tree_node.1538"* %565, null
  br i1 %566, label %567, label %542

567:                                              ; preds = %562
  %568 = icmp eq %"class.std::__1::__tree_end_node"* %564, %193
  br i1 %568, label %581, label %569

569:                                              ; preds = %567
  %570 = bitcast %"class.std::__1::__tree_end_node"* %564 to %"class.std::__1::__tree_node.1538"*
  %571 = getelementptr inbounds %"class.std::__1::__tree_node.1538", %"class.std::__1::__tree_node.1538"* %570, i64 0, i32 1, i32 0, i32 0
  %572 = load i32, i32* %571, align 4
  %573 = icmp slt i32 %538, %572
  br i1 %573, label %581, label %574

574:                                              ; preds = %569
  %575 = icmp slt i32 %572, %538
  br i1 %575, label %712, label %576

576:                                              ; preds = %574
  %577 = getelementptr inbounds %"class.std::__1::__tree_end_node", %"class.std::__1::__tree_end_node"* %564, i64 4
  %578 = bitcast %"class.std::__1::__tree_end_node"* %577 to i32*
  %579 = load i32, i32* %578, align 4
  %580 = icmp slt i32 %539, %579
  br i1 %580, label %581, label %712

581:                                              ; preds = %576, %569, %567, %536
  %582 = load %"class.v8::internal::compiler::TopTierRegisterAllocationData"*, %"class.v8::internal::compiler::TopTierRegisterAllocationData"** %10, align 8
  %583 = getelementptr inbounds %"class.v8::internal::compiler::TopTierRegisterAllocationData", %"class.v8::internal::compiler::TopTierRegisterAllocationData"* %582, i64 0, i32 23, i32 0
  %584 = load i32, i32* %583, align 4
  %585 = and i32 %584, 1
  %586 = icmp eq i32 %585, 0
  br i1 %586, label %589, label %587

587:                                              ; preds = %581
  call void (i8*, ...) @_ZN2v88internal6PrintFEPKcz(i8* getelementptr inbounds ([45 x i8], [45 x i8]* @.str.101, i64 0, i64 0), i32 %539, i32 %538) #16
  %588 = load %"class.v8::internal::compiler::TopTierRegisterAllocationData"*, %"class.v8::internal::compiler::TopTierRegisterAllocationData"** %10, align 8
  br label %589

589:                                              ; preds = %581, %587
  %590 = phi %"class.v8::internal::compiler::TopTierRegisterAllocationData"* [ %582, %581 ], [ %588, %587 ]
  %591 = load i32, i32* %413, align 4
  %592 = getelementptr inbounds %"class.v8::internal::compiler::TopTierRegisterAllocationData", %"class.v8::internal::compiler::TopTierRegisterAllocationData"* %590, i64 0, i32 3
  %593 = load %"class.v8::internal::compiler::InstructionSequence"*, %"class.v8::internal::compiler::InstructionSequence"** %592, align 8
  %594 = sext i32 %591 to i64
  %595 = getelementptr inbounds %"class.v8::internal::compiler::InstructionSequence", %"class.v8::internal::compiler::InstructionSequence"* %593, i64 0, i32 8, i32 0, i32 0, i32 1
  %596 = load i64, i64* %595, align 8
  %597 = add i64 %596, %594
  %598 = getelementptr inbounds %"class.v8::internal::compiler::InstructionSequence", %"class.v8::internal::compiler::InstructionSequence"* %593, i64 0, i32 8, i32 0, i32 0, i32 0, i32 1
  %599 = load %"class.v8::internal::compiler::Instruction"***, %"class.v8::internal::compiler::Instruction"**** %598, align 8
  %600 = lshr i64 %597, 9
  %601 = getelementptr inbounds %"class.v8::internal::compiler::Instruction"**, %"class.v8::internal::compiler::Instruction"*** %599, i64 %600
  %602 = load %"class.v8::internal::compiler::Instruction"**, %"class.v8::internal::compiler::Instruction"*** %601, align 8
  %603 = and i64 %597, 511
  %604 = getelementptr inbounds %"class.v8::internal::compiler::Instruction"*, %"class.v8::internal::compiler::Instruction"** %602, i64 %603
  %605 = load %"class.v8::internal::compiler::Instruction"*, %"class.v8::internal::compiler::Instruction"** %604, align 8
  %606 = getelementptr inbounds %"class.v8::internal::compiler::InstructionSequence", %"class.v8::internal::compiler::InstructionSequence"* %593, i64 0, i32 1
  %607 = load %"class.v8::internal::Zone"*, %"class.v8::internal::Zone"** %606, align 8
  %608 = ptrtoint %"class.v8::internal::Zone"* %607 to i64
  %609 = getelementptr inbounds %"class.v8::internal::compiler::Instruction", %"class.v8::internal::compiler::Instruction"* %605, i64 0, i32 2, i64 0
  %610 = load %"class.v8::internal::compiler::ParallelMove"*, %"class.v8::internal::compiler::ParallelMove"** %609, align 8
  %611 = icmp eq %"class.v8::internal::compiler::ParallelMove"* %610, null
  br i1 %611, label %612, label %629

612:                                              ; preds = %589
  %613 = getelementptr inbounds %"class.v8::internal::Zone", %"class.v8::internal::Zone"* %607, i64 0, i32 2
  %614 = load i64, i64* %613, align 8
  %615 = getelementptr inbounds %"class.v8::internal::Zone", %"class.v8::internal::Zone"* %607, i64 0, i32 3
  %616 = load i64, i64* %615, align 8
  %617 = sub i64 %616, %614
  %618 = icmp ult i64 %617, 32
  br i1 %618, label %619, label %621, !prof !2

619:                                              ; preds = %612
  %620 = call i64 @_ZN2v88internal4Zone9NewExpandEm(%"class.v8::internal::Zone"* %607, i64 32) #16
  br label %623

621:                                              ; preds = %612
  %622 = add i64 %614, 32
  store i64 %622, i64* %613, align 8
  br label %623

623:                                              ; preds = %621, %619
  %624 = phi i64 [ %620, %619 ], [ %614, %621 ]
  %625 = inttoptr i64 %624 to i8*
  %626 = inttoptr i64 %624 to %"class.v8::internal::compiler::ParallelMove"*
  %627 = getelementptr inbounds %"class.v8::internal::compiler::ParallelMove", %"class.v8::internal::compiler::ParallelMove"* %626, i64 0, i32 0, i32 0, i32 0, i32 2, i32 1
  %628 = bitcast %"struct.std::__1::__compressed_pair_elem.1208"* %627 to i64*
  call void @llvm.memset.p0i8.i64(i8* align 8 %625, i8 0, i64 24, i1 false) #16
  store i64 %608, i64* %628, align 8
  store %"class.v8::internal::compiler::ParallelMove"* %626, %"class.v8::internal::compiler::ParallelMove"** %609, align 8
  br label %629

629:                                              ; preds = %589, %623
  %630 = phi %"class.v8::internal::compiler::ParallelMove"* [ %626, %623 ], [ %610, %589 ]
  %631 = getelementptr inbounds %"class.v8::internal::compiler::ParallelMove", %"class.v8::internal::compiler::ParallelMove"* %630, i64 0, i32 0, i32 0, i32 0, i32 2, i32 1, i32 0, i32 0
  %632 = load %"class.v8::internal::Zone"*, %"class.v8::internal::Zone"** %631, align 8
  %633 = call %"class.v8::internal::compiler::MoveOperands"* @_ZN2v88internal8compiler12ParallelMove7AddMoveERKNS1_18InstructionOperandES5_PNS0_4ZoneE(%"class.v8::internal::compiler::ParallelMove"* %630, %"class.v8::internal::compiler::InstructionOperand"* nonnull dereferenceable(8) %9, %"class.v8::internal::compiler::InstructionOperand"* nonnull dereferenceable(8) %6, %"class.v8::internal::Zone"* %632) #16
  %634 = load i32, i32* %241, align 4
  %635 = zext i32 %634 to i64
  %636 = shl nuw i64 %635, 32
  %637 = load %"class.std::__1::__tree_node.1538"*, %"class.std::__1::__tree_node.1538"** %242, align 8
  %638 = icmp eq %"class.std::__1::__tree_node.1538"* %637, null
  br i1 %638, label %671, label %639

639:                                              ; preds = %629, %667
  %640 = phi %"class.std::__1::__tree_node.1538"* [ %670, %667 ], [ %637, %629 ]
  %641 = phi %"class.std::__1::__tree_node_base"** [ %669, %667 ], [ %243, %629 ]
  %642 = getelementptr inbounds %"class.std::__1::__tree_node.1538", %"class.std::__1::__tree_node.1538"* %640, i64 0, i32 1, i32 0, i32 0
  %643 = load i32, i32* %642, align 4
  %644 = icmp slt i32 %538, %643
  br i1 %644, label %651, label %645

645:                                              ; preds = %639
  %646 = icmp slt i32 %643, %538
  br i1 %646, label %659, label %647

647:                                              ; preds = %645
  %648 = getelementptr inbounds %"class.std::__1::__tree_node.1538", %"class.std::__1::__tree_node.1538"* %640, i64 0, i32 1, i32 1
  %649 = load i32, i32* %648, align 4
  %650 = icmp slt i32 %634, %649
  br i1 %650, label %651, label %657

651:                                              ; preds = %647, %639
  %652 = getelementptr inbounds %"class.std::__1::__tree_node.1538", %"class.std::__1::__tree_node.1538"* %640, i64 0, i32 0, i32 0, i32 0
  %653 = load %"class.std::__1::__tree_node_base"*, %"class.std::__1::__tree_node_base"** %652, align 8
  %654 = icmp eq %"class.std::__1::__tree_node_base"* %653, null
  br i1 %654, label %655, label %667

655:                                              ; preds = %651
  %656 = getelementptr inbounds %"class.std::__1::__tree_node.1538", %"class.std::__1::__tree_node.1538"* %640, i64 0, i32 0, i32 0
  br label %671

657:                                              ; preds = %647
  %658 = icmp slt i32 %649, %634
  br i1 %658, label %659, label %665

659:                                              ; preds = %657, %645
  %660 = getelementptr inbounds %"class.std::__1::__tree_node.1538", %"class.std::__1::__tree_node.1538"* %640, i64 0, i32 0, i32 1
  %661 = load %"class.std::__1::__tree_node_base"*, %"class.std::__1::__tree_node_base"** %660, align 8
  %662 = icmp eq %"class.std::__1::__tree_node_base"* %661, null
  br i1 %662, label %663, label %667

663:                                              ; preds = %659
  %664 = getelementptr inbounds %"class.std::__1::__tree_node.1538", %"class.std::__1::__tree_node.1538"* %640, i64 0, i32 0, i32 0
  br label %671

665:                                              ; preds = %657
  %666 = getelementptr inbounds %"class.std::__1::__tree_node.1538", %"class.std::__1::__tree_node.1538"* %640, i64 0, i32 0, i32 0
  br label %671

667:                                              ; preds = %659, %651
  %668 = phi %"class.std::__1::__tree_node_base"* [ %653, %651 ], [ %661, %659 ]
  %669 = phi %"class.std::__1::__tree_node_base"** [ %652, %651 ], [ %660, %659 ]
  %670 = bitcast %"class.std::__1::__tree_node_base"* %668 to %"class.std::__1::__tree_node.1538"*
  br label %639

671:                                              ; preds = %629, %665, %663, %655
  %672 = phi %"class.std::__1::__tree_end_node"* [ %656, %655 ], [ %664, %663 ], [ %666, %665 ], [ %193, %629 ]
  %673 = phi %"class.std::__1::__tree_node_base"** [ %652, %655 ], [ %660, %663 ], [ %641, %665 ], [ %244, %629 ]
  %674 = bitcast %"class.std::__1::__tree_node_base"** %673 to %"class.std::__1::__tree_node.1538"**
  %675 = load %"class.std::__1::__tree_node.1538"*, %"class.std::__1::__tree_node.1538"** %674, align 8
  %676 = icmp eq %"class.std::__1::__tree_node.1538"* %675, null
  br i1 %676, label %677, label %711

677:                                              ; preds = %671
  %678 = load %"class.v8::internal::Zone"*, %"class.v8::internal::Zone"** %245, align 8, !noalias !177
  %679 = getelementptr inbounds %"class.v8::internal::Zone", %"class.v8::internal::Zone"* %678, i64 0, i32 2
  %680 = load i64, i64* %679, align 8, !noalias !177
  %681 = getelementptr inbounds %"class.v8::internal::Zone", %"class.v8::internal::Zone"* %678, i64 0, i32 3
  %682 = load i64, i64* %681, align 8, !noalias !177
  %683 = sub i64 %682, %680
  %684 = icmp ult i64 %683, 40
  br i1 %684, label %685, label %687, !prof !2

685:                                              ; preds = %677
  %686 = call i64 @_ZN2v88internal4Zone9NewExpandEm(%"class.v8::internal::Zone"* %678, i64 40) #16, !noalias !177
  br label %689

687:                                              ; preds = %677
  %688 = add i64 %680, 40
  store i64 %688, i64* %679, align 8, !noalias !177
  br label %689

689:                                              ; preds = %687, %685
  %690 = phi i64 [ %686, %685 ], [ %680, %687 ]
  %691 = inttoptr i64 %690 to %"class.std::__1::__tree_node.1538"*
  %692 = getelementptr inbounds %"class.std::__1::__tree_node.1538", %"class.std::__1::__tree_node.1538"* %691, i64 0, i32 1
  %693 = bitcast %"struct.std::__1::pair.1482"* %692 to i64*
  %694 = zext i32 %538 to i64
  %695 = or i64 %636, %694
  store i64 %695, i64* %693, align 4, !noalias !177
  %696 = inttoptr i64 %690 to %"class.std::__1::__tree_node_base"*
  %697 = getelementptr inbounds %"class.std::__1::__tree_node_base", %"class.std::__1::__tree_node_base"* %696, i64 0, i32 2
  %698 = inttoptr i64 %690 to i8*
  call void @llvm.memset.p0i8.i64(i8* align 8 %698, i8 0, i64 16, i1 false) #16
  store %"class.std::__1::__tree_end_node"* %672, %"class.std::__1::__tree_end_node"** %697, align 8
  store %"class.std::__1::__tree_node_base"* %696, %"class.std::__1::__tree_node_base"** %673, align 8
  %699 = load %"class.std::__1::__tree_end_node"*, %"class.std::__1::__tree_end_node"** %187, align 8
  %700 = getelementptr inbounds %"class.std::__1::__tree_end_node", %"class.std::__1::__tree_end_node"* %699, i64 0, i32 0
  %701 = load %"class.std::__1::__tree_node_base"*, %"class.std::__1::__tree_node_base"** %700, align 8
  %702 = icmp eq %"class.std::__1::__tree_node_base"* %701, null
  br i1 %702, label %706, label %703

703:                                              ; preds = %689
  %704 = ptrtoint %"class.std::__1::__tree_node_base"* %701 to i64
  store i64 %704, i64* %246, align 8
  %705 = load %"class.std::__1::__tree_node_base"*, %"class.std::__1::__tree_node_base"** %673, align 8
  br label %706

706:                                              ; preds = %703, %689
  %707 = phi %"class.std::__1::__tree_node_base"* [ %696, %689 ], [ %705, %703 ]
  %708 = load %"class.std::__1::__tree_node_base"*, %"class.std::__1::__tree_node_base"** %243, align 8
  call void @_ZNSt3__127__tree_balance_after_insertIPNS_16__tree_node_baseIPvEEEEvT_S5_(%"class.std::__1::__tree_node_base"* %708, %"class.std::__1::__tree_node_base"* %707) #16
  %709 = load i64, i64* %192, align 8
  %710 = add i64 %709, 1
  store i64 %710, i64* %192, align 8
  br label %711

711:                                              ; preds = %671, %706
  store i8 1, i8* %414, align 8
  br label %712

712:                                              ; preds = %574, %576, %711
  call void @llvm.lifetime.end.p0i8(i64 8, i8* nonnull %239) #16
  br label %713

713:                                              ; preds = %712, %467
  %714 = getelementptr inbounds %"class.v8::internal::compiler::RpoNumber", %"class.v8::internal::compiler::RpoNumber"* %426, i64 1
  %715 = icmp eq %"class.v8::internal::compiler::RpoNumber"* %714, %409
  br i1 %715, label %729, label %716

716:                                              ; preds = %713
  %717 = load %"class.std::__1::vector.1171"*, %"class.std::__1::vector.1171"** %232, align 8
  %718 = getelementptr inbounds %"class.std::__1::vector.1171", %"class.std::__1::vector.1171"* %717, i64 0, i32 0, i32 1
  %719 = bitcast %"class.v8::internal::compiler::InstructionBlock"*** %718 to i64*
  %720 = load i64, i64* %719, align 8
  %721 = bitcast %"class.std::__1::vector.1171"* %717 to i64*
  %722 = load i64, i64* %721, align 8
  %723 = getelementptr inbounds %"class.v8::internal::compiler::RpoNumber", %"class.v8::internal::compiler::RpoNumber"* %714, i64 0, i32 0
  %724 = load i32, i32* %723, align 4
  %725 = sext i32 %724 to i64
  %726 = sub i64 %720, %722
  %727 = ashr exact i64 %726, 3
  %728 = icmp ugt i64 %727, %725
  br i1 %728, label %424, label %421

729:                                              ; preds = %713, %402, %369
  %730 = phi i64 [ %330, %369 ], [ %389, %402 ], [ %389, %713 ]
  %731 = load i64, i64* %220, align 8
  %732 = icmp eq i64 %731, 0
  br i1 %732, label %733, label %328

733:                                              ; preds = %729, %223
  %734 = phi %"class.std::__1::__tree_node.1538"** [ %224, %223 ], [ %242, %729 ]
  %735 = getelementptr inbounds %"class.v8::internal::ZoneSet.1471", %"class.v8::internal::ZoneSet.1471"* %8, i64 0, i32 0, i32 0
  %736 = load %"class.std::__1::__tree_node.1538"*, %"class.std::__1::__tree_node.1538"** %734, align 8
  call void @_ZNSt3__16__treeINS_4pairIN2v88internal8compiler9RpoNumberEiEENS_4lessIS6_EENS3_13ZoneAllocatorIS6_EEE7destroyEPNS_11__tree_nodeIS6_PvEE(%"class.std::__1::__tree.1473"* nonnull %735, %"class.std::__1::__tree_node.1538"* %736) #16
  call void @llvm.lifetime.end.p0i8(i64 32, i8* nonnull %186) #16
  %737 = getelementptr inbounds %"class.v8::internal::ZoneQueue", %"class.v8::internal::ZoneQueue"* %7, i64 0, i32 0, i32 0, i32 0, i32 0
  call void @_ZNSt3__112__deque_baseIiN2v88internal22RecyclingZoneAllocatorIiEEED2Ev(%"class.std::__1::__deque_base.1461"* nonnull %737) #16
  call void @llvm.lifetime.end.p0i8(i64 80, i8* nonnull %45) #16
  call void @llvm.lifetime.end.p0i8(i64 8, i8* nonnull %14) #16
  ret void
}

declare void @_ZN2v88internal8compiler11SpillPlacer3AddEPNS1_17TopLevelLiveRangeE(%"class.v8::internal::compiler::SpillPlacer"*, %"class.v8::internal::compiler::TopLevelLiveRange"*) local_unnamed_addr #6

; Function Attrs: nounwind
declare void @_ZN2v88internal8compiler11SpillPlacerD1Ev(%"class.v8::internal::compiler::SpillPlacer"*) unnamed_addr #10

; Function Attrs: nounwind ssp uwtable
define hidden void @_ZN2v88internal8compiler18LiveRangeConnector13ConnectRangesEPNS0_4ZoneE(%"class.v8::internal::compiler::LiveRangeConnector"* nocapture readonly, %"class.v8::internal::Zone"*) local_unnamed_addr #0 align 2 {
  %3 = alloca %"class.v8::internal::ZoneMap.1442", align 8
  %4 = alloca %"class.v8::internal::compiler::InstructionOperand", align 8
  %5 = alloca %"class.v8::internal::compiler::InstructionOperand", align 8
  %6 = alloca %"class.v8::internal::ZoneVector.1203", align 8
  %7 = alloca %"class.v8::internal::ZoneVector.1203", align 8
  %8 = bitcast %"class.v8::internal::ZoneMap.1442"* %3 to i8*
  call void @llvm.lifetime.start.p0i8(i64 32, i8* nonnull %8) #16
  %9 = ptrtoint %"class.v8::internal::Zone"* %1 to i64
  %10 = getelementptr inbounds %"class.v8::internal::ZoneMap.1442", %"class.v8::internal::ZoneMap.1442"* %3, i64 0, i32 0, i32 0, i32 0
  %11 = getelementptr inbounds %"class.v8::internal::ZoneMap.1442", %"class.v8::internal::ZoneMap.1442"* %3, i64 0, i32 0, i32 0, i32 1, i32 1
  %12 = bitcast %"struct.std::__1::__compressed_pair_elem.1446"* %11 to i64*
  %13 = getelementptr inbounds %"class.v8::internal::ZoneMap.1442", %"class.v8::internal::ZoneMap.1442"* %3, i64 0, i32 0, i32 0, i32 1
  %14 = bitcast %"class.std::__1::__compressed_pair.1445"* %13 to i64*
  store i64 0, i64* %14, align 8
  store i64 %9, i64* %12, align 8
  %15 = getelementptr inbounds %"class.v8::internal::ZoneMap.1442", %"class.v8::internal::ZoneMap.1442"* %3, i64 0, i32 0, i32 0, i32 2, i32 0, i32 0
  store i64 0, i64* %15, align 8
  %16 = getelementptr inbounds %"class.v8::internal::ZoneMap.1442", %"class.v8::internal::ZoneMap.1442"* %3, i64 0, i32 0, i32 0, i32 1, i32 0, i32 0
  store %"class.std::__1::__tree_end_node"* %16, %"class.std::__1::__tree_end_node"** %10, align 8
  %17 = getelementptr inbounds %"class.v8::internal::compiler::LiveRangeConnector", %"class.v8::internal::compiler::LiveRangeConnector"* %0, i64 0, i32 0
  %18 = load %"class.v8::internal::compiler::TopTierRegisterAllocationData"*, %"class.v8::internal::compiler::TopTierRegisterAllocationData"** %17, align 8
  %19 = getelementptr inbounds %"class.v8::internal::compiler::TopTierRegisterAllocationData", %"class.v8::internal::compiler::TopTierRegisterAllocationData"* %18, i64 0, i32 9, i32 0
  %20 = getelementptr inbounds %"class.v8::internal::compiler::TopTierRegisterAllocationData", %"class.v8::internal::compiler::TopTierRegisterAllocationData"* %18, i64 0, i32 9, i32 0, i32 0, i32 1
  %21 = bitcast %"class.v8::internal::compiler::TopLevelLiveRange"*** %20 to i64*
  %22 = load i64, i64* %21, align 8
  %23 = bitcast %"class.std::__1::vector"* %19 to i64*
  %24 = load i64, i64* %23, align 8
  %25 = sub i64 %22, %24
  %26 = inttoptr i64 %24 to %"class.v8::internal::compiler::TopLevelLiveRange"**
  %27 = inttoptr i64 %22 to %"class.v8::internal::compiler::TopLevelLiveRange"**
  %28 = icmp eq %"class.v8::internal::compiler::TopLevelLiveRange"** %26, %27
  br i1 %28, label %1457, label %29

29:                                               ; preds = %2
  %30 = bitcast %"class.v8::internal::compiler::InstructionOperand"* %4 to i8*
  %31 = getelementptr inbounds %"class.v8::internal::compiler::InstructionOperand", %"class.v8::internal::compiler::InstructionOperand"* %4, i64 0, i32 0
  %32 = bitcast %"class.v8::internal::compiler::InstructionOperand"* %5 to i8*
  %33 = getelementptr inbounds %"class.v8::internal::compiler::InstructionOperand", %"class.v8::internal::compiler::InstructionOperand"* %5, i64 0, i32 0
  %34 = bitcast %"class.std::__1::__tree_end_node"* %16 to %"class.std::__1::__tree_node.1536"**
  %35 = getelementptr inbounds %"class.v8::internal::ZoneMap.1442", %"class.v8::internal::ZoneMap.1442"* %3, i64 0, i32 0, i32 0, i32 1, i32 0, i32 0, i32 0
  %36 = getelementptr inbounds %"class.std::__1::__tree_end_node", %"class.std::__1::__tree_end_node"* %16, i64 0, i32 0
  %37 = getelementptr inbounds %"class.v8::internal::ZoneMap.1442", %"class.v8::internal::ZoneMap.1442"* %3, i64 0, i32 0, i32 0, i32 1, i32 1, i32 0, i32 0
  %38 = bitcast %"class.v8::internal::ZoneMap.1442"* %3 to i64*
  %39 = sub i64 %22, %24
  %40 = icmp eq i64 %25, %39
  br i1 %40, label %45, label %44, !prof !80

41:                                               ; preds = %390
  %42 = load i64, i64* %15, align 8
  %43 = icmp eq i64 %42, 0
  br i1 %43, label %1457, label %403

44:                                               ; preds = %393, %29
  call void (i8*, ...) @_Z8V8_FatalPKcz(i8* getelementptr inbounds ([18 x i8], [18 x i8]* @.str.1, i64 0, i64 0), i8* getelementptr inbounds ([49 x i8], [49 x i8]* @.str.32, i64 0, i64 0)) #17
  unreachable

45:                                               ; preds = %29, %393
  %46 = phi %"class.v8::internal::compiler::TopLevelLiveRange"** [ %391, %393 ], [ %26, %29 ]
  %47 = load %"class.v8::internal::compiler::TopLevelLiveRange"*, %"class.v8::internal::compiler::TopLevelLiveRange"** %46, align 8
  %48 = icmp eq %"class.v8::internal::compiler::TopLevelLiveRange"* %47, null
  br i1 %48, label %390, label %49

49:                                               ; preds = %45
  %50 = getelementptr inbounds %"class.v8::internal::compiler::TopLevelLiveRange", %"class.v8::internal::compiler::TopLevelLiveRange"* %47, i64 0, i32 0, i32 1
  %51 = load i32, i32* %50, align 4
  %52 = and i32 %51, 96
  %53 = icmp eq i32 %52, 96
  %54 = getelementptr inbounds %"class.v8::internal::compiler::TopLevelLiveRange", %"class.v8::internal::compiler::TopLevelLiveRange"* %47, i64 0, i32 0, i32 6
  %55 = load %"class.v8::internal::compiler::LiveRange"*, %"class.v8::internal::compiler::LiveRange"** %54, align 8
  %56 = icmp eq %"class.v8::internal::compiler::LiveRange"* %55, null
  br i1 %56, label %390, label %57

57:                                               ; preds = %49
  %58 = bitcast %"class.v8::internal::compiler::TopLevelLiveRange"* %47 to %"class.v8::internal::compiler::LiveRange"*
  %59 = getelementptr inbounds %"class.v8::internal::compiler::TopLevelLiveRange", %"class.v8::internal::compiler::TopLevelLiveRange"* %47, i64 0, i32 4
  %60 = bitcast %union.anon.36* %59 to %"class.v8::internal::BitVector"**
  br label %61

61:                                               ; preds = %57, %386
  %62 = phi %"class.v8::internal::compiler::LiveRange"* [ %55, %57 ], [ %388, %386 ]
  %63 = phi %"class.v8::internal::compiler::LiveRange"* [ %58, %57 ], [ %62, %386 ]
  %64 = getelementptr inbounds %"class.v8::internal::compiler::LiveRange", %"class.v8::internal::compiler::LiveRange"* %62, i64 0, i32 3
  %65 = load %"class.v8::internal::compiler::UseInterval"*, %"class.v8::internal::compiler::UseInterval"** %64, align 8
  %66 = getelementptr inbounds %"class.v8::internal::compiler::UseInterval", %"class.v8::internal::compiler::UseInterval"* %65, i64 0, i32 0, i32 0
  %67 = load i32, i32* %66, align 8
  %68 = getelementptr inbounds %"class.v8::internal::compiler::LiveRange", %"class.v8::internal::compiler::LiveRange"* %62, i64 0, i32 1
  %69 = load i32, i32* %68, align 4
  %70 = and i32 %69, 1
  %71 = icmp eq i32 %70, 0
  br i1 %71, label %72, label %386

72:                                               ; preds = %61
  %73 = getelementptr inbounds %"class.v8::internal::compiler::LiveRange", %"class.v8::internal::compiler::LiveRange"* %63, i64 0, i32 2
  %74 = load %"class.v8::internal::compiler::UseInterval"*, %"class.v8::internal::compiler::UseInterval"** %73, align 8
  %75 = getelementptr inbounds %"class.v8::internal::compiler::UseInterval", %"class.v8::internal::compiler::UseInterval"* %74, i64 0, i32 1, i32 0
  %76 = load i32, i32* %75, align 4
  %77 = icmp eq i32 %76, %67
  br i1 %77, label %78, label %386

78:                                               ; preds = %72
  %79 = and i32 %67, 3
  %80 = icmp eq i32 %79, 0
  br i1 %80, label %81, label %118

81:                                               ; preds = %78
  %82 = load %"class.v8::internal::compiler::TopTierRegisterAllocationData"*, %"class.v8::internal::compiler::TopTierRegisterAllocationData"** %17, align 8
  %83 = sdiv i32 %67, 4
  %84 = sext i32 %83 to i64
  %85 = getelementptr inbounds %"class.v8::internal::compiler::TopTierRegisterAllocationData", %"class.v8::internal::compiler::TopTierRegisterAllocationData"* %82, i64 0, i32 3
  %86 = load %"class.v8::internal::compiler::InstructionSequence"*, %"class.v8::internal::compiler::InstructionSequence"** %85, align 8
  %87 = getelementptr inbounds %"class.v8::internal::compiler::InstructionSequence", %"class.v8::internal::compiler::InstructionSequence"* %86, i64 0, i32 8, i32 0, i32 0, i32 2, i32 0, i32 0
  %88 = load i64, i64* %87, align 8
  %89 = icmp eq i64 %88, %84
  br i1 %89, label %99, label %90

90:                                               ; preds = %81
  %91 = call %"class.v8::internal::compiler::InstructionBlock"* @_ZNK2v88internal8compiler19InstructionSequence19GetInstructionBlockEi(%"class.v8::internal::compiler::InstructionSequence"* %86, i32 %83) #16
  %92 = getelementptr inbounds %"class.v8::internal::compiler::InstructionBlock", %"class.v8::internal::compiler::InstructionBlock"* %91, i64 0, i32 8
  %93 = load i32, i32* %92, align 4
  %94 = icmp eq i32 %93, %83
  br i1 %94, label %95, label %118

95:                                               ; preds = %90
  %96 = load %"class.v8::internal::compiler::TopTierRegisterAllocationData"*, %"class.v8::internal::compiler::TopTierRegisterAllocationData"** %17, align 8
  %97 = getelementptr inbounds %"class.v8::internal::compiler::TopTierRegisterAllocationData", %"class.v8::internal::compiler::TopTierRegisterAllocationData"* %96, i64 0, i32 3
  %98 = load %"class.v8::internal::compiler::InstructionSequence"*, %"class.v8::internal::compiler::InstructionSequence"** %97, align 8
  br label %99

99:                                               ; preds = %95, %81
  %100 = phi %"class.v8::internal::compiler::InstructionSequence"* [ %98, %95 ], [ %86, %81 ]
  %101 = call %"class.v8::internal::compiler::InstructionBlock"* @_ZNK2v88internal8compiler19InstructionSequence19GetInstructionBlockEi(%"class.v8::internal::compiler::InstructionSequence"* %100, i32 %83) #16
  %102 = getelementptr inbounds %"class.v8::internal::compiler::InstructionBlock", %"class.v8::internal::compiler::InstructionBlock"* %101, i64 0, i32 1, i32 0
  %103 = getelementptr inbounds %"class.v8::internal::compiler::InstructionBlock", %"class.v8::internal::compiler::InstructionBlock"* %101, i64 0, i32 1, i32 0, i32 0, i32 1
  %104 = bitcast %"class.v8::internal::compiler::RpoNumber"** %103 to i64*
  %105 = load i64, i64* %104, align 8
  %106 = bitcast %"class.std::__1::vector.38"* %102 to i64*
  %107 = load i64, i64* %106, align 8
  %108 = sub i64 %105, %107
  %109 = icmp eq i64 %108, 4
  br i1 %109, label %110, label %386

110:                                              ; preds = %99
  %111 = inttoptr i64 %107 to %"class.v8::internal::compiler::RpoNumber"*
  %112 = getelementptr inbounds %"class.v8::internal::compiler::InstructionBlock", %"class.v8::internal::compiler::InstructionBlock"* %101, i64 0, i32 4, i32 0
  %113 = load i32, i32* %112, align 4
  %114 = getelementptr inbounds %"class.v8::internal::compiler::RpoNumber", %"class.v8::internal::compiler::RpoNumber"* %111, i64 0, i32 0
  %115 = load i32, i32* %114, align 4
  %116 = add nsw i32 %115, 1
  %117 = icmp eq i32 %116, %113
  br i1 %117, label %118, label %386

118:                                              ; preds = %78, %110, %90
  call void @llvm.lifetime.start.p0i8(i64 8, i8* nonnull %30) #16
  %119 = getelementptr inbounds %"class.v8::internal::compiler::LiveRange", %"class.v8::internal::compiler::LiveRange"* %63, i64 0, i32 1
  %120 = load i32, i32* %119, align 4
  %121 = and i32 %120, 8064
  %122 = icmp eq i32 %121, 4096
  br i1 %122, label %133, label %123

123:                                              ; preds = %118
  %124 = lshr i32 %120, 7
  %125 = and i32 %124, 63
  %126 = lshr i32 %120, 8
  %127 = and i32 %126, 8160
  %128 = zext i32 %125 to i64
  %129 = shl nuw nsw i64 %128, 35
  %130 = or i32 %127, 5
  %131 = zext i32 %130 to i64
  %132 = or i64 %129, %131
  br label %158

133:                                              ; preds = %118
  %134 = getelementptr inbounds %"class.v8::internal::compiler::LiveRange", %"class.v8::internal::compiler::LiveRange"* %63, i64 0, i32 5
  %135 = load %"class.v8::internal::compiler::TopLevelLiveRange"*, %"class.v8::internal::compiler::TopLevelLiveRange"** %134, align 8
  %136 = getelementptr inbounds %"class.v8::internal::compiler::TopLevelLiveRange", %"class.v8::internal::compiler::TopLevelLiveRange"* %135, i64 0, i32 0, i32 1
  %137 = load i32, i32* %136, align 4
  %138 = and i32 %137, 96
  %139 = icmp eq i32 %138, 32
  br i1 %139, label %140, label %145

140:                                              ; preds = %133
  %141 = getelementptr inbounds %"class.v8::internal::compiler::TopLevelLiveRange", %"class.v8::internal::compiler::TopLevelLiveRange"* %135, i64 0, i32 3, i32 0
  %142 = load %"class.v8::internal::compiler::InstructionOperand"*, %"class.v8::internal::compiler::InstructionOperand"** %141, align 8
  %143 = getelementptr inbounds %"class.v8::internal::compiler::InstructionOperand", %"class.v8::internal::compiler::InstructionOperand"* %142, i64 0, i32 0
  %144 = load i64, i64* %143, align 8
  br label %158

145:                                              ; preds = %133
  %146 = getelementptr inbounds %"class.v8::internal::compiler::TopLevelLiveRange", %"class.v8::internal::compiler::TopLevelLiveRange"* %135, i64 0, i32 3
  %147 = bitcast %union.anon* %146 to %"class.v8::internal::compiler::SpillRange"**
  %148 = load %"class.v8::internal::compiler::SpillRange"*, %"class.v8::internal::compiler::SpillRange"** %147, align 8
  %149 = getelementptr inbounds %"class.v8::internal::compiler::SpillRange", %"class.v8::internal::compiler::SpillRange"* %148, i64 0, i32 3
  %150 = load i32, i32* %149, align 4
  %151 = lshr i32 %137, 8
  %152 = and i32 %151, 8160
  %153 = zext i32 %150 to i64
  %154 = shl i64 %153, 35
  %155 = or i32 %152, 13
  %156 = zext i32 %155 to i64
  %157 = or i64 %154, %156
  br label %158

158:                                              ; preds = %123, %140, %145
  %159 = phi i64 [ %132, %123 ], [ %144, %140 ], [ %157, %145 ]
  store i64 %159, i64* %31, align 8
  call void @llvm.lifetime.start.p0i8(i64 8, i8* nonnull %32) #16
  %160 = load i32, i32* %68, align 4
  %161 = and i32 %160, 8064
  %162 = icmp eq i32 %161, 4096
  br i1 %162, label %173, label %163

163:                                              ; preds = %158
  %164 = lshr i32 %160, 7
  %165 = and i32 %164, 63
  %166 = lshr i32 %160, 8
  %167 = and i32 %166, 8160
  %168 = zext i32 %165 to i64
  %169 = shl nuw nsw i64 %168, 35
  %170 = or i32 %167, 5
  %171 = zext i32 %170 to i64
  %172 = or i64 %169, %171
  br label %198

173:                                              ; preds = %158
  %174 = getelementptr inbounds %"class.v8::internal::compiler::LiveRange", %"class.v8::internal::compiler::LiveRange"* %62, i64 0, i32 5
  %175 = load %"class.v8::internal::compiler::TopLevelLiveRange"*, %"class.v8::internal::compiler::TopLevelLiveRange"** %174, align 8
  %176 = getelementptr inbounds %"class.v8::internal::compiler::TopLevelLiveRange", %"class.v8::internal::compiler::TopLevelLiveRange"* %175, i64 0, i32 0, i32 1
  %177 = load i32, i32* %176, align 4
  %178 = and i32 %177, 96
  %179 = icmp eq i32 %178, 32
  br i1 %179, label %180, label %185

180:                                              ; preds = %173
  %181 = getelementptr inbounds %"class.v8::internal::compiler::TopLevelLiveRange", %"class.v8::internal::compiler::TopLevelLiveRange"* %175, i64 0, i32 3, i32 0
  %182 = load %"class.v8::internal::compiler::InstructionOperand"*, %"class.v8::internal::compiler::InstructionOperand"** %181, align 8
  %183 = getelementptr inbounds %"class.v8::internal::compiler::InstructionOperand", %"class.v8::internal::compiler::InstructionOperand"* %182, i64 0, i32 0
  %184 = load i64, i64* %183, align 8
  br label %198

185:                                              ; preds = %173
  %186 = getelementptr inbounds %"class.v8::internal::compiler::TopLevelLiveRange", %"class.v8::internal::compiler::TopLevelLiveRange"* %175, i64 0, i32 3
  %187 = bitcast %union.anon* %186 to %"class.v8::internal::compiler::SpillRange"**
  %188 = load %"class.v8::internal::compiler::SpillRange"*, %"class.v8::internal::compiler::SpillRange"** %187, align 8
  %189 = getelementptr inbounds %"class.v8::internal::compiler::SpillRange", %"class.v8::internal::compiler::SpillRange"* %188, i64 0, i32 3
  %190 = load i32, i32* %189, align 4
  %191 = lshr i32 %177, 8
  %192 = and i32 %191, 8160
  %193 = zext i32 %190 to i64
  %194 = shl i64 %193, 35
  %195 = or i32 %192, 13
  %196 = zext i32 %195 to i64
  %197 = or i64 %194, %196
  br label %198

198:                                              ; preds = %163, %180, %185
  %199 = phi i64 [ %172, %163 ], [ %184, %180 ], [ %197, %185 ]
  store i64 %199, i64* %33, align 8
  %200 = and i64 %159, 7
  %201 = icmp ne i64 %200, 4
  %202 = icmp eq i64 %159, %199
  %203 = and i1 %201, %202
  br i1 %203, label %385, label %204

204:                                              ; preds = %198
  %205 = sdiv i32 %67, 4
  br i1 %53, label %206, label %246

206:                                              ; preds = %204
  %207 = icmp ugt i64 %200, 4
  %208 = and i64 %159, 24
  %209 = icmp eq i64 %208, 0
  %210 = and i1 %207, %209
  br i1 %210, label %246, label %211

211:                                              ; preds = %206
  %212 = and i64 %199, 7
  %213 = icmp ugt i64 %212, 4
  %214 = and i64 %199, 24
  %215 = icmp eq i64 %214, 0
  %216 = and i1 %213, %215
  br i1 %216, label %217, label %246

217:                                              ; preds = %211
  %218 = load %"class.v8::internal::compiler::TopTierRegisterAllocationData"*, %"class.v8::internal::compiler::TopTierRegisterAllocationData"** %17, align 8
  %219 = getelementptr inbounds %"class.v8::internal::compiler::TopTierRegisterAllocationData", %"class.v8::internal::compiler::TopTierRegisterAllocationData"* %218, i64 0, i32 3
  %220 = load %"class.v8::internal::compiler::InstructionSequence"*, %"class.v8::internal::compiler::InstructionSequence"** %219, align 8
  %221 = call %"class.v8::internal::compiler::InstructionBlock"* @_ZNK2v88internal8compiler19InstructionSequence19GetInstructionBlockEi(%"class.v8::internal::compiler::InstructionSequence"* %220, i32 %205) #16
  %222 = load %"class.v8::internal::BitVector"*, %"class.v8::internal::BitVector"** %60, align 8
  %223 = getelementptr inbounds %"class.v8::internal::compiler::InstructionBlock", %"class.v8::internal::compiler::InstructionBlock"* %221, i64 0, i32 4, i32 0
  %224 = load i32, i32* %223, align 4
  %225 = getelementptr inbounds %"class.v8::internal::BitVector", %"class.v8::internal::BitVector"* %222, i64 0, i32 1
  %226 = load i32, i32* %225, align 4
  %227 = icmp eq i32 %226, 1
  br i1 %227, label %228, label %235

228:                                              ; preds = %217
  %229 = zext i32 %224 to i64
  %230 = shl i64 1, %229
  %231 = getelementptr inbounds %"class.v8::internal::BitVector", %"class.v8::internal::BitVector"* %222, i64 0, i32 2
  %232 = bitcast %"union.v8::internal::BitVector::DataStorage"* %231 to i64*
  %233 = load i64, i64* %232, align 8
  %234 = or i64 %233, %230
  store i64 %234, i64* %232, align 8
  br label %246

235:                                              ; preds = %217
  %236 = srem i32 %224, 64
  %237 = zext i32 %236 to i64
  %238 = shl i64 1, %237
  %239 = getelementptr inbounds %"class.v8::internal::BitVector", %"class.v8::internal::BitVector"* %222, i64 0, i32 2, i32 0
  %240 = load i64*, i64** %239, align 8
  %241 = sdiv i32 %224, 64
  %242 = sext i32 %241 to i64
  %243 = getelementptr inbounds i64, i64* %240, i64 %242
  %244 = load i64, i64* %243, align 8
  %245 = or i64 %244, %238
  store i64 %245, i64* %243, align 8
  br label %246

246:                                              ; preds = %235, %228, %211, %206, %204
  %247 = and i32 %67, 2
  %248 = icmp eq i32 %247, 0
  %249 = and i32 %67, 1
  br i1 %248, label %250, label %252

250:                                              ; preds = %246
  %251 = zext i32 %249 to i64
  br label %257

252:                                              ; preds = %246
  %253 = add nsw i32 %249, %205
  %254 = trunc i32 %249 to i8
  %255 = xor i8 %254, 1
  %256 = zext i8 %255 to i64
  br label %257

257:                                              ; preds = %252, %250
  %258 = phi i32 [ %205, %250 ], [ %253, %252 ]
  %259 = phi i64 [ %251, %250 ], [ %256, %252 ]
  %260 = phi i8 [ 0, %250 ], [ %255, %252 ]
  %261 = load %"class.v8::internal::compiler::TopTierRegisterAllocationData"*, %"class.v8::internal::compiler::TopTierRegisterAllocationData"** %17, align 8
  %262 = getelementptr inbounds %"class.v8::internal::compiler::TopTierRegisterAllocationData", %"class.v8::internal::compiler::TopTierRegisterAllocationData"* %261, i64 0, i32 3
  %263 = load %"class.v8::internal::compiler::InstructionSequence"*, %"class.v8::internal::compiler::InstructionSequence"** %262, align 8
  %264 = sext i32 %258 to i64
  %265 = getelementptr inbounds %"class.v8::internal::compiler::InstructionSequence", %"class.v8::internal::compiler::InstructionSequence"* %263, i64 0, i32 8, i32 0, i32 0, i32 1
  %266 = load i64, i64* %265, align 8
  %267 = add i64 %266, %264
  %268 = getelementptr inbounds %"class.v8::internal::compiler::InstructionSequence", %"class.v8::internal::compiler::InstructionSequence"* %263, i64 0, i32 8, i32 0, i32 0, i32 0, i32 1
  %269 = load %"class.v8::internal::compiler::Instruction"***, %"class.v8::internal::compiler::Instruction"**** %268, align 8
  %270 = lshr i64 %267, 9
  %271 = getelementptr inbounds %"class.v8::internal::compiler::Instruction"**, %"class.v8::internal::compiler::Instruction"*** %269, i64 %270
  %272 = load %"class.v8::internal::compiler::Instruction"**, %"class.v8::internal::compiler::Instruction"*** %271, align 8
  %273 = and i64 %267, 511
  %274 = getelementptr inbounds %"class.v8::internal::compiler::Instruction"*, %"class.v8::internal::compiler::Instruction"** %272, i64 %273
  %275 = load %"class.v8::internal::compiler::Instruction"*, %"class.v8::internal::compiler::Instruction"** %274, align 8
  %276 = getelementptr inbounds %"class.v8::internal::compiler::InstructionSequence", %"class.v8::internal::compiler::InstructionSequence"* %263, i64 0, i32 1
  %277 = load %"class.v8::internal::Zone"*, %"class.v8::internal::Zone"** %276, align 8
  %278 = ptrtoint %"class.v8::internal::Zone"* %277 to i64
  %279 = getelementptr inbounds %"class.v8::internal::compiler::Instruction", %"class.v8::internal::compiler::Instruction"* %275, i64 0, i32 2, i64 %259
  %280 = load %"class.v8::internal::compiler::ParallelMove"*, %"class.v8::internal::compiler::ParallelMove"** %279, align 8
  %281 = icmp eq %"class.v8::internal::compiler::ParallelMove"* %280, null
  br i1 %281, label %282, label %299

282:                                              ; preds = %257
  %283 = getelementptr inbounds %"class.v8::internal::Zone", %"class.v8::internal::Zone"* %277, i64 0, i32 2
  %284 = load i64, i64* %283, align 8
  %285 = getelementptr inbounds %"class.v8::internal::Zone", %"class.v8::internal::Zone"* %277, i64 0, i32 3
  %286 = load i64, i64* %285, align 8
  %287 = sub i64 %286, %284
  %288 = icmp ult i64 %287, 32
  br i1 %288, label %289, label %291, !prof !2

289:                                              ; preds = %282
  %290 = call i64 @_ZN2v88internal4Zone9NewExpandEm(%"class.v8::internal::Zone"* %277, i64 32) #16
  br label %293

291:                                              ; preds = %282
  %292 = add i64 %284, 32
  store i64 %292, i64* %283, align 8
  br label %293

293:                                              ; preds = %291, %289
  %294 = phi i64 [ %290, %289 ], [ %284, %291 ]
  %295 = inttoptr i64 %294 to i8*
  %296 = inttoptr i64 %294 to %"class.v8::internal::compiler::ParallelMove"*
  %297 = getelementptr inbounds %"class.v8::internal::compiler::ParallelMove", %"class.v8::internal::compiler::ParallelMove"* %296, i64 0, i32 0, i32 0, i32 0, i32 2, i32 1
  %298 = bitcast %"struct.std::__1::__compressed_pair_elem.1208"* %297 to i64*
  call void @llvm.memset.p0i8.i64(i8* align 8 %295, i8 0, i64 24, i1 false) #16
  store i64 %278, i64* %298, align 8
  store %"class.v8::internal::compiler::ParallelMove"* %296, %"class.v8::internal::compiler::ParallelMove"** %279, align 8
  br label %299

299:                                              ; preds = %257, %293
  %300 = phi %"class.v8::internal::compiler::ParallelMove"* [ %296, %293 ], [ %280, %257 ]
  %301 = and i8 %260, 1
  %302 = icmp eq i8 %301, 0
  br i1 %302, label %303, label %307

303:                                              ; preds = %299
  %304 = getelementptr inbounds %"class.v8::internal::compiler::ParallelMove", %"class.v8::internal::compiler::ParallelMove"* %300, i64 0, i32 0, i32 0, i32 0, i32 2, i32 1, i32 0, i32 0
  %305 = load %"class.v8::internal::Zone"*, %"class.v8::internal::Zone"** %304, align 8
  %306 = call %"class.v8::internal::compiler::MoveOperands"* @_ZN2v88internal8compiler12ParallelMove7AddMoveERKNS1_18InstructionOperandES5_PNS0_4ZoneE(%"class.v8::internal::compiler::ParallelMove"* %300, %"class.v8::internal::compiler::InstructionOperand"* nonnull dereferenceable(8) %4, %"class.v8::internal::compiler::InstructionOperand"* nonnull dereferenceable(8) %5, %"class.v8::internal::Zone"* %305) #16
  br label %385

307:                                              ; preds = %299
  %308 = load i64, i64* %31, align 8
  %309 = load i64, i64* %33, align 8, !noalias !180
  %310 = load %"class.std::__1::__tree_node.1536"*, %"class.std::__1::__tree_node.1536"** %34, align 8
  %311 = icmp eq %"class.std::__1::__tree_node.1536"* %310, null
  br i1 %311, label %346, label %312

312:                                              ; preds = %307, %342
  %313 = phi %"class.std::__1::__tree_node.1536"* [ %345, %342 ], [ %310, %307 ]
  %314 = phi %"class.std::__1::__tree_node_base"** [ %344, %342 ], [ %35, %307 ]
  %315 = getelementptr inbounds %"class.std::__1::__tree_node.1536", %"class.std::__1::__tree_node.1536"* %313, i64 0, i32 1, i32 0, i32 0, i32 0
  %316 = load %"class.v8::internal::compiler::ParallelMove"*, %"class.v8::internal::compiler::ParallelMove"** %315, align 8
  %317 = icmp eq %"class.v8::internal::compiler::ParallelMove"* %300, %316
  br i1 %317, label %318, label %322

318:                                              ; preds = %312
  %319 = getelementptr inbounds %"class.std::__1::__tree_node.1536", %"class.std::__1::__tree_node.1536"* %313, i64 0, i32 1, i32 0, i32 0, i32 1, i32 0
  %320 = load i64, i64* %319, align 8
  %321 = icmp ult i64 %308, %320
  br i1 %321, label %324, label %330

322:                                              ; preds = %312
  %323 = icmp ult %"class.v8::internal::compiler::ParallelMove"* %300, %316
  br i1 %323, label %324, label %332

324:                                              ; preds = %322, %318
  %325 = getelementptr inbounds %"class.std::__1::__tree_node.1536", %"class.std::__1::__tree_node.1536"* %313, i64 0, i32 0, i32 0, i32 0
  %326 = load %"class.std::__1::__tree_node_base"*, %"class.std::__1::__tree_node_base"** %325, align 8
  %327 = icmp eq %"class.std::__1::__tree_node_base"* %326, null
  br i1 %327, label %328, label %342

328:                                              ; preds = %324
  %329 = getelementptr inbounds %"class.std::__1::__tree_node.1536", %"class.std::__1::__tree_node.1536"* %313, i64 0, i32 0, i32 0
  br label %346

330:                                              ; preds = %318
  %331 = icmp ult i64 %320, %308
  br i1 %331, label %334, label %340

332:                                              ; preds = %322
  %333 = icmp ult %"class.v8::internal::compiler::ParallelMove"* %316, %300
  br i1 %333, label %334, label %340

334:                                              ; preds = %332, %330
  %335 = getelementptr inbounds %"class.std::__1::__tree_node.1536", %"class.std::__1::__tree_node.1536"* %313, i64 0, i32 0, i32 1
  %336 = load %"class.std::__1::__tree_node_base"*, %"class.std::__1::__tree_node_base"** %335, align 8
  %337 = icmp eq %"class.std::__1::__tree_node_base"* %336, null
  br i1 %337, label %338, label %342

338:                                              ; preds = %334
  %339 = getelementptr inbounds %"class.std::__1::__tree_node.1536", %"class.std::__1::__tree_node.1536"* %313, i64 0, i32 0, i32 0
  br label %346

340:                                              ; preds = %332, %330
  %341 = getelementptr inbounds %"class.std::__1::__tree_node.1536", %"class.std::__1::__tree_node.1536"* %313, i64 0, i32 0, i32 0
  br label %346

342:                                              ; preds = %334, %324
  %343 = phi %"class.std::__1::__tree_node_base"* [ %326, %324 ], [ %336, %334 ]
  %344 = phi %"class.std::__1::__tree_node_base"** [ %325, %324 ], [ %335, %334 ]
  %345 = bitcast %"class.std::__1::__tree_node_base"* %343 to %"class.std::__1::__tree_node.1536"*
  br label %312

346:                                              ; preds = %307, %340, %338, %328
  %347 = phi %"class.std::__1::__tree_end_node"* [ %329, %328 ], [ %339, %338 ], [ %341, %340 ], [ %16, %307 ]
  %348 = phi %"class.std::__1::__tree_node_base"** [ %325, %328 ], [ %335, %338 ], [ %314, %340 ], [ %36, %307 ]
  %349 = bitcast %"class.std::__1::__tree_node_base"** %348 to %"class.std::__1::__tree_node.1536"**
  %350 = load %"class.std::__1::__tree_node.1536"*, %"class.std::__1::__tree_node.1536"** %349, align 8
  %351 = icmp eq %"class.std::__1::__tree_node.1536"* %350, null
  br i1 %351, label %352, label %385

352:                                              ; preds = %346
  %353 = load %"class.v8::internal::Zone"*, %"class.v8::internal::Zone"** %37, align 8, !noalias !183
  %354 = getelementptr inbounds %"class.v8::internal::Zone", %"class.v8::internal::Zone"* %353, i64 0, i32 2
  %355 = load i64, i64* %354, align 8, !noalias !183
  %356 = getelementptr inbounds %"class.v8::internal::Zone", %"class.v8::internal::Zone"* %353, i64 0, i32 3
  %357 = load i64, i64* %356, align 8, !noalias !183
  %358 = sub i64 %357, %355
  %359 = icmp ult i64 %358, 56
  br i1 %359, label %360, label %362, !prof !2

360:                                              ; preds = %352
  %361 = call i64 @_ZN2v88internal4Zone9NewExpandEm(%"class.v8::internal::Zone"* %353, i64 56) #16, !noalias !183
  br label %364

362:                                              ; preds = %352
  %363 = add i64 %355, 56
  store i64 %363, i64* %354, align 8, !noalias !183
  br label %364

364:                                              ; preds = %362, %360
  %365 = phi i64 [ %361, %360 ], [ %355, %362 ]
  %366 = inttoptr i64 %365 to %"class.std::__1::__tree_node.1536"*
  %367 = getelementptr inbounds %"class.std::__1::__tree_node.1536", %"class.std::__1::__tree_node.1536"* %366, i64 0, i32 1, i32 0, i32 0, i32 0
  store %"class.v8::internal::compiler::ParallelMove"* %300, %"class.v8::internal::compiler::ParallelMove"** %367, align 8, !noalias !183
  %368 = getelementptr inbounds %"class.std::__1::__tree_node.1536", %"class.std::__1::__tree_node.1536"* %366, i64 0, i32 1, i32 0, i32 0, i32 1, i32 0
  store i64 %308, i64* %368, align 8, !noalias !183
  %369 = getelementptr inbounds %"class.std::__1::__tree_node.1536", %"class.std::__1::__tree_node.1536"* %366, i64 0, i32 1, i32 0, i32 1, i32 0
  store i64 %309, i64* %369, align 8, !noalias !183
  %370 = inttoptr i64 %365 to %"class.std::__1::__tree_node_base"*
  %371 = getelementptr inbounds %"class.std::__1::__tree_node_base", %"class.std::__1::__tree_node_base"* %370, i64 0, i32 2
  %372 = inttoptr i64 %365 to i8*
  call void @llvm.memset.p0i8.i64(i8* align 8 %372, i8 0, i64 16, i1 false) #16
  store %"class.std::__1::__tree_end_node"* %347, %"class.std::__1::__tree_end_node"** %371, align 8
  store %"class.std::__1::__tree_node_base"* %370, %"class.std::__1::__tree_node_base"** %348, align 8
  %373 = load %"class.std::__1::__tree_end_node"*, %"class.std::__1::__tree_end_node"** %10, align 8
  %374 = getelementptr inbounds %"class.std::__1::__tree_end_node", %"class.std::__1::__tree_end_node"* %373, i64 0, i32 0
  %375 = load %"class.std::__1::__tree_node_base"*, %"class.std::__1::__tree_node_base"** %374, align 8
  %376 = icmp eq %"class.std::__1::__tree_node_base"* %375, null
  br i1 %376, label %380, label %377

377:                                              ; preds = %364
  %378 = ptrtoint %"class.std::__1::__tree_node_base"* %375 to i64
  store i64 %378, i64* %38, align 8
  %379 = load %"class.std::__1::__tree_node_base"*, %"class.std::__1::__tree_node_base"** %348, align 8
  br label %380

380:                                              ; preds = %377, %364
  %381 = phi %"class.std::__1::__tree_node_base"* [ %370, %364 ], [ %379, %377 ]
  %382 = load %"class.std::__1::__tree_node_base"*, %"class.std::__1::__tree_node_base"** %35, align 8
  call void @_ZNSt3__127__tree_balance_after_insertIPNS_16__tree_node_baseIPvEEEEvT_S5_(%"class.std::__1::__tree_node_base"* %382, %"class.std::__1::__tree_node_base"* %381) #16
  %383 = load i64, i64* %15, align 8
  %384 = add i64 %383, 1
  store i64 %384, i64* %15, align 8
  br label %385

385:                                              ; preds = %380, %346, %303, %198
  call void @llvm.lifetime.end.p0i8(i64 8, i8* nonnull %32) #16
  call void @llvm.lifetime.end.p0i8(i64 8, i8* nonnull %30) #16
  br label %386

386:                                              ; preds = %72, %61, %99, %110, %385
  %387 = getelementptr inbounds %"class.v8::internal::compiler::LiveRange", %"class.v8::internal::compiler::LiveRange"* %62, i64 0, i32 6
  %388 = load %"class.v8::internal::compiler::LiveRange"*, %"class.v8::internal::compiler::LiveRange"** %387, align 8
  %389 = icmp eq %"class.v8::internal::compiler::LiveRange"* %388, null
  br i1 %389, label %390, label %61

390:                                              ; preds = %386, %49, %45
  %391 = getelementptr inbounds %"class.v8::internal::compiler::TopLevelLiveRange"*, %"class.v8::internal::compiler::TopLevelLiveRange"** %46, i64 1
  %392 = icmp eq %"class.v8::internal::compiler::TopLevelLiveRange"** %391, %27
  br i1 %392, label %41, label %393

393:                                              ; preds = %390
  %394 = load %"class.v8::internal::compiler::TopTierRegisterAllocationData"*, %"class.v8::internal::compiler::TopTierRegisterAllocationData"** %17, align 8
  %395 = getelementptr inbounds %"class.v8::internal::compiler::TopTierRegisterAllocationData", %"class.v8::internal::compiler::TopTierRegisterAllocationData"* %394, i64 0, i32 9, i32 0, i32 0, i32 1
  %396 = bitcast %"class.v8::internal::compiler::TopLevelLiveRange"*** %395 to i64*
  %397 = load i64, i64* %396, align 8
  %398 = getelementptr inbounds %"class.v8::internal::compiler::TopTierRegisterAllocationData", %"class.v8::internal::compiler::TopTierRegisterAllocationData"* %394, i64 0, i32 9, i32 0
  %399 = bitcast %"class.std::__1::vector"* %398 to i64*
  %400 = load i64, i64* %399, align 8
  %401 = sub i64 %397, %400
  %402 = icmp eq i64 %25, %401
  br i1 %402, label %45, label %44, !prof !80

403:                                              ; preds = %41
  %404 = bitcast %"class.v8::internal::ZoneVector.1203"* %6 to i8*
  call void @llvm.lifetime.start.p0i8(i64 32, i8* nonnull %404) #16
  %405 = getelementptr inbounds %"class.v8::internal::ZoneVector.1203", %"class.v8::internal::ZoneVector.1203"* %6, i64 0, i32 0, i32 0, i32 2, i32 1
  %406 = bitcast %"struct.std::__1::__compressed_pair_elem.1208"* %405 to i64*
  call void @llvm.memset.p0i8.i64(i8* nonnull align 8 %404, i8 0, i64 24, i1 false) #16
  store i64 %9, i64* %406, align 8
  %407 = bitcast %"class.v8::internal::ZoneVector.1203"* %7 to i8*
  call void @llvm.lifetime.start.p0i8(i64 32, i8* nonnull %407) #16
  %408 = getelementptr inbounds %"class.v8::internal::ZoneVector.1203", %"class.v8::internal::ZoneVector.1203"* %7, i64 0, i32 0, i32 0, i32 2, i32 1
  %409 = bitcast %"struct.std::__1::__compressed_pair_elem.1208"* %408 to i64*
  call void @llvm.memset.p0i8.i64(i8* nonnull align 8 %407, i8 0, i64 24, i1 false) #16
  store i64 %9, i64* %409, align 8
  %410 = getelementptr inbounds %"class.v8::internal::ZoneVector.1203", %"class.v8::internal::ZoneVector.1203"* %6, i64 0, i32 0, i32 0, i32 2, i32 0, i32 0
  %411 = bitcast %"class.v8::internal::compiler::MoveOperands"*** %410 to i64*
  %412 = bitcast %"class.v8::internal::ZoneVector.1203"* %6 to i64*
  %413 = getelementptr inbounds %"class.v8::internal::ZoneVector.1203", %"class.v8::internal::ZoneVector.1203"* %6, i64 0, i32 0, i32 0, i32 1
  %414 = bitcast %"class.v8::internal::compiler::MoveOperands"*** %413 to i64*
  %415 = getelementptr inbounds %"class.v8::internal::Zone", %"class.v8::internal::Zone"* %1, i64 0, i32 2
  %416 = load i64, i64* %415, align 8
  %417 = getelementptr inbounds %"class.v8::internal::Zone", %"class.v8::internal::Zone"* %1, i64 0, i32 3
  %418 = load i64, i64* %417, align 8
  %419 = sub i64 %418, %416
  %420 = icmp ult i64 %419, 32
  br i1 %420, label %426, label %421, !prof !2

421:                                              ; preds = %403
  %422 = add i64 %416, 32
  store i64 %422, i64* %415, align 8
  %423 = inttoptr i64 %416 to %"class.v8::internal::compiler::MoveOperands"**
  %424 = getelementptr inbounds %"class.v8::internal::compiler::MoveOperands"*, %"class.v8::internal::compiler::MoveOperands"** %423, i64 4
  %425 = ptrtoint %"class.v8::internal::compiler::MoveOperands"** %424 to i64
  br label %608

426:                                              ; preds = %403
  %427 = call i64 @_ZN2v88internal4Zone9NewExpandEm(%"class.v8::internal::Zone"* %1, i64 32) #16
  %428 = getelementptr inbounds %"class.v8::internal::ZoneVector.1203", %"class.v8::internal::ZoneVector.1203"* %6, i64 0, i32 0, i32 0, i32 0
  %429 = load %"class.v8::internal::compiler::MoveOperands"**, %"class.v8::internal::compiler::MoveOperands"*** %428, align 8
  %430 = ptrtoint %"class.v8::internal::compiler::MoveOperands"** %429 to i64
  %431 = load %"class.v8::internal::compiler::MoveOperands"**, %"class.v8::internal::compiler::MoveOperands"*** %413, align 8
  %432 = inttoptr i64 %427 to %"class.v8::internal::compiler::MoveOperands"**
  %433 = inttoptr i64 %427 to i8*
  %434 = getelementptr inbounds %"class.v8::internal::compiler::MoveOperands"*, %"class.v8::internal::compiler::MoveOperands"** %432, i64 4
  %435 = ptrtoint %"class.v8::internal::compiler::MoveOperands"** %434 to i64
  %436 = icmp eq %"class.v8::internal::compiler::MoveOperands"** %431, %429
  br i1 %436, label %608, label %437

437:                                              ; preds = %426
  %438 = getelementptr %"class.v8::internal::compiler::MoveOperands"*, %"class.v8::internal::compiler::MoveOperands"** %431, i64 -1
  %439 = ptrtoint %"class.v8::internal::compiler::MoveOperands"** %438 to i64
  %440 = sub i64 %439, %430
  %441 = lshr i64 %440, 3
  %442 = add nuw nsw i64 %441, 1
  %443 = icmp ult i64 %442, 4
  br i1 %443, label %535, label %444

444:                                              ; preds = %437
  %445 = getelementptr %"class.v8::internal::compiler::MoveOperands"*, %"class.v8::internal::compiler::MoveOperands"** %431, i64 -1
  %446 = ptrtoint %"class.v8::internal::compiler::MoveOperands"** %445 to i64
  %447 = sub i64 %446, %430
  %448 = lshr i64 %447, 3
  %449 = xor i64 %448, -1
  %450 = getelementptr %"class.v8::internal::compiler::MoveOperands"*, %"class.v8::internal::compiler::MoveOperands"** %432, i64 %449
  %451 = getelementptr %"class.v8::internal::compiler::MoveOperands"*, %"class.v8::internal::compiler::MoveOperands"** %431, i64 %449
  %452 = bitcast %"class.v8::internal::compiler::MoveOperands"** %451 to i8*
  %453 = icmp ult %"class.v8::internal::compiler::MoveOperands"** %450, %431
  %454 = icmp ult i8* %452, %433
  %455 = and i1 %453, %454
  br i1 %455, label %535, label %456

456:                                              ; preds = %444
  %457 = and i64 %442, 4611686018427387900
  %458 = sub nsw i64 0, %457
  %459 = getelementptr %"class.v8::internal::compiler::MoveOperands"*, %"class.v8::internal::compiler::MoveOperands"** %432, i64 %458
  %460 = sub nsw i64 0, %457
  %461 = getelementptr %"class.v8::internal::compiler::MoveOperands"*, %"class.v8::internal::compiler::MoveOperands"** %431, i64 %460
  %462 = add nsw i64 %457, -4
  %463 = lshr exact i64 %462, 2
  %464 = add nuw nsw i64 %463, 1
  %465 = and i64 %464, 1
  %466 = icmp eq i64 %462, 0
  br i1 %466, label %511, label %467

467:                                              ; preds = %456
  %468 = sub nuw nsw i64 %464, %465
  %469 = getelementptr %"class.v8::internal::compiler::MoveOperands"*, %"class.v8::internal::compiler::MoveOperands"** %432, i64 -1
  %470 = getelementptr %"class.v8::internal::compiler::MoveOperands"*, %"class.v8::internal::compiler::MoveOperands"** %431, i64 -1
  %471 = getelementptr %"class.v8::internal::compiler::MoveOperands"*, %"class.v8::internal::compiler::MoveOperands"** %432, i64 -1
  %472 = getelementptr %"class.v8::internal::compiler::MoveOperands"*, %"class.v8::internal::compiler::MoveOperands"** %431, i64 -1
  br label %473

473:                                              ; preds = %473, %467
  %474 = phi i64 [ 0, %467 ], [ %508, %473 ]
  %475 = phi i64 [ %468, %467 ], [ %509, %473 ]
  %476 = sub i64 0, %474
  %477 = sub i64 0, %474
  %478 = getelementptr inbounds %"class.v8::internal::compiler::MoveOperands"*, %"class.v8::internal::compiler::MoveOperands"** %469, i64 %476
  %479 = getelementptr inbounds %"class.v8::internal::compiler::MoveOperands"*, %"class.v8::internal::compiler::MoveOperands"** %470, i64 %477
  %480 = getelementptr inbounds %"class.v8::internal::compiler::MoveOperands"*, %"class.v8::internal::compiler::MoveOperands"** %479, i64 -1
  %481 = bitcast %"class.v8::internal::compiler::MoveOperands"** %480 to <2 x i64>*
  %482 = load <2 x i64>, <2 x i64>* %481, align 8, !alias.scope !186
  %483 = getelementptr inbounds %"class.v8::internal::compiler::MoveOperands"*, %"class.v8::internal::compiler::MoveOperands"** %479, i64 -2
  %484 = getelementptr inbounds %"class.v8::internal::compiler::MoveOperands"*, %"class.v8::internal::compiler::MoveOperands"** %483, i64 -1
  %485 = bitcast %"class.v8::internal::compiler::MoveOperands"** %484 to <2 x i64>*
  %486 = load <2 x i64>, <2 x i64>* %485, align 8, !alias.scope !186
  %487 = getelementptr inbounds %"class.v8::internal::compiler::MoveOperands"*, %"class.v8::internal::compiler::MoveOperands"** %478, i64 -1
  %488 = bitcast %"class.v8::internal::compiler::MoveOperands"** %487 to <2 x i64>*
  store <2 x i64> %482, <2 x i64>* %488, align 8, !alias.scope !189, !noalias !186
  %489 = getelementptr inbounds %"class.v8::internal::compiler::MoveOperands"*, %"class.v8::internal::compiler::MoveOperands"** %478, i64 -2
  %490 = getelementptr inbounds %"class.v8::internal::compiler::MoveOperands"*, %"class.v8::internal::compiler::MoveOperands"** %489, i64 -1
  %491 = bitcast %"class.v8::internal::compiler::MoveOperands"** %490 to <2 x i64>*
  store <2 x i64> %486, <2 x i64>* %491, align 8, !alias.scope !189, !noalias !186
  %492 = sub nuw nsw i64 -4, %474
  %493 = sub nuw nsw i64 -4, %474
  %494 = getelementptr inbounds %"class.v8::internal::compiler::MoveOperands"*, %"class.v8::internal::compiler::MoveOperands"** %471, i64 %492
  %495 = getelementptr inbounds %"class.v8::internal::compiler::MoveOperands"*, %"class.v8::internal::compiler::MoveOperands"** %472, i64 %493
  %496 = getelementptr inbounds %"class.v8::internal::compiler::MoveOperands"*, %"class.v8::internal::compiler::MoveOperands"** %495, i64 -1
  %497 = bitcast %"class.v8::internal::compiler::MoveOperands"** %496 to <2 x i64>*
  %498 = load <2 x i64>, <2 x i64>* %497, align 8, !alias.scope !186
  %499 = getelementptr inbounds %"class.v8::internal::compiler::MoveOperands"*, %"class.v8::internal::compiler::MoveOperands"** %495, i64 -2
  %500 = getelementptr inbounds %"class.v8::internal::compiler::MoveOperands"*, %"class.v8::internal::compiler::MoveOperands"** %499, i64 -1
  %501 = bitcast %"class.v8::internal::compiler::MoveOperands"** %500 to <2 x i64>*
  %502 = load <2 x i64>, <2 x i64>* %501, align 8, !alias.scope !186
  %503 = getelementptr inbounds %"class.v8::internal::compiler::MoveOperands"*, %"class.v8::internal::compiler::MoveOperands"** %494, i64 -1
  %504 = bitcast %"class.v8::internal::compiler::MoveOperands"** %503 to <2 x i64>*
  store <2 x i64> %498, <2 x i64>* %504, align 8, !alias.scope !189, !noalias !186
  %505 = getelementptr inbounds %"class.v8::internal::compiler::MoveOperands"*, %"class.v8::internal::compiler::MoveOperands"** %494, i64 -2
  %506 = getelementptr inbounds %"class.v8::internal::compiler::MoveOperands"*, %"class.v8::internal::compiler::MoveOperands"** %505, i64 -1
  %507 = bitcast %"class.v8::internal::compiler::MoveOperands"** %506 to <2 x i64>*
  store <2 x i64> %502, <2 x i64>* %507, align 8, !alias.scope !189, !noalias !186
  %508 = add i64 %474, 8
  %509 = add i64 %475, -2
  %510 = icmp eq i64 %509, 0
  br i1 %510, label %511, label %473, !llvm.loop !191

511:                                              ; preds = %473, %456
  %512 = phi i64 [ 0, %456 ], [ %508, %473 ]
  %513 = icmp eq i64 %465, 0
  br i1 %513, label %533, label %514

514:                                              ; preds = %511
  %515 = sub i64 0, %512
  %516 = getelementptr %"class.v8::internal::compiler::MoveOperands"*, %"class.v8::internal::compiler::MoveOperands"** %432, i64 -1
  %517 = sub i64 0, %512
  %518 = getelementptr %"class.v8::internal::compiler::MoveOperands"*, %"class.v8::internal::compiler::MoveOperands"** %431, i64 -1
  %519 = getelementptr inbounds %"class.v8::internal::compiler::MoveOperands"*, %"class.v8::internal::compiler::MoveOperands"** %516, i64 %515
  %520 = getelementptr inbounds %"class.v8::internal::compiler::MoveOperands"*, %"class.v8::internal::compiler::MoveOperands"** %518, i64 %517
  %521 = getelementptr inbounds %"class.v8::internal::compiler::MoveOperands"*, %"class.v8::internal::compiler::MoveOperands"** %520, i64 -1
  %522 = bitcast %"class.v8::internal::compiler::MoveOperands"** %521 to <2 x i64>*
  %523 = load <2 x i64>, <2 x i64>* %522, align 8, !alias.scope !186
  %524 = getelementptr inbounds %"class.v8::internal::compiler::MoveOperands"*, %"class.v8::internal::compiler::MoveOperands"** %520, i64 -2
  %525 = getelementptr inbounds %"class.v8::internal::compiler::MoveOperands"*, %"class.v8::internal::compiler::MoveOperands"** %524, i64 -1
  %526 = bitcast %"class.v8::internal::compiler::MoveOperands"** %525 to <2 x i64>*
  %527 = load <2 x i64>, <2 x i64>* %526, align 8, !alias.scope !186
  %528 = getelementptr inbounds %"class.v8::internal::compiler::MoveOperands"*, %"class.v8::internal::compiler::MoveOperands"** %519, i64 -1
  %529 = bitcast %"class.v8::internal::compiler::MoveOperands"** %528 to <2 x i64>*
  store <2 x i64> %523, <2 x i64>* %529, align 8, !alias.scope !189, !noalias !186
  %530 = getelementptr inbounds %"class.v8::internal::compiler::MoveOperands"*, %"class.v8::internal::compiler::MoveOperands"** %519, i64 -2
  %531 = getelementptr inbounds %"class.v8::internal::compiler::MoveOperands"*, %"class.v8::internal::compiler::MoveOperands"** %530, i64 -1
  %532 = bitcast %"class.v8::internal::compiler::MoveOperands"** %531 to <2 x i64>*
  store <2 x i64> %527, <2 x i64>* %532, align 8, !alias.scope !189, !noalias !186
  br label %533

533:                                              ; preds = %511, %514
  %534 = icmp eq i64 %442, %457
  br i1 %534, label %605, label %535

535:                                              ; preds = %533, %444, %437
  %536 = phi %"class.v8::internal::compiler::MoveOperands"** [ %432, %444 ], [ %432, %437 ], [ %459, %533 ]
  %537 = phi %"class.v8::internal::compiler::MoveOperands"** [ %431, %444 ], [ %431, %437 ], [ %461, %533 ]
  %538 = getelementptr %"class.v8::internal::compiler::MoveOperands"*, %"class.v8::internal::compiler::MoveOperands"** %537, i64 -1
  %539 = ptrtoint %"class.v8::internal::compiler::MoveOperands"** %538 to i64
  %540 = sub i64 %539, %430
  %541 = lshr i64 %540, 3
  %542 = add nuw nsw i64 %541, 1
  %543 = and i64 %542, 7
  %544 = icmp eq i64 %543, 0
  br i1 %544, label %556, label %545

545:                                              ; preds = %535, %545
  %546 = phi %"class.v8::internal::compiler::MoveOperands"** [ %549, %545 ], [ %536, %535 ]
  %547 = phi %"class.v8::internal::compiler::MoveOperands"** [ %550, %545 ], [ %537, %535 ]
  %548 = phi i64 [ %554, %545 ], [ %543, %535 ]
  %549 = getelementptr inbounds %"class.v8::internal::compiler::MoveOperands"*, %"class.v8::internal::compiler::MoveOperands"** %546, i64 -1
  %550 = getelementptr inbounds %"class.v8::internal::compiler::MoveOperands"*, %"class.v8::internal::compiler::MoveOperands"** %547, i64 -1
  %551 = bitcast %"class.v8::internal::compiler::MoveOperands"** %550 to i64*
  %552 = load i64, i64* %551, align 8
  %553 = bitcast %"class.v8::internal::compiler::MoveOperands"** %549 to i64*
  store i64 %552, i64* %553, align 8
  %554 = add i64 %548, -1
  %555 = icmp eq i64 %554, 0
  br i1 %555, label %556, label %545, !llvm.loop !192

556:                                              ; preds = %545, %535
  %557 = phi %"class.v8::internal::compiler::MoveOperands"** [ undef, %535 ], [ %549, %545 ]
  %558 = phi %"class.v8::internal::compiler::MoveOperands"** [ %536, %535 ], [ %549, %545 ]
  %559 = phi %"class.v8::internal::compiler::MoveOperands"** [ %537, %535 ], [ %550, %545 ]
  %560 = icmp ult i64 %540, 56
  br i1 %560, label %605, label %561

561:                                              ; preds = %556, %561
  %562 = phi %"class.v8::internal::compiler::MoveOperands"** [ %599, %561 ], [ %558, %556 ]
  %563 = phi %"class.v8::internal::compiler::MoveOperands"** [ %600, %561 ], [ %559, %556 ]
  %564 = getelementptr inbounds %"class.v8::internal::compiler::MoveOperands"*, %"class.v8::internal::compiler::MoveOperands"** %562, i64 -1
  %565 = getelementptr inbounds %"class.v8::internal::compiler::MoveOperands"*, %"class.v8::internal::compiler::MoveOperands"** %563, i64 -1
  %566 = bitcast %"class.v8::internal::compiler::MoveOperands"** %565 to i64*
  %567 = load i64, i64* %566, align 8
  %568 = bitcast %"class.v8::internal::compiler::MoveOperands"** %564 to i64*
  store i64 %567, i64* %568, align 8
  %569 = getelementptr inbounds %"class.v8::internal::compiler::MoveOperands"*, %"class.v8::internal::compiler::MoveOperands"** %562, i64 -2
  %570 = getelementptr inbounds %"class.v8::internal::compiler::MoveOperands"*, %"class.v8::internal::compiler::MoveOperands"** %563, i64 -2
  %571 = bitcast %"class.v8::internal::compiler::MoveOperands"** %570 to i64*
  %572 = load i64, i64* %571, align 8
  %573 = bitcast %"class.v8::internal::compiler::MoveOperands"** %569 to i64*
  store i64 %572, i64* %573, align 8
  %574 = getelementptr inbounds %"class.v8::internal::compiler::MoveOperands"*, %"class.v8::internal::compiler::MoveOperands"** %562, i64 -3
  %575 = getelementptr inbounds %"class.v8::internal::compiler::MoveOperands"*, %"class.v8::internal::compiler::MoveOperands"** %563, i64 -3
  %576 = bitcast %"class.v8::internal::compiler::MoveOperands"** %575 to i64*
  %577 = load i64, i64* %576, align 8
  %578 = bitcast %"class.v8::internal::compiler::MoveOperands"** %574 to i64*
  store i64 %577, i64* %578, align 8
  %579 = getelementptr inbounds %"class.v8::internal::compiler::MoveOperands"*, %"class.v8::internal::compiler::MoveOperands"** %562, i64 -4
  %580 = getelementptr inbounds %"class.v8::internal::compiler::MoveOperands"*, %"class.v8::internal::compiler::MoveOperands"** %563, i64 -4
  %581 = bitcast %"class.v8::internal::compiler::MoveOperands"** %580 to i64*
  %582 = load i64, i64* %581, align 8
  %583 = bitcast %"class.v8::internal::compiler::MoveOperands"** %579 to i64*
  store i64 %582, i64* %583, align 8
  %584 = getelementptr inbounds %"class.v8::internal::compiler::MoveOperands"*, %"class.v8::internal::compiler::MoveOperands"** %562, i64 -5
  %585 = getelementptr inbounds %"class.v8::internal::compiler::MoveOperands"*, %"class.v8::internal::compiler::MoveOperands"** %563, i64 -5
  %586 = bitcast %"class.v8::internal::compiler::MoveOperands"** %585 to i64*
  %587 = load i64, i64* %586, align 8
  %588 = bitcast %"class.v8::internal::compiler::MoveOperands"** %584 to i64*
  store i64 %587, i64* %588, align 8
  %589 = getelementptr inbounds %"class.v8::internal::compiler::MoveOperands"*, %"class.v8::internal::compiler::MoveOperands"** %562, i64 -6
  %590 = getelementptr inbounds %"class.v8::internal::compiler::MoveOperands"*, %"class.v8::internal::compiler::MoveOperands"** %563, i64 -6
  %591 = bitcast %"class.v8::internal::compiler::MoveOperands"** %590 to i64*
  %592 = load i64, i64* %591, align 8
  %593 = bitcast %"class.v8::internal::compiler::MoveOperands"** %589 to i64*
  store i64 %592, i64* %593, align 8
  %594 = getelementptr inbounds %"class.v8::internal::compiler::MoveOperands"*, %"class.v8::internal::compiler::MoveOperands"** %562, i64 -7
  %595 = getelementptr inbounds %"class.v8::internal::compiler::MoveOperands"*, %"class.v8::internal::compiler::MoveOperands"** %563, i64 -7
  %596 = bitcast %"class.v8::internal::compiler::MoveOperands"** %595 to i64*
  %597 = load i64, i64* %596, align 8
  %598 = bitcast %"class.v8::internal::compiler::MoveOperands"** %594 to i64*
  store i64 %597, i64* %598, align 8
  %599 = getelementptr inbounds %"class.v8::internal::compiler::MoveOperands"*, %"class.v8::internal::compiler::MoveOperands"** %562, i64 -8
  %600 = getelementptr inbounds %"class.v8::internal::compiler::MoveOperands"*, %"class.v8::internal::compiler::MoveOperands"** %563, i64 -8
  %601 = bitcast %"class.v8::internal::compiler::MoveOperands"** %600 to i64*
  %602 = load i64, i64* %601, align 8
  %603 = bitcast %"class.v8::internal::compiler::MoveOperands"** %599 to i64*
  store i64 %602, i64* %603, align 8
  %604 = icmp eq %"class.v8::internal::compiler::MoveOperands"** %600, %429
  br i1 %604, label %605, label %561, !llvm.loop !193

605:                                              ; preds = %556, %561, %533
  %606 = phi %"class.v8::internal::compiler::MoveOperands"** [ %459, %533 ], [ %557, %556 ], [ %599, %561 ]
  %607 = ptrtoint %"class.v8::internal::compiler::MoveOperands"** %606 to i64
  br label %608

608:                                              ; preds = %426, %605, %421
  %609 = phi i64 [ %435, %605 ], [ %435, %426 ], [ %425, %421 ]
  %610 = phi i64 [ %427, %605 ], [ %427, %426 ], [ %416, %421 ]
  %611 = phi i64 [ %607, %605 ], [ %427, %426 ], [ %416, %421 ]
  store i64 %611, i64* %412, align 8
  store i64 %610, i64* %414, align 8
  store i64 %609, i64* %411, align 8
  %612 = getelementptr inbounds %"class.v8::internal::ZoneVector.1203", %"class.v8::internal::ZoneVector.1203"* %7, i64 0, i32 0, i32 0, i32 2, i32 0, i32 0
  %613 = bitcast %"class.v8::internal::compiler::MoveOperands"*** %612 to i64*
  %614 = load i64, i64* %613, align 8
  %615 = bitcast %"class.v8::internal::ZoneVector.1203"* %7 to i64*
  %616 = load i64, i64* %615, align 8
  %617 = inttoptr i64 %616 to %"class.v8::internal::compiler::MoveOperands"**
  %618 = getelementptr inbounds %"class.v8::internal::ZoneVector.1203", %"class.v8::internal::ZoneVector.1203"* %7, i64 0, i32 0, i32 0, i32 2, i32 0, i32 0
  %619 = bitcast %"class.v8::internal::compiler::MoveOperands"*** %618 to i64*
  %620 = sub i64 %614, %616
  %621 = ashr exact i64 %620, 3
  %622 = icmp ult i64 %621, 4
  br i1 %622, label %623, label %830

623:                                              ; preds = %608
  %624 = getelementptr inbounds %"class.v8::internal::ZoneVector.1203", %"class.v8::internal::ZoneVector.1203"* %7, i64 0, i32 0, i32 0, i32 1
  %625 = bitcast %"class.v8::internal::compiler::MoveOperands"*** %624 to i64*
  %626 = load i64, i64* %625, align 8
  %627 = sub i64 %626, %616
  %628 = ashr exact i64 %627, 3
  %629 = getelementptr inbounds %"class.v8::internal::ZoneVector.1203", %"class.v8::internal::ZoneVector.1203"* %7, i64 0, i32 0, i32 0, i32 2, i32 1, i32 0, i32 0
  %630 = load %"class.v8::internal::Zone"*, %"class.v8::internal::Zone"** %629, align 8
  %631 = getelementptr inbounds %"class.v8::internal::Zone", %"class.v8::internal::Zone"* %630, i64 0, i32 2
  %632 = load i64, i64* %631, align 8
  %633 = getelementptr inbounds %"class.v8::internal::Zone", %"class.v8::internal::Zone"* %630, i64 0, i32 3
  %634 = load i64, i64* %633, align 8
  %635 = sub i64 %634, %632
  %636 = icmp ult i64 %635, 32
  br i1 %636, label %637, label %642, !prof !2

637:                                              ; preds = %623
  %638 = call i64 @_ZN2v88internal4Zone9NewExpandEm(%"class.v8::internal::Zone"* %630, i64 32) #16
  %639 = getelementptr inbounds %"class.v8::internal::ZoneVector.1203", %"class.v8::internal::ZoneVector.1203"* %7, i64 0, i32 0, i32 0, i32 0
  %640 = load %"class.v8::internal::compiler::MoveOperands"**, %"class.v8::internal::compiler::MoveOperands"*** %639, align 8
  %641 = load %"class.v8::internal::compiler::MoveOperands"**, %"class.v8::internal::compiler::MoveOperands"*** %624, align 8
  br label %645

642:                                              ; preds = %623
  %643 = inttoptr i64 %626 to %"class.v8::internal::compiler::MoveOperands"**
  %644 = add i64 %632, 32
  store i64 %644, i64* %631, align 8
  br label %645

645:                                              ; preds = %642, %637
  %646 = phi %"class.v8::internal::compiler::MoveOperands"** [ %641, %637 ], [ %643, %642 ]
  %647 = phi %"class.v8::internal::compiler::MoveOperands"** [ %640, %637 ], [ %617, %642 ]
  %648 = phi i64 [ %638, %637 ], [ %632, %642 ]
  %649 = ptrtoint %"class.v8::internal::compiler::MoveOperands"** %647 to i64
  %650 = inttoptr i64 %648 to %"class.v8::internal::compiler::MoveOperands"**
  %651 = getelementptr inbounds %"class.v8::internal::compiler::MoveOperands"*, %"class.v8::internal::compiler::MoveOperands"** %650, i64 %628
  %652 = ptrtoint %"class.v8::internal::compiler::MoveOperands"** %651 to i64
  %653 = getelementptr inbounds %"class.v8::internal::compiler::MoveOperands"*, %"class.v8::internal::compiler::MoveOperands"** %650, i64 4
  %654 = ptrtoint %"class.v8::internal::compiler::MoveOperands"** %653 to i64
  %655 = icmp eq %"class.v8::internal::compiler::MoveOperands"** %646, %647
  br i1 %655, label %828, label %656

656:                                              ; preds = %645
  %657 = getelementptr %"class.v8::internal::compiler::MoveOperands"*, %"class.v8::internal::compiler::MoveOperands"** %646, i64 -1
  %658 = ptrtoint %"class.v8::internal::compiler::MoveOperands"** %657 to i64
  %659 = sub i64 %658, %649
  %660 = lshr i64 %659, 3
  %661 = add nuw nsw i64 %660, 1
  %662 = icmp ult i64 %661, 4
  br i1 %662, label %755, label %663

663:                                              ; preds = %656
  %664 = getelementptr %"class.v8::internal::compiler::MoveOperands"*, %"class.v8::internal::compiler::MoveOperands"** %646, i64 -1
  %665 = ptrtoint %"class.v8::internal::compiler::MoveOperands"** %664 to i64
  %666 = sub i64 %665, %649
  %667 = lshr i64 %666, 3
  %668 = xor i64 %667, -1
  %669 = add nsw i64 %628, %668
  %670 = getelementptr %"class.v8::internal::compiler::MoveOperands"*, %"class.v8::internal::compiler::MoveOperands"** %650, i64 %669
  %671 = xor i64 %667, -1
  %672 = getelementptr %"class.v8::internal::compiler::MoveOperands"*, %"class.v8::internal::compiler::MoveOperands"** %646, i64 %671
  %673 = icmp ult %"class.v8::internal::compiler::MoveOperands"** %670, %646
  %674 = icmp ult %"class.v8::internal::compiler::MoveOperands"** %672, %651
  %675 = and i1 %673, %674
  br i1 %675, label %755, label %676

676:                                              ; preds = %663
  %677 = and i64 %661, 4611686018427387900
  %678 = sub nsw i64 0, %677
  %679 = getelementptr %"class.v8::internal::compiler::MoveOperands"*, %"class.v8::internal::compiler::MoveOperands"** %651, i64 %678
  %680 = sub nsw i64 0, %677
  %681 = getelementptr %"class.v8::internal::compiler::MoveOperands"*, %"class.v8::internal::compiler::MoveOperands"** %646, i64 %680
  %682 = add nsw i64 %677, -4
  %683 = lshr exact i64 %682, 2
  %684 = add nuw nsw i64 %683, 1
  %685 = and i64 %684, 1
  %686 = icmp eq i64 %682, 0
  br i1 %686, label %733, label %687

687:                                              ; preds = %676
  %688 = sub nuw nsw i64 %684, %685
  %689 = getelementptr %"class.v8::internal::compiler::MoveOperands"*, %"class.v8::internal::compiler::MoveOperands"** %651, i64 -1
  %690 = getelementptr %"class.v8::internal::compiler::MoveOperands"*, %"class.v8::internal::compiler::MoveOperands"** %646, i64 -1
  %691 = getelementptr %"class.v8::internal::compiler::MoveOperands"*, %"class.v8::internal::compiler::MoveOperands"** %651, i64 -1
  %692 = getelementptr %"class.v8::internal::compiler::MoveOperands"*, %"class.v8::internal::compiler::MoveOperands"** %646, i64 -1
  br label %693

693:                                              ; preds = %693, %687
  %694 = phi i64 [ 0, %687 ], [ %728, %693 ]
  %695 = phi i64 [ %688, %687 ], [ %729, %693 ]
  %696 = sub i64 0, %694
  %697 = sub i64 0, %694
  %698 = getelementptr inbounds %"class.v8::internal::compiler::MoveOperands"*, %"class.v8::internal::compiler::MoveOperands"** %689, i64 %696
  %699 = getelementptr inbounds %"class.v8::internal::compiler::MoveOperands"*, %"class.v8::internal::compiler::MoveOperands"** %690, i64 %697
  %700 = getelementptr inbounds %"class.v8::internal::compiler::MoveOperands"*, %"class.v8::internal::compiler::MoveOperands"** %699, i64 -1
  %701 = bitcast %"class.v8::internal::compiler::MoveOperands"** %700 to <2 x i64>*
  %702 = load <2 x i64>, <2 x i64>* %701, align 8, !alias.scope !194
  %703 = getelementptr inbounds %"class.v8::internal::compiler::MoveOperands"*, %"class.v8::internal::compiler::MoveOperands"** %699, i64 -2
  %704 = getelementptr inbounds %"class.v8::internal::compiler::MoveOperands"*, %"class.v8::internal::compiler::MoveOperands"** %703, i64 -1
  %705 = bitcast %"class.v8::internal::compiler::MoveOperands"** %704 to <2 x i64>*
  %706 = load <2 x i64>, <2 x i64>* %705, align 8, !alias.scope !194
  %707 = getelementptr inbounds %"class.v8::internal::compiler::MoveOperands"*, %"class.v8::internal::compiler::MoveOperands"** %698, i64 -1
  %708 = bitcast %"class.v8::internal::compiler::MoveOperands"** %707 to <2 x i64>*
  store <2 x i64> %702, <2 x i64>* %708, align 8, !alias.scope !197, !noalias !194
  %709 = getelementptr inbounds %"class.v8::internal::compiler::MoveOperands"*, %"class.v8::internal::compiler::MoveOperands"** %698, i64 -2
  %710 = getelementptr inbounds %"class.v8::internal::compiler::MoveOperands"*, %"class.v8::internal::compiler::MoveOperands"** %709, i64 -1
  %711 = bitcast %"class.v8::internal::compiler::MoveOperands"** %710 to <2 x i64>*
  store <2 x i64> %706, <2 x i64>* %711, align 8, !alias.scope !197, !noalias !194
  %712 = sub nuw nsw i64 -4, %694
  %713 = sub nuw nsw i64 -4, %694
  %714 = getelementptr inbounds %"class.v8::internal::compiler::MoveOperands"*, %"class.v8::internal::compiler::MoveOperands"** %691, i64 %712
  %715 = getelementptr inbounds %"class.v8::internal::compiler::MoveOperands"*, %"class.v8::internal::compiler::MoveOperands"** %692, i64 %713
  %716 = getelementptr inbounds %"class.v8::internal::compiler::MoveOperands"*, %"class.v8::internal::compiler::MoveOperands"** %715, i64 -1
  %717 = bitcast %"class.v8::internal::compiler::MoveOperands"** %716 to <2 x i64>*
  %718 = load <2 x i64>, <2 x i64>* %717, align 8, !alias.scope !194
  %719 = getelementptr inbounds %"class.v8::internal::compiler::MoveOperands"*, %"class.v8::internal::compiler::MoveOperands"** %715, i64 -2
  %720 = getelementptr inbounds %"class.v8::internal::compiler::MoveOperands"*, %"class.v8::internal::compiler::MoveOperands"** %719, i64 -1
  %721 = bitcast %"class.v8::internal::compiler::MoveOperands"** %720 to <2 x i64>*
  %722 = load <2 x i64>, <2 x i64>* %721, align 8, !alias.scope !194
  %723 = getelementptr inbounds %"class.v8::internal::compiler::MoveOperands"*, %"class.v8::internal::compiler::MoveOperands"** %714, i64 -1
  %724 = bitcast %"class.v8::internal::compiler::MoveOperands"** %723 to <2 x i64>*
  store <2 x i64> %718, <2 x i64>* %724, align 8, !alias.scope !197, !noalias !194
  %725 = getelementptr inbounds %"class.v8::internal::compiler::MoveOperands"*, %"class.v8::internal::compiler::MoveOperands"** %714, i64 -2
  %726 = getelementptr inbounds %"class.v8::internal::compiler::MoveOperands"*, %"class.v8::internal::compiler::MoveOperands"** %725, i64 -1
  %727 = bitcast %"class.v8::internal::compiler::MoveOperands"** %726 to <2 x i64>*
  store <2 x i64> %722, <2 x i64>* %727, align 8, !alias.scope !197, !noalias !194
  %728 = add i64 %694, 8
  %729 = add i64 %695, -2
  %730 = icmp eq i64 %729, 0
  br i1 %730, label %731, label %693, !llvm.loop !199

731:                                              ; preds = %693
  %732 = sub nuw nsw i64 -8, %694
  br label %733

733:                                              ; preds = %731, %676
  %734 = phi i64 [ 0, %676 ], [ %732, %731 ]
  %735 = icmp eq i64 %685, 0
  br i1 %735, label %753, label %736

736:                                              ; preds = %733
  %737 = getelementptr %"class.v8::internal::compiler::MoveOperands"*, %"class.v8::internal::compiler::MoveOperands"** %651, i64 -1
  %738 = getelementptr %"class.v8::internal::compiler::MoveOperands"*, %"class.v8::internal::compiler::MoveOperands"** %646, i64 -1
  %739 = getelementptr inbounds %"class.v8::internal::compiler::MoveOperands"*, %"class.v8::internal::compiler::MoveOperands"** %737, i64 %734
  %740 = getelementptr inbounds %"class.v8::internal::compiler::MoveOperands"*, %"class.v8::internal::compiler::MoveOperands"** %738, i64 %734
  %741 = getelementptr inbounds %"class.v8::internal::compiler::MoveOperands"*, %"class.v8::internal::compiler::MoveOperands"** %740, i64 -1
  %742 = bitcast %"class.v8::internal::compiler::MoveOperands"** %741 to <2 x i64>*
  %743 = load <2 x i64>, <2 x i64>* %742, align 8, !alias.scope !194
  %744 = getelementptr inbounds %"class.v8::internal::compiler::MoveOperands"*, %"class.v8::internal::compiler::MoveOperands"** %740, i64 -2
  %745 = getelementptr inbounds %"class.v8::internal::compiler::MoveOperands"*, %"class.v8::internal::compiler::MoveOperands"** %744, i64 -1
  %746 = bitcast %"class.v8::internal::compiler::MoveOperands"** %745 to <2 x i64>*
  %747 = load <2 x i64>, <2 x i64>* %746, align 8, !alias.scope !194
  %748 = getelementptr inbounds %"class.v8::internal::compiler::MoveOperands"*, %"class.v8::internal::compiler::MoveOperands"** %739, i64 -1
  %749 = bitcast %"class.v8::internal::compiler::MoveOperands"** %748 to <2 x i64>*
  store <2 x i64> %743, <2 x i64>* %749, align 8, !alias.scope !197, !noalias !194
  %750 = getelementptr inbounds %"class.v8::internal::compiler::MoveOperands"*, %"class.v8::internal::compiler::MoveOperands"** %739, i64 -2
  %751 = getelementptr inbounds %"class.v8::internal::compiler::MoveOperands"*, %"class.v8::internal::compiler::MoveOperands"** %750, i64 -1
  %752 = bitcast %"class.v8::internal::compiler::MoveOperands"** %751 to <2 x i64>*
  store <2 x i64> %747, <2 x i64>* %752, align 8, !alias.scope !197, !noalias !194
  br label %753

753:                                              ; preds = %733, %736
  %754 = icmp eq i64 %661, %677
  br i1 %754, label %825, label %755

755:                                              ; preds = %753, %663, %656
  %756 = phi %"class.v8::internal::compiler::MoveOperands"** [ %651, %663 ], [ %651, %656 ], [ %679, %753 ]
  %757 = phi %"class.v8::internal::compiler::MoveOperands"** [ %646, %663 ], [ %646, %656 ], [ %681, %753 ]
  %758 = getelementptr %"class.v8::internal::compiler::MoveOperands"*, %"class.v8::internal::compiler::MoveOperands"** %757, i64 -1
  %759 = ptrtoint %"class.v8::internal::compiler::MoveOperands"** %758 to i64
  %760 = sub i64 %759, %649
  %761 = lshr i64 %760, 3
  %762 = add nuw nsw i64 %761, 1
  %763 = and i64 %762, 7
  %764 = icmp eq i64 %763, 0
  br i1 %764, label %776, label %765

765:                                              ; preds = %755, %765
  %766 = phi %"class.v8::internal::compiler::MoveOperands"** [ %769, %765 ], [ %756, %755 ]
  %767 = phi %"class.v8::internal::compiler::MoveOperands"** [ %770, %765 ], [ %757, %755 ]
  %768 = phi i64 [ %774, %765 ], [ %763, %755 ]
  %769 = getelementptr inbounds %"class.v8::internal::compiler::MoveOperands"*, %"class.v8::internal::compiler::MoveOperands"** %766, i64 -1
  %770 = getelementptr inbounds %"class.v8::internal::compiler::MoveOperands"*, %"class.v8::internal::compiler::MoveOperands"** %767, i64 -1
  %771 = bitcast %"class.v8::internal::compiler::MoveOperands"** %770 to i64*
  %772 = load i64, i64* %771, align 8
  %773 = bitcast %"class.v8::internal::compiler::MoveOperands"** %769 to i64*
  store i64 %772, i64* %773, align 8
  %774 = add i64 %768, -1
  %775 = icmp eq i64 %774, 0
  br i1 %775, label %776, label %765, !llvm.loop !200

776:                                              ; preds = %765, %755
  %777 = phi %"class.v8::internal::compiler::MoveOperands"** [ undef, %755 ], [ %769, %765 ]
  %778 = phi %"class.v8::internal::compiler::MoveOperands"** [ %756, %755 ], [ %769, %765 ]
  %779 = phi %"class.v8::internal::compiler::MoveOperands"** [ %757, %755 ], [ %770, %765 ]
  %780 = icmp ult i64 %760, 56
  br i1 %780, label %825, label %781

781:                                              ; preds = %776, %781
  %782 = phi %"class.v8::internal::compiler::MoveOperands"** [ %819, %781 ], [ %778, %776 ]
  %783 = phi %"class.v8::internal::compiler::MoveOperands"** [ %820, %781 ], [ %779, %776 ]
  %784 = getelementptr inbounds %"class.v8::internal::compiler::MoveOperands"*, %"class.v8::internal::compiler::MoveOperands"** %782, i64 -1
  %785 = getelementptr inbounds %"class.v8::internal::compiler::MoveOperands"*, %"class.v8::internal::compiler::MoveOperands"** %783, i64 -1
  %786 = bitcast %"class.v8::internal::compiler::MoveOperands"** %785 to i64*
  %787 = load i64, i64* %786, align 8
  %788 = bitcast %"class.v8::internal::compiler::MoveOperands"** %784 to i64*
  store i64 %787, i64* %788, align 8
  %789 = getelementptr inbounds %"class.v8::internal::compiler::MoveOperands"*, %"class.v8::internal::compiler::MoveOperands"** %782, i64 -2
  %790 = getelementptr inbounds %"class.v8::internal::compiler::MoveOperands"*, %"class.v8::internal::compiler::MoveOperands"** %783, i64 -2
  %791 = bitcast %"class.v8::internal::compiler::MoveOperands"** %790 to i64*
  %792 = load i64, i64* %791, align 8
  %793 = bitcast %"class.v8::internal::compiler::MoveOperands"** %789 to i64*
  store i64 %792, i64* %793, align 8
  %794 = getelementptr inbounds %"class.v8::internal::compiler::MoveOperands"*, %"class.v8::internal::compiler::MoveOperands"** %782, i64 -3
  %795 = getelementptr inbounds %"class.v8::internal::compiler::MoveOperands"*, %"class.v8::internal::compiler::MoveOperands"** %783, i64 -3
  %796 = bitcast %"class.v8::internal::compiler::MoveOperands"** %795 to i64*
  %797 = load i64, i64* %796, align 8
  %798 = bitcast %"class.v8::internal::compiler::MoveOperands"** %794 to i64*
  store i64 %797, i64* %798, align 8
  %799 = getelementptr inbounds %"class.v8::internal::compiler::MoveOperands"*, %"class.v8::internal::compiler::MoveOperands"** %782, i64 -4
  %800 = getelementptr inbounds %"class.v8::internal::compiler::MoveOperands"*, %"class.v8::internal::compiler::MoveOperands"** %783, i64 -4
  %801 = bitcast %"class.v8::internal::compiler::MoveOperands"** %800 to i64*
  %802 = load i64, i64* %801, align 8
  %803 = bitcast %"class.v8::internal::compiler::MoveOperands"** %799 to i64*
  store i64 %802, i64* %803, align 8
  %804 = getelementptr inbounds %"class.v8::internal::compiler::MoveOperands"*, %"class.v8::internal::compiler::MoveOperands"** %782, i64 -5
  %805 = getelementptr inbounds %"class.v8::internal::compiler::MoveOperands"*, %"class.v8::internal::compiler::MoveOperands"** %783, i64 -5
  %806 = bitcast %"class.v8::internal::compiler::MoveOperands"** %805 to i64*
  %807 = load i64, i64* %806, align 8
  %808 = bitcast %"class.v8::internal::compiler::MoveOperands"** %804 to i64*
  store i64 %807, i64* %808, align 8
  %809 = getelementptr inbounds %"class.v8::internal::compiler::MoveOperands"*, %"class.v8::internal::compiler::MoveOperands"** %782, i64 -6
  %810 = getelementptr inbounds %"class.v8::internal::compiler::MoveOperands"*, %"class.v8::internal::compiler::MoveOperands"** %783, i64 -6
  %811 = bitcast %"class.v8::internal::compiler::MoveOperands"** %810 to i64*
  %812 = load i64, i64* %811, align 8
  %813 = bitcast %"class.v8::internal::compiler::MoveOperands"** %809 to i64*
  store i64 %812, i64* %813, align 8
  %814 = getelementptr inbounds %"class.v8::internal::compiler::MoveOperands"*, %"class.v8::internal::compiler::MoveOperands"** %782, i64 -7
  %815 = getelementptr inbounds %"class.v8::internal::compiler::MoveOperands"*, %"class.v8::internal::compiler::MoveOperands"** %783, i64 -7
  %816 = bitcast %"class.v8::internal::compiler::MoveOperands"** %815 to i64*
  %817 = load i64, i64* %816, align 8
  %818 = bitcast %"class.v8::internal::compiler::MoveOperands"** %814 to i64*
  store i64 %817, i64* %818, align 8
  %819 = getelementptr inbounds %"class.v8::internal::compiler::MoveOperands"*, %"class.v8::internal::compiler::MoveOperands"** %782, i64 -8
  %820 = getelementptr inbounds %"class.v8::internal::compiler::MoveOperands"*, %"class.v8::internal::compiler::MoveOperands"** %783, i64 -8
  %821 = bitcast %"class.v8::internal::compiler::MoveOperands"** %820 to i64*
  %822 = load i64, i64* %821, align 8
  %823 = bitcast %"class.v8::internal::compiler::MoveOperands"** %819 to i64*
  store i64 %822, i64* %823, align 8
  %824 = icmp eq %"class.v8::internal::compiler::MoveOperands"** %820, %647
  br i1 %824, label %825, label %781, !llvm.loop !201

825:                                              ; preds = %776, %781, %753
  %826 = phi %"class.v8::internal::compiler::MoveOperands"** [ %679, %753 ], [ %777, %776 ], [ %819, %781 ]
  %827 = ptrtoint %"class.v8::internal::compiler::MoveOperands"** %826 to i64
  br label %828

828:                                              ; preds = %825, %645
  %829 = phi i64 [ %827, %825 ], [ %652, %645 ]
  store i64 %829, i64* %615, align 8
  store i64 %652, i64* %625, align 8
  store i64 %654, i64* %619, align 8
  br label %830

830:                                              ; preds = %608, %828
  %831 = load %"class.std::__1::__tree_end_node"*, %"class.std::__1::__tree_end_node"** %10, align 8
  %832 = getelementptr inbounds %"class.std::__1::__tree_end_node", %"class.std::__1::__tree_end_node"* %831, i64 4
  %833 = bitcast %"class.std::__1::__tree_end_node"* %832 to %"class.v8::internal::compiler::ParallelMove"**
  %834 = load %"class.v8::internal::compiler::ParallelMove"*, %"class.v8::internal::compiler::ParallelMove"** %833, align 8
  %835 = bitcast %"class.v8::internal::compiler::ParallelMove"* %834 to i64*
  %836 = getelementptr inbounds %"class.v8::internal::ZoneVector.1203", %"class.v8::internal::ZoneVector.1203"* %7, i64 0, i32 0, i32 0, i32 0
  %837 = getelementptr inbounds %"class.v8::internal::ZoneVector.1203", %"class.v8::internal::ZoneVector.1203"* %7, i64 0, i32 0, i32 0, i32 1
  %838 = getelementptr inbounds %"class.v8::internal::ZoneVector.1203", %"class.v8::internal::ZoneVector.1203"* %6, i64 0, i32 0, i32 0, i32 0
  %839 = getelementptr inbounds %"class.v8::internal::ZoneVector.1203", %"class.v8::internal::ZoneVector.1203"* %6, i64 0, i32 0, i32 0, i32 1
  %840 = bitcast %"class.v8::internal::compiler::MoveOperands"*** %837 to i64*
  %841 = bitcast %"class.v8::internal::compiler::MoveOperands"*** %839 to i64*
  %842 = getelementptr inbounds %"class.v8::internal::ZoneVector.1203", %"class.v8::internal::ZoneVector.1203"* %6, i64 0, i32 0, i32 0, i32 2, i32 1, i32 0, i32 0
  br label %843

843:                                              ; preds = %1428, %830
  %844 = phi %"class.std::__1::__tree_end_node"* [ %831, %830 ], [ %1429, %1428 ]
  %845 = phi i64* [ %835, %830 ], [ %1159, %1428 ]
  %846 = phi %"class.v8::internal::compiler::ParallelMove"* [ %834, %830 ], [ %1160, %1428 ]
  %847 = icmp eq %"class.std::__1::__tree_end_node"* %844, %16
  br i1 %847, label %853, label %848

848:                                              ; preds = %843
  %849 = getelementptr inbounds %"class.std::__1::__tree_end_node", %"class.std::__1::__tree_end_node"* %844, i64 4
  %850 = bitcast %"class.std::__1::__tree_end_node"* %849 to %"class.v8::internal::compiler::ParallelMove"**
  %851 = load %"class.v8::internal::compiler::ParallelMove"*, %"class.v8::internal::compiler::ParallelMove"** %850, align 8
  %852 = icmp eq %"class.v8::internal::compiler::ParallelMove"* %851, %846
  br i1 %852, label %1158, label %853

853:                                              ; preds = %848, %843
  %854 = load %"class.v8::internal::compiler::MoveOperands"**, %"class.v8::internal::compiler::MoveOperands"*** %836, align 8
  %855 = load %"class.v8::internal::compiler::MoveOperands"**, %"class.v8::internal::compiler::MoveOperands"*** %837, align 8
  %856 = icmp eq %"class.v8::internal::compiler::MoveOperands"** %854, %855
  br i1 %856, label %877, label %857

857:                                              ; preds = %853
  %858 = ptrtoint %"class.v8::internal::compiler::MoveOperands"** %854 to i64
  %859 = getelementptr %"class.v8::internal::compiler::MoveOperands"*, %"class.v8::internal::compiler::MoveOperands"** %855, i64 -1
  %860 = ptrtoint %"class.v8::internal::compiler::MoveOperands"** %859 to i64
  %861 = sub i64 %860, %858
  %862 = lshr i64 %861, 3
  %863 = add nuw nsw i64 %862, 1
  %864 = and i64 %863, 7
  %865 = icmp eq i64 %864, 0
  br i1 %865, label %874, label %866

866:                                              ; preds = %857, %866
  %867 = phi %"class.v8::internal::compiler::MoveOperands"** [ %871, %866 ], [ %854, %857 ]
  %868 = phi i64 [ %872, %866 ], [ %864, %857 ]
  %869 = bitcast %"class.v8::internal::compiler::MoveOperands"** %867 to i8**
  %870 = load i8*, i8** %869, align 8
  call void @llvm.memset.p0i8.i64(i8* align 8 %870, i8 0, i64 16, i1 false) #16
  %871 = getelementptr inbounds %"class.v8::internal::compiler::MoveOperands"*, %"class.v8::internal::compiler::MoveOperands"** %867, i64 1
  %872 = add i64 %868, -1
  %873 = icmp eq i64 %872, 0
  br i1 %873, label %874, label %866, !llvm.loop !202

874:                                              ; preds = %866, %857
  %875 = phi %"class.v8::internal::compiler::MoveOperands"** [ %854, %857 ], [ %871, %866 ]
  %876 = icmp ult i64 %861, 56
  br i1 %876, label %877, label %889

877:                                              ; preds = %874, %889, %853
  %878 = load %"class.v8::internal::compiler::MoveOperands"**, %"class.v8::internal::compiler::MoveOperands"*** %838, align 8
  %879 = load %"class.v8::internal::compiler::MoveOperands"**, %"class.v8::internal::compiler::MoveOperands"*** %839, align 8
  %880 = icmp eq %"class.v8::internal::compiler::MoveOperands"** %878, %879
  br i1 %880, label %916, label %881

881:                                              ; preds = %877
  %882 = getelementptr inbounds %"class.v8::internal::compiler::ParallelMove", %"class.v8::internal::compiler::ParallelMove"* %846, i64 0, i32 0, i32 0, i32 0, i32 1
  %883 = getelementptr inbounds %"class.v8::internal::compiler::ParallelMove", %"class.v8::internal::compiler::ParallelMove"* %846, i64 0, i32 0, i32 0, i32 0, i32 2, i32 0, i32 0
  %884 = bitcast %"class.v8::internal::compiler::MoveOperands"*** %882 to i64*
  %885 = bitcast %"class.v8::internal::compiler::MoveOperands"*** %883 to i64*
  %886 = getelementptr inbounds %"class.v8::internal::compiler::ParallelMove", %"class.v8::internal::compiler::ParallelMove"* %846, i64 0, i32 0, i32 0, i32 0, i32 2, i32 1, i32 0, i32 0
  %887 = getelementptr inbounds %"class.v8::internal::compiler::ParallelMove", %"class.v8::internal::compiler::ParallelMove"* %846, i64 0, i32 0, i32 0, i32 0, i32 0
  %888 = load %"class.v8::internal::compiler::MoveOperands"**, %"class.v8::internal::compiler::MoveOperands"*** %882, align 8
  br label %917

889:                                              ; preds = %874, %889
  %890 = phi %"class.v8::internal::compiler::MoveOperands"** [ %914, %889 ], [ %875, %874 ]
  %891 = bitcast %"class.v8::internal::compiler::MoveOperands"** %890 to i8**
  %892 = load i8*, i8** %891, align 8
  call void @llvm.memset.p0i8.i64(i8* align 8 %892, i8 0, i64 16, i1 false) #16
  %893 = getelementptr inbounds %"class.v8::internal::compiler::MoveOperands"*, %"class.v8::internal::compiler::MoveOperands"** %890, i64 1
  %894 = bitcast %"class.v8::internal::compiler::MoveOperands"** %893 to i8**
  %895 = load i8*, i8** %894, align 8
  call void @llvm.memset.p0i8.i64(i8* align 8 %895, i8 0, i64 16, i1 false) #16
  %896 = getelementptr inbounds %"class.v8::internal::compiler::MoveOperands"*, %"class.v8::internal::compiler::MoveOperands"** %890, i64 2
  %897 = bitcast %"class.v8::internal::compiler::MoveOperands"** %896 to i8**
  %898 = load i8*, i8** %897, align 8
  call void @llvm.memset.p0i8.i64(i8* align 8 %898, i8 0, i64 16, i1 false) #16
  %899 = getelementptr inbounds %"class.v8::internal::compiler::MoveOperands"*, %"class.v8::internal::compiler::MoveOperands"** %890, i64 3
  %900 = bitcast %"class.v8::internal::compiler::MoveOperands"** %899 to i8**
  %901 = load i8*, i8** %900, align 8
  call void @llvm.memset.p0i8.i64(i8* align 8 %901, i8 0, i64 16, i1 false) #16
  %902 = getelementptr inbounds %"class.v8::internal::compiler::MoveOperands"*, %"class.v8::internal::compiler::MoveOperands"** %890, i64 4
  %903 = bitcast %"class.v8::internal::compiler::MoveOperands"** %902 to i8**
  %904 = load i8*, i8** %903, align 8
  call void @llvm.memset.p0i8.i64(i8* align 8 %904, i8 0, i64 16, i1 false) #16
  %905 = getelementptr inbounds %"class.v8::internal::compiler::MoveOperands"*, %"class.v8::internal::compiler::MoveOperands"** %890, i64 5
  %906 = bitcast %"class.v8::internal::compiler::MoveOperands"** %905 to i8**
  %907 = load i8*, i8** %906, align 8
  call void @llvm.memset.p0i8.i64(i8* align 8 %907, i8 0, i64 16, i1 false) #16
  %908 = getelementptr inbounds %"class.v8::internal::compiler::MoveOperands"*, %"class.v8::internal::compiler::MoveOperands"** %890, i64 6
  %909 = bitcast %"class.v8::internal::compiler::MoveOperands"** %908 to i8**
  %910 = load i8*, i8** %909, align 8
  call void @llvm.memset.p0i8.i64(i8* align 8 %910, i8 0, i64 16, i1 false) #16
  %911 = getelementptr inbounds %"class.v8::internal::compiler::MoveOperands"*, %"class.v8::internal::compiler::MoveOperands"** %890, i64 7
  %912 = bitcast %"class.v8::internal::compiler::MoveOperands"** %911 to i8**
  %913 = load i8*, i8** %912, align 8
  call void @llvm.memset.p0i8.i64(i8* align 8 %913, i8 0, i64 16, i1 false) #16
  %914 = getelementptr inbounds %"class.v8::internal::compiler::MoveOperands"*, %"class.v8::internal::compiler::MoveOperands"** %890, i64 8
  %915 = icmp eq %"class.v8::internal::compiler::MoveOperands"** %914, %855
  br i1 %915, label %877, label %889

916:                                              ; preds = %1147, %877
  br i1 %847, label %1446, label %1151

917:                                              ; preds = %881, %1147
  %918 = phi %"class.v8::internal::compiler::MoveOperands"** [ %888, %881 ], [ %1148, %1147 ]
  %919 = phi %"class.v8::internal::compiler::MoveOperands"** [ %878, %881 ], [ %1149, %1147 ]
  %920 = bitcast %"class.v8::internal::compiler::MoveOperands"** %919 to i64*
  %921 = load i64, i64* %920, align 8
  %922 = load %"class.v8::internal::compiler::MoveOperands"**, %"class.v8::internal::compiler::MoveOperands"*** %883, align 8
  %923 = icmp eq %"class.v8::internal::compiler::MoveOperands"** %918, %922
  br i1 %923, label %928, label %924

924:                                              ; preds = %917
  %925 = bitcast %"class.v8::internal::compiler::MoveOperands"** %918 to i64*
  store i64 %921, i64* %925, align 8
  %926 = getelementptr inbounds %"class.v8::internal::compiler::MoveOperands"*, %"class.v8::internal::compiler::MoveOperands"** %918, i64 1
  %927 = ptrtoint %"class.v8::internal::compiler::MoveOperands"** %926 to i64
  store i64 %927, i64* %884, align 8
  br label %1147

928:                                              ; preds = %917
  %929 = ptrtoint %"class.v8::internal::compiler::MoveOperands"** %922 to i64
  %930 = load i64, i64* %845, align 8
  %931 = sub i64 %929, %930
  %932 = ashr exact i64 %931, 3
  %933 = add nsw i64 %932, 1
  %934 = icmp ugt i64 %933, 268435455
  br i1 %934, label %935, label %937

935:                                              ; preds = %928
  %936 = bitcast %"class.v8::internal::compiler::ParallelMove"* %846 to %"class.std::__1::__vector_base_common"*
  call void @_ZNKSt3__120__vector_base_commonILb1EE20__throw_length_errorEv(%"class.std::__1::__vector_base_common"* %936) #17
  unreachable

937:                                              ; preds = %928
  %938 = icmp ult i64 %932, 134217727
  br i1 %938, label %939, label %944

939:                                              ; preds = %937
  %940 = ashr exact i64 %931, 2
  %941 = icmp ult i64 %940, %933
  %942 = select i1 %941, i64 %933, i64 %940
  %943 = icmp eq i64 %942, 0
  br i1 %943, label %961, label %944

944:                                              ; preds = %939, %937
  %945 = phi i64 [ %942, %939 ], [ 268435455, %937 ]
  %946 = load %"class.v8::internal::Zone"*, %"class.v8::internal::Zone"** %886, align 8
  %947 = shl i64 %945, 3
  %948 = getelementptr inbounds %"class.v8::internal::Zone", %"class.v8::internal::Zone"* %946, i64 0, i32 2
  %949 = load i64, i64* %948, align 8
  %950 = getelementptr inbounds %"class.v8::internal::Zone", %"class.v8::internal::Zone"* %946, i64 0, i32 3
  %951 = load i64, i64* %950, align 8
  %952 = sub i64 %951, %949
  %953 = icmp ugt i64 %947, %952
  br i1 %953, label %954, label %956, !prof !2

954:                                              ; preds = %944
  %955 = call i64 @_ZN2v88internal4Zone9NewExpandEm(%"class.v8::internal::Zone"* %946, i64 %947) #16
  br label %958

956:                                              ; preds = %944
  %957 = add i64 %949, %947
  store i64 %957, i64* %948, align 8
  br label %958

958:                                              ; preds = %956, %954
  %959 = phi i64 [ %955, %954 ], [ %949, %956 ]
  %960 = inttoptr i64 %959 to %"class.v8::internal::compiler::MoveOperands"**
  br label %961

961:                                              ; preds = %958, %939
  %962 = phi i64 [ %945, %958 ], [ 0, %939 ]
  %963 = phi %"class.v8::internal::compiler::MoveOperands"** [ %960, %958 ], [ null, %939 ]
  %964 = getelementptr inbounds %"class.v8::internal::compiler::MoveOperands"*, %"class.v8::internal::compiler::MoveOperands"** %963, i64 %932
  %965 = getelementptr inbounds %"class.v8::internal::compiler::MoveOperands"*, %"class.v8::internal::compiler::MoveOperands"** %963, i64 %962
  %966 = ptrtoint %"class.v8::internal::compiler::MoveOperands"** %965 to i64
  %967 = bitcast %"class.v8::internal::compiler::MoveOperands"** %964 to i64*
  store i64 %921, i64* %967, align 8
  %968 = getelementptr inbounds %"class.v8::internal::compiler::MoveOperands"*, %"class.v8::internal::compiler::MoveOperands"** %964, i64 1
  %969 = ptrtoint %"class.v8::internal::compiler::MoveOperands"** %968 to i64
  %970 = load %"class.v8::internal::compiler::MoveOperands"**, %"class.v8::internal::compiler::MoveOperands"*** %887, align 8
  %971 = ptrtoint %"class.v8::internal::compiler::MoveOperands"** %970 to i64
  %972 = load %"class.v8::internal::compiler::MoveOperands"**, %"class.v8::internal::compiler::MoveOperands"*** %882, align 8
  %973 = icmp eq %"class.v8::internal::compiler::MoveOperands"** %972, %970
  br i1 %973, label %1144, label %974

974:                                              ; preds = %961
  %975 = getelementptr %"class.v8::internal::compiler::MoveOperands"*, %"class.v8::internal::compiler::MoveOperands"** %972, i64 -1
  %976 = ptrtoint %"class.v8::internal::compiler::MoveOperands"** %975 to i64
  %977 = sub i64 %976, %971
  %978 = lshr i64 %977, 3
  %979 = add nuw nsw i64 %978, 1
  %980 = icmp ult i64 %979, 4
  br i1 %980, label %1074, label %981

981:                                              ; preds = %974
  %982 = getelementptr %"class.v8::internal::compiler::MoveOperands"*, %"class.v8::internal::compiler::MoveOperands"** %963, i64 -1
  %983 = getelementptr %"class.v8::internal::compiler::MoveOperands"*, %"class.v8::internal::compiler::MoveOperands"** %972, i64 -1
  %984 = ptrtoint %"class.v8::internal::compiler::MoveOperands"** %983 to i64
  %985 = sub i64 %984, %971
  %986 = lshr i64 %985, 3
  %987 = sub nsw i64 %932, %986
  %988 = getelementptr %"class.v8::internal::compiler::MoveOperands"*, %"class.v8::internal::compiler::MoveOperands"** %982, i64 %987
  %989 = getelementptr %"class.v8::internal::compiler::MoveOperands"*, %"class.v8::internal::compiler::MoveOperands"** %972, i64 -1
  %990 = sub nsw i64 0, %986
  %991 = getelementptr %"class.v8::internal::compiler::MoveOperands"*, %"class.v8::internal::compiler::MoveOperands"** %989, i64 %990
  %992 = icmp ult %"class.v8::internal::compiler::MoveOperands"** %988, %972
  %993 = icmp ult %"class.v8::internal::compiler::MoveOperands"** %991, %964
  %994 = and i1 %992, %993
  br i1 %994, label %1074, label %995

995:                                              ; preds = %981
  %996 = and i64 %979, 4611686018427387900
  %997 = sub nsw i64 0, %996
  %998 = getelementptr %"class.v8::internal::compiler::MoveOperands"*, %"class.v8::internal::compiler::MoveOperands"** %964, i64 %997
  %999 = sub nsw i64 0, %996
  %1000 = getelementptr %"class.v8::internal::compiler::MoveOperands"*, %"class.v8::internal::compiler::MoveOperands"** %972, i64 %999
  %1001 = add nsw i64 %996, -4
  %1002 = lshr exact i64 %1001, 2
  %1003 = add nuw nsw i64 %1002, 1
  %1004 = and i64 %1003, 1
  %1005 = icmp eq i64 %1001, 0
  br i1 %1005, label %1050, label %1006

1006:                                             ; preds = %995
  %1007 = sub nuw nsw i64 %1003, %1004
  %1008 = getelementptr %"class.v8::internal::compiler::MoveOperands"*, %"class.v8::internal::compiler::MoveOperands"** %964, i64 -1
  %1009 = getelementptr %"class.v8::internal::compiler::MoveOperands"*, %"class.v8::internal::compiler::MoveOperands"** %972, i64 -1
  %1010 = getelementptr %"class.v8::internal::compiler::MoveOperands"*, %"class.v8::internal::compiler::MoveOperands"** %964, i64 -1
  %1011 = getelementptr %"class.v8::internal::compiler::MoveOperands"*, %"class.v8::internal::compiler::MoveOperands"** %972, i64 -1
  br label %1012

1012:                                             ; preds = %1012, %1006
  %1013 = phi i64 [ 0, %1006 ], [ %1047, %1012 ]
  %1014 = phi i64 [ %1007, %1006 ], [ %1048, %1012 ]
  %1015 = sub i64 0, %1013
  %1016 = sub i64 0, %1013
  %1017 = getelementptr inbounds %"class.v8::internal::compiler::MoveOperands"*, %"class.v8::internal::compiler::MoveOperands"** %1008, i64 %1015
  %1018 = getelementptr inbounds %"class.v8::internal::compiler::MoveOperands"*, %"class.v8::internal::compiler::MoveOperands"** %1009, i64 %1016
  %1019 = getelementptr inbounds %"class.v8::internal::compiler::MoveOperands"*, %"class.v8::internal::compiler::MoveOperands"** %1018, i64 -1
  %1020 = bitcast %"class.v8::internal::compiler::MoveOperands"** %1019 to <2 x i64>*
  %1021 = load <2 x i64>, <2 x i64>* %1020, align 8, !alias.scope !203
  %1022 = getelementptr inbounds %"class.v8::internal::compiler::MoveOperands"*, %"class.v8::internal::compiler::MoveOperands"** %1018, i64 -2
  %1023 = getelementptr inbounds %"class.v8::internal::compiler::MoveOperands"*, %"class.v8::internal::compiler::MoveOperands"** %1022, i64 -1
  %1024 = bitcast %"class.v8::internal::compiler::MoveOperands"** %1023 to <2 x i64>*
  %1025 = load <2 x i64>, <2 x i64>* %1024, align 8, !alias.scope !203
  %1026 = getelementptr inbounds %"class.v8::internal::compiler::MoveOperands"*, %"class.v8::internal::compiler::MoveOperands"** %1017, i64 -1
  %1027 = bitcast %"class.v8::internal::compiler::MoveOperands"** %1026 to <2 x i64>*
  store <2 x i64> %1021, <2 x i64>* %1027, align 8, !alias.scope !206, !noalias !203
  %1028 = getelementptr inbounds %"class.v8::internal::compiler::MoveOperands"*, %"class.v8::internal::compiler::MoveOperands"** %1017, i64 -2
  %1029 = getelementptr inbounds %"class.v8::internal::compiler::MoveOperands"*, %"class.v8::internal::compiler::MoveOperands"** %1028, i64 -1
  %1030 = bitcast %"class.v8::internal::compiler::MoveOperands"** %1029 to <2 x i64>*
  store <2 x i64> %1025, <2 x i64>* %1030, align 8, !alias.scope !206, !noalias !203
  %1031 = sub nuw nsw i64 -4, %1013
  %1032 = sub nuw nsw i64 -4, %1013
  %1033 = getelementptr inbounds %"class.v8::internal::compiler::MoveOperands"*, %"class.v8::internal::compiler::MoveOperands"** %1010, i64 %1031
  %1034 = getelementptr inbounds %"class.v8::internal::compiler::MoveOperands"*, %"class.v8::internal::compiler::MoveOperands"** %1011, i64 %1032
  %1035 = getelementptr inbounds %"class.v8::internal::compiler::MoveOperands"*, %"class.v8::internal::compiler::MoveOperands"** %1034, i64 -1
  %1036 = bitcast %"class.v8::internal::compiler::MoveOperands"** %1035 to <2 x i64>*
  %1037 = load <2 x i64>, <2 x i64>* %1036, align 8, !alias.scope !203
  %1038 = getelementptr inbounds %"class.v8::internal::compiler::MoveOperands"*, %"class.v8::internal::compiler::MoveOperands"** %1034, i64 -2
  %1039 = getelementptr inbounds %"class.v8::internal::compiler::MoveOperands"*, %"class.v8::internal::compiler::MoveOperands"** %1038, i64 -1
  %1040 = bitcast %"class.v8::internal::compiler::MoveOperands"** %1039 to <2 x i64>*
  %1041 = load <2 x i64>, <2 x i64>* %1040, align 8, !alias.scope !203
  %1042 = getelementptr inbounds %"class.v8::internal::compiler::MoveOperands"*, %"class.v8::internal::compiler::MoveOperands"** %1033, i64 -1
  %1043 = bitcast %"class.v8::internal::compiler::MoveOperands"** %1042 to <2 x i64>*
  store <2 x i64> %1037, <2 x i64>* %1043, align 8, !alias.scope !206, !noalias !203
  %1044 = getelementptr inbounds %"class.v8::internal::compiler::MoveOperands"*, %"class.v8::internal::compiler::MoveOperands"** %1033, i64 -2
  %1045 = getelementptr inbounds %"class.v8::internal::compiler::MoveOperands"*, %"class.v8::internal::compiler::MoveOperands"** %1044, i64 -1
  %1046 = bitcast %"class.v8::internal::compiler::MoveOperands"** %1045 to <2 x i64>*
  store <2 x i64> %1041, <2 x i64>* %1046, align 8, !alias.scope !206, !noalias !203
  %1047 = add i64 %1013, 8
  %1048 = add i64 %1014, -2
  %1049 = icmp eq i64 %1048, 0
  br i1 %1049, label %1050, label %1012, !llvm.loop !208

1050:                                             ; preds = %1012, %995
  %1051 = phi i64 [ 0, %995 ], [ %1047, %1012 ]
  %1052 = icmp eq i64 %1004, 0
  br i1 %1052, label %1072, label %1053

1053:                                             ; preds = %1050
  %1054 = sub i64 0, %1051
  %1055 = getelementptr %"class.v8::internal::compiler::MoveOperands"*, %"class.v8::internal::compiler::MoveOperands"** %964, i64 -1
  %1056 = sub i64 0, %1051
  %1057 = getelementptr %"class.v8::internal::compiler::MoveOperands"*, %"class.v8::internal::compiler::MoveOperands"** %972, i64 -1
  %1058 = getelementptr inbounds %"class.v8::internal::compiler::MoveOperands"*, %"class.v8::internal::compiler::MoveOperands"** %1055, i64 %1054
  %1059 = getelementptr inbounds %"class.v8::internal::compiler::MoveOperands"*, %"class.v8::internal::compiler::MoveOperands"** %1057, i64 %1056
  %1060 = getelementptr inbounds %"class.v8::internal::compiler::MoveOperands"*, %"class.v8::internal::compiler::MoveOperands"** %1059, i64 -1
  %1061 = bitcast %"class.v8::internal::compiler::MoveOperands"** %1060 to <2 x i64>*
  %1062 = load <2 x i64>, <2 x i64>* %1061, align 8, !alias.scope !203
  %1063 = getelementptr inbounds %"class.v8::internal::compiler::MoveOperands"*, %"class.v8::internal::compiler::MoveOperands"** %1059, i64 -2
  %1064 = getelementptr inbounds %"class.v8::internal::compiler::MoveOperands"*, %"class.v8::internal::compiler::MoveOperands"** %1063, i64 -1
  %1065 = bitcast %"class.v8::internal::compiler::MoveOperands"** %1064 to <2 x i64>*
  %1066 = load <2 x i64>, <2 x i64>* %1065, align 8, !alias.scope !203
  %1067 = getelementptr inbounds %"class.v8::internal::compiler::MoveOperands"*, %"class.v8::internal::compiler::MoveOperands"** %1058, i64 -1
  %1068 = bitcast %"class.v8::internal::compiler::MoveOperands"** %1067 to <2 x i64>*
  store <2 x i64> %1062, <2 x i64>* %1068, align 8, !alias.scope !206, !noalias !203
  %1069 = getelementptr inbounds %"class.v8::internal::compiler::MoveOperands"*, %"class.v8::internal::compiler::MoveOperands"** %1058, i64 -2
  %1070 = getelementptr inbounds %"class.v8::internal::compiler::MoveOperands"*, %"class.v8::internal::compiler::MoveOperands"** %1069, i64 -1
  %1071 = bitcast %"class.v8::internal::compiler::MoveOperands"** %1070 to <2 x i64>*
  store <2 x i64> %1066, <2 x i64>* %1071, align 8, !alias.scope !206, !noalias !203
  br label %1072

1072:                                             ; preds = %1050, %1053
  %1073 = icmp eq i64 %979, %996
  br i1 %1073, label %1144, label %1074

1074:                                             ; preds = %1072, %981, %974
  %1075 = phi %"class.v8::internal::compiler::MoveOperands"** [ %964, %981 ], [ %964, %974 ], [ %998, %1072 ]
  %1076 = phi %"class.v8::internal::compiler::MoveOperands"** [ %972, %981 ], [ %972, %974 ], [ %1000, %1072 ]
  %1077 = getelementptr %"class.v8::internal::compiler::MoveOperands"*, %"class.v8::internal::compiler::MoveOperands"** %1076, i64 -1
  %1078 = ptrtoint %"class.v8::internal::compiler::MoveOperands"** %1077 to i64
  %1079 = sub i64 %1078, %971
  %1080 = lshr i64 %1079, 3
  %1081 = add nuw nsw i64 %1080, 1
  %1082 = and i64 %1081, 7
  %1083 = icmp eq i64 %1082, 0
  br i1 %1083, label %1095, label %1084

1084:                                             ; preds = %1074, %1084
  %1085 = phi %"class.v8::internal::compiler::MoveOperands"** [ %1088, %1084 ], [ %1075, %1074 ]
  %1086 = phi %"class.v8::internal::compiler::MoveOperands"** [ %1089, %1084 ], [ %1076, %1074 ]
  %1087 = phi i64 [ %1093, %1084 ], [ %1082, %1074 ]
  %1088 = getelementptr inbounds %"class.v8::internal::compiler::MoveOperands"*, %"class.v8::internal::compiler::MoveOperands"** %1085, i64 -1
  %1089 = getelementptr inbounds %"class.v8::internal::compiler::MoveOperands"*, %"class.v8::internal::compiler::MoveOperands"** %1086, i64 -1
  %1090 = bitcast %"class.v8::internal::compiler::MoveOperands"** %1089 to i64*
  %1091 = load i64, i64* %1090, align 8
  %1092 = bitcast %"class.v8::internal::compiler::MoveOperands"** %1088 to i64*
  store i64 %1091, i64* %1092, align 8
  %1093 = add i64 %1087, -1
  %1094 = icmp eq i64 %1093, 0
  br i1 %1094, label %1095, label %1084, !llvm.loop !209

1095:                                             ; preds = %1084, %1074
  %1096 = phi %"class.v8::internal::compiler::MoveOperands"** [ undef, %1074 ], [ %1088, %1084 ]
  %1097 = phi %"class.v8::internal::compiler::MoveOperands"** [ %1075, %1074 ], [ %1088, %1084 ]
  %1098 = phi %"class.v8::internal::compiler::MoveOperands"** [ %1076, %1074 ], [ %1089, %1084 ]
  %1099 = icmp ult i64 %1079, 56
  br i1 %1099, label %1144, label %1100

1100:                                             ; preds = %1095, %1100
  %1101 = phi %"class.v8::internal::compiler::MoveOperands"** [ %1138, %1100 ], [ %1097, %1095 ]
  %1102 = phi %"class.v8::internal::compiler::MoveOperands"** [ %1139, %1100 ], [ %1098, %1095 ]
  %1103 = getelementptr inbounds %"class.v8::internal::compiler::MoveOperands"*, %"class.v8::internal::compiler::MoveOperands"** %1101, i64 -1
  %1104 = getelementptr inbounds %"class.v8::internal::compiler::MoveOperands"*, %"class.v8::internal::compiler::MoveOperands"** %1102, i64 -1
  %1105 = bitcast %"class.v8::internal::compiler::MoveOperands"** %1104 to i64*
  %1106 = load i64, i64* %1105, align 8
  %1107 = bitcast %"class.v8::internal::compiler::MoveOperands"** %1103 to i64*
  store i64 %1106, i64* %1107, align 8
  %1108 = getelementptr inbounds %"class.v8::internal::compiler::MoveOperands"*, %"class.v8::internal::compiler::MoveOperands"** %1101, i64 -2
  %1109 = getelementptr inbounds %"class.v8::internal::compiler::MoveOperands"*, %"class.v8::internal::compiler::MoveOperands"** %1102, i64 -2
  %1110 = bitcast %"class.v8::internal::compiler::MoveOperands"** %1109 to i64*
  %1111 = load i64, i64* %1110, align 8
  %1112 = bitcast %"class.v8::internal::compiler::MoveOperands"** %1108 to i64*
  store i64 %1111, i64* %1112, align 8
  %1113 = getelementptr inbounds %"class.v8::internal::compiler::MoveOperands"*, %"class.v8::internal::compiler::MoveOperands"** %1101, i64 -3
  %1114 = getelementptr inbounds %"class.v8::internal::compiler::MoveOperands"*, %"class.v8::internal::compiler::MoveOperands"** %1102, i64 -3
  %1115 = bitcast %"class.v8::internal::compiler::MoveOperands"** %1114 to i64*
  %1116 = load i64, i64* %1115, align 8
  %1117 = bitcast %"class.v8::internal::compiler::MoveOperands"** %1113 to i64*
  store i64 %1116, i64* %1117, align 8
  %1118 = getelementptr inbounds %"class.v8::internal::compiler::MoveOperands"*, %"class.v8::internal::compiler::MoveOperands"** %1101, i64 -4
  %1119 = getelementptr inbounds %"class.v8::internal::compiler::MoveOperands"*, %"class.v8::internal::compiler::MoveOperands"** %1102, i64 -4
  %1120 = bitcast %"class.v8::internal::compiler::MoveOperands"** %1119 to i64*
  %1121 = load i64, i64* %1120, align 8
  %1122 = bitcast %"class.v8::internal::compiler::MoveOperands"** %1118 to i64*
  store i64 %1121, i64* %1122, align 8
  %1123 = getelementptr inbounds %"class.v8::internal::compiler::MoveOperands"*, %"class.v8::internal::compiler::MoveOperands"** %1101, i64 -5
  %1124 = getelementptr inbounds %"class.v8::internal::compiler::MoveOperands"*, %"class.v8::internal::compiler::MoveOperands"** %1102, i64 -5
  %1125 = bitcast %"class.v8::internal::compiler::MoveOperands"** %1124 to i64*
  %1126 = load i64, i64* %1125, align 8
  %1127 = bitcast %"class.v8::internal::compiler::MoveOperands"** %1123 to i64*
  store i64 %1126, i64* %1127, align 8
  %1128 = getelementptr inbounds %"class.v8::internal::compiler::MoveOperands"*, %"class.v8::internal::compiler::MoveOperands"** %1101, i64 -6
  %1129 = getelementptr inbounds %"class.v8::internal::compiler::MoveOperands"*, %"class.v8::internal::compiler::MoveOperands"** %1102, i64 -6
  %1130 = bitcast %"class.v8::internal::compiler::MoveOperands"** %1129 to i64*
  %1131 = load i64, i64* %1130, align 8
  %1132 = bitcast %"class.v8::internal::compiler::MoveOperands"** %1128 to i64*
  store i64 %1131, i64* %1132, align 8
  %1133 = getelementptr inbounds %"class.v8::internal::compiler::MoveOperands"*, %"class.v8::internal::compiler::MoveOperands"** %1101, i64 -7
  %1134 = getelementptr inbounds %"class.v8::internal::compiler::MoveOperands"*, %"class.v8::internal::compiler::MoveOperands"** %1102, i64 -7
  %1135 = bitcast %"class.v8::internal::compiler::MoveOperands"** %1134 to i64*
  %1136 = load i64, i64* %1135, align 8
  %1137 = bitcast %"class.v8::internal::compiler::MoveOperands"** %1133 to i64*
  store i64 %1136, i64* %1137, align 8
  %1138 = getelementptr inbounds %"class.v8::internal::compiler::MoveOperands"*, %"class.v8::internal::compiler::MoveOperands"** %1101, i64 -8
  %1139 = getelementptr inbounds %"class.v8::internal::compiler::MoveOperands"*, %"class.v8::internal::compiler::MoveOperands"** %1102, i64 -8
  %1140 = bitcast %"class.v8::internal::compiler::MoveOperands"** %1139 to i64*
  %1141 = load i64, i64* %1140, align 8
  %1142 = bitcast %"class.v8::internal::compiler::MoveOperands"** %1138 to i64*
  store i64 %1141, i64* %1142, align 8
  %1143 = icmp eq %"class.v8::internal::compiler::MoveOperands"** %1139, %970
  br i1 %1143, label %1144, label %1100, !llvm.loop !210

1144:                                             ; preds = %1095, %1100, %1072, %961
  %1145 = phi %"class.v8::internal::compiler::MoveOperands"** [ %964, %961 ], [ %998, %1072 ], [ %1096, %1095 ], [ %1138, %1100 ]
  %1146 = ptrtoint %"class.v8::internal::compiler::MoveOperands"** %1145 to i64
  store i64 %1146, i64* %845, align 8
  store i64 %969, i64* %884, align 8
  store i64 %966, i64* %885, align 8
  br label %1147

1147:                                             ; preds = %924, %1144
  %1148 = phi %"class.v8::internal::compiler::MoveOperands"** [ %926, %924 ], [ %968, %1144 ]
  %1149 = getelementptr inbounds %"class.v8::internal::compiler::MoveOperands"*, %"class.v8::internal::compiler::MoveOperands"** %919, i64 1
  %1150 = icmp eq %"class.v8::internal::compiler::MoveOperands"** %1149, %879
  br i1 %1150, label %916, label %917

1151:                                             ; preds = %916
  %1152 = load i64, i64* %615, align 8
  store i64 %1152, i64* %840, align 8
  %1153 = load i64, i64* %412, align 8
  store i64 %1153, i64* %841, align 8
  %1154 = getelementptr inbounds %"class.std::__1::__tree_end_node", %"class.std::__1::__tree_end_node"* %844, i64 4
  %1155 = bitcast %"class.std::__1::__tree_end_node"* %1154 to %"class.v8::internal::compiler::ParallelMove"**
  %1156 = load %"class.v8::internal::compiler::ParallelMove"*, %"class.v8::internal::compiler::ParallelMove"** %1155, align 8
  %1157 = bitcast %"class.v8::internal::compiler::ParallelMove"* %1156 to i64*
  br label %1158

1158:                                             ; preds = %848, %1151
  %1159 = phi i64* [ %1157, %1151 ], [ %845, %848 ]
  %1160 = phi %"class.v8::internal::compiler::ParallelMove"* [ %1156, %1151 ], [ %846, %848 ]
  %1161 = load %"class.v8::internal::compiler::TopTierRegisterAllocationData"*, %"class.v8::internal::compiler::TopTierRegisterAllocationData"** %17, align 8
  %1162 = getelementptr inbounds %"class.v8::internal::compiler::TopTierRegisterAllocationData", %"class.v8::internal::compiler::TopTierRegisterAllocationData"* %1161, i64 0, i32 3
  %1163 = load %"class.v8::internal::compiler::InstructionSequence"*, %"class.v8::internal::compiler::InstructionSequence"** %1162, align 8
  %1164 = getelementptr inbounds %"class.v8::internal::compiler::InstructionSequence", %"class.v8::internal::compiler::InstructionSequence"* %1163, i64 0, i32 1
  %1165 = load %"class.v8::internal::Zone"*, %"class.v8::internal::Zone"** %1164, align 8
  %1166 = getelementptr inbounds %"class.std::__1::__tree_end_node", %"class.std::__1::__tree_end_node"* %844, i64 5
  %1167 = getelementptr inbounds %"class.std::__1::__tree_end_node", %"class.std::__1::__tree_end_node"* %844, i64 6
  %1168 = getelementptr inbounds %"class.v8::internal::Zone", %"class.v8::internal::Zone"* %1165, i64 0, i32 2
  %1169 = load i64, i64* %1168, align 8
  %1170 = getelementptr inbounds %"class.v8::internal::Zone", %"class.v8::internal::Zone"* %1165, i64 0, i32 3
  %1171 = load i64, i64* %1170, align 8
  %1172 = sub i64 %1171, %1169
  %1173 = icmp ult i64 %1172, 16
  br i1 %1173, label %1174, label %1176, !prof !2

1174:                                             ; preds = %1158
  %1175 = call i64 @_ZN2v88internal4Zone9NewExpandEm(%"class.v8::internal::Zone"* %1165, i64 16) #16
  br label %1178

1176:                                             ; preds = %1158
  %1177 = add i64 %1169, 16
  store i64 %1177, i64* %1168, align 8
  br label %1178

1178:                                             ; preds = %1174, %1176
  %1179 = phi i64 [ %1175, %1174 ], [ %1169, %1176 ]
  %1180 = inttoptr i64 %1179 to %"class.v8::internal::compiler::MoveOperands"*
  %1181 = bitcast %"class.std::__1::__tree_end_node"* %1166 to i64*
  %1182 = getelementptr inbounds %"class.v8::internal::compiler::MoveOperands", %"class.v8::internal::compiler::MoveOperands"* %1180, i64 0, i32 0, i32 0
  %1183 = load i64, i64* %1181, align 8
  store i64 %1183, i64* %1182, align 8
  %1184 = bitcast %"class.std::__1::__tree_end_node"* %1167 to i64*
  %1185 = getelementptr inbounds %"class.v8::internal::compiler::MoveOperands", %"class.v8::internal::compiler::MoveOperands"* %1180, i64 0, i32 1, i32 0
  %1186 = load i64, i64* %1184, align 8
  store i64 %1186, i64* %1185, align 8
  call void @_ZNK2v88internal8compiler12ParallelMove18PrepareInsertAfterEPNS1_12MoveOperandsEPNS0_10ZoneVectorIS4_EE(%"class.v8::internal::compiler::ParallelMove"* %1160, %"class.v8::internal::compiler::MoveOperands"* %1180, %"class.v8::internal::ZoneVector.1203"* nonnull %7) #16
  %1187 = load %"class.v8::internal::compiler::MoveOperands"**, %"class.v8::internal::compiler::MoveOperands"*** %839, align 8
  %1188 = load %"class.v8::internal::compiler::MoveOperands"**, %"class.v8::internal::compiler::MoveOperands"*** %410, align 8
  %1189 = icmp eq %"class.v8::internal::compiler::MoveOperands"** %1187, %1188
  %1190 = ptrtoint %"class.v8::internal::compiler::MoveOperands"** %1188 to i64
  br i1 %1189, label %1195, label %1191

1191:                                             ; preds = %1178
  %1192 = bitcast %"class.v8::internal::compiler::MoveOperands"** %1187 to i64*
  store i64 %1179, i64* %1192, align 8
  %1193 = getelementptr inbounds %"class.v8::internal::compiler::MoveOperands"*, %"class.v8::internal::compiler::MoveOperands"** %1187, i64 1
  %1194 = ptrtoint %"class.v8::internal::compiler::MoveOperands"** %1193 to i64
  store i64 %1194, i64* %841, align 8
  br label %1416

1195:                                             ; preds = %1178
  %1196 = ptrtoint %"class.v8::internal::compiler::MoveOperands"** %1187 to i64
  %1197 = load i64, i64* %412, align 8
  %1198 = sub i64 %1196, %1197
  %1199 = ashr exact i64 %1198, 3
  %1200 = add nsw i64 %1199, 1
  %1201 = icmp ugt i64 %1200, 268435455
  br i1 %1201, label %1202, label %1204

1202:                                             ; preds = %1195
  %1203 = bitcast %"class.v8::internal::ZoneVector.1203"* %6 to %"class.std::__1::__vector_base_common"*
  call void @_ZNKSt3__120__vector_base_commonILb1EE20__throw_length_errorEv(%"class.std::__1::__vector_base_common"* nonnull %1203) #17
  unreachable

1204:                                             ; preds = %1195
  %1205 = sub i64 %1190, %1197
  %1206 = ashr exact i64 %1205, 3
  %1207 = icmp ult i64 %1206, 134217727
  br i1 %1207, label %1208, label %1213

1208:                                             ; preds = %1204
  %1209 = ashr exact i64 %1205, 2
  %1210 = icmp ult i64 %1209, %1200
  %1211 = select i1 %1210, i64 %1200, i64 %1209
  %1212 = icmp eq i64 %1211, 0
  br i1 %1212, label %1230, label %1213

1213:                                             ; preds = %1208, %1204
  %1214 = phi i64 [ %1211, %1208 ], [ 268435455, %1204 ]
  %1215 = load %"class.v8::internal::Zone"*, %"class.v8::internal::Zone"** %842, align 8
  %1216 = shl i64 %1214, 3
  %1217 = getelementptr inbounds %"class.v8::internal::Zone", %"class.v8::internal::Zone"* %1215, i64 0, i32 2
  %1218 = load i64, i64* %1217, align 8
  %1219 = getelementptr inbounds %"class.v8::internal::Zone", %"class.v8::internal::Zone"* %1215, i64 0, i32 3
  %1220 = load i64, i64* %1219, align 8
  %1221 = sub i64 %1220, %1218
  %1222 = icmp ugt i64 %1216, %1221
  br i1 %1222, label %1223, label %1225, !prof !2

1223:                                             ; preds = %1213
  %1224 = call i64 @_ZN2v88internal4Zone9NewExpandEm(%"class.v8::internal::Zone"* %1215, i64 %1216) #16
  br label %1227

1225:                                             ; preds = %1213
  %1226 = add i64 %1218, %1216
  store i64 %1226, i64* %1217, align 8
  br label %1227

1227:                                             ; preds = %1225, %1223
  %1228 = phi i64 [ %1224, %1223 ], [ %1218, %1225 ]
  %1229 = inttoptr i64 %1228 to %"class.v8::internal::compiler::MoveOperands"**
  br label %1230

1230:                                             ; preds = %1227, %1208
  %1231 = phi i64 [ %1214, %1227 ], [ 0, %1208 ]
  %1232 = phi %"class.v8::internal::compiler::MoveOperands"** [ %1229, %1227 ], [ null, %1208 ]
  %1233 = getelementptr inbounds %"class.v8::internal::compiler::MoveOperands"*, %"class.v8::internal::compiler::MoveOperands"** %1232, i64 %1199
  %1234 = getelementptr inbounds %"class.v8::internal::compiler::MoveOperands"*, %"class.v8::internal::compiler::MoveOperands"** %1232, i64 %1231
  %1235 = ptrtoint %"class.v8::internal::compiler::MoveOperands"** %1234 to i64
  %1236 = bitcast %"class.v8::internal::compiler::MoveOperands"** %1233 to i64*
  store i64 %1179, i64* %1236, align 8
  %1237 = getelementptr inbounds %"class.v8::internal::compiler::MoveOperands"*, %"class.v8::internal::compiler::MoveOperands"** %1233, i64 1
  %1238 = ptrtoint %"class.v8::internal::compiler::MoveOperands"** %1237 to i64
  %1239 = load %"class.v8::internal::compiler::MoveOperands"**, %"class.v8::internal::compiler::MoveOperands"*** %838, align 8
  %1240 = ptrtoint %"class.v8::internal::compiler::MoveOperands"** %1239 to i64
  %1241 = load %"class.v8::internal::compiler::MoveOperands"**, %"class.v8::internal::compiler::MoveOperands"*** %839, align 8
  %1242 = icmp eq %"class.v8::internal::compiler::MoveOperands"** %1241, %1239
  br i1 %1242, label %1413, label %1243

1243:                                             ; preds = %1230
  %1244 = getelementptr %"class.v8::internal::compiler::MoveOperands"*, %"class.v8::internal::compiler::MoveOperands"** %1241, i64 -1
  %1245 = ptrtoint %"class.v8::internal::compiler::MoveOperands"** %1244 to i64
  %1246 = sub i64 %1245, %1240
  %1247 = lshr i64 %1246, 3
  %1248 = add nuw nsw i64 %1247, 1
  %1249 = icmp ult i64 %1248, 4
  br i1 %1249, label %1343, label %1250

1250:                                             ; preds = %1243
  %1251 = getelementptr %"class.v8::internal::compiler::MoveOperands"*, %"class.v8::internal::compiler::MoveOperands"** %1232, i64 -1
  %1252 = getelementptr %"class.v8::internal::compiler::MoveOperands"*, %"class.v8::internal::compiler::MoveOperands"** %1241, i64 -1
  %1253 = ptrtoint %"class.v8::internal::compiler::MoveOperands"** %1252 to i64
  %1254 = sub i64 %1253, %1240
  %1255 = lshr i64 %1254, 3
  %1256 = sub nsw i64 %1199, %1255
  %1257 = getelementptr %"class.v8::internal::compiler::MoveOperands"*, %"class.v8::internal::compiler::MoveOperands"** %1251, i64 %1256
  %1258 = getelementptr %"class.v8::internal::compiler::MoveOperands"*, %"class.v8::internal::compiler::MoveOperands"** %1241, i64 -1
  %1259 = sub nsw i64 0, %1255
  %1260 = getelementptr %"class.v8::internal::compiler::MoveOperands"*, %"class.v8::internal::compiler::MoveOperands"** %1258, i64 %1259
  %1261 = icmp ult %"class.v8::internal::compiler::MoveOperands"** %1257, %1241
  %1262 = icmp ult %"class.v8::internal::compiler::MoveOperands"** %1260, %1233
  %1263 = and i1 %1261, %1262
  br i1 %1263, label %1343, label %1264

1264:                                             ; preds = %1250
  %1265 = and i64 %1248, 4611686018427387900
  %1266 = sub nsw i64 0, %1265
  %1267 = getelementptr %"class.v8::internal::compiler::MoveOperands"*, %"class.v8::internal::compiler::MoveOperands"** %1233, i64 %1266
  %1268 = sub nsw i64 0, %1265
  %1269 = getelementptr %"class.v8::internal::compiler::MoveOperands"*, %"class.v8::internal::compiler::MoveOperands"** %1241, i64 %1268
  %1270 = add nsw i64 %1265, -4
  %1271 = lshr exact i64 %1270, 2
  %1272 = add nuw nsw i64 %1271, 1
  %1273 = and i64 %1272, 1
  %1274 = icmp eq i64 %1270, 0
  br i1 %1274, label %1319, label %1275

1275:                                             ; preds = %1264
  %1276 = sub nuw nsw i64 %1272, %1273
  %1277 = getelementptr %"class.v8::internal::compiler::MoveOperands"*, %"class.v8::internal::compiler::MoveOperands"** %1233, i64 -1
  %1278 = getelementptr %"class.v8::internal::compiler::MoveOperands"*, %"class.v8::internal::compiler::MoveOperands"** %1241, i64 -1
  %1279 = getelementptr %"class.v8::internal::compiler::MoveOperands"*, %"class.v8::internal::compiler::MoveOperands"** %1233, i64 -1
  %1280 = getelementptr %"class.v8::internal::compiler::MoveOperands"*, %"class.v8::internal::compiler::MoveOperands"** %1241, i64 -1
  br label %1281

1281:                                             ; preds = %1281, %1275
  %1282 = phi i64 [ 0, %1275 ], [ %1316, %1281 ]
  %1283 = phi i64 [ %1276, %1275 ], [ %1317, %1281 ]
  %1284 = sub i64 0, %1282
  %1285 = sub i64 0, %1282
  %1286 = getelementptr inbounds %"class.v8::internal::compiler::MoveOperands"*, %"class.v8::internal::compiler::MoveOperands"** %1277, i64 %1284
  %1287 = getelementptr inbounds %"class.v8::internal::compiler::MoveOperands"*, %"class.v8::internal::compiler::MoveOperands"** %1278, i64 %1285
  %1288 = getelementptr inbounds %"class.v8::internal::compiler::MoveOperands"*, %"class.v8::internal::compiler::MoveOperands"** %1287, i64 -1
  %1289 = bitcast %"class.v8::internal::compiler::MoveOperands"** %1288 to <2 x i64>*
  %1290 = load <2 x i64>, <2 x i64>* %1289, align 8, !alias.scope !211
  %1291 = getelementptr inbounds %"class.v8::internal::compiler::MoveOperands"*, %"class.v8::internal::compiler::MoveOperands"** %1287, i64 -2
  %1292 = getelementptr inbounds %"class.v8::internal::compiler::MoveOperands"*, %"class.v8::internal::compiler::MoveOperands"** %1291, i64 -1
  %1293 = bitcast %"class.v8::internal::compiler::MoveOperands"** %1292 to <2 x i64>*
  %1294 = load <2 x i64>, <2 x i64>* %1293, align 8, !alias.scope !211
  %1295 = getelementptr inbounds %"class.v8::internal::compiler::MoveOperands"*, %"class.v8::internal::compiler::MoveOperands"** %1286, i64 -1
  %1296 = bitcast %"class.v8::internal::compiler::MoveOperands"** %1295 to <2 x i64>*
  store <2 x i64> %1290, <2 x i64>* %1296, align 8, !alias.scope !214, !noalias !211
  %1297 = getelementptr inbounds %"class.v8::internal::compiler::MoveOperands"*, %"class.v8::internal::compiler::MoveOperands"** %1286, i64 -2
  %1298 = getelementptr inbounds %"class.v8::internal::compiler::MoveOperands"*, %"class.v8::internal::compiler::MoveOperands"** %1297, i64 -1
  %1299 = bitcast %"class.v8::internal::compiler::MoveOperands"** %1298 to <2 x i64>*
  store <2 x i64> %1294, <2 x i64>* %1299, align 8, !alias.scope !214, !noalias !211
  %1300 = sub nuw nsw i64 -4, %1282
  %1301 = sub nuw nsw i64 -4, %1282
  %1302 = getelementptr inbounds %"class.v8::internal::compiler::MoveOperands"*, %"class.v8::internal::compiler::MoveOperands"** %1279, i64 %1300
  %1303 = getelementptr inbounds %"class.v8::internal::compiler::MoveOperands"*, %"class.v8::internal::compiler::MoveOperands"** %1280, i64 %1301
  %1304 = getelementptr inbounds %"class.v8::internal::compiler::MoveOperands"*, %"class.v8::internal::compiler::MoveOperands"** %1303, i64 -1
  %1305 = bitcast %"class.v8::internal::compiler::MoveOperands"** %1304 to <2 x i64>*
  %1306 = load <2 x i64>, <2 x i64>* %1305, align 8, !alias.scope !211
  %1307 = getelementptr inbounds %"class.v8::internal::compiler::MoveOperands"*, %"class.v8::internal::compiler::MoveOperands"** %1303, i64 -2
  %1308 = getelementptr inbounds %"class.v8::internal::compiler::MoveOperands"*, %"class.v8::internal::compiler::MoveOperands"** %1307, i64 -1
  %1309 = bitcast %"class.v8::internal::compiler::MoveOperands"** %1308 to <2 x i64>*
  %1310 = load <2 x i64>, <2 x i64>* %1309, align 8, !alias.scope !211
  %1311 = getelementptr inbounds %"class.v8::internal::compiler::MoveOperands"*, %"class.v8::internal::compiler::MoveOperands"** %1302, i64 -1
  %1312 = bitcast %"class.v8::internal::compiler::MoveOperands"** %1311 to <2 x i64>*
  store <2 x i64> %1306, <2 x i64>* %1312, align 8, !alias.scope !214, !noalias !211
  %1313 = getelementptr inbounds %"class.v8::internal::compiler::MoveOperands"*, %"class.v8::internal::compiler::MoveOperands"** %1302, i64 -2
  %1314 = getelementptr inbounds %"class.v8::internal::compiler::MoveOperands"*, %"class.v8::internal::compiler::MoveOperands"** %1313, i64 -1
  %1315 = bitcast %"class.v8::internal::compiler::MoveOperands"** %1314 to <2 x i64>*
  store <2 x i64> %1310, <2 x i64>* %1315, align 8, !alias.scope !214, !noalias !211
  %1316 = add i64 %1282, 8
  %1317 = add i64 %1283, -2
  %1318 = icmp eq i64 %1317, 0
  br i1 %1318, label %1319, label %1281, !llvm.loop !216

1319:                                             ; preds = %1281, %1264
  %1320 = phi i64 [ 0, %1264 ], [ %1316, %1281 ]
  %1321 = icmp eq i64 %1273, 0
  br i1 %1321, label %1341, label %1322

1322:                                             ; preds = %1319
  %1323 = sub i64 0, %1320
  %1324 = getelementptr %"class.v8::internal::compiler::MoveOperands"*, %"class.v8::internal::compiler::MoveOperands"** %1233, i64 -1
  %1325 = sub i64 0, %1320
  %1326 = getelementptr %"class.v8::internal::compiler::MoveOperands"*, %"class.v8::internal::compiler::MoveOperands"** %1241, i64 -1
  %1327 = getelementptr inbounds %"class.v8::internal::compiler::MoveOperands"*, %"class.v8::internal::compiler::MoveOperands"** %1324, i64 %1323
  %1328 = getelementptr inbounds %"class.v8::internal::compiler::MoveOperands"*, %"class.v8::internal::compiler::MoveOperands"** %1326, i64 %1325
  %1329 = getelementptr inbounds %"class.v8::internal::compiler::MoveOperands"*, %"class.v8::internal::compiler::MoveOperands"** %1328, i64 -1
  %1330 = bitcast %"class.v8::internal::compiler::MoveOperands"** %1329 to <2 x i64>*
  %1331 = load <2 x i64>, <2 x i64>* %1330, align 8, !alias.scope !211
  %1332 = getelementptr inbounds %"class.v8::internal::compiler::MoveOperands"*, %"class.v8::internal::compiler::MoveOperands"** %1328, i64 -2
  %1333 = getelementptr inbounds %"class.v8::internal::compiler::MoveOperands"*, %"class.v8::internal::compiler::MoveOperands"** %1332, i64 -1
  %1334 = bitcast %"class.v8::internal::compiler::MoveOperands"** %1333 to <2 x i64>*
  %1335 = load <2 x i64>, <2 x i64>* %1334, align 8, !alias.scope !211
  %1336 = getelementptr inbounds %"class.v8::internal::compiler::MoveOperands"*, %"class.v8::internal::compiler::MoveOperands"** %1327, i64 -1
  %1337 = bitcast %"class.v8::internal::compiler::MoveOperands"** %1336 to <2 x i64>*
  store <2 x i64> %1331, <2 x i64>* %1337, align 8, !alias.scope !214, !noalias !211
  %1338 = getelementptr inbounds %"class.v8::internal::compiler::MoveOperands"*, %"class.v8::internal::compiler::MoveOperands"** %1327, i64 -2
  %1339 = getelementptr inbounds %"class.v8::internal::compiler::MoveOperands"*, %"class.v8::internal::compiler::MoveOperands"** %1338, i64 -1
  %1340 = bitcast %"class.v8::internal::compiler::MoveOperands"** %1339 to <2 x i64>*
  store <2 x i64> %1335, <2 x i64>* %1340, align 8, !alias.scope !214, !noalias !211
  br label %1341

1341:                                             ; preds = %1319, %1322
  %1342 = icmp eq i64 %1248, %1265
  br i1 %1342, label %1413, label %1343

1343:                                             ; preds = %1341, %1250, %1243
  %1344 = phi %"class.v8::internal::compiler::MoveOperands"** [ %1233, %1250 ], [ %1233, %1243 ], [ %1267, %1341 ]
  %1345 = phi %"class.v8::internal::compiler::MoveOperands"** [ %1241, %1250 ], [ %1241, %1243 ], [ %1269, %1341 ]
  %1346 = getelementptr %"class.v8::internal::compiler::MoveOperands"*, %"class.v8::internal::compiler::MoveOperands"** %1345, i64 -1
  %1347 = ptrtoint %"class.v8::internal::compiler::MoveOperands"** %1346 to i64
  %1348 = sub i64 %1347, %1240
  %1349 = lshr i64 %1348, 3
  %1350 = add nuw nsw i64 %1349, 1
  %1351 = and i64 %1350, 7
  %1352 = icmp eq i64 %1351, 0
  br i1 %1352, label %1364, label %1353

1353:                                             ; preds = %1343, %1353
  %1354 = phi %"class.v8::internal::compiler::MoveOperands"** [ %1357, %1353 ], [ %1344, %1343 ]
  %1355 = phi %"class.v8::internal::compiler::MoveOperands"** [ %1358, %1353 ], [ %1345, %1343 ]
  %1356 = phi i64 [ %1362, %1353 ], [ %1351, %1343 ]
  %1357 = getelementptr inbounds %"class.v8::internal::compiler::MoveOperands"*, %"class.v8::internal::compiler::MoveOperands"** %1354, i64 -1
  %1358 = getelementptr inbounds %"class.v8::internal::compiler::MoveOperands"*, %"class.v8::internal::compiler::MoveOperands"** %1355, i64 -1
  %1359 = bitcast %"class.v8::internal::compiler::MoveOperands"** %1358 to i64*
  %1360 = load i64, i64* %1359, align 8
  %1361 = bitcast %"class.v8::internal::compiler::MoveOperands"** %1357 to i64*
  store i64 %1360, i64* %1361, align 8
  %1362 = add i64 %1356, -1
  %1363 = icmp eq i64 %1362, 0
  br i1 %1363, label %1364, label %1353, !llvm.loop !217

1364:                                             ; preds = %1353, %1343
  %1365 = phi %"class.v8::internal::compiler::MoveOperands"** [ undef, %1343 ], [ %1357, %1353 ]
  %1366 = phi %"class.v8::internal::compiler::MoveOperands"** [ %1344, %1343 ], [ %1357, %1353 ]
  %1367 = phi %"class.v8::internal::compiler::MoveOperands"** [ %1345, %1343 ], [ %1358, %1353 ]
  %1368 = icmp ult i64 %1348, 56
  br i1 %1368, label %1413, label %1369

1369:                                             ; preds = %1364, %1369
  %1370 = phi %"class.v8::internal::compiler::MoveOperands"** [ %1407, %1369 ], [ %1366, %1364 ]
  %1371 = phi %"class.v8::internal::compiler::MoveOperands"** [ %1408, %1369 ], [ %1367, %1364 ]
  %1372 = getelementptr inbounds %"class.v8::internal::compiler::MoveOperands"*, %"class.v8::internal::compiler::MoveOperands"** %1370, i64 -1
  %1373 = getelementptr inbounds %"class.v8::internal::compiler::MoveOperands"*, %"class.v8::internal::compiler::MoveOperands"** %1371, i64 -1
  %1374 = bitcast %"class.v8::internal::compiler::MoveOperands"** %1373 to i64*
  %1375 = load i64, i64* %1374, align 8
  %1376 = bitcast %"class.v8::internal::compiler::MoveOperands"** %1372 to i64*
  store i64 %1375, i64* %1376, align 8
  %1377 = getelementptr inbounds %"class.v8::internal::compiler::MoveOperands"*, %"class.v8::internal::compiler::MoveOperands"** %1370, i64 -2
  %1378 = getelementptr inbounds %"class.v8::internal::compiler::MoveOperands"*, %"class.v8::internal::compiler::MoveOperands"** %1371, i64 -2
  %1379 = bitcast %"class.v8::internal::compiler::MoveOperands"** %1378 to i64*
  %1380 = load i64, i64* %1379, align 8
  %1381 = bitcast %"class.v8::internal::compiler::MoveOperands"** %1377 to i64*
  store i64 %1380, i64* %1381, align 8
  %1382 = getelementptr inbounds %"class.v8::internal::compiler::MoveOperands"*, %"class.v8::internal::compiler::MoveOperands"** %1370, i64 -3
  %1383 = getelementptr inbounds %"class.v8::internal::compiler::MoveOperands"*, %"class.v8::internal::compiler::MoveOperands"** %1371, i64 -3
  %1384 = bitcast %"class.v8::internal::compiler::MoveOperands"** %1383 to i64*
  %1385 = load i64, i64* %1384, align 8
  %1386 = bitcast %"class.v8::internal::compiler::MoveOperands"** %1382 to i64*
  store i64 %1385, i64* %1386, align 8
  %1387 = getelementptr inbounds %"class.v8::internal::compiler::MoveOperands"*, %"class.v8::internal::compiler::MoveOperands"** %1370, i64 -4
  %1388 = getelementptr inbounds %"class.v8::internal::compiler::MoveOperands"*, %"class.v8::internal::compiler::MoveOperands"** %1371, i64 -4
  %1389 = bitcast %"class.v8::internal::compiler::MoveOperands"** %1388 to i64*
  %1390 = load i64, i64* %1389, align 8
  %1391 = bitcast %"class.v8::internal::compiler::MoveOperands"** %1387 to i64*
  store i64 %1390, i64* %1391, align 8
  %1392 = getelementptr inbounds %"class.v8::internal::compiler::MoveOperands"*, %"class.v8::internal::compiler::MoveOperands"** %1370, i64 -5
  %1393 = getelementptr inbounds %"class.v8::internal::compiler::MoveOperands"*, %"class.v8::internal::compiler::MoveOperands"** %1371, i64 -5
  %1394 = bitcast %"class.v8::internal::compiler::MoveOperands"** %1393 to i64*
  %1395 = load i64, i64* %1394, align 8
  %1396 = bitcast %"class.v8::internal::compiler::MoveOperands"** %1392 to i64*
  store i64 %1395, i64* %1396, align 8
  %1397 = getelementptr inbounds %"class.v8::internal::compiler::MoveOperands"*, %"class.v8::internal::compiler::MoveOperands"** %1370, i64 -6
  %1398 = getelementptr inbounds %"class.v8::internal::compiler::MoveOperands"*, %"class.v8::internal::compiler::MoveOperands"** %1371, i64 -6
  %1399 = bitcast %"class.v8::internal::compiler::MoveOperands"** %1398 to i64*
  %1400 = load i64, i64* %1399, align 8
  %1401 = bitcast %"class.v8::internal::compiler::MoveOperands"** %1397 to i64*
  store i64 %1400, i64* %1401, align 8
  %1402 = getelementptr inbounds %"class.v8::internal::compiler::MoveOperands"*, %"class.v8::internal::compiler::MoveOperands"** %1370, i64 -7
  %1403 = getelementptr inbounds %"class.v8::internal::compiler::MoveOperands"*, %"class.v8::internal::compiler::MoveOperands"** %1371, i64 -7
  %1404 = bitcast %"class.v8::internal::compiler::MoveOperands"** %1403 to i64*
  %1405 = load i64, i64* %1404, align 8
  %1406 = bitcast %"class.v8::internal::compiler::MoveOperands"** %1402 to i64*
  store i64 %1405, i64* %1406, align 8
  %1407 = getelementptr inbounds %"class.v8::internal::compiler::MoveOperands"*, %"class.v8::internal::compiler::MoveOperands"** %1370, i64 -8
  %1408 = getelementptr inbounds %"class.v8::internal::compiler::MoveOperands"*, %"class.v8::internal::compiler::MoveOperands"** %1371, i64 -8
  %1409 = bitcast %"class.v8::internal::compiler::MoveOperands"** %1408 to i64*
  %1410 = load i64, i64* %1409, align 8
  %1411 = bitcast %"class.v8::internal::compiler::MoveOperands"** %1407 to i64*
  store i64 %1410, i64* %1411, align 8
  %1412 = icmp eq %"class.v8::internal::compiler::MoveOperands"** %1408, %1239
  br i1 %1412, label %1413, label %1369, !llvm.loop !218

1413:                                             ; preds = %1364, %1369, %1341, %1230
  %1414 = phi %"class.v8::internal::compiler::MoveOperands"** [ %1233, %1230 ], [ %1267, %1341 ], [ %1365, %1364 ], [ %1407, %1369 ]
  %1415 = ptrtoint %"class.v8::internal::compiler::MoveOperands"** %1414 to i64
  store i64 %1415, i64* %412, align 8
  store i64 %1238, i64* %841, align 8
  store i64 %1235, i64* %411, align 8
  br label %1416

1416:                                             ; preds = %1191, %1413
  %1417 = getelementptr inbounds %"class.std::__1::__tree_end_node", %"class.std::__1::__tree_end_node"* %844, i64 1, i32 0
  %1418 = load %"class.std::__1::__tree_node_base"*, %"class.std::__1::__tree_node_base"** %1417, align 8
  %1419 = icmp eq %"class.std::__1::__tree_node_base"* %1418, null
  br i1 %1419, label %1420, label %1430

1420:                                             ; preds = %1416
  %1421 = bitcast %"class.std::__1::__tree_end_node"* %844 to %"class.std::__1::__tree_node_base"*
  %1422 = getelementptr inbounds %"class.std::__1::__tree_end_node", %"class.std::__1::__tree_end_node"* %844, i64 2
  %1423 = bitcast %"class.std::__1::__tree_end_node"* %1422 to %"class.std::__1::__tree_end_node"**
  %1424 = load %"class.std::__1::__tree_end_node"*, %"class.std::__1::__tree_end_node"** %1423, align 8
  %1425 = getelementptr inbounds %"class.std::__1::__tree_end_node", %"class.std::__1::__tree_end_node"* %1424, i64 0, i32 0
  %1426 = load %"class.std::__1::__tree_node_base"*, %"class.std::__1::__tree_node_base"** %1425, align 8
  %1427 = icmp eq %"class.std::__1::__tree_node_base"* %1426, %1421
  br i1 %1427, label %1428, label %1437

1428:                                             ; preds = %1437, %1420, %1435
  %1429 = phi %"class.std::__1::__tree_end_node"* [ %1436, %1435 ], [ %1424, %1420 ], [ %1442, %1437 ]
  br label %843

1430:                                             ; preds = %1416, %1430
  %1431 = phi %"class.std::__1::__tree_node_base"* [ %1433, %1430 ], [ %1418, %1416 ]
  %1432 = getelementptr inbounds %"class.std::__1::__tree_node_base", %"class.std::__1::__tree_node_base"* %1431, i64 0, i32 0, i32 0
  %1433 = load %"class.std::__1::__tree_node_base"*, %"class.std::__1::__tree_node_base"** %1432, align 8
  %1434 = icmp eq %"class.std::__1::__tree_node_base"* %1433, null
  br i1 %1434, label %1435, label %1430

1435:                                             ; preds = %1430
  %1436 = getelementptr inbounds %"class.std::__1::__tree_node_base", %"class.std::__1::__tree_node_base"* %1431, i64 0, i32 0
  br label %1428

1437:                                             ; preds = %1420, %1437
  %1438 = phi %"class.std::__1::__tree_end_node"** [ %1441, %1437 ], [ %1423, %1420 ]
  %1439 = bitcast %"class.std::__1::__tree_end_node"** %1438 to %"class.std::__1::__tree_node_base"**
  %1440 = load %"class.std::__1::__tree_node_base"*, %"class.std::__1::__tree_node_base"** %1439, align 8
  %1441 = getelementptr inbounds %"class.std::__1::__tree_node_base", %"class.std::__1::__tree_node_base"* %1440, i64 0, i32 2
  %1442 = load %"class.std::__1::__tree_end_node"*, %"class.std::__1::__tree_end_node"** %1441, align 8
  %1443 = getelementptr inbounds %"class.std::__1::__tree_end_node", %"class.std::__1::__tree_end_node"* %1442, i64 0, i32 0
  %1444 = load %"class.std::__1::__tree_node_base"*, %"class.std::__1::__tree_node_base"** %1443, align 8
  %1445 = icmp eq %"class.std::__1::__tree_node_base"* %1444, %1440
  br i1 %1445, label %1428, label %1437

1446:                                             ; preds = %916
  %1447 = load %"class.v8::internal::compiler::MoveOperands"**, %"class.v8::internal::compiler::MoveOperands"*** %836, align 8
  %1448 = icmp eq %"class.v8::internal::compiler::MoveOperands"** %1447, null
  br i1 %1448, label %1451, label %1449

1449:                                             ; preds = %1446
  %1450 = ptrtoint %"class.v8::internal::compiler::MoveOperands"** %1447 to i64
  store i64 %1450, i64* %840, align 8
  br label %1451

1451:                                             ; preds = %1446, %1449
  call void @llvm.lifetime.end.p0i8(i64 32, i8* nonnull %407) #16
  %1452 = load %"class.v8::internal::compiler::MoveOperands"**, %"class.v8::internal::compiler::MoveOperands"*** %838, align 8
  %1453 = icmp eq %"class.v8::internal::compiler::MoveOperands"** %1452, null
  br i1 %1453, label %1456, label %1454

1454:                                             ; preds = %1451
  %1455 = ptrtoint %"class.v8::internal::compiler::MoveOperands"** %1452 to i64
  store i64 %1455, i64* %841, align 8
  br label %1456

1456:                                             ; preds = %1451, %1454
  call void @llvm.lifetime.end.p0i8(i64 32, i8* nonnull %404) #16
  br label %1457

1457:                                             ; preds = %2, %41, %1456
  %1458 = getelementptr inbounds %"class.v8::internal::ZoneMap.1442", %"class.v8::internal::ZoneMap.1442"* %3, i64 0, i32 0, i32 0
  %1459 = bitcast %"class.std::__1::__tree_end_node"* %16 to %"class.std::__1::__tree_node.1536"**
  %1460 = load %"class.std::__1::__tree_node.1536"*, %"class.std::__1::__tree_node.1536"** %1459, align 8
  call void @_ZNSt3__16__treeINS_12__value_typeINS_4pairIPN2v88internal8compiler12ParallelMoveENS5_18InstructionOperandEEES8_EENS_19__map_value_compareIS9_SA_NS5_26DelayedInsertionMapCompareELb1EEENS4_13ZoneAllocatorISA_EEE7destroyEPNS_11__tree_nodeISA_PvEE(%"class.std::__1::__tree.1444"* nonnull %1458, %"class.std::__1::__tree_node.1536"* %1460) #16
  call void @llvm.lifetime.end.p0i8(i64 32, i8* nonnull %8) #16
  ret void
}

declare void @_ZNK2v88internal8compiler12ParallelMove18PrepareInsertAfterEPNS1_12MoveOperandsEPNS0_10ZoneVectorIS4_EE(%"class.v8::internal::compiler::ParallelMove"*, %"class.v8::internal::compiler::MoveOperands"*, %"class.v8::internal::ZoneVector.1203"*) local_unnamed_addr #6

declare void @_ZN2v88internal8OFStreamC2EP8_IO_FILE(%"class.v8::internal::OFStream"*, i8**, %struct._IO_FILE*) unnamed_addr #6

declare %"class.v8::base::RecursiveMutex"* @_ZN2v88internal12StdoutStream14GetStdoutMutexEv() local_unnamed_addr #6

; Function Attrs: nounwind ssp uwtable
define linkonce_odr hidden void @_ZN2v88internal8OFStreamD1Ev(%"class.v8::internal::OFStream"*) unnamed_addr #0 comdat align 2 {
  %2 = bitcast %"class.v8::internal::OFStream"* %0 to i64*
  store i64 ptrtoint (i8** getelementptr inbounds ({ [5 x i8*], [5 x i8*] }, { [5 x i8*], [5 x i8*] }* @_ZTVN2v88internal8OFStreamE, i64 0, inrange i32 0, i64 3) to i64), i64* %2, align 8
  %3 = getelementptr inbounds %"class.v8::internal::OFStream", %"class.v8::internal::OFStream"* %0, i64 0, i32 2
  %4 = bitcast %"class.std::__1::basic_ios.base"* %3 to i64*
  store i64 ptrtoint (i8** getelementptr inbounds ({ [5 x i8*], [5 x i8*] }, { [5 x i8*], [5 x i8*] }* @_ZTVN2v88internal8OFStreamE, i64 0, inrange i32 1, i64 3) to i64), i64* %4, align 8
  %5 = getelementptr inbounds %"class.v8::internal::OFStream", %"class.v8::internal::OFStream"* %0, i64 0, i32 1, i32 0
  tail call void @_ZNSt3__115basic_streambufIcNS_11char_traitsIcEEED2Ev(%"class.std::__1::basic_streambuf"* %5) #16
  %6 = bitcast %"class.v8::internal::OFStream"* %0 to %"class.std::__1::basic_ostream"*
  tail call void @_ZNSt3__113basic_ostreamIcNS_11char_traitsIcEEED2Ev(%"class.std::__1::basic_ostream"* %6, i8** getelementptr inbounds ([4 x i8*], [4 x i8*]* @_ZTTN2v88internal8OFStreamE, i64 0, i64 1)) #16
  %7 = bitcast %"class.std::__1::basic_ios.base"* %3 to %"class.std::__1::basic_ios"*
  tail call void @_ZNSt3__19basic_iosIcNS_11char_traitsIcEEED2Ev(%"class.std::__1::basic_ios"* %7) #16
  ret void
}

; Function Attrs: nounwind ssp uwtable
define linkonce_odr hidden void @_ZN2v88internal8OFStreamD0Ev(%"class.v8::internal::OFStream"*) unnamed_addr #0 comdat align 2 {
  %2 = bitcast %"class.v8::internal::OFStream"* %0 to i64*
  store i64 ptrtoint (i8** getelementptr inbounds ({ [5 x i8*], [5 x i8*] }, { [5 x i8*], [5 x i8*] }* @_ZTVN2v88internal8OFStreamE, i64 0, inrange i32 0, i64 3) to i64), i64* %2, align 8
  %3 = getelementptr inbounds %"class.v8::internal::OFStream", %"class.v8::internal::OFStream"* %0, i64 0, i32 2
  %4 = bitcast %"class.std::__1::basic_ios.base"* %3 to i64*
  store i64 ptrtoint (i8** getelementptr inbounds ({ [5 x i8*], [5 x i8*] }, { [5 x i8*], [5 x i8*] }* @_ZTVN2v88internal8OFStreamE, i64 0, inrange i32 1, i64 3) to i64), i64* %4, align 8
  %5 = getelementptr inbounds %"class.v8::internal::OFStream", %"class.v8::internal::OFStream"* %0, i64 0, i32 1, i32 0
  tail call void @_ZNSt3__115basic_streambufIcNS_11char_traitsIcEEED2Ev(%"class.std::__1::basic_streambuf"* %5) #16
  %6 = bitcast %"class.v8::internal::OFStream"* %0 to %"class.std::__1::basic_ostream"*
  tail call void @_ZNSt3__113basic_ostreamIcNS_11char_traitsIcEEED2Ev(%"class.std::__1::basic_ostream"* %6, i8** getelementptr inbounds ([4 x i8*], [4 x i8*]* @_ZTTN2v88internal8OFStreamE, i64 0, i64 1)) #16
  %7 = bitcast %"class.std::__1::basic_ios.base"* %3 to %"class.std::__1::basic_ios"*
  tail call void @_ZNSt3__19basic_iosIcNS_11char_traitsIcEEED2Ev(%"class.std::__1::basic_ios"* %7) #16
  %8 = bitcast %"class.v8::internal::OFStream"* %0 to i8*
  tail call void @_ZdlPv(i8* %8) #18
  ret void
}

; Function Attrs: nounwind ssp uwtable
define linkonce_odr hidden void @_ZTv0_n24_N2v88internal8OFStreamD1Ev(%"class.v8::internal::OFStream"*) unnamed_addr #0 comdat align 2 {
  %2 = bitcast %"class.v8::internal::OFStream"* %0 to i8*
  %3 = bitcast %"class.v8::internal::OFStream"* %0 to i8**
  %4 = load i8*, i8** %3, align 8
  %5 = getelementptr inbounds i8, i8* %4, i64 -24
  %6 = bitcast i8* %5 to i64*
  %7 = load i64, i64* %6, align 8
  %8 = getelementptr inbounds i8, i8* %2, i64 %7
  %9 = bitcast i8* %8 to i64*
  store i64 ptrtoint (i8** getelementptr inbounds ({ [5 x i8*], [5 x i8*] }, { [5 x i8*], [5 x i8*] }* @_ZTVN2v88internal8OFStreamE, i64 0, inrange i32 0, i64 3) to i64), i64* %9, align 8
  %10 = getelementptr inbounds i8, i8* %8, i64 80
  %11 = bitcast i8* %10 to i64*
  store i64 ptrtoint (i8** getelementptr inbounds ({ [5 x i8*], [5 x i8*] }, { [5 x i8*], [5 x i8*] }* @_ZTVN2v88internal8OFStreamE, i64 0, inrange i32 1, i64 3) to i64), i64* %11, align 8
  %12 = getelementptr inbounds i8, i8* %8, i64 8
  %13 = bitcast i8* %12 to %"class.std::__1::basic_streambuf"*
  tail call void @_ZNSt3__115basic_streambufIcNS_11char_traitsIcEEED2Ev(%"class.std::__1::basic_streambuf"* %13) #16
  %14 = bitcast i8* %8 to %"class.std::__1::basic_ostream"*
  tail call void @_ZNSt3__113basic_ostreamIcNS_11char_traitsIcEEED2Ev(%"class.std::__1::basic_ostream"* %14, i8** getelementptr inbounds ([4 x i8*], [4 x i8*]* @_ZTTN2v88internal8OFStreamE, i64 0, i64 1)) #16
  %15 = bitcast i8* %10 to %"class.std::__1::basic_ios"*
  tail call void @_ZNSt3__19basic_iosIcNS_11char_traitsIcEEED2Ev(%"class.std::__1::basic_ios"* %15) #16
  ret void
}

; Function Attrs: nounwind ssp uwtable
define linkonce_odr hidden void @_ZTv0_n24_N2v88internal8OFStreamD0Ev(%"class.v8::internal::OFStream"*) unnamed_addr #0 comdat align 2 {
  %2 = bitcast %"class.v8::internal::OFStream"* %0 to i8*
  %3 = bitcast %"class.v8::internal::OFStream"* %0 to i8**
  %4 = load i8*, i8** %3, align 8
  %5 = getelementptr inbounds i8, i8* %4, i64 -24
  %6 = bitcast i8* %5 to i64*
  %7 = load i64, i64* %6, align 8
  %8 = getelementptr inbounds i8, i8* %2, i64 %7
  %9 = bitcast i8* %8 to i64*
  store i64 ptrtoint (i8** getelementptr inbounds ({ [5 x i8*], [5 x i8*] }, { [5 x i8*], [5 x i8*] }* @_ZTVN2v88internal8OFStreamE, i64 0, inrange i32 0, i64 3) to i64), i64* %9, align 8
  %10 = getelementptr inbounds i8, i8* %8, i64 80
  %11 = bitcast i8* %10 to i64*
  store i64 ptrtoint (i8** getelementptr inbounds ({ [5 x i8*], [5 x i8*] }, { [5 x i8*], [5 x i8*] }* @_ZTVN2v88internal8OFStreamE, i64 0, inrange i32 1, i64 3) to i64), i64* %11, align 8
  %12 = getelementptr inbounds i8, i8* %8, i64 8
  %13 = bitcast i8* %12 to %"class.std::__1::basic_streambuf"*
  tail call void @_ZNSt3__115basic_streambufIcNS_11char_traitsIcEEED2Ev(%"class.std::__1::basic_streambuf"* %13) #16
  %14 = bitcast i8* %8 to %"class.std::__1::basic_ostream"*
  tail call void @_ZNSt3__113basic_ostreamIcNS_11char_traitsIcEEED2Ev(%"class.std::__1::basic_ostream"* %14, i8** getelementptr inbounds ([4 x i8*], [4 x i8*]* @_ZTTN2v88internal8OFStreamE, i64 0, i64 1)) #16
  %15 = bitcast i8* %10 to %"class.std::__1::basic_ios"*
  tail call void @_ZNSt3__19basic_iosIcNS_11char_traitsIcEEED2Ev(%"class.std::__1::basic_ios"* %15) #16
  tail call void @_ZdlPv(i8* %8) #18
  ret void
}

; Function Attrs: nounwind
declare void @_ZNSt3__113basic_ostreamIcNS_11char_traitsIcEEED1Ev(%"class.std::__1::basic_ostream"*) unnamed_addr #10

; Function Attrs: nounwind
declare void @_ZNSt3__113basic_ostreamIcNS_11char_traitsIcEEED0Ev(%"class.std::__1::basic_ostream"*) unnamed_addr #10

; Function Attrs: nounwind ssp uwtable
declare void @_ZTv0_n24_NSt3__113basic_ostreamIcNS_11char_traitsIcEEED1Ev(%"class.std::__1::basic_ostream"*) unnamed_addr #0 align 2

; Function Attrs: nounwind ssp uwtable
declare void @_ZTv0_n24_NSt3__113basic_ostreamIcNS_11char_traitsIcEEED0Ev(%"class.std::__1::basic_ostream"*) unnamed_addr #0 align 2

; Function Attrs: inlinehint nounwind ssp uwtable
define linkonce_odr hidden void @_ZN2v88internal12StdoutStreamD0Ev(%"class.v8::internal::StdoutStream"*) unnamed_addr #5 comdat align 2 {
  %2 = bitcast %"class.v8::internal::StdoutStream"* %0 to i64*
  store i64 ptrtoint (i8** getelementptr inbounds ({ [5 x i8*], [5 x i8*] }, { [5 x i8*], [5 x i8*] }* @_ZTVN2v88internal12StdoutStreamE, i64 0, inrange i32 0, i64 3) to i64), i64* %2, align 8
  %3 = getelementptr inbounds %"class.v8::internal::StdoutStream", %"class.v8::internal::StdoutStream"* %0, i64 0, i32 2
  %4 = bitcast %"class.std::__1::basic_ios.base"* %3 to i64*
  store i64 ptrtoint (i8** getelementptr inbounds ({ [5 x i8*], [5 x i8*] }, { [5 x i8*], [5 x i8*] }* @_ZTVN2v88internal12StdoutStreamE, i64 0, inrange i32 1, i64 3) to i64), i64* %4, align 8
  %5 = getelementptr inbounds %"class.v8::internal::StdoutStream", %"class.v8::internal::StdoutStream"* %0, i64 0, i32 1, i32 0
  %6 = load %"class.v8::base::RecursiveMutex"*, %"class.v8::base::RecursiveMutex"** %5, align 8
  tail call void @_ZN2v84base14RecursiveMutex6UnlockEv(%"class.v8::base::RecursiveMutex"* %6) #16
  store i64 ptrtoint (i8** getelementptr inbounds ({ [5 x i8*], [5 x i8*] }, { [5 x i8*], [5 x i8*] }* @_ZTCN2v88internal12StdoutStreamE0_NS0_8OFStreamE, i64 0, inrange i32 0, i64 3) to i64), i64* %2, align 8
  store i64 ptrtoint (i8** getelementptr inbounds ({ [5 x i8*], [5 x i8*] }, { [5 x i8*], [5 x i8*] }* @_ZTCN2v88internal12StdoutStreamE0_NS0_8OFStreamE, i64 0, inrange i32 1, i64 3) to i64), i64* %4, align 8
  %7 = getelementptr inbounds %"class.v8::internal::StdoutStream", %"class.v8::internal::StdoutStream"* %0, i64 0, i32 0, i32 1, i32 0
  tail call void @_ZNSt3__115basic_streambufIcNS_11char_traitsIcEEED2Ev(%"class.std::__1::basic_streambuf"* %7) #16
  %8 = bitcast %"class.v8::internal::StdoutStream"* %0 to %"class.std::__1::basic_ostream"*
  tail call void @_ZNSt3__113basic_ostreamIcNS_11char_traitsIcEEED2Ev(%"class.std::__1::basic_ostream"* %8, i8** getelementptr inbounds ([6 x i8*], [6 x i8*]* @_ZTTN2v88internal12StdoutStreamE, i64 0, i64 2)) #16
  %9 = bitcast %"class.std::__1::basic_ios.base"* %3 to %"class.std::__1::basic_ios"*
  tail call void @_ZNSt3__19basic_iosIcNS_11char_traitsIcEEED2Ev(%"class.std::__1::basic_ios"* %9) #16
  %10 = bitcast %"class.v8::internal::StdoutStream"* %0 to i8*
  tail call void @_ZdlPv(i8* %10) #18
  ret void
}

; Function Attrs: inlinehint nounwind ssp uwtable
define linkonce_odr hidden void @_ZTv0_n24_N2v88internal12StdoutStreamD1Ev(%"class.v8::internal::StdoutStream"*) unnamed_addr #5 comdat align 2 {
  %2 = bitcast %"class.v8::internal::StdoutStream"* %0 to i8*
  %3 = bitcast %"class.v8::internal::StdoutStream"* %0 to i8**
  %4 = load i8*, i8** %3, align 8
  %5 = getelementptr inbounds i8, i8* %4, i64 -24
  %6 = bitcast i8* %5 to i64*
  %7 = load i64, i64* %6, align 8
  %8 = getelementptr inbounds i8, i8* %2, i64 %7
  %9 = bitcast i8* %8 to i64*
  store i64 ptrtoint (i8** getelementptr inbounds ({ [5 x i8*], [5 x i8*] }, { [5 x i8*], [5 x i8*] }* @_ZTVN2v88internal12StdoutStreamE, i64 0, inrange i32 0, i64 3) to i64), i64* %9, align 8
  %10 = getelementptr inbounds i8, i8* %8, i64 88
  %11 = bitcast i8* %10 to i64*
  store i64 ptrtoint (i8** getelementptr inbounds ({ [5 x i8*], [5 x i8*] }, { [5 x i8*], [5 x i8*] }* @_ZTVN2v88internal12StdoutStreamE, i64 0, inrange i32 1, i64 3) to i64), i64* %11, align 8
  %12 = getelementptr inbounds i8, i8* %8, i64 80
  %13 = bitcast i8* %12 to %"class.v8::base::RecursiveMutex"**
  %14 = load %"class.v8::base::RecursiveMutex"*, %"class.v8::base::RecursiveMutex"** %13, align 8
  tail call void @_ZN2v84base14RecursiveMutex6UnlockEv(%"class.v8::base::RecursiveMutex"* %14) #16
  store i64 ptrtoint (i8** getelementptr inbounds ({ [5 x i8*], [5 x i8*] }, { [5 x i8*], [5 x i8*] }* @_ZTCN2v88internal12StdoutStreamE0_NS0_8OFStreamE, i64 0, inrange i32 0, i64 3) to i64), i64* %9, align 8
  store i64 ptrtoint (i8** getelementptr inbounds ({ [5 x i8*], [5 x i8*] }, { [5 x i8*], [5 x i8*] }* @_ZTCN2v88internal12StdoutStreamE0_NS0_8OFStreamE, i64 0, inrange i32 1, i64 3) to i64), i64* %11, align 8
  %15 = getelementptr inbounds i8, i8* %8, i64 8
  %16 = bitcast i8* %15 to %"class.std::__1::basic_streambuf"*
  tail call void @_ZNSt3__115basic_streambufIcNS_11char_traitsIcEEED2Ev(%"class.std::__1::basic_streambuf"* %16) #16
  %17 = bitcast i8* %8 to %"class.std::__1::basic_ostream"*
  tail call void @_ZNSt3__113basic_ostreamIcNS_11char_traitsIcEEED2Ev(%"class.std::__1::basic_ostream"* %17, i8** getelementptr inbounds ([6 x i8*], [6 x i8*]* @_ZTTN2v88internal12StdoutStreamE, i64 0, i64 2)) #16
  %18 = bitcast i8* %10 to %"class.std::__1::basic_ios"*
  tail call void @_ZNSt3__19basic_iosIcNS_11char_traitsIcEEED2Ev(%"class.std::__1::basic_ios"* %18) #16
  ret void
}

; Function Attrs: inlinehint nounwind ssp uwtable
define linkonce_odr hidden void @_ZTv0_n24_N2v88internal12StdoutStreamD0Ev(%"class.v8::internal::StdoutStream"*) unnamed_addr #5 comdat align 2 {
  %2 = bitcast %"class.v8::internal::StdoutStream"* %0 to i8*
  %3 = bitcast %"class.v8::internal::StdoutStream"* %0 to i8**
  %4 = load i8*, i8** %3, align 8
  %5 = getelementptr inbounds i8, i8* %4, i64 -24
  %6 = bitcast i8* %5 to i64*
  %7 = load i64, i64* %6, align 8
  %8 = getelementptr inbounds i8, i8* %2, i64 %7
  %9 = bitcast i8* %8 to i64*
  store i64 ptrtoint (i8** getelementptr inbounds ({ [5 x i8*], [5 x i8*] }, { [5 x i8*], [5 x i8*] }* @_ZTVN2v88internal12StdoutStreamE, i64 0, inrange i32 0, i64 3) to i64), i64* %9, align 8
  %10 = getelementptr inbounds i8, i8* %8, i64 88
  %11 = bitcast i8* %10 to i64*
  store i64 ptrtoint (i8** getelementptr inbounds ({ [5 x i8*], [5 x i8*] }, { [5 x i8*], [5 x i8*] }* @_ZTVN2v88internal12StdoutStreamE, i64 0, inrange i32 1, i64 3) to i64), i64* %11, align 8
  %12 = getelementptr inbounds i8, i8* %8, i64 80
  %13 = bitcast i8* %12 to %"class.v8::base::RecursiveMutex"**
  %14 = load %"class.v8::base::RecursiveMutex"*, %"class.v8::base::RecursiveMutex"** %13, align 8
  tail call void @_ZN2v84base14RecursiveMutex6UnlockEv(%"class.v8::base::RecursiveMutex"* %14) #16
  store i64 ptrtoint (i8** getelementptr inbounds ({ [5 x i8*], [5 x i8*] }, { [5 x i8*], [5 x i8*] }* @_ZTCN2v88internal12StdoutStreamE0_NS0_8OFStreamE, i64 0, inrange i32 0, i64 3) to i64), i64* %9, align 8
  store i64 ptrtoint (i8** getelementptr inbounds ({ [5 x i8*], [5 x i8*] }, { [5 x i8*], [5 x i8*] }* @_ZTCN2v88internal12StdoutStreamE0_NS0_8OFStreamE, i64 0, inrange i32 1, i64 3) to i64), i64* %11, align 8
  %15 = getelementptr inbounds i8, i8* %8, i64 8
  %16 = bitcast i8* %15 to %"class.std::__1::basic_streambuf"*
  tail call void @_ZNSt3__115basic_streambufIcNS_11char_traitsIcEEED2Ev(%"class.std::__1::basic_streambuf"* %16) #16
  %17 = bitcast i8* %8 to %"class.std::__1::basic_ostream"*
  tail call void @_ZNSt3__113basic_ostreamIcNS_11char_traitsIcEEED2Ev(%"class.std::__1::basic_ostream"* %17, i8** getelementptr inbounds ([6 x i8*], [6 x i8*]* @_ZTTN2v88internal12StdoutStreamE, i64 0, i64 2)) #16
  %18 = bitcast i8* %10 to %"class.std::__1::basic_ios"*
  tail call void @_ZNSt3__19basic_iosIcNS_11char_traitsIcEEED2Ev(%"class.std::__1::basic_ios"* %18) #16
  tail call void @_ZdlPv(i8* %8) #18
  ret void
}

declare void @_ZN2v84base14RecursiveMutex4LockEv(%"class.v8::base::RecursiveMutex"*) local_unnamed_addr #6

; Function Attrs: nounwind
declare void @_ZNSt3__19basic_iosIcNS_11char_traitsIcEEED2Ev(%"class.std::__1::basic_ios"*) unnamed_addr #10

; Function Attrs: nounwind
declare void @_ZNSt3__115basic_streambufIcNS_11char_traitsIcEEED2Ev(%"class.std::__1::basic_streambuf"*) unnamed_addr #10

; Function Attrs: nounwind
declare void @_ZNSt3__113basic_ostreamIcNS_11char_traitsIcEEED2Ev(%"class.std::__1::basic_ostream"*, i8**) unnamed_addr #10

; Function Attrs: nobuiltin nounwind
declare void @_ZdlPv(i8*) local_unnamed_addr #11

declare void @_ZN2v84base14RecursiveMutex6UnlockEv(%"class.v8::base::RecursiveMutex"*) local_unnamed_addr #6

declare i64 @_ZN2v88internal4Zone9NewExpandEm(%"class.v8::internal::Zone"*, i64) local_unnamed_addr #6

; Function Attrs: nounwind ssp uwtable
define linkonce_odr hidden %"class.v8::internal::compiler::MoveOperands"* @_ZN2v88internal8compiler12ParallelMove7AddMoveERKNS1_18InstructionOperandES5_PNS0_4ZoneE(%"class.v8::internal::compiler::ParallelMove"*, %"class.v8::internal::compiler::InstructionOperand"* dereferenceable(8), %"class.v8::internal::compiler::InstructionOperand"* dereferenceable(8), %"class.v8::internal::Zone"*) local_unnamed_addr #0 comdat align 2 {
  %5 = getelementptr inbounds %"class.v8::internal::compiler::InstructionOperand", %"class.v8::internal::compiler::InstructionOperand"* %1, i64 0, i32 0
  %6 = load i64, i64* %5, align 8
  %7 = and i64 %6, 7
  %8 = icmp eq i64 %7, 4
  br i1 %8, label %9, label %11

9:                                                ; preds = %4
  %10 = icmp eq %"class.v8::internal::compiler::InstructionOperand"* %1, %2
  br i1 %10, label %518, label %48

11:                                               ; preds = %4
  %12 = icmp ugt i64 %7, 4
  br i1 %12, label %13, label %26

13:                                               ; preds = %11
  %14 = and i64 %6, 24
  %15 = icmp eq i64 %14, 0
  br i1 %15, label %16, label %21

16:                                               ; preds = %13
  %17 = lshr i64 %6, 5
  %18 = trunc i64 %17 to i8
  %19 = icmp ugt i8 %18, 11
  %20 = select i1 %19, i64 416, i64 0
  br label %21

21:                                               ; preds = %16, %13
  %22 = phi i64 [ 0, %13 ], [ %20, %16 ]
  %23 = and i64 %6, -8168
  %24 = or i64 %23, %22
  %25 = or i64 %24, 5
  br label %26

26:                                               ; preds = %21, %11
  %27 = phi i64 [ %25, %21 ], [ %6, %11 ]
  %28 = getelementptr inbounds %"class.v8::internal::compiler::InstructionOperand", %"class.v8::internal::compiler::InstructionOperand"* %2, i64 0, i32 0
  %29 = load i64, i64* %28, align 8
  %30 = and i64 %29, 7
  %31 = icmp ugt i64 %30, 4
  br i1 %31, label %32, label %45

32:                                               ; preds = %26
  %33 = and i64 %29, 24
  %34 = icmp eq i64 %33, 0
  br i1 %34, label %35, label %40

35:                                               ; preds = %32
  %36 = lshr i64 %29, 5
  %37 = trunc i64 %36 to i8
  %38 = icmp ugt i8 %37, 11
  %39 = select i1 %38, i64 416, i64 0
  br label %40

40:                                               ; preds = %35, %32
  %41 = phi i64 [ 0, %32 ], [ %39, %35 ]
  %42 = and i64 %29, -8168
  %43 = or i64 %42, %41
  %44 = or i64 %43, 5
  br label %45

45:                                               ; preds = %26, %40
  %46 = phi i64 [ %44, %40 ], [ %29, %26 ]
  %47 = icmp eq i64 %27, %46
  br i1 %47, label %518, label %48

48:                                               ; preds = %9, %45
  %49 = getelementptr inbounds %"class.v8::internal::Zone", %"class.v8::internal::Zone"* %3, i64 0, i32 2
  %50 = load i64, i64* %49, align 8
  %51 = getelementptr inbounds %"class.v8::internal::Zone", %"class.v8::internal::Zone"* %3, i64 0, i32 3
  %52 = load i64, i64* %51, align 8
  %53 = sub i64 %52, %50
  %54 = icmp ult i64 %53, 16
  br i1 %54, label %55, label %57, !prof !2

55:                                               ; preds = %48
  %56 = tail call i64 @_ZN2v88internal4Zone9NewExpandEm(%"class.v8::internal::Zone"* %3, i64 16) #16
  br label %59

57:                                               ; preds = %48
  %58 = add i64 %50, 16
  store i64 %58, i64* %49, align 8
  br label %59

59:                                               ; preds = %55, %57
  %60 = phi i64 [ %56, %55 ], [ %50, %57 ]
  %61 = inttoptr i64 %60 to %"class.v8::internal::compiler::MoveOperands"*
  %62 = getelementptr inbounds %"class.v8::internal::compiler::MoveOperands", %"class.v8::internal::compiler::MoveOperands"* %61, i64 0, i32 0, i32 0
  %63 = load i64, i64* %5, align 8
  store i64 %63, i64* %62, align 8
  %64 = getelementptr inbounds %"class.v8::internal::compiler::InstructionOperand", %"class.v8::internal::compiler::InstructionOperand"* %2, i64 0, i32 0
  %65 = getelementptr inbounds %"class.v8::internal::compiler::MoveOperands", %"class.v8::internal::compiler::MoveOperands"* %61, i64 0, i32 1, i32 0
  %66 = load i64, i64* %64, align 8
  store i64 %66, i64* %65, align 8
  %67 = getelementptr inbounds %"class.v8::internal::compiler::ParallelMove", %"class.v8::internal::compiler::ParallelMove"* %0, i64 0, i32 0, i32 0, i32 0, i32 0
  %68 = load %"class.v8::internal::compiler::MoveOperands"**, %"class.v8::internal::compiler::MoveOperands"*** %67, align 8
  %69 = getelementptr inbounds %"class.v8::internal::compiler::ParallelMove", %"class.v8::internal::compiler::ParallelMove"* %0, i64 0, i32 0, i32 0, i32 0, i32 1
  %70 = load %"class.v8::internal::compiler::MoveOperands"**, %"class.v8::internal::compiler::MoveOperands"*** %69, align 8
  %71 = icmp eq %"class.v8::internal::compiler::MoveOperands"** %68, %70
  %72 = ptrtoint %"class.v8::internal::compiler::MoveOperands"** %68 to i64
  %73 = ptrtoint %"class.v8::internal::compiler::MoveOperands"** %70 to i64
  %74 = getelementptr inbounds %"class.v8::internal::compiler::ParallelMove", %"class.v8::internal::compiler::ParallelMove"* %0, i64 0, i32 0, i32 0, i32 0, i32 2, i32 0, i32 0
  br i1 %71, label %77, label %75

75:                                               ; preds = %59
  %76 = load %"class.v8::internal::compiler::MoveOperands"**, %"class.v8::internal::compiler::MoveOperands"*** %74, align 8
  br label %286

77:                                               ; preds = %59
  %78 = bitcast %"class.v8::internal::compiler::MoveOperands"*** %74 to i64*
  %79 = load i64, i64* %78, align 8
  %80 = bitcast %"class.v8::internal::compiler::ParallelMove"* %0 to i64*
  %81 = sub i64 %79, %72
  %82 = ashr exact i64 %81, 3
  %83 = icmp ult i64 %82, 4
  %84 = inttoptr i64 %79 to %"class.v8::internal::compiler::MoveOperands"**
  br i1 %83, label %85, label %286

85:                                               ; preds = %77
  %86 = bitcast %"class.v8::internal::compiler::MoveOperands"*** %69 to i64*
  %87 = sub i64 %73, %72
  %88 = ashr exact i64 %87, 3
  %89 = getelementptr inbounds %"class.v8::internal::compiler::ParallelMove", %"class.v8::internal::compiler::ParallelMove"* %0, i64 0, i32 0, i32 0, i32 0, i32 2, i32 1, i32 0, i32 0
  %90 = load %"class.v8::internal::Zone"*, %"class.v8::internal::Zone"** %89, align 8
  %91 = getelementptr inbounds %"class.v8::internal::Zone", %"class.v8::internal::Zone"* %90, i64 0, i32 2
  %92 = load i64, i64* %91, align 8
  %93 = getelementptr inbounds %"class.v8::internal::Zone", %"class.v8::internal::Zone"* %90, i64 0, i32 3
  %94 = load i64, i64* %93, align 8
  %95 = sub i64 %94, %92
  %96 = icmp ult i64 %95, 32
  br i1 %96, label %97, label %99, !prof !2

97:                                               ; preds = %85
  %98 = tail call i64 @_ZN2v88internal4Zone9NewExpandEm(%"class.v8::internal::Zone"* %90, i64 32) #16
  br label %101

99:                                               ; preds = %85
  %100 = add i64 %92, 32
  store i64 %100, i64* %91, align 8
  br label %101

101:                                              ; preds = %99, %97
  %102 = phi i64 [ %98, %97 ], [ %92, %99 ]
  %103 = inttoptr i64 %102 to %"class.v8::internal::compiler::MoveOperands"**
  %104 = getelementptr inbounds %"class.v8::internal::compiler::MoveOperands"*, %"class.v8::internal::compiler::MoveOperands"** %103, i64 %88
  %105 = ptrtoint %"class.v8::internal::compiler::MoveOperands"** %104 to i64
  %106 = getelementptr inbounds %"class.v8::internal::compiler::MoveOperands"*, %"class.v8::internal::compiler::MoveOperands"** %103, i64 4
  %107 = ptrtoint %"class.v8::internal::compiler::MoveOperands"** %106 to i64
  %108 = load %"class.v8::internal::compiler::MoveOperands"**, %"class.v8::internal::compiler::MoveOperands"*** %67, align 8
  %109 = ptrtoint %"class.v8::internal::compiler::MoveOperands"** %108 to i64
  %110 = load %"class.v8::internal::compiler::MoveOperands"**, %"class.v8::internal::compiler::MoveOperands"*** %69, align 8
  %111 = icmp eq %"class.v8::internal::compiler::MoveOperands"** %110, %108
  br i1 %111, label %284, label %112

112:                                              ; preds = %101
  %113 = getelementptr %"class.v8::internal::compiler::MoveOperands"*, %"class.v8::internal::compiler::MoveOperands"** %110, i64 -1
  %114 = ptrtoint %"class.v8::internal::compiler::MoveOperands"** %113 to i64
  %115 = sub i64 %114, %109
  %116 = lshr i64 %115, 3
  %117 = add nuw nsw i64 %116, 1
  %118 = icmp ult i64 %117, 4
  br i1 %118, label %211, label %119

119:                                              ; preds = %112
  %120 = getelementptr %"class.v8::internal::compiler::MoveOperands"*, %"class.v8::internal::compiler::MoveOperands"** %110, i64 -1
  %121 = ptrtoint %"class.v8::internal::compiler::MoveOperands"** %120 to i64
  %122 = sub i64 %121, %109
  %123 = lshr i64 %122, 3
  %124 = xor i64 %123, -1
  %125 = add nsw i64 %88, %124
  %126 = getelementptr %"class.v8::internal::compiler::MoveOperands"*, %"class.v8::internal::compiler::MoveOperands"** %103, i64 %125
  %127 = xor i64 %123, -1
  %128 = getelementptr %"class.v8::internal::compiler::MoveOperands"*, %"class.v8::internal::compiler::MoveOperands"** %110, i64 %127
  %129 = icmp ult %"class.v8::internal::compiler::MoveOperands"** %126, %110
  %130 = icmp ult %"class.v8::internal::compiler::MoveOperands"** %128, %104
  %131 = and i1 %129, %130
  br i1 %131, label %211, label %132

132:                                              ; preds = %119
  %133 = and i64 %117, 4611686018427387900
  %134 = sub nsw i64 0, %133
  %135 = getelementptr %"class.v8::internal::compiler::MoveOperands"*, %"class.v8::internal::compiler::MoveOperands"** %104, i64 %134
  %136 = sub nsw i64 0, %133
  %137 = getelementptr %"class.v8::internal::compiler::MoveOperands"*, %"class.v8::internal::compiler::MoveOperands"** %110, i64 %136
  %138 = add nsw i64 %133, -4
  %139 = lshr exact i64 %138, 2
  %140 = add nuw nsw i64 %139, 1
  %141 = and i64 %140, 1
  %142 = icmp eq i64 %138, 0
  br i1 %142, label %187, label %143

143:                                              ; preds = %132
  %144 = sub nuw nsw i64 %140, %141
  %145 = getelementptr %"class.v8::internal::compiler::MoveOperands"*, %"class.v8::internal::compiler::MoveOperands"** %104, i64 -1
  %146 = getelementptr %"class.v8::internal::compiler::MoveOperands"*, %"class.v8::internal::compiler::MoveOperands"** %110, i64 -1
  %147 = getelementptr %"class.v8::internal::compiler::MoveOperands"*, %"class.v8::internal::compiler::MoveOperands"** %104, i64 -1
  %148 = getelementptr %"class.v8::internal::compiler::MoveOperands"*, %"class.v8::internal::compiler::MoveOperands"** %110, i64 -1
  br label %149

149:                                              ; preds = %149, %143
  %150 = phi i64 [ 0, %143 ], [ %184, %149 ]
  %151 = phi i64 [ %144, %143 ], [ %185, %149 ]
  %152 = sub i64 0, %150
  %153 = sub i64 0, %150
  %154 = getelementptr inbounds %"class.v8::internal::compiler::MoveOperands"*, %"class.v8::internal::compiler::MoveOperands"** %145, i64 %152
  %155 = getelementptr inbounds %"class.v8::internal::compiler::MoveOperands"*, %"class.v8::internal::compiler::MoveOperands"** %146, i64 %153
  %156 = getelementptr inbounds %"class.v8::internal::compiler::MoveOperands"*, %"class.v8::internal::compiler::MoveOperands"** %155, i64 -1
  %157 = bitcast %"class.v8::internal::compiler::MoveOperands"** %156 to <2 x i64>*
  %158 = load <2 x i64>, <2 x i64>* %157, align 8, !alias.scope !219
  %159 = getelementptr inbounds %"class.v8::internal::compiler::MoveOperands"*, %"class.v8::internal::compiler::MoveOperands"** %155, i64 -2
  %160 = getelementptr inbounds %"class.v8::internal::compiler::MoveOperands"*, %"class.v8::internal::compiler::MoveOperands"** %159, i64 -1
  %161 = bitcast %"class.v8::internal::compiler::MoveOperands"** %160 to <2 x i64>*
  %162 = load <2 x i64>, <2 x i64>* %161, align 8, !alias.scope !219
  %163 = getelementptr inbounds %"class.v8::internal::compiler::MoveOperands"*, %"class.v8::internal::compiler::MoveOperands"** %154, i64 -1
  %164 = bitcast %"class.v8::internal::compiler::MoveOperands"** %163 to <2 x i64>*
  store <2 x i64> %158, <2 x i64>* %164, align 8, !alias.scope !222, !noalias !219
  %165 = getelementptr inbounds %"class.v8::internal::compiler::MoveOperands"*, %"class.v8::internal::compiler::MoveOperands"** %154, i64 -2
  %166 = getelementptr inbounds %"class.v8::internal::compiler::MoveOperands"*, %"class.v8::internal::compiler::MoveOperands"** %165, i64 -1
  %167 = bitcast %"class.v8::internal::compiler::MoveOperands"** %166 to <2 x i64>*
  store <2 x i64> %162, <2 x i64>* %167, align 8, !alias.scope !222, !noalias !219
  %168 = sub nuw nsw i64 -4, %150
  %169 = sub nuw nsw i64 -4, %150
  %170 = getelementptr inbounds %"class.v8::internal::compiler::MoveOperands"*, %"class.v8::internal::compiler::MoveOperands"** %147, i64 %168
  %171 = getelementptr inbounds %"class.v8::internal::compiler::MoveOperands"*, %"class.v8::internal::compiler::MoveOperands"** %148, i64 %169
  %172 = getelementptr inbounds %"class.v8::internal::compiler::MoveOperands"*, %"class.v8::internal::compiler::MoveOperands"** %171, i64 -1
  %173 = bitcast %"class.v8::internal::compiler::MoveOperands"** %172 to <2 x i64>*
  %174 = load <2 x i64>, <2 x i64>* %173, align 8, !alias.scope !219
  %175 = getelementptr inbounds %"class.v8::internal::compiler::MoveOperands"*, %"class.v8::internal::compiler::MoveOperands"** %171, i64 -2
  %176 = getelementptr inbounds %"class.v8::internal::compiler::MoveOperands"*, %"class.v8::internal::compiler::MoveOperands"** %175, i64 -1
  %177 = bitcast %"class.v8::internal::compiler::MoveOperands"** %176 to <2 x i64>*
  %178 = load <2 x i64>, <2 x i64>* %177, align 8, !alias.scope !219
  %179 = getelementptr inbounds %"class.v8::internal::compiler::MoveOperands"*, %"class.v8::internal::compiler::MoveOperands"** %170, i64 -1
  %180 = bitcast %"class.v8::internal::compiler::MoveOperands"** %179 to <2 x i64>*
  store <2 x i64> %174, <2 x i64>* %180, align 8, !alias.scope !222, !noalias !219
  %181 = getelementptr inbounds %"class.v8::internal::compiler::MoveOperands"*, %"class.v8::internal::compiler::MoveOperands"** %170, i64 -2
  %182 = getelementptr inbounds %"class.v8::internal::compiler::MoveOperands"*, %"class.v8::internal::compiler::MoveOperands"** %181, i64 -1
  %183 = bitcast %"class.v8::internal::compiler::MoveOperands"** %182 to <2 x i64>*
  store <2 x i64> %178, <2 x i64>* %183, align 8, !alias.scope !222, !noalias !219
  %184 = add i64 %150, 8
  %185 = add i64 %151, -2
  %186 = icmp eq i64 %185, 0
  br i1 %186, label %187, label %149, !llvm.loop !224

187:                                              ; preds = %149, %132
  %188 = phi i64 [ 0, %132 ], [ %184, %149 ]
  %189 = icmp eq i64 %141, 0
  br i1 %189, label %209, label %190

190:                                              ; preds = %187
  %191 = sub i64 0, %188
  %192 = getelementptr %"class.v8::internal::compiler::MoveOperands"*, %"class.v8::internal::compiler::MoveOperands"** %104, i64 -1
  %193 = sub i64 0, %188
  %194 = getelementptr %"class.v8::internal::compiler::MoveOperands"*, %"class.v8::internal::compiler::MoveOperands"** %110, i64 -1
  %195 = getelementptr inbounds %"class.v8::internal::compiler::MoveOperands"*, %"class.v8::internal::compiler::MoveOperands"** %192, i64 %191
  %196 = getelementptr inbounds %"class.v8::internal::compiler::MoveOperands"*, %"class.v8::internal::compiler::MoveOperands"** %194, i64 %193
  %197 = getelementptr inbounds %"class.v8::internal::compiler::MoveOperands"*, %"class.v8::internal::compiler::MoveOperands"** %196, i64 -1
  %198 = bitcast %"class.v8::internal::compiler::MoveOperands"** %197 to <2 x i64>*
  %199 = load <2 x i64>, <2 x i64>* %198, align 8, !alias.scope !219
  %200 = getelementptr inbounds %"class.v8::internal::compiler::MoveOperands"*, %"class.v8::internal::compiler::MoveOperands"** %196, i64 -2
  %201 = getelementptr inbounds %"class.v8::internal::compiler::MoveOperands"*, %"class.v8::internal::compiler::MoveOperands"** %200, i64 -1
  %202 = bitcast %"class.v8::internal::compiler::MoveOperands"** %201 to <2 x i64>*
  %203 = load <2 x i64>, <2 x i64>* %202, align 8, !alias.scope !219
  %204 = getelementptr inbounds %"class.v8::internal::compiler::MoveOperands"*, %"class.v8::internal::compiler::MoveOperands"** %195, i64 -1
  %205 = bitcast %"class.v8::internal::compiler::MoveOperands"** %204 to <2 x i64>*
  store <2 x i64> %199, <2 x i64>* %205, align 8, !alias.scope !222, !noalias !219
  %206 = getelementptr inbounds %"class.v8::internal::compiler::MoveOperands"*, %"class.v8::internal::compiler::MoveOperands"** %195, i64 -2
  %207 = getelementptr inbounds %"class.v8::internal::compiler::MoveOperands"*, %"class.v8::internal::compiler::MoveOperands"** %206, i64 -1
  %208 = bitcast %"class.v8::internal::compiler::MoveOperands"** %207 to <2 x i64>*
  store <2 x i64> %203, <2 x i64>* %208, align 8, !alias.scope !222, !noalias !219
  br label %209

209:                                              ; preds = %187, %190
  %210 = icmp eq i64 %117, %133
  br i1 %210, label %281, label %211

211:                                              ; preds = %209, %119, %112
  %212 = phi %"class.v8::internal::compiler::MoveOperands"** [ %104, %119 ], [ %104, %112 ], [ %135, %209 ]
  %213 = phi %"class.v8::internal::compiler::MoveOperands"** [ %110, %119 ], [ %110, %112 ], [ %137, %209 ]
  %214 = getelementptr %"class.v8::internal::compiler::MoveOperands"*, %"class.v8::internal::compiler::MoveOperands"** %213, i64 -1
  %215 = ptrtoint %"class.v8::internal::compiler::MoveOperands"** %214 to i64
  %216 = sub i64 %215, %109
  %217 = lshr i64 %216, 3
  %218 = add nuw nsw i64 %217, 1
  %219 = and i64 %218, 7
  %220 = icmp eq i64 %219, 0
  br i1 %220, label %232, label %221

221:                                              ; preds = %211, %221
  %222 = phi %"class.v8::internal::compiler::MoveOperands"** [ %225, %221 ], [ %212, %211 ]
  %223 = phi %"class.v8::internal::compiler::MoveOperands"** [ %226, %221 ], [ %213, %211 ]
  %224 = phi i64 [ %230, %221 ], [ %219, %211 ]
  %225 = getelementptr inbounds %"class.v8::internal::compiler::MoveOperands"*, %"class.v8::internal::compiler::MoveOperands"** %222, i64 -1
  %226 = getelementptr inbounds %"class.v8::internal::compiler::MoveOperands"*, %"class.v8::internal::compiler::MoveOperands"** %223, i64 -1
  %227 = bitcast %"class.v8::internal::compiler::MoveOperands"** %226 to i64*
  %228 = load i64, i64* %227, align 8
  %229 = bitcast %"class.v8::internal::compiler::MoveOperands"** %225 to i64*
  store i64 %228, i64* %229, align 8
  %230 = add i64 %224, -1
  %231 = icmp eq i64 %230, 0
  br i1 %231, label %232, label %221, !llvm.loop !225

232:                                              ; preds = %221, %211
  %233 = phi %"class.v8::internal::compiler::MoveOperands"** [ undef, %211 ], [ %225, %221 ]
  %234 = phi %"class.v8::internal::compiler::MoveOperands"** [ %212, %211 ], [ %225, %221 ]
  %235 = phi %"class.v8::internal::compiler::MoveOperands"** [ %213, %211 ], [ %226, %221 ]
  %236 = icmp ult i64 %216, 56
  br i1 %236, label %281, label %237

237:                                              ; preds = %232, %237
  %238 = phi %"class.v8::internal::compiler::MoveOperands"** [ %275, %237 ], [ %234, %232 ]
  %239 = phi %"class.v8::internal::compiler::MoveOperands"** [ %276, %237 ], [ %235, %232 ]
  %240 = getelementptr inbounds %"class.v8::internal::compiler::MoveOperands"*, %"class.v8::internal::compiler::MoveOperands"** %238, i64 -1
  %241 = getelementptr inbounds %"class.v8::internal::compiler::MoveOperands"*, %"class.v8::internal::compiler::MoveOperands"** %239, i64 -1
  %242 = bitcast %"class.v8::internal::compiler::MoveOperands"** %241 to i64*
  %243 = load i64, i64* %242, align 8
  %244 = bitcast %"class.v8::internal::compiler::MoveOperands"** %240 to i64*
  store i64 %243, i64* %244, align 8
  %245 = getelementptr inbounds %"class.v8::internal::compiler::MoveOperands"*, %"class.v8::internal::compiler::MoveOperands"** %238, i64 -2
  %246 = getelementptr inbounds %"class.v8::internal::compiler::MoveOperands"*, %"class.v8::internal::compiler::MoveOperands"** %239, i64 -2
  %247 = bitcast %"class.v8::internal::compiler::MoveOperands"** %246 to i64*
  %248 = load i64, i64* %247, align 8
  %249 = bitcast %"class.v8::internal::compiler::MoveOperands"** %245 to i64*
  store i64 %248, i64* %249, align 8
  %250 = getelementptr inbounds %"class.v8::internal::compiler::MoveOperands"*, %"class.v8::internal::compiler::MoveOperands"** %238, i64 -3
  %251 = getelementptr inbounds %"class.v8::internal::compiler::MoveOperands"*, %"class.v8::internal::compiler::MoveOperands"** %239, i64 -3
  %252 = bitcast %"class.v8::internal::compiler::MoveOperands"** %251 to i64*
  %253 = load i64, i64* %252, align 8
  %254 = bitcast %"class.v8::internal::compiler::MoveOperands"** %250 to i64*
  store i64 %253, i64* %254, align 8
  %255 = getelementptr inbounds %"class.v8::internal::compiler::MoveOperands"*, %"class.v8::internal::compiler::MoveOperands"** %238, i64 -4
  %256 = getelementptr inbounds %"class.v8::internal::compiler::MoveOperands"*, %"class.v8::internal::compiler::MoveOperands"** %239, i64 -4
  %257 = bitcast %"class.v8::internal::compiler::MoveOperands"** %256 to i64*
  %258 = load i64, i64* %257, align 8
  %259 = bitcast %"class.v8::internal::compiler::MoveOperands"** %255 to i64*
  store i64 %258, i64* %259, align 8
  %260 = getelementptr inbounds %"class.v8::internal::compiler::MoveOperands"*, %"class.v8::internal::compiler::MoveOperands"** %238, i64 -5
  %261 = getelementptr inbounds %"class.v8::internal::compiler::MoveOperands"*, %"class.v8::internal::compiler::MoveOperands"** %239, i64 -5
  %262 = bitcast %"class.v8::internal::compiler::MoveOperands"** %261 to i64*
  %263 = load i64, i64* %262, align 8
  %264 = bitcast %"class.v8::internal::compiler::MoveOperands"** %260 to i64*
  store i64 %263, i64* %264, align 8
  %265 = getelementptr inbounds %"class.v8::internal::compiler::MoveOperands"*, %"class.v8::internal::compiler::MoveOperands"** %238, i64 -6
  %266 = getelementptr inbounds %"class.v8::internal::compiler::MoveOperands"*, %"class.v8::internal::compiler::MoveOperands"** %239, i64 -6
  %267 = bitcast %"class.v8::internal::compiler::MoveOperands"** %266 to i64*
  %268 = load i64, i64* %267, align 8
  %269 = bitcast %"class.v8::internal::compiler::MoveOperands"** %265 to i64*
  store i64 %268, i64* %269, align 8
  %270 = getelementptr inbounds %"class.v8::internal::compiler::MoveOperands"*, %"class.v8::internal::compiler::MoveOperands"** %238, i64 -7
  %271 = getelementptr inbounds %"class.v8::internal::compiler::MoveOperands"*, %"class.v8::internal::compiler::MoveOperands"** %239, i64 -7
  %272 = bitcast %"class.v8::internal::compiler::MoveOperands"** %271 to i64*
  %273 = load i64, i64* %272, align 8
  %274 = bitcast %"class.v8::internal::compiler::MoveOperands"** %270 to i64*
  store i64 %273, i64* %274, align 8
  %275 = getelementptr inbounds %"class.v8::internal::compiler::MoveOperands"*, %"class.v8::internal::compiler::MoveOperands"** %238, i64 -8
  %276 = getelementptr inbounds %"class.v8::internal::compiler::MoveOperands"*, %"class.v8::internal::compiler::MoveOperands"** %239, i64 -8
  %277 = bitcast %"class.v8::internal::compiler::MoveOperands"** %276 to i64*
  %278 = load i64, i64* %277, align 8
  %279 = bitcast %"class.v8::internal::compiler::MoveOperands"** %275 to i64*
  store i64 %278, i64* %279, align 8
  %280 = icmp eq %"class.v8::internal::compiler::MoveOperands"** %276, %108
  br i1 %280, label %281, label %237, !llvm.loop !226

281:                                              ; preds = %232, %237, %209
  %282 = phi %"class.v8::internal::compiler::MoveOperands"** [ %135, %209 ], [ %233, %232 ], [ %275, %237 ]
  %283 = ptrtoint %"class.v8::internal::compiler::MoveOperands"** %282 to i64
  br label %284

284:                                              ; preds = %281, %101
  %285 = phi i64 [ %283, %281 ], [ %105, %101 ]
  store i64 %285, i64* %80, align 8
  store i64 %105, i64* %86, align 8
  store i64 %107, i64* %78, align 8
  br label %286

286:                                              ; preds = %75, %284, %77
  %287 = phi i64 [ %285, %284 ], [ %72, %77 ], [ %72, %75 ]
  %288 = phi %"class.v8::internal::compiler::MoveOperands"** [ %106, %284 ], [ %84, %77 ], [ %76, %75 ]
  %289 = phi %"class.v8::internal::compiler::MoveOperands"** [ %104, %284 ], [ %68, %77 ], [ %70, %75 ]
  %290 = getelementptr inbounds %"class.v8::internal::compiler::ParallelMove", %"class.v8::internal::compiler::ParallelMove"* %0, i64 0, i32 0, i32 0, i32 0, i32 2, i32 0, i32 0
  %291 = icmp eq %"class.v8::internal::compiler::MoveOperands"** %289, %288
  br i1 %291, label %297, label %292

292:                                              ; preds = %286
  %293 = bitcast %"class.v8::internal::compiler::MoveOperands"** %289 to i64*
  store i64 %60, i64* %293, align 8
  %294 = getelementptr inbounds %"class.v8::internal::compiler::MoveOperands"*, %"class.v8::internal::compiler::MoveOperands"** %289, i64 1
  %295 = ptrtoint %"class.v8::internal::compiler::MoveOperands"** %294 to i64
  %296 = bitcast %"class.v8::internal::compiler::MoveOperands"*** %69 to i64*
  store i64 %295, i64* %296, align 8
  br label %518

297:                                              ; preds = %286
  %298 = ptrtoint %"class.v8::internal::compiler::MoveOperands"** %288 to i64
  %299 = bitcast %"class.v8::internal::compiler::MoveOperands"*** %69 to i64*
  %300 = bitcast %"class.v8::internal::compiler::ParallelMove"* %0 to i64*
  %301 = sub i64 %298, %287
  %302 = ashr exact i64 %301, 3
  %303 = add nsw i64 %302, 1
  %304 = icmp ugt i64 %303, 268435455
  br i1 %304, label %305, label %307

305:                                              ; preds = %297
  %306 = bitcast %"class.v8::internal::compiler::ParallelMove"* %0 to %"class.std::__1::__vector_base_common"*
  tail call void @_ZNKSt3__120__vector_base_commonILb1EE20__throw_length_errorEv(%"class.std::__1::__vector_base_common"* %306) #17
  unreachable

307:                                              ; preds = %297
  %308 = bitcast %"class.v8::internal::compiler::MoveOperands"*** %290 to i64*
  %309 = icmp ult i64 %302, 134217727
  br i1 %309, label %310, label %315

310:                                              ; preds = %307
  %311 = ashr exact i64 %301, 2
  %312 = icmp ult i64 %311, %303
  %313 = select i1 %312, i64 %303, i64 %311
  %314 = icmp eq i64 %313, 0
  br i1 %314, label %333, label %315

315:                                              ; preds = %310, %307
  %316 = phi i64 [ %313, %310 ], [ 268435455, %307 ]
  %317 = getelementptr inbounds %"class.v8::internal::compiler::ParallelMove", %"class.v8::internal::compiler::ParallelMove"* %0, i64 0, i32 0, i32 0, i32 0, i32 2, i32 1, i32 0, i32 0
  %318 = load %"class.v8::internal::Zone"*, %"class.v8::internal::Zone"** %317, align 8
  %319 = shl i64 %316, 3
  %320 = getelementptr inbounds %"class.v8::internal::Zone", %"class.v8::internal::Zone"* %318, i64 0, i32 2
  %321 = load i64, i64* %320, align 8
  %322 = getelementptr inbounds %"class.v8::internal::Zone", %"class.v8::internal::Zone"* %318, i64 0, i32 3
  %323 = load i64, i64* %322, align 8
  %324 = sub i64 %323, %321
  %325 = icmp ugt i64 %319, %324
  br i1 %325, label %326, label %328, !prof !2

326:                                              ; preds = %315
  %327 = tail call i64 @_ZN2v88internal4Zone9NewExpandEm(%"class.v8::internal::Zone"* %318, i64 %319) #16
  br label %330

328:                                              ; preds = %315
  %329 = add i64 %321, %319
  store i64 %329, i64* %320, align 8
  br label %330

330:                                              ; preds = %328, %326
  %331 = phi i64 [ %327, %326 ], [ %321, %328 ]
  %332 = inttoptr i64 %331 to %"class.v8::internal::compiler::MoveOperands"**
  br label %333

333:                                              ; preds = %330, %310
  %334 = phi i64 [ %316, %330 ], [ 0, %310 ]
  %335 = phi %"class.v8::internal::compiler::MoveOperands"** [ %332, %330 ], [ null, %310 ]
  %336 = getelementptr inbounds %"class.v8::internal::compiler::MoveOperands"*, %"class.v8::internal::compiler::MoveOperands"** %335, i64 %302
  %337 = getelementptr inbounds %"class.v8::internal::compiler::MoveOperands"*, %"class.v8::internal::compiler::MoveOperands"** %335, i64 %334
  %338 = ptrtoint %"class.v8::internal::compiler::MoveOperands"** %337 to i64
  %339 = bitcast %"class.v8::internal::compiler::MoveOperands"** %336 to i64*
  store i64 %60, i64* %339, align 8
  %340 = getelementptr inbounds %"class.v8::internal::compiler::MoveOperands"*, %"class.v8::internal::compiler::MoveOperands"** %336, i64 1
  %341 = ptrtoint %"class.v8::internal::compiler::MoveOperands"** %340 to i64
  %342 = load %"class.v8::internal::compiler::MoveOperands"**, %"class.v8::internal::compiler::MoveOperands"*** %67, align 8
  %343 = ptrtoint %"class.v8::internal::compiler::MoveOperands"** %342 to i64
  %344 = load %"class.v8::internal::compiler::MoveOperands"**, %"class.v8::internal::compiler::MoveOperands"*** %69, align 8
  %345 = icmp eq %"class.v8::internal::compiler::MoveOperands"** %344, %342
  br i1 %345, label %515, label %346

346:                                              ; preds = %333
  %347 = getelementptr %"class.v8::internal::compiler::MoveOperands"*, %"class.v8::internal::compiler::MoveOperands"** %344, i64 -1
  %348 = ptrtoint %"class.v8::internal::compiler::MoveOperands"** %347 to i64
  %349 = sub i64 %348, %343
  %350 = lshr i64 %349, 3
  %351 = add nuw nsw i64 %350, 1
  %352 = icmp ult i64 %351, 4
  br i1 %352, label %445, label %353

353:                                              ; preds = %346
  %354 = getelementptr %"class.v8::internal::compiler::MoveOperands"*, %"class.v8::internal::compiler::MoveOperands"** %344, i64 -1
  %355 = ptrtoint %"class.v8::internal::compiler::MoveOperands"** %354 to i64
  %356 = sub i64 %355, %343
  %357 = lshr i64 %356, 3
  %358 = xor i64 %357, -1
  %359 = add nsw i64 %302, %358
  %360 = getelementptr %"class.v8::internal::compiler::MoveOperands"*, %"class.v8::internal::compiler::MoveOperands"** %335, i64 %359
  %361 = xor i64 %357, -1
  %362 = getelementptr %"class.v8::internal::compiler::MoveOperands"*, %"class.v8::internal::compiler::MoveOperands"** %344, i64 %361
  %363 = icmp ult %"class.v8::internal::compiler::MoveOperands"** %360, %344
  %364 = icmp ult %"class.v8::internal::compiler::MoveOperands"** %362, %336
  %365 = and i1 %363, %364
  br i1 %365, label %445, label %366

366:                                              ; preds = %353
  %367 = and i64 %351, 4611686018427387900
  %368 = sub nsw i64 0, %367
  %369 = getelementptr %"class.v8::internal::compiler::MoveOperands"*, %"class.v8::internal::compiler::MoveOperands"** %336, i64 %368
  %370 = sub nsw i64 0, %367
  %371 = getelementptr %"class.v8::internal::compiler::MoveOperands"*, %"class.v8::internal::compiler::MoveOperands"** %344, i64 %370
  %372 = add nsw i64 %367, -4
  %373 = lshr exact i64 %372, 2
  %374 = add nuw nsw i64 %373, 1
  %375 = and i64 %374, 1
  %376 = icmp eq i64 %372, 0
  br i1 %376, label %423, label %377

377:                                              ; preds = %366
  %378 = sub nuw nsw i64 %374, %375
  %379 = getelementptr %"class.v8::internal::compiler::MoveOperands"*, %"class.v8::internal::compiler::MoveOperands"** %336, i64 -1
  %380 = getelementptr %"class.v8::internal::compiler::MoveOperands"*, %"class.v8::internal::compiler::MoveOperands"** %344, i64 -1
  %381 = getelementptr %"class.v8::internal::compiler::MoveOperands"*, %"class.v8::internal::compiler::MoveOperands"** %336, i64 -1
  %382 = getelementptr %"class.v8::internal::compiler::MoveOperands"*, %"class.v8::internal::compiler::MoveOperands"** %344, i64 -1
  br label %383

383:                                              ; preds = %383, %377
  %384 = phi i64 [ 0, %377 ], [ %418, %383 ]
  %385 = phi i64 [ %378, %377 ], [ %419, %383 ]
  %386 = sub i64 0, %384
  %387 = sub i64 0, %384
  %388 = getelementptr inbounds %"class.v8::internal::compiler::MoveOperands"*, %"class.v8::internal::compiler::MoveOperands"** %379, i64 %386
  %389 = getelementptr inbounds %"class.v8::internal::compiler::MoveOperands"*, %"class.v8::internal::compiler::MoveOperands"** %380, i64 %387
  %390 = getelementptr inbounds %"class.v8::internal::compiler::MoveOperands"*, %"class.v8::internal::compiler::MoveOperands"** %389, i64 -1
  %391 = bitcast %"class.v8::internal::compiler::MoveOperands"** %390 to <2 x i64>*
  %392 = load <2 x i64>, <2 x i64>* %391, align 8, !alias.scope !227
  %393 = getelementptr inbounds %"class.v8::internal::compiler::MoveOperands"*, %"class.v8::internal::compiler::MoveOperands"** %389, i64 -2
  %394 = getelementptr inbounds %"class.v8::internal::compiler::MoveOperands"*, %"class.v8::internal::compiler::MoveOperands"** %393, i64 -1
  %395 = bitcast %"class.v8::internal::compiler::MoveOperands"** %394 to <2 x i64>*
  %396 = load <2 x i64>, <2 x i64>* %395, align 8, !alias.scope !227
  %397 = getelementptr inbounds %"class.v8::internal::compiler::MoveOperands"*, %"class.v8::internal::compiler::MoveOperands"** %388, i64 -1
  %398 = bitcast %"class.v8::internal::compiler::MoveOperands"** %397 to <2 x i64>*
  store <2 x i64> %392, <2 x i64>* %398, align 8, !alias.scope !230, !noalias !227
  %399 = getelementptr inbounds %"class.v8::internal::compiler::MoveOperands"*, %"class.v8::internal::compiler::MoveOperands"** %388, i64 -2
  %400 = getelementptr inbounds %"class.v8::internal::compiler::MoveOperands"*, %"class.v8::internal::compiler::MoveOperands"** %399, i64 -1
  %401 = bitcast %"class.v8::internal::compiler::MoveOperands"** %400 to <2 x i64>*
  store <2 x i64> %396, <2 x i64>* %401, align 8, !alias.scope !230, !noalias !227
  %402 = sub nuw nsw i64 -4, %384
  %403 = sub nuw nsw i64 -4, %384
  %404 = getelementptr inbounds %"class.v8::internal::compiler::MoveOperands"*, %"class.v8::internal::compiler::MoveOperands"** %381, i64 %402
  %405 = getelementptr inbounds %"class.v8::internal::compiler::MoveOperands"*, %"class.v8::internal::compiler::MoveOperands"** %382, i64 %403
  %406 = getelementptr inbounds %"class.v8::internal::compiler::MoveOperands"*, %"class.v8::internal::compiler::MoveOperands"** %405, i64 -1
  %407 = bitcast %"class.v8::internal::compiler::MoveOperands"** %406 to <2 x i64>*
  %408 = load <2 x i64>, <2 x i64>* %407, align 8, !alias.scope !227
  %409 = getelementptr inbounds %"class.v8::internal::compiler::MoveOperands"*, %"class.v8::internal::compiler::MoveOperands"** %405, i64 -2
  %410 = getelementptr inbounds %"class.v8::internal::compiler::MoveOperands"*, %"class.v8::internal::compiler::MoveOperands"** %409, i64 -1
  %411 = bitcast %"class.v8::internal::compiler::MoveOperands"** %410 to <2 x i64>*
  %412 = load <2 x i64>, <2 x i64>* %411, align 8, !alias.scope !227
  %413 = getelementptr inbounds %"class.v8::internal::compiler::MoveOperands"*, %"class.v8::internal::compiler::MoveOperands"** %404, i64 -1
  %414 = bitcast %"class.v8::internal::compiler::MoveOperands"** %413 to <2 x i64>*
  store <2 x i64> %408, <2 x i64>* %414, align 8, !alias.scope !230, !noalias !227
  %415 = getelementptr inbounds %"class.v8::internal::compiler::MoveOperands"*, %"class.v8::internal::compiler::MoveOperands"** %404, i64 -2
  %416 = getelementptr inbounds %"class.v8::internal::compiler::MoveOperands"*, %"class.v8::internal::compiler::MoveOperands"** %415, i64 -1
  %417 = bitcast %"class.v8::internal::compiler::MoveOperands"** %416 to <2 x i64>*
  store <2 x i64> %412, <2 x i64>* %417, align 8, !alias.scope !230, !noalias !227
  %418 = add i64 %384, 8
  %419 = add i64 %385, -2
  %420 = icmp eq i64 %419, 0
  br i1 %420, label %421, label %383, !llvm.loop !232

421:                                              ; preds = %383
  %422 = sub nuw nsw i64 -8, %384
  br label %423

423:                                              ; preds = %421, %366
  %424 = phi i64 [ 0, %366 ], [ %422, %421 ]
  %425 = icmp eq i64 %375, 0
  br i1 %425, label %443, label %426

426:                                              ; preds = %423
  %427 = getelementptr %"class.v8::internal::compiler::MoveOperands"*, %"class.v8::internal::compiler::MoveOperands"** %336, i64 -1
  %428 = getelementptr %"class.v8::internal::compiler::MoveOperands"*, %"class.v8::internal::compiler::MoveOperands"** %344, i64 -1
  %429 = getelementptr inbounds %"class.v8::internal::compiler::MoveOperands"*, %"class.v8::internal::compiler::MoveOperands"** %427, i64 %424
  %430 = getelementptr inbounds %"class.v8::internal::compiler::MoveOperands"*, %"class.v8::internal::compiler::MoveOperands"** %428, i64 %424
  %431 = getelementptr inbounds %"class.v8::internal::compiler::MoveOperands"*, %"class.v8::internal::compiler::MoveOperands"** %430, i64 -1
  %432 = bitcast %"class.v8::internal::compiler::MoveOperands"** %431 to <2 x i64>*
  %433 = load <2 x i64>, <2 x i64>* %432, align 8, !alias.scope !227
  %434 = getelementptr inbounds %"class.v8::internal::compiler::MoveOperands"*, %"class.v8::internal::compiler::MoveOperands"** %430, i64 -2
  %435 = getelementptr inbounds %"class.v8::internal::compiler::MoveOperands"*, %"class.v8::internal::compiler::MoveOperands"** %434, i64 -1
  %436 = bitcast %"class.v8::internal::compiler::MoveOperands"** %435 to <2 x i64>*
  %437 = load <2 x i64>, <2 x i64>* %436, align 8, !alias.scope !227
  %438 = getelementptr inbounds %"class.v8::internal::compiler::MoveOperands"*, %"class.v8::internal::compiler::MoveOperands"** %429, i64 -1
  %439 = bitcast %"class.v8::internal::compiler::MoveOperands"** %438 to <2 x i64>*
  store <2 x i64> %433, <2 x i64>* %439, align 8, !alias.scope !230, !noalias !227
  %440 = getelementptr inbounds %"class.v8::internal::compiler::MoveOperands"*, %"class.v8::internal::compiler::MoveOperands"** %429, i64 -2
  %441 = getelementptr inbounds %"class.v8::internal::compiler::MoveOperands"*, %"class.v8::internal::compiler::MoveOperands"** %440, i64 -1
  %442 = bitcast %"class.v8::internal::compiler::MoveOperands"** %441 to <2 x i64>*
  store <2 x i64> %437, <2 x i64>* %442, align 8, !alias.scope !230, !noalias !227
  br label %443

443:                                              ; preds = %423, %426
  %444 = icmp eq i64 %351, %367
  br i1 %444, label %515, label %445

445:                                              ; preds = %443, %353, %346
  %446 = phi %"class.v8::internal::compiler::MoveOperands"** [ %336, %353 ], [ %336, %346 ], [ %369, %443 ]
  %447 = phi %"class.v8::internal::compiler::MoveOperands"** [ %344, %353 ], [ %344, %346 ], [ %371, %443 ]
  %448 = getelementptr %"class.v8::internal::compiler::MoveOperands"*, %"class.v8::internal::compiler::MoveOperands"** %447, i64 -1
  %449 = ptrtoint %"class.v8::internal::compiler::MoveOperands"** %448 to i64
  %450 = sub i64 %449, %343
  %451 = lshr i64 %450, 3
  %452 = add nuw nsw i64 %451, 1
  %453 = and i64 %452, 7
  %454 = icmp eq i64 %453, 0
  br i1 %454, label %466, label %455

455:                                              ; preds = %445, %455
  %456 = phi %"class.v8::internal::compiler::MoveOperands"** [ %459, %455 ], [ %446, %445 ]
  %457 = phi %"class.v8::internal::compiler::MoveOperands"** [ %460, %455 ], [ %447, %445 ]
  %458 = phi i64 [ %464, %455 ], [ %453, %445 ]
  %459 = getelementptr inbounds %"class.v8::internal::compiler::MoveOperands"*, %"class.v8::internal::compiler::MoveOperands"** %456, i64 -1
  %460 = getelementptr inbounds %"class.v8::internal::compiler::MoveOperands"*, %"class.v8::internal::compiler::MoveOperands"** %457, i64 -1
  %461 = bitcast %"class.v8::internal::compiler::MoveOperands"** %460 to i64*
  %462 = load i64, i64* %461, align 8
  %463 = bitcast %"class.v8::internal::compiler::MoveOperands"** %459 to i64*
  store i64 %462, i64* %463, align 8
  %464 = add i64 %458, -1
  %465 = icmp eq i64 %464, 0
  br i1 %465, label %466, label %455, !llvm.loop !233

466:                                              ; preds = %455, %445
  %467 = phi %"class.v8::internal::compiler::MoveOperands"** [ undef, %445 ], [ %459, %455 ]
  %468 = phi %"class.v8::internal::compiler::MoveOperands"** [ %446, %445 ], [ %459, %455 ]
  %469 = phi %"class.v8::internal::compiler::MoveOperands"** [ %447, %445 ], [ %460, %455 ]
  %470 = icmp ult i64 %450, 56
  br i1 %470, label %515, label %471

471:                                              ; preds = %466, %471
  %472 = phi %"class.v8::internal::compiler::MoveOperands"** [ %509, %471 ], [ %468, %466 ]
  %473 = phi %"class.v8::internal::compiler::MoveOperands"** [ %510, %471 ], [ %469, %466 ]
  %474 = getelementptr inbounds %"class.v8::internal::compiler::MoveOperands"*, %"class.v8::internal::compiler::MoveOperands"** %472, i64 -1
  %475 = getelementptr inbounds %"class.v8::internal::compiler::MoveOperands"*, %"class.v8::internal::compiler::MoveOperands"** %473, i64 -1
  %476 = bitcast %"class.v8::internal::compiler::MoveOperands"** %475 to i64*
  %477 = load i64, i64* %476, align 8
  %478 = bitcast %"class.v8::internal::compiler::MoveOperands"** %474 to i64*
  store i64 %477, i64* %478, align 8
  %479 = getelementptr inbounds %"class.v8::internal::compiler::MoveOperands"*, %"class.v8::internal::compiler::MoveOperands"** %472, i64 -2
  %480 = getelementptr inbounds %"class.v8::internal::compiler::MoveOperands"*, %"class.v8::internal::compiler::MoveOperands"** %473, i64 -2
  %481 = bitcast %"class.v8::internal::compiler::MoveOperands"** %480 to i64*
  %482 = load i64, i64* %481, align 8
  %483 = bitcast %"class.v8::internal::compiler::MoveOperands"** %479 to i64*
  store i64 %482, i64* %483, align 8
  %484 = getelementptr inbounds %"class.v8::internal::compiler::MoveOperands"*, %"class.v8::internal::compiler::MoveOperands"** %472, i64 -3
  %485 = getelementptr inbounds %"class.v8::internal::compiler::MoveOperands"*, %"class.v8::internal::compiler::MoveOperands"** %473, i64 -3
  %486 = bitcast %"class.v8::internal::compiler::MoveOperands"** %485 to i64*
  %487 = load i64, i64* %486, align 8
  %488 = bitcast %"class.v8::internal::compiler::MoveOperands"** %484 to i64*
  store i64 %487, i64* %488, align 8
  %489 = getelementptr inbounds %"class.v8::internal::compiler::MoveOperands"*, %"class.v8::internal::compiler::MoveOperands"** %472, i64 -4
  %490 = getelementptr inbounds %"class.v8::internal::compiler::MoveOperands"*, %"class.v8::internal::compiler::MoveOperands"** %473, i64 -4
  %491 = bitcast %"class.v8::internal::compiler::MoveOperands"** %490 to i64*
  %492 = load i64, i64* %491, align 8
  %493 = bitcast %"class.v8::internal::compiler::MoveOperands"** %489 to i64*
  store i64 %492, i64* %493, align 8
  %494 = getelementptr inbounds %"class.v8::internal::compiler::MoveOperands"*, %"class.v8::internal::compiler::MoveOperands"** %472, i64 -5
  %495 = getelementptr inbounds %"class.v8::internal::compiler::MoveOperands"*, %"class.v8::internal::compiler::MoveOperands"** %473, i64 -5
  %496 = bitcast %"class.v8::internal::compiler::MoveOperands"** %495 to i64*
  %497 = load i64, i64* %496, align 8
  %498 = bitcast %"class.v8::internal::compiler::MoveOperands"** %494 to i64*
  store i64 %497, i64* %498, align 8
  %499 = getelementptr inbounds %"class.v8::internal::compiler::MoveOperands"*, %"class.v8::internal::compiler::MoveOperands"** %472, i64 -6
  %500 = getelementptr inbounds %"class.v8::internal::compiler::MoveOperands"*, %"class.v8::internal::compiler::MoveOperands"** %473, i64 -6
  %501 = bitcast %"class.v8::internal::compiler::MoveOperands"** %500 to i64*
  %502 = load i64, i64* %501, align 8
  %503 = bitcast %"class.v8::internal::compiler::MoveOperands"** %499 to i64*
  store i64 %502, i64* %503, align 8
  %504 = getelementptr inbounds %"class.v8::internal::compiler::MoveOperands"*, %"class.v8::internal::compiler::MoveOperands"** %472, i64 -7
  %505 = getelementptr inbounds %"class.v8::internal::compiler::MoveOperands"*, %"class.v8::internal::compiler::MoveOperands"** %473, i64 -7
  %506 = bitcast %"class.v8::internal::compiler::MoveOperands"** %505 to i64*
  %507 = load i64, i64* %506, align 8
  %508 = bitcast %"class.v8::internal::compiler::MoveOperands"** %504 to i64*
  store i64 %507, i64* %508, align 8
  %509 = getelementptr inbounds %"class.v8::internal::compiler::MoveOperands"*, %"class.v8::internal::compiler::MoveOperands"** %472, i64 -8
  %510 = getelementptr inbounds %"class.v8::internal::compiler::MoveOperands"*, %"class.v8::internal::compiler::MoveOperands"** %473, i64 -8
  %511 = bitcast %"class.v8::internal::compiler::MoveOperands"** %510 to i64*
  %512 = load i64, i64* %511, align 8
  %513 = bitcast %"class.v8::internal::compiler::MoveOperands"** %509 to i64*
  store i64 %512, i64* %513, align 8
  %514 = icmp eq %"class.v8::internal::compiler::MoveOperands"** %510, %342
  br i1 %514, label %515, label %471, !llvm.loop !234

515:                                              ; preds = %466, %471, %443, %333
  %516 = phi %"class.v8::internal::compiler::MoveOperands"** [ %336, %333 ], [ %369, %443 ], [ %467, %466 ], [ %509, %471 ]
  %517 = ptrtoint %"class.v8::internal::compiler::MoveOperands"** %516 to i64
  store i64 %517, i64* %300, align 8
  store i64 %341, i64* %299, align 8
  store i64 %338, i64* %308, align 8
  br label %518

518:                                              ; preds = %515, %292, %9, %45
  %519 = phi %"class.v8::internal::compiler::MoveOperands"* [ null, %45 ], [ null, %9 ], [ %61, %292 ], [ %61, %515 ]
  ret %"class.v8::internal::compiler::MoveOperands"* %519
}

; Function Attrs: nounwind readnone speculatable
declare i64 @llvm.cttz.i64(i64, i1 immarg) #12

; Function Attrs: noreturn
declare void @_ZNKSt3__120__vector_base_commonILb1EE20__throw_out_of_rangeEv(%"class.std::__1::__vector_base_common"*) local_unnamed_addr #4

declare i32 @_ZN2v88internal20AlignedSlotAllocator8AllocateEi(%"class.v8::internal::AlignedSlotAllocator"*, i32) local_unnamed_addr #6

declare i32 @_ZN2v88internal20AlignedSlotAllocator17AllocateUnalignedEi(%"class.v8::internal::AlignedSlotAllocator"*, i32) local_unnamed_addr #6

; Function Attrs: nounwind ssp uwtable
define linkonce_odr hidden void @_ZNSt3__127__tree_balance_after_insertIPNS_16__tree_node_baseIPvEEEEvT_S5_(%"class.std::__1::__tree_node_base"*, %"class.std::__1::__tree_node_base"*) local_unnamed_addr #0 comdat {
  %3 = icmp eq %"class.std::__1::__tree_node_base"* %1, %0
  %4 = getelementptr inbounds %"class.std::__1::__tree_node_base", %"class.std::__1::__tree_node_base"* %1, i64 0, i32 3
  %5 = zext i1 %3 to i8
  store i8 %5, i8* %4, align 8
  br i1 %3, label %156, label %6

6:                                                ; preds = %2, %149
  %7 = phi %"class.std::__1::__tree_node_base"* [ %20, %149 ], [ %1, %2 ]
  %8 = getelementptr inbounds %"class.std::__1::__tree_node_base", %"class.std::__1::__tree_node_base"* %7, i64 0, i32 2
  %9 = bitcast %"class.std::__1::__tree_end_node"** %8 to %"class.std::__1::__tree_node_base"**
  %10 = load %"class.std::__1::__tree_node_base"*, %"class.std::__1::__tree_node_base"** %9, align 8
  %11 = getelementptr inbounds %"class.std::__1::__tree_node_base", %"class.std::__1::__tree_node_base"* %10, i64 0, i32 3
  %12 = load i8, i8* %11, align 8, !range !3
  %13 = icmp eq i8 %12, 0
  br i1 %13, label %14, label %156

14:                                               ; preds = %6
  %15 = getelementptr inbounds %"class.std::__1::__tree_node_base", %"class.std::__1::__tree_node_base"* %10, i64 0, i32 2
  %16 = load %"class.std::__1::__tree_end_node"*, %"class.std::__1::__tree_end_node"** %15, align 8
  %17 = getelementptr inbounds %"class.std::__1::__tree_end_node", %"class.std::__1::__tree_end_node"* %16, i64 0, i32 0
  %18 = load %"class.std::__1::__tree_node_base"*, %"class.std::__1::__tree_node_base"** %17, align 8
  %19 = icmp eq %"class.std::__1::__tree_node_base"* %18, %10
  %20 = bitcast %"class.std::__1::__tree_end_node"* %16 to %"class.std::__1::__tree_node_base"*
  br i1 %19, label %21, label %87

21:                                               ; preds = %14
  %22 = getelementptr inbounds %"class.std::__1::__tree_end_node", %"class.std::__1::__tree_end_node"* %16, i64 1, i32 0
  %23 = load %"class.std::__1::__tree_node_base"*, %"class.std::__1::__tree_node_base"** %22, align 8
  %24 = icmp eq %"class.std::__1::__tree_node_base"* %23, null
  br i1 %24, label %29, label %25

25:                                               ; preds = %21
  %26 = getelementptr inbounds %"class.std::__1::__tree_node_base", %"class.std::__1::__tree_node_base"* %23, i64 0, i32 3
  %27 = load i8, i8* %26, align 8, !range !3
  %28 = icmp eq i8 %27, 0
  br i1 %28, label %149, label %29

29:                                               ; preds = %25, %21
  %30 = getelementptr inbounds %"class.std::__1::__tree_node_base", %"class.std::__1::__tree_node_base"* %10, i64 0, i32 2
  %31 = bitcast %"class.std::__1::__tree_end_node"* %16 to %"class.std::__1::__tree_node_base"*
  %32 = getelementptr inbounds %"class.std::__1::__tree_node_base", %"class.std::__1::__tree_node_base"* %10, i64 0, i32 0, i32 0
  %33 = load %"class.std::__1::__tree_node_base"*, %"class.std::__1::__tree_node_base"** %32, align 8
  %34 = icmp eq %"class.std::__1::__tree_node_base"* %33, %7
  br i1 %34, label %61, label %35

35:                                               ; preds = %29
  %36 = ptrtoint %"class.std::__1::__tree_end_node"* %16 to i64
  %37 = getelementptr inbounds %"class.std::__1::__tree_node_base", %"class.std::__1::__tree_node_base"* %10, i64 0, i32 1
  %38 = load %"class.std::__1::__tree_node_base"*, %"class.std::__1::__tree_node_base"** %37, align 8
  %39 = getelementptr inbounds %"class.std::__1::__tree_node_base", %"class.std::__1::__tree_node_base"* %38, i64 0, i32 0, i32 0
  %40 = load %"class.std::__1::__tree_node_base"*, %"class.std::__1::__tree_node_base"** %39, align 8
  store %"class.std::__1::__tree_node_base"* %40, %"class.std::__1::__tree_node_base"** %37, align 8
  %41 = icmp eq %"class.std::__1::__tree_node_base"* %40, null
  br i1 %41, label %47, label %42

42:                                               ; preds = %35
  %43 = getelementptr inbounds %"class.std::__1::__tree_node_base", %"class.std::__1::__tree_node_base"* %10, i64 0, i32 0
  %44 = getelementptr inbounds %"class.std::__1::__tree_node_base", %"class.std::__1::__tree_node_base"* %40, i64 0, i32 2
  store %"class.std::__1::__tree_end_node"* %43, %"class.std::__1::__tree_end_node"** %44, align 8
  %45 = bitcast %"class.std::__1::__tree_end_node"** %30 to i64*
  %46 = load i64, i64* %45, align 8
  br label %47

47:                                               ; preds = %35, %42
  %48 = phi i64 [ %46, %42 ], [ %36, %35 ]
  %49 = getelementptr inbounds %"class.std::__1::__tree_node_base", %"class.std::__1::__tree_node_base"* %38, i64 0, i32 2
  %50 = bitcast %"class.std::__1::__tree_end_node"** %49 to i64*
  store i64 %48, i64* %50, align 8
  %51 = load %"class.std::__1::__tree_end_node"*, %"class.std::__1::__tree_end_node"** %30, align 8
  %52 = getelementptr inbounds %"class.std::__1::__tree_end_node", %"class.std::__1::__tree_end_node"* %51, i64 0, i32 0
  %53 = load %"class.std::__1::__tree_node_base"*, %"class.std::__1::__tree_node_base"** %52, align 8
  %54 = icmp eq %"class.std::__1::__tree_node_base"* %53, %10
  %55 = getelementptr inbounds %"class.std::__1::__tree_end_node", %"class.std::__1::__tree_end_node"* %51, i64 1, i32 0
  %56 = select i1 %54, %"class.std::__1::__tree_node_base"** %52, %"class.std::__1::__tree_node_base"** %55
  store %"class.std::__1::__tree_node_base"* %38, %"class.std::__1::__tree_node_base"** %56, align 8
  store %"class.std::__1::__tree_node_base"* %10, %"class.std::__1::__tree_node_base"** %39, align 8
  %57 = getelementptr inbounds %"class.std::__1::__tree_node_base", %"class.std::__1::__tree_node_base"* %38, i64 0, i32 0
  store %"class.std::__1::__tree_end_node"* %57, %"class.std::__1::__tree_end_node"** %30, align 8
  %58 = getelementptr inbounds %"class.std::__1::__tree_node_base", %"class.std::__1::__tree_node_base"* %38, i64 0, i32 2
  %59 = bitcast %"class.std::__1::__tree_end_node"** %58 to %"class.std::__1::__tree_node_base"**
  %60 = load %"class.std::__1::__tree_node_base"*, %"class.std::__1::__tree_node_base"** %59, align 8
  br label %61

61:                                               ; preds = %47, %29
  %62 = phi %"class.std::__1::__tree_node_base"* [ %31, %29 ], [ %60, %47 ]
  %63 = phi %"class.std::__1::__tree_node_base"* [ %10, %29 ], [ %38, %47 ]
  %64 = getelementptr inbounds %"class.std::__1::__tree_node_base", %"class.std::__1::__tree_node_base"* %63, i64 0, i32 3
  store i8 1, i8* %64, align 8
  %65 = getelementptr inbounds %"class.std::__1::__tree_node_base", %"class.std::__1::__tree_node_base"* %62, i64 0, i32 3
  store i8 0, i8* %65, align 8
  %66 = getelementptr inbounds %"class.std::__1::__tree_node_base", %"class.std::__1::__tree_node_base"* %62, i64 0, i32 0, i32 0
  %67 = load %"class.std::__1::__tree_node_base"*, %"class.std::__1::__tree_node_base"** %66, align 8
  %68 = getelementptr inbounds %"class.std::__1::__tree_node_base", %"class.std::__1::__tree_node_base"* %67, i64 0, i32 1
  %69 = load %"class.std::__1::__tree_node_base"*, %"class.std::__1::__tree_node_base"** %68, align 8
  store %"class.std::__1::__tree_node_base"* %69, %"class.std::__1::__tree_node_base"** %66, align 8
  %70 = icmp eq %"class.std::__1::__tree_node_base"* %69, null
  br i1 %70, label %74, label %71

71:                                               ; preds = %61
  %72 = getelementptr inbounds %"class.std::__1::__tree_node_base", %"class.std::__1::__tree_node_base"* %62, i64 0, i32 0
  %73 = getelementptr inbounds %"class.std::__1::__tree_node_base", %"class.std::__1::__tree_node_base"* %69, i64 0, i32 2
  store %"class.std::__1::__tree_end_node"* %72, %"class.std::__1::__tree_end_node"** %73, align 8
  br label %74

74:                                               ; preds = %71, %61
  %75 = getelementptr inbounds %"class.std::__1::__tree_node_base", %"class.std::__1::__tree_node_base"* %62, i64 0, i32 2
  %76 = bitcast %"class.std::__1::__tree_end_node"** %75 to i64*
  %77 = load i64, i64* %76, align 8
  %78 = getelementptr inbounds %"class.std::__1::__tree_node_base", %"class.std::__1::__tree_node_base"* %67, i64 0, i32 2
  %79 = bitcast %"class.std::__1::__tree_end_node"** %78 to i64*
  store i64 %77, i64* %79, align 8
  %80 = load %"class.std::__1::__tree_end_node"*, %"class.std::__1::__tree_end_node"** %75, align 8
  %81 = getelementptr inbounds %"class.std::__1::__tree_end_node", %"class.std::__1::__tree_end_node"* %80, i64 0, i32 0
  %82 = load %"class.std::__1::__tree_node_base"*, %"class.std::__1::__tree_node_base"** %81, align 8
  %83 = icmp eq %"class.std::__1::__tree_node_base"* %82, %62
  %84 = getelementptr inbounds %"class.std::__1::__tree_end_node", %"class.std::__1::__tree_end_node"* %80, i64 1, i32 0
  %85 = select i1 %83, %"class.std::__1::__tree_node_base"** %81, %"class.std::__1::__tree_node_base"** %84
  store %"class.std::__1::__tree_node_base"* %67, %"class.std::__1::__tree_node_base"** %85, align 8
  store %"class.std::__1::__tree_node_base"* %62, %"class.std::__1::__tree_node_base"** %68, align 8
  %86 = getelementptr inbounds %"class.std::__1::__tree_node_base", %"class.std::__1::__tree_node_base"* %67, i64 0, i32 0
  store %"class.std::__1::__tree_end_node"* %86, %"class.std::__1::__tree_end_node"** %75, align 8
  br label %156

87:                                               ; preds = %14
  %88 = icmp eq %"class.std::__1::__tree_node_base"* %18, null
  br i1 %88, label %93, label %89

89:                                               ; preds = %87
  %90 = getelementptr inbounds %"class.std::__1::__tree_node_base", %"class.std::__1::__tree_node_base"* %18, i64 0, i32 3
  %91 = load i8, i8* %90, align 8, !range !3
  %92 = icmp eq i8 %91, 0
  br i1 %92, label %149, label %93

93:                                               ; preds = %89, %87
  %94 = getelementptr inbounds %"class.std::__1::__tree_node_base", %"class.std::__1::__tree_node_base"* %10, i64 0, i32 2
  %95 = bitcast %"class.std::__1::__tree_end_node"* %16 to %"class.std::__1::__tree_node_base"*
  %96 = getelementptr inbounds %"class.std::__1::__tree_node_base", %"class.std::__1::__tree_node_base"* %10, i64 0, i32 0, i32 0
  %97 = load %"class.std::__1::__tree_node_base"*, %"class.std::__1::__tree_node_base"** %96, align 8
  %98 = icmp eq %"class.std::__1::__tree_node_base"* %97, %7
  br i1 %98, label %99, label %123

99:                                               ; preds = %93
  %100 = ptrtoint %"class.std::__1::__tree_end_node"* %16 to i64
  %101 = getelementptr inbounds %"class.std::__1::__tree_node_base", %"class.std::__1::__tree_node_base"* %10, i64 0, i32 0, i32 0
  %102 = getelementptr inbounds %"class.std::__1::__tree_node_base", %"class.std::__1::__tree_node_base"* %7, i64 0, i32 1
  %103 = load %"class.std::__1::__tree_node_base"*, %"class.std::__1::__tree_node_base"** %102, align 8
  store %"class.std::__1::__tree_node_base"* %103, %"class.std::__1::__tree_node_base"** %101, align 8
  %104 = icmp eq %"class.std::__1::__tree_node_base"* %103, null
  br i1 %104, label %110, label %105

105:                                              ; preds = %99
  %106 = getelementptr inbounds %"class.std::__1::__tree_node_base", %"class.std::__1::__tree_node_base"* %10, i64 0, i32 0
  %107 = getelementptr inbounds %"class.std::__1::__tree_node_base", %"class.std::__1::__tree_node_base"* %103, i64 0, i32 2
  store %"class.std::__1::__tree_end_node"* %106, %"class.std::__1::__tree_end_node"** %107, align 8
  %108 = bitcast %"class.std::__1::__tree_end_node"** %94 to i64*
  %109 = load i64, i64* %108, align 8
  br label %110

110:                                              ; preds = %99, %105
  %111 = phi i64 [ %109, %105 ], [ %100, %99 ]
  %112 = bitcast %"class.std::__1::__tree_end_node"** %8 to i64*
  store i64 %111, i64* %112, align 8
  %113 = load %"class.std::__1::__tree_end_node"*, %"class.std::__1::__tree_end_node"** %94, align 8
  %114 = getelementptr inbounds %"class.std::__1::__tree_end_node", %"class.std::__1::__tree_end_node"* %113, i64 0, i32 0
  %115 = load %"class.std::__1::__tree_node_base"*, %"class.std::__1::__tree_node_base"** %114, align 8
  %116 = icmp eq %"class.std::__1::__tree_node_base"* %115, %10
  %117 = getelementptr inbounds %"class.std::__1::__tree_end_node", %"class.std::__1::__tree_end_node"* %113, i64 1, i32 0
  %118 = select i1 %116, %"class.std::__1::__tree_node_base"** %114, %"class.std::__1::__tree_node_base"** %117
  store %"class.std::__1::__tree_node_base"* %7, %"class.std::__1::__tree_node_base"** %118, align 8
  store %"class.std::__1::__tree_node_base"* %10, %"class.std::__1::__tree_node_base"** %102, align 8
  %119 = getelementptr inbounds %"class.std::__1::__tree_node_base", %"class.std::__1::__tree_node_base"* %7, i64 0, i32 0
  store %"class.std::__1::__tree_end_node"* %119, %"class.std::__1::__tree_end_node"** %94, align 8
  %120 = getelementptr inbounds %"class.std::__1::__tree_node_base", %"class.std::__1::__tree_node_base"* %7, i64 0, i32 2
  %121 = bitcast %"class.std::__1::__tree_end_node"** %120 to %"class.std::__1::__tree_node_base"**
  %122 = load %"class.std::__1::__tree_node_base"*, %"class.std::__1::__tree_node_base"** %121, align 8
  br label %123

123:                                              ; preds = %93, %110
  %124 = phi %"class.std::__1::__tree_node_base"* [ %122, %110 ], [ %95, %93 ]
  %125 = phi %"class.std::__1::__tree_node_base"* [ %7, %110 ], [ %10, %93 ]
  %126 = getelementptr inbounds %"class.std::__1::__tree_node_base", %"class.std::__1::__tree_node_base"* %125, i64 0, i32 3
  store i8 1, i8* %126, align 8
  %127 = getelementptr inbounds %"class.std::__1::__tree_node_base", %"class.std::__1::__tree_node_base"* %124, i64 0, i32 3
  store i8 0, i8* %127, align 8
  %128 = getelementptr inbounds %"class.std::__1::__tree_node_base", %"class.std::__1::__tree_node_base"* %124, i64 0, i32 1
  %129 = load %"class.std::__1::__tree_node_base"*, %"class.std::__1::__tree_node_base"** %128, align 8
  %130 = getelementptr inbounds %"class.std::__1::__tree_node_base", %"class.std::__1::__tree_node_base"* %129, i64 0, i32 0, i32 0
  %131 = load %"class.std::__1::__tree_node_base"*, %"class.std::__1::__tree_node_base"** %130, align 8
  store %"class.std::__1::__tree_node_base"* %131, %"class.std::__1::__tree_node_base"** %128, align 8
  %132 = icmp eq %"class.std::__1::__tree_node_base"* %131, null
  br i1 %132, label %136, label %133

133:                                              ; preds = %123
  %134 = getelementptr inbounds %"class.std::__1::__tree_node_base", %"class.std::__1::__tree_node_base"* %124, i64 0, i32 0
  %135 = getelementptr inbounds %"class.std::__1::__tree_node_base", %"class.std::__1::__tree_node_base"* %131, i64 0, i32 2
  store %"class.std::__1::__tree_end_node"* %134, %"class.std::__1::__tree_end_node"** %135, align 8
  br label %136

136:                                              ; preds = %133, %123
  %137 = getelementptr inbounds %"class.std::__1::__tree_node_base", %"class.std::__1::__tree_node_base"* %124, i64 0, i32 2
  %138 = bitcast %"class.std::__1::__tree_end_node"** %137 to i64*
  %139 = load i64, i64* %138, align 8
  %140 = getelementptr inbounds %"class.std::__1::__tree_node_base", %"class.std::__1::__tree_node_base"* %129, i64 0, i32 2
  %141 = bitcast %"class.std::__1::__tree_end_node"** %140 to i64*
  store i64 %139, i64* %141, align 8
  %142 = load %"class.std::__1::__tree_end_node"*, %"class.std::__1::__tree_end_node"** %137, align 8
  %143 = getelementptr inbounds %"class.std::__1::__tree_end_node", %"class.std::__1::__tree_end_node"* %142, i64 0, i32 0
  %144 = load %"class.std::__1::__tree_node_base"*, %"class.std::__1::__tree_node_base"** %143, align 8
  %145 = icmp eq %"class.std::__1::__tree_node_base"* %144, %124
  %146 = getelementptr inbounds %"class.std::__1::__tree_end_node", %"class.std::__1::__tree_end_node"* %142, i64 1, i32 0
  %147 = select i1 %145, %"class.std::__1::__tree_node_base"** %143, %"class.std::__1::__tree_node_base"** %146
  store %"class.std::__1::__tree_node_base"* %129, %"class.std::__1::__tree_node_base"** %147, align 8
  store %"class.std::__1::__tree_node_base"* %124, %"class.std::__1::__tree_node_base"** %130, align 8
  %148 = getelementptr inbounds %"class.std::__1::__tree_node_base", %"class.std::__1::__tree_node_base"* %129, i64 0, i32 0
  store %"class.std::__1::__tree_end_node"* %148, %"class.std::__1::__tree_end_node"** %137, align 8
  br label %156

149:                                              ; preds = %89, %25
  %150 = phi i8* [ %26, %25 ], [ %90, %89 ]
  store i8 1, i8* %11, align 8
  %151 = icmp eq %"class.std::__1::__tree_node_base"* %20, %0
  %152 = getelementptr inbounds %"class.std::__1::__tree_end_node", %"class.std::__1::__tree_end_node"* %16, i64 3
  %153 = bitcast %"class.std::__1::__tree_end_node"* %152 to i8*
  %154 = zext i1 %151 to i8
  store i8 %154, i8* %153, align 8
  store i8 1, i8* %150, align 8
  %155 = icmp eq %"class.std::__1::__tree_node_base"* %20, %0
  br i1 %155, label %156, label %6

156:                                              ; preds = %6, %149, %2, %136, %74
  ret void
}

; Function Attrs: nounwind ssp uwtable
define linkonce_odr hidden void @_ZNSt3__16__treeIPN2v88internal8compiler9LiveRangeENS3_19LinearScanAllocator25InactiveLiveRangeOrderingENS2_13ZoneAllocatorIS5_EEE7destroyEPNS_11__tree_nodeIS5_PvEE(%"class.std::__1::__tree.1346"*, %"class.std::__1::__tree_node.1501"*) local_unnamed_addr #0 comdat align 2 {
  %3 = icmp eq %"class.std::__1::__tree_node.1501"* %1, null
  br i1 %3, label %12, label %4

4:                                                ; preds = %2, %4
  %5 = phi %"class.std::__1::__tree_node.1501"* [ %10, %4 ], [ %1, %2 ]
  %6 = bitcast %"class.std::__1::__tree_node.1501"* %5 to %"class.std::__1::__tree_node.1501"**
  %7 = load %"class.std::__1::__tree_node.1501"*, %"class.std::__1::__tree_node.1501"** %6, align 8
  tail call void @_ZNSt3__16__treeIPN2v88internal8compiler9LiveRangeENS3_19LinearScanAllocator25InactiveLiveRangeOrderingENS2_13ZoneAllocatorIS5_EEE7destroyEPNS_11__tree_nodeIS5_PvEE(%"class.std::__1::__tree.1346"* %0, %"class.std::__1::__tree_node.1501"* %7) #16
  %8 = getelementptr inbounds %"class.std::__1::__tree_node.1501", %"class.std::__1::__tree_node.1501"* %5, i64 0, i32 0, i32 1
  %9 = bitcast %"class.std::__1::__tree_node_base"** %8 to %"class.std::__1::__tree_node.1501"**
  %10 = load %"class.std::__1::__tree_node.1501"*, %"class.std::__1::__tree_node.1501"** %9, align 8
  %11 = icmp eq %"class.std::__1::__tree_node.1501"* %10, null
  br i1 %11, label %12, label %4

12:                                               ; preds = %4, %2
  ret void
}

; Function Attrs: nounwind ssp uwtable
define linkonce_odr hidden %"struct.std::__1::__hash_node_base.1398"* @_ZNSt3__112__hash_tableIN2v88internal8compiler19LinearScanAllocator17RangeWithRegisterENS5_4HashENS5_6EqualsENS2_13ZoneAllocatorIS5_EEE28__node_insert_unique_prepareEmRS5_(%"class.std::__1::__hash_table.1394"*, i64, %"struct.v8::internal::compiler::LinearScanAllocator::RangeWithRegister"* dereferenceable(16)) local_unnamed_addr #0 comdat align 2 {
  %4 = getelementptr inbounds %"class.std::__1::__hash_table.1394", %"class.std::__1::__hash_table.1394"* %0, i64 0, i32 0, i32 0, i32 1, i32 0, i32 0, i32 0, i32 0
  %5 = load i64, i64* %4, align 8
  %6 = icmp eq i64 %5, 0
  br i1 %6, label %65, label %7

7:                                                ; preds = %3
  %8 = tail call i64 @llvm.ctpop.i64(i64 %5) #16, !range !79
  %9 = icmp ugt i64 %8, 1
  br i1 %9, label %13, label %10

10:                                               ; preds = %7
  %11 = add i64 %5, -1
  %12 = and i64 %11, %1
  br label %17

13:                                               ; preds = %7
  %14 = icmp ugt i64 %5, %1
  br i1 %14, label %17, label %15

15:                                               ; preds = %13
  %16 = urem i64 %1, %5
  br label %17

17:                                               ; preds = %10, %13, %15
  %18 = phi i64 [ %12, %10 ], [ %16, %15 ], [ %1, %13 ]
  %19 = getelementptr inbounds %"class.std::__1::__hash_table.1394", %"class.std::__1::__hash_table.1394"* %0, i64 0, i32 0, i32 0, i32 0, i32 0
  %20 = load %"struct.std::__1::__hash_node_base.1398"**, %"struct.std::__1::__hash_node_base.1398"*** %19, align 8
  %21 = getelementptr inbounds %"struct.std::__1::__hash_node_base.1398"*, %"struct.std::__1::__hash_node_base.1398"** %20, i64 %18
  %22 = load %"struct.std::__1::__hash_node_base.1398"*, %"struct.std::__1::__hash_node_base.1398"** %21, align 8
  %23 = icmp eq %"struct.std::__1::__hash_node_base.1398"* %22, null
  br i1 %23, label %65, label %24

24:                                               ; preds = %17
  %25 = add i64 %5, -1
  %26 = getelementptr inbounds %"struct.v8::internal::compiler::LinearScanAllocator::RangeWithRegister", %"struct.v8::internal::compiler::LinearScanAllocator::RangeWithRegister"* %2, i64 0, i32 0
  br i1 %9, label %27, label %48

27:                                               ; preds = %24, %42
  %28 = phi %"struct.std::__1::__hash_node_base.1398"* [ %30, %42 ], [ %22, %24 ]
  %29 = getelementptr inbounds %"struct.std::__1::__hash_node_base.1398", %"struct.std::__1::__hash_node_base.1398"* %28, i64 0, i32 0
  %30 = load %"struct.std::__1::__hash_node_base.1398"*, %"struct.std::__1::__hash_node_base.1398"** %29, align 8
  %31 = icmp eq %"struct.std::__1::__hash_node_base.1398"* %30, null
  br i1 %31, label %65, label %32

32:                                               ; preds = %27
  %33 = getelementptr inbounds %"struct.std::__1::__hash_node_base.1398", %"struct.std::__1::__hash_node_base.1398"* %30, i64 1
  %34 = bitcast %"struct.std::__1::__hash_node_base.1398"* %33 to i64*
  %35 = load i64, i64* %34, align 8
  %36 = icmp ult i64 %35, %5
  br i1 %36, label %39, label %37

37:                                               ; preds = %32
  %38 = urem i64 %35, %5
  br label %39

39:                                               ; preds = %37, %32
  %40 = phi i64 [ %38, %37 ], [ %35, %32 ]
  %41 = icmp eq i64 %40, %18
  br i1 %41, label %42, label %65

42:                                               ; preds = %39
  %43 = getelementptr inbounds %"struct.std::__1::__hash_node_base.1398", %"struct.std::__1::__hash_node_base.1398"* %30, i64 2
  %44 = bitcast %"struct.std::__1::__hash_node_base.1398"* %43 to %"class.v8::internal::compiler::TopLevelLiveRange"**
  %45 = load %"class.v8::internal::compiler::TopLevelLiveRange"*, %"class.v8::internal::compiler::TopLevelLiveRange"** %44, align 8
  %46 = load %"class.v8::internal::compiler::TopLevelLiveRange"*, %"class.v8::internal::compiler::TopLevelLiveRange"** %26, align 8
  %47 = icmp eq %"class.v8::internal::compiler::TopLevelLiveRange"* %45, %46
  br i1 %47, label %89, label %27

48:                                               ; preds = %24, %59
  %49 = phi %"struct.std::__1::__hash_node_base.1398"* [ %51, %59 ], [ %22, %24 ]
  %50 = getelementptr inbounds %"struct.std::__1::__hash_node_base.1398", %"struct.std::__1::__hash_node_base.1398"* %49, i64 0, i32 0
  %51 = load %"struct.std::__1::__hash_node_base.1398"*, %"struct.std::__1::__hash_node_base.1398"** %50, align 8
  %52 = icmp eq %"struct.std::__1::__hash_node_base.1398"* %51, null
  br i1 %52, label %65, label %53

53:                                               ; preds = %48
  %54 = getelementptr inbounds %"struct.std::__1::__hash_node_base.1398", %"struct.std::__1::__hash_node_base.1398"* %51, i64 1
  %55 = bitcast %"struct.std::__1::__hash_node_base.1398"* %54 to i64*
  %56 = load i64, i64* %55, align 8
  %57 = and i64 %56, %25
  %58 = icmp eq i64 %57, %18
  br i1 %58, label %59, label %65

59:                                               ; preds = %53
  %60 = getelementptr inbounds %"struct.std::__1::__hash_node_base.1398", %"struct.std::__1::__hash_node_base.1398"* %51, i64 2
  %61 = bitcast %"struct.std::__1::__hash_node_base.1398"* %60 to %"class.v8::internal::compiler::TopLevelLiveRange"**
  %62 = load %"class.v8::internal::compiler::TopLevelLiveRange"*, %"class.v8::internal::compiler::TopLevelLiveRange"** %61, align 8
  %63 = load %"class.v8::internal::compiler::TopLevelLiveRange"*, %"class.v8::internal::compiler::TopLevelLiveRange"** %26, align 8
  %64 = icmp eq %"class.v8::internal::compiler::TopLevelLiveRange"* %62, %63
  br i1 %64, label %89, label %48

65:                                               ; preds = %53, %48, %39, %27, %17, %3
  %66 = getelementptr inbounds %"class.std::__1::__hash_table.1394", %"class.std::__1::__hash_table.1394"* %0, i64 0, i32 2, i32 0, i32 0
  %67 = load i64, i64* %66, align 8
  %68 = add i64 %67, 1
  %69 = uitofp i64 %68 to float
  %70 = uitofp i64 %5 to float
  %71 = getelementptr inbounds %"class.std::__1::__hash_table.1394", %"class.std::__1::__hash_table.1394"* %0, i64 0, i32 3, i32 0, i32 0
  %72 = load float, float* %71, align 4
  %73 = fmul float %72, %70
  %74 = fcmp olt float %73, %69
  %75 = or i1 %6, %74
  br i1 %75, label %76, label %89

76:                                               ; preds = %65
  %77 = shl i64 %5, 1
  %78 = icmp ult i64 %5, 3
  %79 = tail call i64 @llvm.ctpop.i64(i64 %5) #16, !range !79
  %80 = icmp ugt i64 %79, 1
  %81 = or i1 %78, %80
  %82 = zext i1 %81 to i64
  %83 = or i64 %77, %82
  %84 = fdiv float %69, %72
  %85 = tail call float @llvm.ceil.f32(float %84) #16
  %86 = fptoui float %85 to i64
  %87 = icmp ult i64 %83, %86
  %88 = select i1 %87, i64 %86, i64 %83
  tail call void @_ZNSt3__112__hash_tableIN2v88internal8compiler19LinearScanAllocator17RangeWithRegisterENS5_4HashENS5_6EqualsENS2_13ZoneAllocatorIS5_EEE6rehashEm(%"class.std::__1::__hash_table.1394"* %0, i64 %88)
  br label %89

89:                                               ; preds = %59, %42, %76, %65
  %90 = phi %"struct.std::__1::__hash_node_base.1398"* [ null, %65 ], [ null, %76 ], [ %30, %42 ], [ %51, %59 ]
  ret %"struct.std::__1::__hash_node_base.1398"* %90
}

; Function Attrs: nounwind ssp uwtable
define linkonce_odr hidden void @_ZNSt3__112__hash_tableIN2v88internal8compiler19LinearScanAllocator17RangeWithRegisterENS5_4HashENS5_6EqualsENS2_13ZoneAllocatorIS5_EEE6rehashEm(%"class.std::__1::__hash_table.1394"*, i64) local_unnamed_addr #0 comdat align 2 {
  %3 = icmp eq i64 %1, 1
  br i1 %3, label %9, label %4

4:                                                ; preds = %2
  %5 = tail call i64 @llvm.ctpop.i64(i64 %1), !range !79
  %6 = icmp ugt i64 %5, 1
  br i1 %6, label %7, label %9

7:                                                ; preds = %4
  %8 = tail call i64 @_ZNSt3__112__next_primeEm(i64 %1) #16
  br label %9

9:                                                ; preds = %2, %4, %7
  %10 = phi i64 [ %8, %7 ], [ %1, %4 ], [ 2, %2 ]
  %11 = getelementptr inbounds %"class.std::__1::__hash_table.1394", %"class.std::__1::__hash_table.1394"* %0, i64 0, i32 0, i32 0, i32 1, i32 0, i32 0, i32 0, i32 0
  %12 = load i64, i64* %11, align 8
  %13 = icmp ugt i64 %10, %12
  br i1 %13, label %14, label %15

14:                                               ; preds = %9
  tail call void @_ZNSt3__112__hash_tableIN2v88internal8compiler19LinearScanAllocator17RangeWithRegisterENS5_4HashENS5_6EqualsENS2_13ZoneAllocatorIS5_EEE8__rehashEm(%"class.std::__1::__hash_table.1394"* %0, i64 %10)
  br label %45

15:                                               ; preds = %9
  %16 = icmp ult i64 %10, %12
  br i1 %16, label %17, label %45

17:                                               ; preds = %15
  %18 = icmp ugt i64 %12, 2
  %19 = tail call i64 @llvm.ctpop.i64(i64 %12) #16, !range !79
  %20 = icmp ult i64 %19, 2
  %21 = and i1 %18, %20
  %22 = getelementptr inbounds %"class.std::__1::__hash_table.1394", %"class.std::__1::__hash_table.1394"* %0, i64 0, i32 2, i32 0, i32 0
  %23 = load i64, i64* %22, align 8
  %24 = uitofp i64 %23 to float
  %25 = getelementptr inbounds %"class.std::__1::__hash_table.1394", %"class.std::__1::__hash_table.1394"* %0, i64 0, i32 3, i32 0, i32 0
  %26 = load float, float* %25, align 4
  %27 = fdiv float %24, %26
  %28 = tail call float @llvm.ceil.f32(float %27) #16
  %29 = fptoui float %28 to i64
  br i1 %21, label %30, label %37

30:                                               ; preds = %17
  %31 = icmp ult i64 %29, 2
  br i1 %31, label %39, label %32

32:                                               ; preds = %30
  %33 = add i64 %29, -1
  %34 = tail call i64 @llvm.ctlz.i64(i64 %33, i1 true) #16, !range !79
  %35 = sub nuw nsw i64 64, %34
  %36 = shl i64 1, %35
  br label %39

37:                                               ; preds = %17
  %38 = tail call i64 @_ZNSt3__112__next_primeEm(i64 %29) #16
  br label %39

39:                                               ; preds = %32, %30, %37
  %40 = phi i64 [ %38, %37 ], [ %36, %32 ], [ %29, %30 ]
  %41 = icmp ult i64 %10, %40
  %42 = select i1 %41, i64 %40, i64 %10
  %43 = icmp ult i64 %42, %12
  br i1 %43, label %44, label %45

44:                                               ; preds = %39
  tail call void @_ZNSt3__112__hash_tableIN2v88internal8compiler19LinearScanAllocator17RangeWithRegisterENS5_4HashENS5_6EqualsENS2_13ZoneAllocatorIS5_EEE8__rehashEm(%"class.std::__1::__hash_table.1394"* %0, i64 %42)
  br label %45

45:                                               ; preds = %15, %44, %39, %14
  ret void
}

declare i64 @_ZNSt3__112__next_primeEm(i64) local_unnamed_addr #6

; Function Attrs: nounwind ssp uwtable
define linkonce_odr hidden void @_ZNSt3__112__hash_tableIN2v88internal8compiler19LinearScanAllocator17RangeWithRegisterENS5_4HashENS5_6EqualsENS2_13ZoneAllocatorIS5_EEE8__rehashEm(%"class.std::__1::__hash_table.1394"*, i64) local_unnamed_addr #0 comdat align 2 {
  %3 = icmp eq i64 %1, 0
  br i1 %3, label %186, label %4

4:                                                ; preds = %2
  %5 = getelementptr inbounds %"class.std::__1::__hash_table.1394", %"class.std::__1::__hash_table.1394"* %0, i64 0, i32 0, i32 0, i32 1, i32 0, i32 0, i32 1, i32 0, i32 0
  %6 = load %"class.v8::internal::Zone"*, %"class.v8::internal::Zone"** %5, align 8
  %7 = shl i64 %1, 3
  %8 = getelementptr inbounds %"class.v8::internal::Zone", %"class.v8::internal::Zone"* %6, i64 0, i32 2
  %9 = load i64, i64* %8, align 8
  %10 = getelementptr inbounds %"class.v8::internal::Zone", %"class.v8::internal::Zone"* %6, i64 0, i32 3
  %11 = load i64, i64* %10, align 8
  %12 = sub i64 %11, %9
  %13 = icmp ugt i64 %7, %12
  br i1 %13, label %14, label %16, !prof !2

14:                                               ; preds = %4
  %15 = tail call i64 @_ZN2v88internal4Zone9NewExpandEm(%"class.v8::internal::Zone"* %6, i64 %7) #16
  br label %18

16:                                               ; preds = %4
  %17 = add i64 %9, %7
  store i64 %17, i64* %8, align 8
  br label %18

18:                                               ; preds = %16, %14
  %19 = phi i64 [ %15, %14 ], [ %9, %16 ]
  %20 = inttoptr i64 %19 to %"struct.std::__1::__hash_node_base.1398"**
  %21 = getelementptr inbounds %"class.std::__1::__hash_table.1394", %"class.std::__1::__hash_table.1394"* %0, i64 0, i32 0, i32 0, i32 0, i32 0
  store %"struct.std::__1::__hash_node_base.1398"** %20, %"struct.std::__1::__hash_node_base.1398"*** %21, align 8
  %22 = getelementptr inbounds %"class.std::__1::__hash_table.1394", %"class.std::__1::__hash_table.1394"* %0, i64 0, i32 0, i32 0, i32 1, i32 0, i32 0, i32 0, i32 0
  store i64 %1, i64* %22, align 8
  store %"struct.std::__1::__hash_node_base.1398"* null, %"struct.std::__1::__hash_node_base.1398"** %20, align 8
  %23 = icmp eq i64 %1, 1
  br i1 %23, label %42, label %24

24:                                               ; preds = %18
  %25 = add i64 %1, -1
  %26 = add i64 %1, -2
  %27 = and i64 %25, 3
  %28 = icmp ult i64 %26, 3
  br i1 %28, label %31, label %29

29:                                               ; preds = %24
  %30 = sub i64 %25, %27
  br label %47

31:                                               ; preds = %47, %24
  %32 = phi i64 [ 1, %24 ], [ %61, %47 ]
  %33 = icmp eq i64 %27, 0
  br i1 %33, label %42, label %34

34:                                               ; preds = %31, %34
  %35 = phi i64 [ %39, %34 ], [ %32, %31 ]
  %36 = phi i64 [ %40, %34 ], [ %27, %31 ]
  %37 = load %"struct.std::__1::__hash_node_base.1398"**, %"struct.std::__1::__hash_node_base.1398"*** %21, align 8
  %38 = getelementptr inbounds %"struct.std::__1::__hash_node_base.1398"*, %"struct.std::__1::__hash_node_base.1398"** %37, i64 %35
  store %"struct.std::__1::__hash_node_base.1398"* null, %"struct.std::__1::__hash_node_base.1398"** %38, align 8
  %39 = add nuw i64 %35, 1
  %40 = add i64 %36, -1
  %41 = icmp eq i64 %40, 0
  br i1 %41, label %42, label %34, !llvm.loop !235

42:                                               ; preds = %31, %34, %18
  %43 = getelementptr inbounds %"class.std::__1::__hash_table.1394", %"class.std::__1::__hash_table.1394"* %0, i64 0, i32 1, i32 0, i32 0
  %44 = getelementptr inbounds %"struct.std::__1::__hash_node_base.1398", %"struct.std::__1::__hash_node_base.1398"* %43, i64 0, i32 0
  %45 = load %"struct.std::__1::__hash_node_base.1398"*, %"struct.std::__1::__hash_node_base.1398"** %44, align 8
  %46 = icmp eq %"struct.std::__1::__hash_node_base.1398"* %45, null
  br i1 %46, label %188, label %64

47:                                               ; preds = %47, %29
  %48 = phi i64 [ 1, %29 ], [ %61, %47 ]
  %49 = phi i64 [ %30, %29 ], [ %62, %47 ]
  %50 = load %"struct.std::__1::__hash_node_base.1398"**, %"struct.std::__1::__hash_node_base.1398"*** %21, align 8
  %51 = getelementptr inbounds %"struct.std::__1::__hash_node_base.1398"*, %"struct.std::__1::__hash_node_base.1398"** %50, i64 %48
  store %"struct.std::__1::__hash_node_base.1398"* null, %"struct.std::__1::__hash_node_base.1398"** %51, align 8
  %52 = add nuw nsw i64 %48, 1
  %53 = load %"struct.std::__1::__hash_node_base.1398"**, %"struct.std::__1::__hash_node_base.1398"*** %21, align 8
  %54 = getelementptr inbounds %"struct.std::__1::__hash_node_base.1398"*, %"struct.std::__1::__hash_node_base.1398"** %53, i64 %52
  store %"struct.std::__1::__hash_node_base.1398"* null, %"struct.std::__1::__hash_node_base.1398"** %54, align 8
  %55 = add nuw nsw i64 %48, 2
  %56 = load %"struct.std::__1::__hash_node_base.1398"**, %"struct.std::__1::__hash_node_base.1398"*** %21, align 8
  %57 = getelementptr inbounds %"struct.std::__1::__hash_node_base.1398"*, %"struct.std::__1::__hash_node_base.1398"** %56, i64 %55
  store %"struct.std::__1::__hash_node_base.1398"* null, %"struct.std::__1::__hash_node_base.1398"** %57, align 8
  %58 = add nuw i64 %48, 3
  %59 = load %"struct.std::__1::__hash_node_base.1398"**, %"struct.std::__1::__hash_node_base.1398"*** %21, align 8
  %60 = getelementptr inbounds %"struct.std::__1::__hash_node_base.1398"*, %"struct.std::__1::__hash_node_base.1398"** %59, i64 %58
  store %"struct.std::__1::__hash_node_base.1398"* null, %"struct.std::__1::__hash_node_base.1398"** %60, align 8
  %61 = add nuw i64 %48, 4
  %62 = add i64 %49, -4
  %63 = icmp eq i64 %62, 0
  br i1 %63, label %31, label %47

64:                                               ; preds = %42
  %65 = getelementptr inbounds %"struct.std::__1::__hash_node_base.1398", %"struct.std::__1::__hash_node_base.1398"* %45, i64 1
  %66 = bitcast %"struct.std::__1::__hash_node_base.1398"* %65 to i64*
  %67 = load i64, i64* %66, align 8
  %68 = tail call i64 @llvm.ctpop.i64(i64 %1) #16, !range !79
  %69 = icmp ugt i64 %68, 1
  br i1 %69, label %73, label %70

70:                                               ; preds = %64
  %71 = add i64 %1, -1
  %72 = and i64 %67, %71
  br label %77

73:                                               ; preds = %64
  %74 = icmp ult i64 %67, %1
  br i1 %74, label %77, label %75

75:                                               ; preds = %73
  %76 = urem i64 %67, %1
  br label %77

77:                                               ; preds = %70, %73, %75
  %78 = phi i64 [ %72, %70 ], [ %76, %75 ], [ %67, %73 ]
  %79 = load %"struct.std::__1::__hash_node_base.1398"**, %"struct.std::__1::__hash_node_base.1398"*** %21, align 8
  %80 = getelementptr inbounds %"struct.std::__1::__hash_node_base.1398"*, %"struct.std::__1::__hash_node_base.1398"** %79, i64 %78
  store %"struct.std::__1::__hash_node_base.1398"* %43, %"struct.std::__1::__hash_node_base.1398"** %80, align 8
  %81 = getelementptr inbounds %"struct.std::__1::__hash_node_base.1398", %"struct.std::__1::__hash_node_base.1398"* %45, i64 0, i32 0
  %82 = load %"struct.std::__1::__hash_node_base.1398"*, %"struct.std::__1::__hash_node_base.1398"** %81, align 8
  %83 = icmp eq %"struct.std::__1::__hash_node_base.1398"* %82, null
  br i1 %83, label %188, label %84

84:                                               ; preds = %77
  %85 = add i64 %1, -1
  br i1 %69, label %86, label %138

86:                                               ; preds = %84, %129
  %87 = phi %"struct.std::__1::__hash_node_base.1398"* [ %133, %129 ], [ %82, %84 ]
  %88 = phi %"struct.std::__1::__hash_node_base.1398"* [ %131, %129 ], [ %45, %84 ]
  %89 = phi i64 [ %130, %129 ], [ %78, %84 ]
  %90 = getelementptr inbounds %"struct.std::__1::__hash_node_base.1398", %"struct.std::__1::__hash_node_base.1398"* %87, i64 1
  %91 = bitcast %"struct.std::__1::__hash_node_base.1398"* %90 to i64*
  %92 = load i64, i64* %91, align 8
  %93 = icmp ult i64 %92, %1
  br i1 %93, label %96, label %94

94:                                               ; preds = %86
  %95 = urem i64 %92, %1
  br label %96

96:                                               ; preds = %94, %86
  %97 = phi i64 [ %95, %94 ], [ %92, %86 ]
  %98 = icmp eq i64 %97, %89
  br i1 %98, label %129, label %99

99:                                               ; preds = %96
  %100 = load %"struct.std::__1::__hash_node_base.1398"**, %"struct.std::__1::__hash_node_base.1398"*** %21, align 8
  %101 = getelementptr inbounds %"struct.std::__1::__hash_node_base.1398"*, %"struct.std::__1::__hash_node_base.1398"** %100, i64 %97
  %102 = load %"struct.std::__1::__hash_node_base.1398"*, %"struct.std::__1::__hash_node_base.1398"** %101, align 8
  %103 = icmp eq %"struct.std::__1::__hash_node_base.1398"* %102, null
  br i1 %103, label %128, label %135

104:                                              ; preds = %135, %109
  %105 = phi %"struct.std::__1::__hash_node_base.1398"* [ %107, %109 ], [ %87, %135 ]
  %106 = getelementptr inbounds %"struct.std::__1::__hash_node_base.1398", %"struct.std::__1::__hash_node_base.1398"* %105, i64 0, i32 0
  %107 = load %"struct.std::__1::__hash_node_base.1398"*, %"struct.std::__1::__hash_node_base.1398"** %106, align 8
  %108 = icmp eq %"struct.std::__1::__hash_node_base.1398"* %107, null
  br i1 %108, label %115, label %109

109:                                              ; preds = %104
  %110 = load %"class.v8::internal::compiler::TopLevelLiveRange"*, %"class.v8::internal::compiler::TopLevelLiveRange"** %137, align 8
  %111 = getelementptr inbounds %"struct.std::__1::__hash_node_base.1398", %"struct.std::__1::__hash_node_base.1398"* %107, i64 2
  %112 = bitcast %"struct.std::__1::__hash_node_base.1398"* %111 to %"class.v8::internal::compiler::TopLevelLiveRange"**
  %113 = load %"class.v8::internal::compiler::TopLevelLiveRange"*, %"class.v8::internal::compiler::TopLevelLiveRange"** %112, align 8
  %114 = icmp eq %"class.v8::internal::compiler::TopLevelLiveRange"* %110, %113
  br i1 %114, label %104, label %115

115:                                              ; preds = %109, %104
  %116 = ptrtoint %"struct.std::__1::__hash_node_base.1398"* %107 to i64
  %117 = bitcast %"struct.std::__1::__hash_node_base.1398"* %105 to i64*
  %118 = bitcast %"struct.std::__1::__hash_node_base.1398"* %88 to i64*
  store i64 %116, i64* %118, align 8
  %119 = load %"struct.std::__1::__hash_node_base.1398"**, %"struct.std::__1::__hash_node_base.1398"*** %21, align 8
  %120 = getelementptr inbounds %"struct.std::__1::__hash_node_base.1398"*, %"struct.std::__1::__hash_node_base.1398"** %119, i64 %97
  %121 = bitcast %"struct.std::__1::__hash_node_base.1398"** %120 to i64**
  %122 = load i64*, i64** %121, align 8
  %123 = load i64, i64* %122, align 8
  store i64 %123, i64* %117, align 8
  %124 = load %"struct.std::__1::__hash_node_base.1398"**, %"struct.std::__1::__hash_node_base.1398"*** %21, align 8
  %125 = getelementptr inbounds %"struct.std::__1::__hash_node_base.1398"*, %"struct.std::__1::__hash_node_base.1398"** %124, i64 %97
  %126 = load %"struct.std::__1::__hash_node_base.1398"*, %"struct.std::__1::__hash_node_base.1398"** %125, align 8
  %127 = getelementptr inbounds %"struct.std::__1::__hash_node_base.1398", %"struct.std::__1::__hash_node_base.1398"* %126, i64 0, i32 0
  store %"struct.std::__1::__hash_node_base.1398"* %87, %"struct.std::__1::__hash_node_base.1398"** %127, align 8
  br label %129

128:                                              ; preds = %99
  store %"struct.std::__1::__hash_node_base.1398"* %88, %"struct.std::__1::__hash_node_base.1398"** %101, align 8
  br label %129

129:                                              ; preds = %128, %115, %96
  %130 = phi i64 [ %97, %128 ], [ %89, %115 ], [ %89, %96 ]
  %131 = phi %"struct.std::__1::__hash_node_base.1398"* [ %87, %128 ], [ %88, %115 ], [ %87, %96 ]
  %132 = getelementptr inbounds %"struct.std::__1::__hash_node_base.1398", %"struct.std::__1::__hash_node_base.1398"* %131, i64 0, i32 0
  %133 = load %"struct.std::__1::__hash_node_base.1398"*, %"struct.std::__1::__hash_node_base.1398"** %132, align 8
  %134 = icmp eq %"struct.std::__1::__hash_node_base.1398"* %133, null
  br i1 %134, label %188, label %86

135:                                              ; preds = %99
  %136 = getelementptr inbounds %"struct.std::__1::__hash_node_base.1398", %"struct.std::__1::__hash_node_base.1398"* %87, i64 2
  %137 = bitcast %"struct.std::__1::__hash_node_base.1398"* %136 to %"class.v8::internal::compiler::TopLevelLiveRange"**
  br label %104

138:                                              ; preds = %84, %180
  %139 = phi %"struct.std::__1::__hash_node_base.1398"* [ %184, %180 ], [ %82, %84 ]
  %140 = phi %"struct.std::__1::__hash_node_base.1398"* [ %182, %180 ], [ %45, %84 ]
  %141 = phi i64 [ %181, %180 ], [ %78, %84 ]
  %142 = getelementptr inbounds %"struct.std::__1::__hash_node_base.1398", %"struct.std::__1::__hash_node_base.1398"* %139, i64 1
  %143 = bitcast %"struct.std::__1::__hash_node_base.1398"* %142 to i64*
  %144 = load i64, i64* %143, align 8
  %145 = and i64 %144, %85
  %146 = icmp eq i64 %145, %141
  br i1 %146, label %180, label %147

147:                                              ; preds = %138
  %148 = load %"struct.std::__1::__hash_node_base.1398"**, %"struct.std::__1::__hash_node_base.1398"*** %21, align 8
  %149 = getelementptr inbounds %"struct.std::__1::__hash_node_base.1398"*, %"struct.std::__1::__hash_node_base.1398"** %148, i64 %145
  %150 = load %"struct.std::__1::__hash_node_base.1398"*, %"struct.std::__1::__hash_node_base.1398"** %149, align 8
  %151 = icmp eq %"struct.std::__1::__hash_node_base.1398"* %150, null
  br i1 %151, label %155, label %152

152:                                              ; preds = %147
  %153 = getelementptr inbounds %"struct.std::__1::__hash_node_base.1398", %"struct.std::__1::__hash_node_base.1398"* %139, i64 2
  %154 = bitcast %"struct.std::__1::__hash_node_base.1398"* %153 to %"class.v8::internal::compiler::TopLevelLiveRange"**
  br label %156

155:                                              ; preds = %147
  store %"struct.std::__1::__hash_node_base.1398"* %140, %"struct.std::__1::__hash_node_base.1398"** %149, align 8
  br label %180

156:                                              ; preds = %152, %161
  %157 = phi %"struct.std::__1::__hash_node_base.1398"* [ %159, %161 ], [ %139, %152 ]
  %158 = getelementptr inbounds %"struct.std::__1::__hash_node_base.1398", %"struct.std::__1::__hash_node_base.1398"* %157, i64 0, i32 0
  %159 = load %"struct.std::__1::__hash_node_base.1398"*, %"struct.std::__1::__hash_node_base.1398"** %158, align 8
  %160 = icmp eq %"struct.std::__1::__hash_node_base.1398"* %159, null
  br i1 %160, label %167, label %161

161:                                              ; preds = %156
  %162 = load %"class.v8::internal::compiler::TopLevelLiveRange"*, %"class.v8::internal::compiler::TopLevelLiveRange"** %154, align 8
  %163 = getelementptr inbounds %"struct.std::__1::__hash_node_base.1398", %"struct.std::__1::__hash_node_base.1398"* %159, i64 2
  %164 = bitcast %"struct.std::__1::__hash_node_base.1398"* %163 to %"class.v8::internal::compiler::TopLevelLiveRange"**
  %165 = load %"class.v8::internal::compiler::TopLevelLiveRange"*, %"class.v8::internal::compiler::TopLevelLiveRange"** %164, align 8
  %166 = icmp eq %"class.v8::internal::compiler::TopLevelLiveRange"* %162, %165
  br i1 %166, label %156, label %167

167:                                              ; preds = %156, %161
  %168 = ptrtoint %"struct.std::__1::__hash_node_base.1398"* %159 to i64
  %169 = bitcast %"struct.std::__1::__hash_node_base.1398"* %157 to i64*
  %170 = bitcast %"struct.std::__1::__hash_node_base.1398"* %140 to i64*
  store i64 %168, i64* %170, align 8
  %171 = load %"struct.std::__1::__hash_node_base.1398"**, %"struct.std::__1::__hash_node_base.1398"*** %21, align 8
  %172 = getelementptr inbounds %"struct.std::__1::__hash_node_base.1398"*, %"struct.std::__1::__hash_node_base.1398"** %171, i64 %145
  %173 = bitcast %"struct.std::__1::__hash_node_base.1398"** %172 to i64**
  %174 = load i64*, i64** %173, align 8
  %175 = load i64, i64* %174, align 8
  store i64 %175, i64* %169, align 8
  %176 = load %"struct.std::__1::__hash_node_base.1398"**, %"struct.std::__1::__hash_node_base.1398"*** %21, align 8
  %177 = getelementptr inbounds %"struct.std::__1::__hash_node_base.1398"*, %"struct.std::__1::__hash_node_base.1398"** %176, i64 %145
  %178 = load %"struct.std::__1::__hash_node_base.1398"*, %"struct.std::__1::__hash_node_base.1398"** %177, align 8
  %179 = getelementptr inbounds %"struct.std::__1::__hash_node_base.1398", %"struct.std::__1::__hash_node_base.1398"* %178, i64 0, i32 0
  store %"struct.std::__1::__hash_node_base.1398"* %139, %"struct.std::__1::__hash_node_base.1398"** %179, align 8
  br label %180

180:                                              ; preds = %138, %167, %155
  %181 = phi i64 [ %145, %155 ], [ %141, %167 ], [ %141, %138 ]
  %182 = phi %"struct.std::__1::__hash_node_base.1398"* [ %139, %155 ], [ %140, %167 ], [ %139, %138 ]
  %183 = getelementptr inbounds %"struct.std::__1::__hash_node_base.1398", %"struct.std::__1::__hash_node_base.1398"* %182, i64 0, i32 0
  %184 = load %"struct.std::__1::__hash_node_base.1398"*, %"struct.std::__1::__hash_node_base.1398"** %183, align 8
  %185 = icmp eq %"struct.std::__1::__hash_node_base.1398"* %184, null
  br i1 %185, label %188, label %138

186:                                              ; preds = %2
  %187 = bitcast %"class.std::__1::__hash_table.1394"* %0 to i8*
  call void @llvm.memset.p0i8.i64(i8* align 8 %187, i8 0, i64 16, i1 false)
  br label %188

188:                                              ; preds = %180, %129, %77, %42, %186
  ret void
}

; Function Attrs: nounwind readnone speculatable
declare i64 @llvm.ctlz.i64(i64, i1 immarg) #12

; Function Attrs: nounwind readnone speculatable
declare float @llvm.ceil.f32(float) #12

; Function Attrs: inlinehint nounwind ssp uwtable
define internal fastcc void @"_ZZZN2v88internal8compiler19LinearScanAllocator25UpdateDeferredFixedRangesENS1_29TopTierRegisterAllocationData9SpillModeEPNS1_16InstructionBlockEENK3$_3clEPNS1_9LiveRangeEENKUlS9_S9_NSt3__18functionIFvS9_EEEE_clES9_S9_SD_"(%class.anon.1522* nocapture readonly, %"class.v8::internal::compiler::LiveRange"* nocapture, %"class.v8::internal::compiler::LiveRange"*, %"class.std::__1::function.1524"*) unnamed_addr #5 align 2 {
  %5 = alloca %"class.v8::internal::compiler::LiveRange"*, align 8
  %6 = getelementptr inbounds %class.anon.1522, %class.anon.1522* %0, i64 0, i32 0
  %7 = load %"class.v8::internal::compiler::LinearScanAllocator"*, %"class.v8::internal::compiler::LinearScanAllocator"** %6, align 8
  %8 = getelementptr inbounds %"class.v8::internal::compiler::LiveRange", %"class.v8::internal::compiler::LiveRange"* %2, i64 0, i32 5
  %9 = load %"class.v8::internal::compiler::TopLevelLiveRange"*, %"class.v8::internal::compiler::TopLevelLiveRange"** %8, align 8
  %10 = getelementptr inbounds %"class.v8::internal::compiler::TopLevelLiveRange", %"class.v8::internal::compiler::TopLevelLiveRange"* %9, i64 0, i32 1
  %11 = load i32, i32* %10, align 4
  %12 = icmp slt i32 %11, 0
  br i1 %12, label %210, label %13

13:                                               ; preds = %4
  %14 = getelementptr inbounds %"class.v8::internal::compiler::LiveRange", %"class.v8::internal::compiler::LiveRange"* %1, i64 0, i32 1
  %15 = load i32, i32* %14, align 4
  %16 = getelementptr inbounds %"class.v8::internal::compiler::LiveRange", %"class.v8::internal::compiler::LiveRange"* %2, i64 0, i32 1
  %17 = load i32, i32* %16, align 4
  %18 = xor i32 %17, %15
  %19 = and i32 %18, 8064
  %20 = icmp eq i32 %19, 0
  br i1 %20, label %21, label %210

21:                                               ; preds = %13
  %22 = getelementptr inbounds %"class.v8::internal::compiler::LiveRange", %"class.v8::internal::compiler::LiveRange"* %2, i64 0, i32 3
  %23 = load %"class.v8::internal::compiler::UseInterval"*, %"class.v8::internal::compiler::UseInterval"** %22, align 8
  %24 = icmp eq %"class.v8::internal::compiler::UseInterval"* %23, null
  br i1 %24, label %210, label %25

25:                                               ; preds = %21
  %26 = getelementptr inbounds %"class.v8::internal::compiler::UseInterval", %"class.v8::internal::compiler::UseInterval"* %23, i64 0, i32 0, i32 0
  %27 = load i32, i32* %26, align 8
  %28 = getelementptr inbounds %"class.v8::internal::compiler::LiveRange", %"class.v8::internal::compiler::LiveRange"* %1, i64 0, i32 7
  %29 = load %"class.v8::internal::compiler::UseInterval"*, %"class.v8::internal::compiler::UseInterval"** %28, align 8
  %30 = icmp eq %"class.v8::internal::compiler::UseInterval"* %29, null
  br i1 %30, label %31, label %33

31:                                               ; preds = %25
  %32 = getelementptr inbounds %"class.v8::internal::compiler::LiveRange", %"class.v8::internal::compiler::LiveRange"* %1, i64 0, i32 3
  br label %39

33:                                               ; preds = %25
  %34 = getelementptr inbounds %"class.v8::internal::compiler::UseInterval", %"class.v8::internal::compiler::UseInterval"* %29, i64 0, i32 0, i32 0
  %35 = load i32, i32* %34, align 8
  %36 = icmp sgt i32 %35, %27
  br i1 %36, label %37, label %39

37:                                               ; preds = %33
  store %"class.v8::internal::compiler::UseInterval"* null, %"class.v8::internal::compiler::UseInterval"** %28, align 8
  %38 = getelementptr inbounds %"class.v8::internal::compiler::LiveRange", %"class.v8::internal::compiler::LiveRange"* %1, i64 0, i32 3
  br label %39

39:                                               ; preds = %37, %33, %31
  %40 = phi %"class.v8::internal::compiler::UseInterval"* [ null, %31 ], [ null, %37 ], [ %29, %33 ]
  %41 = phi %"class.v8::internal::compiler::UseInterval"** [ %32, %31 ], [ %38, %37 ], [ %28, %33 ]
  %42 = load %"class.v8::internal::compiler::UseInterval"*, %"class.v8::internal::compiler::UseInterval"** %41, align 8
  %43 = icmp eq %"class.v8::internal::compiler::UseInterval"* %42, null
  br i1 %43, label %210, label %44

44:                                               ; preds = %39
  %45 = getelementptr inbounds %"class.v8::internal::compiler::LiveRange", %"class.v8::internal::compiler::LiveRange"* %2, i64 0, i32 2
  %46 = getelementptr inbounds %"class.v8::internal::compiler::LiveRange", %"class.v8::internal::compiler::LiveRange"* %1, i64 0, i32 2
  br label %47

47:                                               ; preds = %97, %44
  %48 = phi %"class.v8::internal::compiler::UseInterval"* [ %40, %44 ], [ %98, %97 ]
  %49 = phi %"class.v8::internal::compiler::UseInterval"* [ %23, %44 ], [ %100, %97 ]
  %50 = phi %"class.v8::internal::compiler::UseInterval"* [ %42, %44 ], [ %99, %97 ]
  %51 = getelementptr inbounds %"class.v8::internal::compiler::UseInterval", %"class.v8::internal::compiler::UseInterval"* %50, i64 0, i32 0, i32 0
  %52 = load i32, i32* %51, align 8
  %53 = load %"class.v8::internal::compiler::UseInterval"*, %"class.v8::internal::compiler::UseInterval"** %45, align 8
  %54 = getelementptr inbounds %"class.v8::internal::compiler::UseInterval", %"class.v8::internal::compiler::UseInterval"* %53, i64 0, i32 1, i32 0
  %55 = load i32, i32* %54, align 4
  %56 = icmp sgt i32 %52, %55
  br i1 %56, label %210, label %57

57:                                               ; preds = %47
  %58 = getelementptr inbounds %"class.v8::internal::compiler::UseInterval", %"class.v8::internal::compiler::UseInterval"* %49, i64 0, i32 0, i32 0
  %59 = load i32, i32* %58, align 8
  %60 = load %"class.v8::internal::compiler::UseInterval"*, %"class.v8::internal::compiler::UseInterval"** %46, align 8
  %61 = getelementptr inbounds %"class.v8::internal::compiler::UseInterval", %"class.v8::internal::compiler::UseInterval"* %60, i64 0, i32 1, i32 0
  %62 = load i32, i32* %61, align 4
  %63 = icmp sgt i32 %59, %62
  br i1 %63, label %210, label %64

64:                                               ; preds = %57
  %65 = icmp slt i32 %59, %52
  %66 = select i1 %65, i32 %52, i32 %59
  %67 = select i1 %65, %"class.v8::internal::compiler::UseInterval"* %49, %"class.v8::internal::compiler::UseInterval"* %50
  %68 = getelementptr inbounds %"class.v8::internal::compiler::UseInterval", %"class.v8::internal::compiler::UseInterval"* %67, i64 0, i32 1, i32 0
  %69 = load i32, i32* %68, align 4
  %70 = icmp slt i32 %66, %69
  %71 = icmp ne i32 %66, -1
  %72 = and i1 %71, %70
  br i1 %72, label %104, label %73

73:                                               ; preds = %64
  %74 = icmp slt i32 %52, %59
  br i1 %74, label %75, label %94

75:                                               ; preds = %73
  %76 = getelementptr inbounds %"class.v8::internal::compiler::UseInterval", %"class.v8::internal::compiler::UseInterval"* %50, i64 0, i32 2
  %77 = load %"class.v8::internal::compiler::UseInterval"*, %"class.v8::internal::compiler::UseInterval"** %76, align 8
  %78 = icmp eq %"class.v8::internal::compiler::UseInterval"* %77, null
  br i1 %78, label %210, label %79

79:                                               ; preds = %75
  %80 = getelementptr inbounds %"class.v8::internal::compiler::UseInterval", %"class.v8::internal::compiler::UseInterval"* %77, i64 0, i32 0, i32 0
  %81 = load i32, i32* %80, align 8
  %82 = icmp sgt i32 %81, %55
  br i1 %82, label %210, label %83

83:                                               ; preds = %79
  %84 = icmp sgt i32 %81, %27
  br i1 %84, label %97, label %85

85:                                               ; preds = %83
  %86 = icmp eq %"class.v8::internal::compiler::UseInterval"* %48, null
  br i1 %86, label %90, label %87

87:                                               ; preds = %85
  %88 = getelementptr inbounds %"class.v8::internal::compiler::UseInterval", %"class.v8::internal::compiler::UseInterval"* %48, i64 0, i32 0, i32 0
  %89 = load i32, i32* %88, align 8
  br label %90

90:                                               ; preds = %87, %85
  %91 = phi i32 [ %89, %87 ], [ -1, %85 ]
  %92 = icmp sgt i32 %81, %91
  br i1 %92, label %93, label %97

93:                                               ; preds = %90
  store %"class.v8::internal::compiler::UseInterval"* %77, %"class.v8::internal::compiler::UseInterval"** %28, align 8
  br label %97

94:                                               ; preds = %73
  %95 = getelementptr inbounds %"class.v8::internal::compiler::UseInterval", %"class.v8::internal::compiler::UseInterval"* %49, i64 0, i32 2
  %96 = load %"class.v8::internal::compiler::UseInterval"*, %"class.v8::internal::compiler::UseInterval"** %95, align 8
  br label %97

97:                                               ; preds = %94, %93, %90, %83
  %98 = phi %"class.v8::internal::compiler::UseInterval"* [ %48, %94 ], [ %48, %83 ], [ %48, %90 ], [ %77, %93 ]
  %99 = phi %"class.v8::internal::compiler::UseInterval"* [ %50, %94 ], [ %77, %83 ], [ %77, %90 ], [ %77, %93 ]
  %100 = phi %"class.v8::internal::compiler::UseInterval"* [ %96, %94 ], [ %49, %83 ], [ %49, %90 ], [ %49, %93 ]
  %101 = icmp ne %"class.v8::internal::compiler::UseInterval"* %99, null
  %102 = icmp ne %"class.v8::internal::compiler::UseInterval"* %100, null
  %103 = and i1 %101, %102
  br i1 %103, label %47, label %210

104:                                              ; preds = %64
  %105 = getelementptr inbounds %class.anon.1522, %class.anon.1522* %0, i64 0, i32 1, i32 0
  %106 = load i32, i32* %105, align 4
  %107 = icmp sgt i32 %66, %106
  br i1 %107, label %210, label %108

108:                                              ; preds = %104
  %109 = getelementptr inbounds %"class.v8::internal::compiler::LinearScanAllocator", %"class.v8::internal::compiler::LinearScanAllocator"* %7, i64 0, i32 0, i32 0
  %110 = load %"class.v8::internal::compiler::TopTierRegisterAllocationData"*, %"class.v8::internal::compiler::TopTierRegisterAllocationData"** %109, align 8
  %111 = getelementptr inbounds %"class.v8::internal::compiler::TopTierRegisterAllocationData", %"class.v8::internal::compiler::TopTierRegisterAllocationData"* %110, i64 0, i32 23, i32 0
  %112 = load i32, i32* %111, align 4
  %113 = and i32 %112, 1
  %114 = icmp eq i32 %113, 0
  br i1 %114, label %134, label %115

115:                                              ; preds = %108
  %116 = load %"class.v8::internal::compiler::TopLevelLiveRange"*, %"class.v8::internal::compiler::TopLevelLiveRange"** %8, align 8
  %117 = getelementptr inbounds %"class.v8::internal::compiler::TopLevelLiveRange", %"class.v8::internal::compiler::TopLevelLiveRange"* %116, i64 0, i32 1
  %118 = load i32, i32* %117, align 4
  %119 = load i32, i32* %16, align 4
  %120 = lshr i32 %119, 7
  %121 = and i32 %120, 63
  %122 = icmp eq i32 %121, 32
  br i1 %122, label %131, label %123

123:                                              ; preds = %115
  %124 = getelementptr inbounds %"class.v8::internal::compiler::LinearScanAllocator", %"class.v8::internal::compiler::LinearScanAllocator"* %7, i64 0, i32 0, i32 1
  %125 = load i32, i32* %124, align 8
  %126 = icmp eq i32 %125, 0
  %127 = zext i32 %121 to i64
  %128 = select i1 %126, [16 x i8*]* @_ZZN2v88internal12RegisterNameENS0_8RegisterEE5Names, [16 x i8*]* @_ZZN2v88internal12RegisterNameENS0_11XMMRegisterEE5Names
  %129 = getelementptr inbounds [16 x i8*], [16 x i8*]* %128, i64 0, i64 %127
  %130 = load i8*, i8** %129, align 8
  br label %131

131:                                              ; preds = %123, %115
  %132 = phi i8* [ getelementptr inbounds ([11 x i8], [11 x i8]* @.str.58, i64 0, i64 0), %115 ], [ %130, %123 ]
  tail call void (i8*, ...) @_ZN2v88internal6PrintFEPKcz(i8* getelementptr inbounds ([62 x i8], [62 x i8]* @.str.141, i64 0, i64 0), i32 %118, i8* %132) #16
  %133 = load %"class.v8::internal::compiler::TopTierRegisterAllocationData"*, %"class.v8::internal::compiler::TopTierRegisterAllocationData"** %109, align 8
  br label %134

134:                                              ; preds = %108, %131
  %135 = phi %"class.v8::internal::compiler::TopTierRegisterAllocationData"* [ %110, %108 ], [ %133, %131 ]
  %136 = getelementptr inbounds %"class.v8::internal::compiler::TopTierRegisterAllocationData", %"class.v8::internal::compiler::TopTierRegisterAllocationData"* %135, i64 0, i32 1
  %137 = load %"class.v8::internal::Zone"*, %"class.v8::internal::Zone"** %136, align 8
  %138 = load %"class.v8::internal::compiler::TopLevelLiveRange"*, %"class.v8::internal::compiler::TopLevelLiveRange"** %8, align 8
  %139 = getelementptr inbounds %"class.v8::internal::compiler::TopLevelLiveRange", %"class.v8::internal::compiler::TopLevelLiveRange"* %138, i64 0, i32 2
  %140 = load i32, i32* %139, align 8
  %141 = add nsw i32 %140, 1
  store i32 %141, i32* %139, align 8
  %142 = load i32, i32* %16, align 4
  %143 = bitcast %"class.v8::internal::compiler::TopLevelLiveRange"** %8 to i64*
  %144 = load i64, i64* %143, align 8
  %145 = getelementptr inbounds %"class.v8::internal::Zone", %"class.v8::internal::Zone"* %137, i64 0, i32 2
  %146 = load i64, i64* %145, align 8
  %147 = getelementptr inbounds %"class.v8::internal::Zone", %"class.v8::internal::Zone"* %137, i64 0, i32 3
  %148 = load i64, i64* %147, align 8
  %149 = sub i64 %148, %146
  %150 = icmp ult i64 %149, 88
  br i1 %150, label %151, label %153, !prof !2

151:                                              ; preds = %134
  %152 = tail call i64 @_ZN2v88internal4Zone9NewExpandEm(%"class.v8::internal::Zone"* %137, i64 88) #16
  br label %155

153:                                              ; preds = %134
  %154 = add i64 %146, 88
  store i64 %154, i64* %145, align 8
  br label %155

155:                                              ; preds = %151, %153
  %156 = phi i64 [ %152, %151 ], [ %146, %153 ]
  %157 = inttoptr i64 %156 to %"class.v8::internal::compiler::LiveRange"*
  %158 = getelementptr inbounds %"class.v8::internal::compiler::LiveRange", %"class.v8::internal::compiler::LiveRange"* %157, i64 0, i32 0
  store i32 %141, i32* %158, align 8
  %159 = getelementptr inbounds %"class.v8::internal::compiler::LiveRange", %"class.v8::internal::compiler::LiveRange"* %157, i64 0, i32 1
  %160 = getelementptr inbounds %"class.v8::internal::compiler::LiveRange", %"class.v8::internal::compiler::LiveRange"* %157, i64 0, i32 5
  %161 = getelementptr inbounds i32, i32* %159, i64 1
  %162 = bitcast i32* %161 to i8*
  tail call void @llvm.memset.p0i8.i64(i8* align 4 %162, i8 0, i64 24, i1 false) #16
  %163 = bitcast %"class.v8::internal::compiler::TopLevelLiveRange"** %160 to i64*
  store i64 %144, i64* %163, align 8
  %164 = getelementptr inbounds %"class.v8::internal::compiler::LiveRange", %"class.v8::internal::compiler::LiveRange"* %157, i64 0, i32 6
  %165 = getelementptr inbounds %"class.v8::internal::compiler::LiveRange", %"class.v8::internal::compiler::LiveRange"* %157, i64 0, i32 11, i32 0
  %166 = bitcast %"class.v8::internal::compiler::LiveRange"** %164 to i8*
  tail call void @llvm.memset.p0i8.i64(i8* align 8 %166, i8 0, i64 40, i1 false) #16
  store i32 -1, i32* %165, align 4
  %167 = and i32 %142, 2088960
  %168 = or i32 %167, 134221824
  store i32 %168, i32* %159, align 4
  %169 = getelementptr inbounds %"class.v8::internal::compiler::LiveRange", %"class.v8::internal::compiler::LiveRange"* %2, i64 0, i32 10
  %170 = bitcast %"class.v8::internal::compiler::LiveRangeBundle"** %169 to i64*
  %171 = load i64, i64* %170, align 8
  %172 = getelementptr inbounds %"class.v8::internal::compiler::LiveRange", %"class.v8::internal::compiler::LiveRange"* %157, i64 0, i32 10
  %173 = bitcast %"class.v8::internal::compiler::LiveRangeBundle"** %172 to i64*
  store i64 %171, i64* %173, align 8
  %174 = tail call %"class.v8::internal::compiler::UsePosition"* @_ZN2v88internal8compiler9LiveRange8DetachAtENS1_16LifetimePositionEPS2_PNS0_4ZoneENS2_20HintConnectionOptionE(%"class.v8::internal::compiler::LiveRange"* %2, i32 %66, %"class.v8::internal::compiler::LiveRange"* %157, %"class.v8::internal::Zone"* %137, i1 zeroext false) #16
  %175 = load i64, i64* %143, align 8
  store i64 %175, i64* %163, align 8
  %176 = getelementptr inbounds %"class.v8::internal::compiler::LiveRange", %"class.v8::internal::compiler::LiveRange"* %2, i64 0, i32 6
  %177 = bitcast %"class.v8::internal::compiler::LiveRange"** %176 to i64*
  %178 = load i64, i64* %177, align 8
  %179 = bitcast %"class.v8::internal::compiler::LiveRange"** %164 to i64*
  store i64 %178, i64* %179, align 8
  store %"class.v8::internal::compiler::LiveRange"* %157, %"class.v8::internal::compiler::LiveRange"** %176, align 8
  %180 = load i32, i32* %16, align 4
  %181 = load i32, i32* %159, align 4
  %182 = and i32 %181, -264241153
  %183 = shl i32 %180, 15
  %184 = and i32 %183, 264241152
  %185 = or i32 %182, %184
  store i32 %185, i32* %159, align 4
  %186 = bitcast %"class.v8::internal::compiler::LiveRange"** %5 to i8*
  call void @llvm.lifetime.start.p0i8(i64 8, i8* nonnull %186)
  store %"class.v8::internal::compiler::LiveRange"* %157, %"class.v8::internal::compiler::LiveRange"** %5, align 8
  %187 = icmp eq i64 %156, 0
  br i1 %187, label %206, label %188

188:                                              ; preds = %155
  %189 = getelementptr inbounds %"class.v8::internal::compiler::LiveRange", %"class.v8::internal::compiler::LiveRange"* %157, i64 0, i32 3
  %190 = load %"class.v8::internal::compiler::UseInterval"*, %"class.v8::internal::compiler::UseInterval"** %189, align 8
  %191 = icmp eq %"class.v8::internal::compiler::UseInterval"* %190, null
  br i1 %191, label %206, label %192

192:                                              ; preds = %188
  %193 = load %"class.v8::internal::compiler::TopTierRegisterAllocationData"*, %"class.v8::internal::compiler::TopTierRegisterAllocationData"** %109, align 8
  %194 = getelementptr inbounds %"class.v8::internal::compiler::TopTierRegisterAllocationData", %"class.v8::internal::compiler::TopTierRegisterAllocationData"* %193, i64 0, i32 23, i32 0
  %195 = load i32, i32* %194, align 4
  %196 = and i32 %195, 1
  %197 = icmp eq i32 %196, 0
  br i1 %197, label %203, label %198

198:                                              ; preds = %192
  %199 = load %"class.v8::internal::compiler::TopLevelLiveRange"*, %"class.v8::internal::compiler::TopLevelLiveRange"** %160, align 8
  %200 = getelementptr inbounds %"class.v8::internal::compiler::TopLevelLiveRange", %"class.v8::internal::compiler::TopLevelLiveRange"* %199, i64 0, i32 1
  %201 = load i32, i32* %200, align 4
  %202 = load i32, i32* %158, align 8
  tail call void (i8*, ...) @_ZN2v88internal6PrintFEPKcz(i8* getelementptr inbounds ([35 x i8], [35 x i8]* @.str.80, i64 0, i64 0), i32 %201, i32 %202) #16
  br label %203

203:                                              ; preds = %198, %192
  %204 = getelementptr inbounds %"class.v8::internal::compiler::LinearScanAllocator", %"class.v8::internal::compiler::LinearScanAllocator"* %7, i64 0, i32 1, i32 0, i32 0
  %205 = call %"class.std::__1::__tree_end_node"* @_ZNSt3__16__treeIPN2v88internal8compiler9LiveRangeENS3_19LinearScanAllocator26UnhandledLiveRangeOrderingENS2_13ZoneAllocatorIS5_EEE15__emplace_multiIJRKS5_EEENS_15__tree_iteratorIS5_PNS_11__tree_nodeIS5_PvEElEEDpOT_(%"class.std::__1::__tree.1338"* %204, %"class.v8::internal::compiler::LiveRange"** nonnull dereferenceable(8) %5) #16
  br label %206

206:                                              ; preds = %155, %188, %203
  call void @llvm.lifetime.end.p0i8(i64 8, i8* nonnull %186)
  %207 = getelementptr inbounds %"class.std::__1::function.1524", %"class.std::__1::function.1524"* %3, i64 0, i32 0, i32 1, i32 0
  %208 = load void (%"union.std::__1::__function::__policy_storage"*, %"class.v8::internal::compiler::LiveRange"*)*, void (%"union.std::__1::__function::__policy_storage"*, %"class.v8::internal::compiler::LiveRange"*)** %207, align 8
  %209 = getelementptr inbounds %"class.std::__1::function.1524", %"class.std::__1::function.1524"* %3, i64 0, i32 0, i32 0
  call void %208(%"union.std::__1::__function::__policy_storage"* %209, %"class.v8::internal::compiler::LiveRange"* %2) #16
  br label %210

210:                                              ; preds = %97, %47, %57, %79, %75, %39, %21, %206, %104, %13, %4
  ret void
}

; Function Attrs: nounwind ssp uwtable
define internal void @"_ZNSt3__110__function16__policy_invokerIFvPN2v88internal8compiler9LiveRangeEEE11__call_implINS0_20__default_alloc_funcIZZNS4_19LinearScanAllocator25UpdateDeferredFixedRangesENS4_29TopTierRegisterAllocationData9SpillModeEPNS4_16InstructionBlockEENK3$_3clES6_EUlS6_E_S7_EEEEvPKNS0_16__policy_storageES6_"(%"union.std::__1::__function::__policy_storage"* nocapture readonly, %"class.v8::internal::compiler::LiveRange"*) #0 align 2 {
  %3 = alloca i32, align 4
  %4 = getelementptr %"class.v8::internal::compiler::LiveRange", %"class.v8::internal::compiler::LiveRange"* %1, i64 0, i32 2
  %5 = load %"class.v8::internal::compiler::UseInterval"*, %"class.v8::internal::compiler::UseInterval"** %4, align 8
  %6 = getelementptr %"class.v8::internal::compiler::UseInterval", %"class.v8::internal::compiler::UseInterval"* %5, i64 0, i32 1, i32 0
  %7 = load i32, i32* %6, align 4
  %8 = bitcast %"union.std::__1::__function::__policy_storage"* %0 to %"class.v8::internal::compiler::LinearScanAllocator"**
  %9 = load %"class.v8::internal::compiler::LinearScanAllocator"*, %"class.v8::internal::compiler::LinearScanAllocator"** %8, align 8
  %10 = bitcast i32* %3 to i8*
  call void @llvm.lifetime.start.p0i8(i64 4, i8* nonnull %10)
  store i32 %7, i32* %3, align 4
  %11 = getelementptr inbounds %"class.v8::internal::compiler::LinearScanAllocator", %"class.v8::internal::compiler::LinearScanAllocator"* %9, i64 0, i32 4
  %12 = getelementptr inbounds %"class.v8::internal::compiler::LifetimePosition", %"class.v8::internal::compiler::LifetimePosition"* %11, i64 0, i32 0
  %13 = load i32, i32* %12, align 4
  %14 = icmp slt i32 %13, %7
  %15 = bitcast i32* %3 to %"class.v8::internal::compiler::LifetimePosition"*
  %16 = select i1 %14, %"class.v8::internal::compiler::LifetimePosition"* %11, %"class.v8::internal::compiler::LifetimePosition"* %15
  %17 = getelementptr inbounds %"class.v8::internal::compiler::LifetimePosition", %"class.v8::internal::compiler::LifetimePosition"* %16, i64 0, i32 0
  %18 = load i32, i32* %17, align 4
  store i32 %18, i32* %12, align 8
  call void @llvm.lifetime.end.p0i8(i64 4, i8* nonnull %10)
  ret void
}

; Function Attrs: nounwind ssp uwtable
define internal void @"_ZNSt3__110__function16__policy_invokerIFvPN2v88internal8compiler9LiveRangeEEE11__call_implINS0_20__default_alloc_funcIZZNS4_19LinearScanAllocator25UpdateDeferredFixedRangesENS4_29TopTierRegisterAllocationData9SpillModeEPNS4_16InstructionBlockEENK3$_3clES6_EUlS6_E0_S7_EEEEvPKNS0_16__policy_storageES6_"(%"union.std::__1::__function::__policy_storage"* nocapture readonly, %"class.v8::internal::compiler::LiveRange"*) #0 align 2 {
  %3 = alloca i32, align 4
  %4 = getelementptr %"class.v8::internal::compiler::LiveRange", %"class.v8::internal::compiler::LiveRange"* %1, i64 0, i32 2
  %5 = load %"class.v8::internal::compiler::UseInterval"*, %"class.v8::internal::compiler::UseInterval"** %4, align 8
  %6 = getelementptr %"class.v8::internal::compiler::UseInterval", %"class.v8::internal::compiler::UseInterval"* %5, i64 0, i32 1, i32 0
  %7 = load i32, i32* %6, align 4
  %8 = bitcast %"union.std::__1::__function::__policy_storage"* %0 to %"class.v8::internal::compiler::LinearScanAllocator"**
  %9 = load %"class.v8::internal::compiler::LinearScanAllocator"*, %"class.v8::internal::compiler::LinearScanAllocator"** %8, align 8
  %10 = bitcast i32* %3 to i8*
  call void @llvm.lifetime.start.p0i8(i64 4, i8* nonnull %10)
  store i32 %7, i32* %3, align 4
  %11 = getelementptr inbounds %"class.v8::internal::compiler::LinearScanAllocator", %"class.v8::internal::compiler::LinearScanAllocator"* %9, i64 0, i32 5
  %12 = getelementptr inbounds %"class.v8::internal::compiler::LifetimePosition", %"class.v8::internal::compiler::LifetimePosition"* %11, i64 0, i32 0
  %13 = load i32, i32* %12, align 4
  %14 = icmp slt i32 %13, %7
  %15 = bitcast i32* %3 to %"class.v8::internal::compiler::LifetimePosition"*
  %16 = select i1 %14, %"class.v8::internal::compiler::LifetimePosition"* %11, %"class.v8::internal::compiler::LifetimePosition"* %15
  %17 = getelementptr inbounds %"class.v8::internal::compiler::LifetimePosition", %"class.v8::internal::compiler::LifetimePosition"* %16, i64 0, i32 0
  %18 = load i32, i32* %17, align 4
  store i32 %18, i32* %12, align 4
  call void @llvm.lifetime.end.p0i8(i64 4, i8* nonnull %10)
  ret void
}

; Function Attrs: nounwind ssp uwtable
define linkonce_odr hidden void @_ZNSt3__16vectorIPN2v88internal8compiler9LiveRangeENS2_13ZoneAllocatorIS5_EEE6assignIPS5_EENS_9enable_ifIXaasr27__is_cpp17_forward_iteratorIT_EE5valuesr16is_constructibleIS5_NS_15iterator_traitsISC_E9referenceEEE5valueEvE4typeESC_SC_(%"class.std::__1::vector.1310"*, %"class.v8::internal::compiler::LiveRange"**, %"class.v8::internal::compiler::LiveRange"**) local_unnamed_addr #0 comdat align 2 {
  %4 = ptrtoint %"class.v8::internal::compiler::LiveRange"** %1 to i64
  %5 = ptrtoint %"class.v8::internal::compiler::LiveRange"** %2 to i64
  %6 = sub i64 %5, %4
  %7 = ashr exact i64 %6, 3
  %8 = getelementptr inbounds %"class.std::__1::vector.1310", %"class.std::__1::vector.1310"* %0, i64 0, i32 0, i32 2, i32 0, i32 0
  %9 = bitcast %"class.v8::internal::compiler::LiveRange"*** %8 to i64*
  %10 = load i64, i64* %9, align 8
  %11 = bitcast %"class.std::__1::vector.1310"* %0 to i64*
  %12 = load i64, i64* %11, align 8
  %13 = sub i64 %10, %12
  %14 = ashr exact i64 %13, 3
  %15 = icmp ugt i64 %7, %14
  %16 = inttoptr i64 %12 to %"class.v8::internal::compiler::LiveRange"**
  br i1 %15, label %124, label %17

17:                                               ; preds = %3
  %18 = getelementptr inbounds %"class.std::__1::vector.1310", %"class.std::__1::vector.1310"* %0, i64 0, i32 0, i32 1
  %19 = bitcast %"class.v8::internal::compiler::LiveRange"*** %18 to i64*
  %20 = load i64, i64* %19, align 8
  %21 = sub i64 %20, %12
  %22 = ashr exact i64 %21, 3
  %23 = icmp ugt i64 %7, %22
  %24 = getelementptr inbounds %"class.v8::internal::compiler::LiveRange"*, %"class.v8::internal::compiler::LiveRange"** %1, i64 %22
  %25 = select i1 %23, %"class.v8::internal::compiler::LiveRange"** %24, %"class.v8::internal::compiler::LiveRange"** %2
  %26 = ptrtoint %"class.v8::internal::compiler::LiveRange"** %25 to i64
  %27 = sub i64 %26, %4
  %28 = ashr exact i64 %27, 3
  %29 = icmp eq i64 %27, 0
  br i1 %29, label %33, label %30

30:                                               ; preds = %17
  %31 = inttoptr i64 %12 to i8*
  %32 = bitcast %"class.v8::internal::compiler::LiveRange"** %1 to i8*
  tail call void @llvm.memmove.p0i8.p0i8.i64(i8* align 8 %31, i8* align 8 %32, i64 %27, i1 false) #16
  br label %33

33:                                               ; preds = %17, %30
  br i1 %23, label %34, label %122

34:                                               ; preds = %33
  %35 = load i64, i64* %19, align 8
  %36 = icmp eq %"class.v8::internal::compiler::LiveRange"** %25, %2
  br i1 %36, label %120, label %37

37:                                               ; preds = %34
  %38 = inttoptr i64 %35 to i64*
  %39 = xor i64 %22, -1
  %40 = getelementptr %"class.v8::internal::compiler::LiveRange"*, %"class.v8::internal::compiler::LiveRange"** %2, i64 %39
  %41 = ptrtoint %"class.v8::internal::compiler::LiveRange"** %40 to i64
  %42 = sub i64 %41, %4
  %43 = lshr i64 %42, 3
  %44 = add nuw nsw i64 %43, 1
  %45 = and i64 %44, 7
  %46 = icmp eq i64 %45, 0
  br i1 %46, label %64, label %47

47:                                               ; preds = %37, %47
  %48 = phi i64 [ %57, %47 ], [ %35, %37 ]
  %49 = phi i64* [ %58, %47 ], [ %38, %37 ]
  %50 = phi %"class.v8::internal::compiler::LiveRange"** [ %54, %47 ], [ %24, %37 ]
  %51 = phi i64 [ %59, %47 ], [ %45, %37 ]
  %52 = bitcast %"class.v8::internal::compiler::LiveRange"** %50 to i64*
  %53 = load i64, i64* %52, align 8
  store i64 %53, i64* %49, align 8
  %54 = getelementptr inbounds %"class.v8::internal::compiler::LiveRange"*, %"class.v8::internal::compiler::LiveRange"** %50, i64 1
  %55 = inttoptr i64 %48 to %"class.v8::internal::compiler::LiveRange"**
  %56 = getelementptr inbounds %"class.v8::internal::compiler::LiveRange"*, %"class.v8::internal::compiler::LiveRange"** %55, i64 1
  %57 = ptrtoint %"class.v8::internal::compiler::LiveRange"** %56 to i64
  %58 = bitcast %"class.v8::internal::compiler::LiveRange"** %56 to i64*
  %59 = add i64 %51, -1
  %60 = icmp eq i64 %59, 0
  br i1 %60, label %61, label %47, !llvm.loop !236

61:                                               ; preds = %47
  %62 = ptrtoint %"class.v8::internal::compiler::LiveRange"** %56 to i64
  %63 = bitcast %"class.v8::internal::compiler::LiveRange"** %56 to i64*
  br label %64

64:                                               ; preds = %37, %61
  %65 = phi %"class.v8::internal::compiler::LiveRange"** [ undef, %37 ], [ %56, %61 ]
  %66 = phi i64 [ %35, %37 ], [ %62, %61 ]
  %67 = phi i64* [ %38, %37 ], [ %63, %61 ]
  %68 = phi %"class.v8::internal::compiler::LiveRange"** [ %24, %37 ], [ %54, %61 ]
  %69 = icmp ult i64 %42, 56
  br i1 %69, label %117, label %70

70:                                               ; preds = %64
  %71 = inttoptr i64 %66 to %"class.v8::internal::compiler::LiveRange"**
  br label %72

72:                                               ; preds = %72, %70
  %73 = phi %"class.v8::internal::compiler::LiveRange"** [ %71, %70 ], [ %114, %72 ]
  %74 = phi i64* [ %67, %70 ], [ %116, %72 ]
  %75 = phi %"class.v8::internal::compiler::LiveRange"** [ %68, %70 ], [ %113, %72 ]
  %76 = bitcast %"class.v8::internal::compiler::LiveRange"** %75 to i64*
  %77 = load i64, i64* %76, align 8
  store i64 %77, i64* %74, align 8
  %78 = getelementptr inbounds %"class.v8::internal::compiler::LiveRange"*, %"class.v8::internal::compiler::LiveRange"** %75, i64 1
  %79 = getelementptr inbounds %"class.v8::internal::compiler::LiveRange"*, %"class.v8::internal::compiler::LiveRange"** %73, i64 1
  %80 = bitcast %"class.v8::internal::compiler::LiveRange"** %79 to i64*
  %81 = bitcast %"class.v8::internal::compiler::LiveRange"** %78 to i64*
  %82 = load i64, i64* %81, align 8
  store i64 %82, i64* %80, align 8
  %83 = getelementptr inbounds %"class.v8::internal::compiler::LiveRange"*, %"class.v8::internal::compiler::LiveRange"** %75, i64 2
  %84 = getelementptr inbounds %"class.v8::internal::compiler::LiveRange"*, %"class.v8::internal::compiler::LiveRange"** %73, i64 2
  %85 = bitcast %"class.v8::internal::compiler::LiveRange"** %84 to i64*
  %86 = bitcast %"class.v8::internal::compiler::LiveRange"** %83 to i64*
  %87 = load i64, i64* %86, align 8
  store i64 %87, i64* %85, align 8
  %88 = getelementptr inbounds %"class.v8::internal::compiler::LiveRange"*, %"class.v8::internal::compiler::LiveRange"** %75, i64 3
  %89 = getelementptr inbounds %"class.v8::internal::compiler::LiveRange"*, %"class.v8::internal::compiler::LiveRange"** %73, i64 3
  %90 = bitcast %"class.v8::internal::compiler::LiveRange"** %89 to i64*
  %91 = bitcast %"class.v8::internal::compiler::LiveRange"** %88 to i64*
  %92 = load i64, i64* %91, align 8
  store i64 %92, i64* %90, align 8
  %93 = getelementptr inbounds %"class.v8::internal::compiler::LiveRange"*, %"class.v8::internal::compiler::LiveRange"** %75, i64 4
  %94 = getelementptr inbounds %"class.v8::internal::compiler::LiveRange"*, %"class.v8::internal::compiler::LiveRange"** %73, i64 4
  %95 = bitcast %"class.v8::internal::compiler::LiveRange"** %94 to i64*
  %96 = bitcast %"class.v8::internal::compiler::LiveRange"** %93 to i64*
  %97 = load i64, i64* %96, align 8
  store i64 %97, i64* %95, align 8
  %98 = getelementptr inbounds %"class.v8::internal::compiler::LiveRange"*, %"class.v8::internal::compiler::LiveRange"** %75, i64 5
  %99 = getelementptr inbounds %"class.v8::internal::compiler::LiveRange"*, %"class.v8::internal::compiler::LiveRange"** %73, i64 5
  %100 = bitcast %"class.v8::internal::compiler::LiveRange"** %99 to i64*
  %101 = bitcast %"class.v8::internal::compiler::LiveRange"** %98 to i64*
  %102 = load i64, i64* %101, align 8
  store i64 %102, i64* %100, align 8
  %103 = getelementptr inbounds %"class.v8::internal::compiler::LiveRange"*, %"class.v8::internal::compiler::LiveRange"** %75, i64 6
  %104 = getelementptr inbounds %"class.v8::internal::compiler::LiveRange"*, %"class.v8::internal::compiler::LiveRange"** %73, i64 6
  %105 = bitcast %"class.v8::internal::compiler::LiveRange"** %104 to i64*
  %106 = bitcast %"class.v8::internal::compiler::LiveRange"** %103 to i64*
  %107 = load i64, i64* %106, align 8
  store i64 %107, i64* %105, align 8
  %108 = getelementptr inbounds %"class.v8::internal::compiler::LiveRange"*, %"class.v8::internal::compiler::LiveRange"** %75, i64 7
  %109 = getelementptr inbounds %"class.v8::internal::compiler::LiveRange"*, %"class.v8::internal::compiler::LiveRange"** %73, i64 7
  %110 = bitcast %"class.v8::internal::compiler::LiveRange"** %109 to i64*
  %111 = bitcast %"class.v8::internal::compiler::LiveRange"** %108 to i64*
  %112 = load i64, i64* %111, align 8
  store i64 %112, i64* %110, align 8
  %113 = getelementptr inbounds %"class.v8::internal::compiler::LiveRange"*, %"class.v8::internal::compiler::LiveRange"** %75, i64 8
  %114 = getelementptr inbounds %"class.v8::internal::compiler::LiveRange"*, %"class.v8::internal::compiler::LiveRange"** %73, i64 8
  %115 = icmp eq %"class.v8::internal::compiler::LiveRange"** %113, %2
  %116 = bitcast %"class.v8::internal::compiler::LiveRange"** %114 to i64*
  br i1 %115, label %117, label %72

117:                                              ; preds = %72, %64
  %118 = phi %"class.v8::internal::compiler::LiveRange"** [ %65, %64 ], [ %114, %72 ]
  %119 = ptrtoint %"class.v8::internal::compiler::LiveRange"** %118 to i64
  br label %120

120:                                              ; preds = %117, %34
  %121 = phi i64 [ %35, %34 ], [ %119, %117 ]
  store i64 %121, i64* %19, align 8
  br label %245

122:                                              ; preds = %33
  %123 = getelementptr inbounds %"class.v8::internal::compiler::LiveRange"*, %"class.v8::internal::compiler::LiveRange"** %16, i64 %28
  store %"class.v8::internal::compiler::LiveRange"** %123, %"class.v8::internal::compiler::LiveRange"*** %18, align 8
  br label %245

124:                                              ; preds = %3
  %125 = getelementptr inbounds %"class.std::__1::vector.1310", %"class.std::__1::vector.1310"* %0, i64 0, i32 0, i32 0
  %126 = icmp eq i64 %12, 0
  br i1 %126, label %129, label %127

127:                                              ; preds = %124
  %128 = bitcast %"class.std::__1::vector.1310"* %0 to i8*
  tail call void @llvm.memset.p0i8.i64(i8* align 8 %128, i8 0, i64 24, i1 false) #16
  br label %129

129:                                              ; preds = %124, %127
  %130 = phi i64 [ %10, %124 ], [ 0, %127 ]
  %131 = icmp ugt i64 %7, 268435455
  br i1 %131, label %132, label %134

132:                                              ; preds = %129
  %133 = bitcast %"class.std::__1::vector.1310"* %0 to %"class.std::__1::__vector_base_common"*
  tail call void @_ZNKSt3__120__vector_base_commonILb1EE20__throw_length_errorEv(%"class.std::__1::__vector_base_common"* %133) #17
  unreachable

134:                                              ; preds = %129
  %135 = ashr exact i64 %130, 3
  %136 = icmp ult i64 %135, 134217727
  br i1 %136, label %137, label %144

137:                                              ; preds = %134
  %138 = ashr exact i64 %130, 2
  %139 = icmp ult i64 %138, %7
  br i1 %139, label %144, label %140

140:                                              ; preds = %137
  %141 = icmp ugt i64 %138, 268435455
  br i1 %141, label %142, label %144

142:                                              ; preds = %140
  %143 = bitcast %"class.std::__1::vector.1310"* %0 to %"class.std::__1::__vector_base_common"*
  tail call void @_ZNKSt3__120__vector_base_commonILb1EE20__throw_length_errorEv(%"class.std::__1::__vector_base_common"* %143) #17
  unreachable

144:                                              ; preds = %137, %134, %140
  %145 = phi i64 [ %138, %140 ], [ 268435455, %134 ], [ %7, %137 ]
  %146 = getelementptr inbounds %"class.std::__1::vector.1310", %"class.std::__1::vector.1310"* %0, i64 0, i32 0, i32 2, i32 1, i32 0, i32 0
  %147 = load %"class.v8::internal::Zone"*, %"class.v8::internal::Zone"** %146, align 8
  %148 = shl i64 %145, 3
  %149 = getelementptr inbounds %"class.v8::internal::Zone", %"class.v8::internal::Zone"* %147, i64 0, i32 2
  %150 = load i64, i64* %149, align 8
  %151 = getelementptr inbounds %"class.v8::internal::Zone", %"class.v8::internal::Zone"* %147, i64 0, i32 3
  %152 = load i64, i64* %151, align 8
  %153 = sub i64 %152, %150
  %154 = icmp ugt i64 %148, %153
  br i1 %154, label %155, label %157, !prof !2

155:                                              ; preds = %144
  %156 = tail call i64 @_ZN2v88internal4Zone9NewExpandEm(%"class.v8::internal::Zone"* %147, i64 %148) #16
  br label %159

157:                                              ; preds = %144
  %158 = add i64 %150, %148
  store i64 %158, i64* %149, align 8
  br label %159

159:                                              ; preds = %155, %157
  %160 = phi i64 [ %156, %155 ], [ %150, %157 ]
  %161 = inttoptr i64 %160 to %"class.v8::internal::compiler::LiveRange"**
  %162 = getelementptr inbounds %"class.std::__1::vector.1310", %"class.std::__1::vector.1310"* %0, i64 0, i32 0, i32 1
  store %"class.v8::internal::compiler::LiveRange"** %161, %"class.v8::internal::compiler::LiveRange"*** %162, align 8
  store %"class.v8::internal::compiler::LiveRange"** %161, %"class.v8::internal::compiler::LiveRange"*** %125, align 8
  %163 = getelementptr inbounds %"class.v8::internal::compiler::LiveRange"*, %"class.v8::internal::compiler::LiveRange"** %161, i64 %145
  store %"class.v8::internal::compiler::LiveRange"** %163, %"class.v8::internal::compiler::LiveRange"*** %8, align 8
  %164 = bitcast %"class.v8::internal::compiler::LiveRange"*** %162 to i64*
  %165 = icmp eq %"class.v8::internal::compiler::LiveRange"** %1, %2
  br i1 %165, label %243, label %166

166:                                              ; preds = %159
  %167 = inttoptr i64 %160 to i64*
  %168 = getelementptr %"class.v8::internal::compiler::LiveRange"*, %"class.v8::internal::compiler::LiveRange"** %2, i64 -1
  %169 = ptrtoint %"class.v8::internal::compiler::LiveRange"** %168 to i64
  %170 = sub i64 %169, %4
  %171 = lshr i64 %170, 3
  %172 = add nuw nsw i64 %171, 1
  %173 = and i64 %172, 7
  %174 = icmp eq i64 %173, 0
  br i1 %174, label %189, label %175

175:                                              ; preds = %166, %175
  %176 = phi %"class.v8::internal::compiler::LiveRange"** [ %183, %175 ], [ %161, %166 ]
  %177 = phi i64* [ %184, %175 ], [ %167, %166 ]
  %178 = phi %"class.v8::internal::compiler::LiveRange"** [ %182, %175 ], [ %1, %166 ]
  %179 = phi i64 [ %185, %175 ], [ %173, %166 ]
  %180 = bitcast %"class.v8::internal::compiler::LiveRange"** %178 to i64*
  %181 = load i64, i64* %180, align 8
  store i64 %181, i64* %177, align 8
  %182 = getelementptr inbounds %"class.v8::internal::compiler::LiveRange"*, %"class.v8::internal::compiler::LiveRange"** %178, i64 1
  %183 = getelementptr inbounds %"class.v8::internal::compiler::LiveRange"*, %"class.v8::internal::compiler::LiveRange"** %176, i64 1
  %184 = bitcast %"class.v8::internal::compiler::LiveRange"** %183 to i64*
  %185 = add i64 %179, -1
  %186 = icmp eq i64 %185, 0
  br i1 %186, label %187, label %175, !llvm.loop !237

187:                                              ; preds = %175
  %188 = bitcast %"class.v8::internal::compiler::LiveRange"** %183 to i64*
  br label %189

189:                                              ; preds = %166, %187
  %190 = phi %"class.v8::internal::compiler::LiveRange"** [ undef, %166 ], [ %183, %187 ]
  %191 = phi %"class.v8::internal::compiler::LiveRange"** [ %161, %166 ], [ %183, %187 ]
  %192 = phi i64* [ %167, %166 ], [ %188, %187 ]
  %193 = phi %"class.v8::internal::compiler::LiveRange"** [ %1, %166 ], [ %182, %187 ]
  %194 = icmp ult i64 %170, 56
  br i1 %194, label %240, label %195

195:                                              ; preds = %189, %195
  %196 = phi %"class.v8::internal::compiler::LiveRange"** [ %237, %195 ], [ %191, %189 ]
  %197 = phi i64* [ %239, %195 ], [ %192, %189 ]
  %198 = phi %"class.v8::internal::compiler::LiveRange"** [ %236, %195 ], [ %193, %189 ]
  %199 = bitcast %"class.v8::internal::compiler::LiveRange"** %198 to i64*
  %200 = load i64, i64* %199, align 8
  store i64 %200, i64* %197, align 8
  %201 = getelementptr inbounds %"class.v8::internal::compiler::LiveRange"*, %"class.v8::internal::compiler::LiveRange"** %198, i64 1
  %202 = getelementptr inbounds %"class.v8::internal::compiler::LiveRange"*, %"class.v8::internal::compiler::LiveRange"** %196, i64 1
  %203 = bitcast %"class.v8::internal::compiler::LiveRange"** %202 to i64*
  %204 = bitcast %"class.v8::internal::compiler::LiveRange"** %201 to i64*
  %205 = load i64, i64* %204, align 8
  store i64 %205, i64* %203, align 8
  %206 = getelementptr inbounds %"class.v8::internal::compiler::LiveRange"*, %"class.v8::internal::compiler::LiveRange"** %198, i64 2
  %207 = getelementptr inbounds %"class.v8::internal::compiler::LiveRange"*, %"class.v8::internal::compiler::LiveRange"** %196, i64 2
  %208 = bitcast %"class.v8::internal::compiler::LiveRange"** %207 to i64*
  %209 = bitcast %"class.v8::internal::compiler::LiveRange"** %206 to i64*
  %210 = load i64, i64* %209, align 8
  store i64 %210, i64* %208, align 8
  %211 = getelementptr inbounds %"class.v8::internal::compiler::LiveRange"*, %"class.v8::internal::compiler::LiveRange"** %198, i64 3
  %212 = getelementptr inbounds %"class.v8::internal::compiler::LiveRange"*, %"class.v8::internal::compiler::LiveRange"** %196, i64 3
  %213 = bitcast %"class.v8::internal::compiler::LiveRange"** %212 to i64*
  %214 = bitcast %"class.v8::internal::compiler::LiveRange"** %211 to i64*
  %215 = load i64, i64* %214, align 8
  store i64 %215, i64* %213, align 8
  %216 = getelementptr inbounds %"class.v8::internal::compiler::LiveRange"*, %"class.v8::internal::compiler::LiveRange"** %198, i64 4
  %217 = getelementptr inbounds %"class.v8::internal::compiler::LiveRange"*, %"class.v8::internal::compiler::LiveRange"** %196, i64 4
  %218 = bitcast %"class.v8::internal::compiler::LiveRange"** %217 to i64*
  %219 = bitcast %"class.v8::internal::compiler::LiveRange"** %216 to i64*
  %220 = load i64, i64* %219, align 8
  store i64 %220, i64* %218, align 8
  %221 = getelementptr inbounds %"class.v8::internal::compiler::LiveRange"*, %"class.v8::internal::compiler::LiveRange"** %198, i64 5
  %222 = getelementptr inbounds %"class.v8::internal::compiler::LiveRange"*, %"class.v8::internal::compiler::LiveRange"** %196, i64 5
  %223 = bitcast %"class.v8::internal::compiler::LiveRange"** %222 to i64*
  %224 = bitcast %"class.v8::internal::compiler::LiveRange"** %221 to i64*
  %225 = load i64, i64* %224, align 8
  store i64 %225, i64* %223, align 8
  %226 = getelementptr inbounds %"class.v8::internal::compiler::LiveRange"*, %"class.v8::internal::compiler::LiveRange"** %198, i64 6
  %227 = getelementptr inbounds %"class.v8::internal::compiler::LiveRange"*, %"class.v8::internal::compiler::LiveRange"** %196, i64 6
  %228 = bitcast %"class.v8::internal::compiler::LiveRange"** %227 to i64*
  %229 = bitcast %"class.v8::internal::compiler::LiveRange"** %226 to i64*
  %230 = load i64, i64* %229, align 8
  store i64 %230, i64* %228, align 8
  %231 = getelementptr inbounds %"class.v8::internal::compiler::LiveRange"*, %"class.v8::internal::compiler::LiveRange"** %198, i64 7
  %232 = getelementptr inbounds %"class.v8::internal::compiler::LiveRange"*, %"class.v8::internal::compiler::LiveRange"** %196, i64 7
  %233 = bitcast %"class.v8::internal::compiler::LiveRange"** %232 to i64*
  %234 = bitcast %"class.v8::internal::compiler::LiveRange"** %231 to i64*
  %235 = load i64, i64* %234, align 8
  store i64 %235, i64* %233, align 8
  %236 = getelementptr inbounds %"class.v8::internal::compiler::LiveRange"*, %"class.v8::internal::compiler::LiveRange"** %198, i64 8
  %237 = getelementptr inbounds %"class.v8::internal::compiler::LiveRange"*, %"class.v8::internal::compiler::LiveRange"** %196, i64 8
  %238 = icmp eq %"class.v8::internal::compiler::LiveRange"** %236, %2
  %239 = bitcast %"class.v8::internal::compiler::LiveRange"** %237 to i64*
  br i1 %238, label %240, label %195

240:                                              ; preds = %195, %189
  %241 = phi %"class.v8::internal::compiler::LiveRange"** [ %190, %189 ], [ %237, %195 ]
  %242 = ptrtoint %"class.v8::internal::compiler::LiveRange"** %241 to i64
  br label %243

243:                                              ; preds = %240, %159
  %244 = phi i64 [ %160, %159 ], [ %242, %240 ]
  store i64 %244, i64* %164, align 8
  br label %245

245:                                              ; preds = %120, %122, %243
  ret void
}

; Function Attrs: argmemonly nounwind
declare void @llvm.memmove.p0i8.p0i8.i64(i8* nocapture, i8* nocapture readonly, i64, i1 immarg) #1

; Function Attrs: noreturn
declare void @_ZNKSt3__120__vector_base_commonILb1EE20__throw_length_errorEv(%"class.std::__1::__vector_base_common"*) local_unnamed_addr #4

; Function Attrs: nounwind ssp uwtable
define linkonce_odr hidden %"class.v8::internal::BitVector"* @_ZN2v88internal4Zone3NewINS0_9BitVectorEJRiRPS1_EEEPT_DpOT0_(%"class.v8::internal::Zone"*, i32* dereferenceable(4), %"class.v8::internal::Zone"** dereferenceable(8)) local_unnamed_addr #0 comdat align 2 {
  %4 = getelementptr inbounds %"class.v8::internal::Zone", %"class.v8::internal::Zone"* %0, i64 0, i32 2
  %5 = load i64, i64* %4, align 8
  %6 = getelementptr inbounds %"class.v8::internal::Zone", %"class.v8::internal::Zone"* %0, i64 0, i32 3
  %7 = load i64, i64* %6, align 8
  %8 = sub i64 %7, %5
  %9 = icmp ult i64 %8, 16
  br i1 %9, label %10, label %12, !prof !2

10:                                               ; preds = %3
  %11 = tail call i64 @_ZN2v88internal4Zone9NewExpandEm(%"class.v8::internal::Zone"* %0, i64 16) #16
  br label %14

12:                                               ; preds = %3
  %13 = add i64 %5, 16
  store i64 %13, i64* %4, align 8
  br label %14

14:                                               ; preds = %10, %12
  %15 = phi i64 [ %11, %10 ], [ %5, %12 ]
  %16 = inttoptr i64 %15 to %"class.v8::internal::BitVector"*
  %17 = load i32, i32* %1, align 4
  %18 = load %"class.v8::internal::Zone"*, %"class.v8::internal::Zone"** %2, align 8
  %19 = getelementptr inbounds %"class.v8::internal::BitVector", %"class.v8::internal::BitVector"* %16, i64 0, i32 0
  store i32 %17, i32* %19, align 8
  %20 = getelementptr inbounds %"class.v8::internal::BitVector", %"class.v8::internal::BitVector"* %16, i64 0, i32 1
  %21 = icmp slt i32 %17, 65
  br i1 %21, label %22, label %25

22:                                               ; preds = %14
  store i32 1, i32* %20, align 4
  %23 = getelementptr inbounds %"class.v8::internal::BitVector", %"class.v8::internal::BitVector"* %16, i64 0, i32 2
  %24 = bitcast %"union.v8::internal::BitVector::DataStorage"* %23 to i64*
  store i64 0, i64* %24, align 8
  br label %64

25:                                               ; preds = %14
  %26 = add nsw i32 %17, -1
  %27 = sdiv i32 %26, 64
  %28 = add nuw nsw i32 %27, 1
  store i32 %28, i32* %20, align 4
  %29 = getelementptr inbounds %"class.v8::internal::BitVector", %"class.v8::internal::BitVector"* %16, i64 0, i32 2
  %30 = bitcast %"union.v8::internal::BitVector::DataStorage"* %29 to i64*
  store i64 0, i64* %30, align 8
  %31 = sext i32 %28 to i64
  %32 = shl nsw i64 %31, 3
  %33 = getelementptr inbounds %"class.v8::internal::Zone", %"class.v8::internal::Zone"* %18, i64 0, i32 2
  %34 = load i64, i64* %33, align 8
  %35 = getelementptr inbounds %"class.v8::internal::Zone", %"class.v8::internal::Zone"* %18, i64 0, i32 3
  %36 = load i64, i64* %35, align 8
  %37 = sub i64 %36, %34
  %38 = icmp ugt i64 %32, %37
  br i1 %38, label %39, label %41, !prof !2

39:                                               ; preds = %25
  %40 = tail call i64 @_ZN2v88internal4Zone9NewExpandEm(%"class.v8::internal::Zone"* %18, i64 %32) #16
  br label %43

41:                                               ; preds = %25
  %42 = add i64 %34, %32
  store i64 %42, i64* %33, align 8
  br label %43

43:                                               ; preds = %41, %39
  %44 = phi i64 [ %40, %39 ], [ %34, %41 ]
  %45 = inttoptr i64 %44 to i64*
  %46 = getelementptr inbounds %"union.v8::internal::BitVector::DataStorage", %"union.v8::internal::BitVector::DataStorage"* %29, i64 0, i32 0
  store i64* %45, i64** %46, align 8
  %47 = load i32, i32* %20, align 4
  %48 = icmp eq i32 %47, 1
  br i1 %48, label %55, label %49

49:                                               ; preds = %43
  %50 = icmp sgt i32 %47, 0
  br i1 %50, label %51, label %64

51:                                               ; preds = %49
  %52 = getelementptr inbounds %"class.v8::internal::BitVector", %"class.v8::internal::BitVector"* %16, i64 0, i32 2, i32 0
  store i64 0, i64* %45, align 8
  %53 = load i32, i32* %20, align 4
  %54 = icmp sgt i32 %53, 1
  br i1 %54, label %56, label %64

55:                                               ; preds = %43
  store i64 0, i64* %30, align 8
  br label %64

56:                                               ; preds = %51, %56
  %57 = phi i64 [ %60, %56 ], [ 1, %51 ]
  %58 = load i64*, i64** %52, align 8
  %59 = getelementptr inbounds i64, i64* %58, i64 %57
  store i64 0, i64* %59, align 8
  %60 = add nuw nsw i64 %57, 1
  %61 = load i32, i32* %20, align 4
  %62 = sext i32 %61 to i64
  %63 = icmp slt i64 %60, %62
  br i1 %63, label %56, label %64

64:                                               ; preds = %56, %51, %22, %49, %55
  ret %"class.v8::internal::BitVector"* %16
}

; Function Attrs: nounwind ssp uwtable
define linkonce_odr hidden void @_ZNSt3__16__treeINS_12__value_typeINS_4pairIPN2v88internal8compiler12ParallelMoveENS5_18InstructionOperandEEES8_EENS_19__map_value_compareIS9_SA_NS5_26DelayedInsertionMapCompareELb1EEENS4_13ZoneAllocatorISA_EEE7destroyEPNS_11__tree_nodeISA_PvEE(%"class.std::__1::__tree.1444"*, %"class.std::__1::__tree_node.1536"*) local_unnamed_addr #0 comdat align 2 {
  %3 = icmp eq %"class.std::__1::__tree_node.1536"* %1, null
  br i1 %3, label %12, label %4

4:                                                ; preds = %2, %4
  %5 = phi %"class.std::__1::__tree_node.1536"* [ %10, %4 ], [ %1, %2 ]
  %6 = bitcast %"class.std::__1::__tree_node.1536"* %5 to %"class.std::__1::__tree_node.1536"**
  %7 = load %"class.std::__1::__tree_node.1536"*, %"class.std::__1::__tree_node.1536"** %6, align 8
  tail call void @_ZNSt3__16__treeINS_12__value_typeINS_4pairIPN2v88internal8compiler12ParallelMoveENS5_18InstructionOperandEEES8_EENS_19__map_value_compareIS9_SA_NS5_26DelayedInsertionMapCompareELb1EEENS4_13ZoneAllocatorISA_EEE7destroyEPNS_11__tree_nodeISA_PvEE(%"class.std::__1::__tree.1444"* %0, %"class.std::__1::__tree_node.1536"* %7) #16
  %8 = getelementptr inbounds %"class.std::__1::__tree_node.1536", %"class.std::__1::__tree_node.1536"* %5, i64 0, i32 0, i32 1
  %9 = bitcast %"class.std::__1::__tree_node_base"** %8 to %"class.std::__1::__tree_node.1536"**
  %10 = load %"class.std::__1::__tree_node.1536"*, %"class.std::__1::__tree_node.1536"** %9, align 8
  %11 = icmp eq %"class.std::__1::__tree_node.1536"* %10, null
  br i1 %11, label %12, label %4

12:                                               ; preds = %4, %2
  ret void
}

; Function Attrs: nounwind ssp uwtable
define linkonce_odr hidden void @_ZNSt3__16__treeINS_4pairIN2v88internal8compiler9RpoNumberEiEENS_4lessIS6_EENS3_13ZoneAllocatorIS6_EEE7destroyEPNS_11__tree_nodeIS6_PvEE(%"class.std::__1::__tree.1473"*, %"class.std::__1::__tree_node.1538"*) local_unnamed_addr #0 comdat align 2 {
  %3 = icmp eq %"class.std::__1::__tree_node.1538"* %1, null
  br i1 %3, label %12, label %4

4:                                                ; preds = %2, %4
  %5 = phi %"class.std::__1::__tree_node.1538"* [ %10, %4 ], [ %1, %2 ]
  %6 = bitcast %"class.std::__1::__tree_node.1538"* %5 to %"class.std::__1::__tree_node.1538"**
  %7 = load %"class.std::__1::__tree_node.1538"*, %"class.std::__1::__tree_node.1538"** %6, align 8
  tail call void @_ZNSt3__16__treeINS_4pairIN2v88internal8compiler9RpoNumberEiEENS_4lessIS6_EENS3_13ZoneAllocatorIS6_EEE7destroyEPNS_11__tree_nodeIS6_PvEE(%"class.std::__1::__tree.1473"* %0, %"class.std::__1::__tree_node.1538"* %7) #16
  %8 = getelementptr inbounds %"class.std::__1::__tree_node.1538", %"class.std::__1::__tree_node.1538"* %5, i64 0, i32 0, i32 1
  %9 = bitcast %"class.std::__1::__tree_node_base"** %8 to %"class.std::__1::__tree_node.1538"**
  %10 = load %"class.std::__1::__tree_node.1538"*, %"class.std::__1::__tree_node.1538"** %9, align 8
  %11 = icmp eq %"class.std::__1::__tree_node.1538"* %10, null
  br i1 %11, label %12, label %4

12:                                               ; preds = %4, %2
  ret void
}

; Function Attrs: nounwind ssp uwtable
define linkonce_odr hidden void @_ZNSt3__112__deque_baseIiN2v88internal22RecyclingZoneAllocatorIiEEED2Ev(%"class.std::__1::__deque_base.1461"*) unnamed_addr #0 comdat align 2 {
  %2 = getelementptr inbounds %"class.std::__1::__deque_base.1461", %"class.std::__1::__deque_base.1461"* %0, i64 0, i32 0, i32 1
  %3 = load i32**, i32*** %2, align 8
  %4 = getelementptr inbounds %"class.std::__1::__deque_base.1461", %"class.std::__1::__deque_base.1461"* %0, i64 0, i32 1
  %5 = load i64, i64* %4, align 8
  %6 = lshr i64 %5, 10
  %7 = getelementptr inbounds i32*, i32** %3, i64 %6
  %8 = getelementptr inbounds %"class.std::__1::__deque_base.1461", %"class.std::__1::__deque_base.1461"* %0, i64 0, i32 0, i32 2
  %9 = load i32**, i32*** %8, align 8
  %10 = icmp eq i32** %9, %3
  %11 = ptrtoint i32** %9 to i64
  %12 = ptrtoint i32** %3 to i64
  br i1 %10, label %13, label %15

13:                                               ; preds = %1
  %14 = getelementptr inbounds %"class.std::__1::__deque_base.1461", %"class.std::__1::__deque_base.1461"* %0, i64 0, i32 2, i32 0, i32 0
  br label %28

15:                                               ; preds = %1
  %16 = load i32*, i32** %7, align 8
  %17 = and i64 %5, 1023
  %18 = getelementptr inbounds i32, i32* %16, i64 %17
  %19 = getelementptr inbounds %"class.std::__1::__deque_base.1461", %"class.std::__1::__deque_base.1461"* %0, i64 0, i32 2, i32 0, i32 0
  %20 = load i64, i64* %19, align 8
  %21 = add i64 %20, %5
  %22 = lshr i64 %21, 10
  %23 = getelementptr inbounds i32*, i32** %3, i64 %22
  %24 = load i32*, i32** %23, align 8
  %25 = and i64 %21, 1023
  %26 = getelementptr inbounds i32, i32* %24, i64 %25
  %27 = icmp eq i32* %26, %18
  br i1 %27, label %28, label %39

28:                                               ; preds = %52, %15, %13
  %29 = phi i64* [ %14, %13 ], [ %19, %15 ], [ %19, %52 ]
  store i64 0, i64* %29, align 8
  %30 = bitcast i32*** %8 to i64*
  %31 = sub i64 %11, %12
  %32 = ashr exact i64 %31, 3
  %33 = icmp ugt i64 %32, 2
  br i1 %33, label %34, label %89

34:                                               ; preds = %28
  %35 = getelementptr inbounds %"class.std::__1::__deque_base.1461", %"class.std::__1::__deque_base.1461"* %0, i64 0, i32 2, i32 1, i32 0, i32 1
  %36 = bitcast %"struct.v8::internal::RecyclingZoneAllocator<int>::FreeBlock"** %35 to i64*
  %37 = bitcast %"struct.v8::internal::RecyclingZoneAllocator<int>::FreeBlock"** %35 to i32**
  %38 = load %"struct.v8::internal::RecyclingZoneAllocator<int>::FreeBlock"*, %"struct.v8::internal::RecyclingZoneAllocator<int>::FreeBlock"** %35, align 8
  br label %57

39:                                               ; preds = %15, %52
  %40 = phi i32* [ %55, %52 ], [ %18, %15 ]
  %41 = phi i32** [ %53, %52 ], [ %7, %15 ]
  %42 = getelementptr inbounds i32, i32* %40, i64 1
  %43 = ptrtoint i32* %42 to i64
  %44 = bitcast i32** %41 to i64*
  %45 = load i64, i64* %44, align 8
  %46 = sub i64 %43, %45
  %47 = icmp eq i64 %46, 4096
  br i1 %47, label %48, label %52

48:                                               ; preds = %39
  %49 = getelementptr inbounds i32*, i32** %41, i64 1
  %50 = bitcast i32** %49 to i64*
  %51 = load i64, i64* %50, align 8
  br label %52

52:                                               ; preds = %48, %39
  %53 = phi i32** [ %49, %48 ], [ %41, %39 ]
  %54 = phi i64 [ %51, %48 ], [ %43, %39 ]
  %55 = inttoptr i64 %54 to i32*
  %56 = icmp eq i32* %26, %55
  br i1 %56, label %28, label %39

57:                                               ; preds = %78, %34
  %58 = phi i32** [ %9, %34 ], [ %79, %78 ]
  %59 = phi i32** [ %9, %34 ], [ %80, %78 ]
  %60 = phi i64 [ %11, %34 ], [ %81, %78 ]
  %61 = phi %"struct.v8::internal::RecyclingZoneAllocator<int>::FreeBlock"* [ %38, %34 ], [ %83, %78 ]
  %62 = phi i32** [ %3, %34 ], [ %84, %78 ]
  %63 = load i32*, i32** %62, align 8
  %64 = icmp eq %"struct.v8::internal::RecyclingZoneAllocator<int>::FreeBlock"* %61, null
  br i1 %64, label %69, label %65

65:                                               ; preds = %57
  %66 = getelementptr inbounds %"struct.v8::internal::RecyclingZoneAllocator<int>::FreeBlock", %"struct.v8::internal::RecyclingZoneAllocator<int>::FreeBlock"* %61, i64 0, i32 1
  %67 = load i64, i64* %66, align 8
  %68 = icmp ugt i64 %67, 1024
  br i1 %68, label %78, label %69

69:                                               ; preds = %65, %57
  %70 = getelementptr inbounds i32, i32* %63, i64 2
  %71 = bitcast i32* %70 to i64*
  store i64 1024, i64* %71, align 8
  %72 = load i64, i64* %36, align 8
  %73 = bitcast i32* %63 to i64*
  store i64 %72, i64* %73, align 8
  store i32* %63, i32** %37, align 8
  %74 = bitcast i32* %63 to %"struct.v8::internal::RecyclingZoneAllocator<int>::FreeBlock"*
  %75 = load i32**, i32*** %2, align 8
  %76 = load i64, i64* %30, align 8
  %77 = inttoptr i64 %76 to i32**
  br label %78

78:                                               ; preds = %69, %65
  %79 = phi i32** [ %58, %65 ], [ %77, %69 ]
  %80 = phi i32** [ %59, %65 ], [ %77, %69 ]
  %81 = phi i64 [ %60, %65 ], [ %76, %69 ]
  %82 = phi i32** [ %62, %65 ], [ %75, %69 ]
  %83 = phi %"struct.v8::internal::RecyclingZoneAllocator<int>::FreeBlock"* [ %61, %65 ], [ %74, %69 ]
  %84 = getelementptr inbounds i32*, i32** %82, i64 1
  store i32** %84, i32*** %2, align 8
  %85 = ptrtoint i32** %84 to i64
  %86 = sub i64 %81, %85
  %87 = ashr exact i64 %86, 3
  %88 = icmp ugt i64 %87, 2
  br i1 %88, label %57, label %89

89:                                               ; preds = %78, %28
  %90 = phi i32** [ %9, %28 ], [ %79, %78 ]
  %91 = phi i32** [ %9, %28 ], [ %80, %78 ]
  %92 = phi i32** [ %3, %28 ], [ %84, %78 ]
  %93 = phi i64 [ %32, %28 ], [ %87, %78 ]
  %94 = ptrtoint i32** %92 to i64
  switch i64 %93, label %98 [
    i64 1, label %96
    i64 2, label %95
  ]

95:                                               ; preds = %89
  br label %96

96:                                               ; preds = %89, %95
  %97 = phi i64 [ 1024, %95 ], [ 512, %89 ]
  store i64 %97, i64* %4, align 8
  br label %98

98:                                               ; preds = %96, %89
  %99 = icmp eq i32** %92, %91
  br i1 %99, label %153, label %100

100:                                              ; preds = %98
  %101 = getelementptr inbounds %"class.std::__1::__deque_base.1461", %"class.std::__1::__deque_base.1461"* %0, i64 0, i32 2, i32 1, i32 0, i32 1
  %102 = bitcast %"struct.v8::internal::RecyclingZoneAllocator<int>::FreeBlock"** %101 to i64*
  %103 = bitcast %"struct.v8::internal::RecyclingZoneAllocator<int>::FreeBlock"** %101 to i32**
  %104 = load %"struct.v8::internal::RecyclingZoneAllocator<int>::FreeBlock"*, %"struct.v8::internal::RecyclingZoneAllocator<int>::FreeBlock"** %101, align 8
  %105 = getelementptr i32*, i32** %91, i64 -1
  %106 = ptrtoint i32** %105 to i64
  %107 = sub i64 %106, %94
  %108 = and i64 %107, 8
  %109 = icmp eq i64 %108, 0
  br i1 %109, label %110, label %126

110:                                              ; preds = %100
  %111 = load i32*, i32** %92, align 8
  %112 = icmp eq %"struct.v8::internal::RecyclingZoneAllocator<int>::FreeBlock"* %104, null
  br i1 %112, label %117, label %113

113:                                              ; preds = %110
  %114 = getelementptr inbounds %"struct.v8::internal::RecyclingZoneAllocator<int>::FreeBlock", %"struct.v8::internal::RecyclingZoneAllocator<int>::FreeBlock"* %104, i64 0, i32 1
  %115 = load i64, i64* %114, align 8
  %116 = icmp ugt i64 %115, 1024
  br i1 %116, label %123, label %117

117:                                              ; preds = %113, %110
  %118 = getelementptr inbounds i32, i32* %111, i64 2
  %119 = bitcast i32* %118 to i64*
  store i64 1024, i64* %119, align 8
  %120 = load i64, i64* %102, align 8
  %121 = bitcast i32* %111 to i64*
  store i64 %120, i64* %121, align 8
  store i32* %111, i32** %103, align 8
  %122 = bitcast i32* %111 to %"struct.v8::internal::RecyclingZoneAllocator<int>::FreeBlock"*
  br label %123

123:                                              ; preds = %117, %113
  %124 = phi %"struct.v8::internal::RecyclingZoneAllocator<int>::FreeBlock"* [ %104, %113 ], [ %122, %117 ]
  %125 = getelementptr inbounds i32*, i32** %92, i64 1
  br label %126

126:                                              ; preds = %123, %100
  %127 = phi %"struct.v8::internal::RecyclingZoneAllocator<int>::FreeBlock"* [ %104, %100 ], [ %124, %123 ]
  %128 = phi i32** [ %92, %100 ], [ %125, %123 ]
  %129 = icmp ult i64 %107, 8
  br i1 %129, label %150, label %130

130:                                              ; preds = %126, %203
  %131 = phi %"struct.v8::internal::RecyclingZoneAllocator<int>::FreeBlock"* [ %204, %203 ], [ %127, %126 ]
  %132 = phi i32** [ %205, %203 ], [ %128, %126 ]
  %133 = load i32*, i32** %132, align 8
  %134 = icmp eq %"struct.v8::internal::RecyclingZoneAllocator<int>::FreeBlock"* %131, null
  br i1 %134, label %139, label %135

135:                                              ; preds = %130
  %136 = getelementptr inbounds %"struct.v8::internal::RecyclingZoneAllocator<int>::FreeBlock", %"struct.v8::internal::RecyclingZoneAllocator<int>::FreeBlock"* %131, i64 0, i32 1
  %137 = load i64, i64* %136, align 8
  %138 = icmp ugt i64 %137, 1024
  br i1 %138, label %145, label %139

139:                                              ; preds = %135, %130
  %140 = getelementptr inbounds i32, i32* %133, i64 2
  %141 = bitcast i32* %140 to i64*
  store i64 1024, i64* %141, align 8
  %142 = load i64, i64* %102, align 8
  %143 = bitcast i32* %133 to i64*
  store i64 %142, i64* %143, align 8
  store i32* %133, i32** %103, align 8
  %144 = bitcast i32* %133 to %"struct.v8::internal::RecyclingZoneAllocator<int>::FreeBlock"*
  br label %145

145:                                              ; preds = %135, %139
  %146 = phi %"struct.v8::internal::RecyclingZoneAllocator<int>::FreeBlock"* [ %131, %135 ], [ %144, %139 ]
  %147 = getelementptr inbounds i32*, i32** %132, i64 1
  %148 = load i32*, i32** %147, align 8
  %149 = icmp eq %"struct.v8::internal::RecyclingZoneAllocator<int>::FreeBlock"* %146, null
  br i1 %149, label %197, label %193

150:                                              ; preds = %203, %126
  %151 = load i32**, i32*** %2, align 8
  %152 = load i32**, i32*** %8, align 8
  br label %153

153:                                              ; preds = %150, %98
  %154 = phi i32** [ %152, %150 ], [ %90, %98 ]
  %155 = phi i32** [ %151, %150 ], [ %91, %98 ]
  %156 = icmp eq i32** %154, %155
  br i1 %156, label %165, label %157

157:                                              ; preds = %153
  %158 = ptrtoint i32** %155 to i64
  %159 = getelementptr i32*, i32** %154, i64 -1
  %160 = ptrtoint i32** %159 to i64
  %161 = sub i64 %160, %158
  %162 = lshr i64 %161, 3
  %163 = xor i64 %162, -1
  %164 = getelementptr i32*, i32** %154, i64 %163
  store i32** %164, i32*** %8, align 8
  br label %165

165:                                              ; preds = %157, %153
  %166 = getelementptr inbounds %"class.std::__1::__deque_base.1461", %"class.std::__1::__deque_base.1461"* %0, i64 0, i32 0, i32 0
  %167 = load i32**, i32*** %166, align 8
  %168 = icmp eq i32** %167, null
  br i1 %168, label %192, label %169

169:                                              ; preds = %165
  %170 = ptrtoint i32** %167 to i64
  %171 = getelementptr inbounds %"class.std::__1::__deque_base.1461", %"class.std::__1::__deque_base.1461"* %0, i64 0, i32 0, i32 3, i32 0, i32 0
  %172 = bitcast i32*** %171 to i64*
  %173 = load i64, i64* %172, align 8
  %174 = sub i64 %173, %170
  %175 = ashr exact i64 %174, 3
  %176 = icmp ult i64 %174, 16
  br i1 %176, label %192, label %177

177:                                              ; preds = %169
  %178 = getelementptr inbounds %"class.std::__1::__deque_base.1461", %"class.std::__1::__deque_base.1461"* %0, i64 0, i32 0, i32 3, i32 1, i32 0, i32 1
  %179 = load %"struct.v8::internal::RecyclingZoneAllocator<int *>::FreeBlock"*, %"struct.v8::internal::RecyclingZoneAllocator<int *>::FreeBlock"** %178, align 8
  %180 = icmp eq %"struct.v8::internal::RecyclingZoneAllocator<int *>::FreeBlock"* %179, null
  br i1 %180, label %185, label %181

181:                                              ; preds = %177
  %182 = getelementptr inbounds %"struct.v8::internal::RecyclingZoneAllocator<int *>::FreeBlock", %"struct.v8::internal::RecyclingZoneAllocator<int *>::FreeBlock"* %179, i64 0, i32 1
  %183 = load i64, i64* %182, align 8
  %184 = icmp ugt i64 %183, %175
  br i1 %184, label %192, label %185

185:                                              ; preds = %181, %177
  %186 = getelementptr inbounds i32*, i32** %167, i64 1
  %187 = bitcast i32** %186 to i64*
  store i64 %175, i64* %187, align 8
  %188 = bitcast %"struct.v8::internal::RecyclingZoneAllocator<int *>::FreeBlock"** %178 to i64*
  %189 = load i64, i64* %188, align 8
  %190 = bitcast i32** %167 to i64*
  store i64 %189, i64* %190, align 8
  %191 = bitcast %"struct.v8::internal::RecyclingZoneAllocator<int *>::FreeBlock"** %178 to i32***
  store i32** %167, i32*** %191, align 8
  br label %192

192:                                              ; preds = %165, %169, %181, %185
  ret void

193:                                              ; preds = %145
  %194 = getelementptr inbounds %"struct.v8::internal::RecyclingZoneAllocator<int>::FreeBlock", %"struct.v8::internal::RecyclingZoneAllocator<int>::FreeBlock"* %146, i64 0, i32 1
  %195 = load i64, i64* %194, align 8
  %196 = icmp ugt i64 %195, 1024
  br i1 %196, label %203, label %197

197:                                              ; preds = %193, %145
  %198 = getelementptr inbounds i32, i32* %148, i64 2
  %199 = bitcast i32* %198 to i64*
  store i64 1024, i64* %199, align 8
  %200 = load i64, i64* %102, align 8
  %201 = bitcast i32* %148 to i64*
  store i64 %200, i64* %201, align 8
  store i32* %148, i32** %103, align 8
  %202 = bitcast i32* %148 to %"struct.v8::internal::RecyclingZoneAllocator<int>::FreeBlock"*
  br label %203

203:                                              ; preds = %197, %193
  %204 = phi %"struct.v8::internal::RecyclingZoneAllocator<int>::FreeBlock"* [ %146, %193 ], [ %202, %197 ]
  %205 = getelementptr inbounds i32*, i32** %132, i64 2
  %206 = icmp eq i32** %205, %91
  br i1 %206, label %150, label %130
}

; Function Attrs: nounwind ssp uwtable
define linkonce_odr hidden dereferenceable(160) %"class.std::__1::basic_ostream"* @_ZNSt3__124__put_character_sequenceIcNS_11char_traitsIcEEEERNS_13basic_ostreamIT_T0_EES7_PKS4_m(%"class.std::__1::basic_ostream"* dereferenceable(160), i8*, i64) local_unnamed_addr #0 comdat {
  %4 = alloca %"class.std::__1::locale", align 8
  %5 = alloca %"class.std::__1::basic_ostream<char, std::__1::char_traits<char> >::sentry", align 8
  %6 = getelementptr inbounds %"class.std::__1::basic_ostream<char, std::__1::char_traits<char> >::sentry", %"class.std::__1::basic_ostream<char, std::__1::char_traits<char> >::sentry"* %5, i64 0, i32 0
  call void @llvm.lifetime.start.p0i8(i64 16, i8* nonnull %6) #16
  call void @_ZNSt3__113basic_ostreamIcNS_11char_traitsIcEEE6sentryC1ERS3_(%"class.std::__1::basic_ostream<char, std::__1::char_traits<char> >::sentry"* nonnull %5, %"class.std::__1::basic_ostream"* dereferenceable(160) %0) #16
  %7 = load i8, i8* %6, align 8, !range !3
  %8 = icmp eq i8 %7, 0
  br i1 %8, label %58, label %9

9:                                                ; preds = %3
  %10 = bitcast %"class.std::__1::basic_ostream"* %0 to i8**
  %11 = load i8*, i8** %10, align 8
  %12 = getelementptr i8, i8* %11, i64 -24
  %13 = bitcast i8* %12 to i64*
  %14 = load i64, i64* %13, align 8
  %15 = bitcast %"class.std::__1::basic_ostream"* %0 to i8*
  %16 = getelementptr inbounds i8, i8* %15, i64 %14
  %17 = getelementptr inbounds i8, i8* %16, i64 40
  %18 = bitcast i8* %17 to %"class.std::__1::basic_streambuf"**
  %19 = load %"class.std::__1::basic_streambuf"*, %"class.std::__1::basic_streambuf"** %18, align 8
  %20 = bitcast i8* %16 to %"class.std::__1::ios_base"*
  %21 = getelementptr inbounds i8, i8* %16, i64 8
  %22 = bitcast i8* %21 to i32*
  %23 = load i32, i32* %22, align 8
  %24 = and i32 %23, 176
  %25 = icmp eq i32 %24, 32
  %26 = getelementptr inbounds i8, i8* %1, i64 %2
  %27 = select i1 %25, i8* %26, i8* %1
  %28 = getelementptr inbounds i8, i8* %16, i64 144
  %29 = bitcast i8* %28 to i32*
  %30 = load i32, i32* %29, align 8
  %31 = icmp eq i32 %30, -1
  br i1 %31, label %32, label %42

32:                                               ; preds = %9
  %33 = bitcast %"class.std::__1::locale"* %4 to i8*
  call void @llvm.lifetime.start.p0i8(i64 8, i8* nonnull %33) #16
  call void @_ZNKSt3__18ios_base6getlocEv(%"class.std::__1::locale"* nonnull sret %4, %"class.std::__1::ios_base"* %20) #16
  %34 = call %"class.std::__1::locale::facet"* @_ZNKSt3__16locale9use_facetERNS0_2idE(%"class.std::__1::locale"* nonnull %4, %"class.std::__1::locale::id"* nonnull dereferenceable(16) @_ZNSt3__15ctypeIcE2idE) #16
  %35 = bitcast %"class.std::__1::locale::facet"* %34 to %"class.std::__1::ctype"*
  %36 = bitcast %"class.std::__1::locale::facet"* %34 to i8 (%"class.std::__1::ctype"*, i8)***
  %37 = load i8 (%"class.std::__1::ctype"*, i8)**, i8 (%"class.std::__1::ctype"*, i8)*** %36, align 8
  %38 = getelementptr inbounds i8 (%"class.std::__1::ctype"*, i8)*, i8 (%"class.std::__1::ctype"*, i8)** %37, i64 7
  %39 = load i8 (%"class.std::__1::ctype"*, i8)*, i8 (%"class.std::__1::ctype"*, i8)** %38, align 8
  %40 = call signext i8 %39(%"class.std::__1::ctype"* %35, i8 signext 32) #16
  call void @_ZNSt3__16localeD1Ev(%"class.std::__1::locale"* nonnull %4) #16
  call void @llvm.lifetime.end.p0i8(i64 8, i8* nonnull %33) #16
  %41 = sext i8 %40 to i32
  store i32 %41, i32* %29, align 8
  br label %42

42:                                               ; preds = %9, %32
  %43 = phi i32 [ %41, %32 ], [ %30, %9 ]
  %44 = trunc i32 %43 to i8
  %45 = call %"class.std::__1::basic_streambuf"* @_ZNSt3__116__pad_and_outputIcNS_11char_traitsIcEEEENS_19ostreambuf_iteratorIT_T0_EES6_PKS4_S8_S8_RNS_8ios_baseES4_(%"class.std::__1::basic_streambuf"* %19, i8* %1, i8* %27, i8* %26, %"class.std::__1::ios_base"* dereferenceable(136) %20, i8 signext %44)
  %46 = icmp eq %"class.std::__1::basic_streambuf"* %45, null
  br i1 %46, label %47, label %58

47:                                               ; preds = %42
  %48 = load i8*, i8** %10, align 8
  %49 = getelementptr i8, i8* %48, i64 -24
  %50 = bitcast i8* %49 to i64*
  %51 = load i64, i64* %50, align 8
  %52 = getelementptr inbounds i8, i8* %15, i64 %51
  %53 = bitcast i8* %52 to %"class.std::__1::ios_base"*
  %54 = getelementptr inbounds i8, i8* %52, i64 32
  %55 = bitcast i8* %54 to i32*
  %56 = load i32, i32* %55, align 8
  %57 = or i32 %56, 5
  call void @_ZNSt3__18ios_base5clearEj(%"class.std::__1::ios_base"* %53, i32 %57) #16
  br label %58

58:                                               ; preds = %3, %42, %47
  call void @_ZNSt3__113basic_ostreamIcNS_11char_traitsIcEEE6sentryD1Ev(%"class.std::__1::basic_ostream<char, std::__1::char_traits<char> >::sentry"* nonnull %5) #16
  call void @llvm.lifetime.end.p0i8(i64 16, i8* nonnull %6) #16
  ret %"class.std::__1::basic_ostream"* %0
}

declare void @_ZNSt3__113basic_ostreamIcNS_11char_traitsIcEEE6sentryC1ERS3_(%"class.std::__1::basic_ostream<char, std::__1::char_traits<char> >::sentry"*, %"class.std::__1::basic_ostream"* dereferenceable(160)) unnamed_addr #6

; Function Attrs: nounwind ssp uwtable
define linkonce_odr hidden %"class.std::__1::basic_streambuf"* @_ZNSt3__116__pad_and_outputIcNS_11char_traitsIcEEEENS_19ostreambuf_iteratorIT_T0_EES6_PKS4_S8_S8_RNS_8ios_baseES4_(%"class.std::__1::basic_streambuf"*, i8*, i8*, i8*, %"class.std::__1::ios_base"* dereferenceable(136), i8 signext) local_unnamed_addr #0 comdat {
  %7 = alloca %"class.std::__1::basic_string", align 8
  %8 = icmp eq %"class.std::__1::basic_streambuf"* %0, null
  br i1 %8, label %78, label %9

9:                                                ; preds = %6
  %10 = ptrtoint i8* %3 to i64
  %11 = ptrtoint i8* %1 to i64
  %12 = sub i64 %10, %11
  %13 = getelementptr inbounds %"class.std::__1::ios_base", %"class.std::__1::ios_base"* %4, i64 0, i32 3
  %14 = load i64, i64* %13, align 8
  %15 = icmp sgt i64 %14, %12
  %16 = sub nsw i64 %14, %12
  %17 = select i1 %15, i64 %16, i64 0
  %18 = ptrtoint i8* %2 to i64
  %19 = sub i64 %18, %11
  %20 = icmp sgt i64 %19, 0
  br i1 %20, label %21, label %28

21:                                               ; preds = %9
  %22 = bitcast %"class.std::__1::basic_streambuf"* %0 to i64 (%"class.std::__1::basic_streambuf"*, i8*, i64)***
  %23 = load i64 (%"class.std::__1::basic_streambuf"*, i8*, i64)**, i64 (%"class.std::__1::basic_streambuf"*, i8*, i64)*** %22, align 8
  %24 = getelementptr inbounds i64 (%"class.std::__1::basic_streambuf"*, i8*, i64)*, i64 (%"class.std::__1::basic_streambuf"*, i8*, i64)** %23, i64 12
  %25 = load i64 (%"class.std::__1::basic_streambuf"*, i8*, i64)*, i64 (%"class.std::__1::basic_streambuf"*, i8*, i64)** %24, align 8
  %26 = tail call i64 %25(%"class.std::__1::basic_streambuf"* nonnull %0, i8* %1, i64 %19) #16
  %27 = icmp eq i64 %26, %19
  br i1 %27, label %28, label %78

28:                                               ; preds = %21, %9
  %29 = icmp sgt i64 %17, 0
  br i1 %29, label %30, label %67

30:                                               ; preds = %28
  %31 = bitcast %"class.std::__1::basic_string"* %7 to i8*
  call void @llvm.lifetime.start.p0i8(i64 24, i8* nonnull %31) #16
  %32 = icmp ult i64 %17, 23
  br i1 %32, label %42, label %33

33:                                               ; preds = %30
  %34 = add nuw i64 %17, 16
  %35 = and i64 %34, -16
  %36 = tail call i8* @_Znwm(i64 %35) #18
  %37 = getelementptr inbounds %"class.std::__1::basic_string", %"class.std::__1::basic_string"* %7, i64 0, i32 0, i32 0, i32 0, i32 0, i32 0, i32 0
  store i8* %36, i8** %37, align 8
  %38 = or i64 %35, -9223372036854775808
  %39 = getelementptr inbounds %"class.std::__1::basic_string", %"class.std::__1::basic_string"* %7, i64 0, i32 0, i32 0, i32 0, i32 0, i32 0, i32 2
  store i64 %38, i64* %39, align 8
  %40 = getelementptr inbounds %"class.std::__1::basic_string", %"class.std::__1::basic_string"* %7, i64 0, i32 0, i32 0, i32 0, i32 0, i32 0, i32 1
  store i64 %17, i64* %40, align 8
  %41 = bitcast %"class.std::__1::basic_string"* %7 to %"struct.std::__1::basic_string<char, std::__1::char_traits<char>, std::__1::allocator<char> >::__short"*
  br label %46

42:                                               ; preds = %30
  %43 = trunc i64 %17 to i8
  %44 = bitcast %"class.std::__1::basic_string"* %7 to %"struct.std::__1::basic_string<char, std::__1::char_traits<char>, std::__1::allocator<char> >::__short"*
  %45 = getelementptr inbounds %"struct.std::__1::basic_string<char, std::__1::char_traits<char>, std::__1::allocator<char> >::__short", %"struct.std::__1::basic_string<char, std::__1::char_traits<char>, std::__1::allocator<char> >::__short"* %44, i64 0, i32 1, i32 0
  store i8 %43, i8* %45, align 1
  br label %46

46:                                               ; preds = %33, %42
  %47 = phi %"struct.std::__1::basic_string<char, std::__1::char_traits<char>, std::__1::allocator<char> >::__short"* [ %41, %33 ], [ %44, %42 ]
  %48 = phi i8* [ %36, %33 ], [ %31, %42 ]
  call void @llvm.memset.p0i8.i64(i8* nonnull align 1 %48, i8 %5, i64 %17, i1 false) #16
  %49 = getelementptr inbounds i8, i8* %48, i64 %17
  store i8 0, i8* %49, align 1
  %50 = getelementptr inbounds %"struct.std::__1::basic_string<char, std::__1::char_traits<char>, std::__1::allocator<char> >::__short", %"struct.std::__1::basic_string<char, std::__1::char_traits<char>, std::__1::allocator<char> >::__short"* %47, i64 0, i32 1, i32 0
  %51 = load i8, i8* %50, align 1
  %52 = icmp slt i8 %51, 0
  %53 = getelementptr inbounds %"class.std::__1::basic_string", %"class.std::__1::basic_string"* %7, i64 0, i32 0, i32 0, i32 0, i32 0, i32 0, i32 0
  %54 = load i8*, i8** %53, align 8
  %55 = select i1 %52, i8* %54, i8* %31
  %56 = bitcast %"class.std::__1::basic_streambuf"* %0 to i64 (%"class.std::__1::basic_streambuf"*, i8*, i64)***
  %57 = load i64 (%"class.std::__1::basic_streambuf"*, i8*, i64)**, i64 (%"class.std::__1::basic_streambuf"*, i8*, i64)*** %56, align 8
  %58 = getelementptr inbounds i64 (%"class.std::__1::basic_streambuf"*, i8*, i64)*, i64 (%"class.std::__1::basic_streambuf"*, i8*, i64)** %57, i64 12
  %59 = load i64 (%"class.std::__1::basic_streambuf"*, i8*, i64)*, i64 (%"class.std::__1::basic_streambuf"*, i8*, i64)** %58, align 8
  %60 = call i64 %59(%"class.std::__1::basic_streambuf"* nonnull %0, i8* %55, i64 %17) #16
  %61 = icmp eq i64 %60, %17
  %62 = load i8, i8* %50, align 1
  %63 = icmp slt i8 %62, 0
  br i1 %63, label %64, label %66

64:                                               ; preds = %46
  %65 = load i8*, i8** %53, align 8
  call void @_ZdlPv(i8* %65) #18
  br label %66

66:                                               ; preds = %46, %64
  call void @llvm.lifetime.end.p0i8(i64 24, i8* nonnull %31) #16
  br i1 %61, label %67, label %78

67:                                               ; preds = %66, %28
  %68 = sub i64 %10, %18
  %69 = icmp sgt i64 %68, 0
  br i1 %69, label %70, label %77

70:                                               ; preds = %67
  %71 = bitcast %"class.std::__1::basic_streambuf"* %0 to i64 (%"class.std::__1::basic_streambuf"*, i8*, i64)***
  %72 = load i64 (%"class.std::__1::basic_streambuf"*, i8*, i64)**, i64 (%"class.std::__1::basic_streambuf"*, i8*, i64)*** %71, align 8
  %73 = getelementptr inbounds i64 (%"class.std::__1::basic_streambuf"*, i8*, i64)*, i64 (%"class.std::__1::basic_streambuf"*, i8*, i64)** %72, i64 12
  %74 = load i64 (%"class.std::__1::basic_streambuf"*, i8*, i64)*, i64 (%"class.std::__1::basic_streambuf"*, i8*, i64)** %73, align 8
  %75 = call i64 %74(%"class.std::__1::basic_streambuf"* nonnull %0, i8* %2, i64 %68) #16
  %76 = icmp eq i64 %75, %68
  br i1 %76, label %77, label %78

77:                                               ; preds = %70, %67
  store i64 0, i64* %13, align 8
  br label %78

78:                                               ; preds = %77, %66, %21, %70, %6
  %79 = phi %"class.std::__1::basic_streambuf"* [ null, %6 ], [ %0, %77 ], [ null, %66 ], [ null, %21 ], [ null, %70 ]
  ret %"class.std::__1::basic_streambuf"* %79
}

; Function Attrs: nounwind
declare void @_ZNSt3__113basic_ostreamIcNS_11char_traitsIcEEE6sentryD1Ev(%"class.std::__1::basic_ostream<char, std::__1::char_traits<char> >::sentry"*) unnamed_addr #10

; Function Attrs: nobuiltin nofree
declare noalias nonnull i8* @_Znwm(i64) local_unnamed_addr #13

declare void @_ZNKSt3__18ios_base6getlocEv(%"class.std::__1::locale"* sret, %"class.std::__1::ios_base"*) local_unnamed_addr #6

; Function Attrs: nounwind
declare void @_ZNSt3__16localeD1Ev(%"class.std::__1::locale"*) unnamed_addr #10

declare %"class.std::__1::locale::facet"* @_ZNKSt3__16locale9use_facetERNS0_2idE(%"class.std::__1::locale"*, %"class.std::__1::locale::id"* dereferenceable(16)) local_unnamed_addr #6

declare void @_ZNSt3__18ios_base5clearEj(%"class.std::__1::ios_base"*, i32) local_unnamed_addr #6

; Function Attrs: argmemonly nofree nounwind readonly
declare i64 @strlen(i8* nocapture) local_unnamed_addr #14

declare dereferenceable(160) %"class.std::__1::basic_ostream"* @_ZNSt3__113basic_ostreamIcNS_11char_traitsIcEEE3putEc(%"class.std::__1::basic_ostream"*, i8 signext) local_unnamed_addr #6

declare dereferenceable(160) %"class.std::__1::basic_ostream"* @_ZNSt3__113basic_ostreamIcNS_11char_traitsIcEEE5flushEv(%"class.std::__1::basic_ostream"*) local_unnamed_addr #6

; Function Attrs: nounwind ssp uwtable
define linkonce_odr hidden void @_ZNSt3__16vectorIPN2v88internal8compiler17TopLevelLiveRangeENS2_13ZoneAllocatorIS5_EEE8__appendEmRKS5_(%"class.std::__1::vector"*, i64, %"class.v8::internal::compiler::TopLevelLiveRange"** dereferenceable(8)) local_unnamed_addr #0 comdat align 2 {
  %4 = bitcast %"class.v8::internal::compiler::TopLevelLiveRange"** %2 to i8*
  %5 = getelementptr inbounds %"class.std::__1::vector", %"class.std::__1::vector"* %0, i64 0, i32 0, i32 2, i32 0, i32 0
  %6 = bitcast %"class.v8::internal::compiler::TopLevelLiveRange"*** %5 to i64*
  %7 = load i64, i64* %6, align 8
  %8 = getelementptr inbounds %"class.std::__1::vector", %"class.std::__1::vector"* %0, i64 0, i32 0, i32 1
  %9 = bitcast %"class.v8::internal::compiler::TopLevelLiveRange"*** %8 to i64*
  %10 = load i64, i64* %9, align 8
  %11 = sub i64 %7, %10
  %12 = ashr exact i64 %11, 3
  %13 = icmp ult i64 %12, %1
  br i1 %13, label %139, label %14

14:                                               ; preds = %3
  %15 = inttoptr i64 %10 to %"class.v8::internal::compiler::TopLevelLiveRange"**
  %16 = inttoptr i64 %10 to i8*
  %17 = getelementptr inbounds %"class.v8::internal::compiler::TopLevelLiveRange"*, %"class.v8::internal::compiler::TopLevelLiveRange"** %15, i64 %1
  %18 = icmp eq i64 %1, 0
  br i1 %18, label %137, label %19

19:                                               ; preds = %14
  %20 = bitcast %"class.v8::internal::compiler::TopLevelLiveRange"** %2 to i64*
  %21 = shl nsw i64 %1, 3
  %22 = add i64 %21, -8
  %23 = lshr exact i64 %22, 3
  %24 = add nuw nsw i64 %23, 1
  %25 = icmp ult i64 %24, 4
  br i1 %25, label %26, label %48

26:                                               ; preds = %106, %48, %19
  %27 = phi %"class.v8::internal::compiler::TopLevelLiveRange"** [ %15, %48 ], [ %15, %19 ], [ %60, %106 ]
  %28 = ptrtoint %"class.v8::internal::compiler::TopLevelLiveRange"** %27 to i64
  %29 = add i64 %1, -1
  %30 = getelementptr %"class.v8::internal::compiler::TopLevelLiveRange"*, %"class.v8::internal::compiler::TopLevelLiveRange"** %15, i64 %29
  %31 = ptrtoint %"class.v8::internal::compiler::TopLevelLiveRange"** %30 to i64
  %32 = sub i64 %31, %28
  %33 = lshr i64 %32, 3
  %34 = add nuw nsw i64 %33, 1
  %35 = and i64 %34, 7
  %36 = icmp eq i64 %35, 0
  br i1 %36, label %45, label %37

37:                                               ; preds = %26, %37
  %38 = phi %"class.v8::internal::compiler::TopLevelLiveRange"** [ %42, %37 ], [ %27, %26 ]
  %39 = phi i64 [ %43, %37 ], [ %35, %26 ]
  %40 = load i64, i64* %20, align 8
  %41 = bitcast %"class.v8::internal::compiler::TopLevelLiveRange"** %38 to i64*
  store i64 %40, i64* %41, align 8
  %42 = getelementptr inbounds %"class.v8::internal::compiler::TopLevelLiveRange"*, %"class.v8::internal::compiler::TopLevelLiveRange"** %38, i64 1
  %43 = add i64 %39, -1
  %44 = icmp eq i64 %43, 0
  br i1 %44, label %45, label %37, !llvm.loop !238

45:                                               ; preds = %37, %26
  %46 = phi %"class.v8::internal::compiler::TopLevelLiveRange"** [ %27, %26 ], [ %42, %37 ]
  %47 = icmp ult i64 %32, 56
  br i1 %47, label %108, label %110

48:                                               ; preds = %19
  %49 = shl nsw i64 %1, 3
  %50 = add i64 %49, -8
  %51 = lshr exact i64 %50, 3
  %52 = add nuw nsw i64 %51, 1
  %53 = getelementptr %"class.v8::internal::compiler::TopLevelLiveRange"*, %"class.v8::internal::compiler::TopLevelLiveRange"** %15, i64 %52
  %54 = getelementptr i8, i8* %4, i64 1
  %55 = icmp ugt i8* %54, %16
  %56 = icmp ugt %"class.v8::internal::compiler::TopLevelLiveRange"** %53, %2
  %57 = and i1 %55, %56
  br i1 %57, label %26, label %58

58:                                               ; preds = %48
  %59 = and i64 %24, 4611686018427387900
  %60 = getelementptr %"class.v8::internal::compiler::TopLevelLiveRange"*, %"class.v8::internal::compiler::TopLevelLiveRange"** %15, i64 %59
  %61 = add nsw i64 %59, -4
  %62 = lshr exact i64 %61, 2
  %63 = add nuw nsw i64 %62, 1
  %64 = and i64 %63, 1
  %65 = icmp eq i64 %61, 0
  br i1 %65, label %93, label %66

66:                                               ; preds = %58
  %67 = sub nuw nsw i64 %63, %64
  %68 = load i64, i64* %20, align 8, !alias.scope !239
  %69 = insertelement <2 x i64> undef, i64 %68, i32 0
  %70 = shufflevector <2 x i64> %69, <2 x i64> undef, <2 x i32> zeroinitializer
  %71 = insertelement <2 x i64> undef, i64 %68, i32 0
  %72 = shufflevector <2 x i64> %71, <2 x i64> undef, <2 x i32> zeroinitializer
  %73 = load i64, i64* %20, align 8, !alias.scope !239
  %74 = insertelement <2 x i64> undef, i64 %73, i32 0
  %75 = shufflevector <2 x i64> %74, <2 x i64> undef, <2 x i32> zeroinitializer
  %76 = insertelement <2 x i64> undef, i64 %73, i32 0
  %77 = shufflevector <2 x i64> %76, <2 x i64> undef, <2 x i32> zeroinitializer
  br label %78

78:                                               ; preds = %78, %66
  %79 = phi i64 [ 0, %66 ], [ %90, %78 ]
  %80 = phi i64 [ %67, %66 ], [ %91, %78 ]
  %81 = getelementptr %"class.v8::internal::compiler::TopLevelLiveRange"*, %"class.v8::internal::compiler::TopLevelLiveRange"** %15, i64 %79
  %82 = bitcast %"class.v8::internal::compiler::TopLevelLiveRange"** %81 to <2 x i64>*
  store <2 x i64> %70, <2 x i64>* %82, align 8, !alias.scope !242, !noalias !239
  %83 = getelementptr %"class.v8::internal::compiler::TopLevelLiveRange"*, %"class.v8::internal::compiler::TopLevelLiveRange"** %81, i64 2
  %84 = bitcast %"class.v8::internal::compiler::TopLevelLiveRange"** %83 to <2 x i64>*
  store <2 x i64> %72, <2 x i64>* %84, align 8, !alias.scope !242, !noalias !239
  %85 = or i64 %79, 4
  %86 = getelementptr %"class.v8::internal::compiler::TopLevelLiveRange"*, %"class.v8::internal::compiler::TopLevelLiveRange"** %15, i64 %85
  %87 = bitcast %"class.v8::internal::compiler::TopLevelLiveRange"** %86 to <2 x i64>*
  store <2 x i64> %75, <2 x i64>* %87, align 8, !alias.scope !242, !noalias !239
  %88 = getelementptr %"class.v8::internal::compiler::TopLevelLiveRange"*, %"class.v8::internal::compiler::TopLevelLiveRange"** %86, i64 2
  %89 = bitcast %"class.v8::internal::compiler::TopLevelLiveRange"** %88 to <2 x i64>*
  store <2 x i64> %77, <2 x i64>* %89, align 8, !alias.scope !242, !noalias !239
  %90 = add i64 %79, 8
  %91 = add i64 %80, -2
  %92 = icmp eq i64 %91, 0
  br i1 %92, label %93, label %78, !llvm.loop !244

93:                                               ; preds = %78, %58
  %94 = phi i64 [ 0, %58 ], [ %90, %78 ]
  %95 = icmp eq i64 %64, 0
  br i1 %95, label %106, label %96

96:                                               ; preds = %93
  %97 = getelementptr %"class.v8::internal::compiler::TopLevelLiveRange"*, %"class.v8::internal::compiler::TopLevelLiveRange"** %15, i64 %94
  %98 = load i64, i64* %20, align 8, !alias.scope !239
  %99 = insertelement <2 x i64> undef, i64 %98, i32 0
  %100 = shufflevector <2 x i64> %99, <2 x i64> undef, <2 x i32> zeroinitializer
  %101 = insertelement <2 x i64> undef, i64 %98, i32 0
  %102 = shufflevector <2 x i64> %101, <2 x i64> undef, <2 x i32> zeroinitializer
  %103 = bitcast %"class.v8::internal::compiler::TopLevelLiveRange"** %97 to <2 x i64>*
  store <2 x i64> %100, <2 x i64>* %103, align 8, !alias.scope !242, !noalias !239
  %104 = getelementptr %"class.v8::internal::compiler::TopLevelLiveRange"*, %"class.v8::internal::compiler::TopLevelLiveRange"** %97, i64 2
  %105 = bitcast %"class.v8::internal::compiler::TopLevelLiveRange"** %104 to <2 x i64>*
  store <2 x i64> %102, <2 x i64>* %105, align 8, !alias.scope !242, !noalias !239
  br label %106

106:                                              ; preds = %93, %96
  %107 = icmp eq i64 %24, %59
  br i1 %107, label %108, label %26

108:                                              ; preds = %45, %110, %106
  %109 = ptrtoint %"class.v8::internal::compiler::TopLevelLiveRange"** %17 to i64
  br label %137

110:                                              ; preds = %45, %110
  %111 = phi %"class.v8::internal::compiler::TopLevelLiveRange"** [ %135, %110 ], [ %46, %45 ]
  %112 = load i64, i64* %20, align 8
  %113 = bitcast %"class.v8::internal::compiler::TopLevelLiveRange"** %111 to i64*
  store i64 %112, i64* %113, align 8
  %114 = getelementptr inbounds %"class.v8::internal::compiler::TopLevelLiveRange"*, %"class.v8::internal::compiler::TopLevelLiveRange"** %111, i64 1
  %115 = load i64, i64* %20, align 8
  %116 = bitcast %"class.v8::internal::compiler::TopLevelLiveRange"** %114 to i64*
  store i64 %115, i64* %116, align 8
  %117 = getelementptr inbounds %"class.v8::internal::compiler::TopLevelLiveRange"*, %"class.v8::internal::compiler::TopLevelLiveRange"** %111, i64 2
  %118 = load i64, i64* %20, align 8
  %119 = bitcast %"class.v8::internal::compiler::TopLevelLiveRange"** %117 to i64*
  store i64 %118, i64* %119, align 8
  %120 = getelementptr inbounds %"class.v8::internal::compiler::TopLevelLiveRange"*, %"class.v8::internal::compiler::TopLevelLiveRange"** %111, i64 3
  %121 = load i64, i64* %20, align 8
  %122 = bitcast %"class.v8::internal::compiler::TopLevelLiveRange"** %120 to i64*
  store i64 %121, i64* %122, align 8
  %123 = getelementptr inbounds %"class.v8::internal::compiler::TopLevelLiveRange"*, %"class.v8::internal::compiler::TopLevelLiveRange"** %111, i64 4
  %124 = load i64, i64* %20, align 8
  %125 = bitcast %"class.v8::internal::compiler::TopLevelLiveRange"** %123 to i64*
  store i64 %124, i64* %125, align 8
  %126 = getelementptr inbounds %"class.v8::internal::compiler::TopLevelLiveRange"*, %"class.v8::internal::compiler::TopLevelLiveRange"** %111, i64 5
  %127 = load i64, i64* %20, align 8
  %128 = bitcast %"class.v8::internal::compiler::TopLevelLiveRange"** %126 to i64*
  store i64 %127, i64* %128, align 8
  %129 = getelementptr inbounds %"class.v8::internal::compiler::TopLevelLiveRange"*, %"class.v8::internal::compiler::TopLevelLiveRange"** %111, i64 6
  %130 = load i64, i64* %20, align 8
  %131 = bitcast %"class.v8::internal::compiler::TopLevelLiveRange"** %129 to i64*
  store i64 %130, i64* %131, align 8
  %132 = getelementptr inbounds %"class.v8::internal::compiler::TopLevelLiveRange"*, %"class.v8::internal::compiler::TopLevelLiveRange"** %111, i64 7
  %133 = load i64, i64* %20, align 8
  %134 = bitcast %"class.v8::internal::compiler::TopLevelLiveRange"** %132 to i64*
  store i64 %133, i64* %134, align 8
  %135 = getelementptr inbounds %"class.v8::internal::compiler::TopLevelLiveRange"*, %"class.v8::internal::compiler::TopLevelLiveRange"** %111, i64 8
  %136 = icmp eq %"class.v8::internal::compiler::TopLevelLiveRange"** %135, %17
  br i1 %136, label %108, label %110, !llvm.loop !245

137:                                              ; preds = %14, %108
  %138 = phi i64 [ %109, %108 ], [ %10, %14 ]
  store i64 %138, i64* %9, align 8
  ret void

139:                                              ; preds = %3
  %140 = bitcast %"class.std::__1::vector"* %0 to i64*
  %141 = load i64, i64* %140, align 8
  %142 = sub i64 %10, %141
  %143 = ashr exact i64 %142, 3
  %144 = add i64 %143, %1
  %145 = icmp ugt i64 %144, 268435455
  br i1 %145, label %146, label %148

146:                                              ; preds = %139
  %147 = bitcast %"class.std::__1::vector"* %0 to %"class.std::__1::__vector_base_common"*
  tail call void @_ZNKSt3__120__vector_base_commonILb1EE20__throw_length_errorEv(%"class.std::__1::__vector_base_common"* %147) #17
  unreachable

148:                                              ; preds = %139
  %149 = sub i64 %7, %141
  %150 = ashr exact i64 %149, 3
  %151 = icmp ult i64 %150, 134217727
  br i1 %151, label %152, label %157

152:                                              ; preds = %148
  %153 = ashr exact i64 %149, 2
  %154 = icmp ult i64 %153, %144
  %155 = select i1 %154, i64 %144, i64 %153
  %156 = icmp eq i64 %155, 0
  br i1 %156, label %175, label %157

157:                                              ; preds = %148, %152
  %158 = phi i64 [ %155, %152 ], [ 268435455, %148 ]
  %159 = getelementptr inbounds %"class.std::__1::vector", %"class.std::__1::vector"* %0, i64 0, i32 0, i32 2, i32 1, i32 0, i32 0
  %160 = load %"class.v8::internal::Zone"*, %"class.v8::internal::Zone"** %159, align 8
  %161 = shl i64 %158, 3
  %162 = getelementptr inbounds %"class.v8::internal::Zone", %"class.v8::internal::Zone"* %160, i64 0, i32 2
  %163 = load i64, i64* %162, align 8
  %164 = getelementptr inbounds %"class.v8::internal::Zone", %"class.v8::internal::Zone"* %160, i64 0, i32 3
  %165 = load i64, i64* %164, align 8
  %166 = sub i64 %165, %163
  %167 = icmp ugt i64 %161, %166
  br i1 %167, label %168, label %170, !prof !2

168:                                              ; preds = %157
  %169 = tail call i64 @_ZN2v88internal4Zone9NewExpandEm(%"class.v8::internal::Zone"* %160, i64 %161) #16
  br label %172

170:                                              ; preds = %157
  %171 = add i64 %163, %161
  store i64 %171, i64* %162, align 8
  br label %172

172:                                              ; preds = %170, %168
  %173 = phi i64 [ %169, %168 ], [ %163, %170 ]
  %174 = inttoptr i64 %173 to %"class.v8::internal::compiler::TopLevelLiveRange"**
  br label %175

175:                                              ; preds = %172, %152
  %176 = phi i64 [ %158, %172 ], [ 0, %152 ]
  %177 = phi %"class.v8::internal::compiler::TopLevelLiveRange"** [ %174, %172 ], [ null, %152 ]
  %178 = getelementptr inbounds %"class.v8::internal::compiler::TopLevelLiveRange"*, %"class.v8::internal::compiler::TopLevelLiveRange"** %177, i64 %143
  %179 = ptrtoint %"class.v8::internal::compiler::TopLevelLiveRange"** %178 to i64
  %180 = getelementptr inbounds %"class.v8::internal::compiler::TopLevelLiveRange"*, %"class.v8::internal::compiler::TopLevelLiveRange"** %177, i64 %176
  %181 = getelementptr inbounds %"class.v8::internal::compiler::TopLevelLiveRange"*, %"class.v8::internal::compiler::TopLevelLiveRange"** %178, i64 %1
  %182 = bitcast %"class.v8::internal::compiler::TopLevelLiveRange"** %2 to i64*
  %183 = shl nsw i64 %1, 3
  %184 = add i64 %183, -8
  %185 = lshr exact i64 %184, 3
  %186 = add nuw nsw i64 %185, 1
  %187 = and i64 %186, 7
  %188 = icmp eq i64 %187, 0
  br i1 %188, label %201, label %189

189:                                              ; preds = %175, %189
  %190 = phi %"class.v8::internal::compiler::TopLevelLiveRange"** [ %195, %189 ], [ %178, %175 ]
  %191 = phi i64 [ %196, %189 ], [ %179, %175 ]
  %192 = phi i64 [ %197, %189 ], [ %187, %175 ]
  %193 = load i64, i64* %182, align 8
  %194 = inttoptr i64 %191 to i64*
  store i64 %193, i64* %194, align 8
  %195 = getelementptr inbounds %"class.v8::internal::compiler::TopLevelLiveRange"*, %"class.v8::internal::compiler::TopLevelLiveRange"** %190, i64 1
  %196 = ptrtoint %"class.v8::internal::compiler::TopLevelLiveRange"** %195 to i64
  %197 = add i64 %192, -1
  %198 = icmp eq i64 %197, 0
  br i1 %198, label %199, label %189, !llvm.loop !246

199:                                              ; preds = %189
  %200 = ptrtoint %"class.v8::internal::compiler::TopLevelLiveRange"** %195 to i64
  br label %201

201:                                              ; preds = %175, %199
  %202 = phi %"class.v8::internal::compiler::TopLevelLiveRange"** [ %178, %175 ], [ %195, %199 ]
  %203 = phi i64 [ %179, %175 ], [ %200, %199 ]
  %204 = icmp ult i64 %184, 56
  br i1 %204, label %234, label %205

205:                                              ; preds = %201, %205
  %206 = phi %"class.v8::internal::compiler::TopLevelLiveRange"** [ %231, %205 ], [ %202, %201 ]
  %207 = phi i64 [ %232, %205 ], [ %203, %201 ]
  %208 = load i64, i64* %182, align 8
  %209 = inttoptr i64 %207 to i64*
  store i64 %208, i64* %209, align 8
  %210 = getelementptr inbounds %"class.v8::internal::compiler::TopLevelLiveRange"*, %"class.v8::internal::compiler::TopLevelLiveRange"** %206, i64 1
  %211 = load i64, i64* %182, align 8
  %212 = bitcast %"class.v8::internal::compiler::TopLevelLiveRange"** %210 to i64*
  store i64 %211, i64* %212, align 8
  %213 = getelementptr inbounds %"class.v8::internal::compiler::TopLevelLiveRange"*, %"class.v8::internal::compiler::TopLevelLiveRange"** %206, i64 2
  %214 = load i64, i64* %182, align 8
  %215 = bitcast %"class.v8::internal::compiler::TopLevelLiveRange"** %213 to i64*
  store i64 %214, i64* %215, align 8
  %216 = getelementptr inbounds %"class.v8::internal::compiler::TopLevelLiveRange"*, %"class.v8::internal::compiler::TopLevelLiveRange"** %206, i64 3
  %217 = load i64, i64* %182, align 8
  %218 = bitcast %"class.v8::internal::compiler::TopLevelLiveRange"** %216 to i64*
  store i64 %217, i64* %218, align 8
  %219 = getelementptr inbounds %"class.v8::internal::compiler::TopLevelLiveRange"*, %"class.v8::internal::compiler::TopLevelLiveRange"** %206, i64 4
  %220 = load i64, i64* %182, align 8
  %221 = bitcast %"class.v8::internal::compiler::TopLevelLiveRange"** %219 to i64*
  store i64 %220, i64* %221, align 8
  %222 = getelementptr inbounds %"class.v8::internal::compiler::TopLevelLiveRange"*, %"class.v8::internal::compiler::TopLevelLiveRange"** %206, i64 5
  %223 = load i64, i64* %182, align 8
  %224 = bitcast %"class.v8::internal::compiler::TopLevelLiveRange"** %222 to i64*
  store i64 %223, i64* %224, align 8
  %225 = getelementptr inbounds %"class.v8::internal::compiler::TopLevelLiveRange"*, %"class.v8::internal::compiler::TopLevelLiveRange"** %206, i64 6
  %226 = load i64, i64* %182, align 8
  %227 = bitcast %"class.v8::internal::compiler::TopLevelLiveRange"** %225 to i64*
  store i64 %226, i64* %227, align 8
  %228 = getelementptr inbounds %"class.v8::internal::compiler::TopLevelLiveRange"*, %"class.v8::internal::compiler::TopLevelLiveRange"** %206, i64 7
  %229 = load i64, i64* %182, align 8
  %230 = bitcast %"class.v8::internal::compiler::TopLevelLiveRange"** %228 to i64*
  store i64 %229, i64* %230, align 8
  %231 = getelementptr inbounds %"class.v8::internal::compiler::TopLevelLiveRange"*, %"class.v8::internal::compiler::TopLevelLiveRange"** %206, i64 8
  %232 = ptrtoint %"class.v8::internal::compiler::TopLevelLiveRange"** %231 to i64
  %233 = icmp eq %"class.v8::internal::compiler::TopLevelLiveRange"** %181, %231
  br i1 %233, label %234, label %205

234:                                              ; preds = %205, %201
  %235 = ptrtoint %"class.v8::internal::compiler::TopLevelLiveRange"** %180 to i64
  %236 = ptrtoint %"class.v8::internal::compiler::TopLevelLiveRange"** %181 to i64
  %237 = getelementptr inbounds %"class.std::__1::vector", %"class.std::__1::vector"* %0, i64 0, i32 0, i32 0
  %238 = load %"class.v8::internal::compiler::TopLevelLiveRange"**, %"class.v8::internal::compiler::TopLevelLiveRange"*** %237, align 8
  %239 = ptrtoint %"class.v8::internal::compiler::TopLevelLiveRange"** %238 to i64
  %240 = load %"class.v8::internal::compiler::TopLevelLiveRange"**, %"class.v8::internal::compiler::TopLevelLiveRange"*** %8, align 8
  %241 = icmp eq %"class.v8::internal::compiler::TopLevelLiveRange"** %240, %238
  br i1 %241, label %414, label %242

242:                                              ; preds = %234
  %243 = getelementptr %"class.v8::internal::compiler::TopLevelLiveRange"*, %"class.v8::internal::compiler::TopLevelLiveRange"** %240, i64 -1
  %244 = ptrtoint %"class.v8::internal::compiler::TopLevelLiveRange"** %243 to i64
  %245 = sub i64 %244, %239
  %246 = lshr i64 %245, 3
  %247 = add nuw nsw i64 %246, 1
  %248 = icmp ult i64 %247, 4
  br i1 %248, label %341, label %249

249:                                              ; preds = %242
  %250 = getelementptr %"class.v8::internal::compiler::TopLevelLiveRange"*, %"class.v8::internal::compiler::TopLevelLiveRange"** %240, i64 -1
  %251 = ptrtoint %"class.v8::internal::compiler::TopLevelLiveRange"** %250 to i64
  %252 = sub i64 %251, %239
  %253 = lshr i64 %252, 3
  %254 = xor i64 %253, -1
  %255 = add nsw i64 %143, %254
  %256 = getelementptr %"class.v8::internal::compiler::TopLevelLiveRange"*, %"class.v8::internal::compiler::TopLevelLiveRange"** %177, i64 %255
  %257 = xor i64 %253, -1
  %258 = getelementptr %"class.v8::internal::compiler::TopLevelLiveRange"*, %"class.v8::internal::compiler::TopLevelLiveRange"** %240, i64 %257
  %259 = icmp ult %"class.v8::internal::compiler::TopLevelLiveRange"** %256, %240
  %260 = icmp ult %"class.v8::internal::compiler::TopLevelLiveRange"** %258, %178
  %261 = and i1 %259, %260
  br i1 %261, label %341, label %262

262:                                              ; preds = %249
  %263 = and i64 %247, 4611686018427387900
  %264 = sub nsw i64 0, %263
  %265 = getelementptr %"class.v8::internal::compiler::TopLevelLiveRange"*, %"class.v8::internal::compiler::TopLevelLiveRange"** %178, i64 %264
  %266 = sub nsw i64 0, %263
  %267 = getelementptr %"class.v8::internal::compiler::TopLevelLiveRange"*, %"class.v8::internal::compiler::TopLevelLiveRange"** %240, i64 %266
  %268 = add nsw i64 %263, -4
  %269 = lshr exact i64 %268, 2
  %270 = add nuw nsw i64 %269, 1
  %271 = and i64 %270, 1
  %272 = icmp eq i64 %268, 0
  br i1 %272, label %319, label %273

273:                                              ; preds = %262
  %274 = sub nuw nsw i64 %270, %271
  %275 = getelementptr %"class.v8::internal::compiler::TopLevelLiveRange"*, %"class.v8::internal::compiler::TopLevelLiveRange"** %178, i64 -1
  %276 = getelementptr %"class.v8::internal::compiler::TopLevelLiveRange"*, %"class.v8::internal::compiler::TopLevelLiveRange"** %240, i64 -1
  %277 = getelementptr %"class.v8::internal::compiler::TopLevelLiveRange"*, %"class.v8::internal::compiler::TopLevelLiveRange"** %178, i64 -1
  %278 = getelementptr %"class.v8::internal::compiler::TopLevelLiveRange"*, %"class.v8::internal::compiler::TopLevelLiveRange"** %240, i64 -1
  br label %279

279:                                              ; preds = %279, %273
  %280 = phi i64 [ 0, %273 ], [ %314, %279 ]
  %281 = phi i64 [ %274, %273 ], [ %315, %279 ]
  %282 = sub i64 0, %280
  %283 = sub i64 0, %280
  %284 = getelementptr inbounds %"class.v8::internal::compiler::TopLevelLiveRange"*, %"class.v8::internal::compiler::TopLevelLiveRange"** %275, i64 %282
  %285 = getelementptr inbounds %"class.v8::internal::compiler::TopLevelLiveRange"*, %"class.v8::internal::compiler::TopLevelLiveRange"** %276, i64 %283
  %286 = getelementptr inbounds %"class.v8::internal::compiler::TopLevelLiveRange"*, %"class.v8::internal::compiler::TopLevelLiveRange"** %285, i64 -1
  %287 = bitcast %"class.v8::internal::compiler::TopLevelLiveRange"** %286 to <2 x i64>*
  %288 = load <2 x i64>, <2 x i64>* %287, align 8, !alias.scope !247
  %289 = getelementptr inbounds %"class.v8::internal::compiler::TopLevelLiveRange"*, %"class.v8::internal::compiler::TopLevelLiveRange"** %285, i64 -2
  %290 = getelementptr inbounds %"class.v8::internal::compiler::TopLevelLiveRange"*, %"class.v8::internal::compiler::TopLevelLiveRange"** %289, i64 -1
  %291 = bitcast %"class.v8::internal::compiler::TopLevelLiveRange"** %290 to <2 x i64>*
  %292 = load <2 x i64>, <2 x i64>* %291, align 8, !alias.scope !247
  %293 = getelementptr inbounds %"class.v8::internal::compiler::TopLevelLiveRange"*, %"class.v8::internal::compiler::TopLevelLiveRange"** %284, i64 -1
  %294 = bitcast %"class.v8::internal::compiler::TopLevelLiveRange"** %293 to <2 x i64>*
  store <2 x i64> %288, <2 x i64>* %294, align 8, !alias.scope !250, !noalias !247
  %295 = getelementptr inbounds %"class.v8::internal::compiler::TopLevelLiveRange"*, %"class.v8::internal::compiler::TopLevelLiveRange"** %284, i64 -2
  %296 = getelementptr inbounds %"class.v8::internal::compiler::TopLevelLiveRange"*, %"class.v8::internal::compiler::TopLevelLiveRange"** %295, i64 -1
  %297 = bitcast %"class.v8::internal::compiler::TopLevelLiveRange"** %296 to <2 x i64>*
  store <2 x i64> %292, <2 x i64>* %297, align 8, !alias.scope !250, !noalias !247
  %298 = sub nuw nsw i64 -4, %280
  %299 = sub nuw nsw i64 -4, %280
  %300 = getelementptr inbounds %"class.v8::internal::compiler::TopLevelLiveRange"*, %"class.v8::internal::compiler::TopLevelLiveRange"** %277, i64 %298
  %301 = getelementptr inbounds %"class.v8::internal::compiler::TopLevelLiveRange"*, %"class.v8::internal::compiler::TopLevelLiveRange"** %278, i64 %299
  %302 = getelementptr inbounds %"class.v8::internal::compiler::TopLevelLiveRange"*, %"class.v8::internal::compiler::TopLevelLiveRange"** %301, i64 -1
  %303 = bitcast %"class.v8::internal::compiler::TopLevelLiveRange"** %302 to <2 x i64>*
  %304 = load <2 x i64>, <2 x i64>* %303, align 8, !alias.scope !247
  %305 = getelementptr inbounds %"class.v8::internal::compiler::TopLevelLiveRange"*, %"class.v8::internal::compiler::TopLevelLiveRange"** %301, i64 -2
  %306 = getelementptr inbounds %"class.v8::internal::compiler::TopLevelLiveRange"*, %"class.v8::internal::compiler::TopLevelLiveRange"** %305, i64 -1
  %307 = bitcast %"class.v8::internal::compiler::TopLevelLiveRange"** %306 to <2 x i64>*
  %308 = load <2 x i64>, <2 x i64>* %307, align 8, !alias.scope !247
  %309 = getelementptr inbounds %"class.v8::internal::compiler::TopLevelLiveRange"*, %"class.v8::internal::compiler::TopLevelLiveRange"** %300, i64 -1
  %310 = bitcast %"class.v8::internal::compiler::TopLevelLiveRange"** %309 to <2 x i64>*
  store <2 x i64> %304, <2 x i64>* %310, align 8, !alias.scope !250, !noalias !247
  %311 = getelementptr inbounds %"class.v8::internal::compiler::TopLevelLiveRange"*, %"class.v8::internal::compiler::TopLevelLiveRange"** %300, i64 -2
  %312 = getelementptr inbounds %"class.v8::internal::compiler::TopLevelLiveRange"*, %"class.v8::internal::compiler::TopLevelLiveRange"** %311, i64 -1
  %313 = bitcast %"class.v8::internal::compiler::TopLevelLiveRange"** %312 to <2 x i64>*
  store <2 x i64> %308, <2 x i64>* %313, align 8, !alias.scope !250, !noalias !247
  %314 = add i64 %280, 8
  %315 = add i64 %281, -2
  %316 = icmp eq i64 %315, 0
  br i1 %316, label %317, label %279, !llvm.loop !252

317:                                              ; preds = %279
  %318 = sub nuw nsw i64 -8, %280
  br label %319

319:                                              ; preds = %317, %262
  %320 = phi i64 [ 0, %262 ], [ %318, %317 ]
  %321 = icmp eq i64 %271, 0
  br i1 %321, label %339, label %322

322:                                              ; preds = %319
  %323 = getelementptr %"class.v8::internal::compiler::TopLevelLiveRange"*, %"class.v8::internal::compiler::TopLevelLiveRange"** %178, i64 -1
  %324 = getelementptr %"class.v8::internal::compiler::TopLevelLiveRange"*, %"class.v8::internal::compiler::TopLevelLiveRange"** %240, i64 -1
  %325 = getelementptr inbounds %"class.v8::internal::compiler::TopLevelLiveRange"*, %"class.v8::internal::compiler::TopLevelLiveRange"** %323, i64 %320
  %326 = getelementptr inbounds %"class.v8::internal::compiler::TopLevelLiveRange"*, %"class.v8::internal::compiler::TopLevelLiveRange"** %324, i64 %320
  %327 = getelementptr inbounds %"class.v8::internal::compiler::TopLevelLiveRange"*, %"class.v8::internal::compiler::TopLevelLiveRange"** %326, i64 -1
  %328 = bitcast %"class.v8::internal::compiler::TopLevelLiveRange"** %327 to <2 x i64>*
  %329 = load <2 x i64>, <2 x i64>* %328, align 8, !alias.scope !247
  %330 = getelementptr inbounds %"class.v8::internal::compiler::TopLevelLiveRange"*, %"class.v8::internal::compiler::TopLevelLiveRange"** %326, i64 -2
  %331 = getelementptr inbounds %"class.v8::internal::compiler::TopLevelLiveRange"*, %"class.v8::internal::compiler::TopLevelLiveRange"** %330, i64 -1
  %332 = bitcast %"class.v8::internal::compiler::TopLevelLiveRange"** %331 to <2 x i64>*
  %333 = load <2 x i64>, <2 x i64>* %332, align 8, !alias.scope !247
  %334 = getelementptr inbounds %"class.v8::internal::compiler::TopLevelLiveRange"*, %"class.v8::internal::compiler::TopLevelLiveRange"** %325, i64 -1
  %335 = bitcast %"class.v8::internal::compiler::TopLevelLiveRange"** %334 to <2 x i64>*
  store <2 x i64> %329, <2 x i64>* %335, align 8, !alias.scope !250, !noalias !247
  %336 = getelementptr inbounds %"class.v8::internal::compiler::TopLevelLiveRange"*, %"class.v8::internal::compiler::TopLevelLiveRange"** %325, i64 -2
  %337 = getelementptr inbounds %"class.v8::internal::compiler::TopLevelLiveRange"*, %"class.v8::internal::compiler::TopLevelLiveRange"** %336, i64 -1
  %338 = bitcast %"class.v8::internal::compiler::TopLevelLiveRange"** %337 to <2 x i64>*
  store <2 x i64> %333, <2 x i64>* %338, align 8, !alias.scope !250, !noalias !247
  br label %339

339:                                              ; preds = %319, %322
  %340 = icmp eq i64 %247, %263
  br i1 %340, label %411, label %341

341:                                              ; preds = %339, %249, %242
  %342 = phi %"class.v8::internal::compiler::TopLevelLiveRange"** [ %178, %249 ], [ %178, %242 ], [ %265, %339 ]
  %343 = phi %"class.v8::internal::compiler::TopLevelLiveRange"** [ %240, %249 ], [ %240, %242 ], [ %267, %339 ]
  %344 = getelementptr %"class.v8::internal::compiler::TopLevelLiveRange"*, %"class.v8::internal::compiler::TopLevelLiveRange"** %343, i64 -1
  %345 = ptrtoint %"class.v8::internal::compiler::TopLevelLiveRange"** %344 to i64
  %346 = sub i64 %345, %239
  %347 = lshr i64 %346, 3
  %348 = add nuw nsw i64 %347, 1
  %349 = and i64 %348, 7
  %350 = icmp eq i64 %349, 0
  br i1 %350, label %362, label %351

351:                                              ; preds = %341, %351
  %352 = phi %"class.v8::internal::compiler::TopLevelLiveRange"** [ %355, %351 ], [ %342, %341 ]
  %353 = phi %"class.v8::internal::compiler::TopLevelLiveRange"** [ %356, %351 ], [ %343, %341 ]
  %354 = phi i64 [ %360, %351 ], [ %349, %341 ]
  %355 = getelementptr inbounds %"class.v8::internal::compiler::TopLevelLiveRange"*, %"class.v8::internal::compiler::TopLevelLiveRange"** %352, i64 -1
  %356 = getelementptr inbounds %"class.v8::internal::compiler::TopLevelLiveRange"*, %"class.v8::internal::compiler::TopLevelLiveRange"** %353, i64 -1
  %357 = bitcast %"class.v8::internal::compiler::TopLevelLiveRange"** %356 to i64*
  %358 = load i64, i64* %357, align 8
  %359 = bitcast %"class.v8::internal::compiler::TopLevelLiveRange"** %355 to i64*
  store i64 %358, i64* %359, align 8
  %360 = add i64 %354, -1
  %361 = icmp eq i64 %360, 0
  br i1 %361, label %362, label %351, !llvm.loop !253

362:                                              ; preds = %351, %341
  %363 = phi %"class.v8::internal::compiler::TopLevelLiveRange"** [ undef, %341 ], [ %355, %351 ]
  %364 = phi %"class.v8::internal::compiler::TopLevelLiveRange"** [ %342, %341 ], [ %355, %351 ]
  %365 = phi %"class.v8::internal::compiler::TopLevelLiveRange"** [ %343, %341 ], [ %356, %351 ]
  %366 = icmp ult i64 %346, 56
  br i1 %366, label %411, label %367

367:                                              ; preds = %362, %367
  %368 = phi %"class.v8::internal::compiler::TopLevelLiveRange"** [ %405, %367 ], [ %364, %362 ]
  %369 = phi %"class.v8::internal::compiler::TopLevelLiveRange"** [ %406, %367 ], [ %365, %362 ]
  %370 = getelementptr inbounds %"class.v8::internal::compiler::TopLevelLiveRange"*, %"class.v8::internal::compiler::TopLevelLiveRange"** %368, i64 -1
  %371 = getelementptr inbounds %"class.v8::internal::compiler::TopLevelLiveRange"*, %"class.v8::internal::compiler::TopLevelLiveRange"** %369, i64 -1
  %372 = bitcast %"class.v8::internal::compiler::TopLevelLiveRange"** %371 to i64*
  %373 = load i64, i64* %372, align 8
  %374 = bitcast %"class.v8::internal::compiler::TopLevelLiveRange"** %370 to i64*
  store i64 %373, i64* %374, align 8
  %375 = getelementptr inbounds %"class.v8::internal::compiler::TopLevelLiveRange"*, %"class.v8::internal::compiler::TopLevelLiveRange"** %368, i64 -2
  %376 = getelementptr inbounds %"class.v8::internal::compiler::TopLevelLiveRange"*, %"class.v8::internal::compiler::TopLevelLiveRange"** %369, i64 -2
  %377 = bitcast %"class.v8::internal::compiler::TopLevelLiveRange"** %376 to i64*
  %378 = load i64, i64* %377, align 8
  %379 = bitcast %"class.v8::internal::compiler::TopLevelLiveRange"** %375 to i64*
  store i64 %378, i64* %379, align 8
  %380 = getelementptr inbounds %"class.v8::internal::compiler::TopLevelLiveRange"*, %"class.v8::internal::compiler::TopLevelLiveRange"** %368, i64 -3
  %381 = getelementptr inbounds %"class.v8::internal::compiler::TopLevelLiveRange"*, %"class.v8::internal::compiler::TopLevelLiveRange"** %369, i64 -3
  %382 = bitcast %"class.v8::internal::compiler::TopLevelLiveRange"** %381 to i64*
  %383 = load i64, i64* %382, align 8
  %384 = bitcast %"class.v8::internal::compiler::TopLevelLiveRange"** %380 to i64*
  store i64 %383, i64* %384, align 8
  %385 = getelementptr inbounds %"class.v8::internal::compiler::TopLevelLiveRange"*, %"class.v8::internal::compiler::TopLevelLiveRange"** %368, i64 -4
  %386 = getelementptr inbounds %"class.v8::internal::compiler::TopLevelLiveRange"*, %"class.v8::internal::compiler::TopLevelLiveRange"** %369, i64 -4
  %387 = bitcast %"class.v8::internal::compiler::TopLevelLiveRange"** %386 to i64*
  %388 = load i64, i64* %387, align 8
  %389 = bitcast %"class.v8::internal::compiler::TopLevelLiveRange"** %385 to i64*
  store i64 %388, i64* %389, align 8
  %390 = getelementptr inbounds %"class.v8::internal::compiler::TopLevelLiveRange"*, %"class.v8::internal::compiler::TopLevelLiveRange"** %368, i64 -5
  %391 = getelementptr inbounds %"class.v8::internal::compiler::TopLevelLiveRange"*, %"class.v8::internal::compiler::TopLevelLiveRange"** %369, i64 -5
  %392 = bitcast %"class.v8::internal::compiler::TopLevelLiveRange"** %391 to i64*
  %393 = load i64, i64* %392, align 8
  %394 = bitcast %"class.v8::internal::compiler::TopLevelLiveRange"** %390 to i64*
  store i64 %393, i64* %394, align 8
  %395 = getelementptr inbounds %"class.v8::internal::compiler::TopLevelLiveRange"*, %"class.v8::internal::compiler::TopLevelLiveRange"** %368, i64 -6
  %396 = getelementptr inbounds %"class.v8::internal::compiler::TopLevelLiveRange"*, %"class.v8::internal::compiler::TopLevelLiveRange"** %369, i64 -6
  %397 = bitcast %"class.v8::internal::compiler::TopLevelLiveRange"** %396 to i64*
  %398 = load i64, i64* %397, align 8
  %399 = bitcast %"class.v8::internal::compiler::TopLevelLiveRange"** %395 to i64*
  store i64 %398, i64* %399, align 8
  %400 = getelementptr inbounds %"class.v8::internal::compiler::TopLevelLiveRange"*, %"class.v8::internal::compiler::TopLevelLiveRange"** %368, i64 -7
  %401 = getelementptr inbounds %"class.v8::internal::compiler::TopLevelLiveRange"*, %"class.v8::internal::compiler::TopLevelLiveRange"** %369, i64 -7
  %402 = bitcast %"class.v8::internal::compiler::TopLevelLiveRange"** %401 to i64*
  %403 = load i64, i64* %402, align 8
  %404 = bitcast %"class.v8::internal::compiler::TopLevelLiveRange"** %400 to i64*
  store i64 %403, i64* %404, align 8
  %405 = getelementptr inbounds %"class.v8::internal::compiler::TopLevelLiveRange"*, %"class.v8::internal::compiler::TopLevelLiveRange"** %368, i64 -8
  %406 = getelementptr inbounds %"class.v8::internal::compiler::TopLevelLiveRange"*, %"class.v8::internal::compiler::TopLevelLiveRange"** %369, i64 -8
  %407 = bitcast %"class.v8::internal::compiler::TopLevelLiveRange"** %406 to i64*
  %408 = load i64, i64* %407, align 8
  %409 = bitcast %"class.v8::internal::compiler::TopLevelLiveRange"** %405 to i64*
  store i64 %408, i64* %409, align 8
  %410 = icmp eq %"class.v8::internal::compiler::TopLevelLiveRange"** %406, %238
  br i1 %410, label %411, label %367, !llvm.loop !254

411:                                              ; preds = %362, %367, %339
  %412 = phi %"class.v8::internal::compiler::TopLevelLiveRange"** [ %265, %339 ], [ %363, %362 ], [ %405, %367 ]
  %413 = ptrtoint %"class.v8::internal::compiler::TopLevelLiveRange"** %412 to i64
  br label %414

414:                                              ; preds = %234, %411
  %415 = phi i64 [ %413, %411 ], [ %179, %234 ]
  store i64 %415, i64* %140, align 8
  store i64 %236, i64* %9, align 8
  store i64 %235, i64* %6, align 8
  ret void
}

; Function Attrs: nounwind ssp uwtable
define linkonce_odr hidden { %"class.std::__1::__tree_end_node"*, i8 } @_ZNSt3__16__treeIPN2v88internal8compiler9LiveRangeENS3_17LiveRangeOrderingENS2_13ZoneAllocatorIS5_EEE25__emplace_unique_key_argsIS5_JRKS5_EEENS_4pairINS_15__tree_iteratorIS5_PNS_11__tree_nodeIS5_PvEElEEbEERKT_DpOT0_(%"class.std::__1::__tree"*, %"class.v8::internal::compiler::LiveRange"** dereferenceable(8), %"class.v8::internal::compiler::LiveRange"** dereferenceable(8)) local_unnamed_addr #0 comdat align 2 {
  %4 = getelementptr inbounds %"class.std::__1::__tree", %"class.std::__1::__tree"* %0, i64 0, i32 1, i32 0, i32 0
  %5 = bitcast %"class.std::__1::__tree_end_node"* %4 to %"class.std::__1::__tree_node.1501"**
  %6 = load %"class.std::__1::__tree_node.1501"*, %"class.std::__1::__tree_node.1501"** %5, align 8
  %7 = icmp eq %"class.std::__1::__tree_node.1501"* %6, null
  br i1 %7, label %45, label %8

8:                                                ; preds = %3
  %9 = getelementptr inbounds %"class.std::__1::__tree", %"class.std::__1::__tree"* %0, i64 0, i32 1, i32 0, i32 0, i32 0
  %10 = load %"class.v8::internal::compiler::LiveRange"*, %"class.v8::internal::compiler::LiveRange"** %1, align 8
  %11 = getelementptr inbounds %"class.v8::internal::compiler::LiveRange", %"class.v8::internal::compiler::LiveRange"* %10, i64 0, i32 3
  %12 = load %"class.v8::internal::compiler::UseInterval"*, %"class.v8::internal::compiler::UseInterval"** %11, align 8
  %13 = getelementptr inbounds %"class.v8::internal::compiler::UseInterval", %"class.v8::internal::compiler::UseInterval"* %12, i64 0, i32 0, i32 0
  %14 = load i32, i32* %13, align 8
  br label %15

15:                                               ; preds = %41, %8
  %16 = phi %"class.std::__1::__tree_node.1501"* [ %44, %41 ], [ %6, %8 ]
  %17 = phi %"class.std::__1::__tree_node_base"** [ %43, %41 ], [ %9, %8 ]
  %18 = getelementptr inbounds %"class.std::__1::__tree_node.1501", %"class.std::__1::__tree_node.1501"* %16, i64 0, i32 1
  %19 = load %"class.v8::internal::compiler::LiveRange"*, %"class.v8::internal::compiler::LiveRange"** %18, align 8
  %20 = getelementptr inbounds %"class.v8::internal::compiler::LiveRange", %"class.v8::internal::compiler::LiveRange"* %19, i64 0, i32 3
  %21 = load %"class.v8::internal::compiler::UseInterval"*, %"class.v8::internal::compiler::UseInterval"** %20, align 8
  %22 = getelementptr inbounds %"class.v8::internal::compiler::UseInterval", %"class.v8::internal::compiler::UseInterval"* %21, i64 0, i32 0, i32 0
  %23 = load i32, i32* %22, align 8
  %24 = icmp slt i32 %14, %23
  br i1 %24, label %25, label %31

25:                                               ; preds = %15
  %26 = getelementptr inbounds %"class.std::__1::__tree_node.1501", %"class.std::__1::__tree_node.1501"* %16, i64 0, i32 0, i32 0, i32 0
  %27 = load %"class.std::__1::__tree_node_base"*, %"class.std::__1::__tree_node_base"** %26, align 8
  %28 = icmp eq %"class.std::__1::__tree_node_base"* %27, null
  br i1 %28, label %29, label %41

29:                                               ; preds = %25
  %30 = getelementptr inbounds %"class.std::__1::__tree_node.1501", %"class.std::__1::__tree_node.1501"* %16, i64 0, i32 0, i32 0
  br label %47

31:                                               ; preds = %15
  %32 = icmp slt i32 %23, %14
  br i1 %32, label %33, label %39

33:                                               ; preds = %31
  %34 = getelementptr inbounds %"class.std::__1::__tree_node.1501", %"class.std::__1::__tree_node.1501"* %16, i64 0, i32 0, i32 1
  %35 = load %"class.std::__1::__tree_node_base"*, %"class.std::__1::__tree_node_base"** %34, align 8
  %36 = icmp eq %"class.std::__1::__tree_node_base"* %35, null
  br i1 %36, label %37, label %41

37:                                               ; preds = %33
  %38 = getelementptr inbounds %"class.std::__1::__tree_node.1501", %"class.std::__1::__tree_node.1501"* %16, i64 0, i32 0, i32 0
  br label %47

39:                                               ; preds = %31
  %40 = getelementptr inbounds %"class.std::__1::__tree_node.1501", %"class.std::__1::__tree_node.1501"* %16, i64 0, i32 0, i32 0
  br label %47

41:                                               ; preds = %33, %25
  %42 = phi %"class.std::__1::__tree_node_base"* [ %27, %25 ], [ %35, %33 ]
  %43 = phi %"class.std::__1::__tree_node_base"** [ %26, %25 ], [ %34, %33 ]
  %44 = bitcast %"class.std::__1::__tree_node_base"* %42 to %"class.std::__1::__tree_node.1501"*
  br label %15

45:                                               ; preds = %3
  %46 = getelementptr inbounds %"class.std::__1::__tree_end_node", %"class.std::__1::__tree_end_node"* %4, i64 0, i32 0
  br label %47

47:                                               ; preds = %29, %37, %39, %45
  %48 = phi %"class.std::__1::__tree_end_node"* [ %4, %45 ], [ %30, %29 ], [ %38, %37 ], [ %40, %39 ]
  %49 = phi %"class.std::__1::__tree_node_base"** [ %46, %45 ], [ %26, %29 ], [ %34, %37 ], [ %17, %39 ]
  %50 = bitcast %"class.std::__1::__tree_node_base"** %49 to %"class.std::__1::__tree_node.1501"**
  %51 = load %"class.std::__1::__tree_node.1501"*, %"class.std::__1::__tree_node.1501"** %50, align 8
  %52 = icmp eq %"class.std::__1::__tree_node.1501"* %51, null
  br i1 %52, label %53, label %92

53:                                               ; preds = %47
  %54 = getelementptr inbounds %"class.std::__1::__tree", %"class.std::__1::__tree"* %0, i64 0, i32 1, i32 1, i32 0, i32 0
  %55 = load %"class.v8::internal::Zone"*, %"class.v8::internal::Zone"** %54, align 8, !noalias !255
  %56 = getelementptr inbounds %"class.v8::internal::Zone", %"class.v8::internal::Zone"* %55, i64 0, i32 2
  %57 = load i64, i64* %56, align 8, !noalias !255
  %58 = getelementptr inbounds %"class.v8::internal::Zone", %"class.v8::internal::Zone"* %55, i64 0, i32 3
  %59 = load i64, i64* %58, align 8, !noalias !255
  %60 = sub i64 %59, %57
  %61 = icmp ult i64 %60, 40
  br i1 %61, label %62, label %64, !prof !2

62:                                               ; preds = %53
  %63 = tail call i64 @_ZN2v88internal4Zone9NewExpandEm(%"class.v8::internal::Zone"* %55, i64 40) #16, !noalias !255
  br label %66

64:                                               ; preds = %53
  %65 = add i64 %57, 40
  store i64 %65, i64* %56, align 8, !noalias !255
  br label %66

66:                                               ; preds = %62, %64
  %67 = phi i64 [ %63, %62 ], [ %57, %64 ]
  %68 = inttoptr i64 %67 to %"class.std::__1::__tree_node.1501"*
  %69 = getelementptr inbounds %"class.std::__1::__tree_node.1501", %"class.std::__1::__tree_node.1501"* %68, i64 0, i32 1
  %70 = bitcast %"class.v8::internal::compiler::LiveRange"** %2 to i64*
  %71 = load i64, i64* %70, align 8, !noalias !255
  %72 = bitcast %"class.v8::internal::compiler::LiveRange"** %69 to i64*
  store i64 %71, i64* %72, align 8, !noalias !255
  %73 = inttoptr i64 %67 to %"class.std::__1::__tree_node_base"*
  %74 = getelementptr inbounds %"class.std::__1::__tree_node_base", %"class.std::__1::__tree_node_base"* %73, i64 0, i32 2
  %75 = inttoptr i64 %67 to i8*
  tail call void @llvm.memset.p0i8.i64(i8* align 8 %75, i8 0, i64 16, i1 false) #16
  store %"class.std::__1::__tree_end_node"* %48, %"class.std::__1::__tree_end_node"** %74, align 8
  store %"class.std::__1::__tree_node_base"* %73, %"class.std::__1::__tree_node_base"** %49, align 8
  %76 = getelementptr inbounds %"class.std::__1::__tree", %"class.std::__1::__tree"* %0, i64 0, i32 0
  %77 = load %"class.std::__1::__tree_end_node"*, %"class.std::__1::__tree_end_node"** %76, align 8
  %78 = getelementptr inbounds %"class.std::__1::__tree_end_node", %"class.std::__1::__tree_end_node"* %77, i64 0, i32 0
  %79 = load %"class.std::__1::__tree_node_base"*, %"class.std::__1::__tree_node_base"** %78, align 8
  %80 = icmp eq %"class.std::__1::__tree_node_base"* %79, null
  br i1 %80, label %85, label %81

81:                                               ; preds = %66
  %82 = ptrtoint %"class.std::__1::__tree_node_base"* %79 to i64
  %83 = bitcast %"class.std::__1::__tree"* %0 to i64*
  store i64 %82, i64* %83, align 8
  %84 = load %"class.std::__1::__tree_node_base"*, %"class.std::__1::__tree_node_base"** %49, align 8
  br label %85

85:                                               ; preds = %66, %81
  %86 = phi %"class.std::__1::__tree_node_base"* [ %73, %66 ], [ %84, %81 ]
  %87 = getelementptr inbounds %"class.std::__1::__tree", %"class.std::__1::__tree"* %0, i64 0, i32 1, i32 0, i32 0, i32 0
  %88 = load %"class.std::__1::__tree_node_base"*, %"class.std::__1::__tree_node_base"** %87, align 8
  tail call void @_ZNSt3__127__tree_balance_after_insertIPNS_16__tree_node_baseIPvEEEEvT_S5_(%"class.std::__1::__tree_node_base"* %88, %"class.std::__1::__tree_node_base"* %86) #16
  %89 = getelementptr inbounds %"class.std::__1::__tree", %"class.std::__1::__tree"* %0, i64 0, i32 2, i32 0, i32 0
  %90 = load i64, i64* %89, align 8
  %91 = add i64 %90, 1
  store i64 %91, i64* %89, align 8
  br label %92

92:                                               ; preds = %85, %47
  %93 = phi i8 [ 1, %85 ], [ 0, %47 ]
  %94 = phi %"class.std::__1::__tree_node.1501"* [ %68, %85 ], [ %51, %47 ]
  %95 = getelementptr inbounds %"class.std::__1::__tree_node.1501", %"class.std::__1::__tree_node.1501"* %94, i64 0, i32 0, i32 0
  %96 = insertvalue { %"class.std::__1::__tree_end_node"*, i8 } undef, %"class.std::__1::__tree_end_node"* %95, 0
  %97 = insertvalue { %"class.std::__1::__tree_end_node"*, i8 } %96, i8 %93, 1
  ret { %"class.std::__1::__tree_end_node"*, i8 } %97
}

; Function Attrs: nounwind ssp uwtable
define linkonce_odr hidden void @_ZNSt3__16__treeIPN2v88internal8compiler9LiveRangeENS3_17LiveRangeOrderingENS2_13ZoneAllocatorIS5_EEE7destroyEPNS_11__tree_nodeIS5_PvEE(%"class.std::__1::__tree"*, %"class.std::__1::__tree_node.1501"*) local_unnamed_addr #0 comdat align 2 {
  %3 = icmp eq %"class.std::__1::__tree_node.1501"* %1, null
  br i1 %3, label %12, label %4

4:                                                ; preds = %2, %4
  %5 = phi %"class.std::__1::__tree_node.1501"* [ %10, %4 ], [ %1, %2 ]
  %6 = bitcast %"class.std::__1::__tree_node.1501"* %5 to %"class.std::__1::__tree_node.1501"**
  %7 = load %"class.std::__1::__tree_node.1501"*, %"class.std::__1::__tree_node.1501"** %6, align 8
  tail call void @_ZNSt3__16__treeIPN2v88internal8compiler9LiveRangeENS3_17LiveRangeOrderingENS2_13ZoneAllocatorIS5_EEE7destroyEPNS_11__tree_nodeIS5_PvEE(%"class.std::__1::__tree"* %0, %"class.std::__1::__tree_node.1501"* %7) #16
  %8 = getelementptr inbounds %"class.std::__1::__tree_node.1501", %"class.std::__1::__tree_node.1501"* %5, i64 0, i32 0, i32 1
  %9 = bitcast %"class.std::__1::__tree_node_base"** %8 to %"class.std::__1::__tree_node.1501"**
  %10 = load %"class.std::__1::__tree_node.1501"*, %"class.std::__1::__tree_node.1501"** %9, align 8
  %11 = icmp eq %"class.std::__1::__tree_node.1501"* %10, null
  br i1 %11, label %12, label %4

12:                                               ; preds = %4, %2
  ret void
}

; Function Attrs: nounwind ssp uwtable
define linkonce_odr hidden void @_ZNSt3__16__treeIN2v88internal8compiler15LiveRangeBundle5RangeENS4_13RangeOrderingENS2_13ZoneAllocatorIS5_EEE7destroyEPNS_11__tree_nodeIS5_PvEE(%"class.std::__1::__tree.26"*, %"class.std::__1::__tree_node"*) local_unnamed_addr #0 comdat align 2 {
  %3 = icmp eq %"class.std::__1::__tree_node"* %1, null
  br i1 %3, label %12, label %4

4:                                                ; preds = %2, %4
  %5 = phi %"class.std::__1::__tree_node"* [ %10, %4 ], [ %1, %2 ]
  %6 = bitcast %"class.std::__1::__tree_node"* %5 to %"class.std::__1::__tree_node"**
  %7 = load %"class.std::__1::__tree_node"*, %"class.std::__1::__tree_node"** %6, align 8
  tail call void @_ZNSt3__16__treeIN2v88internal8compiler15LiveRangeBundle5RangeENS4_13RangeOrderingENS2_13ZoneAllocatorIS5_EEE7destroyEPNS_11__tree_nodeIS5_PvEE(%"class.std::__1::__tree.26"* %0, %"class.std::__1::__tree_node"* %7) #16
  %8 = getelementptr inbounds %"class.std::__1::__tree_node", %"class.std::__1::__tree_node"* %5, i64 0, i32 0, i32 1
  %9 = bitcast %"class.std::__1::__tree_node_base"** %8 to %"class.std::__1::__tree_node"**
  %10 = load %"class.std::__1::__tree_node"*, %"class.std::__1::__tree_node"** %9, align 8
  %11 = icmp eq %"class.std::__1::__tree_node"* %10, null
  br i1 %11, label %12, label %4

12:                                               ; preds = %4, %2
  ret void
}

; Function Attrs: nounwind ssp uwtable
define linkonce_odr hidden void @_ZNSt3__16vectorIN2v88internal12ZoneMultisetIPNS2_8compiler9LiveRangeENS4_19LinearScanAllocator25InactiveLiveRangeOrderingEEENS2_13ZoneAllocatorIS9_EEEC2EmRKS9_RKSB_(%"class.std::__1::vector.1342"*, i64, %"class.v8::internal::ZoneMultiset.1344"* dereferenceable(32), %"class.v8::internal::ZoneAllocator.1352"* dereferenceable(8)) unnamed_addr #0 comdat align 2 {
  %5 = getelementptr inbounds %"class.std::__1::vector.1342", %"class.std::__1::vector.1342"* %0, i64 0, i32 0, i32 2, i32 1
  %6 = bitcast %"class.v8::internal::ZoneAllocator.1352"* %3 to i64*
  %7 = bitcast %"struct.std::__1::__compressed_pair_elem.1351"* %5 to i64*
  %8 = bitcast %"class.std::__1::vector.1342"* %0 to i8*
  tail call void @llvm.memset.p0i8.i64(i8* align 8 %8, i8 0, i64 24, i1 false) #16
  %9 = load i64, i64* %6, align 8
  store i64 %9, i64* %7, align 8
  %10 = icmp eq i64 %1, 0
  %11 = inttoptr i64 %9 to %"class.v8::internal::Zone"*
  br i1 %10, label %93, label %12

12:                                               ; preds = %4
  %13 = icmp ugt i64 %1, 67108863
  br i1 %13, label %14, label %16

14:                                               ; preds = %12
  %15 = bitcast %"class.std::__1::vector.1342"* %0 to %"class.std::__1::__vector_base_common"*
  tail call void @_ZNKSt3__120__vector_base_commonILb1EE20__throw_length_errorEv(%"class.std::__1::__vector_base_common"* %15) #17
  unreachable

16:                                               ; preds = %12
  %17 = shl i64 %1, 5
  %18 = getelementptr inbounds %"class.v8::internal::Zone", %"class.v8::internal::Zone"* %11, i64 0, i32 2
  %19 = load i64, i64* %18, align 8
  %20 = getelementptr inbounds %"class.v8::internal::Zone", %"class.v8::internal::Zone"* %11, i64 0, i32 3
  %21 = load i64, i64* %20, align 8
  %22 = sub i64 %21, %19
  %23 = icmp ugt i64 %17, %22
  br i1 %23, label %24, label %26, !prof !2

24:                                               ; preds = %16
  %25 = tail call i64 @_ZN2v88internal4Zone9NewExpandEm(%"class.v8::internal::Zone"* %11, i64 %17) #16
  br label %28

26:                                               ; preds = %16
  %27 = add i64 %19, %17
  store i64 %27, i64* %18, align 8
  br label %28

28:                                               ; preds = %26, %24
  %29 = phi i64 [ %25, %24 ], [ %19, %26 ]
  %30 = inttoptr i64 %29 to %"class.v8::internal::ZoneMultiset.1344"*
  %31 = getelementptr inbounds %"class.std::__1::vector.1342", %"class.std::__1::vector.1342"* %0, i64 0, i32 0, i32 1
  store %"class.v8::internal::ZoneMultiset.1344"* %30, %"class.v8::internal::ZoneMultiset.1344"** %31, align 8
  %32 = getelementptr inbounds %"class.std::__1::vector.1342", %"class.std::__1::vector.1342"* %0, i64 0, i32 0, i32 0
  store %"class.v8::internal::ZoneMultiset.1344"* %30, %"class.v8::internal::ZoneMultiset.1344"** %32, align 8
  %33 = getelementptr inbounds %"class.v8::internal::ZoneMultiset.1344", %"class.v8::internal::ZoneMultiset.1344"* %30, i64 %1
  %34 = getelementptr inbounds %"class.std::__1::vector.1342", %"class.std::__1::vector.1342"* %0, i64 0, i32 0, i32 2, i32 0, i32 0
  store %"class.v8::internal::ZoneMultiset.1344"* %33, %"class.v8::internal::ZoneMultiset.1344"** %34, align 8
  %35 = getelementptr inbounds %"class.v8::internal::ZoneMultiset.1344", %"class.v8::internal::ZoneMultiset.1344"* %2, i64 0, i32 0, i32 0, i32 1, i32 1, i32 0, i32 0
  %36 = bitcast %"class.v8::internal::Zone"** %35 to i64*
  %37 = getelementptr inbounds %"class.v8::internal::ZoneMultiset.1344", %"class.v8::internal::ZoneMultiset.1344"* %2, i64 0, i32 0, i32 0, i32 0
  %38 = getelementptr inbounds %"class.v8::internal::ZoneMultiset.1344", %"class.v8::internal::ZoneMultiset.1344"* %2, i64 0, i32 0, i32 0, i32 1, i32 0, i32 0
  br label %39

39:                                               ; preds = %87, %28
  %40 = phi %"class.v8::internal::ZoneMultiset.1344"* [ %30, %28 ], [ %88, %87 ]
  %41 = getelementptr inbounds %"class.v8::internal::ZoneMultiset.1344", %"class.v8::internal::ZoneMultiset.1344"* %40, i64 0, i32 0, i32 0
  %42 = load i64, i64* %36, align 8
  %43 = getelementptr inbounds %"class.v8::internal::ZoneMultiset.1344", %"class.v8::internal::ZoneMultiset.1344"* %40, i64 0, i32 0, i32 0, i32 0
  %44 = getelementptr inbounds %"class.v8::internal::ZoneMultiset.1344", %"class.v8::internal::ZoneMultiset.1344"* %40, i64 0, i32 0, i32 0, i32 1, i32 1
  %45 = bitcast %"struct.std::__1::__compressed_pair_elem.0"* %44 to i64*
  %46 = getelementptr inbounds %"class.v8::internal::ZoneMultiset.1344", %"class.v8::internal::ZoneMultiset.1344"* %40, i64 0, i32 0, i32 0, i32 1
  %47 = bitcast %"class.std::__1::__compressed_pair"* %46 to i64*
  store i64 0, i64* %47, align 8
  store i64 %42, i64* %45, align 8
  %48 = getelementptr inbounds %"class.v8::internal::ZoneMultiset.1344", %"class.v8::internal::ZoneMultiset.1344"* %40, i64 0, i32 0, i32 0, i32 2, i32 0, i32 0
  store i64 0, i64* %48, align 8
  %49 = getelementptr inbounds %"class.v8::internal::ZoneMultiset.1344", %"class.v8::internal::ZoneMultiset.1344"* %40, i64 0, i32 0, i32 0, i32 1, i32 0, i32 0
  store %"class.std::__1::__tree_end_node"* %49, %"class.std::__1::__tree_end_node"** %43, align 8
  %50 = load %"class.std::__1::__tree_end_node"*, %"class.std::__1::__tree_end_node"** %37, align 8
  %51 = icmp eq %"class.std::__1::__tree_end_node"* %50, %38
  br i1 %51, label %87, label %52

52:                                               ; preds = %39, %84
  %53 = phi %"class.std::__1::__tree_end_node"* [ %85, %84 ], [ %50, %39 ]
  %54 = getelementptr inbounds %"class.std::__1::__tree_end_node", %"class.std::__1::__tree_end_node"* %53, i64 4
  %55 = bitcast %"class.std::__1::__tree_end_node"* %54 to %"class.v8::internal::compiler::LiveRange"**
  %56 = tail call %"class.std::__1::__tree_end_node"* @_ZNSt3__16__treeIPN2v88internal8compiler9LiveRangeENS3_19LinearScanAllocator25InactiveLiveRangeOrderingENS2_13ZoneAllocatorIS5_EEE20__emplace_hint_multiIJRKS5_EEENS_15__tree_iteratorIS5_PNS_11__tree_nodeIS5_PvEElEENS_21__tree_const_iteratorIS5_SI_lEEDpOT_(%"class.std::__1::__tree.1346"* %41, %"class.std::__1::__tree_end_node"* %49, %"class.v8::internal::compiler::LiveRange"** dereferenceable(8) %55) #16
  %57 = getelementptr inbounds %"class.std::__1::__tree_end_node", %"class.std::__1::__tree_end_node"* %53, i64 1, i32 0
  %58 = load %"class.std::__1::__tree_node_base"*, %"class.std::__1::__tree_node_base"** %57, align 8
  %59 = icmp eq %"class.std::__1::__tree_node_base"* %58, null
  br i1 %59, label %60, label %68

60:                                               ; preds = %52
  %61 = bitcast %"class.std::__1::__tree_end_node"* %53 to %"class.std::__1::__tree_node_base"*
  %62 = getelementptr inbounds %"class.std::__1::__tree_end_node", %"class.std::__1::__tree_end_node"* %53, i64 2
  %63 = bitcast %"class.std::__1::__tree_end_node"* %62 to %"class.std::__1::__tree_end_node"**
  %64 = load %"class.std::__1::__tree_end_node"*, %"class.std::__1::__tree_end_node"** %63, align 8
  %65 = getelementptr inbounds %"class.std::__1::__tree_end_node", %"class.std::__1::__tree_end_node"* %64, i64 0, i32 0
  %66 = load %"class.std::__1::__tree_node_base"*, %"class.std::__1::__tree_node_base"** %65, align 8
  %67 = icmp eq %"class.std::__1::__tree_node_base"* %66, %61
  br i1 %67, label %84, label %75

68:                                               ; preds = %52, %68
  %69 = phi %"class.std::__1::__tree_node_base"* [ %71, %68 ], [ %58, %52 ]
  %70 = getelementptr inbounds %"class.std::__1::__tree_node_base", %"class.std::__1::__tree_node_base"* %69, i64 0, i32 0, i32 0
  %71 = load %"class.std::__1::__tree_node_base"*, %"class.std::__1::__tree_node_base"** %70, align 8
  %72 = icmp eq %"class.std::__1::__tree_node_base"* %71, null
  br i1 %72, label %73, label %68

73:                                               ; preds = %68
  %74 = getelementptr inbounds %"class.std::__1::__tree_node_base", %"class.std::__1::__tree_node_base"* %69, i64 0, i32 0
  br label %84

75:                                               ; preds = %60, %75
  %76 = phi %"class.std::__1::__tree_end_node"** [ %79, %75 ], [ %63, %60 ]
  %77 = bitcast %"class.std::__1::__tree_end_node"** %76 to %"class.std::__1::__tree_node_base"**
  %78 = load %"class.std::__1::__tree_node_base"*, %"class.std::__1::__tree_node_base"** %77, align 8
  %79 = getelementptr inbounds %"class.std::__1::__tree_node_base", %"class.std::__1::__tree_node_base"* %78, i64 0, i32 2
  %80 = load %"class.std::__1::__tree_end_node"*, %"class.std::__1::__tree_end_node"** %79, align 8
  %81 = getelementptr inbounds %"class.std::__1::__tree_end_node", %"class.std::__1::__tree_end_node"* %80, i64 0, i32 0
  %82 = load %"class.std::__1::__tree_node_base"*, %"class.std::__1::__tree_node_base"** %81, align 8
  %83 = icmp eq %"class.std::__1::__tree_node_base"* %82, %78
  br i1 %83, label %84, label %75

84:                                               ; preds = %75, %73, %60
  %85 = phi %"class.std::__1::__tree_end_node"* [ %74, %73 ], [ %64, %60 ], [ %80, %75 ]
  %86 = icmp eq %"class.std::__1::__tree_end_node"* %85, %38
  br i1 %86, label %87, label %52

87:                                               ; preds = %84, %39
  %88 = getelementptr inbounds %"class.v8::internal::ZoneMultiset.1344", %"class.v8::internal::ZoneMultiset.1344"* %40, i64 1
  %89 = icmp eq %"class.v8::internal::ZoneMultiset.1344"* %88, %33
  br i1 %89, label %90, label %39

90:                                               ; preds = %87
  %91 = bitcast %"class.v8::internal::ZoneMultiset.1344"** %31 to i64*
  %92 = ptrtoint %"class.v8::internal::ZoneMultiset.1344"* %33 to i64
  store i64 %92, i64* %91, align 8
  br label %93

93:                                               ; preds = %4, %90
  ret void
}

; Function Attrs: nounwind ssp uwtable
define linkonce_odr hidden %"class.std::__1::__tree_end_node"* @_ZNSt3__16__treeIPN2v88internal8compiler9LiveRangeENS3_19LinearScanAllocator25InactiveLiveRangeOrderingENS2_13ZoneAllocatorIS5_EEE20__emplace_hint_multiIJRKS5_EEENS_15__tree_iteratorIS5_PNS_11__tree_nodeIS5_PvEElEENS_21__tree_const_iteratorIS5_SI_lEEDpOT_(%"class.std::__1::__tree.1346"*, %"class.std::__1::__tree_end_node"*, %"class.v8::internal::compiler::LiveRange"** dereferenceable(8)) local_unnamed_addr #0 comdat align 2 {
  %4 = getelementptr inbounds %"class.std::__1::__tree.1346", %"class.std::__1::__tree.1346"* %0, i64 0, i32 1, i32 1, i32 0, i32 0
  %5 = load %"class.v8::internal::Zone"*, %"class.v8::internal::Zone"** %4, align 8, !noalias !258
  %6 = getelementptr inbounds %"class.v8::internal::Zone", %"class.v8::internal::Zone"* %5, i64 0, i32 2
  %7 = load i64, i64* %6, align 8, !noalias !258
  %8 = getelementptr inbounds %"class.v8::internal::Zone", %"class.v8::internal::Zone"* %5, i64 0, i32 3
  %9 = load i64, i64* %8, align 8, !noalias !258
  %10 = sub i64 %9, %7
  %11 = icmp ult i64 %10, 40
  br i1 %11, label %12, label %14, !prof !2

12:                                               ; preds = %3
  %13 = tail call i64 @_ZN2v88internal4Zone9NewExpandEm(%"class.v8::internal::Zone"* %5, i64 40) #16, !noalias !258
  br label %16

14:                                               ; preds = %3
  %15 = add i64 %7, 40
  store i64 %15, i64* %6, align 8, !noalias !258
  br label %16

16:                                               ; preds = %12, %14
  %17 = phi i64 [ %13, %12 ], [ %7, %14 ]
  %18 = inttoptr i64 %17 to %"class.std::__1::__tree_node.1501"*
  %19 = getelementptr inbounds %"class.std::__1::__tree_node.1501", %"class.std::__1::__tree_node.1501"* %18, i64 0, i32 1
  %20 = bitcast %"class.v8::internal::compiler::LiveRange"** %2 to i64*
  %21 = load i64, i64* %20, align 8, !noalias !258
  %22 = bitcast %"class.v8::internal::compiler::LiveRange"** %19 to i64*
  store i64 %21, i64* %22, align 8, !noalias !258
  %23 = ptrtoint %"class.std::__1::__tree_end_node"* %1 to i64
  %24 = getelementptr inbounds %"class.std::__1::__tree.1346", %"class.std::__1::__tree.1346"* %0, i64 0, i32 1, i32 0, i32 0
  %25 = icmp eq %"class.std::__1::__tree_end_node"* %24, %1
  %26 = inttoptr i64 %21 to %"class.v8::internal::compiler::LiveRange"*
  br i1 %25, label %36, label %27

27:                                               ; preds = %16
  %28 = getelementptr inbounds %"class.std::__1::__tree_end_node", %"class.std::__1::__tree_end_node"* %1, i64 4
  %29 = bitcast %"class.std::__1::__tree_end_node"* %28 to %"class.v8::internal::compiler::LiveRange"**
  %30 = load %"class.v8::internal::compiler::LiveRange"*, %"class.v8::internal::compiler::LiveRange"** %29, align 8
  %31 = getelementptr inbounds %"class.v8::internal::compiler::LiveRange", %"class.v8::internal::compiler::LiveRange"* %30, i64 0, i32 11, i32 0
  %32 = load i32, i32* %31, align 8
  %33 = getelementptr inbounds %"class.v8::internal::compiler::LiveRange", %"class.v8::internal::compiler::LiveRange"* %26, i64 0, i32 11, i32 0
  %34 = load i32, i32* %33, align 8
  %35 = icmp slt i32 %32, %34
  br i1 %35, label %110, label %36

36:                                               ; preds = %27, %16
  %37 = getelementptr inbounds %"class.std::__1::__tree.1346", %"class.std::__1::__tree.1346"* %0, i64 0, i32 0
  %38 = load %"class.std::__1::__tree_end_node"*, %"class.std::__1::__tree_end_node"** %37, align 8
  %39 = icmp eq %"class.std::__1::__tree_end_node"* %38, %1
  %40 = getelementptr inbounds %"class.std::__1::__tree_end_node", %"class.std::__1::__tree_end_node"* %1, i64 0, i32 0
  %41 = load %"class.std::__1::__tree_node_base"*, %"class.std::__1::__tree_node_base"** %40, align 8
  br i1 %39, label %71, label %42

42:                                               ; preds = %36
  %43 = icmp eq %"class.std::__1::__tree_node_base"* %41, null
  br i1 %43, label %49, label %44

44:                                               ; preds = %42, %44
  %45 = phi %"class.std::__1::__tree_node_base"* [ %47, %44 ], [ %41, %42 ]
  %46 = getelementptr inbounds %"class.std::__1::__tree_node_base", %"class.std::__1::__tree_node_base"* %45, i64 0, i32 1
  %47 = load %"class.std::__1::__tree_node_base"*, %"class.std::__1::__tree_node_base"** %46, align 8
  %48 = icmp eq %"class.std::__1::__tree_node_base"* %47, null
  br i1 %48, label %60, label %44

49:                                               ; preds = %42, %49
  %50 = phi %"class.std::__1::__tree_end_node"* [ %54, %49 ], [ %1, %42 ]
  %51 = bitcast %"class.std::__1::__tree_end_node"* %50 to %"class.std::__1::__tree_node_base"*
  %52 = getelementptr inbounds %"class.std::__1::__tree_end_node", %"class.std::__1::__tree_end_node"* %50, i64 2
  %53 = bitcast %"class.std::__1::__tree_end_node"* %52 to %"class.std::__1::__tree_end_node"**
  %54 = load %"class.std::__1::__tree_end_node"*, %"class.std::__1::__tree_end_node"** %53, align 8
  %55 = getelementptr inbounds %"class.std::__1::__tree_end_node", %"class.std::__1::__tree_end_node"* %54, i64 0, i32 0
  %56 = load %"class.std::__1::__tree_node_base"*, %"class.std::__1::__tree_node_base"** %55, align 8
  %57 = icmp eq %"class.std::__1::__tree_node_base"* %56, %51
  br i1 %57, label %49, label %58

58:                                               ; preds = %49
  %59 = bitcast %"class.std::__1::__tree_end_node"* %54 to %"class.std::__1::__tree_node_base"*
  br label %60

60:                                               ; preds = %44, %58
  %61 = phi %"class.std::__1::__tree_node_base"* [ %59, %58 ], [ %45, %44 ]
  %62 = ptrtoint %"class.std::__1::__tree_node_base"* %61 to i64
  %63 = getelementptr inbounds %"class.std::__1::__tree_node_base", %"class.std::__1::__tree_node_base"* %61, i64 1
  %64 = bitcast %"class.std::__1::__tree_node_base"* %63 to %"class.v8::internal::compiler::LiveRange"**
  %65 = load %"class.v8::internal::compiler::LiveRange"*, %"class.v8::internal::compiler::LiveRange"** %64, align 8
  %66 = getelementptr inbounds %"class.v8::internal::compiler::LiveRange", %"class.v8::internal::compiler::LiveRange"* %26, i64 0, i32 11, i32 0
  %67 = load i32, i32* %66, align 8
  %68 = getelementptr inbounds %"class.v8::internal::compiler::LiveRange", %"class.v8::internal::compiler::LiveRange"* %65, i64 0, i32 11, i32 0
  %69 = load i32, i32* %68, align 8
  %70 = icmp slt i32 %67, %69
  br i1 %70, label %79, label %71

71:                                               ; preds = %36, %60
  %72 = phi i64 [ %62, %60 ], [ %23, %36 ]
  %73 = icmp eq %"class.std::__1::__tree_node_base"* %41, null
  br i1 %73, label %74, label %76

74:                                               ; preds = %71
  %75 = getelementptr inbounds %"class.std::__1::__tree_end_node", %"class.std::__1::__tree_end_node"* %1, i64 0, i32 0
  br label %141

76:                                               ; preds = %71
  %77 = inttoptr i64 %72 to %"class.std::__1::__tree_node_base"*
  %78 = getelementptr inbounds %"class.std::__1::__tree_node_base", %"class.std::__1::__tree_node_base"* %77, i64 0, i32 1
  br label %141

79:                                               ; preds = %60
  %80 = bitcast %"class.std::__1::__tree_end_node"* %24 to %"class.std::__1::__tree_node.1501"**
  %81 = load %"class.std::__1::__tree_node.1501"*, %"class.std::__1::__tree_node.1501"** %80, align 8
  %82 = icmp eq %"class.std::__1::__tree_node.1501"* %81, null
  br i1 %82, label %107, label %83

83:                                               ; preds = %79, %104
  %84 = phi %"class.std::__1::__tree_node.1501"* [ %106, %104 ], [ %81, %79 ]
  %85 = getelementptr inbounds %"class.std::__1::__tree_node.1501", %"class.std::__1::__tree_node.1501"* %84, i64 0, i32 1
  %86 = load %"class.v8::internal::compiler::LiveRange"*, %"class.v8::internal::compiler::LiveRange"** %85, align 8
  %87 = getelementptr inbounds %"class.v8::internal::compiler::LiveRange", %"class.v8::internal::compiler::LiveRange"* %86, i64 0, i32 11, i32 0
  %88 = load i32, i32* %87, align 8
  %89 = icmp slt i32 %67, %88
  br i1 %89, label %90, label %97

90:                                               ; preds = %83
  %91 = getelementptr inbounds %"class.std::__1::__tree_node.1501", %"class.std::__1::__tree_node.1501"* %84, i64 0, i32 0, i32 0, i32 0
  %92 = load %"class.std::__1::__tree_node_base"*, %"class.std::__1::__tree_node_base"** %91, align 8
  %93 = icmp eq %"class.std::__1::__tree_node_base"* %92, null
  br i1 %93, label %94, label %104

94:                                               ; preds = %90
  %95 = getelementptr inbounds %"class.std::__1::__tree_node.1501", %"class.std::__1::__tree_node.1501"* %84, i64 0, i32 0, i32 0, i32 0
  %96 = ptrtoint %"class.std::__1::__tree_node.1501"* %84 to i64
  br label %141

97:                                               ; preds = %83
  %98 = getelementptr inbounds %"class.std::__1::__tree_node.1501", %"class.std::__1::__tree_node.1501"* %84, i64 0, i32 0, i32 1
  %99 = load %"class.std::__1::__tree_node_base"*, %"class.std::__1::__tree_node_base"** %98, align 8
  %100 = icmp eq %"class.std::__1::__tree_node_base"* %99, null
  br i1 %100, label %101, label %104

101:                                              ; preds = %97
  %102 = getelementptr inbounds %"class.std::__1::__tree_node.1501", %"class.std::__1::__tree_node.1501"* %84, i64 0, i32 0, i32 1
  %103 = ptrtoint %"class.std::__1::__tree_node.1501"* %84 to i64
  br label %141

104:                                              ; preds = %97, %90
  %105 = phi %"class.std::__1::__tree_node_base"* [ %92, %90 ], [ %99, %97 ]
  %106 = bitcast %"class.std::__1::__tree_node_base"* %105 to %"class.std::__1::__tree_node.1501"*
  br label %83

107:                                              ; preds = %79
  %108 = ptrtoint %"class.std::__1::__tree_end_node"* %24 to i64
  %109 = getelementptr inbounds %"class.std::__1::__tree_end_node", %"class.std::__1::__tree_end_node"* %24, i64 0, i32 0
  br label %141

110:                                              ; preds = %27
  %111 = bitcast %"class.std::__1::__tree_end_node"* %24 to %"class.std::__1::__tree_node.1501"**
  %112 = load %"class.std::__1::__tree_node.1501"*, %"class.std::__1::__tree_node.1501"** %111, align 8
  %113 = icmp eq %"class.std::__1::__tree_node.1501"* %112, null
  br i1 %113, label %138, label %114

114:                                              ; preds = %110, %135
  %115 = phi %"class.std::__1::__tree_node.1501"* [ %137, %135 ], [ %112, %110 ]
  %116 = getelementptr inbounds %"class.std::__1::__tree_node.1501", %"class.std::__1::__tree_node.1501"* %115, i64 0, i32 1
  %117 = load %"class.v8::internal::compiler::LiveRange"*, %"class.v8::internal::compiler::LiveRange"** %116, align 8
  %118 = getelementptr inbounds %"class.v8::internal::compiler::LiveRange", %"class.v8::internal::compiler::LiveRange"* %117, i64 0, i32 11, i32 0
  %119 = load i32, i32* %118, align 8
  %120 = icmp slt i32 %119, %34
  br i1 %120, label %121, label %128

121:                                              ; preds = %114
  %122 = getelementptr inbounds %"class.std::__1::__tree_node.1501", %"class.std::__1::__tree_node.1501"* %115, i64 0, i32 0, i32 1
  %123 = load %"class.std::__1::__tree_node_base"*, %"class.std::__1::__tree_node_base"** %122, align 8
  %124 = icmp eq %"class.std::__1::__tree_node_base"* %123, null
  br i1 %124, label %125, label %135

125:                                              ; preds = %121
  %126 = getelementptr inbounds %"class.std::__1::__tree_node.1501", %"class.std::__1::__tree_node.1501"* %115, i64 0, i32 0, i32 1
  %127 = ptrtoint %"class.std::__1::__tree_node.1501"* %115 to i64
  br label %141

128:                                              ; preds = %114
  %129 = getelementptr inbounds %"class.std::__1::__tree_node.1501", %"class.std::__1::__tree_node.1501"* %115, i64 0, i32 0, i32 0, i32 0
  %130 = load %"class.std::__1::__tree_node_base"*, %"class.std::__1::__tree_node_base"** %129, align 8
  %131 = icmp eq %"class.std::__1::__tree_node_base"* %130, null
  br i1 %131, label %132, label %135

132:                                              ; preds = %128
  %133 = getelementptr inbounds %"class.std::__1::__tree_node.1501", %"class.std::__1::__tree_node.1501"* %115, i64 0, i32 0, i32 0, i32 0
  %134 = ptrtoint %"class.std::__1::__tree_node.1501"* %115 to i64
  br label %141

135:                                              ; preds = %128, %121
  %136 = phi %"class.std::__1::__tree_node_base"* [ %123, %121 ], [ %130, %128 ]
  %137 = bitcast %"class.std::__1::__tree_node_base"* %136 to %"class.std::__1::__tree_node.1501"*
  br label %114

138:                                              ; preds = %110
  %139 = ptrtoint %"class.std::__1::__tree_end_node"* %24 to i64
  %140 = getelementptr inbounds %"class.std::__1::__tree_end_node", %"class.std::__1::__tree_end_node"* %24, i64 0, i32 0
  br label %141

141:                                              ; preds = %74, %76, %94, %101, %107, %125, %132, %138
  %142 = phi i64 [ %23, %74 ], [ %72, %76 ], [ %108, %107 ], [ %96, %94 ], [ %103, %101 ], [ %139, %138 ], [ %127, %125 ], [ %134, %132 ]
  %143 = phi %"class.std::__1::__tree_node_base"** [ %75, %74 ], [ %78, %76 ], [ %109, %107 ], [ %95, %94 ], [ %102, %101 ], [ %140, %138 ], [ %126, %125 ], [ %133, %132 ]
  %144 = inttoptr i64 %142 to %"class.std::__1::__tree_end_node"*
  %145 = inttoptr i64 %17 to %"class.std::__1::__tree_node_base"*
  %146 = getelementptr inbounds %"class.std::__1::__tree_node_base", %"class.std::__1::__tree_node_base"* %145, i64 0, i32 2
  %147 = inttoptr i64 %17 to i8*
  tail call void @llvm.memset.p0i8.i64(i8* align 8 %147, i8 0, i64 16, i1 false) #16
  store %"class.std::__1::__tree_end_node"* %144, %"class.std::__1::__tree_end_node"** %146, align 8
  store %"class.std::__1::__tree_node_base"* %145, %"class.std::__1::__tree_node_base"** %143, align 8
  %148 = getelementptr inbounds %"class.std::__1::__tree.1346", %"class.std::__1::__tree.1346"* %0, i64 0, i32 0
  %149 = load %"class.std::__1::__tree_end_node"*, %"class.std::__1::__tree_end_node"** %148, align 8
  %150 = getelementptr inbounds %"class.std::__1::__tree_end_node", %"class.std::__1::__tree_end_node"* %149, i64 0, i32 0
  %151 = load %"class.std::__1::__tree_node_base"*, %"class.std::__1::__tree_node_base"** %150, align 8
  %152 = icmp eq %"class.std::__1::__tree_node_base"* %151, null
  br i1 %152, label %157, label %153

153:                                              ; preds = %141
  %154 = ptrtoint %"class.std::__1::__tree_node_base"* %151 to i64
  %155 = bitcast %"class.std::__1::__tree.1346"* %0 to i64*
  store i64 %154, i64* %155, align 8
  %156 = load %"class.std::__1::__tree_node_base"*, %"class.std::__1::__tree_node_base"** %143, align 8
  br label %157

157:                                              ; preds = %141, %153
  %158 = phi %"class.std::__1::__tree_node_base"* [ %145, %141 ], [ %156, %153 ]
  %159 = getelementptr inbounds %"class.std::__1::__tree.1346", %"class.std::__1::__tree.1346"* %0, i64 0, i32 1, i32 0, i32 0, i32 0
  %160 = load %"class.std::__1::__tree_node_base"*, %"class.std::__1::__tree_node_base"** %159, align 8
  tail call void @_ZNSt3__127__tree_balance_after_insertIPNS_16__tree_node_baseIPvEEEEvT_S5_(%"class.std::__1::__tree_node_base"* %160, %"class.std::__1::__tree_node_base"* %158) #16
  %161 = getelementptr inbounds %"class.std::__1::__tree.1346", %"class.std::__1::__tree.1346"* %0, i64 0, i32 2, i32 0, i32 0
  %162 = load i64, i64* %161, align 8
  %163 = add i64 %162, 1
  store i64 %163, i64* %161, align 8
  %164 = getelementptr inbounds %"class.std::__1::__tree_node.1501", %"class.std::__1::__tree_node.1501"* %18, i64 0, i32 0, i32 0
  ret %"class.std::__1::__tree_end_node"* %164
}

; Function Attrs: nounwind ssp uwtable
define linkonce_odr hidden { %"class.std::__1::__tree_end_node"*, %"class.std::__1::__tree_end_node"* } @_ZNSt3__16__treeIPN2v88internal8compiler9LiveRangeENS3_19LinearScanAllocator26UnhandledLiveRangeOrderingENS2_13ZoneAllocatorIS5_EEE19__equal_range_multiIS5_EENS_4pairINS_15__tree_iteratorIS5_PNS_11__tree_nodeIS5_PvEElEESI_EERKT_(%"class.std::__1::__tree.1338"*, %"class.v8::internal::compiler::LiveRange"** dereferenceable(8)) local_unnamed_addr #0 comdat align 2 {
  %3 = getelementptr inbounds %"class.std::__1::__tree.1338", %"class.std::__1::__tree.1338"* %0, i64 0, i32 1, i32 0, i32 0
  %4 = bitcast %"class.std::__1::__tree_end_node"* %3 to %"class.std::__1::__tree_node.1501"**
  %5 = load %"class.std::__1::__tree_node.1501"*, %"class.std::__1::__tree_node.1501"** %4, align 8
  %6 = icmp eq %"class.std::__1::__tree_node.1501"* %5, null
  br i1 %6, label %291, label %7

7:                                                ; preds = %2
  %8 = load %"class.v8::internal::compiler::LiveRange"*, %"class.v8::internal::compiler::LiveRange"** %1, align 8
  %9 = getelementptr inbounds %"class.v8::internal::compiler::LiveRange", %"class.v8::internal::compiler::LiveRange"* %8, i64 0, i32 3
  %10 = load %"class.v8::internal::compiler::UseInterval"*, %"class.v8::internal::compiler::UseInterval"** %9, align 8
  %11 = getelementptr inbounds %"class.v8::internal::compiler::UseInterval", %"class.v8::internal::compiler::UseInterval"* %10, i64 0, i32 0, i32 0
  %12 = load i32, i32* %11, align 8
  %13 = getelementptr inbounds %"class.v8::internal::compiler::LiveRange", %"class.v8::internal::compiler::LiveRange"* %8, i64 0, i32 1
  %14 = getelementptr inbounds %"class.v8::internal::compiler::LiveRange", %"class.v8::internal::compiler::LiveRange"* %8, i64 0, i32 4
  %15 = getelementptr inbounds %"class.v8::internal::compiler::LiveRange", %"class.v8::internal::compiler::LiveRange"* %8, i64 0, i32 5
  br label %16

16:                                               ; preds = %7, %286
  %17 = phi %"class.std::__1::__tree_node.1501"* [ %5, %7 ], [ %289, %286 ]
  %18 = phi %"class.std::__1::__tree_end_node"* [ %3, %7 ], [ %287, %286 ]
  %19 = getelementptr inbounds %"class.std::__1::__tree_node.1501", %"class.std::__1::__tree_node.1501"* %17, i64 0, i32 1
  %20 = load %"class.v8::internal::compiler::LiveRange"*, %"class.v8::internal::compiler::LiveRange"** %19, align 8
  %21 = getelementptr inbounds %"class.v8::internal::compiler::LiveRange", %"class.v8::internal::compiler::LiveRange"* %20, i64 0, i32 3
  %22 = load %"class.v8::internal::compiler::UseInterval"*, %"class.v8::internal::compiler::UseInterval"** %21, align 8
  %23 = getelementptr inbounds %"class.v8::internal::compiler::UseInterval", %"class.v8::internal::compiler::UseInterval"* %22, i64 0, i32 0, i32 0
  %24 = load i32, i32* %23, align 8
  %25 = icmp eq i32 %12, %24
  br i1 %25, label %26, label %70

26:                                               ; preds = %16
  %27 = load i32, i32* %13, align 4
  %28 = lshr i32 %27, 22
  %29 = and i32 %28, 63
  %30 = getelementptr inbounds %"class.v8::internal::compiler::LiveRange", %"class.v8::internal::compiler::LiveRange"* %20, i64 0, i32 1
  %31 = load i32, i32* %30, align 4
  %32 = lshr i32 %31, 22
  %33 = and i32 %32, 63
  %34 = icmp ult i32 %29, %33
  br i1 %34, label %74, label %35

35:                                               ; preds = %26
  %36 = icmp ugt i32 %29, %33
  br i1 %36, label %114, label %37

37:                                               ; preds = %35
  %38 = load %"class.v8::internal::compiler::UsePosition"*, %"class.v8::internal::compiler::UsePosition"** %14, align 8
  %39 = getelementptr inbounds %"class.v8::internal::compiler::LiveRange", %"class.v8::internal::compiler::LiveRange"* %20, i64 0, i32 4
  %40 = load %"class.v8::internal::compiler::UsePosition"*, %"class.v8::internal::compiler::UsePosition"** %39, align 8
  %41 = icmp eq %"class.v8::internal::compiler::UsePosition"* %38, %40
  br i1 %41, label %42, label %51

42:                                               ; preds = %37
  %43 = load %"class.v8::internal::compiler::TopLevelLiveRange"*, %"class.v8::internal::compiler::TopLevelLiveRange"** %15, align 8
  %44 = getelementptr inbounds %"class.v8::internal::compiler::TopLevelLiveRange", %"class.v8::internal::compiler::TopLevelLiveRange"* %43, i64 0, i32 1
  %45 = load i32, i32* %44, align 4
  %46 = getelementptr inbounds %"class.v8::internal::compiler::LiveRange", %"class.v8::internal::compiler::LiveRange"* %20, i64 0, i32 5
  %47 = load %"class.v8::internal::compiler::TopLevelLiveRange"*, %"class.v8::internal::compiler::TopLevelLiveRange"** %46, align 8
  %48 = getelementptr inbounds %"class.v8::internal::compiler::TopLevelLiveRange", %"class.v8::internal::compiler::TopLevelLiveRange"* %47, i64 0, i32 1
  %49 = load i32, i32* %48, align 4
  %50 = icmp slt i32 %45, %49
  br i1 %50, label %74, label %77

51:                                               ; preds = %37
  %52 = icmp eq %"class.v8::internal::compiler::UsePosition"* %38, null
  br i1 %52, label %77, label %53

53:                                               ; preds = %51
  %54 = icmp eq %"class.v8::internal::compiler::UsePosition"* %40, null
  br i1 %54, label %74, label %55

55:                                               ; preds = %53
  %56 = getelementptr inbounds %"class.v8::internal::compiler::UsePosition", %"class.v8::internal::compiler::UsePosition"* %38, i64 0, i32 3, i32 0
  %57 = load i32, i32* %56, align 8
  %58 = getelementptr inbounds %"class.v8::internal::compiler::UsePosition", %"class.v8::internal::compiler::UsePosition"* %40, i64 0, i32 3, i32 0
  %59 = load i32, i32* %58, align 8
  %60 = icmp eq i32 %57, %59
  br i1 %60, label %61, label %72

61:                                               ; preds = %55
  %62 = load %"class.v8::internal::compiler::TopLevelLiveRange"*, %"class.v8::internal::compiler::TopLevelLiveRange"** %15, align 8
  %63 = getelementptr inbounds %"class.v8::internal::compiler::TopLevelLiveRange", %"class.v8::internal::compiler::TopLevelLiveRange"* %62, i64 0, i32 1
  %64 = load i32, i32* %63, align 4
  %65 = getelementptr inbounds %"class.v8::internal::compiler::LiveRange", %"class.v8::internal::compiler::LiveRange"* %20, i64 0, i32 5
  %66 = load %"class.v8::internal::compiler::TopLevelLiveRange"*, %"class.v8::internal::compiler::TopLevelLiveRange"** %65, align 8
  %67 = getelementptr inbounds %"class.v8::internal::compiler::TopLevelLiveRange", %"class.v8::internal::compiler::TopLevelLiveRange"* %66, i64 0, i32 1
  %68 = load i32, i32* %67, align 4
  %69 = icmp slt i32 %64, %68
  br i1 %69, label %74, label %77

70:                                               ; preds = %16
  %71 = icmp slt i32 %12, %24
  br i1 %71, label %74, label %110

72:                                               ; preds = %55
  %73 = icmp slt i32 %57, %59
  br i1 %73, label %74, label %77

74:                                               ; preds = %53, %26, %61, %42, %70, %72
  %75 = getelementptr inbounds %"class.std::__1::__tree_node.1501", %"class.std::__1::__tree_node.1501"* %17, i64 0, i32 0, i32 0
  %76 = bitcast %"class.std::__1::__tree_node.1501"* %17 to %"class.std::__1::__tree_node.1501"**
  br label %286

77:                                               ; preds = %72, %42, %61, %51
  %78 = getelementptr inbounds %"class.v8::internal::compiler::LiveRange", %"class.v8::internal::compiler::LiveRange"* %20, i64 0, i32 4
  %79 = load %"class.v8::internal::compiler::UsePosition"*, %"class.v8::internal::compiler::UsePosition"** %78, align 8
  %80 = load %"class.v8::internal::compiler::UsePosition"*, %"class.v8::internal::compiler::UsePosition"** %14, align 8
  %81 = icmp eq %"class.v8::internal::compiler::UsePosition"* %79, %80
  br i1 %81, label %82, label %91

82:                                               ; preds = %77
  %83 = getelementptr inbounds %"class.v8::internal::compiler::LiveRange", %"class.v8::internal::compiler::LiveRange"* %20, i64 0, i32 5
  %84 = load %"class.v8::internal::compiler::TopLevelLiveRange"*, %"class.v8::internal::compiler::TopLevelLiveRange"** %83, align 8
  %85 = getelementptr inbounds %"class.v8::internal::compiler::TopLevelLiveRange", %"class.v8::internal::compiler::TopLevelLiveRange"* %84, i64 0, i32 1
  %86 = load i32, i32* %85, align 4
  %87 = load %"class.v8::internal::compiler::TopLevelLiveRange"*, %"class.v8::internal::compiler::TopLevelLiveRange"** %15, align 8
  %88 = getelementptr inbounds %"class.v8::internal::compiler::TopLevelLiveRange", %"class.v8::internal::compiler::TopLevelLiveRange"* %87, i64 0, i32 1
  %89 = load i32, i32* %88, align 4
  %90 = icmp slt i32 %86, %89
  br i1 %90, label %114, label %117

91:                                               ; preds = %77
  %92 = icmp eq %"class.v8::internal::compiler::UsePosition"* %79, null
  br i1 %92, label %117, label %93

93:                                               ; preds = %91
  %94 = icmp eq %"class.v8::internal::compiler::UsePosition"* %80, null
  br i1 %94, label %114, label %95

95:                                               ; preds = %93
  %96 = getelementptr inbounds %"class.v8::internal::compiler::UsePosition", %"class.v8::internal::compiler::UsePosition"* %79, i64 0, i32 3, i32 0
  %97 = load i32, i32* %96, align 8
  %98 = getelementptr inbounds %"class.v8::internal::compiler::UsePosition", %"class.v8::internal::compiler::UsePosition"* %80, i64 0, i32 3, i32 0
  %99 = load i32, i32* %98, align 8
  %100 = icmp eq i32 %97, %99
  br i1 %100, label %101, label %112

101:                                              ; preds = %95
  %102 = getelementptr inbounds %"class.v8::internal::compiler::LiveRange", %"class.v8::internal::compiler::LiveRange"* %20, i64 0, i32 5
  %103 = load %"class.v8::internal::compiler::TopLevelLiveRange"*, %"class.v8::internal::compiler::TopLevelLiveRange"** %102, align 8
  %104 = getelementptr inbounds %"class.v8::internal::compiler::TopLevelLiveRange", %"class.v8::internal::compiler::TopLevelLiveRange"* %103, i64 0, i32 1
  %105 = load i32, i32* %104, align 4
  %106 = load %"class.v8::internal::compiler::TopLevelLiveRange"*, %"class.v8::internal::compiler::TopLevelLiveRange"** %15, align 8
  %107 = getelementptr inbounds %"class.v8::internal::compiler::TopLevelLiveRange", %"class.v8::internal::compiler::TopLevelLiveRange"* %106, i64 0, i32 1
  %108 = load i32, i32* %107, align 4
  %109 = icmp slt i32 %105, %108
  br i1 %109, label %114, label %117

110:                                              ; preds = %70
  %111 = icmp slt i32 %24, %12
  br i1 %111, label %114, label %117

112:                                              ; preds = %95
  %113 = icmp slt i32 %97, %99
  br i1 %113, label %114, label %117

114:                                              ; preds = %35, %93, %101, %82, %110, %112
  %115 = getelementptr inbounds %"class.std::__1::__tree_node.1501", %"class.std::__1::__tree_node.1501"* %17, i64 0, i32 0, i32 1
  %116 = bitcast %"class.std::__1::__tree_node_base"** %115 to %"class.std::__1::__tree_node.1501"**
  br label %286

117:                                              ; preds = %91, %101, %82, %110, %112
  %118 = getelementptr inbounds %"class.std::__1::__tree_node.1501", %"class.std::__1::__tree_node.1501"* %17, i64 0, i32 0, i32 0
  %119 = bitcast %"class.std::__1::__tree_node.1501"* %17 to %"class.std::__1::__tree_node.1501"**
  %120 = load %"class.std::__1::__tree_node.1501"*, %"class.std::__1::__tree_node.1501"** %119, align 8
  %121 = icmp eq %"class.std::__1::__tree_node.1501"* %120, null
  br i1 %121, label %199, label %122

122:                                              ; preds = %117, %194
  %123 = phi %"class.std::__1::__tree_end_node"* [ %196, %194 ], [ %118, %117 ]
  %124 = phi %"class.std::__1::__tree_node.1501"* [ %197, %194 ], [ %120, %117 ]
  %125 = getelementptr inbounds %"class.std::__1::__tree_node.1501", %"class.std::__1::__tree_node.1501"* %124, i64 0, i32 1
  %126 = load %"class.v8::internal::compiler::LiveRange"*, %"class.v8::internal::compiler::LiveRange"** %125, align 8
  %127 = getelementptr inbounds %"class.v8::internal::compiler::LiveRange", %"class.v8::internal::compiler::LiveRange"* %126, i64 0, i32 3
  %128 = load %"class.v8::internal::compiler::UseInterval"*, %"class.v8::internal::compiler::UseInterval"** %127, align 8
  %129 = getelementptr inbounds %"class.v8::internal::compiler::UseInterval", %"class.v8::internal::compiler::UseInterval"* %128, i64 0, i32 0, i32 0
  %130 = load i32, i32* %129, align 8
  %131 = icmp eq i32 %130, %12
  br i1 %131, label %132, label %180

132:                                              ; preds = %122
  %133 = getelementptr inbounds %"class.v8::internal::compiler::LiveRange", %"class.v8::internal::compiler::LiveRange"* %126, i64 0, i32 1
  %134 = load i32, i32* %133, align 4
  %135 = lshr i32 %134, 22
  %136 = and i32 %135, 63
  %137 = load i32, i32* %13, align 4
  %138 = lshr i32 %137, 22
  %139 = and i32 %138, 63
  %140 = icmp ult i32 %136, %139
  br i1 %140, label %184, label %141

141:                                              ; preds = %132
  %142 = icmp ugt i32 %136, %139
  br i1 %142, label %191, label %143

143:                                              ; preds = %141
  %144 = getelementptr inbounds %"class.v8::internal::compiler::LiveRange", %"class.v8::internal::compiler::LiveRange"* %126, i64 0, i32 4
  %145 = load %"class.v8::internal::compiler::UsePosition"*, %"class.v8::internal::compiler::UsePosition"** %144, align 8
  %146 = load %"class.v8::internal::compiler::UsePosition"*, %"class.v8::internal::compiler::UsePosition"** %14, align 8
  %147 = icmp eq %"class.v8::internal::compiler::UsePosition"* %145, %146
  br i1 %147, label %148, label %159

148:                                              ; preds = %143
  %149 = getelementptr inbounds %"class.v8::internal::compiler::LiveRange", %"class.v8::internal::compiler::LiveRange"* %126, i64 0, i32 5
  %150 = load %"class.v8::internal::compiler::TopLevelLiveRange"*, %"class.v8::internal::compiler::TopLevelLiveRange"** %149, align 8
  %151 = getelementptr inbounds %"class.v8::internal::compiler::TopLevelLiveRange", %"class.v8::internal::compiler::TopLevelLiveRange"* %150, i64 0, i32 1
  %152 = load i32, i32* %151, align 4
  %153 = load %"class.v8::internal::compiler::TopLevelLiveRange"*, %"class.v8::internal::compiler::TopLevelLiveRange"** %15, align 8
  %154 = getelementptr inbounds %"class.v8::internal::compiler::TopLevelLiveRange", %"class.v8::internal::compiler::TopLevelLiveRange"* %153, i64 0, i32 1
  %155 = load i32, i32* %154, align 4
  %156 = icmp slt i32 %152, %155
  %157 = getelementptr inbounds %"class.std::__1::__tree_node.1501", %"class.std::__1::__tree_node.1501"* %124, i64 0, i32 0, i32 1
  %158 = bitcast %"class.std::__1::__tree_node_base"** %157 to %"class.std::__1::__tree_node.1501"**
  br i1 %156, label %194, label %191

159:                                              ; preds = %143
  %160 = icmp eq %"class.v8::internal::compiler::UsePosition"* %145, null
  br i1 %160, label %191, label %161

161:                                              ; preds = %159
  %162 = icmp eq %"class.v8::internal::compiler::UsePosition"* %146, null
  br i1 %162, label %184, label %163

163:                                              ; preds = %161
  %164 = getelementptr inbounds %"class.v8::internal::compiler::UsePosition", %"class.v8::internal::compiler::UsePosition"* %145, i64 0, i32 3, i32 0
  %165 = load i32, i32* %164, align 8
  %166 = getelementptr inbounds %"class.v8::internal::compiler::UsePosition", %"class.v8::internal::compiler::UsePosition"* %146, i64 0, i32 3, i32 0
  %167 = load i32, i32* %166, align 8
  %168 = icmp eq i32 %165, %167
  br i1 %168, label %169, label %187

169:                                              ; preds = %163
  %170 = getelementptr inbounds %"class.v8::internal::compiler::LiveRange", %"class.v8::internal::compiler::LiveRange"* %126, i64 0, i32 5
  %171 = load %"class.v8::internal::compiler::TopLevelLiveRange"*, %"class.v8::internal::compiler::TopLevelLiveRange"** %170, align 8
  %172 = getelementptr inbounds %"class.v8::internal::compiler::TopLevelLiveRange", %"class.v8::internal::compiler::TopLevelLiveRange"* %171, i64 0, i32 1
  %173 = load i32, i32* %172, align 4
  %174 = load %"class.v8::internal::compiler::TopLevelLiveRange"*, %"class.v8::internal::compiler::TopLevelLiveRange"** %15, align 8
  %175 = getelementptr inbounds %"class.v8::internal::compiler::TopLevelLiveRange", %"class.v8::internal::compiler::TopLevelLiveRange"* %174, i64 0, i32 1
  %176 = load i32, i32* %175, align 4
  %177 = icmp slt i32 %173, %176
  %178 = getelementptr inbounds %"class.std::__1::__tree_node.1501", %"class.std::__1::__tree_node.1501"* %124, i64 0, i32 0, i32 1
  %179 = bitcast %"class.std::__1::__tree_node_base"** %178 to %"class.std::__1::__tree_node.1501"**
  br i1 %177, label %194, label %191

180:                                              ; preds = %122
  %181 = icmp slt i32 %130, %12
  %182 = getelementptr inbounds %"class.std::__1::__tree_node.1501", %"class.std::__1::__tree_node.1501"* %124, i64 0, i32 0, i32 1
  %183 = bitcast %"class.std::__1::__tree_node_base"** %182 to %"class.std::__1::__tree_node.1501"**
  br i1 %181, label %194, label %191

184:                                              ; preds = %161, %132
  %185 = getelementptr inbounds %"class.std::__1::__tree_node.1501", %"class.std::__1::__tree_node.1501"* %124, i64 0, i32 0, i32 1
  %186 = bitcast %"class.std::__1::__tree_node_base"** %185 to %"class.std::__1::__tree_node.1501"**
  br label %194

187:                                              ; preds = %163
  %188 = icmp slt i32 %165, %167
  %189 = getelementptr inbounds %"class.std::__1::__tree_node.1501", %"class.std::__1::__tree_node.1501"* %124, i64 0, i32 0, i32 1
  %190 = bitcast %"class.std::__1::__tree_node_base"** %189 to %"class.std::__1::__tree_node.1501"**
  br i1 %188, label %194, label %191

191:                                              ; preds = %187, %180, %169, %159, %148, %141
  %192 = bitcast %"class.std::__1::__tree_node.1501"* %124 to %"class.std::__1::__tree_node.1501"**
  %193 = getelementptr inbounds %"class.std::__1::__tree_node.1501", %"class.std::__1::__tree_node.1501"* %124, i64 0, i32 0, i32 0
  br label %194

194:                                              ; preds = %191, %187, %184, %180, %169, %148
  %195 = phi %"class.std::__1::__tree_node.1501"** [ %192, %191 ], [ %186, %184 ], [ %190, %187 ], [ %183, %180 ], [ %158, %148 ], [ %179, %169 ]
  %196 = phi %"class.std::__1::__tree_end_node"* [ %193, %191 ], [ %123, %184 ], [ %123, %187 ], [ %123, %180 ], [ %123, %148 ], [ %123, %169 ]
  %197 = load %"class.std::__1::__tree_node.1501"*, %"class.std::__1::__tree_node.1501"** %195, align 8
  %198 = icmp eq %"class.std::__1::__tree_node.1501"* %197, null
  br i1 %198, label %199, label %122

199:                                              ; preds = %194, %117
  %200 = phi %"class.std::__1::__tree_end_node"* [ %118, %117 ], [ %196, %194 ]
  %201 = ptrtoint %"class.std::__1::__tree_end_node"* %200 to i64
  %202 = getelementptr inbounds %"class.std::__1::__tree_node.1501", %"class.std::__1::__tree_node.1501"* %17, i64 0, i32 0, i32 1
  %203 = bitcast %"class.std::__1::__tree_node_base"** %202 to %"class.std::__1::__tree_node.1501"**
  %204 = load %"class.std::__1::__tree_node.1501"*, %"class.std::__1::__tree_node.1501"** %203, align 8
  %205 = icmp eq %"class.std::__1::__tree_node.1501"* %204, null
  br i1 %205, label %283, label %206

206:                                              ; preds = %199, %278
  %207 = phi %"class.std::__1::__tree_end_node"* [ %280, %278 ], [ %18, %199 ]
  %208 = phi %"class.std::__1::__tree_node.1501"* [ %281, %278 ], [ %204, %199 ]
  %209 = getelementptr inbounds %"class.std::__1::__tree_node.1501", %"class.std::__1::__tree_node.1501"* %208, i64 0, i32 1
  %210 = load %"class.v8::internal::compiler::LiveRange"*, %"class.v8::internal::compiler::LiveRange"** %209, align 8
  %211 = getelementptr inbounds %"class.v8::internal::compiler::LiveRange", %"class.v8::internal::compiler::LiveRange"* %210, i64 0, i32 3
  %212 = load %"class.v8::internal::compiler::UseInterval"*, %"class.v8::internal::compiler::UseInterval"** %211, align 8
  %213 = getelementptr inbounds %"class.v8::internal::compiler::UseInterval", %"class.v8::internal::compiler::UseInterval"* %212, i64 0, i32 0, i32 0
  %214 = load i32, i32* %213, align 8
  %215 = icmp eq i32 %12, %214
  br i1 %215, label %216, label %264

216:                                              ; preds = %206
  %217 = load i32, i32* %13, align 4
  %218 = lshr i32 %217, 22
  %219 = and i32 %218, 63
  %220 = getelementptr inbounds %"class.v8::internal::compiler::LiveRange", %"class.v8::internal::compiler::LiveRange"* %210, i64 0, i32 1
  %221 = load i32, i32* %220, align 4
  %222 = lshr i32 %221, 22
  %223 = and i32 %222, 63
  %224 = icmp ult i32 %219, %223
  br i1 %224, label %268, label %225

225:                                              ; preds = %216
  %226 = icmp ugt i32 %219, %223
  br i1 %226, label %275, label %227

227:                                              ; preds = %225
  %228 = load %"class.v8::internal::compiler::UsePosition"*, %"class.v8::internal::compiler::UsePosition"** %14, align 8
  %229 = getelementptr inbounds %"class.v8::internal::compiler::LiveRange", %"class.v8::internal::compiler::LiveRange"* %210, i64 0, i32 4
  %230 = load %"class.v8::internal::compiler::UsePosition"*, %"class.v8::internal::compiler::UsePosition"** %229, align 8
  %231 = icmp eq %"class.v8::internal::compiler::UsePosition"* %228, %230
  br i1 %231, label %232, label %243

232:                                              ; preds = %227
  %233 = load %"class.v8::internal::compiler::TopLevelLiveRange"*, %"class.v8::internal::compiler::TopLevelLiveRange"** %15, align 8
  %234 = getelementptr inbounds %"class.v8::internal::compiler::TopLevelLiveRange", %"class.v8::internal::compiler::TopLevelLiveRange"* %233, i64 0, i32 1
  %235 = load i32, i32* %234, align 4
  %236 = getelementptr inbounds %"class.v8::internal::compiler::LiveRange", %"class.v8::internal::compiler::LiveRange"* %210, i64 0, i32 5
  %237 = load %"class.v8::internal::compiler::TopLevelLiveRange"*, %"class.v8::internal::compiler::TopLevelLiveRange"** %236, align 8
  %238 = getelementptr inbounds %"class.v8::internal::compiler::TopLevelLiveRange", %"class.v8::internal::compiler::TopLevelLiveRange"* %237, i64 0, i32 1
  %239 = load i32, i32* %238, align 4
  %240 = icmp slt i32 %235, %239
  %241 = getelementptr inbounds %"class.std::__1::__tree_node.1501", %"class.std::__1::__tree_node.1501"* %208, i64 0, i32 0, i32 0
  %242 = bitcast %"class.std::__1::__tree_node.1501"* %208 to %"class.std::__1::__tree_node.1501"**
  br i1 %240, label %278, label %275

243:                                              ; preds = %227
  %244 = icmp eq %"class.v8::internal::compiler::UsePosition"* %228, null
  br i1 %244, label %275, label %245

245:                                              ; preds = %243
  %246 = icmp eq %"class.v8::internal::compiler::UsePosition"* %230, null
  br i1 %246, label %268, label %247

247:                                              ; preds = %245
  %248 = getelementptr inbounds %"class.v8::internal::compiler::UsePosition", %"class.v8::internal::compiler::UsePosition"* %228, i64 0, i32 3, i32 0
  %249 = load i32, i32* %248, align 8
  %250 = getelementptr inbounds %"class.v8::internal::compiler::UsePosition", %"class.v8::internal::compiler::UsePosition"* %230, i64 0, i32 3, i32 0
  %251 = load i32, i32* %250, align 8
  %252 = icmp eq i32 %249, %251
  br i1 %252, label %253, label %271

253:                                              ; preds = %247
  %254 = load %"class.v8::internal::compiler::TopLevelLiveRange"*, %"class.v8::internal::compiler::TopLevelLiveRange"** %15, align 8
  %255 = getelementptr inbounds %"class.v8::internal::compiler::TopLevelLiveRange", %"class.v8::internal::compiler::TopLevelLiveRange"* %254, i64 0, i32 1
  %256 = load i32, i32* %255, align 4
  %257 = getelementptr inbounds %"class.v8::internal::compiler::LiveRange", %"class.v8::internal::compiler::LiveRange"* %210, i64 0, i32 5
  %258 = load %"class.v8::internal::compiler::TopLevelLiveRange"*, %"class.v8::internal::compiler::TopLevelLiveRange"** %257, align 8
  %259 = getelementptr inbounds %"class.v8::internal::compiler::TopLevelLiveRange", %"class.v8::internal::compiler::TopLevelLiveRange"* %258, i64 0, i32 1
  %260 = load i32, i32* %259, align 4
  %261 = icmp slt i32 %256, %260
  %262 = getelementptr inbounds %"class.std::__1::__tree_node.1501", %"class.std::__1::__tree_node.1501"* %208, i64 0, i32 0, i32 0
  %263 = bitcast %"class.std::__1::__tree_node.1501"* %208 to %"class.std::__1::__tree_node.1501"**
  br i1 %261, label %278, label %275

264:                                              ; preds = %206
  %265 = icmp slt i32 %12, %214
  %266 = getelementptr inbounds %"class.std::__1::__tree_node.1501", %"class.std::__1::__tree_node.1501"* %208, i64 0, i32 0, i32 0
  %267 = bitcast %"class.std::__1::__tree_node.1501"* %208 to %"class.std::__1::__tree_node.1501"**
  br i1 %265, label %278, label %275

268:                                              ; preds = %245, %216
  %269 = getelementptr inbounds %"class.std::__1::__tree_node.1501", %"class.std::__1::__tree_node.1501"* %208, i64 0, i32 0, i32 0
  %270 = bitcast %"class.std::__1::__tree_node.1501"* %208 to %"class.std::__1::__tree_node.1501"**
  br label %278

271:                                              ; preds = %247
  %272 = icmp slt i32 %249, %251
  %273 = getelementptr inbounds %"class.std::__1::__tree_node.1501", %"class.std::__1::__tree_node.1501"* %208, i64 0, i32 0, i32 0
  %274 = bitcast %"class.std::__1::__tree_node.1501"* %208 to %"class.std::__1::__tree_node.1501"**
  br i1 %272, label %278, label %275

275:                                              ; preds = %271, %264, %253, %243, %232, %225
  %276 = getelementptr inbounds %"class.std::__1::__tree_node.1501", %"class.std::__1::__tree_node.1501"* %208, i64 0, i32 0, i32 1
  %277 = bitcast %"class.std::__1::__tree_node_base"** %276 to %"class.std::__1::__tree_node.1501"**
  br label %278

278:                                              ; preds = %275, %271, %268, %264, %253, %232
  %279 = phi %"class.std::__1::__tree_node.1501"** [ %277, %275 ], [ %270, %268 ], [ %274, %271 ], [ %267, %264 ], [ %242, %232 ], [ %263, %253 ]
  %280 = phi %"class.std::__1::__tree_end_node"* [ %207, %275 ], [ %269, %268 ], [ %273, %271 ], [ %266, %264 ], [ %241, %232 ], [ %262, %253 ]
  %281 = load %"class.std::__1::__tree_node.1501"*, %"class.std::__1::__tree_node.1501"** %279, align 8
  %282 = icmp eq %"class.std::__1::__tree_node.1501"* %281, null
  br i1 %282, label %283, label %206

283:                                              ; preds = %278, %199
  %284 = phi %"class.std::__1::__tree_end_node"* [ %18, %199 ], [ %280, %278 ]
  %285 = ptrtoint %"class.std::__1::__tree_end_node"* %284 to i64
  br label %294

286:                                              ; preds = %114, %74
  %287 = phi %"class.std::__1::__tree_end_node"* [ %75, %74 ], [ %18, %114 ]
  %288 = phi %"class.std::__1::__tree_node.1501"** [ %76, %74 ], [ %116, %114 ]
  %289 = load %"class.std::__1::__tree_node.1501"*, %"class.std::__1::__tree_node.1501"** %288, align 8
  %290 = icmp eq %"class.std::__1::__tree_node.1501"* %289, null
  br i1 %290, label %291, label %16

291:                                              ; preds = %286, %2
  %292 = phi %"class.std::__1::__tree_end_node"* [ %3, %2 ], [ %287, %286 ]
  %293 = ptrtoint %"class.std::__1::__tree_end_node"* %292 to i64
  br label %294

294:                                              ; preds = %291, %283
  %295 = phi i64 [ %293, %291 ], [ %201, %283 ]
  %296 = phi i64 [ %293, %291 ], [ %285, %283 ]
  %297 = inttoptr i64 %295 to %"class.std::__1::__tree_end_node"*
  %298 = insertvalue { %"class.std::__1::__tree_end_node"*, %"class.std::__1::__tree_end_node"* } undef, %"class.std::__1::__tree_end_node"* %297, 0
  %299 = inttoptr i64 %296 to %"class.std::__1::__tree_end_node"*
  %300 = insertvalue { %"class.std::__1::__tree_end_node"*, %"class.std::__1::__tree_end_node"* } %298, %"class.std::__1::__tree_end_node"* %299, 1
  ret { %"class.std::__1::__tree_end_node"*, %"class.std::__1::__tree_end_node"* } %300
}

; Function Attrs: nounwind ssp uwtable
define linkonce_odr hidden void @_ZNSt3__113__tree_removeIPNS_16__tree_node_baseIPvEEEEvT_S5_(%"class.std::__1::__tree_node_base"*, %"class.std::__1::__tree_node_base"*) local_unnamed_addr #0 comdat {
  %3 = getelementptr inbounds %"class.std::__1::__tree_node_base", %"class.std::__1::__tree_node_base"* %1, i64 0, i32 0, i32 0
  %4 = load %"class.std::__1::__tree_node_base"*, %"class.std::__1::__tree_node_base"** %3, align 8
  %5 = icmp eq %"class.std::__1::__tree_node_base"* %4, null
  br i1 %5, label %17, label %6

6:                                                ; preds = %2
  %7 = getelementptr inbounds %"class.std::__1::__tree_node_base", %"class.std::__1::__tree_node_base"* %1, i64 0, i32 1
  %8 = load %"class.std::__1::__tree_node_base"*, %"class.std::__1::__tree_node_base"** %7, align 8
  %9 = icmp eq %"class.std::__1::__tree_node_base"* %8, null
  br i1 %9, label %15, label %10

10:                                               ; preds = %6, %10
  %11 = phi %"class.std::__1::__tree_node_base"* [ %13, %10 ], [ %8, %6 ]
  %12 = getelementptr inbounds %"class.std::__1::__tree_node_base", %"class.std::__1::__tree_node_base"* %11, i64 0, i32 0, i32 0
  %13 = load %"class.std::__1::__tree_node_base"*, %"class.std::__1::__tree_node_base"** %12, align 8
  %14 = icmp eq %"class.std::__1::__tree_node_base"* %13, null
  br i1 %14, label %17, label %10

15:                                               ; preds = %6
  %16 = getelementptr inbounds %"class.std::__1::__tree_node_base", %"class.std::__1::__tree_node_base"* %1, i64 0, i32 0, i32 0
  br label %23

17:                                               ; preds = %10, %2
  %18 = phi %"class.std::__1::__tree_node_base"* [ %1, %2 ], [ %11, %10 ]
  %19 = getelementptr inbounds %"class.std::__1::__tree_node_base", %"class.std::__1::__tree_node_base"* %18, i64 0, i32 0, i32 0
  %20 = getelementptr inbounds %"class.std::__1::__tree_node_base", %"class.std::__1::__tree_node_base"* %18, i64 0, i32 1
  %21 = load %"class.std::__1::__tree_node_base"*, %"class.std::__1::__tree_node_base"** %20, align 8
  %22 = icmp eq %"class.std::__1::__tree_node_base"* %21, null
  br i1 %22, label %32, label %23

23:                                               ; preds = %15, %17
  %24 = phi %"class.std::__1::__tree_node_base"** [ %19, %17 ], [ %16, %15 ]
  %25 = phi %"class.std::__1::__tree_node_base"* [ %18, %17 ], [ %1, %15 ]
  %26 = phi %"class.std::__1::__tree_node_base"* [ %21, %17 ], [ %4, %15 ]
  %27 = getelementptr inbounds %"class.std::__1::__tree_node_base", %"class.std::__1::__tree_node_base"* %25, i64 0, i32 2
  %28 = bitcast %"class.std::__1::__tree_end_node"** %27 to i64*
  %29 = load i64, i64* %28, align 8
  %30 = getelementptr inbounds %"class.std::__1::__tree_node_base", %"class.std::__1::__tree_node_base"* %26, i64 0, i32 2
  %31 = bitcast %"class.std::__1::__tree_end_node"** %30 to i64*
  store i64 %29, i64* %31, align 8
  br label %32

32:                                               ; preds = %17, %23
  %33 = phi %"class.std::__1::__tree_node_base"** [ %24, %23 ], [ %19, %17 ]
  %34 = phi %"class.std::__1::__tree_node_base"* [ %25, %23 ], [ %18, %17 ]
  %35 = phi i1 [ true, %23 ], [ false, %17 ]
  %36 = phi %"class.std::__1::__tree_node_base"* [ %26, %23 ], [ null, %17 ]
  %37 = getelementptr inbounds %"class.std::__1::__tree_node_base", %"class.std::__1::__tree_node_base"* %34, i64 0, i32 2
  %38 = load %"class.std::__1::__tree_end_node"*, %"class.std::__1::__tree_end_node"** %37, align 8
  %39 = getelementptr inbounds %"class.std::__1::__tree_end_node", %"class.std::__1::__tree_end_node"* %38, i64 0, i32 0
  %40 = load %"class.std::__1::__tree_node_base"*, %"class.std::__1::__tree_node_base"** %39, align 8
  %41 = icmp eq %"class.std::__1::__tree_node_base"* %40, %34
  br i1 %41, label %42, label %48

42:                                               ; preds = %32
  store %"class.std::__1::__tree_node_base"* %36, %"class.std::__1::__tree_node_base"** %39, align 8
  %43 = icmp eq %"class.std::__1::__tree_node_base"* %34, %0
  br i1 %43, label %55, label %44

44:                                               ; preds = %42
  %45 = bitcast %"class.std::__1::__tree_end_node"** %37 to %"class.std::__1::__tree_node_base"**
  %46 = load %"class.std::__1::__tree_node_base"*, %"class.std::__1::__tree_node_base"** %45, align 8
  %47 = getelementptr inbounds %"class.std::__1::__tree_node_base", %"class.std::__1::__tree_node_base"* %46, i64 0, i32 1
  br label %52

48:                                               ; preds = %32
  %49 = getelementptr inbounds %"class.std::__1::__tree_end_node", %"class.std::__1::__tree_end_node"* %38, i64 1, i32 0
  store %"class.std::__1::__tree_node_base"* %36, %"class.std::__1::__tree_node_base"** %49, align 8
  %50 = load %"class.std::__1::__tree_end_node"*, %"class.std::__1::__tree_end_node"** %37, align 8
  %51 = getelementptr inbounds %"class.std::__1::__tree_end_node", %"class.std::__1::__tree_end_node"* %50, i64 0, i32 0
  br label %52

52:                                               ; preds = %48, %44
  %53 = phi %"class.std::__1::__tree_node_base"** [ %47, %44 ], [ %51, %48 ]
  %54 = load %"class.std::__1::__tree_node_base"*, %"class.std::__1::__tree_node_base"** %53, align 8
  br label %55

55:                                               ; preds = %52, %42
  %56 = phi %"class.std::__1::__tree_node_base"* [ null, %42 ], [ %54, %52 ]
  %57 = phi %"class.std::__1::__tree_node_base"* [ %36, %42 ], [ %0, %52 ]
  %58 = getelementptr inbounds %"class.std::__1::__tree_node_base", %"class.std::__1::__tree_node_base"* %34, i64 0, i32 3
  %59 = load i8, i8* %58, align 8, !range !3
  %60 = icmp ne i8 %59, 0
  %61 = icmp eq %"class.std::__1::__tree_node_base"* %34, %1
  br i1 %61, label %90, label %62

62:                                               ; preds = %55
  %63 = getelementptr inbounds %"class.std::__1::__tree_node_base", %"class.std::__1::__tree_node_base"* %1, i64 0, i32 2
  %64 = bitcast %"class.std::__1::__tree_end_node"** %63 to i64*
  %65 = load i64, i64* %64, align 8
  %66 = bitcast %"class.std::__1::__tree_end_node"** %37 to i64*
  store i64 %65, i64* %66, align 8
  %67 = load %"class.std::__1::__tree_end_node"*, %"class.std::__1::__tree_end_node"** %63, align 8
  %68 = getelementptr inbounds %"class.std::__1::__tree_end_node", %"class.std::__1::__tree_end_node"* %67, i64 0, i32 0
  %69 = load %"class.std::__1::__tree_node_base"*, %"class.std::__1::__tree_node_base"** %68, align 8
  %70 = icmp eq %"class.std::__1::__tree_node_base"* %69, %1
  %71 = inttoptr i64 %65 to %"class.std::__1::__tree_node_base"*
  %72 = getelementptr inbounds %"class.std::__1::__tree_node_base", %"class.std::__1::__tree_node_base"* %71, i64 0, i32 1
  %73 = inttoptr i64 %65 to %"class.std::__1::__tree_end_node"*
  %74 = getelementptr inbounds %"class.std::__1::__tree_end_node", %"class.std::__1::__tree_end_node"* %73, i64 0, i32 0
  %75 = select i1 %70, %"class.std::__1::__tree_node_base"** %74, %"class.std::__1::__tree_node_base"** %72
  store %"class.std::__1::__tree_node_base"* %34, %"class.std::__1::__tree_node_base"** %75, align 8
  %76 = load %"class.std::__1::__tree_node_base"*, %"class.std::__1::__tree_node_base"** %3, align 8
  store %"class.std::__1::__tree_node_base"* %76, %"class.std::__1::__tree_node_base"** %33, align 8
  %77 = getelementptr inbounds %"class.std::__1::__tree_node_base", %"class.std::__1::__tree_node_base"* %34, i64 0, i32 0
  %78 = getelementptr inbounds %"class.std::__1::__tree_node_base", %"class.std::__1::__tree_node_base"* %76, i64 0, i32 2
  store %"class.std::__1::__tree_end_node"* %77, %"class.std::__1::__tree_end_node"** %78, align 8
  %79 = getelementptr inbounds %"class.std::__1::__tree_node_base", %"class.std::__1::__tree_node_base"* %1, i64 0, i32 1
  %80 = load %"class.std::__1::__tree_node_base"*, %"class.std::__1::__tree_node_base"** %79, align 8
  %81 = getelementptr inbounds %"class.std::__1::__tree_node_base", %"class.std::__1::__tree_node_base"* %34, i64 0, i32 1
  store %"class.std::__1::__tree_node_base"* %80, %"class.std::__1::__tree_node_base"** %81, align 8
  %82 = icmp eq %"class.std::__1::__tree_node_base"* %80, null
  br i1 %82, label %85, label %83

83:                                               ; preds = %62
  %84 = getelementptr inbounds %"class.std::__1::__tree_node_base", %"class.std::__1::__tree_node_base"* %80, i64 0, i32 2
  store %"class.std::__1::__tree_end_node"* %77, %"class.std::__1::__tree_end_node"** %84, align 8
  br label %85

85:                                               ; preds = %62, %83
  %86 = getelementptr inbounds %"class.std::__1::__tree_node_base", %"class.std::__1::__tree_node_base"* %1, i64 0, i32 3
  %87 = load i8, i8* %86, align 8, !range !3
  store i8 %87, i8* %58, align 8
  %88 = icmp eq %"class.std::__1::__tree_node_base"* %57, %1
  %89 = select i1 %88, %"class.std::__1::__tree_node_base"* %34, %"class.std::__1::__tree_node_base"* %57
  br label %90

90:                                               ; preds = %85, %55
  %91 = phi %"class.std::__1::__tree_node_base"* [ %57, %55 ], [ %89, %85 ]
  %92 = icmp ne %"class.std::__1::__tree_node_base"* %91, null
  %93 = and i1 %60, %92
  br i1 %93, label %94, label %382

94:                                               ; preds = %90
  br i1 %35, label %95, label %97

95:                                               ; preds = %94
  %96 = getelementptr inbounds %"class.std::__1::__tree_node_base", %"class.std::__1::__tree_node_base"* %36, i64 0, i32 3
  store i8 1, i8* %96, align 8
  br label %382

97:                                               ; preds = %94, %371
  %98 = phi %"class.std::__1::__tree_node_base"* [ %381, %371 ], [ %56, %94 ]
  %99 = phi %"class.std::__1::__tree_node_base"* [ %373, %371 ], [ %91, %94 ]
  %100 = getelementptr inbounds %"class.std::__1::__tree_node_base", %"class.std::__1::__tree_node_base"* %98, i64 0, i32 2
  %101 = load %"class.std::__1::__tree_end_node"*, %"class.std::__1::__tree_end_node"** %100, align 8
  %102 = getelementptr inbounds %"class.std::__1::__tree_end_node", %"class.std::__1::__tree_end_node"* %101, i64 0, i32 0
  %103 = load %"class.std::__1::__tree_node_base"*, %"class.std::__1::__tree_node_base"** %102, align 8
  %104 = icmp eq %"class.std::__1::__tree_node_base"* %103, %98
  %105 = getelementptr inbounds %"class.std::__1::__tree_node_base", %"class.std::__1::__tree_node_base"* %98, i64 0, i32 3
  %106 = load i8, i8* %105, align 8, !range !3
  %107 = icmp ne i8 %106, 0
  br i1 %104, label %242, label %108

108:                                              ; preds = %97
  br i1 %107, label %141, label %109

109:                                              ; preds = %108
  store i8 1, i8* %105, align 8
  %110 = bitcast %"class.std::__1::__tree_end_node"** %100 to %"class.std::__1::__tree_node_base"**
  %111 = getelementptr inbounds %"class.std::__1::__tree_end_node", %"class.std::__1::__tree_end_node"* %101, i64 3
  %112 = bitcast %"class.std::__1::__tree_end_node"* %111 to i8*
  store i8 0, i8* %112, align 8
  %113 = load %"class.std::__1::__tree_node_base"*, %"class.std::__1::__tree_node_base"** %110, align 8
  %114 = getelementptr inbounds %"class.std::__1::__tree_node_base", %"class.std::__1::__tree_node_base"* %113, i64 0, i32 1
  %115 = load %"class.std::__1::__tree_node_base"*, %"class.std::__1::__tree_node_base"** %114, align 8
  %116 = getelementptr inbounds %"class.std::__1::__tree_node_base", %"class.std::__1::__tree_node_base"* %115, i64 0, i32 0, i32 0
  %117 = load %"class.std::__1::__tree_node_base"*, %"class.std::__1::__tree_node_base"** %116, align 8
  store %"class.std::__1::__tree_node_base"* %117, %"class.std::__1::__tree_node_base"** %114, align 8
  %118 = icmp eq %"class.std::__1::__tree_node_base"* %117, null
  br i1 %118, label %122, label %119

119:                                              ; preds = %109
  %120 = getelementptr inbounds %"class.std::__1::__tree_node_base", %"class.std::__1::__tree_node_base"* %113, i64 0, i32 0
  %121 = getelementptr inbounds %"class.std::__1::__tree_node_base", %"class.std::__1::__tree_node_base"* %117, i64 0, i32 2
  store %"class.std::__1::__tree_end_node"* %120, %"class.std::__1::__tree_end_node"** %121, align 8
  br label %122

122:                                              ; preds = %119, %109
  %123 = getelementptr inbounds %"class.std::__1::__tree_node_base", %"class.std::__1::__tree_node_base"* %113, i64 0, i32 2
  %124 = bitcast %"class.std::__1::__tree_end_node"** %123 to i64*
  %125 = load i64, i64* %124, align 8
  %126 = getelementptr inbounds %"class.std::__1::__tree_node_base", %"class.std::__1::__tree_node_base"* %115, i64 0, i32 2
  %127 = bitcast %"class.std::__1::__tree_end_node"** %126 to i64*
  store i64 %125, i64* %127, align 8
  %128 = load %"class.std::__1::__tree_end_node"*, %"class.std::__1::__tree_end_node"** %123, align 8
  %129 = getelementptr inbounds %"class.std::__1::__tree_end_node", %"class.std::__1::__tree_end_node"* %128, i64 0, i32 0
  %130 = load %"class.std::__1::__tree_node_base"*, %"class.std::__1::__tree_node_base"** %129, align 8
  %131 = icmp eq %"class.std::__1::__tree_node_base"* %130, %113
  %132 = getelementptr inbounds %"class.std::__1::__tree_end_node", %"class.std::__1::__tree_end_node"* %128, i64 1, i32 0
  %133 = select i1 %131, %"class.std::__1::__tree_node_base"** %129, %"class.std::__1::__tree_node_base"** %132
  store %"class.std::__1::__tree_node_base"* %115, %"class.std::__1::__tree_node_base"** %133, align 8
  store %"class.std::__1::__tree_node_base"* %113, %"class.std::__1::__tree_node_base"** %116, align 8
  %134 = getelementptr inbounds %"class.std::__1::__tree_node_base", %"class.std::__1::__tree_node_base"* %115, i64 0, i32 0
  store %"class.std::__1::__tree_end_node"* %134, %"class.std::__1::__tree_end_node"** %123, align 8
  %135 = getelementptr inbounds %"class.std::__1::__tree_node_base", %"class.std::__1::__tree_node_base"* %98, i64 0, i32 0, i32 0
  %136 = load %"class.std::__1::__tree_node_base"*, %"class.std::__1::__tree_node_base"** %135, align 8
  %137 = icmp eq %"class.std::__1::__tree_node_base"* %99, %136
  %138 = select i1 %137, %"class.std::__1::__tree_node_base"* %98, %"class.std::__1::__tree_node_base"* %99
  %139 = getelementptr inbounds %"class.std::__1::__tree_node_base", %"class.std::__1::__tree_node_base"* %136, i64 0, i32 1
  %140 = load %"class.std::__1::__tree_node_base"*, %"class.std::__1::__tree_node_base"** %139, align 8
  br label %141

141:                                              ; preds = %122, %108
  %142 = phi %"class.std::__1::__tree_node_base"* [ %98, %108 ], [ %140, %122 ]
  %143 = phi %"class.std::__1::__tree_node_base"* [ %99, %108 ], [ %138, %122 ]
  %144 = getelementptr inbounds %"class.std::__1::__tree_node_base", %"class.std::__1::__tree_node_base"* %142, i64 0, i32 0, i32 0
  %145 = load %"class.std::__1::__tree_node_base"*, %"class.std::__1::__tree_node_base"** %144, align 8
  %146 = icmp eq %"class.std::__1::__tree_node_base"* %145, null
  br i1 %146, label %151, label %147

147:                                              ; preds = %141
  %148 = getelementptr inbounds %"class.std::__1::__tree_node_base", %"class.std::__1::__tree_node_base"* %145, i64 0, i32 3
  %149 = load i8, i8* %148, align 8, !range !3
  %150 = icmp eq i8 %149, 0
  br i1 %150, label %172, label %151

151:                                              ; preds = %147, %141
  %152 = getelementptr inbounds %"class.std::__1::__tree_node_base", %"class.std::__1::__tree_node_base"* %142, i64 0, i32 1
  %153 = load %"class.std::__1::__tree_node_base"*, %"class.std::__1::__tree_node_base"** %152, align 8
  %154 = icmp eq %"class.std::__1::__tree_node_base"* %153, null
  br i1 %154, label %159, label %155

155:                                              ; preds = %151
  %156 = getelementptr inbounds %"class.std::__1::__tree_node_base", %"class.std::__1::__tree_node_base"* %153, i64 0, i32 3
  %157 = load i8, i8* %156, align 8, !range !3
  %158 = icmp eq i8 %157, 0
  br i1 %158, label %177, label %159

159:                                              ; preds = %155, %151
  %160 = getelementptr inbounds %"class.std::__1::__tree_node_base", %"class.std::__1::__tree_node_base"* %142, i64 0, i32 3
  store i8 0, i8* %160, align 8
  %161 = getelementptr inbounds %"class.std::__1::__tree_node_base", %"class.std::__1::__tree_node_base"* %142, i64 0, i32 2
  %162 = bitcast %"class.std::__1::__tree_end_node"** %161 to %"class.std::__1::__tree_node_base"**
  %163 = load %"class.std::__1::__tree_node_base"*, %"class.std::__1::__tree_node_base"** %162, align 8
  %164 = icmp eq %"class.std::__1::__tree_node_base"* %163, %143
  br i1 %164, label %169, label %165

165:                                              ; preds = %159
  %166 = getelementptr inbounds %"class.std::__1::__tree_node_base", %"class.std::__1::__tree_node_base"* %163, i64 0, i32 3
  %167 = load i8, i8* %166, align 8, !range !3
  %168 = icmp eq i8 %167, 0
  br i1 %168, label %169, label %371

169:                                              ; preds = %165, %159
  %170 = phi %"class.std::__1::__tree_node_base"* [ %163, %165 ], [ %143, %159 ]
  %171 = getelementptr inbounds %"class.std::__1::__tree_node_base", %"class.std::__1::__tree_node_base"* %170, i64 0, i32 3
  store i8 1, i8* %171, align 8
  br label %382

172:                                              ; preds = %147
  %173 = getelementptr inbounds %"class.std::__1::__tree_node_base", %"class.std::__1::__tree_node_base"* %142, i64 0, i32 0, i32 0
  %174 = getelementptr inbounds %"class.std::__1::__tree_node_base", %"class.std::__1::__tree_node_base"* %142, i64 0, i32 1
  %175 = load %"class.std::__1::__tree_node_base"*, %"class.std::__1::__tree_node_base"** %174, align 8
  %176 = icmp eq %"class.std::__1::__tree_node_base"* %175, null
  br i1 %176, label %185, label %179

177:                                              ; preds = %155
  %178 = getelementptr inbounds %"class.std::__1::__tree_node_base", %"class.std::__1::__tree_node_base"* %142, i64 0, i32 0, i32 0
  br label %179

179:                                              ; preds = %177, %172
  %180 = phi %"class.std::__1::__tree_node_base"** [ %173, %172 ], [ %178, %177 ]
  %181 = phi %"class.std::__1::__tree_node_base"* [ %175, %172 ], [ %153, %177 ]
  %182 = getelementptr inbounds %"class.std::__1::__tree_node_base", %"class.std::__1::__tree_node_base"* %181, i64 0, i32 3
  %183 = load i8, i8* %182, align 8, !range !3
  %184 = icmp eq i8 %183, 0
  br i1 %184, label %209, label %185

185:                                              ; preds = %179, %172
  %186 = phi %"class.std::__1::__tree_node_base"** [ %180, %179 ], [ %173, %172 ]
  %187 = getelementptr inbounds %"class.std::__1::__tree_node_base", %"class.std::__1::__tree_node_base"* %145, i64 0, i32 3
  store i8 1, i8* %187, align 8
  %188 = getelementptr inbounds %"class.std::__1::__tree_node_base", %"class.std::__1::__tree_node_base"* %142, i64 0, i32 3
  store i8 0, i8* %188, align 8
  %189 = load %"class.std::__1::__tree_node_base"*, %"class.std::__1::__tree_node_base"** %186, align 8
  %190 = getelementptr inbounds %"class.std::__1::__tree_node_base", %"class.std::__1::__tree_node_base"* %189, i64 0, i32 1
  %191 = load %"class.std::__1::__tree_node_base"*, %"class.std::__1::__tree_node_base"** %190, align 8
  store %"class.std::__1::__tree_node_base"* %191, %"class.std::__1::__tree_node_base"** %186, align 8
  %192 = icmp eq %"class.std::__1::__tree_node_base"* %191, null
  br i1 %192, label %196, label %193

193:                                              ; preds = %185
  %194 = getelementptr inbounds %"class.std::__1::__tree_node_base", %"class.std::__1::__tree_node_base"* %142, i64 0, i32 0
  %195 = getelementptr inbounds %"class.std::__1::__tree_node_base", %"class.std::__1::__tree_node_base"* %191, i64 0, i32 2
  store %"class.std::__1::__tree_end_node"* %194, %"class.std::__1::__tree_end_node"** %195, align 8
  br label %196

196:                                              ; preds = %193, %185
  %197 = getelementptr inbounds %"class.std::__1::__tree_node_base", %"class.std::__1::__tree_node_base"* %142, i64 0, i32 2
  %198 = bitcast %"class.std::__1::__tree_end_node"** %197 to i64*
  %199 = load i64, i64* %198, align 8
  %200 = getelementptr inbounds %"class.std::__1::__tree_node_base", %"class.std::__1::__tree_node_base"* %189, i64 0, i32 2
  %201 = bitcast %"class.std::__1::__tree_end_node"** %200 to i64*
  store i64 %199, i64* %201, align 8
  %202 = load %"class.std::__1::__tree_end_node"*, %"class.std::__1::__tree_end_node"** %197, align 8
  %203 = getelementptr inbounds %"class.std::__1::__tree_end_node", %"class.std::__1::__tree_end_node"* %202, i64 0, i32 0
  %204 = load %"class.std::__1::__tree_node_base"*, %"class.std::__1::__tree_node_base"** %203, align 8
  %205 = icmp eq %"class.std::__1::__tree_node_base"* %204, %142
  %206 = getelementptr inbounds %"class.std::__1::__tree_end_node", %"class.std::__1::__tree_end_node"* %202, i64 1, i32 0
  %207 = select i1 %205, %"class.std::__1::__tree_node_base"** %203, %"class.std::__1::__tree_node_base"** %206
  store %"class.std::__1::__tree_node_base"* %189, %"class.std::__1::__tree_node_base"** %207, align 8
  store %"class.std::__1::__tree_node_base"* %142, %"class.std::__1::__tree_node_base"** %190, align 8
  %208 = getelementptr inbounds %"class.std::__1::__tree_node_base", %"class.std::__1::__tree_node_base"* %189, i64 0, i32 0
  store %"class.std::__1::__tree_end_node"* %208, %"class.std::__1::__tree_end_node"** %197, align 8
  br label %209

209:                                              ; preds = %179, %196
  %210 = phi %"class.std::__1::__tree_node_base"* [ %189, %196 ], [ %142, %179 ]
  %211 = getelementptr inbounds %"class.std::__1::__tree_node_base", %"class.std::__1::__tree_node_base"* %210, i64 0, i32 2
  %212 = bitcast %"class.std::__1::__tree_end_node"** %211 to %"class.std::__1::__tree_node_base"**
  %213 = load %"class.std::__1::__tree_node_base"*, %"class.std::__1::__tree_node_base"** %212, align 8
  %214 = getelementptr inbounds %"class.std::__1::__tree_node_base", %"class.std::__1::__tree_node_base"* %213, i64 0, i32 3
  %215 = load i8, i8* %214, align 8, !range !3
  %216 = getelementptr inbounds %"class.std::__1::__tree_node_base", %"class.std::__1::__tree_node_base"* %210, i64 0, i32 3
  store i8 %215, i8* %216, align 8
  store i8 1, i8* %214, align 8
  %217 = getelementptr inbounds %"class.std::__1::__tree_node_base", %"class.std::__1::__tree_node_base"* %210, i64 0, i32 1
  %218 = load %"class.std::__1::__tree_node_base"*, %"class.std::__1::__tree_node_base"** %217, align 8
  %219 = getelementptr inbounds %"class.std::__1::__tree_node_base", %"class.std::__1::__tree_node_base"* %218, i64 0, i32 3
  store i8 1, i8* %219, align 8
  %220 = load %"class.std::__1::__tree_node_base"*, %"class.std::__1::__tree_node_base"** %212, align 8
  %221 = getelementptr inbounds %"class.std::__1::__tree_node_base", %"class.std::__1::__tree_node_base"* %220, i64 0, i32 1
  %222 = load %"class.std::__1::__tree_node_base"*, %"class.std::__1::__tree_node_base"** %221, align 8
  %223 = getelementptr inbounds %"class.std::__1::__tree_node_base", %"class.std::__1::__tree_node_base"* %222, i64 0, i32 0, i32 0
  %224 = load %"class.std::__1::__tree_node_base"*, %"class.std::__1::__tree_node_base"** %223, align 8
  store %"class.std::__1::__tree_node_base"* %224, %"class.std::__1::__tree_node_base"** %221, align 8
  %225 = icmp eq %"class.std::__1::__tree_node_base"* %224, null
  br i1 %225, label %229, label %226

226:                                              ; preds = %209
  %227 = getelementptr inbounds %"class.std::__1::__tree_node_base", %"class.std::__1::__tree_node_base"* %220, i64 0, i32 0
  %228 = getelementptr inbounds %"class.std::__1::__tree_node_base", %"class.std::__1::__tree_node_base"* %224, i64 0, i32 2
  store %"class.std::__1::__tree_end_node"* %227, %"class.std::__1::__tree_end_node"** %228, align 8
  br label %229

229:                                              ; preds = %226, %209
  %230 = getelementptr inbounds %"class.std::__1::__tree_node_base", %"class.std::__1::__tree_node_base"* %220, i64 0, i32 2
  %231 = bitcast %"class.std::__1::__tree_end_node"** %230 to i64*
  %232 = load i64, i64* %231, align 8
  %233 = getelementptr inbounds %"class.std::__1::__tree_node_base", %"class.std::__1::__tree_node_base"* %222, i64 0, i32 2
  %234 = bitcast %"class.std::__1::__tree_end_node"** %233 to i64*
  store i64 %232, i64* %234, align 8
  %235 = load %"class.std::__1::__tree_end_node"*, %"class.std::__1::__tree_end_node"** %230, align 8
  %236 = getelementptr inbounds %"class.std::__1::__tree_end_node", %"class.std::__1::__tree_end_node"* %235, i64 0, i32 0
  %237 = load %"class.std::__1::__tree_node_base"*, %"class.std::__1::__tree_node_base"** %236, align 8
  %238 = icmp eq %"class.std::__1::__tree_node_base"* %237, %220
  %239 = getelementptr inbounds %"class.std::__1::__tree_end_node", %"class.std::__1::__tree_end_node"* %235, i64 1, i32 0
  %240 = select i1 %238, %"class.std::__1::__tree_node_base"** %236, %"class.std::__1::__tree_node_base"** %239
  store %"class.std::__1::__tree_node_base"* %222, %"class.std::__1::__tree_node_base"** %240, align 8
  store %"class.std::__1::__tree_node_base"* %220, %"class.std::__1::__tree_node_base"** %223, align 8
  %241 = getelementptr inbounds %"class.std::__1::__tree_node_base", %"class.std::__1::__tree_node_base"* %222, i64 0, i32 0
  store %"class.std::__1::__tree_end_node"* %241, %"class.std::__1::__tree_end_node"** %230, align 8
  br label %382

242:                                              ; preds = %97
  br i1 %107, label %275, label %243

243:                                              ; preds = %242
  store i8 1, i8* %105, align 8
  %244 = bitcast %"class.std::__1::__tree_end_node"** %100 to %"class.std::__1::__tree_node_base"**
  %245 = getelementptr inbounds %"class.std::__1::__tree_end_node", %"class.std::__1::__tree_end_node"* %101, i64 3
  %246 = bitcast %"class.std::__1::__tree_end_node"* %245 to i8*
  store i8 0, i8* %246, align 8
  %247 = load %"class.std::__1::__tree_node_base"*, %"class.std::__1::__tree_node_base"** %244, align 8
  %248 = getelementptr inbounds %"class.std::__1::__tree_node_base", %"class.std::__1::__tree_node_base"* %247, i64 0, i32 0, i32 0
  %249 = load %"class.std::__1::__tree_node_base"*, %"class.std::__1::__tree_node_base"** %248, align 8
  %250 = getelementptr inbounds %"class.std::__1::__tree_node_base", %"class.std::__1::__tree_node_base"* %249, i64 0, i32 1
  %251 = load %"class.std::__1::__tree_node_base"*, %"class.std::__1::__tree_node_base"** %250, align 8
  store %"class.std::__1::__tree_node_base"* %251, %"class.std::__1::__tree_node_base"** %248, align 8
  %252 = icmp eq %"class.std::__1::__tree_node_base"* %251, null
  br i1 %252, label %256, label %253

253:                                              ; preds = %243
  %254 = getelementptr inbounds %"class.std::__1::__tree_node_base", %"class.std::__1::__tree_node_base"* %247, i64 0, i32 0
  %255 = getelementptr inbounds %"class.std::__1::__tree_node_base", %"class.std::__1::__tree_node_base"* %251, i64 0, i32 2
  store %"class.std::__1::__tree_end_node"* %254, %"class.std::__1::__tree_end_node"** %255, align 8
  br label %256

256:                                              ; preds = %253, %243
  %257 = getelementptr inbounds %"class.std::__1::__tree_node_base", %"class.std::__1::__tree_node_base"* %247, i64 0, i32 2
  %258 = bitcast %"class.std::__1::__tree_end_node"** %257 to i64*
  %259 = load i64, i64* %258, align 8
  %260 = getelementptr inbounds %"class.std::__1::__tree_node_base", %"class.std::__1::__tree_node_base"* %249, i64 0, i32 2
  %261 = bitcast %"class.std::__1::__tree_end_node"** %260 to i64*
  store i64 %259, i64* %261, align 8
  %262 = load %"class.std::__1::__tree_end_node"*, %"class.std::__1::__tree_end_node"** %257, align 8
  %263 = getelementptr inbounds %"class.std::__1::__tree_end_node", %"class.std::__1::__tree_end_node"* %262, i64 0, i32 0
  %264 = load %"class.std::__1::__tree_node_base"*, %"class.std::__1::__tree_node_base"** %263, align 8
  %265 = icmp eq %"class.std::__1::__tree_node_base"* %264, %247
  %266 = getelementptr inbounds %"class.std::__1::__tree_end_node", %"class.std::__1::__tree_end_node"* %262, i64 1, i32 0
  %267 = select i1 %265, %"class.std::__1::__tree_node_base"** %263, %"class.std::__1::__tree_node_base"** %266
  store %"class.std::__1::__tree_node_base"* %249, %"class.std::__1::__tree_node_base"** %267, align 8
  store %"class.std::__1::__tree_node_base"* %247, %"class.std::__1::__tree_node_base"** %250, align 8
  %268 = getelementptr inbounds %"class.std::__1::__tree_node_base", %"class.std::__1::__tree_node_base"* %249, i64 0, i32 0
  store %"class.std::__1::__tree_end_node"* %268, %"class.std::__1::__tree_end_node"** %257, align 8
  %269 = getelementptr inbounds %"class.std::__1::__tree_node_base", %"class.std::__1::__tree_node_base"* %98, i64 0, i32 1
  %270 = load %"class.std::__1::__tree_node_base"*, %"class.std::__1::__tree_node_base"** %269, align 8
  %271 = icmp eq %"class.std::__1::__tree_node_base"* %99, %270
  %272 = select i1 %271, %"class.std::__1::__tree_node_base"* %98, %"class.std::__1::__tree_node_base"* %99
  %273 = getelementptr inbounds %"class.std::__1::__tree_node_base", %"class.std::__1::__tree_node_base"* %270, i64 0, i32 0, i32 0
  %274 = load %"class.std::__1::__tree_node_base"*, %"class.std::__1::__tree_node_base"** %273, align 8
  br label %275

275:                                              ; preds = %256, %242
  %276 = phi %"class.std::__1::__tree_node_base"* [ %98, %242 ], [ %274, %256 ]
  %277 = phi %"class.std::__1::__tree_node_base"* [ %99, %242 ], [ %272, %256 ]
  %278 = getelementptr inbounds %"class.std::__1::__tree_node_base", %"class.std::__1::__tree_node_base"* %276, i64 0, i32 0, i32 0
  %279 = load %"class.std::__1::__tree_node_base"*, %"class.std::__1::__tree_node_base"** %278, align 8
  %280 = icmp eq %"class.std::__1::__tree_node_base"* %279, null
  br i1 %280, label %285, label %281

281:                                              ; preds = %275
  %282 = getelementptr inbounds %"class.std::__1::__tree_node_base", %"class.std::__1::__tree_node_base"* %279, i64 0, i32 3
  %283 = load i8, i8* %282, align 8, !range !3
  %284 = icmp eq i8 %283, 0
  br i1 %284, label %338, label %285

285:                                              ; preds = %281, %275
  %286 = getelementptr inbounds %"class.std::__1::__tree_node_base", %"class.std::__1::__tree_node_base"* %276, i64 0, i32 1
  %287 = load %"class.std::__1::__tree_node_base"*, %"class.std::__1::__tree_node_base"** %286, align 8
  %288 = icmp eq %"class.std::__1::__tree_node_base"* %287, null
  br i1 %288, label %293, label %289

289:                                              ; preds = %285
  %290 = getelementptr inbounds %"class.std::__1::__tree_node_base", %"class.std::__1::__tree_node_base"* %287, i64 0, i32 3
  %291 = load i8, i8* %290, align 8, !range !3
  %292 = icmp eq i8 %291, 0
  br i1 %292, label %305, label %293

293:                                              ; preds = %289, %285
  %294 = getelementptr inbounds %"class.std::__1::__tree_node_base", %"class.std::__1::__tree_node_base"* %276, i64 0, i32 3
  store i8 0, i8* %294, align 8
  %295 = getelementptr inbounds %"class.std::__1::__tree_node_base", %"class.std::__1::__tree_node_base"* %276, i64 0, i32 2
  %296 = bitcast %"class.std::__1::__tree_end_node"** %295 to %"class.std::__1::__tree_node_base"**
  %297 = load %"class.std::__1::__tree_node_base"*, %"class.std::__1::__tree_node_base"** %296, align 8
  %298 = getelementptr inbounds %"class.std::__1::__tree_node_base", %"class.std::__1::__tree_node_base"* %297, i64 0, i32 3
  %299 = load i8, i8* %298, align 8, !range !3
  %300 = icmp eq i8 %299, 0
  %301 = icmp eq %"class.std::__1::__tree_node_base"* %297, %277
  %302 = or i1 %301, %300
  br i1 %302, label %303, label %371

303:                                              ; preds = %293
  %304 = getelementptr inbounds %"class.std::__1::__tree_node_base", %"class.std::__1::__tree_node_base"* %297, i64 0, i32 3
  store i8 1, i8* %304, align 8
  br label %382

305:                                              ; preds = %289
  br i1 %280, label %313, label %306

306:                                              ; preds = %305
  %307 = getelementptr inbounds %"class.std::__1::__tree_node_base", %"class.std::__1::__tree_node_base"* %279, i64 0, i32 3
  %308 = load i8, i8* %307, align 8, !range !3
  %309 = icmp eq i8 %308, 0
  br i1 %309, label %338, label %310

310:                                              ; preds = %306
  %311 = getelementptr inbounds %"class.std::__1::__tree_node_base", %"class.std::__1::__tree_node_base"* %276, i64 0, i32 1
  %312 = load %"class.std::__1::__tree_node_base"*, %"class.std::__1::__tree_node_base"** %311, align 8
  br label %313

313:                                              ; preds = %310, %305
  %314 = phi %"class.std::__1::__tree_node_base"* [ %312, %310 ], [ %287, %305 ]
  %315 = getelementptr inbounds %"class.std::__1::__tree_node_base", %"class.std::__1::__tree_node_base"* %276, i64 0, i32 1
  %316 = getelementptr inbounds %"class.std::__1::__tree_node_base", %"class.std::__1::__tree_node_base"* %314, i64 0, i32 3
  store i8 1, i8* %316, align 8
  %317 = getelementptr inbounds %"class.std::__1::__tree_node_base", %"class.std::__1::__tree_node_base"* %276, i64 0, i32 3
  store i8 0, i8* %317, align 8
  %318 = load %"class.std::__1::__tree_node_base"*, %"class.std::__1::__tree_node_base"** %315, align 8
  %319 = getelementptr inbounds %"class.std::__1::__tree_node_base", %"class.std::__1::__tree_node_base"* %318, i64 0, i32 0, i32 0
  %320 = load %"class.std::__1::__tree_node_base"*, %"class.std::__1::__tree_node_base"** %319, align 8
  store %"class.std::__1::__tree_node_base"* %320, %"class.std::__1::__tree_node_base"** %315, align 8
  %321 = icmp eq %"class.std::__1::__tree_node_base"* %320, null
  br i1 %321, label %325, label %322

322:                                              ; preds = %313
  %323 = getelementptr inbounds %"class.std::__1::__tree_node_base", %"class.std::__1::__tree_node_base"* %276, i64 0, i32 0
  %324 = getelementptr inbounds %"class.std::__1::__tree_node_base", %"class.std::__1::__tree_node_base"* %320, i64 0, i32 2
  store %"class.std::__1::__tree_end_node"* %323, %"class.std::__1::__tree_end_node"** %324, align 8
  br label %325

325:                                              ; preds = %322, %313
  %326 = getelementptr inbounds %"class.std::__1::__tree_node_base", %"class.std::__1::__tree_node_base"* %276, i64 0, i32 2
  %327 = bitcast %"class.std::__1::__tree_end_node"** %326 to i64*
  %328 = load i64, i64* %327, align 8
  %329 = getelementptr inbounds %"class.std::__1::__tree_node_base", %"class.std::__1::__tree_node_base"* %318, i64 0, i32 2
  %330 = bitcast %"class.std::__1::__tree_end_node"** %329 to i64*
  store i64 %328, i64* %330, align 8
  %331 = load %"class.std::__1::__tree_end_node"*, %"class.std::__1::__tree_end_node"** %326, align 8
  %332 = getelementptr inbounds %"class.std::__1::__tree_end_node", %"class.std::__1::__tree_end_node"* %331, i64 0, i32 0
  %333 = load %"class.std::__1::__tree_node_base"*, %"class.std::__1::__tree_node_base"** %332, align 8
  %334 = icmp eq %"class.std::__1::__tree_node_base"* %333, %276
  %335 = getelementptr inbounds %"class.std::__1::__tree_end_node", %"class.std::__1::__tree_end_node"* %331, i64 1, i32 0
  %336 = select i1 %334, %"class.std::__1::__tree_node_base"** %332, %"class.std::__1::__tree_node_base"** %335
  store %"class.std::__1::__tree_node_base"* %318, %"class.std::__1::__tree_node_base"** %336, align 8
  store %"class.std::__1::__tree_node_base"* %276, %"class.std::__1::__tree_node_base"** %319, align 8
  %337 = getelementptr inbounds %"class.std::__1::__tree_node_base", %"class.std::__1::__tree_node_base"* %318, i64 0, i32 0
  store %"class.std::__1::__tree_end_node"* %337, %"class.std::__1::__tree_end_node"** %326, align 8
  br label %338

338:                                              ; preds = %281, %306, %325
  %339 = phi %"class.std::__1::__tree_node_base"* [ %318, %325 ], [ %276, %306 ], [ %276, %281 ]
  %340 = getelementptr inbounds %"class.std::__1::__tree_node_base", %"class.std::__1::__tree_node_base"* %339, i64 0, i32 2
  %341 = bitcast %"class.std::__1::__tree_end_node"** %340 to %"class.std::__1::__tree_node_base"**
  %342 = load %"class.std::__1::__tree_node_base"*, %"class.std::__1::__tree_node_base"** %341, align 8
  %343 = getelementptr inbounds %"class.std::__1::__tree_node_base", %"class.std::__1::__tree_node_base"* %342, i64 0, i32 3
  %344 = load i8, i8* %343, align 8, !range !3
  %345 = getelementptr inbounds %"class.std::__1::__tree_node_base", %"class.std::__1::__tree_node_base"* %339, i64 0, i32 3
  store i8 %344, i8* %345, align 8
  store i8 1, i8* %343, align 8
  %346 = getelementptr inbounds %"class.std::__1::__tree_node_base", %"class.std::__1::__tree_node_base"* %339, i64 0, i32 0, i32 0
  %347 = load %"class.std::__1::__tree_node_base"*, %"class.std::__1::__tree_node_base"** %346, align 8
  %348 = getelementptr inbounds %"class.std::__1::__tree_node_base", %"class.std::__1::__tree_node_base"* %347, i64 0, i32 3
  store i8 1, i8* %348, align 8
  %349 = load %"class.std::__1::__tree_node_base"*, %"class.std::__1::__tree_node_base"** %341, align 8
  %350 = getelementptr inbounds %"class.std::__1::__tree_node_base", %"class.std::__1::__tree_node_base"* %349, i64 0, i32 0, i32 0
  %351 = load %"class.std::__1::__tree_node_base"*, %"class.std::__1::__tree_node_base"** %350, align 8
  %352 = getelementptr inbounds %"class.std::__1::__tree_node_base", %"class.std::__1::__tree_node_base"* %351, i64 0, i32 1
  %353 = load %"class.std::__1::__tree_node_base"*, %"class.std::__1::__tree_node_base"** %352, align 8
  store %"class.std::__1::__tree_node_base"* %353, %"class.std::__1::__tree_node_base"** %350, align 8
  %354 = icmp eq %"class.std::__1::__tree_node_base"* %353, null
  br i1 %354, label %358, label %355

355:                                              ; preds = %338
  %356 = getelementptr inbounds %"class.std::__1::__tree_node_base", %"class.std::__1::__tree_node_base"* %349, i64 0, i32 0
  %357 = getelementptr inbounds %"class.std::__1::__tree_node_base", %"class.std::__1::__tree_node_base"* %353, i64 0, i32 2
  store %"class.std::__1::__tree_end_node"* %356, %"class.std::__1::__tree_end_node"** %357, align 8
  br label %358

358:                                              ; preds = %355, %338
  %359 = getelementptr inbounds %"class.std::__1::__tree_node_base", %"class.std::__1::__tree_node_base"* %349, i64 0, i32 2
  %360 = bitcast %"class.std::__1::__tree_end_node"** %359 to i64*
  %361 = load i64, i64* %360, align 8
  %362 = getelementptr inbounds %"class.std::__1::__tree_node_base", %"class.std::__1::__tree_node_base"* %351, i64 0, i32 2
  %363 = bitcast %"class.std::__1::__tree_end_node"** %362 to i64*
  store i64 %361, i64* %363, align 8
  %364 = load %"class.std::__1::__tree_end_node"*, %"class.std::__1::__tree_end_node"** %359, align 8
  %365 = getelementptr inbounds %"class.std::__1::__tree_end_node", %"class.std::__1::__tree_end_node"* %364, i64 0, i32 0
  %366 = load %"class.std::__1::__tree_node_base"*, %"class.std::__1::__tree_node_base"** %365, align 8
  %367 = icmp eq %"class.std::__1::__tree_node_base"* %366, %349
  %368 = getelementptr inbounds %"class.std::__1::__tree_end_node", %"class.std::__1::__tree_end_node"* %364, i64 1, i32 0
  %369 = select i1 %367, %"class.std::__1::__tree_node_base"** %365, %"class.std::__1::__tree_node_base"** %368
  store %"class.std::__1::__tree_node_base"* %351, %"class.std::__1::__tree_node_base"** %369, align 8
  store %"class.std::__1::__tree_node_base"* %349, %"class.std::__1::__tree_node_base"** %352, align 8
  %370 = getelementptr inbounds %"class.std::__1::__tree_node_base", %"class.std::__1::__tree_node_base"* %351, i64 0, i32 0
  store %"class.std::__1::__tree_end_node"* %370, %"class.std::__1::__tree_end_node"** %359, align 8
  br label %382

371:                                              ; preds = %293, %165
  %372 = phi %"class.std::__1::__tree_node_base"* [ %163, %165 ], [ %297, %293 ]
  %373 = phi %"class.std::__1::__tree_node_base"* [ %143, %165 ], [ %277, %293 ]
  %374 = getelementptr inbounds %"class.std::__1::__tree_node_base", %"class.std::__1::__tree_node_base"* %372, i64 0, i32 2
  %375 = load %"class.std::__1::__tree_end_node"*, %"class.std::__1::__tree_end_node"** %374, align 8
  %376 = getelementptr inbounds %"class.std::__1::__tree_end_node", %"class.std::__1::__tree_end_node"* %375, i64 0, i32 0
  %377 = load %"class.std::__1::__tree_node_base"*, %"class.std::__1::__tree_node_base"** %376, align 8
  %378 = icmp eq %"class.std::__1::__tree_node_base"* %377, %372
  %379 = getelementptr inbounds %"class.std::__1::__tree_end_node", %"class.std::__1::__tree_end_node"* %375, i64 1, i32 0
  %380 = select i1 %378, %"class.std::__1::__tree_node_base"** %379, %"class.std::__1::__tree_node_base"** %376
  %381 = load %"class.std::__1::__tree_node_base"*, %"class.std::__1::__tree_node_base"** %380, align 8
  br label %97

382:                                              ; preds = %95, %358, %303, %229, %169, %90
  ret void
}

; Function Attrs: nounwind ssp uwtable
define linkonce_odr hidden void @_ZNSt3__112__hash_tableIN2v88internal8compiler19LinearScanAllocator17RangeWithRegisterENS5_4HashENS5_6EqualsENS2_13ZoneAllocatorIS5_EEE6removeENS_21__hash_const_iteratorIPNS_11__hash_nodeIS5_PvEEEE(%"class.std::__1::unique_ptr.1517"* noalias sret, %"class.std::__1::__hash_table.1394"*, %"struct.std::__1::__hash_node_base.1398"*) local_unnamed_addr #0 comdat align 2 {
  %4 = getelementptr inbounds %"class.std::__1::__hash_table.1394", %"class.std::__1::__hash_table.1394"* %1, i64 0, i32 0, i32 0, i32 1, i32 0, i32 0, i32 0, i32 0
  %5 = load i64, i64* %4, align 8
  %6 = getelementptr inbounds %"struct.std::__1::__hash_node_base.1398", %"struct.std::__1::__hash_node_base.1398"* %2, i64 1
  %7 = bitcast %"struct.std::__1::__hash_node_base.1398"* %6 to i64*
  %8 = load i64, i64* %7, align 8
  %9 = tail call i64 @llvm.ctpop.i64(i64 %5) #16, !range !79
  %10 = icmp ugt i64 %9, 1
  br i1 %10, label %14, label %11

11:                                               ; preds = %3
  %12 = add i64 %5, -1
  %13 = and i64 %12, %8
  br label %18

14:                                               ; preds = %3
  %15 = icmp ult i64 %8, %5
  br i1 %15, label %18, label %16

16:                                               ; preds = %14
  %17 = urem i64 %8, %5
  br label %18

18:                                               ; preds = %11, %14, %16
  %19 = phi i64 [ %13, %11 ], [ %17, %16 ], [ %8, %14 ]
  %20 = getelementptr inbounds %"class.std::__1::__hash_table.1394", %"class.std::__1::__hash_table.1394"* %1, i64 0, i32 0, i32 0, i32 0, i32 0
  %21 = load %"struct.std::__1::__hash_node_base.1398"**, %"struct.std::__1::__hash_node_base.1398"*** %20, align 8
  %22 = getelementptr inbounds %"struct.std::__1::__hash_node_base.1398"*, %"struct.std::__1::__hash_node_base.1398"** %21, i64 %19
  %23 = load %"struct.std::__1::__hash_node_base.1398"*, %"struct.std::__1::__hash_node_base.1398"** %22, align 8
  br label %24

24:                                               ; preds = %24, %18
  %25 = phi %"struct.std::__1::__hash_node_base.1398"* [ %23, %18 ], [ %27, %24 ]
  %26 = getelementptr inbounds %"struct.std::__1::__hash_node_base.1398", %"struct.std::__1::__hash_node_base.1398"* %25, i64 0, i32 0
  %27 = load %"struct.std::__1::__hash_node_base.1398"*, %"struct.std::__1::__hash_node_base.1398"** %26, align 8
  %28 = icmp eq %"struct.std::__1::__hash_node_base.1398"* %27, %2
  br i1 %28, label %29, label %24

29:                                               ; preds = %24
  %30 = getelementptr inbounds %"class.std::__1::__hash_table.1394", %"class.std::__1::__hash_table.1394"* %1, i64 0, i32 1, i32 0, i32 0
  %31 = icmp eq %"struct.std::__1::__hash_node_base.1398"* %25, %30
  br i1 %31, label %46, label %32

32:                                               ; preds = %29
  %33 = getelementptr inbounds %"struct.std::__1::__hash_node_base.1398", %"struct.std::__1::__hash_node_base.1398"* %25, i64 1
  %34 = bitcast %"struct.std::__1::__hash_node_base.1398"* %33 to i64*
  %35 = load i64, i64* %34, align 8
  br i1 %10, label %39, label %36

36:                                               ; preds = %32
  %37 = add i64 %5, -1
  %38 = and i64 %35, %37
  br label %43

39:                                               ; preds = %32
  %40 = icmp ult i64 %35, %5
  br i1 %40, label %43, label %41

41:                                               ; preds = %39
  %42 = urem i64 %35, %5
  br label %43

43:                                               ; preds = %36, %39, %41
  %44 = phi i64 [ %38, %36 ], [ %42, %41 ], [ %35, %39 ]
  %45 = icmp eq i64 %44, %19
  br i1 %45, label %65, label %46

46:                                               ; preds = %43, %29
  %47 = getelementptr inbounds %"struct.std::__1::__hash_node_base.1398", %"struct.std::__1::__hash_node_base.1398"* %2, i64 0, i32 0
  %48 = load %"struct.std::__1::__hash_node_base.1398"*, %"struct.std::__1::__hash_node_base.1398"** %47, align 8
  %49 = icmp eq %"struct.std::__1::__hash_node_base.1398"* %48, null
  br i1 %49, label %64, label %50

50:                                               ; preds = %46
  %51 = getelementptr inbounds %"struct.std::__1::__hash_node_base.1398", %"struct.std::__1::__hash_node_base.1398"* %48, i64 1
  %52 = bitcast %"struct.std::__1::__hash_node_base.1398"* %51 to i64*
  %53 = load i64, i64* %52, align 8
  br i1 %10, label %57, label %54

54:                                               ; preds = %50
  %55 = add i64 %5, -1
  %56 = and i64 %53, %55
  br label %61

57:                                               ; preds = %50
  %58 = icmp ult i64 %53, %5
  br i1 %58, label %61, label %59

59:                                               ; preds = %57
  %60 = urem i64 %53, %5
  br label %61

61:                                               ; preds = %54, %57, %59
  %62 = phi i64 [ %56, %54 ], [ %60, %59 ], [ %53, %57 ]
  %63 = icmp eq i64 %62, %19
  br i1 %63, label %65, label %64

64:                                               ; preds = %61, %46
  store %"struct.std::__1::__hash_node_base.1398"* null, %"struct.std::__1::__hash_node_base.1398"** %22, align 8
  br label %65

65:                                               ; preds = %61, %43, %64
  %66 = getelementptr inbounds %"struct.std::__1::__hash_node_base.1398", %"struct.std::__1::__hash_node_base.1398"* %2, i64 0, i32 0
  %67 = load %"struct.std::__1::__hash_node_base.1398"*, %"struct.std::__1::__hash_node_base.1398"** %66, align 8
  %68 = icmp eq %"struct.std::__1::__hash_node_base.1398"* %67, null
  %69 = ptrtoint %"struct.std::__1::__hash_node_base.1398"* %67 to i64
  br i1 %68, label %89, label %70

70:                                               ; preds = %65
  %71 = getelementptr inbounds %"struct.std::__1::__hash_node_base.1398", %"struct.std::__1::__hash_node_base.1398"* %67, i64 1
  %72 = bitcast %"struct.std::__1::__hash_node_base.1398"* %71 to i64*
  %73 = load i64, i64* %72, align 8
  br i1 %10, label %77, label %74

74:                                               ; preds = %70
  %75 = add i64 %5, -1
  %76 = and i64 %73, %75
  br label %81

77:                                               ; preds = %70
  %78 = icmp ult i64 %73, %5
  br i1 %78, label %81, label %79

79:                                               ; preds = %77
  %80 = urem i64 %73, %5
  br label %81

81:                                               ; preds = %74, %77, %79
  %82 = phi i64 [ %76, %74 ], [ %80, %79 ], [ %73, %77 ]
  %83 = icmp eq i64 %82, %19
  br i1 %83, label %89, label %84

84:                                               ; preds = %81
  %85 = load %"struct.std::__1::__hash_node_base.1398"**, %"struct.std::__1::__hash_node_base.1398"*** %20, align 8
  %86 = getelementptr inbounds %"struct.std::__1::__hash_node_base.1398"*, %"struct.std::__1::__hash_node_base.1398"** %85, i64 %82
  store %"struct.std::__1::__hash_node_base.1398"* %25, %"struct.std::__1::__hash_node_base.1398"** %86, align 8
  %87 = bitcast %"struct.std::__1::__hash_node_base.1398"* %2 to i64*
  %88 = load i64, i64* %87, align 8
  br label %89

89:                                               ; preds = %84, %81, %65
  %90 = phi i64 [ %88, %84 ], [ %69, %81 ], [ %69, %65 ]
  %91 = bitcast %"struct.std::__1::__hash_node_base.1398"* %25 to i64*
  store i64 %90, i64* %91, align 8
  store %"struct.std::__1::__hash_node_base.1398"* null, %"struct.std::__1::__hash_node_base.1398"** %66, align 8
  %92 = getelementptr inbounds %"class.std::__1::__hash_table.1394", %"class.std::__1::__hash_table.1394"* %1, i64 0, i32 2, i32 0, i32 0
  %93 = load i64, i64* %92, align 8
  %94 = add i64 %93, -1
  store i64 %94, i64* %92, align 8
  %95 = getelementptr inbounds %"class.std::__1::__hash_table.1394", %"class.std::__1::__hash_table.1394"* %1, i64 0, i32 1, i32 1, i32 0
  %96 = ptrtoint %"struct.std::__1::__hash_node_base.1398"* %2 to i64
  %97 = bitcast %"class.std::__1::unique_ptr.1517"* %0 to i64*
  store i64 %96, i64* %97, align 8
  %98 = getelementptr inbounds %"class.std::__1::unique_ptr.1517", %"class.std::__1::unique_ptr.1517"* %0, i64 0, i32 0, i32 1, i32 0, i32 0
  store %"class.v8::internal::ZoneAllocator.1407"* %95, %"class.v8::internal::ZoneAllocator.1407"** %98, align 8
  %99 = getelementptr inbounds %"class.std::__1::unique_ptr.1517", %"class.std::__1::unique_ptr.1517"* %0, i64 0, i32 0, i32 1, i32 0, i32 1
  store i8 1, i8* %99, align 8
  ret void
}

; Function Attrs: nounwind
declare void @free(i8* nocapture) local_unnamed_addr #10

; Function Attrs: noinline nounwind ssp uwtable
define linkonce_odr hidden %"class.v8::internal::compiler::TopLevelLiveRange"** @_ZN2v84base11SmallVectorIPNS_8internal8compiler17TopLevelLiveRangeELm32EE4GrowEv(%"class.v8::base::SmallVector"*) local_unnamed_addr #15 comdat align 2 {
  %2 = tail call %"class.v8::internal::compiler::TopLevelLiveRange"** @_ZN2v84base11SmallVectorIPNS_8internal8compiler17TopLevelLiveRangeELm32EE4GrowEm(%"class.v8::base::SmallVector"* %0, i64 0)
  ret %"class.v8::internal::compiler::TopLevelLiveRange"** %2
}

; Function Attrs: noinline nounwind ssp uwtable
define linkonce_odr hidden %"class.v8::internal::compiler::TopLevelLiveRange"** @_ZN2v84base11SmallVectorIPNS_8internal8compiler17TopLevelLiveRangeELm32EE4GrowEm(%"class.v8::base::SmallVector"*, i64) local_unnamed_addr #15 comdat align 2 {
  %3 = getelementptr inbounds %"class.v8::base::SmallVector", %"class.v8::base::SmallVector"* %0, i64 0, i32 1
  %4 = bitcast %"class.v8::internal::compiler::TopLevelLiveRange"*** %3 to i64*
  %5 = load i64, i64* %4, align 8
  %6 = bitcast %"class.v8::base::SmallVector"* %0 to i64*
  %7 = load i64, i64* %6, align 8
  %8 = sub i64 %5, %7
  %9 = ashr exact i64 %8, 3
  %10 = getelementptr inbounds %"class.v8::base::SmallVector", %"class.v8::base::SmallVector"* %0, i64 0, i32 2
  %11 = bitcast %"class.v8::internal::compiler::TopLevelLiveRange"*** %10 to i64*
  %12 = load i64, i64* %11, align 8
  %13 = sub i64 %12, %7
  %14 = ashr exact i64 %13, 2
  %15 = icmp ugt i64 %14, %1
  %16 = select i1 %15, i64 %14, i64 %1
  %17 = tail call i64 @_ZN2v84base4bits21RoundUpToPowerOfTwo64Em(i64 %16) #16
  %18 = shl i64 %17, 3
  %19 = tail call noalias i8* @malloc(i64 %18) #16
  %20 = bitcast i8* %19 to %"class.v8::internal::compiler::TopLevelLiveRange"**
  %21 = icmp eq i8* %19, null
  br i1 %21, label %22, label %23

22:                                               ; preds = %2
  tail call void (i8*, ...) @_Z8V8_FatalPKcz(i8* getelementptr inbounds ([53 x i8], [53 x i8]* @.str.145, i64 0, i64 0)) #17
  unreachable

23:                                               ; preds = %2
  %24 = bitcast %"class.v8::base::SmallVector"* %0 to i8**
  %25 = load i8*, i8** %24, align 8
  tail call void @llvm.memcpy.p0i8.p0i8.i64(i8* nonnull align 1 %19, i8* align 1 %25, i64 %8, i1 false) #16
  %26 = getelementptr inbounds %"class.v8::base::SmallVector", %"class.v8::base::SmallVector"* %0, i64 0, i32 3, i32 0, i64 0
  %27 = icmp eq i8* %25, %26
  br i1 %27, label %29, label %28

28:                                               ; preds = %23
  tail call void @free(i8* %25) #16
  br label %29

29:                                               ; preds = %23, %28
  store i8* %19, i8** %24, align 8
  %30 = getelementptr inbounds %"class.v8::internal::compiler::TopLevelLiveRange"*, %"class.v8::internal::compiler::TopLevelLiveRange"** %20, i64 %9
  store %"class.v8::internal::compiler::TopLevelLiveRange"** %30, %"class.v8::internal::compiler::TopLevelLiveRange"*** %3, align 8
  %31 = getelementptr inbounds %"class.v8::internal::compiler::TopLevelLiveRange"*, %"class.v8::internal::compiler::TopLevelLiveRange"** %20, i64 %17
  store %"class.v8::internal::compiler::TopLevelLiveRange"** %31, %"class.v8::internal::compiler::TopLevelLiveRange"*** %10, align 8
  ret %"class.v8::internal::compiler::TopLevelLiveRange"** %30
}

declare i64 @_ZN2v84base4bits21RoundUpToPowerOfTwo64Em(i64) local_unnamed_addr #6

; Function Attrs: nofree nounwind
declare noalias i8* @malloc(i64) local_unnamed_addr #9

; Function Attrs: norecurse nounwind readonly ssp uwtable
define internal zeroext i1 @"_ZNSt3__110__function16__policy_invokerIFbPN2v88internal8compiler17TopLevelLiveRangeEEE11__call_implINS0_20__default_alloc_funcIZNS4_19LinearScanAllocator32ComputeStateFromManyPredecessorsEPNS4_16InstructionBlockEPNS3_16ZoneUnorderedSetINSB_17RangeWithRegisterENSF_4HashENSF_6EqualsEEEE3$_1S7_EEEEbPKNS0_16__policy_storageES6_"(%"union.std::__1::__function::__policy_storage"* nocapture readnone, %"class.v8::internal::compiler::TopLevelLiveRange"*) #2 align 2 {
  %3 = getelementptr %"class.v8::internal::compiler::TopLevelLiveRange", %"class.v8::internal::compiler::TopLevelLiveRange"* %1, i64 0, i32 1
  %4 = load i32, i32* %3, align 4
  %5 = icmp slt i32 %4, 0
  ret i1 %5
}

; Function Attrs: norecurse nounwind readonly ssp uwtable
define internal zeroext i1 @"_ZNSt3__110__function16__policy_invokerIFbPN2v88internal8compiler17TopLevelLiveRangeEEE11__call_implINS0_20__default_alloc_funcIZNS4_19LinearScanAllocator32ComputeStateFromManyPredecessorsEPNS4_16InstructionBlockEPNS3_16ZoneUnorderedSetINSB_17RangeWithRegisterENSF_4HashENSF_6EqualsEEEE3$_2S7_EEEEbPKNS0_16__policy_storageES6_"(%"union.std::__1::__function::__policy_storage"* nocapture readnone, %"class.v8::internal::compiler::TopLevelLiveRange"*) #2 align 2 {
  %3 = getelementptr %"class.v8::internal::compiler::TopLevelLiveRange", %"class.v8::internal::compiler::TopLevelLiveRange"* %1, i64 0, i32 1
  %4 = load i32, i32* %3, align 4
  %5 = icmp sgt i32 %4, -1
  ret i1 %5
}

; Function Attrs: nounwind ssp uwtable
define linkonce_odr hidden %"class.std::__1::__tree_end_node"* @_ZNSt3__16__treeIPN2v88internal8compiler9LiveRangeENS3_19LinearScanAllocator26UnhandledLiveRangeOrderingENS2_13ZoneAllocatorIS5_EEE15__emplace_multiIJRKS5_EEENS_15__tree_iteratorIS5_PNS_11__tree_nodeIS5_PvEElEEDpOT_(%"class.std::__1::__tree.1338"*, %"class.v8::internal::compiler::LiveRange"** dereferenceable(8)) local_unnamed_addr #0 comdat align 2 {
  %3 = getelementptr inbounds %"class.std::__1::__tree.1338", %"class.std::__1::__tree.1338"* %0, i64 0, i32 1, i32 1, i32 0, i32 0
  %4 = load %"class.v8::internal::Zone"*, %"class.v8::internal::Zone"** %3, align 8, !noalias !261
  %5 = getelementptr inbounds %"class.v8::internal::Zone", %"class.v8::internal::Zone"* %4, i64 0, i32 2
  %6 = load i64, i64* %5, align 8, !noalias !261
  %7 = getelementptr inbounds %"class.v8::internal::Zone", %"class.v8::internal::Zone"* %4, i64 0, i32 3
  %8 = load i64, i64* %7, align 8, !noalias !261
  %9 = sub i64 %8, %6
  %10 = icmp ult i64 %9, 40
  br i1 %10, label %11, label %13, !prof !2

11:                                               ; preds = %2
  %12 = tail call i64 @_ZN2v88internal4Zone9NewExpandEm(%"class.v8::internal::Zone"* %4, i64 40) #16, !noalias !261
  br label %15

13:                                               ; preds = %2
  %14 = add i64 %6, 40
  store i64 %14, i64* %5, align 8, !noalias !261
  br label %15

15:                                               ; preds = %11, %13
  %16 = phi i64 [ %12, %11 ], [ %6, %13 ]
  %17 = inttoptr i64 %16 to %"class.std::__1::__tree_node.1501"*
  %18 = getelementptr inbounds %"class.std::__1::__tree_node.1501", %"class.std::__1::__tree_node.1501"* %17, i64 0, i32 1
  %19 = bitcast %"class.v8::internal::compiler::LiveRange"** %1 to i64*
  %20 = load i64, i64* %19, align 8, !noalias !261
  %21 = bitcast %"class.v8::internal::compiler::LiveRange"** %18 to i64*
  store i64 %20, i64* %21, align 8, !noalias !261
  %22 = getelementptr inbounds %"class.std::__1::__tree.1338", %"class.std::__1::__tree.1338"* %0, i64 0, i32 1, i32 0, i32 0
  %23 = bitcast %"class.std::__1::__tree_end_node"* %22 to %"class.std::__1::__tree_node.1501"**
  %24 = load %"class.std::__1::__tree_node.1501"*, %"class.std::__1::__tree_node.1501"** %23, align 8
  %25 = icmp eq %"class.std::__1::__tree_node.1501"* %24, null
  %26 = inttoptr i64 %20 to %"class.v8::internal::compiler::LiveRange"*
  br i1 %25, label %109, label %27

27:                                               ; preds = %15
  %28 = getelementptr inbounds %"class.v8::internal::compiler::LiveRange", %"class.v8::internal::compiler::LiveRange"* %26, i64 0, i32 3
  %29 = load %"class.v8::internal::compiler::UseInterval"*, %"class.v8::internal::compiler::UseInterval"** %28, align 8
  %30 = getelementptr inbounds %"class.v8::internal::compiler::UseInterval", %"class.v8::internal::compiler::UseInterval"* %29, i64 0, i32 0, i32 0
  %31 = load i32, i32* %30, align 8
  %32 = getelementptr inbounds %"class.v8::internal::compiler::LiveRange", %"class.v8::internal::compiler::LiveRange"* %26, i64 0, i32 1
  %33 = getelementptr inbounds %"class.v8::internal::compiler::LiveRange", %"class.v8::internal::compiler::LiveRange"* %26, i64 0, i32 4
  %34 = getelementptr inbounds %"class.v8::internal::compiler::LiveRange", %"class.v8::internal::compiler::LiveRange"* %26, i64 0, i32 5
  br label %35

35:                                               ; preds = %106, %27
  %36 = phi %"class.std::__1::__tree_node.1501"* [ %108, %106 ], [ %24, %27 ]
  %37 = getelementptr inbounds %"class.std::__1::__tree_node.1501", %"class.std::__1::__tree_node.1501"* %36, i64 0, i32 1
  %38 = load %"class.v8::internal::compiler::LiveRange"*, %"class.v8::internal::compiler::LiveRange"** %37, align 8
  %39 = getelementptr inbounds %"class.v8::internal::compiler::LiveRange", %"class.v8::internal::compiler::LiveRange"* %38, i64 0, i32 3
  %40 = load %"class.v8::internal::compiler::UseInterval"*, %"class.v8::internal::compiler::UseInterval"** %39, align 8
  %41 = getelementptr inbounds %"class.v8::internal::compiler::UseInterval", %"class.v8::internal::compiler::UseInterval"* %40, i64 0, i32 0, i32 0
  %42 = load i32, i32* %41, align 8
  %43 = icmp eq i32 %31, %42
  br i1 %43, label %44, label %88

44:                                               ; preds = %35
  %45 = load i32, i32* %32, align 4
  %46 = lshr i32 %45, 22
  %47 = and i32 %46, 63
  %48 = getelementptr inbounds %"class.v8::internal::compiler::LiveRange", %"class.v8::internal::compiler::LiveRange"* %38, i64 0, i32 1
  %49 = load i32, i32* %48, align 4
  %50 = lshr i32 %49, 22
  %51 = and i32 %50, 63
  %52 = icmp ult i32 %47, %51
  br i1 %52, label %92, label %53

53:                                               ; preds = %44
  %54 = icmp ugt i32 %47, %51
  br i1 %54, label %99, label %55

55:                                               ; preds = %53
  %56 = load %"class.v8::internal::compiler::UsePosition"*, %"class.v8::internal::compiler::UsePosition"** %33, align 8
  %57 = getelementptr inbounds %"class.v8::internal::compiler::LiveRange", %"class.v8::internal::compiler::LiveRange"* %38, i64 0, i32 4
  %58 = load %"class.v8::internal::compiler::UsePosition"*, %"class.v8::internal::compiler::UsePosition"** %57, align 8
  %59 = icmp eq %"class.v8::internal::compiler::UsePosition"* %56, %58
  br i1 %59, label %60, label %69

60:                                               ; preds = %55
  %61 = load %"class.v8::internal::compiler::TopLevelLiveRange"*, %"class.v8::internal::compiler::TopLevelLiveRange"** %34, align 8
  %62 = getelementptr inbounds %"class.v8::internal::compiler::TopLevelLiveRange", %"class.v8::internal::compiler::TopLevelLiveRange"* %61, i64 0, i32 1
  %63 = load i32, i32* %62, align 4
  %64 = getelementptr inbounds %"class.v8::internal::compiler::LiveRange", %"class.v8::internal::compiler::LiveRange"* %38, i64 0, i32 5
  %65 = load %"class.v8::internal::compiler::TopLevelLiveRange"*, %"class.v8::internal::compiler::TopLevelLiveRange"** %64, align 8
  %66 = getelementptr inbounds %"class.v8::internal::compiler::TopLevelLiveRange", %"class.v8::internal::compiler::TopLevelLiveRange"* %65, i64 0, i32 1
  %67 = load i32, i32* %66, align 4
  %68 = icmp slt i32 %63, %67
  br i1 %68, label %92, label %99

69:                                               ; preds = %55
  %70 = icmp eq %"class.v8::internal::compiler::UsePosition"* %56, null
  br i1 %70, label %99, label %71

71:                                               ; preds = %69
  %72 = icmp eq %"class.v8::internal::compiler::UsePosition"* %58, null
  br i1 %72, label %92, label %73

73:                                               ; preds = %71
  %74 = getelementptr inbounds %"class.v8::internal::compiler::UsePosition", %"class.v8::internal::compiler::UsePosition"* %56, i64 0, i32 3, i32 0
  %75 = load i32, i32* %74, align 8
  %76 = getelementptr inbounds %"class.v8::internal::compiler::UsePosition", %"class.v8::internal::compiler::UsePosition"* %58, i64 0, i32 3, i32 0
  %77 = load i32, i32* %76, align 8
  %78 = icmp eq i32 %75, %77
  br i1 %78, label %79, label %90

79:                                               ; preds = %73
  %80 = load %"class.v8::internal::compiler::TopLevelLiveRange"*, %"class.v8::internal::compiler::TopLevelLiveRange"** %34, align 8
  %81 = getelementptr inbounds %"class.v8::internal::compiler::TopLevelLiveRange", %"class.v8::internal::compiler::TopLevelLiveRange"* %80, i64 0, i32 1
  %82 = load i32, i32* %81, align 4
  %83 = getelementptr inbounds %"class.v8::internal::compiler::LiveRange", %"class.v8::internal::compiler::LiveRange"* %38, i64 0, i32 5
  %84 = load %"class.v8::internal::compiler::TopLevelLiveRange"*, %"class.v8::internal::compiler::TopLevelLiveRange"** %83, align 8
  %85 = getelementptr inbounds %"class.v8::internal::compiler::TopLevelLiveRange", %"class.v8::internal::compiler::TopLevelLiveRange"* %84, i64 0, i32 1
  %86 = load i32, i32* %85, align 4
  %87 = icmp slt i32 %82, %86
  br i1 %87, label %92, label %99

88:                                               ; preds = %35
  %89 = icmp slt i32 %31, %42
  br i1 %89, label %92, label %99

90:                                               ; preds = %73
  %91 = icmp slt i32 %75, %77
  br i1 %91, label %92, label %99

92:                                               ; preds = %90, %88, %79, %71, %60, %44
  %93 = getelementptr inbounds %"class.std::__1::__tree_node.1501", %"class.std::__1::__tree_node.1501"* %36, i64 0, i32 0, i32 0, i32 0
  %94 = load %"class.std::__1::__tree_node_base"*, %"class.std::__1::__tree_node_base"** %93, align 8
  %95 = icmp eq %"class.std::__1::__tree_node_base"* %94, null
  br i1 %95, label %96, label %106

96:                                               ; preds = %92
  %97 = getelementptr inbounds %"class.std::__1::__tree_node.1501", %"class.std::__1::__tree_node.1501"* %36, i64 0, i32 0, i32 0, i32 0
  %98 = getelementptr inbounds %"class.std::__1::__tree_node.1501", %"class.std::__1::__tree_node.1501"* %36, i64 0, i32 0, i32 0
  br label %111

99:                                               ; preds = %90, %88, %79, %69, %60, %53
  %100 = getelementptr inbounds %"class.std::__1::__tree_node.1501", %"class.std::__1::__tree_node.1501"* %36, i64 0, i32 0, i32 1
  %101 = load %"class.std::__1::__tree_node_base"*, %"class.std::__1::__tree_node_base"** %100, align 8
  %102 = icmp eq %"class.std::__1::__tree_node_base"* %101, null
  br i1 %102, label %103, label %106

103:                                              ; preds = %99
  %104 = getelementptr inbounds %"class.std::__1::__tree_node.1501", %"class.std::__1::__tree_node.1501"* %36, i64 0, i32 0, i32 1
  %105 = getelementptr inbounds %"class.std::__1::__tree_node.1501", %"class.std::__1::__tree_node.1501"* %36, i64 0, i32 0, i32 0
  br label %111

106:                                              ; preds = %99, %92
  %107 = phi %"class.std::__1::__tree_node_base"* [ %94, %92 ], [ %101, %99 ]
  %108 = bitcast %"class.std::__1::__tree_node_base"* %107 to %"class.std::__1::__tree_node.1501"*
  br label %35

109:                                              ; preds = %15
  %110 = getelementptr inbounds %"class.std::__1::__tree_end_node", %"class.std::__1::__tree_end_node"* %22, i64 0, i32 0
  br label %111

111:                                              ; preds = %96, %103, %109
  %112 = phi %"class.std::__1::__tree_end_node"* [ %22, %109 ], [ %98, %96 ], [ %105, %103 ]
  %113 = phi %"class.std::__1::__tree_node_base"** [ %110, %109 ], [ %97, %96 ], [ %104, %103 ]
  %114 = inttoptr i64 %16 to %"class.std::__1::__tree_node_base"*
  %115 = getelementptr inbounds %"class.std::__1::__tree_node_base", %"class.std::__1::__tree_node_base"* %114, i64 0, i32 2
  %116 = inttoptr i64 %16 to i8*
  tail call void @llvm.memset.p0i8.i64(i8* align 8 %116, i8 0, i64 16, i1 false) #16
  store %"class.std::__1::__tree_end_node"* %112, %"class.std::__1::__tree_end_node"** %115, align 8
  store %"class.std::__1::__tree_node_base"* %114, %"class.std::__1::__tree_node_base"** %113, align 8
  %117 = getelementptr inbounds %"class.std::__1::__tree.1338", %"class.std::__1::__tree.1338"* %0, i64 0, i32 0
  %118 = load %"class.std::__1::__tree_end_node"*, %"class.std::__1::__tree_end_node"** %117, align 8
  %119 = getelementptr inbounds %"class.std::__1::__tree_end_node", %"class.std::__1::__tree_end_node"* %118, i64 0, i32 0
  %120 = load %"class.std::__1::__tree_node_base"*, %"class.std::__1::__tree_node_base"** %119, align 8
  %121 = icmp eq %"class.std::__1::__tree_node_base"* %120, null
  br i1 %121, label %126, label %122

122:                                              ; preds = %111
  %123 = ptrtoint %"class.std::__1::__tree_node_base"* %120 to i64
  %124 = bitcast %"class.std::__1::__tree.1338"* %0 to i64*
  store i64 %123, i64* %124, align 8
  %125 = load %"class.std::__1::__tree_node_base"*, %"class.std::__1::__tree_node_base"** %113, align 8
  br label %126

126:                                              ; preds = %111, %122
  %127 = phi %"class.std::__1::__tree_node_base"* [ %114, %111 ], [ %125, %122 ]
  %128 = getelementptr inbounds %"class.std::__1::__tree.1338", %"class.std::__1::__tree.1338"* %0, i64 0, i32 1, i32 0, i32 0, i32 0
  %129 = load %"class.std::__1::__tree_node_base"*, %"class.std::__1::__tree_node_base"** %128, align 8
  tail call void @_ZNSt3__127__tree_balance_after_insertIPNS_16__tree_node_baseIPvEEEEvT_S5_(%"class.std::__1::__tree_node_base"* %129, %"class.std::__1::__tree_node_base"* %127) #16
  %130 = getelementptr inbounds %"class.std::__1::__tree.1338", %"class.std::__1::__tree.1338"* %0, i64 0, i32 2, i32 0, i32 0
  %131 = load i64, i64* %130, align 8
  %132 = add i64 %131, 1
  store i64 %132, i64* %130, align 8
  %133 = getelementptr inbounds %"class.std::__1::__tree_node.1501", %"class.std::__1::__tree_node.1501"* %17, i64 0, i32 0, i32 0
  ret %"class.std::__1::__tree_end_node"* %133
}

; Function Attrs: nounwind ssp uwtable
define linkonce_odr hidden void @_ZNSt3__15dequeIiN2v88internal22RecyclingZoneAllocatorIiEEE19__add_back_capacityEv(%"class.std::__1::deque.1460"*) local_unnamed_addr #0 comdat align 2 {
  %2 = alloca i32*, align 8
  %3 = alloca i32*, align 8
  %4 = alloca i32*, align 8
  %5 = alloca i32*, align 8
  %6 = alloca %"struct.std::__1::__split_buffer.1628", align 16
  %7 = alloca i32*, align 8
  %8 = getelementptr inbounds %"class.std::__1::deque.1460", %"class.std::__1::deque.1460"* %0, i64 0, i32 0, i32 2, i32 1, i32 0
  %9 = getelementptr inbounds %"class.std::__1::deque.1460", %"class.std::__1::deque.1460"* %0, i64 0, i32 0, i32 1
  %10 = load i64, i64* %9, align 8
  %11 = icmp ugt i64 %10, 1023
  br i1 %11, label %12, label %22

12:                                               ; preds = %1
  %13 = add i64 %10, -1024
  store i64 %13, i64* %9, align 8
  %14 = bitcast i32** %2 to i8*
  call void @llvm.lifetime.start.p0i8(i64 8, i8* nonnull %14) #16
  %15 = getelementptr inbounds %"class.std::__1::deque.1460", %"class.std::__1::deque.1460"* %0, i64 0, i32 0, i32 0
  %16 = getelementptr inbounds %"class.std::__1::deque.1460", %"class.std::__1::deque.1460"* %0, i64 0, i32 0, i32 0, i32 1
  %17 = load i32**, i32*** %16, align 8
  %18 = bitcast i32** %17 to i64*
  %19 = load i64, i64* %18, align 8
  %20 = bitcast i32** %2 to i64*
  store i64 %19, i64* %20, align 8
  %21 = getelementptr inbounds i32*, i32** %17, i64 1
  store i32** %21, i32*** %16, align 8
  call void @_ZNSt3__114__split_bufferIPiN2v88internal22RecyclingZoneAllocatorIS1_EEE9push_backERKS1_(%"struct.std::__1::__split_buffer.1462"* %15, i32** nonnull dereferenceable(8) %2)
  call void @llvm.lifetime.end.p0i8(i64 8, i8* nonnull %14) #16
  br label %247

22:                                               ; preds = %1
  %23 = getelementptr inbounds %"class.std::__1::deque.1460", %"class.std::__1::deque.1460"* %0, i64 0, i32 0, i32 0
  %24 = getelementptr inbounds %"class.std::__1::deque.1460", %"class.std::__1::deque.1460"* %0, i64 0, i32 0, i32 0, i32 2
  %25 = bitcast i32*** %24 to i64*
  %26 = load i64, i64* %25, align 8
  %27 = getelementptr inbounds %"class.std::__1::deque.1460", %"class.std::__1::deque.1460"* %0, i64 0, i32 0, i32 0, i32 1
  %28 = bitcast i32*** %27 to i64*
  %29 = load i64, i64* %28, align 8
  %30 = sub i64 %26, %29
  %31 = ashr exact i64 %30, 3
  %32 = getelementptr inbounds %"class.std::__1::deque.1460", %"class.std::__1::deque.1460"* %0, i64 0, i32 0, i32 0, i32 3, i32 0, i32 0
  %33 = bitcast i32*** %32 to i64*
  %34 = load i64, i64* %33, align 8
  %35 = bitcast %"class.std::__1::deque.1460"* %0 to i64*
  %36 = load i64, i64* %35, align 8
  %37 = sub i64 %34, %36
  %38 = ashr exact i64 %37, 3
  %39 = icmp ult i64 %31, %38
  br i1 %39, label %40, label %112

40:                                               ; preds = %22
  %41 = icmp eq i64 %34, %26
  br i1 %41, label %74, label %42

42:                                               ; preds = %40
  %43 = bitcast i32** %3 to i8*
  call void @llvm.lifetime.start.p0i8(i64 8, i8* nonnull %43) #16
  %44 = getelementptr inbounds %"class.std::__1::deque.1460", %"class.std::__1::deque.1460"* %0, i64 0, i32 0, i32 2, i32 1, i32 0, i32 1
  %45 = load %"struct.v8::internal::RecyclingZoneAllocator<int>::FreeBlock"*, %"struct.v8::internal::RecyclingZoneAllocator<int>::FreeBlock"** %44, align 8
  %46 = icmp eq %"struct.v8::internal::RecyclingZoneAllocator<int>::FreeBlock"* %45, null
  br i1 %46, label %56, label %47

47:                                               ; preds = %42
  %48 = getelementptr inbounds %"struct.v8::internal::RecyclingZoneAllocator<int>::FreeBlock", %"struct.v8::internal::RecyclingZoneAllocator<int>::FreeBlock"* %45, i64 0, i32 1
  %49 = load i64, i64* %48, align 8
  %50 = icmp ult i64 %49, 1024
  br i1 %50, label %56, label %51

51:                                               ; preds = %47
  %52 = bitcast %"struct.v8::internal::RecyclingZoneAllocator<int>::FreeBlock"* %45 to i32*
  %53 = bitcast %"struct.v8::internal::RecyclingZoneAllocator<int>::FreeBlock"* %45 to i64*
  %54 = load i64, i64* %53, align 8
  %55 = bitcast %"struct.v8::internal::RecyclingZoneAllocator<int>::FreeBlock"** %44 to i64*
  store i64 %54, i64* %55, align 8
  br label %72

56:                                               ; preds = %47, %42
  %57 = getelementptr inbounds %"class.v8::internal::RecyclingZoneAllocator.1470", %"class.v8::internal::RecyclingZoneAllocator.1470"* %8, i64 0, i32 0, i32 0
  %58 = load %"class.v8::internal::Zone"*, %"class.v8::internal::Zone"** %57, align 8
  %59 = getelementptr inbounds %"class.v8::internal::Zone", %"class.v8::internal::Zone"* %58, i64 0, i32 2
  %60 = load i64, i64* %59, align 8
  %61 = getelementptr inbounds %"class.v8::internal::Zone", %"class.v8::internal::Zone"* %58, i64 0, i32 3
  %62 = load i64, i64* %61, align 8
  %63 = sub i64 %62, %60
  %64 = icmp ult i64 %63, 4096
  br i1 %64, label %65, label %67, !prof !2

65:                                               ; preds = %56
  %66 = tail call i64 @_ZN2v88internal4Zone9NewExpandEm(%"class.v8::internal::Zone"* %58, i64 4096) #16
  br label %69

67:                                               ; preds = %56
  %68 = add i64 %60, 4096
  store i64 %68, i64* %59, align 8
  br label %69

69:                                               ; preds = %67, %65
  %70 = phi i64 [ %66, %65 ], [ %60, %67 ]
  %71 = inttoptr i64 %70 to i32*
  br label %72

72:                                               ; preds = %51, %69
  %73 = phi i32* [ %52, %51 ], [ %71, %69 ]
  store i32* %73, i32** %3, align 8
  call void @_ZNSt3__114__split_bufferIPiN2v88internal22RecyclingZoneAllocatorIS1_EEE9push_backEOS1_(%"struct.std::__1::__split_buffer.1462"* %23, i32** nonnull dereferenceable(8) %3)
  call void @llvm.lifetime.end.p0i8(i64 8, i8* nonnull %43) #16
  br label %247

74:                                               ; preds = %40
  %75 = bitcast i32** %4 to i8*
  call void @llvm.lifetime.start.p0i8(i64 8, i8* nonnull %75) #16
  %76 = getelementptr inbounds %"class.std::__1::deque.1460", %"class.std::__1::deque.1460"* %0, i64 0, i32 0, i32 2, i32 1, i32 0, i32 1
  %77 = load %"struct.v8::internal::RecyclingZoneAllocator<int>::FreeBlock"*, %"struct.v8::internal::RecyclingZoneAllocator<int>::FreeBlock"** %76, align 8
  %78 = icmp eq %"struct.v8::internal::RecyclingZoneAllocator<int>::FreeBlock"* %77, null
  br i1 %78, label %88, label %79

79:                                               ; preds = %74
  %80 = getelementptr inbounds %"struct.v8::internal::RecyclingZoneAllocator<int>::FreeBlock", %"struct.v8::internal::RecyclingZoneAllocator<int>::FreeBlock"* %77, i64 0, i32 1
  %81 = load i64, i64* %80, align 8
  %82 = icmp ult i64 %81, 1024
  br i1 %82, label %88, label %83

83:                                               ; preds = %79
  %84 = bitcast %"struct.v8::internal::RecyclingZoneAllocator<int>::FreeBlock"* %77 to i32*
  %85 = bitcast %"struct.v8::internal::RecyclingZoneAllocator<int>::FreeBlock"* %77 to i64*
  %86 = load i64, i64* %85, align 8
  %87 = bitcast %"struct.v8::internal::RecyclingZoneAllocator<int>::FreeBlock"** %76 to i64*
  store i64 %86, i64* %87, align 8
  br label %104

88:                                               ; preds = %79, %74
  %89 = getelementptr inbounds %"class.v8::internal::RecyclingZoneAllocator.1470", %"class.v8::internal::RecyclingZoneAllocator.1470"* %8, i64 0, i32 0, i32 0
  %90 = load %"class.v8::internal::Zone"*, %"class.v8::internal::Zone"** %89, align 8
  %91 = getelementptr inbounds %"class.v8::internal::Zone", %"class.v8::internal::Zone"* %90, i64 0, i32 2
  %92 = load i64, i64* %91, align 8
  %93 = getelementptr inbounds %"class.v8::internal::Zone", %"class.v8::internal::Zone"* %90, i64 0, i32 3
  %94 = load i64, i64* %93, align 8
  %95 = sub i64 %94, %92
  %96 = icmp ult i64 %95, 4096
  br i1 %96, label %97, label %99, !prof !2

97:                                               ; preds = %88
  %98 = tail call i64 @_ZN2v88internal4Zone9NewExpandEm(%"class.v8::internal::Zone"* %90, i64 4096) #16
  br label %101

99:                                               ; preds = %88
  %100 = add i64 %92, 4096
  store i64 %100, i64* %91, align 8
  br label %101

101:                                              ; preds = %99, %97
  %102 = phi i64 [ %98, %97 ], [ %92, %99 ]
  %103 = inttoptr i64 %102 to i32*
  br label %104

104:                                              ; preds = %83, %101
  %105 = phi i32* [ %84, %83 ], [ %103, %101 ]
  store i32* %105, i32** %4, align 8
  call void @_ZNSt3__114__split_bufferIPiN2v88internal22RecyclingZoneAllocatorIS1_EEE10push_frontEOS1_(%"struct.std::__1::__split_buffer.1462"* %23, i32** nonnull dereferenceable(8) %4)
  call void @llvm.lifetime.end.p0i8(i64 8, i8* nonnull %75) #16
  %106 = bitcast i32** %5 to i8*
  call void @llvm.lifetime.start.p0i8(i64 8, i8* nonnull %106) #16
  %107 = load i32**, i32*** %27, align 8
  %108 = bitcast i32** %107 to i64*
  %109 = load i64, i64* %108, align 8
  %110 = bitcast i32** %5 to i64*
  store i64 %109, i64* %110, align 8
  %111 = getelementptr inbounds i32*, i32** %107, i64 1
  store i32** %111, i32*** %27, align 8
  call void @_ZNSt3__114__split_bufferIPiN2v88internal22RecyclingZoneAllocatorIS1_EEE9push_backERKS1_(%"struct.std::__1::__split_buffer.1462"* %23, i32** nonnull dereferenceable(8) %5)
  call void @llvm.lifetime.end.p0i8(i64 8, i8* nonnull %106) #16
  br label %247

112:                                              ; preds = %22
  %113 = bitcast %"struct.std::__1::__split_buffer.1628"* %6 to i8*
  call void @llvm.lifetime.start.p0i8(i64 40, i8* nonnull %113) #16
  %114 = ashr exact i64 %37, 2
  %115 = icmp eq i64 %37, 0
  %116 = select i1 %115, i64 1, i64 %114
  %117 = getelementptr inbounds %"class.std::__1::deque.1460", %"class.std::__1::deque.1460"* %0, i64 0, i32 0, i32 0, i32 3, i32 1, i32 0
  %118 = getelementptr inbounds %"struct.std::__1::__split_buffer.1628", %"struct.std::__1::__split_buffer.1628"* %6, i64 0, i32 3, i32 0, i32 0
  store i32** null, i32*** %118, align 8
  %119 = getelementptr inbounds %"struct.std::__1::__split_buffer.1628", %"struct.std::__1::__split_buffer.1628"* %6, i64 0, i32 3, i32 1, i32 0
  store %"class.v8::internal::RecyclingZoneAllocator.1466"* %117, %"class.v8::internal::RecyclingZoneAllocator.1466"** %119, align 8
  %120 = getelementptr inbounds %"class.std::__1::deque.1460", %"class.std::__1::deque.1460"* %0, i64 0, i32 0, i32 0, i32 3, i32 1, i32 0, i32 1
  %121 = load %"struct.v8::internal::RecyclingZoneAllocator<int *>::FreeBlock"*, %"struct.v8::internal::RecyclingZoneAllocator<int *>::FreeBlock"** %120, align 8
  %122 = icmp eq %"struct.v8::internal::RecyclingZoneAllocator<int *>::FreeBlock"* %121, null
  br i1 %122, label %132, label %123

123:                                              ; preds = %112
  %124 = getelementptr inbounds %"struct.v8::internal::RecyclingZoneAllocator<int *>::FreeBlock", %"struct.v8::internal::RecyclingZoneAllocator<int *>::FreeBlock"* %121, i64 0, i32 1
  %125 = load i64, i64* %124, align 8
  %126 = icmp ult i64 %125, %116
  br i1 %126, label %132, label %127

127:                                              ; preds = %123
  %128 = bitcast %"struct.v8::internal::RecyclingZoneAllocator<int *>::FreeBlock"* %121 to i32**
  %129 = bitcast %"struct.v8::internal::RecyclingZoneAllocator<int *>::FreeBlock"* %121 to i64*
  %130 = load i64, i64* %129, align 8
  %131 = bitcast %"struct.v8::internal::RecyclingZoneAllocator<int *>::FreeBlock"** %120 to i64*
  store i64 %130, i64* %131, align 8
  br label %149

132:                                              ; preds = %123, %112
  %133 = getelementptr inbounds %"class.v8::internal::RecyclingZoneAllocator.1466", %"class.v8::internal::RecyclingZoneAllocator.1466"* %117, i64 0, i32 0, i32 0
  %134 = load %"class.v8::internal::Zone"*, %"class.v8::internal::Zone"** %133, align 8
  %135 = shl i64 %116, 3
  %136 = getelementptr inbounds %"class.v8::internal::Zone", %"class.v8::internal::Zone"* %134, i64 0, i32 2
  %137 = load i64, i64* %136, align 8
  %138 = getelementptr inbounds %"class.v8::internal::Zone", %"class.v8::internal::Zone"* %134, i64 0, i32 3
  %139 = load i64, i64* %138, align 8
  %140 = sub i64 %139, %137
  %141 = icmp ugt i64 %135, %140
  br i1 %141, label %142, label %144, !prof !2

142:                                              ; preds = %132
  %143 = tail call i64 @_ZN2v88internal4Zone9NewExpandEm(%"class.v8::internal::Zone"* %134, i64 %135) #16
  br label %146

144:                                              ; preds = %132
  %145 = add i64 %137, %135
  store i64 %145, i64* %136, align 8
  br label %146

146:                                              ; preds = %144, %142
  %147 = phi i64 [ %143, %142 ], [ %137, %144 ]
  %148 = inttoptr i64 %147 to i32**
  br label %149

149:                                              ; preds = %127, %146
  %150 = phi i32** [ %128, %127 ], [ %148, %146 ]
  %151 = getelementptr inbounds %"struct.std::__1::__split_buffer.1628", %"struct.std::__1::__split_buffer.1628"* %6, i64 0, i32 0
  store i32** %150, i32*** %151, align 16
  %152 = getelementptr inbounds i32*, i32** %150, i64 %31
  %153 = getelementptr inbounds %"struct.std::__1::__split_buffer.1628", %"struct.std::__1::__split_buffer.1628"* %6, i64 0, i32 2
  store i32** %152, i32*** %153, align 16
  %154 = getelementptr inbounds %"struct.std::__1::__split_buffer.1628", %"struct.std::__1::__split_buffer.1628"* %6, i64 0, i32 1
  store i32** %152, i32*** %154, align 8
  %155 = getelementptr inbounds i32*, i32** %150, i64 %116
  store i32** %155, i32*** %118, align 8
  %156 = getelementptr inbounds %"class.std::__1::deque.1460", %"class.std::__1::deque.1460"* %0, i64 0, i32 0, i32 2, i32 1, i32 0, i32 1
  %157 = load %"struct.v8::internal::RecyclingZoneAllocator<int>::FreeBlock"*, %"struct.v8::internal::RecyclingZoneAllocator<int>::FreeBlock"** %156, align 8
  %158 = icmp eq %"struct.v8::internal::RecyclingZoneAllocator<int>::FreeBlock"* %157, null
  br i1 %158, label %168, label %159

159:                                              ; preds = %149
  %160 = getelementptr inbounds %"struct.v8::internal::RecyclingZoneAllocator<int>::FreeBlock", %"struct.v8::internal::RecyclingZoneAllocator<int>::FreeBlock"* %157, i64 0, i32 1
  %161 = load i64, i64* %160, align 8
  %162 = icmp ult i64 %161, 1024
  br i1 %162, label %168, label %163

163:                                              ; preds = %159
  %164 = bitcast %"struct.v8::internal::RecyclingZoneAllocator<int>::FreeBlock"* %157 to i32*
  %165 = bitcast %"struct.v8::internal::RecyclingZoneAllocator<int>::FreeBlock"* %157 to i64*
  %166 = load i64, i64* %165, align 8
  %167 = bitcast %"struct.v8::internal::RecyclingZoneAllocator<int>::FreeBlock"** %156 to i64*
  store i64 %166, i64* %167, align 8
  br label %184

168:                                              ; preds = %159, %149
  %169 = getelementptr inbounds %"class.v8::internal::RecyclingZoneAllocator.1470", %"class.v8::internal::RecyclingZoneAllocator.1470"* %8, i64 0, i32 0, i32 0
  %170 = load %"class.v8::internal::Zone"*, %"class.v8::internal::Zone"** %169, align 8
  %171 = getelementptr inbounds %"class.v8::internal::Zone", %"class.v8::internal::Zone"* %170, i64 0, i32 2
  %172 = load i64, i64* %171, align 8
  %173 = getelementptr inbounds %"class.v8::internal::Zone", %"class.v8::internal::Zone"* %170, i64 0, i32 3
  %174 = load i64, i64* %173, align 8
  %175 = sub i64 %174, %172
  %176 = icmp ult i64 %175, 4096
  br i1 %176, label %177, label %179, !prof !2

177:                                              ; preds = %168
  %178 = tail call i64 @_ZN2v88internal4Zone9NewExpandEm(%"class.v8::internal::Zone"* %170, i64 4096) #16
  br label %181

179:                                              ; preds = %168
  %180 = add i64 %172, 4096
  store i64 %180, i64* %171, align 8
  br label %181

181:                                              ; preds = %179, %177
  %182 = phi i64 [ %178, %177 ], [ %172, %179 ]
  %183 = inttoptr i64 %182 to i32*
  br label %184

184:                                              ; preds = %163, %181
  %185 = phi i32* [ %164, %163 ], [ %183, %181 ]
  %186 = bitcast i32** %7 to i8*
  call void @llvm.lifetime.start.p0i8(i64 8, i8* nonnull %186) #16
  store i32* %185, i32** %7, align 8
  call void @_ZNSt3__114__split_bufferIPiRN2v88internal22RecyclingZoneAllocatorIS1_EEE9push_backEOS1_(%"struct.std::__1::__split_buffer.1628"* nonnull %6, i32** nonnull dereferenceable(8) %7)
  call void @llvm.lifetime.end.p0i8(i64 8, i8* nonnull %186) #16
  %187 = load i32**, i32*** %24, align 8
  %188 = load i32**, i32*** %27, align 8
  %189 = icmp eq i32** %187, %188
  %190 = ptrtoint i32** %187 to i64
  br i1 %189, label %193, label %242

191:                                              ; preds = %242
  %192 = load i64, i64* %25, align 8
  br label %193

193:                                              ; preds = %191, %184
  %194 = phi i64 [ %192, %191 ], [ %190, %184 ]
  %195 = phi i32** [ %245, %191 ], [ %188, %184 ]
  %196 = ptrtoint i32** %195 to i64
  %197 = load i64, i64* %35, align 8
  %198 = bitcast %"struct.std::__1::__split_buffer.1628"* %6 to i64*
  %199 = bitcast i32*** %154 to i64*
  %200 = bitcast %"struct.std::__1::__split_buffer.1628"* %6 to <2 x i64>*
  %201 = load <2 x i64>, <2 x i64>* %200, align 16
  store i64 %197, i64* %198, align 16
  %202 = bitcast %"class.std::__1::deque.1460"* %0 to <2 x i64>*
  store <2 x i64> %201, <2 x i64>* %202, align 8
  store i64 %196, i64* %199, align 8
  %203 = bitcast i32*** %153 to i64*
  %204 = bitcast i32*** %118 to i64*
  %205 = bitcast i32*** %153 to <2 x i64>*
  %206 = load <2 x i64>, <2 x i64>* %205, align 16
  store i64 %194, i64* %203, align 16
  %207 = load i64, i64* %33, align 8
  %208 = bitcast i32*** %24 to <2 x i64>*
  store <2 x i64> %206, <2 x i64>* %208, align 8
  store i64 %207, i64* %204, align 8
  %209 = inttoptr i64 %194 to i32**
  %210 = icmp eq i32** %195, %209
  %211 = inttoptr i64 %197 to i32**
  br i1 %210, label %219, label %212

212:                                              ; preds = %193
  %213 = getelementptr i32*, i32** %209, i64 -1
  %214 = ptrtoint i32** %213 to i64
  %215 = sub i64 %214, %196
  %216 = lshr i64 %215, 3
  %217 = xor i64 %216, -1
  %218 = getelementptr i32*, i32** %209, i64 %217
  store i32** %218, i32*** %153, align 16
  br label %219

219:                                              ; preds = %212, %193
  %220 = icmp eq i64 %197, 0
  br i1 %220, label %241, label %221

221:                                              ; preds = %219
  %222 = sub i64 %207, %197
  %223 = ashr exact i64 %222, 3
  %224 = icmp ult i64 %222, 16
  br i1 %224, label %241, label %225

225:                                              ; preds = %221
  %226 = load %"class.v8::internal::RecyclingZoneAllocator.1466"*, %"class.v8::internal::RecyclingZoneAllocator.1466"** %119, align 8
  %227 = getelementptr inbounds %"class.v8::internal::RecyclingZoneAllocator.1466", %"class.v8::internal::RecyclingZoneAllocator.1466"* %226, i64 0, i32 1
  %228 = load %"struct.v8::internal::RecyclingZoneAllocator<int *>::FreeBlock"*, %"struct.v8::internal::RecyclingZoneAllocator<int *>::FreeBlock"** %227, align 8
  %229 = icmp eq %"struct.v8::internal::RecyclingZoneAllocator<int *>::FreeBlock"* %228, null
  br i1 %229, label %234, label %230

230:                                              ; preds = %225
  %231 = getelementptr inbounds %"struct.v8::internal::RecyclingZoneAllocator<int *>::FreeBlock", %"struct.v8::internal::RecyclingZoneAllocator<int *>::FreeBlock"* %228, i64 0, i32 1
  %232 = load i64, i64* %231, align 8
  %233 = icmp ugt i64 %232, %223
  br i1 %233, label %241, label %234

234:                                              ; preds = %230, %225
  %235 = getelementptr inbounds i32*, i32** %211, i64 1
  %236 = bitcast i32** %235 to i64*
  store i64 %223, i64* %236, align 8
  %237 = bitcast %"struct.v8::internal::RecyclingZoneAllocator<int *>::FreeBlock"** %227 to i64*
  %238 = load i64, i64* %237, align 8
  %239 = inttoptr i64 %197 to i64*
  store i64 %238, i64* %239, align 8
  %240 = bitcast %"struct.v8::internal::RecyclingZoneAllocator<int *>::FreeBlock"** %227 to i32***
  store i32** %211, i32*** %240, align 8
  br label %241

241:                                              ; preds = %219, %221, %230, %234
  call void @llvm.lifetime.end.p0i8(i64 40, i8* nonnull %113) #16
  br label %247

242:                                              ; preds = %184, %242
  %243 = phi i32** [ %244, %242 ], [ %187, %184 ]
  %244 = getelementptr inbounds i32*, i32** %243, i64 -1
  call void @_ZNSt3__114__split_bufferIPiRN2v88internal22RecyclingZoneAllocatorIS1_EEE10push_frontERKS1_(%"struct.std::__1::__split_buffer.1628"* nonnull %6, i32** dereferenceable(8) %244)
  %245 = load i32**, i32*** %27, align 8
  %246 = icmp eq i32** %244, %245
  br i1 %246, label %191, label %242

247:                                              ; preds = %241, %104, %72, %12
  ret void
}

; Function Attrs: inlinehint nounwind ssp uwtable
define linkonce_odr hidden void @_ZNSt3__114__split_bufferIPiN2v88internal22RecyclingZoneAllocatorIS1_EEE9push_backERKS1_(%"struct.std::__1::__split_buffer.1462"*, i32** dereferenceable(8)) local_unnamed_addr #5 comdat align 2 {
  %3 = getelementptr inbounds %"struct.std::__1::__split_buffer.1462", %"struct.std::__1::__split_buffer.1462"* %0, i64 0, i32 2
  %4 = load i32**, i32*** %3, align 8
  %5 = getelementptr inbounds %"struct.std::__1::__split_buffer.1462", %"struct.std::__1::__split_buffer.1462"* %0, i64 0, i32 3, i32 0, i32 0
  %6 = load i32**, i32*** %5, align 8
  %7 = icmp eq i32** %4, %6
  %8 = ptrtoint i32** %6 to i64
  %9 = ptrtoint i32** %4 to i64
  %10 = bitcast i32** %4 to i64*
  br i1 %7, label %11, label %195

11:                                               ; preds = %2
  %12 = getelementptr inbounds %"struct.std::__1::__split_buffer.1462", %"struct.std::__1::__split_buffer.1462"* %0, i64 0, i32 1
  %13 = load i32**, i32*** %12, align 8
  %14 = getelementptr inbounds %"struct.std::__1::__split_buffer.1462", %"struct.std::__1::__split_buffer.1462"* %0, i64 0, i32 0
  %15 = load i32**, i32*** %14, align 8
  %16 = icmp ugt i32** %13, %15
  %17 = ptrtoint i32** %15 to i64
  br i1 %16, label %18, label %37

18:                                               ; preds = %11
  %19 = ptrtoint i32** %13 to i64
  %20 = sub i64 %19, %17
  %21 = ashr exact i64 %20, 3
  %22 = add nsw i64 %21, 1
  %23 = sdiv i64 %22, -2
  %24 = getelementptr inbounds i32*, i32** %13, i64 %23
  %25 = sub i64 %9, %19
  %26 = ashr exact i64 %25, 3
  %27 = icmp eq i64 %25, 0
  br i1 %27, label %32, label %28

28:                                               ; preds = %18
  %29 = bitcast i32** %24 to i8*
  %30 = bitcast i32** %13 to i8*
  tail call void @llvm.memmove.p0i8.p0i8.i64(i8* align 8 %29, i8* align 8 %30, i64 %25, i1 false) #16
  %31 = load i32**, i32*** %12, align 8
  br label %32

32:                                               ; preds = %18, %28
  %33 = phi i32** [ %13, %18 ], [ %31, %28 ]
  %34 = getelementptr inbounds i32*, i32** %24, i64 %26
  store i32** %34, i32*** %3, align 8
  %35 = getelementptr inbounds i32*, i32** %33, i64 %23
  store i32** %35, i32*** %12, align 8
  %36 = bitcast i32** %34 to i64*
  br label %195

37:                                               ; preds = %11
  %38 = bitcast i32*** %5 to i64*
  %39 = bitcast %"struct.std::__1::__split_buffer.1462"* %0 to i64*
  %40 = sub i64 %8, %17
  %41 = ashr exact i64 %40, 2
  %42 = icmp eq i64 %40, 0
  %43 = select i1 %42, i64 1, i64 %41
  %44 = lshr i64 %43, 2
  %45 = getelementptr inbounds %"struct.std::__1::__split_buffer.1462", %"struct.std::__1::__split_buffer.1462"* %0, i64 0, i32 3, i32 1, i32 0, i32 1
  %46 = load %"struct.v8::internal::RecyclingZoneAllocator<int *>::FreeBlock"*, %"struct.v8::internal::RecyclingZoneAllocator<int *>::FreeBlock"** %45, align 8
  %47 = icmp eq %"struct.v8::internal::RecyclingZoneAllocator<int *>::FreeBlock"* %46, null
  br i1 %47, label %58, label %48

48:                                               ; preds = %37
  %49 = getelementptr inbounds %"struct.v8::internal::RecyclingZoneAllocator<int *>::FreeBlock", %"struct.v8::internal::RecyclingZoneAllocator<int *>::FreeBlock"* %46, i64 0, i32 1
  %50 = load i64, i64* %49, align 8
  %51 = icmp ult i64 %50, %43
  br i1 %51, label %58, label %52

52:                                               ; preds = %48
  %53 = bitcast %"struct.v8::internal::RecyclingZoneAllocator<int *>::FreeBlock"* %46 to i32**
  %54 = bitcast %"struct.v8::internal::RecyclingZoneAllocator<int *>::FreeBlock"* %46 to i64*
  %55 = load i64, i64* %54, align 8
  %56 = bitcast %"struct.v8::internal::RecyclingZoneAllocator<int *>::FreeBlock"** %45 to i64*
  store i64 %55, i64* %56, align 8
  %57 = bitcast i32*** %3 to i64*
  br label %78

58:                                               ; preds = %48, %37
  %59 = getelementptr inbounds %"struct.std::__1::__split_buffer.1462", %"struct.std::__1::__split_buffer.1462"* %0, i64 0, i32 3, i32 1, i32 0, i32 0, i32 0
  %60 = load %"class.v8::internal::Zone"*, %"class.v8::internal::Zone"** %59, align 8
  %61 = shl i64 %43, 3
  %62 = getelementptr inbounds %"class.v8::internal::Zone", %"class.v8::internal::Zone"* %60, i64 0, i32 2
  %63 = load i64, i64* %62, align 8
  %64 = getelementptr inbounds %"class.v8::internal::Zone", %"class.v8::internal::Zone"* %60, i64 0, i32 3
  %65 = load i64, i64* %64, align 8
  %66 = sub i64 %65, %63
  %67 = icmp ugt i64 %61, %66
  br i1 %67, label %68, label %70, !prof !2

68:                                               ; preds = %58
  %69 = tail call i64 @_ZN2v88internal4Zone9NewExpandEm(%"class.v8::internal::Zone"* %60, i64 %61) #16
  br label %72

70:                                               ; preds = %58
  %71 = add i64 %63, %61
  store i64 %71, i64* %62, align 8
  br label %72

72:                                               ; preds = %70, %68
  %73 = phi i64 [ %69, %68 ], [ %63, %70 ]
  %74 = inttoptr i64 %73 to i32**
  %75 = load i32**, i32*** %12, align 8
  %76 = bitcast i32*** %3 to i64*
  %77 = load i64, i64* %76, align 8
  br label %78

78:                                               ; preds = %52, %72
  %79 = phi i64* [ %57, %52 ], [ %76, %72 ]
  %80 = phi i64 [ %9, %52 ], [ %77, %72 ]
  %81 = phi i32** [ %13, %52 ], [ %75, %72 ]
  %82 = phi i32** [ %53, %52 ], [ %74, %72 ]
  %83 = ptrtoint i32** %82 to i64
  %84 = getelementptr inbounds i32*, i32** %82, i64 %44
  %85 = ptrtoint i32** %84 to i64
  %86 = getelementptr inbounds i32*, i32** %82, i64 %43
  %87 = ptrtoint i32** %86 to i64
  %88 = ptrtoint i32** %81 to i64
  %89 = sub i64 %80, %88
  %90 = ashr exact i64 %89, 3
  %91 = getelementptr inbounds i32*, i32** %84, i64 %90
  %92 = icmp eq i64 %89, 0
  br i1 %92, label %167, label %93

93:                                               ; preds = %78
  %94 = add i64 %89, -8
  %95 = lshr i64 %94, 3
  %96 = add nuw nsw i64 %95, 1
  %97 = and i64 %96, 7
  %98 = icmp eq i64 %97, 0
  br i1 %98, label %114, label %99

99:                                               ; preds = %93, %99
  %100 = phi i32** [ %107, %99 ], [ %84, %93 ]
  %101 = phi i64 [ %108, %99 ], [ %85, %93 ]
  %102 = phi i32** [ %109, %99 ], [ %81, %93 ]
  %103 = phi i64 [ %110, %99 ], [ %97, %93 ]
  %104 = bitcast i32** %102 to i64*
  %105 = load i64, i64* %104, align 8
  %106 = inttoptr i64 %101 to i64*
  store i64 %105, i64* %106, align 8
  %107 = getelementptr inbounds i32*, i32** %100, i64 1
  %108 = ptrtoint i32** %107 to i64
  %109 = getelementptr inbounds i32*, i32** %102, i64 1
  %110 = add i64 %103, -1
  %111 = icmp eq i64 %110, 0
  br i1 %111, label %112, label %99, !llvm.loop !264

112:                                              ; preds = %99
  %113 = ptrtoint i32** %107 to i64
  br label %114

114:                                              ; preds = %93, %112
  %115 = phi i32** [ %84, %93 ], [ %107, %112 ]
  %116 = phi i64 [ %85, %93 ], [ %113, %112 ]
  %117 = phi i32** [ %81, %93 ], [ %109, %112 ]
  %118 = icmp ult i64 %94, 56
  br i1 %118, label %165, label %119

119:                                              ; preds = %114, %119
  %120 = phi i32** [ %161, %119 ], [ %115, %114 ]
  %121 = phi i64 [ %162, %119 ], [ %116, %114 ]
  %122 = phi i32** [ %163, %119 ], [ %117, %114 ]
  %123 = bitcast i32** %122 to i64*
  %124 = load i64, i64* %123, align 8
  %125 = inttoptr i64 %121 to i64*
  store i64 %124, i64* %125, align 8
  %126 = getelementptr inbounds i32*, i32** %120, i64 1
  %127 = getelementptr inbounds i32*, i32** %122, i64 1
  %128 = bitcast i32** %127 to i64*
  %129 = load i64, i64* %128, align 8
  %130 = bitcast i32** %126 to i64*
  store i64 %129, i64* %130, align 8
  %131 = getelementptr inbounds i32*, i32** %120, i64 2
  %132 = getelementptr inbounds i32*, i32** %122, i64 2
  %133 = bitcast i32** %132 to i64*
  %134 = load i64, i64* %133, align 8
  %135 = bitcast i32** %131 to i64*
  store i64 %134, i64* %135, align 8
  %136 = getelementptr inbounds i32*, i32** %120, i64 3
  %137 = getelementptr inbounds i32*, i32** %122, i64 3
  %138 = bitcast i32** %137 to i64*
  %139 = load i64, i64* %138, align 8
  %140 = bitcast i32** %136 to i64*
  store i64 %139, i64* %140, align 8
  %141 = getelementptr inbounds i32*, i32** %120, i64 4
  %142 = getelementptr inbounds i32*, i32** %122, i64 4
  %143 = bitcast i32** %142 to i64*
  %144 = load i64, i64* %143, align 8
  %145 = bitcast i32** %141 to i64*
  store i64 %144, i64* %145, align 8
  %146 = getelementptr inbounds i32*, i32** %120, i64 5
  %147 = getelementptr inbounds i32*, i32** %122, i64 5
  %148 = bitcast i32** %147 to i64*
  %149 = load i64, i64* %148, align 8
  %150 = bitcast i32** %146 to i64*
  store i64 %149, i64* %150, align 8
  %151 = getelementptr inbounds i32*, i32** %120, i64 6
  %152 = getelementptr inbounds i32*, i32** %122, i64 6
  %153 = bitcast i32** %152 to i64*
  %154 = load i64, i64* %153, align 8
  %155 = bitcast i32** %151 to i64*
  store i64 %154, i64* %155, align 8
  %156 = getelementptr inbounds i32*, i32** %120, i64 7
  %157 = getelementptr inbounds i32*, i32** %122, i64 7
  %158 = bitcast i32** %157 to i64*
  %159 = load i64, i64* %158, align 8
  %160 = bitcast i32** %156 to i64*
  store i64 %159, i64* %160, align 8
  %161 = getelementptr inbounds i32*, i32** %120, i64 8
  %162 = ptrtoint i32** %161 to i64
  %163 = getelementptr inbounds i32*, i32** %122, i64 8
  %164 = icmp eq i32** %91, %161
  br i1 %164, label %165, label %119

165:                                              ; preds = %119, %114
  %166 = ptrtoint i32** %91 to i64
  br label %167

167:                                              ; preds = %78, %165
  %168 = phi i64 [ %166, %165 ], [ %85, %78 ]
  %169 = load i64, i64* %39, align 8
  store i64 %83, i64* %39, align 8
  %170 = bitcast i32*** %12 to i64*
  store i64 %85, i64* %170, align 8
  store i64 %168, i64* %79, align 8
  %171 = load i64, i64* %38, align 8
  store i64 %87, i64* %38, align 8
  %172 = inttoptr i64 %169 to i32**
  %173 = icmp eq i64 %169, 0
  %174 = inttoptr i64 %168 to i64*
  br i1 %173, label %195, label %175

175:                                              ; preds = %167
  %176 = sub i64 %171, %169
  %177 = ashr exact i64 %176, 3
  %178 = icmp ult i64 %176, 16
  br i1 %178, label %195, label %179

179:                                              ; preds = %175
  %180 = load %"struct.v8::internal::RecyclingZoneAllocator<int *>::FreeBlock"*, %"struct.v8::internal::RecyclingZoneAllocator<int *>::FreeBlock"** %45, align 8
  %181 = icmp eq %"struct.v8::internal::RecyclingZoneAllocator<int *>::FreeBlock"* %180, null
  br i1 %181, label %186, label %182

182:                                              ; preds = %179
  %183 = getelementptr inbounds %"struct.v8::internal::RecyclingZoneAllocator<int *>::FreeBlock", %"struct.v8::internal::RecyclingZoneAllocator<int *>::FreeBlock"* %180, i64 0, i32 1
  %184 = load i64, i64* %183, align 8
  %185 = icmp ugt i64 %184, %177
  br i1 %185, label %195, label %186

186:                                              ; preds = %182, %179
  %187 = getelementptr inbounds i32*, i32** %172, i64 1
  %188 = bitcast i32** %187 to i64*
  store i64 %177, i64* %188, align 8
  %189 = bitcast %"struct.v8::internal::RecyclingZoneAllocator<int *>::FreeBlock"** %45 to i64*
  %190 = load i64, i64* %189, align 8
  %191 = inttoptr i64 %169 to i64*
  store i64 %190, i64* %191, align 8
  %192 = bitcast %"struct.v8::internal::RecyclingZoneAllocator<int *>::FreeBlock"** %45 to i32***
  store i32** %172, i32*** %192, align 8
  %193 = bitcast i32*** %3 to i64**
  %194 = load i64*, i64** %193, align 8
  br label %195

195:                                              ; preds = %186, %182, %175, %167, %32, %2
  %196 = phi i64* [ %194, %186 ], [ %174, %182 ], [ %174, %175 ], [ %174, %167 ], [ %36, %32 ], [ %10, %2 ]
  %197 = bitcast i32** %1 to i64*
  %198 = load i64, i64* %197, align 8
  store i64 %198, i64* %196, align 8
  %199 = load i32**, i32*** %3, align 8
  %200 = getelementptr inbounds i32*, i32** %199, i64 1
  store i32** %200, i32*** %3, align 8
  ret void
}

; Function Attrs: nounwind ssp uwtable
define linkonce_odr hidden void @_ZNSt3__114__split_bufferIPiN2v88internal22RecyclingZoneAllocatorIS1_EEE9push_backEOS1_(%"struct.std::__1::__split_buffer.1462"*, i32** dereferenceable(8)) local_unnamed_addr #0 comdat align 2 {
  %3 = getelementptr inbounds %"struct.std::__1::__split_buffer.1462", %"struct.std::__1::__split_buffer.1462"* %0, i64 0, i32 2
  %4 = load i32**, i32*** %3, align 8
  %5 = getelementptr inbounds %"struct.std::__1::__split_buffer.1462", %"struct.std::__1::__split_buffer.1462"* %0, i64 0, i32 3, i32 0, i32 0
  %6 = load i32**, i32*** %5, align 8
  %7 = icmp eq i32** %4, %6
  %8 = ptrtoint i32** %6 to i64
  %9 = ptrtoint i32** %4 to i64
  %10 = bitcast i32** %4 to i64*
  br i1 %7, label %11, label %195

11:                                               ; preds = %2
  %12 = getelementptr inbounds %"struct.std::__1::__split_buffer.1462", %"struct.std::__1::__split_buffer.1462"* %0, i64 0, i32 1
  %13 = load i32**, i32*** %12, align 8
  %14 = getelementptr inbounds %"struct.std::__1::__split_buffer.1462", %"struct.std::__1::__split_buffer.1462"* %0, i64 0, i32 0
  %15 = load i32**, i32*** %14, align 8
  %16 = icmp ugt i32** %13, %15
  %17 = ptrtoint i32** %15 to i64
  br i1 %16, label %18, label %37

18:                                               ; preds = %11
  %19 = ptrtoint i32** %13 to i64
  %20 = sub i64 %19, %17
  %21 = ashr exact i64 %20, 3
  %22 = add nsw i64 %21, 1
  %23 = sdiv i64 %22, -2
  %24 = getelementptr inbounds i32*, i32** %13, i64 %23
  %25 = sub i64 %9, %19
  %26 = ashr exact i64 %25, 3
  %27 = icmp eq i64 %25, 0
  br i1 %27, label %32, label %28

28:                                               ; preds = %18
  %29 = bitcast i32** %24 to i8*
  %30 = bitcast i32** %13 to i8*
  tail call void @llvm.memmove.p0i8.p0i8.i64(i8* align 8 %29, i8* align 8 %30, i64 %25, i1 false) #16
  %31 = load i32**, i32*** %12, align 8
  br label %32

32:                                               ; preds = %18, %28
  %33 = phi i32** [ %13, %18 ], [ %31, %28 ]
  %34 = getelementptr inbounds i32*, i32** %24, i64 %26
  store i32** %34, i32*** %3, align 8
  %35 = getelementptr inbounds i32*, i32** %33, i64 %23
  store i32** %35, i32*** %12, align 8
  %36 = bitcast i32** %34 to i64*
  br label %195

37:                                               ; preds = %11
  %38 = bitcast i32*** %5 to i64*
  %39 = bitcast %"struct.std::__1::__split_buffer.1462"* %0 to i64*
  %40 = sub i64 %8, %17
  %41 = ashr exact i64 %40, 2
  %42 = icmp eq i64 %40, 0
  %43 = select i1 %42, i64 1, i64 %41
  %44 = lshr i64 %43, 2
  %45 = getelementptr inbounds %"struct.std::__1::__split_buffer.1462", %"struct.std::__1::__split_buffer.1462"* %0, i64 0, i32 3, i32 1, i32 0, i32 1
  %46 = load %"struct.v8::internal::RecyclingZoneAllocator<int *>::FreeBlock"*, %"struct.v8::internal::RecyclingZoneAllocator<int *>::FreeBlock"** %45, align 8
  %47 = icmp eq %"struct.v8::internal::RecyclingZoneAllocator<int *>::FreeBlock"* %46, null
  br i1 %47, label %58, label %48

48:                                               ; preds = %37
  %49 = getelementptr inbounds %"struct.v8::internal::RecyclingZoneAllocator<int *>::FreeBlock", %"struct.v8::internal::RecyclingZoneAllocator<int *>::FreeBlock"* %46, i64 0, i32 1
  %50 = load i64, i64* %49, align 8
  %51 = icmp ult i64 %50, %43
  br i1 %51, label %58, label %52

52:                                               ; preds = %48
  %53 = bitcast %"struct.v8::internal::RecyclingZoneAllocator<int *>::FreeBlock"* %46 to i32**
  %54 = bitcast %"struct.v8::internal::RecyclingZoneAllocator<int *>::FreeBlock"* %46 to i64*
  %55 = load i64, i64* %54, align 8
  %56 = bitcast %"struct.v8::internal::RecyclingZoneAllocator<int *>::FreeBlock"** %45 to i64*
  store i64 %55, i64* %56, align 8
  %57 = bitcast i32*** %3 to i64*
  br label %78

58:                                               ; preds = %48, %37
  %59 = getelementptr inbounds %"struct.std::__1::__split_buffer.1462", %"struct.std::__1::__split_buffer.1462"* %0, i64 0, i32 3, i32 1, i32 0, i32 0, i32 0
  %60 = load %"class.v8::internal::Zone"*, %"class.v8::internal::Zone"** %59, align 8
  %61 = shl i64 %43, 3
  %62 = getelementptr inbounds %"class.v8::internal::Zone", %"class.v8::internal::Zone"* %60, i64 0, i32 2
  %63 = load i64, i64* %62, align 8
  %64 = getelementptr inbounds %"class.v8::internal::Zone", %"class.v8::internal::Zone"* %60, i64 0, i32 3
  %65 = load i64, i64* %64, align 8
  %66 = sub i64 %65, %63
  %67 = icmp ugt i64 %61, %66
  br i1 %67, label %68, label %70, !prof !2

68:                                               ; preds = %58
  %69 = tail call i64 @_ZN2v88internal4Zone9NewExpandEm(%"class.v8::internal::Zone"* %60, i64 %61) #16
  br label %72

70:                                               ; preds = %58
  %71 = add i64 %63, %61
  store i64 %71, i64* %62, align 8
  br label %72

72:                                               ; preds = %70, %68
  %73 = phi i64 [ %69, %68 ], [ %63, %70 ]
  %74 = inttoptr i64 %73 to i32**
  %75 = load i32**, i32*** %12, align 8
  %76 = bitcast i32*** %3 to i64*
  %77 = load i64, i64* %76, align 8
  br label %78

78:                                               ; preds = %52, %72
  %79 = phi i64* [ %57, %52 ], [ %76, %72 ]
  %80 = phi i64 [ %9, %52 ], [ %77, %72 ]
  %81 = phi i32** [ %13, %52 ], [ %75, %72 ]
  %82 = phi i32** [ %53, %52 ], [ %74, %72 ]
  %83 = ptrtoint i32** %82 to i64
  %84 = getelementptr inbounds i32*, i32** %82, i64 %44
  %85 = ptrtoint i32** %84 to i64
  %86 = getelementptr inbounds i32*, i32** %82, i64 %43
  %87 = ptrtoint i32** %86 to i64
  %88 = ptrtoint i32** %81 to i64
  %89 = sub i64 %80, %88
  %90 = ashr exact i64 %89, 3
  %91 = getelementptr inbounds i32*, i32** %84, i64 %90
  %92 = icmp eq i64 %89, 0
  br i1 %92, label %167, label %93

93:                                               ; preds = %78
  %94 = add i64 %89, -8
  %95 = lshr i64 %94, 3
  %96 = add nuw nsw i64 %95, 1
  %97 = and i64 %96, 7
  %98 = icmp eq i64 %97, 0
  br i1 %98, label %114, label %99

99:                                               ; preds = %93, %99
  %100 = phi i32** [ %107, %99 ], [ %84, %93 ]
  %101 = phi i64 [ %108, %99 ], [ %85, %93 ]
  %102 = phi i32** [ %109, %99 ], [ %81, %93 ]
  %103 = phi i64 [ %110, %99 ], [ %97, %93 ]
  %104 = bitcast i32** %102 to i64*
  %105 = load i64, i64* %104, align 8
  %106 = inttoptr i64 %101 to i64*
  store i64 %105, i64* %106, align 8
  %107 = getelementptr inbounds i32*, i32** %100, i64 1
  %108 = ptrtoint i32** %107 to i64
  %109 = getelementptr inbounds i32*, i32** %102, i64 1
  %110 = add i64 %103, -1
  %111 = icmp eq i64 %110, 0
  br i1 %111, label %112, label %99, !llvm.loop !265

112:                                              ; preds = %99
  %113 = ptrtoint i32** %107 to i64
  br label %114

114:                                              ; preds = %93, %112
  %115 = phi i32** [ %84, %93 ], [ %107, %112 ]
  %116 = phi i64 [ %85, %93 ], [ %113, %112 ]
  %117 = phi i32** [ %81, %93 ], [ %109, %112 ]
  %118 = icmp ult i64 %94, 56
  br i1 %118, label %165, label %119

119:                                              ; preds = %114, %119
  %120 = phi i32** [ %161, %119 ], [ %115, %114 ]
  %121 = phi i64 [ %162, %119 ], [ %116, %114 ]
  %122 = phi i32** [ %163, %119 ], [ %117, %114 ]
  %123 = bitcast i32** %122 to i64*
  %124 = load i64, i64* %123, align 8
  %125 = inttoptr i64 %121 to i64*
  store i64 %124, i64* %125, align 8
  %126 = getelementptr inbounds i32*, i32** %120, i64 1
  %127 = getelementptr inbounds i32*, i32** %122, i64 1
  %128 = bitcast i32** %127 to i64*
  %129 = load i64, i64* %128, align 8
  %130 = bitcast i32** %126 to i64*
  store i64 %129, i64* %130, align 8
  %131 = getelementptr inbounds i32*, i32** %120, i64 2
  %132 = getelementptr inbounds i32*, i32** %122, i64 2
  %133 = bitcast i32** %132 to i64*
  %134 = load i64, i64* %133, align 8
  %135 = bitcast i32** %131 to i64*
  store i64 %134, i64* %135, align 8
  %136 = getelementptr inbounds i32*, i32** %120, i64 3
  %137 = getelementptr inbounds i32*, i32** %122, i64 3
  %138 = bitcast i32** %137 to i64*
  %139 = load i64, i64* %138, align 8
  %140 = bitcast i32** %136 to i64*
  store i64 %139, i64* %140, align 8
  %141 = getelementptr inbounds i32*, i32** %120, i64 4
  %142 = getelementptr inbounds i32*, i32** %122, i64 4
  %143 = bitcast i32** %142 to i64*
  %144 = load i64, i64* %143, align 8
  %145 = bitcast i32** %141 to i64*
  store i64 %144, i64* %145, align 8
  %146 = getelementptr inbounds i32*, i32** %120, i64 5
  %147 = getelementptr inbounds i32*, i32** %122, i64 5
  %148 = bitcast i32** %147 to i64*
  %149 = load i64, i64* %148, align 8
  %150 = bitcast i32** %146 to i64*
  store i64 %149, i64* %150, align 8
  %151 = getelementptr inbounds i32*, i32** %120, i64 6
  %152 = getelementptr inbounds i32*, i32** %122, i64 6
  %153 = bitcast i32** %152 to i64*
  %154 = load i64, i64* %153, align 8
  %155 = bitcast i32** %151 to i64*
  store i64 %154, i64* %155, align 8
  %156 = getelementptr inbounds i32*, i32** %120, i64 7
  %157 = getelementptr inbounds i32*, i32** %122, i64 7
  %158 = bitcast i32** %157 to i64*
  %159 = load i64, i64* %158, align 8
  %160 = bitcast i32** %156 to i64*
  store i64 %159, i64* %160, align 8
  %161 = getelementptr inbounds i32*, i32** %120, i64 8
  %162 = ptrtoint i32** %161 to i64
  %163 = getelementptr inbounds i32*, i32** %122, i64 8
  %164 = icmp eq i32** %91, %161
  br i1 %164, label %165, label %119

165:                                              ; preds = %119, %114
  %166 = ptrtoint i32** %91 to i64
  br label %167

167:                                              ; preds = %78, %165
  %168 = phi i64 [ %166, %165 ], [ %85, %78 ]
  %169 = load i64, i64* %39, align 8
  store i64 %83, i64* %39, align 8
  %170 = bitcast i32*** %12 to i64*
  store i64 %85, i64* %170, align 8
  store i64 %168, i64* %79, align 8
  %171 = load i64, i64* %38, align 8
  store i64 %87, i64* %38, align 8
  %172 = inttoptr i64 %169 to i32**
  %173 = icmp eq i64 %169, 0
  %174 = inttoptr i64 %168 to i64*
  br i1 %173, label %195, label %175

175:                                              ; preds = %167
  %176 = sub i64 %171, %169
  %177 = ashr exact i64 %176, 3
  %178 = icmp ult i64 %176, 16
  br i1 %178, label %195, label %179

179:                                              ; preds = %175
  %180 = load %"struct.v8::internal::RecyclingZoneAllocator<int *>::FreeBlock"*, %"struct.v8::internal::RecyclingZoneAllocator<int *>::FreeBlock"** %45, align 8
  %181 = icmp eq %"struct.v8::internal::RecyclingZoneAllocator<int *>::FreeBlock"* %180, null
  br i1 %181, label %186, label %182

182:                                              ; preds = %179
  %183 = getelementptr inbounds %"struct.v8::internal::RecyclingZoneAllocator<int *>::FreeBlock", %"struct.v8::internal::RecyclingZoneAllocator<int *>::FreeBlock"* %180, i64 0, i32 1
  %184 = load i64, i64* %183, align 8
  %185 = icmp ugt i64 %184, %177
  br i1 %185, label %195, label %186

186:                                              ; preds = %182, %179
  %187 = getelementptr inbounds i32*, i32** %172, i64 1
  %188 = bitcast i32** %187 to i64*
  store i64 %177, i64* %188, align 8
  %189 = bitcast %"struct.v8::internal::RecyclingZoneAllocator<int *>::FreeBlock"** %45 to i64*
  %190 = load i64, i64* %189, align 8
  %191 = inttoptr i64 %169 to i64*
  store i64 %190, i64* %191, align 8
  %192 = bitcast %"struct.v8::internal::RecyclingZoneAllocator<int *>::FreeBlock"** %45 to i32***
  store i32** %172, i32*** %192, align 8
  %193 = bitcast i32*** %3 to i64**
  %194 = load i64*, i64** %193, align 8
  br label %195

195:                                              ; preds = %186, %182, %175, %167, %32, %2
  %196 = phi i64* [ %194, %186 ], [ %174, %182 ], [ %174, %175 ], [ %174, %167 ], [ %36, %32 ], [ %10, %2 ]
  %197 = bitcast i32** %1 to i64*
  %198 = load i64, i64* %197, align 8
  store i64 %198, i64* %196, align 8
  %199 = load i32**, i32*** %3, align 8
  %200 = getelementptr inbounds i32*, i32** %199, i64 1
  store i32** %200, i32*** %3, align 8
  ret void
}

; Function Attrs: nounwind ssp uwtable
define linkonce_odr hidden void @_ZNSt3__114__split_bufferIPiN2v88internal22RecyclingZoneAllocatorIS1_EEE10push_frontEOS1_(%"struct.std::__1::__split_buffer.1462"*, i32** dereferenceable(8)) local_unnamed_addr #0 comdat align 2 {
  %3 = getelementptr inbounds %"struct.std::__1::__split_buffer.1462", %"struct.std::__1::__split_buffer.1462"* %0, i64 0, i32 1
  %4 = load i32**, i32*** %3, align 8
  %5 = getelementptr inbounds %"struct.std::__1::__split_buffer.1462", %"struct.std::__1::__split_buffer.1462"* %0, i64 0, i32 0
  %6 = load i32**, i32*** %5, align 8
  %7 = icmp eq i32** %4, %6
  %8 = ptrtoint i32** %6 to i64
  br i1 %7, label %9, label %194

9:                                                ; preds = %2
  %10 = getelementptr inbounds %"struct.std::__1::__split_buffer.1462", %"struct.std::__1::__split_buffer.1462"* %0, i64 0, i32 2
  %11 = load i32**, i32*** %10, align 8
  %12 = getelementptr inbounds %"struct.std::__1::__split_buffer.1462", %"struct.std::__1::__split_buffer.1462"* %0, i64 0, i32 3, i32 0, i32 0
  %13 = load i32**, i32*** %12, align 8
  %14 = icmp ult i32** %11, %13
  %15 = bitcast i32*** %12 to i64*
  %16 = ptrtoint i32** %13 to i64
  %17 = ptrtoint i32** %11 to i64
  br i1 %14, label %18, label %38

18:                                               ; preds = %9
  %19 = sub i64 %16, %17
  %20 = ashr exact i64 %19, 3
  %21 = add nsw i64 %20, 1
  %22 = sdiv i64 %21, 2
  %23 = getelementptr inbounds i32*, i32** %11, i64 %22
  %24 = ptrtoint i32** %4 to i64
  %25 = sub i64 %17, %24
  %26 = icmp eq i64 %25, 0
  br i1 %26, label %34, label %27

27:                                               ; preds = %18
  %28 = ashr exact i64 %25, 3
  %29 = sub nsw i64 0, %28
  %30 = getelementptr inbounds i32*, i32** %23, i64 %29
  %31 = bitcast i32** %30 to i8*
  %32 = bitcast i32** %4 to i8*
  tail call void @llvm.memmove.p0i8.p0i8.i64(i8* align 8 %31, i8* align 8 %32, i64 %25, i1 false) #16
  %33 = load i32**, i32*** %10, align 8
  br label %34

34:                                               ; preds = %18, %27
  %35 = phi i32** [ %33, %27 ], [ %11, %18 ]
  %36 = phi i32** [ %30, %27 ], [ %23, %18 ]
  store i32** %36, i32*** %3, align 8
  %37 = getelementptr inbounds i32*, i32** %35, i64 %22
  store i32** %37, i32*** %10, align 8
  br label %194

38:                                               ; preds = %9
  %39 = bitcast %"struct.std::__1::__split_buffer.1462"* %0 to i64*
  %40 = sub i64 %16, %8
  %41 = ashr exact i64 %40, 2
  %42 = icmp eq i64 %40, 0
  %43 = select i1 %42, i64 1, i64 %41
  %44 = add nsw i64 %43, 3
  %45 = lshr i64 %44, 2
  %46 = getelementptr inbounds %"struct.std::__1::__split_buffer.1462", %"struct.std::__1::__split_buffer.1462"* %0, i64 0, i32 3, i32 1, i32 0, i32 1
  %47 = load %"struct.v8::internal::RecyclingZoneAllocator<int *>::FreeBlock"*, %"struct.v8::internal::RecyclingZoneAllocator<int *>::FreeBlock"** %46, align 8
  %48 = icmp eq %"struct.v8::internal::RecyclingZoneAllocator<int *>::FreeBlock"* %47, null
  br i1 %48, label %59, label %49

49:                                               ; preds = %38
  %50 = getelementptr inbounds %"struct.v8::internal::RecyclingZoneAllocator<int *>::FreeBlock", %"struct.v8::internal::RecyclingZoneAllocator<int *>::FreeBlock"* %47, i64 0, i32 1
  %51 = load i64, i64* %50, align 8
  %52 = icmp ult i64 %51, %43
  br i1 %52, label %59, label %53

53:                                               ; preds = %49
  %54 = bitcast %"struct.v8::internal::RecyclingZoneAllocator<int *>::FreeBlock"* %47 to i32**
  %55 = bitcast %"struct.v8::internal::RecyclingZoneAllocator<int *>::FreeBlock"* %47 to i64*
  %56 = load i64, i64* %55, align 8
  %57 = bitcast %"struct.v8::internal::RecyclingZoneAllocator<int *>::FreeBlock"** %46 to i64*
  store i64 %56, i64* %57, align 8
  %58 = bitcast i32*** %10 to i64*
  br label %79

59:                                               ; preds = %49, %38
  %60 = getelementptr inbounds %"struct.std::__1::__split_buffer.1462", %"struct.std::__1::__split_buffer.1462"* %0, i64 0, i32 3, i32 1, i32 0, i32 0, i32 0
  %61 = load %"class.v8::internal::Zone"*, %"class.v8::internal::Zone"** %60, align 8
  %62 = shl i64 %43, 3
  %63 = getelementptr inbounds %"class.v8::internal::Zone", %"class.v8::internal::Zone"* %61, i64 0, i32 2
  %64 = load i64, i64* %63, align 8
  %65 = getelementptr inbounds %"class.v8::internal::Zone", %"class.v8::internal::Zone"* %61, i64 0, i32 3
  %66 = load i64, i64* %65, align 8
  %67 = sub i64 %66, %64
  %68 = icmp ugt i64 %62, %67
  br i1 %68, label %69, label %71, !prof !2

69:                                               ; preds = %59
  %70 = tail call i64 @_ZN2v88internal4Zone9NewExpandEm(%"class.v8::internal::Zone"* %61, i64 %62) #16
  br label %73

71:                                               ; preds = %59
  %72 = add i64 %64, %62
  store i64 %72, i64* %63, align 8
  br label %73

73:                                               ; preds = %71, %69
  %74 = phi i64 [ %70, %69 ], [ %64, %71 ]
  %75 = inttoptr i64 %74 to i32**
  %76 = load i32**, i32*** %3, align 8
  %77 = bitcast i32*** %10 to i64*
  %78 = load i64, i64* %77, align 8
  br label %79

79:                                               ; preds = %53, %73
  %80 = phi i64* [ %58, %53 ], [ %77, %73 ]
  %81 = phi i64 [ %17, %53 ], [ %78, %73 ]
  %82 = phi i32** [ %4, %53 ], [ %76, %73 ]
  %83 = phi i32** [ %54, %53 ], [ %75, %73 ]
  %84 = ptrtoint i32** %83 to i64
  %85 = getelementptr inbounds i32*, i32** %83, i64 %45
  %86 = ptrtoint i32** %85 to i64
  %87 = getelementptr inbounds i32*, i32** %83, i64 %43
  %88 = ptrtoint i32** %87 to i64
  %89 = ptrtoint i32** %82 to i64
  %90 = sub i64 %81, %89
  %91 = ashr exact i64 %90, 3
  %92 = getelementptr inbounds i32*, i32** %85, i64 %91
  %93 = icmp eq i64 %90, 0
  br i1 %93, label %168, label %94

94:                                               ; preds = %79
  %95 = add i64 %90, -8
  %96 = lshr i64 %95, 3
  %97 = add nuw nsw i64 %96, 1
  %98 = and i64 %97, 7
  %99 = icmp eq i64 %98, 0
  br i1 %99, label %115, label %100

100:                                              ; preds = %94, %100
  %101 = phi i32** [ %108, %100 ], [ %85, %94 ]
  %102 = phi i64 [ %109, %100 ], [ %86, %94 ]
  %103 = phi i32** [ %110, %100 ], [ %82, %94 ]
  %104 = phi i64 [ %111, %100 ], [ %98, %94 ]
  %105 = bitcast i32** %103 to i64*
  %106 = load i64, i64* %105, align 8
  %107 = inttoptr i64 %102 to i64*
  store i64 %106, i64* %107, align 8
  %108 = getelementptr inbounds i32*, i32** %101, i64 1
  %109 = ptrtoint i32** %108 to i64
  %110 = getelementptr inbounds i32*, i32** %103, i64 1
  %111 = add i64 %104, -1
  %112 = icmp eq i64 %111, 0
  br i1 %112, label %113, label %100, !llvm.loop !266

113:                                              ; preds = %100
  %114 = ptrtoint i32** %108 to i64
  br label %115

115:                                              ; preds = %94, %113
  %116 = phi i32** [ %85, %94 ], [ %108, %113 ]
  %117 = phi i64 [ %86, %94 ], [ %114, %113 ]
  %118 = phi i32** [ %82, %94 ], [ %110, %113 ]
  %119 = icmp ult i64 %95, 56
  br i1 %119, label %166, label %120

120:                                              ; preds = %115, %120
  %121 = phi i32** [ %162, %120 ], [ %116, %115 ]
  %122 = phi i64 [ %163, %120 ], [ %117, %115 ]
  %123 = phi i32** [ %164, %120 ], [ %118, %115 ]
  %124 = bitcast i32** %123 to i64*
  %125 = load i64, i64* %124, align 8
  %126 = inttoptr i64 %122 to i64*
  store i64 %125, i64* %126, align 8
  %127 = getelementptr inbounds i32*, i32** %121, i64 1
  %128 = getelementptr inbounds i32*, i32** %123, i64 1
  %129 = bitcast i32** %128 to i64*
  %130 = load i64, i64* %129, align 8
  %131 = bitcast i32** %127 to i64*
  store i64 %130, i64* %131, align 8
  %132 = getelementptr inbounds i32*, i32** %121, i64 2
  %133 = getelementptr inbounds i32*, i32** %123, i64 2
  %134 = bitcast i32** %133 to i64*
  %135 = load i64, i64* %134, align 8
  %136 = bitcast i32** %132 to i64*
  store i64 %135, i64* %136, align 8
  %137 = getelementptr inbounds i32*, i32** %121, i64 3
  %138 = getelementptr inbounds i32*, i32** %123, i64 3
  %139 = bitcast i32** %138 to i64*
  %140 = load i64, i64* %139, align 8
  %141 = bitcast i32** %137 to i64*
  store i64 %140, i64* %141, align 8
  %142 = getelementptr inbounds i32*, i32** %121, i64 4
  %143 = getelementptr inbounds i32*, i32** %123, i64 4
  %144 = bitcast i32** %143 to i64*
  %145 = load i64, i64* %144, align 8
  %146 = bitcast i32** %142 to i64*
  store i64 %145, i64* %146, align 8
  %147 = getelementptr inbounds i32*, i32** %121, i64 5
  %148 = getelementptr inbounds i32*, i32** %123, i64 5
  %149 = bitcast i32** %148 to i64*
  %150 = load i64, i64* %149, align 8
  %151 = bitcast i32** %147 to i64*
  store i64 %150, i64* %151, align 8
  %152 = getelementptr inbounds i32*, i32** %121, i64 6
  %153 = getelementptr inbounds i32*, i32** %123, i64 6
  %154 = bitcast i32** %153 to i64*
  %155 = load i64, i64* %154, align 8
  %156 = bitcast i32** %152 to i64*
  store i64 %155, i64* %156, align 8
  %157 = getelementptr inbounds i32*, i32** %121, i64 7
  %158 = getelementptr inbounds i32*, i32** %123, i64 7
  %159 = bitcast i32** %158 to i64*
  %160 = load i64, i64* %159, align 8
  %161 = bitcast i32** %157 to i64*
  store i64 %160, i64* %161, align 8
  %162 = getelementptr inbounds i32*, i32** %121, i64 8
  %163 = ptrtoint i32** %162 to i64
  %164 = getelementptr inbounds i32*, i32** %123, i64 8
  %165 = icmp eq i32** %92, %162
  br i1 %165, label %166, label %120

166:                                              ; preds = %120, %115
  %167 = ptrtoint i32** %92 to i64
  br label %168

168:                                              ; preds = %79, %166
  %169 = phi i64 [ %167, %166 ], [ %86, %79 ]
  %170 = load i64, i64* %39, align 8
  store i64 %84, i64* %39, align 8
  %171 = bitcast i32*** %3 to i64*
  store i64 %86, i64* %171, align 8
  store i64 %169, i64* %80, align 8
  %172 = load i64, i64* %15, align 8
  store i64 %88, i64* %15, align 8
  %173 = inttoptr i64 %170 to i32**
  %174 = icmp eq i64 %170, 0
  br i1 %174, label %194, label %175

175:                                              ; preds = %168
  %176 = sub i64 %172, %170
  %177 = ashr exact i64 %176, 3
  %178 = icmp ult i64 %176, 16
  br i1 %178, label %194, label %179

179:                                              ; preds = %175
  %180 = load %"struct.v8::internal::RecyclingZoneAllocator<int *>::FreeBlock"*, %"struct.v8::internal::RecyclingZoneAllocator<int *>::FreeBlock"** %46, align 8
  %181 = icmp eq %"struct.v8::internal::RecyclingZoneAllocator<int *>::FreeBlock"* %180, null
  br i1 %181, label %186, label %182

182:                                              ; preds = %179
  %183 = getelementptr inbounds %"struct.v8::internal::RecyclingZoneAllocator<int *>::FreeBlock", %"struct.v8::internal::RecyclingZoneAllocator<int *>::FreeBlock"* %180, i64 0, i32 1
  %184 = load i64, i64* %183, align 8
  %185 = icmp ugt i64 %184, %177
  br i1 %185, label %194, label %186

186:                                              ; preds = %182, %179
  %187 = getelementptr inbounds i32*, i32** %173, i64 1
  %188 = bitcast i32** %187 to i64*
  store i64 %177, i64* %188, align 8
  %189 = bitcast %"struct.v8::internal::RecyclingZoneAllocator<int *>::FreeBlock"** %46 to i64*
  %190 = load i64, i64* %189, align 8
  %191 = inttoptr i64 %170 to i64*
  store i64 %190, i64* %191, align 8
  %192 = bitcast %"struct.v8::internal::RecyclingZoneAllocator<int *>::FreeBlock"** %46 to i32***
  store i32** %173, i32*** %192, align 8
  %193 = load i32**, i32*** %3, align 8
  br label %194

194:                                              ; preds = %186, %182, %175, %168, %34, %2
  %195 = phi i32** [ %193, %186 ], [ %85, %182 ], [ %85, %175 ], [ %85, %168 ], [ %36, %34 ], [ %4, %2 ]
  %196 = getelementptr inbounds i32*, i32** %195, i64 -1
  %197 = bitcast i32** %1 to i64*
  %198 = load i64, i64* %197, align 8
  %199 = bitcast i32** %196 to i64*
  store i64 %198, i64* %199, align 8
  %200 = load i32**, i32*** %3, align 8
  %201 = getelementptr inbounds i32*, i32** %200, i64 -1
  store i32** %201, i32*** %3, align 8
  ret void
}

; Function Attrs: nounwind ssp uwtable
define linkonce_odr hidden void @_ZNSt3__114__split_bufferIPiRN2v88internal22RecyclingZoneAllocatorIS1_EEE9push_backEOS1_(%"struct.std::__1::__split_buffer.1628"*, i32** dereferenceable(8)) local_unnamed_addr #0 comdat align 2 {
  %3 = getelementptr inbounds %"struct.std::__1::__split_buffer.1628", %"struct.std::__1::__split_buffer.1628"* %0, i64 0, i32 2
  %4 = load i32**, i32*** %3, align 8
  %5 = getelementptr inbounds %"struct.std::__1::__split_buffer.1628", %"struct.std::__1::__split_buffer.1628"* %0, i64 0, i32 3, i32 0, i32 0
  %6 = load i32**, i32*** %5, align 8
  %7 = icmp eq i32** %4, %6
  %8 = ptrtoint i32** %6 to i64
  %9 = bitcast i32** %4 to i64*
  br i1 %7, label %10, label %193

10:                                               ; preds = %2
  %11 = getelementptr inbounds %"struct.std::__1::__split_buffer.1628", %"struct.std::__1::__split_buffer.1628"* %0, i64 0, i32 1
  %12 = load i32**, i32*** %11, align 8
  %13 = getelementptr inbounds %"struct.std::__1::__split_buffer.1628", %"struct.std::__1::__split_buffer.1628"* %0, i64 0, i32 0
  %14 = load i32**, i32*** %13, align 8
  %15 = icmp ugt i32** %12, %14
  %16 = ptrtoint i32** %14 to i64
  br i1 %15, label %17, label %37

17:                                               ; preds = %10
  %18 = ptrtoint i32** %12 to i64
  %19 = sub i64 %18, %16
  %20 = ashr exact i64 %19, 3
  %21 = add nsw i64 %20, 1
  %22 = sdiv i64 %21, -2
  %23 = getelementptr inbounds i32*, i32** %12, i64 %22
  %24 = ptrtoint i32** %4 to i64
  %25 = sub i64 %24, %18
  %26 = ashr exact i64 %25, 3
  %27 = icmp eq i64 %25, 0
  br i1 %27, label %32, label %28

28:                                               ; preds = %17
  %29 = bitcast i32** %23 to i8*
  %30 = bitcast i32** %12 to i8*
  tail call void @llvm.memmove.p0i8.p0i8.i64(i8* align 8 %29, i8* align 8 %30, i64 %25, i1 false) #16
  %31 = load i32**, i32*** %11, align 8
  br label %32

32:                                               ; preds = %17, %28
  %33 = phi i32** [ %12, %17 ], [ %31, %28 ]
  %34 = getelementptr inbounds i32*, i32** %23, i64 %26
  store i32** %34, i32*** %3, align 8
  %35 = getelementptr inbounds i32*, i32** %33, i64 %22
  store i32** %35, i32*** %11, align 8
  %36 = bitcast i32** %34 to i64*
  br label %193

37:                                               ; preds = %10
  %38 = bitcast i32*** %5 to i64*
  %39 = bitcast %"struct.std::__1::__split_buffer.1628"* %0 to i64*
  %40 = sub i64 %8, %16
  %41 = ashr exact i64 %40, 2
  %42 = icmp eq i64 %40, 0
  %43 = select i1 %42, i64 1, i64 %41
  %44 = lshr i64 %43, 2
  %45 = getelementptr inbounds %"struct.std::__1::__split_buffer.1628", %"struct.std::__1::__split_buffer.1628"* %0, i64 0, i32 3, i32 1, i32 0
  %46 = load %"class.v8::internal::RecyclingZoneAllocator.1466"*, %"class.v8::internal::RecyclingZoneAllocator.1466"** %45, align 8
  %47 = getelementptr inbounds %"class.v8::internal::RecyclingZoneAllocator.1466", %"class.v8::internal::RecyclingZoneAllocator.1466"* %46, i64 0, i32 1
  %48 = load %"struct.v8::internal::RecyclingZoneAllocator<int *>::FreeBlock"*, %"struct.v8::internal::RecyclingZoneAllocator<int *>::FreeBlock"** %47, align 8
  %49 = icmp eq %"struct.v8::internal::RecyclingZoneAllocator<int *>::FreeBlock"* %48, null
  br i1 %49, label %59, label %50

50:                                               ; preds = %37
  %51 = getelementptr inbounds %"struct.v8::internal::RecyclingZoneAllocator<int *>::FreeBlock", %"struct.v8::internal::RecyclingZoneAllocator<int *>::FreeBlock"* %48, i64 0, i32 1
  %52 = load i64, i64* %51, align 8
  %53 = icmp ult i64 %52, %43
  br i1 %53, label %59, label %54

54:                                               ; preds = %50
  %55 = bitcast %"struct.v8::internal::RecyclingZoneAllocator<int *>::FreeBlock"* %48 to i32**
  %56 = bitcast %"struct.v8::internal::RecyclingZoneAllocator<int *>::FreeBlock"* %48 to i64*
  %57 = load i64, i64* %56, align 8
  %58 = bitcast %"struct.v8::internal::RecyclingZoneAllocator<int *>::FreeBlock"** %47 to i64*
  store i64 %57, i64* %58, align 8
  br label %76

59:                                               ; preds = %50, %37
  %60 = getelementptr inbounds %"class.v8::internal::RecyclingZoneAllocator.1466", %"class.v8::internal::RecyclingZoneAllocator.1466"* %46, i64 0, i32 0, i32 0
  %61 = load %"class.v8::internal::Zone"*, %"class.v8::internal::Zone"** %60, align 8
  %62 = shl i64 %43, 3
  %63 = getelementptr inbounds %"class.v8::internal::Zone", %"class.v8::internal::Zone"* %61, i64 0, i32 2
  %64 = load i64, i64* %63, align 8
  %65 = getelementptr inbounds %"class.v8::internal::Zone", %"class.v8::internal::Zone"* %61, i64 0, i32 3
  %66 = load i64, i64* %65, align 8
  %67 = sub i64 %66, %64
  %68 = icmp ugt i64 %62, %67
  br i1 %68, label %69, label %71, !prof !2

69:                                               ; preds = %59
  %70 = tail call i64 @_ZN2v88internal4Zone9NewExpandEm(%"class.v8::internal::Zone"* %61, i64 %62) #16
  br label %73

71:                                               ; preds = %59
  %72 = add i64 %64, %62
  store i64 %72, i64* %63, align 8
  br label %73

73:                                               ; preds = %71, %69
  %74 = phi i64 [ %70, %69 ], [ %64, %71 ]
  %75 = inttoptr i64 %74 to i32**
  br label %76

76:                                               ; preds = %54, %73
  %77 = phi i32** [ %55, %54 ], [ %75, %73 ]
  %78 = ptrtoint i32** %77 to i64
  %79 = getelementptr inbounds i32*, i32** %77, i64 %44
  %80 = ptrtoint i32** %79 to i64
  %81 = getelementptr inbounds i32*, i32** %77, i64 %43
  %82 = ptrtoint i32** %81 to i64
  %83 = load i32**, i32*** %11, align 8
  %84 = bitcast i32*** %3 to i64*
  %85 = load i64, i64* %84, align 8
  %86 = ptrtoint i32** %83 to i64
  %87 = sub i64 %85, %86
  %88 = ashr exact i64 %87, 3
  %89 = getelementptr inbounds i32*, i32** %79, i64 %88
  %90 = icmp eq i64 %87, 0
  br i1 %90, label %165, label %91

91:                                               ; preds = %76
  %92 = add i64 %87, -8
  %93 = lshr i64 %92, 3
  %94 = add nuw nsw i64 %93, 1
  %95 = and i64 %94, 7
  %96 = icmp eq i64 %95, 0
  br i1 %96, label %112, label %97

97:                                               ; preds = %91, %97
  %98 = phi i32** [ %105, %97 ], [ %79, %91 ]
  %99 = phi i64 [ %106, %97 ], [ %80, %91 ]
  %100 = phi i32** [ %107, %97 ], [ %83, %91 ]
  %101 = phi i64 [ %108, %97 ], [ %95, %91 ]
  %102 = bitcast i32** %100 to i64*
  %103 = load i64, i64* %102, align 8
  %104 = inttoptr i64 %99 to i64*
  store i64 %103, i64* %104, align 8
  %105 = getelementptr inbounds i32*, i32** %98, i64 1
  %106 = ptrtoint i32** %105 to i64
  %107 = getelementptr inbounds i32*, i32** %100, i64 1
  %108 = add i64 %101, -1
  %109 = icmp eq i64 %108, 0
  br i1 %109, label %110, label %97, !llvm.loop !267

110:                                              ; preds = %97
  %111 = ptrtoint i32** %105 to i64
  br label %112

112:                                              ; preds = %91, %110
  %113 = phi i32** [ %79, %91 ], [ %105, %110 ]
  %114 = phi i64 [ %80, %91 ], [ %111, %110 ]
  %115 = phi i32** [ %83, %91 ], [ %107, %110 ]
  %116 = icmp ult i64 %92, 56
  br i1 %116, label %163, label %117

117:                                              ; preds = %112, %117
  %118 = phi i32** [ %159, %117 ], [ %113, %112 ]
  %119 = phi i64 [ %160, %117 ], [ %114, %112 ]
  %120 = phi i32** [ %161, %117 ], [ %115, %112 ]
  %121 = bitcast i32** %120 to i64*
  %122 = load i64, i64* %121, align 8
  %123 = inttoptr i64 %119 to i64*
  store i64 %122, i64* %123, align 8
  %124 = getelementptr inbounds i32*, i32** %118, i64 1
  %125 = getelementptr inbounds i32*, i32** %120, i64 1
  %126 = bitcast i32** %125 to i64*
  %127 = load i64, i64* %126, align 8
  %128 = bitcast i32** %124 to i64*
  store i64 %127, i64* %128, align 8
  %129 = getelementptr inbounds i32*, i32** %118, i64 2
  %130 = getelementptr inbounds i32*, i32** %120, i64 2
  %131 = bitcast i32** %130 to i64*
  %132 = load i64, i64* %131, align 8
  %133 = bitcast i32** %129 to i64*
  store i64 %132, i64* %133, align 8
  %134 = getelementptr inbounds i32*, i32** %118, i64 3
  %135 = getelementptr inbounds i32*, i32** %120, i64 3
  %136 = bitcast i32** %135 to i64*
  %137 = load i64, i64* %136, align 8
  %138 = bitcast i32** %134 to i64*
  store i64 %137, i64* %138, align 8
  %139 = getelementptr inbounds i32*, i32** %118, i64 4
  %140 = getelementptr inbounds i32*, i32** %120, i64 4
  %141 = bitcast i32** %140 to i64*
  %142 = load i64, i64* %141, align 8
  %143 = bitcast i32** %139 to i64*
  store i64 %142, i64* %143, align 8
  %144 = getelementptr inbounds i32*, i32** %118, i64 5
  %145 = getelementptr inbounds i32*, i32** %120, i64 5
  %146 = bitcast i32** %145 to i64*
  %147 = load i64, i64* %146, align 8
  %148 = bitcast i32** %144 to i64*
  store i64 %147, i64* %148, align 8
  %149 = getelementptr inbounds i32*, i32** %118, i64 6
  %150 = getelementptr inbounds i32*, i32** %120, i64 6
  %151 = bitcast i32** %150 to i64*
  %152 = load i64, i64* %151, align 8
  %153 = bitcast i32** %149 to i64*
  store i64 %152, i64* %153, align 8
  %154 = getelementptr inbounds i32*, i32** %118, i64 7
  %155 = getelementptr inbounds i32*, i32** %120, i64 7
  %156 = bitcast i32** %155 to i64*
  %157 = load i64, i64* %156, align 8
  %158 = bitcast i32** %154 to i64*
  store i64 %157, i64* %158, align 8
  %159 = getelementptr inbounds i32*, i32** %118, i64 8
  %160 = ptrtoint i32** %159 to i64
  %161 = getelementptr inbounds i32*, i32** %120, i64 8
  %162 = icmp eq i32** %89, %159
  br i1 %162, label %163, label %117

163:                                              ; preds = %117, %112
  %164 = ptrtoint i32** %89 to i64
  br label %165

165:                                              ; preds = %76, %163
  %166 = phi i64 [ %164, %163 ], [ %80, %76 ]
  %167 = load i64, i64* %39, align 8
  store i64 %78, i64* %39, align 8
  %168 = bitcast i32*** %11 to i64*
  store i64 %80, i64* %168, align 8
  store i64 %166, i64* %84, align 8
  %169 = load i64, i64* %38, align 8
  store i64 %82, i64* %38, align 8
  %170 = inttoptr i64 %167 to i32**
  %171 = icmp eq i64 %167, 0
  %172 = inttoptr i64 %166 to i64*
  br i1 %171, label %193, label %173

173:                                              ; preds = %165
  %174 = sub i64 %169, %167
  %175 = ashr exact i64 %174, 3
  %176 = icmp ult i64 %174, 16
  br i1 %176, label %193, label %177

177:                                              ; preds = %173
  %178 = load %"struct.v8::internal::RecyclingZoneAllocator<int *>::FreeBlock"*, %"struct.v8::internal::RecyclingZoneAllocator<int *>::FreeBlock"** %47, align 8
  %179 = icmp eq %"struct.v8::internal::RecyclingZoneAllocator<int *>::FreeBlock"* %178, null
  br i1 %179, label %184, label %180

180:                                              ; preds = %177
  %181 = getelementptr inbounds %"struct.v8::internal::RecyclingZoneAllocator<int *>::FreeBlock", %"struct.v8::internal::RecyclingZoneAllocator<int *>::FreeBlock"* %178, i64 0, i32 1
  %182 = load i64, i64* %181, align 8
  %183 = icmp ugt i64 %182, %175
  br i1 %183, label %193, label %184

184:                                              ; preds = %180, %177
  %185 = getelementptr inbounds i32*, i32** %170, i64 1
  %186 = bitcast i32** %185 to i64*
  store i64 %175, i64* %186, align 8
  %187 = bitcast %"struct.v8::internal::RecyclingZoneAllocator<int *>::FreeBlock"** %47 to i64*
  %188 = load i64, i64* %187, align 8
  %189 = inttoptr i64 %167 to i64*
  store i64 %188, i64* %189, align 8
  %190 = bitcast %"struct.v8::internal::RecyclingZoneAllocator<int *>::FreeBlock"** %47 to i32***
  store i32** %170, i32*** %190, align 8
  %191 = bitcast i32*** %3 to i64**
  %192 = load i64*, i64** %191, align 8
  br label %193

193:                                              ; preds = %184, %180, %173, %165, %32, %2
  %194 = phi i64* [ %192, %184 ], [ %172, %180 ], [ %172, %173 ], [ %172, %165 ], [ %36, %32 ], [ %9, %2 ]
  %195 = bitcast i32** %1 to i64*
  %196 = load i64, i64* %195, align 8
  store i64 %196, i64* %194, align 8
  %197 = load i32**, i32*** %3, align 8
  %198 = getelementptr inbounds i32*, i32** %197, i64 1
  store i32** %198, i32*** %3, align 8
  ret void
}

; Function Attrs: nounwind ssp uwtable
define linkonce_odr hidden void @_ZNSt3__114__split_bufferIPiRN2v88internal22RecyclingZoneAllocatorIS1_EEE10push_frontERKS1_(%"struct.std::__1::__split_buffer.1628"*, i32** dereferenceable(8)) local_unnamed_addr #0 comdat align 2 {
  %3 = getelementptr inbounds %"struct.std::__1::__split_buffer.1628", %"struct.std::__1::__split_buffer.1628"* %0, i64 0, i32 1
  %4 = load i32**, i32*** %3, align 8
  %5 = getelementptr inbounds %"struct.std::__1::__split_buffer.1628", %"struct.std::__1::__split_buffer.1628"* %0, i64 0, i32 0
  %6 = load i32**, i32*** %5, align 8
  %7 = icmp eq i32** %4, %6
  %8 = ptrtoint i32** %6 to i64
  br i1 %7, label %9, label %192

9:                                                ; preds = %2
  %10 = getelementptr inbounds %"struct.std::__1::__split_buffer.1628", %"struct.std::__1::__split_buffer.1628"* %0, i64 0, i32 2
  %11 = load i32**, i32*** %10, align 8
  %12 = getelementptr inbounds %"struct.std::__1::__split_buffer.1628", %"struct.std::__1::__split_buffer.1628"* %0, i64 0, i32 3, i32 0, i32 0
  %13 = load i32**, i32*** %12, align 8
  %14 = icmp ult i32** %11, %13
  %15 = bitcast i32*** %12 to i64*
  %16 = ptrtoint i32** %13 to i64
  br i1 %14, label %17, label %38

17:                                               ; preds = %9
  %18 = ptrtoint i32** %11 to i64
  %19 = sub i64 %16, %18
  %20 = ashr exact i64 %19, 3
  %21 = add nsw i64 %20, 1
  %22 = sdiv i64 %21, 2
  %23 = getelementptr inbounds i32*, i32** %11, i64 %22
  %24 = ptrtoint i32** %4 to i64
  %25 = sub i64 %18, %24
  %26 = icmp eq i64 %25, 0
  br i1 %26, label %34, label %27

27:                                               ; preds = %17
  %28 = ashr exact i64 %25, 3
  %29 = sub nsw i64 0, %28
  %30 = getelementptr inbounds i32*, i32** %23, i64 %29
  %31 = bitcast i32** %30 to i8*
  %32 = bitcast i32** %4 to i8*
  tail call void @llvm.memmove.p0i8.p0i8.i64(i8* align 8 %31, i8* align 8 %32, i64 %25, i1 false) #16
  %33 = load i32**, i32*** %10, align 8
  br label %34

34:                                               ; preds = %17, %27
  %35 = phi i32** [ %33, %27 ], [ %11, %17 ]
  %36 = phi i32** [ %30, %27 ], [ %23, %17 ]
  store i32** %36, i32*** %3, align 8
  %37 = getelementptr inbounds i32*, i32** %35, i64 %22
  store i32** %37, i32*** %10, align 8
  br label %192

38:                                               ; preds = %9
  %39 = bitcast %"struct.std::__1::__split_buffer.1628"* %0 to i64*
  %40 = sub i64 %16, %8
  %41 = ashr exact i64 %40, 2
  %42 = icmp eq i64 %40, 0
  %43 = select i1 %42, i64 1, i64 %41
  %44 = add nsw i64 %43, 3
  %45 = lshr i64 %44, 2
  %46 = getelementptr inbounds %"struct.std::__1::__split_buffer.1628", %"struct.std::__1::__split_buffer.1628"* %0, i64 0, i32 3, i32 1, i32 0
  %47 = load %"class.v8::internal::RecyclingZoneAllocator.1466"*, %"class.v8::internal::RecyclingZoneAllocator.1466"** %46, align 8
  %48 = getelementptr inbounds %"class.v8::internal::RecyclingZoneAllocator.1466", %"class.v8::internal::RecyclingZoneAllocator.1466"* %47, i64 0, i32 1
  %49 = load %"struct.v8::internal::RecyclingZoneAllocator<int *>::FreeBlock"*, %"struct.v8::internal::RecyclingZoneAllocator<int *>::FreeBlock"** %48, align 8
  %50 = icmp eq %"struct.v8::internal::RecyclingZoneAllocator<int *>::FreeBlock"* %49, null
  br i1 %50, label %60, label %51

51:                                               ; preds = %38
  %52 = getelementptr inbounds %"struct.v8::internal::RecyclingZoneAllocator<int *>::FreeBlock", %"struct.v8::internal::RecyclingZoneAllocator<int *>::FreeBlock"* %49, i64 0, i32 1
  %53 = load i64, i64* %52, align 8
  %54 = icmp ult i64 %53, %43
  br i1 %54, label %60, label %55

55:                                               ; preds = %51
  %56 = bitcast %"struct.v8::internal::RecyclingZoneAllocator<int *>::FreeBlock"* %49 to i32**
  %57 = bitcast %"struct.v8::internal::RecyclingZoneAllocator<int *>::FreeBlock"* %49 to i64*
  %58 = load i64, i64* %57, align 8
  %59 = bitcast %"struct.v8::internal::RecyclingZoneAllocator<int *>::FreeBlock"** %48 to i64*
  store i64 %58, i64* %59, align 8
  br label %77

60:                                               ; preds = %51, %38
  %61 = getelementptr inbounds %"class.v8::internal::RecyclingZoneAllocator.1466", %"class.v8::internal::RecyclingZoneAllocator.1466"* %47, i64 0, i32 0, i32 0
  %62 = load %"class.v8::internal::Zone"*, %"class.v8::internal::Zone"** %61, align 8
  %63 = shl i64 %43, 3
  %64 = getelementptr inbounds %"class.v8::internal::Zone", %"class.v8::internal::Zone"* %62, i64 0, i32 2
  %65 = load i64, i64* %64, align 8
  %66 = getelementptr inbounds %"class.v8::internal::Zone", %"class.v8::internal::Zone"* %62, i64 0, i32 3
  %67 = load i64, i64* %66, align 8
  %68 = sub i64 %67, %65
  %69 = icmp ugt i64 %63, %68
  br i1 %69, label %70, label %72, !prof !2

70:                                               ; preds = %60
  %71 = tail call i64 @_ZN2v88internal4Zone9NewExpandEm(%"class.v8::internal::Zone"* %62, i64 %63) #16
  br label %74

72:                                               ; preds = %60
  %73 = add i64 %65, %63
  store i64 %73, i64* %64, align 8
  br label %74

74:                                               ; preds = %72, %70
  %75 = phi i64 [ %71, %70 ], [ %65, %72 ]
  %76 = inttoptr i64 %75 to i32**
  br label %77

77:                                               ; preds = %55, %74
  %78 = phi i32** [ %56, %55 ], [ %76, %74 ]
  %79 = ptrtoint i32** %78 to i64
  %80 = getelementptr inbounds i32*, i32** %78, i64 %45
  %81 = ptrtoint i32** %80 to i64
  %82 = getelementptr inbounds i32*, i32** %78, i64 %43
  %83 = ptrtoint i32** %82 to i64
  %84 = load i32**, i32*** %3, align 8
  %85 = bitcast i32*** %10 to i64*
  %86 = load i64, i64* %85, align 8
  %87 = ptrtoint i32** %84 to i64
  %88 = sub i64 %86, %87
  %89 = ashr exact i64 %88, 3
  %90 = getelementptr inbounds i32*, i32** %80, i64 %89
  %91 = icmp eq i64 %88, 0
  br i1 %91, label %166, label %92

92:                                               ; preds = %77
  %93 = add i64 %88, -8
  %94 = lshr i64 %93, 3
  %95 = add nuw nsw i64 %94, 1
  %96 = and i64 %95, 7
  %97 = icmp eq i64 %96, 0
  br i1 %97, label %113, label %98

98:                                               ; preds = %92, %98
  %99 = phi i32** [ %106, %98 ], [ %80, %92 ]
  %100 = phi i64 [ %107, %98 ], [ %81, %92 ]
  %101 = phi i32** [ %108, %98 ], [ %84, %92 ]
  %102 = phi i64 [ %109, %98 ], [ %96, %92 ]
  %103 = bitcast i32** %101 to i64*
  %104 = load i64, i64* %103, align 8
  %105 = inttoptr i64 %100 to i64*
  store i64 %104, i64* %105, align 8
  %106 = getelementptr inbounds i32*, i32** %99, i64 1
  %107 = ptrtoint i32** %106 to i64
  %108 = getelementptr inbounds i32*, i32** %101, i64 1
  %109 = add i64 %102, -1
  %110 = icmp eq i64 %109, 0
  br i1 %110, label %111, label %98, !llvm.loop !268

111:                                              ; preds = %98
  %112 = ptrtoint i32** %106 to i64
  br label %113

113:                                              ; preds = %92, %111
  %114 = phi i32** [ %80, %92 ], [ %106, %111 ]
  %115 = phi i64 [ %81, %92 ], [ %112, %111 ]
  %116 = phi i32** [ %84, %92 ], [ %108, %111 ]
  %117 = icmp ult i64 %93, 56
  br i1 %117, label %164, label %118

118:                                              ; preds = %113, %118
  %119 = phi i32** [ %160, %118 ], [ %114, %113 ]
  %120 = phi i64 [ %161, %118 ], [ %115, %113 ]
  %121 = phi i32** [ %162, %118 ], [ %116, %113 ]
  %122 = bitcast i32** %121 to i64*
  %123 = load i64, i64* %122, align 8
  %124 = inttoptr i64 %120 to i64*
  store i64 %123, i64* %124, align 8
  %125 = getelementptr inbounds i32*, i32** %119, i64 1
  %126 = getelementptr inbounds i32*, i32** %121, i64 1
  %127 = bitcast i32** %126 to i64*
  %128 = load i64, i64* %127, align 8
  %129 = bitcast i32** %125 to i64*
  store i64 %128, i64* %129, align 8
  %130 = getelementptr inbounds i32*, i32** %119, i64 2
  %131 = getelementptr inbounds i32*, i32** %121, i64 2
  %132 = bitcast i32** %131 to i64*
  %133 = load i64, i64* %132, align 8
  %134 = bitcast i32** %130 to i64*
  store i64 %133, i64* %134, align 8
  %135 = getelementptr inbounds i32*, i32** %119, i64 3
  %136 = getelementptr inbounds i32*, i32** %121, i64 3
  %137 = bitcast i32** %136 to i64*
  %138 = load i64, i64* %137, align 8
  %139 = bitcast i32** %135 to i64*
  store i64 %138, i64* %139, align 8
  %140 = getelementptr inbounds i32*, i32** %119, i64 4
  %141 = getelementptr inbounds i32*, i32** %121, i64 4
  %142 = bitcast i32** %141 to i64*
  %143 = load i64, i64* %142, align 8
  %144 = bitcast i32** %140 to i64*
  store i64 %143, i64* %144, align 8
  %145 = getelementptr inbounds i32*, i32** %119, i64 5
  %146 = getelementptr inbounds i32*, i32** %121, i64 5
  %147 = bitcast i32** %146 to i64*
  %148 = load i64, i64* %147, align 8
  %149 = bitcast i32** %145 to i64*
  store i64 %148, i64* %149, align 8
  %150 = getelementptr inbounds i32*, i32** %119, i64 6
  %151 = getelementptr inbounds i32*, i32** %121, i64 6
  %152 = bitcast i32** %151 to i64*
  %153 = load i64, i64* %152, align 8
  %154 = bitcast i32** %150 to i64*
  store i64 %153, i64* %154, align 8
  %155 = getelementptr inbounds i32*, i32** %119, i64 7
  %156 = getelementptr inbounds i32*, i32** %121, i64 7
  %157 = bitcast i32** %156 to i64*
  %158 = load i64, i64* %157, align 8
  %159 = bitcast i32** %155 to i64*
  store i64 %158, i64* %159, align 8
  %160 = getelementptr inbounds i32*, i32** %119, i64 8
  %161 = ptrtoint i32** %160 to i64
  %162 = getelementptr inbounds i32*, i32** %121, i64 8
  %163 = icmp eq i32** %90, %160
  br i1 %163, label %164, label %118

164:                                              ; preds = %118, %113
  %165 = ptrtoint i32** %90 to i64
  br label %166

166:                                              ; preds = %77, %164
  %167 = phi i64 [ %165, %164 ], [ %81, %77 ]
  %168 = load i64, i64* %39, align 8
  store i64 %79, i64* %39, align 8
  %169 = bitcast i32*** %3 to i64*
  store i64 %81, i64* %169, align 8
  store i64 %167, i64* %85, align 8
  %170 = load i64, i64* %15, align 8
  store i64 %83, i64* %15, align 8
  %171 = inttoptr i64 %168 to i32**
  %172 = icmp eq i64 %168, 0
  br i1 %172, label %192, label %173

173:                                              ; preds = %166
  %174 = sub i64 %170, %168
  %175 = ashr exact i64 %174, 3
  %176 = icmp ult i64 %174, 16
  br i1 %176, label %192, label %177

177:                                              ; preds = %173
  %178 = load %"struct.v8::internal::RecyclingZoneAllocator<int *>::FreeBlock"*, %"struct.v8::internal::RecyclingZoneAllocator<int *>::FreeBlock"** %48, align 8
  %179 = icmp eq %"struct.v8::internal::RecyclingZoneAllocator<int *>::FreeBlock"* %178, null
  br i1 %179, label %184, label %180

180:                                              ; preds = %177
  %181 = getelementptr inbounds %"struct.v8::internal::RecyclingZoneAllocator<int *>::FreeBlock", %"struct.v8::internal::RecyclingZoneAllocator<int *>::FreeBlock"* %178, i64 0, i32 1
  %182 = load i64, i64* %181, align 8
  %183 = icmp ugt i64 %182, %175
  br i1 %183, label %192, label %184

184:                                              ; preds = %180, %177
  %185 = getelementptr inbounds i32*, i32** %171, i64 1
  %186 = bitcast i32** %185 to i64*
  store i64 %175, i64* %186, align 8
  %187 = bitcast %"struct.v8::internal::RecyclingZoneAllocator<int *>::FreeBlock"** %48 to i64*
  %188 = load i64, i64* %187, align 8
  %189 = inttoptr i64 %168 to i64*
  store i64 %188, i64* %189, align 8
  %190 = bitcast %"struct.v8::internal::RecyclingZoneAllocator<int *>::FreeBlock"** %48 to i32***
  store i32** %171, i32*** %190, align 8
  %191 = load i32**, i32*** %3, align 8
  br label %192

192:                                              ; preds = %184, %180, %173, %166, %34, %2
  %193 = phi i32** [ %191, %184 ], [ %80, %180 ], [ %80, %173 ], [ %80, %166 ], [ %36, %34 ], [ %4, %2 ]
  %194 = getelementptr inbounds i32*, i32** %193, i64 -1
  %195 = bitcast i32** %1 to i64*
  %196 = load i64, i64* %195, align 8
  %197 = bitcast i32** %194 to i64*
  store i64 %196, i64* %197, align 8
  %198 = load i32**, i32*** %3, align 8
  %199 = getelementptr inbounds i32*, i32** %198, i64 -1
  store i32** %199, i32*** %3, align 8
  ret void
}

; Function Attrs: nounwind readnone speculatable
declare i64 @llvm.ctpop.i64(i64) #12

attributes #0 = { nounwind ssp uwtable "correctly-rounded-divide-sqrt-fp-math"="false" "disable-tail-calls"="false" "less-precise-fpmad"="false" "min-legal-vector-width"="0" "no-frame-pointer-elim"="false" "no-frame-pointer-elim-non-leaf" "no-infs-fp-math"="false" "no-jump-tables"="false" "no-nans-fp-math"="false" "no-signed-zeros-fp-math"="false" "no-trapping-math"="false" "null-pointer-is-valid"="true" "stack-protector-buffer-size"="4" "target-cpu"="x86-64" "target-features"="+cx8,+fxsr,+mmx,+sse,+sse2,+sse3,+x87" "unsafe-fp-math"="false" "use-soft-float"="false" }
attributes #1 = { argmemonly nounwind }
attributes #2 = { norecurse nounwind readonly ssp uwtable "correctly-rounded-divide-sqrt-fp-math"="false" "disable-tail-calls"="false" "less-precise-fpmad"="false" "min-legal-vector-width"="0" "no-frame-pointer-elim"="false" "no-frame-pointer-elim-non-leaf" "no-infs-fp-math"="false" "no-jump-tables"="false" "no-nans-fp-math"="false" "no-signed-zeros-fp-math"="false" "no-trapping-math"="false" "null-pointer-is-valid"="true" "stack-protector-buffer-size"="4" "target-cpu"="x86-64" "target-features"="+cx8,+fxsr,+mmx,+sse,+sse2,+sse3,+x87" "unsafe-fp-math"="false" "use-soft-float"="false" }
attributes #3 = { nofree norecurse nounwind ssp uwtable "correctly-rounded-divide-sqrt-fp-math"="false" "disable-tail-calls"="false" "less-precise-fpmad"="false" "min-legal-vector-width"="0" "no-frame-pointer-elim"="false" "no-frame-pointer-elim-non-leaf" "no-infs-fp-math"="false" "no-jump-tables"="false" "no-nans-fp-math"="false" "no-signed-zeros-fp-math"="false" "no-trapping-math"="false" "null-pointer-is-valid"="true" "stack-protector-buffer-size"="4" "target-cpu"="x86-64" "target-features"="+cx8,+fxsr,+mmx,+sse,+sse2,+sse3,+x87" "unsafe-fp-math"="false" "use-soft-float"="false" }
attributes #4 = { noreturn "correctly-rounded-divide-sqrt-fp-math"="false" "disable-tail-calls"="false" "less-precise-fpmad"="false" "no-frame-pointer-elim"="false" "no-frame-pointer-elim-non-leaf" "no-infs-fp-math"="false" "no-nans-fp-math"="false" "no-signed-zeros-fp-math"="false" "no-trapping-math"="false" "null-pointer-is-valid"="true" "stack-protector-buffer-size"="4" "target-cpu"="x86-64" "target-features"="+cx8,+fxsr,+mmx,+sse,+sse2,+sse3,+x87" "unsafe-fp-math"="false" "use-soft-float"="false" }
attributes #5 = { inlinehint nounwind ssp uwtable "correctly-rounded-divide-sqrt-fp-math"="false" "disable-tail-calls"="false" "less-precise-fpmad"="false" "min-legal-vector-width"="0" "no-frame-pointer-elim"="false" "no-frame-pointer-elim-non-leaf" "no-infs-fp-math"="false" "no-jump-tables"="false" "no-nans-fp-math"="false" "no-signed-zeros-fp-math"="false" "no-trapping-math"="false" "null-pointer-is-valid"="true" "stack-protector-buffer-size"="4" "target-cpu"="x86-64" "target-features"="+cx8,+fxsr,+mmx,+sse,+sse2,+sse3,+x87" "unsafe-fp-math"="false" "use-soft-float"="false" }
attributes #6 = { "correctly-rounded-divide-sqrt-fp-math"="false" "disable-tail-calls"="false" "less-precise-fpmad"="false" "no-frame-pointer-elim"="false" "no-frame-pointer-elim-non-leaf" "no-infs-fp-math"="false" "no-nans-fp-math"="false" "no-signed-zeros-fp-math"="false" "no-trapping-math"="false" "null-pointer-is-valid"="true" "stack-protector-buffer-size"="4" "target-cpu"="x86-64" "target-features"="+cx8,+fxsr,+mmx,+sse,+sse2,+sse3,+x87" "unsafe-fp-math"="false" "use-soft-float"="false" }
attributes #7 = { nofree norecurse nounwind ssp uwtable writeonly "correctly-rounded-divide-sqrt-fp-math"="false" "disable-tail-calls"="false" "less-precise-fpmad"="false" "min-legal-vector-width"="0" "no-frame-pointer-elim"="false" "no-frame-pointer-elim-non-leaf" "no-infs-fp-math"="false" "no-jump-tables"="false" "no-nans-fp-math"="false" "no-signed-zeros-fp-math"="false" "no-trapping-math"="false" "null-pointer-is-valid"="true" "stack-protector-buffer-size"="4" "target-cpu"="x86-64" "target-features"="+cx8,+fxsr,+mmx,+sse,+sse2,+sse3,+x87" "unsafe-fp-math"="false" "use-soft-float"="false" }
attributes #8 = { nounwind readonly ssp uwtable "correctly-rounded-divide-sqrt-fp-math"="false" "disable-tail-calls"="false" "less-precise-fpmad"="false" "min-legal-vector-width"="0" "no-frame-pointer-elim"="false" "no-frame-pointer-elim-non-leaf" "no-infs-fp-math"="false" "no-jump-tables"="false" "no-nans-fp-math"="false" "no-signed-zeros-fp-math"="false" "no-trapping-math"="false" "null-pointer-is-valid"="true" "stack-protector-buffer-size"="4" "target-cpu"="x86-64" "target-features"="+cx8,+fxsr,+mmx,+sse,+sse2,+sse3,+x87" "unsafe-fp-math"="false" "use-soft-float"="false" }
attributes #9 = { nofree nounwind "correctly-rounded-divide-sqrt-fp-math"="false" "disable-tail-calls"="false" "less-precise-fpmad"="false" "no-frame-pointer-elim"="false" "no-frame-pointer-elim-non-leaf" "no-infs-fp-math"="false" "no-nans-fp-math"="false" "no-signed-zeros-fp-math"="false" "no-trapping-math"="false" "null-pointer-is-valid"="true" "stack-protector-buffer-size"="4" "target-cpu"="x86-64" "target-features"="+cx8,+fxsr,+mmx,+sse,+sse2,+sse3,+x87" "unsafe-fp-math"="false" "use-soft-float"="false" }
attributes #10 = { nounwind "correctly-rounded-divide-sqrt-fp-math"="false" "disable-tail-calls"="false" "less-precise-fpmad"="false" "no-frame-pointer-elim"="false" "no-frame-pointer-elim-non-leaf" "no-infs-fp-math"="false" "no-nans-fp-math"="false" "no-signed-zeros-fp-math"="false" "no-trapping-math"="false" "null-pointer-is-valid"="true" "stack-protector-buffer-size"="4" "target-cpu"="x86-64" "target-features"="+cx8,+fxsr,+mmx,+sse,+sse2,+sse3,+x87" "unsafe-fp-math"="false" "use-soft-float"="false" }
attributes #11 = { nobuiltin nounwind "correctly-rounded-divide-sqrt-fp-math"="false" "disable-tail-calls"="false" "less-precise-fpmad"="false" "no-frame-pointer-elim"="false" "no-frame-pointer-elim-non-leaf" "no-infs-fp-math"="false" "no-nans-fp-math"="false" "no-signed-zeros-fp-math"="false" "no-trapping-math"="false" "null-pointer-is-valid"="true" "stack-protector-buffer-size"="4" "target-cpu"="x86-64" "target-features"="+cx8,+fxsr,+mmx,+sse,+sse2,+sse3,+x87" "unsafe-fp-math"="false" "use-soft-float"="false" }
attributes #12 = { nounwind readnone speculatable }
attributes #13 = { nobuiltin nofree "correctly-rounded-divide-sqrt-fp-math"="false" "disable-tail-calls"="false" "less-precise-fpmad"="false" "no-frame-pointer-elim"="false" "no-frame-pointer-elim-non-leaf" "no-infs-fp-math"="false" "no-nans-fp-math"="false" "no-signed-zeros-fp-math"="false" "no-trapping-math"="false" "null-pointer-is-valid"="true" "stack-protector-buffer-size"="4" "target-cpu"="x86-64" "target-features"="+cx8,+fxsr,+mmx,+sse,+sse2,+sse3,+x87" "unsafe-fp-math"="false" "use-soft-float"="false" }
attributes #14 = { argmemonly nofree nounwind readonly "correctly-rounded-divide-sqrt-fp-math"="false" "disable-tail-calls"="false" "less-precise-fpmad"="false" "no-frame-pointer-elim"="false" "no-frame-pointer-elim-non-leaf" "no-infs-fp-math"="false" "no-nans-fp-math"="false" "no-signed-zeros-fp-math"="false" "no-trapping-math"="false" "null-pointer-is-valid"="true" "stack-protector-buffer-size"="4" "target-cpu"="x86-64" "target-features"="+cx8,+fxsr,+mmx,+sse,+sse2,+sse3,+x87" "unsafe-fp-math"="false" "use-soft-float"="false" }
attributes #15 = { noinline nounwind ssp uwtable "correctly-rounded-divide-sqrt-fp-math"="false" "disable-tail-calls"="false" "less-precise-fpmad"="false" "min-legal-vector-width"="0" "no-frame-pointer-elim"="false" "no-frame-pointer-elim-non-leaf" "no-infs-fp-math"="false" "no-jump-tables"="false" "no-nans-fp-math"="false" "no-signed-zeros-fp-math"="false" "no-trapping-math"="false" "null-pointer-is-valid"="true" "stack-protector-buffer-size"="4" "target-cpu"="x86-64" "target-features"="+cx8,+fxsr,+mmx,+sse,+sse2,+sse3,+x87" "unsafe-fp-math"="false" "use-soft-float"="false" }
attributes #16 = { nounwind }
attributes #17 = { noreturn nounwind }
attributes #18 = { builtin nounwind }

!llvm.module.flags = !{!0, !1}

!0 = !{i32 1, !"wchar_size", i32 4}
!1 = !{i32 7, !"PIC Level", i32 2}
!2 = !{!"branch_weights", i32 1, i32 2000}
!3 = !{i8 0, i8 2}
!4 = !{!5}
!5 = distinct !{!5, !6}
!6 = distinct !{!6, !"LVerDomain"}
!7 = !{!8}
!8 = distinct !{!8, !6}
!9 = distinct !{!9, !10}
!10 = !{!"llvm.loop.isvectorized", i32 1}
!11 = distinct !{!11, !12}
!12 = !{!"llvm.loop.unroll.disable"}
!13 = distinct !{!13, !10}
!14 = distinct !{!14, !12}
!15 = !{!16}
!16 = distinct !{!16, !17}
!17 = distinct !{!17, !"LVerDomain"}
!18 = !{!19}
!19 = distinct !{!19, !17}
!20 = distinct !{!20, !10}
!21 = distinct !{!21, !12}
!22 = distinct !{!22, !12}
!23 = distinct !{!23, !10}
!24 = !{!25}
!25 = distinct !{!25, !26}
!26 = distinct !{!26, !"LVerDomain"}
!27 = !{!28}
!28 = distinct !{!28, !26}
!29 = distinct !{!29, !10}
!30 = distinct !{!30, !12}
!31 = distinct !{!31, !10}
!32 = distinct !{!32, !12}
!33 = !{!34}
!34 = distinct !{!34, !35}
!35 = distinct !{!35, !"LVerDomain"}
!36 = !{!37}
!37 = distinct !{!37, !35}
!38 = distinct !{!38, !10}
!39 = distinct !{!39, !12}
!40 = distinct !{!40, !10}
!41 = !{!42}
!42 = distinct !{!42, !43}
!43 = distinct !{!43, !"LVerDomain"}
!44 = !{!45}
!45 = distinct !{!45, !43}
!46 = distinct !{!46, !10}
!47 = distinct !{!47, !12}
!48 = distinct !{!48, !12}
!49 = distinct !{!49, !10}
!50 = !{!51}
!51 = distinct !{!51, !52}
!52 = distinct !{!52, !"LVerDomain"}
!53 = !{!54}
!54 = distinct !{!54, !52}
!55 = distinct !{!55, !10}
!56 = distinct !{!56, !12}
!57 = distinct !{!57, !10}
!58 = !{!59}
!59 = distinct !{!59, !60}
!60 = distinct !{!60, !"LVerDomain"}
!61 = !{!62}
!62 = distinct !{!62, !60}
!63 = distinct !{!63, !10}
!64 = distinct !{!64, !12}
!65 = distinct !{!65, !10}
!66 = distinct !{!66, !12}
!67 = distinct !{!67, !12}
!68 = !{!69}
!69 = distinct !{!69, !70}
!70 = distinct !{!70, !"LVerDomain"}
!71 = !{!72}
!72 = distinct !{!72, !70}
!73 = distinct !{!73, !10}
!74 = distinct !{!74, !12}
!75 = distinct !{!75, !10}
!76 = !{!77}
!77 = distinct !{!77, !78, !"_ZNSt3__16__treeINS_12__value_typeIiPN2v88internal8compiler29TopTierRegisterAllocationData11PhiMapValueEEENS_19__map_value_compareIiS8_NS_4lessIiEELb1EEENS3_13ZoneAllocatorIS8_EEE16__construct_nodeIJNS_4pairIiS7_EEEEENS_10unique_ptrINS_11__tree_nodeIS8_PvEENS_22__tree_node_destructorINSD_ISM_EEEEEEDpOT_: argument 0"}
!78 = distinct !{!78, !"_ZNSt3__16__treeINS_12__value_typeIiPN2v88internal8compiler29TopTierRegisterAllocationData11PhiMapValueEEENS_19__map_value_compareIiS8_NS_4lessIiEELb1EEENS3_13ZoneAllocatorIS8_EEE16__construct_nodeIJNS_4pairIiS7_EEEEENS_10unique_ptrINS_11__tree_nodeIS8_PvEENS_22__tree_node_destructorINSD_ISM_EEEEEEDpOT_"}
!79 = !{i64 0, i64 65}
!80 = !{!"branch_weights", i32 2000, i32 1}
!81 = !{!82}
!82 = distinct !{!82, !83, !"_ZNSt3__16__treeINS_12__value_typeIPN2v88internal8compiler17TopLevelLiveRangeEPNS4_16AllocatedOperandEEENS_19__map_value_compareIS6_S9_NS_4lessIS6_EELb1EEENS3_13ZoneAllocatorIS9_EEE16__construct_nodeIJRS6_RS8_EEENS_10unique_ptrINS_11__tree_nodeIS9_PvEENS_22__tree_node_destructorINSE_ISN_EEEEEEDpOT_: argument 0"}
!83 = distinct !{!83, !"_ZNSt3__16__treeINS_12__value_typeIPN2v88internal8compiler17TopLevelLiveRangeEPNS4_16AllocatedOperandEEENS_19__map_value_compareIS6_S9_NS_4lessIS6_EELb1EEENS3_13ZoneAllocatorIS9_EEE16__construct_nodeIJRS6_RS8_EEENS_10unique_ptrINS_11__tree_nodeIS9_PvEENS_22__tree_node_destructorINSE_ISN_EEEEEEDpOT_"}
!84 = !{!85}
!85 = distinct !{!85, !86}
!86 = distinct !{!86, !"LVerDomain"}
!87 = !{!88}
!88 = distinct !{!88, !86}
!89 = distinct !{!89, !10}
!90 = distinct !{!90, !12}
!91 = distinct !{!91, !10}
!92 = distinct !{!92, !12}
!93 = distinct !{!93, !12}
!94 = !{!95}
!95 = distinct !{!95, !96, !"_ZN2v84base8ReversedIKNS_8internal10ZoneVectorIPNS2_8compiler16InstructionBlockEEEEEDaRT_: argument 0"}
!96 = distinct !{!96, !"_ZN2v84base8ReversedIKNS_8internal10ZoneVectorIPNS2_8compiler16InstructionBlockEEEEEDaRT_"}
!97 = !{!98}
!98 = distinct !{!98, !99}
!99 = distinct !{!99, !"LVerDomain"}
!100 = !{!101}
!101 = distinct !{!101, !99}
!102 = distinct !{!102, !10}
!103 = distinct !{!103, !12}
!104 = distinct !{!104, !10}
!105 = !{!106}
!106 = distinct !{!106, !107, !"_ZNSt3__16__treeINS_12__value_typeIPN2v88internal8compiler18InstructionOperandEPNS4_11UsePositionEEENS_19__map_value_compareIS6_S9_NS_4lessIS6_EELb1EEENS3_13ZoneAllocatorIS9_EEE16__construct_nodeIJNS_4pairIS6_S8_EEEEENS_10unique_ptrINS_11__tree_nodeIS9_PvEENS_22__tree_node_destructorINSE_ISN_EEEEEEDpOT_: argument 0"}
!107 = distinct !{!107, !"_ZNSt3__16__treeINS_12__value_typeIPN2v88internal8compiler18InstructionOperandEPNS4_11UsePositionEEENS_19__map_value_compareIS6_S9_NS_4lessIS6_EELb1EEENS3_13ZoneAllocatorIS9_EEE16__construct_nodeIJNS_4pairIS6_S8_EEEEENS_10unique_ptrINS_11__tree_nodeIS9_PvEENS_22__tree_node_destructorINSE_ISN_EEEEEEDpOT_"}
!108 = !{!109}
!109 = distinct !{!109, !110, !"_ZNSt3__16__treeINS_12__value_typeIPN2v88internal8compiler18InstructionOperandEPNS4_11UsePositionEEENS_19__map_value_compareIS6_S9_NS_4lessIS6_EELb1EEENS3_13ZoneAllocatorIS9_EEE16__construct_nodeIJNS_4pairIS6_S8_EEEEENS_10unique_ptrINS_11__tree_nodeIS9_PvEENS_22__tree_node_destructorINSE_ISN_EEEEEEDpOT_: argument 0"}
!110 = distinct !{!110, !"_ZNSt3__16__treeINS_12__value_typeIPN2v88internal8compiler18InstructionOperandEPNS4_11UsePositionEEENS_19__map_value_compareIS6_S9_NS_4lessIS6_EELb1EEENS3_13ZoneAllocatorIS9_EEE16__construct_nodeIJNS_4pairIS6_S8_EEEEENS_10unique_ptrINS_11__tree_nodeIS9_PvEENS_22__tree_node_destructorINSE_ISN_EEEEEEDpOT_"}
!111 = !{!"branch_weights", i32 2146410443, i32 1073205}
!112 = !{!113}
!113 = distinct !{!113, !114, !"_ZNSt3__16__treeIPN2v88internal8compiler9LiveRangeENS3_17LiveRangeOrderingENS2_13ZoneAllocatorIS5_EEE16__construct_nodeIJRKS5_EEENS_10unique_ptrINS_11__tree_nodeIS5_PvEENS_22__tree_node_destructorINS7_ISG_EEEEEEDpOT_: argument 0"}
!114 = distinct !{!114, !"_ZNSt3__16__treeIPN2v88internal8compiler9LiveRangeENS3_17LiveRangeOrderingENS2_13ZoneAllocatorIS5_EEE16__construct_nodeIJRKS5_EEENS_10unique_ptrINS_11__tree_nodeIS5_PvEENS_22__tree_node_destructorINS7_ISG_EEEEEEDpOT_"}
!115 = !{!116}
!116 = distinct !{!116, !117, !"_ZNSt3__16__treeIN2v88internal8compiler15LiveRangeBundle5RangeENS4_13RangeOrderingENS2_13ZoneAllocatorIS5_EEE16__construct_nodeIJS5_EEENS_10unique_ptrINS_11__tree_nodeIS5_PvEENS_22__tree_node_destructorINS7_ISE_EEEEEEDpOT_: argument 0"}
!117 = distinct !{!117, !"_ZNSt3__16__treeIN2v88internal8compiler15LiveRangeBundle5RangeENS4_13RangeOrderingENS2_13ZoneAllocatorIS5_EEE16__construct_nodeIJS5_EEENS_10unique_ptrINS_11__tree_nodeIS5_PvEENS_22__tree_node_destructorINS7_ISE_EEEEEEDpOT_"}
!118 = !{!119}
!119 = distinct !{!119, !120}
!120 = distinct !{!120, !"LVerDomain"}
!121 = !{!122}
!122 = distinct !{!122, !120}
!123 = distinct !{!123, !10}
!124 = distinct !{!124, !12}
!125 = distinct !{!125, !10}
!126 = !{!127}
!127 = distinct !{!127, !128}
!128 = distinct !{!128, !"LVerDomain"}
!129 = !{!130}
!130 = distinct !{!130, !128}
!131 = distinct !{!131, !10}
!132 = distinct !{!132, !12}
!133 = distinct !{!133, !10}
!134 = !{!135}
!135 = distinct !{!135, !136, !"_ZNSt3__16__treeINS_12__value_typeIPN2v88internal8compiler17TopLevelLiveRangeEZNS4_19LinearScanAllocator32ComputeStateFromManyPredecessorsEPNS4_16InstructionBlockEPNS3_16ZoneUnorderedSetINS7_17RangeWithRegisterENSB_4HashENSB_6EqualsEEEE4VoteEENS_19__map_value_compareIS6_SH_ZNS7_32ComputeStateFromManyPredecessorsES9_SF_E27TopLevelLiveRangeComparatorLb1EEENS3_13ZoneAllocatorISH_EEE16__construct_nodeIJRKNS_4pairIKS6_SG_EEEEENS_10unique_ptrINS_11__tree_nodeISH_PvEENS_22__tree_node_destructorINSL_ISX_EEEEEEDpOT_: argument 0"}
!136 = distinct !{!136, !"_ZNSt3__16__treeINS_12__value_typeIPN2v88internal8compiler17TopLevelLiveRangeEZNS4_19LinearScanAllocator32ComputeStateFromManyPredecessorsEPNS4_16InstructionBlockEPNS3_16ZoneUnorderedSetINS7_17RangeWithRegisterENSB_4HashENSB_6EqualsEEEE4VoteEENS_19__map_value_compareIS6_SH_ZNS7_32ComputeStateFromManyPredecessorsES9_SF_E27TopLevelLiveRangeComparatorLb1EEENS3_13ZoneAllocatorISH_EEE16__construct_nodeIJRKNS_4pairIKS6_SG_EEEEENS_10unique_ptrINS_11__tree_nodeISH_PvEENS_22__tree_node_destructorINSL_ISX_EEEEEEDpOT_"}
!137 = !{!138}
!138 = distinct !{!138, !139, !"_ZNSt3__16__treeINS_12__value_typeIPN2v88internal8compiler17TopLevelLiveRangeEZNS4_19LinearScanAllocator32ComputeStateFromManyPredecessorsEPNS4_16InstructionBlockEPNS3_16ZoneUnorderedSetINS7_17RangeWithRegisterENSB_4HashENSB_6EqualsEEEE4VoteEENS_19__map_value_compareIS6_SH_ZNS7_32ComputeStateFromManyPredecessorsES9_SF_E27TopLevelLiveRangeComparatorLb1EEENS3_13ZoneAllocatorISH_EEE16__construct_nodeIJNS_4pairIS6_SG_EEEEENS_10unique_ptrINS_11__tree_nodeISH_PvEENS_22__tree_node_destructorINSL_ISU_EEEEEEDpOT_: argument 0"}
!139 = distinct !{!139, !"_ZNSt3__16__treeINS_12__value_typeIPN2v88internal8compiler17TopLevelLiveRangeEZNS4_19LinearScanAllocator32ComputeStateFromManyPredecessorsEPNS4_16InstructionBlockEPNS3_16ZoneUnorderedSetINS7_17RangeWithRegisterENSB_4HashENSB_6EqualsEEEE4VoteEENS_19__map_value_compareIS6_SH_ZNS7_32ComputeStateFromManyPredecessorsES9_SF_E27TopLevelLiveRangeComparatorLb1EEENS3_13ZoneAllocatorISH_EEE16__construct_nodeIJNS_4pairIS6_SG_EEEEENS_10unique_ptrINS_11__tree_nodeISH_PvEENS_22__tree_node_destructorINSL_ISU_EEEEEEDpOT_"}
!140 = !{!141}
!141 = distinct !{!141, !142, !"_ZNSt3__112__hash_tableIN2v88internal8compiler19LinearScanAllocator17RangeWithRegisterENS5_4HashENS5_6EqualsENS2_13ZoneAllocatorIS5_EEE16__construct_nodeIJRKPNS3_17TopLevelLiveRangeERiEEENS_10unique_ptrINS_11__hash_nodeIS5_PvEENS_22__hash_node_destructorINS8_ISK_EEEEEEDpOT_: argument 0"}
!142 = distinct !{!142, !"_ZNSt3__112__hash_tableIN2v88internal8compiler19LinearScanAllocator17RangeWithRegisterENS5_4HashENS5_6EqualsENS2_13ZoneAllocatorIS5_EEE16__construct_nodeIJRKPNS3_17TopLevelLiveRangeERiEEENS_10unique_ptrINS_11__hash_nodeIS5_PvEENS_22__hash_node_destructorINS8_ISK_EEEEEEDpOT_"}
!143 = distinct !{!143, !12}
!144 = !{!145}
!145 = distinct !{!145, !146, !"_ZNSt3__16__treeIPN2v88internal8compiler9LiveRangeENS3_19LinearScanAllocator25InactiveLiveRangeOrderingENS2_13ZoneAllocatorIS5_EEE16__construct_nodeIJRKS5_EEENS_10unique_ptrINS_11__tree_nodeIS5_PvEENS_22__tree_node_destructorINS8_ISH_EEEEEEDpOT_: argument 0"}
!146 = distinct !{!146, !"_ZNSt3__16__treeIPN2v88internal8compiler9LiveRangeENS3_19LinearScanAllocator25InactiveLiveRangeOrderingENS2_13ZoneAllocatorIS5_EEE16__construct_nodeIJRKS5_EEENS_10unique_ptrINS_11__tree_nodeIS5_PvEENS_22__tree_node_destructorINS8_ISH_EEEEEEDpOT_"}
!147 = !{!148}
!148 = distinct !{!148, !149}
!149 = distinct !{!149, !"LVerDomain"}
!150 = !{!151}
!151 = distinct !{!151, !149}
!152 = distinct !{!152, !10}
!153 = distinct !{!153, !12}
!154 = distinct !{!154, !10}
!155 = !{!156}
!156 = distinct !{!156, !157, !"_ZNSt3__16__treeIPN2v88internal8compiler9LiveRangeENS3_19LinearScanAllocator25InactiveLiveRangeOrderingENS2_13ZoneAllocatorIS5_EEE16__construct_nodeIJRKS5_EEENS_10unique_ptrINS_11__tree_nodeIS5_PvEENS_22__tree_node_destructorINS8_ISH_EEEEEEDpOT_: argument 0"}
!157 = distinct !{!157, !"_ZNSt3__16__treeIPN2v88internal8compiler9LiveRangeENS3_19LinearScanAllocator25InactiveLiveRangeOrderingENS2_13ZoneAllocatorIS5_EEE16__construct_nodeIJRKS5_EEENS_10unique_ptrINS_11__tree_nodeIS5_PvEENS_22__tree_node_destructorINS8_ISH_EEEEEEDpOT_"}
!158 = !{!159}
!159 = distinct !{!159, !160, !"_ZNSt3__112__hash_tableIN2v88internal8compiler19LinearScanAllocator17RangeWithRegisterENS5_4HashENS5_6EqualsENS2_13ZoneAllocatorIS5_EEE16__construct_nodeIJRKPNS3_9LiveRangeEEEENS_10unique_ptrINS_11__hash_nodeIS5_PvEENS_22__hash_node_destructorINS8_ISJ_EEEEEEDpOT_: argument 0"}
!160 = distinct !{!160, !"_ZNSt3__112__hash_tableIN2v88internal8compiler19LinearScanAllocator17RangeWithRegisterENS5_4HashENS5_6EqualsENS2_13ZoneAllocatorIS5_EEE16__construct_nodeIJRKPNS3_9LiveRangeEEEENS_10unique_ptrINS_11__hash_nodeIS5_PvEENS_22__hash_node_destructorINS8_ISJ_EEEEEEDpOT_"}
!161 = !{!162}
!162 = distinct !{!162, !163, !"_ZNSt3__16__treeIPN2v88internal8compiler9LiveRangeENS3_19LinearScanAllocator25InactiveLiveRangeOrderingENS2_13ZoneAllocatorIS5_EEE16__construct_nodeIJRKS5_EEENS_10unique_ptrINS_11__tree_nodeIS5_PvEENS_22__tree_node_destructorINS8_ISH_EEEEEEDpOT_: argument 0"}
!163 = distinct !{!163, !"_ZNSt3__16__treeIPN2v88internal8compiler9LiveRangeENS3_19LinearScanAllocator25InactiveLiveRangeOrderingENS2_13ZoneAllocatorIS5_EEE16__construct_nodeIJRKS5_EEENS_10unique_ptrINS_11__tree_nodeIS5_PvEENS_22__tree_node_destructorINS8_ISH_EEEEEEDpOT_"}
!164 = !{!165}
!165 = distinct !{!165, !166}
!166 = distinct !{!166, !"LVerDomain"}
!167 = !{!168}
!168 = distinct !{!168, !166}
!169 = distinct !{!169, !10}
!170 = distinct !{!170, !12}
!171 = distinct !{!171, !10}
!172 = distinct !{!172, !10}
!173 = distinct !{!173, !12}
!174 = distinct !{!174, !175, !10}
!175 = !{!"llvm.loop.unroll.runtime.disable"}
!176 = distinct !{!176, !12}
!177 = !{!178}
!178 = distinct !{!178, !179, !"_ZNSt3__16__treeINS_4pairIN2v88internal8compiler9RpoNumberEiEENS_4lessIS6_EENS3_13ZoneAllocatorIS6_EEE16__construct_nodeIJS6_EEENS_10unique_ptrINS_11__tree_nodeIS6_PvEENS_22__tree_node_destructorINS9_ISG_EEEEEEDpOT_: argument 0"}
!179 = distinct !{!179, !"_ZNSt3__16__treeINS_4pairIN2v88internal8compiler9RpoNumberEiEENS_4lessIS6_EENS3_13ZoneAllocatorIS6_EEE16__construct_nodeIJS6_EEENS_10unique_ptrINS_11__tree_nodeIS6_PvEENS_22__tree_node_destructorINS9_ISG_EEEEEEDpOT_"}
!180 = !{!181}
!181 = distinct !{!181, !182, !"_ZNSt3__19make_pairINS_4pairIPN2v88internal8compiler12ParallelMoveENS4_18InstructionOperandEEERS7_EENS1_INS_18__unwrap_ref_decayIT_E4typeENSA_IT0_E4typeEEEOSB_OSE_: argument 0"}
!182 = distinct !{!182, !"_ZNSt3__19make_pairINS_4pairIPN2v88internal8compiler12ParallelMoveENS4_18InstructionOperandEEERS7_EENS1_INS_18__unwrap_ref_decayIT_E4typeENSA_IT0_E4typeEEEOSB_OSE_"}
!183 = !{!184}
!184 = distinct !{!184, !185, !"_ZNSt3__16__treeINS_12__value_typeINS_4pairIPN2v88internal8compiler12ParallelMoveENS5_18InstructionOperandEEES8_EENS_19__map_value_compareIS9_SA_NS5_26DelayedInsertionMapCompareELb1EEENS4_13ZoneAllocatorISA_EEE16__construct_nodeIJNS2_IS9_S8_EEEEENS_10unique_ptrINS_11__tree_nodeISA_PvEENS_22__tree_node_destructorINSE_ISM_EEEEEEDpOT_: argument 0"}
!185 = distinct !{!185, !"_ZNSt3__16__treeINS_12__value_typeINS_4pairIPN2v88internal8compiler12ParallelMoveENS5_18InstructionOperandEEES8_EENS_19__map_value_compareIS9_SA_NS5_26DelayedInsertionMapCompareELb1EEENS4_13ZoneAllocatorISA_EEE16__construct_nodeIJNS2_IS9_S8_EEEEENS_10unique_ptrINS_11__tree_nodeISA_PvEENS_22__tree_node_destructorINSE_ISM_EEEEEEDpOT_"}
!186 = !{!187}
!187 = distinct !{!187, !188}
!188 = distinct !{!188, !"LVerDomain"}
!189 = !{!190}
!190 = distinct !{!190, !188}
!191 = distinct !{!191, !10}
!192 = distinct !{!192, !12}
!193 = distinct !{!193, !10}
!194 = !{!195}
!195 = distinct !{!195, !196}
!196 = distinct !{!196, !"LVerDomain"}
!197 = !{!198}
!198 = distinct !{!198, !196}
!199 = distinct !{!199, !10}
!200 = distinct !{!200, !12}
!201 = distinct !{!201, !10}
!202 = distinct !{!202, !12}
!203 = !{!204}
!204 = distinct !{!204, !205}
!205 = distinct !{!205, !"LVerDomain"}
!206 = !{!207}
!207 = distinct !{!207, !205}
!208 = distinct !{!208, !10}
!209 = distinct !{!209, !12}
!210 = distinct !{!210, !10}
!211 = !{!212}
!212 = distinct !{!212, !213}
!213 = distinct !{!213, !"LVerDomain"}
!214 = !{!215}
!215 = distinct !{!215, !213}
!216 = distinct !{!216, !10}
!217 = distinct !{!217, !12}
!218 = distinct !{!218, !10}
!219 = !{!220}
!220 = distinct !{!220, !221}
!221 = distinct !{!221, !"LVerDomain"}
!222 = !{!223}
!223 = distinct !{!223, !221}
!224 = distinct !{!224, !10}
!225 = distinct !{!225, !12}
!226 = distinct !{!226, !10}
!227 = !{!228}
!228 = distinct !{!228, !229}
!229 = distinct !{!229, !"LVerDomain"}
!230 = !{!231}
!231 = distinct !{!231, !229}
!232 = distinct !{!232, !10}
!233 = distinct !{!233, !12}
!234 = distinct !{!234, !10}
!235 = distinct !{!235, !12}
!236 = distinct !{!236, !12}
!237 = distinct !{!237, !12}
!238 = distinct !{!238, !12}
!239 = !{!240}
!240 = distinct !{!240, !241}
!241 = distinct !{!241, !"LVerDomain"}
!242 = !{!243}
!243 = distinct !{!243, !241}
!244 = distinct !{!244, !10}
!245 = distinct !{!245, !10}
!246 = distinct !{!246, !12}
!247 = !{!248}
!248 = distinct !{!248, !249}
!249 = distinct !{!249, !"LVerDomain"}
!250 = !{!251}
!251 = distinct !{!251, !249}
!252 = distinct !{!252, !10}
!253 = distinct !{!253, !12}
!254 = distinct !{!254, !10}
!255 = !{!256}
!256 = distinct !{!256, !257, !"_ZNSt3__16__treeIPN2v88internal8compiler9LiveRangeENS3_17LiveRangeOrderingENS2_13ZoneAllocatorIS5_EEE16__construct_nodeIJRKS5_EEENS_10unique_ptrINS_11__tree_nodeIS5_PvEENS_22__tree_node_destructorINS7_ISG_EEEEEEDpOT_: argument 0"}
!257 = distinct !{!257, !"_ZNSt3__16__treeIPN2v88internal8compiler9LiveRangeENS3_17LiveRangeOrderingENS2_13ZoneAllocatorIS5_EEE16__construct_nodeIJRKS5_EEENS_10unique_ptrINS_11__tree_nodeIS5_PvEENS_22__tree_node_destructorINS7_ISG_EEEEEEDpOT_"}
!258 = !{!259}
!259 = distinct !{!259, !260, !"_ZNSt3__16__treeIPN2v88internal8compiler9LiveRangeENS3_19LinearScanAllocator25InactiveLiveRangeOrderingENS2_13ZoneAllocatorIS5_EEE16__construct_nodeIJRKS5_EEENS_10unique_ptrINS_11__tree_nodeIS5_PvEENS_22__tree_node_destructorINS8_ISH_EEEEEEDpOT_: argument 0"}
!260 = distinct !{!260, !"_ZNSt3__16__treeIPN2v88internal8compiler9LiveRangeENS3_19LinearScanAllocator25InactiveLiveRangeOrderingENS2_13ZoneAllocatorIS5_EEE16__construct_nodeIJRKS5_EEENS_10unique_ptrINS_11__tree_nodeIS5_PvEENS_22__tree_node_destructorINS8_ISH_EEEEEEDpOT_"}
!261 = !{!262}
!262 = distinct !{!262, !263, !"_ZNSt3__16__treeIPN2v88internal8compiler9LiveRangeENS3_19LinearScanAllocator26UnhandledLiveRangeOrderingENS2_13ZoneAllocatorIS5_EEE16__construct_nodeIJRKS5_EEENS_10unique_ptrINS_11__tree_nodeIS5_PvEENS_22__tree_node_destructorINS8_ISH_EEEEEEDpOT_: argument 0"}
!263 = distinct !{!263, !"_ZNSt3__16__treeIPN2v88internal8compiler9LiveRangeENS3_19LinearScanAllocator26UnhandledLiveRangeOrderingENS2_13ZoneAllocatorIS5_EEE16__construct_nodeIJRKS5_EEENS_10unique_ptrINS_11__tree_nodeIS5_PvEENS_22__tree_node_destructorINS8_ISH_EEEEEEDpOT_"}
!264 = distinct !{!264, !12}
!265 = distinct !{!265, !12}
!266 = distinct !{!266, !12}
!267 = distinct !{!267, !12}
!268 = distinct !{!268, !12}
