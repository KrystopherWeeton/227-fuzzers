; ModuleID = '../../third_party/skia/src/gpu/geometry/GrShape.cpp'
source_filename = "../../third_party/skia/src/gpu/geometry/GrShape.cpp"
target datalayout = "e-m:e-i64:64-f80:128-n8:16:32:64-S128"
target triple = "x86_64-unknown-linux-gnu"

module asm ".symver exp, exp@GLIBC_2.2.5"
module asm ".symver exp2, exp2@GLIBC_2.2.5"
module asm ".symver exp2f, exp2f@GLIBC_2.2.5"
module asm ".symver expf, expf@GLIBC_2.2.5"
module asm ".symver lgamma, lgamma@GLIBC_2.2.5"
module asm ".symver lgammaf, lgammaf@GLIBC_2.2.5"
module asm ".symver lgammal, lgammal@GLIBC_2.2.5"
module asm ".symver log, log@GLIBC_2.2.5"
module asm ".symver log2, log2@GLIBC_2.2.5"
module asm ".symver log2f, log2f@GLIBC_2.2.5"
module asm ".symver logf, logf@GLIBC_2.2.5"
module asm ".symver pow, pow@GLIBC_2.2.5"
module asm ".symver powf, powf@GLIBC_2.2.5"

%class.GrShape = type { %union.anon, i8, i8, i8, i8, [4 x i8] }
%union.anon = type { %class.SkRRect, [4 x i8] }
%class.SkRRect = type { %struct.SkRect, [4 x %struct.SkPoint], i32 }
%struct.SkRect = type { float, float, float, float }
%struct.SkPoint = type { float, float }
%class.SkPath = type <{ %class.sk_sp, i32, %"struct.std::__1::atomic.3", %"struct.std::__1::atomic.3", i8, i8 }>
%class.sk_sp = type { %class.SkPathRef* }
%class.SkPathRef = type <{ %class.SkNVRefCnt, %struct.SkRect, [4 x i8], %class.SkTDArray, %class.SkTDArray.1, %class.SkTDArray.2, i32, [4 x i8], %"class.SkIDChangeListener::List", i8, i8, i8, i8, i8, i8, i8, i8 }>
%class.SkNVRefCnt = type { %"struct.std::__1::atomic" }
%"struct.std::__1::atomic" = type { %"struct.std::__1::__atomic_base" }
%"struct.std::__1::__atomic_base" = type { %"struct.std::__1::__atomic_base.0" }
%"struct.std::__1::__atomic_base.0" = type { %"struct.std::__1::__cxx_atomic_impl" }
%"struct.std::__1::__cxx_atomic_impl" = type { %"struct.std::__1::__cxx_atomic_base_impl" }
%"struct.std::__1::__cxx_atomic_base_impl" = type { i32 }
%class.SkTDArray = type { %struct.SkPoint*, i32, i32 }
%class.SkTDArray.1 = type { i8*, i32, i32 }
%class.SkTDArray.2 = type { float*, i32, i32 }
%"class.SkIDChangeListener::List" = type { %class.SkMutex, %class.SkTDArray.8 }
%class.SkMutex = type { %class.SkSemaphore }
%class.SkSemaphore = type { %"struct.std::__1::atomic", %class.SkOnce, %"struct.SkSemaphore::OSSemaphore"* }
%class.SkOnce = type { %"struct.std::__1::atomic.3" }
%"struct.SkSemaphore::OSSemaphore" = type opaque
%class.SkTDArray.8 = type { %class.SkIDChangeListener**, i32, i32 }
%class.SkIDChangeListener = type { %class.SkRefCnt.base, %"struct.std::__1::atomic.9", [3 x i8] }
%class.SkRefCnt.base = type { %class.SkRefCntBase.base }
%class.SkRefCntBase.base = type <{ i32 (...)**, %"struct.std::__1::atomic" }>
%"struct.std::__1::atomic.9" = type { %"struct.std::__1::__atomic_base.10" }
%"struct.std::__1::__atomic_base.10" = type { %"struct.std::__1::__cxx_atomic_impl.11" }
%"struct.std::__1::__cxx_atomic_impl.11" = type { %"struct.std::__1::__cxx_atomic_base_impl.12" }
%"struct.std::__1::__cxx_atomic_base_impl.12" = type { i8 }
%"struct.std::__1::atomic.3" = type { %"struct.std::__1::__atomic_base.4" }
%"struct.std::__1::__atomic_base.4" = type { %"struct.std::__1::__atomic_base.5" }
%"struct.std::__1::__atomic_base.5" = type { %"struct.std::__1::__cxx_atomic_impl.6" }
%"struct.std::__1::__cxx_atomic_impl.6" = type { %"struct.std::__1::__cxx_atomic_base_impl.7" }
%"struct.std::__1::__cxx_atomic_base_impl.7" = type { i8 }

; Function Attrs: nounwind ssp uwtable
define hidden dereferenceable(64) %class.GrShape* @_ZN7GrShapeaSERKS_(%class.GrShape* returned, %class.GrShape* dereferenceable(64)) local_unnamed_addr #0 align 2 {
  %3 = getelementptr inbounds %class.GrShape, %class.GrShape* %1, i64 0, i32 1
  %4 = load i8, i8* %3, align 8
  switch i8 %4, label %124 [
    i8 0, label %5
    i8 1, label %20
    i8 2, label %38
    i8 3, label %55
    i8 4, label %72
    i8 5, label %90
    i8 6, label %107
  ]

5:                                                ; preds = %2
  %6 = getelementptr inbounds %class.GrShape, %class.GrShape* %0, i64 0, i32 1
  %7 = load i8, i8* %6, align 8
  %8 = icmp eq i8 %7, 4
  br i1 %8, label %9, label %16

9:                                                ; preds = %5
  %10 = bitcast %class.GrShape* %0 to %class.SkPath*
  %11 = getelementptr inbounds %class.SkPath, %class.SkPath* %10, i64 0, i32 4
  %12 = load i8, i8* %11, align 2
  %13 = getelementptr inbounds %class.GrShape, %class.GrShape* %0, i64 0, i32 4
  %14 = lshr i8 %12, 1
  %15 = and i8 %14, 1
  store i8 %15, i8* %13, align 1
  tail call void @_ZN6SkPathD1Ev(%class.SkPath* %10) #7
  br label %16

16:                                               ; preds = %5, %9
  store i8 0, i8* %6, align 8
  %17 = getelementptr inbounds %class.GrShape, %class.GrShape* %0, i64 0, i32 3
  store i8 1, i8* %17, align 2
  %18 = getelementptr inbounds %class.GrShape, %class.GrShape* %0, i64 0, i32 2
  store i8 0, i8* %18, align 1
  %19 = getelementptr inbounds %class.GrShape, %class.GrShape* %0, i64 0, i32 4
  store i8 0, i8* %19, align 1
  br label %124

20:                                               ; preds = %2
  %21 = getelementptr inbounds %class.GrShape, %class.GrShape* %0, i64 0, i32 1
  %22 = load i8, i8* %21, align 8
  %23 = icmp eq i8 %22, 4
  br i1 %23, label %24, label %31

24:                                               ; preds = %20
  %25 = bitcast %class.GrShape* %0 to %class.SkPath*
  %26 = getelementptr inbounds %class.SkPath, %class.SkPath* %25, i64 0, i32 4
  %27 = load i8, i8* %26, align 2
  %28 = getelementptr inbounds %class.GrShape, %class.GrShape* %0, i64 0, i32 4
  %29 = lshr i8 %27, 1
  %30 = and i8 %29, 1
  store i8 %30, i8* %28, align 1
  tail call void @_ZN6SkPathD1Ev(%class.SkPath* %25) #7
  br label %31

31:                                               ; preds = %20, %24
  store i8 1, i8* %21, align 8
  %32 = getelementptr inbounds %class.GrShape, %class.GrShape* %0, i64 0, i32 3
  store i8 1, i8* %32, align 2
  %33 = getelementptr inbounds %class.GrShape, %class.GrShape* %0, i64 0, i32 2
  store i8 0, i8* %33, align 1
  %34 = getelementptr inbounds %class.GrShape, %class.GrShape* %0, i64 0, i32 4
  store i8 0, i8* %34, align 1
  %35 = bitcast %class.GrShape* %1 to i64*
  %36 = bitcast %class.GrShape* %0 to i64*
  %37 = load i64, i64* %35, align 4
  store i64 %37, i64* %36, align 8
  br label %124

38:                                               ; preds = %2
  %39 = getelementptr inbounds %class.GrShape, %class.GrShape* %0, i64 0, i32 1
  %40 = load i8, i8* %39, align 8
  %41 = icmp eq i8 %40, 4
  br i1 %41, label %42, label %49

42:                                               ; preds = %38
  %43 = bitcast %class.GrShape* %0 to %class.SkPath*
  %44 = getelementptr inbounds %class.SkPath, %class.SkPath* %43, i64 0, i32 4
  %45 = load i8, i8* %44, align 2
  %46 = getelementptr inbounds %class.GrShape, %class.GrShape* %0, i64 0, i32 4
  %47 = lshr i8 %45, 1
  %48 = and i8 %47, 1
  store i8 %48, i8* %46, align 1
  tail call void @_ZN6SkPathD1Ev(%class.SkPath* %43) #7
  br label %49

49:                                               ; preds = %38, %42
  store i8 2, i8* %39, align 8
  %50 = getelementptr inbounds %class.GrShape, %class.GrShape* %0, i64 0, i32 3
  store i8 1, i8* %50, align 2
  %51 = getelementptr inbounds %class.GrShape, %class.GrShape* %0, i64 0, i32 2
  store i8 0, i8* %51, align 1
  %52 = getelementptr inbounds %class.GrShape, %class.GrShape* %0, i64 0, i32 4
  store i8 0, i8* %52, align 1
  %53 = bitcast %class.GrShape* %0 to i8*
  %54 = bitcast %class.GrShape* %1 to i8*
  tail call void @llvm.memcpy.p0i8.p0i8.i64(i8* align 8 %53, i8* align 4 %54, i64 16, i1 false) #7
  br label %124

55:                                               ; preds = %2
  %56 = getelementptr inbounds %class.GrShape, %class.GrShape* %0, i64 0, i32 1
  %57 = load i8, i8* %56, align 8
  %58 = icmp eq i8 %57, 4
  br i1 %58, label %59, label %66

59:                                               ; preds = %55
  %60 = bitcast %class.GrShape* %0 to %class.SkPath*
  %61 = getelementptr inbounds %class.SkPath, %class.SkPath* %60, i64 0, i32 4
  %62 = load i8, i8* %61, align 2
  %63 = getelementptr inbounds %class.GrShape, %class.GrShape* %0, i64 0, i32 4
  %64 = lshr i8 %62, 1
  %65 = and i8 %64, 1
  store i8 %65, i8* %63, align 1
  tail call void @_ZN6SkPathD1Ev(%class.SkPath* %60) #7
  br label %66

66:                                               ; preds = %55, %59
  store i8 3, i8* %56, align 8
  %67 = getelementptr inbounds %class.GrShape, %class.GrShape* %0, i64 0, i32 3
  store i8 1, i8* %67, align 2
  %68 = getelementptr inbounds %class.GrShape, %class.GrShape* %0, i64 0, i32 2
  store i8 0, i8* %68, align 1
  %69 = getelementptr inbounds %class.GrShape, %class.GrShape* %0, i64 0, i32 4
  store i8 0, i8* %69, align 1
  %70 = bitcast %class.GrShape* %0 to i8*
  %71 = bitcast %class.GrShape* %1 to i8*
  tail call void @llvm.memcpy.p0i8.p0i8.i64(i8* align 8 %70, i8* align 4 %71, i64 52, i1 false) #7
  br label %124

72:                                               ; preds = %2
  %73 = bitcast %class.GrShape* %1 to %class.SkPath*
  %74 = getelementptr inbounds %class.GrShape, %class.GrShape* %0, i64 0, i32 1
  %75 = load i8, i8* %74, align 8
  %76 = icmp eq i8 %75, 4
  br i1 %76, label %77, label %80

77:                                               ; preds = %72
  %78 = bitcast %class.GrShape* %0 to %class.SkPath*
  %79 = tail call dereferenceable(16) %class.SkPath* @_ZN6SkPathaSERKS_(%class.SkPath* %78, %class.SkPath* dereferenceable(16) %73) #7
  br label %82

80:                                               ; preds = %72
  store i8 4, i8* %74, align 8
  %81 = bitcast %class.GrShape* %0 to %class.SkPath*
  tail call void @_ZN6SkPathC1ERKS_(%class.SkPath* %81, %class.SkPath* dereferenceable(16) %73) #7
  br label %82

82:                                               ; preds = %77, %80
  %83 = getelementptr inbounds %class.GrShape, %class.GrShape* %0, i64 0, i32 3
  store i8 1, i8* %83, align 2
  %84 = getelementptr inbounds %class.GrShape, %class.GrShape* %0, i64 0, i32 2
  store i8 0, i8* %84, align 1
  %85 = getelementptr inbounds %class.SkPath, %class.SkPath* %73, i64 0, i32 4
  %86 = load i8, i8* %85, align 2
  %87 = getelementptr inbounds %class.GrShape, %class.GrShape* %0, i64 0, i32 4
  %88 = lshr i8 %86, 1
  %89 = and i8 %88, 1
  store i8 %89, i8* %87, align 1
  br label %124

90:                                               ; preds = %2
  %91 = getelementptr inbounds %class.GrShape, %class.GrShape* %0, i64 0, i32 1
  %92 = load i8, i8* %91, align 8
  %93 = icmp eq i8 %92, 4
  br i1 %93, label %94, label %101

94:                                               ; preds = %90
  %95 = bitcast %class.GrShape* %0 to %class.SkPath*
  %96 = getelementptr inbounds %class.SkPath, %class.SkPath* %95, i64 0, i32 4
  %97 = load i8, i8* %96, align 2
  %98 = getelementptr inbounds %class.GrShape, %class.GrShape* %0, i64 0, i32 4
  %99 = lshr i8 %97, 1
  %100 = and i8 %99, 1
  store i8 %100, i8* %98, align 1
  tail call void @_ZN6SkPathD1Ev(%class.SkPath* %95) #7
  br label %101

101:                                              ; preds = %90, %94
  store i8 5, i8* %91, align 8
  %102 = getelementptr inbounds %class.GrShape, %class.GrShape* %0, i64 0, i32 3
  store i8 1, i8* %102, align 2
  %103 = getelementptr inbounds %class.GrShape, %class.GrShape* %0, i64 0, i32 2
  store i8 0, i8* %103, align 1
  %104 = getelementptr inbounds %class.GrShape, %class.GrShape* %0, i64 0, i32 4
  store i8 0, i8* %104, align 1
  %105 = bitcast %class.GrShape* %0 to i8*
  %106 = bitcast %class.GrShape* %1 to i8*
  tail call void @llvm.memcpy.p0i8.p0i8.i64(i8* align 8 %105, i8* align 4 %106, i64 28, i1 false) #7
  br label %124

107:                                              ; preds = %2
  %108 = getelementptr inbounds %class.GrShape, %class.GrShape* %0, i64 0, i32 1
  %109 = load i8, i8* %108, align 8
  %110 = icmp eq i8 %109, 4
  br i1 %110, label %111, label %118

111:                                              ; preds = %107
  %112 = bitcast %class.GrShape* %0 to %class.SkPath*
  %113 = getelementptr inbounds %class.SkPath, %class.SkPath* %112, i64 0, i32 4
  %114 = load i8, i8* %113, align 2
  %115 = getelementptr inbounds %class.GrShape, %class.GrShape* %0, i64 0, i32 4
  %116 = lshr i8 %114, 1
  %117 = and i8 %116, 1
  store i8 %117, i8* %115, align 1
  tail call void @_ZN6SkPathD1Ev(%class.SkPath* %112) #7
  br label %118

118:                                              ; preds = %107, %111
  store i8 6, i8* %108, align 8
  %119 = getelementptr inbounds %class.GrShape, %class.GrShape* %0, i64 0, i32 3
  store i8 1, i8* %119, align 2
  %120 = getelementptr inbounds %class.GrShape, %class.GrShape* %0, i64 0, i32 2
  store i8 0, i8* %120, align 1
  %121 = getelementptr inbounds %class.GrShape, %class.GrShape* %0, i64 0, i32 4
  store i8 0, i8* %121, align 1
  %122 = bitcast %class.GrShape* %0 to i8*
  %123 = bitcast %class.GrShape* %1 to i8*
  tail call void @llvm.memcpy.p0i8.p0i8.i64(i8* align 8 %122, i8* align 4 %123, i64 16, i1 false) #7
  br label %124

124:                                              ; preds = %2, %118, %101, %82, %66, %49, %31, %16
  %125 = getelementptr inbounds %class.GrShape, %class.GrShape* %1, i64 0, i32 2
  %126 = load i8, i8* %125, align 1
  %127 = getelementptr inbounds %class.GrShape, %class.GrShape* %0, i64 0, i32 2
  store i8 %126, i8* %127, align 1
  %128 = getelementptr inbounds %class.GrShape, %class.GrShape* %1, i64 0, i32 3
  %129 = load i8, i8* %128, align 2, !range !2
  %130 = getelementptr inbounds %class.GrShape, %class.GrShape* %0, i64 0, i32 3
  store i8 %129, i8* %130, align 2
  %131 = getelementptr inbounds %class.GrShape, %class.GrShape* %1, i64 0, i32 4
  %132 = load i8, i8* %131, align 1, !range !2
  %133 = getelementptr inbounds %class.GrShape, %class.GrShape* %0, i64 0, i32 4
  store i8 %132, i8* %133, align 1
  ret %class.GrShape* %0
}

; Function Attrs: norecurse nounwind readonly ssp uwtable
define hidden i32 @_ZNK7GrShape8stateKeyEv(%class.GrShape* nocapture readonly) local_unnamed_addr #1 align 2 {
  %2 = getelementptr inbounds %class.GrShape, %class.GrShape* %0, i64 0, i32 1
  %3 = load i8, i8* %2, align 8
  %4 = icmp eq i8 %3, 4
  br i1 %4, label %5, label %10

5:                                                ; preds = %1
  %6 = bitcast %class.GrShape* %0 to %class.SkPath*
  %7 = getelementptr inbounds %class.SkPath, %class.SkPath* %6, i64 0, i32 4
  %8 = load i8, i8* %7, align 2
  %9 = and i8 %8, 3
  br label %13

10:                                               ; preds = %1
  %11 = getelementptr inbounds %class.GrShape, %class.GrShape* %0, i64 0, i32 4
  %12 = load i8, i8* %11, align 1, !range !2
  br label %13

13:                                               ; preds = %10, %5
  %14 = phi i8 [ %9, %5 ], [ %12, %10 ]
  %15 = zext i8 %14 to i32
  %16 = zext i8 %3 to i32
  %17 = shl nuw nsw i32 %16, 2
  %18 = or i32 %17, %15
  %19 = getelementptr inbounds %class.GrShape, %class.GrShape* %0, i64 0, i32 2
  %20 = load i8, i8* %19, align 1
  %21 = zext i8 %20 to i32
  %22 = shl nuw nsw i32 %21, 5
  %23 = or i32 %18, %22
  %24 = getelementptr inbounds %class.GrShape, %class.GrShape* %0, i64 0, i32 3
  %25 = load i8, i8* %24, align 2, !range !2
  %26 = zext i8 %25 to i32
  %27 = shl nuw nsw i32 %26, 8
  %28 = or i32 %23, %27
  ret i32 %28
}

; Function Attrs: argmemonly nounwind
declare void @llvm.lifetime.start.p0i8(i64 immarg, i8* nocapture) #2

; Function Attrs: argmemonly nounwind
declare void @llvm.lifetime.end.p0i8(i64 immarg, i8* nocapture) #2

; Function Attrs: nounwind ssp uwtable
define hidden zeroext i1 @_ZN7GrShape12simplifyPathEj(%class.GrShape*, i32) local_unnamed_addr #0 align 2 {
  %3 = alloca %class.SkRRect, align 4
  %4 = alloca %struct.SkRect, align 4
  %5 = alloca %class.SkRRect, align 4
  %6 = alloca [2 x %struct.SkPoint], align 16
  %7 = alloca i32, align 4
  %8 = alloca i32, align 4
  %9 = alloca %class.SkRRect, align 4
  %10 = alloca i8, align 1
  %11 = bitcast %struct.SkRect* %4 to i8*
  call void @llvm.lifetime.start.p0i8(i64 16, i8* nonnull %11) #7
  %12 = bitcast %class.SkRRect* %5 to i8*
  %13 = bitcast %struct.SkRect* %4 to i8*
  call void @llvm.memset.p0i8.i64(i8* nonnull align 4 %13, i8 -1, i64 16, i1 false)
  call void @llvm.lifetime.start.p0i8(i64 52, i8* nonnull %12) #7
  %14 = getelementptr inbounds %class.SkRRect, %class.SkRRect* %5, i64 0, i32 2
  call void @llvm.memset.p0i8.i64(i8* nonnull align 4 %12, i8 0, i64 52, i1 false) #7
  %15 = bitcast [2 x %struct.SkPoint]* %6 to i8*
  call void @llvm.lifetime.start.p0i8(i64 16, i8* nonnull %15) #7
  %16 = getelementptr inbounds [2 x %struct.SkPoint], [2 x %struct.SkPoint]* %6, i64 0, i64 0
  %17 = getelementptr inbounds [2 x %struct.SkPoint], [2 x %struct.SkPoint]* %6, i64 0, i64 1
  %18 = bitcast i32* %7 to i8*
  %19 = bitcast [2 x %struct.SkPoint]* %6 to i8*
  call void @llvm.memset.p0i8.i64(i8* nonnull align 16 %19, i8 -1, i64 16, i1 false)
  call void @llvm.lifetime.start.p0i8(i64 4, i8* nonnull %18) #7
  store i32 -1431655766, i32* %7, align 4
  %20 = bitcast i32* %8 to i8*
  call void @llvm.lifetime.start.p0i8(i64 4, i8* nonnull %20) #7
  store i32 -1431655766, i32* %8, align 4
  %21 = bitcast %class.GrShape* %0 to %class.SkPath*
  %22 = bitcast %class.GrShape* %0 to %class.SkPathRef**
  %23 = load %class.SkPathRef*, %class.SkPathRef** %22, align 8
  %24 = getelementptr inbounds %class.SkPathRef, %class.SkPathRef* %23, i64 0, i32 4, i32 2
  %25 = load i32, i32* %24, align 4
  %26 = icmp eq i32 %25, 0
  br i1 %26, label %27, label %38

27:                                               ; preds = %2
  %28 = getelementptr inbounds %class.GrShape, %class.GrShape* %0, i64 0, i32 1
  %29 = load i8, i8* %28, align 8
  %30 = icmp eq i8 %29, 4
  br i1 %30, label %31, label %37

31:                                               ; preds = %27
  %32 = getelementptr inbounds %class.SkPath, %class.SkPath* %21, i64 0, i32 4
  %33 = load i8, i8* %32, align 2
  %34 = getelementptr inbounds %class.GrShape, %class.GrShape* %0, i64 0, i32 4
  %35 = lshr i8 %33, 1
  %36 = and i8 %35, 1
  store i8 %36, i8* %34, align 1
  tail call void @_ZN6SkPathD1Ev(%class.SkPath* %21) #7
  br label %37

37:                                               ; preds = %27, %31
  store i8 0, i8* %28, align 8
  br label %156

38:                                               ; preds = %2
  %39 = call zeroext i1 @_ZNK6SkPath6isLineEP7SkPoint(%class.SkPath* %21, %struct.SkPoint* nonnull %16) #7
  br i1 %39, label %40, label %41

40:                                               ; preds = %38
  call void @_ZN7GrShape12simplifyLineERK7SkPointS2_j(%class.GrShape* %0, %struct.SkPoint* nonnull dereferenceable(8) %16, %struct.SkPoint* dereferenceable(8) %17, i32 %1)
  br label %156

41:                                               ; preds = %38
  %42 = load %class.SkPathRef*, %class.SkPathRef** %22, align 8
  %43 = getelementptr inbounds %class.SkPathRef, %class.SkPathRef* %42, i64 0, i32 12
  %44 = load i8, i8* %43, align 1, !range !2
  %45 = icmp eq i8 %44, 0
  br i1 %45, label %80, label %46

46:                                               ; preds = %41
  %47 = bitcast %class.SkRRect* %3 to i8*
  call void @llvm.lifetime.start.p0i8(i64 52, i8* nonnull %47) #7
  call void @_ZNK9SkPathRef8getRRectEv(%class.SkRRect* nonnull sret %3, %class.SkPathRef* %42) #7
  call void @llvm.memcpy.p0i8.p0i8.i64(i8* nonnull align 4 %12, i8* nonnull align 4 %47, i64 52, i1 false) #7
  call void @llvm.lifetime.end.p0i8(i64 52, i8* nonnull %47) #7
  %48 = getelementptr inbounds %class.SkPathRef, %class.SkPathRef* %42, i64 0, i32 13
  %49 = load i8, i8* %48, align 1, !range !2
  %50 = getelementptr inbounds %class.SkPathRef, %class.SkPathRef* %42, i64 0, i32 14
  %51 = load i8, i8* %50, align 1
  %52 = zext i8 %51 to i32
  store i32 %52, i32* %8, align 4
  %53 = load i8, i8* %43, align 1
  %54 = icmp eq i8 %53, 0
  br i1 %54, label %55, label %57

55:                                               ; preds = %46
  %56 = load %class.SkPathRef*, %class.SkPathRef** %22, align 8
  br label %80

57:                                               ; preds = %46
  %58 = zext i8 %49 to i32
  store i32 %58, i32* %7, align 4
  %59 = load i32, i32* %14, align 4
  %60 = icmp ult i32 %59, 2
  br i1 %60, label %61, label %66

61:                                               ; preds = %57
  %62 = add nuw nsw i32 %52, 1
  %63 = lshr i32 %62, 1
  %64 = and i32 %63, 3
  %65 = getelementptr inbounds %class.SkRRect, %class.SkRRect* %5, i64 0, i32 0
  call void @_ZN7GrShape12simplifyRectERK6SkRect15SkPathDirectionjj(%class.GrShape* %0, %struct.SkRect* nonnull dereferenceable(16) %65, i32 %58, i32 %64, i32 %1) #7
  br label %156

66:                                               ; preds = %57
  %67 = getelementptr inbounds %class.GrShape, %class.GrShape* %0, i64 0, i32 1
  %68 = load i8, i8* %67, align 8
  switch i8 %68, label %75 [
    i8 3, label %156
    i8 4, label %69
  ]

69:                                               ; preds = %66
  %70 = getelementptr inbounds %class.SkPath, %class.SkPath* %21, i64 0, i32 4
  %71 = load i8, i8* %70, align 2
  %72 = getelementptr inbounds %class.GrShape, %class.GrShape* %0, i64 0, i32 4
  %73 = lshr i8 %71, 1
  %74 = and i8 %73, 1
  store i8 %74, i8* %72, align 1
  call void @_ZN6SkPathD1Ev(%class.SkPath* %21) #7
  br label %75

75:                                               ; preds = %69, %66
  store i8 3, i8* %67, align 8
  %76 = bitcast %class.GrShape* %0 to i8*
  call void @llvm.memcpy.p0i8.p0i8.i64(i8* align 8 %76, i8* nonnull align 4 %12, i64 52, i1 false) #7
  %77 = getelementptr inbounds %class.GrShape, %class.GrShape* %0, i64 0, i32 3
  %78 = xor i8 %49, 1
  store i8 %78, i8* %77, align 2
  %79 = getelementptr inbounds %class.GrShape, %class.GrShape* %0, i64 0, i32 2
  store i8 %51, i8* %79, align 1
  br label %156

80:                                               ; preds = %55, %41
  %81 = phi %class.SkPathRef* [ %56, %55 ], [ %42, %41 ]
  %82 = getelementptr inbounds %class.SkPathRef, %class.SkPathRef* %81, i64 0, i32 11
  %83 = load i8, i8* %82, align 2, !range !2
  %84 = icmp eq i8 %83, 0
  br i1 %84, label %138, label %85

85:                                               ; preds = %80
  %86 = getelementptr inbounds %class.SkPathRef, %class.SkPathRef* %81, i64 0, i32 9
  %87 = load i8, i8* %86, align 8
  %88 = icmp eq i8 %87, 0
  br i1 %88, label %100, label %89

89:                                               ; preds = %85
  %90 = getelementptr inbounds %class.SkPathRef, %class.SkPathRef* %81, i64 0, i32 1
  %91 = getelementptr inbounds %class.SkPathRef, %class.SkPathRef* %81, i64 0, i32 3, i32 0
  %92 = load %struct.SkPoint*, %struct.SkPoint** %91, align 8
  %93 = getelementptr inbounds %class.SkPathRef, %class.SkPathRef* %81, i64 0, i32 3, i32 2
  %94 = load i32, i32* %93, align 4
  %95 = call zeroext i1 @_ZN6SkRect14setBoundsCheckEPK7SkPointi(%struct.SkRect* %90, %struct.SkPoint* %92, i32 %94) #7
  %96 = getelementptr inbounds %class.SkPathRef, %class.SkPathRef* %81, i64 0, i32 10
  %97 = zext i1 %95 to i8
  store i8 %97, i8* %96, align 1
  store i8 0, i8* %86, align 8
  %98 = load i8, i8* %82, align 1
  %99 = icmp eq i8 %98, 0
  br label %100

100:                                              ; preds = %85, %89
  %101 = phi i1 [ false, %85 ], [ %99, %89 ]
  %102 = getelementptr inbounds %class.SkPathRef, %class.SkPathRef* %81, i64 0, i32 1
  %103 = bitcast %struct.SkRect* %102 to i8*
  call void @llvm.memcpy.p0i8.p0i8.i64(i8* nonnull align 4 %11, i8* align 4 %103, i64 16, i1 false) #7
  %104 = getelementptr inbounds %class.SkPathRef, %class.SkPathRef* %81, i64 0, i32 13
  %105 = load i8, i8* %104, align 1, !range !2
  %106 = getelementptr inbounds %class.SkPathRef, %class.SkPathRef* %81, i64 0, i32 14
  %107 = load i8, i8* %106, align 1
  %108 = zext i8 %107 to i32
  store i32 %108, i32* %8, align 4
  br i1 %101, label %138, label %109

109:                                              ; preds = %100
  %110 = zext i8 %105 to i32
  store i32 %110, i32* %7, align 4
  %111 = bitcast %class.SkRRect* %9 to i8*
  call void @llvm.lifetime.start.p0i8(i64 52, i8* nonnull %111) #7
  call void @llvm.memset.p0i8.i64(i8* nonnull align 4 %111, i8 0, i64 52, i1 false) #7, !alias.scope !3
  call void @_ZN7SkRRect7setOvalERK6SkRect(%class.SkRRect* nonnull %9, %struct.SkRect* nonnull dereferenceable(16) %4) #7
  %112 = load i32, i32* %7, align 4
  %113 = load i32, i32* %8, align 4
  %114 = getelementptr inbounds %class.SkRRect, %class.SkRRect* %9, i64 0, i32 2
  %115 = load i32, i32* %114, align 4
  %116 = icmp ult i32 %115, 2
  br i1 %116, label %117, label %120

117:                                              ; preds = %109
  %118 = and i32 %113, 3
  %119 = getelementptr inbounds %class.SkRRect, %class.SkRRect* %9, i64 0, i32 0
  call void @_ZN7GrShape12simplifyRectERK6SkRect15SkPathDirectionjj(%class.GrShape* %0, %struct.SkRect* nonnull dereferenceable(16) %119, i32 %112, i32 %118, i32 %1) #7
  br label %137

120:                                              ; preds = %109
  %121 = getelementptr inbounds %class.GrShape, %class.GrShape* %0, i64 0, i32 1
  %122 = load i8, i8* %121, align 8
  switch i8 %122, label %129 [
    i8 3, label %137
    i8 4, label %123
  ]

123:                                              ; preds = %120
  %124 = getelementptr inbounds %class.SkPath, %class.SkPath* %21, i64 0, i32 4
  %125 = load i8, i8* %124, align 2
  %126 = getelementptr inbounds %class.GrShape, %class.GrShape* %0, i64 0, i32 4
  %127 = lshr i8 %125, 1
  %128 = and i8 %127, 1
  store i8 %128, i8* %126, align 1
  call void @_ZN6SkPathD1Ev(%class.SkPath* %21) #7
  br label %129

129:                                              ; preds = %123, %120
  store i8 3, i8* %121, align 8
  %130 = bitcast %class.GrShape* %0 to i8*
  call void @llvm.memcpy.p0i8.p0i8.i64(i8* align 8 %130, i8* nonnull align 4 %111, i64 52, i1 false) #7
  %131 = icmp eq i32 %112, 0
  %132 = getelementptr inbounds %class.GrShape, %class.GrShape* %0, i64 0, i32 3
  %133 = zext i1 %131 to i8
  store i8 %133, i8* %132, align 2
  %134 = trunc i32 %113 to i8
  %135 = shl i8 %134, 1
  %136 = getelementptr inbounds %class.GrShape, %class.GrShape* %0, i64 0, i32 2
  store i8 %135, i8* %136, align 1
  br label %137

137:                                              ; preds = %117, %120, %129
  call void @llvm.lifetime.end.p0i8(i64 52, i8* nonnull %111) #7
  br label %156

138:                                              ; preds = %100, %80
  %139 = and i32 %1, 1
  %140 = icmp ne i32 %139, 0
  %141 = call zeroext i1 @_ZN10SkPathPriv12IsSimpleRectERK6SkPathbP6SkRectP15SkPathDirectionPj(%class.SkPath* dereferenceable(16) %21, i1 zeroext %140, %struct.SkRect* nonnull %4, i32* nonnull %7, i32* nonnull %8) #7
  br i1 %141, label %142, label %145

142:                                              ; preds = %138
  %143 = load i32, i32* %7, align 4
  %144 = load i32, i32* %8, align 4
  call void @_ZN7GrShape12simplifyRectERK6SkRect15SkPathDirectionjj(%class.GrShape* %0, %struct.SkRect* nonnull dereferenceable(16) %4, i32 %143, i32 %144, i32 %1)
  br label %156

145:                                              ; preds = %138
  %146 = and i32 %1, 2
  %147 = icmp eq i32 %146, 0
  br i1 %147, label %156, label %148

148:                                              ; preds = %145
  call void @llvm.lifetime.start.p0i8(i64 1, i8* nonnull %10) #7
  store i8 -86, i8* %10, align 1
  %149 = call zeroext i1 @_ZNK6SkPath6isRectEP6SkRectPbP15SkPathDirection(%class.SkPath* %21, %struct.SkRect* nonnull %4, i8* nonnull %10, i32* null) #7
  br i1 %149, label %150, label %155

150:                                              ; preds = %148
  %151 = load i8, i8* %10, align 1, !range !2
  %152 = icmp ne i8 %151, 0
  %153 = or i1 %140, %152
  br i1 %153, label %154, label %155

154:                                              ; preds = %150
  call void @_ZN7GrShape12simplifyRectERK6SkRect15SkPathDirectionjj(%class.GrShape* %0, %struct.SkRect* nonnull dereferenceable(16) %4, i32 0, i32 0, i32 %1)
  call void @llvm.lifetime.end.p0i8(i64 1, i8* nonnull %10) #7
  br label %156

155:                                              ; preds = %148, %150
  call void @llvm.lifetime.end.p0i8(i64 1, i8* nonnull %10) #7
  br label %156

156:                                              ; preds = %75, %66, %61, %145, %155, %154, %142, %137, %40, %37
  %157 = phi i1 [ false, %37 ], [ false, %40 ], [ true, %137 ], [ true, %142 ], [ true, %154 ], [ false, %155 ], [ false, %145 ], [ true, %61 ], [ true, %66 ], [ true, %75 ]
  call void @llvm.lifetime.end.p0i8(i64 4, i8* nonnull %20) #7
  call void @llvm.lifetime.end.p0i8(i64 4, i8* nonnull %18) #7
  call void @llvm.lifetime.end.p0i8(i64 16, i8* nonnull %15) #7
  call void @llvm.lifetime.end.p0i8(i64 52, i8* nonnull %12) #7
  call void @llvm.lifetime.end.p0i8(i64 16, i8* nonnull %11) #7
  ret i1 %157
}

declare zeroext i1 @_ZNK6SkPath6isLineEP7SkPoint(%class.SkPath*, %struct.SkPoint*) local_unnamed_addr #3

; Function Attrs: nounwind ssp uwtable
define hidden void @_ZN7GrShape12simplifyLineERK7SkPointS2_j(%class.GrShape*, %struct.SkPoint* nocapture readonly dereferenceable(8), %struct.SkPoint* nocapture readonly dereferenceable(8), i32) local_unnamed_addr #0 align 2 {
  %5 = and i32 %3, 1
  %6 = icmp eq i32 %5, 0
  br i1 %6, label %19, label %7

7:                                                ; preds = %4
  %8 = getelementptr inbounds %class.GrShape, %class.GrShape* %0, i64 0, i32 1
  %9 = load i8, i8* %8, align 8
  %10 = icmp eq i8 %9, 4
  br i1 %10, label %11, label %18

11:                                               ; preds = %7
  %12 = bitcast %class.GrShape* %0 to %class.SkPath*
  %13 = getelementptr inbounds %class.SkPath, %class.SkPath* %12, i64 0, i32 4
  %14 = load i8, i8* %13, align 2
  %15 = getelementptr inbounds %class.GrShape, %class.GrShape* %0, i64 0, i32 4
  %16 = lshr i8 %14, 1
  %17 = and i8 %16, 1
  store i8 %17, i8* %15, align 1
  tail call void @_ZN6SkPathD1Ev(%class.SkPath* %12) #7
  br label %18

18:                                               ; preds = %7, %11
  store i8 0, i8* %8, align 8
  br label %91

19:                                               ; preds = %4
  %20 = getelementptr inbounds %struct.SkPoint, %struct.SkPoint* %1, i64 0, i32 0
  %21 = load float, float* %20, align 4
  %22 = getelementptr inbounds %struct.SkPoint, %struct.SkPoint* %2, i64 0, i32 0
  %23 = load float, float* %22, align 4
  %24 = fcmp oeq float %21, %23
  br i1 %24, label %25, label %45

25:                                               ; preds = %19
  %26 = getelementptr inbounds %struct.SkPoint, %struct.SkPoint* %1, i64 0, i32 1
  %27 = load float, float* %26, align 4
  %28 = getelementptr inbounds %struct.SkPoint, %struct.SkPoint* %2, i64 0, i32 1
  %29 = load float, float* %28, align 4
  %30 = fcmp oeq float %27, %29
  br i1 %30, label %31, label %45

31:                                               ; preds = %25
  %32 = getelementptr inbounds %class.GrShape, %class.GrShape* %0, i64 0, i32 1
  %33 = load i8, i8* %32, align 8
  switch i8 %33, label %41 [
    i8 1, label %91
    i8 4, label %34
  ]

34:                                               ; preds = %31
  %35 = bitcast %class.GrShape* %0 to %class.SkPath*
  %36 = getelementptr inbounds %class.SkPath, %class.SkPath* %35, i64 0, i32 4
  %37 = load i8, i8* %36, align 2
  %38 = getelementptr inbounds %class.GrShape, %class.GrShape* %0, i64 0, i32 4
  %39 = lshr i8 %37, 1
  %40 = and i8 %39, 1
  store i8 %40, i8* %38, align 1
  tail call void @_ZN6SkPathD1Ev(%class.SkPath* %35) #7
  br label %41

41:                                               ; preds = %34, %31
  store i8 1, i8* %32, align 8
  %42 = bitcast %struct.SkPoint* %1 to i64*
  %43 = bitcast %class.GrShape* %0 to i64*
  %44 = load i64, i64* %42, align 4
  store i64 %44, i64* %43, align 8
  br label %91

45:                                               ; preds = %19, %25
  %46 = getelementptr inbounds %class.GrShape, %class.GrShape* %0, i64 0, i32 1
  %47 = load i8, i8* %46, align 8
  switch i8 %47, label %55 [
    i8 6, label %63
    i8 4, label %48
  ]

48:                                               ; preds = %45
  %49 = bitcast %class.GrShape* %0 to %class.SkPath*
  %50 = getelementptr inbounds %class.SkPath, %class.SkPath* %49, i64 0, i32 4
  %51 = load i8, i8* %50, align 2
  %52 = getelementptr inbounds %class.GrShape, %class.GrShape* %0, i64 0, i32 4
  %53 = lshr i8 %51, 1
  %54 = and i8 %53, 1
  store i8 %54, i8* %52, align 1
  tail call void @_ZN6SkPathD1Ev(%class.SkPath* %49) #7
  br label %55

55:                                               ; preds = %45, %48
  store i8 6, i8* %46, align 8
  %56 = bitcast %struct.SkPoint* %1 to i64*
  %57 = bitcast %class.GrShape* %0 to i64*
  %58 = load i64, i64* %56, align 4
  store i64 %58, i64* %57, align 8
  %59 = getelementptr inbounds %class.GrShape, %class.GrShape* %0, i64 0, i32 0, i32 0, i32 0, i32 2
  %60 = bitcast %struct.SkPoint* %2 to i64*
  %61 = bitcast float* %59 to i64*
  %62 = load i64, i64* %60, align 4
  store i64 %62, i64* %61, align 8
  br label %63

63:                                               ; preds = %45, %55
  %64 = and i32 %3, 4
  %65 = icmp eq i32 %64, 0
  br i1 %65, label %91, label %66

66:                                               ; preds = %63
  %67 = getelementptr inbounds %class.GrShape, %class.GrShape* %0, i64 0, i32 0, i32 0, i32 0, i32 2
  %68 = getelementptr inbounds float, float* %67, i64 1
  %69 = load float, float* %68, align 4
  %70 = getelementptr inbounds %class.GrShape, %class.GrShape* %0, i64 0, i32 0, i32 0, i32 0, i32 1
  %71 = load float, float* %70, align 4
  %72 = fcmp olt float %69, %71
  br i1 %72, label %73, label %76

73:                                               ; preds = %66
  %74 = bitcast %class.GrShape* %0 to i32*
  %75 = load i32, i32* %74, align 4
  br label %85

76:                                               ; preds = %66
  %77 = fcmp oeq float %69, %71
  br i1 %77, label %78, label %91

78:                                               ; preds = %76
  %79 = load float, float* %67, align 8
  %80 = getelementptr inbounds %class.GrShape, %class.GrShape* %0, i64 0, i32 0, i32 0, i32 0, i32 0
  %81 = load float, float* %80, align 8
  %82 = fcmp olt float %79, %81
  br i1 %82, label %83, label %91

83:                                               ; preds = %78
  %84 = bitcast float %81 to i32
  br label %85

85:                                               ; preds = %83, %73
  %86 = phi i32 [ %75, %73 ], [ %84, %83 ]
  %87 = bitcast float* %67 to i64*
  %88 = bitcast %class.GrShape* %0 to i64*
  %89 = load i64, i64* %87, align 4
  store i64 %89, i64* %88, align 4
  %90 = bitcast float* %67 to i32*
  store i32 %86, i32* %90, align 4
  store float %71, float* %68, align 4
  br label %91

91:                                               ; preds = %41, %31, %63, %76, %78, %85, %18
  ret void
}

; Function Attrs: nounwind ssp uwtable
define hidden void @_ZN7GrShape13simplifyRRectERK7SkRRect15SkPathDirectionjj(%class.GrShape*, %class.SkRRect* nocapture readonly dereferenceable(52), i32, i32, i32) local_unnamed_addr #0 align 2 {
  %6 = getelementptr inbounds %class.SkRRect, %class.SkRRect* %1, i64 0, i32 2
  %7 = load i32, i32* %6, align 4
  %8 = icmp ult i32 %7, 2
  br i1 %8, label %9, label %14

9:                                                ; preds = %5
  %10 = add i32 %3, 1
  %11 = lshr i32 %10, 1
  %12 = and i32 %11, 3
  %13 = getelementptr inbounds %class.SkRRect, %class.SkRRect* %1, i64 0, i32 0
  tail call void @_ZN7GrShape12simplifyRectERK6SkRect15SkPathDirectionjj(%class.GrShape* %0, %struct.SkRect* dereferenceable(16) %13, i32 %2, i32 %12, i32 %4)
  br label %32

14:                                               ; preds = %5
  %15 = getelementptr inbounds %class.GrShape, %class.GrShape* %0, i64 0, i32 1
  %16 = load i8, i8* %15, align 8
  switch i8 %16, label %24 [
    i8 3, label %32
    i8 4, label %17
  ]

17:                                               ; preds = %14
  %18 = bitcast %class.GrShape* %0 to %class.SkPath*
  %19 = getelementptr inbounds %class.SkPath, %class.SkPath* %18, i64 0, i32 4
  %20 = load i8, i8* %19, align 2
  %21 = getelementptr inbounds %class.GrShape, %class.GrShape* %0, i64 0, i32 4
  %22 = lshr i8 %20, 1
  %23 = and i8 %22, 1
  store i8 %23, i8* %21, align 1
  tail call void @_ZN6SkPathD1Ev(%class.SkPath* %18) #7
  br label %24

24:                                               ; preds = %14, %17
  store i8 3, i8* %15, align 8
  %25 = bitcast %class.GrShape* %0 to i8*
  %26 = bitcast %class.SkRRect* %1 to i8*
  tail call void @llvm.memcpy.p0i8.p0i8.i64(i8* align 8 %25, i8* align 4 %26, i64 52, i1 false)
  %27 = icmp eq i32 %2, 0
  %28 = getelementptr inbounds %class.GrShape, %class.GrShape* %0, i64 0, i32 3
  %29 = zext i1 %27 to i8
  store i8 %29, i8* %28, align 2
  %30 = trunc i32 %3 to i8
  %31 = getelementptr inbounds %class.GrShape, %class.GrShape* %0, i64 0, i32 2
  store i8 %30, i8* %31, align 1
  br label %32

32:                                               ; preds = %14, %24, %9
  ret void
}

declare zeroext i1 @_ZN10SkPathPriv12IsSimpleRectERK6SkPathbP6SkRectP15SkPathDirectionPj(%class.SkPath* dereferenceable(16), i1 zeroext, %struct.SkRect*, i32*, i32*) local_unnamed_addr #3

; Function Attrs: nounwind ssp uwtable
define hidden void @_ZN7GrShape12simplifyRectERK6SkRect15SkPathDirectionjj(%class.GrShape*, %struct.SkRect* nocapture readonly dereferenceable(16), i32, i32, i32) local_unnamed_addr #0 align 2 {
  %6 = alloca i64, align 8
  %7 = bitcast i64* %6 to %struct.SkPoint*
  %8 = alloca i64, align 8
  %9 = bitcast i64* %8 to %struct.SkPoint*
  %10 = getelementptr inbounds %struct.SkRect, %struct.SkRect* %1, i64 0, i32 2
  %11 = load float, float* %10, align 4
  %12 = getelementptr inbounds %struct.SkRect, %struct.SkRect* %1, i64 0, i32 0
  %13 = load float, float* %12, align 4
  %14 = fsub float %11, %13
  %15 = fcmp une float %14, 0.000000e+00
  %16 = bitcast float %13 to i32
  br i1 %15, label %17, label %24

17:                                               ; preds = %5
  %18 = getelementptr inbounds %struct.SkRect, %struct.SkRect* %1, i64 0, i32 3
  %19 = load float, float* %18, align 4
  %20 = getelementptr inbounds %struct.SkRect, %struct.SkRect* %1, i64 0, i32 1
  %21 = load float, float* %20, align 4
  %22 = fsub float %19, %21
  %23 = fcmp une float %22, 0.000000e+00
  br i1 %23, label %80, label %24

24:                                               ; preds = %17, %5
  %25 = and i32 %4, 1
  %26 = icmp eq i32 %25, 0
  br i1 %26, label %39, label %27

27:                                               ; preds = %24
  %28 = getelementptr inbounds %class.GrShape, %class.GrShape* %0, i64 0, i32 1
  %29 = load i8, i8* %28, align 8
  %30 = icmp eq i8 %29, 4
  br i1 %30, label %31, label %38

31:                                               ; preds = %27
  %32 = bitcast %class.GrShape* %0 to %class.SkPath*
  %33 = getelementptr inbounds %class.SkPath, %class.SkPath* %32, i64 0, i32 4
  %34 = load i8, i8* %33, align 2
  %35 = getelementptr inbounds %class.GrShape, %class.GrShape* %0, i64 0, i32 4
  %36 = lshr i8 %34, 1
  %37 = and i8 %36, 1
  store i8 %37, i8* %35, align 1
  tail call void @_ZN6SkPathD1Ev(%class.SkPath* %32) #7
  br label %38

38:                                               ; preds = %27, %31
  store i8 0, i8* %28, align 8
  br label %115

39:                                               ; preds = %24
  %40 = fcmp oeq float %14, 0.000000e+00
  %41 = getelementptr inbounds %struct.SkRect, %struct.SkRect* %1, i64 0, i32 3
  %42 = load float, float* %41, align 4
  %43 = getelementptr inbounds %struct.SkRect, %struct.SkRect* %1, i64 0, i32 1
  %44 = load float, float* %43, align 4
  %45 = fsub float %42, %44
  %46 = fcmp oeq float %45, 0.000000e+00
  %47 = xor i1 %40, %46
  %48 = bitcast float %44 to i32
  br i1 %47, label %49, label %64

49:                                               ; preds = %39
  %50 = bitcast i64* %6 to i8*
  call void @llvm.lifetime.start.p0i8(i64 8, i8* nonnull %50) #7
  %51 = getelementptr inbounds %struct.SkPoint, %struct.SkPoint* %7, i64 0, i32 1
  %52 = bitcast i64* %6 to float*
  store float %13, float* %52, align 8
  store float %44, float* %51, align 4
  %53 = bitcast i64* %8 to i8*
  call void @llvm.lifetime.start.p0i8(i64 8, i8* nonnull %53) #7
  %54 = getelementptr inbounds %struct.SkPoint, %struct.SkPoint* %9, i64 0, i32 1
  %55 = bitcast i64* %8 to float*
  store float %11, float* %55, align 8
  store float %42, float* %54, align 4
  %56 = icmp ugt i32 %3, 1
  %57 = and i32 %4, 2
  %58 = icmp eq i32 %57, 0
  %59 = and i1 %56, %58
  br i1 %59, label %60, label %63

60:                                               ; preds = %49
  %61 = load i64, i64* %8, align 8
  store i64 %61, i64* %6, align 8
  %62 = bitcast i64* %8 to float*
  store float %13, float* %62, align 8
  store float %44, float* %54, align 4
  br label %63

63:                                               ; preds = %60, %49
  call void @_ZN7GrShape12simplifyLineERK7SkPointS2_j(%class.GrShape* %0, %struct.SkPoint* nonnull dereferenceable(8) %7, %struct.SkPoint* nonnull dereferenceable(8) %9, i32 %4)
  call void @llvm.lifetime.end.p0i8(i64 8, i8* nonnull %53) #7
  call void @llvm.lifetime.end.p0i8(i64 8, i8* nonnull %50) #7
  br label %115

64:                                               ; preds = %39
  %65 = getelementptr inbounds %class.GrShape, %class.GrShape* %0, i64 0, i32 1
  %66 = load i8, i8* %65, align 8
  switch i8 %66, label %74 [
    i8 1, label %115
    i8 4, label %67
  ]

67:                                               ; preds = %64
  %68 = bitcast %class.GrShape* %0 to %class.SkPath*
  %69 = getelementptr inbounds %class.SkPath, %class.SkPath* %68, i64 0, i32 4
  %70 = load i8, i8* %69, align 2
  %71 = getelementptr inbounds %class.GrShape, %class.GrShape* %0, i64 0, i32 4
  %72 = lshr i8 %70, 1
  %73 = and i8 %72, 1
  store i8 %73, i8* %71, align 1
  tail call void @_ZN6SkPathD1Ev(%class.SkPath* %68) #7
  br label %74

74:                                               ; preds = %67, %64
  store i8 1, i8* %65, align 8
  %75 = bitcast %class.GrShape* %0 to i64*
  %76 = zext i32 %48 to i64
  %77 = shl nuw i64 %76, 32
  %78 = zext i32 %16 to i64
  %79 = or i64 %77, %78
  store i64 %79, i64* %75, align 8
  br label %115

80:                                               ; preds = %17
  %81 = getelementptr inbounds %class.GrShape, %class.GrShape* %0, i64 0, i32 1
  %82 = load i8, i8* %81, align 8
  switch i8 %82, label %90 [
    i8 2, label %98
    i8 4, label %83
  ]

83:                                               ; preds = %80
  %84 = bitcast %class.GrShape* %0 to %class.SkPath*
  %85 = getelementptr inbounds %class.SkPath, %class.SkPath* %84, i64 0, i32 4
  %86 = load i8, i8* %85, align 2
  %87 = getelementptr inbounds %class.GrShape, %class.GrShape* %0, i64 0, i32 4
  %88 = lshr i8 %86, 1
  %89 = and i8 %88, 1
  store i8 %89, i8* %87, align 1
  tail call void @_ZN6SkPathD1Ev(%class.SkPath* %84) #7
  br label %90

90:                                               ; preds = %80, %83
  store i8 2, i8* %81, align 8
  %91 = bitcast %class.GrShape* %0 to i8*
  %92 = bitcast %struct.SkRect* %1 to i8*
  tail call void @llvm.memcpy.p0i8.p0i8.i64(i8* align 8 %91, i8* align 4 %92, i64 16, i1 false)
  %93 = icmp eq i32 %2, 0
  %94 = getelementptr inbounds %class.GrShape, %class.GrShape* %0, i64 0, i32 3
  %95 = zext i1 %93 to i8
  store i8 %95, i8* %94, align 2
  %96 = trunc i32 %3 to i8
  %97 = getelementptr inbounds %class.GrShape, %class.GrShape* %0, i64 0, i32 2
  store i8 %96, i8* %97, align 1
  br label %98

98:                                               ; preds = %80, %90
  %99 = and i32 %4, 4
  %100 = icmp eq i32 %99, 0
  br i1 %100, label %115, label %101

101:                                              ; preds = %98
  %102 = getelementptr inbounds %class.GrShape, %class.GrShape* %0, i64 0, i32 0, i32 0, i32 0, i32 0
  %103 = load float, float* %102, align 4
  %104 = getelementptr inbounds %class.GrShape, %class.GrShape* %0, i64 0, i32 0, i32 0, i32 0, i32 2
  %105 = load float, float* %104, align 4
  %106 = fcmp ogt float %103, %105
  br i1 %106, label %107, label %108

107:                                              ; preds = %101
  store float %105, float* %102, align 4
  store float %103, float* %104, align 4
  br label %108

108:                                              ; preds = %107, %101
  %109 = getelementptr inbounds %class.GrShape, %class.GrShape* %0, i64 0, i32 0, i32 0, i32 0, i32 1
  %110 = load float, float* %109, align 4
  %111 = getelementptr inbounds %class.GrShape, %class.GrShape* %0, i64 0, i32 0, i32 0, i32 0, i32 3
  %112 = load float, float* %111, align 4
  %113 = fcmp ogt float %110, %112
  br i1 %113, label %114, label %115

114:                                              ; preds = %108
  store float %112, float* %109, align 4
  store float %110, float* %111, align 4
  br label %115

115:                                              ; preds = %114, %108, %74, %64, %98, %38, %63
  ret void
}

declare zeroext i1 @_ZNK6SkPath6isRectEP6SkRectPbP15SkPathDirection(%class.SkPath*, %struct.SkRect*, i8*, i32*) local_unnamed_addr #3

; Function Attrs: nounwind ssp uwtable
define hidden zeroext i1 @_ZN7GrShape11simplifyArcEj(%class.GrShape*, i32) local_unnamed_addr #0 align 2 {
  %3 = alloca %struct.SkPoint, align 4
  %4 = alloca i64, align 8
  %5 = bitcast i64* %4 to %struct.SkPoint*
  %6 = alloca %class.SkRRect, align 4
  %7 = getelementptr inbounds %class.GrShape, %class.GrShape* %0, i64 0, i32 0, i32 0, i32 1, i64 1
  %8 = bitcast %struct.SkPoint* %7 to i8*
  %9 = load i8, i8* %8, align 8, !range !2
  %10 = icmp ne i8 %9, 0
  %11 = getelementptr inbounds %class.GrShape, %class.GrShape* %0, i64 0, i32 0, i32 0, i32 0
  %12 = getelementptr inbounds %class.GrShape, %class.GrShape* %0, i64 0, i32 0, i32 0, i32 0, i32 0
  %13 = load float, float* %12, align 4
  %14 = getelementptr inbounds %class.GrShape, %class.GrShape* %0, i64 0, i32 0, i32 0, i32 0, i32 2
  %15 = load float, float* %14, align 4
  %16 = fcmp olt float %13, %15
  br i1 %16, label %17, label %27

17:                                               ; preds = %2
  %18 = getelementptr inbounds %class.GrShape, %class.GrShape* %0, i64 0, i32 0, i32 0, i32 0, i32 1
  %19 = load float, float* %18, align 4
  %20 = getelementptr inbounds %class.GrShape, %class.GrShape* %0, i64 0, i32 0, i32 0, i32 0, i32 3
  %21 = load float, float* %20, align 4
  %22 = fcmp uge float %19, %21
  br i1 %22, label %27, label %23

23:                                               ; preds = %17
  %24 = getelementptr inbounds %class.GrShape, %class.GrShape* %0, i64 0, i32 0, i32 0, i32 1, i64 0, i32 1
  %25 = load float, float* %24, align 4
  %26 = fcmp une float %25, 0.000000e+00
  br i1 %26, label %107, label %27

27:                                               ; preds = %2, %23, %17
  %28 = and i32 %1, 1
  %29 = icmp eq i32 %28, 0
  br i1 %29, label %42, label %30

30:                                               ; preds = %27
  %31 = getelementptr inbounds %class.GrShape, %class.GrShape* %0, i64 0, i32 1
  %32 = load i8, i8* %31, align 8
  %33 = icmp eq i8 %32, 4
  br i1 %33, label %34, label %41

34:                                               ; preds = %30
  %35 = bitcast %class.GrShape* %0 to %class.SkPath*
  %36 = getelementptr inbounds %class.SkPath, %class.SkPath* %35, i64 0, i32 4
  %37 = load i8, i8* %36, align 2
  %38 = getelementptr inbounds %class.GrShape, %class.GrShape* %0, i64 0, i32 4
  %39 = lshr i8 %37, 1
  %40 = and i8 %39, 1
  store i8 %40, i8* %38, align 1
  tail call void @_ZN6SkPathD1Ev(%class.SkPath* %35) #7
  br label %41

41:                                               ; preds = %30, %34
  store i8 0, i8* %31, align 8
  br label %159

42:                                               ; preds = %27
  %43 = getelementptr inbounds %class.GrShape, %class.GrShape* %0, i64 0, i32 0, i32 0, i32 1, i64 0, i32 1
  %44 = load float, float* %43, align 4
  %45 = fcmp une float %44, 0.000000e+00
  br i1 %45, label %95, label %46

46:                                               ; preds = %42
  %47 = bitcast %struct.SkPoint* %3 to i8*
  call void @llvm.lifetime.start.p0i8(i64 8, i8* nonnull %47) #7
  %48 = getelementptr inbounds %struct.SkPoint, %struct.SkPoint* %3, i64 0, i32 0
  %49 = getelementptr inbounds %struct.SkPoint, %struct.SkPoint* %3, i64 0, i32 1
  %50 = fmul float %13, 5.000000e-01
  %51 = fmul float %15, 5.000000e-01
  %52 = fadd float %50, %51
  store float %52, float* %48, align 4
  %53 = getelementptr inbounds %class.GrShape, %class.GrShape* %0, i64 0, i32 0, i32 0, i32 0, i32 1
  %54 = load float, float* %53, align 4
  %55 = fmul float %54, 5.000000e-01
  %56 = getelementptr inbounds %class.GrShape, %class.GrShape* %0, i64 0, i32 0, i32 0, i32 0, i32 3
  %57 = load float, float* %56, align 4
  %58 = fmul float %57, 5.000000e-01
  %59 = fadd float %55, %58
  store float %59, float* %49, align 4
  %60 = getelementptr inbounds %class.GrShape, %class.GrShape* %0, i64 0, i32 0, i32 0, i32 1, i64 0, i32 0
  %61 = load float, float* %60, align 8
  %62 = fmul float %61, 0x3F91DF46A0000000
  %63 = bitcast i64* %4 to i8*
  call void @llvm.lifetime.start.p0i8(i64 8, i8* nonnull %63) #7
  %64 = bitcast i64* %4 to float*
  %65 = getelementptr inbounds %struct.SkPoint, %struct.SkPoint* %5, i64 0, i32 1
  %66 = fsub float %15, %13
  %67 = fmul float %66, 5.000000e-01
  %68 = tail call float @cosf(float %62) #7
  %69 = fmul float %67, %68
  %70 = fadd float %52, %69
  store float %70, float* %64, align 8
  %71 = load float, float* %56, align 4
  %72 = load float, float* %53, align 4
  %73 = fsub float %71, %72
  %74 = fmul float %73, 5.000000e-01
  %75 = tail call float @sinf(float %62) #7
  %76 = fmul float %75, %74
  %77 = fadd float %59, %76
  store float %77, float* %65, align 4
  %78 = load i8, i8* %8, align 8, !range !2
  %79 = icmp eq i8 %78, 0
  br i1 %79, label %81, label %80

80:                                               ; preds = %46
  call void @_ZN7GrShape12simplifyLineERK7SkPointS2_j(%class.GrShape* %0, %struct.SkPoint* nonnull dereferenceable(8) %3, %struct.SkPoint* nonnull dereferenceable(8) %5, i32 %1)
  br label %94

81:                                               ; preds = %46
  %82 = getelementptr inbounds %class.GrShape, %class.GrShape* %0, i64 0, i32 1
  %83 = load i8, i8* %82, align 8
  switch i8 %83, label %91 [
    i8 1, label %94
    i8 4, label %84
  ]

84:                                               ; preds = %81
  %85 = bitcast %class.GrShape* %0 to %class.SkPath*
  %86 = getelementptr inbounds %class.SkPath, %class.SkPath* %85, i64 0, i32 4
  %87 = load i8, i8* %86, align 2
  %88 = getelementptr inbounds %class.GrShape, %class.GrShape* %0, i64 0, i32 4
  %89 = lshr i8 %87, 1
  %90 = and i8 %89, 1
  store i8 %90, i8* %88, align 1
  tail call void @_ZN6SkPathD1Ev(%class.SkPath* %85) #7
  br label %91

91:                                               ; preds = %84, %81
  store i8 1, i8* %82, align 8
  %92 = bitcast %class.GrShape* %0 to i64*
  %93 = load i64, i64* %4, align 8
  store i64 %93, i64* %92, align 8
  br label %94

94:                                               ; preds = %91, %81, %80
  call void @llvm.lifetime.end.p0i8(i64 8, i8* nonnull %63) #7
  call void @llvm.lifetime.end.p0i8(i64 8, i8* nonnull %47) #7
  br label %159

95:                                               ; preds = %42
  %96 = getelementptr inbounds %class.GrShape, %class.GrShape* %0, i64 0, i32 1
  %97 = load i8, i8* %96, align 8
  %98 = icmp eq i8 %97, 4
  br i1 %98, label %99, label %106

99:                                               ; preds = %95
  %100 = bitcast %class.GrShape* %0 to %class.SkPath*
  %101 = getelementptr inbounds %class.SkPath, %class.SkPath* %100, i64 0, i32 4
  %102 = load i8, i8* %101, align 2
  %103 = getelementptr inbounds %class.GrShape, %class.GrShape* %0, i64 0, i32 4
  %104 = lshr i8 %102, 1
  %105 = and i8 %104, 1
  store i8 %105, i8* %103, align 1
  tail call void @_ZN6SkPathD1Ev(%class.SkPath* %100) #7
  br label %106

106:                                              ; preds = %95, %99
  store i8 0, i8* %96, align 8
  br label %159

107:                                              ; preds = %23
  %108 = and i32 %1, 1
  %109 = icmp eq i32 %108, 0
  br i1 %109, label %110, label %115

110:                                              ; preds = %107
  %111 = and i32 %1, 2
  %112 = icmp ne i32 %111, 0
  %113 = icmp eq i8 %9, 0
  %114 = and i1 %112, %113
  br i1 %114, label %115, label %141

115:                                              ; preds = %110, %107
  %116 = fcmp ugt float %25, -3.600000e+02
  %117 = fcmp ult float %25, 3.600000e+02
  %118 = and i1 %116, %117
  br i1 %118, label %141, label %119

119:                                              ; preds = %115
  %120 = bitcast %class.SkRRect* %6 to i8*
  call void @llvm.lifetime.start.p0i8(i64 52, i8* nonnull %120) #7
  call void @llvm.memset.p0i8.i64(i8* nonnull align 4 %120, i8 0, i64 52, i1 false) #7, !alias.scope !6
  call void @_ZN7SkRRect7setOvalERK6SkRect(%class.SkRRect* nonnull %6, %struct.SkRect* dereferenceable(16) %11) #7
  %121 = getelementptr inbounds %class.SkRRect, %class.SkRRect* %6, i64 0, i32 2
  %122 = load i32, i32* %121, align 4
  %123 = icmp ult i32 %122, 2
  br i1 %123, label %124, label %126

124:                                              ; preds = %119
  %125 = getelementptr inbounds %class.SkRRect, %class.SkRRect* %6, i64 0, i32 0
  call void @_ZN7GrShape12simplifyRectERK6SkRect15SkPathDirectionjj(%class.GrShape* %0, %struct.SkRect* nonnull dereferenceable(16) %125, i32 0, i32 0, i32 %1) #7
  br label %140

126:                                              ; preds = %119
  %127 = getelementptr inbounds %class.GrShape, %class.GrShape* %0, i64 0, i32 1
  %128 = load i8, i8* %127, align 8
  switch i8 %128, label %136 [
    i8 3, label %140
    i8 4, label %129
  ]

129:                                              ; preds = %126
  %130 = bitcast %class.GrShape* %0 to %class.SkPath*
  %131 = getelementptr inbounds %class.SkPath, %class.SkPath* %130, i64 0, i32 4
  %132 = load i8, i8* %131, align 2
  %133 = getelementptr inbounds %class.GrShape, %class.GrShape* %0, i64 0, i32 4
  %134 = lshr i8 %132, 1
  %135 = and i8 %134, 1
  store i8 %135, i8* %133, align 1
  call void @_ZN6SkPathD1Ev(%class.SkPath* %130) #7
  br label %136

136:                                              ; preds = %129, %126
  store i8 3, i8* %127, align 8
  %137 = bitcast %class.GrShape* %0 to i8*
  call void @llvm.memcpy.p0i8.p0i8.i64(i8* align 8 %137, i8* nonnull align 4 %120, i64 52, i1 false) #7
  %138 = getelementptr inbounds %class.GrShape, %class.GrShape* %0, i64 0, i32 3
  store i8 1, i8* %138, align 2
  %139 = getelementptr inbounds %class.GrShape, %class.GrShape* %0, i64 0, i32 2
  store i8 0, i8* %139, align 1
  br label %140

140:                                              ; preds = %124, %126, %136
  call void @llvm.lifetime.end.p0i8(i64 52, i8* nonnull %120) #7
  br label %159

141:                                              ; preds = %110, %115
  %142 = and i32 %1, 4
  %143 = icmp eq i32 %142, 0
  br i1 %143, label %159, label %144

144:                                              ; preds = %141
  %145 = fcmp olt float %25, 0.000000e+00
  %146 = getelementptr inbounds %class.GrShape, %class.GrShape* %0, i64 0, i32 0, i32 0, i32 1, i64 0, i32 0
  %147 = load float, float* %146, align 8
  br i1 %145, label %148, label %151

148:                                              ; preds = %144
  %149 = fadd float %25, %147
  store float %149, float* %146, align 8
  %150 = fsub float -0.000000e+00, %25
  store float %150, float* %24, align 4
  br label %151

151:                                              ; preds = %144, %148
  %152 = phi float [ %149, %148 ], [ %147, %144 ]
  %153 = fcmp uge float %152, 0.000000e+00
  %154 = fcmp ult float %152, 3.600000e+02
  %155 = and i1 %153, %154
  br i1 %155, label %159, label %156

156:                                              ; preds = %151
  %157 = getelementptr inbounds %class.GrShape, %class.GrShape* %0, i64 0, i32 0, i32 0, i32 1, i64 0, i32 0
  %158 = tail call float @fmodf(float %152, float 3.600000e+02) #7
  store float %158, float* %157, align 8
  br label %159

159:                                              ; preds = %94, %106, %41, %156, %141, %151, %140
  %160 = phi i1 [ true, %140 ], [ %10, %151 ], [ %10, %141 ], [ %10, %156 ], [ %10, %41 ], [ %10, %106 ], [ %10, %94 ]
  ret i1 %160
}

; Function Attrs: nofree nounwind
declare float @cosf(float) local_unnamed_addr #4

; Function Attrs: nofree nounwind
declare float @sinf(float) local_unnamed_addr #4

; Function Attrs: nounwind ssp uwtable
define hidden void @_ZN7GrShape13simplifyPointERK7SkPointj(%class.GrShape*, %struct.SkPoint* nocapture readonly dereferenceable(8), i32) local_unnamed_addr #0 align 2 {
  %4 = and i32 %2, 1
  %5 = icmp eq i32 %4, 0
  %6 = getelementptr inbounds %class.GrShape, %class.GrShape* %0, i64 0, i32 1
  %7 = load i8, i8* %6, align 8
  br i1 %5, label %18, label %8

8:                                                ; preds = %3
  %9 = icmp eq i8 %7, 4
  br i1 %9, label %10, label %17

10:                                               ; preds = %8
  %11 = bitcast %class.GrShape* %0 to %class.SkPath*
  %12 = getelementptr inbounds %class.SkPath, %class.SkPath* %11, i64 0, i32 4
  %13 = load i8, i8* %12, align 2
  %14 = getelementptr inbounds %class.GrShape, %class.GrShape* %0, i64 0, i32 4
  %15 = lshr i8 %13, 1
  %16 = and i8 %15, 1
  store i8 %16, i8* %14, align 1
  tail call void @_ZN6SkPathD1Ev(%class.SkPath* %11) #7
  br label %17

17:                                               ; preds = %8, %10
  store i8 0, i8* %6, align 8
  br label %30

18:                                               ; preds = %3
  switch i8 %7, label %26 [
    i8 1, label %30
    i8 4, label %19
  ]

19:                                               ; preds = %18
  %20 = bitcast %class.GrShape* %0 to %class.SkPath*
  %21 = getelementptr inbounds %class.SkPath, %class.SkPath* %20, i64 0, i32 4
  %22 = load i8, i8* %21, align 2
  %23 = getelementptr inbounds %class.GrShape, %class.GrShape* %0, i64 0, i32 4
  %24 = lshr i8 %22, 1
  %25 = and i8 %24, 1
  store i8 %25, i8* %23, align 1
  tail call void @_ZN6SkPathD1Ev(%class.SkPath* %20) #7
  br label %26

26:                                               ; preds = %18, %19
  store i8 1, i8* %6, align 8
  %27 = bitcast %struct.SkPoint* %1 to i64*
  %28 = bitcast %class.GrShape* %0 to i64*
  %29 = load i64, i64* %27, align 4
  store i64 %29, i64* %28, align 8
  br label %30

30:                                               ; preds = %18, %26, %17
  ret void
}

; Function Attrs: nofree nounwind
declare float @fmodf(float, float) local_unnamed_addr #4

; Function Attrs: argmemonly nounwind
declare void @llvm.memcpy.p0i8.p0i8.i64(i8* nocapture writeonly, i8* nocapture readonly, i64, i1 immarg) #2

; Function Attrs: nounwind ssp uwtable
define hidden zeroext i1 @_ZN7GrShape8simplifyEj(%class.GrShape*, i32) local_unnamed_addr #0 align 2 {
  %3 = getelementptr inbounds %class.GrShape, %class.GrShape* %0, i64 0, i32 1
  %4 = load i8, i8* %3, align 8
  switch i8 %4, label %42 [
    i8 0, label %43
    i8 1, label %5
    i8 6, label %9
    i8 2, label %13
    i8 3, label %22
    i8 4, label %38
    i8 5, label %40
  ]

5:                                                ; preds = %2
  %6 = and i32 %1, 1
  %7 = icmp eq i32 %6, 0
  br i1 %7, label %43, label %8

8:                                                ; preds = %5
  store i8 0, i8* %3, align 8
  br label %43

9:                                                ; preds = %2
  %10 = bitcast %class.GrShape* %0 to %struct.SkPoint*
  %11 = getelementptr inbounds %class.GrShape, %class.GrShape* %0, i64 0, i32 0, i32 0, i32 0, i32 2
  %12 = bitcast float* %11 to %struct.SkPoint*
  tail call void @_ZN7GrShape12simplifyLineERK7SkPointS2_j(%class.GrShape* %0, %struct.SkPoint* dereferenceable(8) %10, %struct.SkPoint* dereferenceable(8) %12, i32 %1)
  br label %43

13:                                               ; preds = %2
  %14 = getelementptr inbounds %class.GrShape, %class.GrShape* %0, i64 0, i32 0, i32 0, i32 0
  %15 = getelementptr inbounds %class.GrShape, %class.GrShape* %0, i64 0, i32 3
  %16 = load i8, i8* %15, align 2, !range !2
  %17 = xor i8 %16, 1
  %18 = zext i8 %17 to i32
  %19 = getelementptr inbounds %class.GrShape, %class.GrShape* %0, i64 0, i32 2
  %20 = load i8, i8* %19, align 1
  %21 = zext i8 %20 to i32
  tail call void @_ZN7GrShape12simplifyRectERK6SkRect15SkPathDirectionjj(%class.GrShape* %0, %struct.SkRect* dereferenceable(16) %14, i32 %18, i32 %21, i32 %1)
  br label %43

22:                                               ; preds = %2
  %23 = getelementptr inbounds %class.GrShape, %class.GrShape* %0, i64 0, i32 0, i32 0, i32 2
  %24 = load i32, i32* %23, align 4
  %25 = icmp ult i32 %24, 2
  br i1 %25, label %26, label %43

26:                                               ; preds = %22
  %27 = getelementptr inbounds %class.GrShape, %class.GrShape* %0, i64 0, i32 2
  %28 = load i8, i8* %27, align 1
  %29 = zext i8 %28 to i32
  %30 = getelementptr inbounds %class.GrShape, %class.GrShape* %0, i64 0, i32 3
  %31 = load i8, i8* %30, align 2, !range !2
  %32 = xor i8 %31, 1
  %33 = zext i8 %32 to i32
  %34 = add nuw nsw i32 %29, 1
  %35 = lshr i32 %34, 1
  %36 = and i32 %35, 3
  %37 = getelementptr inbounds %class.GrShape, %class.GrShape* %0, i64 0, i32 0, i32 0, i32 0
  tail call void @_ZN7GrShape12simplifyRectERK6SkRect15SkPathDirectionjj(%class.GrShape* %0, %struct.SkRect* dereferenceable(16) %37, i32 %33, i32 %36, i32 %1) #7
  br label %43

38:                                               ; preds = %2
  %39 = tail call zeroext i1 @_ZN7GrShape12simplifyPathEj(%class.GrShape* %0, i32 %1)
  br label %43

40:                                               ; preds = %2
  %41 = tail call zeroext i1 @_ZN7GrShape11simplifyArcEj(%class.GrShape* %0, i32 %1)
  br label %43

42:                                               ; preds = %2
  tail call void @llvm.trap()
  unreachable

43:                                               ; preds = %26, %22, %8, %5, %40, %38, %13, %9, %2
  %44 = phi i1 [ %41, %40 ], [ %39, %38 ], [ true, %13 ], [ false, %9 ], [ false, %2 ], [ false, %5 ], [ false, %8 ], [ true, %22 ], [ true, %26 ]
  %45 = and i32 %1, 2
  %46 = icmp eq i32 %45, 0
  br i1 %46, label %47, label %51

47:                                               ; preds = %43
  %48 = load i8, i8* %3, align 8
  %49 = and i8 %48, -2
  %50 = icmp eq i8 %49, 2
  br i1 %50, label %54, label %51

51:                                               ; preds = %47, %43
  %52 = getelementptr inbounds %class.GrShape, %class.GrShape* %0, i64 0, i32 3
  store i8 1, i8* %52, align 2
  %53 = getelementptr inbounds %class.GrShape, %class.GrShape* %0, i64 0, i32 2
  store i8 0, i8* %53, align 1
  br label %54

54:                                               ; preds = %47, %51
  ret i1 %44
}

; Function Attrs: cold noreturn nounwind
declare void @llvm.trap() #5

; Function Attrs: nounwind ssp uwtable
define hidden zeroext i1 @_ZNK7GrShape20conservativeContainsERK6SkRect(%class.GrShape*, %struct.SkRect* dereferenceable(16)) local_unnamed_addr #0 align 2 {
  %3 = alloca %class.SkPath, align 8
  %4 = getelementptr inbounds %class.GrShape, %class.GrShape* %0, i64 0, i32 1
  %5 = load i8, i8* %4, align 8
  switch i8 %5, label %53 [
    i8 0, label %54
    i8 1, label %54
    i8 6, label %54
    i8 2, label %6
    i8 3, label %38
    i8 4, label %41
    i8 5, label %44
  ]

6:                                                ; preds = %2
  %7 = getelementptr inbounds %struct.SkRect, %struct.SkRect* %1, i64 0, i32 0
  %8 = load float, float* %7, align 4
  %9 = getelementptr inbounds %struct.SkRect, %struct.SkRect* %1, i64 0, i32 2
  %10 = load float, float* %9, align 4
  %11 = fcmp olt float %8, %10
  br i1 %11, label %12, label %54

12:                                               ; preds = %6
  %13 = getelementptr inbounds %struct.SkRect, %struct.SkRect* %1, i64 0, i32 1
  %14 = load float, float* %13, align 4
  %15 = getelementptr inbounds %struct.SkRect, %struct.SkRect* %1, i64 0, i32 3
  %16 = load float, float* %15, align 4
  %17 = fcmp uge float %14, %16
  br i1 %17, label %54, label %18

18:                                               ; preds = %12
  %19 = getelementptr inbounds %class.GrShape, %class.GrShape* %0, i64 0, i32 0, i32 0, i32 0, i32 0
  %20 = load float, float* %19, align 4
  %21 = getelementptr inbounds %class.GrShape, %class.GrShape* %0, i64 0, i32 0, i32 0, i32 0, i32 2
  %22 = load float, float* %21, align 4
  %23 = fcmp olt float %20, %22
  br i1 %23, label %24, label %54

24:                                               ; preds = %18
  %25 = getelementptr inbounds %class.GrShape, %class.GrShape* %0, i64 0, i32 0, i32 0, i32 0, i32 1
  %26 = load float, float* %25, align 4
  %27 = getelementptr inbounds %class.GrShape, %class.GrShape* %0, i64 0, i32 0, i32 0, i32 0, i32 3
  %28 = load float, float* %27, align 4
  %29 = fcmp uge float %26, %28
  %30 = fcmp ugt float %20, %8
  %31 = or i1 %30, %29
  br i1 %31, label %54, label %32

32:                                               ; preds = %24
  %33 = fcmp ole float %26, %14
  %34 = fcmp oge float %22, %10
  %35 = fcmp oge float %28, %16
  %36 = and i1 %34, %33
  %37 = and i1 %35, %36
  br label %54

38:                                               ; preds = %2
  %39 = getelementptr inbounds %class.GrShape, %class.GrShape* %0, i64 0, i32 0, i32 0
  %40 = tail call zeroext i1 @_ZNK7SkRRect8containsERK6SkRect(%class.SkRRect* %39, %struct.SkRect* dereferenceable(16) %1) #7
  br label %54

41:                                               ; preds = %2
  %42 = bitcast %class.GrShape* %0 to %class.SkPath*
  %43 = tail call zeroext i1 @_ZNK6SkPath26conservativelyContainsRectERK6SkRect(%class.SkPath* %42, %struct.SkRect* dereferenceable(16) %1) #7
  br label %54

44:                                               ; preds = %2
  %45 = getelementptr inbounds %class.GrShape, %class.GrShape* %0, i64 0, i32 0, i32 0, i32 1, i64 1
  %46 = bitcast %struct.SkPoint* %45 to i8*
  %47 = load i8, i8* %46, align 8, !range !2
  %48 = icmp eq i8 %47, 0
  br i1 %48, label %54, label %49

49:                                               ; preds = %44
  %50 = bitcast %class.SkPath* %3 to i8*
  call void @llvm.lifetime.start.p0i8(i64 16, i8* nonnull %50) #7
  %51 = bitcast %class.SkPath* %3 to i8*
  call void @llvm.memset.p0i8.i64(i8* nonnull align 8 %51, i8 -86, i64 16, i1 false)
  call void @_ZN6SkPathC1Ev(%class.SkPath* nonnull %3) #7
  call void @_ZNK7GrShape6asPathEP6SkPathb(%class.GrShape* %0, %class.SkPath* nonnull %3, i1 zeroext true)
  %52 = call zeroext i1 @_ZNK6SkPath26conservativelyContainsRectERK6SkRect(%class.SkPath* nonnull %3, %struct.SkRect* dereferenceable(16) %1) #7
  call void @_ZN6SkPathD1Ev(%class.SkPath* nonnull %3) #7
  call void @llvm.lifetime.end.p0i8(i64 16, i8* nonnull %50) #7
  br label %54

53:                                               ; preds = %2
  tail call void @llvm.trap()
  unreachable

54:                                               ; preds = %32, %24, %18, %12, %6, %44, %2, %2, %2, %49, %41, %38
  %55 = phi i1 [ %52, %49 ], [ %43, %41 ], [ %40, %38 ], [ false, %2 ], [ false, %2 ], [ false, %2 ], [ false, %44 ], [ %37, %32 ], [ false, %24 ], [ false, %18 ], [ false, %12 ], [ false, %6 ]
  ret i1 %55
}

declare zeroext i1 @_ZNK7SkRRect8containsERK6SkRect(%class.SkRRect*, %struct.SkRect* dereferenceable(16)) local_unnamed_addr #3

declare zeroext i1 @_ZNK6SkPath26conservativelyContainsRectERK6SkRect(%class.SkPath*, %struct.SkRect* dereferenceable(16)) local_unnamed_addr #3

declare void @_ZN6SkPathC1Ev(%class.SkPath*) unnamed_addr #3

; Function Attrs: nounwind ssp uwtable
define hidden void @_ZNK7GrShape6asPathEP6SkPathb(%class.GrShape*, %class.SkPath*, i1 zeroext) local_unnamed_addr #0 align 2 {
  %4 = getelementptr inbounds %class.GrShape, %class.GrShape* %0, i64 0, i32 1
  %5 = load i8, i8* %4, align 8
  switch i8 %5, label %6 [
    i8 4, label %48
    i8 5, label %51
  ]

6:                                                ; preds = %3
  %7 = tail call dereferenceable(16) %class.SkPath* @_ZN6SkPath5resetEv(%class.SkPath* %1) #7
  %8 = getelementptr inbounds %class.SkPath, %class.SkPath* %1, i64 0, i32 4
  %9 = load i8, i8* %8, align 2
  %10 = and i8 %9, -4
  %11 = or i8 %10, 1
  store i8 %11, i8* %8, align 2
  %12 = getelementptr inbounds %class.GrShape, %class.GrShape* %0, i64 0, i32 4
  %13 = load i8, i8* %12, align 1, !range !2
  %14 = icmp eq i8 %13, 0
  br i1 %14, label %17, label %15

15:                                               ; preds = %6
  %16 = or i8 %9, 3
  store i8 %16, i8* %8, align 2
  br label %17

17:                                               ; preds = %6, %15
  %18 = load i8, i8* %4, align 8
  switch i8 %18, label %79 [
    i8 0, label %80
    i8 1, label %19
    i8 2, label %28
    i8 3, label %38
    i8 4, label %48
    i8 5, label %51
    i8 6, label %68
  ]

19:                                               ; preds = %17
  %20 = getelementptr inbounds %class.GrShape, %class.GrShape* %0, i64 0, i32 0, i32 0, i32 0, i32 0
  %21 = load float, float* %20, align 4
  %22 = getelementptr inbounds %class.GrShape, %class.GrShape* %0, i64 0, i32 0, i32 0, i32 0, i32 1
  %23 = load float, float* %22, align 4
  %24 = tail call dereferenceable(16) %class.SkPath* @_ZN6SkPath6moveToEff(%class.SkPath* %1, float %21, float %23) #7
  %25 = load float, float* %20, align 4
  %26 = load float, float* %22, align 4
  %27 = tail call dereferenceable(16) %class.SkPath* @_ZN6SkPath6lineToEff(%class.SkPath* %1, float %25, float %26) #7
  br label %80

28:                                               ; preds = %17
  %29 = getelementptr inbounds %class.GrShape, %class.GrShape* %0, i64 0, i32 0, i32 0, i32 0
  %30 = getelementptr inbounds %class.GrShape, %class.GrShape* %0, i64 0, i32 3
  %31 = load i8, i8* %30, align 2, !range !2
  %32 = xor i8 %31, 1
  %33 = zext i8 %32 to i32
  %34 = getelementptr inbounds %class.GrShape, %class.GrShape* %0, i64 0, i32 2
  %35 = load i8, i8* %34, align 1
  %36 = zext i8 %35 to i32
  %37 = tail call dereferenceable(16) %class.SkPath* @_ZN6SkPath7addRectERK6SkRect15SkPathDirectionj(%class.SkPath* %1, %struct.SkRect* dereferenceable(16) %29, i32 %33, i32 %36) #7
  br label %80

38:                                               ; preds = %17
  %39 = getelementptr inbounds %class.GrShape, %class.GrShape* %0, i64 0, i32 0, i32 0
  %40 = getelementptr inbounds %class.GrShape, %class.GrShape* %0, i64 0, i32 3
  %41 = load i8, i8* %40, align 2, !range !2
  %42 = xor i8 %41, 1
  %43 = zext i8 %42 to i32
  %44 = getelementptr inbounds %class.GrShape, %class.GrShape* %0, i64 0, i32 2
  %45 = load i8, i8* %44, align 1
  %46 = zext i8 %45 to i32
  %47 = tail call dereferenceable(16) %class.SkPath* @_ZN6SkPath8addRRectERK7SkRRect15SkPathDirectionj(%class.SkPath* %1, %class.SkRRect* dereferenceable(52) %39, i32 %43, i32 %46) #7
  br label %80

48:                                               ; preds = %3, %17
  %49 = bitcast %class.GrShape* %0 to %class.SkPath*
  %50 = tail call dereferenceable(16) %class.SkPath* @_ZN6SkPathaSERKS_(%class.SkPath* %1, %class.SkPath* dereferenceable(16) %49) #7
  br label %80

51:                                               ; preds = %3, %17
  %52 = getelementptr inbounds %class.GrShape, %class.GrShape* %0, i64 0, i32 0, i32 0, i32 0
  %53 = getelementptr inbounds %class.GrShape, %class.GrShape* %0, i64 0, i32 0, i32 0, i32 1, i64 0, i32 0
  %54 = load float, float* %53, align 8
  %55 = getelementptr inbounds %class.GrShape, %class.GrShape* %0, i64 0, i32 0, i32 0, i32 1, i64 0, i32 1
  %56 = load float, float* %55, align 4
  %57 = getelementptr inbounds %class.GrShape, %class.GrShape* %0, i64 0, i32 0, i32 0, i32 1, i64 1
  %58 = bitcast %struct.SkPoint* %57 to i8*
  %59 = load i8, i8* %58, align 8, !range !2
  %60 = icmp ne i8 %59, 0
  tail call void @_ZN10SkPathPriv17CreateDrawArcPathEP6SkPathRK6SkRectffbb(%class.SkPath* %1, %struct.SkRect* dereferenceable(16) %52, float %54, float %56, i1 zeroext %60, i1 zeroext %2) #7
  %61 = getelementptr inbounds %class.GrShape, %class.GrShape* %0, i64 0, i32 4
  %62 = load i8, i8* %61, align 1, !range !2
  %63 = icmp eq i8 %62, 0
  br i1 %63, label %80, label %64

64:                                               ; preds = %51
  %65 = getelementptr inbounds %class.SkPath, %class.SkPath* %1, i64 0, i32 4
  %66 = load i8, i8* %65, align 2
  %67 = xor i8 %66, 2
  store i8 %67, i8* %65, align 2
  br label %80

68:                                               ; preds = %17
  %69 = getelementptr inbounds %class.GrShape, %class.GrShape* %0, i64 0, i32 0, i32 0, i32 0, i32 0
  %70 = load float, float* %69, align 4
  %71 = getelementptr inbounds %class.GrShape, %class.GrShape* %0, i64 0, i32 0, i32 0, i32 0, i32 1
  %72 = load float, float* %71, align 4
  %73 = tail call dereferenceable(16) %class.SkPath* @_ZN6SkPath6moveToEff(%class.SkPath* %1, float %70, float %72) #7
  %74 = getelementptr inbounds %class.GrShape, %class.GrShape* %0, i64 0, i32 0, i32 0, i32 0, i32 2
  %75 = load float, float* %74, align 4
  %76 = getelementptr inbounds float, float* %74, i64 1
  %77 = load float, float* %76, align 4
  %78 = tail call dereferenceable(16) %class.SkPath* @_ZN6SkPath6lineToEff(%class.SkPath* %1, float %75, float %77) #7
  br label %80

79:                                               ; preds = %17
  tail call void @llvm.trap()
  unreachable

80:                                               ; preds = %51, %64, %17, %68, %48, %38, %28, %19
  ret void
}

; Function Attrs: nounwind
declare void @_ZN6SkPathD1Ev(%class.SkPath*) unnamed_addr #6

; Function Attrs: nounwind ssp uwtable
define hidden zeroext i1 @_ZNK7GrShape20conservativeContainsERK7SkPoint(%class.GrShape*, %struct.SkPoint* nocapture readonly dereferenceable(8)) local_unnamed_addr #0 align 2 {
  %3 = getelementptr inbounds %class.GrShape, %class.GrShape* %0, i64 0, i32 1
  %4 = load i8, i8* %3, align 8
  switch i8 %4, label %55 [
    i8 0, label %56
    i8 1, label %56
    i8 6, label %56
    i8 5, label %56
    i8 2, label %5
    i8 3, label %25
    i8 4, label %48
  ]

5:                                                ; preds = %2
  %6 = getelementptr inbounds %struct.SkPoint, %struct.SkPoint* %1, i64 0, i32 0
  %7 = load float, float* %6, align 4
  %8 = getelementptr inbounds %struct.SkPoint, %struct.SkPoint* %1, i64 0, i32 1
  %9 = load float, float* %8, align 4
  %10 = getelementptr inbounds %class.GrShape, %class.GrShape* %0, i64 0, i32 0, i32 0, i32 0, i32 0
  %11 = load float, float* %10, align 4
  %12 = fcmp ugt float %11, %7
  br i1 %12, label %56, label %13

13:                                               ; preds = %5
  %14 = getelementptr inbounds %class.GrShape, %class.GrShape* %0, i64 0, i32 0, i32 0, i32 0, i32 2
  %15 = load float, float* %14, align 4
  %16 = fcmp ogt float %15, %7
  br i1 %16, label %17, label %56

17:                                               ; preds = %13
  %18 = getelementptr inbounds %class.GrShape, %class.GrShape* %0, i64 0, i32 0, i32 0, i32 0, i32 1
  %19 = load float, float* %18, align 4
  %20 = fcmp ugt float %19, %9
  br i1 %20, label %56, label %21

21:                                               ; preds = %17
  %22 = getelementptr inbounds %class.GrShape, %class.GrShape* %0, i64 0, i32 0, i32 0, i32 0, i32 3
  %23 = load float, float* %22, align 4
  %24 = fcmp ogt float %23, %9
  br label %56

25:                                               ; preds = %2
  %26 = getelementptr inbounds %class.GrShape, %class.GrShape* %0, i64 0, i32 0, i32 0
  %27 = getelementptr inbounds %struct.SkPoint, %struct.SkPoint* %1, i64 0, i32 0
  %28 = load float, float* %27, align 4
  %29 = getelementptr inbounds %struct.SkPoint, %struct.SkPoint* %1, i64 0, i32 1
  %30 = load float, float* %29, align 4
  %31 = getelementptr inbounds %class.GrShape, %class.GrShape* %0, i64 0, i32 0, i32 0, i32 0, i32 0
  %32 = load float, float* %31, align 4
  %33 = fcmp ugt float %32, %28
  br i1 %33, label %56, label %34

34:                                               ; preds = %25
  %35 = getelementptr inbounds %class.GrShape, %class.GrShape* %0, i64 0, i32 0, i32 0, i32 0, i32 2
  %36 = load float, float* %35, align 4
  %37 = fcmp ogt float %36, %28
  br i1 %37, label %38, label %56

38:                                               ; preds = %34
  %39 = getelementptr inbounds %class.GrShape, %class.GrShape* %0, i64 0, i32 0, i32 0, i32 0, i32 1
  %40 = load float, float* %39, align 4
  %41 = fcmp ugt float %40, %30
  br i1 %41, label %56, label %42

42:                                               ; preds = %38
  %43 = getelementptr inbounds %class.GrShape, %class.GrShape* %0, i64 0, i32 0, i32 0, i32 0, i32 3
  %44 = load float, float* %43, align 4
  %45 = fcmp ogt float %44, %30
  br i1 %45, label %46, label %56

46:                                               ; preds = %42
  %47 = tail call zeroext i1 @_ZNK7SkRRect22checkCornerContainmentEff(%class.SkRRect* %26, float %28, float %30) #7
  br label %56

48:                                               ; preds = %2
  %49 = bitcast %class.GrShape* %0 to %class.SkPath*
  %50 = getelementptr inbounds %struct.SkPoint, %struct.SkPoint* %1, i64 0, i32 0
  %51 = load float, float* %50, align 4
  %52 = getelementptr inbounds %struct.SkPoint, %struct.SkPoint* %1, i64 0, i32 1
  %53 = load float, float* %52, align 4
  %54 = tail call zeroext i1 @_ZNK6SkPath8containsEff(%class.SkPath* %49, float %51, float %53) #7
  br label %56

55:                                               ; preds = %2
  tail call void @llvm.trap()
  unreachable

56:                                               ; preds = %46, %42, %38, %34, %25, %21, %17, %13, %5, %2, %2, %2, %2, %48
  %57 = phi i1 [ %54, %48 ], [ false, %2 ], [ false, %2 ], [ false, %2 ], [ false, %2 ], [ false, %17 ], [ false, %13 ], [ false, %5 ], [ %24, %21 ], [ false, %42 ], [ %47, %46 ], [ false, %38 ], [ false, %34 ], [ false, %25 ]
  ret i1 %57
}

declare zeroext i1 @_ZNK6SkPath8containsEff(%class.SkPath*, float, float) local_unnamed_addr #3

; Function Attrs: nounwind ssp uwtable
define hidden zeroext i1 @_ZNK7GrShape6closedEv(%class.GrShape*) local_unnamed_addr #0 align 2 {
  %2 = getelementptr inbounds %class.GrShape, %class.GrShape* %0, i64 0, i32 1
  %3 = load i8, i8* %2, align 8
  switch i8 %3, label %38 [
    i8 0, label %39
    i8 2, label %39
    i8 3, label %39
    i8 4, label %4
    i8 5, label %32
    i8 1, label %37
    i8 6, label %37
  ]

4:                                                ; preds = %1
  %5 = bitcast %class.GrShape* %0 to %class.SkPath*
  %6 = tail call i32 @_ZNK6SkPath10countVerbsEv(%class.SkPath* %5) #7
  %7 = icmp eq i32 %6, 0
  br i1 %7, label %39, label %8

8:                                                ; preds = %4
  %9 = bitcast %class.GrShape* %0 to %class.SkPathRef**
  %10 = load %class.SkPathRef*, %class.SkPathRef** %9, align 8
  %11 = getelementptr inbounds %class.SkPathRef, %class.SkPathRef* %10, i64 0, i32 4, i32 0
  %12 = load i8*, i8** %11, align 8
  %13 = icmp sgt i32 %6, 0
  br i1 %13, label %14, label %39

14:                                               ; preds = %8
  %15 = zext i32 %6 to i64
  br label %16

16:                                               ; preds = %28, %14
  %17 = phi i64 [ 0, %14 ], [ %30, %28 ]
  %18 = phi i32 [ 0, %14 ], [ %29, %28 ]
  %19 = getelementptr inbounds i8, i8* %12, i64 %17
  %20 = load i8, i8* %19, align 1
  switch i8 %20, label %28 [
    i8 0, label %21
    i8 5, label %24
  ]

21:                                               ; preds = %16
  %22 = add nsw i32 %18, 1
  %23 = icmp sgt i32 %18, 0
  br i1 %23, label %39, label %28

24:                                               ; preds = %16
  %25 = trunc i64 %17 to i32
  %26 = add nsw i32 %6, -1
  %27 = icmp eq i32 %26, %25
  br label %39

28:                                               ; preds = %21, %16
  %29 = phi i32 [ %18, %16 ], [ %22, %21 ]
  %30 = add nuw nsw i64 %17, 1
  %31 = icmp eq i64 %30, %15
  br i1 %31, label %39, label %16

32:                                               ; preds = %1
  %33 = getelementptr inbounds %class.GrShape, %class.GrShape* %0, i64 0, i32 0, i32 0, i32 1, i64 1
  %34 = bitcast %struct.SkPoint* %33 to i8*
  %35 = load i8, i8* %34, align 8, !range !2
  %36 = icmp ne i8 %35, 0
  br label %39

37:                                               ; preds = %1, %1
  br label %39

38:                                               ; preds = %1
  tail call void @llvm.trap()
  unreachable

39:                                               ; preds = %28, %21, %24, %8, %4, %1, %1, %1, %37, %32
  %40 = phi i1 [ false, %37 ], [ %36, %32 ], [ true, %1 ], [ true, %1 ], [ true, %1 ], [ false, %4 ], [ %27, %24 ], [ false, %8 ], [ false, %21 ], [ false, %28 ]
  ret i1 %40
}

; Function Attrs: nounwind ssp uwtable
define hidden zeroext i1 @_ZNK7GrShape6convexEb(%class.GrShape*, i1 zeroext) local_unnamed_addr #0 align 2 {
  %3 = getelementptr inbounds %class.GrShape, %class.GrShape* %0, i64 0, i32 1
  %4 = load i8, i8* %3, align 8
  switch i8 %4, label %21 [
    i8 0, label %22
    i8 2, label %22
    i8 3, label %22
    i8 4, label %5
    i8 5, label %12
    i8 1, label %20
    i8 6, label %20
  ]

5:                                                ; preds = %2
  %6 = bitcast %class.GrShape* %0 to %class.SkPath*
  br i1 %1, label %9, label %7

7:                                                ; preds = %5
  %8 = tail call zeroext i1 @_ZNK6SkPath19isLastContourClosedEv(%class.SkPath* %6) #7
  br i1 %8, label %9, label %22

9:                                                ; preds = %5, %7
  %10 = tail call i32 @_ZNK6SkPath12getConvexityEv(%class.SkPath* %6) #7
  %11 = icmp eq i32 %10, 0
  br label %22

12:                                               ; preds = %2
  %13 = getelementptr inbounds %class.GrShape, %class.GrShape* %0, i64 0, i32 0, i32 0, i32 1, i64 0, i32 1
  %14 = load float, float* %13, align 4
  %15 = getelementptr inbounds %class.GrShape, %class.GrShape* %0, i64 0, i32 0, i32 0, i32 1, i64 1
  %16 = bitcast %struct.SkPoint* %15 to i8*
  %17 = load i8, i8* %16, align 8, !range !2
  %18 = icmp ne i8 %17, 0
  %19 = tail call zeroext i1 @_ZN10SkPathPriv15DrawArcIsConvexEfbb(float %14, i1 zeroext %18, i1 zeroext %1) #7
  br label %22

20:                                               ; preds = %2, %2
  br label %22

21:                                               ; preds = %2
  tail call void @llvm.trap()
  unreachable

22:                                               ; preds = %7, %9, %2, %2, %2, %20, %12
  %23 = phi i1 [ false, %20 ], [ %19, %12 ], [ true, %2 ], [ true, %2 ], [ true, %2 ], [ false, %7 ], [ %11, %9 ]
  ret i1 %23
}

declare zeroext i1 @_ZNK6SkPath19isLastContourClosedEv(%class.SkPath*) local_unnamed_addr #3

declare zeroext i1 @_ZN10SkPathPriv15DrawArcIsConvexEfbb(float, i1 zeroext, i1 zeroext) local_unnamed_addr #3

; Function Attrs: nounwind ssp uwtable
define hidden { <2 x float>, <2 x float> } @_ZNK7GrShape6boundsEv(%class.GrShape* nocapture readonly) local_unnamed_addr #0 align 2 {
  %2 = getelementptr inbounds %class.GrShape, %class.GrShape* %0, i64 0, i32 1
  %3 = load i8, i8* %2, align 8
  switch i8 %3, label %81 [
    i8 0, label %82
    i8 1, label %4
    i8 2, label %7
    i8 3, label %28
    i8 4, label %34
    i8 5, label %56
    i8 6, label %62
  ]

4:                                                ; preds = %1
  %5 = bitcast %class.GrShape* %0 to <2 x float>*
  %6 = load <2 x float>, <2 x float>* %5, align 8
  br label %82

7:                                                ; preds = %1
  %8 = getelementptr inbounds %class.GrShape, %class.GrShape* %0, i64 0, i32 0, i32 0, i32 0, i32 0
  %9 = getelementptr inbounds %class.GrShape, %class.GrShape* %0, i64 0, i32 0, i32 0, i32 0, i32 2
  %10 = load float, float* %9, align 4
  %11 = load float, float* %8, align 4
  %12 = fcmp olt float %10, %11
  %13 = select i1 %12, float %10, float %11
  %14 = getelementptr inbounds %class.GrShape, %class.GrShape* %0, i64 0, i32 0, i32 0, i32 0, i32 1
  %15 = getelementptr inbounds %class.GrShape, %class.GrShape* %0, i64 0, i32 0, i32 0, i32 0, i32 3
  %16 = load float, float* %15, align 4
  %17 = load float, float* %14, align 4
  %18 = fcmp olt float %16, %17
  %19 = select i1 %18, float %16, float %17
  %20 = fcmp olt float %11, %10
  %21 = select i1 %20, float %10, float %11
  %22 = fcmp olt float %17, %16
  %23 = select i1 %22, float %16, float %17
  %24 = insertelement <2 x float> undef, float %13, i32 0
  %25 = insertelement <2 x float> %24, float %19, i32 1
  %26 = insertelement <2 x float> undef, float %21, i32 0
  %27 = insertelement <2 x float> %26, float %23, i32 1
  br label %82

28:                                               ; preds = %1
  %29 = bitcast %class.GrShape* %0 to <2 x float>*
  %30 = load <2 x float>, <2 x float>* %29, align 4
  %31 = getelementptr inbounds %class.GrShape, %class.GrShape* %0, i64 0, i32 0, i32 0, i32 0, i32 2
  %32 = bitcast float* %31 to <2 x float>*
  %33 = load <2 x float>, <2 x float>* %32, align 4
  br label %82

34:                                               ; preds = %1
  %35 = bitcast %class.GrShape* %0 to %class.SkPathRef**
  %36 = load %class.SkPathRef*, %class.SkPathRef** %35, align 8
  %37 = getelementptr inbounds %class.SkPathRef, %class.SkPathRef* %36, i64 0, i32 9
  %38 = load i8, i8* %37, align 8
  %39 = icmp eq i8 %38, 0
  br i1 %39, label %49, label %40

40:                                               ; preds = %34
  %41 = getelementptr inbounds %class.SkPathRef, %class.SkPathRef* %36, i64 0, i32 1
  %42 = getelementptr inbounds %class.SkPathRef, %class.SkPathRef* %36, i64 0, i32 3, i32 0
  %43 = load %struct.SkPoint*, %struct.SkPoint** %42, align 8
  %44 = getelementptr inbounds %class.SkPathRef, %class.SkPathRef* %36, i64 0, i32 3, i32 2
  %45 = load i32, i32* %44, align 4
  %46 = tail call zeroext i1 @_ZN6SkRect14setBoundsCheckEPK7SkPointi(%struct.SkRect* %41, %struct.SkPoint* %43, i32 %45) #7
  %47 = getelementptr inbounds %class.SkPathRef, %class.SkPathRef* %36, i64 0, i32 10
  %48 = zext i1 %46 to i8
  store i8 %48, i8* %47, align 1
  store i8 0, i8* %37, align 8
  br label %49

49:                                               ; preds = %34, %40
  %50 = getelementptr inbounds %class.SkPathRef, %class.SkPathRef* %36, i64 0, i32 1
  %51 = bitcast %struct.SkRect* %50 to <2 x float>*
  %52 = load <2 x float>, <2 x float>* %51, align 4
  %53 = getelementptr inbounds %class.SkPathRef, %class.SkPathRef* %36, i64 0, i32 1, i32 2
  %54 = bitcast float* %53 to <2 x float>*
  %55 = load <2 x float>, <2 x float>* %54, align 4
  br label %82

56:                                               ; preds = %1
  %57 = bitcast %class.GrShape* %0 to <2 x float>*
  %58 = load <2 x float>, <2 x float>* %57, align 8
  %59 = getelementptr inbounds %class.GrShape, %class.GrShape* %0, i64 0, i32 0, i32 0, i32 0, i32 2
  %60 = bitcast float* %59 to <2 x float>*
  %61 = load <2 x float>, <2 x float>* %60, align 8
  br label %82

62:                                               ; preds = %1
  %63 = bitcast %class.GrShape* %0 to <2 x float>*
  %64 = load <2 x float>, <2 x float>* %63, align 8
  %65 = getelementptr inbounds %class.GrShape, %class.GrShape* %0, i64 0, i32 0, i32 0, i32 0, i32 2
  %66 = bitcast float* %65 to <2 x float>*
  %67 = load <2 x float>, <2 x float>* %66, align 8
  %68 = extractelement <2 x float> %64, i32 0
  %69 = extractelement <2 x float> %67, i32 0
  %70 = fcmp ogt float %68, %69
  %71 = shufflevector <2 x float> %67, <2 x float> %64, <2 x i32> <i32 0, i32 3>
  %72 = shufflevector <2 x float> %64, <2 x float> %67, <2 x i32> <i32 0, i32 3>
  %73 = select i1 %70, <2 x float> %72, <2 x float> %67
  %74 = select i1 %70, <2 x float> %71, <2 x float> %64
  %75 = extractelement <2 x float> %74, i32 1
  %76 = extractelement <2 x float> %73, i32 1
  %77 = fcmp ogt float %75, %76
  br i1 %77, label %78, label %82

78:                                               ; preds = %62
  %79 = shufflevector <2 x float> %74, <2 x float> %73, <2 x i32> <i32 0, i32 3>
  %80 = shufflevector <2 x float> %73, <2 x float> %74, <2 x i32> <i32 0, i32 3>
  br label %82

81:                                               ; preds = %1
  tail call void @llvm.trap()
  unreachable

82:                                               ; preds = %78, %62, %1, %56, %49, %28, %7, %4
  %83 = phi <2 x float> [ %61, %56 ], [ %55, %49 ], [ %33, %28 ], [ %27, %7 ], [ %6, %4 ], [ <float -1.000000e+00, float -1.000000e+00>, %1 ], [ %80, %78 ], [ %73, %62 ]
  %84 = phi <2 x float> [ %58, %56 ], [ %52, %49 ], [ %30, %28 ], [ %25, %7 ], [ %6, %4 ], [ <float 1.000000e+00, float 1.000000e+00>, %1 ], [ %79, %78 ], [ %74, %62 ]
  %85 = insertvalue { <2 x float>, <2 x float> } undef, <2 x float> %84, 0
  %86 = insertvalue { <2 x float>, <2 x float> } %85, <2 x float> %83, 1
  ret { <2 x float>, <2 x float> } %86
}

; Function Attrs: nounwind ssp uwtable
define hidden i32 @_ZNK7GrShape11segmentMaskEv(%class.GrShape* nocapture readonly) local_unnamed_addr #0 align 2 {
  %2 = getelementptr inbounds %class.GrShape, %class.GrShape* %0, i64 0, i32 1
  %3 = load i8, i8* %2, align 8
  switch i8 %3, label %24 [
    i8 0, label %25
    i8 3, label %4
    i8 4, label %11
    i8 5, label %17
    i8 1, label %23
    i8 6, label %23
    i8 2, label %23
  ]

4:                                                ; preds = %1
  %5 = getelementptr inbounds %class.GrShape, %class.GrShape* %0, i64 0, i32 0, i32 0, i32 2
  %6 = load i32, i32* %5, align 4
  %7 = icmp ult i32 %6, 2
  br i1 %7, label %25, label %8

8:                                                ; preds = %4
  %9 = icmp eq i32 %6, 2
  %10 = select i1 %9, i32 4, i32 5
  br label %25

11:                                               ; preds = %1
  %12 = bitcast %class.GrShape* %0 to %class.SkPathRef**
  %13 = load %class.SkPathRef*, %class.SkPathRef** %12, align 8
  %14 = getelementptr inbounds %class.SkPathRef, %class.SkPathRef* %13, i64 0, i32 15
  %15 = load i8, i8* %14, align 2
  %16 = zext i8 %15 to i32
  br label %25

17:                                               ; preds = %1
  %18 = getelementptr inbounds %class.GrShape, %class.GrShape* %0, i64 0, i32 0, i32 0, i32 1, i64 1
  %19 = bitcast %struct.SkPoint* %18 to i8*
  %20 = load i8, i8* %19, align 8, !range !2
  %21 = icmp eq i8 %20, 0
  %22 = select i1 %21, i32 4, i32 5
  br label %25

23:                                               ; preds = %1, %1, %1
  br label %25

24:                                               ; preds = %1
  tail call void @llvm.trap()
  unreachable

25:                                               ; preds = %4, %17, %8, %1, %23, %11
  %26 = phi i32 [ 1, %23 ], [ %16, %11 ], [ 0, %1 ], [ %10, %8 ], [ %22, %17 ], [ 1, %4 ]
  ret i32 %26
}

declare dereferenceable(16) %class.SkPath* @_ZN6SkPath5resetEv(%class.SkPath*) local_unnamed_addr #3

declare dereferenceable(16) %class.SkPath* @_ZN6SkPath7addRectERK6SkRect15SkPathDirectionj(%class.SkPath*, %struct.SkRect* dereferenceable(16), i32, i32) local_unnamed_addr #3

declare dereferenceable(16) %class.SkPath* @_ZN6SkPath8addRRectERK7SkRRect15SkPathDirectionj(%class.SkPath*, %class.SkRRect* dereferenceable(52), i32, i32) local_unnamed_addr #3

declare dereferenceable(16) %class.SkPath* @_ZN6SkPathaSERKS_(%class.SkPath*, %class.SkPath* dereferenceable(16)) local_unnamed_addr #3

declare void @_ZN10SkPathPriv17CreateDrawArcPathEP6SkPathRK6SkRectffbb(%class.SkPath*, %struct.SkRect* dereferenceable(16), float, float, i1 zeroext, i1 zeroext) local_unnamed_addr #3

declare void @_ZN6SkPathC1ERKS_(%class.SkPath*, %class.SkPath* dereferenceable(16)) unnamed_addr #3

declare void @_ZNK9SkPathRef8getRRectEv(%class.SkRRect* sret, %class.SkPathRef*) local_unnamed_addr #3

declare zeroext i1 @_ZN6SkRect14setBoundsCheckEPK7SkPointi(%struct.SkRect*, %struct.SkPoint*, i32) local_unnamed_addr #3

declare void @_ZN7SkRRect7setOvalERK6SkRect(%class.SkRRect*, %struct.SkRect* dereferenceable(16)) local_unnamed_addr #3

declare zeroext i1 @_ZNK7SkRRect22checkCornerContainmentEff(%class.SkRRect*, float, float) local_unnamed_addr #3

declare i32 @_ZNK6SkPath10countVerbsEv(%class.SkPath*) local_unnamed_addr #3

declare i32 @_ZNK6SkPath12getConvexityEv(%class.SkPath*) local_unnamed_addr #3

declare dereferenceable(16) %class.SkPath* @_ZN6SkPath6moveToEff(%class.SkPath*, float, float) local_unnamed_addr #3

declare dereferenceable(16) %class.SkPath* @_ZN6SkPath6lineToEff(%class.SkPath*, float, float) local_unnamed_addr #3

; Function Attrs: argmemonly nounwind
declare void @llvm.memset.p0i8.i64(i8* nocapture writeonly, i8, i64, i1 immarg) #2

attributes #0 = { nounwind ssp uwtable "correctly-rounded-divide-sqrt-fp-math"="false" "disable-tail-calls"="false" "less-precise-fpmad"="false" "min-legal-vector-width"="0" "no-frame-pointer-elim"="false" "no-frame-pointer-elim-non-leaf" "no-infs-fp-math"="false" "no-jump-tables"="false" "no-nans-fp-math"="false" "no-signed-zeros-fp-math"="false" "no-trapping-math"="false" "null-pointer-is-valid"="true" "stack-protector-buffer-size"="4" "target-cpu"="x86-64" "target-features"="+cx8,+fxsr,+mmx,+sse,+sse2,+sse3,+x87" "unsafe-fp-math"="false" "use-soft-float"="false" }
attributes #1 = { norecurse nounwind readonly ssp uwtable "correctly-rounded-divide-sqrt-fp-math"="false" "disable-tail-calls"="false" "less-precise-fpmad"="false" "min-legal-vector-width"="0" "no-frame-pointer-elim"="false" "no-frame-pointer-elim-non-leaf" "no-infs-fp-math"="false" "no-jump-tables"="false" "no-nans-fp-math"="false" "no-signed-zeros-fp-math"="false" "no-trapping-math"="false" "null-pointer-is-valid"="true" "stack-protector-buffer-size"="4" "target-cpu"="x86-64" "target-features"="+cx8,+fxsr,+mmx,+sse,+sse2,+sse3,+x87" "unsafe-fp-math"="false" "use-soft-float"="false" }
attributes #2 = { argmemonly nounwind }
attributes #3 = { "correctly-rounded-divide-sqrt-fp-math"="false" "disable-tail-calls"="false" "less-precise-fpmad"="false" "no-frame-pointer-elim"="false" "no-frame-pointer-elim-non-leaf" "no-infs-fp-math"="false" "no-nans-fp-math"="false" "no-signed-zeros-fp-math"="false" "no-trapping-math"="false" "null-pointer-is-valid"="true" "stack-protector-buffer-size"="4" "target-cpu"="x86-64" "target-features"="+cx8,+fxsr,+mmx,+sse,+sse2,+sse3,+x87" "unsafe-fp-math"="false" "use-soft-float"="false" }
attributes #4 = { nofree nounwind "correctly-rounded-divide-sqrt-fp-math"="false" "disable-tail-calls"="false" "less-precise-fpmad"="false" "no-frame-pointer-elim"="false" "no-frame-pointer-elim-non-leaf" "no-infs-fp-math"="false" "no-nans-fp-math"="false" "no-signed-zeros-fp-math"="false" "no-trapping-math"="false" "null-pointer-is-valid"="true" "stack-protector-buffer-size"="4" "target-cpu"="x86-64" "target-features"="+cx8,+fxsr,+mmx,+sse,+sse2,+sse3,+x87" "unsafe-fp-math"="false" "use-soft-float"="false" }
attributes #5 = { cold noreturn nounwind }
attributes #6 = { nounwind "correctly-rounded-divide-sqrt-fp-math"="false" "disable-tail-calls"="false" "less-precise-fpmad"="false" "no-frame-pointer-elim"="false" "no-frame-pointer-elim-non-leaf" "no-infs-fp-math"="false" "no-nans-fp-math"="false" "no-signed-zeros-fp-math"="false" "no-trapping-math"="false" "null-pointer-is-valid"="true" "stack-protector-buffer-size"="4" "target-cpu"="x86-64" "target-features"="+cx8,+fxsr,+mmx,+sse,+sse2,+sse3,+x87" "unsafe-fp-math"="false" "use-soft-float"="false" }
attributes #7 = { nounwind }

!llvm.module.flags = !{!0, !1}

!0 = !{i32 1, !"wchar_size", i32 4}
!1 = !{i32 7, !"PIC Level", i32 2}
!2 = !{i8 0, i8 2}
!3 = !{!4}
!4 = distinct !{!4, !5, !"_ZN7SkRRect8MakeOvalERK6SkRect: argument 0"}
!5 = distinct !{!5, !"_ZN7SkRRect8MakeOvalERK6SkRect"}
!6 = !{!7}
!7 = distinct !{!7, !8, !"_ZN7SkRRect8MakeOvalERK6SkRect: argument 0"}
!8 = distinct !{!8, !"_ZN7SkRRect8MakeOvalERK6SkRect"}
