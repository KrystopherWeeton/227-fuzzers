; ModuleID = '../../third_party/swiftshader/src/OpenGL/compiler/PoolAlloc.cpp'
source_filename = "../../third_party/swiftshader/src/OpenGL/compiler/PoolAlloc.cpp"
target datalayout = "e-m:e-i64:64-f80:128-n8:16:32:64-S128"
target triple = "x86_64-unknown-linux-gnu"

%class.TPoolAllocator = type { i64, i64, i64, i64, i64, %"struct.TPoolAllocator::tHeader"*, %"struct.TPoolAllocator::tHeader"*, %"class.std::__1::vector", i32, i64 }
%"struct.TPoolAllocator::tHeader" = type { %"struct.TPoolAllocator::tHeader"*, i64 }
%"class.std::__1::vector" = type { %"class.std::__1::__vector_base" }
%"class.std::__1::__vector_base" = type { %"struct.TPoolAllocator::tAllocState"*, %"struct.TPoolAllocator::tAllocState"*, %"class.std::__1::__compressed_pair" }
%"struct.TPoolAllocator::tAllocState" = type { i64, %"struct.TPoolAllocator::tHeader"* }
%"class.std::__1::__compressed_pair" = type { %"struct.std::__1::__compressed_pair_elem" }
%"struct.std::__1::__compressed_pair_elem" = type { %"struct.TPoolAllocator::tAllocState"* }
%class.TAllocation = type { i64, i8*, %class.TAllocation* }
%"struct.std::__1::__split_buffer" = type { %"struct.TPoolAllocator::tAllocState"*, %"struct.TPoolAllocator::tAllocState"*, %"struct.TPoolAllocator::tAllocState"*, %"class.std::__1::__compressed_pair.1" }
%"class.std::__1::__compressed_pair.1" = type { %"struct.std::__1::__compressed_pair_elem", %"struct.std::__1::__compressed_pair_elem.2" }
%"struct.std::__1::__compressed_pair_elem.2" = type { %"class.std::__1::allocator"* }
%"class.std::__1::allocator" = type { i8 }
%"class.std::__1::__vector_base_common" = type { i8 }

$_ZNSt3__16vectorIN14TPoolAllocator11tAllocStateENS_9allocatorIS2_EEE21__push_back_slow_pathIRKS2_EEvOT_ = comdat any

$_ZNSt3__114__split_bufferIN14TPoolAllocator11tAllocStateERNS_9allocatorIS2_EEEC2EmmS5_ = comdat any

@PoolIndex = hidden local_unnamed_addr global i32 -1, align 4
@_ZN11TAllocation18guardBlockBeginValE = hidden local_unnamed_addr constant i8 -5, align 1
@_ZN11TAllocation16guardBlockEndValE = hidden local_unnamed_addr constant i8 -2, align 1
@_ZN11TAllocation12userDataFillE = hidden local_unnamed_addr constant i8 -51, align 1
@_ZN11TAllocation14guardBlockSizeE = hidden local_unnamed_addr constant i64 0, align 8

@_ZN14TPoolAllocatorC1Eii = hidden unnamed_addr alias void (%class.TPoolAllocator*, i32, i32), void (%class.TPoolAllocator*, i32, i32)* @_ZN14TPoolAllocatorC2Eii
@_ZN14TPoolAllocatorD1Ev = hidden unnamed_addr alias void (%class.TPoolAllocator*), void (%class.TPoolAllocator*)* @_ZN14TPoolAllocatorD2Ev

; Function Attrs: nounwind optsize ssp uwtable
define hidden zeroext i1 @_Z19InitializePoolIndexv() local_unnamed_addr #0 {
  %1 = tail call i32 @_Z16OS_AllocTLSIndexv() #12
  store i32 %1, i32* @PoolIndex, align 4
  %2 = icmp ne i32 %1, -1
  ret i1 %2
}

; Function Attrs: optsize
declare i32 @_Z16OS_AllocTLSIndexv() local_unnamed_addr #1

; Function Attrs: nounwind optsize ssp uwtable
define hidden void @_Z13FreePoolIndexv() local_unnamed_addr #0 {
  %1 = load i32, i32* @PoolIndex, align 4
  %2 = tail call zeroext i1 @_Z15OS_FreeTLSIndexj(i32 %1) #12
  store i32 -1, i32* @PoolIndex, align 4
  ret void
}

; Function Attrs: optsize
declare zeroext i1 @_Z15OS_FreeTLSIndexj(i32) local_unnamed_addr #1

; Function Attrs: nounwind optsize ssp uwtable
define hidden %class.TPoolAllocator* @_Z22GetGlobalPoolAllocatorv() local_unnamed_addr #0 {
  %1 = load i32, i32* @PoolIndex, align 4
  %2 = tail call i8* @pthread_getspecific(i32 %1) #12
  %3 = bitcast i8* %2 to %class.TPoolAllocator*
  ret %class.TPoolAllocator* %3
}

; Function Attrs: nounwind optsize ssp uwtable
define hidden void @_Z22SetGlobalPoolAllocatorP14TPoolAllocator(%class.TPoolAllocator*) local_unnamed_addr #0 {
  %2 = load i32, i32* @PoolIndex, align 4
  %3 = bitcast %class.TPoolAllocator* %0 to i8*
  %4 = tail call zeroext i1 @_Z14OS_SetTLSValuejPv(i32 %2, i8* %3) #12
  ret void
}

; Function Attrs: optsize
declare zeroext i1 @_Z14OS_SetTLSValuejPv(i32, i8*) local_unnamed_addr #1

; Function Attrs: nounwind optsize ssp uwtable
define hidden void @_ZN14TPoolAllocatorC2Eii(%class.TPoolAllocator* nocapture, i32, i32) unnamed_addr #0 align 2 {
  %4 = getelementptr inbounds %class.TPoolAllocator, %class.TPoolAllocator* %0, i64 0, i32 0
  %5 = getelementptr inbounds %class.TPoolAllocator, %class.TPoolAllocator* %0, i64 0, i32 2
  %6 = sext i32 %1 to i64
  store i64 %6, i64* %5, align 8
  %7 = getelementptr inbounds %class.TPoolAllocator, %class.TPoolAllocator* %0, i64 0, i32 5
  %8 = getelementptr inbounds %class.TPoolAllocator, %class.TPoolAllocator* %0, i64 0, i32 9
  store i64 0, i64* %8, align 8
  %9 = and i32 %2, -8
  %10 = icmp eq i32 %9, 0
  %11 = select i1 %10, i32 8, i32 %9
  %12 = sext i32 %11 to i64
  %13 = bitcast %"struct.TPoolAllocator::tHeader"** %7 to i8*
  call void @llvm.memset.p0i8.i64(i8* align 8 %13, i8 0, i64 44, i1 false)
  store i64 %12, i64* %4, align 8
  br label %14

14:                                               ; preds = %14, %3
  %15 = phi i64 [ 1, %3 ], [ %17, %14 ]
  %16 = icmp ult i64 %15, %12
  %17 = shl i64 %15, 1
  br i1 %16, label %14, label %18

18:                                               ; preds = %14
  store i64 %15, i64* %4, align 8
  %19 = add i64 %15, -1
  %20 = getelementptr inbounds %class.TPoolAllocator, %class.TPoolAllocator* %0, i64 0, i32 1
  store i64 %19, i64* %20, align 8
  %21 = icmp ult i32 %1, 4096
  br i1 %21, label %22, label %23

22:                                               ; preds = %18
  store i64 4096, i64* %5, align 8
  br label %23

23:                                               ; preds = %22, %18
  %24 = phi i64 [ 4096, %22 ], [ %6, %18 ]
  %25 = getelementptr inbounds %class.TPoolAllocator, %class.TPoolAllocator* %0, i64 0, i32 4
  store i64 %24, i64* %25, align 8
  %26 = getelementptr inbounds %class.TPoolAllocator, %class.TPoolAllocator* %0, i64 0, i32 3
  %27 = add i64 %15, 15
  %28 = sub i64 0, %15
  %29 = and i64 %27, %28
  store i64 %29, i64* %26, align 8
  ret void
}

; Function Attrs: argmemonly nounwind
declare void @llvm.lifetime.start.p0i8(i64 immarg, i8* nocapture) #2

; Function Attrs: argmemonly nounwind
declare void @llvm.lifetime.end.p0i8(i64 immarg, i8* nocapture) #2

; Function Attrs: nounwind optsize ssp uwtable
define hidden void @_ZN14TPoolAllocatorD2Ev(%class.TPoolAllocator* nocapture) unnamed_addr #0 align 2 {
  %2 = getelementptr inbounds %class.TPoolAllocator, %class.TPoolAllocator* %0, i64 0, i32 6
  %3 = load %"struct.TPoolAllocator::tHeader"*, %"struct.TPoolAllocator::tHeader"** %2, align 8
  %4 = icmp eq %"struct.TPoolAllocator::tHeader"* %3, null
  br i1 %4, label %8, label %5

5:                                                ; preds = %1
  %6 = bitcast %"struct.TPoolAllocator::tHeader"* %3 to i8*
  %7 = bitcast %"struct.TPoolAllocator::tHeader"** %2 to i64*
  br label %14

8:                                                ; preds = %21, %1
  %9 = getelementptr inbounds %class.TPoolAllocator, %class.TPoolAllocator* %0, i64 0, i32 5
  %10 = load %"struct.TPoolAllocator::tHeader"*, %"struct.TPoolAllocator::tHeader"** %9, align 8
  %11 = icmp eq %"struct.TPoolAllocator::tHeader"* %10, null
  br i1 %11, label %32, label %12

12:                                               ; preds = %8
  %13 = bitcast %"struct.TPoolAllocator::tHeader"** %9 to i64*
  br label %25

14:                                               ; preds = %5, %21
  %15 = phi i8* [ %6, %5 ], [ %24, %21 ]
  %16 = phi %"struct.TPoolAllocator::tHeader"* [ %3, %5 ], [ %22, %21 ]
  %17 = bitcast %"struct.TPoolAllocator::tHeader"* %16 to i64*
  %18 = load i64, i64* %17, align 8
  %19 = icmp eq i8* %15, null
  br i1 %19, label %21, label %20

20:                                               ; preds = %14
  tail call void @_ZdaPv(i8* nonnull %15) #13
  br label %21

21:                                               ; preds = %20, %14
  store i64 %18, i64* %7, align 8
  %22 = inttoptr i64 %18 to %"struct.TPoolAllocator::tHeader"*
  %23 = icmp eq i64 %18, 0
  %24 = inttoptr i64 %18 to i8*
  br i1 %23, label %8, label %14

25:                                               ; preds = %12, %25
  %26 = phi %"struct.TPoolAllocator::tHeader"* [ %10, %12 ], [ %30, %25 ]
  %27 = bitcast %"struct.TPoolAllocator::tHeader"* %26 to i64*
  %28 = load i64, i64* %27, align 8
  %29 = bitcast %"struct.TPoolAllocator::tHeader"* %26 to i8*
  tail call void @_ZdaPv(i8* %29) #13
  store i64 %28, i64* %13, align 8
  %30 = inttoptr i64 %28 to %"struct.TPoolAllocator::tHeader"*
  %31 = icmp eq i64 %28, 0
  br i1 %31, label %32, label %25

32:                                               ; preds = %25, %8
  %33 = getelementptr inbounds %class.TPoolAllocator, %class.TPoolAllocator* %0, i64 0, i32 7, i32 0, i32 0
  %34 = load %"struct.TPoolAllocator::tAllocState"*, %"struct.TPoolAllocator::tAllocState"** %33, align 8
  %35 = icmp eq %"struct.TPoolAllocator::tAllocState"* %34, null
  br i1 %35, label %41, label %36

36:                                               ; preds = %32
  %37 = ptrtoint %"struct.TPoolAllocator::tAllocState"* %34 to i64
  %38 = getelementptr inbounds %class.TPoolAllocator, %class.TPoolAllocator* %0, i64 0, i32 7, i32 0, i32 1
  %39 = bitcast %"struct.TPoolAllocator::tAllocState"** %38 to i64*
  store i64 %37, i64* %39, align 8
  %40 = bitcast %"struct.TPoolAllocator::tAllocState"* %34 to i8*
  tail call void @_ZdlPv(i8* %40) #13
  br label %41

41:                                               ; preds = %32, %36
  ret void
}

; Function Attrs: nobuiltin nounwind optsize
declare void @_ZdaPv(i8*) local_unnamed_addr #3

; Function Attrs: norecurse nounwind optsize readnone ssp uwtable
define hidden void @_ZNK11TAllocation15checkGuardBlockEPhhPKc(%class.TAllocation* nocapture, i8* nocapture, i8 zeroext, i8* nocapture) local_unnamed_addr #4 align 2 {
  ret void
}

; Function Attrs: nounwind optsize ssp uwtable
define hidden void @_ZN14TPoolAllocator4pushEv(%class.TPoolAllocator*) local_unnamed_addr #0 align 2 {
  %2 = alloca %"struct.TPoolAllocator::tAllocState", align 8
  %3 = bitcast %"struct.TPoolAllocator::tAllocState"* %2 to i8*
  call void @llvm.lifetime.start.p0i8(i64 16, i8* nonnull %3) #14
  %4 = getelementptr inbounds %"struct.TPoolAllocator::tAllocState", %"struct.TPoolAllocator::tAllocState"* %2, i64 0, i32 0
  %5 = getelementptr inbounds %"struct.TPoolAllocator::tAllocState", %"struct.TPoolAllocator::tAllocState"* %2, i64 0, i32 1
  %6 = getelementptr inbounds %class.TPoolAllocator, %class.TPoolAllocator* %0, i64 0, i32 4
  %7 = load i64, i64* %6, align 8
  store i64 %7, i64* %4, align 8
  %8 = getelementptr inbounds %class.TPoolAllocator, %class.TPoolAllocator* %0, i64 0, i32 6
  %9 = bitcast %"struct.TPoolAllocator::tHeader"** %8 to i64*
  %10 = load i64, i64* %9, align 8
  %11 = bitcast %"struct.TPoolAllocator::tHeader"** %5 to i64*
  store i64 %10, i64* %11, align 8
  %12 = getelementptr inbounds %class.TPoolAllocator, %class.TPoolAllocator* %0, i64 0, i32 7, i32 0, i32 1
  %13 = load %"struct.TPoolAllocator::tAllocState"*, %"struct.TPoolAllocator::tAllocState"** %12, align 8
  %14 = getelementptr inbounds %class.TPoolAllocator, %class.TPoolAllocator* %0, i64 0, i32 7, i32 0, i32 2, i32 0, i32 0
  %15 = load %"struct.TPoolAllocator::tAllocState"*, %"struct.TPoolAllocator::tAllocState"** %14, align 8
  %16 = icmp eq %"struct.TPoolAllocator::tAllocState"* %13, %15
  br i1 %16, label %22, label %17

17:                                               ; preds = %1
  %18 = bitcast %"struct.TPoolAllocator::tAllocState"* %13 to i8*
  call void @llvm.memcpy.p0i8.p0i8.i64(i8* align 8 %18, i8* nonnull align 8 %3, i64 16, i1 false) #14
  %19 = getelementptr inbounds %"struct.TPoolAllocator::tAllocState", %"struct.TPoolAllocator::tAllocState"* %13, i64 1
  %20 = ptrtoint %"struct.TPoolAllocator::tAllocState"* %19 to i64
  %21 = bitcast %"struct.TPoolAllocator::tAllocState"** %12 to i64*
  store i64 %20, i64* %21, align 8
  br label %24

22:                                               ; preds = %1
  %23 = getelementptr inbounds %class.TPoolAllocator, %class.TPoolAllocator* %0, i64 0, i32 7
  call void @_ZNSt3__16vectorIN14TPoolAllocator11tAllocStateENS_9allocatorIS2_EEE21__push_back_slow_pathIRKS2_EEvOT_(%"class.std::__1::vector"* %23, %"struct.TPoolAllocator::tAllocState"* nonnull dereferenceable(16) %2) #12
  br label %24

24:                                               ; preds = %17, %22
  %25 = getelementptr inbounds %class.TPoolAllocator, %class.TPoolAllocator* %0, i64 0, i32 2
  %26 = load i64, i64* %25, align 8
  store i64 %26, i64* %6, align 8
  call void @llvm.lifetime.end.p0i8(i64 16, i8* nonnull %3) #14
  ret void
}

; Function Attrs: nounwind optsize ssp uwtable
define hidden void @_ZN14TPoolAllocator3popEv(%class.TPoolAllocator* nocapture) local_unnamed_addr #0 align 2 {
  %2 = getelementptr inbounds %class.TPoolAllocator, %class.TPoolAllocator* %0, i64 0, i32 7
  %3 = getelementptr inbounds %class.TPoolAllocator, %class.TPoolAllocator* %0, i64 0, i32 7, i32 0, i32 1
  %4 = bitcast %"struct.TPoolAllocator::tAllocState"** %3 to i64*
  %5 = load i64, i64* %4, align 8
  %6 = bitcast %"class.std::__1::vector"* %2 to i64*
  %7 = load i64, i64* %6, align 8
  %8 = icmp eq i64 %5, %7
  %9 = inttoptr i64 %5 to %"struct.TPoolAllocator::tAllocState"*
  br i1 %8, label %45, label %10

10:                                               ; preds = %1
  %11 = getelementptr inbounds %"struct.TPoolAllocator::tAllocState", %"struct.TPoolAllocator::tAllocState"* %9, i64 -1, i32 1
  %12 = load %"struct.TPoolAllocator::tHeader"*, %"struct.TPoolAllocator::tHeader"** %11, align 8
  %13 = getelementptr inbounds %"struct.TPoolAllocator::tAllocState", %"struct.TPoolAllocator::tAllocState"* %9, i64 -1, i32 0
  %14 = load i64, i64* %13, align 8
  %15 = getelementptr inbounds %class.TPoolAllocator, %class.TPoolAllocator* %0, i64 0, i32 4
  store i64 %14, i64* %15, align 8
  %16 = getelementptr inbounds %class.TPoolAllocator, %class.TPoolAllocator* %0, i64 0, i32 6
  %17 = load %"struct.TPoolAllocator::tHeader"*, %"struct.TPoolAllocator::tHeader"** %16, align 8
  %18 = icmp eq %"struct.TPoolAllocator::tHeader"* %17, %12
  br i1 %18, label %42, label %19

19:                                               ; preds = %10
  %20 = getelementptr inbounds %class.TPoolAllocator, %class.TPoolAllocator* %0, i64 0, i32 5
  %21 = bitcast %"struct.TPoolAllocator::tHeader"** %20 to i64*
  %22 = bitcast %"struct.TPoolAllocator::tHeader"** %16 to i64*
  br label %23

23:                                               ; preds = %19, %37
  %24 = phi %"struct.TPoolAllocator::tHeader"* [ %17, %19 ], [ %38, %37 ]
  %25 = bitcast %"struct.TPoolAllocator::tHeader"* %24 to i64*
  %26 = load i64, i64* %25, align 8
  %27 = getelementptr inbounds %"struct.TPoolAllocator::tHeader", %"struct.TPoolAllocator::tHeader"* %24, i64 0, i32 1
  %28 = load i64, i64* %27, align 8
  %29 = icmp ugt i64 %28, 1
  br i1 %29, label %30, label %34

30:                                               ; preds = %23
  %31 = icmp eq %"struct.TPoolAllocator::tHeader"* %24, null
  br i1 %31, label %37, label %32

32:                                               ; preds = %30
  %33 = bitcast %"struct.TPoolAllocator::tHeader"* %24 to i8*
  tail call void @_ZdaPv(i8* %33) #13
  br label %37

34:                                               ; preds = %23
  %35 = load i64, i64* %21, align 8
  store i64 %35, i64* %25, align 8
  %36 = load i64, i64* %22, align 8
  store i64 %36, i64* %21, align 8
  br label %37

37:                                               ; preds = %30, %32, %34
  store i64 %26, i64* %22, align 8
  %38 = inttoptr i64 %26 to %"struct.TPoolAllocator::tHeader"*
  %39 = icmp eq %"struct.TPoolAllocator::tHeader"* %12, %38
  br i1 %39, label %40, label %23

40:                                               ; preds = %37
  %41 = load %"struct.TPoolAllocator::tAllocState"*, %"struct.TPoolAllocator::tAllocState"** %3, align 8
  br label %42

42:                                               ; preds = %40, %10
  %43 = phi %"struct.TPoolAllocator::tAllocState"* [ %41, %40 ], [ %9, %10 ]
  %44 = getelementptr inbounds %"struct.TPoolAllocator::tAllocState", %"struct.TPoolAllocator::tAllocState"* %43, i64 -1
  store %"struct.TPoolAllocator::tAllocState"* %44, %"struct.TPoolAllocator::tAllocState"** %3, align 8
  br label %45

45:                                               ; preds = %1, %42
  ret void
}

; Function Attrs: nounwind optsize ssp uwtable
define hidden void @_ZN14TPoolAllocator6popAllEv(%class.TPoolAllocator* nocapture) local_unnamed_addr #0 align 2 {
  %2 = getelementptr inbounds %class.TPoolAllocator, %class.TPoolAllocator* %0, i64 0, i32 7
  %3 = getelementptr inbounds %class.TPoolAllocator, %class.TPoolAllocator* %0, i64 0, i32 7, i32 0, i32 1
  %4 = bitcast %"struct.TPoolAllocator::tAllocState"** %3 to i64*
  %5 = load i64, i64* %4, align 8
  %6 = bitcast %"class.std::__1::vector"* %2 to i64*
  %7 = load i64, i64* %6, align 8
  %8 = icmp eq i64 %5, %7
  br i1 %8, label %13, label %9

9:                                                ; preds = %1, %9
  tail call void @_ZN14TPoolAllocator3popEv(%class.TPoolAllocator* %0) #15
  %10 = load i64, i64* %4, align 8
  %11 = load i64, i64* %6, align 8
  %12 = icmp eq i64 %10, %11
  br i1 %12, label %13, label %9

13:                                               ; preds = %9, %1
  ret void
}

; Function Attrs: nofree nounwind optsize ssp uwtable
define hidden i8* @_ZN14TPoolAllocator8allocateEm(%class.TPoolAllocator* nocapture, i64) local_unnamed_addr #5 align 2 {
  %3 = getelementptr inbounds %class.TPoolAllocator, %class.TPoolAllocator* %0, i64 0, i32 8
  %4 = load i32, i32* %3, align 8
  %5 = add nsw i32 %4, 1
  store i32 %5, i32* %3, align 8
  %6 = getelementptr inbounds %class.TPoolAllocator, %class.TPoolAllocator* %0, i64 0, i32 9
  %7 = load i64, i64* %6, align 8
  %8 = add i64 %7, %1
  store i64 %8, i64* %6, align 8
  %9 = getelementptr inbounds %class.TPoolAllocator, %class.TPoolAllocator* %0, i64 0, i32 2
  %10 = load i64, i64* %9, align 8
  %11 = getelementptr inbounds %class.TPoolAllocator, %class.TPoolAllocator* %0, i64 0, i32 4
  %12 = load i64, i64* %11, align 8
  %13 = sub i64 %10, %12
  %14 = icmp ult i64 %13, %1
  br i1 %14, label %26, label %15

15:                                               ; preds = %2
  %16 = getelementptr inbounds %class.TPoolAllocator, %class.TPoolAllocator* %0, i64 0, i32 6
  %17 = bitcast %"struct.TPoolAllocator::tHeader"** %16 to i8**
  %18 = load i8*, i8** %17, align 8
  %19 = getelementptr inbounds i8, i8* %18, i64 %12
  %20 = add i64 %12, %1
  %21 = getelementptr inbounds %class.TPoolAllocator, %class.TPoolAllocator* %0, i64 0, i32 1
  %22 = load i64, i64* %21, align 8
  %23 = add i64 %22, %20
  %24 = xor i64 %22, -1
  %25 = and i64 %23, %24
  store i64 %25, i64* %11, align 8
  br label %77

26:                                               ; preds = %2
  %27 = getelementptr inbounds %class.TPoolAllocator, %class.TPoolAllocator* %0, i64 0, i32 3
  %28 = load i64, i64* %27, align 8
  %29 = sub i64 %10, %28
  %30 = icmp ult i64 %29, %1
  br i1 %30, label %31, label %49

31:                                               ; preds = %26
  %32 = add i64 %28, %1
  %33 = icmp ult i64 %32, %1
  br i1 %33, label %77, label %34

34:                                               ; preds = %31
  %35 = tail call i8* @_Znam(i64 %32) #13
  %36 = getelementptr inbounds %class.TPoolAllocator, %class.TPoolAllocator* %0, i64 0, i32 6
  %37 = bitcast %"struct.TPoolAllocator::tHeader"** %36 to i64*
  %38 = load i64, i64* %37, align 8
  %39 = add i64 %10, -1
  %40 = add i64 %39, %32
  %41 = udiv i64 %40, %10
  %42 = bitcast i8* %35 to i64*
  store i64 %38, i64* %42, align 8
  %43 = getelementptr inbounds i8, i8* %35, i64 8
  %44 = bitcast i8* %43 to i64*
  store i64 %41, i64* %44, align 8
  %45 = bitcast %"struct.TPoolAllocator::tHeader"** %36 to i8**
  store i8* %35, i8** %45, align 8
  store i64 %10, i64* %11, align 8
  %46 = ptrtoint i8* %35 to i64
  %47 = add i64 %28, %46
  %48 = inttoptr i64 %47 to i8*
  br label %77

49:                                               ; preds = %26
  %50 = getelementptr inbounds %class.TPoolAllocator, %class.TPoolAllocator* %0, i64 0, i32 5
  %51 = load %"struct.TPoolAllocator::tHeader"*, %"struct.TPoolAllocator::tHeader"** %50, align 8
  %52 = icmp eq %"struct.TPoolAllocator::tHeader"* %51, null
  br i1 %52, label %57, label %53

53:                                               ; preds = %49
  %54 = bitcast %"struct.TPoolAllocator::tHeader"* %51 to i64*
  %55 = load i64, i64* %54, align 8
  %56 = bitcast %"struct.TPoolAllocator::tHeader"** %50 to i64*
  store i64 %55, i64* %56, align 8
  br label %61

57:                                               ; preds = %49
  %58 = tail call i8* @_Znam(i64 %10) #13
  %59 = bitcast i8* %58 to %"struct.TPoolAllocator::tHeader"*
  %60 = bitcast i8* %58 to i64*
  br label %61

61:                                               ; preds = %57, %53
  %62 = phi i64* [ %60, %57 ], [ %54, %53 ]
  %63 = phi %"struct.TPoolAllocator::tHeader"* [ %59, %57 ], [ %51, %53 ]
  %64 = bitcast %"struct.TPoolAllocator::tHeader"* %63 to i8*
  %65 = getelementptr inbounds %class.TPoolAllocator, %class.TPoolAllocator* %0, i64 0, i32 6
  %66 = bitcast %"struct.TPoolAllocator::tHeader"** %65 to i64*
  %67 = load i64, i64* %66, align 8
  store i64 %67, i64* %62, align 8
  %68 = getelementptr inbounds %"struct.TPoolAllocator::tHeader", %"struct.TPoolAllocator::tHeader"* %63, i64 0, i32 1
  store i64 1, i64* %68, align 8
  store %"struct.TPoolAllocator::tHeader"* %63, %"struct.TPoolAllocator::tHeader"** %65, align 8
  %69 = load i64, i64* %27, align 8
  %70 = getelementptr inbounds i8, i8* %64, i64 %69
  %71 = add i64 %69, %1
  %72 = getelementptr inbounds %class.TPoolAllocator, %class.TPoolAllocator* %0, i64 0, i32 1
  %73 = load i64, i64* %72, align 8
  %74 = add i64 %71, %73
  %75 = xor i64 %73, -1
  %76 = and i64 %74, %75
  store i64 %76, i64* %11, align 8
  br label %77

77:                                               ; preds = %34, %31, %61, %15
  %78 = phi i8* [ %19, %15 ], [ %70, %61 ], [ %48, %34 ], [ null, %31 ]
  ret i8* %78
}

; Function Attrs: nobuiltin nofree optsize
declare noalias nonnull i8* @_Znam(i64) local_unnamed_addr #6

; Function Attrs: norecurse nounwind optsize readonly ssp uwtable
define hidden void @_ZNK11TAllocation14checkAllocListEv(%class.TAllocation* nocapture) local_unnamed_addr #7 align 2 {
  %2 = icmp eq %class.TAllocation* %0, null
  br i1 %2, label %3, label %4

3:                                                ; preds = %4, %1
  ret void

4:                                                ; preds = %1, %4
  %5 = phi %class.TAllocation* [ %7, %4 ], [ %0, %1 ]
  %6 = getelementptr inbounds %class.TAllocation, %class.TAllocation* %5, i64 0, i32 2
  %7 = load %class.TAllocation*, %class.TAllocation** %6, align 8
  %8 = icmp eq %class.TAllocation* %7, null
  br i1 %8, label %3, label %4
}

; Function Attrs: nounwind optsize
declare i8* @pthread_getspecific(i32) local_unnamed_addr #8

; Function Attrs: nobuiltin nounwind optsize
declare void @_ZdlPv(i8*) local_unnamed_addr #3

; Function Attrs: inlinehint nounwind optsize ssp uwtable
define linkonce_odr hidden void @_ZNSt3__16vectorIN14TPoolAllocator11tAllocStateENS_9allocatorIS2_EEE21__push_back_slow_pathIRKS2_EEvOT_(%"class.std::__1::vector"*, %"struct.TPoolAllocator::tAllocState"* dereferenceable(16)) local_unnamed_addr #9 comdat align 2 {
  %3 = alloca %"struct.std::__1::__split_buffer", align 8
  %4 = getelementptr inbounds %"class.std::__1::vector", %"class.std::__1::vector"* %0, i64 0, i32 0, i32 2
  %5 = bitcast %"class.std::__1::__compressed_pair"* %4 to %"class.std::__1::allocator"*
  %6 = bitcast %"struct.std::__1::__split_buffer"* %3 to i8*
  call void @llvm.lifetime.start.p0i8(i64 40, i8* nonnull %6) #14
  %7 = getelementptr inbounds %"struct.std::__1::__split_buffer", %"struct.std::__1::__split_buffer"* %3, i64 0, i32 1
  %8 = getelementptr inbounds %"struct.std::__1::__split_buffer", %"struct.std::__1::__split_buffer"* %3, i64 0, i32 2
  %9 = getelementptr inbounds %"struct.std::__1::__split_buffer", %"struct.std::__1::__split_buffer"* %3, i64 0, i32 3, i32 0, i32 0
  %10 = getelementptr inbounds %"class.std::__1::vector", %"class.std::__1::vector"* %0, i64 0, i32 0, i32 1
  %11 = bitcast %"struct.TPoolAllocator::tAllocState"** %10 to i64*
  %12 = bitcast %"struct.std::__1::__split_buffer"* %3 to i8*
  call void @llvm.memset.p0i8.i64(i8* nonnull align 8 %12, i8 -86, i64 40, i1 false)
  %13 = load i64, i64* %11, align 8
  %14 = bitcast %"class.std::__1::vector"* %0 to i64*
  %15 = load i64, i64* %14, align 8
  %16 = sub i64 %13, %15
  %17 = ashr exact i64 %16, 4
  %18 = add nsw i64 %17, 1
  %19 = icmp ugt i64 %18, 1152921504606846975
  br i1 %19, label %20, label %22

20:                                               ; preds = %2
  %21 = bitcast %"class.std::__1::vector"* %0 to %"class.std::__1::__vector_base_common"*
  tail call void @_ZNKSt3__120__vector_base_commonILb1EE20__throw_length_errorEv(%"class.std::__1::__vector_base_common"* %21) #16
  unreachable

22:                                               ; preds = %2
  %23 = getelementptr inbounds %"class.std::__1::vector", %"class.std::__1::vector"* %0, i64 0, i32 0, i32 2, i32 0, i32 0
  %24 = bitcast %"struct.TPoolAllocator::tAllocState"** %23 to i64*
  %25 = load i64, i64* %24, align 8
  %26 = sub i64 %25, %15
  %27 = ashr exact i64 %26, 4
  %28 = icmp ult i64 %27, 576460752303423487
  br i1 %28, label %29, label %33

29:                                               ; preds = %22
  %30 = ashr exact i64 %26, 3
  %31 = icmp ult i64 %30, %18
  %32 = select i1 %31, i64 %18, i64 %30
  br label %33

33:                                               ; preds = %22, %29
  %34 = phi i64 [ %32, %29 ], [ 1152921504606846975, %22 ]
  call void @_ZNSt3__114__split_bufferIN14TPoolAllocator11tAllocStateERNS_9allocatorIS2_EEEC2EmmS5_(%"struct.std::__1::__split_buffer"* nonnull %3, i64 %34, i64 %17, %"class.std::__1::allocator"* dereferenceable(1) %5) #15
  %35 = bitcast %"struct.TPoolAllocator::tAllocState"** %8 to i8**
  %36 = load i8*, i8** %35, align 8
  %37 = bitcast %"struct.TPoolAllocator::tAllocState"* %1 to i8*
  call void @llvm.memcpy.p0i8.p0i8.i64(i8* align 8 %36, i8* align 8 %37, i64 16, i1 false) #14
  %38 = load %"struct.TPoolAllocator::tAllocState"*, %"struct.TPoolAllocator::tAllocState"** %8, align 8
  %39 = getelementptr inbounds %"struct.TPoolAllocator::tAllocState", %"struct.TPoolAllocator::tAllocState"* %38, i64 1
  store %"struct.TPoolAllocator::tAllocState"* %39, %"struct.TPoolAllocator::tAllocState"** %8, align 8
  %40 = getelementptr inbounds %"class.std::__1::vector", %"class.std::__1::vector"* %0, i64 0, i32 0, i32 0
  %41 = load %"struct.TPoolAllocator::tAllocState"*, %"struct.TPoolAllocator::tAllocState"** %40, align 8
  %42 = load i64, i64* %11, align 8
  %43 = ptrtoint %"struct.TPoolAllocator::tAllocState"* %41 to i64
  %44 = sub i64 %42, %43
  %45 = ashr exact i64 %44, 4
  %46 = load %"struct.TPoolAllocator::tAllocState"*, %"struct.TPoolAllocator::tAllocState"** %7, align 8
  %47 = sub nsw i64 0, %45
  %48 = getelementptr inbounds %"struct.TPoolAllocator::tAllocState", %"struct.TPoolAllocator::tAllocState"* %46, i64 %47
  store %"struct.TPoolAllocator::tAllocState"* %48, %"struct.TPoolAllocator::tAllocState"** %7, align 8
  %49 = icmp sgt i64 %44, 0
  br i1 %49, label %54, label %50

50:                                               ; preds = %33
  %51 = insertelement <2 x %"struct.TPoolAllocator::tAllocState"*> undef, %"struct.TPoolAllocator::tAllocState"* %48, i32 0
  %52 = insertelement <2 x %"struct.TPoolAllocator::tAllocState"*> %51, %"struct.TPoolAllocator::tAllocState"* %39, i32 1
  %53 = ptrtoint <2 x %"struct.TPoolAllocator::tAllocState"*> %52 to <2 x i64>
  br label %61

54:                                               ; preds = %33
  %55 = bitcast %"struct.TPoolAllocator::tAllocState"* %48 to i8*
  %56 = bitcast %"struct.TPoolAllocator::tAllocState"* %41 to i8*
  call void @llvm.memcpy.p0i8.p0i8.i64(i8* align 8 %55, i8* align 8 %56, i64 %44, i1 false) #14
  %57 = load i64, i64* %14, align 8
  %58 = load i64, i64* %11, align 8
  %59 = bitcast %"struct.TPoolAllocator::tAllocState"** %7 to <2 x i64>*
  %60 = load <2 x i64>, <2 x i64>* %59, align 8
  br label %61

61:                                               ; preds = %50, %54
  %62 = phi i64 [ %42, %50 ], [ %58, %54 ]
  %63 = phi i64 [ %43, %50 ], [ %57, %54 ]
  %64 = phi <2 x i64> [ %53, %50 ], [ %60, %54 ]
  %65 = bitcast %"struct.TPoolAllocator::tAllocState"** %7 to i64*
  %66 = bitcast %"struct.TPoolAllocator::tAllocState"** %8 to i64*
  store i64 %63, i64* %65, align 8
  %67 = bitcast %"class.std::__1::vector"* %0 to <2 x i64>*
  store <2 x i64> %64, <2 x i64>* %67, align 8
  store i64 %62, i64* %66, align 8
  %68 = load i64, i64* %24, align 8
  %69 = bitcast %"struct.TPoolAllocator::tAllocState"** %9 to i64*
  %70 = load i64, i64* %69, align 8
  store i64 %70, i64* %24, align 8
  store i64 %68, i64* %69, align 8
  %71 = bitcast %"struct.std::__1::__split_buffer"* %3 to i64*
  store i64 %63, i64* %71, align 8
  %72 = inttoptr i64 %63 to %"struct.TPoolAllocator::tAllocState"*
  %73 = inttoptr i64 %62 to %"struct.TPoolAllocator::tAllocState"*
  %74 = icmp eq %"struct.TPoolAllocator::tAllocState"* %73, %72
  br i1 %74, label %82, label %75

75:                                               ; preds = %61
  %76 = getelementptr %"struct.TPoolAllocator::tAllocState", %"struct.TPoolAllocator::tAllocState"* %73, i64 -1, i32 0
  %77 = ptrtoint i64* %76 to i64
  %78 = sub i64 %77, %63
  %79 = lshr i64 %78, 4
  %80 = xor i64 %79, -1
  %81 = getelementptr %"struct.TPoolAllocator::tAllocState", %"struct.TPoolAllocator::tAllocState"* %73, i64 %80
  store %"struct.TPoolAllocator::tAllocState"* %81, %"struct.TPoolAllocator::tAllocState"** %8, align 8
  br label %82

82:                                               ; preds = %75, %61
  %83 = icmp eq i64 %63, 0
  br i1 %83, label %86, label %84

84:                                               ; preds = %82
  %85 = inttoptr i64 %63 to i8*
  call void @_ZdlPv(i8* %85) #13
  br label %86

86:                                               ; preds = %82, %84
  call void @llvm.lifetime.end.p0i8(i64 40, i8* nonnull %6) #14
  ret void
}

; Function Attrs: argmemonly nounwind
declare void @llvm.memcpy.p0i8.p0i8.i64(i8* nocapture writeonly, i8* nocapture readonly, i64, i1 immarg) #2

; Function Attrs: argmemonly nounwind
declare void @llvm.memset.p0i8.i64(i8* nocapture writeonly, i8, i64, i1 immarg) #2

; Function Attrs: nounwind optsize ssp uwtable
define linkonce_odr hidden void @_ZNSt3__114__split_bufferIN14TPoolAllocator11tAllocStateERNS_9allocatorIS2_EEEC2EmmS5_(%"struct.std::__1::__split_buffer"*, i64, i64, %"class.std::__1::allocator"* dereferenceable(1)) unnamed_addr #0 comdat align 2 {
  %5 = getelementptr inbounds %"struct.std::__1::__split_buffer", %"struct.std::__1::__split_buffer"* %0, i64 0, i32 3, i32 0, i32 0
  store %"struct.TPoolAllocator::tAllocState"* null, %"struct.TPoolAllocator::tAllocState"** %5, align 8
  %6 = getelementptr inbounds %"struct.std::__1::__split_buffer", %"struct.std::__1::__split_buffer"* %0, i64 0, i32 3, i32 1, i32 0
  store %"class.std::__1::allocator"* %3, %"class.std::__1::allocator"** %6, align 8
  %7 = icmp eq i64 %1, 0
  br i1 %7, label %15, label %8

8:                                                ; preds = %4
  %9 = icmp ugt i64 %1, 1152921504606846975
  br i1 %9, label %10, label %11

10:                                               ; preds = %8
  tail call void @abort() #16
  unreachable

11:                                               ; preds = %8
  %12 = shl i64 %1, 4
  %13 = tail call i8* @_Znwm(i64 %12) #13
  %14 = bitcast i8* %13 to %"struct.TPoolAllocator::tAllocState"*
  br label %15

15:                                               ; preds = %4, %11
  %16 = phi %"struct.TPoolAllocator::tAllocState"* [ %14, %11 ], [ null, %4 ]
  %17 = getelementptr inbounds %"struct.std::__1::__split_buffer", %"struct.std::__1::__split_buffer"* %0, i64 0, i32 0
  store %"struct.TPoolAllocator::tAllocState"* %16, %"struct.TPoolAllocator::tAllocState"** %17, align 8
  %18 = getelementptr inbounds %"struct.TPoolAllocator::tAllocState", %"struct.TPoolAllocator::tAllocState"* %16, i64 %2
  %19 = getelementptr inbounds %"struct.std::__1::__split_buffer", %"struct.std::__1::__split_buffer"* %0, i64 0, i32 2
  store %"struct.TPoolAllocator::tAllocState"* %18, %"struct.TPoolAllocator::tAllocState"** %19, align 8
  %20 = getelementptr inbounds %"struct.std::__1::__split_buffer", %"struct.std::__1::__split_buffer"* %0, i64 0, i32 1
  store %"struct.TPoolAllocator::tAllocState"* %18, %"struct.TPoolAllocator::tAllocState"** %20, align 8
  %21 = getelementptr inbounds %"struct.TPoolAllocator::tAllocState", %"struct.TPoolAllocator::tAllocState"* %16, i64 %1
  store %"struct.TPoolAllocator::tAllocState"* %21, %"struct.TPoolAllocator::tAllocState"** %5, align 8
  ret void
}

; Function Attrs: noreturn optsize
declare void @_ZNKSt3__120__vector_base_commonILb1EE20__throw_length_errorEv(%"class.std::__1::__vector_base_common"*) local_unnamed_addr #10

; Function Attrs: noreturn nounwind optsize
declare void @abort() local_unnamed_addr #11

; Function Attrs: nobuiltin nofree optsize
declare noalias nonnull i8* @_Znwm(i64) local_unnamed_addr #6

attributes #0 = { nounwind optsize ssp uwtable "correctly-rounded-divide-sqrt-fp-math"="false" "disable-tail-calls"="false" "less-precise-fpmad"="false" "min-legal-vector-width"="0" "no-frame-pointer-elim"="false" "no-infs-fp-math"="false" "no-jump-tables"="false" "no-nans-fp-math"="false" "no-signed-zeros-fp-math"="false" "no-trapping-math"="false" "null-pointer-is-valid"="true" "stack-protector-buffer-size"="4" "target-cpu"="x86-64" "target-features"="+cx8,+fxsr,+mmx,+sse,+sse2,+sse3,+x87" "unsafe-fp-math"="false" "use-soft-float"="false" }
attributes #1 = { optsize "correctly-rounded-divide-sqrt-fp-math"="false" "disable-tail-calls"="false" "less-precise-fpmad"="false" "no-frame-pointer-elim"="false" "no-infs-fp-math"="false" "no-nans-fp-math"="false" "no-signed-zeros-fp-math"="false" "no-trapping-math"="false" "null-pointer-is-valid"="true" "stack-protector-buffer-size"="4" "target-cpu"="x86-64" "target-features"="+cx8,+fxsr,+mmx,+sse,+sse2,+sse3,+x87" "unsafe-fp-math"="false" "use-soft-float"="false" }
attributes #2 = { argmemonly nounwind }
attributes #3 = { nobuiltin nounwind optsize "correctly-rounded-divide-sqrt-fp-math"="false" "disable-tail-calls"="false" "less-precise-fpmad"="false" "no-frame-pointer-elim"="false" "no-infs-fp-math"="false" "no-nans-fp-math"="false" "no-signed-zeros-fp-math"="false" "no-trapping-math"="false" "null-pointer-is-valid"="true" "stack-protector-buffer-size"="4" "target-cpu"="x86-64" "target-features"="+cx8,+fxsr,+mmx,+sse,+sse2,+sse3,+x87" "unsafe-fp-math"="false" "use-soft-float"="false" }
attributes #4 = { norecurse nounwind optsize readnone ssp uwtable "correctly-rounded-divide-sqrt-fp-math"="false" "disable-tail-calls"="false" "less-precise-fpmad"="false" "min-legal-vector-width"="0" "no-frame-pointer-elim"="false" "no-infs-fp-math"="false" "no-jump-tables"="false" "no-nans-fp-math"="false" "no-signed-zeros-fp-math"="false" "no-trapping-math"="false" "null-pointer-is-valid"="true" "stack-protector-buffer-size"="4" "target-cpu"="x86-64" "target-features"="+cx8,+fxsr,+mmx,+sse,+sse2,+sse3,+x87" "unsafe-fp-math"="false" "use-soft-float"="false" }
attributes #5 = { nofree nounwind optsize ssp uwtable "correctly-rounded-divide-sqrt-fp-math"="false" "disable-tail-calls"="false" "less-precise-fpmad"="false" "min-legal-vector-width"="0" "no-frame-pointer-elim"="false" "no-infs-fp-math"="false" "no-jump-tables"="false" "no-nans-fp-math"="false" "no-signed-zeros-fp-math"="false" "no-trapping-math"="false" "null-pointer-is-valid"="true" "stack-protector-buffer-size"="4" "target-cpu"="x86-64" "target-features"="+cx8,+fxsr,+mmx,+sse,+sse2,+sse3,+x87" "unsafe-fp-math"="false" "use-soft-float"="false" }
attributes #6 = { nobuiltin nofree optsize "correctly-rounded-divide-sqrt-fp-math"="false" "disable-tail-calls"="false" "less-precise-fpmad"="false" "no-frame-pointer-elim"="false" "no-infs-fp-math"="false" "no-nans-fp-math"="false" "no-signed-zeros-fp-math"="false" "no-trapping-math"="false" "null-pointer-is-valid"="true" "stack-protector-buffer-size"="4" "target-cpu"="x86-64" "target-features"="+cx8,+fxsr,+mmx,+sse,+sse2,+sse3,+x87" "unsafe-fp-math"="false" "use-soft-float"="false" }
attributes #7 = { norecurse nounwind optsize readonly ssp uwtable "correctly-rounded-divide-sqrt-fp-math"="false" "disable-tail-calls"="false" "less-precise-fpmad"="false" "min-legal-vector-width"="0" "no-frame-pointer-elim"="false" "no-infs-fp-math"="false" "no-jump-tables"="false" "no-nans-fp-math"="false" "no-signed-zeros-fp-math"="false" "no-trapping-math"="false" "null-pointer-is-valid"="true" "stack-protector-buffer-size"="4" "target-cpu"="x86-64" "target-features"="+cx8,+fxsr,+mmx,+sse,+sse2,+sse3,+x87" "unsafe-fp-math"="false" "use-soft-float"="false" }
attributes #8 = { nounwind optsize "correctly-rounded-divide-sqrt-fp-math"="false" "disable-tail-calls"="false" "less-precise-fpmad"="false" "no-frame-pointer-elim"="false" "no-infs-fp-math"="false" "no-nans-fp-math"="false" "no-signed-zeros-fp-math"="false" "no-trapping-math"="false" "null-pointer-is-valid"="true" "stack-protector-buffer-size"="4" "target-cpu"="x86-64" "target-features"="+cx8,+fxsr,+mmx,+sse,+sse2,+sse3,+x87" "unsafe-fp-math"="false" "use-soft-float"="false" }
attributes #9 = { inlinehint nounwind optsize ssp uwtable "correctly-rounded-divide-sqrt-fp-math"="false" "disable-tail-calls"="false" "less-precise-fpmad"="false" "min-legal-vector-width"="0" "no-frame-pointer-elim"="false" "no-infs-fp-math"="false" "no-jump-tables"="false" "no-nans-fp-math"="false" "no-signed-zeros-fp-math"="false" "no-trapping-math"="false" "null-pointer-is-valid"="true" "stack-protector-buffer-size"="4" "target-cpu"="x86-64" "target-features"="+cx8,+fxsr,+mmx,+sse,+sse2,+sse3,+x87" "unsafe-fp-math"="false" "use-soft-float"="false" }
attributes #10 = { noreturn optsize "correctly-rounded-divide-sqrt-fp-math"="false" "disable-tail-calls"="false" "less-precise-fpmad"="false" "no-frame-pointer-elim"="false" "no-infs-fp-math"="false" "no-nans-fp-math"="false" "no-signed-zeros-fp-math"="false" "no-trapping-math"="false" "null-pointer-is-valid"="true" "stack-protector-buffer-size"="4" "target-cpu"="x86-64" "target-features"="+cx8,+fxsr,+mmx,+sse,+sse2,+sse3,+x87" "unsafe-fp-math"="false" "use-soft-float"="false" }
attributes #11 = { noreturn nounwind optsize "correctly-rounded-divide-sqrt-fp-math"="false" "disable-tail-calls"="false" "less-precise-fpmad"="false" "no-frame-pointer-elim"="false" "no-infs-fp-math"="false" "no-nans-fp-math"="false" "no-signed-zeros-fp-math"="false" "no-trapping-math"="false" "null-pointer-is-valid"="true" "stack-protector-buffer-size"="4" "target-cpu"="x86-64" "target-features"="+cx8,+fxsr,+mmx,+sse,+sse2,+sse3,+x87" "unsafe-fp-math"="false" "use-soft-float"="false" }
attributes #12 = { nounwind optsize }
attributes #13 = { builtin nounwind optsize }
attributes #14 = { nounwind }
attributes #15 = { optsize }
attributes #16 = { noreturn nounwind optsize }

!llvm.module.flags = !{!0, !1}

!0 = !{i32 1, !"wchar_size", i32 4}
!1 = !{i32 7, !"PIC Level", i32 2}
