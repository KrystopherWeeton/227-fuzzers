; ModuleID = '../../third_party/skia/modules/skottie/src/effects/GaussianBlurEffect.cpp'
source_filename = "../../third_party/skia/modules/skottie/src/effects/GaussianBlurEffect.cpp"
target datalayout = "e-m:e-i64:64-f80:128-n8:16:32:64-S128"
target triple = "x86_64-unknown-linux-gnu"

module asm ".symver exp, exp@GLIBC_2.2.5"
module asm ".symver exp2, exp2@GLIBC_2.2.5"
module asm ".symver exp2f, exp2f@GLIBC_2.2.5"
module asm ".symver expf, expf@GLIBC_2.2.5"
module asm ".symver lgamma, lgamma@GLIBC_2.2.5"
module asm ".symver lgammaf, lgammaf@GLIBC_2.2.5"
module asm ".symver lgammal, lgammal@GLIBC_2.2.5"
module asm ".symver log, log@GLIBC_2.2.5"
module asm ".symver log2, log2@GLIBC_2.2.5"
module asm ".symver log2f, log2f@GLIBC_2.2.5"
module asm ".symver logf, logf@GLIBC_2.2.5"
module asm ".symver pow, pow@GLIBC_2.2.5"
module asm ".symver powf, powf@GLIBC_2.2.5"

%struct.SkPoint = type { float, float }
%"class.skottie::internal::EffectBuilder" = type { %"class.skottie::internal::AnimationBuilder"*, %"class.skottie::internal::CompositionBuilder"*, %struct.SkSize }
%"class.skottie::internal::AnimationBuilder" = type { %class.sk_sp, %"struct.skottie::internal::AnimationBuilder::LazyResolveFontMgr", %class.sk_sp.2, %class.sk_sp.3, %class.sk_sp.4, %class.sk_sp.5, %"struct.skottie::Animation::Builder::Stats"*, %struct.SkSize, float, float, i32, %"class.std::__1::vector"*, i8*, i8, %class.SkTHashMap, %class.SkTHashMap.11, %class.SkTHashMap.20 }
%class.sk_sp = type { %"class.skresources::ResourceProvider"* }
%"class.skresources::ResourceProvider" = type { %class.SkRefCnt.base, [4 x i8] }
%class.SkRefCnt.base = type { %class.SkRefCntBase.base }
%class.SkRefCntBase.base = type <{ i32 (...)**, %"struct.std::__1::atomic" }>
%"struct.std::__1::atomic" = type { %"struct.std::__1::__atomic_base" }
%"struct.std::__1::__atomic_base" = type { %"struct.std::__1::__atomic_base.0" }
%"struct.std::__1::__atomic_base.0" = type { %"struct.std::__1::__cxx_atomic_impl" }
%"struct.std::__1::__cxx_atomic_impl" = type { %"struct.std::__1::__cxx_atomic_base_impl" }
%"struct.std::__1::__cxx_atomic_base_impl" = type { i32 }
%"struct.skottie::internal::AnimationBuilder::LazyResolveFontMgr" = type { %class.sk_sp.1 }
%class.sk_sp.1 = type { %class.SkFontMgr* }
%class.SkFontMgr = type { %class.SkRefCnt.base, [4 x i8] }
%class.sk_sp.2 = type { %"class.skottie::PropertyObserver"* }
%"class.skottie::PropertyObserver" = type { %class.SkRefCnt.base, [4 x i8] }
%class.sk_sp.3 = type { %"class.skottie::Logger"* }
%"class.skottie::Logger" = type { %class.SkRefCnt.base, [4 x i8] }
%class.sk_sp.4 = type { %"class.skottie::MarkerObserver"* }
%"class.skottie::MarkerObserver" = type { %class.SkRefCnt.base, [4 x i8] }
%class.sk_sp.5 = type { %"class.skottie::PrecompInterceptor"* }
%"class.skottie::PrecompInterceptor" = type { %class.SkRefCnt.base, [4 x i8] }
%"struct.skottie::Animation::Builder::Stats" = type { float, float, float, i64, i64 }
%"class.std::__1::vector" = type { %"class.std::__1::__vector_base" }
%"class.std::__1::__vector_base" = type { %class.sk_sp.6*, %class.sk_sp.6*, %"class.std::__1::__compressed_pair" }
%class.sk_sp.6 = type { %"class.skottie::internal::Animator"* }
%"class.skottie::internal::Animator" = type { %class.SkRefCnt.base, [4 x i8] }
%"class.std::__1::__compressed_pair" = type { %"struct.std::__1::__compressed_pair_elem" }
%"struct.std::__1::__compressed_pair_elem" = type { %class.sk_sp.6* }
%class.SkTHashMap = type { %class.SkTHashTable }
%class.SkTHashTable = type { i32, i32, %class.SkAutoTArray }
%class.SkAutoTArray = type { %"class.std::__1::unique_ptr" }
%"class.std::__1::unique_ptr" = type { %"class.std::__1::__compressed_pair.8" }
%"class.std::__1::__compressed_pair.8" = type { %"struct.std::__1::__compressed_pair_elem.9" }
%"struct.std::__1::__compressed_pair_elem.9" = type { %"struct.SkTHashTable<SkTHashMap<SkString, skottie::internal::AnimationBuilder::AssetInfo, SkGoodHash>::Pair, SkString, SkTHashMap<SkString, skottie::internal::AnimationBuilder::AssetInfo, SkGoodHash>::Pair>::Slot"* }
%"struct.SkTHashTable<SkTHashMap<SkString, skottie::internal::AnimationBuilder::AssetInfo, SkGoodHash>::Pair, SkString, SkTHashMap<SkString, skottie::internal::AnimationBuilder::AssetInfo, SkGoodHash>::Pair>::Slot" = type opaque
%class.SkTHashMap.11 = type { %class.SkTHashTable.12 }
%class.SkTHashTable.12 = type { i32, i32, %class.SkAutoTArray.13 }
%class.SkAutoTArray.13 = type { %"class.std::__1::unique_ptr.14" }
%"class.std::__1::unique_ptr.14" = type { %"class.std::__1::__compressed_pair.15" }
%"class.std::__1::__compressed_pair.15" = type { %"struct.std::__1::__compressed_pair_elem.16" }
%"struct.std::__1::__compressed_pair_elem.16" = type { %"struct.SkTHashTable<SkTHashMap<SkString, skottie::internal::AnimationBuilder::FontInfo, SkGoodHash>::Pair, SkString, SkTHashMap<SkString, skottie::internal::AnimationBuilder::FontInfo, SkGoodHash>::Pair>::Slot"* }
%"struct.SkTHashTable<SkTHashMap<SkString, skottie::internal::AnimationBuilder::FontInfo, SkGoodHash>::Pair, SkString, SkTHashMap<SkString, skottie::internal::AnimationBuilder::FontInfo, SkGoodHash>::Pair>::Slot" = type opaque
%class.SkTHashMap.20 = type { %class.SkTHashTable.21 }
%class.SkTHashTable.21 = type { i32, i32, %class.SkAutoTArray.22 }
%class.SkAutoTArray.22 = type { %"class.std::__1::unique_ptr.23" }
%"class.std::__1::unique_ptr.23" = type { %"class.std::__1::__compressed_pair.24" }
%"class.std::__1::__compressed_pair.24" = type { %"struct.std::__1::__compressed_pair_elem.25" }
%"struct.std::__1::__compressed_pair_elem.25" = type { %"struct.SkTHashTable<SkTHashMap<SkString, skottie::internal::AnimationBuilder::FootageAssetInfo, SkGoodHash>::Pair, SkString, SkTHashMap<SkString, skottie::internal::AnimationBuilder::FootageAssetInfo, SkGoodHash>::Pair>::Slot"* }
%"struct.SkTHashTable<SkTHashMap<SkString, skottie::internal::AnimationBuilder::FootageAssetInfo, SkGoodHash>::Pair, SkString, SkTHashMap<SkString, skottie::internal::AnimationBuilder::FootageAssetInfo, SkGoodHash>::Pair>::Slot" = type opaque
%"class.skottie::internal::CompositionBuilder" = type { %struct.SkSize, %"class.std::__1::vector.29", %class.SkTHashMap.39, %class.sk_sp.31, i64, float, float }
%"class.std::__1::vector.29" = type { %"class.std::__1::__vector_base.30" }
%"class.std::__1::__vector_base.30" = type { %"class.skottie::internal::LayerBuilder"*, %"class.skottie::internal::LayerBuilder"*, %"class.std::__1::__compressed_pair.34" }
%"class.skottie::internal::LayerBuilder" = type <{ %"class.skjson::ObjectValue"*, i32, i32, i32, i8, [3 x i8], %"struct.skottie::internal::AnimationBuilder::LayerInfo", %class.sk_sp.31, [2 x %class.sk_sp.31], %class.sk_sp.32, %"class.std::__1::vector", i64, i32, [4 x i8] }>
%"class.skjson::ObjectValue" = type { %"class.skjson::VectorValue" }
%"class.skjson::VectorValue" = type { %"class.skjson::Value" }
%"class.skjson::Value" = type { [8 x i8] }
%"struct.skottie::internal::AnimationBuilder::LayerInfo" = type { %struct.SkSize, float, float }
%class.sk_sp.32 = type { %"class.sksg::RenderNode"* }
%"class.sksg::RenderNode" = type { %"class.sksg::Node.base", [6 x i8] }
%"class.sksg::Node.base" = type <{ %class.SkRefCnt.base, [4 x i8], %union.anon, %struct.SkRect, i16 }>
%union.anon = type { %"class.sksg::Node"* }
%"class.sksg::Node" = type <{ %class.SkRefCnt.base, [4 x i8], %union.anon, %struct.SkRect, i16, [6 x i8] }>
%struct.SkRect = type { float, float, float, float }
%"class.std::__1::__compressed_pair.34" = type { %"struct.std::__1::__compressed_pair_elem.35" }
%"struct.std::__1::__compressed_pair_elem.35" = type { %"class.skottie::internal::LayerBuilder"* }
%class.SkTHashMap.39 = type { %class.SkTHashTable.40 }
%class.SkTHashTable.40 = type { i32, i32, %class.SkAutoTArray.41 }
%class.SkAutoTArray.41 = type { %"class.std::__1::unique_ptr.42" }
%"class.std::__1::unique_ptr.42" = type { %"class.std::__1::__compressed_pair.43" }
%"class.std::__1::__compressed_pair.43" = type { %"struct.std::__1::__compressed_pair_elem.44" }
%"struct.std::__1::__compressed_pair_elem.44" = type { %"struct.SkTHashTable<SkTHashMap<int, unsigned long, SkGoodHash>::Pair, int, SkTHashMap<int, unsigned long, SkGoodHash>::Pair>::Slot"* }
%"struct.SkTHashTable<SkTHashMap<int, unsigned long, SkGoodHash>::Pair, int, SkTHashMap<int, unsigned long, SkGoodHash>::Pair>::Slot" = type opaque
%class.sk_sp.31 = type { %"class.sksg::Transform"* }
%"class.sksg::Transform" = type opaque
%struct.SkSize = type { float, float }
%"class.skjson::ArrayValue" = type { %"class.skjson::VectorValue.48" }
%"class.skjson::VectorValue.48" = type { %"class.skjson::Value" }
%class.sk_sp.59 = type { %"class.sksg::ImageFilter"* }
%"class.sksg::ImageFilter" = type { %"class.sksg::Node.base", %"class.std::__1::unique_ptr.51", %class.sk_sp.58 }
%"class.std::__1::unique_ptr.51" = type { %"class.std::__1::__compressed_pair.52" }
%"class.std::__1::__compressed_pair.52" = type { %"struct.std::__1::__compressed_pair_elem.53" }
%"struct.std::__1::__compressed_pair_elem.53" = type { %"class.std::__1::vector.54"* }
%"class.std::__1::vector.54" = type opaque
%class.sk_sp.58 = type { %class.SkImageFilter* }
%class.SkImageFilter = type { %class.SkFlattenable.base, [4 x i8] }
%class.SkFlattenable.base = type { %class.SkRefCnt.base }
%"class.skottie::internal::AnimatablePropertyContainer" = type <{ %"class.skottie::internal::Animator.base", [4 x i8], %"class.std::__1::vector", i8, [7 x i8] }>
%"class.skottie::internal::Animator.base" = type { %class.SkRefCnt.base }
%class.sk_sp.50 = type { %"class.sksg::BlurImageFilter"* }
%"class.sksg::BlurImageFilter" = type <{ %"class.sksg::ImageFilter", %struct.SkPoint, i32, [4 x i8] }>
%class.SkRefCntBase = type <{ i32 (...)**, %"struct.std::__1::atomic", [4 x i8] }>
%"class.skottie::internal::(anonymous namespace)::GaussianBlurEffectAdapter" = type <{ %"class.skottie::internal::AnimatablePropertyContainer.base", [7 x i8], %class.sk_sp.50, %class.sk_sp.32, float, float, float, [4 x i8] }>
%"class.skottie::internal::AnimatablePropertyContainer.base" = type <{ %"class.skottie::internal::Animator.base", [4 x i8], %"class.std::__1::vector", i8 }>
%"class.std::__1::__vector_base_common" = type { i8 }

$_ZNK12SkRefCntBase16internal_disposeEv = comdat any

$_ZNSt3__16vectorI5sk_spIN7skottie8internal8AnimatorEENS_9allocatorIS5_EEE21__push_back_slow_pathIS5_EEvOT_ = comdat any

@_ZTVN7skottie8internal12_GLOBAL__N_125GaussianBlurEffectAdapterE = internal unnamed_addr constant { [7 x i8*] } { [7 x i8*] [i8* null, i8* null, i8* bitcast (void (%"class.skottie::internal::(anonymous namespace)::GaussianBlurEffectAdapter"*)* @_ZN7skottie8internal12_GLOBAL__N_125GaussianBlurEffectAdapterD2Ev to i8*), i8* bitcast (void (%"class.skottie::internal::(anonymous namespace)::GaussianBlurEffectAdapter"*)* @_ZN7skottie8internal12_GLOBAL__N_125GaussianBlurEffectAdapterD0Ev to i8*), i8* bitcast (void (%class.SkRefCntBase*)* @_ZNK12SkRefCntBase16internal_disposeEv to i8*), i8* bitcast (i1 (%"class.skottie::internal::AnimatablePropertyContainer"*, float)* @_ZN7skottie8internal27AnimatablePropertyContainer6onSeekEf to i8*), i8* bitcast (void (%"class.skottie::internal::(anonymous namespace)::GaussianBlurEffectAdapter"*)* @_ZN7skottie8internal12_GLOBAL__N_125GaussianBlurEffectAdapter6onSyncEv to i8*)] }, align 8
@_ZTVN7skottie8internal27AnimatablePropertyContainerE = external unnamed_addr constant { [7 x i8*] }, align 8
@_ZZN7skottie8internal12_GLOBAL__N_125GaussianBlurEffectAdapter6onSyncEvE14kDimensionsMap = internal unnamed_addr constant [3 x %struct.SkPoint] [%struct.SkPoint { float 1.000000e+00, float 1.000000e+00 }, %struct.SkPoint { float 1.000000e+00, float 0.000000e+00 }, %struct.SkPoint { float 0.000000e+00, float 1.000000e+00 }], align 16
@_ZZN7skottie8internal12_GLOBAL__N_125GaussianBlurEffectAdapter6onSyncEvE14kRepeatEdgeMap = internal unnamed_addr constant [2 x i32] [i32 3, i32 0], align 4

; Function Attrs: nounwind ssp uwtable
define hidden void @_ZNK7skottie8internal13EffectBuilder24attachGaussianBlurEffectERKN6skjson10ArrayValueE5sk_spIN4sksg10RenderNodeEE(%class.sk_sp.32* noalias sret, %"class.skottie::internal::EffectBuilder"* nocapture readonly, %"class.skjson::ArrayValue"* dereferenceable(8), %class.sk_sp.32* nocapture) local_unnamed_addr #0 align 2 {
  %5 = alloca %class.sk_sp.59, align 8
  %6 = alloca %class.sk_sp.32, align 8
  %7 = alloca %class.sk_sp.59, align 8
  %8 = alloca %class.sk_sp.6, align 8
  %9 = getelementptr inbounds %"class.skottie::internal::EffectBuilder", %"class.skottie::internal::EffectBuilder"* %1, i64 0, i32 0
  %10 = load %"class.skottie::internal::AnimationBuilder"*, %"class.skottie::internal::AnimationBuilder"** %9, align 8
  %11 = getelementptr inbounds %class.sk_sp.32, %class.sk_sp.32* %0, i64 0, i32 0
  store %"class.sksg::RenderNode"* null, %"class.sksg::RenderNode"** %11, align 8, !alias.scope !2
  %12 = getelementptr inbounds %class.sk_sp.32, %class.sk_sp.32* %3, i64 0, i32 0
  %13 = bitcast %class.sk_sp.32* %3 to i64*
  %14 = load i64, i64* %13, align 8, !noalias !2
  store %"class.sksg::RenderNode"* null, %"class.sksg::RenderNode"** %12, align 8, !noalias !2
  %15 = load %"class.skottie::internal::AnimationBuilder"*, %"class.skottie::internal::AnimationBuilder"** %9, align 8, !noalias !2
  %16 = tail call i8* @_Znwm(i64 80) #8, !noalias !5
  %17 = bitcast %class.sk_sp.59* %5 to i8*
  call void @llvm.lifetime.start.p0i8(i64 8, i8* nonnull %17) #9, !noalias !5
  %18 = bitcast %class.sk_sp.32* %6 to i8*
  call void @llvm.lifetime.start.p0i8(i64 8, i8* nonnull %18) #9, !noalias !5
  %19 = bitcast %class.sk_sp.59* %7 to i8*
  call void @llvm.lifetime.start.p0i8(i64 8, i8* nonnull %19) #9, !noalias !5
  %20 = bitcast i8* %16 to %"class.skottie::internal::AnimatablePropertyContainer"*
  %21 = getelementptr inbounds i8, i8* %16, i64 8
  %22 = bitcast i8* %21 to i32*
  store i32 1, i32* %22, align 4, !noalias !5
  %23 = bitcast i8* %16 to i32 (...)***
  %24 = getelementptr inbounds i8, i8* %16, i64 16
  tail call void @llvm.memset.p0i8.i64(i8* align 8 %24, i8 0, i64 25, i1 false) #9, !noalias !5
  store i32 (...)** bitcast (i8** getelementptr inbounds ({ [7 x i8*] }, { [7 x i8*] }* @_ZTVN7skottie8internal12_GLOBAL__N_125GaussianBlurEffectAdapterE, i64 0, inrange i32 0, i64 2) to i32 (...)**), i32 (...)*** %23, align 8, !noalias !5
  %25 = getelementptr inbounds i8, i8* %16, i64 48
  %26 = bitcast i8* %25 to %class.sk_sp.50*
  %27 = getelementptr inbounds %class.sk_sp.59, %class.sk_sp.59* %5, i64 0, i32 0
  store %"class.sksg::ImageFilter"* null, %"class.sksg::ImageFilter"** %27, align 8, !noalias !5
  call void @_ZN4sksg15BlurImageFilter4MakeE5sk_spINS_11ImageFilterEE(%class.sk_sp.50* sret %26, %class.sk_sp.59* nonnull %5) #9, !noalias !5
  %28 = load %"class.sksg::ImageFilter"*, %"class.sksg::ImageFilter"** %27, align 8, !noalias !5
  %29 = icmp eq %"class.sksg::ImageFilter"* %28, null
  br i1 %29, label %40, label %30

30:                                               ; preds = %4
  %31 = getelementptr inbounds %"class.sksg::ImageFilter", %"class.sksg::ImageFilter"* %28, i64 0, i32 0, i32 0, i32 0, i32 1, i32 0, i32 0, i32 0, i32 0, i32 0
  %32 = atomicrmw add i32* %31, i32 -1 acq_rel, !noalias !8
  %33 = icmp eq i32 %32, 1
  br i1 %33, label %34, label %40

34:                                               ; preds = %30
  %35 = bitcast %"class.sksg::ImageFilter"* %28 to %class.SkRefCntBase*
  %36 = bitcast %"class.sksg::ImageFilter"* %28 to void (%class.SkRefCntBase*)***
  %37 = load void (%class.SkRefCntBase*)**, void (%class.SkRefCntBase*)*** %36, align 8, !noalias !8
  %38 = getelementptr inbounds void (%class.SkRefCntBase*)*, void (%class.SkRefCntBase*)** %37, i64 2
  %39 = load void (%class.SkRefCntBase*)*, void (%class.SkRefCntBase*)** %38, align 8, !noalias !8
  call void %39(%class.SkRefCntBase* nonnull %35) #9, !noalias !8
  br label %40

40:                                               ; preds = %34, %30, %4
  %41 = getelementptr inbounds i8, i8* %16, i64 56
  %42 = bitcast i8* %41 to %class.sk_sp.32*
  %43 = bitcast %class.sk_sp.32* %6 to i64*
  store i64 %14, i64* %43, align 8, !noalias !5
  %44 = getelementptr inbounds %class.sk_sp.59, %class.sk_sp.59* %7, i64 0, i32 0
  %45 = bitcast i8* %25 to %"class.sksg::BlurImageFilter"**
  %46 = load %"class.sksg::BlurImageFilter"*, %"class.sksg::BlurImageFilter"** %45, align 8, !noalias !5
  %47 = icmp eq %"class.sksg::BlurImageFilter"* %46, null
  br i1 %47, label %51, label %48

48:                                               ; preds = %40
  %49 = getelementptr inbounds %"class.sksg::BlurImageFilter", %"class.sksg::BlurImageFilter"* %46, i64 0, i32 0, i32 0, i32 0, i32 0, i32 1, i32 0, i32 0, i32 0, i32 0, i32 0
  %50 = atomicrmw add i32* %49, i32 1 monotonic, !noalias !8
  br label %51

51:                                               ; preds = %48, %40
  %52 = getelementptr inbounds %"class.sksg::BlurImageFilter", %"class.sksg::BlurImageFilter"* %46, i64 0, i32 0
  store %"class.sksg::ImageFilter"* %52, %"class.sksg::ImageFilter"** %44, align 8, !noalias !5
  call void @_ZN4sksg17ImageFilterEffect4MakeE5sk_spINS_10RenderNodeEES1_INS_11ImageFilterEE(%class.sk_sp.32* sret %42, %class.sk_sp.32* nonnull %6, %class.sk_sp.59* nonnull %7) #9, !noalias !5
  %53 = load %"class.sksg::ImageFilter"*, %"class.sksg::ImageFilter"** %44, align 8, !noalias !5
  %54 = icmp eq %"class.sksg::ImageFilter"* %53, null
  br i1 %54, label %65, label %55

55:                                               ; preds = %51
  %56 = getelementptr inbounds %"class.sksg::ImageFilter", %"class.sksg::ImageFilter"* %53, i64 0, i32 0, i32 0, i32 0, i32 1, i32 0, i32 0, i32 0, i32 0, i32 0
  %57 = atomicrmw add i32* %56, i32 -1 acq_rel, !noalias !8
  %58 = icmp eq i32 %57, 1
  br i1 %58, label %59, label %65

59:                                               ; preds = %55
  %60 = bitcast %"class.sksg::ImageFilter"* %53 to %class.SkRefCntBase*
  %61 = bitcast %"class.sksg::ImageFilter"* %53 to void (%class.SkRefCntBase*)***
  %62 = load void (%class.SkRefCntBase*)**, void (%class.SkRefCntBase*)*** %61, align 8, !noalias !8
  %63 = getelementptr inbounds void (%class.SkRefCntBase*)*, void (%class.SkRefCntBase*)** %62, i64 2
  %64 = load void (%class.SkRefCntBase*)*, void (%class.SkRefCntBase*)** %63, align 8, !noalias !8
  call void %64(%class.SkRefCntBase* nonnull %60) #9, !noalias !8
  br label %65

65:                                               ; preds = %59, %55, %51
  %66 = getelementptr inbounds %class.sk_sp.32, %class.sk_sp.32* %6, i64 0, i32 0
  %67 = load %"class.sksg::RenderNode"*, %"class.sksg::RenderNode"** %66, align 8, !noalias !5
  %68 = icmp eq %"class.sksg::RenderNode"* %67, null
  br i1 %68, label %79, label %69

69:                                               ; preds = %65
  %70 = getelementptr inbounds %"class.sksg::RenderNode", %"class.sksg::RenderNode"* %67, i64 0, i32 0, i32 0, i32 0, i32 1, i32 0, i32 0, i32 0, i32 0, i32 0
  %71 = atomicrmw add i32* %70, i32 -1 acq_rel, !noalias !8
  %72 = icmp eq i32 %71, 1
  br i1 %72, label %73, label %79

73:                                               ; preds = %69
  %74 = bitcast %"class.sksg::RenderNode"* %67 to %class.SkRefCntBase*
  %75 = bitcast %"class.sksg::RenderNode"* %67 to void (%class.SkRefCntBase*)***
  %76 = load void (%class.SkRefCntBase*)**, void (%class.SkRefCntBase*)*** %75, align 8, !noalias !8
  %77 = getelementptr inbounds void (%class.SkRefCntBase*)*, void (%class.SkRefCntBase*)** %76, i64 2
  %78 = load void (%class.SkRefCntBase*)*, void (%class.SkRefCntBase*)** %77, align 8, !noalias !8
  call void %78(%class.SkRefCntBase* nonnull %74) #9, !noalias !8
  br label %79

79:                                               ; preds = %73, %69, %65
  %80 = getelementptr inbounds i8, i8* %16, i64 64
  %81 = bitcast i8* %80 to float*
  store float 0.000000e+00, float* %81, align 8, !noalias !5
  %82 = getelementptr inbounds i8, i8* %16, i64 68
  %83 = bitcast i8* %82 to float*
  store float 1.000000e+00, float* %83, align 4, !noalias !5
  %84 = getelementptr inbounds i8, i8* %16, i64 72
  %85 = bitcast i8* %84 to float*
  store float 0.000000e+00, float* %85, align 8, !noalias !5
  %86 = call dereferenceable(8) %"class.skjson::Value"* @_ZN7skottie8internal13EffectBuilder12GetPropValueERKN6skjson10ArrayValueEm(%"class.skjson::ArrayValue"* dereferenceable(8) %2, i64 0) #9, !noalias !5
  %87 = getelementptr inbounds %"class.skjson::Value", %"class.skjson::Value"* %86, i64 0, i32 0, i64 0
  %88 = load i8, i8* %87, align 8, !noalias !5
  %89 = and i8 %88, 7
  %90 = icmp eq i8 %89, 7
  %91 = bitcast %"class.skjson::Value"* %86 to %"class.skjson::ObjectValue"*
  %92 = select i1 %90, %"class.skjson::ObjectValue"* %91, %"class.skjson::ObjectValue"* null
  %93 = call zeroext i1 @_ZN7skottie8internal27AnimatablePropertyContainer4bindIfEEbRKNS0_16AnimationBuilderEPKN6skjson11ObjectValueEPT_(%"class.skottie::internal::AnimatablePropertyContainer"* nonnull %20, %"class.skottie::internal::AnimationBuilder"* dereferenceable(152) %15, %"class.skjson::ObjectValue"* %92, float* %81) #9, !noalias !5
  %94 = call dereferenceable(8) %"class.skjson::Value"* @_ZN7skottie8internal13EffectBuilder12GetPropValueERKN6skjson10ArrayValueEm(%"class.skjson::ArrayValue"* dereferenceable(8) %2, i64 1) #9, !noalias !5
  %95 = getelementptr inbounds %"class.skjson::Value", %"class.skjson::Value"* %94, i64 0, i32 0, i64 0
  %96 = load i8, i8* %95, align 8, !noalias !5
  %97 = and i8 %96, 7
  %98 = icmp eq i8 %97, 7
  %99 = bitcast %"class.skjson::Value"* %94 to %"class.skjson::ObjectValue"*
  %100 = select i1 %98, %"class.skjson::ObjectValue"* %99, %"class.skjson::ObjectValue"* null
  %101 = call zeroext i1 @_ZN7skottie8internal27AnimatablePropertyContainer4bindIfEEbRKNS0_16AnimationBuilderEPKN6skjson11ObjectValueEPT_(%"class.skottie::internal::AnimatablePropertyContainer"* nonnull %20, %"class.skottie::internal::AnimationBuilder"* dereferenceable(152) %15, %"class.skjson::ObjectValue"* %100, float* %83) #9, !noalias !5
  %102 = call dereferenceable(8) %"class.skjson::Value"* @_ZN7skottie8internal13EffectBuilder12GetPropValueERKN6skjson10ArrayValueEm(%"class.skjson::ArrayValue"* dereferenceable(8) %2, i64 2) #9, !noalias !5
  %103 = getelementptr inbounds %"class.skjson::Value", %"class.skjson::Value"* %102, i64 0, i32 0, i64 0
  %104 = load i8, i8* %103, align 8, !noalias !5
  %105 = and i8 %104, 7
  %106 = icmp eq i8 %105, 7
  %107 = bitcast %"class.skjson::Value"* %102 to %"class.skjson::ObjectValue"*
  %108 = select i1 %106, %"class.skjson::ObjectValue"* %107, %"class.skjson::ObjectValue"* null
  %109 = call zeroext i1 @_ZN7skottie8internal27AnimatablePropertyContainer4bindIfEEbRKNS0_16AnimationBuilderEPKN6skjson11ObjectValueEPT_(%"class.skottie::internal::AnimatablePropertyContainer"* nonnull %20, %"class.skottie::internal::AnimationBuilder"* dereferenceable(152) %15, %"class.skjson::ObjectValue"* %108, float* %85) #9, !noalias !5
  call void @llvm.lifetime.end.p0i8(i64 8, i8* nonnull %17) #9, !noalias !5
  call void @llvm.lifetime.end.p0i8(i64 8, i8* nonnull %18) #9, !noalias !5
  call void @llvm.lifetime.end.p0i8(i64 8, i8* nonnull %19) #9, !noalias !5
  %110 = ptrtoint i8* %16 to i64
  %111 = icmp eq %class.sk_sp.32* %42, %0
  br i1 %111, label %132, label %112

112:                                              ; preds = %79
  %113 = bitcast i8* %41 to %"class.sksg::RenderNode"**
  %114 = load %"class.sksg::RenderNode"*, %"class.sksg::RenderNode"** %113, align 8, !noalias !2
  %115 = icmp eq %"class.sksg::RenderNode"* %114, null
  br i1 %115, label %119, label %116

116:                                              ; preds = %112
  %117 = getelementptr inbounds %"class.sksg::RenderNode", %"class.sksg::RenderNode"* %114, i64 0, i32 0, i32 0, i32 0, i32 1, i32 0, i32 0, i32 0, i32 0, i32 0
  %118 = atomicrmw add i32* %117, i32 1 monotonic
  br label %119

119:                                              ; preds = %116, %112
  %120 = load %"class.sksg::RenderNode"*, %"class.sksg::RenderNode"** %11, align 8, !alias.scope !2
  store %"class.sksg::RenderNode"* %114, %"class.sksg::RenderNode"** %11, align 8, !alias.scope !2
  %121 = icmp eq %"class.sksg::RenderNode"* %120, null
  br i1 %121, label %132, label %122

122:                                              ; preds = %119
  %123 = getelementptr inbounds %"class.sksg::RenderNode", %"class.sksg::RenderNode"* %120, i64 0, i32 0, i32 0, i32 0, i32 1, i32 0, i32 0, i32 0, i32 0, i32 0
  %124 = atomicrmw add i32* %123, i32 -1 acq_rel
  %125 = icmp eq i32 %124, 1
  br i1 %125, label %126, label %132

126:                                              ; preds = %122
  %127 = bitcast %"class.sksg::RenderNode"* %120 to %class.SkRefCntBase*
  %128 = bitcast %"class.sksg::RenderNode"* %120 to void (%class.SkRefCntBase*)***
  %129 = load void (%class.SkRefCntBase*)**, void (%class.SkRefCntBase*)*** %128, align 8
  %130 = getelementptr inbounds void (%class.SkRefCntBase*)*, void (%class.SkRefCntBase*)** %129, i64 2
  %131 = load void (%class.SkRefCntBase*)*, void (%class.SkRefCntBase*)** %130, align 8
  call void %131(%class.SkRefCntBase* nonnull %127) #9
  br label %132

132:                                              ; preds = %126, %122, %119, %79
  %133 = bitcast i8* %24 to %class.sk_sp.6**
  %134 = load %class.sk_sp.6*, %class.sk_sp.6** %133, align 8, !noalias !2
  %135 = getelementptr inbounds i8, i8* %16, i64 24
  %136 = bitcast i8* %135 to %class.sk_sp.6**
  %137 = load %class.sk_sp.6*, %class.sk_sp.6** %136, align 8, !noalias !2
  %138 = icmp eq %class.sk_sp.6* %134, %137
  br i1 %138, label %171, label %139

139:                                              ; preds = %132
  %140 = getelementptr inbounds %"class.skottie::internal::AnimationBuilder", %"class.skottie::internal::AnimationBuilder"* %10, i64 0, i32 11
  %141 = load %"class.std::__1::vector"*, %"class.std::__1::vector"** %140, align 8, !noalias !2
  %142 = bitcast %class.sk_sp.6* %8 to i8*
  call void @llvm.lifetime.start.p0i8(i64 8, i8* nonnull %142) #9, !noalias !2
  %143 = bitcast %class.sk_sp.6* %8 to i64*
  store i64 %110, i64* %143, align 8, !noalias !2
  %144 = getelementptr inbounds %"class.std::__1::vector", %"class.std::__1::vector"* %141, i64 0, i32 0, i32 1
  %145 = load %class.sk_sp.6*, %class.sk_sp.6** %144, align 8
  %146 = getelementptr inbounds %"class.std::__1::vector", %"class.std::__1::vector"* %141, i64 0, i32 0, i32 2, i32 0, i32 0
  %147 = load %class.sk_sp.6*, %class.sk_sp.6** %146, align 8
  %148 = icmp ult %class.sk_sp.6* %145, %147
  br i1 %148, label %149, label %155

149:                                              ; preds = %139
  %150 = getelementptr inbounds %class.sk_sp.6, %class.sk_sp.6* %8, i64 0, i32 0
  store %"class.skottie::internal::Animator"* null, %"class.skottie::internal::Animator"** %150, align 8, !noalias !2
  %151 = bitcast %class.sk_sp.6* %145 to i64*
  store i64 %110, i64* %151, align 8
  %152 = getelementptr inbounds %class.sk_sp.6, %class.sk_sp.6* %145, i64 1
  %153 = ptrtoint %class.sk_sp.6* %152 to i64
  %154 = bitcast %class.sk_sp.6** %144 to i64*
  store i64 %153, i64* %154, align 8
  br label %156

155:                                              ; preds = %139
  call void @_ZNSt3__16vectorI5sk_spIN7skottie8internal8AnimatorEENS_9allocatorIS5_EEE21__push_back_slow_pathIS5_EEvOT_(%"class.std::__1::vector"* %141, %class.sk_sp.6* nonnull dereferenceable(8) %8) #9
  br label %156

156:                                              ; preds = %155, %149
  %157 = getelementptr inbounds %class.sk_sp.6, %class.sk_sp.6* %8, i64 0, i32 0
  %158 = load %"class.skottie::internal::Animator"*, %"class.skottie::internal::Animator"** %157, align 8, !noalias !2
  %159 = icmp eq %"class.skottie::internal::Animator"* %158, null
  br i1 %159, label %170, label %160

160:                                              ; preds = %156
  %161 = getelementptr inbounds %"class.skottie::internal::Animator", %"class.skottie::internal::Animator"* %158, i64 0, i32 0, i32 0, i32 1, i32 0, i32 0, i32 0, i32 0, i32 0
  %162 = atomicrmw add i32* %161, i32 -1 acq_rel
  %163 = icmp eq i32 %162, 1
  br i1 %163, label %164, label %170

164:                                              ; preds = %160
  %165 = bitcast %"class.skottie::internal::Animator"* %158 to %class.SkRefCntBase*
  %166 = bitcast %"class.skottie::internal::Animator"* %158 to void (%class.SkRefCntBase*)***
  %167 = load void (%class.SkRefCntBase*)**, void (%class.SkRefCntBase*)*** %166, align 8
  %168 = getelementptr inbounds void (%class.SkRefCntBase*)*, void (%class.SkRefCntBase*)** %167, i64 2
  %169 = load void (%class.SkRefCntBase*)*, void (%class.SkRefCntBase*)** %168, align 8
  call void %169(%class.SkRefCntBase* nonnull %165) #9
  br label %170

170:                                              ; preds = %164, %160, %156
  call void @llvm.lifetime.end.p0i8(i64 8, i8* nonnull %142) #9, !noalias !2
  br label %186

171:                                              ; preds = %132
  %172 = bitcast i8* %16 to %"class.skottie::internal::Animator"*
  %173 = bitcast i8* %16 to i1 (%"class.skottie::internal::Animator"*, float)***
  %174 = load i1 (%"class.skottie::internal::Animator"*, float)**, i1 (%"class.skottie::internal::Animator"*, float)*** %173, align 8, !noalias !2
  %175 = getelementptr inbounds i1 (%"class.skottie::internal::Animator"*, float)*, i1 (%"class.skottie::internal::Animator"*, float)** %174, i64 3
  %176 = load i1 (%"class.skottie::internal::Animator"*, float)*, i1 (%"class.skottie::internal::Animator"*, float)** %175, align 8
  %177 = call zeroext i1 %176(%"class.skottie::internal::Animator"* nonnull %172, float 0.000000e+00) #9
  %178 = atomicrmw add i32* %22, i32 -1 acq_rel, !noalias !2
  %179 = icmp eq i32 %178, 1
  br i1 %179, label %180, label %186

180:                                              ; preds = %171
  %181 = bitcast i8* %16 to %class.SkRefCntBase*
  %182 = bitcast i8* %16 to void (%class.SkRefCntBase*)***
  %183 = load void (%class.SkRefCntBase*)**, void (%class.SkRefCntBase*)*** %182, align 8, !noalias !2
  %184 = getelementptr inbounds void (%class.SkRefCntBase*)*, void (%class.SkRefCntBase*)** %183, i64 2
  %185 = load void (%class.SkRefCntBase*)*, void (%class.SkRefCntBase*)** %184, align 8
  call void %185(%class.SkRefCntBase* nonnull %181) #9
  br label %186

186:                                              ; preds = %170, %171, %180
  ret void
}

; Function Attrs: argmemonly nounwind
declare void @llvm.lifetime.start.p0i8(i64 immarg, i8* nocapture) #1

; Function Attrs: argmemonly nounwind
declare void @llvm.lifetime.end.p0i8(i64 immarg, i8* nocapture) #1

; Function Attrs: nobuiltin nofree
declare noalias nonnull i8* @_Znwm(i64) local_unnamed_addr #2

declare void @_ZN4sksg15BlurImageFilter4MakeE5sk_spINS_11ImageFilterEE(%class.sk_sp.50* sret, %class.sk_sp.59*) local_unnamed_addr #3

declare void @_ZN4sksg17ImageFilterEffect4MakeE5sk_spINS_10RenderNodeEES1_INS_11ImageFilterEE(%class.sk_sp.32* sret, %class.sk_sp.32*, %class.sk_sp.59*) local_unnamed_addr #3

; Function Attrs: inlinehint nounwind ssp uwtable
define internal void @_ZN7skottie8internal12_GLOBAL__N_125GaussianBlurEffectAdapterD2Ev(%"class.skottie::internal::(anonymous namespace)::GaussianBlurEffectAdapter"* nocapture) unnamed_addr #4 align 2 {
  %2 = getelementptr inbounds %"class.skottie::internal::(anonymous namespace)::GaussianBlurEffectAdapter", %"class.skottie::internal::(anonymous namespace)::GaussianBlurEffectAdapter"* %0, i64 0, i32 0, i32 0, i32 0, i32 0, i32 0
  store i32 (...)** bitcast (i8** getelementptr inbounds ({ [7 x i8*] }, { [7 x i8*] }* @_ZTVN7skottie8internal12_GLOBAL__N_125GaussianBlurEffectAdapterE, i64 0, inrange i32 0, i64 2) to i32 (...)**), i32 (...)*** %2, align 8
  %3 = getelementptr inbounds %"class.skottie::internal::(anonymous namespace)::GaussianBlurEffectAdapter", %"class.skottie::internal::(anonymous namespace)::GaussianBlurEffectAdapter"* %0, i64 0, i32 3, i32 0
  %4 = load %"class.sksg::RenderNode"*, %"class.sksg::RenderNode"** %3, align 8
  %5 = icmp eq %"class.sksg::RenderNode"* %4, null
  br i1 %5, label %16, label %6

6:                                                ; preds = %1
  %7 = getelementptr inbounds %"class.sksg::RenderNode", %"class.sksg::RenderNode"* %4, i64 0, i32 0, i32 0, i32 0, i32 1, i32 0, i32 0, i32 0, i32 0, i32 0
  %8 = atomicrmw add i32* %7, i32 -1 acq_rel
  %9 = icmp eq i32 %8, 1
  br i1 %9, label %10, label %16

10:                                               ; preds = %6
  %11 = bitcast %"class.sksg::RenderNode"* %4 to %class.SkRefCntBase*
  %12 = bitcast %"class.sksg::RenderNode"* %4 to void (%class.SkRefCntBase*)***
  %13 = load void (%class.SkRefCntBase*)**, void (%class.SkRefCntBase*)*** %12, align 8
  %14 = getelementptr inbounds void (%class.SkRefCntBase*)*, void (%class.SkRefCntBase*)** %13, i64 2
  %15 = load void (%class.SkRefCntBase*)*, void (%class.SkRefCntBase*)** %14, align 8
  tail call void %15(%class.SkRefCntBase* nonnull %11) #9
  br label %16

16:                                               ; preds = %1, %6, %10
  %17 = getelementptr inbounds %"class.skottie::internal::(anonymous namespace)::GaussianBlurEffectAdapter", %"class.skottie::internal::(anonymous namespace)::GaussianBlurEffectAdapter"* %0, i64 0, i32 2, i32 0
  %18 = load %"class.sksg::BlurImageFilter"*, %"class.sksg::BlurImageFilter"** %17, align 8
  %19 = icmp eq %"class.sksg::BlurImageFilter"* %18, null
  br i1 %19, label %30, label %20

20:                                               ; preds = %16
  %21 = getelementptr inbounds %"class.sksg::BlurImageFilter", %"class.sksg::BlurImageFilter"* %18, i64 0, i32 0, i32 0, i32 0, i32 0, i32 1, i32 0, i32 0, i32 0, i32 0, i32 0
  %22 = atomicrmw add i32* %21, i32 -1 acq_rel
  %23 = icmp eq i32 %22, 1
  br i1 %23, label %24, label %30

24:                                               ; preds = %20
  %25 = bitcast %"class.sksg::BlurImageFilter"* %18 to %class.SkRefCntBase*
  %26 = bitcast %"class.sksg::BlurImageFilter"* %18 to void (%class.SkRefCntBase*)***
  %27 = load void (%class.SkRefCntBase*)**, void (%class.SkRefCntBase*)*** %26, align 8
  %28 = getelementptr inbounds void (%class.SkRefCntBase*)*, void (%class.SkRefCntBase*)** %27, i64 2
  %29 = load void (%class.SkRefCntBase*)*, void (%class.SkRefCntBase*)** %28, align 8
  tail call void %29(%class.SkRefCntBase* nonnull %25) #9
  br label %30

30:                                               ; preds = %16, %20, %24
  store i32 (...)** bitcast (i8** getelementptr inbounds ({ [7 x i8*] }, { [7 x i8*] }* @_ZTVN7skottie8internal27AnimatablePropertyContainerE, i64 0, inrange i32 0, i64 2) to i32 (...)**), i32 (...)*** %2, align 8
  %31 = getelementptr inbounds %"class.skottie::internal::(anonymous namespace)::GaussianBlurEffectAdapter", %"class.skottie::internal::(anonymous namespace)::GaussianBlurEffectAdapter"* %0, i64 0, i32 0, i32 2
  %32 = getelementptr inbounds %"class.std::__1::vector", %"class.std::__1::vector"* %31, i64 0, i32 0, i32 0
  %33 = load %class.sk_sp.6*, %class.sk_sp.6** %32, align 8
  %34 = icmp eq %class.sk_sp.6* %33, null
  br i1 %34, label %63, label %35

35:                                               ; preds = %30
  %36 = bitcast %class.sk_sp.6* %33 to i8*
  %37 = getelementptr inbounds %"class.skottie::internal::(anonymous namespace)::GaussianBlurEffectAdapter", %"class.skottie::internal::(anonymous namespace)::GaussianBlurEffectAdapter"* %0, i64 0, i32 0, i32 2, i32 0, i32 1
  %38 = load %class.sk_sp.6*, %class.sk_sp.6** %37, align 8
  %39 = icmp eq %class.sk_sp.6* %38, %33
  br i1 %39, label %61, label %40

40:                                               ; preds = %35, %56
  %41 = phi %class.sk_sp.6* [ %42, %56 ], [ %38, %35 ]
  %42 = getelementptr inbounds %class.sk_sp.6, %class.sk_sp.6* %41, i64 -1
  %43 = getelementptr inbounds %class.sk_sp.6, %class.sk_sp.6* %42, i64 0, i32 0
  %44 = load %"class.skottie::internal::Animator"*, %"class.skottie::internal::Animator"** %43, align 8
  %45 = icmp eq %"class.skottie::internal::Animator"* %44, null
  br i1 %45, label %56, label %46

46:                                               ; preds = %40
  %47 = getelementptr inbounds %"class.skottie::internal::Animator", %"class.skottie::internal::Animator"* %44, i64 0, i32 0, i32 0, i32 1, i32 0, i32 0, i32 0, i32 0, i32 0
  %48 = atomicrmw add i32* %47, i32 -1 acq_rel
  %49 = icmp eq i32 %48, 1
  br i1 %49, label %50, label %56

50:                                               ; preds = %46
  %51 = bitcast %"class.skottie::internal::Animator"* %44 to %class.SkRefCntBase*
  %52 = bitcast %"class.skottie::internal::Animator"* %44 to void (%class.SkRefCntBase*)***
  %53 = load void (%class.SkRefCntBase*)**, void (%class.SkRefCntBase*)*** %52, align 8
  %54 = getelementptr inbounds void (%class.SkRefCntBase*)*, void (%class.SkRefCntBase*)** %53, i64 2
  %55 = load void (%class.SkRefCntBase*)*, void (%class.SkRefCntBase*)** %54, align 8
  tail call void %55(%class.SkRefCntBase* nonnull %51) #9
  br label %56

56:                                               ; preds = %50, %46, %40
  %57 = icmp eq %class.sk_sp.6* %42, %33
  br i1 %57, label %58, label %40

58:                                               ; preds = %56
  %59 = bitcast %"class.std::__1::vector"* %31 to i8**
  %60 = load i8*, i8** %59, align 8
  br label %61

61:                                               ; preds = %58, %35
  %62 = phi i8* [ %60, %58 ], [ %36, %35 ]
  store %class.sk_sp.6* %33, %class.sk_sp.6** %37, align 8
  tail call void @_ZdlPv(i8* %62) #8
  br label %63

63:                                               ; preds = %30, %61
  ret void
}

; Function Attrs: inlinehint nounwind ssp uwtable
define internal void @_ZN7skottie8internal12_GLOBAL__N_125GaussianBlurEffectAdapterD0Ev(%"class.skottie::internal::(anonymous namespace)::GaussianBlurEffectAdapter"*) unnamed_addr #4 align 2 {
  %2 = getelementptr inbounds %"class.skottie::internal::(anonymous namespace)::GaussianBlurEffectAdapter", %"class.skottie::internal::(anonymous namespace)::GaussianBlurEffectAdapter"* %0, i64 0, i32 0, i32 0, i32 0, i32 0, i32 0
  store i32 (...)** bitcast (i8** getelementptr inbounds ({ [7 x i8*] }, { [7 x i8*] }* @_ZTVN7skottie8internal12_GLOBAL__N_125GaussianBlurEffectAdapterE, i64 0, inrange i32 0, i64 2) to i32 (...)**), i32 (...)*** %2, align 8
  %3 = getelementptr inbounds %"class.skottie::internal::(anonymous namespace)::GaussianBlurEffectAdapter", %"class.skottie::internal::(anonymous namespace)::GaussianBlurEffectAdapter"* %0, i64 0, i32 3, i32 0
  %4 = load %"class.sksg::RenderNode"*, %"class.sksg::RenderNode"** %3, align 8
  %5 = icmp eq %"class.sksg::RenderNode"* %4, null
  br i1 %5, label %16, label %6

6:                                                ; preds = %1
  %7 = getelementptr inbounds %"class.sksg::RenderNode", %"class.sksg::RenderNode"* %4, i64 0, i32 0, i32 0, i32 0, i32 1, i32 0, i32 0, i32 0, i32 0, i32 0
  %8 = atomicrmw add i32* %7, i32 -1 acq_rel
  %9 = icmp eq i32 %8, 1
  br i1 %9, label %10, label %16

10:                                               ; preds = %6
  %11 = bitcast %"class.sksg::RenderNode"* %4 to %class.SkRefCntBase*
  %12 = bitcast %"class.sksg::RenderNode"* %4 to void (%class.SkRefCntBase*)***
  %13 = load void (%class.SkRefCntBase*)**, void (%class.SkRefCntBase*)*** %12, align 8
  %14 = getelementptr inbounds void (%class.SkRefCntBase*)*, void (%class.SkRefCntBase*)** %13, i64 2
  %15 = load void (%class.SkRefCntBase*)*, void (%class.SkRefCntBase*)** %14, align 8
  tail call void %15(%class.SkRefCntBase* nonnull %11) #9
  br label %16

16:                                               ; preds = %10, %6, %1
  %17 = getelementptr inbounds %"class.skottie::internal::(anonymous namespace)::GaussianBlurEffectAdapter", %"class.skottie::internal::(anonymous namespace)::GaussianBlurEffectAdapter"* %0, i64 0, i32 2, i32 0
  %18 = load %"class.sksg::BlurImageFilter"*, %"class.sksg::BlurImageFilter"** %17, align 8
  %19 = icmp eq %"class.sksg::BlurImageFilter"* %18, null
  br i1 %19, label %30, label %20

20:                                               ; preds = %16
  %21 = getelementptr inbounds %"class.sksg::BlurImageFilter", %"class.sksg::BlurImageFilter"* %18, i64 0, i32 0, i32 0, i32 0, i32 0, i32 1, i32 0, i32 0, i32 0, i32 0, i32 0
  %22 = atomicrmw add i32* %21, i32 -1 acq_rel
  %23 = icmp eq i32 %22, 1
  br i1 %23, label %24, label %30

24:                                               ; preds = %20
  %25 = bitcast %"class.sksg::BlurImageFilter"* %18 to %class.SkRefCntBase*
  %26 = bitcast %"class.sksg::BlurImageFilter"* %18 to void (%class.SkRefCntBase*)***
  %27 = load void (%class.SkRefCntBase*)**, void (%class.SkRefCntBase*)*** %26, align 8
  %28 = getelementptr inbounds void (%class.SkRefCntBase*)*, void (%class.SkRefCntBase*)** %27, i64 2
  %29 = load void (%class.SkRefCntBase*)*, void (%class.SkRefCntBase*)** %28, align 8
  tail call void %29(%class.SkRefCntBase* nonnull %25) #9
  br label %30

30:                                               ; preds = %24, %20, %16
  store i32 (...)** bitcast (i8** getelementptr inbounds ({ [7 x i8*] }, { [7 x i8*] }* @_ZTVN7skottie8internal27AnimatablePropertyContainerE, i64 0, inrange i32 0, i64 2) to i32 (...)**), i32 (...)*** %2, align 8
  %31 = getelementptr inbounds %"class.skottie::internal::(anonymous namespace)::GaussianBlurEffectAdapter", %"class.skottie::internal::(anonymous namespace)::GaussianBlurEffectAdapter"* %0, i64 0, i32 0, i32 2
  %32 = getelementptr inbounds %"class.std::__1::vector", %"class.std::__1::vector"* %31, i64 0, i32 0, i32 0
  %33 = load %class.sk_sp.6*, %class.sk_sp.6** %32, align 8
  %34 = icmp eq %class.sk_sp.6* %33, null
  br i1 %34, label %63, label %35

35:                                               ; preds = %30
  %36 = bitcast %class.sk_sp.6* %33 to i8*
  %37 = getelementptr inbounds %"class.skottie::internal::(anonymous namespace)::GaussianBlurEffectAdapter", %"class.skottie::internal::(anonymous namespace)::GaussianBlurEffectAdapter"* %0, i64 0, i32 0, i32 2, i32 0, i32 1
  %38 = load %class.sk_sp.6*, %class.sk_sp.6** %37, align 8
  %39 = icmp eq %class.sk_sp.6* %38, %33
  br i1 %39, label %61, label %40

40:                                               ; preds = %35, %56
  %41 = phi %class.sk_sp.6* [ %42, %56 ], [ %38, %35 ]
  %42 = getelementptr inbounds %class.sk_sp.6, %class.sk_sp.6* %41, i64 -1
  %43 = getelementptr inbounds %class.sk_sp.6, %class.sk_sp.6* %42, i64 0, i32 0
  %44 = load %"class.skottie::internal::Animator"*, %"class.skottie::internal::Animator"** %43, align 8
  %45 = icmp eq %"class.skottie::internal::Animator"* %44, null
  br i1 %45, label %56, label %46

46:                                               ; preds = %40
  %47 = getelementptr inbounds %"class.skottie::internal::Animator", %"class.skottie::internal::Animator"* %44, i64 0, i32 0, i32 0, i32 1, i32 0, i32 0, i32 0, i32 0, i32 0
  %48 = atomicrmw add i32* %47, i32 -1 acq_rel
  %49 = icmp eq i32 %48, 1
  br i1 %49, label %50, label %56

50:                                               ; preds = %46
  %51 = bitcast %"class.skottie::internal::Animator"* %44 to %class.SkRefCntBase*
  %52 = bitcast %"class.skottie::internal::Animator"* %44 to void (%class.SkRefCntBase*)***
  %53 = load void (%class.SkRefCntBase*)**, void (%class.SkRefCntBase*)*** %52, align 8
  %54 = getelementptr inbounds void (%class.SkRefCntBase*)*, void (%class.SkRefCntBase*)** %53, i64 2
  %55 = load void (%class.SkRefCntBase*)*, void (%class.SkRefCntBase*)** %54, align 8
  tail call void %55(%class.SkRefCntBase* nonnull %51) #9
  br label %56

56:                                               ; preds = %50, %46, %40
  %57 = icmp eq %class.sk_sp.6* %42, %33
  br i1 %57, label %58, label %40

58:                                               ; preds = %56
  %59 = bitcast %"class.std::__1::vector"* %31 to i8**
  %60 = load i8*, i8** %59, align 8
  br label %61

61:                                               ; preds = %58, %35
  %62 = phi i8* [ %60, %58 ], [ %36, %35 ]
  store %class.sk_sp.6* %33, %class.sk_sp.6** %37, align 8
  tail call void @_ZdlPv(i8* %62) #8
  br label %63

63:                                               ; preds = %30, %61
  %64 = bitcast %"class.skottie::internal::(anonymous namespace)::GaussianBlurEffectAdapter"* %0 to i8*
  tail call void @_ZdlPv(i8* %64) #8
  ret void
}

; Function Attrs: nounwind ssp uwtable
define linkonce_odr hidden void @_ZNK12SkRefCntBase16internal_disposeEv(%class.SkRefCntBase*) unnamed_addr #0 comdat align 2 {
  %2 = icmp eq %class.SkRefCntBase* %0, null
  br i1 %2, label %8, label %3

3:                                                ; preds = %1
  %4 = bitcast %class.SkRefCntBase* %0 to void (%class.SkRefCntBase*)***
  %5 = load void (%class.SkRefCntBase*)**, void (%class.SkRefCntBase*)*** %4, align 8
  %6 = getelementptr inbounds void (%class.SkRefCntBase*)*, void (%class.SkRefCntBase*)** %5, i64 1
  %7 = load void (%class.SkRefCntBase*)*, void (%class.SkRefCntBase*)** %6, align 8
  tail call void %7(%class.SkRefCntBase* nonnull %0) #9
  br label %8

8:                                                ; preds = %3, %1
  ret void
}

declare zeroext i1 @_ZN7skottie8internal27AnimatablePropertyContainer6onSeekEf(%"class.skottie::internal::AnimatablePropertyContainer"*, float) unnamed_addr #3

; Function Attrs: nounwind ssp uwtable
define internal void @_ZN7skottie8internal12_GLOBAL__N_125GaussianBlurEffectAdapter6onSyncEv(%"class.skottie::internal::(anonymous namespace)::GaussianBlurEffectAdapter"* nocapture readonly) unnamed_addr #0 align 2 {
  %2 = getelementptr inbounds %"class.skottie::internal::(anonymous namespace)::GaussianBlurEffectAdapter", %"class.skottie::internal::(anonymous namespace)::GaussianBlurEffectAdapter"* %0, i64 0, i32 5
  %3 = load float, float* %2, align 4
  %4 = fptoui float %3 to i64
  %5 = icmp ult i64 %4, 3
  %6 = select i1 %5, i64 %4, i64 3
  %7 = icmp ugt i64 %6, 1
  %8 = select i1 %7, i64 %6, i64 1
  %9 = add nsw i64 %8, -1
  %10 = getelementptr inbounds %"class.skottie::internal::(anonymous namespace)::GaussianBlurEffectAdapter", %"class.skottie::internal::(anonymous namespace)::GaussianBlurEffectAdapter"* %0, i64 0, i32 4
  %11 = load float, float* %10, align 8
  %12 = fmul float %11, 0x3FD3333340000000
  %13 = getelementptr inbounds %"class.skottie::internal::(anonymous namespace)::GaussianBlurEffectAdapter", %"class.skottie::internal::(anonymous namespace)::GaussianBlurEffectAdapter"* %0, i64 0, i32 2, i32 0
  %14 = load %"class.sksg::BlurImageFilter"*, %"class.sksg::BlurImageFilter"** %13, align 8
  %15 = getelementptr inbounds [3 x %struct.SkPoint], [3 x %struct.SkPoint]* @_ZZN7skottie8internal12_GLOBAL__N_125GaussianBlurEffectAdapter6onSyncEvE14kDimensionsMap, i64 0, i64 %9, i32 0
  %16 = load float, float* %15, align 8
  %17 = fmul float %12, %16
  %18 = getelementptr inbounds [3 x %struct.SkPoint], [3 x %struct.SkPoint]* @_ZZN7skottie8internal12_GLOBAL__N_125GaussianBlurEffectAdapter6onSyncEvE14kDimensionsMap, i64 0, i64 %9, i32 1
  %19 = load float, float* %18, align 4
  %20 = fmul float %12, %19
  %21 = getelementptr inbounds %"class.sksg::BlurImageFilter", %"class.sksg::BlurImageFilter"* %14, i64 0, i32 1, i32 0
  %22 = load float, float* %21, align 4
  %23 = fcmp oeq float %22, %17
  br i1 %23, label %24, label %28

24:                                               ; preds = %1
  %25 = getelementptr inbounds %"class.sksg::BlurImageFilter", %"class.sksg::BlurImageFilter"* %14, i64 0, i32 1, i32 1
  %26 = load float, float* %25, align 4
  %27 = fcmp oeq float %26, %20
  br i1 %27, label %32, label %28

28:                                               ; preds = %24, %1
  store float %17, float* %21, align 8
  %29 = getelementptr inbounds %"class.sksg::BlurImageFilter", %"class.sksg::BlurImageFilter"* %14, i64 0, i32 1, i32 1
  store float %20, float* %29, align 4
  %30 = bitcast %"class.sksg::BlurImageFilter"* %14 to %"class.sksg::Node"*
  tail call void @_ZN4sksg4Node10invalidateEb(%"class.sksg::Node"* %30, i1 zeroext true) #9
  %31 = load %"class.sksg::BlurImageFilter"*, %"class.sksg::BlurImageFilter"** %13, align 8
  br label %32

32:                                               ; preds = %24, %28
  %33 = phi %"class.sksg::BlurImageFilter"* [ %14, %24 ], [ %31, %28 ]
  %34 = getelementptr inbounds %"class.skottie::internal::(anonymous namespace)::GaussianBlurEffectAdapter", %"class.skottie::internal::(anonymous namespace)::GaussianBlurEffectAdapter"* %0, i64 0, i32 6
  %35 = load float, float* %34, align 8
  %36 = fptoui float %35 to i64
  %37 = icmp ne i64 %36, 0
  %38 = zext i1 %37 to i64
  %39 = getelementptr inbounds [2 x i32], [2 x i32]* @_ZZN7skottie8internal12_GLOBAL__N_125GaussianBlurEffectAdapter6onSyncEvE14kRepeatEdgeMap, i64 0, i64 %38
  %40 = getelementptr inbounds %"class.sksg::BlurImageFilter", %"class.sksg::BlurImageFilter"* %33, i64 0, i32 2
  %41 = load i32, i32* %40, align 8
  %42 = load i32, i32* %39, align 4
  %43 = icmp eq i32 %41, %42
  br i1 %43, label %46, label %44

44:                                               ; preds = %32
  store i32 %42, i32* %40, align 8
  %45 = bitcast %"class.sksg::BlurImageFilter"* %33 to %"class.sksg::Node"*
  tail call void @_ZN4sksg4Node10invalidateEb(%"class.sksg::Node"* %45, i1 zeroext true) #9
  br label %46

46:                                               ; preds = %32, %44
  ret void
}

; Function Attrs: nobuiltin nounwind
declare void @_ZdlPv(i8*) local_unnamed_addr #5

declare dereferenceable(8) %"class.skjson::Value"* @_ZN7skottie8internal13EffectBuilder12GetPropValueERKN6skjson10ArrayValueEm(%"class.skjson::ArrayValue"* dereferenceable(8), i64) local_unnamed_addr #3

declare zeroext i1 @_ZN7skottie8internal27AnimatablePropertyContainer4bindIfEEbRKNS0_16AnimationBuilderEPKN6skjson11ObjectValueEPT_(%"class.skottie::internal::AnimatablePropertyContainer"*, %"class.skottie::internal::AnimationBuilder"* dereferenceable(152), %"class.skjson::ObjectValue"*, float*) local_unnamed_addr #3

declare void @_ZN4sksg4Node10invalidateEb(%"class.sksg::Node"*, i1 zeroext) local_unnamed_addr #3

; Function Attrs: inlinehint nounwind ssp uwtable
define linkonce_odr hidden void @_ZNSt3__16vectorI5sk_spIN7skottie8internal8AnimatorEENS_9allocatorIS5_EEE21__push_back_slow_pathIS5_EEvOT_(%"class.std::__1::vector"*, %class.sk_sp.6* dereferenceable(8)) local_unnamed_addr #4 comdat align 2 {
  %3 = getelementptr inbounds %"class.std::__1::vector", %"class.std::__1::vector"* %0, i64 0, i32 0, i32 1
  %4 = bitcast %class.sk_sp.6** %3 to i64*
  %5 = load i64, i64* %4, align 8
  %6 = bitcast %"class.std::__1::vector"* %0 to i64*
  %7 = load i64, i64* %6, align 8
  %8 = sub i64 %5, %7
  %9 = ashr exact i64 %8, 3
  %10 = add nsw i64 %9, 1
  %11 = icmp ugt i64 %10, 2305843009213693951
  br i1 %11, label %12, label %14

12:                                               ; preds = %2
  %13 = bitcast %"class.std::__1::vector"* %0 to %"class.std::__1::__vector_base_common"*
  tail call void @_ZNKSt3__120__vector_base_commonILb1EE20__throw_length_errorEv(%"class.std::__1::__vector_base_common"* %13) #10
  unreachable

14:                                               ; preds = %2
  %15 = getelementptr inbounds %"class.std::__1::vector", %"class.std::__1::vector"* %0, i64 0, i32 0, i32 2, i32 0, i32 0
  %16 = bitcast %class.sk_sp.6** %15 to i64*
  %17 = load i64, i64* %16, align 8
  %18 = sub i64 %17, %7
  %19 = ashr exact i64 %18, 3
  %20 = icmp ult i64 %19, 1152921504606846975
  br i1 %20, label %21, label %29

21:                                               ; preds = %14
  %22 = ashr exact i64 %18, 2
  %23 = icmp ult i64 %22, %10
  %24 = select i1 %23, i64 %10, i64 %22
  %25 = icmp eq i64 %24, 0
  br i1 %25, label %34, label %26

26:                                               ; preds = %21
  %27 = icmp ugt i64 %24, 2305843009213693951
  br i1 %27, label %28, label %29

28:                                               ; preds = %26
  tail call void @abort() #10
  unreachable

29:                                               ; preds = %14, %26
  %30 = phi i64 [ %24, %26 ], [ 2305843009213693951, %14 ]
  %31 = shl i64 %30, 3
  %32 = tail call i8* @_Znwm(i64 %31) #8
  %33 = bitcast i8* %32 to %class.sk_sp.6*
  br label %34

34:                                               ; preds = %21, %29
  %35 = phi i64 [ %30, %29 ], [ 0, %21 ]
  %36 = phi %class.sk_sp.6* [ %33, %29 ], [ null, %21 ]
  %37 = getelementptr inbounds %class.sk_sp.6, %class.sk_sp.6* %36, i64 %9
  %38 = getelementptr inbounds %class.sk_sp.6, %class.sk_sp.6* %36, i64 %35
  %39 = ptrtoint %class.sk_sp.6* %38 to i64
  %40 = getelementptr inbounds %class.sk_sp.6, %class.sk_sp.6* %1, i64 0, i32 0
  %41 = bitcast %class.sk_sp.6* %1 to i64*
  %42 = load i64, i64* %41, align 8
  store %"class.skottie::internal::Animator"* null, %"class.skottie::internal::Animator"** %40, align 8
  %43 = bitcast %class.sk_sp.6* %37 to i64*
  store i64 %42, i64* %43, align 8
  %44 = getelementptr inbounds %class.sk_sp.6, %class.sk_sp.6* %37, i64 1
  %45 = ptrtoint %class.sk_sp.6* %44 to i64
  %46 = getelementptr inbounds %"class.std::__1::vector", %"class.std::__1::vector"* %0, i64 0, i32 0, i32 0
  %47 = load %class.sk_sp.6*, %class.sk_sp.6** %46, align 8
  %48 = ptrtoint %class.sk_sp.6* %47 to i64
  %49 = load %class.sk_sp.6*, %class.sk_sp.6** %3, align 8
  %50 = icmp eq %class.sk_sp.6* %49, %47
  br i1 %50, label %132, label %51

51:                                               ; preds = %34
  %52 = getelementptr %class.sk_sp.6, %class.sk_sp.6* %49, i64 -1, i32 0
  %53 = ptrtoint %"class.skottie::internal::Animator"** %52 to i64
  %54 = sub i64 %53, %48
  %55 = lshr i64 %54, 3
  %56 = add nuw nsw i64 %55, 1
  %57 = and i64 %56, 7
  %58 = icmp eq i64 %57, 0
  br i1 %58, label %71, label %59

59:                                               ; preds = %51, %59
  %60 = phi %class.sk_sp.6* [ %63, %59 ], [ %37, %51 ]
  %61 = phi %class.sk_sp.6* [ %64, %59 ], [ %49, %51 ]
  %62 = phi i64 [ %69, %59 ], [ %57, %51 ]
  %63 = getelementptr inbounds %class.sk_sp.6, %class.sk_sp.6* %60, i64 -1
  %64 = getelementptr inbounds %class.sk_sp.6, %class.sk_sp.6* %61, i64 -1
  %65 = getelementptr inbounds %class.sk_sp.6, %class.sk_sp.6* %64, i64 0, i32 0
  %66 = bitcast %class.sk_sp.6* %64 to i64*
  %67 = load i64, i64* %66, align 8
  store %"class.skottie::internal::Animator"* null, %"class.skottie::internal::Animator"** %65, align 8
  %68 = bitcast %class.sk_sp.6* %63 to i64*
  store i64 %67, i64* %68, align 8
  %69 = add i64 %62, -1
  %70 = icmp eq i64 %69, 0
  br i1 %70, label %71, label %59, !llvm.loop !9

71:                                               ; preds = %59, %51
  %72 = phi %class.sk_sp.6* [ undef, %51 ], [ %63, %59 ]
  %73 = phi %class.sk_sp.6* [ %37, %51 ], [ %63, %59 ]
  %74 = phi %class.sk_sp.6* [ %49, %51 ], [ %64, %59 ]
  %75 = icmp ult i64 %54, 56
  br i1 %75, label %128, label %76

76:                                               ; preds = %71, %76
  %77 = phi %class.sk_sp.6* [ %121, %76 ], [ %73, %71 ]
  %78 = phi %class.sk_sp.6* [ %122, %76 ], [ %74, %71 ]
  %79 = getelementptr inbounds %class.sk_sp.6, %class.sk_sp.6* %77, i64 -1
  %80 = getelementptr inbounds %class.sk_sp.6, %class.sk_sp.6* %78, i64 -1
  %81 = getelementptr inbounds %class.sk_sp.6, %class.sk_sp.6* %80, i64 0, i32 0
  %82 = bitcast %class.sk_sp.6* %80 to i64*
  %83 = load i64, i64* %82, align 8
  store %"class.skottie::internal::Animator"* null, %"class.skottie::internal::Animator"** %81, align 8
  %84 = bitcast %class.sk_sp.6* %79 to i64*
  store i64 %83, i64* %84, align 8
  %85 = getelementptr inbounds %class.sk_sp.6, %class.sk_sp.6* %77, i64 -2
  %86 = getelementptr inbounds %class.sk_sp.6, %class.sk_sp.6* %78, i64 -2
  %87 = getelementptr inbounds %class.sk_sp.6, %class.sk_sp.6* %86, i64 0, i32 0
  %88 = bitcast %class.sk_sp.6* %86 to i64*
  %89 = load i64, i64* %88, align 8
  store %"class.skottie::internal::Animator"* null, %"class.skottie::internal::Animator"** %87, align 8
  %90 = bitcast %class.sk_sp.6* %85 to i64*
  store i64 %89, i64* %90, align 8
  %91 = getelementptr inbounds %class.sk_sp.6, %class.sk_sp.6* %77, i64 -3
  %92 = getelementptr inbounds %class.sk_sp.6, %class.sk_sp.6* %78, i64 -3
  %93 = getelementptr inbounds %class.sk_sp.6, %class.sk_sp.6* %92, i64 0, i32 0
  %94 = bitcast %class.sk_sp.6* %92 to i64*
  %95 = load i64, i64* %94, align 8
  store %"class.skottie::internal::Animator"* null, %"class.skottie::internal::Animator"** %93, align 8
  %96 = bitcast %class.sk_sp.6* %91 to i64*
  store i64 %95, i64* %96, align 8
  %97 = getelementptr inbounds %class.sk_sp.6, %class.sk_sp.6* %77, i64 -4
  %98 = getelementptr inbounds %class.sk_sp.6, %class.sk_sp.6* %78, i64 -4
  %99 = getelementptr inbounds %class.sk_sp.6, %class.sk_sp.6* %98, i64 0, i32 0
  %100 = bitcast %class.sk_sp.6* %98 to i64*
  %101 = load i64, i64* %100, align 8
  store %"class.skottie::internal::Animator"* null, %"class.skottie::internal::Animator"** %99, align 8
  %102 = bitcast %class.sk_sp.6* %97 to i64*
  store i64 %101, i64* %102, align 8
  %103 = getelementptr inbounds %class.sk_sp.6, %class.sk_sp.6* %77, i64 -5
  %104 = getelementptr inbounds %class.sk_sp.6, %class.sk_sp.6* %78, i64 -5
  %105 = getelementptr inbounds %class.sk_sp.6, %class.sk_sp.6* %104, i64 0, i32 0
  %106 = bitcast %class.sk_sp.6* %104 to i64*
  %107 = load i64, i64* %106, align 8
  store %"class.skottie::internal::Animator"* null, %"class.skottie::internal::Animator"** %105, align 8
  %108 = bitcast %class.sk_sp.6* %103 to i64*
  store i64 %107, i64* %108, align 8
  %109 = getelementptr inbounds %class.sk_sp.6, %class.sk_sp.6* %77, i64 -6
  %110 = getelementptr inbounds %class.sk_sp.6, %class.sk_sp.6* %78, i64 -6
  %111 = getelementptr inbounds %class.sk_sp.6, %class.sk_sp.6* %110, i64 0, i32 0
  %112 = bitcast %class.sk_sp.6* %110 to i64*
  %113 = load i64, i64* %112, align 8
  store %"class.skottie::internal::Animator"* null, %"class.skottie::internal::Animator"** %111, align 8
  %114 = bitcast %class.sk_sp.6* %109 to i64*
  store i64 %113, i64* %114, align 8
  %115 = getelementptr inbounds %class.sk_sp.6, %class.sk_sp.6* %77, i64 -7
  %116 = getelementptr inbounds %class.sk_sp.6, %class.sk_sp.6* %78, i64 -7
  %117 = getelementptr inbounds %class.sk_sp.6, %class.sk_sp.6* %116, i64 0, i32 0
  %118 = bitcast %class.sk_sp.6* %116 to i64*
  %119 = load i64, i64* %118, align 8
  store %"class.skottie::internal::Animator"* null, %"class.skottie::internal::Animator"** %117, align 8
  %120 = bitcast %class.sk_sp.6* %115 to i64*
  store i64 %119, i64* %120, align 8
  %121 = getelementptr inbounds %class.sk_sp.6, %class.sk_sp.6* %77, i64 -8
  %122 = getelementptr inbounds %class.sk_sp.6, %class.sk_sp.6* %78, i64 -8
  %123 = getelementptr inbounds %class.sk_sp.6, %class.sk_sp.6* %122, i64 0, i32 0
  %124 = bitcast %class.sk_sp.6* %122 to i64*
  %125 = load i64, i64* %124, align 8
  store %"class.skottie::internal::Animator"* null, %"class.skottie::internal::Animator"** %123, align 8
  %126 = bitcast %class.sk_sp.6* %121 to i64*
  store i64 %125, i64* %126, align 8
  %127 = icmp eq %class.sk_sp.6* %122, %47
  br i1 %127, label %128, label %76

128:                                              ; preds = %76, %71
  %129 = phi %class.sk_sp.6* [ %72, %71 ], [ %121, %76 ]
  %130 = load i64, i64* %6, align 8
  %131 = load %class.sk_sp.6*, %class.sk_sp.6** %3, align 8
  br label %132

132:                                              ; preds = %34, %128
  %133 = phi %class.sk_sp.6* [ %131, %128 ], [ %47, %34 ]
  %134 = phi %class.sk_sp.6* [ %129, %128 ], [ %37, %34 ]
  %135 = phi i64 [ %130, %128 ], [ %48, %34 ]
  %136 = ptrtoint %class.sk_sp.6* %134 to i64
  store i64 %136, i64* %6, align 8
  store i64 %45, i64* %4, align 8
  store i64 %39, i64* %16, align 8
  %137 = inttoptr i64 %135 to %class.sk_sp.6*
  %138 = icmp eq %class.sk_sp.6* %133, %137
  br i1 %138, label %157, label %139

139:                                              ; preds = %132, %155
  %140 = phi %class.sk_sp.6* [ %141, %155 ], [ %133, %132 ]
  %141 = getelementptr inbounds %class.sk_sp.6, %class.sk_sp.6* %140, i64 -1
  %142 = getelementptr inbounds %class.sk_sp.6, %class.sk_sp.6* %141, i64 0, i32 0
  %143 = load %"class.skottie::internal::Animator"*, %"class.skottie::internal::Animator"** %142, align 8
  %144 = icmp eq %"class.skottie::internal::Animator"* %143, null
  br i1 %144, label %155, label %145

145:                                              ; preds = %139
  %146 = getelementptr inbounds %"class.skottie::internal::Animator", %"class.skottie::internal::Animator"* %143, i64 0, i32 0, i32 0, i32 1, i32 0, i32 0, i32 0, i32 0, i32 0
  %147 = atomicrmw add i32* %146, i32 -1 acq_rel
  %148 = icmp eq i32 %147, 1
  br i1 %148, label %149, label %155

149:                                              ; preds = %145
  %150 = bitcast %"class.skottie::internal::Animator"* %143 to %class.SkRefCntBase*
  %151 = bitcast %"class.skottie::internal::Animator"* %143 to void (%class.SkRefCntBase*)***
  %152 = load void (%class.SkRefCntBase*)**, void (%class.SkRefCntBase*)*** %151, align 8
  %153 = getelementptr inbounds void (%class.SkRefCntBase*)*, void (%class.SkRefCntBase*)** %152, i64 2
  %154 = load void (%class.SkRefCntBase*)*, void (%class.SkRefCntBase*)** %153, align 8
  tail call void %154(%class.SkRefCntBase* nonnull %150) #9
  br label %155

155:                                              ; preds = %149, %145, %139
  %156 = icmp eq %class.sk_sp.6* %141, %137
  br i1 %156, label %157, label %139

157:                                              ; preds = %155, %132
  %158 = icmp eq i64 %135, 0
  br i1 %158, label %161, label %159

159:                                              ; preds = %157
  %160 = inttoptr i64 %135 to i8*
  tail call void @_ZdlPv(i8* %160) #8
  br label %161

161:                                              ; preds = %157, %159
  ret void
}

; Function Attrs: argmemonly nounwind
declare void @llvm.memset.p0i8.i64(i8* nocapture writeonly, i8, i64, i1 immarg) #1

; Function Attrs: noreturn
declare void @_ZNKSt3__120__vector_base_commonILb1EE20__throw_length_errorEv(%"class.std::__1::__vector_base_common"*) local_unnamed_addr #6

; Function Attrs: noreturn nounwind
declare void @abort() local_unnamed_addr #7

attributes #0 = { nounwind ssp uwtable "correctly-rounded-divide-sqrt-fp-math"="false" "disable-tail-calls"="false" "less-precise-fpmad"="false" "min-legal-vector-width"="0" "no-frame-pointer-elim"="false" "no-frame-pointer-elim-non-leaf" "no-infs-fp-math"="false" "no-jump-tables"="false" "no-nans-fp-math"="false" "no-signed-zeros-fp-math"="false" "no-trapping-math"="false" "null-pointer-is-valid"="true" "stack-protector-buffer-size"="4" "target-cpu"="x86-64" "target-features"="+cx8,+fxsr,+mmx,+sse,+sse2,+sse3,+x87" "unsafe-fp-math"="false" "use-soft-float"="false" }
attributes #1 = { argmemonly nounwind }
attributes #2 = { nobuiltin nofree "correctly-rounded-divide-sqrt-fp-math"="false" "disable-tail-calls"="false" "less-precise-fpmad"="false" "no-frame-pointer-elim"="false" "no-frame-pointer-elim-non-leaf" "no-infs-fp-math"="false" "no-nans-fp-math"="false" "no-signed-zeros-fp-math"="false" "no-trapping-math"="false" "null-pointer-is-valid"="true" "stack-protector-buffer-size"="4" "target-cpu"="x86-64" "target-features"="+cx8,+fxsr,+mmx,+sse,+sse2,+sse3,+x87" "unsafe-fp-math"="false" "use-soft-float"="false" }
attributes #3 = { "correctly-rounded-divide-sqrt-fp-math"="false" "disable-tail-calls"="false" "less-precise-fpmad"="false" "no-frame-pointer-elim"="false" "no-frame-pointer-elim-non-leaf" "no-infs-fp-math"="false" "no-nans-fp-math"="false" "no-signed-zeros-fp-math"="false" "no-trapping-math"="false" "null-pointer-is-valid"="true" "stack-protector-buffer-size"="4" "target-cpu"="x86-64" "target-features"="+cx8,+fxsr,+mmx,+sse,+sse2,+sse3,+x87" "unsafe-fp-math"="false" "use-soft-float"="false" }
attributes #4 = { inlinehint nounwind ssp uwtable "correctly-rounded-divide-sqrt-fp-math"="false" "disable-tail-calls"="false" "less-precise-fpmad"="false" "min-legal-vector-width"="0" "no-frame-pointer-elim"="false" "no-frame-pointer-elim-non-leaf" "no-infs-fp-math"="false" "no-jump-tables"="false" "no-nans-fp-math"="false" "no-signed-zeros-fp-math"="false" "no-trapping-math"="false" "null-pointer-is-valid"="true" "stack-protector-buffer-size"="4" "target-cpu"="x86-64" "target-features"="+cx8,+fxsr,+mmx,+sse,+sse2,+sse3,+x87" "unsafe-fp-math"="false" "use-soft-float"="false" }
attributes #5 = { nobuiltin nounwind "correctly-rounded-divide-sqrt-fp-math"="false" "disable-tail-calls"="false" "less-precise-fpmad"="false" "no-frame-pointer-elim"="false" "no-frame-pointer-elim-non-leaf" "no-infs-fp-math"="false" "no-nans-fp-math"="false" "no-signed-zeros-fp-math"="false" "no-trapping-math"="false" "null-pointer-is-valid"="true" "stack-protector-buffer-size"="4" "target-cpu"="x86-64" "target-features"="+cx8,+fxsr,+mmx,+sse,+sse2,+sse3,+x87" "unsafe-fp-math"="false" "use-soft-float"="false" }
attributes #6 = { noreturn "correctly-rounded-divide-sqrt-fp-math"="false" "disable-tail-calls"="false" "less-precise-fpmad"="false" "no-frame-pointer-elim"="false" "no-frame-pointer-elim-non-leaf" "no-infs-fp-math"="false" "no-nans-fp-math"="false" "no-signed-zeros-fp-math"="false" "no-trapping-math"="false" "null-pointer-is-valid"="true" "stack-protector-buffer-size"="4" "target-cpu"="x86-64" "target-features"="+cx8,+fxsr,+mmx,+sse,+sse2,+sse3,+x87" "unsafe-fp-math"="false" "use-soft-float"="false" }
attributes #7 = { noreturn nounwind "correctly-rounded-divide-sqrt-fp-math"="false" "disable-tail-calls"="false" "less-precise-fpmad"="false" "no-frame-pointer-elim"="false" "no-frame-pointer-elim-non-leaf" "no-infs-fp-math"="false" "no-nans-fp-math"="false" "no-signed-zeros-fp-math"="false" "no-trapping-math"="false" "null-pointer-is-valid"="true" "stack-protector-buffer-size"="4" "target-cpu"="x86-64" "target-features"="+cx8,+fxsr,+mmx,+sse,+sse2,+sse3,+x87" "unsafe-fp-math"="false" "use-soft-float"="false" }
attributes #8 = { builtin nounwind }
attributes #9 = { nounwind }
attributes #10 = { noreturn nounwind }

!llvm.module.flags = !{!0, !1}

!0 = !{i32 1, !"wchar_size", i32 4}
!1 = !{i32 7, !"PIC Level", i32 2}
!2 = !{!3}
!3 = distinct !{!3, !4, !"_ZNK7skottie8internal16AnimationBuilder24attachDiscardableAdapterINS0_12_GLOBAL__N_125GaussianBlurEffectAdapterEJRKN6skjson10ArrayValueE5sk_spIN4sksg10RenderNodeEERKPKS1_EEENSt3__15decayIDTclptclsrT_4Makespclsr3stdE7forwardIT0_Efp_EE4nodeEEE4typeEDpOSK_: argument 0"}
!4 = distinct !{!4, !"_ZNK7skottie8internal16AnimationBuilder24attachDiscardableAdapterINS0_12_GLOBAL__N_125GaussianBlurEffectAdapterEJRKN6skjson10ArrayValueE5sk_spIN4sksg10RenderNodeEERKPKS1_EEENSt3__15decayIDTclptclsrT_4Makespclsr3stdE7forwardIT0_Efp_EE4nodeEEE4typeEDpOSK_"}
!5 = !{!6, !3}
!6 = distinct !{!6, !7, !"_ZN7skottie8internal12_GLOBAL__N_125GaussianBlurEffectAdapter4MakeERKN6skjson10ArrayValueE5sk_spIN4sksg10RenderNodeEEPKNS0_16AnimationBuilderE: argument 0"}
!7 = distinct !{!7, !"_ZN7skottie8internal12_GLOBAL__N_125GaussianBlurEffectAdapter4MakeERKN6skjson10ArrayValueE5sk_spIN4sksg10RenderNodeEEPKNS0_16AnimationBuilderE"}
!8 = !{!6}
!9 = distinct !{!9, !10}
!10 = !{!"llvm.loop.unroll.disable"}
