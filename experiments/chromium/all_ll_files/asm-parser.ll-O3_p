; ModuleID = '../../v8/src/asmjs/asm-parser.cc'
source_filename = "../../v8/src/asmjs/asm-parser.cc"
target datalayout = "e-m:e-i64:64-f80:128-n8:16:32:64-S128"
target triple = "x86_64-unknown-linux-gnu"

module asm ".symver exp, exp@GLIBC_2.2.5"
module asm ".symver exp2, exp2@GLIBC_2.2.5"
module asm ".symver exp2f, exp2f@GLIBC_2.2.5"
module asm ".symver expf, expf@GLIBC_2.2.5"
module asm ".symver lgamma, lgamma@GLIBC_2.2.5"
module asm ".symver lgammaf, lgammaf@GLIBC_2.2.5"
module asm ".symver lgammal, lgammal@GLIBC_2.2.5"
module asm ".symver log, log@GLIBC_2.2.5"
module asm ".symver log2, log2@GLIBC_2.2.5"
module asm ".symver log2f, log2f@GLIBC_2.2.5"
module asm ".symver logf, logf@GLIBC_2.2.5"
module asm ".symver pow, pow@GLIBC_2.2.5"
module asm ".symver powf, powf@GLIBC_2.2.5"

%"struct.std::__1::piecewise_construct_t" = type { i8 }
%"class.v8::internal::wasm::AsmJsParser" = type { %"class.v8::internal::Zone"*, %"class.v8::internal::AsmJsScanner", %"class.v8::internal::wasm::WasmModuleBuilder"*, %"class.v8::internal::wasm::WasmFunctionBuilder"*, %"class.v8::internal::wasm::AsmType"*, i64, %"class.v8::base::EnumSet", %"class.v8::internal::Vector.160", %"class.v8::internal::Vector.160", i64, %"class.v8::internal::wasm::AsmJsParser::CachedVectors", %"class.v8::internal::wasm::AsmJsParser::CachedVectors.175", %"class.v8::internal::wasm::AsmJsParser::CachedVectors.190", %"class.v8::internal::wasm::AsmJsParser::CachedVectors.190", i32, i32, i32, i8, i8*, i32, i32, i32, i32, i8, %"class.v8::internal::wasm::AsmType"*, %"class.v8::internal::ZoneVector.198", %"class.v8::internal::wasm::AsmType"*, %"class.v8::internal::wasm::AsmType"*, %"class.v8::internal::wasm::AsmType"*, %"class.v8::internal::wasm::AsmType"*, %"class.v8::internal::wasm::AsmType"*, %"class.v8::internal::wasm::AsmType"*, %"class.v8::internal::wasm::AsmType"*, %"class.v8::internal::wasm::AsmType"*, %"class.v8::internal::wasm::AsmType"*, i64, %"class.v8::internal::wasm::AsmType"*, i64, i64, i32, i32, %"class.v8::internal::ZoneLinkedList" }
%"class.v8::internal::AsmJsScanner" = type <{ %"class.v8::internal::Utf16CharacterStream"*, i32, i32, i32, [4 x i8], i64, i64, i64, i8, [7 x i8], %"class.std::__1::basic_string", i8, [7 x i8], %"class.std::__1::unordered_map", %"class.std::__1::unordered_map", %"class.std::__1::unordered_map", i32, [4 x i8], double, i32, i8, [3 x i8] }>
%"class.std::__1::basic_string" = type { %"class.std::__1::__compressed_pair.19" }
%"class.std::__1::__compressed_pair.19" = type { %"struct.std::__1::__compressed_pair_elem.20" }
%"struct.std::__1::__compressed_pair_elem.20" = type { %"struct.std::__1::basic_string<char, std::__1::char_traits<char>, std::__1::allocator<char> >::__rep" }
%"struct.std::__1::basic_string<char, std::__1::char_traits<char>, std::__1::allocator<char> >::__rep" = type { %union.anon }
%union.anon = type { %"struct.std::__1::basic_string<char, std::__1::char_traits<char>, std::__1::allocator<char> >::__long" }
%"struct.std::__1::basic_string<char, std::__1::char_traits<char>, std::__1::allocator<char> >::__long" = type { i8*, i64, i64 }
%"class.std::__1::unordered_map" = type { %"class.std::__1::__hash_table" }
%"class.std::__1::__hash_table" = type <{ %"class.std::__1::unique_ptr.24", %"class.std::__1::__compressed_pair.32", %"class.std::__1::__compressed_pair.37", %"class.std::__1::__compressed_pair.39", [4 x i8] }>
%"class.std::__1::unique_ptr.24" = type { %"class.std::__1::__compressed_pair.25" }
%"class.std::__1::__compressed_pair.25" = type { %"struct.std::__1::__compressed_pair_elem.26", %"struct.std::__1::__compressed_pair_elem.27" }
%"struct.std::__1::__compressed_pair_elem.26" = type { %"struct.std::__1::__hash_node_base"** }
%"struct.std::__1::__hash_node_base" = type { %"struct.std::__1::__hash_node_base"* }
%"struct.std::__1::__compressed_pair_elem.27" = type { %"class.std::__1::__bucket_list_deallocator" }
%"class.std::__1::__bucket_list_deallocator" = type { %"class.std::__1::__compressed_pair.28" }
%"class.std::__1::__compressed_pair.28" = type { %"struct.std::__1::__compressed_pair_elem.9" }
%"struct.std::__1::__compressed_pair_elem.9" = type { i64 }
%"class.std::__1::__compressed_pair.32" = type { %"struct.std::__1::__compressed_pair_elem.33" }
%"struct.std::__1::__compressed_pair_elem.33" = type { %"struct.std::__1::__hash_node_base" }
%"class.std::__1::__compressed_pair.37" = type { %"struct.std::__1::__compressed_pair_elem.9" }
%"class.std::__1::__compressed_pair.39" = type { %"struct.std::__1::__compressed_pair_elem.40" }
%"struct.std::__1::__compressed_pair_elem.40" = type { float }
%"class.v8::internal::wasm::WasmModuleBuilder" = type <{ %"class.v8::internal::Zone"*, %"class.v8::internal::ZoneVector", %"class.v8::internal::ZoneVector.46", %"class.v8::internal::ZoneVector.53", %"class.v8::internal::ZoneVector.60", %"class.v8::internal::ZoneVector.67", %"class.v8::internal::ZoneVector.95", %"class.v8::internal::ZoneVector.108", %"class.v8::internal::ZoneVector.77", %"class.v8::internal::ZoneVector.122", %"class.v8::internal::ZoneVector.129", %"class.v8::internal::ZoneUnorderedMap", i32, i32, i32, i32, i8, i8, [6 x i8] }>
%"class.v8::internal::ZoneVector" = type { %"class.std::__1::vector" }
%"class.std::__1::vector" = type { %"class.std::__1::__vector_base" }
%"class.std::__1::__vector_base" = type { %"struct.v8::internal::wasm::WasmModuleBuilder::Type"*, %"struct.v8::internal::wasm::WasmModuleBuilder::Type"*, %"class.std::__1::__compressed_pair.43" }
%"struct.v8::internal::wasm::WasmModuleBuilder::Type" = type { i32, %union.anon.42 }
%union.anon.42 = type { %"class.v8::internal::Signature"* }
%"class.v8::internal::Signature" = type { i64, i64, %"class.v8::internal::wasm::ValueType"* }
%"class.v8::internal::wasm::ValueType" = type { i32 }
%"class.std::__1::__compressed_pair.43" = type { %"struct.std::__1::__compressed_pair_elem.44", %"struct.std::__1::__compressed_pair_elem.45" }
%"struct.std::__1::__compressed_pair_elem.44" = type { %"struct.v8::internal::wasm::WasmModuleBuilder::Type"* }
%"struct.std::__1::__compressed_pair_elem.45" = type { %"class.v8::internal::ZoneAllocator" }
%"class.v8::internal::ZoneAllocator" = type { %"class.v8::internal::Zone"* }
%"class.v8::internal::ZoneVector.46" = type { %"class.std::__1::vector.47" }
%"class.std::__1::vector.47" = type { %"class.std::__1::__vector_base.48" }
%"class.std::__1::__vector_base.48" = type { %"struct.v8::internal::wasm::WasmModuleBuilder::WasmFunctionImport"*, %"struct.v8::internal::wasm::WasmModuleBuilder::WasmFunctionImport"*, %"class.std::__1::__compressed_pair.49" }
%"struct.v8::internal::wasm::WasmModuleBuilder::WasmFunctionImport" = type <{ %"class.v8::internal::Vector", %"class.v8::internal::Vector", i32, [4 x i8] }>
%"class.v8::internal::Vector" = type { i8*, i64 }
%"class.std::__1::__compressed_pair.49" = type { %"struct.std::__1::__compressed_pair_elem.50", %"struct.std::__1::__compressed_pair_elem.51" }
%"struct.std::__1::__compressed_pair_elem.50" = type { %"struct.v8::internal::wasm::WasmModuleBuilder::WasmFunctionImport"* }
%"struct.std::__1::__compressed_pair_elem.51" = type { %"class.v8::internal::ZoneAllocator.52" }
%"class.v8::internal::ZoneAllocator.52" = type { %"class.v8::internal::Zone"* }
%"class.v8::internal::ZoneVector.53" = type { %"class.std::__1::vector.54" }
%"class.std::__1::vector.54" = type { %"class.std::__1::__vector_base.55" }
%"class.std::__1::__vector_base.55" = type { %"struct.v8::internal::wasm::WasmModuleBuilder::WasmGlobalImport"*, %"struct.v8::internal::wasm::WasmModuleBuilder::WasmGlobalImport"*, %"class.std::__1::__compressed_pair.56" }
%"struct.v8::internal::wasm::WasmModuleBuilder::WasmGlobalImport" = type <{ %"class.v8::internal::Vector", %"class.v8::internal::Vector", i8, i8, [6 x i8] }>
%"class.std::__1::__compressed_pair.56" = type { %"struct.std::__1::__compressed_pair_elem.57", %"struct.std::__1::__compressed_pair_elem.58" }
%"struct.std::__1::__compressed_pair_elem.57" = type { %"struct.v8::internal::wasm::WasmModuleBuilder::WasmGlobalImport"* }
%"struct.std::__1::__compressed_pair_elem.58" = type { %"class.v8::internal::ZoneAllocator.59" }
%"class.v8::internal::ZoneAllocator.59" = type { %"class.v8::internal::Zone"* }
%"class.v8::internal::ZoneVector.60" = type { %"class.std::__1::vector.61" }
%"class.std::__1::vector.61" = type { %"class.std::__1::__vector_base.62" }
%"class.std::__1::__vector_base.62" = type { %"struct.v8::internal::wasm::WasmModuleBuilder::WasmExport"*, %"struct.v8::internal::wasm::WasmModuleBuilder::WasmExport"*, %"class.std::__1::__compressed_pair.63" }
%"struct.v8::internal::wasm::WasmModuleBuilder::WasmExport" = type { %"class.v8::internal::Vector", i8, i32 }
%"class.std::__1::__compressed_pair.63" = type { %"struct.std::__1::__compressed_pair_elem.64", %"struct.std::__1::__compressed_pair_elem.65" }
%"struct.std::__1::__compressed_pair_elem.64" = type { %"struct.v8::internal::wasm::WasmModuleBuilder::WasmExport"* }
%"struct.std::__1::__compressed_pair_elem.65" = type { %"class.v8::internal::ZoneAllocator.66" }
%"class.v8::internal::ZoneAllocator.66" = type { %"class.v8::internal::Zone"* }
%"class.v8::internal::ZoneVector.67" = type { %"class.std::__1::vector.68" }
%"class.std::__1::vector.68" = type { %"class.std::__1::__vector_base.69" }
%"class.std::__1::__vector_base.69" = type { %"class.v8::internal::wasm::WasmFunctionBuilder"**, %"class.v8::internal::wasm::WasmFunctionBuilder"**, %"class.std::__1::__compressed_pair.91" }
%"class.std::__1::__compressed_pair.91" = type { %"struct.std::__1::__compressed_pair_elem.92", %"struct.std::__1::__compressed_pair_elem.93" }
%"struct.std::__1::__compressed_pair_elem.92" = type { %"class.v8::internal::wasm::WasmFunctionBuilder"** }
%"struct.std::__1::__compressed_pair_elem.93" = type { %"class.v8::internal::ZoneAllocator.94" }
%"class.v8::internal::ZoneAllocator.94" = type { %"class.v8::internal::Zone"* }
%"class.v8::internal::ZoneVector.95" = type { %"class.std::__1::vector.96" }
%"class.std::__1::vector.96" = type { %"class.std::__1::__vector_base.97" }
%"class.std::__1::__vector_base.97" = type { %"struct.v8::internal::wasm::WasmModuleBuilder::WasmTable"*, %"struct.v8::internal::wasm::WasmModuleBuilder::WasmTable"*, %"class.std::__1::__compressed_pair.104" }
%"struct.v8::internal::wasm::WasmModuleBuilder::WasmTable" = type { %"class.v8::internal::wasm::ValueType", i32, i32, i8, %"class.v8::internal::wasm::WasmInitExpr" }
%"class.v8::internal::wasm::WasmInitExpr" = type { %"union.v8::internal::wasm::WasmInitExpr::Immediate", i32, %"class.std::__1::unique_ptr.98" }
%"union.v8::internal::wasm::WasmInitExpr::Immediate" = type { i64, [8 x i8] }
%"class.std::__1::unique_ptr.98" = type { %"class.std::__1::__compressed_pair.99" }
%"class.std::__1::__compressed_pair.99" = type { %"struct.std::__1::__compressed_pair_elem.100" }
%"struct.std::__1::__compressed_pair_elem.100" = type { %"class.v8::internal::wasm::WasmInitExpr"* }
%"class.std::__1::__compressed_pair.104" = type { %"struct.std::__1::__compressed_pair_elem.105", %"struct.std::__1::__compressed_pair_elem.106" }
%"struct.std::__1::__compressed_pair_elem.105" = type { %"struct.v8::internal::wasm::WasmModuleBuilder::WasmTable"* }
%"struct.std::__1::__compressed_pair_elem.106" = type { %"class.v8::internal::ZoneAllocator.107" }
%"class.v8::internal::ZoneAllocator.107" = type { %"class.v8::internal::Zone"* }
%"class.v8::internal::ZoneVector.108" = type { %"class.std::__1::vector.109" }
%"class.std::__1::vector.109" = type { %"class.std::__1::__vector_base.110" }
%"class.std::__1::__vector_base.110" = type { %"struct.v8::internal::wasm::WasmModuleBuilder::WasmDataSegment"*, %"struct.v8::internal::wasm::WasmModuleBuilder::WasmDataSegment"*, %"class.std::__1::__compressed_pair.118" }
%"struct.v8::internal::wasm::WasmModuleBuilder::WasmDataSegment" = type <{ %"class.v8::internal::ZoneVector.111", i32, [4 x i8] }>
%"class.v8::internal::ZoneVector.111" = type { %"class.std::__1::vector.112" }
%"class.std::__1::vector.112" = type { %"class.std::__1::__vector_base.113" }
%"class.std::__1::__vector_base.113" = type { i8*, i8*, %"class.std::__1::__compressed_pair.114" }
%"class.std::__1::__compressed_pair.114" = type { %"struct.std::__1::__compressed_pair_elem.115", %"struct.std::__1::__compressed_pair_elem.116" }
%"struct.std::__1::__compressed_pair_elem.115" = type { i8* }
%"struct.std::__1::__compressed_pair_elem.116" = type { %"class.v8::internal::ZoneAllocator.117" }
%"class.v8::internal::ZoneAllocator.117" = type { %"class.v8::internal::Zone"* }
%"class.std::__1::__compressed_pair.118" = type { %"struct.std::__1::__compressed_pair_elem.119", %"struct.std::__1::__compressed_pair_elem.120" }
%"struct.std::__1::__compressed_pair_elem.119" = type { %"struct.v8::internal::wasm::WasmModuleBuilder::WasmDataSegment"* }
%"struct.std::__1::__compressed_pair_elem.120" = type { %"class.v8::internal::ZoneAllocator.121" }
%"class.v8::internal::ZoneAllocator.121" = type { %"class.v8::internal::Zone"* }
%"class.v8::internal::ZoneVector.77" = type { %"class.std::__1::vector.78" }
%"class.std::__1::vector.78" = type { %"class.std::__1::__vector_base.79" }
%"class.std::__1::__vector_base.79" = type { i32*, i32*, %"class.std::__1::__compressed_pair.80" }
%"class.std::__1::__compressed_pair.80" = type { %"struct.std::__1::__compressed_pair_elem.81", %"struct.std::__1::__compressed_pair_elem.82" }
%"struct.std::__1::__compressed_pair_elem.81" = type { i32* }
%"struct.std::__1::__compressed_pair_elem.82" = type { %"class.v8::internal::ZoneAllocator.83" }
%"class.v8::internal::ZoneAllocator.83" = type { %"class.v8::internal::Zone"* }
%"class.v8::internal::ZoneVector.122" = type { %"class.std::__1::vector.123" }
%"class.std::__1::vector.123" = type { %"class.std::__1::__vector_base.124" }
%"class.std::__1::__vector_base.124" = type { %"struct.v8::internal::wasm::WasmModuleBuilder::WasmGlobal"*, %"struct.v8::internal::wasm::WasmModuleBuilder::WasmGlobal"*, %"class.std::__1::__compressed_pair.125" }
%"struct.v8::internal::wasm::WasmModuleBuilder::WasmGlobal" = type { %"class.v8::internal::wasm::ValueType", i8, %"class.v8::internal::wasm::WasmInitExpr" }
%"class.std::__1::__compressed_pair.125" = type { %"struct.std::__1::__compressed_pair_elem.126", %"struct.std::__1::__compressed_pair_elem.127" }
%"struct.std::__1::__compressed_pair_elem.126" = type { %"struct.v8::internal::wasm::WasmModuleBuilder::WasmGlobal"* }
%"struct.std::__1::__compressed_pair_elem.127" = type { %"class.v8::internal::ZoneAllocator.128" }
%"class.v8::internal::ZoneAllocator.128" = type { %"class.v8::internal::Zone"* }
%"class.v8::internal::ZoneVector.129" = type { %"class.std::__1::vector.130" }
%"class.std::__1::vector.130" = type { %"class.std::__1::__vector_base.131" }
%"class.std::__1::__vector_base.131" = type { i32*, i32*, %"class.std::__1::__compressed_pair.132" }
%"class.std::__1::__compressed_pair.132" = type { %"struct.std::__1::__compressed_pair_elem.133", %"struct.std::__1::__compressed_pair_elem.134" }
%"struct.std::__1::__compressed_pair_elem.133" = type { i32* }
%"struct.std::__1::__compressed_pair_elem.134" = type { %"class.v8::internal::ZoneAllocator.135" }
%"class.v8::internal::ZoneAllocator.135" = type { %"class.v8::internal::Zone"* }
%"class.v8::internal::ZoneUnorderedMap" = type { %"class.std::__1::unordered_map.136" }
%"class.std::__1::unordered_map.136" = type { %"class.std::__1::__hash_table.137" }
%"class.std::__1::__hash_table.137" = type <{ %"class.std::__1::unique_ptr.138", %"class.std::__1::__compressed_pair.147", %"class.std::__1::__compressed_pair.151", %"class.std::__1::__compressed_pair.154", [4 x i8] }>
%"class.std::__1::unique_ptr.138" = type { %"class.std::__1::__compressed_pair.139" }
%"class.std::__1::__compressed_pair.139" = type { %"struct.std::__1::__compressed_pair_elem.140", %"struct.std::__1::__compressed_pair_elem.142" }
%"struct.std::__1::__compressed_pair_elem.140" = type { %"struct.std::__1::__hash_node_base.141"** }
%"struct.std::__1::__hash_node_base.141" = type { %"struct.std::__1::__hash_node_base.141"* }
%"struct.std::__1::__compressed_pair_elem.142" = type { %"class.std::__1::__bucket_list_deallocator.143" }
%"class.std::__1::__bucket_list_deallocator.143" = type { %"class.std::__1::__compressed_pair.144" }
%"class.std::__1::__compressed_pair.144" = type { %"struct.std::__1::__compressed_pair_elem.9", %"struct.std::__1::__compressed_pair_elem.145" }
%"struct.std::__1::__compressed_pair_elem.145" = type { %"class.v8::internal::ZoneAllocator.146" }
%"class.v8::internal::ZoneAllocator.146" = type { %"class.v8::internal::Zone"* }
%"class.std::__1::__compressed_pair.147" = type { %"struct.std::__1::__compressed_pair_elem.148", %"struct.std::__1::__compressed_pair_elem.149" }
%"struct.std::__1::__compressed_pair_elem.148" = type { %"struct.std::__1::__hash_node_base.141" }
%"struct.std::__1::__compressed_pair_elem.149" = type { %"class.v8::internal::ZoneAllocator.150" }
%"class.v8::internal::ZoneAllocator.150" = type { %"class.v8::internal::Zone"* }
%"class.std::__1::__compressed_pair.151" = type { %"struct.std::__1::__compressed_pair_elem.9" }
%"class.std::__1::__compressed_pair.154" = type { %"struct.std::__1::__compressed_pair_elem.40" }
%"class.v8::internal::wasm::WasmFunctionBuilder" = type <{ %"class.v8::internal::wasm::WasmModuleBuilder"*, %"class.v8::internal::wasm::LocalDeclEncoder", i32, i32, %"class.v8::internal::wasm::ZoneBuffer", %"class.v8::internal::Vector", %"class.v8::internal::ZoneVector.77", %"class.v8::internal::ZoneVector.77", %"class.v8::internal::ZoneVector.77", %"class.v8::internal::ZoneVector.77", %"class.v8::internal::ZoneVector.84", %"class.v8::internal::wasm::ZoneBuffer", i32, i32, i32, i8, [3 x i8] }>
%"class.v8::internal::wasm::LocalDeclEncoder" = type { %"class.v8::internal::Signature"*, %"class.v8::internal::ZoneVector.70", i64 }
%"class.v8::internal::ZoneVector.70" = type { %"class.std::__1::vector.71" }
%"class.std::__1::vector.71" = type { %"class.std::__1::__vector_base.72" }
%"class.std::__1::__vector_base.72" = type { %"struct.std::__1::pair"*, %"struct.std::__1::pair"*, %"class.std::__1::__compressed_pair.73" }
%"struct.std::__1::pair" = type { i32, %"class.v8::internal::wasm::ValueType" }
%"class.std::__1::__compressed_pair.73" = type { %"struct.std::__1::__compressed_pair_elem.74", %"struct.std::__1::__compressed_pair_elem.75" }
%"struct.std::__1::__compressed_pair_elem.74" = type { %"struct.std::__1::pair"* }
%"struct.std::__1::__compressed_pair_elem.75" = type { %"class.v8::internal::ZoneAllocator.76" }
%"class.v8::internal::ZoneAllocator.76" = type { %"class.v8::internal::Zone"* }
%"class.v8::internal::ZoneVector.84" = type { %"class.std::__1::vector.85" }
%"class.std::__1::vector.85" = type { %"class.std::__1::__vector_base.86" }
%"class.std::__1::__vector_base.86" = type { %"struct.v8::internal::wasm::WasmFunctionBuilder::DirectCallIndex"*, %"struct.v8::internal::wasm::WasmFunctionBuilder::DirectCallIndex"*, %"class.std::__1::__compressed_pair.87" }
%"struct.v8::internal::wasm::WasmFunctionBuilder::DirectCallIndex" = type { i64, i32 }
%"class.std::__1::__compressed_pair.87" = type { %"struct.std::__1::__compressed_pair_elem.88", %"struct.std::__1::__compressed_pair_elem.89" }
%"struct.std::__1::__compressed_pair_elem.88" = type { %"struct.v8::internal::wasm::WasmFunctionBuilder::DirectCallIndex"* }
%"struct.std::__1::__compressed_pair_elem.89" = type { %"class.v8::internal::ZoneAllocator.90" }
%"class.v8::internal::ZoneAllocator.90" = type { %"class.v8::internal::Zone"* }
%"class.v8::internal::wasm::ZoneBuffer" = type { %"class.v8::internal::Zone"*, i8*, i8*, i8* }
%"class.v8::base::EnumSet" = type { i64 }
%"class.v8::internal::Vector.160" = type { %"struct.v8::internal::wasm::AsmJsParser::VarInfo"*, i64 }
%"struct.v8::internal::wasm::AsmJsParser::VarInfo" = type <{ %"class.v8::internal::wasm::AsmType"*, %"class.v8::internal::wasm::WasmFunctionBuilder"*, %"struct.v8::internal::wasm::AsmJsParser::FunctionImportInfo"*, i32, i32, i32, i8, i8, [2 x i8] }>
%"struct.v8::internal::wasm::AsmJsParser::FunctionImportInfo" = type { %"class.v8::internal::Vector", %"class.v8::internal::ZoneUnorderedMap" }
%"class.v8::internal::wasm::AsmJsParser::CachedVectors" = type { %"class.v8::internal::ZoneVector.161" }
%"class.v8::internal::ZoneVector.161" = type { %"class.std::__1::vector.162" }
%"class.std::__1::vector.162" = type { %"class.std::__1::__vector_base.163" }
%"class.std::__1::__vector_base.163" = type { %"class.v8::internal::ZoneVector.164"*, %"class.v8::internal::ZoneVector.164"*, %"class.std::__1::__compressed_pair.171" }
%"class.v8::internal::ZoneVector.164" = type { %"class.std::__1::vector.165" }
%"class.std::__1::vector.165" = type { %"class.std::__1::__vector_base.166" }
%"class.std::__1::__vector_base.166" = type { %"class.v8::internal::wasm::ValueType"*, %"class.v8::internal::wasm::ValueType"*, %"class.std::__1::__compressed_pair.167" }
%"class.std::__1::__compressed_pair.167" = type { %"struct.std::__1::__compressed_pair_elem.168", %"struct.std::__1::__compressed_pair_elem.169" }
%"struct.std::__1::__compressed_pair_elem.168" = type { %"class.v8::internal::wasm::ValueType"* }
%"struct.std::__1::__compressed_pair_elem.169" = type { %"class.v8::internal::ZoneAllocator.170" }
%"class.v8::internal::ZoneAllocator.170" = type { %"class.v8::internal::Zone"* }
%"class.std::__1::__compressed_pair.171" = type { %"struct.std::__1::__compressed_pair_elem.172", %"struct.std::__1::__compressed_pair_elem.173" }
%"struct.std::__1::__compressed_pair_elem.172" = type { %"class.v8::internal::ZoneVector.164"* }
%"struct.std::__1::__compressed_pair_elem.173" = type { %"class.v8::internal::ZoneAllocator.174" }
%"class.v8::internal::ZoneAllocator.174" = type { %"class.v8::internal::Zone"* }
%"class.v8::internal::wasm::AsmJsParser::CachedVectors.175" = type { %"class.v8::internal::ZoneVector.176" }
%"class.v8::internal::ZoneVector.176" = type { %"class.std::__1::vector.177" }
%"class.std::__1::vector.177" = type { %"class.std::__1::__vector_base.178" }
%"class.std::__1::__vector_base.178" = type { %"class.v8::internal::ZoneVector.179"*, %"class.v8::internal::ZoneVector.179"*, %"class.std::__1::__compressed_pair.186" }
%"class.v8::internal::ZoneVector.179" = type { %"class.std::__1::vector.180" }
%"class.std::__1::vector.180" = type { %"class.std::__1::__vector_base.181" }
%"class.std::__1::__vector_base.181" = type { %"class.v8::internal::wasm::AsmType"**, %"class.v8::internal::wasm::AsmType"**, %"class.std::__1::__compressed_pair.182" }
%"class.std::__1::__compressed_pair.182" = type { %"struct.std::__1::__compressed_pair_elem.183", %"struct.std::__1::__compressed_pair_elem.184" }
%"struct.std::__1::__compressed_pair_elem.183" = type { %"class.v8::internal::wasm::AsmType"** }
%"struct.std::__1::__compressed_pair_elem.184" = type { %"class.v8::internal::ZoneAllocator.185" }
%"class.v8::internal::ZoneAllocator.185" = type { %"class.v8::internal::Zone"* }
%"class.std::__1::__compressed_pair.186" = type { %"struct.std::__1::__compressed_pair_elem.187", %"struct.std::__1::__compressed_pair_elem.188" }
%"struct.std::__1::__compressed_pair_elem.187" = type { %"class.v8::internal::ZoneVector.179"* }
%"struct.std::__1::__compressed_pair_elem.188" = type { %"class.v8::internal::ZoneAllocator.189" }
%"class.v8::internal::ZoneAllocator.189" = type { %"class.v8::internal::Zone"* }
%"class.v8::internal::wasm::AsmJsParser::CachedVectors.190" = type { %"class.v8::internal::ZoneVector.191" }
%"class.v8::internal::ZoneVector.191" = type { %"class.std::__1::vector.192" }
%"class.std::__1::vector.192" = type { %"class.std::__1::__vector_base.193" }
%"class.std::__1::__vector_base.193" = type { %"class.v8::internal::ZoneVector.129"*, %"class.v8::internal::ZoneVector.129"*, %"class.std::__1::__compressed_pair.194" }
%"class.std::__1::__compressed_pair.194" = type { %"struct.std::__1::__compressed_pair_elem.195", %"struct.std::__1::__compressed_pair_elem.196" }
%"struct.std::__1::__compressed_pair_elem.195" = type { %"class.v8::internal::ZoneVector.129"* }
%"struct.std::__1::__compressed_pair_elem.196" = type { %"class.v8::internal::ZoneAllocator.197" }
%"class.v8::internal::ZoneAllocator.197" = type { %"class.v8::internal::Zone"* }
%"class.v8::internal::ZoneVector.198" = type { %"class.std::__1::vector.199" }
%"class.std::__1::vector.199" = type { %"class.std::__1::__vector_base.200" }
%"class.std::__1::__vector_base.200" = type { %"struct.v8::internal::wasm::AsmJsParser::BlockInfo"*, %"struct.v8::internal::wasm::AsmJsParser::BlockInfo"*, %"class.std::__1::__compressed_pair.201" }
%"struct.v8::internal::wasm::AsmJsParser::BlockInfo" = type { i32, i32 }
%"class.std::__1::__compressed_pair.201" = type { %"struct.std::__1::__compressed_pair_elem.202", %"struct.std::__1::__compressed_pair_elem.203" }
%"struct.std::__1::__compressed_pair_elem.202" = type { %"struct.v8::internal::wasm::AsmJsParser::BlockInfo"* }
%"struct.std::__1::__compressed_pair_elem.203" = type { %"class.v8::internal::ZoneAllocator.204" }
%"class.v8::internal::ZoneAllocator.204" = type { %"class.v8::internal::Zone"* }
%"class.v8::internal::wasm::AsmType" = type { i8 }
%"class.v8::internal::ZoneLinkedList" = type { %"class.std::__1::list" }
%"class.std::__1::list" = type { %"class.std::__1::__list_imp" }
%"class.std::__1::__list_imp" = type { %"struct.std::__1::__list_node_base", %"class.std::__1::__compressed_pair.205" }
%"struct.std::__1::__list_node_base" = type { %"struct.std::__1::__list_node_base"*, %"struct.std::__1::__list_node_base"* }
%"class.std::__1::__compressed_pair.205" = type { %"struct.std::__1::__compressed_pair_elem.9", %"struct.std::__1::__compressed_pair_elem.206" }
%"struct.std::__1::__compressed_pair_elem.206" = type { %"class.v8::internal::ZoneAllocator.207" }
%"class.v8::internal::ZoneAllocator.207" = type { %"class.v8::internal::Zone"* }
%"class.v8::internal::Zone" = type <{ i64, i64, i64, i64, %"class.v8::internal::AccountingAllocator"*, %"class.v8::internal::Segment"*, i8*, i8, i8, [6 x i8] }>
%"class.v8::internal::AccountingAllocator" = type { i32 (...)**, %"struct.std::__1::atomic", %"struct.std::__1::atomic", %"class.std::__1::unique_ptr", %"class.std::__1::unique_ptr.2" }
%"struct.std::__1::atomic" = type { %"struct.std::__1::__atomic_base" }
%"struct.std::__1::__atomic_base" = type { %"struct.std::__1::__atomic_base.0" }
%"struct.std::__1::__atomic_base.0" = type { %"struct.std::__1::__cxx_atomic_impl" }
%"struct.std::__1::__cxx_atomic_impl" = type { %"struct.std::__1::__cxx_atomic_base_impl" }
%"struct.std::__1::__cxx_atomic_base_impl" = type { i64 }
%"class.std::__1::unique_ptr" = type { %"class.std::__1::__compressed_pair" }
%"class.std::__1::__compressed_pair" = type { %"struct.std::__1::__compressed_pair_elem" }
%"struct.std::__1::__compressed_pair_elem" = type { %"class.v8::internal::VirtualMemory"* }
%"class.v8::internal::VirtualMemory" = type { %"class.v8::PageAllocator"*, %"class.v8::base::AddressRegion" }
%"class.v8::PageAllocator" = type { i32 (...)** }
%"class.v8::base::AddressRegion" = type { i64, i64 }
%"class.std::__1::unique_ptr.2" = type { %"class.std::__1::__compressed_pair.3" }
%"class.std::__1::__compressed_pair.3" = type { %"struct.std::__1::__compressed_pair_elem.4" }
%"struct.std::__1::__compressed_pair_elem.4" = type { %"class.v8::base::BoundedPageAllocator"* }
%"class.v8::base::BoundedPageAllocator" = type { %"class.v8::PageAllocator", %"class.v8::base::Mutex", i64, i64, %"class.v8::PageAllocator"*, %"class.v8::base::RegionAllocator" }
%"class.v8::base::Mutex" = type { %union.pthread_mutex_t }
%union.pthread_mutex_t = type { %struct.__pthread_mutex_s }
%struct.__pthread_mutex_s = type { i32, i32, i32, i32, i32, i16, i16, %struct.__pthread_internal_list }
%struct.__pthread_internal_list = type { %struct.__pthread_internal_list*, %struct.__pthread_internal_list* }
%"class.v8::base::RegionAllocator" = type { %"class.v8::base::RegionAllocator::Region", i64, i64, i64, i64, %"class.std::__1::set", %"class.std::__1::set.11" }
%"class.v8::base::RegionAllocator::Region" = type <{ %"class.v8::base::AddressRegion", i32, [4 x i8] }>
%"class.std::__1::set" = type { %"class.std::__1::__tree" }
%"class.std::__1::__tree" = type { %"class.std::__1::__tree_end_node"*, %"class.std::__1::__compressed_pair.5", %"class.std::__1::__compressed_pair.8" }
%"class.std::__1::__tree_end_node" = type { %"class.std::__1::__tree_node_base"* }
%"class.std::__1::__tree_node_base" = type <{ %"class.std::__1::__tree_end_node", %"class.std::__1::__tree_node_base"*, %"class.std::__1::__tree_end_node"*, i8, [7 x i8] }>
%"class.std::__1::__compressed_pair.5" = type { %"struct.std::__1::__compressed_pair_elem.6" }
%"struct.std::__1::__compressed_pair_elem.6" = type { %"class.std::__1::__tree_end_node" }
%"class.std::__1::__compressed_pair.8" = type { %"struct.std::__1::__compressed_pair_elem.9" }
%"class.std::__1::set.11" = type { %"class.std::__1::__tree.12" }
%"class.std::__1::__tree.12" = type { %"class.std::__1::__tree_end_node"*, %"class.std::__1::__compressed_pair.5", %"class.std::__1::__compressed_pair.13" }
%"class.std::__1::__compressed_pair.13" = type { %"struct.std::__1::__compressed_pair_elem.9" }
%"class.v8::internal::Segment" = type { %"class.v8::internal::Zone"*, %"class.v8::internal::Segment"*, i64 }
%"class.v8::internal::Utf16CharacterStream" = type <{ i32 (...)**, i16*, i16*, i16*, i64, %"class.v8::internal::RuntimeCallStats"*, i8, [7 x i8] }>
%"class.v8::internal::RuntimeCallStats" = type { %"class.v8::base::AtomicValue", %"class.v8::base::AtomicValue.18", i8, i32, %"class.v8::internal::ThreadId", [1370 x %"class.v8::internal::RuntimeCallCounter"] }
%"class.v8::base::AtomicValue" = type { i64 }
%"class.v8::base::AtomicValue.18" = type { i64 }
%"class.v8::internal::ThreadId" = type { i32 }
%"class.v8::internal::RuntimeCallCounter" = type { i8*, i64, i64 }
%"class.v8::internal::wasm::AsmFunctionType" = type { %"class.v8::internal::wasm::AsmCallableType", %"class.v8::internal::wasm::AsmType"*, %"class.v8::internal::ZoneVector.179" }
%"class.v8::internal::wasm::AsmCallableType" = type { i32 (...)** }
%"class.std::__1::__vector_base_common" = type { i8 }
%"class.v8::internal::wasm::AsmOverloadedFunctionType" = type { %"class.v8::internal::wasm::AsmCallableType", %"class.v8::internal::ZoneVector.179" }
%"struct.std::__1::__list_node" = type { %"struct.std::__1::__list_node_base", %"struct.v8::internal::wasm::AsmJsParser::GlobalImport" }
%"struct.v8::internal::wasm::AsmJsParser::GlobalImport" = type { %"class.v8::internal::Vector", %"class.v8::internal::wasm::ValueType", %"struct.v8::internal::wasm::AsmJsParser::VarInfo"* }
%"struct.std::__1::basic_string<char, std::__1::char_traits<char>, std::__1::allocator<char> >::__short" = type { [23 x i8], %struct.anon }
%struct.anon = type { i8 }
%"class.v8::internal::wasm::AsmJsParser::CachedVector" = type { %"class.v8::internal::ZoneVector.179", %"class.v8::internal::wasm::AsmJsParser::CachedVectors.175"* }
%"class.v8::internal::wasm::AsmJsParser::CachedVector.209" = type { %"class.v8::internal::ZoneVector.164", %"class.v8::internal::wasm::AsmJsParser::CachedVectors"* }
%"class.v8::internal::wasm::AsmJsParser::CachedVector.212" = type { %"class.v8::internal::ZoneVector.129", %"class.v8::internal::wasm::AsmJsParser::CachedVectors.190"* }
%"class.std::__1::tuple" = type { %"struct.std::__1::__tuple_impl" }
%"struct.std::__1::__tuple_impl" = type { %"class.std::__1::__tuple_leaf" }
%"class.std::__1::__tuple_leaf" = type { %"class.v8::internal::Signature"* }
%"class.std::__1::tuple.247" = type { i8 }
%"struct.std::__1::__hash_node" = type { %"struct.std::__1::__hash_node_base.141", i64, %"struct.std::__1::__hash_value_type" }
%"struct.std::__1::__hash_value_type" = type { %"struct.std::__1::pair.215" }
%"struct.std::__1::pair.215" = type <{ %"class.v8::internal::Signature", i32, [4 x i8] }>

$_ZN2v88internal4wasm12WasmInitExprD2Ev = comdat any

$_ZN2v88internal4wasm11AsmJsParser18FunctionImportInfoC2ENS0_6VectorIKcEEPNS0_4ZoneE = comdat any

$_ZNSt3__112__hash_tableINS_17__hash_value_typeIN2v88internal9SignatureINS3_4wasm9ValueTypeEEEjEENS_22__unordered_map_hasherIS7_S8_NS2_4base4hashIS7_EENS_8equal_toIS7_EELb1EEENS_21__unordered_map_equalIS7_S8_SE_SC_Lb1EEENS3_13ZoneAllocatorIS8_EEE6rehashEm = comdat any

$_ZNSt3__112__hash_tableINS_17__hash_value_typeIN2v88internal9SignatureINS3_4wasm9ValueTypeEEEjEENS_22__unordered_map_hasherIS7_S8_NS2_4base4hashIS7_EENS_8equal_toIS7_EELb1EEENS_21__unordered_map_equalIS7_S8_SE_SC_Lb1EEENS3_13ZoneAllocatorIS8_EEE8__rehashEm = comdat any

$_ZNSt3__16vectorIN2v88internal10ZoneVectorIPNS2_4wasm7AsmTypeEEENS2_13ZoneAllocatorIS7_EEE24__emplace_back_slow_pathIJS7_EEEvDpOT_ = comdat any

$_ZNSt3__16vectorIN2v88internal10ZoneVectorINS2_4wasm9ValueTypeEEENS2_13ZoneAllocatorIS6_EEE24__emplace_back_slow_pathIJS6_EEEvDpOT_ = comdat any

$_ZNSt3__16vectorIN2v88internal10ZoneVectorIiEENS2_13ZoneAllocatorIS4_EEE24__emplace_back_slow_pathIJS4_EEEvDpOT_ = comdat any

$_ZNSt3__112__hash_tableINS_17__hash_value_typeIN2v88internal9SignatureINS3_4wasm9ValueTypeEEEjEENS_22__unordered_map_hasherIS7_S8_NS2_4base4hashIS7_EENS_8equal_toIS7_EELb1EEENS_21__unordered_map_equalIS7_S8_SE_SC_Lb1EEENS3_13ZoneAllocatorIS8_EEE4findIS7_EENS_15__hash_iteratorIPNS_11__hash_nodeIS8_PvEEEERKT_ = comdat any

$_ZNSt3__112__hash_tableINS_17__hash_value_typeIN2v88internal9SignatureINS3_4wasm9ValueTypeEEEjEENS_22__unordered_map_hasherIS7_S8_NS2_4base4hashIS7_EENS_8equal_toIS7_EELb1EEENS_21__unordered_map_equalIS7_S8_SE_SC_Lb1EEENS3_13ZoneAllocatorIS8_EEE25__emplace_unique_key_argsIS7_JRKNS_21piecewise_construct_tENS_5tupleIJRKS7_EEENSP_IJEEEEEENS_4pairINS_15__hash_iteratorIPNS_11__hash_nodeIS8_PvEEEEbEERKT_DpOT0_ = comdat any

@.str = private unnamed_addr constant [17 x i8] c"unreachable code\00", align 1
@.str.1 = private unnamed_addr constant [11 x i8] c"Expected ;\00", align 1
@.str.2 = private unnamed_addr constant [44 x i8] c"Stack overflow while parsing asm.js module.\00", align 1
@.str.3 = private unnamed_addr constant [17 x i8] c"Unexpected token\00", align 1
@.str.4 = private unnamed_addr constant [19 x i8] c"Undefined function\00", align 1
@.str.5 = private unnamed_addr constant [25 x i8] c"Undefined function table\00", align 1
@.str.6 = private unnamed_addr constant [26 x i8] c"Expected stdlib parameter\00", align 1
@.str.7 = private unnamed_addr constant [27 x i8] c"Expected foreign parameter\00", align 1
@.str.8 = private unnamed_addr constant [24 x i8] c"Expected heap parameter\00", align 1
@.str.9 = private unnamed_addr constant [20 x i8] c"Expected identifier\00", align 1
@.str.10 = private unnamed_addr constant [25 x i8] c"Redefinition of variable\00", align 1
@.str.11 = private unnamed_addr constant [29 x i8] c"Numeric literal out of range\00", align 1
@.str.12 = private unnamed_addr constant [25 x i8] c"Expected numeric literal\00", align 1
@.str.13 = private unnamed_addr constant [25 x i8] c"Bad variable declaration\00", align 1
@.str.14 = private unnamed_addr constant [54 x i8] c"Can only use immutable variables in global definition\00", align 1
@.str.15 = private unnamed_addr constant [58 x i8] c"Can only define immutable variables with other immutables\00", align 1
@.str.16 = private unnamed_addr constant [61 x i8] c"Expected int, float, double, or fround for global definition\00", align 1
@.str.17 = private unnamed_addr constant [55 x i8] c"Expected |0 type annotation for foreign integer import\00", align 1
@.str.18 = private unnamed_addr constant [26 x i8] c"Expected ArrayBuffer view\00", align 1
@.str.19 = private unnamed_addr constant [30 x i8] c"Invalid member of stdlib.Math\00", align 1
@.str.20 = private unnamed_addr constant [25 x i8] c"Invalid member of stdlib\00", align 1
@.str.21 = private unnamed_addr constant [20 x i8] c"Illegal export name\00", align 1
@.str.22 = private unnamed_addr constant [23 x i8] c"Expected function name\00", align 1
@.str.23 = private unnamed_addr constant [18 x i8] c"Expected function\00", align 1
@.str.24 = private unnamed_addr constant [47 x i8] c"Single function export must be a function name\00", align 1
@.str.25 = private unnamed_addr constant [42 x i8] c"Single function export must be a function\00", align 1
@_ZN2v88internal5AsmJs19kSingleFunctionNameE = external local_unnamed_addr constant i8*, align 8
@.str.26 = private unnamed_addr constant [20 x i8] c"Expected table name\00", align 1
@.str.27 = private unnamed_addr constant [25 x i8] c"Function table redefined\00", align 1
@.str.28 = private unnamed_addr constant [29 x i8] c"Function table name collides\00", align 1
@.str.29 = private unnamed_addr constant [29 x i8] c"Exceeded function table size\00", align 1
@.str.30 = private unnamed_addr constant [44 x i8] c"Function table definition doesn't match use\00", align 1
@.str.31 = private unnamed_addr constant [40 x i8] c"Function table size does not match uses\00", align 1
@.str.32 = private unnamed_addr constant [37 x i8] c"Function name collides with variable\00", align 1
@.str.33 = private unnamed_addr constant [19 x i8] c"Function redefined\00", align 1
@.str.34 = private unnamed_addr constant [44 x i8] c"Number of parameters exceeds internal limit\00", align 1
@.str.35 = private unnamed_addr constant [44 x i8] c"Expected return at end of non-void function\00", align 1
@.str.36 = private unnamed_addr constant [49 x i8] c"Number of local variables exceeds internal limit\00", align 1
@.str.37 = private unnamed_addr constant [45 x i8] c"Size of function body exceeds internal limit\00", align 1
@.str.38 = private unnamed_addr constant [38 x i8] c"Function definition doesn't match use\00", align 1
@.str.39 = private unnamed_addr constant [24 x i8] c"Expected parameter name\00", align 1
@.str.40 = private unnamed_addr constant [25 x i8] c"Duplicate parameter name\00", align 1
@.str.41 = private unnamed_addr constant [34 x i8] c"Bad integer parameter annotation.\00", align 1
@.str.42 = private unnamed_addr constant [16 x i8] c"Expected fround\00", align 1
@.str.43 = private unnamed_addr constant [35 x i8] c"Expected local variable identifier\00", align 1
@.str.44 = private unnamed_addr constant [30 x i8] c"Duplicate local variable name\00", align 1
@.str.45 = private unnamed_addr constant [32 x i8] c"Expected variable initial value\00", align 1
@.str.46 = private unnamed_addr constant [49 x i8] c"Initializing from global requires const variable\00", align 1
@.str.47 = private unnamed_addr constant [30 x i8] c"Bad local variable definition\00", align 1
@.str.48 = private unnamed_addr constant [32 x i8] c"expected fround or const global\00", align 1
@.str.49 = private unnamed_addr constant [20 x i8] c"Invalid return type\00", align 1
@.str.50 = private unnamed_addr constant [25 x i8] c"Invalid void return type\00", align 1
@.str.51 = private unnamed_addr constant [14 x i8] c"Illegal break\00", align 1
@.str.52 = private unnamed_addr constant [17 x i8] c"Illegal continue\00", align 1
@.str.53 = private unnamed_addr constant [25 x i8] c"Double label unsupported\00", align 1
@.str.54 = private unnamed_addr constant [33 x i8] c"Expected signed for switch value\00", align 1
@.str.55 = private unnamed_addr constant [21 x i8] c"Expected actual type\00", align 1
@.str.56 = private unnamed_addr constant [16 x i8] c"Unexpected type\00", align 1
@.str.57 = private unnamed_addr constant [26 x i8] c"Expected numeric literal.\00", align 1
@.str.58 = private unnamed_addr constant [25 x i8] c"Undefined local variable\00", align 1
@.str.59 = private unnamed_addr constant [26 x i8] c"Undefined global variable\00", align 1
@.str.60 = private unnamed_addr constant [25 x i8] c"Expected valid heap load\00", align 1
@.str.61 = private unnamed_addr constant [26 x i8] c"Invalid assignment target\00", align 1
@.str.62 = private unnamed_addr constant [33 x i8] c"Illegal type stored to heap view\00", align 1
@.str.63 = private unnamed_addr constant [29 x i8] c"Undeclared assignment target\00", align 1
@.str.64 = private unnamed_addr constant [40 x i8] c"Expected mutable variable in assignment\00", align 1
@.str.65 = private unnamed_addr constant [28 x i8] c"Type mismatch in assignment\00", align 1
@.str.66 = private unnamed_addr constant [38 x i8] c"Integer numeric literal out of range.\00", align 1
@.str.67 = private unnamed_addr constant [28 x i8] c"expected int/double?/float?\00", align 1
@.str.68 = private unnamed_addr constant [40 x i8] c"expected signed/unsigned/double?/float?\00", align 1
@.str.69 = private unnamed_addr constant [13 x i8] c"expected int\00", align 1
@.str.70 = private unnamed_addr constant [26 x i8] c"expected double or float?\00", align 1
@.str.71 = private unnamed_addr constant [26 x i8] c"operator ~ expects intish\00", align 1
@.str.72 = private unnamed_addr constant [13 x i8] c"Expected int\00", align 1
@.str.73 = private unnamed_addr constant [31 x i8] c"Constant multiple out of range\00", align 1
@.str.74 = private unnamed_addr constant [32 x i8] c"Integer multiply of expects int\00", align 1
@.str.75 = private unnamed_addr constant [27 x i8] c"expected doubles or floats\00", align 1
@.str.76 = private unnamed_addr constant [31 x i8] c"more than 2^20 additive values\00", align 1
@.str.77 = private unnamed_addr constant [20 x i8] c"illegal types for +\00", align 1
@.str.78 = private unnamed_addr constant [33 x i8] c"Expected intish for operator >>.\00", align 1
@.str.79 = private unnamed_addr constant [35 x i8] c"Expected intish for operator \22<<\22.\00", align 1
@.str.80 = private unnamed_addr constant [36 x i8] c"Expected intish for operator \22>>>\22.\00", align 1
@.str.81 = private unnamed_addr constant [62 x i8] c"Expected signed, unsigned, double, or float for operator \22<\22.\00", align 1
@.str.82 = private unnamed_addr constant [63 x i8] c"Expected signed, unsigned, double, or float for operator \22<=\22.\00", align 1
@.str.83 = private unnamed_addr constant [62 x i8] c"Expected signed, unsigned, double, or float for operator \22>\22.\00", align 1
@.str.84 = private unnamed_addr constant [63 x i8] c"Expected signed, unsigned, double, or float for operator \22>=\22.\00", align 1
@.str.85 = private unnamed_addr constant [63 x i8] c"Expected signed, unsigned, double, or float for operator \22==\22.\00", align 1
@.str.86 = private unnamed_addr constant [63 x i8] c"Expected signed, unsigned, double, or float for operator \22!=\22.\00", align 1
@.str.87 = private unnamed_addr constant [32 x i8] c"Expected intish for operator &.\00", align 1
@.str.88 = private unnamed_addr constant [37 x i8] c"Expected |0 type annotation for call\00", align 1
@.str.89 = private unnamed_addr constant [32 x i8] c"Expected intish for operator |.\00", align 1
@.str.90 = private unnamed_addr constant [47 x i8] c"Expected int in condition of ternary operator.\00", align 1
@.str.91 = private unnamed_addr constant [35 x i8] c"Type mismatch in ternary operator.\00", align 1
@.str.92 = private unnamed_addr constant [22 x i8] c"Expected intish index\00", align 1
@.str.93 = private unnamed_addr constant [22 x i8] c"Expected mask literal\00", align 1
@.str.94 = private unnamed_addr constant [25 x i8] c"Expected power of 2 mask\00", align 1
@.str.95 = private unnamed_addr constant [37 x i8] c"Exceeded maximum function table size\00", align 1
@.str.96 = private unnamed_addr constant [20 x i8] c"Expected call table\00", align 1
@.str.97 = private unnamed_addr constant [19 x i8] c"Mask size mismatch\00", align 1
@.str.98 = private unnamed_addr constant [33 x i8] c"Expected function as call target\00", align 1
@.str.99 = private unnamed_addr constant [27 x i8] c"Bad function argument type\00", align 1
@.str.100 = private unnamed_addr constant [43 x i8] c"Imported function args must be type extern\00", align 1
@.str.101 = private unnamed_addr constant [43 x i8] c"Imported function can't be called as float\00", align 1
@.str.102 = private unnamed_addr constant [27 x i8] c"Expected callable function\00", align 1
@.str.103 = private unnamed_addr constant [38 x i8] c"Function use doesn't match definition\00", align 1
@.str.104 = private unnamed_addr constant [25 x i8] c"Heap access out of range\00", align 1
@.str.105 = private unnamed_addr constant [28 x i8] c"Expected shift of word size\00", align 1
@.str.106 = private unnamed_addr constant [33 x i8] c"Expected valid heap access shift\00", align 1
@.str.107 = private unnamed_addr constant [46 x i8] c"Expected heap access shift to match heap view\00", align 1
@.str.108 = private unnamed_addr constant [28 x i8] c"Illegal conversion to float\00", align 1
@_ZTVN2v88internal4wasm15AsmFunctionTypeE = external unnamed_addr constant { [9 x i8*] }, align 8
@_ZTVN2v88internal4wasm25AsmOverloadedFunctionTypeE = external unnamed_addr constant { [9 x i8*] }, align 8
@_ZNSt3__1L19piecewise_constructE = internal constant %"struct.std::__1::piecewise_construct_t" undef, align 1

@_ZN2v88internal4wasm11AsmJsParserC1EPNS0_4ZoneEmPNS0_20Utf16CharacterStreamE = hidden unnamed_addr alias void (%"class.v8::internal::wasm::AsmJsParser"*, %"class.v8::internal::Zone"*, i64, %"class.v8::internal::Utf16CharacterStream"*), void (%"class.v8::internal::wasm::AsmJsParser"*, %"class.v8::internal::Zone"*, i64, %"class.v8::internal::Utf16CharacterStream"*)* @_ZN2v88internal4wasm11AsmJsParserC2EPNS0_4ZoneEmPNS0_20Utf16CharacterStreamE

; Function Attrs: nounwind ssp uwtable
define hidden void @_ZN2v88internal4wasm11AsmJsParserC2EPNS0_4ZoneEmPNS0_20Utf16CharacterStreamE(%"class.v8::internal::wasm::AsmJsParser"*, %"class.v8::internal::Zone"*, i64, %"class.v8::internal::Utf16CharacterStream"*) unnamed_addr #0 align 2 {
  %5 = getelementptr inbounds %"class.v8::internal::wasm::AsmJsParser", %"class.v8::internal::wasm::AsmJsParser"* %0, i64 0, i32 0
  store %"class.v8::internal::Zone"* %1, %"class.v8::internal::Zone"** %5, align 8
  %6 = getelementptr inbounds %"class.v8::internal::wasm::AsmJsParser", %"class.v8::internal::wasm::AsmJsParser"* %0, i64 0, i32 1
  tail call void @_ZN2v88internal12AsmJsScannerC1EPNS0_20Utf16CharacterStreamE(%"class.v8::internal::AsmJsScanner"* %6, %"class.v8::internal::Utf16CharacterStream"* %3) #12
  %7 = getelementptr inbounds %"class.v8::internal::wasm::AsmJsParser", %"class.v8::internal::wasm::AsmJsParser"* %0, i64 0, i32 2
  %8 = getelementptr inbounds %"class.v8::internal::Zone", %"class.v8::internal::Zone"* %1, i64 0, i32 2
  %9 = load i64, i64* %8, align 8
  %10 = getelementptr inbounds %"class.v8::internal::Zone", %"class.v8::internal::Zone"* %1, i64 0, i32 3
  %11 = load i64, i64* %10, align 8
  %12 = sub i64 %11, %9
  %13 = icmp ult i64 %12, 408
  br i1 %13, label %14, label %16, !prof !2

14:                                               ; preds = %4
  %15 = tail call i64 @_ZN2v88internal4Zone9NewExpandEm(%"class.v8::internal::Zone"* %1, i64 408) #12
  br label %18

16:                                               ; preds = %4
  %17 = add i64 %9, 408
  store i64 %17, i64* %8, align 8
  br label %18

18:                                               ; preds = %14, %16
  %19 = phi i64 [ %15, %14 ], [ %9, %16 ]
  %20 = inttoptr i64 %19 to %"class.v8::internal::wasm::WasmModuleBuilder"*
  tail call void @_ZN2v88internal4wasm17WasmModuleBuilderC1EPNS0_4ZoneE(%"class.v8::internal::wasm::WasmModuleBuilder"* %20, %"class.v8::internal::Zone"* %1) #12
  store %"class.v8::internal::wasm::WasmModuleBuilder"* %20, %"class.v8::internal::wasm::WasmModuleBuilder"** %7, align 8
  %21 = getelementptr inbounds %"class.v8::internal::wasm::AsmJsParser", %"class.v8::internal::wasm::AsmJsParser"* %0, i64 0, i32 4
  store %"class.v8::internal::wasm::AsmType"* null, %"class.v8::internal::wasm::AsmType"** %21, align 8
  %22 = getelementptr inbounds %"class.v8::internal::wasm::AsmJsParser", %"class.v8::internal::wasm::AsmJsParser"* %0, i64 0, i32 5
  store i64 %2, i64* %22, align 8
  %23 = getelementptr inbounds %"class.v8::internal::wasm::AsmJsParser", %"class.v8::internal::wasm::AsmJsParser"* %0, i64 0, i32 6, i32 0
  %24 = getelementptr inbounds %"class.v8::internal::wasm::AsmJsParser", %"class.v8::internal::wasm::AsmJsParser"* %0, i64 0, i32 10
  %25 = bitcast %"class.v8::internal::wasm::AsmJsParser"* %0 to i64*
  %26 = bitcast i64* %23 to i8*
  call void @llvm.memset.p0i8.i64(i8* align 8 %26, i8 0, i64 48, i1 false)
  %27 = load i64, i64* %25, align 8
  %28 = getelementptr inbounds %"class.v8::internal::wasm::AsmJsParser", %"class.v8::internal::wasm::AsmJsParser"* %0, i64 0, i32 10, i32 0, i32 0, i32 0, i32 2, i32 1
  %29 = bitcast %"struct.std::__1::__compressed_pair_elem.173"* %28 to i64*
  %30 = bitcast %"class.v8::internal::wasm::AsmJsParser::CachedVectors"* %24 to i8*
  tail call void @llvm.memset.p0i8.i64(i8* align 8 %30, i8 0, i64 24, i1 false) #12
  store i64 %27, i64* %29, align 8
  %31 = getelementptr inbounds %"class.v8::internal::wasm::AsmJsParser", %"class.v8::internal::wasm::AsmJsParser"* %0, i64 0, i32 11
  %32 = getelementptr inbounds %"class.v8::internal::wasm::AsmJsParser", %"class.v8::internal::wasm::AsmJsParser"* %0, i64 0, i32 11, i32 0, i32 0, i32 0, i32 2, i32 1
  %33 = bitcast %"struct.std::__1::__compressed_pair_elem.188"* %32 to i64*
  %34 = bitcast %"class.v8::internal::wasm::AsmJsParser::CachedVectors.175"* %31 to i8*
  tail call void @llvm.memset.p0i8.i64(i8* align 8 %34, i8 0, i64 24, i1 false) #12
  store i64 %27, i64* %33, align 8
  %35 = getelementptr inbounds %"class.v8::internal::wasm::AsmJsParser", %"class.v8::internal::wasm::AsmJsParser"* %0, i64 0, i32 12
  %36 = getelementptr inbounds %"class.v8::internal::wasm::AsmJsParser", %"class.v8::internal::wasm::AsmJsParser"* %0, i64 0, i32 12, i32 0, i32 0, i32 0, i32 2, i32 1
  %37 = bitcast %"struct.std::__1::__compressed_pair_elem.196"* %36 to i64*
  %38 = bitcast %"class.v8::internal::wasm::AsmJsParser::CachedVectors.190"* %35 to i8*
  tail call void @llvm.memset.p0i8.i64(i8* align 8 %38, i8 0, i64 24, i1 false) #12
  store i64 %27, i64* %37, align 8
  %39 = getelementptr inbounds %"class.v8::internal::wasm::AsmJsParser", %"class.v8::internal::wasm::AsmJsParser"* %0, i64 0, i32 13
  %40 = getelementptr inbounds %"class.v8::internal::wasm::AsmJsParser", %"class.v8::internal::wasm::AsmJsParser"* %0, i64 0, i32 13, i32 0, i32 0, i32 0, i32 2, i32 1
  %41 = bitcast %"struct.std::__1::__compressed_pair_elem.196"* %40 to i64*
  %42 = bitcast %"class.v8::internal::wasm::AsmJsParser::CachedVectors.190"* %39 to i8*
  tail call void @llvm.memset.p0i8.i64(i8* align 8 %42, i8 0, i64 24, i1 false) #12
  store i64 %27, i64* %41, align 8
  %43 = getelementptr inbounds %"class.v8::internal::wasm::AsmJsParser", %"class.v8::internal::wasm::AsmJsParser"* %0, i64 0, i32 17
  store i8 0, i8* %43, align 4
  %44 = getelementptr inbounds %"class.v8::internal::wasm::AsmJsParser", %"class.v8::internal::wasm::AsmJsParser"* %0, i64 0, i32 19
  store i32 -1, i32* %44, align 8
  %45 = getelementptr inbounds %"class.v8::internal::wasm::AsmJsParser", %"class.v8::internal::wasm::AsmJsParser"* %0, i64 0, i32 20
  %46 = getelementptr inbounds %"class.v8::internal::wasm::AsmJsParser", %"class.v8::internal::wasm::AsmJsParser"* %0, i64 0, i32 24
  %47 = ptrtoint %"class.v8::internal::Zone"* %1 to i64
  %48 = getelementptr inbounds %"class.v8::internal::wasm::AsmJsParser", %"class.v8::internal::wasm::AsmJsParser"* %0, i64 0, i32 25, i32 0, i32 0, i32 2, i32 1
  %49 = bitcast %"struct.std::__1::__compressed_pair_elem.203"* %48 to i64*
  %50 = bitcast i32* %45 to i8*
  call void @llvm.memset.p0i8.i64(i8* align 4 %50, i8 0, i64 13, i1 false)
  %51 = bitcast %"class.v8::internal::wasm::AsmType"** %46 to i8*
  call void @llvm.memset.p0i8.i64(i8* align 8 %51, i8 0, i64 32, i1 false)
  store i64 %47, i64* %49, align 8
  %52 = getelementptr inbounds %"class.v8::internal::wasm::AsmJsParser", %"class.v8::internal::wasm::AsmJsParser"* %0, i64 0, i32 34
  store %"class.v8::internal::wasm::AsmType"* null, %"class.v8::internal::wasm::AsmType"** %52, align 8
  %53 = getelementptr inbounds %"class.v8::internal::wasm::AsmJsParser", %"class.v8::internal::wasm::AsmJsParser"* %0, i64 0, i32 36
  store %"class.v8::internal::wasm::AsmType"* null, %"class.v8::internal::wasm::AsmType"** %53, align 8
  %54 = getelementptr inbounds %"class.v8::internal::wasm::AsmJsParser", %"class.v8::internal::wasm::AsmJsParser"* %0, i64 0, i32 40
  store i32 0, i32* %54, align 4
  %55 = getelementptr inbounds %"class.v8::internal::wasm::AsmJsParser", %"class.v8::internal::wasm::AsmJsParser"* %0, i64 0, i32 41
  %56 = getelementptr inbounds %"class.v8::internal::ZoneLinkedList", %"class.v8::internal::ZoneLinkedList"* %55, i64 0, i32 0, i32 0, i32 0
  %57 = getelementptr inbounds %"class.v8::internal::ZoneLinkedList", %"class.v8::internal::ZoneLinkedList"* %55, i64 0, i32 0, i32 0, i32 0, i32 0
  store %"struct.std::__1::__list_node_base"* %56, %"struct.std::__1::__list_node_base"** %57, align 8
  %58 = getelementptr inbounds %"class.v8::internal::wasm::AsmJsParser", %"class.v8::internal::wasm::AsmJsParser"* %0, i64 0, i32 41, i32 0, i32 0, i32 0, i32 1
  store %"struct.std::__1::__list_node_base"* %56, %"struct.std::__1::__list_node_base"** %58, align 8
  %59 = getelementptr inbounds %"class.v8::internal::wasm::AsmJsParser", %"class.v8::internal::wasm::AsmJsParser"* %0, i64 0, i32 41, i32 0, i32 0, i32 1, i32 0, i32 0
  store i64 0, i64* %59, align 8
  %60 = getelementptr inbounds %"class.v8::internal::wasm::AsmJsParser", %"class.v8::internal::wasm::AsmJsParser"* %0, i64 0, i32 41, i32 0, i32 0, i32 1, i32 1
  %61 = bitcast %"struct.std::__1::__compressed_pair_elem.206"* %60 to i64*
  store i64 %47, i64* %61, align 8
  tail call void @_ZN2v88internal4wasm17WasmModuleBuilder16SetMinMemorySizeEj(%"class.v8::internal::wasm::WasmModuleBuilder"* %20, i32 0) #12
  tail call void @_ZN2v88internal4wasm11AsmJsParser21InitializeStdlibTypesEv(%"class.v8::internal::wasm::AsmJsParser"* %0)
  ret void
}

declare void @_ZN2v88internal12AsmJsScannerC1EPNS0_20Utf16CharacterStreamE(%"class.v8::internal::AsmJsScanner"*, %"class.v8::internal::Utf16CharacterStream"*) unnamed_addr #1

declare void @_ZN2v88internal4wasm17WasmModuleBuilder16SetMinMemorySizeEj(%"class.v8::internal::wasm::WasmModuleBuilder"*, i32) local_unnamed_addr #1

; Function Attrs: nounwind ssp uwtable
define hidden void @_ZN2v88internal4wasm11AsmJsParser21InitializeStdlibTypesEv(%"class.v8::internal::wasm::AsmJsParser"*) local_unnamed_addr #0 align 2 {
  %2 = getelementptr inbounds %"class.v8::internal::wasm::AsmJsParser", %"class.v8::internal::wasm::AsmJsParser"* %0, i64 0, i32 0
  %3 = load %"class.v8::internal::Zone"*, %"class.v8::internal::Zone"** %2, align 8
  %4 = ptrtoint %"class.v8::internal::Zone"* %3 to i64
  %5 = getelementptr inbounds %"class.v8::internal::Zone", %"class.v8::internal::Zone"* %3, i64 0, i32 2
  %6 = load i64, i64* %5, align 8
  %7 = getelementptr inbounds %"class.v8::internal::Zone", %"class.v8::internal::Zone"* %3, i64 0, i32 3
  %8 = load i64, i64* %7, align 8
  %9 = sub i64 %8, %6
  %10 = icmp ult i64 %9, 48
  br i1 %10, label %11, label %13, !prof !2

11:                                               ; preds = %1
  %12 = tail call i64 @_ZN2v88internal4Zone9NewExpandEm(%"class.v8::internal::Zone"* %3, i64 48) #12
  br label %15

13:                                               ; preds = %1
  %14 = add i64 %6, 48
  store i64 %14, i64* %5, align 8
  br label %15

15:                                               ; preds = %11, %13
  %16 = phi i64 [ %12, %11 ], [ %6, %13 ]
  %17 = inttoptr i64 %16 to %"class.v8::internal::wasm::AsmFunctionType"*
  %18 = getelementptr inbounds %"class.v8::internal::wasm::AsmFunctionType", %"class.v8::internal::wasm::AsmFunctionType"* %17, i64 0, i32 0, i32 0
  store i32 (...)** bitcast (i8** getelementptr inbounds ({ [9 x i8*] }, { [9 x i8*] }* @_ZTVN2v88internal4wasm15AsmFunctionTypeE, i64 0, inrange i32 0, i64 2) to i32 (...)**), i32 (...)*** %18, align 8
  %19 = getelementptr inbounds %"class.v8::internal::wasm::AsmFunctionType", %"class.v8::internal::wasm::AsmFunctionType"* %17, i64 0, i32 1
  %20 = bitcast %"class.v8::internal::wasm::AsmType"** %19 to i64*
  store i64 237, i64* %20, align 8
  %21 = getelementptr inbounds %"class.v8::internal::wasm::AsmFunctionType", %"class.v8::internal::wasm::AsmFunctionType"* %17, i64 0, i32 2
  %22 = getelementptr inbounds %"class.v8::internal::wasm::AsmFunctionType", %"class.v8::internal::wasm::AsmFunctionType"* %17, i64 0, i32 2, i32 0, i32 0, i32 2, i32 1
  %23 = bitcast %"struct.std::__1::__compressed_pair_elem.184"* %22 to i64*
  %24 = bitcast %"class.v8::internal::ZoneVector.179"* %21 to i8*
  tail call void @llvm.memset.p0i8.i64(i8* align 8 %24, i8 0, i64 24, i1 false) #12
  store i64 %4, i64* %23, align 8
  %25 = inttoptr i64 %16 to %"class.v8::internal::wasm::AsmType"*
  %26 = getelementptr inbounds %"class.v8::internal::wasm::AsmJsParser", %"class.v8::internal::wasm::AsmJsParser"* %0, i64 0, i32 26
  store %"class.v8::internal::wasm::AsmType"* %25, %"class.v8::internal::wasm::AsmType"** %26, align 8
  %27 = and i64 %16, 1
  %28 = icmp eq i64 %27, 0
  br i1 %28, label %29, label %36

29:                                               ; preds = %15
  %30 = inttoptr i64 %16 to %"class.v8::internal::wasm::AsmCallableType"*
  %31 = inttoptr i64 %16 to %"class.v8::internal::wasm::AsmFunctionType"* (%"class.v8::internal::wasm::AsmCallableType"*)***
  %32 = load %"class.v8::internal::wasm::AsmFunctionType"* (%"class.v8::internal::wasm::AsmCallableType"*)**, %"class.v8::internal::wasm::AsmFunctionType"* (%"class.v8::internal::wasm::AsmCallableType"*)*** %31, align 8
  %33 = getelementptr inbounds %"class.v8::internal::wasm::AsmFunctionType"* (%"class.v8::internal::wasm::AsmCallableType"*)*, %"class.v8::internal::wasm::AsmFunctionType"* (%"class.v8::internal::wasm::AsmCallableType"*)** %32, i64 2
  %34 = load %"class.v8::internal::wasm::AsmFunctionType"* (%"class.v8::internal::wasm::AsmCallableType"*)*, %"class.v8::internal::wasm::AsmFunctionType"* (%"class.v8::internal::wasm::AsmCallableType"*)** %33, align 8
  %35 = tail call %"class.v8::internal::wasm::AsmFunctionType"* %34(%"class.v8::internal::wasm::AsmCallableType"* %30) #12
  br label %36

36:                                               ; preds = %15, %29
  %37 = phi %"class.v8::internal::wasm::AsmFunctionType"* [ %35, %29 ], [ null, %15 ]
  %38 = getelementptr inbounds %"class.v8::internal::wasm::AsmFunctionType", %"class.v8::internal::wasm::AsmFunctionType"* %37, i64 0, i32 2, i32 0
  %39 = getelementptr inbounds %"class.v8::internal::wasm::AsmFunctionType", %"class.v8::internal::wasm::AsmFunctionType"* %37, i64 0, i32 2, i32 0, i32 0, i32 1
  %40 = load %"class.v8::internal::wasm::AsmType"**, %"class.v8::internal::wasm::AsmType"*** %39, align 8
  %41 = getelementptr inbounds %"class.v8::internal::wasm::AsmFunctionType", %"class.v8::internal::wasm::AsmFunctionType"* %37, i64 0, i32 2, i32 0, i32 0, i32 2, i32 0, i32 0
  %42 = load %"class.v8::internal::wasm::AsmType"**, %"class.v8::internal::wasm::AsmType"*** %41, align 8
  %43 = icmp eq %"class.v8::internal::wasm::AsmType"** %40, %42
  %44 = ptrtoint %"class.v8::internal::wasm::AsmType"** %42 to i64
  br i1 %43, label %50, label %45

45:                                               ; preds = %36
  %46 = bitcast %"class.v8::internal::wasm::AsmType"** %40 to i64*
  store i64 77, i64* %46, align 8
  %47 = getelementptr inbounds %"class.v8::internal::wasm::AsmType"*, %"class.v8::internal::wasm::AsmType"** %40, i64 1
  %48 = ptrtoint %"class.v8::internal::wasm::AsmType"** %47 to i64
  %49 = bitcast %"class.v8::internal::wasm::AsmType"*** %39 to i64*
  store i64 %48, i64* %49, align 8
  br label %275

50:                                               ; preds = %36
  %51 = ptrtoint %"class.v8::internal::wasm::AsmType"** %40 to i64
  %52 = bitcast %"class.v8::internal::wasm::AsmType"*** %39 to i64*
  %53 = bitcast %"class.std::__1::vector.180"* %38 to i64*
  %54 = load i64, i64* %53, align 8
  %55 = sub i64 %51, %54
  %56 = ashr exact i64 %55, 3
  %57 = add nsw i64 %56, 1
  %58 = icmp ugt i64 %57, 268435455
  br i1 %58, label %59, label %61

59:                                               ; preds = %50
  %60 = bitcast %"class.std::__1::vector.180"* %38 to %"class.std::__1::__vector_base_common"*
  tail call void @_ZNKSt3__120__vector_base_commonILb1EE20__throw_length_errorEv(%"class.std::__1::__vector_base_common"* %60) #13
  unreachable

61:                                               ; preds = %50
  %62 = bitcast %"class.v8::internal::wasm::AsmType"*** %41 to i64*
  %63 = sub i64 %44, %54
  %64 = ashr exact i64 %63, 3
  %65 = icmp ult i64 %64, 134217727
  br i1 %65, label %66, label %71

66:                                               ; preds = %61
  %67 = ashr exact i64 %63, 2
  %68 = icmp ult i64 %67, %57
  %69 = select i1 %68, i64 %57, i64 %67
  %70 = icmp eq i64 %69, 0
  br i1 %70, label %89, label %71

71:                                               ; preds = %66, %61
  %72 = phi i64 [ %69, %66 ], [ 268435455, %61 ]
  %73 = getelementptr inbounds %"class.v8::internal::wasm::AsmFunctionType", %"class.v8::internal::wasm::AsmFunctionType"* %37, i64 0, i32 2, i32 0, i32 0, i32 2, i32 1, i32 0, i32 0
  %74 = load %"class.v8::internal::Zone"*, %"class.v8::internal::Zone"** %73, align 8
  %75 = shl i64 %72, 3
  %76 = getelementptr inbounds %"class.v8::internal::Zone", %"class.v8::internal::Zone"* %74, i64 0, i32 2
  %77 = load i64, i64* %76, align 8
  %78 = getelementptr inbounds %"class.v8::internal::Zone", %"class.v8::internal::Zone"* %74, i64 0, i32 3
  %79 = load i64, i64* %78, align 8
  %80 = sub i64 %79, %77
  %81 = icmp ugt i64 %75, %80
  br i1 %81, label %82, label %84, !prof !2

82:                                               ; preds = %71
  %83 = tail call i64 @_ZN2v88internal4Zone9NewExpandEm(%"class.v8::internal::Zone"* %74, i64 %75) #12
  br label %86

84:                                               ; preds = %71
  %85 = add i64 %77, %75
  store i64 %85, i64* %76, align 8
  br label %86

86:                                               ; preds = %84, %82
  %87 = phi i64 [ %83, %82 ], [ %77, %84 ]
  %88 = inttoptr i64 %87 to %"class.v8::internal::wasm::AsmType"**
  br label %89

89:                                               ; preds = %86, %66
  %90 = phi i64 [ %72, %86 ], [ 0, %66 ]
  %91 = phi %"class.v8::internal::wasm::AsmType"** [ %88, %86 ], [ null, %66 ]
  %92 = getelementptr inbounds %"class.v8::internal::wasm::AsmType"*, %"class.v8::internal::wasm::AsmType"** %91, i64 %56
  %93 = getelementptr inbounds %"class.v8::internal::wasm::AsmType"*, %"class.v8::internal::wasm::AsmType"** %91, i64 %90
  %94 = ptrtoint %"class.v8::internal::wasm::AsmType"** %93 to i64
  %95 = bitcast %"class.v8::internal::wasm::AsmType"** %92 to i64*
  store i64 77, i64* %95, align 8
  %96 = getelementptr inbounds %"class.v8::internal::wasm::AsmType"*, %"class.v8::internal::wasm::AsmType"** %92, i64 1
  %97 = ptrtoint %"class.v8::internal::wasm::AsmType"** %96 to i64
  %98 = getelementptr inbounds %"class.std::__1::vector.180", %"class.std::__1::vector.180"* %38, i64 0, i32 0, i32 0
  %99 = load %"class.v8::internal::wasm::AsmType"**, %"class.v8::internal::wasm::AsmType"*** %98, align 8
  %100 = ptrtoint %"class.v8::internal::wasm::AsmType"** %99 to i64
  %101 = load %"class.v8::internal::wasm::AsmType"**, %"class.v8::internal::wasm::AsmType"*** %39, align 8
  %102 = icmp eq %"class.v8::internal::wasm::AsmType"** %101, %99
  br i1 %102, label %272, label %103

103:                                              ; preds = %89
  %104 = getelementptr %"class.v8::internal::wasm::AsmType"*, %"class.v8::internal::wasm::AsmType"** %101, i64 -1
  %105 = ptrtoint %"class.v8::internal::wasm::AsmType"** %104 to i64
  %106 = sub i64 %105, %100
  %107 = lshr i64 %106, 3
  %108 = add nuw nsw i64 %107, 1
  %109 = icmp ult i64 %108, 4
  br i1 %109, label %202, label %110

110:                                              ; preds = %103
  %111 = getelementptr %"class.v8::internal::wasm::AsmType"*, %"class.v8::internal::wasm::AsmType"** %101, i64 -1
  %112 = ptrtoint %"class.v8::internal::wasm::AsmType"** %111 to i64
  %113 = sub i64 %112, %100
  %114 = lshr i64 %113, 3
  %115 = xor i64 %114, -1
  %116 = add nsw i64 %56, %115
  %117 = getelementptr %"class.v8::internal::wasm::AsmType"*, %"class.v8::internal::wasm::AsmType"** %91, i64 %116
  %118 = xor i64 %114, -1
  %119 = getelementptr %"class.v8::internal::wasm::AsmType"*, %"class.v8::internal::wasm::AsmType"** %101, i64 %118
  %120 = icmp ult %"class.v8::internal::wasm::AsmType"** %117, %101
  %121 = icmp ult %"class.v8::internal::wasm::AsmType"** %119, %92
  %122 = and i1 %120, %121
  br i1 %122, label %202, label %123

123:                                              ; preds = %110
  %124 = and i64 %108, 4611686018427387900
  %125 = sub nsw i64 0, %124
  %126 = getelementptr %"class.v8::internal::wasm::AsmType"*, %"class.v8::internal::wasm::AsmType"** %92, i64 %125
  %127 = sub nsw i64 0, %124
  %128 = getelementptr %"class.v8::internal::wasm::AsmType"*, %"class.v8::internal::wasm::AsmType"** %101, i64 %127
  %129 = add nsw i64 %124, -4
  %130 = lshr exact i64 %129, 2
  %131 = add nuw nsw i64 %130, 1
  %132 = and i64 %131, 1
  %133 = icmp eq i64 %129, 0
  br i1 %133, label %178, label %134

134:                                              ; preds = %123
  %135 = sub nuw nsw i64 %131, %132
  %136 = getelementptr %"class.v8::internal::wasm::AsmType"*, %"class.v8::internal::wasm::AsmType"** %92, i64 -1
  %137 = getelementptr %"class.v8::internal::wasm::AsmType"*, %"class.v8::internal::wasm::AsmType"** %101, i64 -1
  %138 = getelementptr %"class.v8::internal::wasm::AsmType"*, %"class.v8::internal::wasm::AsmType"** %92, i64 -1
  %139 = getelementptr %"class.v8::internal::wasm::AsmType"*, %"class.v8::internal::wasm::AsmType"** %101, i64 -1
  br label %140

140:                                              ; preds = %140, %134
  %141 = phi i64 [ 0, %134 ], [ %175, %140 ]
  %142 = phi i64 [ %135, %134 ], [ %176, %140 ]
  %143 = sub i64 0, %141
  %144 = sub i64 0, %141
  %145 = getelementptr inbounds %"class.v8::internal::wasm::AsmType"*, %"class.v8::internal::wasm::AsmType"** %136, i64 %143
  %146 = getelementptr inbounds %"class.v8::internal::wasm::AsmType"*, %"class.v8::internal::wasm::AsmType"** %137, i64 %144
  %147 = getelementptr inbounds %"class.v8::internal::wasm::AsmType"*, %"class.v8::internal::wasm::AsmType"** %146, i64 -1
  %148 = bitcast %"class.v8::internal::wasm::AsmType"** %147 to <2 x i64>*
  %149 = load <2 x i64>, <2 x i64>* %148, align 8, !alias.scope !3
  %150 = getelementptr inbounds %"class.v8::internal::wasm::AsmType"*, %"class.v8::internal::wasm::AsmType"** %146, i64 -2
  %151 = getelementptr inbounds %"class.v8::internal::wasm::AsmType"*, %"class.v8::internal::wasm::AsmType"** %150, i64 -1
  %152 = bitcast %"class.v8::internal::wasm::AsmType"** %151 to <2 x i64>*
  %153 = load <2 x i64>, <2 x i64>* %152, align 8, !alias.scope !3
  %154 = getelementptr inbounds %"class.v8::internal::wasm::AsmType"*, %"class.v8::internal::wasm::AsmType"** %145, i64 -1
  %155 = bitcast %"class.v8::internal::wasm::AsmType"** %154 to <2 x i64>*
  store <2 x i64> %149, <2 x i64>* %155, align 8, !alias.scope !6, !noalias !3
  %156 = getelementptr inbounds %"class.v8::internal::wasm::AsmType"*, %"class.v8::internal::wasm::AsmType"** %145, i64 -2
  %157 = getelementptr inbounds %"class.v8::internal::wasm::AsmType"*, %"class.v8::internal::wasm::AsmType"** %156, i64 -1
  %158 = bitcast %"class.v8::internal::wasm::AsmType"** %157 to <2 x i64>*
  store <2 x i64> %153, <2 x i64>* %158, align 8, !alias.scope !6, !noalias !3
  %159 = sub nuw nsw i64 -4, %141
  %160 = sub nuw nsw i64 -4, %141
  %161 = getelementptr inbounds %"class.v8::internal::wasm::AsmType"*, %"class.v8::internal::wasm::AsmType"** %138, i64 %159
  %162 = getelementptr inbounds %"class.v8::internal::wasm::AsmType"*, %"class.v8::internal::wasm::AsmType"** %139, i64 %160
  %163 = getelementptr inbounds %"class.v8::internal::wasm::AsmType"*, %"class.v8::internal::wasm::AsmType"** %162, i64 -1
  %164 = bitcast %"class.v8::internal::wasm::AsmType"** %163 to <2 x i64>*
  %165 = load <2 x i64>, <2 x i64>* %164, align 8, !alias.scope !3
  %166 = getelementptr inbounds %"class.v8::internal::wasm::AsmType"*, %"class.v8::internal::wasm::AsmType"** %162, i64 -2
  %167 = getelementptr inbounds %"class.v8::internal::wasm::AsmType"*, %"class.v8::internal::wasm::AsmType"** %166, i64 -1
  %168 = bitcast %"class.v8::internal::wasm::AsmType"** %167 to <2 x i64>*
  %169 = load <2 x i64>, <2 x i64>* %168, align 8, !alias.scope !3
  %170 = getelementptr inbounds %"class.v8::internal::wasm::AsmType"*, %"class.v8::internal::wasm::AsmType"** %161, i64 -1
  %171 = bitcast %"class.v8::internal::wasm::AsmType"** %170 to <2 x i64>*
  store <2 x i64> %165, <2 x i64>* %171, align 8, !alias.scope !6, !noalias !3
  %172 = getelementptr inbounds %"class.v8::internal::wasm::AsmType"*, %"class.v8::internal::wasm::AsmType"** %161, i64 -2
  %173 = getelementptr inbounds %"class.v8::internal::wasm::AsmType"*, %"class.v8::internal::wasm::AsmType"** %172, i64 -1
  %174 = bitcast %"class.v8::internal::wasm::AsmType"** %173 to <2 x i64>*
  store <2 x i64> %169, <2 x i64>* %174, align 8, !alias.scope !6, !noalias !3
  %175 = add i64 %141, 8
  %176 = add i64 %142, -2
  %177 = icmp eq i64 %176, 0
  br i1 %177, label %178, label %140, !llvm.loop !8

178:                                              ; preds = %140, %123
  %179 = phi i64 [ 0, %123 ], [ %175, %140 ]
  %180 = icmp eq i64 %132, 0
  br i1 %180, label %200, label %181

181:                                              ; preds = %178
  %182 = sub i64 0, %179
  %183 = getelementptr %"class.v8::internal::wasm::AsmType"*, %"class.v8::internal::wasm::AsmType"** %92, i64 -1
  %184 = sub i64 0, %179
  %185 = getelementptr %"class.v8::internal::wasm::AsmType"*, %"class.v8::internal::wasm::AsmType"** %101, i64 -1
  %186 = getelementptr inbounds %"class.v8::internal::wasm::AsmType"*, %"class.v8::internal::wasm::AsmType"** %183, i64 %182
  %187 = getelementptr inbounds %"class.v8::internal::wasm::AsmType"*, %"class.v8::internal::wasm::AsmType"** %185, i64 %184
  %188 = getelementptr inbounds %"class.v8::internal::wasm::AsmType"*, %"class.v8::internal::wasm::AsmType"** %187, i64 -1
  %189 = bitcast %"class.v8::internal::wasm::AsmType"** %188 to <2 x i64>*
  %190 = load <2 x i64>, <2 x i64>* %189, align 8, !alias.scope !3
  %191 = getelementptr inbounds %"class.v8::internal::wasm::AsmType"*, %"class.v8::internal::wasm::AsmType"** %187, i64 -2
  %192 = getelementptr inbounds %"class.v8::internal::wasm::AsmType"*, %"class.v8::internal::wasm::AsmType"** %191, i64 -1
  %193 = bitcast %"class.v8::internal::wasm::AsmType"** %192 to <2 x i64>*
  %194 = load <2 x i64>, <2 x i64>* %193, align 8, !alias.scope !3
  %195 = getelementptr inbounds %"class.v8::internal::wasm::AsmType"*, %"class.v8::internal::wasm::AsmType"** %186, i64 -1
  %196 = bitcast %"class.v8::internal::wasm::AsmType"** %195 to <2 x i64>*
  store <2 x i64> %190, <2 x i64>* %196, align 8, !alias.scope !6, !noalias !3
  %197 = getelementptr inbounds %"class.v8::internal::wasm::AsmType"*, %"class.v8::internal::wasm::AsmType"** %186, i64 -2
  %198 = getelementptr inbounds %"class.v8::internal::wasm::AsmType"*, %"class.v8::internal::wasm::AsmType"** %197, i64 -1
  %199 = bitcast %"class.v8::internal::wasm::AsmType"** %198 to <2 x i64>*
  store <2 x i64> %194, <2 x i64>* %199, align 8, !alias.scope !6, !noalias !3
  br label %200

200:                                              ; preds = %178, %181
  %201 = icmp eq i64 %108, %124
  br i1 %201, label %272, label %202

202:                                              ; preds = %200, %110, %103
  %203 = phi %"class.v8::internal::wasm::AsmType"** [ %92, %110 ], [ %92, %103 ], [ %126, %200 ]
  %204 = phi %"class.v8::internal::wasm::AsmType"** [ %101, %110 ], [ %101, %103 ], [ %128, %200 ]
  %205 = getelementptr %"class.v8::internal::wasm::AsmType"*, %"class.v8::internal::wasm::AsmType"** %204, i64 -1
  %206 = ptrtoint %"class.v8::internal::wasm::AsmType"** %205 to i64
  %207 = sub i64 %206, %100
  %208 = lshr i64 %207, 3
  %209 = add nuw nsw i64 %208, 1
  %210 = and i64 %209, 7
  %211 = icmp eq i64 %210, 0
  br i1 %211, label %223, label %212

212:                                              ; preds = %202, %212
  %213 = phi %"class.v8::internal::wasm::AsmType"** [ %216, %212 ], [ %203, %202 ]
  %214 = phi %"class.v8::internal::wasm::AsmType"** [ %217, %212 ], [ %204, %202 ]
  %215 = phi i64 [ %221, %212 ], [ %210, %202 ]
  %216 = getelementptr inbounds %"class.v8::internal::wasm::AsmType"*, %"class.v8::internal::wasm::AsmType"** %213, i64 -1
  %217 = getelementptr inbounds %"class.v8::internal::wasm::AsmType"*, %"class.v8::internal::wasm::AsmType"** %214, i64 -1
  %218 = bitcast %"class.v8::internal::wasm::AsmType"** %217 to i64*
  %219 = load i64, i64* %218, align 8
  %220 = bitcast %"class.v8::internal::wasm::AsmType"** %216 to i64*
  store i64 %219, i64* %220, align 8
  %221 = add i64 %215, -1
  %222 = icmp eq i64 %221, 0
  br i1 %222, label %223, label %212, !llvm.loop !10

223:                                              ; preds = %212, %202
  %224 = phi %"class.v8::internal::wasm::AsmType"** [ undef, %202 ], [ %216, %212 ]
  %225 = phi %"class.v8::internal::wasm::AsmType"** [ %203, %202 ], [ %216, %212 ]
  %226 = phi %"class.v8::internal::wasm::AsmType"** [ %204, %202 ], [ %217, %212 ]
  %227 = icmp ult i64 %207, 56
  br i1 %227, label %272, label %228

228:                                              ; preds = %223, %228
  %229 = phi %"class.v8::internal::wasm::AsmType"** [ %266, %228 ], [ %225, %223 ]
  %230 = phi %"class.v8::internal::wasm::AsmType"** [ %267, %228 ], [ %226, %223 ]
  %231 = getelementptr inbounds %"class.v8::internal::wasm::AsmType"*, %"class.v8::internal::wasm::AsmType"** %229, i64 -1
  %232 = getelementptr inbounds %"class.v8::internal::wasm::AsmType"*, %"class.v8::internal::wasm::AsmType"** %230, i64 -1
  %233 = bitcast %"class.v8::internal::wasm::AsmType"** %232 to i64*
  %234 = load i64, i64* %233, align 8
  %235 = bitcast %"class.v8::internal::wasm::AsmType"** %231 to i64*
  store i64 %234, i64* %235, align 8
  %236 = getelementptr inbounds %"class.v8::internal::wasm::AsmType"*, %"class.v8::internal::wasm::AsmType"** %229, i64 -2
  %237 = getelementptr inbounds %"class.v8::internal::wasm::AsmType"*, %"class.v8::internal::wasm::AsmType"** %230, i64 -2
  %238 = bitcast %"class.v8::internal::wasm::AsmType"** %237 to i64*
  %239 = load i64, i64* %238, align 8
  %240 = bitcast %"class.v8::internal::wasm::AsmType"** %236 to i64*
  store i64 %239, i64* %240, align 8
  %241 = getelementptr inbounds %"class.v8::internal::wasm::AsmType"*, %"class.v8::internal::wasm::AsmType"** %229, i64 -3
  %242 = getelementptr inbounds %"class.v8::internal::wasm::AsmType"*, %"class.v8::internal::wasm::AsmType"** %230, i64 -3
  %243 = bitcast %"class.v8::internal::wasm::AsmType"** %242 to i64*
  %244 = load i64, i64* %243, align 8
  %245 = bitcast %"class.v8::internal::wasm::AsmType"** %241 to i64*
  store i64 %244, i64* %245, align 8
  %246 = getelementptr inbounds %"class.v8::internal::wasm::AsmType"*, %"class.v8::internal::wasm::AsmType"** %229, i64 -4
  %247 = getelementptr inbounds %"class.v8::internal::wasm::AsmType"*, %"class.v8::internal::wasm::AsmType"** %230, i64 -4
  %248 = bitcast %"class.v8::internal::wasm::AsmType"** %247 to i64*
  %249 = load i64, i64* %248, align 8
  %250 = bitcast %"class.v8::internal::wasm::AsmType"** %246 to i64*
  store i64 %249, i64* %250, align 8
  %251 = getelementptr inbounds %"class.v8::internal::wasm::AsmType"*, %"class.v8::internal::wasm::AsmType"** %229, i64 -5
  %252 = getelementptr inbounds %"class.v8::internal::wasm::AsmType"*, %"class.v8::internal::wasm::AsmType"** %230, i64 -5
  %253 = bitcast %"class.v8::internal::wasm::AsmType"** %252 to i64*
  %254 = load i64, i64* %253, align 8
  %255 = bitcast %"class.v8::internal::wasm::AsmType"** %251 to i64*
  store i64 %254, i64* %255, align 8
  %256 = getelementptr inbounds %"class.v8::internal::wasm::AsmType"*, %"class.v8::internal::wasm::AsmType"** %229, i64 -6
  %257 = getelementptr inbounds %"class.v8::internal::wasm::AsmType"*, %"class.v8::internal::wasm::AsmType"** %230, i64 -6
  %258 = bitcast %"class.v8::internal::wasm::AsmType"** %257 to i64*
  %259 = load i64, i64* %258, align 8
  %260 = bitcast %"class.v8::internal::wasm::AsmType"** %256 to i64*
  store i64 %259, i64* %260, align 8
  %261 = getelementptr inbounds %"class.v8::internal::wasm::AsmType"*, %"class.v8::internal::wasm::AsmType"** %229, i64 -7
  %262 = getelementptr inbounds %"class.v8::internal::wasm::AsmType"*, %"class.v8::internal::wasm::AsmType"** %230, i64 -7
  %263 = bitcast %"class.v8::internal::wasm::AsmType"** %262 to i64*
  %264 = load i64, i64* %263, align 8
  %265 = bitcast %"class.v8::internal::wasm::AsmType"** %261 to i64*
  store i64 %264, i64* %265, align 8
  %266 = getelementptr inbounds %"class.v8::internal::wasm::AsmType"*, %"class.v8::internal::wasm::AsmType"** %229, i64 -8
  %267 = getelementptr inbounds %"class.v8::internal::wasm::AsmType"*, %"class.v8::internal::wasm::AsmType"** %230, i64 -8
  %268 = bitcast %"class.v8::internal::wasm::AsmType"** %267 to i64*
  %269 = load i64, i64* %268, align 8
  %270 = bitcast %"class.v8::internal::wasm::AsmType"** %266 to i64*
  store i64 %269, i64* %270, align 8
  %271 = icmp eq %"class.v8::internal::wasm::AsmType"** %267, %99
  br i1 %271, label %272, label %228, !llvm.loop !12

272:                                              ; preds = %223, %228, %200, %89
  %273 = phi %"class.v8::internal::wasm::AsmType"** [ %92, %89 ], [ %126, %200 ], [ %224, %223 ], [ %266, %228 ]
  %274 = ptrtoint %"class.v8::internal::wasm::AsmType"** %273 to i64
  store i64 %274, i64* %53, align 8
  store i64 %97, i64* %52, align 8
  store i64 %94, i64* %62, align 8
  br label %275

275:                                              ; preds = %45, %272
  %276 = load %"class.v8::internal::Zone"*, %"class.v8::internal::Zone"** %2, align 8
  %277 = ptrtoint %"class.v8::internal::Zone"* %276 to i64
  %278 = getelementptr inbounds %"class.v8::internal::Zone", %"class.v8::internal::Zone"* %276, i64 0, i32 2
  %279 = load i64, i64* %278, align 8
  %280 = getelementptr inbounds %"class.v8::internal::Zone", %"class.v8::internal::Zone"* %276, i64 0, i32 3
  %281 = load i64, i64* %280, align 8
  %282 = sub i64 %281, %279
  %283 = icmp ult i64 %282, 48
  br i1 %283, label %284, label %286, !prof !2

284:                                              ; preds = %275
  %285 = tail call i64 @_ZN2v88internal4Zone9NewExpandEm(%"class.v8::internal::Zone"* %276, i64 48) #12
  br label %288

286:                                              ; preds = %275
  %287 = add i64 %279, 48
  store i64 %287, i64* %278, align 8
  br label %288

288:                                              ; preds = %284, %286
  %289 = phi i64 [ %285, %284 ], [ %279, %286 ]
  %290 = inttoptr i64 %289 to %"class.v8::internal::wasm::AsmFunctionType"*
  %291 = getelementptr inbounds %"class.v8::internal::wasm::AsmFunctionType", %"class.v8::internal::wasm::AsmFunctionType"* %290, i64 0, i32 0, i32 0
  store i32 (...)** bitcast (i8** getelementptr inbounds ({ [9 x i8*] }, { [9 x i8*] }* @_ZTVN2v88internal4wasm15AsmFunctionTypeE, i64 0, inrange i32 0, i64 2) to i32 (...)**), i32 (...)*** %291, align 8
  %292 = getelementptr inbounds %"class.v8::internal::wasm::AsmFunctionType", %"class.v8::internal::wasm::AsmFunctionType"* %290, i64 0, i32 1
  %293 = bitcast %"class.v8::internal::wasm::AsmType"** %292 to i64*
  store i64 237, i64* %293, align 8
  %294 = getelementptr inbounds %"class.v8::internal::wasm::AsmFunctionType", %"class.v8::internal::wasm::AsmFunctionType"* %290, i64 0, i32 2
  %295 = getelementptr inbounds %"class.v8::internal::wasm::AsmFunctionType", %"class.v8::internal::wasm::AsmFunctionType"* %290, i64 0, i32 2, i32 0, i32 0, i32 2, i32 1
  %296 = bitcast %"struct.std::__1::__compressed_pair_elem.184"* %295 to i64*
  %297 = bitcast %"class.v8::internal::ZoneVector.179"* %294 to i8*
  tail call void @llvm.memset.p0i8.i64(i8* align 8 %297, i8 0, i64 24, i1 false) #12
  store i64 %277, i64* %296, align 8
  %298 = inttoptr i64 %289 to %"class.v8::internal::wasm::AsmType"*
  %299 = getelementptr inbounds %"class.v8::internal::wasm::AsmJsParser", %"class.v8::internal::wasm::AsmJsParser"* %0, i64 0, i32 27
  store %"class.v8::internal::wasm::AsmType"* %298, %"class.v8::internal::wasm::AsmType"** %299, align 8
  %300 = and i64 %289, 1
  %301 = icmp eq i64 %300, 0
  br i1 %301, label %302, label %309

302:                                              ; preds = %288
  %303 = inttoptr i64 %289 to %"class.v8::internal::wasm::AsmCallableType"*
  %304 = inttoptr i64 %289 to %"class.v8::internal::wasm::AsmFunctionType"* (%"class.v8::internal::wasm::AsmCallableType"*)***
  %305 = load %"class.v8::internal::wasm::AsmFunctionType"* (%"class.v8::internal::wasm::AsmCallableType"*)**, %"class.v8::internal::wasm::AsmFunctionType"* (%"class.v8::internal::wasm::AsmCallableType"*)*** %304, align 8
  %306 = getelementptr inbounds %"class.v8::internal::wasm::AsmFunctionType"* (%"class.v8::internal::wasm::AsmCallableType"*)*, %"class.v8::internal::wasm::AsmFunctionType"* (%"class.v8::internal::wasm::AsmCallableType"*)** %305, i64 2
  %307 = load %"class.v8::internal::wasm::AsmFunctionType"* (%"class.v8::internal::wasm::AsmCallableType"*)*, %"class.v8::internal::wasm::AsmFunctionType"* (%"class.v8::internal::wasm::AsmCallableType"*)** %306, align 8
  %308 = tail call %"class.v8::internal::wasm::AsmFunctionType"* %307(%"class.v8::internal::wasm::AsmCallableType"* %303) #12
  br label %309

309:                                              ; preds = %288, %302
  %310 = phi %"class.v8::internal::wasm::AsmFunctionType"* [ %308, %302 ], [ null, %288 ]
  %311 = getelementptr inbounds %"class.v8::internal::wasm::AsmFunctionType", %"class.v8::internal::wasm::AsmFunctionType"* %310, i64 0, i32 2, i32 0
  %312 = getelementptr inbounds %"class.v8::internal::wasm::AsmFunctionType", %"class.v8::internal::wasm::AsmFunctionType"* %310, i64 0, i32 2, i32 0, i32 0, i32 1
  %313 = load %"class.v8::internal::wasm::AsmType"**, %"class.v8::internal::wasm::AsmType"*** %312, align 8
  %314 = getelementptr inbounds %"class.v8::internal::wasm::AsmFunctionType", %"class.v8::internal::wasm::AsmFunctionType"* %310, i64 0, i32 2, i32 0, i32 0, i32 2, i32 0, i32 0
  %315 = load %"class.v8::internal::wasm::AsmType"**, %"class.v8::internal::wasm::AsmType"*** %314, align 8
  %316 = icmp eq %"class.v8::internal::wasm::AsmType"** %313, %315
  %317 = ptrtoint %"class.v8::internal::wasm::AsmType"** %315 to i64
  br i1 %316, label %323, label %318

318:                                              ; preds = %309
  %319 = bitcast %"class.v8::internal::wasm::AsmType"** %313 to i64*
  store i64 77, i64* %319, align 8
  %320 = getelementptr inbounds %"class.v8::internal::wasm::AsmType"*, %"class.v8::internal::wasm::AsmType"** %313, i64 1
  %321 = ptrtoint %"class.v8::internal::wasm::AsmType"** %320 to i64
  %322 = bitcast %"class.v8::internal::wasm::AsmType"*** %312 to i64*
  store i64 %321, i64* %322, align 8
  br label %548

323:                                              ; preds = %309
  %324 = ptrtoint %"class.v8::internal::wasm::AsmType"** %313 to i64
  %325 = bitcast %"class.v8::internal::wasm::AsmType"*** %312 to i64*
  %326 = bitcast %"class.std::__1::vector.180"* %311 to i64*
  %327 = load i64, i64* %326, align 8
  %328 = sub i64 %324, %327
  %329 = ashr exact i64 %328, 3
  %330 = add nsw i64 %329, 1
  %331 = icmp ugt i64 %330, 268435455
  br i1 %331, label %332, label %334

332:                                              ; preds = %323
  %333 = bitcast %"class.std::__1::vector.180"* %311 to %"class.std::__1::__vector_base_common"*
  tail call void @_ZNKSt3__120__vector_base_commonILb1EE20__throw_length_errorEv(%"class.std::__1::__vector_base_common"* %333) #13
  unreachable

334:                                              ; preds = %323
  %335 = bitcast %"class.v8::internal::wasm::AsmType"*** %314 to i64*
  %336 = sub i64 %317, %327
  %337 = ashr exact i64 %336, 3
  %338 = icmp ult i64 %337, 134217727
  br i1 %338, label %339, label %344

339:                                              ; preds = %334
  %340 = ashr exact i64 %336, 2
  %341 = icmp ult i64 %340, %330
  %342 = select i1 %341, i64 %330, i64 %340
  %343 = icmp eq i64 %342, 0
  br i1 %343, label %362, label %344

344:                                              ; preds = %339, %334
  %345 = phi i64 [ %342, %339 ], [ 268435455, %334 ]
  %346 = getelementptr inbounds %"class.v8::internal::wasm::AsmFunctionType", %"class.v8::internal::wasm::AsmFunctionType"* %310, i64 0, i32 2, i32 0, i32 0, i32 2, i32 1, i32 0, i32 0
  %347 = load %"class.v8::internal::Zone"*, %"class.v8::internal::Zone"** %346, align 8
  %348 = shl i64 %345, 3
  %349 = getelementptr inbounds %"class.v8::internal::Zone", %"class.v8::internal::Zone"* %347, i64 0, i32 2
  %350 = load i64, i64* %349, align 8
  %351 = getelementptr inbounds %"class.v8::internal::Zone", %"class.v8::internal::Zone"* %347, i64 0, i32 3
  %352 = load i64, i64* %351, align 8
  %353 = sub i64 %352, %350
  %354 = icmp ugt i64 %348, %353
  br i1 %354, label %355, label %357, !prof !2

355:                                              ; preds = %344
  %356 = tail call i64 @_ZN2v88internal4Zone9NewExpandEm(%"class.v8::internal::Zone"* %347, i64 %348) #12
  br label %359

357:                                              ; preds = %344
  %358 = add i64 %350, %348
  store i64 %358, i64* %349, align 8
  br label %359

359:                                              ; preds = %357, %355
  %360 = phi i64 [ %356, %355 ], [ %350, %357 ]
  %361 = inttoptr i64 %360 to %"class.v8::internal::wasm::AsmType"**
  br label %362

362:                                              ; preds = %359, %339
  %363 = phi i64 [ %345, %359 ], [ 0, %339 ]
  %364 = phi %"class.v8::internal::wasm::AsmType"** [ %361, %359 ], [ null, %339 ]
  %365 = getelementptr inbounds %"class.v8::internal::wasm::AsmType"*, %"class.v8::internal::wasm::AsmType"** %364, i64 %329
  %366 = getelementptr inbounds %"class.v8::internal::wasm::AsmType"*, %"class.v8::internal::wasm::AsmType"** %364, i64 %363
  %367 = ptrtoint %"class.v8::internal::wasm::AsmType"** %366 to i64
  %368 = bitcast %"class.v8::internal::wasm::AsmType"** %365 to i64*
  store i64 77, i64* %368, align 8
  %369 = getelementptr inbounds %"class.v8::internal::wasm::AsmType"*, %"class.v8::internal::wasm::AsmType"** %365, i64 1
  %370 = ptrtoint %"class.v8::internal::wasm::AsmType"** %369 to i64
  %371 = getelementptr inbounds %"class.std::__1::vector.180", %"class.std::__1::vector.180"* %311, i64 0, i32 0, i32 0
  %372 = load %"class.v8::internal::wasm::AsmType"**, %"class.v8::internal::wasm::AsmType"*** %371, align 8
  %373 = ptrtoint %"class.v8::internal::wasm::AsmType"** %372 to i64
  %374 = load %"class.v8::internal::wasm::AsmType"**, %"class.v8::internal::wasm::AsmType"*** %312, align 8
  %375 = icmp eq %"class.v8::internal::wasm::AsmType"** %374, %372
  br i1 %375, label %545, label %376

376:                                              ; preds = %362
  %377 = getelementptr %"class.v8::internal::wasm::AsmType"*, %"class.v8::internal::wasm::AsmType"** %374, i64 -1
  %378 = ptrtoint %"class.v8::internal::wasm::AsmType"** %377 to i64
  %379 = sub i64 %378, %373
  %380 = lshr i64 %379, 3
  %381 = add nuw nsw i64 %380, 1
  %382 = icmp ult i64 %381, 4
  br i1 %382, label %475, label %383

383:                                              ; preds = %376
  %384 = getelementptr %"class.v8::internal::wasm::AsmType"*, %"class.v8::internal::wasm::AsmType"** %374, i64 -1
  %385 = ptrtoint %"class.v8::internal::wasm::AsmType"** %384 to i64
  %386 = sub i64 %385, %373
  %387 = lshr i64 %386, 3
  %388 = xor i64 %387, -1
  %389 = add nsw i64 %329, %388
  %390 = getelementptr %"class.v8::internal::wasm::AsmType"*, %"class.v8::internal::wasm::AsmType"** %364, i64 %389
  %391 = xor i64 %387, -1
  %392 = getelementptr %"class.v8::internal::wasm::AsmType"*, %"class.v8::internal::wasm::AsmType"** %374, i64 %391
  %393 = icmp ult %"class.v8::internal::wasm::AsmType"** %390, %374
  %394 = icmp ult %"class.v8::internal::wasm::AsmType"** %392, %365
  %395 = and i1 %393, %394
  br i1 %395, label %475, label %396

396:                                              ; preds = %383
  %397 = and i64 %381, 4611686018427387900
  %398 = sub nsw i64 0, %397
  %399 = getelementptr %"class.v8::internal::wasm::AsmType"*, %"class.v8::internal::wasm::AsmType"** %365, i64 %398
  %400 = sub nsw i64 0, %397
  %401 = getelementptr %"class.v8::internal::wasm::AsmType"*, %"class.v8::internal::wasm::AsmType"** %374, i64 %400
  %402 = add nsw i64 %397, -4
  %403 = lshr exact i64 %402, 2
  %404 = add nuw nsw i64 %403, 1
  %405 = and i64 %404, 1
  %406 = icmp eq i64 %402, 0
  br i1 %406, label %451, label %407

407:                                              ; preds = %396
  %408 = sub nuw nsw i64 %404, %405
  %409 = getelementptr %"class.v8::internal::wasm::AsmType"*, %"class.v8::internal::wasm::AsmType"** %365, i64 -1
  %410 = getelementptr %"class.v8::internal::wasm::AsmType"*, %"class.v8::internal::wasm::AsmType"** %374, i64 -1
  %411 = getelementptr %"class.v8::internal::wasm::AsmType"*, %"class.v8::internal::wasm::AsmType"** %365, i64 -1
  %412 = getelementptr %"class.v8::internal::wasm::AsmType"*, %"class.v8::internal::wasm::AsmType"** %374, i64 -1
  br label %413

413:                                              ; preds = %413, %407
  %414 = phi i64 [ 0, %407 ], [ %448, %413 ]
  %415 = phi i64 [ %408, %407 ], [ %449, %413 ]
  %416 = sub i64 0, %414
  %417 = sub i64 0, %414
  %418 = getelementptr inbounds %"class.v8::internal::wasm::AsmType"*, %"class.v8::internal::wasm::AsmType"** %409, i64 %416
  %419 = getelementptr inbounds %"class.v8::internal::wasm::AsmType"*, %"class.v8::internal::wasm::AsmType"** %410, i64 %417
  %420 = getelementptr inbounds %"class.v8::internal::wasm::AsmType"*, %"class.v8::internal::wasm::AsmType"** %419, i64 -1
  %421 = bitcast %"class.v8::internal::wasm::AsmType"** %420 to <2 x i64>*
  %422 = load <2 x i64>, <2 x i64>* %421, align 8, !alias.scope !13
  %423 = getelementptr inbounds %"class.v8::internal::wasm::AsmType"*, %"class.v8::internal::wasm::AsmType"** %419, i64 -2
  %424 = getelementptr inbounds %"class.v8::internal::wasm::AsmType"*, %"class.v8::internal::wasm::AsmType"** %423, i64 -1
  %425 = bitcast %"class.v8::internal::wasm::AsmType"** %424 to <2 x i64>*
  %426 = load <2 x i64>, <2 x i64>* %425, align 8, !alias.scope !13
  %427 = getelementptr inbounds %"class.v8::internal::wasm::AsmType"*, %"class.v8::internal::wasm::AsmType"** %418, i64 -1
  %428 = bitcast %"class.v8::internal::wasm::AsmType"** %427 to <2 x i64>*
  store <2 x i64> %422, <2 x i64>* %428, align 8, !alias.scope !16, !noalias !13
  %429 = getelementptr inbounds %"class.v8::internal::wasm::AsmType"*, %"class.v8::internal::wasm::AsmType"** %418, i64 -2
  %430 = getelementptr inbounds %"class.v8::internal::wasm::AsmType"*, %"class.v8::internal::wasm::AsmType"** %429, i64 -1
  %431 = bitcast %"class.v8::internal::wasm::AsmType"** %430 to <2 x i64>*
  store <2 x i64> %426, <2 x i64>* %431, align 8, !alias.scope !16, !noalias !13
  %432 = sub nuw nsw i64 -4, %414
  %433 = sub nuw nsw i64 -4, %414
  %434 = getelementptr inbounds %"class.v8::internal::wasm::AsmType"*, %"class.v8::internal::wasm::AsmType"** %411, i64 %432
  %435 = getelementptr inbounds %"class.v8::internal::wasm::AsmType"*, %"class.v8::internal::wasm::AsmType"** %412, i64 %433
  %436 = getelementptr inbounds %"class.v8::internal::wasm::AsmType"*, %"class.v8::internal::wasm::AsmType"** %435, i64 -1
  %437 = bitcast %"class.v8::internal::wasm::AsmType"** %436 to <2 x i64>*
  %438 = load <2 x i64>, <2 x i64>* %437, align 8, !alias.scope !13
  %439 = getelementptr inbounds %"class.v8::internal::wasm::AsmType"*, %"class.v8::internal::wasm::AsmType"** %435, i64 -2
  %440 = getelementptr inbounds %"class.v8::internal::wasm::AsmType"*, %"class.v8::internal::wasm::AsmType"** %439, i64 -1
  %441 = bitcast %"class.v8::internal::wasm::AsmType"** %440 to <2 x i64>*
  %442 = load <2 x i64>, <2 x i64>* %441, align 8, !alias.scope !13
  %443 = getelementptr inbounds %"class.v8::internal::wasm::AsmType"*, %"class.v8::internal::wasm::AsmType"** %434, i64 -1
  %444 = bitcast %"class.v8::internal::wasm::AsmType"** %443 to <2 x i64>*
  store <2 x i64> %438, <2 x i64>* %444, align 8, !alias.scope !16, !noalias !13
  %445 = getelementptr inbounds %"class.v8::internal::wasm::AsmType"*, %"class.v8::internal::wasm::AsmType"** %434, i64 -2
  %446 = getelementptr inbounds %"class.v8::internal::wasm::AsmType"*, %"class.v8::internal::wasm::AsmType"** %445, i64 -1
  %447 = bitcast %"class.v8::internal::wasm::AsmType"** %446 to <2 x i64>*
  store <2 x i64> %442, <2 x i64>* %447, align 8, !alias.scope !16, !noalias !13
  %448 = add i64 %414, 8
  %449 = add i64 %415, -2
  %450 = icmp eq i64 %449, 0
  br i1 %450, label %451, label %413, !llvm.loop !18

451:                                              ; preds = %413, %396
  %452 = phi i64 [ 0, %396 ], [ %448, %413 ]
  %453 = icmp eq i64 %405, 0
  br i1 %453, label %473, label %454

454:                                              ; preds = %451
  %455 = sub i64 0, %452
  %456 = getelementptr %"class.v8::internal::wasm::AsmType"*, %"class.v8::internal::wasm::AsmType"** %365, i64 -1
  %457 = sub i64 0, %452
  %458 = getelementptr %"class.v8::internal::wasm::AsmType"*, %"class.v8::internal::wasm::AsmType"** %374, i64 -1
  %459 = getelementptr inbounds %"class.v8::internal::wasm::AsmType"*, %"class.v8::internal::wasm::AsmType"** %456, i64 %455
  %460 = getelementptr inbounds %"class.v8::internal::wasm::AsmType"*, %"class.v8::internal::wasm::AsmType"** %458, i64 %457
  %461 = getelementptr inbounds %"class.v8::internal::wasm::AsmType"*, %"class.v8::internal::wasm::AsmType"** %460, i64 -1
  %462 = bitcast %"class.v8::internal::wasm::AsmType"** %461 to <2 x i64>*
  %463 = load <2 x i64>, <2 x i64>* %462, align 8, !alias.scope !13
  %464 = getelementptr inbounds %"class.v8::internal::wasm::AsmType"*, %"class.v8::internal::wasm::AsmType"** %460, i64 -2
  %465 = getelementptr inbounds %"class.v8::internal::wasm::AsmType"*, %"class.v8::internal::wasm::AsmType"** %464, i64 -1
  %466 = bitcast %"class.v8::internal::wasm::AsmType"** %465 to <2 x i64>*
  %467 = load <2 x i64>, <2 x i64>* %466, align 8, !alias.scope !13
  %468 = getelementptr inbounds %"class.v8::internal::wasm::AsmType"*, %"class.v8::internal::wasm::AsmType"** %459, i64 -1
  %469 = bitcast %"class.v8::internal::wasm::AsmType"** %468 to <2 x i64>*
  store <2 x i64> %463, <2 x i64>* %469, align 8, !alias.scope !16, !noalias !13
  %470 = getelementptr inbounds %"class.v8::internal::wasm::AsmType"*, %"class.v8::internal::wasm::AsmType"** %459, i64 -2
  %471 = getelementptr inbounds %"class.v8::internal::wasm::AsmType"*, %"class.v8::internal::wasm::AsmType"** %470, i64 -1
  %472 = bitcast %"class.v8::internal::wasm::AsmType"** %471 to <2 x i64>*
  store <2 x i64> %467, <2 x i64>* %472, align 8, !alias.scope !16, !noalias !13
  br label %473

473:                                              ; preds = %451, %454
  %474 = icmp eq i64 %381, %397
  br i1 %474, label %545, label %475

475:                                              ; preds = %473, %383, %376
  %476 = phi %"class.v8::internal::wasm::AsmType"** [ %365, %383 ], [ %365, %376 ], [ %399, %473 ]
  %477 = phi %"class.v8::internal::wasm::AsmType"** [ %374, %383 ], [ %374, %376 ], [ %401, %473 ]
  %478 = getelementptr %"class.v8::internal::wasm::AsmType"*, %"class.v8::internal::wasm::AsmType"** %477, i64 -1
  %479 = ptrtoint %"class.v8::internal::wasm::AsmType"** %478 to i64
  %480 = sub i64 %479, %373
  %481 = lshr i64 %480, 3
  %482 = add nuw nsw i64 %481, 1
  %483 = and i64 %482, 7
  %484 = icmp eq i64 %483, 0
  br i1 %484, label %496, label %485

485:                                              ; preds = %475, %485
  %486 = phi %"class.v8::internal::wasm::AsmType"** [ %489, %485 ], [ %476, %475 ]
  %487 = phi %"class.v8::internal::wasm::AsmType"** [ %490, %485 ], [ %477, %475 ]
  %488 = phi i64 [ %494, %485 ], [ %483, %475 ]
  %489 = getelementptr inbounds %"class.v8::internal::wasm::AsmType"*, %"class.v8::internal::wasm::AsmType"** %486, i64 -1
  %490 = getelementptr inbounds %"class.v8::internal::wasm::AsmType"*, %"class.v8::internal::wasm::AsmType"** %487, i64 -1
  %491 = bitcast %"class.v8::internal::wasm::AsmType"** %490 to i64*
  %492 = load i64, i64* %491, align 8
  %493 = bitcast %"class.v8::internal::wasm::AsmType"** %489 to i64*
  store i64 %492, i64* %493, align 8
  %494 = add i64 %488, -1
  %495 = icmp eq i64 %494, 0
  br i1 %495, label %496, label %485, !llvm.loop !19

496:                                              ; preds = %485, %475
  %497 = phi %"class.v8::internal::wasm::AsmType"** [ undef, %475 ], [ %489, %485 ]
  %498 = phi %"class.v8::internal::wasm::AsmType"** [ %476, %475 ], [ %489, %485 ]
  %499 = phi %"class.v8::internal::wasm::AsmType"** [ %477, %475 ], [ %490, %485 ]
  %500 = icmp ult i64 %480, 56
  br i1 %500, label %545, label %501

501:                                              ; preds = %496, %501
  %502 = phi %"class.v8::internal::wasm::AsmType"** [ %539, %501 ], [ %498, %496 ]
  %503 = phi %"class.v8::internal::wasm::AsmType"** [ %540, %501 ], [ %499, %496 ]
  %504 = getelementptr inbounds %"class.v8::internal::wasm::AsmType"*, %"class.v8::internal::wasm::AsmType"** %502, i64 -1
  %505 = getelementptr inbounds %"class.v8::internal::wasm::AsmType"*, %"class.v8::internal::wasm::AsmType"** %503, i64 -1
  %506 = bitcast %"class.v8::internal::wasm::AsmType"** %505 to i64*
  %507 = load i64, i64* %506, align 8
  %508 = bitcast %"class.v8::internal::wasm::AsmType"** %504 to i64*
  store i64 %507, i64* %508, align 8
  %509 = getelementptr inbounds %"class.v8::internal::wasm::AsmType"*, %"class.v8::internal::wasm::AsmType"** %502, i64 -2
  %510 = getelementptr inbounds %"class.v8::internal::wasm::AsmType"*, %"class.v8::internal::wasm::AsmType"** %503, i64 -2
  %511 = bitcast %"class.v8::internal::wasm::AsmType"** %510 to i64*
  %512 = load i64, i64* %511, align 8
  %513 = bitcast %"class.v8::internal::wasm::AsmType"** %509 to i64*
  store i64 %512, i64* %513, align 8
  %514 = getelementptr inbounds %"class.v8::internal::wasm::AsmType"*, %"class.v8::internal::wasm::AsmType"** %502, i64 -3
  %515 = getelementptr inbounds %"class.v8::internal::wasm::AsmType"*, %"class.v8::internal::wasm::AsmType"** %503, i64 -3
  %516 = bitcast %"class.v8::internal::wasm::AsmType"** %515 to i64*
  %517 = load i64, i64* %516, align 8
  %518 = bitcast %"class.v8::internal::wasm::AsmType"** %514 to i64*
  store i64 %517, i64* %518, align 8
  %519 = getelementptr inbounds %"class.v8::internal::wasm::AsmType"*, %"class.v8::internal::wasm::AsmType"** %502, i64 -4
  %520 = getelementptr inbounds %"class.v8::internal::wasm::AsmType"*, %"class.v8::internal::wasm::AsmType"** %503, i64 -4
  %521 = bitcast %"class.v8::internal::wasm::AsmType"** %520 to i64*
  %522 = load i64, i64* %521, align 8
  %523 = bitcast %"class.v8::internal::wasm::AsmType"** %519 to i64*
  store i64 %522, i64* %523, align 8
  %524 = getelementptr inbounds %"class.v8::internal::wasm::AsmType"*, %"class.v8::internal::wasm::AsmType"** %502, i64 -5
  %525 = getelementptr inbounds %"class.v8::internal::wasm::AsmType"*, %"class.v8::internal::wasm::AsmType"** %503, i64 -5
  %526 = bitcast %"class.v8::internal::wasm::AsmType"** %525 to i64*
  %527 = load i64, i64* %526, align 8
  %528 = bitcast %"class.v8::internal::wasm::AsmType"** %524 to i64*
  store i64 %527, i64* %528, align 8
  %529 = getelementptr inbounds %"class.v8::internal::wasm::AsmType"*, %"class.v8::internal::wasm::AsmType"** %502, i64 -6
  %530 = getelementptr inbounds %"class.v8::internal::wasm::AsmType"*, %"class.v8::internal::wasm::AsmType"** %503, i64 -6
  %531 = bitcast %"class.v8::internal::wasm::AsmType"** %530 to i64*
  %532 = load i64, i64* %531, align 8
  %533 = bitcast %"class.v8::internal::wasm::AsmType"** %529 to i64*
  store i64 %532, i64* %533, align 8
  %534 = getelementptr inbounds %"class.v8::internal::wasm::AsmType"*, %"class.v8::internal::wasm::AsmType"** %502, i64 -7
  %535 = getelementptr inbounds %"class.v8::internal::wasm::AsmType"*, %"class.v8::internal::wasm::AsmType"** %503, i64 -7
  %536 = bitcast %"class.v8::internal::wasm::AsmType"** %535 to i64*
  %537 = load i64, i64* %536, align 8
  %538 = bitcast %"class.v8::internal::wasm::AsmType"** %534 to i64*
  store i64 %537, i64* %538, align 8
  %539 = getelementptr inbounds %"class.v8::internal::wasm::AsmType"*, %"class.v8::internal::wasm::AsmType"** %502, i64 -8
  %540 = getelementptr inbounds %"class.v8::internal::wasm::AsmType"*, %"class.v8::internal::wasm::AsmType"** %503, i64 -8
  %541 = bitcast %"class.v8::internal::wasm::AsmType"** %540 to i64*
  %542 = load i64, i64* %541, align 8
  %543 = bitcast %"class.v8::internal::wasm::AsmType"** %539 to i64*
  store i64 %542, i64* %543, align 8
  %544 = icmp eq %"class.v8::internal::wasm::AsmType"** %540, %372
  br i1 %544, label %545, label %501, !llvm.loop !20

545:                                              ; preds = %496, %501, %473, %362
  %546 = phi %"class.v8::internal::wasm::AsmType"** [ %365, %362 ], [ %399, %473 ], [ %497, %496 ], [ %539, %501 ]
  %547 = ptrtoint %"class.v8::internal::wasm::AsmType"** %546 to i64
  store i64 %547, i64* %326, align 8
  store i64 %370, i64* %325, align 8
  store i64 %367, i64* %335, align 8
  br label %548

548:                                              ; preds = %318, %545
  %549 = load %"class.v8::internal::wasm::AsmType"*, %"class.v8::internal::wasm::AsmType"** %299, align 8
  %550 = ptrtoint %"class.v8::internal::wasm::AsmType"* %549 to i64
  %551 = and i64 %550, 1
  %552 = icmp eq i64 %551, 0
  br i1 %552, label %553, label %560

553:                                              ; preds = %548
  %554 = bitcast %"class.v8::internal::wasm::AsmType"* %549 to %"class.v8::internal::wasm::AsmCallableType"*
  %555 = bitcast %"class.v8::internal::wasm::AsmType"* %549 to %"class.v8::internal::wasm::AsmFunctionType"* (%"class.v8::internal::wasm::AsmCallableType"*)***
  %556 = load %"class.v8::internal::wasm::AsmFunctionType"* (%"class.v8::internal::wasm::AsmCallableType"*)**, %"class.v8::internal::wasm::AsmFunctionType"* (%"class.v8::internal::wasm::AsmCallableType"*)*** %555, align 8
  %557 = getelementptr inbounds %"class.v8::internal::wasm::AsmFunctionType"* (%"class.v8::internal::wasm::AsmCallableType"*)*, %"class.v8::internal::wasm::AsmFunctionType"* (%"class.v8::internal::wasm::AsmCallableType"*)** %556, i64 2
  %558 = load %"class.v8::internal::wasm::AsmFunctionType"* (%"class.v8::internal::wasm::AsmCallableType"*)*, %"class.v8::internal::wasm::AsmFunctionType"* (%"class.v8::internal::wasm::AsmCallableType"*)** %557, align 8
  %559 = tail call %"class.v8::internal::wasm::AsmFunctionType"* %558(%"class.v8::internal::wasm::AsmCallableType"* %554) #12
  br label %560

560:                                              ; preds = %548, %553
  %561 = phi %"class.v8::internal::wasm::AsmFunctionType"* [ %559, %553 ], [ null, %548 ]
  %562 = getelementptr inbounds %"class.v8::internal::wasm::AsmFunctionType", %"class.v8::internal::wasm::AsmFunctionType"* %561, i64 0, i32 2, i32 0
  %563 = getelementptr inbounds %"class.v8::internal::wasm::AsmFunctionType", %"class.v8::internal::wasm::AsmFunctionType"* %561, i64 0, i32 2, i32 0, i32 0, i32 1
  %564 = load %"class.v8::internal::wasm::AsmType"**, %"class.v8::internal::wasm::AsmType"*** %563, align 8
  %565 = getelementptr inbounds %"class.v8::internal::wasm::AsmFunctionType", %"class.v8::internal::wasm::AsmFunctionType"* %561, i64 0, i32 2, i32 0, i32 0, i32 2, i32 0, i32 0
  %566 = load %"class.v8::internal::wasm::AsmType"**, %"class.v8::internal::wasm::AsmType"*** %565, align 8
  %567 = icmp eq %"class.v8::internal::wasm::AsmType"** %564, %566
  %568 = ptrtoint %"class.v8::internal::wasm::AsmType"** %566 to i64
  br i1 %567, label %574, label %569

569:                                              ; preds = %560
  %570 = bitcast %"class.v8::internal::wasm::AsmType"** %564 to i64*
  store i64 77, i64* %570, align 8
  %571 = getelementptr inbounds %"class.v8::internal::wasm::AsmType"*, %"class.v8::internal::wasm::AsmType"** %564, i64 1
  %572 = ptrtoint %"class.v8::internal::wasm::AsmType"** %571 to i64
  %573 = bitcast %"class.v8::internal::wasm::AsmType"*** %563 to i64*
  store i64 %572, i64* %573, align 8
  br label %799

574:                                              ; preds = %560
  %575 = ptrtoint %"class.v8::internal::wasm::AsmType"** %564 to i64
  %576 = bitcast %"class.v8::internal::wasm::AsmType"*** %563 to i64*
  %577 = bitcast %"class.std::__1::vector.180"* %562 to i64*
  %578 = load i64, i64* %577, align 8
  %579 = sub i64 %575, %578
  %580 = ashr exact i64 %579, 3
  %581 = add nsw i64 %580, 1
  %582 = icmp ugt i64 %581, 268435455
  br i1 %582, label %583, label %585

583:                                              ; preds = %574
  %584 = bitcast %"class.std::__1::vector.180"* %562 to %"class.std::__1::__vector_base_common"*
  tail call void @_ZNKSt3__120__vector_base_commonILb1EE20__throw_length_errorEv(%"class.std::__1::__vector_base_common"* %584) #13
  unreachable

585:                                              ; preds = %574
  %586 = bitcast %"class.v8::internal::wasm::AsmType"*** %565 to i64*
  %587 = sub i64 %568, %578
  %588 = ashr exact i64 %587, 3
  %589 = icmp ult i64 %588, 134217727
  br i1 %589, label %590, label %595

590:                                              ; preds = %585
  %591 = ashr exact i64 %587, 2
  %592 = icmp ult i64 %591, %581
  %593 = select i1 %592, i64 %581, i64 %591
  %594 = icmp eq i64 %593, 0
  br i1 %594, label %613, label %595

595:                                              ; preds = %590, %585
  %596 = phi i64 [ %593, %590 ], [ 268435455, %585 ]
  %597 = getelementptr inbounds %"class.v8::internal::wasm::AsmFunctionType", %"class.v8::internal::wasm::AsmFunctionType"* %561, i64 0, i32 2, i32 0, i32 0, i32 2, i32 1, i32 0, i32 0
  %598 = load %"class.v8::internal::Zone"*, %"class.v8::internal::Zone"** %597, align 8
  %599 = shl i64 %596, 3
  %600 = getelementptr inbounds %"class.v8::internal::Zone", %"class.v8::internal::Zone"* %598, i64 0, i32 2
  %601 = load i64, i64* %600, align 8
  %602 = getelementptr inbounds %"class.v8::internal::Zone", %"class.v8::internal::Zone"* %598, i64 0, i32 3
  %603 = load i64, i64* %602, align 8
  %604 = sub i64 %603, %601
  %605 = icmp ugt i64 %599, %604
  br i1 %605, label %606, label %608, !prof !2

606:                                              ; preds = %595
  %607 = tail call i64 @_ZN2v88internal4Zone9NewExpandEm(%"class.v8::internal::Zone"* %598, i64 %599) #12
  br label %610

608:                                              ; preds = %595
  %609 = add i64 %601, %599
  store i64 %609, i64* %600, align 8
  br label %610

610:                                              ; preds = %608, %606
  %611 = phi i64 [ %607, %606 ], [ %601, %608 ]
  %612 = inttoptr i64 %611 to %"class.v8::internal::wasm::AsmType"**
  br label %613

613:                                              ; preds = %610, %590
  %614 = phi i64 [ %596, %610 ], [ 0, %590 ]
  %615 = phi %"class.v8::internal::wasm::AsmType"** [ %612, %610 ], [ null, %590 ]
  %616 = getelementptr inbounds %"class.v8::internal::wasm::AsmType"*, %"class.v8::internal::wasm::AsmType"** %615, i64 %580
  %617 = getelementptr inbounds %"class.v8::internal::wasm::AsmType"*, %"class.v8::internal::wasm::AsmType"** %615, i64 %614
  %618 = ptrtoint %"class.v8::internal::wasm::AsmType"** %617 to i64
  %619 = bitcast %"class.v8::internal::wasm::AsmType"** %616 to i64*
  store i64 77, i64* %619, align 8
  %620 = getelementptr inbounds %"class.v8::internal::wasm::AsmType"*, %"class.v8::internal::wasm::AsmType"** %616, i64 1
  %621 = ptrtoint %"class.v8::internal::wasm::AsmType"** %620 to i64
  %622 = getelementptr inbounds %"class.std::__1::vector.180", %"class.std::__1::vector.180"* %562, i64 0, i32 0, i32 0
  %623 = load %"class.v8::internal::wasm::AsmType"**, %"class.v8::internal::wasm::AsmType"*** %622, align 8
  %624 = ptrtoint %"class.v8::internal::wasm::AsmType"** %623 to i64
  %625 = load %"class.v8::internal::wasm::AsmType"**, %"class.v8::internal::wasm::AsmType"*** %563, align 8
  %626 = icmp eq %"class.v8::internal::wasm::AsmType"** %625, %623
  br i1 %626, label %796, label %627

627:                                              ; preds = %613
  %628 = getelementptr %"class.v8::internal::wasm::AsmType"*, %"class.v8::internal::wasm::AsmType"** %625, i64 -1
  %629 = ptrtoint %"class.v8::internal::wasm::AsmType"** %628 to i64
  %630 = sub i64 %629, %624
  %631 = lshr i64 %630, 3
  %632 = add nuw nsw i64 %631, 1
  %633 = icmp ult i64 %632, 4
  br i1 %633, label %726, label %634

634:                                              ; preds = %627
  %635 = getelementptr %"class.v8::internal::wasm::AsmType"*, %"class.v8::internal::wasm::AsmType"** %625, i64 -1
  %636 = ptrtoint %"class.v8::internal::wasm::AsmType"** %635 to i64
  %637 = sub i64 %636, %624
  %638 = lshr i64 %637, 3
  %639 = xor i64 %638, -1
  %640 = add nsw i64 %580, %639
  %641 = getelementptr %"class.v8::internal::wasm::AsmType"*, %"class.v8::internal::wasm::AsmType"** %615, i64 %640
  %642 = xor i64 %638, -1
  %643 = getelementptr %"class.v8::internal::wasm::AsmType"*, %"class.v8::internal::wasm::AsmType"** %625, i64 %642
  %644 = icmp ult %"class.v8::internal::wasm::AsmType"** %641, %625
  %645 = icmp ult %"class.v8::internal::wasm::AsmType"** %643, %616
  %646 = and i1 %644, %645
  br i1 %646, label %726, label %647

647:                                              ; preds = %634
  %648 = and i64 %632, 4611686018427387900
  %649 = sub nsw i64 0, %648
  %650 = getelementptr %"class.v8::internal::wasm::AsmType"*, %"class.v8::internal::wasm::AsmType"** %616, i64 %649
  %651 = sub nsw i64 0, %648
  %652 = getelementptr %"class.v8::internal::wasm::AsmType"*, %"class.v8::internal::wasm::AsmType"** %625, i64 %651
  %653 = add nsw i64 %648, -4
  %654 = lshr exact i64 %653, 2
  %655 = add nuw nsw i64 %654, 1
  %656 = and i64 %655, 1
  %657 = icmp eq i64 %653, 0
  br i1 %657, label %702, label %658

658:                                              ; preds = %647
  %659 = sub nuw nsw i64 %655, %656
  %660 = getelementptr %"class.v8::internal::wasm::AsmType"*, %"class.v8::internal::wasm::AsmType"** %616, i64 -1
  %661 = getelementptr %"class.v8::internal::wasm::AsmType"*, %"class.v8::internal::wasm::AsmType"** %625, i64 -1
  %662 = getelementptr %"class.v8::internal::wasm::AsmType"*, %"class.v8::internal::wasm::AsmType"** %616, i64 -1
  %663 = getelementptr %"class.v8::internal::wasm::AsmType"*, %"class.v8::internal::wasm::AsmType"** %625, i64 -1
  br label %664

664:                                              ; preds = %664, %658
  %665 = phi i64 [ 0, %658 ], [ %699, %664 ]
  %666 = phi i64 [ %659, %658 ], [ %700, %664 ]
  %667 = sub i64 0, %665
  %668 = sub i64 0, %665
  %669 = getelementptr inbounds %"class.v8::internal::wasm::AsmType"*, %"class.v8::internal::wasm::AsmType"** %660, i64 %667
  %670 = getelementptr inbounds %"class.v8::internal::wasm::AsmType"*, %"class.v8::internal::wasm::AsmType"** %661, i64 %668
  %671 = getelementptr inbounds %"class.v8::internal::wasm::AsmType"*, %"class.v8::internal::wasm::AsmType"** %670, i64 -1
  %672 = bitcast %"class.v8::internal::wasm::AsmType"** %671 to <2 x i64>*
  %673 = load <2 x i64>, <2 x i64>* %672, align 8, !alias.scope !21
  %674 = getelementptr inbounds %"class.v8::internal::wasm::AsmType"*, %"class.v8::internal::wasm::AsmType"** %670, i64 -2
  %675 = getelementptr inbounds %"class.v8::internal::wasm::AsmType"*, %"class.v8::internal::wasm::AsmType"** %674, i64 -1
  %676 = bitcast %"class.v8::internal::wasm::AsmType"** %675 to <2 x i64>*
  %677 = load <2 x i64>, <2 x i64>* %676, align 8, !alias.scope !21
  %678 = getelementptr inbounds %"class.v8::internal::wasm::AsmType"*, %"class.v8::internal::wasm::AsmType"** %669, i64 -1
  %679 = bitcast %"class.v8::internal::wasm::AsmType"** %678 to <2 x i64>*
  store <2 x i64> %673, <2 x i64>* %679, align 8, !alias.scope !24, !noalias !21
  %680 = getelementptr inbounds %"class.v8::internal::wasm::AsmType"*, %"class.v8::internal::wasm::AsmType"** %669, i64 -2
  %681 = getelementptr inbounds %"class.v8::internal::wasm::AsmType"*, %"class.v8::internal::wasm::AsmType"** %680, i64 -1
  %682 = bitcast %"class.v8::internal::wasm::AsmType"** %681 to <2 x i64>*
  store <2 x i64> %677, <2 x i64>* %682, align 8, !alias.scope !24, !noalias !21
  %683 = sub nuw nsw i64 -4, %665
  %684 = sub nuw nsw i64 -4, %665
  %685 = getelementptr inbounds %"class.v8::internal::wasm::AsmType"*, %"class.v8::internal::wasm::AsmType"** %662, i64 %683
  %686 = getelementptr inbounds %"class.v8::internal::wasm::AsmType"*, %"class.v8::internal::wasm::AsmType"** %663, i64 %684
  %687 = getelementptr inbounds %"class.v8::internal::wasm::AsmType"*, %"class.v8::internal::wasm::AsmType"** %686, i64 -1
  %688 = bitcast %"class.v8::internal::wasm::AsmType"** %687 to <2 x i64>*
  %689 = load <2 x i64>, <2 x i64>* %688, align 8, !alias.scope !21
  %690 = getelementptr inbounds %"class.v8::internal::wasm::AsmType"*, %"class.v8::internal::wasm::AsmType"** %686, i64 -2
  %691 = getelementptr inbounds %"class.v8::internal::wasm::AsmType"*, %"class.v8::internal::wasm::AsmType"** %690, i64 -1
  %692 = bitcast %"class.v8::internal::wasm::AsmType"** %691 to <2 x i64>*
  %693 = load <2 x i64>, <2 x i64>* %692, align 8, !alias.scope !21
  %694 = getelementptr inbounds %"class.v8::internal::wasm::AsmType"*, %"class.v8::internal::wasm::AsmType"** %685, i64 -1
  %695 = bitcast %"class.v8::internal::wasm::AsmType"** %694 to <2 x i64>*
  store <2 x i64> %689, <2 x i64>* %695, align 8, !alias.scope !24, !noalias !21
  %696 = getelementptr inbounds %"class.v8::internal::wasm::AsmType"*, %"class.v8::internal::wasm::AsmType"** %685, i64 -2
  %697 = getelementptr inbounds %"class.v8::internal::wasm::AsmType"*, %"class.v8::internal::wasm::AsmType"** %696, i64 -1
  %698 = bitcast %"class.v8::internal::wasm::AsmType"** %697 to <2 x i64>*
  store <2 x i64> %693, <2 x i64>* %698, align 8, !alias.scope !24, !noalias !21
  %699 = add i64 %665, 8
  %700 = add i64 %666, -2
  %701 = icmp eq i64 %700, 0
  br i1 %701, label %702, label %664, !llvm.loop !26

702:                                              ; preds = %664, %647
  %703 = phi i64 [ 0, %647 ], [ %699, %664 ]
  %704 = icmp eq i64 %656, 0
  br i1 %704, label %724, label %705

705:                                              ; preds = %702
  %706 = sub i64 0, %703
  %707 = getelementptr %"class.v8::internal::wasm::AsmType"*, %"class.v8::internal::wasm::AsmType"** %616, i64 -1
  %708 = sub i64 0, %703
  %709 = getelementptr %"class.v8::internal::wasm::AsmType"*, %"class.v8::internal::wasm::AsmType"** %625, i64 -1
  %710 = getelementptr inbounds %"class.v8::internal::wasm::AsmType"*, %"class.v8::internal::wasm::AsmType"** %707, i64 %706
  %711 = getelementptr inbounds %"class.v8::internal::wasm::AsmType"*, %"class.v8::internal::wasm::AsmType"** %709, i64 %708
  %712 = getelementptr inbounds %"class.v8::internal::wasm::AsmType"*, %"class.v8::internal::wasm::AsmType"** %711, i64 -1
  %713 = bitcast %"class.v8::internal::wasm::AsmType"** %712 to <2 x i64>*
  %714 = load <2 x i64>, <2 x i64>* %713, align 8, !alias.scope !21
  %715 = getelementptr inbounds %"class.v8::internal::wasm::AsmType"*, %"class.v8::internal::wasm::AsmType"** %711, i64 -2
  %716 = getelementptr inbounds %"class.v8::internal::wasm::AsmType"*, %"class.v8::internal::wasm::AsmType"** %715, i64 -1
  %717 = bitcast %"class.v8::internal::wasm::AsmType"** %716 to <2 x i64>*
  %718 = load <2 x i64>, <2 x i64>* %717, align 8, !alias.scope !21
  %719 = getelementptr inbounds %"class.v8::internal::wasm::AsmType"*, %"class.v8::internal::wasm::AsmType"** %710, i64 -1
  %720 = bitcast %"class.v8::internal::wasm::AsmType"** %719 to <2 x i64>*
  store <2 x i64> %714, <2 x i64>* %720, align 8, !alias.scope !24, !noalias !21
  %721 = getelementptr inbounds %"class.v8::internal::wasm::AsmType"*, %"class.v8::internal::wasm::AsmType"** %710, i64 -2
  %722 = getelementptr inbounds %"class.v8::internal::wasm::AsmType"*, %"class.v8::internal::wasm::AsmType"** %721, i64 -1
  %723 = bitcast %"class.v8::internal::wasm::AsmType"** %722 to <2 x i64>*
  store <2 x i64> %718, <2 x i64>* %723, align 8, !alias.scope !24, !noalias !21
  br label %724

724:                                              ; preds = %702, %705
  %725 = icmp eq i64 %632, %648
  br i1 %725, label %796, label %726

726:                                              ; preds = %724, %634, %627
  %727 = phi %"class.v8::internal::wasm::AsmType"** [ %616, %634 ], [ %616, %627 ], [ %650, %724 ]
  %728 = phi %"class.v8::internal::wasm::AsmType"** [ %625, %634 ], [ %625, %627 ], [ %652, %724 ]
  %729 = getelementptr %"class.v8::internal::wasm::AsmType"*, %"class.v8::internal::wasm::AsmType"** %728, i64 -1
  %730 = ptrtoint %"class.v8::internal::wasm::AsmType"** %729 to i64
  %731 = sub i64 %730, %624
  %732 = lshr i64 %731, 3
  %733 = add nuw nsw i64 %732, 1
  %734 = and i64 %733, 7
  %735 = icmp eq i64 %734, 0
  br i1 %735, label %747, label %736

736:                                              ; preds = %726, %736
  %737 = phi %"class.v8::internal::wasm::AsmType"** [ %740, %736 ], [ %727, %726 ]
  %738 = phi %"class.v8::internal::wasm::AsmType"** [ %741, %736 ], [ %728, %726 ]
  %739 = phi i64 [ %745, %736 ], [ %734, %726 ]
  %740 = getelementptr inbounds %"class.v8::internal::wasm::AsmType"*, %"class.v8::internal::wasm::AsmType"** %737, i64 -1
  %741 = getelementptr inbounds %"class.v8::internal::wasm::AsmType"*, %"class.v8::internal::wasm::AsmType"** %738, i64 -1
  %742 = bitcast %"class.v8::internal::wasm::AsmType"** %741 to i64*
  %743 = load i64, i64* %742, align 8
  %744 = bitcast %"class.v8::internal::wasm::AsmType"** %740 to i64*
  store i64 %743, i64* %744, align 8
  %745 = add i64 %739, -1
  %746 = icmp eq i64 %745, 0
  br i1 %746, label %747, label %736, !llvm.loop !27

747:                                              ; preds = %736, %726
  %748 = phi %"class.v8::internal::wasm::AsmType"** [ undef, %726 ], [ %740, %736 ]
  %749 = phi %"class.v8::internal::wasm::AsmType"** [ %727, %726 ], [ %740, %736 ]
  %750 = phi %"class.v8::internal::wasm::AsmType"** [ %728, %726 ], [ %741, %736 ]
  %751 = icmp ult i64 %731, 56
  br i1 %751, label %796, label %752

752:                                              ; preds = %747, %752
  %753 = phi %"class.v8::internal::wasm::AsmType"** [ %790, %752 ], [ %749, %747 ]
  %754 = phi %"class.v8::internal::wasm::AsmType"** [ %791, %752 ], [ %750, %747 ]
  %755 = getelementptr inbounds %"class.v8::internal::wasm::AsmType"*, %"class.v8::internal::wasm::AsmType"** %753, i64 -1
  %756 = getelementptr inbounds %"class.v8::internal::wasm::AsmType"*, %"class.v8::internal::wasm::AsmType"** %754, i64 -1
  %757 = bitcast %"class.v8::internal::wasm::AsmType"** %756 to i64*
  %758 = load i64, i64* %757, align 8
  %759 = bitcast %"class.v8::internal::wasm::AsmType"** %755 to i64*
  store i64 %758, i64* %759, align 8
  %760 = getelementptr inbounds %"class.v8::internal::wasm::AsmType"*, %"class.v8::internal::wasm::AsmType"** %753, i64 -2
  %761 = getelementptr inbounds %"class.v8::internal::wasm::AsmType"*, %"class.v8::internal::wasm::AsmType"** %754, i64 -2
  %762 = bitcast %"class.v8::internal::wasm::AsmType"** %761 to i64*
  %763 = load i64, i64* %762, align 8
  %764 = bitcast %"class.v8::internal::wasm::AsmType"** %760 to i64*
  store i64 %763, i64* %764, align 8
  %765 = getelementptr inbounds %"class.v8::internal::wasm::AsmType"*, %"class.v8::internal::wasm::AsmType"** %753, i64 -3
  %766 = getelementptr inbounds %"class.v8::internal::wasm::AsmType"*, %"class.v8::internal::wasm::AsmType"** %754, i64 -3
  %767 = bitcast %"class.v8::internal::wasm::AsmType"** %766 to i64*
  %768 = load i64, i64* %767, align 8
  %769 = bitcast %"class.v8::internal::wasm::AsmType"** %765 to i64*
  store i64 %768, i64* %769, align 8
  %770 = getelementptr inbounds %"class.v8::internal::wasm::AsmType"*, %"class.v8::internal::wasm::AsmType"** %753, i64 -4
  %771 = getelementptr inbounds %"class.v8::internal::wasm::AsmType"*, %"class.v8::internal::wasm::AsmType"** %754, i64 -4
  %772 = bitcast %"class.v8::internal::wasm::AsmType"** %771 to i64*
  %773 = load i64, i64* %772, align 8
  %774 = bitcast %"class.v8::internal::wasm::AsmType"** %770 to i64*
  store i64 %773, i64* %774, align 8
  %775 = getelementptr inbounds %"class.v8::internal::wasm::AsmType"*, %"class.v8::internal::wasm::AsmType"** %753, i64 -5
  %776 = getelementptr inbounds %"class.v8::internal::wasm::AsmType"*, %"class.v8::internal::wasm::AsmType"** %754, i64 -5
  %777 = bitcast %"class.v8::internal::wasm::AsmType"** %776 to i64*
  %778 = load i64, i64* %777, align 8
  %779 = bitcast %"class.v8::internal::wasm::AsmType"** %775 to i64*
  store i64 %778, i64* %779, align 8
  %780 = getelementptr inbounds %"class.v8::internal::wasm::AsmType"*, %"class.v8::internal::wasm::AsmType"** %753, i64 -6
  %781 = getelementptr inbounds %"class.v8::internal::wasm::AsmType"*, %"class.v8::internal::wasm::AsmType"** %754, i64 -6
  %782 = bitcast %"class.v8::internal::wasm::AsmType"** %781 to i64*
  %783 = load i64, i64* %782, align 8
  %784 = bitcast %"class.v8::internal::wasm::AsmType"** %780 to i64*
  store i64 %783, i64* %784, align 8
  %785 = getelementptr inbounds %"class.v8::internal::wasm::AsmType"*, %"class.v8::internal::wasm::AsmType"** %753, i64 -7
  %786 = getelementptr inbounds %"class.v8::internal::wasm::AsmType"*, %"class.v8::internal::wasm::AsmType"** %754, i64 -7
  %787 = bitcast %"class.v8::internal::wasm::AsmType"** %786 to i64*
  %788 = load i64, i64* %787, align 8
  %789 = bitcast %"class.v8::internal::wasm::AsmType"** %785 to i64*
  store i64 %788, i64* %789, align 8
  %790 = getelementptr inbounds %"class.v8::internal::wasm::AsmType"*, %"class.v8::internal::wasm::AsmType"** %753, i64 -8
  %791 = getelementptr inbounds %"class.v8::internal::wasm::AsmType"*, %"class.v8::internal::wasm::AsmType"** %754, i64 -8
  %792 = bitcast %"class.v8::internal::wasm::AsmType"** %791 to i64*
  %793 = load i64, i64* %792, align 8
  %794 = bitcast %"class.v8::internal::wasm::AsmType"** %790 to i64*
  store i64 %793, i64* %794, align 8
  %795 = icmp eq %"class.v8::internal::wasm::AsmType"** %791, %623
  br i1 %795, label %796, label %752, !llvm.loop !28

796:                                              ; preds = %747, %752, %724, %613
  %797 = phi %"class.v8::internal::wasm::AsmType"** [ %616, %613 ], [ %650, %724 ], [ %748, %747 ], [ %790, %752 ]
  %798 = ptrtoint %"class.v8::internal::wasm::AsmType"** %797 to i64
  store i64 %798, i64* %577, align 8
  store i64 %621, i64* %576, align 8
  store i64 %618, i64* %586, align 8
  br label %799

799:                                              ; preds = %569, %796
  %800 = load %"class.v8::internal::Zone"*, %"class.v8::internal::Zone"** %2, align 8
  %801 = ptrtoint %"class.v8::internal::Zone"* %800 to i64
  %802 = getelementptr inbounds %"class.v8::internal::Zone", %"class.v8::internal::Zone"* %800, i64 0, i32 2
  %803 = load i64, i64* %802, align 8
  %804 = getelementptr inbounds %"class.v8::internal::Zone", %"class.v8::internal::Zone"* %800, i64 0, i32 3
  %805 = load i64, i64* %804, align 8
  %806 = sub i64 %805, %803
  %807 = icmp ult i64 %806, 48
  br i1 %807, label %808, label %810, !prof !2

808:                                              ; preds = %799
  %809 = tail call i64 @_ZN2v88internal4Zone9NewExpandEm(%"class.v8::internal::Zone"* %800, i64 48) #12
  br label %812

810:                                              ; preds = %799
  %811 = add i64 %803, 48
  store i64 %811, i64* %802, align 8
  br label %812

812:                                              ; preds = %808, %810
  %813 = phi i64 [ %809, %808 ], [ %803, %810 ]
  %814 = inttoptr i64 %813 to %"class.v8::internal::wasm::AsmFunctionType"*
  %815 = getelementptr inbounds %"class.v8::internal::wasm::AsmFunctionType", %"class.v8::internal::wasm::AsmFunctionType"* %814, i64 0, i32 0, i32 0
  store i32 (...)** bitcast (i8** getelementptr inbounds ({ [9 x i8*] }, { [9 x i8*] }* @_ZTVN2v88internal4wasm15AsmFunctionTypeE, i64 0, inrange i32 0, i64 2) to i32 (...)**), i32 (...)*** %815, align 8
  %816 = getelementptr inbounds %"class.v8::internal::wasm::AsmFunctionType", %"class.v8::internal::wasm::AsmFunctionType"* %814, i64 0, i32 1
  %817 = bitcast %"class.v8::internal::wasm::AsmType"** %816 to i64*
  store i64 8197, i64* %817, align 8
  %818 = getelementptr inbounds %"class.v8::internal::wasm::AsmFunctionType", %"class.v8::internal::wasm::AsmFunctionType"* %814, i64 0, i32 2
  %819 = getelementptr inbounds %"class.v8::internal::wasm::AsmFunctionType", %"class.v8::internal::wasm::AsmFunctionType"* %814, i64 0, i32 2, i32 0, i32 0, i32 2, i32 1
  %820 = bitcast %"struct.std::__1::__compressed_pair_elem.184"* %819 to i64*
  %821 = bitcast %"class.v8::internal::ZoneVector.179"* %818 to i8*
  tail call void @llvm.memset.p0i8.i64(i8* align 8 %821, i8 0, i64 24, i1 false) #12
  store i64 %801, i64* %820, align 8
  %822 = inttoptr i64 %813 to %"class.v8::internal::wasm::AsmType"*
  %823 = and i64 %813, 1
  %824 = icmp eq i64 %823, 0
  br i1 %824, label %825, label %832

825:                                              ; preds = %812
  %826 = inttoptr i64 %813 to %"class.v8::internal::wasm::AsmCallableType"*
  %827 = inttoptr i64 %813 to %"class.v8::internal::wasm::AsmFunctionType"* (%"class.v8::internal::wasm::AsmCallableType"*)***
  %828 = load %"class.v8::internal::wasm::AsmFunctionType"* (%"class.v8::internal::wasm::AsmCallableType"*)**, %"class.v8::internal::wasm::AsmFunctionType"* (%"class.v8::internal::wasm::AsmCallableType"*)*** %827, align 8
  %829 = getelementptr inbounds %"class.v8::internal::wasm::AsmFunctionType"* (%"class.v8::internal::wasm::AsmCallableType"*)*, %"class.v8::internal::wasm::AsmFunctionType"* (%"class.v8::internal::wasm::AsmCallableType"*)** %828, i64 2
  %830 = load %"class.v8::internal::wasm::AsmFunctionType"* (%"class.v8::internal::wasm::AsmCallableType"*)*, %"class.v8::internal::wasm::AsmFunctionType"* (%"class.v8::internal::wasm::AsmCallableType"*)** %829, align 8
  %831 = tail call %"class.v8::internal::wasm::AsmFunctionType"* %830(%"class.v8::internal::wasm::AsmCallableType"* %826) #12
  br label %832

832:                                              ; preds = %812, %825
  %833 = phi %"class.v8::internal::wasm::AsmFunctionType"* [ %831, %825 ], [ null, %812 ]
  %834 = getelementptr inbounds %"class.v8::internal::wasm::AsmFunctionType", %"class.v8::internal::wasm::AsmFunctionType"* %833, i64 0, i32 2, i32 0
  %835 = getelementptr inbounds %"class.v8::internal::wasm::AsmFunctionType", %"class.v8::internal::wasm::AsmFunctionType"* %833, i64 0, i32 2, i32 0, i32 0, i32 1
  %836 = load %"class.v8::internal::wasm::AsmType"**, %"class.v8::internal::wasm::AsmType"*** %835, align 8
  %837 = getelementptr inbounds %"class.v8::internal::wasm::AsmFunctionType", %"class.v8::internal::wasm::AsmFunctionType"* %833, i64 0, i32 2, i32 0, i32 0, i32 2, i32 0, i32 0
  %838 = load %"class.v8::internal::wasm::AsmType"**, %"class.v8::internal::wasm::AsmType"*** %837, align 8
  %839 = icmp eq %"class.v8::internal::wasm::AsmType"** %836, %838
  %840 = ptrtoint %"class.v8::internal::wasm::AsmType"** %838 to i64
  br i1 %839, label %846, label %841

841:                                              ; preds = %832
  %842 = bitcast %"class.v8::internal::wasm::AsmType"** %836 to i64*
  store i64 24589, i64* %842, align 8
  %843 = getelementptr inbounds %"class.v8::internal::wasm::AsmType"*, %"class.v8::internal::wasm::AsmType"** %836, i64 1
  %844 = ptrtoint %"class.v8::internal::wasm::AsmType"** %843 to i64
  %845 = bitcast %"class.v8::internal::wasm::AsmType"*** %835 to i64*
  store i64 %844, i64* %845, align 8
  br label %1071

846:                                              ; preds = %832
  %847 = ptrtoint %"class.v8::internal::wasm::AsmType"** %836 to i64
  %848 = bitcast %"class.v8::internal::wasm::AsmType"*** %835 to i64*
  %849 = bitcast %"class.std::__1::vector.180"* %834 to i64*
  %850 = load i64, i64* %849, align 8
  %851 = sub i64 %847, %850
  %852 = ashr exact i64 %851, 3
  %853 = add nsw i64 %852, 1
  %854 = icmp ugt i64 %853, 268435455
  br i1 %854, label %855, label %857

855:                                              ; preds = %846
  %856 = bitcast %"class.std::__1::vector.180"* %834 to %"class.std::__1::__vector_base_common"*
  tail call void @_ZNKSt3__120__vector_base_commonILb1EE20__throw_length_errorEv(%"class.std::__1::__vector_base_common"* %856) #13
  unreachable

857:                                              ; preds = %846
  %858 = bitcast %"class.v8::internal::wasm::AsmType"*** %837 to i64*
  %859 = sub i64 %840, %850
  %860 = ashr exact i64 %859, 3
  %861 = icmp ult i64 %860, 134217727
  br i1 %861, label %862, label %867

862:                                              ; preds = %857
  %863 = ashr exact i64 %859, 2
  %864 = icmp ult i64 %863, %853
  %865 = select i1 %864, i64 %853, i64 %863
  %866 = icmp eq i64 %865, 0
  br i1 %866, label %885, label %867

867:                                              ; preds = %862, %857
  %868 = phi i64 [ %865, %862 ], [ 268435455, %857 ]
  %869 = getelementptr inbounds %"class.v8::internal::wasm::AsmFunctionType", %"class.v8::internal::wasm::AsmFunctionType"* %833, i64 0, i32 2, i32 0, i32 0, i32 2, i32 1, i32 0, i32 0
  %870 = load %"class.v8::internal::Zone"*, %"class.v8::internal::Zone"** %869, align 8
  %871 = shl i64 %868, 3
  %872 = getelementptr inbounds %"class.v8::internal::Zone", %"class.v8::internal::Zone"* %870, i64 0, i32 2
  %873 = load i64, i64* %872, align 8
  %874 = getelementptr inbounds %"class.v8::internal::Zone", %"class.v8::internal::Zone"* %870, i64 0, i32 3
  %875 = load i64, i64* %874, align 8
  %876 = sub i64 %875, %873
  %877 = icmp ugt i64 %871, %876
  br i1 %877, label %878, label %880, !prof !2

878:                                              ; preds = %867
  %879 = tail call i64 @_ZN2v88internal4Zone9NewExpandEm(%"class.v8::internal::Zone"* %870, i64 %871) #12
  br label %882

880:                                              ; preds = %867
  %881 = add i64 %873, %871
  store i64 %881, i64* %872, align 8
  br label %882

882:                                              ; preds = %880, %878
  %883 = phi i64 [ %879, %878 ], [ %873, %880 ]
  %884 = inttoptr i64 %883 to %"class.v8::internal::wasm::AsmType"**
  br label %885

885:                                              ; preds = %882, %862
  %886 = phi i64 [ %868, %882 ], [ 0, %862 ]
  %887 = phi %"class.v8::internal::wasm::AsmType"** [ %884, %882 ], [ null, %862 ]
  %888 = getelementptr inbounds %"class.v8::internal::wasm::AsmType"*, %"class.v8::internal::wasm::AsmType"** %887, i64 %852
  %889 = getelementptr inbounds %"class.v8::internal::wasm::AsmType"*, %"class.v8::internal::wasm::AsmType"** %887, i64 %886
  %890 = ptrtoint %"class.v8::internal::wasm::AsmType"** %889 to i64
  %891 = bitcast %"class.v8::internal::wasm::AsmType"** %888 to i64*
  store i64 24589, i64* %891, align 8
  %892 = getelementptr inbounds %"class.v8::internal::wasm::AsmType"*, %"class.v8::internal::wasm::AsmType"** %888, i64 1
  %893 = ptrtoint %"class.v8::internal::wasm::AsmType"** %892 to i64
  %894 = getelementptr inbounds %"class.std::__1::vector.180", %"class.std::__1::vector.180"* %834, i64 0, i32 0, i32 0
  %895 = load %"class.v8::internal::wasm::AsmType"**, %"class.v8::internal::wasm::AsmType"*** %894, align 8
  %896 = ptrtoint %"class.v8::internal::wasm::AsmType"** %895 to i64
  %897 = load %"class.v8::internal::wasm::AsmType"**, %"class.v8::internal::wasm::AsmType"*** %835, align 8
  %898 = icmp eq %"class.v8::internal::wasm::AsmType"** %897, %895
  br i1 %898, label %1068, label %899

899:                                              ; preds = %885
  %900 = getelementptr %"class.v8::internal::wasm::AsmType"*, %"class.v8::internal::wasm::AsmType"** %897, i64 -1
  %901 = ptrtoint %"class.v8::internal::wasm::AsmType"** %900 to i64
  %902 = sub i64 %901, %896
  %903 = lshr i64 %902, 3
  %904 = add nuw nsw i64 %903, 1
  %905 = icmp ult i64 %904, 4
  br i1 %905, label %998, label %906

906:                                              ; preds = %899
  %907 = getelementptr %"class.v8::internal::wasm::AsmType"*, %"class.v8::internal::wasm::AsmType"** %897, i64 -1
  %908 = ptrtoint %"class.v8::internal::wasm::AsmType"** %907 to i64
  %909 = sub i64 %908, %896
  %910 = lshr i64 %909, 3
  %911 = xor i64 %910, -1
  %912 = add nsw i64 %852, %911
  %913 = getelementptr %"class.v8::internal::wasm::AsmType"*, %"class.v8::internal::wasm::AsmType"** %887, i64 %912
  %914 = xor i64 %910, -1
  %915 = getelementptr %"class.v8::internal::wasm::AsmType"*, %"class.v8::internal::wasm::AsmType"** %897, i64 %914
  %916 = icmp ult %"class.v8::internal::wasm::AsmType"** %913, %897
  %917 = icmp ult %"class.v8::internal::wasm::AsmType"** %915, %888
  %918 = and i1 %916, %917
  br i1 %918, label %998, label %919

919:                                              ; preds = %906
  %920 = and i64 %904, 4611686018427387900
  %921 = sub nsw i64 0, %920
  %922 = getelementptr %"class.v8::internal::wasm::AsmType"*, %"class.v8::internal::wasm::AsmType"** %888, i64 %921
  %923 = sub nsw i64 0, %920
  %924 = getelementptr %"class.v8::internal::wasm::AsmType"*, %"class.v8::internal::wasm::AsmType"** %897, i64 %923
  %925 = add nsw i64 %920, -4
  %926 = lshr exact i64 %925, 2
  %927 = add nuw nsw i64 %926, 1
  %928 = and i64 %927, 1
  %929 = icmp eq i64 %925, 0
  br i1 %929, label %974, label %930

930:                                              ; preds = %919
  %931 = sub nuw nsw i64 %927, %928
  %932 = getelementptr %"class.v8::internal::wasm::AsmType"*, %"class.v8::internal::wasm::AsmType"** %888, i64 -1
  %933 = getelementptr %"class.v8::internal::wasm::AsmType"*, %"class.v8::internal::wasm::AsmType"** %897, i64 -1
  %934 = getelementptr %"class.v8::internal::wasm::AsmType"*, %"class.v8::internal::wasm::AsmType"** %888, i64 -1
  %935 = getelementptr %"class.v8::internal::wasm::AsmType"*, %"class.v8::internal::wasm::AsmType"** %897, i64 -1
  br label %936

936:                                              ; preds = %936, %930
  %937 = phi i64 [ 0, %930 ], [ %971, %936 ]
  %938 = phi i64 [ %931, %930 ], [ %972, %936 ]
  %939 = sub i64 0, %937
  %940 = sub i64 0, %937
  %941 = getelementptr inbounds %"class.v8::internal::wasm::AsmType"*, %"class.v8::internal::wasm::AsmType"** %932, i64 %939
  %942 = getelementptr inbounds %"class.v8::internal::wasm::AsmType"*, %"class.v8::internal::wasm::AsmType"** %933, i64 %940
  %943 = getelementptr inbounds %"class.v8::internal::wasm::AsmType"*, %"class.v8::internal::wasm::AsmType"** %942, i64 -1
  %944 = bitcast %"class.v8::internal::wasm::AsmType"** %943 to <2 x i64>*
  %945 = load <2 x i64>, <2 x i64>* %944, align 8, !alias.scope !29
  %946 = getelementptr inbounds %"class.v8::internal::wasm::AsmType"*, %"class.v8::internal::wasm::AsmType"** %942, i64 -2
  %947 = getelementptr inbounds %"class.v8::internal::wasm::AsmType"*, %"class.v8::internal::wasm::AsmType"** %946, i64 -1
  %948 = bitcast %"class.v8::internal::wasm::AsmType"** %947 to <2 x i64>*
  %949 = load <2 x i64>, <2 x i64>* %948, align 8, !alias.scope !29
  %950 = getelementptr inbounds %"class.v8::internal::wasm::AsmType"*, %"class.v8::internal::wasm::AsmType"** %941, i64 -1
  %951 = bitcast %"class.v8::internal::wasm::AsmType"** %950 to <2 x i64>*
  store <2 x i64> %945, <2 x i64>* %951, align 8, !alias.scope !32, !noalias !29
  %952 = getelementptr inbounds %"class.v8::internal::wasm::AsmType"*, %"class.v8::internal::wasm::AsmType"** %941, i64 -2
  %953 = getelementptr inbounds %"class.v8::internal::wasm::AsmType"*, %"class.v8::internal::wasm::AsmType"** %952, i64 -1
  %954 = bitcast %"class.v8::internal::wasm::AsmType"** %953 to <2 x i64>*
  store <2 x i64> %949, <2 x i64>* %954, align 8, !alias.scope !32, !noalias !29
  %955 = sub nuw nsw i64 -4, %937
  %956 = sub nuw nsw i64 -4, %937
  %957 = getelementptr inbounds %"class.v8::internal::wasm::AsmType"*, %"class.v8::internal::wasm::AsmType"** %934, i64 %955
  %958 = getelementptr inbounds %"class.v8::internal::wasm::AsmType"*, %"class.v8::internal::wasm::AsmType"** %935, i64 %956
  %959 = getelementptr inbounds %"class.v8::internal::wasm::AsmType"*, %"class.v8::internal::wasm::AsmType"** %958, i64 -1
  %960 = bitcast %"class.v8::internal::wasm::AsmType"** %959 to <2 x i64>*
  %961 = load <2 x i64>, <2 x i64>* %960, align 8, !alias.scope !29
  %962 = getelementptr inbounds %"class.v8::internal::wasm::AsmType"*, %"class.v8::internal::wasm::AsmType"** %958, i64 -2
  %963 = getelementptr inbounds %"class.v8::internal::wasm::AsmType"*, %"class.v8::internal::wasm::AsmType"** %962, i64 -1
  %964 = bitcast %"class.v8::internal::wasm::AsmType"** %963 to <2 x i64>*
  %965 = load <2 x i64>, <2 x i64>* %964, align 8, !alias.scope !29
  %966 = getelementptr inbounds %"class.v8::internal::wasm::AsmType"*, %"class.v8::internal::wasm::AsmType"** %957, i64 -1
  %967 = bitcast %"class.v8::internal::wasm::AsmType"** %966 to <2 x i64>*
  store <2 x i64> %961, <2 x i64>* %967, align 8, !alias.scope !32, !noalias !29
  %968 = getelementptr inbounds %"class.v8::internal::wasm::AsmType"*, %"class.v8::internal::wasm::AsmType"** %957, i64 -2
  %969 = getelementptr inbounds %"class.v8::internal::wasm::AsmType"*, %"class.v8::internal::wasm::AsmType"** %968, i64 -1
  %970 = bitcast %"class.v8::internal::wasm::AsmType"** %969 to <2 x i64>*
  store <2 x i64> %965, <2 x i64>* %970, align 8, !alias.scope !32, !noalias !29
  %971 = add i64 %937, 8
  %972 = add i64 %938, -2
  %973 = icmp eq i64 %972, 0
  br i1 %973, label %974, label %936, !llvm.loop !34

974:                                              ; preds = %936, %919
  %975 = phi i64 [ 0, %919 ], [ %971, %936 ]
  %976 = icmp eq i64 %928, 0
  br i1 %976, label %996, label %977

977:                                              ; preds = %974
  %978 = sub i64 0, %975
  %979 = getelementptr %"class.v8::internal::wasm::AsmType"*, %"class.v8::internal::wasm::AsmType"** %888, i64 -1
  %980 = sub i64 0, %975
  %981 = getelementptr %"class.v8::internal::wasm::AsmType"*, %"class.v8::internal::wasm::AsmType"** %897, i64 -1
  %982 = getelementptr inbounds %"class.v8::internal::wasm::AsmType"*, %"class.v8::internal::wasm::AsmType"** %979, i64 %978
  %983 = getelementptr inbounds %"class.v8::internal::wasm::AsmType"*, %"class.v8::internal::wasm::AsmType"** %981, i64 %980
  %984 = getelementptr inbounds %"class.v8::internal::wasm::AsmType"*, %"class.v8::internal::wasm::AsmType"** %983, i64 -1
  %985 = bitcast %"class.v8::internal::wasm::AsmType"** %984 to <2 x i64>*
  %986 = load <2 x i64>, <2 x i64>* %985, align 8, !alias.scope !29
  %987 = getelementptr inbounds %"class.v8::internal::wasm::AsmType"*, %"class.v8::internal::wasm::AsmType"** %983, i64 -2
  %988 = getelementptr inbounds %"class.v8::internal::wasm::AsmType"*, %"class.v8::internal::wasm::AsmType"** %987, i64 -1
  %989 = bitcast %"class.v8::internal::wasm::AsmType"** %988 to <2 x i64>*
  %990 = load <2 x i64>, <2 x i64>* %989, align 8, !alias.scope !29
  %991 = getelementptr inbounds %"class.v8::internal::wasm::AsmType"*, %"class.v8::internal::wasm::AsmType"** %982, i64 -1
  %992 = bitcast %"class.v8::internal::wasm::AsmType"** %991 to <2 x i64>*
  store <2 x i64> %986, <2 x i64>* %992, align 8, !alias.scope !32, !noalias !29
  %993 = getelementptr inbounds %"class.v8::internal::wasm::AsmType"*, %"class.v8::internal::wasm::AsmType"** %982, i64 -2
  %994 = getelementptr inbounds %"class.v8::internal::wasm::AsmType"*, %"class.v8::internal::wasm::AsmType"** %993, i64 -1
  %995 = bitcast %"class.v8::internal::wasm::AsmType"** %994 to <2 x i64>*
  store <2 x i64> %990, <2 x i64>* %995, align 8, !alias.scope !32, !noalias !29
  br label %996

996:                                              ; preds = %974, %977
  %997 = icmp eq i64 %904, %920
  br i1 %997, label %1068, label %998

998:                                              ; preds = %996, %906, %899
  %999 = phi %"class.v8::internal::wasm::AsmType"** [ %888, %906 ], [ %888, %899 ], [ %922, %996 ]
  %1000 = phi %"class.v8::internal::wasm::AsmType"** [ %897, %906 ], [ %897, %899 ], [ %924, %996 ]
  %1001 = getelementptr %"class.v8::internal::wasm::AsmType"*, %"class.v8::internal::wasm::AsmType"** %1000, i64 -1
  %1002 = ptrtoint %"class.v8::internal::wasm::AsmType"** %1001 to i64
  %1003 = sub i64 %1002, %896
  %1004 = lshr i64 %1003, 3
  %1005 = add nuw nsw i64 %1004, 1
  %1006 = and i64 %1005, 7
  %1007 = icmp eq i64 %1006, 0
  br i1 %1007, label %1019, label %1008

1008:                                             ; preds = %998, %1008
  %1009 = phi %"class.v8::internal::wasm::AsmType"** [ %1012, %1008 ], [ %999, %998 ]
  %1010 = phi %"class.v8::internal::wasm::AsmType"** [ %1013, %1008 ], [ %1000, %998 ]
  %1011 = phi i64 [ %1017, %1008 ], [ %1006, %998 ]
  %1012 = getelementptr inbounds %"class.v8::internal::wasm::AsmType"*, %"class.v8::internal::wasm::AsmType"** %1009, i64 -1
  %1013 = getelementptr inbounds %"class.v8::internal::wasm::AsmType"*, %"class.v8::internal::wasm::AsmType"** %1010, i64 -1
  %1014 = bitcast %"class.v8::internal::wasm::AsmType"** %1013 to i64*
  %1015 = load i64, i64* %1014, align 8
  %1016 = bitcast %"class.v8::internal::wasm::AsmType"** %1012 to i64*
  store i64 %1015, i64* %1016, align 8
  %1017 = add i64 %1011, -1
  %1018 = icmp eq i64 %1017, 0
  br i1 %1018, label %1019, label %1008, !llvm.loop !35

1019:                                             ; preds = %1008, %998
  %1020 = phi %"class.v8::internal::wasm::AsmType"** [ undef, %998 ], [ %1012, %1008 ]
  %1021 = phi %"class.v8::internal::wasm::AsmType"** [ %999, %998 ], [ %1012, %1008 ]
  %1022 = phi %"class.v8::internal::wasm::AsmType"** [ %1000, %998 ], [ %1013, %1008 ]
  %1023 = icmp ult i64 %1003, 56
  br i1 %1023, label %1068, label %1024

1024:                                             ; preds = %1019, %1024
  %1025 = phi %"class.v8::internal::wasm::AsmType"** [ %1062, %1024 ], [ %1021, %1019 ]
  %1026 = phi %"class.v8::internal::wasm::AsmType"** [ %1063, %1024 ], [ %1022, %1019 ]
  %1027 = getelementptr inbounds %"class.v8::internal::wasm::AsmType"*, %"class.v8::internal::wasm::AsmType"** %1025, i64 -1
  %1028 = getelementptr inbounds %"class.v8::internal::wasm::AsmType"*, %"class.v8::internal::wasm::AsmType"** %1026, i64 -1
  %1029 = bitcast %"class.v8::internal::wasm::AsmType"** %1028 to i64*
  %1030 = load i64, i64* %1029, align 8
  %1031 = bitcast %"class.v8::internal::wasm::AsmType"** %1027 to i64*
  store i64 %1030, i64* %1031, align 8
  %1032 = getelementptr inbounds %"class.v8::internal::wasm::AsmType"*, %"class.v8::internal::wasm::AsmType"** %1025, i64 -2
  %1033 = getelementptr inbounds %"class.v8::internal::wasm::AsmType"*, %"class.v8::internal::wasm::AsmType"** %1026, i64 -2
  %1034 = bitcast %"class.v8::internal::wasm::AsmType"** %1033 to i64*
  %1035 = load i64, i64* %1034, align 8
  %1036 = bitcast %"class.v8::internal::wasm::AsmType"** %1032 to i64*
  store i64 %1035, i64* %1036, align 8
  %1037 = getelementptr inbounds %"class.v8::internal::wasm::AsmType"*, %"class.v8::internal::wasm::AsmType"** %1025, i64 -3
  %1038 = getelementptr inbounds %"class.v8::internal::wasm::AsmType"*, %"class.v8::internal::wasm::AsmType"** %1026, i64 -3
  %1039 = bitcast %"class.v8::internal::wasm::AsmType"** %1038 to i64*
  %1040 = load i64, i64* %1039, align 8
  %1041 = bitcast %"class.v8::internal::wasm::AsmType"** %1037 to i64*
  store i64 %1040, i64* %1041, align 8
  %1042 = getelementptr inbounds %"class.v8::internal::wasm::AsmType"*, %"class.v8::internal::wasm::AsmType"** %1025, i64 -4
  %1043 = getelementptr inbounds %"class.v8::internal::wasm::AsmType"*, %"class.v8::internal::wasm::AsmType"** %1026, i64 -4
  %1044 = bitcast %"class.v8::internal::wasm::AsmType"** %1043 to i64*
  %1045 = load i64, i64* %1044, align 8
  %1046 = bitcast %"class.v8::internal::wasm::AsmType"** %1042 to i64*
  store i64 %1045, i64* %1046, align 8
  %1047 = getelementptr inbounds %"class.v8::internal::wasm::AsmType"*, %"class.v8::internal::wasm::AsmType"** %1025, i64 -5
  %1048 = getelementptr inbounds %"class.v8::internal::wasm::AsmType"*, %"class.v8::internal::wasm::AsmType"** %1026, i64 -5
  %1049 = bitcast %"class.v8::internal::wasm::AsmType"** %1048 to i64*
  %1050 = load i64, i64* %1049, align 8
  %1051 = bitcast %"class.v8::internal::wasm::AsmType"** %1047 to i64*
  store i64 %1050, i64* %1051, align 8
  %1052 = getelementptr inbounds %"class.v8::internal::wasm::AsmType"*, %"class.v8::internal::wasm::AsmType"** %1025, i64 -6
  %1053 = getelementptr inbounds %"class.v8::internal::wasm::AsmType"*, %"class.v8::internal::wasm::AsmType"** %1026, i64 -6
  %1054 = bitcast %"class.v8::internal::wasm::AsmType"** %1053 to i64*
  %1055 = load i64, i64* %1054, align 8
  %1056 = bitcast %"class.v8::internal::wasm::AsmType"** %1052 to i64*
  store i64 %1055, i64* %1056, align 8
  %1057 = getelementptr inbounds %"class.v8::internal::wasm::AsmType"*, %"class.v8::internal::wasm::AsmType"** %1025, i64 -7
  %1058 = getelementptr inbounds %"class.v8::internal::wasm::AsmType"*, %"class.v8::internal::wasm::AsmType"** %1026, i64 -7
  %1059 = bitcast %"class.v8::internal::wasm::AsmType"** %1058 to i64*
  %1060 = load i64, i64* %1059, align 8
  %1061 = bitcast %"class.v8::internal::wasm::AsmType"** %1057 to i64*
  store i64 %1060, i64* %1061, align 8
  %1062 = getelementptr inbounds %"class.v8::internal::wasm::AsmType"*, %"class.v8::internal::wasm::AsmType"** %1025, i64 -8
  %1063 = getelementptr inbounds %"class.v8::internal::wasm::AsmType"*, %"class.v8::internal::wasm::AsmType"** %1026, i64 -8
  %1064 = bitcast %"class.v8::internal::wasm::AsmType"** %1063 to i64*
  %1065 = load i64, i64* %1064, align 8
  %1066 = bitcast %"class.v8::internal::wasm::AsmType"** %1062 to i64*
  store i64 %1065, i64* %1066, align 8
  %1067 = icmp eq %"class.v8::internal::wasm::AsmType"** %1063, %895
  br i1 %1067, label %1068, label %1024, !llvm.loop !36

1068:                                             ; preds = %1019, %1024, %996, %885
  %1069 = phi %"class.v8::internal::wasm::AsmType"** [ %888, %885 ], [ %922, %996 ], [ %1020, %1019 ], [ %1062, %1024 ]
  %1070 = ptrtoint %"class.v8::internal::wasm::AsmType"** %1069 to i64
  store i64 %1070, i64* %849, align 8
  store i64 %893, i64* %848, align 8
  store i64 %890, i64* %858, align 8
  br label %1071

1071:                                             ; preds = %841, %1068
  %1072 = load %"class.v8::internal::Zone"*, %"class.v8::internal::Zone"** %2, align 8
  %1073 = ptrtoint %"class.v8::internal::Zone"* %1072 to i64
  %1074 = getelementptr inbounds %"class.v8::internal::Zone", %"class.v8::internal::Zone"* %1072, i64 0, i32 2
  %1075 = load i64, i64* %1074, align 8
  %1076 = getelementptr inbounds %"class.v8::internal::Zone", %"class.v8::internal::Zone"* %1072, i64 0, i32 3
  %1077 = load i64, i64* %1076, align 8
  %1078 = sub i64 %1077, %1075
  %1079 = icmp ult i64 %1078, 48
  br i1 %1079, label %1080, label %1082, !prof !2

1080:                                             ; preds = %1071
  %1081 = tail call i64 @_ZN2v88internal4Zone9NewExpandEm(%"class.v8::internal::Zone"* %1072, i64 48) #12
  br label %1084

1082:                                             ; preds = %1071
  %1083 = add i64 %1075, 48
  store i64 %1083, i64* %1074, align 8
  br label %1084

1084:                                             ; preds = %1080, %1082
  %1085 = phi i64 [ %1081, %1080 ], [ %1075, %1082 ]
  %1086 = inttoptr i64 %1085 to %"class.v8::internal::wasm::AsmFunctionType"*
  %1087 = getelementptr inbounds %"class.v8::internal::wasm::AsmFunctionType", %"class.v8::internal::wasm::AsmFunctionType"* %1086, i64 0, i32 0, i32 0
  store i32 (...)** bitcast (i8** getelementptr inbounds ({ [9 x i8*] }, { [9 x i8*] }* @_ZTVN2v88internal4wasm15AsmFunctionTypeE, i64 0, inrange i32 0, i64 2) to i32 (...)**), i32 (...)*** %1087, align 8
  %1088 = getelementptr inbounds %"class.v8::internal::wasm::AsmFunctionType", %"class.v8::internal::wasm::AsmFunctionType"* %1086, i64 0, i32 1
  %1089 = bitcast %"class.v8::internal::wasm::AsmType"** %1088 to i64*
  store i64 2817, i64* %1089, align 8
  %1090 = getelementptr inbounds %"class.v8::internal::wasm::AsmFunctionType", %"class.v8::internal::wasm::AsmFunctionType"* %1086, i64 0, i32 2
  %1091 = getelementptr inbounds %"class.v8::internal::wasm::AsmFunctionType", %"class.v8::internal::wasm::AsmFunctionType"* %1086, i64 0, i32 2, i32 0, i32 0, i32 2, i32 1
  %1092 = bitcast %"struct.std::__1::__compressed_pair_elem.184"* %1091 to i64*
  %1093 = bitcast %"class.v8::internal::ZoneVector.179"* %1090 to i8*
  tail call void @llvm.memset.p0i8.i64(i8* align 8 %1093, i8 0, i64 24, i1 false) #12
  store i64 %1073, i64* %1092, align 8
  %1094 = inttoptr i64 %1085 to %"class.v8::internal::wasm::AsmType"*
  %1095 = and i64 %1085, 1
  %1096 = icmp eq i64 %1095, 0
  br i1 %1096, label %1097, label %1104

1097:                                             ; preds = %1084
  %1098 = inttoptr i64 %1085 to %"class.v8::internal::wasm::AsmCallableType"*
  %1099 = inttoptr i64 %1085 to %"class.v8::internal::wasm::AsmFunctionType"* (%"class.v8::internal::wasm::AsmCallableType"*)***
  %1100 = load %"class.v8::internal::wasm::AsmFunctionType"* (%"class.v8::internal::wasm::AsmCallableType"*)**, %"class.v8::internal::wasm::AsmFunctionType"* (%"class.v8::internal::wasm::AsmCallableType"*)*** %1099, align 8
  %1101 = getelementptr inbounds %"class.v8::internal::wasm::AsmFunctionType"* (%"class.v8::internal::wasm::AsmCallableType"*)*, %"class.v8::internal::wasm::AsmFunctionType"* (%"class.v8::internal::wasm::AsmCallableType"*)** %1100, i64 2
  %1102 = load %"class.v8::internal::wasm::AsmFunctionType"* (%"class.v8::internal::wasm::AsmCallableType"*)*, %"class.v8::internal::wasm::AsmFunctionType"* (%"class.v8::internal::wasm::AsmCallableType"*)** %1101, align 8
  %1103 = tail call %"class.v8::internal::wasm::AsmFunctionType"* %1102(%"class.v8::internal::wasm::AsmCallableType"* %1098) #12
  br label %1104

1104:                                             ; preds = %1084, %1097
  %1105 = phi %"class.v8::internal::wasm::AsmFunctionType"* [ %1103, %1097 ], [ null, %1084 ]
  %1106 = getelementptr inbounds %"class.v8::internal::wasm::AsmFunctionType", %"class.v8::internal::wasm::AsmFunctionType"* %1105, i64 0, i32 2, i32 0
  %1107 = getelementptr inbounds %"class.v8::internal::wasm::AsmFunctionType", %"class.v8::internal::wasm::AsmFunctionType"* %1105, i64 0, i32 2, i32 0, i32 0, i32 1
  %1108 = load %"class.v8::internal::wasm::AsmType"**, %"class.v8::internal::wasm::AsmType"*** %1107, align 8
  %1109 = getelementptr inbounds %"class.v8::internal::wasm::AsmFunctionType", %"class.v8::internal::wasm::AsmFunctionType"* %1105, i64 0, i32 2, i32 0, i32 0, i32 2, i32 0, i32 0
  %1110 = load %"class.v8::internal::wasm::AsmType"**, %"class.v8::internal::wasm::AsmType"*** %1109, align 8
  %1111 = icmp eq %"class.v8::internal::wasm::AsmType"** %1108, %1110
  %1112 = ptrtoint %"class.v8::internal::wasm::AsmType"** %1110 to i64
  br i1 %1111, label %1118, label %1113

1113:                                             ; preds = %1104
  %1114 = bitcast %"class.v8::internal::wasm::AsmType"** %1108 to i64*
  store i64 1825, i64* %1114, align 8
  %1115 = getelementptr inbounds %"class.v8::internal::wasm::AsmType"*, %"class.v8::internal::wasm::AsmType"** %1108, i64 1
  %1116 = ptrtoint %"class.v8::internal::wasm::AsmType"** %1115 to i64
  %1117 = bitcast %"class.v8::internal::wasm::AsmType"*** %1107 to i64*
  store i64 %1116, i64* %1117, align 8
  br label %1343

1118:                                             ; preds = %1104
  %1119 = ptrtoint %"class.v8::internal::wasm::AsmType"** %1108 to i64
  %1120 = bitcast %"class.v8::internal::wasm::AsmType"*** %1107 to i64*
  %1121 = bitcast %"class.std::__1::vector.180"* %1106 to i64*
  %1122 = load i64, i64* %1121, align 8
  %1123 = sub i64 %1119, %1122
  %1124 = ashr exact i64 %1123, 3
  %1125 = add nsw i64 %1124, 1
  %1126 = icmp ugt i64 %1125, 268435455
  br i1 %1126, label %1127, label %1129

1127:                                             ; preds = %1118
  %1128 = bitcast %"class.std::__1::vector.180"* %1106 to %"class.std::__1::__vector_base_common"*
  tail call void @_ZNKSt3__120__vector_base_commonILb1EE20__throw_length_errorEv(%"class.std::__1::__vector_base_common"* %1128) #13
  unreachable

1129:                                             ; preds = %1118
  %1130 = bitcast %"class.v8::internal::wasm::AsmType"*** %1109 to i64*
  %1131 = sub i64 %1112, %1122
  %1132 = ashr exact i64 %1131, 3
  %1133 = icmp ult i64 %1132, 134217727
  br i1 %1133, label %1134, label %1139

1134:                                             ; preds = %1129
  %1135 = ashr exact i64 %1131, 2
  %1136 = icmp ult i64 %1135, %1125
  %1137 = select i1 %1136, i64 %1125, i64 %1135
  %1138 = icmp eq i64 %1137, 0
  br i1 %1138, label %1157, label %1139

1139:                                             ; preds = %1134, %1129
  %1140 = phi i64 [ %1137, %1134 ], [ 268435455, %1129 ]
  %1141 = getelementptr inbounds %"class.v8::internal::wasm::AsmFunctionType", %"class.v8::internal::wasm::AsmFunctionType"* %1105, i64 0, i32 2, i32 0, i32 0, i32 2, i32 1, i32 0, i32 0
  %1142 = load %"class.v8::internal::Zone"*, %"class.v8::internal::Zone"** %1141, align 8
  %1143 = shl i64 %1140, 3
  %1144 = getelementptr inbounds %"class.v8::internal::Zone", %"class.v8::internal::Zone"* %1142, i64 0, i32 2
  %1145 = load i64, i64* %1144, align 8
  %1146 = getelementptr inbounds %"class.v8::internal::Zone", %"class.v8::internal::Zone"* %1142, i64 0, i32 3
  %1147 = load i64, i64* %1146, align 8
  %1148 = sub i64 %1147, %1145
  %1149 = icmp ugt i64 %1143, %1148
  br i1 %1149, label %1150, label %1152, !prof !2

1150:                                             ; preds = %1139
  %1151 = tail call i64 @_ZN2v88internal4Zone9NewExpandEm(%"class.v8::internal::Zone"* %1142, i64 %1143) #12
  br label %1154

1152:                                             ; preds = %1139
  %1153 = add i64 %1145, %1143
  store i64 %1153, i64* %1144, align 8
  br label %1154

1154:                                             ; preds = %1152, %1150
  %1155 = phi i64 [ %1151, %1150 ], [ %1145, %1152 ]
  %1156 = inttoptr i64 %1155 to %"class.v8::internal::wasm::AsmType"**
  br label %1157

1157:                                             ; preds = %1154, %1134
  %1158 = phi i64 [ %1140, %1154 ], [ 0, %1134 ]
  %1159 = phi %"class.v8::internal::wasm::AsmType"** [ %1156, %1154 ], [ null, %1134 ]
  %1160 = getelementptr inbounds %"class.v8::internal::wasm::AsmType"*, %"class.v8::internal::wasm::AsmType"** %1159, i64 %1124
  %1161 = getelementptr inbounds %"class.v8::internal::wasm::AsmType"*, %"class.v8::internal::wasm::AsmType"** %1159, i64 %1158
  %1162 = ptrtoint %"class.v8::internal::wasm::AsmType"** %1161 to i64
  %1163 = bitcast %"class.v8::internal::wasm::AsmType"** %1160 to i64*
  store i64 1825, i64* %1163, align 8
  %1164 = getelementptr inbounds %"class.v8::internal::wasm::AsmType"*, %"class.v8::internal::wasm::AsmType"** %1160, i64 1
  %1165 = ptrtoint %"class.v8::internal::wasm::AsmType"** %1164 to i64
  %1166 = getelementptr inbounds %"class.std::__1::vector.180", %"class.std::__1::vector.180"* %1106, i64 0, i32 0, i32 0
  %1167 = load %"class.v8::internal::wasm::AsmType"**, %"class.v8::internal::wasm::AsmType"*** %1166, align 8
  %1168 = ptrtoint %"class.v8::internal::wasm::AsmType"** %1167 to i64
  %1169 = load %"class.v8::internal::wasm::AsmType"**, %"class.v8::internal::wasm::AsmType"*** %1107, align 8
  %1170 = icmp eq %"class.v8::internal::wasm::AsmType"** %1169, %1167
  br i1 %1170, label %1340, label %1171

1171:                                             ; preds = %1157
  %1172 = getelementptr %"class.v8::internal::wasm::AsmType"*, %"class.v8::internal::wasm::AsmType"** %1169, i64 -1
  %1173 = ptrtoint %"class.v8::internal::wasm::AsmType"** %1172 to i64
  %1174 = sub i64 %1173, %1168
  %1175 = lshr i64 %1174, 3
  %1176 = add nuw nsw i64 %1175, 1
  %1177 = icmp ult i64 %1176, 4
  br i1 %1177, label %1270, label %1178

1178:                                             ; preds = %1171
  %1179 = getelementptr %"class.v8::internal::wasm::AsmType"*, %"class.v8::internal::wasm::AsmType"** %1169, i64 -1
  %1180 = ptrtoint %"class.v8::internal::wasm::AsmType"** %1179 to i64
  %1181 = sub i64 %1180, %1168
  %1182 = lshr i64 %1181, 3
  %1183 = xor i64 %1182, -1
  %1184 = add nsw i64 %1124, %1183
  %1185 = getelementptr %"class.v8::internal::wasm::AsmType"*, %"class.v8::internal::wasm::AsmType"** %1159, i64 %1184
  %1186 = xor i64 %1182, -1
  %1187 = getelementptr %"class.v8::internal::wasm::AsmType"*, %"class.v8::internal::wasm::AsmType"** %1169, i64 %1186
  %1188 = icmp ult %"class.v8::internal::wasm::AsmType"** %1185, %1169
  %1189 = icmp ult %"class.v8::internal::wasm::AsmType"** %1187, %1160
  %1190 = and i1 %1188, %1189
  br i1 %1190, label %1270, label %1191

1191:                                             ; preds = %1178
  %1192 = and i64 %1176, 4611686018427387900
  %1193 = sub nsw i64 0, %1192
  %1194 = getelementptr %"class.v8::internal::wasm::AsmType"*, %"class.v8::internal::wasm::AsmType"** %1160, i64 %1193
  %1195 = sub nsw i64 0, %1192
  %1196 = getelementptr %"class.v8::internal::wasm::AsmType"*, %"class.v8::internal::wasm::AsmType"** %1169, i64 %1195
  %1197 = add nsw i64 %1192, -4
  %1198 = lshr exact i64 %1197, 2
  %1199 = add nuw nsw i64 %1198, 1
  %1200 = and i64 %1199, 1
  %1201 = icmp eq i64 %1197, 0
  br i1 %1201, label %1246, label %1202

1202:                                             ; preds = %1191
  %1203 = sub nuw nsw i64 %1199, %1200
  %1204 = getelementptr %"class.v8::internal::wasm::AsmType"*, %"class.v8::internal::wasm::AsmType"** %1160, i64 -1
  %1205 = getelementptr %"class.v8::internal::wasm::AsmType"*, %"class.v8::internal::wasm::AsmType"** %1169, i64 -1
  %1206 = getelementptr %"class.v8::internal::wasm::AsmType"*, %"class.v8::internal::wasm::AsmType"** %1160, i64 -1
  %1207 = getelementptr %"class.v8::internal::wasm::AsmType"*, %"class.v8::internal::wasm::AsmType"** %1169, i64 -1
  br label %1208

1208:                                             ; preds = %1208, %1202
  %1209 = phi i64 [ 0, %1202 ], [ %1243, %1208 ]
  %1210 = phi i64 [ %1203, %1202 ], [ %1244, %1208 ]
  %1211 = sub i64 0, %1209
  %1212 = sub i64 0, %1209
  %1213 = getelementptr inbounds %"class.v8::internal::wasm::AsmType"*, %"class.v8::internal::wasm::AsmType"** %1204, i64 %1211
  %1214 = getelementptr inbounds %"class.v8::internal::wasm::AsmType"*, %"class.v8::internal::wasm::AsmType"** %1205, i64 %1212
  %1215 = getelementptr inbounds %"class.v8::internal::wasm::AsmType"*, %"class.v8::internal::wasm::AsmType"** %1214, i64 -1
  %1216 = bitcast %"class.v8::internal::wasm::AsmType"** %1215 to <2 x i64>*
  %1217 = load <2 x i64>, <2 x i64>* %1216, align 8, !alias.scope !37
  %1218 = getelementptr inbounds %"class.v8::internal::wasm::AsmType"*, %"class.v8::internal::wasm::AsmType"** %1214, i64 -2
  %1219 = getelementptr inbounds %"class.v8::internal::wasm::AsmType"*, %"class.v8::internal::wasm::AsmType"** %1218, i64 -1
  %1220 = bitcast %"class.v8::internal::wasm::AsmType"** %1219 to <2 x i64>*
  %1221 = load <2 x i64>, <2 x i64>* %1220, align 8, !alias.scope !37
  %1222 = getelementptr inbounds %"class.v8::internal::wasm::AsmType"*, %"class.v8::internal::wasm::AsmType"** %1213, i64 -1
  %1223 = bitcast %"class.v8::internal::wasm::AsmType"** %1222 to <2 x i64>*
  store <2 x i64> %1217, <2 x i64>* %1223, align 8, !alias.scope !40, !noalias !37
  %1224 = getelementptr inbounds %"class.v8::internal::wasm::AsmType"*, %"class.v8::internal::wasm::AsmType"** %1213, i64 -2
  %1225 = getelementptr inbounds %"class.v8::internal::wasm::AsmType"*, %"class.v8::internal::wasm::AsmType"** %1224, i64 -1
  %1226 = bitcast %"class.v8::internal::wasm::AsmType"** %1225 to <2 x i64>*
  store <2 x i64> %1221, <2 x i64>* %1226, align 8, !alias.scope !40, !noalias !37
  %1227 = sub nuw nsw i64 -4, %1209
  %1228 = sub nuw nsw i64 -4, %1209
  %1229 = getelementptr inbounds %"class.v8::internal::wasm::AsmType"*, %"class.v8::internal::wasm::AsmType"** %1206, i64 %1227
  %1230 = getelementptr inbounds %"class.v8::internal::wasm::AsmType"*, %"class.v8::internal::wasm::AsmType"** %1207, i64 %1228
  %1231 = getelementptr inbounds %"class.v8::internal::wasm::AsmType"*, %"class.v8::internal::wasm::AsmType"** %1230, i64 -1
  %1232 = bitcast %"class.v8::internal::wasm::AsmType"** %1231 to <2 x i64>*
  %1233 = load <2 x i64>, <2 x i64>* %1232, align 8, !alias.scope !37
  %1234 = getelementptr inbounds %"class.v8::internal::wasm::AsmType"*, %"class.v8::internal::wasm::AsmType"** %1230, i64 -2
  %1235 = getelementptr inbounds %"class.v8::internal::wasm::AsmType"*, %"class.v8::internal::wasm::AsmType"** %1234, i64 -1
  %1236 = bitcast %"class.v8::internal::wasm::AsmType"** %1235 to <2 x i64>*
  %1237 = load <2 x i64>, <2 x i64>* %1236, align 8, !alias.scope !37
  %1238 = getelementptr inbounds %"class.v8::internal::wasm::AsmType"*, %"class.v8::internal::wasm::AsmType"** %1229, i64 -1
  %1239 = bitcast %"class.v8::internal::wasm::AsmType"** %1238 to <2 x i64>*
  store <2 x i64> %1233, <2 x i64>* %1239, align 8, !alias.scope !40, !noalias !37
  %1240 = getelementptr inbounds %"class.v8::internal::wasm::AsmType"*, %"class.v8::internal::wasm::AsmType"** %1229, i64 -2
  %1241 = getelementptr inbounds %"class.v8::internal::wasm::AsmType"*, %"class.v8::internal::wasm::AsmType"** %1240, i64 -1
  %1242 = bitcast %"class.v8::internal::wasm::AsmType"** %1241 to <2 x i64>*
  store <2 x i64> %1237, <2 x i64>* %1242, align 8, !alias.scope !40, !noalias !37
  %1243 = add i64 %1209, 8
  %1244 = add i64 %1210, -2
  %1245 = icmp eq i64 %1244, 0
  br i1 %1245, label %1246, label %1208, !llvm.loop !42

1246:                                             ; preds = %1208, %1191
  %1247 = phi i64 [ 0, %1191 ], [ %1243, %1208 ]
  %1248 = icmp eq i64 %1200, 0
  br i1 %1248, label %1268, label %1249

1249:                                             ; preds = %1246
  %1250 = sub i64 0, %1247
  %1251 = getelementptr %"class.v8::internal::wasm::AsmType"*, %"class.v8::internal::wasm::AsmType"** %1160, i64 -1
  %1252 = sub i64 0, %1247
  %1253 = getelementptr %"class.v8::internal::wasm::AsmType"*, %"class.v8::internal::wasm::AsmType"** %1169, i64 -1
  %1254 = getelementptr inbounds %"class.v8::internal::wasm::AsmType"*, %"class.v8::internal::wasm::AsmType"** %1251, i64 %1250
  %1255 = getelementptr inbounds %"class.v8::internal::wasm::AsmType"*, %"class.v8::internal::wasm::AsmType"** %1253, i64 %1252
  %1256 = getelementptr inbounds %"class.v8::internal::wasm::AsmType"*, %"class.v8::internal::wasm::AsmType"** %1255, i64 -1
  %1257 = bitcast %"class.v8::internal::wasm::AsmType"** %1256 to <2 x i64>*
  %1258 = load <2 x i64>, <2 x i64>* %1257, align 8, !alias.scope !37
  %1259 = getelementptr inbounds %"class.v8::internal::wasm::AsmType"*, %"class.v8::internal::wasm::AsmType"** %1255, i64 -2
  %1260 = getelementptr inbounds %"class.v8::internal::wasm::AsmType"*, %"class.v8::internal::wasm::AsmType"** %1259, i64 -1
  %1261 = bitcast %"class.v8::internal::wasm::AsmType"** %1260 to <2 x i64>*
  %1262 = load <2 x i64>, <2 x i64>* %1261, align 8, !alias.scope !37
  %1263 = getelementptr inbounds %"class.v8::internal::wasm::AsmType"*, %"class.v8::internal::wasm::AsmType"** %1254, i64 -1
  %1264 = bitcast %"class.v8::internal::wasm::AsmType"** %1263 to <2 x i64>*
  store <2 x i64> %1258, <2 x i64>* %1264, align 8, !alias.scope !40, !noalias !37
  %1265 = getelementptr inbounds %"class.v8::internal::wasm::AsmType"*, %"class.v8::internal::wasm::AsmType"** %1254, i64 -2
  %1266 = getelementptr inbounds %"class.v8::internal::wasm::AsmType"*, %"class.v8::internal::wasm::AsmType"** %1265, i64 -1
  %1267 = bitcast %"class.v8::internal::wasm::AsmType"** %1266 to <2 x i64>*
  store <2 x i64> %1262, <2 x i64>* %1267, align 8, !alias.scope !40, !noalias !37
  br label %1268

1268:                                             ; preds = %1246, %1249
  %1269 = icmp eq i64 %1176, %1192
  br i1 %1269, label %1340, label %1270

1270:                                             ; preds = %1268, %1178, %1171
  %1271 = phi %"class.v8::internal::wasm::AsmType"** [ %1160, %1178 ], [ %1160, %1171 ], [ %1194, %1268 ]
  %1272 = phi %"class.v8::internal::wasm::AsmType"** [ %1169, %1178 ], [ %1169, %1171 ], [ %1196, %1268 ]
  %1273 = getelementptr %"class.v8::internal::wasm::AsmType"*, %"class.v8::internal::wasm::AsmType"** %1272, i64 -1
  %1274 = ptrtoint %"class.v8::internal::wasm::AsmType"** %1273 to i64
  %1275 = sub i64 %1274, %1168
  %1276 = lshr i64 %1275, 3
  %1277 = add nuw nsw i64 %1276, 1
  %1278 = and i64 %1277, 7
  %1279 = icmp eq i64 %1278, 0
  br i1 %1279, label %1291, label %1280

1280:                                             ; preds = %1270, %1280
  %1281 = phi %"class.v8::internal::wasm::AsmType"** [ %1284, %1280 ], [ %1271, %1270 ]
  %1282 = phi %"class.v8::internal::wasm::AsmType"** [ %1285, %1280 ], [ %1272, %1270 ]
  %1283 = phi i64 [ %1289, %1280 ], [ %1278, %1270 ]
  %1284 = getelementptr inbounds %"class.v8::internal::wasm::AsmType"*, %"class.v8::internal::wasm::AsmType"** %1281, i64 -1
  %1285 = getelementptr inbounds %"class.v8::internal::wasm::AsmType"*, %"class.v8::internal::wasm::AsmType"** %1282, i64 -1
  %1286 = bitcast %"class.v8::internal::wasm::AsmType"** %1285 to i64*
  %1287 = load i64, i64* %1286, align 8
  %1288 = bitcast %"class.v8::internal::wasm::AsmType"** %1284 to i64*
  store i64 %1287, i64* %1288, align 8
  %1289 = add i64 %1283, -1
  %1290 = icmp eq i64 %1289, 0
  br i1 %1290, label %1291, label %1280, !llvm.loop !43

1291:                                             ; preds = %1280, %1270
  %1292 = phi %"class.v8::internal::wasm::AsmType"** [ undef, %1270 ], [ %1284, %1280 ]
  %1293 = phi %"class.v8::internal::wasm::AsmType"** [ %1271, %1270 ], [ %1284, %1280 ]
  %1294 = phi %"class.v8::internal::wasm::AsmType"** [ %1272, %1270 ], [ %1285, %1280 ]
  %1295 = icmp ult i64 %1275, 56
  br i1 %1295, label %1340, label %1296

1296:                                             ; preds = %1291, %1296
  %1297 = phi %"class.v8::internal::wasm::AsmType"** [ %1334, %1296 ], [ %1293, %1291 ]
  %1298 = phi %"class.v8::internal::wasm::AsmType"** [ %1335, %1296 ], [ %1294, %1291 ]
  %1299 = getelementptr inbounds %"class.v8::internal::wasm::AsmType"*, %"class.v8::internal::wasm::AsmType"** %1297, i64 -1
  %1300 = getelementptr inbounds %"class.v8::internal::wasm::AsmType"*, %"class.v8::internal::wasm::AsmType"** %1298, i64 -1
  %1301 = bitcast %"class.v8::internal::wasm::AsmType"** %1300 to i64*
  %1302 = load i64, i64* %1301, align 8
  %1303 = bitcast %"class.v8::internal::wasm::AsmType"** %1299 to i64*
  store i64 %1302, i64* %1303, align 8
  %1304 = getelementptr inbounds %"class.v8::internal::wasm::AsmType"*, %"class.v8::internal::wasm::AsmType"** %1297, i64 -2
  %1305 = getelementptr inbounds %"class.v8::internal::wasm::AsmType"*, %"class.v8::internal::wasm::AsmType"** %1298, i64 -2
  %1306 = bitcast %"class.v8::internal::wasm::AsmType"** %1305 to i64*
  %1307 = load i64, i64* %1306, align 8
  %1308 = bitcast %"class.v8::internal::wasm::AsmType"** %1304 to i64*
  store i64 %1307, i64* %1308, align 8
  %1309 = getelementptr inbounds %"class.v8::internal::wasm::AsmType"*, %"class.v8::internal::wasm::AsmType"** %1297, i64 -3
  %1310 = getelementptr inbounds %"class.v8::internal::wasm::AsmType"*, %"class.v8::internal::wasm::AsmType"** %1298, i64 -3
  %1311 = bitcast %"class.v8::internal::wasm::AsmType"** %1310 to i64*
  %1312 = load i64, i64* %1311, align 8
  %1313 = bitcast %"class.v8::internal::wasm::AsmType"** %1309 to i64*
  store i64 %1312, i64* %1313, align 8
  %1314 = getelementptr inbounds %"class.v8::internal::wasm::AsmType"*, %"class.v8::internal::wasm::AsmType"** %1297, i64 -4
  %1315 = getelementptr inbounds %"class.v8::internal::wasm::AsmType"*, %"class.v8::internal::wasm::AsmType"** %1298, i64 -4
  %1316 = bitcast %"class.v8::internal::wasm::AsmType"** %1315 to i64*
  %1317 = load i64, i64* %1316, align 8
  %1318 = bitcast %"class.v8::internal::wasm::AsmType"** %1314 to i64*
  store i64 %1317, i64* %1318, align 8
  %1319 = getelementptr inbounds %"class.v8::internal::wasm::AsmType"*, %"class.v8::internal::wasm::AsmType"** %1297, i64 -5
  %1320 = getelementptr inbounds %"class.v8::internal::wasm::AsmType"*, %"class.v8::internal::wasm::AsmType"** %1298, i64 -5
  %1321 = bitcast %"class.v8::internal::wasm::AsmType"** %1320 to i64*
  %1322 = load i64, i64* %1321, align 8
  %1323 = bitcast %"class.v8::internal::wasm::AsmType"** %1319 to i64*
  store i64 %1322, i64* %1323, align 8
  %1324 = getelementptr inbounds %"class.v8::internal::wasm::AsmType"*, %"class.v8::internal::wasm::AsmType"** %1297, i64 -6
  %1325 = getelementptr inbounds %"class.v8::internal::wasm::AsmType"*, %"class.v8::internal::wasm::AsmType"** %1298, i64 -6
  %1326 = bitcast %"class.v8::internal::wasm::AsmType"** %1325 to i64*
  %1327 = load i64, i64* %1326, align 8
  %1328 = bitcast %"class.v8::internal::wasm::AsmType"** %1324 to i64*
  store i64 %1327, i64* %1328, align 8
  %1329 = getelementptr inbounds %"class.v8::internal::wasm::AsmType"*, %"class.v8::internal::wasm::AsmType"** %1297, i64 -7
  %1330 = getelementptr inbounds %"class.v8::internal::wasm::AsmType"*, %"class.v8::internal::wasm::AsmType"** %1298, i64 -7
  %1331 = bitcast %"class.v8::internal::wasm::AsmType"** %1330 to i64*
  %1332 = load i64, i64* %1331, align 8
  %1333 = bitcast %"class.v8::internal::wasm::AsmType"** %1329 to i64*
  store i64 %1332, i64* %1333, align 8
  %1334 = getelementptr inbounds %"class.v8::internal::wasm::AsmType"*, %"class.v8::internal::wasm::AsmType"** %1297, i64 -8
  %1335 = getelementptr inbounds %"class.v8::internal::wasm::AsmType"*, %"class.v8::internal::wasm::AsmType"** %1298, i64 -8
  %1336 = bitcast %"class.v8::internal::wasm::AsmType"** %1335 to i64*
  %1337 = load i64, i64* %1336, align 8
  %1338 = bitcast %"class.v8::internal::wasm::AsmType"** %1334 to i64*
  store i64 %1337, i64* %1338, align 8
  %1339 = icmp eq %"class.v8::internal::wasm::AsmType"** %1335, %1167
  br i1 %1339, label %1340, label %1296, !llvm.loop !44

1340:                                             ; preds = %1291, %1296, %1268, %1157
  %1341 = phi %"class.v8::internal::wasm::AsmType"** [ %1160, %1157 ], [ %1194, %1268 ], [ %1292, %1291 ], [ %1334, %1296 ]
  %1342 = ptrtoint %"class.v8::internal::wasm::AsmType"** %1341 to i64
  store i64 %1342, i64* %1121, align 8
  store i64 %1165, i64* %1120, align 8
  store i64 %1162, i64* %1130, align 8
  br label %1343

1343:                                             ; preds = %1113, %1340
  %1344 = load %"class.v8::internal::Zone"*, %"class.v8::internal::Zone"** %2, align 8
  %1345 = ptrtoint %"class.v8::internal::Zone"* %1344 to i64
  %1346 = getelementptr inbounds %"class.v8::internal::Zone", %"class.v8::internal::Zone"* %1344, i64 0, i32 2
  %1347 = load i64, i64* %1346, align 8
  %1348 = getelementptr inbounds %"class.v8::internal::Zone", %"class.v8::internal::Zone"* %1344, i64 0, i32 3
  %1349 = load i64, i64* %1348, align 8
  %1350 = sub i64 %1349, %1347
  %1351 = icmp ult i64 %1350, 48
  br i1 %1351, label %1352, label %1354, !prof !2

1352:                                             ; preds = %1343
  %1353 = tail call i64 @_ZN2v88internal4Zone9NewExpandEm(%"class.v8::internal::Zone"* %1344, i64 48) #12
  br label %1356

1354:                                             ; preds = %1343
  %1355 = add i64 %1347, 48
  store i64 %1355, i64* %1346, align 8
  br label %1356

1356:                                             ; preds = %1352, %1354
  %1357 = phi i64 [ %1353, %1352 ], [ %1347, %1354 ]
  %1358 = inttoptr i64 %1357 to %"class.v8::internal::wasm::AsmFunctionType"*
  %1359 = getelementptr inbounds %"class.v8::internal::wasm::AsmFunctionType", %"class.v8::internal::wasm::AsmFunctionType"* %1358, i64 0, i32 0, i32 0
  store i32 (...)** bitcast (i8** getelementptr inbounds ({ [9 x i8*] }, { [9 x i8*] }* @_ZTVN2v88internal4wasm15AsmFunctionTypeE, i64 0, inrange i32 0, i64 2) to i32 (...)**), i32 (...)*** %1359, align 8
  %1360 = getelementptr inbounds %"class.v8::internal::wasm::AsmFunctionType", %"class.v8::internal::wasm::AsmFunctionType"* %1358, i64 0, i32 1
  %1361 = bitcast %"class.v8::internal::wasm::AsmType"** %1360 to i64*
  store i64 1825, i64* %1361, align 8
  %1362 = getelementptr inbounds %"class.v8::internal::wasm::AsmFunctionType", %"class.v8::internal::wasm::AsmFunctionType"* %1358, i64 0, i32 2
  %1363 = getelementptr inbounds %"class.v8::internal::wasm::AsmFunctionType", %"class.v8::internal::wasm::AsmFunctionType"* %1358, i64 0, i32 2, i32 0, i32 0, i32 2, i32 1
  %1364 = bitcast %"struct.std::__1::__compressed_pair_elem.184"* %1363 to i64*
  %1365 = bitcast %"class.v8::internal::ZoneVector.179"* %1362 to i8*
  tail call void @llvm.memset.p0i8.i64(i8* align 8 %1365, i8 0, i64 24, i1 false) #12
  store i64 %1345, i64* %1364, align 8
  %1366 = inttoptr i64 %1357 to %"class.v8::internal::wasm::AsmType"*
  %1367 = getelementptr inbounds %"class.v8::internal::wasm::AsmJsParser", %"class.v8::internal::wasm::AsmJsParser"* %0, i64 0, i32 28
  store %"class.v8::internal::wasm::AsmType"* %1366, %"class.v8::internal::wasm::AsmType"** %1367, align 8
  %1368 = and i64 %1357, 1
  %1369 = icmp eq i64 %1368, 0
  br i1 %1369, label %1370, label %1377

1370:                                             ; preds = %1356
  %1371 = inttoptr i64 %1357 to %"class.v8::internal::wasm::AsmCallableType"*
  %1372 = inttoptr i64 %1357 to %"class.v8::internal::wasm::AsmFunctionType"* (%"class.v8::internal::wasm::AsmCallableType"*)***
  %1373 = load %"class.v8::internal::wasm::AsmFunctionType"* (%"class.v8::internal::wasm::AsmCallableType"*)**, %"class.v8::internal::wasm::AsmFunctionType"* (%"class.v8::internal::wasm::AsmCallableType"*)*** %1372, align 8
  %1374 = getelementptr inbounds %"class.v8::internal::wasm::AsmFunctionType"* (%"class.v8::internal::wasm::AsmCallableType"*)*, %"class.v8::internal::wasm::AsmFunctionType"* (%"class.v8::internal::wasm::AsmCallableType"*)** %1373, i64 2
  %1375 = load %"class.v8::internal::wasm::AsmFunctionType"* (%"class.v8::internal::wasm::AsmCallableType"*)*, %"class.v8::internal::wasm::AsmFunctionType"* (%"class.v8::internal::wasm::AsmCallableType"*)** %1374, align 8
  %1376 = tail call %"class.v8::internal::wasm::AsmFunctionType"* %1375(%"class.v8::internal::wasm::AsmCallableType"* %1371) #12
  br label %1377

1377:                                             ; preds = %1356, %1370
  %1378 = phi %"class.v8::internal::wasm::AsmFunctionType"* [ %1376, %1370 ], [ null, %1356 ]
  %1379 = getelementptr inbounds %"class.v8::internal::wasm::AsmFunctionType", %"class.v8::internal::wasm::AsmFunctionType"* %1378, i64 0, i32 2, i32 0
  %1380 = getelementptr inbounds %"class.v8::internal::wasm::AsmFunctionType", %"class.v8::internal::wasm::AsmFunctionType"* %1378, i64 0, i32 2, i32 0, i32 0, i32 1
  %1381 = load %"class.v8::internal::wasm::AsmType"**, %"class.v8::internal::wasm::AsmType"*** %1380, align 8
  %1382 = getelementptr inbounds %"class.v8::internal::wasm::AsmFunctionType", %"class.v8::internal::wasm::AsmFunctionType"* %1378, i64 0, i32 2, i32 0, i32 0, i32 2, i32 0, i32 0
  %1383 = load %"class.v8::internal::wasm::AsmType"**, %"class.v8::internal::wasm::AsmType"*** %1382, align 8
  %1384 = icmp eq %"class.v8::internal::wasm::AsmType"** %1381, %1383
  %1385 = ptrtoint %"class.v8::internal::wasm::AsmType"** %1383 to i64
  br i1 %1384, label %1391, label %1386

1386:                                             ; preds = %1377
  %1387 = bitcast %"class.v8::internal::wasm::AsmType"** %1381 to i64*
  store i64 769, i64* %1387, align 8
  %1388 = getelementptr inbounds %"class.v8::internal::wasm::AsmType"*, %"class.v8::internal::wasm::AsmType"** %1381, i64 1
  %1389 = ptrtoint %"class.v8::internal::wasm::AsmType"** %1388 to i64
  %1390 = bitcast %"class.v8::internal::wasm::AsmType"*** %1380 to i64*
  store i64 %1389, i64* %1390, align 8
  br label %1616

1391:                                             ; preds = %1377
  %1392 = ptrtoint %"class.v8::internal::wasm::AsmType"** %1381 to i64
  %1393 = bitcast %"class.v8::internal::wasm::AsmType"*** %1380 to i64*
  %1394 = bitcast %"class.std::__1::vector.180"* %1379 to i64*
  %1395 = load i64, i64* %1394, align 8
  %1396 = sub i64 %1392, %1395
  %1397 = ashr exact i64 %1396, 3
  %1398 = add nsw i64 %1397, 1
  %1399 = icmp ugt i64 %1398, 268435455
  br i1 %1399, label %1400, label %1402

1400:                                             ; preds = %1391
  %1401 = bitcast %"class.std::__1::vector.180"* %1379 to %"class.std::__1::__vector_base_common"*
  tail call void @_ZNKSt3__120__vector_base_commonILb1EE20__throw_length_errorEv(%"class.std::__1::__vector_base_common"* %1401) #13
  unreachable

1402:                                             ; preds = %1391
  %1403 = bitcast %"class.v8::internal::wasm::AsmType"*** %1382 to i64*
  %1404 = sub i64 %1385, %1395
  %1405 = ashr exact i64 %1404, 3
  %1406 = icmp ult i64 %1405, 134217727
  br i1 %1406, label %1407, label %1412

1407:                                             ; preds = %1402
  %1408 = ashr exact i64 %1404, 2
  %1409 = icmp ult i64 %1408, %1398
  %1410 = select i1 %1409, i64 %1398, i64 %1408
  %1411 = icmp eq i64 %1410, 0
  br i1 %1411, label %1430, label %1412

1412:                                             ; preds = %1407, %1402
  %1413 = phi i64 [ %1410, %1407 ], [ 268435455, %1402 ]
  %1414 = getelementptr inbounds %"class.v8::internal::wasm::AsmFunctionType", %"class.v8::internal::wasm::AsmFunctionType"* %1378, i64 0, i32 2, i32 0, i32 0, i32 2, i32 1, i32 0, i32 0
  %1415 = load %"class.v8::internal::Zone"*, %"class.v8::internal::Zone"** %1414, align 8
  %1416 = shl i64 %1413, 3
  %1417 = getelementptr inbounds %"class.v8::internal::Zone", %"class.v8::internal::Zone"* %1415, i64 0, i32 2
  %1418 = load i64, i64* %1417, align 8
  %1419 = getelementptr inbounds %"class.v8::internal::Zone", %"class.v8::internal::Zone"* %1415, i64 0, i32 3
  %1420 = load i64, i64* %1419, align 8
  %1421 = sub i64 %1420, %1418
  %1422 = icmp ugt i64 %1416, %1421
  br i1 %1422, label %1423, label %1425, !prof !2

1423:                                             ; preds = %1412
  %1424 = tail call i64 @_ZN2v88internal4Zone9NewExpandEm(%"class.v8::internal::Zone"* %1415, i64 %1416) #12
  br label %1427

1425:                                             ; preds = %1412
  %1426 = add i64 %1418, %1416
  store i64 %1426, i64* %1417, align 8
  br label %1427

1427:                                             ; preds = %1425, %1423
  %1428 = phi i64 [ %1424, %1423 ], [ %1418, %1425 ]
  %1429 = inttoptr i64 %1428 to %"class.v8::internal::wasm::AsmType"**
  br label %1430

1430:                                             ; preds = %1427, %1407
  %1431 = phi i64 [ %1413, %1427 ], [ 0, %1407 ]
  %1432 = phi %"class.v8::internal::wasm::AsmType"** [ %1429, %1427 ], [ null, %1407 ]
  %1433 = getelementptr inbounds %"class.v8::internal::wasm::AsmType"*, %"class.v8::internal::wasm::AsmType"** %1432, i64 %1397
  %1434 = getelementptr inbounds %"class.v8::internal::wasm::AsmType"*, %"class.v8::internal::wasm::AsmType"** %1432, i64 %1431
  %1435 = ptrtoint %"class.v8::internal::wasm::AsmType"** %1434 to i64
  %1436 = bitcast %"class.v8::internal::wasm::AsmType"** %1433 to i64*
  store i64 769, i64* %1436, align 8
  %1437 = getelementptr inbounds %"class.v8::internal::wasm::AsmType"*, %"class.v8::internal::wasm::AsmType"** %1433, i64 1
  %1438 = ptrtoint %"class.v8::internal::wasm::AsmType"** %1437 to i64
  %1439 = getelementptr inbounds %"class.std::__1::vector.180", %"class.std::__1::vector.180"* %1379, i64 0, i32 0, i32 0
  %1440 = load %"class.v8::internal::wasm::AsmType"**, %"class.v8::internal::wasm::AsmType"*** %1439, align 8
  %1441 = ptrtoint %"class.v8::internal::wasm::AsmType"** %1440 to i64
  %1442 = load %"class.v8::internal::wasm::AsmType"**, %"class.v8::internal::wasm::AsmType"*** %1380, align 8
  %1443 = icmp eq %"class.v8::internal::wasm::AsmType"** %1442, %1440
  br i1 %1443, label %1613, label %1444

1444:                                             ; preds = %1430
  %1445 = getelementptr %"class.v8::internal::wasm::AsmType"*, %"class.v8::internal::wasm::AsmType"** %1442, i64 -1
  %1446 = ptrtoint %"class.v8::internal::wasm::AsmType"** %1445 to i64
  %1447 = sub i64 %1446, %1441
  %1448 = lshr i64 %1447, 3
  %1449 = add nuw nsw i64 %1448, 1
  %1450 = icmp ult i64 %1449, 4
  br i1 %1450, label %1543, label %1451

1451:                                             ; preds = %1444
  %1452 = getelementptr %"class.v8::internal::wasm::AsmType"*, %"class.v8::internal::wasm::AsmType"** %1442, i64 -1
  %1453 = ptrtoint %"class.v8::internal::wasm::AsmType"** %1452 to i64
  %1454 = sub i64 %1453, %1441
  %1455 = lshr i64 %1454, 3
  %1456 = xor i64 %1455, -1
  %1457 = add nsw i64 %1397, %1456
  %1458 = getelementptr %"class.v8::internal::wasm::AsmType"*, %"class.v8::internal::wasm::AsmType"** %1432, i64 %1457
  %1459 = xor i64 %1455, -1
  %1460 = getelementptr %"class.v8::internal::wasm::AsmType"*, %"class.v8::internal::wasm::AsmType"** %1442, i64 %1459
  %1461 = icmp ult %"class.v8::internal::wasm::AsmType"** %1458, %1442
  %1462 = icmp ult %"class.v8::internal::wasm::AsmType"** %1460, %1433
  %1463 = and i1 %1461, %1462
  br i1 %1463, label %1543, label %1464

1464:                                             ; preds = %1451
  %1465 = and i64 %1449, 4611686018427387900
  %1466 = sub nsw i64 0, %1465
  %1467 = getelementptr %"class.v8::internal::wasm::AsmType"*, %"class.v8::internal::wasm::AsmType"** %1433, i64 %1466
  %1468 = sub nsw i64 0, %1465
  %1469 = getelementptr %"class.v8::internal::wasm::AsmType"*, %"class.v8::internal::wasm::AsmType"** %1442, i64 %1468
  %1470 = add nsw i64 %1465, -4
  %1471 = lshr exact i64 %1470, 2
  %1472 = add nuw nsw i64 %1471, 1
  %1473 = and i64 %1472, 1
  %1474 = icmp eq i64 %1470, 0
  br i1 %1474, label %1519, label %1475

1475:                                             ; preds = %1464
  %1476 = sub nuw nsw i64 %1472, %1473
  %1477 = getelementptr %"class.v8::internal::wasm::AsmType"*, %"class.v8::internal::wasm::AsmType"** %1433, i64 -1
  %1478 = getelementptr %"class.v8::internal::wasm::AsmType"*, %"class.v8::internal::wasm::AsmType"** %1442, i64 -1
  %1479 = getelementptr %"class.v8::internal::wasm::AsmType"*, %"class.v8::internal::wasm::AsmType"** %1433, i64 -1
  %1480 = getelementptr %"class.v8::internal::wasm::AsmType"*, %"class.v8::internal::wasm::AsmType"** %1442, i64 -1
  br label %1481

1481:                                             ; preds = %1481, %1475
  %1482 = phi i64 [ 0, %1475 ], [ %1516, %1481 ]
  %1483 = phi i64 [ %1476, %1475 ], [ %1517, %1481 ]
  %1484 = sub i64 0, %1482
  %1485 = sub i64 0, %1482
  %1486 = getelementptr inbounds %"class.v8::internal::wasm::AsmType"*, %"class.v8::internal::wasm::AsmType"** %1477, i64 %1484
  %1487 = getelementptr inbounds %"class.v8::internal::wasm::AsmType"*, %"class.v8::internal::wasm::AsmType"** %1478, i64 %1485
  %1488 = getelementptr inbounds %"class.v8::internal::wasm::AsmType"*, %"class.v8::internal::wasm::AsmType"** %1487, i64 -1
  %1489 = bitcast %"class.v8::internal::wasm::AsmType"** %1488 to <2 x i64>*
  %1490 = load <2 x i64>, <2 x i64>* %1489, align 8, !alias.scope !45
  %1491 = getelementptr inbounds %"class.v8::internal::wasm::AsmType"*, %"class.v8::internal::wasm::AsmType"** %1487, i64 -2
  %1492 = getelementptr inbounds %"class.v8::internal::wasm::AsmType"*, %"class.v8::internal::wasm::AsmType"** %1491, i64 -1
  %1493 = bitcast %"class.v8::internal::wasm::AsmType"** %1492 to <2 x i64>*
  %1494 = load <2 x i64>, <2 x i64>* %1493, align 8, !alias.scope !45
  %1495 = getelementptr inbounds %"class.v8::internal::wasm::AsmType"*, %"class.v8::internal::wasm::AsmType"** %1486, i64 -1
  %1496 = bitcast %"class.v8::internal::wasm::AsmType"** %1495 to <2 x i64>*
  store <2 x i64> %1490, <2 x i64>* %1496, align 8, !alias.scope !48, !noalias !45
  %1497 = getelementptr inbounds %"class.v8::internal::wasm::AsmType"*, %"class.v8::internal::wasm::AsmType"** %1486, i64 -2
  %1498 = getelementptr inbounds %"class.v8::internal::wasm::AsmType"*, %"class.v8::internal::wasm::AsmType"** %1497, i64 -1
  %1499 = bitcast %"class.v8::internal::wasm::AsmType"** %1498 to <2 x i64>*
  store <2 x i64> %1494, <2 x i64>* %1499, align 8, !alias.scope !48, !noalias !45
  %1500 = sub nuw nsw i64 -4, %1482
  %1501 = sub nuw nsw i64 -4, %1482
  %1502 = getelementptr inbounds %"class.v8::internal::wasm::AsmType"*, %"class.v8::internal::wasm::AsmType"** %1479, i64 %1500
  %1503 = getelementptr inbounds %"class.v8::internal::wasm::AsmType"*, %"class.v8::internal::wasm::AsmType"** %1480, i64 %1501
  %1504 = getelementptr inbounds %"class.v8::internal::wasm::AsmType"*, %"class.v8::internal::wasm::AsmType"** %1503, i64 -1
  %1505 = bitcast %"class.v8::internal::wasm::AsmType"** %1504 to <2 x i64>*
  %1506 = load <2 x i64>, <2 x i64>* %1505, align 8, !alias.scope !45
  %1507 = getelementptr inbounds %"class.v8::internal::wasm::AsmType"*, %"class.v8::internal::wasm::AsmType"** %1503, i64 -2
  %1508 = getelementptr inbounds %"class.v8::internal::wasm::AsmType"*, %"class.v8::internal::wasm::AsmType"** %1507, i64 -1
  %1509 = bitcast %"class.v8::internal::wasm::AsmType"** %1508 to <2 x i64>*
  %1510 = load <2 x i64>, <2 x i64>* %1509, align 8, !alias.scope !45
  %1511 = getelementptr inbounds %"class.v8::internal::wasm::AsmType"*, %"class.v8::internal::wasm::AsmType"** %1502, i64 -1
  %1512 = bitcast %"class.v8::internal::wasm::AsmType"** %1511 to <2 x i64>*
  store <2 x i64> %1506, <2 x i64>* %1512, align 8, !alias.scope !48, !noalias !45
  %1513 = getelementptr inbounds %"class.v8::internal::wasm::AsmType"*, %"class.v8::internal::wasm::AsmType"** %1502, i64 -2
  %1514 = getelementptr inbounds %"class.v8::internal::wasm::AsmType"*, %"class.v8::internal::wasm::AsmType"** %1513, i64 -1
  %1515 = bitcast %"class.v8::internal::wasm::AsmType"** %1514 to <2 x i64>*
  store <2 x i64> %1510, <2 x i64>* %1515, align 8, !alias.scope !48, !noalias !45
  %1516 = add i64 %1482, 8
  %1517 = add i64 %1483, -2
  %1518 = icmp eq i64 %1517, 0
  br i1 %1518, label %1519, label %1481, !llvm.loop !50

1519:                                             ; preds = %1481, %1464
  %1520 = phi i64 [ 0, %1464 ], [ %1516, %1481 ]
  %1521 = icmp eq i64 %1473, 0
  br i1 %1521, label %1541, label %1522

1522:                                             ; preds = %1519
  %1523 = sub i64 0, %1520
  %1524 = getelementptr %"class.v8::internal::wasm::AsmType"*, %"class.v8::internal::wasm::AsmType"** %1433, i64 -1
  %1525 = sub i64 0, %1520
  %1526 = getelementptr %"class.v8::internal::wasm::AsmType"*, %"class.v8::internal::wasm::AsmType"** %1442, i64 -1
  %1527 = getelementptr inbounds %"class.v8::internal::wasm::AsmType"*, %"class.v8::internal::wasm::AsmType"** %1524, i64 %1523
  %1528 = getelementptr inbounds %"class.v8::internal::wasm::AsmType"*, %"class.v8::internal::wasm::AsmType"** %1526, i64 %1525
  %1529 = getelementptr inbounds %"class.v8::internal::wasm::AsmType"*, %"class.v8::internal::wasm::AsmType"** %1528, i64 -1
  %1530 = bitcast %"class.v8::internal::wasm::AsmType"** %1529 to <2 x i64>*
  %1531 = load <2 x i64>, <2 x i64>* %1530, align 8, !alias.scope !45
  %1532 = getelementptr inbounds %"class.v8::internal::wasm::AsmType"*, %"class.v8::internal::wasm::AsmType"** %1528, i64 -2
  %1533 = getelementptr inbounds %"class.v8::internal::wasm::AsmType"*, %"class.v8::internal::wasm::AsmType"** %1532, i64 -1
  %1534 = bitcast %"class.v8::internal::wasm::AsmType"** %1533 to <2 x i64>*
  %1535 = load <2 x i64>, <2 x i64>* %1534, align 8, !alias.scope !45
  %1536 = getelementptr inbounds %"class.v8::internal::wasm::AsmType"*, %"class.v8::internal::wasm::AsmType"** %1527, i64 -1
  %1537 = bitcast %"class.v8::internal::wasm::AsmType"** %1536 to <2 x i64>*
  store <2 x i64> %1531, <2 x i64>* %1537, align 8, !alias.scope !48, !noalias !45
  %1538 = getelementptr inbounds %"class.v8::internal::wasm::AsmType"*, %"class.v8::internal::wasm::AsmType"** %1527, i64 -2
  %1539 = getelementptr inbounds %"class.v8::internal::wasm::AsmType"*, %"class.v8::internal::wasm::AsmType"** %1538, i64 -1
  %1540 = bitcast %"class.v8::internal::wasm::AsmType"** %1539 to <2 x i64>*
  store <2 x i64> %1535, <2 x i64>* %1540, align 8, !alias.scope !48, !noalias !45
  br label %1541

1541:                                             ; preds = %1519, %1522
  %1542 = icmp eq i64 %1449, %1465
  br i1 %1542, label %1613, label %1543

1543:                                             ; preds = %1541, %1451, %1444
  %1544 = phi %"class.v8::internal::wasm::AsmType"** [ %1433, %1451 ], [ %1433, %1444 ], [ %1467, %1541 ]
  %1545 = phi %"class.v8::internal::wasm::AsmType"** [ %1442, %1451 ], [ %1442, %1444 ], [ %1469, %1541 ]
  %1546 = getelementptr %"class.v8::internal::wasm::AsmType"*, %"class.v8::internal::wasm::AsmType"** %1545, i64 -1
  %1547 = ptrtoint %"class.v8::internal::wasm::AsmType"** %1546 to i64
  %1548 = sub i64 %1547, %1441
  %1549 = lshr i64 %1548, 3
  %1550 = add nuw nsw i64 %1549, 1
  %1551 = and i64 %1550, 7
  %1552 = icmp eq i64 %1551, 0
  br i1 %1552, label %1564, label %1553

1553:                                             ; preds = %1543, %1553
  %1554 = phi %"class.v8::internal::wasm::AsmType"** [ %1557, %1553 ], [ %1544, %1543 ]
  %1555 = phi %"class.v8::internal::wasm::AsmType"** [ %1558, %1553 ], [ %1545, %1543 ]
  %1556 = phi i64 [ %1562, %1553 ], [ %1551, %1543 ]
  %1557 = getelementptr inbounds %"class.v8::internal::wasm::AsmType"*, %"class.v8::internal::wasm::AsmType"** %1554, i64 -1
  %1558 = getelementptr inbounds %"class.v8::internal::wasm::AsmType"*, %"class.v8::internal::wasm::AsmType"** %1555, i64 -1
  %1559 = bitcast %"class.v8::internal::wasm::AsmType"** %1558 to i64*
  %1560 = load i64, i64* %1559, align 8
  %1561 = bitcast %"class.v8::internal::wasm::AsmType"** %1557 to i64*
  store i64 %1560, i64* %1561, align 8
  %1562 = add i64 %1556, -1
  %1563 = icmp eq i64 %1562, 0
  br i1 %1563, label %1564, label %1553, !llvm.loop !51

1564:                                             ; preds = %1553, %1543
  %1565 = phi %"class.v8::internal::wasm::AsmType"** [ undef, %1543 ], [ %1557, %1553 ]
  %1566 = phi %"class.v8::internal::wasm::AsmType"** [ %1544, %1543 ], [ %1557, %1553 ]
  %1567 = phi %"class.v8::internal::wasm::AsmType"** [ %1545, %1543 ], [ %1558, %1553 ]
  %1568 = icmp ult i64 %1548, 56
  br i1 %1568, label %1613, label %1569

1569:                                             ; preds = %1564, %1569
  %1570 = phi %"class.v8::internal::wasm::AsmType"** [ %1607, %1569 ], [ %1566, %1564 ]
  %1571 = phi %"class.v8::internal::wasm::AsmType"** [ %1608, %1569 ], [ %1567, %1564 ]
  %1572 = getelementptr inbounds %"class.v8::internal::wasm::AsmType"*, %"class.v8::internal::wasm::AsmType"** %1570, i64 -1
  %1573 = getelementptr inbounds %"class.v8::internal::wasm::AsmType"*, %"class.v8::internal::wasm::AsmType"** %1571, i64 -1
  %1574 = bitcast %"class.v8::internal::wasm::AsmType"** %1573 to i64*
  %1575 = load i64, i64* %1574, align 8
  %1576 = bitcast %"class.v8::internal::wasm::AsmType"** %1572 to i64*
  store i64 %1575, i64* %1576, align 8
  %1577 = getelementptr inbounds %"class.v8::internal::wasm::AsmType"*, %"class.v8::internal::wasm::AsmType"** %1570, i64 -2
  %1578 = getelementptr inbounds %"class.v8::internal::wasm::AsmType"*, %"class.v8::internal::wasm::AsmType"** %1571, i64 -2
  %1579 = bitcast %"class.v8::internal::wasm::AsmType"** %1578 to i64*
  %1580 = load i64, i64* %1579, align 8
  %1581 = bitcast %"class.v8::internal::wasm::AsmType"** %1577 to i64*
  store i64 %1580, i64* %1581, align 8
  %1582 = getelementptr inbounds %"class.v8::internal::wasm::AsmType"*, %"class.v8::internal::wasm::AsmType"** %1570, i64 -3
  %1583 = getelementptr inbounds %"class.v8::internal::wasm::AsmType"*, %"class.v8::internal::wasm::AsmType"** %1571, i64 -3
  %1584 = bitcast %"class.v8::internal::wasm::AsmType"** %1583 to i64*
  %1585 = load i64, i64* %1584, align 8
  %1586 = bitcast %"class.v8::internal::wasm::AsmType"** %1582 to i64*
  store i64 %1585, i64* %1586, align 8
  %1587 = getelementptr inbounds %"class.v8::internal::wasm::AsmType"*, %"class.v8::internal::wasm::AsmType"** %1570, i64 -4
  %1588 = getelementptr inbounds %"class.v8::internal::wasm::AsmType"*, %"class.v8::internal::wasm::AsmType"** %1571, i64 -4
  %1589 = bitcast %"class.v8::internal::wasm::AsmType"** %1588 to i64*
  %1590 = load i64, i64* %1589, align 8
  %1591 = bitcast %"class.v8::internal::wasm::AsmType"** %1587 to i64*
  store i64 %1590, i64* %1591, align 8
  %1592 = getelementptr inbounds %"class.v8::internal::wasm::AsmType"*, %"class.v8::internal::wasm::AsmType"** %1570, i64 -5
  %1593 = getelementptr inbounds %"class.v8::internal::wasm::AsmType"*, %"class.v8::internal::wasm::AsmType"** %1571, i64 -5
  %1594 = bitcast %"class.v8::internal::wasm::AsmType"** %1593 to i64*
  %1595 = load i64, i64* %1594, align 8
  %1596 = bitcast %"class.v8::internal::wasm::AsmType"** %1592 to i64*
  store i64 %1595, i64* %1596, align 8
  %1597 = getelementptr inbounds %"class.v8::internal::wasm::AsmType"*, %"class.v8::internal::wasm::AsmType"** %1570, i64 -6
  %1598 = getelementptr inbounds %"class.v8::internal::wasm::AsmType"*, %"class.v8::internal::wasm::AsmType"** %1571, i64 -6
  %1599 = bitcast %"class.v8::internal::wasm::AsmType"** %1598 to i64*
  %1600 = load i64, i64* %1599, align 8
  %1601 = bitcast %"class.v8::internal::wasm::AsmType"** %1597 to i64*
  store i64 %1600, i64* %1601, align 8
  %1602 = getelementptr inbounds %"class.v8::internal::wasm::AsmType"*, %"class.v8::internal::wasm::AsmType"** %1570, i64 -7
  %1603 = getelementptr inbounds %"class.v8::internal::wasm::AsmType"*, %"class.v8::internal::wasm::AsmType"** %1571, i64 -7
  %1604 = bitcast %"class.v8::internal::wasm::AsmType"** %1603 to i64*
  %1605 = load i64, i64* %1604, align 8
  %1606 = bitcast %"class.v8::internal::wasm::AsmType"** %1602 to i64*
  store i64 %1605, i64* %1606, align 8
  %1607 = getelementptr inbounds %"class.v8::internal::wasm::AsmType"*, %"class.v8::internal::wasm::AsmType"** %1570, i64 -8
  %1608 = getelementptr inbounds %"class.v8::internal::wasm::AsmType"*, %"class.v8::internal::wasm::AsmType"** %1571, i64 -8
  %1609 = bitcast %"class.v8::internal::wasm::AsmType"** %1608 to i64*
  %1610 = load i64, i64* %1609, align 8
  %1611 = bitcast %"class.v8::internal::wasm::AsmType"** %1607 to i64*
  store i64 %1610, i64* %1611, align 8
  %1612 = icmp eq %"class.v8::internal::wasm::AsmType"** %1608, %1440
  br i1 %1612, label %1613, label %1569, !llvm.loop !52

1613:                                             ; preds = %1564, %1569, %1541, %1430
  %1614 = phi %"class.v8::internal::wasm::AsmType"** [ %1433, %1430 ], [ %1467, %1541 ], [ %1565, %1564 ], [ %1607, %1569 ]
  %1615 = ptrtoint %"class.v8::internal::wasm::AsmType"** %1614 to i64
  store i64 %1615, i64* %1394, align 8
  store i64 %1438, i64* %1393, align 8
  store i64 %1435, i64* %1403, align 8
  br label %1616

1616:                                             ; preds = %1386, %1613
  %1617 = load %"class.v8::internal::Zone"*, %"class.v8::internal::Zone"** %2, align 8
  %1618 = ptrtoint %"class.v8::internal::Zone"* %1617 to i64
  %1619 = getelementptr inbounds %"class.v8::internal::Zone", %"class.v8::internal::Zone"* %1617, i64 0, i32 2
  %1620 = load i64, i64* %1619, align 8
  %1621 = getelementptr inbounds %"class.v8::internal::Zone", %"class.v8::internal::Zone"* %1617, i64 0, i32 3
  %1622 = load i64, i64* %1621, align 8
  %1623 = sub i64 %1622, %1620
  %1624 = icmp ult i64 %1623, 48
  br i1 %1624, label %1625, label %1627, !prof !2

1625:                                             ; preds = %1616
  %1626 = tail call i64 @_ZN2v88internal4Zone9NewExpandEm(%"class.v8::internal::Zone"* %1617, i64 48) #12
  br label %1629

1627:                                             ; preds = %1616
  %1628 = add i64 %1620, 48
  store i64 %1628, i64* %1619, align 8
  br label %1629

1629:                                             ; preds = %1625, %1627
  %1630 = phi i64 [ %1626, %1625 ], [ %1620, %1627 ]
  %1631 = inttoptr i64 %1630 to %"class.v8::internal::wasm::AsmFunctionType"*
  %1632 = getelementptr inbounds %"class.v8::internal::wasm::AsmFunctionType", %"class.v8::internal::wasm::AsmFunctionType"* %1631, i64 0, i32 0, i32 0
  store i32 (...)** bitcast (i8** getelementptr inbounds ({ [9 x i8*] }, { [9 x i8*] }* @_ZTVN2v88internal4wasm15AsmFunctionTypeE, i64 0, inrange i32 0, i64 2) to i32 (...)**), i32 (...)*** %1632, align 8
  %1633 = getelementptr inbounds %"class.v8::internal::wasm::AsmFunctionType", %"class.v8::internal::wasm::AsmFunctionType"* %1631, i64 0, i32 1
  %1634 = bitcast %"class.v8::internal::wasm::AsmType"** %1633 to i64*
  store i64 1825, i64* %1634, align 8
  %1635 = getelementptr inbounds %"class.v8::internal::wasm::AsmFunctionType", %"class.v8::internal::wasm::AsmFunctionType"* %1631, i64 0, i32 2
  %1636 = getelementptr inbounds %"class.v8::internal::wasm::AsmFunctionType", %"class.v8::internal::wasm::AsmFunctionType"* %1631, i64 0, i32 2, i32 0, i32 0, i32 2, i32 1
  %1637 = bitcast %"struct.std::__1::__compressed_pair_elem.184"* %1636 to i64*
  %1638 = bitcast %"class.v8::internal::ZoneVector.179"* %1635 to i8*
  tail call void @llvm.memset.p0i8.i64(i8* align 8 %1638, i8 0, i64 24, i1 false) #12
  store i64 %1618, i64* %1637, align 8
  %1639 = inttoptr i64 %1630 to %"class.v8::internal::wasm::AsmType"*
  %1640 = getelementptr inbounds %"class.v8::internal::wasm::AsmJsParser", %"class.v8::internal::wasm::AsmJsParser"* %0, i64 0, i32 29
  store %"class.v8::internal::wasm::AsmType"* %1639, %"class.v8::internal::wasm::AsmType"** %1640, align 8
  %1641 = and i64 %1630, 1
  %1642 = icmp eq i64 %1641, 0
  br i1 %1642, label %1643, label %1650

1643:                                             ; preds = %1629
  %1644 = inttoptr i64 %1630 to %"class.v8::internal::wasm::AsmCallableType"*
  %1645 = inttoptr i64 %1630 to %"class.v8::internal::wasm::AsmFunctionType"* (%"class.v8::internal::wasm::AsmCallableType"*)***
  %1646 = load %"class.v8::internal::wasm::AsmFunctionType"* (%"class.v8::internal::wasm::AsmCallableType"*)**, %"class.v8::internal::wasm::AsmFunctionType"* (%"class.v8::internal::wasm::AsmCallableType"*)*** %1645, align 8
  %1647 = getelementptr inbounds %"class.v8::internal::wasm::AsmFunctionType"* (%"class.v8::internal::wasm::AsmCallableType"*)*, %"class.v8::internal::wasm::AsmFunctionType"* (%"class.v8::internal::wasm::AsmCallableType"*)** %1646, i64 2
  %1648 = load %"class.v8::internal::wasm::AsmFunctionType"* (%"class.v8::internal::wasm::AsmCallableType"*)*, %"class.v8::internal::wasm::AsmFunctionType"* (%"class.v8::internal::wasm::AsmCallableType"*)** %1647, align 8
  %1649 = tail call %"class.v8::internal::wasm::AsmFunctionType"* %1648(%"class.v8::internal::wasm::AsmCallableType"* %1644) #12
  br label %1650

1650:                                             ; preds = %1629, %1643
  %1651 = phi %"class.v8::internal::wasm::AsmFunctionType"* [ %1649, %1643 ], [ null, %1629 ]
  %1652 = getelementptr inbounds %"class.v8::internal::wasm::AsmFunctionType", %"class.v8::internal::wasm::AsmFunctionType"* %1651, i64 0, i32 2, i32 0
  %1653 = getelementptr inbounds %"class.v8::internal::wasm::AsmFunctionType", %"class.v8::internal::wasm::AsmFunctionType"* %1651, i64 0, i32 2, i32 0, i32 0, i32 1
  %1654 = load %"class.v8::internal::wasm::AsmType"**, %"class.v8::internal::wasm::AsmType"*** %1653, align 8
  %1655 = getelementptr inbounds %"class.v8::internal::wasm::AsmFunctionType", %"class.v8::internal::wasm::AsmFunctionType"* %1651, i64 0, i32 2, i32 0, i32 0, i32 2, i32 0, i32 0
  %1656 = load %"class.v8::internal::wasm::AsmType"**, %"class.v8::internal::wasm::AsmType"*** %1655, align 8
  %1657 = icmp eq %"class.v8::internal::wasm::AsmType"** %1654, %1656
  %1658 = ptrtoint %"class.v8::internal::wasm::AsmType"** %1656 to i64
  br i1 %1657, label %1664, label %1659

1659:                                             ; preds = %1650
  %1660 = bitcast %"class.v8::internal::wasm::AsmType"** %1654 to i64*
  store i64 769, i64* %1660, align 8
  %1661 = getelementptr inbounds %"class.v8::internal::wasm::AsmType"*, %"class.v8::internal::wasm::AsmType"** %1654, i64 1
  %1662 = ptrtoint %"class.v8::internal::wasm::AsmType"** %1661 to i64
  %1663 = bitcast %"class.v8::internal::wasm::AsmType"*** %1653 to i64*
  store i64 %1662, i64* %1663, align 8
  br label %1889

1664:                                             ; preds = %1650
  %1665 = ptrtoint %"class.v8::internal::wasm::AsmType"** %1654 to i64
  %1666 = bitcast %"class.v8::internal::wasm::AsmType"*** %1653 to i64*
  %1667 = bitcast %"class.std::__1::vector.180"* %1652 to i64*
  %1668 = load i64, i64* %1667, align 8
  %1669 = sub i64 %1665, %1668
  %1670 = ashr exact i64 %1669, 3
  %1671 = add nsw i64 %1670, 1
  %1672 = icmp ugt i64 %1671, 268435455
  br i1 %1672, label %1673, label %1675

1673:                                             ; preds = %1664
  %1674 = bitcast %"class.std::__1::vector.180"* %1652 to %"class.std::__1::__vector_base_common"*
  tail call void @_ZNKSt3__120__vector_base_commonILb1EE20__throw_length_errorEv(%"class.std::__1::__vector_base_common"* %1674) #13
  unreachable

1675:                                             ; preds = %1664
  %1676 = bitcast %"class.v8::internal::wasm::AsmType"*** %1655 to i64*
  %1677 = sub i64 %1658, %1668
  %1678 = ashr exact i64 %1677, 3
  %1679 = icmp ult i64 %1678, 134217727
  br i1 %1679, label %1680, label %1685

1680:                                             ; preds = %1675
  %1681 = ashr exact i64 %1677, 2
  %1682 = icmp ult i64 %1681, %1671
  %1683 = select i1 %1682, i64 %1671, i64 %1681
  %1684 = icmp eq i64 %1683, 0
  br i1 %1684, label %1703, label %1685

1685:                                             ; preds = %1680, %1675
  %1686 = phi i64 [ %1683, %1680 ], [ 268435455, %1675 ]
  %1687 = getelementptr inbounds %"class.v8::internal::wasm::AsmFunctionType", %"class.v8::internal::wasm::AsmFunctionType"* %1651, i64 0, i32 2, i32 0, i32 0, i32 2, i32 1, i32 0, i32 0
  %1688 = load %"class.v8::internal::Zone"*, %"class.v8::internal::Zone"** %1687, align 8
  %1689 = shl i64 %1686, 3
  %1690 = getelementptr inbounds %"class.v8::internal::Zone", %"class.v8::internal::Zone"* %1688, i64 0, i32 2
  %1691 = load i64, i64* %1690, align 8
  %1692 = getelementptr inbounds %"class.v8::internal::Zone", %"class.v8::internal::Zone"* %1688, i64 0, i32 3
  %1693 = load i64, i64* %1692, align 8
  %1694 = sub i64 %1693, %1691
  %1695 = icmp ugt i64 %1689, %1694
  br i1 %1695, label %1696, label %1698, !prof !2

1696:                                             ; preds = %1685
  %1697 = tail call i64 @_ZN2v88internal4Zone9NewExpandEm(%"class.v8::internal::Zone"* %1688, i64 %1689) #12
  br label %1700

1698:                                             ; preds = %1685
  %1699 = add i64 %1691, %1689
  store i64 %1699, i64* %1690, align 8
  br label %1700

1700:                                             ; preds = %1698, %1696
  %1701 = phi i64 [ %1697, %1696 ], [ %1691, %1698 ]
  %1702 = inttoptr i64 %1701 to %"class.v8::internal::wasm::AsmType"**
  br label %1703

1703:                                             ; preds = %1700, %1680
  %1704 = phi i64 [ %1686, %1700 ], [ 0, %1680 ]
  %1705 = phi %"class.v8::internal::wasm::AsmType"** [ %1702, %1700 ], [ null, %1680 ]
  %1706 = getelementptr inbounds %"class.v8::internal::wasm::AsmType"*, %"class.v8::internal::wasm::AsmType"** %1705, i64 %1670
  %1707 = getelementptr inbounds %"class.v8::internal::wasm::AsmType"*, %"class.v8::internal::wasm::AsmType"** %1705, i64 %1704
  %1708 = ptrtoint %"class.v8::internal::wasm::AsmType"** %1707 to i64
  %1709 = bitcast %"class.v8::internal::wasm::AsmType"** %1706 to i64*
  store i64 769, i64* %1709, align 8
  %1710 = getelementptr inbounds %"class.v8::internal::wasm::AsmType"*, %"class.v8::internal::wasm::AsmType"** %1706, i64 1
  %1711 = ptrtoint %"class.v8::internal::wasm::AsmType"** %1710 to i64
  %1712 = getelementptr inbounds %"class.std::__1::vector.180", %"class.std::__1::vector.180"* %1652, i64 0, i32 0, i32 0
  %1713 = load %"class.v8::internal::wasm::AsmType"**, %"class.v8::internal::wasm::AsmType"*** %1712, align 8
  %1714 = ptrtoint %"class.v8::internal::wasm::AsmType"** %1713 to i64
  %1715 = load %"class.v8::internal::wasm::AsmType"**, %"class.v8::internal::wasm::AsmType"*** %1653, align 8
  %1716 = icmp eq %"class.v8::internal::wasm::AsmType"** %1715, %1713
  br i1 %1716, label %1886, label %1717

1717:                                             ; preds = %1703
  %1718 = getelementptr %"class.v8::internal::wasm::AsmType"*, %"class.v8::internal::wasm::AsmType"** %1715, i64 -1
  %1719 = ptrtoint %"class.v8::internal::wasm::AsmType"** %1718 to i64
  %1720 = sub i64 %1719, %1714
  %1721 = lshr i64 %1720, 3
  %1722 = add nuw nsw i64 %1721, 1
  %1723 = icmp ult i64 %1722, 4
  br i1 %1723, label %1816, label %1724

1724:                                             ; preds = %1717
  %1725 = getelementptr %"class.v8::internal::wasm::AsmType"*, %"class.v8::internal::wasm::AsmType"** %1715, i64 -1
  %1726 = ptrtoint %"class.v8::internal::wasm::AsmType"** %1725 to i64
  %1727 = sub i64 %1726, %1714
  %1728 = lshr i64 %1727, 3
  %1729 = xor i64 %1728, -1
  %1730 = add nsw i64 %1670, %1729
  %1731 = getelementptr %"class.v8::internal::wasm::AsmType"*, %"class.v8::internal::wasm::AsmType"** %1705, i64 %1730
  %1732 = xor i64 %1728, -1
  %1733 = getelementptr %"class.v8::internal::wasm::AsmType"*, %"class.v8::internal::wasm::AsmType"** %1715, i64 %1732
  %1734 = icmp ult %"class.v8::internal::wasm::AsmType"** %1731, %1715
  %1735 = icmp ult %"class.v8::internal::wasm::AsmType"** %1733, %1706
  %1736 = and i1 %1734, %1735
  br i1 %1736, label %1816, label %1737

1737:                                             ; preds = %1724
  %1738 = and i64 %1722, 4611686018427387900
  %1739 = sub nsw i64 0, %1738
  %1740 = getelementptr %"class.v8::internal::wasm::AsmType"*, %"class.v8::internal::wasm::AsmType"** %1706, i64 %1739
  %1741 = sub nsw i64 0, %1738
  %1742 = getelementptr %"class.v8::internal::wasm::AsmType"*, %"class.v8::internal::wasm::AsmType"** %1715, i64 %1741
  %1743 = add nsw i64 %1738, -4
  %1744 = lshr exact i64 %1743, 2
  %1745 = add nuw nsw i64 %1744, 1
  %1746 = and i64 %1745, 1
  %1747 = icmp eq i64 %1743, 0
  br i1 %1747, label %1792, label %1748

1748:                                             ; preds = %1737
  %1749 = sub nuw nsw i64 %1745, %1746
  %1750 = getelementptr %"class.v8::internal::wasm::AsmType"*, %"class.v8::internal::wasm::AsmType"** %1706, i64 -1
  %1751 = getelementptr %"class.v8::internal::wasm::AsmType"*, %"class.v8::internal::wasm::AsmType"** %1715, i64 -1
  %1752 = getelementptr %"class.v8::internal::wasm::AsmType"*, %"class.v8::internal::wasm::AsmType"** %1706, i64 -1
  %1753 = getelementptr %"class.v8::internal::wasm::AsmType"*, %"class.v8::internal::wasm::AsmType"** %1715, i64 -1
  br label %1754

1754:                                             ; preds = %1754, %1748
  %1755 = phi i64 [ 0, %1748 ], [ %1789, %1754 ]
  %1756 = phi i64 [ %1749, %1748 ], [ %1790, %1754 ]
  %1757 = sub i64 0, %1755
  %1758 = sub i64 0, %1755
  %1759 = getelementptr inbounds %"class.v8::internal::wasm::AsmType"*, %"class.v8::internal::wasm::AsmType"** %1750, i64 %1757
  %1760 = getelementptr inbounds %"class.v8::internal::wasm::AsmType"*, %"class.v8::internal::wasm::AsmType"** %1751, i64 %1758
  %1761 = getelementptr inbounds %"class.v8::internal::wasm::AsmType"*, %"class.v8::internal::wasm::AsmType"** %1760, i64 -1
  %1762 = bitcast %"class.v8::internal::wasm::AsmType"** %1761 to <2 x i64>*
  %1763 = load <2 x i64>, <2 x i64>* %1762, align 8, !alias.scope !53
  %1764 = getelementptr inbounds %"class.v8::internal::wasm::AsmType"*, %"class.v8::internal::wasm::AsmType"** %1760, i64 -2
  %1765 = getelementptr inbounds %"class.v8::internal::wasm::AsmType"*, %"class.v8::internal::wasm::AsmType"** %1764, i64 -1
  %1766 = bitcast %"class.v8::internal::wasm::AsmType"** %1765 to <2 x i64>*
  %1767 = load <2 x i64>, <2 x i64>* %1766, align 8, !alias.scope !53
  %1768 = getelementptr inbounds %"class.v8::internal::wasm::AsmType"*, %"class.v8::internal::wasm::AsmType"** %1759, i64 -1
  %1769 = bitcast %"class.v8::internal::wasm::AsmType"** %1768 to <2 x i64>*
  store <2 x i64> %1763, <2 x i64>* %1769, align 8, !alias.scope !56, !noalias !53
  %1770 = getelementptr inbounds %"class.v8::internal::wasm::AsmType"*, %"class.v8::internal::wasm::AsmType"** %1759, i64 -2
  %1771 = getelementptr inbounds %"class.v8::internal::wasm::AsmType"*, %"class.v8::internal::wasm::AsmType"** %1770, i64 -1
  %1772 = bitcast %"class.v8::internal::wasm::AsmType"** %1771 to <2 x i64>*
  store <2 x i64> %1767, <2 x i64>* %1772, align 8, !alias.scope !56, !noalias !53
  %1773 = sub nuw nsw i64 -4, %1755
  %1774 = sub nuw nsw i64 -4, %1755
  %1775 = getelementptr inbounds %"class.v8::internal::wasm::AsmType"*, %"class.v8::internal::wasm::AsmType"** %1752, i64 %1773
  %1776 = getelementptr inbounds %"class.v8::internal::wasm::AsmType"*, %"class.v8::internal::wasm::AsmType"** %1753, i64 %1774
  %1777 = getelementptr inbounds %"class.v8::internal::wasm::AsmType"*, %"class.v8::internal::wasm::AsmType"** %1776, i64 -1
  %1778 = bitcast %"class.v8::internal::wasm::AsmType"** %1777 to <2 x i64>*
  %1779 = load <2 x i64>, <2 x i64>* %1778, align 8, !alias.scope !53
  %1780 = getelementptr inbounds %"class.v8::internal::wasm::AsmType"*, %"class.v8::internal::wasm::AsmType"** %1776, i64 -2
  %1781 = getelementptr inbounds %"class.v8::internal::wasm::AsmType"*, %"class.v8::internal::wasm::AsmType"** %1780, i64 -1
  %1782 = bitcast %"class.v8::internal::wasm::AsmType"** %1781 to <2 x i64>*
  %1783 = load <2 x i64>, <2 x i64>* %1782, align 8, !alias.scope !53
  %1784 = getelementptr inbounds %"class.v8::internal::wasm::AsmType"*, %"class.v8::internal::wasm::AsmType"** %1775, i64 -1
  %1785 = bitcast %"class.v8::internal::wasm::AsmType"** %1784 to <2 x i64>*
  store <2 x i64> %1779, <2 x i64>* %1785, align 8, !alias.scope !56, !noalias !53
  %1786 = getelementptr inbounds %"class.v8::internal::wasm::AsmType"*, %"class.v8::internal::wasm::AsmType"** %1775, i64 -2
  %1787 = getelementptr inbounds %"class.v8::internal::wasm::AsmType"*, %"class.v8::internal::wasm::AsmType"** %1786, i64 -1
  %1788 = bitcast %"class.v8::internal::wasm::AsmType"** %1787 to <2 x i64>*
  store <2 x i64> %1783, <2 x i64>* %1788, align 8, !alias.scope !56, !noalias !53
  %1789 = add i64 %1755, 8
  %1790 = add i64 %1756, -2
  %1791 = icmp eq i64 %1790, 0
  br i1 %1791, label %1792, label %1754, !llvm.loop !58

1792:                                             ; preds = %1754, %1737
  %1793 = phi i64 [ 0, %1737 ], [ %1789, %1754 ]
  %1794 = icmp eq i64 %1746, 0
  br i1 %1794, label %1814, label %1795

1795:                                             ; preds = %1792
  %1796 = sub i64 0, %1793
  %1797 = getelementptr %"class.v8::internal::wasm::AsmType"*, %"class.v8::internal::wasm::AsmType"** %1706, i64 -1
  %1798 = sub i64 0, %1793
  %1799 = getelementptr %"class.v8::internal::wasm::AsmType"*, %"class.v8::internal::wasm::AsmType"** %1715, i64 -1
  %1800 = getelementptr inbounds %"class.v8::internal::wasm::AsmType"*, %"class.v8::internal::wasm::AsmType"** %1797, i64 %1796
  %1801 = getelementptr inbounds %"class.v8::internal::wasm::AsmType"*, %"class.v8::internal::wasm::AsmType"** %1799, i64 %1798
  %1802 = getelementptr inbounds %"class.v8::internal::wasm::AsmType"*, %"class.v8::internal::wasm::AsmType"** %1801, i64 -1
  %1803 = bitcast %"class.v8::internal::wasm::AsmType"** %1802 to <2 x i64>*
  %1804 = load <2 x i64>, <2 x i64>* %1803, align 8, !alias.scope !53
  %1805 = getelementptr inbounds %"class.v8::internal::wasm::AsmType"*, %"class.v8::internal::wasm::AsmType"** %1801, i64 -2
  %1806 = getelementptr inbounds %"class.v8::internal::wasm::AsmType"*, %"class.v8::internal::wasm::AsmType"** %1805, i64 -1
  %1807 = bitcast %"class.v8::internal::wasm::AsmType"** %1806 to <2 x i64>*
  %1808 = load <2 x i64>, <2 x i64>* %1807, align 8, !alias.scope !53
  %1809 = getelementptr inbounds %"class.v8::internal::wasm::AsmType"*, %"class.v8::internal::wasm::AsmType"** %1800, i64 -1
  %1810 = bitcast %"class.v8::internal::wasm::AsmType"** %1809 to <2 x i64>*
  store <2 x i64> %1804, <2 x i64>* %1810, align 8, !alias.scope !56, !noalias !53
  %1811 = getelementptr inbounds %"class.v8::internal::wasm::AsmType"*, %"class.v8::internal::wasm::AsmType"** %1800, i64 -2
  %1812 = getelementptr inbounds %"class.v8::internal::wasm::AsmType"*, %"class.v8::internal::wasm::AsmType"** %1811, i64 -1
  %1813 = bitcast %"class.v8::internal::wasm::AsmType"** %1812 to <2 x i64>*
  store <2 x i64> %1808, <2 x i64>* %1813, align 8, !alias.scope !56, !noalias !53
  br label %1814

1814:                                             ; preds = %1792, %1795
  %1815 = icmp eq i64 %1722, %1738
  br i1 %1815, label %1886, label %1816

1816:                                             ; preds = %1814, %1724, %1717
  %1817 = phi %"class.v8::internal::wasm::AsmType"** [ %1706, %1724 ], [ %1706, %1717 ], [ %1740, %1814 ]
  %1818 = phi %"class.v8::internal::wasm::AsmType"** [ %1715, %1724 ], [ %1715, %1717 ], [ %1742, %1814 ]
  %1819 = getelementptr %"class.v8::internal::wasm::AsmType"*, %"class.v8::internal::wasm::AsmType"** %1818, i64 -1
  %1820 = ptrtoint %"class.v8::internal::wasm::AsmType"** %1819 to i64
  %1821 = sub i64 %1820, %1714
  %1822 = lshr i64 %1821, 3
  %1823 = add nuw nsw i64 %1822, 1
  %1824 = and i64 %1823, 7
  %1825 = icmp eq i64 %1824, 0
  br i1 %1825, label %1837, label %1826

1826:                                             ; preds = %1816, %1826
  %1827 = phi %"class.v8::internal::wasm::AsmType"** [ %1830, %1826 ], [ %1817, %1816 ]
  %1828 = phi %"class.v8::internal::wasm::AsmType"** [ %1831, %1826 ], [ %1818, %1816 ]
  %1829 = phi i64 [ %1835, %1826 ], [ %1824, %1816 ]
  %1830 = getelementptr inbounds %"class.v8::internal::wasm::AsmType"*, %"class.v8::internal::wasm::AsmType"** %1827, i64 -1
  %1831 = getelementptr inbounds %"class.v8::internal::wasm::AsmType"*, %"class.v8::internal::wasm::AsmType"** %1828, i64 -1
  %1832 = bitcast %"class.v8::internal::wasm::AsmType"** %1831 to i64*
  %1833 = load i64, i64* %1832, align 8
  %1834 = bitcast %"class.v8::internal::wasm::AsmType"** %1830 to i64*
  store i64 %1833, i64* %1834, align 8
  %1835 = add i64 %1829, -1
  %1836 = icmp eq i64 %1835, 0
  br i1 %1836, label %1837, label %1826, !llvm.loop !59

1837:                                             ; preds = %1826, %1816
  %1838 = phi %"class.v8::internal::wasm::AsmType"** [ undef, %1816 ], [ %1830, %1826 ]
  %1839 = phi %"class.v8::internal::wasm::AsmType"** [ %1817, %1816 ], [ %1830, %1826 ]
  %1840 = phi %"class.v8::internal::wasm::AsmType"** [ %1818, %1816 ], [ %1831, %1826 ]
  %1841 = icmp ult i64 %1821, 56
  br i1 %1841, label %1886, label %1842

1842:                                             ; preds = %1837, %1842
  %1843 = phi %"class.v8::internal::wasm::AsmType"** [ %1880, %1842 ], [ %1839, %1837 ]
  %1844 = phi %"class.v8::internal::wasm::AsmType"** [ %1881, %1842 ], [ %1840, %1837 ]
  %1845 = getelementptr inbounds %"class.v8::internal::wasm::AsmType"*, %"class.v8::internal::wasm::AsmType"** %1843, i64 -1
  %1846 = getelementptr inbounds %"class.v8::internal::wasm::AsmType"*, %"class.v8::internal::wasm::AsmType"** %1844, i64 -1
  %1847 = bitcast %"class.v8::internal::wasm::AsmType"** %1846 to i64*
  %1848 = load i64, i64* %1847, align 8
  %1849 = bitcast %"class.v8::internal::wasm::AsmType"** %1845 to i64*
  store i64 %1848, i64* %1849, align 8
  %1850 = getelementptr inbounds %"class.v8::internal::wasm::AsmType"*, %"class.v8::internal::wasm::AsmType"** %1843, i64 -2
  %1851 = getelementptr inbounds %"class.v8::internal::wasm::AsmType"*, %"class.v8::internal::wasm::AsmType"** %1844, i64 -2
  %1852 = bitcast %"class.v8::internal::wasm::AsmType"** %1851 to i64*
  %1853 = load i64, i64* %1852, align 8
  %1854 = bitcast %"class.v8::internal::wasm::AsmType"** %1850 to i64*
  store i64 %1853, i64* %1854, align 8
  %1855 = getelementptr inbounds %"class.v8::internal::wasm::AsmType"*, %"class.v8::internal::wasm::AsmType"** %1843, i64 -3
  %1856 = getelementptr inbounds %"class.v8::internal::wasm::AsmType"*, %"class.v8::internal::wasm::AsmType"** %1844, i64 -3
  %1857 = bitcast %"class.v8::internal::wasm::AsmType"** %1856 to i64*
  %1858 = load i64, i64* %1857, align 8
  %1859 = bitcast %"class.v8::internal::wasm::AsmType"** %1855 to i64*
  store i64 %1858, i64* %1859, align 8
  %1860 = getelementptr inbounds %"class.v8::internal::wasm::AsmType"*, %"class.v8::internal::wasm::AsmType"** %1843, i64 -4
  %1861 = getelementptr inbounds %"class.v8::internal::wasm::AsmType"*, %"class.v8::internal::wasm::AsmType"** %1844, i64 -4
  %1862 = bitcast %"class.v8::internal::wasm::AsmType"** %1861 to i64*
  %1863 = load i64, i64* %1862, align 8
  %1864 = bitcast %"class.v8::internal::wasm::AsmType"** %1860 to i64*
  store i64 %1863, i64* %1864, align 8
  %1865 = getelementptr inbounds %"class.v8::internal::wasm::AsmType"*, %"class.v8::internal::wasm::AsmType"** %1843, i64 -5
  %1866 = getelementptr inbounds %"class.v8::internal::wasm::AsmType"*, %"class.v8::internal::wasm::AsmType"** %1844, i64 -5
  %1867 = bitcast %"class.v8::internal::wasm::AsmType"** %1866 to i64*
  %1868 = load i64, i64* %1867, align 8
  %1869 = bitcast %"class.v8::internal::wasm::AsmType"** %1865 to i64*
  store i64 %1868, i64* %1869, align 8
  %1870 = getelementptr inbounds %"class.v8::internal::wasm::AsmType"*, %"class.v8::internal::wasm::AsmType"** %1843, i64 -6
  %1871 = getelementptr inbounds %"class.v8::internal::wasm::AsmType"*, %"class.v8::internal::wasm::AsmType"** %1844, i64 -6
  %1872 = bitcast %"class.v8::internal::wasm::AsmType"** %1871 to i64*
  %1873 = load i64, i64* %1872, align 8
  %1874 = bitcast %"class.v8::internal::wasm::AsmType"** %1870 to i64*
  store i64 %1873, i64* %1874, align 8
  %1875 = getelementptr inbounds %"class.v8::internal::wasm::AsmType"*, %"class.v8::internal::wasm::AsmType"** %1843, i64 -7
  %1876 = getelementptr inbounds %"class.v8::internal::wasm::AsmType"*, %"class.v8::internal::wasm::AsmType"** %1844, i64 -7
  %1877 = bitcast %"class.v8::internal::wasm::AsmType"** %1876 to i64*
  %1878 = load i64, i64* %1877, align 8
  %1879 = bitcast %"class.v8::internal::wasm::AsmType"** %1875 to i64*
  store i64 %1878, i64* %1879, align 8
  %1880 = getelementptr inbounds %"class.v8::internal::wasm::AsmType"*, %"class.v8::internal::wasm::AsmType"** %1843, i64 -8
  %1881 = getelementptr inbounds %"class.v8::internal::wasm::AsmType"*, %"class.v8::internal::wasm::AsmType"** %1844, i64 -8
  %1882 = bitcast %"class.v8::internal::wasm::AsmType"** %1881 to i64*
  %1883 = load i64, i64* %1882, align 8
  %1884 = bitcast %"class.v8::internal::wasm::AsmType"** %1880 to i64*
  store i64 %1883, i64* %1884, align 8
  %1885 = icmp eq %"class.v8::internal::wasm::AsmType"** %1881, %1713
  br i1 %1885, label %1886, label %1842, !llvm.loop !60

1886:                                             ; preds = %1837, %1842, %1814, %1703
  %1887 = phi %"class.v8::internal::wasm::AsmType"** [ %1706, %1703 ], [ %1740, %1814 ], [ %1838, %1837 ], [ %1880, %1842 ]
  %1888 = ptrtoint %"class.v8::internal::wasm::AsmType"** %1887 to i64
  store i64 %1888, i64* %1667, align 8
  store i64 %1711, i64* %1666, align 8
  store i64 %1708, i64* %1676, align 8
  br label %1889

1889:                                             ; preds = %1659, %1886
  %1890 = load %"class.v8::internal::wasm::AsmType"*, %"class.v8::internal::wasm::AsmType"** %1640, align 8
  %1891 = ptrtoint %"class.v8::internal::wasm::AsmType"* %1890 to i64
  %1892 = and i64 %1891, 1
  %1893 = icmp eq i64 %1892, 0
  br i1 %1893, label %1894, label %1901

1894:                                             ; preds = %1889
  %1895 = bitcast %"class.v8::internal::wasm::AsmType"* %1890 to %"class.v8::internal::wasm::AsmCallableType"*
  %1896 = bitcast %"class.v8::internal::wasm::AsmType"* %1890 to %"class.v8::internal::wasm::AsmFunctionType"* (%"class.v8::internal::wasm::AsmCallableType"*)***
  %1897 = load %"class.v8::internal::wasm::AsmFunctionType"* (%"class.v8::internal::wasm::AsmCallableType"*)**, %"class.v8::internal::wasm::AsmFunctionType"* (%"class.v8::internal::wasm::AsmCallableType"*)*** %1896, align 8
  %1898 = getelementptr inbounds %"class.v8::internal::wasm::AsmFunctionType"* (%"class.v8::internal::wasm::AsmCallableType"*)*, %"class.v8::internal::wasm::AsmFunctionType"* (%"class.v8::internal::wasm::AsmCallableType"*)** %1897, i64 2
  %1899 = load %"class.v8::internal::wasm::AsmFunctionType"* (%"class.v8::internal::wasm::AsmCallableType"*)*, %"class.v8::internal::wasm::AsmFunctionType"* (%"class.v8::internal::wasm::AsmCallableType"*)** %1898, align 8
  %1900 = tail call %"class.v8::internal::wasm::AsmFunctionType"* %1899(%"class.v8::internal::wasm::AsmCallableType"* %1895) #12
  br label %1901

1901:                                             ; preds = %1889, %1894
  %1902 = phi %"class.v8::internal::wasm::AsmFunctionType"* [ %1900, %1894 ], [ null, %1889 ]
  %1903 = getelementptr inbounds %"class.v8::internal::wasm::AsmFunctionType", %"class.v8::internal::wasm::AsmFunctionType"* %1902, i64 0, i32 2, i32 0
  %1904 = getelementptr inbounds %"class.v8::internal::wasm::AsmFunctionType", %"class.v8::internal::wasm::AsmFunctionType"* %1902, i64 0, i32 2, i32 0, i32 0, i32 1
  %1905 = load %"class.v8::internal::wasm::AsmType"**, %"class.v8::internal::wasm::AsmType"*** %1904, align 8
  %1906 = getelementptr inbounds %"class.v8::internal::wasm::AsmFunctionType", %"class.v8::internal::wasm::AsmFunctionType"* %1902, i64 0, i32 2, i32 0, i32 0, i32 2, i32 0, i32 0
  %1907 = load %"class.v8::internal::wasm::AsmType"**, %"class.v8::internal::wasm::AsmType"*** %1906, align 8
  %1908 = icmp eq %"class.v8::internal::wasm::AsmType"** %1905, %1907
  %1909 = ptrtoint %"class.v8::internal::wasm::AsmType"** %1907 to i64
  br i1 %1908, label %1915, label %1910

1910:                                             ; preds = %1901
  %1911 = bitcast %"class.v8::internal::wasm::AsmType"** %1905 to i64*
  store i64 769, i64* %1911, align 8
  %1912 = getelementptr inbounds %"class.v8::internal::wasm::AsmType"*, %"class.v8::internal::wasm::AsmType"** %1905, i64 1
  %1913 = ptrtoint %"class.v8::internal::wasm::AsmType"** %1912 to i64
  %1914 = bitcast %"class.v8::internal::wasm::AsmType"*** %1904 to i64*
  store i64 %1913, i64* %1914, align 8
  br label %2140

1915:                                             ; preds = %1901
  %1916 = ptrtoint %"class.v8::internal::wasm::AsmType"** %1905 to i64
  %1917 = bitcast %"class.v8::internal::wasm::AsmType"*** %1904 to i64*
  %1918 = bitcast %"class.std::__1::vector.180"* %1903 to i64*
  %1919 = load i64, i64* %1918, align 8
  %1920 = sub i64 %1916, %1919
  %1921 = ashr exact i64 %1920, 3
  %1922 = add nsw i64 %1921, 1
  %1923 = icmp ugt i64 %1922, 268435455
  br i1 %1923, label %1924, label %1926

1924:                                             ; preds = %1915
  %1925 = bitcast %"class.std::__1::vector.180"* %1903 to %"class.std::__1::__vector_base_common"*
  tail call void @_ZNKSt3__120__vector_base_commonILb1EE20__throw_length_errorEv(%"class.std::__1::__vector_base_common"* %1925) #13
  unreachable

1926:                                             ; preds = %1915
  %1927 = bitcast %"class.v8::internal::wasm::AsmType"*** %1906 to i64*
  %1928 = sub i64 %1909, %1919
  %1929 = ashr exact i64 %1928, 3
  %1930 = icmp ult i64 %1929, 134217727
  br i1 %1930, label %1931, label %1936

1931:                                             ; preds = %1926
  %1932 = ashr exact i64 %1928, 2
  %1933 = icmp ult i64 %1932, %1922
  %1934 = select i1 %1933, i64 %1922, i64 %1932
  %1935 = icmp eq i64 %1934, 0
  br i1 %1935, label %1954, label %1936

1936:                                             ; preds = %1931, %1926
  %1937 = phi i64 [ %1934, %1931 ], [ 268435455, %1926 ]
  %1938 = getelementptr inbounds %"class.v8::internal::wasm::AsmFunctionType", %"class.v8::internal::wasm::AsmFunctionType"* %1902, i64 0, i32 2, i32 0, i32 0, i32 2, i32 1, i32 0, i32 0
  %1939 = load %"class.v8::internal::Zone"*, %"class.v8::internal::Zone"** %1938, align 8
  %1940 = shl i64 %1937, 3
  %1941 = getelementptr inbounds %"class.v8::internal::Zone", %"class.v8::internal::Zone"* %1939, i64 0, i32 2
  %1942 = load i64, i64* %1941, align 8
  %1943 = getelementptr inbounds %"class.v8::internal::Zone", %"class.v8::internal::Zone"* %1939, i64 0, i32 3
  %1944 = load i64, i64* %1943, align 8
  %1945 = sub i64 %1944, %1942
  %1946 = icmp ugt i64 %1940, %1945
  br i1 %1946, label %1947, label %1949, !prof !2

1947:                                             ; preds = %1936
  %1948 = tail call i64 @_ZN2v88internal4Zone9NewExpandEm(%"class.v8::internal::Zone"* %1939, i64 %1940) #12
  br label %1951

1949:                                             ; preds = %1936
  %1950 = add i64 %1942, %1940
  store i64 %1950, i64* %1941, align 8
  br label %1951

1951:                                             ; preds = %1949, %1947
  %1952 = phi i64 [ %1948, %1947 ], [ %1942, %1949 ]
  %1953 = inttoptr i64 %1952 to %"class.v8::internal::wasm::AsmType"**
  br label %1954

1954:                                             ; preds = %1951, %1931
  %1955 = phi i64 [ %1937, %1951 ], [ 0, %1931 ]
  %1956 = phi %"class.v8::internal::wasm::AsmType"** [ %1953, %1951 ], [ null, %1931 ]
  %1957 = getelementptr inbounds %"class.v8::internal::wasm::AsmType"*, %"class.v8::internal::wasm::AsmType"** %1956, i64 %1921
  %1958 = getelementptr inbounds %"class.v8::internal::wasm::AsmType"*, %"class.v8::internal::wasm::AsmType"** %1956, i64 %1955
  %1959 = ptrtoint %"class.v8::internal::wasm::AsmType"** %1958 to i64
  %1960 = bitcast %"class.v8::internal::wasm::AsmType"** %1957 to i64*
  store i64 769, i64* %1960, align 8
  %1961 = getelementptr inbounds %"class.v8::internal::wasm::AsmType"*, %"class.v8::internal::wasm::AsmType"** %1957, i64 1
  %1962 = ptrtoint %"class.v8::internal::wasm::AsmType"** %1961 to i64
  %1963 = getelementptr inbounds %"class.std::__1::vector.180", %"class.std::__1::vector.180"* %1903, i64 0, i32 0, i32 0
  %1964 = load %"class.v8::internal::wasm::AsmType"**, %"class.v8::internal::wasm::AsmType"*** %1963, align 8
  %1965 = ptrtoint %"class.v8::internal::wasm::AsmType"** %1964 to i64
  %1966 = load %"class.v8::internal::wasm::AsmType"**, %"class.v8::internal::wasm::AsmType"*** %1904, align 8
  %1967 = icmp eq %"class.v8::internal::wasm::AsmType"** %1966, %1964
  br i1 %1967, label %2137, label %1968

1968:                                             ; preds = %1954
  %1969 = getelementptr %"class.v8::internal::wasm::AsmType"*, %"class.v8::internal::wasm::AsmType"** %1966, i64 -1
  %1970 = ptrtoint %"class.v8::internal::wasm::AsmType"** %1969 to i64
  %1971 = sub i64 %1970, %1965
  %1972 = lshr i64 %1971, 3
  %1973 = add nuw nsw i64 %1972, 1
  %1974 = icmp ult i64 %1973, 4
  br i1 %1974, label %2067, label %1975

1975:                                             ; preds = %1968
  %1976 = getelementptr %"class.v8::internal::wasm::AsmType"*, %"class.v8::internal::wasm::AsmType"** %1966, i64 -1
  %1977 = ptrtoint %"class.v8::internal::wasm::AsmType"** %1976 to i64
  %1978 = sub i64 %1977, %1965
  %1979 = lshr i64 %1978, 3
  %1980 = xor i64 %1979, -1
  %1981 = add nsw i64 %1921, %1980
  %1982 = getelementptr %"class.v8::internal::wasm::AsmType"*, %"class.v8::internal::wasm::AsmType"** %1956, i64 %1981
  %1983 = xor i64 %1979, -1
  %1984 = getelementptr %"class.v8::internal::wasm::AsmType"*, %"class.v8::internal::wasm::AsmType"** %1966, i64 %1983
  %1985 = icmp ult %"class.v8::internal::wasm::AsmType"** %1982, %1966
  %1986 = icmp ult %"class.v8::internal::wasm::AsmType"** %1984, %1957
  %1987 = and i1 %1985, %1986
  br i1 %1987, label %2067, label %1988

1988:                                             ; preds = %1975
  %1989 = and i64 %1973, 4611686018427387900
  %1990 = sub nsw i64 0, %1989
  %1991 = getelementptr %"class.v8::internal::wasm::AsmType"*, %"class.v8::internal::wasm::AsmType"** %1957, i64 %1990
  %1992 = sub nsw i64 0, %1989
  %1993 = getelementptr %"class.v8::internal::wasm::AsmType"*, %"class.v8::internal::wasm::AsmType"** %1966, i64 %1992
  %1994 = add nsw i64 %1989, -4
  %1995 = lshr exact i64 %1994, 2
  %1996 = add nuw nsw i64 %1995, 1
  %1997 = and i64 %1996, 1
  %1998 = icmp eq i64 %1994, 0
  br i1 %1998, label %2043, label %1999

1999:                                             ; preds = %1988
  %2000 = sub nuw nsw i64 %1996, %1997
  %2001 = getelementptr %"class.v8::internal::wasm::AsmType"*, %"class.v8::internal::wasm::AsmType"** %1957, i64 -1
  %2002 = getelementptr %"class.v8::internal::wasm::AsmType"*, %"class.v8::internal::wasm::AsmType"** %1966, i64 -1
  %2003 = getelementptr %"class.v8::internal::wasm::AsmType"*, %"class.v8::internal::wasm::AsmType"** %1957, i64 -1
  %2004 = getelementptr %"class.v8::internal::wasm::AsmType"*, %"class.v8::internal::wasm::AsmType"** %1966, i64 -1
  br label %2005

2005:                                             ; preds = %2005, %1999
  %2006 = phi i64 [ 0, %1999 ], [ %2040, %2005 ]
  %2007 = phi i64 [ %2000, %1999 ], [ %2041, %2005 ]
  %2008 = sub i64 0, %2006
  %2009 = sub i64 0, %2006
  %2010 = getelementptr inbounds %"class.v8::internal::wasm::AsmType"*, %"class.v8::internal::wasm::AsmType"** %2001, i64 %2008
  %2011 = getelementptr inbounds %"class.v8::internal::wasm::AsmType"*, %"class.v8::internal::wasm::AsmType"** %2002, i64 %2009
  %2012 = getelementptr inbounds %"class.v8::internal::wasm::AsmType"*, %"class.v8::internal::wasm::AsmType"** %2011, i64 -1
  %2013 = bitcast %"class.v8::internal::wasm::AsmType"** %2012 to <2 x i64>*
  %2014 = load <2 x i64>, <2 x i64>* %2013, align 8, !alias.scope !61
  %2015 = getelementptr inbounds %"class.v8::internal::wasm::AsmType"*, %"class.v8::internal::wasm::AsmType"** %2011, i64 -2
  %2016 = getelementptr inbounds %"class.v8::internal::wasm::AsmType"*, %"class.v8::internal::wasm::AsmType"** %2015, i64 -1
  %2017 = bitcast %"class.v8::internal::wasm::AsmType"** %2016 to <2 x i64>*
  %2018 = load <2 x i64>, <2 x i64>* %2017, align 8, !alias.scope !61
  %2019 = getelementptr inbounds %"class.v8::internal::wasm::AsmType"*, %"class.v8::internal::wasm::AsmType"** %2010, i64 -1
  %2020 = bitcast %"class.v8::internal::wasm::AsmType"** %2019 to <2 x i64>*
  store <2 x i64> %2014, <2 x i64>* %2020, align 8, !alias.scope !64, !noalias !61
  %2021 = getelementptr inbounds %"class.v8::internal::wasm::AsmType"*, %"class.v8::internal::wasm::AsmType"** %2010, i64 -2
  %2022 = getelementptr inbounds %"class.v8::internal::wasm::AsmType"*, %"class.v8::internal::wasm::AsmType"** %2021, i64 -1
  %2023 = bitcast %"class.v8::internal::wasm::AsmType"** %2022 to <2 x i64>*
  store <2 x i64> %2018, <2 x i64>* %2023, align 8, !alias.scope !64, !noalias !61
  %2024 = sub nuw nsw i64 -4, %2006
  %2025 = sub nuw nsw i64 -4, %2006
  %2026 = getelementptr inbounds %"class.v8::internal::wasm::AsmType"*, %"class.v8::internal::wasm::AsmType"** %2003, i64 %2024
  %2027 = getelementptr inbounds %"class.v8::internal::wasm::AsmType"*, %"class.v8::internal::wasm::AsmType"** %2004, i64 %2025
  %2028 = getelementptr inbounds %"class.v8::internal::wasm::AsmType"*, %"class.v8::internal::wasm::AsmType"** %2027, i64 -1
  %2029 = bitcast %"class.v8::internal::wasm::AsmType"** %2028 to <2 x i64>*
  %2030 = load <2 x i64>, <2 x i64>* %2029, align 8, !alias.scope !61
  %2031 = getelementptr inbounds %"class.v8::internal::wasm::AsmType"*, %"class.v8::internal::wasm::AsmType"** %2027, i64 -2
  %2032 = getelementptr inbounds %"class.v8::internal::wasm::AsmType"*, %"class.v8::internal::wasm::AsmType"** %2031, i64 -1
  %2033 = bitcast %"class.v8::internal::wasm::AsmType"** %2032 to <2 x i64>*
  %2034 = load <2 x i64>, <2 x i64>* %2033, align 8, !alias.scope !61
  %2035 = getelementptr inbounds %"class.v8::internal::wasm::AsmType"*, %"class.v8::internal::wasm::AsmType"** %2026, i64 -1
  %2036 = bitcast %"class.v8::internal::wasm::AsmType"** %2035 to <2 x i64>*
  store <2 x i64> %2030, <2 x i64>* %2036, align 8, !alias.scope !64, !noalias !61
  %2037 = getelementptr inbounds %"class.v8::internal::wasm::AsmType"*, %"class.v8::internal::wasm::AsmType"** %2026, i64 -2
  %2038 = getelementptr inbounds %"class.v8::internal::wasm::AsmType"*, %"class.v8::internal::wasm::AsmType"** %2037, i64 -1
  %2039 = bitcast %"class.v8::internal::wasm::AsmType"** %2038 to <2 x i64>*
  store <2 x i64> %2034, <2 x i64>* %2039, align 8, !alias.scope !64, !noalias !61
  %2040 = add i64 %2006, 8
  %2041 = add i64 %2007, -2
  %2042 = icmp eq i64 %2041, 0
  br i1 %2042, label %2043, label %2005, !llvm.loop !66

2043:                                             ; preds = %2005, %1988
  %2044 = phi i64 [ 0, %1988 ], [ %2040, %2005 ]
  %2045 = icmp eq i64 %1997, 0
  br i1 %2045, label %2065, label %2046

2046:                                             ; preds = %2043
  %2047 = sub i64 0, %2044
  %2048 = getelementptr %"class.v8::internal::wasm::AsmType"*, %"class.v8::internal::wasm::AsmType"** %1957, i64 -1
  %2049 = sub i64 0, %2044
  %2050 = getelementptr %"class.v8::internal::wasm::AsmType"*, %"class.v8::internal::wasm::AsmType"** %1966, i64 -1
  %2051 = getelementptr inbounds %"class.v8::internal::wasm::AsmType"*, %"class.v8::internal::wasm::AsmType"** %2048, i64 %2047
  %2052 = getelementptr inbounds %"class.v8::internal::wasm::AsmType"*, %"class.v8::internal::wasm::AsmType"** %2050, i64 %2049
  %2053 = getelementptr inbounds %"class.v8::internal::wasm::AsmType"*, %"class.v8::internal::wasm::AsmType"** %2052, i64 -1
  %2054 = bitcast %"class.v8::internal::wasm::AsmType"** %2053 to <2 x i64>*
  %2055 = load <2 x i64>, <2 x i64>* %2054, align 8, !alias.scope !61
  %2056 = getelementptr inbounds %"class.v8::internal::wasm::AsmType"*, %"class.v8::internal::wasm::AsmType"** %2052, i64 -2
  %2057 = getelementptr inbounds %"class.v8::internal::wasm::AsmType"*, %"class.v8::internal::wasm::AsmType"** %2056, i64 -1
  %2058 = bitcast %"class.v8::internal::wasm::AsmType"** %2057 to <2 x i64>*
  %2059 = load <2 x i64>, <2 x i64>* %2058, align 8, !alias.scope !61
  %2060 = getelementptr inbounds %"class.v8::internal::wasm::AsmType"*, %"class.v8::internal::wasm::AsmType"** %2051, i64 -1
  %2061 = bitcast %"class.v8::internal::wasm::AsmType"** %2060 to <2 x i64>*
  store <2 x i64> %2055, <2 x i64>* %2061, align 8, !alias.scope !64, !noalias !61
  %2062 = getelementptr inbounds %"class.v8::internal::wasm::AsmType"*, %"class.v8::internal::wasm::AsmType"** %2051, i64 -2
  %2063 = getelementptr inbounds %"class.v8::internal::wasm::AsmType"*, %"class.v8::internal::wasm::AsmType"** %2062, i64 -1
  %2064 = bitcast %"class.v8::internal::wasm::AsmType"** %2063 to <2 x i64>*
  store <2 x i64> %2059, <2 x i64>* %2064, align 8, !alias.scope !64, !noalias !61
  br label %2065

2065:                                             ; preds = %2043, %2046
  %2066 = icmp eq i64 %1973, %1989
  br i1 %2066, label %2137, label %2067

2067:                                             ; preds = %2065, %1975, %1968
  %2068 = phi %"class.v8::internal::wasm::AsmType"** [ %1957, %1975 ], [ %1957, %1968 ], [ %1991, %2065 ]
  %2069 = phi %"class.v8::internal::wasm::AsmType"** [ %1966, %1975 ], [ %1966, %1968 ], [ %1993, %2065 ]
  %2070 = getelementptr %"class.v8::internal::wasm::AsmType"*, %"class.v8::internal::wasm::AsmType"** %2069, i64 -1
  %2071 = ptrtoint %"class.v8::internal::wasm::AsmType"** %2070 to i64
  %2072 = sub i64 %2071, %1965
  %2073 = lshr i64 %2072, 3
  %2074 = add nuw nsw i64 %2073, 1
  %2075 = and i64 %2074, 7
  %2076 = icmp eq i64 %2075, 0
  br i1 %2076, label %2088, label %2077

2077:                                             ; preds = %2067, %2077
  %2078 = phi %"class.v8::internal::wasm::AsmType"** [ %2081, %2077 ], [ %2068, %2067 ]
  %2079 = phi %"class.v8::internal::wasm::AsmType"** [ %2082, %2077 ], [ %2069, %2067 ]
  %2080 = phi i64 [ %2086, %2077 ], [ %2075, %2067 ]
  %2081 = getelementptr inbounds %"class.v8::internal::wasm::AsmType"*, %"class.v8::internal::wasm::AsmType"** %2078, i64 -1
  %2082 = getelementptr inbounds %"class.v8::internal::wasm::AsmType"*, %"class.v8::internal::wasm::AsmType"** %2079, i64 -1
  %2083 = bitcast %"class.v8::internal::wasm::AsmType"** %2082 to i64*
  %2084 = load i64, i64* %2083, align 8
  %2085 = bitcast %"class.v8::internal::wasm::AsmType"** %2081 to i64*
  store i64 %2084, i64* %2085, align 8
  %2086 = add i64 %2080, -1
  %2087 = icmp eq i64 %2086, 0
  br i1 %2087, label %2088, label %2077, !llvm.loop !67

2088:                                             ; preds = %2077, %2067
  %2089 = phi %"class.v8::internal::wasm::AsmType"** [ undef, %2067 ], [ %2081, %2077 ]
  %2090 = phi %"class.v8::internal::wasm::AsmType"** [ %2068, %2067 ], [ %2081, %2077 ]
  %2091 = phi %"class.v8::internal::wasm::AsmType"** [ %2069, %2067 ], [ %2082, %2077 ]
  %2092 = icmp ult i64 %2072, 56
  br i1 %2092, label %2137, label %2093

2093:                                             ; preds = %2088, %2093
  %2094 = phi %"class.v8::internal::wasm::AsmType"** [ %2131, %2093 ], [ %2090, %2088 ]
  %2095 = phi %"class.v8::internal::wasm::AsmType"** [ %2132, %2093 ], [ %2091, %2088 ]
  %2096 = getelementptr inbounds %"class.v8::internal::wasm::AsmType"*, %"class.v8::internal::wasm::AsmType"** %2094, i64 -1
  %2097 = getelementptr inbounds %"class.v8::internal::wasm::AsmType"*, %"class.v8::internal::wasm::AsmType"** %2095, i64 -1
  %2098 = bitcast %"class.v8::internal::wasm::AsmType"** %2097 to i64*
  %2099 = load i64, i64* %2098, align 8
  %2100 = bitcast %"class.v8::internal::wasm::AsmType"** %2096 to i64*
  store i64 %2099, i64* %2100, align 8
  %2101 = getelementptr inbounds %"class.v8::internal::wasm::AsmType"*, %"class.v8::internal::wasm::AsmType"** %2094, i64 -2
  %2102 = getelementptr inbounds %"class.v8::internal::wasm::AsmType"*, %"class.v8::internal::wasm::AsmType"** %2095, i64 -2
  %2103 = bitcast %"class.v8::internal::wasm::AsmType"** %2102 to i64*
  %2104 = load i64, i64* %2103, align 8
  %2105 = bitcast %"class.v8::internal::wasm::AsmType"** %2101 to i64*
  store i64 %2104, i64* %2105, align 8
  %2106 = getelementptr inbounds %"class.v8::internal::wasm::AsmType"*, %"class.v8::internal::wasm::AsmType"** %2094, i64 -3
  %2107 = getelementptr inbounds %"class.v8::internal::wasm::AsmType"*, %"class.v8::internal::wasm::AsmType"** %2095, i64 -3
  %2108 = bitcast %"class.v8::internal::wasm::AsmType"** %2107 to i64*
  %2109 = load i64, i64* %2108, align 8
  %2110 = bitcast %"class.v8::internal::wasm::AsmType"** %2106 to i64*
  store i64 %2109, i64* %2110, align 8
  %2111 = getelementptr inbounds %"class.v8::internal::wasm::AsmType"*, %"class.v8::internal::wasm::AsmType"** %2094, i64 -4
  %2112 = getelementptr inbounds %"class.v8::internal::wasm::AsmType"*, %"class.v8::internal::wasm::AsmType"** %2095, i64 -4
  %2113 = bitcast %"class.v8::internal::wasm::AsmType"** %2112 to i64*
  %2114 = load i64, i64* %2113, align 8
  %2115 = bitcast %"class.v8::internal::wasm::AsmType"** %2111 to i64*
  store i64 %2114, i64* %2115, align 8
  %2116 = getelementptr inbounds %"class.v8::internal::wasm::AsmType"*, %"class.v8::internal::wasm::AsmType"** %2094, i64 -5
  %2117 = getelementptr inbounds %"class.v8::internal::wasm::AsmType"*, %"class.v8::internal::wasm::AsmType"** %2095, i64 -5
  %2118 = bitcast %"class.v8::internal::wasm::AsmType"** %2117 to i64*
  %2119 = load i64, i64* %2118, align 8
  %2120 = bitcast %"class.v8::internal::wasm::AsmType"** %2116 to i64*
  store i64 %2119, i64* %2120, align 8
  %2121 = getelementptr inbounds %"class.v8::internal::wasm::AsmType"*, %"class.v8::internal::wasm::AsmType"** %2094, i64 -6
  %2122 = getelementptr inbounds %"class.v8::internal::wasm::AsmType"*, %"class.v8::internal::wasm::AsmType"** %2095, i64 -6
  %2123 = bitcast %"class.v8::internal::wasm::AsmType"** %2122 to i64*
  %2124 = load i64, i64* %2123, align 8
  %2125 = bitcast %"class.v8::internal::wasm::AsmType"** %2121 to i64*
  store i64 %2124, i64* %2125, align 8
  %2126 = getelementptr inbounds %"class.v8::internal::wasm::AsmType"*, %"class.v8::internal::wasm::AsmType"** %2094, i64 -7
  %2127 = getelementptr inbounds %"class.v8::internal::wasm::AsmType"*, %"class.v8::internal::wasm::AsmType"** %2095, i64 -7
  %2128 = bitcast %"class.v8::internal::wasm::AsmType"** %2127 to i64*
  %2129 = load i64, i64* %2128, align 8
  %2130 = bitcast %"class.v8::internal::wasm::AsmType"** %2126 to i64*
  store i64 %2129, i64* %2130, align 8
  %2131 = getelementptr inbounds %"class.v8::internal::wasm::AsmType"*, %"class.v8::internal::wasm::AsmType"** %2094, i64 -8
  %2132 = getelementptr inbounds %"class.v8::internal::wasm::AsmType"*, %"class.v8::internal::wasm::AsmType"** %2095, i64 -8
  %2133 = bitcast %"class.v8::internal::wasm::AsmType"** %2132 to i64*
  %2134 = load i64, i64* %2133, align 8
  %2135 = bitcast %"class.v8::internal::wasm::AsmType"** %2131 to i64*
  store i64 %2134, i64* %2135, align 8
  %2136 = icmp eq %"class.v8::internal::wasm::AsmType"** %2132, %1964
  br i1 %2136, label %2137, label %2093, !llvm.loop !68

2137:                                             ; preds = %2088, %2093, %2065, %1954
  %2138 = phi %"class.v8::internal::wasm::AsmType"** [ %1957, %1954 ], [ %1991, %2065 ], [ %2089, %2088 ], [ %2131, %2093 ]
  %2139 = ptrtoint %"class.v8::internal::wasm::AsmType"** %2138 to i64
  store i64 %2139, i64* %1918, align 8
  store i64 %1962, i64* %1917, align 8
  store i64 %1959, i64* %1927, align 8
  br label %2140

2140:                                             ; preds = %1910, %2137
  %2141 = load %"class.v8::internal::Zone"*, %"class.v8::internal::Zone"** %2, align 8
  %2142 = tail call %"class.v8::internal::wasm::AsmType"* @_ZN2v88internal4wasm7AsmType10MinMaxTypeEPNS0_4ZoneEPS2_S5_(%"class.v8::internal::Zone"* %2141, %"class.v8::internal::wasm::AsmType"* nonnull inttoptr (i64 237 to %"class.v8::internal::wasm::AsmType"*), %"class.v8::internal::wasm::AsmType"* nonnull inttoptr (i64 237 to %"class.v8::internal::wasm::AsmType"*)) #12
  %2143 = load %"class.v8::internal::Zone"*, %"class.v8::internal::Zone"** %2, align 8
  %2144 = tail call %"class.v8::internal::wasm::AsmType"* @_ZN2v88internal4wasm7AsmType10MinMaxTypeEPNS0_4ZoneEPS2_S5_(%"class.v8::internal::Zone"* %2143, %"class.v8::internal::wasm::AsmType"* nonnull inttoptr (i64 57357 to %"class.v8::internal::wasm::AsmType"*), %"class.v8::internal::wasm::AsmType"* nonnull inttoptr (i64 57357 to %"class.v8::internal::wasm::AsmType"*)) #12
  %2145 = load %"class.v8::internal::Zone"*, %"class.v8::internal::Zone"** %2, align 8
  %2146 = tail call %"class.v8::internal::wasm::AsmType"* @_ZN2v88internal4wasm7AsmType10MinMaxTypeEPNS0_4ZoneEPS2_S5_(%"class.v8::internal::Zone"* %2145, %"class.v8::internal::wasm::AsmType"* nonnull inttoptr (i64 1825 to %"class.v8::internal::wasm::AsmType"*), %"class.v8::internal::wasm::AsmType"* nonnull inttoptr (i64 1825 to %"class.v8::internal::wasm::AsmType"*)) #12
  %2147 = load %"class.v8::internal::Zone"*, %"class.v8::internal::Zone"** %2, align 8
  %2148 = ptrtoint %"class.v8::internal::Zone"* %2147 to i64
  %2149 = getelementptr inbounds %"class.v8::internal::Zone", %"class.v8::internal::Zone"* %2147, i64 0, i32 2
  %2150 = load i64, i64* %2149, align 8
  %2151 = getelementptr inbounds %"class.v8::internal::Zone", %"class.v8::internal::Zone"* %2147, i64 0, i32 3
  %2152 = load i64, i64* %2151, align 8
  %2153 = sub i64 %2152, %2150
  %2154 = icmp ult i64 %2153, 40
  br i1 %2154, label %2155, label %2157, !prof !2

2155:                                             ; preds = %2140
  %2156 = tail call i64 @_ZN2v88internal4Zone9NewExpandEm(%"class.v8::internal::Zone"* %2147, i64 40) #12
  br label %2159

2157:                                             ; preds = %2140
  %2158 = add i64 %2150, 40
  store i64 %2158, i64* %2149, align 8
  br label %2159

2159:                                             ; preds = %2155, %2157
  %2160 = phi i64 [ %2156, %2155 ], [ %2150, %2157 ]
  %2161 = inttoptr i64 %2160 to %"class.v8::internal::wasm::AsmOverloadedFunctionType"*
  %2162 = getelementptr inbounds %"class.v8::internal::wasm::AsmOverloadedFunctionType", %"class.v8::internal::wasm::AsmOverloadedFunctionType"* %2161, i64 0, i32 0, i32 0
  store i32 (...)** bitcast (i8** getelementptr inbounds ({ [9 x i8*] }, { [9 x i8*] }* @_ZTVN2v88internal4wasm25AsmOverloadedFunctionTypeE, i64 0, inrange i32 0, i64 2) to i32 (...)**), i32 (...)*** %2162, align 8
  %2163 = getelementptr inbounds %"class.v8::internal::wasm::AsmOverloadedFunctionType", %"class.v8::internal::wasm::AsmOverloadedFunctionType"* %2161, i64 0, i32 1
  %2164 = getelementptr inbounds %"class.v8::internal::wasm::AsmOverloadedFunctionType", %"class.v8::internal::wasm::AsmOverloadedFunctionType"* %2161, i64 0, i32 1, i32 0, i32 0, i32 2, i32 1
  %2165 = bitcast %"struct.std::__1::__compressed_pair_elem.184"* %2164 to i64*
  %2166 = bitcast %"class.v8::internal::ZoneVector.179"* %2163 to i8*
  tail call void @llvm.memset.p0i8.i64(i8* align 8 %2166, i8 0, i64 24, i1 false) #12
  store i64 %2148, i64* %2165, align 8
  %2167 = inttoptr i64 %2160 to %"class.v8::internal::wasm::AsmType"*
  %2168 = getelementptr inbounds %"class.v8::internal::wasm::AsmJsParser", %"class.v8::internal::wasm::AsmJsParser"* %0, i64 0, i32 30
  store %"class.v8::internal::wasm::AsmType"* %2167, %"class.v8::internal::wasm::AsmType"** %2168, align 8
  %2169 = and i64 %2160, 1
  %2170 = icmp eq i64 %2169, 0
  br i1 %2170, label %2171, label %2178

2171:                                             ; preds = %2159
  %2172 = inttoptr i64 %2160 to %"class.v8::internal::wasm::AsmCallableType"*
  %2173 = inttoptr i64 %2160 to %"class.v8::internal::wasm::AsmOverloadedFunctionType"* (%"class.v8::internal::wasm::AsmCallableType"*)***
  %2174 = load %"class.v8::internal::wasm::AsmOverloadedFunctionType"* (%"class.v8::internal::wasm::AsmCallableType"*)**, %"class.v8::internal::wasm::AsmOverloadedFunctionType"* (%"class.v8::internal::wasm::AsmCallableType"*)*** %2173, align 8
  %2175 = getelementptr inbounds %"class.v8::internal::wasm::AsmOverloadedFunctionType"* (%"class.v8::internal::wasm::AsmCallableType"*)*, %"class.v8::internal::wasm::AsmOverloadedFunctionType"* (%"class.v8::internal::wasm::AsmCallableType"*)** %2174, i64 3
  %2176 = load %"class.v8::internal::wasm::AsmOverloadedFunctionType"* (%"class.v8::internal::wasm::AsmCallableType"*)*, %"class.v8::internal::wasm::AsmOverloadedFunctionType"* (%"class.v8::internal::wasm::AsmCallableType"*)** %2175, align 8
  %2177 = tail call %"class.v8::internal::wasm::AsmOverloadedFunctionType"* %2176(%"class.v8::internal::wasm::AsmCallableType"* %2172) #12
  br label %2178

2178:                                             ; preds = %2159, %2171
  %2179 = phi %"class.v8::internal::wasm::AsmOverloadedFunctionType"* [ %2177, %2171 ], [ null, %2159 ]
  tail call void @_ZN2v88internal4wasm25AsmOverloadedFunctionType11AddOverloadEPNS1_7AsmTypeE(%"class.v8::internal::wasm::AsmOverloadedFunctionType"* %2179, %"class.v8::internal::wasm::AsmType"* %2146) #12
  %2180 = load %"class.v8::internal::wasm::AsmType"*, %"class.v8::internal::wasm::AsmType"** %2168, align 8
  %2181 = ptrtoint %"class.v8::internal::wasm::AsmType"* %2180 to i64
  %2182 = and i64 %2181, 1
  %2183 = icmp eq i64 %2182, 0
  br i1 %2183, label %2184, label %2191

2184:                                             ; preds = %2178
  %2185 = bitcast %"class.v8::internal::wasm::AsmType"* %2180 to %"class.v8::internal::wasm::AsmCallableType"*
  %2186 = bitcast %"class.v8::internal::wasm::AsmType"* %2180 to %"class.v8::internal::wasm::AsmOverloadedFunctionType"* (%"class.v8::internal::wasm::AsmCallableType"*)***
  %2187 = load %"class.v8::internal::wasm::AsmOverloadedFunctionType"* (%"class.v8::internal::wasm::AsmCallableType"*)**, %"class.v8::internal::wasm::AsmOverloadedFunctionType"* (%"class.v8::internal::wasm::AsmCallableType"*)*** %2186, align 8
  %2188 = getelementptr inbounds %"class.v8::internal::wasm::AsmOverloadedFunctionType"* (%"class.v8::internal::wasm::AsmCallableType"*)*, %"class.v8::internal::wasm::AsmOverloadedFunctionType"* (%"class.v8::internal::wasm::AsmCallableType"*)** %2187, i64 3
  %2189 = load %"class.v8::internal::wasm::AsmOverloadedFunctionType"* (%"class.v8::internal::wasm::AsmCallableType"*)*, %"class.v8::internal::wasm::AsmOverloadedFunctionType"* (%"class.v8::internal::wasm::AsmCallableType"*)** %2188, align 8
  %2190 = tail call %"class.v8::internal::wasm::AsmOverloadedFunctionType"* %2189(%"class.v8::internal::wasm::AsmCallableType"* %2185) #12
  br label %2191

2191:                                             ; preds = %2178, %2184
  %2192 = phi %"class.v8::internal::wasm::AsmOverloadedFunctionType"* [ %2190, %2184 ], [ null, %2178 ]
  tail call void @_ZN2v88internal4wasm25AsmOverloadedFunctionType11AddOverloadEPNS1_7AsmTypeE(%"class.v8::internal::wasm::AsmOverloadedFunctionType"* %2192, %"class.v8::internal::wasm::AsmType"* %2144) #12
  %2193 = load %"class.v8::internal::wasm::AsmType"*, %"class.v8::internal::wasm::AsmType"** %2168, align 8
  %2194 = ptrtoint %"class.v8::internal::wasm::AsmType"* %2193 to i64
  %2195 = and i64 %2194, 1
  %2196 = icmp eq i64 %2195, 0
  br i1 %2196, label %2197, label %2204

2197:                                             ; preds = %2191
  %2198 = bitcast %"class.v8::internal::wasm::AsmType"* %2193 to %"class.v8::internal::wasm::AsmCallableType"*
  %2199 = bitcast %"class.v8::internal::wasm::AsmType"* %2193 to %"class.v8::internal::wasm::AsmOverloadedFunctionType"* (%"class.v8::internal::wasm::AsmCallableType"*)***
  %2200 = load %"class.v8::internal::wasm::AsmOverloadedFunctionType"* (%"class.v8::internal::wasm::AsmCallableType"*)**, %"class.v8::internal::wasm::AsmOverloadedFunctionType"* (%"class.v8::internal::wasm::AsmCallableType"*)*** %2199, align 8
  %2201 = getelementptr inbounds %"class.v8::internal::wasm::AsmOverloadedFunctionType"* (%"class.v8::internal::wasm::AsmCallableType"*)*, %"class.v8::internal::wasm::AsmOverloadedFunctionType"* (%"class.v8::internal::wasm::AsmCallableType"*)** %2200, i64 3
  %2202 = load %"class.v8::internal::wasm::AsmOverloadedFunctionType"* (%"class.v8::internal::wasm::AsmCallableType"*)*, %"class.v8::internal::wasm::AsmOverloadedFunctionType"* (%"class.v8::internal::wasm::AsmCallableType"*)** %2201, align 8
  %2203 = tail call %"class.v8::internal::wasm::AsmOverloadedFunctionType"* %2202(%"class.v8::internal::wasm::AsmCallableType"* %2198) #12
  br label %2204

2204:                                             ; preds = %2191, %2197
  %2205 = phi %"class.v8::internal::wasm::AsmOverloadedFunctionType"* [ %2203, %2197 ], [ null, %2191 ]
  tail call void @_ZN2v88internal4wasm25AsmOverloadedFunctionType11AddOverloadEPNS1_7AsmTypeE(%"class.v8::internal::wasm::AsmOverloadedFunctionType"* %2205, %"class.v8::internal::wasm::AsmType"* %2142) #12
  %2206 = load %"class.v8::internal::Zone"*, %"class.v8::internal::Zone"** %2, align 8
  %2207 = ptrtoint %"class.v8::internal::Zone"* %2206 to i64
  %2208 = getelementptr inbounds %"class.v8::internal::Zone", %"class.v8::internal::Zone"* %2206, i64 0, i32 2
  %2209 = load i64, i64* %2208, align 8
  %2210 = getelementptr inbounds %"class.v8::internal::Zone", %"class.v8::internal::Zone"* %2206, i64 0, i32 3
  %2211 = load i64, i64* %2210, align 8
  %2212 = sub i64 %2211, %2209
  %2213 = icmp ult i64 %2212, 40
  br i1 %2213, label %2214, label %2216, !prof !2

2214:                                             ; preds = %2204
  %2215 = tail call i64 @_ZN2v88internal4Zone9NewExpandEm(%"class.v8::internal::Zone"* %2206, i64 40) #12
  br label %2218

2216:                                             ; preds = %2204
  %2217 = add i64 %2209, 40
  store i64 %2217, i64* %2208, align 8
  br label %2218

2218:                                             ; preds = %2214, %2216
  %2219 = phi i64 [ %2215, %2214 ], [ %2209, %2216 ]
  %2220 = inttoptr i64 %2219 to %"class.v8::internal::wasm::AsmOverloadedFunctionType"*
  %2221 = getelementptr inbounds %"class.v8::internal::wasm::AsmOverloadedFunctionType", %"class.v8::internal::wasm::AsmOverloadedFunctionType"* %2220, i64 0, i32 0, i32 0
  store i32 (...)** bitcast (i8** getelementptr inbounds ({ [9 x i8*] }, { [9 x i8*] }* @_ZTVN2v88internal4wasm25AsmOverloadedFunctionTypeE, i64 0, inrange i32 0, i64 2) to i32 (...)**), i32 (...)*** %2221, align 8
  %2222 = getelementptr inbounds %"class.v8::internal::wasm::AsmOverloadedFunctionType", %"class.v8::internal::wasm::AsmOverloadedFunctionType"* %2220, i64 0, i32 1
  %2223 = getelementptr inbounds %"class.v8::internal::wasm::AsmOverloadedFunctionType", %"class.v8::internal::wasm::AsmOverloadedFunctionType"* %2220, i64 0, i32 1, i32 0, i32 0, i32 2, i32 1
  %2224 = bitcast %"struct.std::__1::__compressed_pair_elem.184"* %2223 to i64*
  %2225 = bitcast %"class.v8::internal::ZoneVector.179"* %2222 to i8*
  tail call void @llvm.memset.p0i8.i64(i8* align 8 %2225, i8 0, i64 24, i1 false) #12
  store i64 %2207, i64* %2224, align 8
  %2226 = inttoptr i64 %2219 to %"class.v8::internal::wasm::AsmType"*
  %2227 = getelementptr inbounds %"class.v8::internal::wasm::AsmJsParser", %"class.v8::internal::wasm::AsmJsParser"* %0, i64 0, i32 31
  store %"class.v8::internal::wasm::AsmType"* %2226, %"class.v8::internal::wasm::AsmType"** %2227, align 8
  %2228 = and i64 %2219, 1
  %2229 = icmp eq i64 %2228, 0
  br i1 %2229, label %2230, label %2237

2230:                                             ; preds = %2218
  %2231 = inttoptr i64 %2219 to %"class.v8::internal::wasm::AsmCallableType"*
  %2232 = inttoptr i64 %2219 to %"class.v8::internal::wasm::AsmOverloadedFunctionType"* (%"class.v8::internal::wasm::AsmCallableType"*)***
  %2233 = load %"class.v8::internal::wasm::AsmOverloadedFunctionType"* (%"class.v8::internal::wasm::AsmCallableType"*)**, %"class.v8::internal::wasm::AsmOverloadedFunctionType"* (%"class.v8::internal::wasm::AsmCallableType"*)*** %2232, align 8
  %2234 = getelementptr inbounds %"class.v8::internal::wasm::AsmOverloadedFunctionType"* (%"class.v8::internal::wasm::AsmCallableType"*)*, %"class.v8::internal::wasm::AsmOverloadedFunctionType"* (%"class.v8::internal::wasm::AsmCallableType"*)** %2233, i64 3
  %2235 = load %"class.v8::internal::wasm::AsmOverloadedFunctionType"* (%"class.v8::internal::wasm::AsmCallableType"*)*, %"class.v8::internal::wasm::AsmOverloadedFunctionType"* (%"class.v8::internal::wasm::AsmCallableType"*)** %2234, align 8
  %2236 = tail call %"class.v8::internal::wasm::AsmOverloadedFunctionType"* %2235(%"class.v8::internal::wasm::AsmCallableType"* %2231) #12
  br label %2237

2237:                                             ; preds = %2218, %2230
  %2238 = phi %"class.v8::internal::wasm::AsmOverloadedFunctionType"* [ %2236, %2230 ], [ null, %2218 ]
  tail call void @_ZN2v88internal4wasm25AsmOverloadedFunctionType11AddOverloadEPNS1_7AsmTypeE(%"class.v8::internal::wasm::AsmOverloadedFunctionType"* %2238, %"class.v8::internal::wasm::AsmType"* %1094) #12
  %2239 = load %"class.v8::internal::wasm::AsmType"*, %"class.v8::internal::wasm::AsmType"** %2227, align 8
  %2240 = ptrtoint %"class.v8::internal::wasm::AsmType"* %2239 to i64
  %2241 = and i64 %2240, 1
  %2242 = icmp eq i64 %2241, 0
  br i1 %2242, label %2243, label %2250

2243:                                             ; preds = %2237
  %2244 = bitcast %"class.v8::internal::wasm::AsmType"* %2239 to %"class.v8::internal::wasm::AsmCallableType"*
  %2245 = bitcast %"class.v8::internal::wasm::AsmType"* %2239 to %"class.v8::internal::wasm::AsmOverloadedFunctionType"* (%"class.v8::internal::wasm::AsmCallableType"*)***
  %2246 = load %"class.v8::internal::wasm::AsmOverloadedFunctionType"* (%"class.v8::internal::wasm::AsmCallableType"*)**, %"class.v8::internal::wasm::AsmOverloadedFunctionType"* (%"class.v8::internal::wasm::AsmCallableType"*)*** %2245, align 8
  %2247 = getelementptr inbounds %"class.v8::internal::wasm::AsmOverloadedFunctionType"* (%"class.v8::internal::wasm::AsmCallableType"*)*, %"class.v8::internal::wasm::AsmOverloadedFunctionType"* (%"class.v8::internal::wasm::AsmCallableType"*)** %2246, i64 3
  %2248 = load %"class.v8::internal::wasm::AsmOverloadedFunctionType"* (%"class.v8::internal::wasm::AsmCallableType"*)*, %"class.v8::internal::wasm::AsmOverloadedFunctionType"* (%"class.v8::internal::wasm::AsmCallableType"*)** %2247, align 8
  %2249 = tail call %"class.v8::internal::wasm::AsmOverloadedFunctionType"* %2248(%"class.v8::internal::wasm::AsmCallableType"* %2244) #12
  br label %2250

2250:                                             ; preds = %2237, %2243
  %2251 = phi %"class.v8::internal::wasm::AsmOverloadedFunctionType"* [ %2249, %2243 ], [ null, %2237 ]
  %2252 = load %"class.v8::internal::wasm::AsmType"*, %"class.v8::internal::wasm::AsmType"** %26, align 8
  tail call void @_ZN2v88internal4wasm25AsmOverloadedFunctionType11AddOverloadEPNS1_7AsmTypeE(%"class.v8::internal::wasm::AsmOverloadedFunctionType"* %2251, %"class.v8::internal::wasm::AsmType"* %2252) #12
  %2253 = load %"class.v8::internal::wasm::AsmType"*, %"class.v8::internal::wasm::AsmType"** %2227, align 8
  %2254 = ptrtoint %"class.v8::internal::wasm::AsmType"* %2253 to i64
  %2255 = and i64 %2254, 1
  %2256 = icmp eq i64 %2255, 0
  br i1 %2256, label %2257, label %2264

2257:                                             ; preds = %2250
  %2258 = bitcast %"class.v8::internal::wasm::AsmType"* %2253 to %"class.v8::internal::wasm::AsmCallableType"*
  %2259 = bitcast %"class.v8::internal::wasm::AsmType"* %2253 to %"class.v8::internal::wasm::AsmOverloadedFunctionType"* (%"class.v8::internal::wasm::AsmCallableType"*)***
  %2260 = load %"class.v8::internal::wasm::AsmOverloadedFunctionType"* (%"class.v8::internal::wasm::AsmCallableType"*)**, %"class.v8::internal::wasm::AsmOverloadedFunctionType"* (%"class.v8::internal::wasm::AsmCallableType"*)*** %2259, align 8
  %2261 = getelementptr inbounds %"class.v8::internal::wasm::AsmOverloadedFunctionType"* (%"class.v8::internal::wasm::AsmCallableType"*)*, %"class.v8::internal::wasm::AsmOverloadedFunctionType"* (%"class.v8::internal::wasm::AsmCallableType"*)** %2260, i64 3
  %2262 = load %"class.v8::internal::wasm::AsmOverloadedFunctionType"* (%"class.v8::internal::wasm::AsmCallableType"*)*, %"class.v8::internal::wasm::AsmOverloadedFunctionType"* (%"class.v8::internal::wasm::AsmCallableType"*)** %2261, align 8
  %2263 = tail call %"class.v8::internal::wasm::AsmOverloadedFunctionType"* %2262(%"class.v8::internal::wasm::AsmCallableType"* %2258) #12
  br label %2264

2264:                                             ; preds = %2250, %2257
  %2265 = phi %"class.v8::internal::wasm::AsmOverloadedFunctionType"* [ %2263, %2257 ], [ null, %2250 ]
  tail call void @_ZN2v88internal4wasm25AsmOverloadedFunctionType11AddOverloadEPNS1_7AsmTypeE(%"class.v8::internal::wasm::AsmOverloadedFunctionType"* %2265, %"class.v8::internal::wasm::AsmType"* %822) #12
  %2266 = load %"class.v8::internal::Zone"*, %"class.v8::internal::Zone"** %2, align 8
  %2267 = ptrtoint %"class.v8::internal::Zone"* %2266 to i64
  %2268 = getelementptr inbounds %"class.v8::internal::Zone", %"class.v8::internal::Zone"* %2266, i64 0, i32 2
  %2269 = load i64, i64* %2268, align 8
  %2270 = getelementptr inbounds %"class.v8::internal::Zone", %"class.v8::internal::Zone"* %2266, i64 0, i32 3
  %2271 = load i64, i64* %2270, align 8
  %2272 = sub i64 %2271, %2269
  %2273 = icmp ult i64 %2272, 40
  br i1 %2273, label %2274, label %2276, !prof !2

2274:                                             ; preds = %2264
  %2275 = tail call i64 @_ZN2v88internal4Zone9NewExpandEm(%"class.v8::internal::Zone"* %2266, i64 40) #12
  br label %2278

2276:                                             ; preds = %2264
  %2277 = add i64 %2269, 40
  store i64 %2277, i64* %2268, align 8
  br label %2278

2278:                                             ; preds = %2274, %2276
  %2279 = phi i64 [ %2275, %2274 ], [ %2269, %2276 ]
  %2280 = inttoptr i64 %2279 to %"class.v8::internal::wasm::AsmOverloadedFunctionType"*
  %2281 = getelementptr inbounds %"class.v8::internal::wasm::AsmOverloadedFunctionType", %"class.v8::internal::wasm::AsmOverloadedFunctionType"* %2280, i64 0, i32 0, i32 0
  store i32 (...)** bitcast (i8** getelementptr inbounds ({ [9 x i8*] }, { [9 x i8*] }* @_ZTVN2v88internal4wasm25AsmOverloadedFunctionTypeE, i64 0, inrange i32 0, i64 2) to i32 (...)**), i32 (...)*** %2281, align 8
  %2282 = getelementptr inbounds %"class.v8::internal::wasm::AsmOverloadedFunctionType", %"class.v8::internal::wasm::AsmOverloadedFunctionType"* %2280, i64 0, i32 1
  %2283 = getelementptr inbounds %"class.v8::internal::wasm::AsmOverloadedFunctionType", %"class.v8::internal::wasm::AsmOverloadedFunctionType"* %2280, i64 0, i32 1, i32 0, i32 0, i32 2, i32 1
  %2284 = bitcast %"struct.std::__1::__compressed_pair_elem.184"* %2283 to i64*
  %2285 = bitcast %"class.v8::internal::ZoneVector.179"* %2282 to i8*
  tail call void @llvm.memset.p0i8.i64(i8* align 8 %2285, i8 0, i64 24, i1 false) #12
  store i64 %2267, i64* %2284, align 8
  %2286 = inttoptr i64 %2279 to %"class.v8::internal::wasm::AsmType"*
  %2287 = getelementptr inbounds %"class.v8::internal::wasm::AsmJsParser", %"class.v8::internal::wasm::AsmJsParser"* %0, i64 0, i32 32
  store %"class.v8::internal::wasm::AsmType"* %2286, %"class.v8::internal::wasm::AsmType"** %2287, align 8
  %2288 = and i64 %2279, 1
  %2289 = icmp eq i64 %2288, 0
  br i1 %2289, label %2290, label %2297

2290:                                             ; preds = %2278
  %2291 = inttoptr i64 %2279 to %"class.v8::internal::wasm::AsmCallableType"*
  %2292 = inttoptr i64 %2279 to %"class.v8::internal::wasm::AsmOverloadedFunctionType"* (%"class.v8::internal::wasm::AsmCallableType"*)***
  %2293 = load %"class.v8::internal::wasm::AsmOverloadedFunctionType"* (%"class.v8::internal::wasm::AsmCallableType"*)**, %"class.v8::internal::wasm::AsmOverloadedFunctionType"* (%"class.v8::internal::wasm::AsmCallableType"*)*** %2292, align 8
  %2294 = getelementptr inbounds %"class.v8::internal::wasm::AsmOverloadedFunctionType"* (%"class.v8::internal::wasm::AsmCallableType"*)*, %"class.v8::internal::wasm::AsmOverloadedFunctionType"* (%"class.v8::internal::wasm::AsmCallableType"*)** %2293, i64 3
  %2295 = load %"class.v8::internal::wasm::AsmOverloadedFunctionType"* (%"class.v8::internal::wasm::AsmCallableType"*)*, %"class.v8::internal::wasm::AsmOverloadedFunctionType"* (%"class.v8::internal::wasm::AsmCallableType"*)** %2294, align 8
  %2296 = tail call %"class.v8::internal::wasm::AsmOverloadedFunctionType"* %2295(%"class.v8::internal::wasm::AsmCallableType"* %2291) #12
  br label %2297

2297:                                             ; preds = %2278, %2290
  %2298 = phi %"class.v8::internal::wasm::AsmOverloadedFunctionType"* [ %2296, %2290 ], [ null, %2278 ]
  %2299 = load %"class.v8::internal::wasm::AsmType"*, %"class.v8::internal::wasm::AsmType"** %26, align 8
  tail call void @_ZN2v88internal4wasm25AsmOverloadedFunctionType11AddOverloadEPNS1_7AsmTypeE(%"class.v8::internal::wasm::AsmOverloadedFunctionType"* %2298, %"class.v8::internal::wasm::AsmType"* %2299) #12
  %2300 = load %"class.v8::internal::wasm::AsmType"*, %"class.v8::internal::wasm::AsmType"** %2287, align 8
  %2301 = ptrtoint %"class.v8::internal::wasm::AsmType"* %2300 to i64
  %2302 = and i64 %2301, 1
  %2303 = icmp eq i64 %2302, 0
  br i1 %2303, label %2304, label %2311

2304:                                             ; preds = %2297
  %2305 = bitcast %"class.v8::internal::wasm::AsmType"* %2300 to %"class.v8::internal::wasm::AsmCallableType"*
  %2306 = bitcast %"class.v8::internal::wasm::AsmType"* %2300 to %"class.v8::internal::wasm::AsmOverloadedFunctionType"* (%"class.v8::internal::wasm::AsmCallableType"*)***
  %2307 = load %"class.v8::internal::wasm::AsmOverloadedFunctionType"* (%"class.v8::internal::wasm::AsmCallableType"*)**, %"class.v8::internal::wasm::AsmOverloadedFunctionType"* (%"class.v8::internal::wasm::AsmCallableType"*)*** %2306, align 8
  %2308 = getelementptr inbounds %"class.v8::internal::wasm::AsmOverloadedFunctionType"* (%"class.v8::internal::wasm::AsmCallableType"*)*, %"class.v8::internal::wasm::AsmOverloadedFunctionType"* (%"class.v8::internal::wasm::AsmCallableType"*)** %2307, i64 3
  %2309 = load %"class.v8::internal::wasm::AsmOverloadedFunctionType"* (%"class.v8::internal::wasm::AsmCallableType"*)*, %"class.v8::internal::wasm::AsmOverloadedFunctionType"* (%"class.v8::internal::wasm::AsmCallableType"*)** %2308, align 8
  %2310 = tail call %"class.v8::internal::wasm::AsmOverloadedFunctionType"* %2309(%"class.v8::internal::wasm::AsmCallableType"* %2305) #12
  br label %2311

2311:                                             ; preds = %2297, %2304
  %2312 = phi %"class.v8::internal::wasm::AsmOverloadedFunctionType"* [ %2310, %2304 ], [ null, %2297 ]
  tail call void @_ZN2v88internal4wasm25AsmOverloadedFunctionType11AddOverloadEPNS1_7AsmTypeE(%"class.v8::internal::wasm::AsmOverloadedFunctionType"* %2312, %"class.v8::internal::wasm::AsmType"* %822) #12
  %2313 = load %"class.v8::internal::Zone"*, %"class.v8::internal::Zone"** %2, align 8
  %2314 = tail call %"class.v8::internal::wasm::AsmType"* @_ZN2v88internal4wasm7AsmType10FroundTypeEPNS0_4ZoneE(%"class.v8::internal::Zone"* %2313) #12
  %2315 = getelementptr inbounds %"class.v8::internal::wasm::AsmJsParser", %"class.v8::internal::wasm::AsmJsParser"* %0, i64 0, i32 33
  store %"class.v8::internal::wasm::AsmType"* %2314, %"class.v8::internal::wasm::AsmType"** %2315, align 8
  ret void
}

; Function Attrs: argmemonly nounwind
declare void @llvm.lifetime.start.p0i8(i64 immarg, i8* nocapture) #2

declare %"class.v8::internal::wasm::AsmType"* @_ZN2v88internal4wasm7AsmType10MinMaxTypeEPNS0_4ZoneEPS2_S5_(%"class.v8::internal::Zone"*, %"class.v8::internal::wasm::AsmType"*, %"class.v8::internal::wasm::AsmType"*) local_unnamed_addr #1

declare void @_ZN2v88internal4wasm25AsmOverloadedFunctionType11AddOverloadEPNS1_7AsmTypeE(%"class.v8::internal::wasm::AsmOverloadedFunctionType"*, %"class.v8::internal::wasm::AsmType"*) local_unnamed_addr #1

declare %"class.v8::internal::wasm::AsmType"* @_ZN2v88internal4wasm7AsmType10FroundTypeEPNS0_4ZoneE(%"class.v8::internal::Zone"*) local_unnamed_addr #1

; Function Attrs: argmemonly nounwind
declare void @llvm.lifetime.end.p0i8(i64 immarg, i8* nocapture) #2

; Function Attrs: nounwind ssp uwtable
define hidden %"class.v8::internal::Signature"* @_ZN2v88internal4wasm11AsmJsParser16ConvertSignatureEPNS1_7AsmTypeERKNS0_10ZoneVectorIS4_EE(%"class.v8::internal::wasm::AsmJsParser"* nocapture readonly, %"class.v8::internal::wasm::AsmType"*, %"class.v8::internal::ZoneVector.179"* nocapture readonly dereferenceable(32)) local_unnamed_addr #0 align 2 {
  %4 = getelementptr inbounds %"class.v8::internal::wasm::AsmJsParser", %"class.v8::internal::wasm::AsmJsParser"* %0, i64 0, i32 0
  %5 = load %"class.v8::internal::Zone"*, %"class.v8::internal::Zone"** %4, align 8
  %6 = tail call zeroext i1 @_ZN2v88internal4wasm7AsmType3IsAEPS2_(%"class.v8::internal::wasm::AsmType"* %1, %"class.v8::internal::wasm::AsmType"* nonnull inttoptr (i64 17 to %"class.v8::internal::wasm::AsmType"*)) #12
  %7 = xor i1 %6, true
  %8 = zext i1 %7 to i64
  %9 = getelementptr inbounds %"class.v8::internal::ZoneVector.179", %"class.v8::internal::ZoneVector.179"* %2, i64 0, i32 0, i32 0, i32 1
  %10 = bitcast %"class.v8::internal::wasm::AsmType"*** %9 to i64*
  %11 = load i64, i64* %10, align 8
  %12 = bitcast %"class.v8::internal::ZoneVector.179"* %2 to i64*
  %13 = load i64, i64* %12, align 8
  %14 = sub i64 %11, %13
  %15 = ashr exact i64 %14, 3
  %16 = add nsw i64 %15, %8
  %17 = shl i64 %16, 32
  %18 = ashr exact i64 %17, 30
  %19 = add nsw i64 %18, 7
  %20 = and i64 %19, -8
  %21 = getelementptr inbounds %"class.v8::internal::Zone", %"class.v8::internal::Zone"* %5, i64 0, i32 2
  %22 = load i64, i64* %21, align 8
  %23 = getelementptr inbounds %"class.v8::internal::Zone", %"class.v8::internal::Zone"* %5, i64 0, i32 3
  %24 = load i64, i64* %23, align 8
  %25 = sub i64 %24, %22
  %26 = icmp ugt i64 %20, %25
  br i1 %26, label %27, label %29, !prof !2

27:                                               ; preds = %3
  %28 = tail call i64 @_ZN2v88internal4Zone9NewExpandEm(%"class.v8::internal::Zone"* %5, i64 %20) #12
  br label %31

29:                                               ; preds = %3
  %30 = add i64 %20, %22
  store i64 %30, i64* %21, align 8
  br label %31

31:                                               ; preds = %27, %29
  %32 = phi i64 [ %28, %27 ], [ %22, %29 ]
  %33 = inttoptr i64 %32 to %"class.v8::internal::wasm::ValueType"*
  %34 = getelementptr inbounds %"class.v8::internal::ZoneVector.179", %"class.v8::internal::ZoneVector.179"* %2, i64 0, i32 0, i32 0, i32 0
  %35 = load %"class.v8::internal::wasm::AsmType"**, %"class.v8::internal::wasm::AsmType"*** %34, align 8
  %36 = load %"class.v8::internal::wasm::AsmType"**, %"class.v8::internal::wasm::AsmType"*** %9, align 8
  %37 = icmp eq %"class.v8::internal::wasm::AsmType"** %35, %36
  br i1 %37, label %38, label %40

38:                                               ; preds = %50, %31
  %39 = tail call zeroext i1 @_ZN2v88internal4wasm7AsmType3IsAEPS2_(%"class.v8::internal::wasm::AsmType"* %1, %"class.v8::internal::wasm::AsmType"* nonnull inttoptr (i64 17 to %"class.v8::internal::wasm::AsmType"*)) #12
  br i1 %39, label %67, label %57

40:                                               ; preds = %31, %50
  %41 = phi %"class.v8::internal::wasm::AsmType"** [ %55, %50 ], [ %35, %31 ]
  %42 = phi i64 [ %54, %50 ], [ 0, %31 ]
  %43 = load %"class.v8::internal::wasm::AsmType"*, %"class.v8::internal::wasm::AsmType"** %41, align 8
  %44 = tail call zeroext i1 @_ZN2v88internal4wasm7AsmType3IsAEPS2_(%"class.v8::internal::wasm::AsmType"* %43, %"class.v8::internal::wasm::AsmType"* nonnull inttoptr (i64 237 to %"class.v8::internal::wasm::AsmType"*)) #12
  br i1 %44, label %50, label %45

45:                                               ; preds = %40
  %46 = tail call zeroext i1 @_ZN2v88internal4wasm7AsmType3IsAEPS2_(%"class.v8::internal::wasm::AsmType"* %43, %"class.v8::internal::wasm::AsmType"* nonnull inttoptr (i64 57357 to %"class.v8::internal::wasm::AsmType"*)) #12
  br i1 %46, label %50, label %47

47:                                               ; preds = %45
  %48 = tail call zeroext i1 @_ZN2v88internal4wasm7AsmType3IsAEPS2_(%"class.v8::internal::wasm::AsmType"* %43, %"class.v8::internal::wasm::AsmType"* nonnull inttoptr (i64 769 to %"class.v8::internal::wasm::AsmType"*)) #12
  br i1 %48, label %50, label %49

49:                                               ; preds = %47
  tail call void (i8*, ...) @_Z8V8_FatalPKcz(i8* getelementptr inbounds ([17 x i8], [17 x i8]* @.str, i64 0, i64 0)) #13
  unreachable

50:                                               ; preds = %47, %45, %40
  %51 = phi i32 [ 4, %40 ], [ 3, %45 ], [ 1, %47 ]
  %52 = add i64 %42, %8
  %53 = getelementptr inbounds %"class.v8::internal::wasm::ValueType", %"class.v8::internal::wasm::ValueType"* %33, i64 %52, i32 0
  store i32 %51, i32* %53, align 4
  %54 = add i64 %42, 1
  %55 = getelementptr inbounds %"class.v8::internal::wasm::AsmType"*, %"class.v8::internal::wasm::AsmType"** %41, i64 1
  %56 = icmp eq %"class.v8::internal::wasm::AsmType"** %55, %36
  br i1 %56, label %38, label %40

57:                                               ; preds = %38
  %58 = tail call zeroext i1 @_ZN2v88internal4wasm7AsmType3IsAEPS2_(%"class.v8::internal::wasm::AsmType"* %1, %"class.v8::internal::wasm::AsmType"* nonnull inttoptr (i64 237 to %"class.v8::internal::wasm::AsmType"*)) #12
  br i1 %58, label %64, label %59

59:                                               ; preds = %57
  %60 = tail call zeroext i1 @_ZN2v88internal4wasm7AsmType3IsAEPS2_(%"class.v8::internal::wasm::AsmType"* %1, %"class.v8::internal::wasm::AsmType"* nonnull inttoptr (i64 57357 to %"class.v8::internal::wasm::AsmType"*)) #12
  br i1 %60, label %64, label %61

61:                                               ; preds = %59
  %62 = tail call zeroext i1 @_ZN2v88internal4wasm7AsmType3IsAEPS2_(%"class.v8::internal::wasm::AsmType"* %1, %"class.v8::internal::wasm::AsmType"* nonnull inttoptr (i64 1825 to %"class.v8::internal::wasm::AsmType"*)) #12
  br i1 %62, label %64, label %63

63:                                               ; preds = %61
  tail call void (i8*, ...) @_Z8V8_FatalPKcz(i8* getelementptr inbounds ([17 x i8], [17 x i8]* @.str, i64 0, i64 0)) #13
  unreachable

64:                                               ; preds = %61, %59, %57
  %65 = phi i32 [ 4, %57 ], [ 3, %59 ], [ 1, %61 ]
  %66 = getelementptr inbounds %"class.v8::internal::wasm::ValueType", %"class.v8::internal::wasm::ValueType"* %33, i64 0, i32 0
  store i32 %65, i32* %66, align 4
  br label %67

67:                                               ; preds = %64, %38
  %68 = load i64, i64* %21, align 8
  %69 = load i64, i64* %23, align 8
  %70 = sub i64 %69, %68
  %71 = icmp ult i64 %70, 24
  br i1 %71, label %72, label %74, !prof !2

72:                                               ; preds = %67
  %73 = tail call i64 @_ZN2v88internal4Zone9NewExpandEm(%"class.v8::internal::Zone"* %5, i64 24) #12
  br label %76

74:                                               ; preds = %67
  %75 = add i64 %68, 24
  store i64 %75, i64* %21, align 8
  br label %76

76:                                               ; preds = %72, %74
  %77 = phi i64 [ %73, %72 ], [ %68, %74 ]
  %78 = inttoptr i64 %77 to %"class.v8::internal::Signature"*
  %79 = getelementptr inbounds %"class.v8::internal::Signature", %"class.v8::internal::Signature"* %78, i64 0, i32 0
  store i64 %8, i64* %79, align 8
  %80 = getelementptr inbounds %"class.v8::internal::Signature", %"class.v8::internal::Signature"* %78, i64 0, i32 1
  store i64 %15, i64* %80, align 8
  %81 = getelementptr inbounds %"class.v8::internal::Signature", %"class.v8::internal::Signature"* %78, i64 0, i32 2
  %82 = bitcast %"class.v8::internal::wasm::ValueType"** %81 to i64*
  store i64 %32, i64* %82, align 8
  ret %"class.v8::internal::Signature"* %78
}

declare zeroext i1 @_ZN2v88internal4wasm7AsmType3IsAEPS2_(%"class.v8::internal::wasm::AsmType"*, %"class.v8::internal::wasm::AsmType"*) local_unnamed_addr #1

; Function Attrs: argmemonly nounwind
declare void @llvm.memcpy.p0i8.p0i8.i64(i8* nocapture writeonly, i8* nocapture readonly, i64, i1 immarg) #2

; Function Attrs: noreturn
declare void @_Z8V8_FatalPKcz(i8*, ...) local_unnamed_addr #3

; Function Attrs: nounwind ssp uwtable
define hidden zeroext i1 @_ZN2v88internal4wasm11AsmJsParser3RunEv(%"class.v8::internal::wasm::AsmJsParser"*) local_unnamed_addr #0 align 2 {
  tail call void @_ZN2v88internal4wasm11AsmJsParser14ValidateModuleEv(%"class.v8::internal::wasm::AsmJsParser"* %0)
  %2 = getelementptr inbounds %"class.v8::internal::wasm::AsmJsParser", %"class.v8::internal::wasm::AsmJsParser"* %0, i64 0, i32 17
  %3 = load i8, i8* %2, align 4, !range !69
  %4 = icmp eq i8 %3, 0
  ret i1 %4
}

; Function Attrs: nounwind ssp uwtable
define hidden void @_ZN2v88internal4wasm11AsmJsParser14ValidateModuleEv(%"class.v8::internal::wasm::AsmJsParser"*) local_unnamed_addr #0 align 2 {
  %2 = alloca %"class.v8::internal::Vector", align 8
  %3 = tail call i64 @_ZN2v88internal23GetCurrentStackPositionEv() #12
  %4 = getelementptr inbounds %"class.v8::internal::wasm::AsmJsParser", %"class.v8::internal::wasm::AsmJsParser"* %0, i64 0, i32 5
  %5 = load i64, i64* %4, align 8
  %6 = icmp ult i64 %3, %5
  br i1 %6, label %7, label %14

7:                                                ; preds = %1
  %8 = getelementptr inbounds %"class.v8::internal::wasm::AsmJsParser", %"class.v8::internal::wasm::AsmJsParser"* %0, i64 0, i32 17
  store i8 1, i8* %8, align 4
  %9 = getelementptr inbounds %"class.v8::internal::wasm::AsmJsParser", %"class.v8::internal::wasm::AsmJsParser"* %0, i64 0, i32 18
  store i8* getelementptr inbounds ([44 x i8], [44 x i8]* @.str.2, i64 0, i64 0), i8** %9, align 8
  %10 = getelementptr inbounds %"class.v8::internal::wasm::AsmJsParser", %"class.v8::internal::wasm::AsmJsParser"* %0, i64 0, i32 1, i32 5
  %11 = load i64, i64* %10, align 8
  %12 = trunc i64 %11 to i32
  %13 = getelementptr inbounds %"class.v8::internal::wasm::AsmJsParser", %"class.v8::internal::wasm::AsmJsParser"* %0, i64 0, i32 19
  store i32 %12, i32* %13, align 8
  br label %285

14:                                               ; preds = %1
  tail call void @_ZN2v88internal4wasm11AsmJsParser24ValidateModuleParametersEv(%"class.v8::internal::wasm::AsmJsParser"* %0)
  %15 = getelementptr inbounds %"class.v8::internal::wasm::AsmJsParser", %"class.v8::internal::wasm::AsmJsParser"* %0, i64 0, i32 17
  %16 = load i8, i8* %15, align 4, !range !69
  %17 = icmp eq i8 %16, 0
  br i1 %17, label %18, label %285

18:                                               ; preds = %14
  %19 = getelementptr inbounds %"class.v8::internal::wasm::AsmJsParser", %"class.v8::internal::wasm::AsmJsParser"* %0, i64 0, i32 1
  %20 = getelementptr inbounds %"class.v8::internal::wasm::AsmJsParser", %"class.v8::internal::wasm::AsmJsParser"* %0, i64 0, i32 1, i32 1
  %21 = load i32, i32* %20, align 8
  %22 = icmp eq i32 %21, 123
  br i1 %22, label %29, label %23

23:                                               ; preds = %18
  store i8 1, i8* %15, align 4
  %24 = getelementptr inbounds %"class.v8::internal::wasm::AsmJsParser", %"class.v8::internal::wasm::AsmJsParser"* %0, i64 0, i32 18
  store i8* getelementptr inbounds ([17 x i8], [17 x i8]* @.str.3, i64 0, i64 0), i8** %24, align 8
  %25 = getelementptr inbounds %"class.v8::internal::wasm::AsmJsParser", %"class.v8::internal::wasm::AsmJsParser"* %0, i64 0, i32 1, i32 5
  %26 = load i64, i64* %25, align 8
  %27 = trunc i64 %26 to i32
  %28 = getelementptr inbounds %"class.v8::internal::wasm::AsmJsParser", %"class.v8::internal::wasm::AsmJsParser"* %0, i64 0, i32 19
  store i32 %27, i32* %28, align 8
  br label %285

29:                                               ; preds = %18
  tail call void @_ZN2v88internal12AsmJsScanner4NextEv(%"class.v8::internal::AsmJsScanner"* %19) #12
  %30 = load i32, i32* %20, align 8
  %31 = icmp eq i32 %30, -9937
  br i1 %31, label %38, label %32

32:                                               ; preds = %29
  store i8 1, i8* %15, align 4
  %33 = getelementptr inbounds %"class.v8::internal::wasm::AsmJsParser", %"class.v8::internal::wasm::AsmJsParser"* %0, i64 0, i32 18
  store i8* getelementptr inbounds ([17 x i8], [17 x i8]* @.str.3, i64 0, i64 0), i8** %33, align 8
  %34 = getelementptr inbounds %"class.v8::internal::wasm::AsmJsParser", %"class.v8::internal::wasm::AsmJsParser"* %0, i64 0, i32 1, i32 5
  %35 = load i64, i64* %34, align 8
  %36 = trunc i64 %35 to i32
  %37 = getelementptr inbounds %"class.v8::internal::wasm::AsmJsParser", %"class.v8::internal::wasm::AsmJsParser"* %0, i64 0, i32 19
  store i32 %36, i32* %37, align 8
  br label %285

38:                                               ; preds = %29
  tail call void @_ZN2v88internal12AsmJsScanner4NextEv(%"class.v8::internal::AsmJsScanner"* %19) #12
  %39 = tail call i64 @_ZN2v88internal23GetCurrentStackPositionEv() #12
  %40 = load i64, i64* %4, align 8
  %41 = icmp ult i64 %39, %40
  br i1 %41, label %42, label %48

42:                                               ; preds = %38
  store i8 1, i8* %15, align 4
  %43 = getelementptr inbounds %"class.v8::internal::wasm::AsmJsParser", %"class.v8::internal::wasm::AsmJsParser"* %0, i64 0, i32 18
  store i8* getelementptr inbounds ([44 x i8], [44 x i8]* @.str.2, i64 0, i64 0), i8** %43, align 8
  %44 = getelementptr inbounds %"class.v8::internal::wasm::AsmJsParser", %"class.v8::internal::wasm::AsmJsParser"* %0, i64 0, i32 1, i32 5
  %45 = load i64, i64* %44, align 8
  %46 = trunc i64 %45 to i32
  %47 = getelementptr inbounds %"class.v8::internal::wasm::AsmJsParser", %"class.v8::internal::wasm::AsmJsParser"* %0, i64 0, i32 19
  store i32 %46, i32* %47, align 8
  br label %285

48:                                               ; preds = %38
  %49 = load i32, i32* %20, align 8
  switch i32 %49, label %51 [
    i32 59, label %50
    i32 125, label %61
  ]

50:                                               ; preds = %48
  tail call void @_ZN2v88internal12AsmJsScanner4NextEv(%"class.v8::internal::AsmJsScanner"* %19) #12
  br label %61

51:                                               ; preds = %48
  %52 = getelementptr inbounds %"class.v8::internal::wasm::AsmJsParser", %"class.v8::internal::wasm::AsmJsParser"* %0, i64 0, i32 1, i32 20
  %53 = load i8, i8* %52, align 4, !range !69
  %54 = icmp eq i8 %53, 0
  br i1 %54, label %55, label %61

55:                                               ; preds = %51
  store i8 1, i8* %15, align 4
  %56 = getelementptr inbounds %"class.v8::internal::wasm::AsmJsParser", %"class.v8::internal::wasm::AsmJsParser"* %0, i64 0, i32 18
  store i8* getelementptr inbounds ([11 x i8], [11 x i8]* @.str.1, i64 0, i64 0), i8** %56, align 8
  %57 = getelementptr inbounds %"class.v8::internal::wasm::AsmJsParser", %"class.v8::internal::wasm::AsmJsParser"* %0, i64 0, i32 1, i32 5
  %58 = load i64, i64* %57, align 8
  %59 = trunc i64 %58 to i32
  %60 = getelementptr inbounds %"class.v8::internal::wasm::AsmJsParser", %"class.v8::internal::wasm::AsmJsParser"* %0, i64 0, i32 19
  store i32 %59, i32* %60, align 8
  br label %61

61:                                               ; preds = %48, %50, %51, %55
  %62 = load i8, i8* %15, align 4, !range !69
  %63 = icmp eq i8 %62, 0
  br i1 %63, label %64, label %285

64:                                               ; preds = %61
  %65 = tail call i64 @_ZN2v88internal23GetCurrentStackPositionEv() #12
  %66 = load i64, i64* %4, align 8
  %67 = icmp ult i64 %65, %66
  br i1 %67, label %68, label %74

68:                                               ; preds = %64
  store i8 1, i8* %15, align 4
  %69 = getelementptr inbounds %"class.v8::internal::wasm::AsmJsParser", %"class.v8::internal::wasm::AsmJsParser"* %0, i64 0, i32 18
  store i8* getelementptr inbounds ([44 x i8], [44 x i8]* @.str.2, i64 0, i64 0), i8** %69, align 8
  %70 = getelementptr inbounds %"class.v8::internal::wasm::AsmJsParser", %"class.v8::internal::wasm::AsmJsParser"* %0, i64 0, i32 1, i32 5
  %71 = load i64, i64* %70, align 8
  %72 = trunc i64 %71 to i32
  %73 = getelementptr inbounds %"class.v8::internal::wasm::AsmJsParser", %"class.v8::internal::wasm::AsmJsParser"* %0, i64 0, i32 19
  store i32 %72, i32* %73, align 8
  br label %285

74:                                               ; preds = %64
  tail call void @_ZN2v88internal4wasm11AsmJsParser18ValidateModuleVarsEv(%"class.v8::internal::wasm::AsmJsParser"* %0)
  %75 = load i8, i8* %15, align 4, !range !69
  %76 = icmp eq i8 %75, 0
  br i1 %76, label %77, label %285

77:                                               ; preds = %74, %95
  %78 = load i32, i32* %20, align 8
  %79 = icmp eq i32 %78, -9951
  br i1 %79, label %85, label %80

80:                                               ; preds = %77
  %81 = icmp eq i32 %78, -9946
  %82 = tail call i64 @_ZN2v88internal23GetCurrentStackPositionEv() #12
  %83 = load i64, i64* %4, align 8
  %84 = icmp ult i64 %82, %83
  br i1 %81, label %104, label %115

85:                                               ; preds = %77
  %86 = tail call i64 @_ZN2v88internal23GetCurrentStackPositionEv() #12
  %87 = load i64, i64* %4, align 8
  %88 = icmp ult i64 %86, %87
  br i1 %88, label %89, label %95

89:                                               ; preds = %85
  store i8 1, i8* %15, align 4
  %90 = getelementptr inbounds %"class.v8::internal::wasm::AsmJsParser", %"class.v8::internal::wasm::AsmJsParser"* %0, i64 0, i32 18
  store i8* getelementptr inbounds ([44 x i8], [44 x i8]* @.str.2, i64 0, i64 0), i8** %90, align 8
  %91 = getelementptr inbounds %"class.v8::internal::wasm::AsmJsParser", %"class.v8::internal::wasm::AsmJsParser"* %0, i64 0, i32 1, i32 5
  %92 = load i64, i64* %91, align 8
  %93 = trunc i64 %92 to i32
  %94 = getelementptr inbounds %"class.v8::internal::wasm::AsmJsParser", %"class.v8::internal::wasm::AsmJsParser"* %0, i64 0, i32 19
  store i32 %93, i32* %94, align 8
  br label %285

95:                                               ; preds = %85
  tail call void @_ZN2v88internal4wasm11AsmJsParser16ValidateFunctionEv(%"class.v8::internal::wasm::AsmJsParser"* %0)
  %96 = load i8, i8* %15, align 4, !range !69
  %97 = icmp eq i8 %96, 0
  br i1 %97, label %77, label %285

98:                                               ; preds = %112
  %99 = load i32, i32* %20, align 8
  %100 = icmp eq i32 %99, -9946
  %101 = tail call i64 @_ZN2v88internal23GetCurrentStackPositionEv() #12
  %102 = load i64, i64* %4, align 8
  %103 = icmp ult i64 %101, %102
  br i1 %100, label %104, label %115

104:                                              ; preds = %80, %98
  %105 = phi i1 [ %103, %98 ], [ %84, %80 ]
  br i1 %105, label %106, label %112

106:                                              ; preds = %104
  store i8 1, i8* %15, align 4
  %107 = getelementptr inbounds %"class.v8::internal::wasm::AsmJsParser", %"class.v8::internal::wasm::AsmJsParser"* %0, i64 0, i32 18
  store i8* getelementptr inbounds ([44 x i8], [44 x i8]* @.str.2, i64 0, i64 0), i8** %107, align 8
  %108 = getelementptr inbounds %"class.v8::internal::wasm::AsmJsParser", %"class.v8::internal::wasm::AsmJsParser"* %0, i64 0, i32 1, i32 5
  %109 = load i64, i64* %108, align 8
  %110 = trunc i64 %109 to i32
  %111 = getelementptr inbounds %"class.v8::internal::wasm::AsmJsParser", %"class.v8::internal::wasm::AsmJsParser"* %0, i64 0, i32 19
  store i32 %110, i32* %111, align 8
  br label %285

112:                                              ; preds = %104
  tail call void @_ZN2v88internal4wasm11AsmJsParser21ValidateFunctionTableEv(%"class.v8::internal::wasm::AsmJsParser"* %0)
  %113 = load i8, i8* %15, align 4, !range !69
  %114 = icmp eq i8 %113, 0
  br i1 %114, label %98, label %285

115:                                              ; preds = %98, %80
  %116 = phi i1 [ %84, %80 ], [ %103, %98 ]
  br i1 %116, label %117, label %123

117:                                              ; preds = %115
  store i8 1, i8* %15, align 4
  %118 = getelementptr inbounds %"class.v8::internal::wasm::AsmJsParser", %"class.v8::internal::wasm::AsmJsParser"* %0, i64 0, i32 18
  store i8* getelementptr inbounds ([44 x i8], [44 x i8]* @.str.2, i64 0, i64 0), i8** %118, align 8
  %119 = getelementptr inbounds %"class.v8::internal::wasm::AsmJsParser", %"class.v8::internal::wasm::AsmJsParser"* %0, i64 0, i32 1, i32 5
  %120 = load i64, i64* %119, align 8
  %121 = trunc i64 %120 to i32
  %122 = getelementptr inbounds %"class.v8::internal::wasm::AsmJsParser", %"class.v8::internal::wasm::AsmJsParser"* %0, i64 0, i32 19
  store i32 %121, i32* %122, align 8
  br label %285

123:                                              ; preds = %115
  tail call void @_ZN2v88internal4wasm11AsmJsParser14ValidateExportEv(%"class.v8::internal::wasm::AsmJsParser"* %0)
  %124 = load i8, i8* %15, align 4, !range !69
  %125 = icmp eq i8 %124, 0
  br i1 %125, label %126, label %285

126:                                              ; preds = %123
  %127 = tail call i64 @_ZN2v88internal23GetCurrentStackPositionEv() #12
  %128 = load i64, i64* %4, align 8
  %129 = icmp ult i64 %127, %128
  br i1 %129, label %130, label %136

130:                                              ; preds = %126
  store i8 1, i8* %15, align 4
  %131 = getelementptr inbounds %"class.v8::internal::wasm::AsmJsParser", %"class.v8::internal::wasm::AsmJsParser"* %0, i64 0, i32 18
  store i8* getelementptr inbounds ([44 x i8], [44 x i8]* @.str.2, i64 0, i64 0), i8** %131, align 8
  %132 = getelementptr inbounds %"class.v8::internal::wasm::AsmJsParser", %"class.v8::internal::wasm::AsmJsParser"* %0, i64 0, i32 1, i32 5
  %133 = load i64, i64* %132, align 8
  %134 = trunc i64 %133 to i32
  %135 = getelementptr inbounds %"class.v8::internal::wasm::AsmJsParser", %"class.v8::internal::wasm::AsmJsParser"* %0, i64 0, i32 19
  store i32 %134, i32* %135, align 8
  br label %285

136:                                              ; preds = %126
  %137 = load i32, i32* %20, align 8
  switch i32 %137, label %139 [
    i32 59, label %138
    i32 125, label %149
  ]

138:                                              ; preds = %136
  tail call void @_ZN2v88internal12AsmJsScanner4NextEv(%"class.v8::internal::AsmJsScanner"* %19) #12
  br label %149

139:                                              ; preds = %136
  %140 = getelementptr inbounds %"class.v8::internal::wasm::AsmJsParser", %"class.v8::internal::wasm::AsmJsParser"* %0, i64 0, i32 1, i32 20
  %141 = load i8, i8* %140, align 4, !range !69
  %142 = icmp eq i8 %141, 0
  br i1 %142, label %143, label %149

143:                                              ; preds = %139
  store i8 1, i8* %15, align 4
  %144 = getelementptr inbounds %"class.v8::internal::wasm::AsmJsParser", %"class.v8::internal::wasm::AsmJsParser"* %0, i64 0, i32 18
  store i8* getelementptr inbounds ([11 x i8], [11 x i8]* @.str.1, i64 0, i64 0), i8** %144, align 8
  %145 = getelementptr inbounds %"class.v8::internal::wasm::AsmJsParser", %"class.v8::internal::wasm::AsmJsParser"* %0, i64 0, i32 1, i32 5
  %146 = load i64, i64* %145, align 8
  %147 = trunc i64 %146 to i32
  %148 = getelementptr inbounds %"class.v8::internal::wasm::AsmJsParser", %"class.v8::internal::wasm::AsmJsParser"* %0, i64 0, i32 19
  store i32 %147, i32* %148, align 8
  br label %149

149:                                              ; preds = %136, %138, %139, %143
  %150 = load i8, i8* %15, align 4, !range !69
  %151 = icmp eq i8 %150, 0
  br i1 %151, label %152, label %285

152:                                              ; preds = %149
  %153 = load i32, i32* %20, align 8
  %154 = icmp eq i32 %153, 125
  br i1 %154, label %161, label %155

155:                                              ; preds = %152
  store i8 1, i8* %15, align 4
  %156 = getelementptr inbounds %"class.v8::internal::wasm::AsmJsParser", %"class.v8::internal::wasm::AsmJsParser"* %0, i64 0, i32 18
  store i8* getelementptr inbounds ([17 x i8], [17 x i8]* @.str.3, i64 0, i64 0), i8** %156, align 8
  %157 = getelementptr inbounds %"class.v8::internal::wasm::AsmJsParser", %"class.v8::internal::wasm::AsmJsParser"* %0, i64 0, i32 1, i32 5
  %158 = load i64, i64* %157, align 8
  %159 = trunc i64 %158 to i32
  %160 = getelementptr inbounds %"class.v8::internal::wasm::AsmJsParser", %"class.v8::internal::wasm::AsmJsParser"* %0, i64 0, i32 19
  store i32 %159, i32* %160, align 8
  br label %285

161:                                              ; preds = %152
  tail call void @_ZN2v88internal12AsmJsScanner4NextEv(%"class.v8::internal::AsmJsScanner"* %19) #12
  %162 = getelementptr inbounds %"class.v8::internal::wasm::AsmJsParser", %"class.v8::internal::wasm::AsmJsParser"* %0, i64 0, i32 9
  %163 = load i64, i64* %162, align 8
  %164 = getelementptr inbounds %"class.v8::internal::wasm::AsmJsParser", %"class.v8::internal::wasm::AsmJsParser"* %0, i64 0, i32 7, i32 0
  %165 = load %"struct.v8::internal::wasm::AsmJsParser::VarInfo"*, %"struct.v8::internal::wasm::AsmJsParser::VarInfo"** %164, align 8
  %166 = getelementptr inbounds %"struct.v8::internal::wasm::AsmJsParser::VarInfo", %"struct.v8::internal::wasm::AsmJsParser::VarInfo"* %165, i64 %163
  %167 = icmp eq i64 %163, 0
  br i1 %167, label %228, label %168

168:                                              ; preds = %161
  %169 = getelementptr inbounds %"class.v8::internal::wasm::AsmJsParser", %"class.v8::internal::wasm::AsmJsParser"* %0, i64 0, i32 0
  %170 = getelementptr inbounds %"class.v8::internal::wasm::AsmJsParser", %"class.v8::internal::wasm::AsmJsParser"* %0, i64 0, i32 2
  br label %171

171:                                              ; preds = %168, %225
  %172 = phi %"struct.v8::internal::wasm::AsmJsParser::VarInfo"* [ %165, %168 ], [ %226, %225 ]
  %173 = getelementptr inbounds %"struct.v8::internal::wasm::AsmJsParser::VarInfo", %"struct.v8::internal::wasm::AsmJsParser::VarInfo"* %172, i64 0, i32 5
  %174 = load i32, i32* %173, align 8
  switch i32 %174, label %225 [
    i32 4, label %175
    i32 5, label %185
    i32 6, label %195
  ]

175:                                              ; preds = %171
  %176 = getelementptr inbounds %"struct.v8::internal::wasm::AsmJsParser::VarInfo", %"struct.v8::internal::wasm::AsmJsParser::VarInfo"* %172, i64 0, i32 7
  %177 = load i8, i8* %176, align 1, !range !69
  %178 = icmp eq i8 %177, 0
  br i1 %178, label %179, label %225

179:                                              ; preds = %175
  store i8 1, i8* %15, align 4
  %180 = getelementptr inbounds %"class.v8::internal::wasm::AsmJsParser", %"class.v8::internal::wasm::AsmJsParser"* %0, i64 0, i32 18
  store i8* getelementptr inbounds ([19 x i8], [19 x i8]* @.str.4, i64 0, i64 0), i8** %180, align 8
  %181 = getelementptr inbounds %"class.v8::internal::wasm::AsmJsParser", %"class.v8::internal::wasm::AsmJsParser"* %0, i64 0, i32 1, i32 5
  %182 = load i64, i64* %181, align 8
  %183 = trunc i64 %182 to i32
  %184 = getelementptr inbounds %"class.v8::internal::wasm::AsmJsParser", %"class.v8::internal::wasm::AsmJsParser"* %0, i64 0, i32 19
  store i32 %183, i32* %184, align 8
  br label %285

185:                                              ; preds = %171
  %186 = getelementptr inbounds %"struct.v8::internal::wasm::AsmJsParser::VarInfo", %"struct.v8::internal::wasm::AsmJsParser::VarInfo"* %172, i64 0, i32 7
  %187 = load i8, i8* %186, align 1, !range !69
  %188 = icmp eq i8 %187, 0
  br i1 %188, label %189, label %225

189:                                              ; preds = %185
  store i8 1, i8* %15, align 4
  %190 = getelementptr inbounds %"class.v8::internal::wasm::AsmJsParser", %"class.v8::internal::wasm::AsmJsParser"* %0, i64 0, i32 18
  store i8* getelementptr inbounds ([25 x i8], [25 x i8]* @.str.5, i64 0, i64 0), i8** %190, align 8
  %191 = getelementptr inbounds %"class.v8::internal::wasm::AsmJsParser", %"class.v8::internal::wasm::AsmJsParser"* %0, i64 0, i32 1, i32 5
  %192 = load i64, i64* %191, align 8
  %193 = trunc i64 %192 to i32
  %194 = getelementptr inbounds %"class.v8::internal::wasm::AsmJsParser", %"class.v8::internal::wasm::AsmJsParser"* %0, i64 0, i32 19
  store i32 %193, i32* %194, align 8
  br label %285

195:                                              ; preds = %171
  %196 = getelementptr inbounds %"struct.v8::internal::wasm::AsmJsParser::VarInfo", %"struct.v8::internal::wasm::AsmJsParser::VarInfo"* %172, i64 0, i32 7
  %197 = load i8, i8* %196, align 1, !range !69
  %198 = icmp eq i8 %197, 0
  br i1 %198, label %199, label %225

199:                                              ; preds = %195
  %200 = load %"class.v8::internal::Zone"*, %"class.v8::internal::Zone"** %169, align 8
  %201 = getelementptr inbounds %"class.v8::internal::Zone", %"class.v8::internal::Zone"* %200, i64 0, i32 2
  %202 = load i64, i64* %201, align 8
  %203 = getelementptr inbounds %"class.v8::internal::Zone", %"class.v8::internal::Zone"* %200, i64 0, i32 3
  %204 = load i64, i64* %203, align 8
  %205 = sub i64 %204, %202
  %206 = icmp ult i64 %205, 24
  br i1 %206, label %207, label %209, !prof !2

207:                                              ; preds = %199
  %208 = tail call i64 @_ZN2v88internal4Zone9NewExpandEm(%"class.v8::internal::Zone"* %200, i64 24) #12
  br label %211

209:                                              ; preds = %199
  %210 = add i64 %202, 24
  store i64 %210, i64* %201, align 8
  br label %211

211:                                              ; preds = %207, %209
  %212 = phi i64 [ %208, %207 ], [ %202, %209 ]
  %213 = inttoptr i64 %212 to %"class.v8::internal::Signature"*
  %214 = getelementptr inbounds %"class.v8::internal::Signature", %"class.v8::internal::Signature"* %213, i64 0, i32 2
  %215 = bitcast %"class.v8::internal::wasm::ValueType"** %214 to i64*
  %216 = inttoptr i64 %212 to i8*
  call void @llvm.memset.p0i8.i64(i8* align 8 %216, i8 0, i64 16, i1 false)
  store i64 %202, i64* %215, align 8
  %217 = load %"class.v8::internal::wasm::WasmModuleBuilder"*, %"class.v8::internal::wasm::WasmModuleBuilder"** %170, align 8
  %218 = getelementptr inbounds %"struct.v8::internal::wasm::AsmJsParser::VarInfo", %"struct.v8::internal::wasm::AsmJsParser::VarInfo"* %172, i64 0, i32 2
  %219 = load %"struct.v8::internal::wasm::AsmJsParser::FunctionImportInfo"*, %"struct.v8::internal::wasm::AsmJsParser::FunctionImportInfo"** %218, align 8
  %220 = getelementptr inbounds %"struct.v8::internal::wasm::AsmJsParser::FunctionImportInfo", %"struct.v8::internal::wasm::AsmJsParser::FunctionImportInfo"* %219, i64 0, i32 0, i32 0
  %221 = load i8*, i8** %220, align 8
  %222 = getelementptr inbounds %"struct.v8::internal::wasm::AsmJsParser::FunctionImportInfo", %"struct.v8::internal::wasm::AsmJsParser::FunctionImportInfo"* %219, i64 0, i32 0, i32 1
  %223 = load i64, i64* %222, align 8
  %224 = tail call i32 @_ZN2v88internal4wasm17WasmModuleBuilder9AddImportENS0_6VectorIKcEEPNS0_9SignatureINS1_9ValueTypeEEES5_(%"class.v8::internal::wasm::WasmModuleBuilder"* %217, i8* %221, i64 %223, %"class.v8::internal::Signature"* %213, i8* null, i64 0) #12
  br label %225

225:                                              ; preds = %171, %175, %185, %195, %211
  %226 = getelementptr inbounds %"struct.v8::internal::wasm::AsmJsParser::VarInfo", %"struct.v8::internal::wasm::AsmJsParser::VarInfo"* %172, i64 1
  %227 = icmp eq %"struct.v8::internal::wasm::AsmJsParser::VarInfo"* %226, %166
  br i1 %227, label %228, label %171

228:                                              ; preds = %225, %161
  %229 = getelementptr inbounds %"class.v8::internal::wasm::AsmJsParser", %"class.v8::internal::wasm::AsmJsParser"* %0, i64 0, i32 2
  %230 = load %"class.v8::internal::wasm::WasmModuleBuilder"*, %"class.v8::internal::wasm::WasmModuleBuilder"** %229, align 8
  %231 = tail call %"class.v8::internal::wasm::WasmFunctionBuilder"* @_ZN2v88internal4wasm17WasmModuleBuilder11AddFunctionEPNS0_9SignatureINS1_9ValueTypeEEE(%"class.v8::internal::wasm::WasmModuleBuilder"* %230, %"class.v8::internal::Signature"* null) #12
  %232 = load %"class.v8::internal::wasm::WasmModuleBuilder"*, %"class.v8::internal::wasm::WasmModuleBuilder"** %229, align 8
  tail call void @_ZN2v88internal4wasm17WasmModuleBuilder17MarkStartFunctionEPNS1_19WasmFunctionBuilderE(%"class.v8::internal::wasm::WasmModuleBuilder"* %232, %"class.v8::internal::wasm::WasmFunctionBuilder"* %231) #12
  %233 = getelementptr inbounds %"class.v8::internal::wasm::AsmJsParser", %"class.v8::internal::wasm::AsmJsParser"* %0, i64 0, i32 41, i32 0, i32 0, i32 0, i32 1
  %234 = getelementptr inbounds %"class.v8::internal::wasm::AsmJsParser", %"class.v8::internal::wasm::AsmJsParser"* %0, i64 0, i32 41, i32 0, i32 0, i32 0
  %235 = bitcast %"struct.std::__1::__list_node_base"** %233 to i64*
  %236 = load i64, i64* %235, align 8
  %237 = inttoptr i64 %236 to %"struct.std::__1::__list_node_base"*
  %238 = icmp eq %"struct.std::__1::__list_node_base"* %234, %237
  br i1 %238, label %242, label %239

239:                                              ; preds = %228
  %240 = bitcast %"class.v8::internal::Vector"* %2 to i8*
  %241 = getelementptr inbounds %"class.v8::internal::wasm::AsmJsParser", %"class.v8::internal::wasm::AsmJsParser"* %0, i64 0, i32 41, i32 0, i32 0, i32 1, i32 0, i32 0
  br label %261

242:                                              ; preds = %261, %228
  tail call void @_ZN2v88internal4wasm19WasmFunctionBuilder4EmitENS1_10WasmOpcodeE(%"class.v8::internal::wasm::WasmFunctionBuilder"* %231, i32 11) #12
  %243 = getelementptr inbounds %"class.v8::internal::wasm::AsmJsParser", %"class.v8::internal::wasm::AsmJsParser"* %0, i64 0, i32 0
  %244 = load %"class.v8::internal::Zone"*, %"class.v8::internal::Zone"** %243, align 8
  %245 = getelementptr inbounds %"class.v8::internal::Zone", %"class.v8::internal::Zone"* %244, i64 0, i32 2
  %246 = load i64, i64* %245, align 8
  %247 = getelementptr inbounds %"class.v8::internal::Zone", %"class.v8::internal::Zone"* %244, i64 0, i32 3
  %248 = load i64, i64* %247, align 8
  %249 = sub i64 %248, %246
  %250 = icmp ult i64 %249, 24
  br i1 %250, label %251, label %253, !prof !2

251:                                              ; preds = %242
  %252 = tail call i64 @_ZN2v88internal4Zone9NewExpandEm(%"class.v8::internal::Zone"* %244, i64 24) #12
  br label %255

253:                                              ; preds = %242
  %254 = add i64 %246, 24
  store i64 %254, i64* %245, align 8
  br label %255

255:                                              ; preds = %251, %253
  %256 = phi i64 [ %252, %251 ], [ %246, %253 ]
  %257 = inttoptr i64 %256 to %"class.v8::internal::Signature"*
  %258 = getelementptr inbounds %"class.v8::internal::Signature", %"class.v8::internal::Signature"* %257, i64 0, i32 2
  %259 = bitcast %"class.v8::internal::wasm::ValueType"** %258 to i64*
  %260 = inttoptr i64 %256 to i8*
  call void @llvm.memset.p0i8.i64(i8* align 8 %260, i8 0, i64 16, i1 false)
  store i64 %246, i64* %259, align 8
  tail call void @_ZN2v88internal4wasm19WasmFunctionBuilder12SetSignatureEPNS0_9SignatureINS1_9ValueTypeEEE(%"class.v8::internal::wasm::WasmFunctionBuilder"* %231, %"class.v8::internal::Signature"* %257) #12
  br label %285

261:                                              ; preds = %239, %261
  %262 = phi %"struct.std::__1::__list_node_base"* [ %237, %239 ], [ %283, %261 ]
  %263 = phi i64 [ %236, %239 ], [ %282, %261 ]
  %264 = inttoptr i64 %263 to %"struct.std::__1::__list_node"*
  %265 = load %"class.v8::internal::wasm::WasmModuleBuilder"*, %"class.v8::internal::wasm::WasmModuleBuilder"** %229, align 8
  %266 = getelementptr inbounds %"struct.std::__1::__list_node", %"struct.std::__1::__list_node"* %264, i64 0, i32 1, i32 0, i32 0
  %267 = load i8*, i8** %266, align 8
  %268 = getelementptr inbounds %"struct.std::__1::__list_node", %"struct.std::__1::__list_node"* %264, i64 0, i32 1, i32 0, i32 1
  %269 = load i64, i64* %268, align 8
  %270 = getelementptr inbounds %"struct.std::__1::__list_node", %"struct.std::__1::__list_node"* %264, i64 0, i32 1, i32 1, i32 0
  %271 = load i32, i32* %270, align 8
  call void @llvm.memset.p0i8.i64(i8* nonnull align 8 %240, i8 0, i64 16, i1 false) #12
  %272 = tail call i32 @_ZN2v88internal4wasm17WasmModuleBuilder15AddGlobalImportENS0_6VectorIKcEENS1_9ValueTypeEbS5_(%"class.v8::internal::wasm::WasmModuleBuilder"* %265, i8* %267, i64 %269, i32 %271, i1 zeroext false, %"class.v8::internal::Vector"* nonnull byval(%"class.v8::internal::Vector") align 8 %2) #12
  tail call void @_ZN2v88internal4wasm19WasmFunctionBuilder12EmitWithI32VENS1_10WasmOpcodeEi(%"class.v8::internal::wasm::WasmFunctionBuilder"* %231, i32 35, i32 %272) #12
  %273 = getelementptr inbounds %"struct.std::__1::__list_node", %"struct.std::__1::__list_node"* %264, i64 0, i32 1, i32 2
  %274 = load %"struct.v8::internal::wasm::AsmJsParser::VarInfo"*, %"struct.v8::internal::wasm::AsmJsParser::VarInfo"** %273, align 8
  %275 = getelementptr inbounds %"struct.v8::internal::wasm::AsmJsParser::VarInfo", %"struct.v8::internal::wasm::AsmJsParser::VarInfo"* %274, i64 0, i32 4
  %276 = load i32, i32* %275, align 4
  %277 = load i64, i64* %241, align 8
  %278 = trunc i64 %277 to i32
  %279 = add i32 %276, %278
  tail call void @_ZN2v88internal4wasm19WasmFunctionBuilder12EmitWithI32VENS1_10WasmOpcodeEi(%"class.v8::internal::wasm::WasmFunctionBuilder"* %231, i32 36, i32 %279) #12
  %280 = getelementptr inbounds %"struct.std::__1::__list_node_base", %"struct.std::__1::__list_node_base"* %262, i64 0, i32 1
  %281 = bitcast %"struct.std::__1::__list_node_base"** %280 to i64*
  %282 = load i64, i64* %281, align 8
  %283 = inttoptr i64 %282 to %"struct.std::__1::__list_node_base"*
  %284 = icmp eq %"struct.std::__1::__list_node_base"* %234, %283
  br i1 %284, label %242, label %261

285:                                              ; preds = %95, %112, %179, %189, %149, %123, %74, %61, %14, %255, %155, %130, %117, %106, %89, %68, %42, %32, %23, %7
  ret void
}

; Function Attrs: nounwind ssp uwtable
define hidden %"struct.v8::internal::wasm::AsmJsParser::VarInfo"* @_ZN2v88internal4wasm11AsmJsParser10GetVarInfoEi(%"class.v8::internal::wasm::AsmJsParser"* nocapture, i32) local_unnamed_addr #0 align 2 {
  %3 = icmp sgt i32 %1, 255
  %4 = getelementptr inbounds %"class.v8::internal::wasm::AsmJsParser", %"class.v8::internal::wasm::AsmJsParser"* %0, i64 0, i32 7
  %5 = getelementptr inbounds %"class.v8::internal::wasm::AsmJsParser", %"class.v8::internal::wasm::AsmJsParser"* %0, i64 0, i32 8
  %6 = select i1 %3, %"class.v8::internal::Vector.160"* %4, %"class.v8::internal::Vector.160"* %5
  %7 = getelementptr inbounds %"class.v8::internal::Vector.160", %"class.v8::internal::Vector.160"* %6, i64 0, i32 1
  %8 = load i64, i64* %7, align 8
  br i1 %3, label %12, label %9

9:                                                ; preds = %2
  %10 = sub nsw i32 -10000, %1
  %11 = sext i32 %10 to i64
  br label %20

12:                                               ; preds = %2
  %13 = add nsw i32 %1, -256
  %14 = sext i32 %13 to i64
  %15 = getelementptr inbounds %"class.v8::internal::wasm::AsmJsParser", %"class.v8::internal::wasm::AsmJsParser"* %0, i64 0, i32 9
  %16 = load i64, i64* %15, align 8
  %17 = icmp ugt i64 %16, %14
  br i1 %17, label %20, label %18

18:                                               ; preds = %12
  %19 = add nuw nsw i64 %14, 1
  store i64 %19, i64* %15, align 8
  br label %20

20:                                               ; preds = %12, %9, %18
  %21 = phi i64 [ %14, %18 ], [ %14, %12 ], [ %11, %9 ]
  %22 = add nsw i64 %21, 1
  %23 = icmp ugt i64 %22, %8
  br i1 %23, label %27, label %24

24:                                               ; preds = %20
  %25 = getelementptr inbounds %"class.v8::internal::Vector.160", %"class.v8::internal::Vector.160"* %6, i64 0, i32 0
  %26 = load %"struct.v8::internal::wasm::AsmJsParser::VarInfo"*, %"struct.v8::internal::wasm::AsmJsParser::VarInfo"** %25, align 8
  br label %68

27:                                               ; preds = %20
  %28 = shl i64 %8, 1
  %29 = icmp ult i64 %28, %22
  %30 = select i1 %29, i64 %22, i64 %28
  %31 = getelementptr inbounds %"class.v8::internal::wasm::AsmJsParser", %"class.v8::internal::wasm::AsmJsParser"* %0, i64 0, i32 0
  %32 = load %"class.v8::internal::Zone"*, %"class.v8::internal::Zone"** %31, align 8
  %33 = mul i64 %30, 40
  %34 = getelementptr inbounds %"class.v8::internal::Zone", %"class.v8::internal::Zone"* %32, i64 0, i32 2
  %35 = load i64, i64* %34, align 8
  %36 = getelementptr inbounds %"class.v8::internal::Zone", %"class.v8::internal::Zone"* %32, i64 0, i32 3
  %37 = load i64, i64* %36, align 8
  %38 = sub i64 %37, %35
  %39 = icmp ugt i64 %33, %38
  br i1 %39, label %40, label %42, !prof !2

40:                                               ; preds = %27
  %41 = tail call i64 @_ZN2v88internal4Zone9NewExpandEm(%"class.v8::internal::Zone"* %32, i64 %33) #12
  br label %44

42:                                               ; preds = %27
  %43 = add i64 %35, %33
  store i64 %43, i64* %34, align 8
  br label %44

44:                                               ; preds = %40, %42
  %45 = phi i64 [ %41, %40 ], [ %35, %42 ]
  %46 = inttoptr i64 %45 to %"struct.v8::internal::wasm::AsmJsParser::VarInfo"*
  %47 = getelementptr inbounds %"struct.v8::internal::wasm::AsmJsParser::VarInfo", %"struct.v8::internal::wasm::AsmJsParser::VarInfo"* %46, i64 %30
  %48 = icmp eq i64 %30, 0
  br i1 %48, label %58, label %49

49:                                               ; preds = %44, %49
  %50 = phi %"struct.v8::internal::wasm::AsmJsParser::VarInfo"* [ %56, %49 ], [ %46, %44 ]
  %51 = getelementptr inbounds %"struct.v8::internal::wasm::AsmJsParser::VarInfo", %"struct.v8::internal::wasm::AsmJsParser::VarInfo"* %50, i64 0, i32 0
  store %"class.v8::internal::wasm::AsmType"* inttoptr (i64 2147483649 to %"class.v8::internal::wasm::AsmType"*), %"class.v8::internal::wasm::AsmType"** %51, align 8
  %52 = getelementptr inbounds %"struct.v8::internal::wasm::AsmJsParser::VarInfo", %"struct.v8::internal::wasm::AsmJsParser::VarInfo"* %50, i64 0, i32 1
  %53 = getelementptr inbounds %"struct.v8::internal::wasm::AsmJsParser::VarInfo", %"struct.v8::internal::wasm::AsmJsParser::VarInfo"* %50, i64 0, i32 6
  %54 = bitcast %"class.v8::internal::wasm::WasmFunctionBuilder"** %52 to i8*
  call void @llvm.memset.p0i8.i64(i8* align 8 %54, i8 0, i64 28, i1 false)
  store i8 1, i8* %53, align 4
  %55 = getelementptr inbounds %"struct.v8::internal::wasm::AsmJsParser::VarInfo", %"struct.v8::internal::wasm::AsmJsParser::VarInfo"* %50, i64 0, i32 7
  store i8 0, i8* %55, align 1
  %56 = getelementptr inbounds %"struct.v8::internal::wasm::AsmJsParser::VarInfo", %"struct.v8::internal::wasm::AsmJsParser::VarInfo"* %50, i64 1
  %57 = icmp eq %"struct.v8::internal::wasm::AsmJsParser::VarInfo"* %56, %47
  br i1 %57, label %58, label %49

58:                                               ; preds = %49, %44
  %59 = getelementptr inbounds %"class.v8::internal::Vector.160", %"class.v8::internal::Vector.160"* %6, i64 0, i32 0
  %60 = load i64, i64* %7, align 8
  %61 = mul nuw i64 %60, 40
  %62 = icmp eq i64 %61, 0
  br i1 %62, label %67, label %63

63:                                               ; preds = %58
  %64 = bitcast %"class.v8::internal::Vector.160"* %6 to i8**
  %65 = load i8*, i8** %64, align 8
  %66 = inttoptr i64 %45 to i8*
  tail call void @llvm.memmove.p0i8.p0i8.i64(i8* align 8 %66, i8* align 8 %65, i64 %61, i1 false) #12
  br label %67

67:                                               ; preds = %58, %63
  store %"struct.v8::internal::wasm::AsmJsParser::VarInfo"* %46, %"struct.v8::internal::wasm::AsmJsParser::VarInfo"** %59, align 8
  store i64 %30, i64* %7, align 8
  br label %68

68:                                               ; preds = %24, %67
  %69 = phi %"struct.v8::internal::wasm::AsmJsParser::VarInfo"* [ %26, %24 ], [ %46, %67 ]
  %70 = getelementptr inbounds %"struct.v8::internal::wasm::AsmJsParser::VarInfo", %"struct.v8::internal::wasm::AsmJsParser::VarInfo"* %69, i64 %21
  ret %"struct.v8::internal::wasm::AsmJsParser::VarInfo"* %70
}

; Function Attrs: norecurse nounwind readonly ssp uwtable
define hidden i32 @_ZN2v88internal4wasm11AsmJsParser8VarIndexEPNS2_7VarInfoE(%"class.v8::internal::wasm::AsmJsParser"* nocapture readonly, %"struct.v8::internal::wasm::AsmJsParser::VarInfo"* nocapture readonly) local_unnamed_addr #4 align 2 {
  %3 = getelementptr inbounds %"struct.v8::internal::wasm::AsmJsParser::VarInfo", %"struct.v8::internal::wasm::AsmJsParser::VarInfo"* %1, i64 0, i32 4
  %4 = load i32, i32* %3, align 4
  %5 = getelementptr inbounds %"class.v8::internal::wasm::AsmJsParser", %"class.v8::internal::wasm::AsmJsParser"* %0, i64 0, i32 41, i32 0, i32 0, i32 1, i32 0, i32 0
  %6 = load i64, i64* %5, align 8
  %7 = trunc i64 %6 to i32
  %8 = add i32 %4, %7
  ret i32 %8
}

; Function Attrs: nounwind ssp uwtable
define hidden void @_ZN2v88internal4wasm11AsmJsParser15AddGlobalImportENS0_6VectorIKcEEPNS1_7AsmTypeENS1_9ValueTypeEbPNS2_7VarInfoE(%"class.v8::internal::wasm::AsmJsParser"*, i8*, i64, %"class.v8::internal::wasm::AsmType"*, i32, i1 zeroext, %"struct.v8::internal::wasm::AsmJsParser::VarInfo"*) local_unnamed_addr #0 align 2 {
  %8 = alloca %"class.v8::internal::wasm::WasmInitExpr", align 8
  %9 = alloca %"class.v8::internal::wasm::WasmInitExpr", align 8
  %10 = bitcast %"class.v8::internal::wasm::WasmInitExpr"* %9 to i8*
  call void @llvm.lifetime.start.p0i8(i64 32, i8* nonnull %10)
  %11 = bitcast %"class.v8::internal::wasm::WasmInitExpr"* %8 to i8*
  call void @llvm.lifetime.start.p0i8(i64 32, i8* nonnull %11)
  %12 = bitcast %"class.v8::internal::wasm::WasmInitExpr"* %9 to i32*
  store i32 0, i32* %12, align 8
  %13 = getelementptr inbounds %"class.v8::internal::wasm::WasmInitExpr", %"class.v8::internal::wasm::WasmInitExpr"* %9, i64 0, i32 1
  store i32 0, i32* %13, align 8
  %14 = zext i1 %5 to i8
  %15 = getelementptr inbounds %"struct.v8::internal::wasm::AsmJsParser::VarInfo", %"struct.v8::internal::wasm::AsmJsParser::VarInfo"* %6, i64 0, i32 5
  store i32 2, i32* %15, align 8
  %16 = getelementptr inbounds %"struct.v8::internal::wasm::AsmJsParser::VarInfo", %"struct.v8::internal::wasm::AsmJsParser::VarInfo"* %6, i64 0, i32 0
  store %"class.v8::internal::wasm::AsmType"* %3, %"class.v8::internal::wasm::AsmType"** %16, align 8
  %17 = getelementptr inbounds %"class.v8::internal::wasm::AsmJsParser", %"class.v8::internal::wasm::AsmJsParser"* %0, i64 0, i32 2
  %18 = load %"class.v8::internal::wasm::WasmModuleBuilder"*, %"class.v8::internal::wasm::WasmModuleBuilder"** %17, align 8
  call void @llvm.memcpy.p0i8.p0i8.i64(i8* nonnull align 8 %11, i8* nonnull align 8 %10, i64 20, i1 false) #12
  %19 = getelementptr inbounds %"class.v8::internal::wasm::WasmInitExpr", %"class.v8::internal::wasm::WasmInitExpr"* %8, i64 0, i32 2
  %20 = getelementptr inbounds %"class.v8::internal::wasm::WasmInitExpr", %"class.v8::internal::wasm::WasmInitExpr"* %9, i64 0, i32 2, i32 0, i32 0, i32 0
  store %"class.v8::internal::wasm::WasmInitExpr"* null, %"class.v8::internal::wasm::WasmInitExpr"** %20, align 8
  %21 = bitcast %"class.std::__1::unique_ptr.98"* %19 to i64*
  store i64 0, i64* %21, align 8
  %22 = tail call i32 @_ZN2v88internal4wasm17WasmModuleBuilder9AddGlobalENS1_9ValueTypeEbNS1_12WasmInitExprE(%"class.v8::internal::wasm::WasmModuleBuilder"* %18, i32 %4, i1 zeroext true, %"class.v8::internal::wasm::WasmInitExpr"* nonnull byval(%"class.v8::internal::wasm::WasmInitExpr") align 8 %8) #12
  %23 = getelementptr inbounds %"struct.v8::internal::wasm::AsmJsParser::VarInfo", %"struct.v8::internal::wasm::AsmJsParser::VarInfo"* %6, i64 0, i32 4
  store i32 %22, i32* %23, align 4
  %24 = getelementptr inbounds %"struct.v8::internal::wasm::AsmJsParser::VarInfo", %"struct.v8::internal::wasm::AsmJsParser::VarInfo"* %6, i64 0, i32 6
  store i8 %14, i8* %24, align 4
  call void @_ZN2v88internal4wasm12WasmInitExprD2Ev(%"class.v8::internal::wasm::WasmInitExpr"* nonnull %9) #12
  call void @llvm.lifetime.end.p0i8(i64 32, i8* nonnull %10)
  call void @llvm.lifetime.end.p0i8(i64 32, i8* nonnull %11)
  %25 = getelementptr inbounds %"class.v8::internal::wasm::AsmJsParser", %"class.v8::internal::wasm::AsmJsParser"* %0, i64 0, i32 41, i32 0
  %26 = getelementptr inbounds %"class.v8::internal::wasm::AsmJsParser", %"class.v8::internal::wasm::AsmJsParser"* %0, i64 0, i32 41, i32 0, i32 0, i32 1, i32 1, i32 0, i32 0
  %27 = load %"class.v8::internal::Zone"*, %"class.v8::internal::Zone"** %26, align 8, !noalias !70
  %28 = getelementptr inbounds %"class.v8::internal::Zone", %"class.v8::internal::Zone"* %27, i64 0, i32 2
  %29 = load i64, i64* %28, align 8, !noalias !70
  %30 = getelementptr inbounds %"class.v8::internal::Zone", %"class.v8::internal::Zone"* %27, i64 0, i32 3
  %31 = load i64, i64* %30, align 8, !noalias !70
  %32 = sub i64 %31, %29
  %33 = icmp ult i64 %32, 48
  br i1 %33, label %34, label %36, !prof !2

34:                                               ; preds = %7
  %35 = call i64 @_ZN2v88internal4Zone9NewExpandEm(%"class.v8::internal::Zone"* %27, i64 48) #12, !noalias !70
  br label %38

36:                                               ; preds = %7
  %37 = add i64 %29, 48
  store i64 %37, i64* %28, align 8, !noalias !70
  br label %38

38:                                               ; preds = %34, %36
  %39 = phi i64 [ %35, %34 ], [ %29, %36 ]
  %40 = inttoptr i64 %39 to %"struct.std::__1::__list_node"*
  %41 = getelementptr inbounds %"struct.std::__1::__list_node", %"struct.std::__1::__list_node"* %40, i64 0, i32 0, i32 0
  store %"struct.std::__1::__list_node_base"* null, %"struct.std::__1::__list_node_base"** %41, align 8, !noalias !70
  %42 = getelementptr inbounds %"struct.std::__1::__list_node", %"struct.std::__1::__list_node"* %40, i64 0, i32 1, i32 0, i32 0
  store i8* %1, i8** %42, align 8
  %43 = getelementptr inbounds %"struct.std::__1::__list_node", %"struct.std::__1::__list_node"* %40, i64 0, i32 1, i32 0, i32 1
  store i64 %2, i64* %43, align 8
  %44 = getelementptr inbounds %"struct.std::__1::__list_node", %"struct.std::__1::__list_node"* %40, i64 0, i32 1, i32 1, i32 0
  store i32 %4, i32* %44, align 8
  %45 = getelementptr inbounds %"struct.std::__1::__list_node", %"struct.std::__1::__list_node"* %40, i64 0, i32 1, i32 2
  store %"struct.v8::internal::wasm::AsmJsParser::VarInfo"* %6, %"struct.v8::internal::wasm::AsmJsParser::VarInfo"** %45, align 8
  %46 = getelementptr inbounds %"struct.std::__1::__list_node", %"struct.std::__1::__list_node"* %40, i64 0, i32 0
  %47 = getelementptr inbounds %"class.std::__1::list", %"class.std::__1::list"* %25, i64 0, i32 0, i32 0
  %48 = getelementptr inbounds %"struct.std::__1::__list_node", %"struct.std::__1::__list_node"* %40, i64 0, i32 0, i32 1
  store %"struct.std::__1::__list_node_base"* %47, %"struct.std::__1::__list_node_base"** %48, align 8
  %49 = getelementptr inbounds %"class.std::__1::list", %"class.std::__1::list"* %25, i64 0, i32 0, i32 0, i32 0
  %50 = load %"struct.std::__1::__list_node_base"*, %"struct.std::__1::__list_node_base"** %49, align 8
  store %"struct.std::__1::__list_node_base"* %50, %"struct.std::__1::__list_node_base"** %41, align 8
  %51 = getelementptr inbounds %"struct.std::__1::__list_node_base", %"struct.std::__1::__list_node_base"* %50, i64 0, i32 1
  store %"struct.std::__1::__list_node_base"* %46, %"struct.std::__1::__list_node_base"** %51, align 8
  store %"struct.std::__1::__list_node_base"* %46, %"struct.std::__1::__list_node_base"** %49, align 8
  %52 = getelementptr inbounds %"class.v8::internal::wasm::AsmJsParser", %"class.v8::internal::wasm::AsmJsParser"* %0, i64 0, i32 41, i32 0, i32 0, i32 1, i32 0, i32 0
  %53 = load i64, i64* %52, align 8
  %54 = add i64 %53, 1
  store i64 %54, i64* %52, align 8
  ret void
}

; Function Attrs: nounwind ssp uwtable
define hidden void @_ZN2v88internal4wasm11AsmJsParser13DeclareGlobalEPNS2_7VarInfoEbPNS1_7AsmTypeENS1_9ValueTypeENS1_12WasmInitExprE(%"class.v8::internal::wasm::AsmJsParser"* nocapture readonly, %"struct.v8::internal::wasm::AsmJsParser::VarInfo"* nocapture, i1 zeroext, %"class.v8::internal::wasm::AsmType"*, i32, %"class.v8::internal::wasm::WasmInitExpr"* byval(%"class.v8::internal::wasm::WasmInitExpr") align 8) local_unnamed_addr #0 align 2 {
  %7 = alloca %"class.v8::internal::wasm::WasmInitExpr", align 8
  %8 = zext i1 %2 to i8
  %9 = getelementptr inbounds %"struct.v8::internal::wasm::AsmJsParser::VarInfo", %"struct.v8::internal::wasm::AsmJsParser::VarInfo"* %1, i64 0, i32 5
  store i32 2, i32* %9, align 8
  %10 = getelementptr inbounds %"struct.v8::internal::wasm::AsmJsParser::VarInfo", %"struct.v8::internal::wasm::AsmJsParser::VarInfo"* %1, i64 0, i32 0
  store %"class.v8::internal::wasm::AsmType"* %3, %"class.v8::internal::wasm::AsmType"** %10, align 8
  %11 = getelementptr inbounds %"class.v8::internal::wasm::AsmJsParser", %"class.v8::internal::wasm::AsmJsParser"* %0, i64 0, i32 2
  %12 = load %"class.v8::internal::wasm::WasmModuleBuilder"*, %"class.v8::internal::wasm::WasmModuleBuilder"** %11, align 8
  %13 = bitcast %"class.v8::internal::wasm::WasmInitExpr"* %7 to i8*
  %14 = bitcast %"class.v8::internal::wasm::WasmInitExpr"* %5 to i8*
  call void @llvm.memcpy.p0i8.p0i8.i64(i8* nonnull align 8 %13, i8* nonnull align 8 %14, i64 20, i1 false) #12
  %15 = getelementptr inbounds %"class.v8::internal::wasm::WasmInitExpr", %"class.v8::internal::wasm::WasmInitExpr"* %7, i64 0, i32 2
  %16 = getelementptr inbounds %"class.v8::internal::wasm::WasmInitExpr", %"class.v8::internal::wasm::WasmInitExpr"* %5, i64 0, i32 2
  %17 = getelementptr inbounds %"class.std::__1::unique_ptr.98", %"class.std::__1::unique_ptr.98"* %16, i64 0, i32 0, i32 0, i32 0
  %18 = bitcast %"class.std::__1::unique_ptr.98"* %16 to i64*
  %19 = load i64, i64* %18, align 8
  store %"class.v8::internal::wasm::WasmInitExpr"* null, %"class.v8::internal::wasm::WasmInitExpr"** %17, align 8
  %20 = bitcast %"class.std::__1::unique_ptr.98"* %15 to i64*
  store i64 %19, i64* %20, align 8
  %21 = tail call i32 @_ZN2v88internal4wasm17WasmModuleBuilder9AddGlobalENS1_9ValueTypeEbNS1_12WasmInitExprE(%"class.v8::internal::wasm::WasmModuleBuilder"* %12, i32 %4, i1 zeroext true, %"class.v8::internal::wasm::WasmInitExpr"* nonnull byval(%"class.v8::internal::wasm::WasmInitExpr") align 8 %7) #12
  %22 = getelementptr inbounds %"struct.v8::internal::wasm::AsmJsParser::VarInfo", %"struct.v8::internal::wasm::AsmJsParser::VarInfo"* %1, i64 0, i32 4
  store i32 %21, i32* %22, align 4
  %23 = getelementptr inbounds %"struct.v8::internal::wasm::AsmJsParser::VarInfo", %"struct.v8::internal::wasm::AsmJsParser::VarInfo"* %1, i64 0, i32 6
  store i8 %8, i8* %23, align 4
  call void @_ZN2v88internal4wasm12WasmInitExprD2Ev(%"class.v8::internal::wasm::WasmInitExpr"* nonnull %5) #12
  ret void
}

declare i32 @_ZN2v88internal4wasm17WasmModuleBuilder9AddGlobalENS1_9ValueTypeEbNS1_12WasmInitExprE(%"class.v8::internal::wasm::WasmModuleBuilder"*, i32, i1 zeroext, %"class.v8::internal::wasm::WasmInitExpr"* byval(%"class.v8::internal::wasm::WasmInitExpr") align 8) local_unnamed_addr #1

; Function Attrs: inlinehint nounwind ssp uwtable
define linkonce_odr hidden void @_ZN2v88internal4wasm12WasmInitExprD2Ev(%"class.v8::internal::wasm::WasmInitExpr"*) unnamed_addr #5 comdat align 2 {
  %2 = getelementptr inbounds %"class.v8::internal::wasm::WasmInitExpr", %"class.v8::internal::wasm::WasmInitExpr"* %0, i64 0, i32 2, i32 0, i32 0, i32 0
  %3 = load %"class.v8::internal::wasm::WasmInitExpr"*, %"class.v8::internal::wasm::WasmInitExpr"** %2, align 8
  store %"class.v8::internal::wasm::WasmInitExpr"* null, %"class.v8::internal::wasm::WasmInitExpr"** %2, align 8
  %4 = icmp eq %"class.v8::internal::wasm::WasmInitExpr"* %3, null
  br i1 %4, label %7, label %5

5:                                                ; preds = %1
  tail call void @_ZN2v88internal4wasm12WasmInitExprD2Ev(%"class.v8::internal::wasm::WasmInitExpr"* nonnull %3) #12
  %6 = bitcast %"class.v8::internal::wasm::WasmInitExpr"* %3 to i8*
  tail call void @_ZdlPv(i8* %6) #14
  ret void

7:                                                ; preds = %1
  ret void
}

; Function Attrs: nofree norecurse nounwind ssp uwtable writeonly
define hidden void @_ZN2v88internal4wasm11AsmJsParser17DeclareStdlibFuncEPNS2_7VarInfoENS2_7VarKindEPNS1_7AsmTypeE(%"class.v8::internal::wasm::AsmJsParser"* nocapture readnone, %"struct.v8::internal::wasm::AsmJsParser::VarInfo"* nocapture, i32, %"class.v8::internal::wasm::AsmType"*) local_unnamed_addr #6 align 2 {
  %5 = getelementptr inbounds %"struct.v8::internal::wasm::AsmJsParser::VarInfo", %"struct.v8::internal::wasm::AsmJsParser::VarInfo"* %1, i64 0, i32 5
  store i32 %2, i32* %5, align 8
  %6 = getelementptr inbounds %"struct.v8::internal::wasm::AsmJsParser::VarInfo", %"struct.v8::internal::wasm::AsmJsParser::VarInfo"* %1, i64 0, i32 0
  store %"class.v8::internal::wasm::AsmType"* %3, %"class.v8::internal::wasm::AsmType"** %6, align 8
  %7 = getelementptr inbounds %"struct.v8::internal::wasm::AsmJsParser::VarInfo", %"struct.v8::internal::wasm::AsmJsParser::VarInfo"* %1, i64 0, i32 4
  store i32 0, i32* %7, align 4
  %8 = getelementptr inbounds %"struct.v8::internal::wasm::AsmJsParser::VarInfo", %"struct.v8::internal::wasm::AsmJsParser::VarInfo"* %1, i64 0, i32 6
  store i8 0, i8* %8, align 4
  ret void
}

; Function Attrs: nofree norecurse nounwind ssp uwtable
define hidden i32 @_ZN2v88internal4wasm11AsmJsParser12TempVariableEi(%"class.v8::internal::wasm::AsmJsParser"* nocapture, i32) local_unnamed_addr #7 align 2 {
  %3 = getelementptr inbounds %"class.v8::internal::wasm::AsmJsParser", %"class.v8::internal::wasm::AsmJsParser"* %0, i64 0, i32 15
  %4 = load i32, i32* %3, align 4
  %5 = icmp sgt i32 %4, %1
  br i1 %5, label %8, label %6

6:                                                ; preds = %2
  %7 = add nsw i32 %1, 1
  store i32 %7, i32* %3, align 4
  br label %8

8:                                                ; preds = %2, %6
  %9 = getelementptr inbounds %"class.v8::internal::wasm::AsmJsParser", %"class.v8::internal::wasm::AsmJsParser"* %0, i64 0, i32 14
  %10 = load i32, i32* %9, align 8
  %11 = add nsw i32 %10, %1
  ret i32 %11
}

; Function Attrs: nounwind ssp uwtable
define hidden { i8*, i64 } @_ZN2v88internal4wasm11AsmJsParser27CopyCurrentIdentifierStringEv(%"class.v8::internal::wasm::AsmJsParser"*) local_unnamed_addr #0 align 2 {
  %2 = getelementptr inbounds %"class.v8::internal::wasm::AsmJsParser", %"class.v8::internal::wasm::AsmJsParser"* %0, i64 0, i32 1, i32 10
  %3 = getelementptr inbounds %"class.v8::internal::wasm::AsmJsParser", %"class.v8::internal::wasm::AsmJsParser"* %0, i64 0, i32 0
  %4 = load %"class.v8::internal::Zone"*, %"class.v8::internal::Zone"** %3, align 8
  %5 = bitcast %"class.std::__1::basic_string"* %2 to %"struct.std::__1::basic_string<char, std::__1::char_traits<char>, std::__1::allocator<char> >::__short"*
  %6 = getelementptr inbounds %"struct.std::__1::basic_string<char, std::__1::char_traits<char>, std::__1::allocator<char> >::__short", %"struct.std::__1::basic_string<char, std::__1::char_traits<char>, std::__1::allocator<char> >::__short"* %5, i64 0, i32 1, i32 0
  %7 = load i8, i8* %6, align 1
  %8 = icmp slt i8 %7, 0
  br i1 %8, label %9, label %12

9:                                                ; preds = %1
  %10 = getelementptr inbounds %"class.v8::internal::wasm::AsmJsParser", %"class.v8::internal::wasm::AsmJsParser"* %0, i64 0, i32 1, i32 10, i32 0, i32 0, i32 0, i32 0, i32 0, i32 1
  %11 = load i64, i64* %10, align 8
  br label %14

12:                                               ; preds = %1
  %13 = zext i8 %7 to i64
  br label %14

14:                                               ; preds = %9, %12
  %15 = phi i64 [ %11, %9 ], [ %13, %12 ]
  %16 = add i64 %15, 7
  %17 = and i64 %16, -8
  %18 = getelementptr inbounds %"class.v8::internal::Zone", %"class.v8::internal::Zone"* %4, i64 0, i32 2
  %19 = load i64, i64* %18, align 8
  %20 = getelementptr inbounds %"class.v8::internal::Zone", %"class.v8::internal::Zone"* %4, i64 0, i32 3
  %21 = load i64, i64* %20, align 8
  %22 = sub i64 %21, %19
  %23 = icmp ugt i64 %17, %22
  br i1 %23, label %24, label %26, !prof !2

24:                                               ; preds = %14
  %25 = tail call i64 @_ZN2v88internal4Zone9NewExpandEm(%"class.v8::internal::Zone"* %4, i64 %17) #12
  br label %28

26:                                               ; preds = %14
  %27 = add i64 %17, %19
  store i64 %27, i64* %18, align 8
  br label %28

28:                                               ; preds = %24, %26
  %29 = phi i64 [ %25, %24 ], [ %19, %26 ]
  %30 = inttoptr i64 %29 to i8*
  %31 = load i8, i8* %6, align 1
  %32 = icmp slt i8 %31, 0
  br i1 %32, label %33, label %36

33:                                               ; preds = %28
  %34 = getelementptr inbounds %"class.v8::internal::wasm::AsmJsParser", %"class.v8::internal::wasm::AsmJsParser"* %0, i64 0, i32 1, i32 10, i32 0, i32 0, i32 0, i32 0, i32 0, i32 1
  %35 = load i64, i64* %34, align 8
  br label %38

36:                                               ; preds = %28
  %37 = zext i8 %31 to i64
  br label %38

38:                                               ; preds = %33, %36
  %39 = phi i64 [ %35, %33 ], [ %37, %36 ]
  %40 = tail call i64 @_ZNKSt3__112basic_stringIcNS_11char_traitsIcEENS_9allocatorIcEEE4copyEPcmm(%"class.std::__1::basic_string"* %2, i8* %30, i64 %39, i64 0) #12
  %41 = load i8, i8* %6, align 1
  %42 = icmp slt i8 %41, 0
  br i1 %42, label %43, label %46

43:                                               ; preds = %38
  %44 = getelementptr inbounds %"class.v8::internal::wasm::AsmJsParser", %"class.v8::internal::wasm::AsmJsParser"* %0, i64 0, i32 1, i32 10, i32 0, i32 0, i32 0, i32 0, i32 0, i32 1
  %45 = load i64, i64* %44, align 8
  br label %48

46:                                               ; preds = %38
  %47 = zext i8 %41 to i64
  br label %48

48:                                               ; preds = %43, %46
  %49 = phi i64 [ %45, %43 ], [ %47, %46 ]
  %50 = shl i64 %49, 32
  %51 = ashr exact i64 %50, 32
  %52 = insertvalue { i8*, i64 } undef, i8* %30, 0
  %53 = insertvalue { i8*, i64 } %52, i64 %51, 1
  ret { i8*, i64 } %53
}

declare i64 @_ZNKSt3__112basic_stringIcNS_11char_traitsIcEENS_9allocatorIcEEE4copyEPcmm(%"class.std::__1::basic_string"*, i8*, i64, i64) local_unnamed_addr #1

; Function Attrs: nounwind ssp uwtable
define hidden void @_ZN2v88internal4wasm11AsmJsParser13SkipSemicolonEv(%"class.v8::internal::wasm::AsmJsParser"*) local_unnamed_addr #0 align 2 {
  %2 = getelementptr inbounds %"class.v8::internal::wasm::AsmJsParser", %"class.v8::internal::wasm::AsmJsParser"* %0, i64 0, i32 1, i32 1
  %3 = load i32, i32* %2, align 8
  switch i32 %3, label %6 [
    i32 59, label %4
    i32 125, label %17
  ]

4:                                                ; preds = %1
  %5 = getelementptr inbounds %"class.v8::internal::wasm::AsmJsParser", %"class.v8::internal::wasm::AsmJsParser"* %0, i64 0, i32 1
  tail call void @_ZN2v88internal12AsmJsScanner4NextEv(%"class.v8::internal::AsmJsScanner"* %5) #12
  br label %17

6:                                                ; preds = %1
  %7 = getelementptr inbounds %"class.v8::internal::wasm::AsmJsParser", %"class.v8::internal::wasm::AsmJsParser"* %0, i64 0, i32 1, i32 20
  %8 = load i8, i8* %7, align 4, !range !69
  %9 = icmp eq i8 %8, 0
  br i1 %9, label %10, label %17

10:                                               ; preds = %6
  %11 = getelementptr inbounds %"class.v8::internal::wasm::AsmJsParser", %"class.v8::internal::wasm::AsmJsParser"* %0, i64 0, i32 17
  store i8 1, i8* %11, align 4
  %12 = getelementptr inbounds %"class.v8::internal::wasm::AsmJsParser", %"class.v8::internal::wasm::AsmJsParser"* %0, i64 0, i32 18
  store i8* getelementptr inbounds ([11 x i8], [11 x i8]* @.str.1, i64 0, i64 0), i8** %12, align 8
  %13 = getelementptr inbounds %"class.v8::internal::wasm::AsmJsParser", %"class.v8::internal::wasm::AsmJsParser"* %0, i64 0, i32 1, i32 5
  %14 = load i64, i64* %13, align 8
  %15 = trunc i64 %14 to i32
  %16 = getelementptr inbounds %"class.v8::internal::wasm::AsmJsParser", %"class.v8::internal::wasm::AsmJsParser"* %0, i64 0, i32 19
  store i32 %15, i32* %16, align 8
  br label %17

17:                                               ; preds = %1, %6, %4, %10
  ret void
}

; Function Attrs: nounwind ssp uwtable
define hidden void @_ZN2v88internal4wasm11AsmJsParser5BeginEi(%"class.v8::internal::wasm::AsmJsParser"*, i32) local_unnamed_addr #0 align 2 {
  tail call void @_ZN2v88internal4wasm11AsmJsParser9BareBeginENS2_9BlockKindEi(%"class.v8::internal::wasm::AsmJsParser"* %0, i32 0, i32 %1)
  %3 = getelementptr inbounds %"class.v8::internal::wasm::AsmJsParser", %"class.v8::internal::wasm::AsmJsParser"* %0, i64 0, i32 3
  %4 = load %"class.v8::internal::wasm::WasmFunctionBuilder"*, %"class.v8::internal::wasm::WasmFunctionBuilder"** %3, align 8
  tail call void @_ZN2v88internal4wasm19WasmFunctionBuilder10EmitWithU8ENS1_10WasmOpcodeEh(%"class.v8::internal::wasm::WasmFunctionBuilder"* %4, i32 2, i8 zeroext 64) #12
  ret void
}

; Function Attrs: nounwind ssp uwtable
define hidden void @_ZN2v88internal4wasm11AsmJsParser9BareBeginENS2_9BlockKindEi(%"class.v8::internal::wasm::AsmJsParser"*, i32, i32) local_unnamed_addr #0 align 2 {
  %4 = getelementptr inbounds %"class.v8::internal::wasm::AsmJsParser", %"class.v8::internal::wasm::AsmJsParser"* %0, i64 0, i32 25, i32 0
  %5 = getelementptr inbounds %"class.v8::internal::wasm::AsmJsParser", %"class.v8::internal::wasm::AsmJsParser"* %0, i64 0, i32 25, i32 0, i32 0, i32 1
  %6 = load %"struct.v8::internal::wasm::AsmJsParser::BlockInfo"*, %"struct.v8::internal::wasm::AsmJsParser::BlockInfo"** %5, align 8
  %7 = getelementptr inbounds %"class.v8::internal::wasm::AsmJsParser", %"class.v8::internal::wasm::AsmJsParser"* %0, i64 0, i32 25, i32 0, i32 0, i32 2, i32 0, i32 0
  %8 = load %"struct.v8::internal::wasm::AsmJsParser::BlockInfo"*, %"struct.v8::internal::wasm::AsmJsParser::BlockInfo"** %7, align 8
  %9 = icmp eq %"struct.v8::internal::wasm::AsmJsParser::BlockInfo"* %6, %8
  %10 = ptrtoint %"struct.v8::internal::wasm::AsmJsParser::BlockInfo"* %8 to i64
  br i1 %9, label %20, label %11

11:                                               ; preds = %3
  %12 = bitcast %"struct.v8::internal::wasm::AsmJsParser::BlockInfo"* %6 to i64*
  %13 = zext i32 %2 to i64
  %14 = shl nuw i64 %13, 32
  %15 = zext i32 %1 to i64
  %16 = or i64 %14, %15
  store i64 %16, i64* %12, align 4
  %17 = getelementptr inbounds %"struct.v8::internal::wasm::AsmJsParser::BlockInfo", %"struct.v8::internal::wasm::AsmJsParser::BlockInfo"* %6, i64 1
  %18 = ptrtoint %"struct.v8::internal::wasm::AsmJsParser::BlockInfo"* %17 to i64
  %19 = bitcast %"struct.v8::internal::wasm::AsmJsParser::BlockInfo"** %5 to i64*
  store i64 %18, i64* %19, align 8
  br label %249

20:                                               ; preds = %3
  %21 = ptrtoint %"struct.v8::internal::wasm::AsmJsParser::BlockInfo"* %6 to i64
  %22 = bitcast %"struct.v8::internal::wasm::AsmJsParser::BlockInfo"** %5 to i64*
  %23 = bitcast %"class.std::__1::vector.199"* %4 to i64*
  %24 = load i64, i64* %23, align 8
  %25 = sub i64 %21, %24
  %26 = ashr exact i64 %25, 3
  %27 = add nsw i64 %26, 1
  %28 = icmp ugt i64 %27, 268435455
  br i1 %28, label %29, label %31

29:                                               ; preds = %20
  %30 = bitcast %"class.std::__1::vector.199"* %4 to %"class.std::__1::__vector_base_common"*
  tail call void @_ZNKSt3__120__vector_base_commonILb1EE20__throw_length_errorEv(%"class.std::__1::__vector_base_common"* %30) #13
  unreachable

31:                                               ; preds = %20
  %32 = bitcast %"struct.v8::internal::wasm::AsmJsParser::BlockInfo"** %7 to i64*
  %33 = sub i64 %10, %24
  %34 = ashr exact i64 %33, 3
  %35 = icmp ult i64 %34, 134217727
  br i1 %35, label %36, label %41

36:                                               ; preds = %31
  %37 = ashr exact i64 %33, 2
  %38 = icmp ult i64 %37, %27
  %39 = select i1 %38, i64 %27, i64 %37
  %40 = icmp eq i64 %39, 0
  br i1 %40, label %59, label %41

41:                                               ; preds = %36, %31
  %42 = phi i64 [ %39, %36 ], [ 268435455, %31 ]
  %43 = getelementptr inbounds %"class.v8::internal::wasm::AsmJsParser", %"class.v8::internal::wasm::AsmJsParser"* %0, i64 0, i32 25, i32 0, i32 0, i32 2, i32 1, i32 0, i32 0
  %44 = load %"class.v8::internal::Zone"*, %"class.v8::internal::Zone"** %43, align 8
  %45 = shl i64 %42, 3
  %46 = getelementptr inbounds %"class.v8::internal::Zone", %"class.v8::internal::Zone"* %44, i64 0, i32 2
  %47 = load i64, i64* %46, align 8
  %48 = getelementptr inbounds %"class.v8::internal::Zone", %"class.v8::internal::Zone"* %44, i64 0, i32 3
  %49 = load i64, i64* %48, align 8
  %50 = sub i64 %49, %47
  %51 = icmp ugt i64 %45, %50
  br i1 %51, label %52, label %54, !prof !2

52:                                               ; preds = %41
  %53 = tail call i64 @_ZN2v88internal4Zone9NewExpandEm(%"class.v8::internal::Zone"* %44, i64 %45) #12
  br label %56

54:                                               ; preds = %41
  %55 = add i64 %47, %45
  store i64 %55, i64* %46, align 8
  br label %56

56:                                               ; preds = %54, %52
  %57 = phi i64 [ %53, %52 ], [ %47, %54 ]
  %58 = inttoptr i64 %57 to %"struct.v8::internal::wasm::AsmJsParser::BlockInfo"*
  br label %59

59:                                               ; preds = %56, %36
  %60 = phi i64 [ %42, %56 ], [ 0, %36 ]
  %61 = phi %"struct.v8::internal::wasm::AsmJsParser::BlockInfo"* [ %58, %56 ], [ null, %36 ]
  %62 = getelementptr inbounds %"struct.v8::internal::wasm::AsmJsParser::BlockInfo", %"struct.v8::internal::wasm::AsmJsParser::BlockInfo"* %61, i64 %26
  %63 = getelementptr inbounds %"struct.v8::internal::wasm::AsmJsParser::BlockInfo", %"struct.v8::internal::wasm::AsmJsParser::BlockInfo"* %61, i64 %60
  %64 = ptrtoint %"struct.v8::internal::wasm::AsmJsParser::BlockInfo"* %63 to i64
  %65 = bitcast %"struct.v8::internal::wasm::AsmJsParser::BlockInfo"* %62 to i64*
  %66 = zext i32 %2 to i64
  %67 = shl nuw i64 %66, 32
  %68 = zext i32 %1 to i64
  %69 = or i64 %67, %68
  store i64 %69, i64* %65, align 4
  %70 = getelementptr inbounds %"struct.v8::internal::wasm::AsmJsParser::BlockInfo", %"struct.v8::internal::wasm::AsmJsParser::BlockInfo"* %62, i64 1
  %71 = ptrtoint %"struct.v8::internal::wasm::AsmJsParser::BlockInfo"* %70 to i64
  %72 = getelementptr inbounds %"class.std::__1::vector.199", %"class.std::__1::vector.199"* %4, i64 0, i32 0, i32 0
  %73 = load %"struct.v8::internal::wasm::AsmJsParser::BlockInfo"*, %"struct.v8::internal::wasm::AsmJsParser::BlockInfo"** %72, align 8
  %74 = ptrtoint %"struct.v8::internal::wasm::AsmJsParser::BlockInfo"* %73 to i64
  %75 = load %"struct.v8::internal::wasm::AsmJsParser::BlockInfo"*, %"struct.v8::internal::wasm::AsmJsParser::BlockInfo"** %5, align 8
  %76 = icmp eq %"struct.v8::internal::wasm::AsmJsParser::BlockInfo"* %75, %73
  br i1 %76, label %246, label %77

77:                                               ; preds = %59
  %78 = getelementptr %"struct.v8::internal::wasm::AsmJsParser::BlockInfo", %"struct.v8::internal::wasm::AsmJsParser::BlockInfo"* %75, i64 -1, i32 0
  %79 = ptrtoint i32* %78 to i64
  %80 = sub i64 %79, %74
  %81 = lshr i64 %80, 3
  %82 = add nuw nsw i64 %81, 1
  %83 = icmp ult i64 %82, 4
  br i1 %83, label %176, label %84

84:                                               ; preds = %77
  %85 = getelementptr %"struct.v8::internal::wasm::AsmJsParser::BlockInfo", %"struct.v8::internal::wasm::AsmJsParser::BlockInfo"* %75, i64 -1, i32 0
  %86 = ptrtoint i32* %85 to i64
  %87 = sub i64 %86, %74
  %88 = lshr i64 %87, 3
  %89 = xor i64 %88, -1
  %90 = add nsw i64 %26, %89
  %91 = getelementptr %"struct.v8::internal::wasm::AsmJsParser::BlockInfo", %"struct.v8::internal::wasm::AsmJsParser::BlockInfo"* %61, i64 %90
  %92 = xor i64 %88, -1
  %93 = getelementptr %"struct.v8::internal::wasm::AsmJsParser::BlockInfo", %"struct.v8::internal::wasm::AsmJsParser::BlockInfo"* %75, i64 %92
  %94 = icmp ult %"struct.v8::internal::wasm::AsmJsParser::BlockInfo"* %91, %75
  %95 = icmp ult %"struct.v8::internal::wasm::AsmJsParser::BlockInfo"* %93, %62
  %96 = and i1 %94, %95
  br i1 %96, label %176, label %97

97:                                               ; preds = %84
  %98 = and i64 %82, 4611686018427387900
  %99 = sub nsw i64 0, %98
  %100 = getelementptr %"struct.v8::internal::wasm::AsmJsParser::BlockInfo", %"struct.v8::internal::wasm::AsmJsParser::BlockInfo"* %62, i64 %99
  %101 = sub nsw i64 0, %98
  %102 = getelementptr %"struct.v8::internal::wasm::AsmJsParser::BlockInfo", %"struct.v8::internal::wasm::AsmJsParser::BlockInfo"* %75, i64 %101
  %103 = add nsw i64 %98, -4
  %104 = lshr exact i64 %103, 2
  %105 = add nuw nsw i64 %104, 1
  %106 = and i64 %105, 1
  %107 = icmp eq i64 %103, 0
  br i1 %107, label %154, label %108

108:                                              ; preds = %97
  %109 = sub nuw nsw i64 %105, %106
  %110 = getelementptr %"struct.v8::internal::wasm::AsmJsParser::BlockInfo", %"struct.v8::internal::wasm::AsmJsParser::BlockInfo"* %62, i64 -1
  %111 = getelementptr %"struct.v8::internal::wasm::AsmJsParser::BlockInfo", %"struct.v8::internal::wasm::AsmJsParser::BlockInfo"* %75, i64 -1
  %112 = getelementptr %"struct.v8::internal::wasm::AsmJsParser::BlockInfo", %"struct.v8::internal::wasm::AsmJsParser::BlockInfo"* %62, i64 -1
  %113 = getelementptr %"struct.v8::internal::wasm::AsmJsParser::BlockInfo", %"struct.v8::internal::wasm::AsmJsParser::BlockInfo"* %75, i64 -1
  br label %114

114:                                              ; preds = %114, %108
  %115 = phi i64 [ 0, %108 ], [ %149, %114 ]
  %116 = phi i64 [ %109, %108 ], [ %150, %114 ]
  %117 = sub i64 0, %115
  %118 = sub i64 0, %115
  %119 = getelementptr inbounds %"struct.v8::internal::wasm::AsmJsParser::BlockInfo", %"struct.v8::internal::wasm::AsmJsParser::BlockInfo"* %110, i64 %117
  %120 = getelementptr inbounds %"struct.v8::internal::wasm::AsmJsParser::BlockInfo", %"struct.v8::internal::wasm::AsmJsParser::BlockInfo"* %111, i64 %118
  %121 = getelementptr inbounds %"struct.v8::internal::wasm::AsmJsParser::BlockInfo", %"struct.v8::internal::wasm::AsmJsParser::BlockInfo"* %120, i64 -1
  %122 = bitcast %"struct.v8::internal::wasm::AsmJsParser::BlockInfo"* %121 to <2 x i64>*
  %123 = load <2 x i64>, <2 x i64>* %122, align 4, !alias.scope !73
  %124 = getelementptr inbounds %"struct.v8::internal::wasm::AsmJsParser::BlockInfo", %"struct.v8::internal::wasm::AsmJsParser::BlockInfo"* %120, i64 -2
  %125 = getelementptr inbounds %"struct.v8::internal::wasm::AsmJsParser::BlockInfo", %"struct.v8::internal::wasm::AsmJsParser::BlockInfo"* %124, i64 -1
  %126 = bitcast %"struct.v8::internal::wasm::AsmJsParser::BlockInfo"* %125 to <2 x i64>*
  %127 = load <2 x i64>, <2 x i64>* %126, align 4, !alias.scope !73
  %128 = getelementptr inbounds %"struct.v8::internal::wasm::AsmJsParser::BlockInfo", %"struct.v8::internal::wasm::AsmJsParser::BlockInfo"* %119, i64 -1
  %129 = bitcast %"struct.v8::internal::wasm::AsmJsParser::BlockInfo"* %128 to <2 x i64>*
  store <2 x i64> %123, <2 x i64>* %129, align 4, !alias.scope !76, !noalias !73
  %130 = getelementptr inbounds %"struct.v8::internal::wasm::AsmJsParser::BlockInfo", %"struct.v8::internal::wasm::AsmJsParser::BlockInfo"* %119, i64 -2
  %131 = getelementptr inbounds %"struct.v8::internal::wasm::AsmJsParser::BlockInfo", %"struct.v8::internal::wasm::AsmJsParser::BlockInfo"* %130, i64 -1
  %132 = bitcast %"struct.v8::internal::wasm::AsmJsParser::BlockInfo"* %131 to <2 x i64>*
  store <2 x i64> %127, <2 x i64>* %132, align 4, !alias.scope !76, !noalias !73
  %133 = sub nuw nsw i64 -4, %115
  %134 = sub nuw nsw i64 -4, %115
  %135 = getelementptr inbounds %"struct.v8::internal::wasm::AsmJsParser::BlockInfo", %"struct.v8::internal::wasm::AsmJsParser::BlockInfo"* %112, i64 %133
  %136 = getelementptr inbounds %"struct.v8::internal::wasm::AsmJsParser::BlockInfo", %"struct.v8::internal::wasm::AsmJsParser::BlockInfo"* %113, i64 %134
  %137 = getelementptr inbounds %"struct.v8::internal::wasm::AsmJsParser::BlockInfo", %"struct.v8::internal::wasm::AsmJsParser::BlockInfo"* %136, i64 -1
  %138 = bitcast %"struct.v8::internal::wasm::AsmJsParser::BlockInfo"* %137 to <2 x i64>*
  %139 = load <2 x i64>, <2 x i64>* %138, align 4, !alias.scope !73
  %140 = getelementptr inbounds %"struct.v8::internal::wasm::AsmJsParser::BlockInfo", %"struct.v8::internal::wasm::AsmJsParser::BlockInfo"* %136, i64 -2
  %141 = getelementptr inbounds %"struct.v8::internal::wasm::AsmJsParser::BlockInfo", %"struct.v8::internal::wasm::AsmJsParser::BlockInfo"* %140, i64 -1
  %142 = bitcast %"struct.v8::internal::wasm::AsmJsParser::BlockInfo"* %141 to <2 x i64>*
  %143 = load <2 x i64>, <2 x i64>* %142, align 4, !alias.scope !73
  %144 = getelementptr inbounds %"struct.v8::internal::wasm::AsmJsParser::BlockInfo", %"struct.v8::internal::wasm::AsmJsParser::BlockInfo"* %135, i64 -1
  %145 = bitcast %"struct.v8::internal::wasm::AsmJsParser::BlockInfo"* %144 to <2 x i64>*
  store <2 x i64> %139, <2 x i64>* %145, align 4, !alias.scope !76, !noalias !73
  %146 = getelementptr inbounds %"struct.v8::internal::wasm::AsmJsParser::BlockInfo", %"struct.v8::internal::wasm::AsmJsParser::BlockInfo"* %135, i64 -2
  %147 = getelementptr inbounds %"struct.v8::internal::wasm::AsmJsParser::BlockInfo", %"struct.v8::internal::wasm::AsmJsParser::BlockInfo"* %146, i64 -1
  %148 = bitcast %"struct.v8::internal::wasm::AsmJsParser::BlockInfo"* %147 to <2 x i64>*
  store <2 x i64> %143, <2 x i64>* %148, align 4, !alias.scope !76, !noalias !73
  %149 = add i64 %115, 8
  %150 = add i64 %116, -2
  %151 = icmp eq i64 %150, 0
  br i1 %151, label %152, label %114, !llvm.loop !78

152:                                              ; preds = %114
  %153 = sub nuw nsw i64 -8, %115
  br label %154

154:                                              ; preds = %152, %97
  %155 = phi i64 [ 0, %97 ], [ %153, %152 ]
  %156 = icmp eq i64 %106, 0
  br i1 %156, label %174, label %157

157:                                              ; preds = %154
  %158 = getelementptr %"struct.v8::internal::wasm::AsmJsParser::BlockInfo", %"struct.v8::internal::wasm::AsmJsParser::BlockInfo"* %62, i64 -1
  %159 = getelementptr %"struct.v8::internal::wasm::AsmJsParser::BlockInfo", %"struct.v8::internal::wasm::AsmJsParser::BlockInfo"* %75, i64 -1
  %160 = getelementptr inbounds %"struct.v8::internal::wasm::AsmJsParser::BlockInfo", %"struct.v8::internal::wasm::AsmJsParser::BlockInfo"* %158, i64 %155
  %161 = getelementptr inbounds %"struct.v8::internal::wasm::AsmJsParser::BlockInfo", %"struct.v8::internal::wasm::AsmJsParser::BlockInfo"* %159, i64 %155
  %162 = getelementptr inbounds %"struct.v8::internal::wasm::AsmJsParser::BlockInfo", %"struct.v8::internal::wasm::AsmJsParser::BlockInfo"* %161, i64 -1
  %163 = bitcast %"struct.v8::internal::wasm::AsmJsParser::BlockInfo"* %162 to <2 x i64>*
  %164 = load <2 x i64>, <2 x i64>* %163, align 4, !alias.scope !73
  %165 = getelementptr inbounds %"struct.v8::internal::wasm::AsmJsParser::BlockInfo", %"struct.v8::internal::wasm::AsmJsParser::BlockInfo"* %161, i64 -2
  %166 = getelementptr inbounds %"struct.v8::internal::wasm::AsmJsParser::BlockInfo", %"struct.v8::internal::wasm::AsmJsParser::BlockInfo"* %165, i64 -1
  %167 = bitcast %"struct.v8::internal::wasm::AsmJsParser::BlockInfo"* %166 to <2 x i64>*
  %168 = load <2 x i64>, <2 x i64>* %167, align 4, !alias.scope !73
  %169 = getelementptr inbounds %"struct.v8::internal::wasm::AsmJsParser::BlockInfo", %"struct.v8::internal::wasm::AsmJsParser::BlockInfo"* %160, i64 -1
  %170 = bitcast %"struct.v8::internal::wasm::AsmJsParser::BlockInfo"* %169 to <2 x i64>*
  store <2 x i64> %164, <2 x i64>* %170, align 4, !alias.scope !76, !noalias !73
  %171 = getelementptr inbounds %"struct.v8::internal::wasm::AsmJsParser::BlockInfo", %"struct.v8::internal::wasm::AsmJsParser::BlockInfo"* %160, i64 -2
  %172 = getelementptr inbounds %"struct.v8::internal::wasm::AsmJsParser::BlockInfo", %"struct.v8::internal::wasm::AsmJsParser::BlockInfo"* %171, i64 -1
  %173 = bitcast %"struct.v8::internal::wasm::AsmJsParser::BlockInfo"* %172 to <2 x i64>*
  store <2 x i64> %168, <2 x i64>* %173, align 4, !alias.scope !76, !noalias !73
  br label %174

174:                                              ; preds = %154, %157
  %175 = icmp eq i64 %82, %98
  br i1 %175, label %246, label %176

176:                                              ; preds = %174, %84, %77
  %177 = phi %"struct.v8::internal::wasm::AsmJsParser::BlockInfo"* [ %62, %84 ], [ %62, %77 ], [ %100, %174 ]
  %178 = phi %"struct.v8::internal::wasm::AsmJsParser::BlockInfo"* [ %75, %84 ], [ %75, %77 ], [ %102, %174 ]
  %179 = getelementptr %"struct.v8::internal::wasm::AsmJsParser::BlockInfo", %"struct.v8::internal::wasm::AsmJsParser::BlockInfo"* %178, i64 -1, i32 0
  %180 = ptrtoint i32* %179 to i64
  %181 = sub i64 %180, %74
  %182 = lshr i64 %181, 3
  %183 = add nuw nsw i64 %182, 1
  %184 = and i64 %183, 7
  %185 = icmp eq i64 %184, 0
  br i1 %185, label %197, label %186

186:                                              ; preds = %176, %186
  %187 = phi %"struct.v8::internal::wasm::AsmJsParser::BlockInfo"* [ %190, %186 ], [ %177, %176 ]
  %188 = phi %"struct.v8::internal::wasm::AsmJsParser::BlockInfo"* [ %191, %186 ], [ %178, %176 ]
  %189 = phi i64 [ %195, %186 ], [ %184, %176 ]
  %190 = getelementptr inbounds %"struct.v8::internal::wasm::AsmJsParser::BlockInfo", %"struct.v8::internal::wasm::AsmJsParser::BlockInfo"* %187, i64 -1
  %191 = getelementptr inbounds %"struct.v8::internal::wasm::AsmJsParser::BlockInfo", %"struct.v8::internal::wasm::AsmJsParser::BlockInfo"* %188, i64 -1
  %192 = bitcast %"struct.v8::internal::wasm::AsmJsParser::BlockInfo"* %191 to i64*
  %193 = bitcast %"struct.v8::internal::wasm::AsmJsParser::BlockInfo"* %190 to i64*
  %194 = load i64, i64* %192, align 4
  store i64 %194, i64* %193, align 4
  %195 = add i64 %189, -1
  %196 = icmp eq i64 %195, 0
  br i1 %196, label %197, label %186, !llvm.loop !79

197:                                              ; preds = %186, %176
  %198 = phi %"struct.v8::internal::wasm::AsmJsParser::BlockInfo"* [ undef, %176 ], [ %190, %186 ]
  %199 = phi %"struct.v8::internal::wasm::AsmJsParser::BlockInfo"* [ %177, %176 ], [ %190, %186 ]
  %200 = phi %"struct.v8::internal::wasm::AsmJsParser::BlockInfo"* [ %178, %176 ], [ %191, %186 ]
  %201 = icmp ult i64 %181, 56
  br i1 %201, label %246, label %202

202:                                              ; preds = %197, %202
  %203 = phi %"struct.v8::internal::wasm::AsmJsParser::BlockInfo"* [ %240, %202 ], [ %199, %197 ]
  %204 = phi %"struct.v8::internal::wasm::AsmJsParser::BlockInfo"* [ %241, %202 ], [ %200, %197 ]
  %205 = getelementptr inbounds %"struct.v8::internal::wasm::AsmJsParser::BlockInfo", %"struct.v8::internal::wasm::AsmJsParser::BlockInfo"* %203, i64 -1
  %206 = getelementptr inbounds %"struct.v8::internal::wasm::AsmJsParser::BlockInfo", %"struct.v8::internal::wasm::AsmJsParser::BlockInfo"* %204, i64 -1
  %207 = bitcast %"struct.v8::internal::wasm::AsmJsParser::BlockInfo"* %206 to i64*
  %208 = bitcast %"struct.v8::internal::wasm::AsmJsParser::BlockInfo"* %205 to i64*
  %209 = load i64, i64* %207, align 4
  store i64 %209, i64* %208, align 4
  %210 = getelementptr inbounds %"struct.v8::internal::wasm::AsmJsParser::BlockInfo", %"struct.v8::internal::wasm::AsmJsParser::BlockInfo"* %203, i64 -2
  %211 = getelementptr inbounds %"struct.v8::internal::wasm::AsmJsParser::BlockInfo", %"struct.v8::internal::wasm::AsmJsParser::BlockInfo"* %204, i64 -2
  %212 = bitcast %"struct.v8::internal::wasm::AsmJsParser::BlockInfo"* %211 to i64*
  %213 = bitcast %"struct.v8::internal::wasm::AsmJsParser::BlockInfo"* %210 to i64*
  %214 = load i64, i64* %212, align 4
  store i64 %214, i64* %213, align 4
  %215 = getelementptr inbounds %"struct.v8::internal::wasm::AsmJsParser::BlockInfo", %"struct.v8::internal::wasm::AsmJsParser::BlockInfo"* %203, i64 -3
  %216 = getelementptr inbounds %"struct.v8::internal::wasm::AsmJsParser::BlockInfo", %"struct.v8::internal::wasm::AsmJsParser::BlockInfo"* %204, i64 -3
  %217 = bitcast %"struct.v8::internal::wasm::AsmJsParser::BlockInfo"* %216 to i64*
  %218 = bitcast %"struct.v8::internal::wasm::AsmJsParser::BlockInfo"* %215 to i64*
  %219 = load i64, i64* %217, align 4
  store i64 %219, i64* %218, align 4
  %220 = getelementptr inbounds %"struct.v8::internal::wasm::AsmJsParser::BlockInfo", %"struct.v8::internal::wasm::AsmJsParser::BlockInfo"* %203, i64 -4
  %221 = getelementptr inbounds %"struct.v8::internal::wasm::AsmJsParser::BlockInfo", %"struct.v8::internal::wasm::AsmJsParser::BlockInfo"* %204, i64 -4
  %222 = bitcast %"struct.v8::internal::wasm::AsmJsParser::BlockInfo"* %221 to i64*
  %223 = bitcast %"struct.v8::internal::wasm::AsmJsParser::BlockInfo"* %220 to i64*
  %224 = load i64, i64* %222, align 4
  store i64 %224, i64* %223, align 4
  %225 = getelementptr inbounds %"struct.v8::internal::wasm::AsmJsParser::BlockInfo", %"struct.v8::internal::wasm::AsmJsParser::BlockInfo"* %203, i64 -5
  %226 = getelementptr inbounds %"struct.v8::internal::wasm::AsmJsParser::BlockInfo", %"struct.v8::internal::wasm::AsmJsParser::BlockInfo"* %204, i64 -5
  %227 = bitcast %"struct.v8::internal::wasm::AsmJsParser::BlockInfo"* %226 to i64*
  %228 = bitcast %"struct.v8::internal::wasm::AsmJsParser::BlockInfo"* %225 to i64*
  %229 = load i64, i64* %227, align 4
  store i64 %229, i64* %228, align 4
  %230 = getelementptr inbounds %"struct.v8::internal::wasm::AsmJsParser::BlockInfo", %"struct.v8::internal::wasm::AsmJsParser::BlockInfo"* %203, i64 -6
  %231 = getelementptr inbounds %"struct.v8::internal::wasm::AsmJsParser::BlockInfo", %"struct.v8::internal::wasm::AsmJsParser::BlockInfo"* %204, i64 -6
  %232 = bitcast %"struct.v8::internal::wasm::AsmJsParser::BlockInfo"* %231 to i64*
  %233 = bitcast %"struct.v8::internal::wasm::AsmJsParser::BlockInfo"* %230 to i64*
  %234 = load i64, i64* %232, align 4
  store i64 %234, i64* %233, align 4
  %235 = getelementptr inbounds %"struct.v8::internal::wasm::AsmJsParser::BlockInfo", %"struct.v8::internal::wasm::AsmJsParser::BlockInfo"* %203, i64 -7
  %236 = getelementptr inbounds %"struct.v8::internal::wasm::AsmJsParser::BlockInfo", %"struct.v8::internal::wasm::AsmJsParser::BlockInfo"* %204, i64 -7
  %237 = bitcast %"struct.v8::internal::wasm::AsmJsParser::BlockInfo"* %236 to i64*
  %238 = bitcast %"struct.v8::internal::wasm::AsmJsParser::BlockInfo"* %235 to i64*
  %239 = load i64, i64* %237, align 4
  store i64 %239, i64* %238, align 4
  %240 = getelementptr inbounds %"struct.v8::internal::wasm::AsmJsParser::BlockInfo", %"struct.v8::internal::wasm::AsmJsParser::BlockInfo"* %203, i64 -8
  %241 = getelementptr inbounds %"struct.v8::internal::wasm::AsmJsParser::BlockInfo", %"struct.v8::internal::wasm::AsmJsParser::BlockInfo"* %204, i64 -8
  %242 = bitcast %"struct.v8::internal::wasm::AsmJsParser::BlockInfo"* %241 to i64*
  %243 = bitcast %"struct.v8::internal::wasm::AsmJsParser::BlockInfo"* %240 to i64*
  %244 = load i64, i64* %242, align 4
  store i64 %244, i64* %243, align 4
  %245 = icmp eq %"struct.v8::internal::wasm::AsmJsParser::BlockInfo"* %241, %73
  br i1 %245, label %246, label %202, !llvm.loop !80

246:                                              ; preds = %197, %202, %174, %59
  %247 = phi %"struct.v8::internal::wasm::AsmJsParser::BlockInfo"* [ %62, %59 ], [ %100, %174 ], [ %198, %197 ], [ %240, %202 ]
  %248 = ptrtoint %"struct.v8::internal::wasm::AsmJsParser::BlockInfo"* %247 to i64
  store i64 %248, i64* %23, align 8
  store i64 %71, i64* %22, align 8
  store i64 %64, i64* %32, align 8
  br label %249

249:                                              ; preds = %11, %246
  ret void
}

declare void @_ZN2v88internal4wasm19WasmFunctionBuilder10EmitWithU8ENS1_10WasmOpcodeEh(%"class.v8::internal::wasm::WasmFunctionBuilder"*, i32, i8 zeroext) local_unnamed_addr #1

; Function Attrs: nounwind ssp uwtable
define hidden void @_ZN2v88internal4wasm11AsmJsParser4LoopEi(%"class.v8::internal::wasm::AsmJsParser"*, i32) local_unnamed_addr #0 align 2 {
  tail call void @_ZN2v88internal4wasm11AsmJsParser9BareBeginENS2_9BlockKindEi(%"class.v8::internal::wasm::AsmJsParser"* %0, i32 1, i32 %1)
  %3 = getelementptr inbounds %"class.v8::internal::wasm::AsmJsParser", %"class.v8::internal::wasm::AsmJsParser"* %0, i64 0, i32 1, i32 5
  %4 = load i64, i64* %3, align 8
  %5 = getelementptr inbounds %"class.v8::internal::wasm::AsmJsParser", %"class.v8::internal::wasm::AsmJsParser"* %0, i64 0, i32 3
  %6 = load %"class.v8::internal::wasm::WasmFunctionBuilder"*, %"class.v8::internal::wasm::WasmFunctionBuilder"** %5, align 8
  tail call void @_ZN2v88internal4wasm19WasmFunctionBuilder16AddAsmWasmOffsetEmm(%"class.v8::internal::wasm::WasmFunctionBuilder"* %6, i64 %4, i64 %4) #12
  %7 = load %"class.v8::internal::wasm::WasmFunctionBuilder"*, %"class.v8::internal::wasm::WasmFunctionBuilder"** %5, align 8
  tail call void @_ZN2v88internal4wasm19WasmFunctionBuilder10EmitWithU8ENS1_10WasmOpcodeEh(%"class.v8::internal::wasm::WasmFunctionBuilder"* %7, i32 3, i8 zeroext 64) #12
  ret void
}

declare void @_ZN2v88internal4wasm19WasmFunctionBuilder16AddAsmWasmOffsetEmm(%"class.v8::internal::wasm::WasmFunctionBuilder"*, i64, i64) local_unnamed_addr #1

; Function Attrs: nounwind ssp uwtable
define hidden void @_ZN2v88internal4wasm11AsmJsParser3EndEv(%"class.v8::internal::wasm::AsmJsParser"* nocapture) local_unnamed_addr #0 align 2 {
  %2 = getelementptr inbounds %"class.v8::internal::wasm::AsmJsParser", %"class.v8::internal::wasm::AsmJsParser"* %0, i64 0, i32 25, i32 0, i32 0, i32 1
  %3 = load %"struct.v8::internal::wasm::AsmJsParser::BlockInfo"*, %"struct.v8::internal::wasm::AsmJsParser::BlockInfo"** %2, align 8
  %4 = getelementptr inbounds %"struct.v8::internal::wasm::AsmJsParser::BlockInfo", %"struct.v8::internal::wasm::AsmJsParser::BlockInfo"* %3, i64 -1
  store %"struct.v8::internal::wasm::AsmJsParser::BlockInfo"* %4, %"struct.v8::internal::wasm::AsmJsParser::BlockInfo"** %2, align 8
  %5 = getelementptr inbounds %"class.v8::internal::wasm::AsmJsParser", %"class.v8::internal::wasm::AsmJsParser"* %0, i64 0, i32 3
  %6 = load %"class.v8::internal::wasm::WasmFunctionBuilder"*, %"class.v8::internal::wasm::WasmFunctionBuilder"** %5, align 8
  tail call void @_ZN2v88internal4wasm19WasmFunctionBuilder4EmitENS1_10WasmOpcodeE(%"class.v8::internal::wasm::WasmFunctionBuilder"* %6, i32 11) #12
  ret void
}

; Function Attrs: nofree norecurse nounwind ssp uwtable
define hidden void @_ZN2v88internal4wasm11AsmJsParser7BareEndEv(%"class.v8::internal::wasm::AsmJsParser"* nocapture) local_unnamed_addr #7 align 2 {
  %2 = getelementptr inbounds %"class.v8::internal::wasm::AsmJsParser", %"class.v8::internal::wasm::AsmJsParser"* %0, i64 0, i32 25, i32 0, i32 0, i32 1
  %3 = load %"struct.v8::internal::wasm::AsmJsParser::BlockInfo"*, %"struct.v8::internal::wasm::AsmJsParser::BlockInfo"** %2, align 8
  %4 = getelementptr inbounds %"struct.v8::internal::wasm::AsmJsParser::BlockInfo", %"struct.v8::internal::wasm::AsmJsParser::BlockInfo"* %3, i64 -1
  store %"struct.v8::internal::wasm::AsmJsParser::BlockInfo"* %4, %"struct.v8::internal::wasm::AsmJsParser::BlockInfo"** %2, align 8
  ret void
}

declare void @_ZN2v88internal4wasm19WasmFunctionBuilder4EmitENS1_10WasmOpcodeE(%"class.v8::internal::wasm::WasmFunctionBuilder"*, i32) local_unnamed_addr #1

; Function Attrs: nounwind readonly ssp uwtable
define hidden i32 @_ZN2v88internal4wasm11AsmJsParser22FindContinueLabelDepthEi(%"class.v8::internal::wasm::AsmJsParser"* nocapture readonly, i32) local_unnamed_addr #8 align 2 {
  %3 = getelementptr inbounds %"class.v8::internal::wasm::AsmJsParser", %"class.v8::internal::wasm::AsmJsParser"* %0, i64 0, i32 25, i32 0, i32 0, i32 1
  %4 = load %"struct.v8::internal::wasm::AsmJsParser::BlockInfo"*, %"struct.v8::internal::wasm::AsmJsParser::BlockInfo"** %3, align 8
  %5 = getelementptr inbounds %"class.v8::internal::wasm::AsmJsParser", %"class.v8::internal::wasm::AsmJsParser"* %0, i64 0, i32 25, i32 0, i32 0, i32 0
  %6 = load %"struct.v8::internal::wasm::AsmJsParser::BlockInfo"*, %"struct.v8::internal::wasm::AsmJsParser::BlockInfo"** %5, align 8
  %7 = icmp eq %"struct.v8::internal::wasm::AsmJsParser::BlockInfo"* %4, %6
  br i1 %7, label %34, label %8

8:                                                ; preds = %2
  %9 = icmp eq i32 %1, 0
  br i1 %9, label %10, label %20

10:                                               ; preds = %8, %17
  %11 = phi i32 [ %18, %17 ], [ 0, %8 ]
  %12 = phi %"struct.v8::internal::wasm::AsmJsParser::BlockInfo"* [ %13, %17 ], [ %4, %8 ]
  %13 = getelementptr inbounds %"struct.v8::internal::wasm::AsmJsParser::BlockInfo", %"struct.v8::internal::wasm::AsmJsParser::BlockInfo"* %12, i64 -1
  %14 = getelementptr inbounds %"struct.v8::internal::wasm::AsmJsParser::BlockInfo", %"struct.v8::internal::wasm::AsmJsParser::BlockInfo"* %13, i64 0, i32 0
  %15 = load i32, i32* %14, align 4
  %16 = icmp eq i32 %15, 1
  br i1 %16, label %34, label %17

17:                                               ; preds = %10
  %18 = add nuw nsw i32 %11, 1
  %19 = icmp eq %"struct.v8::internal::wasm::AsmJsParser::BlockInfo"* %13, %6
  br i1 %19, label %34, label %10

20:                                               ; preds = %8, %31
  %21 = phi i32 [ %32, %31 ], [ 0, %8 ]
  %22 = phi %"struct.v8::internal::wasm::AsmJsParser::BlockInfo"* [ %23, %31 ], [ %4, %8 ]
  %23 = getelementptr inbounds %"struct.v8::internal::wasm::AsmJsParser::BlockInfo", %"struct.v8::internal::wasm::AsmJsParser::BlockInfo"* %22, i64 -1
  %24 = getelementptr inbounds %"struct.v8::internal::wasm::AsmJsParser::BlockInfo", %"struct.v8::internal::wasm::AsmJsParser::BlockInfo"* %23, i64 0, i32 0
  %25 = load i32, i32* %24, align 4
  %26 = icmp eq i32 %25, 1
  br i1 %26, label %27, label %31

27:                                               ; preds = %20
  %28 = getelementptr inbounds %"struct.v8::internal::wasm::AsmJsParser::BlockInfo", %"struct.v8::internal::wasm::AsmJsParser::BlockInfo"* %22, i64 -1, i32 1
  %29 = load i32, i32* %28, align 4
  %30 = icmp eq i32 %29, %1
  br i1 %30, label %34, label %31

31:                                               ; preds = %20, %27
  %32 = add nuw nsw i32 %21, 1
  %33 = icmp eq %"struct.v8::internal::wasm::AsmJsParser::BlockInfo"* %23, %6
  br i1 %33, label %34, label %20

34:                                               ; preds = %27, %31, %10, %17, %2
  %35 = phi i32 [ -1, %2 ], [ -1, %17 ], [ %11, %10 ], [ -1, %31 ], [ %21, %27 ]
  ret i32 %35
}

; Function Attrs: nounwind readonly ssp uwtable
define hidden i32 @_ZN2v88internal4wasm11AsmJsParser19FindBreakLabelDepthEi(%"class.v8::internal::wasm::AsmJsParser"* nocapture readonly, i32) local_unnamed_addr #8 align 2 {
  %3 = getelementptr inbounds %"class.v8::internal::wasm::AsmJsParser", %"class.v8::internal::wasm::AsmJsParser"* %0, i64 0, i32 25, i32 0, i32 0, i32 1
  %4 = load %"struct.v8::internal::wasm::AsmJsParser::BlockInfo"*, %"struct.v8::internal::wasm::AsmJsParser::BlockInfo"** %3, align 8
  %5 = getelementptr inbounds %"class.v8::internal::wasm::AsmJsParser", %"class.v8::internal::wasm::AsmJsParser"* %0, i64 0, i32 25, i32 0, i32 0, i32 0
  %6 = load %"struct.v8::internal::wasm::AsmJsParser::BlockInfo"*, %"struct.v8::internal::wasm::AsmJsParser::BlockInfo"** %5, align 8
  %7 = icmp eq %"struct.v8::internal::wasm::AsmJsParser::BlockInfo"* %4, %6
  br i1 %7, label %40, label %8

8:                                                ; preds = %2
  %9 = icmp eq i32 %1, 0
  br i1 %9, label %10, label %23

10:                                               ; preds = %8, %20
  %11 = phi i32 [ %21, %20 ], [ 0, %8 ]
  %12 = phi %"struct.v8::internal::wasm::AsmJsParser::BlockInfo"* [ %13, %20 ], [ %4, %8 ]
  %13 = getelementptr inbounds %"struct.v8::internal::wasm::AsmJsParser::BlockInfo", %"struct.v8::internal::wasm::AsmJsParser::BlockInfo"* %12, i64 -1
  %14 = getelementptr inbounds %"struct.v8::internal::wasm::AsmJsParser::BlockInfo", %"struct.v8::internal::wasm::AsmJsParser::BlockInfo"* %13, i64 0, i32 0
  %15 = load i32, i32* %14, align 4
  switch i32 %15, label %20 [
    i32 0, label %40
    i32 2, label %16
  ]

16:                                               ; preds = %10
  %17 = getelementptr inbounds %"struct.v8::internal::wasm::AsmJsParser::BlockInfo", %"struct.v8::internal::wasm::AsmJsParser::BlockInfo"* %12, i64 -1, i32 1
  %18 = load i32, i32* %17, align 4
  %19 = icmp eq i32 %18, 0
  br i1 %19, label %40, label %20

20:                                               ; preds = %16, %10
  %21 = add nuw nsw i32 %11, 1
  %22 = icmp eq %"struct.v8::internal::wasm::AsmJsParser::BlockInfo"* %13, %6
  br i1 %22, label %40, label %10

23:                                               ; preds = %8, %37
  %24 = phi i32 [ %38, %37 ], [ 0, %8 ]
  %25 = phi %"struct.v8::internal::wasm::AsmJsParser::BlockInfo"* [ %26, %37 ], [ %4, %8 ]
  %26 = getelementptr inbounds %"struct.v8::internal::wasm::AsmJsParser::BlockInfo", %"struct.v8::internal::wasm::AsmJsParser::BlockInfo"* %25, i64 -1
  %27 = getelementptr inbounds %"struct.v8::internal::wasm::AsmJsParser::BlockInfo", %"struct.v8::internal::wasm::AsmJsParser::BlockInfo"* %26, i64 0, i32 0
  %28 = load i32, i32* %27, align 4
  switch i32 %28, label %37 [
    i32 0, label %29
    i32 2, label %33
  ]

29:                                               ; preds = %23
  %30 = getelementptr inbounds %"struct.v8::internal::wasm::AsmJsParser::BlockInfo", %"struct.v8::internal::wasm::AsmJsParser::BlockInfo"* %25, i64 -1, i32 1
  %31 = load i32, i32* %30, align 4
  %32 = icmp eq i32 %31, %1
  br i1 %32, label %40, label %37

33:                                               ; preds = %23
  %34 = getelementptr inbounds %"struct.v8::internal::wasm::AsmJsParser::BlockInfo", %"struct.v8::internal::wasm::AsmJsParser::BlockInfo"* %25, i64 -1, i32 1
  %35 = load i32, i32* %34, align 4
  %36 = icmp eq i32 %35, %1
  br i1 %36, label %40, label %37

37:                                               ; preds = %23, %29, %33
  %38 = add nuw nsw i32 %24, 1
  %39 = icmp eq %"struct.v8::internal::wasm::AsmJsParser::BlockInfo"* %26, %6
  br i1 %39, label %40, label %23

40:                                               ; preds = %33, %29, %37, %16, %10, %20, %2
  %41 = phi i32 [ -1, %2 ], [ -1, %20 ], [ %11, %10 ], [ %11, %16 ], [ -1, %37 ], [ %24, %29 ], [ %24, %33 ]
  ret i32 %41
}

declare i64 @_ZN2v88internal23GetCurrentStackPositionEv() local_unnamed_addr #1

; Function Attrs: nounwind ssp uwtable
define hidden void @_ZN2v88internal4wasm11AsmJsParser24ValidateModuleParametersEv(%"class.v8::internal::wasm::AsmJsParser"*) local_unnamed_addr #0 align 2 {
  %2 = getelementptr inbounds %"class.v8::internal::wasm::AsmJsParser", %"class.v8::internal::wasm::AsmJsParser"* %0, i64 0, i32 1
  %3 = getelementptr inbounds %"class.v8::internal::wasm::AsmJsParser", %"class.v8::internal::wasm::AsmJsParser"* %0, i64 0, i32 1, i32 1
  %4 = load i32, i32* %3, align 8
  %5 = icmp eq i32 %4, 40
  br i1 %5, label %13, label %6

6:                                                ; preds = %1
  %7 = getelementptr inbounds %"class.v8::internal::wasm::AsmJsParser", %"class.v8::internal::wasm::AsmJsParser"* %0, i64 0, i32 17
  store i8 1, i8* %7, align 4
  %8 = getelementptr inbounds %"class.v8::internal::wasm::AsmJsParser", %"class.v8::internal::wasm::AsmJsParser"* %0, i64 0, i32 18
  store i8* getelementptr inbounds ([17 x i8], [17 x i8]* @.str.3, i64 0, i64 0), i8** %8, align 8
  %9 = getelementptr inbounds %"class.v8::internal::wasm::AsmJsParser", %"class.v8::internal::wasm::AsmJsParser"* %0, i64 0, i32 1, i32 5
  %10 = load i64, i64* %9, align 8
  %11 = trunc i64 %10 to i32
  %12 = getelementptr inbounds %"class.v8::internal::wasm::AsmJsParser", %"class.v8::internal::wasm::AsmJsParser"* %0, i64 0, i32 19
  store i32 %11, i32* %12, align 8
  br label %77

13:                                               ; preds = %1
  tail call void @_ZN2v88internal12AsmJsScanner4NextEv(%"class.v8::internal::AsmJsScanner"* %2) #12
  %14 = getelementptr inbounds %"class.v8::internal::wasm::AsmJsParser", %"class.v8::internal::wasm::AsmJsParser"* %0, i64 0, i32 20
  store i32 0, i32* %14, align 4
  %15 = getelementptr inbounds %"class.v8::internal::wasm::AsmJsParser", %"class.v8::internal::wasm::AsmJsParser"* %0, i64 0, i32 21
  store i32 0, i32* %15, align 8
  %16 = getelementptr inbounds %"class.v8::internal::wasm::AsmJsParser", %"class.v8::internal::wasm::AsmJsParser"* %0, i64 0, i32 22
  store i32 0, i32* %16, align 4
  %17 = load i32, i32* %3, align 8
  %18 = icmp eq i32 %17, 41
  br i1 %18, label %76, label %19

19:                                               ; preds = %13
  %20 = icmp sgt i32 %17, 255
  br i1 %20, label %28, label %21

21:                                               ; preds = %19
  %22 = getelementptr inbounds %"class.v8::internal::wasm::AsmJsParser", %"class.v8::internal::wasm::AsmJsParser"* %0, i64 0, i32 17
  store i8 1, i8* %22, align 4
  %23 = getelementptr inbounds %"class.v8::internal::wasm::AsmJsParser", %"class.v8::internal::wasm::AsmJsParser"* %0, i64 0, i32 18
  store i8* getelementptr inbounds ([26 x i8], [26 x i8]* @.str.6, i64 0, i64 0), i8** %23, align 8
  %24 = getelementptr inbounds %"class.v8::internal::wasm::AsmJsParser", %"class.v8::internal::wasm::AsmJsParser"* %0, i64 0, i32 1, i32 5
  %25 = load i64, i64* %24, align 8
  %26 = trunc i64 %25 to i32
  %27 = getelementptr inbounds %"class.v8::internal::wasm::AsmJsParser", %"class.v8::internal::wasm::AsmJsParser"* %0, i64 0, i32 19
  store i32 %26, i32* %27, align 8
  br label %77

28:                                               ; preds = %19
  tail call void @_ZN2v88internal12AsmJsScanner4NextEv(%"class.v8::internal::AsmJsScanner"* %2) #12
  store i32 %17, i32* %14, align 4
  %29 = load i32, i32* %3, align 8
  switch i32 %29, label %30 [
    i32 41, label %76
    i32 44, label %37
  ]

30:                                               ; preds = %28
  %31 = getelementptr inbounds %"class.v8::internal::wasm::AsmJsParser", %"class.v8::internal::wasm::AsmJsParser"* %0, i64 0, i32 17
  store i8 1, i8* %31, align 4
  %32 = getelementptr inbounds %"class.v8::internal::wasm::AsmJsParser", %"class.v8::internal::wasm::AsmJsParser"* %0, i64 0, i32 18
  store i8* getelementptr inbounds ([17 x i8], [17 x i8]* @.str.3, i64 0, i64 0), i8** %32, align 8
  %33 = getelementptr inbounds %"class.v8::internal::wasm::AsmJsParser", %"class.v8::internal::wasm::AsmJsParser"* %0, i64 0, i32 1, i32 5
  %34 = load i64, i64* %33, align 8
  %35 = trunc i64 %34 to i32
  %36 = getelementptr inbounds %"class.v8::internal::wasm::AsmJsParser", %"class.v8::internal::wasm::AsmJsParser"* %0, i64 0, i32 19
  store i32 %35, i32* %36, align 8
  br label %77

37:                                               ; preds = %28
  tail call void @_ZN2v88internal12AsmJsScanner4NextEv(%"class.v8::internal::AsmJsScanner"* %2) #12
  %38 = load i32, i32* %3, align 8
  %39 = icmp sgt i32 %38, 255
  br i1 %39, label %47, label %40

40:                                               ; preds = %37
  %41 = getelementptr inbounds %"class.v8::internal::wasm::AsmJsParser", %"class.v8::internal::wasm::AsmJsParser"* %0, i64 0, i32 17
  store i8 1, i8* %41, align 4
  %42 = getelementptr inbounds %"class.v8::internal::wasm::AsmJsParser", %"class.v8::internal::wasm::AsmJsParser"* %0, i64 0, i32 18
  store i8* getelementptr inbounds ([27 x i8], [27 x i8]* @.str.7, i64 0, i64 0), i8** %42, align 8
  %43 = getelementptr inbounds %"class.v8::internal::wasm::AsmJsParser", %"class.v8::internal::wasm::AsmJsParser"* %0, i64 0, i32 1, i32 5
  %44 = load i64, i64* %43, align 8
  %45 = trunc i64 %44 to i32
  %46 = getelementptr inbounds %"class.v8::internal::wasm::AsmJsParser", %"class.v8::internal::wasm::AsmJsParser"* %0, i64 0, i32 19
  store i32 %45, i32* %46, align 8
  br label %77

47:                                               ; preds = %37
  tail call void @_ZN2v88internal12AsmJsScanner4NextEv(%"class.v8::internal::AsmJsScanner"* %2) #12
  store i32 %38, i32* %15, align 8
  %48 = load i32, i32* %3, align 8
  switch i32 %48, label %49 [
    i32 41, label %76
    i32 44, label %56
  ]

49:                                               ; preds = %47
  %50 = getelementptr inbounds %"class.v8::internal::wasm::AsmJsParser", %"class.v8::internal::wasm::AsmJsParser"* %0, i64 0, i32 17
  store i8 1, i8* %50, align 4
  %51 = getelementptr inbounds %"class.v8::internal::wasm::AsmJsParser", %"class.v8::internal::wasm::AsmJsParser"* %0, i64 0, i32 18
  store i8* getelementptr inbounds ([17 x i8], [17 x i8]* @.str.3, i64 0, i64 0), i8** %51, align 8
  %52 = getelementptr inbounds %"class.v8::internal::wasm::AsmJsParser", %"class.v8::internal::wasm::AsmJsParser"* %0, i64 0, i32 1, i32 5
  %53 = load i64, i64* %52, align 8
  %54 = trunc i64 %53 to i32
  %55 = getelementptr inbounds %"class.v8::internal::wasm::AsmJsParser", %"class.v8::internal::wasm::AsmJsParser"* %0, i64 0, i32 19
  store i32 %54, i32* %55, align 8
  br label %77

56:                                               ; preds = %47
  tail call void @_ZN2v88internal12AsmJsScanner4NextEv(%"class.v8::internal::AsmJsScanner"* %2) #12
  %57 = load i32, i32* %3, align 8
  %58 = icmp sgt i32 %57, 255
  br i1 %58, label %66, label %59

59:                                               ; preds = %56
  %60 = getelementptr inbounds %"class.v8::internal::wasm::AsmJsParser", %"class.v8::internal::wasm::AsmJsParser"* %0, i64 0, i32 17
  store i8 1, i8* %60, align 4
  %61 = getelementptr inbounds %"class.v8::internal::wasm::AsmJsParser", %"class.v8::internal::wasm::AsmJsParser"* %0, i64 0, i32 18
  store i8* getelementptr inbounds ([24 x i8], [24 x i8]* @.str.8, i64 0, i64 0), i8** %61, align 8
  %62 = getelementptr inbounds %"class.v8::internal::wasm::AsmJsParser", %"class.v8::internal::wasm::AsmJsParser"* %0, i64 0, i32 1, i32 5
  %63 = load i64, i64* %62, align 8
  %64 = trunc i64 %63 to i32
  %65 = getelementptr inbounds %"class.v8::internal::wasm::AsmJsParser", %"class.v8::internal::wasm::AsmJsParser"* %0, i64 0, i32 19
  store i32 %64, i32* %65, align 8
  br label %77

66:                                               ; preds = %56
  tail call void @_ZN2v88internal12AsmJsScanner4NextEv(%"class.v8::internal::AsmJsScanner"* %2) #12
  store i32 %57, i32* %16, align 4
  %67 = load i32, i32* %3, align 8
  %68 = icmp eq i32 %67, 41
  br i1 %68, label %76, label %69

69:                                               ; preds = %66
  %70 = getelementptr inbounds %"class.v8::internal::wasm::AsmJsParser", %"class.v8::internal::wasm::AsmJsParser"* %0, i64 0, i32 17
  store i8 1, i8* %70, align 4
  %71 = getelementptr inbounds %"class.v8::internal::wasm::AsmJsParser", %"class.v8::internal::wasm::AsmJsParser"* %0, i64 0, i32 18
  store i8* getelementptr inbounds ([17 x i8], [17 x i8]* @.str.3, i64 0, i64 0), i8** %71, align 8
  %72 = getelementptr inbounds %"class.v8::internal::wasm::AsmJsParser", %"class.v8::internal::wasm::AsmJsParser"* %0, i64 0, i32 1, i32 5
  %73 = load i64, i64* %72, align 8
  %74 = trunc i64 %73 to i32
  %75 = getelementptr inbounds %"class.v8::internal::wasm::AsmJsParser", %"class.v8::internal::wasm::AsmJsParser"* %0, i64 0, i32 19
  store i32 %74, i32* %75, align 8
  br label %77

76:                                               ; preds = %47, %28, %13, %66
  tail call void @_ZN2v88internal12AsmJsScanner4NextEv(%"class.v8::internal::AsmJsScanner"* %2) #12
  br label %77

77:                                               ; preds = %6, %21, %30, %40, %49, %59, %69, %76
  ret void
}

declare void @_ZN2v88internal12AsmJsScanner4NextEv(%"class.v8::internal::AsmJsScanner"*) local_unnamed_addr #1

; Function Attrs: nounwind ssp uwtable
define hidden void @_ZN2v88internal4wasm11AsmJsParser18ValidateModuleVarsEv(%"class.v8::internal::wasm::AsmJsParser"*) local_unnamed_addr #0 align 2 {
  %2 = getelementptr inbounds %"class.v8::internal::wasm::AsmJsParser", %"class.v8::internal::wasm::AsmJsParser"* %0, i64 0, i32 1, i32 1
  %3 = getelementptr inbounds %"class.v8::internal::wasm::AsmJsParser", %"class.v8::internal::wasm::AsmJsParser"* %0, i64 0, i32 1
  %4 = getelementptr inbounds %"class.v8::internal::wasm::AsmJsParser", %"class.v8::internal::wasm::AsmJsParser"* %0, i64 0, i32 5
  %5 = getelementptr inbounds %"class.v8::internal::wasm::AsmJsParser", %"class.v8::internal::wasm::AsmJsParser"* %0, i64 0, i32 17
  %6 = getelementptr inbounds %"class.v8::internal::wasm::AsmJsParser", %"class.v8::internal::wasm::AsmJsParser"* %0, i64 0, i32 1, i32 20
  %7 = getelementptr inbounds %"class.v8::internal::wasm::AsmJsParser", %"class.v8::internal::wasm::AsmJsParser"* %0, i64 0, i32 18
  %8 = getelementptr inbounds %"class.v8::internal::wasm::AsmJsParser", %"class.v8::internal::wasm::AsmJsParser"* %0, i64 0, i32 1, i32 5
  %9 = getelementptr inbounds %"class.v8::internal::wasm::AsmJsParser", %"class.v8::internal::wasm::AsmJsParser"* %0, i64 0, i32 19
  br label %10

10:                                               ; preds = %31, %1
  %11 = load i32, i32* %2, align 8
  switch i32 %11, label %38 [
    i32 -9946, label %13
    i32 -9958, label %12
  ]

12:                                               ; preds = %10
  br label %13

13:                                               ; preds = %10, %12
  %14 = phi i1 [ false, %12 ], [ true, %10 ]
  tail call void @_ZN2v88internal12AsmJsScanner4NextEv(%"class.v8::internal::AsmJsScanner"* %3) #12
  %15 = tail call i64 @_ZN2v88internal23GetCurrentStackPositionEv() #12
  %16 = load i64, i64* %4, align 8
  %17 = icmp ult i64 %15, %16
  br i1 %17, label %18, label %21

18:                                               ; preds = %13, %26
  store i8 1, i8* %5, align 4
  store i8* getelementptr inbounds ([44 x i8], [44 x i8]* @.str.2, i64 0, i64 0), i8** %7, align 8
  %19 = load i64, i64* %8, align 8
  %20 = trunc i64 %19 to i32
  store i32 %20, i32* %9, align 8
  br label %38

21:                                               ; preds = %13, %26
  tail call void @_ZN2v88internal4wasm11AsmJsParser17ValidateModuleVarEb(%"class.v8::internal::wasm::AsmJsParser"* %0, i1 zeroext %14)
  %22 = load i8, i8* %5, align 4, !range !69
  %23 = icmp eq i8 %22, 0
  br i1 %23, label %24, label %38

24:                                               ; preds = %21
  %25 = load i32, i32* %2, align 8
  switch i32 %25, label %32 [
    i32 44, label %26
    i32 59, label %30
    i32 125, label %31
  ]

26:                                               ; preds = %24
  tail call void @_ZN2v88internal12AsmJsScanner4NextEv(%"class.v8::internal::AsmJsScanner"* %3) #12
  %27 = tail call i64 @_ZN2v88internal23GetCurrentStackPositionEv() #12
  %28 = load i64, i64* %4, align 8
  %29 = icmp ult i64 %27, %28
  br i1 %29, label %18, label %21

30:                                               ; preds = %24
  tail call void @_ZN2v88internal12AsmJsScanner4NextEv(%"class.v8::internal::AsmJsScanner"* %3) #12
  br label %31

31:                                               ; preds = %24, %30, %32, %35
  br label %10

32:                                               ; preds = %24
  %33 = load i8, i8* %6, align 4, !range !69
  %34 = icmp eq i8 %33, 0
  br i1 %34, label %35, label %31

35:                                               ; preds = %32
  store i8 1, i8* %5, align 4
  store i8* getelementptr inbounds ([11 x i8], [11 x i8]* @.str.1, i64 0, i64 0), i8** %7, align 8
  %36 = load i64, i64* %8, align 8
  %37 = trunc i64 %36 to i32
  store i32 %37, i32* %9, align 8
  br label %31

38:                                               ; preds = %10, %21, %18
  ret void
}

; Function Attrs: nounwind ssp uwtable
define hidden void @_ZN2v88internal4wasm11AsmJsParser16ValidateFunctionEv(%"class.v8::internal::wasm::AsmJsParser"*) local_unnamed_addr #0 align 2 {
  %2 = alloca %"class.v8::internal::wasm::AsmJsParser::CachedVector", align 8
  %3 = alloca %"class.v8::internal::wasm::AsmJsParser::CachedVector.209", align 8
  %4 = getelementptr inbounds %"class.v8::internal::wasm::AsmJsParser", %"class.v8::internal::wasm::AsmJsParser"* %0, i64 0, i32 1
  %5 = getelementptr inbounds %"class.v8::internal::wasm::AsmJsParser", %"class.v8::internal::wasm::AsmJsParser"* %0, i64 0, i32 1, i32 5
  %6 = load i64, i64* %5, align 8
  %7 = getelementptr inbounds %"class.v8::internal::wasm::AsmJsParser", %"class.v8::internal::wasm::AsmJsParser"* %0, i64 0, i32 1, i32 1
  %8 = load i32, i32* %7, align 8
  %9 = icmp eq i32 %8, -9951
  br i1 %9, label %15, label %10

10:                                               ; preds = %1
  %11 = getelementptr inbounds %"class.v8::internal::wasm::AsmJsParser", %"class.v8::internal::wasm::AsmJsParser"* %0, i64 0, i32 17
  store i8 1, i8* %11, align 4
  %12 = getelementptr inbounds %"class.v8::internal::wasm::AsmJsParser", %"class.v8::internal::wasm::AsmJsParser"* %0, i64 0, i32 18
  store i8* getelementptr inbounds ([17 x i8], [17 x i8]* @.str.3, i64 0, i64 0), i8** %12, align 8
  %13 = trunc i64 %6 to i32
  %14 = getelementptr inbounds %"class.v8::internal::wasm::AsmJsParser", %"class.v8::internal::wasm::AsmJsParser"* %0, i64 0, i32 19
  store i32 %13, i32* %14, align 8
  br label %1099

15:                                               ; preds = %1
  tail call void @_ZN2v88internal12AsmJsScanner4NextEv(%"class.v8::internal::AsmJsScanner"* %4) #12
  %16 = load i32, i32* %7, align 8
  %17 = icmp sgt i32 %16, 255
  br i1 %17, label %24, label %18

18:                                               ; preds = %15
  %19 = getelementptr inbounds %"class.v8::internal::wasm::AsmJsParser", %"class.v8::internal::wasm::AsmJsParser"* %0, i64 0, i32 17
  store i8 1, i8* %19, align 4
  %20 = getelementptr inbounds %"class.v8::internal::wasm::AsmJsParser", %"class.v8::internal::wasm::AsmJsParser"* %0, i64 0, i32 18
  store i8* getelementptr inbounds ([23 x i8], [23 x i8]* @.str.22, i64 0, i64 0), i8** %20, align 8
  %21 = load i64, i64* %5, align 8
  %22 = trunc i64 %21 to i32
  %23 = getelementptr inbounds %"class.v8::internal::wasm::AsmJsParser", %"class.v8::internal::wasm::AsmJsParser"* %0, i64 0, i32 19
  store i32 %22, i32* %23, align 8
  br label %1099

24:                                               ; preds = %15
  %25 = getelementptr inbounds %"class.v8::internal::wasm::AsmJsParser", %"class.v8::internal::wasm::AsmJsParser"* %0, i64 0, i32 1, i32 10
  %26 = getelementptr inbounds %"class.v8::internal::wasm::AsmJsParser", %"class.v8::internal::wasm::AsmJsParser"* %0, i64 0, i32 0
  %27 = load %"class.v8::internal::Zone"*, %"class.v8::internal::Zone"** %26, align 8
  %28 = bitcast %"class.std::__1::basic_string"* %25 to %"struct.std::__1::basic_string<char, std::__1::char_traits<char>, std::__1::allocator<char> >::__short"*
  %29 = getelementptr inbounds %"struct.std::__1::basic_string<char, std::__1::char_traits<char>, std::__1::allocator<char> >::__short", %"struct.std::__1::basic_string<char, std::__1::char_traits<char>, std::__1::allocator<char> >::__short"* %28, i64 0, i32 1, i32 0
  %30 = load i8, i8* %29, align 1
  %31 = icmp slt i8 %30, 0
  br i1 %31, label %32, label %35

32:                                               ; preds = %24
  %33 = getelementptr inbounds %"class.v8::internal::wasm::AsmJsParser", %"class.v8::internal::wasm::AsmJsParser"* %0, i64 0, i32 1, i32 10, i32 0, i32 0, i32 0, i32 0, i32 0, i32 1
  %34 = load i64, i64* %33, align 8
  br label %37

35:                                               ; preds = %24
  %36 = zext i8 %30 to i64
  br label %37

37:                                               ; preds = %35, %32
  %38 = phi i64 [ %34, %32 ], [ %36, %35 ]
  %39 = add i64 %38, 7
  %40 = and i64 %39, -8
  %41 = getelementptr inbounds %"class.v8::internal::Zone", %"class.v8::internal::Zone"* %27, i64 0, i32 2
  %42 = load i64, i64* %41, align 8
  %43 = getelementptr inbounds %"class.v8::internal::Zone", %"class.v8::internal::Zone"* %27, i64 0, i32 3
  %44 = load i64, i64* %43, align 8
  %45 = sub i64 %44, %42
  %46 = icmp ugt i64 %40, %45
  br i1 %46, label %47, label %49, !prof !2

47:                                               ; preds = %37
  %48 = tail call i64 @_ZN2v88internal4Zone9NewExpandEm(%"class.v8::internal::Zone"* %27, i64 %40) #12
  br label %51

49:                                               ; preds = %37
  %50 = add i64 %40, %42
  store i64 %50, i64* %41, align 8
  br label %51

51:                                               ; preds = %49, %47
  %52 = phi i64 [ %48, %47 ], [ %42, %49 ]
  %53 = inttoptr i64 %52 to i8*
  %54 = load i8, i8* %29, align 1
  %55 = icmp slt i8 %54, 0
  br i1 %55, label %56, label %59

56:                                               ; preds = %51
  %57 = getelementptr inbounds %"class.v8::internal::wasm::AsmJsParser", %"class.v8::internal::wasm::AsmJsParser"* %0, i64 0, i32 1, i32 10, i32 0, i32 0, i32 0, i32 0, i32 0, i32 1
  %58 = load i64, i64* %57, align 8
  br label %61

59:                                               ; preds = %51
  %60 = zext i8 %54 to i64
  br label %61

61:                                               ; preds = %59, %56
  %62 = phi i64 [ %58, %56 ], [ %60, %59 ]
  %63 = tail call i64 @_ZNKSt3__112basic_stringIcNS_11char_traitsIcEENS_9allocatorIcEEE4copyEPcmm(%"class.std::__1::basic_string"* %25, i8* %53, i64 %62, i64 0) #12
  %64 = load i8, i8* %29, align 1
  %65 = icmp slt i8 %64, 0
  br i1 %65, label %66, label %69

66:                                               ; preds = %61
  %67 = getelementptr inbounds %"class.v8::internal::wasm::AsmJsParser", %"class.v8::internal::wasm::AsmJsParser"* %0, i64 0, i32 1, i32 10, i32 0, i32 0, i32 0, i32 0, i32 0, i32 1
  %68 = load i64, i64* %67, align 8
  br label %71

69:                                               ; preds = %61
  %70 = zext i8 %64 to i64
  br label %71

71:                                               ; preds = %66, %69
  %72 = phi i64 [ %68, %66 ], [ %70, %69 ]
  %73 = shl i64 %72, 32
  %74 = ashr exact i64 %73, 32
  %75 = load i32, i32* %7, align 8
  tail call void @_ZN2v88internal12AsmJsScanner4NextEv(%"class.v8::internal::AsmJsScanner"* %4) #12
  %76 = icmp sgt i32 %75, 255
  %77 = getelementptr inbounds %"class.v8::internal::wasm::AsmJsParser", %"class.v8::internal::wasm::AsmJsParser"* %0, i64 0, i32 7
  %78 = getelementptr inbounds %"class.v8::internal::wasm::AsmJsParser", %"class.v8::internal::wasm::AsmJsParser"* %0, i64 0, i32 8
  %79 = select i1 %76, %"class.v8::internal::Vector.160"* %77, %"class.v8::internal::Vector.160"* %78
  %80 = getelementptr inbounds %"class.v8::internal::Vector.160", %"class.v8::internal::Vector.160"* %79, i64 0, i32 1
  %81 = load i64, i64* %80, align 8
  br i1 %76, label %85, label %82

82:                                               ; preds = %71
  %83 = sub nsw i32 -10000, %75
  %84 = sext i32 %83 to i64
  br label %93

85:                                               ; preds = %71
  %86 = add nsw i32 %75, -256
  %87 = sext i32 %86 to i64
  %88 = getelementptr inbounds %"class.v8::internal::wasm::AsmJsParser", %"class.v8::internal::wasm::AsmJsParser"* %0, i64 0, i32 9
  %89 = load i64, i64* %88, align 8
  %90 = icmp ugt i64 %89, %87
  br i1 %90, label %93, label %91

91:                                               ; preds = %85
  %92 = add nuw nsw i64 %87, 1
  store i64 %92, i64* %88, align 8
  br label %93

93:                                               ; preds = %91, %85, %82
  %94 = phi i64 [ %87, %91 ], [ %87, %85 ], [ %84, %82 ]
  %95 = add nsw i64 %94, 1
  %96 = icmp ugt i64 %95, %81
  br i1 %96, label %100, label %97

97:                                               ; preds = %93
  %98 = getelementptr inbounds %"class.v8::internal::Vector.160", %"class.v8::internal::Vector.160"* %79, i64 0, i32 0
  %99 = load %"struct.v8::internal::wasm::AsmJsParser::VarInfo"*, %"struct.v8::internal::wasm::AsmJsParser::VarInfo"** %98, align 8
  br label %140

100:                                              ; preds = %93
  %101 = shl i64 %81, 1
  %102 = icmp ult i64 %101, %95
  %103 = select i1 %102, i64 %95, i64 %101
  %104 = load %"class.v8::internal::Zone"*, %"class.v8::internal::Zone"** %26, align 8
  %105 = mul i64 %103, 40
  %106 = getelementptr inbounds %"class.v8::internal::Zone", %"class.v8::internal::Zone"* %104, i64 0, i32 2
  %107 = load i64, i64* %106, align 8
  %108 = getelementptr inbounds %"class.v8::internal::Zone", %"class.v8::internal::Zone"* %104, i64 0, i32 3
  %109 = load i64, i64* %108, align 8
  %110 = sub i64 %109, %107
  %111 = icmp ugt i64 %105, %110
  br i1 %111, label %112, label %114, !prof !2

112:                                              ; preds = %100
  %113 = tail call i64 @_ZN2v88internal4Zone9NewExpandEm(%"class.v8::internal::Zone"* %104, i64 %105) #12
  br label %116

114:                                              ; preds = %100
  %115 = add i64 %107, %105
  store i64 %115, i64* %106, align 8
  br label %116

116:                                              ; preds = %114, %112
  %117 = phi i64 [ %113, %112 ], [ %107, %114 ]
  %118 = inttoptr i64 %117 to %"struct.v8::internal::wasm::AsmJsParser::VarInfo"*
  %119 = getelementptr inbounds %"struct.v8::internal::wasm::AsmJsParser::VarInfo", %"struct.v8::internal::wasm::AsmJsParser::VarInfo"* %118, i64 %103
  %120 = icmp eq i64 %103, 0
  br i1 %120, label %130, label %121

121:                                              ; preds = %116, %121
  %122 = phi %"struct.v8::internal::wasm::AsmJsParser::VarInfo"* [ %128, %121 ], [ %118, %116 ]
  %123 = getelementptr inbounds %"struct.v8::internal::wasm::AsmJsParser::VarInfo", %"struct.v8::internal::wasm::AsmJsParser::VarInfo"* %122, i64 0, i32 0
  store %"class.v8::internal::wasm::AsmType"* inttoptr (i64 2147483649 to %"class.v8::internal::wasm::AsmType"*), %"class.v8::internal::wasm::AsmType"** %123, align 8
  %124 = getelementptr inbounds %"struct.v8::internal::wasm::AsmJsParser::VarInfo", %"struct.v8::internal::wasm::AsmJsParser::VarInfo"* %122, i64 0, i32 1
  %125 = getelementptr inbounds %"struct.v8::internal::wasm::AsmJsParser::VarInfo", %"struct.v8::internal::wasm::AsmJsParser::VarInfo"* %122, i64 0, i32 6
  %126 = bitcast %"class.v8::internal::wasm::WasmFunctionBuilder"** %124 to i8*
  tail call void @llvm.memset.p0i8.i64(i8* align 8 %126, i8 0, i64 28, i1 false) #12
  store i8 1, i8* %125, align 4
  %127 = getelementptr inbounds %"struct.v8::internal::wasm::AsmJsParser::VarInfo", %"struct.v8::internal::wasm::AsmJsParser::VarInfo"* %122, i64 0, i32 7
  store i8 0, i8* %127, align 1
  %128 = getelementptr inbounds %"struct.v8::internal::wasm::AsmJsParser::VarInfo", %"struct.v8::internal::wasm::AsmJsParser::VarInfo"* %122, i64 1
  %129 = icmp eq %"struct.v8::internal::wasm::AsmJsParser::VarInfo"* %128, %119
  br i1 %129, label %130, label %121

130:                                              ; preds = %121, %116
  %131 = getelementptr inbounds %"class.v8::internal::Vector.160", %"class.v8::internal::Vector.160"* %79, i64 0, i32 0
  %132 = load i64, i64* %80, align 8
  %133 = mul nuw i64 %132, 40
  %134 = icmp eq i64 %133, 0
  br i1 %134, label %139, label %135

135:                                              ; preds = %130
  %136 = bitcast %"class.v8::internal::Vector.160"* %79 to i8**
  %137 = load i8*, i8** %136, align 8
  %138 = inttoptr i64 %117 to i8*
  tail call void @llvm.memmove.p0i8.p0i8.i64(i8* align 8 %138, i8* align 8 %137, i64 %133, i1 false) #12
  br label %139

139:                                              ; preds = %135, %130
  store %"struct.v8::internal::wasm::AsmJsParser::VarInfo"* %118, %"struct.v8::internal::wasm::AsmJsParser::VarInfo"** %131, align 8
  store i64 %103, i64* %80, align 8
  br label %140

140:                                              ; preds = %97, %139
  %141 = phi %"struct.v8::internal::wasm::AsmJsParser::VarInfo"* [ %99, %97 ], [ %118, %139 ]
  %142 = getelementptr inbounds %"struct.v8::internal::wasm::AsmJsParser::VarInfo", %"struct.v8::internal::wasm::AsmJsParser::VarInfo"* %141, i64 %94, i32 5
  %143 = load i32, i32* %142, align 8
  switch i32 %143, label %153 [
    i32 0, label %144
    i32 4, label %159
  ]

144:                                              ; preds = %140
  store i32 4, i32* %142, align 8
  %145 = getelementptr inbounds %"class.v8::internal::wasm::AsmJsParser", %"class.v8::internal::wasm::AsmJsParser"* %0, i64 0, i32 2
  %146 = load %"class.v8::internal::wasm::WasmModuleBuilder"*, %"class.v8::internal::wasm::WasmModuleBuilder"** %145, align 8
  %147 = tail call %"class.v8::internal::wasm::WasmFunctionBuilder"* @_ZN2v88internal4wasm17WasmModuleBuilder11AddFunctionEPNS0_9SignatureINS1_9ValueTypeEEE(%"class.v8::internal::wasm::WasmModuleBuilder"* %146, %"class.v8::internal::Signature"* null) #12
  %148 = getelementptr inbounds %"struct.v8::internal::wasm::AsmJsParser::VarInfo", %"struct.v8::internal::wasm::AsmJsParser::VarInfo"* %141, i64 %94, i32 1
  store %"class.v8::internal::wasm::WasmFunctionBuilder"* %147, %"class.v8::internal::wasm::WasmFunctionBuilder"** %148, align 8
  %149 = getelementptr inbounds %"class.v8::internal::wasm::WasmFunctionBuilder", %"class.v8::internal::wasm::WasmFunctionBuilder"* %147, i64 0, i32 3
  %150 = load i32, i32* %149, align 4
  %151 = getelementptr inbounds %"struct.v8::internal::wasm::AsmJsParser::VarInfo", %"struct.v8::internal::wasm::AsmJsParser::VarInfo"* %141, i64 %94, i32 4
  store i32 %150, i32* %151, align 4
  %152 = getelementptr inbounds %"struct.v8::internal::wasm::AsmJsParser::VarInfo", %"struct.v8::internal::wasm::AsmJsParser::VarInfo"* %141, i64 %94, i32 6
  store i8 0, i8* %152, align 4
  br label %172

153:                                              ; preds = %140
  %154 = getelementptr inbounds %"class.v8::internal::wasm::AsmJsParser", %"class.v8::internal::wasm::AsmJsParser"* %0, i64 0, i32 17
  store i8 1, i8* %154, align 4
  %155 = getelementptr inbounds %"class.v8::internal::wasm::AsmJsParser", %"class.v8::internal::wasm::AsmJsParser"* %0, i64 0, i32 18
  store i8* getelementptr inbounds ([37 x i8], [37 x i8]* @.str.32, i64 0, i64 0), i8** %155, align 8
  %156 = load i64, i64* %5, align 8
  %157 = trunc i64 %156 to i32
  %158 = getelementptr inbounds %"class.v8::internal::wasm::AsmJsParser", %"class.v8::internal::wasm::AsmJsParser"* %0, i64 0, i32 19
  store i32 %157, i32* %158, align 8
  br label %1099

159:                                              ; preds = %140
  %160 = getelementptr inbounds %"struct.v8::internal::wasm::AsmJsParser::VarInfo", %"struct.v8::internal::wasm::AsmJsParser::VarInfo"* %141, i64 %94, i32 7
  %161 = load i8, i8* %160, align 1, !range !69
  %162 = icmp eq i8 %161, 0
  br i1 %162, label %163, label %166

163:                                              ; preds = %159
  %164 = getelementptr inbounds %"struct.v8::internal::wasm::AsmJsParser::VarInfo", %"struct.v8::internal::wasm::AsmJsParser::VarInfo"* %141, i64 %94, i32 1
  %165 = load %"class.v8::internal::wasm::WasmFunctionBuilder"*, %"class.v8::internal::wasm::WasmFunctionBuilder"** %164, align 8
  br label %172

166:                                              ; preds = %159
  %167 = getelementptr inbounds %"class.v8::internal::wasm::AsmJsParser", %"class.v8::internal::wasm::AsmJsParser"* %0, i64 0, i32 17
  store i8 1, i8* %167, align 4
  %168 = getelementptr inbounds %"class.v8::internal::wasm::AsmJsParser", %"class.v8::internal::wasm::AsmJsParser"* %0, i64 0, i32 18
  store i8* getelementptr inbounds ([19 x i8], [19 x i8]* @.str.33, i64 0, i64 0), i8** %168, align 8
  %169 = load i64, i64* %5, align 8
  %170 = trunc i64 %169 to i32
  %171 = getelementptr inbounds %"class.v8::internal::wasm::AsmJsParser", %"class.v8::internal::wasm::AsmJsParser"* %0, i64 0, i32 19
  store i32 %170, i32* %171, align 8
  br label %1099

172:                                              ; preds = %163, %144
  %173 = phi %"class.v8::internal::wasm::WasmFunctionBuilder"* [ %165, %163 ], [ %147, %144 ]
  %174 = getelementptr inbounds %"struct.v8::internal::wasm::AsmJsParser::VarInfo", %"struct.v8::internal::wasm::AsmJsParser::VarInfo"* %141, i64 %94, i32 7
  store i8 1, i8* %174, align 1
  %175 = getelementptr inbounds %"struct.v8::internal::wasm::AsmJsParser::VarInfo", %"struct.v8::internal::wasm::AsmJsParser::VarInfo"* %141, i64 %94, i32 1
  tail call void @_ZN2v88internal4wasm19WasmFunctionBuilder7SetNameENS0_6VectorIKcEE(%"class.v8::internal::wasm::WasmFunctionBuilder"* %173, i8* %53, i64 %74) #12
  %176 = bitcast %"class.v8::internal::wasm::WasmFunctionBuilder"** %175 to i64*
  %177 = load i64, i64* %176, align 8
  %178 = getelementptr inbounds %"class.v8::internal::wasm::AsmJsParser", %"class.v8::internal::wasm::AsmJsParser"* %0, i64 0, i32 3
  %179 = bitcast %"class.v8::internal::wasm::WasmFunctionBuilder"** %178 to i64*
  store i64 %177, i64* %179, align 8
  %180 = getelementptr inbounds %"class.v8::internal::wasm::AsmJsParser", %"class.v8::internal::wasm::AsmJsParser"* %0, i64 0, i32 4
  store %"class.v8::internal::wasm::AsmType"* null, %"class.v8::internal::wasm::AsmType"** %180, align 8
  %181 = inttoptr i64 %177 to %"class.v8::internal::wasm::WasmFunctionBuilder"*
  tail call void @_ZN2v88internal4wasm19WasmFunctionBuilder27SetAsmFunctionStartPositionEm(%"class.v8::internal::wasm::WasmFunctionBuilder"* %181, i64 %6) #12
  %182 = bitcast %"class.v8::internal::wasm::AsmJsParser::CachedVector"* %2 to i8*
  call void @llvm.lifetime.start.p0i8(i64 40, i8* nonnull %182) #12
  %183 = getelementptr inbounds %"class.v8::internal::wasm::AsmJsParser", %"class.v8::internal::wasm::AsmJsParser"* %0, i64 0, i32 11
  %184 = getelementptr inbounds %"class.v8::internal::wasm::AsmJsParser", %"class.v8::internal::wasm::AsmJsParser"* %0, i64 0, i32 11, i32 0, i32 0, i32 0, i32 2, i32 1, i32 0, i32 0
  %185 = bitcast %"class.v8::internal::Zone"** %184 to i64*
  %186 = load i64, i64* %185, align 8
  %187 = getelementptr inbounds %"class.v8::internal::wasm::AsmJsParser::CachedVector", %"class.v8::internal::wasm::AsmJsParser::CachedVector"* %2, i64 0, i32 0, i32 0, i32 0, i32 2, i32 1
  %188 = bitcast %"struct.std::__1::__compressed_pair_elem.184"* %187 to i64*
  call void @llvm.memset.p0i8.i64(i8* nonnull align 8 %182, i8 0, i64 24, i1 false) #12
  store i64 %186, i64* %188, align 8
  %189 = getelementptr inbounds %"class.v8::internal::wasm::AsmJsParser::CachedVector", %"class.v8::internal::wasm::AsmJsParser::CachedVector"* %2, i64 0, i32 1
  store %"class.v8::internal::wasm::AsmJsParser::CachedVectors.175"* %183, %"class.v8::internal::wasm::AsmJsParser::CachedVectors.175"** %189, align 8
  %190 = getelementptr inbounds %"class.v8::internal::wasm::AsmJsParser::CachedVectors.175", %"class.v8::internal::wasm::AsmJsParser::CachedVectors.175"* %183, i64 0, i32 0, i32 0, i32 0, i32 0
  %191 = load %"class.v8::internal::ZoneVector.179"*, %"class.v8::internal::ZoneVector.179"** %190, align 8
  %192 = getelementptr inbounds %"class.v8::internal::wasm::AsmJsParser", %"class.v8::internal::wasm::AsmJsParser"* %0, i64 0, i32 11, i32 0, i32 0, i32 0, i32 1
  %193 = load %"class.v8::internal::ZoneVector.179"*, %"class.v8::internal::ZoneVector.179"** %192, align 8
  %194 = icmp eq %"class.v8::internal::ZoneVector.179"* %191, %193
  br i1 %194, label %195, label %197

195:                                              ; preds = %172
  %196 = bitcast %"class.v8::internal::wasm::AsmJsParser::CachedVector"* %2 to i64*
  br label %225

197:                                              ; preds = %172
  %198 = getelementptr inbounds %"class.v8::internal::ZoneVector.179", %"class.v8::internal::ZoneVector.179"* %193, i64 -1, i32 0
  %199 = bitcast %"class.std::__1::vector.180"* %198 to i64*
  %200 = load i64, i64* %199, align 8
  %201 = bitcast %"class.v8::internal::wasm::AsmJsParser::CachedVector"* %2 to i64*
  store i64 0, i64* %199, align 8
  store i64 %200, i64* %201, align 8
  %202 = getelementptr inbounds %"class.v8::internal::ZoneVector.179", %"class.v8::internal::ZoneVector.179"* %193, i64 -1, i32 0, i32 0, i32 1
  %203 = getelementptr inbounds %"class.v8::internal::wasm::AsmJsParser::CachedVector", %"class.v8::internal::wasm::AsmJsParser::CachedVector"* %2, i64 0, i32 0, i32 0, i32 0, i32 1
  %204 = bitcast %"class.v8::internal::wasm::AsmType"*** %202 to i64*
  %205 = load i64, i64* %204, align 8
  %206 = bitcast %"class.v8::internal::wasm::AsmType"*** %203 to i64*
  %207 = load i64, i64* %206, align 8
  store i64 %207, i64* %204, align 8
  store i64 %205, i64* %206, align 8
  %208 = getelementptr inbounds %"class.v8::internal::ZoneVector.179", %"class.v8::internal::ZoneVector.179"* %193, i64 -1, i32 0, i32 0, i32 2, i32 0, i32 0
  %209 = getelementptr inbounds %"class.v8::internal::wasm::AsmJsParser::CachedVector", %"class.v8::internal::wasm::AsmJsParser::CachedVector"* %2, i64 0, i32 0, i32 0, i32 0, i32 2, i32 0, i32 0
  %210 = bitcast %"class.v8::internal::wasm::AsmType"*** %208 to i64*
  %211 = load i64, i64* %210, align 8
  %212 = bitcast %"class.v8::internal::wasm::AsmType"*** %209 to i64*
  %213 = load i64, i64* %212, align 8
  store i64 %213, i64* %210, align 8
  store i64 %211, i64* %212, align 8
  %214 = load %"class.v8::internal::ZoneVector.179"*, %"class.v8::internal::ZoneVector.179"** %192, align 8
  %215 = getelementptr inbounds %"class.v8::internal::ZoneVector.179", %"class.v8::internal::ZoneVector.179"* %214, i64 -1
  %216 = getelementptr inbounds %"class.v8::internal::ZoneVector.179", %"class.v8::internal::ZoneVector.179"* %215, i64 0, i32 0, i32 0, i32 0
  %217 = load %"class.v8::internal::wasm::AsmType"**, %"class.v8::internal::wasm::AsmType"*** %216, align 8
  %218 = icmp eq %"class.v8::internal::wasm::AsmType"** %217, null
  br i1 %218, label %223, label %219

219:                                              ; preds = %197
  %220 = ptrtoint %"class.v8::internal::wasm::AsmType"** %217 to i64
  %221 = getelementptr inbounds %"class.v8::internal::ZoneVector.179", %"class.v8::internal::ZoneVector.179"* %214, i64 -1, i32 0, i32 0, i32 1
  %222 = bitcast %"class.v8::internal::wasm::AsmType"*** %221 to i64*
  store i64 %220, i64* %222, align 8
  br label %223

223:                                              ; preds = %219, %197
  store %"class.v8::internal::ZoneVector.179"* %215, %"class.v8::internal::ZoneVector.179"** %192, align 8
  %224 = load i64, i64* %201, align 8
  store i64 %224, i64* %206, align 8
  br label %225

225:                                              ; preds = %195, %223
  %226 = phi i64* [ %196, %195 ], [ %201, %223 ]
  %227 = getelementptr inbounds %"class.v8::internal::wasm::AsmJsParser::CachedVector", %"class.v8::internal::wasm::AsmJsParser::CachedVector"* %2, i64 0, i32 0
  call void @_ZN2v88internal4wasm11AsmJsParser22ValidateFunctionParamsEPNS0_10ZoneVectorIPNS1_7AsmTypeEEE(%"class.v8::internal::wasm::AsmJsParser"* %0, %"class.v8::internal::ZoneVector.179"* nonnull %227)
  %228 = getelementptr inbounds %"class.v8::internal::wasm::AsmJsParser::CachedVector", %"class.v8::internal::wasm::AsmJsParser::CachedVector"* %2, i64 0, i32 0, i32 0, i32 0, i32 1
  %229 = bitcast %"class.v8::internal::wasm::AsmType"*** %228 to i64*
  %230 = load i64, i64* %229, align 8
  %231 = load i64, i64* %226, align 8
  %232 = sub i64 %230, %231
  %233 = ashr exact i64 %232, 3
  %234 = icmp ugt i64 %233, 999
  br i1 %234, label %235, label %241

235:                                              ; preds = %225
  %236 = getelementptr inbounds %"class.v8::internal::wasm::AsmJsParser", %"class.v8::internal::wasm::AsmJsParser"* %0, i64 0, i32 17
  store i8 1, i8* %236, align 4
  %237 = getelementptr inbounds %"class.v8::internal::wasm::AsmJsParser", %"class.v8::internal::wasm::AsmJsParser"* %0, i64 0, i32 18
  store i8* getelementptr inbounds ([44 x i8], [44 x i8]* @.str.34, i64 0, i64 0), i8** %237, align 8
  %238 = load i64, i64* %5, align 8
  %239 = trunc i64 %238 to i32
  %240 = getelementptr inbounds %"class.v8::internal::wasm::AsmJsParser", %"class.v8::internal::wasm::AsmJsParser"* %0, i64 0, i32 19
  store i32 %239, i32* %240, align 8
  br label %1064

241:                                              ; preds = %225
  %242 = bitcast %"class.v8::internal::wasm::AsmJsParser::CachedVector.209"* %3 to i8*
  call void @llvm.lifetime.start.p0i8(i64 40, i8* nonnull %242) #12
  %243 = getelementptr inbounds %"class.v8::internal::wasm::AsmJsParser", %"class.v8::internal::wasm::AsmJsParser"* %0, i64 0, i32 10
  %244 = getelementptr inbounds %"class.v8::internal::wasm::AsmJsParser", %"class.v8::internal::wasm::AsmJsParser"* %0, i64 0, i32 10, i32 0, i32 0, i32 0, i32 2, i32 1, i32 0, i32 0
  %245 = bitcast %"class.v8::internal::Zone"** %244 to i64*
  %246 = load i64, i64* %245, align 8
  %247 = getelementptr inbounds %"class.v8::internal::wasm::AsmJsParser::CachedVector.209", %"class.v8::internal::wasm::AsmJsParser::CachedVector.209"* %3, i64 0, i32 0, i32 0, i32 0, i32 2, i32 1
  %248 = bitcast %"struct.std::__1::__compressed_pair_elem.169"* %247 to i64*
  call void @llvm.memset.p0i8.i64(i8* nonnull align 8 %242, i8 0, i64 24, i1 false) #12
  store i64 %246, i64* %248, align 8
  %249 = getelementptr inbounds %"class.v8::internal::wasm::AsmJsParser::CachedVector.209", %"class.v8::internal::wasm::AsmJsParser::CachedVector.209"* %3, i64 0, i32 1
  store %"class.v8::internal::wasm::AsmJsParser::CachedVectors"* %243, %"class.v8::internal::wasm::AsmJsParser::CachedVectors"** %249, align 8
  %250 = getelementptr inbounds %"class.v8::internal::wasm::AsmJsParser::CachedVectors", %"class.v8::internal::wasm::AsmJsParser::CachedVectors"* %243, i64 0, i32 0, i32 0, i32 0, i32 0
  %251 = load %"class.v8::internal::ZoneVector.164"*, %"class.v8::internal::ZoneVector.164"** %250, align 8
  %252 = getelementptr inbounds %"class.v8::internal::wasm::AsmJsParser", %"class.v8::internal::wasm::AsmJsParser"* %0, i64 0, i32 10, i32 0, i32 0, i32 0, i32 1
  %253 = load %"class.v8::internal::ZoneVector.164"*, %"class.v8::internal::ZoneVector.164"** %252, align 8
  %254 = icmp eq %"class.v8::internal::ZoneVector.164"* %251, %253
  br i1 %254, label %255, label %257

255:                                              ; preds = %241
  %256 = bitcast %"class.v8::internal::wasm::AsmJsParser::CachedVector.209"* %3 to i64*
  br label %289

257:                                              ; preds = %241
  %258 = getelementptr inbounds %"class.v8::internal::ZoneVector.164", %"class.v8::internal::ZoneVector.164"* %253, i64 -1, i32 0
  %259 = bitcast %"class.std::__1::vector.165"* %258 to i64*
  %260 = load i64, i64* %259, align 8
  %261 = bitcast %"class.v8::internal::wasm::AsmJsParser::CachedVector.209"* %3 to i64*
  store i64 0, i64* %259, align 8
  store i64 %260, i64* %261, align 8
  %262 = getelementptr inbounds %"class.v8::internal::ZoneVector.164", %"class.v8::internal::ZoneVector.164"* %253, i64 -1, i32 0, i32 0, i32 1
  %263 = getelementptr inbounds %"class.v8::internal::wasm::AsmJsParser::CachedVector.209", %"class.v8::internal::wasm::AsmJsParser::CachedVector.209"* %3, i64 0, i32 0, i32 0, i32 0, i32 1
  %264 = bitcast %"class.v8::internal::wasm::ValueType"** %262 to i64*
  %265 = load i64, i64* %264, align 8
  %266 = bitcast %"class.v8::internal::wasm::ValueType"** %263 to i64*
  %267 = load i64, i64* %266, align 8
  store i64 %267, i64* %264, align 8
  store i64 %265, i64* %266, align 8
  %268 = getelementptr inbounds %"class.v8::internal::ZoneVector.164", %"class.v8::internal::ZoneVector.164"* %253, i64 -1, i32 0, i32 0, i32 2, i32 0, i32 0
  %269 = getelementptr inbounds %"class.v8::internal::wasm::AsmJsParser::CachedVector.209", %"class.v8::internal::wasm::AsmJsParser::CachedVector.209"* %3, i64 0, i32 0, i32 0, i32 0, i32 2, i32 0, i32 0
  %270 = bitcast %"class.v8::internal::wasm::ValueType"** %268 to i64*
  %271 = load i64, i64* %270, align 8
  %272 = bitcast %"class.v8::internal::wasm::ValueType"** %269 to i64*
  %273 = load i64, i64* %272, align 8
  store i64 %273, i64* %270, align 8
  store i64 %271, i64* %272, align 8
  %274 = load %"class.v8::internal::ZoneVector.164"*, %"class.v8::internal::ZoneVector.164"** %252, align 8
  %275 = getelementptr inbounds %"class.v8::internal::ZoneVector.164", %"class.v8::internal::ZoneVector.164"* %274, i64 -1
  %276 = getelementptr inbounds %"class.v8::internal::ZoneVector.164", %"class.v8::internal::ZoneVector.164"* %275, i64 0, i32 0, i32 0, i32 0
  %277 = load %"class.v8::internal::wasm::ValueType"*, %"class.v8::internal::wasm::ValueType"** %276, align 8
  %278 = icmp eq %"class.v8::internal::wasm::ValueType"* %277, null
  br i1 %278, label %283, label %279

279:                                              ; preds = %257
  %280 = ptrtoint %"class.v8::internal::wasm::ValueType"* %277 to i64
  %281 = getelementptr inbounds %"class.v8::internal::ZoneVector.164", %"class.v8::internal::ZoneVector.164"* %274, i64 -1, i32 0, i32 0, i32 1
  %282 = bitcast %"class.v8::internal::wasm::ValueType"** %281 to i64*
  store i64 %280, i64* %282, align 8
  br label %283

283:                                              ; preds = %279, %257
  store %"class.v8::internal::ZoneVector.164"* %275, %"class.v8::internal::ZoneVector.164"** %252, align 8
  %284 = load i64, i64* %261, align 8
  store i64 %284, i64* %266, align 8
  %285 = load i64, i64* %229, align 8
  %286 = load i64, i64* %226, align 8
  %287 = sub i64 %285, %286
  %288 = ashr exact i64 %287, 3
  br label %289

289:                                              ; preds = %255, %283
  %290 = phi i64* [ %256, %255 ], [ %261, %283 ]
  %291 = phi i64 [ %233, %255 ], [ %288, %283 ]
  %292 = getelementptr inbounds %"class.v8::internal::wasm::AsmJsParser::CachedVector.209", %"class.v8::internal::wasm::AsmJsParser::CachedVector.209"* %3, i64 0, i32 0
  call void @_ZN2v88internal4wasm11AsmJsParser22ValidateFunctionLocalsEmPNS0_10ZoneVectorINS1_9ValueTypeEEE(%"class.v8::internal::wasm::AsmJsParser"* %0, i64 %291, %"class.v8::internal::ZoneVector.164"* nonnull %292)
  %293 = load i64, i64* %229, align 8
  %294 = load i64, i64* %226, align 8
  %295 = sub i64 %293, %294
  %296 = lshr exact i64 %295, 3
  %297 = getelementptr inbounds %"class.v8::internal::wasm::AsmJsParser::CachedVector.209", %"class.v8::internal::wasm::AsmJsParser::CachedVector.209"* %3, i64 0, i32 0, i32 0, i32 0, i32 1
  %298 = bitcast %"class.v8::internal::wasm::ValueType"** %297 to i64*
  %299 = load i64, i64* %298, align 8
  %300 = load i64, i64* %290, align 8
  %301 = sub i64 %299, %300
  %302 = lshr exact i64 %301, 2
  %303 = add nuw nsw i64 %302, %296
  %304 = trunc i64 %303 to i32
  %305 = getelementptr inbounds %"class.v8::internal::wasm::AsmJsParser", %"class.v8::internal::wasm::AsmJsParser"* %0, i64 0, i32 14
  store i32 %304, i32* %305, align 8
  %306 = getelementptr inbounds %"class.v8::internal::wasm::AsmJsParser", %"class.v8::internal::wasm::AsmJsParser"* %0, i64 0, i32 15
  store i32 0, i32* %306, align 4
  %307 = getelementptr inbounds %"class.v8::internal::wasm::AsmJsParser", %"class.v8::internal::wasm::AsmJsParser"* %0, i64 0, i32 16
  store i32 0, i32* %307, align 8
  %308 = getelementptr inbounds %"class.v8::internal::wasm::AsmJsParser", %"class.v8::internal::wasm::AsmJsParser"* %0, i64 0, i32 17
  %309 = load i8, i8* %308, align 4, !range !69
  %310 = icmp eq i8 %309, 0
  br i1 %310, label %311, label %331

311:                                              ; preds = %289
  %312 = getelementptr inbounds %"class.v8::internal::wasm::AsmJsParser", %"class.v8::internal::wasm::AsmJsParser"* %0, i64 0, i32 5
  %313 = load i32, i32* %7, align 8
  %314 = icmp eq i32 %313, 125
  br i1 %314, label %343, label %318

315:                                              ; preds = %328
  %316 = load i32, i32* %7, align 8
  %317 = icmp eq i32 %316, 125
  br i1 %317, label %341, label %318

318:                                              ; preds = %311, %315
  %319 = phi i32 [ %316, %315 ], [ %313, %311 ]
  %320 = call i64 @_ZN2v88internal23GetCurrentStackPositionEv() #12
  %321 = load i64, i64* %312, align 8
  %322 = icmp ult i64 %320, %321
  br i1 %322, label %323, label %328

323:                                              ; preds = %318
  store i8 1, i8* %308, align 4
  %324 = getelementptr inbounds %"class.v8::internal::wasm::AsmJsParser", %"class.v8::internal::wasm::AsmJsParser"* %0, i64 0, i32 18
  store i8* getelementptr inbounds ([44 x i8], [44 x i8]* @.str.2, i64 0, i64 0), i8** %324, align 8
  %325 = load i64, i64* %5, align 8
  %326 = trunc i64 %325 to i32
  %327 = getelementptr inbounds %"class.v8::internal::wasm::AsmJsParser", %"class.v8::internal::wasm::AsmJsParser"* %0, i64 0, i32 19
  store i32 %326, i32* %327, align 8
  br label %1029

328:                                              ; preds = %318
  call void @_ZN2v88internal4wasm11AsmJsParser17ValidateStatementEv(%"class.v8::internal::wasm::AsmJsParser"* %0)
  %329 = load i8, i8* %308, align 4, !range !69
  %330 = icmp eq i8 %329, 0
  br i1 %330, label %315, label %1029

331:                                              ; preds = %289
  %332 = load i32, i32* %7, align 8
  %333 = load i64, i64* %5, align 8
  %334 = icmp eq i32 %332, 125
  br i1 %334, label %335, label %337

335:                                              ; preds = %331
  %336 = add i64 %333, 1
  call void @_ZN2v88internal12AsmJsScanner4NextEv(%"class.v8::internal::AsmJsScanner"* %4) #12
  br label %347

337:                                              ; preds = %331
  store i8 1, i8* %308, align 4
  %338 = getelementptr inbounds %"class.v8::internal::wasm::AsmJsParser", %"class.v8::internal::wasm::AsmJsParser"* %0, i64 0, i32 18
  store i8* getelementptr inbounds ([17 x i8], [17 x i8]* @.str.3, i64 0, i64 0), i8** %338, align 8
  %339 = trunc i64 %333 to i32
  %340 = getelementptr inbounds %"class.v8::internal::wasm::AsmJsParser", %"class.v8::internal::wasm::AsmJsParser"* %0, i64 0, i32 19
  store i32 %339, i32* %340, align 8
  br label %1029

341:                                              ; preds = %315
  %342 = icmp eq i32 %319, -9948
  br label %343

343:                                              ; preds = %341, %311
  %344 = phi i1 [ %342, %341 ], [ false, %311 ]
  %345 = load i64, i64* %5, align 8
  %346 = add i64 %345, 1
  call void @_ZN2v88internal12AsmJsScanner4NextEv(%"class.v8::internal::AsmJsScanner"* %4) #12
  br i1 %344, label %359, label %347

347:                                              ; preds = %335, %343
  %348 = phi i64 [ %336, %335 ], [ %346, %343 ]
  %349 = load %"class.v8::internal::wasm::AsmType"*, %"class.v8::internal::wasm::AsmType"** %180, align 8
  %350 = icmp eq %"class.v8::internal::wasm::AsmType"* %349, null
  br i1 %350, label %351, label %352

351:                                              ; preds = %347
  store %"class.v8::internal::wasm::AsmType"* inttoptr (i64 17 to %"class.v8::internal::wasm::AsmType"*), %"class.v8::internal::wasm::AsmType"** %180, align 8
  br label %359

352:                                              ; preds = %347
  %353 = call zeroext i1 @_ZN2v88internal4wasm7AsmType3IsAEPS2_(%"class.v8::internal::wasm::AsmType"* nonnull %349, %"class.v8::internal::wasm::AsmType"* nonnull inttoptr (i64 17 to %"class.v8::internal::wasm::AsmType"*)) #12
  br i1 %353, label %359, label %354

354:                                              ; preds = %352
  store i8 1, i8* %308, align 4
  %355 = getelementptr inbounds %"class.v8::internal::wasm::AsmJsParser", %"class.v8::internal::wasm::AsmJsParser"* %0, i64 0, i32 18
  store i8* getelementptr inbounds ([44 x i8], [44 x i8]* @.str.35, i64 0, i64 0), i8** %355, align 8
  %356 = load i64, i64* %5, align 8
  %357 = trunc i64 %356 to i32
  %358 = getelementptr inbounds %"class.v8::internal::wasm::AsmJsParser", %"class.v8::internal::wasm::AsmJsParser"* %0, i64 0, i32 19
  store i32 %357, i32* %358, align 8
  br label %1029

359:                                              ; preds = %351, %352, %343
  %360 = phi i64 [ %348, %351 ], [ %348, %352 ], [ %346, %343 ]
  %361 = load %"class.v8::internal::wasm::AsmType"*, %"class.v8::internal::wasm::AsmType"** %180, align 8
  %362 = call %"class.v8::internal::Signature"* @_ZN2v88internal4wasm11AsmJsParser16ConvertSignatureEPNS1_7AsmTypeERKNS0_10ZoneVectorIS4_EE(%"class.v8::internal::wasm::AsmJsParser"* %0, %"class.v8::internal::wasm::AsmType"* %361, %"class.v8::internal::ZoneVector.179"* nonnull dereferenceable(32) %227)
  %363 = load %"class.v8::internal::wasm::WasmFunctionBuilder"*, %"class.v8::internal::wasm::WasmFunctionBuilder"** %178, align 8
  call void @_ZN2v88internal4wasm19WasmFunctionBuilder12SetSignatureEPNS0_9SignatureINS1_9ValueTypeEEE(%"class.v8::internal::wasm::WasmFunctionBuilder"* %363, %"class.v8::internal::Signature"* %362) #12
  %364 = getelementptr inbounds %"class.v8::internal::wasm::AsmJsParser::CachedVector.209", %"class.v8::internal::wasm::AsmJsParser::CachedVector.209"* %3, i64 0, i32 0, i32 0, i32 0, i32 0
  %365 = load %"class.v8::internal::wasm::ValueType"*, %"class.v8::internal::wasm::ValueType"** %364, align 8
  %366 = load %"class.v8::internal::wasm::ValueType"*, %"class.v8::internal::wasm::ValueType"** %297, align 8
  %367 = icmp eq %"class.v8::internal::wasm::ValueType"* %365, %366
  br i1 %367, label %368, label %371

368:                                              ; preds = %371, %359
  %369 = load i32, i32* %306, align 4
  %370 = icmp sgt i32 %369, 0
  br i1 %370, label %388, label %379

371:                                              ; preds = %359, %371
  %372 = phi %"class.v8::internal::wasm::ValueType"* [ %377, %371 ], [ %365, %359 ]
  %373 = getelementptr inbounds %"class.v8::internal::wasm::ValueType", %"class.v8::internal::wasm::ValueType"* %372, i64 0, i32 0
  %374 = load i32, i32* %373, align 4
  %375 = load %"class.v8::internal::wasm::WasmFunctionBuilder"*, %"class.v8::internal::wasm::WasmFunctionBuilder"** %178, align 8
  %376 = call i32 @_ZN2v88internal4wasm19WasmFunctionBuilder8AddLocalENS1_9ValueTypeE(%"class.v8::internal::wasm::WasmFunctionBuilder"* %375, i32 %374) #12
  %377 = getelementptr inbounds %"class.v8::internal::wasm::ValueType", %"class.v8::internal::wasm::ValueType"* %372, i64 1
  %378 = icmp eq %"class.v8::internal::wasm::ValueType"* %377, %366
  br i1 %378, label %368, label %371

379:                                              ; preds = %388, %368
  %380 = phi i32 [ %369, %368 ], [ %393, %388 ]
  %381 = load i64, i64* %298, align 8
  %382 = load i64, i64* %290, align 8
  %383 = sub i64 %381, %382
  %384 = ashr exact i64 %383, 2
  %385 = sext i32 %380 to i64
  %386 = add nsw i64 %384, %385
  %387 = icmp ugt i64 %386, 50000
  br i1 %387, label %395, label %400

388:                                              ; preds = %368, %388
  %389 = phi i32 [ %392, %388 ], [ 0, %368 ]
  %390 = load %"class.v8::internal::wasm::WasmFunctionBuilder"*, %"class.v8::internal::wasm::WasmFunctionBuilder"** %178, align 8
  %391 = call i32 @_ZN2v88internal4wasm19WasmFunctionBuilder8AddLocalENS1_9ValueTypeE(%"class.v8::internal::wasm::WasmFunctionBuilder"* %390, i32 1) #12
  %392 = add nuw nsw i32 %389, 1
  %393 = load i32, i32* %306, align 4
  %394 = icmp slt i32 %392, %393
  br i1 %394, label %388, label %379

395:                                              ; preds = %379
  store i8 1, i8* %308, align 4
  %396 = getelementptr inbounds %"class.v8::internal::wasm::AsmJsParser", %"class.v8::internal::wasm::AsmJsParser"* %0, i64 0, i32 18
  store i8* getelementptr inbounds ([49 x i8], [49 x i8]* @.str.36, i64 0, i64 0), i8** %396, align 8
  %397 = load i64, i64* %5, align 8
  %398 = trunc i64 %397 to i32
  %399 = getelementptr inbounds %"class.v8::internal::wasm::AsmJsParser", %"class.v8::internal::wasm::AsmJsParser"* %0, i64 0, i32 19
  store i32 %398, i32* %399, align 8
  br label %1029

400:                                              ; preds = %379
  %401 = load %"class.v8::internal::wasm::WasmFunctionBuilder"*, %"class.v8::internal::wasm::WasmFunctionBuilder"** %178, align 8
  call void @_ZN2v88internal4wasm19WasmFunctionBuilder4EmitENS1_10WasmOpcodeE(%"class.v8::internal::wasm::WasmFunctionBuilder"* %401, i32 11) #12
  %402 = load %"class.v8::internal::wasm::WasmFunctionBuilder"*, %"class.v8::internal::wasm::WasmFunctionBuilder"** %178, align 8
  call void @_ZN2v88internal4wasm19WasmFunctionBuilder16AddAsmWasmOffsetEmm(%"class.v8::internal::wasm::WasmFunctionBuilder"* %402, i64 %360, i64 %360) #12
  %403 = load %"class.v8::internal::wasm::WasmFunctionBuilder"*, %"class.v8::internal::wasm::WasmFunctionBuilder"** %178, align 8
  %404 = getelementptr inbounds %"class.v8::internal::wasm::WasmFunctionBuilder", %"class.v8::internal::wasm::WasmFunctionBuilder"* %403, i64 0, i32 4, i32 2
  %405 = bitcast i8** %404 to i64*
  %406 = load i64, i64* %405, align 8
  %407 = getelementptr inbounds %"class.v8::internal::wasm::WasmFunctionBuilder", %"class.v8::internal::wasm::WasmFunctionBuilder"* %403, i64 0, i32 4, i32 1
  %408 = bitcast i8** %407 to i64*
  %409 = load i64, i64* %408, align 8
  %410 = sub i64 %406, %409
  %411 = icmp ugt i64 %410, 7654321
  br i1 %411, label %412, label %417

412:                                              ; preds = %400
  store i8 1, i8* %308, align 4
  %413 = getelementptr inbounds %"class.v8::internal::wasm::AsmJsParser", %"class.v8::internal::wasm::AsmJsParser"* %0, i64 0, i32 18
  store i8* getelementptr inbounds ([45 x i8], [45 x i8]* @.str.37, i64 0, i64 0), i8** %413, align 8
  %414 = load i64, i64* %5, align 8
  %415 = trunc i64 %414 to i32
  %416 = getelementptr inbounds %"class.v8::internal::wasm::AsmJsParser", %"class.v8::internal::wasm::AsmJsParser"* %0, i64 0, i32 19
  store i32 %415, i32* %416, align 8
  br label %1029

417:                                              ; preds = %400
  %418 = load %"class.v8::internal::Zone"*, %"class.v8::internal::Zone"** %26, align 8
  %419 = bitcast %"class.v8::internal::wasm::AsmType"** %180 to i64*
  %420 = load i64, i64* %419, align 8
  %421 = ptrtoint %"class.v8::internal::Zone"* %418 to i64
  %422 = getelementptr inbounds %"class.v8::internal::Zone", %"class.v8::internal::Zone"* %418, i64 0, i32 2
  %423 = load i64, i64* %422, align 8
  %424 = getelementptr inbounds %"class.v8::internal::Zone", %"class.v8::internal::Zone"* %418, i64 0, i32 3
  %425 = load i64, i64* %424, align 8
  %426 = sub i64 %425, %423
  %427 = icmp ult i64 %426, 48
  br i1 %427, label %428, label %430, !prof !2

428:                                              ; preds = %417
  %429 = call i64 @_ZN2v88internal4Zone9NewExpandEm(%"class.v8::internal::Zone"* %418, i64 48) #12
  br label %432

430:                                              ; preds = %417
  %431 = add i64 %423, 48
  store i64 %431, i64* %422, align 8
  br label %432

432:                                              ; preds = %428, %430
  %433 = phi i64 [ %429, %428 ], [ %423, %430 ]
  %434 = inttoptr i64 %433 to %"class.v8::internal::wasm::AsmFunctionType"*
  %435 = getelementptr inbounds %"class.v8::internal::wasm::AsmFunctionType", %"class.v8::internal::wasm::AsmFunctionType"* %434, i64 0, i32 0, i32 0
  store i32 (...)** bitcast (i8** getelementptr inbounds ({ [9 x i8*] }, { [9 x i8*] }* @_ZTVN2v88internal4wasm15AsmFunctionTypeE, i64 0, inrange i32 0, i64 2) to i32 (...)**), i32 (...)*** %435, align 8
  %436 = getelementptr inbounds %"class.v8::internal::wasm::AsmFunctionType", %"class.v8::internal::wasm::AsmFunctionType"* %434, i64 0, i32 1
  %437 = bitcast %"class.v8::internal::wasm::AsmType"** %436 to i64*
  store i64 %420, i64* %437, align 8
  %438 = getelementptr inbounds %"class.v8::internal::wasm::AsmFunctionType", %"class.v8::internal::wasm::AsmFunctionType"* %434, i64 0, i32 2
  %439 = getelementptr inbounds %"class.v8::internal::wasm::AsmFunctionType", %"class.v8::internal::wasm::AsmFunctionType"* %434, i64 0, i32 2, i32 0, i32 0, i32 2, i32 1
  %440 = bitcast %"struct.std::__1::__compressed_pair_elem.184"* %439 to i64*
  %441 = bitcast %"class.v8::internal::ZoneVector.179"* %438 to i8*
  call void @llvm.memset.p0i8.i64(i8* align 8 %441, i8 0, i64 24, i1 false) #12
  store i64 %421, i64* %440, align 8
  %442 = inttoptr i64 %433 to %"class.v8::internal::wasm::AsmType"*
  %443 = getelementptr inbounds %"class.v8::internal::wasm::AsmJsParser::CachedVector", %"class.v8::internal::wasm::AsmJsParser::CachedVector"* %2, i64 0, i32 0, i32 0, i32 0, i32 0
  %444 = load %"class.v8::internal::wasm::AsmType"**, %"class.v8::internal::wasm::AsmType"*** %443, align 8
  %445 = load %"class.v8::internal::wasm::AsmType"**, %"class.v8::internal::wasm::AsmType"*** %228, align 8
  %446 = icmp eq %"class.v8::internal::wasm::AsmType"** %444, %445
  br i1 %446, label %699, label %447

447:                                              ; preds = %432
  %448 = and i64 %433, 1
  %449 = icmp eq i64 %448, 0
  %450 = inttoptr i64 %433 to %"class.v8::internal::wasm::AsmCallableType"*
  %451 = inttoptr i64 %433 to %"class.v8::internal::wasm::AsmFunctionType"* (%"class.v8::internal::wasm::AsmCallableType"*)***
  br i1 %449, label %452, label %764

452:                                              ; preds = %447, %696
  %453 = phi %"class.v8::internal::wasm::AsmType"** [ %697, %696 ], [ %444, %447 ]
  %454 = bitcast %"class.v8::internal::wasm::AsmType"** %453 to i64*
  %455 = load i64, i64* %454, align 8
  %456 = load %"class.v8::internal::wasm::AsmFunctionType"* (%"class.v8::internal::wasm::AsmCallableType"*)**, %"class.v8::internal::wasm::AsmFunctionType"* (%"class.v8::internal::wasm::AsmCallableType"*)*** %451, align 8
  %457 = getelementptr inbounds %"class.v8::internal::wasm::AsmFunctionType"* (%"class.v8::internal::wasm::AsmCallableType"*)*, %"class.v8::internal::wasm::AsmFunctionType"* (%"class.v8::internal::wasm::AsmCallableType"*)** %456, i64 2
  %458 = load %"class.v8::internal::wasm::AsmFunctionType"* (%"class.v8::internal::wasm::AsmCallableType"*)*, %"class.v8::internal::wasm::AsmFunctionType"* (%"class.v8::internal::wasm::AsmCallableType"*)** %457, align 8
  %459 = call %"class.v8::internal::wasm::AsmFunctionType"* %458(%"class.v8::internal::wasm::AsmCallableType"* %450) #12
  %460 = getelementptr inbounds %"class.v8::internal::wasm::AsmFunctionType", %"class.v8::internal::wasm::AsmFunctionType"* %459, i64 0, i32 2, i32 0
  %461 = getelementptr inbounds %"class.v8::internal::wasm::AsmFunctionType", %"class.v8::internal::wasm::AsmFunctionType"* %459, i64 0, i32 2, i32 0, i32 0, i32 1
  %462 = load %"class.v8::internal::wasm::AsmType"**, %"class.v8::internal::wasm::AsmType"*** %461, align 8
  %463 = getelementptr inbounds %"class.v8::internal::wasm::AsmFunctionType", %"class.v8::internal::wasm::AsmFunctionType"* %459, i64 0, i32 2, i32 0, i32 0, i32 2, i32 0, i32 0
  %464 = load %"class.v8::internal::wasm::AsmType"**, %"class.v8::internal::wasm::AsmType"*** %463, align 8
  %465 = icmp eq %"class.v8::internal::wasm::AsmType"** %462, %464
  %466 = ptrtoint %"class.v8::internal::wasm::AsmType"** %464 to i64
  br i1 %465, label %472, label %467

467:                                              ; preds = %452
  %468 = bitcast %"class.v8::internal::wasm::AsmType"** %462 to i64*
  store i64 %455, i64* %468, align 8
  %469 = getelementptr inbounds %"class.v8::internal::wasm::AsmType"*, %"class.v8::internal::wasm::AsmType"** %462, i64 1
  %470 = ptrtoint %"class.v8::internal::wasm::AsmType"** %469 to i64
  %471 = bitcast %"class.v8::internal::wasm::AsmType"*** %461 to i64*
  store i64 %470, i64* %471, align 8
  br label %696

472:                                              ; preds = %452
  %473 = ptrtoint %"class.v8::internal::wasm::AsmType"** %462 to i64
  %474 = bitcast %"class.v8::internal::wasm::AsmType"*** %461 to i64*
  %475 = bitcast %"class.std::__1::vector.180"* %460 to i64*
  %476 = load i64, i64* %475, align 8
  %477 = sub i64 %473, %476
  %478 = ashr exact i64 %477, 3
  %479 = add nsw i64 %478, 1
  %480 = icmp ugt i64 %479, 268435455
  br i1 %480, label %783, label %481

481:                                              ; preds = %472
  %482 = bitcast %"class.v8::internal::wasm::AsmType"*** %463 to i64*
  %483 = sub i64 %466, %476
  %484 = ashr exact i64 %483, 3
  %485 = icmp ult i64 %484, 134217727
  br i1 %485, label %486, label %491

486:                                              ; preds = %481
  %487 = ashr exact i64 %483, 2
  %488 = icmp ult i64 %487, %479
  %489 = select i1 %488, i64 %479, i64 %487
  %490 = icmp eq i64 %489, 0
  br i1 %490, label %509, label %491

491:                                              ; preds = %486, %481
  %492 = phi i64 [ %489, %486 ], [ 268435455, %481 ]
  %493 = getelementptr inbounds %"class.v8::internal::wasm::AsmFunctionType", %"class.v8::internal::wasm::AsmFunctionType"* %459, i64 0, i32 2, i32 0, i32 0, i32 2, i32 1, i32 0, i32 0
  %494 = load %"class.v8::internal::Zone"*, %"class.v8::internal::Zone"** %493, align 8
  %495 = shl i64 %492, 3
  %496 = getelementptr inbounds %"class.v8::internal::Zone", %"class.v8::internal::Zone"* %494, i64 0, i32 2
  %497 = load i64, i64* %496, align 8
  %498 = getelementptr inbounds %"class.v8::internal::Zone", %"class.v8::internal::Zone"* %494, i64 0, i32 3
  %499 = load i64, i64* %498, align 8
  %500 = sub i64 %499, %497
  %501 = icmp ugt i64 %495, %500
  br i1 %501, label %504, label %502, !prof !2

502:                                              ; preds = %491
  %503 = add i64 %497, %495
  store i64 %503, i64* %496, align 8
  br label %506

504:                                              ; preds = %491
  %505 = call i64 @_ZN2v88internal4Zone9NewExpandEm(%"class.v8::internal::Zone"* %494, i64 %495) #12
  br label %506

506:                                              ; preds = %504, %502
  %507 = phi i64 [ %505, %504 ], [ %497, %502 ]
  %508 = inttoptr i64 %507 to %"class.v8::internal::wasm::AsmType"**
  br label %509

509:                                              ; preds = %506, %486
  %510 = phi i64 [ %492, %506 ], [ 0, %486 ]
  %511 = phi %"class.v8::internal::wasm::AsmType"** [ %508, %506 ], [ null, %486 ]
  %512 = getelementptr inbounds %"class.v8::internal::wasm::AsmType"*, %"class.v8::internal::wasm::AsmType"** %511, i64 %478
  %513 = getelementptr inbounds %"class.v8::internal::wasm::AsmType"*, %"class.v8::internal::wasm::AsmType"** %511, i64 %510
  %514 = ptrtoint %"class.v8::internal::wasm::AsmType"** %513 to i64
  %515 = bitcast %"class.v8::internal::wasm::AsmType"** %512 to i64*
  store i64 %455, i64* %515, align 8
  %516 = getelementptr inbounds %"class.v8::internal::wasm::AsmType"*, %"class.v8::internal::wasm::AsmType"** %512, i64 1
  %517 = ptrtoint %"class.v8::internal::wasm::AsmType"** %516 to i64
  %518 = getelementptr inbounds %"class.std::__1::vector.180", %"class.std::__1::vector.180"* %460, i64 0, i32 0, i32 0
  %519 = load %"class.v8::internal::wasm::AsmType"**, %"class.v8::internal::wasm::AsmType"*** %518, align 8
  %520 = ptrtoint %"class.v8::internal::wasm::AsmType"** %519 to i64
  %521 = load %"class.v8::internal::wasm::AsmType"**, %"class.v8::internal::wasm::AsmType"*** %461, align 8
  %522 = icmp eq %"class.v8::internal::wasm::AsmType"** %521, %519
  br i1 %522, label %693, label %523

523:                                              ; preds = %509
  %524 = getelementptr %"class.v8::internal::wasm::AsmType"*, %"class.v8::internal::wasm::AsmType"** %521, i64 -1
  %525 = ptrtoint %"class.v8::internal::wasm::AsmType"** %524 to i64
  %526 = sub i64 %525, %520
  %527 = lshr i64 %526, 3
  %528 = add nuw nsw i64 %527, 1
  %529 = icmp ult i64 %528, 4
  br i1 %529, label %623, label %530

530:                                              ; preds = %523
  %531 = getelementptr %"class.v8::internal::wasm::AsmType"*, %"class.v8::internal::wasm::AsmType"** %511, i64 -1
  %532 = getelementptr %"class.v8::internal::wasm::AsmType"*, %"class.v8::internal::wasm::AsmType"** %521, i64 -1
  %533 = ptrtoint %"class.v8::internal::wasm::AsmType"** %532 to i64
  %534 = sub i64 %533, %520
  %535 = lshr i64 %534, 3
  %536 = sub nsw i64 %478, %535
  %537 = getelementptr %"class.v8::internal::wasm::AsmType"*, %"class.v8::internal::wasm::AsmType"** %531, i64 %536
  %538 = getelementptr %"class.v8::internal::wasm::AsmType"*, %"class.v8::internal::wasm::AsmType"** %521, i64 -1
  %539 = sub nsw i64 0, %535
  %540 = getelementptr %"class.v8::internal::wasm::AsmType"*, %"class.v8::internal::wasm::AsmType"** %538, i64 %539
  %541 = icmp ult %"class.v8::internal::wasm::AsmType"** %537, %521
  %542 = icmp ult %"class.v8::internal::wasm::AsmType"** %540, %512
  %543 = and i1 %541, %542
  br i1 %543, label %623, label %544

544:                                              ; preds = %530
  %545 = and i64 %528, 4611686018427387900
  %546 = sub nsw i64 0, %545
  %547 = getelementptr %"class.v8::internal::wasm::AsmType"*, %"class.v8::internal::wasm::AsmType"** %512, i64 %546
  %548 = sub nsw i64 0, %545
  %549 = getelementptr %"class.v8::internal::wasm::AsmType"*, %"class.v8::internal::wasm::AsmType"** %521, i64 %548
  %550 = add nsw i64 %545, -4
  %551 = lshr exact i64 %550, 2
  %552 = add nuw nsw i64 %551, 1
  %553 = and i64 %552, 1
  %554 = icmp eq i64 %550, 0
  br i1 %554, label %599, label %555

555:                                              ; preds = %544
  %556 = sub nuw nsw i64 %552, %553
  %557 = getelementptr %"class.v8::internal::wasm::AsmType"*, %"class.v8::internal::wasm::AsmType"** %512, i64 -1
  %558 = getelementptr %"class.v8::internal::wasm::AsmType"*, %"class.v8::internal::wasm::AsmType"** %521, i64 -1
  %559 = getelementptr %"class.v8::internal::wasm::AsmType"*, %"class.v8::internal::wasm::AsmType"** %512, i64 -1
  %560 = getelementptr %"class.v8::internal::wasm::AsmType"*, %"class.v8::internal::wasm::AsmType"** %521, i64 -1
  br label %561

561:                                              ; preds = %561, %555
  %562 = phi i64 [ 0, %555 ], [ %596, %561 ]
  %563 = phi i64 [ %556, %555 ], [ %597, %561 ]
  %564 = sub i64 0, %562
  %565 = sub i64 0, %562
  %566 = getelementptr inbounds %"class.v8::internal::wasm::AsmType"*, %"class.v8::internal::wasm::AsmType"** %557, i64 %564
  %567 = getelementptr inbounds %"class.v8::internal::wasm::AsmType"*, %"class.v8::internal::wasm::AsmType"** %558, i64 %565
  %568 = getelementptr inbounds %"class.v8::internal::wasm::AsmType"*, %"class.v8::internal::wasm::AsmType"** %567, i64 -1
  %569 = bitcast %"class.v8::internal::wasm::AsmType"** %568 to <2 x i64>*
  %570 = load <2 x i64>, <2 x i64>* %569, align 8, !alias.scope !81
  %571 = getelementptr inbounds %"class.v8::internal::wasm::AsmType"*, %"class.v8::internal::wasm::AsmType"** %567, i64 -2
  %572 = getelementptr inbounds %"class.v8::internal::wasm::AsmType"*, %"class.v8::internal::wasm::AsmType"** %571, i64 -1
  %573 = bitcast %"class.v8::internal::wasm::AsmType"** %572 to <2 x i64>*
  %574 = load <2 x i64>, <2 x i64>* %573, align 8, !alias.scope !81
  %575 = getelementptr inbounds %"class.v8::internal::wasm::AsmType"*, %"class.v8::internal::wasm::AsmType"** %566, i64 -1
  %576 = bitcast %"class.v8::internal::wasm::AsmType"** %575 to <2 x i64>*
  store <2 x i64> %570, <2 x i64>* %576, align 8, !alias.scope !84, !noalias !81
  %577 = getelementptr inbounds %"class.v8::internal::wasm::AsmType"*, %"class.v8::internal::wasm::AsmType"** %566, i64 -2
  %578 = getelementptr inbounds %"class.v8::internal::wasm::AsmType"*, %"class.v8::internal::wasm::AsmType"** %577, i64 -1
  %579 = bitcast %"class.v8::internal::wasm::AsmType"** %578 to <2 x i64>*
  store <2 x i64> %574, <2 x i64>* %579, align 8, !alias.scope !84, !noalias !81
  %580 = sub nuw nsw i64 -4, %562
  %581 = sub nuw nsw i64 -4, %562
  %582 = getelementptr inbounds %"class.v8::internal::wasm::AsmType"*, %"class.v8::internal::wasm::AsmType"** %559, i64 %580
  %583 = getelementptr inbounds %"class.v8::internal::wasm::AsmType"*, %"class.v8::internal::wasm::AsmType"** %560, i64 %581
  %584 = getelementptr inbounds %"class.v8::internal::wasm::AsmType"*, %"class.v8::internal::wasm::AsmType"** %583, i64 -1
  %585 = bitcast %"class.v8::internal::wasm::AsmType"** %584 to <2 x i64>*
  %586 = load <2 x i64>, <2 x i64>* %585, align 8, !alias.scope !81
  %587 = getelementptr inbounds %"class.v8::internal::wasm::AsmType"*, %"class.v8::internal::wasm::AsmType"** %583, i64 -2
  %588 = getelementptr inbounds %"class.v8::internal::wasm::AsmType"*, %"class.v8::internal::wasm::AsmType"** %587, i64 -1
  %589 = bitcast %"class.v8::internal::wasm::AsmType"** %588 to <2 x i64>*
  %590 = load <2 x i64>, <2 x i64>* %589, align 8, !alias.scope !81
  %591 = getelementptr inbounds %"class.v8::internal::wasm::AsmType"*, %"class.v8::internal::wasm::AsmType"** %582, i64 -1
  %592 = bitcast %"class.v8::internal::wasm::AsmType"** %591 to <2 x i64>*
  store <2 x i64> %586, <2 x i64>* %592, align 8, !alias.scope !84, !noalias !81
  %593 = getelementptr inbounds %"class.v8::internal::wasm::AsmType"*, %"class.v8::internal::wasm::AsmType"** %582, i64 -2
  %594 = getelementptr inbounds %"class.v8::internal::wasm::AsmType"*, %"class.v8::internal::wasm::AsmType"** %593, i64 -1
  %595 = bitcast %"class.v8::internal::wasm::AsmType"** %594 to <2 x i64>*
  store <2 x i64> %590, <2 x i64>* %595, align 8, !alias.scope !84, !noalias !81
  %596 = add i64 %562, 8
  %597 = add i64 %563, -2
  %598 = icmp eq i64 %597, 0
  br i1 %598, label %599, label %561, !llvm.loop !86

599:                                              ; preds = %561, %544
  %600 = phi i64 [ 0, %544 ], [ %596, %561 ]
  %601 = icmp eq i64 %553, 0
  br i1 %601, label %621, label %602

602:                                              ; preds = %599
  %603 = sub i64 0, %600
  %604 = getelementptr %"class.v8::internal::wasm::AsmType"*, %"class.v8::internal::wasm::AsmType"** %512, i64 -1
  %605 = sub i64 0, %600
  %606 = getelementptr %"class.v8::internal::wasm::AsmType"*, %"class.v8::internal::wasm::AsmType"** %521, i64 -1
  %607 = getelementptr inbounds %"class.v8::internal::wasm::AsmType"*, %"class.v8::internal::wasm::AsmType"** %604, i64 %603
  %608 = getelementptr inbounds %"class.v8::internal::wasm::AsmType"*, %"class.v8::internal::wasm::AsmType"** %606, i64 %605
  %609 = getelementptr inbounds %"class.v8::internal::wasm::AsmType"*, %"class.v8::internal::wasm::AsmType"** %608, i64 -1
  %610 = bitcast %"class.v8::internal::wasm::AsmType"** %609 to <2 x i64>*
  %611 = load <2 x i64>, <2 x i64>* %610, align 8, !alias.scope !81
  %612 = getelementptr inbounds %"class.v8::internal::wasm::AsmType"*, %"class.v8::internal::wasm::AsmType"** %608, i64 -2
  %613 = getelementptr inbounds %"class.v8::internal::wasm::AsmType"*, %"class.v8::internal::wasm::AsmType"** %612, i64 -1
  %614 = bitcast %"class.v8::internal::wasm::AsmType"** %613 to <2 x i64>*
  %615 = load <2 x i64>, <2 x i64>* %614, align 8, !alias.scope !81
  %616 = getelementptr inbounds %"class.v8::internal::wasm::AsmType"*, %"class.v8::internal::wasm::AsmType"** %607, i64 -1
  %617 = bitcast %"class.v8::internal::wasm::AsmType"** %616 to <2 x i64>*
  store <2 x i64> %611, <2 x i64>* %617, align 8, !alias.scope !84, !noalias !81
  %618 = getelementptr inbounds %"class.v8::internal::wasm::AsmType"*, %"class.v8::internal::wasm::AsmType"** %607, i64 -2
  %619 = getelementptr inbounds %"class.v8::internal::wasm::AsmType"*, %"class.v8::internal::wasm::AsmType"** %618, i64 -1
  %620 = bitcast %"class.v8::internal::wasm::AsmType"** %619 to <2 x i64>*
  store <2 x i64> %615, <2 x i64>* %620, align 8, !alias.scope !84, !noalias !81
  br label %621

621:                                              ; preds = %599, %602
  %622 = icmp eq i64 %528, %545
  br i1 %622, label %693, label %623

623:                                              ; preds = %621, %530, %523
  %624 = phi %"class.v8::internal::wasm::AsmType"** [ %512, %530 ], [ %512, %523 ], [ %547, %621 ]
  %625 = phi %"class.v8::internal::wasm::AsmType"** [ %521, %530 ], [ %521, %523 ], [ %549, %621 ]
  %626 = getelementptr %"class.v8::internal::wasm::AsmType"*, %"class.v8::internal::wasm::AsmType"** %625, i64 -1
  %627 = ptrtoint %"class.v8::internal::wasm::AsmType"** %626 to i64
  %628 = sub i64 %627, %520
  %629 = lshr i64 %628, 3
  %630 = add nuw nsw i64 %629, 1
  %631 = and i64 %630, 7
  %632 = icmp eq i64 %631, 0
  br i1 %632, label %644, label %633

633:                                              ; preds = %623, %633
  %634 = phi %"class.v8::internal::wasm::AsmType"** [ %637, %633 ], [ %624, %623 ]
  %635 = phi %"class.v8::internal::wasm::AsmType"** [ %638, %633 ], [ %625, %623 ]
  %636 = phi i64 [ %642, %633 ], [ %631, %623 ]
  %637 = getelementptr inbounds %"class.v8::internal::wasm::AsmType"*, %"class.v8::internal::wasm::AsmType"** %634, i64 -1
  %638 = getelementptr inbounds %"class.v8::internal::wasm::AsmType"*, %"class.v8::internal::wasm::AsmType"** %635, i64 -1
  %639 = bitcast %"class.v8::internal::wasm::AsmType"** %638 to i64*
  %640 = load i64, i64* %639, align 8
  %641 = bitcast %"class.v8::internal::wasm::AsmType"** %637 to i64*
  store i64 %640, i64* %641, align 8
  %642 = add i64 %636, -1
  %643 = icmp eq i64 %642, 0
  br i1 %643, label %644, label %633, !llvm.loop !87

644:                                              ; preds = %633, %623
  %645 = phi %"class.v8::internal::wasm::AsmType"** [ undef, %623 ], [ %637, %633 ]
  %646 = phi %"class.v8::internal::wasm::AsmType"** [ %624, %623 ], [ %637, %633 ]
  %647 = phi %"class.v8::internal::wasm::AsmType"** [ %625, %623 ], [ %638, %633 ]
  %648 = icmp ult i64 %628, 56
  br i1 %648, label %693, label %649

649:                                              ; preds = %644, %649
  %650 = phi %"class.v8::internal::wasm::AsmType"** [ %687, %649 ], [ %646, %644 ]
  %651 = phi %"class.v8::internal::wasm::AsmType"** [ %688, %649 ], [ %647, %644 ]
  %652 = getelementptr inbounds %"class.v8::internal::wasm::AsmType"*, %"class.v8::internal::wasm::AsmType"** %650, i64 -1
  %653 = getelementptr inbounds %"class.v8::internal::wasm::AsmType"*, %"class.v8::internal::wasm::AsmType"** %651, i64 -1
  %654 = bitcast %"class.v8::internal::wasm::AsmType"** %653 to i64*
  %655 = load i64, i64* %654, align 8
  %656 = bitcast %"class.v8::internal::wasm::AsmType"** %652 to i64*
  store i64 %655, i64* %656, align 8
  %657 = getelementptr inbounds %"class.v8::internal::wasm::AsmType"*, %"class.v8::internal::wasm::AsmType"** %650, i64 -2
  %658 = getelementptr inbounds %"class.v8::internal::wasm::AsmType"*, %"class.v8::internal::wasm::AsmType"** %651, i64 -2
  %659 = bitcast %"class.v8::internal::wasm::AsmType"** %658 to i64*
  %660 = load i64, i64* %659, align 8
  %661 = bitcast %"class.v8::internal::wasm::AsmType"** %657 to i64*
  store i64 %660, i64* %661, align 8
  %662 = getelementptr inbounds %"class.v8::internal::wasm::AsmType"*, %"class.v8::internal::wasm::AsmType"** %650, i64 -3
  %663 = getelementptr inbounds %"class.v8::internal::wasm::AsmType"*, %"class.v8::internal::wasm::AsmType"** %651, i64 -3
  %664 = bitcast %"class.v8::internal::wasm::AsmType"** %663 to i64*
  %665 = load i64, i64* %664, align 8
  %666 = bitcast %"class.v8::internal::wasm::AsmType"** %662 to i64*
  store i64 %665, i64* %666, align 8
  %667 = getelementptr inbounds %"class.v8::internal::wasm::AsmType"*, %"class.v8::internal::wasm::AsmType"** %650, i64 -4
  %668 = getelementptr inbounds %"class.v8::internal::wasm::AsmType"*, %"class.v8::internal::wasm::AsmType"** %651, i64 -4
  %669 = bitcast %"class.v8::internal::wasm::AsmType"** %668 to i64*
  %670 = load i64, i64* %669, align 8
  %671 = bitcast %"class.v8::internal::wasm::AsmType"** %667 to i64*
  store i64 %670, i64* %671, align 8
  %672 = getelementptr inbounds %"class.v8::internal::wasm::AsmType"*, %"class.v8::internal::wasm::AsmType"** %650, i64 -5
  %673 = getelementptr inbounds %"class.v8::internal::wasm::AsmType"*, %"class.v8::internal::wasm::AsmType"** %651, i64 -5
  %674 = bitcast %"class.v8::internal::wasm::AsmType"** %673 to i64*
  %675 = load i64, i64* %674, align 8
  %676 = bitcast %"class.v8::internal::wasm::AsmType"** %672 to i64*
  store i64 %675, i64* %676, align 8
  %677 = getelementptr inbounds %"class.v8::internal::wasm::AsmType"*, %"class.v8::internal::wasm::AsmType"** %650, i64 -6
  %678 = getelementptr inbounds %"class.v8::internal::wasm::AsmType"*, %"class.v8::internal::wasm::AsmType"** %651, i64 -6
  %679 = bitcast %"class.v8::internal::wasm::AsmType"** %678 to i64*
  %680 = load i64, i64* %679, align 8
  %681 = bitcast %"class.v8::internal::wasm::AsmType"** %677 to i64*
  store i64 %680, i64* %681, align 8
  %682 = getelementptr inbounds %"class.v8::internal::wasm::AsmType"*, %"class.v8::internal::wasm::AsmType"** %650, i64 -7
  %683 = getelementptr inbounds %"class.v8::internal::wasm::AsmType"*, %"class.v8::internal::wasm::AsmType"** %651, i64 -7
  %684 = bitcast %"class.v8::internal::wasm::AsmType"** %683 to i64*
  %685 = load i64, i64* %684, align 8
  %686 = bitcast %"class.v8::internal::wasm::AsmType"** %682 to i64*
  store i64 %685, i64* %686, align 8
  %687 = getelementptr inbounds %"class.v8::internal::wasm::AsmType"*, %"class.v8::internal::wasm::AsmType"** %650, i64 -8
  %688 = getelementptr inbounds %"class.v8::internal::wasm::AsmType"*, %"class.v8::internal::wasm::AsmType"** %651, i64 -8
  %689 = bitcast %"class.v8::internal::wasm::AsmType"** %688 to i64*
  %690 = load i64, i64* %689, align 8
  %691 = bitcast %"class.v8::internal::wasm::AsmType"** %687 to i64*
  store i64 %690, i64* %691, align 8
  %692 = icmp eq %"class.v8::internal::wasm::AsmType"** %688, %519
  br i1 %692, label %693, label %649, !llvm.loop !88

693:                                              ; preds = %644, %649, %621, %509
  %694 = phi %"class.v8::internal::wasm::AsmType"** [ %512, %509 ], [ %547, %621 ], [ %645, %644 ], [ %687, %649 ]
  %695 = ptrtoint %"class.v8::internal::wasm::AsmType"** %694 to i64
  store i64 %695, i64* %475, align 8
  store i64 %517, i64* %474, align 8
  store i64 %514, i64* %482, align 8
  br label %696

696:                                              ; preds = %693, %467
  %697 = getelementptr inbounds %"class.v8::internal::wasm::AsmType"*, %"class.v8::internal::wasm::AsmType"** %453, i64 1
  %698 = icmp eq %"class.v8::internal::wasm::AsmType"** %697, %445
  br i1 %698, label %699, label %452

699:                                              ; preds = %998, %696, %432
  %700 = load i64, i64* %80, align 8
  br i1 %76, label %704, label %701

701:                                              ; preds = %699
  %702 = sub nsw i32 -10000, %75
  %703 = sext i32 %702 to i64
  br label %712

704:                                              ; preds = %699
  %705 = add nsw i32 %75, -256
  %706 = sext i32 %705 to i64
  %707 = getelementptr inbounds %"class.v8::internal::wasm::AsmJsParser", %"class.v8::internal::wasm::AsmJsParser"* %0, i64 0, i32 9
  %708 = load i64, i64* %707, align 8
  %709 = icmp ugt i64 %708, %706
  br i1 %709, label %712, label %710

710:                                              ; preds = %704
  %711 = add nuw nsw i64 %706, 1
  store i64 %711, i64* %707, align 8
  br label %712

712:                                              ; preds = %710, %704, %701
  %713 = phi i64 [ %706, %710 ], [ %706, %704 ], [ %703, %701 ]
  %714 = add nsw i64 %713, 1
  %715 = icmp ugt i64 %714, %700
  br i1 %715, label %719, label %716

716:                                              ; preds = %712
  %717 = getelementptr inbounds %"class.v8::internal::Vector.160", %"class.v8::internal::Vector.160"* %79, i64 0, i32 0
  %718 = load %"struct.v8::internal::wasm::AsmJsParser::VarInfo"*, %"struct.v8::internal::wasm::AsmJsParser::VarInfo"** %717, align 8
  br label %759

719:                                              ; preds = %712
  %720 = shl i64 %700, 1
  %721 = icmp ult i64 %720, %714
  %722 = select i1 %721, i64 %714, i64 %720
  %723 = load %"class.v8::internal::Zone"*, %"class.v8::internal::Zone"** %26, align 8
  %724 = mul i64 %722, 40
  %725 = getelementptr inbounds %"class.v8::internal::Zone", %"class.v8::internal::Zone"* %723, i64 0, i32 2
  %726 = load i64, i64* %725, align 8
  %727 = getelementptr inbounds %"class.v8::internal::Zone", %"class.v8::internal::Zone"* %723, i64 0, i32 3
  %728 = load i64, i64* %727, align 8
  %729 = sub i64 %728, %726
  %730 = icmp ugt i64 %724, %729
  br i1 %730, label %731, label %733, !prof !2

731:                                              ; preds = %719
  %732 = call i64 @_ZN2v88internal4Zone9NewExpandEm(%"class.v8::internal::Zone"* %723, i64 %724) #12
  br label %735

733:                                              ; preds = %719
  %734 = add i64 %726, %724
  store i64 %734, i64* %725, align 8
  br label %735

735:                                              ; preds = %733, %731
  %736 = phi i64 [ %732, %731 ], [ %726, %733 ]
  %737 = inttoptr i64 %736 to %"struct.v8::internal::wasm::AsmJsParser::VarInfo"*
  %738 = getelementptr inbounds %"struct.v8::internal::wasm::AsmJsParser::VarInfo", %"struct.v8::internal::wasm::AsmJsParser::VarInfo"* %737, i64 %722
  %739 = icmp eq i64 %722, 0
  br i1 %739, label %749, label %740

740:                                              ; preds = %735, %740
  %741 = phi %"struct.v8::internal::wasm::AsmJsParser::VarInfo"* [ %747, %740 ], [ %737, %735 ]
  %742 = getelementptr inbounds %"struct.v8::internal::wasm::AsmJsParser::VarInfo", %"struct.v8::internal::wasm::AsmJsParser::VarInfo"* %741, i64 0, i32 0
  store %"class.v8::internal::wasm::AsmType"* inttoptr (i64 2147483649 to %"class.v8::internal::wasm::AsmType"*), %"class.v8::internal::wasm::AsmType"** %742, align 8
  %743 = getelementptr inbounds %"struct.v8::internal::wasm::AsmJsParser::VarInfo", %"struct.v8::internal::wasm::AsmJsParser::VarInfo"* %741, i64 0, i32 1
  %744 = getelementptr inbounds %"struct.v8::internal::wasm::AsmJsParser::VarInfo", %"struct.v8::internal::wasm::AsmJsParser::VarInfo"* %741, i64 0, i32 6
  %745 = bitcast %"class.v8::internal::wasm::WasmFunctionBuilder"** %743 to i8*
  call void @llvm.memset.p0i8.i64(i8* align 8 %745, i8 0, i64 28, i1 false) #12
  store i8 1, i8* %744, align 4
  %746 = getelementptr inbounds %"struct.v8::internal::wasm::AsmJsParser::VarInfo", %"struct.v8::internal::wasm::AsmJsParser::VarInfo"* %741, i64 0, i32 7
  store i8 0, i8* %746, align 1
  %747 = getelementptr inbounds %"struct.v8::internal::wasm::AsmJsParser::VarInfo", %"struct.v8::internal::wasm::AsmJsParser::VarInfo"* %741, i64 1
  %748 = icmp eq %"struct.v8::internal::wasm::AsmJsParser::VarInfo"* %747, %738
  br i1 %748, label %749, label %740

749:                                              ; preds = %740, %735
  %750 = getelementptr inbounds %"class.v8::internal::Vector.160", %"class.v8::internal::Vector.160"* %79, i64 0, i32 0
  %751 = load i64, i64* %80, align 8
  %752 = mul nuw i64 %751, 40
  %753 = icmp eq i64 %752, 0
  br i1 %753, label %758, label %754

754:                                              ; preds = %749
  %755 = bitcast %"class.v8::internal::Vector.160"* %79 to i8**
  %756 = load i8*, i8** %755, align 8
  %757 = inttoptr i64 %736 to i8*
  call void @llvm.memmove.p0i8.p0i8.i64(i8* align 8 %757, i8* align 8 %756, i64 %752, i1 false) #12
  br label %758

758:                                              ; preds = %754, %749
  store %"struct.v8::internal::wasm::AsmJsParser::VarInfo"* %737, %"struct.v8::internal::wasm::AsmJsParser::VarInfo"** %750, align 8
  store i64 %722, i64* %80, align 8
  br label %759

759:                                              ; preds = %716, %758
  %760 = phi %"struct.v8::internal::wasm::AsmJsParser::VarInfo"* [ %718, %716 ], [ %737, %758 ]
  %761 = getelementptr inbounds %"struct.v8::internal::wasm::AsmJsParser::VarInfo", %"struct.v8::internal::wasm::AsmJsParser::VarInfo"* %760, i64 %713, i32 0
  %762 = load %"class.v8::internal::wasm::AsmType"*, %"class.v8::internal::wasm::AsmType"** %761, align 8
  %763 = call zeroext i1 @_ZN2v88internal4wasm7AsmType3IsAEPS2_(%"class.v8::internal::wasm::AsmType"* %762, %"class.v8::internal::wasm::AsmType"* nonnull inttoptr (i64 2147483649 to %"class.v8::internal::wasm::AsmType"*)) #12
  br i1 %763, label %1001, label %1002

764:                                              ; preds = %447, %998
  %765 = phi %"class.v8::internal::wasm::AsmType"** [ %999, %998 ], [ %444, %447 ]
  %766 = bitcast %"class.v8::internal::wasm::AsmType"** %765 to i64*
  %767 = load i64, i64* %766, align 8
  %768 = load %"class.v8::internal::wasm::AsmType"**, %"class.v8::internal::wasm::AsmType"*** inttoptr (i64 24 to %"class.v8::internal::wasm::AsmType"***), align 8
  %769 = load %"class.v8::internal::wasm::AsmType"**, %"class.v8::internal::wasm::AsmType"*** inttoptr (i64 32 to %"class.v8::internal::wasm::AsmType"***), align 32
  %770 = icmp eq %"class.v8::internal::wasm::AsmType"** %768, %769
  %771 = ptrtoint %"class.v8::internal::wasm::AsmType"** %769 to i64
  br i1 %770, label %776, label %772

772:                                              ; preds = %764
  %773 = bitcast %"class.v8::internal::wasm::AsmType"** %768 to i64*
  store i64 %767, i64* %773, align 8
  %774 = getelementptr inbounds %"class.v8::internal::wasm::AsmType"*, %"class.v8::internal::wasm::AsmType"** %768, i64 1
  %775 = ptrtoint %"class.v8::internal::wasm::AsmType"** %774 to i64
  store i64 %775, i64* inttoptr (i64 24 to i64*), align 8
  br label %998

776:                                              ; preds = %764
  %777 = ptrtoint %"class.v8::internal::wasm::AsmType"** %768 to i64
  %778 = load i64, i64* inttoptr (i64 16 to i64*), align 16
  %779 = sub i64 %777, %778
  %780 = ashr exact i64 %779, 3
  %781 = add nsw i64 %780, 1
  %782 = icmp ugt i64 %781, 268435455
  br i1 %782, label %783, label %786

783:                                              ; preds = %776, %472
  %784 = phi %"class.std::__1::vector.180"* [ %460, %472 ], [ inttoptr (i64 16 to %"class.std::__1::vector.180"*), %776 ]
  %785 = bitcast %"class.std::__1::vector.180"* %784 to %"class.std::__1::__vector_base_common"*
  call void @_ZNKSt3__120__vector_base_commonILb1EE20__throw_length_errorEv(%"class.std::__1::__vector_base_common"* %785) #13
  unreachable

786:                                              ; preds = %776
  %787 = sub i64 %771, %778
  %788 = ashr exact i64 %787, 3
  %789 = icmp ult i64 %788, 134217727
  br i1 %789, label %790, label %795

790:                                              ; preds = %786
  %791 = ashr exact i64 %787, 2
  %792 = icmp ult i64 %791, %781
  %793 = select i1 %792, i64 %781, i64 %791
  %794 = icmp eq i64 %793, 0
  br i1 %794, label %812, label %795

795:                                              ; preds = %790, %786
  %796 = phi i64 [ %793, %790 ], [ 268435455, %786 ]
  %797 = load %"class.v8::internal::Zone"*, %"class.v8::internal::Zone"** inttoptr (i64 40 to %"class.v8::internal::Zone"**), align 8
  %798 = shl i64 %796, 3
  %799 = getelementptr inbounds %"class.v8::internal::Zone", %"class.v8::internal::Zone"* %797, i64 0, i32 2
  %800 = load i64, i64* %799, align 8
  %801 = getelementptr inbounds %"class.v8::internal::Zone", %"class.v8::internal::Zone"* %797, i64 0, i32 3
  %802 = load i64, i64* %801, align 8
  %803 = sub i64 %802, %800
  %804 = icmp ugt i64 %798, %803
  br i1 %804, label %805, label %807, !prof !2

805:                                              ; preds = %795
  %806 = call i64 @_ZN2v88internal4Zone9NewExpandEm(%"class.v8::internal::Zone"* %797, i64 %798) #12
  br label %809

807:                                              ; preds = %795
  %808 = add i64 %800, %798
  store i64 %808, i64* %799, align 8
  br label %809

809:                                              ; preds = %807, %805
  %810 = phi i64 [ %806, %805 ], [ %800, %807 ]
  %811 = inttoptr i64 %810 to %"class.v8::internal::wasm::AsmType"**
  br label %812

812:                                              ; preds = %809, %790
  %813 = phi i64 [ %796, %809 ], [ 0, %790 ]
  %814 = phi %"class.v8::internal::wasm::AsmType"** [ %811, %809 ], [ null, %790 ]
  %815 = getelementptr inbounds %"class.v8::internal::wasm::AsmType"*, %"class.v8::internal::wasm::AsmType"** %814, i64 %780
  %816 = getelementptr inbounds %"class.v8::internal::wasm::AsmType"*, %"class.v8::internal::wasm::AsmType"** %814, i64 %813
  %817 = ptrtoint %"class.v8::internal::wasm::AsmType"** %816 to i64
  %818 = bitcast %"class.v8::internal::wasm::AsmType"** %815 to i64*
  store i64 %767, i64* %818, align 8
  %819 = getelementptr inbounds %"class.v8::internal::wasm::AsmType"*, %"class.v8::internal::wasm::AsmType"** %815, i64 1
  %820 = ptrtoint %"class.v8::internal::wasm::AsmType"** %819 to i64
  %821 = load %"class.v8::internal::wasm::AsmType"**, %"class.v8::internal::wasm::AsmType"*** inttoptr (i64 16 to %"class.v8::internal::wasm::AsmType"***), align 16
  %822 = ptrtoint %"class.v8::internal::wasm::AsmType"** %821 to i64
  %823 = load %"class.v8::internal::wasm::AsmType"**, %"class.v8::internal::wasm::AsmType"*** inttoptr (i64 24 to %"class.v8::internal::wasm::AsmType"***), align 8
  %824 = icmp eq %"class.v8::internal::wasm::AsmType"** %823, %821
  br i1 %824, label %995, label %825

825:                                              ; preds = %812
  %826 = getelementptr %"class.v8::internal::wasm::AsmType"*, %"class.v8::internal::wasm::AsmType"** %823, i64 -1
  %827 = ptrtoint %"class.v8::internal::wasm::AsmType"** %826 to i64
  %828 = sub i64 %827, %822
  %829 = lshr i64 %828, 3
  %830 = add nuw nsw i64 %829, 1
  %831 = icmp ult i64 %830, 4
  br i1 %831, label %925, label %832

832:                                              ; preds = %825
  %833 = getelementptr %"class.v8::internal::wasm::AsmType"*, %"class.v8::internal::wasm::AsmType"** %814, i64 -1
  %834 = getelementptr %"class.v8::internal::wasm::AsmType"*, %"class.v8::internal::wasm::AsmType"** %823, i64 -1
  %835 = ptrtoint %"class.v8::internal::wasm::AsmType"** %834 to i64
  %836 = sub i64 %835, %822
  %837 = lshr i64 %836, 3
  %838 = sub nsw i64 %780, %837
  %839 = getelementptr %"class.v8::internal::wasm::AsmType"*, %"class.v8::internal::wasm::AsmType"** %833, i64 %838
  %840 = getelementptr %"class.v8::internal::wasm::AsmType"*, %"class.v8::internal::wasm::AsmType"** %823, i64 -1
  %841 = sub nsw i64 0, %837
  %842 = getelementptr %"class.v8::internal::wasm::AsmType"*, %"class.v8::internal::wasm::AsmType"** %840, i64 %841
  %843 = icmp ult %"class.v8::internal::wasm::AsmType"** %839, %823
  %844 = icmp ult %"class.v8::internal::wasm::AsmType"** %842, %815
  %845 = and i1 %843, %844
  br i1 %845, label %925, label %846

846:                                              ; preds = %832
  %847 = and i64 %830, 4611686018427387900
  %848 = sub nsw i64 0, %847
  %849 = getelementptr %"class.v8::internal::wasm::AsmType"*, %"class.v8::internal::wasm::AsmType"** %815, i64 %848
  %850 = sub nsw i64 0, %847
  %851 = getelementptr %"class.v8::internal::wasm::AsmType"*, %"class.v8::internal::wasm::AsmType"** %823, i64 %850
  %852 = add nsw i64 %847, -4
  %853 = lshr exact i64 %852, 2
  %854 = add nuw nsw i64 %853, 1
  %855 = and i64 %854, 1
  %856 = icmp eq i64 %852, 0
  br i1 %856, label %901, label %857

857:                                              ; preds = %846
  %858 = sub nuw nsw i64 %854, %855
  %859 = getelementptr %"class.v8::internal::wasm::AsmType"*, %"class.v8::internal::wasm::AsmType"** %815, i64 -1
  %860 = getelementptr %"class.v8::internal::wasm::AsmType"*, %"class.v8::internal::wasm::AsmType"** %823, i64 -1
  %861 = getelementptr %"class.v8::internal::wasm::AsmType"*, %"class.v8::internal::wasm::AsmType"** %815, i64 -1
  %862 = getelementptr %"class.v8::internal::wasm::AsmType"*, %"class.v8::internal::wasm::AsmType"** %823, i64 -1
  br label %863

863:                                              ; preds = %863, %857
  %864 = phi i64 [ 0, %857 ], [ %898, %863 ]
  %865 = phi i64 [ %858, %857 ], [ %899, %863 ]
  %866 = sub i64 0, %864
  %867 = sub i64 0, %864
  %868 = getelementptr inbounds %"class.v8::internal::wasm::AsmType"*, %"class.v8::internal::wasm::AsmType"** %859, i64 %866
  %869 = getelementptr inbounds %"class.v8::internal::wasm::AsmType"*, %"class.v8::internal::wasm::AsmType"** %860, i64 %867
  %870 = getelementptr inbounds %"class.v8::internal::wasm::AsmType"*, %"class.v8::internal::wasm::AsmType"** %869, i64 -1
  %871 = bitcast %"class.v8::internal::wasm::AsmType"** %870 to <2 x i64>*
  %872 = load <2 x i64>, <2 x i64>* %871, align 8, !alias.scope !89
  %873 = getelementptr inbounds %"class.v8::internal::wasm::AsmType"*, %"class.v8::internal::wasm::AsmType"** %869, i64 -2
  %874 = getelementptr inbounds %"class.v8::internal::wasm::AsmType"*, %"class.v8::internal::wasm::AsmType"** %873, i64 -1
  %875 = bitcast %"class.v8::internal::wasm::AsmType"** %874 to <2 x i64>*
  %876 = load <2 x i64>, <2 x i64>* %875, align 8, !alias.scope !89
  %877 = getelementptr inbounds %"class.v8::internal::wasm::AsmType"*, %"class.v8::internal::wasm::AsmType"** %868, i64 -1
  %878 = bitcast %"class.v8::internal::wasm::AsmType"** %877 to <2 x i64>*
  store <2 x i64> %872, <2 x i64>* %878, align 8, !alias.scope !92, !noalias !89
  %879 = getelementptr inbounds %"class.v8::internal::wasm::AsmType"*, %"class.v8::internal::wasm::AsmType"** %868, i64 -2
  %880 = getelementptr inbounds %"class.v8::internal::wasm::AsmType"*, %"class.v8::internal::wasm::AsmType"** %879, i64 -1
  %881 = bitcast %"class.v8::internal::wasm::AsmType"** %880 to <2 x i64>*
  store <2 x i64> %876, <2 x i64>* %881, align 8, !alias.scope !92, !noalias !89
  %882 = sub nuw nsw i64 -4, %864
  %883 = sub nuw nsw i64 -4, %864
  %884 = getelementptr inbounds %"class.v8::internal::wasm::AsmType"*, %"class.v8::internal::wasm::AsmType"** %861, i64 %882
  %885 = getelementptr inbounds %"class.v8::internal::wasm::AsmType"*, %"class.v8::internal::wasm::AsmType"** %862, i64 %883
  %886 = getelementptr inbounds %"class.v8::internal::wasm::AsmType"*, %"class.v8::internal::wasm::AsmType"** %885, i64 -1
  %887 = bitcast %"class.v8::internal::wasm::AsmType"** %886 to <2 x i64>*
  %888 = load <2 x i64>, <2 x i64>* %887, align 8, !alias.scope !89
  %889 = getelementptr inbounds %"class.v8::internal::wasm::AsmType"*, %"class.v8::internal::wasm::AsmType"** %885, i64 -2
  %890 = getelementptr inbounds %"class.v8::internal::wasm::AsmType"*, %"class.v8::internal::wasm::AsmType"** %889, i64 -1
  %891 = bitcast %"class.v8::internal::wasm::AsmType"** %890 to <2 x i64>*
  %892 = load <2 x i64>, <2 x i64>* %891, align 8, !alias.scope !89
  %893 = getelementptr inbounds %"class.v8::internal::wasm::AsmType"*, %"class.v8::internal::wasm::AsmType"** %884, i64 -1
  %894 = bitcast %"class.v8::internal::wasm::AsmType"** %893 to <2 x i64>*
  store <2 x i64> %888, <2 x i64>* %894, align 8, !alias.scope !92, !noalias !89
  %895 = getelementptr inbounds %"class.v8::internal::wasm::AsmType"*, %"class.v8::internal::wasm::AsmType"** %884, i64 -2
  %896 = getelementptr inbounds %"class.v8::internal::wasm::AsmType"*, %"class.v8::internal::wasm::AsmType"** %895, i64 -1
  %897 = bitcast %"class.v8::internal::wasm::AsmType"** %896 to <2 x i64>*
  store <2 x i64> %892, <2 x i64>* %897, align 8, !alias.scope !92, !noalias !89
  %898 = add i64 %864, 8
  %899 = add i64 %865, -2
  %900 = icmp eq i64 %899, 0
  br i1 %900, label %901, label %863, !llvm.loop !94

901:                                              ; preds = %863, %846
  %902 = phi i64 [ 0, %846 ], [ %898, %863 ]
  %903 = icmp eq i64 %855, 0
  br i1 %903, label %923, label %904

904:                                              ; preds = %901
  %905 = sub i64 0, %902
  %906 = getelementptr %"class.v8::internal::wasm::AsmType"*, %"class.v8::internal::wasm::AsmType"** %815, i64 -1
  %907 = sub i64 0, %902
  %908 = getelementptr %"class.v8::internal::wasm::AsmType"*, %"class.v8::internal::wasm::AsmType"** %823, i64 -1
  %909 = getelementptr inbounds %"class.v8::internal::wasm::AsmType"*, %"class.v8::internal::wasm::AsmType"** %906, i64 %905
  %910 = getelementptr inbounds %"class.v8::internal::wasm::AsmType"*, %"class.v8::internal::wasm::AsmType"** %908, i64 %907
  %911 = getelementptr inbounds %"class.v8::internal::wasm::AsmType"*, %"class.v8::internal::wasm::AsmType"** %910, i64 -1
  %912 = bitcast %"class.v8::internal::wasm::AsmType"** %911 to <2 x i64>*
  %913 = load <2 x i64>, <2 x i64>* %912, align 8, !alias.scope !89
  %914 = getelementptr inbounds %"class.v8::internal::wasm::AsmType"*, %"class.v8::internal::wasm::AsmType"** %910, i64 -2
  %915 = getelementptr inbounds %"class.v8::internal::wasm::AsmType"*, %"class.v8::internal::wasm::AsmType"** %914, i64 -1
  %916 = bitcast %"class.v8::internal::wasm::AsmType"** %915 to <2 x i64>*
  %917 = load <2 x i64>, <2 x i64>* %916, align 8, !alias.scope !89
  %918 = getelementptr inbounds %"class.v8::internal::wasm::AsmType"*, %"class.v8::internal::wasm::AsmType"** %909, i64 -1
  %919 = bitcast %"class.v8::internal::wasm::AsmType"** %918 to <2 x i64>*
  store <2 x i64> %913, <2 x i64>* %919, align 8, !alias.scope !92, !noalias !89
  %920 = getelementptr inbounds %"class.v8::internal::wasm::AsmType"*, %"class.v8::internal::wasm::AsmType"** %909, i64 -2
  %921 = getelementptr inbounds %"class.v8::internal::wasm::AsmType"*, %"class.v8::internal::wasm::AsmType"** %920, i64 -1
  %922 = bitcast %"class.v8::internal::wasm::AsmType"** %921 to <2 x i64>*
  store <2 x i64> %917, <2 x i64>* %922, align 8, !alias.scope !92, !noalias !89
  br label %923

923:                                              ; preds = %901, %904
  %924 = icmp eq i64 %830, %847
  br i1 %924, label %995, label %925

925:                                              ; preds = %923, %832, %825
  %926 = phi %"class.v8::internal::wasm::AsmType"** [ %815, %832 ], [ %815, %825 ], [ %849, %923 ]
  %927 = phi %"class.v8::internal::wasm::AsmType"** [ %823, %832 ], [ %823, %825 ], [ %851, %923 ]
  %928 = getelementptr %"class.v8::internal::wasm::AsmType"*, %"class.v8::internal::wasm::AsmType"** %927, i64 -1
  %929 = ptrtoint %"class.v8::internal::wasm::AsmType"** %928 to i64
  %930 = sub i64 %929, %822
  %931 = lshr i64 %930, 3
  %932 = add nuw nsw i64 %931, 1
  %933 = and i64 %932, 7
  %934 = icmp eq i64 %933, 0
  br i1 %934, label %946, label %935

935:                                              ; preds = %925, %935
  %936 = phi %"class.v8::internal::wasm::AsmType"** [ %939, %935 ], [ %926, %925 ]
  %937 = phi %"class.v8::internal::wasm::AsmType"** [ %940, %935 ], [ %927, %925 ]
  %938 = phi i64 [ %944, %935 ], [ %933, %925 ]
  %939 = getelementptr inbounds %"class.v8::internal::wasm::AsmType"*, %"class.v8::internal::wasm::AsmType"** %936, i64 -1
  %940 = getelementptr inbounds %"class.v8::internal::wasm::AsmType"*, %"class.v8::internal::wasm::AsmType"** %937, i64 -1
  %941 = bitcast %"class.v8::internal::wasm::AsmType"** %940 to i64*
  %942 = load i64, i64* %941, align 8
  %943 = bitcast %"class.v8::internal::wasm::AsmType"** %939 to i64*
  store i64 %942, i64* %943, align 8
  %944 = add i64 %938, -1
  %945 = icmp eq i64 %944, 0
  br i1 %945, label %946, label %935, !llvm.loop !95

946:                                              ; preds = %935, %925
  %947 = phi %"class.v8::internal::wasm::AsmType"** [ undef, %925 ], [ %939, %935 ]
  %948 = phi %"class.v8::internal::wasm::AsmType"** [ %926, %925 ], [ %939, %935 ]
  %949 = phi %"class.v8::internal::wasm::AsmType"** [ %927, %925 ], [ %940, %935 ]
  %950 = icmp ult i64 %930, 56
  br i1 %950, label %995, label %951

951:                                              ; preds = %946, %951
  %952 = phi %"class.v8::internal::wasm::AsmType"** [ %989, %951 ], [ %948, %946 ]
  %953 = phi %"class.v8::internal::wasm::AsmType"** [ %990, %951 ], [ %949, %946 ]
  %954 = getelementptr inbounds %"class.v8::internal::wasm::AsmType"*, %"class.v8::internal::wasm::AsmType"** %952, i64 -1
  %955 = getelementptr inbounds %"class.v8::internal::wasm::AsmType"*, %"class.v8::internal::wasm::AsmType"** %953, i64 -1
  %956 = bitcast %"class.v8::internal::wasm::AsmType"** %955 to i64*
  %957 = load i64, i64* %956, align 8
  %958 = bitcast %"class.v8::internal::wasm::AsmType"** %954 to i64*
  store i64 %957, i64* %958, align 8
  %959 = getelementptr inbounds %"class.v8::internal::wasm::AsmType"*, %"class.v8::internal::wasm::AsmType"** %952, i64 -2
  %960 = getelementptr inbounds %"class.v8::internal::wasm::AsmType"*, %"class.v8::internal::wasm::AsmType"** %953, i64 -2
  %961 = bitcast %"class.v8::internal::wasm::AsmType"** %960 to i64*
  %962 = load i64, i64* %961, align 8
  %963 = bitcast %"class.v8::internal::wasm::AsmType"** %959 to i64*
  store i64 %962, i64* %963, align 8
  %964 = getelementptr inbounds %"class.v8::internal::wasm::AsmType"*, %"class.v8::internal::wasm::AsmType"** %952, i64 -3
  %965 = getelementptr inbounds %"class.v8::internal::wasm::AsmType"*, %"class.v8::internal::wasm::AsmType"** %953, i64 -3
  %966 = bitcast %"class.v8::internal::wasm::AsmType"** %965 to i64*
  %967 = load i64, i64* %966, align 8
  %968 = bitcast %"class.v8::internal::wasm::AsmType"** %964 to i64*
  store i64 %967, i64* %968, align 8
  %969 = getelementptr inbounds %"class.v8::internal::wasm::AsmType"*, %"class.v8::internal::wasm::AsmType"** %952, i64 -4
  %970 = getelementptr inbounds %"class.v8::internal::wasm::AsmType"*, %"class.v8::internal::wasm::AsmType"** %953, i64 -4
  %971 = bitcast %"class.v8::internal::wasm::AsmType"** %970 to i64*
  %972 = load i64, i64* %971, align 8
  %973 = bitcast %"class.v8::internal::wasm::AsmType"** %969 to i64*
  store i64 %972, i64* %973, align 8
  %974 = getelementptr inbounds %"class.v8::internal::wasm::AsmType"*, %"class.v8::internal::wasm::AsmType"** %952, i64 -5
  %975 = getelementptr inbounds %"class.v8::internal::wasm::AsmType"*, %"class.v8::internal::wasm::AsmType"** %953, i64 -5
  %976 = bitcast %"class.v8::internal::wasm::AsmType"** %975 to i64*
  %977 = load i64, i64* %976, align 8
  %978 = bitcast %"class.v8::internal::wasm::AsmType"** %974 to i64*
  store i64 %977, i64* %978, align 8
  %979 = getelementptr inbounds %"class.v8::internal::wasm::AsmType"*, %"class.v8::internal::wasm::AsmType"** %952, i64 -6
  %980 = getelementptr inbounds %"class.v8::internal::wasm::AsmType"*, %"class.v8::internal::wasm::AsmType"** %953, i64 -6
  %981 = bitcast %"class.v8::internal::wasm::AsmType"** %980 to i64*
  %982 = load i64, i64* %981, align 8
  %983 = bitcast %"class.v8::internal::wasm::AsmType"** %979 to i64*
  store i64 %982, i64* %983, align 8
  %984 = getelementptr inbounds %"class.v8::internal::wasm::AsmType"*, %"class.v8::internal::wasm::AsmType"** %952, i64 -7
  %985 = getelementptr inbounds %"class.v8::internal::wasm::AsmType"*, %"class.v8::internal::wasm::AsmType"** %953, i64 -7
  %986 = bitcast %"class.v8::internal::wasm::AsmType"** %985 to i64*
  %987 = load i64, i64* %986, align 8
  %988 = bitcast %"class.v8::internal::wasm::AsmType"** %984 to i64*
  store i64 %987, i64* %988, align 8
  %989 = getelementptr inbounds %"class.v8::internal::wasm::AsmType"*, %"class.v8::internal::wasm::AsmType"** %952, i64 -8
  %990 = getelementptr inbounds %"class.v8::internal::wasm::AsmType"*, %"class.v8::internal::wasm::AsmType"** %953, i64 -8
  %991 = bitcast %"class.v8::internal::wasm::AsmType"** %990 to i64*
  %992 = load i64, i64* %991, align 8
  %993 = bitcast %"class.v8::internal::wasm::AsmType"** %989 to i64*
  store i64 %992, i64* %993, align 8
  %994 = icmp eq %"class.v8::internal::wasm::AsmType"** %990, %821
  br i1 %994, label %995, label %951, !llvm.loop !96

995:                                              ; preds = %946, %951, %923, %812
  %996 = phi %"class.v8::internal::wasm::AsmType"** [ %815, %812 ], [ %849, %923 ], [ %947, %946 ], [ %989, %951 ]
  %997 = ptrtoint %"class.v8::internal::wasm::AsmType"** %996 to i64
  store i64 %997, i64* inttoptr (i64 16 to i64*), align 16
  store i64 %820, i64* inttoptr (i64 24 to i64*), align 8
  store i64 %817, i64* inttoptr (i64 32 to i64*), align 32
  br label %998

998:                                              ; preds = %772, %995
  %999 = getelementptr inbounds %"class.v8::internal::wasm::AsmType"*, %"class.v8::internal::wasm::AsmType"** %765, i64 1
  %1000 = icmp eq %"class.v8::internal::wasm::AsmType"** %999, %445
  br i1 %1000, label %699, label %764

1001:                                             ; preds = %759
  store %"class.v8::internal::wasm::AsmType"* %442, %"class.v8::internal::wasm::AsmType"** %761, align 8
  br label %1010

1002:                                             ; preds = %759
  %1003 = load %"class.v8::internal::wasm::AsmType"*, %"class.v8::internal::wasm::AsmType"** %761, align 8
  %1004 = call zeroext i1 @_ZN2v88internal4wasm7AsmType3IsAEPS2_(%"class.v8::internal::wasm::AsmType"* %442, %"class.v8::internal::wasm::AsmType"* %1003) #12
  br i1 %1004, label %1010, label %1005

1005:                                             ; preds = %1002
  store i8 1, i8* %308, align 4
  %1006 = getelementptr inbounds %"class.v8::internal::wasm::AsmJsParser", %"class.v8::internal::wasm::AsmJsParser"* %0, i64 0, i32 18
  store i8* getelementptr inbounds ([38 x i8], [38 x i8]* @.str.38, i64 0, i64 0), i8** %1006, align 8
  %1007 = load i64, i64* %5, align 8
  %1008 = trunc i64 %1007 to i32
  %1009 = getelementptr inbounds %"class.v8::internal::wasm::AsmJsParser", %"class.v8::internal::wasm::AsmJsParser"* %0, i64 0, i32 19
  store i32 %1008, i32* %1009, align 8
  br label %1029

1010:                                             ; preds = %1002, %1001
  call void @_ZN2v88internal12AsmJsScanner11ResetLocalsEv(%"class.v8::internal::AsmJsScanner"* %4) #12
  %1011 = getelementptr inbounds %"class.v8::internal::wasm::AsmJsParser", %"class.v8::internal::wasm::AsmJsParser"* %0, i64 0, i32 8, i32 1
  %1012 = load i64, i64* %1011, align 8
  %1013 = mul nuw i64 %1012, 40
  %1014 = icmp sgt i64 %1013, 0
  br i1 %1014, label %1015, label %1029

1015:                                             ; preds = %1010
  %1016 = getelementptr inbounds %"class.v8::internal::Vector.160", %"class.v8::internal::Vector.160"* %78, i64 0, i32 0
  %1017 = load %"struct.v8::internal::wasm::AsmJsParser::VarInfo"*, %"struct.v8::internal::wasm::AsmJsParser::VarInfo"** %1016, align 8
  br label %1018

1018:                                             ; preds = %1018, %1015
  %1019 = phi %"struct.v8::internal::wasm::AsmJsParser::VarInfo"* [ %1017, %1015 ], [ %1026, %1018 ]
  %1020 = phi i64 [ %1012, %1015 ], [ %1027, %1018 ]
  %1021 = getelementptr inbounds %"struct.v8::internal::wasm::AsmJsParser::VarInfo", %"struct.v8::internal::wasm::AsmJsParser::VarInfo"* %1019, i64 0, i32 0
  store %"class.v8::internal::wasm::AsmType"* inttoptr (i64 2147483649 to %"class.v8::internal::wasm::AsmType"*), %"class.v8::internal::wasm::AsmType"** %1021, align 8
  %1022 = getelementptr inbounds %"struct.v8::internal::wasm::AsmJsParser::VarInfo", %"struct.v8::internal::wasm::AsmJsParser::VarInfo"* %1019, i64 0, i32 1
  %1023 = getelementptr inbounds %"struct.v8::internal::wasm::AsmJsParser::VarInfo", %"struct.v8::internal::wasm::AsmJsParser::VarInfo"* %1019, i64 0, i32 6
  %1024 = bitcast %"class.v8::internal::wasm::WasmFunctionBuilder"** %1022 to i8*
  call void @llvm.memset.p0i8.i64(i8* align 8 %1024, i8 0, i64 28, i1 false)
  store i8 1, i8* %1023, align 4
  %1025 = getelementptr inbounds %"struct.v8::internal::wasm::AsmJsParser::VarInfo", %"struct.v8::internal::wasm::AsmJsParser::VarInfo"* %1019, i64 0, i32 7
  store i8 0, i8* %1025, align 1
  %1026 = getelementptr inbounds %"struct.v8::internal::wasm::AsmJsParser::VarInfo", %"struct.v8::internal::wasm::AsmJsParser::VarInfo"* %1019, i64 1
  %1027 = add nsw i64 %1020, -1
  %1028 = icmp sgt i64 %1027, 0
  br i1 %1028, label %1018, label %1029

1029:                                             ; preds = %328, %1018, %1010, %337, %354, %1005, %412, %395, %323
  %1030 = load %"class.v8::internal::wasm::AsmJsParser::CachedVectors"*, %"class.v8::internal::wasm::AsmJsParser::CachedVectors"** %249, align 8
  %1031 = getelementptr inbounds %"class.v8::internal::wasm::AsmJsParser::CachedVectors", %"class.v8::internal::wasm::AsmJsParser::CachedVectors"* %1030, i64 0, i32 0, i32 0, i32 0, i32 1
  %1032 = load %"class.v8::internal::ZoneVector.164"*, %"class.v8::internal::ZoneVector.164"** %1031, align 8
  %1033 = getelementptr inbounds %"class.v8::internal::wasm::AsmJsParser::CachedVectors", %"class.v8::internal::wasm::AsmJsParser::CachedVectors"* %1030, i64 0, i32 0, i32 0, i32 0, i32 2, i32 0, i32 0
  %1034 = load %"class.v8::internal::ZoneVector.164"*, %"class.v8::internal::ZoneVector.164"** %1033, align 8
  %1035 = icmp ult %"class.v8::internal::ZoneVector.164"* %1032, %1034
  br i1 %1035, label %1036, label %1056

1036:                                             ; preds = %1029
  %1037 = getelementptr inbounds %"class.v8::internal::wasm::AsmJsParser::CachedVector.209", %"class.v8::internal::wasm::AsmJsParser::CachedVector.209"* %3, i64 0, i32 0, i32 0, i32 0, i32 2, i32 1, i32 0
  %1038 = getelementptr inbounds %"class.v8::internal::ZoneVector.164", %"class.v8::internal::ZoneVector.164"* %1032, i64 0, i32 0, i32 0, i32 2, i32 1
  %1039 = bitcast %"class.v8::internal::ZoneAllocator.170"* %1037 to i64*
  %1040 = bitcast %"struct.std::__1::__compressed_pair_elem.169"* %1038 to i64*
  %1041 = bitcast %"class.v8::internal::ZoneVector.164"* %1032 to i8*
  call void @llvm.memset.p0i8.i64(i8* align 8 %1041, i8 0, i64 24, i1 false) #12
  %1042 = load i64, i64* %1039, align 8
  store i64 %1042, i64* %1040, align 8
  %1043 = load i64, i64* %290, align 8
  %1044 = bitcast %"class.v8::internal::ZoneVector.164"* %1032 to i64*
  store i64 %1043, i64* %1044, align 8
  %1045 = load i64, i64* %298, align 8
  %1046 = getelementptr inbounds %"class.v8::internal::ZoneVector.164", %"class.v8::internal::ZoneVector.164"* %1032, i64 0, i32 0, i32 0, i32 1
  %1047 = bitcast %"class.v8::internal::wasm::ValueType"** %1046 to i64*
  store i64 %1045, i64* %1047, align 8
  %1048 = getelementptr inbounds %"class.v8::internal::wasm::AsmJsParser::CachedVector.209", %"class.v8::internal::wasm::AsmJsParser::CachedVector.209"* %3, i64 0, i32 0, i32 0, i32 0, i32 2, i32 0, i32 0
  %1049 = bitcast %"class.v8::internal::wasm::ValueType"** %1048 to i64*
  %1050 = load i64, i64* %1049, align 8
  %1051 = getelementptr inbounds %"class.v8::internal::ZoneVector.164", %"class.v8::internal::ZoneVector.164"* %1032, i64 0, i32 0, i32 0, i32 2, i32 0, i32 0
  %1052 = bitcast %"class.v8::internal::wasm::ValueType"** %1051 to i64*
  store i64 %1050, i64* %1052, align 8
  call void @llvm.memset.p0i8.i64(i8* nonnull align 8 %242, i8 0, i64 24, i1 false) #12
  %1053 = getelementptr inbounds %"class.v8::internal::ZoneVector.164", %"class.v8::internal::ZoneVector.164"* %1032, i64 1
  %1054 = ptrtoint %"class.v8::internal::ZoneVector.164"* %1053 to i64
  %1055 = bitcast %"class.v8::internal::ZoneVector.164"** %1031 to i64*
  store i64 %1054, i64* %1055, align 8
  br label %1063

1056:                                             ; preds = %1029
  %1057 = getelementptr inbounds %"class.v8::internal::wasm::AsmJsParser::CachedVectors", %"class.v8::internal::wasm::AsmJsParser::CachedVectors"* %1030, i64 0, i32 0, i32 0
  call void @_ZNSt3__16vectorIN2v88internal10ZoneVectorINS2_4wasm9ValueTypeEEENS2_13ZoneAllocatorIS6_EEE24__emplace_back_slow_pathIJS6_EEEvDpOT_(%"class.std::__1::vector.162"* %1057, %"class.v8::internal::ZoneVector.164"* nonnull dereferenceable(32) %292) #12
  %1058 = getelementptr inbounds %"class.v8::internal::wasm::AsmJsParser::CachedVector.209", %"class.v8::internal::wasm::AsmJsParser::CachedVector.209"* %3, i64 0, i32 0, i32 0, i32 0, i32 0
  %1059 = load %"class.v8::internal::wasm::ValueType"*, %"class.v8::internal::wasm::ValueType"** %1058, align 8
  %1060 = icmp eq %"class.v8::internal::wasm::ValueType"* %1059, null
  br i1 %1060, label %1063, label %1061

1061:                                             ; preds = %1056
  %1062 = ptrtoint %"class.v8::internal::wasm::ValueType"* %1059 to i64
  store i64 %1062, i64* %298, align 8
  br label %1063

1063:                                             ; preds = %1036, %1056, %1061
  call void @llvm.lifetime.end.p0i8(i64 40, i8* nonnull %242) #12
  br label %1064

1064:                                             ; preds = %1063, %235
  %1065 = load %"class.v8::internal::wasm::AsmJsParser::CachedVectors.175"*, %"class.v8::internal::wasm::AsmJsParser::CachedVectors.175"** %189, align 8
  %1066 = getelementptr inbounds %"class.v8::internal::wasm::AsmJsParser::CachedVectors.175", %"class.v8::internal::wasm::AsmJsParser::CachedVectors.175"* %1065, i64 0, i32 0, i32 0, i32 0, i32 1
  %1067 = load %"class.v8::internal::ZoneVector.179"*, %"class.v8::internal::ZoneVector.179"** %1066, align 8
  %1068 = getelementptr inbounds %"class.v8::internal::wasm::AsmJsParser::CachedVectors.175", %"class.v8::internal::wasm::AsmJsParser::CachedVectors.175"* %1065, i64 0, i32 0, i32 0, i32 0, i32 2, i32 0, i32 0
  %1069 = load %"class.v8::internal::ZoneVector.179"*, %"class.v8::internal::ZoneVector.179"** %1068, align 8
  %1070 = icmp ult %"class.v8::internal::ZoneVector.179"* %1067, %1069
  br i1 %1070, label %1071, label %1091

1071:                                             ; preds = %1064
  %1072 = getelementptr inbounds %"class.v8::internal::wasm::AsmJsParser::CachedVector", %"class.v8::internal::wasm::AsmJsParser::CachedVector"* %2, i64 0, i32 0, i32 0, i32 0, i32 2, i32 1, i32 0
  %1073 = getelementptr inbounds %"class.v8::internal::ZoneVector.179", %"class.v8::internal::ZoneVector.179"* %1067, i64 0, i32 0, i32 0, i32 2, i32 1
  %1074 = bitcast %"class.v8::internal::ZoneAllocator.185"* %1072 to i64*
  %1075 = bitcast %"struct.std::__1::__compressed_pair_elem.184"* %1073 to i64*
  %1076 = bitcast %"class.v8::internal::ZoneVector.179"* %1067 to i8*
  call void @llvm.memset.p0i8.i64(i8* align 8 %1076, i8 0, i64 24, i1 false) #12
  %1077 = load i64, i64* %1074, align 8
  store i64 %1077, i64* %1075, align 8
  %1078 = load i64, i64* %226, align 8
  %1079 = bitcast %"class.v8::internal::ZoneVector.179"* %1067 to i64*
  store i64 %1078, i64* %1079, align 8
  %1080 = load i64, i64* %229, align 8
  %1081 = getelementptr inbounds %"class.v8::internal::ZoneVector.179", %"class.v8::internal::ZoneVector.179"* %1067, i64 0, i32 0, i32 0, i32 1
  %1082 = bitcast %"class.v8::internal::wasm::AsmType"*** %1081 to i64*
  store i64 %1080, i64* %1082, align 8
  %1083 = getelementptr inbounds %"class.v8::internal::wasm::AsmJsParser::CachedVector", %"class.v8::internal::wasm::AsmJsParser::CachedVector"* %2, i64 0, i32 0, i32 0, i32 0, i32 2, i32 0, i32 0
  %1084 = bitcast %"class.v8::internal::wasm::AsmType"*** %1083 to i64*
  %1085 = load i64, i64* %1084, align 8
  %1086 = getelementptr inbounds %"class.v8::internal::ZoneVector.179", %"class.v8::internal::ZoneVector.179"* %1067, i64 0, i32 0, i32 0, i32 2, i32 0, i32 0
  %1087 = bitcast %"class.v8::internal::wasm::AsmType"*** %1086 to i64*
  store i64 %1085, i64* %1087, align 8
  call void @llvm.memset.p0i8.i64(i8* nonnull align 8 %182, i8 0, i64 24, i1 false) #12
  %1088 = getelementptr inbounds %"class.v8::internal::ZoneVector.179", %"class.v8::internal::ZoneVector.179"* %1067, i64 1
  %1089 = ptrtoint %"class.v8::internal::ZoneVector.179"* %1088 to i64
  %1090 = bitcast %"class.v8::internal::ZoneVector.179"** %1066 to i64*
  store i64 %1089, i64* %1090, align 8
  br label %1098

1091:                                             ; preds = %1064
  %1092 = getelementptr inbounds %"class.v8::internal::wasm::AsmJsParser::CachedVectors.175", %"class.v8::internal::wasm::AsmJsParser::CachedVectors.175"* %1065, i64 0, i32 0, i32 0
  call void @_ZNSt3__16vectorIN2v88internal10ZoneVectorIPNS2_4wasm7AsmTypeEEENS2_13ZoneAllocatorIS7_EEE24__emplace_back_slow_pathIJS7_EEEvDpOT_(%"class.std::__1::vector.177"* %1092, %"class.v8::internal::ZoneVector.179"* nonnull dereferenceable(32) %227) #12
  %1093 = getelementptr inbounds %"class.v8::internal::wasm::AsmJsParser::CachedVector", %"class.v8::internal::wasm::AsmJsParser::CachedVector"* %2, i64 0, i32 0, i32 0, i32 0, i32 0
  %1094 = load %"class.v8::internal::wasm::AsmType"**, %"class.v8::internal::wasm::AsmType"*** %1093, align 8
  %1095 = icmp eq %"class.v8::internal::wasm::AsmType"** %1094, null
  br i1 %1095, label %1098, label %1096

1096:                                             ; preds = %1091
  %1097 = ptrtoint %"class.v8::internal::wasm::AsmType"** %1094 to i64
  store i64 %1097, i64* %229, align 8
  br label %1098

1098:                                             ; preds = %1071, %1091, %1096
  call void @llvm.lifetime.end.p0i8(i64 40, i8* nonnull %182) #12
  br label %1099

1099:                                             ; preds = %153, %166, %1098, %18, %10
  ret void
}

; Function Attrs: nounwind ssp uwtable
define hidden void @_ZN2v88internal4wasm11AsmJsParser21ValidateFunctionTableEv(%"class.v8::internal::wasm::AsmJsParser"*) local_unnamed_addr #0 align 2 {
  %2 = getelementptr inbounds %"class.v8::internal::wasm::AsmJsParser", %"class.v8::internal::wasm::AsmJsParser"* %0, i64 0, i32 1
  %3 = getelementptr inbounds %"class.v8::internal::wasm::AsmJsParser", %"class.v8::internal::wasm::AsmJsParser"* %0, i64 0, i32 1, i32 1
  %4 = load i32, i32* %3, align 8
  %5 = icmp eq i32 %4, -9946
  br i1 %5, label %13, label %6

6:                                                ; preds = %1
  %7 = getelementptr inbounds %"class.v8::internal::wasm::AsmJsParser", %"class.v8::internal::wasm::AsmJsParser"* %0, i64 0, i32 17
  store i8 1, i8* %7, align 4
  %8 = getelementptr inbounds %"class.v8::internal::wasm::AsmJsParser", %"class.v8::internal::wasm::AsmJsParser"* %0, i64 0, i32 18
  store i8* getelementptr inbounds ([17 x i8], [17 x i8]* @.str.3, i64 0, i64 0), i8** %8, align 8
  %9 = getelementptr inbounds %"class.v8::internal::wasm::AsmJsParser", %"class.v8::internal::wasm::AsmJsParser"* %0, i64 0, i32 1, i32 5
  %10 = load i64, i64* %9, align 8
  %11 = trunc i64 %10 to i32
  %12 = getelementptr inbounds %"class.v8::internal::wasm::AsmJsParser", %"class.v8::internal::wasm::AsmJsParser"* %0, i64 0, i32 19
  store i32 %11, i32* %12, align 8
  br label %283

13:                                               ; preds = %1
  tail call void @_ZN2v88internal12AsmJsScanner4NextEv(%"class.v8::internal::AsmJsScanner"* %2) #12
  %14 = load i32, i32* %3, align 8
  %15 = icmp sgt i32 %14, 255
  br i1 %15, label %23, label %16

16:                                               ; preds = %13
  %17 = getelementptr inbounds %"class.v8::internal::wasm::AsmJsParser", %"class.v8::internal::wasm::AsmJsParser"* %0, i64 0, i32 17
  store i8 1, i8* %17, align 4
  %18 = getelementptr inbounds %"class.v8::internal::wasm::AsmJsParser", %"class.v8::internal::wasm::AsmJsParser"* %0, i64 0, i32 18
  store i8* getelementptr inbounds ([20 x i8], [20 x i8]* @.str.26, i64 0, i64 0), i8** %18, align 8
  %19 = getelementptr inbounds %"class.v8::internal::wasm::AsmJsParser", %"class.v8::internal::wasm::AsmJsParser"* %0, i64 0, i32 1, i32 5
  %20 = load i64, i64* %19, align 8
  %21 = trunc i64 %20 to i32
  %22 = getelementptr inbounds %"class.v8::internal::wasm::AsmJsParser", %"class.v8::internal::wasm::AsmJsParser"* %0, i64 0, i32 19
  store i32 %21, i32* %22, align 8
  br label %283

23:                                               ; preds = %13
  tail call void @_ZN2v88internal12AsmJsScanner4NextEv(%"class.v8::internal::AsmJsScanner"* %2) #12
  %24 = getelementptr inbounds %"class.v8::internal::wasm::AsmJsParser", %"class.v8::internal::wasm::AsmJsParser"* %0, i64 0, i32 7
  %25 = getelementptr inbounds %"class.v8::internal::wasm::AsmJsParser", %"class.v8::internal::wasm::AsmJsParser"* %0, i64 0, i32 7, i32 1
  %26 = load i64, i64* %25, align 8
  %27 = add nsw i32 %14, -256
  %28 = sext i32 %27 to i64
  %29 = getelementptr inbounds %"class.v8::internal::wasm::AsmJsParser", %"class.v8::internal::wasm::AsmJsParser"* %0, i64 0, i32 9
  %30 = load i64, i64* %29, align 8
  %31 = icmp ugt i64 %30, %28
  br i1 %31, label %34, label %32

32:                                               ; preds = %23
  %33 = add nuw nsw i64 %28, 1
  store i64 %33, i64* %29, align 8
  br label %34

34:                                               ; preds = %32, %23
  %35 = add nuw nsw i64 %28, 1
  %36 = icmp ugt i64 %26, %28
  br i1 %36, label %37, label %40

37:                                               ; preds = %34
  %38 = getelementptr inbounds %"class.v8::internal::Vector.160", %"class.v8::internal::Vector.160"* %24, i64 0, i32 0
  %39 = load %"struct.v8::internal::wasm::AsmJsParser::VarInfo"*, %"struct.v8::internal::wasm::AsmJsParser::VarInfo"** %38, align 8
  br label %81

40:                                               ; preds = %34
  %41 = shl i64 %26, 1
  %42 = icmp ult i64 %41, %35
  %43 = select i1 %42, i64 %35, i64 %41
  %44 = getelementptr inbounds %"class.v8::internal::wasm::AsmJsParser", %"class.v8::internal::wasm::AsmJsParser"* %0, i64 0, i32 0
  %45 = load %"class.v8::internal::Zone"*, %"class.v8::internal::Zone"** %44, align 8
  %46 = mul i64 %43, 40
  %47 = getelementptr inbounds %"class.v8::internal::Zone", %"class.v8::internal::Zone"* %45, i64 0, i32 2
  %48 = load i64, i64* %47, align 8
  %49 = getelementptr inbounds %"class.v8::internal::Zone", %"class.v8::internal::Zone"* %45, i64 0, i32 3
  %50 = load i64, i64* %49, align 8
  %51 = sub i64 %50, %48
  %52 = icmp ugt i64 %46, %51
  br i1 %52, label %53, label %55, !prof !2

53:                                               ; preds = %40
  %54 = tail call i64 @_ZN2v88internal4Zone9NewExpandEm(%"class.v8::internal::Zone"* %45, i64 %46) #12
  br label %57

55:                                               ; preds = %40
  %56 = add i64 %48, %46
  store i64 %56, i64* %47, align 8
  br label %57

57:                                               ; preds = %55, %53
  %58 = phi i64 [ %54, %53 ], [ %48, %55 ]
  %59 = inttoptr i64 %58 to %"struct.v8::internal::wasm::AsmJsParser::VarInfo"*
  %60 = getelementptr inbounds %"struct.v8::internal::wasm::AsmJsParser::VarInfo", %"struct.v8::internal::wasm::AsmJsParser::VarInfo"* %59, i64 %43
  %61 = icmp eq i64 %43, 0
  br i1 %61, label %71, label %62

62:                                               ; preds = %57, %62
  %63 = phi %"struct.v8::internal::wasm::AsmJsParser::VarInfo"* [ %69, %62 ], [ %59, %57 ]
  %64 = getelementptr inbounds %"struct.v8::internal::wasm::AsmJsParser::VarInfo", %"struct.v8::internal::wasm::AsmJsParser::VarInfo"* %63, i64 0, i32 0
  store %"class.v8::internal::wasm::AsmType"* inttoptr (i64 2147483649 to %"class.v8::internal::wasm::AsmType"*), %"class.v8::internal::wasm::AsmType"** %64, align 8
  %65 = getelementptr inbounds %"struct.v8::internal::wasm::AsmJsParser::VarInfo", %"struct.v8::internal::wasm::AsmJsParser::VarInfo"* %63, i64 0, i32 1
  %66 = getelementptr inbounds %"struct.v8::internal::wasm::AsmJsParser::VarInfo", %"struct.v8::internal::wasm::AsmJsParser::VarInfo"* %63, i64 0, i32 6
  %67 = bitcast %"class.v8::internal::wasm::WasmFunctionBuilder"** %65 to i8*
  tail call void @llvm.memset.p0i8.i64(i8* align 8 %67, i8 0, i64 28, i1 false) #12
  store i8 1, i8* %66, align 4
  %68 = getelementptr inbounds %"struct.v8::internal::wasm::AsmJsParser::VarInfo", %"struct.v8::internal::wasm::AsmJsParser::VarInfo"* %63, i64 0, i32 7
  store i8 0, i8* %68, align 1
  %69 = getelementptr inbounds %"struct.v8::internal::wasm::AsmJsParser::VarInfo", %"struct.v8::internal::wasm::AsmJsParser::VarInfo"* %63, i64 1
  %70 = icmp eq %"struct.v8::internal::wasm::AsmJsParser::VarInfo"* %69, %60
  br i1 %70, label %71, label %62

71:                                               ; preds = %62, %57
  %72 = getelementptr inbounds %"class.v8::internal::Vector.160", %"class.v8::internal::Vector.160"* %24, i64 0, i32 0
  %73 = load i64, i64* %25, align 8
  %74 = mul nuw i64 %73, 40
  %75 = icmp eq i64 %74, 0
  br i1 %75, label %80, label %76

76:                                               ; preds = %71
  %77 = bitcast %"class.v8::internal::Vector.160"* %24 to i8**
  %78 = load i8*, i8** %77, align 8
  %79 = inttoptr i64 %58 to i8*
  tail call void @llvm.memmove.p0i8.p0i8.i64(i8* align 8 %79, i8* align 8 %78, i64 %74, i1 false) #12
  br label %80

80:                                               ; preds = %76, %71
  store %"struct.v8::internal::wasm::AsmJsParser::VarInfo"* %59, %"struct.v8::internal::wasm::AsmJsParser::VarInfo"** %72, align 8
  store i64 %43, i64* %25, align 8
  br label %81

81:                                               ; preds = %37, %80
  %82 = phi %"struct.v8::internal::wasm::AsmJsParser::VarInfo"* [ %39, %37 ], [ %59, %80 ]
  %83 = getelementptr inbounds %"struct.v8::internal::wasm::AsmJsParser::VarInfo", %"struct.v8::internal::wasm::AsmJsParser::VarInfo"* %82, i64 %28, i32 5
  %84 = load i32, i32* %83, align 8
  switch i32 %84, label %97 [
    i32 5, label %85
    i32 0, label %104
  ]

85:                                               ; preds = %81
  %86 = getelementptr inbounds %"struct.v8::internal::wasm::AsmJsParser::VarInfo", %"struct.v8::internal::wasm::AsmJsParser::VarInfo"* %82, i64 %28, i32 7
  %87 = load i8, i8* %86, align 1, !range !69
  %88 = icmp eq i8 %87, 0
  br i1 %88, label %96, label %89

89:                                               ; preds = %85
  %90 = getelementptr inbounds %"class.v8::internal::wasm::AsmJsParser", %"class.v8::internal::wasm::AsmJsParser"* %0, i64 0, i32 17
  store i8 1, i8* %90, align 4
  %91 = getelementptr inbounds %"class.v8::internal::wasm::AsmJsParser", %"class.v8::internal::wasm::AsmJsParser"* %0, i64 0, i32 18
  store i8* getelementptr inbounds ([25 x i8], [25 x i8]* @.str.27, i64 0, i64 0), i8** %91, align 8
  %92 = getelementptr inbounds %"class.v8::internal::wasm::AsmJsParser", %"class.v8::internal::wasm::AsmJsParser"* %0, i64 0, i32 1, i32 5
  %93 = load i64, i64* %92, align 8
  %94 = trunc i64 %93 to i32
  %95 = getelementptr inbounds %"class.v8::internal::wasm::AsmJsParser", %"class.v8::internal::wasm::AsmJsParser"* %0, i64 0, i32 19
  store i32 %94, i32* %95, align 8
  br label %283

96:                                               ; preds = %85
  store i8 1, i8* %86, align 1
  br label %104

97:                                               ; preds = %81
  %98 = getelementptr inbounds %"class.v8::internal::wasm::AsmJsParser", %"class.v8::internal::wasm::AsmJsParser"* %0, i64 0, i32 17
  store i8 1, i8* %98, align 4
  %99 = getelementptr inbounds %"class.v8::internal::wasm::AsmJsParser", %"class.v8::internal::wasm::AsmJsParser"* %0, i64 0, i32 18
  store i8* getelementptr inbounds ([29 x i8], [29 x i8]* @.str.28, i64 0, i64 0), i8** %99, align 8
  %100 = getelementptr inbounds %"class.v8::internal::wasm::AsmJsParser", %"class.v8::internal::wasm::AsmJsParser"* %0, i64 0, i32 1, i32 5
  %101 = load i64, i64* %100, align 8
  %102 = trunc i64 %101 to i32
  %103 = getelementptr inbounds %"class.v8::internal::wasm::AsmJsParser", %"class.v8::internal::wasm::AsmJsParser"* %0, i64 0, i32 19
  store i32 %102, i32* %103, align 8
  br label %283

104:                                              ; preds = %81, %96
  %105 = load i32, i32* %3, align 8
  %106 = icmp eq i32 %105, 61
  br i1 %106, label %114, label %107

107:                                              ; preds = %104
  %108 = getelementptr inbounds %"class.v8::internal::wasm::AsmJsParser", %"class.v8::internal::wasm::AsmJsParser"* %0, i64 0, i32 17
  store i8 1, i8* %108, align 4
  %109 = getelementptr inbounds %"class.v8::internal::wasm::AsmJsParser", %"class.v8::internal::wasm::AsmJsParser"* %0, i64 0, i32 18
  store i8* getelementptr inbounds ([17 x i8], [17 x i8]* @.str.3, i64 0, i64 0), i8** %109, align 8
  %110 = getelementptr inbounds %"class.v8::internal::wasm::AsmJsParser", %"class.v8::internal::wasm::AsmJsParser"* %0, i64 0, i32 1, i32 5
  %111 = load i64, i64* %110, align 8
  %112 = trunc i64 %111 to i32
  %113 = getelementptr inbounds %"class.v8::internal::wasm::AsmJsParser", %"class.v8::internal::wasm::AsmJsParser"* %0, i64 0, i32 19
  store i32 %112, i32* %113, align 8
  br label %283

114:                                              ; preds = %104
  tail call void @_ZN2v88internal12AsmJsScanner4NextEv(%"class.v8::internal::AsmJsScanner"* %2) #12
  %115 = load i32, i32* %3, align 8
  %116 = icmp eq i32 %115, 91
  br i1 %116, label %124, label %117

117:                                              ; preds = %114
  %118 = getelementptr inbounds %"class.v8::internal::wasm::AsmJsParser", %"class.v8::internal::wasm::AsmJsParser"* %0, i64 0, i32 17
  store i8 1, i8* %118, align 4
  %119 = getelementptr inbounds %"class.v8::internal::wasm::AsmJsParser", %"class.v8::internal::wasm::AsmJsParser"* %0, i64 0, i32 18
  store i8* getelementptr inbounds ([17 x i8], [17 x i8]* @.str.3, i64 0, i64 0), i8** %119, align 8
  %120 = getelementptr inbounds %"class.v8::internal::wasm::AsmJsParser", %"class.v8::internal::wasm::AsmJsParser"* %0, i64 0, i32 1, i32 5
  %121 = load i64, i64* %120, align 8
  %122 = trunc i64 %121 to i32
  %123 = getelementptr inbounds %"class.v8::internal::wasm::AsmJsParser", %"class.v8::internal::wasm::AsmJsParser"* %0, i64 0, i32 19
  store i32 %122, i32* %123, align 8
  br label %283

124:                                              ; preds = %114
  tail call void @_ZN2v88internal12AsmJsScanner4NextEv(%"class.v8::internal::AsmJsScanner"* %2) #12
  %125 = getelementptr inbounds %"class.v8::internal::wasm::AsmJsParser", %"class.v8::internal::wasm::AsmJsParser"* %0, i64 0, i32 9
  %126 = getelementptr inbounds %"class.v8::internal::wasm::AsmJsParser", %"class.v8::internal::wasm::AsmJsParser"* %0, i64 0, i32 0
  %127 = getelementptr inbounds %"struct.v8::internal::wasm::AsmJsParser::VarInfo", %"struct.v8::internal::wasm::AsmJsParser::VarInfo"* %82, i64 %28, i32 3
  %128 = getelementptr inbounds %"struct.v8::internal::wasm::AsmJsParser::VarInfo", %"struct.v8::internal::wasm::AsmJsParser::VarInfo"* %82, i64 %28, i32 0
  %129 = getelementptr inbounds %"class.v8::internal::wasm::AsmJsParser", %"class.v8::internal::wasm::AsmJsParser"* %0, i64 0, i32 2
  %130 = getelementptr inbounds %"struct.v8::internal::wasm::AsmJsParser::VarInfo", %"struct.v8::internal::wasm::AsmJsParser::VarInfo"* %82, i64 %28, i32 4
  %131 = load i32, i32* %3, align 8
  %132 = getelementptr inbounds %"class.v8::internal::Vector.160", %"class.v8::internal::Vector.160"* %24, i64 0, i32 0
  %133 = getelementptr inbounds %"class.v8::internal::Vector.160", %"class.v8::internal::Vector.160"* %24, i64 0, i32 0
  %134 = bitcast %"class.v8::internal::Vector.160"* %24 to i8**
  br label %135

135:                                              ; preds = %244, %124
  %136 = phi i32 [ %131, %124 ], [ %246, %244 ]
  %137 = phi i64 [ 0, %124 ], [ %245, %244 ]
  %138 = icmp sgt i32 %136, 255
  br i1 %138, label %146, label %139

139:                                              ; preds = %135
  %140 = getelementptr inbounds %"class.v8::internal::wasm::AsmJsParser", %"class.v8::internal::wasm::AsmJsParser"* %0, i64 0, i32 17
  store i8 1, i8* %140, align 4
  %141 = getelementptr inbounds %"class.v8::internal::wasm::AsmJsParser", %"class.v8::internal::wasm::AsmJsParser"* %0, i64 0, i32 18
  store i8* getelementptr inbounds ([23 x i8], [23 x i8]* @.str.22, i64 0, i64 0), i8** %141, align 8
  %142 = getelementptr inbounds %"class.v8::internal::wasm::AsmJsParser", %"class.v8::internal::wasm::AsmJsParser"* %0, i64 0, i32 1, i32 5
  %143 = load i64, i64* %142, align 8
  %144 = trunc i64 %143 to i32
  %145 = getelementptr inbounds %"class.v8::internal::wasm::AsmJsParser", %"class.v8::internal::wasm::AsmJsParser"* %0, i64 0, i32 19
  store i32 %144, i32* %145, align 8
  br label %283

146:                                              ; preds = %135
  tail call void @_ZN2v88internal12AsmJsScanner4NextEv(%"class.v8::internal::AsmJsScanner"* %2) #12
  %147 = load i64, i64* %25, align 8
  %148 = add nsw i32 %136, -256
  %149 = sext i32 %148 to i64
  %150 = load i64, i64* %125, align 8
  %151 = icmp ugt i64 %150, %149
  br i1 %151, label %154, label %152

152:                                              ; preds = %146
  %153 = add nuw nsw i64 %149, 1
  store i64 %153, i64* %125, align 8
  br label %154

154:                                              ; preds = %152, %146
  %155 = add nuw nsw i64 %149, 1
  %156 = icmp ugt i64 %147, %149
  br i1 %156, label %157, label %159

157:                                              ; preds = %154
  %158 = load %"struct.v8::internal::wasm::AsmJsParser::VarInfo"*, %"struct.v8::internal::wasm::AsmJsParser::VarInfo"** %132, align 8
  br label %197

159:                                              ; preds = %154
  %160 = shl i64 %147, 1
  %161 = icmp ult i64 %160, %155
  %162 = select i1 %161, i64 %155, i64 %160
  %163 = load %"class.v8::internal::Zone"*, %"class.v8::internal::Zone"** %126, align 8
  %164 = mul i64 %162, 40
  %165 = getelementptr inbounds %"class.v8::internal::Zone", %"class.v8::internal::Zone"* %163, i64 0, i32 2
  %166 = load i64, i64* %165, align 8
  %167 = getelementptr inbounds %"class.v8::internal::Zone", %"class.v8::internal::Zone"* %163, i64 0, i32 3
  %168 = load i64, i64* %167, align 8
  %169 = sub i64 %168, %166
  %170 = icmp ugt i64 %164, %169
  br i1 %170, label %171, label %173, !prof !2

171:                                              ; preds = %159
  %172 = tail call i64 @_ZN2v88internal4Zone9NewExpandEm(%"class.v8::internal::Zone"* %163, i64 %164) #12
  br label %175

173:                                              ; preds = %159
  %174 = add i64 %166, %164
  store i64 %174, i64* %165, align 8
  br label %175

175:                                              ; preds = %173, %171
  %176 = phi i64 [ %172, %171 ], [ %166, %173 ]
  %177 = inttoptr i64 %176 to %"struct.v8::internal::wasm::AsmJsParser::VarInfo"*
  %178 = getelementptr inbounds %"struct.v8::internal::wasm::AsmJsParser::VarInfo", %"struct.v8::internal::wasm::AsmJsParser::VarInfo"* %177, i64 %162
  %179 = icmp eq i64 %162, 0
  br i1 %179, label %189, label %180

180:                                              ; preds = %175, %180
  %181 = phi %"struct.v8::internal::wasm::AsmJsParser::VarInfo"* [ %187, %180 ], [ %177, %175 ]
  %182 = getelementptr inbounds %"struct.v8::internal::wasm::AsmJsParser::VarInfo", %"struct.v8::internal::wasm::AsmJsParser::VarInfo"* %181, i64 0, i32 0
  store %"class.v8::internal::wasm::AsmType"* inttoptr (i64 2147483649 to %"class.v8::internal::wasm::AsmType"*), %"class.v8::internal::wasm::AsmType"** %182, align 8
  %183 = getelementptr inbounds %"struct.v8::internal::wasm::AsmJsParser::VarInfo", %"struct.v8::internal::wasm::AsmJsParser::VarInfo"* %181, i64 0, i32 1
  %184 = getelementptr inbounds %"struct.v8::internal::wasm::AsmJsParser::VarInfo", %"struct.v8::internal::wasm::AsmJsParser::VarInfo"* %181, i64 0, i32 6
  %185 = bitcast %"class.v8::internal::wasm::WasmFunctionBuilder"** %183 to i8*
  tail call void @llvm.memset.p0i8.i64(i8* align 8 %185, i8 0, i64 28, i1 false) #12
  store i8 1, i8* %184, align 4
  %186 = getelementptr inbounds %"struct.v8::internal::wasm::AsmJsParser::VarInfo", %"struct.v8::internal::wasm::AsmJsParser::VarInfo"* %181, i64 0, i32 7
  store i8 0, i8* %186, align 1
  %187 = getelementptr inbounds %"struct.v8::internal::wasm::AsmJsParser::VarInfo", %"struct.v8::internal::wasm::AsmJsParser::VarInfo"* %181, i64 1
  %188 = icmp eq %"struct.v8::internal::wasm::AsmJsParser::VarInfo"* %187, %178
  br i1 %188, label %189, label %180

189:                                              ; preds = %180, %175
  %190 = load i64, i64* %25, align 8
  %191 = mul nuw i64 %190, 40
  %192 = icmp eq i64 %191, 0
  br i1 %192, label %196, label %193

193:                                              ; preds = %189
  %194 = load i8*, i8** %134, align 8
  %195 = inttoptr i64 %176 to i8*
  tail call void @llvm.memmove.p0i8.p0i8.i64(i8* align 8 %195, i8* align 8 %194, i64 %191, i1 false) #12
  br label %196

196:                                              ; preds = %193, %189
  store %"struct.v8::internal::wasm::AsmJsParser::VarInfo"* %177, %"struct.v8::internal::wasm::AsmJsParser::VarInfo"** %133, align 8
  store i64 %162, i64* %25, align 8
  br label %197

197:                                              ; preds = %157, %196
  %198 = phi %"struct.v8::internal::wasm::AsmJsParser::VarInfo"* [ %158, %157 ], [ %177, %196 ]
  %199 = getelementptr inbounds %"struct.v8::internal::wasm::AsmJsParser::VarInfo", %"struct.v8::internal::wasm::AsmJsParser::VarInfo"* %198, i64 %149, i32 5
  %200 = load i32, i32* %199, align 8
  %201 = icmp eq i32 %200, 4
  br i1 %201, label %209, label %202

202:                                              ; preds = %197
  %203 = getelementptr inbounds %"class.v8::internal::wasm::AsmJsParser", %"class.v8::internal::wasm::AsmJsParser"* %0, i64 0, i32 17
  store i8 1, i8* %203, align 4
  %204 = getelementptr inbounds %"class.v8::internal::wasm::AsmJsParser", %"class.v8::internal::wasm::AsmJsParser"* %0, i64 0, i32 18
  store i8* getelementptr inbounds ([18 x i8], [18 x i8]* @.str.23, i64 0, i64 0), i8** %204, align 8
  %205 = getelementptr inbounds %"class.v8::internal::wasm::AsmJsParser", %"class.v8::internal::wasm::AsmJsParser"* %0, i64 0, i32 1, i32 5
  %206 = load i64, i64* %205, align 8
  %207 = trunc i64 %206 to i32
  %208 = getelementptr inbounds %"class.v8::internal::wasm::AsmJsParser", %"class.v8::internal::wasm::AsmJsParser"* %0, i64 0, i32 19
  store i32 %207, i32* %208, align 8
  br label %283

209:                                              ; preds = %197
  %210 = load i32, i32* %83, align 8
  %211 = icmp eq i32 %210, 5
  br i1 %211, label %212, label %242

212:                                              ; preds = %209
  %213 = load i32, i32* %127, align 8
  %214 = zext i32 %213 to i64
  %215 = icmp ugt i64 %137, %214
  br i1 %215, label %216, label %223

216:                                              ; preds = %212
  %217 = getelementptr inbounds %"class.v8::internal::wasm::AsmJsParser", %"class.v8::internal::wasm::AsmJsParser"* %0, i64 0, i32 17
  store i8 1, i8* %217, align 4
  %218 = getelementptr inbounds %"class.v8::internal::wasm::AsmJsParser", %"class.v8::internal::wasm::AsmJsParser"* %0, i64 0, i32 18
  store i8* getelementptr inbounds ([29 x i8], [29 x i8]* @.str.29, i64 0, i64 0), i8** %218, align 8
  %219 = getelementptr inbounds %"class.v8::internal::wasm::AsmJsParser", %"class.v8::internal::wasm::AsmJsParser"* %0, i64 0, i32 1, i32 5
  %220 = load i64, i64* %219, align 8
  %221 = trunc i64 %220 to i32
  %222 = getelementptr inbounds %"class.v8::internal::wasm::AsmJsParser", %"class.v8::internal::wasm::AsmJsParser"* %0, i64 0, i32 19
  store i32 %221, i32* %222, align 8
  br label %283

223:                                              ; preds = %212
  %224 = getelementptr inbounds %"struct.v8::internal::wasm::AsmJsParser::VarInfo", %"struct.v8::internal::wasm::AsmJsParser::VarInfo"* %198, i64 %149, i32 0
  %225 = load %"class.v8::internal::wasm::AsmType"*, %"class.v8::internal::wasm::AsmType"** %224, align 8
  %226 = load %"class.v8::internal::wasm::AsmType"*, %"class.v8::internal::wasm::AsmType"** %128, align 8
  %227 = tail call zeroext i1 @_ZN2v88internal4wasm7AsmType3IsAEPS2_(%"class.v8::internal::wasm::AsmType"* %225, %"class.v8::internal::wasm::AsmType"* %226) #12
  br i1 %227, label %235, label %228

228:                                              ; preds = %223
  %229 = getelementptr inbounds %"class.v8::internal::wasm::AsmJsParser", %"class.v8::internal::wasm::AsmJsParser"* %0, i64 0, i32 17
  store i8 1, i8* %229, align 4
  %230 = getelementptr inbounds %"class.v8::internal::wasm::AsmJsParser", %"class.v8::internal::wasm::AsmJsParser"* %0, i64 0, i32 18
  store i8* getelementptr inbounds ([44 x i8], [44 x i8]* @.str.30, i64 0, i64 0), i8** %230, align 8
  %231 = getelementptr inbounds %"class.v8::internal::wasm::AsmJsParser", %"class.v8::internal::wasm::AsmJsParser"* %0, i64 0, i32 1, i32 5
  %232 = load i64, i64* %231, align 8
  %233 = trunc i64 %232 to i32
  %234 = getelementptr inbounds %"class.v8::internal::wasm::AsmJsParser", %"class.v8::internal::wasm::AsmJsParser"* %0, i64 0, i32 19
  store i32 %233, i32* %234, align 8
  br label %283

235:                                              ; preds = %223
  %236 = load %"class.v8::internal::wasm::WasmModuleBuilder"*, %"class.v8::internal::wasm::WasmModuleBuilder"** %129, align 8
  %237 = load i32, i32* %130, align 4
  %238 = trunc i64 %137 to i32
  %239 = add i32 %237, %238
  %240 = getelementptr inbounds %"struct.v8::internal::wasm::AsmJsParser::VarInfo", %"struct.v8::internal::wasm::AsmJsParser::VarInfo"* %198, i64 %149, i32 4
  %241 = load i32, i32* %240, align 4
  tail call void @_ZN2v88internal4wasm17WasmModuleBuilder19SetIndirectFunctionEjj(%"class.v8::internal::wasm::WasmModuleBuilder"* %236, i32 %239, i32 %241) #12
  br label %242

242:                                              ; preds = %235, %209
  %243 = load i32, i32* %3, align 8
  switch i32 %243, label %248 [
    i32 44, label %244
    i32 93, label %255
  ]

244:                                              ; preds = %242
  %245 = add i64 %137, 1
  tail call void @_ZN2v88internal12AsmJsScanner4NextEv(%"class.v8::internal::AsmJsScanner"* %2) #12
  %246 = load i32, i32* %3, align 8
  %247 = icmp eq i32 %246, 93
  br i1 %247, label %255, label %135

248:                                              ; preds = %242
  %249 = getelementptr inbounds %"class.v8::internal::wasm::AsmJsParser", %"class.v8::internal::wasm::AsmJsParser"* %0, i64 0, i32 17
  store i8 1, i8* %249, align 4
  %250 = getelementptr inbounds %"class.v8::internal::wasm::AsmJsParser", %"class.v8::internal::wasm::AsmJsParser"* %0, i64 0, i32 18
  store i8* getelementptr inbounds ([17 x i8], [17 x i8]* @.str.3, i64 0, i64 0), i8** %250, align 8
  %251 = getelementptr inbounds %"class.v8::internal::wasm::AsmJsParser", %"class.v8::internal::wasm::AsmJsParser"* %0, i64 0, i32 1, i32 5
  %252 = load i64, i64* %251, align 8
  %253 = trunc i64 %252 to i32
  %254 = getelementptr inbounds %"class.v8::internal::wasm::AsmJsParser", %"class.v8::internal::wasm::AsmJsParser"* %0, i64 0, i32 19
  store i32 %253, i32* %254, align 8
  br label %283

255:                                              ; preds = %244, %242
  tail call void @_ZN2v88internal12AsmJsScanner4NextEv(%"class.v8::internal::AsmJsScanner"* %2) #12
  %256 = load i32, i32* %83, align 8
  %257 = icmp eq i32 %256, 5
  br i1 %257, label %258, label %269

258:                                              ; preds = %255
  %259 = load i32, i32* %127, align 8
  %260 = zext i32 %259 to i64
  %261 = icmp eq i64 %137, %260
  br i1 %261, label %269, label %262

262:                                              ; preds = %258
  %263 = getelementptr inbounds %"class.v8::internal::wasm::AsmJsParser", %"class.v8::internal::wasm::AsmJsParser"* %0, i64 0, i32 17
  store i8 1, i8* %263, align 4
  %264 = getelementptr inbounds %"class.v8::internal::wasm::AsmJsParser", %"class.v8::internal::wasm::AsmJsParser"* %0, i64 0, i32 18
  store i8* getelementptr inbounds ([40 x i8], [40 x i8]* @.str.31, i64 0, i64 0), i8** %264, align 8
  %265 = getelementptr inbounds %"class.v8::internal::wasm::AsmJsParser", %"class.v8::internal::wasm::AsmJsParser"* %0, i64 0, i32 1, i32 5
  %266 = load i64, i64* %265, align 8
  %267 = trunc i64 %266 to i32
  %268 = getelementptr inbounds %"class.v8::internal::wasm::AsmJsParser", %"class.v8::internal::wasm::AsmJsParser"* %0, i64 0, i32 19
  store i32 %267, i32* %268, align 8
  br label %283

269:                                              ; preds = %258, %255
  %270 = load i32, i32* %3, align 8
  switch i32 %270, label %272 [
    i32 59, label %271
    i32 125, label %283
  ]

271:                                              ; preds = %269
  tail call void @_ZN2v88internal12AsmJsScanner4NextEv(%"class.v8::internal::AsmJsScanner"* %2) #12
  br label %283

272:                                              ; preds = %269
  %273 = getelementptr inbounds %"class.v8::internal::wasm::AsmJsParser", %"class.v8::internal::wasm::AsmJsParser"* %0, i64 0, i32 1, i32 20
  %274 = load i8, i8* %273, align 4, !range !69
  %275 = icmp eq i8 %274, 0
  br i1 %275, label %276, label %283

276:                                              ; preds = %272
  %277 = getelementptr inbounds %"class.v8::internal::wasm::AsmJsParser", %"class.v8::internal::wasm::AsmJsParser"* %0, i64 0, i32 17
  store i8 1, i8* %277, align 4
  %278 = getelementptr inbounds %"class.v8::internal::wasm::AsmJsParser", %"class.v8::internal::wasm::AsmJsParser"* %0, i64 0, i32 18
  store i8* getelementptr inbounds ([11 x i8], [11 x i8]* @.str.1, i64 0, i64 0), i8** %278, align 8
  %279 = getelementptr inbounds %"class.v8::internal::wasm::AsmJsParser", %"class.v8::internal::wasm::AsmJsParser"* %0, i64 0, i32 1, i32 5
  %280 = load i64, i64* %279, align 8
  %281 = trunc i64 %280 to i32
  %282 = getelementptr inbounds %"class.v8::internal::wasm::AsmJsParser", %"class.v8::internal::wasm::AsmJsParser"* %0, i64 0, i32 19
  store i32 %281, i32* %282, align 8
  br label %283

283:                                              ; preds = %228, %216, %202, %276, %272, %271, %269, %89, %97, %107, %117, %262, %248, %139, %6, %16
  ret void
}

; Function Attrs: nounwind ssp uwtable
define hidden void @_ZN2v88internal4wasm11AsmJsParser14ValidateExportEv(%"class.v8::internal::wasm::AsmJsParser"*) local_unnamed_addr #0 align 2 {
  %2 = getelementptr inbounds %"class.v8::internal::wasm::AsmJsParser", %"class.v8::internal::wasm::AsmJsParser"* %0, i64 0, i32 1
  %3 = getelementptr inbounds %"class.v8::internal::wasm::AsmJsParser", %"class.v8::internal::wasm::AsmJsParser"* %0, i64 0, i32 1, i32 1
  %4 = load i32, i32* %3, align 8
  %5 = icmp eq i32 %4, -9948
  br i1 %5, label %13, label %6

6:                                                ; preds = %1
  %7 = getelementptr inbounds %"class.v8::internal::wasm::AsmJsParser", %"class.v8::internal::wasm::AsmJsParser"* %0, i64 0, i32 17
  store i8 1, i8* %7, align 4
  %8 = getelementptr inbounds %"class.v8::internal::wasm::AsmJsParser", %"class.v8::internal::wasm::AsmJsParser"* %0, i64 0, i32 18
  store i8* getelementptr inbounds ([17 x i8], [17 x i8]* @.str.3, i64 0, i64 0), i8** %8, align 8
  %9 = getelementptr inbounds %"class.v8::internal::wasm::AsmJsParser", %"class.v8::internal::wasm::AsmJsParser"* %0, i64 0, i32 1, i32 5
  %10 = load i64, i64* %9, align 8
  %11 = trunc i64 %10 to i32
  %12 = getelementptr inbounds %"class.v8::internal::wasm::AsmJsParser", %"class.v8::internal::wasm::AsmJsParser"* %0, i64 0, i32 19
  store i32 %11, i32* %12, align 8
  br label %272

13:                                               ; preds = %1
  tail call void @_ZN2v88internal12AsmJsScanner4NextEv(%"class.v8::internal::AsmJsScanner"* %2) #12
  %14 = load i32, i32* %3, align 8
  %15 = icmp eq i32 %14, 123
  br i1 %15, label %16, label %184

16:                                               ; preds = %13
  tail call void @_ZN2v88internal12AsmJsScanner4NextEv(%"class.v8::internal::AsmJsScanner"* %2) #12
  %17 = getelementptr inbounds %"class.v8::internal::wasm::AsmJsParser", %"class.v8::internal::wasm::AsmJsParser"* %0, i64 0, i32 1, i32 10
  %18 = getelementptr inbounds %"class.v8::internal::wasm::AsmJsParser", %"class.v8::internal::wasm::AsmJsParser"* %0, i64 0, i32 0
  %19 = bitcast %"class.std::__1::basic_string"* %17 to %"struct.std::__1::basic_string<char, std::__1::char_traits<char>, std::__1::allocator<char> >::__short"*
  %20 = getelementptr inbounds %"struct.std::__1::basic_string<char, std::__1::char_traits<char>, std::__1::allocator<char> >::__short", %"struct.std::__1::basic_string<char, std::__1::char_traits<char>, std::__1::allocator<char> >::__short"* %19, i64 0, i32 1, i32 0
  %21 = getelementptr inbounds %"class.v8::internal::wasm::AsmJsParser", %"class.v8::internal::wasm::AsmJsParser"* %0, i64 0, i32 1, i32 10, i32 0, i32 0, i32 0, i32 0, i32 0, i32 1
  %22 = getelementptr inbounds %"class.v8::internal::wasm::AsmJsParser", %"class.v8::internal::wasm::AsmJsParser"* %0, i64 0, i32 7
  %23 = getelementptr inbounds %"class.v8::internal::wasm::AsmJsParser", %"class.v8::internal::wasm::AsmJsParser"* %0, i64 0, i32 9
  %24 = getelementptr inbounds %"class.v8::internal::wasm::AsmJsParser", %"class.v8::internal::wasm::AsmJsParser"* %0, i64 0, i32 2
  %25 = getelementptr inbounds %"class.v8::internal::wasm::AsmJsParser", %"class.v8::internal::wasm::AsmJsParser"* %0, i64 0, i32 7, i32 1
  %26 = getelementptr inbounds %"class.v8::internal::Vector.160", %"class.v8::internal::Vector.160"* %22, i64 0, i32 0
  %27 = getelementptr inbounds %"class.v8::internal::Vector.160", %"class.v8::internal::Vector.160"* %22, i64 0, i32 0
  %28 = bitcast %"class.v8::internal::Vector.160"* %22 to i8**
  br label %29

29:                                               ; preds = %173, %16
  %30 = load %"class.v8::internal::Zone"*, %"class.v8::internal::Zone"** %18, align 8
  %31 = load i8, i8* %20, align 1
  %32 = icmp slt i8 %31, 0
  br i1 %32, label %33, label %35

33:                                               ; preds = %29
  %34 = load i64, i64* %21, align 8
  br label %37

35:                                               ; preds = %29
  %36 = zext i8 %31 to i64
  br label %37

37:                                               ; preds = %35, %33
  %38 = phi i64 [ %34, %33 ], [ %36, %35 ]
  %39 = add i64 %38, 7
  %40 = and i64 %39, -8
  %41 = getelementptr inbounds %"class.v8::internal::Zone", %"class.v8::internal::Zone"* %30, i64 0, i32 2
  %42 = load i64, i64* %41, align 8
  %43 = getelementptr inbounds %"class.v8::internal::Zone", %"class.v8::internal::Zone"* %30, i64 0, i32 3
  %44 = load i64, i64* %43, align 8
  %45 = sub i64 %44, %42
  %46 = icmp ugt i64 %40, %45
  br i1 %46, label %47, label %49, !prof !2

47:                                               ; preds = %37
  %48 = tail call i64 @_ZN2v88internal4Zone9NewExpandEm(%"class.v8::internal::Zone"* %30, i64 %40) #12
  br label %51

49:                                               ; preds = %37
  %50 = add i64 %40, %42
  store i64 %50, i64* %41, align 8
  br label %51

51:                                               ; preds = %49, %47
  %52 = phi i64 [ %48, %47 ], [ %42, %49 ]
  %53 = inttoptr i64 %52 to i8*
  %54 = load i8, i8* %20, align 1
  %55 = icmp slt i8 %54, 0
  br i1 %55, label %56, label %58

56:                                               ; preds = %51
  %57 = load i64, i64* %21, align 8
  br label %60

58:                                               ; preds = %51
  %59 = zext i8 %54 to i64
  br label %60

60:                                               ; preds = %58, %56
  %61 = phi i64 [ %57, %56 ], [ %59, %58 ]
  %62 = tail call i64 @_ZNKSt3__112basic_stringIcNS_11char_traitsIcEENS_9allocatorIcEEE4copyEPcmm(%"class.std::__1::basic_string"* %17, i8* %53, i64 %61, i64 0) #12
  %63 = load i8, i8* %20, align 1
  %64 = icmp slt i8 %63, 0
  br i1 %64, label %65, label %67

65:                                               ; preds = %60
  %66 = load i64, i64* %21, align 8
  br label %69

67:                                               ; preds = %60
  %68 = zext i8 %63 to i64
  br label %69

69:                                               ; preds = %65, %67
  %70 = phi i64 [ %66, %65 ], [ %68, %67 ]
  %71 = shl i64 %70, 32
  %72 = ashr exact i64 %71, 32
  %73 = load i32, i32* %3, align 8
  %74 = add i32 %73, 9999
  %75 = icmp ugt i32 %74, 10254
  br i1 %75, label %83, label %76

76:                                               ; preds = %69
  %77 = getelementptr inbounds %"class.v8::internal::wasm::AsmJsParser", %"class.v8::internal::wasm::AsmJsParser"* %0, i64 0, i32 17
  store i8 1, i8* %77, align 4
  %78 = getelementptr inbounds %"class.v8::internal::wasm::AsmJsParser", %"class.v8::internal::wasm::AsmJsParser"* %0, i64 0, i32 18
  store i8* getelementptr inbounds ([20 x i8], [20 x i8]* @.str.21, i64 0, i64 0), i8** %78, align 8
  %79 = getelementptr inbounds %"class.v8::internal::wasm::AsmJsParser", %"class.v8::internal::wasm::AsmJsParser"* %0, i64 0, i32 1, i32 5
  %80 = load i64, i64* %79, align 8
  %81 = trunc i64 %80 to i32
  %82 = getelementptr inbounds %"class.v8::internal::wasm::AsmJsParser", %"class.v8::internal::wasm::AsmJsParser"* %0, i64 0, i32 19
  store i32 %81, i32* %82, align 8
  br label %272

83:                                               ; preds = %69
  tail call void @_ZN2v88internal12AsmJsScanner4NextEv(%"class.v8::internal::AsmJsScanner"* %2) #12
  %84 = load i32, i32* %3, align 8
  %85 = icmp eq i32 %84, 58
  br i1 %85, label %93, label %86

86:                                               ; preds = %83
  %87 = getelementptr inbounds %"class.v8::internal::wasm::AsmJsParser", %"class.v8::internal::wasm::AsmJsParser"* %0, i64 0, i32 17
  store i8 1, i8* %87, align 4
  %88 = getelementptr inbounds %"class.v8::internal::wasm::AsmJsParser", %"class.v8::internal::wasm::AsmJsParser"* %0, i64 0, i32 18
  store i8* getelementptr inbounds ([17 x i8], [17 x i8]* @.str.3, i64 0, i64 0), i8** %88, align 8
  %89 = getelementptr inbounds %"class.v8::internal::wasm::AsmJsParser", %"class.v8::internal::wasm::AsmJsParser"* %0, i64 0, i32 1, i32 5
  %90 = load i64, i64* %89, align 8
  %91 = trunc i64 %90 to i32
  %92 = getelementptr inbounds %"class.v8::internal::wasm::AsmJsParser", %"class.v8::internal::wasm::AsmJsParser"* %0, i64 0, i32 19
  store i32 %91, i32* %92, align 8
  br label %272

93:                                               ; preds = %83
  tail call void @_ZN2v88internal12AsmJsScanner4NextEv(%"class.v8::internal::AsmJsScanner"* %2) #12
  %94 = load i32, i32* %3, align 8
  %95 = icmp sgt i32 %94, 255
  br i1 %95, label %103, label %96

96:                                               ; preds = %93
  %97 = getelementptr inbounds %"class.v8::internal::wasm::AsmJsParser", %"class.v8::internal::wasm::AsmJsParser"* %0, i64 0, i32 17
  store i8 1, i8* %97, align 4
  %98 = getelementptr inbounds %"class.v8::internal::wasm::AsmJsParser", %"class.v8::internal::wasm::AsmJsParser"* %0, i64 0, i32 18
  store i8* getelementptr inbounds ([23 x i8], [23 x i8]* @.str.22, i64 0, i64 0), i8** %98, align 8
  %99 = getelementptr inbounds %"class.v8::internal::wasm::AsmJsParser", %"class.v8::internal::wasm::AsmJsParser"* %0, i64 0, i32 1, i32 5
  %100 = load i64, i64* %99, align 8
  %101 = trunc i64 %100 to i32
  %102 = getelementptr inbounds %"class.v8::internal::wasm::AsmJsParser", %"class.v8::internal::wasm::AsmJsParser"* %0, i64 0, i32 19
  store i32 %101, i32* %102, align 8
  br label %272

103:                                              ; preds = %93
  tail call void @_ZN2v88internal12AsmJsScanner4NextEv(%"class.v8::internal::AsmJsScanner"* %2) #12
  %104 = load i64, i64* %25, align 8
  %105 = add nsw i32 %94, -256
  %106 = sext i32 %105 to i64
  %107 = load i64, i64* %23, align 8
  %108 = icmp ugt i64 %107, %106
  br i1 %108, label %111, label %109

109:                                              ; preds = %103
  %110 = add nuw nsw i64 %106, 1
  store i64 %110, i64* %23, align 8
  br label %111

111:                                              ; preds = %109, %103
  %112 = add nuw nsw i64 %106, 1
  %113 = icmp ugt i64 %104, %106
  br i1 %113, label %114, label %116

114:                                              ; preds = %111
  %115 = load %"struct.v8::internal::wasm::AsmJsParser::VarInfo"*, %"struct.v8::internal::wasm::AsmJsParser::VarInfo"** %26, align 8
  br label %154

116:                                              ; preds = %111
  %117 = shl i64 %104, 1
  %118 = icmp ult i64 %117, %112
  %119 = select i1 %118, i64 %112, i64 %117
  %120 = load %"class.v8::internal::Zone"*, %"class.v8::internal::Zone"** %18, align 8
  %121 = mul i64 %119, 40
  %122 = getelementptr inbounds %"class.v8::internal::Zone", %"class.v8::internal::Zone"* %120, i64 0, i32 2
  %123 = load i64, i64* %122, align 8
  %124 = getelementptr inbounds %"class.v8::internal::Zone", %"class.v8::internal::Zone"* %120, i64 0, i32 3
  %125 = load i64, i64* %124, align 8
  %126 = sub i64 %125, %123
  %127 = icmp ugt i64 %121, %126
  br i1 %127, label %128, label %130, !prof !2

128:                                              ; preds = %116
  %129 = tail call i64 @_ZN2v88internal4Zone9NewExpandEm(%"class.v8::internal::Zone"* %120, i64 %121) #12
  br label %132

130:                                              ; preds = %116
  %131 = add i64 %123, %121
  store i64 %131, i64* %122, align 8
  br label %132

132:                                              ; preds = %130, %128
  %133 = phi i64 [ %129, %128 ], [ %123, %130 ]
  %134 = inttoptr i64 %133 to %"struct.v8::internal::wasm::AsmJsParser::VarInfo"*
  %135 = getelementptr inbounds %"struct.v8::internal::wasm::AsmJsParser::VarInfo", %"struct.v8::internal::wasm::AsmJsParser::VarInfo"* %134, i64 %119
  %136 = icmp eq i64 %119, 0
  br i1 %136, label %146, label %137

137:                                              ; preds = %132, %137
  %138 = phi %"struct.v8::internal::wasm::AsmJsParser::VarInfo"* [ %144, %137 ], [ %134, %132 ]
  %139 = getelementptr inbounds %"struct.v8::internal::wasm::AsmJsParser::VarInfo", %"struct.v8::internal::wasm::AsmJsParser::VarInfo"* %138, i64 0, i32 0
  store %"class.v8::internal::wasm::AsmType"* inttoptr (i64 2147483649 to %"class.v8::internal::wasm::AsmType"*), %"class.v8::internal::wasm::AsmType"** %139, align 8
  %140 = getelementptr inbounds %"struct.v8::internal::wasm::AsmJsParser::VarInfo", %"struct.v8::internal::wasm::AsmJsParser::VarInfo"* %138, i64 0, i32 1
  %141 = getelementptr inbounds %"struct.v8::internal::wasm::AsmJsParser::VarInfo", %"struct.v8::internal::wasm::AsmJsParser::VarInfo"* %138, i64 0, i32 6
  %142 = bitcast %"class.v8::internal::wasm::WasmFunctionBuilder"** %140 to i8*
  tail call void @llvm.memset.p0i8.i64(i8* align 8 %142, i8 0, i64 28, i1 false) #12
  store i8 1, i8* %141, align 4
  %143 = getelementptr inbounds %"struct.v8::internal::wasm::AsmJsParser::VarInfo", %"struct.v8::internal::wasm::AsmJsParser::VarInfo"* %138, i64 0, i32 7
  store i8 0, i8* %143, align 1
  %144 = getelementptr inbounds %"struct.v8::internal::wasm::AsmJsParser::VarInfo", %"struct.v8::internal::wasm::AsmJsParser::VarInfo"* %138, i64 1
  %145 = icmp eq %"struct.v8::internal::wasm::AsmJsParser::VarInfo"* %144, %135
  br i1 %145, label %146, label %137

146:                                              ; preds = %137, %132
  %147 = load i64, i64* %25, align 8
  %148 = mul nuw i64 %147, 40
  %149 = icmp eq i64 %148, 0
  br i1 %149, label %153, label %150

150:                                              ; preds = %146
  %151 = load i8*, i8** %28, align 8
  %152 = inttoptr i64 %133 to i8*
  tail call void @llvm.memmove.p0i8.p0i8.i64(i8* align 8 %152, i8* align 8 %151, i64 %148, i1 false) #12
  br label %153

153:                                              ; preds = %150, %146
  store %"struct.v8::internal::wasm::AsmJsParser::VarInfo"* %134, %"struct.v8::internal::wasm::AsmJsParser::VarInfo"** %27, align 8
  store i64 %119, i64* %25, align 8
  br label %154

154:                                              ; preds = %114, %153
  %155 = phi %"struct.v8::internal::wasm::AsmJsParser::VarInfo"* [ %115, %114 ], [ %134, %153 ]
  %156 = getelementptr inbounds %"struct.v8::internal::wasm::AsmJsParser::VarInfo", %"struct.v8::internal::wasm::AsmJsParser::VarInfo"* %155, i64 %106, i32 5
  %157 = load i32, i32* %156, align 8
  %158 = icmp eq i32 %157, 4
  br i1 %158, label %166, label %159

159:                                              ; preds = %154
  %160 = getelementptr inbounds %"class.v8::internal::wasm::AsmJsParser", %"class.v8::internal::wasm::AsmJsParser"* %0, i64 0, i32 17
  store i8 1, i8* %160, align 4
  %161 = getelementptr inbounds %"class.v8::internal::wasm::AsmJsParser", %"class.v8::internal::wasm::AsmJsParser"* %0, i64 0, i32 18
  store i8* getelementptr inbounds ([18 x i8], [18 x i8]* @.str.23, i64 0, i64 0), i8** %161, align 8
  %162 = getelementptr inbounds %"class.v8::internal::wasm::AsmJsParser", %"class.v8::internal::wasm::AsmJsParser"* %0, i64 0, i32 1, i32 5
  %163 = load i64, i64* %162, align 8
  %164 = trunc i64 %163 to i32
  %165 = getelementptr inbounds %"class.v8::internal::wasm::AsmJsParser", %"class.v8::internal::wasm::AsmJsParser"* %0, i64 0, i32 19
  store i32 %164, i32* %165, align 8
  br label %272

166:                                              ; preds = %154
  %167 = load %"class.v8::internal::wasm::WasmModuleBuilder"*, %"class.v8::internal::wasm::WasmModuleBuilder"** %24, align 8
  %168 = getelementptr inbounds %"struct.v8::internal::wasm::AsmJsParser::VarInfo", %"struct.v8::internal::wasm::AsmJsParser::VarInfo"* %155, i64 %106, i32 1
  %169 = load %"class.v8::internal::wasm::WasmFunctionBuilder"*, %"class.v8::internal::wasm::WasmFunctionBuilder"** %168, align 8
  %170 = getelementptr inbounds %"class.v8::internal::wasm::WasmFunctionBuilder", %"class.v8::internal::wasm::WasmFunctionBuilder"* %169, i64 0, i32 3
  %171 = load i32, i32* %170, align 4
  tail call void @_ZN2v88internal4wasm17WasmModuleBuilder9AddExportENS0_6VectorIKcEENS1_20ImportExportKindCodeEj(%"class.v8::internal::wasm::WasmModuleBuilder"* %167, i8* %53, i64 %72, i8 zeroext 0, i32 %171) #12
  %172 = load i32, i32* %3, align 8
  switch i32 %172, label %176 [
    i32 44, label %173
    i32 125, label %183
  ]

173:                                              ; preds = %166
  tail call void @_ZN2v88internal12AsmJsScanner4NextEv(%"class.v8::internal::AsmJsScanner"* %2) #12
  %174 = load i32, i32* %3, align 8
  %175 = icmp eq i32 %174, 125
  br i1 %175, label %183, label %29

176:                                              ; preds = %166
  %177 = getelementptr inbounds %"class.v8::internal::wasm::AsmJsParser", %"class.v8::internal::wasm::AsmJsParser"* %0, i64 0, i32 17
  store i8 1, i8* %177, align 4
  %178 = getelementptr inbounds %"class.v8::internal::wasm::AsmJsParser", %"class.v8::internal::wasm::AsmJsParser"* %0, i64 0, i32 18
  store i8* getelementptr inbounds ([17 x i8], [17 x i8]* @.str.3, i64 0, i64 0), i8** %178, align 8
  %179 = getelementptr inbounds %"class.v8::internal::wasm::AsmJsParser", %"class.v8::internal::wasm::AsmJsParser"* %0, i64 0, i32 1, i32 5
  %180 = load i64, i64* %179, align 8
  %181 = trunc i64 %180 to i32
  %182 = getelementptr inbounds %"class.v8::internal::wasm::AsmJsParser", %"class.v8::internal::wasm::AsmJsParser"* %0, i64 0, i32 19
  store i32 %181, i32* %182, align 8
  br label %272

183:                                              ; preds = %173, %166
  tail call void @_ZN2v88internal12AsmJsScanner4NextEv(%"class.v8::internal::AsmJsScanner"* %2) #12
  br label %272

184:                                              ; preds = %13
  %185 = icmp sgt i32 %14, 255
  br i1 %185, label %193, label %186

186:                                              ; preds = %184
  %187 = getelementptr inbounds %"class.v8::internal::wasm::AsmJsParser", %"class.v8::internal::wasm::AsmJsParser"* %0, i64 0, i32 17
  store i8 1, i8* %187, align 4
  %188 = getelementptr inbounds %"class.v8::internal::wasm::AsmJsParser", %"class.v8::internal::wasm::AsmJsParser"* %0, i64 0, i32 18
  store i8* getelementptr inbounds ([47 x i8], [47 x i8]* @.str.24, i64 0, i64 0), i8** %188, align 8
  %189 = getelementptr inbounds %"class.v8::internal::wasm::AsmJsParser", %"class.v8::internal::wasm::AsmJsParser"* %0, i64 0, i32 1, i32 5
  %190 = load i64, i64* %189, align 8
  %191 = trunc i64 %190 to i32
  %192 = getelementptr inbounds %"class.v8::internal::wasm::AsmJsParser", %"class.v8::internal::wasm::AsmJsParser"* %0, i64 0, i32 19
  store i32 %191, i32* %192, align 8
  br label %272

193:                                              ; preds = %184
  tail call void @_ZN2v88internal12AsmJsScanner4NextEv(%"class.v8::internal::AsmJsScanner"* %2) #12
  %194 = getelementptr inbounds %"class.v8::internal::wasm::AsmJsParser", %"class.v8::internal::wasm::AsmJsParser"* %0, i64 0, i32 7
  %195 = getelementptr inbounds %"class.v8::internal::wasm::AsmJsParser", %"class.v8::internal::wasm::AsmJsParser"* %0, i64 0, i32 7, i32 1
  %196 = load i64, i64* %195, align 8
  %197 = add nsw i32 %14, -256
  %198 = sext i32 %197 to i64
  %199 = getelementptr inbounds %"class.v8::internal::wasm::AsmJsParser", %"class.v8::internal::wasm::AsmJsParser"* %0, i64 0, i32 9
  %200 = load i64, i64* %199, align 8
  %201 = icmp ugt i64 %200, %198
  br i1 %201, label %204, label %202

202:                                              ; preds = %193
  %203 = add nuw nsw i64 %198, 1
  store i64 %203, i64* %199, align 8
  br label %204

204:                                              ; preds = %202, %193
  %205 = add nuw nsw i64 %198, 1
  %206 = icmp ugt i64 %196, %198
  br i1 %206, label %207, label %210

207:                                              ; preds = %204
  %208 = getelementptr inbounds %"class.v8::internal::Vector.160", %"class.v8::internal::Vector.160"* %194, i64 0, i32 0
  %209 = load %"struct.v8::internal::wasm::AsmJsParser::VarInfo"*, %"struct.v8::internal::wasm::AsmJsParser::VarInfo"** %208, align 8
  br label %251

210:                                              ; preds = %204
  %211 = shl i64 %196, 1
  %212 = icmp ult i64 %211, %205
  %213 = select i1 %212, i64 %205, i64 %211
  %214 = getelementptr inbounds %"class.v8::internal::wasm::AsmJsParser", %"class.v8::internal::wasm::AsmJsParser"* %0, i64 0, i32 0
  %215 = load %"class.v8::internal::Zone"*, %"class.v8::internal::Zone"** %214, align 8
  %216 = mul i64 %213, 40
  %217 = getelementptr inbounds %"class.v8::internal::Zone", %"class.v8::internal::Zone"* %215, i64 0, i32 2
  %218 = load i64, i64* %217, align 8
  %219 = getelementptr inbounds %"class.v8::internal::Zone", %"class.v8::internal::Zone"* %215, i64 0, i32 3
  %220 = load i64, i64* %219, align 8
  %221 = sub i64 %220, %218
  %222 = icmp ugt i64 %216, %221
  br i1 %222, label %223, label %225, !prof !2

223:                                              ; preds = %210
  %224 = tail call i64 @_ZN2v88internal4Zone9NewExpandEm(%"class.v8::internal::Zone"* %215, i64 %216) #12
  br label %227

225:                                              ; preds = %210
  %226 = add i64 %218, %216
  store i64 %226, i64* %217, align 8
  br label %227

227:                                              ; preds = %225, %223
  %228 = phi i64 [ %224, %223 ], [ %218, %225 ]
  %229 = inttoptr i64 %228 to %"struct.v8::internal::wasm::AsmJsParser::VarInfo"*
  %230 = getelementptr inbounds %"struct.v8::internal::wasm::AsmJsParser::VarInfo", %"struct.v8::internal::wasm::AsmJsParser::VarInfo"* %229, i64 %213
  %231 = icmp eq i64 %213, 0
  br i1 %231, label %241, label %232

232:                                              ; preds = %227, %232
  %233 = phi %"struct.v8::internal::wasm::AsmJsParser::VarInfo"* [ %239, %232 ], [ %229, %227 ]
  %234 = getelementptr inbounds %"struct.v8::internal::wasm::AsmJsParser::VarInfo", %"struct.v8::internal::wasm::AsmJsParser::VarInfo"* %233, i64 0, i32 0
  store %"class.v8::internal::wasm::AsmType"* inttoptr (i64 2147483649 to %"class.v8::internal::wasm::AsmType"*), %"class.v8::internal::wasm::AsmType"** %234, align 8
  %235 = getelementptr inbounds %"struct.v8::internal::wasm::AsmJsParser::VarInfo", %"struct.v8::internal::wasm::AsmJsParser::VarInfo"* %233, i64 0, i32 1
  %236 = getelementptr inbounds %"struct.v8::internal::wasm::AsmJsParser::VarInfo", %"struct.v8::internal::wasm::AsmJsParser::VarInfo"* %233, i64 0, i32 6
  %237 = bitcast %"class.v8::internal::wasm::WasmFunctionBuilder"** %235 to i8*
  tail call void @llvm.memset.p0i8.i64(i8* align 8 %237, i8 0, i64 28, i1 false) #12
  store i8 1, i8* %236, align 4
  %238 = getelementptr inbounds %"struct.v8::internal::wasm::AsmJsParser::VarInfo", %"struct.v8::internal::wasm::AsmJsParser::VarInfo"* %233, i64 0, i32 7
  store i8 0, i8* %238, align 1
  %239 = getelementptr inbounds %"struct.v8::internal::wasm::AsmJsParser::VarInfo", %"struct.v8::internal::wasm::AsmJsParser::VarInfo"* %233, i64 1
  %240 = icmp eq %"struct.v8::internal::wasm::AsmJsParser::VarInfo"* %239, %230
  br i1 %240, label %241, label %232

241:                                              ; preds = %232, %227
  %242 = getelementptr inbounds %"class.v8::internal::Vector.160", %"class.v8::internal::Vector.160"* %194, i64 0, i32 0
  %243 = load i64, i64* %195, align 8
  %244 = mul nuw i64 %243, 40
  %245 = icmp eq i64 %244, 0
  br i1 %245, label %250, label %246

246:                                              ; preds = %241
  %247 = bitcast %"class.v8::internal::Vector.160"* %194 to i8**
  %248 = load i8*, i8** %247, align 8
  %249 = inttoptr i64 %228 to i8*
  tail call void @llvm.memmove.p0i8.p0i8.i64(i8* align 8 %249, i8* align 8 %248, i64 %244, i1 false) #12
  br label %250

250:                                              ; preds = %246, %241
  store %"struct.v8::internal::wasm::AsmJsParser::VarInfo"* %229, %"struct.v8::internal::wasm::AsmJsParser::VarInfo"** %242, align 8
  store i64 %213, i64* %195, align 8
  br label %251

251:                                              ; preds = %207, %250
  %252 = phi %"struct.v8::internal::wasm::AsmJsParser::VarInfo"* [ %209, %207 ], [ %229, %250 ]
  %253 = getelementptr inbounds %"struct.v8::internal::wasm::AsmJsParser::VarInfo", %"struct.v8::internal::wasm::AsmJsParser::VarInfo"* %252, i64 %198, i32 5
  %254 = load i32, i32* %253, align 8
  %255 = icmp eq i32 %254, 4
  br i1 %255, label %263, label %256

256:                                              ; preds = %251
  %257 = getelementptr inbounds %"class.v8::internal::wasm::AsmJsParser", %"class.v8::internal::wasm::AsmJsParser"* %0, i64 0, i32 17
  store i8 1, i8* %257, align 4
  %258 = getelementptr inbounds %"class.v8::internal::wasm::AsmJsParser", %"class.v8::internal::wasm::AsmJsParser"* %0, i64 0, i32 18
  store i8* getelementptr inbounds ([42 x i8], [42 x i8]* @.str.25, i64 0, i64 0), i8** %258, align 8
  %259 = getelementptr inbounds %"class.v8::internal::wasm::AsmJsParser", %"class.v8::internal::wasm::AsmJsParser"* %0, i64 0, i32 1, i32 5
  %260 = load i64, i64* %259, align 8
  %261 = trunc i64 %260 to i32
  %262 = getelementptr inbounds %"class.v8::internal::wasm::AsmJsParser", %"class.v8::internal::wasm::AsmJsParser"* %0, i64 0, i32 19
  store i32 %261, i32* %262, align 8
  br label %272

263:                                              ; preds = %251
  %264 = getelementptr inbounds %"class.v8::internal::wasm::AsmJsParser", %"class.v8::internal::wasm::AsmJsParser"* %0, i64 0, i32 2
  %265 = load %"class.v8::internal::wasm::WasmModuleBuilder"*, %"class.v8::internal::wasm::WasmModuleBuilder"** %264, align 8
  %266 = load i8*, i8** @_ZN2v88internal5AsmJs19kSingleFunctionNameE, align 8
  %267 = tail call i64 @strlen(i8* %266) #15
  %268 = getelementptr inbounds %"struct.v8::internal::wasm::AsmJsParser::VarInfo", %"struct.v8::internal::wasm::AsmJsParser::VarInfo"* %252, i64 %198, i32 1
  %269 = load %"class.v8::internal::wasm::WasmFunctionBuilder"*, %"class.v8::internal::wasm::WasmFunctionBuilder"** %268, align 8
  %270 = getelementptr inbounds %"class.v8::internal::wasm::WasmFunctionBuilder", %"class.v8::internal::wasm::WasmFunctionBuilder"* %269, i64 0, i32 3
  %271 = load i32, i32* %270, align 4
  tail call void @_ZN2v88internal4wasm17WasmModuleBuilder9AddExportENS0_6VectorIKcEENS1_20ImportExportKindCodeEj(%"class.v8::internal::wasm::WasmModuleBuilder"* %265, i8* %266, i64 %267, i8 zeroext 0, i32 %271) #12
  br label %272

272:                                              ; preds = %159, %76, %96, %86, %183, %186, %176, %6, %263, %256
  ret void
}

declare i32 @_ZN2v88internal4wasm17WasmModuleBuilder9AddImportENS0_6VectorIKcEEPNS0_9SignatureINS1_9ValueTypeEEES5_(%"class.v8::internal::wasm::WasmModuleBuilder"*, i8*, i64, %"class.v8::internal::Signature"*, i8*, i64) local_unnamed_addr #1

declare %"class.v8::internal::wasm::WasmFunctionBuilder"* @_ZN2v88internal4wasm17WasmModuleBuilder11AddFunctionEPNS0_9SignatureINS1_9ValueTypeEEE(%"class.v8::internal::wasm::WasmModuleBuilder"*, %"class.v8::internal::Signature"*) local_unnamed_addr #1

declare void @_ZN2v88internal4wasm17WasmModuleBuilder17MarkStartFunctionEPNS1_19WasmFunctionBuilderE(%"class.v8::internal::wasm::WasmModuleBuilder"*, %"class.v8::internal::wasm::WasmFunctionBuilder"*) local_unnamed_addr #1

declare i32 @_ZN2v88internal4wasm17WasmModuleBuilder15AddGlobalImportENS0_6VectorIKcEENS1_9ValueTypeEbS5_(%"class.v8::internal::wasm::WasmModuleBuilder"*, i8*, i64, i32, i1 zeroext, %"class.v8::internal::Vector"* byval(%"class.v8::internal::Vector") align 8) local_unnamed_addr #1

declare void @_ZN2v88internal4wasm19WasmFunctionBuilder12EmitWithI32VENS1_10WasmOpcodeEi(%"class.v8::internal::wasm::WasmFunctionBuilder"*, i32, i32) local_unnamed_addr #1

declare void @_ZN2v88internal4wasm19WasmFunctionBuilder12SetSignatureEPNS0_9SignatureINS1_9ValueTypeEEE(%"class.v8::internal::wasm::WasmFunctionBuilder"*, %"class.v8::internal::Signature"*) local_unnamed_addr #1

; Function Attrs: nounwind ssp uwtable
define hidden void @_ZN2v88internal4wasm11AsmJsParser17ValidateModuleVarEb(%"class.v8::internal::wasm::AsmJsParser"*, i1 zeroext) local_unnamed_addr #0 align 2 {
  %3 = alloca %"class.v8::internal::wasm::WasmInitExpr", align 8
  %4 = alloca %"class.v8::internal::wasm::WasmInitExpr", align 8
  %5 = alloca %"class.v8::internal::wasm::WasmInitExpr", align 8
  %6 = alloca %"class.v8::internal::wasm::WasmInitExpr", align 8
  %7 = alloca %"class.v8::internal::wasm::WasmInitExpr", align 8
  %8 = alloca %"class.v8::internal::wasm::WasmInitExpr", align 8
  %9 = alloca %"class.v8::internal::wasm::WasmInitExpr", align 8
  %10 = alloca %"class.v8::internal::wasm::WasmInitExpr", align 8
  %11 = alloca %"class.v8::internal::wasm::WasmInitExpr", align 8
  %12 = alloca %"class.v8::internal::wasm::WasmInitExpr", align 8
  %13 = alloca [12 x i8], align 4
  %14 = alloca [12 x i8], align 4
  %15 = alloca [12 x i8], align 4
  %16 = getelementptr inbounds %"class.v8::internal::wasm::AsmJsParser", %"class.v8::internal::wasm::AsmJsParser"* %0, i64 0, i32 1
  %17 = getelementptr inbounds %"class.v8::internal::wasm::AsmJsParser", %"class.v8::internal::wasm::AsmJsParser"* %0, i64 0, i32 1, i32 1
  %18 = load i32, i32* %17, align 8
  %19 = icmp sgt i32 %18, 255
  br i1 %19, label %27, label %20

20:                                               ; preds = %2
  %21 = getelementptr inbounds %"class.v8::internal::wasm::AsmJsParser", %"class.v8::internal::wasm::AsmJsParser"* %0, i64 0, i32 17
  store i8 1, i8* %21, align 4
  %22 = getelementptr inbounds %"class.v8::internal::wasm::AsmJsParser", %"class.v8::internal::wasm::AsmJsParser"* %0, i64 0, i32 18
  store i8* getelementptr inbounds ([20 x i8], [20 x i8]* @.str.9, i64 0, i64 0), i8** %22, align 8
  %23 = getelementptr inbounds %"class.v8::internal::wasm::AsmJsParser", %"class.v8::internal::wasm::AsmJsParser"* %0, i64 0, i32 1, i32 5
  %24 = load i64, i64* %23, align 8
  %25 = trunc i64 %24 to i32
  %26 = getelementptr inbounds %"class.v8::internal::wasm::AsmJsParser", %"class.v8::internal::wasm::AsmJsParser"* %0, i64 0, i32 19
  store i32 %25, i32* %26, align 8
  br label %329

27:                                               ; preds = %2
  tail call void @_ZN2v88internal12AsmJsScanner4NextEv(%"class.v8::internal::AsmJsScanner"* %16) #12
  %28 = getelementptr inbounds %"class.v8::internal::wasm::AsmJsParser", %"class.v8::internal::wasm::AsmJsParser"* %0, i64 0, i32 7
  %29 = getelementptr inbounds %"class.v8::internal::wasm::AsmJsParser", %"class.v8::internal::wasm::AsmJsParser"* %0, i64 0, i32 7, i32 1
  %30 = load i64, i64* %29, align 8
  %31 = add nsw i32 %18, -256
  %32 = sext i32 %31 to i64
  %33 = getelementptr inbounds %"class.v8::internal::wasm::AsmJsParser", %"class.v8::internal::wasm::AsmJsParser"* %0, i64 0, i32 9
  %34 = load i64, i64* %33, align 8
  %35 = icmp ugt i64 %34, %32
  br i1 %35, label %38, label %36

36:                                               ; preds = %27
  %37 = add nuw nsw i64 %32, 1
  store i64 %37, i64* %33, align 8
  br label %38

38:                                               ; preds = %36, %27
  %39 = add nuw nsw i64 %32, 1
  %40 = icmp ugt i64 %30, %32
  br i1 %40, label %41, label %44

41:                                               ; preds = %38
  %42 = getelementptr inbounds %"class.v8::internal::Vector.160", %"class.v8::internal::Vector.160"* %28, i64 0, i32 0
  %43 = load %"struct.v8::internal::wasm::AsmJsParser::VarInfo"*, %"struct.v8::internal::wasm::AsmJsParser::VarInfo"** %42, align 8
  br label %85

44:                                               ; preds = %38
  %45 = shl i64 %30, 1
  %46 = icmp ult i64 %45, %39
  %47 = select i1 %46, i64 %39, i64 %45
  %48 = getelementptr inbounds %"class.v8::internal::wasm::AsmJsParser", %"class.v8::internal::wasm::AsmJsParser"* %0, i64 0, i32 0
  %49 = load %"class.v8::internal::Zone"*, %"class.v8::internal::Zone"** %48, align 8
  %50 = mul i64 %47, 40
  %51 = getelementptr inbounds %"class.v8::internal::Zone", %"class.v8::internal::Zone"* %49, i64 0, i32 2
  %52 = load i64, i64* %51, align 8
  %53 = getelementptr inbounds %"class.v8::internal::Zone", %"class.v8::internal::Zone"* %49, i64 0, i32 3
  %54 = load i64, i64* %53, align 8
  %55 = sub i64 %54, %52
  %56 = icmp ugt i64 %50, %55
  br i1 %56, label %57, label %59, !prof !2

57:                                               ; preds = %44
  %58 = tail call i64 @_ZN2v88internal4Zone9NewExpandEm(%"class.v8::internal::Zone"* %49, i64 %50) #12
  br label %61

59:                                               ; preds = %44
  %60 = add i64 %52, %50
  store i64 %60, i64* %51, align 8
  br label %61

61:                                               ; preds = %59, %57
  %62 = phi i64 [ %58, %57 ], [ %52, %59 ]
  %63 = inttoptr i64 %62 to %"struct.v8::internal::wasm::AsmJsParser::VarInfo"*
  %64 = getelementptr inbounds %"struct.v8::internal::wasm::AsmJsParser::VarInfo", %"struct.v8::internal::wasm::AsmJsParser::VarInfo"* %63, i64 %47
  %65 = icmp eq i64 %47, 0
  br i1 %65, label %75, label %66

66:                                               ; preds = %61, %66
  %67 = phi %"struct.v8::internal::wasm::AsmJsParser::VarInfo"* [ %73, %66 ], [ %63, %61 ]
  %68 = getelementptr inbounds %"struct.v8::internal::wasm::AsmJsParser::VarInfo", %"struct.v8::internal::wasm::AsmJsParser::VarInfo"* %67, i64 0, i32 0
  store %"class.v8::internal::wasm::AsmType"* inttoptr (i64 2147483649 to %"class.v8::internal::wasm::AsmType"*), %"class.v8::internal::wasm::AsmType"** %68, align 8
  %69 = getelementptr inbounds %"struct.v8::internal::wasm::AsmJsParser::VarInfo", %"struct.v8::internal::wasm::AsmJsParser::VarInfo"* %67, i64 0, i32 1
  %70 = getelementptr inbounds %"struct.v8::internal::wasm::AsmJsParser::VarInfo", %"struct.v8::internal::wasm::AsmJsParser::VarInfo"* %67, i64 0, i32 6
  %71 = bitcast %"class.v8::internal::wasm::WasmFunctionBuilder"** %69 to i8*
  tail call void @llvm.memset.p0i8.i64(i8* align 8 %71, i8 0, i64 28, i1 false) #12
  store i8 1, i8* %70, align 4
  %72 = getelementptr inbounds %"struct.v8::internal::wasm::AsmJsParser::VarInfo", %"struct.v8::internal::wasm::AsmJsParser::VarInfo"* %67, i64 0, i32 7
  store i8 0, i8* %72, align 1
  %73 = getelementptr inbounds %"struct.v8::internal::wasm::AsmJsParser::VarInfo", %"struct.v8::internal::wasm::AsmJsParser::VarInfo"* %67, i64 1
  %74 = icmp eq %"struct.v8::internal::wasm::AsmJsParser::VarInfo"* %73, %64
  br i1 %74, label %75, label %66

75:                                               ; preds = %66, %61
  %76 = getelementptr inbounds %"class.v8::internal::Vector.160", %"class.v8::internal::Vector.160"* %28, i64 0, i32 0
  %77 = load i64, i64* %29, align 8
  %78 = mul nuw i64 %77, 40
  %79 = icmp eq i64 %78, 0
  br i1 %79, label %84, label %80

80:                                               ; preds = %75
  %81 = bitcast %"class.v8::internal::Vector.160"* %28 to i8**
  %82 = load i8*, i8** %81, align 8
  %83 = inttoptr i64 %62 to i8*
  tail call void @llvm.memmove.p0i8.p0i8.i64(i8* align 8 %83, i8* align 8 %82, i64 %78, i1 false) #12
  br label %84

84:                                               ; preds = %80, %75
  store %"struct.v8::internal::wasm::AsmJsParser::VarInfo"* %63, %"struct.v8::internal::wasm::AsmJsParser::VarInfo"** %76, align 8
  store i64 %47, i64* %29, align 8
  br label %85

85:                                               ; preds = %41, %84
  %86 = phi %"struct.v8::internal::wasm::AsmJsParser::VarInfo"* [ %43, %41 ], [ %63, %84 ]
  %87 = getelementptr inbounds %"struct.v8::internal::wasm::AsmJsParser::VarInfo", %"struct.v8::internal::wasm::AsmJsParser::VarInfo"* %86, i64 %32
  %88 = getelementptr inbounds %"struct.v8::internal::wasm::AsmJsParser::VarInfo", %"struct.v8::internal::wasm::AsmJsParser::VarInfo"* %86, i64 %32, i32 5
  %89 = load i32, i32* %88, align 8
  %90 = icmp eq i32 %89, 0
  br i1 %90, label %98, label %91

91:                                               ; preds = %85
  %92 = getelementptr inbounds %"class.v8::internal::wasm::AsmJsParser", %"class.v8::internal::wasm::AsmJsParser"* %0, i64 0, i32 17
  store i8 1, i8* %92, align 4
  %93 = getelementptr inbounds %"class.v8::internal::wasm::AsmJsParser", %"class.v8::internal::wasm::AsmJsParser"* %0, i64 0, i32 18
  store i8* getelementptr inbounds ([25 x i8], [25 x i8]* @.str.10, i64 0, i64 0), i8** %93, align 8
  %94 = getelementptr inbounds %"class.v8::internal::wasm::AsmJsParser", %"class.v8::internal::wasm::AsmJsParser"* %0, i64 0, i32 1, i32 5
  %95 = load i64, i64* %94, align 8
  %96 = trunc i64 %95 to i32
  %97 = getelementptr inbounds %"class.v8::internal::wasm::AsmJsParser", %"class.v8::internal::wasm::AsmJsParser"* %0, i64 0, i32 19
  store i32 %96, i32* %97, align 8
  br label %329

98:                                               ; preds = %85
  %99 = load i32, i32* %17, align 8
  %100 = icmp eq i32 %99, 61
  br i1 %100, label %108, label %101

101:                                              ; preds = %98
  %102 = getelementptr inbounds %"class.v8::internal::wasm::AsmJsParser", %"class.v8::internal::wasm::AsmJsParser"* %0, i64 0, i32 17
  store i8 1, i8* %102, align 4
  %103 = getelementptr inbounds %"class.v8::internal::wasm::AsmJsParser", %"class.v8::internal::wasm::AsmJsParser"* %0, i64 0, i32 18
  store i8* getelementptr inbounds ([17 x i8], [17 x i8]* @.str.3, i64 0, i64 0), i8** %103, align 8
  %104 = getelementptr inbounds %"class.v8::internal::wasm::AsmJsParser", %"class.v8::internal::wasm::AsmJsParser"* %0, i64 0, i32 1, i32 5
  %105 = load i64, i64* %104, align 8
  %106 = trunc i64 %105 to i32
  %107 = getelementptr inbounds %"class.v8::internal::wasm::AsmJsParser", %"class.v8::internal::wasm::AsmJsParser"* %0, i64 0, i32 19
  store i32 %106, i32* %107, align 8
  br label %329

108:                                              ; preds = %98
  tail call void @_ZN2v88internal12AsmJsScanner4NextEv(%"class.v8::internal::AsmJsScanner"* %16) #12
  %109 = load i32, i32* %17, align 8
  switch i32 %109, label %261 [
    i32 -4, label %110
    i32 -3, label %131
    i32 45, label %163
    i32 -9949, label %248
  ]

110:                                              ; preds = %108
  %111 = getelementptr inbounds %"class.v8::internal::wasm::AsmJsParser", %"class.v8::internal::wasm::AsmJsParser"* %0, i64 0, i32 1, i32 18
  %112 = bitcast double* %111 to i64*
  %113 = load i64, i64* %112, align 8
  tail call void @_ZN2v88internal12AsmJsScanner4NextEv(%"class.v8::internal::AsmJsScanner"* %16) #12
  %114 = bitcast %"class.v8::internal::wasm::WasmInitExpr"* %10 to i8*
  call void @llvm.lifetime.start.p0i8(i64 32, i8* nonnull %114)
  %115 = bitcast %"class.v8::internal::wasm::WasmInitExpr"* %9 to i8*
  call void @llvm.lifetime.start.p0i8(i64 32, i8* nonnull %115)
  %116 = getelementptr inbounds %"class.v8::internal::wasm::WasmInitExpr", %"class.v8::internal::wasm::WasmInitExpr"* %10, i64 0, i32 0, i32 0
  store i64 %113, i64* %116, align 8
  %117 = getelementptr inbounds %"class.v8::internal::wasm::WasmInitExpr", %"class.v8::internal::wasm::WasmInitExpr"* %10, i64 0, i32 1
  store i32 5, i32* %117, align 8
  %118 = getelementptr inbounds %"class.v8::internal::wasm::WasmInitExpr", %"class.v8::internal::wasm::WasmInitExpr"* %10, i64 0, i32 2
  %119 = bitcast %"class.std::__1::unique_ptr.98"* %118 to i64*
  store i64 0, i64* %119, align 8
  %120 = zext i1 %1 to i8
  store i32 2, i32* %88, align 8
  %121 = getelementptr inbounds %"struct.v8::internal::wasm::AsmJsParser::VarInfo", %"struct.v8::internal::wasm::AsmJsParser::VarInfo"* %87, i64 0, i32 0
  store %"class.v8::internal::wasm::AsmType"* inttoptr (i64 237 to %"class.v8::internal::wasm::AsmType"*), %"class.v8::internal::wasm::AsmType"** %121, align 8
  %122 = getelementptr inbounds %"class.v8::internal::wasm::AsmJsParser", %"class.v8::internal::wasm::AsmJsParser"* %0, i64 0, i32 2
  %123 = load %"class.v8::internal::wasm::WasmModuleBuilder"*, %"class.v8::internal::wasm::WasmModuleBuilder"** %122, align 8
  call void @llvm.memcpy.p0i8.p0i8.i64(i8* nonnull align 8 %115, i8* nonnull align 8 %114, i64 20, i1 false) #12
  %124 = getelementptr inbounds %"class.v8::internal::wasm::WasmInitExpr", %"class.v8::internal::wasm::WasmInitExpr"* %9, i64 0, i32 2
  %125 = getelementptr inbounds %"class.std::__1::unique_ptr.98", %"class.std::__1::unique_ptr.98"* %118, i64 0, i32 0, i32 0, i32 0
  %126 = load i64, i64* %119, align 8
  store %"class.v8::internal::wasm::WasmInitExpr"* null, %"class.v8::internal::wasm::WasmInitExpr"** %125, align 8
  %127 = bitcast %"class.std::__1::unique_ptr.98"* %124 to i64*
  store i64 %126, i64* %127, align 8
  %128 = tail call i32 @_ZN2v88internal4wasm17WasmModuleBuilder9AddGlobalENS1_9ValueTypeEbNS1_12WasmInitExprE(%"class.v8::internal::wasm::WasmModuleBuilder"* %123, i32 4, i1 zeroext true, %"class.v8::internal::wasm::WasmInitExpr"* nonnull byval(%"class.v8::internal::wasm::WasmInitExpr") align 8 %9) #12
  %129 = getelementptr inbounds %"struct.v8::internal::wasm::AsmJsParser::VarInfo", %"struct.v8::internal::wasm::AsmJsParser::VarInfo"* %86, i64 %32, i32 4
  store i32 %128, i32* %129, align 4
  %130 = getelementptr inbounds %"struct.v8::internal::wasm::AsmJsParser::VarInfo", %"struct.v8::internal::wasm::AsmJsParser::VarInfo"* %86, i64 %32, i32 6
  store i8 %120, i8* %130, align 4
  call void @_ZN2v88internal4wasm12WasmInitExprD2Ev(%"class.v8::internal::wasm::WasmInitExpr"* nonnull %10) #12
  call void @llvm.lifetime.end.p0i8(i64 32, i8* nonnull %114)
  call void @llvm.lifetime.end.p0i8(i64 32, i8* nonnull %115)
  br label %329

131:                                              ; preds = %108
  %132 = getelementptr inbounds %"class.v8::internal::wasm::AsmJsParser", %"class.v8::internal::wasm::AsmJsParser"* %0, i64 0, i32 1, i32 19
  %133 = load i32, i32* %132, align 8
  tail call void @_ZN2v88internal12AsmJsScanner4NextEv(%"class.v8::internal::AsmJsScanner"* %16) #12
  %134 = icmp slt i32 %133, 0
  br i1 %134, label %135, label %142

135:                                              ; preds = %131
  %136 = getelementptr inbounds %"class.v8::internal::wasm::AsmJsParser", %"class.v8::internal::wasm::AsmJsParser"* %0, i64 0, i32 17
  store i8 1, i8* %136, align 4
  %137 = getelementptr inbounds %"class.v8::internal::wasm::AsmJsParser", %"class.v8::internal::wasm::AsmJsParser"* %0, i64 0, i32 18
  store i8* getelementptr inbounds ([29 x i8], [29 x i8]* @.str.11, i64 0, i64 0), i8** %137, align 8
  %138 = getelementptr inbounds %"class.v8::internal::wasm::AsmJsParser", %"class.v8::internal::wasm::AsmJsParser"* %0, i64 0, i32 1, i32 5
  %139 = load i64, i64* %138, align 8
  %140 = trunc i64 %139 to i32
  %141 = getelementptr inbounds %"class.v8::internal::wasm::AsmJsParser", %"class.v8::internal::wasm::AsmJsParser"* %0, i64 0, i32 19
  store i32 %140, i32* %141, align 8
  br label %329

142:                                              ; preds = %131
  %143 = select i1 %1, %"class.v8::internal::wasm::AsmType"* inttoptr (i64 769 to %"class.v8::internal::wasm::AsmType"*), %"class.v8::internal::wasm::AsmType"* inttoptr (i64 1825 to %"class.v8::internal::wasm::AsmType"*)
  %144 = bitcast %"class.v8::internal::wasm::WasmInitExpr"* %6 to i8*
  call void @llvm.lifetime.start.p0i8(i64 32, i8* nonnull %144)
  %145 = bitcast %"class.v8::internal::wasm::WasmInitExpr"* %5 to i8*
  call void @llvm.lifetime.start.p0i8(i64 32, i8* nonnull %145)
  %146 = bitcast %"class.v8::internal::wasm::WasmInitExpr"* %6 to i32*
  store i32 %133, i32* %146, align 8
  %147 = getelementptr inbounds i8, i8* %144, i64 4
  %148 = getelementptr inbounds [12 x i8], [12 x i8]* %13, i64 0, i64 0
  call void @llvm.memcpy.p0i8.p0i8.i64(i8* align 4 %147, i8* nonnull align 4 %148, i64 12, i1 false)
  %149 = getelementptr inbounds %"class.v8::internal::wasm::WasmInitExpr", %"class.v8::internal::wasm::WasmInitExpr"* %6, i64 0, i32 1
  store i32 2, i32* %149, align 8
  %150 = getelementptr inbounds %"class.v8::internal::wasm::WasmInitExpr", %"class.v8::internal::wasm::WasmInitExpr"* %6, i64 0, i32 2
  %151 = bitcast %"class.std::__1::unique_ptr.98"* %150 to i64*
  store i64 0, i64* %151, align 8
  %152 = zext i1 %1 to i8
  store i32 2, i32* %88, align 8
  %153 = getelementptr inbounds %"struct.v8::internal::wasm::AsmJsParser::VarInfo", %"struct.v8::internal::wasm::AsmJsParser::VarInfo"* %87, i64 0, i32 0
  store %"class.v8::internal::wasm::AsmType"* %143, %"class.v8::internal::wasm::AsmType"** %153, align 8
  %154 = getelementptr inbounds %"class.v8::internal::wasm::AsmJsParser", %"class.v8::internal::wasm::AsmJsParser"* %0, i64 0, i32 2
  %155 = load %"class.v8::internal::wasm::WasmModuleBuilder"*, %"class.v8::internal::wasm::WasmModuleBuilder"** %154, align 8
  call void @llvm.memcpy.p0i8.p0i8.i64(i8* nonnull align 8 %145, i8* nonnull align 8 %144, i64 20, i1 false) #12
  %156 = getelementptr inbounds %"class.v8::internal::wasm::WasmInitExpr", %"class.v8::internal::wasm::WasmInitExpr"* %5, i64 0, i32 2
  %157 = getelementptr inbounds %"class.std::__1::unique_ptr.98", %"class.std::__1::unique_ptr.98"* %150, i64 0, i32 0, i32 0, i32 0
  %158 = load i64, i64* %151, align 8
  store %"class.v8::internal::wasm::WasmInitExpr"* null, %"class.v8::internal::wasm::WasmInitExpr"** %157, align 8
  %159 = bitcast %"class.std::__1::unique_ptr.98"* %156 to i64*
  store i64 %158, i64* %159, align 8
  %160 = tail call i32 @_ZN2v88internal4wasm17WasmModuleBuilder9AddGlobalENS1_9ValueTypeEbNS1_12WasmInitExprE(%"class.v8::internal::wasm::WasmModuleBuilder"* %155, i32 1, i1 zeroext true, %"class.v8::internal::wasm::WasmInitExpr"* nonnull byval(%"class.v8::internal::wasm::WasmInitExpr") align 8 %5) #12
  %161 = getelementptr inbounds %"struct.v8::internal::wasm::AsmJsParser::VarInfo", %"struct.v8::internal::wasm::AsmJsParser::VarInfo"* %86, i64 %32, i32 4
  store i32 %160, i32* %161, align 4
  %162 = getelementptr inbounds %"struct.v8::internal::wasm::AsmJsParser::VarInfo", %"struct.v8::internal::wasm::AsmJsParser::VarInfo"* %86, i64 %32, i32 6
  store i8 %152, i8* %162, align 4
  call void @_ZN2v88internal4wasm12WasmInitExprD2Ev(%"class.v8::internal::wasm::WasmInitExpr"* nonnull %6) #12
  call void @llvm.lifetime.end.p0i8(i64 32, i8* nonnull %144)
  call void @llvm.lifetime.end.p0i8(i64 32, i8* nonnull %145)
  br label %329

163:                                              ; preds = %108
  tail call void @_ZN2v88internal12AsmJsScanner4NextEv(%"class.v8::internal::AsmJsScanner"* %16) #12
  %164 = load i32, i32* %17, align 8
  switch i32 %164, label %241 [
    i32 -4, label %165
    i32 -3, label %186
  ]

165:                                              ; preds = %163
  %166 = getelementptr inbounds %"class.v8::internal::wasm::AsmJsParser", %"class.v8::internal::wasm::AsmJsParser"* %0, i64 0, i32 1, i32 18
  %167 = load double, double* %166, align 8
  tail call void @_ZN2v88internal12AsmJsScanner4NextEv(%"class.v8::internal::AsmJsScanner"* %16) #12
  %168 = fsub double -0.000000e+00, %167
  %169 = bitcast %"class.v8::internal::wasm::WasmInitExpr"* %4 to i8*
  call void @llvm.lifetime.start.p0i8(i64 32, i8* nonnull %169)
  %170 = bitcast %"class.v8::internal::wasm::WasmInitExpr"* %3 to i8*
  call void @llvm.lifetime.start.p0i8(i64 32, i8* nonnull %170)
  %171 = bitcast %"class.v8::internal::wasm::WasmInitExpr"* %4 to double*
  store double %168, double* %171, align 8
  %172 = getelementptr inbounds %"class.v8::internal::wasm::WasmInitExpr", %"class.v8::internal::wasm::WasmInitExpr"* %4, i64 0, i32 1
  store i32 5, i32* %172, align 8
  %173 = getelementptr inbounds %"class.v8::internal::wasm::WasmInitExpr", %"class.v8::internal::wasm::WasmInitExpr"* %4, i64 0, i32 2
  %174 = bitcast %"class.std::__1::unique_ptr.98"* %173 to i64*
  store i64 0, i64* %174, align 8
  %175 = zext i1 %1 to i8
  store i32 2, i32* %88, align 8
  %176 = getelementptr inbounds %"struct.v8::internal::wasm::AsmJsParser::VarInfo", %"struct.v8::internal::wasm::AsmJsParser::VarInfo"* %87, i64 0, i32 0
  store %"class.v8::internal::wasm::AsmType"* inttoptr (i64 237 to %"class.v8::internal::wasm::AsmType"*), %"class.v8::internal::wasm::AsmType"** %176, align 8
  %177 = getelementptr inbounds %"class.v8::internal::wasm::AsmJsParser", %"class.v8::internal::wasm::AsmJsParser"* %0, i64 0, i32 2
  %178 = load %"class.v8::internal::wasm::WasmModuleBuilder"*, %"class.v8::internal::wasm::WasmModuleBuilder"** %177, align 8
  call void @llvm.memcpy.p0i8.p0i8.i64(i8* nonnull align 8 %170, i8* nonnull align 8 %169, i64 20, i1 false) #12
  %179 = getelementptr inbounds %"class.v8::internal::wasm::WasmInitExpr", %"class.v8::internal::wasm::WasmInitExpr"* %3, i64 0, i32 2
  %180 = getelementptr inbounds %"class.std::__1::unique_ptr.98", %"class.std::__1::unique_ptr.98"* %173, i64 0, i32 0, i32 0, i32 0
  %181 = load i64, i64* %174, align 8
  store %"class.v8::internal::wasm::WasmInitExpr"* null, %"class.v8::internal::wasm::WasmInitExpr"** %180, align 8
  %182 = bitcast %"class.std::__1::unique_ptr.98"* %179 to i64*
  store i64 %181, i64* %182, align 8
  %183 = tail call i32 @_ZN2v88internal4wasm17WasmModuleBuilder9AddGlobalENS1_9ValueTypeEbNS1_12WasmInitExprE(%"class.v8::internal::wasm::WasmModuleBuilder"* %178, i32 4, i1 zeroext true, %"class.v8::internal::wasm::WasmInitExpr"* nonnull byval(%"class.v8::internal::wasm::WasmInitExpr") align 8 %3) #12
  %184 = getelementptr inbounds %"struct.v8::internal::wasm::AsmJsParser::VarInfo", %"struct.v8::internal::wasm::AsmJsParser::VarInfo"* %86, i64 %32, i32 4
  store i32 %183, i32* %184, align 4
  %185 = getelementptr inbounds %"struct.v8::internal::wasm::AsmJsParser::VarInfo", %"struct.v8::internal::wasm::AsmJsParser::VarInfo"* %86, i64 %32, i32 6
  store i8 %175, i8* %185, align 4
  call void @_ZN2v88internal4wasm12WasmInitExprD2Ev(%"class.v8::internal::wasm::WasmInitExpr"* nonnull %4) #12
  call void @llvm.lifetime.end.p0i8(i64 32, i8* nonnull %169)
  call void @llvm.lifetime.end.p0i8(i64 32, i8* nonnull %170)
  br label %329

186:                                              ; preds = %163
  %187 = getelementptr inbounds %"class.v8::internal::wasm::AsmJsParser", %"class.v8::internal::wasm::AsmJsParser"* %0, i64 0, i32 1, i32 19
  %188 = load i32, i32* %187, align 8
  tail call void @_ZN2v88internal12AsmJsScanner4NextEv(%"class.v8::internal::AsmJsScanner"* %16) #12
  %189 = icmp slt i32 %188, 0
  br i1 %189, label %190, label %197

190:                                              ; preds = %186
  %191 = getelementptr inbounds %"class.v8::internal::wasm::AsmJsParser", %"class.v8::internal::wasm::AsmJsParser"* %0, i64 0, i32 17
  store i8 1, i8* %191, align 4
  %192 = getelementptr inbounds %"class.v8::internal::wasm::AsmJsParser", %"class.v8::internal::wasm::AsmJsParser"* %0, i64 0, i32 18
  store i8* getelementptr inbounds ([29 x i8], [29 x i8]* @.str.11, i64 0, i64 0), i8** %192, align 8
  %193 = getelementptr inbounds %"class.v8::internal::wasm::AsmJsParser", %"class.v8::internal::wasm::AsmJsParser"* %0, i64 0, i32 1, i32 5
  %194 = load i64, i64* %193, align 8
  %195 = trunc i64 %194 to i32
  %196 = getelementptr inbounds %"class.v8::internal::wasm::AsmJsParser", %"class.v8::internal::wasm::AsmJsParser"* %0, i64 0, i32 19
  store i32 %195, i32* %196, align 8
  br label %329

197:                                              ; preds = %186
  %198 = icmp eq i32 %188, 0
  br i1 %198, label %199, label %219

199:                                              ; preds = %197
  %200 = bitcast %"class.v8::internal::wasm::WasmInitExpr"* %8 to i8*
  call void @llvm.lifetime.start.p0i8(i64 32, i8* nonnull %200)
  %201 = bitcast %"class.v8::internal::wasm::WasmInitExpr"* %7 to i8*
  call void @llvm.lifetime.start.p0i8(i64 32, i8* nonnull %201)
  %202 = bitcast %"class.v8::internal::wasm::WasmInitExpr"* %8 to float*
  store float -0.000000e+00, float* %202, align 8
  %203 = getelementptr inbounds i8, i8* %200, i64 4
  %204 = getelementptr inbounds [12 x i8], [12 x i8]* %14, i64 0, i64 0
  call void @llvm.memcpy.p0i8.p0i8.i64(i8* align 4 %203, i8* nonnull align 4 %204, i64 12, i1 false)
  %205 = getelementptr inbounds %"class.v8::internal::wasm::WasmInitExpr", %"class.v8::internal::wasm::WasmInitExpr"* %8, i64 0, i32 1
  store i32 4, i32* %205, align 8
  %206 = getelementptr inbounds %"class.v8::internal::wasm::WasmInitExpr", %"class.v8::internal::wasm::WasmInitExpr"* %8, i64 0, i32 2
  %207 = bitcast %"class.std::__1::unique_ptr.98"* %206 to i64*
  store i64 0, i64* %207, align 8
  %208 = zext i1 %1 to i8
  store i32 2, i32* %88, align 8
  %209 = getelementptr inbounds %"struct.v8::internal::wasm::AsmJsParser::VarInfo", %"struct.v8::internal::wasm::AsmJsParser::VarInfo"* %87, i64 0, i32 0
  store %"class.v8::internal::wasm::AsmType"* inttoptr (i64 57357 to %"class.v8::internal::wasm::AsmType"*), %"class.v8::internal::wasm::AsmType"** %209, align 8
  %210 = getelementptr inbounds %"class.v8::internal::wasm::AsmJsParser", %"class.v8::internal::wasm::AsmJsParser"* %0, i64 0, i32 2
  %211 = load %"class.v8::internal::wasm::WasmModuleBuilder"*, %"class.v8::internal::wasm::WasmModuleBuilder"** %210, align 8
  call void @llvm.memcpy.p0i8.p0i8.i64(i8* nonnull align 8 %201, i8* nonnull align 8 %200, i64 20, i1 false) #12
  %212 = getelementptr inbounds %"class.v8::internal::wasm::WasmInitExpr", %"class.v8::internal::wasm::WasmInitExpr"* %7, i64 0, i32 2
  %213 = getelementptr inbounds %"class.std::__1::unique_ptr.98", %"class.std::__1::unique_ptr.98"* %206, i64 0, i32 0, i32 0, i32 0
  %214 = load i64, i64* %207, align 8
  store %"class.v8::internal::wasm::WasmInitExpr"* null, %"class.v8::internal::wasm::WasmInitExpr"** %213, align 8
  %215 = bitcast %"class.std::__1::unique_ptr.98"* %212 to i64*
  store i64 %214, i64* %215, align 8
  %216 = tail call i32 @_ZN2v88internal4wasm17WasmModuleBuilder9AddGlobalENS1_9ValueTypeEbNS1_12WasmInitExprE(%"class.v8::internal::wasm::WasmModuleBuilder"* %211, i32 3, i1 zeroext true, %"class.v8::internal::wasm::WasmInitExpr"* nonnull byval(%"class.v8::internal::wasm::WasmInitExpr") align 8 %7) #12
  %217 = getelementptr inbounds %"struct.v8::internal::wasm::AsmJsParser::VarInfo", %"struct.v8::internal::wasm::AsmJsParser::VarInfo"* %86, i64 %32, i32 4
  store i32 %216, i32* %217, align 4
  %218 = getelementptr inbounds %"struct.v8::internal::wasm::AsmJsParser::VarInfo", %"struct.v8::internal::wasm::AsmJsParser::VarInfo"* %86, i64 %32, i32 6
  store i8 %208, i8* %218, align 4
  call void @_ZN2v88internal4wasm12WasmInitExprD2Ev(%"class.v8::internal::wasm::WasmInitExpr"* nonnull %8) #12
  call void @llvm.lifetime.end.p0i8(i64 32, i8* nonnull %200)
  call void @llvm.lifetime.end.p0i8(i64 32, i8* nonnull %201)
  br label %329

219:                                              ; preds = %197
  %220 = select i1 %1, %"class.v8::internal::wasm::AsmType"* inttoptr (i64 769 to %"class.v8::internal::wasm::AsmType"*), %"class.v8::internal::wasm::AsmType"* inttoptr (i64 1825 to %"class.v8::internal::wasm::AsmType"*)
  %221 = sub nsw i32 0, %188
  %222 = bitcast %"class.v8::internal::wasm::WasmInitExpr"* %12 to i8*
  call void @llvm.lifetime.start.p0i8(i64 32, i8* nonnull %222)
  %223 = bitcast %"class.v8::internal::wasm::WasmInitExpr"* %11 to i8*
  call void @llvm.lifetime.start.p0i8(i64 32, i8* nonnull %223)
  %224 = bitcast %"class.v8::internal::wasm::WasmInitExpr"* %12 to i32*
  store i32 %221, i32* %224, align 8
  %225 = getelementptr inbounds i8, i8* %222, i64 4
  %226 = getelementptr inbounds [12 x i8], [12 x i8]* %15, i64 0, i64 0
  call void @llvm.memcpy.p0i8.p0i8.i64(i8* align 4 %225, i8* nonnull align 4 %226, i64 12, i1 false)
  %227 = getelementptr inbounds %"class.v8::internal::wasm::WasmInitExpr", %"class.v8::internal::wasm::WasmInitExpr"* %12, i64 0, i32 1
  store i32 2, i32* %227, align 8
  %228 = getelementptr inbounds %"class.v8::internal::wasm::WasmInitExpr", %"class.v8::internal::wasm::WasmInitExpr"* %12, i64 0, i32 2
  %229 = bitcast %"class.std::__1::unique_ptr.98"* %228 to i64*
  store i64 0, i64* %229, align 8
  %230 = zext i1 %1 to i8
  store i32 2, i32* %88, align 8
  %231 = getelementptr inbounds %"struct.v8::internal::wasm::AsmJsParser::VarInfo", %"struct.v8::internal::wasm::AsmJsParser::VarInfo"* %87, i64 0, i32 0
  store %"class.v8::internal::wasm::AsmType"* %220, %"class.v8::internal::wasm::AsmType"** %231, align 8
  %232 = getelementptr inbounds %"class.v8::internal::wasm::AsmJsParser", %"class.v8::internal::wasm::AsmJsParser"* %0, i64 0, i32 2
  %233 = load %"class.v8::internal::wasm::WasmModuleBuilder"*, %"class.v8::internal::wasm::WasmModuleBuilder"** %232, align 8
  call void @llvm.memcpy.p0i8.p0i8.i64(i8* nonnull align 8 %223, i8* nonnull align 8 %222, i64 20, i1 false) #12
  %234 = getelementptr inbounds %"class.v8::internal::wasm::WasmInitExpr", %"class.v8::internal::wasm::WasmInitExpr"* %11, i64 0, i32 2
  %235 = getelementptr inbounds %"class.std::__1::unique_ptr.98", %"class.std::__1::unique_ptr.98"* %228, i64 0, i32 0, i32 0, i32 0
  %236 = load i64, i64* %229, align 8
  store %"class.v8::internal::wasm::WasmInitExpr"* null, %"class.v8::internal::wasm::WasmInitExpr"** %235, align 8
  %237 = bitcast %"class.std::__1::unique_ptr.98"* %234 to i64*
  store i64 %236, i64* %237, align 8
  %238 = tail call i32 @_ZN2v88internal4wasm17WasmModuleBuilder9AddGlobalENS1_9ValueTypeEbNS1_12WasmInitExprE(%"class.v8::internal::wasm::WasmModuleBuilder"* %233, i32 1, i1 zeroext true, %"class.v8::internal::wasm::WasmInitExpr"* nonnull byval(%"class.v8::internal::wasm::WasmInitExpr") align 8 %11) #12
  %239 = getelementptr inbounds %"struct.v8::internal::wasm::AsmJsParser::VarInfo", %"struct.v8::internal::wasm::AsmJsParser::VarInfo"* %86, i64 %32, i32 4
  store i32 %238, i32* %239, align 4
  %240 = getelementptr inbounds %"struct.v8::internal::wasm::AsmJsParser::VarInfo", %"struct.v8::internal::wasm::AsmJsParser::VarInfo"* %86, i64 %32, i32 6
  store i8 %230, i8* %240, align 4
  call void @_ZN2v88internal4wasm12WasmInitExprD2Ev(%"class.v8::internal::wasm::WasmInitExpr"* nonnull %12) #12
  call void @llvm.lifetime.end.p0i8(i64 32, i8* nonnull %222)
  call void @llvm.lifetime.end.p0i8(i64 32, i8* nonnull %223)
  br label %329

241:                                              ; preds = %163
  %242 = getelementptr inbounds %"class.v8::internal::wasm::AsmJsParser", %"class.v8::internal::wasm::AsmJsParser"* %0, i64 0, i32 17
  store i8 1, i8* %242, align 4
  %243 = getelementptr inbounds %"class.v8::internal::wasm::AsmJsParser", %"class.v8::internal::wasm::AsmJsParser"* %0, i64 0, i32 18
  store i8* getelementptr inbounds ([25 x i8], [25 x i8]* @.str.12, i64 0, i64 0), i8** %243, align 8
  %244 = getelementptr inbounds %"class.v8::internal::wasm::AsmJsParser", %"class.v8::internal::wasm::AsmJsParser"* %0, i64 0, i32 1, i32 5
  %245 = load i64, i64* %244, align 8
  %246 = trunc i64 %245 to i32
  %247 = getelementptr inbounds %"class.v8::internal::wasm::AsmJsParser", %"class.v8::internal::wasm::AsmJsParser"* %0, i64 0, i32 19
  store i32 %246, i32* %247, align 8
  br label %329

248:                                              ; preds = %108
  tail call void @_ZN2v88internal12AsmJsScanner4NextEv(%"class.v8::internal::AsmJsScanner"* %16) #12
  %249 = tail call i64 @_ZN2v88internal23GetCurrentStackPositionEv() #12
  %250 = getelementptr inbounds %"class.v8::internal::wasm::AsmJsParser", %"class.v8::internal::wasm::AsmJsParser"* %0, i64 0, i32 5
  %251 = load i64, i64* %250, align 8
  %252 = icmp ult i64 %249, %251
  br i1 %252, label %253, label %260

253:                                              ; preds = %248
  %254 = getelementptr inbounds %"class.v8::internal::wasm::AsmJsParser", %"class.v8::internal::wasm::AsmJsParser"* %0, i64 0, i32 17
  store i8 1, i8* %254, align 4
  %255 = getelementptr inbounds %"class.v8::internal::wasm::AsmJsParser", %"class.v8::internal::wasm::AsmJsParser"* %0, i64 0, i32 18
  store i8* getelementptr inbounds ([44 x i8], [44 x i8]* @.str.2, i64 0, i64 0), i8** %255, align 8
  %256 = getelementptr inbounds %"class.v8::internal::wasm::AsmJsParser", %"class.v8::internal::wasm::AsmJsParser"* %0, i64 0, i32 1, i32 5
  %257 = load i64, i64* %256, align 8
  %258 = trunc i64 %257 to i32
  %259 = getelementptr inbounds %"class.v8::internal::wasm::AsmJsParser", %"class.v8::internal::wasm::AsmJsParser"* %0, i64 0, i32 19
  store i32 %258, i32* %259, align 8
  br label %329

260:                                              ; preds = %248
  tail call void @_ZN2v88internal4wasm11AsmJsParser26ValidateModuleVarNewStdlibEPNS2_7VarInfoE(%"class.v8::internal::wasm::AsmJsParser"* %0, %"struct.v8::internal::wasm::AsmJsParser::VarInfo"* %87)
  br label %329

261:                                              ; preds = %108
  %262 = getelementptr inbounds %"class.v8::internal::wasm::AsmJsParser", %"class.v8::internal::wasm::AsmJsParser"* %0, i64 0, i32 20
  %263 = load i32, i32* %262, align 4
  %264 = icmp eq i32 %109, %263
  br i1 %264, label %265, label %288

265:                                              ; preds = %261
  tail call void @_ZN2v88internal12AsmJsScanner4NextEv(%"class.v8::internal::AsmJsScanner"* %16) #12
  %266 = load i32, i32* %17, align 8
  %267 = icmp eq i32 %266, 46
  br i1 %267, label %275, label %268

268:                                              ; preds = %265
  %269 = getelementptr inbounds %"class.v8::internal::wasm::AsmJsParser", %"class.v8::internal::wasm::AsmJsParser"* %0, i64 0, i32 17
  store i8 1, i8* %269, align 4
  %270 = getelementptr inbounds %"class.v8::internal::wasm::AsmJsParser", %"class.v8::internal::wasm::AsmJsParser"* %0, i64 0, i32 18
  store i8* getelementptr inbounds ([17 x i8], [17 x i8]* @.str.3, i64 0, i64 0), i8** %270, align 8
  %271 = getelementptr inbounds %"class.v8::internal::wasm::AsmJsParser", %"class.v8::internal::wasm::AsmJsParser"* %0, i64 0, i32 1, i32 5
  %272 = load i64, i64* %271, align 8
  %273 = trunc i64 %272 to i32
  %274 = getelementptr inbounds %"class.v8::internal::wasm::AsmJsParser", %"class.v8::internal::wasm::AsmJsParser"* %0, i64 0, i32 19
  store i32 %273, i32* %274, align 8
  br label %329

275:                                              ; preds = %265
  tail call void @_ZN2v88internal12AsmJsScanner4NextEv(%"class.v8::internal::AsmJsScanner"* %16) #12
  %276 = tail call i64 @_ZN2v88internal23GetCurrentStackPositionEv() #12
  %277 = getelementptr inbounds %"class.v8::internal::wasm::AsmJsParser", %"class.v8::internal::wasm::AsmJsParser"* %0, i64 0, i32 5
  %278 = load i64, i64* %277, align 8
  %279 = icmp ult i64 %276, %278
  br i1 %279, label %280, label %287

280:                                              ; preds = %275
  %281 = getelementptr inbounds %"class.v8::internal::wasm::AsmJsParser", %"class.v8::internal::wasm::AsmJsParser"* %0, i64 0, i32 17
  store i8 1, i8* %281, align 4
  %282 = getelementptr inbounds %"class.v8::internal::wasm::AsmJsParser", %"class.v8::internal::wasm::AsmJsParser"* %0, i64 0, i32 18
  store i8* getelementptr inbounds ([44 x i8], [44 x i8]* @.str.2, i64 0, i64 0), i8** %282, align 8
  %283 = getelementptr inbounds %"class.v8::internal::wasm::AsmJsParser", %"class.v8::internal::wasm::AsmJsParser"* %0, i64 0, i32 1, i32 5
  %284 = load i64, i64* %283, align 8
  %285 = trunc i64 %284 to i32
  %286 = getelementptr inbounds %"class.v8::internal::wasm::AsmJsParser", %"class.v8::internal::wasm::AsmJsParser"* %0, i64 0, i32 19
  store i32 %285, i32* %286, align 8
  br label %329

287:                                              ; preds = %275
  tail call void @_ZN2v88internal4wasm11AsmJsParser23ValidateModuleVarStdlibEPNS2_7VarInfoE(%"class.v8::internal::wasm::AsmJsParser"* %0, %"struct.v8::internal::wasm::AsmJsParser::VarInfo"* %87)
  br label %329

288:                                              ; preds = %261
  %289 = getelementptr inbounds %"class.v8::internal::wasm::AsmJsParser", %"class.v8::internal::wasm::AsmJsParser"* %0, i64 0, i32 21
  %290 = load i32, i32* %289, align 8
  %291 = icmp eq i32 %109, %290
  %292 = icmp eq i32 %109, 43
  %293 = or i1 %291, %292
  br i1 %293, label %294, label %307

294:                                              ; preds = %288
  %295 = tail call i64 @_ZN2v88internal23GetCurrentStackPositionEv() #12
  %296 = getelementptr inbounds %"class.v8::internal::wasm::AsmJsParser", %"class.v8::internal::wasm::AsmJsParser"* %0, i64 0, i32 5
  %297 = load i64, i64* %296, align 8
  %298 = icmp ult i64 %295, %297
  br i1 %298, label %299, label %306

299:                                              ; preds = %294
  %300 = getelementptr inbounds %"class.v8::internal::wasm::AsmJsParser", %"class.v8::internal::wasm::AsmJsParser"* %0, i64 0, i32 17
  store i8 1, i8* %300, align 4
  %301 = getelementptr inbounds %"class.v8::internal::wasm::AsmJsParser", %"class.v8::internal::wasm::AsmJsParser"* %0, i64 0, i32 18
  store i8* getelementptr inbounds ([44 x i8], [44 x i8]* @.str.2, i64 0, i64 0), i8** %301, align 8
  %302 = getelementptr inbounds %"class.v8::internal::wasm::AsmJsParser", %"class.v8::internal::wasm::AsmJsParser"* %0, i64 0, i32 1, i32 5
  %303 = load i64, i64* %302, align 8
  %304 = trunc i64 %303 to i32
  %305 = getelementptr inbounds %"class.v8::internal::wasm::AsmJsParser", %"class.v8::internal::wasm::AsmJsParser"* %0, i64 0, i32 19
  store i32 %304, i32* %305, align 8
  br label %329

306:                                              ; preds = %294
  tail call void @_ZN2v88internal4wasm11AsmJsParser23ValidateModuleVarImportEPNS2_7VarInfoEb(%"class.v8::internal::wasm::AsmJsParser"* %0, %"struct.v8::internal::wasm::AsmJsParser::VarInfo"* %87, i1 zeroext %1)
  br label %329

307:                                              ; preds = %288
  %308 = icmp sgt i32 %109, 255
  br i1 %308, label %309, label %322

309:                                              ; preds = %307
  %310 = tail call i64 @_ZN2v88internal23GetCurrentStackPositionEv() #12
  %311 = getelementptr inbounds %"class.v8::internal::wasm::AsmJsParser", %"class.v8::internal::wasm::AsmJsParser"* %0, i64 0, i32 5
  %312 = load i64, i64* %311, align 8
  %313 = icmp ult i64 %310, %312
  br i1 %313, label %314, label %321

314:                                              ; preds = %309
  %315 = getelementptr inbounds %"class.v8::internal::wasm::AsmJsParser", %"class.v8::internal::wasm::AsmJsParser"* %0, i64 0, i32 17
  store i8 1, i8* %315, align 4
  %316 = getelementptr inbounds %"class.v8::internal::wasm::AsmJsParser", %"class.v8::internal::wasm::AsmJsParser"* %0, i64 0, i32 18
  store i8* getelementptr inbounds ([44 x i8], [44 x i8]* @.str.2, i64 0, i64 0), i8** %316, align 8
  %317 = getelementptr inbounds %"class.v8::internal::wasm::AsmJsParser", %"class.v8::internal::wasm::AsmJsParser"* %0, i64 0, i32 1, i32 5
  %318 = load i64, i64* %317, align 8
  %319 = trunc i64 %318 to i32
  %320 = getelementptr inbounds %"class.v8::internal::wasm::AsmJsParser", %"class.v8::internal::wasm::AsmJsParser"* %0, i64 0, i32 19
  store i32 %319, i32* %320, align 8
  br label %329

321:                                              ; preds = %309
  tail call void @_ZN2v88internal4wasm11AsmJsParser27ValidateModuleVarFromGlobalEPNS2_7VarInfoEb(%"class.v8::internal::wasm::AsmJsParser"* %0, %"struct.v8::internal::wasm::AsmJsParser::VarInfo"* %87, i1 zeroext %1)
  br label %329

322:                                              ; preds = %307
  %323 = getelementptr inbounds %"class.v8::internal::wasm::AsmJsParser", %"class.v8::internal::wasm::AsmJsParser"* %0, i64 0, i32 17
  store i8 1, i8* %323, align 4
  %324 = getelementptr inbounds %"class.v8::internal::wasm::AsmJsParser", %"class.v8::internal::wasm::AsmJsParser"* %0, i64 0, i32 18
  store i8* getelementptr inbounds ([25 x i8], [25 x i8]* @.str.13, i64 0, i64 0), i8** %324, align 8
  %325 = getelementptr inbounds %"class.v8::internal::wasm::AsmJsParser", %"class.v8::internal::wasm::AsmJsParser"* %0, i64 0, i32 1, i32 5
  %326 = load i64, i64* %325, align 8
  %327 = trunc i64 %326 to i32
  %328 = getelementptr inbounds %"class.v8::internal::wasm::AsmJsParser", %"class.v8::internal::wasm::AsmJsParser"* %0, i64 0, i32 19
  store i32 %327, i32* %328, align 8
  br label %329

329:                                              ; preds = %135, %190, %241, %253, %268, %280, %299, %314, %322, %142, %165, %199, %219, %110, %260, %287, %306, %321, %91, %101, %20
  ret void
}

; Function Attrs: nounwind ssp uwtable
define hidden void @_ZN2v88internal4wasm11AsmJsParser26ValidateModuleVarNewStdlibEPNS2_7VarInfoE(%"class.v8::internal::wasm::AsmJsParser"*, %"struct.v8::internal::wasm::AsmJsParser::VarInfo"*) local_unnamed_addr #0 align 2 {
  %3 = getelementptr inbounds %"class.v8::internal::wasm::AsmJsParser", %"class.v8::internal::wasm::AsmJsParser"* %0, i64 0, i32 1
  %4 = getelementptr inbounds %"class.v8::internal::wasm::AsmJsParser", %"class.v8::internal::wasm::AsmJsParser"* %0, i64 0, i32 1, i32 1
  %5 = load i32, i32* %4, align 8
  %6 = getelementptr inbounds %"class.v8::internal::wasm::AsmJsParser", %"class.v8::internal::wasm::AsmJsParser"* %0, i64 0, i32 20
  %7 = load i32, i32* %6, align 4
  %8 = icmp eq i32 %5, %7
  br i1 %8, label %16, label %9

9:                                                ; preds = %2
  %10 = getelementptr inbounds %"class.v8::internal::wasm::AsmJsParser", %"class.v8::internal::wasm::AsmJsParser"* %0, i64 0, i32 17
  store i8 1, i8* %10, align 4
  %11 = getelementptr inbounds %"class.v8::internal::wasm::AsmJsParser", %"class.v8::internal::wasm::AsmJsParser"* %0, i64 0, i32 18
  store i8* getelementptr inbounds ([17 x i8], [17 x i8]* @.str.3, i64 0, i64 0), i8** %11, align 8
  %12 = getelementptr inbounds %"class.v8::internal::wasm::AsmJsParser", %"class.v8::internal::wasm::AsmJsParser"* %0, i64 0, i32 1, i32 5
  %13 = load i64, i64* %12, align 8
  %14 = trunc i64 %13 to i32
  %15 = getelementptr inbounds %"class.v8::internal::wasm::AsmJsParser", %"class.v8::internal::wasm::AsmJsParser"* %0, i64 0, i32 19
  store i32 %14, i32* %15, align 8
  br label %84

16:                                               ; preds = %2
  tail call void @_ZN2v88internal12AsmJsScanner4NextEv(%"class.v8::internal::AsmJsScanner"* %3) #12
  %17 = load i32, i32* %4, align 8
  %18 = icmp eq i32 %17, 46
  br i1 %18, label %26, label %19

19:                                               ; preds = %16
  %20 = getelementptr inbounds %"class.v8::internal::wasm::AsmJsParser", %"class.v8::internal::wasm::AsmJsParser"* %0, i64 0, i32 17
  store i8 1, i8* %20, align 4
  %21 = getelementptr inbounds %"class.v8::internal::wasm::AsmJsParser", %"class.v8::internal::wasm::AsmJsParser"* %0, i64 0, i32 18
  store i8* getelementptr inbounds ([17 x i8], [17 x i8]* @.str.3, i64 0, i64 0), i8** %21, align 8
  %22 = getelementptr inbounds %"class.v8::internal::wasm::AsmJsParser", %"class.v8::internal::wasm::AsmJsParser"* %0, i64 0, i32 1, i32 5
  %23 = load i64, i64* %22, align 8
  %24 = trunc i64 %23 to i32
  %25 = getelementptr inbounds %"class.v8::internal::wasm::AsmJsParser", %"class.v8::internal::wasm::AsmJsParser"* %0, i64 0, i32 19
  store i32 %24, i32* %25, align 8
  br label %84

26:                                               ; preds = %16
  tail call void @_ZN2v88internal12AsmJsScanner4NextEv(%"class.v8::internal::AsmJsScanner"* %3) #12
  %27 = load i32, i32* %4, align 8
  tail call void @_ZN2v88internal12AsmJsScanner4NextEv(%"class.v8::internal::AsmJsScanner"* %3) #12
  switch i32 %27, label %35 [
    i32 -9980, label %42
    i32 -9979, label %28
    i32 -9978, label %29
    i32 -9977, label %30
    i32 -9976, label %31
    i32 -9975, label %32
    i32 -9974, label %33
    i32 -9973, label %34
  ]

28:                                               ; preds = %26
  br label %42

29:                                               ; preds = %26
  br label %42

30:                                               ; preds = %26
  br label %42

31:                                               ; preds = %26
  br label %42

32:                                               ; preds = %26
  br label %42

33:                                               ; preds = %26
  br label %42

34:                                               ; preds = %26
  br label %42

35:                                               ; preds = %26
  %36 = getelementptr inbounds %"class.v8::internal::wasm::AsmJsParser", %"class.v8::internal::wasm::AsmJsParser"* %0, i64 0, i32 17
  store i8 1, i8* %36, align 4
  %37 = getelementptr inbounds %"class.v8::internal::wasm::AsmJsParser", %"class.v8::internal::wasm::AsmJsParser"* %0, i64 0, i32 18
  store i8* getelementptr inbounds ([26 x i8], [26 x i8]* @.str.18, i64 0, i64 0), i8** %37, align 8
  %38 = getelementptr inbounds %"class.v8::internal::wasm::AsmJsParser", %"class.v8::internal::wasm::AsmJsParser"* %0, i64 0, i32 1, i32 5
  %39 = load i64, i64* %38, align 8
  %40 = trunc i64 %39 to i32
  %41 = getelementptr inbounds %"class.v8::internal::wasm::AsmJsParser", %"class.v8::internal::wasm::AsmJsParser"* %0, i64 0, i32 19
  store i32 %40, i32* %41, align 8
  br label %84

42:                                               ; preds = %26, %28, %29, %30, %31, %32, %33, %34
  %43 = phi %"class.v8::internal::wasm::AsmType"* [ inttoptr (i64 65539 to %"class.v8::internal::wasm::AsmType"*), %28 ], [ inttoptr (i64 524291 to %"class.v8::internal::wasm::AsmType"*), %29 ], [ inttoptr (i64 262147 to %"class.v8::internal::wasm::AsmType"*), %30 ], [ inttoptr (i64 2097155 to %"class.v8::internal::wasm::AsmType"*), %31 ], [ inttoptr (i64 1048579 to %"class.v8::internal::wasm::AsmType"*), %32 ], [ inttoptr (i64 4194307 to %"class.v8::internal::wasm::AsmType"*), %33 ], [ inttoptr (i64 8388611 to %"class.v8::internal::wasm::AsmType"*), %34 ], [ inttoptr (i64 131075 to %"class.v8::internal::wasm::AsmType"*), %26 ]
  %44 = phi i64 [ 1073741824, %28 ], [ 2147483648, %29 ], [ 4294967296, %30 ], [ 8589934592, %31 ], [ 17179869184, %32 ], [ 34359738368, %33 ], [ 68719476736, %34 ], [ 536870912, %26 ]
  %45 = getelementptr inbounds %"struct.v8::internal::wasm::AsmJsParser::VarInfo", %"struct.v8::internal::wasm::AsmJsParser::VarInfo"* %1, i64 0, i32 5
  store i32 3, i32* %45, align 8
  %46 = getelementptr inbounds %"struct.v8::internal::wasm::AsmJsParser::VarInfo", %"struct.v8::internal::wasm::AsmJsParser::VarInfo"* %1, i64 0, i32 0
  store %"class.v8::internal::wasm::AsmType"* %43, %"class.v8::internal::wasm::AsmType"** %46, align 8
  %47 = getelementptr inbounds %"struct.v8::internal::wasm::AsmJsParser::VarInfo", %"struct.v8::internal::wasm::AsmJsParser::VarInfo"* %1, i64 0, i32 4
  store i32 0, i32* %47, align 4
  %48 = getelementptr inbounds %"struct.v8::internal::wasm::AsmJsParser::VarInfo", %"struct.v8::internal::wasm::AsmJsParser::VarInfo"* %1, i64 0, i32 6
  store i8 0, i8* %48, align 4
  %49 = getelementptr inbounds %"class.v8::internal::wasm::AsmJsParser", %"class.v8::internal::wasm::AsmJsParser"* %0, i64 0, i32 6, i32 0
  %50 = load i64, i64* %49, align 8
  %51 = or i64 %50, %44
  store i64 %51, i64* %49, align 8
  %52 = load i32, i32* %4, align 8
  %53 = icmp eq i32 %52, 40
  br i1 %53, label %61, label %54

54:                                               ; preds = %42
  %55 = getelementptr inbounds %"class.v8::internal::wasm::AsmJsParser", %"class.v8::internal::wasm::AsmJsParser"* %0, i64 0, i32 17
  store i8 1, i8* %55, align 4
  %56 = getelementptr inbounds %"class.v8::internal::wasm::AsmJsParser", %"class.v8::internal::wasm::AsmJsParser"* %0, i64 0, i32 18
  store i8* getelementptr inbounds ([17 x i8], [17 x i8]* @.str.3, i64 0, i64 0), i8** %56, align 8
  %57 = getelementptr inbounds %"class.v8::internal::wasm::AsmJsParser", %"class.v8::internal::wasm::AsmJsParser"* %0, i64 0, i32 1, i32 5
  %58 = load i64, i64* %57, align 8
  %59 = trunc i64 %58 to i32
  %60 = getelementptr inbounds %"class.v8::internal::wasm::AsmJsParser", %"class.v8::internal::wasm::AsmJsParser"* %0, i64 0, i32 19
  store i32 %59, i32* %60, align 8
  br label %84

61:                                               ; preds = %42
  tail call void @_ZN2v88internal12AsmJsScanner4NextEv(%"class.v8::internal::AsmJsScanner"* %3) #12
  %62 = load i32, i32* %4, align 8
  %63 = getelementptr inbounds %"class.v8::internal::wasm::AsmJsParser", %"class.v8::internal::wasm::AsmJsParser"* %0, i64 0, i32 22
  %64 = load i32, i32* %63, align 4
  %65 = icmp eq i32 %62, %64
  br i1 %65, label %73, label %66

66:                                               ; preds = %61
  %67 = getelementptr inbounds %"class.v8::internal::wasm::AsmJsParser", %"class.v8::internal::wasm::AsmJsParser"* %0, i64 0, i32 17
  store i8 1, i8* %67, align 4
  %68 = getelementptr inbounds %"class.v8::internal::wasm::AsmJsParser", %"class.v8::internal::wasm::AsmJsParser"* %0, i64 0, i32 18
  store i8* getelementptr inbounds ([17 x i8], [17 x i8]* @.str.3, i64 0, i64 0), i8** %68, align 8
  %69 = getelementptr inbounds %"class.v8::internal::wasm::AsmJsParser", %"class.v8::internal::wasm::AsmJsParser"* %0, i64 0, i32 1, i32 5
  %70 = load i64, i64* %69, align 8
  %71 = trunc i64 %70 to i32
  %72 = getelementptr inbounds %"class.v8::internal::wasm::AsmJsParser", %"class.v8::internal::wasm::AsmJsParser"* %0, i64 0, i32 19
  store i32 %71, i32* %72, align 8
  br label %84

73:                                               ; preds = %61
  tail call void @_ZN2v88internal12AsmJsScanner4NextEv(%"class.v8::internal::AsmJsScanner"* %3) #12
  %74 = load i32, i32* %4, align 8
  %75 = icmp eq i32 %74, 41
  br i1 %75, label %83, label %76

76:                                               ; preds = %73
  %77 = getelementptr inbounds %"class.v8::internal::wasm::AsmJsParser", %"class.v8::internal::wasm::AsmJsParser"* %0, i64 0, i32 17
  store i8 1, i8* %77, align 4
  %78 = getelementptr inbounds %"class.v8::internal::wasm::AsmJsParser", %"class.v8::internal::wasm::AsmJsParser"* %0, i64 0, i32 18
  store i8* getelementptr inbounds ([17 x i8], [17 x i8]* @.str.3, i64 0, i64 0), i8** %78, align 8
  %79 = getelementptr inbounds %"class.v8::internal::wasm::AsmJsParser", %"class.v8::internal::wasm::AsmJsParser"* %0, i64 0, i32 1, i32 5
  %80 = load i64, i64* %79, align 8
  %81 = trunc i64 %80 to i32
  %82 = getelementptr inbounds %"class.v8::internal::wasm::AsmJsParser", %"class.v8::internal::wasm::AsmJsParser"* %0, i64 0, i32 19
  store i32 %81, i32* %82, align 8
  br label %84

83:                                               ; preds = %73
  tail call void @_ZN2v88internal12AsmJsScanner4NextEv(%"class.v8::internal::AsmJsScanner"* %3) #12
  br label %84

84:                                               ; preds = %9, %19, %35, %54, %66, %76, %83
  ret void
}

; Function Attrs: nounwind ssp uwtable
define hidden void @_ZN2v88internal4wasm11AsmJsParser23ValidateModuleVarStdlibEPNS2_7VarInfoE(%"class.v8::internal::wasm::AsmJsParser"*, %"struct.v8::internal::wasm::AsmJsParser::VarInfo"*) local_unnamed_addr #0 align 2 {
  %3 = alloca %"class.v8::internal::wasm::WasmInitExpr", align 8
  %4 = alloca %"class.v8::internal::wasm::WasmInitExpr", align 8
  %5 = alloca %"class.v8::internal::wasm::WasmInitExpr", align 8
  %6 = alloca %"class.v8::internal::wasm::WasmInitExpr", align 8
  %7 = alloca %"class.v8::internal::wasm::WasmInitExpr", align 8
  %8 = alloca %"class.v8::internal::wasm::WasmInitExpr", align 8
  %9 = alloca %"class.v8::internal::wasm::WasmInitExpr", align 8
  %10 = alloca %"class.v8::internal::wasm::WasmInitExpr", align 8
  %11 = alloca %"class.v8::internal::wasm::WasmInitExpr", align 8
  %12 = alloca %"class.v8::internal::wasm::WasmInitExpr", align 8
  %13 = alloca %"class.v8::internal::wasm::WasmInitExpr", align 8
  %14 = alloca %"class.v8::internal::wasm::WasmInitExpr", align 8
  %15 = alloca %"class.v8::internal::wasm::WasmInitExpr", align 8
  %16 = alloca %"class.v8::internal::wasm::WasmInitExpr", align 8
  %17 = alloca %"class.v8::internal::wasm::WasmInitExpr", align 8
  %18 = alloca %"class.v8::internal::wasm::WasmInitExpr", align 8
  %19 = alloca %"class.v8::internal::wasm::WasmInitExpr", align 8
  %20 = alloca %"class.v8::internal::wasm::WasmInitExpr", align 8
  %21 = alloca %"class.v8::internal::wasm::WasmInitExpr", align 8
  %22 = alloca %"class.v8::internal::wasm::WasmInitExpr", align 8
  %23 = getelementptr inbounds %"class.v8::internal::wasm::AsmJsParser", %"class.v8::internal::wasm::AsmJsParser"* %0, i64 0, i32 1, i32 1
  %24 = load i32, i32* %23, align 8
  switch i32 %24, label %436 [
    i32 -9962, label %25
    i32 -9964, label %398
    i32 -9963, label %417
  ]

25:                                               ; preds = %2
  %26 = getelementptr inbounds %"class.v8::internal::wasm::AsmJsParser", %"class.v8::internal::wasm::AsmJsParser"* %0, i64 0, i32 1
  tail call void @_ZN2v88internal12AsmJsScanner4NextEv(%"class.v8::internal::AsmJsScanner"* %26) #12
  %27 = load i32, i32* %23, align 8
  %28 = icmp eq i32 %27, 46
  br i1 %28, label %36, label %29

29:                                               ; preds = %25
  %30 = getelementptr inbounds %"class.v8::internal::wasm::AsmJsParser", %"class.v8::internal::wasm::AsmJsParser"* %0, i64 0, i32 17
  store i8 1, i8* %30, align 4
  %31 = getelementptr inbounds %"class.v8::internal::wasm::AsmJsParser", %"class.v8::internal::wasm::AsmJsParser"* %0, i64 0, i32 18
  store i8* getelementptr inbounds ([17 x i8], [17 x i8]* @.str.3, i64 0, i64 0), i8** %31, align 8
  %32 = getelementptr inbounds %"class.v8::internal::wasm::AsmJsParser", %"class.v8::internal::wasm::AsmJsParser"* %0, i64 0, i32 1, i32 5
  %33 = load i64, i64* %32, align 8
  %34 = trunc i64 %33 to i32
  %35 = getelementptr inbounds %"class.v8::internal::wasm::AsmJsParser", %"class.v8::internal::wasm::AsmJsParser"* %0, i64 0, i32 19
  store i32 %34, i32* %35, align 8
  br label %443

36:                                               ; preds = %25
  tail call void @_ZN2v88internal12AsmJsScanner4NextEv(%"class.v8::internal::AsmJsScanner"* %26) #12
  %37 = load i32, i32* %23, align 8
  tail call void @_ZN2v88internal12AsmJsScanner4NextEv(%"class.v8::internal::AsmJsScanner"* %26) #12
  switch i32 %37, label %391 [
    i32 -9972, label %38
    i32 -9971, label %56
    i32 -9970, label %74
    i32 -9969, label %92
    i32 -9968, label %110
    i32 -9967, label %128
    i32 -9966, label %146
    i32 -9965, label %164
    i32 -9999, label %182
    i32 -9998, label %193
    i32 -9997, label %204
    i32 -9996, label %215
    i32 -9995, label %226
    i32 -9994, label %237
    i32 -9993, label %248
    i32 -9992, label %259
    i32 -9991, label %270
    i32 -9990, label %281
    i32 -9989, label %292
    i32 -9988, label %303
    i32 -9987, label %314
    i32 -9986, label %325
    i32 -9985, label %336
    i32 -9984, label %347
    i32 -9983, label %358
    i32 -9982, label %369
    i32 -9981, label %380
  ]

38:                                               ; preds = %36
  %39 = bitcast %"class.v8::internal::wasm::WasmInitExpr"* %18 to i8*
  call void @llvm.lifetime.start.p0i8(i64 32, i8* nonnull %39)
  %40 = bitcast %"class.v8::internal::wasm::WasmInitExpr"* %17 to i8*
  call void @llvm.lifetime.start.p0i8(i64 32, i8* nonnull %40)
  %41 = bitcast %"class.v8::internal::wasm::WasmInitExpr"* %18 to double*
  store double 0x4005BF0A8B145769, double* %41, align 8
  %42 = getelementptr inbounds %"class.v8::internal::wasm::WasmInitExpr", %"class.v8::internal::wasm::WasmInitExpr"* %18, i64 0, i32 1
  store i32 5, i32* %42, align 8
  %43 = getelementptr inbounds %"struct.v8::internal::wasm::AsmJsParser::VarInfo", %"struct.v8::internal::wasm::AsmJsParser::VarInfo"* %1, i64 0, i32 5
  store i32 2, i32* %43, align 8
  %44 = getelementptr inbounds %"struct.v8::internal::wasm::AsmJsParser::VarInfo", %"struct.v8::internal::wasm::AsmJsParser::VarInfo"* %1, i64 0, i32 0
  store %"class.v8::internal::wasm::AsmType"* inttoptr (i64 237 to %"class.v8::internal::wasm::AsmType"*), %"class.v8::internal::wasm::AsmType"** %44, align 8
  %45 = getelementptr inbounds %"class.v8::internal::wasm::AsmJsParser", %"class.v8::internal::wasm::AsmJsParser"* %0, i64 0, i32 2
  %46 = load %"class.v8::internal::wasm::WasmModuleBuilder"*, %"class.v8::internal::wasm::WasmModuleBuilder"** %45, align 8
  call void @llvm.memcpy.p0i8.p0i8.i64(i8* nonnull align 8 %40, i8* nonnull align 8 %39, i64 20, i1 false) #12
  %47 = getelementptr inbounds %"class.v8::internal::wasm::WasmInitExpr", %"class.v8::internal::wasm::WasmInitExpr"* %17, i64 0, i32 2
  %48 = getelementptr inbounds %"class.v8::internal::wasm::WasmInitExpr", %"class.v8::internal::wasm::WasmInitExpr"* %18, i64 0, i32 2, i32 0, i32 0, i32 0
  store %"class.v8::internal::wasm::WasmInitExpr"* null, %"class.v8::internal::wasm::WasmInitExpr"** %48, align 8
  %49 = bitcast %"class.std::__1::unique_ptr.98"* %47 to i64*
  store i64 0, i64* %49, align 8
  %50 = tail call i32 @_ZN2v88internal4wasm17WasmModuleBuilder9AddGlobalENS1_9ValueTypeEbNS1_12WasmInitExprE(%"class.v8::internal::wasm::WasmModuleBuilder"* %46, i32 4, i1 zeroext true, %"class.v8::internal::wasm::WasmInitExpr"* nonnull byval(%"class.v8::internal::wasm::WasmInitExpr") align 8 %17) #12
  %51 = getelementptr inbounds %"struct.v8::internal::wasm::AsmJsParser::VarInfo", %"struct.v8::internal::wasm::AsmJsParser::VarInfo"* %1, i64 0, i32 4
  store i32 %50, i32* %51, align 4
  %52 = getelementptr inbounds %"struct.v8::internal::wasm::AsmJsParser::VarInfo", %"struct.v8::internal::wasm::AsmJsParser::VarInfo"* %1, i64 0, i32 6
  store i8 0, i8* %52, align 4
  call void @_ZN2v88internal4wasm12WasmInitExprD2Ev(%"class.v8::internal::wasm::WasmInitExpr"* nonnull %18) #12
  call void @llvm.lifetime.end.p0i8(i64 32, i8* nonnull %39)
  call void @llvm.lifetime.end.p0i8(i64 32, i8* nonnull %40)
  %53 = getelementptr inbounds %"class.v8::internal::wasm::AsmJsParser", %"class.v8::internal::wasm::AsmJsParser"* %0, i64 0, i32 6, i32 0
  %54 = load i64, i64* %53, align 8
  %55 = or i64 %54, 2097152
  store i64 %55, i64* %53, align 8
  br label %443

56:                                               ; preds = %36
  %57 = bitcast %"class.v8::internal::wasm::WasmInitExpr"* %16 to i8*
  call void @llvm.lifetime.start.p0i8(i64 32, i8* nonnull %57)
  %58 = bitcast %"class.v8::internal::wasm::WasmInitExpr"* %15 to i8*
  call void @llvm.lifetime.start.p0i8(i64 32, i8* nonnull %58)
  %59 = bitcast %"class.v8::internal::wasm::WasmInitExpr"* %16 to double*
  store double 0x40026BB1BBB55516, double* %59, align 8
  %60 = getelementptr inbounds %"class.v8::internal::wasm::WasmInitExpr", %"class.v8::internal::wasm::WasmInitExpr"* %16, i64 0, i32 1
  store i32 5, i32* %60, align 8
  %61 = getelementptr inbounds %"struct.v8::internal::wasm::AsmJsParser::VarInfo", %"struct.v8::internal::wasm::AsmJsParser::VarInfo"* %1, i64 0, i32 5
  store i32 2, i32* %61, align 8
  %62 = getelementptr inbounds %"struct.v8::internal::wasm::AsmJsParser::VarInfo", %"struct.v8::internal::wasm::AsmJsParser::VarInfo"* %1, i64 0, i32 0
  store %"class.v8::internal::wasm::AsmType"* inttoptr (i64 237 to %"class.v8::internal::wasm::AsmType"*), %"class.v8::internal::wasm::AsmType"** %62, align 8
  %63 = getelementptr inbounds %"class.v8::internal::wasm::AsmJsParser", %"class.v8::internal::wasm::AsmJsParser"* %0, i64 0, i32 2
  %64 = load %"class.v8::internal::wasm::WasmModuleBuilder"*, %"class.v8::internal::wasm::WasmModuleBuilder"** %63, align 8
  call void @llvm.memcpy.p0i8.p0i8.i64(i8* nonnull align 8 %58, i8* nonnull align 8 %57, i64 20, i1 false) #12
  %65 = getelementptr inbounds %"class.v8::internal::wasm::WasmInitExpr", %"class.v8::internal::wasm::WasmInitExpr"* %15, i64 0, i32 2
  %66 = getelementptr inbounds %"class.v8::internal::wasm::WasmInitExpr", %"class.v8::internal::wasm::WasmInitExpr"* %16, i64 0, i32 2, i32 0, i32 0, i32 0
  store %"class.v8::internal::wasm::WasmInitExpr"* null, %"class.v8::internal::wasm::WasmInitExpr"** %66, align 8
  %67 = bitcast %"class.std::__1::unique_ptr.98"* %65 to i64*
  store i64 0, i64* %67, align 8
  %68 = tail call i32 @_ZN2v88internal4wasm17WasmModuleBuilder9AddGlobalENS1_9ValueTypeEbNS1_12WasmInitExprE(%"class.v8::internal::wasm::WasmModuleBuilder"* %64, i32 4, i1 zeroext true, %"class.v8::internal::wasm::WasmInitExpr"* nonnull byval(%"class.v8::internal::wasm::WasmInitExpr") align 8 %15) #12
  %69 = getelementptr inbounds %"struct.v8::internal::wasm::AsmJsParser::VarInfo", %"struct.v8::internal::wasm::AsmJsParser::VarInfo"* %1, i64 0, i32 4
  store i32 %68, i32* %69, align 4
  %70 = getelementptr inbounds %"struct.v8::internal::wasm::AsmJsParser::VarInfo", %"struct.v8::internal::wasm::AsmJsParser::VarInfo"* %1, i64 0, i32 6
  store i8 0, i8* %70, align 4
  call void @_ZN2v88internal4wasm12WasmInitExprD2Ev(%"class.v8::internal::wasm::WasmInitExpr"* nonnull %16) #12
  call void @llvm.lifetime.end.p0i8(i64 32, i8* nonnull %57)
  call void @llvm.lifetime.end.p0i8(i64 32, i8* nonnull %58)
  %71 = getelementptr inbounds %"class.v8::internal::wasm::AsmJsParser", %"class.v8::internal::wasm::AsmJsParser"* %0, i64 0, i32 6, i32 0
  %72 = load i64, i64* %71, align 8
  %73 = or i64 %72, 4194304
  store i64 %73, i64* %71, align 8
  br label %443

74:                                               ; preds = %36
  %75 = bitcast %"class.v8::internal::wasm::WasmInitExpr"* %12 to i8*
  call void @llvm.lifetime.start.p0i8(i64 32, i8* nonnull %75)
  %76 = bitcast %"class.v8::internal::wasm::WasmInitExpr"* %11 to i8*
  call void @llvm.lifetime.start.p0i8(i64 32, i8* nonnull %76)
  %77 = bitcast %"class.v8::internal::wasm::WasmInitExpr"* %12 to double*
  store double 0x3FE62E42FEFA39EF, double* %77, align 8
  %78 = getelementptr inbounds %"class.v8::internal::wasm::WasmInitExpr", %"class.v8::internal::wasm::WasmInitExpr"* %12, i64 0, i32 1
  store i32 5, i32* %78, align 8
  %79 = getelementptr inbounds %"struct.v8::internal::wasm::AsmJsParser::VarInfo", %"struct.v8::internal::wasm::AsmJsParser::VarInfo"* %1, i64 0, i32 5
  store i32 2, i32* %79, align 8
  %80 = getelementptr inbounds %"struct.v8::internal::wasm::AsmJsParser::VarInfo", %"struct.v8::internal::wasm::AsmJsParser::VarInfo"* %1, i64 0, i32 0
  store %"class.v8::internal::wasm::AsmType"* inttoptr (i64 237 to %"class.v8::internal::wasm::AsmType"*), %"class.v8::internal::wasm::AsmType"** %80, align 8
  %81 = getelementptr inbounds %"class.v8::internal::wasm::AsmJsParser", %"class.v8::internal::wasm::AsmJsParser"* %0, i64 0, i32 2
  %82 = load %"class.v8::internal::wasm::WasmModuleBuilder"*, %"class.v8::internal::wasm::WasmModuleBuilder"** %81, align 8
  call void @llvm.memcpy.p0i8.p0i8.i64(i8* nonnull align 8 %76, i8* nonnull align 8 %75, i64 20, i1 false) #12
  %83 = getelementptr inbounds %"class.v8::internal::wasm::WasmInitExpr", %"class.v8::internal::wasm::WasmInitExpr"* %11, i64 0, i32 2
  %84 = getelementptr inbounds %"class.v8::internal::wasm::WasmInitExpr", %"class.v8::internal::wasm::WasmInitExpr"* %12, i64 0, i32 2, i32 0, i32 0, i32 0
  store %"class.v8::internal::wasm::WasmInitExpr"* null, %"class.v8::internal::wasm::WasmInitExpr"** %84, align 8
  %85 = bitcast %"class.std::__1::unique_ptr.98"* %83 to i64*
  store i64 0, i64* %85, align 8
  %86 = tail call i32 @_ZN2v88internal4wasm17WasmModuleBuilder9AddGlobalENS1_9ValueTypeEbNS1_12WasmInitExprE(%"class.v8::internal::wasm::WasmModuleBuilder"* %82, i32 4, i1 zeroext true, %"class.v8::internal::wasm::WasmInitExpr"* nonnull byval(%"class.v8::internal::wasm::WasmInitExpr") align 8 %11) #12
  %87 = getelementptr inbounds %"struct.v8::internal::wasm::AsmJsParser::VarInfo", %"struct.v8::internal::wasm::AsmJsParser::VarInfo"* %1, i64 0, i32 4
  store i32 %86, i32* %87, align 4
  %88 = getelementptr inbounds %"struct.v8::internal::wasm::AsmJsParser::VarInfo", %"struct.v8::internal::wasm::AsmJsParser::VarInfo"* %1, i64 0, i32 6
  store i8 0, i8* %88, align 4
  call void @_ZN2v88internal4wasm12WasmInitExprD2Ev(%"class.v8::internal::wasm::WasmInitExpr"* nonnull %12) #12
  call void @llvm.lifetime.end.p0i8(i64 32, i8* nonnull %75)
  call void @llvm.lifetime.end.p0i8(i64 32, i8* nonnull %76)
  %89 = getelementptr inbounds %"class.v8::internal::wasm::AsmJsParser", %"class.v8::internal::wasm::AsmJsParser"* %0, i64 0, i32 6, i32 0
  %90 = load i64, i64* %89, align 8
  %91 = or i64 %90, 8388608
  store i64 %91, i64* %89, align 8
  br label %443

92:                                               ; preds = %36
  %93 = bitcast %"class.v8::internal::wasm::WasmInitExpr"* %8 to i8*
  call void @llvm.lifetime.start.p0i8(i64 32, i8* nonnull %93)
  %94 = bitcast %"class.v8::internal::wasm::WasmInitExpr"* %7 to i8*
  call void @llvm.lifetime.start.p0i8(i64 32, i8* nonnull %94)
  %95 = bitcast %"class.v8::internal::wasm::WasmInitExpr"* %8 to double*
  store double 0x3FF71547652B82FE, double* %95, align 8
  %96 = getelementptr inbounds %"class.v8::internal::wasm::WasmInitExpr", %"class.v8::internal::wasm::WasmInitExpr"* %8, i64 0, i32 1
  store i32 5, i32* %96, align 8
  %97 = getelementptr inbounds %"struct.v8::internal::wasm::AsmJsParser::VarInfo", %"struct.v8::internal::wasm::AsmJsParser::VarInfo"* %1, i64 0, i32 5
  store i32 2, i32* %97, align 8
  %98 = getelementptr inbounds %"struct.v8::internal::wasm::AsmJsParser::VarInfo", %"struct.v8::internal::wasm::AsmJsParser::VarInfo"* %1, i64 0, i32 0
  store %"class.v8::internal::wasm::AsmType"* inttoptr (i64 237 to %"class.v8::internal::wasm::AsmType"*), %"class.v8::internal::wasm::AsmType"** %98, align 8
  %99 = getelementptr inbounds %"class.v8::internal::wasm::AsmJsParser", %"class.v8::internal::wasm::AsmJsParser"* %0, i64 0, i32 2
  %100 = load %"class.v8::internal::wasm::WasmModuleBuilder"*, %"class.v8::internal::wasm::WasmModuleBuilder"** %99, align 8
  call void @llvm.memcpy.p0i8.p0i8.i64(i8* nonnull align 8 %94, i8* nonnull align 8 %93, i64 20, i1 false) #12
  %101 = getelementptr inbounds %"class.v8::internal::wasm::WasmInitExpr", %"class.v8::internal::wasm::WasmInitExpr"* %7, i64 0, i32 2
  %102 = getelementptr inbounds %"class.v8::internal::wasm::WasmInitExpr", %"class.v8::internal::wasm::WasmInitExpr"* %8, i64 0, i32 2, i32 0, i32 0, i32 0
  store %"class.v8::internal::wasm::WasmInitExpr"* null, %"class.v8::internal::wasm::WasmInitExpr"** %102, align 8
  %103 = bitcast %"class.std::__1::unique_ptr.98"* %101 to i64*
  store i64 0, i64* %103, align 8
  %104 = tail call i32 @_ZN2v88internal4wasm17WasmModuleBuilder9AddGlobalENS1_9ValueTypeEbNS1_12WasmInitExprE(%"class.v8::internal::wasm::WasmModuleBuilder"* %100, i32 4, i1 zeroext true, %"class.v8::internal::wasm::WasmInitExpr"* nonnull byval(%"class.v8::internal::wasm::WasmInitExpr") align 8 %7) #12
  %105 = getelementptr inbounds %"struct.v8::internal::wasm::AsmJsParser::VarInfo", %"struct.v8::internal::wasm::AsmJsParser::VarInfo"* %1, i64 0, i32 4
  store i32 %104, i32* %105, align 4
  %106 = getelementptr inbounds %"struct.v8::internal::wasm::AsmJsParser::VarInfo", %"struct.v8::internal::wasm::AsmJsParser::VarInfo"* %1, i64 0, i32 6
  store i8 0, i8* %106, align 4
  call void @_ZN2v88internal4wasm12WasmInitExprD2Ev(%"class.v8::internal::wasm::WasmInitExpr"* nonnull %8) #12
  call void @llvm.lifetime.end.p0i8(i64 32, i8* nonnull %93)
  call void @llvm.lifetime.end.p0i8(i64 32, i8* nonnull %94)
  %107 = getelementptr inbounds %"class.v8::internal::wasm::AsmJsParser", %"class.v8::internal::wasm::AsmJsParser"* %0, i64 0, i32 6, i32 0
  %108 = load i64, i64* %107, align 8
  %109 = or i64 %108, 16777216
  store i64 %109, i64* %107, align 8
  br label %443

110:                                              ; preds = %36
  %111 = bitcast %"class.v8::internal::wasm::WasmInitExpr"* %4 to i8*
  call void @llvm.lifetime.start.p0i8(i64 32, i8* nonnull %111)
  %112 = bitcast %"class.v8::internal::wasm::WasmInitExpr"* %3 to i8*
  call void @llvm.lifetime.start.p0i8(i64 32, i8* nonnull %112)
  %113 = bitcast %"class.v8::internal::wasm::WasmInitExpr"* %4 to double*
  store double 0x3FDBCB7B1526E50E, double* %113, align 8
  %114 = getelementptr inbounds %"class.v8::internal::wasm::WasmInitExpr", %"class.v8::internal::wasm::WasmInitExpr"* %4, i64 0, i32 1
  store i32 5, i32* %114, align 8
  %115 = getelementptr inbounds %"struct.v8::internal::wasm::AsmJsParser::VarInfo", %"struct.v8::internal::wasm::AsmJsParser::VarInfo"* %1, i64 0, i32 5
  store i32 2, i32* %115, align 8
  %116 = getelementptr inbounds %"struct.v8::internal::wasm::AsmJsParser::VarInfo", %"struct.v8::internal::wasm::AsmJsParser::VarInfo"* %1, i64 0, i32 0
  store %"class.v8::internal::wasm::AsmType"* inttoptr (i64 237 to %"class.v8::internal::wasm::AsmType"*), %"class.v8::internal::wasm::AsmType"** %116, align 8
  %117 = getelementptr inbounds %"class.v8::internal::wasm::AsmJsParser", %"class.v8::internal::wasm::AsmJsParser"* %0, i64 0, i32 2
  %118 = load %"class.v8::internal::wasm::WasmModuleBuilder"*, %"class.v8::internal::wasm::WasmModuleBuilder"** %117, align 8
  call void @llvm.memcpy.p0i8.p0i8.i64(i8* nonnull align 8 %112, i8* nonnull align 8 %111, i64 20, i1 false) #12
  %119 = getelementptr inbounds %"class.v8::internal::wasm::WasmInitExpr", %"class.v8::internal::wasm::WasmInitExpr"* %3, i64 0, i32 2
  %120 = getelementptr inbounds %"class.v8::internal::wasm::WasmInitExpr", %"class.v8::internal::wasm::WasmInitExpr"* %4, i64 0, i32 2, i32 0, i32 0, i32 0
  store %"class.v8::internal::wasm::WasmInitExpr"* null, %"class.v8::internal::wasm::WasmInitExpr"** %120, align 8
  %121 = bitcast %"class.std::__1::unique_ptr.98"* %119 to i64*
  store i64 0, i64* %121, align 8
  %122 = tail call i32 @_ZN2v88internal4wasm17WasmModuleBuilder9AddGlobalENS1_9ValueTypeEbNS1_12WasmInitExprE(%"class.v8::internal::wasm::WasmModuleBuilder"* %118, i32 4, i1 zeroext true, %"class.v8::internal::wasm::WasmInitExpr"* nonnull byval(%"class.v8::internal::wasm::WasmInitExpr") align 8 %3) #12
  %123 = getelementptr inbounds %"struct.v8::internal::wasm::AsmJsParser::VarInfo", %"struct.v8::internal::wasm::AsmJsParser::VarInfo"* %1, i64 0, i32 4
  store i32 %122, i32* %123, align 4
  %124 = getelementptr inbounds %"struct.v8::internal::wasm::AsmJsParser::VarInfo", %"struct.v8::internal::wasm::AsmJsParser::VarInfo"* %1, i64 0, i32 6
  store i8 0, i8* %124, align 4
  call void @_ZN2v88internal4wasm12WasmInitExprD2Ev(%"class.v8::internal::wasm::WasmInitExpr"* nonnull %4) #12
  call void @llvm.lifetime.end.p0i8(i64 32, i8* nonnull %111)
  call void @llvm.lifetime.end.p0i8(i64 32, i8* nonnull %112)
  %125 = getelementptr inbounds %"class.v8::internal::wasm::AsmJsParser", %"class.v8::internal::wasm::AsmJsParser"* %0, i64 0, i32 6, i32 0
  %126 = load i64, i64* %125, align 8
  %127 = or i64 %126, 33554432
  store i64 %127, i64* %125, align 8
  br label %443

128:                                              ; preds = %36
  %129 = bitcast %"class.v8::internal::wasm::WasmInitExpr"* %6 to i8*
  call void @llvm.lifetime.start.p0i8(i64 32, i8* nonnull %129)
  %130 = bitcast %"class.v8::internal::wasm::WasmInitExpr"* %5 to i8*
  call void @llvm.lifetime.start.p0i8(i64 32, i8* nonnull %130)
  %131 = bitcast %"class.v8::internal::wasm::WasmInitExpr"* %6 to double*
  store double 0x400921FB54442D18, double* %131, align 8
  %132 = getelementptr inbounds %"class.v8::internal::wasm::WasmInitExpr", %"class.v8::internal::wasm::WasmInitExpr"* %6, i64 0, i32 1
  store i32 5, i32* %132, align 8
  %133 = getelementptr inbounds %"struct.v8::internal::wasm::AsmJsParser::VarInfo", %"struct.v8::internal::wasm::AsmJsParser::VarInfo"* %1, i64 0, i32 5
  store i32 2, i32* %133, align 8
  %134 = getelementptr inbounds %"struct.v8::internal::wasm::AsmJsParser::VarInfo", %"struct.v8::internal::wasm::AsmJsParser::VarInfo"* %1, i64 0, i32 0
  store %"class.v8::internal::wasm::AsmType"* inttoptr (i64 237 to %"class.v8::internal::wasm::AsmType"*), %"class.v8::internal::wasm::AsmType"** %134, align 8
  %135 = getelementptr inbounds %"class.v8::internal::wasm::AsmJsParser", %"class.v8::internal::wasm::AsmJsParser"* %0, i64 0, i32 2
  %136 = load %"class.v8::internal::wasm::WasmModuleBuilder"*, %"class.v8::internal::wasm::WasmModuleBuilder"** %135, align 8
  call void @llvm.memcpy.p0i8.p0i8.i64(i8* nonnull align 8 %130, i8* nonnull align 8 %129, i64 20, i1 false) #12
  %137 = getelementptr inbounds %"class.v8::internal::wasm::WasmInitExpr", %"class.v8::internal::wasm::WasmInitExpr"* %5, i64 0, i32 2
  %138 = getelementptr inbounds %"class.v8::internal::wasm::WasmInitExpr", %"class.v8::internal::wasm::WasmInitExpr"* %6, i64 0, i32 2, i32 0, i32 0, i32 0
  store %"class.v8::internal::wasm::WasmInitExpr"* null, %"class.v8::internal::wasm::WasmInitExpr"** %138, align 8
  %139 = bitcast %"class.std::__1::unique_ptr.98"* %137 to i64*
  store i64 0, i64* %139, align 8
  %140 = tail call i32 @_ZN2v88internal4wasm17WasmModuleBuilder9AddGlobalENS1_9ValueTypeEbNS1_12WasmInitExprE(%"class.v8::internal::wasm::WasmModuleBuilder"* %136, i32 4, i1 zeroext true, %"class.v8::internal::wasm::WasmInitExpr"* nonnull byval(%"class.v8::internal::wasm::WasmInitExpr") align 8 %5) #12
  %141 = getelementptr inbounds %"struct.v8::internal::wasm::AsmJsParser::VarInfo", %"struct.v8::internal::wasm::AsmJsParser::VarInfo"* %1, i64 0, i32 4
  store i32 %140, i32* %141, align 4
  %142 = getelementptr inbounds %"struct.v8::internal::wasm::AsmJsParser::VarInfo", %"struct.v8::internal::wasm::AsmJsParser::VarInfo"* %1, i64 0, i32 6
  store i8 0, i8* %142, align 4
  call void @_ZN2v88internal4wasm12WasmInitExprD2Ev(%"class.v8::internal::wasm::WasmInitExpr"* nonnull %6) #12
  call void @llvm.lifetime.end.p0i8(i64 32, i8* nonnull %129)
  call void @llvm.lifetime.end.p0i8(i64 32, i8* nonnull %130)
  %143 = getelementptr inbounds %"class.v8::internal::wasm::AsmJsParser", %"class.v8::internal::wasm::AsmJsParser"* %0, i64 0, i32 6, i32 0
  %144 = load i64, i64* %143, align 8
  %145 = or i64 %144, 67108864
  store i64 %145, i64* %143, align 8
  br label %443

146:                                              ; preds = %36
  %147 = bitcast %"class.v8::internal::wasm::WasmInitExpr"* %10 to i8*
  call void @llvm.lifetime.start.p0i8(i64 32, i8* nonnull %147)
  %148 = bitcast %"class.v8::internal::wasm::WasmInitExpr"* %9 to i8*
  call void @llvm.lifetime.start.p0i8(i64 32, i8* nonnull %148)
  %149 = bitcast %"class.v8::internal::wasm::WasmInitExpr"* %10 to double*
  store double 0x3FE6A09E667F3BCD, double* %149, align 8
  %150 = getelementptr inbounds %"class.v8::internal::wasm::WasmInitExpr", %"class.v8::internal::wasm::WasmInitExpr"* %10, i64 0, i32 1
  store i32 5, i32* %150, align 8
  %151 = getelementptr inbounds %"struct.v8::internal::wasm::AsmJsParser::VarInfo", %"struct.v8::internal::wasm::AsmJsParser::VarInfo"* %1, i64 0, i32 5
  store i32 2, i32* %151, align 8
  %152 = getelementptr inbounds %"struct.v8::internal::wasm::AsmJsParser::VarInfo", %"struct.v8::internal::wasm::AsmJsParser::VarInfo"* %1, i64 0, i32 0
  store %"class.v8::internal::wasm::AsmType"* inttoptr (i64 237 to %"class.v8::internal::wasm::AsmType"*), %"class.v8::internal::wasm::AsmType"** %152, align 8
  %153 = getelementptr inbounds %"class.v8::internal::wasm::AsmJsParser", %"class.v8::internal::wasm::AsmJsParser"* %0, i64 0, i32 2
  %154 = load %"class.v8::internal::wasm::WasmModuleBuilder"*, %"class.v8::internal::wasm::WasmModuleBuilder"** %153, align 8
  call void @llvm.memcpy.p0i8.p0i8.i64(i8* nonnull align 8 %148, i8* nonnull align 8 %147, i64 20, i1 false) #12
  %155 = getelementptr inbounds %"class.v8::internal::wasm::WasmInitExpr", %"class.v8::internal::wasm::WasmInitExpr"* %9, i64 0, i32 2
  %156 = getelementptr inbounds %"class.v8::internal::wasm::WasmInitExpr", %"class.v8::internal::wasm::WasmInitExpr"* %10, i64 0, i32 2, i32 0, i32 0, i32 0
  store %"class.v8::internal::wasm::WasmInitExpr"* null, %"class.v8::internal::wasm::WasmInitExpr"** %156, align 8
  %157 = bitcast %"class.std::__1::unique_ptr.98"* %155 to i64*
  store i64 0, i64* %157, align 8
  %158 = tail call i32 @_ZN2v88internal4wasm17WasmModuleBuilder9AddGlobalENS1_9ValueTypeEbNS1_12WasmInitExprE(%"class.v8::internal::wasm::WasmModuleBuilder"* %154, i32 4, i1 zeroext true, %"class.v8::internal::wasm::WasmInitExpr"* nonnull byval(%"class.v8::internal::wasm::WasmInitExpr") align 8 %9) #12
  %159 = getelementptr inbounds %"struct.v8::internal::wasm::AsmJsParser::VarInfo", %"struct.v8::internal::wasm::AsmJsParser::VarInfo"* %1, i64 0, i32 4
  store i32 %158, i32* %159, align 4
  %160 = getelementptr inbounds %"struct.v8::internal::wasm::AsmJsParser::VarInfo", %"struct.v8::internal::wasm::AsmJsParser::VarInfo"* %1, i64 0, i32 6
  store i8 0, i8* %160, align 4
  call void @_ZN2v88internal4wasm12WasmInitExprD2Ev(%"class.v8::internal::wasm::WasmInitExpr"* nonnull %10) #12
  call void @llvm.lifetime.end.p0i8(i64 32, i8* nonnull %147)
  call void @llvm.lifetime.end.p0i8(i64 32, i8* nonnull %148)
  %161 = getelementptr inbounds %"class.v8::internal::wasm::AsmJsParser", %"class.v8::internal::wasm::AsmJsParser"* %0, i64 0, i32 6, i32 0
  %162 = load i64, i64* %161, align 8
  %163 = or i64 %162, 134217728
  store i64 %163, i64* %161, align 8
  br label %443

164:                                              ; preds = %36
  %165 = bitcast %"class.v8::internal::wasm::WasmInitExpr"* %14 to i8*
  call void @llvm.lifetime.start.p0i8(i64 32, i8* nonnull %165)
  %166 = bitcast %"class.v8::internal::wasm::WasmInitExpr"* %13 to i8*
  call void @llvm.lifetime.start.p0i8(i64 32, i8* nonnull %166)
  %167 = bitcast %"class.v8::internal::wasm::WasmInitExpr"* %14 to double*
  store double 0x3FF6A09E667F3BCD, double* %167, align 8
  %168 = getelementptr inbounds %"class.v8::internal::wasm::WasmInitExpr", %"class.v8::internal::wasm::WasmInitExpr"* %14, i64 0, i32 1
  store i32 5, i32* %168, align 8
  %169 = getelementptr inbounds %"struct.v8::internal::wasm::AsmJsParser::VarInfo", %"struct.v8::internal::wasm::AsmJsParser::VarInfo"* %1, i64 0, i32 5
  store i32 2, i32* %169, align 8
  %170 = getelementptr inbounds %"struct.v8::internal::wasm::AsmJsParser::VarInfo", %"struct.v8::internal::wasm::AsmJsParser::VarInfo"* %1, i64 0, i32 0
  store %"class.v8::internal::wasm::AsmType"* inttoptr (i64 237 to %"class.v8::internal::wasm::AsmType"*), %"class.v8::internal::wasm::AsmType"** %170, align 8
  %171 = getelementptr inbounds %"class.v8::internal::wasm::AsmJsParser", %"class.v8::internal::wasm::AsmJsParser"* %0, i64 0, i32 2
  %172 = load %"class.v8::internal::wasm::WasmModuleBuilder"*, %"class.v8::internal::wasm::WasmModuleBuilder"** %171, align 8
  call void @llvm.memcpy.p0i8.p0i8.i64(i8* nonnull align 8 %166, i8* nonnull align 8 %165, i64 20, i1 false) #12
  %173 = getelementptr inbounds %"class.v8::internal::wasm::WasmInitExpr", %"class.v8::internal::wasm::WasmInitExpr"* %13, i64 0, i32 2
  %174 = getelementptr inbounds %"class.v8::internal::wasm::WasmInitExpr", %"class.v8::internal::wasm::WasmInitExpr"* %14, i64 0, i32 2, i32 0, i32 0, i32 0
  store %"class.v8::internal::wasm::WasmInitExpr"* null, %"class.v8::internal::wasm::WasmInitExpr"** %174, align 8
  %175 = bitcast %"class.std::__1::unique_ptr.98"* %173 to i64*
  store i64 0, i64* %175, align 8
  %176 = tail call i32 @_ZN2v88internal4wasm17WasmModuleBuilder9AddGlobalENS1_9ValueTypeEbNS1_12WasmInitExprE(%"class.v8::internal::wasm::WasmModuleBuilder"* %172, i32 4, i1 zeroext true, %"class.v8::internal::wasm::WasmInitExpr"* nonnull byval(%"class.v8::internal::wasm::WasmInitExpr") align 8 %13) #12
  %177 = getelementptr inbounds %"struct.v8::internal::wasm::AsmJsParser::VarInfo", %"struct.v8::internal::wasm::AsmJsParser::VarInfo"* %1, i64 0, i32 4
  store i32 %176, i32* %177, align 4
  %178 = getelementptr inbounds %"struct.v8::internal::wasm::AsmJsParser::VarInfo", %"struct.v8::internal::wasm::AsmJsParser::VarInfo"* %1, i64 0, i32 6
  store i8 0, i8* %178, align 4
  call void @_ZN2v88internal4wasm12WasmInitExprD2Ev(%"class.v8::internal::wasm::WasmInitExpr"* nonnull %14) #12
  call void @llvm.lifetime.end.p0i8(i64 32, i8* nonnull %165)
  call void @llvm.lifetime.end.p0i8(i64 32, i8* nonnull %166)
  %179 = getelementptr inbounds %"class.v8::internal::wasm::AsmJsParser", %"class.v8::internal::wasm::AsmJsParser"* %0, i64 0, i32 6, i32 0
  %180 = load i64, i64* %179, align 8
  %181 = or i64 %180, 268435456
  store i64 %181, i64* %179, align 8
  br label %443

182:                                              ; preds = %36
  %183 = getelementptr inbounds %"class.v8::internal::wasm::AsmJsParser", %"class.v8::internal::wasm::AsmJsParser"* %0, i64 0, i32 30
  %184 = bitcast %"class.v8::internal::wasm::AsmType"** %183 to i64*
  %185 = load i64, i64* %184, align 8
  %186 = getelementptr inbounds %"struct.v8::internal::wasm::AsmJsParser::VarInfo", %"struct.v8::internal::wasm::AsmJsParser::VarInfo"* %1, i64 0, i32 5
  store i32 7, i32* %186, align 8
  %187 = bitcast %"struct.v8::internal::wasm::AsmJsParser::VarInfo"* %1 to i64*
  store i64 %185, i64* %187, align 8
  %188 = getelementptr inbounds %"struct.v8::internal::wasm::AsmJsParser::VarInfo", %"struct.v8::internal::wasm::AsmJsParser::VarInfo"* %1, i64 0, i32 4
  store i32 0, i32* %188, align 4
  %189 = getelementptr inbounds %"struct.v8::internal::wasm::AsmJsParser::VarInfo", %"struct.v8::internal::wasm::AsmJsParser::VarInfo"* %1, i64 0, i32 6
  store i8 0, i8* %189, align 4
  %190 = getelementptr inbounds %"class.v8::internal::wasm::AsmJsParser", %"class.v8::internal::wasm::AsmJsParser"* %0, i64 0, i32 6, i32 0
  %191 = load i64, i64* %190, align 8
  %192 = or i64 %191, 4
  store i64 %192, i64* %190, align 8
  br label %443

193:                                              ; preds = %36
  %194 = getelementptr inbounds %"class.v8::internal::wasm::AsmJsParser", %"class.v8::internal::wasm::AsmJsParser"* %0, i64 0, i32 30
  %195 = bitcast %"class.v8::internal::wasm::AsmType"** %194 to i64*
  %196 = load i64, i64* %195, align 8
  %197 = getelementptr inbounds %"struct.v8::internal::wasm::AsmJsParser::VarInfo", %"struct.v8::internal::wasm::AsmJsParser::VarInfo"* %1, i64 0, i32 5
  store i32 8, i32* %197, align 8
  %198 = bitcast %"struct.v8::internal::wasm::AsmJsParser::VarInfo"* %1 to i64*
  store i64 %196, i64* %198, align 8
  %199 = getelementptr inbounds %"struct.v8::internal::wasm::AsmJsParser::VarInfo", %"struct.v8::internal::wasm::AsmJsParser::VarInfo"* %1, i64 0, i32 4
  store i32 0, i32* %199, align 4
  %200 = getelementptr inbounds %"struct.v8::internal::wasm::AsmJsParser::VarInfo", %"struct.v8::internal::wasm::AsmJsParser::VarInfo"* %1, i64 0, i32 6
  store i8 0, i8* %200, align 4
  %201 = getelementptr inbounds %"class.v8::internal::wasm::AsmJsParser", %"class.v8::internal::wasm::AsmJsParser"* %0, i64 0, i32 6, i32 0
  %202 = load i64, i64* %201, align 8
  %203 = or i64 %202, 8
  store i64 %203, i64* %201, align 8
  br label %443

204:                                              ; preds = %36
  %205 = getelementptr inbounds %"class.v8::internal::wasm::AsmJsParser", %"class.v8::internal::wasm::AsmJsParser"* %0, i64 0, i32 31
  %206 = bitcast %"class.v8::internal::wasm::AsmType"** %205 to i64*
  %207 = load i64, i64* %206, align 8
  %208 = getelementptr inbounds %"struct.v8::internal::wasm::AsmJsParser::VarInfo", %"struct.v8::internal::wasm::AsmJsParser::VarInfo"* %1, i64 0, i32 5
  store i32 9, i32* %208, align 8
  %209 = bitcast %"struct.v8::internal::wasm::AsmJsParser::VarInfo"* %1 to i64*
  store i64 %207, i64* %209, align 8
  %210 = getelementptr inbounds %"struct.v8::internal::wasm::AsmJsParser::VarInfo", %"struct.v8::internal::wasm::AsmJsParser::VarInfo"* %1, i64 0, i32 4
  store i32 0, i32* %210, align 4
  %211 = getelementptr inbounds %"struct.v8::internal::wasm::AsmJsParser::VarInfo", %"struct.v8::internal::wasm::AsmJsParser::VarInfo"* %1, i64 0, i32 6
  store i8 0, i8* %211, align 4
  %212 = getelementptr inbounds %"class.v8::internal::wasm::AsmJsParser", %"class.v8::internal::wasm::AsmJsParser"* %0, i64 0, i32 6, i32 0
  %213 = load i64, i64* %212, align 8
  %214 = or i64 %213, 16
  store i64 %214, i64* %212, align 8
  br label %443

215:                                              ; preds = %36
  %216 = getelementptr inbounds %"class.v8::internal::wasm::AsmJsParser", %"class.v8::internal::wasm::AsmJsParser"* %0, i64 0, i32 33
  %217 = bitcast %"class.v8::internal::wasm::AsmType"** %216 to i64*
  %218 = load i64, i64* %217, align 8
  %219 = getelementptr inbounds %"struct.v8::internal::wasm::AsmJsParser::VarInfo", %"struct.v8::internal::wasm::AsmJsParser::VarInfo"* %1, i64 0, i32 5
  store i32 10, i32* %219, align 8
  %220 = bitcast %"struct.v8::internal::wasm::AsmJsParser::VarInfo"* %1 to i64*
  store i64 %218, i64* %220, align 8
  %221 = getelementptr inbounds %"struct.v8::internal::wasm::AsmJsParser::VarInfo", %"struct.v8::internal::wasm::AsmJsParser::VarInfo"* %1, i64 0, i32 4
  store i32 0, i32* %221, align 4
  %222 = getelementptr inbounds %"struct.v8::internal::wasm::AsmJsParser::VarInfo", %"struct.v8::internal::wasm::AsmJsParser::VarInfo"* %1, i64 0, i32 6
  store i8 0, i8* %222, align 4
  %223 = getelementptr inbounds %"class.v8::internal::wasm::AsmJsParser", %"class.v8::internal::wasm::AsmJsParser"* %0, i64 0, i32 6, i32 0
  %224 = load i64, i64* %223, align 8
  %225 = or i64 %224, 32
  store i64 %225, i64* %223, align 8
  br label %443

226:                                              ; preds = %36
  %227 = getelementptr inbounds %"class.v8::internal::wasm::AsmJsParser", %"class.v8::internal::wasm::AsmJsParser"* %0, i64 0, i32 26
  %228 = bitcast %"class.v8::internal::wasm::AsmType"** %227 to i64*
  %229 = load i64, i64* %228, align 8
  %230 = getelementptr inbounds %"struct.v8::internal::wasm::AsmJsParser::VarInfo", %"struct.v8::internal::wasm::AsmJsParser::VarInfo"* %1, i64 0, i32 5
  store i32 11, i32* %230, align 8
  %231 = bitcast %"struct.v8::internal::wasm::AsmJsParser::VarInfo"* %1 to i64*
  store i64 %229, i64* %231, align 8
  %232 = getelementptr inbounds %"struct.v8::internal::wasm::AsmJsParser::VarInfo", %"struct.v8::internal::wasm::AsmJsParser::VarInfo"* %1, i64 0, i32 4
  store i32 0, i32* %232, align 4
  %233 = getelementptr inbounds %"struct.v8::internal::wasm::AsmJsParser::VarInfo", %"struct.v8::internal::wasm::AsmJsParser::VarInfo"* %1, i64 0, i32 6
  store i8 0, i8* %233, align 4
  %234 = getelementptr inbounds %"class.v8::internal::wasm::AsmJsParser", %"class.v8::internal::wasm::AsmJsParser"* %0, i64 0, i32 6, i32 0
  %235 = load i64, i64* %234, align 8
  %236 = or i64 %235, 64
  store i64 %236, i64* %234, align 8
  br label %443

237:                                              ; preds = %36
  %238 = getelementptr inbounds %"class.v8::internal::wasm::AsmJsParser", %"class.v8::internal::wasm::AsmJsParser"* %0, i64 0, i32 26
  %239 = bitcast %"class.v8::internal::wasm::AsmType"** %238 to i64*
  %240 = load i64, i64* %239, align 8
  %241 = getelementptr inbounds %"struct.v8::internal::wasm::AsmJsParser::VarInfo", %"struct.v8::internal::wasm::AsmJsParser::VarInfo"* %1, i64 0, i32 5
  store i32 12, i32* %241, align 8
  %242 = bitcast %"struct.v8::internal::wasm::AsmJsParser::VarInfo"* %1 to i64*
  store i64 %240, i64* %242, align 8
  %243 = getelementptr inbounds %"struct.v8::internal::wasm::AsmJsParser::VarInfo", %"struct.v8::internal::wasm::AsmJsParser::VarInfo"* %1, i64 0, i32 4
  store i32 0, i32* %243, align 4
  %244 = getelementptr inbounds %"struct.v8::internal::wasm::AsmJsParser::VarInfo", %"struct.v8::internal::wasm::AsmJsParser::VarInfo"* %1, i64 0, i32 6
  store i8 0, i8* %244, align 4
  %245 = getelementptr inbounds %"class.v8::internal::wasm::AsmJsParser", %"class.v8::internal::wasm::AsmJsParser"* %0, i64 0, i32 6, i32 0
  %246 = load i64, i64* %245, align 8
  %247 = or i64 %246, 128
  store i64 %247, i64* %245, align 8
  br label %443

248:                                              ; preds = %36
  %249 = getelementptr inbounds %"class.v8::internal::wasm::AsmJsParser", %"class.v8::internal::wasm::AsmJsParser"* %0, i64 0, i32 26
  %250 = bitcast %"class.v8::internal::wasm::AsmType"** %249 to i64*
  %251 = load i64, i64* %250, align 8
  %252 = getelementptr inbounds %"struct.v8::internal::wasm::AsmJsParser::VarInfo", %"struct.v8::internal::wasm::AsmJsParser::VarInfo"* %1, i64 0, i32 5
  store i32 13, i32* %252, align 8
  %253 = bitcast %"struct.v8::internal::wasm::AsmJsParser::VarInfo"* %1 to i64*
  store i64 %251, i64* %253, align 8
  %254 = getelementptr inbounds %"struct.v8::internal::wasm::AsmJsParser::VarInfo", %"struct.v8::internal::wasm::AsmJsParser::VarInfo"* %1, i64 0, i32 4
  store i32 0, i32* %254, align 4
  %255 = getelementptr inbounds %"struct.v8::internal::wasm::AsmJsParser::VarInfo", %"struct.v8::internal::wasm::AsmJsParser::VarInfo"* %1, i64 0, i32 6
  store i8 0, i8* %255, align 4
  %256 = getelementptr inbounds %"class.v8::internal::wasm::AsmJsParser", %"class.v8::internal::wasm::AsmJsParser"* %0, i64 0, i32 6, i32 0
  %257 = load i64, i64* %256, align 8
  %258 = or i64 %257, 256
  store i64 %258, i64* %256, align 8
  br label %443

259:                                              ; preds = %36
  %260 = getelementptr inbounds %"class.v8::internal::wasm::AsmJsParser", %"class.v8::internal::wasm::AsmJsParser"* %0, i64 0, i32 26
  %261 = bitcast %"class.v8::internal::wasm::AsmType"** %260 to i64*
  %262 = load i64, i64* %261, align 8
  %263 = getelementptr inbounds %"struct.v8::internal::wasm::AsmJsParser::VarInfo", %"struct.v8::internal::wasm::AsmJsParser::VarInfo"* %1, i64 0, i32 5
  store i32 14, i32* %263, align 8
  %264 = bitcast %"struct.v8::internal::wasm::AsmJsParser::VarInfo"* %1 to i64*
  store i64 %262, i64* %264, align 8
  %265 = getelementptr inbounds %"struct.v8::internal::wasm::AsmJsParser::VarInfo", %"struct.v8::internal::wasm::AsmJsParser::VarInfo"* %1, i64 0, i32 4
  store i32 0, i32* %265, align 4
  %266 = getelementptr inbounds %"struct.v8::internal::wasm::AsmJsParser::VarInfo", %"struct.v8::internal::wasm::AsmJsParser::VarInfo"* %1, i64 0, i32 6
  store i8 0, i8* %266, align 4
  %267 = getelementptr inbounds %"class.v8::internal::wasm::AsmJsParser", %"class.v8::internal::wasm::AsmJsParser"* %0, i64 0, i32 6, i32 0
  %268 = load i64, i64* %267, align 8
  %269 = or i64 %268, 512
  store i64 %269, i64* %267, align 8
  br label %443

270:                                              ; preds = %36
  %271 = getelementptr inbounds %"class.v8::internal::wasm::AsmJsParser", %"class.v8::internal::wasm::AsmJsParser"* %0, i64 0, i32 26
  %272 = bitcast %"class.v8::internal::wasm::AsmType"** %271 to i64*
  %273 = load i64, i64* %272, align 8
  %274 = getelementptr inbounds %"struct.v8::internal::wasm::AsmJsParser::VarInfo", %"struct.v8::internal::wasm::AsmJsParser::VarInfo"* %1, i64 0, i32 5
  store i32 15, i32* %274, align 8
  %275 = bitcast %"struct.v8::internal::wasm::AsmJsParser::VarInfo"* %1 to i64*
  store i64 %273, i64* %275, align 8
  %276 = getelementptr inbounds %"struct.v8::internal::wasm::AsmJsParser::VarInfo", %"struct.v8::internal::wasm::AsmJsParser::VarInfo"* %1, i64 0, i32 4
  store i32 0, i32* %276, align 4
  %277 = getelementptr inbounds %"struct.v8::internal::wasm::AsmJsParser::VarInfo", %"struct.v8::internal::wasm::AsmJsParser::VarInfo"* %1, i64 0, i32 6
  store i8 0, i8* %277, align 4
  %278 = getelementptr inbounds %"class.v8::internal::wasm::AsmJsParser", %"class.v8::internal::wasm::AsmJsParser"* %0, i64 0, i32 6, i32 0
  %279 = load i64, i64* %278, align 8
  %280 = or i64 %279, 1024
  store i64 %280, i64* %278, align 8
  br label %443

281:                                              ; preds = %36
  %282 = getelementptr inbounds %"class.v8::internal::wasm::AsmJsParser", %"class.v8::internal::wasm::AsmJsParser"* %0, i64 0, i32 26
  %283 = bitcast %"class.v8::internal::wasm::AsmType"** %282 to i64*
  %284 = load i64, i64* %283, align 8
  %285 = getelementptr inbounds %"struct.v8::internal::wasm::AsmJsParser::VarInfo", %"struct.v8::internal::wasm::AsmJsParser::VarInfo"* %1, i64 0, i32 5
  store i32 16, i32* %285, align 8
  %286 = bitcast %"struct.v8::internal::wasm::AsmJsParser::VarInfo"* %1 to i64*
  store i64 %284, i64* %286, align 8
  %287 = getelementptr inbounds %"struct.v8::internal::wasm::AsmJsParser::VarInfo", %"struct.v8::internal::wasm::AsmJsParser::VarInfo"* %1, i64 0, i32 4
  store i32 0, i32* %287, align 4
  %288 = getelementptr inbounds %"struct.v8::internal::wasm::AsmJsParser::VarInfo", %"struct.v8::internal::wasm::AsmJsParser::VarInfo"* %1, i64 0, i32 6
  store i8 0, i8* %288, align 4
  %289 = getelementptr inbounds %"class.v8::internal::wasm::AsmJsParser", %"class.v8::internal::wasm::AsmJsParser"* %0, i64 0, i32 6, i32 0
  %290 = load i64, i64* %289, align 8
  %291 = or i64 %290, 2048
  store i64 %291, i64* %289, align 8
  br label %443

292:                                              ; preds = %36
  %293 = getelementptr inbounds %"class.v8::internal::wasm::AsmJsParser", %"class.v8::internal::wasm::AsmJsParser"* %0, i64 0, i32 26
  %294 = bitcast %"class.v8::internal::wasm::AsmType"** %293 to i64*
  %295 = load i64, i64* %294, align 8
  %296 = getelementptr inbounds %"struct.v8::internal::wasm::AsmJsParser::VarInfo", %"struct.v8::internal::wasm::AsmJsParser::VarInfo"* %1, i64 0, i32 5
  store i32 17, i32* %296, align 8
  %297 = bitcast %"struct.v8::internal::wasm::AsmJsParser::VarInfo"* %1 to i64*
  store i64 %295, i64* %297, align 8
  %298 = getelementptr inbounds %"struct.v8::internal::wasm::AsmJsParser::VarInfo", %"struct.v8::internal::wasm::AsmJsParser::VarInfo"* %1, i64 0, i32 4
  store i32 0, i32* %298, align 4
  %299 = getelementptr inbounds %"struct.v8::internal::wasm::AsmJsParser::VarInfo", %"struct.v8::internal::wasm::AsmJsParser::VarInfo"* %1, i64 0, i32 6
  store i8 0, i8* %299, align 4
  %300 = getelementptr inbounds %"class.v8::internal::wasm::AsmJsParser", %"class.v8::internal::wasm::AsmJsParser"* %0, i64 0, i32 6, i32 0
  %301 = load i64, i64* %300, align 8
  %302 = or i64 %301, 4096
  store i64 %302, i64* %300, align 8
  br label %443

303:                                              ; preds = %36
  %304 = getelementptr inbounds %"class.v8::internal::wasm::AsmJsParser", %"class.v8::internal::wasm::AsmJsParser"* %0, i64 0, i32 26
  %305 = bitcast %"class.v8::internal::wasm::AsmType"** %304 to i64*
  %306 = load i64, i64* %305, align 8
  %307 = getelementptr inbounds %"struct.v8::internal::wasm::AsmJsParser::VarInfo", %"struct.v8::internal::wasm::AsmJsParser::VarInfo"* %1, i64 0, i32 5
  store i32 18, i32* %307, align 8
  %308 = bitcast %"struct.v8::internal::wasm::AsmJsParser::VarInfo"* %1 to i64*
  store i64 %306, i64* %308, align 8
  %309 = getelementptr inbounds %"struct.v8::internal::wasm::AsmJsParser::VarInfo", %"struct.v8::internal::wasm::AsmJsParser::VarInfo"* %1, i64 0, i32 4
  store i32 0, i32* %309, align 4
  %310 = getelementptr inbounds %"struct.v8::internal::wasm::AsmJsParser::VarInfo", %"struct.v8::internal::wasm::AsmJsParser::VarInfo"* %1, i64 0, i32 6
  store i8 0, i8* %310, align 4
  %311 = getelementptr inbounds %"class.v8::internal::wasm::AsmJsParser", %"class.v8::internal::wasm::AsmJsParser"* %0, i64 0, i32 6, i32 0
  %312 = load i64, i64* %311, align 8
  %313 = or i64 %312, 8192
  store i64 %313, i64* %311, align 8
  br label %443

314:                                              ; preds = %36
  %315 = getelementptr inbounds %"class.v8::internal::wasm::AsmJsParser", %"class.v8::internal::wasm::AsmJsParser"* %0, i64 0, i32 27
  %316 = bitcast %"class.v8::internal::wasm::AsmType"** %315 to i64*
  %317 = load i64, i64* %316, align 8
  %318 = getelementptr inbounds %"struct.v8::internal::wasm::AsmJsParser::VarInfo", %"struct.v8::internal::wasm::AsmJsParser::VarInfo"* %1, i64 0, i32 5
  store i32 19, i32* %318, align 8
  %319 = bitcast %"struct.v8::internal::wasm::AsmJsParser::VarInfo"* %1 to i64*
  store i64 %317, i64* %319, align 8
  %320 = getelementptr inbounds %"struct.v8::internal::wasm::AsmJsParser::VarInfo", %"struct.v8::internal::wasm::AsmJsParser::VarInfo"* %1, i64 0, i32 4
  store i32 0, i32* %320, align 4
  %321 = getelementptr inbounds %"struct.v8::internal::wasm::AsmJsParser::VarInfo", %"struct.v8::internal::wasm::AsmJsParser::VarInfo"* %1, i64 0, i32 6
  store i8 0, i8* %321, align 4
  %322 = getelementptr inbounds %"class.v8::internal::wasm::AsmJsParser", %"class.v8::internal::wasm::AsmJsParser"* %0, i64 0, i32 6, i32 0
  %323 = load i64, i64* %322, align 8
  %324 = or i64 %323, 16384
  store i64 %324, i64* %322, align 8
  br label %443

325:                                              ; preds = %36
  %326 = getelementptr inbounds %"class.v8::internal::wasm::AsmJsParser", %"class.v8::internal::wasm::AsmJsParser"* %0, i64 0, i32 27
  %327 = bitcast %"class.v8::internal::wasm::AsmType"** %326 to i64*
  %328 = load i64, i64* %327, align 8
  %329 = getelementptr inbounds %"struct.v8::internal::wasm::AsmJsParser::VarInfo", %"struct.v8::internal::wasm::AsmJsParser::VarInfo"* %1, i64 0, i32 5
  store i32 20, i32* %329, align 8
  %330 = bitcast %"struct.v8::internal::wasm::AsmJsParser::VarInfo"* %1 to i64*
  store i64 %328, i64* %330, align 8
  %331 = getelementptr inbounds %"struct.v8::internal::wasm::AsmJsParser::VarInfo", %"struct.v8::internal::wasm::AsmJsParser::VarInfo"* %1, i64 0, i32 4
  store i32 0, i32* %331, align 4
  %332 = getelementptr inbounds %"struct.v8::internal::wasm::AsmJsParser::VarInfo", %"struct.v8::internal::wasm::AsmJsParser::VarInfo"* %1, i64 0, i32 6
  store i8 0, i8* %332, align 4
  %333 = getelementptr inbounds %"class.v8::internal::wasm::AsmJsParser", %"class.v8::internal::wasm::AsmJsParser"* %0, i64 0, i32 6, i32 0
  %334 = load i64, i64* %333, align 8
  %335 = or i64 %334, 32768
  store i64 %335, i64* %333, align 8
  br label %443

336:                                              ; preds = %36
  %337 = getelementptr inbounds %"class.v8::internal::wasm::AsmJsParser", %"class.v8::internal::wasm::AsmJsParser"* %0, i64 0, i32 29
  %338 = bitcast %"class.v8::internal::wasm::AsmType"** %337 to i64*
  %339 = load i64, i64* %338, align 8
  %340 = getelementptr inbounds %"struct.v8::internal::wasm::AsmJsParser::VarInfo", %"struct.v8::internal::wasm::AsmJsParser::VarInfo"* %1, i64 0, i32 5
  store i32 21, i32* %340, align 8
  %341 = bitcast %"struct.v8::internal::wasm::AsmJsParser::VarInfo"* %1 to i64*
  store i64 %339, i64* %341, align 8
  %342 = getelementptr inbounds %"struct.v8::internal::wasm::AsmJsParser::VarInfo", %"struct.v8::internal::wasm::AsmJsParser::VarInfo"* %1, i64 0, i32 4
  store i32 0, i32* %342, align 4
  %343 = getelementptr inbounds %"struct.v8::internal::wasm::AsmJsParser::VarInfo", %"struct.v8::internal::wasm::AsmJsParser::VarInfo"* %1, i64 0, i32 6
  store i8 0, i8* %343, align 4
  %344 = getelementptr inbounds %"class.v8::internal::wasm::AsmJsParser", %"class.v8::internal::wasm::AsmJsParser"* %0, i64 0, i32 6, i32 0
  %345 = load i64, i64* %344, align 8
  %346 = or i64 %345, 65536
  store i64 %346, i64* %344, align 8
  br label %443

347:                                              ; preds = %36
  %348 = getelementptr inbounds %"class.v8::internal::wasm::AsmJsParser", %"class.v8::internal::wasm::AsmJsParser"* %0, i64 0, i32 28
  %349 = bitcast %"class.v8::internal::wasm::AsmType"** %348 to i64*
  %350 = load i64, i64* %349, align 8
  %351 = getelementptr inbounds %"struct.v8::internal::wasm::AsmJsParser::VarInfo", %"struct.v8::internal::wasm::AsmJsParser::VarInfo"* %1, i64 0, i32 5
  store i32 22, i32* %351, align 8
  %352 = bitcast %"struct.v8::internal::wasm::AsmJsParser::VarInfo"* %1 to i64*
  store i64 %350, i64* %352, align 8
  %353 = getelementptr inbounds %"struct.v8::internal::wasm::AsmJsParser::VarInfo", %"struct.v8::internal::wasm::AsmJsParser::VarInfo"* %1, i64 0, i32 4
  store i32 0, i32* %353, align 4
  %354 = getelementptr inbounds %"struct.v8::internal::wasm::AsmJsParser::VarInfo", %"struct.v8::internal::wasm::AsmJsParser::VarInfo"* %1, i64 0, i32 6
  store i8 0, i8* %354, align 4
  %355 = getelementptr inbounds %"class.v8::internal::wasm::AsmJsParser", %"class.v8::internal::wasm::AsmJsParser"* %0, i64 0, i32 6, i32 0
  %356 = load i64, i64* %355, align 8
  %357 = or i64 %356, 131072
  store i64 %357, i64* %355, align 8
  br label %443

358:                                              ; preds = %36
  %359 = getelementptr inbounds %"class.v8::internal::wasm::AsmJsParser", %"class.v8::internal::wasm::AsmJsParser"* %0, i64 0, i32 32
  %360 = bitcast %"class.v8::internal::wasm::AsmType"** %359 to i64*
  %361 = load i64, i64* %360, align 8
  %362 = getelementptr inbounds %"struct.v8::internal::wasm::AsmJsParser::VarInfo", %"struct.v8::internal::wasm::AsmJsParser::VarInfo"* %1, i64 0, i32 5
  store i32 23, i32* %362, align 8
  %363 = bitcast %"struct.v8::internal::wasm::AsmJsParser::VarInfo"* %1 to i64*
  store i64 %361, i64* %363, align 8
  %364 = getelementptr inbounds %"struct.v8::internal::wasm::AsmJsParser::VarInfo", %"struct.v8::internal::wasm::AsmJsParser::VarInfo"* %1, i64 0, i32 4
  store i32 0, i32* %364, align 4
  %365 = getelementptr inbounds %"struct.v8::internal::wasm::AsmJsParser::VarInfo", %"struct.v8::internal::wasm::AsmJsParser::VarInfo"* %1, i64 0, i32 6
  store i8 0, i8* %365, align 4
  %366 = getelementptr inbounds %"class.v8::internal::wasm::AsmJsParser", %"class.v8::internal::wasm::AsmJsParser"* %0, i64 0, i32 6, i32 0
  %367 = load i64, i64* %366, align 8
  %368 = or i64 %367, 262144
  store i64 %368, i64* %366, align 8
  br label %443

369:                                              ; preds = %36
  %370 = getelementptr inbounds %"class.v8::internal::wasm::AsmJsParser", %"class.v8::internal::wasm::AsmJsParser"* %0, i64 0, i32 32
  %371 = bitcast %"class.v8::internal::wasm::AsmType"** %370 to i64*
  %372 = load i64, i64* %371, align 8
  %373 = getelementptr inbounds %"struct.v8::internal::wasm::AsmJsParser::VarInfo", %"struct.v8::internal::wasm::AsmJsParser::VarInfo"* %1, i64 0, i32 5
  store i32 24, i32* %373, align 8
  %374 = bitcast %"struct.v8::internal::wasm::AsmJsParser::VarInfo"* %1 to i64*
  store i64 %372, i64* %374, align 8
  %375 = getelementptr inbounds %"struct.v8::internal::wasm::AsmJsParser::VarInfo", %"struct.v8::internal::wasm::AsmJsParser::VarInfo"* %1, i64 0, i32 4
  store i32 0, i32* %375, align 4
  %376 = getelementptr inbounds %"struct.v8::internal::wasm::AsmJsParser::VarInfo", %"struct.v8::internal::wasm::AsmJsParser::VarInfo"* %1, i64 0, i32 6
  store i8 0, i8* %376, align 4
  %377 = getelementptr inbounds %"class.v8::internal::wasm::AsmJsParser", %"class.v8::internal::wasm::AsmJsParser"* %0, i64 0, i32 6, i32 0
  %378 = load i64, i64* %377, align 8
  %379 = or i64 %378, 524288
  store i64 %379, i64* %377, align 8
  br label %443

380:                                              ; preds = %36
  %381 = getelementptr inbounds %"class.v8::internal::wasm::AsmJsParser", %"class.v8::internal::wasm::AsmJsParser"* %0, i64 0, i32 32
  %382 = bitcast %"class.v8::internal::wasm::AsmType"** %381 to i64*
  %383 = load i64, i64* %382, align 8
  %384 = getelementptr inbounds %"struct.v8::internal::wasm::AsmJsParser::VarInfo", %"struct.v8::internal::wasm::AsmJsParser::VarInfo"* %1, i64 0, i32 5
  store i32 25, i32* %384, align 8
  %385 = bitcast %"struct.v8::internal::wasm::AsmJsParser::VarInfo"* %1 to i64*
  store i64 %383, i64* %385, align 8
  %386 = getelementptr inbounds %"struct.v8::internal::wasm::AsmJsParser::VarInfo", %"struct.v8::internal::wasm::AsmJsParser::VarInfo"* %1, i64 0, i32 4
  store i32 0, i32* %386, align 4
  %387 = getelementptr inbounds %"struct.v8::internal::wasm::AsmJsParser::VarInfo", %"struct.v8::internal::wasm::AsmJsParser::VarInfo"* %1, i64 0, i32 6
  store i8 0, i8* %387, align 4
  %388 = getelementptr inbounds %"class.v8::internal::wasm::AsmJsParser", %"class.v8::internal::wasm::AsmJsParser"* %0, i64 0, i32 6, i32 0
  %389 = load i64, i64* %388, align 8
  %390 = or i64 %389, 1048576
  store i64 %390, i64* %388, align 8
  br label %443

391:                                              ; preds = %36
  %392 = getelementptr inbounds %"class.v8::internal::wasm::AsmJsParser", %"class.v8::internal::wasm::AsmJsParser"* %0, i64 0, i32 17
  store i8 1, i8* %392, align 4
  %393 = getelementptr inbounds %"class.v8::internal::wasm::AsmJsParser", %"class.v8::internal::wasm::AsmJsParser"* %0, i64 0, i32 18
  store i8* getelementptr inbounds ([30 x i8], [30 x i8]* @.str.19, i64 0, i64 0), i8** %393, align 8
  %394 = getelementptr inbounds %"class.v8::internal::wasm::AsmJsParser", %"class.v8::internal::wasm::AsmJsParser"* %0, i64 0, i32 1, i32 5
  %395 = load i64, i64* %394, align 8
  %396 = trunc i64 %395 to i32
  %397 = getelementptr inbounds %"class.v8::internal::wasm::AsmJsParser", %"class.v8::internal::wasm::AsmJsParser"* %0, i64 0, i32 19
  store i32 %396, i32* %397, align 8
  br label %443

398:                                              ; preds = %2
  %399 = getelementptr inbounds %"class.v8::internal::wasm::AsmJsParser", %"class.v8::internal::wasm::AsmJsParser"* %0, i64 0, i32 1
  tail call void @_ZN2v88internal12AsmJsScanner4NextEv(%"class.v8::internal::AsmJsScanner"* %399) #12
  %400 = bitcast %"class.v8::internal::wasm::WasmInitExpr"* %20 to i8*
  call void @llvm.lifetime.start.p0i8(i64 32, i8* nonnull %400)
  %401 = bitcast %"class.v8::internal::wasm::WasmInitExpr"* %19 to i8*
  call void @llvm.lifetime.start.p0i8(i64 32, i8* nonnull %401)
  %402 = bitcast %"class.v8::internal::wasm::WasmInitExpr"* %20 to double*
  store double 0x7FF0000000000000, double* %402, align 8
  %403 = getelementptr inbounds %"class.v8::internal::wasm::WasmInitExpr", %"class.v8::internal::wasm::WasmInitExpr"* %20, i64 0, i32 1
  store i32 5, i32* %403, align 8
  %404 = getelementptr inbounds %"struct.v8::internal::wasm::AsmJsParser::VarInfo", %"struct.v8::internal::wasm::AsmJsParser::VarInfo"* %1, i64 0, i32 5
  store i32 2, i32* %404, align 8
  %405 = getelementptr inbounds %"struct.v8::internal::wasm::AsmJsParser::VarInfo", %"struct.v8::internal::wasm::AsmJsParser::VarInfo"* %1, i64 0, i32 0
  store %"class.v8::internal::wasm::AsmType"* inttoptr (i64 237 to %"class.v8::internal::wasm::AsmType"*), %"class.v8::internal::wasm::AsmType"** %405, align 8
  %406 = getelementptr inbounds %"class.v8::internal::wasm::AsmJsParser", %"class.v8::internal::wasm::AsmJsParser"* %0, i64 0, i32 2
  %407 = load %"class.v8::internal::wasm::WasmModuleBuilder"*, %"class.v8::internal::wasm::WasmModuleBuilder"** %406, align 8
  call void @llvm.memcpy.p0i8.p0i8.i64(i8* nonnull align 8 %401, i8* nonnull align 8 %400, i64 20, i1 false) #12
  %408 = getelementptr inbounds %"class.v8::internal::wasm::WasmInitExpr", %"class.v8::internal::wasm::WasmInitExpr"* %19, i64 0, i32 2
  %409 = getelementptr inbounds %"class.v8::internal::wasm::WasmInitExpr", %"class.v8::internal::wasm::WasmInitExpr"* %20, i64 0, i32 2, i32 0, i32 0, i32 0
  store %"class.v8::internal::wasm::WasmInitExpr"* null, %"class.v8::internal::wasm::WasmInitExpr"** %409, align 8
  %410 = bitcast %"class.std::__1::unique_ptr.98"* %408 to i64*
  store i64 0, i64* %410, align 8
  %411 = tail call i32 @_ZN2v88internal4wasm17WasmModuleBuilder9AddGlobalENS1_9ValueTypeEbNS1_12WasmInitExprE(%"class.v8::internal::wasm::WasmModuleBuilder"* %407, i32 4, i1 zeroext true, %"class.v8::internal::wasm::WasmInitExpr"* nonnull byval(%"class.v8::internal::wasm::WasmInitExpr") align 8 %19) #12
  %412 = getelementptr inbounds %"struct.v8::internal::wasm::AsmJsParser::VarInfo", %"struct.v8::internal::wasm::AsmJsParser::VarInfo"* %1, i64 0, i32 4
  store i32 %411, i32* %412, align 4
  %413 = getelementptr inbounds %"struct.v8::internal::wasm::AsmJsParser::VarInfo", %"struct.v8::internal::wasm::AsmJsParser::VarInfo"* %1, i64 0, i32 6
  store i8 0, i8* %413, align 4
  call void @_ZN2v88internal4wasm12WasmInitExprD2Ev(%"class.v8::internal::wasm::WasmInitExpr"* nonnull %20) #12
  call void @llvm.lifetime.end.p0i8(i64 32, i8* nonnull %400)
  call void @llvm.lifetime.end.p0i8(i64 32, i8* nonnull %401)
  %414 = getelementptr inbounds %"class.v8::internal::wasm::AsmJsParser", %"class.v8::internal::wasm::AsmJsParser"* %0, i64 0, i32 6, i32 0
  %415 = load i64, i64* %414, align 8
  %416 = or i64 %415, 1
  store i64 %416, i64* %414, align 8
  br label %443

417:                                              ; preds = %2
  %418 = getelementptr inbounds %"class.v8::internal::wasm::AsmJsParser", %"class.v8::internal::wasm::AsmJsParser"* %0, i64 0, i32 1
  tail call void @_ZN2v88internal12AsmJsScanner4NextEv(%"class.v8::internal::AsmJsScanner"* %418) #12
  %419 = bitcast %"class.v8::internal::wasm::WasmInitExpr"* %22 to i8*
  call void @llvm.lifetime.start.p0i8(i64 32, i8* nonnull %419)
  %420 = bitcast %"class.v8::internal::wasm::WasmInitExpr"* %21 to i8*
  call void @llvm.lifetime.start.p0i8(i64 32, i8* nonnull %420)
  %421 = bitcast %"class.v8::internal::wasm::WasmInitExpr"* %22 to double*
  store double 0x7FF8000000000000, double* %421, align 8
  %422 = getelementptr inbounds %"class.v8::internal::wasm::WasmInitExpr", %"class.v8::internal::wasm::WasmInitExpr"* %22, i64 0, i32 1
  store i32 5, i32* %422, align 8
  %423 = getelementptr inbounds %"struct.v8::internal::wasm::AsmJsParser::VarInfo", %"struct.v8::internal::wasm::AsmJsParser::VarInfo"* %1, i64 0, i32 5
  store i32 2, i32* %423, align 8
  %424 = getelementptr inbounds %"struct.v8::internal::wasm::AsmJsParser::VarInfo", %"struct.v8::internal::wasm::AsmJsParser::VarInfo"* %1, i64 0, i32 0
  store %"class.v8::internal::wasm::AsmType"* inttoptr (i64 237 to %"class.v8::internal::wasm::AsmType"*), %"class.v8::internal::wasm::AsmType"** %424, align 8
  %425 = getelementptr inbounds %"class.v8::internal::wasm::AsmJsParser", %"class.v8::internal::wasm::AsmJsParser"* %0, i64 0, i32 2
  %426 = load %"class.v8::internal::wasm::WasmModuleBuilder"*, %"class.v8::internal::wasm::WasmModuleBuilder"** %425, align 8
  call void @llvm.memcpy.p0i8.p0i8.i64(i8* nonnull align 8 %420, i8* nonnull align 8 %419, i64 20, i1 false) #12
  %427 = getelementptr inbounds %"class.v8::internal::wasm::WasmInitExpr", %"class.v8::internal::wasm::WasmInitExpr"* %21, i64 0, i32 2
  %428 = getelementptr inbounds %"class.v8::internal::wasm::WasmInitExpr", %"class.v8::internal::wasm::WasmInitExpr"* %22, i64 0, i32 2, i32 0, i32 0, i32 0
  store %"class.v8::internal::wasm::WasmInitExpr"* null, %"class.v8::internal::wasm::WasmInitExpr"** %428, align 8
  %429 = bitcast %"class.std::__1::unique_ptr.98"* %427 to i64*
  store i64 0, i64* %429, align 8
  %430 = tail call i32 @_ZN2v88internal4wasm17WasmModuleBuilder9AddGlobalENS1_9ValueTypeEbNS1_12WasmInitExprE(%"class.v8::internal::wasm::WasmModuleBuilder"* %426, i32 4, i1 zeroext true, %"class.v8::internal::wasm::WasmInitExpr"* nonnull byval(%"class.v8::internal::wasm::WasmInitExpr") align 8 %21) #12
  %431 = getelementptr inbounds %"struct.v8::internal::wasm::AsmJsParser::VarInfo", %"struct.v8::internal::wasm::AsmJsParser::VarInfo"* %1, i64 0, i32 4
  store i32 %430, i32* %431, align 4
  %432 = getelementptr inbounds %"struct.v8::internal::wasm::AsmJsParser::VarInfo", %"struct.v8::internal::wasm::AsmJsParser::VarInfo"* %1, i64 0, i32 6
  store i8 0, i8* %432, align 4
  call void @_ZN2v88internal4wasm12WasmInitExprD2Ev(%"class.v8::internal::wasm::WasmInitExpr"* nonnull %22) #12
  call void @llvm.lifetime.end.p0i8(i64 32, i8* nonnull %419)
  call void @llvm.lifetime.end.p0i8(i64 32, i8* nonnull %420)
  %433 = getelementptr inbounds %"class.v8::internal::wasm::AsmJsParser", %"class.v8::internal::wasm::AsmJsParser"* %0, i64 0, i32 6, i32 0
  %434 = load i64, i64* %433, align 8
  %435 = or i64 %434, 2
  store i64 %435, i64* %433, align 8
  br label %443

436:                                              ; preds = %2
  %437 = getelementptr inbounds %"class.v8::internal::wasm::AsmJsParser", %"class.v8::internal::wasm::AsmJsParser"* %0, i64 0, i32 17
  store i8 1, i8* %437, align 4
  %438 = getelementptr inbounds %"class.v8::internal::wasm::AsmJsParser", %"class.v8::internal::wasm::AsmJsParser"* %0, i64 0, i32 18
  store i8* getelementptr inbounds ([25 x i8], [25 x i8]* @.str.20, i64 0, i64 0), i8** %438, align 8
  %439 = getelementptr inbounds %"class.v8::internal::wasm::AsmJsParser", %"class.v8::internal::wasm::AsmJsParser"* %0, i64 0, i32 1, i32 5
  %440 = load i64, i64* %439, align 8
  %441 = trunc i64 %440 to i32
  %442 = getelementptr inbounds %"class.v8::internal::wasm::AsmJsParser", %"class.v8::internal::wasm::AsmJsParser"* %0, i64 0, i32 19
  store i32 %441, i32* %442, align 8
  br label %443

443:                                              ; preds = %398, %417, %38, %56, %74, %92, %110, %128, %146, %164, %182, %193, %204, %215, %226, %237, %248, %259, %270, %281, %292, %303, %314, %325, %336, %347, %358, %369, %380, %29, %391, %436
  ret void
}

; Function Attrs: nounwind ssp uwtable
define hidden void @_ZN2v88internal4wasm11AsmJsParser23ValidateModuleVarImportEPNS2_7VarInfoEb(%"class.v8::internal::wasm::AsmJsParser"*, %"struct.v8::internal::wasm::AsmJsParser::VarInfo"*, i1 zeroext) local_unnamed_addr #0 align 2 {
  %4 = alloca %"class.v8::internal::wasm::WasmInitExpr", align 8
  %5 = alloca %"class.v8::internal::wasm::WasmInitExpr", align 8
  %6 = alloca %"class.v8::internal::wasm::WasmInitExpr", align 8
  %7 = alloca %"class.v8::internal::wasm::WasmInitExpr", align 8
  %8 = getelementptr inbounds %"class.v8::internal::wasm::AsmJsParser", %"class.v8::internal::wasm::AsmJsParser"* %0, i64 0, i32 1, i32 1
  %9 = load i32, i32* %8, align 8
  %10 = icmp eq i32 %9, 43
  %11 = getelementptr inbounds %"class.v8::internal::wasm::AsmJsParser", %"class.v8::internal::wasm::AsmJsParser"* %0, i64 0, i32 1
  br i1 %10, label %12, label %130

12:                                               ; preds = %3
  tail call void @_ZN2v88internal12AsmJsScanner4NextEv(%"class.v8::internal::AsmJsScanner"* %11) #12
  %13 = load i32, i32* %8, align 8
  %14 = getelementptr inbounds %"class.v8::internal::wasm::AsmJsParser", %"class.v8::internal::wasm::AsmJsParser"* %0, i64 0, i32 21
  %15 = load i32, i32* %14, align 8
  %16 = icmp eq i32 %13, %15
  br i1 %16, label %24, label %17

17:                                               ; preds = %12
  %18 = getelementptr inbounds %"class.v8::internal::wasm::AsmJsParser", %"class.v8::internal::wasm::AsmJsParser"* %0, i64 0, i32 17
  store i8 1, i8* %18, align 4
  %19 = getelementptr inbounds %"class.v8::internal::wasm::AsmJsParser", %"class.v8::internal::wasm::AsmJsParser"* %0, i64 0, i32 18
  store i8* getelementptr inbounds ([17 x i8], [17 x i8]* @.str.3, i64 0, i64 0), i8** %19, align 8
  %20 = getelementptr inbounds %"class.v8::internal::wasm::AsmJsParser", %"class.v8::internal::wasm::AsmJsParser"* %0, i64 0, i32 1, i32 5
  %21 = load i64, i64* %20, align 8
  %22 = trunc i64 %21 to i32
  %23 = getelementptr inbounds %"class.v8::internal::wasm::AsmJsParser", %"class.v8::internal::wasm::AsmJsParser"* %0, i64 0, i32 19
  store i32 %22, i32* %23, align 8
  br label %282

24:                                               ; preds = %12
  tail call void @_ZN2v88internal12AsmJsScanner4NextEv(%"class.v8::internal::AsmJsScanner"* %11) #12
  %25 = load i32, i32* %8, align 8
  %26 = icmp eq i32 %25, 46
  br i1 %26, label %34, label %27

27:                                               ; preds = %24
  %28 = getelementptr inbounds %"class.v8::internal::wasm::AsmJsParser", %"class.v8::internal::wasm::AsmJsParser"* %0, i64 0, i32 17
  store i8 1, i8* %28, align 4
  %29 = getelementptr inbounds %"class.v8::internal::wasm::AsmJsParser", %"class.v8::internal::wasm::AsmJsParser"* %0, i64 0, i32 18
  store i8* getelementptr inbounds ([17 x i8], [17 x i8]* @.str.3, i64 0, i64 0), i8** %29, align 8
  %30 = getelementptr inbounds %"class.v8::internal::wasm::AsmJsParser", %"class.v8::internal::wasm::AsmJsParser"* %0, i64 0, i32 1, i32 5
  %31 = load i64, i64* %30, align 8
  %32 = trunc i64 %31 to i32
  %33 = getelementptr inbounds %"class.v8::internal::wasm::AsmJsParser", %"class.v8::internal::wasm::AsmJsParser"* %0, i64 0, i32 19
  store i32 %32, i32* %33, align 8
  br label %282

34:                                               ; preds = %24
  tail call void @_ZN2v88internal12AsmJsScanner4NextEv(%"class.v8::internal::AsmJsScanner"* %11) #12
  %35 = getelementptr inbounds %"class.v8::internal::wasm::AsmJsParser", %"class.v8::internal::wasm::AsmJsParser"* %0, i64 0, i32 1, i32 10
  %36 = getelementptr inbounds %"class.v8::internal::wasm::AsmJsParser", %"class.v8::internal::wasm::AsmJsParser"* %0, i64 0, i32 0
  %37 = load %"class.v8::internal::Zone"*, %"class.v8::internal::Zone"** %36, align 8
  %38 = bitcast %"class.std::__1::basic_string"* %35 to %"struct.std::__1::basic_string<char, std::__1::char_traits<char>, std::__1::allocator<char> >::__short"*
  %39 = getelementptr inbounds %"struct.std::__1::basic_string<char, std::__1::char_traits<char>, std::__1::allocator<char> >::__short", %"struct.std::__1::basic_string<char, std::__1::char_traits<char>, std::__1::allocator<char> >::__short"* %38, i64 0, i32 1, i32 0
  %40 = load i8, i8* %39, align 1
  %41 = icmp slt i8 %40, 0
  br i1 %41, label %42, label %45

42:                                               ; preds = %34
  %43 = getelementptr inbounds %"class.v8::internal::wasm::AsmJsParser", %"class.v8::internal::wasm::AsmJsParser"* %0, i64 0, i32 1, i32 10, i32 0, i32 0, i32 0, i32 0, i32 0, i32 1
  %44 = load i64, i64* %43, align 8
  br label %47

45:                                               ; preds = %34
  %46 = zext i8 %40 to i64
  br label %47

47:                                               ; preds = %45, %42
  %48 = phi i64 [ %44, %42 ], [ %46, %45 ]
  %49 = add i64 %48, 7
  %50 = and i64 %49, -8
  %51 = getelementptr inbounds %"class.v8::internal::Zone", %"class.v8::internal::Zone"* %37, i64 0, i32 2
  %52 = load i64, i64* %51, align 8
  %53 = getelementptr inbounds %"class.v8::internal::Zone", %"class.v8::internal::Zone"* %37, i64 0, i32 3
  %54 = load i64, i64* %53, align 8
  %55 = sub i64 %54, %52
  %56 = icmp ugt i64 %50, %55
  br i1 %56, label %57, label %59, !prof !2

57:                                               ; preds = %47
  %58 = tail call i64 @_ZN2v88internal4Zone9NewExpandEm(%"class.v8::internal::Zone"* %37, i64 %50) #12
  br label %61

59:                                               ; preds = %47
  %60 = add i64 %50, %52
  store i64 %60, i64* %51, align 8
  br label %61

61:                                               ; preds = %59, %57
  %62 = phi i64 [ %58, %57 ], [ %52, %59 ]
  %63 = inttoptr i64 %62 to i8*
  %64 = load i8, i8* %39, align 1
  %65 = icmp slt i8 %64, 0
  br i1 %65, label %66, label %69

66:                                               ; preds = %61
  %67 = getelementptr inbounds %"class.v8::internal::wasm::AsmJsParser", %"class.v8::internal::wasm::AsmJsParser"* %0, i64 0, i32 1, i32 10, i32 0, i32 0, i32 0, i32 0, i32 0, i32 1
  %68 = load i64, i64* %67, align 8
  br label %71

69:                                               ; preds = %61
  %70 = zext i8 %64 to i64
  br label %71

71:                                               ; preds = %69, %66
  %72 = phi i64 [ %68, %66 ], [ %70, %69 ]
  %73 = tail call i64 @_ZNKSt3__112basic_stringIcNS_11char_traitsIcEENS_9allocatorIcEEE4copyEPcmm(%"class.std::__1::basic_string"* %35, i8* %63, i64 %72, i64 0) #12
  %74 = load i8, i8* %39, align 1
  %75 = icmp slt i8 %74, 0
  br i1 %75, label %76, label %79

76:                                               ; preds = %71
  %77 = getelementptr inbounds %"class.v8::internal::wasm::AsmJsParser", %"class.v8::internal::wasm::AsmJsParser"* %0, i64 0, i32 1, i32 10, i32 0, i32 0, i32 0, i32 0, i32 0, i32 1
  %78 = load i64, i64* %77, align 8
  br label %81

79:                                               ; preds = %71
  %80 = zext i8 %74 to i64
  br label %81

81:                                               ; preds = %76, %79
  %82 = phi i64 [ %78, %76 ], [ %80, %79 ]
  %83 = shl i64 %82, 32
  %84 = ashr exact i64 %83, 32
  %85 = bitcast %"class.v8::internal::wasm::WasmInitExpr"* %5 to i8*
  call void @llvm.lifetime.start.p0i8(i64 32, i8* nonnull %85) #12
  %86 = bitcast %"class.v8::internal::wasm::WasmInitExpr"* %4 to i8*
  call void @llvm.lifetime.start.p0i8(i64 32, i8* nonnull %86) #12
  %87 = bitcast %"class.v8::internal::wasm::WasmInitExpr"* %5 to i32*
  store i32 0, i32* %87, align 8
  %88 = getelementptr inbounds %"class.v8::internal::wasm::WasmInitExpr", %"class.v8::internal::wasm::WasmInitExpr"* %5, i64 0, i32 1
  store i32 0, i32* %88, align 8
  %89 = zext i1 %2 to i8
  %90 = getelementptr inbounds %"struct.v8::internal::wasm::AsmJsParser::VarInfo", %"struct.v8::internal::wasm::AsmJsParser::VarInfo"* %1, i64 0, i32 5
  store i32 2, i32* %90, align 8
  %91 = getelementptr inbounds %"struct.v8::internal::wasm::AsmJsParser::VarInfo", %"struct.v8::internal::wasm::AsmJsParser::VarInfo"* %1, i64 0, i32 0
  store %"class.v8::internal::wasm::AsmType"* inttoptr (i64 237 to %"class.v8::internal::wasm::AsmType"*), %"class.v8::internal::wasm::AsmType"** %91, align 8
  %92 = getelementptr inbounds %"class.v8::internal::wasm::AsmJsParser", %"class.v8::internal::wasm::AsmJsParser"* %0, i64 0, i32 2
  %93 = load %"class.v8::internal::wasm::WasmModuleBuilder"*, %"class.v8::internal::wasm::WasmModuleBuilder"** %92, align 8
  call void @llvm.memcpy.p0i8.p0i8.i64(i8* nonnull align 8 %86, i8* nonnull align 8 %85, i64 20, i1 false) #12
  %94 = getelementptr inbounds %"class.v8::internal::wasm::WasmInitExpr", %"class.v8::internal::wasm::WasmInitExpr"* %4, i64 0, i32 2
  %95 = getelementptr inbounds %"class.v8::internal::wasm::WasmInitExpr", %"class.v8::internal::wasm::WasmInitExpr"* %5, i64 0, i32 2, i32 0, i32 0, i32 0
  store %"class.v8::internal::wasm::WasmInitExpr"* null, %"class.v8::internal::wasm::WasmInitExpr"** %95, align 8
  %96 = bitcast %"class.std::__1::unique_ptr.98"* %94 to i64*
  store i64 0, i64* %96, align 8
  %97 = tail call i32 @_ZN2v88internal4wasm17WasmModuleBuilder9AddGlobalENS1_9ValueTypeEbNS1_12WasmInitExprE(%"class.v8::internal::wasm::WasmModuleBuilder"* %93, i32 4, i1 zeroext true, %"class.v8::internal::wasm::WasmInitExpr"* nonnull byval(%"class.v8::internal::wasm::WasmInitExpr") align 8 %4) #12
  %98 = getelementptr inbounds %"struct.v8::internal::wasm::AsmJsParser::VarInfo", %"struct.v8::internal::wasm::AsmJsParser::VarInfo"* %1, i64 0, i32 4
  store i32 %97, i32* %98, align 4
  %99 = getelementptr inbounds %"struct.v8::internal::wasm::AsmJsParser::VarInfo", %"struct.v8::internal::wasm::AsmJsParser::VarInfo"* %1, i64 0, i32 6
  store i8 %89, i8* %99, align 4
  call void @_ZN2v88internal4wasm12WasmInitExprD2Ev(%"class.v8::internal::wasm::WasmInitExpr"* nonnull %5) #12
  call void @llvm.lifetime.end.p0i8(i64 32, i8* nonnull %85) #12
  call void @llvm.lifetime.end.p0i8(i64 32, i8* nonnull %86) #12
  %100 = getelementptr inbounds %"class.v8::internal::wasm::AsmJsParser", %"class.v8::internal::wasm::AsmJsParser"* %0, i64 0, i32 41, i32 0
  %101 = getelementptr inbounds %"class.v8::internal::wasm::AsmJsParser", %"class.v8::internal::wasm::AsmJsParser"* %0, i64 0, i32 41, i32 0, i32 0, i32 1, i32 1, i32 0, i32 0
  %102 = load %"class.v8::internal::Zone"*, %"class.v8::internal::Zone"** %101, align 8, !noalias !97
  %103 = getelementptr inbounds %"class.v8::internal::Zone", %"class.v8::internal::Zone"* %102, i64 0, i32 2
  %104 = load i64, i64* %103, align 8, !noalias !97
  %105 = getelementptr inbounds %"class.v8::internal::Zone", %"class.v8::internal::Zone"* %102, i64 0, i32 3
  %106 = load i64, i64* %105, align 8, !noalias !97
  %107 = sub i64 %106, %104
  %108 = icmp ult i64 %107, 48
  br i1 %108, label %109, label %111, !prof !2

109:                                              ; preds = %81
  %110 = call i64 @_ZN2v88internal4Zone9NewExpandEm(%"class.v8::internal::Zone"* %102, i64 48) #12, !noalias !97
  br label %113

111:                                              ; preds = %81
  %112 = add i64 %104, 48
  store i64 %112, i64* %103, align 8, !noalias !97
  br label %113

113:                                              ; preds = %109, %111
  %114 = phi i64 [ %110, %109 ], [ %104, %111 ]
  %115 = inttoptr i64 %114 to %"struct.std::__1::__list_node"*
  %116 = getelementptr inbounds %"struct.std::__1::__list_node", %"struct.std::__1::__list_node"* %115, i64 0, i32 0, i32 0
  store %"struct.std::__1::__list_node_base"* null, %"struct.std::__1::__list_node_base"** %116, align 8, !noalias !97
  %117 = getelementptr inbounds %"struct.std::__1::__list_node", %"struct.std::__1::__list_node"* %115, i64 0, i32 1, i32 0, i32 0
  store i8* %63, i8** %117, align 8
  %118 = getelementptr inbounds %"struct.std::__1::__list_node", %"struct.std::__1::__list_node"* %115, i64 0, i32 1, i32 0, i32 1
  store i64 %84, i64* %118, align 8
  %119 = getelementptr inbounds %"struct.std::__1::__list_node", %"struct.std::__1::__list_node"* %115, i64 0, i32 1, i32 1, i32 0
  store i32 4, i32* %119, align 8
  %120 = getelementptr inbounds %"struct.std::__1::__list_node", %"struct.std::__1::__list_node"* %115, i64 0, i32 1, i32 2
  store %"struct.v8::internal::wasm::AsmJsParser::VarInfo"* %1, %"struct.v8::internal::wasm::AsmJsParser::VarInfo"** %120, align 8
  %121 = getelementptr inbounds %"struct.std::__1::__list_node", %"struct.std::__1::__list_node"* %115, i64 0, i32 0
  %122 = getelementptr inbounds %"class.std::__1::list", %"class.std::__1::list"* %100, i64 0, i32 0, i32 0
  %123 = getelementptr inbounds %"struct.std::__1::__list_node", %"struct.std::__1::__list_node"* %115, i64 0, i32 0, i32 1
  store %"struct.std::__1::__list_node_base"* %122, %"struct.std::__1::__list_node_base"** %123, align 8
  %124 = getelementptr inbounds %"class.std::__1::list", %"class.std::__1::list"* %100, i64 0, i32 0, i32 0, i32 0
  %125 = load %"struct.std::__1::__list_node_base"*, %"struct.std::__1::__list_node_base"** %124, align 8
  store %"struct.std::__1::__list_node_base"* %125, %"struct.std::__1::__list_node_base"** %116, align 8
  %126 = getelementptr inbounds %"struct.std::__1::__list_node_base", %"struct.std::__1::__list_node_base"* %125, i64 0, i32 1
  store %"struct.std::__1::__list_node_base"* %121, %"struct.std::__1::__list_node_base"** %126, align 8
  store %"struct.std::__1::__list_node_base"* %121, %"struct.std::__1::__list_node_base"** %124, align 8
  %127 = getelementptr inbounds %"class.v8::internal::wasm::AsmJsParser", %"class.v8::internal::wasm::AsmJsParser"* %0, i64 0, i32 41, i32 0, i32 0, i32 1, i32 0, i32 0
  %128 = load i64, i64* %127, align 8
  %129 = add i64 %128, 1
  store i64 %129, i64* %127, align 8
  call void @_ZN2v88internal12AsmJsScanner4NextEv(%"class.v8::internal::AsmJsScanner"* %11) #12
  br label %282

130:                                              ; preds = %3
  %131 = getelementptr inbounds %"class.v8::internal::wasm::AsmJsParser", %"class.v8::internal::wasm::AsmJsParser"* %0, i64 0, i32 21
  %132 = load i32, i32* %131, align 8
  %133 = icmp eq i32 %9, %132
  br i1 %133, label %141, label %134

134:                                              ; preds = %130
  %135 = getelementptr inbounds %"class.v8::internal::wasm::AsmJsParser", %"class.v8::internal::wasm::AsmJsParser"* %0, i64 0, i32 17
  store i8 1, i8* %135, align 4
  %136 = getelementptr inbounds %"class.v8::internal::wasm::AsmJsParser", %"class.v8::internal::wasm::AsmJsParser"* %0, i64 0, i32 18
  store i8* getelementptr inbounds ([17 x i8], [17 x i8]* @.str.3, i64 0, i64 0), i8** %136, align 8
  %137 = getelementptr inbounds %"class.v8::internal::wasm::AsmJsParser", %"class.v8::internal::wasm::AsmJsParser"* %0, i64 0, i32 1, i32 5
  %138 = load i64, i64* %137, align 8
  %139 = trunc i64 %138 to i32
  %140 = getelementptr inbounds %"class.v8::internal::wasm::AsmJsParser", %"class.v8::internal::wasm::AsmJsParser"* %0, i64 0, i32 19
  store i32 %139, i32* %140, align 8
  br label %282

141:                                              ; preds = %130
  tail call void @_ZN2v88internal12AsmJsScanner4NextEv(%"class.v8::internal::AsmJsScanner"* %11) #12
  %142 = load i32, i32* %8, align 8
  %143 = icmp eq i32 %142, 46
  br i1 %143, label %151, label %144

144:                                              ; preds = %141
  %145 = getelementptr inbounds %"class.v8::internal::wasm::AsmJsParser", %"class.v8::internal::wasm::AsmJsParser"* %0, i64 0, i32 17
  store i8 1, i8* %145, align 4
  %146 = getelementptr inbounds %"class.v8::internal::wasm::AsmJsParser", %"class.v8::internal::wasm::AsmJsParser"* %0, i64 0, i32 18
  store i8* getelementptr inbounds ([17 x i8], [17 x i8]* @.str.3, i64 0, i64 0), i8** %146, align 8
  %147 = getelementptr inbounds %"class.v8::internal::wasm::AsmJsParser", %"class.v8::internal::wasm::AsmJsParser"* %0, i64 0, i32 1, i32 5
  %148 = load i64, i64* %147, align 8
  %149 = trunc i64 %148 to i32
  %150 = getelementptr inbounds %"class.v8::internal::wasm::AsmJsParser", %"class.v8::internal::wasm::AsmJsParser"* %0, i64 0, i32 19
  store i32 %149, i32* %150, align 8
  br label %282

151:                                              ; preds = %141
  tail call void @_ZN2v88internal12AsmJsScanner4NextEv(%"class.v8::internal::AsmJsScanner"* %11) #12
  %152 = getelementptr inbounds %"class.v8::internal::wasm::AsmJsParser", %"class.v8::internal::wasm::AsmJsParser"* %0, i64 0, i32 1, i32 10
  %153 = getelementptr inbounds %"class.v8::internal::wasm::AsmJsParser", %"class.v8::internal::wasm::AsmJsParser"* %0, i64 0, i32 0
  %154 = load %"class.v8::internal::Zone"*, %"class.v8::internal::Zone"** %153, align 8
  %155 = bitcast %"class.std::__1::basic_string"* %152 to %"struct.std::__1::basic_string<char, std::__1::char_traits<char>, std::__1::allocator<char> >::__short"*
  %156 = getelementptr inbounds %"struct.std::__1::basic_string<char, std::__1::char_traits<char>, std::__1::allocator<char> >::__short", %"struct.std::__1::basic_string<char, std::__1::char_traits<char>, std::__1::allocator<char> >::__short"* %155, i64 0, i32 1, i32 0
  %157 = load i8, i8* %156, align 1
  %158 = icmp slt i8 %157, 0
  br i1 %158, label %159, label %162

159:                                              ; preds = %151
  %160 = getelementptr inbounds %"class.v8::internal::wasm::AsmJsParser", %"class.v8::internal::wasm::AsmJsParser"* %0, i64 0, i32 1, i32 10, i32 0, i32 0, i32 0, i32 0, i32 0, i32 1
  %161 = load i64, i64* %160, align 8
  br label %164

162:                                              ; preds = %151
  %163 = zext i8 %157 to i64
  br label %164

164:                                              ; preds = %162, %159
  %165 = phi i64 [ %161, %159 ], [ %163, %162 ]
  %166 = add i64 %165, 7
  %167 = and i64 %166, -8
  %168 = getelementptr inbounds %"class.v8::internal::Zone", %"class.v8::internal::Zone"* %154, i64 0, i32 2
  %169 = load i64, i64* %168, align 8
  %170 = getelementptr inbounds %"class.v8::internal::Zone", %"class.v8::internal::Zone"* %154, i64 0, i32 3
  %171 = load i64, i64* %170, align 8
  %172 = sub i64 %171, %169
  %173 = icmp ugt i64 %167, %172
  br i1 %173, label %174, label %176, !prof !2

174:                                              ; preds = %164
  %175 = tail call i64 @_ZN2v88internal4Zone9NewExpandEm(%"class.v8::internal::Zone"* %154, i64 %167) #12
  br label %178

176:                                              ; preds = %164
  %177 = add i64 %167, %169
  store i64 %177, i64* %168, align 8
  br label %178

178:                                              ; preds = %176, %174
  %179 = phi i64 [ %175, %174 ], [ %169, %176 ]
  %180 = inttoptr i64 %179 to i8*
  %181 = load i8, i8* %156, align 1
  %182 = icmp slt i8 %181, 0
  br i1 %182, label %183, label %186

183:                                              ; preds = %178
  %184 = getelementptr inbounds %"class.v8::internal::wasm::AsmJsParser", %"class.v8::internal::wasm::AsmJsParser"* %0, i64 0, i32 1, i32 10, i32 0, i32 0, i32 0, i32 0, i32 0, i32 1
  %185 = load i64, i64* %184, align 8
  br label %188

186:                                              ; preds = %178
  %187 = zext i8 %181 to i64
  br label %188

188:                                              ; preds = %186, %183
  %189 = phi i64 [ %185, %183 ], [ %187, %186 ]
  %190 = tail call i64 @_ZNKSt3__112basic_stringIcNS_11char_traitsIcEENS_9allocatorIcEEE4copyEPcmm(%"class.std::__1::basic_string"* %152, i8* %180, i64 %189, i64 0) #12
  %191 = load i8, i8* %156, align 1
  %192 = icmp slt i8 %191, 0
  br i1 %192, label %193, label %196

193:                                              ; preds = %188
  %194 = getelementptr inbounds %"class.v8::internal::wasm::AsmJsParser", %"class.v8::internal::wasm::AsmJsParser"* %0, i64 0, i32 1, i32 10, i32 0, i32 0, i32 0, i32 0, i32 0, i32 1
  %195 = load i64, i64* %194, align 8
  br label %198

196:                                              ; preds = %188
  %197 = zext i8 %191 to i64
  br label %198

198:                                              ; preds = %193, %196
  %199 = phi i64 [ %195, %193 ], [ %197, %196 ]
  %200 = shl i64 %199, 32
  %201 = ashr exact i64 %200, 32
  tail call void @_ZN2v88internal12AsmJsScanner4NextEv(%"class.v8::internal::AsmJsScanner"* %11) #12
  %202 = load i32, i32* %8, align 8
  %203 = icmp eq i32 %202, 124
  br i1 %203, label %204, label %264

204:                                              ; preds = %198
  tail call void @_ZN2v88internal12AsmJsScanner4NextEv(%"class.v8::internal::AsmJsScanner"* %11) #12
  %205 = load i32, i32* %8, align 8
  %206 = icmp eq i32 %205, -3
  br i1 %206, label %207, label %211

207:                                              ; preds = %204
  %208 = getelementptr inbounds %"class.v8::internal::wasm::AsmJsParser", %"class.v8::internal::wasm::AsmJsParser"* %0, i64 0, i32 1, i32 19
  %209 = load i32, i32* %208, align 8
  %210 = icmp eq i32 %209, 0
  br i1 %210, label %218, label %211

211:                                              ; preds = %207, %204
  %212 = getelementptr inbounds %"class.v8::internal::wasm::AsmJsParser", %"class.v8::internal::wasm::AsmJsParser"* %0, i64 0, i32 17
  store i8 1, i8* %212, align 4
  %213 = getelementptr inbounds %"class.v8::internal::wasm::AsmJsParser", %"class.v8::internal::wasm::AsmJsParser"* %0, i64 0, i32 18
  store i8* getelementptr inbounds ([55 x i8], [55 x i8]* @.str.17, i64 0, i64 0), i8** %213, align 8
  %214 = getelementptr inbounds %"class.v8::internal::wasm::AsmJsParser", %"class.v8::internal::wasm::AsmJsParser"* %0, i64 0, i32 1, i32 5
  %215 = load i64, i64* %214, align 8
  %216 = trunc i64 %215 to i32
  %217 = getelementptr inbounds %"class.v8::internal::wasm::AsmJsParser", %"class.v8::internal::wasm::AsmJsParser"* %0, i64 0, i32 19
  store i32 %216, i32* %217, align 8
  br label %282

218:                                              ; preds = %207
  tail call void @_ZN2v88internal12AsmJsScanner4NextEv(%"class.v8::internal::AsmJsScanner"* %11) #12
  %219 = bitcast %"class.v8::internal::wasm::WasmInitExpr"* %7 to i8*
  call void @llvm.lifetime.start.p0i8(i64 32, i8* nonnull %219) #12
  %220 = bitcast %"class.v8::internal::wasm::WasmInitExpr"* %6 to i8*
  call void @llvm.lifetime.start.p0i8(i64 32, i8* nonnull %220) #12
  %221 = bitcast %"class.v8::internal::wasm::WasmInitExpr"* %7 to i32*
  store i32 0, i32* %221, align 8
  %222 = getelementptr inbounds %"class.v8::internal::wasm::WasmInitExpr", %"class.v8::internal::wasm::WasmInitExpr"* %7, i64 0, i32 1
  store i32 0, i32* %222, align 8
  %223 = zext i1 %2 to i8
  %224 = getelementptr inbounds %"struct.v8::internal::wasm::AsmJsParser::VarInfo", %"struct.v8::internal::wasm::AsmJsParser::VarInfo"* %1, i64 0, i32 5
  store i32 2, i32* %224, align 8
  %225 = getelementptr inbounds %"struct.v8::internal::wasm::AsmJsParser::VarInfo", %"struct.v8::internal::wasm::AsmJsParser::VarInfo"* %1, i64 0, i32 0
  store %"class.v8::internal::wasm::AsmType"* inttoptr (i64 769 to %"class.v8::internal::wasm::AsmType"*), %"class.v8::internal::wasm::AsmType"** %225, align 8
  %226 = getelementptr inbounds %"class.v8::internal::wasm::AsmJsParser", %"class.v8::internal::wasm::AsmJsParser"* %0, i64 0, i32 2
  %227 = load %"class.v8::internal::wasm::WasmModuleBuilder"*, %"class.v8::internal::wasm::WasmModuleBuilder"** %226, align 8
  call void @llvm.memcpy.p0i8.p0i8.i64(i8* nonnull align 8 %220, i8* nonnull align 8 %219, i64 20, i1 false) #12
  %228 = getelementptr inbounds %"class.v8::internal::wasm::WasmInitExpr", %"class.v8::internal::wasm::WasmInitExpr"* %6, i64 0, i32 2
  %229 = getelementptr inbounds %"class.v8::internal::wasm::WasmInitExpr", %"class.v8::internal::wasm::WasmInitExpr"* %7, i64 0, i32 2, i32 0, i32 0, i32 0
  store %"class.v8::internal::wasm::WasmInitExpr"* null, %"class.v8::internal::wasm::WasmInitExpr"** %229, align 8
  %230 = bitcast %"class.std::__1::unique_ptr.98"* %228 to i64*
  store i64 0, i64* %230, align 8
  %231 = tail call i32 @_ZN2v88internal4wasm17WasmModuleBuilder9AddGlobalENS1_9ValueTypeEbNS1_12WasmInitExprE(%"class.v8::internal::wasm::WasmModuleBuilder"* %227, i32 1, i1 zeroext true, %"class.v8::internal::wasm::WasmInitExpr"* nonnull byval(%"class.v8::internal::wasm::WasmInitExpr") align 8 %6) #12
  %232 = getelementptr inbounds %"struct.v8::internal::wasm::AsmJsParser::VarInfo", %"struct.v8::internal::wasm::AsmJsParser::VarInfo"* %1, i64 0, i32 4
  store i32 %231, i32* %232, align 4
  %233 = getelementptr inbounds %"struct.v8::internal::wasm::AsmJsParser::VarInfo", %"struct.v8::internal::wasm::AsmJsParser::VarInfo"* %1, i64 0, i32 6
  store i8 %223, i8* %233, align 4
  call void @_ZN2v88internal4wasm12WasmInitExprD2Ev(%"class.v8::internal::wasm::WasmInitExpr"* nonnull %7) #12
  call void @llvm.lifetime.end.p0i8(i64 32, i8* nonnull %219) #12
  call void @llvm.lifetime.end.p0i8(i64 32, i8* nonnull %220) #12
  %234 = getelementptr inbounds %"class.v8::internal::wasm::AsmJsParser", %"class.v8::internal::wasm::AsmJsParser"* %0, i64 0, i32 41, i32 0
  %235 = getelementptr inbounds %"class.v8::internal::wasm::AsmJsParser", %"class.v8::internal::wasm::AsmJsParser"* %0, i64 0, i32 41, i32 0, i32 0, i32 1, i32 1, i32 0, i32 0
  %236 = load %"class.v8::internal::Zone"*, %"class.v8::internal::Zone"** %235, align 8, !noalias !100
  %237 = getelementptr inbounds %"class.v8::internal::Zone", %"class.v8::internal::Zone"* %236, i64 0, i32 2
  %238 = load i64, i64* %237, align 8, !noalias !100
  %239 = getelementptr inbounds %"class.v8::internal::Zone", %"class.v8::internal::Zone"* %236, i64 0, i32 3
  %240 = load i64, i64* %239, align 8, !noalias !100
  %241 = sub i64 %240, %238
  %242 = icmp ult i64 %241, 48
  br i1 %242, label %243, label %245, !prof !2

243:                                              ; preds = %218
  %244 = call i64 @_ZN2v88internal4Zone9NewExpandEm(%"class.v8::internal::Zone"* %236, i64 48) #12, !noalias !100
  br label %247

245:                                              ; preds = %218
  %246 = add i64 %238, 48
  store i64 %246, i64* %237, align 8, !noalias !100
  br label %247

247:                                              ; preds = %243, %245
  %248 = phi i64 [ %244, %243 ], [ %238, %245 ]
  %249 = inttoptr i64 %248 to %"struct.std::__1::__list_node"*
  %250 = getelementptr inbounds %"struct.std::__1::__list_node", %"struct.std::__1::__list_node"* %249, i64 0, i32 0, i32 0
  store %"struct.std::__1::__list_node_base"* null, %"struct.std::__1::__list_node_base"** %250, align 8, !noalias !100
  %251 = getelementptr inbounds %"struct.std::__1::__list_node", %"struct.std::__1::__list_node"* %249, i64 0, i32 1, i32 0, i32 0
  store i8* %180, i8** %251, align 8
  %252 = getelementptr inbounds %"struct.std::__1::__list_node", %"struct.std::__1::__list_node"* %249, i64 0, i32 1, i32 0, i32 1
  store i64 %201, i64* %252, align 8
  %253 = getelementptr inbounds %"struct.std::__1::__list_node", %"struct.std::__1::__list_node"* %249, i64 0, i32 1, i32 1, i32 0
  store i32 1, i32* %253, align 8
  %254 = getelementptr inbounds %"struct.std::__1::__list_node", %"struct.std::__1::__list_node"* %249, i64 0, i32 1, i32 2
  store %"struct.v8::internal::wasm::AsmJsParser::VarInfo"* %1, %"struct.v8::internal::wasm::AsmJsParser::VarInfo"** %254, align 8
  %255 = getelementptr inbounds %"struct.std::__1::__list_node", %"struct.std::__1::__list_node"* %249, i64 0, i32 0
  %256 = getelementptr inbounds %"class.std::__1::list", %"class.std::__1::list"* %234, i64 0, i32 0, i32 0
  %257 = getelementptr inbounds %"struct.std::__1::__list_node", %"struct.std::__1::__list_node"* %249, i64 0, i32 0, i32 1
  store %"struct.std::__1::__list_node_base"* %256, %"struct.std::__1::__list_node_base"** %257, align 8
  %258 = getelementptr inbounds %"class.std::__1::list", %"class.std::__1::list"* %234, i64 0, i32 0, i32 0, i32 0
  %259 = load %"struct.std::__1::__list_node_base"*, %"struct.std::__1::__list_node_base"** %258, align 8
  store %"struct.std::__1::__list_node_base"* %259, %"struct.std::__1::__list_node_base"** %250, align 8
  %260 = getelementptr inbounds %"struct.std::__1::__list_node_base", %"struct.std::__1::__list_node_base"* %259, i64 0, i32 1
  store %"struct.std::__1::__list_node_base"* %255, %"struct.std::__1::__list_node_base"** %260, align 8
  store %"struct.std::__1::__list_node_base"* %255, %"struct.std::__1::__list_node_base"** %258, align 8
  %261 = getelementptr inbounds %"class.v8::internal::wasm::AsmJsParser", %"class.v8::internal::wasm::AsmJsParser"* %0, i64 0, i32 41, i32 0, i32 0, i32 1, i32 0, i32 0
  %262 = load i64, i64* %261, align 8
  %263 = add i64 %262, 1
  store i64 %263, i64* %261, align 8
  br label %282

264:                                              ; preds = %198
  %265 = getelementptr inbounds %"struct.v8::internal::wasm::AsmJsParser::VarInfo", %"struct.v8::internal::wasm::AsmJsParser::VarInfo"* %1, i64 0, i32 5
  store i32 6, i32* %265, align 8
  %266 = load %"class.v8::internal::Zone"*, %"class.v8::internal::Zone"** %153, align 8
  %267 = getelementptr inbounds %"class.v8::internal::Zone", %"class.v8::internal::Zone"* %266, i64 0, i32 2
  %268 = load i64, i64* %267, align 8
  %269 = getelementptr inbounds %"class.v8::internal::Zone", %"class.v8::internal::Zone"* %266, i64 0, i32 3
  %270 = load i64, i64* %269, align 8
  %271 = sub i64 %270, %268
  %272 = icmp ult i64 %271, 72
  br i1 %272, label %273, label %275, !prof !2

273:                                              ; preds = %264
  %274 = tail call i64 @_ZN2v88internal4Zone9NewExpandEm(%"class.v8::internal::Zone"* %266, i64 72) #12
  br label %277

275:                                              ; preds = %264
  %276 = add i64 %268, 72
  store i64 %276, i64* %267, align 8
  br label %277

277:                                              ; preds = %273, %275
  %278 = phi i64 [ %274, %273 ], [ %268, %275 ]
  %279 = inttoptr i64 %278 to %"struct.v8::internal::wasm::AsmJsParser::FunctionImportInfo"*
  tail call void @_ZN2v88internal4wasm11AsmJsParser18FunctionImportInfoC2ENS0_6VectorIKcEEPNS0_4ZoneE(%"struct.v8::internal::wasm::AsmJsParser::FunctionImportInfo"* %279, i8* %180, i64 %201, %"class.v8::internal::Zone"* %266) #12
  %280 = getelementptr inbounds %"struct.v8::internal::wasm::AsmJsParser::VarInfo", %"struct.v8::internal::wasm::AsmJsParser::VarInfo"* %1, i64 0, i32 2
  store %"struct.v8::internal::wasm::AsmJsParser::FunctionImportInfo"* %279, %"struct.v8::internal::wasm::AsmJsParser::FunctionImportInfo"** %280, align 8
  %281 = getelementptr inbounds %"struct.v8::internal::wasm::AsmJsParser::VarInfo", %"struct.v8::internal::wasm::AsmJsParser::VarInfo"* %1, i64 0, i32 6
  store i8 0, i8* %281, align 4
  br label %282

282:                                              ; preds = %113, %144, %134, %27, %17, %247, %277, %211
  ret void
}

; Function Attrs: nounwind ssp uwtable
define hidden void @_ZN2v88internal4wasm11AsmJsParser27ValidateModuleVarFromGlobalEPNS2_7VarInfoEb(%"class.v8::internal::wasm::AsmJsParser"*, %"struct.v8::internal::wasm::AsmJsParser::VarInfo"* nocapture, i1 zeroext) local_unnamed_addr #0 align 2 {
  %4 = alloca %"class.v8::internal::wasm::WasmInitExpr", align 8
  %5 = alloca %"class.v8::internal::wasm::WasmInitExpr", align 8
  %6 = alloca %"class.v8::internal::wasm::WasmInitExpr", align 8
  %7 = alloca %"class.v8::internal::wasm::WasmInitExpr", align 8
  %8 = alloca [12 x i8], align 4
  %9 = alloca [12 x i8], align 4
  %10 = getelementptr inbounds %"class.v8::internal::wasm::AsmJsParser", %"class.v8::internal::wasm::AsmJsParser"* %0, i64 0, i32 1
  %11 = getelementptr inbounds %"class.v8::internal::wasm::AsmJsParser", %"class.v8::internal::wasm::AsmJsParser"* %0, i64 0, i32 1, i32 1
  %12 = load i32, i32* %11, align 8
  tail call void @_ZN2v88internal12AsmJsScanner4NextEv(%"class.v8::internal::AsmJsScanner"* %10) #12
  %13 = icmp sgt i32 %12, 255
  %14 = getelementptr inbounds %"class.v8::internal::wasm::AsmJsParser", %"class.v8::internal::wasm::AsmJsParser"* %0, i64 0, i32 7
  %15 = getelementptr inbounds %"class.v8::internal::wasm::AsmJsParser", %"class.v8::internal::wasm::AsmJsParser"* %0, i64 0, i32 8
  %16 = select i1 %13, %"class.v8::internal::Vector.160"* %14, %"class.v8::internal::Vector.160"* %15
  %17 = getelementptr inbounds %"class.v8::internal::Vector.160", %"class.v8::internal::Vector.160"* %16, i64 0, i32 1
  %18 = load i64, i64* %17, align 8
  br i1 %13, label %22, label %19

19:                                               ; preds = %3
  %20 = sub nsw i32 -10000, %12
  %21 = sext i32 %20 to i64
  br label %30

22:                                               ; preds = %3
  %23 = add nsw i32 %12, -256
  %24 = sext i32 %23 to i64
  %25 = getelementptr inbounds %"class.v8::internal::wasm::AsmJsParser", %"class.v8::internal::wasm::AsmJsParser"* %0, i64 0, i32 9
  %26 = load i64, i64* %25, align 8
  %27 = icmp ugt i64 %26, %24
  br i1 %27, label %30, label %28

28:                                               ; preds = %22
  %29 = add nuw nsw i64 %24, 1
  store i64 %29, i64* %25, align 8
  br label %30

30:                                               ; preds = %28, %22, %19
  %31 = phi i64 [ %24, %28 ], [ %24, %22 ], [ %21, %19 ]
  %32 = add nsw i64 %31, 1
  %33 = icmp ugt i64 %32, %18
  br i1 %33, label %37, label %34

34:                                               ; preds = %30
  %35 = getelementptr inbounds %"class.v8::internal::Vector.160", %"class.v8::internal::Vector.160"* %16, i64 0, i32 0
  %36 = load %"struct.v8::internal::wasm::AsmJsParser::VarInfo"*, %"struct.v8::internal::wasm::AsmJsParser::VarInfo"** %35, align 8
  br label %78

37:                                               ; preds = %30
  %38 = shl i64 %18, 1
  %39 = icmp ult i64 %38, %32
  %40 = select i1 %39, i64 %32, i64 %38
  %41 = getelementptr inbounds %"class.v8::internal::wasm::AsmJsParser", %"class.v8::internal::wasm::AsmJsParser"* %0, i64 0, i32 0
  %42 = load %"class.v8::internal::Zone"*, %"class.v8::internal::Zone"** %41, align 8
  %43 = mul i64 %40, 40
  %44 = getelementptr inbounds %"class.v8::internal::Zone", %"class.v8::internal::Zone"* %42, i64 0, i32 2
  %45 = load i64, i64* %44, align 8
  %46 = getelementptr inbounds %"class.v8::internal::Zone", %"class.v8::internal::Zone"* %42, i64 0, i32 3
  %47 = load i64, i64* %46, align 8
  %48 = sub i64 %47, %45
  %49 = icmp ugt i64 %43, %48
  br i1 %49, label %50, label %52, !prof !2

50:                                               ; preds = %37
  %51 = tail call i64 @_ZN2v88internal4Zone9NewExpandEm(%"class.v8::internal::Zone"* %42, i64 %43) #12
  br label %54

52:                                               ; preds = %37
  %53 = add i64 %45, %43
  store i64 %53, i64* %44, align 8
  br label %54

54:                                               ; preds = %52, %50
  %55 = phi i64 [ %51, %50 ], [ %45, %52 ]
  %56 = inttoptr i64 %55 to %"struct.v8::internal::wasm::AsmJsParser::VarInfo"*
  %57 = getelementptr inbounds %"struct.v8::internal::wasm::AsmJsParser::VarInfo", %"struct.v8::internal::wasm::AsmJsParser::VarInfo"* %56, i64 %40
  %58 = icmp eq i64 %40, 0
  br i1 %58, label %68, label %59

59:                                               ; preds = %54, %59
  %60 = phi %"struct.v8::internal::wasm::AsmJsParser::VarInfo"* [ %66, %59 ], [ %56, %54 ]
  %61 = getelementptr inbounds %"struct.v8::internal::wasm::AsmJsParser::VarInfo", %"struct.v8::internal::wasm::AsmJsParser::VarInfo"* %60, i64 0, i32 0
  store %"class.v8::internal::wasm::AsmType"* inttoptr (i64 2147483649 to %"class.v8::internal::wasm::AsmType"*), %"class.v8::internal::wasm::AsmType"** %61, align 8
  %62 = getelementptr inbounds %"struct.v8::internal::wasm::AsmJsParser::VarInfo", %"struct.v8::internal::wasm::AsmJsParser::VarInfo"* %60, i64 0, i32 1
  %63 = getelementptr inbounds %"struct.v8::internal::wasm::AsmJsParser::VarInfo", %"struct.v8::internal::wasm::AsmJsParser::VarInfo"* %60, i64 0, i32 6
  %64 = bitcast %"class.v8::internal::wasm::WasmFunctionBuilder"** %62 to i8*
  tail call void @llvm.memset.p0i8.i64(i8* align 8 %64, i8 0, i64 28, i1 false) #12
  store i8 1, i8* %63, align 4
  %65 = getelementptr inbounds %"struct.v8::internal::wasm::AsmJsParser::VarInfo", %"struct.v8::internal::wasm::AsmJsParser::VarInfo"* %60, i64 0, i32 7
  store i8 0, i8* %65, align 1
  %66 = getelementptr inbounds %"struct.v8::internal::wasm::AsmJsParser::VarInfo", %"struct.v8::internal::wasm::AsmJsParser::VarInfo"* %60, i64 1
  %67 = icmp eq %"struct.v8::internal::wasm::AsmJsParser::VarInfo"* %66, %57
  br i1 %67, label %68, label %59

68:                                               ; preds = %59, %54
  %69 = getelementptr inbounds %"class.v8::internal::Vector.160", %"class.v8::internal::Vector.160"* %16, i64 0, i32 0
  %70 = load i64, i64* %17, align 8
  %71 = mul nuw i64 %70, 40
  %72 = icmp eq i64 %71, 0
  br i1 %72, label %77, label %73

73:                                               ; preds = %68
  %74 = bitcast %"class.v8::internal::Vector.160"* %16 to i8**
  %75 = load i8*, i8** %74, align 8
  %76 = inttoptr i64 %55 to i8*
  tail call void @llvm.memmove.p0i8.p0i8.i64(i8* align 8 %76, i8* align 8 %75, i64 %71, i1 false) #12
  br label %77

77:                                               ; preds = %73, %68
  store %"struct.v8::internal::wasm::AsmJsParser::VarInfo"* %56, %"struct.v8::internal::wasm::AsmJsParser::VarInfo"** %69, align 8
  store i64 %40, i64* %17, align 8
  br label %78

78:                                               ; preds = %34, %77
  %79 = phi %"struct.v8::internal::wasm::AsmJsParser::VarInfo"* [ %36, %34 ], [ %56, %77 ]
  %80 = getelementptr inbounds %"struct.v8::internal::wasm::AsmJsParser::VarInfo", %"struct.v8::internal::wasm::AsmJsParser::VarInfo"* %79, i64 %31
  %81 = getelementptr inbounds %"struct.v8::internal::wasm::AsmJsParser::VarInfo", %"struct.v8::internal::wasm::AsmJsParser::VarInfo"* %80, i64 0, i32 0
  %82 = load %"class.v8::internal::wasm::AsmType"*, %"class.v8::internal::wasm::AsmType"** %81, align 8
  %83 = getelementptr inbounds %"class.v8::internal::wasm::AsmJsParser", %"class.v8::internal::wasm::AsmJsParser"* %0, i64 0, i32 33
  %84 = load %"class.v8::internal::wasm::AsmType"*, %"class.v8::internal::wasm::AsmType"** %83, align 8
  %85 = tail call zeroext i1 @_ZN2v88internal4wasm7AsmType3IsAEPS2_(%"class.v8::internal::wasm::AsmType"* %82, %"class.v8::internal::wasm::AsmType"* %84) #12
  br i1 %85, label %130, label %86

86:                                               ; preds = %78
  %87 = getelementptr inbounds %"struct.v8::internal::wasm::AsmJsParser::VarInfo", %"struct.v8::internal::wasm::AsmJsParser::VarInfo"* %79, i64 %31, i32 6
  %88 = load i8, i8* %87, align 4, !range !69
  %89 = icmp eq i8 %88, 0
  br i1 %89, label %97, label %90

90:                                               ; preds = %86
  %91 = getelementptr inbounds %"class.v8::internal::wasm::AsmJsParser", %"class.v8::internal::wasm::AsmJsParser"* %0, i64 0, i32 17
  store i8 1, i8* %91, align 4
  %92 = getelementptr inbounds %"class.v8::internal::wasm::AsmJsParser", %"class.v8::internal::wasm::AsmJsParser"* %0, i64 0, i32 18
  store i8* getelementptr inbounds ([54 x i8], [54 x i8]* @.str.14, i64 0, i64 0), i8** %92, align 8
  %93 = getelementptr inbounds %"class.v8::internal::wasm::AsmJsParser", %"class.v8::internal::wasm::AsmJsParser"* %0, i64 0, i32 1, i32 5
  %94 = load i64, i64* %93, align 8
  %95 = trunc i64 %94 to i32
  %96 = getelementptr inbounds %"class.v8::internal::wasm::AsmJsParser", %"class.v8::internal::wasm::AsmJsParser"* %0, i64 0, i32 19
  store i32 %95, i32* %96, align 8
  br label %229

97:                                               ; preds = %86
  br i1 %2, label %98, label %105

98:                                               ; preds = %97
  %99 = getelementptr inbounds %"class.v8::internal::wasm::AsmJsParser", %"class.v8::internal::wasm::AsmJsParser"* %0, i64 0, i32 17
  store i8 1, i8* %99, align 4
  %100 = getelementptr inbounds %"class.v8::internal::wasm::AsmJsParser", %"class.v8::internal::wasm::AsmJsParser"* %0, i64 0, i32 18
  store i8* getelementptr inbounds ([58 x i8], [58 x i8]* @.str.15, i64 0, i64 0), i8** %100, align 8
  %101 = getelementptr inbounds %"class.v8::internal::wasm::AsmJsParser", %"class.v8::internal::wasm::AsmJsParser"* %0, i64 0, i32 1, i32 5
  %102 = load i64, i64* %101, align 8
  %103 = trunc i64 %102 to i32
  %104 = getelementptr inbounds %"class.v8::internal::wasm::AsmJsParser", %"class.v8::internal::wasm::AsmJsParser"* %0, i64 0, i32 19
  store i32 %103, i32* %104, align 8
  br label %229

105:                                              ; preds = %97
  %106 = load %"class.v8::internal::wasm::AsmType"*, %"class.v8::internal::wasm::AsmType"** %81, align 8
  %107 = tail call zeroext i1 @_ZN2v88internal4wasm7AsmType3IsAEPS2_(%"class.v8::internal::wasm::AsmType"* %106, %"class.v8::internal::wasm::AsmType"* nonnull inttoptr (i64 769 to %"class.v8::internal::wasm::AsmType"*)) #12
  br i1 %107, label %121, label %108

108:                                              ; preds = %105
  %109 = load %"class.v8::internal::wasm::AsmType"*, %"class.v8::internal::wasm::AsmType"** %81, align 8
  %110 = tail call zeroext i1 @_ZN2v88internal4wasm7AsmType3IsAEPS2_(%"class.v8::internal::wasm::AsmType"* %109, %"class.v8::internal::wasm::AsmType"* nonnull inttoptr (i64 57357 to %"class.v8::internal::wasm::AsmType"*)) #12
  br i1 %110, label %121, label %111

111:                                              ; preds = %108
  %112 = load %"class.v8::internal::wasm::AsmType"*, %"class.v8::internal::wasm::AsmType"** %81, align 8
  %113 = tail call zeroext i1 @_ZN2v88internal4wasm7AsmType3IsAEPS2_(%"class.v8::internal::wasm::AsmType"* %112, %"class.v8::internal::wasm::AsmType"* nonnull inttoptr (i64 237 to %"class.v8::internal::wasm::AsmType"*)) #12
  br i1 %113, label %121, label %114

114:                                              ; preds = %111
  %115 = getelementptr inbounds %"class.v8::internal::wasm::AsmJsParser", %"class.v8::internal::wasm::AsmJsParser"* %0, i64 0, i32 17
  store i8 1, i8* %115, align 4
  %116 = getelementptr inbounds %"class.v8::internal::wasm::AsmJsParser", %"class.v8::internal::wasm::AsmJsParser"* %0, i64 0, i32 18
  store i8* getelementptr inbounds ([61 x i8], [61 x i8]* @.str.16, i64 0, i64 0), i8** %116, align 8
  %117 = getelementptr inbounds %"class.v8::internal::wasm::AsmJsParser", %"class.v8::internal::wasm::AsmJsParser"* %0, i64 0, i32 1, i32 5
  %118 = load i64, i64* %117, align 8
  %119 = trunc i64 %118 to i32
  %120 = getelementptr inbounds %"class.v8::internal::wasm::AsmJsParser", %"class.v8::internal::wasm::AsmJsParser"* %0, i64 0, i32 19
  store i32 %119, i32* %120, align 8
  br label %229

121:                                              ; preds = %111, %108, %105
  %122 = getelementptr inbounds %"struct.v8::internal::wasm::AsmJsParser::VarInfo", %"struct.v8::internal::wasm::AsmJsParser::VarInfo"* %1, i64 0, i32 5
  store i32 2, i32* %122, align 8
  %123 = bitcast %"struct.v8::internal::wasm::AsmJsParser::VarInfo"* %80 to i64*
  %124 = load i64, i64* %123, align 8
  %125 = bitcast %"struct.v8::internal::wasm::AsmJsParser::VarInfo"* %1 to i64*
  store i64 %124, i64* %125, align 8
  %126 = getelementptr inbounds %"struct.v8::internal::wasm::AsmJsParser::VarInfo", %"struct.v8::internal::wasm::AsmJsParser::VarInfo"* %79, i64 %31, i32 4
  %127 = load i32, i32* %126, align 4
  %128 = getelementptr inbounds %"struct.v8::internal::wasm::AsmJsParser::VarInfo", %"struct.v8::internal::wasm::AsmJsParser::VarInfo"* %1, i64 0, i32 4
  store i32 %127, i32* %128, align 4
  %129 = getelementptr inbounds %"struct.v8::internal::wasm::AsmJsParser::VarInfo", %"struct.v8::internal::wasm::AsmJsParser::VarInfo"* %1, i64 0, i32 6
  store i8 0, i8* %129, align 4
  br label %229

130:                                              ; preds = %78
  %131 = load i32, i32* %11, align 8
  %132 = icmp eq i32 %131, 40
  br i1 %132, label %140, label %133

133:                                              ; preds = %130
  %134 = getelementptr inbounds %"class.v8::internal::wasm::AsmJsParser", %"class.v8::internal::wasm::AsmJsParser"* %0, i64 0, i32 17
  store i8 1, i8* %134, align 4
  %135 = getelementptr inbounds %"class.v8::internal::wasm::AsmJsParser", %"class.v8::internal::wasm::AsmJsParser"* %0, i64 0, i32 18
  store i8* getelementptr inbounds ([17 x i8], [17 x i8]* @.str.3, i64 0, i64 0), i8** %135, align 8
  %136 = getelementptr inbounds %"class.v8::internal::wasm::AsmJsParser", %"class.v8::internal::wasm::AsmJsParser"* %0, i64 0, i32 1, i32 5
  %137 = load i64, i64* %136, align 8
  %138 = trunc i64 %137 to i32
  %139 = getelementptr inbounds %"class.v8::internal::wasm::AsmJsParser", %"class.v8::internal::wasm::AsmJsParser"* %0, i64 0, i32 19
  store i32 %138, i32* %139, align 8
  br label %229

140:                                              ; preds = %130
  tail call void @_ZN2v88internal12AsmJsScanner4NextEv(%"class.v8::internal::AsmJsScanner"* %10) #12
  %141 = load i32, i32* %11, align 8
  %142 = icmp eq i32 %141, 45
  br i1 %142, label %143, label %145

143:                                              ; preds = %140
  tail call void @_ZN2v88internal12AsmJsScanner4NextEv(%"class.v8::internal::AsmJsScanner"* %10) #12
  %144 = load i32, i32* %11, align 8
  br label %145

145:                                              ; preds = %140, %143
  %146 = phi i32 [ %141, %140 ], [ %144, %143 ]
  %147 = phi i1 [ false, %140 ], [ true, %143 ]
  switch i32 %146, label %199 [
    i32 -4, label %148
    i32 -3, label %182
  ]

148:                                              ; preds = %145
  %149 = getelementptr inbounds %"class.v8::internal::wasm::AsmJsParser", %"class.v8::internal::wasm::AsmJsParser"* %0, i64 0, i32 1, i32 18
  %150 = bitcast double* %149 to i64*
  %151 = load i64, i64* %150, align 8
  tail call void @_ZN2v88internal12AsmJsScanner4NextEv(%"class.v8::internal::AsmJsScanner"* %10) #12
  br i1 %147, label %152, label %156

152:                                              ; preds = %148
  %153 = bitcast i64 %151 to double
  %154 = fsub double -0.000000e+00, %153
  %155 = bitcast double %154 to i64
  br label %156

156:                                              ; preds = %152, %148
  %157 = phi i64 [ %155, %152 ], [ %151, %148 ]
  %158 = bitcast i64 %157 to double
  %159 = fcmp ogt double %158, 0x47EFFFFFE0000000
  br i1 %159, label %160, label %163

160:                                              ; preds = %156
  %161 = fcmp ugt double %158, 0x47EFFFFFEFFFFFFF
  br i1 %161, label %162, label %170

162:                                              ; preds = %160
  br label %170

163:                                              ; preds = %156
  %164 = fcmp olt double %158, 0xC7EFFFFFE0000000
  br i1 %164, label %165, label %168

165:                                              ; preds = %163
  %166 = fcmp ult double %158, 0xC7EFFFFFEFFFFFFF
  br i1 %166, label %167, label %170

167:                                              ; preds = %165
  br label %170

168:                                              ; preds = %163
  %169 = fptrunc double %158 to float
  br label %170

170:                                              ; preds = %160, %162, %165, %167, %168
  %171 = phi float [ 0x7FF0000000000000, %162 ], [ 0xFFF0000000000000, %167 ], [ %169, %168 ], [ 0x47EFFFFFE0000000, %160 ], [ 0xC7EFFFFFE0000000, %165 ]
  %172 = bitcast %"class.v8::internal::wasm::WasmInitExpr"* %5 to i8*
  call void @llvm.lifetime.start.p0i8(i64 32, i8* nonnull %172)
  %173 = bitcast %"class.v8::internal::wasm::WasmInitExpr"* %4 to i8*
  call void @llvm.lifetime.start.p0i8(i64 32, i8* nonnull %173)
  %174 = bitcast %"class.v8::internal::wasm::WasmInitExpr"* %5 to float*
  store float %171, float* %174, align 8
  %175 = getelementptr inbounds i8, i8* %172, i64 4
  %176 = getelementptr inbounds [12 x i8], [12 x i8]* %8, i64 0, i64 0
  call void @llvm.memcpy.p0i8.p0i8.i64(i8* align 4 %175, i8* nonnull align 4 %176, i64 12, i1 false)
  %177 = getelementptr inbounds %"class.v8::internal::wasm::WasmInitExpr", %"class.v8::internal::wasm::WasmInitExpr"* %5, i64 0, i32 1
  store i32 4, i32* %177, align 8
  %178 = getelementptr inbounds %"struct.v8::internal::wasm::AsmJsParser::VarInfo", %"struct.v8::internal::wasm::AsmJsParser::VarInfo"* %1, i64 0, i32 5
  store i32 2, i32* %178, align 8
  %179 = getelementptr inbounds %"struct.v8::internal::wasm::AsmJsParser::VarInfo", %"struct.v8::internal::wasm::AsmJsParser::VarInfo"* %1, i64 0, i32 0
  store %"class.v8::internal::wasm::AsmType"* inttoptr (i64 57357 to %"class.v8::internal::wasm::AsmType"*), %"class.v8::internal::wasm::AsmType"** %179, align 8
  %180 = getelementptr inbounds %"class.v8::internal::wasm::AsmJsParser", %"class.v8::internal::wasm::AsmJsParser"* %0, i64 0, i32 2
  %181 = load %"class.v8::internal::wasm::WasmModuleBuilder"*, %"class.v8::internal::wasm::WasmModuleBuilder"** %180, align 8
  call void @llvm.memcpy.p0i8.p0i8.i64(i8* nonnull align 8 %173, i8* nonnull align 8 %172, i64 20, i1 false) #12
  br label %206

182:                                              ; preds = %145
  %183 = getelementptr inbounds %"class.v8::internal::wasm::AsmJsParser", %"class.v8::internal::wasm::AsmJsParser"* %0, i64 0, i32 1, i32 19
  %184 = load i32, i32* %183, align 8
  tail call void @_ZN2v88internal12AsmJsScanner4NextEv(%"class.v8::internal::AsmJsScanner"* %10) #12
  %185 = uitofp i32 %184 to double
  %186 = fsub double -0.000000e+00, %185
  %187 = select i1 %147, double %186, double %185
  %188 = fptrunc double %187 to float
  %189 = bitcast %"class.v8::internal::wasm::WasmInitExpr"* %7 to i8*
  call void @llvm.lifetime.start.p0i8(i64 32, i8* nonnull %189)
  %190 = bitcast %"class.v8::internal::wasm::WasmInitExpr"* %6 to i8*
  call void @llvm.lifetime.start.p0i8(i64 32, i8* nonnull %190)
  %191 = bitcast %"class.v8::internal::wasm::WasmInitExpr"* %7 to float*
  store float %188, float* %191, align 8
  %192 = getelementptr inbounds i8, i8* %189, i64 4
  %193 = getelementptr inbounds [12 x i8], [12 x i8]* %9, i64 0, i64 0
  call void @llvm.memcpy.p0i8.p0i8.i64(i8* align 4 %192, i8* nonnull align 4 %193, i64 12, i1 false)
  %194 = getelementptr inbounds %"class.v8::internal::wasm::WasmInitExpr", %"class.v8::internal::wasm::WasmInitExpr"* %7, i64 0, i32 1
  store i32 4, i32* %194, align 8
  %195 = getelementptr inbounds %"struct.v8::internal::wasm::AsmJsParser::VarInfo", %"struct.v8::internal::wasm::AsmJsParser::VarInfo"* %1, i64 0, i32 5
  store i32 2, i32* %195, align 8
  %196 = getelementptr inbounds %"struct.v8::internal::wasm::AsmJsParser::VarInfo", %"struct.v8::internal::wasm::AsmJsParser::VarInfo"* %1, i64 0, i32 0
  store %"class.v8::internal::wasm::AsmType"* inttoptr (i64 57357 to %"class.v8::internal::wasm::AsmType"*), %"class.v8::internal::wasm::AsmType"** %196, align 8
  %197 = getelementptr inbounds %"class.v8::internal::wasm::AsmJsParser", %"class.v8::internal::wasm::AsmJsParser"* %0, i64 0, i32 2
  %198 = load %"class.v8::internal::wasm::WasmModuleBuilder"*, %"class.v8::internal::wasm::WasmModuleBuilder"** %197, align 8
  call void @llvm.memcpy.p0i8.p0i8.i64(i8* nonnull align 8 %190, i8* nonnull align 8 %189, i64 20, i1 false) #12
  br label %206

199:                                              ; preds = %145
  %200 = getelementptr inbounds %"class.v8::internal::wasm::AsmJsParser", %"class.v8::internal::wasm::AsmJsParser"* %0, i64 0, i32 17
  store i8 1, i8* %200, align 4
  %201 = getelementptr inbounds %"class.v8::internal::wasm::AsmJsParser", %"class.v8::internal::wasm::AsmJsParser"* %0, i64 0, i32 18
  store i8* getelementptr inbounds ([25 x i8], [25 x i8]* @.str.12, i64 0, i64 0), i8** %201, align 8
  %202 = getelementptr inbounds %"class.v8::internal::wasm::AsmJsParser", %"class.v8::internal::wasm::AsmJsParser"* %0, i64 0, i32 1, i32 5
  %203 = load i64, i64* %202, align 8
  %204 = trunc i64 %203 to i32
  %205 = getelementptr inbounds %"class.v8::internal::wasm::AsmJsParser", %"class.v8::internal::wasm::AsmJsParser"* %0, i64 0, i32 19
  store i32 %204, i32* %205, align 8
  br label %229

206:                                              ; preds = %170, %182
  %207 = phi %"class.v8::internal::wasm::WasmInitExpr"* [ %4, %170 ], [ %6, %182 ]
  %208 = phi %"class.v8::internal::wasm::WasmInitExpr"* [ %5, %170 ], [ %7, %182 ]
  %209 = phi %"class.v8::internal::wasm::WasmModuleBuilder"* [ %181, %170 ], [ %198, %182 ]
  %210 = phi i8* [ %172, %170 ], [ %189, %182 ]
  %211 = phi i8* [ %173, %170 ], [ %190, %182 ]
  %212 = zext i1 %2 to i8
  %213 = getelementptr inbounds %"class.v8::internal::wasm::WasmInitExpr", %"class.v8::internal::wasm::WasmInitExpr"* %207, i64 0, i32 2
  %214 = getelementptr inbounds %"class.v8::internal::wasm::WasmInitExpr", %"class.v8::internal::wasm::WasmInitExpr"* %208, i64 0, i32 2, i32 0, i32 0, i32 0
  store %"class.v8::internal::wasm::WasmInitExpr"* null, %"class.v8::internal::wasm::WasmInitExpr"** %214, align 8
  %215 = bitcast %"class.std::__1::unique_ptr.98"* %213 to i64*
  store i64 0, i64* %215, align 8
  %216 = tail call i32 @_ZN2v88internal4wasm17WasmModuleBuilder9AddGlobalENS1_9ValueTypeEbNS1_12WasmInitExprE(%"class.v8::internal::wasm::WasmModuleBuilder"* %209, i32 3, i1 zeroext true, %"class.v8::internal::wasm::WasmInitExpr"* nonnull byval(%"class.v8::internal::wasm::WasmInitExpr") align 8 %207) #12
  %217 = getelementptr inbounds %"struct.v8::internal::wasm::AsmJsParser::VarInfo", %"struct.v8::internal::wasm::AsmJsParser::VarInfo"* %1, i64 0, i32 4
  store i32 %216, i32* %217, align 4
  %218 = getelementptr inbounds %"struct.v8::internal::wasm::AsmJsParser::VarInfo", %"struct.v8::internal::wasm::AsmJsParser::VarInfo"* %1, i64 0, i32 6
  store i8 %212, i8* %218, align 4
  call void @_ZN2v88internal4wasm12WasmInitExprD2Ev(%"class.v8::internal::wasm::WasmInitExpr"* nonnull %208) #12
  call void @llvm.lifetime.end.p0i8(i64 32, i8* nonnull %210)
  call void @llvm.lifetime.end.p0i8(i64 32, i8* nonnull %211)
  %219 = load i32, i32* %11, align 8
  %220 = icmp eq i32 %219, 41
  br i1 %220, label %228, label %221

221:                                              ; preds = %206
  %222 = getelementptr inbounds %"class.v8::internal::wasm::AsmJsParser", %"class.v8::internal::wasm::AsmJsParser"* %0, i64 0, i32 17
  store i8 1, i8* %222, align 4
  %223 = getelementptr inbounds %"class.v8::internal::wasm::AsmJsParser", %"class.v8::internal::wasm::AsmJsParser"* %0, i64 0, i32 18
  store i8* getelementptr inbounds ([17 x i8], [17 x i8]* @.str.3, i64 0, i64 0), i8** %223, align 8
  %224 = getelementptr inbounds %"class.v8::internal::wasm::AsmJsParser", %"class.v8::internal::wasm::AsmJsParser"* %0, i64 0, i32 1, i32 5
  %225 = load i64, i64* %224, align 8
  %226 = trunc i64 %225 to i32
  %227 = getelementptr inbounds %"class.v8::internal::wasm::AsmJsParser", %"class.v8::internal::wasm::AsmJsParser"* %0, i64 0, i32 19
  store i32 %226, i32* %227, align 8
  br label %229

228:                                              ; preds = %206
  call void @_ZN2v88internal12AsmJsScanner4NextEv(%"class.v8::internal::AsmJsScanner"* %10) #12
  br label %229

229:                                              ; preds = %199, %221, %228, %133, %121, %114, %98, %90
  ret void
}

declare void @_ZN2v88internal4wasm17WasmModuleBuilder19SetIndirectFunctionEjj(%"class.v8::internal::wasm::WasmModuleBuilder"*, i32, i32) local_unnamed_addr #1

declare void @_ZN2v88internal4wasm19WasmFunctionBuilder7SetNameENS0_6VectorIKcEE(%"class.v8::internal::wasm::WasmFunctionBuilder"*, i8*, i64) local_unnamed_addr #1

declare void @_ZN2v88internal4wasm19WasmFunctionBuilder27SetAsmFunctionStartPositionEm(%"class.v8::internal::wasm::WasmFunctionBuilder"*, i64) local_unnamed_addr #1

; Function Attrs: nounwind ssp uwtable
define hidden void @_ZN2v88internal4wasm11AsmJsParser22ValidateFunctionParamsEPNS0_10ZoneVectorIPNS1_7AsmTypeEEE(%"class.v8::internal::wasm::AsmJsParser"*, %"class.v8::internal::ZoneVector.179"*) local_unnamed_addr #0 align 2 {
  %3 = alloca %"class.v8::internal::wasm::AsmJsParser::CachedVector.212", align 8
  %4 = getelementptr inbounds %"class.v8::internal::wasm::AsmJsParser", %"class.v8::internal::wasm::AsmJsParser"* %0, i64 0, i32 1
  %5 = getelementptr inbounds %"class.v8::internal::wasm::AsmJsParser", %"class.v8::internal::wasm::AsmJsParser"* %0, i64 0, i32 1, i32 11
  store i8 1, i8* %5, align 8
  %6 = getelementptr inbounds %"class.v8::internal::wasm::AsmJsParser", %"class.v8::internal::wasm::AsmJsParser"* %0, i64 0, i32 1, i32 1
  %7 = load i32, i32* %6, align 8
  %8 = icmp eq i32 %7, 40
  br i1 %8, label %16, label %9

9:                                                ; preds = %2
  %10 = getelementptr inbounds %"class.v8::internal::wasm::AsmJsParser", %"class.v8::internal::wasm::AsmJsParser"* %0, i64 0, i32 17
  store i8 1, i8* %10, align 4
  %11 = getelementptr inbounds %"class.v8::internal::wasm::AsmJsParser", %"class.v8::internal::wasm::AsmJsParser"* %0, i64 0, i32 18
  store i8* getelementptr inbounds ([17 x i8], [17 x i8]* @.str.3, i64 0, i64 0), i8** %11, align 8
  %12 = getelementptr inbounds %"class.v8::internal::wasm::AsmJsParser", %"class.v8::internal::wasm::AsmJsParser"* %0, i64 0, i32 1, i32 5
  %13 = load i64, i64* %12, align 8
  %14 = trunc i64 %13 to i32
  %15 = getelementptr inbounds %"class.v8::internal::wasm::AsmJsParser", %"class.v8::internal::wasm::AsmJsParser"* %0, i64 0, i32 19
  store i32 %14, i32* %15, align 8
  br label %1309

16:                                               ; preds = %2
  tail call void @_ZN2v88internal12AsmJsScanner4NextEv(%"class.v8::internal::AsmJsScanner"* %4) #12
  %17 = bitcast %"class.v8::internal::wasm::AsmJsParser::CachedVector.212"* %3 to i8*
  call void @llvm.lifetime.start.p0i8(i64 40, i8* nonnull %17) #12
  %18 = getelementptr inbounds %"class.v8::internal::wasm::AsmJsParser", %"class.v8::internal::wasm::AsmJsParser"* %0, i64 0, i32 12
  %19 = getelementptr inbounds %"class.v8::internal::wasm::AsmJsParser", %"class.v8::internal::wasm::AsmJsParser"* %0, i64 0, i32 12, i32 0, i32 0, i32 0, i32 2, i32 1, i32 0, i32 0
  %20 = bitcast %"class.v8::internal::Zone"** %19 to i64*
  %21 = load i64, i64* %20, align 8
  %22 = getelementptr inbounds %"class.v8::internal::wasm::AsmJsParser::CachedVector.212", %"class.v8::internal::wasm::AsmJsParser::CachedVector.212"* %3, i64 0, i32 0, i32 0, i32 0, i32 2, i32 1
  %23 = bitcast %"struct.std::__1::__compressed_pair_elem.134"* %22 to i64*
  call void @llvm.memset.p0i8.i64(i8* nonnull align 8 %17, i8 0, i64 24, i1 false) #12
  store i64 %21, i64* %23, align 8
  %24 = getelementptr inbounds %"class.v8::internal::wasm::AsmJsParser::CachedVector.212", %"class.v8::internal::wasm::AsmJsParser::CachedVector.212"* %3, i64 0, i32 1
  store %"class.v8::internal::wasm::AsmJsParser::CachedVectors.190"* %18, %"class.v8::internal::wasm::AsmJsParser::CachedVectors.190"** %24, align 8
  %25 = getelementptr inbounds %"class.v8::internal::wasm::AsmJsParser::CachedVectors.190", %"class.v8::internal::wasm::AsmJsParser::CachedVectors.190"* %18, i64 0, i32 0, i32 0, i32 0, i32 0
  %26 = load %"class.v8::internal::ZoneVector.129"*, %"class.v8::internal::ZoneVector.129"** %25, align 8
  %27 = getelementptr inbounds %"class.v8::internal::wasm::AsmJsParser", %"class.v8::internal::wasm::AsmJsParser"* %0, i64 0, i32 12, i32 0, i32 0, i32 0, i32 1
  %28 = load %"class.v8::internal::ZoneVector.129"*, %"class.v8::internal::ZoneVector.129"** %27, align 8
  %29 = icmp eq %"class.v8::internal::ZoneVector.129"* %26, %28
  br i1 %29, label %59, label %30

30:                                               ; preds = %16
  %31 = getelementptr inbounds %"class.v8::internal::ZoneVector.129", %"class.v8::internal::ZoneVector.129"* %28, i64 -1, i32 0
  %32 = bitcast %"class.std::__1::vector.130"* %31 to i64*
  %33 = load i64, i64* %32, align 8
  %34 = bitcast %"class.v8::internal::wasm::AsmJsParser::CachedVector.212"* %3 to i64*
  store i64 0, i64* %32, align 8
  store i64 %33, i64* %34, align 8
  %35 = getelementptr inbounds %"class.v8::internal::ZoneVector.129", %"class.v8::internal::ZoneVector.129"* %28, i64 -1, i32 0, i32 0, i32 1
  %36 = getelementptr inbounds %"class.v8::internal::wasm::AsmJsParser::CachedVector.212", %"class.v8::internal::wasm::AsmJsParser::CachedVector.212"* %3, i64 0, i32 0, i32 0, i32 0, i32 1
  %37 = bitcast i32** %35 to i64*
  %38 = load i64, i64* %37, align 8
  %39 = bitcast i32** %36 to i64*
  %40 = load i64, i64* %39, align 8
  store i64 %40, i64* %37, align 8
  store i64 %38, i64* %39, align 8
  %41 = getelementptr inbounds %"class.v8::internal::ZoneVector.129", %"class.v8::internal::ZoneVector.129"* %28, i64 -1, i32 0, i32 0, i32 2, i32 0, i32 0
  %42 = getelementptr inbounds %"class.v8::internal::wasm::AsmJsParser::CachedVector.212", %"class.v8::internal::wasm::AsmJsParser::CachedVector.212"* %3, i64 0, i32 0, i32 0, i32 0, i32 2, i32 0, i32 0
  %43 = bitcast i32** %41 to i64*
  %44 = load i64, i64* %43, align 8
  %45 = bitcast i32** %42 to i64*
  %46 = load i64, i64* %45, align 8
  store i64 %46, i64* %43, align 8
  store i64 %44, i64* %45, align 8
  %47 = load %"class.v8::internal::ZoneVector.129"*, %"class.v8::internal::ZoneVector.129"** %27, align 8
  %48 = getelementptr inbounds %"class.v8::internal::ZoneVector.129", %"class.v8::internal::ZoneVector.129"* %47, i64 -1
  %49 = getelementptr inbounds %"class.v8::internal::ZoneVector.129", %"class.v8::internal::ZoneVector.129"* %48, i64 0, i32 0, i32 0, i32 0
  %50 = load i32*, i32** %49, align 8
  %51 = icmp eq i32* %50, null
  br i1 %51, label %56, label %52

52:                                               ; preds = %30
  %53 = ptrtoint i32* %50 to i64
  %54 = getelementptr inbounds %"class.v8::internal::ZoneVector.129", %"class.v8::internal::ZoneVector.129"* %47, i64 -1, i32 0, i32 0, i32 1
  %55 = bitcast i32** %54 to i64*
  store i64 %53, i64* %55, align 8
  br label %56

56:                                               ; preds = %52, %30
  store %"class.v8::internal::ZoneVector.129"* %48, %"class.v8::internal::ZoneVector.129"** %27, align 8
  %57 = load i64, i64* %34, align 8
  store i64 %57, i64* %39, align 8
  %58 = inttoptr i64 %57 to i32*
  br label %59

59:                                               ; preds = %16, %56
  %60 = phi i32* [ null, %16 ], [ %58, %56 ]
  %61 = getelementptr inbounds %"class.v8::internal::wasm::AsmJsParser", %"class.v8::internal::wasm::AsmJsParser"* %0, i64 0, i32 17
  %62 = load i8, i8* %61, align 4, !range !69
  %63 = icmp eq i8 %62, 0
  br i1 %63, label %64, label %308

64:                                               ; preds = %59
  %65 = getelementptr inbounds %"class.v8::internal::wasm::AsmJsParser::CachedVector.212", %"class.v8::internal::wasm::AsmJsParser::CachedVector.212"* %3, i64 0, i32 0, i32 0, i32 0, i32 1
  %66 = getelementptr inbounds %"class.v8::internal::wasm::AsmJsParser::CachedVector.212", %"class.v8::internal::wasm::AsmJsParser::CachedVector.212"* %3, i64 0, i32 0, i32 0, i32 0, i32 2, i32 0, i32 0
  %67 = bitcast i32** %65 to i64*
  %68 = bitcast %"class.v8::internal::wasm::AsmJsParser::CachedVector.212"* %3 to i64*
  %69 = bitcast i32** %66 to i64*
  %70 = getelementptr inbounds %"class.v8::internal::wasm::AsmJsParser::CachedVector.212", %"class.v8::internal::wasm::AsmJsParser::CachedVector.212"* %3, i64 0, i32 0, i32 0, i32 0, i32 2, i32 1, i32 0, i32 0
  %71 = getelementptr inbounds %"class.v8::internal::wasm::AsmJsParser::CachedVector.212", %"class.v8::internal::wasm::AsmJsParser::CachedVector.212"* %3, i64 0, i32 0, i32 0, i32 0, i32 0
  br label %72

72:                                               ; preds = %64, %305
  %73 = phi i32* [ %60, %64 ], [ %296, %305 ]
  %74 = load i32, i32* %6, align 8
  %75 = icmp eq i32 %74, 41
  br i1 %75, label %318, label %76

76:                                               ; preds = %72
  %77 = icmp slt i32 %74, -9999
  br i1 %77, label %84, label %78

78:                                               ; preds = %76
  store i8 1, i8* %61, align 4
  %79 = getelementptr inbounds %"class.v8::internal::wasm::AsmJsParser", %"class.v8::internal::wasm::AsmJsParser"* %0, i64 0, i32 18
  store i8* getelementptr inbounds ([24 x i8], [24 x i8]* @.str.39, i64 0, i64 0), i8** %79, align 8
  %80 = getelementptr inbounds %"class.v8::internal::wasm::AsmJsParser", %"class.v8::internal::wasm::AsmJsParser"* %0, i64 0, i32 1, i32 5
  %81 = load i64, i64* %80, align 8
  %82 = trunc i64 %81 to i32
  %83 = getelementptr inbounds %"class.v8::internal::wasm::AsmJsParser", %"class.v8::internal::wasm::AsmJsParser"* %0, i64 0, i32 19
  store i32 %82, i32* %83, align 8
  br label %1268

84:                                               ; preds = %76
  tail call void @_ZN2v88internal12AsmJsScanner4NextEv(%"class.v8::internal::AsmJsScanner"* %4) #12
  %85 = load i32*, i32** %66, align 8
  %86 = icmp ult i32* %73, %85
  %87 = ptrtoint i32* %85 to i64
  br i1 %86, label %88, label %91

88:                                               ; preds = %84
  store i32 %74, i32* %73, align 4
  %89 = getelementptr inbounds i32, i32* %73, i64 1
  %90 = ptrtoint i32* %89 to i64
  store i64 %90, i64* %67, align 8
  br label %295

91:                                               ; preds = %84
  %92 = ptrtoint i32* %73 to i64
  %93 = load i64, i64* %68, align 8
  %94 = sub i64 %92, %93
  %95 = ashr exact i64 %94, 2
  %96 = add nsw i64 %95, 1
  %97 = icmp ugt i64 %96, 536870911
  br i1 %97, label %98, label %100

98:                                               ; preds = %91
  %99 = bitcast %"class.v8::internal::wasm::AsmJsParser::CachedVector.212"* %3 to %"class.std::__1::__vector_base_common"*
  call void @_ZNKSt3__120__vector_base_commonILb1EE20__throw_length_errorEv(%"class.std::__1::__vector_base_common"* nonnull %99) #13
  unreachable

100:                                              ; preds = %91
  %101 = sub i64 %87, %93
  %102 = ashr exact i64 %101, 2
  %103 = icmp ult i64 %102, 268435455
  br i1 %103, label %104, label %109

104:                                              ; preds = %100
  %105 = ashr exact i64 %101, 1
  %106 = icmp ult i64 %105, %96
  %107 = select i1 %106, i64 %96, i64 %105
  %108 = icmp eq i64 %107, 0
  br i1 %108, label %128, label %109

109:                                              ; preds = %104, %100
  %110 = phi i64 [ %107, %104 ], [ 536870911, %100 ]
  %111 = load %"class.v8::internal::Zone"*, %"class.v8::internal::Zone"** %70, align 8
  %112 = shl i64 %110, 2
  %113 = add i64 %112, 7
  %114 = and i64 %113, -8
  %115 = getelementptr inbounds %"class.v8::internal::Zone", %"class.v8::internal::Zone"* %111, i64 0, i32 2
  %116 = load i64, i64* %115, align 8
  %117 = getelementptr inbounds %"class.v8::internal::Zone", %"class.v8::internal::Zone"* %111, i64 0, i32 3
  %118 = load i64, i64* %117, align 8
  %119 = sub i64 %118, %116
  %120 = icmp ugt i64 %114, %119
  br i1 %120, label %121, label %123, !prof !2

121:                                              ; preds = %109
  %122 = tail call i64 @_ZN2v88internal4Zone9NewExpandEm(%"class.v8::internal::Zone"* %111, i64 %114) #12
  br label %125

123:                                              ; preds = %109
  %124 = add i64 %114, %116
  store i64 %124, i64* %115, align 8
  br label %125

125:                                              ; preds = %123, %121
  %126 = phi i64 [ %122, %121 ], [ %116, %123 ]
  %127 = inttoptr i64 %126 to i32*
  br label %128

128:                                              ; preds = %125, %104
  %129 = phi i64 [ %110, %125 ], [ 0, %104 ]
  %130 = phi i32* [ %127, %125 ], [ null, %104 ]
  %131 = getelementptr inbounds i32, i32* %130, i64 %95
  %132 = getelementptr inbounds i32, i32* %130, i64 %129
  %133 = ptrtoint i32* %132 to i64
  store i32 %74, i32* %131, align 4
  %134 = getelementptr inbounds i32, i32* %131, i64 1
  %135 = ptrtoint i32* %134 to i64
  %136 = load i32*, i32** %71, align 8
  %137 = ptrtoint i32* %136 to i64
  %138 = load i32*, i32** %65, align 8
  %139 = icmp eq i32* %138, %136
  br i1 %139, label %292, label %140

140:                                              ; preds = %128
  %141 = getelementptr i32, i32* %138, i64 -1
  %142 = ptrtoint i32* %141 to i64
  %143 = sub i64 %142, %137
  %144 = lshr i64 %143, 2
  %145 = add nuw nsw i64 %144, 1
  %146 = icmp ult i64 %145, 8
  br i1 %146, label %240, label %147

147:                                              ; preds = %140
  %148 = getelementptr i32, i32* %130, i64 -1
  %149 = getelementptr i32, i32* %138, i64 -1
  %150 = ptrtoint i32* %149 to i64
  %151 = sub i64 %150, %137
  %152 = lshr i64 %151, 2
  %153 = sub nsw i64 %95, %152
  %154 = getelementptr i32, i32* %148, i64 %153
  %155 = getelementptr i32, i32* %138, i64 -1
  %156 = sub nsw i64 0, %152
  %157 = getelementptr i32, i32* %155, i64 %156
  %158 = icmp ult i32* %154, %138
  %159 = icmp ult i32* %157, %131
  %160 = and i1 %158, %159
  br i1 %160, label %240, label %161

161:                                              ; preds = %147
  %162 = and i64 %145, 9223372036854775800
  %163 = sub nsw i64 0, %162
  %164 = getelementptr i32, i32* %131, i64 %163
  %165 = sub nsw i64 0, %162
  %166 = getelementptr i32, i32* %138, i64 %165
  %167 = add nsw i64 %162, -8
  %168 = lshr exact i64 %167, 3
  %169 = add nuw nsw i64 %168, 1
  %170 = and i64 %169, 1
  %171 = icmp eq i64 %167, 0
  br i1 %171, label %216, label %172

172:                                              ; preds = %161
  %173 = sub nuw nsw i64 %169, %170
  %174 = getelementptr i32, i32* %131, i64 -1
  %175 = getelementptr i32, i32* %138, i64 -1
  %176 = getelementptr i32, i32* %131, i64 -1
  %177 = getelementptr i32, i32* %138, i64 -1
  br label %178

178:                                              ; preds = %178, %172
  %179 = phi i64 [ 0, %172 ], [ %213, %178 ]
  %180 = phi i64 [ %173, %172 ], [ %214, %178 ]
  %181 = sub i64 0, %179
  %182 = sub i64 0, %179
  %183 = getelementptr inbounds i32, i32* %174, i64 %181
  %184 = getelementptr inbounds i32, i32* %175, i64 %182
  %185 = getelementptr inbounds i32, i32* %184, i64 -3
  %186 = bitcast i32* %185 to <4 x i32>*
  %187 = load <4 x i32>, <4 x i32>* %186, align 4, !alias.scope !103
  %188 = getelementptr inbounds i32, i32* %184, i64 -4
  %189 = getelementptr inbounds i32, i32* %188, i64 -3
  %190 = bitcast i32* %189 to <4 x i32>*
  %191 = load <4 x i32>, <4 x i32>* %190, align 4, !alias.scope !103
  %192 = getelementptr inbounds i32, i32* %183, i64 -3
  %193 = bitcast i32* %192 to <4 x i32>*
  store <4 x i32> %187, <4 x i32>* %193, align 4, !alias.scope !106, !noalias !103
  %194 = getelementptr inbounds i32, i32* %183, i64 -4
  %195 = getelementptr inbounds i32, i32* %194, i64 -3
  %196 = bitcast i32* %195 to <4 x i32>*
  store <4 x i32> %191, <4 x i32>* %196, align 4, !alias.scope !106, !noalias !103
  %197 = sub nuw nsw i64 -8, %179
  %198 = sub nuw nsw i64 -8, %179
  %199 = getelementptr inbounds i32, i32* %176, i64 %197
  %200 = getelementptr inbounds i32, i32* %177, i64 %198
  %201 = getelementptr inbounds i32, i32* %200, i64 -3
  %202 = bitcast i32* %201 to <4 x i32>*
  %203 = load <4 x i32>, <4 x i32>* %202, align 4, !alias.scope !103
  %204 = getelementptr inbounds i32, i32* %200, i64 -4
  %205 = getelementptr inbounds i32, i32* %204, i64 -3
  %206 = bitcast i32* %205 to <4 x i32>*
  %207 = load <4 x i32>, <4 x i32>* %206, align 4, !alias.scope !103
  %208 = getelementptr inbounds i32, i32* %199, i64 -3
  %209 = bitcast i32* %208 to <4 x i32>*
  store <4 x i32> %203, <4 x i32>* %209, align 4, !alias.scope !106, !noalias !103
  %210 = getelementptr inbounds i32, i32* %199, i64 -4
  %211 = getelementptr inbounds i32, i32* %210, i64 -3
  %212 = bitcast i32* %211 to <4 x i32>*
  store <4 x i32> %207, <4 x i32>* %212, align 4, !alias.scope !106, !noalias !103
  %213 = add i64 %179, 16
  %214 = add i64 %180, -2
  %215 = icmp eq i64 %214, 0
  br i1 %215, label %216, label %178, !llvm.loop !108

216:                                              ; preds = %178, %161
  %217 = phi i64 [ 0, %161 ], [ %213, %178 ]
  %218 = icmp eq i64 %170, 0
  br i1 %218, label %238, label %219

219:                                              ; preds = %216
  %220 = sub i64 0, %217
  %221 = getelementptr i32, i32* %131, i64 -1
  %222 = sub i64 0, %217
  %223 = getelementptr i32, i32* %138, i64 -1
  %224 = getelementptr inbounds i32, i32* %221, i64 %220
  %225 = getelementptr inbounds i32, i32* %223, i64 %222
  %226 = getelementptr inbounds i32, i32* %225, i64 -3
  %227 = bitcast i32* %226 to <4 x i32>*
  %228 = load <4 x i32>, <4 x i32>* %227, align 4, !alias.scope !103
  %229 = getelementptr inbounds i32, i32* %225, i64 -4
  %230 = getelementptr inbounds i32, i32* %229, i64 -3
  %231 = bitcast i32* %230 to <4 x i32>*
  %232 = load <4 x i32>, <4 x i32>* %231, align 4, !alias.scope !103
  %233 = getelementptr inbounds i32, i32* %224, i64 -3
  %234 = bitcast i32* %233 to <4 x i32>*
  store <4 x i32> %228, <4 x i32>* %234, align 4, !alias.scope !106, !noalias !103
  %235 = getelementptr inbounds i32, i32* %224, i64 -4
  %236 = getelementptr inbounds i32, i32* %235, i64 -3
  %237 = bitcast i32* %236 to <4 x i32>*
  store <4 x i32> %232, <4 x i32>* %237, align 4, !alias.scope !106, !noalias !103
  br label %238

238:                                              ; preds = %216, %219
  %239 = icmp eq i64 %145, %162
  br i1 %239, label %292, label %240

240:                                              ; preds = %238, %147, %140
  %241 = phi i32* [ %131, %147 ], [ %131, %140 ], [ %164, %238 ]
  %242 = phi i32* [ %138, %147 ], [ %138, %140 ], [ %166, %238 ]
  %243 = getelementptr i32, i32* %242, i64 -1
  %244 = ptrtoint i32* %243 to i64
  %245 = sub i64 %244, %137
  %246 = lshr i64 %245, 2
  %247 = add nuw nsw i64 %246, 1
  %248 = and i64 %247, 7
  %249 = icmp eq i64 %248, 0
  br i1 %249, label %259, label %250

250:                                              ; preds = %240, %250
  %251 = phi i32* [ %254, %250 ], [ %241, %240 ]
  %252 = phi i32* [ %255, %250 ], [ %242, %240 ]
  %253 = phi i64 [ %257, %250 ], [ %248, %240 ]
  %254 = getelementptr inbounds i32, i32* %251, i64 -1
  %255 = getelementptr inbounds i32, i32* %252, i64 -1
  %256 = load i32, i32* %255, align 4
  store i32 %256, i32* %254, align 4
  %257 = add i64 %253, -1
  %258 = icmp eq i64 %257, 0
  br i1 %258, label %259, label %250, !llvm.loop !109

259:                                              ; preds = %250, %240
  %260 = phi i32* [ undef, %240 ], [ %254, %250 ]
  %261 = phi i32* [ %241, %240 ], [ %254, %250 ]
  %262 = phi i32* [ %242, %240 ], [ %255, %250 ]
  %263 = icmp ult i64 %245, 28
  br i1 %263, label %292, label %264

264:                                              ; preds = %259, %264
  %265 = phi i32* [ %288, %264 ], [ %261, %259 ]
  %266 = phi i32* [ %289, %264 ], [ %262, %259 ]
  %267 = getelementptr inbounds i32, i32* %265, i64 -1
  %268 = getelementptr inbounds i32, i32* %266, i64 -1
  %269 = load i32, i32* %268, align 4
  store i32 %269, i32* %267, align 4
  %270 = getelementptr inbounds i32, i32* %265, i64 -2
  %271 = getelementptr inbounds i32, i32* %266, i64 -2
  %272 = load i32, i32* %271, align 4
  store i32 %272, i32* %270, align 4
  %273 = getelementptr inbounds i32, i32* %265, i64 -3
  %274 = getelementptr inbounds i32, i32* %266, i64 -3
  %275 = load i32, i32* %274, align 4
  store i32 %275, i32* %273, align 4
  %276 = getelementptr inbounds i32, i32* %265, i64 -4
  %277 = getelementptr inbounds i32, i32* %266, i64 -4
  %278 = load i32, i32* %277, align 4
  store i32 %278, i32* %276, align 4
  %279 = getelementptr inbounds i32, i32* %265, i64 -5
  %280 = getelementptr inbounds i32, i32* %266, i64 -5
  %281 = load i32, i32* %280, align 4
  store i32 %281, i32* %279, align 4
  %282 = getelementptr inbounds i32, i32* %265, i64 -6
  %283 = getelementptr inbounds i32, i32* %266, i64 -6
  %284 = load i32, i32* %283, align 4
  store i32 %284, i32* %282, align 4
  %285 = getelementptr inbounds i32, i32* %265, i64 -7
  %286 = getelementptr inbounds i32, i32* %266, i64 -7
  %287 = load i32, i32* %286, align 4
  store i32 %287, i32* %285, align 4
  %288 = getelementptr inbounds i32, i32* %265, i64 -8
  %289 = getelementptr inbounds i32, i32* %266, i64 -8
  %290 = load i32, i32* %289, align 4
  store i32 %290, i32* %288, align 4
  %291 = icmp eq i32* %289, %136
  br i1 %291, label %292, label %264, !llvm.loop !110

292:                                              ; preds = %259, %264, %238, %128
  %293 = phi i32* [ %131, %128 ], [ %164, %238 ], [ %260, %259 ], [ %288, %264 ]
  %294 = ptrtoint i32* %293 to i64
  store i64 %294, i64* %68, align 8
  store i64 %135, i64* %67, align 8
  store i64 %133, i64* %69, align 8
  br label %295

295:                                              ; preds = %88, %292
  %296 = phi i32* [ %89, %88 ], [ %134, %292 ]
  %297 = load i32, i32* %6, align 8
  switch i32 %297, label %298 [
    i32 41, label %305
    i32 44, label %304
  ]

298:                                              ; preds = %295
  store i8 1, i8* %61, align 4
  %299 = getelementptr inbounds %"class.v8::internal::wasm::AsmJsParser", %"class.v8::internal::wasm::AsmJsParser"* %0, i64 0, i32 18
  store i8* getelementptr inbounds ([17 x i8], [17 x i8]* @.str.3, i64 0, i64 0), i8** %299, align 8
  %300 = getelementptr inbounds %"class.v8::internal::wasm::AsmJsParser", %"class.v8::internal::wasm::AsmJsParser"* %0, i64 0, i32 1, i32 5
  %301 = load i64, i64* %300, align 8
  %302 = trunc i64 %301 to i32
  %303 = getelementptr inbounds %"class.v8::internal::wasm::AsmJsParser", %"class.v8::internal::wasm::AsmJsParser"* %0, i64 0, i32 19
  store i32 %302, i32* %303, align 8
  br label %1268

304:                                              ; preds = %295
  tail call void @_ZN2v88internal12AsmJsScanner4NextEv(%"class.v8::internal::AsmJsScanner"* %4) #12
  br label %305

305:                                              ; preds = %295, %304
  %306 = load i8, i8* %61, align 4, !range !69
  %307 = icmp eq i8 %306, 0
  br i1 %307, label %72, label %308

308:                                              ; preds = %305, %59
  %309 = phi i32* [ %60, %59 ], [ %296, %305 ]
  %310 = load i32, i32* %6, align 8
  %311 = icmp eq i32 %310, 41
  br i1 %311, label %318, label %312

312:                                              ; preds = %308
  store i8 1, i8* %61, align 4
  %313 = getelementptr inbounds %"class.v8::internal::wasm::AsmJsParser", %"class.v8::internal::wasm::AsmJsParser"* %0, i64 0, i32 18
  store i8* getelementptr inbounds ([17 x i8], [17 x i8]* @.str.3, i64 0, i64 0), i8** %313, align 8
  %314 = getelementptr inbounds %"class.v8::internal::wasm::AsmJsParser", %"class.v8::internal::wasm::AsmJsParser"* %0, i64 0, i32 1, i32 5
  %315 = load i64, i64* %314, align 8
  %316 = trunc i64 %315 to i32
  %317 = getelementptr inbounds %"class.v8::internal::wasm::AsmJsParser", %"class.v8::internal::wasm::AsmJsParser"* %0, i64 0, i32 19
  store i32 %316, i32* %317, align 8
  br label %1268

318:                                              ; preds = %72, %308
  %319 = phi i32* [ %309, %308 ], [ %73, %72 ]
  tail call void @_ZN2v88internal12AsmJsScanner4NextEv(%"class.v8::internal::AsmJsScanner"* %4) #12
  store i8 0, i8* %5, align 8
  %320 = load i32, i32* %6, align 8
  %321 = icmp eq i32 %320, 123
  br i1 %321, label %328, label %322

322:                                              ; preds = %318
  store i8 1, i8* %61, align 4
  %323 = getelementptr inbounds %"class.v8::internal::wasm::AsmJsParser", %"class.v8::internal::wasm::AsmJsParser"* %0, i64 0, i32 18
  store i8* getelementptr inbounds ([17 x i8], [17 x i8]* @.str.3, i64 0, i64 0), i8** %323, align 8
  %324 = getelementptr inbounds %"class.v8::internal::wasm::AsmJsParser", %"class.v8::internal::wasm::AsmJsParser"* %0, i64 0, i32 1, i32 5
  %325 = load i64, i64* %324, align 8
  %326 = trunc i64 %325 to i32
  %327 = getelementptr inbounds %"class.v8::internal::wasm::AsmJsParser", %"class.v8::internal::wasm::AsmJsParser"* %0, i64 0, i32 19
  store i32 %326, i32* %327, align 8
  br label %1268

328:                                              ; preds = %318
  tail call void @_ZN2v88internal12AsmJsScanner4NextEv(%"class.v8::internal::AsmJsScanner"* %4) #12
  %329 = getelementptr inbounds %"class.v8::internal::wasm::AsmJsParser::CachedVector.212", %"class.v8::internal::wasm::AsmJsParser::CachedVector.212"* %3, i64 0, i32 0, i32 0, i32 0, i32 0
  %330 = load i32*, i32** %329, align 8
  %331 = icmp eq i32* %330, %319
  br i1 %331, label %1268, label %332

332:                                              ; preds = %328
  %333 = getelementptr inbounds %"class.v8::internal::wasm::AsmJsParser", %"class.v8::internal::wasm::AsmJsParser"* %0, i64 0, i32 7
  %334 = getelementptr inbounds %"class.v8::internal::wasm::AsmJsParser", %"class.v8::internal::wasm::AsmJsParser"* %0, i64 0, i32 8
  %335 = getelementptr inbounds %"class.v8::internal::wasm::AsmJsParser", %"class.v8::internal::wasm::AsmJsParser"* %0, i64 0, i32 9
  %336 = getelementptr inbounds %"class.v8::internal::wasm::AsmJsParser", %"class.v8::internal::wasm::AsmJsParser"* %0, i64 0, i32 0
  %337 = getelementptr inbounds %"class.v8::internal::wasm::AsmJsParser", %"class.v8::internal::wasm::AsmJsParser"* %0, i64 0, i32 33
  %338 = getelementptr inbounds %"class.v8::internal::ZoneVector.179", %"class.v8::internal::ZoneVector.179"* %1, i64 0, i32 0, i32 0, i32 1
  %339 = bitcast %"class.v8::internal::wasm::AsmType"*** %338 to i64*
  %340 = bitcast %"class.v8::internal::ZoneVector.179"* %1 to i64*
  %341 = getelementptr inbounds %"class.v8::internal::ZoneVector.179", %"class.v8::internal::ZoneVector.179"* %1, i64 0, i32 0, i32 0, i32 2, i32 0, i32 0
  %342 = bitcast %"class.v8::internal::wasm::AsmType"*** %341 to i64*
  %343 = getelementptr inbounds %"class.v8::internal::ZoneVector.179", %"class.v8::internal::ZoneVector.179"* %1, i64 0, i32 0, i32 0, i32 2, i32 1, i32 0, i32 0
  %344 = getelementptr inbounds %"class.v8::internal::ZoneVector.179", %"class.v8::internal::ZoneVector.179"* %1, i64 0, i32 0, i32 0, i32 0
  %345 = getelementptr inbounds %"class.v8::internal::wasm::AsmJsParser", %"class.v8::internal::wasm::AsmJsParser"* %0, i64 0, i32 1, i32 19
  %346 = getelementptr inbounds %"class.v8::internal::wasm::AsmJsParser", %"class.v8::internal::wasm::AsmJsParser"* %0, i64 0, i32 1, i32 20
  %347 = getelementptr inbounds %"class.v8::internal::wasm::AsmJsParser", %"class.v8::internal::wasm::AsmJsParser"* %0, i64 0, i32 18
  %348 = getelementptr inbounds %"class.v8::internal::wasm::AsmJsParser", %"class.v8::internal::wasm::AsmJsParser"* %0, i64 0, i32 1, i32 5
  %349 = getelementptr inbounds %"class.v8::internal::wasm::AsmJsParser", %"class.v8::internal::wasm::AsmJsParser"* %0, i64 0, i32 19
  %350 = getelementptr inbounds %"class.v8::internal::wasm::AsmJsParser", %"class.v8::internal::wasm::AsmJsParser"* %0, i64 0, i32 7, i32 1
  %351 = getelementptr inbounds %"class.v8::internal::Vector.160", %"class.v8::internal::Vector.160"* %333, i64 0, i32 0
  %352 = getelementptr inbounds %"class.v8::internal::Vector.160", %"class.v8::internal::Vector.160"* %333, i64 0, i32 0
  %353 = bitcast %"class.v8::internal::Vector.160"* %333 to i8**
  br label %354

354:                                              ; preds = %332, %1265
  %355 = phi i32* [ %330, %332 ], [ %1266, %1265 ]
  %356 = load i32, i32* %355, align 4
  %357 = load i32, i32* %6, align 8
  %358 = icmp eq i32 %357, %356
  br i1 %358, label %362, label %359

359:                                              ; preds = %354
  store i8 1, i8* %61, align 4
  store i8* getelementptr inbounds ([17 x i8], [17 x i8]* @.str.3, i64 0, i64 0), i8** %347, align 8
  %360 = load i64, i64* %348, align 8
  %361 = trunc i64 %360 to i32
  store i32 %361, i32* %349, align 8
  br label %1268

362:                                              ; preds = %354
  tail call void @_ZN2v88internal12AsmJsScanner4NextEv(%"class.v8::internal::AsmJsScanner"* %4) #12
  %363 = load i32, i32* %6, align 8
  %364 = icmp eq i32 %363, 61
  br i1 %364, label %368, label %365

365:                                              ; preds = %362
  store i8 1, i8* %61, align 4
  store i8* getelementptr inbounds ([17 x i8], [17 x i8]* @.str.3, i64 0, i64 0), i8** %347, align 8
  %366 = load i64, i64* %348, align 8
  %367 = trunc i64 %366 to i32
  store i32 %367, i32* %349, align 8
  br label %1268

368:                                              ; preds = %362
  tail call void @_ZN2v88internal12AsmJsScanner4NextEv(%"class.v8::internal::AsmJsScanner"* %4) #12
  %369 = icmp sgt i32 %356, 255
  %370 = select i1 %369, %"class.v8::internal::Vector.160"* %333, %"class.v8::internal::Vector.160"* %334
  %371 = getelementptr inbounds %"class.v8::internal::Vector.160", %"class.v8::internal::Vector.160"* %370, i64 0, i32 1
  %372 = load i64, i64* %371, align 8
  br i1 %369, label %376, label %373

373:                                              ; preds = %368
  %374 = sub nsw i32 -10000, %356
  %375 = sext i32 %374 to i64
  br label %383

376:                                              ; preds = %368
  %377 = add nsw i32 %356, -256
  %378 = sext i32 %377 to i64
  %379 = load i64, i64* %335, align 8
  %380 = icmp ugt i64 %379, %378
  br i1 %380, label %383, label %381

381:                                              ; preds = %376
  %382 = add nuw nsw i64 %378, 1
  store i64 %382, i64* %335, align 8
  br label %383

383:                                              ; preds = %381, %376, %373
  %384 = phi i64 [ %378, %381 ], [ %378, %376 ], [ %375, %373 ]
  %385 = add nsw i64 %384, 1
  %386 = icmp ugt i64 %385, %372
  br i1 %386, label %390, label %387

387:                                              ; preds = %383
  %388 = getelementptr inbounds %"class.v8::internal::Vector.160", %"class.v8::internal::Vector.160"* %370, i64 0, i32 0
  %389 = load %"struct.v8::internal::wasm::AsmJsParser::VarInfo"*, %"struct.v8::internal::wasm::AsmJsParser::VarInfo"** %388, align 8
  br label %430

390:                                              ; preds = %383
  %391 = shl i64 %372, 1
  %392 = icmp ult i64 %391, %385
  %393 = select i1 %392, i64 %385, i64 %391
  %394 = load %"class.v8::internal::Zone"*, %"class.v8::internal::Zone"** %336, align 8
  %395 = mul i64 %393, 40
  %396 = getelementptr inbounds %"class.v8::internal::Zone", %"class.v8::internal::Zone"* %394, i64 0, i32 2
  %397 = load i64, i64* %396, align 8
  %398 = getelementptr inbounds %"class.v8::internal::Zone", %"class.v8::internal::Zone"* %394, i64 0, i32 3
  %399 = load i64, i64* %398, align 8
  %400 = sub i64 %399, %397
  %401 = icmp ugt i64 %395, %400
  br i1 %401, label %402, label %404, !prof !2

402:                                              ; preds = %390
  %403 = tail call i64 @_ZN2v88internal4Zone9NewExpandEm(%"class.v8::internal::Zone"* %394, i64 %395) #12
  br label %406

404:                                              ; preds = %390
  %405 = add i64 %397, %395
  store i64 %405, i64* %396, align 8
  br label %406

406:                                              ; preds = %404, %402
  %407 = phi i64 [ %403, %402 ], [ %397, %404 ]
  %408 = inttoptr i64 %407 to %"struct.v8::internal::wasm::AsmJsParser::VarInfo"*
  %409 = getelementptr inbounds %"struct.v8::internal::wasm::AsmJsParser::VarInfo", %"struct.v8::internal::wasm::AsmJsParser::VarInfo"* %408, i64 %393
  %410 = icmp eq i64 %393, 0
  br i1 %410, label %420, label %411

411:                                              ; preds = %406, %411
  %412 = phi %"struct.v8::internal::wasm::AsmJsParser::VarInfo"* [ %418, %411 ], [ %408, %406 ]
  %413 = getelementptr inbounds %"struct.v8::internal::wasm::AsmJsParser::VarInfo", %"struct.v8::internal::wasm::AsmJsParser::VarInfo"* %412, i64 0, i32 0
  store %"class.v8::internal::wasm::AsmType"* inttoptr (i64 2147483649 to %"class.v8::internal::wasm::AsmType"*), %"class.v8::internal::wasm::AsmType"** %413, align 8
  %414 = getelementptr inbounds %"struct.v8::internal::wasm::AsmJsParser::VarInfo", %"struct.v8::internal::wasm::AsmJsParser::VarInfo"* %412, i64 0, i32 1
  %415 = getelementptr inbounds %"struct.v8::internal::wasm::AsmJsParser::VarInfo", %"struct.v8::internal::wasm::AsmJsParser::VarInfo"* %412, i64 0, i32 6
  %416 = bitcast %"class.v8::internal::wasm::WasmFunctionBuilder"** %414 to i8*
  tail call void @llvm.memset.p0i8.i64(i8* align 8 %416, i8 0, i64 28, i1 false) #12
  store i8 1, i8* %415, align 4
  %417 = getelementptr inbounds %"struct.v8::internal::wasm::AsmJsParser::VarInfo", %"struct.v8::internal::wasm::AsmJsParser::VarInfo"* %412, i64 0, i32 7
  store i8 0, i8* %417, align 1
  %418 = getelementptr inbounds %"struct.v8::internal::wasm::AsmJsParser::VarInfo", %"struct.v8::internal::wasm::AsmJsParser::VarInfo"* %412, i64 1
  %419 = icmp eq %"struct.v8::internal::wasm::AsmJsParser::VarInfo"* %418, %409
  br i1 %419, label %420, label %411

420:                                              ; preds = %411, %406
  %421 = getelementptr inbounds %"class.v8::internal::Vector.160", %"class.v8::internal::Vector.160"* %370, i64 0, i32 0
  %422 = load i64, i64* %371, align 8
  %423 = mul nuw i64 %422, 40
  %424 = icmp eq i64 %423, 0
  br i1 %424, label %429, label %425

425:                                              ; preds = %420
  %426 = bitcast %"class.v8::internal::Vector.160"* %370 to i8**
  %427 = load i8*, i8** %426, align 8
  %428 = inttoptr i64 %407 to i8*
  tail call void @llvm.memmove.p0i8.p0i8.i64(i8* align 8 %428, i8* align 8 %427, i64 %423, i1 false) #12
  br label %429

429:                                              ; preds = %425, %420
  store %"struct.v8::internal::wasm::AsmJsParser::VarInfo"* %408, %"struct.v8::internal::wasm::AsmJsParser::VarInfo"** %421, align 8
  store i64 %393, i64* %371, align 8
  br label %430

430:                                              ; preds = %387, %429
  %431 = phi %"struct.v8::internal::wasm::AsmJsParser::VarInfo"* [ %389, %387 ], [ %408, %429 ]
  %432 = getelementptr inbounds %"struct.v8::internal::wasm::AsmJsParser::VarInfo", %"struct.v8::internal::wasm::AsmJsParser::VarInfo"* %431, i64 %384
  %433 = getelementptr inbounds %"struct.v8::internal::wasm::AsmJsParser::VarInfo", %"struct.v8::internal::wasm::AsmJsParser::VarInfo"* %431, i64 %384, i32 5
  %434 = load i32, i32* %433, align 8
  %435 = icmp eq i32 %434, 0
  br i1 %435, label %439, label %436

436:                                              ; preds = %430
  store i8 1, i8* %61, align 4
  store i8* getelementptr inbounds ([25 x i8], [25 x i8]* @.str.40, i64 0, i64 0), i8** %347, align 8
  %437 = load i64, i64* %348, align 8
  %438 = trunc i64 %437 to i32
  store i32 %438, i32* %349, align 8
  br label %1268

439:                                              ; preds = %430
  %440 = load i32, i32* %6, align 8
  %441 = icmp eq i32 %440, %356
  br i1 %441, label %442, label %694

442:                                              ; preds = %439
  tail call void @_ZN2v88internal12AsmJsScanner4NextEv(%"class.v8::internal::AsmJsScanner"* %4) #12
  %443 = load i32, i32* %6, align 8
  %444 = icmp eq i32 %443, 124
  br i1 %444, label %448, label %445

445:                                              ; preds = %442
  store i8 1, i8* %61, align 4
  store i8* getelementptr inbounds ([17 x i8], [17 x i8]* @.str.3, i64 0, i64 0), i8** %347, align 8
  %446 = load i64, i64* %348, align 8
  %447 = trunc i64 %446 to i32
  store i32 %447, i32* %349, align 8
  br label %1268

448:                                              ; preds = %442
  tail call void @_ZN2v88internal12AsmJsScanner4NextEv(%"class.v8::internal::AsmJsScanner"* %4) #12
  %449 = load i32, i32* %6, align 8
  %450 = icmp eq i32 %449, -3
  br i1 %450, label %451, label %454

451:                                              ; preds = %448
  %452 = load i32, i32* %345, align 8
  %453 = icmp eq i32 %452, 0
  br i1 %453, label %457, label %454

454:                                              ; preds = %451, %448
  store i8 1, i8* %61, align 4
  store i8* getelementptr inbounds ([34 x i8], [34 x i8]* @.str.41, i64 0, i64 0), i8** %347, align 8
  %455 = load i64, i64* %348, align 8
  %456 = trunc i64 %455 to i32
  store i32 %456, i32* %349, align 8
  br label %1268

457:                                              ; preds = %451
  tail call void @_ZN2v88internal12AsmJsScanner4NextEv(%"class.v8::internal::AsmJsScanner"* %4) #12
  store i32 1, i32* %433, align 8
  %458 = getelementptr inbounds %"struct.v8::internal::wasm::AsmJsParser::VarInfo", %"struct.v8::internal::wasm::AsmJsParser::VarInfo"* %432, i64 0, i32 0
  store %"class.v8::internal::wasm::AsmType"* inttoptr (i64 769 to %"class.v8::internal::wasm::AsmType"*), %"class.v8::internal::wasm::AsmType"** %458, align 8
  %459 = load i64, i64* %339, align 8
  %460 = load i64, i64* %340, align 8
  %461 = sub i64 %459, %460
  %462 = lshr exact i64 %461, 3
  %463 = trunc i64 %462 to i32
  %464 = getelementptr inbounds %"struct.v8::internal::wasm::AsmJsParser::VarInfo", %"struct.v8::internal::wasm::AsmJsParser::VarInfo"* %431, i64 %384, i32 4
  store i32 %463, i32* %464, align 4
  %465 = load %"class.v8::internal::wasm::AsmType"**, %"class.v8::internal::wasm::AsmType"*** %338, align 8
  %466 = load %"class.v8::internal::wasm::AsmType"**, %"class.v8::internal::wasm::AsmType"*** %341, align 8
  %467 = icmp ult %"class.v8::internal::wasm::AsmType"** %465, %466
  %468 = ptrtoint %"class.v8::internal::wasm::AsmType"** %466 to i64
  br i1 %467, label %469, label %473

469:                                              ; preds = %457
  %470 = bitcast %"class.v8::internal::wasm::AsmType"** %465 to i64*
  store i64 769, i64* %470, align 8
  %471 = getelementptr inbounds %"class.v8::internal::wasm::AsmType"*, %"class.v8::internal::wasm::AsmType"** %465, i64 1
  %472 = ptrtoint %"class.v8::internal::wasm::AsmType"** %471 to i64
  store i64 %472, i64* %339, align 8
  br label %1256

473:                                              ; preds = %457
  %474 = ptrtoint %"class.v8::internal::wasm::AsmType"** %465 to i64
  %475 = load i64, i64* %340, align 8
  %476 = sub i64 %474, %475
  %477 = ashr exact i64 %476, 3
  %478 = add nsw i64 %477, 1
  %479 = icmp ugt i64 %478, 268435455
  br i1 %479, label %480, label %482

480:                                              ; preds = %473
  %481 = bitcast %"class.v8::internal::ZoneVector.179"* %1 to %"class.std::__1::__vector_base_common"*
  tail call void @_ZNKSt3__120__vector_base_commonILb1EE20__throw_length_errorEv(%"class.std::__1::__vector_base_common"* %481) #13
  unreachable

482:                                              ; preds = %473
  %483 = sub i64 %468, %475
  %484 = ashr exact i64 %483, 3
  %485 = icmp ult i64 %484, 134217727
  br i1 %485, label %486, label %491

486:                                              ; preds = %482
  %487 = ashr exact i64 %483, 2
  %488 = icmp ult i64 %487, %478
  %489 = select i1 %488, i64 %478, i64 %487
  %490 = icmp eq i64 %489, 0
  br i1 %490, label %508, label %491

491:                                              ; preds = %486, %482
  %492 = phi i64 [ %489, %486 ], [ 268435455, %482 ]
  %493 = load %"class.v8::internal::Zone"*, %"class.v8::internal::Zone"** %343, align 8
  %494 = shl i64 %492, 3
  %495 = getelementptr inbounds %"class.v8::internal::Zone", %"class.v8::internal::Zone"* %493, i64 0, i32 2
  %496 = load i64, i64* %495, align 8
  %497 = getelementptr inbounds %"class.v8::internal::Zone", %"class.v8::internal::Zone"* %493, i64 0, i32 3
  %498 = load i64, i64* %497, align 8
  %499 = sub i64 %498, %496
  %500 = icmp ugt i64 %494, %499
  br i1 %500, label %501, label %503, !prof !2

501:                                              ; preds = %491
  %502 = tail call i64 @_ZN2v88internal4Zone9NewExpandEm(%"class.v8::internal::Zone"* %493, i64 %494) #12
  br label %505

503:                                              ; preds = %491
  %504 = add i64 %496, %494
  store i64 %504, i64* %495, align 8
  br label %505

505:                                              ; preds = %503, %501
  %506 = phi i64 [ %502, %501 ], [ %496, %503 ]
  %507 = inttoptr i64 %506 to %"class.v8::internal::wasm::AsmType"**
  br label %508

508:                                              ; preds = %505, %486
  %509 = phi i64 [ %492, %505 ], [ 0, %486 ]
  %510 = phi %"class.v8::internal::wasm::AsmType"** [ %507, %505 ], [ null, %486 ]
  %511 = getelementptr inbounds %"class.v8::internal::wasm::AsmType"*, %"class.v8::internal::wasm::AsmType"** %510, i64 %477
  %512 = getelementptr inbounds %"class.v8::internal::wasm::AsmType"*, %"class.v8::internal::wasm::AsmType"** %510, i64 %509
  %513 = ptrtoint %"class.v8::internal::wasm::AsmType"** %512 to i64
  %514 = bitcast %"class.v8::internal::wasm::AsmType"** %511 to i64*
  store i64 769, i64* %514, align 8
  %515 = getelementptr inbounds %"class.v8::internal::wasm::AsmType"*, %"class.v8::internal::wasm::AsmType"** %511, i64 1
  %516 = ptrtoint %"class.v8::internal::wasm::AsmType"** %515 to i64
  %517 = load %"class.v8::internal::wasm::AsmType"**, %"class.v8::internal::wasm::AsmType"*** %344, align 8
  %518 = ptrtoint %"class.v8::internal::wasm::AsmType"** %517 to i64
  %519 = load %"class.v8::internal::wasm::AsmType"**, %"class.v8::internal::wasm::AsmType"*** %338, align 8
  %520 = icmp eq %"class.v8::internal::wasm::AsmType"** %519, %517
  br i1 %520, label %691, label %521

521:                                              ; preds = %508
  %522 = getelementptr %"class.v8::internal::wasm::AsmType"*, %"class.v8::internal::wasm::AsmType"** %519, i64 -1
  %523 = ptrtoint %"class.v8::internal::wasm::AsmType"** %522 to i64
  %524 = sub i64 %523, %518
  %525 = lshr i64 %524, 3
  %526 = add nuw nsw i64 %525, 1
  %527 = icmp ult i64 %526, 4
  br i1 %527, label %621, label %528

528:                                              ; preds = %521
  %529 = getelementptr %"class.v8::internal::wasm::AsmType"*, %"class.v8::internal::wasm::AsmType"** %510, i64 -1
  %530 = getelementptr %"class.v8::internal::wasm::AsmType"*, %"class.v8::internal::wasm::AsmType"** %519, i64 -1
  %531 = ptrtoint %"class.v8::internal::wasm::AsmType"** %530 to i64
  %532 = sub i64 %531, %518
  %533 = lshr i64 %532, 3
  %534 = sub nsw i64 %477, %533
  %535 = getelementptr %"class.v8::internal::wasm::AsmType"*, %"class.v8::internal::wasm::AsmType"** %529, i64 %534
  %536 = getelementptr %"class.v8::internal::wasm::AsmType"*, %"class.v8::internal::wasm::AsmType"** %519, i64 -1
  %537 = sub nsw i64 0, %533
  %538 = getelementptr %"class.v8::internal::wasm::AsmType"*, %"class.v8::internal::wasm::AsmType"** %536, i64 %537
  %539 = icmp ult %"class.v8::internal::wasm::AsmType"** %535, %519
  %540 = icmp ult %"class.v8::internal::wasm::AsmType"** %538, %511
  %541 = and i1 %539, %540
  br i1 %541, label %621, label %542

542:                                              ; preds = %528
  %543 = and i64 %526, 4611686018427387900
  %544 = sub nsw i64 0, %543
  %545 = getelementptr %"class.v8::internal::wasm::AsmType"*, %"class.v8::internal::wasm::AsmType"** %511, i64 %544
  %546 = sub nsw i64 0, %543
  %547 = getelementptr %"class.v8::internal::wasm::AsmType"*, %"class.v8::internal::wasm::AsmType"** %519, i64 %546
  %548 = add nsw i64 %543, -4
  %549 = lshr exact i64 %548, 2
  %550 = add nuw nsw i64 %549, 1
  %551 = and i64 %550, 1
  %552 = icmp eq i64 %548, 0
  br i1 %552, label %597, label %553

553:                                              ; preds = %542
  %554 = sub nuw nsw i64 %550, %551
  %555 = getelementptr %"class.v8::internal::wasm::AsmType"*, %"class.v8::internal::wasm::AsmType"** %511, i64 -1
  %556 = getelementptr %"class.v8::internal::wasm::AsmType"*, %"class.v8::internal::wasm::AsmType"** %519, i64 -1
  %557 = getelementptr %"class.v8::internal::wasm::AsmType"*, %"class.v8::internal::wasm::AsmType"** %511, i64 -1
  %558 = getelementptr %"class.v8::internal::wasm::AsmType"*, %"class.v8::internal::wasm::AsmType"** %519, i64 -1
  br label %559

559:                                              ; preds = %559, %553
  %560 = phi i64 [ 0, %553 ], [ %594, %559 ]
  %561 = phi i64 [ %554, %553 ], [ %595, %559 ]
  %562 = sub i64 0, %560
  %563 = sub i64 0, %560
  %564 = getelementptr inbounds %"class.v8::internal::wasm::AsmType"*, %"class.v8::internal::wasm::AsmType"** %555, i64 %562
  %565 = getelementptr inbounds %"class.v8::internal::wasm::AsmType"*, %"class.v8::internal::wasm::AsmType"** %556, i64 %563
  %566 = getelementptr inbounds %"class.v8::internal::wasm::AsmType"*, %"class.v8::internal::wasm::AsmType"** %565, i64 -1
  %567 = bitcast %"class.v8::internal::wasm::AsmType"** %566 to <2 x i64>*
  %568 = load <2 x i64>, <2 x i64>* %567, align 8, !alias.scope !111
  %569 = getelementptr inbounds %"class.v8::internal::wasm::AsmType"*, %"class.v8::internal::wasm::AsmType"** %565, i64 -2
  %570 = getelementptr inbounds %"class.v8::internal::wasm::AsmType"*, %"class.v8::internal::wasm::AsmType"** %569, i64 -1
  %571 = bitcast %"class.v8::internal::wasm::AsmType"** %570 to <2 x i64>*
  %572 = load <2 x i64>, <2 x i64>* %571, align 8, !alias.scope !111
  %573 = getelementptr inbounds %"class.v8::internal::wasm::AsmType"*, %"class.v8::internal::wasm::AsmType"** %564, i64 -1
  %574 = bitcast %"class.v8::internal::wasm::AsmType"** %573 to <2 x i64>*
  store <2 x i64> %568, <2 x i64>* %574, align 8, !alias.scope !114, !noalias !111
  %575 = getelementptr inbounds %"class.v8::internal::wasm::AsmType"*, %"class.v8::internal::wasm::AsmType"** %564, i64 -2
  %576 = getelementptr inbounds %"class.v8::internal::wasm::AsmType"*, %"class.v8::internal::wasm::AsmType"** %575, i64 -1
  %577 = bitcast %"class.v8::internal::wasm::AsmType"** %576 to <2 x i64>*
  store <2 x i64> %572, <2 x i64>* %577, align 8, !alias.scope !114, !noalias !111
  %578 = sub nuw nsw i64 -4, %560
  %579 = sub nuw nsw i64 -4, %560
  %580 = getelementptr inbounds %"class.v8::internal::wasm::AsmType"*, %"class.v8::internal::wasm::AsmType"** %557, i64 %578
  %581 = getelementptr inbounds %"class.v8::internal::wasm::AsmType"*, %"class.v8::internal::wasm::AsmType"** %558, i64 %579
  %582 = getelementptr inbounds %"class.v8::internal::wasm::AsmType"*, %"class.v8::internal::wasm::AsmType"** %581, i64 -1
  %583 = bitcast %"class.v8::internal::wasm::AsmType"** %582 to <2 x i64>*
  %584 = load <2 x i64>, <2 x i64>* %583, align 8, !alias.scope !111
  %585 = getelementptr inbounds %"class.v8::internal::wasm::AsmType"*, %"class.v8::internal::wasm::AsmType"** %581, i64 -2
  %586 = getelementptr inbounds %"class.v8::internal::wasm::AsmType"*, %"class.v8::internal::wasm::AsmType"** %585, i64 -1
  %587 = bitcast %"class.v8::internal::wasm::AsmType"** %586 to <2 x i64>*
  %588 = load <2 x i64>, <2 x i64>* %587, align 8, !alias.scope !111
  %589 = getelementptr inbounds %"class.v8::internal::wasm::AsmType"*, %"class.v8::internal::wasm::AsmType"** %580, i64 -1
  %590 = bitcast %"class.v8::internal::wasm::AsmType"** %589 to <2 x i64>*
  store <2 x i64> %584, <2 x i64>* %590, align 8, !alias.scope !114, !noalias !111
  %591 = getelementptr inbounds %"class.v8::internal::wasm::AsmType"*, %"class.v8::internal::wasm::AsmType"** %580, i64 -2
  %592 = getelementptr inbounds %"class.v8::internal::wasm::AsmType"*, %"class.v8::internal::wasm::AsmType"** %591, i64 -1
  %593 = bitcast %"class.v8::internal::wasm::AsmType"** %592 to <2 x i64>*
  store <2 x i64> %588, <2 x i64>* %593, align 8, !alias.scope !114, !noalias !111
  %594 = add i64 %560, 8
  %595 = add i64 %561, -2
  %596 = icmp eq i64 %595, 0
  br i1 %596, label %597, label %559, !llvm.loop !116

597:                                              ; preds = %559, %542
  %598 = phi i64 [ 0, %542 ], [ %594, %559 ]
  %599 = icmp eq i64 %551, 0
  br i1 %599, label %619, label %600

600:                                              ; preds = %597
  %601 = sub i64 0, %598
  %602 = getelementptr %"class.v8::internal::wasm::AsmType"*, %"class.v8::internal::wasm::AsmType"** %511, i64 -1
  %603 = sub i64 0, %598
  %604 = getelementptr %"class.v8::internal::wasm::AsmType"*, %"class.v8::internal::wasm::AsmType"** %519, i64 -1
  %605 = getelementptr inbounds %"class.v8::internal::wasm::AsmType"*, %"class.v8::internal::wasm::AsmType"** %602, i64 %601
  %606 = getelementptr inbounds %"class.v8::internal::wasm::AsmType"*, %"class.v8::internal::wasm::AsmType"** %604, i64 %603
  %607 = getelementptr inbounds %"class.v8::internal::wasm::AsmType"*, %"class.v8::internal::wasm::AsmType"** %606, i64 -1
  %608 = bitcast %"class.v8::internal::wasm::AsmType"** %607 to <2 x i64>*
  %609 = load <2 x i64>, <2 x i64>* %608, align 8, !alias.scope !111
  %610 = getelementptr inbounds %"class.v8::internal::wasm::AsmType"*, %"class.v8::internal::wasm::AsmType"** %606, i64 -2
  %611 = getelementptr inbounds %"class.v8::internal::wasm::AsmType"*, %"class.v8::internal::wasm::AsmType"** %610, i64 -1
  %612 = bitcast %"class.v8::internal::wasm::AsmType"** %611 to <2 x i64>*
  %613 = load <2 x i64>, <2 x i64>* %612, align 8, !alias.scope !111
  %614 = getelementptr inbounds %"class.v8::internal::wasm::AsmType"*, %"class.v8::internal::wasm::AsmType"** %605, i64 -1
  %615 = bitcast %"class.v8::internal::wasm::AsmType"** %614 to <2 x i64>*
  store <2 x i64> %609, <2 x i64>* %615, align 8, !alias.scope !114, !noalias !111
  %616 = getelementptr inbounds %"class.v8::internal::wasm::AsmType"*, %"class.v8::internal::wasm::AsmType"** %605, i64 -2
  %617 = getelementptr inbounds %"class.v8::internal::wasm::AsmType"*, %"class.v8::internal::wasm::AsmType"** %616, i64 -1
  %618 = bitcast %"class.v8::internal::wasm::AsmType"** %617 to <2 x i64>*
  store <2 x i64> %613, <2 x i64>* %618, align 8, !alias.scope !114, !noalias !111
  br label %619

619:                                              ; preds = %597, %600
  %620 = icmp eq i64 %526, %543
  br i1 %620, label %691, label %621

621:                                              ; preds = %619, %528, %521
  %622 = phi %"class.v8::internal::wasm::AsmType"** [ %511, %528 ], [ %511, %521 ], [ %545, %619 ]
  %623 = phi %"class.v8::internal::wasm::AsmType"** [ %519, %528 ], [ %519, %521 ], [ %547, %619 ]
  %624 = getelementptr %"class.v8::internal::wasm::AsmType"*, %"class.v8::internal::wasm::AsmType"** %623, i64 -1
  %625 = ptrtoint %"class.v8::internal::wasm::AsmType"** %624 to i64
  %626 = sub i64 %625, %518
  %627 = lshr i64 %626, 3
  %628 = add nuw nsw i64 %627, 1
  %629 = and i64 %628, 7
  %630 = icmp eq i64 %629, 0
  br i1 %630, label %642, label %631

631:                                              ; preds = %621, %631
  %632 = phi %"class.v8::internal::wasm::AsmType"** [ %635, %631 ], [ %622, %621 ]
  %633 = phi %"class.v8::internal::wasm::AsmType"** [ %636, %631 ], [ %623, %621 ]
  %634 = phi i64 [ %640, %631 ], [ %629, %621 ]
  %635 = getelementptr inbounds %"class.v8::internal::wasm::AsmType"*, %"class.v8::internal::wasm::AsmType"** %632, i64 -1
  %636 = getelementptr inbounds %"class.v8::internal::wasm::AsmType"*, %"class.v8::internal::wasm::AsmType"** %633, i64 -1
  %637 = bitcast %"class.v8::internal::wasm::AsmType"** %636 to i64*
  %638 = load i64, i64* %637, align 8
  %639 = bitcast %"class.v8::internal::wasm::AsmType"** %635 to i64*
  store i64 %638, i64* %639, align 8
  %640 = add i64 %634, -1
  %641 = icmp eq i64 %640, 0
  br i1 %641, label %642, label %631, !llvm.loop !117

642:                                              ; preds = %631, %621
  %643 = phi %"class.v8::internal::wasm::AsmType"** [ undef, %621 ], [ %635, %631 ]
  %644 = phi %"class.v8::internal::wasm::AsmType"** [ %622, %621 ], [ %635, %631 ]
  %645 = phi %"class.v8::internal::wasm::AsmType"** [ %623, %621 ], [ %636, %631 ]
  %646 = icmp ult i64 %626, 56
  br i1 %646, label %691, label %647

647:                                              ; preds = %642, %647
  %648 = phi %"class.v8::internal::wasm::AsmType"** [ %685, %647 ], [ %644, %642 ]
  %649 = phi %"class.v8::internal::wasm::AsmType"** [ %686, %647 ], [ %645, %642 ]
  %650 = getelementptr inbounds %"class.v8::internal::wasm::AsmType"*, %"class.v8::internal::wasm::AsmType"** %648, i64 -1
  %651 = getelementptr inbounds %"class.v8::internal::wasm::AsmType"*, %"class.v8::internal::wasm::AsmType"** %649, i64 -1
  %652 = bitcast %"class.v8::internal::wasm::AsmType"** %651 to i64*
  %653 = load i64, i64* %652, align 8
  %654 = bitcast %"class.v8::internal::wasm::AsmType"** %650 to i64*
  store i64 %653, i64* %654, align 8
  %655 = getelementptr inbounds %"class.v8::internal::wasm::AsmType"*, %"class.v8::internal::wasm::AsmType"** %648, i64 -2
  %656 = getelementptr inbounds %"class.v8::internal::wasm::AsmType"*, %"class.v8::internal::wasm::AsmType"** %649, i64 -2
  %657 = bitcast %"class.v8::internal::wasm::AsmType"** %656 to i64*
  %658 = load i64, i64* %657, align 8
  %659 = bitcast %"class.v8::internal::wasm::AsmType"** %655 to i64*
  store i64 %658, i64* %659, align 8
  %660 = getelementptr inbounds %"class.v8::internal::wasm::AsmType"*, %"class.v8::internal::wasm::AsmType"** %648, i64 -3
  %661 = getelementptr inbounds %"class.v8::internal::wasm::AsmType"*, %"class.v8::internal::wasm::AsmType"** %649, i64 -3
  %662 = bitcast %"class.v8::internal::wasm::AsmType"** %661 to i64*
  %663 = load i64, i64* %662, align 8
  %664 = bitcast %"class.v8::internal::wasm::AsmType"** %660 to i64*
  store i64 %663, i64* %664, align 8
  %665 = getelementptr inbounds %"class.v8::internal::wasm::AsmType"*, %"class.v8::internal::wasm::AsmType"** %648, i64 -4
  %666 = getelementptr inbounds %"class.v8::internal::wasm::AsmType"*, %"class.v8::internal::wasm::AsmType"** %649, i64 -4
  %667 = bitcast %"class.v8::internal::wasm::AsmType"** %666 to i64*
  %668 = load i64, i64* %667, align 8
  %669 = bitcast %"class.v8::internal::wasm::AsmType"** %665 to i64*
  store i64 %668, i64* %669, align 8
  %670 = getelementptr inbounds %"class.v8::internal::wasm::AsmType"*, %"class.v8::internal::wasm::AsmType"** %648, i64 -5
  %671 = getelementptr inbounds %"class.v8::internal::wasm::AsmType"*, %"class.v8::internal::wasm::AsmType"** %649, i64 -5
  %672 = bitcast %"class.v8::internal::wasm::AsmType"** %671 to i64*
  %673 = load i64, i64* %672, align 8
  %674 = bitcast %"class.v8::internal::wasm::AsmType"** %670 to i64*
  store i64 %673, i64* %674, align 8
  %675 = getelementptr inbounds %"class.v8::internal::wasm::AsmType"*, %"class.v8::internal::wasm::AsmType"** %648, i64 -6
  %676 = getelementptr inbounds %"class.v8::internal::wasm::AsmType"*, %"class.v8::internal::wasm::AsmType"** %649, i64 -6
  %677 = bitcast %"class.v8::internal::wasm::AsmType"** %676 to i64*
  %678 = load i64, i64* %677, align 8
  %679 = bitcast %"class.v8::internal::wasm::AsmType"** %675 to i64*
  store i64 %678, i64* %679, align 8
  %680 = getelementptr inbounds %"class.v8::internal::wasm::AsmType"*, %"class.v8::internal::wasm::AsmType"** %648, i64 -7
  %681 = getelementptr inbounds %"class.v8::internal::wasm::AsmType"*, %"class.v8::internal::wasm::AsmType"** %649, i64 -7
  %682 = bitcast %"class.v8::internal::wasm::AsmType"** %681 to i64*
  %683 = load i64, i64* %682, align 8
  %684 = bitcast %"class.v8::internal::wasm::AsmType"** %680 to i64*
  store i64 %683, i64* %684, align 8
  %685 = getelementptr inbounds %"class.v8::internal::wasm::AsmType"*, %"class.v8::internal::wasm::AsmType"** %648, i64 -8
  %686 = getelementptr inbounds %"class.v8::internal::wasm::AsmType"*, %"class.v8::internal::wasm::AsmType"** %649, i64 -8
  %687 = bitcast %"class.v8::internal::wasm::AsmType"** %686 to i64*
  %688 = load i64, i64* %687, align 8
  %689 = bitcast %"class.v8::internal::wasm::AsmType"** %685 to i64*
  store i64 %688, i64* %689, align 8
  %690 = icmp eq %"class.v8::internal::wasm::AsmType"** %686, %517
  br i1 %690, label %691, label %647, !llvm.loop !118

691:                                              ; preds = %642, %647, %619, %508
  %692 = phi %"class.v8::internal::wasm::AsmType"** [ %511, %508 ], [ %545, %619 ], [ %643, %642 ], [ %685, %647 ]
  %693 = ptrtoint %"class.v8::internal::wasm::AsmType"** %692 to i64
  store i64 %693, i64* %340, align 8
  store i64 %516, i64* %339, align 8
  store i64 %513, i64* %342, align 8
  br label %1256

694:                                              ; preds = %439
  %695 = icmp eq i32 %440, 43
  br i1 %695, label %696, label %939

696:                                              ; preds = %694
  tail call void @_ZN2v88internal12AsmJsScanner4NextEv(%"class.v8::internal::AsmJsScanner"* %4) #12
  %697 = load i32, i32* %6, align 8
  %698 = icmp eq i32 %697, %356
  br i1 %698, label %702, label %699

699:                                              ; preds = %696
  store i8 1, i8* %61, align 4
  store i8* getelementptr inbounds ([17 x i8], [17 x i8]* @.str.3, i64 0, i64 0), i8** %347, align 8
  %700 = load i64, i64* %348, align 8
  %701 = trunc i64 %700 to i32
  store i32 %701, i32* %349, align 8
  br label %1268

702:                                              ; preds = %696
  tail call void @_ZN2v88internal12AsmJsScanner4NextEv(%"class.v8::internal::AsmJsScanner"* %4) #12
  store i32 1, i32* %433, align 8
  %703 = getelementptr inbounds %"struct.v8::internal::wasm::AsmJsParser::VarInfo", %"struct.v8::internal::wasm::AsmJsParser::VarInfo"* %432, i64 0, i32 0
  store %"class.v8::internal::wasm::AsmType"* inttoptr (i64 237 to %"class.v8::internal::wasm::AsmType"*), %"class.v8::internal::wasm::AsmType"** %703, align 8
  %704 = load i64, i64* %339, align 8
  %705 = load i64, i64* %340, align 8
  %706 = sub i64 %704, %705
  %707 = lshr exact i64 %706, 3
  %708 = trunc i64 %707 to i32
  %709 = getelementptr inbounds %"struct.v8::internal::wasm::AsmJsParser::VarInfo", %"struct.v8::internal::wasm::AsmJsParser::VarInfo"* %431, i64 %384, i32 4
  store i32 %708, i32* %709, align 4
  %710 = load %"class.v8::internal::wasm::AsmType"**, %"class.v8::internal::wasm::AsmType"*** %338, align 8
  %711 = load %"class.v8::internal::wasm::AsmType"**, %"class.v8::internal::wasm::AsmType"*** %341, align 8
  %712 = icmp ult %"class.v8::internal::wasm::AsmType"** %710, %711
  %713 = ptrtoint %"class.v8::internal::wasm::AsmType"** %711 to i64
  br i1 %712, label %714, label %718

714:                                              ; preds = %702
  %715 = bitcast %"class.v8::internal::wasm::AsmType"** %710 to i64*
  store i64 237, i64* %715, align 8
  %716 = getelementptr inbounds %"class.v8::internal::wasm::AsmType"*, %"class.v8::internal::wasm::AsmType"** %710, i64 1
  %717 = ptrtoint %"class.v8::internal::wasm::AsmType"** %716 to i64
  store i64 %717, i64* %339, align 8
  br label %1256

718:                                              ; preds = %702
  %719 = ptrtoint %"class.v8::internal::wasm::AsmType"** %710 to i64
  %720 = load i64, i64* %340, align 8
  %721 = sub i64 %719, %720
  %722 = ashr exact i64 %721, 3
  %723 = add nsw i64 %722, 1
  %724 = icmp ugt i64 %723, 268435455
  br i1 %724, label %725, label %727

725:                                              ; preds = %718
  %726 = bitcast %"class.v8::internal::ZoneVector.179"* %1 to %"class.std::__1::__vector_base_common"*
  tail call void @_ZNKSt3__120__vector_base_commonILb1EE20__throw_length_errorEv(%"class.std::__1::__vector_base_common"* %726) #13
  unreachable

727:                                              ; preds = %718
  %728 = sub i64 %713, %720
  %729 = ashr exact i64 %728, 3
  %730 = icmp ult i64 %729, 134217727
  br i1 %730, label %731, label %736

731:                                              ; preds = %727
  %732 = ashr exact i64 %728, 2
  %733 = icmp ult i64 %732, %723
  %734 = select i1 %733, i64 %723, i64 %732
  %735 = icmp eq i64 %734, 0
  br i1 %735, label %753, label %736

736:                                              ; preds = %731, %727
  %737 = phi i64 [ %734, %731 ], [ 268435455, %727 ]
  %738 = load %"class.v8::internal::Zone"*, %"class.v8::internal::Zone"** %343, align 8
  %739 = shl i64 %737, 3
  %740 = getelementptr inbounds %"class.v8::internal::Zone", %"class.v8::internal::Zone"* %738, i64 0, i32 2
  %741 = load i64, i64* %740, align 8
  %742 = getelementptr inbounds %"class.v8::internal::Zone", %"class.v8::internal::Zone"* %738, i64 0, i32 3
  %743 = load i64, i64* %742, align 8
  %744 = sub i64 %743, %741
  %745 = icmp ugt i64 %739, %744
  br i1 %745, label %746, label %748, !prof !2

746:                                              ; preds = %736
  %747 = tail call i64 @_ZN2v88internal4Zone9NewExpandEm(%"class.v8::internal::Zone"* %738, i64 %739) #12
  br label %750

748:                                              ; preds = %736
  %749 = add i64 %741, %739
  store i64 %749, i64* %740, align 8
  br label %750

750:                                              ; preds = %748, %746
  %751 = phi i64 [ %747, %746 ], [ %741, %748 ]
  %752 = inttoptr i64 %751 to %"class.v8::internal::wasm::AsmType"**
  br label %753

753:                                              ; preds = %750, %731
  %754 = phi i64 [ %737, %750 ], [ 0, %731 ]
  %755 = phi %"class.v8::internal::wasm::AsmType"** [ %752, %750 ], [ null, %731 ]
  %756 = getelementptr inbounds %"class.v8::internal::wasm::AsmType"*, %"class.v8::internal::wasm::AsmType"** %755, i64 %722
  %757 = getelementptr inbounds %"class.v8::internal::wasm::AsmType"*, %"class.v8::internal::wasm::AsmType"** %755, i64 %754
  %758 = ptrtoint %"class.v8::internal::wasm::AsmType"** %757 to i64
  %759 = bitcast %"class.v8::internal::wasm::AsmType"** %756 to i64*
  store i64 237, i64* %759, align 8
  %760 = getelementptr inbounds %"class.v8::internal::wasm::AsmType"*, %"class.v8::internal::wasm::AsmType"** %756, i64 1
  %761 = ptrtoint %"class.v8::internal::wasm::AsmType"** %760 to i64
  %762 = load %"class.v8::internal::wasm::AsmType"**, %"class.v8::internal::wasm::AsmType"*** %344, align 8
  %763 = ptrtoint %"class.v8::internal::wasm::AsmType"** %762 to i64
  %764 = load %"class.v8::internal::wasm::AsmType"**, %"class.v8::internal::wasm::AsmType"*** %338, align 8
  %765 = icmp eq %"class.v8::internal::wasm::AsmType"** %764, %762
  br i1 %765, label %936, label %766

766:                                              ; preds = %753
  %767 = getelementptr %"class.v8::internal::wasm::AsmType"*, %"class.v8::internal::wasm::AsmType"** %764, i64 -1
  %768 = ptrtoint %"class.v8::internal::wasm::AsmType"** %767 to i64
  %769 = sub i64 %768, %763
  %770 = lshr i64 %769, 3
  %771 = add nuw nsw i64 %770, 1
  %772 = icmp ult i64 %771, 4
  br i1 %772, label %866, label %773

773:                                              ; preds = %766
  %774 = getelementptr %"class.v8::internal::wasm::AsmType"*, %"class.v8::internal::wasm::AsmType"** %755, i64 -1
  %775 = getelementptr %"class.v8::internal::wasm::AsmType"*, %"class.v8::internal::wasm::AsmType"** %764, i64 -1
  %776 = ptrtoint %"class.v8::internal::wasm::AsmType"** %775 to i64
  %777 = sub i64 %776, %763
  %778 = lshr i64 %777, 3
  %779 = sub nsw i64 %722, %778
  %780 = getelementptr %"class.v8::internal::wasm::AsmType"*, %"class.v8::internal::wasm::AsmType"** %774, i64 %779
  %781 = getelementptr %"class.v8::internal::wasm::AsmType"*, %"class.v8::internal::wasm::AsmType"** %764, i64 -1
  %782 = sub nsw i64 0, %778
  %783 = getelementptr %"class.v8::internal::wasm::AsmType"*, %"class.v8::internal::wasm::AsmType"** %781, i64 %782
  %784 = icmp ult %"class.v8::internal::wasm::AsmType"** %780, %764
  %785 = icmp ult %"class.v8::internal::wasm::AsmType"** %783, %756
  %786 = and i1 %784, %785
  br i1 %786, label %866, label %787

787:                                              ; preds = %773
  %788 = and i64 %771, 4611686018427387900
  %789 = sub nsw i64 0, %788
  %790 = getelementptr %"class.v8::internal::wasm::AsmType"*, %"class.v8::internal::wasm::AsmType"** %756, i64 %789
  %791 = sub nsw i64 0, %788
  %792 = getelementptr %"class.v8::internal::wasm::AsmType"*, %"class.v8::internal::wasm::AsmType"** %764, i64 %791
  %793 = add nsw i64 %788, -4
  %794 = lshr exact i64 %793, 2
  %795 = add nuw nsw i64 %794, 1
  %796 = and i64 %795, 1
  %797 = icmp eq i64 %793, 0
  br i1 %797, label %842, label %798

798:                                              ; preds = %787
  %799 = sub nuw nsw i64 %795, %796
  %800 = getelementptr %"class.v8::internal::wasm::AsmType"*, %"class.v8::internal::wasm::AsmType"** %756, i64 -1
  %801 = getelementptr %"class.v8::internal::wasm::AsmType"*, %"class.v8::internal::wasm::AsmType"** %764, i64 -1
  %802 = getelementptr %"class.v8::internal::wasm::AsmType"*, %"class.v8::internal::wasm::AsmType"** %756, i64 -1
  %803 = getelementptr %"class.v8::internal::wasm::AsmType"*, %"class.v8::internal::wasm::AsmType"** %764, i64 -1
  br label %804

804:                                              ; preds = %804, %798
  %805 = phi i64 [ 0, %798 ], [ %839, %804 ]
  %806 = phi i64 [ %799, %798 ], [ %840, %804 ]
  %807 = sub i64 0, %805
  %808 = sub i64 0, %805
  %809 = getelementptr inbounds %"class.v8::internal::wasm::AsmType"*, %"class.v8::internal::wasm::AsmType"** %800, i64 %807
  %810 = getelementptr inbounds %"class.v8::internal::wasm::AsmType"*, %"class.v8::internal::wasm::AsmType"** %801, i64 %808
  %811 = getelementptr inbounds %"class.v8::internal::wasm::AsmType"*, %"class.v8::internal::wasm::AsmType"** %810, i64 -1
  %812 = bitcast %"class.v8::internal::wasm::AsmType"** %811 to <2 x i64>*
  %813 = load <2 x i64>, <2 x i64>* %812, align 8, !alias.scope !119
  %814 = getelementptr inbounds %"class.v8::internal::wasm::AsmType"*, %"class.v8::internal::wasm::AsmType"** %810, i64 -2
  %815 = getelementptr inbounds %"class.v8::internal::wasm::AsmType"*, %"class.v8::internal::wasm::AsmType"** %814, i64 -1
  %816 = bitcast %"class.v8::internal::wasm::AsmType"** %815 to <2 x i64>*
  %817 = load <2 x i64>, <2 x i64>* %816, align 8, !alias.scope !119
  %818 = getelementptr inbounds %"class.v8::internal::wasm::AsmType"*, %"class.v8::internal::wasm::AsmType"** %809, i64 -1
  %819 = bitcast %"class.v8::internal::wasm::AsmType"** %818 to <2 x i64>*
  store <2 x i64> %813, <2 x i64>* %819, align 8, !alias.scope !122, !noalias !119
  %820 = getelementptr inbounds %"class.v8::internal::wasm::AsmType"*, %"class.v8::internal::wasm::AsmType"** %809, i64 -2
  %821 = getelementptr inbounds %"class.v8::internal::wasm::AsmType"*, %"class.v8::internal::wasm::AsmType"** %820, i64 -1
  %822 = bitcast %"class.v8::internal::wasm::AsmType"** %821 to <2 x i64>*
  store <2 x i64> %817, <2 x i64>* %822, align 8, !alias.scope !122, !noalias !119
  %823 = sub nuw nsw i64 -4, %805
  %824 = sub nuw nsw i64 -4, %805
  %825 = getelementptr inbounds %"class.v8::internal::wasm::AsmType"*, %"class.v8::internal::wasm::AsmType"** %802, i64 %823
  %826 = getelementptr inbounds %"class.v8::internal::wasm::AsmType"*, %"class.v8::internal::wasm::AsmType"** %803, i64 %824
  %827 = getelementptr inbounds %"class.v8::internal::wasm::AsmType"*, %"class.v8::internal::wasm::AsmType"** %826, i64 -1
  %828 = bitcast %"class.v8::internal::wasm::AsmType"** %827 to <2 x i64>*
  %829 = load <2 x i64>, <2 x i64>* %828, align 8, !alias.scope !119
  %830 = getelementptr inbounds %"class.v8::internal::wasm::AsmType"*, %"class.v8::internal::wasm::AsmType"** %826, i64 -2
  %831 = getelementptr inbounds %"class.v8::internal::wasm::AsmType"*, %"class.v8::internal::wasm::AsmType"** %830, i64 -1
  %832 = bitcast %"class.v8::internal::wasm::AsmType"** %831 to <2 x i64>*
  %833 = load <2 x i64>, <2 x i64>* %832, align 8, !alias.scope !119
  %834 = getelementptr inbounds %"class.v8::internal::wasm::AsmType"*, %"class.v8::internal::wasm::AsmType"** %825, i64 -1
  %835 = bitcast %"class.v8::internal::wasm::AsmType"** %834 to <2 x i64>*
  store <2 x i64> %829, <2 x i64>* %835, align 8, !alias.scope !122, !noalias !119
  %836 = getelementptr inbounds %"class.v8::internal::wasm::AsmType"*, %"class.v8::internal::wasm::AsmType"** %825, i64 -2
  %837 = getelementptr inbounds %"class.v8::internal::wasm::AsmType"*, %"class.v8::internal::wasm::AsmType"** %836, i64 -1
  %838 = bitcast %"class.v8::internal::wasm::AsmType"** %837 to <2 x i64>*
  store <2 x i64> %833, <2 x i64>* %838, align 8, !alias.scope !122, !noalias !119
  %839 = add i64 %805, 8
  %840 = add i64 %806, -2
  %841 = icmp eq i64 %840, 0
  br i1 %841, label %842, label %804, !llvm.loop !124

842:                                              ; preds = %804, %787
  %843 = phi i64 [ 0, %787 ], [ %839, %804 ]
  %844 = icmp eq i64 %796, 0
  br i1 %844, label %864, label %845

845:                                              ; preds = %842
  %846 = sub i64 0, %843
  %847 = getelementptr %"class.v8::internal::wasm::AsmType"*, %"class.v8::internal::wasm::AsmType"** %756, i64 -1
  %848 = sub i64 0, %843
  %849 = getelementptr %"class.v8::internal::wasm::AsmType"*, %"class.v8::internal::wasm::AsmType"** %764, i64 -1
  %850 = getelementptr inbounds %"class.v8::internal::wasm::AsmType"*, %"class.v8::internal::wasm::AsmType"** %847, i64 %846
  %851 = getelementptr inbounds %"class.v8::internal::wasm::AsmType"*, %"class.v8::internal::wasm::AsmType"** %849, i64 %848
  %852 = getelementptr inbounds %"class.v8::internal::wasm::AsmType"*, %"class.v8::internal::wasm::AsmType"** %851, i64 -1
  %853 = bitcast %"class.v8::internal::wasm::AsmType"** %852 to <2 x i64>*
  %854 = load <2 x i64>, <2 x i64>* %853, align 8, !alias.scope !119
  %855 = getelementptr inbounds %"class.v8::internal::wasm::AsmType"*, %"class.v8::internal::wasm::AsmType"** %851, i64 -2
  %856 = getelementptr inbounds %"class.v8::internal::wasm::AsmType"*, %"class.v8::internal::wasm::AsmType"** %855, i64 -1
  %857 = bitcast %"class.v8::internal::wasm::AsmType"** %856 to <2 x i64>*
  %858 = load <2 x i64>, <2 x i64>* %857, align 8, !alias.scope !119
  %859 = getelementptr inbounds %"class.v8::internal::wasm::AsmType"*, %"class.v8::internal::wasm::AsmType"** %850, i64 -1
  %860 = bitcast %"class.v8::internal::wasm::AsmType"** %859 to <2 x i64>*
  store <2 x i64> %854, <2 x i64>* %860, align 8, !alias.scope !122, !noalias !119
  %861 = getelementptr inbounds %"class.v8::internal::wasm::AsmType"*, %"class.v8::internal::wasm::AsmType"** %850, i64 -2
  %862 = getelementptr inbounds %"class.v8::internal::wasm::AsmType"*, %"class.v8::internal::wasm::AsmType"** %861, i64 -1
  %863 = bitcast %"class.v8::internal::wasm::AsmType"** %862 to <2 x i64>*
  store <2 x i64> %858, <2 x i64>* %863, align 8, !alias.scope !122, !noalias !119
  br label %864

864:                                              ; preds = %842, %845
  %865 = icmp eq i64 %771, %788
  br i1 %865, label %936, label %866

866:                                              ; preds = %864, %773, %766
  %867 = phi %"class.v8::internal::wasm::AsmType"** [ %756, %773 ], [ %756, %766 ], [ %790, %864 ]
  %868 = phi %"class.v8::internal::wasm::AsmType"** [ %764, %773 ], [ %764, %766 ], [ %792, %864 ]
  %869 = getelementptr %"class.v8::internal::wasm::AsmType"*, %"class.v8::internal::wasm::AsmType"** %868, i64 -1
  %870 = ptrtoint %"class.v8::internal::wasm::AsmType"** %869 to i64
  %871 = sub i64 %870, %763
  %872 = lshr i64 %871, 3
  %873 = add nuw nsw i64 %872, 1
  %874 = and i64 %873, 7
  %875 = icmp eq i64 %874, 0
  br i1 %875, label %887, label %876

876:                                              ; preds = %866, %876
  %877 = phi %"class.v8::internal::wasm::AsmType"** [ %880, %876 ], [ %867, %866 ]
  %878 = phi %"class.v8::internal::wasm::AsmType"** [ %881, %876 ], [ %868, %866 ]
  %879 = phi i64 [ %885, %876 ], [ %874, %866 ]
  %880 = getelementptr inbounds %"class.v8::internal::wasm::AsmType"*, %"class.v8::internal::wasm::AsmType"** %877, i64 -1
  %881 = getelementptr inbounds %"class.v8::internal::wasm::AsmType"*, %"class.v8::internal::wasm::AsmType"** %878, i64 -1
  %882 = bitcast %"class.v8::internal::wasm::AsmType"** %881 to i64*
  %883 = load i64, i64* %882, align 8
  %884 = bitcast %"class.v8::internal::wasm::AsmType"** %880 to i64*
  store i64 %883, i64* %884, align 8
  %885 = add i64 %879, -1
  %886 = icmp eq i64 %885, 0
  br i1 %886, label %887, label %876, !llvm.loop !125

887:                                              ; preds = %876, %866
  %888 = phi %"class.v8::internal::wasm::AsmType"** [ undef, %866 ], [ %880, %876 ]
  %889 = phi %"class.v8::internal::wasm::AsmType"** [ %867, %866 ], [ %880, %876 ]
  %890 = phi %"class.v8::internal::wasm::AsmType"** [ %868, %866 ], [ %881, %876 ]
  %891 = icmp ult i64 %871, 56
  br i1 %891, label %936, label %892

892:                                              ; preds = %887, %892
  %893 = phi %"class.v8::internal::wasm::AsmType"** [ %930, %892 ], [ %889, %887 ]
  %894 = phi %"class.v8::internal::wasm::AsmType"** [ %931, %892 ], [ %890, %887 ]
  %895 = getelementptr inbounds %"class.v8::internal::wasm::AsmType"*, %"class.v8::internal::wasm::AsmType"** %893, i64 -1
  %896 = getelementptr inbounds %"class.v8::internal::wasm::AsmType"*, %"class.v8::internal::wasm::AsmType"** %894, i64 -1
  %897 = bitcast %"class.v8::internal::wasm::AsmType"** %896 to i64*
  %898 = load i64, i64* %897, align 8
  %899 = bitcast %"class.v8::internal::wasm::AsmType"** %895 to i64*
  store i64 %898, i64* %899, align 8
  %900 = getelementptr inbounds %"class.v8::internal::wasm::AsmType"*, %"class.v8::internal::wasm::AsmType"** %893, i64 -2
  %901 = getelementptr inbounds %"class.v8::internal::wasm::AsmType"*, %"class.v8::internal::wasm::AsmType"** %894, i64 -2
  %902 = bitcast %"class.v8::internal::wasm::AsmType"** %901 to i64*
  %903 = load i64, i64* %902, align 8
  %904 = bitcast %"class.v8::internal::wasm::AsmType"** %900 to i64*
  store i64 %903, i64* %904, align 8
  %905 = getelementptr inbounds %"class.v8::internal::wasm::AsmType"*, %"class.v8::internal::wasm::AsmType"** %893, i64 -3
  %906 = getelementptr inbounds %"class.v8::internal::wasm::AsmType"*, %"class.v8::internal::wasm::AsmType"** %894, i64 -3
  %907 = bitcast %"class.v8::internal::wasm::AsmType"** %906 to i64*
  %908 = load i64, i64* %907, align 8
  %909 = bitcast %"class.v8::internal::wasm::AsmType"** %905 to i64*
  store i64 %908, i64* %909, align 8
  %910 = getelementptr inbounds %"class.v8::internal::wasm::AsmType"*, %"class.v8::internal::wasm::AsmType"** %893, i64 -4
  %911 = getelementptr inbounds %"class.v8::internal::wasm::AsmType"*, %"class.v8::internal::wasm::AsmType"** %894, i64 -4
  %912 = bitcast %"class.v8::internal::wasm::AsmType"** %911 to i64*
  %913 = load i64, i64* %912, align 8
  %914 = bitcast %"class.v8::internal::wasm::AsmType"** %910 to i64*
  store i64 %913, i64* %914, align 8
  %915 = getelementptr inbounds %"class.v8::internal::wasm::AsmType"*, %"class.v8::internal::wasm::AsmType"** %893, i64 -5
  %916 = getelementptr inbounds %"class.v8::internal::wasm::AsmType"*, %"class.v8::internal::wasm::AsmType"** %894, i64 -5
  %917 = bitcast %"class.v8::internal::wasm::AsmType"** %916 to i64*
  %918 = load i64, i64* %917, align 8
  %919 = bitcast %"class.v8::internal::wasm::AsmType"** %915 to i64*
  store i64 %918, i64* %919, align 8
  %920 = getelementptr inbounds %"class.v8::internal::wasm::AsmType"*, %"class.v8::internal::wasm::AsmType"** %893, i64 -6
  %921 = getelementptr inbounds %"class.v8::internal::wasm::AsmType"*, %"class.v8::internal::wasm::AsmType"** %894, i64 -6
  %922 = bitcast %"class.v8::internal::wasm::AsmType"** %921 to i64*
  %923 = load i64, i64* %922, align 8
  %924 = bitcast %"class.v8::internal::wasm::AsmType"** %920 to i64*
  store i64 %923, i64* %924, align 8
  %925 = getelementptr inbounds %"class.v8::internal::wasm::AsmType"*, %"class.v8::internal::wasm::AsmType"** %893, i64 -7
  %926 = getelementptr inbounds %"class.v8::internal::wasm::AsmType"*, %"class.v8::internal::wasm::AsmType"** %894, i64 -7
  %927 = bitcast %"class.v8::internal::wasm::AsmType"** %926 to i64*
  %928 = load i64, i64* %927, align 8
  %929 = bitcast %"class.v8::internal::wasm::AsmType"** %925 to i64*
  store i64 %928, i64* %929, align 8
  %930 = getelementptr inbounds %"class.v8::internal::wasm::AsmType"*, %"class.v8::internal::wasm::AsmType"** %893, i64 -8
  %931 = getelementptr inbounds %"class.v8::internal::wasm::AsmType"*, %"class.v8::internal::wasm::AsmType"** %894, i64 -8
  %932 = bitcast %"class.v8::internal::wasm::AsmType"** %931 to i64*
  %933 = load i64, i64* %932, align 8
  %934 = bitcast %"class.v8::internal::wasm::AsmType"** %930 to i64*
  store i64 %933, i64* %934, align 8
  %935 = icmp eq %"class.v8::internal::wasm::AsmType"** %931, %762
  br i1 %935, label %936, label %892, !llvm.loop !126

936:                                              ; preds = %887, %892, %864, %753
  %937 = phi %"class.v8::internal::wasm::AsmType"** [ %756, %753 ], [ %790, %864 ], [ %888, %887 ], [ %930, %892 ]
  %938 = ptrtoint %"class.v8::internal::wasm::AsmType"** %937 to i64
  store i64 %938, i64* %340, align 8
  store i64 %761, i64* %339, align 8
  store i64 %758, i64* %342, align 8
  br label %1256

939:                                              ; preds = %694
  %940 = icmp sgt i32 %440, 255
  br i1 %940, label %941, label %998

941:                                              ; preds = %939
  tail call void @_ZN2v88internal12AsmJsScanner4NextEv(%"class.v8::internal::AsmJsScanner"* %4) #12
  %942 = load i64, i64* %350, align 8
  %943 = add nsw i32 %440, -256
  %944 = sext i32 %943 to i64
  %945 = load i64, i64* %335, align 8
  %946 = icmp ugt i64 %945, %944
  br i1 %946, label %949, label %947

947:                                              ; preds = %941
  %948 = add nuw nsw i64 %944, 1
  store i64 %948, i64* %335, align 8
  br label %949

949:                                              ; preds = %947, %941
  %950 = add nuw nsw i64 %944, 1
  %951 = icmp ugt i64 %942, %944
  br i1 %951, label %952, label %954

952:                                              ; preds = %949
  %953 = load %"struct.v8::internal::wasm::AsmJsParser::VarInfo"*, %"struct.v8::internal::wasm::AsmJsParser::VarInfo"** %351, align 8
  br label %992

954:                                              ; preds = %949
  %955 = shl i64 %942, 1
  %956 = icmp ult i64 %955, %950
  %957 = select i1 %956, i64 %950, i64 %955
  %958 = load %"class.v8::internal::Zone"*, %"class.v8::internal::Zone"** %336, align 8
  %959 = mul i64 %957, 40
  %960 = getelementptr inbounds %"class.v8::internal::Zone", %"class.v8::internal::Zone"* %958, i64 0, i32 2
  %961 = load i64, i64* %960, align 8
  %962 = getelementptr inbounds %"class.v8::internal::Zone", %"class.v8::internal::Zone"* %958, i64 0, i32 3
  %963 = load i64, i64* %962, align 8
  %964 = sub i64 %963, %961
  %965 = icmp ugt i64 %959, %964
  br i1 %965, label %966, label %968, !prof !2

966:                                              ; preds = %954
  %967 = tail call i64 @_ZN2v88internal4Zone9NewExpandEm(%"class.v8::internal::Zone"* %958, i64 %959) #12
  br label %970

968:                                              ; preds = %954
  %969 = add i64 %961, %959
  store i64 %969, i64* %960, align 8
  br label %970

970:                                              ; preds = %968, %966
  %971 = phi i64 [ %967, %966 ], [ %961, %968 ]
  %972 = inttoptr i64 %971 to %"struct.v8::internal::wasm::AsmJsParser::VarInfo"*
  %973 = getelementptr inbounds %"struct.v8::internal::wasm::AsmJsParser::VarInfo", %"struct.v8::internal::wasm::AsmJsParser::VarInfo"* %972, i64 %957
  %974 = icmp eq i64 %957, 0
  br i1 %974, label %984, label %975

975:                                              ; preds = %970, %975
  %976 = phi %"struct.v8::internal::wasm::AsmJsParser::VarInfo"* [ %982, %975 ], [ %972, %970 ]
  %977 = getelementptr inbounds %"struct.v8::internal::wasm::AsmJsParser::VarInfo", %"struct.v8::internal::wasm::AsmJsParser::VarInfo"* %976, i64 0, i32 0
  store %"class.v8::internal::wasm::AsmType"* inttoptr (i64 2147483649 to %"class.v8::internal::wasm::AsmType"*), %"class.v8::internal::wasm::AsmType"** %977, align 8
  %978 = getelementptr inbounds %"struct.v8::internal::wasm::AsmJsParser::VarInfo", %"struct.v8::internal::wasm::AsmJsParser::VarInfo"* %976, i64 0, i32 1
  %979 = getelementptr inbounds %"struct.v8::internal::wasm::AsmJsParser::VarInfo", %"struct.v8::internal::wasm::AsmJsParser::VarInfo"* %976, i64 0, i32 6
  %980 = bitcast %"class.v8::internal::wasm::WasmFunctionBuilder"** %978 to i8*
  tail call void @llvm.memset.p0i8.i64(i8* align 8 %980, i8 0, i64 28, i1 false) #12
  store i8 1, i8* %979, align 4
  %981 = getelementptr inbounds %"struct.v8::internal::wasm::AsmJsParser::VarInfo", %"struct.v8::internal::wasm::AsmJsParser::VarInfo"* %976, i64 0, i32 7
  store i8 0, i8* %981, align 1
  %982 = getelementptr inbounds %"struct.v8::internal::wasm::AsmJsParser::VarInfo", %"struct.v8::internal::wasm::AsmJsParser::VarInfo"* %976, i64 1
  %983 = icmp eq %"struct.v8::internal::wasm::AsmJsParser::VarInfo"* %982, %973
  br i1 %983, label %984, label %975

984:                                              ; preds = %975, %970
  %985 = load i64, i64* %350, align 8
  %986 = mul nuw i64 %985, 40
  %987 = icmp eq i64 %986, 0
  br i1 %987, label %991, label %988

988:                                              ; preds = %984
  %989 = load i8*, i8** %353, align 8
  %990 = inttoptr i64 %971 to i8*
  tail call void @llvm.memmove.p0i8.p0i8.i64(i8* align 8 %990, i8* align 8 %989, i64 %986, i1 false) #12
  br label %991

991:                                              ; preds = %988, %984
  store %"struct.v8::internal::wasm::AsmJsParser::VarInfo"* %972, %"struct.v8::internal::wasm::AsmJsParser::VarInfo"** %352, align 8
  store i64 %957, i64* %350, align 8
  br label %992

992:                                              ; preds = %952, %991
  %993 = phi %"struct.v8::internal::wasm::AsmJsParser::VarInfo"* [ %953, %952 ], [ %972, %991 ]
  %994 = getelementptr inbounds %"struct.v8::internal::wasm::AsmJsParser::VarInfo", %"struct.v8::internal::wasm::AsmJsParser::VarInfo"* %993, i64 %944, i32 0
  %995 = load %"class.v8::internal::wasm::AsmType"*, %"class.v8::internal::wasm::AsmType"** %994, align 8
  %996 = load %"class.v8::internal::wasm::AsmType"*, %"class.v8::internal::wasm::AsmType"** %337, align 8
  %997 = tail call zeroext i1 @_ZN2v88internal4wasm7AsmType3IsAEPS2_(%"class.v8::internal::wasm::AsmType"* %995, %"class.v8::internal::wasm::AsmType"* %996) #12
  br i1 %997, label %1001, label %998

998:                                              ; preds = %992, %939
  store i8 1, i8* %61, align 4
  store i8* getelementptr inbounds ([16 x i8], [16 x i8]* @.str.42, i64 0, i64 0), i8** %347, align 8
  %999 = load i64, i64* %348, align 8
  %1000 = trunc i64 %999 to i32
  store i32 %1000, i32* %349, align 8
  br label %1268

1001:                                             ; preds = %992
  %1002 = load i32, i32* %6, align 8
  %1003 = icmp eq i32 %1002, 40
  br i1 %1003, label %1007, label %1004

1004:                                             ; preds = %1001
  store i8 1, i8* %61, align 4
  store i8* getelementptr inbounds ([17 x i8], [17 x i8]* @.str.3, i64 0, i64 0), i8** %347, align 8
  %1005 = load i64, i64* %348, align 8
  %1006 = trunc i64 %1005 to i32
  store i32 %1006, i32* %349, align 8
  br label %1268

1007:                                             ; preds = %1001
  tail call void @_ZN2v88internal12AsmJsScanner4NextEv(%"class.v8::internal::AsmJsScanner"* %4) #12
  %1008 = load i32, i32* %6, align 8
  %1009 = icmp eq i32 %1008, %356
  br i1 %1009, label %1013, label %1010

1010:                                             ; preds = %1007
  store i8 1, i8* %61, align 4
  store i8* getelementptr inbounds ([17 x i8], [17 x i8]* @.str.3, i64 0, i64 0), i8** %347, align 8
  %1011 = load i64, i64* %348, align 8
  %1012 = trunc i64 %1011 to i32
  store i32 %1012, i32* %349, align 8
  br label %1268

1013:                                             ; preds = %1007
  tail call void @_ZN2v88internal12AsmJsScanner4NextEv(%"class.v8::internal::AsmJsScanner"* %4) #12
  %1014 = load i32, i32* %6, align 8
  %1015 = icmp eq i32 %1014, 41
  br i1 %1015, label %1019, label %1016

1016:                                             ; preds = %1013
  store i8 1, i8* %61, align 4
  store i8* getelementptr inbounds ([17 x i8], [17 x i8]* @.str.3, i64 0, i64 0), i8** %347, align 8
  %1017 = load i64, i64* %348, align 8
  %1018 = trunc i64 %1017 to i32
  store i32 %1018, i32* %349, align 8
  br label %1268

1019:                                             ; preds = %1013
  tail call void @_ZN2v88internal12AsmJsScanner4NextEv(%"class.v8::internal::AsmJsScanner"* %4) #12
  store i32 1, i32* %433, align 8
  %1020 = getelementptr inbounds %"struct.v8::internal::wasm::AsmJsParser::VarInfo", %"struct.v8::internal::wasm::AsmJsParser::VarInfo"* %432, i64 0, i32 0
  store %"class.v8::internal::wasm::AsmType"* inttoptr (i64 57357 to %"class.v8::internal::wasm::AsmType"*), %"class.v8::internal::wasm::AsmType"** %1020, align 8
  %1021 = load i64, i64* %339, align 8
  %1022 = load i64, i64* %340, align 8
  %1023 = sub i64 %1021, %1022
  %1024 = lshr exact i64 %1023, 3
  %1025 = trunc i64 %1024 to i32
  %1026 = getelementptr inbounds %"struct.v8::internal::wasm::AsmJsParser::VarInfo", %"struct.v8::internal::wasm::AsmJsParser::VarInfo"* %431, i64 %384, i32 4
  store i32 %1025, i32* %1026, align 4
  %1027 = load %"class.v8::internal::wasm::AsmType"**, %"class.v8::internal::wasm::AsmType"*** %338, align 8
  %1028 = load %"class.v8::internal::wasm::AsmType"**, %"class.v8::internal::wasm::AsmType"*** %341, align 8
  %1029 = icmp ult %"class.v8::internal::wasm::AsmType"** %1027, %1028
  %1030 = ptrtoint %"class.v8::internal::wasm::AsmType"** %1028 to i64
  br i1 %1029, label %1031, label %1035

1031:                                             ; preds = %1019
  %1032 = bitcast %"class.v8::internal::wasm::AsmType"** %1027 to i64*
  store i64 57357, i64* %1032, align 8
  %1033 = getelementptr inbounds %"class.v8::internal::wasm::AsmType"*, %"class.v8::internal::wasm::AsmType"** %1027, i64 1
  %1034 = ptrtoint %"class.v8::internal::wasm::AsmType"** %1033 to i64
  store i64 %1034, i64* %339, align 8
  br label %1256

1035:                                             ; preds = %1019
  %1036 = ptrtoint %"class.v8::internal::wasm::AsmType"** %1027 to i64
  %1037 = load i64, i64* %340, align 8
  %1038 = sub i64 %1036, %1037
  %1039 = ashr exact i64 %1038, 3
  %1040 = add nsw i64 %1039, 1
  %1041 = icmp ugt i64 %1040, 268435455
  br i1 %1041, label %1042, label %1044

1042:                                             ; preds = %1035
  %1043 = bitcast %"class.v8::internal::ZoneVector.179"* %1 to %"class.std::__1::__vector_base_common"*
  tail call void @_ZNKSt3__120__vector_base_commonILb1EE20__throw_length_errorEv(%"class.std::__1::__vector_base_common"* %1043) #13
  unreachable

1044:                                             ; preds = %1035
  %1045 = sub i64 %1030, %1037
  %1046 = ashr exact i64 %1045, 3
  %1047 = icmp ult i64 %1046, 134217727
  br i1 %1047, label %1048, label %1053

1048:                                             ; preds = %1044
  %1049 = ashr exact i64 %1045, 2
  %1050 = icmp ult i64 %1049, %1040
  %1051 = select i1 %1050, i64 %1040, i64 %1049
  %1052 = icmp eq i64 %1051, 0
  br i1 %1052, label %1070, label %1053

1053:                                             ; preds = %1048, %1044
  %1054 = phi i64 [ %1051, %1048 ], [ 268435455, %1044 ]
  %1055 = load %"class.v8::internal::Zone"*, %"class.v8::internal::Zone"** %343, align 8
  %1056 = shl i64 %1054, 3
  %1057 = getelementptr inbounds %"class.v8::internal::Zone", %"class.v8::internal::Zone"* %1055, i64 0, i32 2
  %1058 = load i64, i64* %1057, align 8
  %1059 = getelementptr inbounds %"class.v8::internal::Zone", %"class.v8::internal::Zone"* %1055, i64 0, i32 3
  %1060 = load i64, i64* %1059, align 8
  %1061 = sub i64 %1060, %1058
  %1062 = icmp ugt i64 %1056, %1061
  br i1 %1062, label %1063, label %1065, !prof !2

1063:                                             ; preds = %1053
  %1064 = tail call i64 @_ZN2v88internal4Zone9NewExpandEm(%"class.v8::internal::Zone"* %1055, i64 %1056) #12
  br label %1067

1065:                                             ; preds = %1053
  %1066 = add i64 %1058, %1056
  store i64 %1066, i64* %1057, align 8
  br label %1067

1067:                                             ; preds = %1065, %1063
  %1068 = phi i64 [ %1064, %1063 ], [ %1058, %1065 ]
  %1069 = inttoptr i64 %1068 to %"class.v8::internal::wasm::AsmType"**
  br label %1070

1070:                                             ; preds = %1067, %1048
  %1071 = phi i64 [ %1054, %1067 ], [ 0, %1048 ]
  %1072 = phi %"class.v8::internal::wasm::AsmType"** [ %1069, %1067 ], [ null, %1048 ]
  %1073 = getelementptr inbounds %"class.v8::internal::wasm::AsmType"*, %"class.v8::internal::wasm::AsmType"** %1072, i64 %1039
  %1074 = getelementptr inbounds %"class.v8::internal::wasm::AsmType"*, %"class.v8::internal::wasm::AsmType"** %1072, i64 %1071
  %1075 = ptrtoint %"class.v8::internal::wasm::AsmType"** %1074 to i64
  %1076 = bitcast %"class.v8::internal::wasm::AsmType"** %1073 to i64*
  store i64 57357, i64* %1076, align 8
  %1077 = getelementptr inbounds %"class.v8::internal::wasm::AsmType"*, %"class.v8::internal::wasm::AsmType"** %1073, i64 1
  %1078 = ptrtoint %"class.v8::internal::wasm::AsmType"** %1077 to i64
  %1079 = load %"class.v8::internal::wasm::AsmType"**, %"class.v8::internal::wasm::AsmType"*** %344, align 8
  %1080 = ptrtoint %"class.v8::internal::wasm::AsmType"** %1079 to i64
  %1081 = load %"class.v8::internal::wasm::AsmType"**, %"class.v8::internal::wasm::AsmType"*** %338, align 8
  %1082 = icmp eq %"class.v8::internal::wasm::AsmType"** %1081, %1079
  br i1 %1082, label %1253, label %1083

1083:                                             ; preds = %1070
  %1084 = getelementptr %"class.v8::internal::wasm::AsmType"*, %"class.v8::internal::wasm::AsmType"** %1081, i64 -1
  %1085 = ptrtoint %"class.v8::internal::wasm::AsmType"** %1084 to i64
  %1086 = sub i64 %1085, %1080
  %1087 = lshr i64 %1086, 3
  %1088 = add nuw nsw i64 %1087, 1
  %1089 = icmp ult i64 %1088, 4
  br i1 %1089, label %1183, label %1090

1090:                                             ; preds = %1083
  %1091 = getelementptr %"class.v8::internal::wasm::AsmType"*, %"class.v8::internal::wasm::AsmType"** %1072, i64 -1
  %1092 = getelementptr %"class.v8::internal::wasm::AsmType"*, %"class.v8::internal::wasm::AsmType"** %1081, i64 -1
  %1093 = ptrtoint %"class.v8::internal::wasm::AsmType"** %1092 to i64
  %1094 = sub i64 %1093, %1080
  %1095 = lshr i64 %1094, 3
  %1096 = sub nsw i64 %1039, %1095
  %1097 = getelementptr %"class.v8::internal::wasm::AsmType"*, %"class.v8::internal::wasm::AsmType"** %1091, i64 %1096
  %1098 = getelementptr %"class.v8::internal::wasm::AsmType"*, %"class.v8::internal::wasm::AsmType"** %1081, i64 -1
  %1099 = sub nsw i64 0, %1095
  %1100 = getelementptr %"class.v8::internal::wasm::AsmType"*, %"class.v8::internal::wasm::AsmType"** %1098, i64 %1099
  %1101 = icmp ult %"class.v8::internal::wasm::AsmType"** %1097, %1081
  %1102 = icmp ult %"class.v8::internal::wasm::AsmType"** %1100, %1073
  %1103 = and i1 %1101, %1102
  br i1 %1103, label %1183, label %1104

1104:                                             ; preds = %1090
  %1105 = and i64 %1088, 4611686018427387900
  %1106 = sub nsw i64 0, %1105
  %1107 = getelementptr %"class.v8::internal::wasm::AsmType"*, %"class.v8::internal::wasm::AsmType"** %1073, i64 %1106
  %1108 = sub nsw i64 0, %1105
  %1109 = getelementptr %"class.v8::internal::wasm::AsmType"*, %"class.v8::internal::wasm::AsmType"** %1081, i64 %1108
  %1110 = add nsw i64 %1105, -4
  %1111 = lshr exact i64 %1110, 2
  %1112 = add nuw nsw i64 %1111, 1
  %1113 = and i64 %1112, 1
  %1114 = icmp eq i64 %1110, 0
  br i1 %1114, label %1159, label %1115

1115:                                             ; preds = %1104
  %1116 = sub nuw nsw i64 %1112, %1113
  %1117 = getelementptr %"class.v8::internal::wasm::AsmType"*, %"class.v8::internal::wasm::AsmType"** %1073, i64 -1
  %1118 = getelementptr %"class.v8::internal::wasm::AsmType"*, %"class.v8::internal::wasm::AsmType"** %1081, i64 -1
  %1119 = getelementptr %"class.v8::internal::wasm::AsmType"*, %"class.v8::internal::wasm::AsmType"** %1073, i64 -1
  %1120 = getelementptr %"class.v8::internal::wasm::AsmType"*, %"class.v8::internal::wasm::AsmType"** %1081, i64 -1
  br label %1121

1121:                                             ; preds = %1121, %1115
  %1122 = phi i64 [ 0, %1115 ], [ %1156, %1121 ]
  %1123 = phi i64 [ %1116, %1115 ], [ %1157, %1121 ]
  %1124 = sub i64 0, %1122
  %1125 = sub i64 0, %1122
  %1126 = getelementptr inbounds %"class.v8::internal::wasm::AsmType"*, %"class.v8::internal::wasm::AsmType"** %1117, i64 %1124
  %1127 = getelementptr inbounds %"class.v8::internal::wasm::AsmType"*, %"class.v8::internal::wasm::AsmType"** %1118, i64 %1125
  %1128 = getelementptr inbounds %"class.v8::internal::wasm::AsmType"*, %"class.v8::internal::wasm::AsmType"** %1127, i64 -1
  %1129 = bitcast %"class.v8::internal::wasm::AsmType"** %1128 to <2 x i64>*
  %1130 = load <2 x i64>, <2 x i64>* %1129, align 8, !alias.scope !127
  %1131 = getelementptr inbounds %"class.v8::internal::wasm::AsmType"*, %"class.v8::internal::wasm::AsmType"** %1127, i64 -2
  %1132 = getelementptr inbounds %"class.v8::internal::wasm::AsmType"*, %"class.v8::internal::wasm::AsmType"** %1131, i64 -1
  %1133 = bitcast %"class.v8::internal::wasm::AsmType"** %1132 to <2 x i64>*
  %1134 = load <2 x i64>, <2 x i64>* %1133, align 8, !alias.scope !127
  %1135 = getelementptr inbounds %"class.v8::internal::wasm::AsmType"*, %"class.v8::internal::wasm::AsmType"** %1126, i64 -1
  %1136 = bitcast %"class.v8::internal::wasm::AsmType"** %1135 to <2 x i64>*
  store <2 x i64> %1130, <2 x i64>* %1136, align 8, !alias.scope !130, !noalias !127
  %1137 = getelementptr inbounds %"class.v8::internal::wasm::AsmType"*, %"class.v8::internal::wasm::AsmType"** %1126, i64 -2
  %1138 = getelementptr inbounds %"class.v8::internal::wasm::AsmType"*, %"class.v8::internal::wasm::AsmType"** %1137, i64 -1
  %1139 = bitcast %"class.v8::internal::wasm::AsmType"** %1138 to <2 x i64>*
  store <2 x i64> %1134, <2 x i64>* %1139, align 8, !alias.scope !130, !noalias !127
  %1140 = sub nuw nsw i64 -4, %1122
  %1141 = sub nuw nsw i64 -4, %1122
  %1142 = getelementptr inbounds %"class.v8::internal::wasm::AsmType"*, %"class.v8::internal::wasm::AsmType"** %1119, i64 %1140
  %1143 = getelementptr inbounds %"class.v8::internal::wasm::AsmType"*, %"class.v8::internal::wasm::AsmType"** %1120, i64 %1141
  %1144 = getelementptr inbounds %"class.v8::internal::wasm::AsmType"*, %"class.v8::internal::wasm::AsmType"** %1143, i64 -1
  %1145 = bitcast %"class.v8::internal::wasm::AsmType"** %1144 to <2 x i64>*
  %1146 = load <2 x i64>, <2 x i64>* %1145, align 8, !alias.scope !127
  %1147 = getelementptr inbounds %"class.v8::internal::wasm::AsmType"*, %"class.v8::internal::wasm::AsmType"** %1143, i64 -2
  %1148 = getelementptr inbounds %"class.v8::internal::wasm::AsmType"*, %"class.v8::internal::wasm::AsmType"** %1147, i64 -1
  %1149 = bitcast %"class.v8::internal::wasm::AsmType"** %1148 to <2 x i64>*
  %1150 = load <2 x i64>, <2 x i64>* %1149, align 8, !alias.scope !127
  %1151 = getelementptr inbounds %"class.v8::internal::wasm::AsmType"*, %"class.v8::internal::wasm::AsmType"** %1142, i64 -1
  %1152 = bitcast %"class.v8::internal::wasm::AsmType"** %1151 to <2 x i64>*
  store <2 x i64> %1146, <2 x i64>* %1152, align 8, !alias.scope !130, !noalias !127
  %1153 = getelementptr inbounds %"class.v8::internal::wasm::AsmType"*, %"class.v8::internal::wasm::AsmType"** %1142, i64 -2
  %1154 = getelementptr inbounds %"class.v8::internal::wasm::AsmType"*, %"class.v8::internal::wasm::AsmType"** %1153, i64 -1
  %1155 = bitcast %"class.v8::internal::wasm::AsmType"** %1154 to <2 x i64>*
  store <2 x i64> %1150, <2 x i64>* %1155, align 8, !alias.scope !130, !noalias !127
  %1156 = add i64 %1122, 8
  %1157 = add i64 %1123, -2
  %1158 = icmp eq i64 %1157, 0
  br i1 %1158, label %1159, label %1121, !llvm.loop !132

1159:                                             ; preds = %1121, %1104
  %1160 = phi i64 [ 0, %1104 ], [ %1156, %1121 ]
  %1161 = icmp eq i64 %1113, 0
  br i1 %1161, label %1181, label %1162

1162:                                             ; preds = %1159
  %1163 = sub i64 0, %1160
  %1164 = getelementptr %"class.v8::internal::wasm::AsmType"*, %"class.v8::internal::wasm::AsmType"** %1073, i64 -1
  %1165 = sub i64 0, %1160
  %1166 = getelementptr %"class.v8::internal::wasm::AsmType"*, %"class.v8::internal::wasm::AsmType"** %1081, i64 -1
  %1167 = getelementptr inbounds %"class.v8::internal::wasm::AsmType"*, %"class.v8::internal::wasm::AsmType"** %1164, i64 %1163
  %1168 = getelementptr inbounds %"class.v8::internal::wasm::AsmType"*, %"class.v8::internal::wasm::AsmType"** %1166, i64 %1165
  %1169 = getelementptr inbounds %"class.v8::internal::wasm::AsmType"*, %"class.v8::internal::wasm::AsmType"** %1168, i64 -1
  %1170 = bitcast %"class.v8::internal::wasm::AsmType"** %1169 to <2 x i64>*
  %1171 = load <2 x i64>, <2 x i64>* %1170, align 8, !alias.scope !127
  %1172 = getelementptr inbounds %"class.v8::internal::wasm::AsmType"*, %"class.v8::internal::wasm::AsmType"** %1168, i64 -2
  %1173 = getelementptr inbounds %"class.v8::internal::wasm::AsmType"*, %"class.v8::internal::wasm::AsmType"** %1172, i64 -1
  %1174 = bitcast %"class.v8::internal::wasm::AsmType"** %1173 to <2 x i64>*
  %1175 = load <2 x i64>, <2 x i64>* %1174, align 8, !alias.scope !127
  %1176 = getelementptr inbounds %"class.v8::internal::wasm::AsmType"*, %"class.v8::internal::wasm::AsmType"** %1167, i64 -1
  %1177 = bitcast %"class.v8::internal::wasm::AsmType"** %1176 to <2 x i64>*
  store <2 x i64> %1171, <2 x i64>* %1177, align 8, !alias.scope !130, !noalias !127
  %1178 = getelementptr inbounds %"class.v8::internal::wasm::AsmType"*, %"class.v8::internal::wasm::AsmType"** %1167, i64 -2
  %1179 = getelementptr inbounds %"class.v8::internal::wasm::AsmType"*, %"class.v8::internal::wasm::AsmType"** %1178, i64 -1
  %1180 = bitcast %"class.v8::internal::wasm::AsmType"** %1179 to <2 x i64>*
  store <2 x i64> %1175, <2 x i64>* %1180, align 8, !alias.scope !130, !noalias !127
  br label %1181

1181:                                             ; preds = %1159, %1162
  %1182 = icmp eq i64 %1088, %1105
  br i1 %1182, label %1253, label %1183

1183:                                             ; preds = %1181, %1090, %1083
  %1184 = phi %"class.v8::internal::wasm::AsmType"** [ %1073, %1090 ], [ %1073, %1083 ], [ %1107, %1181 ]
  %1185 = phi %"class.v8::internal::wasm::AsmType"** [ %1081, %1090 ], [ %1081, %1083 ], [ %1109, %1181 ]
  %1186 = getelementptr %"class.v8::internal::wasm::AsmType"*, %"class.v8::internal::wasm::AsmType"** %1185, i64 -1
  %1187 = ptrtoint %"class.v8::internal::wasm::AsmType"** %1186 to i64
  %1188 = sub i64 %1187, %1080
  %1189 = lshr i64 %1188, 3
  %1190 = add nuw nsw i64 %1189, 1
  %1191 = and i64 %1190, 7
  %1192 = icmp eq i64 %1191, 0
  br i1 %1192, label %1204, label %1193

1193:                                             ; preds = %1183, %1193
  %1194 = phi %"class.v8::internal::wasm::AsmType"** [ %1197, %1193 ], [ %1184, %1183 ]
  %1195 = phi %"class.v8::internal::wasm::AsmType"** [ %1198, %1193 ], [ %1185, %1183 ]
  %1196 = phi i64 [ %1202, %1193 ], [ %1191, %1183 ]
  %1197 = getelementptr inbounds %"class.v8::internal::wasm::AsmType"*, %"class.v8::internal::wasm::AsmType"** %1194, i64 -1
  %1198 = getelementptr inbounds %"class.v8::internal::wasm::AsmType"*, %"class.v8::internal::wasm::AsmType"** %1195, i64 -1
  %1199 = bitcast %"class.v8::internal::wasm::AsmType"** %1198 to i64*
  %1200 = load i64, i64* %1199, align 8
  %1201 = bitcast %"class.v8::internal::wasm::AsmType"** %1197 to i64*
  store i64 %1200, i64* %1201, align 8
  %1202 = add i64 %1196, -1
  %1203 = icmp eq i64 %1202, 0
  br i1 %1203, label %1204, label %1193, !llvm.loop !133

1204:                                             ; preds = %1193, %1183
  %1205 = phi %"class.v8::internal::wasm::AsmType"** [ undef, %1183 ], [ %1197, %1193 ]
  %1206 = phi %"class.v8::internal::wasm::AsmType"** [ %1184, %1183 ], [ %1197, %1193 ]
  %1207 = phi %"class.v8::internal::wasm::AsmType"** [ %1185, %1183 ], [ %1198, %1193 ]
  %1208 = icmp ult i64 %1188, 56
  br i1 %1208, label %1253, label %1209

1209:                                             ; preds = %1204, %1209
  %1210 = phi %"class.v8::internal::wasm::AsmType"** [ %1247, %1209 ], [ %1206, %1204 ]
  %1211 = phi %"class.v8::internal::wasm::AsmType"** [ %1248, %1209 ], [ %1207, %1204 ]
  %1212 = getelementptr inbounds %"class.v8::internal::wasm::AsmType"*, %"class.v8::internal::wasm::AsmType"** %1210, i64 -1
  %1213 = getelementptr inbounds %"class.v8::internal::wasm::AsmType"*, %"class.v8::internal::wasm::AsmType"** %1211, i64 -1
  %1214 = bitcast %"class.v8::internal::wasm::AsmType"** %1213 to i64*
  %1215 = load i64, i64* %1214, align 8
  %1216 = bitcast %"class.v8::internal::wasm::AsmType"** %1212 to i64*
  store i64 %1215, i64* %1216, align 8
  %1217 = getelementptr inbounds %"class.v8::internal::wasm::AsmType"*, %"class.v8::internal::wasm::AsmType"** %1210, i64 -2
  %1218 = getelementptr inbounds %"class.v8::internal::wasm::AsmType"*, %"class.v8::internal::wasm::AsmType"** %1211, i64 -2
  %1219 = bitcast %"class.v8::internal::wasm::AsmType"** %1218 to i64*
  %1220 = load i64, i64* %1219, align 8
  %1221 = bitcast %"class.v8::internal::wasm::AsmType"** %1217 to i64*
  store i64 %1220, i64* %1221, align 8
  %1222 = getelementptr inbounds %"class.v8::internal::wasm::AsmType"*, %"class.v8::internal::wasm::AsmType"** %1210, i64 -3
  %1223 = getelementptr inbounds %"class.v8::internal::wasm::AsmType"*, %"class.v8::internal::wasm::AsmType"** %1211, i64 -3
  %1224 = bitcast %"class.v8::internal::wasm::AsmType"** %1223 to i64*
  %1225 = load i64, i64* %1224, align 8
  %1226 = bitcast %"class.v8::internal::wasm::AsmType"** %1222 to i64*
  store i64 %1225, i64* %1226, align 8
  %1227 = getelementptr inbounds %"class.v8::internal::wasm::AsmType"*, %"class.v8::internal::wasm::AsmType"** %1210, i64 -4
  %1228 = getelementptr inbounds %"class.v8::internal::wasm::AsmType"*, %"class.v8::internal::wasm::AsmType"** %1211, i64 -4
  %1229 = bitcast %"class.v8::internal::wasm::AsmType"** %1228 to i64*
  %1230 = load i64, i64* %1229, align 8
  %1231 = bitcast %"class.v8::internal::wasm::AsmType"** %1227 to i64*
  store i64 %1230, i64* %1231, align 8
  %1232 = getelementptr inbounds %"class.v8::internal::wasm::AsmType"*, %"class.v8::internal::wasm::AsmType"** %1210, i64 -5
  %1233 = getelementptr inbounds %"class.v8::internal::wasm::AsmType"*, %"class.v8::internal::wasm::AsmType"** %1211, i64 -5
  %1234 = bitcast %"class.v8::internal::wasm::AsmType"** %1233 to i64*
  %1235 = load i64, i64* %1234, align 8
  %1236 = bitcast %"class.v8::internal::wasm::AsmType"** %1232 to i64*
  store i64 %1235, i64* %1236, align 8
  %1237 = getelementptr inbounds %"class.v8::internal::wasm::AsmType"*, %"class.v8::internal::wasm::AsmType"** %1210, i64 -6
  %1238 = getelementptr inbounds %"class.v8::internal::wasm::AsmType"*, %"class.v8::internal::wasm::AsmType"** %1211, i64 -6
  %1239 = bitcast %"class.v8::internal::wasm::AsmType"** %1238 to i64*
  %1240 = load i64, i64* %1239, align 8
  %1241 = bitcast %"class.v8::internal::wasm::AsmType"** %1237 to i64*
  store i64 %1240, i64* %1241, align 8
  %1242 = getelementptr inbounds %"class.v8::internal::wasm::AsmType"*, %"class.v8::internal::wasm::AsmType"** %1210, i64 -7
  %1243 = getelementptr inbounds %"class.v8::internal::wasm::AsmType"*, %"class.v8::internal::wasm::AsmType"** %1211, i64 -7
  %1244 = bitcast %"class.v8::internal::wasm::AsmType"** %1243 to i64*
  %1245 = load i64, i64* %1244, align 8
  %1246 = bitcast %"class.v8::internal::wasm::AsmType"** %1242 to i64*
  store i64 %1245, i64* %1246, align 8
  %1247 = getelementptr inbounds %"class.v8::internal::wasm::AsmType"*, %"class.v8::internal::wasm::AsmType"** %1210, i64 -8
  %1248 = getelementptr inbounds %"class.v8::internal::wasm::AsmType"*, %"class.v8::internal::wasm::AsmType"** %1211, i64 -8
  %1249 = bitcast %"class.v8::internal::wasm::AsmType"** %1248 to i64*
  %1250 = load i64, i64* %1249, align 8
  %1251 = bitcast %"class.v8::internal::wasm::AsmType"** %1247 to i64*
  store i64 %1250, i64* %1251, align 8
  %1252 = icmp eq %"class.v8::internal::wasm::AsmType"** %1248, %1079
  br i1 %1252, label %1253, label %1209, !llvm.loop !134

1253:                                             ; preds = %1204, %1209, %1181, %1070
  %1254 = phi %"class.v8::internal::wasm::AsmType"** [ %1073, %1070 ], [ %1107, %1181 ], [ %1205, %1204 ], [ %1247, %1209 ]
  %1255 = ptrtoint %"class.v8::internal::wasm::AsmType"** %1254 to i64
  store i64 %1255, i64* %340, align 8
  store i64 %1078, i64* %339, align 8
  store i64 %1075, i64* %342, align 8
  br label %1256

1256:                                             ; preds = %1253, %1031, %936, %714, %691, %469
  %1257 = load i32, i32* %6, align 8
  switch i32 %1257, label %1259 [
    i32 59, label %1258
    i32 125, label %1265
  ]

1258:                                             ; preds = %1256
  tail call void @_ZN2v88internal12AsmJsScanner4NextEv(%"class.v8::internal::AsmJsScanner"* %4) #12
  br label %1265

1259:                                             ; preds = %1256
  %1260 = load i8, i8* %346, align 4, !range !69
  %1261 = icmp eq i8 %1260, 0
  br i1 %1261, label %1262, label %1265

1262:                                             ; preds = %1259
  store i8 1, i8* %61, align 4
  store i8* getelementptr inbounds ([11 x i8], [11 x i8]* @.str.1, i64 0, i64 0), i8** %347, align 8
  %1263 = load i64, i64* %348, align 8
  %1264 = trunc i64 %1263 to i32
  store i32 %1264, i32* %349, align 8
  br label %1265

1265:                                             ; preds = %1262, %1259, %1258, %1256
  %1266 = getelementptr inbounds i32, i32* %355, i64 1
  %1267 = icmp eq i32* %1266, %319
  br i1 %1267, label %1268, label %354

1268:                                             ; preds = %1265, %328, %998, %1016, %1010, %1004, %699, %454, %445, %436, %365, %359, %322, %312, %298, %78
  %1269 = load %"class.v8::internal::wasm::AsmJsParser::CachedVectors.190"*, %"class.v8::internal::wasm::AsmJsParser::CachedVectors.190"** %24, align 8
  %1270 = getelementptr inbounds %"class.v8::internal::wasm::AsmJsParser::CachedVectors.190", %"class.v8::internal::wasm::AsmJsParser::CachedVectors.190"* %1269, i64 0, i32 0, i32 0, i32 0, i32 1
  %1271 = load %"class.v8::internal::ZoneVector.129"*, %"class.v8::internal::ZoneVector.129"** %1270, align 8
  %1272 = getelementptr inbounds %"class.v8::internal::wasm::AsmJsParser::CachedVectors.190", %"class.v8::internal::wasm::AsmJsParser::CachedVectors.190"* %1269, i64 0, i32 0, i32 0, i32 0, i32 2, i32 0, i32 0
  %1273 = load %"class.v8::internal::ZoneVector.129"*, %"class.v8::internal::ZoneVector.129"** %1272, align 8
  %1274 = icmp ult %"class.v8::internal::ZoneVector.129"* %1271, %1273
  br i1 %1274, label %1275, label %1298

1275:                                             ; preds = %1268
  %1276 = getelementptr inbounds %"class.v8::internal::wasm::AsmJsParser::CachedVector.212", %"class.v8::internal::wasm::AsmJsParser::CachedVector.212"* %3, i64 0, i32 0, i32 0, i32 0, i32 2, i32 1, i32 0
  %1277 = getelementptr inbounds %"class.v8::internal::ZoneVector.129", %"class.v8::internal::ZoneVector.129"* %1271, i64 0, i32 0, i32 0, i32 2, i32 1
  %1278 = bitcast %"class.v8::internal::ZoneAllocator.135"* %1276 to i64*
  %1279 = bitcast %"struct.std::__1::__compressed_pair_elem.134"* %1277 to i64*
  %1280 = bitcast %"class.v8::internal::ZoneVector.129"* %1271 to i8*
  tail call void @llvm.memset.p0i8.i64(i8* align 8 %1280, i8 0, i64 24, i1 false) #12
  %1281 = load i64, i64* %1278, align 8
  store i64 %1281, i64* %1279, align 8
  %1282 = bitcast %"class.v8::internal::wasm::AsmJsParser::CachedVector.212"* %3 to i64*
  %1283 = load i64, i64* %1282, align 8
  %1284 = bitcast %"class.v8::internal::ZoneVector.129"* %1271 to i64*
  store i64 %1283, i64* %1284, align 8
  %1285 = getelementptr inbounds %"class.v8::internal::wasm::AsmJsParser::CachedVector.212", %"class.v8::internal::wasm::AsmJsParser::CachedVector.212"* %3, i64 0, i32 0, i32 0, i32 0, i32 1
  %1286 = bitcast i32** %1285 to i64*
  %1287 = load i64, i64* %1286, align 8
  %1288 = getelementptr inbounds %"class.v8::internal::ZoneVector.129", %"class.v8::internal::ZoneVector.129"* %1271, i64 0, i32 0, i32 0, i32 1
  %1289 = bitcast i32** %1288 to i64*
  store i64 %1287, i64* %1289, align 8
  %1290 = getelementptr inbounds %"class.v8::internal::wasm::AsmJsParser::CachedVector.212", %"class.v8::internal::wasm::AsmJsParser::CachedVector.212"* %3, i64 0, i32 0, i32 0, i32 0, i32 2, i32 0, i32 0
  %1291 = bitcast i32** %1290 to i64*
  %1292 = load i64, i64* %1291, align 8
  %1293 = getelementptr inbounds %"class.v8::internal::ZoneVector.129", %"class.v8::internal::ZoneVector.129"* %1271, i64 0, i32 0, i32 0, i32 2, i32 0, i32 0
  %1294 = bitcast i32** %1293 to i64*
  store i64 %1292, i64* %1294, align 8
  call void @llvm.memset.p0i8.i64(i8* nonnull align 8 %17, i8 0, i64 24, i1 false) #12
  %1295 = getelementptr inbounds %"class.v8::internal::ZoneVector.129", %"class.v8::internal::ZoneVector.129"* %1271, i64 1
  %1296 = ptrtoint %"class.v8::internal::ZoneVector.129"* %1295 to i64
  %1297 = bitcast %"class.v8::internal::ZoneVector.129"** %1270 to i64*
  store i64 %1296, i64* %1297, align 8
  br label %1308

1298:                                             ; preds = %1268
  %1299 = getelementptr inbounds %"class.v8::internal::wasm::AsmJsParser::CachedVector.212", %"class.v8::internal::wasm::AsmJsParser::CachedVector.212"* %3, i64 0, i32 0
  %1300 = getelementptr inbounds %"class.v8::internal::wasm::AsmJsParser::CachedVectors.190", %"class.v8::internal::wasm::AsmJsParser::CachedVectors.190"* %1269, i64 0, i32 0, i32 0
  call void @_ZNSt3__16vectorIN2v88internal10ZoneVectorIiEENS2_13ZoneAllocatorIS4_EEE24__emplace_back_slow_pathIJS4_EEEvDpOT_(%"class.std::__1::vector.192"* %1300, %"class.v8::internal::ZoneVector.129"* nonnull dereferenceable(32) %1299) #12
  %1301 = getelementptr inbounds %"class.v8::internal::wasm::AsmJsParser::CachedVector.212", %"class.v8::internal::wasm::AsmJsParser::CachedVector.212"* %3, i64 0, i32 0, i32 0, i32 0, i32 0
  %1302 = load i32*, i32** %1301, align 8
  %1303 = icmp eq i32* %1302, null
  br i1 %1303, label %1308, label %1304

1304:                                             ; preds = %1298
  %1305 = ptrtoint i32* %1302 to i64
  %1306 = getelementptr inbounds %"class.v8::internal::wasm::AsmJsParser::CachedVector.212", %"class.v8::internal::wasm::AsmJsParser::CachedVector.212"* %3, i64 0, i32 0, i32 0, i32 0, i32 1
  %1307 = bitcast i32** %1306 to i64*
  store i64 %1305, i64* %1307, align 8
  br label %1308

1308:                                             ; preds = %1275, %1298, %1304
  call void @llvm.lifetime.end.p0i8(i64 40, i8* nonnull %17) #12
  br label %1309

1309:                                             ; preds = %1308, %9
  ret void
}

; Function Attrs: nounwind ssp uwtable
define hidden void @_ZN2v88internal4wasm11AsmJsParser22ValidateFunctionLocalsEmPNS0_10ZoneVectorINS1_9ValueTypeEEE(%"class.v8::internal::wasm::AsmJsParser"*, i64, %"class.v8::internal::ZoneVector.164"*) local_unnamed_addr #0 align 2 {
  %4 = getelementptr inbounds %"class.v8::internal::wasm::AsmJsParser", %"class.v8::internal::wasm::AsmJsParser"* %0, i64 0, i32 1, i32 1
  %5 = load i32, i32* %4, align 8
  %6 = icmp eq i32 %5, -9946
  br i1 %6, label %7, label %2309

7:                                                ; preds = %3
  %8 = getelementptr inbounds %"class.v8::internal::wasm::AsmJsParser", %"class.v8::internal::wasm::AsmJsParser"* %0, i64 0, i32 1
  %9 = getelementptr inbounds %"class.v8::internal::wasm::AsmJsParser", %"class.v8::internal::wasm::AsmJsParser"* %0, i64 0, i32 1, i32 11
  %10 = getelementptr inbounds %"class.v8::internal::wasm::AsmJsParser", %"class.v8::internal::wasm::AsmJsParser"* %0, i64 0, i32 7
  %11 = getelementptr inbounds %"class.v8::internal::wasm::AsmJsParser", %"class.v8::internal::wasm::AsmJsParser"* %0, i64 0, i32 8
  %12 = getelementptr inbounds %"class.v8::internal::wasm::AsmJsParser", %"class.v8::internal::wasm::AsmJsParser"* %0, i64 0, i32 9
  %13 = getelementptr inbounds %"class.v8::internal::wasm::AsmJsParser", %"class.v8::internal::wasm::AsmJsParser"* %0, i64 0, i32 0
  %14 = getelementptr inbounds %"class.v8::internal::wasm::AsmJsParser", %"class.v8::internal::wasm::AsmJsParser"* %0, i64 0, i32 1, i32 19
  %15 = getelementptr inbounds %"class.v8::internal::ZoneVector.164", %"class.v8::internal::ZoneVector.164"* %2, i64 0, i32 0, i32 0, i32 1
  %16 = bitcast %"class.v8::internal::wasm::ValueType"** %15 to i64*
  %17 = bitcast %"class.v8::internal::ZoneVector.164"* %2 to i64*
  %18 = getelementptr inbounds %"class.v8::internal::ZoneVector.164", %"class.v8::internal::ZoneVector.164"* %2, i64 0, i32 0, i32 0, i32 2, i32 0, i32 0
  %19 = bitcast %"class.v8::internal::wasm::ValueType"** %18 to i64*
  %20 = getelementptr inbounds %"class.v8::internal::ZoneVector.164", %"class.v8::internal::ZoneVector.164"* %2, i64 0, i32 0, i32 0, i32 2, i32 1, i32 0, i32 0
  %21 = getelementptr inbounds %"class.v8::internal::ZoneVector.164", %"class.v8::internal::ZoneVector.164"* %2, i64 0, i32 0, i32 0, i32 0
  %22 = getelementptr inbounds %"class.v8::internal::wasm::AsmJsParser", %"class.v8::internal::wasm::AsmJsParser"* %0, i64 0, i32 3
  %23 = getelementptr inbounds %"class.v8::internal::wasm::AsmJsParser", %"class.v8::internal::wasm::AsmJsParser"* %0, i64 0, i32 1, i32 18
  %24 = getelementptr inbounds %"class.v8::internal::wasm::AsmJsParser", %"class.v8::internal::wasm::AsmJsParser"* %0, i64 0, i32 7, i32 1
  %25 = getelementptr inbounds %"class.v8::internal::Vector.160", %"class.v8::internal::Vector.160"* %10, i64 0, i32 0
  %26 = bitcast %"class.v8::internal::Vector.160"* %10 to i8**
  %27 = getelementptr inbounds %"class.v8::internal::wasm::AsmJsParser", %"class.v8::internal::wasm::AsmJsParser"* %0, i64 0, i32 33
  %28 = bitcast double* %23 to i64*
  %29 = getelementptr inbounds %"class.v8::internal::wasm::AsmJsParser", %"class.v8::internal::wasm::AsmJsParser"* %0, i64 0, i32 41, i32 0, i32 0, i32 1, i32 0, i32 0
  %30 = getelementptr inbounds %"class.v8::internal::wasm::AsmJsParser", %"class.v8::internal::wasm::AsmJsParser"* %0, i64 0, i32 1, i32 20
  %31 = getelementptr inbounds %"class.v8::internal::wasm::AsmJsParser", %"class.v8::internal::wasm::AsmJsParser"* %0, i64 0, i32 17
  %32 = getelementptr inbounds %"class.v8::internal::wasm::AsmJsParser", %"class.v8::internal::wasm::AsmJsParser"* %0, i64 0, i32 18
  %33 = getelementptr inbounds %"class.v8::internal::wasm::AsmJsParser", %"class.v8::internal::wasm::AsmJsParser"* %0, i64 0, i32 1, i32 5
  %34 = getelementptr inbounds %"class.v8::internal::wasm::AsmJsParser", %"class.v8::internal::wasm::AsmJsParser"* %0, i64 0, i32 19
  %35 = getelementptr inbounds %"class.v8::internal::wasm::AsmJsParser", %"class.v8::internal::wasm::AsmJsParser"* %0, i64 0, i32 8, i32 1
  %36 = getelementptr inbounds %"class.v8::internal::Vector.160", %"class.v8::internal::Vector.160"* %11, i64 0, i32 0
  %37 = getelementptr inbounds %"class.v8::internal::Vector.160", %"class.v8::internal::Vector.160"* %11, i64 0, i32 0
  %38 = bitcast %"class.v8::internal::Vector.160"* %11 to i8**
  br label %39

39:                                               ; preds = %2306, %7
  store i8 1, i8* %9, align 8
  tail call void @_ZN2v88internal12AsmJsScanner4NextEv(%"class.v8::internal::AsmJsScanner"* %8) #12
  store i8 0, i8* %9, align 8
  %40 = load i32, i32* %4, align 8
  %41 = icmp slt i32 %40, -9999
  br i1 %41, label %45, label %42

42:                                               ; preds = %39, %2295
  store i8 1, i8* %31, align 4
  store i8* getelementptr inbounds ([35 x i8], [35 x i8]* @.str.43, i64 0, i64 0), i8** %32, align 8
  %43 = load i64, i64* %33, align 8
  %44 = trunc i64 %43 to i32
  store i32 %44, i32* %34, align 8
  br label %2309

45:                                               ; preds = %39, %2295
  %46 = phi i32 [ %2296, %2295 ], [ %40, %39 ]
  tail call void @_ZN2v88internal12AsmJsScanner4NextEv(%"class.v8::internal::AsmJsScanner"* %8) #12
  %47 = load i64, i64* %35, align 8
  %48 = sub nuw nsw i32 -10000, %46
  %49 = sext i32 %48 to i64
  %50 = add nuw nsw i64 %49, 1
  %51 = icmp ugt i64 %47, %49
  br i1 %51, label %52, label %54

52:                                               ; preds = %45
  %53 = load %"struct.v8::internal::wasm::AsmJsParser::VarInfo"*, %"struct.v8::internal::wasm::AsmJsParser::VarInfo"** %36, align 8
  br label %92

54:                                               ; preds = %45
  %55 = shl i64 %47, 1
  %56 = icmp ult i64 %55, %50
  %57 = select i1 %56, i64 %50, i64 %55
  %58 = load %"class.v8::internal::Zone"*, %"class.v8::internal::Zone"** %13, align 8
  %59 = mul i64 %57, 40
  %60 = getelementptr inbounds %"class.v8::internal::Zone", %"class.v8::internal::Zone"* %58, i64 0, i32 2
  %61 = load i64, i64* %60, align 8
  %62 = getelementptr inbounds %"class.v8::internal::Zone", %"class.v8::internal::Zone"* %58, i64 0, i32 3
  %63 = load i64, i64* %62, align 8
  %64 = sub i64 %63, %61
  %65 = icmp ugt i64 %59, %64
  br i1 %65, label %66, label %68, !prof !2

66:                                               ; preds = %54
  %67 = tail call i64 @_ZN2v88internal4Zone9NewExpandEm(%"class.v8::internal::Zone"* %58, i64 %59) #12
  br label %70

68:                                               ; preds = %54
  %69 = add i64 %61, %59
  store i64 %69, i64* %60, align 8
  br label %70

70:                                               ; preds = %68, %66
  %71 = phi i64 [ %67, %66 ], [ %61, %68 ]
  %72 = inttoptr i64 %71 to %"struct.v8::internal::wasm::AsmJsParser::VarInfo"*
  %73 = getelementptr inbounds %"struct.v8::internal::wasm::AsmJsParser::VarInfo", %"struct.v8::internal::wasm::AsmJsParser::VarInfo"* %72, i64 %57
  %74 = icmp eq i64 %57, 0
  br i1 %74, label %84, label %75

75:                                               ; preds = %70, %75
  %76 = phi %"struct.v8::internal::wasm::AsmJsParser::VarInfo"* [ %82, %75 ], [ %72, %70 ]
  %77 = getelementptr inbounds %"struct.v8::internal::wasm::AsmJsParser::VarInfo", %"struct.v8::internal::wasm::AsmJsParser::VarInfo"* %76, i64 0, i32 0
  store %"class.v8::internal::wasm::AsmType"* inttoptr (i64 2147483649 to %"class.v8::internal::wasm::AsmType"*), %"class.v8::internal::wasm::AsmType"** %77, align 8
  %78 = getelementptr inbounds %"struct.v8::internal::wasm::AsmJsParser::VarInfo", %"struct.v8::internal::wasm::AsmJsParser::VarInfo"* %76, i64 0, i32 1
  %79 = getelementptr inbounds %"struct.v8::internal::wasm::AsmJsParser::VarInfo", %"struct.v8::internal::wasm::AsmJsParser::VarInfo"* %76, i64 0, i32 6
  %80 = bitcast %"class.v8::internal::wasm::WasmFunctionBuilder"** %78 to i8*
  tail call void @llvm.memset.p0i8.i64(i8* align 8 %80, i8 0, i64 28, i1 false) #12
  store i8 1, i8* %79, align 4
  %81 = getelementptr inbounds %"struct.v8::internal::wasm::AsmJsParser::VarInfo", %"struct.v8::internal::wasm::AsmJsParser::VarInfo"* %76, i64 0, i32 7
  store i8 0, i8* %81, align 1
  %82 = getelementptr inbounds %"struct.v8::internal::wasm::AsmJsParser::VarInfo", %"struct.v8::internal::wasm::AsmJsParser::VarInfo"* %76, i64 1
  %83 = icmp eq %"struct.v8::internal::wasm::AsmJsParser::VarInfo"* %82, %73
  br i1 %83, label %84, label %75

84:                                               ; preds = %75, %70
  %85 = load i64, i64* %35, align 8
  %86 = mul nuw i64 %85, 40
  %87 = icmp eq i64 %86, 0
  br i1 %87, label %91, label %88

88:                                               ; preds = %84
  %89 = load i8*, i8** %38, align 8
  %90 = inttoptr i64 %71 to i8*
  tail call void @llvm.memmove.p0i8.p0i8.i64(i8* align 8 %90, i8* align 8 %89, i64 %86, i1 false) #12
  br label %91

91:                                               ; preds = %88, %84
  store %"struct.v8::internal::wasm::AsmJsParser::VarInfo"* %72, %"struct.v8::internal::wasm::AsmJsParser::VarInfo"** %37, align 8
  store i64 %57, i64* %35, align 8
  br label %92

92:                                               ; preds = %52, %91
  %93 = phi %"struct.v8::internal::wasm::AsmJsParser::VarInfo"* [ %53, %52 ], [ %72, %91 ]
  %94 = getelementptr inbounds %"struct.v8::internal::wasm::AsmJsParser::VarInfo", %"struct.v8::internal::wasm::AsmJsParser::VarInfo"* %93, i64 %49
  %95 = getelementptr inbounds %"struct.v8::internal::wasm::AsmJsParser::VarInfo", %"struct.v8::internal::wasm::AsmJsParser::VarInfo"* %93, i64 %49, i32 5
  %96 = load i32, i32* %95, align 8
  %97 = icmp eq i32 %96, 0
  br i1 %97, label %101, label %98

98:                                               ; preds = %92
  store i8 1, i8* %31, align 4
  store i8* getelementptr inbounds ([30 x i8], [30 x i8]* @.str.44, i64 0, i64 0), i8** %32, align 8
  %99 = load i64, i64* %33, align 8
  %100 = trunc i64 %99 to i32
  store i32 %100, i32* %34, align 8
  br label %2309

101:                                              ; preds = %92
  %102 = load i32, i32* %4, align 8
  %103 = icmp eq i32 %102, 61
  br i1 %103, label %107, label %104

104:                                              ; preds = %101
  store i8 1, i8* %31, align 4
  store i8* getelementptr inbounds ([17 x i8], [17 x i8]* @.str.3, i64 0, i64 0), i8** %32, align 8
  %105 = load i64, i64* %33, align 8
  %106 = trunc i64 %105 to i32
  store i32 %106, i32* %34, align 8
  br label %2309

107:                                              ; preds = %101
  tail call void @_ZN2v88internal12AsmJsScanner4NextEv(%"class.v8::internal::AsmJsScanner"* %8) #12
  %108 = load i32, i32* %4, align 8
  %109 = icmp eq i32 %108, 45
  br i1 %109, label %110, label %578

110:                                              ; preds = %107
  tail call void @_ZN2v88internal12AsmJsScanner4NextEv(%"class.v8::internal::AsmJsScanner"* %8) #12
  %111 = load i32, i32* %4, align 8
  switch i32 %111, label %575 [
    i32 -4, label %112
    i32 -3, label %341
  ]

112:                                              ; preds = %110
  %113 = load double, double* %23, align 8
  tail call void @_ZN2v88internal12AsmJsScanner4NextEv(%"class.v8::internal::AsmJsScanner"* %8) #12
  store i32 1, i32* %95, align 8
  %114 = getelementptr inbounds %"struct.v8::internal::wasm::AsmJsParser::VarInfo", %"struct.v8::internal::wasm::AsmJsParser::VarInfo"* %94, i64 0, i32 0
  store %"class.v8::internal::wasm::AsmType"* inttoptr (i64 237 to %"class.v8::internal::wasm::AsmType"*), %"class.v8::internal::wasm::AsmType"** %114, align 8
  %115 = load i64, i64* %16, align 8
  %116 = load i64, i64* %17, align 8
  %117 = sub i64 %115, %116
  %118 = lshr exact i64 %117, 2
  %119 = add i64 %118, %1
  %120 = trunc i64 %119 to i32
  %121 = getelementptr inbounds %"struct.v8::internal::wasm::AsmJsParser::VarInfo", %"struct.v8::internal::wasm::AsmJsParser::VarInfo"* %93, i64 %49, i32 4
  store i32 %120, i32* %121, align 4
  %122 = load %"class.v8::internal::wasm::ValueType"*, %"class.v8::internal::wasm::ValueType"** %15, align 8
  %123 = load %"class.v8::internal::wasm::ValueType"*, %"class.v8::internal::wasm::ValueType"** %18, align 8
  %124 = icmp eq %"class.v8::internal::wasm::ValueType"* %122, %123
  %125 = ptrtoint %"class.v8::internal::wasm::ValueType"* %123 to i64
  br i1 %124, label %130, label %126

126:                                              ; preds = %112
  %127 = getelementptr inbounds %"class.v8::internal::wasm::ValueType", %"class.v8::internal::wasm::ValueType"* %122, i64 0, i32 0
  store i32 4, i32* %127, align 4
  %128 = getelementptr inbounds %"class.v8::internal::wasm::ValueType", %"class.v8::internal::wasm::ValueType"* %122, i64 1
  %129 = ptrtoint %"class.v8::internal::wasm::ValueType"* %128 to i64
  store i64 %129, i64* %16, align 8
  br label %336

130:                                              ; preds = %112
  %131 = ptrtoint %"class.v8::internal::wasm::ValueType"* %122 to i64
  %132 = load i64, i64* %17, align 8
  %133 = sub i64 %131, %132
  %134 = ashr exact i64 %133, 2
  %135 = add nsw i64 %134, 1
  %136 = icmp ugt i64 %135, 536870911
  br i1 %136, label %137, label %139

137:                                              ; preds = %130
  %138 = bitcast %"class.v8::internal::ZoneVector.164"* %2 to %"class.std::__1::__vector_base_common"*
  tail call void @_ZNKSt3__120__vector_base_commonILb1EE20__throw_length_errorEv(%"class.std::__1::__vector_base_common"* %138) #13
  unreachable

139:                                              ; preds = %130
  %140 = sub i64 %125, %132
  %141 = ashr exact i64 %140, 2
  %142 = icmp ult i64 %141, 268435455
  br i1 %142, label %143, label %148

143:                                              ; preds = %139
  %144 = ashr exact i64 %140, 1
  %145 = icmp ult i64 %144, %135
  %146 = select i1 %145, i64 %135, i64 %144
  %147 = icmp eq i64 %146, 0
  br i1 %147, label %167, label %148

148:                                              ; preds = %143, %139
  %149 = phi i64 [ %146, %143 ], [ 536870911, %139 ]
  %150 = load %"class.v8::internal::Zone"*, %"class.v8::internal::Zone"** %20, align 8
  %151 = shl i64 %149, 2
  %152 = add i64 %151, 7
  %153 = and i64 %152, -8
  %154 = getelementptr inbounds %"class.v8::internal::Zone", %"class.v8::internal::Zone"* %150, i64 0, i32 2
  %155 = load i64, i64* %154, align 8
  %156 = getelementptr inbounds %"class.v8::internal::Zone", %"class.v8::internal::Zone"* %150, i64 0, i32 3
  %157 = load i64, i64* %156, align 8
  %158 = sub i64 %157, %155
  %159 = icmp ugt i64 %153, %158
  br i1 %159, label %160, label %162, !prof !2

160:                                              ; preds = %148
  %161 = tail call i64 @_ZN2v88internal4Zone9NewExpandEm(%"class.v8::internal::Zone"* %150, i64 %153) #12
  br label %164

162:                                              ; preds = %148
  %163 = add i64 %153, %155
  store i64 %163, i64* %154, align 8
  br label %164

164:                                              ; preds = %162, %160
  %165 = phi i64 [ %161, %160 ], [ %155, %162 ]
  %166 = inttoptr i64 %165 to %"class.v8::internal::wasm::ValueType"*
  br label %167

167:                                              ; preds = %164, %143
  %168 = phi i64 [ %149, %164 ], [ 0, %143 ]
  %169 = phi %"class.v8::internal::wasm::ValueType"* [ %166, %164 ], [ null, %143 ]
  %170 = getelementptr inbounds %"class.v8::internal::wasm::ValueType", %"class.v8::internal::wasm::ValueType"* %169, i64 %134
  %171 = getelementptr inbounds %"class.v8::internal::wasm::ValueType", %"class.v8::internal::wasm::ValueType"* %169, i64 %168
  %172 = ptrtoint %"class.v8::internal::wasm::ValueType"* %171 to i64
  %173 = getelementptr inbounds %"class.v8::internal::wasm::ValueType", %"class.v8::internal::wasm::ValueType"* %170, i64 0, i32 0
  store i32 4, i32* %173, align 4
  %174 = getelementptr inbounds %"class.v8::internal::wasm::ValueType", %"class.v8::internal::wasm::ValueType"* %170, i64 1
  %175 = ptrtoint %"class.v8::internal::wasm::ValueType"* %174 to i64
  %176 = load %"class.v8::internal::wasm::ValueType"*, %"class.v8::internal::wasm::ValueType"** %21, align 8
  %177 = ptrtoint %"class.v8::internal::wasm::ValueType"* %176 to i64
  %178 = load %"class.v8::internal::wasm::ValueType"*, %"class.v8::internal::wasm::ValueType"** %15, align 8
  %179 = icmp eq %"class.v8::internal::wasm::ValueType"* %178, %176
  br i1 %179, label %333, label %180

180:                                              ; preds = %167
  %181 = getelementptr %"class.v8::internal::wasm::ValueType", %"class.v8::internal::wasm::ValueType"* %178, i64 -1
  %182 = ptrtoint %"class.v8::internal::wasm::ValueType"* %181 to i64
  %183 = sub i64 %182, %177
  %184 = lshr i64 %183, 2
  %185 = add nuw nsw i64 %184, 1
  %186 = icmp ult i64 %185, 8
  br i1 %186, label %277, label %187

187:                                              ; preds = %180
  %188 = getelementptr %"class.v8::internal::wasm::ValueType", %"class.v8::internal::wasm::ValueType"* %169, i64 -1
  %189 = getelementptr %"class.v8::internal::wasm::ValueType", %"class.v8::internal::wasm::ValueType"* %178, i64 -1
  %190 = ptrtoint %"class.v8::internal::wasm::ValueType"* %189 to i64
  %191 = sub i64 %190, %177
  %192 = lshr i64 %191, 2
  %193 = sub nsw i64 %134, %192
  %194 = getelementptr %"class.v8::internal::wasm::ValueType", %"class.v8::internal::wasm::ValueType"* %188, i64 %193
  %195 = getelementptr %"class.v8::internal::wasm::ValueType", %"class.v8::internal::wasm::ValueType"* %178, i64 -1
  %196 = sub nsw i64 0, %192
  %197 = getelementptr %"class.v8::internal::wasm::ValueType", %"class.v8::internal::wasm::ValueType"* %195, i64 %196
  %198 = icmp ult %"class.v8::internal::wasm::ValueType"* %194, %178
  %199 = icmp ult %"class.v8::internal::wasm::ValueType"* %197, %170
  %200 = and i1 %198, %199
  br i1 %200, label %277, label %201

201:                                              ; preds = %187
  %202 = and i64 %185, 9223372036854775800
  %203 = sub nsw i64 0, %202
  %204 = getelementptr %"class.v8::internal::wasm::ValueType", %"class.v8::internal::wasm::ValueType"* %170, i64 %203
  %205 = sub nsw i64 0, %202
  %206 = getelementptr %"class.v8::internal::wasm::ValueType", %"class.v8::internal::wasm::ValueType"* %178, i64 %205
  %207 = add nsw i64 %202, -8
  %208 = lshr exact i64 %207, 3
  %209 = add nuw nsw i64 %208, 1
  %210 = and i64 %209, 1
  %211 = icmp eq i64 %207, 0
  br i1 %211, label %254, label %212

212:                                              ; preds = %201
  %213 = sub nuw nsw i64 %209, %210
  %214 = getelementptr %"class.v8::internal::wasm::ValueType", %"class.v8::internal::wasm::ValueType"* %178, i64 -1
  %215 = getelementptr %"class.v8::internal::wasm::ValueType", %"class.v8::internal::wasm::ValueType"* %178, i64 -1
  br label %216

216:                                              ; preds = %216, %212
  %217 = phi i64 [ 0, %212 ], [ %251, %216 ]
  %218 = phi i64 [ %213, %212 ], [ %252, %216 ]
  %219 = sub i64 0, %217
  %220 = getelementptr %"class.v8::internal::wasm::ValueType", %"class.v8::internal::wasm::ValueType"* %170, i64 %219
  %221 = sub i64 0, %217
  %222 = getelementptr inbounds %"class.v8::internal::wasm::ValueType", %"class.v8::internal::wasm::ValueType"* %214, i64 %221
  %223 = getelementptr inbounds %"class.v8::internal::wasm::ValueType", %"class.v8::internal::wasm::ValueType"* %222, i64 0, i32 0
  %224 = getelementptr inbounds %"class.v8::internal::wasm::ValueType", %"class.v8::internal::wasm::ValueType"* %220, i64 -1, i32 0
  %225 = getelementptr inbounds i32, i32* %223, i64 -3
  %226 = bitcast i32* %225 to <4 x i32>*
  %227 = load <4 x i32>, <4 x i32>* %226, align 4, !alias.scope !135
  %228 = getelementptr inbounds i32, i32* %223, i64 -7
  %229 = bitcast i32* %228 to <4 x i32>*
  %230 = load <4 x i32>, <4 x i32>* %229, align 4, !alias.scope !135
  %231 = getelementptr inbounds i32, i32* %224, i64 -3
  %232 = bitcast i32* %231 to <4 x i32>*
  store <4 x i32> %227, <4 x i32>* %232, align 4, !alias.scope !138, !noalias !135
  %233 = getelementptr inbounds i32, i32* %224, i64 -7
  %234 = bitcast i32* %233 to <4 x i32>*
  store <4 x i32> %230, <4 x i32>* %234, align 4, !alias.scope !138, !noalias !135
  %235 = sub nuw nsw i64 -8, %217
  %236 = getelementptr %"class.v8::internal::wasm::ValueType", %"class.v8::internal::wasm::ValueType"* %170, i64 %235
  %237 = sub nuw nsw i64 -8, %217
  %238 = getelementptr inbounds %"class.v8::internal::wasm::ValueType", %"class.v8::internal::wasm::ValueType"* %215, i64 %237
  %239 = getelementptr inbounds %"class.v8::internal::wasm::ValueType", %"class.v8::internal::wasm::ValueType"* %238, i64 0, i32 0
  %240 = getelementptr inbounds %"class.v8::internal::wasm::ValueType", %"class.v8::internal::wasm::ValueType"* %236, i64 -1, i32 0
  %241 = getelementptr inbounds i32, i32* %239, i64 -3
  %242 = bitcast i32* %241 to <4 x i32>*
  %243 = load <4 x i32>, <4 x i32>* %242, align 4, !alias.scope !135
  %244 = getelementptr inbounds i32, i32* %239, i64 -7
  %245 = bitcast i32* %244 to <4 x i32>*
  %246 = load <4 x i32>, <4 x i32>* %245, align 4, !alias.scope !135
  %247 = getelementptr inbounds i32, i32* %240, i64 -3
  %248 = bitcast i32* %247 to <4 x i32>*
  store <4 x i32> %243, <4 x i32>* %248, align 4, !alias.scope !138, !noalias !135
  %249 = getelementptr inbounds i32, i32* %240, i64 -7
  %250 = bitcast i32* %249 to <4 x i32>*
  store <4 x i32> %246, <4 x i32>* %250, align 4, !alias.scope !138, !noalias !135
  %251 = add i64 %217, 16
  %252 = add i64 %218, -2
  %253 = icmp eq i64 %252, 0
  br i1 %253, label %254, label %216, !llvm.loop !140

254:                                              ; preds = %216, %201
  %255 = phi i64 [ 0, %201 ], [ %251, %216 ]
  %256 = icmp eq i64 %210, 0
  br i1 %256, label %275, label %257

257:                                              ; preds = %254
  %258 = sub i64 0, %255
  %259 = getelementptr %"class.v8::internal::wasm::ValueType", %"class.v8::internal::wasm::ValueType"* %170, i64 %258
  %260 = sub i64 0, %255
  %261 = getelementptr %"class.v8::internal::wasm::ValueType", %"class.v8::internal::wasm::ValueType"* %178, i64 -1
  %262 = getelementptr inbounds %"class.v8::internal::wasm::ValueType", %"class.v8::internal::wasm::ValueType"* %261, i64 %260
  %263 = getelementptr inbounds %"class.v8::internal::wasm::ValueType", %"class.v8::internal::wasm::ValueType"* %262, i64 0, i32 0
  %264 = getelementptr inbounds %"class.v8::internal::wasm::ValueType", %"class.v8::internal::wasm::ValueType"* %259, i64 -1, i32 0
  %265 = getelementptr inbounds i32, i32* %263, i64 -3
  %266 = bitcast i32* %265 to <4 x i32>*
  %267 = load <4 x i32>, <4 x i32>* %266, align 4, !alias.scope !135
  %268 = getelementptr inbounds i32, i32* %263, i64 -7
  %269 = bitcast i32* %268 to <4 x i32>*
  %270 = load <4 x i32>, <4 x i32>* %269, align 4, !alias.scope !135
  %271 = getelementptr inbounds i32, i32* %264, i64 -3
  %272 = bitcast i32* %271 to <4 x i32>*
  store <4 x i32> %267, <4 x i32>* %272, align 4, !alias.scope !138, !noalias !135
  %273 = getelementptr inbounds i32, i32* %264, i64 -7
  %274 = bitcast i32* %273 to <4 x i32>*
  store <4 x i32> %270, <4 x i32>* %274, align 4, !alias.scope !138, !noalias !135
  br label %275

275:                                              ; preds = %254, %257
  %276 = icmp eq i64 %185, %202
  br i1 %276, label %333, label %277

277:                                              ; preds = %275, %187, %180
  %278 = phi %"class.v8::internal::wasm::ValueType"* [ %170, %187 ], [ %170, %180 ], [ %204, %275 ]
  %279 = phi %"class.v8::internal::wasm::ValueType"* [ %178, %187 ], [ %178, %180 ], [ %206, %275 ]
  %280 = getelementptr %"class.v8::internal::wasm::ValueType", %"class.v8::internal::wasm::ValueType"* %279, i64 -1
  %281 = ptrtoint %"class.v8::internal::wasm::ValueType"* %280 to i64
  %282 = sub i64 %281, %177
  %283 = lshr i64 %282, 2
  %284 = add nuw nsw i64 %283, 1
  %285 = and i64 %284, 7
  %286 = icmp eq i64 %285, 0
  br i1 %286, label %298, label %287

287:                                              ; preds = %277, %287
  %288 = phi %"class.v8::internal::wasm::ValueType"* [ %295, %287 ], [ %278, %277 ]
  %289 = phi %"class.v8::internal::wasm::ValueType"* [ %291, %287 ], [ %279, %277 ]
  %290 = phi i64 [ %296, %287 ], [ %285, %277 ]
  %291 = getelementptr inbounds %"class.v8::internal::wasm::ValueType", %"class.v8::internal::wasm::ValueType"* %289, i64 -1
  %292 = getelementptr inbounds %"class.v8::internal::wasm::ValueType", %"class.v8::internal::wasm::ValueType"* %291, i64 0, i32 0
  %293 = getelementptr inbounds %"class.v8::internal::wasm::ValueType", %"class.v8::internal::wasm::ValueType"* %288, i64 -1, i32 0
  %294 = load i32, i32* %292, align 4
  store i32 %294, i32* %293, align 4
  %295 = getelementptr inbounds %"class.v8::internal::wasm::ValueType", %"class.v8::internal::wasm::ValueType"* %288, i64 -1
  %296 = add i64 %290, -1
  %297 = icmp eq i64 %296, 0
  br i1 %297, label %298, label %287, !llvm.loop !141

298:                                              ; preds = %287, %277
  %299 = phi %"class.v8::internal::wasm::ValueType"* [ undef, %277 ], [ %295, %287 ]
  %300 = phi %"class.v8::internal::wasm::ValueType"* [ %278, %277 ], [ %295, %287 ]
  %301 = phi %"class.v8::internal::wasm::ValueType"* [ %279, %277 ], [ %291, %287 ]
  %302 = icmp ult i64 %282, 28
  br i1 %302, label %333, label %303

303:                                              ; preds = %298, %303
  %304 = phi %"class.v8::internal::wasm::ValueType"* [ %331, %303 ], [ %300, %298 ]
  %305 = phi %"class.v8::internal::wasm::ValueType"* [ %327, %303 ], [ %301, %298 ]
  %306 = getelementptr inbounds %"class.v8::internal::wasm::ValueType", %"class.v8::internal::wasm::ValueType"* %305, i64 -1, i32 0
  %307 = getelementptr inbounds %"class.v8::internal::wasm::ValueType", %"class.v8::internal::wasm::ValueType"* %304, i64 -1, i32 0
  %308 = load i32, i32* %306, align 4
  store i32 %308, i32* %307, align 4
  %309 = getelementptr inbounds %"class.v8::internal::wasm::ValueType", %"class.v8::internal::wasm::ValueType"* %305, i64 -2, i32 0
  %310 = getelementptr inbounds %"class.v8::internal::wasm::ValueType", %"class.v8::internal::wasm::ValueType"* %304, i64 -2, i32 0
  %311 = load i32, i32* %309, align 4
  store i32 %311, i32* %310, align 4
  %312 = getelementptr inbounds %"class.v8::internal::wasm::ValueType", %"class.v8::internal::wasm::ValueType"* %305, i64 -3, i32 0
  %313 = getelementptr inbounds %"class.v8::internal::wasm::ValueType", %"class.v8::internal::wasm::ValueType"* %304, i64 -3, i32 0
  %314 = load i32, i32* %312, align 4
  store i32 %314, i32* %313, align 4
  %315 = getelementptr inbounds %"class.v8::internal::wasm::ValueType", %"class.v8::internal::wasm::ValueType"* %305, i64 -4, i32 0
  %316 = getelementptr inbounds %"class.v8::internal::wasm::ValueType", %"class.v8::internal::wasm::ValueType"* %304, i64 -4, i32 0
  %317 = load i32, i32* %315, align 4
  store i32 %317, i32* %316, align 4
  %318 = getelementptr inbounds %"class.v8::internal::wasm::ValueType", %"class.v8::internal::wasm::ValueType"* %305, i64 -5, i32 0
  %319 = getelementptr inbounds %"class.v8::internal::wasm::ValueType", %"class.v8::internal::wasm::ValueType"* %304, i64 -5, i32 0
  %320 = load i32, i32* %318, align 4
  store i32 %320, i32* %319, align 4
  %321 = getelementptr inbounds %"class.v8::internal::wasm::ValueType", %"class.v8::internal::wasm::ValueType"* %305, i64 -6, i32 0
  %322 = getelementptr inbounds %"class.v8::internal::wasm::ValueType", %"class.v8::internal::wasm::ValueType"* %304, i64 -6, i32 0
  %323 = load i32, i32* %321, align 4
  store i32 %323, i32* %322, align 4
  %324 = getelementptr inbounds %"class.v8::internal::wasm::ValueType", %"class.v8::internal::wasm::ValueType"* %305, i64 -7, i32 0
  %325 = getelementptr inbounds %"class.v8::internal::wasm::ValueType", %"class.v8::internal::wasm::ValueType"* %304, i64 -7, i32 0
  %326 = load i32, i32* %324, align 4
  store i32 %326, i32* %325, align 4
  %327 = getelementptr inbounds %"class.v8::internal::wasm::ValueType", %"class.v8::internal::wasm::ValueType"* %305, i64 -8
  %328 = getelementptr inbounds %"class.v8::internal::wasm::ValueType", %"class.v8::internal::wasm::ValueType"* %327, i64 0, i32 0
  %329 = getelementptr inbounds %"class.v8::internal::wasm::ValueType", %"class.v8::internal::wasm::ValueType"* %304, i64 -8, i32 0
  %330 = load i32, i32* %328, align 4
  store i32 %330, i32* %329, align 4
  %331 = getelementptr inbounds %"class.v8::internal::wasm::ValueType", %"class.v8::internal::wasm::ValueType"* %304, i64 -8
  %332 = icmp eq %"class.v8::internal::wasm::ValueType"* %327, %176
  br i1 %332, label %333, label %303, !llvm.loop !142

333:                                              ; preds = %298, %303, %275, %167
  %334 = phi %"class.v8::internal::wasm::ValueType"* [ %170, %167 ], [ %204, %275 ], [ %299, %298 ], [ %331, %303 ]
  %335 = ptrtoint %"class.v8::internal::wasm::ValueType"* %334 to i64
  store i64 %335, i64* %17, align 8
  store i64 %175, i64* %16, align 8
  store i64 %172, i64* %19, align 8
  br label %336

336:                                              ; preds = %126, %333
  %337 = load %"class.v8::internal::wasm::WasmFunctionBuilder"*, %"class.v8::internal::wasm::WasmFunctionBuilder"** %22, align 8
  %338 = fsub double -0.000000e+00, %113
  tail call void @_ZN2v88internal4wasm19WasmFunctionBuilder12EmitF64ConstEd(%"class.v8::internal::wasm::WasmFunctionBuilder"* %337, double %338) #12
  %339 = load %"class.v8::internal::wasm::WasmFunctionBuilder"*, %"class.v8::internal::wasm::WasmFunctionBuilder"** %22, align 8
  %340 = load i32, i32* %121, align 4
  tail call void @_ZN2v88internal4wasm19WasmFunctionBuilder12EmitSetLocalEj(%"class.v8::internal::wasm::WasmFunctionBuilder"* %339, i32 %340) #12
  br label %2293

341:                                              ; preds = %110
  %342 = load i32, i32* %14, align 8
  tail call void @_ZN2v88internal12AsmJsScanner4NextEv(%"class.v8::internal::AsmJsScanner"* %8) #12
  %343 = icmp slt i32 %342, 0
  br i1 %343, label %344, label %347

344:                                              ; preds = %341
  store i8 1, i8* %31, align 4
  store i8* getelementptr inbounds ([29 x i8], [29 x i8]* @.str.11, i64 0, i64 0), i8** %32, align 8
  %345 = load i64, i64* %33, align 8
  %346 = trunc i64 %345 to i32
  store i32 %346, i32* %34, align 8
  br label %2309

347:                                              ; preds = %341
  store i32 1, i32* %95, align 8
  %348 = getelementptr inbounds %"struct.v8::internal::wasm::AsmJsParser::VarInfo", %"struct.v8::internal::wasm::AsmJsParser::VarInfo"* %94, i64 0, i32 0
  store %"class.v8::internal::wasm::AsmType"* inttoptr (i64 769 to %"class.v8::internal::wasm::AsmType"*), %"class.v8::internal::wasm::AsmType"** %348, align 8
  %349 = load i64, i64* %16, align 8
  %350 = load i64, i64* %17, align 8
  %351 = sub i64 %349, %350
  %352 = lshr exact i64 %351, 2
  %353 = add i64 %352, %1
  %354 = trunc i64 %353 to i32
  %355 = getelementptr inbounds %"struct.v8::internal::wasm::AsmJsParser::VarInfo", %"struct.v8::internal::wasm::AsmJsParser::VarInfo"* %93, i64 %49, i32 4
  store i32 %354, i32* %355, align 4
  %356 = load %"class.v8::internal::wasm::ValueType"*, %"class.v8::internal::wasm::ValueType"** %15, align 8
  %357 = load %"class.v8::internal::wasm::ValueType"*, %"class.v8::internal::wasm::ValueType"** %18, align 8
  %358 = icmp eq %"class.v8::internal::wasm::ValueType"* %356, %357
  %359 = ptrtoint %"class.v8::internal::wasm::ValueType"* %357 to i64
  br i1 %358, label %364, label %360

360:                                              ; preds = %347
  %361 = getelementptr inbounds %"class.v8::internal::wasm::ValueType", %"class.v8::internal::wasm::ValueType"* %356, i64 0, i32 0
  store i32 1, i32* %361, align 4
  %362 = getelementptr inbounds %"class.v8::internal::wasm::ValueType", %"class.v8::internal::wasm::ValueType"* %356, i64 1
  %363 = ptrtoint %"class.v8::internal::wasm::ValueType"* %362 to i64
  store i64 %363, i64* %16, align 8
  br label %570

364:                                              ; preds = %347
  %365 = ptrtoint %"class.v8::internal::wasm::ValueType"* %356 to i64
  %366 = load i64, i64* %17, align 8
  %367 = sub i64 %365, %366
  %368 = ashr exact i64 %367, 2
  %369 = add nsw i64 %368, 1
  %370 = icmp ugt i64 %369, 536870911
  br i1 %370, label %371, label %373

371:                                              ; preds = %364
  %372 = bitcast %"class.v8::internal::ZoneVector.164"* %2 to %"class.std::__1::__vector_base_common"*
  tail call void @_ZNKSt3__120__vector_base_commonILb1EE20__throw_length_errorEv(%"class.std::__1::__vector_base_common"* %372) #13
  unreachable

373:                                              ; preds = %364
  %374 = sub i64 %359, %366
  %375 = ashr exact i64 %374, 2
  %376 = icmp ult i64 %375, 268435455
  br i1 %376, label %377, label %382

377:                                              ; preds = %373
  %378 = ashr exact i64 %374, 1
  %379 = icmp ult i64 %378, %369
  %380 = select i1 %379, i64 %369, i64 %378
  %381 = icmp eq i64 %380, 0
  br i1 %381, label %401, label %382

382:                                              ; preds = %377, %373
  %383 = phi i64 [ %380, %377 ], [ 536870911, %373 ]
  %384 = load %"class.v8::internal::Zone"*, %"class.v8::internal::Zone"** %20, align 8
  %385 = shl i64 %383, 2
  %386 = add i64 %385, 7
  %387 = and i64 %386, -8
  %388 = getelementptr inbounds %"class.v8::internal::Zone", %"class.v8::internal::Zone"* %384, i64 0, i32 2
  %389 = load i64, i64* %388, align 8
  %390 = getelementptr inbounds %"class.v8::internal::Zone", %"class.v8::internal::Zone"* %384, i64 0, i32 3
  %391 = load i64, i64* %390, align 8
  %392 = sub i64 %391, %389
  %393 = icmp ugt i64 %387, %392
  br i1 %393, label %394, label %396, !prof !2

394:                                              ; preds = %382
  %395 = tail call i64 @_ZN2v88internal4Zone9NewExpandEm(%"class.v8::internal::Zone"* %384, i64 %387) #12
  br label %398

396:                                              ; preds = %382
  %397 = add i64 %387, %389
  store i64 %397, i64* %388, align 8
  br label %398

398:                                              ; preds = %396, %394
  %399 = phi i64 [ %395, %394 ], [ %389, %396 ]
  %400 = inttoptr i64 %399 to %"class.v8::internal::wasm::ValueType"*
  br label %401

401:                                              ; preds = %398, %377
  %402 = phi i64 [ %383, %398 ], [ 0, %377 ]
  %403 = phi %"class.v8::internal::wasm::ValueType"* [ %400, %398 ], [ null, %377 ]
  %404 = getelementptr inbounds %"class.v8::internal::wasm::ValueType", %"class.v8::internal::wasm::ValueType"* %403, i64 %368
  %405 = getelementptr inbounds %"class.v8::internal::wasm::ValueType", %"class.v8::internal::wasm::ValueType"* %403, i64 %402
  %406 = ptrtoint %"class.v8::internal::wasm::ValueType"* %405 to i64
  %407 = getelementptr inbounds %"class.v8::internal::wasm::ValueType", %"class.v8::internal::wasm::ValueType"* %404, i64 0, i32 0
  store i32 1, i32* %407, align 4
  %408 = getelementptr inbounds %"class.v8::internal::wasm::ValueType", %"class.v8::internal::wasm::ValueType"* %404, i64 1
  %409 = ptrtoint %"class.v8::internal::wasm::ValueType"* %408 to i64
  %410 = load %"class.v8::internal::wasm::ValueType"*, %"class.v8::internal::wasm::ValueType"** %21, align 8
  %411 = ptrtoint %"class.v8::internal::wasm::ValueType"* %410 to i64
  %412 = load %"class.v8::internal::wasm::ValueType"*, %"class.v8::internal::wasm::ValueType"** %15, align 8
  %413 = icmp eq %"class.v8::internal::wasm::ValueType"* %412, %410
  br i1 %413, label %567, label %414

414:                                              ; preds = %401
  %415 = getelementptr %"class.v8::internal::wasm::ValueType", %"class.v8::internal::wasm::ValueType"* %412, i64 -1
  %416 = ptrtoint %"class.v8::internal::wasm::ValueType"* %415 to i64
  %417 = sub i64 %416, %411
  %418 = lshr i64 %417, 2
  %419 = add nuw nsw i64 %418, 1
  %420 = icmp ult i64 %419, 8
  br i1 %420, label %511, label %421

421:                                              ; preds = %414
  %422 = getelementptr %"class.v8::internal::wasm::ValueType", %"class.v8::internal::wasm::ValueType"* %403, i64 -1
  %423 = getelementptr %"class.v8::internal::wasm::ValueType", %"class.v8::internal::wasm::ValueType"* %412, i64 -1
  %424 = ptrtoint %"class.v8::internal::wasm::ValueType"* %423 to i64
  %425 = sub i64 %424, %411
  %426 = lshr i64 %425, 2
  %427 = sub nsw i64 %368, %426
  %428 = getelementptr %"class.v8::internal::wasm::ValueType", %"class.v8::internal::wasm::ValueType"* %422, i64 %427
  %429 = getelementptr %"class.v8::internal::wasm::ValueType", %"class.v8::internal::wasm::ValueType"* %412, i64 -1
  %430 = sub nsw i64 0, %426
  %431 = getelementptr %"class.v8::internal::wasm::ValueType", %"class.v8::internal::wasm::ValueType"* %429, i64 %430
  %432 = icmp ult %"class.v8::internal::wasm::ValueType"* %428, %412
  %433 = icmp ult %"class.v8::internal::wasm::ValueType"* %431, %404
  %434 = and i1 %432, %433
  br i1 %434, label %511, label %435

435:                                              ; preds = %421
  %436 = and i64 %419, 9223372036854775800
  %437 = sub nsw i64 0, %436
  %438 = getelementptr %"class.v8::internal::wasm::ValueType", %"class.v8::internal::wasm::ValueType"* %404, i64 %437
  %439 = sub nsw i64 0, %436
  %440 = getelementptr %"class.v8::internal::wasm::ValueType", %"class.v8::internal::wasm::ValueType"* %412, i64 %439
  %441 = add nsw i64 %436, -8
  %442 = lshr exact i64 %441, 3
  %443 = add nuw nsw i64 %442, 1
  %444 = and i64 %443, 1
  %445 = icmp eq i64 %441, 0
  br i1 %445, label %488, label %446

446:                                              ; preds = %435
  %447 = sub nuw nsw i64 %443, %444
  %448 = getelementptr %"class.v8::internal::wasm::ValueType", %"class.v8::internal::wasm::ValueType"* %412, i64 -1
  %449 = getelementptr %"class.v8::internal::wasm::ValueType", %"class.v8::internal::wasm::ValueType"* %412, i64 -1
  br label %450

450:                                              ; preds = %450, %446
  %451 = phi i64 [ 0, %446 ], [ %485, %450 ]
  %452 = phi i64 [ %447, %446 ], [ %486, %450 ]
  %453 = sub i64 0, %451
  %454 = getelementptr %"class.v8::internal::wasm::ValueType", %"class.v8::internal::wasm::ValueType"* %404, i64 %453
  %455 = sub i64 0, %451
  %456 = getelementptr inbounds %"class.v8::internal::wasm::ValueType", %"class.v8::internal::wasm::ValueType"* %448, i64 %455
  %457 = getelementptr inbounds %"class.v8::internal::wasm::ValueType", %"class.v8::internal::wasm::ValueType"* %456, i64 0, i32 0
  %458 = getelementptr inbounds %"class.v8::internal::wasm::ValueType", %"class.v8::internal::wasm::ValueType"* %454, i64 -1, i32 0
  %459 = getelementptr inbounds i32, i32* %457, i64 -3
  %460 = bitcast i32* %459 to <4 x i32>*
  %461 = load <4 x i32>, <4 x i32>* %460, align 4, !alias.scope !143
  %462 = getelementptr inbounds i32, i32* %457, i64 -7
  %463 = bitcast i32* %462 to <4 x i32>*
  %464 = load <4 x i32>, <4 x i32>* %463, align 4, !alias.scope !143
  %465 = getelementptr inbounds i32, i32* %458, i64 -3
  %466 = bitcast i32* %465 to <4 x i32>*
  store <4 x i32> %461, <4 x i32>* %466, align 4, !alias.scope !146, !noalias !143
  %467 = getelementptr inbounds i32, i32* %458, i64 -7
  %468 = bitcast i32* %467 to <4 x i32>*
  store <4 x i32> %464, <4 x i32>* %468, align 4, !alias.scope !146, !noalias !143
  %469 = sub nuw nsw i64 -8, %451
  %470 = getelementptr %"class.v8::internal::wasm::ValueType", %"class.v8::internal::wasm::ValueType"* %404, i64 %469
  %471 = sub nuw nsw i64 -8, %451
  %472 = getelementptr inbounds %"class.v8::internal::wasm::ValueType", %"class.v8::internal::wasm::ValueType"* %449, i64 %471
  %473 = getelementptr inbounds %"class.v8::internal::wasm::ValueType", %"class.v8::internal::wasm::ValueType"* %472, i64 0, i32 0
  %474 = getelementptr inbounds %"class.v8::internal::wasm::ValueType", %"class.v8::internal::wasm::ValueType"* %470, i64 -1, i32 0
  %475 = getelementptr inbounds i32, i32* %473, i64 -3
  %476 = bitcast i32* %475 to <4 x i32>*
  %477 = load <4 x i32>, <4 x i32>* %476, align 4, !alias.scope !143
  %478 = getelementptr inbounds i32, i32* %473, i64 -7
  %479 = bitcast i32* %478 to <4 x i32>*
  %480 = load <4 x i32>, <4 x i32>* %479, align 4, !alias.scope !143
  %481 = getelementptr inbounds i32, i32* %474, i64 -3
  %482 = bitcast i32* %481 to <4 x i32>*
  store <4 x i32> %477, <4 x i32>* %482, align 4, !alias.scope !146, !noalias !143
  %483 = getelementptr inbounds i32, i32* %474, i64 -7
  %484 = bitcast i32* %483 to <4 x i32>*
  store <4 x i32> %480, <4 x i32>* %484, align 4, !alias.scope !146, !noalias !143
  %485 = add i64 %451, 16
  %486 = add i64 %452, -2
  %487 = icmp eq i64 %486, 0
  br i1 %487, label %488, label %450, !llvm.loop !148

488:                                              ; preds = %450, %435
  %489 = phi i64 [ 0, %435 ], [ %485, %450 ]
  %490 = icmp eq i64 %444, 0
  br i1 %490, label %509, label %491

491:                                              ; preds = %488
  %492 = sub i64 0, %489
  %493 = getelementptr %"class.v8::internal::wasm::ValueType", %"class.v8::internal::wasm::ValueType"* %404, i64 %492
  %494 = sub i64 0, %489
  %495 = getelementptr %"class.v8::internal::wasm::ValueType", %"class.v8::internal::wasm::ValueType"* %412, i64 -1
  %496 = getelementptr inbounds %"class.v8::internal::wasm::ValueType", %"class.v8::internal::wasm::ValueType"* %495, i64 %494
  %497 = getelementptr inbounds %"class.v8::internal::wasm::ValueType", %"class.v8::internal::wasm::ValueType"* %496, i64 0, i32 0
  %498 = getelementptr inbounds %"class.v8::internal::wasm::ValueType", %"class.v8::internal::wasm::ValueType"* %493, i64 -1, i32 0
  %499 = getelementptr inbounds i32, i32* %497, i64 -3
  %500 = bitcast i32* %499 to <4 x i32>*
  %501 = load <4 x i32>, <4 x i32>* %500, align 4, !alias.scope !143
  %502 = getelementptr inbounds i32, i32* %497, i64 -7
  %503 = bitcast i32* %502 to <4 x i32>*
  %504 = load <4 x i32>, <4 x i32>* %503, align 4, !alias.scope !143
  %505 = getelementptr inbounds i32, i32* %498, i64 -3
  %506 = bitcast i32* %505 to <4 x i32>*
  store <4 x i32> %501, <4 x i32>* %506, align 4, !alias.scope !146, !noalias !143
  %507 = getelementptr inbounds i32, i32* %498, i64 -7
  %508 = bitcast i32* %507 to <4 x i32>*
  store <4 x i32> %504, <4 x i32>* %508, align 4, !alias.scope !146, !noalias !143
  br label %509

509:                                              ; preds = %488, %491
  %510 = icmp eq i64 %419, %436
  br i1 %510, label %567, label %511

511:                                              ; preds = %509, %421, %414
  %512 = phi %"class.v8::internal::wasm::ValueType"* [ %404, %421 ], [ %404, %414 ], [ %438, %509 ]
  %513 = phi %"class.v8::internal::wasm::ValueType"* [ %412, %421 ], [ %412, %414 ], [ %440, %509 ]
  %514 = getelementptr %"class.v8::internal::wasm::ValueType", %"class.v8::internal::wasm::ValueType"* %513, i64 -1
  %515 = ptrtoint %"class.v8::internal::wasm::ValueType"* %514 to i64
  %516 = sub i64 %515, %411
  %517 = lshr i64 %516, 2
  %518 = add nuw nsw i64 %517, 1
  %519 = and i64 %518, 7
  %520 = icmp eq i64 %519, 0
  br i1 %520, label %532, label %521

521:                                              ; preds = %511, %521
  %522 = phi %"class.v8::internal::wasm::ValueType"* [ %529, %521 ], [ %512, %511 ]
  %523 = phi %"class.v8::internal::wasm::ValueType"* [ %525, %521 ], [ %513, %511 ]
  %524 = phi i64 [ %530, %521 ], [ %519, %511 ]
  %525 = getelementptr inbounds %"class.v8::internal::wasm::ValueType", %"class.v8::internal::wasm::ValueType"* %523, i64 -1
  %526 = getelementptr inbounds %"class.v8::internal::wasm::ValueType", %"class.v8::internal::wasm::ValueType"* %525, i64 0, i32 0
  %527 = getelementptr inbounds %"class.v8::internal::wasm::ValueType", %"class.v8::internal::wasm::ValueType"* %522, i64 -1, i32 0
  %528 = load i32, i32* %526, align 4
  store i32 %528, i32* %527, align 4
  %529 = getelementptr inbounds %"class.v8::internal::wasm::ValueType", %"class.v8::internal::wasm::ValueType"* %522, i64 -1
  %530 = add i64 %524, -1
  %531 = icmp eq i64 %530, 0
  br i1 %531, label %532, label %521, !llvm.loop !149

532:                                              ; preds = %521, %511
  %533 = phi %"class.v8::internal::wasm::ValueType"* [ undef, %511 ], [ %529, %521 ]
  %534 = phi %"class.v8::internal::wasm::ValueType"* [ %512, %511 ], [ %529, %521 ]
  %535 = phi %"class.v8::internal::wasm::ValueType"* [ %513, %511 ], [ %525, %521 ]
  %536 = icmp ult i64 %516, 28
  br i1 %536, label %567, label %537

537:                                              ; preds = %532, %537
  %538 = phi %"class.v8::internal::wasm::ValueType"* [ %565, %537 ], [ %534, %532 ]
  %539 = phi %"class.v8::internal::wasm::ValueType"* [ %561, %537 ], [ %535, %532 ]
  %540 = getelementptr inbounds %"class.v8::internal::wasm::ValueType", %"class.v8::internal::wasm::ValueType"* %539, i64 -1, i32 0
  %541 = getelementptr inbounds %"class.v8::internal::wasm::ValueType", %"class.v8::internal::wasm::ValueType"* %538, i64 -1, i32 0
  %542 = load i32, i32* %540, align 4
  store i32 %542, i32* %541, align 4
  %543 = getelementptr inbounds %"class.v8::internal::wasm::ValueType", %"class.v8::internal::wasm::ValueType"* %539, i64 -2, i32 0
  %544 = getelementptr inbounds %"class.v8::internal::wasm::ValueType", %"class.v8::internal::wasm::ValueType"* %538, i64 -2, i32 0
  %545 = load i32, i32* %543, align 4
  store i32 %545, i32* %544, align 4
  %546 = getelementptr inbounds %"class.v8::internal::wasm::ValueType", %"class.v8::internal::wasm::ValueType"* %539, i64 -3, i32 0
  %547 = getelementptr inbounds %"class.v8::internal::wasm::ValueType", %"class.v8::internal::wasm::ValueType"* %538, i64 -3, i32 0
  %548 = load i32, i32* %546, align 4
  store i32 %548, i32* %547, align 4
  %549 = getelementptr inbounds %"class.v8::internal::wasm::ValueType", %"class.v8::internal::wasm::ValueType"* %539, i64 -4, i32 0
  %550 = getelementptr inbounds %"class.v8::internal::wasm::ValueType", %"class.v8::internal::wasm::ValueType"* %538, i64 -4, i32 0
  %551 = load i32, i32* %549, align 4
  store i32 %551, i32* %550, align 4
  %552 = getelementptr inbounds %"class.v8::internal::wasm::ValueType", %"class.v8::internal::wasm::ValueType"* %539, i64 -5, i32 0
  %553 = getelementptr inbounds %"class.v8::internal::wasm::ValueType", %"class.v8::internal::wasm::ValueType"* %538, i64 -5, i32 0
  %554 = load i32, i32* %552, align 4
  store i32 %554, i32* %553, align 4
  %555 = getelementptr inbounds %"class.v8::internal::wasm::ValueType", %"class.v8::internal::wasm::ValueType"* %539, i64 -6, i32 0
  %556 = getelementptr inbounds %"class.v8::internal::wasm::ValueType", %"class.v8::internal::wasm::ValueType"* %538, i64 -6, i32 0
  %557 = load i32, i32* %555, align 4
  store i32 %557, i32* %556, align 4
  %558 = getelementptr inbounds %"class.v8::internal::wasm::ValueType", %"class.v8::internal::wasm::ValueType"* %539, i64 -7, i32 0
  %559 = getelementptr inbounds %"class.v8::internal::wasm::ValueType", %"class.v8::internal::wasm::ValueType"* %538, i64 -7, i32 0
  %560 = load i32, i32* %558, align 4
  store i32 %560, i32* %559, align 4
  %561 = getelementptr inbounds %"class.v8::internal::wasm::ValueType", %"class.v8::internal::wasm::ValueType"* %539, i64 -8
  %562 = getelementptr inbounds %"class.v8::internal::wasm::ValueType", %"class.v8::internal::wasm::ValueType"* %561, i64 0, i32 0
  %563 = getelementptr inbounds %"class.v8::internal::wasm::ValueType", %"class.v8::internal::wasm::ValueType"* %538, i64 -8, i32 0
  %564 = load i32, i32* %562, align 4
  store i32 %564, i32* %563, align 4
  %565 = getelementptr inbounds %"class.v8::internal::wasm::ValueType", %"class.v8::internal::wasm::ValueType"* %538, i64 -8
  %566 = icmp eq %"class.v8::internal::wasm::ValueType"* %561, %410
  br i1 %566, label %567, label %537, !llvm.loop !150

567:                                              ; preds = %532, %537, %509, %401
  %568 = phi %"class.v8::internal::wasm::ValueType"* [ %404, %401 ], [ %438, %509 ], [ %533, %532 ], [ %565, %537 ]
  %569 = ptrtoint %"class.v8::internal::wasm::ValueType"* %568 to i64
  store i64 %569, i64* %17, align 8
  store i64 %409, i64* %16, align 8
  store i64 %406, i64* %19, align 8
  br label %570

570:                                              ; preds = %360, %567
  %571 = sub nsw i32 0, %342
  %572 = load %"class.v8::internal::wasm::WasmFunctionBuilder"*, %"class.v8::internal::wasm::WasmFunctionBuilder"** %22, align 8
  tail call void @_ZN2v88internal4wasm19WasmFunctionBuilder12EmitI32ConstEi(%"class.v8::internal::wasm::WasmFunctionBuilder"* %572, i32 %571) #12
  %573 = load %"class.v8::internal::wasm::WasmFunctionBuilder"*, %"class.v8::internal::wasm::WasmFunctionBuilder"** %22, align 8
  %574 = load i32, i32* %355, align 4
  tail call void @_ZN2v88internal4wasm19WasmFunctionBuilder12EmitSetLocalEj(%"class.v8::internal::wasm::WasmFunctionBuilder"* %573, i32 %574) #12
  br label %2293

575:                                              ; preds = %110
  store i8 1, i8* %31, align 4
  store i8* getelementptr inbounds ([32 x i8], [32 x i8]* @.str.45, i64 0, i64 0), i8** %32, align 8
  %576 = load i64, i64* %33, align 8
  %577 = trunc i64 %576 to i32
  store i32 %577, i32* %34, align 8
  br label %2309

578:                                              ; preds = %107
  %579 = icmp sgt i32 %108, 255
  br i1 %579, label %580, label %1833

580:                                              ; preds = %578
  tail call void @_ZN2v88internal12AsmJsScanner4NextEv(%"class.v8::internal::AsmJsScanner"* %8) #12
  %581 = load i64, i64* %24, align 8
  %582 = add nsw i32 %108, -256
  %583 = sext i32 %582 to i64
  %584 = load i64, i64* %12, align 8
  %585 = icmp ugt i64 %584, %583
  %586 = add nuw nsw i64 %583, 1
  br i1 %585, label %588, label %587

587:                                              ; preds = %580
  store i64 %586, i64* %12, align 8
  br label %588

588:                                              ; preds = %580, %587
  %589 = icmp ugt i64 %581, %583
  br i1 %589, label %590, label %592

590:                                              ; preds = %588
  %591 = load %"struct.v8::internal::wasm::AsmJsParser::VarInfo"*, %"struct.v8::internal::wasm::AsmJsParser::VarInfo"** %25, align 8
  br label %630

592:                                              ; preds = %588
  %593 = shl i64 %581, 1
  %594 = icmp ult i64 %593, %586
  %595 = select i1 %594, i64 %586, i64 %593
  %596 = load %"class.v8::internal::Zone"*, %"class.v8::internal::Zone"** %13, align 8
  %597 = mul i64 %595, 40
  %598 = getelementptr inbounds %"class.v8::internal::Zone", %"class.v8::internal::Zone"* %596, i64 0, i32 2
  %599 = load i64, i64* %598, align 8
  %600 = getelementptr inbounds %"class.v8::internal::Zone", %"class.v8::internal::Zone"* %596, i64 0, i32 3
  %601 = load i64, i64* %600, align 8
  %602 = sub i64 %601, %599
  %603 = icmp ugt i64 %597, %602
  br i1 %603, label %604, label %606, !prof !2

604:                                              ; preds = %592
  %605 = tail call i64 @_ZN2v88internal4Zone9NewExpandEm(%"class.v8::internal::Zone"* %596, i64 %597) #12
  br label %608

606:                                              ; preds = %592
  %607 = add i64 %599, %597
  store i64 %607, i64* %598, align 8
  br label %608

608:                                              ; preds = %606, %604
  %609 = phi i64 [ %605, %604 ], [ %599, %606 ]
  %610 = inttoptr i64 %609 to %"struct.v8::internal::wasm::AsmJsParser::VarInfo"*
  %611 = getelementptr inbounds %"struct.v8::internal::wasm::AsmJsParser::VarInfo", %"struct.v8::internal::wasm::AsmJsParser::VarInfo"* %610, i64 %595
  %612 = icmp eq i64 %595, 0
  br i1 %612, label %622, label %613

613:                                              ; preds = %608, %613
  %614 = phi %"struct.v8::internal::wasm::AsmJsParser::VarInfo"* [ %620, %613 ], [ %610, %608 ]
  %615 = getelementptr inbounds %"struct.v8::internal::wasm::AsmJsParser::VarInfo", %"struct.v8::internal::wasm::AsmJsParser::VarInfo"* %614, i64 0, i32 0
  store %"class.v8::internal::wasm::AsmType"* inttoptr (i64 2147483649 to %"class.v8::internal::wasm::AsmType"*), %"class.v8::internal::wasm::AsmType"** %615, align 8
  %616 = getelementptr inbounds %"struct.v8::internal::wasm::AsmJsParser::VarInfo", %"struct.v8::internal::wasm::AsmJsParser::VarInfo"* %614, i64 0, i32 1
  %617 = getelementptr inbounds %"struct.v8::internal::wasm::AsmJsParser::VarInfo", %"struct.v8::internal::wasm::AsmJsParser::VarInfo"* %614, i64 0, i32 6
  %618 = bitcast %"class.v8::internal::wasm::WasmFunctionBuilder"** %616 to i8*
  tail call void @llvm.memset.p0i8.i64(i8* align 8 %618, i8 0, i64 28, i1 false) #12
  store i8 1, i8* %617, align 4
  %619 = getelementptr inbounds %"struct.v8::internal::wasm::AsmJsParser::VarInfo", %"struct.v8::internal::wasm::AsmJsParser::VarInfo"* %614, i64 0, i32 7
  store i8 0, i8* %619, align 1
  %620 = getelementptr inbounds %"struct.v8::internal::wasm::AsmJsParser::VarInfo", %"struct.v8::internal::wasm::AsmJsParser::VarInfo"* %614, i64 1
  %621 = icmp eq %"struct.v8::internal::wasm::AsmJsParser::VarInfo"* %620, %611
  br i1 %621, label %622, label %613

622:                                              ; preds = %613, %608
  %623 = load i64, i64* %24, align 8
  %624 = mul nuw i64 %623, 40
  %625 = icmp eq i64 %624, 0
  br i1 %625, label %629, label %626

626:                                              ; preds = %622
  %627 = load i8*, i8** %26, align 8
  %628 = inttoptr i64 %609 to i8*
  tail call void @llvm.memmove.p0i8.p0i8.i64(i8* align 8 %628, i8* align 8 %627, i64 %624, i1 false) #12
  br label %629

629:                                              ; preds = %626, %622
  store %"struct.v8::internal::wasm::AsmJsParser::VarInfo"* %610, %"struct.v8::internal::wasm::AsmJsParser::VarInfo"** %25, align 8
  store i64 %595, i64* %24, align 8
  br label %630

630:                                              ; preds = %590, %629
  %631 = phi %"struct.v8::internal::wasm::AsmJsParser::VarInfo"* [ %591, %590 ], [ %610, %629 ]
  %632 = getelementptr inbounds %"struct.v8::internal::wasm::AsmJsParser::VarInfo", %"struct.v8::internal::wasm::AsmJsParser::VarInfo"* %631, i64 %583
  %633 = getelementptr inbounds %"struct.v8::internal::wasm::AsmJsParser::VarInfo", %"struct.v8::internal::wasm::AsmJsParser::VarInfo"* %631, i64 %583, i32 5
  %634 = load i32, i32* %633, align 8
  %635 = icmp eq i32 %634, 2
  br i1 %635, label %636, label %1320

636:                                              ; preds = %630
  %637 = getelementptr inbounds %"struct.v8::internal::wasm::AsmJsParser::VarInfo", %"struct.v8::internal::wasm::AsmJsParser::VarInfo"* %631, i64 %583, i32 6
  %638 = load i8, i8* %637, align 4, !range !69
  %639 = icmp eq i8 %638, 0
  br i1 %639, label %643, label %640

640:                                              ; preds = %636
  store i8 1, i8* %31, align 4
  store i8* getelementptr inbounds ([49 x i8], [49 x i8]* @.str.46, i64 0, i64 0), i8** %32, align 8
  %641 = load i64, i64* %33, align 8
  %642 = trunc i64 %641 to i32
  store i32 %642, i32* %34, align 8
  br label %2309

643:                                              ; preds = %636
  store i32 1, i32* %95, align 8
  %644 = getelementptr inbounds %"struct.v8::internal::wasm::AsmJsParser::VarInfo", %"struct.v8::internal::wasm::AsmJsParser::VarInfo"* %632, i64 0, i32 0
  %645 = bitcast %"struct.v8::internal::wasm::AsmJsParser::VarInfo"* %632 to i64*
  %646 = load i64, i64* %645, align 8
  %647 = bitcast %"struct.v8::internal::wasm::AsmJsParser::VarInfo"* %94 to i64*
  store i64 %646, i64* %647, align 8
  %648 = load i64, i64* %16, align 8
  %649 = load i64, i64* %17, align 8
  %650 = sub i64 %648, %649
  %651 = lshr exact i64 %650, 2
  %652 = add i64 %651, %1
  %653 = trunc i64 %652 to i32
  %654 = getelementptr inbounds %"struct.v8::internal::wasm::AsmJsParser::VarInfo", %"struct.v8::internal::wasm::AsmJsParser::VarInfo"* %93, i64 %49, i32 4
  store i32 %653, i32* %654, align 4
  %655 = load %"class.v8::internal::wasm::AsmType"*, %"class.v8::internal::wasm::AsmType"** %644, align 8
  %656 = tail call zeroext i1 @_ZN2v88internal4wasm7AsmType3IsAEPS2_(%"class.v8::internal::wasm::AsmType"* %655, %"class.v8::internal::wasm::AsmType"* nonnull inttoptr (i64 769 to %"class.v8::internal::wasm::AsmType"*)) #12
  br i1 %656, label %657, label %872

657:                                              ; preds = %643
  %658 = load %"class.v8::internal::wasm::ValueType"*, %"class.v8::internal::wasm::ValueType"** %15, align 8
  %659 = load %"class.v8::internal::wasm::ValueType"*, %"class.v8::internal::wasm::ValueType"** %18, align 8
  %660 = icmp eq %"class.v8::internal::wasm::ValueType"* %658, %659
  %661 = ptrtoint %"class.v8::internal::wasm::ValueType"* %659 to i64
  br i1 %660, label %666, label %662

662:                                              ; preds = %657
  %663 = getelementptr inbounds %"class.v8::internal::wasm::ValueType", %"class.v8::internal::wasm::ValueType"* %658, i64 0, i32 0
  store i32 1, i32* %663, align 4
  %664 = getelementptr inbounds %"class.v8::internal::wasm::ValueType", %"class.v8::internal::wasm::ValueType"* %658, i64 1
  %665 = ptrtoint %"class.v8::internal::wasm::ValueType"* %664 to i64
  store i64 %665, i64* %16, align 8
  br label %1311

666:                                              ; preds = %657
  %667 = ptrtoint %"class.v8::internal::wasm::ValueType"* %658 to i64
  %668 = load i64, i64* %17, align 8
  %669 = sub i64 %667, %668
  %670 = ashr exact i64 %669, 2
  %671 = add nsw i64 %670, 1
  %672 = icmp ugt i64 %671, 536870911
  br i1 %672, label %673, label %675

673:                                              ; preds = %666
  %674 = bitcast %"class.v8::internal::ZoneVector.164"* %2 to %"class.std::__1::__vector_base_common"*
  tail call void @_ZNKSt3__120__vector_base_commonILb1EE20__throw_length_errorEv(%"class.std::__1::__vector_base_common"* %674) #13
  unreachable

675:                                              ; preds = %666
  %676 = sub i64 %661, %668
  %677 = ashr exact i64 %676, 2
  %678 = icmp ult i64 %677, 268435455
  br i1 %678, label %679, label %684

679:                                              ; preds = %675
  %680 = ashr exact i64 %676, 1
  %681 = icmp ult i64 %680, %671
  %682 = select i1 %681, i64 %671, i64 %680
  %683 = icmp eq i64 %682, 0
  br i1 %683, label %703, label %684

684:                                              ; preds = %679, %675
  %685 = phi i64 [ %682, %679 ], [ 536870911, %675 ]
  %686 = load %"class.v8::internal::Zone"*, %"class.v8::internal::Zone"** %20, align 8
  %687 = shl i64 %685, 2
  %688 = add i64 %687, 7
  %689 = and i64 %688, -8
  %690 = getelementptr inbounds %"class.v8::internal::Zone", %"class.v8::internal::Zone"* %686, i64 0, i32 2
  %691 = load i64, i64* %690, align 8
  %692 = getelementptr inbounds %"class.v8::internal::Zone", %"class.v8::internal::Zone"* %686, i64 0, i32 3
  %693 = load i64, i64* %692, align 8
  %694 = sub i64 %693, %691
  %695 = icmp ugt i64 %689, %694
  br i1 %695, label %696, label %698, !prof !2

696:                                              ; preds = %684
  %697 = tail call i64 @_ZN2v88internal4Zone9NewExpandEm(%"class.v8::internal::Zone"* %686, i64 %689) #12
  br label %700

698:                                              ; preds = %684
  %699 = add i64 %689, %691
  store i64 %699, i64* %690, align 8
  br label %700

700:                                              ; preds = %698, %696
  %701 = phi i64 [ %697, %696 ], [ %691, %698 ]
  %702 = inttoptr i64 %701 to %"class.v8::internal::wasm::ValueType"*
  br label %703

703:                                              ; preds = %700, %679
  %704 = phi i64 [ %685, %700 ], [ 0, %679 ]
  %705 = phi %"class.v8::internal::wasm::ValueType"* [ %702, %700 ], [ null, %679 ]
  %706 = getelementptr inbounds %"class.v8::internal::wasm::ValueType", %"class.v8::internal::wasm::ValueType"* %705, i64 %670
  %707 = getelementptr inbounds %"class.v8::internal::wasm::ValueType", %"class.v8::internal::wasm::ValueType"* %705, i64 %704
  %708 = ptrtoint %"class.v8::internal::wasm::ValueType"* %707 to i64
  %709 = getelementptr inbounds %"class.v8::internal::wasm::ValueType", %"class.v8::internal::wasm::ValueType"* %706, i64 0, i32 0
  store i32 1, i32* %709, align 4
  %710 = getelementptr inbounds %"class.v8::internal::wasm::ValueType", %"class.v8::internal::wasm::ValueType"* %706, i64 1
  %711 = ptrtoint %"class.v8::internal::wasm::ValueType"* %710 to i64
  %712 = load %"class.v8::internal::wasm::ValueType"*, %"class.v8::internal::wasm::ValueType"** %21, align 8
  %713 = ptrtoint %"class.v8::internal::wasm::ValueType"* %712 to i64
  %714 = load %"class.v8::internal::wasm::ValueType"*, %"class.v8::internal::wasm::ValueType"** %15, align 8
  %715 = icmp eq %"class.v8::internal::wasm::ValueType"* %714, %712
  br i1 %715, label %869, label %716

716:                                              ; preds = %703
  %717 = getelementptr %"class.v8::internal::wasm::ValueType", %"class.v8::internal::wasm::ValueType"* %714, i64 -1
  %718 = ptrtoint %"class.v8::internal::wasm::ValueType"* %717 to i64
  %719 = sub i64 %718, %713
  %720 = lshr i64 %719, 2
  %721 = add nuw nsw i64 %720, 1
  %722 = icmp ult i64 %721, 8
  br i1 %722, label %813, label %723

723:                                              ; preds = %716
  %724 = getelementptr %"class.v8::internal::wasm::ValueType", %"class.v8::internal::wasm::ValueType"* %705, i64 -1
  %725 = getelementptr %"class.v8::internal::wasm::ValueType", %"class.v8::internal::wasm::ValueType"* %714, i64 -1
  %726 = ptrtoint %"class.v8::internal::wasm::ValueType"* %725 to i64
  %727 = sub i64 %726, %713
  %728 = lshr i64 %727, 2
  %729 = sub nsw i64 %670, %728
  %730 = getelementptr %"class.v8::internal::wasm::ValueType", %"class.v8::internal::wasm::ValueType"* %724, i64 %729
  %731 = getelementptr %"class.v8::internal::wasm::ValueType", %"class.v8::internal::wasm::ValueType"* %714, i64 -1
  %732 = sub nsw i64 0, %728
  %733 = getelementptr %"class.v8::internal::wasm::ValueType", %"class.v8::internal::wasm::ValueType"* %731, i64 %732
  %734 = icmp ult %"class.v8::internal::wasm::ValueType"* %730, %714
  %735 = icmp ult %"class.v8::internal::wasm::ValueType"* %733, %706
  %736 = and i1 %734, %735
  br i1 %736, label %813, label %737

737:                                              ; preds = %723
  %738 = and i64 %721, 9223372036854775800
  %739 = sub nsw i64 0, %738
  %740 = getelementptr %"class.v8::internal::wasm::ValueType", %"class.v8::internal::wasm::ValueType"* %706, i64 %739
  %741 = sub nsw i64 0, %738
  %742 = getelementptr %"class.v8::internal::wasm::ValueType", %"class.v8::internal::wasm::ValueType"* %714, i64 %741
  %743 = add nsw i64 %738, -8
  %744 = lshr exact i64 %743, 3
  %745 = add nuw nsw i64 %744, 1
  %746 = and i64 %745, 1
  %747 = icmp eq i64 %743, 0
  br i1 %747, label %790, label %748

748:                                              ; preds = %737
  %749 = sub nuw nsw i64 %745, %746
  %750 = getelementptr %"class.v8::internal::wasm::ValueType", %"class.v8::internal::wasm::ValueType"* %714, i64 -1
  %751 = getelementptr %"class.v8::internal::wasm::ValueType", %"class.v8::internal::wasm::ValueType"* %714, i64 -1
  br label %752

752:                                              ; preds = %752, %748
  %753 = phi i64 [ 0, %748 ], [ %787, %752 ]
  %754 = phi i64 [ %749, %748 ], [ %788, %752 ]
  %755 = sub i64 0, %753
  %756 = getelementptr %"class.v8::internal::wasm::ValueType", %"class.v8::internal::wasm::ValueType"* %706, i64 %755
  %757 = sub i64 0, %753
  %758 = getelementptr inbounds %"class.v8::internal::wasm::ValueType", %"class.v8::internal::wasm::ValueType"* %750, i64 %757
  %759 = getelementptr inbounds %"class.v8::internal::wasm::ValueType", %"class.v8::internal::wasm::ValueType"* %758, i64 0, i32 0
  %760 = getelementptr inbounds %"class.v8::internal::wasm::ValueType", %"class.v8::internal::wasm::ValueType"* %756, i64 -1, i32 0
  %761 = getelementptr inbounds i32, i32* %759, i64 -3
  %762 = bitcast i32* %761 to <4 x i32>*
  %763 = load <4 x i32>, <4 x i32>* %762, align 4, !alias.scope !151
  %764 = getelementptr inbounds i32, i32* %759, i64 -7
  %765 = bitcast i32* %764 to <4 x i32>*
  %766 = load <4 x i32>, <4 x i32>* %765, align 4, !alias.scope !151
  %767 = getelementptr inbounds i32, i32* %760, i64 -3
  %768 = bitcast i32* %767 to <4 x i32>*
  store <4 x i32> %763, <4 x i32>* %768, align 4, !alias.scope !154, !noalias !151
  %769 = getelementptr inbounds i32, i32* %760, i64 -7
  %770 = bitcast i32* %769 to <4 x i32>*
  store <4 x i32> %766, <4 x i32>* %770, align 4, !alias.scope !154, !noalias !151
  %771 = sub nuw nsw i64 -8, %753
  %772 = getelementptr %"class.v8::internal::wasm::ValueType", %"class.v8::internal::wasm::ValueType"* %706, i64 %771
  %773 = sub nuw nsw i64 -8, %753
  %774 = getelementptr inbounds %"class.v8::internal::wasm::ValueType", %"class.v8::internal::wasm::ValueType"* %751, i64 %773
  %775 = getelementptr inbounds %"class.v8::internal::wasm::ValueType", %"class.v8::internal::wasm::ValueType"* %774, i64 0, i32 0
  %776 = getelementptr inbounds %"class.v8::internal::wasm::ValueType", %"class.v8::internal::wasm::ValueType"* %772, i64 -1, i32 0
  %777 = getelementptr inbounds i32, i32* %775, i64 -3
  %778 = bitcast i32* %777 to <4 x i32>*
  %779 = load <4 x i32>, <4 x i32>* %778, align 4, !alias.scope !151
  %780 = getelementptr inbounds i32, i32* %775, i64 -7
  %781 = bitcast i32* %780 to <4 x i32>*
  %782 = load <4 x i32>, <4 x i32>* %781, align 4, !alias.scope !151
  %783 = getelementptr inbounds i32, i32* %776, i64 -3
  %784 = bitcast i32* %783 to <4 x i32>*
  store <4 x i32> %779, <4 x i32>* %784, align 4, !alias.scope !154, !noalias !151
  %785 = getelementptr inbounds i32, i32* %776, i64 -7
  %786 = bitcast i32* %785 to <4 x i32>*
  store <4 x i32> %782, <4 x i32>* %786, align 4, !alias.scope !154, !noalias !151
  %787 = add i64 %753, 16
  %788 = add i64 %754, -2
  %789 = icmp eq i64 %788, 0
  br i1 %789, label %790, label %752, !llvm.loop !156

790:                                              ; preds = %752, %737
  %791 = phi i64 [ 0, %737 ], [ %787, %752 ]
  %792 = icmp eq i64 %746, 0
  br i1 %792, label %811, label %793

793:                                              ; preds = %790
  %794 = sub i64 0, %791
  %795 = getelementptr %"class.v8::internal::wasm::ValueType", %"class.v8::internal::wasm::ValueType"* %706, i64 %794
  %796 = sub i64 0, %791
  %797 = getelementptr %"class.v8::internal::wasm::ValueType", %"class.v8::internal::wasm::ValueType"* %714, i64 -1
  %798 = getelementptr inbounds %"class.v8::internal::wasm::ValueType", %"class.v8::internal::wasm::ValueType"* %797, i64 %796
  %799 = getelementptr inbounds %"class.v8::internal::wasm::ValueType", %"class.v8::internal::wasm::ValueType"* %798, i64 0, i32 0
  %800 = getelementptr inbounds %"class.v8::internal::wasm::ValueType", %"class.v8::internal::wasm::ValueType"* %795, i64 -1, i32 0
  %801 = getelementptr inbounds i32, i32* %799, i64 -3
  %802 = bitcast i32* %801 to <4 x i32>*
  %803 = load <4 x i32>, <4 x i32>* %802, align 4, !alias.scope !151
  %804 = getelementptr inbounds i32, i32* %799, i64 -7
  %805 = bitcast i32* %804 to <4 x i32>*
  %806 = load <4 x i32>, <4 x i32>* %805, align 4, !alias.scope !151
  %807 = getelementptr inbounds i32, i32* %800, i64 -3
  %808 = bitcast i32* %807 to <4 x i32>*
  store <4 x i32> %803, <4 x i32>* %808, align 4, !alias.scope !154, !noalias !151
  %809 = getelementptr inbounds i32, i32* %800, i64 -7
  %810 = bitcast i32* %809 to <4 x i32>*
  store <4 x i32> %806, <4 x i32>* %810, align 4, !alias.scope !154, !noalias !151
  br label %811

811:                                              ; preds = %790, %793
  %812 = icmp eq i64 %721, %738
  br i1 %812, label %869, label %813

813:                                              ; preds = %811, %723, %716
  %814 = phi %"class.v8::internal::wasm::ValueType"* [ %706, %723 ], [ %706, %716 ], [ %740, %811 ]
  %815 = phi %"class.v8::internal::wasm::ValueType"* [ %714, %723 ], [ %714, %716 ], [ %742, %811 ]
  %816 = getelementptr %"class.v8::internal::wasm::ValueType", %"class.v8::internal::wasm::ValueType"* %815, i64 -1
  %817 = ptrtoint %"class.v8::internal::wasm::ValueType"* %816 to i64
  %818 = sub i64 %817, %713
  %819 = lshr i64 %818, 2
  %820 = add nuw nsw i64 %819, 1
  %821 = and i64 %820, 7
  %822 = icmp eq i64 %821, 0
  br i1 %822, label %834, label %823

823:                                              ; preds = %813, %823
  %824 = phi %"class.v8::internal::wasm::ValueType"* [ %831, %823 ], [ %814, %813 ]
  %825 = phi %"class.v8::internal::wasm::ValueType"* [ %827, %823 ], [ %815, %813 ]
  %826 = phi i64 [ %832, %823 ], [ %821, %813 ]
  %827 = getelementptr inbounds %"class.v8::internal::wasm::ValueType", %"class.v8::internal::wasm::ValueType"* %825, i64 -1
  %828 = getelementptr inbounds %"class.v8::internal::wasm::ValueType", %"class.v8::internal::wasm::ValueType"* %827, i64 0, i32 0
  %829 = getelementptr inbounds %"class.v8::internal::wasm::ValueType", %"class.v8::internal::wasm::ValueType"* %824, i64 -1, i32 0
  %830 = load i32, i32* %828, align 4
  store i32 %830, i32* %829, align 4
  %831 = getelementptr inbounds %"class.v8::internal::wasm::ValueType", %"class.v8::internal::wasm::ValueType"* %824, i64 -1
  %832 = add i64 %826, -1
  %833 = icmp eq i64 %832, 0
  br i1 %833, label %834, label %823, !llvm.loop !157

834:                                              ; preds = %823, %813
  %835 = phi %"class.v8::internal::wasm::ValueType"* [ undef, %813 ], [ %831, %823 ]
  %836 = phi %"class.v8::internal::wasm::ValueType"* [ %814, %813 ], [ %831, %823 ]
  %837 = phi %"class.v8::internal::wasm::ValueType"* [ %815, %813 ], [ %827, %823 ]
  %838 = icmp ult i64 %818, 28
  br i1 %838, label %869, label %839

839:                                              ; preds = %834, %839
  %840 = phi %"class.v8::internal::wasm::ValueType"* [ %867, %839 ], [ %836, %834 ]
  %841 = phi %"class.v8::internal::wasm::ValueType"* [ %863, %839 ], [ %837, %834 ]
  %842 = getelementptr inbounds %"class.v8::internal::wasm::ValueType", %"class.v8::internal::wasm::ValueType"* %841, i64 -1, i32 0
  %843 = getelementptr inbounds %"class.v8::internal::wasm::ValueType", %"class.v8::internal::wasm::ValueType"* %840, i64 -1, i32 0
  %844 = load i32, i32* %842, align 4
  store i32 %844, i32* %843, align 4
  %845 = getelementptr inbounds %"class.v8::internal::wasm::ValueType", %"class.v8::internal::wasm::ValueType"* %841, i64 -2, i32 0
  %846 = getelementptr inbounds %"class.v8::internal::wasm::ValueType", %"class.v8::internal::wasm::ValueType"* %840, i64 -2, i32 0
  %847 = load i32, i32* %845, align 4
  store i32 %847, i32* %846, align 4
  %848 = getelementptr inbounds %"class.v8::internal::wasm::ValueType", %"class.v8::internal::wasm::ValueType"* %841, i64 -3, i32 0
  %849 = getelementptr inbounds %"class.v8::internal::wasm::ValueType", %"class.v8::internal::wasm::ValueType"* %840, i64 -3, i32 0
  %850 = load i32, i32* %848, align 4
  store i32 %850, i32* %849, align 4
  %851 = getelementptr inbounds %"class.v8::internal::wasm::ValueType", %"class.v8::internal::wasm::ValueType"* %841, i64 -4, i32 0
  %852 = getelementptr inbounds %"class.v8::internal::wasm::ValueType", %"class.v8::internal::wasm::ValueType"* %840, i64 -4, i32 0
  %853 = load i32, i32* %851, align 4
  store i32 %853, i32* %852, align 4
  %854 = getelementptr inbounds %"class.v8::internal::wasm::ValueType", %"class.v8::internal::wasm::ValueType"* %841, i64 -5, i32 0
  %855 = getelementptr inbounds %"class.v8::internal::wasm::ValueType", %"class.v8::internal::wasm::ValueType"* %840, i64 -5, i32 0
  %856 = load i32, i32* %854, align 4
  store i32 %856, i32* %855, align 4
  %857 = getelementptr inbounds %"class.v8::internal::wasm::ValueType", %"class.v8::internal::wasm::ValueType"* %841, i64 -6, i32 0
  %858 = getelementptr inbounds %"class.v8::internal::wasm::ValueType", %"class.v8::internal::wasm::ValueType"* %840, i64 -6, i32 0
  %859 = load i32, i32* %857, align 4
  store i32 %859, i32* %858, align 4
  %860 = getelementptr inbounds %"class.v8::internal::wasm::ValueType", %"class.v8::internal::wasm::ValueType"* %841, i64 -7, i32 0
  %861 = getelementptr inbounds %"class.v8::internal::wasm::ValueType", %"class.v8::internal::wasm::ValueType"* %840, i64 -7, i32 0
  %862 = load i32, i32* %860, align 4
  store i32 %862, i32* %861, align 4
  %863 = getelementptr inbounds %"class.v8::internal::wasm::ValueType", %"class.v8::internal::wasm::ValueType"* %841, i64 -8
  %864 = getelementptr inbounds %"class.v8::internal::wasm::ValueType", %"class.v8::internal::wasm::ValueType"* %863, i64 0, i32 0
  %865 = getelementptr inbounds %"class.v8::internal::wasm::ValueType", %"class.v8::internal::wasm::ValueType"* %840, i64 -8, i32 0
  %866 = load i32, i32* %864, align 4
  store i32 %866, i32* %865, align 4
  %867 = getelementptr inbounds %"class.v8::internal::wasm::ValueType", %"class.v8::internal::wasm::ValueType"* %840, i64 -8
  %868 = icmp eq %"class.v8::internal::wasm::ValueType"* %863, %712
  br i1 %868, label %869, label %839, !llvm.loop !158

869:                                              ; preds = %834, %839, %811, %703
  %870 = phi %"class.v8::internal::wasm::ValueType"* [ %706, %703 ], [ %740, %811 ], [ %835, %834 ], [ %867, %839 ]
  %871 = ptrtoint %"class.v8::internal::wasm::ValueType"* %870 to i64
  store i64 %871, i64* %17, align 8
  store i64 %711, i64* %16, align 8
  store i64 %708, i64* %19, align 8
  br label %1311

872:                                              ; preds = %643
  %873 = load %"class.v8::internal::wasm::AsmType"*, %"class.v8::internal::wasm::AsmType"** %644, align 8
  %874 = tail call zeroext i1 @_ZN2v88internal4wasm7AsmType3IsAEPS2_(%"class.v8::internal::wasm::AsmType"* %873, %"class.v8::internal::wasm::AsmType"* nonnull inttoptr (i64 57357 to %"class.v8::internal::wasm::AsmType"*)) #12
  br i1 %874, label %875, label %1090

875:                                              ; preds = %872
  %876 = load %"class.v8::internal::wasm::ValueType"*, %"class.v8::internal::wasm::ValueType"** %15, align 8
  %877 = load %"class.v8::internal::wasm::ValueType"*, %"class.v8::internal::wasm::ValueType"** %18, align 8
  %878 = icmp eq %"class.v8::internal::wasm::ValueType"* %876, %877
  %879 = ptrtoint %"class.v8::internal::wasm::ValueType"* %877 to i64
  br i1 %878, label %884, label %880

880:                                              ; preds = %875
  %881 = getelementptr inbounds %"class.v8::internal::wasm::ValueType", %"class.v8::internal::wasm::ValueType"* %876, i64 0, i32 0
  store i32 3, i32* %881, align 4
  %882 = getelementptr inbounds %"class.v8::internal::wasm::ValueType", %"class.v8::internal::wasm::ValueType"* %876, i64 1
  %883 = ptrtoint %"class.v8::internal::wasm::ValueType"* %882 to i64
  store i64 %883, i64* %16, align 8
  br label %1311

884:                                              ; preds = %875
  %885 = ptrtoint %"class.v8::internal::wasm::ValueType"* %876 to i64
  %886 = load i64, i64* %17, align 8
  %887 = sub i64 %885, %886
  %888 = ashr exact i64 %887, 2
  %889 = add nsw i64 %888, 1
  %890 = icmp ugt i64 %889, 536870911
  br i1 %890, label %891, label %893

891:                                              ; preds = %884
  %892 = bitcast %"class.v8::internal::ZoneVector.164"* %2 to %"class.std::__1::__vector_base_common"*
  tail call void @_ZNKSt3__120__vector_base_commonILb1EE20__throw_length_errorEv(%"class.std::__1::__vector_base_common"* %892) #13
  unreachable

893:                                              ; preds = %884
  %894 = sub i64 %879, %886
  %895 = ashr exact i64 %894, 2
  %896 = icmp ult i64 %895, 268435455
  br i1 %896, label %897, label %902

897:                                              ; preds = %893
  %898 = ashr exact i64 %894, 1
  %899 = icmp ult i64 %898, %889
  %900 = select i1 %899, i64 %889, i64 %898
  %901 = icmp eq i64 %900, 0
  br i1 %901, label %921, label %902

902:                                              ; preds = %897, %893
  %903 = phi i64 [ %900, %897 ], [ 536870911, %893 ]
  %904 = load %"class.v8::internal::Zone"*, %"class.v8::internal::Zone"** %20, align 8
  %905 = shl i64 %903, 2
  %906 = add i64 %905, 7
  %907 = and i64 %906, -8
  %908 = getelementptr inbounds %"class.v8::internal::Zone", %"class.v8::internal::Zone"* %904, i64 0, i32 2
  %909 = load i64, i64* %908, align 8
  %910 = getelementptr inbounds %"class.v8::internal::Zone", %"class.v8::internal::Zone"* %904, i64 0, i32 3
  %911 = load i64, i64* %910, align 8
  %912 = sub i64 %911, %909
  %913 = icmp ugt i64 %907, %912
  br i1 %913, label %914, label %916, !prof !2

914:                                              ; preds = %902
  %915 = tail call i64 @_ZN2v88internal4Zone9NewExpandEm(%"class.v8::internal::Zone"* %904, i64 %907) #12
  br label %918

916:                                              ; preds = %902
  %917 = add i64 %907, %909
  store i64 %917, i64* %908, align 8
  br label %918

918:                                              ; preds = %916, %914
  %919 = phi i64 [ %915, %914 ], [ %909, %916 ]
  %920 = inttoptr i64 %919 to %"class.v8::internal::wasm::ValueType"*
  br label %921

921:                                              ; preds = %918, %897
  %922 = phi i64 [ %903, %918 ], [ 0, %897 ]
  %923 = phi %"class.v8::internal::wasm::ValueType"* [ %920, %918 ], [ null, %897 ]
  %924 = getelementptr inbounds %"class.v8::internal::wasm::ValueType", %"class.v8::internal::wasm::ValueType"* %923, i64 %888
  %925 = getelementptr inbounds %"class.v8::internal::wasm::ValueType", %"class.v8::internal::wasm::ValueType"* %923, i64 %922
  %926 = ptrtoint %"class.v8::internal::wasm::ValueType"* %925 to i64
  %927 = getelementptr inbounds %"class.v8::internal::wasm::ValueType", %"class.v8::internal::wasm::ValueType"* %924, i64 0, i32 0
  store i32 3, i32* %927, align 4
  %928 = getelementptr inbounds %"class.v8::internal::wasm::ValueType", %"class.v8::internal::wasm::ValueType"* %924, i64 1
  %929 = ptrtoint %"class.v8::internal::wasm::ValueType"* %928 to i64
  %930 = load %"class.v8::internal::wasm::ValueType"*, %"class.v8::internal::wasm::ValueType"** %21, align 8
  %931 = ptrtoint %"class.v8::internal::wasm::ValueType"* %930 to i64
  %932 = load %"class.v8::internal::wasm::ValueType"*, %"class.v8::internal::wasm::ValueType"** %15, align 8
  %933 = icmp eq %"class.v8::internal::wasm::ValueType"* %932, %930
  br i1 %933, label %1087, label %934

934:                                              ; preds = %921
  %935 = getelementptr %"class.v8::internal::wasm::ValueType", %"class.v8::internal::wasm::ValueType"* %932, i64 -1
  %936 = ptrtoint %"class.v8::internal::wasm::ValueType"* %935 to i64
  %937 = sub i64 %936, %931
  %938 = lshr i64 %937, 2
  %939 = add nuw nsw i64 %938, 1
  %940 = icmp ult i64 %939, 8
  br i1 %940, label %1031, label %941

941:                                              ; preds = %934
  %942 = getelementptr %"class.v8::internal::wasm::ValueType", %"class.v8::internal::wasm::ValueType"* %923, i64 -1
  %943 = getelementptr %"class.v8::internal::wasm::ValueType", %"class.v8::internal::wasm::ValueType"* %932, i64 -1
  %944 = ptrtoint %"class.v8::internal::wasm::ValueType"* %943 to i64
  %945 = sub i64 %944, %931
  %946 = lshr i64 %945, 2
  %947 = sub nsw i64 %888, %946
  %948 = getelementptr %"class.v8::internal::wasm::ValueType", %"class.v8::internal::wasm::ValueType"* %942, i64 %947
  %949 = getelementptr %"class.v8::internal::wasm::ValueType", %"class.v8::internal::wasm::ValueType"* %932, i64 -1
  %950 = sub nsw i64 0, %946
  %951 = getelementptr %"class.v8::internal::wasm::ValueType", %"class.v8::internal::wasm::ValueType"* %949, i64 %950
  %952 = icmp ult %"class.v8::internal::wasm::ValueType"* %948, %932
  %953 = icmp ult %"class.v8::internal::wasm::ValueType"* %951, %924
  %954 = and i1 %952, %953
  br i1 %954, label %1031, label %955

955:                                              ; preds = %941
  %956 = and i64 %939, 9223372036854775800
  %957 = sub nsw i64 0, %956
  %958 = getelementptr %"class.v8::internal::wasm::ValueType", %"class.v8::internal::wasm::ValueType"* %924, i64 %957
  %959 = sub nsw i64 0, %956
  %960 = getelementptr %"class.v8::internal::wasm::ValueType", %"class.v8::internal::wasm::ValueType"* %932, i64 %959
  %961 = add nsw i64 %956, -8
  %962 = lshr exact i64 %961, 3
  %963 = add nuw nsw i64 %962, 1
  %964 = and i64 %963, 1
  %965 = icmp eq i64 %961, 0
  br i1 %965, label %1008, label %966

966:                                              ; preds = %955
  %967 = sub nuw nsw i64 %963, %964
  %968 = getelementptr %"class.v8::internal::wasm::ValueType", %"class.v8::internal::wasm::ValueType"* %932, i64 -1
  %969 = getelementptr %"class.v8::internal::wasm::ValueType", %"class.v8::internal::wasm::ValueType"* %932, i64 -1
  br label %970

970:                                              ; preds = %970, %966
  %971 = phi i64 [ 0, %966 ], [ %1005, %970 ]
  %972 = phi i64 [ %967, %966 ], [ %1006, %970 ]
  %973 = sub i64 0, %971
  %974 = getelementptr %"class.v8::internal::wasm::ValueType", %"class.v8::internal::wasm::ValueType"* %924, i64 %973
  %975 = sub i64 0, %971
  %976 = getelementptr inbounds %"class.v8::internal::wasm::ValueType", %"class.v8::internal::wasm::ValueType"* %968, i64 %975
  %977 = getelementptr inbounds %"class.v8::internal::wasm::ValueType", %"class.v8::internal::wasm::ValueType"* %976, i64 0, i32 0
  %978 = getelementptr inbounds %"class.v8::internal::wasm::ValueType", %"class.v8::internal::wasm::ValueType"* %974, i64 -1, i32 0
  %979 = getelementptr inbounds i32, i32* %977, i64 -3
  %980 = bitcast i32* %979 to <4 x i32>*
  %981 = load <4 x i32>, <4 x i32>* %980, align 4, !alias.scope !159
  %982 = getelementptr inbounds i32, i32* %977, i64 -7
  %983 = bitcast i32* %982 to <4 x i32>*
  %984 = load <4 x i32>, <4 x i32>* %983, align 4, !alias.scope !159
  %985 = getelementptr inbounds i32, i32* %978, i64 -3
  %986 = bitcast i32* %985 to <4 x i32>*
  store <4 x i32> %981, <4 x i32>* %986, align 4, !alias.scope !162, !noalias !159
  %987 = getelementptr inbounds i32, i32* %978, i64 -7
  %988 = bitcast i32* %987 to <4 x i32>*
  store <4 x i32> %984, <4 x i32>* %988, align 4, !alias.scope !162, !noalias !159
  %989 = sub nuw nsw i64 -8, %971
  %990 = getelementptr %"class.v8::internal::wasm::ValueType", %"class.v8::internal::wasm::ValueType"* %924, i64 %989
  %991 = sub nuw nsw i64 -8, %971
  %992 = getelementptr inbounds %"class.v8::internal::wasm::ValueType", %"class.v8::internal::wasm::ValueType"* %969, i64 %991
  %993 = getelementptr inbounds %"class.v8::internal::wasm::ValueType", %"class.v8::internal::wasm::ValueType"* %992, i64 0, i32 0
  %994 = getelementptr inbounds %"class.v8::internal::wasm::ValueType", %"class.v8::internal::wasm::ValueType"* %990, i64 -1, i32 0
  %995 = getelementptr inbounds i32, i32* %993, i64 -3
  %996 = bitcast i32* %995 to <4 x i32>*
  %997 = load <4 x i32>, <4 x i32>* %996, align 4, !alias.scope !159
  %998 = getelementptr inbounds i32, i32* %993, i64 -7
  %999 = bitcast i32* %998 to <4 x i32>*
  %1000 = load <4 x i32>, <4 x i32>* %999, align 4, !alias.scope !159
  %1001 = getelementptr inbounds i32, i32* %994, i64 -3
  %1002 = bitcast i32* %1001 to <4 x i32>*
  store <4 x i32> %997, <4 x i32>* %1002, align 4, !alias.scope !162, !noalias !159
  %1003 = getelementptr inbounds i32, i32* %994, i64 -7
  %1004 = bitcast i32* %1003 to <4 x i32>*
  store <4 x i32> %1000, <4 x i32>* %1004, align 4, !alias.scope !162, !noalias !159
  %1005 = add i64 %971, 16
  %1006 = add i64 %972, -2
  %1007 = icmp eq i64 %1006, 0
  br i1 %1007, label %1008, label %970, !llvm.loop !164

1008:                                             ; preds = %970, %955
  %1009 = phi i64 [ 0, %955 ], [ %1005, %970 ]
  %1010 = icmp eq i64 %964, 0
  br i1 %1010, label %1029, label %1011

1011:                                             ; preds = %1008
  %1012 = sub i64 0, %1009
  %1013 = getelementptr %"class.v8::internal::wasm::ValueType", %"class.v8::internal::wasm::ValueType"* %924, i64 %1012
  %1014 = sub i64 0, %1009
  %1015 = getelementptr %"class.v8::internal::wasm::ValueType", %"class.v8::internal::wasm::ValueType"* %932, i64 -1
  %1016 = getelementptr inbounds %"class.v8::internal::wasm::ValueType", %"class.v8::internal::wasm::ValueType"* %1015, i64 %1014
  %1017 = getelementptr inbounds %"class.v8::internal::wasm::ValueType", %"class.v8::internal::wasm::ValueType"* %1016, i64 0, i32 0
  %1018 = getelementptr inbounds %"class.v8::internal::wasm::ValueType", %"class.v8::internal::wasm::ValueType"* %1013, i64 -1, i32 0
  %1019 = getelementptr inbounds i32, i32* %1017, i64 -3
  %1020 = bitcast i32* %1019 to <4 x i32>*
  %1021 = load <4 x i32>, <4 x i32>* %1020, align 4, !alias.scope !159
  %1022 = getelementptr inbounds i32, i32* %1017, i64 -7
  %1023 = bitcast i32* %1022 to <4 x i32>*
  %1024 = load <4 x i32>, <4 x i32>* %1023, align 4, !alias.scope !159
  %1025 = getelementptr inbounds i32, i32* %1018, i64 -3
  %1026 = bitcast i32* %1025 to <4 x i32>*
  store <4 x i32> %1021, <4 x i32>* %1026, align 4, !alias.scope !162, !noalias !159
  %1027 = getelementptr inbounds i32, i32* %1018, i64 -7
  %1028 = bitcast i32* %1027 to <4 x i32>*
  store <4 x i32> %1024, <4 x i32>* %1028, align 4, !alias.scope !162, !noalias !159
  br label %1029

1029:                                             ; preds = %1008, %1011
  %1030 = icmp eq i64 %939, %956
  br i1 %1030, label %1087, label %1031

1031:                                             ; preds = %1029, %941, %934
  %1032 = phi %"class.v8::internal::wasm::ValueType"* [ %924, %941 ], [ %924, %934 ], [ %958, %1029 ]
  %1033 = phi %"class.v8::internal::wasm::ValueType"* [ %932, %941 ], [ %932, %934 ], [ %960, %1029 ]
  %1034 = getelementptr %"class.v8::internal::wasm::ValueType", %"class.v8::internal::wasm::ValueType"* %1033, i64 -1
  %1035 = ptrtoint %"class.v8::internal::wasm::ValueType"* %1034 to i64
  %1036 = sub i64 %1035, %931
  %1037 = lshr i64 %1036, 2
  %1038 = add nuw nsw i64 %1037, 1
  %1039 = and i64 %1038, 7
  %1040 = icmp eq i64 %1039, 0
  br i1 %1040, label %1052, label %1041

1041:                                             ; preds = %1031, %1041
  %1042 = phi %"class.v8::internal::wasm::ValueType"* [ %1049, %1041 ], [ %1032, %1031 ]
  %1043 = phi %"class.v8::internal::wasm::ValueType"* [ %1045, %1041 ], [ %1033, %1031 ]
  %1044 = phi i64 [ %1050, %1041 ], [ %1039, %1031 ]
  %1045 = getelementptr inbounds %"class.v8::internal::wasm::ValueType", %"class.v8::internal::wasm::ValueType"* %1043, i64 -1
  %1046 = getelementptr inbounds %"class.v8::internal::wasm::ValueType", %"class.v8::internal::wasm::ValueType"* %1045, i64 0, i32 0
  %1047 = getelementptr inbounds %"class.v8::internal::wasm::ValueType", %"class.v8::internal::wasm::ValueType"* %1042, i64 -1, i32 0
  %1048 = load i32, i32* %1046, align 4
  store i32 %1048, i32* %1047, align 4
  %1049 = getelementptr inbounds %"class.v8::internal::wasm::ValueType", %"class.v8::internal::wasm::ValueType"* %1042, i64 -1
  %1050 = add i64 %1044, -1
  %1051 = icmp eq i64 %1050, 0
  br i1 %1051, label %1052, label %1041, !llvm.loop !165

1052:                                             ; preds = %1041, %1031
  %1053 = phi %"class.v8::internal::wasm::ValueType"* [ undef, %1031 ], [ %1049, %1041 ]
  %1054 = phi %"class.v8::internal::wasm::ValueType"* [ %1032, %1031 ], [ %1049, %1041 ]
  %1055 = phi %"class.v8::internal::wasm::ValueType"* [ %1033, %1031 ], [ %1045, %1041 ]
  %1056 = icmp ult i64 %1036, 28
  br i1 %1056, label %1087, label %1057

1057:                                             ; preds = %1052, %1057
  %1058 = phi %"class.v8::internal::wasm::ValueType"* [ %1085, %1057 ], [ %1054, %1052 ]
  %1059 = phi %"class.v8::internal::wasm::ValueType"* [ %1081, %1057 ], [ %1055, %1052 ]
  %1060 = getelementptr inbounds %"class.v8::internal::wasm::ValueType", %"class.v8::internal::wasm::ValueType"* %1059, i64 -1, i32 0
  %1061 = getelementptr inbounds %"class.v8::internal::wasm::ValueType", %"class.v8::internal::wasm::ValueType"* %1058, i64 -1, i32 0
  %1062 = load i32, i32* %1060, align 4
  store i32 %1062, i32* %1061, align 4
  %1063 = getelementptr inbounds %"class.v8::internal::wasm::ValueType", %"class.v8::internal::wasm::ValueType"* %1059, i64 -2, i32 0
  %1064 = getelementptr inbounds %"class.v8::internal::wasm::ValueType", %"class.v8::internal::wasm::ValueType"* %1058, i64 -2, i32 0
  %1065 = load i32, i32* %1063, align 4
  store i32 %1065, i32* %1064, align 4
  %1066 = getelementptr inbounds %"class.v8::internal::wasm::ValueType", %"class.v8::internal::wasm::ValueType"* %1059, i64 -3, i32 0
  %1067 = getelementptr inbounds %"class.v8::internal::wasm::ValueType", %"class.v8::internal::wasm::ValueType"* %1058, i64 -3, i32 0
  %1068 = load i32, i32* %1066, align 4
  store i32 %1068, i32* %1067, align 4
  %1069 = getelementptr inbounds %"class.v8::internal::wasm::ValueType", %"class.v8::internal::wasm::ValueType"* %1059, i64 -4, i32 0
  %1070 = getelementptr inbounds %"class.v8::internal::wasm::ValueType", %"class.v8::internal::wasm::ValueType"* %1058, i64 -4, i32 0
  %1071 = load i32, i32* %1069, align 4
  store i32 %1071, i32* %1070, align 4
  %1072 = getelementptr inbounds %"class.v8::internal::wasm::ValueType", %"class.v8::internal::wasm::ValueType"* %1059, i64 -5, i32 0
  %1073 = getelementptr inbounds %"class.v8::internal::wasm::ValueType", %"class.v8::internal::wasm::ValueType"* %1058, i64 -5, i32 0
  %1074 = load i32, i32* %1072, align 4
  store i32 %1074, i32* %1073, align 4
  %1075 = getelementptr inbounds %"class.v8::internal::wasm::ValueType", %"class.v8::internal::wasm::ValueType"* %1059, i64 -6, i32 0
  %1076 = getelementptr inbounds %"class.v8::internal::wasm::ValueType", %"class.v8::internal::wasm::ValueType"* %1058, i64 -6, i32 0
  %1077 = load i32, i32* %1075, align 4
  store i32 %1077, i32* %1076, align 4
  %1078 = getelementptr inbounds %"class.v8::internal::wasm::ValueType", %"class.v8::internal::wasm::ValueType"* %1059, i64 -7, i32 0
  %1079 = getelementptr inbounds %"class.v8::internal::wasm::ValueType", %"class.v8::internal::wasm::ValueType"* %1058, i64 -7, i32 0
  %1080 = load i32, i32* %1078, align 4
  store i32 %1080, i32* %1079, align 4
  %1081 = getelementptr inbounds %"class.v8::internal::wasm::ValueType", %"class.v8::internal::wasm::ValueType"* %1059, i64 -8
  %1082 = getelementptr inbounds %"class.v8::internal::wasm::ValueType", %"class.v8::internal::wasm::ValueType"* %1081, i64 0, i32 0
  %1083 = getelementptr inbounds %"class.v8::internal::wasm::ValueType", %"class.v8::internal::wasm::ValueType"* %1058, i64 -8, i32 0
  %1084 = load i32, i32* %1082, align 4
  store i32 %1084, i32* %1083, align 4
  %1085 = getelementptr inbounds %"class.v8::internal::wasm::ValueType", %"class.v8::internal::wasm::ValueType"* %1058, i64 -8
  %1086 = icmp eq %"class.v8::internal::wasm::ValueType"* %1081, %930
  br i1 %1086, label %1087, label %1057, !llvm.loop !166

1087:                                             ; preds = %1052, %1057, %1029, %921
  %1088 = phi %"class.v8::internal::wasm::ValueType"* [ %924, %921 ], [ %958, %1029 ], [ %1053, %1052 ], [ %1085, %1057 ]
  %1089 = ptrtoint %"class.v8::internal::wasm::ValueType"* %1088 to i64
  store i64 %1089, i64* %17, align 8
  store i64 %929, i64* %16, align 8
  store i64 %926, i64* %19, align 8
  br label %1311

1090:                                             ; preds = %872
  %1091 = load %"class.v8::internal::wasm::AsmType"*, %"class.v8::internal::wasm::AsmType"** %644, align 8
  %1092 = tail call zeroext i1 @_ZN2v88internal4wasm7AsmType3IsAEPS2_(%"class.v8::internal::wasm::AsmType"* %1091, %"class.v8::internal::wasm::AsmType"* nonnull inttoptr (i64 237 to %"class.v8::internal::wasm::AsmType"*)) #12
  br i1 %1092, label %1093, label %1308

1093:                                             ; preds = %1090
  %1094 = load %"class.v8::internal::wasm::ValueType"*, %"class.v8::internal::wasm::ValueType"** %15, align 8
  %1095 = load %"class.v8::internal::wasm::ValueType"*, %"class.v8::internal::wasm::ValueType"** %18, align 8
  %1096 = icmp eq %"class.v8::internal::wasm::ValueType"* %1094, %1095
  %1097 = ptrtoint %"class.v8::internal::wasm::ValueType"* %1095 to i64
  br i1 %1096, label %1102, label %1098

1098:                                             ; preds = %1093
  %1099 = getelementptr inbounds %"class.v8::internal::wasm::ValueType", %"class.v8::internal::wasm::ValueType"* %1094, i64 0, i32 0
  store i32 4, i32* %1099, align 4
  %1100 = getelementptr inbounds %"class.v8::internal::wasm::ValueType", %"class.v8::internal::wasm::ValueType"* %1094, i64 1
  %1101 = ptrtoint %"class.v8::internal::wasm::ValueType"* %1100 to i64
  store i64 %1101, i64* %16, align 8
  br label %1311

1102:                                             ; preds = %1093
  %1103 = ptrtoint %"class.v8::internal::wasm::ValueType"* %1094 to i64
  %1104 = load i64, i64* %17, align 8
  %1105 = sub i64 %1103, %1104
  %1106 = ashr exact i64 %1105, 2
  %1107 = add nsw i64 %1106, 1
  %1108 = icmp ugt i64 %1107, 536870911
  br i1 %1108, label %1109, label %1111

1109:                                             ; preds = %1102
  %1110 = bitcast %"class.v8::internal::ZoneVector.164"* %2 to %"class.std::__1::__vector_base_common"*
  tail call void @_ZNKSt3__120__vector_base_commonILb1EE20__throw_length_errorEv(%"class.std::__1::__vector_base_common"* %1110) #13
  unreachable

1111:                                             ; preds = %1102
  %1112 = sub i64 %1097, %1104
  %1113 = ashr exact i64 %1112, 2
  %1114 = icmp ult i64 %1113, 268435455
  br i1 %1114, label %1115, label %1120

1115:                                             ; preds = %1111
  %1116 = ashr exact i64 %1112, 1
  %1117 = icmp ult i64 %1116, %1107
  %1118 = select i1 %1117, i64 %1107, i64 %1116
  %1119 = icmp eq i64 %1118, 0
  br i1 %1119, label %1139, label %1120

1120:                                             ; preds = %1115, %1111
  %1121 = phi i64 [ %1118, %1115 ], [ 536870911, %1111 ]
  %1122 = load %"class.v8::internal::Zone"*, %"class.v8::internal::Zone"** %20, align 8
  %1123 = shl i64 %1121, 2
  %1124 = add i64 %1123, 7
  %1125 = and i64 %1124, -8
  %1126 = getelementptr inbounds %"class.v8::internal::Zone", %"class.v8::internal::Zone"* %1122, i64 0, i32 2
  %1127 = load i64, i64* %1126, align 8
  %1128 = getelementptr inbounds %"class.v8::internal::Zone", %"class.v8::internal::Zone"* %1122, i64 0, i32 3
  %1129 = load i64, i64* %1128, align 8
  %1130 = sub i64 %1129, %1127
  %1131 = icmp ugt i64 %1125, %1130
  br i1 %1131, label %1132, label %1134, !prof !2

1132:                                             ; preds = %1120
  %1133 = tail call i64 @_ZN2v88internal4Zone9NewExpandEm(%"class.v8::internal::Zone"* %1122, i64 %1125) #12
  br label %1136

1134:                                             ; preds = %1120
  %1135 = add i64 %1125, %1127
  store i64 %1135, i64* %1126, align 8
  br label %1136

1136:                                             ; preds = %1134, %1132
  %1137 = phi i64 [ %1133, %1132 ], [ %1127, %1134 ]
  %1138 = inttoptr i64 %1137 to %"class.v8::internal::wasm::ValueType"*
  br label %1139

1139:                                             ; preds = %1136, %1115
  %1140 = phi i64 [ %1121, %1136 ], [ 0, %1115 ]
  %1141 = phi %"class.v8::internal::wasm::ValueType"* [ %1138, %1136 ], [ null, %1115 ]
  %1142 = getelementptr inbounds %"class.v8::internal::wasm::ValueType", %"class.v8::internal::wasm::ValueType"* %1141, i64 %1106
  %1143 = getelementptr inbounds %"class.v8::internal::wasm::ValueType", %"class.v8::internal::wasm::ValueType"* %1141, i64 %1140
  %1144 = ptrtoint %"class.v8::internal::wasm::ValueType"* %1143 to i64
  %1145 = getelementptr inbounds %"class.v8::internal::wasm::ValueType", %"class.v8::internal::wasm::ValueType"* %1142, i64 0, i32 0
  store i32 4, i32* %1145, align 4
  %1146 = getelementptr inbounds %"class.v8::internal::wasm::ValueType", %"class.v8::internal::wasm::ValueType"* %1142, i64 1
  %1147 = ptrtoint %"class.v8::internal::wasm::ValueType"* %1146 to i64
  %1148 = load %"class.v8::internal::wasm::ValueType"*, %"class.v8::internal::wasm::ValueType"** %21, align 8
  %1149 = ptrtoint %"class.v8::internal::wasm::ValueType"* %1148 to i64
  %1150 = load %"class.v8::internal::wasm::ValueType"*, %"class.v8::internal::wasm::ValueType"** %15, align 8
  %1151 = icmp eq %"class.v8::internal::wasm::ValueType"* %1150, %1148
  br i1 %1151, label %1305, label %1152

1152:                                             ; preds = %1139
  %1153 = getelementptr %"class.v8::internal::wasm::ValueType", %"class.v8::internal::wasm::ValueType"* %1150, i64 -1
  %1154 = ptrtoint %"class.v8::internal::wasm::ValueType"* %1153 to i64
  %1155 = sub i64 %1154, %1149
  %1156 = lshr i64 %1155, 2
  %1157 = add nuw nsw i64 %1156, 1
  %1158 = icmp ult i64 %1157, 8
  br i1 %1158, label %1249, label %1159

1159:                                             ; preds = %1152
  %1160 = getelementptr %"class.v8::internal::wasm::ValueType", %"class.v8::internal::wasm::ValueType"* %1141, i64 -1
  %1161 = getelementptr %"class.v8::internal::wasm::ValueType", %"class.v8::internal::wasm::ValueType"* %1150, i64 -1
  %1162 = ptrtoint %"class.v8::internal::wasm::ValueType"* %1161 to i64
  %1163 = sub i64 %1162, %1149
  %1164 = lshr i64 %1163, 2
  %1165 = sub nsw i64 %1106, %1164
  %1166 = getelementptr %"class.v8::internal::wasm::ValueType", %"class.v8::internal::wasm::ValueType"* %1160, i64 %1165
  %1167 = getelementptr %"class.v8::internal::wasm::ValueType", %"class.v8::internal::wasm::ValueType"* %1150, i64 -1
  %1168 = sub nsw i64 0, %1164
  %1169 = getelementptr %"class.v8::internal::wasm::ValueType", %"class.v8::internal::wasm::ValueType"* %1167, i64 %1168
  %1170 = icmp ult %"class.v8::internal::wasm::ValueType"* %1166, %1150
  %1171 = icmp ult %"class.v8::internal::wasm::ValueType"* %1169, %1142
  %1172 = and i1 %1170, %1171
  br i1 %1172, label %1249, label %1173

1173:                                             ; preds = %1159
  %1174 = and i64 %1157, 9223372036854775800
  %1175 = sub nsw i64 0, %1174
  %1176 = getelementptr %"class.v8::internal::wasm::ValueType", %"class.v8::internal::wasm::ValueType"* %1142, i64 %1175
  %1177 = sub nsw i64 0, %1174
  %1178 = getelementptr %"class.v8::internal::wasm::ValueType", %"class.v8::internal::wasm::ValueType"* %1150, i64 %1177
  %1179 = add nsw i64 %1174, -8
  %1180 = lshr exact i64 %1179, 3
  %1181 = add nuw nsw i64 %1180, 1
  %1182 = and i64 %1181, 1
  %1183 = icmp eq i64 %1179, 0
  br i1 %1183, label %1226, label %1184

1184:                                             ; preds = %1173
  %1185 = sub nuw nsw i64 %1181, %1182
  %1186 = getelementptr %"class.v8::internal::wasm::ValueType", %"class.v8::internal::wasm::ValueType"* %1150, i64 -1
  %1187 = getelementptr %"class.v8::internal::wasm::ValueType", %"class.v8::internal::wasm::ValueType"* %1150, i64 -1
  br label %1188

1188:                                             ; preds = %1188, %1184
  %1189 = phi i64 [ 0, %1184 ], [ %1223, %1188 ]
  %1190 = phi i64 [ %1185, %1184 ], [ %1224, %1188 ]
  %1191 = sub i64 0, %1189
  %1192 = getelementptr %"class.v8::internal::wasm::ValueType", %"class.v8::internal::wasm::ValueType"* %1142, i64 %1191
  %1193 = sub i64 0, %1189
  %1194 = getelementptr inbounds %"class.v8::internal::wasm::ValueType", %"class.v8::internal::wasm::ValueType"* %1186, i64 %1193
  %1195 = getelementptr inbounds %"class.v8::internal::wasm::ValueType", %"class.v8::internal::wasm::ValueType"* %1194, i64 0, i32 0
  %1196 = getelementptr inbounds %"class.v8::internal::wasm::ValueType", %"class.v8::internal::wasm::ValueType"* %1192, i64 -1, i32 0
  %1197 = getelementptr inbounds i32, i32* %1195, i64 -3
  %1198 = bitcast i32* %1197 to <4 x i32>*
  %1199 = load <4 x i32>, <4 x i32>* %1198, align 4, !alias.scope !167
  %1200 = getelementptr inbounds i32, i32* %1195, i64 -7
  %1201 = bitcast i32* %1200 to <4 x i32>*
  %1202 = load <4 x i32>, <4 x i32>* %1201, align 4, !alias.scope !167
  %1203 = getelementptr inbounds i32, i32* %1196, i64 -3
  %1204 = bitcast i32* %1203 to <4 x i32>*
  store <4 x i32> %1199, <4 x i32>* %1204, align 4, !alias.scope !170, !noalias !167
  %1205 = getelementptr inbounds i32, i32* %1196, i64 -7
  %1206 = bitcast i32* %1205 to <4 x i32>*
  store <4 x i32> %1202, <4 x i32>* %1206, align 4, !alias.scope !170, !noalias !167
  %1207 = sub nuw nsw i64 -8, %1189
  %1208 = getelementptr %"class.v8::internal::wasm::ValueType", %"class.v8::internal::wasm::ValueType"* %1142, i64 %1207
  %1209 = sub nuw nsw i64 -8, %1189
  %1210 = getelementptr inbounds %"class.v8::internal::wasm::ValueType", %"class.v8::internal::wasm::ValueType"* %1187, i64 %1209
  %1211 = getelementptr inbounds %"class.v8::internal::wasm::ValueType", %"class.v8::internal::wasm::ValueType"* %1210, i64 0, i32 0
  %1212 = getelementptr inbounds %"class.v8::internal::wasm::ValueType", %"class.v8::internal::wasm::ValueType"* %1208, i64 -1, i32 0
  %1213 = getelementptr inbounds i32, i32* %1211, i64 -3
  %1214 = bitcast i32* %1213 to <4 x i32>*
  %1215 = load <4 x i32>, <4 x i32>* %1214, align 4, !alias.scope !167
  %1216 = getelementptr inbounds i32, i32* %1211, i64 -7
  %1217 = bitcast i32* %1216 to <4 x i32>*
  %1218 = load <4 x i32>, <4 x i32>* %1217, align 4, !alias.scope !167
  %1219 = getelementptr inbounds i32, i32* %1212, i64 -3
  %1220 = bitcast i32* %1219 to <4 x i32>*
  store <4 x i32> %1215, <4 x i32>* %1220, align 4, !alias.scope !170, !noalias !167
  %1221 = getelementptr inbounds i32, i32* %1212, i64 -7
  %1222 = bitcast i32* %1221 to <4 x i32>*
  store <4 x i32> %1218, <4 x i32>* %1222, align 4, !alias.scope !170, !noalias !167
  %1223 = add i64 %1189, 16
  %1224 = add i64 %1190, -2
  %1225 = icmp eq i64 %1224, 0
  br i1 %1225, label %1226, label %1188, !llvm.loop !172

1226:                                             ; preds = %1188, %1173
  %1227 = phi i64 [ 0, %1173 ], [ %1223, %1188 ]
  %1228 = icmp eq i64 %1182, 0
  br i1 %1228, label %1247, label %1229

1229:                                             ; preds = %1226
  %1230 = sub i64 0, %1227
  %1231 = getelementptr %"class.v8::internal::wasm::ValueType", %"class.v8::internal::wasm::ValueType"* %1142, i64 %1230
  %1232 = sub i64 0, %1227
  %1233 = getelementptr %"class.v8::internal::wasm::ValueType", %"class.v8::internal::wasm::ValueType"* %1150, i64 -1
  %1234 = getelementptr inbounds %"class.v8::internal::wasm::ValueType", %"class.v8::internal::wasm::ValueType"* %1233, i64 %1232
  %1235 = getelementptr inbounds %"class.v8::internal::wasm::ValueType", %"class.v8::internal::wasm::ValueType"* %1234, i64 0, i32 0
  %1236 = getelementptr inbounds %"class.v8::internal::wasm::ValueType", %"class.v8::internal::wasm::ValueType"* %1231, i64 -1, i32 0
  %1237 = getelementptr inbounds i32, i32* %1235, i64 -3
  %1238 = bitcast i32* %1237 to <4 x i32>*
  %1239 = load <4 x i32>, <4 x i32>* %1238, align 4, !alias.scope !167
  %1240 = getelementptr inbounds i32, i32* %1235, i64 -7
  %1241 = bitcast i32* %1240 to <4 x i32>*
  %1242 = load <4 x i32>, <4 x i32>* %1241, align 4, !alias.scope !167
  %1243 = getelementptr inbounds i32, i32* %1236, i64 -3
  %1244 = bitcast i32* %1243 to <4 x i32>*
  store <4 x i32> %1239, <4 x i32>* %1244, align 4, !alias.scope !170, !noalias !167
  %1245 = getelementptr inbounds i32, i32* %1236, i64 -7
  %1246 = bitcast i32* %1245 to <4 x i32>*
  store <4 x i32> %1242, <4 x i32>* %1246, align 4, !alias.scope !170, !noalias !167
  br label %1247

1247:                                             ; preds = %1226, %1229
  %1248 = icmp eq i64 %1157, %1174
  br i1 %1248, label %1305, label %1249

1249:                                             ; preds = %1247, %1159, %1152
  %1250 = phi %"class.v8::internal::wasm::ValueType"* [ %1142, %1159 ], [ %1142, %1152 ], [ %1176, %1247 ]
  %1251 = phi %"class.v8::internal::wasm::ValueType"* [ %1150, %1159 ], [ %1150, %1152 ], [ %1178, %1247 ]
  %1252 = getelementptr %"class.v8::internal::wasm::ValueType", %"class.v8::internal::wasm::ValueType"* %1251, i64 -1
  %1253 = ptrtoint %"class.v8::internal::wasm::ValueType"* %1252 to i64
  %1254 = sub i64 %1253, %1149
  %1255 = lshr i64 %1254, 2
  %1256 = add nuw nsw i64 %1255, 1
  %1257 = and i64 %1256, 7
  %1258 = icmp eq i64 %1257, 0
  br i1 %1258, label %1270, label %1259

1259:                                             ; preds = %1249, %1259
  %1260 = phi %"class.v8::internal::wasm::ValueType"* [ %1267, %1259 ], [ %1250, %1249 ]
  %1261 = phi %"class.v8::internal::wasm::ValueType"* [ %1263, %1259 ], [ %1251, %1249 ]
  %1262 = phi i64 [ %1268, %1259 ], [ %1257, %1249 ]
  %1263 = getelementptr inbounds %"class.v8::internal::wasm::ValueType", %"class.v8::internal::wasm::ValueType"* %1261, i64 -1
  %1264 = getelementptr inbounds %"class.v8::internal::wasm::ValueType", %"class.v8::internal::wasm::ValueType"* %1263, i64 0, i32 0
  %1265 = getelementptr inbounds %"class.v8::internal::wasm::ValueType", %"class.v8::internal::wasm::ValueType"* %1260, i64 -1, i32 0
  %1266 = load i32, i32* %1264, align 4
  store i32 %1266, i32* %1265, align 4
  %1267 = getelementptr inbounds %"class.v8::internal::wasm::ValueType", %"class.v8::internal::wasm::ValueType"* %1260, i64 -1
  %1268 = add i64 %1262, -1
  %1269 = icmp eq i64 %1268, 0
  br i1 %1269, label %1270, label %1259, !llvm.loop !173

1270:                                             ; preds = %1259, %1249
  %1271 = phi %"class.v8::internal::wasm::ValueType"* [ undef, %1249 ], [ %1267, %1259 ]
  %1272 = phi %"class.v8::internal::wasm::ValueType"* [ %1250, %1249 ], [ %1267, %1259 ]
  %1273 = phi %"class.v8::internal::wasm::ValueType"* [ %1251, %1249 ], [ %1263, %1259 ]
  %1274 = icmp ult i64 %1254, 28
  br i1 %1274, label %1305, label %1275

1275:                                             ; preds = %1270, %1275
  %1276 = phi %"class.v8::internal::wasm::ValueType"* [ %1303, %1275 ], [ %1272, %1270 ]
  %1277 = phi %"class.v8::internal::wasm::ValueType"* [ %1299, %1275 ], [ %1273, %1270 ]
  %1278 = getelementptr inbounds %"class.v8::internal::wasm::ValueType", %"class.v8::internal::wasm::ValueType"* %1277, i64 -1, i32 0
  %1279 = getelementptr inbounds %"class.v8::internal::wasm::ValueType", %"class.v8::internal::wasm::ValueType"* %1276, i64 -1, i32 0
  %1280 = load i32, i32* %1278, align 4
  store i32 %1280, i32* %1279, align 4
  %1281 = getelementptr inbounds %"class.v8::internal::wasm::ValueType", %"class.v8::internal::wasm::ValueType"* %1277, i64 -2, i32 0
  %1282 = getelementptr inbounds %"class.v8::internal::wasm::ValueType", %"class.v8::internal::wasm::ValueType"* %1276, i64 -2, i32 0
  %1283 = load i32, i32* %1281, align 4
  store i32 %1283, i32* %1282, align 4
  %1284 = getelementptr inbounds %"class.v8::internal::wasm::ValueType", %"class.v8::internal::wasm::ValueType"* %1277, i64 -3, i32 0
  %1285 = getelementptr inbounds %"class.v8::internal::wasm::ValueType", %"class.v8::internal::wasm::ValueType"* %1276, i64 -3, i32 0
  %1286 = load i32, i32* %1284, align 4
  store i32 %1286, i32* %1285, align 4
  %1287 = getelementptr inbounds %"class.v8::internal::wasm::ValueType", %"class.v8::internal::wasm::ValueType"* %1277, i64 -4, i32 0
  %1288 = getelementptr inbounds %"class.v8::internal::wasm::ValueType", %"class.v8::internal::wasm::ValueType"* %1276, i64 -4, i32 0
  %1289 = load i32, i32* %1287, align 4
  store i32 %1289, i32* %1288, align 4
  %1290 = getelementptr inbounds %"class.v8::internal::wasm::ValueType", %"class.v8::internal::wasm::ValueType"* %1277, i64 -5, i32 0
  %1291 = getelementptr inbounds %"class.v8::internal::wasm::ValueType", %"class.v8::internal::wasm::ValueType"* %1276, i64 -5, i32 0
  %1292 = load i32, i32* %1290, align 4
  store i32 %1292, i32* %1291, align 4
  %1293 = getelementptr inbounds %"class.v8::internal::wasm::ValueType", %"class.v8::internal::wasm::ValueType"* %1277, i64 -6, i32 0
  %1294 = getelementptr inbounds %"class.v8::internal::wasm::ValueType", %"class.v8::internal::wasm::ValueType"* %1276, i64 -6, i32 0
  %1295 = load i32, i32* %1293, align 4
  store i32 %1295, i32* %1294, align 4
  %1296 = getelementptr inbounds %"class.v8::internal::wasm::ValueType", %"class.v8::internal::wasm::ValueType"* %1277, i64 -7, i32 0
  %1297 = getelementptr inbounds %"class.v8::internal::wasm::ValueType", %"class.v8::internal::wasm::ValueType"* %1276, i64 -7, i32 0
  %1298 = load i32, i32* %1296, align 4
  store i32 %1298, i32* %1297, align 4
  %1299 = getelementptr inbounds %"class.v8::internal::wasm::ValueType", %"class.v8::internal::wasm::ValueType"* %1277, i64 -8
  %1300 = getelementptr inbounds %"class.v8::internal::wasm::ValueType", %"class.v8::internal::wasm::ValueType"* %1299, i64 0, i32 0
  %1301 = getelementptr inbounds %"class.v8::internal::wasm::ValueType", %"class.v8::internal::wasm::ValueType"* %1276, i64 -8, i32 0
  %1302 = load i32, i32* %1300, align 4
  store i32 %1302, i32* %1301, align 4
  %1303 = getelementptr inbounds %"class.v8::internal::wasm::ValueType", %"class.v8::internal::wasm::ValueType"* %1276, i64 -8
  %1304 = icmp eq %"class.v8::internal::wasm::ValueType"* %1299, %1148
  br i1 %1304, label %1305, label %1275, !llvm.loop !174

1305:                                             ; preds = %1270, %1275, %1247, %1139
  %1306 = phi %"class.v8::internal::wasm::ValueType"* [ %1142, %1139 ], [ %1176, %1247 ], [ %1271, %1270 ], [ %1303, %1275 ]
  %1307 = ptrtoint %"class.v8::internal::wasm::ValueType"* %1306 to i64
  store i64 %1307, i64* %17, align 8
  store i64 %1147, i64* %16, align 8
  store i64 %1144, i64* %19, align 8
  br label %1311

1308:                                             ; preds = %1090
  store i8 1, i8* %31, align 4
  store i8* getelementptr inbounds ([30 x i8], [30 x i8]* @.str.47, i64 0, i64 0), i8** %32, align 8
  %1309 = load i64, i64* %33, align 8
  %1310 = trunc i64 %1309 to i32
  store i32 %1310, i32* %34, align 8
  br label %2309

1311:                                             ; preds = %1305, %1098, %1087, %880, %869, %662
  %1312 = load %"class.v8::internal::wasm::WasmFunctionBuilder"*, %"class.v8::internal::wasm::WasmFunctionBuilder"** %22, align 8
  %1313 = getelementptr inbounds %"struct.v8::internal::wasm::AsmJsParser::VarInfo", %"struct.v8::internal::wasm::AsmJsParser::VarInfo"* %631, i64 %583, i32 4
  %1314 = load i32, i32* %1313, align 4
  %1315 = load i64, i64* %29, align 8
  %1316 = trunc i64 %1315 to i32
  %1317 = add i32 %1314, %1316
  tail call void @_ZN2v88internal4wasm19WasmFunctionBuilder12EmitWithI32VENS1_10WasmOpcodeEi(%"class.v8::internal::wasm::WasmFunctionBuilder"* %1312, i32 35, i32 %1317) #12
  %1318 = load %"class.v8::internal::wasm::WasmFunctionBuilder"*, %"class.v8::internal::wasm::WasmFunctionBuilder"** %22, align 8
  %1319 = load i32, i32* %654, align 4
  tail call void @_ZN2v88internal4wasm19WasmFunctionBuilder12EmitSetLocalEj(%"class.v8::internal::wasm::WasmFunctionBuilder"* %1318, i32 %1319) #12
  br label %2293

1320:                                             ; preds = %630
  %1321 = getelementptr inbounds %"struct.v8::internal::wasm::AsmJsParser::VarInfo", %"struct.v8::internal::wasm::AsmJsParser::VarInfo"* %632, i64 0, i32 0
  %1322 = load %"class.v8::internal::wasm::AsmType"*, %"class.v8::internal::wasm::AsmType"** %1321, align 8
  %1323 = load %"class.v8::internal::wasm::AsmType"*, %"class.v8::internal::wasm::AsmType"** %27, align 8
  %1324 = tail call zeroext i1 @_ZN2v88internal4wasm7AsmType3IsAEPS2_(%"class.v8::internal::wasm::AsmType"* %1322, %"class.v8::internal::wasm::AsmType"* %1323) #12
  br i1 %1324, label %1325, label %1830

1325:                                             ; preds = %1320
  %1326 = load i32, i32* %4, align 8
  %1327 = icmp eq i32 %1326, 40
  br i1 %1327, label %1331, label %1328

1328:                                             ; preds = %1325
  store i8 1, i8* %31, align 4
  store i8* getelementptr inbounds ([17 x i8], [17 x i8]* @.str.3, i64 0, i64 0), i8** %32, align 8
  %1329 = load i64, i64* %33, align 8
  %1330 = trunc i64 %1329 to i32
  store i32 %1330, i32* %34, align 8
  br label %2309

1331:                                             ; preds = %1325
  tail call void @_ZN2v88internal12AsmJsScanner4NextEv(%"class.v8::internal::AsmJsScanner"* %8) #12
  %1332 = load i32, i32* %4, align 8
  %1333 = icmp eq i32 %1332, 45
  br i1 %1333, label %1334, label %1336

1334:                                             ; preds = %1331
  tail call void @_ZN2v88internal12AsmJsScanner4NextEv(%"class.v8::internal::AsmJsScanner"* %8) #12
  %1335 = load i32, i32* %4, align 8
  br label %1336

1336:                                             ; preds = %1331, %1334
  %1337 = phi i32 [ %1332, %1331 ], [ %1335, %1334 ]
  %1338 = phi i1 [ false, %1331 ], [ true, %1334 ]
  switch i32 %1337, label %1815 [
    i32 -4, label %1339
    i32 -3, label %1582
  ]

1339:                                             ; preds = %1336
  %1340 = load i64, i64* %28, align 8
  tail call void @_ZN2v88internal12AsmJsScanner4NextEv(%"class.v8::internal::AsmJsScanner"* %8) #12
  store i32 1, i32* %95, align 8
  %1341 = getelementptr inbounds %"struct.v8::internal::wasm::AsmJsParser::VarInfo", %"struct.v8::internal::wasm::AsmJsParser::VarInfo"* %94, i64 0, i32 0
  store %"class.v8::internal::wasm::AsmType"* inttoptr (i64 57357 to %"class.v8::internal::wasm::AsmType"*), %"class.v8::internal::wasm::AsmType"** %1341, align 8
  %1342 = load i64, i64* %16, align 8
  %1343 = load i64, i64* %17, align 8
  %1344 = sub i64 %1342, %1343
  %1345 = lshr exact i64 %1344, 2
  %1346 = add i64 %1345, %1
  %1347 = trunc i64 %1346 to i32
  %1348 = getelementptr inbounds %"struct.v8::internal::wasm::AsmJsParser::VarInfo", %"struct.v8::internal::wasm::AsmJsParser::VarInfo"* %93, i64 %49, i32 4
  store i32 %1347, i32* %1348, align 4
  %1349 = load %"class.v8::internal::wasm::ValueType"*, %"class.v8::internal::wasm::ValueType"** %15, align 8
  %1350 = load %"class.v8::internal::wasm::ValueType"*, %"class.v8::internal::wasm::ValueType"** %18, align 8
  %1351 = icmp eq %"class.v8::internal::wasm::ValueType"* %1349, %1350
  %1352 = ptrtoint %"class.v8::internal::wasm::ValueType"* %1350 to i64
  br i1 %1351, label %1357, label %1353

1353:                                             ; preds = %1339
  %1354 = getelementptr inbounds %"class.v8::internal::wasm::ValueType", %"class.v8::internal::wasm::ValueType"* %1349, i64 0, i32 0
  store i32 3, i32* %1354, align 4
  %1355 = getelementptr inbounds %"class.v8::internal::wasm::ValueType", %"class.v8::internal::wasm::ValueType"* %1349, i64 1
  %1356 = ptrtoint %"class.v8::internal::wasm::ValueType"* %1355 to i64
  store i64 %1356, i64* %16, align 8
  br label %1563

1357:                                             ; preds = %1339
  %1358 = ptrtoint %"class.v8::internal::wasm::ValueType"* %1349 to i64
  %1359 = load i64, i64* %17, align 8
  %1360 = sub i64 %1358, %1359
  %1361 = ashr exact i64 %1360, 2
  %1362 = add nsw i64 %1361, 1
  %1363 = icmp ugt i64 %1362, 536870911
  br i1 %1363, label %1364, label %1366

1364:                                             ; preds = %1357
  %1365 = bitcast %"class.v8::internal::ZoneVector.164"* %2 to %"class.std::__1::__vector_base_common"*
  tail call void @_ZNKSt3__120__vector_base_commonILb1EE20__throw_length_errorEv(%"class.std::__1::__vector_base_common"* %1365) #13
  unreachable

1366:                                             ; preds = %1357
  %1367 = sub i64 %1352, %1359
  %1368 = ashr exact i64 %1367, 2
  %1369 = icmp ult i64 %1368, 268435455
  br i1 %1369, label %1370, label %1375

1370:                                             ; preds = %1366
  %1371 = ashr exact i64 %1367, 1
  %1372 = icmp ult i64 %1371, %1362
  %1373 = select i1 %1372, i64 %1362, i64 %1371
  %1374 = icmp eq i64 %1373, 0
  br i1 %1374, label %1394, label %1375

1375:                                             ; preds = %1370, %1366
  %1376 = phi i64 [ %1373, %1370 ], [ 536870911, %1366 ]
  %1377 = load %"class.v8::internal::Zone"*, %"class.v8::internal::Zone"** %20, align 8
  %1378 = shl i64 %1376, 2
  %1379 = add i64 %1378, 7
  %1380 = and i64 %1379, -8
  %1381 = getelementptr inbounds %"class.v8::internal::Zone", %"class.v8::internal::Zone"* %1377, i64 0, i32 2
  %1382 = load i64, i64* %1381, align 8
  %1383 = getelementptr inbounds %"class.v8::internal::Zone", %"class.v8::internal::Zone"* %1377, i64 0, i32 3
  %1384 = load i64, i64* %1383, align 8
  %1385 = sub i64 %1384, %1382
  %1386 = icmp ugt i64 %1380, %1385
  br i1 %1386, label %1387, label %1389, !prof !2

1387:                                             ; preds = %1375
  %1388 = tail call i64 @_ZN2v88internal4Zone9NewExpandEm(%"class.v8::internal::Zone"* %1377, i64 %1380) #12
  br label %1391

1389:                                             ; preds = %1375
  %1390 = add i64 %1380, %1382
  store i64 %1390, i64* %1381, align 8
  br label %1391

1391:                                             ; preds = %1389, %1387
  %1392 = phi i64 [ %1388, %1387 ], [ %1382, %1389 ]
  %1393 = inttoptr i64 %1392 to %"class.v8::internal::wasm::ValueType"*
  br label %1394

1394:                                             ; preds = %1391, %1370
  %1395 = phi i64 [ %1376, %1391 ], [ 0, %1370 ]
  %1396 = phi %"class.v8::internal::wasm::ValueType"* [ %1393, %1391 ], [ null, %1370 ]
  %1397 = getelementptr inbounds %"class.v8::internal::wasm::ValueType", %"class.v8::internal::wasm::ValueType"* %1396, i64 %1361
  %1398 = getelementptr inbounds %"class.v8::internal::wasm::ValueType", %"class.v8::internal::wasm::ValueType"* %1396, i64 %1395
  %1399 = ptrtoint %"class.v8::internal::wasm::ValueType"* %1398 to i64
  %1400 = getelementptr inbounds %"class.v8::internal::wasm::ValueType", %"class.v8::internal::wasm::ValueType"* %1397, i64 0, i32 0
  store i32 3, i32* %1400, align 4
  %1401 = getelementptr inbounds %"class.v8::internal::wasm::ValueType", %"class.v8::internal::wasm::ValueType"* %1397, i64 1
  %1402 = ptrtoint %"class.v8::internal::wasm::ValueType"* %1401 to i64
  %1403 = load %"class.v8::internal::wasm::ValueType"*, %"class.v8::internal::wasm::ValueType"** %21, align 8
  %1404 = ptrtoint %"class.v8::internal::wasm::ValueType"* %1403 to i64
  %1405 = load %"class.v8::internal::wasm::ValueType"*, %"class.v8::internal::wasm::ValueType"** %15, align 8
  %1406 = icmp eq %"class.v8::internal::wasm::ValueType"* %1405, %1403
  br i1 %1406, label %1560, label %1407

1407:                                             ; preds = %1394
  %1408 = getelementptr %"class.v8::internal::wasm::ValueType", %"class.v8::internal::wasm::ValueType"* %1405, i64 -1
  %1409 = ptrtoint %"class.v8::internal::wasm::ValueType"* %1408 to i64
  %1410 = sub i64 %1409, %1404
  %1411 = lshr i64 %1410, 2
  %1412 = add nuw nsw i64 %1411, 1
  %1413 = icmp ult i64 %1412, 8
  br i1 %1413, label %1504, label %1414

1414:                                             ; preds = %1407
  %1415 = getelementptr %"class.v8::internal::wasm::ValueType", %"class.v8::internal::wasm::ValueType"* %1396, i64 -1
  %1416 = getelementptr %"class.v8::internal::wasm::ValueType", %"class.v8::internal::wasm::ValueType"* %1405, i64 -1
  %1417 = ptrtoint %"class.v8::internal::wasm::ValueType"* %1416 to i64
  %1418 = sub i64 %1417, %1404
  %1419 = lshr i64 %1418, 2
  %1420 = sub nsw i64 %1361, %1419
  %1421 = getelementptr %"class.v8::internal::wasm::ValueType", %"class.v8::internal::wasm::ValueType"* %1415, i64 %1420
  %1422 = getelementptr %"class.v8::internal::wasm::ValueType", %"class.v8::internal::wasm::ValueType"* %1405, i64 -1
  %1423 = sub nsw i64 0, %1419
  %1424 = getelementptr %"class.v8::internal::wasm::ValueType", %"class.v8::internal::wasm::ValueType"* %1422, i64 %1423
  %1425 = icmp ult %"class.v8::internal::wasm::ValueType"* %1421, %1405
  %1426 = icmp ult %"class.v8::internal::wasm::ValueType"* %1424, %1397
  %1427 = and i1 %1425, %1426
  br i1 %1427, label %1504, label %1428

1428:                                             ; preds = %1414
  %1429 = and i64 %1412, 9223372036854775800
  %1430 = sub nsw i64 0, %1429
  %1431 = getelementptr %"class.v8::internal::wasm::ValueType", %"class.v8::internal::wasm::ValueType"* %1397, i64 %1430
  %1432 = sub nsw i64 0, %1429
  %1433 = getelementptr %"class.v8::internal::wasm::ValueType", %"class.v8::internal::wasm::ValueType"* %1405, i64 %1432
  %1434 = add nsw i64 %1429, -8
  %1435 = lshr exact i64 %1434, 3
  %1436 = add nuw nsw i64 %1435, 1
  %1437 = and i64 %1436, 1
  %1438 = icmp eq i64 %1434, 0
  br i1 %1438, label %1481, label %1439

1439:                                             ; preds = %1428
  %1440 = sub nuw nsw i64 %1436, %1437
  %1441 = getelementptr %"class.v8::internal::wasm::ValueType", %"class.v8::internal::wasm::ValueType"* %1405, i64 -1
  %1442 = getelementptr %"class.v8::internal::wasm::ValueType", %"class.v8::internal::wasm::ValueType"* %1405, i64 -1
  br label %1443

1443:                                             ; preds = %1443, %1439
  %1444 = phi i64 [ 0, %1439 ], [ %1478, %1443 ]
  %1445 = phi i64 [ %1440, %1439 ], [ %1479, %1443 ]
  %1446 = sub i64 0, %1444
  %1447 = getelementptr %"class.v8::internal::wasm::ValueType", %"class.v8::internal::wasm::ValueType"* %1397, i64 %1446
  %1448 = sub i64 0, %1444
  %1449 = getelementptr inbounds %"class.v8::internal::wasm::ValueType", %"class.v8::internal::wasm::ValueType"* %1441, i64 %1448
  %1450 = getelementptr inbounds %"class.v8::internal::wasm::ValueType", %"class.v8::internal::wasm::ValueType"* %1449, i64 0, i32 0
  %1451 = getelementptr inbounds %"class.v8::internal::wasm::ValueType", %"class.v8::internal::wasm::ValueType"* %1447, i64 -1, i32 0
  %1452 = getelementptr inbounds i32, i32* %1450, i64 -3
  %1453 = bitcast i32* %1452 to <4 x i32>*
  %1454 = load <4 x i32>, <4 x i32>* %1453, align 4, !alias.scope !175
  %1455 = getelementptr inbounds i32, i32* %1450, i64 -7
  %1456 = bitcast i32* %1455 to <4 x i32>*
  %1457 = load <4 x i32>, <4 x i32>* %1456, align 4, !alias.scope !175
  %1458 = getelementptr inbounds i32, i32* %1451, i64 -3
  %1459 = bitcast i32* %1458 to <4 x i32>*
  store <4 x i32> %1454, <4 x i32>* %1459, align 4, !alias.scope !178, !noalias !175
  %1460 = getelementptr inbounds i32, i32* %1451, i64 -7
  %1461 = bitcast i32* %1460 to <4 x i32>*
  store <4 x i32> %1457, <4 x i32>* %1461, align 4, !alias.scope !178, !noalias !175
  %1462 = sub nuw nsw i64 -8, %1444
  %1463 = getelementptr %"class.v8::internal::wasm::ValueType", %"class.v8::internal::wasm::ValueType"* %1397, i64 %1462
  %1464 = sub nuw nsw i64 -8, %1444
  %1465 = getelementptr inbounds %"class.v8::internal::wasm::ValueType", %"class.v8::internal::wasm::ValueType"* %1442, i64 %1464
  %1466 = getelementptr inbounds %"class.v8::internal::wasm::ValueType", %"class.v8::internal::wasm::ValueType"* %1465, i64 0, i32 0
  %1467 = getelementptr inbounds %"class.v8::internal::wasm::ValueType", %"class.v8::internal::wasm::ValueType"* %1463, i64 -1, i32 0
  %1468 = getelementptr inbounds i32, i32* %1466, i64 -3
  %1469 = bitcast i32* %1468 to <4 x i32>*
  %1470 = load <4 x i32>, <4 x i32>* %1469, align 4, !alias.scope !175
  %1471 = getelementptr inbounds i32, i32* %1466, i64 -7
  %1472 = bitcast i32* %1471 to <4 x i32>*
  %1473 = load <4 x i32>, <4 x i32>* %1472, align 4, !alias.scope !175
  %1474 = getelementptr inbounds i32, i32* %1467, i64 -3
  %1475 = bitcast i32* %1474 to <4 x i32>*
  store <4 x i32> %1470, <4 x i32>* %1475, align 4, !alias.scope !178, !noalias !175
  %1476 = getelementptr inbounds i32, i32* %1467, i64 -7
  %1477 = bitcast i32* %1476 to <4 x i32>*
  store <4 x i32> %1473, <4 x i32>* %1477, align 4, !alias.scope !178, !noalias !175
  %1478 = add i64 %1444, 16
  %1479 = add i64 %1445, -2
  %1480 = icmp eq i64 %1479, 0
  br i1 %1480, label %1481, label %1443, !llvm.loop !180

1481:                                             ; preds = %1443, %1428
  %1482 = phi i64 [ 0, %1428 ], [ %1478, %1443 ]
  %1483 = icmp eq i64 %1437, 0
  br i1 %1483, label %1502, label %1484

1484:                                             ; preds = %1481
  %1485 = sub i64 0, %1482
  %1486 = getelementptr %"class.v8::internal::wasm::ValueType", %"class.v8::internal::wasm::ValueType"* %1397, i64 %1485
  %1487 = sub i64 0, %1482
  %1488 = getelementptr %"class.v8::internal::wasm::ValueType", %"class.v8::internal::wasm::ValueType"* %1405, i64 -1
  %1489 = getelementptr inbounds %"class.v8::internal::wasm::ValueType", %"class.v8::internal::wasm::ValueType"* %1488, i64 %1487
  %1490 = getelementptr inbounds %"class.v8::internal::wasm::ValueType", %"class.v8::internal::wasm::ValueType"* %1489, i64 0, i32 0
  %1491 = getelementptr inbounds %"class.v8::internal::wasm::ValueType", %"class.v8::internal::wasm::ValueType"* %1486, i64 -1, i32 0
  %1492 = getelementptr inbounds i32, i32* %1490, i64 -3
  %1493 = bitcast i32* %1492 to <4 x i32>*
  %1494 = load <4 x i32>, <4 x i32>* %1493, align 4, !alias.scope !175
  %1495 = getelementptr inbounds i32, i32* %1490, i64 -7
  %1496 = bitcast i32* %1495 to <4 x i32>*
  %1497 = load <4 x i32>, <4 x i32>* %1496, align 4, !alias.scope !175
  %1498 = getelementptr inbounds i32, i32* %1491, i64 -3
  %1499 = bitcast i32* %1498 to <4 x i32>*
  store <4 x i32> %1494, <4 x i32>* %1499, align 4, !alias.scope !178, !noalias !175
  %1500 = getelementptr inbounds i32, i32* %1491, i64 -7
  %1501 = bitcast i32* %1500 to <4 x i32>*
  store <4 x i32> %1497, <4 x i32>* %1501, align 4, !alias.scope !178, !noalias !175
  br label %1502

1502:                                             ; preds = %1481, %1484
  %1503 = icmp eq i64 %1412, %1429
  br i1 %1503, label %1560, label %1504

1504:                                             ; preds = %1502, %1414, %1407
  %1505 = phi %"class.v8::internal::wasm::ValueType"* [ %1397, %1414 ], [ %1397, %1407 ], [ %1431, %1502 ]
  %1506 = phi %"class.v8::internal::wasm::ValueType"* [ %1405, %1414 ], [ %1405, %1407 ], [ %1433, %1502 ]
  %1507 = getelementptr %"class.v8::internal::wasm::ValueType", %"class.v8::internal::wasm::ValueType"* %1506, i64 -1
  %1508 = ptrtoint %"class.v8::internal::wasm::ValueType"* %1507 to i64
  %1509 = sub i64 %1508, %1404
  %1510 = lshr i64 %1509, 2
  %1511 = add nuw nsw i64 %1510, 1
  %1512 = and i64 %1511, 7
  %1513 = icmp eq i64 %1512, 0
  br i1 %1513, label %1525, label %1514

1514:                                             ; preds = %1504, %1514
  %1515 = phi %"class.v8::internal::wasm::ValueType"* [ %1522, %1514 ], [ %1505, %1504 ]
  %1516 = phi %"class.v8::internal::wasm::ValueType"* [ %1518, %1514 ], [ %1506, %1504 ]
  %1517 = phi i64 [ %1523, %1514 ], [ %1512, %1504 ]
  %1518 = getelementptr inbounds %"class.v8::internal::wasm::ValueType", %"class.v8::internal::wasm::ValueType"* %1516, i64 -1
  %1519 = getelementptr inbounds %"class.v8::internal::wasm::ValueType", %"class.v8::internal::wasm::ValueType"* %1518, i64 0, i32 0
  %1520 = getelementptr inbounds %"class.v8::internal::wasm::ValueType", %"class.v8::internal::wasm::ValueType"* %1515, i64 -1, i32 0
  %1521 = load i32, i32* %1519, align 4
  store i32 %1521, i32* %1520, align 4
  %1522 = getelementptr inbounds %"class.v8::internal::wasm::ValueType", %"class.v8::internal::wasm::ValueType"* %1515, i64 -1
  %1523 = add i64 %1517, -1
  %1524 = icmp eq i64 %1523, 0
  br i1 %1524, label %1525, label %1514, !llvm.loop !181

1525:                                             ; preds = %1514, %1504
  %1526 = phi %"class.v8::internal::wasm::ValueType"* [ undef, %1504 ], [ %1522, %1514 ]
  %1527 = phi %"class.v8::internal::wasm::ValueType"* [ %1505, %1504 ], [ %1522, %1514 ]
  %1528 = phi %"class.v8::internal::wasm::ValueType"* [ %1506, %1504 ], [ %1518, %1514 ]
  %1529 = icmp ult i64 %1509, 28
  br i1 %1529, label %1560, label %1530

1530:                                             ; preds = %1525, %1530
  %1531 = phi %"class.v8::internal::wasm::ValueType"* [ %1558, %1530 ], [ %1527, %1525 ]
  %1532 = phi %"class.v8::internal::wasm::ValueType"* [ %1554, %1530 ], [ %1528, %1525 ]
  %1533 = getelementptr inbounds %"class.v8::internal::wasm::ValueType", %"class.v8::internal::wasm::ValueType"* %1532, i64 -1, i32 0
  %1534 = getelementptr inbounds %"class.v8::internal::wasm::ValueType", %"class.v8::internal::wasm::ValueType"* %1531, i64 -1, i32 0
  %1535 = load i32, i32* %1533, align 4
  store i32 %1535, i32* %1534, align 4
  %1536 = getelementptr inbounds %"class.v8::internal::wasm::ValueType", %"class.v8::internal::wasm::ValueType"* %1532, i64 -2, i32 0
  %1537 = getelementptr inbounds %"class.v8::internal::wasm::ValueType", %"class.v8::internal::wasm::ValueType"* %1531, i64 -2, i32 0
  %1538 = load i32, i32* %1536, align 4
  store i32 %1538, i32* %1537, align 4
  %1539 = getelementptr inbounds %"class.v8::internal::wasm::ValueType", %"class.v8::internal::wasm::ValueType"* %1532, i64 -3, i32 0
  %1540 = getelementptr inbounds %"class.v8::internal::wasm::ValueType", %"class.v8::internal::wasm::ValueType"* %1531, i64 -3, i32 0
  %1541 = load i32, i32* %1539, align 4
  store i32 %1541, i32* %1540, align 4
  %1542 = getelementptr inbounds %"class.v8::internal::wasm::ValueType", %"class.v8::internal::wasm::ValueType"* %1532, i64 -4, i32 0
  %1543 = getelementptr inbounds %"class.v8::internal::wasm::ValueType", %"class.v8::internal::wasm::ValueType"* %1531, i64 -4, i32 0
  %1544 = load i32, i32* %1542, align 4
  store i32 %1544, i32* %1543, align 4
  %1545 = getelementptr inbounds %"class.v8::internal::wasm::ValueType", %"class.v8::internal::wasm::ValueType"* %1532, i64 -5, i32 0
  %1546 = getelementptr inbounds %"class.v8::internal::wasm::ValueType", %"class.v8::internal::wasm::ValueType"* %1531, i64 -5, i32 0
  %1547 = load i32, i32* %1545, align 4
  store i32 %1547, i32* %1546, align 4
  %1548 = getelementptr inbounds %"class.v8::internal::wasm::ValueType", %"class.v8::internal::wasm::ValueType"* %1532, i64 -6, i32 0
  %1549 = getelementptr inbounds %"class.v8::internal::wasm::ValueType", %"class.v8::internal::wasm::ValueType"* %1531, i64 -6, i32 0
  %1550 = load i32, i32* %1548, align 4
  store i32 %1550, i32* %1549, align 4
  %1551 = getelementptr inbounds %"class.v8::internal::wasm::ValueType", %"class.v8::internal::wasm::ValueType"* %1532, i64 -7, i32 0
  %1552 = getelementptr inbounds %"class.v8::internal::wasm::ValueType", %"class.v8::internal::wasm::ValueType"* %1531, i64 -7, i32 0
  %1553 = load i32, i32* %1551, align 4
  store i32 %1553, i32* %1552, align 4
  %1554 = getelementptr inbounds %"class.v8::internal::wasm::ValueType", %"class.v8::internal::wasm::ValueType"* %1532, i64 -8
  %1555 = getelementptr inbounds %"class.v8::internal::wasm::ValueType", %"class.v8::internal::wasm::ValueType"* %1554, i64 0, i32 0
  %1556 = getelementptr inbounds %"class.v8::internal::wasm::ValueType", %"class.v8::internal::wasm::ValueType"* %1531, i64 -8, i32 0
  %1557 = load i32, i32* %1555, align 4
  store i32 %1557, i32* %1556, align 4
  %1558 = getelementptr inbounds %"class.v8::internal::wasm::ValueType", %"class.v8::internal::wasm::ValueType"* %1531, i64 -8
  %1559 = icmp eq %"class.v8::internal::wasm::ValueType"* %1554, %1403
  br i1 %1559, label %1560, label %1530, !llvm.loop !182

1560:                                             ; preds = %1525, %1530, %1502, %1394
  %1561 = phi %"class.v8::internal::wasm::ValueType"* [ %1397, %1394 ], [ %1431, %1502 ], [ %1526, %1525 ], [ %1558, %1530 ]
  %1562 = ptrtoint %"class.v8::internal::wasm::ValueType"* %1561 to i64
  store i64 %1562, i64* %17, align 8
  store i64 %1402, i64* %16, align 8
  store i64 %1399, i64* %19, align 8
  br label %1563

1563:                                             ; preds = %1353, %1560
  br i1 %1338, label %1564, label %1568

1564:                                             ; preds = %1563
  %1565 = bitcast i64 %1340 to double
  %1566 = fsub double -0.000000e+00, %1565
  %1567 = bitcast double %1566 to i64
  br label %1568

1568:                                             ; preds = %1564, %1563
  %1569 = phi i64 [ %1567, %1564 ], [ %1340, %1563 ]
  %1570 = bitcast i64 %1569 to double
  %1571 = fcmp ogt double %1570, 0x47EFFFFFE0000000
  br i1 %1571, label %1572, label %1575

1572:                                             ; preds = %1568
  %1573 = fcmp ugt double %1570, 0x47EFFFFFEFFFFFFF
  br i1 %1573, label %1574, label %1818

1574:                                             ; preds = %1572
  br label %1818

1575:                                             ; preds = %1568
  %1576 = fcmp olt double %1570, 0xC7EFFFFFE0000000
  br i1 %1576, label %1577, label %1580

1577:                                             ; preds = %1575
  %1578 = fcmp ult double %1570, 0xC7EFFFFFEFFFFFFF
  br i1 %1578, label %1579, label %1818

1579:                                             ; preds = %1577
  br label %1818

1580:                                             ; preds = %1575
  %1581 = fptrunc double %1570 to float
  br label %1818

1582:                                             ; preds = %1336
  %1583 = load i32, i32* %14, align 8
  tail call void @_ZN2v88internal12AsmJsScanner4NextEv(%"class.v8::internal::AsmJsScanner"* %8) #12
  %1584 = icmp slt i32 %1583, 0
  br i1 %1584, label %1585, label %1588

1585:                                             ; preds = %1582
  store i8 1, i8* %31, align 4
  store i8* getelementptr inbounds ([29 x i8], [29 x i8]* @.str.11, i64 0, i64 0), i8** %32, align 8
  %1586 = load i64, i64* %33, align 8
  %1587 = trunc i64 %1586 to i32
  store i32 %1587, i32* %34, align 8
  br label %2309

1588:                                             ; preds = %1582
  store i32 1, i32* %95, align 8
  %1589 = getelementptr inbounds %"struct.v8::internal::wasm::AsmJsParser::VarInfo", %"struct.v8::internal::wasm::AsmJsParser::VarInfo"* %94, i64 0, i32 0
  store %"class.v8::internal::wasm::AsmType"* inttoptr (i64 57357 to %"class.v8::internal::wasm::AsmType"*), %"class.v8::internal::wasm::AsmType"** %1589, align 8
  %1590 = load i64, i64* %16, align 8
  %1591 = load i64, i64* %17, align 8
  %1592 = sub i64 %1590, %1591
  %1593 = lshr exact i64 %1592, 2
  %1594 = add i64 %1593, %1
  %1595 = trunc i64 %1594 to i32
  %1596 = getelementptr inbounds %"struct.v8::internal::wasm::AsmJsParser::VarInfo", %"struct.v8::internal::wasm::AsmJsParser::VarInfo"* %93, i64 %49, i32 4
  store i32 %1595, i32* %1596, align 4
  %1597 = load %"class.v8::internal::wasm::ValueType"*, %"class.v8::internal::wasm::ValueType"** %15, align 8
  %1598 = load %"class.v8::internal::wasm::ValueType"*, %"class.v8::internal::wasm::ValueType"** %18, align 8
  %1599 = icmp eq %"class.v8::internal::wasm::ValueType"* %1597, %1598
  %1600 = ptrtoint %"class.v8::internal::wasm::ValueType"* %1598 to i64
  br i1 %1599, label %1605, label %1601

1601:                                             ; preds = %1588
  %1602 = getelementptr inbounds %"class.v8::internal::wasm::ValueType", %"class.v8::internal::wasm::ValueType"* %1597, i64 0, i32 0
  store i32 3, i32* %1602, align 4
  %1603 = getelementptr inbounds %"class.v8::internal::wasm::ValueType", %"class.v8::internal::wasm::ValueType"* %1597, i64 1
  %1604 = ptrtoint %"class.v8::internal::wasm::ValueType"* %1603 to i64
  store i64 %1604, i64* %16, align 8
  br label %1811

1605:                                             ; preds = %1588
  %1606 = ptrtoint %"class.v8::internal::wasm::ValueType"* %1597 to i64
  %1607 = load i64, i64* %17, align 8
  %1608 = sub i64 %1606, %1607
  %1609 = ashr exact i64 %1608, 2
  %1610 = add nsw i64 %1609, 1
  %1611 = icmp ugt i64 %1610, 536870911
  br i1 %1611, label %1612, label %1614

1612:                                             ; preds = %1605
  %1613 = bitcast %"class.v8::internal::ZoneVector.164"* %2 to %"class.std::__1::__vector_base_common"*
  tail call void @_ZNKSt3__120__vector_base_commonILb1EE20__throw_length_errorEv(%"class.std::__1::__vector_base_common"* %1613) #13
  unreachable

1614:                                             ; preds = %1605
  %1615 = sub i64 %1600, %1607
  %1616 = ashr exact i64 %1615, 2
  %1617 = icmp ult i64 %1616, 268435455
  br i1 %1617, label %1618, label %1623

1618:                                             ; preds = %1614
  %1619 = ashr exact i64 %1615, 1
  %1620 = icmp ult i64 %1619, %1610
  %1621 = select i1 %1620, i64 %1610, i64 %1619
  %1622 = icmp eq i64 %1621, 0
  br i1 %1622, label %1642, label %1623

1623:                                             ; preds = %1618, %1614
  %1624 = phi i64 [ %1621, %1618 ], [ 536870911, %1614 ]
  %1625 = load %"class.v8::internal::Zone"*, %"class.v8::internal::Zone"** %20, align 8
  %1626 = shl i64 %1624, 2
  %1627 = add i64 %1626, 7
  %1628 = and i64 %1627, -8
  %1629 = getelementptr inbounds %"class.v8::internal::Zone", %"class.v8::internal::Zone"* %1625, i64 0, i32 2
  %1630 = load i64, i64* %1629, align 8
  %1631 = getelementptr inbounds %"class.v8::internal::Zone", %"class.v8::internal::Zone"* %1625, i64 0, i32 3
  %1632 = load i64, i64* %1631, align 8
  %1633 = sub i64 %1632, %1630
  %1634 = icmp ugt i64 %1628, %1633
  br i1 %1634, label %1635, label %1637, !prof !2

1635:                                             ; preds = %1623
  %1636 = tail call i64 @_ZN2v88internal4Zone9NewExpandEm(%"class.v8::internal::Zone"* %1625, i64 %1628) #12
  br label %1639

1637:                                             ; preds = %1623
  %1638 = add i64 %1628, %1630
  store i64 %1638, i64* %1629, align 8
  br label %1639

1639:                                             ; preds = %1637, %1635
  %1640 = phi i64 [ %1636, %1635 ], [ %1630, %1637 ]
  %1641 = inttoptr i64 %1640 to %"class.v8::internal::wasm::ValueType"*
  br label %1642

1642:                                             ; preds = %1639, %1618
  %1643 = phi i64 [ %1624, %1639 ], [ 0, %1618 ]
  %1644 = phi %"class.v8::internal::wasm::ValueType"* [ %1641, %1639 ], [ null, %1618 ]
  %1645 = getelementptr inbounds %"class.v8::internal::wasm::ValueType", %"class.v8::internal::wasm::ValueType"* %1644, i64 %1609
  %1646 = getelementptr inbounds %"class.v8::internal::wasm::ValueType", %"class.v8::internal::wasm::ValueType"* %1644, i64 %1643
  %1647 = ptrtoint %"class.v8::internal::wasm::ValueType"* %1646 to i64
  %1648 = getelementptr inbounds %"class.v8::internal::wasm::ValueType", %"class.v8::internal::wasm::ValueType"* %1645, i64 0, i32 0
  store i32 3, i32* %1648, align 4
  %1649 = getelementptr inbounds %"class.v8::internal::wasm::ValueType", %"class.v8::internal::wasm::ValueType"* %1645, i64 1
  %1650 = ptrtoint %"class.v8::internal::wasm::ValueType"* %1649 to i64
  %1651 = load %"class.v8::internal::wasm::ValueType"*, %"class.v8::internal::wasm::ValueType"** %21, align 8
  %1652 = ptrtoint %"class.v8::internal::wasm::ValueType"* %1651 to i64
  %1653 = load %"class.v8::internal::wasm::ValueType"*, %"class.v8::internal::wasm::ValueType"** %15, align 8
  %1654 = icmp eq %"class.v8::internal::wasm::ValueType"* %1653, %1651
  br i1 %1654, label %1808, label %1655

1655:                                             ; preds = %1642
  %1656 = getelementptr %"class.v8::internal::wasm::ValueType", %"class.v8::internal::wasm::ValueType"* %1653, i64 -1
  %1657 = ptrtoint %"class.v8::internal::wasm::ValueType"* %1656 to i64
  %1658 = sub i64 %1657, %1652
  %1659 = lshr i64 %1658, 2
  %1660 = add nuw nsw i64 %1659, 1
  %1661 = icmp ult i64 %1660, 8
  br i1 %1661, label %1752, label %1662

1662:                                             ; preds = %1655
  %1663 = getelementptr %"class.v8::internal::wasm::ValueType", %"class.v8::internal::wasm::ValueType"* %1644, i64 -1
  %1664 = getelementptr %"class.v8::internal::wasm::ValueType", %"class.v8::internal::wasm::ValueType"* %1653, i64 -1
  %1665 = ptrtoint %"class.v8::internal::wasm::ValueType"* %1664 to i64
  %1666 = sub i64 %1665, %1652
  %1667 = lshr i64 %1666, 2
  %1668 = sub nsw i64 %1609, %1667
  %1669 = getelementptr %"class.v8::internal::wasm::ValueType", %"class.v8::internal::wasm::ValueType"* %1663, i64 %1668
  %1670 = getelementptr %"class.v8::internal::wasm::ValueType", %"class.v8::internal::wasm::ValueType"* %1653, i64 -1
  %1671 = sub nsw i64 0, %1667
  %1672 = getelementptr %"class.v8::internal::wasm::ValueType", %"class.v8::internal::wasm::ValueType"* %1670, i64 %1671
  %1673 = icmp ult %"class.v8::internal::wasm::ValueType"* %1669, %1653
  %1674 = icmp ult %"class.v8::internal::wasm::ValueType"* %1672, %1645
  %1675 = and i1 %1673, %1674
  br i1 %1675, label %1752, label %1676

1676:                                             ; preds = %1662
  %1677 = and i64 %1660, 9223372036854775800
  %1678 = sub nsw i64 0, %1677
  %1679 = getelementptr %"class.v8::internal::wasm::ValueType", %"class.v8::internal::wasm::ValueType"* %1645, i64 %1678
  %1680 = sub nsw i64 0, %1677
  %1681 = getelementptr %"class.v8::internal::wasm::ValueType", %"class.v8::internal::wasm::ValueType"* %1653, i64 %1680
  %1682 = add nsw i64 %1677, -8
  %1683 = lshr exact i64 %1682, 3
  %1684 = add nuw nsw i64 %1683, 1
  %1685 = and i64 %1684, 1
  %1686 = icmp eq i64 %1682, 0
  br i1 %1686, label %1729, label %1687

1687:                                             ; preds = %1676
  %1688 = sub nuw nsw i64 %1684, %1685
  %1689 = getelementptr %"class.v8::internal::wasm::ValueType", %"class.v8::internal::wasm::ValueType"* %1653, i64 -1
  %1690 = getelementptr %"class.v8::internal::wasm::ValueType", %"class.v8::internal::wasm::ValueType"* %1653, i64 -1
  br label %1691

1691:                                             ; preds = %1691, %1687
  %1692 = phi i64 [ 0, %1687 ], [ %1726, %1691 ]
  %1693 = phi i64 [ %1688, %1687 ], [ %1727, %1691 ]
  %1694 = sub i64 0, %1692
  %1695 = getelementptr %"class.v8::internal::wasm::ValueType", %"class.v8::internal::wasm::ValueType"* %1645, i64 %1694
  %1696 = sub i64 0, %1692
  %1697 = getelementptr inbounds %"class.v8::internal::wasm::ValueType", %"class.v8::internal::wasm::ValueType"* %1689, i64 %1696
  %1698 = getelementptr inbounds %"class.v8::internal::wasm::ValueType", %"class.v8::internal::wasm::ValueType"* %1697, i64 0, i32 0
  %1699 = getelementptr inbounds %"class.v8::internal::wasm::ValueType", %"class.v8::internal::wasm::ValueType"* %1695, i64 -1, i32 0
  %1700 = getelementptr inbounds i32, i32* %1698, i64 -3
  %1701 = bitcast i32* %1700 to <4 x i32>*
  %1702 = load <4 x i32>, <4 x i32>* %1701, align 4, !alias.scope !183
  %1703 = getelementptr inbounds i32, i32* %1698, i64 -7
  %1704 = bitcast i32* %1703 to <4 x i32>*
  %1705 = load <4 x i32>, <4 x i32>* %1704, align 4, !alias.scope !183
  %1706 = getelementptr inbounds i32, i32* %1699, i64 -3
  %1707 = bitcast i32* %1706 to <4 x i32>*
  store <4 x i32> %1702, <4 x i32>* %1707, align 4, !alias.scope !186, !noalias !183
  %1708 = getelementptr inbounds i32, i32* %1699, i64 -7
  %1709 = bitcast i32* %1708 to <4 x i32>*
  store <4 x i32> %1705, <4 x i32>* %1709, align 4, !alias.scope !186, !noalias !183
  %1710 = sub nuw nsw i64 -8, %1692
  %1711 = getelementptr %"class.v8::internal::wasm::ValueType", %"class.v8::internal::wasm::ValueType"* %1645, i64 %1710
  %1712 = sub nuw nsw i64 -8, %1692
  %1713 = getelementptr inbounds %"class.v8::internal::wasm::ValueType", %"class.v8::internal::wasm::ValueType"* %1690, i64 %1712
  %1714 = getelementptr inbounds %"class.v8::internal::wasm::ValueType", %"class.v8::internal::wasm::ValueType"* %1713, i64 0, i32 0
  %1715 = getelementptr inbounds %"class.v8::internal::wasm::ValueType", %"class.v8::internal::wasm::ValueType"* %1711, i64 -1, i32 0
  %1716 = getelementptr inbounds i32, i32* %1714, i64 -3
  %1717 = bitcast i32* %1716 to <4 x i32>*
  %1718 = load <4 x i32>, <4 x i32>* %1717, align 4, !alias.scope !183
  %1719 = getelementptr inbounds i32, i32* %1714, i64 -7
  %1720 = bitcast i32* %1719 to <4 x i32>*
  %1721 = load <4 x i32>, <4 x i32>* %1720, align 4, !alias.scope !183
  %1722 = getelementptr inbounds i32, i32* %1715, i64 -3
  %1723 = bitcast i32* %1722 to <4 x i32>*
  store <4 x i32> %1718, <4 x i32>* %1723, align 4, !alias.scope !186, !noalias !183
  %1724 = getelementptr inbounds i32, i32* %1715, i64 -7
  %1725 = bitcast i32* %1724 to <4 x i32>*
  store <4 x i32> %1721, <4 x i32>* %1725, align 4, !alias.scope !186, !noalias !183
  %1726 = add i64 %1692, 16
  %1727 = add i64 %1693, -2
  %1728 = icmp eq i64 %1727, 0
  br i1 %1728, label %1729, label %1691, !llvm.loop !188

1729:                                             ; preds = %1691, %1676
  %1730 = phi i64 [ 0, %1676 ], [ %1726, %1691 ]
  %1731 = icmp eq i64 %1685, 0
  br i1 %1731, label %1750, label %1732

1732:                                             ; preds = %1729
  %1733 = sub i64 0, %1730
  %1734 = getelementptr %"class.v8::internal::wasm::ValueType", %"class.v8::internal::wasm::ValueType"* %1645, i64 %1733
  %1735 = sub i64 0, %1730
  %1736 = getelementptr %"class.v8::internal::wasm::ValueType", %"class.v8::internal::wasm::ValueType"* %1653, i64 -1
  %1737 = getelementptr inbounds %"class.v8::internal::wasm::ValueType", %"class.v8::internal::wasm::ValueType"* %1736, i64 %1735
  %1738 = getelementptr inbounds %"class.v8::internal::wasm::ValueType", %"class.v8::internal::wasm::ValueType"* %1737, i64 0, i32 0
  %1739 = getelementptr inbounds %"class.v8::internal::wasm::ValueType", %"class.v8::internal::wasm::ValueType"* %1734, i64 -1, i32 0
  %1740 = getelementptr inbounds i32, i32* %1738, i64 -3
  %1741 = bitcast i32* %1740 to <4 x i32>*
  %1742 = load <4 x i32>, <4 x i32>* %1741, align 4, !alias.scope !183
  %1743 = getelementptr inbounds i32, i32* %1738, i64 -7
  %1744 = bitcast i32* %1743 to <4 x i32>*
  %1745 = load <4 x i32>, <4 x i32>* %1744, align 4, !alias.scope !183
  %1746 = getelementptr inbounds i32, i32* %1739, i64 -3
  %1747 = bitcast i32* %1746 to <4 x i32>*
  store <4 x i32> %1742, <4 x i32>* %1747, align 4, !alias.scope !186, !noalias !183
  %1748 = getelementptr inbounds i32, i32* %1739, i64 -7
  %1749 = bitcast i32* %1748 to <4 x i32>*
  store <4 x i32> %1745, <4 x i32>* %1749, align 4, !alias.scope !186, !noalias !183
  br label %1750

1750:                                             ; preds = %1729, %1732
  %1751 = icmp eq i64 %1660, %1677
  br i1 %1751, label %1808, label %1752

1752:                                             ; preds = %1750, %1662, %1655
  %1753 = phi %"class.v8::internal::wasm::ValueType"* [ %1645, %1662 ], [ %1645, %1655 ], [ %1679, %1750 ]
  %1754 = phi %"class.v8::internal::wasm::ValueType"* [ %1653, %1662 ], [ %1653, %1655 ], [ %1681, %1750 ]
  %1755 = getelementptr %"class.v8::internal::wasm::ValueType", %"class.v8::internal::wasm::ValueType"* %1754, i64 -1
  %1756 = ptrtoint %"class.v8::internal::wasm::ValueType"* %1755 to i64
  %1757 = sub i64 %1756, %1652
  %1758 = lshr i64 %1757, 2
  %1759 = add nuw nsw i64 %1758, 1
  %1760 = and i64 %1759, 7
  %1761 = icmp eq i64 %1760, 0
  br i1 %1761, label %1773, label %1762

1762:                                             ; preds = %1752, %1762
  %1763 = phi %"class.v8::internal::wasm::ValueType"* [ %1770, %1762 ], [ %1753, %1752 ]
  %1764 = phi %"class.v8::internal::wasm::ValueType"* [ %1766, %1762 ], [ %1754, %1752 ]
  %1765 = phi i64 [ %1771, %1762 ], [ %1760, %1752 ]
  %1766 = getelementptr inbounds %"class.v8::internal::wasm::ValueType", %"class.v8::internal::wasm::ValueType"* %1764, i64 -1
  %1767 = getelementptr inbounds %"class.v8::internal::wasm::ValueType", %"class.v8::internal::wasm::ValueType"* %1766, i64 0, i32 0
  %1768 = getelementptr inbounds %"class.v8::internal::wasm::ValueType", %"class.v8::internal::wasm::ValueType"* %1763, i64 -1, i32 0
  %1769 = load i32, i32* %1767, align 4
  store i32 %1769, i32* %1768, align 4
  %1770 = getelementptr inbounds %"class.v8::internal::wasm::ValueType", %"class.v8::internal::wasm::ValueType"* %1763, i64 -1
  %1771 = add i64 %1765, -1
  %1772 = icmp eq i64 %1771, 0
  br i1 %1772, label %1773, label %1762, !llvm.loop !189

1773:                                             ; preds = %1762, %1752
  %1774 = phi %"class.v8::internal::wasm::ValueType"* [ undef, %1752 ], [ %1770, %1762 ]
  %1775 = phi %"class.v8::internal::wasm::ValueType"* [ %1753, %1752 ], [ %1770, %1762 ]
  %1776 = phi %"class.v8::internal::wasm::ValueType"* [ %1754, %1752 ], [ %1766, %1762 ]
  %1777 = icmp ult i64 %1757, 28
  br i1 %1777, label %1808, label %1778

1778:                                             ; preds = %1773, %1778
  %1779 = phi %"class.v8::internal::wasm::ValueType"* [ %1806, %1778 ], [ %1775, %1773 ]
  %1780 = phi %"class.v8::internal::wasm::ValueType"* [ %1802, %1778 ], [ %1776, %1773 ]
  %1781 = getelementptr inbounds %"class.v8::internal::wasm::ValueType", %"class.v8::internal::wasm::ValueType"* %1780, i64 -1, i32 0
  %1782 = getelementptr inbounds %"class.v8::internal::wasm::ValueType", %"class.v8::internal::wasm::ValueType"* %1779, i64 -1, i32 0
  %1783 = load i32, i32* %1781, align 4
  store i32 %1783, i32* %1782, align 4
  %1784 = getelementptr inbounds %"class.v8::internal::wasm::ValueType", %"class.v8::internal::wasm::ValueType"* %1780, i64 -2, i32 0
  %1785 = getelementptr inbounds %"class.v8::internal::wasm::ValueType", %"class.v8::internal::wasm::ValueType"* %1779, i64 -2, i32 0
  %1786 = load i32, i32* %1784, align 4
  store i32 %1786, i32* %1785, align 4
  %1787 = getelementptr inbounds %"class.v8::internal::wasm::ValueType", %"class.v8::internal::wasm::ValueType"* %1780, i64 -3, i32 0
  %1788 = getelementptr inbounds %"class.v8::internal::wasm::ValueType", %"class.v8::internal::wasm::ValueType"* %1779, i64 -3, i32 0
  %1789 = load i32, i32* %1787, align 4
  store i32 %1789, i32* %1788, align 4
  %1790 = getelementptr inbounds %"class.v8::internal::wasm::ValueType", %"class.v8::internal::wasm::ValueType"* %1780, i64 -4, i32 0
  %1791 = getelementptr inbounds %"class.v8::internal::wasm::ValueType", %"class.v8::internal::wasm::ValueType"* %1779, i64 -4, i32 0
  %1792 = load i32, i32* %1790, align 4
  store i32 %1792, i32* %1791, align 4
  %1793 = getelementptr inbounds %"class.v8::internal::wasm::ValueType", %"class.v8::internal::wasm::ValueType"* %1780, i64 -5, i32 0
  %1794 = getelementptr inbounds %"class.v8::internal::wasm::ValueType", %"class.v8::internal::wasm::ValueType"* %1779, i64 -5, i32 0
  %1795 = load i32, i32* %1793, align 4
  store i32 %1795, i32* %1794, align 4
  %1796 = getelementptr inbounds %"class.v8::internal::wasm::ValueType", %"class.v8::internal::wasm::ValueType"* %1780, i64 -6, i32 0
  %1797 = getelementptr inbounds %"class.v8::internal::wasm::ValueType", %"class.v8::internal::wasm::ValueType"* %1779, i64 -6, i32 0
  %1798 = load i32, i32* %1796, align 4
  store i32 %1798, i32* %1797, align 4
  %1799 = getelementptr inbounds %"class.v8::internal::wasm::ValueType", %"class.v8::internal::wasm::ValueType"* %1780, i64 -7, i32 0
  %1800 = getelementptr inbounds %"class.v8::internal::wasm::ValueType", %"class.v8::internal::wasm::ValueType"* %1779, i64 -7, i32 0
  %1801 = load i32, i32* %1799, align 4
  store i32 %1801, i32* %1800, align 4
  %1802 = getelementptr inbounds %"class.v8::internal::wasm::ValueType", %"class.v8::internal::wasm::ValueType"* %1780, i64 -8
  %1803 = getelementptr inbounds %"class.v8::internal::wasm::ValueType", %"class.v8::internal::wasm::ValueType"* %1802, i64 0, i32 0
  %1804 = getelementptr inbounds %"class.v8::internal::wasm::ValueType", %"class.v8::internal::wasm::ValueType"* %1779, i64 -8, i32 0
  %1805 = load i32, i32* %1803, align 4
  store i32 %1805, i32* %1804, align 4
  %1806 = getelementptr inbounds %"class.v8::internal::wasm::ValueType", %"class.v8::internal::wasm::ValueType"* %1779, i64 -8
  %1807 = icmp eq %"class.v8::internal::wasm::ValueType"* %1802, %1651
  br i1 %1807, label %1808, label %1778, !llvm.loop !190

1808:                                             ; preds = %1773, %1778, %1750, %1642
  %1809 = phi %"class.v8::internal::wasm::ValueType"* [ %1645, %1642 ], [ %1679, %1750 ], [ %1774, %1773 ], [ %1806, %1778 ]
  %1810 = ptrtoint %"class.v8::internal::wasm::ValueType"* %1809 to i64
  store i64 %1810, i64* %17, align 8
  store i64 %1650, i64* %16, align 8
  store i64 %1647, i64* %19, align 8
  br label %1811

1811:                                             ; preds = %1601, %1808
  %1812 = sub nsw i32 0, %1583
  %1813 = select i1 %1338, i32 %1812, i32 %1583
  %1814 = sitofp i32 %1813 to float
  br label %1818

1815:                                             ; preds = %1336
  store i8 1, i8* %31, align 4
  store i8* getelementptr inbounds ([32 x i8], [32 x i8]* @.str.45, i64 0, i64 0), i8** %32, align 8
  %1816 = load i64, i64* %33, align 8
  %1817 = trunc i64 %1816 to i32
  store i32 %1817, i32* %34, align 8
  br label %2309

1818:                                             ; preds = %1580, %1579, %1577, %1574, %1572, %1811
  %1819 = phi float [ %1814, %1811 ], [ 0x7FF0000000000000, %1574 ], [ 0xFFF0000000000000, %1579 ], [ %1581, %1580 ], [ 0x47EFFFFFE0000000, %1572 ], [ 0xC7EFFFFFE0000000, %1577 ]
  %1820 = phi i32* [ %1596, %1811 ], [ %1348, %1574 ], [ %1348, %1579 ], [ %1348, %1580 ], [ %1348, %1572 ], [ %1348, %1577 ]
  %1821 = load %"class.v8::internal::wasm::WasmFunctionBuilder"*, %"class.v8::internal::wasm::WasmFunctionBuilder"** %22, align 8
  tail call void @_ZN2v88internal4wasm19WasmFunctionBuilder12EmitF32ConstEf(%"class.v8::internal::wasm::WasmFunctionBuilder"* %1821, float %1819) #12
  %1822 = load %"class.v8::internal::wasm::WasmFunctionBuilder"*, %"class.v8::internal::wasm::WasmFunctionBuilder"** %22, align 8
  %1823 = load i32, i32* %1820, align 4
  tail call void @_ZN2v88internal4wasm19WasmFunctionBuilder12EmitSetLocalEj(%"class.v8::internal::wasm::WasmFunctionBuilder"* %1822, i32 %1823) #12
  %1824 = load i32, i32* %4, align 8
  %1825 = icmp eq i32 %1824, 41
  br i1 %1825, label %1829, label %1826

1826:                                             ; preds = %1818
  store i8 1, i8* %31, align 4
  store i8* getelementptr inbounds ([17 x i8], [17 x i8]* @.str.3, i64 0, i64 0), i8** %32, align 8
  %1827 = load i64, i64* %33, align 8
  %1828 = trunc i64 %1827 to i32
  store i32 %1828, i32* %34, align 8
  br label %2309

1829:                                             ; preds = %1818
  tail call void @_ZN2v88internal12AsmJsScanner4NextEv(%"class.v8::internal::AsmJsScanner"* %8) #12
  br label %2293

1830:                                             ; preds = %1320
  store i8 1, i8* %31, align 4
  store i8* getelementptr inbounds ([32 x i8], [32 x i8]* @.str.48, i64 0, i64 0), i8** %32, align 8
  %1831 = load i64, i64* %33, align 8
  %1832 = trunc i64 %1831 to i32
  store i32 %1832, i32* %34, align 8
  br label %2309

1833:                                             ; preds = %578
  switch i32 %108, label %2290 [
    i32 -4, label %1834
    i32 -3, label %2062
  ]

1834:                                             ; preds = %1833
  %1835 = load double, double* %23, align 8
  tail call void @_ZN2v88internal12AsmJsScanner4NextEv(%"class.v8::internal::AsmJsScanner"* %8) #12
  store i32 1, i32* %95, align 8
  %1836 = getelementptr inbounds %"struct.v8::internal::wasm::AsmJsParser::VarInfo", %"struct.v8::internal::wasm::AsmJsParser::VarInfo"* %94, i64 0, i32 0
  store %"class.v8::internal::wasm::AsmType"* inttoptr (i64 237 to %"class.v8::internal::wasm::AsmType"*), %"class.v8::internal::wasm::AsmType"** %1836, align 8
  %1837 = load i64, i64* %16, align 8
  %1838 = load i64, i64* %17, align 8
  %1839 = sub i64 %1837, %1838
  %1840 = lshr exact i64 %1839, 2
  %1841 = add i64 %1840, %1
  %1842 = trunc i64 %1841 to i32
  %1843 = getelementptr inbounds %"struct.v8::internal::wasm::AsmJsParser::VarInfo", %"struct.v8::internal::wasm::AsmJsParser::VarInfo"* %93, i64 %49, i32 4
  store i32 %1842, i32* %1843, align 4
  %1844 = load %"class.v8::internal::wasm::ValueType"*, %"class.v8::internal::wasm::ValueType"** %15, align 8
  %1845 = load %"class.v8::internal::wasm::ValueType"*, %"class.v8::internal::wasm::ValueType"** %18, align 8
  %1846 = icmp eq %"class.v8::internal::wasm::ValueType"* %1844, %1845
  %1847 = ptrtoint %"class.v8::internal::wasm::ValueType"* %1845 to i64
  br i1 %1846, label %1852, label %1848

1848:                                             ; preds = %1834
  %1849 = getelementptr inbounds %"class.v8::internal::wasm::ValueType", %"class.v8::internal::wasm::ValueType"* %1844, i64 0, i32 0
  store i32 4, i32* %1849, align 4
  %1850 = getelementptr inbounds %"class.v8::internal::wasm::ValueType", %"class.v8::internal::wasm::ValueType"* %1844, i64 1
  %1851 = ptrtoint %"class.v8::internal::wasm::ValueType"* %1850 to i64
  store i64 %1851, i64* %16, align 8
  br label %2058

1852:                                             ; preds = %1834
  %1853 = ptrtoint %"class.v8::internal::wasm::ValueType"* %1844 to i64
  %1854 = load i64, i64* %17, align 8
  %1855 = sub i64 %1853, %1854
  %1856 = ashr exact i64 %1855, 2
  %1857 = add nsw i64 %1856, 1
  %1858 = icmp ugt i64 %1857, 536870911
  br i1 %1858, label %1859, label %1861

1859:                                             ; preds = %1852
  %1860 = bitcast %"class.v8::internal::ZoneVector.164"* %2 to %"class.std::__1::__vector_base_common"*
  tail call void @_ZNKSt3__120__vector_base_commonILb1EE20__throw_length_errorEv(%"class.std::__1::__vector_base_common"* %1860) #13
  unreachable

1861:                                             ; preds = %1852
  %1862 = sub i64 %1847, %1854
  %1863 = ashr exact i64 %1862, 2
  %1864 = icmp ult i64 %1863, 268435455
  br i1 %1864, label %1865, label %1870

1865:                                             ; preds = %1861
  %1866 = ashr exact i64 %1862, 1
  %1867 = icmp ult i64 %1866, %1857
  %1868 = select i1 %1867, i64 %1857, i64 %1866
  %1869 = icmp eq i64 %1868, 0
  br i1 %1869, label %1889, label %1870

1870:                                             ; preds = %1865, %1861
  %1871 = phi i64 [ %1868, %1865 ], [ 536870911, %1861 ]
  %1872 = load %"class.v8::internal::Zone"*, %"class.v8::internal::Zone"** %20, align 8
  %1873 = shl i64 %1871, 2
  %1874 = add i64 %1873, 7
  %1875 = and i64 %1874, -8
  %1876 = getelementptr inbounds %"class.v8::internal::Zone", %"class.v8::internal::Zone"* %1872, i64 0, i32 2
  %1877 = load i64, i64* %1876, align 8
  %1878 = getelementptr inbounds %"class.v8::internal::Zone", %"class.v8::internal::Zone"* %1872, i64 0, i32 3
  %1879 = load i64, i64* %1878, align 8
  %1880 = sub i64 %1879, %1877
  %1881 = icmp ugt i64 %1875, %1880
  br i1 %1881, label %1882, label %1884, !prof !2

1882:                                             ; preds = %1870
  %1883 = tail call i64 @_ZN2v88internal4Zone9NewExpandEm(%"class.v8::internal::Zone"* %1872, i64 %1875) #12
  br label %1886

1884:                                             ; preds = %1870
  %1885 = add i64 %1875, %1877
  store i64 %1885, i64* %1876, align 8
  br label %1886

1886:                                             ; preds = %1884, %1882
  %1887 = phi i64 [ %1883, %1882 ], [ %1877, %1884 ]
  %1888 = inttoptr i64 %1887 to %"class.v8::internal::wasm::ValueType"*
  br label %1889

1889:                                             ; preds = %1886, %1865
  %1890 = phi i64 [ %1871, %1886 ], [ 0, %1865 ]
  %1891 = phi %"class.v8::internal::wasm::ValueType"* [ %1888, %1886 ], [ null, %1865 ]
  %1892 = getelementptr inbounds %"class.v8::internal::wasm::ValueType", %"class.v8::internal::wasm::ValueType"* %1891, i64 %1856
  %1893 = getelementptr inbounds %"class.v8::internal::wasm::ValueType", %"class.v8::internal::wasm::ValueType"* %1891, i64 %1890
  %1894 = ptrtoint %"class.v8::internal::wasm::ValueType"* %1893 to i64
  %1895 = getelementptr inbounds %"class.v8::internal::wasm::ValueType", %"class.v8::internal::wasm::ValueType"* %1892, i64 0, i32 0
  store i32 4, i32* %1895, align 4
  %1896 = getelementptr inbounds %"class.v8::internal::wasm::ValueType", %"class.v8::internal::wasm::ValueType"* %1892, i64 1
  %1897 = ptrtoint %"class.v8::internal::wasm::ValueType"* %1896 to i64
  %1898 = load %"class.v8::internal::wasm::ValueType"*, %"class.v8::internal::wasm::ValueType"** %21, align 8
  %1899 = ptrtoint %"class.v8::internal::wasm::ValueType"* %1898 to i64
  %1900 = load %"class.v8::internal::wasm::ValueType"*, %"class.v8::internal::wasm::ValueType"** %15, align 8
  %1901 = icmp eq %"class.v8::internal::wasm::ValueType"* %1900, %1898
  br i1 %1901, label %2055, label %1902

1902:                                             ; preds = %1889
  %1903 = getelementptr %"class.v8::internal::wasm::ValueType", %"class.v8::internal::wasm::ValueType"* %1900, i64 -1
  %1904 = ptrtoint %"class.v8::internal::wasm::ValueType"* %1903 to i64
  %1905 = sub i64 %1904, %1899
  %1906 = lshr i64 %1905, 2
  %1907 = add nuw nsw i64 %1906, 1
  %1908 = icmp ult i64 %1907, 8
  br i1 %1908, label %1999, label %1909

1909:                                             ; preds = %1902
  %1910 = getelementptr %"class.v8::internal::wasm::ValueType", %"class.v8::internal::wasm::ValueType"* %1891, i64 -1
  %1911 = getelementptr %"class.v8::internal::wasm::ValueType", %"class.v8::internal::wasm::ValueType"* %1900, i64 -1
  %1912 = ptrtoint %"class.v8::internal::wasm::ValueType"* %1911 to i64
  %1913 = sub i64 %1912, %1899
  %1914 = lshr i64 %1913, 2
  %1915 = sub nsw i64 %1856, %1914
  %1916 = getelementptr %"class.v8::internal::wasm::ValueType", %"class.v8::internal::wasm::ValueType"* %1910, i64 %1915
  %1917 = getelementptr %"class.v8::internal::wasm::ValueType", %"class.v8::internal::wasm::ValueType"* %1900, i64 -1
  %1918 = sub nsw i64 0, %1914
  %1919 = getelementptr %"class.v8::internal::wasm::ValueType", %"class.v8::internal::wasm::ValueType"* %1917, i64 %1918
  %1920 = icmp ult %"class.v8::internal::wasm::ValueType"* %1916, %1900
  %1921 = icmp ult %"class.v8::internal::wasm::ValueType"* %1919, %1892
  %1922 = and i1 %1920, %1921
  br i1 %1922, label %1999, label %1923

1923:                                             ; preds = %1909
  %1924 = and i64 %1907, 9223372036854775800
  %1925 = sub nsw i64 0, %1924
  %1926 = getelementptr %"class.v8::internal::wasm::ValueType", %"class.v8::internal::wasm::ValueType"* %1892, i64 %1925
  %1927 = sub nsw i64 0, %1924
  %1928 = getelementptr %"class.v8::internal::wasm::ValueType", %"class.v8::internal::wasm::ValueType"* %1900, i64 %1927
  %1929 = add nsw i64 %1924, -8
  %1930 = lshr exact i64 %1929, 3
  %1931 = add nuw nsw i64 %1930, 1
  %1932 = and i64 %1931, 1
  %1933 = icmp eq i64 %1929, 0
  br i1 %1933, label %1976, label %1934

1934:                                             ; preds = %1923
  %1935 = sub nuw nsw i64 %1931, %1932
  %1936 = getelementptr %"class.v8::internal::wasm::ValueType", %"class.v8::internal::wasm::ValueType"* %1900, i64 -1
  %1937 = getelementptr %"class.v8::internal::wasm::ValueType", %"class.v8::internal::wasm::ValueType"* %1900, i64 -1
  br label %1938

1938:                                             ; preds = %1938, %1934
  %1939 = phi i64 [ 0, %1934 ], [ %1973, %1938 ]
  %1940 = phi i64 [ %1935, %1934 ], [ %1974, %1938 ]
  %1941 = sub i64 0, %1939
  %1942 = getelementptr %"class.v8::internal::wasm::ValueType", %"class.v8::internal::wasm::ValueType"* %1892, i64 %1941
  %1943 = sub i64 0, %1939
  %1944 = getelementptr inbounds %"class.v8::internal::wasm::ValueType", %"class.v8::internal::wasm::ValueType"* %1936, i64 %1943
  %1945 = getelementptr inbounds %"class.v8::internal::wasm::ValueType", %"class.v8::internal::wasm::ValueType"* %1944, i64 0, i32 0
  %1946 = getelementptr inbounds %"class.v8::internal::wasm::ValueType", %"class.v8::internal::wasm::ValueType"* %1942, i64 -1, i32 0
  %1947 = getelementptr inbounds i32, i32* %1945, i64 -3
  %1948 = bitcast i32* %1947 to <4 x i32>*
  %1949 = load <4 x i32>, <4 x i32>* %1948, align 4, !alias.scope !191
  %1950 = getelementptr inbounds i32, i32* %1945, i64 -7
  %1951 = bitcast i32* %1950 to <4 x i32>*
  %1952 = load <4 x i32>, <4 x i32>* %1951, align 4, !alias.scope !191
  %1953 = getelementptr inbounds i32, i32* %1946, i64 -3
  %1954 = bitcast i32* %1953 to <4 x i32>*
  store <4 x i32> %1949, <4 x i32>* %1954, align 4, !alias.scope !194, !noalias !191
  %1955 = getelementptr inbounds i32, i32* %1946, i64 -7
  %1956 = bitcast i32* %1955 to <4 x i32>*
  store <4 x i32> %1952, <4 x i32>* %1956, align 4, !alias.scope !194, !noalias !191
  %1957 = sub nuw nsw i64 -8, %1939
  %1958 = getelementptr %"class.v8::internal::wasm::ValueType", %"class.v8::internal::wasm::ValueType"* %1892, i64 %1957
  %1959 = sub nuw nsw i64 -8, %1939
  %1960 = getelementptr inbounds %"class.v8::internal::wasm::ValueType", %"class.v8::internal::wasm::ValueType"* %1937, i64 %1959
  %1961 = getelementptr inbounds %"class.v8::internal::wasm::ValueType", %"class.v8::internal::wasm::ValueType"* %1960, i64 0, i32 0
  %1962 = getelementptr inbounds %"class.v8::internal::wasm::ValueType", %"class.v8::internal::wasm::ValueType"* %1958, i64 -1, i32 0
  %1963 = getelementptr inbounds i32, i32* %1961, i64 -3
  %1964 = bitcast i32* %1963 to <4 x i32>*
  %1965 = load <4 x i32>, <4 x i32>* %1964, align 4, !alias.scope !191
  %1966 = getelementptr inbounds i32, i32* %1961, i64 -7
  %1967 = bitcast i32* %1966 to <4 x i32>*
  %1968 = load <4 x i32>, <4 x i32>* %1967, align 4, !alias.scope !191
  %1969 = getelementptr inbounds i32, i32* %1962, i64 -3
  %1970 = bitcast i32* %1969 to <4 x i32>*
  store <4 x i32> %1965, <4 x i32>* %1970, align 4, !alias.scope !194, !noalias !191
  %1971 = getelementptr inbounds i32, i32* %1962, i64 -7
  %1972 = bitcast i32* %1971 to <4 x i32>*
  store <4 x i32> %1968, <4 x i32>* %1972, align 4, !alias.scope !194, !noalias !191
  %1973 = add i64 %1939, 16
  %1974 = add i64 %1940, -2
  %1975 = icmp eq i64 %1974, 0
  br i1 %1975, label %1976, label %1938, !llvm.loop !196

1976:                                             ; preds = %1938, %1923
  %1977 = phi i64 [ 0, %1923 ], [ %1973, %1938 ]
  %1978 = icmp eq i64 %1932, 0
  br i1 %1978, label %1997, label %1979

1979:                                             ; preds = %1976
  %1980 = sub i64 0, %1977
  %1981 = getelementptr %"class.v8::internal::wasm::ValueType", %"class.v8::internal::wasm::ValueType"* %1892, i64 %1980
  %1982 = sub i64 0, %1977
  %1983 = getelementptr %"class.v8::internal::wasm::ValueType", %"class.v8::internal::wasm::ValueType"* %1900, i64 -1
  %1984 = getelementptr inbounds %"class.v8::internal::wasm::ValueType", %"class.v8::internal::wasm::ValueType"* %1983, i64 %1982
  %1985 = getelementptr inbounds %"class.v8::internal::wasm::ValueType", %"class.v8::internal::wasm::ValueType"* %1984, i64 0, i32 0
  %1986 = getelementptr inbounds %"class.v8::internal::wasm::ValueType", %"class.v8::internal::wasm::ValueType"* %1981, i64 -1, i32 0
  %1987 = getelementptr inbounds i32, i32* %1985, i64 -3
  %1988 = bitcast i32* %1987 to <4 x i32>*
  %1989 = load <4 x i32>, <4 x i32>* %1988, align 4, !alias.scope !191
  %1990 = getelementptr inbounds i32, i32* %1985, i64 -7
  %1991 = bitcast i32* %1990 to <4 x i32>*
  %1992 = load <4 x i32>, <4 x i32>* %1991, align 4, !alias.scope !191
  %1993 = getelementptr inbounds i32, i32* %1986, i64 -3
  %1994 = bitcast i32* %1993 to <4 x i32>*
  store <4 x i32> %1989, <4 x i32>* %1994, align 4, !alias.scope !194, !noalias !191
  %1995 = getelementptr inbounds i32, i32* %1986, i64 -7
  %1996 = bitcast i32* %1995 to <4 x i32>*
  store <4 x i32> %1992, <4 x i32>* %1996, align 4, !alias.scope !194, !noalias !191
  br label %1997

1997:                                             ; preds = %1976, %1979
  %1998 = icmp eq i64 %1907, %1924
  br i1 %1998, label %2055, label %1999

1999:                                             ; preds = %1997, %1909, %1902
  %2000 = phi %"class.v8::internal::wasm::ValueType"* [ %1892, %1909 ], [ %1892, %1902 ], [ %1926, %1997 ]
  %2001 = phi %"class.v8::internal::wasm::ValueType"* [ %1900, %1909 ], [ %1900, %1902 ], [ %1928, %1997 ]
  %2002 = getelementptr %"class.v8::internal::wasm::ValueType", %"class.v8::internal::wasm::ValueType"* %2001, i64 -1
  %2003 = ptrtoint %"class.v8::internal::wasm::ValueType"* %2002 to i64
  %2004 = sub i64 %2003, %1899
  %2005 = lshr i64 %2004, 2
  %2006 = add nuw nsw i64 %2005, 1
  %2007 = and i64 %2006, 7
  %2008 = icmp eq i64 %2007, 0
  br i1 %2008, label %2020, label %2009

2009:                                             ; preds = %1999, %2009
  %2010 = phi %"class.v8::internal::wasm::ValueType"* [ %2017, %2009 ], [ %2000, %1999 ]
  %2011 = phi %"class.v8::internal::wasm::ValueType"* [ %2013, %2009 ], [ %2001, %1999 ]
  %2012 = phi i64 [ %2018, %2009 ], [ %2007, %1999 ]
  %2013 = getelementptr inbounds %"class.v8::internal::wasm::ValueType", %"class.v8::internal::wasm::ValueType"* %2011, i64 -1
  %2014 = getelementptr inbounds %"class.v8::internal::wasm::ValueType", %"class.v8::internal::wasm::ValueType"* %2013, i64 0, i32 0
  %2015 = getelementptr inbounds %"class.v8::internal::wasm::ValueType", %"class.v8::internal::wasm::ValueType"* %2010, i64 -1, i32 0
  %2016 = load i32, i32* %2014, align 4
  store i32 %2016, i32* %2015, align 4
  %2017 = getelementptr inbounds %"class.v8::internal::wasm::ValueType", %"class.v8::internal::wasm::ValueType"* %2010, i64 -1
  %2018 = add i64 %2012, -1
  %2019 = icmp eq i64 %2018, 0
  br i1 %2019, label %2020, label %2009, !llvm.loop !197

2020:                                             ; preds = %2009, %1999
  %2021 = phi %"class.v8::internal::wasm::ValueType"* [ undef, %1999 ], [ %2017, %2009 ]
  %2022 = phi %"class.v8::internal::wasm::ValueType"* [ %2000, %1999 ], [ %2017, %2009 ]
  %2023 = phi %"class.v8::internal::wasm::ValueType"* [ %2001, %1999 ], [ %2013, %2009 ]
  %2024 = icmp ult i64 %2004, 28
  br i1 %2024, label %2055, label %2025

2025:                                             ; preds = %2020, %2025
  %2026 = phi %"class.v8::internal::wasm::ValueType"* [ %2053, %2025 ], [ %2022, %2020 ]
  %2027 = phi %"class.v8::internal::wasm::ValueType"* [ %2049, %2025 ], [ %2023, %2020 ]
  %2028 = getelementptr inbounds %"class.v8::internal::wasm::ValueType", %"class.v8::internal::wasm::ValueType"* %2027, i64 -1, i32 0
  %2029 = getelementptr inbounds %"class.v8::internal::wasm::ValueType", %"class.v8::internal::wasm::ValueType"* %2026, i64 -1, i32 0
  %2030 = load i32, i32* %2028, align 4
  store i32 %2030, i32* %2029, align 4
  %2031 = getelementptr inbounds %"class.v8::internal::wasm::ValueType", %"class.v8::internal::wasm::ValueType"* %2027, i64 -2, i32 0
  %2032 = getelementptr inbounds %"class.v8::internal::wasm::ValueType", %"class.v8::internal::wasm::ValueType"* %2026, i64 -2, i32 0
  %2033 = load i32, i32* %2031, align 4
  store i32 %2033, i32* %2032, align 4
  %2034 = getelementptr inbounds %"class.v8::internal::wasm::ValueType", %"class.v8::internal::wasm::ValueType"* %2027, i64 -3, i32 0
  %2035 = getelementptr inbounds %"class.v8::internal::wasm::ValueType", %"class.v8::internal::wasm::ValueType"* %2026, i64 -3, i32 0
  %2036 = load i32, i32* %2034, align 4
  store i32 %2036, i32* %2035, align 4
  %2037 = getelementptr inbounds %"class.v8::internal::wasm::ValueType", %"class.v8::internal::wasm::ValueType"* %2027, i64 -4, i32 0
  %2038 = getelementptr inbounds %"class.v8::internal::wasm::ValueType", %"class.v8::internal::wasm::ValueType"* %2026, i64 -4, i32 0
  %2039 = load i32, i32* %2037, align 4
  store i32 %2039, i32* %2038, align 4
  %2040 = getelementptr inbounds %"class.v8::internal::wasm::ValueType", %"class.v8::internal::wasm::ValueType"* %2027, i64 -5, i32 0
  %2041 = getelementptr inbounds %"class.v8::internal::wasm::ValueType", %"class.v8::internal::wasm::ValueType"* %2026, i64 -5, i32 0
  %2042 = load i32, i32* %2040, align 4
  store i32 %2042, i32* %2041, align 4
  %2043 = getelementptr inbounds %"class.v8::internal::wasm::ValueType", %"class.v8::internal::wasm::ValueType"* %2027, i64 -6, i32 0
  %2044 = getelementptr inbounds %"class.v8::internal::wasm::ValueType", %"class.v8::internal::wasm::ValueType"* %2026, i64 -6, i32 0
  %2045 = load i32, i32* %2043, align 4
  store i32 %2045, i32* %2044, align 4
  %2046 = getelementptr inbounds %"class.v8::internal::wasm::ValueType", %"class.v8::internal::wasm::ValueType"* %2027, i64 -7, i32 0
  %2047 = getelementptr inbounds %"class.v8::internal::wasm::ValueType", %"class.v8::internal::wasm::ValueType"* %2026, i64 -7, i32 0
  %2048 = load i32, i32* %2046, align 4
  store i32 %2048, i32* %2047, align 4
  %2049 = getelementptr inbounds %"class.v8::internal::wasm::ValueType", %"class.v8::internal::wasm::ValueType"* %2027, i64 -8
  %2050 = getelementptr inbounds %"class.v8::internal::wasm::ValueType", %"class.v8::internal::wasm::ValueType"* %2049, i64 0, i32 0
  %2051 = getelementptr inbounds %"class.v8::internal::wasm::ValueType", %"class.v8::internal::wasm::ValueType"* %2026, i64 -8, i32 0
  %2052 = load i32, i32* %2050, align 4
  store i32 %2052, i32* %2051, align 4
  %2053 = getelementptr inbounds %"class.v8::internal::wasm::ValueType", %"class.v8::internal::wasm::ValueType"* %2026, i64 -8
  %2054 = icmp eq %"class.v8::internal::wasm::ValueType"* %2049, %1898
  br i1 %2054, label %2055, label %2025, !llvm.loop !198

2055:                                             ; preds = %2020, %2025, %1997, %1889
  %2056 = phi %"class.v8::internal::wasm::ValueType"* [ %1892, %1889 ], [ %1926, %1997 ], [ %2021, %2020 ], [ %2053, %2025 ]
  %2057 = ptrtoint %"class.v8::internal::wasm::ValueType"* %2056 to i64
  store i64 %2057, i64* %17, align 8
  store i64 %1897, i64* %16, align 8
  store i64 %1894, i64* %19, align 8
  br label %2058

2058:                                             ; preds = %1848, %2055
  %2059 = load %"class.v8::internal::wasm::WasmFunctionBuilder"*, %"class.v8::internal::wasm::WasmFunctionBuilder"** %22, align 8
  tail call void @_ZN2v88internal4wasm19WasmFunctionBuilder12EmitF64ConstEd(%"class.v8::internal::wasm::WasmFunctionBuilder"* %2059, double %1835) #12
  %2060 = load %"class.v8::internal::wasm::WasmFunctionBuilder"*, %"class.v8::internal::wasm::WasmFunctionBuilder"** %22, align 8
  %2061 = load i32, i32* %1843, align 4
  tail call void @_ZN2v88internal4wasm19WasmFunctionBuilder12EmitSetLocalEj(%"class.v8::internal::wasm::WasmFunctionBuilder"* %2060, i32 %2061) #12
  br label %2293

2062:                                             ; preds = %1833
  %2063 = load i32, i32* %14, align 8
  tail call void @_ZN2v88internal12AsmJsScanner4NextEv(%"class.v8::internal::AsmJsScanner"* %8) #12
  store i32 1, i32* %95, align 8
  %2064 = getelementptr inbounds %"struct.v8::internal::wasm::AsmJsParser::VarInfo", %"struct.v8::internal::wasm::AsmJsParser::VarInfo"* %94, i64 0, i32 0
  store %"class.v8::internal::wasm::AsmType"* inttoptr (i64 769 to %"class.v8::internal::wasm::AsmType"*), %"class.v8::internal::wasm::AsmType"** %2064, align 8
  %2065 = load i64, i64* %16, align 8
  %2066 = load i64, i64* %17, align 8
  %2067 = sub i64 %2065, %2066
  %2068 = lshr exact i64 %2067, 2
  %2069 = add i64 %2068, %1
  %2070 = trunc i64 %2069 to i32
  %2071 = getelementptr inbounds %"struct.v8::internal::wasm::AsmJsParser::VarInfo", %"struct.v8::internal::wasm::AsmJsParser::VarInfo"* %93, i64 %49, i32 4
  store i32 %2070, i32* %2071, align 4
  %2072 = load %"class.v8::internal::wasm::ValueType"*, %"class.v8::internal::wasm::ValueType"** %15, align 8
  %2073 = load %"class.v8::internal::wasm::ValueType"*, %"class.v8::internal::wasm::ValueType"** %18, align 8
  %2074 = icmp eq %"class.v8::internal::wasm::ValueType"* %2072, %2073
  %2075 = ptrtoint %"class.v8::internal::wasm::ValueType"* %2073 to i64
  br i1 %2074, label %2080, label %2076

2076:                                             ; preds = %2062
  %2077 = getelementptr inbounds %"class.v8::internal::wasm::ValueType", %"class.v8::internal::wasm::ValueType"* %2072, i64 0, i32 0
  store i32 1, i32* %2077, align 4
  %2078 = getelementptr inbounds %"class.v8::internal::wasm::ValueType", %"class.v8::internal::wasm::ValueType"* %2072, i64 1
  %2079 = ptrtoint %"class.v8::internal::wasm::ValueType"* %2078 to i64
  store i64 %2079, i64* %16, align 8
  br label %2286

2080:                                             ; preds = %2062
  %2081 = ptrtoint %"class.v8::internal::wasm::ValueType"* %2072 to i64
  %2082 = load i64, i64* %17, align 8
  %2083 = sub i64 %2081, %2082
  %2084 = ashr exact i64 %2083, 2
  %2085 = add nsw i64 %2084, 1
  %2086 = icmp ugt i64 %2085, 536870911
  br i1 %2086, label %2087, label %2089

2087:                                             ; preds = %2080
  %2088 = bitcast %"class.v8::internal::ZoneVector.164"* %2 to %"class.std::__1::__vector_base_common"*
  tail call void @_ZNKSt3__120__vector_base_commonILb1EE20__throw_length_errorEv(%"class.std::__1::__vector_base_common"* %2088) #13
  unreachable

2089:                                             ; preds = %2080
  %2090 = sub i64 %2075, %2082
  %2091 = ashr exact i64 %2090, 2
  %2092 = icmp ult i64 %2091, 268435455
  br i1 %2092, label %2093, label %2098

2093:                                             ; preds = %2089
  %2094 = ashr exact i64 %2090, 1
  %2095 = icmp ult i64 %2094, %2085
  %2096 = select i1 %2095, i64 %2085, i64 %2094
  %2097 = icmp eq i64 %2096, 0
  br i1 %2097, label %2117, label %2098

2098:                                             ; preds = %2093, %2089
  %2099 = phi i64 [ %2096, %2093 ], [ 536870911, %2089 ]
  %2100 = load %"class.v8::internal::Zone"*, %"class.v8::internal::Zone"** %20, align 8
  %2101 = shl i64 %2099, 2
  %2102 = add i64 %2101, 7
  %2103 = and i64 %2102, -8
  %2104 = getelementptr inbounds %"class.v8::internal::Zone", %"class.v8::internal::Zone"* %2100, i64 0, i32 2
  %2105 = load i64, i64* %2104, align 8
  %2106 = getelementptr inbounds %"class.v8::internal::Zone", %"class.v8::internal::Zone"* %2100, i64 0, i32 3
  %2107 = load i64, i64* %2106, align 8
  %2108 = sub i64 %2107, %2105
  %2109 = icmp ugt i64 %2103, %2108
  br i1 %2109, label %2110, label %2112, !prof !2

2110:                                             ; preds = %2098
  %2111 = tail call i64 @_ZN2v88internal4Zone9NewExpandEm(%"class.v8::internal::Zone"* %2100, i64 %2103) #12
  br label %2114

2112:                                             ; preds = %2098
  %2113 = add i64 %2103, %2105
  store i64 %2113, i64* %2104, align 8
  br label %2114

2114:                                             ; preds = %2112, %2110
  %2115 = phi i64 [ %2111, %2110 ], [ %2105, %2112 ]
  %2116 = inttoptr i64 %2115 to %"class.v8::internal::wasm::ValueType"*
  br label %2117

2117:                                             ; preds = %2114, %2093
  %2118 = phi i64 [ %2099, %2114 ], [ 0, %2093 ]
  %2119 = phi %"class.v8::internal::wasm::ValueType"* [ %2116, %2114 ], [ null, %2093 ]
  %2120 = getelementptr inbounds %"class.v8::internal::wasm::ValueType", %"class.v8::internal::wasm::ValueType"* %2119, i64 %2084
  %2121 = getelementptr inbounds %"class.v8::internal::wasm::ValueType", %"class.v8::internal::wasm::ValueType"* %2119, i64 %2118
  %2122 = ptrtoint %"class.v8::internal::wasm::ValueType"* %2121 to i64
  %2123 = getelementptr inbounds %"class.v8::internal::wasm::ValueType", %"class.v8::internal::wasm::ValueType"* %2120, i64 0, i32 0
  store i32 1, i32* %2123, align 4
  %2124 = getelementptr inbounds %"class.v8::internal::wasm::ValueType", %"class.v8::internal::wasm::ValueType"* %2120, i64 1
  %2125 = ptrtoint %"class.v8::internal::wasm::ValueType"* %2124 to i64
  %2126 = load %"class.v8::internal::wasm::ValueType"*, %"class.v8::internal::wasm::ValueType"** %21, align 8
  %2127 = ptrtoint %"class.v8::internal::wasm::ValueType"* %2126 to i64
  %2128 = load %"class.v8::internal::wasm::ValueType"*, %"class.v8::internal::wasm::ValueType"** %15, align 8
  %2129 = icmp eq %"class.v8::internal::wasm::ValueType"* %2128, %2126
  br i1 %2129, label %2283, label %2130

2130:                                             ; preds = %2117
  %2131 = getelementptr %"class.v8::internal::wasm::ValueType", %"class.v8::internal::wasm::ValueType"* %2128, i64 -1
  %2132 = ptrtoint %"class.v8::internal::wasm::ValueType"* %2131 to i64
  %2133 = sub i64 %2132, %2127
  %2134 = lshr i64 %2133, 2
  %2135 = add nuw nsw i64 %2134, 1
  %2136 = icmp ult i64 %2135, 8
  br i1 %2136, label %2227, label %2137

2137:                                             ; preds = %2130
  %2138 = getelementptr %"class.v8::internal::wasm::ValueType", %"class.v8::internal::wasm::ValueType"* %2119, i64 -1
  %2139 = getelementptr %"class.v8::internal::wasm::ValueType", %"class.v8::internal::wasm::ValueType"* %2128, i64 -1
  %2140 = ptrtoint %"class.v8::internal::wasm::ValueType"* %2139 to i64
  %2141 = sub i64 %2140, %2127
  %2142 = lshr i64 %2141, 2
  %2143 = sub nsw i64 %2084, %2142
  %2144 = getelementptr %"class.v8::internal::wasm::ValueType", %"class.v8::internal::wasm::ValueType"* %2138, i64 %2143
  %2145 = getelementptr %"class.v8::internal::wasm::ValueType", %"class.v8::internal::wasm::ValueType"* %2128, i64 -1
  %2146 = sub nsw i64 0, %2142
  %2147 = getelementptr %"class.v8::internal::wasm::ValueType", %"class.v8::internal::wasm::ValueType"* %2145, i64 %2146
  %2148 = icmp ult %"class.v8::internal::wasm::ValueType"* %2144, %2128
  %2149 = icmp ult %"class.v8::internal::wasm::ValueType"* %2147, %2120
  %2150 = and i1 %2148, %2149
  br i1 %2150, label %2227, label %2151

2151:                                             ; preds = %2137
  %2152 = and i64 %2135, 9223372036854775800
  %2153 = sub nsw i64 0, %2152
  %2154 = getelementptr %"class.v8::internal::wasm::ValueType", %"class.v8::internal::wasm::ValueType"* %2120, i64 %2153
  %2155 = sub nsw i64 0, %2152
  %2156 = getelementptr %"class.v8::internal::wasm::ValueType", %"class.v8::internal::wasm::ValueType"* %2128, i64 %2155
  %2157 = add nsw i64 %2152, -8
  %2158 = lshr exact i64 %2157, 3
  %2159 = add nuw nsw i64 %2158, 1
  %2160 = and i64 %2159, 1
  %2161 = icmp eq i64 %2157, 0
  br i1 %2161, label %2204, label %2162

2162:                                             ; preds = %2151
  %2163 = sub nuw nsw i64 %2159, %2160
  %2164 = getelementptr %"class.v8::internal::wasm::ValueType", %"class.v8::internal::wasm::ValueType"* %2128, i64 -1
  %2165 = getelementptr %"class.v8::internal::wasm::ValueType", %"class.v8::internal::wasm::ValueType"* %2128, i64 -1
  br label %2166

2166:                                             ; preds = %2166, %2162
  %2167 = phi i64 [ 0, %2162 ], [ %2201, %2166 ]
  %2168 = phi i64 [ %2163, %2162 ], [ %2202, %2166 ]
  %2169 = sub i64 0, %2167
  %2170 = getelementptr %"class.v8::internal::wasm::ValueType", %"class.v8::internal::wasm::ValueType"* %2120, i64 %2169
  %2171 = sub i64 0, %2167
  %2172 = getelementptr inbounds %"class.v8::internal::wasm::ValueType", %"class.v8::internal::wasm::ValueType"* %2164, i64 %2171
  %2173 = getelementptr inbounds %"class.v8::internal::wasm::ValueType", %"class.v8::internal::wasm::ValueType"* %2172, i64 0, i32 0
  %2174 = getelementptr inbounds %"class.v8::internal::wasm::ValueType", %"class.v8::internal::wasm::ValueType"* %2170, i64 -1, i32 0
  %2175 = getelementptr inbounds i32, i32* %2173, i64 -3
  %2176 = bitcast i32* %2175 to <4 x i32>*
  %2177 = load <4 x i32>, <4 x i32>* %2176, align 4, !alias.scope !199
  %2178 = getelementptr inbounds i32, i32* %2173, i64 -7
  %2179 = bitcast i32* %2178 to <4 x i32>*
  %2180 = load <4 x i32>, <4 x i32>* %2179, align 4, !alias.scope !199
  %2181 = getelementptr inbounds i32, i32* %2174, i64 -3
  %2182 = bitcast i32* %2181 to <4 x i32>*
  store <4 x i32> %2177, <4 x i32>* %2182, align 4, !alias.scope !202, !noalias !199
  %2183 = getelementptr inbounds i32, i32* %2174, i64 -7
  %2184 = bitcast i32* %2183 to <4 x i32>*
  store <4 x i32> %2180, <4 x i32>* %2184, align 4, !alias.scope !202, !noalias !199
  %2185 = sub nuw nsw i64 -8, %2167
  %2186 = getelementptr %"class.v8::internal::wasm::ValueType", %"class.v8::internal::wasm::ValueType"* %2120, i64 %2185
  %2187 = sub nuw nsw i64 -8, %2167
  %2188 = getelementptr inbounds %"class.v8::internal::wasm::ValueType", %"class.v8::internal::wasm::ValueType"* %2165, i64 %2187
  %2189 = getelementptr inbounds %"class.v8::internal::wasm::ValueType", %"class.v8::internal::wasm::ValueType"* %2188, i64 0, i32 0
  %2190 = getelementptr inbounds %"class.v8::internal::wasm::ValueType", %"class.v8::internal::wasm::ValueType"* %2186, i64 -1, i32 0
  %2191 = getelementptr inbounds i32, i32* %2189, i64 -3
  %2192 = bitcast i32* %2191 to <4 x i32>*
  %2193 = load <4 x i32>, <4 x i32>* %2192, align 4, !alias.scope !199
  %2194 = getelementptr inbounds i32, i32* %2189, i64 -7
  %2195 = bitcast i32* %2194 to <4 x i32>*
  %2196 = load <4 x i32>, <4 x i32>* %2195, align 4, !alias.scope !199
  %2197 = getelementptr inbounds i32, i32* %2190, i64 -3
  %2198 = bitcast i32* %2197 to <4 x i32>*
  store <4 x i32> %2193, <4 x i32>* %2198, align 4, !alias.scope !202, !noalias !199
  %2199 = getelementptr inbounds i32, i32* %2190, i64 -7
  %2200 = bitcast i32* %2199 to <4 x i32>*
  store <4 x i32> %2196, <4 x i32>* %2200, align 4, !alias.scope !202, !noalias !199
  %2201 = add i64 %2167, 16
  %2202 = add i64 %2168, -2
  %2203 = icmp eq i64 %2202, 0
  br i1 %2203, label %2204, label %2166, !llvm.loop !204

2204:                                             ; preds = %2166, %2151
  %2205 = phi i64 [ 0, %2151 ], [ %2201, %2166 ]
  %2206 = icmp eq i64 %2160, 0
  br i1 %2206, label %2225, label %2207

2207:                                             ; preds = %2204
  %2208 = sub i64 0, %2205
  %2209 = getelementptr %"class.v8::internal::wasm::ValueType", %"class.v8::internal::wasm::ValueType"* %2120, i64 %2208
  %2210 = sub i64 0, %2205
  %2211 = getelementptr %"class.v8::internal::wasm::ValueType", %"class.v8::internal::wasm::ValueType"* %2128, i64 -1
  %2212 = getelementptr inbounds %"class.v8::internal::wasm::ValueType", %"class.v8::internal::wasm::ValueType"* %2211, i64 %2210
  %2213 = getelementptr inbounds %"class.v8::internal::wasm::ValueType", %"class.v8::internal::wasm::ValueType"* %2212, i64 0, i32 0
  %2214 = getelementptr inbounds %"class.v8::internal::wasm::ValueType", %"class.v8::internal::wasm::ValueType"* %2209, i64 -1, i32 0
  %2215 = getelementptr inbounds i32, i32* %2213, i64 -3
  %2216 = bitcast i32* %2215 to <4 x i32>*
  %2217 = load <4 x i32>, <4 x i32>* %2216, align 4, !alias.scope !199
  %2218 = getelementptr inbounds i32, i32* %2213, i64 -7
  %2219 = bitcast i32* %2218 to <4 x i32>*
  %2220 = load <4 x i32>, <4 x i32>* %2219, align 4, !alias.scope !199
  %2221 = getelementptr inbounds i32, i32* %2214, i64 -3
  %2222 = bitcast i32* %2221 to <4 x i32>*
  store <4 x i32> %2217, <4 x i32>* %2222, align 4, !alias.scope !202, !noalias !199
  %2223 = getelementptr inbounds i32, i32* %2214, i64 -7
  %2224 = bitcast i32* %2223 to <4 x i32>*
  store <4 x i32> %2220, <4 x i32>* %2224, align 4, !alias.scope !202, !noalias !199
  br label %2225

2225:                                             ; preds = %2204, %2207
  %2226 = icmp eq i64 %2135, %2152
  br i1 %2226, label %2283, label %2227

2227:                                             ; preds = %2225, %2137, %2130
  %2228 = phi %"class.v8::internal::wasm::ValueType"* [ %2120, %2137 ], [ %2120, %2130 ], [ %2154, %2225 ]
  %2229 = phi %"class.v8::internal::wasm::ValueType"* [ %2128, %2137 ], [ %2128, %2130 ], [ %2156, %2225 ]
  %2230 = getelementptr %"class.v8::internal::wasm::ValueType", %"class.v8::internal::wasm::ValueType"* %2229, i64 -1
  %2231 = ptrtoint %"class.v8::internal::wasm::ValueType"* %2230 to i64
  %2232 = sub i64 %2231, %2127
  %2233 = lshr i64 %2232, 2
  %2234 = add nuw nsw i64 %2233, 1
  %2235 = and i64 %2234, 7
  %2236 = icmp eq i64 %2235, 0
  br i1 %2236, label %2248, label %2237

2237:                                             ; preds = %2227, %2237
  %2238 = phi %"class.v8::internal::wasm::ValueType"* [ %2245, %2237 ], [ %2228, %2227 ]
  %2239 = phi %"class.v8::internal::wasm::ValueType"* [ %2241, %2237 ], [ %2229, %2227 ]
  %2240 = phi i64 [ %2246, %2237 ], [ %2235, %2227 ]
  %2241 = getelementptr inbounds %"class.v8::internal::wasm::ValueType", %"class.v8::internal::wasm::ValueType"* %2239, i64 -1
  %2242 = getelementptr inbounds %"class.v8::internal::wasm::ValueType", %"class.v8::internal::wasm::ValueType"* %2241, i64 0, i32 0
  %2243 = getelementptr inbounds %"class.v8::internal::wasm::ValueType", %"class.v8::internal::wasm::ValueType"* %2238, i64 -1, i32 0
  %2244 = load i32, i32* %2242, align 4
  store i32 %2244, i32* %2243, align 4
  %2245 = getelementptr inbounds %"class.v8::internal::wasm::ValueType", %"class.v8::internal::wasm::ValueType"* %2238, i64 -1
  %2246 = add i64 %2240, -1
  %2247 = icmp eq i64 %2246, 0
  br i1 %2247, label %2248, label %2237, !llvm.loop !205

2248:                                             ; preds = %2237, %2227
  %2249 = phi %"class.v8::internal::wasm::ValueType"* [ undef, %2227 ], [ %2245, %2237 ]
  %2250 = phi %"class.v8::internal::wasm::ValueType"* [ %2228, %2227 ], [ %2245, %2237 ]
  %2251 = phi %"class.v8::internal::wasm::ValueType"* [ %2229, %2227 ], [ %2241, %2237 ]
  %2252 = icmp ult i64 %2232, 28
  br i1 %2252, label %2283, label %2253

2253:                                             ; preds = %2248, %2253
  %2254 = phi %"class.v8::internal::wasm::ValueType"* [ %2281, %2253 ], [ %2250, %2248 ]
  %2255 = phi %"class.v8::internal::wasm::ValueType"* [ %2277, %2253 ], [ %2251, %2248 ]
  %2256 = getelementptr inbounds %"class.v8::internal::wasm::ValueType", %"class.v8::internal::wasm::ValueType"* %2255, i64 -1, i32 0
  %2257 = getelementptr inbounds %"class.v8::internal::wasm::ValueType", %"class.v8::internal::wasm::ValueType"* %2254, i64 -1, i32 0
  %2258 = load i32, i32* %2256, align 4
  store i32 %2258, i32* %2257, align 4
  %2259 = getelementptr inbounds %"class.v8::internal::wasm::ValueType", %"class.v8::internal::wasm::ValueType"* %2255, i64 -2, i32 0
  %2260 = getelementptr inbounds %"class.v8::internal::wasm::ValueType", %"class.v8::internal::wasm::ValueType"* %2254, i64 -2, i32 0
  %2261 = load i32, i32* %2259, align 4
  store i32 %2261, i32* %2260, align 4
  %2262 = getelementptr inbounds %"class.v8::internal::wasm::ValueType", %"class.v8::internal::wasm::ValueType"* %2255, i64 -3, i32 0
  %2263 = getelementptr inbounds %"class.v8::internal::wasm::ValueType", %"class.v8::internal::wasm::ValueType"* %2254, i64 -3, i32 0
  %2264 = load i32, i32* %2262, align 4
  store i32 %2264, i32* %2263, align 4
  %2265 = getelementptr inbounds %"class.v8::internal::wasm::ValueType", %"class.v8::internal::wasm::ValueType"* %2255, i64 -4, i32 0
  %2266 = getelementptr inbounds %"class.v8::internal::wasm::ValueType", %"class.v8::internal::wasm::ValueType"* %2254, i64 -4, i32 0
  %2267 = load i32, i32* %2265, align 4
  store i32 %2267, i32* %2266, align 4
  %2268 = getelementptr inbounds %"class.v8::internal::wasm::ValueType", %"class.v8::internal::wasm::ValueType"* %2255, i64 -5, i32 0
  %2269 = getelementptr inbounds %"class.v8::internal::wasm::ValueType", %"class.v8::internal::wasm::ValueType"* %2254, i64 -5, i32 0
  %2270 = load i32, i32* %2268, align 4
  store i32 %2270, i32* %2269, align 4
  %2271 = getelementptr inbounds %"class.v8::internal::wasm::ValueType", %"class.v8::internal::wasm::ValueType"* %2255, i64 -6, i32 0
  %2272 = getelementptr inbounds %"class.v8::internal::wasm::ValueType", %"class.v8::internal::wasm::ValueType"* %2254, i64 -6, i32 0
  %2273 = load i32, i32* %2271, align 4
  store i32 %2273, i32* %2272, align 4
  %2274 = getelementptr inbounds %"class.v8::internal::wasm::ValueType", %"class.v8::internal::wasm::ValueType"* %2255, i64 -7, i32 0
  %2275 = getelementptr inbounds %"class.v8::internal::wasm::ValueType", %"class.v8::internal::wasm::ValueType"* %2254, i64 -7, i32 0
  %2276 = load i32, i32* %2274, align 4
  store i32 %2276, i32* %2275, align 4
  %2277 = getelementptr inbounds %"class.v8::internal::wasm::ValueType", %"class.v8::internal::wasm::ValueType"* %2255, i64 -8
  %2278 = getelementptr inbounds %"class.v8::internal::wasm::ValueType", %"class.v8::internal::wasm::ValueType"* %2277, i64 0, i32 0
  %2279 = getelementptr inbounds %"class.v8::internal::wasm::ValueType", %"class.v8::internal::wasm::ValueType"* %2254, i64 -8, i32 0
  %2280 = load i32, i32* %2278, align 4
  store i32 %2280, i32* %2279, align 4
  %2281 = getelementptr inbounds %"class.v8::internal::wasm::ValueType", %"class.v8::internal::wasm::ValueType"* %2254, i64 -8
  %2282 = icmp eq %"class.v8::internal::wasm::ValueType"* %2277, %2126
  br i1 %2282, label %2283, label %2253, !llvm.loop !206

2283:                                             ; preds = %2248, %2253, %2225, %2117
  %2284 = phi %"class.v8::internal::wasm::ValueType"* [ %2120, %2117 ], [ %2154, %2225 ], [ %2249, %2248 ], [ %2281, %2253 ]
  %2285 = ptrtoint %"class.v8::internal::wasm::ValueType"* %2284 to i64
  store i64 %2285, i64* %17, align 8
  store i64 %2125, i64* %16, align 8
  store i64 %2122, i64* %19, align 8
  br label %2286

2286:                                             ; preds = %2076, %2283
  %2287 = load %"class.v8::internal::wasm::WasmFunctionBuilder"*, %"class.v8::internal::wasm::WasmFunctionBuilder"** %22, align 8
  tail call void @_ZN2v88internal4wasm19WasmFunctionBuilder12EmitI32ConstEi(%"class.v8::internal::wasm::WasmFunctionBuilder"* %2287, i32 %2063) #12
  %2288 = load %"class.v8::internal::wasm::WasmFunctionBuilder"*, %"class.v8::internal::wasm::WasmFunctionBuilder"** %22, align 8
  %2289 = load i32, i32* %2071, align 4
  tail call void @_ZN2v88internal4wasm19WasmFunctionBuilder12EmitSetLocalEj(%"class.v8::internal::wasm::WasmFunctionBuilder"* %2288, i32 %2289) #12
  br label %2293

2290:                                             ; preds = %1833
  store i8 1, i8* %31, align 4
  store i8* getelementptr inbounds ([32 x i8], [32 x i8]* @.str.45, i64 0, i64 0), i8** %32, align 8
  %2291 = load i64, i64* %33, align 8
  %2292 = trunc i64 %2291 to i32
  store i32 %2292, i32* %34, align 8
  br label %2309

2293:                                             ; preds = %1829, %1311, %2286, %2058, %336, %570
  %2294 = load i32, i32* %4, align 8
  switch i32 %2294, label %2300 [
    i32 44, label %2295
    i32 59, label %2298
    i32 125, label %2309
  ]

2295:                                             ; preds = %2293
  store i8 1, i8* %9, align 8
  tail call void @_ZN2v88internal12AsmJsScanner4NextEv(%"class.v8::internal::AsmJsScanner"* %8) #12
  store i8 0, i8* %9, align 8
  %2296 = load i32, i32* %4, align 8
  %2297 = icmp slt i32 %2296, -9999
  br i1 %2297, label %45, label %42

2298:                                             ; preds = %2293
  tail call void @_ZN2v88internal12AsmJsScanner4NextEv(%"class.v8::internal::AsmJsScanner"* %8) #12
  %2299 = load i32, i32* %4, align 8
  br label %2306

2300:                                             ; preds = %2293
  %2301 = load i8, i8* %30, align 4, !range !69
  %2302 = icmp eq i8 %2301, 0
  br i1 %2302, label %2303, label %2306

2303:                                             ; preds = %2300
  store i8 1, i8* %31, align 4
  store i8* getelementptr inbounds ([11 x i8], [11 x i8]* @.str.1, i64 0, i64 0), i8** %32, align 8
  %2304 = load i64, i64* %33, align 8
  %2305 = trunc i64 %2304 to i32
  store i32 %2305, i32* %34, align 8
  br label %2306

2306:                                             ; preds = %2298, %2300, %2303
  %2307 = phi i32 [ %2299, %2298 ], [ %2294, %2300 ], [ %2294, %2303 ]
  %2308 = icmp eq i32 %2307, -9946
  br i1 %2308, label %39, label %2309

2309:                                             ; preds = %2306, %2293, %3, %1815, %1585, %1826, %1830, %1328, %1308, %640, %2290, %575, %344, %104, %98, %42
  ret void
}

; Function Attrs: nounwind ssp uwtable
define hidden void @_ZN2v88internal4wasm11AsmJsParser17ValidateStatementEv(%"class.v8::internal::wasm::AsmJsParser"*) local_unnamed_addr #0 align 2 {
  %2 = getelementptr inbounds %"class.v8::internal::wasm::AsmJsParser", %"class.v8::internal::wasm::AsmJsParser"* %0, i64 0, i32 34
  store %"class.v8::internal::wasm::AsmType"* null, %"class.v8::internal::wasm::AsmType"** %2, align 8
  %3 = getelementptr inbounds %"class.v8::internal::wasm::AsmJsParser", %"class.v8::internal::wasm::AsmJsParser"* %0, i64 0, i32 1, i32 1
  %4 = load i32, i32* %3, align 8
  switch i32 %4, label %97 [
    i32 123, label %5
    i32 59, label %18
    i32 -9950, label %42
    i32 -9948, label %55
    i32 -9945, label %68
    i32 -9955, label %69
    i32 -9952, label %70
    i32 -9960, label %71
    i32 -9957, label %84
  ]

5:                                                ; preds = %1
  %6 = tail call i64 @_ZN2v88internal23GetCurrentStackPositionEv() #12
  %7 = getelementptr inbounds %"class.v8::internal::wasm::AsmJsParser", %"class.v8::internal::wasm::AsmJsParser"* %0, i64 0, i32 5
  %8 = load i64, i64* %7, align 8
  %9 = icmp ult i64 %6, %8
  br i1 %9, label %10, label %17

10:                                               ; preds = %5
  %11 = getelementptr inbounds %"class.v8::internal::wasm::AsmJsParser", %"class.v8::internal::wasm::AsmJsParser"* %0, i64 0, i32 17
  store i8 1, i8* %11, align 4
  %12 = getelementptr inbounds %"class.v8::internal::wasm::AsmJsParser", %"class.v8::internal::wasm::AsmJsParser"* %0, i64 0, i32 18
  store i8* getelementptr inbounds ([44 x i8], [44 x i8]* @.str.2, i64 0, i64 0), i8** %12, align 8
  %13 = getelementptr inbounds %"class.v8::internal::wasm::AsmJsParser", %"class.v8::internal::wasm::AsmJsParser"* %0, i64 0, i32 1, i32 5
  %14 = load i64, i64* %13, align 8
  %15 = trunc i64 %14 to i32
  %16 = getelementptr inbounds %"class.v8::internal::wasm::AsmJsParser", %"class.v8::internal::wasm::AsmJsParser"* %0, i64 0, i32 19
  store i32 %15, i32* %16, align 8
  br label %121

17:                                               ; preds = %5
  tail call void @_ZN2v88internal4wasm11AsmJsParser5BlockEv(%"class.v8::internal::wasm::AsmJsParser"* %0)
  ret void

18:                                               ; preds = %1
  %19 = tail call i64 @_ZN2v88internal23GetCurrentStackPositionEv() #12
  %20 = getelementptr inbounds %"class.v8::internal::wasm::AsmJsParser", %"class.v8::internal::wasm::AsmJsParser"* %0, i64 0, i32 5
  %21 = load i64, i64* %20, align 8
  %22 = icmp ult i64 %19, %21
  br i1 %22, label %23, label %30

23:                                               ; preds = %18
  %24 = getelementptr inbounds %"class.v8::internal::wasm::AsmJsParser", %"class.v8::internal::wasm::AsmJsParser"* %0, i64 0, i32 17
  store i8 1, i8* %24, align 4
  %25 = getelementptr inbounds %"class.v8::internal::wasm::AsmJsParser", %"class.v8::internal::wasm::AsmJsParser"* %0, i64 0, i32 18
  store i8* getelementptr inbounds ([44 x i8], [44 x i8]* @.str.2, i64 0, i64 0), i8** %25, align 8
  %26 = getelementptr inbounds %"class.v8::internal::wasm::AsmJsParser", %"class.v8::internal::wasm::AsmJsParser"* %0, i64 0, i32 1, i32 5
  %27 = load i64, i64* %26, align 8
  %28 = trunc i64 %27 to i32
  %29 = getelementptr inbounds %"class.v8::internal::wasm::AsmJsParser", %"class.v8::internal::wasm::AsmJsParser"* %0, i64 0, i32 19
  store i32 %28, i32* %29, align 8
  br label %121

30:                                               ; preds = %18
  %31 = load i32, i32* %3, align 8
  %32 = icmp eq i32 %31, 59
  br i1 %32, label %40, label %33

33:                                               ; preds = %30
  %34 = getelementptr inbounds %"class.v8::internal::wasm::AsmJsParser", %"class.v8::internal::wasm::AsmJsParser"* %0, i64 0, i32 17
  store i8 1, i8* %34, align 4
  %35 = getelementptr inbounds %"class.v8::internal::wasm::AsmJsParser", %"class.v8::internal::wasm::AsmJsParser"* %0, i64 0, i32 18
  store i8* getelementptr inbounds ([17 x i8], [17 x i8]* @.str.3, i64 0, i64 0), i8** %35, align 8
  %36 = getelementptr inbounds %"class.v8::internal::wasm::AsmJsParser", %"class.v8::internal::wasm::AsmJsParser"* %0, i64 0, i32 1, i32 5
  %37 = load i64, i64* %36, align 8
  %38 = trunc i64 %37 to i32
  %39 = getelementptr inbounds %"class.v8::internal::wasm::AsmJsParser", %"class.v8::internal::wasm::AsmJsParser"* %0, i64 0, i32 19
  store i32 %38, i32* %39, align 8
  br label %121

40:                                               ; preds = %30
  %41 = getelementptr inbounds %"class.v8::internal::wasm::AsmJsParser", %"class.v8::internal::wasm::AsmJsParser"* %0, i64 0, i32 1
  tail call void @_ZN2v88internal12AsmJsScanner4NextEv(%"class.v8::internal::AsmJsScanner"* %41) #12
  br label %121

42:                                               ; preds = %1
  %43 = tail call i64 @_ZN2v88internal23GetCurrentStackPositionEv() #12
  %44 = getelementptr inbounds %"class.v8::internal::wasm::AsmJsParser", %"class.v8::internal::wasm::AsmJsParser"* %0, i64 0, i32 5
  %45 = load i64, i64* %44, align 8
  %46 = icmp ult i64 %43, %45
  br i1 %46, label %47, label %54

47:                                               ; preds = %42
  %48 = getelementptr inbounds %"class.v8::internal::wasm::AsmJsParser", %"class.v8::internal::wasm::AsmJsParser"* %0, i64 0, i32 17
  store i8 1, i8* %48, align 4
  %49 = getelementptr inbounds %"class.v8::internal::wasm::AsmJsParser", %"class.v8::internal::wasm::AsmJsParser"* %0, i64 0, i32 18
  store i8* getelementptr inbounds ([44 x i8], [44 x i8]* @.str.2, i64 0, i64 0), i8** %49, align 8
  %50 = getelementptr inbounds %"class.v8::internal::wasm::AsmJsParser", %"class.v8::internal::wasm::AsmJsParser"* %0, i64 0, i32 1, i32 5
  %51 = load i64, i64* %50, align 8
  %52 = trunc i64 %51 to i32
  %53 = getelementptr inbounds %"class.v8::internal::wasm::AsmJsParser", %"class.v8::internal::wasm::AsmJsParser"* %0, i64 0, i32 19
  store i32 %52, i32* %53, align 8
  br label %121

54:                                               ; preds = %42
  tail call void @_ZN2v88internal4wasm11AsmJsParser11IfStatementEv(%"class.v8::internal::wasm::AsmJsParser"* %0)
  br label %121

55:                                               ; preds = %1
  %56 = tail call i64 @_ZN2v88internal23GetCurrentStackPositionEv() #12
  %57 = getelementptr inbounds %"class.v8::internal::wasm::AsmJsParser", %"class.v8::internal::wasm::AsmJsParser"* %0, i64 0, i32 5
  %58 = load i64, i64* %57, align 8
  %59 = icmp ult i64 %56, %58
  br i1 %59, label %60, label %67

60:                                               ; preds = %55
  %61 = getelementptr inbounds %"class.v8::internal::wasm::AsmJsParser", %"class.v8::internal::wasm::AsmJsParser"* %0, i64 0, i32 17
  store i8 1, i8* %61, align 4
  %62 = getelementptr inbounds %"class.v8::internal::wasm::AsmJsParser", %"class.v8::internal::wasm::AsmJsParser"* %0, i64 0, i32 18
  store i8* getelementptr inbounds ([44 x i8], [44 x i8]* @.str.2, i64 0, i64 0), i8** %62, align 8
  %63 = getelementptr inbounds %"class.v8::internal::wasm::AsmJsParser", %"class.v8::internal::wasm::AsmJsParser"* %0, i64 0, i32 1, i32 5
  %64 = load i64, i64* %63, align 8
  %65 = trunc i64 %64 to i32
  %66 = getelementptr inbounds %"class.v8::internal::wasm::AsmJsParser", %"class.v8::internal::wasm::AsmJsParser"* %0, i64 0, i32 19
  store i32 %65, i32* %66, align 8
  br label %121

67:                                               ; preds = %55
  tail call void @_ZN2v88internal4wasm11AsmJsParser15ReturnStatementEv(%"class.v8::internal::wasm::AsmJsParser"* %0)
  br label %121

68:                                               ; preds = %1
  tail call void @_ZN2v88internal4wasm11AsmJsParser14WhileStatementEv(%"class.v8::internal::wasm::AsmJsParser"* %0) #12
  br label %121

69:                                               ; preds = %1
  tail call void @_ZN2v88internal4wasm11AsmJsParser11DoStatementEv(%"class.v8::internal::wasm::AsmJsParser"* %0) #12
  br label %121

70:                                               ; preds = %1
  tail call void @_ZN2v88internal4wasm11AsmJsParser12ForStatementEv(%"class.v8::internal::wasm::AsmJsParser"* %0) #12
  br label %121

71:                                               ; preds = %1
  %72 = tail call i64 @_ZN2v88internal23GetCurrentStackPositionEv() #12
  %73 = getelementptr inbounds %"class.v8::internal::wasm::AsmJsParser", %"class.v8::internal::wasm::AsmJsParser"* %0, i64 0, i32 5
  %74 = load i64, i64* %73, align 8
  %75 = icmp ult i64 %72, %74
  br i1 %75, label %76, label %83

76:                                               ; preds = %71
  %77 = getelementptr inbounds %"class.v8::internal::wasm::AsmJsParser", %"class.v8::internal::wasm::AsmJsParser"* %0, i64 0, i32 17
  store i8 1, i8* %77, align 4
  %78 = getelementptr inbounds %"class.v8::internal::wasm::AsmJsParser", %"class.v8::internal::wasm::AsmJsParser"* %0, i64 0, i32 18
  store i8* getelementptr inbounds ([44 x i8], [44 x i8]* @.str.2, i64 0, i64 0), i8** %78, align 8
  %79 = getelementptr inbounds %"class.v8::internal::wasm::AsmJsParser", %"class.v8::internal::wasm::AsmJsParser"* %0, i64 0, i32 1, i32 5
  %80 = load i64, i64* %79, align 8
  %81 = trunc i64 %80 to i32
  %82 = getelementptr inbounds %"class.v8::internal::wasm::AsmJsParser", %"class.v8::internal::wasm::AsmJsParser"* %0, i64 0, i32 19
  store i32 %81, i32* %82, align 8
  br label %121

83:                                               ; preds = %71
  tail call void @_ZN2v88internal4wasm11AsmJsParser14BreakStatementEv(%"class.v8::internal::wasm::AsmJsParser"* %0)
  br label %121

84:                                               ; preds = %1
  %85 = tail call i64 @_ZN2v88internal23GetCurrentStackPositionEv() #12
  %86 = getelementptr inbounds %"class.v8::internal::wasm::AsmJsParser", %"class.v8::internal::wasm::AsmJsParser"* %0, i64 0, i32 5
  %87 = load i64, i64* %86, align 8
  %88 = icmp ult i64 %85, %87
  br i1 %88, label %89, label %96

89:                                               ; preds = %84
  %90 = getelementptr inbounds %"class.v8::internal::wasm::AsmJsParser", %"class.v8::internal::wasm::AsmJsParser"* %0, i64 0, i32 17
  store i8 1, i8* %90, align 4
  %91 = getelementptr inbounds %"class.v8::internal::wasm::AsmJsParser", %"class.v8::internal::wasm::AsmJsParser"* %0, i64 0, i32 18
  store i8* getelementptr inbounds ([44 x i8], [44 x i8]* @.str.2, i64 0, i64 0), i8** %91, align 8
  %92 = getelementptr inbounds %"class.v8::internal::wasm::AsmJsParser", %"class.v8::internal::wasm::AsmJsParser"* %0, i64 0, i32 1, i32 5
  %93 = load i64, i64* %92, align 8
  %94 = trunc i64 %93 to i32
  %95 = getelementptr inbounds %"class.v8::internal::wasm::AsmJsParser", %"class.v8::internal::wasm::AsmJsParser"* %0, i64 0, i32 19
  store i32 %94, i32* %95, align 8
  br label %121

96:                                               ; preds = %84
  tail call void @_ZN2v88internal4wasm11AsmJsParser17ContinueStatementEv(%"class.v8::internal::wasm::AsmJsParser"* %0)
  br label %121

97:                                               ; preds = %1
  %98 = icmp eq i32 %4, -9947
  %99 = tail call i64 @_ZN2v88internal23GetCurrentStackPositionEv() #12
  %100 = getelementptr inbounds %"class.v8::internal::wasm::AsmJsParser", %"class.v8::internal::wasm::AsmJsParser"* %0, i64 0, i32 5
  %101 = load i64, i64* %100, align 8
  %102 = icmp ult i64 %99, %101
  br i1 %98, label %103, label %112

103:                                              ; preds = %97
  br i1 %102, label %104, label %111

104:                                              ; preds = %103
  %105 = getelementptr inbounds %"class.v8::internal::wasm::AsmJsParser", %"class.v8::internal::wasm::AsmJsParser"* %0, i64 0, i32 17
  store i8 1, i8* %105, align 4
  %106 = getelementptr inbounds %"class.v8::internal::wasm::AsmJsParser", %"class.v8::internal::wasm::AsmJsParser"* %0, i64 0, i32 18
  store i8* getelementptr inbounds ([44 x i8], [44 x i8]* @.str.2, i64 0, i64 0), i8** %106, align 8
  %107 = getelementptr inbounds %"class.v8::internal::wasm::AsmJsParser", %"class.v8::internal::wasm::AsmJsParser"* %0, i64 0, i32 1, i32 5
  %108 = load i64, i64* %107, align 8
  %109 = trunc i64 %108 to i32
  %110 = getelementptr inbounds %"class.v8::internal::wasm::AsmJsParser", %"class.v8::internal::wasm::AsmJsParser"* %0, i64 0, i32 19
  store i32 %109, i32* %110, align 8
  br label %121

111:                                              ; preds = %103
  tail call void @_ZN2v88internal4wasm11AsmJsParser15SwitchStatementEv(%"class.v8::internal::wasm::AsmJsParser"* %0)
  br label %121

112:                                              ; preds = %97
  br i1 %102, label %113, label %120

113:                                              ; preds = %112
  %114 = getelementptr inbounds %"class.v8::internal::wasm::AsmJsParser", %"class.v8::internal::wasm::AsmJsParser"* %0, i64 0, i32 17
  store i8 1, i8* %114, align 4
  %115 = getelementptr inbounds %"class.v8::internal::wasm::AsmJsParser", %"class.v8::internal::wasm::AsmJsParser"* %0, i64 0, i32 18
  store i8* getelementptr inbounds ([44 x i8], [44 x i8]* @.str.2, i64 0, i64 0), i8** %115, align 8
  %116 = getelementptr inbounds %"class.v8::internal::wasm::AsmJsParser", %"class.v8::internal::wasm::AsmJsParser"* %0, i64 0, i32 1, i32 5
  %117 = load i64, i64* %116, align 8
  %118 = trunc i64 %117 to i32
  %119 = getelementptr inbounds %"class.v8::internal::wasm::AsmJsParser", %"class.v8::internal::wasm::AsmJsParser"* %0, i64 0, i32 19
  store i32 %118, i32* %119, align 8
  br label %121

120:                                              ; preds = %112
  tail call void @_ZN2v88internal4wasm11AsmJsParser19ExpressionStatementEv(%"class.v8::internal::wasm::AsmJsParser"* %0)
  br label %121

121:                                              ; preds = %68, %70, %69, %40, %33, %120, %111, %96, %83, %67, %54, %10, %23, %47, %60, %76, %89, %104, %113
  ret void
}

declare i32 @_ZN2v88internal4wasm19WasmFunctionBuilder8AddLocalENS1_9ValueTypeE(%"class.v8::internal::wasm::WasmFunctionBuilder"*, i32) local_unnamed_addr #1

declare void @_ZN2v88internal12AsmJsScanner11ResetLocalsEv(%"class.v8::internal::AsmJsScanner"*) local_unnamed_addr #1

declare void @_ZN2v88internal4wasm19WasmFunctionBuilder12EmitF64ConstEd(%"class.v8::internal::wasm::WasmFunctionBuilder"*, double) local_unnamed_addr #1

declare void @_ZN2v88internal4wasm19WasmFunctionBuilder12EmitSetLocalEj(%"class.v8::internal::wasm::WasmFunctionBuilder"*, i32) local_unnamed_addr #1

declare void @_ZN2v88internal4wasm19WasmFunctionBuilder12EmitI32ConstEi(%"class.v8::internal::wasm::WasmFunctionBuilder"*, i32) local_unnamed_addr #1

declare void @_ZN2v88internal4wasm19WasmFunctionBuilder12EmitF32ConstEf(%"class.v8::internal::wasm::WasmFunctionBuilder"*, float) local_unnamed_addr #1

; Function Attrs: nounwind ssp uwtable
define hidden void @_ZN2v88internal4wasm11AsmJsParser5BlockEv(%"class.v8::internal::wasm::AsmJsParser"*) local_unnamed_addr #0 align 2 {
  %2 = getelementptr inbounds %"class.v8::internal::wasm::AsmJsParser", %"class.v8::internal::wasm::AsmJsParser"* %0, i64 0, i32 40
  %3 = load i32, i32* %2, align 4
  %4 = icmp ne i32 %3, 0
  br i1 %4, label %5, label %8

5:                                                ; preds = %1
  tail call void @_ZN2v88internal4wasm11AsmJsParser9BareBeginENS2_9BlockKindEi(%"class.v8::internal::wasm::AsmJsParser"* %0, i32 2, i32 %3)
  %6 = getelementptr inbounds %"class.v8::internal::wasm::AsmJsParser", %"class.v8::internal::wasm::AsmJsParser"* %0, i64 0, i32 3
  %7 = load %"class.v8::internal::wasm::WasmFunctionBuilder"*, %"class.v8::internal::wasm::WasmFunctionBuilder"** %6, align 8
  tail call void @_ZN2v88internal4wasm19WasmFunctionBuilder10EmitWithU8ENS1_10WasmOpcodeEh(%"class.v8::internal::wasm::WasmFunctionBuilder"* %7, i32 2, i8 zeroext 64) #12
  br label %8

8:                                                ; preds = %5, %1
  store i32 0, i32* %2, align 4
  %9 = getelementptr inbounds %"class.v8::internal::wasm::AsmJsParser", %"class.v8::internal::wasm::AsmJsParser"* %0, i64 0, i32 1
  %10 = getelementptr inbounds %"class.v8::internal::wasm::AsmJsParser", %"class.v8::internal::wasm::AsmJsParser"* %0, i64 0, i32 1, i32 1
  %11 = load i32, i32* %10, align 8
  %12 = icmp eq i32 %11, 123
  br i1 %12, label %20, label %13

13:                                               ; preds = %8
  %14 = getelementptr inbounds %"class.v8::internal::wasm::AsmJsParser", %"class.v8::internal::wasm::AsmJsParser"* %0, i64 0, i32 17
  store i8 1, i8* %14, align 4
  %15 = getelementptr inbounds %"class.v8::internal::wasm::AsmJsParser", %"class.v8::internal::wasm::AsmJsParser"* %0, i64 0, i32 18
  store i8* getelementptr inbounds ([17 x i8], [17 x i8]* @.str.3, i64 0, i64 0), i8** %15, align 8
  %16 = getelementptr inbounds %"class.v8::internal::wasm::AsmJsParser", %"class.v8::internal::wasm::AsmJsParser"* %0, i64 0, i32 1, i32 5
  %17 = load i64, i64* %16, align 8
  %18 = trunc i64 %17 to i32
  %19 = getelementptr inbounds %"class.v8::internal::wasm::AsmJsParser", %"class.v8::internal::wasm::AsmJsParser"* %0, i64 0, i32 19
  store i32 %18, i32* %19, align 8
  br label %57

20:                                               ; preds = %8
  tail call void @_ZN2v88internal12AsmJsScanner4NextEv(%"class.v8::internal::AsmJsScanner"* %9) #12
  %21 = getelementptr inbounds %"class.v8::internal::wasm::AsmJsParser", %"class.v8::internal::wasm::AsmJsParser"* %0, i64 0, i32 17
  %22 = getelementptr inbounds %"class.v8::internal::wasm::AsmJsParser", %"class.v8::internal::wasm::AsmJsParser"* %0, i64 0, i32 5
  %23 = load i8, i8* %21, align 4, !range !69
  %24 = icmp eq i8 %23, 0
  br label %25

25:                                               ; preds = %40, %20
  %26 = phi i1 [ true, %40 ], [ %24, %20 ]
  %27 = load i32, i32* %10, align 8
  %28 = icmp eq i32 %27, 125
  br i1 %26, label %29, label %43

29:                                               ; preds = %25
  br i1 %28, label %50, label %30

30:                                               ; preds = %29
  %31 = tail call i64 @_ZN2v88internal23GetCurrentStackPositionEv() #12
  %32 = load i64, i64* %22, align 8
  %33 = icmp ult i64 %31, %32
  br i1 %33, label %34, label %40

34:                                               ; preds = %30
  store i8 1, i8* %21, align 4
  %35 = getelementptr inbounds %"class.v8::internal::wasm::AsmJsParser", %"class.v8::internal::wasm::AsmJsParser"* %0, i64 0, i32 18
  store i8* getelementptr inbounds ([44 x i8], [44 x i8]* @.str.2, i64 0, i64 0), i8** %35, align 8
  %36 = getelementptr inbounds %"class.v8::internal::wasm::AsmJsParser", %"class.v8::internal::wasm::AsmJsParser"* %0, i64 0, i32 1, i32 5
  %37 = load i64, i64* %36, align 8
  %38 = trunc i64 %37 to i32
  %39 = getelementptr inbounds %"class.v8::internal::wasm::AsmJsParser", %"class.v8::internal::wasm::AsmJsParser"* %0, i64 0, i32 19
  store i32 %38, i32* %39, align 8
  br label %57

40:                                               ; preds = %30
  tail call void @_ZN2v88internal4wasm11AsmJsParser17ValidateStatementEv(%"class.v8::internal::wasm::AsmJsParser"* %0)
  %41 = load i8, i8* %21, align 4, !range !69
  %42 = icmp eq i8 %41, 0
  br i1 %42, label %25, label %57

43:                                               ; preds = %25
  br i1 %28, label %50, label %44

44:                                               ; preds = %43
  store i8 1, i8* %21, align 4
  %45 = getelementptr inbounds %"class.v8::internal::wasm::AsmJsParser", %"class.v8::internal::wasm::AsmJsParser"* %0, i64 0, i32 18
  store i8* getelementptr inbounds ([17 x i8], [17 x i8]* @.str.3, i64 0, i64 0), i8** %45, align 8
  %46 = getelementptr inbounds %"class.v8::internal::wasm::AsmJsParser", %"class.v8::internal::wasm::AsmJsParser"* %0, i64 0, i32 1, i32 5
  %47 = load i64, i64* %46, align 8
  %48 = trunc i64 %47 to i32
  %49 = getelementptr inbounds %"class.v8::internal::wasm::AsmJsParser", %"class.v8::internal::wasm::AsmJsParser"* %0, i64 0, i32 19
  store i32 %48, i32* %49, align 8
  br label %57

50:                                               ; preds = %29, %43
  tail call void @_ZN2v88internal12AsmJsScanner4NextEv(%"class.v8::internal::AsmJsScanner"* %9) #12
  br i1 %4, label %51, label %57

51:                                               ; preds = %50
  %52 = getelementptr inbounds %"class.v8::internal::wasm::AsmJsParser", %"class.v8::internal::wasm::AsmJsParser"* %0, i64 0, i32 25, i32 0, i32 0, i32 1
  %53 = load %"struct.v8::internal::wasm::AsmJsParser::BlockInfo"*, %"struct.v8::internal::wasm::AsmJsParser::BlockInfo"** %52, align 8
  %54 = getelementptr inbounds %"struct.v8::internal::wasm::AsmJsParser::BlockInfo", %"struct.v8::internal::wasm::AsmJsParser::BlockInfo"* %53, i64 -1
  store %"struct.v8::internal::wasm::AsmJsParser::BlockInfo"* %54, %"struct.v8::internal::wasm::AsmJsParser::BlockInfo"** %52, align 8
  %55 = getelementptr inbounds %"class.v8::internal::wasm::AsmJsParser", %"class.v8::internal::wasm::AsmJsParser"* %0, i64 0, i32 3
  %56 = load %"class.v8::internal::wasm::WasmFunctionBuilder"*, %"class.v8::internal::wasm::WasmFunctionBuilder"** %55, align 8
  tail call void @_ZN2v88internal4wasm19WasmFunctionBuilder4EmitENS1_10WasmOpcodeE(%"class.v8::internal::wasm::WasmFunctionBuilder"* %56, i32 11) #12
  br label %57

57:                                               ; preds = %40, %50, %51, %44, %34, %13
  ret void
}

; Function Attrs: nounwind ssp uwtable
define hidden void @_ZN2v88internal4wasm11AsmJsParser14EmptyStatementEv(%"class.v8::internal::wasm::AsmJsParser"*) local_unnamed_addr #0 align 2 {
  %2 = getelementptr inbounds %"class.v8::internal::wasm::AsmJsParser", %"class.v8::internal::wasm::AsmJsParser"* %0, i64 0, i32 1, i32 1
  %3 = load i32, i32* %2, align 8
  %4 = icmp eq i32 %3, 59
  br i1 %4, label %12, label %5

5:                                                ; preds = %1
  %6 = getelementptr inbounds %"class.v8::internal::wasm::AsmJsParser", %"class.v8::internal::wasm::AsmJsParser"* %0, i64 0, i32 17
  store i8 1, i8* %6, align 4
  %7 = getelementptr inbounds %"class.v8::internal::wasm::AsmJsParser", %"class.v8::internal::wasm::AsmJsParser"* %0, i64 0, i32 18
  store i8* getelementptr inbounds ([17 x i8], [17 x i8]* @.str.3, i64 0, i64 0), i8** %7, align 8
  %8 = getelementptr inbounds %"class.v8::internal::wasm::AsmJsParser", %"class.v8::internal::wasm::AsmJsParser"* %0, i64 0, i32 1, i32 5
  %9 = load i64, i64* %8, align 8
  %10 = trunc i64 %9 to i32
  %11 = getelementptr inbounds %"class.v8::internal::wasm::AsmJsParser", %"class.v8::internal::wasm::AsmJsParser"* %0, i64 0, i32 19
  store i32 %10, i32* %11, align 8
  br label %14

12:                                               ; preds = %1
  %13 = getelementptr inbounds %"class.v8::internal::wasm::AsmJsParser", %"class.v8::internal::wasm::AsmJsParser"* %0, i64 0, i32 1
  tail call void @_ZN2v88internal12AsmJsScanner4NextEv(%"class.v8::internal::AsmJsScanner"* %13) #12
  br label %14

14:                                               ; preds = %5, %12
  ret void
}

; Function Attrs: nounwind ssp uwtable
define hidden void @_ZN2v88internal4wasm11AsmJsParser11IfStatementEv(%"class.v8::internal::wasm::AsmJsParser"*) local_unnamed_addr #0 align 2 {
  %2 = getelementptr inbounds %"class.v8::internal::wasm::AsmJsParser", %"class.v8::internal::wasm::AsmJsParser"* %0, i64 0, i32 1
  %3 = getelementptr inbounds %"class.v8::internal::wasm::AsmJsParser", %"class.v8::internal::wasm::AsmJsParser"* %0, i64 0, i32 1, i32 1
  %4 = load i32, i32* %3, align 8
  %5 = icmp eq i32 %4, -9950
  br i1 %5, label %13, label %6

6:                                                ; preds = %1
  %7 = getelementptr inbounds %"class.v8::internal::wasm::AsmJsParser", %"class.v8::internal::wasm::AsmJsParser"* %0, i64 0, i32 17
  store i8 1, i8* %7, align 4
  %8 = getelementptr inbounds %"class.v8::internal::wasm::AsmJsParser", %"class.v8::internal::wasm::AsmJsParser"* %0, i64 0, i32 18
  store i8* getelementptr inbounds ([17 x i8], [17 x i8]* @.str.3, i64 0, i64 0), i8** %8, align 8
  %9 = getelementptr inbounds %"class.v8::internal::wasm::AsmJsParser", %"class.v8::internal::wasm::AsmJsParser"* %0, i64 0, i32 1, i32 5
  %10 = load i64, i64* %9, align 8
  %11 = trunc i64 %10 to i32
  %12 = getelementptr inbounds %"class.v8::internal::wasm::AsmJsParser", %"class.v8::internal::wasm::AsmJsParser"* %0, i64 0, i32 19
  store i32 %11, i32* %12, align 8
  br label %323

13:                                               ; preds = %1
  tail call void @_ZN2v88internal12AsmJsScanner4NextEv(%"class.v8::internal::AsmJsScanner"* %2) #12
  %14 = load i32, i32* %3, align 8
  %15 = icmp eq i32 %14, 40
  br i1 %15, label %23, label %16

16:                                               ; preds = %13
  %17 = getelementptr inbounds %"class.v8::internal::wasm::AsmJsParser", %"class.v8::internal::wasm::AsmJsParser"* %0, i64 0, i32 17
  store i8 1, i8* %17, align 4
  %18 = getelementptr inbounds %"class.v8::internal::wasm::AsmJsParser", %"class.v8::internal::wasm::AsmJsParser"* %0, i64 0, i32 18
  store i8* getelementptr inbounds ([17 x i8], [17 x i8]* @.str.3, i64 0, i64 0), i8** %18, align 8
  %19 = getelementptr inbounds %"class.v8::internal::wasm::AsmJsParser", %"class.v8::internal::wasm::AsmJsParser"* %0, i64 0, i32 1, i32 5
  %20 = load i64, i64* %19, align 8
  %21 = trunc i64 %20 to i32
  %22 = getelementptr inbounds %"class.v8::internal::wasm::AsmJsParser", %"class.v8::internal::wasm::AsmJsParser"* %0, i64 0, i32 19
  store i32 %21, i32* %22, align 8
  br label %323

23:                                               ; preds = %13
  tail call void @_ZN2v88internal12AsmJsScanner4NextEv(%"class.v8::internal::AsmJsScanner"* %2) #12
  %24 = tail call i64 @_ZN2v88internal23GetCurrentStackPositionEv() #12
  %25 = getelementptr inbounds %"class.v8::internal::wasm::AsmJsParser", %"class.v8::internal::wasm::AsmJsParser"* %0, i64 0, i32 5
  %26 = load i64, i64* %25, align 8
  %27 = icmp ult i64 %24, %26
  br i1 %27, label %28, label %35

28:                                               ; preds = %23
  %29 = getelementptr inbounds %"class.v8::internal::wasm::AsmJsParser", %"class.v8::internal::wasm::AsmJsParser"* %0, i64 0, i32 17
  store i8 1, i8* %29, align 4
  %30 = getelementptr inbounds %"class.v8::internal::wasm::AsmJsParser", %"class.v8::internal::wasm::AsmJsParser"* %0, i64 0, i32 18
  store i8* getelementptr inbounds ([44 x i8], [44 x i8]* @.str.2, i64 0, i64 0), i8** %30, align 8
  %31 = getelementptr inbounds %"class.v8::internal::wasm::AsmJsParser", %"class.v8::internal::wasm::AsmJsParser"* %0, i64 0, i32 1, i32 5
  %32 = load i64, i64* %31, align 8
  %33 = trunc i64 %32 to i32
  %34 = getelementptr inbounds %"class.v8::internal::wasm::AsmJsParser", %"class.v8::internal::wasm::AsmJsParser"* %0, i64 0, i32 19
  store i32 %33, i32* %34, align 8
  br label %323

35:                                               ; preds = %23
  %36 = tail call %"class.v8::internal::wasm::AsmType"* @_ZN2v88internal4wasm11AsmJsParser10ExpressionEPNS1_7AsmTypeE(%"class.v8::internal::wasm::AsmJsParser"* %0, %"class.v8::internal::wasm::AsmType"* nonnull inttoptr (i64 769 to %"class.v8::internal::wasm::AsmType"*))
  %37 = getelementptr inbounds %"class.v8::internal::wasm::AsmJsParser", %"class.v8::internal::wasm::AsmJsParser"* %0, i64 0, i32 17
  %38 = load i8, i8* %37, align 4, !range !69
  %39 = icmp eq i8 %38, 0
  br i1 %39, label %40, label %323

40:                                               ; preds = %35
  %41 = load i32, i32* %3, align 8
  %42 = icmp eq i32 %41, 41
  br i1 %42, label %49, label %43

43:                                               ; preds = %40
  store i8 1, i8* %37, align 4
  %44 = getelementptr inbounds %"class.v8::internal::wasm::AsmJsParser", %"class.v8::internal::wasm::AsmJsParser"* %0, i64 0, i32 18
  store i8* getelementptr inbounds ([17 x i8], [17 x i8]* @.str.3, i64 0, i64 0), i8** %44, align 8
  %45 = getelementptr inbounds %"class.v8::internal::wasm::AsmJsParser", %"class.v8::internal::wasm::AsmJsParser"* %0, i64 0, i32 1, i32 5
  %46 = load i64, i64* %45, align 8
  %47 = trunc i64 %46 to i32
  %48 = getelementptr inbounds %"class.v8::internal::wasm::AsmJsParser", %"class.v8::internal::wasm::AsmJsParser"* %0, i64 0, i32 19
  store i32 %47, i32* %48, align 8
  br label %323

49:                                               ; preds = %40
  tail call void @_ZN2v88internal12AsmJsScanner4NextEv(%"class.v8::internal::AsmJsScanner"* %2) #12
  %50 = getelementptr inbounds %"class.v8::internal::wasm::AsmJsParser", %"class.v8::internal::wasm::AsmJsParser"* %0, i64 0, i32 25, i32 0
  %51 = getelementptr inbounds %"class.v8::internal::wasm::AsmJsParser", %"class.v8::internal::wasm::AsmJsParser"* %0, i64 0, i32 25, i32 0, i32 0, i32 1
  %52 = load %"struct.v8::internal::wasm::AsmJsParser::BlockInfo"*, %"struct.v8::internal::wasm::AsmJsParser::BlockInfo"** %51, align 8
  %53 = getelementptr inbounds %"class.v8::internal::wasm::AsmJsParser", %"class.v8::internal::wasm::AsmJsParser"* %0, i64 0, i32 25, i32 0, i32 0, i32 2, i32 0, i32 0
  %54 = load %"struct.v8::internal::wasm::AsmJsParser::BlockInfo"*, %"struct.v8::internal::wasm::AsmJsParser::BlockInfo"** %53, align 8
  %55 = icmp eq %"struct.v8::internal::wasm::AsmJsParser::BlockInfo"* %52, %54
  %56 = ptrtoint %"struct.v8::internal::wasm::AsmJsParser::BlockInfo"* %54 to i64
  br i1 %55, label %62, label %57

57:                                               ; preds = %49
  %58 = bitcast %"struct.v8::internal::wasm::AsmJsParser::BlockInfo"* %52 to i64*
  store i64 3, i64* %58, align 4
  %59 = getelementptr inbounds %"struct.v8::internal::wasm::AsmJsParser::BlockInfo", %"struct.v8::internal::wasm::AsmJsParser::BlockInfo"* %52, i64 1
  %60 = ptrtoint %"struct.v8::internal::wasm::AsmJsParser::BlockInfo"* %59 to i64
  %61 = bitcast %"struct.v8::internal::wasm::AsmJsParser::BlockInfo"** %51 to i64*
  store i64 %60, i64* %61, align 8
  br label %287

62:                                               ; preds = %49
  %63 = ptrtoint %"struct.v8::internal::wasm::AsmJsParser::BlockInfo"* %52 to i64
  %64 = bitcast %"struct.v8::internal::wasm::AsmJsParser::BlockInfo"** %51 to i64*
  %65 = bitcast %"class.std::__1::vector.199"* %50 to i64*
  %66 = load i64, i64* %65, align 8
  %67 = sub i64 %63, %66
  %68 = ashr exact i64 %67, 3
  %69 = add nsw i64 %68, 1
  %70 = icmp ugt i64 %69, 268435455
  br i1 %70, label %71, label %73

71:                                               ; preds = %62
  %72 = bitcast %"class.std::__1::vector.199"* %50 to %"class.std::__1::__vector_base_common"*
  tail call void @_ZNKSt3__120__vector_base_commonILb1EE20__throw_length_errorEv(%"class.std::__1::__vector_base_common"* %72) #13
  unreachable

73:                                               ; preds = %62
  %74 = bitcast %"struct.v8::internal::wasm::AsmJsParser::BlockInfo"** %53 to i64*
  %75 = sub i64 %56, %66
  %76 = ashr exact i64 %75, 3
  %77 = icmp ult i64 %76, 134217727
  br i1 %77, label %78, label %83

78:                                               ; preds = %73
  %79 = ashr exact i64 %75, 2
  %80 = icmp ult i64 %79, %69
  %81 = select i1 %80, i64 %69, i64 %79
  %82 = icmp eq i64 %81, 0
  br i1 %82, label %101, label %83

83:                                               ; preds = %78, %73
  %84 = phi i64 [ %81, %78 ], [ 268435455, %73 ]
  %85 = getelementptr inbounds %"class.v8::internal::wasm::AsmJsParser", %"class.v8::internal::wasm::AsmJsParser"* %0, i64 0, i32 25, i32 0, i32 0, i32 2, i32 1, i32 0, i32 0
  %86 = load %"class.v8::internal::Zone"*, %"class.v8::internal::Zone"** %85, align 8
  %87 = shl i64 %84, 3
  %88 = getelementptr inbounds %"class.v8::internal::Zone", %"class.v8::internal::Zone"* %86, i64 0, i32 2
  %89 = load i64, i64* %88, align 8
  %90 = getelementptr inbounds %"class.v8::internal::Zone", %"class.v8::internal::Zone"* %86, i64 0, i32 3
  %91 = load i64, i64* %90, align 8
  %92 = sub i64 %91, %89
  %93 = icmp ugt i64 %87, %92
  br i1 %93, label %94, label %96, !prof !2

94:                                               ; preds = %83
  %95 = tail call i64 @_ZN2v88internal4Zone9NewExpandEm(%"class.v8::internal::Zone"* %86, i64 %87) #12
  br label %98

96:                                               ; preds = %83
  %97 = add i64 %89, %87
  store i64 %97, i64* %88, align 8
  br label %98

98:                                               ; preds = %96, %94
  %99 = phi i64 [ %95, %94 ], [ %89, %96 ]
  %100 = inttoptr i64 %99 to %"struct.v8::internal::wasm::AsmJsParser::BlockInfo"*
  br label %101

101:                                              ; preds = %98, %78
  %102 = phi i64 [ %84, %98 ], [ 0, %78 ]
  %103 = phi %"struct.v8::internal::wasm::AsmJsParser::BlockInfo"* [ %100, %98 ], [ null, %78 ]
  %104 = getelementptr inbounds %"struct.v8::internal::wasm::AsmJsParser::BlockInfo", %"struct.v8::internal::wasm::AsmJsParser::BlockInfo"* %103, i64 %68
  %105 = getelementptr inbounds %"struct.v8::internal::wasm::AsmJsParser::BlockInfo", %"struct.v8::internal::wasm::AsmJsParser::BlockInfo"* %103, i64 %102
  %106 = ptrtoint %"struct.v8::internal::wasm::AsmJsParser::BlockInfo"* %105 to i64
  %107 = bitcast %"struct.v8::internal::wasm::AsmJsParser::BlockInfo"* %104 to i64*
  store i64 3, i64* %107, align 4
  %108 = getelementptr inbounds %"struct.v8::internal::wasm::AsmJsParser::BlockInfo", %"struct.v8::internal::wasm::AsmJsParser::BlockInfo"* %104, i64 1
  %109 = ptrtoint %"struct.v8::internal::wasm::AsmJsParser::BlockInfo"* %108 to i64
  %110 = getelementptr inbounds %"class.std::__1::vector.199", %"class.std::__1::vector.199"* %50, i64 0, i32 0, i32 0
  %111 = load %"struct.v8::internal::wasm::AsmJsParser::BlockInfo"*, %"struct.v8::internal::wasm::AsmJsParser::BlockInfo"** %110, align 8
  %112 = ptrtoint %"struct.v8::internal::wasm::AsmJsParser::BlockInfo"* %111 to i64
  %113 = load %"struct.v8::internal::wasm::AsmJsParser::BlockInfo"*, %"struct.v8::internal::wasm::AsmJsParser::BlockInfo"** %51, align 8
  %114 = icmp eq %"struct.v8::internal::wasm::AsmJsParser::BlockInfo"* %113, %111
  br i1 %114, label %284, label %115

115:                                              ; preds = %101
  %116 = getelementptr %"struct.v8::internal::wasm::AsmJsParser::BlockInfo", %"struct.v8::internal::wasm::AsmJsParser::BlockInfo"* %113, i64 -1, i32 0
  %117 = ptrtoint i32* %116 to i64
  %118 = sub i64 %117, %112
  %119 = lshr i64 %118, 3
  %120 = add nuw nsw i64 %119, 1
  %121 = icmp ult i64 %120, 4
  br i1 %121, label %214, label %122

122:                                              ; preds = %115
  %123 = getelementptr %"struct.v8::internal::wasm::AsmJsParser::BlockInfo", %"struct.v8::internal::wasm::AsmJsParser::BlockInfo"* %113, i64 -1, i32 0
  %124 = ptrtoint i32* %123 to i64
  %125 = sub i64 %124, %112
  %126 = lshr i64 %125, 3
  %127 = xor i64 %126, -1
  %128 = add nsw i64 %68, %127
  %129 = getelementptr %"struct.v8::internal::wasm::AsmJsParser::BlockInfo", %"struct.v8::internal::wasm::AsmJsParser::BlockInfo"* %103, i64 %128
  %130 = xor i64 %126, -1
  %131 = getelementptr %"struct.v8::internal::wasm::AsmJsParser::BlockInfo", %"struct.v8::internal::wasm::AsmJsParser::BlockInfo"* %113, i64 %130
  %132 = icmp ult %"struct.v8::internal::wasm::AsmJsParser::BlockInfo"* %129, %113
  %133 = icmp ult %"struct.v8::internal::wasm::AsmJsParser::BlockInfo"* %131, %104
  %134 = and i1 %132, %133
  br i1 %134, label %214, label %135

135:                                              ; preds = %122
  %136 = and i64 %120, 4611686018427387900
  %137 = sub nsw i64 0, %136
  %138 = getelementptr %"struct.v8::internal::wasm::AsmJsParser::BlockInfo", %"struct.v8::internal::wasm::AsmJsParser::BlockInfo"* %104, i64 %137
  %139 = sub nsw i64 0, %136
  %140 = getelementptr %"struct.v8::internal::wasm::AsmJsParser::BlockInfo", %"struct.v8::internal::wasm::AsmJsParser::BlockInfo"* %113, i64 %139
  %141 = add nsw i64 %136, -4
  %142 = lshr exact i64 %141, 2
  %143 = add nuw nsw i64 %142, 1
  %144 = and i64 %143, 1
  %145 = icmp eq i64 %141, 0
  br i1 %145, label %192, label %146

146:                                              ; preds = %135
  %147 = sub nuw nsw i64 %143, %144
  %148 = getelementptr %"struct.v8::internal::wasm::AsmJsParser::BlockInfo", %"struct.v8::internal::wasm::AsmJsParser::BlockInfo"* %104, i64 -1
  %149 = getelementptr %"struct.v8::internal::wasm::AsmJsParser::BlockInfo", %"struct.v8::internal::wasm::AsmJsParser::BlockInfo"* %113, i64 -1
  %150 = getelementptr %"struct.v8::internal::wasm::AsmJsParser::BlockInfo", %"struct.v8::internal::wasm::AsmJsParser::BlockInfo"* %104, i64 -1
  %151 = getelementptr %"struct.v8::internal::wasm::AsmJsParser::BlockInfo", %"struct.v8::internal::wasm::AsmJsParser::BlockInfo"* %113, i64 -1
  br label %152

152:                                              ; preds = %152, %146
  %153 = phi i64 [ 0, %146 ], [ %187, %152 ]
  %154 = phi i64 [ %147, %146 ], [ %188, %152 ]
  %155 = sub i64 0, %153
  %156 = sub i64 0, %153
  %157 = getelementptr inbounds %"struct.v8::internal::wasm::AsmJsParser::BlockInfo", %"struct.v8::internal::wasm::AsmJsParser::BlockInfo"* %148, i64 %155
  %158 = getelementptr inbounds %"struct.v8::internal::wasm::AsmJsParser::BlockInfo", %"struct.v8::internal::wasm::AsmJsParser::BlockInfo"* %149, i64 %156
  %159 = getelementptr inbounds %"struct.v8::internal::wasm::AsmJsParser::BlockInfo", %"struct.v8::internal::wasm::AsmJsParser::BlockInfo"* %158, i64 -1
  %160 = bitcast %"struct.v8::internal::wasm::AsmJsParser::BlockInfo"* %159 to <2 x i64>*
  %161 = load <2 x i64>, <2 x i64>* %160, align 4, !alias.scope !207
  %162 = getelementptr inbounds %"struct.v8::internal::wasm::AsmJsParser::BlockInfo", %"struct.v8::internal::wasm::AsmJsParser::BlockInfo"* %158, i64 -2
  %163 = getelementptr inbounds %"struct.v8::internal::wasm::AsmJsParser::BlockInfo", %"struct.v8::internal::wasm::AsmJsParser::BlockInfo"* %162, i64 -1
  %164 = bitcast %"struct.v8::internal::wasm::AsmJsParser::BlockInfo"* %163 to <2 x i64>*
  %165 = load <2 x i64>, <2 x i64>* %164, align 4, !alias.scope !207
  %166 = getelementptr inbounds %"struct.v8::internal::wasm::AsmJsParser::BlockInfo", %"struct.v8::internal::wasm::AsmJsParser::BlockInfo"* %157, i64 -1
  %167 = bitcast %"struct.v8::internal::wasm::AsmJsParser::BlockInfo"* %166 to <2 x i64>*
  store <2 x i64> %161, <2 x i64>* %167, align 4, !alias.scope !210, !noalias !207
  %168 = getelementptr inbounds %"struct.v8::internal::wasm::AsmJsParser::BlockInfo", %"struct.v8::internal::wasm::AsmJsParser::BlockInfo"* %157, i64 -2
  %169 = getelementptr inbounds %"struct.v8::internal::wasm::AsmJsParser::BlockInfo", %"struct.v8::internal::wasm::AsmJsParser::BlockInfo"* %168, i64 -1
  %170 = bitcast %"struct.v8::internal::wasm::AsmJsParser::BlockInfo"* %169 to <2 x i64>*
  store <2 x i64> %165, <2 x i64>* %170, align 4, !alias.scope !210, !noalias !207
  %171 = sub nuw nsw i64 -4, %153
  %172 = sub nuw nsw i64 -4, %153
  %173 = getelementptr inbounds %"struct.v8::internal::wasm::AsmJsParser::BlockInfo", %"struct.v8::internal::wasm::AsmJsParser::BlockInfo"* %150, i64 %171
  %174 = getelementptr inbounds %"struct.v8::internal::wasm::AsmJsParser::BlockInfo", %"struct.v8::internal::wasm::AsmJsParser::BlockInfo"* %151, i64 %172
  %175 = getelementptr inbounds %"struct.v8::internal::wasm::AsmJsParser::BlockInfo", %"struct.v8::internal::wasm::AsmJsParser::BlockInfo"* %174, i64 -1
  %176 = bitcast %"struct.v8::internal::wasm::AsmJsParser::BlockInfo"* %175 to <2 x i64>*
  %177 = load <2 x i64>, <2 x i64>* %176, align 4, !alias.scope !207
  %178 = getelementptr inbounds %"struct.v8::internal::wasm::AsmJsParser::BlockInfo", %"struct.v8::internal::wasm::AsmJsParser::BlockInfo"* %174, i64 -2
  %179 = getelementptr inbounds %"struct.v8::internal::wasm::AsmJsParser::BlockInfo", %"struct.v8::internal::wasm::AsmJsParser::BlockInfo"* %178, i64 -1
  %180 = bitcast %"struct.v8::internal::wasm::AsmJsParser::BlockInfo"* %179 to <2 x i64>*
  %181 = load <2 x i64>, <2 x i64>* %180, align 4, !alias.scope !207
  %182 = getelementptr inbounds %"struct.v8::internal::wasm::AsmJsParser::BlockInfo", %"struct.v8::internal::wasm::AsmJsParser::BlockInfo"* %173, i64 -1
  %183 = bitcast %"struct.v8::internal::wasm::AsmJsParser::BlockInfo"* %182 to <2 x i64>*
  store <2 x i64> %177, <2 x i64>* %183, align 4, !alias.scope !210, !noalias !207
  %184 = getelementptr inbounds %"struct.v8::internal::wasm::AsmJsParser::BlockInfo", %"struct.v8::internal::wasm::AsmJsParser::BlockInfo"* %173, i64 -2
  %185 = getelementptr inbounds %"struct.v8::internal::wasm::AsmJsParser::BlockInfo", %"struct.v8::internal::wasm::AsmJsParser::BlockInfo"* %184, i64 -1
  %186 = bitcast %"struct.v8::internal::wasm::AsmJsParser::BlockInfo"* %185 to <2 x i64>*
  store <2 x i64> %181, <2 x i64>* %186, align 4, !alias.scope !210, !noalias !207
  %187 = add i64 %153, 8
  %188 = add i64 %154, -2
  %189 = icmp eq i64 %188, 0
  br i1 %189, label %190, label %152, !llvm.loop !212

190:                                              ; preds = %152
  %191 = sub nuw nsw i64 -8, %153
  br label %192

192:                                              ; preds = %190, %135
  %193 = phi i64 [ 0, %135 ], [ %191, %190 ]
  %194 = icmp eq i64 %144, 0
  br i1 %194, label %212, label %195

195:                                              ; preds = %192
  %196 = getelementptr %"struct.v8::internal::wasm::AsmJsParser::BlockInfo", %"struct.v8::internal::wasm::AsmJsParser::BlockInfo"* %104, i64 -1
  %197 = getelementptr %"struct.v8::internal::wasm::AsmJsParser::BlockInfo", %"struct.v8::internal::wasm::AsmJsParser::BlockInfo"* %113, i64 -1
  %198 = getelementptr inbounds %"struct.v8::internal::wasm::AsmJsParser::BlockInfo", %"struct.v8::internal::wasm::AsmJsParser::BlockInfo"* %196, i64 %193
  %199 = getelementptr inbounds %"struct.v8::internal::wasm::AsmJsParser::BlockInfo", %"struct.v8::internal::wasm::AsmJsParser::BlockInfo"* %197, i64 %193
  %200 = getelementptr inbounds %"struct.v8::internal::wasm::AsmJsParser::BlockInfo", %"struct.v8::internal::wasm::AsmJsParser::BlockInfo"* %199, i64 -1
  %201 = bitcast %"struct.v8::internal::wasm::AsmJsParser::BlockInfo"* %200 to <2 x i64>*
  %202 = load <2 x i64>, <2 x i64>* %201, align 4, !alias.scope !207
  %203 = getelementptr inbounds %"struct.v8::internal::wasm::AsmJsParser::BlockInfo", %"struct.v8::internal::wasm::AsmJsParser::BlockInfo"* %199, i64 -2
  %204 = getelementptr inbounds %"struct.v8::internal::wasm::AsmJsParser::BlockInfo", %"struct.v8::internal::wasm::AsmJsParser::BlockInfo"* %203, i64 -1
  %205 = bitcast %"struct.v8::internal::wasm::AsmJsParser::BlockInfo"* %204 to <2 x i64>*
  %206 = load <2 x i64>, <2 x i64>* %205, align 4, !alias.scope !207
  %207 = getelementptr inbounds %"struct.v8::internal::wasm::AsmJsParser::BlockInfo", %"struct.v8::internal::wasm::AsmJsParser::BlockInfo"* %198, i64 -1
  %208 = bitcast %"struct.v8::internal::wasm::AsmJsParser::BlockInfo"* %207 to <2 x i64>*
  store <2 x i64> %202, <2 x i64>* %208, align 4, !alias.scope !210, !noalias !207
  %209 = getelementptr inbounds %"struct.v8::internal::wasm::AsmJsParser::BlockInfo", %"struct.v8::internal::wasm::AsmJsParser::BlockInfo"* %198, i64 -2
  %210 = getelementptr inbounds %"struct.v8::internal::wasm::AsmJsParser::BlockInfo", %"struct.v8::internal::wasm::AsmJsParser::BlockInfo"* %209, i64 -1
  %211 = bitcast %"struct.v8::internal::wasm::AsmJsParser::BlockInfo"* %210 to <2 x i64>*
  store <2 x i64> %206, <2 x i64>* %211, align 4, !alias.scope !210, !noalias !207
  br label %212

212:                                              ; preds = %192, %195
  %213 = icmp eq i64 %120, %136
  br i1 %213, label %284, label %214

214:                                              ; preds = %212, %122, %115
  %215 = phi %"struct.v8::internal::wasm::AsmJsParser::BlockInfo"* [ %104, %122 ], [ %104, %115 ], [ %138, %212 ]
  %216 = phi %"struct.v8::internal::wasm::AsmJsParser::BlockInfo"* [ %113, %122 ], [ %113, %115 ], [ %140, %212 ]
  %217 = getelementptr %"struct.v8::internal::wasm::AsmJsParser::BlockInfo", %"struct.v8::internal::wasm::AsmJsParser::BlockInfo"* %216, i64 -1, i32 0
  %218 = ptrtoint i32* %217 to i64
  %219 = sub i64 %218, %112
  %220 = lshr i64 %219, 3
  %221 = add nuw nsw i64 %220, 1
  %222 = and i64 %221, 7
  %223 = icmp eq i64 %222, 0
  br i1 %223, label %235, label %224

224:                                              ; preds = %214, %224
  %225 = phi %"struct.v8::internal::wasm::AsmJsParser::BlockInfo"* [ %228, %224 ], [ %215, %214 ]
  %226 = phi %"struct.v8::internal::wasm::AsmJsParser::BlockInfo"* [ %229, %224 ], [ %216, %214 ]
  %227 = phi i64 [ %233, %224 ], [ %222, %214 ]
  %228 = getelementptr inbounds %"struct.v8::internal::wasm::AsmJsParser::BlockInfo", %"struct.v8::internal::wasm::AsmJsParser::BlockInfo"* %225, i64 -1
  %229 = getelementptr inbounds %"struct.v8::internal::wasm::AsmJsParser::BlockInfo", %"struct.v8::internal::wasm::AsmJsParser::BlockInfo"* %226, i64 -1
  %230 = bitcast %"struct.v8::internal::wasm::AsmJsParser::BlockInfo"* %229 to i64*
  %231 = bitcast %"struct.v8::internal::wasm::AsmJsParser::BlockInfo"* %228 to i64*
  %232 = load i64, i64* %230, align 4
  store i64 %232, i64* %231, align 4
  %233 = add i64 %227, -1
  %234 = icmp eq i64 %233, 0
  br i1 %234, label %235, label %224, !llvm.loop !213

235:                                              ; preds = %224, %214
  %236 = phi %"struct.v8::internal::wasm::AsmJsParser::BlockInfo"* [ undef, %214 ], [ %228, %224 ]
  %237 = phi %"struct.v8::internal::wasm::AsmJsParser::BlockInfo"* [ %215, %214 ], [ %228, %224 ]
  %238 = phi %"struct.v8::internal::wasm::AsmJsParser::BlockInfo"* [ %216, %214 ], [ %229, %224 ]
  %239 = icmp ult i64 %219, 56
  br i1 %239, label %284, label %240

240:                                              ; preds = %235, %240
  %241 = phi %"struct.v8::internal::wasm::AsmJsParser::BlockInfo"* [ %278, %240 ], [ %237, %235 ]
  %242 = phi %"struct.v8::internal::wasm::AsmJsParser::BlockInfo"* [ %279, %240 ], [ %238, %235 ]
  %243 = getelementptr inbounds %"struct.v8::internal::wasm::AsmJsParser::BlockInfo", %"struct.v8::internal::wasm::AsmJsParser::BlockInfo"* %241, i64 -1
  %244 = getelementptr inbounds %"struct.v8::internal::wasm::AsmJsParser::BlockInfo", %"struct.v8::internal::wasm::AsmJsParser::BlockInfo"* %242, i64 -1
  %245 = bitcast %"struct.v8::internal::wasm::AsmJsParser::BlockInfo"* %244 to i64*
  %246 = bitcast %"struct.v8::internal::wasm::AsmJsParser::BlockInfo"* %243 to i64*
  %247 = load i64, i64* %245, align 4
  store i64 %247, i64* %246, align 4
  %248 = getelementptr inbounds %"struct.v8::internal::wasm::AsmJsParser::BlockInfo", %"struct.v8::internal::wasm::AsmJsParser::BlockInfo"* %241, i64 -2
  %249 = getelementptr inbounds %"struct.v8::internal::wasm::AsmJsParser::BlockInfo", %"struct.v8::internal::wasm::AsmJsParser::BlockInfo"* %242, i64 -2
  %250 = bitcast %"struct.v8::internal::wasm::AsmJsParser::BlockInfo"* %249 to i64*
  %251 = bitcast %"struct.v8::internal::wasm::AsmJsParser::BlockInfo"* %248 to i64*
  %252 = load i64, i64* %250, align 4
  store i64 %252, i64* %251, align 4
  %253 = getelementptr inbounds %"struct.v8::internal::wasm::AsmJsParser::BlockInfo", %"struct.v8::internal::wasm::AsmJsParser::BlockInfo"* %241, i64 -3
  %254 = getelementptr inbounds %"struct.v8::internal::wasm::AsmJsParser::BlockInfo", %"struct.v8::internal::wasm::AsmJsParser::BlockInfo"* %242, i64 -3
  %255 = bitcast %"struct.v8::internal::wasm::AsmJsParser::BlockInfo"* %254 to i64*
  %256 = bitcast %"struct.v8::internal::wasm::AsmJsParser::BlockInfo"* %253 to i64*
  %257 = load i64, i64* %255, align 4
  store i64 %257, i64* %256, align 4
  %258 = getelementptr inbounds %"struct.v8::internal::wasm::AsmJsParser::BlockInfo", %"struct.v8::internal::wasm::AsmJsParser::BlockInfo"* %241, i64 -4
  %259 = getelementptr inbounds %"struct.v8::internal::wasm::AsmJsParser::BlockInfo", %"struct.v8::internal::wasm::AsmJsParser::BlockInfo"* %242, i64 -4
  %260 = bitcast %"struct.v8::internal::wasm::AsmJsParser::BlockInfo"* %259 to i64*
  %261 = bitcast %"struct.v8::internal::wasm::AsmJsParser::BlockInfo"* %258 to i64*
  %262 = load i64, i64* %260, align 4
  store i64 %262, i64* %261, align 4
  %263 = getelementptr inbounds %"struct.v8::internal::wasm::AsmJsParser::BlockInfo", %"struct.v8::internal::wasm::AsmJsParser::BlockInfo"* %241, i64 -5
  %264 = getelementptr inbounds %"struct.v8::internal::wasm::AsmJsParser::BlockInfo", %"struct.v8::internal::wasm::AsmJsParser::BlockInfo"* %242, i64 -5
  %265 = bitcast %"struct.v8::internal::wasm::AsmJsParser::BlockInfo"* %264 to i64*
  %266 = bitcast %"struct.v8::internal::wasm::AsmJsParser::BlockInfo"* %263 to i64*
  %267 = load i64, i64* %265, align 4
  store i64 %267, i64* %266, align 4
  %268 = getelementptr inbounds %"struct.v8::internal::wasm::AsmJsParser::BlockInfo", %"struct.v8::internal::wasm::AsmJsParser::BlockInfo"* %241, i64 -6
  %269 = getelementptr inbounds %"struct.v8::internal::wasm::AsmJsParser::BlockInfo", %"struct.v8::internal::wasm::AsmJsParser::BlockInfo"* %242, i64 -6
  %270 = bitcast %"struct.v8::internal::wasm::AsmJsParser::BlockInfo"* %269 to i64*
  %271 = bitcast %"struct.v8::internal::wasm::AsmJsParser::BlockInfo"* %268 to i64*
  %272 = load i64, i64* %270, align 4
  store i64 %272, i64* %271, align 4
  %273 = getelementptr inbounds %"struct.v8::internal::wasm::AsmJsParser::BlockInfo", %"struct.v8::internal::wasm::AsmJsParser::BlockInfo"* %241, i64 -7
  %274 = getelementptr inbounds %"struct.v8::internal::wasm::AsmJsParser::BlockInfo", %"struct.v8::internal::wasm::AsmJsParser::BlockInfo"* %242, i64 -7
  %275 = bitcast %"struct.v8::internal::wasm::AsmJsParser::BlockInfo"* %274 to i64*
  %276 = bitcast %"struct.v8::internal::wasm::AsmJsParser::BlockInfo"* %273 to i64*
  %277 = load i64, i64* %275, align 4
  store i64 %277, i64* %276, align 4
  %278 = getelementptr inbounds %"struct.v8::internal::wasm::AsmJsParser::BlockInfo", %"struct.v8::internal::wasm::AsmJsParser::BlockInfo"* %241, i64 -8
  %279 = getelementptr inbounds %"struct.v8::internal::wasm::AsmJsParser::BlockInfo", %"struct.v8::internal::wasm::AsmJsParser::BlockInfo"* %242, i64 -8
  %280 = bitcast %"struct.v8::internal::wasm::AsmJsParser::BlockInfo"* %279 to i64*
  %281 = bitcast %"struct.v8::internal::wasm::AsmJsParser::BlockInfo"* %278 to i64*
  %282 = load i64, i64* %280, align 4
  store i64 %282, i64* %281, align 4
  %283 = icmp eq %"struct.v8::internal::wasm::AsmJsParser::BlockInfo"* %279, %111
  br i1 %283, label %284, label %240, !llvm.loop !214

284:                                              ; preds = %235, %240, %212, %101
  %285 = phi %"struct.v8::internal::wasm::AsmJsParser::BlockInfo"* [ %104, %101 ], [ %138, %212 ], [ %236, %235 ], [ %278, %240 ]
  %286 = ptrtoint %"struct.v8::internal::wasm::AsmJsParser::BlockInfo"* %285 to i64
  store i64 %286, i64* %65, align 8
  store i64 %109, i64* %64, align 8
  store i64 %106, i64* %74, align 8
  br label %287

287:                                              ; preds = %57, %284
  %288 = getelementptr inbounds %"class.v8::internal::wasm::AsmJsParser", %"class.v8::internal::wasm::AsmJsParser"* %0, i64 0, i32 3
  %289 = load %"class.v8::internal::wasm::WasmFunctionBuilder"*, %"class.v8::internal::wasm::WasmFunctionBuilder"** %288, align 8
  tail call void @_ZN2v88internal4wasm19WasmFunctionBuilder10EmitWithU8ENS1_10WasmOpcodeEh(%"class.v8::internal::wasm::WasmFunctionBuilder"* %289, i32 4, i8 zeroext 64) #12
  %290 = tail call i64 @_ZN2v88internal23GetCurrentStackPositionEv() #12
  %291 = load i64, i64* %25, align 8
  %292 = icmp ult i64 %290, %291
  br i1 %292, label %293, label %299

293:                                              ; preds = %287
  store i8 1, i8* %37, align 4
  %294 = getelementptr inbounds %"class.v8::internal::wasm::AsmJsParser", %"class.v8::internal::wasm::AsmJsParser"* %0, i64 0, i32 18
  store i8* getelementptr inbounds ([44 x i8], [44 x i8]* @.str.2, i64 0, i64 0), i8** %294, align 8
  %295 = getelementptr inbounds %"class.v8::internal::wasm::AsmJsParser", %"class.v8::internal::wasm::AsmJsParser"* %0, i64 0, i32 1, i32 5
  %296 = load i64, i64* %295, align 8
  %297 = trunc i64 %296 to i32
  %298 = getelementptr inbounds %"class.v8::internal::wasm::AsmJsParser", %"class.v8::internal::wasm::AsmJsParser"* %0, i64 0, i32 19
  store i32 %297, i32* %298, align 8
  br label %323

299:                                              ; preds = %287
  tail call void @_ZN2v88internal4wasm11AsmJsParser17ValidateStatementEv(%"class.v8::internal::wasm::AsmJsParser"* %0)
  %300 = load i8, i8* %37, align 4, !range !69
  %301 = icmp eq i8 %300, 0
  br i1 %301, label %302, label %323

302:                                              ; preds = %299
  %303 = load i32, i32* %3, align 8
  %304 = icmp eq i32 %303, -9954
  br i1 %304, label %305, label %319

305:                                              ; preds = %302
  tail call void @_ZN2v88internal12AsmJsScanner4NextEv(%"class.v8::internal::AsmJsScanner"* %2) #12
  %306 = load %"class.v8::internal::wasm::WasmFunctionBuilder"*, %"class.v8::internal::wasm::WasmFunctionBuilder"** %288, align 8
  tail call void @_ZN2v88internal4wasm19WasmFunctionBuilder4EmitENS1_10WasmOpcodeE(%"class.v8::internal::wasm::WasmFunctionBuilder"* %306, i32 5) #12
  %307 = tail call i64 @_ZN2v88internal23GetCurrentStackPositionEv() #12
  %308 = load i64, i64* %25, align 8
  %309 = icmp ult i64 %307, %308
  br i1 %309, label %310, label %316

310:                                              ; preds = %305
  store i8 1, i8* %37, align 4
  %311 = getelementptr inbounds %"class.v8::internal::wasm::AsmJsParser", %"class.v8::internal::wasm::AsmJsParser"* %0, i64 0, i32 18
  store i8* getelementptr inbounds ([44 x i8], [44 x i8]* @.str.2, i64 0, i64 0), i8** %311, align 8
  %312 = getelementptr inbounds %"class.v8::internal::wasm::AsmJsParser", %"class.v8::internal::wasm::AsmJsParser"* %0, i64 0, i32 1, i32 5
  %313 = load i64, i64* %312, align 8
  %314 = trunc i64 %313 to i32
  %315 = getelementptr inbounds %"class.v8::internal::wasm::AsmJsParser", %"class.v8::internal::wasm::AsmJsParser"* %0, i64 0, i32 19
  store i32 %314, i32* %315, align 8
  br label %323

316:                                              ; preds = %305
  tail call void @_ZN2v88internal4wasm11AsmJsParser17ValidateStatementEv(%"class.v8::internal::wasm::AsmJsParser"* %0)
  %317 = load i8, i8* %37, align 4, !range !69
  %318 = icmp eq i8 %317, 0
  br i1 %318, label %319, label %323

319:                                              ; preds = %302, %316
  %320 = load %"class.v8::internal::wasm::WasmFunctionBuilder"*, %"class.v8::internal::wasm::WasmFunctionBuilder"** %288, align 8
  tail call void @_ZN2v88internal4wasm19WasmFunctionBuilder4EmitENS1_10WasmOpcodeE(%"class.v8::internal::wasm::WasmFunctionBuilder"* %320, i32 11) #12
  %321 = load %"struct.v8::internal::wasm::AsmJsParser::BlockInfo"*, %"struct.v8::internal::wasm::AsmJsParser::BlockInfo"** %51, align 8
  %322 = getelementptr inbounds %"struct.v8::internal::wasm::AsmJsParser::BlockInfo", %"struct.v8::internal::wasm::AsmJsParser::BlockInfo"* %321, i64 -1
  store %"struct.v8::internal::wasm::AsmJsParser::BlockInfo"* %322, %"struct.v8::internal::wasm::AsmJsParser::BlockInfo"** %51, align 8
  br label %323

323:                                              ; preds = %316, %299, %35, %319, %310, %293, %43, %28, %16, %6
  ret void
}

; Function Attrs: nounwind ssp uwtable
define hidden void @_ZN2v88internal4wasm11AsmJsParser15ReturnStatementEv(%"class.v8::internal::wasm::AsmJsParser"*) local_unnamed_addr #0 align 2 {
  %2 = getelementptr inbounds %"class.v8::internal::wasm::AsmJsParser", %"class.v8::internal::wasm::AsmJsParser"* %0, i64 0, i32 1
  %3 = getelementptr inbounds %"class.v8::internal::wasm::AsmJsParser", %"class.v8::internal::wasm::AsmJsParser"* %0, i64 0, i32 1, i32 1
  %4 = load i32, i32* %3, align 8
  %5 = icmp eq i32 %4, -9948
  br i1 %5, label %13, label %6

6:                                                ; preds = %1
  %7 = getelementptr inbounds %"class.v8::internal::wasm::AsmJsParser", %"class.v8::internal::wasm::AsmJsParser"* %0, i64 0, i32 17
  store i8 1, i8* %7, align 4
  %8 = getelementptr inbounds %"class.v8::internal::wasm::AsmJsParser", %"class.v8::internal::wasm::AsmJsParser"* %0, i64 0, i32 18
  store i8* getelementptr inbounds ([17 x i8], [17 x i8]* @.str.3, i64 0, i64 0), i8** %8, align 8
  %9 = getelementptr inbounds %"class.v8::internal::wasm::AsmJsParser", %"class.v8::internal::wasm::AsmJsParser"* %0, i64 0, i32 1, i32 5
  %10 = load i64, i64* %9, align 8
  %11 = trunc i64 %10 to i32
  %12 = getelementptr inbounds %"class.v8::internal::wasm::AsmJsParser", %"class.v8::internal::wasm::AsmJsParser"* %0, i64 0, i32 19
  store i32 %11, i32* %12, align 8
  br label %79

13:                                               ; preds = %1
  tail call void @_ZN2v88internal12AsmJsScanner4NextEv(%"class.v8::internal::AsmJsScanner"* %2) #12
  %14 = load i32, i32* %3, align 8
  switch i32 %14, label %15 [
    i32 59, label %49
    i32 125, label %49
  ]

15:                                               ; preds = %13
  %16 = tail call i64 @_ZN2v88internal23GetCurrentStackPositionEv() #12
  %17 = getelementptr inbounds %"class.v8::internal::wasm::AsmJsParser", %"class.v8::internal::wasm::AsmJsParser"* %0, i64 0, i32 5
  %18 = load i64, i64* %17, align 8
  %19 = icmp ult i64 %16, %18
  br i1 %19, label %20, label %27

20:                                               ; preds = %15
  %21 = getelementptr inbounds %"class.v8::internal::wasm::AsmJsParser", %"class.v8::internal::wasm::AsmJsParser"* %0, i64 0, i32 17
  store i8 1, i8* %21, align 4
  %22 = getelementptr inbounds %"class.v8::internal::wasm::AsmJsParser", %"class.v8::internal::wasm::AsmJsParser"* %0, i64 0, i32 18
  store i8* getelementptr inbounds ([44 x i8], [44 x i8]* @.str.2, i64 0, i64 0), i8** %22, align 8
  %23 = getelementptr inbounds %"class.v8::internal::wasm::AsmJsParser", %"class.v8::internal::wasm::AsmJsParser"* %0, i64 0, i32 1, i32 5
  %24 = load i64, i64* %23, align 8
  %25 = trunc i64 %24 to i32
  %26 = getelementptr inbounds %"class.v8::internal::wasm::AsmJsParser", %"class.v8::internal::wasm::AsmJsParser"* %0, i64 0, i32 19
  store i32 %25, i32* %26, align 8
  br label %79

27:                                               ; preds = %15
  %28 = getelementptr inbounds %"class.v8::internal::wasm::AsmJsParser", %"class.v8::internal::wasm::AsmJsParser"* %0, i64 0, i32 4
  %29 = load %"class.v8::internal::wasm::AsmType"*, %"class.v8::internal::wasm::AsmType"** %28, align 8
  %30 = tail call %"class.v8::internal::wasm::AsmType"* @_ZN2v88internal4wasm11AsmJsParser10ExpressionEPNS1_7AsmTypeE(%"class.v8::internal::wasm::AsmJsParser"* %0, %"class.v8::internal::wasm::AsmType"* %29)
  %31 = getelementptr inbounds %"class.v8::internal::wasm::AsmJsParser", %"class.v8::internal::wasm::AsmJsParser"* %0, i64 0, i32 17
  %32 = load i8, i8* %31, align 4, !range !69
  %33 = icmp eq i8 %32, 0
  br i1 %33, label %34, label %79

34:                                               ; preds = %27
  %35 = tail call zeroext i1 @_ZN2v88internal4wasm7AsmType3IsAEPS2_(%"class.v8::internal::wasm::AsmType"* %30, %"class.v8::internal::wasm::AsmType"* nonnull inttoptr (i64 237 to %"class.v8::internal::wasm::AsmType"*)) #12
  br i1 %35, label %36, label %37

36:                                               ; preds = %34
  store %"class.v8::internal::wasm::AsmType"* inttoptr (i64 237 to %"class.v8::internal::wasm::AsmType"*), %"class.v8::internal::wasm::AsmType"** %28, align 8
  br label %63

37:                                               ; preds = %34
  %38 = tail call zeroext i1 @_ZN2v88internal4wasm7AsmType3IsAEPS2_(%"class.v8::internal::wasm::AsmType"* %30, %"class.v8::internal::wasm::AsmType"* nonnull inttoptr (i64 57357 to %"class.v8::internal::wasm::AsmType"*)) #12
  br i1 %38, label %39, label %40

39:                                               ; preds = %37
  store %"class.v8::internal::wasm::AsmType"* inttoptr (i64 57357 to %"class.v8::internal::wasm::AsmType"*), %"class.v8::internal::wasm::AsmType"** %28, align 8
  br label %63

40:                                               ; preds = %37
  %41 = tail call zeroext i1 @_ZN2v88internal4wasm7AsmType3IsAEPS2_(%"class.v8::internal::wasm::AsmType"* %30, %"class.v8::internal::wasm::AsmType"* nonnull inttoptr (i64 1825 to %"class.v8::internal::wasm::AsmType"*)) #12
  br i1 %41, label %42, label %43

42:                                               ; preds = %40
  store %"class.v8::internal::wasm::AsmType"* inttoptr (i64 1825 to %"class.v8::internal::wasm::AsmType"*), %"class.v8::internal::wasm::AsmType"** %28, align 8
  br label %63

43:                                               ; preds = %40
  store i8 1, i8* %31, align 4
  %44 = getelementptr inbounds %"class.v8::internal::wasm::AsmJsParser", %"class.v8::internal::wasm::AsmJsParser"* %0, i64 0, i32 18
  store i8* getelementptr inbounds ([20 x i8], [20 x i8]* @.str.49, i64 0, i64 0), i8** %44, align 8
  %45 = getelementptr inbounds %"class.v8::internal::wasm::AsmJsParser", %"class.v8::internal::wasm::AsmJsParser"* %0, i64 0, i32 1, i32 5
  %46 = load i64, i64* %45, align 8
  %47 = trunc i64 %46 to i32
  %48 = getelementptr inbounds %"class.v8::internal::wasm::AsmJsParser", %"class.v8::internal::wasm::AsmJsParser"* %0, i64 0, i32 19
  store i32 %47, i32* %48, align 8
  br label %79

49:                                               ; preds = %13, %13
  %50 = getelementptr inbounds %"class.v8::internal::wasm::AsmJsParser", %"class.v8::internal::wasm::AsmJsParser"* %0, i64 0, i32 4
  %51 = load %"class.v8::internal::wasm::AsmType"*, %"class.v8::internal::wasm::AsmType"** %50, align 8
  %52 = icmp eq %"class.v8::internal::wasm::AsmType"* %51, null
  br i1 %52, label %53, label %54

53:                                               ; preds = %49
  store %"class.v8::internal::wasm::AsmType"* inttoptr (i64 17 to %"class.v8::internal::wasm::AsmType"*), %"class.v8::internal::wasm::AsmType"** %50, align 8
  br label %63

54:                                               ; preds = %49
  %55 = tail call zeroext i1 @_ZN2v88internal4wasm7AsmType3IsAEPS2_(%"class.v8::internal::wasm::AsmType"* nonnull %51, %"class.v8::internal::wasm::AsmType"* nonnull inttoptr (i64 17 to %"class.v8::internal::wasm::AsmType"*)) #12
  br i1 %55, label %63, label %56

56:                                               ; preds = %54
  %57 = getelementptr inbounds %"class.v8::internal::wasm::AsmJsParser", %"class.v8::internal::wasm::AsmJsParser"* %0, i64 0, i32 17
  store i8 1, i8* %57, align 4
  %58 = getelementptr inbounds %"class.v8::internal::wasm::AsmJsParser", %"class.v8::internal::wasm::AsmJsParser"* %0, i64 0, i32 18
  store i8* getelementptr inbounds ([25 x i8], [25 x i8]* @.str.50, i64 0, i64 0), i8** %58, align 8
  %59 = getelementptr inbounds %"class.v8::internal::wasm::AsmJsParser", %"class.v8::internal::wasm::AsmJsParser"* %0, i64 0, i32 1, i32 5
  %60 = load i64, i64* %59, align 8
  %61 = trunc i64 %60 to i32
  %62 = getelementptr inbounds %"class.v8::internal::wasm::AsmJsParser", %"class.v8::internal::wasm::AsmJsParser"* %0, i64 0, i32 19
  store i32 %61, i32* %62, align 8
  br label %79

63:                                               ; preds = %39, %42, %36, %53, %54
  %64 = getelementptr inbounds %"class.v8::internal::wasm::AsmJsParser", %"class.v8::internal::wasm::AsmJsParser"* %0, i64 0, i32 3
  %65 = load %"class.v8::internal::wasm::WasmFunctionBuilder"*, %"class.v8::internal::wasm::WasmFunctionBuilder"** %64, align 8
  tail call void @_ZN2v88internal4wasm19WasmFunctionBuilder4EmitENS1_10WasmOpcodeE(%"class.v8::internal::wasm::WasmFunctionBuilder"* %65, i32 15) #12
  %66 = load i32, i32* %3, align 8
  switch i32 %66, label %68 [
    i32 59, label %67
    i32 125, label %79
  ]

67:                                               ; preds = %63
  tail call void @_ZN2v88internal12AsmJsScanner4NextEv(%"class.v8::internal::AsmJsScanner"* %2) #12
  br label %79

68:                                               ; preds = %63
  %69 = getelementptr inbounds %"class.v8::internal::wasm::AsmJsParser", %"class.v8::internal::wasm::AsmJsParser"* %0, i64 0, i32 1, i32 20
  %70 = load i8, i8* %69, align 4, !range !69
  %71 = icmp eq i8 %70, 0
  br i1 %71, label %72, label %79

72:                                               ; preds = %68
  %73 = getelementptr inbounds %"class.v8::internal::wasm::AsmJsParser", %"class.v8::internal::wasm::AsmJsParser"* %0, i64 0, i32 17
  store i8 1, i8* %73, align 4
  %74 = getelementptr inbounds %"class.v8::internal::wasm::AsmJsParser", %"class.v8::internal::wasm::AsmJsParser"* %0, i64 0, i32 18
  store i8* getelementptr inbounds ([11 x i8], [11 x i8]* @.str.1, i64 0, i64 0), i8** %74, align 8
  %75 = getelementptr inbounds %"class.v8::internal::wasm::AsmJsParser", %"class.v8::internal::wasm::AsmJsParser"* %0, i64 0, i32 1, i32 5
  %76 = load i64, i64* %75, align 8
  %77 = trunc i64 %76 to i32
  %78 = getelementptr inbounds %"class.v8::internal::wasm::AsmJsParser", %"class.v8::internal::wasm::AsmJsParser"* %0, i64 0, i32 19
  store i32 %77, i32* %78, align 8
  br label %79

79:                                               ; preds = %72, %68, %67, %63, %27, %43, %20, %56, %6
  ret void
}

; Function Attrs: nounwind ssp uwtable
define hidden zeroext i1 @_ZN2v88internal4wasm11AsmJsParser18IterationStatementEv(%"class.v8::internal::wasm::AsmJsParser"*) local_unnamed_addr #0 align 2 {
  %2 = getelementptr inbounds %"class.v8::internal::wasm::AsmJsParser", %"class.v8::internal::wasm::AsmJsParser"* %0, i64 0, i32 1, i32 1
  %3 = load i32, i32* %2, align 8
  switch i32 %3, label %7 [
    i32 -9945, label %4
    i32 -9955, label %5
    i32 -9952, label %6
  ]

4:                                                ; preds = %1
  tail call void @_ZN2v88internal4wasm11AsmJsParser14WhileStatementEv(%"class.v8::internal::wasm::AsmJsParser"* %0)
  br label %7

5:                                                ; preds = %1
  tail call void @_ZN2v88internal4wasm11AsmJsParser11DoStatementEv(%"class.v8::internal::wasm::AsmJsParser"* %0)
  br label %7

6:                                                ; preds = %1
  tail call void @_ZN2v88internal4wasm11AsmJsParser12ForStatementEv(%"class.v8::internal::wasm::AsmJsParser"* %0)
  br label %7

7:                                                ; preds = %1, %4, %6, %5
  %8 = phi i1 [ true, %5 ], [ true, %6 ], [ true, %4 ], [ false, %1 ]
  ret i1 %8
}

; Function Attrs: nounwind ssp uwtable
define hidden void @_ZN2v88internal4wasm11AsmJsParser14BreakStatementEv(%"class.v8::internal::wasm::AsmJsParser"*) local_unnamed_addr #0 align 2 {
  %2 = getelementptr inbounds %"class.v8::internal::wasm::AsmJsParser", %"class.v8::internal::wasm::AsmJsParser"* %0, i64 0, i32 1
  %3 = getelementptr inbounds %"class.v8::internal::wasm::AsmJsParser", %"class.v8::internal::wasm::AsmJsParser"* %0, i64 0, i32 1, i32 1
  %4 = load i32, i32* %3, align 8
  %5 = icmp eq i32 %4, -9960
  br i1 %5, label %13, label %6

6:                                                ; preds = %1
  %7 = getelementptr inbounds %"class.v8::internal::wasm::AsmJsParser", %"class.v8::internal::wasm::AsmJsParser"* %0, i64 0, i32 17
  store i8 1, i8* %7, align 4
  %8 = getelementptr inbounds %"class.v8::internal::wasm::AsmJsParser", %"class.v8::internal::wasm::AsmJsParser"* %0, i64 0, i32 18
  store i8* getelementptr inbounds ([17 x i8], [17 x i8]* @.str.3, i64 0, i64 0), i8** %8, align 8
  %9 = getelementptr inbounds %"class.v8::internal::wasm::AsmJsParser", %"class.v8::internal::wasm::AsmJsParser"* %0, i64 0, i32 1, i32 5
  %10 = load i64, i64* %9, align 8
  %11 = trunc i64 %10 to i32
  %12 = getelementptr inbounds %"class.v8::internal::wasm::AsmJsParser", %"class.v8::internal::wasm::AsmJsParser"* %0, i64 0, i32 19
  store i32 %11, i32* %12, align 8
  br label %82

13:                                               ; preds = %1
  tail call void @_ZN2v88internal12AsmJsScanner4NextEv(%"class.v8::internal::AsmJsScanner"* %2) #12
  %14 = load i32, i32* %3, align 8
  %15 = add i32 %14, 9999
  %16 = icmp ugt i32 %15, 10254
  br i1 %16, label %17, label %18

17:                                               ; preds = %13
  tail call void @_ZN2v88internal12AsmJsScanner4NextEv(%"class.v8::internal::AsmJsScanner"* %2) #12
  br label %18

18:                                               ; preds = %13, %17
  %19 = phi i32 [ %14, %17 ], [ 0, %13 ]
  %20 = getelementptr inbounds %"class.v8::internal::wasm::AsmJsParser", %"class.v8::internal::wasm::AsmJsParser"* %0, i64 0, i32 25, i32 0, i32 0, i32 1
  %21 = load %"struct.v8::internal::wasm::AsmJsParser::BlockInfo"*, %"struct.v8::internal::wasm::AsmJsParser::BlockInfo"** %20, align 8
  %22 = getelementptr inbounds %"class.v8::internal::wasm::AsmJsParser", %"class.v8::internal::wasm::AsmJsParser"* %0, i64 0, i32 25, i32 0, i32 0, i32 0
  %23 = load %"struct.v8::internal::wasm::AsmJsParser::BlockInfo"*, %"struct.v8::internal::wasm::AsmJsParser::BlockInfo"** %22, align 8
  %24 = icmp eq %"struct.v8::internal::wasm::AsmJsParser::BlockInfo"* %21, %23
  br i1 %24, label %57, label %25

25:                                               ; preds = %18
  %26 = icmp eq i32 %19, 0
  br i1 %26, label %27, label %40

27:                                               ; preds = %25, %37
  %28 = phi i32 [ %38, %37 ], [ 0, %25 ]
  %29 = phi %"struct.v8::internal::wasm::AsmJsParser::BlockInfo"* [ %30, %37 ], [ %21, %25 ]
  %30 = getelementptr inbounds %"struct.v8::internal::wasm::AsmJsParser::BlockInfo", %"struct.v8::internal::wasm::AsmJsParser::BlockInfo"* %29, i64 -1
  %31 = getelementptr inbounds %"struct.v8::internal::wasm::AsmJsParser::BlockInfo", %"struct.v8::internal::wasm::AsmJsParser::BlockInfo"* %30, i64 0, i32 0
  %32 = load i32, i32* %31, align 4
  switch i32 %32, label %37 [
    i32 0, label %64
    i32 2, label %33
  ]

33:                                               ; preds = %27
  %34 = getelementptr inbounds %"struct.v8::internal::wasm::AsmJsParser::BlockInfo", %"struct.v8::internal::wasm::AsmJsParser::BlockInfo"* %29, i64 -1, i32 1
  %35 = load i32, i32* %34, align 4
  %36 = icmp eq i32 %35, 0
  br i1 %36, label %64, label %37

37:                                               ; preds = %33, %27
  %38 = add nuw nsw i32 %28, 1
  %39 = icmp eq %"struct.v8::internal::wasm::AsmJsParser::BlockInfo"* %30, %23
  br i1 %39, label %57, label %27

40:                                               ; preds = %25, %54
  %41 = phi i32 [ %55, %54 ], [ 0, %25 ]
  %42 = phi %"struct.v8::internal::wasm::AsmJsParser::BlockInfo"* [ %43, %54 ], [ %21, %25 ]
  %43 = getelementptr inbounds %"struct.v8::internal::wasm::AsmJsParser::BlockInfo", %"struct.v8::internal::wasm::AsmJsParser::BlockInfo"* %42, i64 -1
  %44 = getelementptr inbounds %"struct.v8::internal::wasm::AsmJsParser::BlockInfo", %"struct.v8::internal::wasm::AsmJsParser::BlockInfo"* %43, i64 0, i32 0
  %45 = load i32, i32* %44, align 4
  switch i32 %45, label %54 [
    i32 0, label %46
    i32 2, label %50
  ]

46:                                               ; preds = %40
  %47 = getelementptr inbounds %"struct.v8::internal::wasm::AsmJsParser::BlockInfo", %"struct.v8::internal::wasm::AsmJsParser::BlockInfo"* %42, i64 -1, i32 1
  %48 = load i32, i32* %47, align 4
  %49 = icmp eq i32 %48, %19
  br i1 %49, label %64, label %54

50:                                               ; preds = %40
  %51 = getelementptr inbounds %"struct.v8::internal::wasm::AsmJsParser::BlockInfo", %"struct.v8::internal::wasm::AsmJsParser::BlockInfo"* %42, i64 -1, i32 1
  %52 = load i32, i32* %51, align 4
  %53 = icmp eq i32 %52, %19
  br i1 %53, label %64, label %54

54:                                               ; preds = %50, %46, %40
  %55 = add nuw nsw i32 %41, 1
  %56 = icmp eq %"struct.v8::internal::wasm::AsmJsParser::BlockInfo"* %43, %23
  br i1 %56, label %57, label %40

57:                                               ; preds = %54, %37, %18
  %58 = getelementptr inbounds %"class.v8::internal::wasm::AsmJsParser", %"class.v8::internal::wasm::AsmJsParser"* %0, i64 0, i32 17
  store i8 1, i8* %58, align 4
  %59 = getelementptr inbounds %"class.v8::internal::wasm::AsmJsParser", %"class.v8::internal::wasm::AsmJsParser"* %0, i64 0, i32 18
  store i8* getelementptr inbounds ([14 x i8], [14 x i8]* @.str.51, i64 0, i64 0), i8** %59, align 8
  %60 = getelementptr inbounds %"class.v8::internal::wasm::AsmJsParser", %"class.v8::internal::wasm::AsmJsParser"* %0, i64 0, i32 1, i32 5
  %61 = load i64, i64* %60, align 8
  %62 = trunc i64 %61 to i32
  %63 = getelementptr inbounds %"class.v8::internal::wasm::AsmJsParser", %"class.v8::internal::wasm::AsmJsParser"* %0, i64 0, i32 19
  store i32 %62, i32* %63, align 8
  br label %82

64:                                               ; preds = %46, %50, %27, %33
  %65 = phi i32 [ %28, %33 ], [ %28, %27 ], [ %41, %50 ], [ %41, %46 ]
  %66 = getelementptr inbounds %"class.v8::internal::wasm::AsmJsParser", %"class.v8::internal::wasm::AsmJsParser"* %0, i64 0, i32 3
  %67 = load %"class.v8::internal::wasm::WasmFunctionBuilder"*, %"class.v8::internal::wasm::WasmFunctionBuilder"** %66, align 8
  tail call void @_ZN2v88internal4wasm19WasmFunctionBuilder4EmitENS1_10WasmOpcodeE(%"class.v8::internal::wasm::WasmFunctionBuilder"* %67, i32 12) #12
  %68 = load %"class.v8::internal::wasm::WasmFunctionBuilder"*, %"class.v8::internal::wasm::WasmFunctionBuilder"** %66, align 8
  tail call void @_ZN2v88internal4wasm19WasmFunctionBuilder8EmitI32VEi(%"class.v8::internal::wasm::WasmFunctionBuilder"* %68, i32 %65) #12
  %69 = load i32, i32* %3, align 8
  switch i32 %69, label %71 [
    i32 59, label %70
    i32 125, label %82
  ]

70:                                               ; preds = %64
  tail call void @_ZN2v88internal12AsmJsScanner4NextEv(%"class.v8::internal::AsmJsScanner"* %2) #12
  br label %82

71:                                               ; preds = %64
  %72 = getelementptr inbounds %"class.v8::internal::wasm::AsmJsParser", %"class.v8::internal::wasm::AsmJsParser"* %0, i64 0, i32 1, i32 20
  %73 = load i8, i8* %72, align 4, !range !69
  %74 = icmp eq i8 %73, 0
  br i1 %74, label %75, label %82

75:                                               ; preds = %71
  %76 = getelementptr inbounds %"class.v8::internal::wasm::AsmJsParser", %"class.v8::internal::wasm::AsmJsParser"* %0, i64 0, i32 17
  store i8 1, i8* %76, align 4
  %77 = getelementptr inbounds %"class.v8::internal::wasm::AsmJsParser", %"class.v8::internal::wasm::AsmJsParser"* %0, i64 0, i32 18
  store i8* getelementptr inbounds ([11 x i8], [11 x i8]* @.str.1, i64 0, i64 0), i8** %77, align 8
  %78 = getelementptr inbounds %"class.v8::internal::wasm::AsmJsParser", %"class.v8::internal::wasm::AsmJsParser"* %0, i64 0, i32 1, i32 5
  %79 = load i64, i64* %78, align 8
  %80 = trunc i64 %79 to i32
  %81 = getelementptr inbounds %"class.v8::internal::wasm::AsmJsParser", %"class.v8::internal::wasm::AsmJsParser"* %0, i64 0, i32 19
  store i32 %80, i32* %81, align 8
  br label %82

82:                                               ; preds = %75, %71, %70, %64, %57, %6
  ret void
}

; Function Attrs: nounwind ssp uwtable
define hidden void @_ZN2v88internal4wasm11AsmJsParser17ContinueStatementEv(%"class.v8::internal::wasm::AsmJsParser"*) local_unnamed_addr #0 align 2 {
  %2 = getelementptr inbounds %"class.v8::internal::wasm::AsmJsParser", %"class.v8::internal::wasm::AsmJsParser"* %0, i64 0, i32 1
  %3 = getelementptr inbounds %"class.v8::internal::wasm::AsmJsParser", %"class.v8::internal::wasm::AsmJsParser"* %0, i64 0, i32 1, i32 1
  %4 = load i32, i32* %3, align 8
  %5 = icmp eq i32 %4, -9957
  br i1 %5, label %13, label %6

6:                                                ; preds = %1
  %7 = getelementptr inbounds %"class.v8::internal::wasm::AsmJsParser", %"class.v8::internal::wasm::AsmJsParser"* %0, i64 0, i32 17
  store i8 1, i8* %7, align 4
  %8 = getelementptr inbounds %"class.v8::internal::wasm::AsmJsParser", %"class.v8::internal::wasm::AsmJsParser"* %0, i64 0, i32 18
  store i8* getelementptr inbounds ([17 x i8], [17 x i8]* @.str.3, i64 0, i64 0), i8** %8, align 8
  %9 = getelementptr inbounds %"class.v8::internal::wasm::AsmJsParser", %"class.v8::internal::wasm::AsmJsParser"* %0, i64 0, i32 1, i32 5
  %10 = load i64, i64* %9, align 8
  %11 = trunc i64 %10 to i32
  %12 = getelementptr inbounds %"class.v8::internal::wasm::AsmJsParser", %"class.v8::internal::wasm::AsmJsParser"* %0, i64 0, i32 19
  store i32 %11, i32* %12, align 8
  br label %75

13:                                               ; preds = %1
  tail call void @_ZN2v88internal12AsmJsScanner4NextEv(%"class.v8::internal::AsmJsScanner"* %2) #12
  %14 = load i32, i32* %3, align 8
  %15 = add i32 %14, 9999
  %16 = icmp ugt i32 %15, 10254
  br i1 %16, label %17, label %18

17:                                               ; preds = %13
  tail call void @_ZN2v88internal12AsmJsScanner4NextEv(%"class.v8::internal::AsmJsScanner"* %2) #12
  br label %18

18:                                               ; preds = %13, %17
  %19 = phi i32 [ %14, %17 ], [ 0, %13 ]
  %20 = getelementptr inbounds %"class.v8::internal::wasm::AsmJsParser", %"class.v8::internal::wasm::AsmJsParser"* %0, i64 0, i32 25, i32 0, i32 0, i32 1
  %21 = load %"struct.v8::internal::wasm::AsmJsParser::BlockInfo"*, %"struct.v8::internal::wasm::AsmJsParser::BlockInfo"** %20, align 8
  %22 = getelementptr inbounds %"class.v8::internal::wasm::AsmJsParser", %"class.v8::internal::wasm::AsmJsParser"* %0, i64 0, i32 25, i32 0, i32 0, i32 0
  %23 = load %"struct.v8::internal::wasm::AsmJsParser::BlockInfo"*, %"struct.v8::internal::wasm::AsmJsParser::BlockInfo"** %22, align 8
  %24 = icmp eq %"struct.v8::internal::wasm::AsmJsParser::BlockInfo"* %21, %23
  br i1 %24, label %51, label %25

25:                                               ; preds = %18
  %26 = icmp eq i32 %19, 0
  br i1 %26, label %27, label %37

27:                                               ; preds = %25, %34
  %28 = phi i32 [ %35, %34 ], [ 0, %25 ]
  %29 = phi %"struct.v8::internal::wasm::AsmJsParser::BlockInfo"* [ %30, %34 ], [ %21, %25 ]
  %30 = getelementptr inbounds %"struct.v8::internal::wasm::AsmJsParser::BlockInfo", %"struct.v8::internal::wasm::AsmJsParser::BlockInfo"* %29, i64 -1
  %31 = getelementptr inbounds %"struct.v8::internal::wasm::AsmJsParser::BlockInfo", %"struct.v8::internal::wasm::AsmJsParser::BlockInfo"* %30, i64 0, i32 0
  %32 = load i32, i32* %31, align 4
  %33 = icmp eq i32 %32, 1
  br i1 %33, label %58, label %34

34:                                               ; preds = %27
  %35 = add nuw nsw i32 %28, 1
  %36 = icmp eq %"struct.v8::internal::wasm::AsmJsParser::BlockInfo"* %30, %23
  br i1 %36, label %51, label %27

37:                                               ; preds = %25, %48
  %38 = phi i32 [ %49, %48 ], [ 0, %25 ]
  %39 = phi %"struct.v8::internal::wasm::AsmJsParser::BlockInfo"* [ %40, %48 ], [ %21, %25 ]
  %40 = getelementptr inbounds %"struct.v8::internal::wasm::AsmJsParser::BlockInfo", %"struct.v8::internal::wasm::AsmJsParser::BlockInfo"* %39, i64 -1
  %41 = getelementptr inbounds %"struct.v8::internal::wasm::AsmJsParser::BlockInfo", %"struct.v8::internal::wasm::AsmJsParser::BlockInfo"* %40, i64 0, i32 0
  %42 = load i32, i32* %41, align 4
  %43 = icmp eq i32 %42, 1
  br i1 %43, label %44, label %48

44:                                               ; preds = %37
  %45 = getelementptr inbounds %"struct.v8::internal::wasm::AsmJsParser::BlockInfo", %"struct.v8::internal::wasm::AsmJsParser::BlockInfo"* %39, i64 -1, i32 1
  %46 = load i32, i32* %45, align 4
  %47 = icmp eq i32 %46, %19
  br i1 %47, label %58, label %48

48:                                               ; preds = %44, %37
  %49 = add nuw nsw i32 %38, 1
  %50 = icmp eq %"struct.v8::internal::wasm::AsmJsParser::BlockInfo"* %40, %23
  br i1 %50, label %51, label %37

51:                                               ; preds = %48, %34, %18
  %52 = getelementptr inbounds %"class.v8::internal::wasm::AsmJsParser", %"class.v8::internal::wasm::AsmJsParser"* %0, i64 0, i32 17
  store i8 1, i8* %52, align 4
  %53 = getelementptr inbounds %"class.v8::internal::wasm::AsmJsParser", %"class.v8::internal::wasm::AsmJsParser"* %0, i64 0, i32 18
  store i8* getelementptr inbounds ([17 x i8], [17 x i8]* @.str.52, i64 0, i64 0), i8** %53, align 8
  %54 = getelementptr inbounds %"class.v8::internal::wasm::AsmJsParser", %"class.v8::internal::wasm::AsmJsParser"* %0, i64 0, i32 1, i32 5
  %55 = load i64, i64* %54, align 8
  %56 = trunc i64 %55 to i32
  %57 = getelementptr inbounds %"class.v8::internal::wasm::AsmJsParser", %"class.v8::internal::wasm::AsmJsParser"* %0, i64 0, i32 19
  store i32 %56, i32* %57, align 8
  br label %75

58:                                               ; preds = %44, %27
  %59 = phi i32 [ %28, %27 ], [ %38, %44 ]
  %60 = getelementptr inbounds %"class.v8::internal::wasm::AsmJsParser", %"class.v8::internal::wasm::AsmJsParser"* %0, i64 0, i32 3
  %61 = load %"class.v8::internal::wasm::WasmFunctionBuilder"*, %"class.v8::internal::wasm::WasmFunctionBuilder"** %60, align 8
  tail call void @_ZN2v88internal4wasm19WasmFunctionBuilder12EmitWithI32VENS1_10WasmOpcodeEi(%"class.v8::internal::wasm::WasmFunctionBuilder"* %61, i32 12, i32 %59) #12
  %62 = load i32, i32* %3, align 8
  switch i32 %62, label %64 [
    i32 59, label %63
    i32 125, label %75
  ]

63:                                               ; preds = %58
  tail call void @_ZN2v88internal12AsmJsScanner4NextEv(%"class.v8::internal::AsmJsScanner"* %2) #12
  br label %75

64:                                               ; preds = %58
  %65 = getelementptr inbounds %"class.v8::internal::wasm::AsmJsParser", %"class.v8::internal::wasm::AsmJsParser"* %0, i64 0, i32 1, i32 20
  %66 = load i8, i8* %65, align 4, !range !69
  %67 = icmp eq i8 %66, 0
  br i1 %67, label %68, label %75

68:                                               ; preds = %64
  %69 = getelementptr inbounds %"class.v8::internal::wasm::AsmJsParser", %"class.v8::internal::wasm::AsmJsParser"* %0, i64 0, i32 17
  store i8 1, i8* %69, align 4
  %70 = getelementptr inbounds %"class.v8::internal::wasm::AsmJsParser", %"class.v8::internal::wasm::AsmJsParser"* %0, i64 0, i32 18
  store i8* getelementptr inbounds ([11 x i8], [11 x i8]* @.str.1, i64 0, i64 0), i8** %70, align 8
  %71 = getelementptr inbounds %"class.v8::internal::wasm::AsmJsParser", %"class.v8::internal::wasm::AsmJsParser"* %0, i64 0, i32 1, i32 5
  %72 = load i64, i64* %71, align 8
  %73 = trunc i64 %72 to i32
  %74 = getelementptr inbounds %"class.v8::internal::wasm::AsmJsParser", %"class.v8::internal::wasm::AsmJsParser"* %0, i64 0, i32 19
  store i32 %73, i32* %74, align 8
  br label %75

75:                                               ; preds = %68, %64, %63, %58, %51, %6
  ret void
}

; Function Attrs: nounwind ssp uwtable
define hidden void @_ZN2v88internal4wasm11AsmJsParser15SwitchStatementEv(%"class.v8::internal::wasm::AsmJsParser"*) local_unnamed_addr #0 align 2 {
  %2 = alloca %"class.v8::internal::wasm::AsmJsParser::CachedVector.212", align 8
  %3 = getelementptr inbounds %"class.v8::internal::wasm::AsmJsParser", %"class.v8::internal::wasm::AsmJsParser"* %0, i64 0, i32 1
  %4 = getelementptr inbounds %"class.v8::internal::wasm::AsmJsParser", %"class.v8::internal::wasm::AsmJsParser"* %0, i64 0, i32 1, i32 1
  %5 = load i32, i32* %4, align 8
  %6 = icmp eq i32 %5, -9947
  br i1 %6, label %14, label %7

7:                                                ; preds = %1
  %8 = getelementptr inbounds %"class.v8::internal::wasm::AsmJsParser", %"class.v8::internal::wasm::AsmJsParser"* %0, i64 0, i32 17
  store i8 1, i8* %8, align 4
  %9 = getelementptr inbounds %"class.v8::internal::wasm::AsmJsParser", %"class.v8::internal::wasm::AsmJsParser"* %0, i64 0, i32 18
  store i8* getelementptr inbounds ([17 x i8], [17 x i8]* @.str.3, i64 0, i64 0), i8** %9, align 8
  %10 = getelementptr inbounds %"class.v8::internal::wasm::AsmJsParser", %"class.v8::internal::wasm::AsmJsParser"* %0, i64 0, i32 1, i32 5
  %11 = load i64, i64* %10, align 8
  %12 = trunc i64 %11 to i32
  %13 = getelementptr inbounds %"class.v8::internal::wasm::AsmJsParser", %"class.v8::internal::wasm::AsmJsParser"* %0, i64 0, i32 19
  store i32 %12, i32* %13, align 8
  br label %500

14:                                               ; preds = %1
  tail call void @_ZN2v88internal12AsmJsScanner4NextEv(%"class.v8::internal::AsmJsScanner"* %3) #12
  %15 = load i32, i32* %4, align 8
  %16 = icmp eq i32 %15, 40
  br i1 %16, label %24, label %17

17:                                               ; preds = %14
  %18 = getelementptr inbounds %"class.v8::internal::wasm::AsmJsParser", %"class.v8::internal::wasm::AsmJsParser"* %0, i64 0, i32 17
  store i8 1, i8* %18, align 4
  %19 = getelementptr inbounds %"class.v8::internal::wasm::AsmJsParser", %"class.v8::internal::wasm::AsmJsParser"* %0, i64 0, i32 18
  store i8* getelementptr inbounds ([17 x i8], [17 x i8]* @.str.3, i64 0, i64 0), i8** %19, align 8
  %20 = getelementptr inbounds %"class.v8::internal::wasm::AsmJsParser", %"class.v8::internal::wasm::AsmJsParser"* %0, i64 0, i32 1, i32 5
  %21 = load i64, i64* %20, align 8
  %22 = trunc i64 %21 to i32
  %23 = getelementptr inbounds %"class.v8::internal::wasm::AsmJsParser", %"class.v8::internal::wasm::AsmJsParser"* %0, i64 0, i32 19
  store i32 %22, i32* %23, align 8
  br label %500

24:                                               ; preds = %14
  tail call void @_ZN2v88internal12AsmJsScanner4NextEv(%"class.v8::internal::AsmJsScanner"* %3) #12
  %25 = tail call i64 @_ZN2v88internal23GetCurrentStackPositionEv() #12
  %26 = getelementptr inbounds %"class.v8::internal::wasm::AsmJsParser", %"class.v8::internal::wasm::AsmJsParser"* %0, i64 0, i32 5
  %27 = load i64, i64* %26, align 8
  %28 = icmp ult i64 %25, %27
  br i1 %28, label %29, label %36

29:                                               ; preds = %24
  %30 = getelementptr inbounds %"class.v8::internal::wasm::AsmJsParser", %"class.v8::internal::wasm::AsmJsParser"* %0, i64 0, i32 17
  store i8 1, i8* %30, align 4
  %31 = getelementptr inbounds %"class.v8::internal::wasm::AsmJsParser", %"class.v8::internal::wasm::AsmJsParser"* %0, i64 0, i32 18
  store i8* getelementptr inbounds ([44 x i8], [44 x i8]* @.str.2, i64 0, i64 0), i8** %31, align 8
  %32 = getelementptr inbounds %"class.v8::internal::wasm::AsmJsParser", %"class.v8::internal::wasm::AsmJsParser"* %0, i64 0, i32 1, i32 5
  %33 = load i64, i64* %32, align 8
  %34 = trunc i64 %33 to i32
  %35 = getelementptr inbounds %"class.v8::internal::wasm::AsmJsParser", %"class.v8::internal::wasm::AsmJsParser"* %0, i64 0, i32 19
  store i32 %34, i32* %35, align 8
  br label %500

36:                                               ; preds = %24
  %37 = tail call %"class.v8::internal::wasm::AsmType"* @_ZN2v88internal4wasm11AsmJsParser10ExpressionEPNS1_7AsmTypeE(%"class.v8::internal::wasm::AsmJsParser"* %0, %"class.v8::internal::wasm::AsmType"* null)
  %38 = getelementptr inbounds %"class.v8::internal::wasm::AsmJsParser", %"class.v8::internal::wasm::AsmJsParser"* %0, i64 0, i32 17
  %39 = load i8, i8* %38, align 4, !range !69
  %40 = icmp eq i8 %39, 0
  br i1 %40, label %41, label %500

41:                                               ; preds = %36
  %42 = tail call zeroext i1 @_ZN2v88internal4wasm7AsmType3IsAEPS2_(%"class.v8::internal::wasm::AsmType"* %37, %"class.v8::internal::wasm::AsmType"* nonnull inttoptr (i64 1825 to %"class.v8::internal::wasm::AsmType"*)) #12
  br i1 %42, label %49, label %43

43:                                               ; preds = %41
  store i8 1, i8* %38, align 4
  %44 = getelementptr inbounds %"class.v8::internal::wasm::AsmJsParser", %"class.v8::internal::wasm::AsmJsParser"* %0, i64 0, i32 18
  store i8* getelementptr inbounds ([33 x i8], [33 x i8]* @.str.54, i64 0, i64 0), i8** %44, align 8
  %45 = getelementptr inbounds %"class.v8::internal::wasm::AsmJsParser", %"class.v8::internal::wasm::AsmJsParser"* %0, i64 0, i32 1, i32 5
  %46 = load i64, i64* %45, align 8
  %47 = trunc i64 %46 to i32
  %48 = getelementptr inbounds %"class.v8::internal::wasm::AsmJsParser", %"class.v8::internal::wasm::AsmJsParser"* %0, i64 0, i32 19
  store i32 %47, i32* %48, align 8
  br label %500

49:                                               ; preds = %41
  %50 = load i32, i32* %4, align 8
  %51 = icmp eq i32 %50, 41
  br i1 %51, label %58, label %52

52:                                               ; preds = %49
  store i8 1, i8* %38, align 4
  %53 = getelementptr inbounds %"class.v8::internal::wasm::AsmJsParser", %"class.v8::internal::wasm::AsmJsParser"* %0, i64 0, i32 18
  store i8* getelementptr inbounds ([17 x i8], [17 x i8]* @.str.3, i64 0, i64 0), i8** %53, align 8
  %54 = getelementptr inbounds %"class.v8::internal::wasm::AsmJsParser", %"class.v8::internal::wasm::AsmJsParser"* %0, i64 0, i32 1, i32 5
  %55 = load i64, i64* %54, align 8
  %56 = trunc i64 %55 to i32
  %57 = getelementptr inbounds %"class.v8::internal::wasm::AsmJsParser", %"class.v8::internal::wasm::AsmJsParser"* %0, i64 0, i32 19
  store i32 %56, i32* %57, align 8
  br label %500

58:                                               ; preds = %49
  tail call void @_ZN2v88internal12AsmJsScanner4NextEv(%"class.v8::internal::AsmJsScanner"* %3) #12
  %59 = getelementptr inbounds %"class.v8::internal::wasm::AsmJsParser", %"class.v8::internal::wasm::AsmJsParser"* %0, i64 0, i32 15
  %60 = load i32, i32* %59, align 4
  %61 = icmp sgt i32 %60, 0
  br i1 %61, label %63, label %62

62:                                               ; preds = %58
  store i32 1, i32* %59, align 4
  br label %63

63:                                               ; preds = %58, %62
  %64 = getelementptr inbounds %"class.v8::internal::wasm::AsmJsParser", %"class.v8::internal::wasm::AsmJsParser"* %0, i64 0, i32 14
  %65 = load i32, i32* %64, align 8
  %66 = getelementptr inbounds %"class.v8::internal::wasm::AsmJsParser", %"class.v8::internal::wasm::AsmJsParser"* %0, i64 0, i32 3
  %67 = load %"class.v8::internal::wasm::WasmFunctionBuilder"*, %"class.v8::internal::wasm::WasmFunctionBuilder"** %66, align 8
  tail call void @_ZN2v88internal4wasm19WasmFunctionBuilder12EmitSetLocalEj(%"class.v8::internal::wasm::WasmFunctionBuilder"* %67, i32 %65) #12
  %68 = getelementptr inbounds %"class.v8::internal::wasm::AsmJsParser", %"class.v8::internal::wasm::AsmJsParser"* %0, i64 0, i32 40
  %69 = load i32, i32* %68, align 4
  tail call void @_ZN2v88internal4wasm11AsmJsParser9BareBeginENS2_9BlockKindEi(%"class.v8::internal::wasm::AsmJsParser"* %0, i32 0, i32 %69) #12
  %70 = load %"class.v8::internal::wasm::WasmFunctionBuilder"*, %"class.v8::internal::wasm::WasmFunctionBuilder"** %66, align 8
  tail call void @_ZN2v88internal4wasm19WasmFunctionBuilder10EmitWithU8ENS1_10WasmOpcodeEh(%"class.v8::internal::wasm::WasmFunctionBuilder"* %70, i32 2, i8 zeroext 64) #12
  store i32 0, i32* %68, align 4
  %71 = bitcast %"class.v8::internal::wasm::AsmJsParser::CachedVector.212"* %2 to i8*
  call void @llvm.lifetime.start.p0i8(i64 40, i8* nonnull %71) #12
  %72 = getelementptr inbounds %"class.v8::internal::wasm::AsmJsParser", %"class.v8::internal::wasm::AsmJsParser"* %0, i64 0, i32 13
  %73 = getelementptr inbounds %"class.v8::internal::wasm::AsmJsParser", %"class.v8::internal::wasm::AsmJsParser"* %0, i64 0, i32 13, i32 0, i32 0, i32 0, i32 2, i32 1, i32 0, i32 0
  %74 = bitcast %"class.v8::internal::Zone"** %73 to i64*
  %75 = load i64, i64* %74, align 8
  %76 = getelementptr inbounds %"class.v8::internal::wasm::AsmJsParser::CachedVector.212", %"class.v8::internal::wasm::AsmJsParser::CachedVector.212"* %2, i64 0, i32 0, i32 0, i32 0, i32 2, i32 1
  %77 = bitcast %"struct.std::__1::__compressed_pair_elem.134"* %76 to i64*
  call void @llvm.memset.p0i8.i64(i8* nonnull align 8 %71, i8 0, i64 24, i1 false) #12
  store i64 %75, i64* %77, align 8
  %78 = getelementptr inbounds %"class.v8::internal::wasm::AsmJsParser::CachedVector.212", %"class.v8::internal::wasm::AsmJsParser::CachedVector.212"* %2, i64 0, i32 1
  store %"class.v8::internal::wasm::AsmJsParser::CachedVectors.190"* %72, %"class.v8::internal::wasm::AsmJsParser::CachedVectors.190"** %78, align 8
  %79 = getelementptr inbounds %"class.v8::internal::wasm::AsmJsParser::CachedVectors.190", %"class.v8::internal::wasm::AsmJsParser::CachedVectors.190"* %72, i64 0, i32 0, i32 0, i32 0, i32 0
  %80 = load %"class.v8::internal::ZoneVector.129"*, %"class.v8::internal::ZoneVector.129"** %79, align 8
  %81 = getelementptr inbounds %"class.v8::internal::wasm::AsmJsParser", %"class.v8::internal::wasm::AsmJsParser"* %0, i64 0, i32 13, i32 0, i32 0, i32 0, i32 1
  %82 = load %"class.v8::internal::ZoneVector.129"*, %"class.v8::internal::ZoneVector.129"** %81, align 8
  %83 = icmp eq %"class.v8::internal::ZoneVector.129"* %80, %82
  br i1 %83, label %112, label %84

84:                                               ; preds = %63
  %85 = getelementptr inbounds %"class.v8::internal::ZoneVector.129", %"class.v8::internal::ZoneVector.129"* %82, i64 -1, i32 0
  %86 = bitcast %"class.std::__1::vector.130"* %85 to i64*
  %87 = load i64, i64* %86, align 8
  %88 = bitcast %"class.v8::internal::wasm::AsmJsParser::CachedVector.212"* %2 to i64*
  store i64 0, i64* %86, align 8
  store i64 %87, i64* %88, align 8
  %89 = getelementptr inbounds %"class.v8::internal::ZoneVector.129", %"class.v8::internal::ZoneVector.129"* %82, i64 -1, i32 0, i32 0, i32 1
  %90 = getelementptr inbounds %"class.v8::internal::wasm::AsmJsParser::CachedVector.212", %"class.v8::internal::wasm::AsmJsParser::CachedVector.212"* %2, i64 0, i32 0, i32 0, i32 0, i32 1
  %91 = bitcast i32** %89 to i64*
  %92 = load i64, i64* %91, align 8
  %93 = bitcast i32** %90 to i64*
  %94 = load i64, i64* %93, align 8
  store i64 %94, i64* %91, align 8
  store i64 %92, i64* %93, align 8
  %95 = getelementptr inbounds %"class.v8::internal::ZoneVector.129", %"class.v8::internal::ZoneVector.129"* %82, i64 -1, i32 0, i32 0, i32 2, i32 0, i32 0
  %96 = getelementptr inbounds %"class.v8::internal::wasm::AsmJsParser::CachedVector.212", %"class.v8::internal::wasm::AsmJsParser::CachedVector.212"* %2, i64 0, i32 0, i32 0, i32 0, i32 2, i32 0, i32 0
  %97 = bitcast i32** %95 to i64*
  %98 = load i64, i64* %97, align 8
  %99 = bitcast i32** %96 to i64*
  %100 = load i64, i64* %99, align 8
  store i64 %100, i64* %97, align 8
  store i64 %98, i64* %99, align 8
  %101 = load %"class.v8::internal::ZoneVector.129"*, %"class.v8::internal::ZoneVector.129"** %81, align 8
  %102 = getelementptr inbounds %"class.v8::internal::ZoneVector.129", %"class.v8::internal::ZoneVector.129"* %101, i64 -1
  %103 = getelementptr inbounds %"class.v8::internal::ZoneVector.129", %"class.v8::internal::ZoneVector.129"* %102, i64 0, i32 0, i32 0, i32 0
  %104 = load i32*, i32** %103, align 8
  %105 = icmp eq i32* %104, null
  br i1 %105, label %110, label %106

106:                                              ; preds = %84
  %107 = ptrtoint i32* %104 to i64
  %108 = getelementptr inbounds %"class.v8::internal::ZoneVector.129", %"class.v8::internal::ZoneVector.129"* %101, i64 -1, i32 0, i32 0, i32 1
  %109 = bitcast i32** %108 to i64*
  store i64 %107, i64* %109, align 8
  br label %110

110:                                              ; preds = %106, %84
  store %"class.v8::internal::ZoneVector.129"* %102, %"class.v8::internal::ZoneVector.129"** %81, align 8
  %111 = load i64, i64* %88, align 8
  store i64 %111, i64* %93, align 8
  br label %112

112:                                              ; preds = %63, %110
  %113 = getelementptr inbounds %"class.v8::internal::wasm::AsmJsParser::CachedVector.212", %"class.v8::internal::wasm::AsmJsParser::CachedVector.212"* %2, i64 0, i32 0
  call void @_ZN2v88internal4wasm11AsmJsParser11GatherCasesEPNS0_10ZoneVectorIiEE(%"class.v8::internal::wasm::AsmJsParser"* %0, %"class.v8::internal::ZoneVector.129"* nonnull %113)
  %114 = load i32, i32* %4, align 8
  %115 = icmp eq i32 %114, 123
  br i1 %115, label %122, label %116

116:                                              ; preds = %112
  store i8 1, i8* %38, align 4
  %117 = getelementptr inbounds %"class.v8::internal::wasm::AsmJsParser", %"class.v8::internal::wasm::AsmJsParser"* %0, i64 0, i32 18
  store i8* getelementptr inbounds ([17 x i8], [17 x i8]* @.str.3, i64 0, i64 0), i8** %117, align 8
  %118 = getelementptr inbounds %"class.v8::internal::wasm::AsmJsParser", %"class.v8::internal::wasm::AsmJsParser"* %0, i64 0, i32 1, i32 5
  %119 = load i64, i64* %118, align 8
  %120 = trunc i64 %119 to i32
  %121 = getelementptr inbounds %"class.v8::internal::wasm::AsmJsParser", %"class.v8::internal::wasm::AsmJsParser"* %0, i64 0, i32 19
  store i32 %120, i32* %121, align 8
  br label %460

122:                                              ; preds = %112
  call void @_ZN2v88internal12AsmJsScanner4NextEv(%"class.v8::internal::AsmJsScanner"* %3) #12
  %123 = getelementptr inbounds %"class.v8::internal::wasm::AsmJsParser::CachedVector.212", %"class.v8::internal::wasm::AsmJsParser::CachedVector.212"* %2, i64 0, i32 0, i32 0, i32 0, i32 1
  %124 = bitcast i32** %123 to i64*
  %125 = load i64, i64* %124, align 8
  %126 = bitcast %"class.v8::internal::wasm::AsmJsParser::CachedVector.212"* %2 to i64*
  %127 = load i64, i64* %126, align 8
  %128 = sub i64 %125, %127
  %129 = ashr exact i64 %128, 2
  %130 = add nsw i64 %129, 1
  %131 = icmp eq i64 %130, 0
  %132 = inttoptr i64 %127 to i32*
  %133 = inttoptr i64 %125 to i32*
  br i1 %131, label %147, label %134

134:                                              ; preds = %122
  %135 = getelementptr inbounds %"class.v8::internal::wasm::AsmJsParser", %"class.v8::internal::wasm::AsmJsParser"* %0, i64 0, i32 25, i32 0
  %136 = getelementptr inbounds %"class.v8::internal::wasm::AsmJsParser", %"class.v8::internal::wasm::AsmJsParser"* %0, i64 0, i32 25, i32 0, i32 0, i32 1
  %137 = getelementptr inbounds %"class.v8::internal::wasm::AsmJsParser", %"class.v8::internal::wasm::AsmJsParser"* %0, i64 0, i32 25, i32 0, i32 0, i32 2, i32 0, i32 0
  %138 = bitcast %"struct.v8::internal::wasm::AsmJsParser::BlockInfo"** %136 to i64*
  %139 = bitcast %"class.std::__1::vector.199"* %135 to i64*
  %140 = bitcast %"struct.v8::internal::wasm::AsmJsParser::BlockInfo"** %137 to i64*
  %141 = getelementptr inbounds %"class.v8::internal::wasm::AsmJsParser", %"class.v8::internal::wasm::AsmJsParser"* %0, i64 0, i32 25, i32 0, i32 0, i32 2, i32 1, i32 0, i32 0
  %142 = getelementptr inbounds %"class.std::__1::vector.199", %"class.std::__1::vector.199"* %135, i64 0, i32 0, i32 0
  br label %151

143:                                              ; preds = %382
  %144 = getelementptr inbounds %"class.v8::internal::wasm::AsmJsParser::CachedVector.212", %"class.v8::internal::wasm::AsmJsParser::CachedVector.212"* %2, i64 0, i32 0, i32 0, i32 0, i32 0
  %145 = load i32*, i32** %144, align 8
  %146 = load i32*, i32** %123, align 8
  br label %147

147:                                              ; preds = %143, %122
  %148 = phi i32* [ %146, %143 ], [ %133, %122 ]
  %149 = phi i32* [ %145, %143 ], [ %132, %122 ]
  %150 = icmp eq i32* %149, %148
  br i1 %150, label %386, label %393

151:                                              ; preds = %382, %134
  %152 = phi i64 [ 0, %134 ], [ %384, %382 ]
  %153 = load %"struct.v8::internal::wasm::AsmJsParser::BlockInfo"*, %"struct.v8::internal::wasm::AsmJsParser::BlockInfo"** %136, align 8
  %154 = load %"struct.v8::internal::wasm::AsmJsParser::BlockInfo"*, %"struct.v8::internal::wasm::AsmJsParser::BlockInfo"** %137, align 8
  %155 = icmp eq %"struct.v8::internal::wasm::AsmJsParser::BlockInfo"* %153, %154
  %156 = ptrtoint %"struct.v8::internal::wasm::AsmJsParser::BlockInfo"* %154 to i64
  br i1 %155, label %161, label %157

157:                                              ; preds = %151
  %158 = bitcast %"struct.v8::internal::wasm::AsmJsParser::BlockInfo"* %153 to i64*
  store i64 3, i64* %158, align 4
  %159 = getelementptr inbounds %"struct.v8::internal::wasm::AsmJsParser::BlockInfo", %"struct.v8::internal::wasm::AsmJsParser::BlockInfo"* %153, i64 1
  %160 = ptrtoint %"struct.v8::internal::wasm::AsmJsParser::BlockInfo"* %159 to i64
  store i64 %160, i64* %138, align 8
  br label %382

161:                                              ; preds = %151
  %162 = ptrtoint %"struct.v8::internal::wasm::AsmJsParser::BlockInfo"* %153 to i64
  %163 = load i64, i64* %139, align 8
  %164 = sub i64 %162, %163
  %165 = ashr exact i64 %164, 3
  %166 = add nsw i64 %165, 1
  %167 = icmp ugt i64 %166, 268435455
  br i1 %167, label %168, label %170

168:                                              ; preds = %161
  %169 = bitcast %"class.std::__1::vector.199"* %135 to %"class.std::__1::__vector_base_common"*
  call void @_ZNKSt3__120__vector_base_commonILb1EE20__throw_length_errorEv(%"class.std::__1::__vector_base_common"* %169) #13
  unreachable

170:                                              ; preds = %161
  %171 = sub i64 %156, %163
  %172 = ashr exact i64 %171, 3
  %173 = icmp ult i64 %172, 134217727
  br i1 %173, label %174, label %179

174:                                              ; preds = %170
  %175 = ashr exact i64 %171, 2
  %176 = icmp ult i64 %175, %166
  %177 = select i1 %176, i64 %166, i64 %175
  %178 = icmp eq i64 %177, 0
  br i1 %178, label %196, label %179

179:                                              ; preds = %174, %170
  %180 = phi i64 [ %177, %174 ], [ 268435455, %170 ]
  %181 = load %"class.v8::internal::Zone"*, %"class.v8::internal::Zone"** %141, align 8
  %182 = shl i64 %180, 3
  %183 = getelementptr inbounds %"class.v8::internal::Zone", %"class.v8::internal::Zone"* %181, i64 0, i32 2
  %184 = load i64, i64* %183, align 8
  %185 = getelementptr inbounds %"class.v8::internal::Zone", %"class.v8::internal::Zone"* %181, i64 0, i32 3
  %186 = load i64, i64* %185, align 8
  %187 = sub i64 %186, %184
  %188 = icmp ugt i64 %182, %187
  br i1 %188, label %189, label %191, !prof !2

189:                                              ; preds = %179
  %190 = call i64 @_ZN2v88internal4Zone9NewExpandEm(%"class.v8::internal::Zone"* %181, i64 %182) #12
  br label %193

191:                                              ; preds = %179
  %192 = add i64 %184, %182
  store i64 %192, i64* %183, align 8
  br label %193

193:                                              ; preds = %191, %189
  %194 = phi i64 [ %190, %189 ], [ %184, %191 ]
  %195 = inttoptr i64 %194 to %"struct.v8::internal::wasm::AsmJsParser::BlockInfo"*
  br label %196

196:                                              ; preds = %193, %174
  %197 = phi i64 [ %180, %193 ], [ 0, %174 ]
  %198 = phi %"struct.v8::internal::wasm::AsmJsParser::BlockInfo"* [ %195, %193 ], [ null, %174 ]
  %199 = getelementptr inbounds %"struct.v8::internal::wasm::AsmJsParser::BlockInfo", %"struct.v8::internal::wasm::AsmJsParser::BlockInfo"* %198, i64 %165
  %200 = getelementptr inbounds %"struct.v8::internal::wasm::AsmJsParser::BlockInfo", %"struct.v8::internal::wasm::AsmJsParser::BlockInfo"* %198, i64 %197
  %201 = ptrtoint %"struct.v8::internal::wasm::AsmJsParser::BlockInfo"* %200 to i64
  %202 = bitcast %"struct.v8::internal::wasm::AsmJsParser::BlockInfo"* %199 to i64*
  store i64 3, i64* %202, align 4
  %203 = getelementptr inbounds %"struct.v8::internal::wasm::AsmJsParser::BlockInfo", %"struct.v8::internal::wasm::AsmJsParser::BlockInfo"* %199, i64 1
  %204 = ptrtoint %"struct.v8::internal::wasm::AsmJsParser::BlockInfo"* %203 to i64
  %205 = load %"struct.v8::internal::wasm::AsmJsParser::BlockInfo"*, %"struct.v8::internal::wasm::AsmJsParser::BlockInfo"** %142, align 8
  %206 = ptrtoint %"struct.v8::internal::wasm::AsmJsParser::BlockInfo"* %205 to i64
  %207 = load %"struct.v8::internal::wasm::AsmJsParser::BlockInfo"*, %"struct.v8::internal::wasm::AsmJsParser::BlockInfo"** %136, align 8
  %208 = icmp eq %"struct.v8::internal::wasm::AsmJsParser::BlockInfo"* %207, %205
  br i1 %208, label %379, label %209

209:                                              ; preds = %196
  %210 = getelementptr %"struct.v8::internal::wasm::AsmJsParser::BlockInfo", %"struct.v8::internal::wasm::AsmJsParser::BlockInfo"* %207, i64 -1
  %211 = ptrtoint %"struct.v8::internal::wasm::AsmJsParser::BlockInfo"* %210 to i64
  %212 = sub i64 %211, %206
  %213 = lshr i64 %212, 3
  %214 = add nuw nsw i64 %213, 1
  %215 = icmp ult i64 %214, 4
  br i1 %215, label %309, label %216

216:                                              ; preds = %209
  %217 = getelementptr %"struct.v8::internal::wasm::AsmJsParser::BlockInfo", %"struct.v8::internal::wasm::AsmJsParser::BlockInfo"* %198, i64 -1
  %218 = getelementptr %"struct.v8::internal::wasm::AsmJsParser::BlockInfo", %"struct.v8::internal::wasm::AsmJsParser::BlockInfo"* %207, i64 -1
  %219 = ptrtoint %"struct.v8::internal::wasm::AsmJsParser::BlockInfo"* %218 to i64
  %220 = sub i64 %219, %206
  %221 = lshr i64 %220, 3
  %222 = sub nsw i64 %165, %221
  %223 = getelementptr %"struct.v8::internal::wasm::AsmJsParser::BlockInfo", %"struct.v8::internal::wasm::AsmJsParser::BlockInfo"* %217, i64 %222
  %224 = getelementptr %"struct.v8::internal::wasm::AsmJsParser::BlockInfo", %"struct.v8::internal::wasm::AsmJsParser::BlockInfo"* %207, i64 -1
  %225 = sub nsw i64 0, %221
  %226 = getelementptr %"struct.v8::internal::wasm::AsmJsParser::BlockInfo", %"struct.v8::internal::wasm::AsmJsParser::BlockInfo"* %224, i64 %225
  %227 = icmp ult %"struct.v8::internal::wasm::AsmJsParser::BlockInfo"* %223, %207
  %228 = icmp ult %"struct.v8::internal::wasm::AsmJsParser::BlockInfo"* %226, %199
  %229 = and i1 %227, %228
  br i1 %229, label %309, label %230

230:                                              ; preds = %216
  %231 = and i64 %214, 4611686018427387900
  %232 = sub nsw i64 0, %231
  %233 = getelementptr %"struct.v8::internal::wasm::AsmJsParser::BlockInfo", %"struct.v8::internal::wasm::AsmJsParser::BlockInfo"* %199, i64 %232
  %234 = sub nsw i64 0, %231
  %235 = getelementptr %"struct.v8::internal::wasm::AsmJsParser::BlockInfo", %"struct.v8::internal::wasm::AsmJsParser::BlockInfo"* %207, i64 %234
  %236 = add nsw i64 %231, -4
  %237 = lshr exact i64 %236, 2
  %238 = add nuw nsw i64 %237, 1
  %239 = and i64 %238, 1
  %240 = icmp eq i64 %236, 0
  br i1 %240, label %285, label %241

241:                                              ; preds = %230
  %242 = sub nuw nsw i64 %238, %239
  %243 = getelementptr %"struct.v8::internal::wasm::AsmJsParser::BlockInfo", %"struct.v8::internal::wasm::AsmJsParser::BlockInfo"* %199, i64 -1
  %244 = getelementptr %"struct.v8::internal::wasm::AsmJsParser::BlockInfo", %"struct.v8::internal::wasm::AsmJsParser::BlockInfo"* %207, i64 -1
  %245 = getelementptr %"struct.v8::internal::wasm::AsmJsParser::BlockInfo", %"struct.v8::internal::wasm::AsmJsParser::BlockInfo"* %199, i64 -1
  %246 = getelementptr %"struct.v8::internal::wasm::AsmJsParser::BlockInfo", %"struct.v8::internal::wasm::AsmJsParser::BlockInfo"* %207, i64 -1
  br label %247

247:                                              ; preds = %247, %241
  %248 = phi i64 [ 0, %241 ], [ %282, %247 ]
  %249 = phi i64 [ %242, %241 ], [ %283, %247 ]
  %250 = sub i64 0, %248
  %251 = sub i64 0, %248
  %252 = getelementptr inbounds %"struct.v8::internal::wasm::AsmJsParser::BlockInfo", %"struct.v8::internal::wasm::AsmJsParser::BlockInfo"* %243, i64 %250
  %253 = getelementptr inbounds %"struct.v8::internal::wasm::AsmJsParser::BlockInfo", %"struct.v8::internal::wasm::AsmJsParser::BlockInfo"* %244, i64 %251
  %254 = getelementptr inbounds %"struct.v8::internal::wasm::AsmJsParser::BlockInfo", %"struct.v8::internal::wasm::AsmJsParser::BlockInfo"* %253, i64 -1
  %255 = bitcast %"struct.v8::internal::wasm::AsmJsParser::BlockInfo"* %254 to <2 x i64>*
  %256 = load <2 x i64>, <2 x i64>* %255, align 4, !alias.scope !215
  %257 = getelementptr inbounds %"struct.v8::internal::wasm::AsmJsParser::BlockInfo", %"struct.v8::internal::wasm::AsmJsParser::BlockInfo"* %253, i64 -2
  %258 = getelementptr inbounds %"struct.v8::internal::wasm::AsmJsParser::BlockInfo", %"struct.v8::internal::wasm::AsmJsParser::BlockInfo"* %257, i64 -1
  %259 = bitcast %"struct.v8::internal::wasm::AsmJsParser::BlockInfo"* %258 to <2 x i64>*
  %260 = load <2 x i64>, <2 x i64>* %259, align 4, !alias.scope !215
  %261 = getelementptr inbounds %"struct.v8::internal::wasm::AsmJsParser::BlockInfo", %"struct.v8::internal::wasm::AsmJsParser::BlockInfo"* %252, i64 -1
  %262 = bitcast %"struct.v8::internal::wasm::AsmJsParser::BlockInfo"* %261 to <2 x i64>*
  store <2 x i64> %256, <2 x i64>* %262, align 4, !alias.scope !218, !noalias !215
  %263 = getelementptr inbounds %"struct.v8::internal::wasm::AsmJsParser::BlockInfo", %"struct.v8::internal::wasm::AsmJsParser::BlockInfo"* %252, i64 -2
  %264 = getelementptr inbounds %"struct.v8::internal::wasm::AsmJsParser::BlockInfo", %"struct.v8::internal::wasm::AsmJsParser::BlockInfo"* %263, i64 -1
  %265 = bitcast %"struct.v8::internal::wasm::AsmJsParser::BlockInfo"* %264 to <2 x i64>*
  store <2 x i64> %260, <2 x i64>* %265, align 4, !alias.scope !218, !noalias !215
  %266 = sub nuw nsw i64 -4, %248
  %267 = sub nuw nsw i64 -4, %248
  %268 = getelementptr inbounds %"struct.v8::internal::wasm::AsmJsParser::BlockInfo", %"struct.v8::internal::wasm::AsmJsParser::BlockInfo"* %245, i64 %266
  %269 = getelementptr inbounds %"struct.v8::internal::wasm::AsmJsParser::BlockInfo", %"struct.v8::internal::wasm::AsmJsParser::BlockInfo"* %246, i64 %267
  %270 = getelementptr inbounds %"struct.v8::internal::wasm::AsmJsParser::BlockInfo", %"struct.v8::internal::wasm::AsmJsParser::BlockInfo"* %269, i64 -1
  %271 = bitcast %"struct.v8::internal::wasm::AsmJsParser::BlockInfo"* %270 to <2 x i64>*
  %272 = load <2 x i64>, <2 x i64>* %271, align 4, !alias.scope !215
  %273 = getelementptr inbounds %"struct.v8::internal::wasm::AsmJsParser::BlockInfo", %"struct.v8::internal::wasm::AsmJsParser::BlockInfo"* %269, i64 -2
  %274 = getelementptr inbounds %"struct.v8::internal::wasm::AsmJsParser::BlockInfo", %"struct.v8::internal::wasm::AsmJsParser::BlockInfo"* %273, i64 -1
  %275 = bitcast %"struct.v8::internal::wasm::AsmJsParser::BlockInfo"* %274 to <2 x i64>*
  %276 = load <2 x i64>, <2 x i64>* %275, align 4, !alias.scope !215
  %277 = getelementptr inbounds %"struct.v8::internal::wasm::AsmJsParser::BlockInfo", %"struct.v8::internal::wasm::AsmJsParser::BlockInfo"* %268, i64 -1
  %278 = bitcast %"struct.v8::internal::wasm::AsmJsParser::BlockInfo"* %277 to <2 x i64>*
  store <2 x i64> %272, <2 x i64>* %278, align 4, !alias.scope !218, !noalias !215
  %279 = getelementptr inbounds %"struct.v8::internal::wasm::AsmJsParser::BlockInfo", %"struct.v8::internal::wasm::AsmJsParser::BlockInfo"* %268, i64 -2
  %280 = getelementptr inbounds %"struct.v8::internal::wasm::AsmJsParser::BlockInfo", %"struct.v8::internal::wasm::AsmJsParser::BlockInfo"* %279, i64 -1
  %281 = bitcast %"struct.v8::internal::wasm::AsmJsParser::BlockInfo"* %280 to <2 x i64>*
  store <2 x i64> %276, <2 x i64>* %281, align 4, !alias.scope !218, !noalias !215
  %282 = add i64 %248, 8
  %283 = add i64 %249, -2
  %284 = icmp eq i64 %283, 0
  br i1 %284, label %285, label %247, !llvm.loop !220

285:                                              ; preds = %247, %230
  %286 = phi i64 [ 0, %230 ], [ %282, %247 ]
  %287 = icmp eq i64 %239, 0
  br i1 %287, label %307, label %288

288:                                              ; preds = %285
  %289 = sub i64 0, %286
  %290 = getelementptr %"struct.v8::internal::wasm::AsmJsParser::BlockInfo", %"struct.v8::internal::wasm::AsmJsParser::BlockInfo"* %199, i64 -1
  %291 = sub i64 0, %286
  %292 = getelementptr %"struct.v8::internal::wasm::AsmJsParser::BlockInfo", %"struct.v8::internal::wasm::AsmJsParser::BlockInfo"* %207, i64 -1
  %293 = getelementptr inbounds %"struct.v8::internal::wasm::AsmJsParser::BlockInfo", %"struct.v8::internal::wasm::AsmJsParser::BlockInfo"* %290, i64 %289
  %294 = getelementptr inbounds %"struct.v8::internal::wasm::AsmJsParser::BlockInfo", %"struct.v8::internal::wasm::AsmJsParser::BlockInfo"* %292, i64 %291
  %295 = getelementptr inbounds %"struct.v8::internal::wasm::AsmJsParser::BlockInfo", %"struct.v8::internal::wasm::AsmJsParser::BlockInfo"* %294, i64 -1
  %296 = bitcast %"struct.v8::internal::wasm::AsmJsParser::BlockInfo"* %295 to <2 x i64>*
  %297 = load <2 x i64>, <2 x i64>* %296, align 4, !alias.scope !215
  %298 = getelementptr inbounds %"struct.v8::internal::wasm::AsmJsParser::BlockInfo", %"struct.v8::internal::wasm::AsmJsParser::BlockInfo"* %294, i64 -2
  %299 = getelementptr inbounds %"struct.v8::internal::wasm::AsmJsParser::BlockInfo", %"struct.v8::internal::wasm::AsmJsParser::BlockInfo"* %298, i64 -1
  %300 = bitcast %"struct.v8::internal::wasm::AsmJsParser::BlockInfo"* %299 to <2 x i64>*
  %301 = load <2 x i64>, <2 x i64>* %300, align 4, !alias.scope !215
  %302 = getelementptr inbounds %"struct.v8::internal::wasm::AsmJsParser::BlockInfo", %"struct.v8::internal::wasm::AsmJsParser::BlockInfo"* %293, i64 -1
  %303 = bitcast %"struct.v8::internal::wasm::AsmJsParser::BlockInfo"* %302 to <2 x i64>*
  store <2 x i64> %297, <2 x i64>* %303, align 4, !alias.scope !218, !noalias !215
  %304 = getelementptr inbounds %"struct.v8::internal::wasm::AsmJsParser::BlockInfo", %"struct.v8::internal::wasm::AsmJsParser::BlockInfo"* %293, i64 -2
  %305 = getelementptr inbounds %"struct.v8::internal::wasm::AsmJsParser::BlockInfo", %"struct.v8::internal::wasm::AsmJsParser::BlockInfo"* %304, i64 -1
  %306 = bitcast %"struct.v8::internal::wasm::AsmJsParser::BlockInfo"* %305 to <2 x i64>*
  store <2 x i64> %301, <2 x i64>* %306, align 4, !alias.scope !218, !noalias !215
  br label %307

307:                                              ; preds = %285, %288
  %308 = icmp eq i64 %214, %231
  br i1 %308, label %379, label %309

309:                                              ; preds = %307, %216, %209
  %310 = phi %"struct.v8::internal::wasm::AsmJsParser::BlockInfo"* [ %199, %216 ], [ %199, %209 ], [ %233, %307 ]
  %311 = phi %"struct.v8::internal::wasm::AsmJsParser::BlockInfo"* [ %207, %216 ], [ %207, %209 ], [ %235, %307 ]
  %312 = getelementptr %"struct.v8::internal::wasm::AsmJsParser::BlockInfo", %"struct.v8::internal::wasm::AsmJsParser::BlockInfo"* %311, i64 -1
  %313 = ptrtoint %"struct.v8::internal::wasm::AsmJsParser::BlockInfo"* %312 to i64
  %314 = sub i64 %313, %206
  %315 = lshr i64 %314, 3
  %316 = add nuw nsw i64 %315, 1
  %317 = and i64 %316, 7
  %318 = icmp eq i64 %317, 0
  br i1 %318, label %330, label %319

319:                                              ; preds = %309, %319
  %320 = phi %"struct.v8::internal::wasm::AsmJsParser::BlockInfo"* [ %323, %319 ], [ %310, %309 ]
  %321 = phi %"struct.v8::internal::wasm::AsmJsParser::BlockInfo"* [ %324, %319 ], [ %311, %309 ]
  %322 = phi i64 [ %328, %319 ], [ %317, %309 ]
  %323 = getelementptr inbounds %"struct.v8::internal::wasm::AsmJsParser::BlockInfo", %"struct.v8::internal::wasm::AsmJsParser::BlockInfo"* %320, i64 -1
  %324 = getelementptr inbounds %"struct.v8::internal::wasm::AsmJsParser::BlockInfo", %"struct.v8::internal::wasm::AsmJsParser::BlockInfo"* %321, i64 -1
  %325 = bitcast %"struct.v8::internal::wasm::AsmJsParser::BlockInfo"* %324 to i64*
  %326 = bitcast %"struct.v8::internal::wasm::AsmJsParser::BlockInfo"* %323 to i64*
  %327 = load i64, i64* %325, align 4
  store i64 %327, i64* %326, align 4
  %328 = add i64 %322, -1
  %329 = icmp eq i64 %328, 0
  br i1 %329, label %330, label %319, !llvm.loop !221

330:                                              ; preds = %319, %309
  %331 = phi %"struct.v8::internal::wasm::AsmJsParser::BlockInfo"* [ undef, %309 ], [ %323, %319 ]
  %332 = phi %"struct.v8::internal::wasm::AsmJsParser::BlockInfo"* [ %310, %309 ], [ %323, %319 ]
  %333 = phi %"struct.v8::internal::wasm::AsmJsParser::BlockInfo"* [ %311, %309 ], [ %324, %319 ]
  %334 = icmp ult i64 %314, 56
  br i1 %334, label %379, label %335

335:                                              ; preds = %330, %335
  %336 = phi %"struct.v8::internal::wasm::AsmJsParser::BlockInfo"* [ %373, %335 ], [ %332, %330 ]
  %337 = phi %"struct.v8::internal::wasm::AsmJsParser::BlockInfo"* [ %374, %335 ], [ %333, %330 ]
  %338 = getelementptr inbounds %"struct.v8::internal::wasm::AsmJsParser::BlockInfo", %"struct.v8::internal::wasm::AsmJsParser::BlockInfo"* %336, i64 -1
  %339 = getelementptr inbounds %"struct.v8::internal::wasm::AsmJsParser::BlockInfo", %"struct.v8::internal::wasm::AsmJsParser::BlockInfo"* %337, i64 -1
  %340 = bitcast %"struct.v8::internal::wasm::AsmJsParser::BlockInfo"* %339 to i64*
  %341 = bitcast %"struct.v8::internal::wasm::AsmJsParser::BlockInfo"* %338 to i64*
  %342 = load i64, i64* %340, align 4
  store i64 %342, i64* %341, align 4
  %343 = getelementptr inbounds %"struct.v8::internal::wasm::AsmJsParser::BlockInfo", %"struct.v8::internal::wasm::AsmJsParser::BlockInfo"* %336, i64 -2
  %344 = getelementptr inbounds %"struct.v8::internal::wasm::AsmJsParser::BlockInfo", %"struct.v8::internal::wasm::AsmJsParser::BlockInfo"* %337, i64 -2
  %345 = bitcast %"struct.v8::internal::wasm::AsmJsParser::BlockInfo"* %344 to i64*
  %346 = bitcast %"struct.v8::internal::wasm::AsmJsParser::BlockInfo"* %343 to i64*
  %347 = load i64, i64* %345, align 4
  store i64 %347, i64* %346, align 4
  %348 = getelementptr inbounds %"struct.v8::internal::wasm::AsmJsParser::BlockInfo", %"struct.v8::internal::wasm::AsmJsParser::BlockInfo"* %336, i64 -3
  %349 = getelementptr inbounds %"struct.v8::internal::wasm::AsmJsParser::BlockInfo", %"struct.v8::internal::wasm::AsmJsParser::BlockInfo"* %337, i64 -3
  %350 = bitcast %"struct.v8::internal::wasm::AsmJsParser::BlockInfo"* %349 to i64*
  %351 = bitcast %"struct.v8::internal::wasm::AsmJsParser::BlockInfo"* %348 to i64*
  %352 = load i64, i64* %350, align 4
  store i64 %352, i64* %351, align 4
  %353 = getelementptr inbounds %"struct.v8::internal::wasm::AsmJsParser::BlockInfo", %"struct.v8::internal::wasm::AsmJsParser::BlockInfo"* %336, i64 -4
  %354 = getelementptr inbounds %"struct.v8::internal::wasm::AsmJsParser::BlockInfo", %"struct.v8::internal::wasm::AsmJsParser::BlockInfo"* %337, i64 -4
  %355 = bitcast %"struct.v8::internal::wasm::AsmJsParser::BlockInfo"* %354 to i64*
  %356 = bitcast %"struct.v8::internal::wasm::AsmJsParser::BlockInfo"* %353 to i64*
  %357 = load i64, i64* %355, align 4
  store i64 %357, i64* %356, align 4
  %358 = getelementptr inbounds %"struct.v8::internal::wasm::AsmJsParser::BlockInfo", %"struct.v8::internal::wasm::AsmJsParser::BlockInfo"* %336, i64 -5
  %359 = getelementptr inbounds %"struct.v8::internal::wasm::AsmJsParser::BlockInfo", %"struct.v8::internal::wasm::AsmJsParser::BlockInfo"* %337, i64 -5
  %360 = bitcast %"struct.v8::internal::wasm::AsmJsParser::BlockInfo"* %359 to i64*
  %361 = bitcast %"struct.v8::internal::wasm::AsmJsParser::BlockInfo"* %358 to i64*
  %362 = load i64, i64* %360, align 4
  store i64 %362, i64* %361, align 4
  %363 = getelementptr inbounds %"struct.v8::internal::wasm::AsmJsParser::BlockInfo", %"struct.v8::internal::wasm::AsmJsParser::BlockInfo"* %336, i64 -6
  %364 = getelementptr inbounds %"struct.v8::internal::wasm::AsmJsParser::BlockInfo", %"struct.v8::internal::wasm::AsmJsParser::BlockInfo"* %337, i64 -6
  %365 = bitcast %"struct.v8::internal::wasm::AsmJsParser::BlockInfo"* %364 to i64*
  %366 = bitcast %"struct.v8::internal::wasm::AsmJsParser::BlockInfo"* %363 to i64*
  %367 = load i64, i64* %365, align 4
  store i64 %367, i64* %366, align 4
  %368 = getelementptr inbounds %"struct.v8::internal::wasm::AsmJsParser::BlockInfo", %"struct.v8::internal::wasm::AsmJsParser::BlockInfo"* %336, i64 -7
  %369 = getelementptr inbounds %"struct.v8::internal::wasm::AsmJsParser::BlockInfo", %"struct.v8::internal::wasm::AsmJsParser::BlockInfo"* %337, i64 -7
  %370 = bitcast %"struct.v8::internal::wasm::AsmJsParser::BlockInfo"* %369 to i64*
  %371 = bitcast %"struct.v8::internal::wasm::AsmJsParser::BlockInfo"* %368 to i64*
  %372 = load i64, i64* %370, align 4
  store i64 %372, i64* %371, align 4
  %373 = getelementptr inbounds %"struct.v8::internal::wasm::AsmJsParser::BlockInfo", %"struct.v8::internal::wasm::AsmJsParser::BlockInfo"* %336, i64 -8
  %374 = getelementptr inbounds %"struct.v8::internal::wasm::AsmJsParser::BlockInfo", %"struct.v8::internal::wasm::AsmJsParser::BlockInfo"* %337, i64 -8
  %375 = bitcast %"struct.v8::internal::wasm::AsmJsParser::BlockInfo"* %374 to i64*
  %376 = bitcast %"struct.v8::internal::wasm::AsmJsParser::BlockInfo"* %373 to i64*
  %377 = load i64, i64* %375, align 4
  store i64 %377, i64* %376, align 4
  %378 = icmp eq %"struct.v8::internal::wasm::AsmJsParser::BlockInfo"* %374, %205
  br i1 %378, label %379, label %335, !llvm.loop !222

379:                                              ; preds = %330, %335, %307, %196
  %380 = phi %"struct.v8::internal::wasm::AsmJsParser::BlockInfo"* [ %199, %196 ], [ %233, %307 ], [ %331, %330 ], [ %373, %335 ]
  %381 = ptrtoint %"struct.v8::internal::wasm::AsmJsParser::BlockInfo"* %380 to i64
  store i64 %381, i64* %139, align 8
  store i64 %204, i64* %138, align 8
  store i64 %201, i64* %140, align 8
  br label %382

382:                                              ; preds = %157, %379
  %383 = load %"class.v8::internal::wasm::WasmFunctionBuilder"*, %"class.v8::internal::wasm::WasmFunctionBuilder"** %66, align 8
  call void @_ZN2v88internal4wasm19WasmFunctionBuilder10EmitWithU8ENS1_10WasmOpcodeEh(%"class.v8::internal::wasm::WasmFunctionBuilder"* %383, i32 2, i8 zeroext 64) #12
  %384 = add nuw i64 %152, 1
  %385 = icmp eq i64 %384, %130
  br i1 %385, label %143, label %151

386:                                              ; preds = %393, %147
  %387 = phi i32 [ 0, %147 ], [ %401, %393 ]
  %388 = load %"class.v8::internal::wasm::WasmFunctionBuilder"*, %"class.v8::internal::wasm::WasmFunctionBuilder"** %66, align 8
  call void @_ZN2v88internal4wasm19WasmFunctionBuilder12EmitWithI32VENS1_10WasmOpcodeEi(%"class.v8::internal::wasm::WasmFunctionBuilder"* %388, i32 12, i32 %387) #12
  %389 = load i8, i8* %38, align 4
  %390 = icmp eq i8 %389, 0
  br i1 %390, label %391, label %423

391:                                              ; preds = %386
  %392 = getelementptr inbounds %"class.v8::internal::wasm::AsmJsParser", %"class.v8::internal::wasm::AsmJsParser"* %0, i64 0, i32 25, i32 0, i32 0, i32 1
  br label %404

393:                                              ; preds = %147, %393
  %394 = phi i32 [ %401, %393 ], [ 0, %147 ]
  %395 = phi i32* [ %402, %393 ], [ %149, %147 ]
  %396 = load i32, i32* %395, align 4
  %397 = load %"class.v8::internal::wasm::WasmFunctionBuilder"*, %"class.v8::internal::wasm::WasmFunctionBuilder"** %66, align 8
  call void @_ZN2v88internal4wasm19WasmFunctionBuilder12EmitGetLocalEj(%"class.v8::internal::wasm::WasmFunctionBuilder"* %397, i32 %65) #12
  %398 = load %"class.v8::internal::wasm::WasmFunctionBuilder"*, %"class.v8::internal::wasm::WasmFunctionBuilder"** %66, align 8
  call void @_ZN2v88internal4wasm19WasmFunctionBuilder12EmitI32ConstEi(%"class.v8::internal::wasm::WasmFunctionBuilder"* %398, i32 %396) #12
  %399 = load %"class.v8::internal::wasm::WasmFunctionBuilder"*, %"class.v8::internal::wasm::WasmFunctionBuilder"** %66, align 8
  call void @_ZN2v88internal4wasm19WasmFunctionBuilder4EmitENS1_10WasmOpcodeE(%"class.v8::internal::wasm::WasmFunctionBuilder"* %399, i32 70) #12
  %400 = load %"class.v8::internal::wasm::WasmFunctionBuilder"*, %"class.v8::internal::wasm::WasmFunctionBuilder"** %66, align 8
  %401 = add nuw nsw i32 %394, 1
  call void @_ZN2v88internal4wasm19WasmFunctionBuilder12EmitWithI32VENS1_10WasmOpcodeEi(%"class.v8::internal::wasm::WasmFunctionBuilder"* %400, i32 13, i32 %394) #12
  %402 = getelementptr inbounds i32, i32* %395, i64 1
  %403 = icmp eq i32* %402, %148
  br i1 %403, label %386, label %393

404:                                              ; preds = %391, %420
  %405 = load i32, i32* %4, align 8
  %406 = icmp eq i32 %405, -9959
  %407 = load %"class.v8::internal::wasm::WasmFunctionBuilder"*, %"class.v8::internal::wasm::WasmFunctionBuilder"** %66, align 8
  call void @_ZN2v88internal4wasm19WasmFunctionBuilder4EmitENS1_10WasmOpcodeE(%"class.v8::internal::wasm::WasmFunctionBuilder"* %407, i32 11) #12
  %408 = load %"struct.v8::internal::wasm::AsmJsParser::BlockInfo"*, %"struct.v8::internal::wasm::AsmJsParser::BlockInfo"** %392, align 8
  %409 = getelementptr inbounds %"struct.v8::internal::wasm::AsmJsParser::BlockInfo", %"struct.v8::internal::wasm::AsmJsParser::BlockInfo"* %408, i64 -1
  store %"struct.v8::internal::wasm::AsmJsParser::BlockInfo"* %409, %"struct.v8::internal::wasm::AsmJsParser::BlockInfo"** %392, align 8
  br i1 %406, label %410, label %428

410:                                              ; preds = %404
  %411 = call i64 @_ZN2v88internal23GetCurrentStackPositionEv() #12
  %412 = load i64, i64* %26, align 8
  %413 = icmp ult i64 %411, %412
  br i1 %413, label %414, label %420

414:                                              ; preds = %410
  store i8 1, i8* %38, align 4
  %415 = getelementptr inbounds %"class.v8::internal::wasm::AsmJsParser", %"class.v8::internal::wasm::AsmJsParser"* %0, i64 0, i32 18
  store i8* getelementptr inbounds ([44 x i8], [44 x i8]* @.str.2, i64 0, i64 0), i8** %415, align 8
  %416 = getelementptr inbounds %"class.v8::internal::wasm::AsmJsParser", %"class.v8::internal::wasm::AsmJsParser"* %0, i64 0, i32 1, i32 5
  %417 = load i64, i64* %416, align 8
  %418 = trunc i64 %417 to i32
  %419 = getelementptr inbounds %"class.v8::internal::wasm::AsmJsParser", %"class.v8::internal::wasm::AsmJsParser"* %0, i64 0, i32 19
  store i32 %418, i32* %419, align 8
  br label %460

420:                                              ; preds = %410
  call void @_ZN2v88internal4wasm11AsmJsParser12ValidateCaseEv(%"class.v8::internal::wasm::AsmJsParser"* %0)
  %421 = load i8, i8* %38, align 4, !range !69
  %422 = icmp eq i8 %421, 0
  br i1 %422, label %404, label %460

423:                                              ; preds = %386
  %424 = load %"class.v8::internal::wasm::WasmFunctionBuilder"*, %"class.v8::internal::wasm::WasmFunctionBuilder"** %66, align 8
  call void @_ZN2v88internal4wasm19WasmFunctionBuilder4EmitENS1_10WasmOpcodeE(%"class.v8::internal::wasm::WasmFunctionBuilder"* %424, i32 11) #12
  %425 = getelementptr inbounds %"class.v8::internal::wasm::AsmJsParser", %"class.v8::internal::wasm::AsmJsParser"* %0, i64 0, i32 25, i32 0, i32 0, i32 1
  %426 = load %"struct.v8::internal::wasm::AsmJsParser::BlockInfo"*, %"struct.v8::internal::wasm::AsmJsParser::BlockInfo"** %425, align 8
  %427 = getelementptr inbounds %"struct.v8::internal::wasm::AsmJsParser::BlockInfo", %"struct.v8::internal::wasm::AsmJsParser::BlockInfo"* %426, i64 -1
  store %"struct.v8::internal::wasm::AsmJsParser::BlockInfo"* %427, %"struct.v8::internal::wasm::AsmJsParser::BlockInfo"** %425, align 8
  br label %428

428:                                              ; preds = %404, %423
  %429 = load i32, i32* %4, align 8
  %430 = icmp eq i32 %429, -9956
  br i1 %430, label %431, label %446

431:                                              ; preds = %428
  %432 = call i64 @_ZN2v88internal23GetCurrentStackPositionEv() #12
  %433 = load i64, i64* %26, align 8
  %434 = icmp ult i64 %432, %433
  br i1 %434, label %435, label %441

435:                                              ; preds = %431
  store i8 1, i8* %38, align 4
  %436 = getelementptr inbounds %"class.v8::internal::wasm::AsmJsParser", %"class.v8::internal::wasm::AsmJsParser"* %0, i64 0, i32 18
  store i8* getelementptr inbounds ([44 x i8], [44 x i8]* @.str.2, i64 0, i64 0), i8** %436, align 8
  %437 = getelementptr inbounds %"class.v8::internal::wasm::AsmJsParser", %"class.v8::internal::wasm::AsmJsParser"* %0, i64 0, i32 1, i32 5
  %438 = load i64, i64* %437, align 8
  %439 = trunc i64 %438 to i32
  %440 = getelementptr inbounds %"class.v8::internal::wasm::AsmJsParser", %"class.v8::internal::wasm::AsmJsParser"* %0, i64 0, i32 19
  store i32 %439, i32* %440, align 8
  br label %460

441:                                              ; preds = %431
  call void @_ZN2v88internal4wasm11AsmJsParser15ValidateDefaultEv(%"class.v8::internal::wasm::AsmJsParser"* %0)
  %442 = load i8, i8* %38, align 4, !range !69
  %443 = icmp eq i8 %442, 0
  br i1 %443, label %444, label %460

444:                                              ; preds = %441
  %445 = load i32, i32* %4, align 8
  br label %446

446:                                              ; preds = %444, %428
  %447 = phi i32 [ %445, %444 ], [ %429, %428 ]
  %448 = icmp eq i32 %447, 125
  br i1 %448, label %455, label %449

449:                                              ; preds = %446
  store i8 1, i8* %38, align 4
  %450 = getelementptr inbounds %"class.v8::internal::wasm::AsmJsParser", %"class.v8::internal::wasm::AsmJsParser"* %0, i64 0, i32 18
  store i8* getelementptr inbounds ([17 x i8], [17 x i8]* @.str.3, i64 0, i64 0), i8** %450, align 8
  %451 = getelementptr inbounds %"class.v8::internal::wasm::AsmJsParser", %"class.v8::internal::wasm::AsmJsParser"* %0, i64 0, i32 1, i32 5
  %452 = load i64, i64* %451, align 8
  %453 = trunc i64 %452 to i32
  %454 = getelementptr inbounds %"class.v8::internal::wasm::AsmJsParser", %"class.v8::internal::wasm::AsmJsParser"* %0, i64 0, i32 19
  store i32 %453, i32* %454, align 8
  br label %460

455:                                              ; preds = %446
  call void @_ZN2v88internal12AsmJsScanner4NextEv(%"class.v8::internal::AsmJsScanner"* %3) #12
  %456 = getelementptr inbounds %"class.v8::internal::wasm::AsmJsParser", %"class.v8::internal::wasm::AsmJsParser"* %0, i64 0, i32 25, i32 0, i32 0, i32 1
  %457 = load %"struct.v8::internal::wasm::AsmJsParser::BlockInfo"*, %"struct.v8::internal::wasm::AsmJsParser::BlockInfo"** %456, align 8
  %458 = getelementptr inbounds %"struct.v8::internal::wasm::AsmJsParser::BlockInfo", %"struct.v8::internal::wasm::AsmJsParser::BlockInfo"* %457, i64 -1
  store %"struct.v8::internal::wasm::AsmJsParser::BlockInfo"* %458, %"struct.v8::internal::wasm::AsmJsParser::BlockInfo"** %456, align 8
  %459 = load %"class.v8::internal::wasm::WasmFunctionBuilder"*, %"class.v8::internal::wasm::WasmFunctionBuilder"** %66, align 8
  call void @_ZN2v88internal4wasm19WasmFunctionBuilder4EmitENS1_10WasmOpcodeE(%"class.v8::internal::wasm::WasmFunctionBuilder"* %459, i32 11) #12
  br label %460

460:                                              ; preds = %420, %414, %435, %449, %455, %441, %116
  %461 = load %"class.v8::internal::wasm::AsmJsParser::CachedVectors.190"*, %"class.v8::internal::wasm::AsmJsParser::CachedVectors.190"** %78, align 8
  %462 = getelementptr inbounds %"class.v8::internal::wasm::AsmJsParser::CachedVectors.190", %"class.v8::internal::wasm::AsmJsParser::CachedVectors.190"* %461, i64 0, i32 0, i32 0, i32 0, i32 1
  %463 = load %"class.v8::internal::ZoneVector.129"*, %"class.v8::internal::ZoneVector.129"** %462, align 8
  %464 = getelementptr inbounds %"class.v8::internal::wasm::AsmJsParser::CachedVectors.190", %"class.v8::internal::wasm::AsmJsParser::CachedVectors.190"* %461, i64 0, i32 0, i32 0, i32 0, i32 2, i32 0, i32 0
  %465 = load %"class.v8::internal::ZoneVector.129"*, %"class.v8::internal::ZoneVector.129"** %464, align 8
  %466 = icmp ult %"class.v8::internal::ZoneVector.129"* %463, %465
  br i1 %466, label %467, label %490

467:                                              ; preds = %460
  %468 = getelementptr inbounds %"class.v8::internal::wasm::AsmJsParser::CachedVector.212", %"class.v8::internal::wasm::AsmJsParser::CachedVector.212"* %2, i64 0, i32 0, i32 0, i32 0, i32 2, i32 1, i32 0
  %469 = getelementptr inbounds %"class.v8::internal::ZoneVector.129", %"class.v8::internal::ZoneVector.129"* %463, i64 0, i32 0, i32 0, i32 2, i32 1
  %470 = bitcast %"class.v8::internal::ZoneAllocator.135"* %468 to i64*
  %471 = bitcast %"struct.std::__1::__compressed_pair_elem.134"* %469 to i64*
  %472 = bitcast %"class.v8::internal::ZoneVector.129"* %463 to i8*
  call void @llvm.memset.p0i8.i64(i8* align 8 %472, i8 0, i64 24, i1 false) #12
  %473 = load i64, i64* %470, align 8
  store i64 %473, i64* %471, align 8
  %474 = bitcast %"class.v8::internal::wasm::AsmJsParser::CachedVector.212"* %2 to i64*
  %475 = load i64, i64* %474, align 8
  %476 = bitcast %"class.v8::internal::ZoneVector.129"* %463 to i64*
  store i64 %475, i64* %476, align 8
  %477 = getelementptr inbounds %"class.v8::internal::wasm::AsmJsParser::CachedVector.212", %"class.v8::internal::wasm::AsmJsParser::CachedVector.212"* %2, i64 0, i32 0, i32 0, i32 0, i32 1
  %478 = bitcast i32** %477 to i64*
  %479 = load i64, i64* %478, align 8
  %480 = getelementptr inbounds %"class.v8::internal::ZoneVector.129", %"class.v8::internal::ZoneVector.129"* %463, i64 0, i32 0, i32 0, i32 1
  %481 = bitcast i32** %480 to i64*
  store i64 %479, i64* %481, align 8
  %482 = getelementptr inbounds %"class.v8::internal::wasm::AsmJsParser::CachedVector.212", %"class.v8::internal::wasm::AsmJsParser::CachedVector.212"* %2, i64 0, i32 0, i32 0, i32 0, i32 2, i32 0, i32 0
  %483 = bitcast i32** %482 to i64*
  %484 = load i64, i64* %483, align 8
  %485 = getelementptr inbounds %"class.v8::internal::ZoneVector.129", %"class.v8::internal::ZoneVector.129"* %463, i64 0, i32 0, i32 0, i32 2, i32 0, i32 0
  %486 = bitcast i32** %485 to i64*
  store i64 %484, i64* %486, align 8
  call void @llvm.memset.p0i8.i64(i8* nonnull align 8 %71, i8 0, i64 24, i1 false) #12
  %487 = getelementptr inbounds %"class.v8::internal::ZoneVector.129", %"class.v8::internal::ZoneVector.129"* %463, i64 1
  %488 = ptrtoint %"class.v8::internal::ZoneVector.129"* %487 to i64
  %489 = bitcast %"class.v8::internal::ZoneVector.129"** %462 to i64*
  store i64 %488, i64* %489, align 8
  br label %499

490:                                              ; preds = %460
  %491 = getelementptr inbounds %"class.v8::internal::wasm::AsmJsParser::CachedVectors.190", %"class.v8::internal::wasm::AsmJsParser::CachedVectors.190"* %461, i64 0, i32 0, i32 0
  call void @_ZNSt3__16vectorIN2v88internal10ZoneVectorIiEENS2_13ZoneAllocatorIS4_EEE24__emplace_back_slow_pathIJS4_EEEvDpOT_(%"class.std::__1::vector.192"* %491, %"class.v8::internal::ZoneVector.129"* nonnull dereferenceable(32) %113) #12
  %492 = getelementptr inbounds %"class.v8::internal::wasm::AsmJsParser::CachedVector.212", %"class.v8::internal::wasm::AsmJsParser::CachedVector.212"* %2, i64 0, i32 0, i32 0, i32 0, i32 0
  %493 = load i32*, i32** %492, align 8
  %494 = icmp eq i32* %493, null
  br i1 %494, label %499, label %495

495:                                              ; preds = %490
  %496 = ptrtoint i32* %493 to i64
  %497 = getelementptr inbounds %"class.v8::internal::wasm::AsmJsParser::CachedVector.212", %"class.v8::internal::wasm::AsmJsParser::CachedVector.212"* %2, i64 0, i32 0, i32 0, i32 0, i32 1
  %498 = bitcast i32** %497 to i64*
  store i64 %496, i64* %498, align 8
  br label %499

499:                                              ; preds = %467, %490, %495
  call void @llvm.lifetime.end.p0i8(i64 40, i8* nonnull %71) #12
  br label %500

500:                                              ; preds = %29, %43, %52, %499, %36, %7, %17
  ret void
}

; Function Attrs: nounwind ssp uwtable
define hidden void @_ZN2v88internal4wasm11AsmJsParser19ExpressionStatementEv(%"class.v8::internal::wasm::AsmJsParser"*) local_unnamed_addr #0 align 2 {
  %2 = getelementptr inbounds %"class.v8::internal::wasm::AsmJsParser", %"class.v8::internal::wasm::AsmJsParser"* %0, i64 0, i32 1
  %3 = getelementptr inbounds %"class.v8::internal::wasm::AsmJsParser", %"class.v8::internal::wasm::AsmJsParser"* %0, i64 0, i32 1, i32 1
  %4 = load i32, i32* %3, align 8
  %5 = add i32 %4, 9999
  %6 = icmp ugt i32 %5, 10254
  br i1 %6, label %7, label %57

7:                                                ; preds = %1
  tail call void @_ZN2v88internal12AsmJsScanner4NextEv(%"class.v8::internal::AsmJsScanner"* %2) #12
  %8 = load i32, i32* %3, align 8
  %9 = icmp eq i32 %8, 58
  tail call void @_ZN2v88internal12AsmJsScanner6RewindEv(%"class.v8::internal::AsmJsScanner"* %2) #12
  br i1 %9, label %10, label %57

10:                                               ; preds = %7
  %11 = tail call i64 @_ZN2v88internal23GetCurrentStackPositionEv() #12
  %12 = getelementptr inbounds %"class.v8::internal::wasm::AsmJsParser", %"class.v8::internal::wasm::AsmJsParser"* %0, i64 0, i32 5
  %13 = load i64, i64* %12, align 8
  %14 = icmp ult i64 %11, %13
  br i1 %14, label %15, label %22

15:                                               ; preds = %10
  %16 = getelementptr inbounds %"class.v8::internal::wasm::AsmJsParser", %"class.v8::internal::wasm::AsmJsParser"* %0, i64 0, i32 17
  store i8 1, i8* %16, align 4
  %17 = getelementptr inbounds %"class.v8::internal::wasm::AsmJsParser", %"class.v8::internal::wasm::AsmJsParser"* %0, i64 0, i32 18
  store i8* getelementptr inbounds ([44 x i8], [44 x i8]* @.str.2, i64 0, i64 0), i8** %17, align 8
  %18 = getelementptr inbounds %"class.v8::internal::wasm::AsmJsParser", %"class.v8::internal::wasm::AsmJsParser"* %0, i64 0, i32 1, i32 5
  %19 = load i64, i64* %18, align 8
  %20 = trunc i64 %19 to i32
  %21 = getelementptr inbounds %"class.v8::internal::wasm::AsmJsParser", %"class.v8::internal::wasm::AsmJsParser"* %0, i64 0, i32 19
  store i32 %20, i32* %21, align 8
  br label %56

22:                                               ; preds = %10
  %23 = getelementptr inbounds %"class.v8::internal::wasm::AsmJsParser", %"class.v8::internal::wasm::AsmJsParser"* %0, i64 0, i32 40
  %24 = load i32, i32* %23, align 4
  %25 = icmp eq i32 %24, 0
  br i1 %25, label %33, label %26

26:                                               ; preds = %22
  %27 = getelementptr inbounds %"class.v8::internal::wasm::AsmJsParser", %"class.v8::internal::wasm::AsmJsParser"* %0, i64 0, i32 17
  store i8 1, i8* %27, align 4
  %28 = getelementptr inbounds %"class.v8::internal::wasm::AsmJsParser", %"class.v8::internal::wasm::AsmJsParser"* %0, i64 0, i32 18
  store i8* getelementptr inbounds ([25 x i8], [25 x i8]* @.str.53, i64 0, i64 0), i8** %28, align 8
  %29 = getelementptr inbounds %"class.v8::internal::wasm::AsmJsParser", %"class.v8::internal::wasm::AsmJsParser"* %0, i64 0, i32 1, i32 5
  %30 = load i64, i64* %29, align 8
  %31 = trunc i64 %30 to i32
  %32 = getelementptr inbounds %"class.v8::internal::wasm::AsmJsParser", %"class.v8::internal::wasm::AsmJsParser"* %0, i64 0, i32 19
  store i32 %31, i32* %32, align 8
  br label %56

33:                                               ; preds = %22
  %34 = load i32, i32* %3, align 8
  store i32 %34, i32* %23, align 4
  tail call void @_ZN2v88internal12AsmJsScanner4NextEv(%"class.v8::internal::AsmJsScanner"* %2) #12
  %35 = load i32, i32* %3, align 8
  %36 = icmp eq i32 %35, 58
  br i1 %36, label %44, label %37

37:                                               ; preds = %33
  %38 = getelementptr inbounds %"class.v8::internal::wasm::AsmJsParser", %"class.v8::internal::wasm::AsmJsParser"* %0, i64 0, i32 17
  store i8 1, i8* %38, align 4
  %39 = getelementptr inbounds %"class.v8::internal::wasm::AsmJsParser", %"class.v8::internal::wasm::AsmJsParser"* %0, i64 0, i32 18
  store i8* getelementptr inbounds ([17 x i8], [17 x i8]* @.str.3, i64 0, i64 0), i8** %39, align 8
  %40 = getelementptr inbounds %"class.v8::internal::wasm::AsmJsParser", %"class.v8::internal::wasm::AsmJsParser"* %0, i64 0, i32 1, i32 5
  %41 = load i64, i64* %40, align 8
  %42 = trunc i64 %41 to i32
  %43 = getelementptr inbounds %"class.v8::internal::wasm::AsmJsParser", %"class.v8::internal::wasm::AsmJsParser"* %0, i64 0, i32 19
  store i32 %42, i32* %43, align 8
  br label %56

44:                                               ; preds = %33
  tail call void @_ZN2v88internal12AsmJsScanner4NextEv(%"class.v8::internal::AsmJsScanner"* %2) #12
  %45 = tail call i64 @_ZN2v88internal23GetCurrentStackPositionEv() #12
  %46 = load i64, i64* %12, align 8
  %47 = icmp ult i64 %45, %46
  br i1 %47, label %48, label %55

48:                                               ; preds = %44
  %49 = getelementptr inbounds %"class.v8::internal::wasm::AsmJsParser", %"class.v8::internal::wasm::AsmJsParser"* %0, i64 0, i32 17
  store i8 1, i8* %49, align 4
  %50 = getelementptr inbounds %"class.v8::internal::wasm::AsmJsParser", %"class.v8::internal::wasm::AsmJsParser"* %0, i64 0, i32 18
  store i8* getelementptr inbounds ([44 x i8], [44 x i8]* @.str.2, i64 0, i64 0), i8** %50, align 8
  %51 = getelementptr inbounds %"class.v8::internal::wasm::AsmJsParser", %"class.v8::internal::wasm::AsmJsParser"* %0, i64 0, i32 1, i32 5
  %52 = load i64, i64* %51, align 8
  %53 = trunc i64 %52 to i32
  %54 = getelementptr inbounds %"class.v8::internal::wasm::AsmJsParser", %"class.v8::internal::wasm::AsmJsParser"* %0, i64 0, i32 19
  store i32 %53, i32* %54, align 8
  br label %56

55:                                               ; preds = %44
  tail call void @_ZN2v88internal4wasm11AsmJsParser17ValidateStatementEv(%"class.v8::internal::wasm::AsmJsParser"* %0) #12
  br label %56

56:                                               ; preds = %73, %15, %80, %62, %91, %93, %94, %98, %26, %37, %48, %55
  ret void

57:                                               ; preds = %1, %7
  %58 = tail call i64 @_ZN2v88internal23GetCurrentStackPositionEv() #12
  %59 = getelementptr inbounds %"class.v8::internal::wasm::AsmJsParser", %"class.v8::internal::wasm::AsmJsParser"* %0, i64 0, i32 5
  %60 = load i64, i64* %59, align 8
  %61 = icmp ult i64 %58, %60
  br i1 %61, label %62, label %69

62:                                               ; preds = %57
  %63 = getelementptr inbounds %"class.v8::internal::wasm::AsmJsParser", %"class.v8::internal::wasm::AsmJsParser"* %0, i64 0, i32 17
  store i8 1, i8* %63, align 4
  %64 = getelementptr inbounds %"class.v8::internal::wasm::AsmJsParser", %"class.v8::internal::wasm::AsmJsParser"* %0, i64 0, i32 18
  store i8* getelementptr inbounds ([44 x i8], [44 x i8]* @.str.2, i64 0, i64 0), i8** %64, align 8
  %65 = getelementptr inbounds %"class.v8::internal::wasm::AsmJsParser", %"class.v8::internal::wasm::AsmJsParser"* %0, i64 0, i32 1, i32 5
  %66 = load i64, i64* %65, align 8
  %67 = trunc i64 %66 to i32
  %68 = getelementptr inbounds %"class.v8::internal::wasm::AsmJsParser", %"class.v8::internal::wasm::AsmJsParser"* %0, i64 0, i32 19
  store i32 %67, i32* %68, align 8
  br label %56

69:                                               ; preds = %57
  %70 = tail call i64 @_ZN2v88internal23GetCurrentStackPositionEv() #12
  %71 = load i64, i64* %59, align 8
  %72 = icmp ult i64 %70, %71
  br i1 %72, label %73, label %80

73:                                               ; preds = %69
  %74 = getelementptr inbounds %"class.v8::internal::wasm::AsmJsParser", %"class.v8::internal::wasm::AsmJsParser"* %0, i64 0, i32 17
  store i8 1, i8* %74, align 4
  %75 = getelementptr inbounds %"class.v8::internal::wasm::AsmJsParser", %"class.v8::internal::wasm::AsmJsParser"* %0, i64 0, i32 18
  store i8* getelementptr inbounds ([44 x i8], [44 x i8]* @.str.2, i64 0, i64 0), i8** %75, align 8
  %76 = getelementptr inbounds %"class.v8::internal::wasm::AsmJsParser", %"class.v8::internal::wasm::AsmJsParser"* %0, i64 0, i32 1, i32 5
  %77 = load i64, i64* %76, align 8
  %78 = trunc i64 %77 to i32
  %79 = getelementptr inbounds %"class.v8::internal::wasm::AsmJsParser", %"class.v8::internal::wasm::AsmJsParser"* %0, i64 0, i32 19
  store i32 %78, i32* %79, align 8
  br label %56

80:                                               ; preds = %69
  %81 = tail call %"class.v8::internal::wasm::AsmType"* @_ZN2v88internal4wasm11AsmJsParser10ExpressionEPNS1_7AsmTypeE(%"class.v8::internal::wasm::AsmJsParser"* %0, %"class.v8::internal::wasm::AsmType"* null) #12
  %82 = getelementptr inbounds %"class.v8::internal::wasm::AsmJsParser", %"class.v8::internal::wasm::AsmJsParser"* %0, i64 0, i32 17
  %83 = load i8, i8* %82, align 4, !range !69
  %84 = icmp eq i8 %83, 0
  %85 = getelementptr inbounds %"class.v8::internal::wasm::AsmJsParser", %"class.v8::internal::wasm::AsmJsParser"* %0, i64 0, i32 17
  br i1 %84, label %86, label %56

86:                                               ; preds = %80
  %87 = tail call zeroext i1 @_ZN2v88internal4wasm7AsmType3IsAEPS2_(%"class.v8::internal::wasm::AsmType"* %81, %"class.v8::internal::wasm::AsmType"* nonnull inttoptr (i64 17 to %"class.v8::internal::wasm::AsmType"*)) #12
  br i1 %87, label %91, label %88

88:                                               ; preds = %86
  %89 = getelementptr inbounds %"class.v8::internal::wasm::AsmJsParser", %"class.v8::internal::wasm::AsmJsParser"* %0, i64 0, i32 3
  %90 = load %"class.v8::internal::wasm::WasmFunctionBuilder"*, %"class.v8::internal::wasm::WasmFunctionBuilder"** %89, align 8
  tail call void @_ZN2v88internal4wasm19WasmFunctionBuilder4EmitENS1_10WasmOpcodeE(%"class.v8::internal::wasm::WasmFunctionBuilder"* %90, i32 26) #12
  br label %91

91:                                               ; preds = %88, %86
  %92 = load i32, i32* %3, align 8
  switch i32 %92, label %94 [
    i32 59, label %93
    i32 125, label %56
  ]

93:                                               ; preds = %91
  tail call void @_ZN2v88internal12AsmJsScanner4NextEv(%"class.v8::internal::AsmJsScanner"* %2) #12
  br label %56

94:                                               ; preds = %91
  %95 = getelementptr inbounds %"class.v8::internal::wasm::AsmJsParser", %"class.v8::internal::wasm::AsmJsParser"* %0, i64 0, i32 1, i32 20
  %96 = load i8, i8* %95, align 4, !range !69
  %97 = icmp eq i8 %96, 0
  br i1 %97, label %98, label %56

98:                                               ; preds = %94
  store i8 1, i8* %85, align 4
  %99 = getelementptr inbounds %"class.v8::internal::wasm::AsmJsParser", %"class.v8::internal::wasm::AsmJsParser"* %0, i64 0, i32 18
  store i8* getelementptr inbounds ([11 x i8], [11 x i8]* @.str.1, i64 0, i64 0), i8** %99, align 8
  %100 = getelementptr inbounds %"class.v8::internal::wasm::AsmJsParser", %"class.v8::internal::wasm::AsmJsParser"* %0, i64 0, i32 1, i32 5
  %101 = load i64, i64* %100, align 8
  %102 = trunc i64 %101 to i32
  %103 = getelementptr inbounds %"class.v8::internal::wasm::AsmJsParser", %"class.v8::internal::wasm::AsmJsParser"* %0, i64 0, i32 19
  store i32 %102, i32* %103, align 8
  br label %56
}

declare void @_ZN2v88internal12AsmJsScanner6RewindEv(%"class.v8::internal::AsmJsScanner"*) local_unnamed_addr #1

; Function Attrs: nounwind ssp uwtable
define hidden void @_ZN2v88internal4wasm11AsmJsParser17LabelledStatementEv(%"class.v8::internal::wasm::AsmJsParser"*) local_unnamed_addr #0 align 2 {
  %2 = getelementptr inbounds %"class.v8::internal::wasm::AsmJsParser", %"class.v8::internal::wasm::AsmJsParser"* %0, i64 0, i32 40
  %3 = load i32, i32* %2, align 4
  %4 = icmp eq i32 %3, 0
  br i1 %4, label %12, label %5

5:                                                ; preds = %1
  %6 = getelementptr inbounds %"class.v8::internal::wasm::AsmJsParser", %"class.v8::internal::wasm::AsmJsParser"* %0, i64 0, i32 17
  store i8 1, i8* %6, align 4
  %7 = getelementptr inbounds %"class.v8::internal::wasm::AsmJsParser", %"class.v8::internal::wasm::AsmJsParser"* %0, i64 0, i32 18
  store i8* getelementptr inbounds ([25 x i8], [25 x i8]* @.str.53, i64 0, i64 0), i8** %7, align 8
  %8 = getelementptr inbounds %"class.v8::internal::wasm::AsmJsParser", %"class.v8::internal::wasm::AsmJsParser"* %0, i64 0, i32 1, i32 5
  %9 = load i64, i64* %8, align 8
  %10 = trunc i64 %9 to i32
  %11 = getelementptr inbounds %"class.v8::internal::wasm::AsmJsParser", %"class.v8::internal::wasm::AsmJsParser"* %0, i64 0, i32 19
  store i32 %10, i32* %11, align 8
  br label %38

12:                                               ; preds = %1
  %13 = getelementptr inbounds %"class.v8::internal::wasm::AsmJsParser", %"class.v8::internal::wasm::AsmJsParser"* %0, i64 0, i32 1
  %14 = getelementptr inbounds %"class.v8::internal::wasm::AsmJsParser", %"class.v8::internal::wasm::AsmJsParser"* %0, i64 0, i32 1, i32 1
  %15 = load i32, i32* %14, align 8
  store i32 %15, i32* %2, align 4
  tail call void @_ZN2v88internal12AsmJsScanner4NextEv(%"class.v8::internal::AsmJsScanner"* %13) #12
  %16 = load i32, i32* %14, align 8
  %17 = icmp eq i32 %16, 58
  br i1 %17, label %25, label %18

18:                                               ; preds = %12
  %19 = getelementptr inbounds %"class.v8::internal::wasm::AsmJsParser", %"class.v8::internal::wasm::AsmJsParser"* %0, i64 0, i32 17
  store i8 1, i8* %19, align 4
  %20 = getelementptr inbounds %"class.v8::internal::wasm::AsmJsParser", %"class.v8::internal::wasm::AsmJsParser"* %0, i64 0, i32 18
  store i8* getelementptr inbounds ([17 x i8], [17 x i8]* @.str.3, i64 0, i64 0), i8** %20, align 8
  %21 = getelementptr inbounds %"class.v8::internal::wasm::AsmJsParser", %"class.v8::internal::wasm::AsmJsParser"* %0, i64 0, i32 1, i32 5
  %22 = load i64, i64* %21, align 8
  %23 = trunc i64 %22 to i32
  %24 = getelementptr inbounds %"class.v8::internal::wasm::AsmJsParser", %"class.v8::internal::wasm::AsmJsParser"* %0, i64 0, i32 19
  store i32 %23, i32* %24, align 8
  br label %38

25:                                               ; preds = %12
  tail call void @_ZN2v88internal12AsmJsScanner4NextEv(%"class.v8::internal::AsmJsScanner"* %13) #12
  %26 = tail call i64 @_ZN2v88internal23GetCurrentStackPositionEv() #12
  %27 = getelementptr inbounds %"class.v8::internal::wasm::AsmJsParser", %"class.v8::internal::wasm::AsmJsParser"* %0, i64 0, i32 5
  %28 = load i64, i64* %27, align 8
  %29 = icmp ult i64 %26, %28
  br i1 %29, label %30, label %37

30:                                               ; preds = %25
  %31 = getelementptr inbounds %"class.v8::internal::wasm::AsmJsParser", %"class.v8::internal::wasm::AsmJsParser"* %0, i64 0, i32 17
  store i8 1, i8* %31, align 4
  %32 = getelementptr inbounds %"class.v8::internal::wasm::AsmJsParser", %"class.v8::internal::wasm::AsmJsParser"* %0, i64 0, i32 18
  store i8* getelementptr inbounds ([44 x i8], [44 x i8]* @.str.2, i64 0, i64 0), i8** %32, align 8
  %33 = getelementptr inbounds %"class.v8::internal::wasm::AsmJsParser", %"class.v8::internal::wasm::AsmJsParser"* %0, i64 0, i32 1, i32 5
  %34 = load i64, i64* %33, align 8
  %35 = trunc i64 %34 to i32
  %36 = getelementptr inbounds %"class.v8::internal::wasm::AsmJsParser", %"class.v8::internal::wasm::AsmJsParser"* %0, i64 0, i32 19
  store i32 %35, i32* %36, align 8
  br label %38

37:                                               ; preds = %25
  tail call void @_ZN2v88internal4wasm11AsmJsParser17ValidateStatementEv(%"class.v8::internal::wasm::AsmJsParser"* %0)
  br label %38

38:                                               ; preds = %37, %5, %18, %30
  ret void
}

; Function Attrs: nounwind ssp uwtable
define hidden %"class.v8::internal::wasm::AsmType"* @_ZN2v88internal4wasm11AsmJsParser18ValidateExpressionEv(%"class.v8::internal::wasm::AsmJsParser"*) local_unnamed_addr #0 align 2 {
  %2 = tail call i64 @_ZN2v88internal23GetCurrentStackPositionEv() #12
  %3 = getelementptr inbounds %"class.v8::internal::wasm::AsmJsParser", %"class.v8::internal::wasm::AsmJsParser"* %0, i64 0, i32 5
  %4 = load i64, i64* %3, align 8
  %5 = icmp ult i64 %2, %4
  br i1 %5, label %6, label %13

6:                                                ; preds = %1
  %7 = getelementptr inbounds %"class.v8::internal::wasm::AsmJsParser", %"class.v8::internal::wasm::AsmJsParser"* %0, i64 0, i32 17
  store i8 1, i8* %7, align 4
  %8 = getelementptr inbounds %"class.v8::internal::wasm::AsmJsParser", %"class.v8::internal::wasm::AsmJsParser"* %0, i64 0, i32 18
  store i8* getelementptr inbounds ([44 x i8], [44 x i8]* @.str.2, i64 0, i64 0), i8** %8, align 8
  %9 = getelementptr inbounds %"class.v8::internal::wasm::AsmJsParser", %"class.v8::internal::wasm::AsmJsParser"* %0, i64 0, i32 1, i32 5
  %10 = load i64, i64* %9, align 8
  %11 = trunc i64 %10 to i32
  %12 = getelementptr inbounds %"class.v8::internal::wasm::AsmJsParser", %"class.v8::internal::wasm::AsmJsParser"* %0, i64 0, i32 19
  store i32 %11, i32* %12, align 8
  br label %19

13:                                               ; preds = %1
  %14 = tail call %"class.v8::internal::wasm::AsmType"* @_ZN2v88internal4wasm11AsmJsParser10ExpressionEPNS1_7AsmTypeE(%"class.v8::internal::wasm::AsmJsParser"* %0, %"class.v8::internal::wasm::AsmType"* null)
  %15 = getelementptr inbounds %"class.v8::internal::wasm::AsmJsParser", %"class.v8::internal::wasm::AsmJsParser"* %0, i64 0, i32 17
  %16 = load i8, i8* %15, align 4, !range !69
  %17 = icmp eq i8 %16, 0
  %18 = select i1 %17, %"class.v8::internal::wasm::AsmType"* %14, %"class.v8::internal::wasm::AsmType"* null
  br label %19

19:                                               ; preds = %13, %6
  %20 = phi %"class.v8::internal::wasm::AsmType"* [ null, %6 ], [ %18, %13 ]
  ret %"class.v8::internal::wasm::AsmType"* %20
}

; Function Attrs: nounwind ssp uwtable
define hidden %"class.v8::internal::wasm::AsmType"* @_ZN2v88internal4wasm11AsmJsParser10ExpressionEPNS1_7AsmTypeE(%"class.v8::internal::wasm::AsmJsParser"*, %"class.v8::internal::wasm::AsmType"*) local_unnamed_addr #0 align 2 {
  %3 = tail call i64 @_ZN2v88internal23GetCurrentStackPositionEv() #12
  %4 = getelementptr inbounds %"class.v8::internal::wasm::AsmJsParser", %"class.v8::internal::wasm::AsmJsParser"* %0, i64 0, i32 5
  %5 = load i64, i64* %4, align 8
  %6 = icmp ult i64 %3, %5
  br i1 %6, label %12, label %7

7:                                                ; preds = %2
  %8 = getelementptr inbounds %"class.v8::internal::wasm::AsmJsParser", %"class.v8::internal::wasm::AsmJsParser"* %0, i64 0, i32 17
  %9 = getelementptr inbounds %"class.v8::internal::wasm::AsmJsParser", %"class.v8::internal::wasm::AsmJsParser"* %0, i64 0, i32 1, i32 1
  %10 = getelementptr inbounds %"class.v8::internal::wasm::AsmJsParser", %"class.v8::internal::wasm::AsmJsParser"* %0, i64 0, i32 3
  %11 = getelementptr inbounds %"class.v8::internal::wasm::AsmJsParser", %"class.v8::internal::wasm::AsmJsParser"* %0, i64 0, i32 1
  br label %19

12:                                               ; preds = %47, %2
  %13 = getelementptr inbounds %"class.v8::internal::wasm::AsmJsParser", %"class.v8::internal::wasm::AsmJsParser"* %0, i64 0, i32 17
  store i8 1, i8* %13, align 4
  %14 = getelementptr inbounds %"class.v8::internal::wasm::AsmJsParser", %"class.v8::internal::wasm::AsmJsParser"* %0, i64 0, i32 18
  store i8* getelementptr inbounds ([44 x i8], [44 x i8]* @.str.2, i64 0, i64 0), i8** %14, align 8
  %15 = getelementptr inbounds %"class.v8::internal::wasm::AsmJsParser", %"class.v8::internal::wasm::AsmJsParser"* %0, i64 0, i32 1, i32 5
  %16 = load i64, i64* %15, align 8
  %17 = trunc i64 %16 to i32
  %18 = getelementptr inbounds %"class.v8::internal::wasm::AsmJsParser", %"class.v8::internal::wasm::AsmJsParser"* %0, i64 0, i32 19
  store i32 %17, i32* %18, align 8
  br label %61

19:                                               ; preds = %7, %47
  %20 = tail call %"class.v8::internal::wasm::AsmType"* @_ZN2v88internal4wasm11AsmJsParser20AssignmentExpressionEv(%"class.v8::internal::wasm::AsmJsParser"* %0)
  %21 = load i8, i8* %8, align 4, !range !69
  %22 = icmp eq i8 %21, 0
  br i1 %22, label %23, label %61

23:                                               ; preds = %19
  %24 = load i32, i32* %9, align 8
  %25 = icmp eq i32 %24, 44
  br i1 %25, label %26, label %51

26:                                               ; preds = %23
  %27 = tail call zeroext i1 @_ZN2v88internal4wasm7AsmType3IsAEPS2_(%"class.v8::internal::wasm::AsmType"* %20, %"class.v8::internal::wasm::AsmType"* nonnull inttoptr (i64 2147483649 to %"class.v8::internal::wasm::AsmType"*)) #12
  br i1 %27, label %28, label %34

28:                                               ; preds = %26
  store i8 1, i8* %8, align 4
  %29 = getelementptr inbounds %"class.v8::internal::wasm::AsmJsParser", %"class.v8::internal::wasm::AsmJsParser"* %0, i64 0, i32 18
  store i8* getelementptr inbounds ([21 x i8], [21 x i8]* @.str.55, i64 0, i64 0), i8** %29, align 8
  %30 = getelementptr inbounds %"class.v8::internal::wasm::AsmJsParser", %"class.v8::internal::wasm::AsmJsParser"* %0, i64 0, i32 1, i32 5
  %31 = load i64, i64* %30, align 8
  %32 = trunc i64 %31 to i32
  %33 = getelementptr inbounds %"class.v8::internal::wasm::AsmJsParser", %"class.v8::internal::wasm::AsmJsParser"* %0, i64 0, i32 19
  store i32 %32, i32* %33, align 8
  br label %61

34:                                               ; preds = %26
  %35 = tail call zeroext i1 @_ZN2v88internal4wasm7AsmType3IsAEPS2_(%"class.v8::internal::wasm::AsmType"* %20, %"class.v8::internal::wasm::AsmType"* nonnull inttoptr (i64 17 to %"class.v8::internal::wasm::AsmType"*)) #12
  br i1 %35, label %38, label %36

36:                                               ; preds = %34
  %37 = load %"class.v8::internal::wasm::WasmFunctionBuilder"*, %"class.v8::internal::wasm::WasmFunctionBuilder"** %10, align 8
  tail call void @_ZN2v88internal4wasm19WasmFunctionBuilder4EmitENS1_10WasmOpcodeE(%"class.v8::internal::wasm::WasmFunctionBuilder"* %37, i32 26) #12
  br label %38

38:                                               ; preds = %34, %36
  %39 = load i32, i32* %9, align 8
  %40 = icmp eq i32 %39, 44
  br i1 %40, label %47, label %41

41:                                               ; preds = %38
  store i8 1, i8* %8, align 4
  %42 = getelementptr inbounds %"class.v8::internal::wasm::AsmJsParser", %"class.v8::internal::wasm::AsmJsParser"* %0, i64 0, i32 18
  store i8* getelementptr inbounds ([17 x i8], [17 x i8]* @.str.3, i64 0, i64 0), i8** %42, align 8
  %43 = getelementptr inbounds %"class.v8::internal::wasm::AsmJsParser", %"class.v8::internal::wasm::AsmJsParser"* %0, i64 0, i32 1, i32 5
  %44 = load i64, i64* %43, align 8
  %45 = trunc i64 %44 to i32
  %46 = getelementptr inbounds %"class.v8::internal::wasm::AsmJsParser", %"class.v8::internal::wasm::AsmJsParser"* %0, i64 0, i32 19
  store i32 %45, i32* %46, align 8
  br label %61

47:                                               ; preds = %38
  tail call void @_ZN2v88internal12AsmJsScanner4NextEv(%"class.v8::internal::AsmJsScanner"* %11) #12
  %48 = tail call i64 @_ZN2v88internal23GetCurrentStackPositionEv() #12
  %49 = load i64, i64* %4, align 8
  %50 = icmp ult i64 %48, %49
  br i1 %50, label %12, label %19

51:                                               ; preds = %23
  %52 = icmp eq %"class.v8::internal::wasm::AsmType"* %1, null
  br i1 %52, label %61, label %53

53:                                               ; preds = %51
  %54 = tail call zeroext i1 @_ZN2v88internal4wasm7AsmType3IsAEPS2_(%"class.v8::internal::wasm::AsmType"* %20, %"class.v8::internal::wasm::AsmType"* nonnull %1) #12
  br i1 %54, label %61, label %55

55:                                               ; preds = %53
  store i8 1, i8* %8, align 4
  %56 = getelementptr inbounds %"class.v8::internal::wasm::AsmJsParser", %"class.v8::internal::wasm::AsmJsParser"* %0, i64 0, i32 18
  store i8* getelementptr inbounds ([16 x i8], [16 x i8]* @.str.56, i64 0, i64 0), i8** %56, align 8
  %57 = getelementptr inbounds %"class.v8::internal::wasm::AsmJsParser", %"class.v8::internal::wasm::AsmJsParser"* %0, i64 0, i32 1, i32 5
  %58 = load i64, i64* %57, align 8
  %59 = trunc i64 %58 to i32
  %60 = getelementptr inbounds %"class.v8::internal::wasm::AsmJsParser", %"class.v8::internal::wasm::AsmJsParser"* %0, i64 0, i32 19
  store i32 %59, i32* %60, align 8
  br label %61

61:                                               ; preds = %19, %53, %51, %55, %41, %28, %12
  %62 = phi %"class.v8::internal::wasm::AsmType"* [ null, %12 ], [ null, %28 ], [ null, %41 ], [ null, %55 ], [ %20, %51 ], [ %20, %53 ], [ null, %19 ]
  ret %"class.v8::internal::wasm::AsmType"* %62
}

; Function Attrs: nounwind ssp uwtable
define hidden void @_ZN2v88internal4wasm11AsmJsParser14WhileStatementEv(%"class.v8::internal::wasm::AsmJsParser"*) local_unnamed_addr #0 align 2 {
  %2 = getelementptr inbounds %"class.v8::internal::wasm::AsmJsParser", %"class.v8::internal::wasm::AsmJsParser"* %0, i64 0, i32 40
  %3 = load i32, i32* %2, align 4
  tail call void @_ZN2v88internal4wasm11AsmJsParser9BareBeginENS2_9BlockKindEi(%"class.v8::internal::wasm::AsmJsParser"* %0, i32 0, i32 %3) #12
  %4 = getelementptr inbounds %"class.v8::internal::wasm::AsmJsParser", %"class.v8::internal::wasm::AsmJsParser"* %0, i64 0, i32 3
  %5 = load %"class.v8::internal::wasm::WasmFunctionBuilder"*, %"class.v8::internal::wasm::WasmFunctionBuilder"** %4, align 8
  tail call void @_ZN2v88internal4wasm19WasmFunctionBuilder10EmitWithU8ENS1_10WasmOpcodeEh(%"class.v8::internal::wasm::WasmFunctionBuilder"* %5, i32 2, i8 zeroext 64) #12
  %6 = load i32, i32* %2, align 4
  tail call void @_ZN2v88internal4wasm11AsmJsParser9BareBeginENS2_9BlockKindEi(%"class.v8::internal::wasm::AsmJsParser"* %0, i32 1, i32 %6) #12
  %7 = getelementptr inbounds %"class.v8::internal::wasm::AsmJsParser", %"class.v8::internal::wasm::AsmJsParser"* %0, i64 0, i32 1, i32 5
  %8 = load i64, i64* %7, align 8
  %9 = load %"class.v8::internal::wasm::WasmFunctionBuilder"*, %"class.v8::internal::wasm::WasmFunctionBuilder"** %4, align 8
  tail call void @_ZN2v88internal4wasm19WasmFunctionBuilder16AddAsmWasmOffsetEmm(%"class.v8::internal::wasm::WasmFunctionBuilder"* %9, i64 %8, i64 %8) #12
  %10 = load %"class.v8::internal::wasm::WasmFunctionBuilder"*, %"class.v8::internal::wasm::WasmFunctionBuilder"** %4, align 8
  tail call void @_ZN2v88internal4wasm19WasmFunctionBuilder10EmitWithU8ENS1_10WasmOpcodeEh(%"class.v8::internal::wasm::WasmFunctionBuilder"* %10, i32 3, i8 zeroext 64) #12
  store i32 0, i32* %2, align 4
  %11 = getelementptr inbounds %"class.v8::internal::wasm::AsmJsParser", %"class.v8::internal::wasm::AsmJsParser"* %0, i64 0, i32 1
  %12 = getelementptr inbounds %"class.v8::internal::wasm::AsmJsParser", %"class.v8::internal::wasm::AsmJsParser"* %0, i64 0, i32 1, i32 1
  %13 = load i32, i32* %12, align 8
  %14 = icmp eq i32 %13, -9945
  br i1 %14, label %21, label %15

15:                                               ; preds = %1
  %16 = getelementptr inbounds %"class.v8::internal::wasm::AsmJsParser", %"class.v8::internal::wasm::AsmJsParser"* %0, i64 0, i32 17
  store i8 1, i8* %16, align 4
  %17 = getelementptr inbounds %"class.v8::internal::wasm::AsmJsParser", %"class.v8::internal::wasm::AsmJsParser"* %0, i64 0, i32 18
  store i8* getelementptr inbounds ([17 x i8], [17 x i8]* @.str.3, i64 0, i64 0), i8** %17, align 8
  %18 = load i64, i64* %7, align 8
  %19 = trunc i64 %18 to i32
  %20 = getelementptr inbounds %"class.v8::internal::wasm::AsmJsParser", %"class.v8::internal::wasm::AsmJsParser"* %0, i64 0, i32 19
  store i32 %19, i32* %20, align 8
  br label %77

21:                                               ; preds = %1
  tail call void @_ZN2v88internal12AsmJsScanner4NextEv(%"class.v8::internal::AsmJsScanner"* %11) #12
  %22 = load i32, i32* %12, align 8
  %23 = icmp eq i32 %22, 40
  br i1 %23, label %30, label %24

24:                                               ; preds = %21
  %25 = getelementptr inbounds %"class.v8::internal::wasm::AsmJsParser", %"class.v8::internal::wasm::AsmJsParser"* %0, i64 0, i32 17
  store i8 1, i8* %25, align 4
  %26 = getelementptr inbounds %"class.v8::internal::wasm::AsmJsParser", %"class.v8::internal::wasm::AsmJsParser"* %0, i64 0, i32 18
  store i8* getelementptr inbounds ([17 x i8], [17 x i8]* @.str.3, i64 0, i64 0), i8** %26, align 8
  %27 = load i64, i64* %7, align 8
  %28 = trunc i64 %27 to i32
  %29 = getelementptr inbounds %"class.v8::internal::wasm::AsmJsParser", %"class.v8::internal::wasm::AsmJsParser"* %0, i64 0, i32 19
  store i32 %28, i32* %29, align 8
  br label %77

30:                                               ; preds = %21
  tail call void @_ZN2v88internal12AsmJsScanner4NextEv(%"class.v8::internal::AsmJsScanner"* %11) #12
  %31 = tail call i64 @_ZN2v88internal23GetCurrentStackPositionEv() #12
  %32 = getelementptr inbounds %"class.v8::internal::wasm::AsmJsParser", %"class.v8::internal::wasm::AsmJsParser"* %0, i64 0, i32 5
  %33 = load i64, i64* %32, align 8
  %34 = icmp ult i64 %31, %33
  br i1 %34, label %35, label %41

35:                                               ; preds = %30
  %36 = getelementptr inbounds %"class.v8::internal::wasm::AsmJsParser", %"class.v8::internal::wasm::AsmJsParser"* %0, i64 0, i32 17
  store i8 1, i8* %36, align 4
  %37 = getelementptr inbounds %"class.v8::internal::wasm::AsmJsParser", %"class.v8::internal::wasm::AsmJsParser"* %0, i64 0, i32 18
  store i8* getelementptr inbounds ([44 x i8], [44 x i8]* @.str.2, i64 0, i64 0), i8** %37, align 8
  %38 = load i64, i64* %7, align 8
  %39 = trunc i64 %38 to i32
  %40 = getelementptr inbounds %"class.v8::internal::wasm::AsmJsParser", %"class.v8::internal::wasm::AsmJsParser"* %0, i64 0, i32 19
  store i32 %39, i32* %40, align 8
  br label %77

41:                                               ; preds = %30
  %42 = tail call %"class.v8::internal::wasm::AsmType"* @_ZN2v88internal4wasm11AsmJsParser10ExpressionEPNS1_7AsmTypeE(%"class.v8::internal::wasm::AsmJsParser"* %0, %"class.v8::internal::wasm::AsmType"* nonnull inttoptr (i64 769 to %"class.v8::internal::wasm::AsmType"*))
  %43 = getelementptr inbounds %"class.v8::internal::wasm::AsmJsParser", %"class.v8::internal::wasm::AsmJsParser"* %0, i64 0, i32 17
  %44 = load i8, i8* %43, align 4, !range !69
  %45 = icmp eq i8 %44, 0
  br i1 %45, label %46, label %77

46:                                               ; preds = %41
  %47 = load i32, i32* %12, align 8
  %48 = icmp eq i32 %47, 41
  br i1 %48, label %54, label %49

49:                                               ; preds = %46
  store i8 1, i8* %43, align 4
  %50 = getelementptr inbounds %"class.v8::internal::wasm::AsmJsParser", %"class.v8::internal::wasm::AsmJsParser"* %0, i64 0, i32 18
  store i8* getelementptr inbounds ([17 x i8], [17 x i8]* @.str.3, i64 0, i64 0), i8** %50, align 8
  %51 = load i64, i64* %7, align 8
  %52 = trunc i64 %51 to i32
  %53 = getelementptr inbounds %"class.v8::internal::wasm::AsmJsParser", %"class.v8::internal::wasm::AsmJsParser"* %0, i64 0, i32 19
  store i32 %52, i32* %53, align 8
  br label %77

54:                                               ; preds = %46
  tail call void @_ZN2v88internal12AsmJsScanner4NextEv(%"class.v8::internal::AsmJsScanner"* %11) #12
  %55 = load %"class.v8::internal::wasm::WasmFunctionBuilder"*, %"class.v8::internal::wasm::WasmFunctionBuilder"** %4, align 8
  tail call void @_ZN2v88internal4wasm19WasmFunctionBuilder4EmitENS1_10WasmOpcodeE(%"class.v8::internal::wasm::WasmFunctionBuilder"* %55, i32 69) #12
  %56 = load %"class.v8::internal::wasm::WasmFunctionBuilder"*, %"class.v8::internal::wasm::WasmFunctionBuilder"** %4, align 8
  tail call void @_ZN2v88internal4wasm19WasmFunctionBuilder10EmitWithU8ENS1_10WasmOpcodeEh(%"class.v8::internal::wasm::WasmFunctionBuilder"* %56, i32 13, i8 zeroext 1) #12
  %57 = tail call i64 @_ZN2v88internal23GetCurrentStackPositionEv() #12
  %58 = load i64, i64* %32, align 8
  %59 = icmp ult i64 %57, %58
  br i1 %59, label %60, label %65

60:                                               ; preds = %54
  store i8 1, i8* %43, align 4
  %61 = getelementptr inbounds %"class.v8::internal::wasm::AsmJsParser", %"class.v8::internal::wasm::AsmJsParser"* %0, i64 0, i32 18
  store i8* getelementptr inbounds ([44 x i8], [44 x i8]* @.str.2, i64 0, i64 0), i8** %61, align 8
  %62 = load i64, i64* %7, align 8
  %63 = trunc i64 %62 to i32
  %64 = getelementptr inbounds %"class.v8::internal::wasm::AsmJsParser", %"class.v8::internal::wasm::AsmJsParser"* %0, i64 0, i32 19
  store i32 %63, i32* %64, align 8
  br label %77

65:                                               ; preds = %54
  tail call void @_ZN2v88internal4wasm11AsmJsParser17ValidateStatementEv(%"class.v8::internal::wasm::AsmJsParser"* %0)
  %66 = load i8, i8* %43, align 4, !range !69
  %67 = icmp eq i8 %66, 0
  br i1 %67, label %68, label %77

68:                                               ; preds = %65
  %69 = load %"class.v8::internal::wasm::WasmFunctionBuilder"*, %"class.v8::internal::wasm::WasmFunctionBuilder"** %4, align 8
  tail call void @_ZN2v88internal4wasm19WasmFunctionBuilder10EmitWithU8ENS1_10WasmOpcodeEh(%"class.v8::internal::wasm::WasmFunctionBuilder"* %69, i32 12, i8 zeroext 0) #12
  %70 = getelementptr inbounds %"class.v8::internal::wasm::AsmJsParser", %"class.v8::internal::wasm::AsmJsParser"* %0, i64 0, i32 25, i32 0, i32 0, i32 1
  %71 = load %"struct.v8::internal::wasm::AsmJsParser::BlockInfo"*, %"struct.v8::internal::wasm::AsmJsParser::BlockInfo"** %70, align 8
  %72 = getelementptr inbounds %"struct.v8::internal::wasm::AsmJsParser::BlockInfo", %"struct.v8::internal::wasm::AsmJsParser::BlockInfo"* %71, i64 -1
  store %"struct.v8::internal::wasm::AsmJsParser::BlockInfo"* %72, %"struct.v8::internal::wasm::AsmJsParser::BlockInfo"** %70, align 8
  %73 = load %"class.v8::internal::wasm::WasmFunctionBuilder"*, %"class.v8::internal::wasm::WasmFunctionBuilder"** %4, align 8
  tail call void @_ZN2v88internal4wasm19WasmFunctionBuilder4EmitENS1_10WasmOpcodeE(%"class.v8::internal::wasm::WasmFunctionBuilder"* %73, i32 11) #12
  %74 = load %"struct.v8::internal::wasm::AsmJsParser::BlockInfo"*, %"struct.v8::internal::wasm::AsmJsParser::BlockInfo"** %70, align 8
  %75 = getelementptr inbounds %"struct.v8::internal::wasm::AsmJsParser::BlockInfo", %"struct.v8::internal::wasm::AsmJsParser::BlockInfo"* %74, i64 -1
  store %"struct.v8::internal::wasm::AsmJsParser::BlockInfo"* %75, %"struct.v8::internal::wasm::AsmJsParser::BlockInfo"** %70, align 8
  %76 = load %"class.v8::internal::wasm::WasmFunctionBuilder"*, %"class.v8::internal::wasm::WasmFunctionBuilder"** %4, align 8
  tail call void @_ZN2v88internal4wasm19WasmFunctionBuilder4EmitENS1_10WasmOpcodeE(%"class.v8::internal::wasm::WasmFunctionBuilder"* %76, i32 11) #12
  br label %77

77:                                               ; preds = %65, %41, %68, %60, %49, %35, %24, %15
  ret void
}

; Function Attrs: nounwind ssp uwtable
define hidden void @_ZN2v88internal4wasm11AsmJsParser11DoStatementEv(%"class.v8::internal::wasm::AsmJsParser"*) local_unnamed_addr #0 align 2 {
  %2 = getelementptr inbounds %"class.v8::internal::wasm::AsmJsParser", %"class.v8::internal::wasm::AsmJsParser"* %0, i64 0, i32 40
  %3 = load i32, i32* %2, align 4
  tail call void @_ZN2v88internal4wasm11AsmJsParser9BareBeginENS2_9BlockKindEi(%"class.v8::internal::wasm::AsmJsParser"* %0, i32 0, i32 %3) #12
  %4 = getelementptr inbounds %"class.v8::internal::wasm::AsmJsParser", %"class.v8::internal::wasm::AsmJsParser"* %0, i64 0, i32 3
  %5 = load %"class.v8::internal::wasm::WasmFunctionBuilder"*, %"class.v8::internal::wasm::WasmFunctionBuilder"** %4, align 8
  tail call void @_ZN2v88internal4wasm19WasmFunctionBuilder10EmitWithU8ENS1_10WasmOpcodeEh(%"class.v8::internal::wasm::WasmFunctionBuilder"* %5, i32 2, i8 zeroext 64) #12
  %6 = getelementptr inbounds %"class.v8::internal::wasm::AsmJsParser", %"class.v8::internal::wasm::AsmJsParser"* %0, i64 0, i32 25, i32 0
  %7 = getelementptr inbounds %"class.v8::internal::wasm::AsmJsParser", %"class.v8::internal::wasm::AsmJsParser"* %0, i64 0, i32 25, i32 0, i32 0, i32 1
  %8 = load %"struct.v8::internal::wasm::AsmJsParser::BlockInfo"*, %"struct.v8::internal::wasm::AsmJsParser::BlockInfo"** %7, align 8
  %9 = getelementptr inbounds %"class.v8::internal::wasm::AsmJsParser", %"class.v8::internal::wasm::AsmJsParser"* %0, i64 0, i32 25, i32 0, i32 0, i32 2, i32 0, i32 0
  %10 = load %"struct.v8::internal::wasm::AsmJsParser::BlockInfo"*, %"struct.v8::internal::wasm::AsmJsParser::BlockInfo"** %9, align 8
  %11 = icmp eq %"struct.v8::internal::wasm::AsmJsParser::BlockInfo"* %8, %10
  %12 = ptrtoint %"struct.v8::internal::wasm::AsmJsParser::BlockInfo"* %10 to i64
  br i1 %11, label %18, label %13

13:                                               ; preds = %1
  %14 = bitcast %"struct.v8::internal::wasm::AsmJsParser::BlockInfo"* %8 to i64*
  store i64 1, i64* %14, align 4
  %15 = getelementptr inbounds %"struct.v8::internal::wasm::AsmJsParser::BlockInfo", %"struct.v8::internal::wasm::AsmJsParser::BlockInfo"* %8, i64 1
  %16 = ptrtoint %"struct.v8::internal::wasm::AsmJsParser::BlockInfo"* %15 to i64
  %17 = bitcast %"struct.v8::internal::wasm::AsmJsParser::BlockInfo"** %7 to i64*
  store i64 %16, i64* %17, align 8
  br label %243

18:                                               ; preds = %1
  %19 = ptrtoint %"struct.v8::internal::wasm::AsmJsParser::BlockInfo"* %8 to i64
  %20 = bitcast %"struct.v8::internal::wasm::AsmJsParser::BlockInfo"** %7 to i64*
  %21 = bitcast %"class.std::__1::vector.199"* %6 to i64*
  %22 = load i64, i64* %21, align 8
  %23 = sub i64 %19, %22
  %24 = ashr exact i64 %23, 3
  %25 = add nsw i64 %24, 1
  %26 = icmp ugt i64 %25, 268435455
  br i1 %26, label %27, label %29

27:                                               ; preds = %18
  %28 = bitcast %"class.std::__1::vector.199"* %6 to %"class.std::__1::__vector_base_common"*
  tail call void @_ZNKSt3__120__vector_base_commonILb1EE20__throw_length_errorEv(%"class.std::__1::__vector_base_common"* %28) #13
  unreachable

29:                                               ; preds = %18
  %30 = bitcast %"struct.v8::internal::wasm::AsmJsParser::BlockInfo"** %9 to i64*
  %31 = sub i64 %12, %22
  %32 = ashr exact i64 %31, 3
  %33 = icmp ult i64 %32, 134217727
  br i1 %33, label %34, label %39

34:                                               ; preds = %29
  %35 = ashr exact i64 %31, 2
  %36 = icmp ult i64 %35, %25
  %37 = select i1 %36, i64 %25, i64 %35
  %38 = icmp eq i64 %37, 0
  br i1 %38, label %57, label %39

39:                                               ; preds = %34, %29
  %40 = phi i64 [ %37, %34 ], [ 268435455, %29 ]
  %41 = getelementptr inbounds %"class.v8::internal::wasm::AsmJsParser", %"class.v8::internal::wasm::AsmJsParser"* %0, i64 0, i32 25, i32 0, i32 0, i32 2, i32 1, i32 0, i32 0
  %42 = load %"class.v8::internal::Zone"*, %"class.v8::internal::Zone"** %41, align 8
  %43 = shl i64 %40, 3
  %44 = getelementptr inbounds %"class.v8::internal::Zone", %"class.v8::internal::Zone"* %42, i64 0, i32 2
  %45 = load i64, i64* %44, align 8
  %46 = getelementptr inbounds %"class.v8::internal::Zone", %"class.v8::internal::Zone"* %42, i64 0, i32 3
  %47 = load i64, i64* %46, align 8
  %48 = sub i64 %47, %45
  %49 = icmp ugt i64 %43, %48
  br i1 %49, label %50, label %52, !prof !2

50:                                               ; preds = %39
  %51 = tail call i64 @_ZN2v88internal4Zone9NewExpandEm(%"class.v8::internal::Zone"* %42, i64 %43) #12
  br label %54

52:                                               ; preds = %39
  %53 = add i64 %45, %43
  store i64 %53, i64* %44, align 8
  br label %54

54:                                               ; preds = %52, %50
  %55 = phi i64 [ %51, %50 ], [ %45, %52 ]
  %56 = inttoptr i64 %55 to %"struct.v8::internal::wasm::AsmJsParser::BlockInfo"*
  br label %57

57:                                               ; preds = %54, %34
  %58 = phi i64 [ %40, %54 ], [ 0, %34 ]
  %59 = phi %"struct.v8::internal::wasm::AsmJsParser::BlockInfo"* [ %56, %54 ], [ null, %34 ]
  %60 = getelementptr inbounds %"struct.v8::internal::wasm::AsmJsParser::BlockInfo", %"struct.v8::internal::wasm::AsmJsParser::BlockInfo"* %59, i64 %24
  %61 = getelementptr inbounds %"struct.v8::internal::wasm::AsmJsParser::BlockInfo", %"struct.v8::internal::wasm::AsmJsParser::BlockInfo"* %59, i64 %58
  %62 = ptrtoint %"struct.v8::internal::wasm::AsmJsParser::BlockInfo"* %61 to i64
  %63 = bitcast %"struct.v8::internal::wasm::AsmJsParser::BlockInfo"* %60 to i64*
  store i64 1, i64* %63, align 4
  %64 = getelementptr inbounds %"struct.v8::internal::wasm::AsmJsParser::BlockInfo", %"struct.v8::internal::wasm::AsmJsParser::BlockInfo"* %60, i64 1
  %65 = ptrtoint %"struct.v8::internal::wasm::AsmJsParser::BlockInfo"* %64 to i64
  %66 = getelementptr inbounds %"class.std::__1::vector.199", %"class.std::__1::vector.199"* %6, i64 0, i32 0, i32 0
  %67 = load %"struct.v8::internal::wasm::AsmJsParser::BlockInfo"*, %"struct.v8::internal::wasm::AsmJsParser::BlockInfo"** %66, align 8
  %68 = ptrtoint %"struct.v8::internal::wasm::AsmJsParser::BlockInfo"* %67 to i64
  %69 = load %"struct.v8::internal::wasm::AsmJsParser::BlockInfo"*, %"struct.v8::internal::wasm::AsmJsParser::BlockInfo"** %7, align 8
  %70 = icmp eq %"struct.v8::internal::wasm::AsmJsParser::BlockInfo"* %69, %67
  br i1 %70, label %240, label %71

71:                                               ; preds = %57
  %72 = getelementptr %"struct.v8::internal::wasm::AsmJsParser::BlockInfo", %"struct.v8::internal::wasm::AsmJsParser::BlockInfo"* %69, i64 -1, i32 0
  %73 = ptrtoint i32* %72 to i64
  %74 = sub i64 %73, %68
  %75 = lshr i64 %74, 3
  %76 = add nuw nsw i64 %75, 1
  %77 = icmp ult i64 %76, 4
  br i1 %77, label %170, label %78

78:                                               ; preds = %71
  %79 = getelementptr %"struct.v8::internal::wasm::AsmJsParser::BlockInfo", %"struct.v8::internal::wasm::AsmJsParser::BlockInfo"* %69, i64 -1, i32 0
  %80 = ptrtoint i32* %79 to i64
  %81 = sub i64 %80, %68
  %82 = lshr i64 %81, 3
  %83 = xor i64 %82, -1
  %84 = add nsw i64 %24, %83
  %85 = getelementptr %"struct.v8::internal::wasm::AsmJsParser::BlockInfo", %"struct.v8::internal::wasm::AsmJsParser::BlockInfo"* %59, i64 %84
  %86 = xor i64 %82, -1
  %87 = getelementptr %"struct.v8::internal::wasm::AsmJsParser::BlockInfo", %"struct.v8::internal::wasm::AsmJsParser::BlockInfo"* %69, i64 %86
  %88 = icmp ult %"struct.v8::internal::wasm::AsmJsParser::BlockInfo"* %85, %69
  %89 = icmp ult %"struct.v8::internal::wasm::AsmJsParser::BlockInfo"* %87, %60
  %90 = and i1 %88, %89
  br i1 %90, label %170, label %91

91:                                               ; preds = %78
  %92 = and i64 %76, 4611686018427387900
  %93 = sub nsw i64 0, %92
  %94 = getelementptr %"struct.v8::internal::wasm::AsmJsParser::BlockInfo", %"struct.v8::internal::wasm::AsmJsParser::BlockInfo"* %60, i64 %93
  %95 = sub nsw i64 0, %92
  %96 = getelementptr %"struct.v8::internal::wasm::AsmJsParser::BlockInfo", %"struct.v8::internal::wasm::AsmJsParser::BlockInfo"* %69, i64 %95
  %97 = add nsw i64 %92, -4
  %98 = lshr exact i64 %97, 2
  %99 = add nuw nsw i64 %98, 1
  %100 = and i64 %99, 1
  %101 = icmp eq i64 %97, 0
  br i1 %101, label %146, label %102

102:                                              ; preds = %91
  %103 = sub nuw nsw i64 %99, %100
  %104 = getelementptr %"struct.v8::internal::wasm::AsmJsParser::BlockInfo", %"struct.v8::internal::wasm::AsmJsParser::BlockInfo"* %60, i64 -1
  %105 = getelementptr %"struct.v8::internal::wasm::AsmJsParser::BlockInfo", %"struct.v8::internal::wasm::AsmJsParser::BlockInfo"* %69, i64 -1
  %106 = getelementptr %"struct.v8::internal::wasm::AsmJsParser::BlockInfo", %"struct.v8::internal::wasm::AsmJsParser::BlockInfo"* %60, i64 -1
  %107 = getelementptr %"struct.v8::internal::wasm::AsmJsParser::BlockInfo", %"struct.v8::internal::wasm::AsmJsParser::BlockInfo"* %69, i64 -1
  br label %108

108:                                              ; preds = %108, %102
  %109 = phi i64 [ 0, %102 ], [ %143, %108 ]
  %110 = phi i64 [ %103, %102 ], [ %144, %108 ]
  %111 = sub i64 0, %109
  %112 = sub i64 0, %109
  %113 = getelementptr inbounds %"struct.v8::internal::wasm::AsmJsParser::BlockInfo", %"struct.v8::internal::wasm::AsmJsParser::BlockInfo"* %104, i64 %111
  %114 = getelementptr inbounds %"struct.v8::internal::wasm::AsmJsParser::BlockInfo", %"struct.v8::internal::wasm::AsmJsParser::BlockInfo"* %105, i64 %112
  %115 = getelementptr inbounds %"struct.v8::internal::wasm::AsmJsParser::BlockInfo", %"struct.v8::internal::wasm::AsmJsParser::BlockInfo"* %114, i64 -1
  %116 = bitcast %"struct.v8::internal::wasm::AsmJsParser::BlockInfo"* %115 to <2 x i64>*
  %117 = load <2 x i64>, <2 x i64>* %116, align 4, !alias.scope !223
  %118 = getelementptr inbounds %"struct.v8::internal::wasm::AsmJsParser::BlockInfo", %"struct.v8::internal::wasm::AsmJsParser::BlockInfo"* %114, i64 -2
  %119 = getelementptr inbounds %"struct.v8::internal::wasm::AsmJsParser::BlockInfo", %"struct.v8::internal::wasm::AsmJsParser::BlockInfo"* %118, i64 -1
  %120 = bitcast %"struct.v8::internal::wasm::AsmJsParser::BlockInfo"* %119 to <2 x i64>*
  %121 = load <2 x i64>, <2 x i64>* %120, align 4, !alias.scope !223
  %122 = getelementptr inbounds %"struct.v8::internal::wasm::AsmJsParser::BlockInfo", %"struct.v8::internal::wasm::AsmJsParser::BlockInfo"* %113, i64 -1
  %123 = bitcast %"struct.v8::internal::wasm::AsmJsParser::BlockInfo"* %122 to <2 x i64>*
  store <2 x i64> %117, <2 x i64>* %123, align 4, !alias.scope !226, !noalias !223
  %124 = getelementptr inbounds %"struct.v8::internal::wasm::AsmJsParser::BlockInfo", %"struct.v8::internal::wasm::AsmJsParser::BlockInfo"* %113, i64 -2
  %125 = getelementptr inbounds %"struct.v8::internal::wasm::AsmJsParser::BlockInfo", %"struct.v8::internal::wasm::AsmJsParser::BlockInfo"* %124, i64 -1
  %126 = bitcast %"struct.v8::internal::wasm::AsmJsParser::BlockInfo"* %125 to <2 x i64>*
  store <2 x i64> %121, <2 x i64>* %126, align 4, !alias.scope !226, !noalias !223
  %127 = sub nuw nsw i64 -4, %109
  %128 = sub nuw nsw i64 -4, %109
  %129 = getelementptr inbounds %"struct.v8::internal::wasm::AsmJsParser::BlockInfo", %"struct.v8::internal::wasm::AsmJsParser::BlockInfo"* %106, i64 %127
  %130 = getelementptr inbounds %"struct.v8::internal::wasm::AsmJsParser::BlockInfo", %"struct.v8::internal::wasm::AsmJsParser::BlockInfo"* %107, i64 %128
  %131 = getelementptr inbounds %"struct.v8::internal::wasm::AsmJsParser::BlockInfo", %"struct.v8::internal::wasm::AsmJsParser::BlockInfo"* %130, i64 -1
  %132 = bitcast %"struct.v8::internal::wasm::AsmJsParser::BlockInfo"* %131 to <2 x i64>*
  %133 = load <2 x i64>, <2 x i64>* %132, align 4, !alias.scope !223
  %134 = getelementptr inbounds %"struct.v8::internal::wasm::AsmJsParser::BlockInfo", %"struct.v8::internal::wasm::AsmJsParser::BlockInfo"* %130, i64 -2
  %135 = getelementptr inbounds %"struct.v8::internal::wasm::AsmJsParser::BlockInfo", %"struct.v8::internal::wasm::AsmJsParser::BlockInfo"* %134, i64 -1
  %136 = bitcast %"struct.v8::internal::wasm::AsmJsParser::BlockInfo"* %135 to <2 x i64>*
  %137 = load <2 x i64>, <2 x i64>* %136, align 4, !alias.scope !223
  %138 = getelementptr inbounds %"struct.v8::internal::wasm::AsmJsParser::BlockInfo", %"struct.v8::internal::wasm::AsmJsParser::BlockInfo"* %129, i64 -1
  %139 = bitcast %"struct.v8::internal::wasm::AsmJsParser::BlockInfo"* %138 to <2 x i64>*
  store <2 x i64> %133, <2 x i64>* %139, align 4, !alias.scope !226, !noalias !223
  %140 = getelementptr inbounds %"struct.v8::internal::wasm::AsmJsParser::BlockInfo", %"struct.v8::internal::wasm::AsmJsParser::BlockInfo"* %129, i64 -2
  %141 = getelementptr inbounds %"struct.v8::internal::wasm::AsmJsParser::BlockInfo", %"struct.v8::internal::wasm::AsmJsParser::BlockInfo"* %140, i64 -1
  %142 = bitcast %"struct.v8::internal::wasm::AsmJsParser::BlockInfo"* %141 to <2 x i64>*
  store <2 x i64> %137, <2 x i64>* %142, align 4, !alias.scope !226, !noalias !223
  %143 = add i64 %109, 8
  %144 = add i64 %110, -2
  %145 = icmp eq i64 %144, 0
  br i1 %145, label %146, label %108, !llvm.loop !228

146:                                              ; preds = %108, %91
  %147 = phi i64 [ 0, %91 ], [ %143, %108 ]
  %148 = icmp eq i64 %100, 0
  br i1 %148, label %168, label %149

149:                                              ; preds = %146
  %150 = sub i64 0, %147
  %151 = getelementptr %"struct.v8::internal::wasm::AsmJsParser::BlockInfo", %"struct.v8::internal::wasm::AsmJsParser::BlockInfo"* %60, i64 -1
  %152 = sub i64 0, %147
  %153 = getelementptr %"struct.v8::internal::wasm::AsmJsParser::BlockInfo", %"struct.v8::internal::wasm::AsmJsParser::BlockInfo"* %69, i64 -1
  %154 = getelementptr inbounds %"struct.v8::internal::wasm::AsmJsParser::BlockInfo", %"struct.v8::internal::wasm::AsmJsParser::BlockInfo"* %151, i64 %150
  %155 = getelementptr inbounds %"struct.v8::internal::wasm::AsmJsParser::BlockInfo", %"struct.v8::internal::wasm::AsmJsParser::BlockInfo"* %153, i64 %152
  %156 = getelementptr inbounds %"struct.v8::internal::wasm::AsmJsParser::BlockInfo", %"struct.v8::internal::wasm::AsmJsParser::BlockInfo"* %155, i64 -1
  %157 = bitcast %"struct.v8::internal::wasm::AsmJsParser::BlockInfo"* %156 to <2 x i64>*
  %158 = load <2 x i64>, <2 x i64>* %157, align 4, !alias.scope !223
  %159 = getelementptr inbounds %"struct.v8::internal::wasm::AsmJsParser::BlockInfo", %"struct.v8::internal::wasm::AsmJsParser::BlockInfo"* %155, i64 -2
  %160 = getelementptr inbounds %"struct.v8::internal::wasm::AsmJsParser::BlockInfo", %"struct.v8::internal::wasm::AsmJsParser::BlockInfo"* %159, i64 -1
  %161 = bitcast %"struct.v8::internal::wasm::AsmJsParser::BlockInfo"* %160 to <2 x i64>*
  %162 = load <2 x i64>, <2 x i64>* %161, align 4, !alias.scope !223
  %163 = getelementptr inbounds %"struct.v8::internal::wasm::AsmJsParser::BlockInfo", %"struct.v8::internal::wasm::AsmJsParser::BlockInfo"* %154, i64 -1
  %164 = bitcast %"struct.v8::internal::wasm::AsmJsParser::BlockInfo"* %163 to <2 x i64>*
  store <2 x i64> %158, <2 x i64>* %164, align 4, !alias.scope !226, !noalias !223
  %165 = getelementptr inbounds %"struct.v8::internal::wasm::AsmJsParser::BlockInfo", %"struct.v8::internal::wasm::AsmJsParser::BlockInfo"* %154, i64 -2
  %166 = getelementptr inbounds %"struct.v8::internal::wasm::AsmJsParser::BlockInfo", %"struct.v8::internal::wasm::AsmJsParser::BlockInfo"* %165, i64 -1
  %167 = bitcast %"struct.v8::internal::wasm::AsmJsParser::BlockInfo"* %166 to <2 x i64>*
  store <2 x i64> %162, <2 x i64>* %167, align 4, !alias.scope !226, !noalias !223
  br label %168

168:                                              ; preds = %146, %149
  %169 = icmp eq i64 %76, %92
  br i1 %169, label %240, label %170

170:                                              ; preds = %168, %78, %71
  %171 = phi %"struct.v8::internal::wasm::AsmJsParser::BlockInfo"* [ %60, %78 ], [ %60, %71 ], [ %94, %168 ]
  %172 = phi %"struct.v8::internal::wasm::AsmJsParser::BlockInfo"* [ %69, %78 ], [ %69, %71 ], [ %96, %168 ]
  %173 = getelementptr %"struct.v8::internal::wasm::AsmJsParser::BlockInfo", %"struct.v8::internal::wasm::AsmJsParser::BlockInfo"* %172, i64 -1, i32 0
  %174 = ptrtoint i32* %173 to i64
  %175 = sub i64 %174, %68
  %176 = lshr i64 %175, 3
  %177 = add nuw nsw i64 %176, 1
  %178 = and i64 %177, 7
  %179 = icmp eq i64 %178, 0
  br i1 %179, label %191, label %180

180:                                              ; preds = %170, %180
  %181 = phi %"struct.v8::internal::wasm::AsmJsParser::BlockInfo"* [ %184, %180 ], [ %171, %170 ]
  %182 = phi %"struct.v8::internal::wasm::AsmJsParser::BlockInfo"* [ %185, %180 ], [ %172, %170 ]
  %183 = phi i64 [ %189, %180 ], [ %178, %170 ]
  %184 = getelementptr inbounds %"struct.v8::internal::wasm::AsmJsParser::BlockInfo", %"struct.v8::internal::wasm::AsmJsParser::BlockInfo"* %181, i64 -1
  %185 = getelementptr inbounds %"struct.v8::internal::wasm::AsmJsParser::BlockInfo", %"struct.v8::internal::wasm::AsmJsParser::BlockInfo"* %182, i64 -1
  %186 = bitcast %"struct.v8::internal::wasm::AsmJsParser::BlockInfo"* %185 to i64*
  %187 = bitcast %"struct.v8::internal::wasm::AsmJsParser::BlockInfo"* %184 to i64*
  %188 = load i64, i64* %186, align 4
  store i64 %188, i64* %187, align 4
  %189 = add i64 %183, -1
  %190 = icmp eq i64 %189, 0
  br i1 %190, label %191, label %180, !llvm.loop !229

191:                                              ; preds = %180, %170
  %192 = phi %"struct.v8::internal::wasm::AsmJsParser::BlockInfo"* [ undef, %170 ], [ %184, %180 ]
  %193 = phi %"struct.v8::internal::wasm::AsmJsParser::BlockInfo"* [ %171, %170 ], [ %184, %180 ]
  %194 = phi %"struct.v8::internal::wasm::AsmJsParser::BlockInfo"* [ %172, %170 ], [ %185, %180 ]
  %195 = icmp ult i64 %175, 56
  br i1 %195, label %240, label %196

196:                                              ; preds = %191, %196
  %197 = phi %"struct.v8::internal::wasm::AsmJsParser::BlockInfo"* [ %234, %196 ], [ %193, %191 ]
  %198 = phi %"struct.v8::internal::wasm::AsmJsParser::BlockInfo"* [ %235, %196 ], [ %194, %191 ]
  %199 = getelementptr inbounds %"struct.v8::internal::wasm::AsmJsParser::BlockInfo", %"struct.v8::internal::wasm::AsmJsParser::BlockInfo"* %197, i64 -1
  %200 = getelementptr inbounds %"struct.v8::internal::wasm::AsmJsParser::BlockInfo", %"struct.v8::internal::wasm::AsmJsParser::BlockInfo"* %198, i64 -1
  %201 = bitcast %"struct.v8::internal::wasm::AsmJsParser::BlockInfo"* %200 to i64*
  %202 = bitcast %"struct.v8::internal::wasm::AsmJsParser::BlockInfo"* %199 to i64*
  %203 = load i64, i64* %201, align 4
  store i64 %203, i64* %202, align 4
  %204 = getelementptr inbounds %"struct.v8::internal::wasm::AsmJsParser::BlockInfo", %"struct.v8::internal::wasm::AsmJsParser::BlockInfo"* %197, i64 -2
  %205 = getelementptr inbounds %"struct.v8::internal::wasm::AsmJsParser::BlockInfo", %"struct.v8::internal::wasm::AsmJsParser::BlockInfo"* %198, i64 -2
  %206 = bitcast %"struct.v8::internal::wasm::AsmJsParser::BlockInfo"* %205 to i64*
  %207 = bitcast %"struct.v8::internal::wasm::AsmJsParser::BlockInfo"* %204 to i64*
  %208 = load i64, i64* %206, align 4
  store i64 %208, i64* %207, align 4
  %209 = getelementptr inbounds %"struct.v8::internal::wasm::AsmJsParser::BlockInfo", %"struct.v8::internal::wasm::AsmJsParser::BlockInfo"* %197, i64 -3
  %210 = getelementptr inbounds %"struct.v8::internal::wasm::AsmJsParser::BlockInfo", %"struct.v8::internal::wasm::AsmJsParser::BlockInfo"* %198, i64 -3
  %211 = bitcast %"struct.v8::internal::wasm::AsmJsParser::BlockInfo"* %210 to i64*
  %212 = bitcast %"struct.v8::internal::wasm::AsmJsParser::BlockInfo"* %209 to i64*
  %213 = load i64, i64* %211, align 4
  store i64 %213, i64* %212, align 4
  %214 = getelementptr inbounds %"struct.v8::internal::wasm::AsmJsParser::BlockInfo", %"struct.v8::internal::wasm::AsmJsParser::BlockInfo"* %197, i64 -4
  %215 = getelementptr inbounds %"struct.v8::internal::wasm::AsmJsParser::BlockInfo", %"struct.v8::internal::wasm::AsmJsParser::BlockInfo"* %198, i64 -4
  %216 = bitcast %"struct.v8::internal::wasm::AsmJsParser::BlockInfo"* %215 to i64*
  %217 = bitcast %"struct.v8::internal::wasm::AsmJsParser::BlockInfo"* %214 to i64*
  %218 = load i64, i64* %216, align 4
  store i64 %218, i64* %217, align 4
  %219 = getelementptr inbounds %"struct.v8::internal::wasm::AsmJsParser::BlockInfo", %"struct.v8::internal::wasm::AsmJsParser::BlockInfo"* %197, i64 -5
  %220 = getelementptr inbounds %"struct.v8::internal::wasm::AsmJsParser::BlockInfo", %"struct.v8::internal::wasm::AsmJsParser::BlockInfo"* %198, i64 -5
  %221 = bitcast %"struct.v8::internal::wasm::AsmJsParser::BlockInfo"* %220 to i64*
  %222 = bitcast %"struct.v8::internal::wasm::AsmJsParser::BlockInfo"* %219 to i64*
  %223 = load i64, i64* %221, align 4
  store i64 %223, i64* %222, align 4
  %224 = getelementptr inbounds %"struct.v8::internal::wasm::AsmJsParser::BlockInfo", %"struct.v8::internal::wasm::AsmJsParser::BlockInfo"* %197, i64 -6
  %225 = getelementptr inbounds %"struct.v8::internal::wasm::AsmJsParser::BlockInfo", %"struct.v8::internal::wasm::AsmJsParser::BlockInfo"* %198, i64 -6
  %226 = bitcast %"struct.v8::internal::wasm::AsmJsParser::BlockInfo"* %225 to i64*
  %227 = bitcast %"struct.v8::internal::wasm::AsmJsParser::BlockInfo"* %224 to i64*
  %228 = load i64, i64* %226, align 4
  store i64 %228, i64* %227, align 4
  %229 = getelementptr inbounds %"struct.v8::internal::wasm::AsmJsParser::BlockInfo", %"struct.v8::internal::wasm::AsmJsParser::BlockInfo"* %197, i64 -7
  %230 = getelementptr inbounds %"struct.v8::internal::wasm::AsmJsParser::BlockInfo", %"struct.v8::internal::wasm::AsmJsParser::BlockInfo"* %198, i64 -7
  %231 = bitcast %"struct.v8::internal::wasm::AsmJsParser::BlockInfo"* %230 to i64*
  %232 = bitcast %"struct.v8::internal::wasm::AsmJsParser::BlockInfo"* %229 to i64*
  %233 = load i64, i64* %231, align 4
  store i64 %233, i64* %232, align 4
  %234 = getelementptr inbounds %"struct.v8::internal::wasm::AsmJsParser::BlockInfo", %"struct.v8::internal::wasm::AsmJsParser::BlockInfo"* %197, i64 -8
  %235 = getelementptr inbounds %"struct.v8::internal::wasm::AsmJsParser::BlockInfo", %"struct.v8::internal::wasm::AsmJsParser::BlockInfo"* %198, i64 -8
  %236 = bitcast %"struct.v8::internal::wasm::AsmJsParser::BlockInfo"* %235 to i64*
  %237 = bitcast %"struct.v8::internal::wasm::AsmJsParser::BlockInfo"* %234 to i64*
  %238 = load i64, i64* %236, align 4
  store i64 %238, i64* %237, align 4
  %239 = icmp eq %"struct.v8::internal::wasm::AsmJsParser::BlockInfo"* %235, %67
  br i1 %239, label %240, label %196, !llvm.loop !230

240:                                              ; preds = %191, %196, %168, %57
  %241 = phi %"struct.v8::internal::wasm::AsmJsParser::BlockInfo"* [ %60, %57 ], [ %94, %168 ], [ %192, %191 ], [ %234, %196 ]
  %242 = ptrtoint %"struct.v8::internal::wasm::AsmJsParser::BlockInfo"* %241 to i64
  store i64 %242, i64* %21, align 8
  store i64 %65, i64* %20, align 8
  store i64 %62, i64* %30, align 8
  br label %243

243:                                              ; preds = %13, %240
  %244 = getelementptr inbounds %"class.v8::internal::wasm::AsmJsParser", %"class.v8::internal::wasm::AsmJsParser"* %0, i64 0, i32 1, i32 5
  %245 = load i64, i64* %244, align 8
  %246 = load %"class.v8::internal::wasm::WasmFunctionBuilder"*, %"class.v8::internal::wasm::WasmFunctionBuilder"** %4, align 8
  tail call void @_ZN2v88internal4wasm19WasmFunctionBuilder16AddAsmWasmOffsetEmm(%"class.v8::internal::wasm::WasmFunctionBuilder"* %246, i64 %245, i64 %245) #12
  %247 = load %"class.v8::internal::wasm::WasmFunctionBuilder"*, %"class.v8::internal::wasm::WasmFunctionBuilder"** %4, align 8
  tail call void @_ZN2v88internal4wasm19WasmFunctionBuilder10EmitWithU8ENS1_10WasmOpcodeEh(%"class.v8::internal::wasm::WasmFunctionBuilder"* %247, i32 3, i8 zeroext 64) #12
  %248 = load i32, i32* %2, align 4
  tail call void @_ZN2v88internal4wasm11AsmJsParser9BareBeginENS2_9BlockKindEi(%"class.v8::internal::wasm::AsmJsParser"* %0, i32 1, i32 %248)
  %249 = load %"class.v8::internal::wasm::WasmFunctionBuilder"*, %"class.v8::internal::wasm::WasmFunctionBuilder"** %4, align 8
  tail call void @_ZN2v88internal4wasm19WasmFunctionBuilder10EmitWithU8ENS1_10WasmOpcodeEh(%"class.v8::internal::wasm::WasmFunctionBuilder"* %249, i32 2, i8 zeroext 64) #12
  store i32 0, i32* %2, align 4
  %250 = getelementptr inbounds %"class.v8::internal::wasm::AsmJsParser", %"class.v8::internal::wasm::AsmJsParser"* %0, i64 0, i32 1
  %251 = getelementptr inbounds %"class.v8::internal::wasm::AsmJsParser", %"class.v8::internal::wasm::AsmJsParser"* %0, i64 0, i32 1, i32 1
  %252 = load i32, i32* %251, align 8
  %253 = icmp eq i32 %252, -9955
  br i1 %253, label %260, label %254

254:                                              ; preds = %243
  %255 = getelementptr inbounds %"class.v8::internal::wasm::AsmJsParser", %"class.v8::internal::wasm::AsmJsParser"* %0, i64 0, i32 17
  store i8 1, i8* %255, align 4
  %256 = getelementptr inbounds %"class.v8::internal::wasm::AsmJsParser", %"class.v8::internal::wasm::AsmJsParser"* %0, i64 0, i32 18
  store i8* getelementptr inbounds ([17 x i8], [17 x i8]* @.str.3, i64 0, i64 0), i8** %256, align 8
  %257 = load i64, i64* %244, align 8
  %258 = trunc i64 %257 to i32
  %259 = getelementptr inbounds %"class.v8::internal::wasm::AsmJsParser", %"class.v8::internal::wasm::AsmJsParser"* %0, i64 0, i32 19
  store i32 %258, i32* %259, align 8
  br label %336

260:                                              ; preds = %243
  tail call void @_ZN2v88internal12AsmJsScanner4NextEv(%"class.v8::internal::AsmJsScanner"* %250) #12
  %261 = tail call i64 @_ZN2v88internal23GetCurrentStackPositionEv() #12
  %262 = getelementptr inbounds %"class.v8::internal::wasm::AsmJsParser", %"class.v8::internal::wasm::AsmJsParser"* %0, i64 0, i32 5
  %263 = load i64, i64* %262, align 8
  %264 = icmp ult i64 %261, %263
  br i1 %264, label %265, label %271

265:                                              ; preds = %260
  %266 = getelementptr inbounds %"class.v8::internal::wasm::AsmJsParser", %"class.v8::internal::wasm::AsmJsParser"* %0, i64 0, i32 17
  store i8 1, i8* %266, align 4
  %267 = getelementptr inbounds %"class.v8::internal::wasm::AsmJsParser", %"class.v8::internal::wasm::AsmJsParser"* %0, i64 0, i32 18
  store i8* getelementptr inbounds ([44 x i8], [44 x i8]* @.str.2, i64 0, i64 0), i8** %267, align 8
  %268 = load i64, i64* %244, align 8
  %269 = trunc i64 %268 to i32
  %270 = getelementptr inbounds %"class.v8::internal::wasm::AsmJsParser", %"class.v8::internal::wasm::AsmJsParser"* %0, i64 0, i32 19
  store i32 %269, i32* %270, align 8
  br label %336

271:                                              ; preds = %260
  tail call void @_ZN2v88internal4wasm11AsmJsParser17ValidateStatementEv(%"class.v8::internal::wasm::AsmJsParser"* %0)
  %272 = getelementptr inbounds %"class.v8::internal::wasm::AsmJsParser", %"class.v8::internal::wasm::AsmJsParser"* %0, i64 0, i32 17
  %273 = load i8, i8* %272, align 4, !range !69
  %274 = icmp eq i8 %273, 0
  br i1 %274, label %275, label %336

275:                                              ; preds = %271
  %276 = load i32, i32* %251, align 8
  %277 = icmp eq i32 %276, -9945
  br i1 %277, label %283, label %278

278:                                              ; preds = %275
  store i8 1, i8* %272, align 4
  %279 = getelementptr inbounds %"class.v8::internal::wasm::AsmJsParser", %"class.v8::internal::wasm::AsmJsParser"* %0, i64 0, i32 18
  store i8* getelementptr inbounds ([17 x i8], [17 x i8]* @.str.3, i64 0, i64 0), i8** %279, align 8
  %280 = load i64, i64* %244, align 8
  %281 = trunc i64 %280 to i32
  %282 = getelementptr inbounds %"class.v8::internal::wasm::AsmJsParser", %"class.v8::internal::wasm::AsmJsParser"* %0, i64 0, i32 19
  store i32 %281, i32* %282, align 8
  br label %336

283:                                              ; preds = %275
  tail call void @_ZN2v88internal12AsmJsScanner4NextEv(%"class.v8::internal::AsmJsScanner"* %250) #12
  %284 = load %"struct.v8::internal::wasm::AsmJsParser::BlockInfo"*, %"struct.v8::internal::wasm::AsmJsParser::BlockInfo"** %7, align 8
  %285 = getelementptr inbounds %"struct.v8::internal::wasm::AsmJsParser::BlockInfo", %"struct.v8::internal::wasm::AsmJsParser::BlockInfo"* %284, i64 -1
  store %"struct.v8::internal::wasm::AsmJsParser::BlockInfo"* %285, %"struct.v8::internal::wasm::AsmJsParser::BlockInfo"** %7, align 8
  %286 = load %"class.v8::internal::wasm::WasmFunctionBuilder"*, %"class.v8::internal::wasm::WasmFunctionBuilder"** %4, align 8
  tail call void @_ZN2v88internal4wasm19WasmFunctionBuilder4EmitENS1_10WasmOpcodeE(%"class.v8::internal::wasm::WasmFunctionBuilder"* %286, i32 11) #12
  %287 = load i32, i32* %251, align 8
  %288 = icmp eq i32 %287, 40
  br i1 %288, label %294, label %289

289:                                              ; preds = %283
  store i8 1, i8* %272, align 4
  %290 = getelementptr inbounds %"class.v8::internal::wasm::AsmJsParser", %"class.v8::internal::wasm::AsmJsParser"* %0, i64 0, i32 18
  store i8* getelementptr inbounds ([17 x i8], [17 x i8]* @.str.3, i64 0, i64 0), i8** %290, align 8
  %291 = load i64, i64* %244, align 8
  %292 = trunc i64 %291 to i32
  %293 = getelementptr inbounds %"class.v8::internal::wasm::AsmJsParser", %"class.v8::internal::wasm::AsmJsParser"* %0, i64 0, i32 19
  store i32 %292, i32* %293, align 8
  br label %336

294:                                              ; preds = %283
  tail call void @_ZN2v88internal12AsmJsScanner4NextEv(%"class.v8::internal::AsmJsScanner"* %250) #12
  %295 = tail call i64 @_ZN2v88internal23GetCurrentStackPositionEv() #12
  %296 = load i64, i64* %262, align 8
  %297 = icmp ult i64 %295, %296
  br i1 %297, label %298, label %303

298:                                              ; preds = %294
  store i8 1, i8* %272, align 4
  %299 = getelementptr inbounds %"class.v8::internal::wasm::AsmJsParser", %"class.v8::internal::wasm::AsmJsParser"* %0, i64 0, i32 18
  store i8* getelementptr inbounds ([44 x i8], [44 x i8]* @.str.2, i64 0, i64 0), i8** %299, align 8
  %300 = load i64, i64* %244, align 8
  %301 = trunc i64 %300 to i32
  %302 = getelementptr inbounds %"class.v8::internal::wasm::AsmJsParser", %"class.v8::internal::wasm::AsmJsParser"* %0, i64 0, i32 19
  store i32 %301, i32* %302, align 8
  br label %336

303:                                              ; preds = %294
  %304 = tail call %"class.v8::internal::wasm::AsmType"* @_ZN2v88internal4wasm11AsmJsParser10ExpressionEPNS1_7AsmTypeE(%"class.v8::internal::wasm::AsmJsParser"* %0, %"class.v8::internal::wasm::AsmType"* nonnull inttoptr (i64 769 to %"class.v8::internal::wasm::AsmType"*))
  %305 = load i8, i8* %272, align 4, !range !69
  %306 = icmp eq i8 %305, 0
  br i1 %306, label %307, label %336

307:                                              ; preds = %303
  %308 = load %"class.v8::internal::wasm::WasmFunctionBuilder"*, %"class.v8::internal::wasm::WasmFunctionBuilder"** %4, align 8
  tail call void @_ZN2v88internal4wasm19WasmFunctionBuilder4EmitENS1_10WasmOpcodeE(%"class.v8::internal::wasm::WasmFunctionBuilder"* %308, i32 69) #12
  %309 = load %"class.v8::internal::wasm::WasmFunctionBuilder"*, %"class.v8::internal::wasm::WasmFunctionBuilder"** %4, align 8
  tail call void @_ZN2v88internal4wasm19WasmFunctionBuilder10EmitWithU8ENS1_10WasmOpcodeEh(%"class.v8::internal::wasm::WasmFunctionBuilder"* %309, i32 13, i8 zeroext 1) #12
  %310 = load %"class.v8::internal::wasm::WasmFunctionBuilder"*, %"class.v8::internal::wasm::WasmFunctionBuilder"** %4, align 8
  tail call void @_ZN2v88internal4wasm19WasmFunctionBuilder10EmitWithU8ENS1_10WasmOpcodeEh(%"class.v8::internal::wasm::WasmFunctionBuilder"* %310, i32 12, i8 zeroext 0) #12
  %311 = load i32, i32* %251, align 8
  %312 = icmp eq i32 %311, 41
  br i1 %312, label %318, label %313

313:                                              ; preds = %307
  store i8 1, i8* %272, align 4
  %314 = getelementptr inbounds %"class.v8::internal::wasm::AsmJsParser", %"class.v8::internal::wasm::AsmJsParser"* %0, i64 0, i32 18
  store i8* getelementptr inbounds ([17 x i8], [17 x i8]* @.str.3, i64 0, i64 0), i8** %314, align 8
  %315 = load i64, i64* %244, align 8
  %316 = trunc i64 %315 to i32
  %317 = getelementptr inbounds %"class.v8::internal::wasm::AsmJsParser", %"class.v8::internal::wasm::AsmJsParser"* %0, i64 0, i32 19
  store i32 %316, i32* %317, align 8
  br label %336

318:                                              ; preds = %307
  tail call void @_ZN2v88internal12AsmJsScanner4NextEv(%"class.v8::internal::AsmJsScanner"* %250) #12
  %319 = load %"struct.v8::internal::wasm::AsmJsParser::BlockInfo"*, %"struct.v8::internal::wasm::AsmJsParser::BlockInfo"** %7, align 8
  %320 = getelementptr inbounds %"struct.v8::internal::wasm::AsmJsParser::BlockInfo", %"struct.v8::internal::wasm::AsmJsParser::BlockInfo"* %319, i64 -1
  store %"struct.v8::internal::wasm::AsmJsParser::BlockInfo"* %320, %"struct.v8::internal::wasm::AsmJsParser::BlockInfo"** %7, align 8
  %321 = load %"class.v8::internal::wasm::WasmFunctionBuilder"*, %"class.v8::internal::wasm::WasmFunctionBuilder"** %4, align 8
  tail call void @_ZN2v88internal4wasm19WasmFunctionBuilder4EmitENS1_10WasmOpcodeE(%"class.v8::internal::wasm::WasmFunctionBuilder"* %321, i32 11) #12
  %322 = load %"struct.v8::internal::wasm::AsmJsParser::BlockInfo"*, %"struct.v8::internal::wasm::AsmJsParser::BlockInfo"** %7, align 8
  %323 = getelementptr inbounds %"struct.v8::internal::wasm::AsmJsParser::BlockInfo", %"struct.v8::internal::wasm::AsmJsParser::BlockInfo"* %322, i64 -1
  store %"struct.v8::internal::wasm::AsmJsParser::BlockInfo"* %323, %"struct.v8::internal::wasm::AsmJsParser::BlockInfo"** %7, align 8
  %324 = load %"class.v8::internal::wasm::WasmFunctionBuilder"*, %"class.v8::internal::wasm::WasmFunctionBuilder"** %4, align 8
  tail call void @_ZN2v88internal4wasm19WasmFunctionBuilder4EmitENS1_10WasmOpcodeE(%"class.v8::internal::wasm::WasmFunctionBuilder"* %324, i32 11) #12
  %325 = load i32, i32* %251, align 8
  switch i32 %325, label %327 [
    i32 59, label %326
    i32 125, label %336
  ]

326:                                              ; preds = %318
  tail call void @_ZN2v88internal12AsmJsScanner4NextEv(%"class.v8::internal::AsmJsScanner"* %250) #12
  br label %336

327:                                              ; preds = %318
  %328 = getelementptr inbounds %"class.v8::internal::wasm::AsmJsParser", %"class.v8::internal::wasm::AsmJsParser"* %0, i64 0, i32 1, i32 20
  %329 = load i8, i8* %328, align 4, !range !69
  %330 = icmp eq i8 %329, 0
  br i1 %330, label %331, label %336

331:                                              ; preds = %327
  store i8 1, i8* %272, align 4
  %332 = getelementptr inbounds %"class.v8::internal::wasm::AsmJsParser", %"class.v8::internal::wasm::AsmJsParser"* %0, i64 0, i32 18
  store i8* getelementptr inbounds ([11 x i8], [11 x i8]* @.str.1, i64 0, i64 0), i8** %332, align 8
  %333 = load i64, i64* %244, align 8
  %334 = trunc i64 %333 to i32
  %335 = getelementptr inbounds %"class.v8::internal::wasm::AsmJsParser", %"class.v8::internal::wasm::AsmJsParser"* %0, i64 0, i32 19
  store i32 %334, i32* %335, align 8
  br label %336

336:                                              ; preds = %331, %327, %326, %318, %303, %271, %313, %298, %289, %278, %265, %254
  ret void
}

; Function Attrs: nounwind ssp uwtable
define hidden void @_ZN2v88internal4wasm11AsmJsParser12ForStatementEv(%"class.v8::internal::wasm::AsmJsParser"*) local_unnamed_addr #0 align 2 {
  %2 = getelementptr inbounds %"class.v8::internal::wasm::AsmJsParser", %"class.v8::internal::wasm::AsmJsParser"* %0, i64 0, i32 1
  %3 = getelementptr inbounds %"class.v8::internal::wasm::AsmJsParser", %"class.v8::internal::wasm::AsmJsParser"* %0, i64 0, i32 1, i32 1
  %4 = load i32, i32* %3, align 8
  %5 = icmp eq i32 %4, -9952
  br i1 %5, label %13, label %6

6:                                                ; preds = %1
  %7 = getelementptr inbounds %"class.v8::internal::wasm::AsmJsParser", %"class.v8::internal::wasm::AsmJsParser"* %0, i64 0, i32 17
  store i8 1, i8* %7, align 4
  %8 = getelementptr inbounds %"class.v8::internal::wasm::AsmJsParser", %"class.v8::internal::wasm::AsmJsParser"* %0, i64 0, i32 18
  store i8* getelementptr inbounds ([17 x i8], [17 x i8]* @.str.3, i64 0, i64 0), i8** %8, align 8
  %9 = getelementptr inbounds %"class.v8::internal::wasm::AsmJsParser", %"class.v8::internal::wasm::AsmJsParser"* %0, i64 0, i32 1, i32 5
  %10 = load i64, i64* %9, align 8
  %11 = trunc i64 %10 to i32
  %12 = getelementptr inbounds %"class.v8::internal::wasm::AsmJsParser", %"class.v8::internal::wasm::AsmJsParser"* %0, i64 0, i32 19
  store i32 %11, i32* %12, align 8
  br label %397

13:                                               ; preds = %1
  tail call void @_ZN2v88internal12AsmJsScanner4NextEv(%"class.v8::internal::AsmJsScanner"* %2) #12
  %14 = load i32, i32* %3, align 8
  %15 = icmp eq i32 %14, 40
  br i1 %15, label %23, label %16

16:                                               ; preds = %13
  %17 = getelementptr inbounds %"class.v8::internal::wasm::AsmJsParser", %"class.v8::internal::wasm::AsmJsParser"* %0, i64 0, i32 17
  store i8 1, i8* %17, align 4
  %18 = getelementptr inbounds %"class.v8::internal::wasm::AsmJsParser", %"class.v8::internal::wasm::AsmJsParser"* %0, i64 0, i32 18
  store i8* getelementptr inbounds ([17 x i8], [17 x i8]* @.str.3, i64 0, i64 0), i8** %18, align 8
  %19 = getelementptr inbounds %"class.v8::internal::wasm::AsmJsParser", %"class.v8::internal::wasm::AsmJsParser"* %0, i64 0, i32 1, i32 5
  %20 = load i64, i64* %19, align 8
  %21 = trunc i64 %20 to i32
  %22 = getelementptr inbounds %"class.v8::internal::wasm::AsmJsParser", %"class.v8::internal::wasm::AsmJsParser"* %0, i64 0, i32 19
  store i32 %21, i32* %22, align 8
  br label %397

23:                                               ; preds = %13
  tail call void @_ZN2v88internal12AsmJsScanner4NextEv(%"class.v8::internal::AsmJsScanner"* %2) #12
  %24 = load i32, i32* %3, align 8
  %25 = icmp eq i32 %24, 59
  br i1 %25, label %58, label %26

26:                                               ; preds = %23
  %27 = tail call i64 @_ZN2v88internal23GetCurrentStackPositionEv() #12
  %28 = getelementptr inbounds %"class.v8::internal::wasm::AsmJsParser", %"class.v8::internal::wasm::AsmJsParser"* %0, i64 0, i32 5
  %29 = load i64, i64* %28, align 8
  %30 = icmp ult i64 %27, %29
  br i1 %30, label %31, label %38

31:                                               ; preds = %26
  %32 = getelementptr inbounds %"class.v8::internal::wasm::AsmJsParser", %"class.v8::internal::wasm::AsmJsParser"* %0, i64 0, i32 17
  store i8 1, i8* %32, align 4
  %33 = getelementptr inbounds %"class.v8::internal::wasm::AsmJsParser", %"class.v8::internal::wasm::AsmJsParser"* %0, i64 0, i32 18
  store i8* getelementptr inbounds ([44 x i8], [44 x i8]* @.str.2, i64 0, i64 0), i8** %33, align 8
  %34 = getelementptr inbounds %"class.v8::internal::wasm::AsmJsParser", %"class.v8::internal::wasm::AsmJsParser"* %0, i64 0, i32 1, i32 5
  %35 = load i64, i64* %34, align 8
  %36 = trunc i64 %35 to i32
  %37 = getelementptr inbounds %"class.v8::internal::wasm::AsmJsParser", %"class.v8::internal::wasm::AsmJsParser"* %0, i64 0, i32 19
  store i32 %36, i32* %37, align 8
  br label %397

38:                                               ; preds = %26
  %39 = tail call %"class.v8::internal::wasm::AsmType"* @_ZN2v88internal4wasm11AsmJsParser10ExpressionEPNS1_7AsmTypeE(%"class.v8::internal::wasm::AsmJsParser"* %0, %"class.v8::internal::wasm::AsmType"* null)
  %40 = getelementptr inbounds %"class.v8::internal::wasm::AsmJsParser", %"class.v8::internal::wasm::AsmJsParser"* %0, i64 0, i32 17
  %41 = load i8, i8* %40, align 4, !range !69
  %42 = icmp eq i8 %41, 0
  br i1 %42, label %43, label %397

43:                                               ; preds = %38
  %44 = tail call zeroext i1 @_ZN2v88internal4wasm7AsmType3IsAEPS2_(%"class.v8::internal::wasm::AsmType"* %39, %"class.v8::internal::wasm::AsmType"* nonnull inttoptr (i64 17 to %"class.v8::internal::wasm::AsmType"*)) #12
  br i1 %44, label %48, label %45

45:                                               ; preds = %43
  %46 = getelementptr inbounds %"class.v8::internal::wasm::AsmJsParser", %"class.v8::internal::wasm::AsmJsParser"* %0, i64 0, i32 3
  %47 = load %"class.v8::internal::wasm::WasmFunctionBuilder"*, %"class.v8::internal::wasm::WasmFunctionBuilder"** %46, align 8
  tail call void @_ZN2v88internal4wasm19WasmFunctionBuilder4EmitENS1_10WasmOpcodeE(%"class.v8::internal::wasm::WasmFunctionBuilder"* %47, i32 26) #12
  br label %48

48:                                               ; preds = %45, %43
  %49 = load i32, i32* %3, align 8
  %50 = icmp eq i32 %49, 59
  br i1 %50, label %58, label %51

51:                                               ; preds = %48
  %52 = getelementptr inbounds %"class.v8::internal::wasm::AsmJsParser", %"class.v8::internal::wasm::AsmJsParser"* %0, i64 0, i32 17
  store i8 1, i8* %52, align 4
  %53 = getelementptr inbounds %"class.v8::internal::wasm::AsmJsParser", %"class.v8::internal::wasm::AsmJsParser"* %0, i64 0, i32 18
  store i8* getelementptr inbounds ([17 x i8], [17 x i8]* @.str.3, i64 0, i64 0), i8** %53, align 8
  %54 = getelementptr inbounds %"class.v8::internal::wasm::AsmJsParser", %"class.v8::internal::wasm::AsmJsParser"* %0, i64 0, i32 1, i32 5
  %55 = load i64, i64* %54, align 8
  %56 = trunc i64 %55 to i32
  %57 = getelementptr inbounds %"class.v8::internal::wasm::AsmJsParser", %"class.v8::internal::wasm::AsmJsParser"* %0, i64 0, i32 19
  store i32 %56, i32* %57, align 8
  br label %397

58:                                               ; preds = %23, %48
  tail call void @_ZN2v88internal12AsmJsScanner4NextEv(%"class.v8::internal::AsmJsScanner"* %2) #12
  %59 = getelementptr inbounds %"class.v8::internal::wasm::AsmJsParser", %"class.v8::internal::wasm::AsmJsParser"* %0, i64 0, i32 40
  %60 = load i32, i32* %59, align 4
  tail call void @_ZN2v88internal4wasm11AsmJsParser9BareBeginENS2_9BlockKindEi(%"class.v8::internal::wasm::AsmJsParser"* %0, i32 0, i32 %60) #12
  %61 = getelementptr inbounds %"class.v8::internal::wasm::AsmJsParser", %"class.v8::internal::wasm::AsmJsParser"* %0, i64 0, i32 3
  %62 = load %"class.v8::internal::wasm::WasmFunctionBuilder"*, %"class.v8::internal::wasm::WasmFunctionBuilder"** %61, align 8
  tail call void @_ZN2v88internal4wasm19WasmFunctionBuilder10EmitWithU8ENS1_10WasmOpcodeEh(%"class.v8::internal::wasm::WasmFunctionBuilder"* %62, i32 2, i8 zeroext 64) #12
  %63 = getelementptr inbounds %"class.v8::internal::wasm::AsmJsParser", %"class.v8::internal::wasm::AsmJsParser"* %0, i64 0, i32 25, i32 0
  %64 = getelementptr inbounds %"class.v8::internal::wasm::AsmJsParser", %"class.v8::internal::wasm::AsmJsParser"* %0, i64 0, i32 25, i32 0, i32 0, i32 1
  %65 = load %"struct.v8::internal::wasm::AsmJsParser::BlockInfo"*, %"struct.v8::internal::wasm::AsmJsParser::BlockInfo"** %64, align 8
  %66 = getelementptr inbounds %"class.v8::internal::wasm::AsmJsParser", %"class.v8::internal::wasm::AsmJsParser"* %0, i64 0, i32 25, i32 0, i32 0, i32 2, i32 0, i32 0
  %67 = load %"struct.v8::internal::wasm::AsmJsParser::BlockInfo"*, %"struct.v8::internal::wasm::AsmJsParser::BlockInfo"** %66, align 8
  %68 = icmp eq %"struct.v8::internal::wasm::AsmJsParser::BlockInfo"* %65, %67
  %69 = ptrtoint %"struct.v8::internal::wasm::AsmJsParser::BlockInfo"* %67 to i64
  br i1 %68, label %75, label %70

70:                                               ; preds = %58
  %71 = bitcast %"struct.v8::internal::wasm::AsmJsParser::BlockInfo"* %65 to i64*
  store i64 1, i64* %71, align 4
  %72 = getelementptr inbounds %"struct.v8::internal::wasm::AsmJsParser::BlockInfo", %"struct.v8::internal::wasm::AsmJsParser::BlockInfo"* %65, i64 1
  %73 = ptrtoint %"struct.v8::internal::wasm::AsmJsParser::BlockInfo"* %72 to i64
  %74 = bitcast %"struct.v8::internal::wasm::AsmJsParser::BlockInfo"** %64 to i64*
  store i64 %73, i64* %74, align 8
  br label %300

75:                                               ; preds = %58
  %76 = ptrtoint %"struct.v8::internal::wasm::AsmJsParser::BlockInfo"* %65 to i64
  %77 = bitcast %"struct.v8::internal::wasm::AsmJsParser::BlockInfo"** %64 to i64*
  %78 = bitcast %"class.std::__1::vector.199"* %63 to i64*
  %79 = load i64, i64* %78, align 8
  %80 = sub i64 %76, %79
  %81 = ashr exact i64 %80, 3
  %82 = add nsw i64 %81, 1
  %83 = icmp ugt i64 %82, 268435455
  br i1 %83, label %84, label %86

84:                                               ; preds = %75
  %85 = bitcast %"class.std::__1::vector.199"* %63 to %"class.std::__1::__vector_base_common"*
  tail call void @_ZNKSt3__120__vector_base_commonILb1EE20__throw_length_errorEv(%"class.std::__1::__vector_base_common"* %85) #13
  unreachable

86:                                               ; preds = %75
  %87 = bitcast %"struct.v8::internal::wasm::AsmJsParser::BlockInfo"** %66 to i64*
  %88 = sub i64 %69, %79
  %89 = ashr exact i64 %88, 3
  %90 = icmp ult i64 %89, 134217727
  br i1 %90, label %91, label %96

91:                                               ; preds = %86
  %92 = ashr exact i64 %88, 2
  %93 = icmp ult i64 %92, %82
  %94 = select i1 %93, i64 %82, i64 %92
  %95 = icmp eq i64 %94, 0
  br i1 %95, label %114, label %96

96:                                               ; preds = %91, %86
  %97 = phi i64 [ %94, %91 ], [ 268435455, %86 ]
  %98 = getelementptr inbounds %"class.v8::internal::wasm::AsmJsParser", %"class.v8::internal::wasm::AsmJsParser"* %0, i64 0, i32 25, i32 0, i32 0, i32 2, i32 1, i32 0, i32 0
  %99 = load %"class.v8::internal::Zone"*, %"class.v8::internal::Zone"** %98, align 8
  %100 = shl i64 %97, 3
  %101 = getelementptr inbounds %"class.v8::internal::Zone", %"class.v8::internal::Zone"* %99, i64 0, i32 2
  %102 = load i64, i64* %101, align 8
  %103 = getelementptr inbounds %"class.v8::internal::Zone", %"class.v8::internal::Zone"* %99, i64 0, i32 3
  %104 = load i64, i64* %103, align 8
  %105 = sub i64 %104, %102
  %106 = icmp ugt i64 %100, %105
  br i1 %106, label %107, label %109, !prof !2

107:                                              ; preds = %96
  %108 = tail call i64 @_ZN2v88internal4Zone9NewExpandEm(%"class.v8::internal::Zone"* %99, i64 %100) #12
  br label %111

109:                                              ; preds = %96
  %110 = add i64 %102, %100
  store i64 %110, i64* %101, align 8
  br label %111

111:                                              ; preds = %109, %107
  %112 = phi i64 [ %108, %107 ], [ %102, %109 ]
  %113 = inttoptr i64 %112 to %"struct.v8::internal::wasm::AsmJsParser::BlockInfo"*
  br label %114

114:                                              ; preds = %111, %91
  %115 = phi i64 [ %97, %111 ], [ 0, %91 ]
  %116 = phi %"struct.v8::internal::wasm::AsmJsParser::BlockInfo"* [ %113, %111 ], [ null, %91 ]
  %117 = getelementptr inbounds %"struct.v8::internal::wasm::AsmJsParser::BlockInfo", %"struct.v8::internal::wasm::AsmJsParser::BlockInfo"* %116, i64 %81
  %118 = getelementptr inbounds %"struct.v8::internal::wasm::AsmJsParser::BlockInfo", %"struct.v8::internal::wasm::AsmJsParser::BlockInfo"* %116, i64 %115
  %119 = ptrtoint %"struct.v8::internal::wasm::AsmJsParser::BlockInfo"* %118 to i64
  %120 = bitcast %"struct.v8::internal::wasm::AsmJsParser::BlockInfo"* %117 to i64*
  store i64 1, i64* %120, align 4
  %121 = getelementptr inbounds %"struct.v8::internal::wasm::AsmJsParser::BlockInfo", %"struct.v8::internal::wasm::AsmJsParser::BlockInfo"* %117, i64 1
  %122 = ptrtoint %"struct.v8::internal::wasm::AsmJsParser::BlockInfo"* %121 to i64
  %123 = getelementptr inbounds %"class.std::__1::vector.199", %"class.std::__1::vector.199"* %63, i64 0, i32 0, i32 0
  %124 = load %"struct.v8::internal::wasm::AsmJsParser::BlockInfo"*, %"struct.v8::internal::wasm::AsmJsParser::BlockInfo"** %123, align 8
  %125 = ptrtoint %"struct.v8::internal::wasm::AsmJsParser::BlockInfo"* %124 to i64
  %126 = load %"struct.v8::internal::wasm::AsmJsParser::BlockInfo"*, %"struct.v8::internal::wasm::AsmJsParser::BlockInfo"** %64, align 8
  %127 = icmp eq %"struct.v8::internal::wasm::AsmJsParser::BlockInfo"* %126, %124
  br i1 %127, label %297, label %128

128:                                              ; preds = %114
  %129 = getelementptr %"struct.v8::internal::wasm::AsmJsParser::BlockInfo", %"struct.v8::internal::wasm::AsmJsParser::BlockInfo"* %126, i64 -1, i32 0
  %130 = ptrtoint i32* %129 to i64
  %131 = sub i64 %130, %125
  %132 = lshr i64 %131, 3
  %133 = add nuw nsw i64 %132, 1
  %134 = icmp ult i64 %133, 4
  br i1 %134, label %227, label %135

135:                                              ; preds = %128
  %136 = getelementptr %"struct.v8::internal::wasm::AsmJsParser::BlockInfo", %"struct.v8::internal::wasm::AsmJsParser::BlockInfo"* %126, i64 -1, i32 0
  %137 = ptrtoint i32* %136 to i64
  %138 = sub i64 %137, %125
  %139 = lshr i64 %138, 3
  %140 = xor i64 %139, -1
  %141 = add nsw i64 %81, %140
  %142 = getelementptr %"struct.v8::internal::wasm::AsmJsParser::BlockInfo", %"struct.v8::internal::wasm::AsmJsParser::BlockInfo"* %116, i64 %141
  %143 = xor i64 %139, -1
  %144 = getelementptr %"struct.v8::internal::wasm::AsmJsParser::BlockInfo", %"struct.v8::internal::wasm::AsmJsParser::BlockInfo"* %126, i64 %143
  %145 = icmp ult %"struct.v8::internal::wasm::AsmJsParser::BlockInfo"* %142, %126
  %146 = icmp ult %"struct.v8::internal::wasm::AsmJsParser::BlockInfo"* %144, %117
  %147 = and i1 %145, %146
  br i1 %147, label %227, label %148

148:                                              ; preds = %135
  %149 = and i64 %133, 4611686018427387900
  %150 = sub nsw i64 0, %149
  %151 = getelementptr %"struct.v8::internal::wasm::AsmJsParser::BlockInfo", %"struct.v8::internal::wasm::AsmJsParser::BlockInfo"* %117, i64 %150
  %152 = sub nsw i64 0, %149
  %153 = getelementptr %"struct.v8::internal::wasm::AsmJsParser::BlockInfo", %"struct.v8::internal::wasm::AsmJsParser::BlockInfo"* %126, i64 %152
  %154 = add nsw i64 %149, -4
  %155 = lshr exact i64 %154, 2
  %156 = add nuw nsw i64 %155, 1
  %157 = and i64 %156, 1
  %158 = icmp eq i64 %154, 0
  br i1 %158, label %205, label %159

159:                                              ; preds = %148
  %160 = sub nuw nsw i64 %156, %157
  %161 = getelementptr %"struct.v8::internal::wasm::AsmJsParser::BlockInfo", %"struct.v8::internal::wasm::AsmJsParser::BlockInfo"* %117, i64 -1
  %162 = getelementptr %"struct.v8::internal::wasm::AsmJsParser::BlockInfo", %"struct.v8::internal::wasm::AsmJsParser::BlockInfo"* %126, i64 -1
  %163 = getelementptr %"struct.v8::internal::wasm::AsmJsParser::BlockInfo", %"struct.v8::internal::wasm::AsmJsParser::BlockInfo"* %117, i64 -1
  %164 = getelementptr %"struct.v8::internal::wasm::AsmJsParser::BlockInfo", %"struct.v8::internal::wasm::AsmJsParser::BlockInfo"* %126, i64 -1
  br label %165

165:                                              ; preds = %165, %159
  %166 = phi i64 [ 0, %159 ], [ %200, %165 ]
  %167 = phi i64 [ %160, %159 ], [ %201, %165 ]
  %168 = sub i64 0, %166
  %169 = sub i64 0, %166
  %170 = getelementptr inbounds %"struct.v8::internal::wasm::AsmJsParser::BlockInfo", %"struct.v8::internal::wasm::AsmJsParser::BlockInfo"* %161, i64 %168
  %171 = getelementptr inbounds %"struct.v8::internal::wasm::AsmJsParser::BlockInfo", %"struct.v8::internal::wasm::AsmJsParser::BlockInfo"* %162, i64 %169
  %172 = getelementptr inbounds %"struct.v8::internal::wasm::AsmJsParser::BlockInfo", %"struct.v8::internal::wasm::AsmJsParser::BlockInfo"* %171, i64 -1
  %173 = bitcast %"struct.v8::internal::wasm::AsmJsParser::BlockInfo"* %172 to <2 x i64>*
  %174 = load <2 x i64>, <2 x i64>* %173, align 4, !alias.scope !231
  %175 = getelementptr inbounds %"struct.v8::internal::wasm::AsmJsParser::BlockInfo", %"struct.v8::internal::wasm::AsmJsParser::BlockInfo"* %171, i64 -2
  %176 = getelementptr inbounds %"struct.v8::internal::wasm::AsmJsParser::BlockInfo", %"struct.v8::internal::wasm::AsmJsParser::BlockInfo"* %175, i64 -1
  %177 = bitcast %"struct.v8::internal::wasm::AsmJsParser::BlockInfo"* %176 to <2 x i64>*
  %178 = load <2 x i64>, <2 x i64>* %177, align 4, !alias.scope !231
  %179 = getelementptr inbounds %"struct.v8::internal::wasm::AsmJsParser::BlockInfo", %"struct.v8::internal::wasm::AsmJsParser::BlockInfo"* %170, i64 -1
  %180 = bitcast %"struct.v8::internal::wasm::AsmJsParser::BlockInfo"* %179 to <2 x i64>*
  store <2 x i64> %174, <2 x i64>* %180, align 4, !alias.scope !234, !noalias !231
  %181 = getelementptr inbounds %"struct.v8::internal::wasm::AsmJsParser::BlockInfo", %"struct.v8::internal::wasm::AsmJsParser::BlockInfo"* %170, i64 -2
  %182 = getelementptr inbounds %"struct.v8::internal::wasm::AsmJsParser::BlockInfo", %"struct.v8::internal::wasm::AsmJsParser::BlockInfo"* %181, i64 -1
  %183 = bitcast %"struct.v8::internal::wasm::AsmJsParser::BlockInfo"* %182 to <2 x i64>*
  store <2 x i64> %178, <2 x i64>* %183, align 4, !alias.scope !234, !noalias !231
  %184 = sub nuw nsw i64 -4, %166
  %185 = sub nuw nsw i64 -4, %166
  %186 = getelementptr inbounds %"struct.v8::internal::wasm::AsmJsParser::BlockInfo", %"struct.v8::internal::wasm::AsmJsParser::BlockInfo"* %163, i64 %184
  %187 = getelementptr inbounds %"struct.v8::internal::wasm::AsmJsParser::BlockInfo", %"struct.v8::internal::wasm::AsmJsParser::BlockInfo"* %164, i64 %185
  %188 = getelementptr inbounds %"struct.v8::internal::wasm::AsmJsParser::BlockInfo", %"struct.v8::internal::wasm::AsmJsParser::BlockInfo"* %187, i64 -1
  %189 = bitcast %"struct.v8::internal::wasm::AsmJsParser::BlockInfo"* %188 to <2 x i64>*
  %190 = load <2 x i64>, <2 x i64>* %189, align 4, !alias.scope !231
  %191 = getelementptr inbounds %"struct.v8::internal::wasm::AsmJsParser::BlockInfo", %"struct.v8::internal::wasm::AsmJsParser::BlockInfo"* %187, i64 -2
  %192 = getelementptr inbounds %"struct.v8::internal::wasm::AsmJsParser::BlockInfo", %"struct.v8::internal::wasm::AsmJsParser::BlockInfo"* %191, i64 -1
  %193 = bitcast %"struct.v8::internal::wasm::AsmJsParser::BlockInfo"* %192 to <2 x i64>*
  %194 = load <2 x i64>, <2 x i64>* %193, align 4, !alias.scope !231
  %195 = getelementptr inbounds %"struct.v8::internal::wasm::AsmJsParser::BlockInfo", %"struct.v8::internal::wasm::AsmJsParser::BlockInfo"* %186, i64 -1
  %196 = bitcast %"struct.v8::internal::wasm::AsmJsParser::BlockInfo"* %195 to <2 x i64>*
  store <2 x i64> %190, <2 x i64>* %196, align 4, !alias.scope !234, !noalias !231
  %197 = getelementptr inbounds %"struct.v8::internal::wasm::AsmJsParser::BlockInfo", %"struct.v8::internal::wasm::AsmJsParser::BlockInfo"* %186, i64 -2
  %198 = getelementptr inbounds %"struct.v8::internal::wasm::AsmJsParser::BlockInfo", %"struct.v8::internal::wasm::AsmJsParser::BlockInfo"* %197, i64 -1
  %199 = bitcast %"struct.v8::internal::wasm::AsmJsParser::BlockInfo"* %198 to <2 x i64>*
  store <2 x i64> %194, <2 x i64>* %199, align 4, !alias.scope !234, !noalias !231
  %200 = add i64 %166, 8
  %201 = add i64 %167, -2
  %202 = icmp eq i64 %201, 0
  br i1 %202, label %203, label %165, !llvm.loop !236

203:                                              ; preds = %165
  %204 = sub nuw nsw i64 -8, %166
  br label %205

205:                                              ; preds = %203, %148
  %206 = phi i64 [ 0, %148 ], [ %204, %203 ]
  %207 = icmp eq i64 %157, 0
  br i1 %207, label %225, label %208

208:                                              ; preds = %205
  %209 = getelementptr %"struct.v8::internal::wasm::AsmJsParser::BlockInfo", %"struct.v8::internal::wasm::AsmJsParser::BlockInfo"* %117, i64 -1
  %210 = getelementptr %"struct.v8::internal::wasm::AsmJsParser::BlockInfo", %"struct.v8::internal::wasm::AsmJsParser::BlockInfo"* %126, i64 -1
  %211 = getelementptr inbounds %"struct.v8::internal::wasm::AsmJsParser::BlockInfo", %"struct.v8::internal::wasm::AsmJsParser::BlockInfo"* %209, i64 %206
  %212 = getelementptr inbounds %"struct.v8::internal::wasm::AsmJsParser::BlockInfo", %"struct.v8::internal::wasm::AsmJsParser::BlockInfo"* %210, i64 %206
  %213 = getelementptr inbounds %"struct.v8::internal::wasm::AsmJsParser::BlockInfo", %"struct.v8::internal::wasm::AsmJsParser::BlockInfo"* %212, i64 -1
  %214 = bitcast %"struct.v8::internal::wasm::AsmJsParser::BlockInfo"* %213 to <2 x i64>*
  %215 = load <2 x i64>, <2 x i64>* %214, align 4, !alias.scope !231
  %216 = getelementptr inbounds %"struct.v8::internal::wasm::AsmJsParser::BlockInfo", %"struct.v8::internal::wasm::AsmJsParser::BlockInfo"* %212, i64 -2
  %217 = getelementptr inbounds %"struct.v8::internal::wasm::AsmJsParser::BlockInfo", %"struct.v8::internal::wasm::AsmJsParser::BlockInfo"* %216, i64 -1
  %218 = bitcast %"struct.v8::internal::wasm::AsmJsParser::BlockInfo"* %217 to <2 x i64>*
  %219 = load <2 x i64>, <2 x i64>* %218, align 4, !alias.scope !231
  %220 = getelementptr inbounds %"struct.v8::internal::wasm::AsmJsParser::BlockInfo", %"struct.v8::internal::wasm::AsmJsParser::BlockInfo"* %211, i64 -1
  %221 = bitcast %"struct.v8::internal::wasm::AsmJsParser::BlockInfo"* %220 to <2 x i64>*
  store <2 x i64> %215, <2 x i64>* %221, align 4, !alias.scope !234, !noalias !231
  %222 = getelementptr inbounds %"struct.v8::internal::wasm::AsmJsParser::BlockInfo", %"struct.v8::internal::wasm::AsmJsParser::BlockInfo"* %211, i64 -2
  %223 = getelementptr inbounds %"struct.v8::internal::wasm::AsmJsParser::BlockInfo", %"struct.v8::internal::wasm::AsmJsParser::BlockInfo"* %222, i64 -1
  %224 = bitcast %"struct.v8::internal::wasm::AsmJsParser::BlockInfo"* %223 to <2 x i64>*
  store <2 x i64> %219, <2 x i64>* %224, align 4, !alias.scope !234, !noalias !231
  br label %225

225:                                              ; preds = %205, %208
  %226 = icmp eq i64 %133, %149
  br i1 %226, label %297, label %227

227:                                              ; preds = %225, %135, %128
  %228 = phi %"struct.v8::internal::wasm::AsmJsParser::BlockInfo"* [ %117, %135 ], [ %117, %128 ], [ %151, %225 ]
  %229 = phi %"struct.v8::internal::wasm::AsmJsParser::BlockInfo"* [ %126, %135 ], [ %126, %128 ], [ %153, %225 ]
  %230 = getelementptr %"struct.v8::internal::wasm::AsmJsParser::BlockInfo", %"struct.v8::internal::wasm::AsmJsParser::BlockInfo"* %229, i64 -1, i32 0
  %231 = ptrtoint i32* %230 to i64
  %232 = sub i64 %231, %125
  %233 = lshr i64 %232, 3
  %234 = add nuw nsw i64 %233, 1
  %235 = and i64 %234, 7
  %236 = icmp eq i64 %235, 0
  br i1 %236, label %248, label %237

237:                                              ; preds = %227, %237
  %238 = phi %"struct.v8::internal::wasm::AsmJsParser::BlockInfo"* [ %241, %237 ], [ %228, %227 ]
  %239 = phi %"struct.v8::internal::wasm::AsmJsParser::BlockInfo"* [ %242, %237 ], [ %229, %227 ]
  %240 = phi i64 [ %246, %237 ], [ %235, %227 ]
  %241 = getelementptr inbounds %"struct.v8::internal::wasm::AsmJsParser::BlockInfo", %"struct.v8::internal::wasm::AsmJsParser::BlockInfo"* %238, i64 -1
  %242 = getelementptr inbounds %"struct.v8::internal::wasm::AsmJsParser::BlockInfo", %"struct.v8::internal::wasm::AsmJsParser::BlockInfo"* %239, i64 -1
  %243 = bitcast %"struct.v8::internal::wasm::AsmJsParser::BlockInfo"* %242 to i64*
  %244 = bitcast %"struct.v8::internal::wasm::AsmJsParser::BlockInfo"* %241 to i64*
  %245 = load i64, i64* %243, align 4
  store i64 %245, i64* %244, align 4
  %246 = add i64 %240, -1
  %247 = icmp eq i64 %246, 0
  br i1 %247, label %248, label %237, !llvm.loop !237

248:                                              ; preds = %237, %227
  %249 = phi %"struct.v8::internal::wasm::AsmJsParser::BlockInfo"* [ undef, %227 ], [ %241, %237 ]
  %250 = phi %"struct.v8::internal::wasm::AsmJsParser::BlockInfo"* [ %228, %227 ], [ %241, %237 ]
  %251 = phi %"struct.v8::internal::wasm::AsmJsParser::BlockInfo"* [ %229, %227 ], [ %242, %237 ]
  %252 = icmp ult i64 %232, 56
  br i1 %252, label %297, label %253

253:                                              ; preds = %248, %253
  %254 = phi %"struct.v8::internal::wasm::AsmJsParser::BlockInfo"* [ %291, %253 ], [ %250, %248 ]
  %255 = phi %"struct.v8::internal::wasm::AsmJsParser::BlockInfo"* [ %292, %253 ], [ %251, %248 ]
  %256 = getelementptr inbounds %"struct.v8::internal::wasm::AsmJsParser::BlockInfo", %"struct.v8::internal::wasm::AsmJsParser::BlockInfo"* %254, i64 -1
  %257 = getelementptr inbounds %"struct.v8::internal::wasm::AsmJsParser::BlockInfo", %"struct.v8::internal::wasm::AsmJsParser::BlockInfo"* %255, i64 -1
  %258 = bitcast %"struct.v8::internal::wasm::AsmJsParser::BlockInfo"* %257 to i64*
  %259 = bitcast %"struct.v8::internal::wasm::AsmJsParser::BlockInfo"* %256 to i64*
  %260 = load i64, i64* %258, align 4
  store i64 %260, i64* %259, align 4
  %261 = getelementptr inbounds %"struct.v8::internal::wasm::AsmJsParser::BlockInfo", %"struct.v8::internal::wasm::AsmJsParser::BlockInfo"* %254, i64 -2
  %262 = getelementptr inbounds %"struct.v8::internal::wasm::AsmJsParser::BlockInfo", %"struct.v8::internal::wasm::AsmJsParser::BlockInfo"* %255, i64 -2
  %263 = bitcast %"struct.v8::internal::wasm::AsmJsParser::BlockInfo"* %262 to i64*
  %264 = bitcast %"struct.v8::internal::wasm::AsmJsParser::BlockInfo"* %261 to i64*
  %265 = load i64, i64* %263, align 4
  store i64 %265, i64* %264, align 4
  %266 = getelementptr inbounds %"struct.v8::internal::wasm::AsmJsParser::BlockInfo", %"struct.v8::internal::wasm::AsmJsParser::BlockInfo"* %254, i64 -3
  %267 = getelementptr inbounds %"struct.v8::internal::wasm::AsmJsParser::BlockInfo", %"struct.v8::internal::wasm::AsmJsParser::BlockInfo"* %255, i64 -3
  %268 = bitcast %"struct.v8::internal::wasm::AsmJsParser::BlockInfo"* %267 to i64*
  %269 = bitcast %"struct.v8::internal::wasm::AsmJsParser::BlockInfo"* %266 to i64*
  %270 = load i64, i64* %268, align 4
  store i64 %270, i64* %269, align 4
  %271 = getelementptr inbounds %"struct.v8::internal::wasm::AsmJsParser::BlockInfo", %"struct.v8::internal::wasm::AsmJsParser::BlockInfo"* %254, i64 -4
  %272 = getelementptr inbounds %"struct.v8::internal::wasm::AsmJsParser::BlockInfo", %"struct.v8::internal::wasm::AsmJsParser::BlockInfo"* %255, i64 -4
  %273 = bitcast %"struct.v8::internal::wasm::AsmJsParser::BlockInfo"* %272 to i64*
  %274 = bitcast %"struct.v8::internal::wasm::AsmJsParser::BlockInfo"* %271 to i64*
  %275 = load i64, i64* %273, align 4
  store i64 %275, i64* %274, align 4
  %276 = getelementptr inbounds %"struct.v8::internal::wasm::AsmJsParser::BlockInfo", %"struct.v8::internal::wasm::AsmJsParser::BlockInfo"* %254, i64 -5
  %277 = getelementptr inbounds %"struct.v8::internal::wasm::AsmJsParser::BlockInfo", %"struct.v8::internal::wasm::AsmJsParser::BlockInfo"* %255, i64 -5
  %278 = bitcast %"struct.v8::internal::wasm::AsmJsParser::BlockInfo"* %277 to i64*
  %279 = bitcast %"struct.v8::internal::wasm::AsmJsParser::BlockInfo"* %276 to i64*
  %280 = load i64, i64* %278, align 4
  store i64 %280, i64* %279, align 4
  %281 = getelementptr inbounds %"struct.v8::internal::wasm::AsmJsParser::BlockInfo", %"struct.v8::internal::wasm::AsmJsParser::BlockInfo"* %254, i64 -6
  %282 = getelementptr inbounds %"struct.v8::internal::wasm::AsmJsParser::BlockInfo", %"struct.v8::internal::wasm::AsmJsParser::BlockInfo"* %255, i64 -6
  %283 = bitcast %"struct.v8::internal::wasm::AsmJsParser::BlockInfo"* %282 to i64*
  %284 = bitcast %"struct.v8::internal::wasm::AsmJsParser::BlockInfo"* %281 to i64*
  %285 = load i64, i64* %283, align 4
  store i64 %285, i64* %284, align 4
  %286 = getelementptr inbounds %"struct.v8::internal::wasm::AsmJsParser::BlockInfo", %"struct.v8::internal::wasm::AsmJsParser::BlockInfo"* %254, i64 -7
  %287 = getelementptr inbounds %"struct.v8::internal::wasm::AsmJsParser::BlockInfo", %"struct.v8::internal::wasm::AsmJsParser::BlockInfo"* %255, i64 -7
  %288 = bitcast %"struct.v8::internal::wasm::AsmJsParser::BlockInfo"* %287 to i64*
  %289 = bitcast %"struct.v8::internal::wasm::AsmJsParser::BlockInfo"* %286 to i64*
  %290 = load i64, i64* %288, align 4
  store i64 %290, i64* %289, align 4
  %291 = getelementptr inbounds %"struct.v8::internal::wasm::AsmJsParser::BlockInfo", %"struct.v8::internal::wasm::AsmJsParser::BlockInfo"* %254, i64 -8
  %292 = getelementptr inbounds %"struct.v8::internal::wasm::AsmJsParser::BlockInfo", %"struct.v8::internal::wasm::AsmJsParser::BlockInfo"* %255, i64 -8
  %293 = bitcast %"struct.v8::internal::wasm::AsmJsParser::BlockInfo"* %292 to i64*
  %294 = bitcast %"struct.v8::internal::wasm::AsmJsParser::BlockInfo"* %291 to i64*
  %295 = load i64, i64* %293, align 4
  store i64 %295, i64* %294, align 4
  %296 = icmp eq %"struct.v8::internal::wasm::AsmJsParser::BlockInfo"* %292, %124
  br i1 %296, label %297, label %253, !llvm.loop !238

297:                                              ; preds = %248, %253, %225, %114
  %298 = phi %"struct.v8::internal::wasm::AsmJsParser::BlockInfo"* [ %117, %114 ], [ %151, %225 ], [ %249, %248 ], [ %291, %253 ]
  %299 = ptrtoint %"struct.v8::internal::wasm::AsmJsParser::BlockInfo"* %298 to i64
  store i64 %299, i64* %78, align 8
  store i64 %122, i64* %77, align 8
  store i64 %119, i64* %87, align 8
  br label %300

300:                                              ; preds = %70, %297
  %301 = getelementptr inbounds %"class.v8::internal::wasm::AsmJsParser", %"class.v8::internal::wasm::AsmJsParser"* %0, i64 0, i32 1, i32 5
  %302 = load i64, i64* %301, align 8
  %303 = load %"class.v8::internal::wasm::WasmFunctionBuilder"*, %"class.v8::internal::wasm::WasmFunctionBuilder"** %61, align 8
  tail call void @_ZN2v88internal4wasm19WasmFunctionBuilder16AddAsmWasmOffsetEmm(%"class.v8::internal::wasm::WasmFunctionBuilder"* %303, i64 %302, i64 %302) #12
  %304 = load %"class.v8::internal::wasm::WasmFunctionBuilder"*, %"class.v8::internal::wasm::WasmFunctionBuilder"** %61, align 8
  tail call void @_ZN2v88internal4wasm19WasmFunctionBuilder10EmitWithU8ENS1_10WasmOpcodeEh(%"class.v8::internal::wasm::WasmFunctionBuilder"* %304, i32 3, i8 zeroext 64) #12
  %305 = load i32, i32* %59, align 4
  tail call void @_ZN2v88internal4wasm11AsmJsParser9BareBeginENS2_9BlockKindEi(%"class.v8::internal::wasm::AsmJsParser"* %0, i32 1, i32 %305)
  %306 = load %"class.v8::internal::wasm::WasmFunctionBuilder"*, %"class.v8::internal::wasm::WasmFunctionBuilder"** %61, align 8
  tail call void @_ZN2v88internal4wasm19WasmFunctionBuilder10EmitWithU8ENS1_10WasmOpcodeEh(%"class.v8::internal::wasm::WasmFunctionBuilder"* %306, i32 2, i8 zeroext 64) #12
  store i32 0, i32* %59, align 4
  %307 = load i32, i32* %3, align 8
  %308 = icmp eq i32 %307, 59
  br i1 %308, label %336, label %309

309:                                              ; preds = %300
  %310 = tail call i64 @_ZN2v88internal23GetCurrentStackPositionEv() #12
  %311 = getelementptr inbounds %"class.v8::internal::wasm::AsmJsParser", %"class.v8::internal::wasm::AsmJsParser"* %0, i64 0, i32 5
  %312 = load i64, i64* %311, align 8
  %313 = icmp ult i64 %310, %312
  br i1 %313, label %314, label %320

314:                                              ; preds = %309
  %315 = getelementptr inbounds %"class.v8::internal::wasm::AsmJsParser", %"class.v8::internal::wasm::AsmJsParser"* %0, i64 0, i32 17
  store i8 1, i8* %315, align 4
  %316 = getelementptr inbounds %"class.v8::internal::wasm::AsmJsParser", %"class.v8::internal::wasm::AsmJsParser"* %0, i64 0, i32 18
  store i8* getelementptr inbounds ([44 x i8], [44 x i8]* @.str.2, i64 0, i64 0), i8** %316, align 8
  %317 = load i64, i64* %301, align 8
  %318 = trunc i64 %317 to i32
  %319 = getelementptr inbounds %"class.v8::internal::wasm::AsmJsParser", %"class.v8::internal::wasm::AsmJsParser"* %0, i64 0, i32 19
  store i32 %318, i32* %319, align 8
  br label %397

320:                                              ; preds = %309
  %321 = tail call %"class.v8::internal::wasm::AsmType"* @_ZN2v88internal4wasm11AsmJsParser10ExpressionEPNS1_7AsmTypeE(%"class.v8::internal::wasm::AsmJsParser"* %0, %"class.v8::internal::wasm::AsmType"* nonnull inttoptr (i64 769 to %"class.v8::internal::wasm::AsmType"*))
  %322 = getelementptr inbounds %"class.v8::internal::wasm::AsmJsParser", %"class.v8::internal::wasm::AsmJsParser"* %0, i64 0, i32 17
  %323 = load i8, i8* %322, align 4, !range !69
  %324 = icmp eq i8 %323, 0
  br i1 %324, label %325, label %397

325:                                              ; preds = %320
  %326 = load %"class.v8::internal::wasm::WasmFunctionBuilder"*, %"class.v8::internal::wasm::WasmFunctionBuilder"** %61, align 8
  tail call void @_ZN2v88internal4wasm19WasmFunctionBuilder4EmitENS1_10WasmOpcodeE(%"class.v8::internal::wasm::WasmFunctionBuilder"* %326, i32 69) #12
  %327 = load %"class.v8::internal::wasm::WasmFunctionBuilder"*, %"class.v8::internal::wasm::WasmFunctionBuilder"** %61, align 8
  tail call void @_ZN2v88internal4wasm19WasmFunctionBuilder10EmitWithU8ENS1_10WasmOpcodeEh(%"class.v8::internal::wasm::WasmFunctionBuilder"* %327, i32 13, i8 zeroext 2) #12
  %328 = load i32, i32* %3, align 8
  %329 = icmp eq i32 %328, 59
  br i1 %329, label %336, label %330

330:                                              ; preds = %325
  %331 = getelementptr inbounds %"class.v8::internal::wasm::AsmJsParser", %"class.v8::internal::wasm::AsmJsParser"* %0, i64 0, i32 17
  store i8 1, i8* %331, align 4
  %332 = getelementptr inbounds %"class.v8::internal::wasm::AsmJsParser", %"class.v8::internal::wasm::AsmJsParser"* %0, i64 0, i32 18
  store i8* getelementptr inbounds ([17 x i8], [17 x i8]* @.str.3, i64 0, i64 0), i8** %332, align 8
  %333 = load i64, i64* %301, align 8
  %334 = trunc i64 %333 to i32
  %335 = getelementptr inbounds %"class.v8::internal::wasm::AsmJsParser", %"class.v8::internal::wasm::AsmJsParser"* %0, i64 0, i32 19
  store i32 %334, i32* %335, align 8
  br label %397

336:                                              ; preds = %300, %325
  tail call void @_ZN2v88internal12AsmJsScanner4NextEv(%"class.v8::internal::AsmJsScanner"* %2) #12
  %337 = load i64, i64* %301, align 8
  br label %338

338:                                              ; preds = %346, %336
  %339 = phi i32 [ 0, %336 ], [ %347, %346 ]
  %340 = load i32, i32* %3, align 8
  switch i32 %340, label %346 [
    i32 40, label %341
    i32 41, label %343
    i32 -1, label %348
  ]

341:                                              ; preds = %338
  %342 = add nsw i32 %339, 1
  br label %346

343:                                              ; preds = %338
  %344 = add nsw i32 %339, -1
  %345 = icmp slt i32 %339, 1
  br i1 %345, label %354, label %346

346:                                              ; preds = %343, %341, %338
  %347 = phi i32 [ %342, %341 ], [ %344, %343 ], [ %339, %338 ]
  tail call void @_ZN2v88internal12AsmJsScanner4NextEv(%"class.v8::internal::AsmJsScanner"* %2) #12
  br label %338

348:                                              ; preds = %338
  %349 = getelementptr inbounds %"class.v8::internal::wasm::AsmJsParser", %"class.v8::internal::wasm::AsmJsParser"* %0, i64 0, i32 17
  store i8 1, i8* %349, align 4
  %350 = getelementptr inbounds %"class.v8::internal::wasm::AsmJsParser", %"class.v8::internal::wasm::AsmJsParser"* %0, i64 0, i32 18
  store i8* getelementptr inbounds ([17 x i8], [17 x i8]* @.str.3, i64 0, i64 0), i8** %350, align 8
  %351 = load i64, i64* %301, align 8
  %352 = trunc i64 %351 to i32
  %353 = getelementptr inbounds %"class.v8::internal::wasm::AsmJsParser", %"class.v8::internal::wasm::AsmJsParser"* %0, i64 0, i32 19
  store i32 %352, i32* %353, align 8
  br label %397

354:                                              ; preds = %343
  tail call void @_ZN2v88internal12AsmJsScanner4NextEv(%"class.v8::internal::AsmJsScanner"* %2) #12
  %355 = tail call i64 @_ZN2v88internal23GetCurrentStackPositionEv() #12
  %356 = getelementptr inbounds %"class.v8::internal::wasm::AsmJsParser", %"class.v8::internal::wasm::AsmJsParser"* %0, i64 0, i32 5
  %357 = load i64, i64* %356, align 8
  %358 = icmp ult i64 %355, %357
  br i1 %358, label %359, label %365

359:                                              ; preds = %354
  %360 = getelementptr inbounds %"class.v8::internal::wasm::AsmJsParser", %"class.v8::internal::wasm::AsmJsParser"* %0, i64 0, i32 17
  store i8 1, i8* %360, align 4
  %361 = getelementptr inbounds %"class.v8::internal::wasm::AsmJsParser", %"class.v8::internal::wasm::AsmJsParser"* %0, i64 0, i32 18
  store i8* getelementptr inbounds ([44 x i8], [44 x i8]* @.str.2, i64 0, i64 0), i8** %361, align 8
  %362 = load i64, i64* %301, align 8
  %363 = trunc i64 %362 to i32
  %364 = getelementptr inbounds %"class.v8::internal::wasm::AsmJsParser", %"class.v8::internal::wasm::AsmJsParser"* %0, i64 0, i32 19
  store i32 %363, i32* %364, align 8
  br label %397

365:                                              ; preds = %354
  tail call void @_ZN2v88internal4wasm11AsmJsParser17ValidateStatementEv(%"class.v8::internal::wasm::AsmJsParser"* %0)
  %366 = getelementptr inbounds %"class.v8::internal::wasm::AsmJsParser", %"class.v8::internal::wasm::AsmJsParser"* %0, i64 0, i32 17
  %367 = load i8, i8* %366, align 4, !range !69
  %368 = icmp eq i8 %367, 0
  br i1 %368, label %369, label %397

369:                                              ; preds = %365
  %370 = load %"struct.v8::internal::wasm::AsmJsParser::BlockInfo"*, %"struct.v8::internal::wasm::AsmJsParser::BlockInfo"** %64, align 8
  %371 = getelementptr inbounds %"struct.v8::internal::wasm::AsmJsParser::BlockInfo", %"struct.v8::internal::wasm::AsmJsParser::BlockInfo"* %370, i64 -1
  store %"struct.v8::internal::wasm::AsmJsParser::BlockInfo"* %371, %"struct.v8::internal::wasm::AsmJsParser::BlockInfo"** %64, align 8
  %372 = load %"class.v8::internal::wasm::WasmFunctionBuilder"*, %"class.v8::internal::wasm::WasmFunctionBuilder"** %61, align 8
  tail call void @_ZN2v88internal4wasm19WasmFunctionBuilder4EmitENS1_10WasmOpcodeE(%"class.v8::internal::wasm::WasmFunctionBuilder"* %372, i32 11) #12
  %373 = load i64, i64* %301, align 8
  tail call void @_ZN2v88internal12AsmJsScanner4SeekEm(%"class.v8::internal::AsmJsScanner"* %2, i64 %337) #12
  %374 = load i32, i32* %3, align 8
  %375 = icmp eq i32 %374, 41
  br i1 %375, label %389, label %376

376:                                              ; preds = %369
  %377 = tail call i64 @_ZN2v88internal23GetCurrentStackPositionEv() #12
  %378 = load i64, i64* %356, align 8
  %379 = icmp ult i64 %377, %378
  br i1 %379, label %380, label %385

380:                                              ; preds = %376
  store i8 1, i8* %366, align 4
  %381 = getelementptr inbounds %"class.v8::internal::wasm::AsmJsParser", %"class.v8::internal::wasm::AsmJsParser"* %0, i64 0, i32 18
  store i8* getelementptr inbounds ([44 x i8], [44 x i8]* @.str.2, i64 0, i64 0), i8** %381, align 8
  %382 = load i64, i64* %301, align 8
  %383 = trunc i64 %382 to i32
  %384 = getelementptr inbounds %"class.v8::internal::wasm::AsmJsParser", %"class.v8::internal::wasm::AsmJsParser"* %0, i64 0, i32 19
  store i32 %383, i32* %384, align 8
  br label %397

385:                                              ; preds = %376
  %386 = tail call %"class.v8::internal::wasm::AsmType"* @_ZN2v88internal4wasm11AsmJsParser10ExpressionEPNS1_7AsmTypeE(%"class.v8::internal::wasm::AsmJsParser"* %0, %"class.v8::internal::wasm::AsmType"* null)
  %387 = load i8, i8* %366, align 4, !range !69
  %388 = icmp eq i8 %387, 0
  br i1 %388, label %389, label %397

389:                                              ; preds = %385, %369
  %390 = load %"class.v8::internal::wasm::WasmFunctionBuilder"*, %"class.v8::internal::wasm::WasmFunctionBuilder"** %61, align 8
  tail call void @_ZN2v88internal4wasm19WasmFunctionBuilder10EmitWithU8ENS1_10WasmOpcodeEh(%"class.v8::internal::wasm::WasmFunctionBuilder"* %390, i32 12, i8 zeroext 0) #12
  tail call void @_ZN2v88internal12AsmJsScanner4SeekEm(%"class.v8::internal::AsmJsScanner"* %2, i64 %373) #12
  %391 = load %"struct.v8::internal::wasm::AsmJsParser::BlockInfo"*, %"struct.v8::internal::wasm::AsmJsParser::BlockInfo"** %64, align 8
  %392 = getelementptr inbounds %"struct.v8::internal::wasm::AsmJsParser::BlockInfo", %"struct.v8::internal::wasm::AsmJsParser::BlockInfo"* %391, i64 -1
  store %"struct.v8::internal::wasm::AsmJsParser::BlockInfo"* %392, %"struct.v8::internal::wasm::AsmJsParser::BlockInfo"** %64, align 8
  %393 = load %"class.v8::internal::wasm::WasmFunctionBuilder"*, %"class.v8::internal::wasm::WasmFunctionBuilder"** %61, align 8
  tail call void @_ZN2v88internal4wasm19WasmFunctionBuilder4EmitENS1_10WasmOpcodeE(%"class.v8::internal::wasm::WasmFunctionBuilder"* %393, i32 11) #12
  %394 = load %"struct.v8::internal::wasm::AsmJsParser::BlockInfo"*, %"struct.v8::internal::wasm::AsmJsParser::BlockInfo"** %64, align 8
  %395 = getelementptr inbounds %"struct.v8::internal::wasm::AsmJsParser::BlockInfo", %"struct.v8::internal::wasm::AsmJsParser::BlockInfo"* %394, i64 -1
  store %"struct.v8::internal::wasm::AsmJsParser::BlockInfo"* %395, %"struct.v8::internal::wasm::AsmJsParser::BlockInfo"** %64, align 8
  %396 = load %"class.v8::internal::wasm::WasmFunctionBuilder"*, %"class.v8::internal::wasm::WasmFunctionBuilder"** %61, align 8
  tail call void @_ZN2v88internal4wasm19WasmFunctionBuilder4EmitENS1_10WasmOpcodeE(%"class.v8::internal::wasm::WasmFunctionBuilder"* %396, i32 11) #12
  br label %397

397:                                              ; preds = %38, %348, %359, %365, %385, %389, %380, %31, %320, %6, %16, %51, %314, %330
  ret void
}

; Function Attrs: nounwind ssp uwtable
define hidden void @_ZN2v88internal4wasm11AsmJsParser24ScanToClosingParenthesisEv(%"class.v8::internal::wasm::AsmJsParser"*) local_unnamed_addr #0 align 2 {
  %2 = getelementptr inbounds %"class.v8::internal::wasm::AsmJsParser", %"class.v8::internal::wasm::AsmJsParser"* %0, i64 0, i32 1, i32 1
  %3 = getelementptr inbounds %"class.v8::internal::wasm::AsmJsParser", %"class.v8::internal::wasm::AsmJsParser"* %0, i64 0, i32 1
  br label %4

4:                                                ; preds = %12, %1
  %5 = phi i32 [ 0, %1 ], [ %13, %12 ]
  %6 = load i32, i32* %2, align 8
  switch i32 %6, label %12 [
    i32 40, label %7
    i32 41, label %9
    i32 -1, label %14
  ]

7:                                                ; preds = %4
  %8 = add nsw i32 %5, 1
  br label %12

9:                                                ; preds = %4
  %10 = add nsw i32 %5, -1
  %11 = icmp slt i32 %5, 1
  br i1 %11, label %14, label %12

12:                                               ; preds = %4, %9, %7
  %13 = phi i32 [ %8, %7 ], [ %10, %9 ], [ %5, %4 ]
  tail call void @_ZN2v88internal12AsmJsScanner4NextEv(%"class.v8::internal::AsmJsScanner"* %3) #12
  br label %4

14:                                               ; preds = %4, %9
  ret void
}

declare void @_ZN2v88internal12AsmJsScanner4SeekEm(%"class.v8::internal::AsmJsScanner"*, i64) local_unnamed_addr #1

declare void @_ZN2v88internal4wasm19WasmFunctionBuilder8EmitI32VEi(%"class.v8::internal::wasm::WasmFunctionBuilder"*, i32) local_unnamed_addr #1

; Function Attrs: nounwind ssp uwtable
define hidden void @_ZN2v88internal4wasm11AsmJsParser11GatherCasesEPNS0_10ZoneVectorIiEE(%"class.v8::internal::wasm::AsmJsParser"*, %"class.v8::internal::ZoneVector.129"*) local_unnamed_addr #0 align 2 {
  %3 = getelementptr inbounds %"class.v8::internal::wasm::AsmJsParser", %"class.v8::internal::wasm::AsmJsParser"* %0, i64 0, i32 1
  %4 = getelementptr inbounds %"class.v8::internal::wasm::AsmJsParser", %"class.v8::internal::wasm::AsmJsParser"* %0, i64 0, i32 1, i32 5
  %5 = load i64, i64* %4, align 8
  %6 = getelementptr inbounds %"class.v8::internal::wasm::AsmJsParser", %"class.v8::internal::wasm::AsmJsParser"* %0, i64 0, i32 1, i32 1
  %7 = getelementptr inbounds %"class.v8::internal::wasm::AsmJsParser", %"class.v8::internal::wasm::AsmJsParser"* %0, i64 0, i32 1, i32 19
  %8 = getelementptr inbounds %"class.v8::internal::ZoneVector.129", %"class.v8::internal::ZoneVector.129"* %1, i64 0, i32 0, i32 0, i32 1
  %9 = getelementptr inbounds %"class.v8::internal::ZoneVector.129", %"class.v8::internal::ZoneVector.129"* %1, i64 0, i32 0, i32 0, i32 2, i32 0, i32 0
  %10 = bitcast i32** %8 to i64*
  %11 = bitcast %"class.v8::internal::ZoneVector.129"* %1 to i64*
  %12 = bitcast i32** %9 to i64*
  %13 = getelementptr inbounds %"class.v8::internal::ZoneVector.129", %"class.v8::internal::ZoneVector.129"* %1, i64 0, i32 0, i32 0, i32 2, i32 1, i32 0, i32 0
  %14 = getelementptr inbounds %"class.v8::internal::ZoneVector.129", %"class.v8::internal::ZoneVector.129"* %1, i64 0, i32 0, i32 0, i32 0
  br label %15

15:                                               ; preds = %255, %2
  %16 = phi i32 [ 0, %2 ], [ %256, %255 ]
  %17 = load i32, i32* %6, align 8
  switch i32 %17, label %23 [
    i32 123, label %18
    i32 125, label %20
  ]

18:                                               ; preds = %15
  %19 = add nsw i32 %16, 1
  br label %255

20:                                               ; preds = %15
  %21 = add nsw i32 %16, -1
  %22 = icmp slt i32 %16, 2
  br i1 %22, label %257, label %255

23:                                               ; preds = %15
  %24 = icmp eq i32 %16, 1
  %25 = icmp eq i32 %17, -9959
  %26 = and i1 %24, %25
  br i1 %26, label %27, label %253

27:                                               ; preds = %23
  tail call void @_ZN2v88internal12AsmJsScanner4NextEv(%"class.v8::internal::AsmJsScanner"* %3) #12
  %28 = load i32, i32* %6, align 8
  %29 = icmp eq i32 %28, 45
  br i1 %29, label %30, label %32

30:                                               ; preds = %27
  tail call void @_ZN2v88internal12AsmJsScanner4NextEv(%"class.v8::internal::AsmJsScanner"* %3) #12
  %31 = load i32, i32* %6, align 8
  br label %32

32:                                               ; preds = %27, %30
  %33 = phi i32 [ %28, %27 ], [ %31, %30 ]
  %34 = phi i1 [ false, %27 ], [ true, %30 ]
  %35 = icmp eq i32 %33, -3
  br i1 %35, label %36, label %257

36:                                               ; preds = %32
  %37 = load i32, i32* %7, align 8
  tail call void @_ZN2v88internal12AsmJsScanner4NextEv(%"class.v8::internal::AsmJsScanner"* %3) #12
  %38 = icmp ne i32 %37, -2147483648
  %39 = and i1 %34, %38
  %40 = sub nsw i32 0, %37
  %41 = select i1 %39, i32 %40, i32 %37
  %42 = load i32*, i32** %8, align 8
  %43 = load i32*, i32** %9, align 8
  %44 = icmp eq i32* %42, %43
  %45 = ptrtoint i32* %43 to i64
  br i1 %44, label %49, label %46

46:                                               ; preds = %36
  store i32 %41, i32* %42, align 4
  %47 = getelementptr inbounds i32, i32* %42, i64 1
  %48 = ptrtoint i32* %47 to i64
  store i64 %48, i64* %10, align 8
  br label %255

49:                                               ; preds = %36
  %50 = ptrtoint i32* %42 to i64
  %51 = load i64, i64* %11, align 8
  %52 = sub i64 %50, %51
  %53 = ashr exact i64 %52, 2
  %54 = add nsw i64 %53, 1
  %55 = icmp ugt i64 %54, 536870911
  br i1 %55, label %56, label %58

56:                                               ; preds = %49
  %57 = bitcast %"class.v8::internal::ZoneVector.129"* %1 to %"class.std::__1::__vector_base_common"*
  tail call void @_ZNKSt3__120__vector_base_commonILb1EE20__throw_length_errorEv(%"class.std::__1::__vector_base_common"* %57) #13
  unreachable

58:                                               ; preds = %49
  %59 = sub i64 %45, %51
  %60 = ashr exact i64 %59, 2
  %61 = icmp ult i64 %60, 268435455
  br i1 %61, label %62, label %67

62:                                               ; preds = %58
  %63 = ashr exact i64 %59, 1
  %64 = icmp ult i64 %63, %54
  %65 = select i1 %64, i64 %54, i64 %63
  %66 = icmp eq i64 %65, 0
  br i1 %66, label %86, label %67

67:                                               ; preds = %62, %58
  %68 = phi i64 [ %65, %62 ], [ 536870911, %58 ]
  %69 = load %"class.v8::internal::Zone"*, %"class.v8::internal::Zone"** %13, align 8
  %70 = shl i64 %68, 2
  %71 = add i64 %70, 7
  %72 = and i64 %71, -8
  %73 = getelementptr inbounds %"class.v8::internal::Zone", %"class.v8::internal::Zone"* %69, i64 0, i32 2
  %74 = load i64, i64* %73, align 8
  %75 = getelementptr inbounds %"class.v8::internal::Zone", %"class.v8::internal::Zone"* %69, i64 0, i32 3
  %76 = load i64, i64* %75, align 8
  %77 = sub i64 %76, %74
  %78 = icmp ugt i64 %72, %77
  br i1 %78, label %79, label %81, !prof !2

79:                                               ; preds = %67
  %80 = tail call i64 @_ZN2v88internal4Zone9NewExpandEm(%"class.v8::internal::Zone"* %69, i64 %72) #12
  br label %83

81:                                               ; preds = %67
  %82 = add i64 %72, %74
  store i64 %82, i64* %73, align 8
  br label %83

83:                                               ; preds = %81, %79
  %84 = phi i64 [ %80, %79 ], [ %74, %81 ]
  %85 = inttoptr i64 %84 to i32*
  br label %86

86:                                               ; preds = %83, %62
  %87 = phi i64 [ %68, %83 ], [ 0, %62 ]
  %88 = phi i32* [ %85, %83 ], [ null, %62 ]
  %89 = getelementptr inbounds i32, i32* %88, i64 %53
  %90 = getelementptr inbounds i32, i32* %88, i64 %87
  %91 = ptrtoint i32* %90 to i64
  store i32 %41, i32* %89, align 4
  %92 = getelementptr inbounds i32, i32* %89, i64 1
  %93 = ptrtoint i32* %92 to i64
  %94 = load i32*, i32** %14, align 8
  %95 = ptrtoint i32* %94 to i64
  %96 = load i32*, i32** %8, align 8
  %97 = icmp eq i32* %96, %94
  br i1 %97, label %250, label %98

98:                                               ; preds = %86
  %99 = getelementptr i32, i32* %96, i64 -1
  %100 = ptrtoint i32* %99 to i64
  %101 = sub i64 %100, %95
  %102 = lshr i64 %101, 2
  %103 = add nuw nsw i64 %102, 1
  %104 = icmp ult i64 %103, 8
  br i1 %104, label %198, label %105

105:                                              ; preds = %98
  %106 = getelementptr i32, i32* %88, i64 -1
  %107 = getelementptr i32, i32* %96, i64 -1
  %108 = ptrtoint i32* %107 to i64
  %109 = sub i64 %108, %95
  %110 = lshr i64 %109, 2
  %111 = sub nsw i64 %53, %110
  %112 = getelementptr i32, i32* %106, i64 %111
  %113 = getelementptr i32, i32* %96, i64 -1
  %114 = sub nsw i64 0, %110
  %115 = getelementptr i32, i32* %113, i64 %114
  %116 = icmp ult i32* %112, %96
  %117 = icmp ult i32* %115, %89
  %118 = and i1 %116, %117
  br i1 %118, label %198, label %119

119:                                              ; preds = %105
  %120 = and i64 %103, 9223372036854775800
  %121 = sub nsw i64 0, %120
  %122 = getelementptr i32, i32* %89, i64 %121
  %123 = sub nsw i64 0, %120
  %124 = getelementptr i32, i32* %96, i64 %123
  %125 = add nsw i64 %120, -8
  %126 = lshr exact i64 %125, 3
  %127 = add nuw nsw i64 %126, 1
  %128 = and i64 %127, 1
  %129 = icmp eq i64 %125, 0
  br i1 %129, label %174, label %130

130:                                              ; preds = %119
  %131 = sub nuw nsw i64 %127, %128
  %132 = getelementptr i32, i32* %89, i64 -1
  %133 = getelementptr i32, i32* %96, i64 -1
  %134 = getelementptr i32, i32* %89, i64 -1
  %135 = getelementptr i32, i32* %96, i64 -1
  br label %136

136:                                              ; preds = %136, %130
  %137 = phi i64 [ 0, %130 ], [ %171, %136 ]
  %138 = phi i64 [ %131, %130 ], [ %172, %136 ]
  %139 = sub i64 0, %137
  %140 = sub i64 0, %137
  %141 = getelementptr inbounds i32, i32* %132, i64 %139
  %142 = getelementptr inbounds i32, i32* %133, i64 %140
  %143 = getelementptr inbounds i32, i32* %142, i64 -3
  %144 = bitcast i32* %143 to <4 x i32>*
  %145 = load <4 x i32>, <4 x i32>* %144, align 4, !alias.scope !239
  %146 = getelementptr inbounds i32, i32* %142, i64 -4
  %147 = getelementptr inbounds i32, i32* %146, i64 -3
  %148 = bitcast i32* %147 to <4 x i32>*
  %149 = load <4 x i32>, <4 x i32>* %148, align 4, !alias.scope !239
  %150 = getelementptr inbounds i32, i32* %141, i64 -3
  %151 = bitcast i32* %150 to <4 x i32>*
  store <4 x i32> %145, <4 x i32>* %151, align 4, !alias.scope !242, !noalias !239
  %152 = getelementptr inbounds i32, i32* %141, i64 -4
  %153 = getelementptr inbounds i32, i32* %152, i64 -3
  %154 = bitcast i32* %153 to <4 x i32>*
  store <4 x i32> %149, <4 x i32>* %154, align 4, !alias.scope !242, !noalias !239
  %155 = sub nuw nsw i64 -8, %137
  %156 = sub nuw nsw i64 -8, %137
  %157 = getelementptr inbounds i32, i32* %134, i64 %155
  %158 = getelementptr inbounds i32, i32* %135, i64 %156
  %159 = getelementptr inbounds i32, i32* %158, i64 -3
  %160 = bitcast i32* %159 to <4 x i32>*
  %161 = load <4 x i32>, <4 x i32>* %160, align 4, !alias.scope !239
  %162 = getelementptr inbounds i32, i32* %158, i64 -4
  %163 = getelementptr inbounds i32, i32* %162, i64 -3
  %164 = bitcast i32* %163 to <4 x i32>*
  %165 = load <4 x i32>, <4 x i32>* %164, align 4, !alias.scope !239
  %166 = getelementptr inbounds i32, i32* %157, i64 -3
  %167 = bitcast i32* %166 to <4 x i32>*
  store <4 x i32> %161, <4 x i32>* %167, align 4, !alias.scope !242, !noalias !239
  %168 = getelementptr inbounds i32, i32* %157, i64 -4
  %169 = getelementptr inbounds i32, i32* %168, i64 -3
  %170 = bitcast i32* %169 to <4 x i32>*
  store <4 x i32> %165, <4 x i32>* %170, align 4, !alias.scope !242, !noalias !239
  %171 = add i64 %137, 16
  %172 = add i64 %138, -2
  %173 = icmp eq i64 %172, 0
  br i1 %173, label %174, label %136, !llvm.loop !244

174:                                              ; preds = %136, %119
  %175 = phi i64 [ 0, %119 ], [ %171, %136 ]
  %176 = icmp eq i64 %128, 0
  br i1 %176, label %196, label %177

177:                                              ; preds = %174
  %178 = sub i64 0, %175
  %179 = getelementptr i32, i32* %89, i64 -1
  %180 = sub i64 0, %175
  %181 = getelementptr i32, i32* %96, i64 -1
  %182 = getelementptr inbounds i32, i32* %179, i64 %178
  %183 = getelementptr inbounds i32, i32* %181, i64 %180
  %184 = getelementptr inbounds i32, i32* %183, i64 -3
  %185 = bitcast i32* %184 to <4 x i32>*
  %186 = load <4 x i32>, <4 x i32>* %185, align 4, !alias.scope !239
  %187 = getelementptr inbounds i32, i32* %183, i64 -4
  %188 = getelementptr inbounds i32, i32* %187, i64 -3
  %189 = bitcast i32* %188 to <4 x i32>*
  %190 = load <4 x i32>, <4 x i32>* %189, align 4, !alias.scope !239
  %191 = getelementptr inbounds i32, i32* %182, i64 -3
  %192 = bitcast i32* %191 to <4 x i32>*
  store <4 x i32> %186, <4 x i32>* %192, align 4, !alias.scope !242, !noalias !239
  %193 = getelementptr inbounds i32, i32* %182, i64 -4
  %194 = getelementptr inbounds i32, i32* %193, i64 -3
  %195 = bitcast i32* %194 to <4 x i32>*
  store <4 x i32> %190, <4 x i32>* %195, align 4, !alias.scope !242, !noalias !239
  br label %196

196:                                              ; preds = %174, %177
  %197 = icmp eq i64 %103, %120
  br i1 %197, label %250, label %198

198:                                              ; preds = %196, %105, %98
  %199 = phi i32* [ %89, %105 ], [ %89, %98 ], [ %122, %196 ]
  %200 = phi i32* [ %96, %105 ], [ %96, %98 ], [ %124, %196 ]
  %201 = getelementptr i32, i32* %200, i64 -1
  %202 = ptrtoint i32* %201 to i64
  %203 = sub i64 %202, %95
  %204 = lshr i64 %203, 2
  %205 = add nuw nsw i64 %204, 1
  %206 = and i64 %205, 7
  %207 = icmp eq i64 %206, 0
  br i1 %207, label %217, label %208

208:                                              ; preds = %198, %208
  %209 = phi i32* [ %212, %208 ], [ %199, %198 ]
  %210 = phi i32* [ %213, %208 ], [ %200, %198 ]
  %211 = phi i64 [ %215, %208 ], [ %206, %198 ]
  %212 = getelementptr inbounds i32, i32* %209, i64 -1
  %213 = getelementptr inbounds i32, i32* %210, i64 -1
  %214 = load i32, i32* %213, align 4
  store i32 %214, i32* %212, align 4
  %215 = add i64 %211, -1
  %216 = icmp eq i64 %215, 0
  br i1 %216, label %217, label %208, !llvm.loop !245

217:                                              ; preds = %208, %198
  %218 = phi i32* [ undef, %198 ], [ %212, %208 ]
  %219 = phi i32* [ %199, %198 ], [ %212, %208 ]
  %220 = phi i32* [ %200, %198 ], [ %213, %208 ]
  %221 = icmp ult i64 %203, 28
  br i1 %221, label %250, label %222

222:                                              ; preds = %217, %222
  %223 = phi i32* [ %246, %222 ], [ %219, %217 ]
  %224 = phi i32* [ %247, %222 ], [ %220, %217 ]
  %225 = getelementptr inbounds i32, i32* %223, i64 -1
  %226 = getelementptr inbounds i32, i32* %224, i64 -1
  %227 = load i32, i32* %226, align 4
  store i32 %227, i32* %225, align 4
  %228 = getelementptr inbounds i32, i32* %223, i64 -2
  %229 = getelementptr inbounds i32, i32* %224, i64 -2
  %230 = load i32, i32* %229, align 4
  store i32 %230, i32* %228, align 4
  %231 = getelementptr inbounds i32, i32* %223, i64 -3
  %232 = getelementptr inbounds i32, i32* %224, i64 -3
  %233 = load i32, i32* %232, align 4
  store i32 %233, i32* %231, align 4
  %234 = getelementptr inbounds i32, i32* %223, i64 -4
  %235 = getelementptr inbounds i32, i32* %224, i64 -4
  %236 = load i32, i32* %235, align 4
  store i32 %236, i32* %234, align 4
  %237 = getelementptr inbounds i32, i32* %223, i64 -5
  %238 = getelementptr inbounds i32, i32* %224, i64 -5
  %239 = load i32, i32* %238, align 4
  store i32 %239, i32* %237, align 4
  %240 = getelementptr inbounds i32, i32* %223, i64 -6
  %241 = getelementptr inbounds i32, i32* %224, i64 -6
  %242 = load i32, i32* %241, align 4
  store i32 %242, i32* %240, align 4
  %243 = getelementptr inbounds i32, i32* %223, i64 -7
  %244 = getelementptr inbounds i32, i32* %224, i64 -7
  %245 = load i32, i32* %244, align 4
  store i32 %245, i32* %243, align 4
  %246 = getelementptr inbounds i32, i32* %223, i64 -8
  %247 = getelementptr inbounds i32, i32* %224, i64 -8
  %248 = load i32, i32* %247, align 4
  store i32 %248, i32* %246, align 4
  %249 = icmp eq i32* %247, %94
  br i1 %249, label %250, label %222, !llvm.loop !246

250:                                              ; preds = %217, %222, %196, %86
  %251 = phi i32* [ %89, %86 ], [ %122, %196 ], [ %218, %217 ], [ %246, %222 ]
  %252 = ptrtoint i32* %251 to i64
  store i64 %252, i64* %11, align 8
  store i64 %93, i64* %10, align 8
  store i64 %91, i64* %12, align 8
  br label %255

253:                                              ; preds = %23
  %254 = icmp ugt i32 %17, -3
  br i1 %254, label %257, label %255

255:                                              ; preds = %253, %250, %46, %20, %18
  %256 = phi i32 [ %19, %18 ], [ %21, %20 ], [ 1, %46 ], [ 1, %250 ], [ %16, %253 ]
  tail call void @_ZN2v88internal12AsmJsScanner4NextEv(%"class.v8::internal::AsmJsScanner"* %3) #12
  br label %15

257:                                              ; preds = %253, %32, %20
  tail call void @_ZN2v88internal12AsmJsScanner4SeekEm(%"class.v8::internal::AsmJsScanner"* %3, i64 %5) #12
  ret void
}

declare void @_ZN2v88internal4wasm19WasmFunctionBuilder12EmitGetLocalEj(%"class.v8::internal::wasm::WasmFunctionBuilder"*, i32) local_unnamed_addr #1

; Function Attrs: nounwind ssp uwtable
define hidden void @_ZN2v88internal4wasm11AsmJsParser12ValidateCaseEv(%"class.v8::internal::wasm::AsmJsParser"*) local_unnamed_addr #0 align 2 {
  %2 = getelementptr inbounds %"class.v8::internal::wasm::AsmJsParser", %"class.v8::internal::wasm::AsmJsParser"* %0, i64 0, i32 1
  %3 = getelementptr inbounds %"class.v8::internal::wasm::AsmJsParser", %"class.v8::internal::wasm::AsmJsParser"* %0, i64 0, i32 1, i32 1
  %4 = load i32, i32* %3, align 8
  %5 = icmp eq i32 %4, -9959
  br i1 %5, label %13, label %6

6:                                                ; preds = %1
  %7 = getelementptr inbounds %"class.v8::internal::wasm::AsmJsParser", %"class.v8::internal::wasm::AsmJsParser"* %0, i64 0, i32 17
  store i8 1, i8* %7, align 4
  %8 = getelementptr inbounds %"class.v8::internal::wasm::AsmJsParser", %"class.v8::internal::wasm::AsmJsParser"* %0, i64 0, i32 18
  store i8* getelementptr inbounds ([17 x i8], [17 x i8]* @.str.3, i64 0, i64 0), i8** %8, align 8
  %9 = getelementptr inbounds %"class.v8::internal::wasm::AsmJsParser", %"class.v8::internal::wasm::AsmJsParser"* %0, i64 0, i32 1, i32 5
  %10 = load i64, i64* %9, align 8
  %11 = trunc i64 %10 to i32
  %12 = getelementptr inbounds %"class.v8::internal::wasm::AsmJsParser", %"class.v8::internal::wasm::AsmJsParser"* %0, i64 0, i32 19
  store i32 %11, i32* %12, align 8
  br label %75

13:                                               ; preds = %1
  tail call void @_ZN2v88internal12AsmJsScanner4NextEv(%"class.v8::internal::AsmJsScanner"* %2) #12
  %14 = load i32, i32* %3, align 8
  %15 = icmp eq i32 %14, 45
  br i1 %15, label %16, label %18

16:                                               ; preds = %13
  tail call void @_ZN2v88internal12AsmJsScanner4NextEv(%"class.v8::internal::AsmJsScanner"* %2) #12
  %17 = load i32, i32* %3, align 8
  br label %18

18:                                               ; preds = %13, %16
  %19 = phi i32 [ %14, %13 ], [ %17, %16 ]
  %20 = phi i1 [ false, %13 ], [ true, %16 ]
  %21 = icmp eq i32 %19, -3
  br i1 %21, label %29, label %22

22:                                               ; preds = %18
  %23 = getelementptr inbounds %"class.v8::internal::wasm::AsmJsParser", %"class.v8::internal::wasm::AsmJsParser"* %0, i64 0, i32 17
  store i8 1, i8* %23, align 4
  %24 = getelementptr inbounds %"class.v8::internal::wasm::AsmJsParser", %"class.v8::internal::wasm::AsmJsParser"* %0, i64 0, i32 18
  store i8* getelementptr inbounds ([25 x i8], [25 x i8]* @.str.12, i64 0, i64 0), i8** %24, align 8
  %25 = getelementptr inbounds %"class.v8::internal::wasm::AsmJsParser", %"class.v8::internal::wasm::AsmJsParser"* %0, i64 0, i32 1, i32 5
  %26 = load i64, i64* %25, align 8
  %27 = trunc i64 %26 to i32
  %28 = getelementptr inbounds %"class.v8::internal::wasm::AsmJsParser", %"class.v8::internal::wasm::AsmJsParser"* %0, i64 0, i32 19
  store i32 %27, i32* %28, align 8
  br label %75

29:                                               ; preds = %18
  %30 = getelementptr inbounds %"class.v8::internal::wasm::AsmJsParser", %"class.v8::internal::wasm::AsmJsParser"* %0, i64 0, i32 1, i32 19
  %31 = load i32, i32* %30, align 8
  tail call void @_ZN2v88internal12AsmJsScanner4NextEv(%"class.v8::internal::AsmJsScanner"* %2) #12
  %32 = icmp ugt i32 %31, -2147483648
  %33 = and i1 %20, %32
  br i1 %33, label %38, label %34

34:                                               ; preds = %29
  %35 = xor i1 %20, true
  %36 = icmp slt i32 %31, 0
  %37 = and i1 %36, %35
  br i1 %37, label %38, label %45

38:                                               ; preds = %34, %29
  %39 = getelementptr inbounds %"class.v8::internal::wasm::AsmJsParser", %"class.v8::internal::wasm::AsmJsParser"* %0, i64 0, i32 17
  store i8 1, i8* %39, align 4
  %40 = getelementptr inbounds %"class.v8::internal::wasm::AsmJsParser", %"class.v8::internal::wasm::AsmJsParser"* %0, i64 0, i32 18
  store i8* getelementptr inbounds ([29 x i8], [29 x i8]* @.str.11, i64 0, i64 0), i8** %40, align 8
  %41 = getelementptr inbounds %"class.v8::internal::wasm::AsmJsParser", %"class.v8::internal::wasm::AsmJsParser"* %0, i64 0, i32 1, i32 5
  %42 = load i64, i64* %41, align 8
  %43 = trunc i64 %42 to i32
  %44 = getelementptr inbounds %"class.v8::internal::wasm::AsmJsParser", %"class.v8::internal::wasm::AsmJsParser"* %0, i64 0, i32 19
  store i32 %43, i32* %44, align 8
  br label %75

45:                                               ; preds = %34
  %46 = load i32, i32* %3, align 8
  %47 = icmp eq i32 %46, 58
  br i1 %47, label %55, label %48

48:                                               ; preds = %45
  %49 = getelementptr inbounds %"class.v8::internal::wasm::AsmJsParser", %"class.v8::internal::wasm::AsmJsParser"* %0, i64 0, i32 17
  store i8 1, i8* %49, align 4
  %50 = getelementptr inbounds %"class.v8::internal::wasm::AsmJsParser", %"class.v8::internal::wasm::AsmJsParser"* %0, i64 0, i32 18
  store i8* getelementptr inbounds ([17 x i8], [17 x i8]* @.str.3, i64 0, i64 0), i8** %50, align 8
  %51 = getelementptr inbounds %"class.v8::internal::wasm::AsmJsParser", %"class.v8::internal::wasm::AsmJsParser"* %0, i64 0, i32 1, i32 5
  %52 = load i64, i64* %51, align 8
  %53 = trunc i64 %52 to i32
  %54 = getelementptr inbounds %"class.v8::internal::wasm::AsmJsParser", %"class.v8::internal::wasm::AsmJsParser"* %0, i64 0, i32 19
  store i32 %53, i32* %54, align 8
  br label %75

55:                                               ; preds = %45
  tail call void @_ZN2v88internal12AsmJsScanner4NextEv(%"class.v8::internal::AsmJsScanner"* %2) #12
  %56 = getelementptr inbounds %"class.v8::internal::wasm::AsmJsParser", %"class.v8::internal::wasm::AsmJsParser"* %0, i64 0, i32 17
  %57 = getelementptr inbounds %"class.v8::internal::wasm::AsmJsParser", %"class.v8::internal::wasm::AsmJsParser"* %0, i64 0, i32 5
  %58 = load i8, i8* %56, align 4, !range !69
  %59 = icmp eq i8 %58, 0
  br i1 %59, label %60, label %75

60:                                               ; preds = %55, %72
  %61 = load i32, i32* %3, align 8
  switch i32 %61, label %62 [
    i32 125, label %75
    i32 -9959, label %75
    i32 -9956, label %75
  ]

62:                                               ; preds = %60
  %63 = tail call i64 @_ZN2v88internal23GetCurrentStackPositionEv() #12
  %64 = load i64, i64* %57, align 8
  %65 = icmp ult i64 %63, %64
  br i1 %65, label %66, label %72

66:                                               ; preds = %62
  store i8 1, i8* %56, align 4
  %67 = getelementptr inbounds %"class.v8::internal::wasm::AsmJsParser", %"class.v8::internal::wasm::AsmJsParser"* %0, i64 0, i32 18
  store i8* getelementptr inbounds ([44 x i8], [44 x i8]* @.str.2, i64 0, i64 0), i8** %67, align 8
  %68 = getelementptr inbounds %"class.v8::internal::wasm::AsmJsParser", %"class.v8::internal::wasm::AsmJsParser"* %0, i64 0, i32 1, i32 5
  %69 = load i64, i64* %68, align 8
  %70 = trunc i64 %69 to i32
  %71 = getelementptr inbounds %"class.v8::internal::wasm::AsmJsParser", %"class.v8::internal::wasm::AsmJsParser"* %0, i64 0, i32 19
  store i32 %70, i32* %71, align 8
  br label %75

72:                                               ; preds = %62
  tail call void @_ZN2v88internal4wasm11AsmJsParser17ValidateStatementEv(%"class.v8::internal::wasm::AsmJsParser"* %0)
  %73 = load i8, i8* %56, align 4, !range !69
  %74 = icmp eq i8 %73, 0
  br i1 %74, label %60, label %75

75:                                               ; preds = %60, %60, %60, %72, %55, %22, %38, %66, %48, %6
  ret void
}

; Function Attrs: nounwind ssp uwtable
define hidden void @_ZN2v88internal4wasm11AsmJsParser15ValidateDefaultEv(%"class.v8::internal::wasm::AsmJsParser"*) local_unnamed_addr #0 align 2 {
  %2 = getelementptr inbounds %"class.v8::internal::wasm::AsmJsParser", %"class.v8::internal::wasm::AsmJsParser"* %0, i64 0, i32 1
  %3 = getelementptr inbounds %"class.v8::internal::wasm::AsmJsParser", %"class.v8::internal::wasm::AsmJsParser"* %0, i64 0, i32 1, i32 1
  %4 = load i32, i32* %3, align 8
  %5 = icmp eq i32 %4, -9956
  br i1 %5, label %13, label %6

6:                                                ; preds = %1
  %7 = getelementptr inbounds %"class.v8::internal::wasm::AsmJsParser", %"class.v8::internal::wasm::AsmJsParser"* %0, i64 0, i32 17
  store i8 1, i8* %7, align 4
  %8 = getelementptr inbounds %"class.v8::internal::wasm::AsmJsParser", %"class.v8::internal::wasm::AsmJsParser"* %0, i64 0, i32 18
  store i8* getelementptr inbounds ([17 x i8], [17 x i8]* @.str.3, i64 0, i64 0), i8** %8, align 8
  %9 = getelementptr inbounds %"class.v8::internal::wasm::AsmJsParser", %"class.v8::internal::wasm::AsmJsParser"* %0, i64 0, i32 1, i32 5
  %10 = load i64, i64* %9, align 8
  %11 = trunc i64 %10 to i32
  %12 = getelementptr inbounds %"class.v8::internal::wasm::AsmJsParser", %"class.v8::internal::wasm::AsmJsParser"* %0, i64 0, i32 19
  store i32 %11, i32* %12, align 8
  br label %44

13:                                               ; preds = %1
  tail call void @_ZN2v88internal12AsmJsScanner4NextEv(%"class.v8::internal::AsmJsScanner"* %2) #12
  %14 = load i32, i32* %3, align 8
  %15 = icmp eq i32 %14, 58
  br i1 %15, label %23, label %16

16:                                               ; preds = %13
  %17 = getelementptr inbounds %"class.v8::internal::wasm::AsmJsParser", %"class.v8::internal::wasm::AsmJsParser"* %0, i64 0, i32 17
  store i8 1, i8* %17, align 4
  %18 = getelementptr inbounds %"class.v8::internal::wasm::AsmJsParser", %"class.v8::internal::wasm::AsmJsParser"* %0, i64 0, i32 18
  store i8* getelementptr inbounds ([17 x i8], [17 x i8]* @.str.3, i64 0, i64 0), i8** %18, align 8
  %19 = getelementptr inbounds %"class.v8::internal::wasm::AsmJsParser", %"class.v8::internal::wasm::AsmJsParser"* %0, i64 0, i32 1, i32 5
  %20 = load i64, i64* %19, align 8
  %21 = trunc i64 %20 to i32
  %22 = getelementptr inbounds %"class.v8::internal::wasm::AsmJsParser", %"class.v8::internal::wasm::AsmJsParser"* %0, i64 0, i32 19
  store i32 %21, i32* %22, align 8
  br label %44

23:                                               ; preds = %13
  tail call void @_ZN2v88internal12AsmJsScanner4NextEv(%"class.v8::internal::AsmJsScanner"* %2) #12
  %24 = getelementptr inbounds %"class.v8::internal::wasm::AsmJsParser", %"class.v8::internal::wasm::AsmJsParser"* %0, i64 0, i32 17
  %25 = getelementptr inbounds %"class.v8::internal::wasm::AsmJsParser", %"class.v8::internal::wasm::AsmJsParser"* %0, i64 0, i32 5
  %26 = load i8, i8* %24, align 4, !range !69
  %27 = icmp eq i8 %26, 0
  br i1 %27, label %28, label %44

28:                                               ; preds = %23, %41
  %29 = load i32, i32* %3, align 8
  %30 = icmp eq i32 %29, 125
  br i1 %30, label %44, label %31

31:                                               ; preds = %28
  %32 = tail call i64 @_ZN2v88internal23GetCurrentStackPositionEv() #12
  %33 = load i64, i64* %25, align 8
  %34 = icmp ult i64 %32, %33
  br i1 %34, label %35, label %41

35:                                               ; preds = %31
  store i8 1, i8* %24, align 4
  %36 = getelementptr inbounds %"class.v8::internal::wasm::AsmJsParser", %"class.v8::internal::wasm::AsmJsParser"* %0, i64 0, i32 18
  store i8* getelementptr inbounds ([44 x i8], [44 x i8]* @.str.2, i64 0, i64 0), i8** %36, align 8
  %37 = getelementptr inbounds %"class.v8::internal::wasm::AsmJsParser", %"class.v8::internal::wasm::AsmJsParser"* %0, i64 0, i32 1, i32 5
  %38 = load i64, i64* %37, align 8
  %39 = trunc i64 %38 to i32
  %40 = getelementptr inbounds %"class.v8::internal::wasm::AsmJsParser", %"class.v8::internal::wasm::AsmJsParser"* %0, i64 0, i32 19
  store i32 %39, i32* %40, align 8
  br label %44

41:                                               ; preds = %31
  tail call void @_ZN2v88internal4wasm11AsmJsParser17ValidateStatementEv(%"class.v8::internal::wasm::AsmJsParser"* %0)
  %42 = load i8, i8* %24, align 4, !range !69
  %43 = icmp eq i8 %42, 0
  br i1 %43, label %28, label %44

44:                                               ; preds = %41, %28, %23, %6, %16, %35
  ret void
}

; Function Attrs: nounwind ssp uwtable
define hidden %"class.v8::internal::wasm::AsmType"* @_ZN2v88internal4wasm11AsmJsParser20AssignmentExpressionEv(%"class.v8::internal::wasm::AsmJsParser"*) local_unnamed_addr #0 align 2 {
  %2 = getelementptr inbounds %"class.v8::internal::wasm::AsmJsParser", %"class.v8::internal::wasm::AsmJsParser"* %0, i64 0, i32 1
  %3 = getelementptr inbounds %"class.v8::internal::wasm::AsmJsParser", %"class.v8::internal::wasm::AsmJsParser"* %0, i64 0, i32 1, i32 1
  %4 = load i32, i32* %3, align 8
  %5 = icmp sgt i32 %4, 255
  br i1 %5, label %6, label %180

6:                                                ; preds = %1
  %7 = getelementptr inbounds %"class.v8::internal::wasm::AsmJsParser", %"class.v8::internal::wasm::AsmJsParser"* %0, i64 0, i32 7
  %8 = getelementptr inbounds %"class.v8::internal::wasm::AsmJsParser", %"class.v8::internal::wasm::AsmJsParser"* %0, i64 0, i32 7, i32 1
  %9 = load i64, i64* %8, align 8
  %10 = add nsw i32 %4, -256
  %11 = sext i32 %10 to i64
  %12 = getelementptr inbounds %"class.v8::internal::wasm::AsmJsParser", %"class.v8::internal::wasm::AsmJsParser"* %0, i64 0, i32 9
  %13 = load i64, i64* %12, align 8
  %14 = icmp ugt i64 %13, %11
  %15 = add nuw nsw i64 %11, 1
  br i1 %14, label %17, label %16

16:                                               ; preds = %6
  store i64 %15, i64* %12, align 8
  br label %17

17:                                               ; preds = %6, %16
  %18 = icmp ugt i64 %9, %11
  br i1 %18, label %19, label %22

19:                                               ; preds = %17
  %20 = getelementptr inbounds %"class.v8::internal::Vector.160", %"class.v8::internal::Vector.160"* %7, i64 0, i32 0
  %21 = load %"struct.v8::internal::wasm::AsmJsParser::VarInfo"*, %"struct.v8::internal::wasm::AsmJsParser::VarInfo"** %20, align 8
  br label %63

22:                                               ; preds = %17
  %23 = shl i64 %9, 1
  %24 = icmp ult i64 %23, %15
  %25 = select i1 %24, i64 %15, i64 %23
  %26 = getelementptr inbounds %"class.v8::internal::wasm::AsmJsParser", %"class.v8::internal::wasm::AsmJsParser"* %0, i64 0, i32 0
  %27 = load %"class.v8::internal::Zone"*, %"class.v8::internal::Zone"** %26, align 8
  %28 = mul i64 %25, 40
  %29 = getelementptr inbounds %"class.v8::internal::Zone", %"class.v8::internal::Zone"* %27, i64 0, i32 2
  %30 = load i64, i64* %29, align 8
  %31 = getelementptr inbounds %"class.v8::internal::Zone", %"class.v8::internal::Zone"* %27, i64 0, i32 3
  %32 = load i64, i64* %31, align 8
  %33 = sub i64 %32, %30
  %34 = icmp ugt i64 %28, %33
  br i1 %34, label %35, label %37, !prof !2

35:                                               ; preds = %22
  %36 = tail call i64 @_ZN2v88internal4Zone9NewExpandEm(%"class.v8::internal::Zone"* %27, i64 %28) #12
  br label %39

37:                                               ; preds = %22
  %38 = add i64 %30, %28
  store i64 %38, i64* %29, align 8
  br label %39

39:                                               ; preds = %37, %35
  %40 = phi i64 [ %36, %35 ], [ %30, %37 ]
  %41 = inttoptr i64 %40 to %"struct.v8::internal::wasm::AsmJsParser::VarInfo"*
  %42 = getelementptr inbounds %"struct.v8::internal::wasm::AsmJsParser::VarInfo", %"struct.v8::internal::wasm::AsmJsParser::VarInfo"* %41, i64 %25
  %43 = icmp eq i64 %25, 0
  br i1 %43, label %53, label %44

44:                                               ; preds = %39, %44
  %45 = phi %"struct.v8::internal::wasm::AsmJsParser::VarInfo"* [ %51, %44 ], [ %41, %39 ]
  %46 = getelementptr inbounds %"struct.v8::internal::wasm::AsmJsParser::VarInfo", %"struct.v8::internal::wasm::AsmJsParser::VarInfo"* %45, i64 0, i32 0
  store %"class.v8::internal::wasm::AsmType"* inttoptr (i64 2147483649 to %"class.v8::internal::wasm::AsmType"*), %"class.v8::internal::wasm::AsmType"** %46, align 8
  %47 = getelementptr inbounds %"struct.v8::internal::wasm::AsmJsParser::VarInfo", %"struct.v8::internal::wasm::AsmJsParser::VarInfo"* %45, i64 0, i32 1
  %48 = getelementptr inbounds %"struct.v8::internal::wasm::AsmJsParser::VarInfo", %"struct.v8::internal::wasm::AsmJsParser::VarInfo"* %45, i64 0, i32 6
  %49 = bitcast %"class.v8::internal::wasm::WasmFunctionBuilder"** %47 to i8*
  tail call void @llvm.memset.p0i8.i64(i8* align 8 %49, i8 0, i64 28, i1 false) #12
  store i8 1, i8* %48, align 4
  %50 = getelementptr inbounds %"struct.v8::internal::wasm::AsmJsParser::VarInfo", %"struct.v8::internal::wasm::AsmJsParser::VarInfo"* %45, i64 0, i32 7
  store i8 0, i8* %50, align 1
  %51 = getelementptr inbounds %"struct.v8::internal::wasm::AsmJsParser::VarInfo", %"struct.v8::internal::wasm::AsmJsParser::VarInfo"* %45, i64 1
  %52 = icmp eq %"struct.v8::internal::wasm::AsmJsParser::VarInfo"* %51, %42
  br i1 %52, label %53, label %44

53:                                               ; preds = %44, %39
  %54 = getelementptr inbounds %"class.v8::internal::Vector.160", %"class.v8::internal::Vector.160"* %7, i64 0, i32 0
  %55 = load i64, i64* %8, align 8
  %56 = mul nuw i64 %55, 40
  %57 = icmp eq i64 %56, 0
  br i1 %57, label %62, label %58

58:                                               ; preds = %53
  %59 = bitcast %"class.v8::internal::Vector.160"* %7 to i8**
  %60 = load i8*, i8** %59, align 8
  %61 = inttoptr i64 %40 to i8*
  tail call void @llvm.memmove.p0i8.p0i8.i64(i8* align 8 %61, i8* align 8 %60, i64 %56, i1 false) #12
  br label %62

62:                                               ; preds = %58, %53
  store %"struct.v8::internal::wasm::AsmJsParser::VarInfo"* %41, %"struct.v8::internal::wasm::AsmJsParser::VarInfo"** %54, align 8
  store i64 %25, i64* %8, align 8
  br label %63

63:                                               ; preds = %19, %62
  %64 = phi %"struct.v8::internal::wasm::AsmJsParser::VarInfo"* [ %21, %19 ], [ %41, %62 ]
  %65 = getelementptr inbounds %"struct.v8::internal::wasm::AsmJsParser::VarInfo", %"struct.v8::internal::wasm::AsmJsParser::VarInfo"* %64, i64 %11, i32 0
  %66 = load %"class.v8::internal::wasm::AsmType"*, %"class.v8::internal::wasm::AsmType"** %65, align 8
  %67 = tail call zeroext i1 @_ZN2v88internal4wasm7AsmType3IsAEPS2_(%"class.v8::internal::wasm::AsmType"* %66, %"class.v8::internal::wasm::AsmType"* nonnull inttoptr (i64 3 to %"class.v8::internal::wasm::AsmType"*)) #12
  br i1 %67, label %68, label %178

68:                                               ; preds = %63
  %69 = tail call i64 @_ZN2v88internal23GetCurrentStackPositionEv() #12
  %70 = getelementptr inbounds %"class.v8::internal::wasm::AsmJsParser", %"class.v8::internal::wasm::AsmJsParser"* %0, i64 0, i32 5
  %71 = load i64, i64* %70, align 8
  %72 = icmp ult i64 %69, %71
  br i1 %72, label %73, label %80

73:                                               ; preds = %68
  %74 = getelementptr inbounds %"class.v8::internal::wasm::AsmJsParser", %"class.v8::internal::wasm::AsmJsParser"* %0, i64 0, i32 17
  store i8 1, i8* %74, align 4
  %75 = getelementptr inbounds %"class.v8::internal::wasm::AsmJsParser", %"class.v8::internal::wasm::AsmJsParser"* %0, i64 0, i32 18
  store i8* getelementptr inbounds ([44 x i8], [44 x i8]* @.str.2, i64 0, i64 0), i8** %75, align 8
  %76 = getelementptr inbounds %"class.v8::internal::wasm::AsmJsParser", %"class.v8::internal::wasm::AsmJsParser"* %0, i64 0, i32 1, i32 5
  %77 = load i64, i64* %76, align 8
  %78 = trunc i64 %77 to i32
  %79 = getelementptr inbounds %"class.v8::internal::wasm::AsmJsParser", %"class.v8::internal::wasm::AsmJsParser"* %0, i64 0, i32 19
  store i32 %78, i32* %79, align 8
  br label %364

80:                                               ; preds = %68
  %81 = tail call %"class.v8::internal::wasm::AsmType"* @_ZN2v88internal4wasm11AsmJsParser21ConditionalExpressionEv(%"class.v8::internal::wasm::AsmJsParser"* %0)
  %82 = getelementptr inbounds %"class.v8::internal::wasm::AsmJsParser", %"class.v8::internal::wasm::AsmJsParser"* %0, i64 0, i32 17
  %83 = load i8, i8* %82, align 4, !range !69
  %84 = icmp eq i8 %83, 0
  br i1 %84, label %85, label %364

85:                                               ; preds = %80
  %86 = load i32, i32* %3, align 8
  %87 = icmp eq i32 %86, 61
  br i1 %87, label %88, label %362

88:                                               ; preds = %85
  %89 = getelementptr inbounds %"class.v8::internal::wasm::AsmJsParser", %"class.v8::internal::wasm::AsmJsParser"* %0, i64 0, i32 23
  %90 = load i8, i8* %89, align 8, !range !69
  %91 = icmp eq i8 %90, 0
  br i1 %91, label %92, label %98

92:                                               ; preds = %88
  store i8 1, i8* %82, align 4
  %93 = getelementptr inbounds %"class.v8::internal::wasm::AsmJsParser", %"class.v8::internal::wasm::AsmJsParser"* %0, i64 0, i32 18
  store i8* getelementptr inbounds ([26 x i8], [26 x i8]* @.str.61, i64 0, i64 0), i8** %93, align 8
  %94 = getelementptr inbounds %"class.v8::internal::wasm::AsmJsParser", %"class.v8::internal::wasm::AsmJsParser"* %0, i64 0, i32 1, i32 5
  %95 = load i64, i64* %94, align 8
  %96 = trunc i64 %95 to i32
  %97 = getelementptr inbounds %"class.v8::internal::wasm::AsmJsParser", %"class.v8::internal::wasm::AsmJsParser"* %0, i64 0, i32 19
  store i32 %96, i32* %97, align 8
  br label %364

98:                                               ; preds = %88
  store i8 0, i8* %89, align 8
  %99 = getelementptr inbounds %"class.v8::internal::wasm::AsmJsParser", %"class.v8::internal::wasm::AsmJsParser"* %0, i64 0, i32 24
  %100 = load %"class.v8::internal::wasm::AsmType"*, %"class.v8::internal::wasm::AsmType"** %99, align 8
  tail call void @_ZN2v88internal12AsmJsScanner4NextEv(%"class.v8::internal::AsmJsScanner"* %2) #12
  %101 = tail call i64 @_ZN2v88internal23GetCurrentStackPositionEv() #12
  %102 = load i64, i64* %70, align 8
  %103 = icmp ult i64 %101, %102
  br i1 %103, label %104, label %110

104:                                              ; preds = %98
  store i8 1, i8* %82, align 4
  %105 = getelementptr inbounds %"class.v8::internal::wasm::AsmJsParser", %"class.v8::internal::wasm::AsmJsParser"* %0, i64 0, i32 18
  store i8* getelementptr inbounds ([44 x i8], [44 x i8]* @.str.2, i64 0, i64 0), i8** %105, align 8
  %106 = getelementptr inbounds %"class.v8::internal::wasm::AsmJsParser", %"class.v8::internal::wasm::AsmJsParser"* %0, i64 0, i32 1, i32 5
  %107 = load i64, i64* %106, align 8
  %108 = trunc i64 %107 to i32
  %109 = getelementptr inbounds %"class.v8::internal::wasm::AsmJsParser", %"class.v8::internal::wasm::AsmJsParser"* %0, i64 0, i32 19
  store i32 %108, i32* %109, align 8
  br label %364

110:                                              ; preds = %98
  %111 = tail call %"class.v8::internal::wasm::AsmType"* @_ZN2v88internal4wasm11AsmJsParser20AssignmentExpressionEv(%"class.v8::internal::wasm::AsmJsParser"* %0)
  %112 = load i8, i8* %82, align 4, !range !69
  %113 = icmp eq i8 %112, 0
  br i1 %113, label %114, label %364

114:                                              ; preds = %110
  %115 = tail call zeroext i1 @_ZN2v88internal4wasm7AsmType3IsAEPS2_(%"class.v8::internal::wasm::AsmType"* %111, %"class.v8::internal::wasm::AsmType"* %81) #12
  br i1 %115, label %122, label %116

116:                                              ; preds = %114
  store i8 1, i8* %82, align 4
  %117 = getelementptr inbounds %"class.v8::internal::wasm::AsmJsParser", %"class.v8::internal::wasm::AsmJsParser"* %0, i64 0, i32 18
  store i8* getelementptr inbounds ([33 x i8], [33 x i8]* @.str.62, i64 0, i64 0), i8** %117, align 8
  %118 = getelementptr inbounds %"class.v8::internal::wasm::AsmJsParser", %"class.v8::internal::wasm::AsmJsParser"* %0, i64 0, i32 1, i32 5
  %119 = load i64, i64* %118, align 8
  %120 = trunc i64 %119 to i32
  %121 = getelementptr inbounds %"class.v8::internal::wasm::AsmJsParser", %"class.v8::internal::wasm::AsmJsParser"* %0, i64 0, i32 19
  store i32 %120, i32* %121, align 8
  br label %364

122:                                              ; preds = %114
  %123 = tail call zeroext i1 @_ZN2v88internal4wasm7AsmType3IsAEPS2_(%"class.v8::internal::wasm::AsmType"* %100, %"class.v8::internal::wasm::AsmType"* nonnull inttoptr (i64 4194307 to %"class.v8::internal::wasm::AsmType"*)) #12
  br i1 %123, label %124, label %129

124:                                              ; preds = %122
  %125 = tail call zeroext i1 @_ZN2v88internal4wasm7AsmType3IsAEPS2_(%"class.v8::internal::wasm::AsmType"* %111, %"class.v8::internal::wasm::AsmType"* nonnull inttoptr (i64 77 to %"class.v8::internal::wasm::AsmType"*)) #12
  br i1 %125, label %126, label %129

126:                                              ; preds = %124
  %127 = getelementptr inbounds %"class.v8::internal::wasm::AsmJsParser", %"class.v8::internal::wasm::AsmJsParser"* %0, i64 0, i32 3
  %128 = load %"class.v8::internal::wasm::WasmFunctionBuilder"*, %"class.v8::internal::wasm::WasmFunctionBuilder"** %127, align 8
  tail call void @_ZN2v88internal4wasm19WasmFunctionBuilder4EmitENS1_10WasmOpcodeE(%"class.v8::internal::wasm::WasmFunctionBuilder"* %128, i32 182) #12
  br label %129

129:                                              ; preds = %126, %124, %122
  %130 = phi %"class.v8::internal::wasm::AsmType"* [ inttoptr (i64 24589 to %"class.v8::internal::wasm::AsmType"*), %126 ], [ %111, %124 ], [ %111, %122 ]
  %131 = tail call zeroext i1 @_ZN2v88internal4wasm7AsmType3IsAEPS2_(%"class.v8::internal::wasm::AsmType"* %100, %"class.v8::internal::wasm::AsmType"* nonnull inttoptr (i64 8388611 to %"class.v8::internal::wasm::AsmType"*)) #12
  br i1 %131, label %132, label %137

132:                                              ; preds = %129
  %133 = tail call zeroext i1 @_ZN2v88internal4wasm7AsmType3IsAEPS2_(%"class.v8::internal::wasm::AsmType"* %111, %"class.v8::internal::wasm::AsmType"* nonnull inttoptr (i64 24589 to %"class.v8::internal::wasm::AsmType"*)) #12
  br i1 %133, label %134, label %137

134:                                              ; preds = %132
  %135 = getelementptr inbounds %"class.v8::internal::wasm::AsmJsParser", %"class.v8::internal::wasm::AsmJsParser"* %0, i64 0, i32 3
  %136 = load %"class.v8::internal::wasm::WasmFunctionBuilder"*, %"class.v8::internal::wasm::WasmFunctionBuilder"** %135, align 8
  tail call void @_ZN2v88internal4wasm19WasmFunctionBuilder4EmitENS1_10WasmOpcodeE(%"class.v8::internal::wasm::WasmFunctionBuilder"* %136, i32 187) #12
  br label %137

137:                                              ; preds = %134, %132, %129
  %138 = phi %"class.v8::internal::wasm::AsmType"* [ inttoptr (i64 77 to %"class.v8::internal::wasm::AsmType"*), %134 ], [ %130, %132 ], [ %130, %129 ]
  %139 = tail call zeroext i1 @_ZN2v88internal4wasm7AsmType3IsAEPS2_(%"class.v8::internal::wasm::AsmType"* %100, %"class.v8::internal::wasm::AsmType"* nonnull inttoptr (i64 131075 to %"class.v8::internal::wasm::AsmType"*)) #12
  br i1 %139, label %140, label %143

140:                                              ; preds = %137
  %141 = getelementptr inbounds %"class.v8::internal::wasm::AsmJsParser", %"class.v8::internal::wasm::AsmJsParser"* %0, i64 0, i32 3
  %142 = load %"class.v8::internal::wasm::WasmFunctionBuilder"*, %"class.v8::internal::wasm::WasmFunctionBuilder"** %141, align 8
  tail call void @_ZN2v88internal4wasm19WasmFunctionBuilder4EmitENS1_10WasmOpcodeE(%"class.v8::internal::wasm::WasmFunctionBuilder"* %142, i32 242) #12
  br label %364

143:                                              ; preds = %137
  %144 = tail call zeroext i1 @_ZN2v88internal4wasm7AsmType3IsAEPS2_(%"class.v8::internal::wasm::AsmType"* %100, %"class.v8::internal::wasm::AsmType"* nonnull inttoptr (i64 65539 to %"class.v8::internal::wasm::AsmType"*)) #12
  br i1 %144, label %145, label %148

145:                                              ; preds = %143
  %146 = getelementptr inbounds %"class.v8::internal::wasm::AsmJsParser", %"class.v8::internal::wasm::AsmJsParser"* %0, i64 0, i32 3
  %147 = load %"class.v8::internal::wasm::WasmFunctionBuilder"*, %"class.v8::internal::wasm::WasmFunctionBuilder"** %146, align 8
  tail call void @_ZN2v88internal4wasm19WasmFunctionBuilder4EmitENS1_10WasmOpcodeE(%"class.v8::internal::wasm::WasmFunctionBuilder"* %147, i32 242) #12
  br label %364

148:                                              ; preds = %143
  %149 = tail call zeroext i1 @_ZN2v88internal4wasm7AsmType3IsAEPS2_(%"class.v8::internal::wasm::AsmType"* %100, %"class.v8::internal::wasm::AsmType"* nonnull inttoptr (i64 524291 to %"class.v8::internal::wasm::AsmType"*)) #12
  br i1 %149, label %150, label %153

150:                                              ; preds = %148
  %151 = getelementptr inbounds %"class.v8::internal::wasm::AsmJsParser", %"class.v8::internal::wasm::AsmJsParser"* %0, i64 0, i32 3
  %152 = load %"class.v8::internal::wasm::WasmFunctionBuilder"*, %"class.v8::internal::wasm::WasmFunctionBuilder"** %151, align 8
  tail call void @_ZN2v88internal4wasm19WasmFunctionBuilder4EmitENS1_10WasmOpcodeE(%"class.v8::internal::wasm::WasmFunctionBuilder"* %152, i32 243) #12
  br label %364

153:                                              ; preds = %148
  %154 = tail call zeroext i1 @_ZN2v88internal4wasm7AsmType3IsAEPS2_(%"class.v8::internal::wasm::AsmType"* %100, %"class.v8::internal::wasm::AsmType"* nonnull inttoptr (i64 262147 to %"class.v8::internal::wasm::AsmType"*)) #12
  br i1 %154, label %155, label %158

155:                                              ; preds = %153
  %156 = getelementptr inbounds %"class.v8::internal::wasm::AsmJsParser", %"class.v8::internal::wasm::AsmJsParser"* %0, i64 0, i32 3
  %157 = load %"class.v8::internal::wasm::WasmFunctionBuilder"*, %"class.v8::internal::wasm::WasmFunctionBuilder"** %156, align 8
  tail call void @_ZN2v88internal4wasm19WasmFunctionBuilder4EmitENS1_10WasmOpcodeE(%"class.v8::internal::wasm::WasmFunctionBuilder"* %157, i32 243) #12
  br label %364

158:                                              ; preds = %153
  %159 = tail call zeroext i1 @_ZN2v88internal4wasm7AsmType3IsAEPS2_(%"class.v8::internal::wasm::AsmType"* %100, %"class.v8::internal::wasm::AsmType"* nonnull inttoptr (i64 2097155 to %"class.v8::internal::wasm::AsmType"*)) #12
  br i1 %159, label %160, label %163

160:                                              ; preds = %158
  %161 = getelementptr inbounds %"class.v8::internal::wasm::AsmJsParser", %"class.v8::internal::wasm::AsmJsParser"* %0, i64 0, i32 3
  %162 = load %"class.v8::internal::wasm::WasmFunctionBuilder"*, %"class.v8::internal::wasm::WasmFunctionBuilder"** %161, align 8
  tail call void @_ZN2v88internal4wasm19WasmFunctionBuilder4EmitENS1_10WasmOpcodeE(%"class.v8::internal::wasm::WasmFunctionBuilder"* %162, i32 244) #12
  br label %364

163:                                              ; preds = %158
  %164 = tail call zeroext i1 @_ZN2v88internal4wasm7AsmType3IsAEPS2_(%"class.v8::internal::wasm::AsmType"* %100, %"class.v8::internal::wasm::AsmType"* nonnull inttoptr (i64 1048579 to %"class.v8::internal::wasm::AsmType"*)) #12
  br i1 %164, label %165, label %168

165:                                              ; preds = %163
  %166 = getelementptr inbounds %"class.v8::internal::wasm::AsmJsParser", %"class.v8::internal::wasm::AsmJsParser"* %0, i64 0, i32 3
  %167 = load %"class.v8::internal::wasm::WasmFunctionBuilder"*, %"class.v8::internal::wasm::WasmFunctionBuilder"** %166, align 8
  tail call void @_ZN2v88internal4wasm19WasmFunctionBuilder4EmitENS1_10WasmOpcodeE(%"class.v8::internal::wasm::WasmFunctionBuilder"* %167, i32 244) #12
  br label %364

168:                                              ; preds = %163
  %169 = tail call zeroext i1 @_ZN2v88internal4wasm7AsmType3IsAEPS2_(%"class.v8::internal::wasm::AsmType"* %100, %"class.v8::internal::wasm::AsmType"* nonnull inttoptr (i64 4194307 to %"class.v8::internal::wasm::AsmType"*)) #12
  br i1 %169, label %170, label %173

170:                                              ; preds = %168
  %171 = getelementptr inbounds %"class.v8::internal::wasm::AsmJsParser", %"class.v8::internal::wasm::AsmJsParser"* %0, i64 0, i32 3
  %172 = load %"class.v8::internal::wasm::WasmFunctionBuilder"*, %"class.v8::internal::wasm::WasmFunctionBuilder"** %171, align 8
  tail call void @_ZN2v88internal4wasm19WasmFunctionBuilder4EmitENS1_10WasmOpcodeE(%"class.v8::internal::wasm::WasmFunctionBuilder"* %172, i32 245) #12
  br label %364

173:                                              ; preds = %168
  %174 = tail call zeroext i1 @_ZN2v88internal4wasm7AsmType3IsAEPS2_(%"class.v8::internal::wasm::AsmType"* %100, %"class.v8::internal::wasm::AsmType"* nonnull inttoptr (i64 8388611 to %"class.v8::internal::wasm::AsmType"*)) #12
  br i1 %174, label %175, label %362

175:                                              ; preds = %173
  %176 = getelementptr inbounds %"class.v8::internal::wasm::AsmJsParser", %"class.v8::internal::wasm::AsmJsParser"* %0, i64 0, i32 3
  %177 = load %"class.v8::internal::wasm::WasmFunctionBuilder"*, %"class.v8::internal::wasm::WasmFunctionBuilder"** %176, align 8
  tail call void @_ZN2v88internal4wasm19WasmFunctionBuilder4EmitENS1_10WasmOpcodeE(%"class.v8::internal::wasm::WasmFunctionBuilder"* %177, i32 246) #12
  br label %364

178:                                              ; preds = %63
  %179 = load i32, i32* %3, align 8
  br label %180

180:                                              ; preds = %178, %1
  %181 = phi i32 [ %179, %178 ], [ %4, %1 ]
  %182 = icmp slt i32 %181, -9999
  br i1 %182, label %185, label %183

183:                                              ; preds = %180
  %184 = icmp sgt i32 %181, 255
  br i1 %184, label %191, label %345

185:                                              ; preds = %180
  %186 = getelementptr inbounds %"class.v8::internal::wasm::AsmJsParser", %"class.v8::internal::wasm::AsmJsParser"* %0, i64 0, i32 8
  %187 = getelementptr inbounds %"class.v8::internal::wasm::AsmJsParser", %"class.v8::internal::wasm::AsmJsParser"* %0, i64 0, i32 8, i32 1
  %188 = load i64, i64* %187, align 8
  %189 = sub nuw nsw i32 -10000, %181
  %190 = sext i32 %189 to i64
  br label %202

191:                                              ; preds = %183
  %192 = getelementptr inbounds %"class.v8::internal::wasm::AsmJsParser", %"class.v8::internal::wasm::AsmJsParser"* %0, i64 0, i32 7
  %193 = getelementptr inbounds %"class.v8::internal::wasm::AsmJsParser", %"class.v8::internal::wasm::AsmJsParser"* %0, i64 0, i32 7, i32 1
  %194 = load i64, i64* %193, align 8
  %195 = add nsw i32 %181, -256
  %196 = sext i32 %195 to i64
  %197 = getelementptr inbounds %"class.v8::internal::wasm::AsmJsParser", %"class.v8::internal::wasm::AsmJsParser"* %0, i64 0, i32 9
  %198 = load i64, i64* %197, align 8
  %199 = icmp ugt i64 %198, %196
  br i1 %199, label %202, label %200

200:                                              ; preds = %191
  %201 = add nuw nsw i64 %196, 1
  store i64 %201, i64* %197, align 8
  br label %202

202:                                              ; preds = %200, %191, %185
  %203 = phi i64 [ %194, %200 ], [ %194, %191 ], [ %188, %185 ]
  %204 = phi i64* [ %193, %200 ], [ %193, %191 ], [ %187, %185 ]
  %205 = phi %"class.v8::internal::Vector.160"* [ %192, %200 ], [ %192, %191 ], [ %186, %185 ]
  %206 = phi i64 [ %196, %200 ], [ %196, %191 ], [ %190, %185 ]
  %207 = add nuw nsw i64 %206, 1
  %208 = icmp ult i64 %206, %203
  br i1 %208, label %209, label %212

209:                                              ; preds = %202
  %210 = getelementptr inbounds %"class.v8::internal::Vector.160", %"class.v8::internal::Vector.160"* %205, i64 0, i32 0
  %211 = load %"struct.v8::internal::wasm::AsmJsParser::VarInfo"*, %"struct.v8::internal::wasm::AsmJsParser::VarInfo"** %210, align 8
  br label %253

212:                                              ; preds = %202
  %213 = shl i64 %203, 1
  %214 = icmp ult i64 %213, %207
  %215 = select i1 %214, i64 %207, i64 %213
  %216 = getelementptr inbounds %"class.v8::internal::wasm::AsmJsParser", %"class.v8::internal::wasm::AsmJsParser"* %0, i64 0, i32 0
  %217 = load %"class.v8::internal::Zone"*, %"class.v8::internal::Zone"** %216, align 8
  %218 = mul i64 %215, 40
  %219 = getelementptr inbounds %"class.v8::internal::Zone", %"class.v8::internal::Zone"* %217, i64 0, i32 2
  %220 = load i64, i64* %219, align 8
  %221 = getelementptr inbounds %"class.v8::internal::Zone", %"class.v8::internal::Zone"* %217, i64 0, i32 3
  %222 = load i64, i64* %221, align 8
  %223 = sub i64 %222, %220
  %224 = icmp ugt i64 %218, %223
  br i1 %224, label %225, label %227, !prof !2

225:                                              ; preds = %212
  %226 = tail call i64 @_ZN2v88internal4Zone9NewExpandEm(%"class.v8::internal::Zone"* %217, i64 %218) #12
  br label %229

227:                                              ; preds = %212
  %228 = add i64 %220, %218
  store i64 %228, i64* %219, align 8
  br label %229

229:                                              ; preds = %227, %225
  %230 = phi i64 [ %226, %225 ], [ %220, %227 ]
  %231 = inttoptr i64 %230 to %"struct.v8::internal::wasm::AsmJsParser::VarInfo"*
  %232 = getelementptr inbounds %"struct.v8::internal::wasm::AsmJsParser::VarInfo", %"struct.v8::internal::wasm::AsmJsParser::VarInfo"* %231, i64 %215
  %233 = icmp eq i64 %215, 0
  br i1 %233, label %243, label %234

234:                                              ; preds = %229, %234
  %235 = phi %"struct.v8::internal::wasm::AsmJsParser::VarInfo"* [ %241, %234 ], [ %231, %229 ]
  %236 = getelementptr inbounds %"struct.v8::internal::wasm::AsmJsParser::VarInfo", %"struct.v8::internal::wasm::AsmJsParser::VarInfo"* %235, i64 0, i32 0
  store %"class.v8::internal::wasm::AsmType"* inttoptr (i64 2147483649 to %"class.v8::internal::wasm::AsmType"*), %"class.v8::internal::wasm::AsmType"** %236, align 8
  %237 = getelementptr inbounds %"struct.v8::internal::wasm::AsmJsParser::VarInfo", %"struct.v8::internal::wasm::AsmJsParser::VarInfo"* %235, i64 0, i32 1
  %238 = getelementptr inbounds %"struct.v8::internal::wasm::AsmJsParser::VarInfo", %"struct.v8::internal::wasm::AsmJsParser::VarInfo"* %235, i64 0, i32 6
  %239 = bitcast %"class.v8::internal::wasm::WasmFunctionBuilder"** %237 to i8*
  tail call void @llvm.memset.p0i8.i64(i8* align 8 %239, i8 0, i64 28, i1 false) #12
  store i8 1, i8* %238, align 4
  %240 = getelementptr inbounds %"struct.v8::internal::wasm::AsmJsParser::VarInfo", %"struct.v8::internal::wasm::AsmJsParser::VarInfo"* %235, i64 0, i32 7
  store i8 0, i8* %240, align 1
  %241 = getelementptr inbounds %"struct.v8::internal::wasm::AsmJsParser::VarInfo", %"struct.v8::internal::wasm::AsmJsParser::VarInfo"* %235, i64 1
  %242 = icmp eq %"struct.v8::internal::wasm::AsmJsParser::VarInfo"* %241, %232
  br i1 %242, label %243, label %234

243:                                              ; preds = %234, %229
  %244 = getelementptr inbounds %"class.v8::internal::Vector.160", %"class.v8::internal::Vector.160"* %205, i64 0, i32 0
  %245 = load i64, i64* %204, align 8
  %246 = mul nuw i64 %245, 40
  %247 = icmp eq i64 %246, 0
  br i1 %247, label %252, label %248

248:                                              ; preds = %243
  %249 = bitcast %"class.v8::internal::Vector.160"* %205 to i8**
  %250 = load i8*, i8** %249, align 8
  %251 = inttoptr i64 %230 to i8*
  tail call void @llvm.memmove.p0i8.p0i8.i64(i8* align 8 %251, i8* align 8 %250, i64 %246, i1 false) #12
  br label %252

252:                                              ; preds = %248, %243
  store %"struct.v8::internal::wasm::AsmJsParser::VarInfo"* %231, %"struct.v8::internal::wasm::AsmJsParser::VarInfo"** %244, align 8
  store i64 %215, i64* %204, align 8
  br label %253

253:                                              ; preds = %209, %252
  %254 = phi %"struct.v8::internal::wasm::AsmJsParser::VarInfo"* [ %211, %209 ], [ %231, %252 ]
  %255 = getelementptr inbounds %"struct.v8::internal::wasm::AsmJsParser::VarInfo", %"struct.v8::internal::wasm::AsmJsParser::VarInfo"* %254, i64 %206, i32 0
  %256 = load %"class.v8::internal::wasm::AsmType"*, %"class.v8::internal::wasm::AsmType"** %255, align 8
  tail call void @_ZN2v88internal12AsmJsScanner4NextEv(%"class.v8::internal::AsmJsScanner"* %2) #12
  %257 = load i32, i32* %3, align 8
  %258 = icmp eq i32 %257, 61
  br i1 %258, label %259, label %328

259:                                              ; preds = %253
  tail call void @_ZN2v88internal12AsmJsScanner4NextEv(%"class.v8::internal::AsmJsScanner"* %2) #12
  %260 = getelementptr inbounds %"struct.v8::internal::wasm::AsmJsParser::VarInfo", %"struct.v8::internal::wasm::AsmJsParser::VarInfo"* %254, i64 %206, i32 5
  %261 = load i32, i32* %260, align 8
  %262 = icmp eq i32 %261, 0
  br i1 %262, label %263, label %270

263:                                              ; preds = %259
  %264 = getelementptr inbounds %"class.v8::internal::wasm::AsmJsParser", %"class.v8::internal::wasm::AsmJsParser"* %0, i64 0, i32 17
  store i8 1, i8* %264, align 4
  %265 = getelementptr inbounds %"class.v8::internal::wasm::AsmJsParser", %"class.v8::internal::wasm::AsmJsParser"* %0, i64 0, i32 18
  store i8* getelementptr inbounds ([29 x i8], [29 x i8]* @.str.63, i64 0, i64 0), i8** %265, align 8
  %266 = getelementptr inbounds %"class.v8::internal::wasm::AsmJsParser", %"class.v8::internal::wasm::AsmJsParser"* %0, i64 0, i32 1, i32 5
  %267 = load i64, i64* %266, align 8
  %268 = trunc i64 %267 to i32
  %269 = getelementptr inbounds %"class.v8::internal::wasm::AsmJsParser", %"class.v8::internal::wasm::AsmJsParser"* %0, i64 0, i32 19
  store i32 %268, i32* %269, align 8
  br label %364

270:                                              ; preds = %259
  %271 = getelementptr inbounds %"struct.v8::internal::wasm::AsmJsParser::VarInfo", %"struct.v8::internal::wasm::AsmJsParser::VarInfo"* %254, i64 %206, i32 6
  %272 = load i8, i8* %271, align 4, !range !69
  %273 = icmp eq i8 %272, 0
  br i1 %273, label %274, label %281

274:                                              ; preds = %270
  %275 = getelementptr inbounds %"class.v8::internal::wasm::AsmJsParser", %"class.v8::internal::wasm::AsmJsParser"* %0, i64 0, i32 17
  store i8 1, i8* %275, align 4
  %276 = getelementptr inbounds %"class.v8::internal::wasm::AsmJsParser", %"class.v8::internal::wasm::AsmJsParser"* %0, i64 0, i32 18
  store i8* getelementptr inbounds ([40 x i8], [40 x i8]* @.str.64, i64 0, i64 0), i8** %276, align 8
  %277 = getelementptr inbounds %"class.v8::internal::wasm::AsmJsParser", %"class.v8::internal::wasm::AsmJsParser"* %0, i64 0, i32 1, i32 5
  %278 = load i64, i64* %277, align 8
  %279 = trunc i64 %278 to i32
  %280 = getelementptr inbounds %"class.v8::internal::wasm::AsmJsParser", %"class.v8::internal::wasm::AsmJsParser"* %0, i64 0, i32 19
  store i32 %279, i32* %280, align 8
  br label %364

281:                                              ; preds = %270
  %282 = tail call i64 @_ZN2v88internal23GetCurrentStackPositionEv() #12
  %283 = getelementptr inbounds %"class.v8::internal::wasm::AsmJsParser", %"class.v8::internal::wasm::AsmJsParser"* %0, i64 0, i32 5
  %284 = load i64, i64* %283, align 8
  %285 = icmp ult i64 %282, %284
  br i1 %285, label %286, label %293

286:                                              ; preds = %281
  %287 = getelementptr inbounds %"class.v8::internal::wasm::AsmJsParser", %"class.v8::internal::wasm::AsmJsParser"* %0, i64 0, i32 17
  store i8 1, i8* %287, align 4
  %288 = getelementptr inbounds %"class.v8::internal::wasm::AsmJsParser", %"class.v8::internal::wasm::AsmJsParser"* %0, i64 0, i32 18
  store i8* getelementptr inbounds ([44 x i8], [44 x i8]* @.str.2, i64 0, i64 0), i8** %288, align 8
  %289 = getelementptr inbounds %"class.v8::internal::wasm::AsmJsParser", %"class.v8::internal::wasm::AsmJsParser"* %0, i64 0, i32 1, i32 5
  %290 = load i64, i64* %289, align 8
  %291 = trunc i64 %290 to i32
  %292 = getelementptr inbounds %"class.v8::internal::wasm::AsmJsParser", %"class.v8::internal::wasm::AsmJsParser"* %0, i64 0, i32 19
  store i32 %291, i32* %292, align 8
  br label %364

293:                                              ; preds = %281
  %294 = tail call %"class.v8::internal::wasm::AsmType"* @_ZN2v88internal4wasm11AsmJsParser20AssignmentExpressionEv(%"class.v8::internal::wasm::AsmJsParser"* %0)
  %295 = getelementptr inbounds %"class.v8::internal::wasm::AsmJsParser", %"class.v8::internal::wasm::AsmJsParser"* %0, i64 0, i32 17
  %296 = load i8, i8* %295, align 4, !range !69
  %297 = icmp eq i8 %296, 0
  br i1 %297, label %298, label %364

298:                                              ; preds = %293
  %299 = tail call zeroext i1 @_ZN2v88internal4wasm7AsmType3IsAEPS2_(%"class.v8::internal::wasm::AsmType"* %294, %"class.v8::internal::wasm::AsmType"* %256) #12
  br i1 %299, label %306, label %300

300:                                              ; preds = %298
  store i8 1, i8* %295, align 4
  %301 = getelementptr inbounds %"class.v8::internal::wasm::AsmJsParser", %"class.v8::internal::wasm::AsmJsParser"* %0, i64 0, i32 18
  store i8* getelementptr inbounds ([28 x i8], [28 x i8]* @.str.65, i64 0, i64 0), i8** %301, align 8
  %302 = getelementptr inbounds %"class.v8::internal::wasm::AsmJsParser", %"class.v8::internal::wasm::AsmJsParser"* %0, i64 0, i32 1, i32 5
  %303 = load i64, i64* %302, align 8
  %304 = trunc i64 %303 to i32
  %305 = getelementptr inbounds %"class.v8::internal::wasm::AsmJsParser", %"class.v8::internal::wasm::AsmJsParser"* %0, i64 0, i32 19
  store i32 %304, i32* %305, align 8
  br label %364

306:                                              ; preds = %298
  %307 = load i32, i32* %260, align 8
  switch i32 %307, label %327 [
    i32 1, label %308
    i32 2, label %313
  ]

308:                                              ; preds = %306
  %309 = getelementptr inbounds %"class.v8::internal::wasm::AsmJsParser", %"class.v8::internal::wasm::AsmJsParser"* %0, i64 0, i32 3
  %310 = load %"class.v8::internal::wasm::WasmFunctionBuilder"*, %"class.v8::internal::wasm::WasmFunctionBuilder"** %309, align 8
  %311 = getelementptr inbounds %"struct.v8::internal::wasm::AsmJsParser::VarInfo", %"struct.v8::internal::wasm::AsmJsParser::VarInfo"* %254, i64 %206, i32 4
  %312 = load i32, i32* %311, align 4
  tail call void @_ZN2v88internal4wasm19WasmFunctionBuilder12EmitTeeLocalEj(%"class.v8::internal::wasm::WasmFunctionBuilder"* %310, i32 %312) #12
  br label %364

313:                                              ; preds = %306
  %314 = getelementptr inbounds %"class.v8::internal::wasm::AsmJsParser", %"class.v8::internal::wasm::AsmJsParser"* %0, i64 0, i32 3
  %315 = load %"class.v8::internal::wasm::WasmFunctionBuilder"*, %"class.v8::internal::wasm::WasmFunctionBuilder"** %314, align 8
  %316 = getelementptr inbounds %"struct.v8::internal::wasm::AsmJsParser::VarInfo", %"struct.v8::internal::wasm::AsmJsParser::VarInfo"* %254, i64 %206, i32 4
  %317 = load i32, i32* %316, align 4
  %318 = getelementptr inbounds %"class.v8::internal::wasm::AsmJsParser", %"class.v8::internal::wasm::AsmJsParser"* %0, i64 0, i32 41, i32 0, i32 0, i32 1, i32 0, i32 0
  %319 = load i64, i64* %318, align 8
  %320 = trunc i64 %319 to i32
  %321 = add i32 %317, %320
  tail call void @_ZN2v88internal4wasm19WasmFunctionBuilder12EmitWithU32VENS1_10WasmOpcodeEj(%"class.v8::internal::wasm::WasmFunctionBuilder"* %315, i32 36, i32 %321) #12
  %322 = load %"class.v8::internal::wasm::WasmFunctionBuilder"*, %"class.v8::internal::wasm::WasmFunctionBuilder"** %314, align 8
  %323 = load i32, i32* %316, align 4
  %324 = load i64, i64* %318, align 8
  %325 = trunc i64 %324 to i32
  %326 = add i32 %323, %325
  tail call void @_ZN2v88internal4wasm19WasmFunctionBuilder12EmitWithU32VENS1_10WasmOpcodeEj(%"class.v8::internal::wasm::WasmFunctionBuilder"* %322, i32 35, i32 %326) #12
  br label %364

327:                                              ; preds = %306
  tail call void (i8*, ...) @_Z8V8_FatalPKcz(i8* getelementptr inbounds ([17 x i8], [17 x i8]* @.str, i64 0, i64 0)) #13
  unreachable

328:                                              ; preds = %253
  tail call void @_ZN2v88internal12AsmJsScanner6RewindEv(%"class.v8::internal::AsmJsScanner"* %2) #12
  %329 = tail call i64 @_ZN2v88internal23GetCurrentStackPositionEv() #12
  %330 = getelementptr inbounds %"class.v8::internal::wasm::AsmJsParser", %"class.v8::internal::wasm::AsmJsParser"* %0, i64 0, i32 5
  %331 = load i64, i64* %330, align 8
  %332 = icmp ult i64 %329, %331
  br i1 %332, label %333, label %340

333:                                              ; preds = %328
  %334 = getelementptr inbounds %"class.v8::internal::wasm::AsmJsParser", %"class.v8::internal::wasm::AsmJsParser"* %0, i64 0, i32 17
  store i8 1, i8* %334, align 4
  %335 = getelementptr inbounds %"class.v8::internal::wasm::AsmJsParser", %"class.v8::internal::wasm::AsmJsParser"* %0, i64 0, i32 18
  store i8* getelementptr inbounds ([44 x i8], [44 x i8]* @.str.2, i64 0, i64 0), i8** %335, align 8
  %336 = getelementptr inbounds %"class.v8::internal::wasm::AsmJsParser", %"class.v8::internal::wasm::AsmJsParser"* %0, i64 0, i32 1, i32 5
  %337 = load i64, i64* %336, align 8
  %338 = trunc i64 %337 to i32
  %339 = getelementptr inbounds %"class.v8::internal::wasm::AsmJsParser", %"class.v8::internal::wasm::AsmJsParser"* %0, i64 0, i32 19
  store i32 %338, i32* %339, align 8
  br label %364

340:                                              ; preds = %328
  %341 = tail call %"class.v8::internal::wasm::AsmType"* @_ZN2v88internal4wasm11AsmJsParser21ConditionalExpressionEv(%"class.v8::internal::wasm::AsmJsParser"* %0)
  %342 = getelementptr inbounds %"class.v8::internal::wasm::AsmJsParser", %"class.v8::internal::wasm::AsmJsParser"* %0, i64 0, i32 17
  %343 = load i8, i8* %342, align 4, !range !69
  %344 = icmp eq i8 %343, 0
  br i1 %344, label %362, label %364

345:                                              ; preds = %183
  %346 = tail call i64 @_ZN2v88internal23GetCurrentStackPositionEv() #12
  %347 = getelementptr inbounds %"class.v8::internal::wasm::AsmJsParser", %"class.v8::internal::wasm::AsmJsParser"* %0, i64 0, i32 5
  %348 = load i64, i64* %347, align 8
  %349 = icmp ult i64 %346, %348
  br i1 %349, label %350, label %357

350:                                              ; preds = %345
  %351 = getelementptr inbounds %"class.v8::internal::wasm::AsmJsParser", %"class.v8::internal::wasm::AsmJsParser"* %0, i64 0, i32 17
  store i8 1, i8* %351, align 4
  %352 = getelementptr inbounds %"class.v8::internal::wasm::AsmJsParser", %"class.v8::internal::wasm::AsmJsParser"* %0, i64 0, i32 18
  store i8* getelementptr inbounds ([44 x i8], [44 x i8]* @.str.2, i64 0, i64 0), i8** %352, align 8
  %353 = getelementptr inbounds %"class.v8::internal::wasm::AsmJsParser", %"class.v8::internal::wasm::AsmJsParser"* %0, i64 0, i32 1, i32 5
  %354 = load i64, i64* %353, align 8
  %355 = trunc i64 %354 to i32
  %356 = getelementptr inbounds %"class.v8::internal::wasm::AsmJsParser", %"class.v8::internal::wasm::AsmJsParser"* %0, i64 0, i32 19
  store i32 %355, i32* %356, align 8
  br label %364

357:                                              ; preds = %345
  %358 = tail call %"class.v8::internal::wasm::AsmType"* @_ZN2v88internal4wasm11AsmJsParser21ConditionalExpressionEv(%"class.v8::internal::wasm::AsmJsParser"* %0)
  %359 = getelementptr inbounds %"class.v8::internal::wasm::AsmJsParser", %"class.v8::internal::wasm::AsmJsParser"* %0, i64 0, i32 17
  %360 = load i8, i8* %359, align 4, !range !69
  %361 = icmp eq i8 %360, 0
  br i1 %361, label %362, label %364

362:                                              ; preds = %173, %357, %340, %85
  %363 = phi %"class.v8::internal::wasm::AsmType"* [ %81, %85 ], [ %341, %340 ], [ %358, %357 ], [ %138, %173 ]
  br label %364

364:                                              ; preds = %286, %300, %293, %313, %308, %333, %274, %263, %110, %116, %175, %170, %165, %160, %155, %150, %145, %140, %104, %357, %80, %340, %362, %350, %92, %73
  %365 = phi %"class.v8::internal::wasm::AsmType"* [ null, %73 ], [ %363, %362 ], [ null, %92 ], [ null, %340 ], [ null, %350 ], [ null, %80 ], [ null, %357 ], [ null, %110 ], [ null, %116 ], [ %138, %175 ], [ %138, %170 ], [ %138, %165 ], [ %138, %160 ], [ %138, %155 ], [ %138, %150 ], [ %138, %145 ], [ %138, %140 ], [ null, %104 ], [ %256, %308 ], [ %256, %313 ], [ null, %293 ], [ null, %300 ], [ null, %286 ], [ null, %333 ], [ null, %274 ], [ null, %263 ]
  ret %"class.v8::internal::wasm::AsmType"* %365
}

; Function Attrs: nounwind ssp uwtable
define hidden %"class.v8::internal::wasm::AsmType"* @_ZN2v88internal4wasm11AsmJsParser14NumericLiteralEv(%"class.v8::internal::wasm::AsmJsParser"*) local_unnamed_addr #0 align 2 {
  %2 = getelementptr inbounds %"class.v8::internal::wasm::AsmJsParser", %"class.v8::internal::wasm::AsmJsParser"* %0, i64 0, i32 34
  store %"class.v8::internal::wasm::AsmType"* null, %"class.v8::internal::wasm::AsmType"** %2, align 8
  %3 = getelementptr inbounds %"class.v8::internal::wasm::AsmJsParser", %"class.v8::internal::wasm::AsmJsParser"* %0, i64 0, i32 1, i32 1
  %4 = load i32, i32* %3, align 8
  switch i32 %4, label %19 [
    i32 -4, label %5
    i32 -3, label %11
  ]

5:                                                ; preds = %1
  %6 = getelementptr inbounds %"class.v8::internal::wasm::AsmJsParser", %"class.v8::internal::wasm::AsmJsParser"* %0, i64 0, i32 1
  %7 = getelementptr inbounds %"class.v8::internal::wasm::AsmJsParser", %"class.v8::internal::wasm::AsmJsParser"* %0, i64 0, i32 1, i32 18
  %8 = load double, double* %7, align 8
  tail call void @_ZN2v88internal12AsmJsScanner4NextEv(%"class.v8::internal::AsmJsScanner"* %6) #12
  %9 = getelementptr inbounds %"class.v8::internal::wasm::AsmJsParser", %"class.v8::internal::wasm::AsmJsParser"* %0, i64 0, i32 3
  %10 = load %"class.v8::internal::wasm::WasmFunctionBuilder"*, %"class.v8::internal::wasm::WasmFunctionBuilder"** %9, align 8
  tail call void @_ZN2v88internal4wasm19WasmFunctionBuilder12EmitF64ConstEd(%"class.v8::internal::wasm::WasmFunctionBuilder"* %10, double %8) #12
  br label %26

11:                                               ; preds = %1
  %12 = getelementptr inbounds %"class.v8::internal::wasm::AsmJsParser", %"class.v8::internal::wasm::AsmJsParser"* %0, i64 0, i32 1
  %13 = getelementptr inbounds %"class.v8::internal::wasm::AsmJsParser", %"class.v8::internal::wasm::AsmJsParser"* %0, i64 0, i32 1, i32 19
  %14 = load i32, i32* %13, align 8
  tail call void @_ZN2v88internal12AsmJsScanner4NextEv(%"class.v8::internal::AsmJsScanner"* %12) #12
  %15 = icmp sgt i32 %14, -1
  %16 = getelementptr inbounds %"class.v8::internal::wasm::AsmJsParser", %"class.v8::internal::wasm::AsmJsParser"* %0, i64 0, i32 3
  %17 = load %"class.v8::internal::wasm::WasmFunctionBuilder"*, %"class.v8::internal::wasm::WasmFunctionBuilder"** %16, align 8
  tail call void @_ZN2v88internal4wasm19WasmFunctionBuilder12EmitI32ConstEi(%"class.v8::internal::wasm::WasmFunctionBuilder"* %17, i32 %14) #12
  %18 = select i1 %15, %"class.v8::internal::wasm::AsmType"* inttoptr (i64 7969 to %"class.v8::internal::wasm::AsmType"*), %"class.v8::internal::wasm::AsmType"* inttoptr (i64 2817 to %"class.v8::internal::wasm::AsmType"*)
  ret %"class.v8::internal::wasm::AsmType"* %18

19:                                               ; preds = %1
  %20 = getelementptr inbounds %"class.v8::internal::wasm::AsmJsParser", %"class.v8::internal::wasm::AsmJsParser"* %0, i64 0, i32 17
  store i8 1, i8* %20, align 4
  %21 = getelementptr inbounds %"class.v8::internal::wasm::AsmJsParser", %"class.v8::internal::wasm::AsmJsParser"* %0, i64 0, i32 18
  store i8* getelementptr inbounds ([26 x i8], [26 x i8]* @.str.57, i64 0, i64 0), i8** %21, align 8
  %22 = getelementptr inbounds %"class.v8::internal::wasm::AsmJsParser", %"class.v8::internal::wasm::AsmJsParser"* %0, i64 0, i32 1, i32 5
  %23 = load i64, i64* %22, align 8
  %24 = trunc i64 %23 to i32
  %25 = getelementptr inbounds %"class.v8::internal::wasm::AsmJsParser", %"class.v8::internal::wasm::AsmJsParser"* %0, i64 0, i32 19
  store i32 %24, i32* %25, align 8
  br label %26

26:                                               ; preds = %19, %5
  %27 = phi %"class.v8::internal::wasm::AsmType"* [ inttoptr (i64 237 to %"class.v8::internal::wasm::AsmType"*), %5 ], [ null, %19 ]
  ret %"class.v8::internal::wasm::AsmType"* %27
}

; Function Attrs: nounwind ssp uwtable
define hidden %"class.v8::internal::wasm::AsmType"* @_ZN2v88internal4wasm11AsmJsParser10IdentifierEv(%"class.v8::internal::wasm::AsmJsParser"*) local_unnamed_addr #0 align 2 {
  %2 = getelementptr inbounds %"class.v8::internal::wasm::AsmJsParser", %"class.v8::internal::wasm::AsmJsParser"* %0, i64 0, i32 34
  store %"class.v8::internal::wasm::AsmType"* null, %"class.v8::internal::wasm::AsmType"** %2, align 8
  %3 = getelementptr inbounds %"class.v8::internal::wasm::AsmJsParser", %"class.v8::internal::wasm::AsmJsParser"* %0, i64 0, i32 1
  %4 = getelementptr inbounds %"class.v8::internal::wasm::AsmJsParser", %"class.v8::internal::wasm::AsmJsParser"* %0, i64 0, i32 1, i32 1
  %5 = load i32, i32* %4, align 8
  %6 = icmp slt i32 %5, -9999
  br i1 %6, label %7, label %78

7:                                                ; preds = %1
  tail call void @_ZN2v88internal12AsmJsScanner4NextEv(%"class.v8::internal::AsmJsScanner"* %3) #12
  %8 = getelementptr inbounds %"class.v8::internal::wasm::AsmJsParser", %"class.v8::internal::wasm::AsmJsParser"* %0, i64 0, i32 8
  %9 = getelementptr inbounds %"class.v8::internal::wasm::AsmJsParser", %"class.v8::internal::wasm::AsmJsParser"* %0, i64 0, i32 8, i32 1
  %10 = load i64, i64* %9, align 8
  %11 = sub nuw nsw i32 -10000, %5
  %12 = sext i32 %11 to i64
  %13 = add nuw nsw i64 %12, 1
  %14 = icmp ugt i64 %10, %12
  br i1 %14, label %15, label %18

15:                                               ; preds = %7
  %16 = getelementptr inbounds %"class.v8::internal::Vector.160", %"class.v8::internal::Vector.160"* %8, i64 0, i32 0
  %17 = load %"struct.v8::internal::wasm::AsmJsParser::VarInfo"*, %"struct.v8::internal::wasm::AsmJsParser::VarInfo"** %16, align 8
  br label %59

18:                                               ; preds = %7
  %19 = shl i64 %10, 1
  %20 = icmp ult i64 %19, %13
  %21 = select i1 %20, i64 %13, i64 %19
  %22 = getelementptr inbounds %"class.v8::internal::wasm::AsmJsParser", %"class.v8::internal::wasm::AsmJsParser"* %0, i64 0, i32 0
  %23 = load %"class.v8::internal::Zone"*, %"class.v8::internal::Zone"** %22, align 8
  %24 = mul i64 %21, 40
  %25 = getelementptr inbounds %"class.v8::internal::Zone", %"class.v8::internal::Zone"* %23, i64 0, i32 2
  %26 = load i64, i64* %25, align 8
  %27 = getelementptr inbounds %"class.v8::internal::Zone", %"class.v8::internal::Zone"* %23, i64 0, i32 3
  %28 = load i64, i64* %27, align 8
  %29 = sub i64 %28, %26
  %30 = icmp ugt i64 %24, %29
  br i1 %30, label %31, label %33, !prof !2

31:                                               ; preds = %18
  %32 = tail call i64 @_ZN2v88internal4Zone9NewExpandEm(%"class.v8::internal::Zone"* %23, i64 %24) #12
  br label %35

33:                                               ; preds = %18
  %34 = add i64 %26, %24
  store i64 %34, i64* %25, align 8
  br label %35

35:                                               ; preds = %33, %31
  %36 = phi i64 [ %32, %31 ], [ %26, %33 ]
  %37 = inttoptr i64 %36 to %"struct.v8::internal::wasm::AsmJsParser::VarInfo"*
  %38 = getelementptr inbounds %"struct.v8::internal::wasm::AsmJsParser::VarInfo", %"struct.v8::internal::wasm::AsmJsParser::VarInfo"* %37, i64 %21
  %39 = icmp eq i64 %21, 0
  br i1 %39, label %49, label %40

40:                                               ; preds = %35, %40
  %41 = phi %"struct.v8::internal::wasm::AsmJsParser::VarInfo"* [ %47, %40 ], [ %37, %35 ]
  %42 = getelementptr inbounds %"struct.v8::internal::wasm::AsmJsParser::VarInfo", %"struct.v8::internal::wasm::AsmJsParser::VarInfo"* %41, i64 0, i32 0
  store %"class.v8::internal::wasm::AsmType"* inttoptr (i64 2147483649 to %"class.v8::internal::wasm::AsmType"*), %"class.v8::internal::wasm::AsmType"** %42, align 8
  %43 = getelementptr inbounds %"struct.v8::internal::wasm::AsmJsParser::VarInfo", %"struct.v8::internal::wasm::AsmJsParser::VarInfo"* %41, i64 0, i32 1
  %44 = getelementptr inbounds %"struct.v8::internal::wasm::AsmJsParser::VarInfo", %"struct.v8::internal::wasm::AsmJsParser::VarInfo"* %41, i64 0, i32 6
  %45 = bitcast %"class.v8::internal::wasm::WasmFunctionBuilder"** %43 to i8*
  tail call void @llvm.memset.p0i8.i64(i8* align 8 %45, i8 0, i64 28, i1 false) #12
  store i8 1, i8* %44, align 4
  %46 = getelementptr inbounds %"struct.v8::internal::wasm::AsmJsParser::VarInfo", %"struct.v8::internal::wasm::AsmJsParser::VarInfo"* %41, i64 0, i32 7
  store i8 0, i8* %46, align 1
  %47 = getelementptr inbounds %"struct.v8::internal::wasm::AsmJsParser::VarInfo", %"struct.v8::internal::wasm::AsmJsParser::VarInfo"* %41, i64 1
  %48 = icmp eq %"struct.v8::internal::wasm::AsmJsParser::VarInfo"* %47, %38
  br i1 %48, label %49, label %40

49:                                               ; preds = %40, %35
  %50 = getelementptr inbounds %"class.v8::internal::Vector.160", %"class.v8::internal::Vector.160"* %8, i64 0, i32 0
  %51 = load i64, i64* %9, align 8
  %52 = mul nuw i64 %51, 40
  %53 = icmp eq i64 %52, 0
  br i1 %53, label %58, label %54

54:                                               ; preds = %49
  %55 = bitcast %"class.v8::internal::Vector.160"* %8 to i8**
  %56 = load i8*, i8** %55, align 8
  %57 = inttoptr i64 %36 to i8*
  tail call void @llvm.memmove.p0i8.p0i8.i64(i8* align 8 %57, i8* align 8 %56, i64 %52, i1 false) #12
  br label %58

58:                                               ; preds = %54, %49
  store %"struct.v8::internal::wasm::AsmJsParser::VarInfo"* %37, %"struct.v8::internal::wasm::AsmJsParser::VarInfo"** %50, align 8
  store i64 %21, i64* %9, align 8
  br label %59

59:                                               ; preds = %15, %58
  %60 = phi %"struct.v8::internal::wasm::AsmJsParser::VarInfo"* [ %17, %15 ], [ %37, %58 ]
  %61 = getelementptr inbounds %"struct.v8::internal::wasm::AsmJsParser::VarInfo", %"struct.v8::internal::wasm::AsmJsParser::VarInfo"* %60, i64 %12, i32 5
  %62 = load i32, i32* %61, align 8
  %63 = icmp eq i32 %62, 1
  br i1 %63, label %71, label %64

64:                                               ; preds = %59
  %65 = getelementptr inbounds %"class.v8::internal::wasm::AsmJsParser", %"class.v8::internal::wasm::AsmJsParser"* %0, i64 0, i32 17
  store i8 1, i8* %65, align 4
  %66 = getelementptr inbounds %"class.v8::internal::wasm::AsmJsParser", %"class.v8::internal::wasm::AsmJsParser"* %0, i64 0, i32 18
  store i8* getelementptr inbounds ([25 x i8], [25 x i8]* @.str.58, i64 0, i64 0), i8** %66, align 8
  %67 = getelementptr inbounds %"class.v8::internal::wasm::AsmJsParser", %"class.v8::internal::wasm::AsmJsParser"* %0, i64 0, i32 1, i32 5
  %68 = load i64, i64* %67, align 8
  %69 = trunc i64 %68 to i32
  %70 = getelementptr inbounds %"class.v8::internal::wasm::AsmJsParser", %"class.v8::internal::wasm::AsmJsParser"* %0, i64 0, i32 19
  store i32 %69, i32* %70, align 8
  br label %162

71:                                               ; preds = %59
  %72 = getelementptr inbounds %"class.v8::internal::wasm::AsmJsParser", %"class.v8::internal::wasm::AsmJsParser"* %0, i64 0, i32 3
  %73 = load %"class.v8::internal::wasm::WasmFunctionBuilder"*, %"class.v8::internal::wasm::WasmFunctionBuilder"** %72, align 8
  %74 = getelementptr inbounds %"struct.v8::internal::wasm::AsmJsParser::VarInfo", %"struct.v8::internal::wasm::AsmJsParser::VarInfo"* %60, i64 %12, i32 4
  %75 = load i32, i32* %74, align 4
  tail call void @_ZN2v88internal4wasm19WasmFunctionBuilder12EmitGetLocalEj(%"class.v8::internal::wasm::WasmFunctionBuilder"* %73, i32 %75) #12
  %76 = getelementptr inbounds %"struct.v8::internal::wasm::AsmJsParser::VarInfo", %"struct.v8::internal::wasm::AsmJsParser::VarInfo"* %60, i64 %12, i32 0
  %77 = load %"class.v8::internal::wasm::AsmType"*, %"class.v8::internal::wasm::AsmType"** %76, align 8
  br label %162

78:                                               ; preds = %1
  %79 = icmp sgt i32 %5, 255
  br i1 %79, label %80, label %161

80:                                               ; preds = %78
  tail call void @_ZN2v88internal12AsmJsScanner4NextEv(%"class.v8::internal::AsmJsScanner"* %3) #12
  %81 = getelementptr inbounds %"class.v8::internal::wasm::AsmJsParser", %"class.v8::internal::wasm::AsmJsParser"* %0, i64 0, i32 7
  %82 = getelementptr inbounds %"class.v8::internal::wasm::AsmJsParser", %"class.v8::internal::wasm::AsmJsParser"* %0, i64 0, i32 7, i32 1
  %83 = load i64, i64* %82, align 8
  %84 = add nsw i32 %5, -256
  %85 = sext i32 %84 to i64
  %86 = getelementptr inbounds %"class.v8::internal::wasm::AsmJsParser", %"class.v8::internal::wasm::AsmJsParser"* %0, i64 0, i32 9
  %87 = load i64, i64* %86, align 8
  %88 = icmp ugt i64 %87, %85
  br i1 %88, label %91, label %89

89:                                               ; preds = %80
  %90 = add nuw nsw i64 %85, 1
  store i64 %90, i64* %86, align 8
  br label %91

91:                                               ; preds = %89, %80
  %92 = add nuw nsw i64 %85, 1
  %93 = icmp ugt i64 %83, %85
  br i1 %93, label %94, label %97

94:                                               ; preds = %91
  %95 = getelementptr inbounds %"class.v8::internal::Vector.160", %"class.v8::internal::Vector.160"* %81, i64 0, i32 0
  %96 = load %"struct.v8::internal::wasm::AsmJsParser::VarInfo"*, %"struct.v8::internal::wasm::AsmJsParser::VarInfo"** %95, align 8
  br label %138

97:                                               ; preds = %91
  %98 = shl i64 %83, 1
  %99 = icmp ult i64 %98, %92
  %100 = select i1 %99, i64 %92, i64 %98
  %101 = getelementptr inbounds %"class.v8::internal::wasm::AsmJsParser", %"class.v8::internal::wasm::AsmJsParser"* %0, i64 0, i32 0
  %102 = load %"class.v8::internal::Zone"*, %"class.v8::internal::Zone"** %101, align 8
  %103 = mul i64 %100, 40
  %104 = getelementptr inbounds %"class.v8::internal::Zone", %"class.v8::internal::Zone"* %102, i64 0, i32 2
  %105 = load i64, i64* %104, align 8
  %106 = getelementptr inbounds %"class.v8::internal::Zone", %"class.v8::internal::Zone"* %102, i64 0, i32 3
  %107 = load i64, i64* %106, align 8
  %108 = sub i64 %107, %105
  %109 = icmp ugt i64 %103, %108
  br i1 %109, label %110, label %112, !prof !2

110:                                              ; preds = %97
  %111 = tail call i64 @_ZN2v88internal4Zone9NewExpandEm(%"class.v8::internal::Zone"* %102, i64 %103) #12
  br label %114

112:                                              ; preds = %97
  %113 = add i64 %105, %103
  store i64 %113, i64* %104, align 8
  br label %114

114:                                              ; preds = %112, %110
  %115 = phi i64 [ %111, %110 ], [ %105, %112 ]
  %116 = inttoptr i64 %115 to %"struct.v8::internal::wasm::AsmJsParser::VarInfo"*
  %117 = getelementptr inbounds %"struct.v8::internal::wasm::AsmJsParser::VarInfo", %"struct.v8::internal::wasm::AsmJsParser::VarInfo"* %116, i64 %100
  %118 = icmp eq i64 %100, 0
  br i1 %118, label %128, label %119

119:                                              ; preds = %114, %119
  %120 = phi %"struct.v8::internal::wasm::AsmJsParser::VarInfo"* [ %126, %119 ], [ %116, %114 ]
  %121 = getelementptr inbounds %"struct.v8::internal::wasm::AsmJsParser::VarInfo", %"struct.v8::internal::wasm::AsmJsParser::VarInfo"* %120, i64 0, i32 0
  store %"class.v8::internal::wasm::AsmType"* inttoptr (i64 2147483649 to %"class.v8::internal::wasm::AsmType"*), %"class.v8::internal::wasm::AsmType"** %121, align 8
  %122 = getelementptr inbounds %"struct.v8::internal::wasm::AsmJsParser::VarInfo", %"struct.v8::internal::wasm::AsmJsParser::VarInfo"* %120, i64 0, i32 1
  %123 = getelementptr inbounds %"struct.v8::internal::wasm::AsmJsParser::VarInfo", %"struct.v8::internal::wasm::AsmJsParser::VarInfo"* %120, i64 0, i32 6
  %124 = bitcast %"class.v8::internal::wasm::WasmFunctionBuilder"** %122 to i8*
  tail call void @llvm.memset.p0i8.i64(i8* align 8 %124, i8 0, i64 28, i1 false) #12
  store i8 1, i8* %123, align 4
  %125 = getelementptr inbounds %"struct.v8::internal::wasm::AsmJsParser::VarInfo", %"struct.v8::internal::wasm::AsmJsParser::VarInfo"* %120, i64 0, i32 7
  store i8 0, i8* %125, align 1
  %126 = getelementptr inbounds %"struct.v8::internal::wasm::AsmJsParser::VarInfo", %"struct.v8::internal::wasm::AsmJsParser::VarInfo"* %120, i64 1
  %127 = icmp eq %"struct.v8::internal::wasm::AsmJsParser::VarInfo"* %126, %117
  br i1 %127, label %128, label %119

128:                                              ; preds = %119, %114
  %129 = getelementptr inbounds %"class.v8::internal::Vector.160", %"class.v8::internal::Vector.160"* %81, i64 0, i32 0
  %130 = load i64, i64* %82, align 8
  %131 = mul nuw i64 %130, 40
  %132 = icmp eq i64 %131, 0
  br i1 %132, label %137, label %133

133:                                              ; preds = %128
  %134 = bitcast %"class.v8::internal::Vector.160"* %81 to i8**
  %135 = load i8*, i8** %134, align 8
  %136 = inttoptr i64 %115 to i8*
  tail call void @llvm.memmove.p0i8.p0i8.i64(i8* align 8 %136, i8* align 8 %135, i64 %131, i1 false) #12
  br label %137

137:                                              ; preds = %133, %128
  store %"struct.v8::internal::wasm::AsmJsParser::VarInfo"* %116, %"struct.v8::internal::wasm::AsmJsParser::VarInfo"** %129, align 8
  store i64 %100, i64* %82, align 8
  br label %138

138:                                              ; preds = %94, %137
  %139 = phi %"struct.v8::internal::wasm::AsmJsParser::VarInfo"* [ %96, %94 ], [ %116, %137 ]
  %140 = getelementptr inbounds %"struct.v8::internal::wasm::AsmJsParser::VarInfo", %"struct.v8::internal::wasm::AsmJsParser::VarInfo"* %139, i64 %85, i32 5
  %141 = load i32, i32* %140, align 8
  %142 = icmp eq i32 %141, 2
  br i1 %142, label %150, label %143

143:                                              ; preds = %138
  %144 = getelementptr inbounds %"class.v8::internal::wasm::AsmJsParser", %"class.v8::internal::wasm::AsmJsParser"* %0, i64 0, i32 17
  store i8 1, i8* %144, align 4
  %145 = getelementptr inbounds %"class.v8::internal::wasm::AsmJsParser", %"class.v8::internal::wasm::AsmJsParser"* %0, i64 0, i32 18
  store i8* getelementptr inbounds ([26 x i8], [26 x i8]* @.str.59, i64 0, i64 0), i8** %145, align 8
  %146 = getelementptr inbounds %"class.v8::internal::wasm::AsmJsParser", %"class.v8::internal::wasm::AsmJsParser"* %0, i64 0, i32 1, i32 5
  %147 = load i64, i64* %146, align 8
  %148 = trunc i64 %147 to i32
  %149 = getelementptr inbounds %"class.v8::internal::wasm::AsmJsParser", %"class.v8::internal::wasm::AsmJsParser"* %0, i64 0, i32 19
  store i32 %148, i32* %149, align 8
  br label %162

150:                                              ; preds = %138
  %151 = getelementptr inbounds %"class.v8::internal::wasm::AsmJsParser", %"class.v8::internal::wasm::AsmJsParser"* %0, i64 0, i32 3
  %152 = load %"class.v8::internal::wasm::WasmFunctionBuilder"*, %"class.v8::internal::wasm::WasmFunctionBuilder"** %151, align 8
  %153 = getelementptr inbounds %"struct.v8::internal::wasm::AsmJsParser::VarInfo", %"struct.v8::internal::wasm::AsmJsParser::VarInfo"* %139, i64 %85, i32 4
  %154 = load i32, i32* %153, align 4
  %155 = getelementptr inbounds %"class.v8::internal::wasm::AsmJsParser", %"class.v8::internal::wasm::AsmJsParser"* %0, i64 0, i32 41, i32 0, i32 0, i32 1, i32 0, i32 0
  %156 = load i64, i64* %155, align 8
  %157 = trunc i64 %156 to i32
  %158 = add i32 %154, %157
  tail call void @_ZN2v88internal4wasm19WasmFunctionBuilder12EmitWithI32VENS1_10WasmOpcodeEi(%"class.v8::internal::wasm::WasmFunctionBuilder"* %152, i32 35, i32 %158) #12
  %159 = getelementptr inbounds %"struct.v8::internal::wasm::AsmJsParser::VarInfo", %"struct.v8::internal::wasm::AsmJsParser::VarInfo"* %139, i64 %85, i32 0
  %160 = load %"class.v8::internal::wasm::AsmType"*, %"class.v8::internal::wasm::AsmType"** %159, align 8
  br label %162

161:                                              ; preds = %78
  tail call void (i8*, ...) @_Z8V8_FatalPKcz(i8* getelementptr inbounds ([17 x i8], [17 x i8]* @.str, i64 0, i64 0)) #13
  unreachable

162:                                              ; preds = %143, %150, %64, %71
  %163 = phi %"class.v8::internal::wasm::AsmType"* [ null, %64 ], [ %77, %71 ], [ null, %143 ], [ %160, %150 ]
  ret %"class.v8::internal::wasm::AsmType"* %163
}

; Function Attrs: nounwind ssp uwtable
define hidden %"class.v8::internal::wasm::AsmType"* @_ZN2v88internal4wasm11AsmJsParser14CallExpressionEv(%"class.v8::internal::wasm::AsmJsParser"*) local_unnamed_addr #0 align 2 {
  %2 = getelementptr inbounds %"class.v8::internal::wasm::AsmJsParser", %"class.v8::internal::wasm::AsmJsParser"* %0, i64 0, i32 1
  %3 = getelementptr inbounds %"class.v8::internal::wasm::AsmJsParser", %"class.v8::internal::wasm::AsmJsParser"* %0, i64 0, i32 1, i32 1
  %4 = load i32, i32* %3, align 8
  %5 = icmp sgt i32 %4, 255
  br i1 %5, label %6, label %152

6:                                                ; preds = %1
  %7 = getelementptr inbounds %"class.v8::internal::wasm::AsmJsParser", %"class.v8::internal::wasm::AsmJsParser"* %0, i64 0, i32 7
  %8 = getelementptr inbounds %"class.v8::internal::wasm::AsmJsParser", %"class.v8::internal::wasm::AsmJsParser"* %0, i64 0, i32 7, i32 1
  %9 = load i64, i64* %8, align 8
  %10 = add nsw i32 %4, -256
  %11 = sext i32 %10 to i64
  %12 = getelementptr inbounds %"class.v8::internal::wasm::AsmJsParser", %"class.v8::internal::wasm::AsmJsParser"* %0, i64 0, i32 9
  %13 = load i64, i64* %12, align 8
  %14 = icmp ugt i64 %13, %11
  %15 = add nuw nsw i64 %11, 1
  br i1 %14, label %17, label %16

16:                                               ; preds = %6
  store i64 %15, i64* %12, align 8
  br label %17

17:                                               ; preds = %6, %16
  %18 = icmp ugt i64 %9, %11
  br i1 %18, label %19, label %22

19:                                               ; preds = %17
  %20 = getelementptr inbounds %"class.v8::internal::Vector.160", %"class.v8::internal::Vector.160"* %7, i64 0, i32 0
  %21 = load %"struct.v8::internal::wasm::AsmJsParser::VarInfo"*, %"struct.v8::internal::wasm::AsmJsParser::VarInfo"** %20, align 8
  br label %63

22:                                               ; preds = %17
  %23 = shl i64 %9, 1
  %24 = icmp ult i64 %23, %15
  %25 = select i1 %24, i64 %15, i64 %23
  %26 = getelementptr inbounds %"class.v8::internal::wasm::AsmJsParser", %"class.v8::internal::wasm::AsmJsParser"* %0, i64 0, i32 0
  %27 = load %"class.v8::internal::Zone"*, %"class.v8::internal::Zone"** %26, align 8
  %28 = mul i64 %25, 40
  %29 = getelementptr inbounds %"class.v8::internal::Zone", %"class.v8::internal::Zone"* %27, i64 0, i32 2
  %30 = load i64, i64* %29, align 8
  %31 = getelementptr inbounds %"class.v8::internal::Zone", %"class.v8::internal::Zone"* %27, i64 0, i32 3
  %32 = load i64, i64* %31, align 8
  %33 = sub i64 %32, %30
  %34 = icmp ugt i64 %28, %33
  br i1 %34, label %35, label %37, !prof !2

35:                                               ; preds = %22
  %36 = tail call i64 @_ZN2v88internal4Zone9NewExpandEm(%"class.v8::internal::Zone"* %27, i64 %28) #12
  br label %39

37:                                               ; preds = %22
  %38 = add i64 %30, %28
  store i64 %38, i64* %29, align 8
  br label %39

39:                                               ; preds = %37, %35
  %40 = phi i64 [ %36, %35 ], [ %30, %37 ]
  %41 = inttoptr i64 %40 to %"struct.v8::internal::wasm::AsmJsParser::VarInfo"*
  %42 = getelementptr inbounds %"struct.v8::internal::wasm::AsmJsParser::VarInfo", %"struct.v8::internal::wasm::AsmJsParser::VarInfo"* %41, i64 %25
  %43 = icmp eq i64 %25, 0
  br i1 %43, label %53, label %44

44:                                               ; preds = %39, %44
  %45 = phi %"struct.v8::internal::wasm::AsmJsParser::VarInfo"* [ %51, %44 ], [ %41, %39 ]
  %46 = getelementptr inbounds %"struct.v8::internal::wasm::AsmJsParser::VarInfo", %"struct.v8::internal::wasm::AsmJsParser::VarInfo"* %45, i64 0, i32 0
  store %"class.v8::internal::wasm::AsmType"* inttoptr (i64 2147483649 to %"class.v8::internal::wasm::AsmType"*), %"class.v8::internal::wasm::AsmType"** %46, align 8
  %47 = getelementptr inbounds %"struct.v8::internal::wasm::AsmJsParser::VarInfo", %"struct.v8::internal::wasm::AsmJsParser::VarInfo"* %45, i64 0, i32 1
  %48 = getelementptr inbounds %"struct.v8::internal::wasm::AsmJsParser::VarInfo", %"struct.v8::internal::wasm::AsmJsParser::VarInfo"* %45, i64 0, i32 6
  %49 = bitcast %"class.v8::internal::wasm::WasmFunctionBuilder"** %47 to i8*
  tail call void @llvm.memset.p0i8.i64(i8* align 8 %49, i8 0, i64 28, i1 false) #12
  store i8 1, i8* %48, align 4
  %50 = getelementptr inbounds %"struct.v8::internal::wasm::AsmJsParser::VarInfo", %"struct.v8::internal::wasm::AsmJsParser::VarInfo"* %45, i64 0, i32 7
  store i8 0, i8* %50, align 1
  %51 = getelementptr inbounds %"struct.v8::internal::wasm::AsmJsParser::VarInfo", %"struct.v8::internal::wasm::AsmJsParser::VarInfo"* %45, i64 1
  %52 = icmp eq %"struct.v8::internal::wasm::AsmJsParser::VarInfo"* %51, %42
  br i1 %52, label %53, label %44

53:                                               ; preds = %44, %39
  %54 = getelementptr inbounds %"class.v8::internal::Vector.160", %"class.v8::internal::Vector.160"* %7, i64 0, i32 0
  %55 = load i64, i64* %8, align 8
  %56 = mul nuw i64 %55, 40
  %57 = icmp eq i64 %56, 0
  br i1 %57, label %62, label %58

58:                                               ; preds = %53
  %59 = bitcast %"class.v8::internal::Vector.160"* %7 to i8**
  %60 = load i8*, i8** %59, align 8
  %61 = inttoptr i64 %40 to i8*
  tail call void @llvm.memmove.p0i8.p0i8.i64(i8* align 8 %61, i8* align 8 %60, i64 %56, i1 false) #12
  br label %62

62:                                               ; preds = %58, %53
  store %"struct.v8::internal::wasm::AsmJsParser::VarInfo"* %41, %"struct.v8::internal::wasm::AsmJsParser::VarInfo"** %54, align 8
  store i64 %25, i64* %8, align 8
  br label %63

63:                                               ; preds = %19, %62
  %64 = phi %"struct.v8::internal::wasm::AsmJsParser::VarInfo"* [ %21, %19 ], [ %41, %62 ]
  %65 = getelementptr inbounds %"struct.v8::internal::wasm::AsmJsParser::VarInfo", %"struct.v8::internal::wasm::AsmJsParser::VarInfo"* %64, i64 %11, i32 0
  %66 = load %"class.v8::internal::wasm::AsmType"*, %"class.v8::internal::wasm::AsmType"** %65, align 8
  %67 = getelementptr inbounds %"class.v8::internal::wasm::AsmJsParser", %"class.v8::internal::wasm::AsmJsParser"* %0, i64 0, i32 33
  %68 = load %"class.v8::internal::wasm::AsmType"*, %"class.v8::internal::wasm::AsmType"** %67, align 8
  %69 = tail call zeroext i1 @_ZN2v88internal4wasm7AsmType3IsAEPS2_(%"class.v8::internal::wasm::AsmType"* %66, %"class.v8::internal::wasm::AsmType"* %68) #12
  br i1 %69, label %70, label %71

70:                                               ; preds = %63
  tail call void @_ZN2v88internal4wasm11AsmJsParser21ValidateFloatCoercionEv(%"class.v8::internal::wasm::AsmJsParser"* %0)
  br label %283

71:                                               ; preds = %63
  %72 = load i32, i32* %3, align 8
  %73 = icmp sgt i32 %72, 255
  br i1 %73, label %74, label %152

74:                                               ; preds = %71
  %75 = load i64, i64* %8, align 8
  %76 = add nsw i32 %72, -256
  %77 = sext i32 %76 to i64
  %78 = load i64, i64* %12, align 8
  %79 = icmp ugt i64 %78, %77
  %80 = add nuw nsw i64 %77, 1
  br i1 %79, label %82, label %81

81:                                               ; preds = %74
  store i64 %80, i64* %12, align 8
  br label %82

82:                                               ; preds = %74, %81
  %83 = icmp ugt i64 %75, %77
  br i1 %83, label %84, label %87

84:                                               ; preds = %82
  %85 = getelementptr inbounds %"class.v8::internal::Vector.160", %"class.v8::internal::Vector.160"* %7, i64 0, i32 0
  %86 = load %"struct.v8::internal::wasm::AsmJsParser::VarInfo"*, %"struct.v8::internal::wasm::AsmJsParser::VarInfo"** %85, align 8
  br label %128

87:                                               ; preds = %82
  %88 = shl i64 %75, 1
  %89 = icmp ult i64 %88, %80
  %90 = select i1 %89, i64 %80, i64 %88
  %91 = getelementptr inbounds %"class.v8::internal::wasm::AsmJsParser", %"class.v8::internal::wasm::AsmJsParser"* %0, i64 0, i32 0
  %92 = load %"class.v8::internal::Zone"*, %"class.v8::internal::Zone"** %91, align 8
  %93 = mul i64 %90, 40
  %94 = getelementptr inbounds %"class.v8::internal::Zone", %"class.v8::internal::Zone"* %92, i64 0, i32 2
  %95 = load i64, i64* %94, align 8
  %96 = getelementptr inbounds %"class.v8::internal::Zone", %"class.v8::internal::Zone"* %92, i64 0, i32 3
  %97 = load i64, i64* %96, align 8
  %98 = sub i64 %97, %95
  %99 = icmp ugt i64 %93, %98
  br i1 %99, label %100, label %102, !prof !2

100:                                              ; preds = %87
  %101 = tail call i64 @_ZN2v88internal4Zone9NewExpandEm(%"class.v8::internal::Zone"* %92, i64 %93) #12
  br label %104

102:                                              ; preds = %87
  %103 = add i64 %95, %93
  store i64 %103, i64* %94, align 8
  br label %104

104:                                              ; preds = %102, %100
  %105 = phi i64 [ %101, %100 ], [ %95, %102 ]
  %106 = inttoptr i64 %105 to %"struct.v8::internal::wasm::AsmJsParser::VarInfo"*
  %107 = getelementptr inbounds %"struct.v8::internal::wasm::AsmJsParser::VarInfo", %"struct.v8::internal::wasm::AsmJsParser::VarInfo"* %106, i64 %90
  %108 = icmp eq i64 %90, 0
  br i1 %108, label %118, label %109

109:                                              ; preds = %104, %109
  %110 = phi %"struct.v8::internal::wasm::AsmJsParser::VarInfo"* [ %116, %109 ], [ %106, %104 ]
  %111 = getelementptr inbounds %"struct.v8::internal::wasm::AsmJsParser::VarInfo", %"struct.v8::internal::wasm::AsmJsParser::VarInfo"* %110, i64 0, i32 0
  store %"class.v8::internal::wasm::AsmType"* inttoptr (i64 2147483649 to %"class.v8::internal::wasm::AsmType"*), %"class.v8::internal::wasm::AsmType"** %111, align 8
  %112 = getelementptr inbounds %"struct.v8::internal::wasm::AsmJsParser::VarInfo", %"struct.v8::internal::wasm::AsmJsParser::VarInfo"* %110, i64 0, i32 1
  %113 = getelementptr inbounds %"struct.v8::internal::wasm::AsmJsParser::VarInfo", %"struct.v8::internal::wasm::AsmJsParser::VarInfo"* %110, i64 0, i32 6
  %114 = bitcast %"class.v8::internal::wasm::WasmFunctionBuilder"** %112 to i8*
  tail call void @llvm.memset.p0i8.i64(i8* align 8 %114, i8 0, i64 28, i1 false) #12
  store i8 1, i8* %113, align 4
  %115 = getelementptr inbounds %"struct.v8::internal::wasm::AsmJsParser::VarInfo", %"struct.v8::internal::wasm::AsmJsParser::VarInfo"* %110, i64 0, i32 7
  store i8 0, i8* %115, align 1
  %116 = getelementptr inbounds %"struct.v8::internal::wasm::AsmJsParser::VarInfo", %"struct.v8::internal::wasm::AsmJsParser::VarInfo"* %110, i64 1
  %117 = icmp eq %"struct.v8::internal::wasm::AsmJsParser::VarInfo"* %116, %107
  br i1 %117, label %118, label %109

118:                                              ; preds = %109, %104
  %119 = getelementptr inbounds %"class.v8::internal::Vector.160", %"class.v8::internal::Vector.160"* %7, i64 0, i32 0
  %120 = load i64, i64* %8, align 8
  %121 = mul nuw i64 %120, 40
  %122 = icmp eq i64 %121, 0
  br i1 %122, label %127, label %123

123:                                              ; preds = %118
  %124 = bitcast %"class.v8::internal::Vector.160"* %7 to i8**
  %125 = load i8*, i8** %124, align 8
  %126 = inttoptr i64 %105 to i8*
  tail call void @llvm.memmove.p0i8.p0i8.i64(i8* align 8 %126, i8* align 8 %125, i64 %121, i1 false) #12
  br label %127

127:                                              ; preds = %123, %118
  store %"struct.v8::internal::wasm::AsmJsParser::VarInfo"* %106, %"struct.v8::internal::wasm::AsmJsParser::VarInfo"** %119, align 8
  store i64 %90, i64* %8, align 8
  br label %128

128:                                              ; preds = %84, %127
  %129 = phi %"struct.v8::internal::wasm::AsmJsParser::VarInfo"* [ %86, %84 ], [ %106, %127 ]
  %130 = getelementptr inbounds %"struct.v8::internal::wasm::AsmJsParser::VarInfo", %"struct.v8::internal::wasm::AsmJsParser::VarInfo"* %129, i64 %77, i32 0
  %131 = load %"class.v8::internal::wasm::AsmType"*, %"class.v8::internal::wasm::AsmType"** %130, align 8
  %132 = tail call zeroext i1 @_ZN2v88internal4wasm7AsmType3IsAEPS2_(%"class.v8::internal::wasm::AsmType"* %131, %"class.v8::internal::wasm::AsmType"* nonnull inttoptr (i64 3 to %"class.v8::internal::wasm::AsmType"*)) #12
  br i1 %132, label %135, label %133

133:                                              ; preds = %128
  %134 = load i32, i32* %3, align 8
  br label %152

135:                                              ; preds = %128
  %136 = tail call i64 @_ZN2v88internal23GetCurrentStackPositionEv() #12
  %137 = getelementptr inbounds %"class.v8::internal::wasm::AsmJsParser", %"class.v8::internal::wasm::AsmJsParser"* %0, i64 0, i32 5
  %138 = load i64, i64* %137, align 8
  %139 = icmp ult i64 %136, %138
  br i1 %139, label %140, label %147

140:                                              ; preds = %135
  %141 = getelementptr inbounds %"class.v8::internal::wasm::AsmJsParser", %"class.v8::internal::wasm::AsmJsParser"* %0, i64 0, i32 17
  store i8 1, i8* %141, align 4
  %142 = getelementptr inbounds %"class.v8::internal::wasm::AsmJsParser", %"class.v8::internal::wasm::AsmJsParser"* %0, i64 0, i32 18
  store i8* getelementptr inbounds ([44 x i8], [44 x i8]* @.str.2, i64 0, i64 0), i8** %142, align 8
  %143 = getelementptr inbounds %"class.v8::internal::wasm::AsmJsParser", %"class.v8::internal::wasm::AsmJsParser"* %0, i64 0, i32 1, i32 5
  %144 = load i64, i64* %143, align 8
  %145 = trunc i64 %144 to i32
  %146 = getelementptr inbounds %"class.v8::internal::wasm::AsmJsParser", %"class.v8::internal::wasm::AsmJsParser"* %0, i64 0, i32 19
  store i32 %145, i32* %146, align 8
  br label %283

147:                                              ; preds = %135
  %148 = tail call %"class.v8::internal::wasm::AsmType"* @_ZN2v88internal4wasm11AsmJsParser16MemberExpressionEv(%"class.v8::internal::wasm::AsmJsParser"* %0)
  %149 = getelementptr inbounds %"class.v8::internal::wasm::AsmJsParser", %"class.v8::internal::wasm::AsmJsParser"* %0, i64 0, i32 17
  %150 = load i8, i8* %149, align 4, !range !69
  %151 = icmp eq i8 %150, 0
  br i1 %151, label %281, label %283

152:                                              ; preds = %133, %1, %71
  %153 = phi i32 [ %134, %133 ], [ %4, %1 ], [ %72, %71 ]
  %154 = icmp eq i32 %153, 40
  br i1 %154, label %155, label %206

155:                                              ; preds = %152
  %156 = tail call i64 @_ZN2v88internal23GetCurrentStackPositionEv() #12
  %157 = getelementptr inbounds %"class.v8::internal::wasm::AsmJsParser", %"class.v8::internal::wasm::AsmJsParser"* %0, i64 0, i32 5
  %158 = load i64, i64* %157, align 8
  %159 = icmp ult i64 %156, %158
  br i1 %159, label %160, label %167

160:                                              ; preds = %155
  %161 = getelementptr inbounds %"class.v8::internal::wasm::AsmJsParser", %"class.v8::internal::wasm::AsmJsParser"* %0, i64 0, i32 17
  store i8 1, i8* %161, align 4
  %162 = getelementptr inbounds %"class.v8::internal::wasm::AsmJsParser", %"class.v8::internal::wasm::AsmJsParser"* %0, i64 0, i32 18
  store i8* getelementptr inbounds ([44 x i8], [44 x i8]* @.str.2, i64 0, i64 0), i8** %162, align 8
  %163 = getelementptr inbounds %"class.v8::internal::wasm::AsmJsParser", %"class.v8::internal::wasm::AsmJsParser"* %0, i64 0, i32 1, i32 5
  %164 = load i64, i64* %163, align 8
  %165 = trunc i64 %164 to i32
  %166 = getelementptr inbounds %"class.v8::internal::wasm::AsmJsParser", %"class.v8::internal::wasm::AsmJsParser"* %0, i64 0, i32 19
  store i32 %165, i32* %166, align 8
  br label %283

167:                                              ; preds = %155
  %168 = getelementptr inbounds %"class.v8::internal::wasm::AsmJsParser", %"class.v8::internal::wasm::AsmJsParser"* %0, i64 0, i32 34
  store %"class.v8::internal::wasm::AsmType"* null, %"class.v8::internal::wasm::AsmType"** %168, align 8
  %169 = load i32, i32* %3, align 8
  %170 = icmp eq i32 %169, 40
  br i1 %170, label %178, label %171

171:                                              ; preds = %167
  %172 = getelementptr inbounds %"class.v8::internal::wasm::AsmJsParser", %"class.v8::internal::wasm::AsmJsParser"* %0, i64 0, i32 17
  store i8 1, i8* %172, align 4
  %173 = getelementptr inbounds %"class.v8::internal::wasm::AsmJsParser", %"class.v8::internal::wasm::AsmJsParser"* %0, i64 0, i32 18
  store i8* getelementptr inbounds ([17 x i8], [17 x i8]* @.str.3, i64 0, i64 0), i8** %173, align 8
  %174 = getelementptr inbounds %"class.v8::internal::wasm::AsmJsParser", %"class.v8::internal::wasm::AsmJsParser"* %0, i64 0, i32 1, i32 5
  %175 = load i64, i64* %174, align 8
  %176 = trunc i64 %175 to i32
  %177 = getelementptr inbounds %"class.v8::internal::wasm::AsmJsParser", %"class.v8::internal::wasm::AsmJsParser"* %0, i64 0, i32 19
  store i32 %176, i32* %177, align 8
  br label %283

178:                                              ; preds = %167
  tail call void @_ZN2v88internal12AsmJsScanner4NextEv(%"class.v8::internal::AsmJsScanner"* %2) #12
  %179 = tail call i64 @_ZN2v88internal23GetCurrentStackPositionEv() #12
  %180 = load i64, i64* %157, align 8
  %181 = icmp ult i64 %179, %180
  br i1 %181, label %182, label %189

182:                                              ; preds = %178
  %183 = getelementptr inbounds %"class.v8::internal::wasm::AsmJsParser", %"class.v8::internal::wasm::AsmJsParser"* %0, i64 0, i32 17
  store i8 1, i8* %183, align 4
  %184 = getelementptr inbounds %"class.v8::internal::wasm::AsmJsParser", %"class.v8::internal::wasm::AsmJsParser"* %0, i64 0, i32 18
  store i8* getelementptr inbounds ([44 x i8], [44 x i8]* @.str.2, i64 0, i64 0), i8** %184, align 8
  %185 = getelementptr inbounds %"class.v8::internal::wasm::AsmJsParser", %"class.v8::internal::wasm::AsmJsParser"* %0, i64 0, i32 1, i32 5
  %186 = load i64, i64* %185, align 8
  %187 = trunc i64 %186 to i32
  %188 = getelementptr inbounds %"class.v8::internal::wasm::AsmJsParser", %"class.v8::internal::wasm::AsmJsParser"* %0, i64 0, i32 19
  store i32 %187, i32* %188, align 8
  br label %283

189:                                              ; preds = %178
  %190 = tail call %"class.v8::internal::wasm::AsmType"* @_ZN2v88internal4wasm11AsmJsParser10ExpressionEPNS1_7AsmTypeE(%"class.v8::internal::wasm::AsmJsParser"* %0, %"class.v8::internal::wasm::AsmType"* null) #12
  %191 = getelementptr inbounds %"class.v8::internal::wasm::AsmJsParser", %"class.v8::internal::wasm::AsmJsParser"* %0, i64 0, i32 17
  %192 = load i8, i8* %191, align 4, !range !69
  %193 = icmp eq i8 %192, 0
  br i1 %193, label %194, label %283

194:                                              ; preds = %189
  %195 = load i32, i32* %3, align 8
  %196 = icmp eq i32 %195, 41
  br i1 %196, label %203, label %197

197:                                              ; preds = %194
  store i8 1, i8* %191, align 4
  %198 = getelementptr inbounds %"class.v8::internal::wasm::AsmJsParser", %"class.v8::internal::wasm::AsmJsParser"* %0, i64 0, i32 18
  store i8* getelementptr inbounds ([17 x i8], [17 x i8]* @.str.3, i64 0, i64 0), i8** %198, align 8
  %199 = getelementptr inbounds %"class.v8::internal::wasm::AsmJsParser", %"class.v8::internal::wasm::AsmJsParser"* %0, i64 0, i32 1, i32 5
  %200 = load i64, i64* %199, align 8
  %201 = trunc i64 %200 to i32
  %202 = getelementptr inbounds %"class.v8::internal::wasm::AsmJsParser", %"class.v8::internal::wasm::AsmJsParser"* %0, i64 0, i32 19
  store i32 %201, i32* %202, align 8
  br label %283

203:                                              ; preds = %194
  tail call void @_ZN2v88internal12AsmJsScanner4NextEv(%"class.v8::internal::AsmJsScanner"* %2) #12
  %204 = load i8, i8* %191, align 4, !range !69
  %205 = icmp eq i8 %204, 0
  br i1 %205, label %281, label %283

206:                                              ; preds = %152
  %207 = tail call zeroext i1 @_ZN2v88internal4wasm11AsmJsParser8PeekCallEv(%"class.v8::internal::wasm::AsmJsParser"* %0)
  br i1 %207, label %208, label %225

208:                                              ; preds = %206
  %209 = tail call i64 @_ZN2v88internal23GetCurrentStackPositionEv() #12
  %210 = getelementptr inbounds %"class.v8::internal::wasm::AsmJsParser", %"class.v8::internal::wasm::AsmJsParser"* %0, i64 0, i32 5
  %211 = load i64, i64* %210, align 8
  %212 = icmp ult i64 %209, %211
  br i1 %212, label %213, label %220

213:                                              ; preds = %208
  %214 = getelementptr inbounds %"class.v8::internal::wasm::AsmJsParser", %"class.v8::internal::wasm::AsmJsParser"* %0, i64 0, i32 17
  store i8 1, i8* %214, align 4
  %215 = getelementptr inbounds %"class.v8::internal::wasm::AsmJsParser", %"class.v8::internal::wasm::AsmJsParser"* %0, i64 0, i32 18
  store i8* getelementptr inbounds ([44 x i8], [44 x i8]* @.str.2, i64 0, i64 0), i8** %215, align 8
  %216 = getelementptr inbounds %"class.v8::internal::wasm::AsmJsParser", %"class.v8::internal::wasm::AsmJsParser"* %0, i64 0, i32 1, i32 5
  %217 = load i64, i64* %216, align 8
  %218 = trunc i64 %217 to i32
  %219 = getelementptr inbounds %"class.v8::internal::wasm::AsmJsParser", %"class.v8::internal::wasm::AsmJsParser"* %0, i64 0, i32 19
  store i32 %218, i32* %219, align 8
  br label %283

220:                                              ; preds = %208
  %221 = tail call %"class.v8::internal::wasm::AsmType"* @_ZN2v88internal4wasm11AsmJsParser12ValidateCallEv(%"class.v8::internal::wasm::AsmJsParser"* %0)
  %222 = getelementptr inbounds %"class.v8::internal::wasm::AsmJsParser", %"class.v8::internal::wasm::AsmJsParser"* %0, i64 0, i32 17
  %223 = load i8, i8* %222, align 4, !range !69
  %224 = icmp eq i8 %223, 0
  br i1 %224, label %281, label %283

225:                                              ; preds = %206
  %226 = load i32, i32* %3, align 8
  %227 = add i32 %226, 9999
  %228 = icmp ugt i32 %227, 10254
  %229 = tail call i64 @_ZN2v88internal23GetCurrentStackPositionEv() #12
  %230 = getelementptr inbounds %"class.v8::internal::wasm::AsmJsParser", %"class.v8::internal::wasm::AsmJsParser"* %0, i64 0, i32 5
  %231 = load i64, i64* %230, align 8
  %232 = icmp ult i64 %229, %231
  br i1 %228, label %233, label %246

233:                                              ; preds = %225
  br i1 %232, label %234, label %241

234:                                              ; preds = %233
  %235 = getelementptr inbounds %"class.v8::internal::wasm::AsmJsParser", %"class.v8::internal::wasm::AsmJsParser"* %0, i64 0, i32 17
  store i8 1, i8* %235, align 4
  %236 = getelementptr inbounds %"class.v8::internal::wasm::AsmJsParser", %"class.v8::internal::wasm::AsmJsParser"* %0, i64 0, i32 18
  store i8* getelementptr inbounds ([44 x i8], [44 x i8]* @.str.2, i64 0, i64 0), i8** %236, align 8
  %237 = getelementptr inbounds %"class.v8::internal::wasm::AsmJsParser", %"class.v8::internal::wasm::AsmJsParser"* %0, i64 0, i32 1, i32 5
  %238 = load i64, i64* %237, align 8
  %239 = trunc i64 %238 to i32
  %240 = getelementptr inbounds %"class.v8::internal::wasm::AsmJsParser", %"class.v8::internal::wasm::AsmJsParser"* %0, i64 0, i32 19
  store i32 %239, i32* %240, align 8
  br label %283

241:                                              ; preds = %233
  %242 = tail call %"class.v8::internal::wasm::AsmType"* @_ZN2v88internal4wasm11AsmJsParser10IdentifierEv(%"class.v8::internal::wasm::AsmJsParser"* %0)
  %243 = getelementptr inbounds %"class.v8::internal::wasm::AsmJsParser", %"class.v8::internal::wasm::AsmJsParser"* %0, i64 0, i32 17
  %244 = load i8, i8* %243, align 4, !range !69
  %245 = icmp eq i8 %244, 0
  br i1 %245, label %281, label %283

246:                                              ; preds = %225
  br i1 %232, label %247, label %254

247:                                              ; preds = %246
  %248 = getelementptr inbounds %"class.v8::internal::wasm::AsmJsParser", %"class.v8::internal::wasm::AsmJsParser"* %0, i64 0, i32 17
  store i8 1, i8* %248, align 4
  %249 = getelementptr inbounds %"class.v8::internal::wasm::AsmJsParser", %"class.v8::internal::wasm::AsmJsParser"* %0, i64 0, i32 18
  store i8* getelementptr inbounds ([44 x i8], [44 x i8]* @.str.2, i64 0, i64 0), i8** %249, align 8
  %250 = getelementptr inbounds %"class.v8::internal::wasm::AsmJsParser", %"class.v8::internal::wasm::AsmJsParser"* %0, i64 0, i32 1, i32 5
  %251 = load i64, i64* %250, align 8
  %252 = trunc i64 %251 to i32
  %253 = getelementptr inbounds %"class.v8::internal::wasm::AsmJsParser", %"class.v8::internal::wasm::AsmJsParser"* %0, i64 0, i32 19
  store i32 %252, i32* %253, align 8
  br label %283

254:                                              ; preds = %246
  %255 = getelementptr inbounds %"class.v8::internal::wasm::AsmJsParser", %"class.v8::internal::wasm::AsmJsParser"* %0, i64 0, i32 34
  store %"class.v8::internal::wasm::AsmType"* null, %"class.v8::internal::wasm::AsmType"** %255, align 8
  %256 = load i32, i32* %3, align 8
  switch i32 %256, label %269 [
    i32 -4, label %257
    i32 -3, label %262
  ]

257:                                              ; preds = %254
  %258 = getelementptr inbounds %"class.v8::internal::wasm::AsmJsParser", %"class.v8::internal::wasm::AsmJsParser"* %0, i64 0, i32 1, i32 18
  %259 = load double, double* %258, align 8
  tail call void @_ZN2v88internal12AsmJsScanner4NextEv(%"class.v8::internal::AsmJsScanner"* %2) #12
  %260 = getelementptr inbounds %"class.v8::internal::wasm::AsmJsParser", %"class.v8::internal::wasm::AsmJsParser"* %0, i64 0, i32 3
  %261 = load %"class.v8::internal::wasm::WasmFunctionBuilder"*, %"class.v8::internal::wasm::WasmFunctionBuilder"** %260, align 8
  tail call void @_ZN2v88internal4wasm19WasmFunctionBuilder12EmitF64ConstEd(%"class.v8::internal::wasm::WasmFunctionBuilder"* %261, double %259) #12
  br label %276

262:                                              ; preds = %254
  %263 = getelementptr inbounds %"class.v8::internal::wasm::AsmJsParser", %"class.v8::internal::wasm::AsmJsParser"* %0, i64 0, i32 1, i32 19
  %264 = load i32, i32* %263, align 8
  tail call void @_ZN2v88internal12AsmJsScanner4NextEv(%"class.v8::internal::AsmJsScanner"* %2) #12
  %265 = icmp sgt i32 %264, -1
  %266 = getelementptr inbounds %"class.v8::internal::wasm::AsmJsParser", %"class.v8::internal::wasm::AsmJsParser"* %0, i64 0, i32 3
  %267 = load %"class.v8::internal::wasm::WasmFunctionBuilder"*, %"class.v8::internal::wasm::WasmFunctionBuilder"** %266, align 8
  tail call void @_ZN2v88internal4wasm19WasmFunctionBuilder12EmitI32ConstEi(%"class.v8::internal::wasm::WasmFunctionBuilder"* %267, i32 %264) #12
  %268 = select i1 %265, %"class.v8::internal::wasm::AsmType"* inttoptr (i64 7969 to %"class.v8::internal::wasm::AsmType"*), %"class.v8::internal::wasm::AsmType"* inttoptr (i64 2817 to %"class.v8::internal::wasm::AsmType"*)
  br label %276

269:                                              ; preds = %254
  %270 = getelementptr inbounds %"class.v8::internal::wasm::AsmJsParser", %"class.v8::internal::wasm::AsmJsParser"* %0, i64 0, i32 17
  store i8 1, i8* %270, align 4
  %271 = getelementptr inbounds %"class.v8::internal::wasm::AsmJsParser", %"class.v8::internal::wasm::AsmJsParser"* %0, i64 0, i32 18
  store i8* getelementptr inbounds ([26 x i8], [26 x i8]* @.str.57, i64 0, i64 0), i8** %271, align 8
  %272 = getelementptr inbounds %"class.v8::internal::wasm::AsmJsParser", %"class.v8::internal::wasm::AsmJsParser"* %0, i64 0, i32 1, i32 5
  %273 = load i64, i64* %272, align 8
  %274 = trunc i64 %273 to i32
  %275 = getelementptr inbounds %"class.v8::internal::wasm::AsmJsParser", %"class.v8::internal::wasm::AsmJsParser"* %0, i64 0, i32 19
  store i32 %274, i32* %275, align 8
  br label %276

276:                                              ; preds = %257, %269, %262
  %277 = phi %"class.v8::internal::wasm::AsmType"* [ %268, %262 ], [ inttoptr (i64 237 to %"class.v8::internal::wasm::AsmType"*), %257 ], [ null, %269 ]
  %278 = getelementptr inbounds %"class.v8::internal::wasm::AsmJsParser", %"class.v8::internal::wasm::AsmJsParser"* %0, i64 0, i32 17
  %279 = load i8, i8* %278, align 4, !range !69
  %280 = icmp eq i8 %279, 0
  br i1 %280, label %281, label %283

281:                                              ; preds = %147, %203, %220, %241, %276
  %282 = phi %"class.v8::internal::wasm::AsmType"* [ %148, %147 ], [ %190, %203 ], [ %221, %220 ], [ %242, %241 ], [ %277, %276 ]
  br label %283

283:                                              ; preds = %189, %197, %182, %171, %276, %241, %220, %203, %147, %281, %247, %234, %213, %160, %140, %70
  %284 = phi %"class.v8::internal::wasm::AsmType"* [ inttoptr (i64 57357 to %"class.v8::internal::wasm::AsmType"*), %70 ], [ null, %140 ], [ %282, %281 ], [ null, %160 ], [ null, %213 ], [ null, %234 ], [ null, %247 ], [ null, %147 ], [ null, %203 ], [ null, %220 ], [ null, %241 ], [ null, %276 ], [ null, %171 ], [ null, %182 ], [ null, %197 ], [ null, %189 ]
  ret %"class.v8::internal::wasm::AsmType"* %284
}

; Function Attrs: nounwind ssp uwtable
define hidden void @_ZN2v88internal4wasm11AsmJsParser21ValidateFloatCoercionEv(%"class.v8::internal::wasm::AsmJsParser"*) local_unnamed_addr #0 align 2 {
  %2 = getelementptr inbounds %"class.v8::internal::wasm::AsmJsParser", %"class.v8::internal::wasm::AsmJsParser"* %0, i64 0, i32 1
  %3 = getelementptr inbounds %"class.v8::internal::wasm::AsmJsParser", %"class.v8::internal::wasm::AsmJsParser"* %0, i64 0, i32 1, i32 1
  %4 = load i32, i32* %3, align 8
  %5 = icmp sgt i32 %4, 255
  br i1 %5, label %6, label %70

6:                                                ; preds = %1
  %7 = getelementptr inbounds %"class.v8::internal::wasm::AsmJsParser", %"class.v8::internal::wasm::AsmJsParser"* %0, i64 0, i32 7
  %8 = getelementptr inbounds %"class.v8::internal::wasm::AsmJsParser", %"class.v8::internal::wasm::AsmJsParser"* %0, i64 0, i32 7, i32 1
  %9 = load i64, i64* %8, align 8
  %10 = add nsw i32 %4, -256
  %11 = sext i32 %10 to i64
  %12 = getelementptr inbounds %"class.v8::internal::wasm::AsmJsParser", %"class.v8::internal::wasm::AsmJsParser"* %0, i64 0, i32 9
  %13 = load i64, i64* %12, align 8
  %14 = icmp ugt i64 %13, %11
  %15 = add nuw nsw i64 %11, 1
  br i1 %14, label %17, label %16

16:                                               ; preds = %6
  store i64 %15, i64* %12, align 8
  br label %17

17:                                               ; preds = %6, %16
  %18 = icmp ugt i64 %9, %11
  br i1 %18, label %19, label %22

19:                                               ; preds = %17
  %20 = getelementptr inbounds %"class.v8::internal::Vector.160", %"class.v8::internal::Vector.160"* %7, i64 0, i32 0
  %21 = load %"struct.v8::internal::wasm::AsmJsParser::VarInfo"*, %"struct.v8::internal::wasm::AsmJsParser::VarInfo"** %20, align 8
  br label %63

22:                                               ; preds = %17
  %23 = shl i64 %9, 1
  %24 = icmp ult i64 %23, %15
  %25 = select i1 %24, i64 %15, i64 %23
  %26 = getelementptr inbounds %"class.v8::internal::wasm::AsmJsParser", %"class.v8::internal::wasm::AsmJsParser"* %0, i64 0, i32 0
  %27 = load %"class.v8::internal::Zone"*, %"class.v8::internal::Zone"** %26, align 8
  %28 = mul i64 %25, 40
  %29 = getelementptr inbounds %"class.v8::internal::Zone", %"class.v8::internal::Zone"* %27, i64 0, i32 2
  %30 = load i64, i64* %29, align 8
  %31 = getelementptr inbounds %"class.v8::internal::Zone", %"class.v8::internal::Zone"* %27, i64 0, i32 3
  %32 = load i64, i64* %31, align 8
  %33 = sub i64 %32, %30
  %34 = icmp ugt i64 %28, %33
  br i1 %34, label %35, label %37, !prof !2

35:                                               ; preds = %22
  %36 = tail call i64 @_ZN2v88internal4Zone9NewExpandEm(%"class.v8::internal::Zone"* %27, i64 %28) #12
  br label %39

37:                                               ; preds = %22
  %38 = add i64 %30, %28
  store i64 %38, i64* %29, align 8
  br label %39

39:                                               ; preds = %37, %35
  %40 = phi i64 [ %36, %35 ], [ %30, %37 ]
  %41 = inttoptr i64 %40 to %"struct.v8::internal::wasm::AsmJsParser::VarInfo"*
  %42 = getelementptr inbounds %"struct.v8::internal::wasm::AsmJsParser::VarInfo", %"struct.v8::internal::wasm::AsmJsParser::VarInfo"* %41, i64 %25
  %43 = icmp eq i64 %25, 0
  br i1 %43, label %53, label %44

44:                                               ; preds = %39, %44
  %45 = phi %"struct.v8::internal::wasm::AsmJsParser::VarInfo"* [ %51, %44 ], [ %41, %39 ]
  %46 = getelementptr inbounds %"struct.v8::internal::wasm::AsmJsParser::VarInfo", %"struct.v8::internal::wasm::AsmJsParser::VarInfo"* %45, i64 0, i32 0
  store %"class.v8::internal::wasm::AsmType"* inttoptr (i64 2147483649 to %"class.v8::internal::wasm::AsmType"*), %"class.v8::internal::wasm::AsmType"** %46, align 8
  %47 = getelementptr inbounds %"struct.v8::internal::wasm::AsmJsParser::VarInfo", %"struct.v8::internal::wasm::AsmJsParser::VarInfo"* %45, i64 0, i32 1
  %48 = getelementptr inbounds %"struct.v8::internal::wasm::AsmJsParser::VarInfo", %"struct.v8::internal::wasm::AsmJsParser::VarInfo"* %45, i64 0, i32 6
  %49 = bitcast %"class.v8::internal::wasm::WasmFunctionBuilder"** %47 to i8*
  tail call void @llvm.memset.p0i8.i64(i8* align 8 %49, i8 0, i64 28, i1 false) #12
  store i8 1, i8* %48, align 4
  %50 = getelementptr inbounds %"struct.v8::internal::wasm::AsmJsParser::VarInfo", %"struct.v8::internal::wasm::AsmJsParser::VarInfo"* %45, i64 0, i32 7
  store i8 0, i8* %50, align 1
  %51 = getelementptr inbounds %"struct.v8::internal::wasm::AsmJsParser::VarInfo", %"struct.v8::internal::wasm::AsmJsParser::VarInfo"* %45, i64 1
  %52 = icmp eq %"struct.v8::internal::wasm::AsmJsParser::VarInfo"* %51, %42
  br i1 %52, label %53, label %44

53:                                               ; preds = %44, %39
  %54 = getelementptr inbounds %"class.v8::internal::Vector.160", %"class.v8::internal::Vector.160"* %7, i64 0, i32 0
  %55 = load i64, i64* %8, align 8
  %56 = mul nuw i64 %55, 40
  %57 = icmp eq i64 %56, 0
  br i1 %57, label %62, label %58

58:                                               ; preds = %53
  %59 = bitcast %"class.v8::internal::Vector.160"* %7 to i8**
  %60 = load i8*, i8** %59, align 8
  %61 = inttoptr i64 %40 to i8*
  tail call void @llvm.memmove.p0i8.p0i8.i64(i8* align 8 %61, i8* align 8 %60, i64 %56, i1 false) #12
  br label %62

62:                                               ; preds = %58, %53
  store %"struct.v8::internal::wasm::AsmJsParser::VarInfo"* %41, %"struct.v8::internal::wasm::AsmJsParser::VarInfo"** %54, align 8
  store i64 %25, i64* %8, align 8
  br label %63

63:                                               ; preds = %19, %62
  %64 = phi %"struct.v8::internal::wasm::AsmJsParser::VarInfo"* [ %21, %19 ], [ %41, %62 ]
  %65 = getelementptr inbounds %"struct.v8::internal::wasm::AsmJsParser::VarInfo", %"struct.v8::internal::wasm::AsmJsParser::VarInfo"* %64, i64 %11, i32 0
  %66 = load %"class.v8::internal::wasm::AsmType"*, %"class.v8::internal::wasm::AsmType"** %65, align 8
  %67 = getelementptr inbounds %"class.v8::internal::wasm::AsmJsParser", %"class.v8::internal::wasm::AsmJsParser"* %0, i64 0, i32 33
  %68 = load %"class.v8::internal::wasm::AsmType"*, %"class.v8::internal::wasm::AsmType"** %67, align 8
  %69 = tail call zeroext i1 @_ZN2v88internal4wasm7AsmType3IsAEPS2_(%"class.v8::internal::wasm::AsmType"* %66, %"class.v8::internal::wasm::AsmType"* %68) #12
  br i1 %69, label %77, label %70

70:                                               ; preds = %63, %1
  %71 = getelementptr inbounds %"class.v8::internal::wasm::AsmJsParser", %"class.v8::internal::wasm::AsmJsParser"* %0, i64 0, i32 17
  store i8 1, i8* %71, align 4
  %72 = getelementptr inbounds %"class.v8::internal::wasm::AsmJsParser", %"class.v8::internal::wasm::AsmJsParser"* %0, i64 0, i32 18
  store i8* getelementptr inbounds ([16 x i8], [16 x i8]* @.str.42, i64 0, i64 0), i8** %72, align 8
  %73 = getelementptr inbounds %"class.v8::internal::wasm::AsmJsParser", %"class.v8::internal::wasm::AsmJsParser"* %0, i64 0, i32 1, i32 5
  %74 = load i64, i64* %73, align 8
  %75 = trunc i64 %74 to i32
  %76 = getelementptr inbounds %"class.v8::internal::wasm::AsmJsParser", %"class.v8::internal::wasm::AsmJsParser"* %0, i64 0, i32 19
  store i32 %75, i32* %76, align 8
  br label %133

77:                                               ; preds = %63
  tail call void @_ZN2v88internal12AsmJsScanner4NextEv(%"class.v8::internal::AsmJsScanner"* %2) #12
  %78 = load i32, i32* %3, align 8
  %79 = icmp eq i32 %78, 40
  br i1 %79, label %87, label %80

80:                                               ; preds = %77
  %81 = getelementptr inbounds %"class.v8::internal::wasm::AsmJsParser", %"class.v8::internal::wasm::AsmJsParser"* %0, i64 0, i32 17
  store i8 1, i8* %81, align 4
  %82 = getelementptr inbounds %"class.v8::internal::wasm::AsmJsParser", %"class.v8::internal::wasm::AsmJsParser"* %0, i64 0, i32 18
  store i8* getelementptr inbounds ([17 x i8], [17 x i8]* @.str.3, i64 0, i64 0), i8** %82, align 8
  %83 = getelementptr inbounds %"class.v8::internal::wasm::AsmJsParser", %"class.v8::internal::wasm::AsmJsParser"* %0, i64 0, i32 1, i32 5
  %84 = load i64, i64* %83, align 8
  %85 = trunc i64 %84 to i32
  %86 = getelementptr inbounds %"class.v8::internal::wasm::AsmJsParser", %"class.v8::internal::wasm::AsmJsParser"* %0, i64 0, i32 19
  store i32 %85, i32* %86, align 8
  br label %133

87:                                               ; preds = %77
  tail call void @_ZN2v88internal12AsmJsScanner4NextEv(%"class.v8::internal::AsmJsScanner"* %2) #12
  %88 = getelementptr inbounds %"class.v8::internal::wasm::AsmJsParser", %"class.v8::internal::wasm::AsmJsParser"* %0, i64 0, i32 34
  store %"class.v8::internal::wasm::AsmType"* inttoptr (i64 57357 to %"class.v8::internal::wasm::AsmType"*), %"class.v8::internal::wasm::AsmType"** %88, align 8
  %89 = getelementptr inbounds %"class.v8::internal::wasm::AsmJsParser", %"class.v8::internal::wasm::AsmJsParser"* %0, i64 0, i32 1, i32 5
  %90 = load i64, i64* %89, align 8
  %91 = getelementptr inbounds %"class.v8::internal::wasm::AsmJsParser", %"class.v8::internal::wasm::AsmJsParser"* %0, i64 0, i32 35
  store i64 %90, i64* %91, align 8
  %92 = tail call i64 @_ZN2v88internal23GetCurrentStackPositionEv() #12
  %93 = getelementptr inbounds %"class.v8::internal::wasm::AsmJsParser", %"class.v8::internal::wasm::AsmJsParser"* %0, i64 0, i32 5
  %94 = load i64, i64* %93, align 8
  %95 = icmp ult i64 %92, %94
  br i1 %95, label %96, label %102

96:                                               ; preds = %87
  %97 = getelementptr inbounds %"class.v8::internal::wasm::AsmJsParser", %"class.v8::internal::wasm::AsmJsParser"* %0, i64 0, i32 17
  store i8 1, i8* %97, align 4
  %98 = getelementptr inbounds %"class.v8::internal::wasm::AsmJsParser", %"class.v8::internal::wasm::AsmJsParser"* %0, i64 0, i32 18
  store i8* getelementptr inbounds ([44 x i8], [44 x i8]* @.str.2, i64 0, i64 0), i8** %98, align 8
  %99 = load i64, i64* %89, align 8
  %100 = trunc i64 %99 to i32
  %101 = getelementptr inbounds %"class.v8::internal::wasm::AsmJsParser", %"class.v8::internal::wasm::AsmJsParser"* %0, i64 0, i32 19
  store i32 %100, i32* %101, align 8
  br label %133

102:                                              ; preds = %87
  %103 = tail call %"class.v8::internal::wasm::AsmType"* @_ZN2v88internal4wasm11AsmJsParser20AssignmentExpressionEv(%"class.v8::internal::wasm::AsmJsParser"* %0)
  %104 = getelementptr inbounds %"class.v8::internal::wasm::AsmJsParser", %"class.v8::internal::wasm::AsmJsParser"* %0, i64 0, i32 17
  %105 = load i8, i8* %104, align 4, !range !69
  %106 = icmp eq i8 %105, 0
  br i1 %106, label %107, label %133

107:                                              ; preds = %102
  %108 = tail call zeroext i1 @_ZN2v88internal4wasm7AsmType3IsAEPS2_(%"class.v8::internal::wasm::AsmType"* %103, %"class.v8::internal::wasm::AsmType"* nonnull inttoptr (i64 8197 to %"class.v8::internal::wasm::AsmType"*)) #12
  br i1 %108, label %124, label %109

109:                                              ; preds = %107
  %110 = tail call zeroext i1 @_ZN2v88internal4wasm7AsmType3IsAEPS2_(%"class.v8::internal::wasm::AsmType"* %103, %"class.v8::internal::wasm::AsmType"* nonnull inttoptr (i64 77 to %"class.v8::internal::wasm::AsmType"*)) #12
  br i1 %110, label %120, label %111

111:                                              ; preds = %109
  %112 = tail call zeroext i1 @_ZN2v88internal4wasm7AsmType3IsAEPS2_(%"class.v8::internal::wasm::AsmType"* %103, %"class.v8::internal::wasm::AsmType"* nonnull inttoptr (i64 1825 to %"class.v8::internal::wasm::AsmType"*)) #12
  br i1 %112, label %120, label %113

113:                                              ; preds = %111
  %114 = tail call zeroext i1 @_ZN2v88internal4wasm7AsmType3IsAEPS2_(%"class.v8::internal::wasm::AsmType"* %103, %"class.v8::internal::wasm::AsmType"* nonnull inttoptr (i64 2817 to %"class.v8::internal::wasm::AsmType"*)) #12
  br i1 %114, label %120, label %115

115:                                              ; preds = %113
  store i8 1, i8* %104, align 4
  %116 = getelementptr inbounds %"class.v8::internal::wasm::AsmJsParser", %"class.v8::internal::wasm::AsmJsParser"* %0, i64 0, i32 18
  store i8* getelementptr inbounds ([28 x i8], [28 x i8]* @.str.108, i64 0, i64 0), i8** %116, align 8
  %117 = load i64, i64* %89, align 8
  %118 = trunc i64 %117 to i32
  %119 = getelementptr inbounds %"class.v8::internal::wasm::AsmJsParser", %"class.v8::internal::wasm::AsmJsParser"* %0, i64 0, i32 19
  store i32 %118, i32* %119, align 8
  br label %133

120:                                              ; preds = %113, %111, %109
  %121 = phi i32 [ 182, %109 ], [ 178, %111 ], [ 179, %113 ]
  %122 = getelementptr inbounds %"class.v8::internal::wasm::AsmJsParser", %"class.v8::internal::wasm::AsmJsParser"* %0, i64 0, i32 3
  %123 = load %"class.v8::internal::wasm::WasmFunctionBuilder"*, %"class.v8::internal::wasm::WasmFunctionBuilder"** %122, align 8
  tail call void @_ZN2v88internal4wasm19WasmFunctionBuilder4EmitENS1_10WasmOpcodeE(%"class.v8::internal::wasm::WasmFunctionBuilder"* %123, i32 %121) #12
  br label %124

124:                                              ; preds = %120, %107
  %125 = load i32, i32* %3, align 8
  %126 = icmp eq i32 %125, 41
  br i1 %126, label %132, label %127

127:                                              ; preds = %124
  store i8 1, i8* %104, align 4
  %128 = getelementptr inbounds %"class.v8::internal::wasm::AsmJsParser", %"class.v8::internal::wasm::AsmJsParser"* %0, i64 0, i32 18
  store i8* getelementptr inbounds ([17 x i8], [17 x i8]* @.str.3, i64 0, i64 0), i8** %128, align 8
  %129 = load i64, i64* %89, align 8
  %130 = trunc i64 %129 to i32
  %131 = getelementptr inbounds %"class.v8::internal::wasm::AsmJsParser", %"class.v8::internal::wasm::AsmJsParser"* %0, i64 0, i32 19
  store i32 %130, i32* %131, align 8
  br label %133

132:                                              ; preds = %124
  tail call void @_ZN2v88internal12AsmJsScanner4NextEv(%"class.v8::internal::AsmJsScanner"* %2) #12
  br label %133

133:                                              ; preds = %96, %115, %127, %132, %102, %70, %80
  ret void
}

; Function Attrs: nounwind ssp uwtable
define hidden %"class.v8::internal::wasm::AsmType"* @_ZN2v88internal4wasm11AsmJsParser16MemberExpressionEv(%"class.v8::internal::wasm::AsmJsParser"*) local_unnamed_addr #0 align 2 {
  %2 = getelementptr inbounds %"class.v8::internal::wasm::AsmJsParser", %"class.v8::internal::wasm::AsmJsParser"* %0, i64 0, i32 34
  store %"class.v8::internal::wasm::AsmType"* null, %"class.v8::internal::wasm::AsmType"** %2, align 8
  %3 = tail call i64 @_ZN2v88internal23GetCurrentStackPositionEv() #12
  %4 = getelementptr inbounds %"class.v8::internal::wasm::AsmJsParser", %"class.v8::internal::wasm::AsmJsParser"* %0, i64 0, i32 5
  %5 = load i64, i64* %4, align 8
  %6 = icmp ult i64 %3, %5
  br i1 %6, label %7, label %14

7:                                                ; preds = %1
  %8 = getelementptr inbounds %"class.v8::internal::wasm::AsmJsParser", %"class.v8::internal::wasm::AsmJsParser"* %0, i64 0, i32 17
  store i8 1, i8* %8, align 4
  %9 = getelementptr inbounds %"class.v8::internal::wasm::AsmJsParser", %"class.v8::internal::wasm::AsmJsParser"* %0, i64 0, i32 18
  store i8* getelementptr inbounds ([44 x i8], [44 x i8]* @.str.2, i64 0, i64 0), i8** %9, align 8
  %10 = getelementptr inbounds %"class.v8::internal::wasm::AsmJsParser", %"class.v8::internal::wasm::AsmJsParser"* %0, i64 0, i32 1, i32 5
  %11 = load i64, i64* %10, align 8
  %12 = trunc i64 %11 to i32
  %13 = getelementptr inbounds %"class.v8::internal::wasm::AsmJsParser", %"class.v8::internal::wasm::AsmJsParser"* %0, i64 0, i32 19
  store i32 %12, i32* %13, align 8
  br label %98

14:                                               ; preds = %1
  tail call void @_ZN2v88internal4wasm11AsmJsParser18ValidateHeapAccessEv(%"class.v8::internal::wasm::AsmJsParser"* %0)
  %15 = getelementptr inbounds %"class.v8::internal::wasm::AsmJsParser", %"class.v8::internal::wasm::AsmJsParser"* %0, i64 0, i32 17
  %16 = load i8, i8* %15, align 4, !range !69
  %17 = icmp eq i8 %16, 0
  br i1 %17, label %18, label %98

18:                                               ; preds = %14
  %19 = getelementptr inbounds %"class.v8::internal::wasm::AsmJsParser", %"class.v8::internal::wasm::AsmJsParser"* %0, i64 0, i32 1, i32 1
  %20 = load i32, i32* %19, align 8
  %21 = icmp eq i32 %20, 61
  br i1 %21, label %22, label %27

22:                                               ; preds = %18
  %23 = getelementptr inbounds %"class.v8::internal::wasm::AsmJsParser", %"class.v8::internal::wasm::AsmJsParser"* %0, i64 0, i32 23
  store i8 1, i8* %23, align 8
  %24 = getelementptr inbounds %"class.v8::internal::wasm::AsmJsParser", %"class.v8::internal::wasm::AsmJsParser"* %0, i64 0, i32 24
  %25 = load %"class.v8::internal::wasm::AsmType"*, %"class.v8::internal::wasm::AsmType"** %24, align 8
  %26 = tail call %"class.v8::internal::wasm::AsmType"* @_ZN2v88internal4wasm7AsmType9StoreTypeEv(%"class.v8::internal::wasm::AsmType"* %25) #12
  br label %98

27:                                               ; preds = %18
  %28 = getelementptr inbounds %"class.v8::internal::wasm::AsmJsParser", %"class.v8::internal::wasm::AsmJsParser"* %0, i64 0, i32 24
  %29 = load %"class.v8::internal::wasm::AsmType"*, %"class.v8::internal::wasm::AsmType"** %28, align 8
  %30 = tail call zeroext i1 @_ZN2v88internal4wasm7AsmType3IsAEPS2_(%"class.v8::internal::wasm::AsmType"* %29, %"class.v8::internal::wasm::AsmType"* nonnull inttoptr (i64 131075 to %"class.v8::internal::wasm::AsmType"*)) #12
  br i1 %30, label %31, label %36

31:                                               ; preds = %27
  %32 = getelementptr inbounds %"class.v8::internal::wasm::AsmJsParser", %"class.v8::internal::wasm::AsmJsParser"* %0, i64 0, i32 3
  %33 = load %"class.v8::internal::wasm::WasmFunctionBuilder"*, %"class.v8::internal::wasm::WasmFunctionBuilder"** %32, align 8
  tail call void @_ZN2v88internal4wasm19WasmFunctionBuilder4EmitENS1_10WasmOpcodeE(%"class.v8::internal::wasm::WasmFunctionBuilder"* %33, i32 235) #12
  %34 = load %"class.v8::internal::wasm::AsmType"*, %"class.v8::internal::wasm::AsmType"** %28, align 8
  %35 = tail call %"class.v8::internal::wasm::AsmType"* @_ZN2v88internal4wasm7AsmType8LoadTypeEv(%"class.v8::internal::wasm::AsmType"* %34) #12
  br label %98

36:                                               ; preds = %27
  %37 = load %"class.v8::internal::wasm::AsmType"*, %"class.v8::internal::wasm::AsmType"** %28, align 8
  %38 = tail call zeroext i1 @_ZN2v88internal4wasm7AsmType3IsAEPS2_(%"class.v8::internal::wasm::AsmType"* %37, %"class.v8::internal::wasm::AsmType"* nonnull inttoptr (i64 65539 to %"class.v8::internal::wasm::AsmType"*)) #12
  br i1 %38, label %39, label %44

39:                                               ; preds = %36
  %40 = getelementptr inbounds %"class.v8::internal::wasm::AsmJsParser", %"class.v8::internal::wasm::AsmJsParser"* %0, i64 0, i32 3
  %41 = load %"class.v8::internal::wasm::WasmFunctionBuilder"*, %"class.v8::internal::wasm::WasmFunctionBuilder"** %40, align 8
  tail call void @_ZN2v88internal4wasm19WasmFunctionBuilder4EmitENS1_10WasmOpcodeE(%"class.v8::internal::wasm::WasmFunctionBuilder"* %41, i32 236) #12
  %42 = load %"class.v8::internal::wasm::AsmType"*, %"class.v8::internal::wasm::AsmType"** %28, align 8
  %43 = tail call %"class.v8::internal::wasm::AsmType"* @_ZN2v88internal4wasm7AsmType8LoadTypeEv(%"class.v8::internal::wasm::AsmType"* %42) #12
  br label %98

44:                                               ; preds = %36
  %45 = load %"class.v8::internal::wasm::AsmType"*, %"class.v8::internal::wasm::AsmType"** %28, align 8
  %46 = tail call zeroext i1 @_ZN2v88internal4wasm7AsmType3IsAEPS2_(%"class.v8::internal::wasm::AsmType"* %45, %"class.v8::internal::wasm::AsmType"* nonnull inttoptr (i64 524291 to %"class.v8::internal::wasm::AsmType"*)) #12
  br i1 %46, label %47, label %52

47:                                               ; preds = %44
  %48 = getelementptr inbounds %"class.v8::internal::wasm::AsmJsParser", %"class.v8::internal::wasm::AsmJsParser"* %0, i64 0, i32 3
  %49 = load %"class.v8::internal::wasm::WasmFunctionBuilder"*, %"class.v8::internal::wasm::WasmFunctionBuilder"** %48, align 8
  tail call void @_ZN2v88internal4wasm19WasmFunctionBuilder4EmitENS1_10WasmOpcodeE(%"class.v8::internal::wasm::WasmFunctionBuilder"* %49, i32 237) #12
  %50 = load %"class.v8::internal::wasm::AsmType"*, %"class.v8::internal::wasm::AsmType"** %28, align 8
  %51 = tail call %"class.v8::internal::wasm::AsmType"* @_ZN2v88internal4wasm7AsmType8LoadTypeEv(%"class.v8::internal::wasm::AsmType"* %50) #12
  br label %98

52:                                               ; preds = %44
  %53 = load %"class.v8::internal::wasm::AsmType"*, %"class.v8::internal::wasm::AsmType"** %28, align 8
  %54 = tail call zeroext i1 @_ZN2v88internal4wasm7AsmType3IsAEPS2_(%"class.v8::internal::wasm::AsmType"* %53, %"class.v8::internal::wasm::AsmType"* nonnull inttoptr (i64 262147 to %"class.v8::internal::wasm::AsmType"*)) #12
  br i1 %54, label %55, label %60

55:                                               ; preds = %52
  %56 = getelementptr inbounds %"class.v8::internal::wasm::AsmJsParser", %"class.v8::internal::wasm::AsmJsParser"* %0, i64 0, i32 3
  %57 = load %"class.v8::internal::wasm::WasmFunctionBuilder"*, %"class.v8::internal::wasm::WasmFunctionBuilder"** %56, align 8
  tail call void @_ZN2v88internal4wasm19WasmFunctionBuilder4EmitENS1_10WasmOpcodeE(%"class.v8::internal::wasm::WasmFunctionBuilder"* %57, i32 238) #12
  %58 = load %"class.v8::internal::wasm::AsmType"*, %"class.v8::internal::wasm::AsmType"** %28, align 8
  %59 = tail call %"class.v8::internal::wasm::AsmType"* @_ZN2v88internal4wasm7AsmType8LoadTypeEv(%"class.v8::internal::wasm::AsmType"* %58) #12
  br label %98

60:                                               ; preds = %52
  %61 = load %"class.v8::internal::wasm::AsmType"*, %"class.v8::internal::wasm::AsmType"** %28, align 8
  %62 = tail call zeroext i1 @_ZN2v88internal4wasm7AsmType3IsAEPS2_(%"class.v8::internal::wasm::AsmType"* %61, %"class.v8::internal::wasm::AsmType"* nonnull inttoptr (i64 2097155 to %"class.v8::internal::wasm::AsmType"*)) #12
  br i1 %62, label %63, label %68

63:                                               ; preds = %60
  %64 = getelementptr inbounds %"class.v8::internal::wasm::AsmJsParser", %"class.v8::internal::wasm::AsmJsParser"* %0, i64 0, i32 3
  %65 = load %"class.v8::internal::wasm::WasmFunctionBuilder"*, %"class.v8::internal::wasm::WasmFunctionBuilder"** %64, align 8
  tail call void @_ZN2v88internal4wasm19WasmFunctionBuilder4EmitENS1_10WasmOpcodeE(%"class.v8::internal::wasm::WasmFunctionBuilder"* %65, i32 239) #12
  %66 = load %"class.v8::internal::wasm::AsmType"*, %"class.v8::internal::wasm::AsmType"** %28, align 8
  %67 = tail call %"class.v8::internal::wasm::AsmType"* @_ZN2v88internal4wasm7AsmType8LoadTypeEv(%"class.v8::internal::wasm::AsmType"* %66) #12
  br label %98

68:                                               ; preds = %60
  %69 = load %"class.v8::internal::wasm::AsmType"*, %"class.v8::internal::wasm::AsmType"** %28, align 8
  %70 = tail call zeroext i1 @_ZN2v88internal4wasm7AsmType3IsAEPS2_(%"class.v8::internal::wasm::AsmType"* %69, %"class.v8::internal::wasm::AsmType"* nonnull inttoptr (i64 1048579 to %"class.v8::internal::wasm::AsmType"*)) #12
  br i1 %70, label %71, label %76

71:                                               ; preds = %68
  %72 = getelementptr inbounds %"class.v8::internal::wasm::AsmJsParser", %"class.v8::internal::wasm::AsmJsParser"* %0, i64 0, i32 3
  %73 = load %"class.v8::internal::wasm::WasmFunctionBuilder"*, %"class.v8::internal::wasm::WasmFunctionBuilder"** %72, align 8
  tail call void @_ZN2v88internal4wasm19WasmFunctionBuilder4EmitENS1_10WasmOpcodeE(%"class.v8::internal::wasm::WasmFunctionBuilder"* %73, i32 239) #12
  %74 = load %"class.v8::internal::wasm::AsmType"*, %"class.v8::internal::wasm::AsmType"** %28, align 8
  %75 = tail call %"class.v8::internal::wasm::AsmType"* @_ZN2v88internal4wasm7AsmType8LoadTypeEv(%"class.v8::internal::wasm::AsmType"* %74) #12
  br label %98

76:                                               ; preds = %68
  %77 = load %"class.v8::internal::wasm::AsmType"*, %"class.v8::internal::wasm::AsmType"** %28, align 8
  %78 = tail call zeroext i1 @_ZN2v88internal4wasm7AsmType3IsAEPS2_(%"class.v8::internal::wasm::AsmType"* %77, %"class.v8::internal::wasm::AsmType"* nonnull inttoptr (i64 4194307 to %"class.v8::internal::wasm::AsmType"*)) #12
  br i1 %78, label %79, label %84

79:                                               ; preds = %76
  %80 = getelementptr inbounds %"class.v8::internal::wasm::AsmJsParser", %"class.v8::internal::wasm::AsmJsParser"* %0, i64 0, i32 3
  %81 = load %"class.v8::internal::wasm::WasmFunctionBuilder"*, %"class.v8::internal::wasm::WasmFunctionBuilder"** %80, align 8
  tail call void @_ZN2v88internal4wasm19WasmFunctionBuilder4EmitENS1_10WasmOpcodeE(%"class.v8::internal::wasm::WasmFunctionBuilder"* %81, i32 240) #12
  %82 = load %"class.v8::internal::wasm::AsmType"*, %"class.v8::internal::wasm::AsmType"** %28, align 8
  %83 = tail call %"class.v8::internal::wasm::AsmType"* @_ZN2v88internal4wasm7AsmType8LoadTypeEv(%"class.v8::internal::wasm::AsmType"* %82) #12
  br label %98

84:                                               ; preds = %76
  %85 = load %"class.v8::internal::wasm::AsmType"*, %"class.v8::internal::wasm::AsmType"** %28, align 8
  %86 = tail call zeroext i1 @_ZN2v88internal4wasm7AsmType3IsAEPS2_(%"class.v8::internal::wasm::AsmType"* %85, %"class.v8::internal::wasm::AsmType"* nonnull inttoptr (i64 8388611 to %"class.v8::internal::wasm::AsmType"*)) #12
  br i1 %86, label %87, label %92

87:                                               ; preds = %84
  %88 = getelementptr inbounds %"class.v8::internal::wasm::AsmJsParser", %"class.v8::internal::wasm::AsmJsParser"* %0, i64 0, i32 3
  %89 = load %"class.v8::internal::wasm::WasmFunctionBuilder"*, %"class.v8::internal::wasm::WasmFunctionBuilder"** %88, align 8
  tail call void @_ZN2v88internal4wasm19WasmFunctionBuilder4EmitENS1_10WasmOpcodeE(%"class.v8::internal::wasm::WasmFunctionBuilder"* %89, i32 241) #12
  %90 = load %"class.v8::internal::wasm::AsmType"*, %"class.v8::internal::wasm::AsmType"** %28, align 8
  %91 = tail call %"class.v8::internal::wasm::AsmType"* @_ZN2v88internal4wasm7AsmType8LoadTypeEv(%"class.v8::internal::wasm::AsmType"* %90) #12
  br label %98

92:                                               ; preds = %84
  store i8 1, i8* %15, align 4
  %93 = getelementptr inbounds %"class.v8::internal::wasm::AsmJsParser", %"class.v8::internal::wasm::AsmJsParser"* %0, i64 0, i32 18
  store i8* getelementptr inbounds ([25 x i8], [25 x i8]* @.str.60, i64 0, i64 0), i8** %93, align 8
  %94 = getelementptr inbounds %"class.v8::internal::wasm::AsmJsParser", %"class.v8::internal::wasm::AsmJsParser"* %0, i64 0, i32 1, i32 5
  %95 = load i64, i64* %94, align 8
  %96 = trunc i64 %95 to i32
  %97 = getelementptr inbounds %"class.v8::internal::wasm::AsmJsParser", %"class.v8::internal::wasm::AsmJsParser"* %0, i64 0, i32 19
  store i32 %96, i32* %97, align 8
  br label %98

98:                                               ; preds = %14, %92, %87, %79, %71, %63, %55, %47, %39, %31, %22, %7
  %99 = phi %"class.v8::internal::wasm::AsmType"* [ null, %7 ], [ %26, %22 ], [ %35, %31 ], [ %43, %39 ], [ %51, %47 ], [ %59, %55 ], [ %67, %63 ], [ %75, %71 ], [ %83, %79 ], [ %91, %87 ], [ null, %92 ], [ null, %14 ]
  ret %"class.v8::internal::wasm::AsmType"* %99
}

; Function Attrs: nounwind ssp uwtable
define hidden %"class.v8::internal::wasm::AsmType"* @_ZN2v88internal4wasm11AsmJsParser23ParenthesizedExpressionEv(%"class.v8::internal::wasm::AsmJsParser"*) local_unnamed_addr #0 align 2 {
  %2 = getelementptr inbounds %"class.v8::internal::wasm::AsmJsParser", %"class.v8::internal::wasm::AsmJsParser"* %0, i64 0, i32 34
  store %"class.v8::internal::wasm::AsmType"* null, %"class.v8::internal::wasm::AsmType"** %2, align 8
  %3 = getelementptr inbounds %"class.v8::internal::wasm::AsmJsParser", %"class.v8::internal::wasm::AsmJsParser"* %0, i64 0, i32 1
  %4 = getelementptr inbounds %"class.v8::internal::wasm::AsmJsParser", %"class.v8::internal::wasm::AsmJsParser"* %0, i64 0, i32 1, i32 1
  %5 = load i32, i32* %4, align 8
  %6 = icmp eq i32 %5, 40
  br i1 %6, label %14, label %7

7:                                                ; preds = %1
  %8 = getelementptr inbounds %"class.v8::internal::wasm::AsmJsParser", %"class.v8::internal::wasm::AsmJsParser"* %0, i64 0, i32 17
  store i8 1, i8* %8, align 4
  %9 = getelementptr inbounds %"class.v8::internal::wasm::AsmJsParser", %"class.v8::internal::wasm::AsmJsParser"* %0, i64 0, i32 18
  store i8* getelementptr inbounds ([17 x i8], [17 x i8]* @.str.3, i64 0, i64 0), i8** %9, align 8
  %10 = getelementptr inbounds %"class.v8::internal::wasm::AsmJsParser", %"class.v8::internal::wasm::AsmJsParser"* %0, i64 0, i32 1, i32 5
  %11 = load i64, i64* %10, align 8
  %12 = trunc i64 %11 to i32
  %13 = getelementptr inbounds %"class.v8::internal::wasm::AsmJsParser", %"class.v8::internal::wasm::AsmJsParser"* %0, i64 0, i32 19
  store i32 %12, i32* %13, align 8
  br label %41

14:                                               ; preds = %1
  tail call void @_ZN2v88internal12AsmJsScanner4NextEv(%"class.v8::internal::AsmJsScanner"* %3) #12
  %15 = tail call i64 @_ZN2v88internal23GetCurrentStackPositionEv() #12
  %16 = getelementptr inbounds %"class.v8::internal::wasm::AsmJsParser", %"class.v8::internal::wasm::AsmJsParser"* %0, i64 0, i32 5
  %17 = load i64, i64* %16, align 8
  %18 = icmp ult i64 %15, %17
  br i1 %18, label %19, label %26

19:                                               ; preds = %14
  %20 = getelementptr inbounds %"class.v8::internal::wasm::AsmJsParser", %"class.v8::internal::wasm::AsmJsParser"* %0, i64 0, i32 17
  store i8 1, i8* %20, align 4
  %21 = getelementptr inbounds %"class.v8::internal::wasm::AsmJsParser", %"class.v8::internal::wasm::AsmJsParser"* %0, i64 0, i32 18
  store i8* getelementptr inbounds ([44 x i8], [44 x i8]* @.str.2, i64 0, i64 0), i8** %21, align 8
  %22 = getelementptr inbounds %"class.v8::internal::wasm::AsmJsParser", %"class.v8::internal::wasm::AsmJsParser"* %0, i64 0, i32 1, i32 5
  %23 = load i64, i64* %22, align 8
  %24 = trunc i64 %23 to i32
  %25 = getelementptr inbounds %"class.v8::internal::wasm::AsmJsParser", %"class.v8::internal::wasm::AsmJsParser"* %0, i64 0, i32 19
  store i32 %24, i32* %25, align 8
  br label %41

26:                                               ; preds = %14
  %27 = tail call %"class.v8::internal::wasm::AsmType"* @_ZN2v88internal4wasm11AsmJsParser10ExpressionEPNS1_7AsmTypeE(%"class.v8::internal::wasm::AsmJsParser"* %0, %"class.v8::internal::wasm::AsmType"* null)
  %28 = getelementptr inbounds %"class.v8::internal::wasm::AsmJsParser", %"class.v8::internal::wasm::AsmJsParser"* %0, i64 0, i32 17
  %29 = load i8, i8* %28, align 4, !range !69
  %30 = icmp eq i8 %29, 0
  br i1 %30, label %31, label %41

31:                                               ; preds = %26
  %32 = load i32, i32* %4, align 8
  %33 = icmp eq i32 %32, 41
  br i1 %33, label %40, label %34

34:                                               ; preds = %31
  store i8 1, i8* %28, align 4
  %35 = getelementptr inbounds %"class.v8::internal::wasm::AsmJsParser", %"class.v8::internal::wasm::AsmJsParser"* %0, i64 0, i32 18
  store i8* getelementptr inbounds ([17 x i8], [17 x i8]* @.str.3, i64 0, i64 0), i8** %35, align 8
  %36 = getelementptr inbounds %"class.v8::internal::wasm::AsmJsParser", %"class.v8::internal::wasm::AsmJsParser"* %0, i64 0, i32 1, i32 5
  %37 = load i64, i64* %36, align 8
  %38 = trunc i64 %37 to i32
  %39 = getelementptr inbounds %"class.v8::internal::wasm::AsmJsParser", %"class.v8::internal::wasm::AsmJsParser"* %0, i64 0, i32 19
  store i32 %38, i32* %39, align 8
  br label %41

40:                                               ; preds = %31
  tail call void @_ZN2v88internal12AsmJsScanner4NextEv(%"class.v8::internal::AsmJsScanner"* %3) #12
  br label %41

41:                                               ; preds = %26, %40, %34, %19, %7
  %42 = phi %"class.v8::internal::wasm::AsmType"* [ null, %7 ], [ null, %19 ], [ null, %34 ], [ %27, %40 ], [ null, %26 ]
  ret %"class.v8::internal::wasm::AsmType"* %42
}

; Function Attrs: nounwind ssp uwtable
define hidden zeroext i1 @_ZN2v88internal4wasm11AsmJsParser8PeekCallEv(%"class.v8::internal::wasm::AsmJsParser"*) local_unnamed_addr #0 align 2 {
  %2 = getelementptr inbounds %"class.v8::internal::wasm::AsmJsParser", %"class.v8::internal::wasm::AsmJsParser"* %0, i64 0, i32 1
  %3 = getelementptr inbounds %"class.v8::internal::wasm::AsmJsParser", %"class.v8::internal::wasm::AsmJsParser"* %0, i64 0, i32 1, i32 1
  %4 = load i32, i32* %3, align 8
  %5 = icmp sgt i32 %4, 255
  br i1 %5, label %6, label %280

6:                                                ; preds = %1
  %7 = getelementptr inbounds %"class.v8::internal::wasm::AsmJsParser", %"class.v8::internal::wasm::AsmJsParser"* %0, i64 0, i32 7
  %8 = getelementptr inbounds %"class.v8::internal::wasm::AsmJsParser", %"class.v8::internal::wasm::AsmJsParser"* %0, i64 0, i32 8
  %9 = getelementptr inbounds %"class.v8::internal::wasm::AsmJsParser", %"class.v8::internal::wasm::AsmJsParser"* %0, i64 0, i32 7, i32 1
  %10 = load i64, i64* %9, align 8
  %11 = add nsw i32 %4, -256
  %12 = sext i32 %11 to i64
  %13 = getelementptr inbounds %"class.v8::internal::wasm::AsmJsParser", %"class.v8::internal::wasm::AsmJsParser"* %0, i64 0, i32 9
  %14 = load i64, i64* %13, align 8
  %15 = icmp ugt i64 %14, %12
  %16 = add nuw nsw i64 %12, 1
  br i1 %15, label %18, label %17

17:                                               ; preds = %6
  store i64 %16, i64* %13, align 8
  br label %18

18:                                               ; preds = %6, %17
  %19 = icmp ugt i64 %10, %12
  br i1 %19, label %20, label %23

20:                                               ; preds = %18
  %21 = getelementptr inbounds %"class.v8::internal::Vector.160", %"class.v8::internal::Vector.160"* %7, i64 0, i32 0
  %22 = load %"struct.v8::internal::wasm::AsmJsParser::VarInfo"*, %"struct.v8::internal::wasm::AsmJsParser::VarInfo"** %21, align 8
  br label %64

23:                                               ; preds = %18
  %24 = shl i64 %10, 1
  %25 = icmp ult i64 %24, %16
  %26 = select i1 %25, i64 %16, i64 %24
  %27 = getelementptr inbounds %"class.v8::internal::wasm::AsmJsParser", %"class.v8::internal::wasm::AsmJsParser"* %0, i64 0, i32 0
  %28 = load %"class.v8::internal::Zone"*, %"class.v8::internal::Zone"** %27, align 8
  %29 = mul i64 %26, 40
  %30 = getelementptr inbounds %"class.v8::internal::Zone", %"class.v8::internal::Zone"* %28, i64 0, i32 2
  %31 = load i64, i64* %30, align 8
  %32 = getelementptr inbounds %"class.v8::internal::Zone", %"class.v8::internal::Zone"* %28, i64 0, i32 3
  %33 = load i64, i64* %32, align 8
  %34 = sub i64 %33, %31
  %35 = icmp ugt i64 %29, %34
  br i1 %35, label %36, label %38, !prof !2

36:                                               ; preds = %23
  %37 = tail call i64 @_ZN2v88internal4Zone9NewExpandEm(%"class.v8::internal::Zone"* %28, i64 %29) #12
  br label %40

38:                                               ; preds = %23
  %39 = add i64 %31, %29
  store i64 %39, i64* %30, align 8
  br label %40

40:                                               ; preds = %38, %36
  %41 = phi i64 [ %37, %36 ], [ %31, %38 ]
  %42 = inttoptr i64 %41 to %"struct.v8::internal::wasm::AsmJsParser::VarInfo"*
  %43 = getelementptr inbounds %"struct.v8::internal::wasm::AsmJsParser::VarInfo", %"struct.v8::internal::wasm::AsmJsParser::VarInfo"* %42, i64 %26
  %44 = icmp eq i64 %26, 0
  br i1 %44, label %54, label %45

45:                                               ; preds = %40, %45
  %46 = phi %"struct.v8::internal::wasm::AsmJsParser::VarInfo"* [ %52, %45 ], [ %42, %40 ]
  %47 = getelementptr inbounds %"struct.v8::internal::wasm::AsmJsParser::VarInfo", %"struct.v8::internal::wasm::AsmJsParser::VarInfo"* %46, i64 0, i32 0
  store %"class.v8::internal::wasm::AsmType"* inttoptr (i64 2147483649 to %"class.v8::internal::wasm::AsmType"*), %"class.v8::internal::wasm::AsmType"** %47, align 8
  %48 = getelementptr inbounds %"struct.v8::internal::wasm::AsmJsParser::VarInfo", %"struct.v8::internal::wasm::AsmJsParser::VarInfo"* %46, i64 0, i32 1
  %49 = getelementptr inbounds %"struct.v8::internal::wasm::AsmJsParser::VarInfo", %"struct.v8::internal::wasm::AsmJsParser::VarInfo"* %46, i64 0, i32 6
  %50 = bitcast %"class.v8::internal::wasm::WasmFunctionBuilder"** %48 to i8*
  tail call void @llvm.memset.p0i8.i64(i8* align 8 %50, i8 0, i64 28, i1 false) #12
  store i8 1, i8* %49, align 4
  %51 = getelementptr inbounds %"struct.v8::internal::wasm::AsmJsParser::VarInfo", %"struct.v8::internal::wasm::AsmJsParser::VarInfo"* %46, i64 0, i32 7
  store i8 0, i8* %51, align 1
  %52 = getelementptr inbounds %"struct.v8::internal::wasm::AsmJsParser::VarInfo", %"struct.v8::internal::wasm::AsmJsParser::VarInfo"* %46, i64 1
  %53 = icmp eq %"struct.v8::internal::wasm::AsmJsParser::VarInfo"* %52, %43
  br i1 %53, label %54, label %45

54:                                               ; preds = %45, %40
  %55 = getelementptr inbounds %"class.v8::internal::Vector.160", %"class.v8::internal::Vector.160"* %7, i64 0, i32 0
  %56 = load i64, i64* %9, align 8
  %57 = mul nuw i64 %56, 40
  %58 = icmp eq i64 %57, 0
  br i1 %58, label %63, label %59

59:                                               ; preds = %54
  %60 = bitcast %"class.v8::internal::Vector.160"* %7 to i8**
  %61 = load i8*, i8** %60, align 8
  %62 = inttoptr i64 %41 to i8*
  tail call void @llvm.memmove.p0i8.p0i8.i64(i8* align 8 %62, i8* align 8 %61, i64 %57, i1 false) #12
  br label %63

63:                                               ; preds = %59, %54
  store %"struct.v8::internal::wasm::AsmJsParser::VarInfo"* %42, %"struct.v8::internal::wasm::AsmJsParser::VarInfo"** %55, align 8
  store i64 %26, i64* %9, align 8
  br label %64

64:                                               ; preds = %20, %63
  %65 = phi %"struct.v8::internal::wasm::AsmJsParser::VarInfo"* [ %22, %20 ], [ %42, %63 ]
  %66 = getelementptr inbounds %"struct.v8::internal::wasm::AsmJsParser::VarInfo", %"struct.v8::internal::wasm::AsmJsParser::VarInfo"* %65, i64 %12, i32 5
  %67 = load i32, i32* %66, align 8
  %68 = icmp eq i32 %67, 4
  br i1 %68, label %280, label %69

69:                                               ; preds = %64
  %70 = load i32, i32* %3, align 8
  %71 = icmp sgt i32 %70, 255
  %72 = select i1 %71, %"class.v8::internal::Vector.160"* %7, %"class.v8::internal::Vector.160"* %8
  %73 = getelementptr inbounds %"class.v8::internal::Vector.160", %"class.v8::internal::Vector.160"* %72, i64 0, i32 1
  %74 = load i64, i64* %73, align 8
  br i1 %71, label %78, label %75

75:                                               ; preds = %69
  %76 = sub nsw i32 -10000, %70
  %77 = sext i32 %76 to i64
  br label %85

78:                                               ; preds = %69
  %79 = add nsw i32 %70, -256
  %80 = sext i32 %79 to i64
  %81 = load i64, i64* %13, align 8
  %82 = icmp ugt i64 %81, %80
  br i1 %82, label %85, label %83

83:                                               ; preds = %78
  %84 = add nuw nsw i64 %80, 1
  store i64 %84, i64* %13, align 8
  br label %85

85:                                               ; preds = %83, %78, %75
  %86 = phi i64 [ %80, %83 ], [ %80, %78 ], [ %77, %75 ]
  %87 = add nsw i64 %86, 1
  %88 = icmp ugt i64 %87, %74
  br i1 %88, label %92, label %89

89:                                               ; preds = %85
  %90 = getelementptr inbounds %"class.v8::internal::Vector.160", %"class.v8::internal::Vector.160"* %72, i64 0, i32 0
  %91 = load %"struct.v8::internal::wasm::AsmJsParser::VarInfo"*, %"struct.v8::internal::wasm::AsmJsParser::VarInfo"** %90, align 8
  br label %133

92:                                               ; preds = %85
  %93 = shl i64 %74, 1
  %94 = icmp ult i64 %93, %87
  %95 = select i1 %94, i64 %87, i64 %93
  %96 = getelementptr inbounds %"class.v8::internal::wasm::AsmJsParser", %"class.v8::internal::wasm::AsmJsParser"* %0, i64 0, i32 0
  %97 = load %"class.v8::internal::Zone"*, %"class.v8::internal::Zone"** %96, align 8
  %98 = mul i64 %95, 40
  %99 = getelementptr inbounds %"class.v8::internal::Zone", %"class.v8::internal::Zone"* %97, i64 0, i32 2
  %100 = load i64, i64* %99, align 8
  %101 = getelementptr inbounds %"class.v8::internal::Zone", %"class.v8::internal::Zone"* %97, i64 0, i32 3
  %102 = load i64, i64* %101, align 8
  %103 = sub i64 %102, %100
  %104 = icmp ugt i64 %98, %103
  br i1 %104, label %105, label %107, !prof !2

105:                                              ; preds = %92
  %106 = tail call i64 @_ZN2v88internal4Zone9NewExpandEm(%"class.v8::internal::Zone"* %97, i64 %98) #12
  br label %109

107:                                              ; preds = %92
  %108 = add i64 %100, %98
  store i64 %108, i64* %99, align 8
  br label %109

109:                                              ; preds = %107, %105
  %110 = phi i64 [ %106, %105 ], [ %100, %107 ]
  %111 = inttoptr i64 %110 to %"struct.v8::internal::wasm::AsmJsParser::VarInfo"*
  %112 = getelementptr inbounds %"struct.v8::internal::wasm::AsmJsParser::VarInfo", %"struct.v8::internal::wasm::AsmJsParser::VarInfo"* %111, i64 %95
  %113 = icmp eq i64 %95, 0
  br i1 %113, label %123, label %114

114:                                              ; preds = %109, %114
  %115 = phi %"struct.v8::internal::wasm::AsmJsParser::VarInfo"* [ %121, %114 ], [ %111, %109 ]
  %116 = getelementptr inbounds %"struct.v8::internal::wasm::AsmJsParser::VarInfo", %"struct.v8::internal::wasm::AsmJsParser::VarInfo"* %115, i64 0, i32 0
  store %"class.v8::internal::wasm::AsmType"* inttoptr (i64 2147483649 to %"class.v8::internal::wasm::AsmType"*), %"class.v8::internal::wasm::AsmType"** %116, align 8
  %117 = getelementptr inbounds %"struct.v8::internal::wasm::AsmJsParser::VarInfo", %"struct.v8::internal::wasm::AsmJsParser::VarInfo"* %115, i64 0, i32 1
  %118 = getelementptr inbounds %"struct.v8::internal::wasm::AsmJsParser::VarInfo", %"struct.v8::internal::wasm::AsmJsParser::VarInfo"* %115, i64 0, i32 6
  %119 = bitcast %"class.v8::internal::wasm::WasmFunctionBuilder"** %117 to i8*
  tail call void @llvm.memset.p0i8.i64(i8* align 8 %119, i8 0, i64 28, i1 false) #12
  store i8 1, i8* %118, align 4
  %120 = getelementptr inbounds %"struct.v8::internal::wasm::AsmJsParser::VarInfo", %"struct.v8::internal::wasm::AsmJsParser::VarInfo"* %115, i64 0, i32 7
  store i8 0, i8* %120, align 1
  %121 = getelementptr inbounds %"struct.v8::internal::wasm::AsmJsParser::VarInfo", %"struct.v8::internal::wasm::AsmJsParser::VarInfo"* %115, i64 1
  %122 = icmp eq %"struct.v8::internal::wasm::AsmJsParser::VarInfo"* %121, %112
  br i1 %122, label %123, label %114

123:                                              ; preds = %114, %109
  %124 = getelementptr inbounds %"class.v8::internal::Vector.160", %"class.v8::internal::Vector.160"* %72, i64 0, i32 0
  %125 = load i64, i64* %73, align 8
  %126 = mul nuw i64 %125, 40
  %127 = icmp eq i64 %126, 0
  br i1 %127, label %132, label %128

128:                                              ; preds = %123
  %129 = bitcast %"class.v8::internal::Vector.160"* %72 to i8**
  %130 = load i8*, i8** %129, align 8
  %131 = inttoptr i64 %110 to i8*
  tail call void @llvm.memmove.p0i8.p0i8.i64(i8* align 8 %131, i8* align 8 %130, i64 %126, i1 false) #12
  br label %132

132:                                              ; preds = %128, %123
  store %"struct.v8::internal::wasm::AsmJsParser::VarInfo"* %111, %"struct.v8::internal::wasm::AsmJsParser::VarInfo"** %124, align 8
  store i64 %95, i64* %73, align 8
  br label %133

133:                                              ; preds = %89, %132
  %134 = phi %"struct.v8::internal::wasm::AsmJsParser::VarInfo"* [ %91, %89 ], [ %111, %132 ]
  %135 = getelementptr inbounds %"struct.v8::internal::wasm::AsmJsParser::VarInfo", %"struct.v8::internal::wasm::AsmJsParser::VarInfo"* %134, i64 %86, i32 5
  %136 = load i32, i32* %135, align 8
  %137 = icmp sgt i32 %136, 5
  br i1 %137, label %280, label %138

138:                                              ; preds = %133
  %139 = load i32, i32* %3, align 8
  %140 = icmp sgt i32 %139, 255
  %141 = select i1 %140, %"class.v8::internal::Vector.160"* %7, %"class.v8::internal::Vector.160"* %8
  %142 = getelementptr inbounds %"class.v8::internal::Vector.160", %"class.v8::internal::Vector.160"* %141, i64 0, i32 1
  %143 = load i64, i64* %142, align 8
  br i1 %140, label %147, label %144

144:                                              ; preds = %138
  %145 = sub nsw i32 -10000, %139
  %146 = sext i32 %145 to i64
  br label %154

147:                                              ; preds = %138
  %148 = add nsw i32 %139, -256
  %149 = sext i32 %148 to i64
  %150 = load i64, i64* %13, align 8
  %151 = icmp ugt i64 %150, %149
  br i1 %151, label %154, label %152

152:                                              ; preds = %147
  %153 = add nuw nsw i64 %149, 1
  store i64 %153, i64* %13, align 8
  br label %154

154:                                              ; preds = %152, %147, %144
  %155 = phi i64 [ %149, %152 ], [ %149, %147 ], [ %146, %144 ]
  %156 = add nsw i64 %155, 1
  %157 = icmp ugt i64 %156, %143
  br i1 %157, label %161, label %158

158:                                              ; preds = %154
  %159 = getelementptr inbounds %"class.v8::internal::Vector.160", %"class.v8::internal::Vector.160"* %141, i64 0, i32 0
  %160 = load %"struct.v8::internal::wasm::AsmJsParser::VarInfo"*, %"struct.v8::internal::wasm::AsmJsParser::VarInfo"** %159, align 8
  br label %202

161:                                              ; preds = %154
  %162 = shl i64 %143, 1
  %163 = icmp ult i64 %162, %156
  %164 = select i1 %163, i64 %156, i64 %162
  %165 = getelementptr inbounds %"class.v8::internal::wasm::AsmJsParser", %"class.v8::internal::wasm::AsmJsParser"* %0, i64 0, i32 0
  %166 = load %"class.v8::internal::Zone"*, %"class.v8::internal::Zone"** %165, align 8
  %167 = mul i64 %164, 40
  %168 = getelementptr inbounds %"class.v8::internal::Zone", %"class.v8::internal::Zone"* %166, i64 0, i32 2
  %169 = load i64, i64* %168, align 8
  %170 = getelementptr inbounds %"class.v8::internal::Zone", %"class.v8::internal::Zone"* %166, i64 0, i32 3
  %171 = load i64, i64* %170, align 8
  %172 = sub i64 %171, %169
  %173 = icmp ugt i64 %167, %172
  br i1 %173, label %174, label %176, !prof !2

174:                                              ; preds = %161
  %175 = tail call i64 @_ZN2v88internal4Zone9NewExpandEm(%"class.v8::internal::Zone"* %166, i64 %167) #12
  br label %178

176:                                              ; preds = %161
  %177 = add i64 %169, %167
  store i64 %177, i64* %168, align 8
  br label %178

178:                                              ; preds = %176, %174
  %179 = phi i64 [ %175, %174 ], [ %169, %176 ]
  %180 = inttoptr i64 %179 to %"struct.v8::internal::wasm::AsmJsParser::VarInfo"*
  %181 = getelementptr inbounds %"struct.v8::internal::wasm::AsmJsParser::VarInfo", %"struct.v8::internal::wasm::AsmJsParser::VarInfo"* %180, i64 %164
  %182 = icmp eq i64 %164, 0
  br i1 %182, label %192, label %183

183:                                              ; preds = %178, %183
  %184 = phi %"struct.v8::internal::wasm::AsmJsParser::VarInfo"* [ %190, %183 ], [ %180, %178 ]
  %185 = getelementptr inbounds %"struct.v8::internal::wasm::AsmJsParser::VarInfo", %"struct.v8::internal::wasm::AsmJsParser::VarInfo"* %184, i64 0, i32 0
  store %"class.v8::internal::wasm::AsmType"* inttoptr (i64 2147483649 to %"class.v8::internal::wasm::AsmType"*), %"class.v8::internal::wasm::AsmType"** %185, align 8
  %186 = getelementptr inbounds %"struct.v8::internal::wasm::AsmJsParser::VarInfo", %"struct.v8::internal::wasm::AsmJsParser::VarInfo"* %184, i64 0, i32 1
  %187 = getelementptr inbounds %"struct.v8::internal::wasm::AsmJsParser::VarInfo", %"struct.v8::internal::wasm::AsmJsParser::VarInfo"* %184, i64 0, i32 6
  %188 = bitcast %"class.v8::internal::wasm::WasmFunctionBuilder"** %186 to i8*
  tail call void @llvm.memset.p0i8.i64(i8* align 8 %188, i8 0, i64 28, i1 false) #12
  store i8 1, i8* %187, align 4
  %189 = getelementptr inbounds %"struct.v8::internal::wasm::AsmJsParser::VarInfo", %"struct.v8::internal::wasm::AsmJsParser::VarInfo"* %184, i64 0, i32 7
  store i8 0, i8* %189, align 1
  %190 = getelementptr inbounds %"struct.v8::internal::wasm::AsmJsParser::VarInfo", %"struct.v8::internal::wasm::AsmJsParser::VarInfo"* %184, i64 1
  %191 = icmp eq %"struct.v8::internal::wasm::AsmJsParser::VarInfo"* %190, %181
  br i1 %191, label %192, label %183

192:                                              ; preds = %183, %178
  %193 = getelementptr inbounds %"class.v8::internal::Vector.160", %"class.v8::internal::Vector.160"* %141, i64 0, i32 0
  %194 = load i64, i64* %142, align 8
  %195 = mul nuw i64 %194, 40
  %196 = icmp eq i64 %195, 0
  br i1 %196, label %201, label %197

197:                                              ; preds = %192
  %198 = bitcast %"class.v8::internal::Vector.160"* %141 to i8**
  %199 = load i8*, i8** %198, align 8
  %200 = inttoptr i64 %179 to i8*
  tail call void @llvm.memmove.p0i8.p0i8.i64(i8* align 8 %200, i8* align 8 %199, i64 %195, i1 false) #12
  br label %201

201:                                              ; preds = %197, %192
  store %"struct.v8::internal::wasm::AsmJsParser::VarInfo"* %180, %"struct.v8::internal::wasm::AsmJsParser::VarInfo"** %193, align 8
  store i64 %164, i64* %142, align 8
  br label %202

202:                                              ; preds = %158, %201
  %203 = phi %"struct.v8::internal::wasm::AsmJsParser::VarInfo"* [ %160, %158 ], [ %180, %201 ]
  %204 = getelementptr inbounds %"struct.v8::internal::wasm::AsmJsParser::VarInfo", %"struct.v8::internal::wasm::AsmJsParser::VarInfo"* %203, i64 %155, i32 5
  %205 = load i32, i32* %204, align 8
  %206 = icmp eq i32 %205, 0
  br i1 %206, label %276, label %207

207:                                              ; preds = %202
  %208 = load i32, i32* %3, align 8
  %209 = icmp sgt i32 %208, 255
  %210 = select i1 %209, %"class.v8::internal::Vector.160"* %7, %"class.v8::internal::Vector.160"* %8
  %211 = getelementptr inbounds %"class.v8::internal::Vector.160", %"class.v8::internal::Vector.160"* %210, i64 0, i32 1
  %212 = load i64, i64* %211, align 8
  br i1 %209, label %216, label %213

213:                                              ; preds = %207
  %214 = sub nsw i32 -10000, %208
  %215 = sext i32 %214 to i64
  br label %223

216:                                              ; preds = %207
  %217 = add nsw i32 %208, -256
  %218 = sext i32 %217 to i64
  %219 = load i64, i64* %13, align 8
  %220 = icmp ugt i64 %219, %218
  br i1 %220, label %223, label %221

221:                                              ; preds = %216
  %222 = add nuw nsw i64 %218, 1
  store i64 %222, i64* %13, align 8
  br label %223

223:                                              ; preds = %221, %216, %213
  %224 = phi i64 [ %218, %221 ], [ %218, %216 ], [ %215, %213 ]
  %225 = add nsw i64 %224, 1
  %226 = icmp ugt i64 %225, %212
  br i1 %226, label %230, label %227

227:                                              ; preds = %223
  %228 = getelementptr inbounds %"class.v8::internal::Vector.160", %"class.v8::internal::Vector.160"* %210, i64 0, i32 0
  %229 = load %"struct.v8::internal::wasm::AsmJsParser::VarInfo"*, %"struct.v8::internal::wasm::AsmJsParser::VarInfo"** %228, align 8
  br label %271

230:                                              ; preds = %223
  %231 = shl i64 %212, 1
  %232 = icmp ult i64 %231, %225
  %233 = select i1 %232, i64 %225, i64 %231
  %234 = getelementptr inbounds %"class.v8::internal::wasm::AsmJsParser", %"class.v8::internal::wasm::AsmJsParser"* %0, i64 0, i32 0
  %235 = load %"class.v8::internal::Zone"*, %"class.v8::internal::Zone"** %234, align 8
  %236 = mul i64 %233, 40
  %237 = getelementptr inbounds %"class.v8::internal::Zone", %"class.v8::internal::Zone"* %235, i64 0, i32 2
  %238 = load i64, i64* %237, align 8
  %239 = getelementptr inbounds %"class.v8::internal::Zone", %"class.v8::internal::Zone"* %235, i64 0, i32 3
  %240 = load i64, i64* %239, align 8
  %241 = sub i64 %240, %238
  %242 = icmp ugt i64 %236, %241
  br i1 %242, label %243, label %245, !prof !2

243:                                              ; preds = %230
  %244 = tail call i64 @_ZN2v88internal4Zone9NewExpandEm(%"class.v8::internal::Zone"* %235, i64 %236) #12
  br label %247

245:                                              ; preds = %230
  %246 = add i64 %238, %236
  store i64 %246, i64* %237, align 8
  br label %247

247:                                              ; preds = %245, %243
  %248 = phi i64 [ %244, %243 ], [ %238, %245 ]
  %249 = inttoptr i64 %248 to %"struct.v8::internal::wasm::AsmJsParser::VarInfo"*
  %250 = getelementptr inbounds %"struct.v8::internal::wasm::AsmJsParser::VarInfo", %"struct.v8::internal::wasm::AsmJsParser::VarInfo"* %249, i64 %233
  %251 = icmp eq i64 %233, 0
  br i1 %251, label %261, label %252

252:                                              ; preds = %247, %252
  %253 = phi %"struct.v8::internal::wasm::AsmJsParser::VarInfo"* [ %259, %252 ], [ %249, %247 ]
  %254 = getelementptr inbounds %"struct.v8::internal::wasm::AsmJsParser::VarInfo", %"struct.v8::internal::wasm::AsmJsParser::VarInfo"* %253, i64 0, i32 0
  store %"class.v8::internal::wasm::AsmType"* inttoptr (i64 2147483649 to %"class.v8::internal::wasm::AsmType"*), %"class.v8::internal::wasm::AsmType"** %254, align 8
  %255 = getelementptr inbounds %"struct.v8::internal::wasm::AsmJsParser::VarInfo", %"struct.v8::internal::wasm::AsmJsParser::VarInfo"* %253, i64 0, i32 1
  %256 = getelementptr inbounds %"struct.v8::internal::wasm::AsmJsParser::VarInfo", %"struct.v8::internal::wasm::AsmJsParser::VarInfo"* %253, i64 0, i32 6
  %257 = bitcast %"class.v8::internal::wasm::WasmFunctionBuilder"** %255 to i8*
  tail call void @llvm.memset.p0i8.i64(i8* align 8 %257, i8 0, i64 28, i1 false) #12
  store i8 1, i8* %256, align 4
  %258 = getelementptr inbounds %"struct.v8::internal::wasm::AsmJsParser::VarInfo", %"struct.v8::internal::wasm::AsmJsParser::VarInfo"* %253, i64 0, i32 7
  store i8 0, i8* %258, align 1
  %259 = getelementptr inbounds %"struct.v8::internal::wasm::AsmJsParser::VarInfo", %"struct.v8::internal::wasm::AsmJsParser::VarInfo"* %253, i64 1
  %260 = icmp eq %"struct.v8::internal::wasm::AsmJsParser::VarInfo"* %259, %250
  br i1 %260, label %261, label %252

261:                                              ; preds = %252, %247
  %262 = getelementptr inbounds %"class.v8::internal::Vector.160", %"class.v8::internal::Vector.160"* %210, i64 0, i32 0
  %263 = load i64, i64* %211, align 8
  %264 = mul nuw i64 %263, 40
  %265 = icmp eq i64 %264, 0
  br i1 %265, label %270, label %266

266:                                              ; preds = %261
  %267 = bitcast %"class.v8::internal::Vector.160"* %210 to i8**
  %268 = load i8*, i8** %267, align 8
  %269 = inttoptr i64 %248 to i8*
  tail call void @llvm.memmove.p0i8.p0i8.i64(i8* align 8 %269, i8* align 8 %268, i64 %264, i1 false) #12
  br label %270

270:                                              ; preds = %266, %261
  store %"struct.v8::internal::wasm::AsmJsParser::VarInfo"* %249, %"struct.v8::internal::wasm::AsmJsParser::VarInfo"** %262, align 8
  store i64 %233, i64* %211, align 8
  br label %271

271:                                              ; preds = %227, %270
  %272 = phi %"struct.v8::internal::wasm::AsmJsParser::VarInfo"* [ %229, %227 ], [ %249, %270 ]
  %273 = getelementptr inbounds %"struct.v8::internal::wasm::AsmJsParser::VarInfo", %"struct.v8::internal::wasm::AsmJsParser::VarInfo"* %272, i64 %224, i32 5
  %274 = load i32, i32* %273, align 8
  %275 = icmp eq i32 %274, 5
  br i1 %275, label %276, label %280

276:                                              ; preds = %271, %202
  tail call void @_ZN2v88internal12AsmJsScanner4NextEv(%"class.v8::internal::AsmJsScanner"* %2) #12
  %277 = load i32, i32* %3, align 8
  switch i32 %277, label %279 [
    i32 40, label %278
    i32 91, label %278
  ]

278:                                              ; preds = %276, %276
  tail call void @_ZN2v88internal12AsmJsScanner6RewindEv(%"class.v8::internal::AsmJsScanner"* %2) #12
  br label %280

279:                                              ; preds = %276
  tail call void @_ZN2v88internal12AsmJsScanner6RewindEv(%"class.v8::internal::AsmJsScanner"* %2) #12
  br label %280

280:                                              ; preds = %271, %279, %133, %64, %1, %278
  %281 = phi i1 [ true, %278 ], [ false, %1 ], [ true, %64 ], [ true, %133 ], [ false, %279 ], [ false, %271 ]
  ret i1 %281
}

; Function Attrs: nounwind ssp uwtable
define hidden %"class.v8::internal::wasm::AsmType"* @_ZN2v88internal4wasm11AsmJsParser12ValidateCallEv(%"class.v8::internal::wasm::AsmJsParser"*) local_unnamed_addr #0 align 2 {
  %2 = alloca %"class.std::__1::tuple", align 8
  %3 = alloca %"class.std::__1::tuple.247", align 1
  %4 = alloca %"class.v8::internal::wasm::AsmJsParser::CachedVector", align 8
  %5 = alloca %"class.v8::internal::wasm::AsmJsParser::CachedVector", align 8
  %6 = getelementptr inbounds %"class.v8::internal::wasm::AsmJsParser", %"class.v8::internal::wasm::AsmJsParser"* %0, i64 0, i32 34
  %7 = load %"class.v8::internal::wasm::AsmType"*, %"class.v8::internal::wasm::AsmType"** %6, align 8
  store %"class.v8::internal::wasm::AsmType"* null, %"class.v8::internal::wasm::AsmType"** %6, align 8
  %8 = getelementptr inbounds %"class.v8::internal::wasm::AsmJsParser", %"class.v8::internal::wasm::AsmJsParser"* %0, i64 0, i32 1
  %9 = getelementptr inbounds %"class.v8::internal::wasm::AsmJsParser", %"class.v8::internal::wasm::AsmJsParser"* %0, i64 0, i32 1, i32 5
  %10 = load i64, i64* %9, align 8
  %11 = getelementptr inbounds %"class.v8::internal::wasm::AsmJsParser", %"class.v8::internal::wasm::AsmJsParser"* %0, i64 0, i32 35
  %12 = load i64, i64* %11, align 8
  %13 = getelementptr inbounds %"class.v8::internal::wasm::AsmJsParser", %"class.v8::internal::wasm::AsmJsParser"* %0, i64 0, i32 37
  %14 = load i64, i64* %13, align 8
  %15 = icmp eq i64 %14, %10
  %16 = getelementptr inbounds %"class.v8::internal::wasm::AsmJsParser", %"class.v8::internal::wasm::AsmJsParser"* %0, i64 0, i32 1, i32 1
  %17 = load i32, i32* %16, align 8
  tail call void @_ZN2v88internal12AsmJsScanner4NextEv(%"class.v8::internal::AsmJsScanner"* %8) #12
  %18 = load i32, i32* %16, align 8
  %19 = icmp eq i32 %18, 91
  br i1 %19, label %20, label %199

20:                                               ; preds = %1
  tail call void @_ZN2v88internal12AsmJsScanner4NextEv(%"class.v8::internal::AsmJsScanner"* %8) #12
  %21 = tail call i64 @_ZN2v88internal23GetCurrentStackPositionEv() #12
  %22 = getelementptr inbounds %"class.v8::internal::wasm::AsmJsParser", %"class.v8::internal::wasm::AsmJsParser"* %0, i64 0, i32 5
  %23 = load i64, i64* %22, align 8
  %24 = icmp ult i64 %21, %23
  br i1 %24, label %25, label %31

25:                                               ; preds = %20
  %26 = getelementptr inbounds %"class.v8::internal::wasm::AsmJsParser", %"class.v8::internal::wasm::AsmJsParser"* %0, i64 0, i32 17
  store i8 1, i8* %26, align 4
  %27 = getelementptr inbounds %"class.v8::internal::wasm::AsmJsParser", %"class.v8::internal::wasm::AsmJsParser"* %0, i64 0, i32 18
  store i8* getelementptr inbounds ([44 x i8], [44 x i8]* @.str.2, i64 0, i64 0), i8** %27, align 8
  %28 = load i64, i64* %9, align 8
  %29 = trunc i64 %28 to i32
  %30 = getelementptr inbounds %"class.v8::internal::wasm::AsmJsParser", %"class.v8::internal::wasm::AsmJsParser"* %0, i64 0, i32 19
  store i32 %29, i32* %30, align 8
  br label %2503

31:                                               ; preds = %20
  %32 = tail call %"class.v8::internal::wasm::AsmType"* @_ZN2v88internal4wasm11AsmJsParser18EqualityExpressionEv(%"class.v8::internal::wasm::AsmJsParser"* %0)
  %33 = getelementptr inbounds %"class.v8::internal::wasm::AsmJsParser", %"class.v8::internal::wasm::AsmJsParser"* %0, i64 0, i32 17
  %34 = load i8, i8* %33, align 4, !range !69
  %35 = icmp eq i8 %34, 0
  br i1 %35, label %36, label %2503

36:                                               ; preds = %31
  %37 = tail call zeroext i1 @_ZN2v88internal4wasm7AsmType3IsAEPS2_(%"class.v8::internal::wasm::AsmType"* %32, %"class.v8::internal::wasm::AsmType"* nonnull inttoptr (i64 257 to %"class.v8::internal::wasm::AsmType"*)) #12
  br i1 %37, label %43, label %38

38:                                               ; preds = %36
  store i8 1, i8* %33, align 4
  %39 = getelementptr inbounds %"class.v8::internal::wasm::AsmJsParser", %"class.v8::internal::wasm::AsmJsParser"* %0, i64 0, i32 18
  store i8* getelementptr inbounds ([22 x i8], [22 x i8]* @.str.92, i64 0, i64 0), i8** %39, align 8
  %40 = load i64, i64* %9, align 8
  %41 = trunc i64 %40 to i32
  %42 = getelementptr inbounds %"class.v8::internal::wasm::AsmJsParser", %"class.v8::internal::wasm::AsmJsParser"* %0, i64 0, i32 19
  store i32 %41, i32* %42, align 8
  br label %2503

43:                                               ; preds = %36
  %44 = load i32, i32* %16, align 8
  %45 = icmp eq i32 %44, 38
  br i1 %45, label %51, label %46

46:                                               ; preds = %43
  store i8 1, i8* %33, align 4
  %47 = getelementptr inbounds %"class.v8::internal::wasm::AsmJsParser", %"class.v8::internal::wasm::AsmJsParser"* %0, i64 0, i32 18
  store i8* getelementptr inbounds ([17 x i8], [17 x i8]* @.str.3, i64 0, i64 0), i8** %47, align 8
  %48 = load i64, i64* %9, align 8
  %49 = trunc i64 %48 to i32
  %50 = getelementptr inbounds %"class.v8::internal::wasm::AsmJsParser", %"class.v8::internal::wasm::AsmJsParser"* %0, i64 0, i32 19
  store i32 %49, i32* %50, align 8
  br label %2503

51:                                               ; preds = %43
  tail call void @_ZN2v88internal12AsmJsScanner4NextEv(%"class.v8::internal::AsmJsScanner"* %8) #12
  %52 = load i32, i32* %16, align 8
  %53 = icmp eq i32 %52, -3
  br i1 %53, label %59, label %54

54:                                               ; preds = %51
  store i8 1, i8* %33, align 4
  %55 = getelementptr inbounds %"class.v8::internal::wasm::AsmJsParser", %"class.v8::internal::wasm::AsmJsParser"* %0, i64 0, i32 18
  store i8* getelementptr inbounds ([22 x i8], [22 x i8]* @.str.93, i64 0, i64 0), i8** %55, align 8
  %56 = load i64, i64* %9, align 8
  %57 = trunc i64 %56 to i32
  %58 = getelementptr inbounds %"class.v8::internal::wasm::AsmJsParser", %"class.v8::internal::wasm::AsmJsParser"* %0, i64 0, i32 19
  store i32 %57, i32* %58, align 8
  br label %2503

59:                                               ; preds = %51
  %60 = getelementptr inbounds %"class.v8::internal::wasm::AsmJsParser", %"class.v8::internal::wasm::AsmJsParser"* %0, i64 0, i32 1, i32 19
  %61 = load i32, i32* %60, align 8
  tail call void @_ZN2v88internal12AsmJsScanner4NextEv(%"class.v8::internal::AsmJsScanner"* %8) #12
  %62 = add i32 %61, 1
  %63 = tail call i32 @llvm.ctpop.i32(i32 %62) #12, !range !247
  %64 = icmp eq i32 %63, 1
  br i1 %64, label %70, label %65

65:                                               ; preds = %59
  store i8 1, i8* %33, align 4
  %66 = getelementptr inbounds %"class.v8::internal::wasm::AsmJsParser", %"class.v8::internal::wasm::AsmJsParser"* %0, i64 0, i32 18
  store i8* getelementptr inbounds ([25 x i8], [25 x i8]* @.str.94, i64 0, i64 0), i8** %66, align 8
  %67 = load i64, i64* %9, align 8
  %68 = trunc i64 %67 to i32
  %69 = getelementptr inbounds %"class.v8::internal::wasm::AsmJsParser", %"class.v8::internal::wasm::AsmJsParser"* %0, i64 0, i32 19
  store i32 %68, i32* %69, align 8
  br label %2503

70:                                               ; preds = %59
  %71 = getelementptr inbounds %"class.v8::internal::wasm::AsmJsParser", %"class.v8::internal::wasm::AsmJsParser"* %0, i64 0, i32 3
  %72 = load %"class.v8::internal::wasm::WasmFunctionBuilder"*, %"class.v8::internal::wasm::WasmFunctionBuilder"** %71, align 8
  tail call void @_ZN2v88internal4wasm19WasmFunctionBuilder12EmitI32ConstEi(%"class.v8::internal::wasm::WasmFunctionBuilder"* %72, i32 %61) #12
  %73 = load %"class.v8::internal::wasm::WasmFunctionBuilder"*, %"class.v8::internal::wasm::WasmFunctionBuilder"** %71, align 8
  tail call void @_ZN2v88internal4wasm19WasmFunctionBuilder4EmitENS1_10WasmOpcodeE(%"class.v8::internal::wasm::WasmFunctionBuilder"* %73, i32 113) #12
  %74 = load i32, i32* %16, align 8
  %75 = icmp eq i32 %74, 93
  br i1 %75, label %81, label %76

76:                                               ; preds = %70
  store i8 1, i8* %33, align 4
  %77 = getelementptr inbounds %"class.v8::internal::wasm::AsmJsParser", %"class.v8::internal::wasm::AsmJsParser"* %0, i64 0, i32 18
  store i8* getelementptr inbounds ([17 x i8], [17 x i8]* @.str.3, i64 0, i64 0), i8** %77, align 8
  %78 = load i64, i64* %9, align 8
  %79 = trunc i64 %78 to i32
  %80 = getelementptr inbounds %"class.v8::internal::wasm::AsmJsParser", %"class.v8::internal::wasm::AsmJsParser"* %0, i64 0, i32 19
  store i32 %79, i32* %80, align 8
  br label %2503

81:                                               ; preds = %70
  tail call void @_ZN2v88internal12AsmJsScanner4NextEv(%"class.v8::internal::AsmJsScanner"* %8) #12
  %82 = icmp sgt i32 %17, 255
  %83 = getelementptr inbounds %"class.v8::internal::wasm::AsmJsParser", %"class.v8::internal::wasm::AsmJsParser"* %0, i64 0, i32 7
  %84 = getelementptr inbounds %"class.v8::internal::wasm::AsmJsParser", %"class.v8::internal::wasm::AsmJsParser"* %0, i64 0, i32 8
  %85 = select i1 %82, %"class.v8::internal::Vector.160"* %83, %"class.v8::internal::Vector.160"* %84
  %86 = getelementptr inbounds %"class.v8::internal::Vector.160", %"class.v8::internal::Vector.160"* %85, i64 0, i32 1
  %87 = load i64, i64* %86, align 8
  br i1 %82, label %91, label %88

88:                                               ; preds = %81
  %89 = sub nsw i32 -10000, %17
  %90 = sext i32 %89 to i64
  br label %99

91:                                               ; preds = %81
  %92 = add nsw i32 %17, -256
  %93 = sext i32 %92 to i64
  %94 = getelementptr inbounds %"class.v8::internal::wasm::AsmJsParser", %"class.v8::internal::wasm::AsmJsParser"* %0, i64 0, i32 9
  %95 = load i64, i64* %94, align 8
  %96 = icmp ugt i64 %95, %93
  br i1 %96, label %99, label %97

97:                                               ; preds = %91
  %98 = add nuw nsw i64 %93, 1
  store i64 %98, i64* %94, align 8
  br label %99

99:                                               ; preds = %97, %91, %88
  %100 = phi i64 [ %93, %97 ], [ %93, %91 ], [ %90, %88 ]
  %101 = add nsw i64 %100, 1
  %102 = icmp ugt i64 %101, %87
  br i1 %102, label %106, label %103

103:                                              ; preds = %99
  %104 = getelementptr inbounds %"class.v8::internal::Vector.160", %"class.v8::internal::Vector.160"* %85, i64 0, i32 0
  %105 = load %"struct.v8::internal::wasm::AsmJsParser::VarInfo"*, %"struct.v8::internal::wasm::AsmJsParser::VarInfo"** %104, align 8
  br label %147

106:                                              ; preds = %99
  %107 = shl i64 %87, 1
  %108 = icmp ult i64 %107, %101
  %109 = select i1 %108, i64 %101, i64 %107
  %110 = getelementptr inbounds %"class.v8::internal::wasm::AsmJsParser", %"class.v8::internal::wasm::AsmJsParser"* %0, i64 0, i32 0
  %111 = load %"class.v8::internal::Zone"*, %"class.v8::internal::Zone"** %110, align 8
  %112 = mul i64 %109, 40
  %113 = getelementptr inbounds %"class.v8::internal::Zone", %"class.v8::internal::Zone"* %111, i64 0, i32 2
  %114 = load i64, i64* %113, align 8
  %115 = getelementptr inbounds %"class.v8::internal::Zone", %"class.v8::internal::Zone"* %111, i64 0, i32 3
  %116 = load i64, i64* %115, align 8
  %117 = sub i64 %116, %114
  %118 = icmp ugt i64 %112, %117
  br i1 %118, label %119, label %121, !prof !2

119:                                              ; preds = %106
  %120 = tail call i64 @_ZN2v88internal4Zone9NewExpandEm(%"class.v8::internal::Zone"* %111, i64 %112) #12
  br label %123

121:                                              ; preds = %106
  %122 = add i64 %114, %112
  store i64 %122, i64* %113, align 8
  br label %123

123:                                              ; preds = %121, %119
  %124 = phi i64 [ %120, %119 ], [ %114, %121 ]
  %125 = inttoptr i64 %124 to %"struct.v8::internal::wasm::AsmJsParser::VarInfo"*
  %126 = getelementptr inbounds %"struct.v8::internal::wasm::AsmJsParser::VarInfo", %"struct.v8::internal::wasm::AsmJsParser::VarInfo"* %125, i64 %109
  %127 = icmp eq i64 %109, 0
  br i1 %127, label %137, label %128

128:                                              ; preds = %123, %128
  %129 = phi %"struct.v8::internal::wasm::AsmJsParser::VarInfo"* [ %135, %128 ], [ %125, %123 ]
  %130 = getelementptr inbounds %"struct.v8::internal::wasm::AsmJsParser::VarInfo", %"struct.v8::internal::wasm::AsmJsParser::VarInfo"* %129, i64 0, i32 0
  store %"class.v8::internal::wasm::AsmType"* inttoptr (i64 2147483649 to %"class.v8::internal::wasm::AsmType"*), %"class.v8::internal::wasm::AsmType"** %130, align 8
  %131 = getelementptr inbounds %"struct.v8::internal::wasm::AsmJsParser::VarInfo", %"struct.v8::internal::wasm::AsmJsParser::VarInfo"* %129, i64 0, i32 1
  %132 = getelementptr inbounds %"struct.v8::internal::wasm::AsmJsParser::VarInfo", %"struct.v8::internal::wasm::AsmJsParser::VarInfo"* %129, i64 0, i32 6
  %133 = bitcast %"class.v8::internal::wasm::WasmFunctionBuilder"** %131 to i8*
  tail call void @llvm.memset.p0i8.i64(i8* align 8 %133, i8 0, i64 28, i1 false) #12
  store i8 1, i8* %132, align 4
  %134 = getelementptr inbounds %"struct.v8::internal::wasm::AsmJsParser::VarInfo", %"struct.v8::internal::wasm::AsmJsParser::VarInfo"* %129, i64 0, i32 7
  store i8 0, i8* %134, align 1
  %135 = getelementptr inbounds %"struct.v8::internal::wasm::AsmJsParser::VarInfo", %"struct.v8::internal::wasm::AsmJsParser::VarInfo"* %129, i64 1
  %136 = icmp eq %"struct.v8::internal::wasm::AsmJsParser::VarInfo"* %135, %126
  br i1 %136, label %137, label %128

137:                                              ; preds = %128, %123
  %138 = getelementptr inbounds %"class.v8::internal::Vector.160", %"class.v8::internal::Vector.160"* %85, i64 0, i32 0
  %139 = load i64, i64* %86, align 8
  %140 = mul nuw i64 %139, 40
  %141 = icmp eq i64 %140, 0
  br i1 %141, label %146, label %142

142:                                              ; preds = %137
  %143 = bitcast %"class.v8::internal::Vector.160"* %85 to i8**
  %144 = load i8*, i8** %143, align 8
  %145 = inttoptr i64 %124 to i8*
  tail call void @llvm.memmove.p0i8.p0i8.i64(i8* align 8 %145, i8* align 8 %144, i64 %140, i1 false) #12
  br label %146

146:                                              ; preds = %142, %137
  store %"struct.v8::internal::wasm::AsmJsParser::VarInfo"* %125, %"struct.v8::internal::wasm::AsmJsParser::VarInfo"** %138, align 8
  store i64 %109, i64* %86, align 8
  br label %147

147:                                              ; preds = %103, %146
  %148 = phi %"struct.v8::internal::wasm::AsmJsParser::VarInfo"* [ %105, %103 ], [ %125, %146 ]
  %149 = getelementptr inbounds %"struct.v8::internal::wasm::AsmJsParser::VarInfo", %"struct.v8::internal::wasm::AsmJsParser::VarInfo"* %148, i64 %100, i32 5
  %150 = load i32, i32* %149, align 8
  switch i32 %150, label %165 [
    i32 0, label %151
    i32 5, label %170
  ]

151:                                              ; preds = %147
  %152 = getelementptr inbounds %"class.v8::internal::wasm::AsmJsParser", %"class.v8::internal::wasm::AsmJsParser"* %0, i64 0, i32 2
  %153 = load %"class.v8::internal::wasm::WasmModuleBuilder"*, %"class.v8::internal::wasm::WasmModuleBuilder"** %152, align 8
  %154 = tail call i32 @_ZN2v88internal4wasm17WasmModuleBuilder25AllocateIndirectFunctionsEj(%"class.v8::internal::wasm::WasmModuleBuilder"* %153, i32 %62) #12
  %155 = icmp eq i32 %154, -1
  br i1 %155, label %160, label %156

156:                                              ; preds = %151
  store i32 5, i32* %149, align 8
  %157 = getelementptr inbounds %"struct.v8::internal::wasm::AsmJsParser::VarInfo", %"struct.v8::internal::wasm::AsmJsParser::VarInfo"* %148, i64 %100, i32 3
  store i32 %61, i32* %157, align 8
  %158 = getelementptr inbounds %"struct.v8::internal::wasm::AsmJsParser::VarInfo", %"struct.v8::internal::wasm::AsmJsParser::VarInfo"* %148, i64 %100, i32 4
  store i32 %154, i32* %158, align 4
  %159 = getelementptr inbounds %"struct.v8::internal::wasm::AsmJsParser::VarInfo", %"struct.v8::internal::wasm::AsmJsParser::VarInfo"* %148, i64 %100, i32 6
  store i8 0, i8* %159, align 4
  br label %182

160:                                              ; preds = %151
  store i8 1, i8* %33, align 4
  %161 = getelementptr inbounds %"class.v8::internal::wasm::AsmJsParser", %"class.v8::internal::wasm::AsmJsParser"* %0, i64 0, i32 18
  store i8* getelementptr inbounds ([37 x i8], [37 x i8]* @.str.95, i64 0, i64 0), i8** %161, align 8
  %162 = load i64, i64* %9, align 8
  %163 = trunc i64 %162 to i32
  %164 = getelementptr inbounds %"class.v8::internal::wasm::AsmJsParser", %"class.v8::internal::wasm::AsmJsParser"* %0, i64 0, i32 19
  store i32 %163, i32* %164, align 8
  br label %2503

165:                                              ; preds = %147
  store i8 1, i8* %33, align 4
  %166 = getelementptr inbounds %"class.v8::internal::wasm::AsmJsParser", %"class.v8::internal::wasm::AsmJsParser"* %0, i64 0, i32 18
  store i8* getelementptr inbounds ([20 x i8], [20 x i8]* @.str.96, i64 0, i64 0), i8** %166, align 8
  %167 = load i64, i64* %9, align 8
  %168 = trunc i64 %167 to i32
  %169 = getelementptr inbounds %"class.v8::internal::wasm::AsmJsParser", %"class.v8::internal::wasm::AsmJsParser"* %0, i64 0, i32 19
  store i32 %168, i32* %169, align 8
  br label %2503

170:                                              ; preds = %147
  %171 = getelementptr inbounds %"struct.v8::internal::wasm::AsmJsParser::VarInfo", %"struct.v8::internal::wasm::AsmJsParser::VarInfo"* %148, i64 %100, i32 3
  %172 = load i32, i32* %171, align 8
  %173 = icmp eq i32 %172, %61
  br i1 %173, label %174, label %177

174:                                              ; preds = %170
  %175 = getelementptr inbounds %"struct.v8::internal::wasm::AsmJsParser::VarInfo", %"struct.v8::internal::wasm::AsmJsParser::VarInfo"* %148, i64 %100, i32 4
  %176 = load i32, i32* %175, align 4
  br label %182

177:                                              ; preds = %170
  store i8 1, i8* %33, align 4
  %178 = getelementptr inbounds %"class.v8::internal::wasm::AsmJsParser", %"class.v8::internal::wasm::AsmJsParser"* %0, i64 0, i32 18
  store i8* getelementptr inbounds ([19 x i8], [19 x i8]* @.str.97, i64 0, i64 0), i8** %178, align 8
  %179 = load i64, i64* %9, align 8
  %180 = trunc i64 %179 to i32
  %181 = getelementptr inbounds %"class.v8::internal::wasm::AsmJsParser", %"class.v8::internal::wasm::AsmJsParser"* %0, i64 0, i32 19
  store i32 %180, i32* %181, align 8
  br label %2503

182:                                              ; preds = %174, %156
  %183 = phi i32 [ %176, %174 ], [ %154, %156 ]
  %184 = load %"class.v8::internal::wasm::WasmFunctionBuilder"*, %"class.v8::internal::wasm::WasmFunctionBuilder"** %71, align 8
  tail call void @_ZN2v88internal4wasm19WasmFunctionBuilder12EmitI32ConstEi(%"class.v8::internal::wasm::WasmFunctionBuilder"* %184, i32 %183) #12
  %185 = load %"class.v8::internal::wasm::WasmFunctionBuilder"*, %"class.v8::internal::wasm::WasmFunctionBuilder"** %71, align 8
  tail call void @_ZN2v88internal4wasm19WasmFunctionBuilder4EmitENS1_10WasmOpcodeE(%"class.v8::internal::wasm::WasmFunctionBuilder"* %185, i32 106) #12
  %186 = getelementptr inbounds %"class.v8::internal::wasm::AsmJsParser", %"class.v8::internal::wasm::AsmJsParser"* %0, i64 0, i32 16
  %187 = load i32, i32* %186, align 8
  %188 = add nsw i32 %187, 1
  store i32 %188, i32* %186, align 8
  %189 = load %"class.v8::internal::wasm::WasmFunctionBuilder"*, %"class.v8::internal::wasm::WasmFunctionBuilder"** %71, align 8
  %190 = getelementptr inbounds %"class.v8::internal::wasm::AsmJsParser", %"class.v8::internal::wasm::AsmJsParser"* %0, i64 0, i32 15
  %191 = load i32, i32* %190, align 4
  %192 = icmp sgt i32 %191, %187
  br i1 %192, label %194, label %193

193:                                              ; preds = %182
  store i32 %188, i32* %190, align 4
  br label %194

194:                                              ; preds = %193, %182
  %195 = getelementptr inbounds %"class.v8::internal::wasm::AsmJsParser", %"class.v8::internal::wasm::AsmJsParser"* %0, i64 0, i32 14
  %196 = load i32, i32* %195, align 8
  %197 = add nsw i32 %196, %187
  tail call void @_ZN2v88internal4wasm19WasmFunctionBuilder12EmitSetLocalEj(%"class.v8::internal::wasm::WasmFunctionBuilder"* %189, i32 %197) #12
  %198 = load i64, i64* %9, align 8
  br label %286

199:                                              ; preds = %1
  %200 = icmp sgt i32 %17, 255
  %201 = getelementptr inbounds %"class.v8::internal::wasm::AsmJsParser", %"class.v8::internal::wasm::AsmJsParser"* %0, i64 0, i32 7
  %202 = getelementptr inbounds %"class.v8::internal::wasm::AsmJsParser", %"class.v8::internal::wasm::AsmJsParser"* %0, i64 0, i32 8
  %203 = select i1 %200, %"class.v8::internal::Vector.160"* %201, %"class.v8::internal::Vector.160"* %202
  %204 = getelementptr inbounds %"class.v8::internal::Vector.160", %"class.v8::internal::Vector.160"* %203, i64 0, i32 1
  %205 = load i64, i64* %204, align 8
  br i1 %200, label %209, label %206

206:                                              ; preds = %199
  %207 = sub nsw i32 -10000, %17
  %208 = sext i32 %207 to i64
  br label %217

209:                                              ; preds = %199
  %210 = add nsw i32 %17, -256
  %211 = sext i32 %210 to i64
  %212 = getelementptr inbounds %"class.v8::internal::wasm::AsmJsParser", %"class.v8::internal::wasm::AsmJsParser"* %0, i64 0, i32 9
  %213 = load i64, i64* %212, align 8
  %214 = icmp ugt i64 %213, %211
  br i1 %214, label %217, label %215

215:                                              ; preds = %209
  %216 = add nuw nsw i64 %211, 1
  store i64 %216, i64* %212, align 8
  br label %217

217:                                              ; preds = %215, %209, %206
  %218 = phi i64 [ %211, %215 ], [ %211, %209 ], [ %208, %206 ]
  %219 = add nsw i64 %218, 1
  %220 = icmp ugt i64 %219, %205
  br i1 %220, label %224, label %221

221:                                              ; preds = %217
  %222 = getelementptr inbounds %"class.v8::internal::Vector.160", %"class.v8::internal::Vector.160"* %203, i64 0, i32 0
  %223 = load %"struct.v8::internal::wasm::AsmJsParser::VarInfo"*, %"struct.v8::internal::wasm::AsmJsParser::VarInfo"** %222, align 8
  br label %265

224:                                              ; preds = %217
  %225 = shl i64 %205, 1
  %226 = icmp ult i64 %225, %219
  %227 = select i1 %226, i64 %219, i64 %225
  %228 = getelementptr inbounds %"class.v8::internal::wasm::AsmJsParser", %"class.v8::internal::wasm::AsmJsParser"* %0, i64 0, i32 0
  %229 = load %"class.v8::internal::Zone"*, %"class.v8::internal::Zone"** %228, align 8
  %230 = mul i64 %227, 40
  %231 = getelementptr inbounds %"class.v8::internal::Zone", %"class.v8::internal::Zone"* %229, i64 0, i32 2
  %232 = load i64, i64* %231, align 8
  %233 = getelementptr inbounds %"class.v8::internal::Zone", %"class.v8::internal::Zone"* %229, i64 0, i32 3
  %234 = load i64, i64* %233, align 8
  %235 = sub i64 %234, %232
  %236 = icmp ugt i64 %230, %235
  br i1 %236, label %237, label %239, !prof !2

237:                                              ; preds = %224
  %238 = tail call i64 @_ZN2v88internal4Zone9NewExpandEm(%"class.v8::internal::Zone"* %229, i64 %230) #12
  br label %241

239:                                              ; preds = %224
  %240 = add i64 %232, %230
  store i64 %240, i64* %231, align 8
  br label %241

241:                                              ; preds = %239, %237
  %242 = phi i64 [ %238, %237 ], [ %232, %239 ]
  %243 = inttoptr i64 %242 to %"struct.v8::internal::wasm::AsmJsParser::VarInfo"*
  %244 = getelementptr inbounds %"struct.v8::internal::wasm::AsmJsParser::VarInfo", %"struct.v8::internal::wasm::AsmJsParser::VarInfo"* %243, i64 %227
  %245 = icmp eq i64 %227, 0
  br i1 %245, label %255, label %246

246:                                              ; preds = %241, %246
  %247 = phi %"struct.v8::internal::wasm::AsmJsParser::VarInfo"* [ %253, %246 ], [ %243, %241 ]
  %248 = getelementptr inbounds %"struct.v8::internal::wasm::AsmJsParser::VarInfo", %"struct.v8::internal::wasm::AsmJsParser::VarInfo"* %247, i64 0, i32 0
  store %"class.v8::internal::wasm::AsmType"* inttoptr (i64 2147483649 to %"class.v8::internal::wasm::AsmType"*), %"class.v8::internal::wasm::AsmType"** %248, align 8
  %249 = getelementptr inbounds %"struct.v8::internal::wasm::AsmJsParser::VarInfo", %"struct.v8::internal::wasm::AsmJsParser::VarInfo"* %247, i64 0, i32 1
  %250 = getelementptr inbounds %"struct.v8::internal::wasm::AsmJsParser::VarInfo", %"struct.v8::internal::wasm::AsmJsParser::VarInfo"* %247, i64 0, i32 6
  %251 = bitcast %"class.v8::internal::wasm::WasmFunctionBuilder"** %249 to i8*
  tail call void @llvm.memset.p0i8.i64(i8* align 8 %251, i8 0, i64 28, i1 false) #12
  store i8 1, i8* %250, align 4
  %252 = getelementptr inbounds %"struct.v8::internal::wasm::AsmJsParser::VarInfo", %"struct.v8::internal::wasm::AsmJsParser::VarInfo"* %247, i64 0, i32 7
  store i8 0, i8* %252, align 1
  %253 = getelementptr inbounds %"struct.v8::internal::wasm::AsmJsParser::VarInfo", %"struct.v8::internal::wasm::AsmJsParser::VarInfo"* %247, i64 1
  %254 = icmp eq %"struct.v8::internal::wasm::AsmJsParser::VarInfo"* %253, %244
  br i1 %254, label %255, label %246

255:                                              ; preds = %246, %241
  %256 = getelementptr inbounds %"class.v8::internal::Vector.160", %"class.v8::internal::Vector.160"* %203, i64 0, i32 0
  %257 = load i64, i64* %204, align 8
  %258 = mul nuw i64 %257, 40
  %259 = icmp eq i64 %258, 0
  br i1 %259, label %264, label %260

260:                                              ; preds = %255
  %261 = bitcast %"class.v8::internal::Vector.160"* %203 to i8**
  %262 = load i8*, i8** %261, align 8
  %263 = inttoptr i64 %242 to i8*
  tail call void @llvm.memmove.p0i8.p0i8.i64(i8* align 8 %263, i8* align 8 %262, i64 %258, i1 false) #12
  br label %264

264:                                              ; preds = %260, %255
  store %"struct.v8::internal::wasm::AsmJsParser::VarInfo"* %243, %"struct.v8::internal::wasm::AsmJsParser::VarInfo"** %256, align 8
  store i64 %227, i64* %204, align 8
  br label %265

265:                                              ; preds = %221, %264
  %266 = phi %"struct.v8::internal::wasm::AsmJsParser::VarInfo"* [ %223, %221 ], [ %243, %264 ]
  %267 = getelementptr inbounds %"struct.v8::internal::wasm::AsmJsParser::VarInfo", %"struct.v8::internal::wasm::AsmJsParser::VarInfo"* %266, i64 %218, i32 5
  %268 = load i32, i32* %267, align 8
  switch i32 %268, label %278 [
    i32 0, label %269
    i32 4, label %286
  ]

269:                                              ; preds = %265
  store i32 4, i32* %267, align 8
  %270 = getelementptr inbounds %"class.v8::internal::wasm::AsmJsParser", %"class.v8::internal::wasm::AsmJsParser"* %0, i64 0, i32 2
  %271 = load %"class.v8::internal::wasm::WasmModuleBuilder"*, %"class.v8::internal::wasm::WasmModuleBuilder"** %270, align 8
  %272 = tail call %"class.v8::internal::wasm::WasmFunctionBuilder"* @_ZN2v88internal4wasm17WasmModuleBuilder11AddFunctionEPNS0_9SignatureINS1_9ValueTypeEEE(%"class.v8::internal::wasm::WasmModuleBuilder"* %271, %"class.v8::internal::Signature"* null) #12
  %273 = getelementptr inbounds %"struct.v8::internal::wasm::AsmJsParser::VarInfo", %"struct.v8::internal::wasm::AsmJsParser::VarInfo"* %266, i64 %218, i32 1
  store %"class.v8::internal::wasm::WasmFunctionBuilder"* %272, %"class.v8::internal::wasm::WasmFunctionBuilder"** %273, align 8
  %274 = getelementptr inbounds %"class.v8::internal::wasm::WasmFunctionBuilder", %"class.v8::internal::wasm::WasmFunctionBuilder"* %272, i64 0, i32 3
  %275 = load i32, i32* %274, align 4
  %276 = getelementptr inbounds %"struct.v8::internal::wasm::AsmJsParser::VarInfo", %"struct.v8::internal::wasm::AsmJsParser::VarInfo"* %266, i64 %218, i32 4
  store i32 %275, i32* %276, align 4
  %277 = getelementptr inbounds %"struct.v8::internal::wasm::AsmJsParser::VarInfo", %"struct.v8::internal::wasm::AsmJsParser::VarInfo"* %266, i64 %218, i32 6
  store i8 0, i8* %277, align 4
  br label %286

278:                                              ; preds = %265
  %279 = icmp slt i32 %268, 6
  br i1 %279, label %280, label %286

280:                                              ; preds = %278
  %281 = getelementptr inbounds %"class.v8::internal::wasm::AsmJsParser", %"class.v8::internal::wasm::AsmJsParser"* %0, i64 0, i32 17
  store i8 1, i8* %281, align 4
  %282 = getelementptr inbounds %"class.v8::internal::wasm::AsmJsParser", %"class.v8::internal::wasm::AsmJsParser"* %0, i64 0, i32 18
  store i8* getelementptr inbounds ([33 x i8], [33 x i8]* @.str.98, i64 0, i64 0), i8** %282, align 8
  %283 = load i64, i64* %9, align 8
  %284 = trunc i64 %283 to i32
  %285 = getelementptr inbounds %"class.v8::internal::wasm::AsmJsParser", %"class.v8::internal::wasm::AsmJsParser"* %0, i64 0, i32 19
  store i32 %284, i32* %285, align 8
  br label %2503

286:                                              ; preds = %194, %265, %278, %269
  %287 = phi i8 [ 1, %194 ], [ 0, %278 ], [ 0, %265 ], [ 0, %269 ]
  %288 = phi i32 [ %187, %194 ], [ undef, %278 ], [ undef, %265 ], [ undef, %269 ]
  %289 = phi %"class.v8::internal::wasm::AsmJsParser"* [ %0, %194 ], [ null, %278 ], [ null, %265 ], [ null, %269 ]
  %290 = phi i64 [ %198, %194 ], [ %10, %278 ], [ %10, %265 ], [ %10, %269 ]
  %291 = bitcast %"class.v8::internal::wasm::AsmJsParser::CachedVector"* %4 to i8*
  call void @llvm.lifetime.start.p0i8(i64 40, i8* nonnull %291) #12
  %292 = getelementptr inbounds %"class.v8::internal::wasm::AsmJsParser", %"class.v8::internal::wasm::AsmJsParser"* %0, i64 0, i32 11
  %293 = getelementptr inbounds %"class.v8::internal::wasm::AsmJsParser", %"class.v8::internal::wasm::AsmJsParser"* %0, i64 0, i32 11, i32 0, i32 0, i32 0, i32 2, i32 1, i32 0, i32 0
  %294 = bitcast %"class.v8::internal::Zone"** %293 to i64*
  %295 = load i64, i64* %294, align 8
  %296 = getelementptr inbounds %"class.v8::internal::wasm::AsmJsParser::CachedVector", %"class.v8::internal::wasm::AsmJsParser::CachedVector"* %4, i64 0, i32 0, i32 0, i32 0, i32 2, i32 1
  %297 = bitcast %"struct.std::__1::__compressed_pair_elem.184"* %296 to i64*
  call void @llvm.memset.p0i8.i64(i8* nonnull align 8 %291, i8 0, i64 24, i1 false) #12
  store i64 %295, i64* %297, align 8
  %298 = getelementptr inbounds %"class.v8::internal::wasm::AsmJsParser::CachedVector", %"class.v8::internal::wasm::AsmJsParser::CachedVector"* %4, i64 0, i32 1
  store %"class.v8::internal::wasm::AsmJsParser::CachedVectors.175"* %292, %"class.v8::internal::wasm::AsmJsParser::CachedVectors.175"** %298, align 8
  %299 = getelementptr inbounds %"class.v8::internal::wasm::AsmJsParser::CachedVectors.175", %"class.v8::internal::wasm::AsmJsParser::CachedVectors.175"* %292, i64 0, i32 0, i32 0, i32 0, i32 0
  %300 = load %"class.v8::internal::ZoneVector.179"*, %"class.v8::internal::ZoneVector.179"** %299, align 8
  %301 = getelementptr inbounds %"class.v8::internal::wasm::AsmJsParser", %"class.v8::internal::wasm::AsmJsParser"* %0, i64 0, i32 11, i32 0, i32 0, i32 0, i32 1
  %302 = load %"class.v8::internal::ZoneVector.179"*, %"class.v8::internal::ZoneVector.179"** %301, align 8
  %303 = icmp eq %"class.v8::internal::ZoneVector.179"* %300, %302
  br i1 %303, label %334, label %304

304:                                              ; preds = %286
  %305 = getelementptr inbounds %"class.v8::internal::ZoneVector.179", %"class.v8::internal::ZoneVector.179"* %302, i64 -1, i32 0
  %306 = bitcast %"class.std::__1::vector.180"* %305 to i64*
  %307 = load i64, i64* %306, align 8
  %308 = bitcast %"class.v8::internal::wasm::AsmJsParser::CachedVector"* %4 to i64*
  store i64 0, i64* %306, align 8
  store i64 %307, i64* %308, align 8
  %309 = getelementptr inbounds %"class.v8::internal::ZoneVector.179", %"class.v8::internal::ZoneVector.179"* %302, i64 -1, i32 0, i32 0, i32 1
  %310 = getelementptr inbounds %"class.v8::internal::wasm::AsmJsParser::CachedVector", %"class.v8::internal::wasm::AsmJsParser::CachedVector"* %4, i64 0, i32 0, i32 0, i32 0, i32 1
  %311 = bitcast %"class.v8::internal::wasm::AsmType"*** %309 to i64*
  %312 = load i64, i64* %311, align 8
  %313 = bitcast %"class.v8::internal::wasm::AsmType"*** %310 to i64*
  %314 = load i64, i64* %313, align 8
  store i64 %314, i64* %311, align 8
  store i64 %312, i64* %313, align 8
  %315 = getelementptr inbounds %"class.v8::internal::ZoneVector.179", %"class.v8::internal::ZoneVector.179"* %302, i64 -1, i32 0, i32 0, i32 2, i32 0, i32 0
  %316 = getelementptr inbounds %"class.v8::internal::wasm::AsmJsParser::CachedVector", %"class.v8::internal::wasm::AsmJsParser::CachedVector"* %4, i64 0, i32 0, i32 0, i32 0, i32 2, i32 0, i32 0
  %317 = bitcast %"class.v8::internal::wasm::AsmType"*** %315 to i64*
  %318 = load i64, i64* %317, align 8
  %319 = bitcast %"class.v8::internal::wasm::AsmType"*** %316 to i64*
  %320 = load i64, i64* %319, align 8
  store i64 %320, i64* %317, align 8
  store i64 %318, i64* %319, align 8
  %321 = load %"class.v8::internal::ZoneVector.179"*, %"class.v8::internal::ZoneVector.179"** %301, align 8
  %322 = getelementptr inbounds %"class.v8::internal::ZoneVector.179", %"class.v8::internal::ZoneVector.179"* %321, i64 -1
  %323 = getelementptr inbounds %"class.v8::internal::ZoneVector.179", %"class.v8::internal::ZoneVector.179"* %322, i64 0, i32 0, i32 0, i32 0
  %324 = load %"class.v8::internal::wasm::AsmType"**, %"class.v8::internal::wasm::AsmType"*** %323, align 8
  %325 = icmp eq %"class.v8::internal::wasm::AsmType"** %324, null
  br i1 %325, label %330, label %326

326:                                              ; preds = %304
  %327 = ptrtoint %"class.v8::internal::wasm::AsmType"** %324 to i64
  %328 = getelementptr inbounds %"class.v8::internal::ZoneVector.179", %"class.v8::internal::ZoneVector.179"* %321, i64 -1, i32 0, i32 0, i32 1
  %329 = bitcast %"class.v8::internal::wasm::AsmType"*** %328 to i64*
  store i64 %327, i64* %329, align 8
  br label %330

330:                                              ; preds = %326, %304
  store %"class.v8::internal::ZoneVector.179"* %322, %"class.v8::internal::ZoneVector.179"** %301, align 8
  %331 = load i64, i64* %308, align 8
  store i64 %331, i64* %313, align 8
  %332 = load i64, i64* %294, align 8
  %333 = load %"class.v8::internal::ZoneVector.179"*, %"class.v8::internal::ZoneVector.179"** %299, align 8
  br label %334

334:                                              ; preds = %286, %330
  %335 = phi %"class.v8::internal::ZoneVector.179"* [ %300, %286 ], [ %322, %330 ]
  %336 = phi %"class.v8::internal::ZoneVector.179"* [ %300, %286 ], [ %333, %330 ]
  %337 = phi i64 [ %295, %286 ], [ %332, %330 ]
  %338 = bitcast %"class.v8::internal::wasm::AsmJsParser::CachedVector"* %5 to i8*
  call void @llvm.lifetime.start.p0i8(i64 40, i8* nonnull %338) #12
  %339 = getelementptr inbounds %"class.v8::internal::wasm::AsmJsParser::CachedVector", %"class.v8::internal::wasm::AsmJsParser::CachedVector"* %5, i64 0, i32 0, i32 0, i32 0, i32 2, i32 1
  %340 = bitcast %"struct.std::__1::__compressed_pair_elem.184"* %339 to i64*
  call void @llvm.memset.p0i8.i64(i8* nonnull align 8 %338, i8 0, i64 24, i1 false) #12
  store i64 %337, i64* %340, align 8
  %341 = getelementptr inbounds %"class.v8::internal::wasm::AsmJsParser::CachedVector", %"class.v8::internal::wasm::AsmJsParser::CachedVector"* %5, i64 0, i32 1
  store %"class.v8::internal::wasm::AsmJsParser::CachedVectors.175"* %292, %"class.v8::internal::wasm::AsmJsParser::CachedVectors.175"** %341, align 8
  %342 = icmp eq %"class.v8::internal::ZoneVector.179"* %336, %335
  br i1 %342, label %371, label %343

343:                                              ; preds = %334
  %344 = getelementptr inbounds %"class.v8::internal::ZoneVector.179", %"class.v8::internal::ZoneVector.179"* %335, i64 -1, i32 0
  %345 = bitcast %"class.std::__1::vector.180"* %344 to i64*
  %346 = load i64, i64* %345, align 8
  %347 = bitcast %"class.v8::internal::wasm::AsmJsParser::CachedVector"* %5 to i64*
  store i64 0, i64* %345, align 8
  store i64 %346, i64* %347, align 8
  %348 = getelementptr inbounds %"class.v8::internal::ZoneVector.179", %"class.v8::internal::ZoneVector.179"* %335, i64 -1, i32 0, i32 0, i32 1
  %349 = getelementptr inbounds %"class.v8::internal::wasm::AsmJsParser::CachedVector", %"class.v8::internal::wasm::AsmJsParser::CachedVector"* %5, i64 0, i32 0, i32 0, i32 0, i32 1
  %350 = bitcast %"class.v8::internal::wasm::AsmType"*** %348 to i64*
  %351 = load i64, i64* %350, align 8
  %352 = bitcast %"class.v8::internal::wasm::AsmType"*** %349 to i64*
  %353 = load i64, i64* %352, align 8
  store i64 %353, i64* %350, align 8
  store i64 %351, i64* %352, align 8
  %354 = getelementptr inbounds %"class.v8::internal::ZoneVector.179", %"class.v8::internal::ZoneVector.179"* %335, i64 -1, i32 0, i32 0, i32 2, i32 0, i32 0
  %355 = getelementptr inbounds %"class.v8::internal::wasm::AsmJsParser::CachedVector", %"class.v8::internal::wasm::AsmJsParser::CachedVector"* %5, i64 0, i32 0, i32 0, i32 0, i32 2, i32 0, i32 0
  %356 = bitcast %"class.v8::internal::wasm::AsmType"*** %354 to i64*
  %357 = load i64, i64* %356, align 8
  %358 = bitcast %"class.v8::internal::wasm::AsmType"*** %355 to i64*
  %359 = load i64, i64* %358, align 8
  store i64 %359, i64* %356, align 8
  store i64 %357, i64* %358, align 8
  %360 = load %"class.v8::internal::ZoneVector.179"*, %"class.v8::internal::ZoneVector.179"** %301, align 8
  %361 = getelementptr inbounds %"class.v8::internal::ZoneVector.179", %"class.v8::internal::ZoneVector.179"* %360, i64 -1
  %362 = getelementptr inbounds %"class.v8::internal::ZoneVector.179", %"class.v8::internal::ZoneVector.179"* %361, i64 0, i32 0, i32 0, i32 0
  %363 = load %"class.v8::internal::wasm::AsmType"**, %"class.v8::internal::wasm::AsmType"*** %362, align 8
  %364 = icmp eq %"class.v8::internal::wasm::AsmType"** %363, null
  br i1 %364, label %369, label %365

365:                                              ; preds = %343
  %366 = ptrtoint %"class.v8::internal::wasm::AsmType"** %363 to i64
  %367 = getelementptr inbounds %"class.v8::internal::ZoneVector.179", %"class.v8::internal::ZoneVector.179"* %360, i64 -1, i32 0, i32 0, i32 1
  %368 = bitcast %"class.v8::internal::wasm::AsmType"*** %367 to i64*
  store i64 %366, i64* %368, align 8
  br label %369

369:                                              ; preds = %365, %343
  store %"class.v8::internal::ZoneVector.179"* %361, %"class.v8::internal::ZoneVector.179"** %301, align 8
  %370 = load i64, i64* %347, align 8
  store i64 %370, i64* %352, align 8
  br label %371

371:                                              ; preds = %334, %369
  %372 = load i32, i32* %16, align 8
  %373 = icmp eq i32 %372, 40
  br i1 %373, label %380, label %374

374:                                              ; preds = %371
  %375 = getelementptr inbounds %"class.v8::internal::wasm::AsmJsParser", %"class.v8::internal::wasm::AsmJsParser"* %0, i64 0, i32 17
  store i8 1, i8* %375, align 4
  %376 = getelementptr inbounds %"class.v8::internal::wasm::AsmJsParser", %"class.v8::internal::wasm::AsmJsParser"* %0, i64 0, i32 18
  store i8* getelementptr inbounds ([17 x i8], [17 x i8]* @.str.3, i64 0, i64 0), i8** %376, align 8
  %377 = load i64, i64* %9, align 8
  %378 = trunc i64 %377 to i32
  %379 = getelementptr inbounds %"class.v8::internal::wasm::AsmJsParser", %"class.v8::internal::wasm::AsmJsParser"* %0, i64 0, i32 19
  store i32 %378, i32* %379, align 8
  br label %2416

380:                                              ; preds = %371
  tail call void @_ZN2v88internal12AsmJsScanner4NextEv(%"class.v8::internal::AsmJsScanner"* %8) #12
  %381 = getelementptr inbounds %"class.v8::internal::wasm::AsmJsParser", %"class.v8::internal::wasm::AsmJsParser"* %0, i64 0, i32 17
  %382 = load i8, i8* %381, align 4, !range !69
  %383 = icmp eq i8 %382, 0
  br i1 %383, label %384, label %1359

384:                                              ; preds = %380
  %385 = getelementptr inbounds %"class.v8::internal::wasm::AsmJsParser", %"class.v8::internal::wasm::AsmJsParser"* %0, i64 0, i32 5
  %386 = getelementptr inbounds %"class.v8::internal::wasm::AsmJsParser::CachedVector", %"class.v8::internal::wasm::AsmJsParser::CachedVector"* %5, i64 0, i32 0, i32 0, i32 0, i32 1
  %387 = getelementptr inbounds %"class.v8::internal::wasm::AsmJsParser::CachedVector", %"class.v8::internal::wasm::AsmJsParser::CachedVector"* %5, i64 0, i32 0, i32 0, i32 0, i32 2, i32 0, i32 0
  %388 = bitcast %"class.v8::internal::wasm::AsmType"*** %386 to i64*
  %389 = bitcast %"class.v8::internal::wasm::AsmJsParser::CachedVector"* %5 to i64*
  %390 = bitcast %"class.v8::internal::wasm::AsmType"*** %387 to i64*
  %391 = getelementptr inbounds %"class.v8::internal::wasm::AsmJsParser::CachedVector", %"class.v8::internal::wasm::AsmJsParser::CachedVector"* %5, i64 0, i32 0, i32 0, i32 0, i32 2, i32 1, i32 0, i32 0
  %392 = getelementptr inbounds %"class.v8::internal::wasm::AsmJsParser::CachedVector", %"class.v8::internal::wasm::AsmJsParser::CachedVector"* %5, i64 0, i32 0, i32 0, i32 0, i32 0
  %393 = getelementptr inbounds %"class.v8::internal::wasm::AsmJsParser::CachedVector", %"class.v8::internal::wasm::AsmJsParser::CachedVector"* %4, i64 0, i32 0, i32 0, i32 0, i32 1
  %394 = getelementptr inbounds %"class.v8::internal::wasm::AsmJsParser::CachedVector", %"class.v8::internal::wasm::AsmJsParser::CachedVector"* %4, i64 0, i32 0, i32 0, i32 0, i32 2, i32 0, i32 0
  %395 = bitcast %"class.v8::internal::wasm::AsmType"*** %393 to i64*
  %396 = bitcast %"class.v8::internal::wasm::AsmJsParser::CachedVector"* %4 to i64*
  %397 = bitcast %"class.v8::internal::wasm::AsmType"*** %394 to i64*
  %398 = getelementptr inbounds %"class.v8::internal::wasm::AsmJsParser::CachedVector", %"class.v8::internal::wasm::AsmJsParser::CachedVector"* %4, i64 0, i32 0, i32 0, i32 0, i32 2, i32 1, i32 0, i32 0
  %399 = getelementptr inbounds %"class.v8::internal::wasm::AsmJsParser::CachedVector", %"class.v8::internal::wasm::AsmJsParser::CachedVector"* %4, i64 0, i32 0, i32 0, i32 0, i32 0
  br label %400

400:                                              ; preds = %384, %1356
  %401 = load i32, i32* %16, align 8
  %402 = icmp eq i32 %401, 41
  br i1 %402, label %1367, label %403

403:                                              ; preds = %400
  %404 = tail call i64 @_ZN2v88internal23GetCurrentStackPositionEv() #12
  %405 = load i64, i64* %385, align 8
  %406 = icmp ult i64 %404, %405
  br i1 %406, label %407, label %412

407:                                              ; preds = %403
  store i8 1, i8* %381, align 4
  %408 = getelementptr inbounds %"class.v8::internal::wasm::AsmJsParser", %"class.v8::internal::wasm::AsmJsParser"* %0, i64 0, i32 18
  store i8* getelementptr inbounds ([44 x i8], [44 x i8]* @.str.2, i64 0, i64 0), i8** %408, align 8
  %409 = load i64, i64* %9, align 8
  %410 = trunc i64 %409 to i32
  %411 = getelementptr inbounds %"class.v8::internal::wasm::AsmJsParser", %"class.v8::internal::wasm::AsmJsParser"* %0, i64 0, i32 19
  store i32 %410, i32* %411, align 8
  br label %2416

412:                                              ; preds = %403
  %413 = tail call %"class.v8::internal::wasm::AsmType"* @_ZN2v88internal4wasm11AsmJsParser20AssignmentExpressionEv(%"class.v8::internal::wasm::AsmJsParser"* %0)
  %414 = ptrtoint %"class.v8::internal::wasm::AsmType"* %413 to i64
  %415 = load i8, i8* %381, align 4, !range !69
  %416 = icmp eq i8 %415, 0
  br i1 %416, label %417, label %2416

417:                                              ; preds = %412
  %418 = load %"class.v8::internal::wasm::AsmType"**, %"class.v8::internal::wasm::AsmType"*** %386, align 8
  %419 = load %"class.v8::internal::wasm::AsmType"**, %"class.v8::internal::wasm::AsmType"*** %387, align 8
  %420 = icmp eq %"class.v8::internal::wasm::AsmType"** %418, %419
  %421 = ptrtoint %"class.v8::internal::wasm::AsmType"** %419 to i64
  br i1 %420, label %426, label %422

422:                                              ; preds = %417
  %423 = bitcast %"class.v8::internal::wasm::AsmType"** %418 to i64*
  store i64 %414, i64* %423, align 8
  %424 = getelementptr inbounds %"class.v8::internal::wasm::AsmType"*, %"class.v8::internal::wasm::AsmType"** %418, i64 1
  %425 = ptrtoint %"class.v8::internal::wasm::AsmType"** %424 to i64
  store i64 %425, i64* %388, align 8
  br label %647

426:                                              ; preds = %417
  %427 = ptrtoint %"class.v8::internal::wasm::AsmType"** %418 to i64
  %428 = load i64, i64* %389, align 8
  %429 = sub i64 %427, %428
  %430 = ashr exact i64 %429, 3
  %431 = add nsw i64 %430, 1
  %432 = icmp ugt i64 %431, 268435455
  br i1 %432, label %433, label %435

433:                                              ; preds = %426
  %434 = bitcast %"class.v8::internal::wasm::AsmJsParser::CachedVector"* %5 to %"class.std::__1::__vector_base_common"*
  call void @_ZNKSt3__120__vector_base_commonILb1EE20__throw_length_errorEv(%"class.std::__1::__vector_base_common"* nonnull %434) #13
  unreachable

435:                                              ; preds = %426
  %436 = sub i64 %421, %428
  %437 = ashr exact i64 %436, 3
  %438 = icmp ult i64 %437, 134217727
  br i1 %438, label %439, label %444

439:                                              ; preds = %435
  %440 = ashr exact i64 %436, 2
  %441 = icmp ult i64 %440, %431
  %442 = select i1 %441, i64 %431, i64 %440
  %443 = icmp eq i64 %442, 0
  br i1 %443, label %461, label %444

444:                                              ; preds = %439, %435
  %445 = phi i64 [ %442, %439 ], [ 268435455, %435 ]
  %446 = load %"class.v8::internal::Zone"*, %"class.v8::internal::Zone"** %391, align 8
  %447 = shl i64 %445, 3
  %448 = getelementptr inbounds %"class.v8::internal::Zone", %"class.v8::internal::Zone"* %446, i64 0, i32 2
  %449 = load i64, i64* %448, align 8
  %450 = getelementptr inbounds %"class.v8::internal::Zone", %"class.v8::internal::Zone"* %446, i64 0, i32 3
  %451 = load i64, i64* %450, align 8
  %452 = sub i64 %451, %449
  %453 = icmp ugt i64 %447, %452
  br i1 %453, label %454, label %456, !prof !2

454:                                              ; preds = %444
  %455 = tail call i64 @_ZN2v88internal4Zone9NewExpandEm(%"class.v8::internal::Zone"* %446, i64 %447) #12
  br label %458

456:                                              ; preds = %444
  %457 = add i64 %449, %447
  store i64 %457, i64* %448, align 8
  br label %458

458:                                              ; preds = %456, %454
  %459 = phi i64 [ %455, %454 ], [ %449, %456 ]
  %460 = inttoptr i64 %459 to %"class.v8::internal::wasm::AsmType"**
  br label %461

461:                                              ; preds = %458, %439
  %462 = phi i64 [ %445, %458 ], [ 0, %439 ]
  %463 = phi %"class.v8::internal::wasm::AsmType"** [ %460, %458 ], [ null, %439 ]
  %464 = getelementptr inbounds %"class.v8::internal::wasm::AsmType"*, %"class.v8::internal::wasm::AsmType"** %463, i64 %430
  %465 = getelementptr inbounds %"class.v8::internal::wasm::AsmType"*, %"class.v8::internal::wasm::AsmType"** %463, i64 %462
  %466 = ptrtoint %"class.v8::internal::wasm::AsmType"** %465 to i64
  %467 = bitcast %"class.v8::internal::wasm::AsmType"** %464 to i64*
  store i64 %414, i64* %467, align 8
  %468 = getelementptr inbounds %"class.v8::internal::wasm::AsmType"*, %"class.v8::internal::wasm::AsmType"** %464, i64 1
  %469 = ptrtoint %"class.v8::internal::wasm::AsmType"** %468 to i64
  %470 = load %"class.v8::internal::wasm::AsmType"**, %"class.v8::internal::wasm::AsmType"*** %392, align 8
  %471 = ptrtoint %"class.v8::internal::wasm::AsmType"** %470 to i64
  %472 = load %"class.v8::internal::wasm::AsmType"**, %"class.v8::internal::wasm::AsmType"*** %386, align 8
  %473 = icmp eq %"class.v8::internal::wasm::AsmType"** %472, %470
  br i1 %473, label %644, label %474

474:                                              ; preds = %461
  %475 = getelementptr %"class.v8::internal::wasm::AsmType"*, %"class.v8::internal::wasm::AsmType"** %472, i64 -1
  %476 = ptrtoint %"class.v8::internal::wasm::AsmType"** %475 to i64
  %477 = sub i64 %476, %471
  %478 = lshr i64 %477, 3
  %479 = add nuw nsw i64 %478, 1
  %480 = icmp ult i64 %479, 4
  br i1 %480, label %574, label %481

481:                                              ; preds = %474
  %482 = getelementptr %"class.v8::internal::wasm::AsmType"*, %"class.v8::internal::wasm::AsmType"** %463, i64 -1
  %483 = getelementptr %"class.v8::internal::wasm::AsmType"*, %"class.v8::internal::wasm::AsmType"** %472, i64 -1
  %484 = ptrtoint %"class.v8::internal::wasm::AsmType"** %483 to i64
  %485 = sub i64 %484, %471
  %486 = lshr i64 %485, 3
  %487 = sub nsw i64 %430, %486
  %488 = getelementptr %"class.v8::internal::wasm::AsmType"*, %"class.v8::internal::wasm::AsmType"** %482, i64 %487
  %489 = getelementptr %"class.v8::internal::wasm::AsmType"*, %"class.v8::internal::wasm::AsmType"** %472, i64 -1
  %490 = sub nsw i64 0, %486
  %491 = getelementptr %"class.v8::internal::wasm::AsmType"*, %"class.v8::internal::wasm::AsmType"** %489, i64 %490
  %492 = icmp ult %"class.v8::internal::wasm::AsmType"** %488, %472
  %493 = icmp ult %"class.v8::internal::wasm::AsmType"** %491, %464
  %494 = and i1 %492, %493
  br i1 %494, label %574, label %495

495:                                              ; preds = %481
  %496 = and i64 %479, 4611686018427387900
  %497 = sub nsw i64 0, %496
  %498 = getelementptr %"class.v8::internal::wasm::AsmType"*, %"class.v8::internal::wasm::AsmType"** %464, i64 %497
  %499 = sub nsw i64 0, %496
  %500 = getelementptr %"class.v8::internal::wasm::AsmType"*, %"class.v8::internal::wasm::AsmType"** %472, i64 %499
  %501 = add nsw i64 %496, -4
  %502 = lshr exact i64 %501, 2
  %503 = add nuw nsw i64 %502, 1
  %504 = and i64 %503, 1
  %505 = icmp eq i64 %501, 0
  br i1 %505, label %550, label %506

506:                                              ; preds = %495
  %507 = sub nuw nsw i64 %503, %504
  %508 = getelementptr %"class.v8::internal::wasm::AsmType"*, %"class.v8::internal::wasm::AsmType"** %464, i64 -1
  %509 = getelementptr %"class.v8::internal::wasm::AsmType"*, %"class.v8::internal::wasm::AsmType"** %472, i64 -1
  %510 = getelementptr %"class.v8::internal::wasm::AsmType"*, %"class.v8::internal::wasm::AsmType"** %464, i64 -1
  %511 = getelementptr %"class.v8::internal::wasm::AsmType"*, %"class.v8::internal::wasm::AsmType"** %472, i64 -1
  br label %512

512:                                              ; preds = %512, %506
  %513 = phi i64 [ 0, %506 ], [ %547, %512 ]
  %514 = phi i64 [ %507, %506 ], [ %548, %512 ]
  %515 = sub i64 0, %513
  %516 = sub i64 0, %513
  %517 = getelementptr inbounds %"class.v8::internal::wasm::AsmType"*, %"class.v8::internal::wasm::AsmType"** %508, i64 %515
  %518 = getelementptr inbounds %"class.v8::internal::wasm::AsmType"*, %"class.v8::internal::wasm::AsmType"** %509, i64 %516
  %519 = getelementptr inbounds %"class.v8::internal::wasm::AsmType"*, %"class.v8::internal::wasm::AsmType"** %518, i64 -1
  %520 = bitcast %"class.v8::internal::wasm::AsmType"** %519 to <2 x i64>*
  %521 = load <2 x i64>, <2 x i64>* %520, align 8, !alias.scope !248
  %522 = getelementptr inbounds %"class.v8::internal::wasm::AsmType"*, %"class.v8::internal::wasm::AsmType"** %518, i64 -2
  %523 = getelementptr inbounds %"class.v8::internal::wasm::AsmType"*, %"class.v8::internal::wasm::AsmType"** %522, i64 -1
  %524 = bitcast %"class.v8::internal::wasm::AsmType"** %523 to <2 x i64>*
  %525 = load <2 x i64>, <2 x i64>* %524, align 8, !alias.scope !248
  %526 = getelementptr inbounds %"class.v8::internal::wasm::AsmType"*, %"class.v8::internal::wasm::AsmType"** %517, i64 -1
  %527 = bitcast %"class.v8::internal::wasm::AsmType"** %526 to <2 x i64>*
  store <2 x i64> %521, <2 x i64>* %527, align 8, !alias.scope !251, !noalias !248
  %528 = getelementptr inbounds %"class.v8::internal::wasm::AsmType"*, %"class.v8::internal::wasm::AsmType"** %517, i64 -2
  %529 = getelementptr inbounds %"class.v8::internal::wasm::AsmType"*, %"class.v8::internal::wasm::AsmType"** %528, i64 -1
  %530 = bitcast %"class.v8::internal::wasm::AsmType"** %529 to <2 x i64>*
  store <2 x i64> %525, <2 x i64>* %530, align 8, !alias.scope !251, !noalias !248
  %531 = sub nuw nsw i64 -4, %513
  %532 = sub nuw nsw i64 -4, %513
  %533 = getelementptr inbounds %"class.v8::internal::wasm::AsmType"*, %"class.v8::internal::wasm::AsmType"** %510, i64 %531
  %534 = getelementptr inbounds %"class.v8::internal::wasm::AsmType"*, %"class.v8::internal::wasm::AsmType"** %511, i64 %532
  %535 = getelementptr inbounds %"class.v8::internal::wasm::AsmType"*, %"class.v8::internal::wasm::AsmType"** %534, i64 -1
  %536 = bitcast %"class.v8::internal::wasm::AsmType"** %535 to <2 x i64>*
  %537 = load <2 x i64>, <2 x i64>* %536, align 8, !alias.scope !248
  %538 = getelementptr inbounds %"class.v8::internal::wasm::AsmType"*, %"class.v8::internal::wasm::AsmType"** %534, i64 -2
  %539 = getelementptr inbounds %"class.v8::internal::wasm::AsmType"*, %"class.v8::internal::wasm::AsmType"** %538, i64 -1
  %540 = bitcast %"class.v8::internal::wasm::AsmType"** %539 to <2 x i64>*
  %541 = load <2 x i64>, <2 x i64>* %540, align 8, !alias.scope !248
  %542 = getelementptr inbounds %"class.v8::internal::wasm::AsmType"*, %"class.v8::internal::wasm::AsmType"** %533, i64 -1
  %543 = bitcast %"class.v8::internal::wasm::AsmType"** %542 to <2 x i64>*
  store <2 x i64> %537, <2 x i64>* %543, align 8, !alias.scope !251, !noalias !248
  %544 = getelementptr inbounds %"class.v8::internal::wasm::AsmType"*, %"class.v8::internal::wasm::AsmType"** %533, i64 -2
  %545 = getelementptr inbounds %"class.v8::internal::wasm::AsmType"*, %"class.v8::internal::wasm::AsmType"** %544, i64 -1
  %546 = bitcast %"class.v8::internal::wasm::AsmType"** %545 to <2 x i64>*
  store <2 x i64> %541, <2 x i64>* %546, align 8, !alias.scope !251, !noalias !248
  %547 = add i64 %513, 8
  %548 = add i64 %514, -2
  %549 = icmp eq i64 %548, 0
  br i1 %549, label %550, label %512, !llvm.loop !253

550:                                              ; preds = %512, %495
  %551 = phi i64 [ 0, %495 ], [ %547, %512 ]
  %552 = icmp eq i64 %504, 0
  br i1 %552, label %572, label %553

553:                                              ; preds = %550
  %554 = sub i64 0, %551
  %555 = getelementptr %"class.v8::internal::wasm::AsmType"*, %"class.v8::internal::wasm::AsmType"** %464, i64 -1
  %556 = sub i64 0, %551
  %557 = getelementptr %"class.v8::internal::wasm::AsmType"*, %"class.v8::internal::wasm::AsmType"** %472, i64 -1
  %558 = getelementptr inbounds %"class.v8::internal::wasm::AsmType"*, %"class.v8::internal::wasm::AsmType"** %555, i64 %554
  %559 = getelementptr inbounds %"class.v8::internal::wasm::AsmType"*, %"class.v8::internal::wasm::AsmType"** %557, i64 %556
  %560 = getelementptr inbounds %"class.v8::internal::wasm::AsmType"*, %"class.v8::internal::wasm::AsmType"** %559, i64 -1
  %561 = bitcast %"class.v8::internal::wasm::AsmType"** %560 to <2 x i64>*
  %562 = load <2 x i64>, <2 x i64>* %561, align 8, !alias.scope !248
  %563 = getelementptr inbounds %"class.v8::internal::wasm::AsmType"*, %"class.v8::internal::wasm::AsmType"** %559, i64 -2
  %564 = getelementptr inbounds %"class.v8::internal::wasm::AsmType"*, %"class.v8::internal::wasm::AsmType"** %563, i64 -1
  %565 = bitcast %"class.v8::internal::wasm::AsmType"** %564 to <2 x i64>*
  %566 = load <2 x i64>, <2 x i64>* %565, align 8, !alias.scope !248
  %567 = getelementptr inbounds %"class.v8::internal::wasm::AsmType"*, %"class.v8::internal::wasm::AsmType"** %558, i64 -1
  %568 = bitcast %"class.v8::internal::wasm::AsmType"** %567 to <2 x i64>*
  store <2 x i64> %562, <2 x i64>* %568, align 8, !alias.scope !251, !noalias !248
  %569 = getelementptr inbounds %"class.v8::internal::wasm::AsmType"*, %"class.v8::internal::wasm::AsmType"** %558, i64 -2
  %570 = getelementptr inbounds %"class.v8::internal::wasm::AsmType"*, %"class.v8::internal::wasm::AsmType"** %569, i64 -1
  %571 = bitcast %"class.v8::internal::wasm::AsmType"** %570 to <2 x i64>*
  store <2 x i64> %566, <2 x i64>* %571, align 8, !alias.scope !251, !noalias !248
  br label %572

572:                                              ; preds = %550, %553
  %573 = icmp eq i64 %479, %496
  br i1 %573, label %644, label %574

574:                                              ; preds = %572, %481, %474
  %575 = phi %"class.v8::internal::wasm::AsmType"** [ %464, %481 ], [ %464, %474 ], [ %498, %572 ]
  %576 = phi %"class.v8::internal::wasm::AsmType"** [ %472, %481 ], [ %472, %474 ], [ %500, %572 ]
  %577 = getelementptr %"class.v8::internal::wasm::AsmType"*, %"class.v8::internal::wasm::AsmType"** %576, i64 -1
  %578 = ptrtoint %"class.v8::internal::wasm::AsmType"** %577 to i64
  %579 = sub i64 %578, %471
  %580 = lshr i64 %579, 3
  %581 = add nuw nsw i64 %580, 1
  %582 = and i64 %581, 7
  %583 = icmp eq i64 %582, 0
  br i1 %583, label %595, label %584

584:                                              ; preds = %574, %584
  %585 = phi %"class.v8::internal::wasm::AsmType"** [ %588, %584 ], [ %575, %574 ]
  %586 = phi %"class.v8::internal::wasm::AsmType"** [ %589, %584 ], [ %576, %574 ]
  %587 = phi i64 [ %593, %584 ], [ %582, %574 ]
  %588 = getelementptr inbounds %"class.v8::internal::wasm::AsmType"*, %"class.v8::internal::wasm::AsmType"** %585, i64 -1
  %589 = getelementptr inbounds %"class.v8::internal::wasm::AsmType"*, %"class.v8::internal::wasm::AsmType"** %586, i64 -1
  %590 = bitcast %"class.v8::internal::wasm::AsmType"** %589 to i64*
  %591 = load i64, i64* %590, align 8
  %592 = bitcast %"class.v8::internal::wasm::AsmType"** %588 to i64*
  store i64 %591, i64* %592, align 8
  %593 = add i64 %587, -1
  %594 = icmp eq i64 %593, 0
  br i1 %594, label %595, label %584, !llvm.loop !254

595:                                              ; preds = %584, %574
  %596 = phi %"class.v8::internal::wasm::AsmType"** [ undef, %574 ], [ %588, %584 ]
  %597 = phi %"class.v8::internal::wasm::AsmType"** [ %575, %574 ], [ %588, %584 ]
  %598 = phi %"class.v8::internal::wasm::AsmType"** [ %576, %574 ], [ %589, %584 ]
  %599 = icmp ult i64 %579, 56
  br i1 %599, label %644, label %600

600:                                              ; preds = %595, %600
  %601 = phi %"class.v8::internal::wasm::AsmType"** [ %638, %600 ], [ %597, %595 ]
  %602 = phi %"class.v8::internal::wasm::AsmType"** [ %639, %600 ], [ %598, %595 ]
  %603 = getelementptr inbounds %"class.v8::internal::wasm::AsmType"*, %"class.v8::internal::wasm::AsmType"** %601, i64 -1
  %604 = getelementptr inbounds %"class.v8::internal::wasm::AsmType"*, %"class.v8::internal::wasm::AsmType"** %602, i64 -1
  %605 = bitcast %"class.v8::internal::wasm::AsmType"** %604 to i64*
  %606 = load i64, i64* %605, align 8
  %607 = bitcast %"class.v8::internal::wasm::AsmType"** %603 to i64*
  store i64 %606, i64* %607, align 8
  %608 = getelementptr inbounds %"class.v8::internal::wasm::AsmType"*, %"class.v8::internal::wasm::AsmType"** %601, i64 -2
  %609 = getelementptr inbounds %"class.v8::internal::wasm::AsmType"*, %"class.v8::internal::wasm::AsmType"** %602, i64 -2
  %610 = bitcast %"class.v8::internal::wasm::AsmType"** %609 to i64*
  %611 = load i64, i64* %610, align 8
  %612 = bitcast %"class.v8::internal::wasm::AsmType"** %608 to i64*
  store i64 %611, i64* %612, align 8
  %613 = getelementptr inbounds %"class.v8::internal::wasm::AsmType"*, %"class.v8::internal::wasm::AsmType"** %601, i64 -3
  %614 = getelementptr inbounds %"class.v8::internal::wasm::AsmType"*, %"class.v8::internal::wasm::AsmType"** %602, i64 -3
  %615 = bitcast %"class.v8::internal::wasm::AsmType"** %614 to i64*
  %616 = load i64, i64* %615, align 8
  %617 = bitcast %"class.v8::internal::wasm::AsmType"** %613 to i64*
  store i64 %616, i64* %617, align 8
  %618 = getelementptr inbounds %"class.v8::internal::wasm::AsmType"*, %"class.v8::internal::wasm::AsmType"** %601, i64 -4
  %619 = getelementptr inbounds %"class.v8::internal::wasm::AsmType"*, %"class.v8::internal::wasm::AsmType"** %602, i64 -4
  %620 = bitcast %"class.v8::internal::wasm::AsmType"** %619 to i64*
  %621 = load i64, i64* %620, align 8
  %622 = bitcast %"class.v8::internal::wasm::AsmType"** %618 to i64*
  store i64 %621, i64* %622, align 8
  %623 = getelementptr inbounds %"class.v8::internal::wasm::AsmType"*, %"class.v8::internal::wasm::AsmType"** %601, i64 -5
  %624 = getelementptr inbounds %"class.v8::internal::wasm::AsmType"*, %"class.v8::internal::wasm::AsmType"** %602, i64 -5
  %625 = bitcast %"class.v8::internal::wasm::AsmType"** %624 to i64*
  %626 = load i64, i64* %625, align 8
  %627 = bitcast %"class.v8::internal::wasm::AsmType"** %623 to i64*
  store i64 %626, i64* %627, align 8
  %628 = getelementptr inbounds %"class.v8::internal::wasm::AsmType"*, %"class.v8::internal::wasm::AsmType"** %601, i64 -6
  %629 = getelementptr inbounds %"class.v8::internal::wasm::AsmType"*, %"class.v8::internal::wasm::AsmType"** %602, i64 -6
  %630 = bitcast %"class.v8::internal::wasm::AsmType"** %629 to i64*
  %631 = load i64, i64* %630, align 8
  %632 = bitcast %"class.v8::internal::wasm::AsmType"** %628 to i64*
  store i64 %631, i64* %632, align 8
  %633 = getelementptr inbounds %"class.v8::internal::wasm::AsmType"*, %"class.v8::internal::wasm::AsmType"** %601, i64 -7
  %634 = getelementptr inbounds %"class.v8::internal::wasm::AsmType"*, %"class.v8::internal::wasm::AsmType"** %602, i64 -7
  %635 = bitcast %"class.v8::internal::wasm::AsmType"** %634 to i64*
  %636 = load i64, i64* %635, align 8
  %637 = bitcast %"class.v8::internal::wasm::AsmType"** %633 to i64*
  store i64 %636, i64* %637, align 8
  %638 = getelementptr inbounds %"class.v8::internal::wasm::AsmType"*, %"class.v8::internal::wasm::AsmType"** %601, i64 -8
  %639 = getelementptr inbounds %"class.v8::internal::wasm::AsmType"*, %"class.v8::internal::wasm::AsmType"** %602, i64 -8
  %640 = bitcast %"class.v8::internal::wasm::AsmType"** %639 to i64*
  %641 = load i64, i64* %640, align 8
  %642 = bitcast %"class.v8::internal::wasm::AsmType"** %638 to i64*
  store i64 %641, i64* %642, align 8
  %643 = icmp eq %"class.v8::internal::wasm::AsmType"** %639, %470
  br i1 %643, label %644, label %600, !llvm.loop !255

644:                                              ; preds = %595, %600, %572, %461
  %645 = phi %"class.v8::internal::wasm::AsmType"** [ %464, %461 ], [ %498, %572 ], [ %596, %595 ], [ %638, %600 ]
  %646 = ptrtoint %"class.v8::internal::wasm::AsmType"** %645 to i64
  store i64 %646, i64* %389, align 8
  store i64 %469, i64* %388, align 8
  store i64 %466, i64* %390, align 8
  br label %647

647:                                              ; preds = %422, %644
  %648 = tail call zeroext i1 @_ZN2v88internal4wasm7AsmType3IsAEPS2_(%"class.v8::internal::wasm::AsmType"* %413, %"class.v8::internal::wasm::AsmType"* nonnull inttoptr (i64 769 to %"class.v8::internal::wasm::AsmType"*)) #12
  br i1 %648, label %649, label %879

649:                                              ; preds = %647
  %650 = load %"class.v8::internal::wasm::AsmType"**, %"class.v8::internal::wasm::AsmType"*** %393, align 8
  %651 = load %"class.v8::internal::wasm::AsmType"**, %"class.v8::internal::wasm::AsmType"*** %394, align 8
  %652 = icmp ult %"class.v8::internal::wasm::AsmType"** %650, %651
  %653 = ptrtoint %"class.v8::internal::wasm::AsmType"** %651 to i64
  br i1 %652, label %654, label %658

654:                                              ; preds = %649
  %655 = bitcast %"class.v8::internal::wasm::AsmType"** %650 to i64*
  store i64 769, i64* %655, align 8
  %656 = getelementptr inbounds %"class.v8::internal::wasm::AsmType"*, %"class.v8::internal::wasm::AsmType"** %650, i64 1
  %657 = ptrtoint %"class.v8::internal::wasm::AsmType"** %656 to i64
  store i64 %657, i64* %395, align 8
  br label %1348

658:                                              ; preds = %649
  %659 = ptrtoint %"class.v8::internal::wasm::AsmType"** %650 to i64
  %660 = load i64, i64* %396, align 8
  %661 = sub i64 %659, %660
  %662 = ashr exact i64 %661, 3
  %663 = add nsw i64 %662, 1
  %664 = icmp ugt i64 %663, 268435455
  br i1 %664, label %665, label %667

665:                                              ; preds = %658
  %666 = bitcast %"class.v8::internal::wasm::AsmJsParser::CachedVector"* %4 to %"class.std::__1::__vector_base_common"*
  call void @_ZNKSt3__120__vector_base_commonILb1EE20__throw_length_errorEv(%"class.std::__1::__vector_base_common"* nonnull %666) #13
  unreachable

667:                                              ; preds = %658
  %668 = sub i64 %653, %660
  %669 = ashr exact i64 %668, 3
  %670 = icmp ult i64 %669, 134217727
  br i1 %670, label %671, label %676

671:                                              ; preds = %667
  %672 = ashr exact i64 %668, 2
  %673 = icmp ult i64 %672, %663
  %674 = select i1 %673, i64 %663, i64 %672
  %675 = icmp eq i64 %674, 0
  br i1 %675, label %693, label %676

676:                                              ; preds = %671, %667
  %677 = phi i64 [ %674, %671 ], [ 268435455, %667 ]
  %678 = load %"class.v8::internal::Zone"*, %"class.v8::internal::Zone"** %398, align 8
  %679 = shl i64 %677, 3
  %680 = getelementptr inbounds %"class.v8::internal::Zone", %"class.v8::internal::Zone"* %678, i64 0, i32 2
  %681 = load i64, i64* %680, align 8
  %682 = getelementptr inbounds %"class.v8::internal::Zone", %"class.v8::internal::Zone"* %678, i64 0, i32 3
  %683 = load i64, i64* %682, align 8
  %684 = sub i64 %683, %681
  %685 = icmp ugt i64 %679, %684
  br i1 %685, label %686, label %688, !prof !2

686:                                              ; preds = %676
  %687 = tail call i64 @_ZN2v88internal4Zone9NewExpandEm(%"class.v8::internal::Zone"* %678, i64 %679) #12
  br label %690

688:                                              ; preds = %676
  %689 = add i64 %681, %679
  store i64 %689, i64* %680, align 8
  br label %690

690:                                              ; preds = %688, %686
  %691 = phi i64 [ %687, %686 ], [ %681, %688 ]
  %692 = inttoptr i64 %691 to %"class.v8::internal::wasm::AsmType"**
  br label %693

693:                                              ; preds = %690, %671
  %694 = phi i64 [ %677, %690 ], [ 0, %671 ]
  %695 = phi %"class.v8::internal::wasm::AsmType"** [ %692, %690 ], [ null, %671 ]
  %696 = getelementptr inbounds %"class.v8::internal::wasm::AsmType"*, %"class.v8::internal::wasm::AsmType"** %695, i64 %662
  %697 = getelementptr inbounds %"class.v8::internal::wasm::AsmType"*, %"class.v8::internal::wasm::AsmType"** %695, i64 %694
  %698 = ptrtoint %"class.v8::internal::wasm::AsmType"** %697 to i64
  %699 = bitcast %"class.v8::internal::wasm::AsmType"** %696 to i64*
  store i64 769, i64* %699, align 8
  %700 = getelementptr inbounds %"class.v8::internal::wasm::AsmType"*, %"class.v8::internal::wasm::AsmType"** %696, i64 1
  %701 = ptrtoint %"class.v8::internal::wasm::AsmType"** %700 to i64
  %702 = load %"class.v8::internal::wasm::AsmType"**, %"class.v8::internal::wasm::AsmType"*** %399, align 8
  %703 = ptrtoint %"class.v8::internal::wasm::AsmType"** %702 to i64
  %704 = load %"class.v8::internal::wasm::AsmType"**, %"class.v8::internal::wasm::AsmType"*** %393, align 8
  %705 = icmp eq %"class.v8::internal::wasm::AsmType"** %704, %702
  br i1 %705, label %876, label %706

706:                                              ; preds = %693
  %707 = getelementptr %"class.v8::internal::wasm::AsmType"*, %"class.v8::internal::wasm::AsmType"** %704, i64 -1
  %708 = ptrtoint %"class.v8::internal::wasm::AsmType"** %707 to i64
  %709 = sub i64 %708, %703
  %710 = lshr i64 %709, 3
  %711 = add nuw nsw i64 %710, 1
  %712 = icmp ult i64 %711, 4
  br i1 %712, label %806, label %713

713:                                              ; preds = %706
  %714 = getelementptr %"class.v8::internal::wasm::AsmType"*, %"class.v8::internal::wasm::AsmType"** %695, i64 -1
  %715 = getelementptr %"class.v8::internal::wasm::AsmType"*, %"class.v8::internal::wasm::AsmType"** %704, i64 -1
  %716 = ptrtoint %"class.v8::internal::wasm::AsmType"** %715 to i64
  %717 = sub i64 %716, %703
  %718 = lshr i64 %717, 3
  %719 = sub nsw i64 %662, %718
  %720 = getelementptr %"class.v8::internal::wasm::AsmType"*, %"class.v8::internal::wasm::AsmType"** %714, i64 %719
  %721 = getelementptr %"class.v8::internal::wasm::AsmType"*, %"class.v8::internal::wasm::AsmType"** %704, i64 -1
  %722 = sub nsw i64 0, %718
  %723 = getelementptr %"class.v8::internal::wasm::AsmType"*, %"class.v8::internal::wasm::AsmType"** %721, i64 %722
  %724 = icmp ult %"class.v8::internal::wasm::AsmType"** %720, %704
  %725 = icmp ult %"class.v8::internal::wasm::AsmType"** %723, %696
  %726 = and i1 %724, %725
  br i1 %726, label %806, label %727

727:                                              ; preds = %713
  %728 = and i64 %711, 4611686018427387900
  %729 = sub nsw i64 0, %728
  %730 = getelementptr %"class.v8::internal::wasm::AsmType"*, %"class.v8::internal::wasm::AsmType"** %696, i64 %729
  %731 = sub nsw i64 0, %728
  %732 = getelementptr %"class.v8::internal::wasm::AsmType"*, %"class.v8::internal::wasm::AsmType"** %704, i64 %731
  %733 = add nsw i64 %728, -4
  %734 = lshr exact i64 %733, 2
  %735 = add nuw nsw i64 %734, 1
  %736 = and i64 %735, 1
  %737 = icmp eq i64 %733, 0
  br i1 %737, label %782, label %738

738:                                              ; preds = %727
  %739 = sub nuw nsw i64 %735, %736
  %740 = getelementptr %"class.v8::internal::wasm::AsmType"*, %"class.v8::internal::wasm::AsmType"** %696, i64 -1
  %741 = getelementptr %"class.v8::internal::wasm::AsmType"*, %"class.v8::internal::wasm::AsmType"** %704, i64 -1
  %742 = getelementptr %"class.v8::internal::wasm::AsmType"*, %"class.v8::internal::wasm::AsmType"** %696, i64 -1
  %743 = getelementptr %"class.v8::internal::wasm::AsmType"*, %"class.v8::internal::wasm::AsmType"** %704, i64 -1
  br label %744

744:                                              ; preds = %744, %738
  %745 = phi i64 [ 0, %738 ], [ %779, %744 ]
  %746 = phi i64 [ %739, %738 ], [ %780, %744 ]
  %747 = sub i64 0, %745
  %748 = sub i64 0, %745
  %749 = getelementptr inbounds %"class.v8::internal::wasm::AsmType"*, %"class.v8::internal::wasm::AsmType"** %740, i64 %747
  %750 = getelementptr inbounds %"class.v8::internal::wasm::AsmType"*, %"class.v8::internal::wasm::AsmType"** %741, i64 %748
  %751 = getelementptr inbounds %"class.v8::internal::wasm::AsmType"*, %"class.v8::internal::wasm::AsmType"** %750, i64 -1
  %752 = bitcast %"class.v8::internal::wasm::AsmType"** %751 to <2 x i64>*
  %753 = load <2 x i64>, <2 x i64>* %752, align 8, !alias.scope !256
  %754 = getelementptr inbounds %"class.v8::internal::wasm::AsmType"*, %"class.v8::internal::wasm::AsmType"** %750, i64 -2
  %755 = getelementptr inbounds %"class.v8::internal::wasm::AsmType"*, %"class.v8::internal::wasm::AsmType"** %754, i64 -1
  %756 = bitcast %"class.v8::internal::wasm::AsmType"** %755 to <2 x i64>*
  %757 = load <2 x i64>, <2 x i64>* %756, align 8, !alias.scope !256
  %758 = getelementptr inbounds %"class.v8::internal::wasm::AsmType"*, %"class.v8::internal::wasm::AsmType"** %749, i64 -1
  %759 = bitcast %"class.v8::internal::wasm::AsmType"** %758 to <2 x i64>*
  store <2 x i64> %753, <2 x i64>* %759, align 8, !alias.scope !259, !noalias !256
  %760 = getelementptr inbounds %"class.v8::internal::wasm::AsmType"*, %"class.v8::internal::wasm::AsmType"** %749, i64 -2
  %761 = getelementptr inbounds %"class.v8::internal::wasm::AsmType"*, %"class.v8::internal::wasm::AsmType"** %760, i64 -1
  %762 = bitcast %"class.v8::internal::wasm::AsmType"** %761 to <2 x i64>*
  store <2 x i64> %757, <2 x i64>* %762, align 8, !alias.scope !259, !noalias !256
  %763 = sub nuw nsw i64 -4, %745
  %764 = sub nuw nsw i64 -4, %745
  %765 = getelementptr inbounds %"class.v8::internal::wasm::AsmType"*, %"class.v8::internal::wasm::AsmType"** %742, i64 %763
  %766 = getelementptr inbounds %"class.v8::internal::wasm::AsmType"*, %"class.v8::internal::wasm::AsmType"** %743, i64 %764
  %767 = getelementptr inbounds %"class.v8::internal::wasm::AsmType"*, %"class.v8::internal::wasm::AsmType"** %766, i64 -1
  %768 = bitcast %"class.v8::internal::wasm::AsmType"** %767 to <2 x i64>*
  %769 = load <2 x i64>, <2 x i64>* %768, align 8, !alias.scope !256
  %770 = getelementptr inbounds %"class.v8::internal::wasm::AsmType"*, %"class.v8::internal::wasm::AsmType"** %766, i64 -2
  %771 = getelementptr inbounds %"class.v8::internal::wasm::AsmType"*, %"class.v8::internal::wasm::AsmType"** %770, i64 -1
  %772 = bitcast %"class.v8::internal::wasm::AsmType"** %771 to <2 x i64>*
  %773 = load <2 x i64>, <2 x i64>* %772, align 8, !alias.scope !256
  %774 = getelementptr inbounds %"class.v8::internal::wasm::AsmType"*, %"class.v8::internal::wasm::AsmType"** %765, i64 -1
  %775 = bitcast %"class.v8::internal::wasm::AsmType"** %774 to <2 x i64>*
  store <2 x i64> %769, <2 x i64>* %775, align 8, !alias.scope !259, !noalias !256
  %776 = getelementptr inbounds %"class.v8::internal::wasm::AsmType"*, %"class.v8::internal::wasm::AsmType"** %765, i64 -2
  %777 = getelementptr inbounds %"class.v8::internal::wasm::AsmType"*, %"class.v8::internal::wasm::AsmType"** %776, i64 -1
  %778 = bitcast %"class.v8::internal::wasm::AsmType"** %777 to <2 x i64>*
  store <2 x i64> %773, <2 x i64>* %778, align 8, !alias.scope !259, !noalias !256
  %779 = add i64 %745, 8
  %780 = add i64 %746, -2
  %781 = icmp eq i64 %780, 0
  br i1 %781, label %782, label %744, !llvm.loop !261

782:                                              ; preds = %744, %727
  %783 = phi i64 [ 0, %727 ], [ %779, %744 ]
  %784 = icmp eq i64 %736, 0
  br i1 %784, label %804, label %785

785:                                              ; preds = %782
  %786 = sub i64 0, %783
  %787 = getelementptr %"class.v8::internal::wasm::AsmType"*, %"class.v8::internal::wasm::AsmType"** %696, i64 -1
  %788 = sub i64 0, %783
  %789 = getelementptr %"class.v8::internal::wasm::AsmType"*, %"class.v8::internal::wasm::AsmType"** %704, i64 -1
  %790 = getelementptr inbounds %"class.v8::internal::wasm::AsmType"*, %"class.v8::internal::wasm::AsmType"** %787, i64 %786
  %791 = getelementptr inbounds %"class.v8::internal::wasm::AsmType"*, %"class.v8::internal::wasm::AsmType"** %789, i64 %788
  %792 = getelementptr inbounds %"class.v8::internal::wasm::AsmType"*, %"class.v8::internal::wasm::AsmType"** %791, i64 -1
  %793 = bitcast %"class.v8::internal::wasm::AsmType"** %792 to <2 x i64>*
  %794 = load <2 x i64>, <2 x i64>* %793, align 8, !alias.scope !256
  %795 = getelementptr inbounds %"class.v8::internal::wasm::AsmType"*, %"class.v8::internal::wasm::AsmType"** %791, i64 -2
  %796 = getelementptr inbounds %"class.v8::internal::wasm::AsmType"*, %"class.v8::internal::wasm::AsmType"** %795, i64 -1
  %797 = bitcast %"class.v8::internal::wasm::AsmType"** %796 to <2 x i64>*
  %798 = load <2 x i64>, <2 x i64>* %797, align 8, !alias.scope !256
  %799 = getelementptr inbounds %"class.v8::internal::wasm::AsmType"*, %"class.v8::internal::wasm::AsmType"** %790, i64 -1
  %800 = bitcast %"class.v8::internal::wasm::AsmType"** %799 to <2 x i64>*
  store <2 x i64> %794, <2 x i64>* %800, align 8, !alias.scope !259, !noalias !256
  %801 = getelementptr inbounds %"class.v8::internal::wasm::AsmType"*, %"class.v8::internal::wasm::AsmType"** %790, i64 -2
  %802 = getelementptr inbounds %"class.v8::internal::wasm::AsmType"*, %"class.v8::internal::wasm::AsmType"** %801, i64 -1
  %803 = bitcast %"class.v8::internal::wasm::AsmType"** %802 to <2 x i64>*
  store <2 x i64> %798, <2 x i64>* %803, align 8, !alias.scope !259, !noalias !256
  br label %804

804:                                              ; preds = %782, %785
  %805 = icmp eq i64 %711, %728
  br i1 %805, label %876, label %806

806:                                              ; preds = %804, %713, %706
  %807 = phi %"class.v8::internal::wasm::AsmType"** [ %696, %713 ], [ %696, %706 ], [ %730, %804 ]
  %808 = phi %"class.v8::internal::wasm::AsmType"** [ %704, %713 ], [ %704, %706 ], [ %732, %804 ]
  %809 = getelementptr %"class.v8::internal::wasm::AsmType"*, %"class.v8::internal::wasm::AsmType"** %808, i64 -1
  %810 = ptrtoint %"class.v8::internal::wasm::AsmType"** %809 to i64
  %811 = sub i64 %810, %703
  %812 = lshr i64 %811, 3
  %813 = add nuw nsw i64 %812, 1
  %814 = and i64 %813, 7
  %815 = icmp eq i64 %814, 0
  br i1 %815, label %827, label %816

816:                                              ; preds = %806, %816
  %817 = phi %"class.v8::internal::wasm::AsmType"** [ %820, %816 ], [ %807, %806 ]
  %818 = phi %"class.v8::internal::wasm::AsmType"** [ %821, %816 ], [ %808, %806 ]
  %819 = phi i64 [ %825, %816 ], [ %814, %806 ]
  %820 = getelementptr inbounds %"class.v8::internal::wasm::AsmType"*, %"class.v8::internal::wasm::AsmType"** %817, i64 -1
  %821 = getelementptr inbounds %"class.v8::internal::wasm::AsmType"*, %"class.v8::internal::wasm::AsmType"** %818, i64 -1
  %822 = bitcast %"class.v8::internal::wasm::AsmType"** %821 to i64*
  %823 = load i64, i64* %822, align 8
  %824 = bitcast %"class.v8::internal::wasm::AsmType"** %820 to i64*
  store i64 %823, i64* %824, align 8
  %825 = add i64 %819, -1
  %826 = icmp eq i64 %825, 0
  br i1 %826, label %827, label %816, !llvm.loop !262

827:                                              ; preds = %816, %806
  %828 = phi %"class.v8::internal::wasm::AsmType"** [ undef, %806 ], [ %820, %816 ]
  %829 = phi %"class.v8::internal::wasm::AsmType"** [ %807, %806 ], [ %820, %816 ]
  %830 = phi %"class.v8::internal::wasm::AsmType"** [ %808, %806 ], [ %821, %816 ]
  %831 = icmp ult i64 %811, 56
  br i1 %831, label %876, label %832

832:                                              ; preds = %827, %832
  %833 = phi %"class.v8::internal::wasm::AsmType"** [ %870, %832 ], [ %829, %827 ]
  %834 = phi %"class.v8::internal::wasm::AsmType"** [ %871, %832 ], [ %830, %827 ]
  %835 = getelementptr inbounds %"class.v8::internal::wasm::AsmType"*, %"class.v8::internal::wasm::AsmType"** %833, i64 -1
  %836 = getelementptr inbounds %"class.v8::internal::wasm::AsmType"*, %"class.v8::internal::wasm::AsmType"** %834, i64 -1
  %837 = bitcast %"class.v8::internal::wasm::AsmType"** %836 to i64*
  %838 = load i64, i64* %837, align 8
  %839 = bitcast %"class.v8::internal::wasm::AsmType"** %835 to i64*
  store i64 %838, i64* %839, align 8
  %840 = getelementptr inbounds %"class.v8::internal::wasm::AsmType"*, %"class.v8::internal::wasm::AsmType"** %833, i64 -2
  %841 = getelementptr inbounds %"class.v8::internal::wasm::AsmType"*, %"class.v8::internal::wasm::AsmType"** %834, i64 -2
  %842 = bitcast %"class.v8::internal::wasm::AsmType"** %841 to i64*
  %843 = load i64, i64* %842, align 8
  %844 = bitcast %"class.v8::internal::wasm::AsmType"** %840 to i64*
  store i64 %843, i64* %844, align 8
  %845 = getelementptr inbounds %"class.v8::internal::wasm::AsmType"*, %"class.v8::internal::wasm::AsmType"** %833, i64 -3
  %846 = getelementptr inbounds %"class.v8::internal::wasm::AsmType"*, %"class.v8::internal::wasm::AsmType"** %834, i64 -3
  %847 = bitcast %"class.v8::internal::wasm::AsmType"** %846 to i64*
  %848 = load i64, i64* %847, align 8
  %849 = bitcast %"class.v8::internal::wasm::AsmType"** %845 to i64*
  store i64 %848, i64* %849, align 8
  %850 = getelementptr inbounds %"class.v8::internal::wasm::AsmType"*, %"class.v8::internal::wasm::AsmType"** %833, i64 -4
  %851 = getelementptr inbounds %"class.v8::internal::wasm::AsmType"*, %"class.v8::internal::wasm::AsmType"** %834, i64 -4
  %852 = bitcast %"class.v8::internal::wasm::AsmType"** %851 to i64*
  %853 = load i64, i64* %852, align 8
  %854 = bitcast %"class.v8::internal::wasm::AsmType"** %850 to i64*
  store i64 %853, i64* %854, align 8
  %855 = getelementptr inbounds %"class.v8::internal::wasm::AsmType"*, %"class.v8::internal::wasm::AsmType"** %833, i64 -5
  %856 = getelementptr inbounds %"class.v8::internal::wasm::AsmType"*, %"class.v8::internal::wasm::AsmType"** %834, i64 -5
  %857 = bitcast %"class.v8::internal::wasm::AsmType"** %856 to i64*
  %858 = load i64, i64* %857, align 8
  %859 = bitcast %"class.v8::internal::wasm::AsmType"** %855 to i64*
  store i64 %858, i64* %859, align 8
  %860 = getelementptr inbounds %"class.v8::internal::wasm::AsmType"*, %"class.v8::internal::wasm::AsmType"** %833, i64 -6
  %861 = getelementptr inbounds %"class.v8::internal::wasm::AsmType"*, %"class.v8::internal::wasm::AsmType"** %834, i64 -6
  %862 = bitcast %"class.v8::internal::wasm::AsmType"** %861 to i64*
  %863 = load i64, i64* %862, align 8
  %864 = bitcast %"class.v8::internal::wasm::AsmType"** %860 to i64*
  store i64 %863, i64* %864, align 8
  %865 = getelementptr inbounds %"class.v8::internal::wasm::AsmType"*, %"class.v8::internal::wasm::AsmType"** %833, i64 -7
  %866 = getelementptr inbounds %"class.v8::internal::wasm::AsmType"*, %"class.v8::internal::wasm::AsmType"** %834, i64 -7
  %867 = bitcast %"class.v8::internal::wasm::AsmType"** %866 to i64*
  %868 = load i64, i64* %867, align 8
  %869 = bitcast %"class.v8::internal::wasm::AsmType"** %865 to i64*
  store i64 %868, i64* %869, align 8
  %870 = getelementptr inbounds %"class.v8::internal::wasm::AsmType"*, %"class.v8::internal::wasm::AsmType"** %833, i64 -8
  %871 = getelementptr inbounds %"class.v8::internal::wasm::AsmType"*, %"class.v8::internal::wasm::AsmType"** %834, i64 -8
  %872 = bitcast %"class.v8::internal::wasm::AsmType"** %871 to i64*
  %873 = load i64, i64* %872, align 8
  %874 = bitcast %"class.v8::internal::wasm::AsmType"** %870 to i64*
  store i64 %873, i64* %874, align 8
  %875 = icmp eq %"class.v8::internal::wasm::AsmType"** %871, %702
  br i1 %875, label %876, label %832, !llvm.loop !263

876:                                              ; preds = %827, %832, %804, %693
  %877 = phi %"class.v8::internal::wasm::AsmType"** [ %696, %693 ], [ %730, %804 ], [ %828, %827 ], [ %870, %832 ]
  %878 = ptrtoint %"class.v8::internal::wasm::AsmType"** %877 to i64
  store i64 %878, i64* %396, align 8
  store i64 %701, i64* %395, align 8
  store i64 %698, i64* %397, align 8
  br label %1348

879:                                              ; preds = %647
  %880 = tail call zeroext i1 @_ZN2v88internal4wasm7AsmType3IsAEPS2_(%"class.v8::internal::wasm::AsmType"* %413, %"class.v8::internal::wasm::AsmType"* nonnull inttoptr (i64 57357 to %"class.v8::internal::wasm::AsmType"*)) #12
  br i1 %880, label %881, label %1111

881:                                              ; preds = %879
  %882 = load %"class.v8::internal::wasm::AsmType"**, %"class.v8::internal::wasm::AsmType"*** %393, align 8
  %883 = load %"class.v8::internal::wasm::AsmType"**, %"class.v8::internal::wasm::AsmType"*** %394, align 8
  %884 = icmp ult %"class.v8::internal::wasm::AsmType"** %882, %883
  %885 = ptrtoint %"class.v8::internal::wasm::AsmType"** %883 to i64
  br i1 %884, label %886, label %890

886:                                              ; preds = %881
  %887 = bitcast %"class.v8::internal::wasm::AsmType"** %882 to i64*
  store i64 57357, i64* %887, align 8
  %888 = getelementptr inbounds %"class.v8::internal::wasm::AsmType"*, %"class.v8::internal::wasm::AsmType"** %882, i64 1
  %889 = ptrtoint %"class.v8::internal::wasm::AsmType"** %888 to i64
  store i64 %889, i64* %395, align 8
  br label %1348

890:                                              ; preds = %881
  %891 = ptrtoint %"class.v8::internal::wasm::AsmType"** %882 to i64
  %892 = load i64, i64* %396, align 8
  %893 = sub i64 %891, %892
  %894 = ashr exact i64 %893, 3
  %895 = add nsw i64 %894, 1
  %896 = icmp ugt i64 %895, 268435455
  br i1 %896, label %897, label %899

897:                                              ; preds = %890
  %898 = bitcast %"class.v8::internal::wasm::AsmJsParser::CachedVector"* %4 to %"class.std::__1::__vector_base_common"*
  call void @_ZNKSt3__120__vector_base_commonILb1EE20__throw_length_errorEv(%"class.std::__1::__vector_base_common"* nonnull %898) #13
  unreachable

899:                                              ; preds = %890
  %900 = sub i64 %885, %892
  %901 = ashr exact i64 %900, 3
  %902 = icmp ult i64 %901, 134217727
  br i1 %902, label %903, label %908

903:                                              ; preds = %899
  %904 = ashr exact i64 %900, 2
  %905 = icmp ult i64 %904, %895
  %906 = select i1 %905, i64 %895, i64 %904
  %907 = icmp eq i64 %906, 0
  br i1 %907, label %925, label %908

908:                                              ; preds = %903, %899
  %909 = phi i64 [ %906, %903 ], [ 268435455, %899 ]
  %910 = load %"class.v8::internal::Zone"*, %"class.v8::internal::Zone"** %398, align 8
  %911 = shl i64 %909, 3
  %912 = getelementptr inbounds %"class.v8::internal::Zone", %"class.v8::internal::Zone"* %910, i64 0, i32 2
  %913 = load i64, i64* %912, align 8
  %914 = getelementptr inbounds %"class.v8::internal::Zone", %"class.v8::internal::Zone"* %910, i64 0, i32 3
  %915 = load i64, i64* %914, align 8
  %916 = sub i64 %915, %913
  %917 = icmp ugt i64 %911, %916
  br i1 %917, label %918, label %920, !prof !2

918:                                              ; preds = %908
  %919 = tail call i64 @_ZN2v88internal4Zone9NewExpandEm(%"class.v8::internal::Zone"* %910, i64 %911) #12
  br label %922

920:                                              ; preds = %908
  %921 = add i64 %913, %911
  store i64 %921, i64* %912, align 8
  br label %922

922:                                              ; preds = %920, %918
  %923 = phi i64 [ %919, %918 ], [ %913, %920 ]
  %924 = inttoptr i64 %923 to %"class.v8::internal::wasm::AsmType"**
  br label %925

925:                                              ; preds = %922, %903
  %926 = phi i64 [ %909, %922 ], [ 0, %903 ]
  %927 = phi %"class.v8::internal::wasm::AsmType"** [ %924, %922 ], [ null, %903 ]
  %928 = getelementptr inbounds %"class.v8::internal::wasm::AsmType"*, %"class.v8::internal::wasm::AsmType"** %927, i64 %894
  %929 = getelementptr inbounds %"class.v8::internal::wasm::AsmType"*, %"class.v8::internal::wasm::AsmType"** %927, i64 %926
  %930 = ptrtoint %"class.v8::internal::wasm::AsmType"** %929 to i64
  %931 = bitcast %"class.v8::internal::wasm::AsmType"** %928 to i64*
  store i64 57357, i64* %931, align 8
  %932 = getelementptr inbounds %"class.v8::internal::wasm::AsmType"*, %"class.v8::internal::wasm::AsmType"** %928, i64 1
  %933 = ptrtoint %"class.v8::internal::wasm::AsmType"** %932 to i64
  %934 = load %"class.v8::internal::wasm::AsmType"**, %"class.v8::internal::wasm::AsmType"*** %399, align 8
  %935 = ptrtoint %"class.v8::internal::wasm::AsmType"** %934 to i64
  %936 = load %"class.v8::internal::wasm::AsmType"**, %"class.v8::internal::wasm::AsmType"*** %393, align 8
  %937 = icmp eq %"class.v8::internal::wasm::AsmType"** %936, %934
  br i1 %937, label %1108, label %938

938:                                              ; preds = %925
  %939 = getelementptr %"class.v8::internal::wasm::AsmType"*, %"class.v8::internal::wasm::AsmType"** %936, i64 -1
  %940 = ptrtoint %"class.v8::internal::wasm::AsmType"** %939 to i64
  %941 = sub i64 %940, %935
  %942 = lshr i64 %941, 3
  %943 = add nuw nsw i64 %942, 1
  %944 = icmp ult i64 %943, 4
  br i1 %944, label %1038, label %945

945:                                              ; preds = %938
  %946 = getelementptr %"class.v8::internal::wasm::AsmType"*, %"class.v8::internal::wasm::AsmType"** %927, i64 -1
  %947 = getelementptr %"class.v8::internal::wasm::AsmType"*, %"class.v8::internal::wasm::AsmType"** %936, i64 -1
  %948 = ptrtoint %"class.v8::internal::wasm::AsmType"** %947 to i64
  %949 = sub i64 %948, %935
  %950 = lshr i64 %949, 3
  %951 = sub nsw i64 %894, %950
  %952 = getelementptr %"class.v8::internal::wasm::AsmType"*, %"class.v8::internal::wasm::AsmType"** %946, i64 %951
  %953 = getelementptr %"class.v8::internal::wasm::AsmType"*, %"class.v8::internal::wasm::AsmType"** %936, i64 -1
  %954 = sub nsw i64 0, %950
  %955 = getelementptr %"class.v8::internal::wasm::AsmType"*, %"class.v8::internal::wasm::AsmType"** %953, i64 %954
  %956 = icmp ult %"class.v8::internal::wasm::AsmType"** %952, %936
  %957 = icmp ult %"class.v8::internal::wasm::AsmType"** %955, %928
  %958 = and i1 %956, %957
  br i1 %958, label %1038, label %959

959:                                              ; preds = %945
  %960 = and i64 %943, 4611686018427387900
  %961 = sub nsw i64 0, %960
  %962 = getelementptr %"class.v8::internal::wasm::AsmType"*, %"class.v8::internal::wasm::AsmType"** %928, i64 %961
  %963 = sub nsw i64 0, %960
  %964 = getelementptr %"class.v8::internal::wasm::AsmType"*, %"class.v8::internal::wasm::AsmType"** %936, i64 %963
  %965 = add nsw i64 %960, -4
  %966 = lshr exact i64 %965, 2
  %967 = add nuw nsw i64 %966, 1
  %968 = and i64 %967, 1
  %969 = icmp eq i64 %965, 0
  br i1 %969, label %1014, label %970

970:                                              ; preds = %959
  %971 = sub nuw nsw i64 %967, %968
  %972 = getelementptr %"class.v8::internal::wasm::AsmType"*, %"class.v8::internal::wasm::AsmType"** %928, i64 -1
  %973 = getelementptr %"class.v8::internal::wasm::AsmType"*, %"class.v8::internal::wasm::AsmType"** %936, i64 -1
  %974 = getelementptr %"class.v8::internal::wasm::AsmType"*, %"class.v8::internal::wasm::AsmType"** %928, i64 -1
  %975 = getelementptr %"class.v8::internal::wasm::AsmType"*, %"class.v8::internal::wasm::AsmType"** %936, i64 -1
  br label %976

976:                                              ; preds = %976, %970
  %977 = phi i64 [ 0, %970 ], [ %1011, %976 ]
  %978 = phi i64 [ %971, %970 ], [ %1012, %976 ]
  %979 = sub i64 0, %977
  %980 = sub i64 0, %977
  %981 = getelementptr inbounds %"class.v8::internal::wasm::AsmType"*, %"class.v8::internal::wasm::AsmType"** %972, i64 %979
  %982 = getelementptr inbounds %"class.v8::internal::wasm::AsmType"*, %"class.v8::internal::wasm::AsmType"** %973, i64 %980
  %983 = getelementptr inbounds %"class.v8::internal::wasm::AsmType"*, %"class.v8::internal::wasm::AsmType"** %982, i64 -1
  %984 = bitcast %"class.v8::internal::wasm::AsmType"** %983 to <2 x i64>*
  %985 = load <2 x i64>, <2 x i64>* %984, align 8, !alias.scope !264
  %986 = getelementptr inbounds %"class.v8::internal::wasm::AsmType"*, %"class.v8::internal::wasm::AsmType"** %982, i64 -2
  %987 = getelementptr inbounds %"class.v8::internal::wasm::AsmType"*, %"class.v8::internal::wasm::AsmType"** %986, i64 -1
  %988 = bitcast %"class.v8::internal::wasm::AsmType"** %987 to <2 x i64>*
  %989 = load <2 x i64>, <2 x i64>* %988, align 8, !alias.scope !264
  %990 = getelementptr inbounds %"class.v8::internal::wasm::AsmType"*, %"class.v8::internal::wasm::AsmType"** %981, i64 -1
  %991 = bitcast %"class.v8::internal::wasm::AsmType"** %990 to <2 x i64>*
  store <2 x i64> %985, <2 x i64>* %991, align 8, !alias.scope !267, !noalias !264
  %992 = getelementptr inbounds %"class.v8::internal::wasm::AsmType"*, %"class.v8::internal::wasm::AsmType"** %981, i64 -2
  %993 = getelementptr inbounds %"class.v8::internal::wasm::AsmType"*, %"class.v8::internal::wasm::AsmType"** %992, i64 -1
  %994 = bitcast %"class.v8::internal::wasm::AsmType"** %993 to <2 x i64>*
  store <2 x i64> %989, <2 x i64>* %994, align 8, !alias.scope !267, !noalias !264
  %995 = sub nuw nsw i64 -4, %977
  %996 = sub nuw nsw i64 -4, %977
  %997 = getelementptr inbounds %"class.v8::internal::wasm::AsmType"*, %"class.v8::internal::wasm::AsmType"** %974, i64 %995
  %998 = getelementptr inbounds %"class.v8::internal::wasm::AsmType"*, %"class.v8::internal::wasm::AsmType"** %975, i64 %996
  %999 = getelementptr inbounds %"class.v8::internal::wasm::AsmType"*, %"class.v8::internal::wasm::AsmType"** %998, i64 -1
  %1000 = bitcast %"class.v8::internal::wasm::AsmType"** %999 to <2 x i64>*
  %1001 = load <2 x i64>, <2 x i64>* %1000, align 8, !alias.scope !264
  %1002 = getelementptr inbounds %"class.v8::internal::wasm::AsmType"*, %"class.v8::internal::wasm::AsmType"** %998, i64 -2
  %1003 = getelementptr inbounds %"class.v8::internal::wasm::AsmType"*, %"class.v8::internal::wasm::AsmType"** %1002, i64 -1
  %1004 = bitcast %"class.v8::internal::wasm::AsmType"** %1003 to <2 x i64>*
  %1005 = load <2 x i64>, <2 x i64>* %1004, align 8, !alias.scope !264
  %1006 = getelementptr inbounds %"class.v8::internal::wasm::AsmType"*, %"class.v8::internal::wasm::AsmType"** %997, i64 -1
  %1007 = bitcast %"class.v8::internal::wasm::AsmType"** %1006 to <2 x i64>*
  store <2 x i64> %1001, <2 x i64>* %1007, align 8, !alias.scope !267, !noalias !264
  %1008 = getelementptr inbounds %"class.v8::internal::wasm::AsmType"*, %"class.v8::internal::wasm::AsmType"** %997, i64 -2
  %1009 = getelementptr inbounds %"class.v8::internal::wasm::AsmType"*, %"class.v8::internal::wasm::AsmType"** %1008, i64 -1
  %1010 = bitcast %"class.v8::internal::wasm::AsmType"** %1009 to <2 x i64>*
  store <2 x i64> %1005, <2 x i64>* %1010, align 8, !alias.scope !267, !noalias !264
  %1011 = add i64 %977, 8
  %1012 = add i64 %978, -2
  %1013 = icmp eq i64 %1012, 0
  br i1 %1013, label %1014, label %976, !llvm.loop !269

1014:                                             ; preds = %976, %959
  %1015 = phi i64 [ 0, %959 ], [ %1011, %976 ]
  %1016 = icmp eq i64 %968, 0
  br i1 %1016, label %1036, label %1017

1017:                                             ; preds = %1014
  %1018 = sub i64 0, %1015
  %1019 = getelementptr %"class.v8::internal::wasm::AsmType"*, %"class.v8::internal::wasm::AsmType"** %928, i64 -1
  %1020 = sub i64 0, %1015
  %1021 = getelementptr %"class.v8::internal::wasm::AsmType"*, %"class.v8::internal::wasm::AsmType"** %936, i64 -1
  %1022 = getelementptr inbounds %"class.v8::internal::wasm::AsmType"*, %"class.v8::internal::wasm::AsmType"** %1019, i64 %1018
  %1023 = getelementptr inbounds %"class.v8::internal::wasm::AsmType"*, %"class.v8::internal::wasm::AsmType"** %1021, i64 %1020
  %1024 = getelementptr inbounds %"class.v8::internal::wasm::AsmType"*, %"class.v8::internal::wasm::AsmType"** %1023, i64 -1
  %1025 = bitcast %"class.v8::internal::wasm::AsmType"** %1024 to <2 x i64>*
  %1026 = load <2 x i64>, <2 x i64>* %1025, align 8, !alias.scope !264
  %1027 = getelementptr inbounds %"class.v8::internal::wasm::AsmType"*, %"class.v8::internal::wasm::AsmType"** %1023, i64 -2
  %1028 = getelementptr inbounds %"class.v8::internal::wasm::AsmType"*, %"class.v8::internal::wasm::AsmType"** %1027, i64 -1
  %1029 = bitcast %"class.v8::internal::wasm::AsmType"** %1028 to <2 x i64>*
  %1030 = load <2 x i64>, <2 x i64>* %1029, align 8, !alias.scope !264
  %1031 = getelementptr inbounds %"class.v8::internal::wasm::AsmType"*, %"class.v8::internal::wasm::AsmType"** %1022, i64 -1
  %1032 = bitcast %"class.v8::internal::wasm::AsmType"** %1031 to <2 x i64>*
  store <2 x i64> %1026, <2 x i64>* %1032, align 8, !alias.scope !267, !noalias !264
  %1033 = getelementptr inbounds %"class.v8::internal::wasm::AsmType"*, %"class.v8::internal::wasm::AsmType"** %1022, i64 -2
  %1034 = getelementptr inbounds %"class.v8::internal::wasm::AsmType"*, %"class.v8::internal::wasm::AsmType"** %1033, i64 -1
  %1035 = bitcast %"class.v8::internal::wasm::AsmType"** %1034 to <2 x i64>*
  store <2 x i64> %1030, <2 x i64>* %1035, align 8, !alias.scope !267, !noalias !264
  br label %1036

1036:                                             ; preds = %1014, %1017
  %1037 = icmp eq i64 %943, %960
  br i1 %1037, label %1108, label %1038

1038:                                             ; preds = %1036, %945, %938
  %1039 = phi %"class.v8::internal::wasm::AsmType"** [ %928, %945 ], [ %928, %938 ], [ %962, %1036 ]
  %1040 = phi %"class.v8::internal::wasm::AsmType"** [ %936, %945 ], [ %936, %938 ], [ %964, %1036 ]
  %1041 = getelementptr %"class.v8::internal::wasm::AsmType"*, %"class.v8::internal::wasm::AsmType"** %1040, i64 -1
  %1042 = ptrtoint %"class.v8::internal::wasm::AsmType"** %1041 to i64
  %1043 = sub i64 %1042, %935
  %1044 = lshr i64 %1043, 3
  %1045 = add nuw nsw i64 %1044, 1
  %1046 = and i64 %1045, 7
  %1047 = icmp eq i64 %1046, 0
  br i1 %1047, label %1059, label %1048

1048:                                             ; preds = %1038, %1048
  %1049 = phi %"class.v8::internal::wasm::AsmType"** [ %1052, %1048 ], [ %1039, %1038 ]
  %1050 = phi %"class.v8::internal::wasm::AsmType"** [ %1053, %1048 ], [ %1040, %1038 ]
  %1051 = phi i64 [ %1057, %1048 ], [ %1046, %1038 ]
  %1052 = getelementptr inbounds %"class.v8::internal::wasm::AsmType"*, %"class.v8::internal::wasm::AsmType"** %1049, i64 -1
  %1053 = getelementptr inbounds %"class.v8::internal::wasm::AsmType"*, %"class.v8::internal::wasm::AsmType"** %1050, i64 -1
  %1054 = bitcast %"class.v8::internal::wasm::AsmType"** %1053 to i64*
  %1055 = load i64, i64* %1054, align 8
  %1056 = bitcast %"class.v8::internal::wasm::AsmType"** %1052 to i64*
  store i64 %1055, i64* %1056, align 8
  %1057 = add i64 %1051, -1
  %1058 = icmp eq i64 %1057, 0
  br i1 %1058, label %1059, label %1048, !llvm.loop !270

1059:                                             ; preds = %1048, %1038
  %1060 = phi %"class.v8::internal::wasm::AsmType"** [ undef, %1038 ], [ %1052, %1048 ]
  %1061 = phi %"class.v8::internal::wasm::AsmType"** [ %1039, %1038 ], [ %1052, %1048 ]
  %1062 = phi %"class.v8::internal::wasm::AsmType"** [ %1040, %1038 ], [ %1053, %1048 ]
  %1063 = icmp ult i64 %1043, 56
  br i1 %1063, label %1108, label %1064

1064:                                             ; preds = %1059, %1064
  %1065 = phi %"class.v8::internal::wasm::AsmType"** [ %1102, %1064 ], [ %1061, %1059 ]
  %1066 = phi %"class.v8::internal::wasm::AsmType"** [ %1103, %1064 ], [ %1062, %1059 ]
  %1067 = getelementptr inbounds %"class.v8::internal::wasm::AsmType"*, %"class.v8::internal::wasm::AsmType"** %1065, i64 -1
  %1068 = getelementptr inbounds %"class.v8::internal::wasm::AsmType"*, %"class.v8::internal::wasm::AsmType"** %1066, i64 -1
  %1069 = bitcast %"class.v8::internal::wasm::AsmType"** %1068 to i64*
  %1070 = load i64, i64* %1069, align 8
  %1071 = bitcast %"class.v8::internal::wasm::AsmType"** %1067 to i64*
  store i64 %1070, i64* %1071, align 8
  %1072 = getelementptr inbounds %"class.v8::internal::wasm::AsmType"*, %"class.v8::internal::wasm::AsmType"** %1065, i64 -2
  %1073 = getelementptr inbounds %"class.v8::internal::wasm::AsmType"*, %"class.v8::internal::wasm::AsmType"** %1066, i64 -2
  %1074 = bitcast %"class.v8::internal::wasm::AsmType"** %1073 to i64*
  %1075 = load i64, i64* %1074, align 8
  %1076 = bitcast %"class.v8::internal::wasm::AsmType"** %1072 to i64*
  store i64 %1075, i64* %1076, align 8
  %1077 = getelementptr inbounds %"class.v8::internal::wasm::AsmType"*, %"class.v8::internal::wasm::AsmType"** %1065, i64 -3
  %1078 = getelementptr inbounds %"class.v8::internal::wasm::AsmType"*, %"class.v8::internal::wasm::AsmType"** %1066, i64 -3
  %1079 = bitcast %"class.v8::internal::wasm::AsmType"** %1078 to i64*
  %1080 = load i64, i64* %1079, align 8
  %1081 = bitcast %"class.v8::internal::wasm::AsmType"** %1077 to i64*
  store i64 %1080, i64* %1081, align 8
  %1082 = getelementptr inbounds %"class.v8::internal::wasm::AsmType"*, %"class.v8::internal::wasm::AsmType"** %1065, i64 -4
  %1083 = getelementptr inbounds %"class.v8::internal::wasm::AsmType"*, %"class.v8::internal::wasm::AsmType"** %1066, i64 -4
  %1084 = bitcast %"class.v8::internal::wasm::AsmType"** %1083 to i64*
  %1085 = load i64, i64* %1084, align 8
  %1086 = bitcast %"class.v8::internal::wasm::AsmType"** %1082 to i64*
  store i64 %1085, i64* %1086, align 8
  %1087 = getelementptr inbounds %"class.v8::internal::wasm::AsmType"*, %"class.v8::internal::wasm::AsmType"** %1065, i64 -5
  %1088 = getelementptr inbounds %"class.v8::internal::wasm::AsmType"*, %"class.v8::internal::wasm::AsmType"** %1066, i64 -5
  %1089 = bitcast %"class.v8::internal::wasm::AsmType"** %1088 to i64*
  %1090 = load i64, i64* %1089, align 8
  %1091 = bitcast %"class.v8::internal::wasm::AsmType"** %1087 to i64*
  store i64 %1090, i64* %1091, align 8
  %1092 = getelementptr inbounds %"class.v8::internal::wasm::AsmType"*, %"class.v8::internal::wasm::AsmType"** %1065, i64 -6
  %1093 = getelementptr inbounds %"class.v8::internal::wasm::AsmType"*, %"class.v8::internal::wasm::AsmType"** %1066, i64 -6
  %1094 = bitcast %"class.v8::internal::wasm::AsmType"** %1093 to i64*
  %1095 = load i64, i64* %1094, align 8
  %1096 = bitcast %"class.v8::internal::wasm::AsmType"** %1092 to i64*
  store i64 %1095, i64* %1096, align 8
  %1097 = getelementptr inbounds %"class.v8::internal::wasm::AsmType"*, %"class.v8::internal::wasm::AsmType"** %1065, i64 -7
  %1098 = getelementptr inbounds %"class.v8::internal::wasm::AsmType"*, %"class.v8::internal::wasm::AsmType"** %1066, i64 -7
  %1099 = bitcast %"class.v8::internal::wasm::AsmType"** %1098 to i64*
  %1100 = load i64, i64* %1099, align 8
  %1101 = bitcast %"class.v8::internal::wasm::AsmType"** %1097 to i64*
  store i64 %1100, i64* %1101, align 8
  %1102 = getelementptr inbounds %"class.v8::internal::wasm::AsmType"*, %"class.v8::internal::wasm::AsmType"** %1065, i64 -8
  %1103 = getelementptr inbounds %"class.v8::internal::wasm::AsmType"*, %"class.v8::internal::wasm::AsmType"** %1066, i64 -8
  %1104 = bitcast %"class.v8::internal::wasm::AsmType"** %1103 to i64*
  %1105 = load i64, i64* %1104, align 8
  %1106 = bitcast %"class.v8::internal::wasm::AsmType"** %1102 to i64*
  store i64 %1105, i64* %1106, align 8
  %1107 = icmp eq %"class.v8::internal::wasm::AsmType"** %1103, %934
  br i1 %1107, label %1108, label %1064, !llvm.loop !271

1108:                                             ; preds = %1059, %1064, %1036, %925
  %1109 = phi %"class.v8::internal::wasm::AsmType"** [ %928, %925 ], [ %962, %1036 ], [ %1060, %1059 ], [ %1102, %1064 ]
  %1110 = ptrtoint %"class.v8::internal::wasm::AsmType"** %1109 to i64
  store i64 %1110, i64* %396, align 8
  store i64 %933, i64* %395, align 8
  store i64 %930, i64* %397, align 8
  br label %1348

1111:                                             ; preds = %879
  %1112 = tail call zeroext i1 @_ZN2v88internal4wasm7AsmType3IsAEPS2_(%"class.v8::internal::wasm::AsmType"* %413, %"class.v8::internal::wasm::AsmType"* nonnull inttoptr (i64 237 to %"class.v8::internal::wasm::AsmType"*)) #12
  br i1 %1112, label %1113, label %1343

1113:                                             ; preds = %1111
  %1114 = load %"class.v8::internal::wasm::AsmType"**, %"class.v8::internal::wasm::AsmType"*** %393, align 8
  %1115 = load %"class.v8::internal::wasm::AsmType"**, %"class.v8::internal::wasm::AsmType"*** %394, align 8
  %1116 = icmp ult %"class.v8::internal::wasm::AsmType"** %1114, %1115
  %1117 = ptrtoint %"class.v8::internal::wasm::AsmType"** %1115 to i64
  br i1 %1116, label %1118, label %1122

1118:                                             ; preds = %1113
  %1119 = bitcast %"class.v8::internal::wasm::AsmType"** %1114 to i64*
  store i64 237, i64* %1119, align 8
  %1120 = getelementptr inbounds %"class.v8::internal::wasm::AsmType"*, %"class.v8::internal::wasm::AsmType"** %1114, i64 1
  %1121 = ptrtoint %"class.v8::internal::wasm::AsmType"** %1120 to i64
  store i64 %1121, i64* %395, align 8
  br label %1348

1122:                                             ; preds = %1113
  %1123 = ptrtoint %"class.v8::internal::wasm::AsmType"** %1114 to i64
  %1124 = load i64, i64* %396, align 8
  %1125 = sub i64 %1123, %1124
  %1126 = ashr exact i64 %1125, 3
  %1127 = add nsw i64 %1126, 1
  %1128 = icmp ugt i64 %1127, 268435455
  br i1 %1128, label %1129, label %1131

1129:                                             ; preds = %1122
  %1130 = bitcast %"class.v8::internal::wasm::AsmJsParser::CachedVector"* %4 to %"class.std::__1::__vector_base_common"*
  call void @_ZNKSt3__120__vector_base_commonILb1EE20__throw_length_errorEv(%"class.std::__1::__vector_base_common"* nonnull %1130) #13
  unreachable

1131:                                             ; preds = %1122
  %1132 = sub i64 %1117, %1124
  %1133 = ashr exact i64 %1132, 3
  %1134 = icmp ult i64 %1133, 134217727
  br i1 %1134, label %1135, label %1140

1135:                                             ; preds = %1131
  %1136 = ashr exact i64 %1132, 2
  %1137 = icmp ult i64 %1136, %1127
  %1138 = select i1 %1137, i64 %1127, i64 %1136
  %1139 = icmp eq i64 %1138, 0
  br i1 %1139, label %1157, label %1140

1140:                                             ; preds = %1135, %1131
  %1141 = phi i64 [ %1138, %1135 ], [ 268435455, %1131 ]
  %1142 = load %"class.v8::internal::Zone"*, %"class.v8::internal::Zone"** %398, align 8
  %1143 = shl i64 %1141, 3
  %1144 = getelementptr inbounds %"class.v8::internal::Zone", %"class.v8::internal::Zone"* %1142, i64 0, i32 2
  %1145 = load i64, i64* %1144, align 8
  %1146 = getelementptr inbounds %"class.v8::internal::Zone", %"class.v8::internal::Zone"* %1142, i64 0, i32 3
  %1147 = load i64, i64* %1146, align 8
  %1148 = sub i64 %1147, %1145
  %1149 = icmp ugt i64 %1143, %1148
  br i1 %1149, label %1150, label %1152, !prof !2

1150:                                             ; preds = %1140
  %1151 = tail call i64 @_ZN2v88internal4Zone9NewExpandEm(%"class.v8::internal::Zone"* %1142, i64 %1143) #12
  br label %1154

1152:                                             ; preds = %1140
  %1153 = add i64 %1145, %1143
  store i64 %1153, i64* %1144, align 8
  br label %1154

1154:                                             ; preds = %1152, %1150
  %1155 = phi i64 [ %1151, %1150 ], [ %1145, %1152 ]
  %1156 = inttoptr i64 %1155 to %"class.v8::internal::wasm::AsmType"**
  br label %1157

1157:                                             ; preds = %1154, %1135
  %1158 = phi i64 [ %1141, %1154 ], [ 0, %1135 ]
  %1159 = phi %"class.v8::internal::wasm::AsmType"** [ %1156, %1154 ], [ null, %1135 ]
  %1160 = getelementptr inbounds %"class.v8::internal::wasm::AsmType"*, %"class.v8::internal::wasm::AsmType"** %1159, i64 %1126
  %1161 = getelementptr inbounds %"class.v8::internal::wasm::AsmType"*, %"class.v8::internal::wasm::AsmType"** %1159, i64 %1158
  %1162 = ptrtoint %"class.v8::internal::wasm::AsmType"** %1161 to i64
  %1163 = bitcast %"class.v8::internal::wasm::AsmType"** %1160 to i64*
  store i64 237, i64* %1163, align 8
  %1164 = getelementptr inbounds %"class.v8::internal::wasm::AsmType"*, %"class.v8::internal::wasm::AsmType"** %1160, i64 1
  %1165 = ptrtoint %"class.v8::internal::wasm::AsmType"** %1164 to i64
  %1166 = load %"class.v8::internal::wasm::AsmType"**, %"class.v8::internal::wasm::AsmType"*** %399, align 8
  %1167 = ptrtoint %"class.v8::internal::wasm::AsmType"** %1166 to i64
  %1168 = load %"class.v8::internal::wasm::AsmType"**, %"class.v8::internal::wasm::AsmType"*** %393, align 8
  %1169 = icmp eq %"class.v8::internal::wasm::AsmType"** %1168, %1166
  br i1 %1169, label %1340, label %1170

1170:                                             ; preds = %1157
  %1171 = getelementptr %"class.v8::internal::wasm::AsmType"*, %"class.v8::internal::wasm::AsmType"** %1168, i64 -1
  %1172 = ptrtoint %"class.v8::internal::wasm::AsmType"** %1171 to i64
  %1173 = sub i64 %1172, %1167
  %1174 = lshr i64 %1173, 3
  %1175 = add nuw nsw i64 %1174, 1
  %1176 = icmp ult i64 %1175, 4
  br i1 %1176, label %1270, label %1177

1177:                                             ; preds = %1170
  %1178 = getelementptr %"class.v8::internal::wasm::AsmType"*, %"class.v8::internal::wasm::AsmType"** %1159, i64 -1
  %1179 = getelementptr %"class.v8::internal::wasm::AsmType"*, %"class.v8::internal::wasm::AsmType"** %1168, i64 -1
  %1180 = ptrtoint %"class.v8::internal::wasm::AsmType"** %1179 to i64
  %1181 = sub i64 %1180, %1167
  %1182 = lshr i64 %1181, 3
  %1183 = sub nsw i64 %1126, %1182
  %1184 = getelementptr %"class.v8::internal::wasm::AsmType"*, %"class.v8::internal::wasm::AsmType"** %1178, i64 %1183
  %1185 = getelementptr %"class.v8::internal::wasm::AsmType"*, %"class.v8::internal::wasm::AsmType"** %1168, i64 -1
  %1186 = sub nsw i64 0, %1182
  %1187 = getelementptr %"class.v8::internal::wasm::AsmType"*, %"class.v8::internal::wasm::AsmType"** %1185, i64 %1186
  %1188 = icmp ult %"class.v8::internal::wasm::AsmType"** %1184, %1168
  %1189 = icmp ult %"class.v8::internal::wasm::AsmType"** %1187, %1160
  %1190 = and i1 %1188, %1189
  br i1 %1190, label %1270, label %1191

1191:                                             ; preds = %1177
  %1192 = and i64 %1175, 4611686018427387900
  %1193 = sub nsw i64 0, %1192
  %1194 = getelementptr %"class.v8::internal::wasm::AsmType"*, %"class.v8::internal::wasm::AsmType"** %1160, i64 %1193
  %1195 = sub nsw i64 0, %1192
  %1196 = getelementptr %"class.v8::internal::wasm::AsmType"*, %"class.v8::internal::wasm::AsmType"** %1168, i64 %1195
  %1197 = add nsw i64 %1192, -4
  %1198 = lshr exact i64 %1197, 2
  %1199 = add nuw nsw i64 %1198, 1
  %1200 = and i64 %1199, 1
  %1201 = icmp eq i64 %1197, 0
  br i1 %1201, label %1246, label %1202

1202:                                             ; preds = %1191
  %1203 = sub nuw nsw i64 %1199, %1200
  %1204 = getelementptr %"class.v8::internal::wasm::AsmType"*, %"class.v8::internal::wasm::AsmType"** %1160, i64 -1
  %1205 = getelementptr %"class.v8::internal::wasm::AsmType"*, %"class.v8::internal::wasm::AsmType"** %1168, i64 -1
  %1206 = getelementptr %"class.v8::internal::wasm::AsmType"*, %"class.v8::internal::wasm::AsmType"** %1160, i64 -1
  %1207 = getelementptr %"class.v8::internal::wasm::AsmType"*, %"class.v8::internal::wasm::AsmType"** %1168, i64 -1
  br label %1208

1208:                                             ; preds = %1208, %1202
  %1209 = phi i64 [ 0, %1202 ], [ %1243, %1208 ]
  %1210 = phi i64 [ %1203, %1202 ], [ %1244, %1208 ]
  %1211 = sub i64 0, %1209
  %1212 = sub i64 0, %1209
  %1213 = getelementptr inbounds %"class.v8::internal::wasm::AsmType"*, %"class.v8::internal::wasm::AsmType"** %1204, i64 %1211
  %1214 = getelementptr inbounds %"class.v8::internal::wasm::AsmType"*, %"class.v8::internal::wasm::AsmType"** %1205, i64 %1212
  %1215 = getelementptr inbounds %"class.v8::internal::wasm::AsmType"*, %"class.v8::internal::wasm::AsmType"** %1214, i64 -1
  %1216 = bitcast %"class.v8::internal::wasm::AsmType"** %1215 to <2 x i64>*
  %1217 = load <2 x i64>, <2 x i64>* %1216, align 8, !alias.scope !272
  %1218 = getelementptr inbounds %"class.v8::internal::wasm::AsmType"*, %"class.v8::internal::wasm::AsmType"** %1214, i64 -2
  %1219 = getelementptr inbounds %"class.v8::internal::wasm::AsmType"*, %"class.v8::internal::wasm::AsmType"** %1218, i64 -1
  %1220 = bitcast %"class.v8::internal::wasm::AsmType"** %1219 to <2 x i64>*
  %1221 = load <2 x i64>, <2 x i64>* %1220, align 8, !alias.scope !272
  %1222 = getelementptr inbounds %"class.v8::internal::wasm::AsmType"*, %"class.v8::internal::wasm::AsmType"** %1213, i64 -1
  %1223 = bitcast %"class.v8::internal::wasm::AsmType"** %1222 to <2 x i64>*
  store <2 x i64> %1217, <2 x i64>* %1223, align 8, !alias.scope !275, !noalias !272
  %1224 = getelementptr inbounds %"class.v8::internal::wasm::AsmType"*, %"class.v8::internal::wasm::AsmType"** %1213, i64 -2
  %1225 = getelementptr inbounds %"class.v8::internal::wasm::AsmType"*, %"class.v8::internal::wasm::AsmType"** %1224, i64 -1
  %1226 = bitcast %"class.v8::internal::wasm::AsmType"** %1225 to <2 x i64>*
  store <2 x i64> %1221, <2 x i64>* %1226, align 8, !alias.scope !275, !noalias !272
  %1227 = sub nuw nsw i64 -4, %1209
  %1228 = sub nuw nsw i64 -4, %1209
  %1229 = getelementptr inbounds %"class.v8::internal::wasm::AsmType"*, %"class.v8::internal::wasm::AsmType"** %1206, i64 %1227
  %1230 = getelementptr inbounds %"class.v8::internal::wasm::AsmType"*, %"class.v8::internal::wasm::AsmType"** %1207, i64 %1228
  %1231 = getelementptr inbounds %"class.v8::internal::wasm::AsmType"*, %"class.v8::internal::wasm::AsmType"** %1230, i64 -1
  %1232 = bitcast %"class.v8::internal::wasm::AsmType"** %1231 to <2 x i64>*
  %1233 = load <2 x i64>, <2 x i64>* %1232, align 8, !alias.scope !272
  %1234 = getelementptr inbounds %"class.v8::internal::wasm::AsmType"*, %"class.v8::internal::wasm::AsmType"** %1230, i64 -2
  %1235 = getelementptr inbounds %"class.v8::internal::wasm::AsmType"*, %"class.v8::internal::wasm::AsmType"** %1234, i64 -1
  %1236 = bitcast %"class.v8::internal::wasm::AsmType"** %1235 to <2 x i64>*
  %1237 = load <2 x i64>, <2 x i64>* %1236, align 8, !alias.scope !272
  %1238 = getelementptr inbounds %"class.v8::internal::wasm::AsmType"*, %"class.v8::internal::wasm::AsmType"** %1229, i64 -1
  %1239 = bitcast %"class.v8::internal::wasm::AsmType"** %1238 to <2 x i64>*
  store <2 x i64> %1233, <2 x i64>* %1239, align 8, !alias.scope !275, !noalias !272
  %1240 = getelementptr inbounds %"class.v8::internal::wasm::AsmType"*, %"class.v8::internal::wasm::AsmType"** %1229, i64 -2
  %1241 = getelementptr inbounds %"class.v8::internal::wasm::AsmType"*, %"class.v8::internal::wasm::AsmType"** %1240, i64 -1
  %1242 = bitcast %"class.v8::internal::wasm::AsmType"** %1241 to <2 x i64>*
  store <2 x i64> %1237, <2 x i64>* %1242, align 8, !alias.scope !275, !noalias !272
  %1243 = add i64 %1209, 8
  %1244 = add i64 %1210, -2
  %1245 = icmp eq i64 %1244, 0
  br i1 %1245, label %1246, label %1208, !llvm.loop !277

1246:                                             ; preds = %1208, %1191
  %1247 = phi i64 [ 0, %1191 ], [ %1243, %1208 ]
  %1248 = icmp eq i64 %1200, 0
  br i1 %1248, label %1268, label %1249

1249:                                             ; preds = %1246
  %1250 = sub i64 0, %1247
  %1251 = getelementptr %"class.v8::internal::wasm::AsmType"*, %"class.v8::internal::wasm::AsmType"** %1160, i64 -1
  %1252 = sub i64 0, %1247
  %1253 = getelementptr %"class.v8::internal::wasm::AsmType"*, %"class.v8::internal::wasm::AsmType"** %1168, i64 -1
  %1254 = getelementptr inbounds %"class.v8::internal::wasm::AsmType"*, %"class.v8::internal::wasm::AsmType"** %1251, i64 %1250
  %1255 = getelementptr inbounds %"class.v8::internal::wasm::AsmType"*, %"class.v8::internal::wasm::AsmType"** %1253, i64 %1252
  %1256 = getelementptr inbounds %"class.v8::internal::wasm::AsmType"*, %"class.v8::internal::wasm::AsmType"** %1255, i64 -1
  %1257 = bitcast %"class.v8::internal::wasm::AsmType"** %1256 to <2 x i64>*
  %1258 = load <2 x i64>, <2 x i64>* %1257, align 8, !alias.scope !272
  %1259 = getelementptr inbounds %"class.v8::internal::wasm::AsmType"*, %"class.v8::internal::wasm::AsmType"** %1255, i64 -2
  %1260 = getelementptr inbounds %"class.v8::internal::wasm::AsmType"*, %"class.v8::internal::wasm::AsmType"** %1259, i64 -1
  %1261 = bitcast %"class.v8::internal::wasm::AsmType"** %1260 to <2 x i64>*
  %1262 = load <2 x i64>, <2 x i64>* %1261, align 8, !alias.scope !272
  %1263 = getelementptr inbounds %"class.v8::internal::wasm::AsmType"*, %"class.v8::internal::wasm::AsmType"** %1254, i64 -1
  %1264 = bitcast %"class.v8::internal::wasm::AsmType"** %1263 to <2 x i64>*
  store <2 x i64> %1258, <2 x i64>* %1264, align 8, !alias.scope !275, !noalias !272
  %1265 = getelementptr inbounds %"class.v8::internal::wasm::AsmType"*, %"class.v8::internal::wasm::AsmType"** %1254, i64 -2
  %1266 = getelementptr inbounds %"class.v8::internal::wasm::AsmType"*, %"class.v8::internal::wasm::AsmType"** %1265, i64 -1
  %1267 = bitcast %"class.v8::internal::wasm::AsmType"** %1266 to <2 x i64>*
  store <2 x i64> %1262, <2 x i64>* %1267, align 8, !alias.scope !275, !noalias !272
  br label %1268

1268:                                             ; preds = %1246, %1249
  %1269 = icmp eq i64 %1175, %1192
  br i1 %1269, label %1340, label %1270

1270:                                             ; preds = %1268, %1177, %1170
  %1271 = phi %"class.v8::internal::wasm::AsmType"** [ %1160, %1177 ], [ %1160, %1170 ], [ %1194, %1268 ]
  %1272 = phi %"class.v8::internal::wasm::AsmType"** [ %1168, %1177 ], [ %1168, %1170 ], [ %1196, %1268 ]
  %1273 = getelementptr %"class.v8::internal::wasm::AsmType"*, %"class.v8::internal::wasm::AsmType"** %1272, i64 -1
  %1274 = ptrtoint %"class.v8::internal::wasm::AsmType"** %1273 to i64
  %1275 = sub i64 %1274, %1167
  %1276 = lshr i64 %1275, 3
  %1277 = add nuw nsw i64 %1276, 1
  %1278 = and i64 %1277, 7
  %1279 = icmp eq i64 %1278, 0
  br i1 %1279, label %1291, label %1280

1280:                                             ; preds = %1270, %1280
  %1281 = phi %"class.v8::internal::wasm::AsmType"** [ %1284, %1280 ], [ %1271, %1270 ]
  %1282 = phi %"class.v8::internal::wasm::AsmType"** [ %1285, %1280 ], [ %1272, %1270 ]
  %1283 = phi i64 [ %1289, %1280 ], [ %1278, %1270 ]
  %1284 = getelementptr inbounds %"class.v8::internal::wasm::AsmType"*, %"class.v8::internal::wasm::AsmType"** %1281, i64 -1
  %1285 = getelementptr inbounds %"class.v8::internal::wasm::AsmType"*, %"class.v8::internal::wasm::AsmType"** %1282, i64 -1
  %1286 = bitcast %"class.v8::internal::wasm::AsmType"** %1285 to i64*
  %1287 = load i64, i64* %1286, align 8
  %1288 = bitcast %"class.v8::internal::wasm::AsmType"** %1284 to i64*
  store i64 %1287, i64* %1288, align 8
  %1289 = add i64 %1283, -1
  %1290 = icmp eq i64 %1289, 0
  br i1 %1290, label %1291, label %1280, !llvm.loop !278

1291:                                             ; preds = %1280, %1270
  %1292 = phi %"class.v8::internal::wasm::AsmType"** [ undef, %1270 ], [ %1284, %1280 ]
  %1293 = phi %"class.v8::internal::wasm::AsmType"** [ %1271, %1270 ], [ %1284, %1280 ]
  %1294 = phi %"class.v8::internal::wasm::AsmType"** [ %1272, %1270 ], [ %1285, %1280 ]
  %1295 = icmp ult i64 %1275, 56
  br i1 %1295, label %1340, label %1296

1296:                                             ; preds = %1291, %1296
  %1297 = phi %"class.v8::internal::wasm::AsmType"** [ %1334, %1296 ], [ %1293, %1291 ]
  %1298 = phi %"class.v8::internal::wasm::AsmType"** [ %1335, %1296 ], [ %1294, %1291 ]
  %1299 = getelementptr inbounds %"class.v8::internal::wasm::AsmType"*, %"class.v8::internal::wasm::AsmType"** %1297, i64 -1
  %1300 = getelementptr inbounds %"class.v8::internal::wasm::AsmType"*, %"class.v8::internal::wasm::AsmType"** %1298, i64 -1
  %1301 = bitcast %"class.v8::internal::wasm::AsmType"** %1300 to i64*
  %1302 = load i64, i64* %1301, align 8
  %1303 = bitcast %"class.v8::internal::wasm::AsmType"** %1299 to i64*
  store i64 %1302, i64* %1303, align 8
  %1304 = getelementptr inbounds %"class.v8::internal::wasm::AsmType"*, %"class.v8::internal::wasm::AsmType"** %1297, i64 -2
  %1305 = getelementptr inbounds %"class.v8::internal::wasm::AsmType"*, %"class.v8::internal::wasm::AsmType"** %1298, i64 -2
  %1306 = bitcast %"class.v8::internal::wasm::AsmType"** %1305 to i64*
  %1307 = load i64, i64* %1306, align 8
  %1308 = bitcast %"class.v8::internal::wasm::AsmType"** %1304 to i64*
  store i64 %1307, i64* %1308, align 8
  %1309 = getelementptr inbounds %"class.v8::internal::wasm::AsmType"*, %"class.v8::internal::wasm::AsmType"** %1297, i64 -3
  %1310 = getelementptr inbounds %"class.v8::internal::wasm::AsmType"*, %"class.v8::internal::wasm::AsmType"** %1298, i64 -3
  %1311 = bitcast %"class.v8::internal::wasm::AsmType"** %1310 to i64*
  %1312 = load i64, i64* %1311, align 8
  %1313 = bitcast %"class.v8::internal::wasm::AsmType"** %1309 to i64*
  store i64 %1312, i64* %1313, align 8
  %1314 = getelementptr inbounds %"class.v8::internal::wasm::AsmType"*, %"class.v8::internal::wasm::AsmType"** %1297, i64 -4
  %1315 = getelementptr inbounds %"class.v8::internal::wasm::AsmType"*, %"class.v8::internal::wasm::AsmType"** %1298, i64 -4
  %1316 = bitcast %"class.v8::internal::wasm::AsmType"** %1315 to i64*
  %1317 = load i64, i64* %1316, align 8
  %1318 = bitcast %"class.v8::internal::wasm::AsmType"** %1314 to i64*
  store i64 %1317, i64* %1318, align 8
  %1319 = getelementptr inbounds %"class.v8::internal::wasm::AsmType"*, %"class.v8::internal::wasm::AsmType"** %1297, i64 -5
  %1320 = getelementptr inbounds %"class.v8::internal::wasm::AsmType"*, %"class.v8::internal::wasm::AsmType"** %1298, i64 -5
  %1321 = bitcast %"class.v8::internal::wasm::AsmType"** %1320 to i64*
  %1322 = load i64, i64* %1321, align 8
  %1323 = bitcast %"class.v8::internal::wasm::AsmType"** %1319 to i64*
  store i64 %1322, i64* %1323, align 8
  %1324 = getelementptr inbounds %"class.v8::internal::wasm::AsmType"*, %"class.v8::internal::wasm::AsmType"** %1297, i64 -6
  %1325 = getelementptr inbounds %"class.v8::internal::wasm::AsmType"*, %"class.v8::internal::wasm::AsmType"** %1298, i64 -6
  %1326 = bitcast %"class.v8::internal::wasm::AsmType"** %1325 to i64*
  %1327 = load i64, i64* %1326, align 8
  %1328 = bitcast %"class.v8::internal::wasm::AsmType"** %1324 to i64*
  store i64 %1327, i64* %1328, align 8
  %1329 = getelementptr inbounds %"class.v8::internal::wasm::AsmType"*, %"class.v8::internal::wasm::AsmType"** %1297, i64 -7
  %1330 = getelementptr inbounds %"class.v8::internal::wasm::AsmType"*, %"class.v8::internal::wasm::AsmType"** %1298, i64 -7
  %1331 = bitcast %"class.v8::internal::wasm::AsmType"** %1330 to i64*
  %1332 = load i64, i64* %1331, align 8
  %1333 = bitcast %"class.v8::internal::wasm::AsmType"** %1329 to i64*
  store i64 %1332, i64* %1333, align 8
  %1334 = getelementptr inbounds %"class.v8::internal::wasm::AsmType"*, %"class.v8::internal::wasm::AsmType"** %1297, i64 -8
  %1335 = getelementptr inbounds %"class.v8::internal::wasm::AsmType"*, %"class.v8::internal::wasm::AsmType"** %1298, i64 -8
  %1336 = bitcast %"class.v8::internal::wasm::AsmType"** %1335 to i64*
  %1337 = load i64, i64* %1336, align 8
  %1338 = bitcast %"class.v8::internal::wasm::AsmType"** %1334 to i64*
  store i64 %1337, i64* %1338, align 8
  %1339 = icmp eq %"class.v8::internal::wasm::AsmType"** %1335, %1166
  br i1 %1339, label %1340, label %1296, !llvm.loop !279

1340:                                             ; preds = %1291, %1296, %1268, %1157
  %1341 = phi %"class.v8::internal::wasm::AsmType"** [ %1160, %1157 ], [ %1194, %1268 ], [ %1292, %1291 ], [ %1334, %1296 ]
  %1342 = ptrtoint %"class.v8::internal::wasm::AsmType"** %1341 to i64
  store i64 %1342, i64* %396, align 8
  store i64 %1165, i64* %395, align 8
  store i64 %1162, i64* %397, align 8
  br label %1348

1343:                                             ; preds = %1111
  store i8 1, i8* %381, align 4
  %1344 = getelementptr inbounds %"class.v8::internal::wasm::AsmJsParser", %"class.v8::internal::wasm::AsmJsParser"* %0, i64 0, i32 18
  store i8* getelementptr inbounds ([27 x i8], [27 x i8]* @.str.99, i64 0, i64 0), i8** %1344, align 8
  %1345 = load i64, i64* %9, align 8
  %1346 = trunc i64 %1345 to i32
  %1347 = getelementptr inbounds %"class.v8::internal::wasm::AsmJsParser", %"class.v8::internal::wasm::AsmJsParser"* %0, i64 0, i32 19
  store i32 %1346, i32* %1347, align 8
  br label %2416

1348:                                             ; preds = %1340, %1118, %1108, %886, %876, %654
  %1349 = load i32, i32* %16, align 8
  switch i32 %1349, label %1350 [
    i32 41, label %1356
    i32 44, label %1355
  ]

1350:                                             ; preds = %1348
  store i8 1, i8* %381, align 4
  %1351 = getelementptr inbounds %"class.v8::internal::wasm::AsmJsParser", %"class.v8::internal::wasm::AsmJsParser"* %0, i64 0, i32 18
  store i8* getelementptr inbounds ([17 x i8], [17 x i8]* @.str.3, i64 0, i64 0), i8** %1351, align 8
  %1352 = load i64, i64* %9, align 8
  %1353 = trunc i64 %1352 to i32
  %1354 = getelementptr inbounds %"class.v8::internal::wasm::AsmJsParser", %"class.v8::internal::wasm::AsmJsParser"* %0, i64 0, i32 19
  store i32 %1353, i32* %1354, align 8
  br label %2416

1355:                                             ; preds = %1348
  tail call void @_ZN2v88internal12AsmJsScanner4NextEv(%"class.v8::internal::AsmJsScanner"* %8) #12
  br label %1356

1356:                                             ; preds = %1348, %1355
  %1357 = load i8, i8* %381, align 4, !range !69
  %1358 = icmp eq i8 %1357, 0
  br i1 %1358, label %400, label %1359

1359:                                             ; preds = %1356, %380
  %1360 = load i32, i32* %16, align 8
  %1361 = icmp eq i32 %1360, 41
  br i1 %1361, label %1367, label %1362

1362:                                             ; preds = %1359
  store i8 1, i8* %381, align 4
  %1363 = getelementptr inbounds %"class.v8::internal::wasm::AsmJsParser", %"class.v8::internal::wasm::AsmJsParser"* %0, i64 0, i32 18
  store i8* getelementptr inbounds ([17 x i8], [17 x i8]* @.str.3, i64 0, i64 0), i8** %1363, align 8
  %1364 = load i64, i64* %9, align 8
  %1365 = trunc i64 %1364 to i32
  %1366 = getelementptr inbounds %"class.v8::internal::wasm::AsmJsParser", %"class.v8::internal::wasm::AsmJsParser"* %0, i64 0, i32 19
  store i32 %1365, i32* %1366, align 8
  br label %2416

1367:                                             ; preds = %400, %1359
  tail call void @_ZN2v88internal12AsmJsScanner4NextEv(%"class.v8::internal::AsmJsScanner"* %8) #12
  %1368 = icmp sgt i32 %17, 255
  %1369 = getelementptr inbounds %"class.v8::internal::wasm::AsmJsParser", %"class.v8::internal::wasm::AsmJsParser"* %0, i64 0, i32 7
  %1370 = getelementptr inbounds %"class.v8::internal::wasm::AsmJsParser", %"class.v8::internal::wasm::AsmJsParser"* %0, i64 0, i32 8
  %1371 = select i1 %1368, %"class.v8::internal::Vector.160"* %1369, %"class.v8::internal::Vector.160"* %1370
  %1372 = getelementptr inbounds %"class.v8::internal::Vector.160", %"class.v8::internal::Vector.160"* %1371, i64 0, i32 1
  %1373 = load i64, i64* %1372, align 8
  br i1 %1368, label %1377, label %1374

1374:                                             ; preds = %1367
  %1375 = sub nsw i32 -10000, %17
  %1376 = sext i32 %1375 to i64
  br label %1385

1377:                                             ; preds = %1367
  %1378 = add nsw i32 %17, -256
  %1379 = sext i32 %1378 to i64
  %1380 = getelementptr inbounds %"class.v8::internal::wasm::AsmJsParser", %"class.v8::internal::wasm::AsmJsParser"* %0, i64 0, i32 9
  %1381 = load i64, i64* %1380, align 8
  %1382 = icmp ugt i64 %1381, %1379
  br i1 %1382, label %1385, label %1383

1383:                                             ; preds = %1377
  %1384 = add nuw nsw i64 %1379, 1
  store i64 %1384, i64* %1380, align 8
  br label %1385

1385:                                             ; preds = %1383, %1377, %1374
  %1386 = phi i64 [ %1379, %1383 ], [ %1379, %1377 ], [ %1376, %1374 ]
  %1387 = add nsw i64 %1386, 1
  %1388 = icmp ugt i64 %1387, %1373
  br i1 %1388, label %1392, label %1389

1389:                                             ; preds = %1385
  %1390 = getelementptr inbounds %"class.v8::internal::Vector.160", %"class.v8::internal::Vector.160"* %1371, i64 0, i32 0
  %1391 = load %"struct.v8::internal::wasm::AsmJsParser::VarInfo"*, %"struct.v8::internal::wasm::AsmJsParser::VarInfo"** %1390, align 8
  br label %1433

1392:                                             ; preds = %1385
  %1393 = shl i64 %1373, 1
  %1394 = icmp ult i64 %1393, %1387
  %1395 = select i1 %1394, i64 %1387, i64 %1393
  %1396 = getelementptr inbounds %"class.v8::internal::wasm::AsmJsParser", %"class.v8::internal::wasm::AsmJsParser"* %0, i64 0, i32 0
  %1397 = load %"class.v8::internal::Zone"*, %"class.v8::internal::Zone"** %1396, align 8
  %1398 = mul i64 %1395, 40
  %1399 = getelementptr inbounds %"class.v8::internal::Zone", %"class.v8::internal::Zone"* %1397, i64 0, i32 2
  %1400 = load i64, i64* %1399, align 8
  %1401 = getelementptr inbounds %"class.v8::internal::Zone", %"class.v8::internal::Zone"* %1397, i64 0, i32 3
  %1402 = load i64, i64* %1401, align 8
  %1403 = sub i64 %1402, %1400
  %1404 = icmp ugt i64 %1398, %1403
  br i1 %1404, label %1405, label %1407, !prof !2

1405:                                             ; preds = %1392
  %1406 = tail call i64 @_ZN2v88internal4Zone9NewExpandEm(%"class.v8::internal::Zone"* %1397, i64 %1398) #12
  br label %1409

1407:                                             ; preds = %1392
  %1408 = add i64 %1400, %1398
  store i64 %1408, i64* %1399, align 8
  br label %1409

1409:                                             ; preds = %1407, %1405
  %1410 = phi i64 [ %1406, %1405 ], [ %1400, %1407 ]
  %1411 = inttoptr i64 %1410 to %"struct.v8::internal::wasm::AsmJsParser::VarInfo"*
  %1412 = getelementptr inbounds %"struct.v8::internal::wasm::AsmJsParser::VarInfo", %"struct.v8::internal::wasm::AsmJsParser::VarInfo"* %1411, i64 %1395
  %1413 = icmp eq i64 %1395, 0
  br i1 %1413, label %1423, label %1414

1414:                                             ; preds = %1409, %1414
  %1415 = phi %"struct.v8::internal::wasm::AsmJsParser::VarInfo"* [ %1421, %1414 ], [ %1411, %1409 ]
  %1416 = getelementptr inbounds %"struct.v8::internal::wasm::AsmJsParser::VarInfo", %"struct.v8::internal::wasm::AsmJsParser::VarInfo"* %1415, i64 0, i32 0
  store %"class.v8::internal::wasm::AsmType"* inttoptr (i64 2147483649 to %"class.v8::internal::wasm::AsmType"*), %"class.v8::internal::wasm::AsmType"** %1416, align 8
  %1417 = getelementptr inbounds %"struct.v8::internal::wasm::AsmJsParser::VarInfo", %"struct.v8::internal::wasm::AsmJsParser::VarInfo"* %1415, i64 0, i32 1
  %1418 = getelementptr inbounds %"struct.v8::internal::wasm::AsmJsParser::VarInfo", %"struct.v8::internal::wasm::AsmJsParser::VarInfo"* %1415, i64 0, i32 6
  %1419 = bitcast %"class.v8::internal::wasm::WasmFunctionBuilder"** %1417 to i8*
  tail call void @llvm.memset.p0i8.i64(i8* align 8 %1419, i8 0, i64 28, i1 false) #12
  store i8 1, i8* %1418, align 4
  %1420 = getelementptr inbounds %"struct.v8::internal::wasm::AsmJsParser::VarInfo", %"struct.v8::internal::wasm::AsmJsParser::VarInfo"* %1415, i64 0, i32 7
  store i8 0, i8* %1420, align 1
  %1421 = getelementptr inbounds %"struct.v8::internal::wasm::AsmJsParser::VarInfo", %"struct.v8::internal::wasm::AsmJsParser::VarInfo"* %1415, i64 1
  %1422 = icmp eq %"struct.v8::internal::wasm::AsmJsParser::VarInfo"* %1421, %1412
  br i1 %1422, label %1423, label %1414

1423:                                             ; preds = %1414, %1409
  %1424 = getelementptr inbounds %"class.v8::internal::Vector.160", %"class.v8::internal::Vector.160"* %1371, i64 0, i32 0
  %1425 = load i64, i64* %1372, align 8
  %1426 = mul nuw i64 %1425, 40
  %1427 = icmp eq i64 %1426, 0
  br i1 %1427, label %1432, label %1428

1428:                                             ; preds = %1423
  %1429 = bitcast %"class.v8::internal::Vector.160"* %1371 to i8**
  %1430 = load i8*, i8** %1429, align 8
  %1431 = inttoptr i64 %1410 to i8*
  tail call void @llvm.memmove.p0i8.p0i8.i64(i8* align 8 %1431, i8* align 8 %1430, i64 %1426, i1 false) #12
  br label %1432

1432:                                             ; preds = %1428, %1423
  store %"struct.v8::internal::wasm::AsmJsParser::VarInfo"* %1411, %"struct.v8::internal::wasm::AsmJsParser::VarInfo"** %1424, align 8
  store i64 %1395, i64* %1372, align 8
  br label %1433

1433:                                             ; preds = %1389, %1432
  %1434 = phi %"struct.v8::internal::wasm::AsmJsParser::VarInfo"* [ %1391, %1389 ], [ %1411, %1432 ]
  br i1 %15, label %1435, label %1449

1435:                                             ; preds = %1433
  %1436 = load i32, i32* %16, align 8
  %1437 = icmp eq i32 %1436, 124
  br i1 %1437, label %1438, label %1449

1438:                                             ; preds = %1435
  %1439 = getelementptr inbounds %"struct.v8::internal::wasm::AsmJsParser::VarInfo", %"struct.v8::internal::wasm::AsmJsParser::VarInfo"* %1434, i64 %1386, i32 5
  %1440 = load i32, i32* %1439, align 8
  %1441 = icmp slt i32 %1440, 7
  br i1 %1441, label %1442, label %1449

1442:                                             ; preds = %1438
  %1443 = icmp eq %"class.v8::internal::wasm::AsmType"* %7, null
  br i1 %1443, label %1446, label %1444

1444:                                             ; preds = %1442
  %1445 = tail call zeroext i1 @_ZN2v88internal4wasm7AsmType3IsAEPS2_(%"class.v8::internal::wasm::AsmType"* nonnull %7, %"class.v8::internal::wasm::AsmType"* nonnull inttoptr (i64 57357 to %"class.v8::internal::wasm::AsmType"*)) #12
  br i1 %1445, label %1446, label %1453

1446:                                             ; preds = %1444, %1442
  %1447 = getelementptr inbounds %"class.v8::internal::wasm::AsmJsParser", %"class.v8::internal::wasm::AsmJsParser"* %0, i64 0, i32 36
  store %"class.v8::internal::wasm::AsmType"* inttoptr (i64 1825 to %"class.v8::internal::wasm::AsmType"*), %"class.v8::internal::wasm::AsmType"** %1447, align 8
  %1448 = load i64, i64* %9, align 8
  br label %1453

1449:                                             ; preds = %1438, %1435, %1433
  %1450 = icmp eq %"class.v8::internal::wasm::AsmType"* %7, null
  %1451 = select i1 %1450, i64 %290, i64 %12
  %1452 = select i1 %1450, %"class.v8::internal::wasm::AsmType"* inttoptr (i64 17 to %"class.v8::internal::wasm::AsmType"*), %"class.v8::internal::wasm::AsmType"* %7
  br label %1453

1453:                                             ; preds = %1449, %1444, %1446
  %1454 = phi i64 [ %1448, %1446 ], [ %12, %1444 ], [ %1451, %1449 ]
  %1455 = phi %"class.v8::internal::wasm::AsmType"* [ inttoptr (i64 1825 to %"class.v8::internal::wasm::AsmType"*), %1446 ], [ %7, %1444 ], [ %1452, %1449 ]
  %1456 = getelementptr inbounds %"class.v8::internal::wasm::AsmJsParser", %"class.v8::internal::wasm::AsmJsParser"* %0, i64 0, i32 0
  %1457 = load %"class.v8::internal::Zone"*, %"class.v8::internal::Zone"** %1456, align 8
  %1458 = ptrtoint %"class.v8::internal::Zone"* %1457 to i64
  %1459 = ptrtoint %"class.v8::internal::wasm::AsmType"* %1455 to i64
  %1460 = getelementptr inbounds %"class.v8::internal::Zone", %"class.v8::internal::Zone"* %1457, i64 0, i32 2
  %1461 = load i64, i64* %1460, align 8
  %1462 = getelementptr inbounds %"class.v8::internal::Zone", %"class.v8::internal::Zone"* %1457, i64 0, i32 3
  %1463 = load i64, i64* %1462, align 8
  %1464 = sub i64 %1463, %1461
  %1465 = icmp ult i64 %1464, 48
  br i1 %1465, label %1466, label %1468, !prof !2

1466:                                             ; preds = %1453
  %1467 = tail call i64 @_ZN2v88internal4Zone9NewExpandEm(%"class.v8::internal::Zone"* %1457, i64 48) #12
  br label %1470

1468:                                             ; preds = %1453
  %1469 = add i64 %1461, 48
  store i64 %1469, i64* %1460, align 8
  br label %1470

1470:                                             ; preds = %1466, %1468
  %1471 = phi i64 [ %1467, %1466 ], [ %1461, %1468 ]
  %1472 = inttoptr i64 %1471 to %"class.v8::internal::wasm::AsmFunctionType"*
  %1473 = getelementptr inbounds %"class.v8::internal::wasm::AsmFunctionType", %"class.v8::internal::wasm::AsmFunctionType"* %1472, i64 0, i32 0, i32 0
  store i32 (...)** bitcast (i8** getelementptr inbounds ({ [9 x i8*] }, { [9 x i8*] }* @_ZTVN2v88internal4wasm15AsmFunctionTypeE, i64 0, inrange i32 0, i64 2) to i32 (...)**), i32 (...)*** %1473, align 8
  %1474 = getelementptr inbounds %"class.v8::internal::wasm::AsmFunctionType", %"class.v8::internal::wasm::AsmFunctionType"* %1472, i64 0, i32 1
  %1475 = bitcast %"class.v8::internal::wasm::AsmType"** %1474 to i64*
  store i64 %1459, i64* %1475, align 8
  %1476 = getelementptr inbounds %"class.v8::internal::wasm::AsmFunctionType", %"class.v8::internal::wasm::AsmFunctionType"* %1472, i64 0, i32 2
  %1477 = getelementptr inbounds %"class.v8::internal::wasm::AsmFunctionType", %"class.v8::internal::wasm::AsmFunctionType"* %1472, i64 0, i32 2, i32 0, i32 0, i32 2, i32 1
  %1478 = bitcast %"struct.std::__1::__compressed_pair_elem.184"* %1477 to i64*
  %1479 = bitcast %"class.v8::internal::ZoneVector.179"* %1476 to i8*
  tail call void @llvm.memset.p0i8.i64(i8* align 8 %1479, i8 0, i64 24, i1 false) #12
  store i64 %1458, i64* %1478, align 8
  %1480 = inttoptr i64 %1471 to %"class.v8::internal::wasm::AsmType"*
  %1481 = getelementptr inbounds %"class.v8::internal::wasm::AsmJsParser::CachedVector", %"class.v8::internal::wasm::AsmJsParser::CachedVector"* %4, i64 0, i32 0, i32 0, i32 0, i32 0
  %1482 = load %"class.v8::internal::wasm::AsmType"**, %"class.v8::internal::wasm::AsmType"*** %1481, align 8
  %1483 = getelementptr inbounds %"class.v8::internal::wasm::AsmJsParser::CachedVector", %"class.v8::internal::wasm::AsmJsParser::CachedVector"* %4, i64 0, i32 0, i32 0, i32 0, i32 1
  %1484 = load %"class.v8::internal::wasm::AsmType"**, %"class.v8::internal::wasm::AsmType"*** %1483, align 8
  %1485 = icmp eq %"class.v8::internal::wasm::AsmType"** %1482, %1484
  br i1 %1485, label %1738, label %1486

1486:                                             ; preds = %1470
  %1487 = and i64 %1471, 1
  %1488 = icmp eq i64 %1487, 0
  %1489 = inttoptr i64 %1471 to %"class.v8::internal::wasm::AsmCallableType"*
  %1490 = inttoptr i64 %1471 to %"class.v8::internal::wasm::AsmFunctionType"* (%"class.v8::internal::wasm::AsmCallableType"*)***
  br i1 %1488, label %1491, label %1747

1491:                                             ; preds = %1486, %1735
  %1492 = phi %"class.v8::internal::wasm::AsmType"** [ %1736, %1735 ], [ %1482, %1486 ]
  %1493 = bitcast %"class.v8::internal::wasm::AsmType"** %1492 to i64*
  %1494 = load i64, i64* %1493, align 8
  %1495 = load %"class.v8::internal::wasm::AsmFunctionType"* (%"class.v8::internal::wasm::AsmCallableType"*)**, %"class.v8::internal::wasm::AsmFunctionType"* (%"class.v8::internal::wasm::AsmCallableType"*)*** %1490, align 8
  %1496 = getelementptr inbounds %"class.v8::internal::wasm::AsmFunctionType"* (%"class.v8::internal::wasm::AsmCallableType"*)*, %"class.v8::internal::wasm::AsmFunctionType"* (%"class.v8::internal::wasm::AsmCallableType"*)** %1495, i64 2
  %1497 = load %"class.v8::internal::wasm::AsmFunctionType"* (%"class.v8::internal::wasm::AsmCallableType"*)*, %"class.v8::internal::wasm::AsmFunctionType"* (%"class.v8::internal::wasm::AsmCallableType"*)** %1496, align 8
  %1498 = tail call %"class.v8::internal::wasm::AsmFunctionType"* %1497(%"class.v8::internal::wasm::AsmCallableType"* %1489) #12
  %1499 = getelementptr inbounds %"class.v8::internal::wasm::AsmFunctionType", %"class.v8::internal::wasm::AsmFunctionType"* %1498, i64 0, i32 2, i32 0
  %1500 = getelementptr inbounds %"class.v8::internal::wasm::AsmFunctionType", %"class.v8::internal::wasm::AsmFunctionType"* %1498, i64 0, i32 2, i32 0, i32 0, i32 1
  %1501 = load %"class.v8::internal::wasm::AsmType"**, %"class.v8::internal::wasm::AsmType"*** %1500, align 8
  %1502 = getelementptr inbounds %"class.v8::internal::wasm::AsmFunctionType", %"class.v8::internal::wasm::AsmFunctionType"* %1498, i64 0, i32 2, i32 0, i32 0, i32 2, i32 0, i32 0
  %1503 = load %"class.v8::internal::wasm::AsmType"**, %"class.v8::internal::wasm::AsmType"*** %1502, align 8
  %1504 = icmp eq %"class.v8::internal::wasm::AsmType"** %1501, %1503
  %1505 = ptrtoint %"class.v8::internal::wasm::AsmType"** %1503 to i64
  br i1 %1504, label %1511, label %1506

1506:                                             ; preds = %1491
  %1507 = bitcast %"class.v8::internal::wasm::AsmType"** %1501 to i64*
  store i64 %1494, i64* %1507, align 8
  %1508 = getelementptr inbounds %"class.v8::internal::wasm::AsmType"*, %"class.v8::internal::wasm::AsmType"** %1501, i64 1
  %1509 = ptrtoint %"class.v8::internal::wasm::AsmType"** %1508 to i64
  %1510 = bitcast %"class.v8::internal::wasm::AsmType"*** %1500 to i64*
  store i64 %1509, i64* %1510, align 8
  br label %1735

1511:                                             ; preds = %1491
  %1512 = ptrtoint %"class.v8::internal::wasm::AsmType"** %1501 to i64
  %1513 = bitcast %"class.v8::internal::wasm::AsmType"*** %1500 to i64*
  %1514 = bitcast %"class.std::__1::vector.180"* %1499 to i64*
  %1515 = load i64, i64* %1514, align 8
  %1516 = sub i64 %1512, %1515
  %1517 = ashr exact i64 %1516, 3
  %1518 = add nsw i64 %1517, 1
  %1519 = icmp ugt i64 %1518, 268435455
  br i1 %1519, label %1766, label %1520

1520:                                             ; preds = %1511
  %1521 = bitcast %"class.v8::internal::wasm::AsmType"*** %1502 to i64*
  %1522 = sub i64 %1505, %1515
  %1523 = ashr exact i64 %1522, 3
  %1524 = icmp ult i64 %1523, 134217727
  br i1 %1524, label %1525, label %1530

1525:                                             ; preds = %1520
  %1526 = ashr exact i64 %1522, 2
  %1527 = icmp ult i64 %1526, %1518
  %1528 = select i1 %1527, i64 %1518, i64 %1526
  %1529 = icmp eq i64 %1528, 0
  br i1 %1529, label %1548, label %1530

1530:                                             ; preds = %1525, %1520
  %1531 = phi i64 [ %1528, %1525 ], [ 268435455, %1520 ]
  %1532 = getelementptr inbounds %"class.v8::internal::wasm::AsmFunctionType", %"class.v8::internal::wasm::AsmFunctionType"* %1498, i64 0, i32 2, i32 0, i32 0, i32 2, i32 1, i32 0, i32 0
  %1533 = load %"class.v8::internal::Zone"*, %"class.v8::internal::Zone"** %1532, align 8
  %1534 = shl i64 %1531, 3
  %1535 = getelementptr inbounds %"class.v8::internal::Zone", %"class.v8::internal::Zone"* %1533, i64 0, i32 2
  %1536 = load i64, i64* %1535, align 8
  %1537 = getelementptr inbounds %"class.v8::internal::Zone", %"class.v8::internal::Zone"* %1533, i64 0, i32 3
  %1538 = load i64, i64* %1537, align 8
  %1539 = sub i64 %1538, %1536
  %1540 = icmp ugt i64 %1534, %1539
  br i1 %1540, label %1543, label %1541, !prof !2

1541:                                             ; preds = %1530
  %1542 = add i64 %1536, %1534
  store i64 %1542, i64* %1535, align 8
  br label %1545

1543:                                             ; preds = %1530
  %1544 = tail call i64 @_ZN2v88internal4Zone9NewExpandEm(%"class.v8::internal::Zone"* %1533, i64 %1534) #12
  br label %1545

1545:                                             ; preds = %1543, %1541
  %1546 = phi i64 [ %1544, %1543 ], [ %1536, %1541 ]
  %1547 = inttoptr i64 %1546 to %"class.v8::internal::wasm::AsmType"**
  br label %1548

1548:                                             ; preds = %1545, %1525
  %1549 = phi i64 [ %1531, %1545 ], [ 0, %1525 ]
  %1550 = phi %"class.v8::internal::wasm::AsmType"** [ %1547, %1545 ], [ null, %1525 ]
  %1551 = getelementptr inbounds %"class.v8::internal::wasm::AsmType"*, %"class.v8::internal::wasm::AsmType"** %1550, i64 %1517
  %1552 = getelementptr inbounds %"class.v8::internal::wasm::AsmType"*, %"class.v8::internal::wasm::AsmType"** %1550, i64 %1549
  %1553 = ptrtoint %"class.v8::internal::wasm::AsmType"** %1552 to i64
  %1554 = bitcast %"class.v8::internal::wasm::AsmType"** %1551 to i64*
  store i64 %1494, i64* %1554, align 8
  %1555 = getelementptr inbounds %"class.v8::internal::wasm::AsmType"*, %"class.v8::internal::wasm::AsmType"** %1551, i64 1
  %1556 = ptrtoint %"class.v8::internal::wasm::AsmType"** %1555 to i64
  %1557 = getelementptr inbounds %"class.std::__1::vector.180", %"class.std::__1::vector.180"* %1499, i64 0, i32 0, i32 0
  %1558 = load %"class.v8::internal::wasm::AsmType"**, %"class.v8::internal::wasm::AsmType"*** %1557, align 8
  %1559 = ptrtoint %"class.v8::internal::wasm::AsmType"** %1558 to i64
  %1560 = load %"class.v8::internal::wasm::AsmType"**, %"class.v8::internal::wasm::AsmType"*** %1500, align 8
  %1561 = icmp eq %"class.v8::internal::wasm::AsmType"** %1560, %1558
  br i1 %1561, label %1732, label %1562

1562:                                             ; preds = %1548
  %1563 = getelementptr %"class.v8::internal::wasm::AsmType"*, %"class.v8::internal::wasm::AsmType"** %1560, i64 -1
  %1564 = ptrtoint %"class.v8::internal::wasm::AsmType"** %1563 to i64
  %1565 = sub i64 %1564, %1559
  %1566 = lshr i64 %1565, 3
  %1567 = add nuw nsw i64 %1566, 1
  %1568 = icmp ult i64 %1567, 4
  br i1 %1568, label %1662, label %1569

1569:                                             ; preds = %1562
  %1570 = getelementptr %"class.v8::internal::wasm::AsmType"*, %"class.v8::internal::wasm::AsmType"** %1550, i64 -1
  %1571 = getelementptr %"class.v8::internal::wasm::AsmType"*, %"class.v8::internal::wasm::AsmType"** %1560, i64 -1
  %1572 = ptrtoint %"class.v8::internal::wasm::AsmType"** %1571 to i64
  %1573 = sub i64 %1572, %1559
  %1574 = lshr i64 %1573, 3
  %1575 = sub nsw i64 %1517, %1574
  %1576 = getelementptr %"class.v8::internal::wasm::AsmType"*, %"class.v8::internal::wasm::AsmType"** %1570, i64 %1575
  %1577 = getelementptr %"class.v8::internal::wasm::AsmType"*, %"class.v8::internal::wasm::AsmType"** %1560, i64 -1
  %1578 = sub nsw i64 0, %1574
  %1579 = getelementptr %"class.v8::internal::wasm::AsmType"*, %"class.v8::internal::wasm::AsmType"** %1577, i64 %1578
  %1580 = icmp ult %"class.v8::internal::wasm::AsmType"** %1576, %1560
  %1581 = icmp ult %"class.v8::internal::wasm::AsmType"** %1579, %1551
  %1582 = and i1 %1580, %1581
  br i1 %1582, label %1662, label %1583

1583:                                             ; preds = %1569
  %1584 = and i64 %1567, 4611686018427387900
  %1585 = sub nsw i64 0, %1584
  %1586 = getelementptr %"class.v8::internal::wasm::AsmType"*, %"class.v8::internal::wasm::AsmType"** %1551, i64 %1585
  %1587 = sub nsw i64 0, %1584
  %1588 = getelementptr %"class.v8::internal::wasm::AsmType"*, %"class.v8::internal::wasm::AsmType"** %1560, i64 %1587
  %1589 = add nsw i64 %1584, -4
  %1590 = lshr exact i64 %1589, 2
  %1591 = add nuw nsw i64 %1590, 1
  %1592 = and i64 %1591, 1
  %1593 = icmp eq i64 %1589, 0
  br i1 %1593, label %1638, label %1594

1594:                                             ; preds = %1583
  %1595 = sub nuw nsw i64 %1591, %1592
  %1596 = getelementptr %"class.v8::internal::wasm::AsmType"*, %"class.v8::internal::wasm::AsmType"** %1551, i64 -1
  %1597 = getelementptr %"class.v8::internal::wasm::AsmType"*, %"class.v8::internal::wasm::AsmType"** %1560, i64 -1
  %1598 = getelementptr %"class.v8::internal::wasm::AsmType"*, %"class.v8::internal::wasm::AsmType"** %1551, i64 -1
  %1599 = getelementptr %"class.v8::internal::wasm::AsmType"*, %"class.v8::internal::wasm::AsmType"** %1560, i64 -1
  br label %1600

1600:                                             ; preds = %1600, %1594
  %1601 = phi i64 [ 0, %1594 ], [ %1635, %1600 ]
  %1602 = phi i64 [ %1595, %1594 ], [ %1636, %1600 ]
  %1603 = sub i64 0, %1601
  %1604 = sub i64 0, %1601
  %1605 = getelementptr inbounds %"class.v8::internal::wasm::AsmType"*, %"class.v8::internal::wasm::AsmType"** %1596, i64 %1603
  %1606 = getelementptr inbounds %"class.v8::internal::wasm::AsmType"*, %"class.v8::internal::wasm::AsmType"** %1597, i64 %1604
  %1607 = getelementptr inbounds %"class.v8::internal::wasm::AsmType"*, %"class.v8::internal::wasm::AsmType"** %1606, i64 -1
  %1608 = bitcast %"class.v8::internal::wasm::AsmType"** %1607 to <2 x i64>*
  %1609 = load <2 x i64>, <2 x i64>* %1608, align 8, !alias.scope !280
  %1610 = getelementptr inbounds %"class.v8::internal::wasm::AsmType"*, %"class.v8::internal::wasm::AsmType"** %1606, i64 -2
  %1611 = getelementptr inbounds %"class.v8::internal::wasm::AsmType"*, %"class.v8::internal::wasm::AsmType"** %1610, i64 -1
  %1612 = bitcast %"class.v8::internal::wasm::AsmType"** %1611 to <2 x i64>*
  %1613 = load <2 x i64>, <2 x i64>* %1612, align 8, !alias.scope !280
  %1614 = getelementptr inbounds %"class.v8::internal::wasm::AsmType"*, %"class.v8::internal::wasm::AsmType"** %1605, i64 -1
  %1615 = bitcast %"class.v8::internal::wasm::AsmType"** %1614 to <2 x i64>*
  store <2 x i64> %1609, <2 x i64>* %1615, align 8, !alias.scope !283, !noalias !280
  %1616 = getelementptr inbounds %"class.v8::internal::wasm::AsmType"*, %"class.v8::internal::wasm::AsmType"** %1605, i64 -2
  %1617 = getelementptr inbounds %"class.v8::internal::wasm::AsmType"*, %"class.v8::internal::wasm::AsmType"** %1616, i64 -1
  %1618 = bitcast %"class.v8::internal::wasm::AsmType"** %1617 to <2 x i64>*
  store <2 x i64> %1613, <2 x i64>* %1618, align 8, !alias.scope !283, !noalias !280
  %1619 = sub nuw nsw i64 -4, %1601
  %1620 = sub nuw nsw i64 -4, %1601
  %1621 = getelementptr inbounds %"class.v8::internal::wasm::AsmType"*, %"class.v8::internal::wasm::AsmType"** %1598, i64 %1619
  %1622 = getelementptr inbounds %"class.v8::internal::wasm::AsmType"*, %"class.v8::internal::wasm::AsmType"** %1599, i64 %1620
  %1623 = getelementptr inbounds %"class.v8::internal::wasm::AsmType"*, %"class.v8::internal::wasm::AsmType"** %1622, i64 -1
  %1624 = bitcast %"class.v8::internal::wasm::AsmType"** %1623 to <2 x i64>*
  %1625 = load <2 x i64>, <2 x i64>* %1624, align 8, !alias.scope !280
  %1626 = getelementptr inbounds %"class.v8::internal::wasm::AsmType"*, %"class.v8::internal::wasm::AsmType"** %1622, i64 -2
  %1627 = getelementptr inbounds %"class.v8::internal::wasm::AsmType"*, %"class.v8::internal::wasm::AsmType"** %1626, i64 -1
  %1628 = bitcast %"class.v8::internal::wasm::AsmType"** %1627 to <2 x i64>*
  %1629 = load <2 x i64>, <2 x i64>* %1628, align 8, !alias.scope !280
  %1630 = getelementptr inbounds %"class.v8::internal::wasm::AsmType"*, %"class.v8::internal::wasm::AsmType"** %1621, i64 -1
  %1631 = bitcast %"class.v8::internal::wasm::AsmType"** %1630 to <2 x i64>*
  store <2 x i64> %1625, <2 x i64>* %1631, align 8, !alias.scope !283, !noalias !280
  %1632 = getelementptr inbounds %"class.v8::internal::wasm::AsmType"*, %"class.v8::internal::wasm::AsmType"** %1621, i64 -2
  %1633 = getelementptr inbounds %"class.v8::internal::wasm::AsmType"*, %"class.v8::internal::wasm::AsmType"** %1632, i64 -1
  %1634 = bitcast %"class.v8::internal::wasm::AsmType"** %1633 to <2 x i64>*
  store <2 x i64> %1629, <2 x i64>* %1634, align 8, !alias.scope !283, !noalias !280
  %1635 = add i64 %1601, 8
  %1636 = add i64 %1602, -2
  %1637 = icmp eq i64 %1636, 0
  br i1 %1637, label %1638, label %1600, !llvm.loop !285

1638:                                             ; preds = %1600, %1583
  %1639 = phi i64 [ 0, %1583 ], [ %1635, %1600 ]
  %1640 = icmp eq i64 %1592, 0
  br i1 %1640, label %1660, label %1641

1641:                                             ; preds = %1638
  %1642 = sub i64 0, %1639
  %1643 = getelementptr %"class.v8::internal::wasm::AsmType"*, %"class.v8::internal::wasm::AsmType"** %1551, i64 -1
  %1644 = sub i64 0, %1639
  %1645 = getelementptr %"class.v8::internal::wasm::AsmType"*, %"class.v8::internal::wasm::AsmType"** %1560, i64 -1
  %1646 = getelementptr inbounds %"class.v8::internal::wasm::AsmType"*, %"class.v8::internal::wasm::AsmType"** %1643, i64 %1642
  %1647 = getelementptr inbounds %"class.v8::internal::wasm::AsmType"*, %"class.v8::internal::wasm::AsmType"** %1645, i64 %1644
  %1648 = getelementptr inbounds %"class.v8::internal::wasm::AsmType"*, %"class.v8::internal::wasm::AsmType"** %1647, i64 -1
  %1649 = bitcast %"class.v8::internal::wasm::AsmType"** %1648 to <2 x i64>*
  %1650 = load <2 x i64>, <2 x i64>* %1649, align 8, !alias.scope !280
  %1651 = getelementptr inbounds %"class.v8::internal::wasm::AsmType"*, %"class.v8::internal::wasm::AsmType"** %1647, i64 -2
  %1652 = getelementptr inbounds %"class.v8::internal::wasm::AsmType"*, %"class.v8::internal::wasm::AsmType"** %1651, i64 -1
  %1653 = bitcast %"class.v8::internal::wasm::AsmType"** %1652 to <2 x i64>*
  %1654 = load <2 x i64>, <2 x i64>* %1653, align 8, !alias.scope !280
  %1655 = getelementptr inbounds %"class.v8::internal::wasm::AsmType"*, %"class.v8::internal::wasm::AsmType"** %1646, i64 -1
  %1656 = bitcast %"class.v8::internal::wasm::AsmType"** %1655 to <2 x i64>*
  store <2 x i64> %1650, <2 x i64>* %1656, align 8, !alias.scope !283, !noalias !280
  %1657 = getelementptr inbounds %"class.v8::internal::wasm::AsmType"*, %"class.v8::internal::wasm::AsmType"** %1646, i64 -2
  %1658 = getelementptr inbounds %"class.v8::internal::wasm::AsmType"*, %"class.v8::internal::wasm::AsmType"** %1657, i64 -1
  %1659 = bitcast %"class.v8::internal::wasm::AsmType"** %1658 to <2 x i64>*
  store <2 x i64> %1654, <2 x i64>* %1659, align 8, !alias.scope !283, !noalias !280
  br label %1660

1660:                                             ; preds = %1638, %1641
  %1661 = icmp eq i64 %1567, %1584
  br i1 %1661, label %1732, label %1662

1662:                                             ; preds = %1660, %1569, %1562
  %1663 = phi %"class.v8::internal::wasm::AsmType"** [ %1551, %1569 ], [ %1551, %1562 ], [ %1586, %1660 ]
  %1664 = phi %"class.v8::internal::wasm::AsmType"** [ %1560, %1569 ], [ %1560, %1562 ], [ %1588, %1660 ]
  %1665 = getelementptr %"class.v8::internal::wasm::AsmType"*, %"class.v8::internal::wasm::AsmType"** %1664, i64 -1
  %1666 = ptrtoint %"class.v8::internal::wasm::AsmType"** %1665 to i64
  %1667 = sub i64 %1666, %1559
  %1668 = lshr i64 %1667, 3
  %1669 = add nuw nsw i64 %1668, 1
  %1670 = and i64 %1669, 7
  %1671 = icmp eq i64 %1670, 0
  br i1 %1671, label %1683, label %1672

1672:                                             ; preds = %1662, %1672
  %1673 = phi %"class.v8::internal::wasm::AsmType"** [ %1676, %1672 ], [ %1663, %1662 ]
  %1674 = phi %"class.v8::internal::wasm::AsmType"** [ %1677, %1672 ], [ %1664, %1662 ]
  %1675 = phi i64 [ %1681, %1672 ], [ %1670, %1662 ]
  %1676 = getelementptr inbounds %"class.v8::internal::wasm::AsmType"*, %"class.v8::internal::wasm::AsmType"** %1673, i64 -1
  %1677 = getelementptr inbounds %"class.v8::internal::wasm::AsmType"*, %"class.v8::internal::wasm::AsmType"** %1674, i64 -1
  %1678 = bitcast %"class.v8::internal::wasm::AsmType"** %1677 to i64*
  %1679 = load i64, i64* %1678, align 8
  %1680 = bitcast %"class.v8::internal::wasm::AsmType"** %1676 to i64*
  store i64 %1679, i64* %1680, align 8
  %1681 = add i64 %1675, -1
  %1682 = icmp eq i64 %1681, 0
  br i1 %1682, label %1683, label %1672, !llvm.loop !286

1683:                                             ; preds = %1672, %1662
  %1684 = phi %"class.v8::internal::wasm::AsmType"** [ undef, %1662 ], [ %1676, %1672 ]
  %1685 = phi %"class.v8::internal::wasm::AsmType"** [ %1663, %1662 ], [ %1676, %1672 ]
  %1686 = phi %"class.v8::internal::wasm::AsmType"** [ %1664, %1662 ], [ %1677, %1672 ]
  %1687 = icmp ult i64 %1667, 56
  br i1 %1687, label %1732, label %1688

1688:                                             ; preds = %1683, %1688
  %1689 = phi %"class.v8::internal::wasm::AsmType"** [ %1726, %1688 ], [ %1685, %1683 ]
  %1690 = phi %"class.v8::internal::wasm::AsmType"** [ %1727, %1688 ], [ %1686, %1683 ]
  %1691 = getelementptr inbounds %"class.v8::internal::wasm::AsmType"*, %"class.v8::internal::wasm::AsmType"** %1689, i64 -1
  %1692 = getelementptr inbounds %"class.v8::internal::wasm::AsmType"*, %"class.v8::internal::wasm::AsmType"** %1690, i64 -1
  %1693 = bitcast %"class.v8::internal::wasm::AsmType"** %1692 to i64*
  %1694 = load i64, i64* %1693, align 8
  %1695 = bitcast %"class.v8::internal::wasm::AsmType"** %1691 to i64*
  store i64 %1694, i64* %1695, align 8
  %1696 = getelementptr inbounds %"class.v8::internal::wasm::AsmType"*, %"class.v8::internal::wasm::AsmType"** %1689, i64 -2
  %1697 = getelementptr inbounds %"class.v8::internal::wasm::AsmType"*, %"class.v8::internal::wasm::AsmType"** %1690, i64 -2
  %1698 = bitcast %"class.v8::internal::wasm::AsmType"** %1697 to i64*
  %1699 = load i64, i64* %1698, align 8
  %1700 = bitcast %"class.v8::internal::wasm::AsmType"** %1696 to i64*
  store i64 %1699, i64* %1700, align 8
  %1701 = getelementptr inbounds %"class.v8::internal::wasm::AsmType"*, %"class.v8::internal::wasm::AsmType"** %1689, i64 -3
  %1702 = getelementptr inbounds %"class.v8::internal::wasm::AsmType"*, %"class.v8::internal::wasm::AsmType"** %1690, i64 -3
  %1703 = bitcast %"class.v8::internal::wasm::AsmType"** %1702 to i64*
  %1704 = load i64, i64* %1703, align 8
  %1705 = bitcast %"class.v8::internal::wasm::AsmType"** %1701 to i64*
  store i64 %1704, i64* %1705, align 8
  %1706 = getelementptr inbounds %"class.v8::internal::wasm::AsmType"*, %"class.v8::internal::wasm::AsmType"** %1689, i64 -4
  %1707 = getelementptr inbounds %"class.v8::internal::wasm::AsmType"*, %"class.v8::internal::wasm::AsmType"** %1690, i64 -4
  %1708 = bitcast %"class.v8::internal::wasm::AsmType"** %1707 to i64*
  %1709 = load i64, i64* %1708, align 8
  %1710 = bitcast %"class.v8::internal::wasm::AsmType"** %1706 to i64*
  store i64 %1709, i64* %1710, align 8
  %1711 = getelementptr inbounds %"class.v8::internal::wasm::AsmType"*, %"class.v8::internal::wasm::AsmType"** %1689, i64 -5
  %1712 = getelementptr inbounds %"class.v8::internal::wasm::AsmType"*, %"class.v8::internal::wasm::AsmType"** %1690, i64 -5
  %1713 = bitcast %"class.v8::internal::wasm::AsmType"** %1712 to i64*
  %1714 = load i64, i64* %1713, align 8
  %1715 = bitcast %"class.v8::internal::wasm::AsmType"** %1711 to i64*
  store i64 %1714, i64* %1715, align 8
  %1716 = getelementptr inbounds %"class.v8::internal::wasm::AsmType"*, %"class.v8::internal::wasm::AsmType"** %1689, i64 -6
  %1717 = getelementptr inbounds %"class.v8::internal::wasm::AsmType"*, %"class.v8::internal::wasm::AsmType"** %1690, i64 -6
  %1718 = bitcast %"class.v8::internal::wasm::AsmType"** %1717 to i64*
  %1719 = load i64, i64* %1718, align 8
  %1720 = bitcast %"class.v8::internal::wasm::AsmType"** %1716 to i64*
  store i64 %1719, i64* %1720, align 8
  %1721 = getelementptr inbounds %"class.v8::internal::wasm::AsmType"*, %"class.v8::internal::wasm::AsmType"** %1689, i64 -7
  %1722 = getelementptr inbounds %"class.v8::internal::wasm::AsmType"*, %"class.v8::internal::wasm::AsmType"** %1690, i64 -7
  %1723 = bitcast %"class.v8::internal::wasm::AsmType"** %1722 to i64*
  %1724 = load i64, i64* %1723, align 8
  %1725 = bitcast %"class.v8::internal::wasm::AsmType"** %1721 to i64*
  store i64 %1724, i64* %1725, align 8
  %1726 = getelementptr inbounds %"class.v8::internal::wasm::AsmType"*, %"class.v8::internal::wasm::AsmType"** %1689, i64 -8
  %1727 = getelementptr inbounds %"class.v8::internal::wasm::AsmType"*, %"class.v8::internal::wasm::AsmType"** %1690, i64 -8
  %1728 = bitcast %"class.v8::internal::wasm::AsmType"** %1727 to i64*
  %1729 = load i64, i64* %1728, align 8
  %1730 = bitcast %"class.v8::internal::wasm::AsmType"** %1726 to i64*
  store i64 %1729, i64* %1730, align 8
  %1731 = icmp eq %"class.v8::internal::wasm::AsmType"** %1727, %1558
  br i1 %1731, label %1732, label %1688, !llvm.loop !287

1732:                                             ; preds = %1683, %1688, %1660, %1548
  %1733 = phi %"class.v8::internal::wasm::AsmType"** [ %1551, %1548 ], [ %1586, %1660 ], [ %1684, %1683 ], [ %1726, %1688 ]
  %1734 = ptrtoint %"class.v8::internal::wasm::AsmType"** %1733 to i64
  store i64 %1734, i64* %1514, align 8
  store i64 %1556, i64* %1513, align 8
  store i64 %1553, i64* %1521, align 8
  br label %1735

1735:                                             ; preds = %1732, %1506
  %1736 = getelementptr inbounds %"class.v8::internal::wasm::AsmType"*, %"class.v8::internal::wasm::AsmType"** %1492, i64 1
  %1737 = icmp eq %"class.v8::internal::wasm::AsmType"** %1736, %1484
  br i1 %1737, label %1738, label %1491

1738:                                             ; preds = %1981, %1735, %1470
  %1739 = getelementptr inbounds %"class.v8::internal::wasm::AsmJsParser::CachedVector", %"class.v8::internal::wasm::AsmJsParser::CachedVector"* %4, i64 0, i32 0
  %1740 = call %"class.v8::internal::Signature"* @_ZN2v88internal4wasm11AsmJsParser16ConvertSignatureEPNS1_7AsmTypeERKNS0_10ZoneVectorIS4_EE(%"class.v8::internal::wasm::AsmJsParser"* %0, %"class.v8::internal::wasm::AsmType"* %1455, %"class.v8::internal::ZoneVector.179"* nonnull dereferenceable(32) %1739)
  %1741 = getelementptr inbounds %"class.v8::internal::wasm::AsmJsParser", %"class.v8::internal::wasm::AsmJsParser"* %0, i64 0, i32 2
  %1742 = load %"class.v8::internal::wasm::WasmModuleBuilder"*, %"class.v8::internal::wasm::WasmModuleBuilder"** %1741, align 8
  %1743 = tail call i32 @_ZN2v88internal4wasm17WasmModuleBuilder12AddSignatureEPNS0_9SignatureINS1_9ValueTypeEEE(%"class.v8::internal::wasm::WasmModuleBuilder"* %1742, %"class.v8::internal::Signature"* %1740) #12
  %1744 = getelementptr inbounds %"struct.v8::internal::wasm::AsmJsParser::VarInfo", %"struct.v8::internal::wasm::AsmJsParser::VarInfo"* %1434, i64 %1386, i32 5
  %1745 = load i32, i32* %1744, align 8
  %1746 = icmp eq i32 %1745, 6
  br i1 %1746, label %1984, label %2042

1747:                                             ; preds = %1486, %1981
  %1748 = phi %"class.v8::internal::wasm::AsmType"** [ %1982, %1981 ], [ %1482, %1486 ]
  %1749 = bitcast %"class.v8::internal::wasm::AsmType"** %1748 to i64*
  %1750 = load i64, i64* %1749, align 8
  %1751 = load %"class.v8::internal::wasm::AsmType"**, %"class.v8::internal::wasm::AsmType"*** inttoptr (i64 24 to %"class.v8::internal::wasm::AsmType"***), align 8
  %1752 = load %"class.v8::internal::wasm::AsmType"**, %"class.v8::internal::wasm::AsmType"*** inttoptr (i64 32 to %"class.v8::internal::wasm::AsmType"***), align 32
  %1753 = icmp eq %"class.v8::internal::wasm::AsmType"** %1751, %1752
  %1754 = ptrtoint %"class.v8::internal::wasm::AsmType"** %1752 to i64
  br i1 %1753, label %1759, label %1755

1755:                                             ; preds = %1747
  %1756 = bitcast %"class.v8::internal::wasm::AsmType"** %1751 to i64*
  store i64 %1750, i64* %1756, align 8
  %1757 = getelementptr inbounds %"class.v8::internal::wasm::AsmType"*, %"class.v8::internal::wasm::AsmType"** %1751, i64 1
  %1758 = ptrtoint %"class.v8::internal::wasm::AsmType"** %1757 to i64
  store i64 %1758, i64* inttoptr (i64 24 to i64*), align 8
  br label %1981

1759:                                             ; preds = %1747
  %1760 = ptrtoint %"class.v8::internal::wasm::AsmType"** %1751 to i64
  %1761 = load i64, i64* inttoptr (i64 16 to i64*), align 16
  %1762 = sub i64 %1760, %1761
  %1763 = ashr exact i64 %1762, 3
  %1764 = add nsw i64 %1763, 1
  %1765 = icmp ugt i64 %1764, 268435455
  br i1 %1765, label %1766, label %1769

1766:                                             ; preds = %1759, %1511
  %1767 = phi %"class.std::__1::vector.180"* [ %1499, %1511 ], [ inttoptr (i64 16 to %"class.std::__1::vector.180"*), %1759 ]
  %1768 = bitcast %"class.std::__1::vector.180"* %1767 to %"class.std::__1::__vector_base_common"*
  tail call void @_ZNKSt3__120__vector_base_commonILb1EE20__throw_length_errorEv(%"class.std::__1::__vector_base_common"* %1768) #13
  unreachable

1769:                                             ; preds = %1759
  %1770 = sub i64 %1754, %1761
  %1771 = ashr exact i64 %1770, 3
  %1772 = icmp ult i64 %1771, 134217727
  br i1 %1772, label %1773, label %1778

1773:                                             ; preds = %1769
  %1774 = ashr exact i64 %1770, 2
  %1775 = icmp ult i64 %1774, %1764
  %1776 = select i1 %1775, i64 %1764, i64 %1774
  %1777 = icmp eq i64 %1776, 0
  br i1 %1777, label %1795, label %1778

1778:                                             ; preds = %1773, %1769
  %1779 = phi i64 [ %1776, %1773 ], [ 268435455, %1769 ]
  %1780 = load %"class.v8::internal::Zone"*, %"class.v8::internal::Zone"** inttoptr (i64 40 to %"class.v8::internal::Zone"**), align 8
  %1781 = shl i64 %1779, 3
  %1782 = getelementptr inbounds %"class.v8::internal::Zone", %"class.v8::internal::Zone"* %1780, i64 0, i32 2
  %1783 = load i64, i64* %1782, align 8
  %1784 = getelementptr inbounds %"class.v8::internal::Zone", %"class.v8::internal::Zone"* %1780, i64 0, i32 3
  %1785 = load i64, i64* %1784, align 8
  %1786 = sub i64 %1785, %1783
  %1787 = icmp ugt i64 %1781, %1786
  br i1 %1787, label %1788, label %1790, !prof !2

1788:                                             ; preds = %1778
  %1789 = tail call i64 @_ZN2v88internal4Zone9NewExpandEm(%"class.v8::internal::Zone"* %1780, i64 %1781) #12
  br label %1792

1790:                                             ; preds = %1778
  %1791 = add i64 %1783, %1781
  store i64 %1791, i64* %1782, align 8
  br label %1792

1792:                                             ; preds = %1790, %1788
  %1793 = phi i64 [ %1789, %1788 ], [ %1783, %1790 ]
  %1794 = inttoptr i64 %1793 to %"class.v8::internal::wasm::AsmType"**
  br label %1795

1795:                                             ; preds = %1792, %1773
  %1796 = phi i64 [ %1779, %1792 ], [ 0, %1773 ]
  %1797 = phi %"class.v8::internal::wasm::AsmType"** [ %1794, %1792 ], [ null, %1773 ]
  %1798 = getelementptr inbounds %"class.v8::internal::wasm::AsmType"*, %"class.v8::internal::wasm::AsmType"** %1797, i64 %1763
  %1799 = getelementptr inbounds %"class.v8::internal::wasm::AsmType"*, %"class.v8::internal::wasm::AsmType"** %1797, i64 %1796
  %1800 = ptrtoint %"class.v8::internal::wasm::AsmType"** %1799 to i64
  %1801 = bitcast %"class.v8::internal::wasm::AsmType"** %1798 to i64*
  store i64 %1750, i64* %1801, align 8
  %1802 = getelementptr inbounds %"class.v8::internal::wasm::AsmType"*, %"class.v8::internal::wasm::AsmType"** %1798, i64 1
  %1803 = ptrtoint %"class.v8::internal::wasm::AsmType"** %1802 to i64
  %1804 = load %"class.v8::internal::wasm::AsmType"**, %"class.v8::internal::wasm::AsmType"*** inttoptr (i64 16 to %"class.v8::internal::wasm::AsmType"***), align 16
  %1805 = ptrtoint %"class.v8::internal::wasm::AsmType"** %1804 to i64
  %1806 = load %"class.v8::internal::wasm::AsmType"**, %"class.v8::internal::wasm::AsmType"*** inttoptr (i64 24 to %"class.v8::internal::wasm::AsmType"***), align 8
  %1807 = icmp eq %"class.v8::internal::wasm::AsmType"** %1806, %1804
  br i1 %1807, label %1978, label %1808

1808:                                             ; preds = %1795
  %1809 = getelementptr %"class.v8::internal::wasm::AsmType"*, %"class.v8::internal::wasm::AsmType"** %1806, i64 -1
  %1810 = ptrtoint %"class.v8::internal::wasm::AsmType"** %1809 to i64
  %1811 = sub i64 %1810, %1805
  %1812 = lshr i64 %1811, 3
  %1813 = add nuw nsw i64 %1812, 1
  %1814 = icmp ult i64 %1813, 4
  br i1 %1814, label %1908, label %1815

1815:                                             ; preds = %1808
  %1816 = getelementptr %"class.v8::internal::wasm::AsmType"*, %"class.v8::internal::wasm::AsmType"** %1797, i64 -1
  %1817 = getelementptr %"class.v8::internal::wasm::AsmType"*, %"class.v8::internal::wasm::AsmType"** %1806, i64 -1
  %1818 = ptrtoint %"class.v8::internal::wasm::AsmType"** %1817 to i64
  %1819 = sub i64 %1818, %1805
  %1820 = lshr i64 %1819, 3
  %1821 = sub nsw i64 %1763, %1820
  %1822 = getelementptr %"class.v8::internal::wasm::AsmType"*, %"class.v8::internal::wasm::AsmType"** %1816, i64 %1821
  %1823 = getelementptr %"class.v8::internal::wasm::AsmType"*, %"class.v8::internal::wasm::AsmType"** %1806, i64 -1
  %1824 = sub nsw i64 0, %1820
  %1825 = getelementptr %"class.v8::internal::wasm::AsmType"*, %"class.v8::internal::wasm::AsmType"** %1823, i64 %1824
  %1826 = icmp ult %"class.v8::internal::wasm::AsmType"** %1822, %1806
  %1827 = icmp ult %"class.v8::internal::wasm::AsmType"** %1825, %1798
  %1828 = and i1 %1826, %1827
  br i1 %1828, label %1908, label %1829

1829:                                             ; preds = %1815
  %1830 = and i64 %1813, 4611686018427387900
  %1831 = sub nsw i64 0, %1830
  %1832 = getelementptr %"class.v8::internal::wasm::AsmType"*, %"class.v8::internal::wasm::AsmType"** %1798, i64 %1831
  %1833 = sub nsw i64 0, %1830
  %1834 = getelementptr %"class.v8::internal::wasm::AsmType"*, %"class.v8::internal::wasm::AsmType"** %1806, i64 %1833
  %1835 = add nsw i64 %1830, -4
  %1836 = lshr exact i64 %1835, 2
  %1837 = add nuw nsw i64 %1836, 1
  %1838 = and i64 %1837, 1
  %1839 = icmp eq i64 %1835, 0
  br i1 %1839, label %1884, label %1840

1840:                                             ; preds = %1829
  %1841 = sub nuw nsw i64 %1837, %1838
  %1842 = getelementptr %"class.v8::internal::wasm::AsmType"*, %"class.v8::internal::wasm::AsmType"** %1798, i64 -1
  %1843 = getelementptr %"class.v8::internal::wasm::AsmType"*, %"class.v8::internal::wasm::AsmType"** %1806, i64 -1
  %1844 = getelementptr %"class.v8::internal::wasm::AsmType"*, %"class.v8::internal::wasm::AsmType"** %1798, i64 -1
  %1845 = getelementptr %"class.v8::internal::wasm::AsmType"*, %"class.v8::internal::wasm::AsmType"** %1806, i64 -1
  br label %1846

1846:                                             ; preds = %1846, %1840
  %1847 = phi i64 [ 0, %1840 ], [ %1881, %1846 ]
  %1848 = phi i64 [ %1841, %1840 ], [ %1882, %1846 ]
  %1849 = sub i64 0, %1847
  %1850 = sub i64 0, %1847
  %1851 = getelementptr inbounds %"class.v8::internal::wasm::AsmType"*, %"class.v8::internal::wasm::AsmType"** %1842, i64 %1849
  %1852 = getelementptr inbounds %"class.v8::internal::wasm::AsmType"*, %"class.v8::internal::wasm::AsmType"** %1843, i64 %1850
  %1853 = getelementptr inbounds %"class.v8::internal::wasm::AsmType"*, %"class.v8::internal::wasm::AsmType"** %1852, i64 -1
  %1854 = bitcast %"class.v8::internal::wasm::AsmType"** %1853 to <2 x i64>*
  %1855 = load <2 x i64>, <2 x i64>* %1854, align 8, !alias.scope !288
  %1856 = getelementptr inbounds %"class.v8::internal::wasm::AsmType"*, %"class.v8::internal::wasm::AsmType"** %1852, i64 -2
  %1857 = getelementptr inbounds %"class.v8::internal::wasm::AsmType"*, %"class.v8::internal::wasm::AsmType"** %1856, i64 -1
  %1858 = bitcast %"class.v8::internal::wasm::AsmType"** %1857 to <2 x i64>*
  %1859 = load <2 x i64>, <2 x i64>* %1858, align 8, !alias.scope !288
  %1860 = getelementptr inbounds %"class.v8::internal::wasm::AsmType"*, %"class.v8::internal::wasm::AsmType"** %1851, i64 -1
  %1861 = bitcast %"class.v8::internal::wasm::AsmType"** %1860 to <2 x i64>*
  store <2 x i64> %1855, <2 x i64>* %1861, align 8, !alias.scope !291, !noalias !288
  %1862 = getelementptr inbounds %"class.v8::internal::wasm::AsmType"*, %"class.v8::internal::wasm::AsmType"** %1851, i64 -2
  %1863 = getelementptr inbounds %"class.v8::internal::wasm::AsmType"*, %"class.v8::internal::wasm::AsmType"** %1862, i64 -1
  %1864 = bitcast %"class.v8::internal::wasm::AsmType"** %1863 to <2 x i64>*
  store <2 x i64> %1859, <2 x i64>* %1864, align 8, !alias.scope !291, !noalias !288
  %1865 = sub nuw nsw i64 -4, %1847
  %1866 = sub nuw nsw i64 -4, %1847
  %1867 = getelementptr inbounds %"class.v8::internal::wasm::AsmType"*, %"class.v8::internal::wasm::AsmType"** %1844, i64 %1865
  %1868 = getelementptr inbounds %"class.v8::internal::wasm::AsmType"*, %"class.v8::internal::wasm::AsmType"** %1845, i64 %1866
  %1869 = getelementptr inbounds %"class.v8::internal::wasm::AsmType"*, %"class.v8::internal::wasm::AsmType"** %1868, i64 -1
  %1870 = bitcast %"class.v8::internal::wasm::AsmType"** %1869 to <2 x i64>*
  %1871 = load <2 x i64>, <2 x i64>* %1870, align 8, !alias.scope !288
  %1872 = getelementptr inbounds %"class.v8::internal::wasm::AsmType"*, %"class.v8::internal::wasm::AsmType"** %1868, i64 -2
  %1873 = getelementptr inbounds %"class.v8::internal::wasm::AsmType"*, %"class.v8::internal::wasm::AsmType"** %1872, i64 -1
  %1874 = bitcast %"class.v8::internal::wasm::AsmType"** %1873 to <2 x i64>*
  %1875 = load <2 x i64>, <2 x i64>* %1874, align 8, !alias.scope !288
  %1876 = getelementptr inbounds %"class.v8::internal::wasm::AsmType"*, %"class.v8::internal::wasm::AsmType"** %1867, i64 -1
  %1877 = bitcast %"class.v8::internal::wasm::AsmType"** %1876 to <2 x i64>*
  store <2 x i64> %1871, <2 x i64>* %1877, align 8, !alias.scope !291, !noalias !288
  %1878 = getelementptr inbounds %"class.v8::internal::wasm::AsmType"*, %"class.v8::internal::wasm::AsmType"** %1867, i64 -2
  %1879 = getelementptr inbounds %"class.v8::internal::wasm::AsmType"*, %"class.v8::internal::wasm::AsmType"** %1878, i64 -1
  %1880 = bitcast %"class.v8::internal::wasm::AsmType"** %1879 to <2 x i64>*
  store <2 x i64> %1875, <2 x i64>* %1880, align 8, !alias.scope !291, !noalias !288
  %1881 = add i64 %1847, 8
  %1882 = add i64 %1848, -2
  %1883 = icmp eq i64 %1882, 0
  br i1 %1883, label %1884, label %1846, !llvm.loop !293

1884:                                             ; preds = %1846, %1829
  %1885 = phi i64 [ 0, %1829 ], [ %1881, %1846 ]
  %1886 = icmp eq i64 %1838, 0
  br i1 %1886, label %1906, label %1887

1887:                                             ; preds = %1884
  %1888 = sub i64 0, %1885
  %1889 = getelementptr %"class.v8::internal::wasm::AsmType"*, %"class.v8::internal::wasm::AsmType"** %1798, i64 -1
  %1890 = sub i64 0, %1885
  %1891 = getelementptr %"class.v8::internal::wasm::AsmType"*, %"class.v8::internal::wasm::AsmType"** %1806, i64 -1
  %1892 = getelementptr inbounds %"class.v8::internal::wasm::AsmType"*, %"class.v8::internal::wasm::AsmType"** %1889, i64 %1888
  %1893 = getelementptr inbounds %"class.v8::internal::wasm::AsmType"*, %"class.v8::internal::wasm::AsmType"** %1891, i64 %1890
  %1894 = getelementptr inbounds %"class.v8::internal::wasm::AsmType"*, %"class.v8::internal::wasm::AsmType"** %1893, i64 -1
  %1895 = bitcast %"class.v8::internal::wasm::AsmType"** %1894 to <2 x i64>*
  %1896 = load <2 x i64>, <2 x i64>* %1895, align 8, !alias.scope !288
  %1897 = getelementptr inbounds %"class.v8::internal::wasm::AsmType"*, %"class.v8::internal::wasm::AsmType"** %1893, i64 -2
  %1898 = getelementptr inbounds %"class.v8::internal::wasm::AsmType"*, %"class.v8::internal::wasm::AsmType"** %1897, i64 -1
  %1899 = bitcast %"class.v8::internal::wasm::AsmType"** %1898 to <2 x i64>*
  %1900 = load <2 x i64>, <2 x i64>* %1899, align 8, !alias.scope !288
  %1901 = getelementptr inbounds %"class.v8::internal::wasm::AsmType"*, %"class.v8::internal::wasm::AsmType"** %1892, i64 -1
  %1902 = bitcast %"class.v8::internal::wasm::AsmType"** %1901 to <2 x i64>*
  store <2 x i64> %1896, <2 x i64>* %1902, align 8, !alias.scope !291, !noalias !288
  %1903 = getelementptr inbounds %"class.v8::internal::wasm::AsmType"*, %"class.v8::internal::wasm::AsmType"** %1892, i64 -2
  %1904 = getelementptr inbounds %"class.v8::internal::wasm::AsmType"*, %"class.v8::internal::wasm::AsmType"** %1903, i64 -1
  %1905 = bitcast %"class.v8::internal::wasm::AsmType"** %1904 to <2 x i64>*
  store <2 x i64> %1900, <2 x i64>* %1905, align 8, !alias.scope !291, !noalias !288
  br label %1906

1906:                                             ; preds = %1884, %1887
  %1907 = icmp eq i64 %1813, %1830
  br i1 %1907, label %1978, label %1908

1908:                                             ; preds = %1906, %1815, %1808
  %1909 = phi %"class.v8::internal::wasm::AsmType"** [ %1798, %1815 ], [ %1798, %1808 ], [ %1832, %1906 ]
  %1910 = phi %"class.v8::internal::wasm::AsmType"** [ %1806, %1815 ], [ %1806, %1808 ], [ %1834, %1906 ]
  %1911 = getelementptr %"class.v8::internal::wasm::AsmType"*, %"class.v8::internal::wasm::AsmType"** %1910, i64 -1
  %1912 = ptrtoint %"class.v8::internal::wasm::AsmType"** %1911 to i64
  %1913 = sub i64 %1912, %1805
  %1914 = lshr i64 %1913, 3
  %1915 = add nuw nsw i64 %1914, 1
  %1916 = and i64 %1915, 7
  %1917 = icmp eq i64 %1916, 0
  br i1 %1917, label %1929, label %1918

1918:                                             ; preds = %1908, %1918
  %1919 = phi %"class.v8::internal::wasm::AsmType"** [ %1922, %1918 ], [ %1909, %1908 ]
  %1920 = phi %"class.v8::internal::wasm::AsmType"** [ %1923, %1918 ], [ %1910, %1908 ]
  %1921 = phi i64 [ %1927, %1918 ], [ %1916, %1908 ]
  %1922 = getelementptr inbounds %"class.v8::internal::wasm::AsmType"*, %"class.v8::internal::wasm::AsmType"** %1919, i64 -1
  %1923 = getelementptr inbounds %"class.v8::internal::wasm::AsmType"*, %"class.v8::internal::wasm::AsmType"** %1920, i64 -1
  %1924 = bitcast %"class.v8::internal::wasm::AsmType"** %1923 to i64*
  %1925 = load i64, i64* %1924, align 8
  %1926 = bitcast %"class.v8::internal::wasm::AsmType"** %1922 to i64*
  store i64 %1925, i64* %1926, align 8
  %1927 = add i64 %1921, -1
  %1928 = icmp eq i64 %1927, 0
  br i1 %1928, label %1929, label %1918, !llvm.loop !294

1929:                                             ; preds = %1918, %1908
  %1930 = phi %"class.v8::internal::wasm::AsmType"** [ undef, %1908 ], [ %1922, %1918 ]
  %1931 = phi %"class.v8::internal::wasm::AsmType"** [ %1909, %1908 ], [ %1922, %1918 ]
  %1932 = phi %"class.v8::internal::wasm::AsmType"** [ %1910, %1908 ], [ %1923, %1918 ]
  %1933 = icmp ult i64 %1913, 56
  br i1 %1933, label %1978, label %1934

1934:                                             ; preds = %1929, %1934
  %1935 = phi %"class.v8::internal::wasm::AsmType"** [ %1972, %1934 ], [ %1931, %1929 ]
  %1936 = phi %"class.v8::internal::wasm::AsmType"** [ %1973, %1934 ], [ %1932, %1929 ]
  %1937 = getelementptr inbounds %"class.v8::internal::wasm::AsmType"*, %"class.v8::internal::wasm::AsmType"** %1935, i64 -1
  %1938 = getelementptr inbounds %"class.v8::internal::wasm::AsmType"*, %"class.v8::internal::wasm::AsmType"** %1936, i64 -1
  %1939 = bitcast %"class.v8::internal::wasm::AsmType"** %1938 to i64*
  %1940 = load i64, i64* %1939, align 8
  %1941 = bitcast %"class.v8::internal::wasm::AsmType"** %1937 to i64*
  store i64 %1940, i64* %1941, align 8
  %1942 = getelementptr inbounds %"class.v8::internal::wasm::AsmType"*, %"class.v8::internal::wasm::AsmType"** %1935, i64 -2
  %1943 = getelementptr inbounds %"class.v8::internal::wasm::AsmType"*, %"class.v8::internal::wasm::AsmType"** %1936, i64 -2
  %1944 = bitcast %"class.v8::internal::wasm::AsmType"** %1943 to i64*
  %1945 = load i64, i64* %1944, align 8
  %1946 = bitcast %"class.v8::internal::wasm::AsmType"** %1942 to i64*
  store i64 %1945, i64* %1946, align 8
  %1947 = getelementptr inbounds %"class.v8::internal::wasm::AsmType"*, %"class.v8::internal::wasm::AsmType"** %1935, i64 -3
  %1948 = getelementptr inbounds %"class.v8::internal::wasm::AsmType"*, %"class.v8::internal::wasm::AsmType"** %1936, i64 -3
  %1949 = bitcast %"class.v8::internal::wasm::AsmType"** %1948 to i64*
  %1950 = load i64, i64* %1949, align 8
  %1951 = bitcast %"class.v8::internal::wasm::AsmType"** %1947 to i64*
  store i64 %1950, i64* %1951, align 8
  %1952 = getelementptr inbounds %"class.v8::internal::wasm::AsmType"*, %"class.v8::internal::wasm::AsmType"** %1935, i64 -4
  %1953 = getelementptr inbounds %"class.v8::internal::wasm::AsmType"*, %"class.v8::internal::wasm::AsmType"** %1936, i64 -4
  %1954 = bitcast %"class.v8::internal::wasm::AsmType"** %1953 to i64*
  %1955 = load i64, i64* %1954, align 8
  %1956 = bitcast %"class.v8::internal::wasm::AsmType"** %1952 to i64*
  store i64 %1955, i64* %1956, align 8
  %1957 = getelementptr inbounds %"class.v8::internal::wasm::AsmType"*, %"class.v8::internal::wasm::AsmType"** %1935, i64 -5
  %1958 = getelementptr inbounds %"class.v8::internal::wasm::AsmType"*, %"class.v8::internal::wasm::AsmType"** %1936, i64 -5
  %1959 = bitcast %"class.v8::internal::wasm::AsmType"** %1958 to i64*
  %1960 = load i64, i64* %1959, align 8
  %1961 = bitcast %"class.v8::internal::wasm::AsmType"** %1957 to i64*
  store i64 %1960, i64* %1961, align 8
  %1962 = getelementptr inbounds %"class.v8::internal::wasm::AsmType"*, %"class.v8::internal::wasm::AsmType"** %1935, i64 -6
  %1963 = getelementptr inbounds %"class.v8::internal::wasm::AsmType"*, %"class.v8::internal::wasm::AsmType"** %1936, i64 -6
  %1964 = bitcast %"class.v8::internal::wasm::AsmType"** %1963 to i64*
  %1965 = load i64, i64* %1964, align 8
  %1966 = bitcast %"class.v8::internal::wasm::AsmType"** %1962 to i64*
  store i64 %1965, i64* %1966, align 8
  %1967 = getelementptr inbounds %"class.v8::internal::wasm::AsmType"*, %"class.v8::internal::wasm::AsmType"** %1935, i64 -7
  %1968 = getelementptr inbounds %"class.v8::internal::wasm::AsmType"*, %"class.v8::internal::wasm::AsmType"** %1936, i64 -7
  %1969 = bitcast %"class.v8::internal::wasm::AsmType"** %1968 to i64*
  %1970 = load i64, i64* %1969, align 8
  %1971 = bitcast %"class.v8::internal::wasm::AsmType"** %1967 to i64*
  store i64 %1970, i64* %1971, align 8
  %1972 = getelementptr inbounds %"class.v8::internal::wasm::AsmType"*, %"class.v8::internal::wasm::AsmType"** %1935, i64 -8
  %1973 = getelementptr inbounds %"class.v8::internal::wasm::AsmType"*, %"class.v8::internal::wasm::AsmType"** %1936, i64 -8
  %1974 = bitcast %"class.v8::internal::wasm::AsmType"** %1973 to i64*
  %1975 = load i64, i64* %1974, align 8
  %1976 = bitcast %"class.v8::internal::wasm::AsmType"** %1972 to i64*
  store i64 %1975, i64* %1976, align 8
  %1977 = icmp eq %"class.v8::internal::wasm::AsmType"** %1973, %1804
  br i1 %1977, label %1978, label %1934, !llvm.loop !295

1978:                                             ; preds = %1929, %1934, %1906, %1795
  %1979 = phi %"class.v8::internal::wasm::AsmType"** [ %1798, %1795 ], [ %1832, %1906 ], [ %1930, %1929 ], [ %1972, %1934 ]
  %1980 = ptrtoint %"class.v8::internal::wasm::AsmType"** %1979 to i64
  store i64 %1980, i64* inttoptr (i64 16 to i64*), align 16
  store i64 %1803, i64* inttoptr (i64 24 to i64*), align 8
  store i64 %1800, i64* inttoptr (i64 32 to i64*), align 32
  br label %1981

1981:                                             ; preds = %1755, %1978
  %1982 = getelementptr inbounds %"class.v8::internal::wasm::AsmType"*, %"class.v8::internal::wasm::AsmType"** %1748, i64 1
  %1983 = icmp eq %"class.v8::internal::wasm::AsmType"** %1982, %1484
  br i1 %1983, label %1738, label %1747

1984:                                             ; preds = %1738
  %1985 = getelementptr inbounds %"class.v8::internal::wasm::AsmJsParser::CachedVector", %"class.v8::internal::wasm::AsmJsParser::CachedVector"* %5, i64 0, i32 0, i32 0, i32 0, i32 0
  %1986 = load %"class.v8::internal::wasm::AsmType"**, %"class.v8::internal::wasm::AsmType"*** %1985, align 8
  %1987 = getelementptr inbounds %"class.v8::internal::wasm::AsmJsParser::CachedVector", %"class.v8::internal::wasm::AsmJsParser::CachedVector"* %5, i64 0, i32 0, i32 0, i32 0, i32 1
  %1988 = load %"class.v8::internal::wasm::AsmType"**, %"class.v8::internal::wasm::AsmType"*** %1987, align 8
  %1989 = icmp eq %"class.v8::internal::wasm::AsmType"** %1986, %1988
  br i1 %1989, label %2002, label %1992

1990:                                             ; preds = %1992
  %1991 = icmp eq %"class.v8::internal::wasm::AsmType"** %1996, %1988
  br i1 %1991, label %2002, label %1992

1992:                                             ; preds = %1984, %1990
  %1993 = phi %"class.v8::internal::wasm::AsmType"** [ %1996, %1990 ], [ %1986, %1984 ]
  %1994 = load %"class.v8::internal::wasm::AsmType"*, %"class.v8::internal::wasm::AsmType"** %1993, align 8
  %1995 = tail call zeroext i1 @_ZN2v88internal4wasm7AsmType3IsAEPS2_(%"class.v8::internal::wasm::AsmType"* %1994, %"class.v8::internal::wasm::AsmType"* nonnull inttoptr (i64 33 to %"class.v8::internal::wasm::AsmType"*)) #12
  %1996 = getelementptr inbounds %"class.v8::internal::wasm::AsmType"*, %"class.v8::internal::wasm::AsmType"** %1993, i64 1
  br i1 %1995, label %1990, label %1997

1997:                                             ; preds = %1992
  store i8 1, i8* %381, align 4
  %1998 = getelementptr inbounds %"class.v8::internal::wasm::AsmJsParser", %"class.v8::internal::wasm::AsmJsParser"* %0, i64 0, i32 18
  store i8* getelementptr inbounds ([43 x i8], [43 x i8]* @.str.100, i64 0, i64 0), i8** %1998, align 8
  %1999 = load i64, i64* %9, align 8
  %2000 = trunc i64 %1999 to i32
  %2001 = getelementptr inbounds %"class.v8::internal::wasm::AsmJsParser", %"class.v8::internal::wasm::AsmJsParser"* %0, i64 0, i32 19
  store i32 %2000, i32* %2001, align 8
  br label %2416

2002:                                             ; preds = %1990, %1984
  %2003 = tail call zeroext i1 @_ZN2v88internal4wasm7AsmType3IsAEPS2_(%"class.v8::internal::wasm::AsmType"* %1455, %"class.v8::internal::wasm::AsmType"* nonnull inttoptr (i64 57357 to %"class.v8::internal::wasm::AsmType"*)) #12
  br i1 %2003, label %2004, label %2009

2004:                                             ; preds = %2002
  store i8 1, i8* %381, align 4
  %2005 = getelementptr inbounds %"class.v8::internal::wasm::AsmJsParser", %"class.v8::internal::wasm::AsmJsParser"* %0, i64 0, i32 18
  store i8* getelementptr inbounds ([43 x i8], [43 x i8]* @.str.101, i64 0, i64 0), i8** %2005, align 8
  %2006 = load i64, i64* %9, align 8
  %2007 = trunc i64 %2006 to i32
  %2008 = getelementptr inbounds %"class.v8::internal::wasm::AsmJsParser", %"class.v8::internal::wasm::AsmJsParser"* %0, i64 0, i32 19
  store i32 %2007, i32* %2008, align 8
  br label %2416

2009:                                             ; preds = %2002
  %2010 = getelementptr inbounds %"struct.v8::internal::wasm::AsmJsParser::VarInfo", %"struct.v8::internal::wasm::AsmJsParser::VarInfo"* %1434, i64 %1386, i32 2
  %2011 = load %"struct.v8::internal::wasm::AsmJsParser::FunctionImportInfo"*, %"struct.v8::internal::wasm::AsmJsParser::FunctionImportInfo"** %2010, align 8
  %2012 = getelementptr inbounds %"struct.v8::internal::wasm::AsmJsParser::FunctionImportInfo", %"struct.v8::internal::wasm::AsmJsParser::FunctionImportInfo"* %2011, i64 0, i32 1, i32 0, i32 0
  %2013 = tail call %"struct.std::__1::__hash_node_base.141"* @_ZNSt3__112__hash_tableINS_17__hash_value_typeIN2v88internal9SignatureINS3_4wasm9ValueTypeEEEjEENS_22__unordered_map_hasherIS7_S8_NS2_4base4hashIS7_EENS_8equal_toIS7_EELb1EEENS_21__unordered_map_equalIS7_S8_SE_SC_Lb1EEENS3_13ZoneAllocatorIS8_EEE4findIS7_EENS_15__hash_iteratorIPNS_11__hash_nodeIS8_PvEEEERKT_(%"class.std::__1::__hash_table.137"* %2012, %"class.v8::internal::Signature"* dereferenceable(24) %1740) #12
  %2014 = load %"struct.v8::internal::wasm::AsmJsParser::FunctionImportInfo"*, %"struct.v8::internal::wasm::AsmJsParser::FunctionImportInfo"** %2010, align 8
  %2015 = icmp eq %"struct.std::__1::__hash_node_base.141"* %2013, null
  br i1 %2015, label %2020, label %2016

2016:                                             ; preds = %2009
  %2017 = getelementptr inbounds %"struct.std::__1::__hash_node_base.141", %"struct.std::__1::__hash_node_base.141"* %2013, i64 5
  %2018 = bitcast %"struct.std::__1::__hash_node_base.141"* %2017 to i32*
  %2019 = load i32, i32* %2018, align 8
  br label %2037

2020:                                             ; preds = %2009
  %2021 = load %"class.v8::internal::wasm::WasmModuleBuilder"*, %"class.v8::internal::wasm::WasmModuleBuilder"** %1741, align 8
  %2022 = getelementptr inbounds %"struct.v8::internal::wasm::AsmJsParser::FunctionImportInfo", %"struct.v8::internal::wasm::AsmJsParser::FunctionImportInfo"* %2014, i64 0, i32 0, i32 0
  %2023 = load i8*, i8** %2022, align 8
  %2024 = getelementptr inbounds %"struct.v8::internal::wasm::AsmJsParser::FunctionImportInfo", %"struct.v8::internal::wasm::AsmJsParser::FunctionImportInfo"* %2014, i64 0, i32 0, i32 1
  %2025 = load i64, i64* %2024, align 8
  %2026 = tail call i32 @_ZN2v88internal4wasm17WasmModuleBuilder9AddImportENS0_6VectorIKcEEPNS0_9SignatureINS1_9ValueTypeEEES5_(%"class.v8::internal::wasm::WasmModuleBuilder"* %2021, i8* %2023, i64 %2025, %"class.v8::internal::Signature"* %1740, i8* null, i64 0) #12
  %2027 = load %"struct.v8::internal::wasm::AsmJsParser::FunctionImportInfo"*, %"struct.v8::internal::wasm::AsmJsParser::FunctionImportInfo"** %2010, align 8
  %2028 = getelementptr inbounds %"struct.v8::internal::wasm::AsmJsParser::FunctionImportInfo", %"struct.v8::internal::wasm::AsmJsParser::FunctionImportInfo"* %2027, i64 0, i32 1, i32 0, i32 0
  %2029 = bitcast %"class.std::__1::tuple"* %2 to i8*
  call void @llvm.lifetime.start.p0i8(i64 8, i8* nonnull %2029) #12
  %2030 = getelementptr inbounds %"class.std::__1::tuple", %"class.std::__1::tuple"* %2, i64 0, i32 0, i32 0, i32 0
  store %"class.v8::internal::Signature"* %1740, %"class.v8::internal::Signature"** %2030, align 8
  %2031 = getelementptr inbounds %"class.std::__1::tuple.247", %"class.std::__1::tuple.247"* %3, i64 0, i32 0
  call void @llvm.lifetime.start.p0i8(i64 1, i8* nonnull %2031) #12
  %2032 = call { %"struct.std::__1::__hash_node_base.141"*, i8 } @_ZNSt3__112__hash_tableINS_17__hash_value_typeIN2v88internal9SignatureINS3_4wasm9ValueTypeEEEjEENS_22__unordered_map_hasherIS7_S8_NS2_4base4hashIS7_EENS_8equal_toIS7_EELb1EEENS_21__unordered_map_equalIS7_S8_SE_SC_Lb1EEENS3_13ZoneAllocatorIS8_EEE25__emplace_unique_key_argsIS7_JRKNS_21piecewise_construct_tENS_5tupleIJRKS7_EEENSP_IJEEEEEENS_4pairINS_15__hash_iteratorIPNS_11__hash_nodeIS8_PvEEEEbEERKT_DpOT0_(%"class.std::__1::__hash_table.137"* %2028, %"class.v8::internal::Signature"* dereferenceable(24) %1740, %"struct.std::__1::piecewise_construct_t"* nonnull dereferenceable(1) @_ZNSt3__1L19piecewise_constructE, %"class.std::__1::tuple"* nonnull dereferenceable(8) %2, %"class.std::__1::tuple.247"* nonnull dereferenceable(1) %3) #12
  %2033 = extractvalue { %"struct.std::__1::__hash_node_base.141"*, i8 } %2032, 0
  %2034 = getelementptr inbounds %"struct.std::__1::__hash_node_base.141", %"struct.std::__1::__hash_node_base.141"* %2033, i64 5
  %2035 = bitcast %"struct.std::__1::__hash_node_base.141"* %2034 to i32*
  call void @llvm.lifetime.end.p0i8(i64 1, i8* nonnull %2031) #12
  call void @llvm.lifetime.end.p0i8(i64 8, i8* nonnull %2029) #12
  store i32 %2026, i32* %2035, align 4
  %2036 = getelementptr inbounds %"struct.v8::internal::wasm::AsmJsParser::VarInfo", %"struct.v8::internal::wasm::AsmJsParser::VarInfo"* %1434, i64 %1386, i32 7
  store i8 1, i8* %2036, align 1
  br label %2037

2037:                                             ; preds = %2020, %2016
  %2038 = phi i32 [ %2019, %2016 ], [ %2026, %2020 ]
  %2039 = getelementptr inbounds %"class.v8::internal::wasm::AsmJsParser", %"class.v8::internal::wasm::AsmJsParser"* %0, i64 0, i32 3
  %2040 = load %"class.v8::internal::wasm::WasmFunctionBuilder"*, %"class.v8::internal::wasm::WasmFunctionBuilder"** %2039, align 8
  call void @_ZN2v88internal4wasm19WasmFunctionBuilder16AddAsmWasmOffsetEmm(%"class.v8::internal::wasm::WasmFunctionBuilder"* %2040, i64 %290, i64 %1454) #12
  %2041 = load %"class.v8::internal::wasm::WasmFunctionBuilder"*, %"class.v8::internal::wasm::WasmFunctionBuilder"** %2039, align 8
  call void @_ZN2v88internal4wasm19WasmFunctionBuilder12EmitWithU32VENS1_10WasmOpcodeEj(%"class.v8::internal::wasm::WasmFunctionBuilder"* %2041, i32 16, i32 %2038) #12
  br label %2416

2042:                                             ; preds = %1738
  %2043 = icmp sgt i32 %1745, 6
  %2044 = getelementptr inbounds %"struct.v8::internal::wasm::AsmJsParser::VarInfo", %"struct.v8::internal::wasm::AsmJsParser::VarInfo"* %1434, i64 %1386, i32 0
  %2045 = load %"class.v8::internal::wasm::AsmType"*, %"class.v8::internal::wasm::AsmType"** %2044, align 8
  br i1 %2043, label %2046, label %2373

2046:                                             ; preds = %2042
  %2047 = tail call %"class.v8::internal::wasm::AsmCallableType"* @_ZN2v88internal4wasm7AsmType14AsCallableTypeEv(%"class.v8::internal::wasm::AsmType"* %2045) #12
  %2048 = icmp eq %"class.v8::internal::wasm::AsmCallableType"* %2047, null
  br i1 %2048, label %2049, label %2054

2049:                                             ; preds = %2046
  store i8 1, i8* %381, align 4
  %2050 = getelementptr inbounds %"class.v8::internal::wasm::AsmJsParser", %"class.v8::internal::wasm::AsmJsParser"* %0, i64 0, i32 18
  store i8* getelementptr inbounds ([27 x i8], [27 x i8]* @.str.102, i64 0, i64 0), i8** %2050, align 8
  %2051 = load i64, i64* %9, align 8
  %2052 = trunc i64 %2051 to i32
  %2053 = getelementptr inbounds %"class.v8::internal::wasm::AsmJsParser", %"class.v8::internal::wasm::AsmJsParser"* %0, i64 0, i32 19
  store i32 %2052, i32* %2053, align 8
  br label %2416

2054:                                             ; preds = %2046
  %2055 = getelementptr inbounds %"class.v8::internal::wasm::AsmJsParser::CachedVector", %"class.v8::internal::wasm::AsmJsParser::CachedVector"* %5, i64 0, i32 0
  %2056 = bitcast %"class.v8::internal::wasm::AsmCallableType"* %2047 to i1 (%"class.v8::internal::wasm::AsmCallableType"*, %"class.v8::internal::wasm::AsmType"*, %"class.v8::internal::ZoneVector.179"*)***
  %2057 = load i1 (%"class.v8::internal::wasm::AsmCallableType"*, %"class.v8::internal::wasm::AsmType"*, %"class.v8::internal::ZoneVector.179"*)**, i1 (%"class.v8::internal::wasm::AsmCallableType"*, %"class.v8::internal::wasm::AsmType"*, %"class.v8::internal::ZoneVector.179"*)*** %2056, align 8
  %2058 = getelementptr inbounds i1 (%"class.v8::internal::wasm::AsmCallableType"*, %"class.v8::internal::wasm::AsmType"*, %"class.v8::internal::ZoneVector.179"*)*, i1 (%"class.v8::internal::wasm::AsmCallableType"*, %"class.v8::internal::wasm::AsmType"*, %"class.v8::internal::ZoneVector.179"*)** %2057, i64 1
  %2059 = load i1 (%"class.v8::internal::wasm::AsmCallableType"*, %"class.v8::internal::wasm::AsmType"*, %"class.v8::internal::ZoneVector.179"*)*, i1 (%"class.v8::internal::wasm::AsmCallableType"*, %"class.v8::internal::wasm::AsmType"*, %"class.v8::internal::ZoneVector.179"*)** %2058, align 8
  %2060 = call zeroext i1 %2059(%"class.v8::internal::wasm::AsmCallableType"* nonnull %2047, %"class.v8::internal::wasm::AsmType"* %1455, %"class.v8::internal::ZoneVector.179"* nonnull dereferenceable(32) %2055) #12
  br i1 %2060, label %2091, label %2061

2061:                                             ; preds = %2054
  %2062 = load i1 (%"class.v8::internal::wasm::AsmCallableType"*, %"class.v8::internal::wasm::AsmType"*, %"class.v8::internal::ZoneVector.179"*)**, i1 (%"class.v8::internal::wasm::AsmCallableType"*, %"class.v8::internal::wasm::AsmType"*, %"class.v8::internal::ZoneVector.179"*)*** %2056, align 8
  %2063 = getelementptr inbounds i1 (%"class.v8::internal::wasm::AsmCallableType"*, %"class.v8::internal::wasm::AsmType"*, %"class.v8::internal::ZoneVector.179"*)*, i1 (%"class.v8::internal::wasm::AsmCallableType"*, %"class.v8::internal::wasm::AsmType"*, %"class.v8::internal::ZoneVector.179"*)** %2062, i64 1
  %2064 = load i1 (%"class.v8::internal::wasm::AsmCallableType"*, %"class.v8::internal::wasm::AsmType"*, %"class.v8::internal::ZoneVector.179"*)*, i1 (%"class.v8::internal::wasm::AsmCallableType"*, %"class.v8::internal::wasm::AsmType"*, %"class.v8::internal::ZoneVector.179"*)** %2063, align 8
  %2065 = call zeroext i1 %2064(%"class.v8::internal::wasm::AsmCallableType"* nonnull %2047, %"class.v8::internal::wasm::AsmType"* nonnull inttoptr (i64 57357 to %"class.v8::internal::wasm::AsmType"*), %"class.v8::internal::ZoneVector.179"* nonnull dereferenceable(32) %2055) #12
  br i1 %2065, label %2091, label %2066

2066:                                             ; preds = %2061
  %2067 = load i1 (%"class.v8::internal::wasm::AsmCallableType"*, %"class.v8::internal::wasm::AsmType"*, %"class.v8::internal::ZoneVector.179"*)**, i1 (%"class.v8::internal::wasm::AsmCallableType"*, %"class.v8::internal::wasm::AsmType"*, %"class.v8::internal::ZoneVector.179"*)*** %2056, align 8
  %2068 = getelementptr inbounds i1 (%"class.v8::internal::wasm::AsmCallableType"*, %"class.v8::internal::wasm::AsmType"*, %"class.v8::internal::ZoneVector.179"*)*, i1 (%"class.v8::internal::wasm::AsmCallableType"*, %"class.v8::internal::wasm::AsmType"*, %"class.v8::internal::ZoneVector.179"*)** %2067, i64 1
  %2069 = load i1 (%"class.v8::internal::wasm::AsmCallableType"*, %"class.v8::internal::wasm::AsmType"*, %"class.v8::internal::ZoneVector.179"*)*, i1 (%"class.v8::internal::wasm::AsmCallableType"*, %"class.v8::internal::wasm::AsmType"*, %"class.v8::internal::ZoneVector.179"*)** %2068, align 8
  %2070 = call zeroext i1 %2069(%"class.v8::internal::wasm::AsmCallableType"* nonnull %2047, %"class.v8::internal::wasm::AsmType"* nonnull inttoptr (i64 8197 to %"class.v8::internal::wasm::AsmType"*), %"class.v8::internal::ZoneVector.179"* nonnull dereferenceable(32) %2055) #12
  br i1 %2070, label %2091, label %2071

2071:                                             ; preds = %2066
  %2072 = load i1 (%"class.v8::internal::wasm::AsmCallableType"*, %"class.v8::internal::wasm::AsmType"*, %"class.v8::internal::ZoneVector.179"*)**, i1 (%"class.v8::internal::wasm::AsmCallableType"*, %"class.v8::internal::wasm::AsmType"*, %"class.v8::internal::ZoneVector.179"*)*** %2056, align 8
  %2073 = getelementptr inbounds i1 (%"class.v8::internal::wasm::AsmCallableType"*, %"class.v8::internal::wasm::AsmType"*, %"class.v8::internal::ZoneVector.179"*)*, i1 (%"class.v8::internal::wasm::AsmCallableType"*, %"class.v8::internal::wasm::AsmType"*, %"class.v8::internal::ZoneVector.179"*)** %2072, i64 1
  %2074 = load i1 (%"class.v8::internal::wasm::AsmCallableType"*, %"class.v8::internal::wasm::AsmType"*, %"class.v8::internal::ZoneVector.179"*)*, i1 (%"class.v8::internal::wasm::AsmCallableType"*, %"class.v8::internal::wasm::AsmType"*, %"class.v8::internal::ZoneVector.179"*)** %2073, align 8
  %2075 = call zeroext i1 %2074(%"class.v8::internal::wasm::AsmCallableType"* nonnull %2047, %"class.v8::internal::wasm::AsmType"* nonnull inttoptr (i64 237 to %"class.v8::internal::wasm::AsmType"*), %"class.v8::internal::ZoneVector.179"* nonnull dereferenceable(32) %2055) #12
  br i1 %2075, label %2091, label %2076

2076:                                             ; preds = %2071
  %2077 = load i1 (%"class.v8::internal::wasm::AsmCallableType"*, %"class.v8::internal::wasm::AsmType"*, %"class.v8::internal::ZoneVector.179"*)**, i1 (%"class.v8::internal::wasm::AsmCallableType"*, %"class.v8::internal::wasm::AsmType"*, %"class.v8::internal::ZoneVector.179"*)*** %2056, align 8
  %2078 = getelementptr inbounds i1 (%"class.v8::internal::wasm::AsmCallableType"*, %"class.v8::internal::wasm::AsmType"*, %"class.v8::internal::ZoneVector.179"*)*, i1 (%"class.v8::internal::wasm::AsmCallableType"*, %"class.v8::internal::wasm::AsmType"*, %"class.v8::internal::ZoneVector.179"*)** %2077, i64 1
  %2079 = load i1 (%"class.v8::internal::wasm::AsmCallableType"*, %"class.v8::internal::wasm::AsmType"*, %"class.v8::internal::ZoneVector.179"*)*, i1 (%"class.v8::internal::wasm::AsmCallableType"*, %"class.v8::internal::wasm::AsmType"*, %"class.v8::internal::ZoneVector.179"*)** %2078, align 8
  %2080 = call zeroext i1 %2079(%"class.v8::internal::wasm::AsmCallableType"* nonnull %2047, %"class.v8::internal::wasm::AsmType"* nonnull inttoptr (i64 1825 to %"class.v8::internal::wasm::AsmType"*), %"class.v8::internal::ZoneVector.179"* nonnull dereferenceable(32) %2055) #12
  br i1 %2080, label %2091, label %2081

2081:                                             ; preds = %2076
  %2082 = load i1 (%"class.v8::internal::wasm::AsmCallableType"*, %"class.v8::internal::wasm::AsmType"*, %"class.v8::internal::ZoneVector.179"*)**, i1 (%"class.v8::internal::wasm::AsmCallableType"*, %"class.v8::internal::wasm::AsmType"*, %"class.v8::internal::ZoneVector.179"*)*** %2056, align 8
  %2083 = getelementptr inbounds i1 (%"class.v8::internal::wasm::AsmCallableType"*, %"class.v8::internal::wasm::AsmType"*, %"class.v8::internal::ZoneVector.179"*)*, i1 (%"class.v8::internal::wasm::AsmCallableType"*, %"class.v8::internal::wasm::AsmType"*, %"class.v8::internal::ZoneVector.179"*)** %2082, i64 1
  %2084 = load i1 (%"class.v8::internal::wasm::AsmCallableType"*, %"class.v8::internal::wasm::AsmType"*, %"class.v8::internal::ZoneVector.179"*)*, i1 (%"class.v8::internal::wasm::AsmCallableType"*, %"class.v8::internal::wasm::AsmType"*, %"class.v8::internal::ZoneVector.179"*)** %2083, align 8
  %2085 = call zeroext i1 %2084(%"class.v8::internal::wasm::AsmCallableType"* nonnull %2047, %"class.v8::internal::wasm::AsmType"* nonnull inttoptr (i64 2817 to %"class.v8::internal::wasm::AsmType"*), %"class.v8::internal::ZoneVector.179"* nonnull dereferenceable(32) %2055) #12
  br i1 %2085, label %2091, label %2086

2086:                                             ; preds = %2081
  store i8 1, i8* %381, align 4
  %2087 = getelementptr inbounds %"class.v8::internal::wasm::AsmJsParser", %"class.v8::internal::wasm::AsmJsParser"* %0, i64 0, i32 18
  store i8* getelementptr inbounds ([38 x i8], [38 x i8]* @.str.103, i64 0, i64 0), i8** %2087, align 8
  %2088 = load i64, i64* %9, align 8
  %2089 = trunc i64 %2088 to i32
  %2090 = getelementptr inbounds %"class.v8::internal::wasm::AsmJsParser", %"class.v8::internal::wasm::AsmJsParser"* %0, i64 0, i32 19
  store i32 %2089, i32* %2090, align 8
  br label %2416

2091:                                             ; preds = %2081, %2076, %2071, %2066, %2061, %2054
  %2092 = phi %"class.v8::internal::wasm::AsmType"* [ %1455, %2054 ], [ inttoptr (i64 57357 to %"class.v8::internal::wasm::AsmType"*), %2061 ], [ inttoptr (i64 8197 to %"class.v8::internal::wasm::AsmType"*), %2066 ], [ inttoptr (i64 237 to %"class.v8::internal::wasm::AsmType"*), %2071 ], [ inttoptr (i64 1825 to %"class.v8::internal::wasm::AsmType"*), %2076 ], [ inttoptr (i64 2817 to %"class.v8::internal::wasm::AsmType"*), %2081 ]
  %2093 = load i32, i32* %1744, align 8
  switch i32 %2093, label %2372 [
    i32 11, label %2094
    i32 12, label %2097
    i32 13, label %2100
    i32 14, label %2103
    i32 15, label %2106
    i32 16, label %2109
    i32 17, label %2112
    i32 18, label %2115
    i32 19, label %2118
    i32 20, label %2121
    i32 21, label %2124
    i32 22, label %2127
    i32 23, label %2130
    i32 24, label %2146
    i32 25, label %2162
    i32 7, label %2178
    i32 8, label %2178
    i32 9, label %2310
    i32 10, label %2371
  ]

2094:                                             ; preds = %2091
  %2095 = getelementptr inbounds %"class.v8::internal::wasm::AsmJsParser", %"class.v8::internal::wasm::AsmJsParser"* %0, i64 0, i32 3
  %2096 = load %"class.v8::internal::wasm::WasmFunctionBuilder"*, %"class.v8::internal::wasm::WasmFunctionBuilder"** %2095, align 8
  call void @_ZN2v88internal4wasm19WasmFunctionBuilder4EmitENS1_10WasmOpcodeE(%"class.v8::internal::wasm::WasmFunctionBuilder"* %2096, i32 220) #12
  br label %2416

2097:                                             ; preds = %2091
  %2098 = getelementptr inbounds %"class.v8::internal::wasm::AsmJsParser", %"class.v8::internal::wasm::AsmJsParser"* %0, i64 0, i32 3
  %2099 = load %"class.v8::internal::wasm::WasmFunctionBuilder"*, %"class.v8::internal::wasm::WasmFunctionBuilder"** %2098, align 8
  call void @_ZN2v88internal4wasm19WasmFunctionBuilder4EmitENS1_10WasmOpcodeE(%"class.v8::internal::wasm::WasmFunctionBuilder"* %2099, i32 221) #12
  br label %2416

2100:                                             ; preds = %2091
  %2101 = getelementptr inbounds %"class.v8::internal::wasm::AsmJsParser", %"class.v8::internal::wasm::AsmJsParser"* %0, i64 0, i32 3
  %2102 = load %"class.v8::internal::wasm::WasmFunctionBuilder"*, %"class.v8::internal::wasm::WasmFunctionBuilder"** %2101, align 8
  call void @_ZN2v88internal4wasm19WasmFunctionBuilder4EmitENS1_10WasmOpcodeE(%"class.v8::internal::wasm::WasmFunctionBuilder"* %2102, i32 222) #12
  br label %2416

2103:                                             ; preds = %2091
  %2104 = getelementptr inbounds %"class.v8::internal::wasm::AsmJsParser", %"class.v8::internal::wasm::AsmJsParser"* %0, i64 0, i32 3
  %2105 = load %"class.v8::internal::wasm::WasmFunctionBuilder"*, %"class.v8::internal::wasm::WasmFunctionBuilder"** %2104, align 8
  call void @_ZN2v88internal4wasm19WasmFunctionBuilder4EmitENS1_10WasmOpcodeE(%"class.v8::internal::wasm::WasmFunctionBuilder"* %2105, i32 223) #12
  br label %2416

2106:                                             ; preds = %2091
  %2107 = getelementptr inbounds %"class.v8::internal::wasm::AsmJsParser", %"class.v8::internal::wasm::AsmJsParser"* %0, i64 0, i32 3
  %2108 = load %"class.v8::internal::wasm::WasmFunctionBuilder"*, %"class.v8::internal::wasm::WasmFunctionBuilder"** %2107, align 8
  call void @_ZN2v88internal4wasm19WasmFunctionBuilder4EmitENS1_10WasmOpcodeE(%"class.v8::internal::wasm::WasmFunctionBuilder"* %2108, i32 224) #12
  br label %2416

2109:                                             ; preds = %2091
  %2110 = getelementptr inbounds %"class.v8::internal::wasm::AsmJsParser", %"class.v8::internal::wasm::AsmJsParser"* %0, i64 0, i32 3
  %2111 = load %"class.v8::internal::wasm::WasmFunctionBuilder"*, %"class.v8::internal::wasm::WasmFunctionBuilder"** %2110, align 8
  call void @_ZN2v88internal4wasm19WasmFunctionBuilder4EmitENS1_10WasmOpcodeE(%"class.v8::internal::wasm::WasmFunctionBuilder"* %2111, i32 225) #12
  br label %2416

2112:                                             ; preds = %2091
  %2113 = getelementptr inbounds %"class.v8::internal::wasm::AsmJsParser", %"class.v8::internal::wasm::AsmJsParser"* %0, i64 0, i32 3
  %2114 = load %"class.v8::internal::wasm::WasmFunctionBuilder"*, %"class.v8::internal::wasm::WasmFunctionBuilder"** %2113, align 8
  call void @_ZN2v88internal4wasm19WasmFunctionBuilder4EmitENS1_10WasmOpcodeE(%"class.v8::internal::wasm::WasmFunctionBuilder"* %2114, i32 226) #12
  br label %2416

2115:                                             ; preds = %2091
  %2116 = getelementptr inbounds %"class.v8::internal::wasm::AsmJsParser", %"class.v8::internal::wasm::AsmJsParser"* %0, i64 0, i32 3
  %2117 = load %"class.v8::internal::wasm::WasmFunctionBuilder"*, %"class.v8::internal::wasm::WasmFunctionBuilder"** %2116, align 8
  call void @_ZN2v88internal4wasm19WasmFunctionBuilder4EmitENS1_10WasmOpcodeE(%"class.v8::internal::wasm::WasmFunctionBuilder"* %2117, i32 227) #12
  br label %2416

2118:                                             ; preds = %2091
  %2119 = getelementptr inbounds %"class.v8::internal::wasm::AsmJsParser", %"class.v8::internal::wasm::AsmJsParser"* %0, i64 0, i32 3
  %2120 = load %"class.v8::internal::wasm::WasmFunctionBuilder"*, %"class.v8::internal::wasm::WasmFunctionBuilder"** %2119, align 8
  call void @_ZN2v88internal4wasm19WasmFunctionBuilder4EmitENS1_10WasmOpcodeE(%"class.v8::internal::wasm::WasmFunctionBuilder"* %2120, i32 228) #12
  br label %2416

2121:                                             ; preds = %2091
  %2122 = getelementptr inbounds %"class.v8::internal::wasm::AsmJsParser", %"class.v8::internal::wasm::AsmJsParser"* %0, i64 0, i32 3
  %2123 = load %"class.v8::internal::wasm::WasmFunctionBuilder"*, %"class.v8::internal::wasm::WasmFunctionBuilder"** %2122, align 8
  call void @_ZN2v88internal4wasm19WasmFunctionBuilder4EmitENS1_10WasmOpcodeE(%"class.v8::internal::wasm::WasmFunctionBuilder"* %2123, i32 229) #12
  br label %2416

2124:                                             ; preds = %2091
  %2125 = getelementptr inbounds %"class.v8::internal::wasm::AsmJsParser", %"class.v8::internal::wasm::AsmJsParser"* %0, i64 0, i32 3
  %2126 = load %"class.v8::internal::wasm::WasmFunctionBuilder"*, %"class.v8::internal::wasm::WasmFunctionBuilder"** %2125, align 8
  call void @_ZN2v88internal4wasm19WasmFunctionBuilder4EmitENS1_10WasmOpcodeE(%"class.v8::internal::wasm::WasmFunctionBuilder"* %2126, i32 108) #12
  br label %2416

2127:                                             ; preds = %2091
  %2128 = getelementptr inbounds %"class.v8::internal::wasm::AsmJsParser", %"class.v8::internal::wasm::AsmJsParser"* %0, i64 0, i32 3
  %2129 = load %"class.v8::internal::wasm::WasmFunctionBuilder"*, %"class.v8::internal::wasm::WasmFunctionBuilder"** %2128, align 8
  call void @_ZN2v88internal4wasm19WasmFunctionBuilder4EmitENS1_10WasmOpcodeE(%"class.v8::internal::wasm::WasmFunctionBuilder"* %2129, i32 103) #12
  br label %2416

2130:                                             ; preds = %2091
  %2131 = getelementptr inbounds %"class.v8::internal::wasm::AsmJsParser::CachedVector", %"class.v8::internal::wasm::AsmJsParser::CachedVector"* %5, i64 0, i32 0, i32 0, i32 0, i32 0
  %2132 = load %"class.v8::internal::wasm::AsmType"**, %"class.v8::internal::wasm::AsmType"*** %2131, align 8
  %2133 = load %"class.v8::internal::wasm::AsmType"*, %"class.v8::internal::wasm::AsmType"** %2132, align 8
  %2134 = call zeroext i1 @_ZN2v88internal4wasm7AsmType3IsAEPS2_(%"class.v8::internal::wasm::AsmType"* %2133, %"class.v8::internal::wasm::AsmType"* nonnull inttoptr (i64 77 to %"class.v8::internal::wasm::AsmType"*)) #12
  br i1 %2134, label %2135, label %2138

2135:                                             ; preds = %2130
  %2136 = getelementptr inbounds %"class.v8::internal::wasm::AsmJsParser", %"class.v8::internal::wasm::AsmJsParser"* %0, i64 0, i32 3
  %2137 = load %"class.v8::internal::wasm::WasmFunctionBuilder"*, %"class.v8::internal::wasm::WasmFunctionBuilder"** %2136, align 8
  call void @_ZN2v88internal4wasm19WasmFunctionBuilder4EmitENS1_10WasmOpcodeE(%"class.v8::internal::wasm::WasmFunctionBuilder"* %2137, i32 155) #12
  br label %2416

2138:                                             ; preds = %2130
  %2139 = load %"class.v8::internal::wasm::AsmType"**, %"class.v8::internal::wasm::AsmType"*** %2131, align 8
  %2140 = load %"class.v8::internal::wasm::AsmType"*, %"class.v8::internal::wasm::AsmType"** %2139, align 8
  %2141 = call zeroext i1 @_ZN2v88internal4wasm7AsmType3IsAEPS2_(%"class.v8::internal::wasm::AsmType"* %2140, %"class.v8::internal::wasm::AsmType"* nonnull inttoptr (i64 24589 to %"class.v8::internal::wasm::AsmType"*)) #12
  br i1 %2141, label %2142, label %2145

2142:                                             ; preds = %2138
  %2143 = getelementptr inbounds %"class.v8::internal::wasm::AsmJsParser", %"class.v8::internal::wasm::AsmJsParser"* %0, i64 0, i32 3
  %2144 = load %"class.v8::internal::wasm::WasmFunctionBuilder"*, %"class.v8::internal::wasm::WasmFunctionBuilder"** %2143, align 8
  call void @_ZN2v88internal4wasm19WasmFunctionBuilder4EmitENS1_10WasmOpcodeE(%"class.v8::internal::wasm::WasmFunctionBuilder"* %2144, i32 141) #12
  br label %2416

2145:                                             ; preds = %2138
  call void (i8*, ...) @_Z8V8_FatalPKcz(i8* getelementptr inbounds ([17 x i8], [17 x i8]* @.str, i64 0, i64 0)) #13
  unreachable

2146:                                             ; preds = %2091
  %2147 = getelementptr inbounds %"class.v8::internal::wasm::AsmJsParser::CachedVector", %"class.v8::internal::wasm::AsmJsParser::CachedVector"* %5, i64 0, i32 0, i32 0, i32 0, i32 0
  %2148 = load %"class.v8::internal::wasm::AsmType"**, %"class.v8::internal::wasm::AsmType"*** %2147, align 8
  %2149 = load %"class.v8::internal::wasm::AsmType"*, %"class.v8::internal::wasm::AsmType"** %2148, align 8
  %2150 = call zeroext i1 @_ZN2v88internal4wasm7AsmType3IsAEPS2_(%"class.v8::internal::wasm::AsmType"* %2149, %"class.v8::internal::wasm::AsmType"* nonnull inttoptr (i64 77 to %"class.v8::internal::wasm::AsmType"*)) #12
  br i1 %2150, label %2151, label %2154

2151:                                             ; preds = %2146
  %2152 = getelementptr inbounds %"class.v8::internal::wasm::AsmJsParser", %"class.v8::internal::wasm::AsmJsParser"* %0, i64 0, i32 3
  %2153 = load %"class.v8::internal::wasm::WasmFunctionBuilder"*, %"class.v8::internal::wasm::WasmFunctionBuilder"** %2152, align 8
  call void @_ZN2v88internal4wasm19WasmFunctionBuilder4EmitENS1_10WasmOpcodeE(%"class.v8::internal::wasm::WasmFunctionBuilder"* %2153, i32 156) #12
  br label %2416

2154:                                             ; preds = %2146
  %2155 = load %"class.v8::internal::wasm::AsmType"**, %"class.v8::internal::wasm::AsmType"*** %2147, align 8
  %2156 = load %"class.v8::internal::wasm::AsmType"*, %"class.v8::internal::wasm::AsmType"** %2155, align 8
  %2157 = call zeroext i1 @_ZN2v88internal4wasm7AsmType3IsAEPS2_(%"class.v8::internal::wasm::AsmType"* %2156, %"class.v8::internal::wasm::AsmType"* nonnull inttoptr (i64 24589 to %"class.v8::internal::wasm::AsmType"*)) #12
  br i1 %2157, label %2158, label %2161

2158:                                             ; preds = %2154
  %2159 = getelementptr inbounds %"class.v8::internal::wasm::AsmJsParser", %"class.v8::internal::wasm::AsmJsParser"* %0, i64 0, i32 3
  %2160 = load %"class.v8::internal::wasm::WasmFunctionBuilder"*, %"class.v8::internal::wasm::WasmFunctionBuilder"** %2159, align 8
  call void @_ZN2v88internal4wasm19WasmFunctionBuilder4EmitENS1_10WasmOpcodeE(%"class.v8::internal::wasm::WasmFunctionBuilder"* %2160, i32 142) #12
  br label %2416

2161:                                             ; preds = %2154
  call void (i8*, ...) @_Z8V8_FatalPKcz(i8* getelementptr inbounds ([17 x i8], [17 x i8]* @.str, i64 0, i64 0)) #13
  unreachable

2162:                                             ; preds = %2091
  %2163 = getelementptr inbounds %"class.v8::internal::wasm::AsmJsParser::CachedVector", %"class.v8::internal::wasm::AsmJsParser::CachedVector"* %5, i64 0, i32 0, i32 0, i32 0, i32 0
  %2164 = load %"class.v8::internal::wasm::AsmType"**, %"class.v8::internal::wasm::AsmType"*** %2163, align 8
  %2165 = load %"class.v8::internal::wasm::AsmType"*, %"class.v8::internal::wasm::AsmType"** %2164, align 8
  %2166 = call zeroext i1 @_ZN2v88internal4wasm7AsmType3IsAEPS2_(%"class.v8::internal::wasm::AsmType"* %2165, %"class.v8::internal::wasm::AsmType"* nonnull inttoptr (i64 77 to %"class.v8::internal::wasm::AsmType"*)) #12
  br i1 %2166, label %2167, label %2170

2167:                                             ; preds = %2162
  %2168 = getelementptr inbounds %"class.v8::internal::wasm::AsmJsParser", %"class.v8::internal::wasm::AsmJsParser"* %0, i64 0, i32 3
  %2169 = load %"class.v8::internal::wasm::WasmFunctionBuilder"*, %"class.v8::internal::wasm::WasmFunctionBuilder"** %2168, align 8
  call void @_ZN2v88internal4wasm19WasmFunctionBuilder4EmitENS1_10WasmOpcodeE(%"class.v8::internal::wasm::WasmFunctionBuilder"* %2169, i32 159) #12
  br label %2416

2170:                                             ; preds = %2162
  %2171 = load %"class.v8::internal::wasm::AsmType"**, %"class.v8::internal::wasm::AsmType"*** %2163, align 8
  %2172 = load %"class.v8::internal::wasm::AsmType"*, %"class.v8::internal::wasm::AsmType"** %2171, align 8
  %2173 = call zeroext i1 @_ZN2v88internal4wasm7AsmType3IsAEPS2_(%"class.v8::internal::wasm::AsmType"* %2172, %"class.v8::internal::wasm::AsmType"* nonnull inttoptr (i64 24589 to %"class.v8::internal::wasm::AsmType"*)) #12
  br i1 %2173, label %2174, label %2177

2174:                                             ; preds = %2170
  %2175 = getelementptr inbounds %"class.v8::internal::wasm::AsmJsParser", %"class.v8::internal::wasm::AsmJsParser"* %0, i64 0, i32 3
  %2176 = load %"class.v8::internal::wasm::WasmFunctionBuilder"*, %"class.v8::internal::wasm::WasmFunctionBuilder"** %2175, align 8
  call void @_ZN2v88internal4wasm19WasmFunctionBuilder4EmitENS1_10WasmOpcodeE(%"class.v8::internal::wasm::WasmFunctionBuilder"* %2176, i32 145) #12
  br label %2416

2177:                                             ; preds = %2170
  call void (i8*, ...) @_Z8V8_FatalPKcz(i8* getelementptr inbounds ([17 x i8], [17 x i8]* @.str, i64 0, i64 0)) #13
  unreachable

2178:                                             ; preds = %2091, %2091
  %2179 = getelementptr inbounds %"class.v8::internal::wasm::AsmJsParser::CachedVector", %"class.v8::internal::wasm::AsmJsParser::CachedVector"* %5, i64 0, i32 0, i32 0, i32 0, i32 0
  %2180 = load %"class.v8::internal::wasm::AsmType"**, %"class.v8::internal::wasm::AsmType"*** %2179, align 8
  %2181 = load %"class.v8::internal::wasm::AsmType"*, %"class.v8::internal::wasm::AsmType"** %2180, align 8
  %2182 = call zeroext i1 @_ZN2v88internal4wasm7AsmType3IsAEPS2_(%"class.v8::internal::wasm::AsmType"* %2181, %"class.v8::internal::wasm::AsmType"* nonnull inttoptr (i64 237 to %"class.v8::internal::wasm::AsmType"*)) #12
  br i1 %2182, label %2183, label %2206

2183:                                             ; preds = %2178
  %2184 = getelementptr inbounds %"class.v8::internal::wasm::AsmJsParser::CachedVector", %"class.v8::internal::wasm::AsmJsParser::CachedVector"* %5, i64 0, i32 0, i32 0, i32 0, i32 1
  %2185 = bitcast %"class.v8::internal::wasm::AsmType"*** %2184 to i64*
  %2186 = load i64, i64* %2185, align 8
  %2187 = bitcast %"class.v8::internal::wasm::AsmJsParser::CachedVector"* %5 to i64*
  %2188 = load i64, i64* %2187, align 8
  %2189 = sub i64 %2186, %2188
  %2190 = ashr exact i64 %2189, 3
  %2191 = icmp ugt i64 %2190, 1
  br i1 %2191, label %2192, label %2416

2192:                                             ; preds = %2183
  %2193 = getelementptr inbounds %"class.v8::internal::wasm::AsmJsParser", %"class.v8::internal::wasm::AsmJsParser"* %0, i64 0, i32 3
  br label %2194

2194:                                             ; preds = %2192, %2194
  %2195 = phi i64 [ 1, %2192 ], [ %2200, %2194 ]
  %2196 = load i32, i32* %1744, align 8
  %2197 = icmp eq i32 %2196, 7
  %2198 = load %"class.v8::internal::wasm::WasmFunctionBuilder"*, %"class.v8::internal::wasm::WasmFunctionBuilder"** %2193, align 8
  %2199 = select i1 %2197, i32 164, i32 165
  call void @_ZN2v88internal4wasm19WasmFunctionBuilder4EmitENS1_10WasmOpcodeE(%"class.v8::internal::wasm::WasmFunctionBuilder"* %2198, i32 %2199) #12
  %2200 = add nuw i64 %2195, 1
  %2201 = load i64, i64* %2185, align 8
  %2202 = load i64, i64* %2187, align 8
  %2203 = sub i64 %2201, %2202
  %2204 = ashr exact i64 %2203, 3
  %2205 = icmp ult i64 %2200, %2204
  br i1 %2205, label %2194, label %2416

2206:                                             ; preds = %2178
  %2207 = load %"class.v8::internal::wasm::AsmType"**, %"class.v8::internal::wasm::AsmType"*** %2179, align 8
  %2208 = load %"class.v8::internal::wasm::AsmType"*, %"class.v8::internal::wasm::AsmType"** %2207, align 8
  %2209 = call zeroext i1 @_ZN2v88internal4wasm7AsmType3IsAEPS2_(%"class.v8::internal::wasm::AsmType"* %2208, %"class.v8::internal::wasm::AsmType"* nonnull inttoptr (i64 57357 to %"class.v8::internal::wasm::AsmType"*)) #12
  br i1 %2209, label %2210, label %2233

2210:                                             ; preds = %2206
  %2211 = getelementptr inbounds %"class.v8::internal::wasm::AsmJsParser::CachedVector", %"class.v8::internal::wasm::AsmJsParser::CachedVector"* %5, i64 0, i32 0, i32 0, i32 0, i32 1
  %2212 = bitcast %"class.v8::internal::wasm::AsmType"*** %2211 to i64*
  %2213 = load i64, i64* %2212, align 8
  %2214 = bitcast %"class.v8::internal::wasm::AsmJsParser::CachedVector"* %5 to i64*
  %2215 = load i64, i64* %2214, align 8
  %2216 = sub i64 %2213, %2215
  %2217 = ashr exact i64 %2216, 3
  %2218 = icmp ugt i64 %2217, 1
  br i1 %2218, label %2219, label %2416

2219:                                             ; preds = %2210
  %2220 = getelementptr inbounds %"class.v8::internal::wasm::AsmJsParser", %"class.v8::internal::wasm::AsmJsParser"* %0, i64 0, i32 3
  br label %2221

2221:                                             ; preds = %2219, %2221
  %2222 = phi i64 [ 1, %2219 ], [ %2227, %2221 ]
  %2223 = load i32, i32* %1744, align 8
  %2224 = icmp eq i32 %2223, 7
  %2225 = load %"class.v8::internal::wasm::WasmFunctionBuilder"*, %"class.v8::internal::wasm::WasmFunctionBuilder"** %2220, align 8
  %2226 = select i1 %2224, i32 150, i32 151
  call void @_ZN2v88internal4wasm19WasmFunctionBuilder4EmitENS1_10WasmOpcodeE(%"class.v8::internal::wasm::WasmFunctionBuilder"* %2225, i32 %2226) #12
  %2227 = add nuw i64 %2222, 1
  %2228 = load i64, i64* %2212, align 8
  %2229 = load i64, i64* %2214, align 8
  %2230 = sub i64 %2228, %2229
  %2231 = ashr exact i64 %2230, 3
  %2232 = icmp ult i64 %2227, %2231
  br i1 %2232, label %2221, label %2416

2233:                                             ; preds = %2206
  %2234 = load %"class.v8::internal::wasm::AsmType"**, %"class.v8::internal::wasm::AsmType"*** %2179, align 8
  %2235 = load %"class.v8::internal::wasm::AsmType"*, %"class.v8::internal::wasm::AsmType"** %2234, align 8
  %2236 = call zeroext i1 @_ZN2v88internal4wasm7AsmType3IsAEPS2_(%"class.v8::internal::wasm::AsmType"* %2235, %"class.v8::internal::wasm::AsmType"* nonnull inttoptr (i64 1825 to %"class.v8::internal::wasm::AsmType"*)) #12
  br i1 %2236, label %2237, label %2309

2237:                                             ; preds = %2233
  %2238 = getelementptr inbounds %"class.v8::internal::wasm::AsmJsParser", %"class.v8::internal::wasm::AsmJsParser"* %0, i64 0, i32 16
  %2239 = load i32, i32* %2238, align 8
  %2240 = add nsw i32 %2239, 1
  %2241 = add nsw i32 %2239, 2
  store i32 %2241, i32* %2238, align 8
  %2242 = getelementptr inbounds %"class.v8::internal::wasm::AsmJsParser::CachedVector", %"class.v8::internal::wasm::AsmJsParser::CachedVector"* %5, i64 0, i32 0, i32 0, i32 0, i32 1
  %2243 = bitcast %"class.v8::internal::wasm::AsmType"*** %2242 to i64*
  %2244 = load i64, i64* %2243, align 8
  %2245 = bitcast %"class.v8::internal::wasm::AsmJsParser::CachedVector"* %5 to i64*
  %2246 = load i64, i64* %2245, align 8
  %2247 = sub i64 %2244, %2246
  %2248 = ashr exact i64 %2247, 3
  %2249 = icmp ugt i64 %2248, 1
  br i1 %2249, label %2250, label %2256

2250:                                             ; preds = %2237
  %2251 = getelementptr inbounds %"class.v8::internal::wasm::AsmJsParser", %"class.v8::internal::wasm::AsmJsParser"* %0, i64 0, i32 3
  %2252 = getelementptr inbounds %"class.v8::internal::wasm::AsmJsParser", %"class.v8::internal::wasm::AsmJsParser"* %0, i64 0, i32 15
  %2253 = getelementptr inbounds %"class.v8::internal::wasm::AsmJsParser", %"class.v8::internal::wasm::AsmJsParser"* %0, i64 0, i32 14
  br label %2259

2254:                                             ; preds = %2299
  %2255 = load i32, i32* %2238, align 8
  br label %2256

2256:                                             ; preds = %2254, %2237
  %2257 = phi i32 [ %2255, %2254 ], [ %2241, %2237 ]
  %2258 = add nsw i32 %2257, -2
  store i32 %2258, i32* %2238, align 8
  br label %2416

2259:                                             ; preds = %2250, %2299
  %2260 = phi i64 [ 1, %2250 ], [ %2303, %2299 ]
  %2261 = load %"class.v8::internal::wasm::WasmFunctionBuilder"*, %"class.v8::internal::wasm::WasmFunctionBuilder"** %2251, align 8
  %2262 = load i32, i32* %2252, align 4
  %2263 = icmp sgt i32 %2262, %2239
  br i1 %2263, label %2265, label %2264

2264:                                             ; preds = %2259
  store i32 %2240, i32* %2252, align 4
  br label %2265

2265:                                             ; preds = %2259, %2264
  %2266 = load i32, i32* %2253, align 8
  %2267 = add nsw i32 %2266, %2239
  call void @_ZN2v88internal4wasm19WasmFunctionBuilder12EmitSetLocalEj(%"class.v8::internal::wasm::WasmFunctionBuilder"* %2261, i32 %2267) #12
  %2268 = load %"class.v8::internal::wasm::WasmFunctionBuilder"*, %"class.v8::internal::wasm::WasmFunctionBuilder"** %2251, align 8
  %2269 = load i32, i32* %2252, align 4
  %2270 = icmp sgt i32 %2269, %2240
  br i1 %2270, label %2272, label %2271

2271:                                             ; preds = %2265
  store i32 %2241, i32* %2252, align 4
  br label %2272

2272:                                             ; preds = %2265, %2271
  %2273 = load i32, i32* %2253, align 8
  %2274 = add nsw i32 %2273, %2240
  call void @_ZN2v88internal4wasm19WasmFunctionBuilder12EmitTeeLocalEj(%"class.v8::internal::wasm::WasmFunctionBuilder"* %2268, i32 %2274) #12
  %2275 = load %"class.v8::internal::wasm::WasmFunctionBuilder"*, %"class.v8::internal::wasm::WasmFunctionBuilder"** %2251, align 8
  %2276 = load i32, i32* %2252, align 4
  %2277 = icmp sgt i32 %2276, %2239
  br i1 %2277, label %2279, label %2278

2278:                                             ; preds = %2272
  store i32 %2240, i32* %2252, align 4
  br label %2279

2279:                                             ; preds = %2272, %2278
  %2280 = load i32, i32* %2253, align 8
  %2281 = add nsw i32 %2280, %2239
  call void @_ZN2v88internal4wasm19WasmFunctionBuilder12EmitGetLocalEj(%"class.v8::internal::wasm::WasmFunctionBuilder"* %2275, i32 %2281) #12
  %2282 = load i32, i32* %1744, align 8
  %2283 = icmp eq i32 %2282, 7
  %2284 = load %"class.v8::internal::wasm::WasmFunctionBuilder"*, %"class.v8::internal::wasm::WasmFunctionBuilder"** %2251, align 8
  %2285 = select i1 %2283, i32 78, i32 76
  call void @_ZN2v88internal4wasm19WasmFunctionBuilder4EmitENS1_10WasmOpcodeE(%"class.v8::internal::wasm::WasmFunctionBuilder"* %2284, i32 %2285) #12
  %2286 = load %"class.v8::internal::wasm::WasmFunctionBuilder"*, %"class.v8::internal::wasm::WasmFunctionBuilder"** %2251, align 8
  call void @_ZN2v88internal4wasm19WasmFunctionBuilder10EmitWithU8ENS1_10WasmOpcodeEh(%"class.v8::internal::wasm::WasmFunctionBuilder"* %2286, i32 4, i8 zeroext 127) #12
  %2287 = load %"class.v8::internal::wasm::WasmFunctionBuilder"*, %"class.v8::internal::wasm::WasmFunctionBuilder"** %2251, align 8
  %2288 = load i32, i32* %2252, align 4
  %2289 = icmp sgt i32 %2288, %2239
  br i1 %2289, label %2291, label %2290

2290:                                             ; preds = %2279
  store i32 %2240, i32* %2252, align 4
  br label %2291

2291:                                             ; preds = %2279, %2290
  %2292 = load i32, i32* %2253, align 8
  %2293 = add nsw i32 %2292, %2239
  call void @_ZN2v88internal4wasm19WasmFunctionBuilder12EmitGetLocalEj(%"class.v8::internal::wasm::WasmFunctionBuilder"* %2287, i32 %2293) #12
  %2294 = load %"class.v8::internal::wasm::WasmFunctionBuilder"*, %"class.v8::internal::wasm::WasmFunctionBuilder"** %2251, align 8
  call void @_ZN2v88internal4wasm19WasmFunctionBuilder4EmitENS1_10WasmOpcodeE(%"class.v8::internal::wasm::WasmFunctionBuilder"* %2294, i32 5) #12
  %2295 = load %"class.v8::internal::wasm::WasmFunctionBuilder"*, %"class.v8::internal::wasm::WasmFunctionBuilder"** %2251, align 8
  %2296 = load i32, i32* %2252, align 4
  %2297 = icmp sgt i32 %2296, %2240
  br i1 %2297, label %2299, label %2298

2298:                                             ; preds = %2291
  store i32 %2241, i32* %2252, align 4
  br label %2299

2299:                                             ; preds = %2291, %2298
  %2300 = load i32, i32* %2253, align 8
  %2301 = add nsw i32 %2300, %2240
  call void @_ZN2v88internal4wasm19WasmFunctionBuilder12EmitGetLocalEj(%"class.v8::internal::wasm::WasmFunctionBuilder"* %2295, i32 %2301) #12
  %2302 = load %"class.v8::internal::wasm::WasmFunctionBuilder"*, %"class.v8::internal::wasm::WasmFunctionBuilder"** %2251, align 8
  call void @_ZN2v88internal4wasm19WasmFunctionBuilder4EmitENS1_10WasmOpcodeE(%"class.v8::internal::wasm::WasmFunctionBuilder"* %2302, i32 11) #12
  %2303 = add nuw i64 %2260, 1
  %2304 = load i64, i64* %2243, align 8
  %2305 = load i64, i64* %2245, align 8
  %2306 = sub i64 %2304, %2305
  %2307 = ashr exact i64 %2306, 3
  %2308 = icmp ult i64 %2303, %2307
  br i1 %2308, label %2259, label %2254

2309:                                             ; preds = %2233
  call void (i8*, ...) @_Z8V8_FatalPKcz(i8* getelementptr inbounds ([17 x i8], [17 x i8]* @.str, i64 0, i64 0)) #13
  unreachable

2310:                                             ; preds = %2091
  %2311 = getelementptr inbounds %"class.v8::internal::wasm::AsmJsParser::CachedVector", %"class.v8::internal::wasm::AsmJsParser::CachedVector"* %5, i64 0, i32 0, i32 0, i32 0, i32 0
  %2312 = load %"class.v8::internal::wasm::AsmType"**, %"class.v8::internal::wasm::AsmType"*** %2311, align 8
  %2313 = load %"class.v8::internal::wasm::AsmType"*, %"class.v8::internal::wasm::AsmType"** %2312, align 8
  %2314 = call zeroext i1 @_ZN2v88internal4wasm7AsmType3IsAEPS2_(%"class.v8::internal::wasm::AsmType"* %2313, %"class.v8::internal::wasm::AsmType"* nonnull inttoptr (i64 1825 to %"class.v8::internal::wasm::AsmType"*)) #12
  br i1 %2314, label %2315, label %2356

2315:                                             ; preds = %2310
  %2316 = getelementptr inbounds %"class.v8::internal::wasm::AsmJsParser", %"class.v8::internal::wasm::AsmJsParser"* %0, i64 0, i32 16
  %2317 = load i32, i32* %2316, align 8
  %2318 = add nsw i32 %2317, 1
  store i32 %2318, i32* %2316, align 8
  %2319 = getelementptr inbounds %"class.v8::internal::wasm::AsmJsParser", %"class.v8::internal::wasm::AsmJsParser"* %0, i64 0, i32 3
  %2320 = load %"class.v8::internal::wasm::WasmFunctionBuilder"*, %"class.v8::internal::wasm::WasmFunctionBuilder"** %2319, align 8
  %2321 = getelementptr inbounds %"class.v8::internal::wasm::AsmJsParser", %"class.v8::internal::wasm::AsmJsParser"* %0, i64 0, i32 15
  %2322 = load i32, i32* %2321, align 4
  %2323 = icmp sgt i32 %2322, %2317
  br i1 %2323, label %2325, label %2324

2324:                                             ; preds = %2315
  store i32 %2318, i32* %2321, align 4
  br label %2325

2325:                                             ; preds = %2315, %2324
  %2326 = getelementptr inbounds %"class.v8::internal::wasm::AsmJsParser", %"class.v8::internal::wasm::AsmJsParser"* %0, i64 0, i32 14
  %2327 = load i32, i32* %2326, align 8
  %2328 = add nsw i32 %2327, %2317
  call void @_ZN2v88internal4wasm19WasmFunctionBuilder12EmitTeeLocalEj(%"class.v8::internal::wasm::WasmFunctionBuilder"* %2320, i32 %2328) #12
  %2329 = load %"class.v8::internal::wasm::WasmFunctionBuilder"*, %"class.v8::internal::wasm::WasmFunctionBuilder"** %2319, align 8
  %2330 = load i32, i32* %2321, align 4
  %2331 = icmp sgt i32 %2330, %2317
  br i1 %2331, label %2333, label %2332

2332:                                             ; preds = %2325
  store i32 %2318, i32* %2321, align 4
  br label %2333

2333:                                             ; preds = %2325, %2332
  %2334 = load i32, i32* %2326, align 8
  %2335 = add nsw i32 %2334, %2317
  call void @_ZN2v88internal4wasm19WasmFunctionBuilder12EmitGetLocalEj(%"class.v8::internal::wasm::WasmFunctionBuilder"* %2329, i32 %2335) #12
  %2336 = load %"class.v8::internal::wasm::WasmFunctionBuilder"*, %"class.v8::internal::wasm::WasmFunctionBuilder"** %2319, align 8
  call void @_ZN2v88internal4wasm19WasmFunctionBuilder12EmitI32ConstEi(%"class.v8::internal::wasm::WasmFunctionBuilder"* %2336, i32 31) #12
  %2337 = load %"class.v8::internal::wasm::WasmFunctionBuilder"*, %"class.v8::internal::wasm::WasmFunctionBuilder"** %2319, align 8
  call void @_ZN2v88internal4wasm19WasmFunctionBuilder4EmitENS1_10WasmOpcodeE(%"class.v8::internal::wasm::WasmFunctionBuilder"* %2337, i32 117) #12
  %2338 = load %"class.v8::internal::wasm::WasmFunctionBuilder"*, %"class.v8::internal::wasm::WasmFunctionBuilder"** %2319, align 8
  %2339 = load i32, i32* %2321, align 4
  %2340 = icmp sgt i32 %2339, %2317
  br i1 %2340, label %2342, label %2341

2341:                                             ; preds = %2333
  store i32 %2318, i32* %2321, align 4
  br label %2342

2342:                                             ; preds = %2333, %2341
  %2343 = load i32, i32* %2326, align 8
  %2344 = add nsw i32 %2343, %2317
  call void @_ZN2v88internal4wasm19WasmFunctionBuilder12EmitTeeLocalEj(%"class.v8::internal::wasm::WasmFunctionBuilder"* %2338, i32 %2344) #12
  %2345 = load %"class.v8::internal::wasm::WasmFunctionBuilder"*, %"class.v8::internal::wasm::WasmFunctionBuilder"** %2319, align 8
  call void @_ZN2v88internal4wasm19WasmFunctionBuilder4EmitENS1_10WasmOpcodeE(%"class.v8::internal::wasm::WasmFunctionBuilder"* %2345, i32 115) #12
  %2346 = load %"class.v8::internal::wasm::WasmFunctionBuilder"*, %"class.v8::internal::wasm::WasmFunctionBuilder"** %2319, align 8
  %2347 = load i32, i32* %2321, align 4
  %2348 = icmp sgt i32 %2347, %2317
  br i1 %2348, label %2350, label %2349

2349:                                             ; preds = %2342
  store i32 %2318, i32* %2321, align 4
  br label %2350

2350:                                             ; preds = %2342, %2349
  %2351 = load i32, i32* %2326, align 8
  %2352 = add nsw i32 %2351, %2317
  call void @_ZN2v88internal4wasm19WasmFunctionBuilder12EmitGetLocalEj(%"class.v8::internal::wasm::WasmFunctionBuilder"* %2346, i32 %2352) #12
  %2353 = load %"class.v8::internal::wasm::WasmFunctionBuilder"*, %"class.v8::internal::wasm::WasmFunctionBuilder"** %2319, align 8
  call void @_ZN2v88internal4wasm19WasmFunctionBuilder4EmitENS1_10WasmOpcodeE(%"class.v8::internal::wasm::WasmFunctionBuilder"* %2353, i32 107) #12
  %2354 = load i32, i32* %2316, align 8
  %2355 = add nsw i32 %2354, -1
  store i32 %2355, i32* %2316, align 8
  br label %2416

2356:                                             ; preds = %2310
  %2357 = load %"class.v8::internal::wasm::AsmType"**, %"class.v8::internal::wasm::AsmType"*** %2311, align 8
  %2358 = load %"class.v8::internal::wasm::AsmType"*, %"class.v8::internal::wasm::AsmType"** %2357, align 8
  %2359 = call zeroext i1 @_ZN2v88internal4wasm7AsmType3IsAEPS2_(%"class.v8::internal::wasm::AsmType"* %2358, %"class.v8::internal::wasm::AsmType"* nonnull inttoptr (i64 77 to %"class.v8::internal::wasm::AsmType"*)) #12
  br i1 %2359, label %2360, label %2363

2360:                                             ; preds = %2356
  %2361 = getelementptr inbounds %"class.v8::internal::wasm::AsmJsParser", %"class.v8::internal::wasm::AsmJsParser"* %0, i64 0, i32 3
  %2362 = load %"class.v8::internal::wasm::WasmFunctionBuilder"*, %"class.v8::internal::wasm::WasmFunctionBuilder"** %2361, align 8
  call void @_ZN2v88internal4wasm19WasmFunctionBuilder4EmitENS1_10WasmOpcodeE(%"class.v8::internal::wasm::WasmFunctionBuilder"* %2362, i32 153) #12
  br label %2416

2363:                                             ; preds = %2356
  %2364 = load %"class.v8::internal::wasm::AsmType"**, %"class.v8::internal::wasm::AsmType"*** %2311, align 8
  %2365 = load %"class.v8::internal::wasm::AsmType"*, %"class.v8::internal::wasm::AsmType"** %2364, align 8
  %2366 = call zeroext i1 @_ZN2v88internal4wasm7AsmType3IsAEPS2_(%"class.v8::internal::wasm::AsmType"* %2365, %"class.v8::internal::wasm::AsmType"* nonnull inttoptr (i64 24589 to %"class.v8::internal::wasm::AsmType"*)) #12
  br i1 %2366, label %2367, label %2370

2367:                                             ; preds = %2363
  %2368 = getelementptr inbounds %"class.v8::internal::wasm::AsmJsParser", %"class.v8::internal::wasm::AsmJsParser"* %0, i64 0, i32 3
  %2369 = load %"class.v8::internal::wasm::WasmFunctionBuilder"*, %"class.v8::internal::wasm::WasmFunctionBuilder"** %2368, align 8
  call void @_ZN2v88internal4wasm19WasmFunctionBuilder4EmitENS1_10WasmOpcodeE(%"class.v8::internal::wasm::WasmFunctionBuilder"* %2369, i32 139) #12
  br label %2416

2370:                                             ; preds = %2363
  call void (i8*, ...) @_Z8V8_FatalPKcz(i8* getelementptr inbounds ([17 x i8], [17 x i8]* @.str, i64 0, i64 0)) #13
  unreachable

2371:                                             ; preds = %2091
  call void (i8*, ...) @_Z8V8_FatalPKcz(i8* getelementptr inbounds ([17 x i8], [17 x i8]* @.str, i64 0, i64 0)) #13
  unreachable

2372:                                             ; preds = %2091
  call void (i8*, ...) @_Z8V8_FatalPKcz(i8* getelementptr inbounds ([17 x i8], [17 x i8]* @.str, i64 0, i64 0)) #13
  unreachable

2373:                                             ; preds = %2042
  %2374 = tail call zeroext i1 @_ZN2v88internal4wasm7AsmType3IsAEPS2_(%"class.v8::internal::wasm::AsmType"* %2045, %"class.v8::internal::wasm::AsmType"* nonnull inttoptr (i64 2147483649 to %"class.v8::internal::wasm::AsmType"*)) #12
  br i1 %2374, label %2375, label %2376

2375:                                             ; preds = %2373
  store %"class.v8::internal::wasm::AsmType"* %1480, %"class.v8::internal::wasm::AsmType"** %2044, align 8
  br label %2392

2376:                                             ; preds = %2373
  %2377 = load %"class.v8::internal::wasm::AsmType"*, %"class.v8::internal::wasm::AsmType"** %2044, align 8
  %2378 = tail call %"class.v8::internal::wasm::AsmCallableType"* @_ZN2v88internal4wasm7AsmType14AsCallableTypeEv(%"class.v8::internal::wasm::AsmType"* %2377) #12
  %2379 = icmp eq %"class.v8::internal::wasm::AsmCallableType"* %2378, null
  br i1 %2379, label %2387, label %2380

2380:                                             ; preds = %2376
  %2381 = getelementptr inbounds %"class.v8::internal::wasm::AsmJsParser::CachedVector", %"class.v8::internal::wasm::AsmJsParser::CachedVector"* %5, i64 0, i32 0
  %2382 = bitcast %"class.v8::internal::wasm::AsmCallableType"* %2378 to i1 (%"class.v8::internal::wasm::AsmCallableType"*, %"class.v8::internal::wasm::AsmType"*, %"class.v8::internal::ZoneVector.179"*)***
  %2383 = load i1 (%"class.v8::internal::wasm::AsmCallableType"*, %"class.v8::internal::wasm::AsmType"*, %"class.v8::internal::ZoneVector.179"*)**, i1 (%"class.v8::internal::wasm::AsmCallableType"*, %"class.v8::internal::wasm::AsmType"*, %"class.v8::internal::ZoneVector.179"*)*** %2382, align 8
  %2384 = getelementptr inbounds i1 (%"class.v8::internal::wasm::AsmCallableType"*, %"class.v8::internal::wasm::AsmType"*, %"class.v8::internal::ZoneVector.179"*)*, i1 (%"class.v8::internal::wasm::AsmCallableType"*, %"class.v8::internal::wasm::AsmType"*, %"class.v8::internal::ZoneVector.179"*)** %2383, i64 1
  %2385 = load i1 (%"class.v8::internal::wasm::AsmCallableType"*, %"class.v8::internal::wasm::AsmType"*, %"class.v8::internal::ZoneVector.179"*)*, i1 (%"class.v8::internal::wasm::AsmCallableType"*, %"class.v8::internal::wasm::AsmType"*, %"class.v8::internal::ZoneVector.179"*)** %2384, align 8
  %2386 = call zeroext i1 %2385(%"class.v8::internal::wasm::AsmCallableType"* nonnull %2378, %"class.v8::internal::wasm::AsmType"* %1455, %"class.v8::internal::ZoneVector.179"* nonnull dereferenceable(32) %2381) #12
  br i1 %2386, label %2392, label %2387

2387:                                             ; preds = %2376, %2380
  store i8 1, i8* %381, align 4
  %2388 = getelementptr inbounds %"class.v8::internal::wasm::AsmJsParser", %"class.v8::internal::wasm::AsmJsParser"* %0, i64 0, i32 18
  store i8* getelementptr inbounds ([38 x i8], [38 x i8]* @.str.103, i64 0, i64 0), i8** %2388, align 8
  %2389 = load i64, i64* %9, align 8
  %2390 = trunc i64 %2389 to i32
  %2391 = getelementptr inbounds %"class.v8::internal::wasm::AsmJsParser", %"class.v8::internal::wasm::AsmJsParser"* %0, i64 0, i32 19
  store i32 %2390, i32* %2391, align 8
  br label %2416

2392:                                             ; preds = %2380, %2375
  %2393 = load i32, i32* %1744, align 8
  %2394 = icmp eq i32 %2393, 5
  %2395 = getelementptr inbounds %"class.v8::internal::wasm::AsmJsParser", %"class.v8::internal::wasm::AsmJsParser"* %0, i64 0, i32 3
  %2396 = load %"class.v8::internal::wasm::WasmFunctionBuilder"*, %"class.v8::internal::wasm::WasmFunctionBuilder"** %2395, align 8
  br i1 %2394, label %2397, label %2411

2397:                                             ; preds = %2392
  %2398 = getelementptr inbounds %"class.v8::internal::wasm::AsmJsParser", %"class.v8::internal::wasm::AsmJsParser"* %289, i64 0, i32 15
  %2399 = load i32, i32* %2398, align 4
  %2400 = icmp sgt i32 %2399, %288
  br i1 %2400, label %2403, label %2401

2401:                                             ; preds = %2397
  %2402 = add nsw i32 %288, 1
  store i32 %2402, i32* %2398, align 4
  br label %2403

2403:                                             ; preds = %2397, %2401
  %2404 = getelementptr inbounds %"class.v8::internal::wasm::AsmJsParser", %"class.v8::internal::wasm::AsmJsParser"* %289, i64 0, i32 14
  %2405 = load i32, i32* %2404, align 8
  %2406 = add nsw i32 %2405, %288
  call void @_ZN2v88internal4wasm19WasmFunctionBuilder12EmitGetLocalEj(%"class.v8::internal::wasm::WasmFunctionBuilder"* %2396, i32 %2406) #12
  %2407 = load %"class.v8::internal::wasm::WasmFunctionBuilder"*, %"class.v8::internal::wasm::WasmFunctionBuilder"** %2395, align 8
  call void @_ZN2v88internal4wasm19WasmFunctionBuilder16AddAsmWasmOffsetEmm(%"class.v8::internal::wasm::WasmFunctionBuilder"* %2407, i64 %290, i64 %1454) #12
  %2408 = load %"class.v8::internal::wasm::WasmFunctionBuilder"*, %"class.v8::internal::wasm::WasmFunctionBuilder"** %2395, align 8
  call void @_ZN2v88internal4wasm19WasmFunctionBuilder4EmitENS1_10WasmOpcodeE(%"class.v8::internal::wasm::WasmFunctionBuilder"* %2408, i32 17) #12
  %2409 = load %"class.v8::internal::wasm::WasmFunctionBuilder"*, %"class.v8::internal::wasm::WasmFunctionBuilder"** %2395, align 8
  call void @_ZN2v88internal4wasm19WasmFunctionBuilder8EmitU32VEj(%"class.v8::internal::wasm::WasmFunctionBuilder"* %2409, i32 %1743) #12
  %2410 = load %"class.v8::internal::wasm::WasmFunctionBuilder"*, %"class.v8::internal::wasm::WasmFunctionBuilder"** %2395, align 8
  call void @_ZN2v88internal4wasm19WasmFunctionBuilder8EmitU32VEj(%"class.v8::internal::wasm::WasmFunctionBuilder"* %2410, i32 0) #12
  br label %2416

2411:                                             ; preds = %2392
  call void @_ZN2v88internal4wasm19WasmFunctionBuilder16AddAsmWasmOffsetEmm(%"class.v8::internal::wasm::WasmFunctionBuilder"* %2396, i64 %290, i64 %1454) #12
  %2412 = load %"class.v8::internal::wasm::WasmFunctionBuilder"*, %"class.v8::internal::wasm::WasmFunctionBuilder"** %2395, align 8
  call void @_ZN2v88internal4wasm19WasmFunctionBuilder4EmitENS1_10WasmOpcodeE(%"class.v8::internal::wasm::WasmFunctionBuilder"* %2412, i32 16) #12
  %2413 = load %"class.v8::internal::wasm::WasmFunctionBuilder"*, %"class.v8::internal::wasm::WasmFunctionBuilder"** %2395, align 8
  %2414 = getelementptr inbounds %"struct.v8::internal::wasm::AsmJsParser::VarInfo", %"struct.v8::internal::wasm::AsmJsParser::VarInfo"* %1434, i64 %1386, i32 4
  %2415 = load i32, i32* %2414, align 4
  call void @_ZN2v88internal4wasm19WasmFunctionBuilder19EmitDirectCallIndexEj(%"class.v8::internal::wasm::WasmFunctionBuilder"* %2413, i32 %2415) #12
  br label %2416

2416:                                             ; preds = %412, %2221, %2194, %2210, %2183, %2094, %2097, %2100, %2103, %2106, %2109, %2112, %2115, %2118, %2121, %2124, %2127, %2142, %2135, %2158, %2151, %2174, %2167, %2256, %2360, %2367, %2350, %2037, %2403, %2411, %2049, %2086, %1997, %2004, %2387, %1343, %1350, %407, %1362, %374
  %2417 = phi %"class.v8::internal::wasm::AsmType"* [ null, %374 ], [ null, %1362 ], [ null, %407 ], [ null, %1350 ], [ null, %1343 ], [ null, %2004 ], [ null, %1997 ], [ null, %2387 ], [ null, %2086 ], [ null, %2049 ], [ %1455, %2037 ], [ %1455, %2403 ], [ %1455, %2411 ], [ %2092, %2350 ], [ %2092, %2367 ], [ %2092, %2360 ], [ %2092, %2256 ], [ %2092, %2167 ], [ %2092, %2174 ], [ %2092, %2151 ], [ %2092, %2158 ], [ %2092, %2135 ], [ %2092, %2142 ], [ %2092, %2127 ], [ %2092, %2124 ], [ %2092, %2121 ], [ %2092, %2118 ], [ %2092, %2115 ], [ %2092, %2112 ], [ %2092, %2109 ], [ %2092, %2106 ], [ %2092, %2103 ], [ %2092, %2100 ], [ %2092, %2097 ], [ %2092, %2094 ], [ %2092, %2183 ], [ %2092, %2210 ], [ %2092, %2194 ], [ %2092, %2221 ], [ null, %412 ]
  %2418 = load %"class.v8::internal::wasm::AsmJsParser::CachedVectors.175"*, %"class.v8::internal::wasm::AsmJsParser::CachedVectors.175"** %341, align 8
  %2419 = getelementptr inbounds %"class.v8::internal::wasm::AsmJsParser::CachedVectors.175", %"class.v8::internal::wasm::AsmJsParser::CachedVectors.175"* %2418, i64 0, i32 0, i32 0, i32 0, i32 1
  %2420 = load %"class.v8::internal::ZoneVector.179"*, %"class.v8::internal::ZoneVector.179"** %2419, align 8
  %2421 = getelementptr inbounds %"class.v8::internal::wasm::AsmJsParser::CachedVectors.175", %"class.v8::internal::wasm::AsmJsParser::CachedVectors.175"* %2418, i64 0, i32 0, i32 0, i32 0, i32 2, i32 0, i32 0
  %2422 = load %"class.v8::internal::ZoneVector.179"*, %"class.v8::internal::ZoneVector.179"** %2421, align 8
  %2423 = icmp ult %"class.v8::internal::ZoneVector.179"* %2420, %2422
  br i1 %2423, label %2424, label %2447

2424:                                             ; preds = %2416
  %2425 = getelementptr inbounds %"class.v8::internal::wasm::AsmJsParser::CachedVector", %"class.v8::internal::wasm::AsmJsParser::CachedVector"* %5, i64 0, i32 0, i32 0, i32 0, i32 2, i32 1, i32 0
  %2426 = getelementptr inbounds %"class.v8::internal::ZoneVector.179", %"class.v8::internal::ZoneVector.179"* %2420, i64 0, i32 0, i32 0, i32 2, i32 1
  %2427 = bitcast %"class.v8::internal::ZoneAllocator.185"* %2425 to i64*
  %2428 = bitcast %"struct.std::__1::__compressed_pair_elem.184"* %2426 to i64*
  %2429 = bitcast %"class.v8::internal::ZoneVector.179"* %2420 to i8*
  call void @llvm.memset.p0i8.i64(i8* align 8 %2429, i8 0, i64 24, i1 false) #12
  %2430 = load i64, i64* %2427, align 8
  store i64 %2430, i64* %2428, align 8
  %2431 = bitcast %"class.v8::internal::wasm::AsmJsParser::CachedVector"* %5 to i64*
  %2432 = load i64, i64* %2431, align 8
  %2433 = bitcast %"class.v8::internal::ZoneVector.179"* %2420 to i64*
  store i64 %2432, i64* %2433, align 8
  %2434 = getelementptr inbounds %"class.v8::internal::wasm::AsmJsParser::CachedVector", %"class.v8::internal::wasm::AsmJsParser::CachedVector"* %5, i64 0, i32 0, i32 0, i32 0, i32 1
  %2435 = bitcast %"class.v8::internal::wasm::AsmType"*** %2434 to i64*
  %2436 = load i64, i64* %2435, align 8
  %2437 = getelementptr inbounds %"class.v8::internal::ZoneVector.179", %"class.v8::internal::ZoneVector.179"* %2420, i64 0, i32 0, i32 0, i32 1
  %2438 = bitcast %"class.v8::internal::wasm::AsmType"*** %2437 to i64*
  store i64 %2436, i64* %2438, align 8
  %2439 = getelementptr inbounds %"class.v8::internal::wasm::AsmJsParser::CachedVector", %"class.v8::internal::wasm::AsmJsParser::CachedVector"* %5, i64 0, i32 0, i32 0, i32 0, i32 2, i32 0, i32 0
  %2440 = bitcast %"class.v8::internal::wasm::AsmType"*** %2439 to i64*
  %2441 = load i64, i64* %2440, align 8
  %2442 = getelementptr inbounds %"class.v8::internal::ZoneVector.179", %"class.v8::internal::ZoneVector.179"* %2420, i64 0, i32 0, i32 0, i32 2, i32 0, i32 0
  %2443 = bitcast %"class.v8::internal::wasm::AsmType"*** %2442 to i64*
  store i64 %2441, i64* %2443, align 8
  call void @llvm.memset.p0i8.i64(i8* nonnull align 8 %338, i8 0, i64 24, i1 false) #12
  %2444 = getelementptr inbounds %"class.v8::internal::ZoneVector.179", %"class.v8::internal::ZoneVector.179"* %2420, i64 1
  %2445 = ptrtoint %"class.v8::internal::ZoneVector.179"* %2444 to i64
  %2446 = bitcast %"class.v8::internal::ZoneVector.179"** %2419 to i64*
  store i64 %2445, i64* %2446, align 8
  br label %2457

2447:                                             ; preds = %2416
  %2448 = getelementptr inbounds %"class.v8::internal::wasm::AsmJsParser::CachedVector", %"class.v8::internal::wasm::AsmJsParser::CachedVector"* %5, i64 0, i32 0
  %2449 = getelementptr inbounds %"class.v8::internal::wasm::AsmJsParser::CachedVectors.175", %"class.v8::internal::wasm::AsmJsParser::CachedVectors.175"* %2418, i64 0, i32 0, i32 0
  call void @_ZNSt3__16vectorIN2v88internal10ZoneVectorIPNS2_4wasm7AsmTypeEEENS2_13ZoneAllocatorIS7_EEE24__emplace_back_slow_pathIJS7_EEEvDpOT_(%"class.std::__1::vector.177"* %2449, %"class.v8::internal::ZoneVector.179"* nonnull dereferenceable(32) %2448) #12
  %2450 = getelementptr inbounds %"class.v8::internal::wasm::AsmJsParser::CachedVector", %"class.v8::internal::wasm::AsmJsParser::CachedVector"* %5, i64 0, i32 0, i32 0, i32 0, i32 0
  %2451 = load %"class.v8::internal::wasm::AsmType"**, %"class.v8::internal::wasm::AsmType"*** %2450, align 8
  %2452 = icmp eq %"class.v8::internal::wasm::AsmType"** %2451, null
  br i1 %2452, label %2457, label %2453

2453:                                             ; preds = %2447
  %2454 = ptrtoint %"class.v8::internal::wasm::AsmType"** %2451 to i64
  %2455 = getelementptr inbounds %"class.v8::internal::wasm::AsmJsParser::CachedVector", %"class.v8::internal::wasm::AsmJsParser::CachedVector"* %5, i64 0, i32 0, i32 0, i32 0, i32 1
  %2456 = bitcast %"class.v8::internal::wasm::AsmType"*** %2455 to i64*
  store i64 %2454, i64* %2456, align 8
  br label %2457

2457:                                             ; preds = %2424, %2447, %2453
  call void @llvm.lifetime.end.p0i8(i64 40, i8* nonnull %338) #12
  %2458 = load %"class.v8::internal::wasm::AsmJsParser::CachedVectors.175"*, %"class.v8::internal::wasm::AsmJsParser::CachedVectors.175"** %298, align 8
  %2459 = getelementptr inbounds %"class.v8::internal::wasm::AsmJsParser::CachedVectors.175", %"class.v8::internal::wasm::AsmJsParser::CachedVectors.175"* %2458, i64 0, i32 0, i32 0, i32 0, i32 1
  %2460 = load %"class.v8::internal::ZoneVector.179"*, %"class.v8::internal::ZoneVector.179"** %2459, align 8
  %2461 = getelementptr inbounds %"class.v8::internal::wasm::AsmJsParser::CachedVectors.175", %"class.v8::internal::wasm::AsmJsParser::CachedVectors.175"* %2458, i64 0, i32 0, i32 0, i32 0, i32 2, i32 0, i32 0
  %2462 = load %"class.v8::internal::ZoneVector.179"*, %"class.v8::internal::ZoneVector.179"** %2461, align 8
  %2463 = icmp ult %"class.v8::internal::ZoneVector.179"* %2460, %2462
  br i1 %2463, label %2464, label %2487

2464:                                             ; preds = %2457
  %2465 = getelementptr inbounds %"class.v8::internal::wasm::AsmJsParser::CachedVector", %"class.v8::internal::wasm::AsmJsParser::CachedVector"* %4, i64 0, i32 0, i32 0, i32 0, i32 2, i32 1, i32 0
  %2466 = getelementptr inbounds %"class.v8::internal::ZoneVector.179", %"class.v8::internal::ZoneVector.179"* %2460, i64 0, i32 0, i32 0, i32 2, i32 1
  %2467 = bitcast %"class.v8::internal::ZoneAllocator.185"* %2465 to i64*
  %2468 = bitcast %"struct.std::__1::__compressed_pair_elem.184"* %2466 to i64*
  %2469 = bitcast %"class.v8::internal::ZoneVector.179"* %2460 to i8*
  call void @llvm.memset.p0i8.i64(i8* align 8 %2469, i8 0, i64 24, i1 false) #12
  %2470 = load i64, i64* %2467, align 8
  store i64 %2470, i64* %2468, align 8
  %2471 = bitcast %"class.v8::internal::wasm::AsmJsParser::CachedVector"* %4 to i64*
  %2472 = load i64, i64* %2471, align 8
  %2473 = bitcast %"class.v8::internal::ZoneVector.179"* %2460 to i64*
  store i64 %2472, i64* %2473, align 8
  %2474 = getelementptr inbounds %"class.v8::internal::wasm::AsmJsParser::CachedVector", %"class.v8::internal::wasm::AsmJsParser::CachedVector"* %4, i64 0, i32 0, i32 0, i32 0, i32 1
  %2475 = bitcast %"class.v8::internal::wasm::AsmType"*** %2474 to i64*
  %2476 = load i64, i64* %2475, align 8
  %2477 = getelementptr inbounds %"class.v8::internal::ZoneVector.179", %"class.v8::internal::ZoneVector.179"* %2460, i64 0, i32 0, i32 0, i32 1
  %2478 = bitcast %"class.v8::internal::wasm::AsmType"*** %2477 to i64*
  store i64 %2476, i64* %2478, align 8
  %2479 = getelementptr inbounds %"class.v8::internal::wasm::AsmJsParser::CachedVector", %"class.v8::internal::wasm::AsmJsParser::CachedVector"* %4, i64 0, i32 0, i32 0, i32 0, i32 2, i32 0, i32 0
  %2480 = bitcast %"class.v8::internal::wasm::AsmType"*** %2479 to i64*
  %2481 = load i64, i64* %2480, align 8
  %2482 = getelementptr inbounds %"class.v8::internal::ZoneVector.179", %"class.v8::internal::ZoneVector.179"* %2460, i64 0, i32 0, i32 0, i32 2, i32 0, i32 0
  %2483 = bitcast %"class.v8::internal::wasm::AsmType"*** %2482 to i64*
  store i64 %2481, i64* %2483, align 8
  call void @llvm.memset.p0i8.i64(i8* nonnull align 8 %291, i8 0, i64 24, i1 false) #12
  %2484 = getelementptr inbounds %"class.v8::internal::ZoneVector.179", %"class.v8::internal::ZoneVector.179"* %2460, i64 1
  %2485 = ptrtoint %"class.v8::internal::ZoneVector.179"* %2484 to i64
  %2486 = bitcast %"class.v8::internal::ZoneVector.179"** %2459 to i64*
  store i64 %2485, i64* %2486, align 8
  br label %2497

2487:                                             ; preds = %2457
  %2488 = getelementptr inbounds %"class.v8::internal::wasm::AsmJsParser::CachedVector", %"class.v8::internal::wasm::AsmJsParser::CachedVector"* %4, i64 0, i32 0
  %2489 = getelementptr inbounds %"class.v8::internal::wasm::AsmJsParser::CachedVectors.175", %"class.v8::internal::wasm::AsmJsParser::CachedVectors.175"* %2458, i64 0, i32 0, i32 0
  call void @_ZNSt3__16vectorIN2v88internal10ZoneVectorIPNS2_4wasm7AsmTypeEEENS2_13ZoneAllocatorIS7_EEE24__emplace_back_slow_pathIJS7_EEEvDpOT_(%"class.std::__1::vector.177"* %2489, %"class.v8::internal::ZoneVector.179"* nonnull dereferenceable(32) %2488) #12
  %2490 = getelementptr inbounds %"class.v8::internal::wasm::AsmJsParser::CachedVector", %"class.v8::internal::wasm::AsmJsParser::CachedVector"* %4, i64 0, i32 0, i32 0, i32 0, i32 0
  %2491 = load %"class.v8::internal::wasm::AsmType"**, %"class.v8::internal::wasm::AsmType"*** %2490, align 8
  %2492 = icmp eq %"class.v8::internal::wasm::AsmType"** %2491, null
  br i1 %2492, label %2497, label %2493

2493:                                             ; preds = %2487
  %2494 = ptrtoint %"class.v8::internal::wasm::AsmType"** %2491 to i64
  %2495 = getelementptr inbounds %"class.v8::internal::wasm::AsmJsParser::CachedVector", %"class.v8::internal::wasm::AsmJsParser::CachedVector"* %4, i64 0, i32 0, i32 0, i32 0, i32 1
  %2496 = bitcast %"class.v8::internal::wasm::AsmType"*** %2495 to i64*
  store i64 %2494, i64* %2496, align 8
  br label %2497

2497:                                             ; preds = %2464, %2493, %2487
  call void @llvm.lifetime.end.p0i8(i64 40, i8* nonnull %291) #12
  %2498 = icmp eq i8 %287, 0
  br i1 %2498, label %2503, label %2499

2499:                                             ; preds = %2497
  %2500 = getelementptr inbounds %"class.v8::internal::wasm::AsmJsParser", %"class.v8::internal::wasm::AsmJsParser"* %289, i64 0, i32 16
  %2501 = load i32, i32* %2500, align 8
  %2502 = add nsw i32 %2501, -1
  store i32 %2502, i32* %2500, align 8
  br label %2503

2503:                                             ; preds = %177, %165, %160, %54, %65, %76, %31, %38, %46, %25, %280, %2497, %2499
  %2504 = phi %"class.v8::internal::wasm::AsmType"* [ %2417, %2497 ], [ %2417, %2499 ], [ null, %280 ], [ null, %25 ], [ null, %46 ], [ null, %38 ], [ null, %31 ], [ null, %76 ], [ null, %65 ], [ null, %54 ], [ null, %160 ], [ null, %165 ], [ null, %177 ]
  ret %"class.v8::internal::wasm::AsmType"* %2504
}

; Function Attrs: nounwind ssp uwtable
define hidden void @_ZN2v88internal4wasm11AsmJsParser18ValidateHeapAccessEv(%"class.v8::internal::wasm::AsmJsParser"*) local_unnamed_addr #0 align 2 {
  %2 = getelementptr inbounds %"class.v8::internal::wasm::AsmJsParser", %"class.v8::internal::wasm::AsmJsParser"* %0, i64 0, i32 1
  %3 = getelementptr inbounds %"class.v8::internal::wasm::AsmJsParser", %"class.v8::internal::wasm::AsmJsParser"* %0, i64 0, i32 1, i32 1
  %4 = load i32, i32* %3, align 8
  tail call void @_ZN2v88internal12AsmJsScanner4NextEv(%"class.v8::internal::AsmJsScanner"* %2) #12
  %5 = icmp sgt i32 %4, 255
  %6 = getelementptr inbounds %"class.v8::internal::wasm::AsmJsParser", %"class.v8::internal::wasm::AsmJsParser"* %0, i64 0, i32 7
  %7 = getelementptr inbounds %"class.v8::internal::wasm::AsmJsParser", %"class.v8::internal::wasm::AsmJsParser"* %0, i64 0, i32 8
  %8 = select i1 %5, %"class.v8::internal::Vector.160"* %6, %"class.v8::internal::Vector.160"* %7
  %9 = getelementptr inbounds %"class.v8::internal::Vector.160", %"class.v8::internal::Vector.160"* %8, i64 0, i32 1
  %10 = load i64, i64* %9, align 8
  br i1 %5, label %14, label %11

11:                                               ; preds = %1
  %12 = sub nsw i32 -10000, %4
  %13 = sext i32 %12 to i64
  br label %22

14:                                               ; preds = %1
  %15 = add nsw i32 %4, -256
  %16 = sext i32 %15 to i64
  %17 = getelementptr inbounds %"class.v8::internal::wasm::AsmJsParser", %"class.v8::internal::wasm::AsmJsParser"* %0, i64 0, i32 9
  %18 = load i64, i64* %17, align 8
  %19 = icmp ugt i64 %18, %16
  br i1 %19, label %22, label %20

20:                                               ; preds = %14
  %21 = add nuw nsw i64 %16, 1
  store i64 %21, i64* %17, align 8
  br label %22

22:                                               ; preds = %20, %14, %11
  %23 = phi i64 [ %16, %20 ], [ %16, %14 ], [ %13, %11 ]
  %24 = add nsw i64 %23, 1
  %25 = icmp ugt i64 %24, %10
  br i1 %25, label %29, label %26

26:                                               ; preds = %22
  %27 = getelementptr inbounds %"class.v8::internal::Vector.160", %"class.v8::internal::Vector.160"* %8, i64 0, i32 0
  %28 = load %"struct.v8::internal::wasm::AsmJsParser::VarInfo"*, %"struct.v8::internal::wasm::AsmJsParser::VarInfo"** %27, align 8
  br label %70

29:                                               ; preds = %22
  %30 = shl i64 %10, 1
  %31 = icmp ult i64 %30, %24
  %32 = select i1 %31, i64 %24, i64 %30
  %33 = getelementptr inbounds %"class.v8::internal::wasm::AsmJsParser", %"class.v8::internal::wasm::AsmJsParser"* %0, i64 0, i32 0
  %34 = load %"class.v8::internal::Zone"*, %"class.v8::internal::Zone"** %33, align 8
  %35 = mul i64 %32, 40
  %36 = getelementptr inbounds %"class.v8::internal::Zone", %"class.v8::internal::Zone"* %34, i64 0, i32 2
  %37 = load i64, i64* %36, align 8
  %38 = getelementptr inbounds %"class.v8::internal::Zone", %"class.v8::internal::Zone"* %34, i64 0, i32 3
  %39 = load i64, i64* %38, align 8
  %40 = sub i64 %39, %37
  %41 = icmp ugt i64 %35, %40
  br i1 %41, label %42, label %44, !prof !2

42:                                               ; preds = %29
  %43 = tail call i64 @_ZN2v88internal4Zone9NewExpandEm(%"class.v8::internal::Zone"* %34, i64 %35) #12
  br label %46

44:                                               ; preds = %29
  %45 = add i64 %37, %35
  store i64 %45, i64* %36, align 8
  br label %46

46:                                               ; preds = %44, %42
  %47 = phi i64 [ %43, %42 ], [ %37, %44 ]
  %48 = inttoptr i64 %47 to %"struct.v8::internal::wasm::AsmJsParser::VarInfo"*
  %49 = getelementptr inbounds %"struct.v8::internal::wasm::AsmJsParser::VarInfo", %"struct.v8::internal::wasm::AsmJsParser::VarInfo"* %48, i64 %32
  %50 = icmp eq i64 %32, 0
  br i1 %50, label %60, label %51

51:                                               ; preds = %46, %51
  %52 = phi %"struct.v8::internal::wasm::AsmJsParser::VarInfo"* [ %58, %51 ], [ %48, %46 ]
  %53 = getelementptr inbounds %"struct.v8::internal::wasm::AsmJsParser::VarInfo", %"struct.v8::internal::wasm::AsmJsParser::VarInfo"* %52, i64 0, i32 0
  store %"class.v8::internal::wasm::AsmType"* inttoptr (i64 2147483649 to %"class.v8::internal::wasm::AsmType"*), %"class.v8::internal::wasm::AsmType"** %53, align 8
  %54 = getelementptr inbounds %"struct.v8::internal::wasm::AsmJsParser::VarInfo", %"struct.v8::internal::wasm::AsmJsParser::VarInfo"* %52, i64 0, i32 1
  %55 = getelementptr inbounds %"struct.v8::internal::wasm::AsmJsParser::VarInfo", %"struct.v8::internal::wasm::AsmJsParser::VarInfo"* %52, i64 0, i32 6
  %56 = bitcast %"class.v8::internal::wasm::WasmFunctionBuilder"** %54 to i8*
  tail call void @llvm.memset.p0i8.i64(i8* align 8 %56, i8 0, i64 28, i1 false) #12
  store i8 1, i8* %55, align 4
  %57 = getelementptr inbounds %"struct.v8::internal::wasm::AsmJsParser::VarInfo", %"struct.v8::internal::wasm::AsmJsParser::VarInfo"* %52, i64 0, i32 7
  store i8 0, i8* %57, align 1
  %58 = getelementptr inbounds %"struct.v8::internal::wasm::AsmJsParser::VarInfo", %"struct.v8::internal::wasm::AsmJsParser::VarInfo"* %52, i64 1
  %59 = icmp eq %"struct.v8::internal::wasm::AsmJsParser::VarInfo"* %58, %49
  br i1 %59, label %60, label %51

60:                                               ; preds = %51, %46
  %61 = getelementptr inbounds %"class.v8::internal::Vector.160", %"class.v8::internal::Vector.160"* %8, i64 0, i32 0
  %62 = load i64, i64* %9, align 8
  %63 = mul nuw i64 %62, 40
  %64 = icmp eq i64 %63, 0
  br i1 %64, label %69, label %65

65:                                               ; preds = %60
  %66 = bitcast %"class.v8::internal::Vector.160"* %8 to i8**
  %67 = load i8*, i8** %66, align 8
  %68 = inttoptr i64 %47 to i8*
  tail call void @llvm.memmove.p0i8.p0i8.i64(i8* align 8 %68, i8* align 8 %67, i64 %63, i1 false) #12
  br label %69

69:                                               ; preds = %65, %60
  store %"struct.v8::internal::wasm::AsmJsParser::VarInfo"* %48, %"struct.v8::internal::wasm::AsmJsParser::VarInfo"** %61, align 8
  store i64 %32, i64* %9, align 8
  br label %70

70:                                               ; preds = %26, %69
  %71 = phi %"struct.v8::internal::wasm::AsmJsParser::VarInfo"* [ %28, %26 ], [ %48, %69 ]
  %72 = getelementptr inbounds %"struct.v8::internal::wasm::AsmJsParser::VarInfo", %"struct.v8::internal::wasm::AsmJsParser::VarInfo"* %71, i64 %23
  %73 = getelementptr inbounds %"struct.v8::internal::wasm::AsmJsParser::VarInfo", %"struct.v8::internal::wasm::AsmJsParser::VarInfo"* %72, i64 0, i32 0
  %74 = load %"class.v8::internal::wasm::AsmType"*, %"class.v8::internal::wasm::AsmType"** %73, align 8
  %75 = tail call i32 @_ZN2v88internal4wasm7AsmType18ElementSizeInBytesEv(%"class.v8::internal::wasm::AsmType"* %74) #12
  %76 = load i32, i32* %3, align 8
  %77 = icmp eq i32 %76, 91
  br i1 %77, label %85, label %78

78:                                               ; preds = %70
  %79 = getelementptr inbounds %"class.v8::internal::wasm::AsmJsParser", %"class.v8::internal::wasm::AsmJsParser"* %0, i64 0, i32 17
  store i8 1, i8* %79, align 4
  %80 = getelementptr inbounds %"class.v8::internal::wasm::AsmJsParser", %"class.v8::internal::wasm::AsmJsParser"* %0, i64 0, i32 18
  store i8* getelementptr inbounds ([17 x i8], [17 x i8]* @.str.3, i64 0, i64 0), i8** %80, align 8
  %81 = getelementptr inbounds %"class.v8::internal::wasm::AsmJsParser", %"class.v8::internal::wasm::AsmJsParser"* %0, i64 0, i32 1, i32 5
  %82 = load i64, i64* %81, align 8
  %83 = trunc i64 %82 to i32
  %84 = getelementptr inbounds %"class.v8::internal::wasm::AsmJsParser", %"class.v8::internal::wasm::AsmJsParser"* %0, i64 0, i32 19
  store i32 %83, i32* %84, align 8
  br label %216

85:                                               ; preds = %70
  tail call void @_ZN2v88internal12AsmJsScanner4NextEv(%"class.v8::internal::AsmJsScanner"* %2) #12
  %86 = load i32, i32* %3, align 8
  %87 = icmp eq i32 %86, -3
  br i1 %87, label %88, label %116

88:                                               ; preds = %85
  %89 = getelementptr inbounds %"class.v8::internal::wasm::AsmJsParser", %"class.v8::internal::wasm::AsmJsParser"* %0, i64 0, i32 1, i32 19
  %90 = load i32, i32* %89, align 8
  tail call void @_ZN2v88internal12AsmJsScanner4NextEv(%"class.v8::internal::AsmJsScanner"* %2) #12
  %91 = icmp slt i32 %90, 0
  br i1 %91, label %97, label %92

92:                                               ; preds = %88
  %93 = zext i32 %90 to i64
  %94 = sext i32 %75 to i64
  %95 = mul nsw i64 %93, %94
  %96 = icmp ugt i64 %95, 2147483647
  br i1 %96, label %97, label %104

97:                                               ; preds = %92, %88
  %98 = getelementptr inbounds %"class.v8::internal::wasm::AsmJsParser", %"class.v8::internal::wasm::AsmJsParser"* %0, i64 0, i32 17
  store i8 1, i8* %98, align 4
  %99 = getelementptr inbounds %"class.v8::internal::wasm::AsmJsParser", %"class.v8::internal::wasm::AsmJsParser"* %0, i64 0, i32 18
  store i8* getelementptr inbounds ([25 x i8], [25 x i8]* @.str.104, i64 0, i64 0), i8** %99, align 8
  %100 = getelementptr inbounds %"class.v8::internal::wasm::AsmJsParser", %"class.v8::internal::wasm::AsmJsParser"* %0, i64 0, i32 1, i32 5
  %101 = load i64, i64* %100, align 8
  %102 = trunc i64 %101 to i32
  %103 = getelementptr inbounds %"class.v8::internal::wasm::AsmJsParser", %"class.v8::internal::wasm::AsmJsParser"* %0, i64 0, i32 19
  store i32 %102, i32* %103, align 8
  br label %216

104:                                              ; preds = %92
  %105 = load i32, i32* %3, align 8
  %106 = icmp eq i32 %105, 93
  br i1 %106, label %107, label %115

107:                                              ; preds = %104
  tail call void @_ZN2v88internal12AsmJsScanner4NextEv(%"class.v8::internal::AsmJsScanner"* %2) #12
  %108 = getelementptr inbounds %"class.v8::internal::wasm::AsmJsParser", %"class.v8::internal::wasm::AsmJsParser"* %0, i64 0, i32 3
  %109 = load %"class.v8::internal::wasm::WasmFunctionBuilder"*, %"class.v8::internal::wasm::WasmFunctionBuilder"** %108, align 8
  %110 = mul i32 %90, %75
  tail call void @_ZN2v88internal4wasm19WasmFunctionBuilder12EmitI32ConstEi(%"class.v8::internal::wasm::WasmFunctionBuilder"* %109, i32 %110) #12
  %111 = bitcast %"struct.v8::internal::wasm::AsmJsParser::VarInfo"* %72 to i64*
  %112 = load i64, i64* %111, align 8
  %113 = getelementptr inbounds %"class.v8::internal::wasm::AsmJsParser", %"class.v8::internal::wasm::AsmJsParser"* %0, i64 0, i32 24
  %114 = bitcast %"class.v8::internal::wasm::AsmType"** %113 to i64*
  store i64 %112, i64* %114, align 8
  br label %216

115:                                              ; preds = %104
  tail call void @_ZN2v88internal12AsmJsScanner6RewindEv(%"class.v8::internal::AsmJsScanner"* %2) #12
  br label %116

116:                                              ; preds = %85, %115
  %117 = load %"class.v8::internal::wasm::AsmType"*, %"class.v8::internal::wasm::AsmType"** %73, align 8
  %118 = tail call zeroext i1 @_ZN2v88internal4wasm7AsmType3IsAEPS2_(%"class.v8::internal::wasm::AsmType"* %117, %"class.v8::internal::wasm::AsmType"* nonnull inttoptr (i64 131075 to %"class.v8::internal::wasm::AsmType"*)) #12
  br i1 %118, label %122, label %119

119:                                              ; preds = %116
  %120 = load %"class.v8::internal::wasm::AsmType"*, %"class.v8::internal::wasm::AsmType"** %73, align 8
  %121 = tail call zeroext i1 @_ZN2v88internal4wasm7AsmType3IsAEPS2_(%"class.v8::internal::wasm::AsmType"* %120, %"class.v8::internal::wasm::AsmType"* nonnull inttoptr (i64 65539 to %"class.v8::internal::wasm::AsmType"*)) #12
  br i1 %121, label %122, label %139

122:                                              ; preds = %116, %119
  %123 = tail call i64 @_ZN2v88internal23GetCurrentStackPositionEv() #12
  %124 = getelementptr inbounds %"class.v8::internal::wasm::AsmJsParser", %"class.v8::internal::wasm::AsmJsParser"* %0, i64 0, i32 5
  %125 = load i64, i64* %124, align 8
  %126 = icmp ult i64 %123, %125
  br i1 %126, label %127, label %134

127:                                              ; preds = %122
  %128 = getelementptr inbounds %"class.v8::internal::wasm::AsmJsParser", %"class.v8::internal::wasm::AsmJsParser"* %0, i64 0, i32 17
  store i8 1, i8* %128, align 4
  %129 = getelementptr inbounds %"class.v8::internal::wasm::AsmJsParser", %"class.v8::internal::wasm::AsmJsParser"* %0, i64 0, i32 18
  store i8* getelementptr inbounds ([44 x i8], [44 x i8]* @.str.2, i64 0, i64 0), i8** %129, align 8
  %130 = getelementptr inbounds %"class.v8::internal::wasm::AsmJsParser", %"class.v8::internal::wasm::AsmJsParser"* %0, i64 0, i32 1, i32 5
  %131 = load i64, i64* %130, align 8
  %132 = trunc i64 %131 to i32
  %133 = getelementptr inbounds %"class.v8::internal::wasm::AsmJsParser", %"class.v8::internal::wasm::AsmJsParser"* %0, i64 0, i32 19
  store i32 %132, i32* %133, align 8
  br label %216

134:                                              ; preds = %122
  %135 = tail call %"class.v8::internal::wasm::AsmType"* @_ZN2v88internal4wasm11AsmJsParser10ExpressionEPNS1_7AsmTypeE(%"class.v8::internal::wasm::AsmJsParser"* %0, %"class.v8::internal::wasm::AsmType"* null)
  %136 = getelementptr inbounds %"class.v8::internal::wasm::AsmJsParser", %"class.v8::internal::wasm::AsmJsParser"* %0, i64 0, i32 17
  %137 = load i8, i8* %136, align 4, !range !69
  %138 = icmp eq i8 %137, 0
  br i1 %138, label %191, label %216

139:                                              ; preds = %119
  %140 = tail call i64 @_ZN2v88internal23GetCurrentStackPositionEv() #12
  %141 = getelementptr inbounds %"class.v8::internal::wasm::AsmJsParser", %"class.v8::internal::wasm::AsmJsParser"* %0, i64 0, i32 5
  %142 = load i64, i64* %141, align 8
  %143 = icmp ult i64 %140, %142
  br i1 %143, label %144, label %151

144:                                              ; preds = %139
  %145 = getelementptr inbounds %"class.v8::internal::wasm::AsmJsParser", %"class.v8::internal::wasm::AsmJsParser"* %0, i64 0, i32 17
  store i8 1, i8* %145, align 4
  %146 = getelementptr inbounds %"class.v8::internal::wasm::AsmJsParser", %"class.v8::internal::wasm::AsmJsParser"* %0, i64 0, i32 18
  store i8* getelementptr inbounds ([44 x i8], [44 x i8]* @.str.2, i64 0, i64 0), i8** %146, align 8
  %147 = getelementptr inbounds %"class.v8::internal::wasm::AsmJsParser", %"class.v8::internal::wasm::AsmJsParser"* %0, i64 0, i32 1, i32 5
  %148 = load i64, i64* %147, align 8
  %149 = trunc i64 %148 to i32
  %150 = getelementptr inbounds %"class.v8::internal::wasm::AsmJsParser", %"class.v8::internal::wasm::AsmJsParser"* %0, i64 0, i32 19
  store i32 %149, i32* %150, align 8
  br label %216

151:                                              ; preds = %139
  %152 = tail call %"class.v8::internal::wasm::AsmType"* @_ZN2v88internal4wasm11AsmJsParser15ShiftExpressionEv(%"class.v8::internal::wasm::AsmJsParser"* %0)
  %153 = getelementptr inbounds %"class.v8::internal::wasm::AsmJsParser", %"class.v8::internal::wasm::AsmJsParser"* %0, i64 0, i32 17
  %154 = load i8, i8* %153, align 4, !range !69
  %155 = icmp eq i8 %154, 0
  br i1 %155, label %156, label %216

156:                                              ; preds = %151
  %157 = getelementptr inbounds %"class.v8::internal::wasm::AsmJsParser", %"class.v8::internal::wasm::AsmJsParser"* %0, i64 0, i32 38
  %158 = load i64, i64* %157, align 8
  %159 = icmp eq i64 %158, -1
  br i1 %159, label %160, label %166

160:                                              ; preds = %156
  store i8 1, i8* %153, align 4
  %161 = getelementptr inbounds %"class.v8::internal::wasm::AsmJsParser", %"class.v8::internal::wasm::AsmJsParser"* %0, i64 0, i32 18
  store i8* getelementptr inbounds ([28 x i8], [28 x i8]* @.str.105, i64 0, i64 0), i8** %161, align 8
  %162 = getelementptr inbounds %"class.v8::internal::wasm::AsmJsParser", %"class.v8::internal::wasm::AsmJsParser"* %0, i64 0, i32 1, i32 5
  %163 = load i64, i64* %162, align 8
  %164 = trunc i64 %163 to i32
  %165 = getelementptr inbounds %"class.v8::internal::wasm::AsmJsParser", %"class.v8::internal::wasm::AsmJsParser"* %0, i64 0, i32 19
  store i32 %164, i32* %165, align 8
  br label %216

166:                                              ; preds = %156
  %167 = getelementptr inbounds %"class.v8::internal::wasm::AsmJsParser", %"class.v8::internal::wasm::AsmJsParser"* %0, i64 0, i32 39
  %168 = load i32, i32* %167, align 8
  %169 = icmp ugt i32 %168, 3
  br i1 %169, label %170, label %176

170:                                              ; preds = %166
  store i8 1, i8* %153, align 4
  %171 = getelementptr inbounds %"class.v8::internal::wasm::AsmJsParser", %"class.v8::internal::wasm::AsmJsParser"* %0, i64 0, i32 18
  store i8* getelementptr inbounds ([33 x i8], [33 x i8]* @.str.106, i64 0, i64 0), i8** %171, align 8
  %172 = getelementptr inbounds %"class.v8::internal::wasm::AsmJsParser", %"class.v8::internal::wasm::AsmJsParser"* %0, i64 0, i32 1, i32 5
  %173 = load i64, i64* %172, align 8
  %174 = trunc i64 %173 to i32
  %175 = getelementptr inbounds %"class.v8::internal::wasm::AsmJsParser", %"class.v8::internal::wasm::AsmJsParser"* %0, i64 0, i32 19
  store i32 %174, i32* %175, align 8
  br label %216

176:                                              ; preds = %166
  %177 = shl i32 1, %168
  %178 = icmp eq i32 %177, %75
  br i1 %178, label %185, label %179

179:                                              ; preds = %176
  store i8 1, i8* %153, align 4
  %180 = getelementptr inbounds %"class.v8::internal::wasm::AsmJsParser", %"class.v8::internal::wasm::AsmJsParser"* %0, i64 0, i32 18
  store i8* getelementptr inbounds ([46 x i8], [46 x i8]* @.str.107, i64 0, i64 0), i8** %180, align 8
  %181 = getelementptr inbounds %"class.v8::internal::wasm::AsmJsParser", %"class.v8::internal::wasm::AsmJsParser"* %0, i64 0, i32 1, i32 5
  %182 = load i64, i64* %181, align 8
  %183 = trunc i64 %182 to i32
  %184 = getelementptr inbounds %"class.v8::internal::wasm::AsmJsParser", %"class.v8::internal::wasm::AsmJsParser"* %0, i64 0, i32 19
  store i32 %183, i32* %184, align 8
  br label %216

185:                                              ; preds = %176
  %186 = getelementptr inbounds %"class.v8::internal::wasm::AsmJsParser", %"class.v8::internal::wasm::AsmJsParser"* %0, i64 0, i32 3
  %187 = load %"class.v8::internal::wasm::WasmFunctionBuilder"*, %"class.v8::internal::wasm::WasmFunctionBuilder"** %186, align 8
  tail call void @_ZN2v88internal4wasm19WasmFunctionBuilder15DeleteCodeAfterEm(%"class.v8::internal::wasm::WasmFunctionBuilder"* %187, i64 %158) #12
  %188 = load %"class.v8::internal::wasm::WasmFunctionBuilder"*, %"class.v8::internal::wasm::WasmFunctionBuilder"** %186, align 8
  %189 = sub i32 0, %75
  tail call void @_ZN2v88internal4wasm19WasmFunctionBuilder12EmitI32ConstEi(%"class.v8::internal::wasm::WasmFunctionBuilder"* %188, i32 %189) #12
  %190 = load %"class.v8::internal::wasm::WasmFunctionBuilder"*, %"class.v8::internal::wasm::WasmFunctionBuilder"** %186, align 8
  tail call void @_ZN2v88internal4wasm19WasmFunctionBuilder4EmitENS1_10WasmOpcodeE(%"class.v8::internal::wasm::WasmFunctionBuilder"* %190, i32 113) #12
  br label %191

191:                                              ; preds = %134, %185
  %192 = phi %"class.v8::internal::wasm::AsmType"* [ %135, %134 ], [ %152, %185 ]
  %193 = tail call zeroext i1 @_ZN2v88internal4wasm7AsmType3IsAEPS2_(%"class.v8::internal::wasm::AsmType"* %192, %"class.v8::internal::wasm::AsmType"* nonnull inttoptr (i64 257 to %"class.v8::internal::wasm::AsmType"*)) #12
  br i1 %193, label %201, label %194

194:                                              ; preds = %191
  %195 = getelementptr inbounds %"class.v8::internal::wasm::AsmJsParser", %"class.v8::internal::wasm::AsmJsParser"* %0, i64 0, i32 17
  store i8 1, i8* %195, align 4
  %196 = getelementptr inbounds %"class.v8::internal::wasm::AsmJsParser", %"class.v8::internal::wasm::AsmJsParser"* %0, i64 0, i32 18
  store i8* getelementptr inbounds ([22 x i8], [22 x i8]* @.str.92, i64 0, i64 0), i8** %196, align 8
  %197 = getelementptr inbounds %"class.v8::internal::wasm::AsmJsParser", %"class.v8::internal::wasm::AsmJsParser"* %0, i64 0, i32 1, i32 5
  %198 = load i64, i64* %197, align 8
  %199 = trunc i64 %198 to i32
  %200 = getelementptr inbounds %"class.v8::internal::wasm::AsmJsParser", %"class.v8::internal::wasm::AsmJsParser"* %0, i64 0, i32 19
  store i32 %199, i32* %200, align 8
  br label %216

201:                                              ; preds = %191
  %202 = load i32, i32* %3, align 8
  %203 = icmp eq i32 %202, 93
  br i1 %203, label %211, label %204

204:                                              ; preds = %201
  %205 = getelementptr inbounds %"class.v8::internal::wasm::AsmJsParser", %"class.v8::internal::wasm::AsmJsParser"* %0, i64 0, i32 17
  store i8 1, i8* %205, align 4
  %206 = getelementptr inbounds %"class.v8::internal::wasm::AsmJsParser", %"class.v8::internal::wasm::AsmJsParser"* %0, i64 0, i32 18
  store i8* getelementptr inbounds ([17 x i8], [17 x i8]* @.str.3, i64 0, i64 0), i8** %206, align 8
  %207 = getelementptr inbounds %"class.v8::internal::wasm::AsmJsParser", %"class.v8::internal::wasm::AsmJsParser"* %0, i64 0, i32 1, i32 5
  %208 = load i64, i64* %207, align 8
  %209 = trunc i64 %208 to i32
  %210 = getelementptr inbounds %"class.v8::internal::wasm::AsmJsParser", %"class.v8::internal::wasm::AsmJsParser"* %0, i64 0, i32 19
  store i32 %209, i32* %210, align 8
  br label %216

211:                                              ; preds = %201
  tail call void @_ZN2v88internal12AsmJsScanner4NextEv(%"class.v8::internal::AsmJsScanner"* %2) #12
  %212 = bitcast %"struct.v8::internal::wasm::AsmJsParser::VarInfo"* %72 to i64*
  %213 = load i64, i64* %212, align 8
  %214 = getelementptr inbounds %"class.v8::internal::wasm::AsmJsParser", %"class.v8::internal::wasm::AsmJsParser"* %0, i64 0, i32 24
  %215 = bitcast %"class.v8::internal::wasm::AsmType"** %214 to i64*
  store i64 %213, i64* %215, align 8
  br label %216

216:                                              ; preds = %97, %107, %151, %134, %211, %204, %194, %179, %170, %160, %144, %127, %78
  ret void
}

declare %"class.v8::internal::wasm::AsmType"* @_ZN2v88internal4wasm7AsmType9StoreTypeEv(%"class.v8::internal::wasm::AsmType"*) local_unnamed_addr #1

declare %"class.v8::internal::wasm::AsmType"* @_ZN2v88internal4wasm7AsmType8LoadTypeEv(%"class.v8::internal::wasm::AsmType"*) local_unnamed_addr #1

; Function Attrs: nounwind ssp uwtable
define hidden %"class.v8::internal::wasm::AsmType"* @_ZN2v88internal4wasm11AsmJsParser21ConditionalExpressionEv(%"class.v8::internal::wasm::AsmJsParser"*) local_unnamed_addr #0 align 2 {
  %2 = tail call i64 @_ZN2v88internal23GetCurrentStackPositionEv() #12
  %3 = getelementptr inbounds %"class.v8::internal::wasm::AsmJsParser", %"class.v8::internal::wasm::AsmJsParser"* %0, i64 0, i32 5
  %4 = load i64, i64* %3, align 8
  %5 = icmp ult i64 %2, %4
  br i1 %5, label %6, label %13

6:                                                ; preds = %1
  %7 = getelementptr inbounds %"class.v8::internal::wasm::AsmJsParser", %"class.v8::internal::wasm::AsmJsParser"* %0, i64 0, i32 17
  store i8 1, i8* %7, align 4
  %8 = getelementptr inbounds %"class.v8::internal::wasm::AsmJsParser", %"class.v8::internal::wasm::AsmJsParser"* %0, i64 0, i32 18
  store i8* getelementptr inbounds ([44 x i8], [44 x i8]* @.str.2, i64 0, i64 0), i8** %8, align 8
  %9 = getelementptr inbounds %"class.v8::internal::wasm::AsmJsParser", %"class.v8::internal::wasm::AsmJsParser"* %0, i64 0, i32 1, i32 5
  %10 = load i64, i64* %9, align 8
  %11 = trunc i64 %10 to i32
  %12 = getelementptr inbounds %"class.v8::internal::wasm::AsmJsParser", %"class.v8::internal::wasm::AsmJsParser"* %0, i64 0, i32 19
  store i32 %11, i32* %12, align 8
  br label %114

13:                                               ; preds = %1
  %14 = tail call %"class.v8::internal::wasm::AsmType"* @_ZN2v88internal4wasm11AsmJsParser19BitwiseORExpressionEv(%"class.v8::internal::wasm::AsmJsParser"* %0)
  %15 = getelementptr inbounds %"class.v8::internal::wasm::AsmJsParser", %"class.v8::internal::wasm::AsmJsParser"* %0, i64 0, i32 17
  %16 = load i8, i8* %15, align 4, !range !69
  %17 = icmp eq i8 %16, 0
  br i1 %17, label %18, label %114

18:                                               ; preds = %13
  %19 = getelementptr inbounds %"class.v8::internal::wasm::AsmJsParser", %"class.v8::internal::wasm::AsmJsParser"* %0, i64 0, i32 1, i32 1
  %20 = load i32, i32* %19, align 8
  %21 = icmp eq i32 %20, 63
  br i1 %21, label %22, label %114

22:                                               ; preds = %18
  %23 = getelementptr inbounds %"class.v8::internal::wasm::AsmJsParser", %"class.v8::internal::wasm::AsmJsParser"* %0, i64 0, i32 1
  tail call void @_ZN2v88internal12AsmJsScanner4NextEv(%"class.v8::internal::AsmJsScanner"* %23) #12
  %24 = tail call zeroext i1 @_ZN2v88internal4wasm7AsmType3IsAEPS2_(%"class.v8::internal::wasm::AsmType"* %14, %"class.v8::internal::wasm::AsmType"* nonnull inttoptr (i64 769 to %"class.v8::internal::wasm::AsmType"*)) #12
  br i1 %24, label %31, label %25

25:                                               ; preds = %22
  store i8 1, i8* %15, align 4
  %26 = getelementptr inbounds %"class.v8::internal::wasm::AsmJsParser", %"class.v8::internal::wasm::AsmJsParser"* %0, i64 0, i32 18
  store i8* getelementptr inbounds ([47 x i8], [47 x i8]* @.str.90, i64 0, i64 0), i8** %26, align 8
  %27 = getelementptr inbounds %"class.v8::internal::wasm::AsmJsParser", %"class.v8::internal::wasm::AsmJsParser"* %0, i64 0, i32 1, i32 5
  %28 = load i64, i64* %27, align 8
  %29 = trunc i64 %28 to i32
  %30 = getelementptr inbounds %"class.v8::internal::wasm::AsmJsParser", %"class.v8::internal::wasm::AsmJsParser"* %0, i64 0, i32 19
  store i32 %29, i32* %30, align 8
  br label %114

31:                                               ; preds = %22
  %32 = getelementptr inbounds %"class.v8::internal::wasm::AsmJsParser", %"class.v8::internal::wasm::AsmJsParser"* %0, i64 0, i32 3
  %33 = load %"class.v8::internal::wasm::WasmFunctionBuilder"*, %"class.v8::internal::wasm::WasmFunctionBuilder"** %32, align 8
  tail call void @_ZN2v88internal4wasm19WasmFunctionBuilder10EmitWithU8ENS1_10WasmOpcodeEh(%"class.v8::internal::wasm::WasmFunctionBuilder"* %33, i32 4, i8 zeroext 127) #12
  %34 = load %"class.v8::internal::wasm::WasmFunctionBuilder"*, %"class.v8::internal::wasm::WasmFunctionBuilder"** %32, align 8
  %35 = getelementptr inbounds %"class.v8::internal::wasm::WasmFunctionBuilder", %"class.v8::internal::wasm::WasmFunctionBuilder"* %34, i64 0, i32 4, i32 2
  %36 = bitcast i8** %35 to i64*
  %37 = load i64, i64* %36, align 8
  %38 = getelementptr inbounds %"class.v8::internal::wasm::WasmFunctionBuilder", %"class.v8::internal::wasm::WasmFunctionBuilder"* %34, i64 0, i32 4, i32 1
  %39 = bitcast i8** %38 to i64*
  %40 = load i64, i64* %39, align 8
  %41 = xor i64 %40, -1
  %42 = add i64 %37, %41
  %43 = tail call i64 @_ZN2v88internal23GetCurrentStackPositionEv() #12
  %44 = load i64, i64* %3, align 8
  %45 = icmp ult i64 %43, %44
  br i1 %45, label %46, label %52

46:                                               ; preds = %31
  store i8 1, i8* %15, align 4
  %47 = getelementptr inbounds %"class.v8::internal::wasm::AsmJsParser", %"class.v8::internal::wasm::AsmJsParser"* %0, i64 0, i32 18
  store i8* getelementptr inbounds ([44 x i8], [44 x i8]* @.str.2, i64 0, i64 0), i8** %47, align 8
  %48 = getelementptr inbounds %"class.v8::internal::wasm::AsmJsParser", %"class.v8::internal::wasm::AsmJsParser"* %0, i64 0, i32 1, i32 5
  %49 = load i64, i64* %48, align 8
  %50 = trunc i64 %49 to i32
  %51 = getelementptr inbounds %"class.v8::internal::wasm::AsmJsParser", %"class.v8::internal::wasm::AsmJsParser"* %0, i64 0, i32 19
  store i32 %50, i32* %51, align 8
  br label %114

52:                                               ; preds = %31
  %53 = tail call %"class.v8::internal::wasm::AsmType"* @_ZN2v88internal4wasm11AsmJsParser20AssignmentExpressionEv(%"class.v8::internal::wasm::AsmJsParser"* %0)
  %54 = load i8, i8* %15, align 4, !range !69
  %55 = icmp eq i8 %54, 0
  br i1 %55, label %56, label %114

56:                                               ; preds = %52
  %57 = load %"class.v8::internal::wasm::WasmFunctionBuilder"*, %"class.v8::internal::wasm::WasmFunctionBuilder"** %32, align 8
  tail call void @_ZN2v88internal4wasm19WasmFunctionBuilder4EmitENS1_10WasmOpcodeE(%"class.v8::internal::wasm::WasmFunctionBuilder"* %57, i32 5) #12
  %58 = load i32, i32* %19, align 8
  %59 = icmp eq i32 %58, 58
  br i1 %59, label %66, label %60

60:                                               ; preds = %56
  store i8 1, i8* %15, align 4
  %61 = getelementptr inbounds %"class.v8::internal::wasm::AsmJsParser", %"class.v8::internal::wasm::AsmJsParser"* %0, i64 0, i32 18
  store i8* getelementptr inbounds ([17 x i8], [17 x i8]* @.str.3, i64 0, i64 0), i8** %61, align 8
  %62 = getelementptr inbounds %"class.v8::internal::wasm::AsmJsParser", %"class.v8::internal::wasm::AsmJsParser"* %0, i64 0, i32 1, i32 5
  %63 = load i64, i64* %62, align 8
  %64 = trunc i64 %63 to i32
  %65 = getelementptr inbounds %"class.v8::internal::wasm::AsmJsParser", %"class.v8::internal::wasm::AsmJsParser"* %0, i64 0, i32 19
  store i32 %64, i32* %65, align 8
  br label %114

66:                                               ; preds = %56
  tail call void @_ZN2v88internal12AsmJsScanner4NextEv(%"class.v8::internal::AsmJsScanner"* %23) #12
  %67 = tail call i64 @_ZN2v88internal23GetCurrentStackPositionEv() #12
  %68 = load i64, i64* %3, align 8
  %69 = icmp ult i64 %67, %68
  br i1 %69, label %70, label %76

70:                                               ; preds = %66
  store i8 1, i8* %15, align 4
  %71 = getelementptr inbounds %"class.v8::internal::wasm::AsmJsParser", %"class.v8::internal::wasm::AsmJsParser"* %0, i64 0, i32 18
  store i8* getelementptr inbounds ([44 x i8], [44 x i8]* @.str.2, i64 0, i64 0), i8** %71, align 8
  %72 = getelementptr inbounds %"class.v8::internal::wasm::AsmJsParser", %"class.v8::internal::wasm::AsmJsParser"* %0, i64 0, i32 1, i32 5
  %73 = load i64, i64* %72, align 8
  %74 = trunc i64 %73 to i32
  %75 = getelementptr inbounds %"class.v8::internal::wasm::AsmJsParser", %"class.v8::internal::wasm::AsmJsParser"* %0, i64 0, i32 19
  store i32 %74, i32* %75, align 8
  br label %114

76:                                               ; preds = %66
  %77 = tail call %"class.v8::internal::wasm::AsmType"* @_ZN2v88internal4wasm11AsmJsParser20AssignmentExpressionEv(%"class.v8::internal::wasm::AsmJsParser"* %0)
  %78 = load i8, i8* %15, align 4, !range !69
  %79 = icmp eq i8 %78, 0
  br i1 %79, label %80, label %114

80:                                               ; preds = %76
  %81 = load %"class.v8::internal::wasm::WasmFunctionBuilder"*, %"class.v8::internal::wasm::WasmFunctionBuilder"** %32, align 8
  tail call void @_ZN2v88internal4wasm19WasmFunctionBuilder4EmitENS1_10WasmOpcodeE(%"class.v8::internal::wasm::WasmFunctionBuilder"* %81, i32 11) #12
  %82 = tail call zeroext i1 @_ZN2v88internal4wasm7AsmType3IsAEPS2_(%"class.v8::internal::wasm::AsmType"* %53, %"class.v8::internal::wasm::AsmType"* nonnull inttoptr (i64 769 to %"class.v8::internal::wasm::AsmType"*)) #12
  br i1 %82, label %83, label %90

83:                                               ; preds = %80
  %84 = tail call zeroext i1 @_ZN2v88internal4wasm7AsmType3IsAEPS2_(%"class.v8::internal::wasm::AsmType"* %77, %"class.v8::internal::wasm::AsmType"* nonnull inttoptr (i64 769 to %"class.v8::internal::wasm::AsmType"*)) #12
  br i1 %84, label %85, label %90

85:                                               ; preds = %83
  %86 = load %"class.v8::internal::wasm::WasmFunctionBuilder"*, %"class.v8::internal::wasm::WasmFunctionBuilder"** %32, align 8
  %87 = getelementptr inbounds %"class.v8::internal::wasm::WasmFunctionBuilder", %"class.v8::internal::wasm::WasmFunctionBuilder"* %86, i64 0, i32 4, i32 1
  %88 = load i8*, i8** %87, align 8
  %89 = getelementptr inbounds i8, i8* %88, i64 %42
  store i8 127, i8* %89, align 1
  br label %114

90:                                               ; preds = %83, %80
  %91 = tail call zeroext i1 @_ZN2v88internal4wasm7AsmType3IsAEPS2_(%"class.v8::internal::wasm::AsmType"* %53, %"class.v8::internal::wasm::AsmType"* nonnull inttoptr (i64 237 to %"class.v8::internal::wasm::AsmType"*)) #12
  br i1 %91, label %92, label %99

92:                                               ; preds = %90
  %93 = tail call zeroext i1 @_ZN2v88internal4wasm7AsmType3IsAEPS2_(%"class.v8::internal::wasm::AsmType"* %77, %"class.v8::internal::wasm::AsmType"* nonnull inttoptr (i64 237 to %"class.v8::internal::wasm::AsmType"*)) #12
  br i1 %93, label %94, label %99

94:                                               ; preds = %92
  %95 = load %"class.v8::internal::wasm::WasmFunctionBuilder"*, %"class.v8::internal::wasm::WasmFunctionBuilder"** %32, align 8
  %96 = getelementptr inbounds %"class.v8::internal::wasm::WasmFunctionBuilder", %"class.v8::internal::wasm::WasmFunctionBuilder"* %95, i64 0, i32 4, i32 1
  %97 = load i8*, i8** %96, align 8
  %98 = getelementptr inbounds i8, i8* %97, i64 %42
  store i8 124, i8* %98, align 1
  br label %114

99:                                               ; preds = %92, %90
  %100 = tail call zeroext i1 @_ZN2v88internal4wasm7AsmType3IsAEPS2_(%"class.v8::internal::wasm::AsmType"* %53, %"class.v8::internal::wasm::AsmType"* nonnull inttoptr (i64 57357 to %"class.v8::internal::wasm::AsmType"*)) #12
  br i1 %100, label %101, label %108

101:                                              ; preds = %99
  %102 = tail call zeroext i1 @_ZN2v88internal4wasm7AsmType3IsAEPS2_(%"class.v8::internal::wasm::AsmType"* %77, %"class.v8::internal::wasm::AsmType"* nonnull inttoptr (i64 57357 to %"class.v8::internal::wasm::AsmType"*)) #12
  br i1 %102, label %103, label %108

103:                                              ; preds = %101
  %104 = load %"class.v8::internal::wasm::WasmFunctionBuilder"*, %"class.v8::internal::wasm::WasmFunctionBuilder"** %32, align 8
  %105 = getelementptr inbounds %"class.v8::internal::wasm::WasmFunctionBuilder", %"class.v8::internal::wasm::WasmFunctionBuilder"* %104, i64 0, i32 4, i32 1
  %106 = load i8*, i8** %105, align 8
  %107 = getelementptr inbounds i8, i8* %106, i64 %42
  store i8 125, i8* %107, align 1
  br label %114

108:                                              ; preds = %101, %99
  store i8 1, i8* %15, align 4
  %109 = getelementptr inbounds %"class.v8::internal::wasm::AsmJsParser", %"class.v8::internal::wasm::AsmJsParser"* %0, i64 0, i32 18
  store i8* getelementptr inbounds ([35 x i8], [35 x i8]* @.str.91, i64 0, i64 0), i8** %109, align 8
  %110 = getelementptr inbounds %"class.v8::internal::wasm::AsmJsParser", %"class.v8::internal::wasm::AsmJsParser"* %0, i64 0, i32 1, i32 5
  %111 = load i64, i64* %110, align 8
  %112 = trunc i64 %111 to i32
  %113 = getelementptr inbounds %"class.v8::internal::wasm::AsmJsParser", %"class.v8::internal::wasm::AsmJsParser"* %0, i64 0, i32 19
  store i32 %112, i32* %113, align 8
  br label %114

114:                                              ; preds = %18, %46, %60, %52, %76, %108, %103, %94, %85, %70, %13, %25, %6
  %115 = phi %"class.v8::internal::wasm::AsmType"* [ null, %6 ], [ null, %25 ], [ null, %13 ], [ null, %46 ], [ null, %60 ], [ null, %52 ], [ null, %70 ], [ inttoptr (i64 769 to %"class.v8::internal::wasm::AsmType"*), %85 ], [ inttoptr (i64 237 to %"class.v8::internal::wasm::AsmType"*), %94 ], [ inttoptr (i64 57357 to %"class.v8::internal::wasm::AsmType"*), %103 ], [ null, %108 ], [ null, %76 ], [ %14, %18 ]
  ret %"class.v8::internal::wasm::AsmType"* %115
}

declare void @_ZN2v88internal4wasm19WasmFunctionBuilder12EmitTeeLocalEj(%"class.v8::internal::wasm::WasmFunctionBuilder"*, i32) local_unnamed_addr #1

declare void @_ZN2v88internal4wasm19WasmFunctionBuilder12EmitWithU32VENS1_10WasmOpcodeEj(%"class.v8::internal::wasm::WasmFunctionBuilder"*, i32, i32) local_unnamed_addr #1

; Function Attrs: nounwind ssp uwtable
define hidden %"class.v8::internal::wasm::AsmType"* @_ZN2v88internal4wasm11AsmJsParser15UnaryExpressionEv(%"class.v8::internal::wasm::AsmJsParser"*) local_unnamed_addr #0 align 2 {
  %2 = getelementptr inbounds %"class.v8::internal::wasm::AsmJsParser", %"class.v8::internal::wasm::AsmJsParser"* %0, i64 0, i32 1, i32 1
  %3 = load i32, i32* %2, align 8
  switch i32 %3, label %227 [
    i32 45, label %4
    i32 43, label %90
    i32 33, label %133
    i32 126, label %162
  ]

4:                                                ; preds = %1
  %5 = getelementptr inbounds %"class.v8::internal::wasm::AsmJsParser", %"class.v8::internal::wasm::AsmJsParser"* %0, i64 0, i32 1
  tail call void @_ZN2v88internal12AsmJsScanner4NextEv(%"class.v8::internal::AsmJsScanner"* %5) #12
  %6 = load i32, i32* %2, align 8
  %7 = icmp eq i32 %6, -3
  br i1 %7, label %8, label %30

8:                                                ; preds = %4
  %9 = getelementptr inbounds %"class.v8::internal::wasm::AsmJsParser", %"class.v8::internal::wasm::AsmJsParser"* %0, i64 0, i32 1, i32 19
  %10 = load i32, i32* %9, align 8
  tail call void @_ZN2v88internal12AsmJsScanner4NextEv(%"class.v8::internal::AsmJsScanner"* %5) #12
  %11 = icmp eq i32 %10, 0
  br i1 %11, label %12, label %15

12:                                               ; preds = %8
  %13 = getelementptr inbounds %"class.v8::internal::wasm::AsmJsParser", %"class.v8::internal::wasm::AsmJsParser"* %0, i64 0, i32 3
  %14 = load %"class.v8::internal::wasm::WasmFunctionBuilder"*, %"class.v8::internal::wasm::WasmFunctionBuilder"** %13, align 8
  tail call void @_ZN2v88internal4wasm19WasmFunctionBuilder12EmitF64ConstEd(%"class.v8::internal::wasm::WasmFunctionBuilder"* %14, double -0.000000e+00) #12
  br label %244

15:                                               ; preds = %8
  %16 = icmp ult i32 %10, -2147483647
  br i1 %16, label %17, label %23

17:                                               ; preds = %15
  %18 = getelementptr inbounds %"class.v8::internal::wasm::AsmJsParser", %"class.v8::internal::wasm::AsmJsParser"* %0, i64 0, i32 3
  %19 = load %"class.v8::internal::wasm::WasmFunctionBuilder"*, %"class.v8::internal::wasm::WasmFunctionBuilder"** %18, align 8
  %20 = icmp eq i32 %10, -2147483648
  %21 = sub nsw i32 0, %10
  %22 = select i1 %20, i32 -2147483648, i32 %21
  tail call void @_ZN2v88internal4wasm19WasmFunctionBuilder12EmitI32ConstEi(%"class.v8::internal::wasm::WasmFunctionBuilder"* %19, i32 %22) #12
  br label %244

23:                                               ; preds = %15
  %24 = getelementptr inbounds %"class.v8::internal::wasm::AsmJsParser", %"class.v8::internal::wasm::AsmJsParser"* %0, i64 0, i32 17
  store i8 1, i8* %24, align 4
  %25 = getelementptr inbounds %"class.v8::internal::wasm::AsmJsParser", %"class.v8::internal::wasm::AsmJsParser"* %0, i64 0, i32 18
  store i8* getelementptr inbounds ([38 x i8], [38 x i8]* @.str.66, i64 0, i64 0), i8** %25, align 8
  %26 = getelementptr inbounds %"class.v8::internal::wasm::AsmJsParser", %"class.v8::internal::wasm::AsmJsParser"* %0, i64 0, i32 1, i32 5
  %27 = load i64, i64* %26, align 8
  %28 = trunc i64 %27 to i32
  %29 = getelementptr inbounds %"class.v8::internal::wasm::AsmJsParser", %"class.v8::internal::wasm::AsmJsParser"* %0, i64 0, i32 19
  store i32 %28, i32* %29, align 8
  br label %246

30:                                               ; preds = %4
  %31 = tail call i64 @_ZN2v88internal23GetCurrentStackPositionEv() #12
  %32 = getelementptr inbounds %"class.v8::internal::wasm::AsmJsParser", %"class.v8::internal::wasm::AsmJsParser"* %0, i64 0, i32 5
  %33 = load i64, i64* %32, align 8
  %34 = icmp ult i64 %31, %33
  br i1 %34, label %35, label %42

35:                                               ; preds = %30
  %36 = getelementptr inbounds %"class.v8::internal::wasm::AsmJsParser", %"class.v8::internal::wasm::AsmJsParser"* %0, i64 0, i32 17
  store i8 1, i8* %36, align 4
  %37 = getelementptr inbounds %"class.v8::internal::wasm::AsmJsParser", %"class.v8::internal::wasm::AsmJsParser"* %0, i64 0, i32 18
  store i8* getelementptr inbounds ([44 x i8], [44 x i8]* @.str.2, i64 0, i64 0), i8** %37, align 8
  %38 = getelementptr inbounds %"class.v8::internal::wasm::AsmJsParser", %"class.v8::internal::wasm::AsmJsParser"* %0, i64 0, i32 1, i32 5
  %39 = load i64, i64* %38, align 8
  %40 = trunc i64 %39 to i32
  %41 = getelementptr inbounds %"class.v8::internal::wasm::AsmJsParser", %"class.v8::internal::wasm::AsmJsParser"* %0, i64 0, i32 19
  store i32 %40, i32* %41, align 8
  br label %246

42:                                               ; preds = %30
  %43 = tail call %"class.v8::internal::wasm::AsmType"* @_ZN2v88internal4wasm11AsmJsParser15UnaryExpressionEv(%"class.v8::internal::wasm::AsmJsParser"* %0)
  %44 = getelementptr inbounds %"class.v8::internal::wasm::AsmJsParser", %"class.v8::internal::wasm::AsmJsParser"* %0, i64 0, i32 17
  %45 = load i8, i8* %44, align 4, !range !69
  %46 = icmp eq i8 %45, 0
  br i1 %46, label %47, label %246

47:                                               ; preds = %42
  %48 = tail call zeroext i1 @_ZN2v88internal4wasm7AsmType3IsAEPS2_(%"class.v8::internal::wasm::AsmType"* %43, %"class.v8::internal::wasm::AsmType"* nonnull inttoptr (i64 769 to %"class.v8::internal::wasm::AsmType"*)) #12
  br i1 %48, label %49, label %74

49:                                               ; preds = %47
  %50 = getelementptr inbounds %"class.v8::internal::wasm::AsmJsParser", %"class.v8::internal::wasm::AsmJsParser"* %0, i64 0, i32 16
  %51 = load i32, i32* %50, align 8
  %52 = add nsw i32 %51, 1
  store i32 %52, i32* %50, align 8
  %53 = getelementptr inbounds %"class.v8::internal::wasm::AsmJsParser", %"class.v8::internal::wasm::AsmJsParser"* %0, i64 0, i32 3
  %54 = load %"class.v8::internal::wasm::WasmFunctionBuilder"*, %"class.v8::internal::wasm::WasmFunctionBuilder"** %53, align 8
  %55 = getelementptr inbounds %"class.v8::internal::wasm::AsmJsParser", %"class.v8::internal::wasm::AsmJsParser"* %0, i64 0, i32 15
  %56 = load i32, i32* %55, align 4
  %57 = icmp sgt i32 %56, %51
  br i1 %57, label %59, label %58

58:                                               ; preds = %49
  store i32 %52, i32* %55, align 4
  br label %59

59:                                               ; preds = %49, %58
  %60 = getelementptr inbounds %"class.v8::internal::wasm::AsmJsParser", %"class.v8::internal::wasm::AsmJsParser"* %0, i64 0, i32 14
  %61 = load i32, i32* %60, align 8
  %62 = add nsw i32 %61, %51
  tail call void @_ZN2v88internal4wasm19WasmFunctionBuilder12EmitSetLocalEj(%"class.v8::internal::wasm::WasmFunctionBuilder"* %54, i32 %62) #12
  %63 = load %"class.v8::internal::wasm::WasmFunctionBuilder"*, %"class.v8::internal::wasm::WasmFunctionBuilder"** %53, align 8
  tail call void @_ZN2v88internal4wasm19WasmFunctionBuilder12EmitI32ConstEi(%"class.v8::internal::wasm::WasmFunctionBuilder"* %63, i32 0) #12
  %64 = load %"class.v8::internal::wasm::WasmFunctionBuilder"*, %"class.v8::internal::wasm::WasmFunctionBuilder"** %53, align 8
  %65 = load i32, i32* %55, align 4
  %66 = icmp sgt i32 %65, %51
  br i1 %66, label %68, label %67

67:                                               ; preds = %59
  store i32 %52, i32* %55, align 4
  br label %68

68:                                               ; preds = %59, %67
  %69 = load i32, i32* %60, align 8
  %70 = add nsw i32 %69, %51
  tail call void @_ZN2v88internal4wasm19WasmFunctionBuilder12EmitGetLocalEj(%"class.v8::internal::wasm::WasmFunctionBuilder"* %64, i32 %70) #12
  %71 = load %"class.v8::internal::wasm::WasmFunctionBuilder"*, %"class.v8::internal::wasm::WasmFunctionBuilder"** %53, align 8
  tail call void @_ZN2v88internal4wasm19WasmFunctionBuilder4EmitENS1_10WasmOpcodeE(%"class.v8::internal::wasm::WasmFunctionBuilder"* %71, i32 107) #12
  %72 = load i32, i32* %50, align 8
  %73 = add nsw i32 %72, -1
  store i32 %73, i32* %50, align 8
  br label %244

74:                                               ; preds = %47
  %75 = tail call zeroext i1 @_ZN2v88internal4wasm7AsmType3IsAEPS2_(%"class.v8::internal::wasm::AsmType"* %43, %"class.v8::internal::wasm::AsmType"* nonnull inttoptr (i64 77 to %"class.v8::internal::wasm::AsmType"*)) #12
  br i1 %75, label %76, label %79

76:                                               ; preds = %74
  %77 = getelementptr inbounds %"class.v8::internal::wasm::AsmJsParser", %"class.v8::internal::wasm::AsmJsParser"* %0, i64 0, i32 3
  %78 = load %"class.v8::internal::wasm::WasmFunctionBuilder"*, %"class.v8::internal::wasm::WasmFunctionBuilder"** %77, align 8
  tail call void @_ZN2v88internal4wasm19WasmFunctionBuilder4EmitENS1_10WasmOpcodeE(%"class.v8::internal::wasm::WasmFunctionBuilder"* %78, i32 154) #12
  br label %244

79:                                               ; preds = %74
  %80 = tail call zeroext i1 @_ZN2v88internal4wasm7AsmType3IsAEPS2_(%"class.v8::internal::wasm::AsmType"* %43, %"class.v8::internal::wasm::AsmType"* nonnull inttoptr (i64 24589 to %"class.v8::internal::wasm::AsmType"*)) #12
  br i1 %80, label %81, label %84

81:                                               ; preds = %79
  %82 = getelementptr inbounds %"class.v8::internal::wasm::AsmJsParser", %"class.v8::internal::wasm::AsmJsParser"* %0, i64 0, i32 3
  %83 = load %"class.v8::internal::wasm::WasmFunctionBuilder"*, %"class.v8::internal::wasm::WasmFunctionBuilder"** %82, align 8
  tail call void @_ZN2v88internal4wasm19WasmFunctionBuilder4EmitENS1_10WasmOpcodeE(%"class.v8::internal::wasm::WasmFunctionBuilder"* %83, i32 140) #12
  br label %244

84:                                               ; preds = %79
  store i8 1, i8* %44, align 4
  %85 = getelementptr inbounds %"class.v8::internal::wasm::AsmJsParser", %"class.v8::internal::wasm::AsmJsParser"* %0, i64 0, i32 18
  store i8* getelementptr inbounds ([28 x i8], [28 x i8]* @.str.67, i64 0, i64 0), i8** %85, align 8
  %86 = getelementptr inbounds %"class.v8::internal::wasm::AsmJsParser", %"class.v8::internal::wasm::AsmJsParser"* %0, i64 0, i32 1, i32 5
  %87 = load i64, i64* %86, align 8
  %88 = trunc i64 %87 to i32
  %89 = getelementptr inbounds %"class.v8::internal::wasm::AsmJsParser", %"class.v8::internal::wasm::AsmJsParser"* %0, i64 0, i32 19
  store i32 %88, i32* %89, align 8
  br label %246

90:                                               ; preds = %1
  %91 = getelementptr inbounds %"class.v8::internal::wasm::AsmJsParser", %"class.v8::internal::wasm::AsmJsParser"* %0, i64 0, i32 34
  store %"class.v8::internal::wasm::AsmType"* inttoptr (i64 237 to %"class.v8::internal::wasm::AsmType"*), %"class.v8::internal::wasm::AsmType"** %91, align 8
  %92 = getelementptr inbounds %"class.v8::internal::wasm::AsmJsParser", %"class.v8::internal::wasm::AsmJsParser"* %0, i64 0, i32 1
  %93 = getelementptr inbounds %"class.v8::internal::wasm::AsmJsParser", %"class.v8::internal::wasm::AsmJsParser"* %0, i64 0, i32 1, i32 5
  %94 = load i64, i64* %93, align 8
  %95 = getelementptr inbounds %"class.v8::internal::wasm::AsmJsParser", %"class.v8::internal::wasm::AsmJsParser"* %0, i64 0, i32 35
  store i64 %94, i64* %95, align 8
  tail call void @_ZN2v88internal12AsmJsScanner4NextEv(%"class.v8::internal::AsmJsScanner"* %92) #12
  %96 = tail call i64 @_ZN2v88internal23GetCurrentStackPositionEv() #12
  %97 = getelementptr inbounds %"class.v8::internal::wasm::AsmJsParser", %"class.v8::internal::wasm::AsmJsParser"* %0, i64 0, i32 5
  %98 = load i64, i64* %97, align 8
  %99 = icmp ult i64 %96, %98
  br i1 %99, label %100, label %106

100:                                              ; preds = %90
  %101 = getelementptr inbounds %"class.v8::internal::wasm::AsmJsParser", %"class.v8::internal::wasm::AsmJsParser"* %0, i64 0, i32 17
  store i8 1, i8* %101, align 4
  %102 = getelementptr inbounds %"class.v8::internal::wasm::AsmJsParser", %"class.v8::internal::wasm::AsmJsParser"* %0, i64 0, i32 18
  store i8* getelementptr inbounds ([44 x i8], [44 x i8]* @.str.2, i64 0, i64 0), i8** %102, align 8
  %103 = load i64, i64* %93, align 8
  %104 = trunc i64 %103 to i32
  %105 = getelementptr inbounds %"class.v8::internal::wasm::AsmJsParser", %"class.v8::internal::wasm::AsmJsParser"* %0, i64 0, i32 19
  store i32 %104, i32* %105, align 8
  br label %246

106:                                              ; preds = %90
  %107 = tail call %"class.v8::internal::wasm::AsmType"* @_ZN2v88internal4wasm11AsmJsParser15UnaryExpressionEv(%"class.v8::internal::wasm::AsmJsParser"* %0)
  %108 = getelementptr inbounds %"class.v8::internal::wasm::AsmJsParser", %"class.v8::internal::wasm::AsmJsParser"* %0, i64 0, i32 17
  %109 = load i8, i8* %108, align 4, !range !69
  %110 = icmp eq i8 %109, 0
  br i1 %110, label %111, label %246

111:                                              ; preds = %106
  %112 = tail call zeroext i1 @_ZN2v88internal4wasm7AsmType3IsAEPS2_(%"class.v8::internal::wasm::AsmType"* %107, %"class.v8::internal::wasm::AsmType"* nonnull inttoptr (i64 1825 to %"class.v8::internal::wasm::AsmType"*)) #12
  br i1 %112, label %113, label %116

113:                                              ; preds = %111
  %114 = getelementptr inbounds %"class.v8::internal::wasm::AsmJsParser", %"class.v8::internal::wasm::AsmJsParser"* %0, i64 0, i32 3
  %115 = load %"class.v8::internal::wasm::WasmFunctionBuilder"*, %"class.v8::internal::wasm::WasmFunctionBuilder"** %114, align 8
  tail call void @_ZN2v88internal4wasm19WasmFunctionBuilder4EmitENS1_10WasmOpcodeE(%"class.v8::internal::wasm::WasmFunctionBuilder"* %115, i32 183) #12
  br label %244

116:                                              ; preds = %111
  %117 = tail call zeroext i1 @_ZN2v88internal4wasm7AsmType3IsAEPS2_(%"class.v8::internal::wasm::AsmType"* %107, %"class.v8::internal::wasm::AsmType"* nonnull inttoptr (i64 2817 to %"class.v8::internal::wasm::AsmType"*)) #12
  br i1 %117, label %118, label %121

118:                                              ; preds = %116
  %119 = getelementptr inbounds %"class.v8::internal::wasm::AsmJsParser", %"class.v8::internal::wasm::AsmJsParser"* %0, i64 0, i32 3
  %120 = load %"class.v8::internal::wasm::WasmFunctionBuilder"*, %"class.v8::internal::wasm::WasmFunctionBuilder"** %119, align 8
  tail call void @_ZN2v88internal4wasm19WasmFunctionBuilder4EmitENS1_10WasmOpcodeE(%"class.v8::internal::wasm::WasmFunctionBuilder"* %120, i32 184) #12
  br label %244

121:                                              ; preds = %116
  %122 = tail call zeroext i1 @_ZN2v88internal4wasm7AsmType3IsAEPS2_(%"class.v8::internal::wasm::AsmType"* %107, %"class.v8::internal::wasm::AsmType"* nonnull inttoptr (i64 77 to %"class.v8::internal::wasm::AsmType"*)) #12
  br i1 %122, label %244, label %123

123:                                              ; preds = %121
  %124 = tail call zeroext i1 @_ZN2v88internal4wasm7AsmType3IsAEPS2_(%"class.v8::internal::wasm::AsmType"* %107, %"class.v8::internal::wasm::AsmType"* nonnull inttoptr (i64 24589 to %"class.v8::internal::wasm::AsmType"*)) #12
  br i1 %124, label %125, label %128

125:                                              ; preds = %123
  %126 = getelementptr inbounds %"class.v8::internal::wasm::AsmJsParser", %"class.v8::internal::wasm::AsmJsParser"* %0, i64 0, i32 3
  %127 = load %"class.v8::internal::wasm::WasmFunctionBuilder"*, %"class.v8::internal::wasm::WasmFunctionBuilder"** %126, align 8
  tail call void @_ZN2v88internal4wasm19WasmFunctionBuilder4EmitENS1_10WasmOpcodeE(%"class.v8::internal::wasm::WasmFunctionBuilder"* %127, i32 187) #12
  br label %244

128:                                              ; preds = %123
  store i8 1, i8* %108, align 4
  %129 = getelementptr inbounds %"class.v8::internal::wasm::AsmJsParser", %"class.v8::internal::wasm::AsmJsParser"* %0, i64 0, i32 18
  store i8* getelementptr inbounds ([40 x i8], [40 x i8]* @.str.68, i64 0, i64 0), i8** %129, align 8
  %130 = load i64, i64* %93, align 8
  %131 = trunc i64 %130 to i32
  %132 = getelementptr inbounds %"class.v8::internal::wasm::AsmJsParser", %"class.v8::internal::wasm::AsmJsParser"* %0, i64 0, i32 19
  store i32 %131, i32* %132, align 8
  br label %246

133:                                              ; preds = %1
  %134 = getelementptr inbounds %"class.v8::internal::wasm::AsmJsParser", %"class.v8::internal::wasm::AsmJsParser"* %0, i64 0, i32 1
  tail call void @_ZN2v88internal12AsmJsScanner4NextEv(%"class.v8::internal::AsmJsScanner"* %134) #12
  %135 = tail call i64 @_ZN2v88internal23GetCurrentStackPositionEv() #12
  %136 = getelementptr inbounds %"class.v8::internal::wasm::AsmJsParser", %"class.v8::internal::wasm::AsmJsParser"* %0, i64 0, i32 5
  %137 = load i64, i64* %136, align 8
  %138 = icmp ult i64 %135, %137
  br i1 %138, label %139, label %146

139:                                              ; preds = %133
  %140 = getelementptr inbounds %"class.v8::internal::wasm::AsmJsParser", %"class.v8::internal::wasm::AsmJsParser"* %0, i64 0, i32 17
  store i8 1, i8* %140, align 4
  %141 = getelementptr inbounds %"class.v8::internal::wasm::AsmJsParser", %"class.v8::internal::wasm::AsmJsParser"* %0, i64 0, i32 18
  store i8* getelementptr inbounds ([44 x i8], [44 x i8]* @.str.2, i64 0, i64 0), i8** %141, align 8
  %142 = getelementptr inbounds %"class.v8::internal::wasm::AsmJsParser", %"class.v8::internal::wasm::AsmJsParser"* %0, i64 0, i32 1, i32 5
  %143 = load i64, i64* %142, align 8
  %144 = trunc i64 %143 to i32
  %145 = getelementptr inbounds %"class.v8::internal::wasm::AsmJsParser", %"class.v8::internal::wasm::AsmJsParser"* %0, i64 0, i32 19
  store i32 %144, i32* %145, align 8
  br label %246

146:                                              ; preds = %133
  %147 = tail call %"class.v8::internal::wasm::AsmType"* @_ZN2v88internal4wasm11AsmJsParser15UnaryExpressionEv(%"class.v8::internal::wasm::AsmJsParser"* %0)
  %148 = getelementptr inbounds %"class.v8::internal::wasm::AsmJsParser", %"class.v8::internal::wasm::AsmJsParser"* %0, i64 0, i32 17
  %149 = load i8, i8* %148, align 4, !range !69
  %150 = icmp eq i8 %149, 0
  br i1 %150, label %151, label %246

151:                                              ; preds = %146
  %152 = tail call zeroext i1 @_ZN2v88internal4wasm7AsmType3IsAEPS2_(%"class.v8::internal::wasm::AsmType"* %147, %"class.v8::internal::wasm::AsmType"* nonnull inttoptr (i64 769 to %"class.v8::internal::wasm::AsmType"*)) #12
  br i1 %152, label %159, label %153

153:                                              ; preds = %151
  store i8 1, i8* %148, align 4
  %154 = getelementptr inbounds %"class.v8::internal::wasm::AsmJsParser", %"class.v8::internal::wasm::AsmJsParser"* %0, i64 0, i32 18
  store i8* getelementptr inbounds ([13 x i8], [13 x i8]* @.str.69, i64 0, i64 0), i8** %154, align 8
  %155 = getelementptr inbounds %"class.v8::internal::wasm::AsmJsParser", %"class.v8::internal::wasm::AsmJsParser"* %0, i64 0, i32 1, i32 5
  %156 = load i64, i64* %155, align 8
  %157 = trunc i64 %156 to i32
  %158 = getelementptr inbounds %"class.v8::internal::wasm::AsmJsParser", %"class.v8::internal::wasm::AsmJsParser"* %0, i64 0, i32 19
  store i32 %157, i32* %158, align 8
  br label %246

159:                                              ; preds = %151
  %160 = getelementptr inbounds %"class.v8::internal::wasm::AsmJsParser", %"class.v8::internal::wasm::AsmJsParser"* %0, i64 0, i32 3
  %161 = load %"class.v8::internal::wasm::WasmFunctionBuilder"*, %"class.v8::internal::wasm::WasmFunctionBuilder"** %160, align 8
  tail call void @_ZN2v88internal4wasm19WasmFunctionBuilder4EmitENS1_10WasmOpcodeE(%"class.v8::internal::wasm::WasmFunctionBuilder"* %161, i32 69) #12
  br label %244

162:                                              ; preds = %1
  %163 = getelementptr inbounds %"class.v8::internal::wasm::AsmJsParser", %"class.v8::internal::wasm::AsmJsParser"* %0, i64 0, i32 1
  tail call void @_ZN2v88internal12AsmJsScanner4NextEv(%"class.v8::internal::AsmJsScanner"* %163) #12
  %164 = load i32, i32* %2, align 8
  %165 = icmp eq i32 %164, 126
  br i1 %165, label %166, label %167

166:                                              ; preds = %162
  tail call void @_ZN2v88internal12AsmJsScanner4NextEv(%"class.v8::internal::AsmJsScanner"* %163) #12
  br label %167

167:                                              ; preds = %162, %166
  %168 = phi i1 [ true, %166 ], [ false, %162 ]
  %169 = tail call i64 @_ZN2v88internal23GetCurrentStackPositionEv() #12
  %170 = getelementptr inbounds %"class.v8::internal::wasm::AsmJsParser", %"class.v8::internal::wasm::AsmJsParser"* %0, i64 0, i32 5
  %171 = load i64, i64* %170, align 8
  %172 = icmp ult i64 %169, %171
  br i1 %168, label %173, label %202

173:                                              ; preds = %167
  br i1 %172, label %174, label %181

174:                                              ; preds = %173
  %175 = getelementptr inbounds %"class.v8::internal::wasm::AsmJsParser", %"class.v8::internal::wasm::AsmJsParser"* %0, i64 0, i32 17
  store i8 1, i8* %175, align 4
  %176 = getelementptr inbounds %"class.v8::internal::wasm::AsmJsParser", %"class.v8::internal::wasm::AsmJsParser"* %0, i64 0, i32 18
  store i8* getelementptr inbounds ([44 x i8], [44 x i8]* @.str.2, i64 0, i64 0), i8** %176, align 8
  %177 = getelementptr inbounds %"class.v8::internal::wasm::AsmJsParser", %"class.v8::internal::wasm::AsmJsParser"* %0, i64 0, i32 1, i32 5
  %178 = load i64, i64* %177, align 8
  %179 = trunc i64 %178 to i32
  %180 = getelementptr inbounds %"class.v8::internal::wasm::AsmJsParser", %"class.v8::internal::wasm::AsmJsParser"* %0, i64 0, i32 19
  store i32 %179, i32* %180, align 8
  br label %246

181:                                              ; preds = %173
  %182 = tail call %"class.v8::internal::wasm::AsmType"* @_ZN2v88internal4wasm11AsmJsParser15UnaryExpressionEv(%"class.v8::internal::wasm::AsmJsParser"* %0)
  %183 = getelementptr inbounds %"class.v8::internal::wasm::AsmJsParser", %"class.v8::internal::wasm::AsmJsParser"* %0, i64 0, i32 17
  %184 = load i8, i8* %183, align 4, !range !69
  %185 = icmp eq i8 %184, 0
  br i1 %185, label %186, label %246

186:                                              ; preds = %181
  %187 = tail call zeroext i1 @_ZN2v88internal4wasm7AsmType3IsAEPS2_(%"class.v8::internal::wasm::AsmType"* %182, %"class.v8::internal::wasm::AsmType"* nonnull inttoptr (i64 237 to %"class.v8::internal::wasm::AsmType"*)) #12
  br i1 %187, label %188, label %191

188:                                              ; preds = %186
  %189 = getelementptr inbounds %"class.v8::internal::wasm::AsmJsParser", %"class.v8::internal::wasm::AsmJsParser"* %0, i64 0, i32 3
  %190 = load %"class.v8::internal::wasm::WasmFunctionBuilder"*, %"class.v8::internal::wasm::WasmFunctionBuilder"** %189, align 8
  tail call void @_ZN2v88internal4wasm19WasmFunctionBuilder4EmitENS1_10WasmOpcodeE(%"class.v8::internal::wasm::WasmFunctionBuilder"* %190, i32 249) #12
  br label %244

191:                                              ; preds = %186
  %192 = tail call zeroext i1 @_ZN2v88internal4wasm7AsmType3IsAEPS2_(%"class.v8::internal::wasm::AsmType"* %182, %"class.v8::internal::wasm::AsmType"* nonnull inttoptr (i64 24589 to %"class.v8::internal::wasm::AsmType"*)) #12
  br i1 %192, label %193, label %196

193:                                              ; preds = %191
  %194 = getelementptr inbounds %"class.v8::internal::wasm::AsmJsParser", %"class.v8::internal::wasm::AsmJsParser"* %0, i64 0, i32 3
  %195 = load %"class.v8::internal::wasm::WasmFunctionBuilder"*, %"class.v8::internal::wasm::WasmFunctionBuilder"** %194, align 8
  tail call void @_ZN2v88internal4wasm19WasmFunctionBuilder4EmitENS1_10WasmOpcodeE(%"class.v8::internal::wasm::WasmFunctionBuilder"* %195, i32 247) #12
  br label %244

196:                                              ; preds = %191
  store i8 1, i8* %183, align 4
  %197 = getelementptr inbounds %"class.v8::internal::wasm::AsmJsParser", %"class.v8::internal::wasm::AsmJsParser"* %0, i64 0, i32 18
  store i8* getelementptr inbounds ([26 x i8], [26 x i8]* @.str.70, i64 0, i64 0), i8** %197, align 8
  %198 = getelementptr inbounds %"class.v8::internal::wasm::AsmJsParser", %"class.v8::internal::wasm::AsmJsParser"* %0, i64 0, i32 1, i32 5
  %199 = load i64, i64* %198, align 8
  %200 = trunc i64 %199 to i32
  %201 = getelementptr inbounds %"class.v8::internal::wasm::AsmJsParser", %"class.v8::internal::wasm::AsmJsParser"* %0, i64 0, i32 19
  store i32 %200, i32* %201, align 8
  br label %246

202:                                              ; preds = %167
  br i1 %172, label %203, label %210

203:                                              ; preds = %202
  %204 = getelementptr inbounds %"class.v8::internal::wasm::AsmJsParser", %"class.v8::internal::wasm::AsmJsParser"* %0, i64 0, i32 17
  store i8 1, i8* %204, align 4
  %205 = getelementptr inbounds %"class.v8::internal::wasm::AsmJsParser", %"class.v8::internal::wasm::AsmJsParser"* %0, i64 0, i32 18
  store i8* getelementptr inbounds ([44 x i8], [44 x i8]* @.str.2, i64 0, i64 0), i8** %205, align 8
  %206 = getelementptr inbounds %"class.v8::internal::wasm::AsmJsParser", %"class.v8::internal::wasm::AsmJsParser"* %0, i64 0, i32 1, i32 5
  %207 = load i64, i64* %206, align 8
  %208 = trunc i64 %207 to i32
  %209 = getelementptr inbounds %"class.v8::internal::wasm::AsmJsParser", %"class.v8::internal::wasm::AsmJsParser"* %0, i64 0, i32 19
  store i32 %208, i32* %209, align 8
  br label %246

210:                                              ; preds = %202
  %211 = tail call %"class.v8::internal::wasm::AsmType"* @_ZN2v88internal4wasm11AsmJsParser15UnaryExpressionEv(%"class.v8::internal::wasm::AsmJsParser"* %0)
  %212 = getelementptr inbounds %"class.v8::internal::wasm::AsmJsParser", %"class.v8::internal::wasm::AsmJsParser"* %0, i64 0, i32 17
  %213 = load i8, i8* %212, align 4, !range !69
  %214 = icmp eq i8 %213, 0
  br i1 %214, label %215, label %246

215:                                              ; preds = %210
  %216 = tail call zeroext i1 @_ZN2v88internal4wasm7AsmType3IsAEPS2_(%"class.v8::internal::wasm::AsmType"* %211, %"class.v8::internal::wasm::AsmType"* nonnull inttoptr (i64 257 to %"class.v8::internal::wasm::AsmType"*)) #12
  br i1 %216, label %223, label %217

217:                                              ; preds = %215
  store i8 1, i8* %212, align 4
  %218 = getelementptr inbounds %"class.v8::internal::wasm::AsmJsParser", %"class.v8::internal::wasm::AsmJsParser"* %0, i64 0, i32 18
  store i8* getelementptr inbounds ([26 x i8], [26 x i8]* @.str.71, i64 0, i64 0), i8** %218, align 8
  %219 = getelementptr inbounds %"class.v8::internal::wasm::AsmJsParser", %"class.v8::internal::wasm::AsmJsParser"* %0, i64 0, i32 1, i32 5
  %220 = load i64, i64* %219, align 8
  %221 = trunc i64 %220 to i32
  %222 = getelementptr inbounds %"class.v8::internal::wasm::AsmJsParser", %"class.v8::internal::wasm::AsmJsParser"* %0, i64 0, i32 19
  store i32 %221, i32* %222, align 8
  br label %246

223:                                              ; preds = %215
  %224 = getelementptr inbounds %"class.v8::internal::wasm::AsmJsParser", %"class.v8::internal::wasm::AsmJsParser"* %0, i64 0, i32 3
  %225 = load %"class.v8::internal::wasm::WasmFunctionBuilder"*, %"class.v8::internal::wasm::WasmFunctionBuilder"** %224, align 8
  tail call void @_ZN2v88internal4wasm19WasmFunctionBuilder12EmitI32ConstEi(%"class.v8::internal::wasm::WasmFunctionBuilder"* %225, i32 -1) #12
  %226 = load %"class.v8::internal::wasm::WasmFunctionBuilder"*, %"class.v8::internal::wasm::WasmFunctionBuilder"** %224, align 8
  tail call void @_ZN2v88internal4wasm19WasmFunctionBuilder4EmitENS1_10WasmOpcodeE(%"class.v8::internal::wasm::WasmFunctionBuilder"* %226, i32 115) #12
  br label %244

227:                                              ; preds = %1
  %228 = tail call i64 @_ZN2v88internal23GetCurrentStackPositionEv() #12
  %229 = getelementptr inbounds %"class.v8::internal::wasm::AsmJsParser", %"class.v8::internal::wasm::AsmJsParser"* %0, i64 0, i32 5
  %230 = load i64, i64* %229, align 8
  %231 = icmp ult i64 %228, %230
  br i1 %231, label %232, label %239

232:                                              ; preds = %227
  %233 = getelementptr inbounds %"class.v8::internal::wasm::AsmJsParser", %"class.v8::internal::wasm::AsmJsParser"* %0, i64 0, i32 17
  store i8 1, i8* %233, align 4
  %234 = getelementptr inbounds %"class.v8::internal::wasm::AsmJsParser", %"class.v8::internal::wasm::AsmJsParser"* %0, i64 0, i32 18
  store i8* getelementptr inbounds ([44 x i8], [44 x i8]* @.str.2, i64 0, i64 0), i8** %234, align 8
  %235 = getelementptr inbounds %"class.v8::internal::wasm::AsmJsParser", %"class.v8::internal::wasm::AsmJsParser"* %0, i64 0, i32 1, i32 5
  %236 = load i64, i64* %235, align 8
  %237 = trunc i64 %236 to i32
  %238 = getelementptr inbounds %"class.v8::internal::wasm::AsmJsParser", %"class.v8::internal::wasm::AsmJsParser"* %0, i64 0, i32 19
  store i32 %237, i32* %238, align 8
  br label %246

239:                                              ; preds = %227
  %240 = tail call %"class.v8::internal::wasm::AsmType"* @_ZN2v88internal4wasm11AsmJsParser14CallExpressionEv(%"class.v8::internal::wasm::AsmJsParser"* %0)
  %241 = getelementptr inbounds %"class.v8::internal::wasm::AsmJsParser", %"class.v8::internal::wasm::AsmJsParser"* %0, i64 0, i32 17
  %242 = load i8, i8* %241, align 4, !range !69
  %243 = icmp eq i8 %242, 0
  br i1 %243, label %244, label %246

244:                                              ; preds = %17, %12, %76, %81, %68, %188, %193, %121, %239, %118, %125, %113, %223, %159
  %245 = phi %"class.v8::internal::wasm::AsmType"* [ inttoptr (i64 237 to %"class.v8::internal::wasm::AsmType"*), %113 ], [ inttoptr (i64 237 to %"class.v8::internal::wasm::AsmType"*), %118 ], [ inttoptr (i64 237 to %"class.v8::internal::wasm::AsmType"*), %125 ], [ %147, %159 ], [ inttoptr (i64 1825 to %"class.v8::internal::wasm::AsmType"*), %223 ], [ %240, %239 ], [ inttoptr (i64 237 to %"class.v8::internal::wasm::AsmType"*), %121 ], [ inttoptr (i64 1825 to %"class.v8::internal::wasm::AsmType"*), %193 ], [ inttoptr (i64 1825 to %"class.v8::internal::wasm::AsmType"*), %188 ], [ inttoptr (i64 8197 to %"class.v8::internal::wasm::AsmType"*), %81 ], [ inttoptr (i64 237 to %"class.v8::internal::wasm::AsmType"*), %76 ], [ inttoptr (i64 257 to %"class.v8::internal::wasm::AsmType"*), %68 ], [ inttoptr (i64 1825 to %"class.v8::internal::wasm::AsmType"*), %17 ], [ inttoptr (i64 237 to %"class.v8::internal::wasm::AsmType"*), %12 ]
  br label %246

246:                                              ; preds = %23, %35, %84, %42, %239, %210, %181, %146, %106, %244, %232, %217, %203, %196, %174, %153, %139, %128, %100
  %247 = phi %"class.v8::internal::wasm::AsmType"* [ %245, %244 ], [ null, %100 ], [ null, %128 ], [ null, %139 ], [ null, %153 ], [ null, %174 ], [ null, %196 ], [ null, %203 ], [ null, %217 ], [ null, %232 ], [ null, %106 ], [ null, %146 ], [ null, %181 ], [ null, %210 ], [ null, %239 ], [ null, %42 ], [ null, %84 ], [ null, %35 ], [ null, %23 ]
  ret %"class.v8::internal::wasm::AsmType"* %247
}

; Function Attrs: nounwind ssp uwtable
define hidden %"class.v8::internal::wasm::AsmType"* @_ZN2v88internal4wasm11AsmJsParser24MultiplicativeExpressionEv(%"class.v8::internal::wasm::AsmJsParser"*) local_unnamed_addr #0 align 2 {
  %2 = getelementptr inbounds %"class.v8::internal::wasm::AsmJsParser", %"class.v8::internal::wasm::AsmJsParser"* %0, i64 0, i32 1
  %3 = getelementptr inbounds %"class.v8::internal::wasm::AsmJsParser", %"class.v8::internal::wasm::AsmJsParser"* %0, i64 0, i32 1, i32 1
  %4 = load i32, i32* %3, align 8
  switch i32 %4, label %116 [
    i32 -3, label %5
    i32 45, label %58
  ]

5:                                                ; preds = %1
  %6 = getelementptr inbounds %"class.v8::internal::wasm::AsmJsParser", %"class.v8::internal::wasm::AsmJsParser"* %0, i64 0, i32 1, i32 19
  %7 = load i32, i32* %6, align 8
  %8 = icmp ult i32 %7, 1048576
  br i1 %8, label %9, label %116

9:                                                ; preds = %5
  tail call void @_ZN2v88internal12AsmJsScanner4NextEv(%"class.v8::internal::AsmJsScanner"* %2) #12
  %10 = load i32, i32* %3, align 8
  %11 = icmp eq i32 %10, 42
  br i1 %11, label %12, label %41

12:                                               ; preds = %9
  tail call void @_ZN2v88internal12AsmJsScanner4NextEv(%"class.v8::internal::AsmJsScanner"* %2) #12
  %13 = tail call i64 @_ZN2v88internal23GetCurrentStackPositionEv() #12
  %14 = getelementptr inbounds %"class.v8::internal::wasm::AsmJsParser", %"class.v8::internal::wasm::AsmJsParser"* %0, i64 0, i32 5
  %15 = load i64, i64* %14, align 8
  %16 = icmp ult i64 %13, %15
  br i1 %16, label %17, label %24

17:                                               ; preds = %12
  %18 = getelementptr inbounds %"class.v8::internal::wasm::AsmJsParser", %"class.v8::internal::wasm::AsmJsParser"* %0, i64 0, i32 17
  store i8 1, i8* %18, align 4
  %19 = getelementptr inbounds %"class.v8::internal::wasm::AsmJsParser", %"class.v8::internal::wasm::AsmJsParser"* %0, i64 0, i32 18
  store i8* getelementptr inbounds ([44 x i8], [44 x i8]* @.str.2, i64 0, i64 0), i8** %19, align 8
  %20 = getelementptr inbounds %"class.v8::internal::wasm::AsmJsParser", %"class.v8::internal::wasm::AsmJsParser"* %0, i64 0, i32 1, i32 5
  %21 = load i64, i64* %20, align 8
  %22 = trunc i64 %21 to i32
  %23 = getelementptr inbounds %"class.v8::internal::wasm::AsmJsParser", %"class.v8::internal::wasm::AsmJsParser"* %0, i64 0, i32 19
  store i32 %22, i32* %23, align 8
  br label %291

24:                                               ; preds = %12
  %25 = tail call %"class.v8::internal::wasm::AsmType"* @_ZN2v88internal4wasm11AsmJsParser15UnaryExpressionEv(%"class.v8::internal::wasm::AsmJsParser"* %0)
  %26 = getelementptr inbounds %"class.v8::internal::wasm::AsmJsParser", %"class.v8::internal::wasm::AsmJsParser"* %0, i64 0, i32 17
  %27 = load i8, i8* %26, align 4, !range !69
  %28 = icmp eq i8 %27, 0
  br i1 %28, label %29, label %291

29:                                               ; preds = %24
  %30 = tail call zeroext i1 @_ZN2v88internal4wasm7AsmType3IsAEPS2_(%"class.v8::internal::wasm::AsmType"* %25, %"class.v8::internal::wasm::AsmType"* nonnull inttoptr (i64 769 to %"class.v8::internal::wasm::AsmType"*)) #12
  br i1 %30, label %37, label %31

31:                                               ; preds = %29
  store i8 1, i8* %26, align 4
  %32 = getelementptr inbounds %"class.v8::internal::wasm::AsmJsParser", %"class.v8::internal::wasm::AsmJsParser"* %0, i64 0, i32 18
  store i8* getelementptr inbounds ([13 x i8], [13 x i8]* @.str.72, i64 0, i64 0), i8** %32, align 8
  %33 = getelementptr inbounds %"class.v8::internal::wasm::AsmJsParser", %"class.v8::internal::wasm::AsmJsParser"* %0, i64 0, i32 1, i32 5
  %34 = load i64, i64* %33, align 8
  %35 = trunc i64 %34 to i32
  %36 = getelementptr inbounds %"class.v8::internal::wasm::AsmJsParser", %"class.v8::internal::wasm::AsmJsParser"* %0, i64 0, i32 19
  store i32 %35, i32* %36, align 8
  br label %291

37:                                               ; preds = %29
  %38 = getelementptr inbounds %"class.v8::internal::wasm::AsmJsParser", %"class.v8::internal::wasm::AsmJsParser"* %0, i64 0, i32 3
  %39 = load %"class.v8::internal::wasm::WasmFunctionBuilder"*, %"class.v8::internal::wasm::WasmFunctionBuilder"** %38, align 8
  tail call void @_ZN2v88internal4wasm19WasmFunctionBuilder12EmitI32ConstEi(%"class.v8::internal::wasm::WasmFunctionBuilder"* %39, i32 %7) #12
  %40 = load %"class.v8::internal::wasm::WasmFunctionBuilder"*, %"class.v8::internal::wasm::WasmFunctionBuilder"** %38, align 8
  tail call void @_ZN2v88internal4wasm19WasmFunctionBuilder4EmitENS1_10WasmOpcodeE(%"class.v8::internal::wasm::WasmFunctionBuilder"* %40, i32 108) #12
  br label %291

41:                                               ; preds = %9
  tail call void @_ZN2v88internal12AsmJsScanner6RewindEv(%"class.v8::internal::AsmJsScanner"* %2) #12
  %42 = tail call i64 @_ZN2v88internal23GetCurrentStackPositionEv() #12
  %43 = getelementptr inbounds %"class.v8::internal::wasm::AsmJsParser", %"class.v8::internal::wasm::AsmJsParser"* %0, i64 0, i32 5
  %44 = load i64, i64* %43, align 8
  %45 = icmp ult i64 %42, %44
  br i1 %45, label %46, label %53

46:                                               ; preds = %41
  %47 = getelementptr inbounds %"class.v8::internal::wasm::AsmJsParser", %"class.v8::internal::wasm::AsmJsParser"* %0, i64 0, i32 17
  store i8 1, i8* %47, align 4
  %48 = getelementptr inbounds %"class.v8::internal::wasm::AsmJsParser", %"class.v8::internal::wasm::AsmJsParser"* %0, i64 0, i32 18
  store i8* getelementptr inbounds ([44 x i8], [44 x i8]* @.str.2, i64 0, i64 0), i8** %48, align 8
  %49 = getelementptr inbounds %"class.v8::internal::wasm::AsmJsParser", %"class.v8::internal::wasm::AsmJsParser"* %0, i64 0, i32 1, i32 5
  %50 = load i64, i64* %49, align 8
  %51 = trunc i64 %50 to i32
  %52 = getelementptr inbounds %"class.v8::internal::wasm::AsmJsParser", %"class.v8::internal::wasm::AsmJsParser"* %0, i64 0, i32 19
  store i32 %51, i32* %52, align 8
  br label %291

53:                                               ; preds = %41
  %54 = tail call %"class.v8::internal::wasm::AsmType"* @_ZN2v88internal4wasm11AsmJsParser15UnaryExpressionEv(%"class.v8::internal::wasm::AsmJsParser"* %0)
  %55 = getelementptr inbounds %"class.v8::internal::wasm::AsmJsParser", %"class.v8::internal::wasm::AsmJsParser"* %0, i64 0, i32 17
  %56 = load i8, i8* %55, align 4, !range !69
  %57 = icmp eq i8 %56, 0
  br i1 %57, label %133, label %291

58:                                               ; preds = %1
  tail call void @_ZN2v88internal12AsmJsScanner4NextEv(%"class.v8::internal::AsmJsScanner"* %2) #12
  %59 = load i32, i32* %3, align 8
  %60 = icmp eq i32 %59, -3
  br i1 %60, label %61, label %99

61:                                               ; preds = %58
  %62 = getelementptr inbounds %"class.v8::internal::wasm::AsmJsParser", %"class.v8::internal::wasm::AsmJsParser"* %0, i64 0, i32 1, i32 19
  %63 = load i32, i32* %62, align 8
  %64 = add i32 %63, -1
  %65 = icmp ult i32 %64, 1048575
  br i1 %65, label %66, label %99

66:                                               ; preds = %61
  tail call void @_ZN2v88internal12AsmJsScanner4NextEv(%"class.v8::internal::AsmJsScanner"* %2) #12
  %67 = sub nsw i32 0, %63
  %68 = getelementptr inbounds %"class.v8::internal::wasm::AsmJsParser", %"class.v8::internal::wasm::AsmJsParser"* %0, i64 0, i32 3
  %69 = load %"class.v8::internal::wasm::WasmFunctionBuilder"*, %"class.v8::internal::wasm::WasmFunctionBuilder"** %68, align 8
  tail call void @_ZN2v88internal4wasm19WasmFunctionBuilder12EmitI32ConstEi(%"class.v8::internal::wasm::WasmFunctionBuilder"* %69, i32 %67) #12
  %70 = load i32, i32* %3, align 8
  %71 = icmp eq i32 %70, 42
  br i1 %71, label %72, label %133

72:                                               ; preds = %66
  tail call void @_ZN2v88internal12AsmJsScanner4NextEv(%"class.v8::internal::AsmJsScanner"* %2) #12
  %73 = tail call i64 @_ZN2v88internal23GetCurrentStackPositionEv() #12
  %74 = getelementptr inbounds %"class.v8::internal::wasm::AsmJsParser", %"class.v8::internal::wasm::AsmJsParser"* %0, i64 0, i32 5
  %75 = load i64, i64* %74, align 8
  %76 = icmp ult i64 %73, %75
  br i1 %76, label %77, label %84

77:                                               ; preds = %72
  %78 = getelementptr inbounds %"class.v8::internal::wasm::AsmJsParser", %"class.v8::internal::wasm::AsmJsParser"* %0, i64 0, i32 17
  store i8 1, i8* %78, align 4
  %79 = getelementptr inbounds %"class.v8::internal::wasm::AsmJsParser", %"class.v8::internal::wasm::AsmJsParser"* %0, i64 0, i32 18
  store i8* getelementptr inbounds ([44 x i8], [44 x i8]* @.str.2, i64 0, i64 0), i8** %79, align 8
  %80 = getelementptr inbounds %"class.v8::internal::wasm::AsmJsParser", %"class.v8::internal::wasm::AsmJsParser"* %0, i64 0, i32 1, i32 5
  %81 = load i64, i64* %80, align 8
  %82 = trunc i64 %81 to i32
  %83 = getelementptr inbounds %"class.v8::internal::wasm::AsmJsParser", %"class.v8::internal::wasm::AsmJsParser"* %0, i64 0, i32 19
  store i32 %82, i32* %83, align 8
  br label %291

84:                                               ; preds = %72
  %85 = tail call %"class.v8::internal::wasm::AsmType"* @_ZN2v88internal4wasm11AsmJsParser15UnaryExpressionEv(%"class.v8::internal::wasm::AsmJsParser"* %0)
  %86 = getelementptr inbounds %"class.v8::internal::wasm::AsmJsParser", %"class.v8::internal::wasm::AsmJsParser"* %0, i64 0, i32 17
  %87 = load i8, i8* %86, align 4, !range !69
  %88 = icmp eq i8 %87, 0
  br i1 %88, label %89, label %291

89:                                               ; preds = %84
  %90 = tail call zeroext i1 @_ZN2v88internal4wasm7AsmType3IsAEPS2_(%"class.v8::internal::wasm::AsmType"* %85, %"class.v8::internal::wasm::AsmType"* nonnull inttoptr (i64 769 to %"class.v8::internal::wasm::AsmType"*)) #12
  br i1 %90, label %97, label %91

91:                                               ; preds = %89
  store i8 1, i8* %86, align 4
  %92 = getelementptr inbounds %"class.v8::internal::wasm::AsmJsParser", %"class.v8::internal::wasm::AsmJsParser"* %0, i64 0, i32 18
  store i8* getelementptr inbounds ([13 x i8], [13 x i8]* @.str.72, i64 0, i64 0), i8** %92, align 8
  %93 = getelementptr inbounds %"class.v8::internal::wasm::AsmJsParser", %"class.v8::internal::wasm::AsmJsParser"* %0, i64 0, i32 1, i32 5
  %94 = load i64, i64* %93, align 8
  %95 = trunc i64 %94 to i32
  %96 = getelementptr inbounds %"class.v8::internal::wasm::AsmJsParser", %"class.v8::internal::wasm::AsmJsParser"* %0, i64 0, i32 19
  store i32 %95, i32* %96, align 8
  br label %291

97:                                               ; preds = %89
  %98 = load %"class.v8::internal::wasm::WasmFunctionBuilder"*, %"class.v8::internal::wasm::WasmFunctionBuilder"** %68, align 8
  tail call void @_ZN2v88internal4wasm19WasmFunctionBuilder4EmitENS1_10WasmOpcodeE(%"class.v8::internal::wasm::WasmFunctionBuilder"* %98, i32 108) #12
  br label %291

99:                                               ; preds = %61, %58
  tail call void @_ZN2v88internal12AsmJsScanner6RewindEv(%"class.v8::internal::AsmJsScanner"* %2) #12
  %100 = tail call i64 @_ZN2v88internal23GetCurrentStackPositionEv() #12
  %101 = getelementptr inbounds %"class.v8::internal::wasm::AsmJsParser", %"class.v8::internal::wasm::AsmJsParser"* %0, i64 0, i32 5
  %102 = load i64, i64* %101, align 8
  %103 = icmp ult i64 %100, %102
  br i1 %103, label %104, label %111

104:                                              ; preds = %99
  %105 = getelementptr inbounds %"class.v8::internal::wasm::AsmJsParser", %"class.v8::internal::wasm::AsmJsParser"* %0, i64 0, i32 17
  store i8 1, i8* %105, align 4
  %106 = getelementptr inbounds %"class.v8::internal::wasm::AsmJsParser", %"class.v8::internal::wasm::AsmJsParser"* %0, i64 0, i32 18
  store i8* getelementptr inbounds ([44 x i8], [44 x i8]* @.str.2, i64 0, i64 0), i8** %106, align 8
  %107 = getelementptr inbounds %"class.v8::internal::wasm::AsmJsParser", %"class.v8::internal::wasm::AsmJsParser"* %0, i64 0, i32 1, i32 5
  %108 = load i64, i64* %107, align 8
  %109 = trunc i64 %108 to i32
  %110 = getelementptr inbounds %"class.v8::internal::wasm::AsmJsParser", %"class.v8::internal::wasm::AsmJsParser"* %0, i64 0, i32 19
  store i32 %109, i32* %110, align 8
  br label %291

111:                                              ; preds = %99
  %112 = tail call %"class.v8::internal::wasm::AsmType"* @_ZN2v88internal4wasm11AsmJsParser15UnaryExpressionEv(%"class.v8::internal::wasm::AsmJsParser"* %0)
  %113 = getelementptr inbounds %"class.v8::internal::wasm::AsmJsParser", %"class.v8::internal::wasm::AsmJsParser"* %0, i64 0, i32 17
  %114 = load i8, i8* %113, align 4, !range !69
  %115 = icmp eq i8 %114, 0
  br i1 %115, label %133, label %291

116:                                              ; preds = %1, %5
  %117 = tail call i64 @_ZN2v88internal23GetCurrentStackPositionEv() #12
  %118 = getelementptr inbounds %"class.v8::internal::wasm::AsmJsParser", %"class.v8::internal::wasm::AsmJsParser"* %0, i64 0, i32 5
  %119 = load i64, i64* %118, align 8
  %120 = icmp ult i64 %117, %119
  br i1 %120, label %121, label %128

121:                                              ; preds = %116
  %122 = getelementptr inbounds %"class.v8::internal::wasm::AsmJsParser", %"class.v8::internal::wasm::AsmJsParser"* %0, i64 0, i32 17
  store i8 1, i8* %122, align 4
  %123 = getelementptr inbounds %"class.v8::internal::wasm::AsmJsParser", %"class.v8::internal::wasm::AsmJsParser"* %0, i64 0, i32 18
  store i8* getelementptr inbounds ([44 x i8], [44 x i8]* @.str.2, i64 0, i64 0), i8** %123, align 8
  %124 = getelementptr inbounds %"class.v8::internal::wasm::AsmJsParser", %"class.v8::internal::wasm::AsmJsParser"* %0, i64 0, i32 1, i32 5
  %125 = load i64, i64* %124, align 8
  %126 = trunc i64 %125 to i32
  %127 = getelementptr inbounds %"class.v8::internal::wasm::AsmJsParser", %"class.v8::internal::wasm::AsmJsParser"* %0, i64 0, i32 19
  store i32 %126, i32* %127, align 8
  br label %291

128:                                              ; preds = %116
  %129 = tail call %"class.v8::internal::wasm::AsmType"* @_ZN2v88internal4wasm11AsmJsParser15UnaryExpressionEv(%"class.v8::internal::wasm::AsmJsParser"* %0)
  %130 = getelementptr inbounds %"class.v8::internal::wasm::AsmJsParser", %"class.v8::internal::wasm::AsmJsParser"* %0, i64 0, i32 17
  %131 = load i8, i8* %130, align 4, !range !69
  %132 = icmp eq i8 %131, 0
  br i1 %132, label %133, label %291

133:                                              ; preds = %66, %53, %111, %128
  %134 = phi %"class.v8::internal::wasm::AsmType"* [ %54, %53 ], [ %112, %111 ], [ %129, %128 ], [ inttoptr (i64 1825 to %"class.v8::internal::wasm::AsmType"*), %66 ]
  %135 = getelementptr inbounds %"class.v8::internal::wasm::AsmJsParser", %"class.v8::internal::wasm::AsmJsParser"* %0, i64 0, i32 5
  %136 = getelementptr inbounds %"class.v8::internal::wasm::AsmJsParser", %"class.v8::internal::wasm::AsmJsParser"* %0, i64 0, i32 17
  %137 = getelementptr inbounds %"class.v8::internal::wasm::AsmJsParser", %"class.v8::internal::wasm::AsmJsParser"* %0, i64 0, i32 3
  %138 = getelementptr inbounds %"class.v8::internal::wasm::AsmJsParser", %"class.v8::internal::wasm::AsmJsParser"* %0, i64 0, i32 1, i32 19
  br label %139

139:                                              ; preds = %287, %133
  %140 = phi %"class.v8::internal::wasm::AsmType"* [ %134, %133 ], [ %289, %287 ]
  %141 = load i32, i32* %3, align 8
  switch i32 %141, label %291 [
    i32 42, label %142
    i32 47, label %219
    i32 37, label %255
  ]

142:                                              ; preds = %139
  tail call void @_ZN2v88internal12AsmJsScanner4NextEv(%"class.v8::internal::AsmJsScanner"* %2) #12
  %143 = load i32, i32* %3, align 8
  switch i32 %143, label %191 [
    i32 45, label %144
    i32 -3, label %171
  ]

144:                                              ; preds = %142
  tail call void @_ZN2v88internal12AsmJsScanner4NextEv(%"class.v8::internal::AsmJsScanner"* %2) #12
  %145 = load i32, i32* %3, align 8
  %146 = icmp eq i32 %145, -3
  br i1 %146, label %147, label %170

147:                                              ; preds = %144
  %148 = load i32, i32* %138, align 8
  %149 = icmp eq i32 %148, 0
  br i1 %149, label %170, label %150

150:                                              ; preds = %147
  tail call void @_ZN2v88internal12AsmJsScanner4NextEv(%"class.v8::internal::AsmJsScanner"* %2) #12
  %151 = icmp ugt i32 %148, 1048575
  br i1 %151, label %152, label %158

152:                                              ; preds = %150
  store i8 1, i8* %136, align 4
  %153 = getelementptr inbounds %"class.v8::internal::wasm::AsmJsParser", %"class.v8::internal::wasm::AsmJsParser"* %0, i64 0, i32 18
  store i8* getelementptr inbounds ([31 x i8], [31 x i8]* @.str.73, i64 0, i64 0), i8** %153, align 8
  %154 = getelementptr inbounds %"class.v8::internal::wasm::AsmJsParser", %"class.v8::internal::wasm::AsmJsParser"* %0, i64 0, i32 1, i32 5
  %155 = load i64, i64* %154, align 8
  %156 = trunc i64 %155 to i32
  %157 = getelementptr inbounds %"class.v8::internal::wasm::AsmJsParser", %"class.v8::internal::wasm::AsmJsParser"* %0, i64 0, i32 19
  store i32 %156, i32* %157, align 8
  br label %291

158:                                              ; preds = %150
  %159 = tail call zeroext i1 @_ZN2v88internal4wasm7AsmType3IsAEPS2_(%"class.v8::internal::wasm::AsmType"* %140, %"class.v8::internal::wasm::AsmType"* nonnull inttoptr (i64 769 to %"class.v8::internal::wasm::AsmType"*)) #12
  br i1 %159, label %166, label %160

160:                                              ; preds = %158
  store i8 1, i8* %136, align 4
  %161 = getelementptr inbounds %"class.v8::internal::wasm::AsmJsParser", %"class.v8::internal::wasm::AsmJsParser"* %0, i64 0, i32 18
  store i8* getelementptr inbounds ([32 x i8], [32 x i8]* @.str.74, i64 0, i64 0), i8** %161, align 8
  %162 = getelementptr inbounds %"class.v8::internal::wasm::AsmJsParser", %"class.v8::internal::wasm::AsmJsParser"* %0, i64 0, i32 1, i32 5
  %163 = load i64, i64* %162, align 8
  %164 = trunc i64 %163 to i32
  %165 = getelementptr inbounds %"class.v8::internal::wasm::AsmJsParser", %"class.v8::internal::wasm::AsmJsParser"* %0, i64 0, i32 19
  store i32 %164, i32* %165, align 8
  br label %291

166:                                              ; preds = %158
  %167 = sub nsw i32 0, %148
  %168 = load %"class.v8::internal::wasm::WasmFunctionBuilder"*, %"class.v8::internal::wasm::WasmFunctionBuilder"** %137, align 8
  tail call void @_ZN2v88internal4wasm19WasmFunctionBuilder12EmitI32ConstEi(%"class.v8::internal::wasm::WasmFunctionBuilder"* %168, i32 %167) #12
  %169 = load %"class.v8::internal::wasm::WasmFunctionBuilder"*, %"class.v8::internal::wasm::WasmFunctionBuilder"** %137, align 8
  tail call void @_ZN2v88internal4wasm19WasmFunctionBuilder4EmitENS1_10WasmOpcodeE(%"class.v8::internal::wasm::WasmFunctionBuilder"* %169, i32 108) #12
  br label %291

170:                                              ; preds = %144, %147
  tail call void @_ZN2v88internal12AsmJsScanner6RewindEv(%"class.v8::internal::AsmJsScanner"* %2) #12
  br label %191

171:                                              ; preds = %142
  %172 = load i32, i32* %138, align 8
  tail call void @_ZN2v88internal12AsmJsScanner4NextEv(%"class.v8::internal::AsmJsScanner"* %2) #12
  %173 = icmp ugt i32 %172, 1048575
  br i1 %173, label %174, label %180

174:                                              ; preds = %171
  store i8 1, i8* %136, align 4
  %175 = getelementptr inbounds %"class.v8::internal::wasm::AsmJsParser", %"class.v8::internal::wasm::AsmJsParser"* %0, i64 0, i32 18
  store i8* getelementptr inbounds ([31 x i8], [31 x i8]* @.str.73, i64 0, i64 0), i8** %175, align 8
  %176 = getelementptr inbounds %"class.v8::internal::wasm::AsmJsParser", %"class.v8::internal::wasm::AsmJsParser"* %0, i64 0, i32 1, i32 5
  %177 = load i64, i64* %176, align 8
  %178 = trunc i64 %177 to i32
  %179 = getelementptr inbounds %"class.v8::internal::wasm::AsmJsParser", %"class.v8::internal::wasm::AsmJsParser"* %0, i64 0, i32 19
  store i32 %178, i32* %179, align 8
  br label %291

180:                                              ; preds = %171
  %181 = tail call zeroext i1 @_ZN2v88internal4wasm7AsmType3IsAEPS2_(%"class.v8::internal::wasm::AsmType"* %140, %"class.v8::internal::wasm::AsmType"* nonnull inttoptr (i64 769 to %"class.v8::internal::wasm::AsmType"*)) #12
  br i1 %181, label %188, label %182

182:                                              ; preds = %180
  store i8 1, i8* %136, align 4
  %183 = getelementptr inbounds %"class.v8::internal::wasm::AsmJsParser", %"class.v8::internal::wasm::AsmJsParser"* %0, i64 0, i32 18
  store i8* getelementptr inbounds ([32 x i8], [32 x i8]* @.str.74, i64 0, i64 0), i8** %183, align 8
  %184 = getelementptr inbounds %"class.v8::internal::wasm::AsmJsParser", %"class.v8::internal::wasm::AsmJsParser"* %0, i64 0, i32 1, i32 5
  %185 = load i64, i64* %184, align 8
  %186 = trunc i64 %185 to i32
  %187 = getelementptr inbounds %"class.v8::internal::wasm::AsmJsParser", %"class.v8::internal::wasm::AsmJsParser"* %0, i64 0, i32 19
  store i32 %186, i32* %187, align 8
  br label %291

188:                                              ; preds = %180
  %189 = load %"class.v8::internal::wasm::WasmFunctionBuilder"*, %"class.v8::internal::wasm::WasmFunctionBuilder"** %137, align 8
  tail call void @_ZN2v88internal4wasm19WasmFunctionBuilder12EmitI32ConstEi(%"class.v8::internal::wasm::WasmFunctionBuilder"* %189, i32 %172) #12
  %190 = load %"class.v8::internal::wasm::WasmFunctionBuilder"*, %"class.v8::internal::wasm::WasmFunctionBuilder"** %137, align 8
  tail call void @_ZN2v88internal4wasm19WasmFunctionBuilder4EmitENS1_10WasmOpcodeE(%"class.v8::internal::wasm::WasmFunctionBuilder"* %190, i32 108) #12
  br label %291

191:                                              ; preds = %142, %170
  %192 = tail call i64 @_ZN2v88internal23GetCurrentStackPositionEv() #12
  %193 = load i64, i64* %135, align 8
  %194 = icmp ult i64 %192, %193
  br i1 %194, label %195, label %201

195:                                              ; preds = %191
  store i8 1, i8* %136, align 4
  %196 = getelementptr inbounds %"class.v8::internal::wasm::AsmJsParser", %"class.v8::internal::wasm::AsmJsParser"* %0, i64 0, i32 18
  store i8* getelementptr inbounds ([44 x i8], [44 x i8]* @.str.2, i64 0, i64 0), i8** %196, align 8
  %197 = getelementptr inbounds %"class.v8::internal::wasm::AsmJsParser", %"class.v8::internal::wasm::AsmJsParser"* %0, i64 0, i32 1, i32 5
  %198 = load i64, i64* %197, align 8
  %199 = trunc i64 %198 to i32
  %200 = getelementptr inbounds %"class.v8::internal::wasm::AsmJsParser", %"class.v8::internal::wasm::AsmJsParser"* %0, i64 0, i32 19
  store i32 %199, i32* %200, align 8
  br label %291

201:                                              ; preds = %191
  %202 = tail call %"class.v8::internal::wasm::AsmType"* @_ZN2v88internal4wasm11AsmJsParser15UnaryExpressionEv(%"class.v8::internal::wasm::AsmJsParser"* %0)
  %203 = load i8, i8* %136, align 4, !range !69
  %204 = icmp eq i8 %203, 0
  br i1 %204, label %205, label %291

205:                                              ; preds = %201
  %206 = tail call zeroext i1 @_ZN2v88internal4wasm7AsmType3IsAEPS2_(%"class.v8::internal::wasm::AsmType"* %140, %"class.v8::internal::wasm::AsmType"* nonnull inttoptr (i64 77 to %"class.v8::internal::wasm::AsmType"*)) #12
  br i1 %206, label %207, label %209

207:                                              ; preds = %205
  %208 = tail call zeroext i1 @_ZN2v88internal4wasm7AsmType3IsAEPS2_(%"class.v8::internal::wasm::AsmType"* %202, %"class.v8::internal::wasm::AsmType"* nonnull inttoptr (i64 77 to %"class.v8::internal::wasm::AsmType"*)) #12
  br i1 %208, label %287, label %209

209:                                              ; preds = %207, %205
  %210 = tail call zeroext i1 @_ZN2v88internal4wasm7AsmType3IsAEPS2_(%"class.v8::internal::wasm::AsmType"* %140, %"class.v8::internal::wasm::AsmType"* nonnull inttoptr (i64 24589 to %"class.v8::internal::wasm::AsmType"*)) #12
  br i1 %210, label %211, label %213

211:                                              ; preds = %209
  %212 = tail call zeroext i1 @_ZN2v88internal4wasm7AsmType3IsAEPS2_(%"class.v8::internal::wasm::AsmType"* %202, %"class.v8::internal::wasm::AsmType"* nonnull inttoptr (i64 24589 to %"class.v8::internal::wasm::AsmType"*)) #12
  br i1 %212, label %287, label %213

213:                                              ; preds = %211, %209
  store i8 1, i8* %136, align 4
  %214 = getelementptr inbounds %"class.v8::internal::wasm::AsmJsParser", %"class.v8::internal::wasm::AsmJsParser"* %0, i64 0, i32 18
  store i8* getelementptr inbounds ([27 x i8], [27 x i8]* @.str.75, i64 0, i64 0), i8** %214, align 8
  %215 = getelementptr inbounds %"class.v8::internal::wasm::AsmJsParser", %"class.v8::internal::wasm::AsmJsParser"* %0, i64 0, i32 1, i32 5
  %216 = load i64, i64* %215, align 8
  %217 = trunc i64 %216 to i32
  %218 = getelementptr inbounds %"class.v8::internal::wasm::AsmJsParser", %"class.v8::internal::wasm::AsmJsParser"* %0, i64 0, i32 19
  store i32 %217, i32* %218, align 8
  br label %291

219:                                              ; preds = %139
  tail call void @_ZN2v88internal12AsmJsScanner4NextEv(%"class.v8::internal::AsmJsScanner"* %2) #12
  %220 = tail call i64 @_ZN2v88internal23GetCurrentStackPositionEv() #12
  %221 = load i64, i64* %135, align 8
  %222 = icmp ult i64 %220, %221
  br i1 %222, label %223, label %229

223:                                              ; preds = %219
  store i8 1, i8* %136, align 4
  %224 = getelementptr inbounds %"class.v8::internal::wasm::AsmJsParser", %"class.v8::internal::wasm::AsmJsParser"* %0, i64 0, i32 18
  store i8* getelementptr inbounds ([44 x i8], [44 x i8]* @.str.2, i64 0, i64 0), i8** %224, align 8
  %225 = getelementptr inbounds %"class.v8::internal::wasm::AsmJsParser", %"class.v8::internal::wasm::AsmJsParser"* %0, i64 0, i32 1, i32 5
  %226 = load i64, i64* %225, align 8
  %227 = trunc i64 %226 to i32
  %228 = getelementptr inbounds %"class.v8::internal::wasm::AsmJsParser", %"class.v8::internal::wasm::AsmJsParser"* %0, i64 0, i32 19
  store i32 %227, i32* %228, align 8
  br label %291

229:                                              ; preds = %219
  %230 = tail call %"class.v8::internal::wasm::AsmType"* @_ZN2v88internal4wasm11AsmJsParser15UnaryExpressionEv(%"class.v8::internal::wasm::AsmJsParser"* %0)
  %231 = load i8, i8* %136, align 4, !range !69
  %232 = icmp eq i8 %231, 0
  br i1 %232, label %233, label %291

233:                                              ; preds = %229
  %234 = tail call zeroext i1 @_ZN2v88internal4wasm7AsmType3IsAEPS2_(%"class.v8::internal::wasm::AsmType"* %140, %"class.v8::internal::wasm::AsmType"* nonnull inttoptr (i64 77 to %"class.v8::internal::wasm::AsmType"*)) #12
  br i1 %234, label %235, label %237

235:                                              ; preds = %233
  %236 = tail call zeroext i1 @_ZN2v88internal4wasm7AsmType3IsAEPS2_(%"class.v8::internal::wasm::AsmType"* %230, %"class.v8::internal::wasm::AsmType"* nonnull inttoptr (i64 77 to %"class.v8::internal::wasm::AsmType"*)) #12
  br i1 %236, label %287, label %237

237:                                              ; preds = %235, %233
  %238 = tail call zeroext i1 @_ZN2v88internal4wasm7AsmType3IsAEPS2_(%"class.v8::internal::wasm::AsmType"* %140, %"class.v8::internal::wasm::AsmType"* nonnull inttoptr (i64 24589 to %"class.v8::internal::wasm::AsmType"*)) #12
  br i1 %238, label %239, label %241

239:                                              ; preds = %237
  %240 = tail call zeroext i1 @_ZN2v88internal4wasm7AsmType3IsAEPS2_(%"class.v8::internal::wasm::AsmType"* %230, %"class.v8::internal::wasm::AsmType"* nonnull inttoptr (i64 24589 to %"class.v8::internal::wasm::AsmType"*)) #12
  br i1 %240, label %287, label %241

241:                                              ; preds = %239, %237
  %242 = tail call zeroext i1 @_ZN2v88internal4wasm7AsmType3IsAEPS2_(%"class.v8::internal::wasm::AsmType"* %140, %"class.v8::internal::wasm::AsmType"* nonnull inttoptr (i64 1825 to %"class.v8::internal::wasm::AsmType"*)) #12
  br i1 %242, label %243, label %245

243:                                              ; preds = %241
  %244 = tail call zeroext i1 @_ZN2v88internal4wasm7AsmType3IsAEPS2_(%"class.v8::internal::wasm::AsmType"* %230, %"class.v8::internal::wasm::AsmType"* nonnull inttoptr (i64 1825 to %"class.v8::internal::wasm::AsmType"*)) #12
  br i1 %244, label %287, label %245

245:                                              ; preds = %243, %241
  %246 = tail call zeroext i1 @_ZN2v88internal4wasm7AsmType3IsAEPS2_(%"class.v8::internal::wasm::AsmType"* %140, %"class.v8::internal::wasm::AsmType"* nonnull inttoptr (i64 2817 to %"class.v8::internal::wasm::AsmType"*)) #12
  br i1 %246, label %247, label %249

247:                                              ; preds = %245
  %248 = tail call zeroext i1 @_ZN2v88internal4wasm7AsmType3IsAEPS2_(%"class.v8::internal::wasm::AsmType"* %230, %"class.v8::internal::wasm::AsmType"* nonnull inttoptr (i64 2817 to %"class.v8::internal::wasm::AsmType"*)) #12
  br i1 %248, label %287, label %249

249:                                              ; preds = %247, %245
  store i8 1, i8* %136, align 4
  %250 = getelementptr inbounds %"class.v8::internal::wasm::AsmJsParser", %"class.v8::internal::wasm::AsmJsParser"* %0, i64 0, i32 18
  store i8* getelementptr inbounds ([27 x i8], [27 x i8]* @.str.75, i64 0, i64 0), i8** %250, align 8
  %251 = getelementptr inbounds %"class.v8::internal::wasm::AsmJsParser", %"class.v8::internal::wasm::AsmJsParser"* %0, i64 0, i32 1, i32 5
  %252 = load i64, i64* %251, align 8
  %253 = trunc i64 %252 to i32
  %254 = getelementptr inbounds %"class.v8::internal::wasm::AsmJsParser", %"class.v8::internal::wasm::AsmJsParser"* %0, i64 0, i32 19
  store i32 %253, i32* %254, align 8
  br label %291

255:                                              ; preds = %139
  tail call void @_ZN2v88internal12AsmJsScanner4NextEv(%"class.v8::internal::AsmJsScanner"* %2) #12
  %256 = tail call i64 @_ZN2v88internal23GetCurrentStackPositionEv() #12
  %257 = load i64, i64* %135, align 8
  %258 = icmp ult i64 %256, %257
  br i1 %258, label %259, label %265

259:                                              ; preds = %255
  store i8 1, i8* %136, align 4
  %260 = getelementptr inbounds %"class.v8::internal::wasm::AsmJsParser", %"class.v8::internal::wasm::AsmJsParser"* %0, i64 0, i32 18
  store i8* getelementptr inbounds ([44 x i8], [44 x i8]* @.str.2, i64 0, i64 0), i8** %260, align 8
  %261 = getelementptr inbounds %"class.v8::internal::wasm::AsmJsParser", %"class.v8::internal::wasm::AsmJsParser"* %0, i64 0, i32 1, i32 5
  %262 = load i64, i64* %261, align 8
  %263 = trunc i64 %262 to i32
  %264 = getelementptr inbounds %"class.v8::internal::wasm::AsmJsParser", %"class.v8::internal::wasm::AsmJsParser"* %0, i64 0, i32 19
  store i32 %263, i32* %264, align 8
  br label %291

265:                                              ; preds = %255
  %266 = tail call %"class.v8::internal::wasm::AsmType"* @_ZN2v88internal4wasm11AsmJsParser15UnaryExpressionEv(%"class.v8::internal::wasm::AsmJsParser"* %0)
  %267 = load i8, i8* %136, align 4, !range !69
  %268 = icmp eq i8 %267, 0
  br i1 %268, label %269, label %291

269:                                              ; preds = %265
  %270 = tail call zeroext i1 @_ZN2v88internal4wasm7AsmType3IsAEPS2_(%"class.v8::internal::wasm::AsmType"* %140, %"class.v8::internal::wasm::AsmType"* nonnull inttoptr (i64 77 to %"class.v8::internal::wasm::AsmType"*)) #12
  br i1 %270, label %271, label %273

271:                                              ; preds = %269
  %272 = tail call zeroext i1 @_ZN2v88internal4wasm7AsmType3IsAEPS2_(%"class.v8::internal::wasm::AsmType"* %266, %"class.v8::internal::wasm::AsmType"* nonnull inttoptr (i64 77 to %"class.v8::internal::wasm::AsmType"*)) #12
  br i1 %272, label %287, label %273

273:                                              ; preds = %271, %269
  %274 = tail call zeroext i1 @_ZN2v88internal4wasm7AsmType3IsAEPS2_(%"class.v8::internal::wasm::AsmType"* %140, %"class.v8::internal::wasm::AsmType"* nonnull inttoptr (i64 1825 to %"class.v8::internal::wasm::AsmType"*)) #12
  br i1 %274, label %275, label %277

275:                                              ; preds = %273
  %276 = tail call zeroext i1 @_ZN2v88internal4wasm7AsmType3IsAEPS2_(%"class.v8::internal::wasm::AsmType"* %266, %"class.v8::internal::wasm::AsmType"* nonnull inttoptr (i64 1825 to %"class.v8::internal::wasm::AsmType"*)) #12
  br i1 %276, label %287, label %277

277:                                              ; preds = %275, %273
  %278 = tail call zeroext i1 @_ZN2v88internal4wasm7AsmType3IsAEPS2_(%"class.v8::internal::wasm::AsmType"* %140, %"class.v8::internal::wasm::AsmType"* nonnull inttoptr (i64 2817 to %"class.v8::internal::wasm::AsmType"*)) #12
  br i1 %278, label %279, label %281

279:                                              ; preds = %277
  %280 = tail call zeroext i1 @_ZN2v88internal4wasm7AsmType3IsAEPS2_(%"class.v8::internal::wasm::AsmType"* %266, %"class.v8::internal::wasm::AsmType"* nonnull inttoptr (i64 2817 to %"class.v8::internal::wasm::AsmType"*)) #12
  br i1 %280, label %287, label %281

281:                                              ; preds = %279, %277
  store i8 1, i8* %136, align 4
  %282 = getelementptr inbounds %"class.v8::internal::wasm::AsmJsParser", %"class.v8::internal::wasm::AsmJsParser"* %0, i64 0, i32 18
  store i8* getelementptr inbounds ([27 x i8], [27 x i8]* @.str.75, i64 0, i64 0), i8** %282, align 8
  %283 = getelementptr inbounds %"class.v8::internal::wasm::AsmJsParser", %"class.v8::internal::wasm::AsmJsParser"* %0, i64 0, i32 1, i32 5
  %284 = load i64, i64* %283, align 8
  %285 = trunc i64 %284 to i32
  %286 = getelementptr inbounds %"class.v8::internal::wasm::AsmJsParser", %"class.v8::internal::wasm::AsmJsParser"* %0, i64 0, i32 19
  store i32 %285, i32* %286, align 8
  br label %291

287:                                              ; preds = %279, %275, %271, %247, %243, %239, %235, %211, %207
  %288 = phi i32 [ 162, %207 ], [ 148, %211 ], [ 163, %235 ], [ 149, %239 ], [ 231, %243 ], [ 232, %247 ], [ 230, %271 ], [ 233, %275 ], [ 234, %279 ]
  %289 = phi %"class.v8::internal::wasm::AsmType"* [ inttoptr (i64 237 to %"class.v8::internal::wasm::AsmType"*), %207 ], [ inttoptr (i64 8197 to %"class.v8::internal::wasm::AsmType"*), %211 ], [ inttoptr (i64 237 to %"class.v8::internal::wasm::AsmType"*), %235 ], [ inttoptr (i64 8197 to %"class.v8::internal::wasm::AsmType"*), %239 ], [ inttoptr (i64 257 to %"class.v8::internal::wasm::AsmType"*), %243 ], [ inttoptr (i64 257 to %"class.v8::internal::wasm::AsmType"*), %247 ], [ inttoptr (i64 237 to %"class.v8::internal::wasm::AsmType"*), %271 ], [ inttoptr (i64 257 to %"class.v8::internal::wasm::AsmType"*), %275 ], [ inttoptr (i64 257 to %"class.v8::internal::wasm::AsmType"*), %279 ]
  %290 = load %"class.v8::internal::wasm::WasmFunctionBuilder"*, %"class.v8::internal::wasm::WasmFunctionBuilder"** %137, align 8
  tail call void @_ZN2v88internal4wasm19WasmFunctionBuilder4EmitENS1_10WasmOpcodeE(%"class.v8::internal::wasm::WasmFunctionBuilder"* %290, i32 %288) #12
  br label %139

291:                                              ; preds = %201, %265, %229, %139, %213, %195, %182, %188, %174, %160, %166, %152, %77, %91, %97, %84, %259, %281, %223, %249, %128, %111, %53, %17, %31, %37, %24, %121, %104, %46
  %292 = phi %"class.v8::internal::wasm::AsmType"* [ null, %46 ], [ null, %104 ], [ null, %121 ], [ null, %17 ], [ inttoptr (i64 257 to %"class.v8::internal::wasm::AsmType"*), %37 ], [ null, %31 ], [ null, %24 ], [ null, %53 ], [ null, %111 ], [ null, %128 ], [ null, %223 ], [ null, %249 ], [ null, %259 ], [ null, %281 ], [ null, %84 ], [ null, %91 ], [ inttoptr (i64 257 to %"class.v8::internal::wasm::AsmType"*), %97 ], [ null, %77 ], [ null, %213 ], [ null, %195 ], [ null, %182 ], [ inttoptr (i64 257 to %"class.v8::internal::wasm::AsmType"*), %188 ], [ null, %174 ], [ null, %160 ], [ inttoptr (i64 257 to %"class.v8::internal::wasm::AsmType"*), %166 ], [ null, %152 ], [ null, %201 ], [ null, %265 ], [ null, %229 ], [ %140, %139 ]
  ret %"class.v8::internal::wasm::AsmType"* %292
}

; Function Attrs: nounwind ssp uwtable
define hidden %"class.v8::internal::wasm::AsmType"* @_ZN2v88internal4wasm11AsmJsParser18AdditiveExpressionEv(%"class.v8::internal::wasm::AsmJsParser"*) local_unnamed_addr #0 align 2 {
  %2 = tail call i64 @_ZN2v88internal23GetCurrentStackPositionEv() #12
  %3 = getelementptr inbounds %"class.v8::internal::wasm::AsmJsParser", %"class.v8::internal::wasm::AsmJsParser"* %0, i64 0, i32 5
  %4 = load i64, i64* %3, align 8
  %5 = icmp ult i64 %2, %4
  br i1 %5, label %6, label %13

6:                                                ; preds = %1
  %7 = getelementptr inbounds %"class.v8::internal::wasm::AsmJsParser", %"class.v8::internal::wasm::AsmJsParser"* %0, i64 0, i32 17
  store i8 1, i8* %7, align 4
  %8 = getelementptr inbounds %"class.v8::internal::wasm::AsmJsParser", %"class.v8::internal::wasm::AsmJsParser"* %0, i64 0, i32 18
  store i8* getelementptr inbounds ([44 x i8], [44 x i8]* @.str.2, i64 0, i64 0), i8** %8, align 8
  %9 = getelementptr inbounds %"class.v8::internal::wasm::AsmJsParser", %"class.v8::internal::wasm::AsmJsParser"* %0, i64 0, i32 1, i32 5
  %10 = load i64, i64* %9, align 8
  %11 = trunc i64 %10 to i32
  %12 = getelementptr inbounds %"class.v8::internal::wasm::AsmJsParser", %"class.v8::internal::wasm::AsmJsParser"* %0, i64 0, i32 19
  store i32 %11, i32* %12, align 8
  br label %123

13:                                               ; preds = %1
  %14 = tail call %"class.v8::internal::wasm::AsmType"* @_ZN2v88internal4wasm11AsmJsParser24MultiplicativeExpressionEv(%"class.v8::internal::wasm::AsmJsParser"* %0)
  %15 = getelementptr inbounds %"class.v8::internal::wasm::AsmJsParser", %"class.v8::internal::wasm::AsmJsParser"* %0, i64 0, i32 17
  %16 = load i8, i8* %15, align 4, !range !69
  %17 = icmp eq i8 %16, 0
  br i1 %17, label %18, label %123

18:                                               ; preds = %13
  %19 = getelementptr inbounds %"class.v8::internal::wasm::AsmJsParser", %"class.v8::internal::wasm::AsmJsParser"* %0, i64 0, i32 1, i32 1
  %20 = getelementptr inbounds %"class.v8::internal::wasm::AsmJsParser", %"class.v8::internal::wasm::AsmJsParser"* %0, i64 0, i32 1
  %21 = getelementptr inbounds %"class.v8::internal::wasm::AsmJsParser", %"class.v8::internal::wasm::AsmJsParser"* %0, i64 0, i32 3
  br label %22

22:                                               ; preds = %18, %118
  %23 = phi i32 [ %120, %118 ], [ 0, %18 ]
  %24 = phi %"class.v8::internal::wasm::AsmType"* [ %121, %118 ], [ %14, %18 ]
  %25 = load i32, i32* %19, align 8
  switch i32 %25, label %123 [
    i32 43, label %26
    i32 45, label %72
  ]

26:                                               ; preds = %22
  tail call void @_ZN2v88internal12AsmJsScanner4NextEv(%"class.v8::internal::AsmJsScanner"* %20) #12
  %27 = tail call i64 @_ZN2v88internal23GetCurrentStackPositionEv() #12
  %28 = load i64, i64* %3, align 8
  %29 = icmp ult i64 %27, %28
  br i1 %29, label %30, label %36

30:                                               ; preds = %26
  store i8 1, i8* %15, align 4
  %31 = getelementptr inbounds %"class.v8::internal::wasm::AsmJsParser", %"class.v8::internal::wasm::AsmJsParser"* %0, i64 0, i32 18
  store i8* getelementptr inbounds ([44 x i8], [44 x i8]* @.str.2, i64 0, i64 0), i8** %31, align 8
  %32 = getelementptr inbounds %"class.v8::internal::wasm::AsmJsParser", %"class.v8::internal::wasm::AsmJsParser"* %0, i64 0, i32 1, i32 5
  %33 = load i64, i64* %32, align 8
  %34 = trunc i64 %33 to i32
  %35 = getelementptr inbounds %"class.v8::internal::wasm::AsmJsParser", %"class.v8::internal::wasm::AsmJsParser"* %0, i64 0, i32 19
  store i32 %34, i32* %35, align 8
  br label %123

36:                                               ; preds = %26
  %37 = tail call %"class.v8::internal::wasm::AsmType"* @_ZN2v88internal4wasm11AsmJsParser24MultiplicativeExpressionEv(%"class.v8::internal::wasm::AsmJsParser"* %0)
  %38 = load i8, i8* %15, align 4, !range !69
  %39 = icmp eq i8 %38, 0
  br i1 %39, label %40, label %123

40:                                               ; preds = %36
  %41 = tail call zeroext i1 @_ZN2v88internal4wasm7AsmType3IsAEPS2_(%"class.v8::internal::wasm::AsmType"* %24, %"class.v8::internal::wasm::AsmType"* nonnull inttoptr (i64 237 to %"class.v8::internal::wasm::AsmType"*)) #12
  br i1 %41, label %42, label %44

42:                                               ; preds = %40
  %43 = tail call zeroext i1 @_ZN2v88internal4wasm7AsmType3IsAEPS2_(%"class.v8::internal::wasm::AsmType"* %37, %"class.v8::internal::wasm::AsmType"* nonnull inttoptr (i64 237 to %"class.v8::internal::wasm::AsmType"*)) #12
  br i1 %43, label %118, label %44

44:                                               ; preds = %42, %40
  %45 = tail call zeroext i1 @_ZN2v88internal4wasm7AsmType3IsAEPS2_(%"class.v8::internal::wasm::AsmType"* %24, %"class.v8::internal::wasm::AsmType"* nonnull inttoptr (i64 24589 to %"class.v8::internal::wasm::AsmType"*)) #12
  br i1 %45, label %46, label %48

46:                                               ; preds = %44
  %47 = tail call zeroext i1 @_ZN2v88internal4wasm7AsmType3IsAEPS2_(%"class.v8::internal::wasm::AsmType"* %37, %"class.v8::internal::wasm::AsmType"* nonnull inttoptr (i64 24589 to %"class.v8::internal::wasm::AsmType"*)) #12
  br i1 %47, label %118, label %48

48:                                               ; preds = %46, %44
  %49 = tail call zeroext i1 @_ZN2v88internal4wasm7AsmType3IsAEPS2_(%"class.v8::internal::wasm::AsmType"* %24, %"class.v8::internal::wasm::AsmType"* nonnull inttoptr (i64 769 to %"class.v8::internal::wasm::AsmType"*)) #12
  br i1 %49, label %50, label %52

50:                                               ; preds = %48
  %51 = tail call zeroext i1 @_ZN2v88internal4wasm7AsmType3IsAEPS2_(%"class.v8::internal::wasm::AsmType"* %37, %"class.v8::internal::wasm::AsmType"* nonnull inttoptr (i64 769 to %"class.v8::internal::wasm::AsmType"*)) #12
  br i1 %51, label %118, label %52

52:                                               ; preds = %50, %48
  %53 = tail call zeroext i1 @_ZN2v88internal4wasm7AsmType3IsAEPS2_(%"class.v8::internal::wasm::AsmType"* %24, %"class.v8::internal::wasm::AsmType"* nonnull inttoptr (i64 257 to %"class.v8::internal::wasm::AsmType"*)) #12
  br i1 %53, label %54, label %66

54:                                               ; preds = %52
  %55 = tail call zeroext i1 @_ZN2v88internal4wasm7AsmType3IsAEPS2_(%"class.v8::internal::wasm::AsmType"* %37, %"class.v8::internal::wasm::AsmType"* nonnull inttoptr (i64 257 to %"class.v8::internal::wasm::AsmType"*)) #12
  br i1 %55, label %56, label %66

56:                                               ; preds = %54
  %57 = icmp sgt i32 %23, 1048575
  br i1 %57, label %58, label %64

58:                                               ; preds = %56
  store i8 1, i8* %15, align 4
  %59 = getelementptr inbounds %"class.v8::internal::wasm::AsmJsParser", %"class.v8::internal::wasm::AsmJsParser"* %0, i64 0, i32 18
  store i8* getelementptr inbounds ([31 x i8], [31 x i8]* @.str.76, i64 0, i64 0), i8** %59, align 8
  %60 = getelementptr inbounds %"class.v8::internal::wasm::AsmJsParser", %"class.v8::internal::wasm::AsmJsParser"* %0, i64 0, i32 1, i32 5
  %61 = load i64, i64* %60, align 8
  %62 = trunc i64 %61 to i32
  %63 = getelementptr inbounds %"class.v8::internal::wasm::AsmJsParser", %"class.v8::internal::wasm::AsmJsParser"* %0, i64 0, i32 19
  store i32 %62, i32* %63, align 8
  br label %123

64:                                               ; preds = %56
  %65 = add nsw i32 %23, 1
  br label %118

66:                                               ; preds = %54, %52
  store i8 1, i8* %15, align 4
  %67 = getelementptr inbounds %"class.v8::internal::wasm::AsmJsParser", %"class.v8::internal::wasm::AsmJsParser"* %0, i64 0, i32 18
  store i8* getelementptr inbounds ([20 x i8], [20 x i8]* @.str.77, i64 0, i64 0), i8** %67, align 8
  %68 = getelementptr inbounds %"class.v8::internal::wasm::AsmJsParser", %"class.v8::internal::wasm::AsmJsParser"* %0, i64 0, i32 1, i32 5
  %69 = load i64, i64* %68, align 8
  %70 = trunc i64 %69 to i32
  %71 = getelementptr inbounds %"class.v8::internal::wasm::AsmJsParser", %"class.v8::internal::wasm::AsmJsParser"* %0, i64 0, i32 19
  store i32 %70, i32* %71, align 8
  br label %123

72:                                               ; preds = %22
  tail call void @_ZN2v88internal12AsmJsScanner4NextEv(%"class.v8::internal::AsmJsScanner"* %20) #12
  %73 = tail call i64 @_ZN2v88internal23GetCurrentStackPositionEv() #12
  %74 = load i64, i64* %3, align 8
  %75 = icmp ult i64 %73, %74
  br i1 %75, label %76, label %82

76:                                               ; preds = %72
  store i8 1, i8* %15, align 4
  %77 = getelementptr inbounds %"class.v8::internal::wasm::AsmJsParser", %"class.v8::internal::wasm::AsmJsParser"* %0, i64 0, i32 18
  store i8* getelementptr inbounds ([44 x i8], [44 x i8]* @.str.2, i64 0, i64 0), i8** %77, align 8
  %78 = getelementptr inbounds %"class.v8::internal::wasm::AsmJsParser", %"class.v8::internal::wasm::AsmJsParser"* %0, i64 0, i32 1, i32 5
  %79 = load i64, i64* %78, align 8
  %80 = trunc i64 %79 to i32
  %81 = getelementptr inbounds %"class.v8::internal::wasm::AsmJsParser", %"class.v8::internal::wasm::AsmJsParser"* %0, i64 0, i32 19
  store i32 %80, i32* %81, align 8
  br label %123

82:                                               ; preds = %72
  %83 = tail call %"class.v8::internal::wasm::AsmType"* @_ZN2v88internal4wasm11AsmJsParser24MultiplicativeExpressionEv(%"class.v8::internal::wasm::AsmJsParser"* %0)
  %84 = load i8, i8* %15, align 4, !range !69
  %85 = icmp eq i8 %84, 0
  br i1 %85, label %86, label %123

86:                                               ; preds = %82
  %87 = tail call zeroext i1 @_ZN2v88internal4wasm7AsmType3IsAEPS2_(%"class.v8::internal::wasm::AsmType"* %24, %"class.v8::internal::wasm::AsmType"* nonnull inttoptr (i64 237 to %"class.v8::internal::wasm::AsmType"*)) #12
  br i1 %87, label %88, label %90

88:                                               ; preds = %86
  %89 = tail call zeroext i1 @_ZN2v88internal4wasm7AsmType3IsAEPS2_(%"class.v8::internal::wasm::AsmType"* %83, %"class.v8::internal::wasm::AsmType"* nonnull inttoptr (i64 237 to %"class.v8::internal::wasm::AsmType"*)) #12
  br i1 %89, label %118, label %90

90:                                               ; preds = %88, %86
  %91 = tail call zeroext i1 @_ZN2v88internal4wasm7AsmType3IsAEPS2_(%"class.v8::internal::wasm::AsmType"* %24, %"class.v8::internal::wasm::AsmType"* nonnull inttoptr (i64 24589 to %"class.v8::internal::wasm::AsmType"*)) #12
  br i1 %91, label %92, label %94

92:                                               ; preds = %90
  %93 = tail call zeroext i1 @_ZN2v88internal4wasm7AsmType3IsAEPS2_(%"class.v8::internal::wasm::AsmType"* %83, %"class.v8::internal::wasm::AsmType"* nonnull inttoptr (i64 24589 to %"class.v8::internal::wasm::AsmType"*)) #12
  br i1 %93, label %118, label %94

94:                                               ; preds = %92, %90
  %95 = tail call zeroext i1 @_ZN2v88internal4wasm7AsmType3IsAEPS2_(%"class.v8::internal::wasm::AsmType"* %24, %"class.v8::internal::wasm::AsmType"* nonnull inttoptr (i64 769 to %"class.v8::internal::wasm::AsmType"*)) #12
  br i1 %95, label %96, label %98

96:                                               ; preds = %94
  %97 = tail call zeroext i1 @_ZN2v88internal4wasm7AsmType3IsAEPS2_(%"class.v8::internal::wasm::AsmType"* %83, %"class.v8::internal::wasm::AsmType"* nonnull inttoptr (i64 769 to %"class.v8::internal::wasm::AsmType"*)) #12
  br i1 %97, label %118, label %98

98:                                               ; preds = %96, %94
  %99 = tail call zeroext i1 @_ZN2v88internal4wasm7AsmType3IsAEPS2_(%"class.v8::internal::wasm::AsmType"* %24, %"class.v8::internal::wasm::AsmType"* nonnull inttoptr (i64 257 to %"class.v8::internal::wasm::AsmType"*)) #12
  br i1 %99, label %100, label %112

100:                                              ; preds = %98
  %101 = tail call zeroext i1 @_ZN2v88internal4wasm7AsmType3IsAEPS2_(%"class.v8::internal::wasm::AsmType"* %83, %"class.v8::internal::wasm::AsmType"* nonnull inttoptr (i64 257 to %"class.v8::internal::wasm::AsmType"*)) #12
  br i1 %101, label %102, label %112

102:                                              ; preds = %100
  %103 = icmp sgt i32 %23, 1048575
  br i1 %103, label %104, label %110

104:                                              ; preds = %102
  store i8 1, i8* %15, align 4
  %105 = getelementptr inbounds %"class.v8::internal::wasm::AsmJsParser", %"class.v8::internal::wasm::AsmJsParser"* %0, i64 0, i32 18
  store i8* getelementptr inbounds ([31 x i8], [31 x i8]* @.str.76, i64 0, i64 0), i8** %105, align 8
  %106 = getelementptr inbounds %"class.v8::internal::wasm::AsmJsParser", %"class.v8::internal::wasm::AsmJsParser"* %0, i64 0, i32 1, i32 5
  %107 = load i64, i64* %106, align 8
  %108 = trunc i64 %107 to i32
  %109 = getelementptr inbounds %"class.v8::internal::wasm::AsmJsParser", %"class.v8::internal::wasm::AsmJsParser"* %0, i64 0, i32 19
  store i32 %108, i32* %109, align 8
  br label %123

110:                                              ; preds = %102
  %111 = add nsw i32 %23, 1
  br label %118

112:                                              ; preds = %100, %98
  store i8 1, i8* %15, align 4
  %113 = getelementptr inbounds %"class.v8::internal::wasm::AsmJsParser", %"class.v8::internal::wasm::AsmJsParser"* %0, i64 0, i32 18
  store i8* getelementptr inbounds ([20 x i8], [20 x i8]* @.str.77, i64 0, i64 0), i8** %113, align 8
  %114 = getelementptr inbounds %"class.v8::internal::wasm::AsmJsParser", %"class.v8::internal::wasm::AsmJsParser"* %0, i64 0, i32 1, i32 5
  %115 = load i64, i64* %114, align 8
  %116 = trunc i64 %115 to i32
  %117 = getelementptr inbounds %"class.v8::internal::wasm::AsmJsParser", %"class.v8::internal::wasm::AsmJsParser"* %0, i64 0, i32 19
  store i32 %116, i32* %117, align 8
  br label %123

118:                                              ; preds = %96, %92, %88, %50, %46, %42, %110, %64
  %119 = phi i32 [ 107, %110 ], [ 106, %64 ], [ 160, %42 ], [ 146, %46 ], [ 106, %50 ], [ 161, %88 ], [ 147, %92 ], [ 107, %96 ]
  %120 = phi i32 [ %111, %110 ], [ %65, %64 ], [ %23, %42 ], [ %23, %46 ], [ 2, %50 ], [ %23, %88 ], [ %23, %92 ], [ 2, %96 ]
  %121 = phi %"class.v8::internal::wasm::AsmType"* [ %24, %110 ], [ %24, %64 ], [ inttoptr (i64 237 to %"class.v8::internal::wasm::AsmType"*), %42 ], [ inttoptr (i64 8197 to %"class.v8::internal::wasm::AsmType"*), %46 ], [ inttoptr (i64 257 to %"class.v8::internal::wasm::AsmType"*), %50 ], [ inttoptr (i64 237 to %"class.v8::internal::wasm::AsmType"*), %88 ], [ inttoptr (i64 8197 to %"class.v8::internal::wasm::AsmType"*), %92 ], [ inttoptr (i64 257 to %"class.v8::internal::wasm::AsmType"*), %96 ]
  %122 = load %"class.v8::internal::wasm::WasmFunctionBuilder"*, %"class.v8::internal::wasm::WasmFunctionBuilder"** %21, align 8
  tail call void @_ZN2v88internal4wasm19WasmFunctionBuilder4EmitENS1_10WasmOpcodeE(%"class.v8::internal::wasm::WasmFunctionBuilder"* %122, i32 %119) #12
  br label %22

123:                                              ; preds = %82, %36, %22, %76, %104, %112, %30, %58, %66, %13, %6
  %124 = phi %"class.v8::internal::wasm::AsmType"* [ null, %6 ], [ null, %13 ], [ null, %66 ], [ null, %58 ], [ null, %30 ], [ null, %112 ], [ null, %104 ], [ null, %76 ], [ null, %82 ], [ null, %36 ], [ %24, %22 ]
  ret %"class.v8::internal::wasm::AsmType"* %124
}

; Function Attrs: nounwind ssp uwtable
define hidden %"class.v8::internal::wasm::AsmType"* @_ZN2v88internal4wasm11AsmJsParser15ShiftExpressionEv(%"class.v8::internal::wasm::AsmJsParser"*) local_unnamed_addr #0 align 2 {
  %2 = tail call i64 @_ZN2v88internal23GetCurrentStackPositionEv() #12
  %3 = getelementptr inbounds %"class.v8::internal::wasm::AsmJsParser", %"class.v8::internal::wasm::AsmJsParser"* %0, i64 0, i32 5
  %4 = load i64, i64* %3, align 8
  %5 = icmp ult i64 %2, %4
  br i1 %5, label %6, label %13

6:                                                ; preds = %1
  %7 = getelementptr inbounds %"class.v8::internal::wasm::AsmJsParser", %"class.v8::internal::wasm::AsmJsParser"* %0, i64 0, i32 17
  store i8 1, i8* %7, align 4
  %8 = getelementptr inbounds %"class.v8::internal::wasm::AsmJsParser", %"class.v8::internal::wasm::AsmJsParser"* %0, i64 0, i32 18
  store i8* getelementptr inbounds ([44 x i8], [44 x i8]* @.str.2, i64 0, i64 0), i8** %8, align 8
  %9 = getelementptr inbounds %"class.v8::internal::wasm::AsmJsParser", %"class.v8::internal::wasm::AsmJsParser"* %0, i64 0, i32 1, i32 5
  %10 = load i64, i64* %9, align 8
  %11 = trunc i64 %10 to i32
  %12 = getelementptr inbounds %"class.v8::internal::wasm::AsmJsParser", %"class.v8::internal::wasm::AsmJsParser"* %0, i64 0, i32 19
  store i32 %11, i32* %12, align 8
  br label %131

13:                                               ; preds = %1
  %14 = tail call %"class.v8::internal::wasm::AsmType"* @_ZN2v88internal4wasm11AsmJsParser18AdditiveExpressionEv(%"class.v8::internal::wasm::AsmJsParser"* %0)
  %15 = getelementptr inbounds %"class.v8::internal::wasm::AsmJsParser", %"class.v8::internal::wasm::AsmJsParser"* %0, i64 0, i32 17
  %16 = load i8, i8* %15, align 4, !range !69
  %17 = icmp eq i8 %16, 0
  br i1 %17, label %18, label %131

18:                                               ; preds = %13
  %19 = getelementptr inbounds %"class.v8::internal::wasm::AsmJsParser", %"class.v8::internal::wasm::AsmJsParser"* %0, i64 0, i32 38
  store i64 -1, i64* %19, align 8
  %20 = getelementptr inbounds %"class.v8::internal::wasm::AsmJsParser", %"class.v8::internal::wasm::AsmJsParser"* %0, i64 0, i32 1
  %21 = getelementptr inbounds %"class.v8::internal::wasm::AsmJsParser", %"class.v8::internal::wasm::AsmJsParser"* %0, i64 0, i32 1, i32 1
  %22 = getelementptr inbounds %"class.v8::internal::wasm::AsmJsParser", %"class.v8::internal::wasm::AsmJsParser"* %0, i64 0, i32 3
  %23 = getelementptr inbounds %"class.v8::internal::wasm::AsmJsParser", %"class.v8::internal::wasm::AsmJsParser"* %0, i64 0, i32 1, i32 19
  %24 = getelementptr inbounds %"class.v8::internal::wasm::AsmJsParser", %"class.v8::internal::wasm::AsmJsParser"* %0, i64 0, i32 1, i32 5
  %25 = getelementptr inbounds %"class.v8::internal::wasm::AsmJsParser", %"class.v8::internal::wasm::AsmJsParser"* %0, i64 0, i32 39
  br label %26

26:                                               ; preds = %81, %18
  %27 = phi i32 [ %51, %81 ], [ undef, %18 ]
  %28 = phi %"class.v8::internal::wasm::AsmType"* [ inttoptr (i64 1825 to %"class.v8::internal::wasm::AsmType"*), %81 ], [ %14, %18 ]
  %29 = phi i64 [ %53, %81 ], [ undef, %18 ]
  %30 = phi i64 [ %54, %81 ], [ undef, %18 ]
  br label %31

31:                                               ; preds = %105, %26
  %32 = phi %"class.v8::internal::wasm::AsmType"* [ %28, %26 ], [ %107, %105 ]
  %33 = load i32, i32* %21, align 8
  switch i32 %33, label %131 [
    i32 -9939, label %34
    i32 -9940, label %83
    i32 -9938, label %109
  ]

34:                                               ; preds = %31
  tail call void @_ZN2v88internal12AsmJsScanner4NextEv(%"class.v8::internal::AsmJsScanner"* %20) #12
  store i64 -1, i64* %19, align 8
  %35 = tail call zeroext i1 @_ZN2v88internal4wasm7AsmType3IsAEPS2_(%"class.v8::internal::wasm::AsmType"* %32, %"class.v8::internal::wasm::AsmType"* nonnull inttoptr (i64 257 to %"class.v8::internal::wasm::AsmType"*)) #12
  br i1 %35, label %36, label %50

36:                                               ; preds = %34
  %37 = load i32, i32* %21, align 8
  %38 = icmp eq i32 %37, -3
  br i1 %38, label %39, label %50

39:                                               ; preds = %36
  %40 = load i32, i32* %23, align 8
  tail call void @_ZN2v88internal12AsmJsScanner4NextEv(%"class.v8::internal::AsmJsScanner"* %20) #12
  %41 = load i64, i64* %24, align 8
  %42 = load %"class.v8::internal::wasm::WasmFunctionBuilder"*, %"class.v8::internal::wasm::WasmFunctionBuilder"** %22, align 8
  %43 = getelementptr inbounds %"class.v8::internal::wasm::WasmFunctionBuilder", %"class.v8::internal::wasm::WasmFunctionBuilder"* %42, i64 0, i32 4, i32 2
  %44 = bitcast i8** %43 to i64*
  %45 = load i64, i64* %44, align 8
  %46 = getelementptr inbounds %"class.v8::internal::wasm::WasmFunctionBuilder", %"class.v8::internal::wasm::WasmFunctionBuilder"* %42, i64 0, i32 4, i32 1
  %47 = bitcast i8** %46 to i64*
  %48 = load i64, i64* %47, align 8
  %49 = sub i64 %45, %48
  tail call void @_ZN2v88internal12AsmJsScanner6RewindEv(%"class.v8::internal::AsmJsScanner"* %20) #12
  br label %50

50:                                               ; preds = %36, %39, %34
  %51 = phi i32 [ %40, %39 ], [ %27, %34 ], [ %27, %36 ]
  %52 = phi i1 [ true, %39 ], [ false, %34 ], [ false, %36 ]
  %53 = phi i64 [ %41, %39 ], [ %29, %34 ], [ %29, %36 ]
  %54 = phi i64 [ %49, %39 ], [ %30, %34 ], [ %30, %36 ]
  %55 = tail call i64 @_ZN2v88internal23GetCurrentStackPositionEv() #12
  %56 = load i64, i64* %3, align 8
  %57 = icmp ult i64 %55, %56
  br i1 %57, label %58, label %63

58:                                               ; preds = %50
  store i8 1, i8* %15, align 4
  %59 = getelementptr inbounds %"class.v8::internal::wasm::AsmJsParser", %"class.v8::internal::wasm::AsmJsParser"* %0, i64 0, i32 18
  store i8* getelementptr inbounds ([44 x i8], [44 x i8]* @.str.2, i64 0, i64 0), i8** %59, align 8
  %60 = load i64, i64* %24, align 8
  %61 = trunc i64 %60 to i32
  %62 = getelementptr inbounds %"class.v8::internal::wasm::AsmJsParser", %"class.v8::internal::wasm::AsmJsParser"* %0, i64 0, i32 19
  store i32 %61, i32* %62, align 8
  br label %131

63:                                               ; preds = %50
  %64 = tail call %"class.v8::internal::wasm::AsmType"* @_ZN2v88internal4wasm11AsmJsParser18AdditiveExpressionEv(%"class.v8::internal::wasm::AsmJsParser"* %0)
  %65 = load i8, i8* %15, align 4, !range !69
  %66 = icmp eq i8 %65, 0
  br i1 %66, label %67, label %131

67:                                               ; preds = %63
  br i1 %52, label %68, label %72

68:                                               ; preds = %67
  %69 = load i64, i64* %24, align 8
  %70 = icmp eq i64 %53, %69
  br i1 %70, label %71, label %72

71:                                               ; preds = %68
  store i64 %54, i64* %19, align 8
  store i32 %51, i32* %25, align 8
  br label %72

72:                                               ; preds = %71, %68, %67
  %73 = tail call zeroext i1 @_ZN2v88internal4wasm7AsmType3IsAEPS2_(%"class.v8::internal::wasm::AsmType"* %32, %"class.v8::internal::wasm::AsmType"* nonnull inttoptr (i64 257 to %"class.v8::internal::wasm::AsmType"*)) #12
  br i1 %73, label %74, label %76

74:                                               ; preds = %72
  %75 = tail call zeroext i1 @_ZN2v88internal4wasm7AsmType3IsAEPS2_(%"class.v8::internal::wasm::AsmType"* %64, %"class.v8::internal::wasm::AsmType"* nonnull inttoptr (i64 257 to %"class.v8::internal::wasm::AsmType"*)) #12
  br i1 %75, label %81, label %76

76:                                               ; preds = %74, %72
  store i8 1, i8* %15, align 4
  %77 = getelementptr inbounds %"class.v8::internal::wasm::AsmJsParser", %"class.v8::internal::wasm::AsmJsParser"* %0, i64 0, i32 18
  store i8* getelementptr inbounds ([33 x i8], [33 x i8]* @.str.78, i64 0, i64 0), i8** %77, align 8
  %78 = load i64, i64* %24, align 8
  %79 = trunc i64 %78 to i32
  %80 = getelementptr inbounds %"class.v8::internal::wasm::AsmJsParser", %"class.v8::internal::wasm::AsmJsParser"* %0, i64 0, i32 19
  store i32 %79, i32* %80, align 8
  br label %131

81:                                               ; preds = %74
  %82 = load %"class.v8::internal::wasm::WasmFunctionBuilder"*, %"class.v8::internal::wasm::WasmFunctionBuilder"** %22, align 8
  tail call void @_ZN2v88internal4wasm19WasmFunctionBuilder4EmitENS1_10WasmOpcodeE(%"class.v8::internal::wasm::WasmFunctionBuilder"* %82, i32 117) #12
  br label %26

83:                                               ; preds = %31
  tail call void @_ZN2v88internal12AsmJsScanner4NextEv(%"class.v8::internal::AsmJsScanner"* %20) #12
  store i64 -1, i64* %19, align 8
  %84 = tail call i64 @_ZN2v88internal23GetCurrentStackPositionEv() #12
  %85 = load i64, i64* %3, align 8
  %86 = icmp ult i64 %84, %85
  br i1 %86, label %87, label %92

87:                                               ; preds = %83
  store i8 1, i8* %15, align 4
  %88 = getelementptr inbounds %"class.v8::internal::wasm::AsmJsParser", %"class.v8::internal::wasm::AsmJsParser"* %0, i64 0, i32 18
  store i8* getelementptr inbounds ([44 x i8], [44 x i8]* @.str.2, i64 0, i64 0), i8** %88, align 8
  %89 = load i64, i64* %24, align 8
  %90 = trunc i64 %89 to i32
  %91 = getelementptr inbounds %"class.v8::internal::wasm::AsmJsParser", %"class.v8::internal::wasm::AsmJsParser"* %0, i64 0, i32 19
  store i32 %90, i32* %91, align 8
  br label %131

92:                                               ; preds = %83
  %93 = tail call %"class.v8::internal::wasm::AsmType"* @_ZN2v88internal4wasm11AsmJsParser18AdditiveExpressionEv(%"class.v8::internal::wasm::AsmJsParser"* %0)
  %94 = load i8, i8* %15, align 4, !range !69
  %95 = icmp eq i8 %94, 0
  br i1 %95, label %96, label %131

96:                                               ; preds = %92
  %97 = tail call zeroext i1 @_ZN2v88internal4wasm7AsmType3IsAEPS2_(%"class.v8::internal::wasm::AsmType"* %32, %"class.v8::internal::wasm::AsmType"* nonnull inttoptr (i64 257 to %"class.v8::internal::wasm::AsmType"*)) #12
  br i1 %97, label %98, label %100

98:                                               ; preds = %96
  %99 = tail call zeroext i1 @_ZN2v88internal4wasm7AsmType3IsAEPS2_(%"class.v8::internal::wasm::AsmType"* %93, %"class.v8::internal::wasm::AsmType"* nonnull inttoptr (i64 257 to %"class.v8::internal::wasm::AsmType"*)) #12
  br i1 %99, label %105, label %100

100:                                              ; preds = %98, %96
  store i8 1, i8* %15, align 4
  %101 = getelementptr inbounds %"class.v8::internal::wasm::AsmJsParser", %"class.v8::internal::wasm::AsmJsParser"* %0, i64 0, i32 18
  store i8* getelementptr inbounds ([35 x i8], [35 x i8]* @.str.79, i64 0, i64 0), i8** %101, align 8
  %102 = load i64, i64* %24, align 8
  %103 = trunc i64 %102 to i32
  %104 = getelementptr inbounds %"class.v8::internal::wasm::AsmJsParser", %"class.v8::internal::wasm::AsmJsParser"* %0, i64 0, i32 19
  store i32 %103, i32* %104, align 8
  br label %131

105:                                              ; preds = %98, %124
  %106 = phi i32 [ 118, %124 ], [ 116, %98 ]
  %107 = phi %"class.v8::internal::wasm::AsmType"* [ inttoptr (i64 2817 to %"class.v8::internal::wasm::AsmType"*), %124 ], [ inttoptr (i64 1825 to %"class.v8::internal::wasm::AsmType"*), %98 ]
  %108 = load %"class.v8::internal::wasm::WasmFunctionBuilder"*, %"class.v8::internal::wasm::WasmFunctionBuilder"** %22, align 8
  tail call void @_ZN2v88internal4wasm19WasmFunctionBuilder4EmitENS1_10WasmOpcodeE(%"class.v8::internal::wasm::WasmFunctionBuilder"* %108, i32 %106) #12
  br label %31

109:                                              ; preds = %31
  tail call void @_ZN2v88internal12AsmJsScanner4NextEv(%"class.v8::internal::AsmJsScanner"* %20) #12
  store i64 -1, i64* %19, align 8
  %110 = tail call i64 @_ZN2v88internal23GetCurrentStackPositionEv() #12
  %111 = load i64, i64* %3, align 8
  %112 = icmp ult i64 %110, %111
  br i1 %112, label %113, label %118

113:                                              ; preds = %109
  store i8 1, i8* %15, align 4
  %114 = getelementptr inbounds %"class.v8::internal::wasm::AsmJsParser", %"class.v8::internal::wasm::AsmJsParser"* %0, i64 0, i32 18
  store i8* getelementptr inbounds ([44 x i8], [44 x i8]* @.str.2, i64 0, i64 0), i8** %114, align 8
  %115 = load i64, i64* %24, align 8
  %116 = trunc i64 %115 to i32
  %117 = getelementptr inbounds %"class.v8::internal::wasm::AsmJsParser", %"class.v8::internal::wasm::AsmJsParser"* %0, i64 0, i32 19
  store i32 %116, i32* %117, align 8
  br label %131

118:                                              ; preds = %109
  %119 = tail call %"class.v8::internal::wasm::AsmType"* @_ZN2v88internal4wasm11AsmJsParser18AdditiveExpressionEv(%"class.v8::internal::wasm::AsmJsParser"* %0)
  %120 = load i8, i8* %15, align 4, !range !69
  %121 = icmp eq i8 %120, 0
  br i1 %121, label %122, label %131

122:                                              ; preds = %118
  %123 = tail call zeroext i1 @_ZN2v88internal4wasm7AsmType3IsAEPS2_(%"class.v8::internal::wasm::AsmType"* %32, %"class.v8::internal::wasm::AsmType"* nonnull inttoptr (i64 257 to %"class.v8::internal::wasm::AsmType"*)) #12
  br i1 %123, label %124, label %126

124:                                              ; preds = %122
  %125 = tail call zeroext i1 @_ZN2v88internal4wasm7AsmType3IsAEPS2_(%"class.v8::internal::wasm::AsmType"* %119, %"class.v8::internal::wasm::AsmType"* nonnull inttoptr (i64 257 to %"class.v8::internal::wasm::AsmType"*)) #12
  br i1 %125, label %105, label %126

126:                                              ; preds = %124, %122
  store i8 1, i8* %15, align 4
  %127 = getelementptr inbounds %"class.v8::internal::wasm::AsmJsParser", %"class.v8::internal::wasm::AsmJsParser"* %0, i64 0, i32 18
  store i8* getelementptr inbounds ([36 x i8], [36 x i8]* @.str.80, i64 0, i64 0), i8** %127, align 8
  %128 = load i64, i64* %24, align 8
  %129 = trunc i64 %128 to i32
  %130 = getelementptr inbounds %"class.v8::internal::wasm::AsmJsParser", %"class.v8::internal::wasm::AsmJsParser"* %0, i64 0, i32 19
  store i32 %129, i32* %130, align 8
  br label %131

131:                                              ; preds = %63, %118, %92, %31, %126, %113, %100, %87, %76, %58, %13, %6
  %132 = phi %"class.v8::internal::wasm::AsmType"* [ null, %6 ], [ null, %13 ], [ null, %58 ], [ null, %76 ], [ null, %87 ], [ null, %100 ], [ null, %113 ], [ null, %126 ], [ %32, %31 ], [ null, %92 ], [ null, %118 ], [ null, %63 ]
  ret %"class.v8::internal::wasm::AsmType"* %132
}

; Function Attrs: nounwind ssp uwtable
define hidden %"class.v8::internal::wasm::AsmType"* @_ZN2v88internal4wasm11AsmJsParser20RelationalExpressionEv(%"class.v8::internal::wasm::AsmJsParser"*) local_unnamed_addr #0 align 2 {
  %2 = tail call i64 @_ZN2v88internal23GetCurrentStackPositionEv() #12
  %3 = getelementptr inbounds %"class.v8::internal::wasm::AsmJsParser", %"class.v8::internal::wasm::AsmJsParser"* %0, i64 0, i32 5
  %4 = load i64, i64* %3, align 8
  %5 = icmp ult i64 %2, %4
  br i1 %5, label %6, label %13

6:                                                ; preds = %1
  %7 = getelementptr inbounds %"class.v8::internal::wasm::AsmJsParser", %"class.v8::internal::wasm::AsmJsParser"* %0, i64 0, i32 17
  store i8 1, i8* %7, align 4
  %8 = getelementptr inbounds %"class.v8::internal::wasm::AsmJsParser", %"class.v8::internal::wasm::AsmJsParser"* %0, i64 0, i32 18
  store i8* getelementptr inbounds ([44 x i8], [44 x i8]* @.str.2, i64 0, i64 0), i8** %8, align 8
  %9 = getelementptr inbounds %"class.v8::internal::wasm::AsmJsParser", %"class.v8::internal::wasm::AsmJsParser"* %0, i64 0, i32 1, i32 5
  %10 = load i64, i64* %9, align 8
  %11 = trunc i64 %10 to i32
  %12 = getelementptr inbounds %"class.v8::internal::wasm::AsmJsParser", %"class.v8::internal::wasm::AsmJsParser"* %0, i64 0, i32 19
  store i32 %11, i32* %12, align 8
  br label %172

13:                                               ; preds = %1
  %14 = tail call %"class.v8::internal::wasm::AsmType"* @_ZN2v88internal4wasm11AsmJsParser15ShiftExpressionEv(%"class.v8::internal::wasm::AsmJsParser"* %0)
  %15 = getelementptr inbounds %"class.v8::internal::wasm::AsmJsParser", %"class.v8::internal::wasm::AsmJsParser"* %0, i64 0, i32 17
  %16 = load i8, i8* %15, align 4, !range !69
  %17 = icmp eq i8 %16, 0
  br i1 %17, label %18, label %172

18:                                               ; preds = %13
  %19 = getelementptr inbounds %"class.v8::internal::wasm::AsmJsParser", %"class.v8::internal::wasm::AsmJsParser"* %0, i64 0, i32 1
  %20 = getelementptr inbounds %"class.v8::internal::wasm::AsmJsParser", %"class.v8::internal::wasm::AsmJsParser"* %0, i64 0, i32 1, i32 1
  %21 = getelementptr inbounds %"class.v8::internal::wasm::AsmJsParser", %"class.v8::internal::wasm::AsmJsParser"* %0, i64 0, i32 3
  br label %22

22:                                               ; preds = %61, %18
  %23 = phi %"class.v8::internal::wasm::AsmType"* [ %14, %18 ], [ inttoptr (i64 769 to %"class.v8::internal::wasm::AsmType"*), %61 ]
  %24 = load i32, i32* %20, align 8
  switch i32 %24, label %172 [
    i32 60, label %25
    i32 -9944, label %64
    i32 62, label %100
    i32 -9943, label %136
  ]

25:                                               ; preds = %22
  tail call void @_ZN2v88internal12AsmJsScanner4NextEv(%"class.v8::internal::AsmJsScanner"* %19) #12
  %26 = tail call i64 @_ZN2v88internal23GetCurrentStackPositionEv() #12
  %27 = load i64, i64* %3, align 8
  %28 = icmp ult i64 %26, %27
  br i1 %28, label %29, label %35

29:                                               ; preds = %25
  store i8 1, i8* %15, align 4
  %30 = getelementptr inbounds %"class.v8::internal::wasm::AsmJsParser", %"class.v8::internal::wasm::AsmJsParser"* %0, i64 0, i32 18
  store i8* getelementptr inbounds ([44 x i8], [44 x i8]* @.str.2, i64 0, i64 0), i8** %30, align 8
  %31 = getelementptr inbounds %"class.v8::internal::wasm::AsmJsParser", %"class.v8::internal::wasm::AsmJsParser"* %0, i64 0, i32 1, i32 5
  %32 = load i64, i64* %31, align 8
  %33 = trunc i64 %32 to i32
  %34 = getelementptr inbounds %"class.v8::internal::wasm::AsmJsParser", %"class.v8::internal::wasm::AsmJsParser"* %0, i64 0, i32 19
  store i32 %33, i32* %34, align 8
  br label %172

35:                                               ; preds = %25
  %36 = tail call %"class.v8::internal::wasm::AsmType"* @_ZN2v88internal4wasm11AsmJsParser15ShiftExpressionEv(%"class.v8::internal::wasm::AsmJsParser"* %0)
  %37 = load i8, i8* %15, align 4, !range !69
  %38 = icmp eq i8 %37, 0
  br i1 %38, label %39, label %172

39:                                               ; preds = %35
  %40 = tail call zeroext i1 @_ZN2v88internal4wasm7AsmType3IsAEPS2_(%"class.v8::internal::wasm::AsmType"* %23, %"class.v8::internal::wasm::AsmType"* nonnull inttoptr (i64 1825 to %"class.v8::internal::wasm::AsmType"*)) #12
  br i1 %40, label %41, label %43

41:                                               ; preds = %39
  %42 = tail call zeroext i1 @_ZN2v88internal4wasm7AsmType3IsAEPS2_(%"class.v8::internal::wasm::AsmType"* %36, %"class.v8::internal::wasm::AsmType"* nonnull inttoptr (i64 1825 to %"class.v8::internal::wasm::AsmType"*)) #12
  br i1 %42, label %61, label %43

43:                                               ; preds = %41, %39
  %44 = tail call zeroext i1 @_ZN2v88internal4wasm7AsmType3IsAEPS2_(%"class.v8::internal::wasm::AsmType"* %23, %"class.v8::internal::wasm::AsmType"* nonnull inttoptr (i64 2817 to %"class.v8::internal::wasm::AsmType"*)) #12
  br i1 %44, label %45, label %47

45:                                               ; preds = %43
  %46 = tail call zeroext i1 @_ZN2v88internal4wasm7AsmType3IsAEPS2_(%"class.v8::internal::wasm::AsmType"* %36, %"class.v8::internal::wasm::AsmType"* nonnull inttoptr (i64 2817 to %"class.v8::internal::wasm::AsmType"*)) #12
  br i1 %46, label %61, label %47

47:                                               ; preds = %45, %43
  %48 = tail call zeroext i1 @_ZN2v88internal4wasm7AsmType3IsAEPS2_(%"class.v8::internal::wasm::AsmType"* %23, %"class.v8::internal::wasm::AsmType"* nonnull inttoptr (i64 237 to %"class.v8::internal::wasm::AsmType"*)) #12
  br i1 %48, label %49, label %51

49:                                               ; preds = %47
  %50 = tail call zeroext i1 @_ZN2v88internal4wasm7AsmType3IsAEPS2_(%"class.v8::internal::wasm::AsmType"* %36, %"class.v8::internal::wasm::AsmType"* nonnull inttoptr (i64 237 to %"class.v8::internal::wasm::AsmType"*)) #12
  br i1 %50, label %61, label %51

51:                                               ; preds = %49, %47
  %52 = tail call zeroext i1 @_ZN2v88internal4wasm7AsmType3IsAEPS2_(%"class.v8::internal::wasm::AsmType"* %23, %"class.v8::internal::wasm::AsmType"* nonnull inttoptr (i64 57357 to %"class.v8::internal::wasm::AsmType"*)) #12
  br i1 %52, label %53, label %55

53:                                               ; preds = %51
  %54 = tail call zeroext i1 @_ZN2v88internal4wasm7AsmType3IsAEPS2_(%"class.v8::internal::wasm::AsmType"* %36, %"class.v8::internal::wasm::AsmType"* nonnull inttoptr (i64 57357 to %"class.v8::internal::wasm::AsmType"*)) #12
  br i1 %54, label %61, label %55

55:                                               ; preds = %53, %51
  store i8 1, i8* %15, align 4
  %56 = getelementptr inbounds %"class.v8::internal::wasm::AsmJsParser", %"class.v8::internal::wasm::AsmJsParser"* %0, i64 0, i32 18
  store i8* getelementptr inbounds ([62 x i8], [62 x i8]* @.str.81, i64 0, i64 0), i8** %56, align 8
  %57 = getelementptr inbounds %"class.v8::internal::wasm::AsmJsParser", %"class.v8::internal::wasm::AsmJsParser"* %0, i64 0, i32 1, i32 5
  %58 = load i64, i64* %57, align 8
  %59 = trunc i64 %58 to i32
  %60 = getelementptr inbounds %"class.v8::internal::wasm::AsmJsParser", %"class.v8::internal::wasm::AsmJsParser"* %0, i64 0, i32 19
  store i32 %59, i32* %60, align 8
  br label %172

61:                                               ; preds = %53, %49, %45, %41, %164, %160, %156, %152, %128, %124, %120, %116, %92, %88, %84, %80
  %62 = phi i32 [ 76, %80 ], [ 77, %84 ], [ 101, %88 ], [ 95, %92 ], [ 74, %116 ], [ 75, %120 ], [ 100, %124 ], [ 94, %128 ], [ 78, %152 ], [ 79, %156 ], [ 102, %160 ], [ 96, %164 ], [ 72, %41 ], [ 73, %45 ], [ 99, %49 ], [ 93, %53 ]
  %63 = load %"class.v8::internal::wasm::WasmFunctionBuilder"*, %"class.v8::internal::wasm::WasmFunctionBuilder"** %21, align 8
  tail call void @_ZN2v88internal4wasm19WasmFunctionBuilder4EmitENS1_10WasmOpcodeE(%"class.v8::internal::wasm::WasmFunctionBuilder"* %63, i32 %62) #12
  br label %22

64:                                               ; preds = %22
  tail call void @_ZN2v88internal12AsmJsScanner4NextEv(%"class.v8::internal::AsmJsScanner"* %19) #12
  %65 = tail call i64 @_ZN2v88internal23GetCurrentStackPositionEv() #12
  %66 = load i64, i64* %3, align 8
  %67 = icmp ult i64 %65, %66
  br i1 %67, label %68, label %74

68:                                               ; preds = %64
  store i8 1, i8* %15, align 4
  %69 = getelementptr inbounds %"class.v8::internal::wasm::AsmJsParser", %"class.v8::internal::wasm::AsmJsParser"* %0, i64 0, i32 18
  store i8* getelementptr inbounds ([44 x i8], [44 x i8]* @.str.2, i64 0, i64 0), i8** %69, align 8
  %70 = getelementptr inbounds %"class.v8::internal::wasm::AsmJsParser", %"class.v8::internal::wasm::AsmJsParser"* %0, i64 0, i32 1, i32 5
  %71 = load i64, i64* %70, align 8
  %72 = trunc i64 %71 to i32
  %73 = getelementptr inbounds %"class.v8::internal::wasm::AsmJsParser", %"class.v8::internal::wasm::AsmJsParser"* %0, i64 0, i32 19
  store i32 %72, i32* %73, align 8
  br label %172

74:                                               ; preds = %64
  %75 = tail call %"class.v8::internal::wasm::AsmType"* @_ZN2v88internal4wasm11AsmJsParser15ShiftExpressionEv(%"class.v8::internal::wasm::AsmJsParser"* %0)
  %76 = load i8, i8* %15, align 4, !range !69
  %77 = icmp eq i8 %76, 0
  br i1 %77, label %78, label %172

78:                                               ; preds = %74
  %79 = tail call zeroext i1 @_ZN2v88internal4wasm7AsmType3IsAEPS2_(%"class.v8::internal::wasm::AsmType"* %23, %"class.v8::internal::wasm::AsmType"* nonnull inttoptr (i64 1825 to %"class.v8::internal::wasm::AsmType"*)) #12
  br i1 %79, label %80, label %82

80:                                               ; preds = %78
  %81 = tail call zeroext i1 @_ZN2v88internal4wasm7AsmType3IsAEPS2_(%"class.v8::internal::wasm::AsmType"* %75, %"class.v8::internal::wasm::AsmType"* nonnull inttoptr (i64 1825 to %"class.v8::internal::wasm::AsmType"*)) #12
  br i1 %81, label %61, label %82

82:                                               ; preds = %80, %78
  %83 = tail call zeroext i1 @_ZN2v88internal4wasm7AsmType3IsAEPS2_(%"class.v8::internal::wasm::AsmType"* %23, %"class.v8::internal::wasm::AsmType"* nonnull inttoptr (i64 2817 to %"class.v8::internal::wasm::AsmType"*)) #12
  br i1 %83, label %84, label %86

84:                                               ; preds = %82
  %85 = tail call zeroext i1 @_ZN2v88internal4wasm7AsmType3IsAEPS2_(%"class.v8::internal::wasm::AsmType"* %75, %"class.v8::internal::wasm::AsmType"* nonnull inttoptr (i64 2817 to %"class.v8::internal::wasm::AsmType"*)) #12
  br i1 %85, label %61, label %86

86:                                               ; preds = %84, %82
  %87 = tail call zeroext i1 @_ZN2v88internal4wasm7AsmType3IsAEPS2_(%"class.v8::internal::wasm::AsmType"* %23, %"class.v8::internal::wasm::AsmType"* nonnull inttoptr (i64 237 to %"class.v8::internal::wasm::AsmType"*)) #12
  br i1 %87, label %88, label %90

88:                                               ; preds = %86
  %89 = tail call zeroext i1 @_ZN2v88internal4wasm7AsmType3IsAEPS2_(%"class.v8::internal::wasm::AsmType"* %75, %"class.v8::internal::wasm::AsmType"* nonnull inttoptr (i64 237 to %"class.v8::internal::wasm::AsmType"*)) #12
  br i1 %89, label %61, label %90

90:                                               ; preds = %88, %86
  %91 = tail call zeroext i1 @_ZN2v88internal4wasm7AsmType3IsAEPS2_(%"class.v8::internal::wasm::AsmType"* %23, %"class.v8::internal::wasm::AsmType"* nonnull inttoptr (i64 57357 to %"class.v8::internal::wasm::AsmType"*)) #12
  br i1 %91, label %92, label %94

92:                                               ; preds = %90
  %93 = tail call zeroext i1 @_ZN2v88internal4wasm7AsmType3IsAEPS2_(%"class.v8::internal::wasm::AsmType"* %75, %"class.v8::internal::wasm::AsmType"* nonnull inttoptr (i64 57357 to %"class.v8::internal::wasm::AsmType"*)) #12
  br i1 %93, label %61, label %94

94:                                               ; preds = %92, %90
  store i8 1, i8* %15, align 4
  %95 = getelementptr inbounds %"class.v8::internal::wasm::AsmJsParser", %"class.v8::internal::wasm::AsmJsParser"* %0, i64 0, i32 18
  store i8* getelementptr inbounds ([63 x i8], [63 x i8]* @.str.82, i64 0, i64 0), i8** %95, align 8
  %96 = getelementptr inbounds %"class.v8::internal::wasm::AsmJsParser", %"class.v8::internal::wasm::AsmJsParser"* %0, i64 0, i32 1, i32 5
  %97 = load i64, i64* %96, align 8
  %98 = trunc i64 %97 to i32
  %99 = getelementptr inbounds %"class.v8::internal::wasm::AsmJsParser", %"class.v8::internal::wasm::AsmJsParser"* %0, i64 0, i32 19
  store i32 %98, i32* %99, align 8
  br label %172

100:                                              ; preds = %22
  tail call void @_ZN2v88internal12AsmJsScanner4NextEv(%"class.v8::internal::AsmJsScanner"* %19) #12
  %101 = tail call i64 @_ZN2v88internal23GetCurrentStackPositionEv() #12
  %102 = load i64, i64* %3, align 8
  %103 = icmp ult i64 %101, %102
  br i1 %103, label %104, label %110

104:                                              ; preds = %100
  store i8 1, i8* %15, align 4
  %105 = getelementptr inbounds %"class.v8::internal::wasm::AsmJsParser", %"class.v8::internal::wasm::AsmJsParser"* %0, i64 0, i32 18
  store i8* getelementptr inbounds ([44 x i8], [44 x i8]* @.str.2, i64 0, i64 0), i8** %105, align 8
  %106 = getelementptr inbounds %"class.v8::internal::wasm::AsmJsParser", %"class.v8::internal::wasm::AsmJsParser"* %0, i64 0, i32 1, i32 5
  %107 = load i64, i64* %106, align 8
  %108 = trunc i64 %107 to i32
  %109 = getelementptr inbounds %"class.v8::internal::wasm::AsmJsParser", %"class.v8::internal::wasm::AsmJsParser"* %0, i64 0, i32 19
  store i32 %108, i32* %109, align 8
  br label %172

110:                                              ; preds = %100
  %111 = tail call %"class.v8::internal::wasm::AsmType"* @_ZN2v88internal4wasm11AsmJsParser15ShiftExpressionEv(%"class.v8::internal::wasm::AsmJsParser"* %0)
  %112 = load i8, i8* %15, align 4, !range !69
  %113 = icmp eq i8 %112, 0
  br i1 %113, label %114, label %172

114:                                              ; preds = %110
  %115 = tail call zeroext i1 @_ZN2v88internal4wasm7AsmType3IsAEPS2_(%"class.v8::internal::wasm::AsmType"* %23, %"class.v8::internal::wasm::AsmType"* nonnull inttoptr (i64 1825 to %"class.v8::internal::wasm::AsmType"*)) #12
  br i1 %115, label %116, label %118

116:                                              ; preds = %114
  %117 = tail call zeroext i1 @_ZN2v88internal4wasm7AsmType3IsAEPS2_(%"class.v8::internal::wasm::AsmType"* %111, %"class.v8::internal::wasm::AsmType"* nonnull inttoptr (i64 1825 to %"class.v8::internal::wasm::AsmType"*)) #12
  br i1 %117, label %61, label %118

118:                                              ; preds = %116, %114
  %119 = tail call zeroext i1 @_ZN2v88internal4wasm7AsmType3IsAEPS2_(%"class.v8::internal::wasm::AsmType"* %23, %"class.v8::internal::wasm::AsmType"* nonnull inttoptr (i64 2817 to %"class.v8::internal::wasm::AsmType"*)) #12
  br i1 %119, label %120, label %122

120:                                              ; preds = %118
  %121 = tail call zeroext i1 @_ZN2v88internal4wasm7AsmType3IsAEPS2_(%"class.v8::internal::wasm::AsmType"* %111, %"class.v8::internal::wasm::AsmType"* nonnull inttoptr (i64 2817 to %"class.v8::internal::wasm::AsmType"*)) #12
  br i1 %121, label %61, label %122

122:                                              ; preds = %120, %118
  %123 = tail call zeroext i1 @_ZN2v88internal4wasm7AsmType3IsAEPS2_(%"class.v8::internal::wasm::AsmType"* %23, %"class.v8::internal::wasm::AsmType"* nonnull inttoptr (i64 237 to %"class.v8::internal::wasm::AsmType"*)) #12
  br i1 %123, label %124, label %126

124:                                              ; preds = %122
  %125 = tail call zeroext i1 @_ZN2v88internal4wasm7AsmType3IsAEPS2_(%"class.v8::internal::wasm::AsmType"* %111, %"class.v8::internal::wasm::AsmType"* nonnull inttoptr (i64 237 to %"class.v8::internal::wasm::AsmType"*)) #12
  br i1 %125, label %61, label %126

126:                                              ; preds = %124, %122
  %127 = tail call zeroext i1 @_ZN2v88internal4wasm7AsmType3IsAEPS2_(%"class.v8::internal::wasm::AsmType"* %23, %"class.v8::internal::wasm::AsmType"* nonnull inttoptr (i64 57357 to %"class.v8::internal::wasm::AsmType"*)) #12
  br i1 %127, label %128, label %130

128:                                              ; preds = %126
  %129 = tail call zeroext i1 @_ZN2v88internal4wasm7AsmType3IsAEPS2_(%"class.v8::internal::wasm::AsmType"* %111, %"class.v8::internal::wasm::AsmType"* nonnull inttoptr (i64 57357 to %"class.v8::internal::wasm::AsmType"*)) #12
  br i1 %129, label %61, label %130

130:                                              ; preds = %128, %126
  store i8 1, i8* %15, align 4
  %131 = getelementptr inbounds %"class.v8::internal::wasm::AsmJsParser", %"class.v8::internal::wasm::AsmJsParser"* %0, i64 0, i32 18
  store i8* getelementptr inbounds ([62 x i8], [62 x i8]* @.str.83, i64 0, i64 0), i8** %131, align 8
  %132 = getelementptr inbounds %"class.v8::internal::wasm::AsmJsParser", %"class.v8::internal::wasm::AsmJsParser"* %0, i64 0, i32 1, i32 5
  %133 = load i64, i64* %132, align 8
  %134 = trunc i64 %133 to i32
  %135 = getelementptr inbounds %"class.v8::internal::wasm::AsmJsParser", %"class.v8::internal::wasm::AsmJsParser"* %0, i64 0, i32 19
  store i32 %134, i32* %135, align 8
  br label %172

136:                                              ; preds = %22
  tail call void @_ZN2v88internal12AsmJsScanner4NextEv(%"class.v8::internal::AsmJsScanner"* %19) #12
  %137 = tail call i64 @_ZN2v88internal23GetCurrentStackPositionEv() #12
  %138 = load i64, i64* %3, align 8
  %139 = icmp ult i64 %137, %138
  br i1 %139, label %140, label %146

140:                                              ; preds = %136
  store i8 1, i8* %15, align 4
  %141 = getelementptr inbounds %"class.v8::internal::wasm::AsmJsParser", %"class.v8::internal::wasm::AsmJsParser"* %0, i64 0, i32 18
  store i8* getelementptr inbounds ([44 x i8], [44 x i8]* @.str.2, i64 0, i64 0), i8** %141, align 8
  %142 = getelementptr inbounds %"class.v8::internal::wasm::AsmJsParser", %"class.v8::internal::wasm::AsmJsParser"* %0, i64 0, i32 1, i32 5
  %143 = load i64, i64* %142, align 8
  %144 = trunc i64 %143 to i32
  %145 = getelementptr inbounds %"class.v8::internal::wasm::AsmJsParser", %"class.v8::internal::wasm::AsmJsParser"* %0, i64 0, i32 19
  store i32 %144, i32* %145, align 8
  br label %172

146:                                              ; preds = %136
  %147 = tail call %"class.v8::internal::wasm::AsmType"* @_ZN2v88internal4wasm11AsmJsParser15ShiftExpressionEv(%"class.v8::internal::wasm::AsmJsParser"* %0)
  %148 = load i8, i8* %15, align 4, !range !69
  %149 = icmp eq i8 %148, 0
  br i1 %149, label %150, label %172

150:                                              ; preds = %146
  %151 = tail call zeroext i1 @_ZN2v88internal4wasm7AsmType3IsAEPS2_(%"class.v8::internal::wasm::AsmType"* %23, %"class.v8::internal::wasm::AsmType"* nonnull inttoptr (i64 1825 to %"class.v8::internal::wasm::AsmType"*)) #12
  br i1 %151, label %152, label %154

152:                                              ; preds = %150
  %153 = tail call zeroext i1 @_ZN2v88internal4wasm7AsmType3IsAEPS2_(%"class.v8::internal::wasm::AsmType"* %147, %"class.v8::internal::wasm::AsmType"* nonnull inttoptr (i64 1825 to %"class.v8::internal::wasm::AsmType"*)) #12
  br i1 %153, label %61, label %154

154:                                              ; preds = %152, %150
  %155 = tail call zeroext i1 @_ZN2v88internal4wasm7AsmType3IsAEPS2_(%"class.v8::internal::wasm::AsmType"* %23, %"class.v8::internal::wasm::AsmType"* nonnull inttoptr (i64 2817 to %"class.v8::internal::wasm::AsmType"*)) #12
  br i1 %155, label %156, label %158

156:                                              ; preds = %154
  %157 = tail call zeroext i1 @_ZN2v88internal4wasm7AsmType3IsAEPS2_(%"class.v8::internal::wasm::AsmType"* %147, %"class.v8::internal::wasm::AsmType"* nonnull inttoptr (i64 2817 to %"class.v8::internal::wasm::AsmType"*)) #12
  br i1 %157, label %61, label %158

158:                                              ; preds = %156, %154
  %159 = tail call zeroext i1 @_ZN2v88internal4wasm7AsmType3IsAEPS2_(%"class.v8::internal::wasm::AsmType"* %23, %"class.v8::internal::wasm::AsmType"* nonnull inttoptr (i64 237 to %"class.v8::internal::wasm::AsmType"*)) #12
  br i1 %159, label %160, label %162

160:                                              ; preds = %158
  %161 = tail call zeroext i1 @_ZN2v88internal4wasm7AsmType3IsAEPS2_(%"class.v8::internal::wasm::AsmType"* %147, %"class.v8::internal::wasm::AsmType"* nonnull inttoptr (i64 237 to %"class.v8::internal::wasm::AsmType"*)) #12
  br i1 %161, label %61, label %162

162:                                              ; preds = %160, %158
  %163 = tail call zeroext i1 @_ZN2v88internal4wasm7AsmType3IsAEPS2_(%"class.v8::internal::wasm::AsmType"* %23, %"class.v8::internal::wasm::AsmType"* nonnull inttoptr (i64 57357 to %"class.v8::internal::wasm::AsmType"*)) #12
  br i1 %163, label %164, label %166

164:                                              ; preds = %162
  %165 = tail call zeroext i1 @_ZN2v88internal4wasm7AsmType3IsAEPS2_(%"class.v8::internal::wasm::AsmType"* %147, %"class.v8::internal::wasm::AsmType"* nonnull inttoptr (i64 57357 to %"class.v8::internal::wasm::AsmType"*)) #12
  br i1 %165, label %61, label %166

166:                                              ; preds = %164, %162
  store i8 1, i8* %15, align 4
  %167 = getelementptr inbounds %"class.v8::internal::wasm::AsmJsParser", %"class.v8::internal::wasm::AsmJsParser"* %0, i64 0, i32 18
  store i8* getelementptr inbounds ([63 x i8], [63 x i8]* @.str.84, i64 0, i64 0), i8** %167, align 8
  %168 = getelementptr inbounds %"class.v8::internal::wasm::AsmJsParser", %"class.v8::internal::wasm::AsmJsParser"* %0, i64 0, i32 1, i32 5
  %169 = load i64, i64* %168, align 8
  %170 = trunc i64 %169 to i32
  %171 = getelementptr inbounds %"class.v8::internal::wasm::AsmJsParser", %"class.v8::internal::wasm::AsmJsParser"* %0, i64 0, i32 19
  store i32 %170, i32* %171, align 8
  br label %172

172:                                              ; preds = %146, %110, %74, %35, %22, %166, %140, %130, %104, %94, %68, %55, %29, %13, %6
  %173 = phi %"class.v8::internal::wasm::AsmType"* [ null, %6 ], [ null, %13 ], [ null, %29 ], [ null, %55 ], [ null, %68 ], [ null, %94 ], [ null, %104 ], [ null, %130 ], [ null, %140 ], [ null, %166 ], [ null, %146 ], [ null, %110 ], [ null, %74 ], [ null, %35 ], [ %23, %22 ]
  ret %"class.v8::internal::wasm::AsmType"* %173
}

; Function Attrs: nounwind ssp uwtable
define hidden %"class.v8::internal::wasm::AsmType"* @_ZN2v88internal4wasm11AsmJsParser18EqualityExpressionEv(%"class.v8::internal::wasm::AsmJsParser"*) local_unnamed_addr #0 align 2 {
  %2 = tail call i64 @_ZN2v88internal23GetCurrentStackPositionEv() #12
  %3 = getelementptr inbounds %"class.v8::internal::wasm::AsmJsParser", %"class.v8::internal::wasm::AsmJsParser"* %0, i64 0, i32 5
  %4 = load i64, i64* %3, align 8
  %5 = icmp ult i64 %2, %4
  br i1 %5, label %6, label %13

6:                                                ; preds = %1
  %7 = getelementptr inbounds %"class.v8::internal::wasm::AsmJsParser", %"class.v8::internal::wasm::AsmJsParser"* %0, i64 0, i32 17
  store i8 1, i8* %7, align 4
  %8 = getelementptr inbounds %"class.v8::internal::wasm::AsmJsParser", %"class.v8::internal::wasm::AsmJsParser"* %0, i64 0, i32 18
  store i8* getelementptr inbounds ([44 x i8], [44 x i8]* @.str.2, i64 0, i64 0), i8** %8, align 8
  %9 = getelementptr inbounds %"class.v8::internal::wasm::AsmJsParser", %"class.v8::internal::wasm::AsmJsParser"* %0, i64 0, i32 1, i32 5
  %10 = load i64, i64* %9, align 8
  %11 = trunc i64 %10 to i32
  %12 = getelementptr inbounds %"class.v8::internal::wasm::AsmJsParser", %"class.v8::internal::wasm::AsmJsParser"* %0, i64 0, i32 19
  store i32 %11, i32* %12, align 8
  br label %100

13:                                               ; preds = %1
  %14 = tail call %"class.v8::internal::wasm::AsmType"* @_ZN2v88internal4wasm11AsmJsParser20RelationalExpressionEv(%"class.v8::internal::wasm::AsmJsParser"* %0)
  %15 = getelementptr inbounds %"class.v8::internal::wasm::AsmJsParser", %"class.v8::internal::wasm::AsmJsParser"* %0, i64 0, i32 17
  %16 = load i8, i8* %15, align 4, !range !69
  %17 = icmp eq i8 %16, 0
  br i1 %17, label %18, label %100

18:                                               ; preds = %13
  %19 = getelementptr inbounds %"class.v8::internal::wasm::AsmJsParser", %"class.v8::internal::wasm::AsmJsParser"* %0, i64 0, i32 1
  %20 = getelementptr inbounds %"class.v8::internal::wasm::AsmJsParser", %"class.v8::internal::wasm::AsmJsParser"* %0, i64 0, i32 1, i32 1
  %21 = getelementptr inbounds %"class.v8::internal::wasm::AsmJsParser", %"class.v8::internal::wasm::AsmJsParser"* %0, i64 0, i32 3
  br label %22

22:                                               ; preds = %61, %18
  %23 = phi %"class.v8::internal::wasm::AsmType"* [ %14, %18 ], [ inttoptr (i64 769 to %"class.v8::internal::wasm::AsmType"*), %61 ]
  %24 = load i32, i32* %20, align 8
  switch i32 %24, label %100 [
    i32 -9942, label %25
    i32 -9941, label %64
  ]

25:                                               ; preds = %22
  tail call void @_ZN2v88internal12AsmJsScanner4NextEv(%"class.v8::internal::AsmJsScanner"* %19) #12
  %26 = tail call i64 @_ZN2v88internal23GetCurrentStackPositionEv() #12
  %27 = load i64, i64* %3, align 8
  %28 = icmp ult i64 %26, %27
  br i1 %28, label %29, label %35

29:                                               ; preds = %25
  store i8 1, i8* %15, align 4
  %30 = getelementptr inbounds %"class.v8::internal::wasm::AsmJsParser", %"class.v8::internal::wasm::AsmJsParser"* %0, i64 0, i32 18
  store i8* getelementptr inbounds ([44 x i8], [44 x i8]* @.str.2, i64 0, i64 0), i8** %30, align 8
  %31 = getelementptr inbounds %"class.v8::internal::wasm::AsmJsParser", %"class.v8::internal::wasm::AsmJsParser"* %0, i64 0, i32 1, i32 5
  %32 = load i64, i64* %31, align 8
  %33 = trunc i64 %32 to i32
  %34 = getelementptr inbounds %"class.v8::internal::wasm::AsmJsParser", %"class.v8::internal::wasm::AsmJsParser"* %0, i64 0, i32 19
  store i32 %33, i32* %34, align 8
  br label %100

35:                                               ; preds = %25
  %36 = tail call %"class.v8::internal::wasm::AsmType"* @_ZN2v88internal4wasm11AsmJsParser20RelationalExpressionEv(%"class.v8::internal::wasm::AsmJsParser"* %0)
  %37 = load i8, i8* %15, align 4, !range !69
  %38 = icmp eq i8 %37, 0
  br i1 %38, label %39, label %100

39:                                               ; preds = %35
  %40 = tail call zeroext i1 @_ZN2v88internal4wasm7AsmType3IsAEPS2_(%"class.v8::internal::wasm::AsmType"* %23, %"class.v8::internal::wasm::AsmType"* nonnull inttoptr (i64 1825 to %"class.v8::internal::wasm::AsmType"*)) #12
  br i1 %40, label %41, label %43

41:                                               ; preds = %39
  %42 = tail call zeroext i1 @_ZN2v88internal4wasm7AsmType3IsAEPS2_(%"class.v8::internal::wasm::AsmType"* %36, %"class.v8::internal::wasm::AsmType"* nonnull inttoptr (i64 1825 to %"class.v8::internal::wasm::AsmType"*)) #12
  br i1 %42, label %61, label %43

43:                                               ; preds = %41, %39
  %44 = tail call zeroext i1 @_ZN2v88internal4wasm7AsmType3IsAEPS2_(%"class.v8::internal::wasm::AsmType"* %23, %"class.v8::internal::wasm::AsmType"* nonnull inttoptr (i64 2817 to %"class.v8::internal::wasm::AsmType"*)) #12
  br i1 %44, label %45, label %47

45:                                               ; preds = %43
  %46 = tail call zeroext i1 @_ZN2v88internal4wasm7AsmType3IsAEPS2_(%"class.v8::internal::wasm::AsmType"* %36, %"class.v8::internal::wasm::AsmType"* nonnull inttoptr (i64 2817 to %"class.v8::internal::wasm::AsmType"*)) #12
  br i1 %46, label %61, label %47

47:                                               ; preds = %45, %43
  %48 = tail call zeroext i1 @_ZN2v88internal4wasm7AsmType3IsAEPS2_(%"class.v8::internal::wasm::AsmType"* %23, %"class.v8::internal::wasm::AsmType"* nonnull inttoptr (i64 237 to %"class.v8::internal::wasm::AsmType"*)) #12
  br i1 %48, label %49, label %51

49:                                               ; preds = %47
  %50 = tail call zeroext i1 @_ZN2v88internal4wasm7AsmType3IsAEPS2_(%"class.v8::internal::wasm::AsmType"* %36, %"class.v8::internal::wasm::AsmType"* nonnull inttoptr (i64 237 to %"class.v8::internal::wasm::AsmType"*)) #12
  br i1 %50, label %61, label %51

51:                                               ; preds = %49, %47
  %52 = tail call zeroext i1 @_ZN2v88internal4wasm7AsmType3IsAEPS2_(%"class.v8::internal::wasm::AsmType"* %23, %"class.v8::internal::wasm::AsmType"* nonnull inttoptr (i64 57357 to %"class.v8::internal::wasm::AsmType"*)) #12
  br i1 %52, label %53, label %55

53:                                               ; preds = %51
  %54 = tail call zeroext i1 @_ZN2v88internal4wasm7AsmType3IsAEPS2_(%"class.v8::internal::wasm::AsmType"* %36, %"class.v8::internal::wasm::AsmType"* nonnull inttoptr (i64 57357 to %"class.v8::internal::wasm::AsmType"*)) #12
  br i1 %54, label %61, label %55

55:                                               ; preds = %53, %51
  store i8 1, i8* %15, align 4
  %56 = getelementptr inbounds %"class.v8::internal::wasm::AsmJsParser", %"class.v8::internal::wasm::AsmJsParser"* %0, i64 0, i32 18
  store i8* getelementptr inbounds ([63 x i8], [63 x i8]* @.str.85, i64 0, i64 0), i8** %56, align 8
  %57 = getelementptr inbounds %"class.v8::internal::wasm::AsmJsParser", %"class.v8::internal::wasm::AsmJsParser"* %0, i64 0, i32 1, i32 5
  %58 = load i64, i64* %57, align 8
  %59 = trunc i64 %58 to i32
  %60 = getelementptr inbounds %"class.v8::internal::wasm::AsmJsParser", %"class.v8::internal::wasm::AsmJsParser"* %0, i64 0, i32 19
  store i32 %59, i32* %60, align 8
  br label %100

61:                                               ; preds = %53, %49, %45, %41, %92, %88, %84, %80
  %62 = phi i32 [ 71, %80 ], [ 71, %84 ], [ 98, %88 ], [ 92, %92 ], [ 70, %41 ], [ 70, %45 ], [ 97, %49 ], [ 91, %53 ]
  %63 = load %"class.v8::internal::wasm::WasmFunctionBuilder"*, %"class.v8::internal::wasm::WasmFunctionBuilder"** %21, align 8
  tail call void @_ZN2v88internal4wasm19WasmFunctionBuilder4EmitENS1_10WasmOpcodeE(%"class.v8::internal::wasm::WasmFunctionBuilder"* %63, i32 %62) #12
  br label %22

64:                                               ; preds = %22
  tail call void @_ZN2v88internal12AsmJsScanner4NextEv(%"class.v8::internal::AsmJsScanner"* %19) #12
  %65 = tail call i64 @_ZN2v88internal23GetCurrentStackPositionEv() #12
  %66 = load i64, i64* %3, align 8
  %67 = icmp ult i64 %65, %66
  br i1 %67, label %68, label %74

68:                                               ; preds = %64
  store i8 1, i8* %15, align 4
  %69 = getelementptr inbounds %"class.v8::internal::wasm::AsmJsParser", %"class.v8::internal::wasm::AsmJsParser"* %0, i64 0, i32 18
  store i8* getelementptr inbounds ([44 x i8], [44 x i8]* @.str.2, i64 0, i64 0), i8** %69, align 8
  %70 = getelementptr inbounds %"class.v8::internal::wasm::AsmJsParser", %"class.v8::internal::wasm::AsmJsParser"* %0, i64 0, i32 1, i32 5
  %71 = load i64, i64* %70, align 8
  %72 = trunc i64 %71 to i32
  %73 = getelementptr inbounds %"class.v8::internal::wasm::AsmJsParser", %"class.v8::internal::wasm::AsmJsParser"* %0, i64 0, i32 19
  store i32 %72, i32* %73, align 8
  br label %100

74:                                               ; preds = %64
  %75 = tail call %"class.v8::internal::wasm::AsmType"* @_ZN2v88internal4wasm11AsmJsParser20RelationalExpressionEv(%"class.v8::internal::wasm::AsmJsParser"* %0)
  %76 = load i8, i8* %15, align 4, !range !69
  %77 = icmp eq i8 %76, 0
  br i1 %77, label %78, label %100

78:                                               ; preds = %74
  %79 = tail call zeroext i1 @_ZN2v88internal4wasm7AsmType3IsAEPS2_(%"class.v8::internal::wasm::AsmType"* %23, %"class.v8::internal::wasm::AsmType"* nonnull inttoptr (i64 1825 to %"class.v8::internal::wasm::AsmType"*)) #12
  br i1 %79, label %80, label %82

80:                                               ; preds = %78
  %81 = tail call zeroext i1 @_ZN2v88internal4wasm7AsmType3IsAEPS2_(%"class.v8::internal::wasm::AsmType"* %75, %"class.v8::internal::wasm::AsmType"* nonnull inttoptr (i64 1825 to %"class.v8::internal::wasm::AsmType"*)) #12
  br i1 %81, label %61, label %82

82:                                               ; preds = %80, %78
  %83 = tail call zeroext i1 @_ZN2v88internal4wasm7AsmType3IsAEPS2_(%"class.v8::internal::wasm::AsmType"* %23, %"class.v8::internal::wasm::AsmType"* nonnull inttoptr (i64 2817 to %"class.v8::internal::wasm::AsmType"*)) #12
  br i1 %83, label %84, label %86

84:                                               ; preds = %82
  %85 = tail call zeroext i1 @_ZN2v88internal4wasm7AsmType3IsAEPS2_(%"class.v8::internal::wasm::AsmType"* %75, %"class.v8::internal::wasm::AsmType"* nonnull inttoptr (i64 2817 to %"class.v8::internal::wasm::AsmType"*)) #12
  br i1 %85, label %61, label %86

86:                                               ; preds = %84, %82
  %87 = tail call zeroext i1 @_ZN2v88internal4wasm7AsmType3IsAEPS2_(%"class.v8::internal::wasm::AsmType"* %23, %"class.v8::internal::wasm::AsmType"* nonnull inttoptr (i64 237 to %"class.v8::internal::wasm::AsmType"*)) #12
  br i1 %87, label %88, label %90

88:                                               ; preds = %86
  %89 = tail call zeroext i1 @_ZN2v88internal4wasm7AsmType3IsAEPS2_(%"class.v8::internal::wasm::AsmType"* %75, %"class.v8::internal::wasm::AsmType"* nonnull inttoptr (i64 237 to %"class.v8::internal::wasm::AsmType"*)) #12
  br i1 %89, label %61, label %90

90:                                               ; preds = %88, %86
  %91 = tail call zeroext i1 @_ZN2v88internal4wasm7AsmType3IsAEPS2_(%"class.v8::internal::wasm::AsmType"* %23, %"class.v8::internal::wasm::AsmType"* nonnull inttoptr (i64 57357 to %"class.v8::internal::wasm::AsmType"*)) #12
  br i1 %91, label %92, label %94

92:                                               ; preds = %90
  %93 = tail call zeroext i1 @_ZN2v88internal4wasm7AsmType3IsAEPS2_(%"class.v8::internal::wasm::AsmType"* %75, %"class.v8::internal::wasm::AsmType"* nonnull inttoptr (i64 57357 to %"class.v8::internal::wasm::AsmType"*)) #12
  br i1 %93, label %61, label %94

94:                                               ; preds = %92, %90
  store i8 1, i8* %15, align 4
  %95 = getelementptr inbounds %"class.v8::internal::wasm::AsmJsParser", %"class.v8::internal::wasm::AsmJsParser"* %0, i64 0, i32 18
  store i8* getelementptr inbounds ([63 x i8], [63 x i8]* @.str.86, i64 0, i64 0), i8** %95, align 8
  %96 = getelementptr inbounds %"class.v8::internal::wasm::AsmJsParser", %"class.v8::internal::wasm::AsmJsParser"* %0, i64 0, i32 1, i32 5
  %97 = load i64, i64* %96, align 8
  %98 = trunc i64 %97 to i32
  %99 = getelementptr inbounds %"class.v8::internal::wasm::AsmJsParser", %"class.v8::internal::wasm::AsmJsParser"* %0, i64 0, i32 19
  store i32 %98, i32* %99, align 8
  br label %100

100:                                              ; preds = %74, %35, %22, %94, %68, %55, %29, %13, %6
  %101 = phi %"class.v8::internal::wasm::AsmType"* [ null, %6 ], [ null, %13 ], [ null, %29 ], [ null, %55 ], [ null, %68 ], [ null, %94 ], [ null, %74 ], [ null, %35 ], [ %23, %22 ]
  ret %"class.v8::internal::wasm::AsmType"* %101
}

; Function Attrs: nounwind ssp uwtable
define hidden %"class.v8::internal::wasm::AsmType"* @_ZN2v88internal4wasm11AsmJsParser20BitwiseANDExpressionEv(%"class.v8::internal::wasm::AsmJsParser"*) local_unnamed_addr #0 align 2 {
  %2 = tail call i64 @_ZN2v88internal23GetCurrentStackPositionEv() #12
  %3 = getelementptr inbounds %"class.v8::internal::wasm::AsmJsParser", %"class.v8::internal::wasm::AsmJsParser"* %0, i64 0, i32 5
  %4 = load i64, i64* %3, align 8
  %5 = icmp ult i64 %2, %4
  br i1 %5, label %6, label %13

6:                                                ; preds = %1
  %7 = getelementptr inbounds %"class.v8::internal::wasm::AsmJsParser", %"class.v8::internal::wasm::AsmJsParser"* %0, i64 0, i32 17
  store i8 1, i8* %7, align 4
  %8 = getelementptr inbounds %"class.v8::internal::wasm::AsmJsParser", %"class.v8::internal::wasm::AsmJsParser"* %0, i64 0, i32 18
  store i8* getelementptr inbounds ([44 x i8], [44 x i8]* @.str.2, i64 0, i64 0), i8** %8, align 8
  %9 = getelementptr inbounds %"class.v8::internal::wasm::AsmJsParser", %"class.v8::internal::wasm::AsmJsParser"* %0, i64 0, i32 1, i32 5
  %10 = load i64, i64* %9, align 8
  %11 = trunc i64 %10 to i32
  %12 = getelementptr inbounds %"class.v8::internal::wasm::AsmJsParser", %"class.v8::internal::wasm::AsmJsParser"* %0, i64 0, i32 19
  store i32 %11, i32* %12, align 8
  br label %54

13:                                               ; preds = %1
  %14 = tail call %"class.v8::internal::wasm::AsmType"* @_ZN2v88internal4wasm11AsmJsParser18EqualityExpressionEv(%"class.v8::internal::wasm::AsmJsParser"* %0)
  %15 = getelementptr inbounds %"class.v8::internal::wasm::AsmJsParser", %"class.v8::internal::wasm::AsmJsParser"* %0, i64 0, i32 17
  %16 = load i8, i8* %15, align 4, !range !69
  %17 = icmp eq i8 %16, 0
  br i1 %17, label %18, label %54

18:                                               ; preds = %13
  %19 = getelementptr inbounds %"class.v8::internal::wasm::AsmJsParser", %"class.v8::internal::wasm::AsmJsParser"* %0, i64 0, i32 1, i32 1
  %20 = load i32, i32* %19, align 8
  %21 = icmp eq i32 %20, 38
  br i1 %21, label %22, label %54

22:                                               ; preds = %18
  %23 = getelementptr inbounds %"class.v8::internal::wasm::AsmJsParser", %"class.v8::internal::wasm::AsmJsParser"* %0, i64 0, i32 1
  %24 = getelementptr inbounds %"class.v8::internal::wasm::AsmJsParser", %"class.v8::internal::wasm::AsmJsParser"* %0, i64 0, i32 3
  br label %25

25:                                               ; preds = %22, %50
  %26 = phi %"class.v8::internal::wasm::AsmType"* [ %14, %22 ], [ inttoptr (i64 1825 to %"class.v8::internal::wasm::AsmType"*), %50 ]
  tail call void @_ZN2v88internal12AsmJsScanner4NextEv(%"class.v8::internal::AsmJsScanner"* %23) #12
  %27 = tail call i64 @_ZN2v88internal23GetCurrentStackPositionEv() #12
  %28 = load i64, i64* %3, align 8
  %29 = icmp ult i64 %27, %28
  br i1 %29, label %30, label %36

30:                                               ; preds = %25
  store i8 1, i8* %15, align 4
  %31 = getelementptr inbounds %"class.v8::internal::wasm::AsmJsParser", %"class.v8::internal::wasm::AsmJsParser"* %0, i64 0, i32 18
  store i8* getelementptr inbounds ([44 x i8], [44 x i8]* @.str.2, i64 0, i64 0), i8** %31, align 8
  %32 = getelementptr inbounds %"class.v8::internal::wasm::AsmJsParser", %"class.v8::internal::wasm::AsmJsParser"* %0, i64 0, i32 1, i32 5
  %33 = load i64, i64* %32, align 8
  %34 = trunc i64 %33 to i32
  %35 = getelementptr inbounds %"class.v8::internal::wasm::AsmJsParser", %"class.v8::internal::wasm::AsmJsParser"* %0, i64 0, i32 19
  store i32 %34, i32* %35, align 8
  br label %54

36:                                               ; preds = %25
  %37 = tail call %"class.v8::internal::wasm::AsmType"* @_ZN2v88internal4wasm11AsmJsParser18EqualityExpressionEv(%"class.v8::internal::wasm::AsmJsParser"* %0)
  %38 = load i8, i8* %15, align 4, !range !69
  %39 = icmp eq i8 %38, 0
  br i1 %39, label %40, label %54

40:                                               ; preds = %36
  %41 = tail call zeroext i1 @_ZN2v88internal4wasm7AsmType3IsAEPS2_(%"class.v8::internal::wasm::AsmType"* %26, %"class.v8::internal::wasm::AsmType"* nonnull inttoptr (i64 257 to %"class.v8::internal::wasm::AsmType"*)) #12
  br i1 %41, label %42, label %44

42:                                               ; preds = %40
  %43 = tail call zeroext i1 @_ZN2v88internal4wasm7AsmType3IsAEPS2_(%"class.v8::internal::wasm::AsmType"* %37, %"class.v8::internal::wasm::AsmType"* nonnull inttoptr (i64 257 to %"class.v8::internal::wasm::AsmType"*)) #12
  br i1 %43, label %50, label %44

44:                                               ; preds = %42, %40
  store i8 1, i8* %15, align 4
  %45 = getelementptr inbounds %"class.v8::internal::wasm::AsmJsParser", %"class.v8::internal::wasm::AsmJsParser"* %0, i64 0, i32 18
  store i8* getelementptr inbounds ([32 x i8], [32 x i8]* @.str.87, i64 0, i64 0), i8** %45, align 8
  %46 = getelementptr inbounds %"class.v8::internal::wasm::AsmJsParser", %"class.v8::internal::wasm::AsmJsParser"* %0, i64 0, i32 1, i32 5
  %47 = load i64, i64* %46, align 8
  %48 = trunc i64 %47 to i32
  %49 = getelementptr inbounds %"class.v8::internal::wasm::AsmJsParser", %"class.v8::internal::wasm::AsmJsParser"* %0, i64 0, i32 19
  store i32 %48, i32* %49, align 8
  br label %54

50:                                               ; preds = %42
  %51 = load %"class.v8::internal::wasm::WasmFunctionBuilder"*, %"class.v8::internal::wasm::WasmFunctionBuilder"** %24, align 8
  tail call void @_ZN2v88internal4wasm19WasmFunctionBuilder4EmitENS1_10WasmOpcodeE(%"class.v8::internal::wasm::WasmFunctionBuilder"* %51, i32 113) #12
  %52 = load i32, i32* %19, align 8
  %53 = icmp eq i32 %52, 38
  br i1 %53, label %25, label %54

54:                                               ; preds = %50, %36, %18, %44, %30, %13, %6
  %55 = phi %"class.v8::internal::wasm::AsmType"* [ null, %6 ], [ null, %13 ], [ null, %30 ], [ null, %44 ], [ %14, %18 ], [ inttoptr (i64 1825 to %"class.v8::internal::wasm::AsmType"*), %50 ], [ null, %36 ]
  ret %"class.v8::internal::wasm::AsmType"* %55
}

; Function Attrs: nounwind ssp uwtable
define hidden %"class.v8::internal::wasm::AsmType"* @_ZN2v88internal4wasm11AsmJsParser20BitwiseXORExpressionEv(%"class.v8::internal::wasm::AsmJsParser"*) local_unnamed_addr #0 align 2 {
  %2 = tail call i64 @_ZN2v88internal23GetCurrentStackPositionEv() #12
  %3 = getelementptr inbounds %"class.v8::internal::wasm::AsmJsParser", %"class.v8::internal::wasm::AsmJsParser"* %0, i64 0, i32 5
  %4 = load i64, i64* %3, align 8
  %5 = icmp ult i64 %2, %4
  br i1 %5, label %6, label %13

6:                                                ; preds = %1
  %7 = getelementptr inbounds %"class.v8::internal::wasm::AsmJsParser", %"class.v8::internal::wasm::AsmJsParser"* %0, i64 0, i32 17
  store i8 1, i8* %7, align 4
  %8 = getelementptr inbounds %"class.v8::internal::wasm::AsmJsParser", %"class.v8::internal::wasm::AsmJsParser"* %0, i64 0, i32 18
  store i8* getelementptr inbounds ([44 x i8], [44 x i8]* @.str.2, i64 0, i64 0), i8** %8, align 8
  %9 = getelementptr inbounds %"class.v8::internal::wasm::AsmJsParser", %"class.v8::internal::wasm::AsmJsParser"* %0, i64 0, i32 1, i32 5
  %10 = load i64, i64* %9, align 8
  %11 = trunc i64 %10 to i32
  %12 = getelementptr inbounds %"class.v8::internal::wasm::AsmJsParser", %"class.v8::internal::wasm::AsmJsParser"* %0, i64 0, i32 19
  store i32 %11, i32* %12, align 8
  br label %54

13:                                               ; preds = %1
  %14 = tail call %"class.v8::internal::wasm::AsmType"* @_ZN2v88internal4wasm11AsmJsParser20BitwiseANDExpressionEv(%"class.v8::internal::wasm::AsmJsParser"* %0)
  %15 = getelementptr inbounds %"class.v8::internal::wasm::AsmJsParser", %"class.v8::internal::wasm::AsmJsParser"* %0, i64 0, i32 17
  %16 = load i8, i8* %15, align 4, !range !69
  %17 = icmp eq i8 %16, 0
  br i1 %17, label %18, label %54

18:                                               ; preds = %13
  %19 = getelementptr inbounds %"class.v8::internal::wasm::AsmJsParser", %"class.v8::internal::wasm::AsmJsParser"* %0, i64 0, i32 1, i32 1
  %20 = load i32, i32* %19, align 8
  %21 = icmp eq i32 %20, 94
  br i1 %21, label %22, label %54

22:                                               ; preds = %18
  %23 = getelementptr inbounds %"class.v8::internal::wasm::AsmJsParser", %"class.v8::internal::wasm::AsmJsParser"* %0, i64 0, i32 1
  %24 = getelementptr inbounds %"class.v8::internal::wasm::AsmJsParser", %"class.v8::internal::wasm::AsmJsParser"* %0, i64 0, i32 3
  br label %25

25:                                               ; preds = %22, %50
  %26 = phi %"class.v8::internal::wasm::AsmType"* [ %14, %22 ], [ inttoptr (i64 1825 to %"class.v8::internal::wasm::AsmType"*), %50 ]
  tail call void @_ZN2v88internal12AsmJsScanner4NextEv(%"class.v8::internal::AsmJsScanner"* %23) #12
  %27 = tail call i64 @_ZN2v88internal23GetCurrentStackPositionEv() #12
  %28 = load i64, i64* %3, align 8
  %29 = icmp ult i64 %27, %28
  br i1 %29, label %30, label %36

30:                                               ; preds = %25
  store i8 1, i8* %15, align 4
  %31 = getelementptr inbounds %"class.v8::internal::wasm::AsmJsParser", %"class.v8::internal::wasm::AsmJsParser"* %0, i64 0, i32 18
  store i8* getelementptr inbounds ([44 x i8], [44 x i8]* @.str.2, i64 0, i64 0), i8** %31, align 8
  %32 = getelementptr inbounds %"class.v8::internal::wasm::AsmJsParser", %"class.v8::internal::wasm::AsmJsParser"* %0, i64 0, i32 1, i32 5
  %33 = load i64, i64* %32, align 8
  %34 = trunc i64 %33 to i32
  %35 = getelementptr inbounds %"class.v8::internal::wasm::AsmJsParser", %"class.v8::internal::wasm::AsmJsParser"* %0, i64 0, i32 19
  store i32 %34, i32* %35, align 8
  br label %54

36:                                               ; preds = %25
  %37 = tail call %"class.v8::internal::wasm::AsmType"* @_ZN2v88internal4wasm11AsmJsParser20BitwiseANDExpressionEv(%"class.v8::internal::wasm::AsmJsParser"* %0)
  %38 = load i8, i8* %15, align 4, !range !69
  %39 = icmp eq i8 %38, 0
  br i1 %39, label %40, label %54

40:                                               ; preds = %36
  %41 = tail call zeroext i1 @_ZN2v88internal4wasm7AsmType3IsAEPS2_(%"class.v8::internal::wasm::AsmType"* %26, %"class.v8::internal::wasm::AsmType"* nonnull inttoptr (i64 257 to %"class.v8::internal::wasm::AsmType"*)) #12
  br i1 %41, label %42, label %44

42:                                               ; preds = %40
  %43 = tail call zeroext i1 @_ZN2v88internal4wasm7AsmType3IsAEPS2_(%"class.v8::internal::wasm::AsmType"* %37, %"class.v8::internal::wasm::AsmType"* nonnull inttoptr (i64 257 to %"class.v8::internal::wasm::AsmType"*)) #12
  br i1 %43, label %50, label %44

44:                                               ; preds = %42, %40
  store i8 1, i8* %15, align 4
  %45 = getelementptr inbounds %"class.v8::internal::wasm::AsmJsParser", %"class.v8::internal::wasm::AsmJsParser"* %0, i64 0, i32 18
  store i8* getelementptr inbounds ([32 x i8], [32 x i8]* @.str.87, i64 0, i64 0), i8** %45, align 8
  %46 = getelementptr inbounds %"class.v8::internal::wasm::AsmJsParser", %"class.v8::internal::wasm::AsmJsParser"* %0, i64 0, i32 1, i32 5
  %47 = load i64, i64* %46, align 8
  %48 = trunc i64 %47 to i32
  %49 = getelementptr inbounds %"class.v8::internal::wasm::AsmJsParser", %"class.v8::internal::wasm::AsmJsParser"* %0, i64 0, i32 19
  store i32 %48, i32* %49, align 8
  br label %54

50:                                               ; preds = %42
  %51 = load %"class.v8::internal::wasm::WasmFunctionBuilder"*, %"class.v8::internal::wasm::WasmFunctionBuilder"** %24, align 8
  tail call void @_ZN2v88internal4wasm19WasmFunctionBuilder4EmitENS1_10WasmOpcodeE(%"class.v8::internal::wasm::WasmFunctionBuilder"* %51, i32 115) #12
  %52 = load i32, i32* %19, align 8
  %53 = icmp eq i32 %52, 94
  br i1 %53, label %25, label %54

54:                                               ; preds = %50, %36, %18, %44, %30, %13, %6
  %55 = phi %"class.v8::internal::wasm::AsmType"* [ null, %6 ], [ null, %13 ], [ null, %30 ], [ null, %44 ], [ %14, %18 ], [ inttoptr (i64 1825 to %"class.v8::internal::wasm::AsmType"*), %50 ], [ null, %36 ]
  ret %"class.v8::internal::wasm::AsmType"* %55
}

; Function Attrs: nounwind ssp uwtable
define hidden %"class.v8::internal::wasm::AsmType"* @_ZN2v88internal4wasm11AsmJsParser19BitwiseORExpressionEv(%"class.v8::internal::wasm::AsmJsParser"*) local_unnamed_addr #0 align 2 {
  %2 = getelementptr inbounds %"class.v8::internal::wasm::AsmJsParser", %"class.v8::internal::wasm::AsmJsParser"* %0, i64 0, i32 1
  %3 = getelementptr inbounds %"class.v8::internal::wasm::AsmJsParser", %"class.v8::internal::wasm::AsmJsParser"* %0, i64 0, i32 1, i32 5
  %4 = load i64, i64* %3, align 8
  %5 = getelementptr inbounds %"class.v8::internal::wasm::AsmJsParser", %"class.v8::internal::wasm::AsmJsParser"* %0, i64 0, i32 37
  store i64 %4, i64* %5, align 8
  %6 = tail call i64 @_ZN2v88internal23GetCurrentStackPositionEv() #12
  %7 = getelementptr inbounds %"class.v8::internal::wasm::AsmJsParser", %"class.v8::internal::wasm::AsmJsParser"* %0, i64 0, i32 5
  %8 = load i64, i64* %7, align 8
  %9 = icmp ult i64 %6, %8
  br i1 %9, label %10, label %16

10:                                               ; preds = %1
  %11 = getelementptr inbounds %"class.v8::internal::wasm::AsmJsParser", %"class.v8::internal::wasm::AsmJsParser"* %0, i64 0, i32 17
  store i8 1, i8* %11, align 4
  %12 = getelementptr inbounds %"class.v8::internal::wasm::AsmJsParser", %"class.v8::internal::wasm::AsmJsParser"* %0, i64 0, i32 18
  store i8* getelementptr inbounds ([44 x i8], [44 x i8]* @.str.2, i64 0, i64 0), i8** %12, align 8
  %13 = load i64, i64* %3, align 8
  %14 = trunc i64 %13 to i32
  %15 = getelementptr inbounds %"class.v8::internal::wasm::AsmJsParser", %"class.v8::internal::wasm::AsmJsParser"* %0, i64 0, i32 19
  store i32 %14, i32* %15, align 8
  br label %94

16:                                               ; preds = %1
  %17 = tail call %"class.v8::internal::wasm::AsmType"* @_ZN2v88internal4wasm11AsmJsParser20BitwiseXORExpressionEv(%"class.v8::internal::wasm::AsmJsParser"* %0)
  %18 = getelementptr inbounds %"class.v8::internal::wasm::AsmJsParser", %"class.v8::internal::wasm::AsmJsParser"* %0, i64 0, i32 17
  %19 = load i8, i8* %18, align 4, !range !69
  %20 = icmp eq i8 %19, 0
  br i1 %20, label %21, label %94

21:                                               ; preds = %16
  %22 = getelementptr inbounds %"class.v8::internal::wasm::AsmJsParser", %"class.v8::internal::wasm::AsmJsParser"* %0, i64 0, i32 1, i32 1
  %23 = load i32, i32* %22, align 8
  %24 = icmp eq i32 %23, 124
  br i1 %24, label %25, label %94

25:                                               ; preds = %21
  %26 = getelementptr inbounds %"class.v8::internal::wasm::AsmJsParser", %"class.v8::internal::wasm::AsmJsParser"* %0, i64 0, i32 36
  %27 = getelementptr inbounds %"class.v8::internal::wasm::AsmJsParser", %"class.v8::internal::wasm::AsmJsParser"* %0, i64 0, i32 1, i32 19
  %28 = getelementptr inbounds %"class.v8::internal::wasm::AsmJsParser", %"class.v8::internal::wasm::AsmJsParser"* %0, i64 0, i32 3
  br label %29

29:                                               ; preds = %25, %91
  %30 = phi i64 [ undef, %25 ], [ %55, %91 ]
  %31 = phi i64 [ undef, %25 ], [ %54, %91 ]
  %32 = phi %"class.v8::internal::wasm::AsmType"* [ %17, %25 ], [ inttoptr (i64 1825 to %"class.v8::internal::wasm::AsmType"*), %91 ]
  tail call void @_ZN2v88internal12AsmJsScanner4NextEv(%"class.v8::internal::AsmJsScanner"* %2) #12
  %33 = load %"class.v8::internal::wasm::AsmType"*, %"class.v8::internal::wasm::AsmType"** %26, align 8
  %34 = tail call zeroext i1 @_ZN2v88internal4wasm7AsmType9IsExactlyEPS2_S3_(%"class.v8::internal::wasm::AsmType"* %33, %"class.v8::internal::wasm::AsmType"* nonnull inttoptr (i64 1825 to %"class.v8::internal::wasm::AsmType"*)) #12
  store %"class.v8::internal::wasm::AsmType"* null, %"class.v8::internal::wasm::AsmType"** %26, align 8
  %35 = tail call zeroext i1 @_ZN2v88internal4wasm7AsmType3IsAEPS2_(%"class.v8::internal::wasm::AsmType"* %32, %"class.v8::internal::wasm::AsmType"* nonnull inttoptr (i64 257 to %"class.v8::internal::wasm::AsmType"*)) #12
  br i1 %35, label %36, label %52

36:                                               ; preds = %29
  %37 = load i32, i32* %22, align 8
  %38 = icmp eq i32 %37, -3
  br i1 %38, label %39, label %52

39:                                               ; preds = %36
  %40 = load i32, i32* %27, align 8
  %41 = icmp eq i32 %40, 0
  br i1 %41, label %42, label %52

42:                                               ; preds = %39
  tail call void @_ZN2v88internal12AsmJsScanner4NextEv(%"class.v8::internal::AsmJsScanner"* %2) #12
  %43 = load i64, i64* %3, align 8
  %44 = load %"class.v8::internal::wasm::WasmFunctionBuilder"*, %"class.v8::internal::wasm::WasmFunctionBuilder"** %28, align 8
  %45 = getelementptr inbounds %"class.v8::internal::wasm::WasmFunctionBuilder", %"class.v8::internal::wasm::WasmFunctionBuilder"* %44, i64 0, i32 4, i32 2
  %46 = bitcast i8** %45 to i64*
  %47 = load i64, i64* %46, align 8
  %48 = getelementptr inbounds %"class.v8::internal::wasm::WasmFunctionBuilder", %"class.v8::internal::wasm::WasmFunctionBuilder"* %44, i64 0, i32 4, i32 1
  %49 = bitcast i8** %48 to i64*
  %50 = load i64, i64* %49, align 8
  %51 = sub i64 %47, %50
  tail call void @_ZN2v88internal12AsmJsScanner6RewindEv(%"class.v8::internal::AsmJsScanner"* %2) #12
  br label %52

52:                                               ; preds = %36, %39, %29, %42
  %53 = phi i1 [ true, %42 ], [ false, %29 ], [ false, %39 ], [ false, %36 ]
  %54 = phi i64 [ %43, %42 ], [ %31, %29 ], [ %31, %39 ], [ %31, %36 ]
  %55 = phi i64 [ %51, %42 ], [ %30, %29 ], [ %30, %39 ], [ %30, %36 ]
  %56 = tail call i64 @_ZN2v88internal23GetCurrentStackPositionEv() #12
  %57 = load i64, i64* %7, align 8
  %58 = icmp ult i64 %56, %57
  br i1 %58, label %59, label %64

59:                                               ; preds = %52
  store i8 1, i8* %18, align 4
  %60 = getelementptr inbounds %"class.v8::internal::wasm::AsmJsParser", %"class.v8::internal::wasm::AsmJsParser"* %0, i64 0, i32 18
  store i8* getelementptr inbounds ([44 x i8], [44 x i8]* @.str.2, i64 0, i64 0), i8** %60, align 8
  %61 = load i64, i64* %3, align 8
  %62 = trunc i64 %61 to i32
  %63 = getelementptr inbounds %"class.v8::internal::wasm::AsmJsParser", %"class.v8::internal::wasm::AsmJsParser"* %0, i64 0, i32 19
  store i32 %62, i32* %63, align 8
  br label %94

64:                                               ; preds = %52
  %65 = tail call %"class.v8::internal::wasm::AsmType"* @_ZN2v88internal4wasm11AsmJsParser20BitwiseXORExpressionEv(%"class.v8::internal::wasm::AsmJsParser"* %0)
  %66 = load i8, i8* %18, align 4, !range !69
  %67 = icmp eq i8 %66, 0
  br i1 %67, label %68, label %94

68:                                               ; preds = %64
  br i1 %53, label %69, label %74

69:                                               ; preds = %68
  %70 = load i64, i64* %3, align 8
  %71 = icmp eq i64 %54, %70
  br i1 %71, label %72, label %74

72:                                               ; preds = %69
  %73 = load %"class.v8::internal::wasm::WasmFunctionBuilder"*, %"class.v8::internal::wasm::WasmFunctionBuilder"** %28, align 8
  tail call void @_ZN2v88internal4wasm19WasmFunctionBuilder15DeleteCodeAfterEm(%"class.v8::internal::wasm::WasmFunctionBuilder"* %73, i64 %55) #12
  br label %91

74:                                               ; preds = %69, %68
  br i1 %34, label %75, label %80

75:                                               ; preds = %74
  store i8 1, i8* %18, align 4
  %76 = getelementptr inbounds %"class.v8::internal::wasm::AsmJsParser", %"class.v8::internal::wasm::AsmJsParser"* %0, i64 0, i32 18
  store i8* getelementptr inbounds ([37 x i8], [37 x i8]* @.str.88, i64 0, i64 0), i8** %76, align 8
  %77 = load i64, i64* %3, align 8
  %78 = trunc i64 %77 to i32
  %79 = getelementptr inbounds %"class.v8::internal::wasm::AsmJsParser", %"class.v8::internal::wasm::AsmJsParser"* %0, i64 0, i32 19
  store i32 %78, i32* %79, align 8
  br label %94

80:                                               ; preds = %74
  %81 = tail call zeroext i1 @_ZN2v88internal4wasm7AsmType3IsAEPS2_(%"class.v8::internal::wasm::AsmType"* %32, %"class.v8::internal::wasm::AsmType"* nonnull inttoptr (i64 257 to %"class.v8::internal::wasm::AsmType"*)) #12
  br i1 %81, label %82, label %86

82:                                               ; preds = %80
  %83 = tail call zeroext i1 @_ZN2v88internal4wasm7AsmType3IsAEPS2_(%"class.v8::internal::wasm::AsmType"* %65, %"class.v8::internal::wasm::AsmType"* nonnull inttoptr (i64 257 to %"class.v8::internal::wasm::AsmType"*)) #12
  br i1 %83, label %84, label %86

84:                                               ; preds = %82
  %85 = load %"class.v8::internal::wasm::WasmFunctionBuilder"*, %"class.v8::internal::wasm::WasmFunctionBuilder"** %28, align 8
  tail call void @_ZN2v88internal4wasm19WasmFunctionBuilder4EmitENS1_10WasmOpcodeE(%"class.v8::internal::wasm::WasmFunctionBuilder"* %85, i32 114) #12
  br label %91

86:                                               ; preds = %82, %80
  store i8 1, i8* %18, align 4
  %87 = getelementptr inbounds %"class.v8::internal::wasm::AsmJsParser", %"class.v8::internal::wasm::AsmJsParser"* %0, i64 0, i32 18
  store i8* getelementptr inbounds ([32 x i8], [32 x i8]* @.str.89, i64 0, i64 0), i8** %87, align 8
  %88 = load i64, i64* %3, align 8
  %89 = trunc i64 %88 to i32
  %90 = getelementptr inbounds %"class.v8::internal::wasm::AsmJsParser", %"class.v8::internal::wasm::AsmJsParser"* %0, i64 0, i32 19
  store i32 %89, i32* %90, align 8
  br label %94

91:                                               ; preds = %84, %72
  %92 = load i32, i32* %22, align 8
  %93 = icmp eq i32 %92, 124
  br i1 %93, label %29, label %94

94:                                               ; preds = %91, %64, %21, %86, %75, %59, %16, %10
  %95 = phi %"class.v8::internal::wasm::AsmType"* [ null, %10 ], [ null, %16 ], [ null, %59 ], [ null, %75 ], [ null, %86 ], [ %17, %21 ], [ inttoptr (i64 1825 to %"class.v8::internal::wasm::AsmType"*), %91 ], [ null, %64 ]
  ret %"class.v8::internal::wasm::AsmType"* %95
}

declare zeroext i1 @_ZN2v88internal4wasm7AsmType9IsExactlyEPS2_S3_(%"class.v8::internal::wasm::AsmType"*, %"class.v8::internal::wasm::AsmType"*) local_unnamed_addr #1

declare void @_ZN2v88internal4wasm19WasmFunctionBuilder15DeleteCodeAfterEm(%"class.v8::internal::wasm::WasmFunctionBuilder"*, i64) local_unnamed_addr #1

declare i32 @_ZN2v88internal4wasm17WasmModuleBuilder25AllocateIndirectFunctionsEj(%"class.v8::internal::wasm::WasmModuleBuilder"*, i32) local_unnamed_addr #1

declare i32 @_ZN2v88internal4wasm17WasmModuleBuilder12AddSignatureEPNS0_9SignatureINS1_9ValueTypeEEE(%"class.v8::internal::wasm::WasmModuleBuilder"*, %"class.v8::internal::Signature"*) local_unnamed_addr #1

declare %"class.v8::internal::wasm::AsmCallableType"* @_ZN2v88internal4wasm7AsmType14AsCallableTypeEv(%"class.v8::internal::wasm::AsmType"*) local_unnamed_addr #1

declare void @_ZN2v88internal4wasm19WasmFunctionBuilder8EmitU32VEj(%"class.v8::internal::wasm::WasmFunctionBuilder"*, i32) local_unnamed_addr #1

declare void @_ZN2v88internal4wasm19WasmFunctionBuilder19EmitDirectCallIndexEj(%"class.v8::internal::wasm::WasmFunctionBuilder"*, i32) local_unnamed_addr #1

declare i32 @_ZN2v88internal4wasm7AsmType18ElementSizeInBytesEv(%"class.v8::internal::wasm::AsmType"*) local_unnamed_addr #1

declare i64 @_ZN2v88internal4Zone9NewExpandEm(%"class.v8::internal::Zone"*, i64) local_unnamed_addr #1

; Function Attrs: nobuiltin nounwind
declare void @_ZdlPv(i8*) local_unnamed_addr #9

declare void @_ZN2v88internal4wasm17WasmModuleBuilder9AddExportENS0_6VectorIKcEENS1_20ImportExportKindCodeEj(%"class.v8::internal::wasm::WasmModuleBuilder"*, i8*, i64, i8 zeroext, i32) local_unnamed_addr #1

; Function Attrs: argmemonly nofree nounwind readonly
declare i64 @strlen(i8* nocapture) local_unnamed_addr #10

; Function Attrs: noreturn
declare void @_ZNKSt3__120__vector_base_commonILb1EE20__throw_length_errorEv(%"class.std::__1::__vector_base_common"*) local_unnamed_addr #3

declare void @_ZN2v88internal4wasm17WasmModuleBuilderC1EPNS0_4ZoneE(%"class.v8::internal::wasm::WasmModuleBuilder"*, %"class.v8::internal::Zone"*) unnamed_addr #1

; Function Attrs: argmemonly nounwind
declare void @llvm.memmove.p0i8.p0i8.i64(i8* nocapture, i8* nocapture readonly, i64, i1 immarg) #2

; Function Attrs: nounwind ssp uwtable
define linkonce_odr hidden void @_ZN2v88internal4wasm11AsmJsParser18FunctionImportInfoC2ENS0_6VectorIKcEEPNS0_4ZoneE(%"struct.v8::internal::wasm::AsmJsParser::FunctionImportInfo"*, i8*, i64, %"class.v8::internal::Zone"*) unnamed_addr #0 comdat align 2 {
  %5 = getelementptr inbounds %"struct.v8::internal::wasm::AsmJsParser::FunctionImportInfo", %"struct.v8::internal::wasm::AsmJsParser::FunctionImportInfo"* %0, i64 0, i32 0, i32 0
  store i8* %1, i8** %5, align 8
  %6 = getelementptr inbounds %"struct.v8::internal::wasm::AsmJsParser::FunctionImportInfo", %"struct.v8::internal::wasm::AsmJsParser::FunctionImportInfo"* %0, i64 0, i32 0, i32 1
  store i64 %2, i64* %6, align 8
  %7 = getelementptr inbounds %"struct.v8::internal::wasm::AsmJsParser::FunctionImportInfo", %"struct.v8::internal::wasm::AsmJsParser::FunctionImportInfo"* %0, i64 0, i32 1
  %8 = ptrtoint %"class.v8::internal::Zone"* %3 to i64
  %9 = getelementptr inbounds %"class.v8::internal::ZoneUnorderedMap", %"class.v8::internal::ZoneUnorderedMap"* %7, i64 0, i32 0, i32 0
  %10 = getelementptr inbounds %"struct.v8::internal::wasm::AsmJsParser::FunctionImportInfo", %"struct.v8::internal::wasm::AsmJsParser::FunctionImportInfo"* %0, i64 0, i32 1, i32 0, i32 0, i32 0, i32 0, i32 1, i32 0, i32 0, i32 1
  %11 = bitcast %"struct.std::__1::__compressed_pair_elem.145"* %10 to i64*
  %12 = bitcast %"class.v8::internal::ZoneUnorderedMap"* %7 to i8*
  tail call void @llvm.memset.p0i8.i64(i8* align 8 %12, i8 0, i64 16, i1 false) #12
  store i64 %8, i64* %11, align 8
  %13 = getelementptr inbounds %"struct.v8::internal::wasm::AsmJsParser::FunctionImportInfo", %"struct.v8::internal::wasm::AsmJsParser::FunctionImportInfo"* %0, i64 0, i32 1, i32 0, i32 0, i32 1, i32 0, i32 0, i32 0
  store %"struct.std::__1::__hash_node_base.141"* null, %"struct.std::__1::__hash_node_base.141"** %13, align 8
  %14 = getelementptr inbounds %"struct.v8::internal::wasm::AsmJsParser::FunctionImportInfo", %"struct.v8::internal::wasm::AsmJsParser::FunctionImportInfo"* %0, i64 0, i32 1, i32 0, i32 0, i32 1, i32 1
  %15 = bitcast %"struct.std::__1::__compressed_pair_elem.149"* %14 to i64*
  store i64 %8, i64* %15, align 8
  %16 = getelementptr inbounds %"struct.v8::internal::wasm::AsmJsParser::FunctionImportInfo", %"struct.v8::internal::wasm::AsmJsParser::FunctionImportInfo"* %0, i64 0, i32 1, i32 0, i32 0, i32 2, i32 0, i32 0
  store i64 0, i64* %16, align 8
  %17 = getelementptr inbounds %"struct.v8::internal::wasm::AsmJsParser::FunctionImportInfo", %"struct.v8::internal::wasm::AsmJsParser::FunctionImportInfo"* %0, i64 0, i32 1, i32 0, i32 0, i32 3
  %18 = bitcast %"class.std::__1::__compressed_pair.154"* %17 to i32*
  store i32 1065353216, i32* %18, align 4
  %19 = tail call i64 @_ZNSt3__112__next_primeEm(i64 100) #12
  %20 = getelementptr inbounds %"struct.v8::internal::wasm::AsmJsParser::FunctionImportInfo", %"struct.v8::internal::wasm::AsmJsParser::FunctionImportInfo"* %0, i64 0, i32 1, i32 0, i32 0, i32 0, i32 0, i32 1, i32 0, i32 0, i32 0, i32 0
  %21 = load i64, i64* %20, align 8
  %22 = icmp ugt i64 %19, %21
  br i1 %22, label %23, label %24

23:                                               ; preds = %4
  tail call void @_ZNSt3__112__hash_tableINS_17__hash_value_typeIN2v88internal9SignatureINS3_4wasm9ValueTypeEEEjEENS_22__unordered_map_hasherIS7_S8_NS2_4base4hashIS7_EENS_8equal_toIS7_EELb1EEENS_21__unordered_map_equalIS7_S8_SE_SC_Lb1EEENS3_13ZoneAllocatorIS8_EEE8__rehashEm(%"class.std::__1::__hash_table.137"* %9, i64 %19) #12
  br label %53

24:                                               ; preds = %4
  %25 = icmp ult i64 %19, %21
  br i1 %25, label %26, label %53

26:                                               ; preds = %24
  %27 = icmp ugt i64 %21, 2
  %28 = tail call i64 @llvm.ctpop.i64(i64 %21) #12, !range !296
  %29 = icmp ult i64 %28, 2
  %30 = and i1 %27, %29
  %31 = load i64, i64* %16, align 8
  %32 = uitofp i64 %31 to float
  %33 = getelementptr inbounds %"struct.v8::internal::wasm::AsmJsParser::FunctionImportInfo", %"struct.v8::internal::wasm::AsmJsParser::FunctionImportInfo"* %0, i64 0, i32 1, i32 0, i32 0, i32 3, i32 0, i32 0
  %34 = load float, float* %33, align 4
  %35 = fdiv float %32, %34
  %36 = tail call float @llvm.ceil.f32(float %35) #12
  %37 = fptoui float %36 to i64
  br i1 %30, label %38, label %45

38:                                               ; preds = %26
  %39 = icmp ult i64 %37, 2
  br i1 %39, label %47, label %40

40:                                               ; preds = %38
  %41 = add i64 %37, -1
  %42 = tail call i64 @llvm.ctlz.i64(i64 %41, i1 true) #12, !range !296
  %43 = sub nuw nsw i64 64, %42
  %44 = shl i64 1, %43
  br label %47

45:                                               ; preds = %26
  %46 = tail call i64 @_ZNSt3__112__next_primeEm(i64 %37) #12
  br label %47

47:                                               ; preds = %45, %40, %38
  %48 = phi i64 [ %46, %45 ], [ %44, %40 ], [ %37, %38 ]
  %49 = icmp ult i64 %19, %48
  %50 = select i1 %49, i64 %48, i64 %19
  %51 = icmp ult i64 %50, %21
  br i1 %51, label %52, label %53

52:                                               ; preds = %47
  tail call void @_ZNSt3__112__hash_tableINS_17__hash_value_typeIN2v88internal9SignatureINS3_4wasm9ValueTypeEEEjEENS_22__unordered_map_hasherIS7_S8_NS2_4base4hashIS7_EENS_8equal_toIS7_EELb1EEENS_21__unordered_map_equalIS7_S8_SE_SC_Lb1EEENS3_13ZoneAllocatorIS8_EEE8__rehashEm(%"class.std::__1::__hash_table.137"* %9, i64 %50) #12
  br label %53

53:                                               ; preds = %23, %24, %47, %52
  ret void
}

; Function Attrs: nounwind ssp uwtable
define linkonce_odr hidden void @_ZNSt3__112__hash_tableINS_17__hash_value_typeIN2v88internal9SignatureINS3_4wasm9ValueTypeEEEjEENS_22__unordered_map_hasherIS7_S8_NS2_4base4hashIS7_EENS_8equal_toIS7_EELb1EEENS_21__unordered_map_equalIS7_S8_SE_SC_Lb1EEENS3_13ZoneAllocatorIS8_EEE6rehashEm(%"class.std::__1::__hash_table.137"*, i64) local_unnamed_addr #0 comdat align 2 {
  %3 = icmp eq i64 %1, 1
  br i1 %3, label %9, label %4

4:                                                ; preds = %2
  %5 = tail call i64 @llvm.ctpop.i64(i64 %1), !range !296
  %6 = icmp ugt i64 %5, 1
  br i1 %6, label %7, label %9

7:                                                ; preds = %4
  %8 = tail call i64 @_ZNSt3__112__next_primeEm(i64 %1) #12
  br label %9

9:                                                ; preds = %2, %4, %7
  %10 = phi i64 [ %8, %7 ], [ %1, %4 ], [ 2, %2 ]
  %11 = getelementptr inbounds %"class.std::__1::__hash_table.137", %"class.std::__1::__hash_table.137"* %0, i64 0, i32 0, i32 0, i32 1, i32 0, i32 0, i32 0, i32 0
  %12 = load i64, i64* %11, align 8
  %13 = icmp ugt i64 %10, %12
  br i1 %13, label %14, label %15

14:                                               ; preds = %9
  tail call void @_ZNSt3__112__hash_tableINS_17__hash_value_typeIN2v88internal9SignatureINS3_4wasm9ValueTypeEEEjEENS_22__unordered_map_hasherIS7_S8_NS2_4base4hashIS7_EENS_8equal_toIS7_EELb1EEENS_21__unordered_map_equalIS7_S8_SE_SC_Lb1EEENS3_13ZoneAllocatorIS8_EEE8__rehashEm(%"class.std::__1::__hash_table.137"* %0, i64 %10)
  br label %45

15:                                               ; preds = %9
  %16 = icmp ult i64 %10, %12
  br i1 %16, label %17, label %45

17:                                               ; preds = %15
  %18 = icmp ugt i64 %12, 2
  %19 = tail call i64 @llvm.ctpop.i64(i64 %12) #12, !range !296
  %20 = icmp ult i64 %19, 2
  %21 = and i1 %18, %20
  %22 = getelementptr inbounds %"class.std::__1::__hash_table.137", %"class.std::__1::__hash_table.137"* %0, i64 0, i32 2, i32 0, i32 0
  %23 = load i64, i64* %22, align 8
  %24 = uitofp i64 %23 to float
  %25 = getelementptr inbounds %"class.std::__1::__hash_table.137", %"class.std::__1::__hash_table.137"* %0, i64 0, i32 3, i32 0, i32 0
  %26 = load float, float* %25, align 4
  %27 = fdiv float %24, %26
  %28 = tail call float @llvm.ceil.f32(float %27) #12
  %29 = fptoui float %28 to i64
  br i1 %21, label %30, label %37

30:                                               ; preds = %17
  %31 = icmp ult i64 %29, 2
  br i1 %31, label %39, label %32

32:                                               ; preds = %30
  %33 = add i64 %29, -1
  %34 = tail call i64 @llvm.ctlz.i64(i64 %33, i1 true) #12, !range !296
  %35 = sub nuw nsw i64 64, %34
  %36 = shl i64 1, %35
  br label %39

37:                                               ; preds = %17
  %38 = tail call i64 @_ZNSt3__112__next_primeEm(i64 %29) #12
  br label %39

39:                                               ; preds = %32, %30, %37
  %40 = phi i64 [ %38, %37 ], [ %36, %32 ], [ %29, %30 ]
  %41 = icmp ult i64 %10, %40
  %42 = select i1 %41, i64 %40, i64 %10
  %43 = icmp ult i64 %42, %12
  br i1 %43, label %44, label %45

44:                                               ; preds = %39
  tail call void @_ZNSt3__112__hash_tableINS_17__hash_value_typeIN2v88internal9SignatureINS3_4wasm9ValueTypeEEEjEENS_22__unordered_map_hasherIS7_S8_NS2_4base4hashIS7_EENS_8equal_toIS7_EELb1EEENS_21__unordered_map_equalIS7_S8_SE_SC_Lb1EEENS3_13ZoneAllocatorIS8_EEE8__rehashEm(%"class.std::__1::__hash_table.137"* %0, i64 %42)
  br label %45

45:                                               ; preds = %15, %44, %39, %14
  ret void
}

declare i64 @_ZNSt3__112__next_primeEm(i64) local_unnamed_addr #1

; Function Attrs: nounwind ssp uwtable
define linkonce_odr hidden void @_ZNSt3__112__hash_tableINS_17__hash_value_typeIN2v88internal9SignatureINS3_4wasm9ValueTypeEEEjEENS_22__unordered_map_hasherIS7_S8_NS2_4base4hashIS7_EENS_8equal_toIS7_EELb1EEENS_21__unordered_map_equalIS7_S8_SE_SC_Lb1EEENS3_13ZoneAllocatorIS8_EEE8__rehashEm(%"class.std::__1::__hash_table.137"*, i64) local_unnamed_addr #0 comdat align 2 {
  %3 = icmp eq i64 %1, 0
  br i1 %3, label %264, label %4

4:                                                ; preds = %2
  %5 = getelementptr inbounds %"class.std::__1::__hash_table.137", %"class.std::__1::__hash_table.137"* %0, i64 0, i32 0, i32 0, i32 1, i32 0, i32 0, i32 1, i32 0, i32 0
  %6 = load %"class.v8::internal::Zone"*, %"class.v8::internal::Zone"** %5, align 8
  %7 = shl i64 %1, 3
  %8 = getelementptr inbounds %"class.v8::internal::Zone", %"class.v8::internal::Zone"* %6, i64 0, i32 2
  %9 = load i64, i64* %8, align 8
  %10 = getelementptr inbounds %"class.v8::internal::Zone", %"class.v8::internal::Zone"* %6, i64 0, i32 3
  %11 = load i64, i64* %10, align 8
  %12 = sub i64 %11, %9
  %13 = icmp ugt i64 %7, %12
  br i1 %13, label %14, label %16, !prof !2

14:                                               ; preds = %4
  %15 = tail call i64 @_ZN2v88internal4Zone9NewExpandEm(%"class.v8::internal::Zone"* %6, i64 %7) #12
  br label %18

16:                                               ; preds = %4
  %17 = add i64 %9, %7
  store i64 %17, i64* %8, align 8
  br label %18

18:                                               ; preds = %16, %14
  %19 = phi i64 [ %15, %14 ], [ %9, %16 ]
  %20 = inttoptr i64 %19 to %"struct.std::__1::__hash_node_base.141"**
  %21 = getelementptr inbounds %"class.std::__1::__hash_table.137", %"class.std::__1::__hash_table.137"* %0, i64 0, i32 0, i32 0, i32 0, i32 0
  store %"struct.std::__1::__hash_node_base.141"** %20, %"struct.std::__1::__hash_node_base.141"*** %21, align 8
  %22 = getelementptr inbounds %"class.std::__1::__hash_table.137", %"class.std::__1::__hash_table.137"* %0, i64 0, i32 0, i32 0, i32 1, i32 0, i32 0, i32 0, i32 0
  store i64 %1, i64* %22, align 8
  store %"struct.std::__1::__hash_node_base.141"* null, %"struct.std::__1::__hash_node_base.141"** %20, align 8
  %23 = icmp eq i64 %1, 1
  br i1 %23, label %42, label %24

24:                                               ; preds = %18
  %25 = add i64 %1, -1
  %26 = add i64 %1, -2
  %27 = and i64 %25, 3
  %28 = icmp ult i64 %26, 3
  br i1 %28, label %31, label %29

29:                                               ; preds = %24
  %30 = sub i64 %25, %27
  br label %47

31:                                               ; preds = %47, %24
  %32 = phi i64 [ 1, %24 ], [ %61, %47 ]
  %33 = icmp eq i64 %27, 0
  br i1 %33, label %42, label %34

34:                                               ; preds = %31, %34
  %35 = phi i64 [ %39, %34 ], [ %32, %31 ]
  %36 = phi i64 [ %40, %34 ], [ %27, %31 ]
  %37 = load %"struct.std::__1::__hash_node_base.141"**, %"struct.std::__1::__hash_node_base.141"*** %21, align 8
  %38 = getelementptr inbounds %"struct.std::__1::__hash_node_base.141"*, %"struct.std::__1::__hash_node_base.141"** %37, i64 %35
  store %"struct.std::__1::__hash_node_base.141"* null, %"struct.std::__1::__hash_node_base.141"** %38, align 8
  %39 = add nuw i64 %35, 1
  %40 = add i64 %36, -1
  %41 = icmp eq i64 %40, 0
  br i1 %41, label %42, label %34, !llvm.loop !297

42:                                               ; preds = %31, %34, %18
  %43 = getelementptr inbounds %"class.std::__1::__hash_table.137", %"class.std::__1::__hash_table.137"* %0, i64 0, i32 1, i32 0, i32 0
  %44 = getelementptr inbounds %"struct.std::__1::__hash_node_base.141", %"struct.std::__1::__hash_node_base.141"* %43, i64 0, i32 0
  %45 = load %"struct.std::__1::__hash_node_base.141"*, %"struct.std::__1::__hash_node_base.141"** %44, align 8
  %46 = icmp eq %"struct.std::__1::__hash_node_base.141"* %45, null
  br i1 %46, label %266, label %64

47:                                               ; preds = %47, %29
  %48 = phi i64 [ 1, %29 ], [ %61, %47 ]
  %49 = phi i64 [ %30, %29 ], [ %62, %47 ]
  %50 = load %"struct.std::__1::__hash_node_base.141"**, %"struct.std::__1::__hash_node_base.141"*** %21, align 8
  %51 = getelementptr inbounds %"struct.std::__1::__hash_node_base.141"*, %"struct.std::__1::__hash_node_base.141"** %50, i64 %48
  store %"struct.std::__1::__hash_node_base.141"* null, %"struct.std::__1::__hash_node_base.141"** %51, align 8
  %52 = add nuw nsw i64 %48, 1
  %53 = load %"struct.std::__1::__hash_node_base.141"**, %"struct.std::__1::__hash_node_base.141"*** %21, align 8
  %54 = getelementptr inbounds %"struct.std::__1::__hash_node_base.141"*, %"struct.std::__1::__hash_node_base.141"** %53, i64 %52
  store %"struct.std::__1::__hash_node_base.141"* null, %"struct.std::__1::__hash_node_base.141"** %54, align 8
  %55 = add nuw nsw i64 %48, 2
  %56 = load %"struct.std::__1::__hash_node_base.141"**, %"struct.std::__1::__hash_node_base.141"*** %21, align 8
  %57 = getelementptr inbounds %"struct.std::__1::__hash_node_base.141"*, %"struct.std::__1::__hash_node_base.141"** %56, i64 %55
  store %"struct.std::__1::__hash_node_base.141"* null, %"struct.std::__1::__hash_node_base.141"** %57, align 8
  %58 = add nuw i64 %48, 3
  %59 = load %"struct.std::__1::__hash_node_base.141"**, %"struct.std::__1::__hash_node_base.141"*** %21, align 8
  %60 = getelementptr inbounds %"struct.std::__1::__hash_node_base.141"*, %"struct.std::__1::__hash_node_base.141"** %59, i64 %58
  store %"struct.std::__1::__hash_node_base.141"* null, %"struct.std::__1::__hash_node_base.141"** %60, align 8
  %61 = add nuw i64 %48, 4
  %62 = add i64 %49, -4
  %63 = icmp eq i64 %62, 0
  br i1 %63, label %31, label %47

64:                                               ; preds = %42
  %65 = getelementptr inbounds %"struct.std::__1::__hash_node_base.141", %"struct.std::__1::__hash_node_base.141"* %45, i64 1
  %66 = bitcast %"struct.std::__1::__hash_node_base.141"* %65 to i64*
  %67 = load i64, i64* %66, align 8
  %68 = tail call i64 @llvm.ctpop.i64(i64 %1) #12, !range !296
  %69 = icmp ugt i64 %68, 1
  br i1 %69, label %73, label %70

70:                                               ; preds = %64
  %71 = add i64 %1, -1
  %72 = and i64 %67, %71
  br label %77

73:                                               ; preds = %64
  %74 = icmp ult i64 %67, %1
  br i1 %74, label %77, label %75

75:                                               ; preds = %73
  %76 = urem i64 %67, %1
  br label %77

77:                                               ; preds = %70, %73, %75
  %78 = phi i64 [ %72, %70 ], [ %76, %75 ], [ %67, %73 ]
  %79 = load %"struct.std::__1::__hash_node_base.141"**, %"struct.std::__1::__hash_node_base.141"*** %21, align 8
  %80 = getelementptr inbounds %"struct.std::__1::__hash_node_base.141"*, %"struct.std::__1::__hash_node_base.141"** %79, i64 %78
  store %"struct.std::__1::__hash_node_base.141"* %43, %"struct.std::__1::__hash_node_base.141"** %80, align 8
  %81 = getelementptr inbounds %"struct.std::__1::__hash_node_base.141", %"struct.std::__1::__hash_node_base.141"* %45, i64 0, i32 0
  %82 = load %"struct.std::__1::__hash_node_base.141"*, %"struct.std::__1::__hash_node_base.141"** %81, align 8
  %83 = icmp eq %"struct.std::__1::__hash_node_base.141"* %82, null
  br i1 %83, label %266, label %84

84:                                               ; preds = %77
  %85 = add i64 %1, -1
  br i1 %69, label %86, label %177

86:                                               ; preds = %84, %160
  %87 = phi %"struct.std::__1::__hash_node_base.141"* [ %164, %160 ], [ %82, %84 ]
  %88 = phi i64 [ %162, %160 ], [ %78, %84 ]
  %89 = phi %"struct.std::__1::__hash_node_base.141"* [ %161, %160 ], [ %45, %84 ]
  %90 = getelementptr inbounds %"struct.std::__1::__hash_node_base.141", %"struct.std::__1::__hash_node_base.141"* %87, i64 1
  %91 = bitcast %"struct.std::__1::__hash_node_base.141"* %90 to i64*
  %92 = load i64, i64* %91, align 8
  %93 = icmp ult i64 %92, %1
  br i1 %93, label %96, label %94

94:                                               ; preds = %86
  %95 = urem i64 %92, %1
  br label %96

96:                                               ; preds = %94, %86
  %97 = phi i64 [ %95, %94 ], [ %92, %86 ]
  %98 = icmp eq i64 %97, %88
  br i1 %98, label %160, label %99

99:                                               ; preds = %96
  %100 = load %"struct.std::__1::__hash_node_base.141"**, %"struct.std::__1::__hash_node_base.141"*** %21, align 8
  %101 = getelementptr inbounds %"struct.std::__1::__hash_node_base.141"*, %"struct.std::__1::__hash_node_base.141"** %100, i64 %97
  %102 = load %"struct.std::__1::__hash_node_base.141"*, %"struct.std::__1::__hash_node_base.141"** %101, align 8
  %103 = icmp eq %"struct.std::__1::__hash_node_base.141"* %102, null
  br i1 %103, label %159, label %166

104:                                              ; preds = %170, %141
  %105 = phi %"struct.std::__1::__hash_node_base.141"* [ %168, %170 ], [ %143, %141 ]
  %106 = phi %"struct.std::__1::__hash_node_base.141"* [ %87, %170 ], [ %105, %141 ]
  %107 = getelementptr inbounds %"struct.std::__1::__hash_node_base.141", %"struct.std::__1::__hash_node_base.141"* %105, i64 2
  %108 = icmp eq %"struct.std::__1::__hash_node_base.141"* %87, %105
  br i1 %108, label %141, label %109

109:                                              ; preds = %104
  %110 = load i64, i64* %173, align 8
  %111 = getelementptr inbounds %"struct.std::__1::__hash_node_base.141", %"struct.std::__1::__hash_node_base.141"* %105, i64 3
  %112 = bitcast %"struct.std::__1::__hash_node_base.141"* %111 to i64*
  %113 = load i64, i64* %112, align 8
  %114 = icmp eq i64 %110, %113
  br i1 %114, label %115, label %145

115:                                              ; preds = %109
  %116 = load i64, i64* %174, align 8
  %117 = bitcast %"struct.std::__1::__hash_node_base.141"* %107 to i64*
  %118 = load i64, i64* %117, align 8
  %119 = icmp eq i64 %116, %118
  br i1 %119, label %120, label %145

120:                                              ; preds = %115
  %121 = load %"class.v8::internal::wasm::ValueType"*, %"class.v8::internal::wasm::ValueType"** %176, align 8
  %122 = getelementptr inbounds %"class.v8::internal::wasm::ValueType", %"class.v8::internal::wasm::ValueType"* %121, i64 %116
  %123 = getelementptr inbounds %"class.v8::internal::wasm::ValueType", %"class.v8::internal::wasm::ValueType"* %122, i64 %110
  %124 = icmp eq %"class.v8::internal::wasm::ValueType"* %121, %123
  br i1 %124, label %141, label %125

125:                                              ; preds = %120
  %126 = getelementptr inbounds %"struct.std::__1::__hash_node_base.141", %"struct.std::__1::__hash_node_base.141"* %105, i64 4
  %127 = bitcast %"struct.std::__1::__hash_node_base.141"* %126 to %"class.v8::internal::wasm::ValueType"**
  %128 = load %"class.v8::internal::wasm::ValueType"*, %"class.v8::internal::wasm::ValueType"** %127, align 8
  br label %129

129:                                              ; preds = %137, %125
  %130 = phi %"class.v8::internal::wasm::ValueType"* [ %139, %137 ], [ %128, %125 ]
  %131 = phi %"class.v8::internal::wasm::ValueType"* [ %138, %137 ], [ %121, %125 ]
  %132 = getelementptr inbounds %"class.v8::internal::wasm::ValueType", %"class.v8::internal::wasm::ValueType"* %130, i64 0, i32 0
  %133 = load i32, i32* %132, align 4
  %134 = getelementptr inbounds %"class.v8::internal::wasm::ValueType", %"class.v8::internal::wasm::ValueType"* %131, i64 0, i32 0
  %135 = load i32, i32* %134, align 4
  %136 = icmp eq i32 %135, %133
  br i1 %136, label %137, label %145

137:                                              ; preds = %129
  %138 = getelementptr inbounds %"class.v8::internal::wasm::ValueType", %"class.v8::internal::wasm::ValueType"* %131, i64 1
  %139 = getelementptr inbounds %"class.v8::internal::wasm::ValueType", %"class.v8::internal::wasm::ValueType"* %130, i64 1
  %140 = icmp eq %"class.v8::internal::wasm::ValueType"* %138, %123
  br i1 %140, label %141, label %129

141:                                              ; preds = %137, %120, %104
  %142 = getelementptr inbounds %"struct.std::__1::__hash_node_base.141", %"struct.std::__1::__hash_node_base.141"* %105, i64 0, i32 0
  %143 = load %"struct.std::__1::__hash_node_base.141"*, %"struct.std::__1::__hash_node_base.141"** %142, align 8
  %144 = icmp eq %"struct.std::__1::__hash_node_base.141"* %143, null
  br i1 %144, label %145, label %104

145:                                              ; preds = %115, %109, %141, %129, %166
  %146 = phi %"struct.std::__1::__hash_node_base.141"* [ %87, %166 ], [ %106, %129 ], [ %105, %141 ], [ %106, %109 ], [ %106, %115 ]
  %147 = bitcast %"struct.std::__1::__hash_node_base.141"* %146 to i64*
  %148 = load i64, i64* %147, align 8
  %149 = bitcast %"struct.std::__1::__hash_node_base.141"* %89 to i64*
  store i64 %148, i64* %149, align 8
  %150 = load %"struct.std::__1::__hash_node_base.141"**, %"struct.std::__1::__hash_node_base.141"*** %21, align 8
  %151 = getelementptr inbounds %"struct.std::__1::__hash_node_base.141"*, %"struct.std::__1::__hash_node_base.141"** %150, i64 %97
  %152 = bitcast %"struct.std::__1::__hash_node_base.141"** %151 to i64**
  %153 = load i64*, i64** %152, align 8
  %154 = load i64, i64* %153, align 8
  store i64 %154, i64* %147, align 8
  %155 = load %"struct.std::__1::__hash_node_base.141"**, %"struct.std::__1::__hash_node_base.141"*** %21, align 8
  %156 = getelementptr inbounds %"struct.std::__1::__hash_node_base.141"*, %"struct.std::__1::__hash_node_base.141"** %155, i64 %97
  %157 = load %"struct.std::__1::__hash_node_base.141"*, %"struct.std::__1::__hash_node_base.141"** %156, align 8
  %158 = getelementptr inbounds %"struct.std::__1::__hash_node_base.141", %"struct.std::__1::__hash_node_base.141"* %157, i64 0, i32 0
  store %"struct.std::__1::__hash_node_base.141"* %87, %"struct.std::__1::__hash_node_base.141"** %158, align 8
  br label %160

159:                                              ; preds = %99
  store %"struct.std::__1::__hash_node_base.141"* %89, %"struct.std::__1::__hash_node_base.141"** %101, align 8
  br label %160

160:                                              ; preds = %159, %145, %96
  %161 = phi %"struct.std::__1::__hash_node_base.141"* [ %87, %159 ], [ %89, %145 ], [ %87, %96 ]
  %162 = phi i64 [ %97, %159 ], [ %88, %145 ], [ %88, %96 ]
  %163 = getelementptr inbounds %"struct.std::__1::__hash_node_base.141", %"struct.std::__1::__hash_node_base.141"* %161, i64 0, i32 0
  %164 = load %"struct.std::__1::__hash_node_base.141"*, %"struct.std::__1::__hash_node_base.141"** %163, align 8
  %165 = icmp eq %"struct.std::__1::__hash_node_base.141"* %164, null
  br i1 %165, label %266, label %86

166:                                              ; preds = %99
  %167 = getelementptr inbounds %"struct.std::__1::__hash_node_base.141", %"struct.std::__1::__hash_node_base.141"* %87, i64 0, i32 0
  %168 = load %"struct.std::__1::__hash_node_base.141"*, %"struct.std::__1::__hash_node_base.141"** %167, align 8
  %169 = icmp eq %"struct.std::__1::__hash_node_base.141"* %168, null
  br i1 %169, label %145, label %170

170:                                              ; preds = %166
  %171 = getelementptr inbounds %"struct.std::__1::__hash_node_base.141", %"struct.std::__1::__hash_node_base.141"* %87, i64 2
  %172 = getelementptr inbounds %"struct.std::__1::__hash_node_base.141", %"struct.std::__1::__hash_node_base.141"* %87, i64 3
  %173 = bitcast %"struct.std::__1::__hash_node_base.141"* %172 to i64*
  %174 = bitcast %"struct.std::__1::__hash_node_base.141"* %171 to i64*
  %175 = getelementptr inbounds %"struct.std::__1::__hash_node_base.141", %"struct.std::__1::__hash_node_base.141"* %87, i64 4
  %176 = bitcast %"struct.std::__1::__hash_node_base.141"* %175 to %"class.v8::internal::wasm::ValueType"**
  br label %104

177:                                              ; preds = %84, %258
  %178 = phi %"struct.std::__1::__hash_node_base.141"* [ %262, %258 ], [ %82, %84 ]
  %179 = phi i64 [ %260, %258 ], [ %78, %84 ]
  %180 = phi %"struct.std::__1::__hash_node_base.141"* [ %259, %258 ], [ %45, %84 ]
  %181 = getelementptr inbounds %"struct.std::__1::__hash_node_base.141", %"struct.std::__1::__hash_node_base.141"* %178, i64 1
  %182 = bitcast %"struct.std::__1::__hash_node_base.141"* %181 to i64*
  %183 = load i64, i64* %182, align 8
  %184 = and i64 %183, %85
  %185 = icmp eq i64 %184, %179
  br i1 %185, label %258, label %186

186:                                              ; preds = %177
  %187 = load %"struct.std::__1::__hash_node_base.141"**, %"struct.std::__1::__hash_node_base.141"*** %21, align 8
  %188 = getelementptr inbounds %"struct.std::__1::__hash_node_base.141"*, %"struct.std::__1::__hash_node_base.141"** %187, i64 %184
  %189 = load %"struct.std::__1::__hash_node_base.141"*, %"struct.std::__1::__hash_node_base.141"** %188, align 8
  %190 = icmp eq %"struct.std::__1::__hash_node_base.141"* %189, null
  br i1 %190, label %202, label %191

191:                                              ; preds = %186
  %192 = getelementptr inbounds %"struct.std::__1::__hash_node_base.141", %"struct.std::__1::__hash_node_base.141"* %178, i64 0, i32 0
  %193 = load %"struct.std::__1::__hash_node_base.141"*, %"struct.std::__1::__hash_node_base.141"** %192, align 8
  %194 = icmp eq %"struct.std::__1::__hash_node_base.141"* %193, null
  br i1 %194, label %244, label %195

195:                                              ; preds = %191
  %196 = getelementptr inbounds %"struct.std::__1::__hash_node_base.141", %"struct.std::__1::__hash_node_base.141"* %178, i64 2
  %197 = getelementptr inbounds %"struct.std::__1::__hash_node_base.141", %"struct.std::__1::__hash_node_base.141"* %178, i64 3
  %198 = bitcast %"struct.std::__1::__hash_node_base.141"* %197 to i64*
  %199 = bitcast %"struct.std::__1::__hash_node_base.141"* %196 to i64*
  %200 = getelementptr inbounds %"struct.std::__1::__hash_node_base.141", %"struct.std::__1::__hash_node_base.141"* %178, i64 4
  %201 = bitcast %"struct.std::__1::__hash_node_base.141"* %200 to %"class.v8::internal::wasm::ValueType"**
  br label %203

202:                                              ; preds = %186
  store %"struct.std::__1::__hash_node_base.141"* %180, %"struct.std::__1::__hash_node_base.141"** %188, align 8
  br label %258

203:                                              ; preds = %195, %240
  %204 = phi %"struct.std::__1::__hash_node_base.141"* [ %193, %195 ], [ %242, %240 ]
  %205 = phi %"struct.std::__1::__hash_node_base.141"* [ %178, %195 ], [ %204, %240 ]
  %206 = getelementptr inbounds %"struct.std::__1::__hash_node_base.141", %"struct.std::__1::__hash_node_base.141"* %204, i64 2
  %207 = icmp eq %"struct.std::__1::__hash_node_base.141"* %178, %204
  br i1 %207, label %240, label %208

208:                                              ; preds = %203
  %209 = load i64, i64* %198, align 8
  %210 = getelementptr inbounds %"struct.std::__1::__hash_node_base.141", %"struct.std::__1::__hash_node_base.141"* %204, i64 3
  %211 = bitcast %"struct.std::__1::__hash_node_base.141"* %210 to i64*
  %212 = load i64, i64* %211, align 8
  %213 = icmp eq i64 %209, %212
  br i1 %213, label %214, label %244

214:                                              ; preds = %208
  %215 = load i64, i64* %199, align 8
  %216 = bitcast %"struct.std::__1::__hash_node_base.141"* %206 to i64*
  %217 = load i64, i64* %216, align 8
  %218 = icmp eq i64 %215, %217
  br i1 %218, label %219, label %244

219:                                              ; preds = %214
  %220 = load %"class.v8::internal::wasm::ValueType"*, %"class.v8::internal::wasm::ValueType"** %201, align 8
  %221 = getelementptr inbounds %"class.v8::internal::wasm::ValueType", %"class.v8::internal::wasm::ValueType"* %220, i64 %215
  %222 = getelementptr inbounds %"class.v8::internal::wasm::ValueType", %"class.v8::internal::wasm::ValueType"* %221, i64 %209
  %223 = icmp eq %"class.v8::internal::wasm::ValueType"* %220, %222
  br i1 %223, label %240, label %224

224:                                              ; preds = %219
  %225 = getelementptr inbounds %"struct.std::__1::__hash_node_base.141", %"struct.std::__1::__hash_node_base.141"* %204, i64 4
  %226 = bitcast %"struct.std::__1::__hash_node_base.141"* %225 to %"class.v8::internal::wasm::ValueType"**
  %227 = load %"class.v8::internal::wasm::ValueType"*, %"class.v8::internal::wasm::ValueType"** %226, align 8
  br label %228

228:                                              ; preds = %236, %224
  %229 = phi %"class.v8::internal::wasm::ValueType"* [ %238, %236 ], [ %227, %224 ]
  %230 = phi %"class.v8::internal::wasm::ValueType"* [ %237, %236 ], [ %220, %224 ]
  %231 = getelementptr inbounds %"class.v8::internal::wasm::ValueType", %"class.v8::internal::wasm::ValueType"* %229, i64 0, i32 0
  %232 = load i32, i32* %231, align 4
  %233 = getelementptr inbounds %"class.v8::internal::wasm::ValueType", %"class.v8::internal::wasm::ValueType"* %230, i64 0, i32 0
  %234 = load i32, i32* %233, align 4
  %235 = icmp eq i32 %234, %232
  br i1 %235, label %236, label %244

236:                                              ; preds = %228
  %237 = getelementptr inbounds %"class.v8::internal::wasm::ValueType", %"class.v8::internal::wasm::ValueType"* %230, i64 1
  %238 = getelementptr inbounds %"class.v8::internal::wasm::ValueType", %"class.v8::internal::wasm::ValueType"* %229, i64 1
  %239 = icmp eq %"class.v8::internal::wasm::ValueType"* %237, %222
  br i1 %239, label %240, label %228

240:                                              ; preds = %236, %203, %219
  %241 = getelementptr inbounds %"struct.std::__1::__hash_node_base.141", %"struct.std::__1::__hash_node_base.141"* %204, i64 0, i32 0
  %242 = load %"struct.std::__1::__hash_node_base.141"*, %"struct.std::__1::__hash_node_base.141"** %241, align 8
  %243 = icmp eq %"struct.std::__1::__hash_node_base.141"* %242, null
  br i1 %243, label %244, label %203

244:                                              ; preds = %240, %208, %214, %228, %191
  %245 = phi %"struct.std::__1::__hash_node_base.141"* [ %178, %191 ], [ %205, %228 ], [ %204, %240 ], [ %205, %208 ], [ %205, %214 ]
  %246 = bitcast %"struct.std::__1::__hash_node_base.141"* %245 to i64*
  %247 = load i64, i64* %246, align 8
  %248 = bitcast %"struct.std::__1::__hash_node_base.141"* %180 to i64*
  store i64 %247, i64* %248, align 8
  %249 = load %"struct.std::__1::__hash_node_base.141"**, %"struct.std::__1::__hash_node_base.141"*** %21, align 8
  %250 = getelementptr inbounds %"struct.std::__1::__hash_node_base.141"*, %"struct.std::__1::__hash_node_base.141"** %249, i64 %184
  %251 = bitcast %"struct.std::__1::__hash_node_base.141"** %250 to i64**
  %252 = load i64*, i64** %251, align 8
  %253 = load i64, i64* %252, align 8
  store i64 %253, i64* %246, align 8
  %254 = load %"struct.std::__1::__hash_node_base.141"**, %"struct.std::__1::__hash_node_base.141"*** %21, align 8
  %255 = getelementptr inbounds %"struct.std::__1::__hash_node_base.141"*, %"struct.std::__1::__hash_node_base.141"** %254, i64 %184
  %256 = load %"struct.std::__1::__hash_node_base.141"*, %"struct.std::__1::__hash_node_base.141"** %255, align 8
  %257 = getelementptr inbounds %"struct.std::__1::__hash_node_base.141", %"struct.std::__1::__hash_node_base.141"* %256, i64 0, i32 0
  store %"struct.std::__1::__hash_node_base.141"* %178, %"struct.std::__1::__hash_node_base.141"** %257, align 8
  br label %258

258:                                              ; preds = %177, %244, %202
  %259 = phi %"struct.std::__1::__hash_node_base.141"* [ %178, %202 ], [ %180, %244 ], [ %178, %177 ]
  %260 = phi i64 [ %184, %202 ], [ %179, %244 ], [ %179, %177 ]
  %261 = getelementptr inbounds %"struct.std::__1::__hash_node_base.141", %"struct.std::__1::__hash_node_base.141"* %259, i64 0, i32 0
  %262 = load %"struct.std::__1::__hash_node_base.141"*, %"struct.std::__1::__hash_node_base.141"** %261, align 8
  %263 = icmp eq %"struct.std::__1::__hash_node_base.141"* %262, null
  br i1 %263, label %266, label %177

264:                                              ; preds = %2
  %265 = bitcast %"class.std::__1::__hash_table.137"* %0 to i8*
  call void @llvm.memset.p0i8.i64(i8* align 8 %265, i8 0, i64 16, i1 false)
  br label %266

266:                                              ; preds = %258, %160, %77, %42, %264
  ret void
}

; Function Attrs: nounwind readnone speculatable
declare i64 @llvm.ctlz.i64(i64, i1 immarg) #11

; Function Attrs: nounwind readnone speculatable
declare float @llvm.ceil.f32(float) #11

; Function Attrs: inlinehint nounwind ssp uwtable
define linkonce_odr hidden void @_ZNSt3__16vectorIN2v88internal10ZoneVectorIPNS2_4wasm7AsmTypeEEENS2_13ZoneAllocatorIS7_EEE24__emplace_back_slow_pathIJS7_EEEvDpOT_(%"class.std::__1::vector.177"*, %"class.v8::internal::ZoneVector.179"* dereferenceable(32)) local_unnamed_addr #5 comdat align 2 {
  %3 = getelementptr inbounds %"class.std::__1::vector.177", %"class.std::__1::vector.177"* %0, i64 0, i32 0, i32 1
  %4 = bitcast %"class.v8::internal::ZoneVector.179"** %3 to i64*
  %5 = load i64, i64* %4, align 8
  %6 = bitcast %"class.std::__1::vector.177"* %0 to i64*
  %7 = load i64, i64* %6, align 8
  %8 = sub i64 %5, %7
  %9 = ashr exact i64 %8, 5
  %10 = add nsw i64 %9, 1
  %11 = icmp ugt i64 %10, 67108863
  br i1 %11, label %12, label %14

12:                                               ; preds = %2
  %13 = bitcast %"class.std::__1::vector.177"* %0 to %"class.std::__1::__vector_base_common"*
  tail call void @_ZNKSt3__120__vector_base_commonILb1EE20__throw_length_errorEv(%"class.std::__1::__vector_base_common"* %13) #13
  unreachable

14:                                               ; preds = %2
  %15 = getelementptr inbounds %"class.std::__1::vector.177", %"class.std::__1::vector.177"* %0, i64 0, i32 0, i32 2, i32 0, i32 0
  %16 = bitcast %"class.v8::internal::ZoneVector.179"** %15 to i64*
  %17 = load i64, i64* %16, align 8
  %18 = sub i64 %17, %7
  %19 = ashr exact i64 %18, 5
  %20 = icmp ult i64 %19, 33554431
  br i1 %20, label %21, label %26

21:                                               ; preds = %14
  %22 = ashr exact i64 %18, 4
  %23 = icmp ult i64 %22, %10
  %24 = select i1 %23, i64 %10, i64 %22
  %25 = icmp eq i64 %24, 0
  br i1 %25, label %44, label %26

26:                                               ; preds = %14, %21
  %27 = phi i64 [ %24, %21 ], [ 67108863, %14 ]
  %28 = getelementptr inbounds %"class.std::__1::vector.177", %"class.std::__1::vector.177"* %0, i64 0, i32 0, i32 2, i32 1, i32 0, i32 0
  %29 = load %"class.v8::internal::Zone"*, %"class.v8::internal::Zone"** %28, align 8
  %30 = shl i64 %27, 5
  %31 = getelementptr inbounds %"class.v8::internal::Zone", %"class.v8::internal::Zone"* %29, i64 0, i32 2
  %32 = load i64, i64* %31, align 8
  %33 = getelementptr inbounds %"class.v8::internal::Zone", %"class.v8::internal::Zone"* %29, i64 0, i32 3
  %34 = load i64, i64* %33, align 8
  %35 = sub i64 %34, %32
  %36 = icmp ugt i64 %30, %35
  br i1 %36, label %37, label %39, !prof !2

37:                                               ; preds = %26
  %38 = tail call i64 @_ZN2v88internal4Zone9NewExpandEm(%"class.v8::internal::Zone"* %29, i64 %30) #12
  br label %41

39:                                               ; preds = %26
  %40 = add i64 %32, %30
  store i64 %40, i64* %31, align 8
  br label %41

41:                                               ; preds = %39, %37
  %42 = phi i64 [ %38, %37 ], [ %32, %39 ]
  %43 = inttoptr i64 %42 to %"class.v8::internal::ZoneVector.179"*
  br label %44

44:                                               ; preds = %21, %41
  %45 = phi i64 [ %27, %41 ], [ 0, %21 ]
  %46 = phi %"class.v8::internal::ZoneVector.179"* [ %43, %41 ], [ null, %21 ]
  %47 = getelementptr inbounds %"class.v8::internal::ZoneVector.179", %"class.v8::internal::ZoneVector.179"* %46, i64 %9
  %48 = getelementptr inbounds %"class.v8::internal::ZoneVector.179", %"class.v8::internal::ZoneVector.179"* %46, i64 %45
  %49 = ptrtoint %"class.v8::internal::ZoneVector.179"* %48 to i64
  %50 = getelementptr inbounds %"class.v8::internal::ZoneVector.179", %"class.v8::internal::ZoneVector.179"* %1, i64 0, i32 0, i32 0, i32 2, i32 1, i32 0
  %51 = getelementptr inbounds %"class.v8::internal::ZoneVector.179", %"class.v8::internal::ZoneVector.179"* %46, i64 %9, i32 0, i32 0, i32 2, i32 1
  %52 = bitcast %"class.v8::internal::ZoneAllocator.185"* %50 to i64*
  %53 = bitcast %"struct.std::__1::__compressed_pair_elem.184"* %51 to i64*
  %54 = bitcast %"class.v8::internal::ZoneVector.179"* %47 to i8*
  tail call void @llvm.memset.p0i8.i64(i8* align 8 %54, i8 0, i64 24, i1 false) #12
  %55 = load i64, i64* %52, align 8
  store i64 %55, i64* %53, align 8
  %56 = bitcast %"class.v8::internal::ZoneVector.179"* %1 to i64*
  %57 = load i64, i64* %56, align 8
  %58 = bitcast %"class.v8::internal::ZoneVector.179"* %47 to i64*
  store i64 %57, i64* %58, align 8
  %59 = getelementptr inbounds %"class.v8::internal::ZoneVector.179", %"class.v8::internal::ZoneVector.179"* %1, i64 0, i32 0, i32 0, i32 1
  %60 = bitcast %"class.v8::internal::wasm::AsmType"*** %59 to i64*
  %61 = load i64, i64* %60, align 8
  %62 = getelementptr inbounds %"class.v8::internal::ZoneVector.179", %"class.v8::internal::ZoneVector.179"* %46, i64 %9, i32 0, i32 0, i32 1
  %63 = bitcast %"class.v8::internal::wasm::AsmType"*** %62 to i64*
  store i64 %61, i64* %63, align 8
  %64 = getelementptr inbounds %"class.v8::internal::ZoneVector.179", %"class.v8::internal::ZoneVector.179"* %1, i64 0, i32 0, i32 0, i32 2, i32 0, i32 0
  %65 = bitcast %"class.v8::internal::wasm::AsmType"*** %64 to i64*
  %66 = load i64, i64* %65, align 8
  %67 = getelementptr inbounds %"class.v8::internal::ZoneVector.179", %"class.v8::internal::ZoneVector.179"* %46, i64 %9, i32 0, i32 0, i32 2, i32 0, i32 0
  %68 = bitcast %"class.v8::internal::wasm::AsmType"*** %67 to i64*
  store i64 %66, i64* %68, align 8
  %69 = bitcast %"class.v8::internal::ZoneVector.179"* %1 to i8*
  tail call void @llvm.memset.p0i8.i64(i8* align 8 %69, i8 0, i64 24, i1 false) #12
  %70 = getelementptr inbounds %"class.v8::internal::ZoneVector.179", %"class.v8::internal::ZoneVector.179"* %47, i64 1
  %71 = ptrtoint %"class.v8::internal::ZoneVector.179"* %70 to i64
  %72 = getelementptr inbounds %"class.std::__1::vector.177", %"class.std::__1::vector.177"* %0, i64 0, i32 0, i32 0
  %73 = load %"class.v8::internal::ZoneVector.179"*, %"class.v8::internal::ZoneVector.179"** %72, align 8
  %74 = ptrtoint %"class.v8::internal::ZoneVector.179"* %73 to i64
  %75 = load %"class.v8::internal::ZoneVector.179"*, %"class.v8::internal::ZoneVector.179"** %3, align 8
  %76 = icmp eq %"class.v8::internal::ZoneVector.179"* %75, %73
  br i1 %76, label %163, label %77

77:                                               ; preds = %44
  %78 = getelementptr %"class.v8::internal::ZoneVector.179", %"class.v8::internal::ZoneVector.179"* %75, i64 -1, i32 0, i32 0, i32 0
  %79 = ptrtoint %"class.v8::internal::wasm::AsmType"*** %78 to i64
  %80 = sub i64 %79, %74
  %81 = and i64 %80, 32
  %82 = icmp eq i64 %81, 0
  br i1 %82, label %83, label %106

83:                                               ; preds = %77
  %84 = getelementptr inbounds %"class.v8::internal::ZoneVector.179", %"class.v8::internal::ZoneVector.179"* %47, i64 -1
  %85 = getelementptr inbounds %"class.v8::internal::ZoneVector.179", %"class.v8::internal::ZoneVector.179"* %75, i64 -1
  %86 = getelementptr inbounds %"class.v8::internal::ZoneVector.179", %"class.v8::internal::ZoneVector.179"* %75, i64 -1, i32 0, i32 0, i32 2, i32 1, i32 0
  %87 = getelementptr inbounds %"class.v8::internal::ZoneVector.179", %"class.v8::internal::ZoneVector.179"* %47, i64 -1, i32 0, i32 0, i32 2, i32 1
  %88 = bitcast %"class.v8::internal::ZoneAllocator.185"* %86 to i64*
  %89 = bitcast %"struct.std::__1::__compressed_pair_elem.184"* %87 to i64*
  %90 = bitcast %"class.v8::internal::ZoneVector.179"* %84 to i8*
  tail call void @llvm.memset.p0i8.i64(i8* align 8 %90, i8 0, i64 24, i1 false) #12
  %91 = load i64, i64* %88, align 8
  store i64 %91, i64* %89, align 8
  %92 = bitcast %"class.v8::internal::ZoneVector.179"* %85 to i64*
  %93 = load i64, i64* %92, align 8
  %94 = bitcast %"class.v8::internal::ZoneVector.179"* %84 to i64*
  store i64 %93, i64* %94, align 8
  %95 = getelementptr inbounds %"class.v8::internal::ZoneVector.179", %"class.v8::internal::ZoneVector.179"* %75, i64 -1, i32 0, i32 0, i32 1
  %96 = bitcast %"class.v8::internal::wasm::AsmType"*** %95 to i64*
  %97 = load i64, i64* %96, align 8
  %98 = getelementptr inbounds %"class.v8::internal::ZoneVector.179", %"class.v8::internal::ZoneVector.179"* %47, i64 -1, i32 0, i32 0, i32 1
  %99 = bitcast %"class.v8::internal::wasm::AsmType"*** %98 to i64*
  store i64 %97, i64* %99, align 8
  %100 = getelementptr inbounds %"class.v8::internal::ZoneVector.179", %"class.v8::internal::ZoneVector.179"* %75, i64 -1, i32 0, i32 0, i32 2, i32 0, i32 0
  %101 = bitcast %"class.v8::internal::wasm::AsmType"*** %100 to i64*
  %102 = load i64, i64* %101, align 8
  %103 = getelementptr inbounds %"class.v8::internal::ZoneVector.179", %"class.v8::internal::ZoneVector.179"* %47, i64 -1, i32 0, i32 0, i32 2, i32 0, i32 0
  %104 = bitcast %"class.v8::internal::wasm::AsmType"*** %103 to i64*
  store i64 %102, i64* %104, align 8
  %105 = bitcast %"class.v8::internal::ZoneVector.179"* %85 to i8*
  tail call void @llvm.memset.p0i8.i64(i8* align 8 %105, i8 0, i64 24, i1 false) #12
  br label %106

106:                                              ; preds = %83, %77
  %107 = phi %"class.v8::internal::ZoneVector.179"* [ undef, %77 ], [ %84, %83 ]
  %108 = phi %"class.v8::internal::ZoneVector.179"* [ %47, %77 ], [ %84, %83 ]
  %109 = phi %"class.v8::internal::ZoneVector.179"* [ %75, %77 ], [ %85, %83 ]
  %110 = icmp ult i64 %80, 32
  br i1 %110, label %159, label %111

111:                                              ; preds = %106, %111
  %112 = phi %"class.v8::internal::ZoneVector.179"* [ %136, %111 ], [ %108, %106 ]
  %113 = phi %"class.v8::internal::ZoneVector.179"* [ %137, %111 ], [ %109, %106 ]
  %114 = getelementptr inbounds %"class.v8::internal::ZoneVector.179", %"class.v8::internal::ZoneVector.179"* %112, i64 -1
  %115 = getelementptr inbounds %"class.v8::internal::ZoneVector.179", %"class.v8::internal::ZoneVector.179"* %113, i64 -1
  %116 = getelementptr inbounds %"class.v8::internal::ZoneVector.179", %"class.v8::internal::ZoneVector.179"* %113, i64 -1, i32 0, i32 0, i32 2, i32 1, i32 0
  %117 = getelementptr inbounds %"class.v8::internal::ZoneVector.179", %"class.v8::internal::ZoneVector.179"* %112, i64 -1, i32 0, i32 0, i32 2, i32 1
  %118 = bitcast %"class.v8::internal::ZoneAllocator.185"* %116 to i64*
  %119 = bitcast %"struct.std::__1::__compressed_pair_elem.184"* %117 to i64*
  %120 = bitcast %"class.v8::internal::ZoneVector.179"* %114 to i8*
  tail call void @llvm.memset.p0i8.i64(i8* align 8 %120, i8 0, i64 24, i1 false) #12
  %121 = load i64, i64* %118, align 8
  store i64 %121, i64* %119, align 8
  %122 = bitcast %"class.v8::internal::ZoneVector.179"* %115 to i64*
  %123 = load i64, i64* %122, align 8
  %124 = bitcast %"class.v8::internal::ZoneVector.179"* %114 to i64*
  store i64 %123, i64* %124, align 8
  %125 = getelementptr inbounds %"class.v8::internal::ZoneVector.179", %"class.v8::internal::ZoneVector.179"* %113, i64 -1, i32 0, i32 0, i32 1
  %126 = bitcast %"class.v8::internal::wasm::AsmType"*** %125 to i64*
  %127 = load i64, i64* %126, align 8
  %128 = getelementptr inbounds %"class.v8::internal::ZoneVector.179", %"class.v8::internal::ZoneVector.179"* %112, i64 -1, i32 0, i32 0, i32 1
  %129 = bitcast %"class.v8::internal::wasm::AsmType"*** %128 to i64*
  store i64 %127, i64* %129, align 8
  %130 = getelementptr inbounds %"class.v8::internal::ZoneVector.179", %"class.v8::internal::ZoneVector.179"* %113, i64 -1, i32 0, i32 0, i32 2, i32 0, i32 0
  %131 = bitcast %"class.v8::internal::wasm::AsmType"*** %130 to i64*
  %132 = load i64, i64* %131, align 8
  %133 = getelementptr inbounds %"class.v8::internal::ZoneVector.179", %"class.v8::internal::ZoneVector.179"* %112, i64 -1, i32 0, i32 0, i32 2, i32 0, i32 0
  %134 = bitcast %"class.v8::internal::wasm::AsmType"*** %133 to i64*
  store i64 %132, i64* %134, align 8
  %135 = bitcast %"class.v8::internal::ZoneVector.179"* %115 to i8*
  tail call void @llvm.memset.p0i8.i64(i8* align 8 %135, i8 0, i64 24, i1 false) #12
  %136 = getelementptr inbounds %"class.v8::internal::ZoneVector.179", %"class.v8::internal::ZoneVector.179"* %112, i64 -2
  %137 = getelementptr inbounds %"class.v8::internal::ZoneVector.179", %"class.v8::internal::ZoneVector.179"* %113, i64 -2
  %138 = getelementptr inbounds %"class.v8::internal::ZoneVector.179", %"class.v8::internal::ZoneVector.179"* %113, i64 -2, i32 0, i32 0, i32 2, i32 1, i32 0
  %139 = getelementptr inbounds %"class.v8::internal::ZoneVector.179", %"class.v8::internal::ZoneVector.179"* %112, i64 -2, i32 0, i32 0, i32 2, i32 1
  %140 = bitcast %"class.v8::internal::ZoneAllocator.185"* %138 to i64*
  %141 = bitcast %"struct.std::__1::__compressed_pair_elem.184"* %139 to i64*
  %142 = bitcast %"class.v8::internal::ZoneVector.179"* %136 to i8*
  tail call void @llvm.memset.p0i8.i64(i8* align 8 %142, i8 0, i64 24, i1 false) #12
  %143 = load i64, i64* %140, align 8
  store i64 %143, i64* %141, align 8
  %144 = bitcast %"class.v8::internal::ZoneVector.179"* %137 to i64*
  %145 = load i64, i64* %144, align 8
  %146 = bitcast %"class.v8::internal::ZoneVector.179"* %136 to i64*
  store i64 %145, i64* %146, align 8
  %147 = getelementptr inbounds %"class.v8::internal::ZoneVector.179", %"class.v8::internal::ZoneVector.179"* %113, i64 -2, i32 0, i32 0, i32 1
  %148 = bitcast %"class.v8::internal::wasm::AsmType"*** %147 to i64*
  %149 = load i64, i64* %148, align 8
  %150 = getelementptr inbounds %"class.v8::internal::ZoneVector.179", %"class.v8::internal::ZoneVector.179"* %112, i64 -2, i32 0, i32 0, i32 1
  %151 = bitcast %"class.v8::internal::wasm::AsmType"*** %150 to i64*
  store i64 %149, i64* %151, align 8
  %152 = getelementptr inbounds %"class.v8::internal::ZoneVector.179", %"class.v8::internal::ZoneVector.179"* %113, i64 -2, i32 0, i32 0, i32 2, i32 0, i32 0
  %153 = bitcast %"class.v8::internal::wasm::AsmType"*** %152 to i64*
  %154 = load i64, i64* %153, align 8
  %155 = getelementptr inbounds %"class.v8::internal::ZoneVector.179", %"class.v8::internal::ZoneVector.179"* %112, i64 -2, i32 0, i32 0, i32 2, i32 0, i32 0
  %156 = bitcast %"class.v8::internal::wasm::AsmType"*** %155 to i64*
  store i64 %154, i64* %156, align 8
  %157 = bitcast %"class.v8::internal::ZoneVector.179"* %137 to i8*
  tail call void @llvm.memset.p0i8.i64(i8* align 8 %157, i8 0, i64 24, i1 false) #12
  %158 = icmp eq %"class.v8::internal::ZoneVector.179"* %137, %73
  br i1 %158, label %159, label %111

159:                                              ; preds = %111, %106
  %160 = phi %"class.v8::internal::ZoneVector.179"* [ %107, %106 ], [ %136, %111 ]
  %161 = load i64, i64* %6, align 8
  %162 = load %"class.v8::internal::ZoneVector.179"*, %"class.v8::internal::ZoneVector.179"** %3, align 8
  br label %163

163:                                              ; preds = %44, %159
  %164 = phi %"class.v8::internal::ZoneVector.179"* [ %162, %159 ], [ %73, %44 ]
  %165 = phi %"class.v8::internal::ZoneVector.179"* [ %160, %159 ], [ %47, %44 ]
  %166 = phi i64 [ %161, %159 ], [ %74, %44 ]
  %167 = ptrtoint %"class.v8::internal::ZoneVector.179"* %165 to i64
  store i64 %167, i64* %6, align 8
  store i64 %71, i64* %4, align 8
  store i64 %49, i64* %16, align 8
  %168 = inttoptr i64 %166 to %"class.v8::internal::ZoneVector.179"*
  %169 = icmp eq %"class.v8::internal::ZoneVector.179"* %164, %168
  br i1 %169, label %210, label %170

170:                                              ; preds = %163
  %171 = getelementptr %"class.v8::internal::ZoneVector.179", %"class.v8::internal::ZoneVector.179"* %164, i64 -1, i32 0, i32 0, i32 0
  %172 = bitcast %"class.v8::internal::wasm::AsmType"*** %171 to i8*
  %173 = sub i64 0, %166
  %174 = getelementptr i8, i8* %172, i64 %173
  %175 = ptrtoint i8* %174 to i64
  %176 = lshr i64 %175, 5
  %177 = add nuw nsw i64 %176, 1
  %178 = and i64 %177, 3
  %179 = icmp eq i64 %178, 0
  br i1 %179, label %194, label %180

180:                                              ; preds = %170, %191
  %181 = phi %"class.v8::internal::ZoneVector.179"* [ %183, %191 ], [ %164, %170 ]
  %182 = phi i64 [ %192, %191 ], [ %178, %170 ]
  %183 = getelementptr inbounds %"class.v8::internal::ZoneVector.179", %"class.v8::internal::ZoneVector.179"* %181, i64 -1
  %184 = getelementptr inbounds %"class.v8::internal::ZoneVector.179", %"class.v8::internal::ZoneVector.179"* %183, i64 0, i32 0, i32 0, i32 0
  %185 = load %"class.v8::internal::wasm::AsmType"**, %"class.v8::internal::wasm::AsmType"*** %184, align 8
  %186 = icmp eq %"class.v8::internal::wasm::AsmType"** %185, null
  br i1 %186, label %191, label %187

187:                                              ; preds = %180
  %188 = ptrtoint %"class.v8::internal::wasm::AsmType"** %185 to i64
  %189 = getelementptr inbounds %"class.v8::internal::ZoneVector.179", %"class.v8::internal::ZoneVector.179"* %181, i64 -1, i32 0, i32 0, i32 1
  %190 = bitcast %"class.v8::internal::wasm::AsmType"*** %189 to i64*
  store i64 %188, i64* %190, align 8
  br label %191

191:                                              ; preds = %187, %180
  %192 = add i64 %182, -1
  %193 = icmp eq i64 %192, 0
  br i1 %193, label %194, label %180, !llvm.loop !298

194:                                              ; preds = %191, %170
  %195 = phi %"class.v8::internal::ZoneVector.179"* [ %164, %170 ], [ %183, %191 ]
  %196 = icmp ult i8* %174, inttoptr (i64 96 to i8*)
  br i1 %196, label %210, label %197

197:                                              ; preds = %194, %232
  %198 = phi %"class.v8::internal::ZoneVector.179"* [ %224, %232 ], [ %195, %194 ]
  %199 = getelementptr inbounds %"class.v8::internal::ZoneVector.179", %"class.v8::internal::ZoneVector.179"* %198, i64 -1, i32 0, i32 0, i32 0
  %200 = load %"class.v8::internal::wasm::AsmType"**, %"class.v8::internal::wasm::AsmType"*** %199, align 8
  %201 = icmp eq %"class.v8::internal::wasm::AsmType"** %200, null
  br i1 %201, label %206, label %202

202:                                              ; preds = %197
  %203 = ptrtoint %"class.v8::internal::wasm::AsmType"** %200 to i64
  %204 = getelementptr inbounds %"class.v8::internal::ZoneVector.179", %"class.v8::internal::ZoneVector.179"* %198, i64 -1, i32 0, i32 0, i32 1
  %205 = bitcast %"class.v8::internal::wasm::AsmType"*** %204 to i64*
  store i64 %203, i64* %205, align 8
  br label %206

206:                                              ; preds = %202, %197
  %207 = getelementptr inbounds %"class.v8::internal::ZoneVector.179", %"class.v8::internal::ZoneVector.179"* %198, i64 -2, i32 0, i32 0, i32 0
  %208 = load %"class.v8::internal::wasm::AsmType"**, %"class.v8::internal::wasm::AsmType"*** %207, align 8
  %209 = icmp eq %"class.v8::internal::wasm::AsmType"** %208, null
  br i1 %209, label %215, label %211

210:                                              ; preds = %194, %232, %163
  ret void

211:                                              ; preds = %206
  %212 = ptrtoint %"class.v8::internal::wasm::AsmType"** %208 to i64
  %213 = getelementptr inbounds %"class.v8::internal::ZoneVector.179", %"class.v8::internal::ZoneVector.179"* %198, i64 -2, i32 0, i32 0, i32 1
  %214 = bitcast %"class.v8::internal::wasm::AsmType"*** %213 to i64*
  store i64 %212, i64* %214, align 8
  br label %215

215:                                              ; preds = %211, %206
  %216 = getelementptr inbounds %"class.v8::internal::ZoneVector.179", %"class.v8::internal::ZoneVector.179"* %198, i64 -3, i32 0, i32 0, i32 0
  %217 = load %"class.v8::internal::wasm::AsmType"**, %"class.v8::internal::wasm::AsmType"*** %216, align 8
  %218 = icmp eq %"class.v8::internal::wasm::AsmType"** %217, null
  br i1 %218, label %223, label %219

219:                                              ; preds = %215
  %220 = ptrtoint %"class.v8::internal::wasm::AsmType"** %217 to i64
  %221 = getelementptr inbounds %"class.v8::internal::ZoneVector.179", %"class.v8::internal::ZoneVector.179"* %198, i64 -3, i32 0, i32 0, i32 1
  %222 = bitcast %"class.v8::internal::wasm::AsmType"*** %221 to i64*
  store i64 %220, i64* %222, align 8
  br label %223

223:                                              ; preds = %219, %215
  %224 = getelementptr inbounds %"class.v8::internal::ZoneVector.179", %"class.v8::internal::ZoneVector.179"* %198, i64 -4
  %225 = getelementptr inbounds %"class.v8::internal::ZoneVector.179", %"class.v8::internal::ZoneVector.179"* %224, i64 0, i32 0, i32 0, i32 0
  %226 = load %"class.v8::internal::wasm::AsmType"**, %"class.v8::internal::wasm::AsmType"*** %225, align 8
  %227 = icmp eq %"class.v8::internal::wasm::AsmType"** %226, null
  br i1 %227, label %232, label %228

228:                                              ; preds = %223
  %229 = ptrtoint %"class.v8::internal::wasm::AsmType"** %226 to i64
  %230 = getelementptr inbounds %"class.v8::internal::ZoneVector.179", %"class.v8::internal::ZoneVector.179"* %198, i64 -4, i32 0, i32 0, i32 1
  %231 = bitcast %"class.v8::internal::wasm::AsmType"*** %230 to i64*
  store i64 %229, i64* %231, align 8
  br label %232

232:                                              ; preds = %228, %223
  %233 = icmp eq %"class.v8::internal::ZoneVector.179"* %224, %168
  br i1 %233, label %210, label %197
}

; Function Attrs: inlinehint nounwind ssp uwtable
define linkonce_odr hidden void @_ZNSt3__16vectorIN2v88internal10ZoneVectorINS2_4wasm9ValueTypeEEENS2_13ZoneAllocatorIS6_EEE24__emplace_back_slow_pathIJS6_EEEvDpOT_(%"class.std::__1::vector.162"*, %"class.v8::internal::ZoneVector.164"* dereferenceable(32)) local_unnamed_addr #5 comdat align 2 {
  %3 = getelementptr inbounds %"class.std::__1::vector.162", %"class.std::__1::vector.162"* %0, i64 0, i32 0, i32 1
  %4 = bitcast %"class.v8::internal::ZoneVector.164"** %3 to i64*
  %5 = load i64, i64* %4, align 8
  %6 = bitcast %"class.std::__1::vector.162"* %0 to i64*
  %7 = load i64, i64* %6, align 8
  %8 = sub i64 %5, %7
  %9 = ashr exact i64 %8, 5
  %10 = add nsw i64 %9, 1
  %11 = icmp ugt i64 %10, 67108863
  br i1 %11, label %12, label %14

12:                                               ; preds = %2
  %13 = bitcast %"class.std::__1::vector.162"* %0 to %"class.std::__1::__vector_base_common"*
  tail call void @_ZNKSt3__120__vector_base_commonILb1EE20__throw_length_errorEv(%"class.std::__1::__vector_base_common"* %13) #13
  unreachable

14:                                               ; preds = %2
  %15 = getelementptr inbounds %"class.std::__1::vector.162", %"class.std::__1::vector.162"* %0, i64 0, i32 0, i32 2, i32 0, i32 0
  %16 = bitcast %"class.v8::internal::ZoneVector.164"** %15 to i64*
  %17 = load i64, i64* %16, align 8
  %18 = sub i64 %17, %7
  %19 = ashr exact i64 %18, 5
  %20 = icmp ult i64 %19, 33554431
  br i1 %20, label %21, label %26

21:                                               ; preds = %14
  %22 = ashr exact i64 %18, 4
  %23 = icmp ult i64 %22, %10
  %24 = select i1 %23, i64 %10, i64 %22
  %25 = icmp eq i64 %24, 0
  br i1 %25, label %44, label %26

26:                                               ; preds = %14, %21
  %27 = phi i64 [ %24, %21 ], [ 67108863, %14 ]
  %28 = getelementptr inbounds %"class.std::__1::vector.162", %"class.std::__1::vector.162"* %0, i64 0, i32 0, i32 2, i32 1, i32 0, i32 0
  %29 = load %"class.v8::internal::Zone"*, %"class.v8::internal::Zone"** %28, align 8
  %30 = shl i64 %27, 5
  %31 = getelementptr inbounds %"class.v8::internal::Zone", %"class.v8::internal::Zone"* %29, i64 0, i32 2
  %32 = load i64, i64* %31, align 8
  %33 = getelementptr inbounds %"class.v8::internal::Zone", %"class.v8::internal::Zone"* %29, i64 0, i32 3
  %34 = load i64, i64* %33, align 8
  %35 = sub i64 %34, %32
  %36 = icmp ugt i64 %30, %35
  br i1 %36, label %37, label %39, !prof !2

37:                                               ; preds = %26
  %38 = tail call i64 @_ZN2v88internal4Zone9NewExpandEm(%"class.v8::internal::Zone"* %29, i64 %30) #12
  br label %41

39:                                               ; preds = %26
  %40 = add i64 %32, %30
  store i64 %40, i64* %31, align 8
  br label %41

41:                                               ; preds = %39, %37
  %42 = phi i64 [ %38, %37 ], [ %32, %39 ]
  %43 = inttoptr i64 %42 to %"class.v8::internal::ZoneVector.164"*
  br label %44

44:                                               ; preds = %21, %41
  %45 = phi i64 [ %27, %41 ], [ 0, %21 ]
  %46 = phi %"class.v8::internal::ZoneVector.164"* [ %43, %41 ], [ null, %21 ]
  %47 = getelementptr inbounds %"class.v8::internal::ZoneVector.164", %"class.v8::internal::ZoneVector.164"* %46, i64 %9
  %48 = getelementptr inbounds %"class.v8::internal::ZoneVector.164", %"class.v8::internal::ZoneVector.164"* %46, i64 %45
  %49 = ptrtoint %"class.v8::internal::ZoneVector.164"* %48 to i64
  %50 = getelementptr inbounds %"class.v8::internal::ZoneVector.164", %"class.v8::internal::ZoneVector.164"* %1, i64 0, i32 0, i32 0, i32 2, i32 1, i32 0
  %51 = getelementptr inbounds %"class.v8::internal::ZoneVector.164", %"class.v8::internal::ZoneVector.164"* %46, i64 %9, i32 0, i32 0, i32 2, i32 1
  %52 = bitcast %"class.v8::internal::ZoneAllocator.170"* %50 to i64*
  %53 = bitcast %"struct.std::__1::__compressed_pair_elem.169"* %51 to i64*
  %54 = bitcast %"class.v8::internal::ZoneVector.164"* %47 to i8*
  tail call void @llvm.memset.p0i8.i64(i8* align 8 %54, i8 0, i64 24, i1 false) #12
  %55 = load i64, i64* %52, align 8
  store i64 %55, i64* %53, align 8
  %56 = bitcast %"class.v8::internal::ZoneVector.164"* %1 to i64*
  %57 = load i64, i64* %56, align 8
  %58 = bitcast %"class.v8::internal::ZoneVector.164"* %47 to i64*
  store i64 %57, i64* %58, align 8
  %59 = getelementptr inbounds %"class.v8::internal::ZoneVector.164", %"class.v8::internal::ZoneVector.164"* %1, i64 0, i32 0, i32 0, i32 1
  %60 = bitcast %"class.v8::internal::wasm::ValueType"** %59 to i64*
  %61 = load i64, i64* %60, align 8
  %62 = getelementptr inbounds %"class.v8::internal::ZoneVector.164", %"class.v8::internal::ZoneVector.164"* %46, i64 %9, i32 0, i32 0, i32 1
  %63 = bitcast %"class.v8::internal::wasm::ValueType"** %62 to i64*
  store i64 %61, i64* %63, align 8
  %64 = getelementptr inbounds %"class.v8::internal::ZoneVector.164", %"class.v8::internal::ZoneVector.164"* %1, i64 0, i32 0, i32 0, i32 2, i32 0, i32 0
  %65 = bitcast %"class.v8::internal::wasm::ValueType"** %64 to i64*
  %66 = load i64, i64* %65, align 8
  %67 = getelementptr inbounds %"class.v8::internal::ZoneVector.164", %"class.v8::internal::ZoneVector.164"* %46, i64 %9, i32 0, i32 0, i32 2, i32 0, i32 0
  %68 = bitcast %"class.v8::internal::wasm::ValueType"** %67 to i64*
  store i64 %66, i64* %68, align 8
  %69 = bitcast %"class.v8::internal::ZoneVector.164"* %1 to i8*
  tail call void @llvm.memset.p0i8.i64(i8* align 8 %69, i8 0, i64 24, i1 false) #12
  %70 = getelementptr inbounds %"class.v8::internal::ZoneVector.164", %"class.v8::internal::ZoneVector.164"* %47, i64 1
  %71 = ptrtoint %"class.v8::internal::ZoneVector.164"* %70 to i64
  %72 = getelementptr inbounds %"class.std::__1::vector.162", %"class.std::__1::vector.162"* %0, i64 0, i32 0, i32 0
  %73 = load %"class.v8::internal::ZoneVector.164"*, %"class.v8::internal::ZoneVector.164"** %72, align 8
  %74 = ptrtoint %"class.v8::internal::ZoneVector.164"* %73 to i64
  %75 = load %"class.v8::internal::ZoneVector.164"*, %"class.v8::internal::ZoneVector.164"** %3, align 8
  %76 = icmp eq %"class.v8::internal::ZoneVector.164"* %75, %73
  br i1 %76, label %163, label %77

77:                                               ; preds = %44
  %78 = getelementptr %"class.v8::internal::ZoneVector.164", %"class.v8::internal::ZoneVector.164"* %75, i64 -1, i32 0, i32 0, i32 0
  %79 = ptrtoint %"class.v8::internal::wasm::ValueType"** %78 to i64
  %80 = sub i64 %79, %74
  %81 = and i64 %80, 32
  %82 = icmp eq i64 %81, 0
  br i1 %82, label %83, label %106

83:                                               ; preds = %77
  %84 = getelementptr inbounds %"class.v8::internal::ZoneVector.164", %"class.v8::internal::ZoneVector.164"* %47, i64 -1
  %85 = getelementptr inbounds %"class.v8::internal::ZoneVector.164", %"class.v8::internal::ZoneVector.164"* %75, i64 -1
  %86 = getelementptr inbounds %"class.v8::internal::ZoneVector.164", %"class.v8::internal::ZoneVector.164"* %75, i64 -1, i32 0, i32 0, i32 2, i32 1, i32 0
  %87 = getelementptr inbounds %"class.v8::internal::ZoneVector.164", %"class.v8::internal::ZoneVector.164"* %47, i64 -1, i32 0, i32 0, i32 2, i32 1
  %88 = bitcast %"class.v8::internal::ZoneAllocator.170"* %86 to i64*
  %89 = bitcast %"struct.std::__1::__compressed_pair_elem.169"* %87 to i64*
  %90 = bitcast %"class.v8::internal::ZoneVector.164"* %84 to i8*
  tail call void @llvm.memset.p0i8.i64(i8* align 8 %90, i8 0, i64 24, i1 false) #12
  %91 = load i64, i64* %88, align 8
  store i64 %91, i64* %89, align 8
  %92 = bitcast %"class.v8::internal::ZoneVector.164"* %85 to i64*
  %93 = load i64, i64* %92, align 8
  %94 = bitcast %"class.v8::internal::ZoneVector.164"* %84 to i64*
  store i64 %93, i64* %94, align 8
  %95 = getelementptr inbounds %"class.v8::internal::ZoneVector.164", %"class.v8::internal::ZoneVector.164"* %75, i64 -1, i32 0, i32 0, i32 1
  %96 = bitcast %"class.v8::internal::wasm::ValueType"** %95 to i64*
  %97 = load i64, i64* %96, align 8
  %98 = getelementptr inbounds %"class.v8::internal::ZoneVector.164", %"class.v8::internal::ZoneVector.164"* %47, i64 -1, i32 0, i32 0, i32 1
  %99 = bitcast %"class.v8::internal::wasm::ValueType"** %98 to i64*
  store i64 %97, i64* %99, align 8
  %100 = getelementptr inbounds %"class.v8::internal::ZoneVector.164", %"class.v8::internal::ZoneVector.164"* %75, i64 -1, i32 0, i32 0, i32 2, i32 0, i32 0
  %101 = bitcast %"class.v8::internal::wasm::ValueType"** %100 to i64*
  %102 = load i64, i64* %101, align 8
  %103 = getelementptr inbounds %"class.v8::internal::ZoneVector.164", %"class.v8::internal::ZoneVector.164"* %47, i64 -1, i32 0, i32 0, i32 2, i32 0, i32 0
  %104 = bitcast %"class.v8::internal::wasm::ValueType"** %103 to i64*
  store i64 %102, i64* %104, align 8
  %105 = bitcast %"class.v8::internal::ZoneVector.164"* %85 to i8*
  tail call void @llvm.memset.p0i8.i64(i8* align 8 %105, i8 0, i64 24, i1 false) #12
  br label %106

106:                                              ; preds = %83, %77
  %107 = phi %"class.v8::internal::ZoneVector.164"* [ undef, %77 ], [ %84, %83 ]
  %108 = phi %"class.v8::internal::ZoneVector.164"* [ %47, %77 ], [ %84, %83 ]
  %109 = phi %"class.v8::internal::ZoneVector.164"* [ %75, %77 ], [ %85, %83 ]
  %110 = icmp ult i64 %80, 32
  br i1 %110, label %159, label %111

111:                                              ; preds = %106, %111
  %112 = phi %"class.v8::internal::ZoneVector.164"* [ %136, %111 ], [ %108, %106 ]
  %113 = phi %"class.v8::internal::ZoneVector.164"* [ %137, %111 ], [ %109, %106 ]
  %114 = getelementptr inbounds %"class.v8::internal::ZoneVector.164", %"class.v8::internal::ZoneVector.164"* %112, i64 -1
  %115 = getelementptr inbounds %"class.v8::internal::ZoneVector.164", %"class.v8::internal::ZoneVector.164"* %113, i64 -1
  %116 = getelementptr inbounds %"class.v8::internal::ZoneVector.164", %"class.v8::internal::ZoneVector.164"* %113, i64 -1, i32 0, i32 0, i32 2, i32 1, i32 0
  %117 = getelementptr inbounds %"class.v8::internal::ZoneVector.164", %"class.v8::internal::ZoneVector.164"* %112, i64 -1, i32 0, i32 0, i32 2, i32 1
  %118 = bitcast %"class.v8::internal::ZoneAllocator.170"* %116 to i64*
  %119 = bitcast %"struct.std::__1::__compressed_pair_elem.169"* %117 to i64*
  %120 = bitcast %"class.v8::internal::ZoneVector.164"* %114 to i8*
  tail call void @llvm.memset.p0i8.i64(i8* align 8 %120, i8 0, i64 24, i1 false) #12
  %121 = load i64, i64* %118, align 8
  store i64 %121, i64* %119, align 8
  %122 = bitcast %"class.v8::internal::ZoneVector.164"* %115 to i64*
  %123 = load i64, i64* %122, align 8
  %124 = bitcast %"class.v8::internal::ZoneVector.164"* %114 to i64*
  store i64 %123, i64* %124, align 8
  %125 = getelementptr inbounds %"class.v8::internal::ZoneVector.164", %"class.v8::internal::ZoneVector.164"* %113, i64 -1, i32 0, i32 0, i32 1
  %126 = bitcast %"class.v8::internal::wasm::ValueType"** %125 to i64*
  %127 = load i64, i64* %126, align 8
  %128 = getelementptr inbounds %"class.v8::internal::ZoneVector.164", %"class.v8::internal::ZoneVector.164"* %112, i64 -1, i32 0, i32 0, i32 1
  %129 = bitcast %"class.v8::internal::wasm::ValueType"** %128 to i64*
  store i64 %127, i64* %129, align 8
  %130 = getelementptr inbounds %"class.v8::internal::ZoneVector.164", %"class.v8::internal::ZoneVector.164"* %113, i64 -1, i32 0, i32 0, i32 2, i32 0, i32 0
  %131 = bitcast %"class.v8::internal::wasm::ValueType"** %130 to i64*
  %132 = load i64, i64* %131, align 8
  %133 = getelementptr inbounds %"class.v8::internal::ZoneVector.164", %"class.v8::internal::ZoneVector.164"* %112, i64 -1, i32 0, i32 0, i32 2, i32 0, i32 0
  %134 = bitcast %"class.v8::internal::wasm::ValueType"** %133 to i64*
  store i64 %132, i64* %134, align 8
  %135 = bitcast %"class.v8::internal::ZoneVector.164"* %115 to i8*
  tail call void @llvm.memset.p0i8.i64(i8* align 8 %135, i8 0, i64 24, i1 false) #12
  %136 = getelementptr inbounds %"class.v8::internal::ZoneVector.164", %"class.v8::internal::ZoneVector.164"* %112, i64 -2
  %137 = getelementptr inbounds %"class.v8::internal::ZoneVector.164", %"class.v8::internal::ZoneVector.164"* %113, i64 -2
  %138 = getelementptr inbounds %"class.v8::internal::ZoneVector.164", %"class.v8::internal::ZoneVector.164"* %113, i64 -2, i32 0, i32 0, i32 2, i32 1, i32 0
  %139 = getelementptr inbounds %"class.v8::internal::ZoneVector.164", %"class.v8::internal::ZoneVector.164"* %112, i64 -2, i32 0, i32 0, i32 2, i32 1
  %140 = bitcast %"class.v8::internal::ZoneAllocator.170"* %138 to i64*
  %141 = bitcast %"struct.std::__1::__compressed_pair_elem.169"* %139 to i64*
  %142 = bitcast %"class.v8::internal::ZoneVector.164"* %136 to i8*
  tail call void @llvm.memset.p0i8.i64(i8* align 8 %142, i8 0, i64 24, i1 false) #12
  %143 = load i64, i64* %140, align 8
  store i64 %143, i64* %141, align 8
  %144 = bitcast %"class.v8::internal::ZoneVector.164"* %137 to i64*
  %145 = load i64, i64* %144, align 8
  %146 = bitcast %"class.v8::internal::ZoneVector.164"* %136 to i64*
  store i64 %145, i64* %146, align 8
  %147 = getelementptr inbounds %"class.v8::internal::ZoneVector.164", %"class.v8::internal::ZoneVector.164"* %113, i64 -2, i32 0, i32 0, i32 1
  %148 = bitcast %"class.v8::internal::wasm::ValueType"** %147 to i64*
  %149 = load i64, i64* %148, align 8
  %150 = getelementptr inbounds %"class.v8::internal::ZoneVector.164", %"class.v8::internal::ZoneVector.164"* %112, i64 -2, i32 0, i32 0, i32 1
  %151 = bitcast %"class.v8::internal::wasm::ValueType"** %150 to i64*
  store i64 %149, i64* %151, align 8
  %152 = getelementptr inbounds %"class.v8::internal::ZoneVector.164", %"class.v8::internal::ZoneVector.164"* %113, i64 -2, i32 0, i32 0, i32 2, i32 0, i32 0
  %153 = bitcast %"class.v8::internal::wasm::ValueType"** %152 to i64*
  %154 = load i64, i64* %153, align 8
  %155 = getelementptr inbounds %"class.v8::internal::ZoneVector.164", %"class.v8::internal::ZoneVector.164"* %112, i64 -2, i32 0, i32 0, i32 2, i32 0, i32 0
  %156 = bitcast %"class.v8::internal::wasm::ValueType"** %155 to i64*
  store i64 %154, i64* %156, align 8
  %157 = bitcast %"class.v8::internal::ZoneVector.164"* %137 to i8*
  tail call void @llvm.memset.p0i8.i64(i8* align 8 %157, i8 0, i64 24, i1 false) #12
  %158 = icmp eq %"class.v8::internal::ZoneVector.164"* %137, %73
  br i1 %158, label %159, label %111

159:                                              ; preds = %111, %106
  %160 = phi %"class.v8::internal::ZoneVector.164"* [ %107, %106 ], [ %136, %111 ]
  %161 = load i64, i64* %6, align 8
  %162 = load %"class.v8::internal::ZoneVector.164"*, %"class.v8::internal::ZoneVector.164"** %3, align 8
  br label %163

163:                                              ; preds = %44, %159
  %164 = phi %"class.v8::internal::ZoneVector.164"* [ %162, %159 ], [ %73, %44 ]
  %165 = phi %"class.v8::internal::ZoneVector.164"* [ %160, %159 ], [ %47, %44 ]
  %166 = phi i64 [ %161, %159 ], [ %74, %44 ]
  %167 = ptrtoint %"class.v8::internal::ZoneVector.164"* %165 to i64
  store i64 %167, i64* %6, align 8
  store i64 %71, i64* %4, align 8
  store i64 %49, i64* %16, align 8
  %168 = inttoptr i64 %166 to %"class.v8::internal::ZoneVector.164"*
  %169 = icmp eq %"class.v8::internal::ZoneVector.164"* %164, %168
  br i1 %169, label %210, label %170

170:                                              ; preds = %163
  %171 = getelementptr %"class.v8::internal::ZoneVector.164", %"class.v8::internal::ZoneVector.164"* %164, i64 -1, i32 0, i32 0, i32 0
  %172 = bitcast %"class.v8::internal::wasm::ValueType"** %171 to i8*
  %173 = sub i64 0, %166
  %174 = getelementptr i8, i8* %172, i64 %173
  %175 = ptrtoint i8* %174 to i64
  %176 = lshr i64 %175, 5
  %177 = add nuw nsw i64 %176, 1
  %178 = and i64 %177, 3
  %179 = icmp eq i64 %178, 0
  br i1 %179, label %194, label %180

180:                                              ; preds = %170, %191
  %181 = phi %"class.v8::internal::ZoneVector.164"* [ %183, %191 ], [ %164, %170 ]
  %182 = phi i64 [ %192, %191 ], [ %178, %170 ]
  %183 = getelementptr inbounds %"class.v8::internal::ZoneVector.164", %"class.v8::internal::ZoneVector.164"* %181, i64 -1
  %184 = getelementptr inbounds %"class.v8::internal::ZoneVector.164", %"class.v8::internal::ZoneVector.164"* %183, i64 0, i32 0, i32 0, i32 0
  %185 = load %"class.v8::internal::wasm::ValueType"*, %"class.v8::internal::wasm::ValueType"** %184, align 8
  %186 = icmp eq %"class.v8::internal::wasm::ValueType"* %185, null
  br i1 %186, label %191, label %187

187:                                              ; preds = %180
  %188 = ptrtoint %"class.v8::internal::wasm::ValueType"* %185 to i64
  %189 = getelementptr inbounds %"class.v8::internal::ZoneVector.164", %"class.v8::internal::ZoneVector.164"* %181, i64 -1, i32 0, i32 0, i32 1
  %190 = bitcast %"class.v8::internal::wasm::ValueType"** %189 to i64*
  store i64 %188, i64* %190, align 8
  br label %191

191:                                              ; preds = %187, %180
  %192 = add i64 %182, -1
  %193 = icmp eq i64 %192, 0
  br i1 %193, label %194, label %180, !llvm.loop !299

194:                                              ; preds = %191, %170
  %195 = phi %"class.v8::internal::ZoneVector.164"* [ %164, %170 ], [ %183, %191 ]
  %196 = icmp ult i8* %174, inttoptr (i64 96 to i8*)
  br i1 %196, label %210, label %197

197:                                              ; preds = %194, %232
  %198 = phi %"class.v8::internal::ZoneVector.164"* [ %224, %232 ], [ %195, %194 ]
  %199 = getelementptr inbounds %"class.v8::internal::ZoneVector.164", %"class.v8::internal::ZoneVector.164"* %198, i64 -1, i32 0, i32 0, i32 0
  %200 = load %"class.v8::internal::wasm::ValueType"*, %"class.v8::internal::wasm::ValueType"** %199, align 8
  %201 = icmp eq %"class.v8::internal::wasm::ValueType"* %200, null
  br i1 %201, label %206, label %202

202:                                              ; preds = %197
  %203 = ptrtoint %"class.v8::internal::wasm::ValueType"* %200 to i64
  %204 = getelementptr inbounds %"class.v8::internal::ZoneVector.164", %"class.v8::internal::ZoneVector.164"* %198, i64 -1, i32 0, i32 0, i32 1
  %205 = bitcast %"class.v8::internal::wasm::ValueType"** %204 to i64*
  store i64 %203, i64* %205, align 8
  br label %206

206:                                              ; preds = %202, %197
  %207 = getelementptr inbounds %"class.v8::internal::ZoneVector.164", %"class.v8::internal::ZoneVector.164"* %198, i64 -2, i32 0, i32 0, i32 0
  %208 = load %"class.v8::internal::wasm::ValueType"*, %"class.v8::internal::wasm::ValueType"** %207, align 8
  %209 = icmp eq %"class.v8::internal::wasm::ValueType"* %208, null
  br i1 %209, label %215, label %211

210:                                              ; preds = %194, %232, %163
  ret void

211:                                              ; preds = %206
  %212 = ptrtoint %"class.v8::internal::wasm::ValueType"* %208 to i64
  %213 = getelementptr inbounds %"class.v8::internal::ZoneVector.164", %"class.v8::internal::ZoneVector.164"* %198, i64 -2, i32 0, i32 0, i32 1
  %214 = bitcast %"class.v8::internal::wasm::ValueType"** %213 to i64*
  store i64 %212, i64* %214, align 8
  br label %215

215:                                              ; preds = %211, %206
  %216 = getelementptr inbounds %"class.v8::internal::ZoneVector.164", %"class.v8::internal::ZoneVector.164"* %198, i64 -3, i32 0, i32 0, i32 0
  %217 = load %"class.v8::internal::wasm::ValueType"*, %"class.v8::internal::wasm::ValueType"** %216, align 8
  %218 = icmp eq %"class.v8::internal::wasm::ValueType"* %217, null
  br i1 %218, label %223, label %219

219:                                              ; preds = %215
  %220 = ptrtoint %"class.v8::internal::wasm::ValueType"* %217 to i64
  %221 = getelementptr inbounds %"class.v8::internal::ZoneVector.164", %"class.v8::internal::ZoneVector.164"* %198, i64 -3, i32 0, i32 0, i32 1
  %222 = bitcast %"class.v8::internal::wasm::ValueType"** %221 to i64*
  store i64 %220, i64* %222, align 8
  br label %223

223:                                              ; preds = %219, %215
  %224 = getelementptr inbounds %"class.v8::internal::ZoneVector.164", %"class.v8::internal::ZoneVector.164"* %198, i64 -4
  %225 = getelementptr inbounds %"class.v8::internal::ZoneVector.164", %"class.v8::internal::ZoneVector.164"* %224, i64 0, i32 0, i32 0, i32 0
  %226 = load %"class.v8::internal::wasm::ValueType"*, %"class.v8::internal::wasm::ValueType"** %225, align 8
  %227 = icmp eq %"class.v8::internal::wasm::ValueType"* %226, null
  br i1 %227, label %232, label %228

228:                                              ; preds = %223
  %229 = ptrtoint %"class.v8::internal::wasm::ValueType"* %226 to i64
  %230 = getelementptr inbounds %"class.v8::internal::ZoneVector.164", %"class.v8::internal::ZoneVector.164"* %198, i64 -4, i32 0, i32 0, i32 1
  %231 = bitcast %"class.v8::internal::wasm::ValueType"** %230 to i64*
  store i64 %229, i64* %231, align 8
  br label %232

232:                                              ; preds = %228, %223
  %233 = icmp eq %"class.v8::internal::ZoneVector.164"* %224, %168
  br i1 %233, label %210, label %197
}

; Function Attrs: inlinehint nounwind ssp uwtable
define linkonce_odr hidden void @_ZNSt3__16vectorIN2v88internal10ZoneVectorIiEENS2_13ZoneAllocatorIS4_EEE24__emplace_back_slow_pathIJS4_EEEvDpOT_(%"class.std::__1::vector.192"*, %"class.v8::internal::ZoneVector.129"* dereferenceable(32)) local_unnamed_addr #5 comdat align 2 {
  %3 = getelementptr inbounds %"class.std::__1::vector.192", %"class.std::__1::vector.192"* %0, i64 0, i32 0, i32 1
  %4 = bitcast %"class.v8::internal::ZoneVector.129"** %3 to i64*
  %5 = load i64, i64* %4, align 8
  %6 = bitcast %"class.std::__1::vector.192"* %0 to i64*
  %7 = load i64, i64* %6, align 8
  %8 = sub i64 %5, %7
  %9 = ashr exact i64 %8, 5
  %10 = add nsw i64 %9, 1
  %11 = icmp ugt i64 %10, 67108863
  br i1 %11, label %12, label %14

12:                                               ; preds = %2
  %13 = bitcast %"class.std::__1::vector.192"* %0 to %"class.std::__1::__vector_base_common"*
  tail call void @_ZNKSt3__120__vector_base_commonILb1EE20__throw_length_errorEv(%"class.std::__1::__vector_base_common"* %13) #13
  unreachable

14:                                               ; preds = %2
  %15 = getelementptr inbounds %"class.std::__1::vector.192", %"class.std::__1::vector.192"* %0, i64 0, i32 0, i32 2, i32 0, i32 0
  %16 = bitcast %"class.v8::internal::ZoneVector.129"** %15 to i64*
  %17 = load i64, i64* %16, align 8
  %18 = sub i64 %17, %7
  %19 = ashr exact i64 %18, 5
  %20 = icmp ult i64 %19, 33554431
  br i1 %20, label %21, label %26

21:                                               ; preds = %14
  %22 = ashr exact i64 %18, 4
  %23 = icmp ult i64 %22, %10
  %24 = select i1 %23, i64 %10, i64 %22
  %25 = icmp eq i64 %24, 0
  br i1 %25, label %44, label %26

26:                                               ; preds = %14, %21
  %27 = phi i64 [ %24, %21 ], [ 67108863, %14 ]
  %28 = getelementptr inbounds %"class.std::__1::vector.192", %"class.std::__1::vector.192"* %0, i64 0, i32 0, i32 2, i32 1, i32 0, i32 0
  %29 = load %"class.v8::internal::Zone"*, %"class.v8::internal::Zone"** %28, align 8
  %30 = shl i64 %27, 5
  %31 = getelementptr inbounds %"class.v8::internal::Zone", %"class.v8::internal::Zone"* %29, i64 0, i32 2
  %32 = load i64, i64* %31, align 8
  %33 = getelementptr inbounds %"class.v8::internal::Zone", %"class.v8::internal::Zone"* %29, i64 0, i32 3
  %34 = load i64, i64* %33, align 8
  %35 = sub i64 %34, %32
  %36 = icmp ugt i64 %30, %35
  br i1 %36, label %37, label %39, !prof !2

37:                                               ; preds = %26
  %38 = tail call i64 @_ZN2v88internal4Zone9NewExpandEm(%"class.v8::internal::Zone"* %29, i64 %30) #12
  br label %41

39:                                               ; preds = %26
  %40 = add i64 %32, %30
  store i64 %40, i64* %31, align 8
  br label %41

41:                                               ; preds = %39, %37
  %42 = phi i64 [ %38, %37 ], [ %32, %39 ]
  %43 = inttoptr i64 %42 to %"class.v8::internal::ZoneVector.129"*
  br label %44

44:                                               ; preds = %21, %41
  %45 = phi i64 [ %27, %41 ], [ 0, %21 ]
  %46 = phi %"class.v8::internal::ZoneVector.129"* [ %43, %41 ], [ null, %21 ]
  %47 = getelementptr inbounds %"class.v8::internal::ZoneVector.129", %"class.v8::internal::ZoneVector.129"* %46, i64 %9
  %48 = getelementptr inbounds %"class.v8::internal::ZoneVector.129", %"class.v8::internal::ZoneVector.129"* %46, i64 %45
  %49 = ptrtoint %"class.v8::internal::ZoneVector.129"* %48 to i64
  %50 = getelementptr inbounds %"class.v8::internal::ZoneVector.129", %"class.v8::internal::ZoneVector.129"* %1, i64 0, i32 0, i32 0, i32 2, i32 1, i32 0
  %51 = getelementptr inbounds %"class.v8::internal::ZoneVector.129", %"class.v8::internal::ZoneVector.129"* %46, i64 %9, i32 0, i32 0, i32 2, i32 1
  %52 = bitcast %"class.v8::internal::ZoneAllocator.135"* %50 to i64*
  %53 = bitcast %"struct.std::__1::__compressed_pair_elem.134"* %51 to i64*
  %54 = bitcast %"class.v8::internal::ZoneVector.129"* %47 to i8*
  tail call void @llvm.memset.p0i8.i64(i8* align 8 %54, i8 0, i64 24, i1 false) #12
  %55 = load i64, i64* %52, align 8
  store i64 %55, i64* %53, align 8
  %56 = bitcast %"class.v8::internal::ZoneVector.129"* %1 to i64*
  %57 = load i64, i64* %56, align 8
  %58 = bitcast %"class.v8::internal::ZoneVector.129"* %47 to i64*
  store i64 %57, i64* %58, align 8
  %59 = getelementptr inbounds %"class.v8::internal::ZoneVector.129", %"class.v8::internal::ZoneVector.129"* %1, i64 0, i32 0, i32 0, i32 1
  %60 = bitcast i32** %59 to i64*
  %61 = load i64, i64* %60, align 8
  %62 = getelementptr inbounds %"class.v8::internal::ZoneVector.129", %"class.v8::internal::ZoneVector.129"* %46, i64 %9, i32 0, i32 0, i32 1
  %63 = bitcast i32** %62 to i64*
  store i64 %61, i64* %63, align 8
  %64 = getelementptr inbounds %"class.v8::internal::ZoneVector.129", %"class.v8::internal::ZoneVector.129"* %1, i64 0, i32 0, i32 0, i32 2, i32 0, i32 0
  %65 = bitcast i32** %64 to i64*
  %66 = load i64, i64* %65, align 8
  %67 = getelementptr inbounds %"class.v8::internal::ZoneVector.129", %"class.v8::internal::ZoneVector.129"* %46, i64 %9, i32 0, i32 0, i32 2, i32 0, i32 0
  %68 = bitcast i32** %67 to i64*
  store i64 %66, i64* %68, align 8
  %69 = bitcast %"class.v8::internal::ZoneVector.129"* %1 to i8*
  tail call void @llvm.memset.p0i8.i64(i8* align 8 %69, i8 0, i64 24, i1 false) #12
  %70 = getelementptr inbounds %"class.v8::internal::ZoneVector.129", %"class.v8::internal::ZoneVector.129"* %47, i64 1
  %71 = ptrtoint %"class.v8::internal::ZoneVector.129"* %70 to i64
  %72 = getelementptr inbounds %"class.std::__1::vector.192", %"class.std::__1::vector.192"* %0, i64 0, i32 0, i32 0
  %73 = load %"class.v8::internal::ZoneVector.129"*, %"class.v8::internal::ZoneVector.129"** %72, align 8
  %74 = ptrtoint %"class.v8::internal::ZoneVector.129"* %73 to i64
  %75 = load %"class.v8::internal::ZoneVector.129"*, %"class.v8::internal::ZoneVector.129"** %3, align 8
  %76 = icmp eq %"class.v8::internal::ZoneVector.129"* %75, %73
  br i1 %76, label %163, label %77

77:                                               ; preds = %44
  %78 = getelementptr %"class.v8::internal::ZoneVector.129", %"class.v8::internal::ZoneVector.129"* %75, i64 -1, i32 0, i32 0, i32 0
  %79 = ptrtoint i32** %78 to i64
  %80 = sub i64 %79, %74
  %81 = and i64 %80, 32
  %82 = icmp eq i64 %81, 0
  br i1 %82, label %83, label %106

83:                                               ; preds = %77
  %84 = getelementptr inbounds %"class.v8::internal::ZoneVector.129", %"class.v8::internal::ZoneVector.129"* %47, i64 -1
  %85 = getelementptr inbounds %"class.v8::internal::ZoneVector.129", %"class.v8::internal::ZoneVector.129"* %75, i64 -1
  %86 = getelementptr inbounds %"class.v8::internal::ZoneVector.129", %"class.v8::internal::ZoneVector.129"* %75, i64 -1, i32 0, i32 0, i32 2, i32 1, i32 0
  %87 = getelementptr inbounds %"class.v8::internal::ZoneVector.129", %"class.v8::internal::ZoneVector.129"* %47, i64 -1, i32 0, i32 0, i32 2, i32 1
  %88 = bitcast %"class.v8::internal::ZoneAllocator.135"* %86 to i64*
  %89 = bitcast %"struct.std::__1::__compressed_pair_elem.134"* %87 to i64*
  %90 = bitcast %"class.v8::internal::ZoneVector.129"* %84 to i8*
  tail call void @llvm.memset.p0i8.i64(i8* align 8 %90, i8 0, i64 24, i1 false) #12
  %91 = load i64, i64* %88, align 8
  store i64 %91, i64* %89, align 8
  %92 = bitcast %"class.v8::internal::ZoneVector.129"* %85 to i64*
  %93 = load i64, i64* %92, align 8
  %94 = bitcast %"class.v8::internal::ZoneVector.129"* %84 to i64*
  store i64 %93, i64* %94, align 8
  %95 = getelementptr inbounds %"class.v8::internal::ZoneVector.129", %"class.v8::internal::ZoneVector.129"* %75, i64 -1, i32 0, i32 0, i32 1
  %96 = bitcast i32** %95 to i64*
  %97 = load i64, i64* %96, align 8
  %98 = getelementptr inbounds %"class.v8::internal::ZoneVector.129", %"class.v8::internal::ZoneVector.129"* %47, i64 -1, i32 0, i32 0, i32 1
  %99 = bitcast i32** %98 to i64*
  store i64 %97, i64* %99, align 8
  %100 = getelementptr inbounds %"class.v8::internal::ZoneVector.129", %"class.v8::internal::ZoneVector.129"* %75, i64 -1, i32 0, i32 0, i32 2, i32 0, i32 0
  %101 = bitcast i32** %100 to i64*
  %102 = load i64, i64* %101, align 8
  %103 = getelementptr inbounds %"class.v8::internal::ZoneVector.129", %"class.v8::internal::ZoneVector.129"* %47, i64 -1, i32 0, i32 0, i32 2, i32 0, i32 0
  %104 = bitcast i32** %103 to i64*
  store i64 %102, i64* %104, align 8
  %105 = bitcast %"class.v8::internal::ZoneVector.129"* %85 to i8*
  tail call void @llvm.memset.p0i8.i64(i8* align 8 %105, i8 0, i64 24, i1 false) #12
  br label %106

106:                                              ; preds = %83, %77
  %107 = phi %"class.v8::internal::ZoneVector.129"* [ undef, %77 ], [ %84, %83 ]
  %108 = phi %"class.v8::internal::ZoneVector.129"* [ %47, %77 ], [ %84, %83 ]
  %109 = phi %"class.v8::internal::ZoneVector.129"* [ %75, %77 ], [ %85, %83 ]
  %110 = icmp ult i64 %80, 32
  br i1 %110, label %159, label %111

111:                                              ; preds = %106, %111
  %112 = phi %"class.v8::internal::ZoneVector.129"* [ %136, %111 ], [ %108, %106 ]
  %113 = phi %"class.v8::internal::ZoneVector.129"* [ %137, %111 ], [ %109, %106 ]
  %114 = getelementptr inbounds %"class.v8::internal::ZoneVector.129", %"class.v8::internal::ZoneVector.129"* %112, i64 -1
  %115 = getelementptr inbounds %"class.v8::internal::ZoneVector.129", %"class.v8::internal::ZoneVector.129"* %113, i64 -1
  %116 = getelementptr inbounds %"class.v8::internal::ZoneVector.129", %"class.v8::internal::ZoneVector.129"* %113, i64 -1, i32 0, i32 0, i32 2, i32 1, i32 0
  %117 = getelementptr inbounds %"class.v8::internal::ZoneVector.129", %"class.v8::internal::ZoneVector.129"* %112, i64 -1, i32 0, i32 0, i32 2, i32 1
  %118 = bitcast %"class.v8::internal::ZoneAllocator.135"* %116 to i64*
  %119 = bitcast %"struct.std::__1::__compressed_pair_elem.134"* %117 to i64*
  %120 = bitcast %"class.v8::internal::ZoneVector.129"* %114 to i8*
  tail call void @llvm.memset.p0i8.i64(i8* align 8 %120, i8 0, i64 24, i1 false) #12
  %121 = load i64, i64* %118, align 8
  store i64 %121, i64* %119, align 8
  %122 = bitcast %"class.v8::internal::ZoneVector.129"* %115 to i64*
  %123 = load i64, i64* %122, align 8
  %124 = bitcast %"class.v8::internal::ZoneVector.129"* %114 to i64*
  store i64 %123, i64* %124, align 8
  %125 = getelementptr inbounds %"class.v8::internal::ZoneVector.129", %"class.v8::internal::ZoneVector.129"* %113, i64 -1, i32 0, i32 0, i32 1
  %126 = bitcast i32** %125 to i64*
  %127 = load i64, i64* %126, align 8
  %128 = getelementptr inbounds %"class.v8::internal::ZoneVector.129", %"class.v8::internal::ZoneVector.129"* %112, i64 -1, i32 0, i32 0, i32 1
  %129 = bitcast i32** %128 to i64*
  store i64 %127, i64* %129, align 8
  %130 = getelementptr inbounds %"class.v8::internal::ZoneVector.129", %"class.v8::internal::ZoneVector.129"* %113, i64 -1, i32 0, i32 0, i32 2, i32 0, i32 0
  %131 = bitcast i32** %130 to i64*
  %132 = load i64, i64* %131, align 8
  %133 = getelementptr inbounds %"class.v8::internal::ZoneVector.129", %"class.v8::internal::ZoneVector.129"* %112, i64 -1, i32 0, i32 0, i32 2, i32 0, i32 0
  %134 = bitcast i32** %133 to i64*
  store i64 %132, i64* %134, align 8
  %135 = bitcast %"class.v8::internal::ZoneVector.129"* %115 to i8*
  tail call void @llvm.memset.p0i8.i64(i8* align 8 %135, i8 0, i64 24, i1 false) #12
  %136 = getelementptr inbounds %"class.v8::internal::ZoneVector.129", %"class.v8::internal::ZoneVector.129"* %112, i64 -2
  %137 = getelementptr inbounds %"class.v8::internal::ZoneVector.129", %"class.v8::internal::ZoneVector.129"* %113, i64 -2
  %138 = getelementptr inbounds %"class.v8::internal::ZoneVector.129", %"class.v8::internal::ZoneVector.129"* %113, i64 -2, i32 0, i32 0, i32 2, i32 1, i32 0
  %139 = getelementptr inbounds %"class.v8::internal::ZoneVector.129", %"class.v8::internal::ZoneVector.129"* %112, i64 -2, i32 0, i32 0, i32 2, i32 1
  %140 = bitcast %"class.v8::internal::ZoneAllocator.135"* %138 to i64*
  %141 = bitcast %"struct.std::__1::__compressed_pair_elem.134"* %139 to i64*
  %142 = bitcast %"class.v8::internal::ZoneVector.129"* %136 to i8*
  tail call void @llvm.memset.p0i8.i64(i8* align 8 %142, i8 0, i64 24, i1 false) #12
  %143 = load i64, i64* %140, align 8
  store i64 %143, i64* %141, align 8
  %144 = bitcast %"class.v8::internal::ZoneVector.129"* %137 to i64*
  %145 = load i64, i64* %144, align 8
  %146 = bitcast %"class.v8::internal::ZoneVector.129"* %136 to i64*
  store i64 %145, i64* %146, align 8
  %147 = getelementptr inbounds %"class.v8::internal::ZoneVector.129", %"class.v8::internal::ZoneVector.129"* %113, i64 -2, i32 0, i32 0, i32 1
  %148 = bitcast i32** %147 to i64*
  %149 = load i64, i64* %148, align 8
  %150 = getelementptr inbounds %"class.v8::internal::ZoneVector.129", %"class.v8::internal::ZoneVector.129"* %112, i64 -2, i32 0, i32 0, i32 1
  %151 = bitcast i32** %150 to i64*
  store i64 %149, i64* %151, align 8
  %152 = getelementptr inbounds %"class.v8::internal::ZoneVector.129", %"class.v8::internal::ZoneVector.129"* %113, i64 -2, i32 0, i32 0, i32 2, i32 0, i32 0
  %153 = bitcast i32** %152 to i64*
  %154 = load i64, i64* %153, align 8
  %155 = getelementptr inbounds %"class.v8::internal::ZoneVector.129", %"class.v8::internal::ZoneVector.129"* %112, i64 -2, i32 0, i32 0, i32 2, i32 0, i32 0
  %156 = bitcast i32** %155 to i64*
  store i64 %154, i64* %156, align 8
  %157 = bitcast %"class.v8::internal::ZoneVector.129"* %137 to i8*
  tail call void @llvm.memset.p0i8.i64(i8* align 8 %157, i8 0, i64 24, i1 false) #12
  %158 = icmp eq %"class.v8::internal::ZoneVector.129"* %137, %73
  br i1 %158, label %159, label %111

159:                                              ; preds = %111, %106
  %160 = phi %"class.v8::internal::ZoneVector.129"* [ %107, %106 ], [ %136, %111 ]
  %161 = load i64, i64* %6, align 8
  %162 = load %"class.v8::internal::ZoneVector.129"*, %"class.v8::internal::ZoneVector.129"** %3, align 8
  br label %163

163:                                              ; preds = %44, %159
  %164 = phi %"class.v8::internal::ZoneVector.129"* [ %162, %159 ], [ %73, %44 ]
  %165 = phi %"class.v8::internal::ZoneVector.129"* [ %160, %159 ], [ %47, %44 ]
  %166 = phi i64 [ %161, %159 ], [ %74, %44 ]
  %167 = ptrtoint %"class.v8::internal::ZoneVector.129"* %165 to i64
  store i64 %167, i64* %6, align 8
  store i64 %71, i64* %4, align 8
  store i64 %49, i64* %16, align 8
  %168 = inttoptr i64 %166 to %"class.v8::internal::ZoneVector.129"*
  %169 = icmp eq %"class.v8::internal::ZoneVector.129"* %164, %168
  br i1 %169, label %210, label %170

170:                                              ; preds = %163
  %171 = getelementptr %"class.v8::internal::ZoneVector.129", %"class.v8::internal::ZoneVector.129"* %164, i64 -1, i32 0, i32 0, i32 0
  %172 = bitcast i32** %171 to i8*
  %173 = sub i64 0, %166
  %174 = getelementptr i8, i8* %172, i64 %173
  %175 = ptrtoint i8* %174 to i64
  %176 = lshr i64 %175, 5
  %177 = add nuw nsw i64 %176, 1
  %178 = and i64 %177, 3
  %179 = icmp eq i64 %178, 0
  br i1 %179, label %194, label %180

180:                                              ; preds = %170, %191
  %181 = phi %"class.v8::internal::ZoneVector.129"* [ %183, %191 ], [ %164, %170 ]
  %182 = phi i64 [ %192, %191 ], [ %178, %170 ]
  %183 = getelementptr inbounds %"class.v8::internal::ZoneVector.129", %"class.v8::internal::ZoneVector.129"* %181, i64 -1
  %184 = getelementptr inbounds %"class.v8::internal::ZoneVector.129", %"class.v8::internal::ZoneVector.129"* %183, i64 0, i32 0, i32 0, i32 0
  %185 = load i32*, i32** %184, align 8
  %186 = icmp eq i32* %185, null
  br i1 %186, label %191, label %187

187:                                              ; preds = %180
  %188 = ptrtoint i32* %185 to i64
  %189 = getelementptr inbounds %"class.v8::internal::ZoneVector.129", %"class.v8::internal::ZoneVector.129"* %181, i64 -1, i32 0, i32 0, i32 1
  %190 = bitcast i32** %189 to i64*
  store i64 %188, i64* %190, align 8
  br label %191

191:                                              ; preds = %187, %180
  %192 = add i64 %182, -1
  %193 = icmp eq i64 %192, 0
  br i1 %193, label %194, label %180, !llvm.loop !300

194:                                              ; preds = %191, %170
  %195 = phi %"class.v8::internal::ZoneVector.129"* [ %164, %170 ], [ %183, %191 ]
  %196 = icmp ult i8* %174, inttoptr (i64 96 to i8*)
  br i1 %196, label %210, label %197

197:                                              ; preds = %194, %232
  %198 = phi %"class.v8::internal::ZoneVector.129"* [ %224, %232 ], [ %195, %194 ]
  %199 = getelementptr inbounds %"class.v8::internal::ZoneVector.129", %"class.v8::internal::ZoneVector.129"* %198, i64 -1, i32 0, i32 0, i32 0
  %200 = load i32*, i32** %199, align 8
  %201 = icmp eq i32* %200, null
  br i1 %201, label %206, label %202

202:                                              ; preds = %197
  %203 = ptrtoint i32* %200 to i64
  %204 = getelementptr inbounds %"class.v8::internal::ZoneVector.129", %"class.v8::internal::ZoneVector.129"* %198, i64 -1, i32 0, i32 0, i32 1
  %205 = bitcast i32** %204 to i64*
  store i64 %203, i64* %205, align 8
  br label %206

206:                                              ; preds = %202, %197
  %207 = getelementptr inbounds %"class.v8::internal::ZoneVector.129", %"class.v8::internal::ZoneVector.129"* %198, i64 -2, i32 0, i32 0, i32 0
  %208 = load i32*, i32** %207, align 8
  %209 = icmp eq i32* %208, null
  br i1 %209, label %215, label %211

210:                                              ; preds = %194, %232, %163
  ret void

211:                                              ; preds = %206
  %212 = ptrtoint i32* %208 to i64
  %213 = getelementptr inbounds %"class.v8::internal::ZoneVector.129", %"class.v8::internal::ZoneVector.129"* %198, i64 -2, i32 0, i32 0, i32 1
  %214 = bitcast i32** %213 to i64*
  store i64 %212, i64* %214, align 8
  br label %215

215:                                              ; preds = %211, %206
  %216 = getelementptr inbounds %"class.v8::internal::ZoneVector.129", %"class.v8::internal::ZoneVector.129"* %198, i64 -3, i32 0, i32 0, i32 0
  %217 = load i32*, i32** %216, align 8
  %218 = icmp eq i32* %217, null
  br i1 %218, label %223, label %219

219:                                              ; preds = %215
  %220 = ptrtoint i32* %217 to i64
  %221 = getelementptr inbounds %"class.v8::internal::ZoneVector.129", %"class.v8::internal::ZoneVector.129"* %198, i64 -3, i32 0, i32 0, i32 1
  %222 = bitcast i32** %221 to i64*
  store i64 %220, i64* %222, align 8
  br label %223

223:                                              ; preds = %219, %215
  %224 = getelementptr inbounds %"class.v8::internal::ZoneVector.129", %"class.v8::internal::ZoneVector.129"* %198, i64 -4
  %225 = getelementptr inbounds %"class.v8::internal::ZoneVector.129", %"class.v8::internal::ZoneVector.129"* %224, i64 0, i32 0, i32 0, i32 0
  %226 = load i32*, i32** %225, align 8
  %227 = icmp eq i32* %226, null
  br i1 %227, label %232, label %228

228:                                              ; preds = %223
  %229 = ptrtoint i32* %226 to i64
  %230 = getelementptr inbounds %"class.v8::internal::ZoneVector.129", %"class.v8::internal::ZoneVector.129"* %198, i64 -4, i32 0, i32 0, i32 1
  %231 = bitcast i32** %230 to i64*
  store i64 %229, i64* %231, align 8
  br label %232

232:                                              ; preds = %228, %223
  %233 = icmp eq %"class.v8::internal::ZoneVector.129"* %224, %168
  br i1 %233, label %210, label %197
}

; Function Attrs: nounwind ssp uwtable
define linkonce_odr hidden %"struct.std::__1::__hash_node_base.141"* @_ZNSt3__112__hash_tableINS_17__hash_value_typeIN2v88internal9SignatureINS3_4wasm9ValueTypeEEEjEENS_22__unordered_map_hasherIS7_S8_NS2_4base4hashIS7_EENS_8equal_toIS7_EELb1EEENS_21__unordered_map_equalIS7_S8_SE_SC_Lb1EEENS3_13ZoneAllocatorIS8_EEE4findIS7_EENS_15__hash_iteratorIPNS_11__hash_nodeIS8_PvEEEERKT_(%"class.std::__1::__hash_table.137"*, %"class.v8::internal::Signature"* dereferenceable(24)) local_unnamed_addr #0 comdat align 2 {
  %3 = getelementptr inbounds %"class.v8::internal::Signature", %"class.v8::internal::Signature"* %1, i64 0, i32 1
  %4 = load i64, i64* %3, align 8
  %5 = getelementptr inbounds %"class.v8::internal::Signature", %"class.v8::internal::Signature"* %1, i64 0, i32 0
  %6 = load i64, i64* %5, align 8
  %7 = tail call i64 @_ZN2v84base12hash_combineEmm(i64 %4, i64 %6) #12
  %8 = getelementptr inbounds %"class.v8::internal::Signature", %"class.v8::internal::Signature"* %1, i64 0, i32 2
  %9 = load %"class.v8::internal::wasm::ValueType"*, %"class.v8::internal::wasm::ValueType"** %8, align 8
  %10 = load i64, i64* %5, align 8
  %11 = getelementptr inbounds %"class.v8::internal::wasm::ValueType", %"class.v8::internal::wasm::ValueType"* %9, i64 %10
  %12 = load i64, i64* %3, align 8
  %13 = getelementptr inbounds %"class.v8::internal::wasm::ValueType", %"class.v8::internal::wasm::ValueType"* %11, i64 %12
  %14 = icmp eq %"class.v8::internal::wasm::ValueType"* %9, %13
  br i1 %14, label %27, label %15

15:                                               ; preds = %2, %15
  %16 = phi %"class.v8::internal::wasm::ValueType"* [ %25, %15 ], [ %9, %2 ]
  %17 = phi i64 [ %24, %15 ], [ %7, %2 ]
  %18 = getelementptr inbounds %"class.v8::internal::wasm::ValueType", %"class.v8::internal::wasm::ValueType"* %16, i64 0, i32 0
  %19 = load i32, i32* %18, align 4
  %20 = and i32 %19, 31
  %21 = zext i32 %20 to i64
  %22 = tail call i64 @_ZN2v84base12hash_combineEmm(i64 0, i64 %21) #12
  %23 = tail call i64 @_ZN2v84base10hash_valueEm(i64 %17) #12
  %24 = tail call i64 @_ZN2v84base12hash_combineEmm(i64 %22, i64 %23) #12
  %25 = getelementptr inbounds %"class.v8::internal::wasm::ValueType", %"class.v8::internal::wasm::ValueType"* %16, i64 1
  %26 = icmp eq %"class.v8::internal::wasm::ValueType"* %25, %13
  br i1 %26, label %27, label %15

27:                                               ; preds = %15, %2
  %28 = phi i64 [ %7, %2 ], [ %24, %15 ]
  %29 = getelementptr inbounds %"class.std::__1::__hash_table.137", %"class.std::__1::__hash_table.137"* %0, i64 0, i32 0, i32 0, i32 1, i32 0, i32 0, i32 0, i32 0
  %30 = load i64, i64* %29, align 8
  %31 = icmp eq i64 %30, 0
  br i1 %31, label %152, label %32

32:                                               ; preds = %27
  %33 = tail call i64 @llvm.ctpop.i64(i64 %30) #12, !range !296
  %34 = icmp ugt i64 %33, 1
  br i1 %34, label %38, label %35

35:                                               ; preds = %32
  %36 = add i64 %30, -1
  %37 = and i64 %36, %28
  br label %42

38:                                               ; preds = %32
  %39 = icmp ult i64 %28, %30
  br i1 %39, label %42, label %40

40:                                               ; preds = %38
  %41 = urem i64 %28, %30
  br label %42

42:                                               ; preds = %35, %38, %40
  %43 = phi i64 [ %37, %35 ], [ %41, %40 ], [ %28, %38 ]
  %44 = getelementptr inbounds %"class.std::__1::__hash_table.137", %"class.std::__1::__hash_table.137"* %0, i64 0, i32 0, i32 0, i32 0, i32 0
  %45 = load %"struct.std::__1::__hash_node_base.141"**, %"struct.std::__1::__hash_node_base.141"*** %44, align 8
  %46 = getelementptr inbounds %"struct.std::__1::__hash_node_base.141"*, %"struct.std::__1::__hash_node_base.141"** %45, i64 %43
  %47 = load %"struct.std::__1::__hash_node_base.141"*, %"struct.std::__1::__hash_node_base.141"** %46, align 8
  %48 = icmp eq %"struct.std::__1::__hash_node_base.141"* %47, null
  br i1 %48, label %152, label %49

49:                                               ; preds = %42
  %50 = getelementptr inbounds %"struct.std::__1::__hash_node_base.141", %"struct.std::__1::__hash_node_base.141"* %47, i64 0, i32 0
  %51 = load %"struct.std::__1::__hash_node_base.141"*, %"struct.std::__1::__hash_node_base.141"** %50, align 8
  %52 = icmp eq %"struct.std::__1::__hash_node_base.141"* %51, null
  br i1 %52, label %152, label %53

53:                                               ; preds = %49
  %54 = add i64 %30, -1
  %55 = load i64, i64* %3, align 8
  %56 = load i64, i64* %5, align 8
  %57 = load %"class.v8::internal::wasm::ValueType"*, %"class.v8::internal::wasm::ValueType"** %8, align 8
  br i1 %34, label %58, label %107

58:                                               ; preds = %53, %99
  %59 = phi %"struct.std::__1::__hash_node_base.141"* [ %101, %99 ], [ %51, %53 ]
  %60 = getelementptr inbounds %"struct.std::__1::__hash_node_base.141", %"struct.std::__1::__hash_node_base.141"* %59, i64 1
  %61 = bitcast %"struct.std::__1::__hash_node_base.141"* %60 to i64*
  %62 = load i64, i64* %61, align 8
  %63 = icmp eq i64 %62, %28
  br i1 %63, label %71, label %64

64:                                               ; preds = %58
  %65 = icmp ult i64 %62, %30
  br i1 %65, label %68, label %66

66:                                               ; preds = %64
  %67 = urem i64 %62, %30
  br label %68

68:                                               ; preds = %66, %64
  %69 = phi i64 [ %67, %66 ], [ %62, %64 ]
  %70 = icmp eq i64 %69, %43
  br i1 %70, label %99, label %152

71:                                               ; preds = %58
  %72 = getelementptr inbounds %"struct.std::__1::__hash_node_base.141", %"struct.std::__1::__hash_node_base.141"* %59, i64 2
  %73 = bitcast %"struct.std::__1::__hash_node_base.141"* %72 to %"class.v8::internal::Signature"*
  %74 = icmp eq %"class.v8::internal::Signature"* %73, %1
  br i1 %74, label %152, label %75

75:                                               ; preds = %71
  %76 = getelementptr inbounds %"struct.std::__1::__hash_node_base.141", %"struct.std::__1::__hash_node_base.141"* %59, i64 3
  %77 = bitcast %"struct.std::__1::__hash_node_base.141"* %76 to i64*
  %78 = load i64, i64* %77, align 8
  %79 = icmp eq i64 %78, %55
  br i1 %79, label %80, label %99

80:                                               ; preds = %75
  %81 = bitcast %"struct.std::__1::__hash_node_base.141"* %72 to i64*
  %82 = load i64, i64* %81, align 8
  %83 = icmp eq i64 %82, %56
  br i1 %83, label %84, label %99

84:                                               ; preds = %80
  %85 = getelementptr inbounds %"struct.std::__1::__hash_node_base.141", %"struct.std::__1::__hash_node_base.141"* %59, i64 4
  %86 = bitcast %"struct.std::__1::__hash_node_base.141"* %85 to %"class.v8::internal::wasm::ValueType"**
  %87 = load %"class.v8::internal::wasm::ValueType"*, %"class.v8::internal::wasm::ValueType"** %86, align 8
  %88 = getelementptr inbounds %"class.v8::internal::wasm::ValueType", %"class.v8::internal::wasm::ValueType"* %87, i64 %56
  %89 = getelementptr inbounds %"class.v8::internal::wasm::ValueType", %"class.v8::internal::wasm::ValueType"* %88, i64 %55
  %90 = icmp eq %"class.v8::internal::wasm::ValueType"* %87, %89
  br i1 %90, label %152, label %91

91:                                               ; preds = %84, %103
  %92 = phi %"class.v8::internal::wasm::ValueType"* [ %105, %103 ], [ %57, %84 ]
  %93 = phi %"class.v8::internal::wasm::ValueType"* [ %104, %103 ], [ %87, %84 ]
  %94 = getelementptr inbounds %"class.v8::internal::wasm::ValueType", %"class.v8::internal::wasm::ValueType"* %92, i64 0, i32 0
  %95 = load i32, i32* %94, align 4
  %96 = getelementptr inbounds %"class.v8::internal::wasm::ValueType", %"class.v8::internal::wasm::ValueType"* %93, i64 0, i32 0
  %97 = load i32, i32* %96, align 4
  %98 = icmp eq i32 %97, %95
  br i1 %98, label %103, label %99

99:                                               ; preds = %91, %80, %75, %68
  %100 = getelementptr inbounds %"struct.std::__1::__hash_node_base.141", %"struct.std::__1::__hash_node_base.141"* %59, i64 0, i32 0
  %101 = load %"struct.std::__1::__hash_node_base.141"*, %"struct.std::__1::__hash_node_base.141"** %100, align 8
  %102 = icmp eq %"struct.std::__1::__hash_node_base.141"* %101, null
  br i1 %102, label %152, label %58

103:                                              ; preds = %91
  %104 = getelementptr inbounds %"class.v8::internal::wasm::ValueType", %"class.v8::internal::wasm::ValueType"* %93, i64 1
  %105 = getelementptr inbounds %"class.v8::internal::wasm::ValueType", %"class.v8::internal::wasm::ValueType"* %92, i64 1
  %106 = icmp eq %"class.v8::internal::wasm::ValueType"* %104, %89
  br i1 %106, label %152, label %91

107:                                              ; preds = %53, %148
  %108 = phi %"struct.std::__1::__hash_node_base.141"* [ %150, %148 ], [ %51, %53 ]
  %109 = getelementptr inbounds %"struct.std::__1::__hash_node_base.141", %"struct.std::__1::__hash_node_base.141"* %108, i64 1
  %110 = bitcast %"struct.std::__1::__hash_node_base.141"* %109 to i64*
  %111 = load i64, i64* %110, align 8
  %112 = icmp eq i64 %111, %28
  br i1 %112, label %116, label %113

113:                                              ; preds = %107
  %114 = and i64 %111, %54
  %115 = icmp eq i64 %114, %43
  br i1 %115, label %148, label %152

116:                                              ; preds = %107
  %117 = getelementptr inbounds %"struct.std::__1::__hash_node_base.141", %"struct.std::__1::__hash_node_base.141"* %108, i64 2
  %118 = bitcast %"struct.std::__1::__hash_node_base.141"* %117 to %"class.v8::internal::Signature"*
  %119 = icmp eq %"class.v8::internal::Signature"* %118, %1
  br i1 %119, label %152, label %120

120:                                              ; preds = %116
  %121 = getelementptr inbounds %"struct.std::__1::__hash_node_base.141", %"struct.std::__1::__hash_node_base.141"* %108, i64 3
  %122 = bitcast %"struct.std::__1::__hash_node_base.141"* %121 to i64*
  %123 = load i64, i64* %122, align 8
  %124 = icmp eq i64 %123, %55
  br i1 %124, label %125, label %148

125:                                              ; preds = %120
  %126 = bitcast %"struct.std::__1::__hash_node_base.141"* %117 to i64*
  %127 = load i64, i64* %126, align 8
  %128 = icmp eq i64 %127, %56
  br i1 %128, label %129, label %148

129:                                              ; preds = %125
  %130 = getelementptr inbounds %"struct.std::__1::__hash_node_base.141", %"struct.std::__1::__hash_node_base.141"* %108, i64 4
  %131 = bitcast %"struct.std::__1::__hash_node_base.141"* %130 to %"class.v8::internal::wasm::ValueType"**
  %132 = load %"class.v8::internal::wasm::ValueType"*, %"class.v8::internal::wasm::ValueType"** %131, align 8
  %133 = getelementptr inbounds %"class.v8::internal::wasm::ValueType", %"class.v8::internal::wasm::ValueType"* %132, i64 %56
  %134 = getelementptr inbounds %"class.v8::internal::wasm::ValueType", %"class.v8::internal::wasm::ValueType"* %133, i64 %55
  %135 = icmp eq %"class.v8::internal::wasm::ValueType"* %132, %134
  br i1 %135, label %152, label %136

136:                                              ; preds = %129, %144
  %137 = phi %"class.v8::internal::wasm::ValueType"* [ %146, %144 ], [ %57, %129 ]
  %138 = phi %"class.v8::internal::wasm::ValueType"* [ %145, %144 ], [ %132, %129 ]
  %139 = getelementptr inbounds %"class.v8::internal::wasm::ValueType", %"class.v8::internal::wasm::ValueType"* %137, i64 0, i32 0
  %140 = load i32, i32* %139, align 4
  %141 = getelementptr inbounds %"class.v8::internal::wasm::ValueType", %"class.v8::internal::wasm::ValueType"* %138, i64 0, i32 0
  %142 = load i32, i32* %141, align 4
  %143 = icmp eq i32 %142, %140
  br i1 %143, label %144, label %148

144:                                              ; preds = %136
  %145 = getelementptr inbounds %"class.v8::internal::wasm::ValueType", %"class.v8::internal::wasm::ValueType"* %138, i64 1
  %146 = getelementptr inbounds %"class.v8::internal::wasm::ValueType", %"class.v8::internal::wasm::ValueType"* %137, i64 1
  %147 = icmp eq %"class.v8::internal::wasm::ValueType"* %145, %134
  br i1 %147, label %152, label %136

148:                                              ; preds = %136, %125, %120, %113
  %149 = getelementptr inbounds %"struct.std::__1::__hash_node_base.141", %"struct.std::__1::__hash_node_base.141"* %108, i64 0, i32 0
  %150 = load %"struct.std::__1::__hash_node_base.141"*, %"struct.std::__1::__hash_node_base.141"** %149, align 8
  %151 = icmp eq %"struct.std::__1::__hash_node_base.141"* %150, null
  br i1 %151, label %152, label %107

152:                                              ; preds = %116, %129, %148, %113, %144, %71, %84, %99, %68, %103, %49, %27, %42
  %153 = phi %"struct.std::__1::__hash_node_base.141"* [ null, %42 ], [ null, %27 ], [ null, %49 ], [ %59, %103 ], [ %59, %71 ], [ %59, %84 ], [ null, %99 ], [ null, %68 ], [ %108, %144 ], [ %108, %116 ], [ %108, %129 ], [ null, %148 ], [ null, %113 ]
  ret %"struct.std::__1::__hash_node_base.141"* %153
}

declare i64 @_ZN2v84base12hash_combineEmm(i64, i64) local_unnamed_addr #1

declare i64 @_ZN2v84base10hash_valueEm(i64) local_unnamed_addr #1

; Function Attrs: nounwind ssp uwtable
define linkonce_odr hidden { %"struct.std::__1::__hash_node_base.141"*, i8 } @_ZNSt3__112__hash_tableINS_17__hash_value_typeIN2v88internal9SignatureINS3_4wasm9ValueTypeEEEjEENS_22__unordered_map_hasherIS7_S8_NS2_4base4hashIS7_EENS_8equal_toIS7_EELb1EEENS_21__unordered_map_equalIS7_S8_SE_SC_Lb1EEENS3_13ZoneAllocatorIS8_EEE25__emplace_unique_key_argsIS7_JRKNS_21piecewise_construct_tENS_5tupleIJRKS7_EEENSP_IJEEEEEENS_4pairINS_15__hash_iteratorIPNS_11__hash_nodeIS8_PvEEEEbEERKT_DpOT0_(%"class.std::__1::__hash_table.137"*, %"class.v8::internal::Signature"* dereferenceable(24), %"struct.std::__1::piecewise_construct_t"* dereferenceable(1), %"class.std::__1::tuple"* dereferenceable(8), %"class.std::__1::tuple.247"* dereferenceable(1)) local_unnamed_addr #0 comdat align 2 {
  %6 = getelementptr inbounds %"class.v8::internal::Signature", %"class.v8::internal::Signature"* %1, i64 0, i32 1
  %7 = load i64, i64* %6, align 8
  %8 = getelementptr inbounds %"class.v8::internal::Signature", %"class.v8::internal::Signature"* %1, i64 0, i32 0
  %9 = load i64, i64* %8, align 8
  %10 = tail call i64 @_ZN2v84base12hash_combineEmm(i64 %7, i64 %9) #12
  %11 = getelementptr inbounds %"class.v8::internal::Signature", %"class.v8::internal::Signature"* %1, i64 0, i32 2
  %12 = load %"class.v8::internal::wasm::ValueType"*, %"class.v8::internal::wasm::ValueType"** %11, align 8
  %13 = load i64, i64* %8, align 8
  %14 = getelementptr inbounds %"class.v8::internal::wasm::ValueType", %"class.v8::internal::wasm::ValueType"* %12, i64 %13
  %15 = load i64, i64* %6, align 8
  %16 = getelementptr inbounds %"class.v8::internal::wasm::ValueType", %"class.v8::internal::wasm::ValueType"* %14, i64 %15
  %17 = icmp eq %"class.v8::internal::wasm::ValueType"* %12, %16
  br i1 %17, label %30, label %18

18:                                               ; preds = %5, %18
  %19 = phi %"class.v8::internal::wasm::ValueType"* [ %28, %18 ], [ %12, %5 ]
  %20 = phi i64 [ %27, %18 ], [ %10, %5 ]
  %21 = getelementptr inbounds %"class.v8::internal::wasm::ValueType", %"class.v8::internal::wasm::ValueType"* %19, i64 0, i32 0
  %22 = load i32, i32* %21, align 4
  %23 = and i32 %22, 31
  %24 = zext i32 %23 to i64
  %25 = tail call i64 @_ZN2v84base12hash_combineEmm(i64 0, i64 %24) #12
  %26 = tail call i64 @_ZN2v84base10hash_valueEm(i64 %20) #12
  %27 = tail call i64 @_ZN2v84base12hash_combineEmm(i64 %25, i64 %26) #12
  %28 = getelementptr inbounds %"class.v8::internal::wasm::ValueType", %"class.v8::internal::wasm::ValueType"* %19, i64 1
  %29 = icmp eq %"class.v8::internal::wasm::ValueType"* %28, %16
  br i1 %29, label %30, label %18

30:                                               ; preds = %18, %5
  %31 = phi i64 [ %10, %5 ], [ %27, %18 ]
  %32 = getelementptr inbounds %"class.std::__1::__hash_table.137", %"class.std::__1::__hash_table.137"* %0, i64 0, i32 0, i32 0, i32 1, i32 0, i32 0, i32 0, i32 0
  %33 = load i64, i64* %32, align 8
  %34 = icmp eq i64 %33, 0
  br i1 %34, label %155, label %35

35:                                               ; preds = %30
  %36 = tail call i64 @llvm.ctpop.i64(i64 %33) #12, !range !296
  %37 = icmp ugt i64 %36, 1
  br i1 %37, label %41, label %38

38:                                               ; preds = %35
  %39 = add i64 %33, -1
  %40 = and i64 %39, %31
  br label %45

41:                                               ; preds = %35
  %42 = icmp ult i64 %31, %33
  br i1 %42, label %45, label %43

43:                                               ; preds = %41
  %44 = urem i64 %31, %33
  br label %45

45:                                               ; preds = %38, %41, %43
  %46 = phi i64 [ %40, %38 ], [ %44, %43 ], [ %31, %41 ]
  %47 = getelementptr inbounds %"class.std::__1::__hash_table.137", %"class.std::__1::__hash_table.137"* %0, i64 0, i32 0, i32 0, i32 0, i32 0
  %48 = load %"struct.std::__1::__hash_node_base.141"**, %"struct.std::__1::__hash_node_base.141"*** %47, align 8
  %49 = getelementptr inbounds %"struct.std::__1::__hash_node_base.141"*, %"struct.std::__1::__hash_node_base.141"** %48, i64 %46
  %50 = load %"struct.std::__1::__hash_node_base.141"*, %"struct.std::__1::__hash_node_base.141"** %49, align 8
  %51 = icmp eq %"struct.std::__1::__hash_node_base.141"* %50, null
  br i1 %51, label %155, label %52

52:                                               ; preds = %45
  %53 = getelementptr inbounds %"struct.std::__1::__hash_node_base.141", %"struct.std::__1::__hash_node_base.141"* %50, i64 0, i32 0
  %54 = load %"struct.std::__1::__hash_node_base.141"*, %"struct.std::__1::__hash_node_base.141"** %53, align 8
  %55 = icmp eq %"struct.std::__1::__hash_node_base.141"* %54, null
  br i1 %55, label %155, label %56

56:                                               ; preds = %52
  %57 = add i64 %33, -1
  %58 = load i64, i64* %6, align 8
  %59 = load i64, i64* %8, align 8
  %60 = load %"class.v8::internal::wasm::ValueType"*, %"class.v8::internal::wasm::ValueType"** %11, align 8
  br i1 %37, label %61, label %110

61:                                               ; preds = %56, %102
  %62 = phi %"struct.std::__1::__hash_node_base.141"* [ %104, %102 ], [ %54, %56 ]
  %63 = getelementptr inbounds %"struct.std::__1::__hash_node_base.141", %"struct.std::__1::__hash_node_base.141"* %62, i64 1
  %64 = bitcast %"struct.std::__1::__hash_node_base.141"* %63 to i64*
  %65 = load i64, i64* %64, align 8
  %66 = icmp eq i64 %65, %31
  br i1 %66, label %74, label %67

67:                                               ; preds = %61
  %68 = icmp ult i64 %65, %33
  br i1 %68, label %71, label %69

69:                                               ; preds = %67
  %70 = urem i64 %65, %33
  br label %71

71:                                               ; preds = %69, %67
  %72 = phi i64 [ %70, %69 ], [ %65, %67 ]
  %73 = icmp eq i64 %72, %46
  br i1 %73, label %74, label %155

74:                                               ; preds = %71, %61
  %75 = getelementptr inbounds %"struct.std::__1::__hash_node_base.141", %"struct.std::__1::__hash_node_base.141"* %62, i64 2
  %76 = bitcast %"struct.std::__1::__hash_node_base.141"* %75 to %"class.v8::internal::Signature"*
  %77 = icmp eq %"class.v8::internal::Signature"* %76, %1
  br i1 %77, label %258, label %78

78:                                               ; preds = %74
  %79 = getelementptr inbounds %"struct.std::__1::__hash_node_base.141", %"struct.std::__1::__hash_node_base.141"* %62, i64 3
  %80 = bitcast %"struct.std::__1::__hash_node_base.141"* %79 to i64*
  %81 = load i64, i64* %80, align 8
  %82 = icmp eq i64 %81, %58
  br i1 %82, label %83, label %102

83:                                               ; preds = %78
  %84 = bitcast %"struct.std::__1::__hash_node_base.141"* %75 to i64*
  %85 = load i64, i64* %84, align 8
  %86 = icmp eq i64 %85, %59
  br i1 %86, label %87, label %102

87:                                               ; preds = %83
  %88 = getelementptr inbounds %"struct.std::__1::__hash_node_base.141", %"struct.std::__1::__hash_node_base.141"* %62, i64 4
  %89 = bitcast %"struct.std::__1::__hash_node_base.141"* %88 to %"class.v8::internal::wasm::ValueType"**
  %90 = load %"class.v8::internal::wasm::ValueType"*, %"class.v8::internal::wasm::ValueType"** %89, align 8
  %91 = getelementptr inbounds %"class.v8::internal::wasm::ValueType", %"class.v8::internal::wasm::ValueType"* %90, i64 %59
  %92 = getelementptr inbounds %"class.v8::internal::wasm::ValueType", %"class.v8::internal::wasm::ValueType"* %91, i64 %58
  %93 = icmp eq %"class.v8::internal::wasm::ValueType"* %90, %92
  br i1 %93, label %258, label %94

94:                                               ; preds = %87, %106
  %95 = phi %"class.v8::internal::wasm::ValueType"* [ %108, %106 ], [ %60, %87 ]
  %96 = phi %"class.v8::internal::wasm::ValueType"* [ %107, %106 ], [ %90, %87 ]
  %97 = getelementptr inbounds %"class.v8::internal::wasm::ValueType", %"class.v8::internal::wasm::ValueType"* %95, i64 0, i32 0
  %98 = load i32, i32* %97, align 4
  %99 = getelementptr inbounds %"class.v8::internal::wasm::ValueType", %"class.v8::internal::wasm::ValueType"* %96, i64 0, i32 0
  %100 = load i32, i32* %99, align 4
  %101 = icmp eq i32 %100, %98
  br i1 %101, label %106, label %102

102:                                              ; preds = %94, %83, %78
  %103 = getelementptr inbounds %"struct.std::__1::__hash_node_base.141", %"struct.std::__1::__hash_node_base.141"* %62, i64 0, i32 0
  %104 = load %"struct.std::__1::__hash_node_base.141"*, %"struct.std::__1::__hash_node_base.141"** %103, align 8
  %105 = icmp eq %"struct.std::__1::__hash_node_base.141"* %104, null
  br i1 %105, label %155, label %61

106:                                              ; preds = %94
  %107 = getelementptr inbounds %"class.v8::internal::wasm::ValueType", %"class.v8::internal::wasm::ValueType"* %96, i64 1
  %108 = getelementptr inbounds %"class.v8::internal::wasm::ValueType", %"class.v8::internal::wasm::ValueType"* %95, i64 1
  %109 = icmp eq %"class.v8::internal::wasm::ValueType"* %107, %92
  br i1 %109, label %258, label %94

110:                                              ; preds = %56, %151
  %111 = phi %"struct.std::__1::__hash_node_base.141"* [ %153, %151 ], [ %54, %56 ]
  %112 = getelementptr inbounds %"struct.std::__1::__hash_node_base.141", %"struct.std::__1::__hash_node_base.141"* %111, i64 1
  %113 = bitcast %"struct.std::__1::__hash_node_base.141"* %112 to i64*
  %114 = load i64, i64* %113, align 8
  %115 = icmp eq i64 %114, %31
  %116 = and i64 %114, %57
  %117 = icmp eq i64 %116, %46
  %118 = or i1 %115, %117
  br i1 %118, label %119, label %155

119:                                              ; preds = %110
  %120 = getelementptr inbounds %"struct.std::__1::__hash_node_base.141", %"struct.std::__1::__hash_node_base.141"* %111, i64 2
  %121 = bitcast %"struct.std::__1::__hash_node_base.141"* %120 to %"class.v8::internal::Signature"*
  %122 = icmp eq %"class.v8::internal::Signature"* %121, %1
  br i1 %122, label %258, label %123

123:                                              ; preds = %119
  %124 = getelementptr inbounds %"struct.std::__1::__hash_node_base.141", %"struct.std::__1::__hash_node_base.141"* %111, i64 3
  %125 = bitcast %"struct.std::__1::__hash_node_base.141"* %124 to i64*
  %126 = load i64, i64* %125, align 8
  %127 = icmp eq i64 %126, %58
  br i1 %127, label %128, label %151

128:                                              ; preds = %123
  %129 = bitcast %"struct.std::__1::__hash_node_base.141"* %120 to i64*
  %130 = load i64, i64* %129, align 8
  %131 = icmp eq i64 %130, %59
  br i1 %131, label %132, label %151

132:                                              ; preds = %128
  %133 = getelementptr inbounds %"struct.std::__1::__hash_node_base.141", %"struct.std::__1::__hash_node_base.141"* %111, i64 4
  %134 = bitcast %"struct.std::__1::__hash_node_base.141"* %133 to %"class.v8::internal::wasm::ValueType"**
  %135 = load %"class.v8::internal::wasm::ValueType"*, %"class.v8::internal::wasm::ValueType"** %134, align 8
  %136 = getelementptr inbounds %"class.v8::internal::wasm::ValueType", %"class.v8::internal::wasm::ValueType"* %135, i64 %59
  %137 = getelementptr inbounds %"class.v8::internal::wasm::ValueType", %"class.v8::internal::wasm::ValueType"* %136, i64 %58
  %138 = icmp eq %"class.v8::internal::wasm::ValueType"* %135, %137
  br i1 %138, label %258, label %139

139:                                              ; preds = %132, %147
  %140 = phi %"class.v8::internal::wasm::ValueType"* [ %149, %147 ], [ %60, %132 ]
  %141 = phi %"class.v8::internal::wasm::ValueType"* [ %148, %147 ], [ %135, %132 ]
  %142 = getelementptr inbounds %"class.v8::internal::wasm::ValueType", %"class.v8::internal::wasm::ValueType"* %140, i64 0, i32 0
  %143 = load i32, i32* %142, align 4
  %144 = getelementptr inbounds %"class.v8::internal::wasm::ValueType", %"class.v8::internal::wasm::ValueType"* %141, i64 0, i32 0
  %145 = load i32, i32* %144, align 4
  %146 = icmp eq i32 %145, %143
  br i1 %146, label %147, label %151

147:                                              ; preds = %139
  %148 = getelementptr inbounds %"class.v8::internal::wasm::ValueType", %"class.v8::internal::wasm::ValueType"* %141, i64 1
  %149 = getelementptr inbounds %"class.v8::internal::wasm::ValueType", %"class.v8::internal::wasm::ValueType"* %140, i64 1
  %150 = icmp eq %"class.v8::internal::wasm::ValueType"* %148, %137
  br i1 %150, label %258, label %139

151:                                              ; preds = %139, %123, %128
  %152 = getelementptr inbounds %"struct.std::__1::__hash_node_base.141", %"struct.std::__1::__hash_node_base.141"* %111, i64 0, i32 0
  %153 = load %"struct.std::__1::__hash_node_base.141"*, %"struct.std::__1::__hash_node_base.141"** %152, align 8
  %154 = icmp eq %"struct.std::__1::__hash_node_base.141"* %153, null
  br i1 %154, label %155, label %110

155:                                              ; preds = %110, %151, %71, %102, %52, %45, %30
  %156 = phi i64 [ %46, %45 ], [ undef, %30 ], [ %46, %52 ], [ %46, %102 ], [ %46, %71 ], [ %46, %151 ], [ %46, %110 ]
  %157 = getelementptr inbounds %"class.std::__1::__hash_table.137", %"class.std::__1::__hash_table.137"* %0, i64 0, i32 1, i32 1, i32 0, i32 0
  %158 = load %"class.v8::internal::Zone"*, %"class.v8::internal::Zone"** %157, align 8, !noalias !301
  %159 = getelementptr inbounds %"class.v8::internal::Zone", %"class.v8::internal::Zone"* %158, i64 0, i32 2
  %160 = load i64, i64* %159, align 8, !noalias !301
  %161 = getelementptr inbounds %"class.v8::internal::Zone", %"class.v8::internal::Zone"* %158, i64 0, i32 3
  %162 = load i64, i64* %161, align 8, !noalias !301
  %163 = sub i64 %162, %160
  %164 = icmp ult i64 %163, 48
  br i1 %164, label %165, label %167, !prof !2

165:                                              ; preds = %155
  %166 = tail call i64 @_ZN2v88internal4Zone9NewExpandEm(%"class.v8::internal::Zone"* %158, i64 48) #12, !noalias !301
  br label %169

167:                                              ; preds = %155
  %168 = add i64 %160, 48
  store i64 %168, i64* %159, align 8, !noalias !301
  br label %169

169:                                              ; preds = %165, %167
  %170 = phi i64 [ %166, %165 ], [ %160, %167 ]
  %171 = inttoptr i64 %170 to %"struct.std::__1::__hash_node"*
  %172 = getelementptr inbounds %"struct.std::__1::__hash_node", %"struct.std::__1::__hash_node"* %171, i64 0, i32 2, i32 0
  %173 = bitcast %"class.std::__1::tuple"* %3 to i8**
  %174 = load i8*, i8** %173, align 8, !noalias !301
  %175 = bitcast %"struct.std::__1::pair.215"* %172 to i8*
  tail call void @llvm.memcpy.p0i8.p0i8.i64(i8* align 8 %175, i8* align 8 %174, i64 24, i1 false) #12, !noalias !301
  %176 = getelementptr inbounds %"struct.std::__1::__hash_node", %"struct.std::__1::__hash_node"* %171, i64 0, i32 2, i32 0, i32 1
  store i32 0, i32* %176, align 8, !noalias !301
  %177 = getelementptr inbounds %"struct.std::__1::__hash_node", %"struct.std::__1::__hash_node"* %171, i64 0, i32 1
  store i64 %31, i64* %177, align 8, !noalias !301
  %178 = getelementptr inbounds %"struct.std::__1::__hash_node", %"struct.std::__1::__hash_node"* %171, i64 0, i32 0, i32 0
  store %"struct.std::__1::__hash_node_base.141"* null, %"struct.std::__1::__hash_node_base.141"** %178, align 8, !noalias !301
  %179 = getelementptr inbounds %"class.std::__1::__hash_table.137", %"class.std::__1::__hash_table.137"* %0, i64 0, i32 2, i32 0, i32 0
  %180 = load i64, i64* %179, align 8
  %181 = add i64 %180, 1
  %182 = uitofp i64 %181 to float
  %183 = uitofp i64 %33 to float
  %184 = getelementptr inbounds %"class.std::__1::__hash_table.137", %"class.std::__1::__hash_table.137"* %0, i64 0, i32 3, i32 0, i32 0
  %185 = load float, float* %184, align 4
  %186 = fmul float %185, %183
  %187 = fcmp olt float %186, %182
  %188 = or i1 %34, %187
  br i1 %188, label %189, label %212

189:                                              ; preds = %169
  %190 = shl i64 %33, 1
  %191 = icmp ult i64 %33, 3
  %192 = tail call i64 @llvm.ctpop.i64(i64 %33) #12, !range !296
  %193 = icmp ugt i64 %192, 1
  %194 = or i1 %191, %193
  %195 = zext i1 %194 to i64
  %196 = or i64 %190, %195
  %197 = fdiv float %182, %185
  %198 = tail call float @llvm.ceil.f32(float %197) #12
  %199 = fptoui float %198 to i64
  %200 = icmp ult i64 %196, %199
  %201 = select i1 %200, i64 %199, i64 %196
  tail call void @_ZNSt3__112__hash_tableINS_17__hash_value_typeIN2v88internal9SignatureINS3_4wasm9ValueTypeEEEjEENS_22__unordered_map_hasherIS7_S8_NS2_4base4hashIS7_EENS_8equal_toIS7_EELb1EEENS_21__unordered_map_equalIS7_S8_SE_SC_Lb1EEENS3_13ZoneAllocatorIS8_EEE6rehashEm(%"class.std::__1::__hash_table.137"* %0, i64 %201)
  %202 = load i64, i64* %32, align 8
  %203 = tail call i64 @llvm.ctpop.i64(i64 %202) #12, !range !296
  %204 = icmp ugt i64 %203, 1
  br i1 %204, label %208, label %205

205:                                              ; preds = %189
  %206 = add i64 %202, -1
  %207 = and i64 %206, %31
  br label %212

208:                                              ; preds = %189
  %209 = icmp ult i64 %31, %202
  br i1 %209, label %212, label %210

210:                                              ; preds = %208
  %211 = urem i64 %31, %202
  br label %212

212:                                              ; preds = %210, %208, %205, %169
  %213 = phi i64 [ %33, %169 ], [ %202, %205 ], [ %202, %208 ], [ %202, %210 ]
  %214 = phi i64 [ %156, %169 ], [ %207, %205 ], [ %31, %208 ], [ %211, %210 ]
  %215 = getelementptr inbounds %"class.std::__1::__hash_table.137", %"class.std::__1::__hash_table.137"* %0, i64 0, i32 0, i32 0, i32 0, i32 0
  %216 = load %"struct.std::__1::__hash_node_base.141"**, %"struct.std::__1::__hash_node_base.141"*** %215, align 8
  %217 = getelementptr inbounds %"struct.std::__1::__hash_node_base.141"*, %"struct.std::__1::__hash_node_base.141"** %216, i64 %214
  %218 = load %"struct.std::__1::__hash_node_base.141"*, %"struct.std::__1::__hash_node_base.141"** %217, align 8
  %219 = icmp eq %"struct.std::__1::__hash_node_base.141"* %218, null
  br i1 %219, label %220, label %248

220:                                              ; preds = %212
  %221 = getelementptr inbounds %"class.std::__1::__hash_table.137", %"class.std::__1::__hash_table.137"* %0, i64 0, i32 1, i32 0, i32 0
  %222 = getelementptr inbounds %"struct.std::__1::__hash_node_base.141", %"struct.std::__1::__hash_node_base.141"* %221, i64 0, i32 0
  %223 = bitcast %"struct.std::__1::__hash_node_base.141"* %221 to i64*
  %224 = load i64, i64* %223, align 8
  %225 = inttoptr i64 %170 to i64*
  store i64 %224, i64* %225, align 8
  %226 = getelementptr inbounds %"struct.std::__1::__hash_node", %"struct.std::__1::__hash_node"* %171, i64 0, i32 0
  store %"struct.std::__1::__hash_node_base.141"* %226, %"struct.std::__1::__hash_node_base.141"** %222, align 8
  %227 = load %"struct.std::__1::__hash_node_base.141"**, %"struct.std::__1::__hash_node_base.141"*** %215, align 8
  %228 = getelementptr inbounds %"struct.std::__1::__hash_node_base.141"*, %"struct.std::__1::__hash_node_base.141"** %227, i64 %214
  store %"struct.std::__1::__hash_node_base.141"* %221, %"struct.std::__1::__hash_node_base.141"** %228, align 8
  %229 = load %"struct.std::__1::__hash_node_base.141"*, %"struct.std::__1::__hash_node_base.141"** %178, align 8
  %230 = icmp eq %"struct.std::__1::__hash_node_base.141"* %229, null
  br i1 %230, label %254, label %231

231:                                              ; preds = %220
  %232 = getelementptr inbounds %"struct.std::__1::__hash_node_base.141", %"struct.std::__1::__hash_node_base.141"* %229, i64 1
  %233 = bitcast %"struct.std::__1::__hash_node_base.141"* %232 to i64*
  %234 = load i64, i64* %233, align 8
  %235 = tail call i64 @llvm.ctpop.i64(i64 %213) #12, !range !296
  %236 = icmp ugt i64 %235, 1
  br i1 %236, label %240, label %237

237:                                              ; preds = %231
  %238 = add i64 %213, -1
  %239 = and i64 %234, %238
  br label %244

240:                                              ; preds = %231
  %241 = icmp ult i64 %234, %213
  br i1 %241, label %244, label %242

242:                                              ; preds = %240
  %243 = urem i64 %234, %213
  br label %244

244:                                              ; preds = %237, %240, %242
  %245 = phi i64 [ %239, %237 ], [ %243, %242 ], [ %234, %240 ]
  %246 = load %"struct.std::__1::__hash_node_base.141"**, %"struct.std::__1::__hash_node_base.141"*** %215, align 8
  %247 = getelementptr inbounds %"struct.std::__1::__hash_node_base.141"*, %"struct.std::__1::__hash_node_base.141"** %246, i64 %245
  store %"struct.std::__1::__hash_node_base.141"* %226, %"struct.std::__1::__hash_node_base.141"** %247, align 8
  br label %254

248:                                              ; preds = %212
  %249 = getelementptr inbounds %"struct.std::__1::__hash_node_base.141", %"struct.std::__1::__hash_node_base.141"* %218, i64 0, i32 0
  %250 = bitcast %"struct.std::__1::__hash_node_base.141"* %218 to i64*
  %251 = load i64, i64* %250, align 8
  %252 = inttoptr i64 %170 to i64*
  store i64 %251, i64* %252, align 8
  %253 = getelementptr inbounds %"struct.std::__1::__hash_node", %"struct.std::__1::__hash_node"* %171, i64 0, i32 0
  store %"struct.std::__1::__hash_node_base.141"* %253, %"struct.std::__1::__hash_node_base.141"** %249, align 8
  br label %254

254:                                              ; preds = %220, %244, %248
  %255 = getelementptr inbounds %"struct.std::__1::__hash_node", %"struct.std::__1::__hash_node"* %171, i64 0, i32 0
  %256 = load i64, i64* %179, align 8
  %257 = add i64 %256, 1
  store i64 %257, i64* %179, align 8
  br label %258

258:                                              ; preds = %132, %119, %147, %87, %74, %106, %254
  %259 = phi i8 [ 1, %254 ], [ 0, %106 ], [ 0, %74 ], [ 0, %87 ], [ 0, %147 ], [ 0, %119 ], [ 0, %132 ]
  %260 = phi %"struct.std::__1::__hash_node_base.141"* [ %255, %254 ], [ %62, %106 ], [ %62, %74 ], [ %62, %87 ], [ %111, %147 ], [ %111, %119 ], [ %111, %132 ]
  %261 = insertvalue { %"struct.std::__1::__hash_node_base.141"*, i8 } undef, %"struct.std::__1::__hash_node_base.141"* %260, 0
  %262 = insertvalue { %"struct.std::__1::__hash_node_base.141"*, i8 } %261, i8 %259, 1
  ret { %"struct.std::__1::__hash_node_base.141"*, i8 } %262
}

; Function Attrs: nounwind readnone speculatable
declare i32 @llvm.ctpop.i32(i32) #11

; Function Attrs: nounwind readnone speculatable
declare i64 @llvm.ctpop.i64(i64) #11

; Function Attrs: argmemonly nounwind
declare void @llvm.memset.p0i8.i64(i8* nocapture writeonly, i8, i64, i1 immarg) #2

attributes #0 = { nounwind ssp uwtable "correctly-rounded-divide-sqrt-fp-math"="false" "disable-tail-calls"="false" "less-precise-fpmad"="false" "min-legal-vector-width"="0" "no-frame-pointer-elim"="false" "no-frame-pointer-elim-non-leaf" "no-infs-fp-math"="false" "no-jump-tables"="false" "no-nans-fp-math"="false" "no-signed-zeros-fp-math"="false" "no-trapping-math"="false" "null-pointer-is-valid"="true" "stack-protector-buffer-size"="4" "target-cpu"="x86-64" "target-features"="+cx8,+fxsr,+mmx,+sse,+sse2,+sse3,+x87" "unsafe-fp-math"="false" "use-soft-float"="false" }
attributes #1 = { "correctly-rounded-divide-sqrt-fp-math"="false" "disable-tail-calls"="false" "less-precise-fpmad"="false" "no-frame-pointer-elim"="false" "no-frame-pointer-elim-non-leaf" "no-infs-fp-math"="false" "no-nans-fp-math"="false" "no-signed-zeros-fp-math"="false" "no-trapping-math"="false" "null-pointer-is-valid"="true" "stack-protector-buffer-size"="4" "target-cpu"="x86-64" "target-features"="+cx8,+fxsr,+mmx,+sse,+sse2,+sse3,+x87" "unsafe-fp-math"="false" "use-soft-float"="false" }
attributes #2 = { argmemonly nounwind }
attributes #3 = { noreturn "correctly-rounded-divide-sqrt-fp-math"="false" "disable-tail-calls"="false" "less-precise-fpmad"="false" "no-frame-pointer-elim"="false" "no-frame-pointer-elim-non-leaf" "no-infs-fp-math"="false" "no-nans-fp-math"="false" "no-signed-zeros-fp-math"="false" "no-trapping-math"="false" "null-pointer-is-valid"="true" "stack-protector-buffer-size"="4" "target-cpu"="x86-64" "target-features"="+cx8,+fxsr,+mmx,+sse,+sse2,+sse3,+x87" "unsafe-fp-math"="false" "use-soft-float"="false" }
attributes #4 = { norecurse nounwind readonly ssp uwtable "correctly-rounded-divide-sqrt-fp-math"="false" "disable-tail-calls"="false" "less-precise-fpmad"="false" "min-legal-vector-width"="0" "no-frame-pointer-elim"="false" "no-frame-pointer-elim-non-leaf" "no-infs-fp-math"="false" "no-jump-tables"="false" "no-nans-fp-math"="false" "no-signed-zeros-fp-math"="false" "no-trapping-math"="false" "null-pointer-is-valid"="true" "stack-protector-buffer-size"="4" "target-cpu"="x86-64" "target-features"="+cx8,+fxsr,+mmx,+sse,+sse2,+sse3,+x87" "unsafe-fp-math"="false" "use-soft-float"="false" }
attributes #5 = { inlinehint nounwind ssp uwtable "correctly-rounded-divide-sqrt-fp-math"="false" "disable-tail-calls"="false" "less-precise-fpmad"="false" "min-legal-vector-width"="0" "no-frame-pointer-elim"="false" "no-frame-pointer-elim-non-leaf" "no-infs-fp-math"="false" "no-jump-tables"="false" "no-nans-fp-math"="false" "no-signed-zeros-fp-math"="false" "no-trapping-math"="false" "null-pointer-is-valid"="true" "stack-protector-buffer-size"="4" "target-cpu"="x86-64" "target-features"="+cx8,+fxsr,+mmx,+sse,+sse2,+sse3,+x87" "unsafe-fp-math"="false" "use-soft-float"="false" }
attributes #6 = { nofree norecurse nounwind ssp uwtable writeonly "correctly-rounded-divide-sqrt-fp-math"="false" "disable-tail-calls"="false" "less-precise-fpmad"="false" "min-legal-vector-width"="0" "no-frame-pointer-elim"="false" "no-frame-pointer-elim-non-leaf" "no-infs-fp-math"="false" "no-jump-tables"="false" "no-nans-fp-math"="false" "no-signed-zeros-fp-math"="false" "no-trapping-math"="false" "null-pointer-is-valid"="true" "stack-protector-buffer-size"="4" "target-cpu"="x86-64" "target-features"="+cx8,+fxsr,+mmx,+sse,+sse2,+sse3,+x87" "unsafe-fp-math"="false" "use-soft-float"="false" }
attributes #7 = { nofree norecurse nounwind ssp uwtable "correctly-rounded-divide-sqrt-fp-math"="false" "disable-tail-calls"="false" "less-precise-fpmad"="false" "min-legal-vector-width"="0" "no-frame-pointer-elim"="false" "no-frame-pointer-elim-non-leaf" "no-infs-fp-math"="false" "no-jump-tables"="false" "no-nans-fp-math"="false" "no-signed-zeros-fp-math"="false" "no-trapping-math"="false" "null-pointer-is-valid"="true" "stack-protector-buffer-size"="4" "target-cpu"="x86-64" "target-features"="+cx8,+fxsr,+mmx,+sse,+sse2,+sse3,+x87" "unsafe-fp-math"="false" "use-soft-float"="false" }
attributes #8 = { nounwind readonly ssp uwtable "correctly-rounded-divide-sqrt-fp-math"="false" "disable-tail-calls"="false" "less-precise-fpmad"="false" "min-legal-vector-width"="0" "no-frame-pointer-elim"="false" "no-frame-pointer-elim-non-leaf" "no-infs-fp-math"="false" "no-jump-tables"="false" "no-nans-fp-math"="false" "no-signed-zeros-fp-math"="false" "no-trapping-math"="false" "null-pointer-is-valid"="true" "stack-protector-buffer-size"="4" "target-cpu"="x86-64" "target-features"="+cx8,+fxsr,+mmx,+sse,+sse2,+sse3,+x87" "unsafe-fp-math"="false" "use-soft-float"="false" }
attributes #9 = { nobuiltin nounwind "correctly-rounded-divide-sqrt-fp-math"="false" "disable-tail-calls"="false" "less-precise-fpmad"="false" "no-frame-pointer-elim"="false" "no-frame-pointer-elim-non-leaf" "no-infs-fp-math"="false" "no-nans-fp-math"="false" "no-signed-zeros-fp-math"="false" "no-trapping-math"="false" "null-pointer-is-valid"="true" "stack-protector-buffer-size"="4" "target-cpu"="x86-64" "target-features"="+cx8,+fxsr,+mmx,+sse,+sse2,+sse3,+x87" "unsafe-fp-math"="false" "use-soft-float"="false" }
attributes #10 = { argmemonly nofree nounwind readonly "correctly-rounded-divide-sqrt-fp-math"="false" "disable-tail-calls"="false" "less-precise-fpmad"="false" "no-frame-pointer-elim"="false" "no-frame-pointer-elim-non-leaf" "no-infs-fp-math"="false" "no-nans-fp-math"="false" "no-signed-zeros-fp-math"="false" "no-trapping-math"="false" "null-pointer-is-valid"="true" "stack-protector-buffer-size"="4" "target-cpu"="x86-64" "target-features"="+cx8,+fxsr,+mmx,+sse,+sse2,+sse3,+x87" "unsafe-fp-math"="false" "use-soft-float"="false" }
attributes #11 = { nounwind readnone speculatable }
attributes #12 = { nounwind }
attributes #13 = { noreturn nounwind }
attributes #14 = { builtin nounwind }
attributes #15 = { nounwind readonly }

!llvm.module.flags = !{!0, !1}

!0 = !{i32 1, !"wchar_size", i32 4}
!1 = !{i32 7, !"PIC Level", i32 2}
!2 = !{!"branch_weights", i32 1, i32 2000}
!3 = !{!4}
!4 = distinct !{!4, !5}
!5 = distinct !{!5, !"LVerDomain"}
!6 = !{!7}
!7 = distinct !{!7, !5}
!8 = distinct !{!8, !9}
!9 = !{!"llvm.loop.isvectorized", i32 1}
!10 = distinct !{!10, !11}
!11 = !{!"llvm.loop.unroll.disable"}
!12 = distinct !{!12, !9}
!13 = !{!14}
!14 = distinct !{!14, !15}
!15 = distinct !{!15, !"LVerDomain"}
!16 = !{!17}
!17 = distinct !{!17, !15}
!18 = distinct !{!18, !9}
!19 = distinct !{!19, !11}
!20 = distinct !{!20, !9}
!21 = !{!22}
!22 = distinct !{!22, !23}
!23 = distinct !{!23, !"LVerDomain"}
!24 = !{!25}
!25 = distinct !{!25, !23}
!26 = distinct !{!26, !9}
!27 = distinct !{!27, !11}
!28 = distinct !{!28, !9}
!29 = !{!30}
!30 = distinct !{!30, !31}
!31 = distinct !{!31, !"LVerDomain"}
!32 = !{!33}
!33 = distinct !{!33, !31}
!34 = distinct !{!34, !9}
!35 = distinct !{!35, !11}
!36 = distinct !{!36, !9}
!37 = !{!38}
!38 = distinct !{!38, !39}
!39 = distinct !{!39, !"LVerDomain"}
!40 = !{!41}
!41 = distinct !{!41, !39}
!42 = distinct !{!42, !9}
!43 = distinct !{!43, !11}
!44 = distinct !{!44, !9}
!45 = !{!46}
!46 = distinct !{!46, !47}
!47 = distinct !{!47, !"LVerDomain"}
!48 = !{!49}
!49 = distinct !{!49, !47}
!50 = distinct !{!50, !9}
!51 = distinct !{!51, !11}
!52 = distinct !{!52, !9}
!53 = !{!54}
!54 = distinct !{!54, !55}
!55 = distinct !{!55, !"LVerDomain"}
!56 = !{!57}
!57 = distinct !{!57, !55}
!58 = distinct !{!58, !9}
!59 = distinct !{!59, !11}
!60 = distinct !{!60, !9}
!61 = !{!62}
!62 = distinct !{!62, !63}
!63 = distinct !{!63, !"LVerDomain"}
!64 = !{!65}
!65 = distinct !{!65, !63}
!66 = distinct !{!66, !9}
!67 = distinct !{!67, !11}
!68 = distinct !{!68, !9}
!69 = !{i8 0, i8 2}
!70 = !{!71}
!71 = distinct !{!71, !72, !"_ZNSt3__14listIN2v88internal4wasm11AsmJsParser12GlobalImportENS2_13ZoneAllocatorIS5_EEE15__allocate_nodeERNS6_INS_11__list_nodeIS5_PvEEEE: argument 0"}
!72 = distinct !{!72, !"_ZNSt3__14listIN2v88internal4wasm11AsmJsParser12GlobalImportENS2_13ZoneAllocatorIS5_EEE15__allocate_nodeERNS6_INS_11__list_nodeIS5_PvEEEE"}
!73 = !{!74}
!74 = distinct !{!74, !75}
!75 = distinct !{!75, !"LVerDomain"}
!76 = !{!77}
!77 = distinct !{!77, !75}
!78 = distinct !{!78, !9}
!79 = distinct !{!79, !11}
!80 = distinct !{!80, !9}
!81 = !{!82}
!82 = distinct !{!82, !83}
!83 = distinct !{!83, !"LVerDomain"}
!84 = !{!85}
!85 = distinct !{!85, !83}
!86 = distinct !{!86, !9}
!87 = distinct !{!87, !11}
!88 = distinct !{!88, !9}
!89 = !{!90}
!90 = distinct !{!90, !91}
!91 = distinct !{!91, !"LVerDomain"}
!92 = !{!93}
!93 = distinct !{!93, !91}
!94 = distinct !{!94, !9}
!95 = distinct !{!95, !11}
!96 = distinct !{!96, !9}
!97 = !{!98}
!98 = distinct !{!98, !99, !"_ZNSt3__14listIN2v88internal4wasm11AsmJsParser12GlobalImportENS2_13ZoneAllocatorIS5_EEE15__allocate_nodeERNS6_INS_11__list_nodeIS5_PvEEEE: argument 0"}
!99 = distinct !{!99, !"_ZNSt3__14listIN2v88internal4wasm11AsmJsParser12GlobalImportENS2_13ZoneAllocatorIS5_EEE15__allocate_nodeERNS6_INS_11__list_nodeIS5_PvEEEE"}
!100 = !{!101}
!101 = distinct !{!101, !102, !"_ZNSt3__14listIN2v88internal4wasm11AsmJsParser12GlobalImportENS2_13ZoneAllocatorIS5_EEE15__allocate_nodeERNS6_INS_11__list_nodeIS5_PvEEEE: argument 0"}
!102 = distinct !{!102, !"_ZNSt3__14listIN2v88internal4wasm11AsmJsParser12GlobalImportENS2_13ZoneAllocatorIS5_EEE15__allocate_nodeERNS6_INS_11__list_nodeIS5_PvEEEE"}
!103 = !{!104}
!104 = distinct !{!104, !105}
!105 = distinct !{!105, !"LVerDomain"}
!106 = !{!107}
!107 = distinct !{!107, !105}
!108 = distinct !{!108, !9}
!109 = distinct !{!109, !11}
!110 = distinct !{!110, !9}
!111 = !{!112}
!112 = distinct !{!112, !113}
!113 = distinct !{!113, !"LVerDomain"}
!114 = !{!115}
!115 = distinct !{!115, !113}
!116 = distinct !{!116, !9}
!117 = distinct !{!117, !11}
!118 = distinct !{!118, !9}
!119 = !{!120}
!120 = distinct !{!120, !121}
!121 = distinct !{!121, !"LVerDomain"}
!122 = !{!123}
!123 = distinct !{!123, !121}
!124 = distinct !{!124, !9}
!125 = distinct !{!125, !11}
!126 = distinct !{!126, !9}
!127 = !{!128}
!128 = distinct !{!128, !129}
!129 = distinct !{!129, !"LVerDomain"}
!130 = !{!131}
!131 = distinct !{!131, !129}
!132 = distinct !{!132, !9}
!133 = distinct !{!133, !11}
!134 = distinct !{!134, !9}
!135 = !{!136}
!136 = distinct !{!136, !137}
!137 = distinct !{!137, !"LVerDomain"}
!138 = !{!139}
!139 = distinct !{!139, !137}
!140 = distinct !{!140, !9}
!141 = distinct !{!141, !11}
!142 = distinct !{!142, !9}
!143 = !{!144}
!144 = distinct !{!144, !145}
!145 = distinct !{!145, !"LVerDomain"}
!146 = !{!147}
!147 = distinct !{!147, !145}
!148 = distinct !{!148, !9}
!149 = distinct !{!149, !11}
!150 = distinct !{!150, !9}
!151 = !{!152}
!152 = distinct !{!152, !153}
!153 = distinct !{!153, !"LVerDomain"}
!154 = !{!155}
!155 = distinct !{!155, !153}
!156 = distinct !{!156, !9}
!157 = distinct !{!157, !11}
!158 = distinct !{!158, !9}
!159 = !{!160}
!160 = distinct !{!160, !161}
!161 = distinct !{!161, !"LVerDomain"}
!162 = !{!163}
!163 = distinct !{!163, !161}
!164 = distinct !{!164, !9}
!165 = distinct !{!165, !11}
!166 = distinct !{!166, !9}
!167 = !{!168}
!168 = distinct !{!168, !169}
!169 = distinct !{!169, !"LVerDomain"}
!170 = !{!171}
!171 = distinct !{!171, !169}
!172 = distinct !{!172, !9}
!173 = distinct !{!173, !11}
!174 = distinct !{!174, !9}
!175 = !{!176}
!176 = distinct !{!176, !177}
!177 = distinct !{!177, !"LVerDomain"}
!178 = !{!179}
!179 = distinct !{!179, !177}
!180 = distinct !{!180, !9}
!181 = distinct !{!181, !11}
!182 = distinct !{!182, !9}
!183 = !{!184}
!184 = distinct !{!184, !185}
!185 = distinct !{!185, !"LVerDomain"}
!186 = !{!187}
!187 = distinct !{!187, !185}
!188 = distinct !{!188, !9}
!189 = distinct !{!189, !11}
!190 = distinct !{!190, !9}
!191 = !{!192}
!192 = distinct !{!192, !193}
!193 = distinct !{!193, !"LVerDomain"}
!194 = !{!195}
!195 = distinct !{!195, !193}
!196 = distinct !{!196, !9}
!197 = distinct !{!197, !11}
!198 = distinct !{!198, !9}
!199 = !{!200}
!200 = distinct !{!200, !201}
!201 = distinct !{!201, !"LVerDomain"}
!202 = !{!203}
!203 = distinct !{!203, !201}
!204 = distinct !{!204, !9}
!205 = distinct !{!205, !11}
!206 = distinct !{!206, !9}
!207 = !{!208}
!208 = distinct !{!208, !209}
!209 = distinct !{!209, !"LVerDomain"}
!210 = !{!211}
!211 = distinct !{!211, !209}
!212 = distinct !{!212, !9}
!213 = distinct !{!213, !11}
!214 = distinct !{!214, !9}
!215 = !{!216}
!216 = distinct !{!216, !217}
!217 = distinct !{!217, !"LVerDomain"}
!218 = !{!219}
!219 = distinct !{!219, !217}
!220 = distinct !{!220, !9}
!221 = distinct !{!221, !11}
!222 = distinct !{!222, !9}
!223 = !{!224}
!224 = distinct !{!224, !225}
!225 = distinct !{!225, !"LVerDomain"}
!226 = !{!227}
!227 = distinct !{!227, !225}
!228 = distinct !{!228, !9}
!229 = distinct !{!229, !11}
!230 = distinct !{!230, !9}
!231 = !{!232}
!232 = distinct !{!232, !233}
!233 = distinct !{!233, !"LVerDomain"}
!234 = !{!235}
!235 = distinct !{!235, !233}
!236 = distinct !{!236, !9}
!237 = distinct !{!237, !11}
!238 = distinct !{!238, !9}
!239 = !{!240}
!240 = distinct !{!240, !241}
!241 = distinct !{!241, !"LVerDomain"}
!242 = !{!243}
!243 = distinct !{!243, !241}
!244 = distinct !{!244, !9}
!245 = distinct !{!245, !11}
!246 = distinct !{!246, !9}
!247 = !{i32 0, i32 33}
!248 = !{!249}
!249 = distinct !{!249, !250}
!250 = distinct !{!250, !"LVerDomain"}
!251 = !{!252}
!252 = distinct !{!252, !250}
!253 = distinct !{!253, !9}
!254 = distinct !{!254, !11}
!255 = distinct !{!255, !9}
!256 = !{!257}
!257 = distinct !{!257, !258}
!258 = distinct !{!258, !"LVerDomain"}
!259 = !{!260}
!260 = distinct !{!260, !258}
!261 = distinct !{!261, !9}
!262 = distinct !{!262, !11}
!263 = distinct !{!263, !9}
!264 = !{!265}
!265 = distinct !{!265, !266}
!266 = distinct !{!266, !"LVerDomain"}
!267 = !{!268}
!268 = distinct !{!268, !266}
!269 = distinct !{!269, !9}
!270 = distinct !{!270, !11}
!271 = distinct !{!271, !9}
!272 = !{!273}
!273 = distinct !{!273, !274}
!274 = distinct !{!274, !"LVerDomain"}
!275 = !{!276}
!276 = distinct !{!276, !274}
!277 = distinct !{!277, !9}
!278 = distinct !{!278, !11}
!279 = distinct !{!279, !9}
!280 = !{!281}
!281 = distinct !{!281, !282}
!282 = distinct !{!282, !"LVerDomain"}
!283 = !{!284}
!284 = distinct !{!284, !282}
!285 = distinct !{!285, !9}
!286 = distinct !{!286, !11}
!287 = distinct !{!287, !9}
!288 = !{!289}
!289 = distinct !{!289, !290}
!290 = distinct !{!290, !"LVerDomain"}
!291 = !{!292}
!292 = distinct !{!292, !290}
!293 = distinct !{!293, !9}
!294 = distinct !{!294, !11}
!295 = distinct !{!295, !9}
!296 = !{i64 0, i64 65}
!297 = distinct !{!297, !11}
!298 = distinct !{!298, !11}
!299 = distinct !{!299, !11}
!300 = distinct !{!300, !11}
!301 = !{!302}
!302 = distinct !{!302, !303, !"_ZNSt3__112__hash_tableINS_17__hash_value_typeIN2v88internal9SignatureINS3_4wasm9ValueTypeEEEjEENS_22__unordered_map_hasherIS7_S8_NS2_4base4hashIS7_EENS_8equal_toIS7_EELb1EEENS_21__unordered_map_equalIS7_S8_SE_SC_Lb1EEENS3_13ZoneAllocatorIS8_EEE21__construct_node_hashIRKNS_21piecewise_construct_tEJNS_5tupleIJRKS7_EEENSP_IJEEEEEENS_10unique_ptrINS_11__hash_nodeIS8_PvEENS_22__hash_node_destructorINSI_ISX_EEEEEEmOT_DpOT0_: argument 0"}
!303 = distinct !{!303, !"_ZNSt3__112__hash_tableINS_17__hash_value_typeIN2v88internal9SignatureINS3_4wasm9ValueTypeEEEjEENS_22__unordered_map_hasherIS7_S8_NS2_4base4hashIS7_EENS_8equal_toIS7_EELb1EEENS_21__unordered_map_equalIS7_S8_SE_SC_Lb1EEENS3_13ZoneAllocatorIS8_EEE21__construct_node_hashIRKNS_21piecewise_construct_tEJNS_5tupleIJRKS7_EEENSP_IJEEEEEENS_10unique_ptrINS_11__hash_nodeIS8_PvEENS_22__hash_node_destructorINSI_ISX_EEEEEEmOT_DpOT0_"}
