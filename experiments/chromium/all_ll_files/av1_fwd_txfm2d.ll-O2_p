; ModuleID = '../../third_party/libaom/source/libaom/av1/encoder/av1_fwd_txfm2d.c'
source_filename = "../../third_party/libaom/source/libaom/av1/encoder/av1_fwd_txfm2d.c"
target datalayout = "e-m:e-i64:64-f80:128-n8:16:32:64-S128"
target triple = "x86_64-unknown-linux-gnu"

module asm ".symver exp, exp@GLIBC_2.2.5"
module asm ".symver exp2, exp2@GLIBC_2.2.5"
module asm ".symver exp2f, exp2f@GLIBC_2.2.5"
module asm ".symver expf, expf@GLIBC_2.2.5"
module asm ".symver lgamma, lgamma@GLIBC_2.2.5"
module asm ".symver lgammaf, lgammaf@GLIBC_2.2.5"
module asm ".symver lgammal, lgammal@GLIBC_2.2.5"
module asm ".symver log, log@GLIBC_2.2.5"
module asm ".symver log2, log2@GLIBC_2.2.5"
module asm ".symver log2f, log2f@GLIBC_2.2.5"
module asm ".symver logf, logf@GLIBC_2.2.5"
module asm ".symver pow, pow@GLIBC_2.2.5"
module asm ".symver powf, powf@GLIBC_2.2.5"

%struct.TXFM_2D_FLIP_CFG = type { i8, i32, i32, i8*, i8, i8, [12 x i8], [12 x i8], i8, i8, i32, i32 }

@fwd_shift_4x4 = internal constant [3 x i8] c"\02\00\00", align 1
@fwd_shift_8x8 = internal constant [3 x i8] c"\02\FF\00", align 1
@fwd_shift_16x16 = internal constant [3 x i8] c"\02\FE\00", align 1
@fwd_shift_32x32 = internal constant [3 x i8] c"\02\FC\00", align 1
@fwd_shift_64x64 = internal constant [3 x i8] c"\00\FE\FE", align 1
@fwd_shift_4x8 = internal constant [3 x i8] c"\02\FF\00", align 1
@fwd_shift_8x4 = internal constant [3 x i8] c"\02\FF\00", align 1
@fwd_shift_8x16 = internal constant [3 x i8] c"\02\FE\00", align 1
@fwd_shift_16x8 = internal constant [3 x i8] c"\02\FE\00", align 1
@fwd_shift_16x32 = internal constant [3 x i8] c"\02\FC\00", align 1
@fwd_shift_32x16 = internal constant [3 x i8] c"\02\FC\00", align 1
@fwd_shift_32x64 = internal constant [3 x i8] c"\00\FE\FE", align 1
@fwd_shift_64x32 = internal constant [3 x i8] c"\02\FC\FE", align 1
@fwd_shift_4x16 = internal constant [3 x i8] c"\02\FF\00", align 1
@fwd_shift_16x4 = internal constant [3 x i8] c"\02\FF\00", align 1
@fwd_shift_8x32 = internal constant [3 x i8] c"\02\FE\00", align 1
@fwd_shift_32x8 = internal constant [3 x i8] c"\02\FE\00", align 1
@fwd_shift_16x64 = internal constant [3 x i8] c"\00\FE\00", align 1
@fwd_shift_64x16 = internal constant [3 x i8] c"\02\FC\00", align 1
@av1_fwd_txfm_shift_ls = hidden local_unnamed_addr global [19 x i8*] [i8* getelementptr inbounds ([3 x i8], [3 x i8]* @fwd_shift_4x4, i32 0, i32 0), i8* getelementptr inbounds ([3 x i8], [3 x i8]* @fwd_shift_8x8, i32 0, i32 0), i8* getelementptr inbounds ([3 x i8], [3 x i8]* @fwd_shift_16x16, i32 0, i32 0), i8* getelementptr inbounds ([3 x i8], [3 x i8]* @fwd_shift_32x32, i32 0, i32 0), i8* getelementptr inbounds ([3 x i8], [3 x i8]* @fwd_shift_64x64, i32 0, i32 0), i8* getelementptr inbounds ([3 x i8], [3 x i8]* @fwd_shift_4x8, i32 0, i32 0), i8* getelementptr inbounds ([3 x i8], [3 x i8]* @fwd_shift_8x4, i32 0, i32 0), i8* getelementptr inbounds ([3 x i8], [3 x i8]* @fwd_shift_8x16, i32 0, i32 0), i8* getelementptr inbounds ([3 x i8], [3 x i8]* @fwd_shift_16x8, i32 0, i32 0), i8* getelementptr inbounds ([3 x i8], [3 x i8]* @fwd_shift_16x32, i32 0, i32 0), i8* getelementptr inbounds ([3 x i8], [3 x i8]* @fwd_shift_32x16, i32 0, i32 0), i8* getelementptr inbounds ([3 x i8], [3 x i8]* @fwd_shift_32x64, i32 0, i32 0), i8* getelementptr inbounds ([3 x i8], [3 x i8]* @fwd_shift_64x32, i32 0, i32 0), i8* getelementptr inbounds ([3 x i8], [3 x i8]* @fwd_shift_4x16, i32 0, i32 0), i8* getelementptr inbounds ([3 x i8], [3 x i8]* @fwd_shift_16x4, i32 0, i32 0), i8* getelementptr inbounds ([3 x i8], [3 x i8]* @fwd_shift_8x32, i32 0, i32 0), i8* getelementptr inbounds ([3 x i8], [3 x i8]* @fwd_shift_32x8, i32 0, i32 0), i8* getelementptr inbounds ([3 x i8], [3 x i8]* @fwd_shift_16x64, i32 0, i32 0), i8* getelementptr inbounds ([3 x i8], [3 x i8]* @fwd_shift_64x16, i32 0, i32 0)], align 16
@av1_fwd_cos_bit_col = hidden local_unnamed_addr constant [5 x [5 x i8]] [[5 x i8] c"\0D\0D\0D\00\00", [5 x i8] c"\0D\0D\0D\0C\00", [5 x i8] c"\0D\0D\0D\0C\0D", [5 x i8] c"\00\0D\0D\0C\0D", [5 x i8] c"\00\00\0D\0C\0D"], align 16
@av1_fwd_cos_bit_row = hidden local_unnamed_addr constant [5 x [5 x i8]] [[5 x i8] c"\0D\0D\0C\00\00", [5 x i8] c"\0D\0D\0D\0C\00", [5 x i8] c"\0D\0D\0C\0D\0C", [5 x i8] c"\00\0C\0D\0C\0B", [5 x i8] c"\00\00\0C\0B\0A"], align 16
@vtx_tab = internal unnamed_addr constant [16 x i8] c"\00\01\00\01\02\00\02\01\02\03\00\03\01\03\02\03", align 16
@htx_tab = internal unnamed_addr constant [16 x i8] c"\00\00\01\01\00\02\02\02\01\03\03\00\03\01\03\02", align 16
@av1_txfm_type_ls = external local_unnamed_addr constant [5 x [4 x i8]], align 16
@av1_txfm_stage_num_list = external local_unnamed_addr constant [12 x i8], align 1
@tx_size_wide = internal unnamed_addr constant [19 x i32] [i32 4, i32 8, i32 16, i32 32, i32 64, i32 4, i32 8, i32 8, i32 16, i32 16, i32 32, i32 32, i32 64, i32 4, i32 16, i32 8, i32 32, i32 16, i32 64], align 16
@tx_size_high = internal unnamed_addr constant [19 x i32] [i32 4, i32 8, i32 16, i32 32, i32 64, i32 8, i32 4, i32 16, i32 8, i32 32, i32 16, i32 64, i32 32, i32 16, i32 4, i32 32, i32 8, i32 64, i32 16], align 16
@av1_round_shift_array = external local_unnamed_addr global void (i32*, i32, i32)*, align 8
@tx_size_wide_log2 = internal unnamed_addr constant [19 x i32] [i32 2, i32 3, i32 4, i32 5, i32 6, i32 2, i32 3, i32 3, i32 4, i32 4, i32 5, i32 5, i32 6, i32 2, i32 4, i32 3, i32 5, i32 4, i32 6], align 16
@tx_size_high_log2 = internal unnamed_addr constant [19 x i32] [i32 2, i32 3, i32 4, i32 5, i32 6, i32 3, i32 2, i32 4, i32 3, i32 5, i32 4, i32 6, i32 5, i32 4, i32 2, i32 5, i32 3, i32 6, i32 4], align 16
@fwd_txfm_range_mult2_list = internal unnamed_addr constant [12 x i8*] [i8* getelementptr inbounds ([4 x i8], [4 x i8]* @fdct4_range_mult2, i32 0, i32 0), i8* getelementptr inbounds ([6 x i8], [6 x i8]* @fdct8_range_mult2, i32 0, i32 0), i8* getelementptr inbounds ([8 x i8], [8 x i8]* @fdct16_range_mult2, i32 0, i32 0), i8* getelementptr inbounds ([10 x i8], [10 x i8]* @fdct32_range_mult2, i32 0, i32 0), i8* getelementptr inbounds ([12 x i8], [12 x i8]* @fdct64_range_mult2, i32 0, i32 0), i8* getelementptr inbounds ([7 x i8], [7 x i8]* @fadst4_range_mult2, i32 0, i32 0), i8* getelementptr inbounds ([8 x i8], [8 x i8]* @fadst8_range_mult2, i32 0, i32 0), i8* getelementptr inbounds ([10 x i8], [10 x i8]* @fadst16_range_mult2, i32 0, i32 0), i8* getelementptr inbounds ([1 x i8], [1 x i8]* @fidtx4_range_mult2, i32 0, i32 0), i8* getelementptr inbounds ([1 x i8], [1 x i8]* @fidtx8_range_mult2, i32 0, i32 0), i8* getelementptr inbounds ([1 x i8], [1 x i8]* @fidtx16_range_mult2, i32 0, i32 0), i8* getelementptr inbounds ([1 x i8], [1 x i8]* @fidtx32_range_mult2, i32 0, i32 0)], align 16
@fdct4_range_mult2 = internal constant [4 x i8] c"\00\02\03\03", align 1
@fdct8_range_mult2 = internal constant [6 x i8] c"\00\02\04\05\05\05", align 1
@fdct16_range_mult2 = internal constant [8 x i8] c"\00\02\04\06\07\07\07\07", align 1
@fdct32_range_mult2 = internal constant [10 x i8] c"\00\02\04\06\08\09\09\09\09\09", align 1
@fdct64_range_mult2 = internal constant [12 x i8] c"\00\02\04\06\08\0A\0B\0B\0B\0B\0B\0B", align 1
@fadst4_range_mult2 = internal constant [7 x i8] c"\00\02\04\03\03\03\03", align 1
@fadst8_range_mult2 = internal constant [8 x i8] c"\00\00\01\03\03\05\05\05", align 1
@fadst16_range_mult2 = internal constant [10 x i8] c"\00\00\01\03\03\05\05\07\07\07", align 1
@fidtx4_range_mult2 = internal constant [1 x i8] c"\01", align 1
@fidtx8_range_mult2 = internal constant [1 x i8] c"\02", align 1
@fidtx16_range_mult2 = internal constant [1 x i8] c"\03", align 1
@fidtx32_range_mult2 = internal constant [1 x i8] c"\04", align 1
@switch.table.av1_get_fwd_txfm_cfg = private unnamed_addr constant [16 x i32] [i32 0, i32 0, i32 0, i32 0, i32 1, i32 0, i32 1, i32 0, i32 1, i32 0, i32 0, i32 0, i32 0, i32 0, i32 1, i32 0], align 4
@switch.table.av1_get_fwd_txfm_cfg.1 = private unnamed_addr constant [16 x i32] [i32 0, i32 0, i32 0, i32 0, i32 0, i32 1, i32 1, i32 1, i32 0, i32 0, i32 0, i32 0, i32 0, i32 0, i32 0, i32 1], align 4
@switch.table.fwd_txfm2d_c.2 = private unnamed_addr constant [12 x void (i32*, i32*, i8, i8*)*] [void (i32*, i32*, i8, i8*)* @av1_fdct4, void (i32*, i32*, i8, i8*)* @av1_fdct8, void (i32*, i32*, i8, i8*)* @av1_fdct16, void (i32*, i32*, i8, i8*)* @av1_fdct32, void (i32*, i32*, i8, i8*)* @av1_fdct64, void (i32*, i32*, i8, i8*)* @av1_fadst4, void (i32*, i32*, i8, i8*)* @av1_fadst8, void (i32*, i32*, i8, i8*)* @av1_fadst16, void (i32*, i32*, i8, i8*)* @av1_fidentity4_c, void (i32*, i32*, i8, i8*)* @av1_fidentity8_c, void (i32*, i32*, i8, i8*)* @av1_fidentity16_c, void (i32*, i32*, i8, i8*)* @av1_fidentity32_c], align 8

; Function Attrs: nofree norecurse nounwind ssp uwtable
define hidden void @av1_gen_fwd_stage_range(i8* nocapture, i8* nocapture, %struct.TXFM_2D_FLIP_CFG* nocapture readonly, i32) local_unnamed_addr #0 {
  %5 = getelementptr inbounds %struct.TXFM_2D_FLIP_CFG, %struct.TXFM_2D_FLIP_CFG* %2, i64 0, i32 3
  %6 = load i8*, i8** %5, align 8
  %7 = getelementptr inbounds %struct.TXFM_2D_FLIP_CFG, %struct.TXFM_2D_FLIP_CFG* %2, i64 0, i32 10
  %8 = load i32, i32* %7, align 4
  %9 = icmp sgt i32 %8, 0
  br i1 %9, label %10, label %12

10:                                               ; preds = %4
  %11 = trunc i32 %3 to i8
  br label %19

12:                                               ; preds = %19, %4
  %13 = getelementptr inbounds %struct.TXFM_2D_FLIP_CFG, %struct.TXFM_2D_FLIP_CFG* %2, i64 0, i32 11
  %14 = load i32, i32* %13, align 8
  %15 = icmp sgt i32 %14, 0
  br i1 %15, label %16, label %34

16:                                               ; preds = %12
  %17 = getelementptr inbounds i8, i8* %6, i64 1
  %18 = trunc i32 %3 to i8
  br label %35

19:                                               ; preds = %10, %19
  %20 = phi i64 [ 0, %10 ], [ %28, %19 ]
  %21 = getelementptr inbounds %struct.TXFM_2D_FLIP_CFG, %struct.TXFM_2D_FLIP_CFG* %2, i64 0, i32 6, i64 %20
  %22 = load i8, i8* %21, align 1
  %23 = load i8, i8* %6, align 1
  %24 = add i8 %22, %11
  %25 = add i8 %23, %24
  %26 = add i8 %25, 1
  %27 = getelementptr inbounds i8, i8* %0, i64 %20
  store i8 %26, i8* %27, align 1
  %28 = add nuw nsw i64 %20, 1
  %29 = load i32, i32* %7, align 4
  %30 = sext i32 %29 to i64
  %31 = icmp slt i64 %28, %30
  %32 = icmp ult i64 %28, 12
  %33 = and i1 %32, %31
  br i1 %33, label %19, label %12

34:                                               ; preds = %35, %12
  ret void

35:                                               ; preds = %16, %35
  %36 = phi i64 [ 0, %16 ], [ %46, %35 ]
  %37 = getelementptr inbounds %struct.TXFM_2D_FLIP_CFG, %struct.TXFM_2D_FLIP_CFG* %2, i64 0, i32 7, i64 %36
  %38 = load i8, i8* %37, align 1
  %39 = load i8, i8* %6, align 1
  %40 = load i8, i8* %17, align 1
  %41 = add i8 %38, %18
  %42 = add i8 %39, %41
  %43 = add i8 %40, %42
  %44 = add i8 %43, 1
  %45 = getelementptr inbounds i8, i8* %1, i64 %36
  store i8 %44, i8* %45, align 1
  %46 = add nuw nsw i64 %36, 1
  %47 = load i32, i32* %13, align 8
  %48 = sext i32 %47 to i64
  %49 = icmp slt i64 %46, %48
  %50 = icmp ult i64 %46, 12
  %51 = and i1 %50, %49
  br i1 %51, label %35, label %34
}

; Function Attrs: argmemonly nounwind
declare void @llvm.lifetime.start.p0i8(i64 immarg, i8* nocapture) #1

; Function Attrs: argmemonly nounwind
declare void @llvm.lifetime.end.p0i8(i64 immarg, i8* nocapture) #1

; Function Attrs: nounwind ssp uwtable
define hidden void @av1_fwd_txfm2d_4x8_c(i16* nocapture readonly, i32*, i32, i8 zeroext, i32) local_unnamed_addr #2 {
  %6 = alloca [32 x i32], align 32
  %7 = alloca %struct.TXFM_2D_FLIP_CFG, align 8
  %8 = bitcast [32 x i32]* %6 to i8*
  call void @llvm.lifetime.start.p0i8(i64 128, i8* nonnull %8) #5
  call void @llvm.memset.p0i8.i64(i8* nonnull align 32 %8, i8 -86, i64 128, i1 false)
  %9 = getelementptr inbounds %struct.TXFM_2D_FLIP_CFG, %struct.TXFM_2D_FLIP_CFG* %7, i64 0, i32 0
  call void @llvm.lifetime.start.p0i8(i64 64, i8* nonnull %9) #5
  call void @llvm.memset.p0i8.i64(i8* nonnull align 8 %9, i8 -86, i64 64, i1 false)
  call void @av1_get_fwd_txfm_cfg(i8 zeroext %3, i8 zeroext 5, %struct.TXFM_2D_FLIP_CFG* nonnull %7)
  %10 = getelementptr inbounds [32 x i32], [32 x i32]* %6, i64 0, i64 0
  call fastcc void @fwd_txfm2d_c(i16* %0, i32* %1, i32 %2, %struct.TXFM_2D_FLIP_CFG* nonnull %7, i32* nonnull %10, i32 %4)
  call void @llvm.lifetime.end.p0i8(i64 64, i8* nonnull %9) #5
  call void @llvm.lifetime.end.p0i8(i64 128, i8* nonnull %8) #5
  ret void
}

; Function Attrs: argmemonly nounwind
declare void @llvm.memset.p0i8.i64(i8* nocapture writeonly, i8, i64, i1 immarg) #1

; Function Attrs: nounwind ssp uwtable
define hidden void @av1_get_fwd_txfm_cfg(i8 zeroext, i8 zeroext, %struct.TXFM_2D_FLIP_CFG* nocapture) local_unnamed_addr #2 {
  %4 = getelementptr inbounds %struct.TXFM_2D_FLIP_CFG, %struct.TXFM_2D_FLIP_CFG* %2, i64 0, i32 0
  %5 = getelementptr inbounds %struct.TXFM_2D_FLIP_CFG, %struct.TXFM_2D_FLIP_CFG* %2, i64 0, i32 0
  store i8 %1, i8* %5, align 8
  %6 = getelementptr inbounds %struct.TXFM_2D_FLIP_CFG, %struct.TXFM_2D_FLIP_CFG* %2, i64 0, i32 1
  %7 = getelementptr inbounds %struct.TXFM_2D_FLIP_CFG, %struct.TXFM_2D_FLIP_CFG* %2, i64 0, i32 2
  %8 = icmp ult i8 %0, 16
  br i1 %8, label %9, label %16

9:                                                ; preds = %3
  %10 = sext i8 %0 to i64
  %11 = getelementptr inbounds [16 x i32], [16 x i32]* @switch.table.av1_get_fwd_txfm_cfg, i64 0, i64 %10
  %12 = load i32, i32* %11, align 4
  %13 = sext i8 %0 to i64
  %14 = getelementptr inbounds [16 x i32], [16 x i32]* @switch.table.av1_get_fwd_txfm_cfg.1, i64 0, i64 %13
  %15 = load i32, i32* %14, align 4
  br label %16

16:                                               ; preds = %3, %9
  %17 = phi i32 [ %12, %9 ], [ 0, %3 ]
  %18 = phi i32 [ %15, %9 ], [ 0, %3 ]
  store i32 %17, i32* %6, align 4
  store i32 %18, i32* %7, align 4
  %19 = zext i8 %0 to i64
  %20 = getelementptr inbounds [16 x i8], [16 x i8]* @vtx_tab, i64 0, i64 %19
  %21 = load i8, i8* %20, align 1
  %22 = getelementptr inbounds [16 x i8], [16 x i8]* @htx_tab, i64 0, i64 %19
  %23 = load i8, i8* %22, align 1
  %24 = zext i8 %1 to i64
  %25 = getelementptr inbounds [19 x i32], [19 x i32]* @tx_size_wide_log2, i64 0, i64 %24
  %26 = load i32, i32* %25, align 4
  %27 = add nsw i32 %26, -2
  %28 = getelementptr inbounds [19 x i32], [19 x i32]* @tx_size_high_log2, i64 0, i64 %24
  %29 = load i32, i32* %28, align 4
  %30 = add nsw i32 %29, -2
  %31 = getelementptr inbounds [19 x i8*], [19 x i8*]* @av1_fwd_txfm_shift_ls, i64 0, i64 %24
  %32 = bitcast i8** %31 to i64*
  %33 = load i64, i64* %32, align 8
  %34 = getelementptr inbounds %struct.TXFM_2D_FLIP_CFG, %struct.TXFM_2D_FLIP_CFG* %2, i64 0, i32 3
  %35 = bitcast i8** %34 to i64*
  store i64 %33, i64* %35, align 8
  %36 = sext i32 %27 to i64
  %37 = sext i32 %30 to i64
  %38 = getelementptr inbounds [5 x [5 x i8]], [5 x [5 x i8]]* @av1_fwd_cos_bit_col, i64 0, i64 %36, i64 %37
  %39 = load i8, i8* %38, align 1
  %40 = getelementptr inbounds %struct.TXFM_2D_FLIP_CFG, %struct.TXFM_2D_FLIP_CFG* %2, i64 0, i32 4
  store i8 %39, i8* %40, align 8
  %41 = getelementptr inbounds [5 x [5 x i8]], [5 x [5 x i8]]* @av1_fwd_cos_bit_row, i64 0, i64 %36, i64 %37
  %42 = load i8, i8* %41, align 1
  %43 = getelementptr inbounds %struct.TXFM_2D_FLIP_CFG, %struct.TXFM_2D_FLIP_CFG* %2, i64 0, i32 5
  store i8 %42, i8* %43, align 1
  %44 = zext i8 %21 to i64
  %45 = getelementptr inbounds [5 x [4 x i8]], [5 x [4 x i8]]* @av1_txfm_type_ls, i64 0, i64 %37, i64 %44
  %46 = load i8, i8* %45, align 1
  %47 = getelementptr inbounds %struct.TXFM_2D_FLIP_CFG, %struct.TXFM_2D_FLIP_CFG* %2, i64 0, i32 8
  store i8 %46, i8* %47, align 2
  %48 = zext i8 %23 to i64
  %49 = getelementptr inbounds [5 x [4 x i8]], [5 x [4 x i8]]* @av1_txfm_type_ls, i64 0, i64 %36, i64 %48
  %50 = load i8, i8* %49, align 1
  %51 = getelementptr inbounds %struct.TXFM_2D_FLIP_CFG, %struct.TXFM_2D_FLIP_CFG* %2, i64 0, i32 9
  store i8 %50, i8* %51, align 1
  %52 = zext i8 %46 to i64
  %53 = getelementptr inbounds [12 x i8], [12 x i8]* @av1_txfm_stage_num_list, i64 0, i64 %52
  %54 = load i8, i8* %53, align 1
  %55 = sext i8 %54 to i32
  %56 = getelementptr inbounds %struct.TXFM_2D_FLIP_CFG, %struct.TXFM_2D_FLIP_CFG* %2, i64 0, i32 10
  store i32 %55, i32* %56, align 4
  %57 = zext i8 %50 to i64
  %58 = getelementptr inbounds [12 x i8], [12 x i8]* @av1_txfm_stage_num_list, i64 0, i64 %57
  %59 = load i8, i8* %58, align 1
  %60 = sext i8 %59 to i32
  %61 = getelementptr inbounds %struct.TXFM_2D_FLIP_CFG, %struct.TXFM_2D_FLIP_CFG* %2, i64 0, i32 11
  store i32 %60, i32* %61, align 8
  %62 = getelementptr inbounds %struct.TXFM_2D_FLIP_CFG, %struct.TXFM_2D_FLIP_CFG* %2, i64 0, i32 6, i64 0
  tail call void @llvm.memset.p0i8.i64(i8* align 2 %62, i8 0, i64 24, i1 false) #5
  %63 = getelementptr inbounds [12 x i8*], [12 x i8*]* @fwd_txfm_range_mult2_list, i64 0, i64 %52
  %64 = load i8*, i8** %63, align 8
  %65 = icmp ne i8 %46, 13
  %66 = icmp sgt i8 %54, 0
  %67 = and i1 %65, %66
  br i1 %67, label %68, label %187

68:                                               ; preds = %16
  %69 = zext i32 %55 to i64
  %70 = icmp ult i8 %54, 16
  br i1 %70, label %128, label %71

71:                                               ; preds = %68
  %72 = getelementptr %struct.TXFM_2D_FLIP_CFG, %struct.TXFM_2D_FLIP_CFG* %2, i64 0, i32 6, i64 0
  %73 = add nuw nsw i64 %69, 26
  %74 = getelementptr i8, i8* %4, i64 %73
  %75 = getelementptr i8, i8* %64, i64 %69
  %76 = icmp ult i8* %72, %75
  %77 = icmp ult i8* %64, %74
  %78 = and i1 %76, %77
  br i1 %78, label %128, label %79

79:                                               ; preds = %71
  %80 = and i64 %69, 4294967280
  %81 = add nsw i64 %80, -16
  %82 = lshr exact i64 %81, 4
  %83 = add nuw nsw i64 %82, 1
  %84 = and i64 %83, 1
  %85 = icmp eq i64 %81, 0
  br i1 %85, label %113, label %86

86:                                               ; preds = %79
  %87 = sub nuw nsw i64 %83, %84
  br label %88

88:                                               ; preds = %88, %86
  %89 = phi i64 [ 0, %86 ], [ %110, %88 ]
  %90 = phi i64 [ %87, %86 ], [ %111, %88 ]
  %91 = getelementptr inbounds i8, i8* %64, i64 %89
  %92 = bitcast i8* %91 to <16 x i8>*
  %93 = load <16 x i8>, <16 x i8>* %92, align 1, !alias.scope !2
  %94 = sext <16 x i8> %93 to <16 x i32>
  %95 = add nsw <16 x i32> %94, <i32 1, i32 1, i32 1, i32 1, i32 1, i32 1, i32 1, i32 1, i32 1, i32 1, i32 1, i32 1, i32 1, i32 1, i32 1, i32 1>
  %96 = lshr <16 x i32> %95, <i32 1, i32 1, i32 1, i32 1, i32 1, i32 1, i32 1, i32 1, i32 1, i32 1, i32 1, i32 1, i32 1, i32 1, i32 1, i32 1>
  %97 = trunc <16 x i32> %96 to <16 x i8>
  %98 = getelementptr inbounds %struct.TXFM_2D_FLIP_CFG, %struct.TXFM_2D_FLIP_CFG* %2, i64 0, i32 6, i64 %89
  %99 = bitcast i8* %98 to <16 x i8>*
  store <16 x i8> %97, <16 x i8>* %99, align 1, !alias.scope !5, !noalias !2
  %100 = or i64 %89, 16
  %101 = getelementptr inbounds i8, i8* %64, i64 %100
  %102 = bitcast i8* %101 to <16 x i8>*
  %103 = load <16 x i8>, <16 x i8>* %102, align 1, !alias.scope !2
  %104 = sext <16 x i8> %103 to <16 x i32>
  %105 = add nsw <16 x i32> %104, <i32 1, i32 1, i32 1, i32 1, i32 1, i32 1, i32 1, i32 1, i32 1, i32 1, i32 1, i32 1, i32 1, i32 1, i32 1, i32 1>
  %106 = lshr <16 x i32> %105, <i32 1, i32 1, i32 1, i32 1, i32 1, i32 1, i32 1, i32 1, i32 1, i32 1, i32 1, i32 1, i32 1, i32 1, i32 1, i32 1>
  %107 = trunc <16 x i32> %106 to <16 x i8>
  %108 = getelementptr inbounds %struct.TXFM_2D_FLIP_CFG, %struct.TXFM_2D_FLIP_CFG* %2, i64 0, i32 6, i64 %100
  %109 = bitcast i8* %108 to <16 x i8>*
  store <16 x i8> %107, <16 x i8>* %109, align 1, !alias.scope !5, !noalias !2
  %110 = add i64 %89, 32
  %111 = add i64 %90, -2
  %112 = icmp eq i64 %111, 0
  br i1 %112, label %113, label %88, !llvm.loop !7

113:                                              ; preds = %88, %79
  %114 = phi i64 [ 0, %79 ], [ %110, %88 ]
  %115 = icmp eq i64 %84, 0
  br i1 %115, label %126, label %116

116:                                              ; preds = %113
  %117 = getelementptr inbounds i8, i8* %64, i64 %114
  %118 = bitcast i8* %117 to <16 x i8>*
  %119 = load <16 x i8>, <16 x i8>* %118, align 1, !alias.scope !2
  %120 = sext <16 x i8> %119 to <16 x i32>
  %121 = add nsw <16 x i32> %120, <i32 1, i32 1, i32 1, i32 1, i32 1, i32 1, i32 1, i32 1, i32 1, i32 1, i32 1, i32 1, i32 1, i32 1, i32 1, i32 1>
  %122 = lshr <16 x i32> %121, <i32 1, i32 1, i32 1, i32 1, i32 1, i32 1, i32 1, i32 1, i32 1, i32 1, i32 1, i32 1, i32 1, i32 1, i32 1, i32 1>
  %123 = trunc <16 x i32> %122 to <16 x i8>
  %124 = getelementptr inbounds %struct.TXFM_2D_FLIP_CFG, %struct.TXFM_2D_FLIP_CFG* %2, i64 0, i32 6, i64 %114
  %125 = bitcast i8* %124 to <16 x i8>*
  store <16 x i8> %123, <16 x i8>* %125, align 1, !alias.scope !5, !noalias !2
  br label %126

126:                                              ; preds = %113, %116
  %127 = icmp eq i64 %80, %69
  br i1 %127, label %185, label %128

128:                                              ; preds = %126, %71, %68
  %129 = phi i64 [ 0, %71 ], [ 0, %68 ], [ %80, %126 ]
  %130 = xor i64 %129, -1
  %131 = add nsw i64 %130, %69
  %132 = and i64 %69, 3
  %133 = icmp eq i64 %132, 0
  br i1 %133, label %147, label %134

134:                                              ; preds = %128, %134
  %135 = phi i64 [ %144, %134 ], [ %129, %128 ]
  %136 = phi i64 [ %145, %134 ], [ %132, %128 ]
  %137 = getelementptr inbounds i8, i8* %64, i64 %135
  %138 = load i8, i8* %137, align 1
  %139 = sext i8 %138 to i32
  %140 = add nsw i32 %139, 1
  %141 = lshr i32 %140, 1
  %142 = trunc i32 %141 to i8
  %143 = getelementptr inbounds %struct.TXFM_2D_FLIP_CFG, %struct.TXFM_2D_FLIP_CFG* %2, i64 0, i32 6, i64 %135
  store i8 %142, i8* %143, align 1
  %144 = add nuw nsw i64 %135, 1
  %145 = add i64 %136, -1
  %146 = icmp eq i64 %145, 0
  br i1 %146, label %147, label %134, !llvm.loop !9

147:                                              ; preds = %134, %128
  %148 = phi i64 [ %129, %128 ], [ %144, %134 ]
  %149 = icmp ult i64 %131, 3
  br i1 %149, label %185, label %150

150:                                              ; preds = %147, %150
  %151 = phi i64 [ %183, %150 ], [ %148, %147 ]
  %152 = getelementptr inbounds i8, i8* %64, i64 %151
  %153 = load i8, i8* %152, align 1
  %154 = sext i8 %153 to i32
  %155 = add nsw i32 %154, 1
  %156 = lshr i32 %155, 1
  %157 = trunc i32 %156 to i8
  %158 = getelementptr inbounds %struct.TXFM_2D_FLIP_CFG, %struct.TXFM_2D_FLIP_CFG* %2, i64 0, i32 6, i64 %151
  store i8 %157, i8* %158, align 1
  %159 = add nuw nsw i64 %151, 1
  %160 = getelementptr inbounds i8, i8* %64, i64 %159
  %161 = load i8, i8* %160, align 1
  %162 = sext i8 %161 to i32
  %163 = add nsw i32 %162, 1
  %164 = lshr i32 %163, 1
  %165 = trunc i32 %164 to i8
  %166 = getelementptr inbounds %struct.TXFM_2D_FLIP_CFG, %struct.TXFM_2D_FLIP_CFG* %2, i64 0, i32 6, i64 %159
  store i8 %165, i8* %166, align 1
  %167 = add nuw nsw i64 %151, 2
  %168 = getelementptr inbounds i8, i8* %64, i64 %167
  %169 = load i8, i8* %168, align 1
  %170 = sext i8 %169 to i32
  %171 = add nsw i32 %170, 1
  %172 = lshr i32 %171, 1
  %173 = trunc i32 %172 to i8
  %174 = getelementptr inbounds %struct.TXFM_2D_FLIP_CFG, %struct.TXFM_2D_FLIP_CFG* %2, i64 0, i32 6, i64 %167
  store i8 %173, i8* %174, align 1
  %175 = add nuw nsw i64 %151, 3
  %176 = getelementptr inbounds i8, i8* %64, i64 %175
  %177 = load i8, i8* %176, align 1
  %178 = sext i8 %177 to i32
  %179 = add nsw i32 %178, 1
  %180 = lshr i32 %179, 1
  %181 = trunc i32 %180 to i8
  %182 = getelementptr inbounds %struct.TXFM_2D_FLIP_CFG, %struct.TXFM_2D_FLIP_CFG* %2, i64 0, i32 6, i64 %175
  store i8 %181, i8* %182, align 1
  %183 = add nuw nsw i64 %151, 4
  %184 = icmp eq i64 %183, %69
  br i1 %184, label %185, label %150, !llvm.loop !11

185:                                              ; preds = %147, %150, %126
  %186 = load i8, i8* %51, align 1
  br label %187

187:                                              ; preds = %185, %16
  %188 = phi i8 [ %186, %185 ], [ %50, %16 ]
  %189 = icmp eq i8 %188, 13
  br i1 %189, label %255, label %190

190:                                              ; preds = %187
  %191 = load i32, i32* %61, align 8
  %192 = zext i8 %188 to i64
  %193 = getelementptr inbounds [12 x i8*], [12 x i8*]* @fwd_txfm_range_mult2_list, i64 0, i64 %192
  %194 = load i8*, i8** %193, align 8
  %195 = icmp sgt i32 %191, 0
  br i1 %195, label %196, label %255

196:                                              ; preds = %190
  %197 = zext i32 %191 to i64
  %198 = and i64 %197, 1
  %199 = icmp eq i32 %191, 1
  br i1 %199, label %237, label %200

200:                                              ; preds = %196
  %201 = sub nsw i64 %197, %198
  br label %202

202:                                              ; preds = %202, %200
  %203 = phi i64 [ 0, %200 ], [ %234, %202 ]
  %204 = phi i64 [ %201, %200 ], [ %235, %202 ]
  %205 = load i32, i32* %56, align 4
  %206 = add nsw i32 %205, -1
  %207 = sext i32 %206 to i64
  %208 = getelementptr inbounds i8, i8* %64, i64 %207
  %209 = load i8, i8* %208, align 1
  %210 = sext i8 %209 to i32
  %211 = getelementptr inbounds i8, i8* %194, i64 %203
  %212 = load i8, i8* %211, align 1
  %213 = sext i8 %212 to i32
  %214 = add nsw i32 %210, 1
  %215 = add nsw i32 %214, %213
  %216 = lshr i32 %215, 1
  %217 = trunc i32 %216 to i8
  %218 = getelementptr inbounds %struct.TXFM_2D_FLIP_CFG, %struct.TXFM_2D_FLIP_CFG* %2, i64 0, i32 7, i64 %203
  store i8 %217, i8* %218, align 1
  %219 = or i64 %203, 1
  %220 = load i32, i32* %56, align 4
  %221 = add nsw i32 %220, -1
  %222 = sext i32 %221 to i64
  %223 = getelementptr inbounds i8, i8* %64, i64 %222
  %224 = load i8, i8* %223, align 1
  %225 = sext i8 %224 to i32
  %226 = getelementptr inbounds i8, i8* %194, i64 %219
  %227 = load i8, i8* %226, align 1
  %228 = sext i8 %227 to i32
  %229 = add nsw i32 %225, 1
  %230 = add nsw i32 %229, %228
  %231 = lshr i32 %230, 1
  %232 = trunc i32 %231 to i8
  %233 = getelementptr inbounds %struct.TXFM_2D_FLIP_CFG, %struct.TXFM_2D_FLIP_CFG* %2, i64 0, i32 7, i64 %219
  store i8 %232, i8* %233, align 1
  %234 = add nuw nsw i64 %203, 2
  %235 = add i64 %204, -2
  %236 = icmp eq i64 %235, 0
  br i1 %236, label %237, label %202

237:                                              ; preds = %202, %196
  %238 = phi i64 [ 0, %196 ], [ %234, %202 ]
  %239 = icmp eq i64 %198, 0
  br i1 %239, label %255, label %240

240:                                              ; preds = %237
  %241 = load i32, i32* %56, align 4
  %242 = add nsw i32 %241, -1
  %243 = sext i32 %242 to i64
  %244 = getelementptr inbounds i8, i8* %64, i64 %243
  %245 = load i8, i8* %244, align 1
  %246 = sext i8 %245 to i32
  %247 = getelementptr inbounds i8, i8* %194, i64 %238
  %248 = load i8, i8* %247, align 1
  %249 = sext i8 %248 to i32
  %250 = add nsw i32 %246, 1
  %251 = add nsw i32 %250, %249
  %252 = lshr i32 %251, 1
  %253 = trunc i32 %252 to i8
  %254 = getelementptr inbounds %struct.TXFM_2D_FLIP_CFG, %struct.TXFM_2D_FLIP_CFG* %2, i64 0, i32 7, i64 %238
  store i8 %253, i8* %254, align 1
  br label %255

255:                                              ; preds = %240, %237, %187, %190
  ret void
}

; Function Attrs: inlinehint nounwind ssp uwtable
define internal fastcc void @fwd_txfm2d_c(i16* nocapture readonly, i32*, i32, %struct.TXFM_2D_FLIP_CFG* nocapture readonly, i32*, i32) unnamed_addr #3 {
  %7 = alloca [12 x i8], align 1
  %8 = alloca [12 x i8], align 1
  %9 = getelementptr inbounds %struct.TXFM_2D_FLIP_CFG, %struct.TXFM_2D_FLIP_CFG* %3, i64 0, i32 0
  %10 = load i8, i8* %9, align 8
  %11 = zext i8 %10 to i64
  %12 = getelementptr inbounds [19 x i32], [19 x i32]* @tx_size_wide, i64 0, i64 %11
  %13 = load i32, i32* %12, align 4
  %14 = getelementptr inbounds [19 x i32], [19 x i32]* @tx_size_high, i64 0, i64 %11
  %15 = load i32, i32* %14, align 4
  %16 = getelementptr inbounds %struct.TXFM_2D_FLIP_CFG, %struct.TXFM_2D_FLIP_CFG* %3, i64 0, i32 3
  %17 = load i8*, i8** %16, align 8
  %18 = icmp eq i32 %13, %15
  br i1 %18, label %34, label %19

19:                                               ; preds = %6
  %20 = icmp sgt i32 %13, %15
  br i1 %20, label %21, label %27

21:                                               ; preds = %19
  %22 = shl nsw i32 %15, 1
  %23 = icmp eq i32 %22, %13
  br i1 %23, label %34, label %24

24:                                               ; preds = %21
  %25 = shl nsw i32 %15, 2
  %26 = icmp eq i32 %25, %13
  br i1 %26, label %34, label %33

27:                                               ; preds = %19
  %28 = shl nsw i32 %13, 1
  %29 = icmp eq i32 %28, %15
  br i1 %29, label %34, label %30

30:                                               ; preds = %27
  %31 = shl nsw i32 %13, 2
  %32 = icmp eq i32 %31, %15
  br i1 %32, label %34, label %33

33:                                               ; preds = %30, %24
  br label %34

34:                                               ; preds = %6, %21, %24, %27, %30, %33
  %35 = phi i32 [ 0, %33 ], [ 0, %6 ], [ 1, %21 ], [ 2, %24 ], [ -1, %27 ], [ -2, %30 ]
  %36 = getelementptr inbounds [12 x i8], [12 x i8]* %7, i64 0, i64 0
  call void @llvm.lifetime.start.p0i8(i64 12, i8* nonnull %36) #5
  %37 = getelementptr inbounds [12 x i8], [12 x i8]* %8, i64 0, i64 0
  call void @llvm.memset.p0i8.i64(i8* nonnull align 1 %36, i8 -86, i64 12, i1 false)
  call void @llvm.lifetime.start.p0i8(i64 12, i8* nonnull %37) #5
  %38 = getelementptr inbounds %struct.TXFM_2D_FLIP_CFG, %struct.TXFM_2D_FLIP_CFG* %3, i64 0, i32 10
  call void @llvm.memset.p0i8.i64(i8* nonnull align 1 %37, i8 -86, i64 12, i1 false)
  %39 = load i32, i32* %38, align 4
  %40 = icmp sgt i32 %39, 0
  br i1 %40, label %41, label %45

41:                                               ; preds = %34
  %42 = trunc i32 %5 to i8
  %43 = add i8 %42, 1
  %44 = sext i32 %39 to i64
  br label %54

45:                                               ; preds = %54, %34
  %46 = getelementptr inbounds %struct.TXFM_2D_FLIP_CFG, %struct.TXFM_2D_FLIP_CFG* %3, i64 0, i32 11
  %47 = load i32, i32* %46, align 8
  %48 = icmp sgt i32 %47, 0
  br i1 %48, label %49, label %80

49:                                               ; preds = %45
  %50 = getelementptr inbounds i8, i8* %17, i64 1
  %51 = trunc i32 %5 to i8
  %52 = add i8 %51, 1
  %53 = sext i32 %47 to i64
  br label %66

54:                                               ; preds = %54, %41
  %55 = phi i64 [ 0, %41 ], [ %62, %54 ]
  %56 = getelementptr inbounds %struct.TXFM_2D_FLIP_CFG, %struct.TXFM_2D_FLIP_CFG* %3, i64 0, i32 6, i64 %55
  %57 = load i8, i8* %56, align 1
  %58 = load i8, i8* %17, align 1
  %59 = add i8 %43, %57
  %60 = add i8 %59, %58
  %61 = getelementptr inbounds [12 x i8], [12 x i8]* %7, i64 0, i64 %55
  store i8 %60, i8* %61, align 1
  %62 = add nuw nsw i64 %55, 1
  %63 = icmp slt i64 %62, %44
  %64 = icmp ult i64 %62, 12
  %65 = and i1 %64, %63
  br i1 %65, label %54, label %45

66:                                               ; preds = %66, %49
  %67 = phi i64 [ 0, %49 ], [ %76, %66 ]
  %68 = getelementptr inbounds %struct.TXFM_2D_FLIP_CFG, %struct.TXFM_2D_FLIP_CFG* %3, i64 0, i32 7, i64 %67
  %69 = load i8, i8* %68, align 1
  %70 = load i8, i8* %17, align 1
  %71 = load i8, i8* %50, align 1
  %72 = add i8 %52, %69
  %73 = add i8 %72, %70
  %74 = add i8 %73, %71
  %75 = getelementptr inbounds [12 x i8], [12 x i8]* %8, i64 0, i64 %67
  store i8 %74, i8* %75, align 1
  %76 = add nuw nsw i64 %67, 1
  %77 = icmp slt i64 %76, %53
  %78 = icmp ult i64 %76, 12
  %79 = and i1 %78, %77
  br i1 %79, label %66, label %80

80:                                               ; preds = %66, %45
  %81 = getelementptr inbounds %struct.TXFM_2D_FLIP_CFG, %struct.TXFM_2D_FLIP_CFG* %3, i64 0, i32 4
  %82 = load i8, i8* %81, align 8
  %83 = getelementptr inbounds %struct.TXFM_2D_FLIP_CFG, %struct.TXFM_2D_FLIP_CFG* %3, i64 0, i32 5
  %84 = load i8, i8* %83, align 1
  %85 = getelementptr inbounds %struct.TXFM_2D_FLIP_CFG, %struct.TXFM_2D_FLIP_CFG* %3, i64 0, i32 8
  %86 = load i8, i8* %85, align 2
  %87 = icmp ult i8 %86, 12
  br i1 %87, label %88, label %92

88:                                               ; preds = %80
  %89 = sext i8 %86 to i64
  %90 = getelementptr inbounds [12 x void (i32*, i32*, i8, i8*)*], [12 x void (i32*, i32*, i8, i8*)*]* @switch.table.fwd_txfm2d_c.2, i64 0, i64 %89
  %91 = load void (i32*, i32*, i8, i8*)*, void (i32*, i32*, i8, i8*)** %90, align 8
  br label %92

92:                                               ; preds = %80, %88
  %93 = phi void (i32*, i32*, i8, i8*)* [ %91, %88 ], [ null, %80 ]
  %94 = getelementptr inbounds %struct.TXFM_2D_FLIP_CFG, %struct.TXFM_2D_FLIP_CFG* %3, i64 0, i32 9
  %95 = load i8, i8* %94, align 1
  %96 = icmp ult i8 %95, 12
  br i1 %96, label %97, label %101

97:                                               ; preds = %92
  %98 = sext i8 %95 to i64
  %99 = getelementptr inbounds [12 x void (i32*, i32*, i8, i8*)*], [12 x void (i32*, i32*, i8, i8*)*]* @switch.table.fwd_txfm2d_c.2, i64 0, i64 %98
  %100 = load void (i32*, i32*, i8, i8*)*, void (i32*, i32*, i8, i8*)** %99, align 8
  br label %101

101:                                              ; preds = %92, %97
  %102 = phi void (i32*, i32*, i8, i8*)* [ %100, %97 ], [ null, %92 ]
  %103 = sext i32 %15 to i64
  %104 = getelementptr inbounds i32, i32* %1, i64 %103
  %105 = getelementptr inbounds %struct.TXFM_2D_FLIP_CFG, %struct.TXFM_2D_FLIP_CFG* %3, i64 0, i32 1
  %106 = getelementptr inbounds i8, i8* %17, i64 1
  %107 = getelementptr inbounds %struct.TXFM_2D_FLIP_CFG, %struct.TXFM_2D_FLIP_CFG* %3, i64 0, i32 2
  %108 = sext i32 %2 to i64
  %109 = sext i32 %13 to i64
  %110 = icmp sgt i64 %103, 1
  %111 = select i1 %110, i64 %103, i64 1
  %112 = icmp sgt i64 %103, 1
  %113 = select i1 %112, i64 %103, i64 1
  %114 = getelementptr i32, i32* %1, i64 %113
  %115 = and i64 %111, 9223372036854775800
  %116 = add nsw i64 %115, -8
  %117 = lshr exact i64 %116, 3
  %118 = add nuw nsw i64 %117, 1
  %119 = add nsw i64 %111, -1
  %120 = icmp ugt i64 %111, 7
  %121 = icmp eq i32 %2, 1
  %122 = and i1 %120, %121
  %123 = bitcast i32* %114 to i16*
  %124 = and i64 %111, 9223372036854775800
  %125 = and i64 %118, 1
  %126 = icmp eq i64 %116, 0
  %127 = sub nuw nsw i64 %118, %125
  %128 = icmp eq i64 %125, 0
  %129 = icmp eq i64 %111, %124
  %130 = and i64 %111, 3
  %131 = icmp ult i64 %119, 3
  %132 = sub nsw i64 %111, %130
  %133 = icmp eq i64 %130, 0
  %134 = and i64 %111, 3
  %135 = icmp ult i64 %119, 3
  %136 = sub nsw i64 %111, %134
  %137 = icmp eq i64 %134, 0
  br label %158

138:                                              ; preds = %355
  %139 = getelementptr inbounds i8, i8* %17, i64 2
  %140 = icmp slt i32 %35, 0
  %141 = sub nsw i32 0, %35
  %142 = select i1 %140, i32 %141, i32 %35
  %143 = icmp eq i32 %142, 1
  %144 = sext i32 %13 to i64
  %145 = icmp sgt i64 %109, 1
  %146 = select i1 %145, i64 %109, i64 1
  %147 = and i64 %146, 9223372036854775804
  %148 = add nsw i64 %147, -4
  %149 = lshr exact i64 %148, 2
  %150 = add nuw nsw i64 %149, 1
  %151 = icmp ult i64 %146, 4
  %152 = and i64 %146, 9223372036854775804
  %153 = and i64 %150, 1
  %154 = icmp eq i64 %148, 0
  %155 = sub nuw nsw i64 %150, %153
  %156 = icmp eq i64 %153, 0
  %157 = icmp eq i64 %146, %152
  br label %358

158:                                              ; preds = %101, %355
  %159 = phi i64 [ 0, %101 ], [ %356, %355 ]
  %160 = getelementptr i16, i16* %0, i64 %159
  %161 = add nuw i64 %113, %159
  %162 = getelementptr i16, i16* %0, i64 %161
  %163 = load i32, i32* %105, align 4
  %164 = icmp eq i32 %163, 0
  br i1 %164, label %165, label %227

165:                                              ; preds = %158
  br i1 %122, label %166, label %171

166:                                              ; preds = %165
  %167 = bitcast i16* %162 to i32*
  %168 = icmp ugt i32* %167, %1
  %169 = icmp ult i16* %160, %123
  %170 = and i1 %168, %169
  br i1 %170, label %171, label %173

171:                                              ; preds = %165, %226, %166
  %172 = phi i64 [ 0, %166 ], [ 0, %165 ], [ %124, %226 ]
  br label %229

173:                                              ; preds = %166
  br i1 %126, label %209, label %174

174:                                              ; preds = %173, %174
  %175 = phi i64 [ %206, %174 ], [ 0, %173 ]
  %176 = phi i64 [ %207, %174 ], [ %127, %173 ]
  %177 = mul nsw i64 %175, %108
  %178 = add nsw i64 %177, %159
  %179 = getelementptr inbounds i16, i16* %0, i64 %178
  %180 = bitcast i16* %179 to <4 x i16>*
  %181 = load <4 x i16>, <4 x i16>* %180, align 2, !alias.scope !12
  %182 = getelementptr inbounds i16, i16* %179, i64 4
  %183 = bitcast i16* %182 to <4 x i16>*
  %184 = load <4 x i16>, <4 x i16>* %183, align 2, !alias.scope !12
  %185 = sext <4 x i16> %181 to <4 x i32>
  %186 = sext <4 x i16> %184 to <4 x i32>
  %187 = getelementptr inbounds i32, i32* %1, i64 %175
  %188 = bitcast i32* %187 to <4 x i32>*
  store <4 x i32> %185, <4 x i32>* %188, align 4, !alias.scope !15, !noalias !12
  %189 = getelementptr inbounds i32, i32* %187, i64 4
  %190 = bitcast i32* %189 to <4 x i32>*
  store <4 x i32> %186, <4 x i32>* %190, align 4, !alias.scope !15, !noalias !12
  %191 = or i64 %175, 8
  %192 = mul nsw i64 %191, %108
  %193 = add nsw i64 %192, %159
  %194 = getelementptr inbounds i16, i16* %0, i64 %193
  %195 = bitcast i16* %194 to <4 x i16>*
  %196 = load <4 x i16>, <4 x i16>* %195, align 2, !alias.scope !12
  %197 = getelementptr inbounds i16, i16* %194, i64 4
  %198 = bitcast i16* %197 to <4 x i16>*
  %199 = load <4 x i16>, <4 x i16>* %198, align 2, !alias.scope !12
  %200 = sext <4 x i16> %196 to <4 x i32>
  %201 = sext <4 x i16> %199 to <4 x i32>
  %202 = getelementptr inbounds i32, i32* %1, i64 %191
  %203 = bitcast i32* %202 to <4 x i32>*
  store <4 x i32> %200, <4 x i32>* %203, align 4, !alias.scope !15, !noalias !12
  %204 = getelementptr inbounds i32, i32* %202, i64 4
  %205 = bitcast i32* %204 to <4 x i32>*
  store <4 x i32> %201, <4 x i32>* %205, align 4, !alias.scope !15, !noalias !12
  %206 = add i64 %175, 16
  %207 = add i64 %176, -2
  %208 = icmp eq i64 %207, 0
  br i1 %208, label %209, label %174, !llvm.loop !17

209:                                              ; preds = %174, %173
  %210 = phi i64 [ 0, %173 ], [ %206, %174 ]
  br i1 %128, label %226, label %211

211:                                              ; preds = %209
  %212 = mul nsw i64 %210, %108
  %213 = add nsw i64 %212, %159
  %214 = getelementptr inbounds i16, i16* %0, i64 %213
  %215 = bitcast i16* %214 to <4 x i16>*
  %216 = load <4 x i16>, <4 x i16>* %215, align 2, !alias.scope !12
  %217 = getelementptr inbounds i16, i16* %214, i64 4
  %218 = bitcast i16* %217 to <4 x i16>*
  %219 = load <4 x i16>, <4 x i16>* %218, align 2, !alias.scope !12
  %220 = sext <4 x i16> %216 to <4 x i32>
  %221 = sext <4 x i16> %219 to <4 x i32>
  %222 = getelementptr inbounds i32, i32* %1, i64 %210
  %223 = bitcast i32* %222 to <4 x i32>*
  store <4 x i32> %220, <4 x i32>* %223, align 4, !alias.scope !15, !noalias !12
  %224 = getelementptr inbounds i32, i32* %222, i64 4
  %225 = bitcast i32* %224 to <4 x i32>*
  store <4 x i32> %221, <4 x i32>* %225, align 4, !alias.scope !15, !noalias !12
  br label %226

226:                                              ; preds = %209, %211
  br i1 %129, label %254, label %171

227:                                              ; preds = %158
  %228 = trunc i64 %159 to i32
  br label %239

229:                                              ; preds = %171, %229
  %230 = phi i64 [ %237, %229 ], [ %172, %171 ]
  %231 = mul nsw i64 %230, %108
  %232 = add nsw i64 %231, %159
  %233 = getelementptr inbounds i16, i16* %0, i64 %232
  %234 = load i16, i16* %233, align 2
  %235 = sext i16 %234 to i32
  %236 = getelementptr inbounds i32, i32* %1, i64 %230
  store i32 %235, i32* %236, align 4
  %237 = add nuw nsw i64 %230, 1
  %238 = icmp slt i64 %237, %103
  br i1 %238, label %229, label %254, !llvm.loop !18

239:                                              ; preds = %227, %239
  %240 = phi i64 [ 0, %227 ], [ %251, %239 ]
  %241 = phi i32 [ 0, %227 ], [ %252, %239 ]
  %242 = xor i32 %241, -1
  %243 = add i32 %15, %242
  %244 = mul nsw i32 %243, %2
  %245 = add nsw i32 %244, %228
  %246 = sext i32 %245 to i64
  %247 = getelementptr inbounds i16, i16* %0, i64 %246
  %248 = load i16, i16* %247, align 2
  %249 = sext i16 %248 to i32
  %250 = getelementptr inbounds i32, i32* %1, i64 %240
  store i32 %249, i32* %250, align 4
  %251 = add nuw nsw i64 %240, 1
  %252 = add nuw nsw i32 %241, 1
  %253 = icmp slt i64 %251, %103
  br i1 %253, label %239, label %254

254:                                              ; preds = %239, %229, %226
  %255 = load void (i32*, i32, i32)*, void (i32*, i32, i32)** @av1_round_shift_array, align 8
  %256 = load i8, i8* %17, align 1
  %257 = sext i8 %256 to i32
  %258 = sub nsw i32 0, %257
  call void %255(i32* %1, i32 %15, i32 %258) #5
  call void %93(i32* %1, i32* %104, i8 signext %82, i8* nonnull %36) #5
  %259 = load void (i32*, i32, i32)*, void (i32*, i32, i32)** @av1_round_shift_array, align 8
  %260 = load i8, i8* %106, align 1
  %261 = sext i8 %260 to i32
  %262 = sub nsw i32 0, %261
  call void %259(i32* %104, i32 %15, i32 %262) #5
  %263 = load i32, i32* %107, align 8
  %264 = icmp eq i32 %263, 0
  br i1 %264, label %265, label %266

265:                                              ; preds = %254
  br i1 %135, label %329, label %271

266:                                              ; preds = %254
  %267 = trunc i64 %159 to i32
  %268 = xor i32 %267, -1
  %269 = add i32 %13, %268
  %270 = sext i32 %269 to i64
  br i1 %131, label %342, label %300

271:                                              ; preds = %265, %271
  %272 = phi i64 [ %297, %271 ], [ 0, %265 ]
  %273 = phi i64 [ %298, %271 ], [ %136, %265 ]
  %274 = getelementptr inbounds i32, i32* %104, i64 %272
  %275 = load i32, i32* %274, align 4
  %276 = mul nsw i64 %272, %109
  %277 = add nsw i64 %276, %159
  %278 = getelementptr inbounds i32, i32* %4, i64 %277
  store i32 %275, i32* %278, align 4
  %279 = or i64 %272, 1
  %280 = getelementptr inbounds i32, i32* %104, i64 %279
  %281 = load i32, i32* %280, align 4
  %282 = mul nsw i64 %279, %109
  %283 = add nsw i64 %282, %159
  %284 = getelementptr inbounds i32, i32* %4, i64 %283
  store i32 %281, i32* %284, align 4
  %285 = or i64 %272, 2
  %286 = getelementptr inbounds i32, i32* %104, i64 %285
  %287 = load i32, i32* %286, align 4
  %288 = mul nsw i64 %285, %109
  %289 = add nsw i64 %288, %159
  %290 = getelementptr inbounds i32, i32* %4, i64 %289
  store i32 %287, i32* %290, align 4
  %291 = or i64 %272, 3
  %292 = getelementptr inbounds i32, i32* %104, i64 %291
  %293 = load i32, i32* %292, align 4
  %294 = mul nsw i64 %291, %109
  %295 = add nsw i64 %294, %159
  %296 = getelementptr inbounds i32, i32* %4, i64 %295
  store i32 %293, i32* %296, align 4
  %297 = add nuw nsw i64 %272, 4
  %298 = add i64 %273, -4
  %299 = icmp eq i64 %298, 0
  br i1 %299, label %329, label %271

300:                                              ; preds = %266, %300
  %301 = phi i64 [ %326, %300 ], [ 0, %266 ]
  %302 = phi i64 [ %327, %300 ], [ %132, %266 ]
  %303 = getelementptr inbounds i32, i32* %104, i64 %301
  %304 = load i32, i32* %303, align 4
  %305 = mul nsw i64 %301, %109
  %306 = add nsw i64 %305, %270
  %307 = getelementptr inbounds i32, i32* %4, i64 %306
  store i32 %304, i32* %307, align 4
  %308 = or i64 %301, 1
  %309 = getelementptr inbounds i32, i32* %104, i64 %308
  %310 = load i32, i32* %309, align 4
  %311 = mul nsw i64 %308, %109
  %312 = add nsw i64 %311, %270
  %313 = getelementptr inbounds i32, i32* %4, i64 %312
  store i32 %310, i32* %313, align 4
  %314 = or i64 %301, 2
  %315 = getelementptr inbounds i32, i32* %104, i64 %314
  %316 = load i32, i32* %315, align 4
  %317 = mul nsw i64 %314, %109
  %318 = add nsw i64 %317, %270
  %319 = getelementptr inbounds i32, i32* %4, i64 %318
  store i32 %316, i32* %319, align 4
  %320 = or i64 %301, 3
  %321 = getelementptr inbounds i32, i32* %104, i64 %320
  %322 = load i32, i32* %321, align 4
  %323 = mul nsw i64 %320, %109
  %324 = add nsw i64 %323, %270
  %325 = getelementptr inbounds i32, i32* %4, i64 %324
  store i32 %322, i32* %325, align 4
  %326 = add nuw nsw i64 %301, 4
  %327 = add i64 %302, -4
  %328 = icmp eq i64 %327, 0
  br i1 %328, label %342, label %300

329:                                              ; preds = %271, %265
  %330 = phi i64 [ 0, %265 ], [ %297, %271 ]
  br i1 %137, label %355, label %331

331:                                              ; preds = %329, %331
  %332 = phi i64 [ %339, %331 ], [ %330, %329 ]
  %333 = phi i64 [ %340, %331 ], [ %134, %329 ]
  %334 = getelementptr inbounds i32, i32* %104, i64 %332
  %335 = load i32, i32* %334, align 4
  %336 = mul nsw i64 %332, %109
  %337 = add nsw i64 %336, %159
  %338 = getelementptr inbounds i32, i32* %4, i64 %337
  store i32 %335, i32* %338, align 4
  %339 = add nuw nsw i64 %332, 1
  %340 = add i64 %333, -1
  %341 = icmp eq i64 %340, 0
  br i1 %341, label %355, label %331, !llvm.loop !19

342:                                              ; preds = %300, %266
  %343 = phi i64 [ 0, %266 ], [ %326, %300 ]
  br i1 %133, label %355, label %344

344:                                              ; preds = %342, %344
  %345 = phi i64 [ %352, %344 ], [ %343, %342 ]
  %346 = phi i64 [ %353, %344 ], [ %130, %342 ]
  %347 = getelementptr inbounds i32, i32* %104, i64 %345
  %348 = load i32, i32* %347, align 4
  %349 = mul nsw i64 %345, %109
  %350 = add nsw i64 %349, %270
  %351 = getelementptr inbounds i32, i32* %4, i64 %350
  store i32 %348, i32* %351, align 4
  %352 = add nuw nsw i64 %345, 1
  %353 = add i64 %346, -1
  %354 = icmp eq i64 %353, 0
  br i1 %354, label %355, label %344, !llvm.loop !20

355:                                              ; preds = %342, %344, %329, %331
  %356 = add nuw nsw i64 %159, 1
  %357 = icmp slt i64 %356, %109
  br i1 %357, label %158, label %138

358:                                              ; preds = %138, %424
  %359 = phi i64 [ 0, %138 ], [ %425, %424 ]
  %360 = mul nsw i64 %359, %144
  %361 = getelementptr inbounds i32, i32* %4, i64 %360
  %362 = getelementptr inbounds i32, i32* %1, i64 %360
  call void %102(i32* %361, i32* %362, i8 signext %84, i8* nonnull %37) #5
  %363 = load void (i32*, i32, i32)*, void (i32*, i32, i32)** @av1_round_shift_array, align 8
  %364 = load i8, i8* %139, align 1
  %365 = sext i8 %364 to i32
  %366 = sub nsw i32 0, %365
  call void %363(i32* %362, i32 %13, i32 %366) #5
  br i1 %143, label %367, label %424

367:                                              ; preds = %358
  br i1 %151, label %410, label %368

368:                                              ; preds = %367
  br i1 %154, label %396, label %369

369:                                              ; preds = %368, %369
  %370 = phi i64 [ %393, %369 ], [ 0, %368 ]
  %371 = phi i64 [ %394, %369 ], [ %155, %368 ]
  %372 = add nsw i64 %370, %360
  %373 = getelementptr inbounds i32, i32* %1, i64 %372
  %374 = bitcast i32* %373 to <4 x i32>*
  %375 = load <4 x i32>, <4 x i32>* %374, align 4
  %376 = sext <4 x i32> %375 to <4 x i64>
  %377 = mul nsw <4 x i64> %376, <i64 5793, i64 5793, i64 5793, i64 5793>
  %378 = add nsw <4 x i64> %377, <i64 2048, i64 2048, i64 2048, i64 2048>
  %379 = lshr <4 x i64> %378, <i64 12, i64 12, i64 12, i64 12>
  %380 = trunc <4 x i64> %379 to <4 x i32>
  %381 = bitcast i32* %373 to <4 x i32>*
  store <4 x i32> %380, <4 x i32>* %381, align 4
  %382 = or i64 %370, 4
  %383 = add nsw i64 %382, %360
  %384 = getelementptr inbounds i32, i32* %1, i64 %383
  %385 = bitcast i32* %384 to <4 x i32>*
  %386 = load <4 x i32>, <4 x i32>* %385, align 4
  %387 = sext <4 x i32> %386 to <4 x i64>
  %388 = mul nsw <4 x i64> %387, <i64 5793, i64 5793, i64 5793, i64 5793>
  %389 = add nsw <4 x i64> %388, <i64 2048, i64 2048, i64 2048, i64 2048>
  %390 = lshr <4 x i64> %389, <i64 12, i64 12, i64 12, i64 12>
  %391 = trunc <4 x i64> %390 to <4 x i32>
  %392 = bitcast i32* %384 to <4 x i32>*
  store <4 x i32> %391, <4 x i32>* %392, align 4
  %393 = add i64 %370, 8
  %394 = add i64 %371, -2
  %395 = icmp eq i64 %394, 0
  br i1 %395, label %396, label %369, !llvm.loop !21

396:                                              ; preds = %369, %368
  %397 = phi i64 [ 0, %368 ], [ %393, %369 ]
  br i1 %156, label %409, label %398

398:                                              ; preds = %396
  %399 = add nsw i64 %397, %360
  %400 = getelementptr inbounds i32, i32* %1, i64 %399
  %401 = bitcast i32* %400 to <4 x i32>*
  %402 = load <4 x i32>, <4 x i32>* %401, align 4
  %403 = sext <4 x i32> %402 to <4 x i64>
  %404 = mul nsw <4 x i64> %403, <i64 5793, i64 5793, i64 5793, i64 5793>
  %405 = add nsw <4 x i64> %404, <i64 2048, i64 2048, i64 2048, i64 2048>
  %406 = lshr <4 x i64> %405, <i64 12, i64 12, i64 12, i64 12>
  %407 = trunc <4 x i64> %406 to <4 x i32>
  %408 = bitcast i32* %400 to <4 x i32>*
  store <4 x i32> %407, <4 x i32>* %408, align 4
  br label %409

409:                                              ; preds = %396, %398
  br i1 %157, label %424, label %410

410:                                              ; preds = %409, %367
  %411 = phi i64 [ 0, %367 ], [ %152, %409 ]
  br label %412

412:                                              ; preds = %410, %412
  %413 = phi i64 [ %422, %412 ], [ %411, %410 ]
  %414 = add nsw i64 %413, %360
  %415 = getelementptr inbounds i32, i32* %1, i64 %414
  %416 = load i32, i32* %415, align 4
  %417 = sext i32 %416 to i64
  %418 = mul nsw i64 %417, 5793
  %419 = add nsw i64 %418, 2048
  %420 = lshr i64 %419, 12
  %421 = trunc i64 %420 to i32
  store i32 %421, i32* %415, align 4
  %422 = add nuw nsw i64 %413, 1
  %423 = icmp slt i64 %422, %144
  br i1 %423, label %412, label %424, !llvm.loop !22

424:                                              ; preds = %412, %409, %358
  %425 = add nuw nsw i64 %359, 1
  %426 = icmp slt i64 %425, %103
  br i1 %426, label %358, label %427

427:                                              ; preds = %424
  call void @llvm.lifetime.end.p0i8(i64 12, i8* nonnull %37) #5
  call void @llvm.lifetime.end.p0i8(i64 12, i8* nonnull %36) #5
  ret void
}

; Function Attrs: nounwind ssp uwtable
define hidden void @av1_fwd_txfm2d_8x4_c(i16* nocapture readonly, i32*, i32, i8 zeroext, i32) local_unnamed_addr #2 {
  %6 = alloca [32 x i32], align 16
  %7 = alloca %struct.TXFM_2D_FLIP_CFG, align 8
  %8 = bitcast [32 x i32]* %6 to i8*
  call void @llvm.lifetime.start.p0i8(i64 128, i8* nonnull %8) #5
  call void @llvm.memset.p0i8.i64(i8* nonnull align 16 %8, i8 -86, i64 128, i1 false)
  %9 = getelementptr inbounds %struct.TXFM_2D_FLIP_CFG, %struct.TXFM_2D_FLIP_CFG* %7, i64 0, i32 0
  call void @llvm.lifetime.start.p0i8(i64 64, i8* nonnull %9) #5
  call void @llvm.memset.p0i8.i64(i8* nonnull align 8 %9, i8 -86, i64 64, i1 false)
  call void @av1_get_fwd_txfm_cfg(i8 zeroext %3, i8 zeroext 6, %struct.TXFM_2D_FLIP_CFG* nonnull %7)
  %10 = getelementptr inbounds [32 x i32], [32 x i32]* %6, i64 0, i64 0
  call fastcc void @fwd_txfm2d_c(i16* %0, i32* %1, i32 %2, %struct.TXFM_2D_FLIP_CFG* nonnull %7, i32* nonnull %10, i32 %4)
  call void @llvm.lifetime.end.p0i8(i64 64, i8* nonnull %9) #5
  call void @llvm.lifetime.end.p0i8(i64 128, i8* nonnull %8) #5
  ret void
}

; Function Attrs: nounwind ssp uwtable
define hidden void @av1_fwd_txfm2d_8x16_c(i16* nocapture readonly, i32*, i32, i8 zeroext, i32) local_unnamed_addr #2 {
  %6 = alloca [128 x i32], align 32
  %7 = alloca %struct.TXFM_2D_FLIP_CFG, align 8
  %8 = bitcast [128 x i32]* %6 to i8*
  call void @llvm.lifetime.start.p0i8(i64 512, i8* nonnull %8) #5
  call void @llvm.memset.p0i8.i64(i8* nonnull align 32 %8, i8 -86, i64 512, i1 false)
  %9 = getelementptr inbounds %struct.TXFM_2D_FLIP_CFG, %struct.TXFM_2D_FLIP_CFG* %7, i64 0, i32 0
  call void @llvm.lifetime.start.p0i8(i64 64, i8* nonnull %9) #5
  call void @llvm.memset.p0i8.i64(i8* nonnull align 8 %9, i8 -86, i64 64, i1 false)
  call void @av1_get_fwd_txfm_cfg(i8 zeroext %3, i8 zeroext 7, %struct.TXFM_2D_FLIP_CFG* nonnull %7)
  %10 = getelementptr inbounds [128 x i32], [128 x i32]* %6, i64 0, i64 0
  call fastcc void @fwd_txfm2d_c(i16* %0, i32* %1, i32 %2, %struct.TXFM_2D_FLIP_CFG* nonnull %7, i32* nonnull %10, i32 %4)
  call void @llvm.lifetime.end.p0i8(i64 64, i8* nonnull %9) #5
  call void @llvm.lifetime.end.p0i8(i64 512, i8* nonnull %8) #5
  ret void
}

; Function Attrs: nounwind ssp uwtable
define hidden void @av1_fwd_txfm2d_16x8_c(i16* nocapture readonly, i32*, i32, i8 zeroext, i32) local_unnamed_addr #2 {
  %6 = alloca [128 x i32], align 16
  %7 = alloca %struct.TXFM_2D_FLIP_CFG, align 8
  %8 = bitcast [128 x i32]* %6 to i8*
  call void @llvm.lifetime.start.p0i8(i64 512, i8* nonnull %8) #5
  call void @llvm.memset.p0i8.i64(i8* nonnull align 16 %8, i8 -86, i64 512, i1 false)
  %9 = getelementptr inbounds %struct.TXFM_2D_FLIP_CFG, %struct.TXFM_2D_FLIP_CFG* %7, i64 0, i32 0
  call void @llvm.lifetime.start.p0i8(i64 64, i8* nonnull %9) #5
  call void @llvm.memset.p0i8.i64(i8* nonnull align 8 %9, i8 -86, i64 64, i1 false)
  call void @av1_get_fwd_txfm_cfg(i8 zeroext %3, i8 zeroext 8, %struct.TXFM_2D_FLIP_CFG* nonnull %7)
  %10 = getelementptr inbounds [128 x i32], [128 x i32]* %6, i64 0, i64 0
  call fastcc void @fwd_txfm2d_c(i16* %0, i32* %1, i32 %2, %struct.TXFM_2D_FLIP_CFG* nonnull %7, i32* nonnull %10, i32 %4)
  call void @llvm.lifetime.end.p0i8(i64 64, i8* nonnull %9) #5
  call void @llvm.lifetime.end.p0i8(i64 512, i8* nonnull %8) #5
  ret void
}

; Function Attrs: nounwind ssp uwtable
define hidden void @av1_fwd_txfm2d_16x32_c(i16* nocapture readonly, i32*, i32, i8 zeroext, i32) local_unnamed_addr #2 {
  %6 = alloca [512 x i32], align 32
  %7 = alloca %struct.TXFM_2D_FLIP_CFG, align 8
  %8 = bitcast [512 x i32]* %6 to i8*
  call void @llvm.lifetime.start.p0i8(i64 2048, i8* nonnull %8) #5
  call void @llvm.memset.p0i8.i64(i8* nonnull align 32 %8, i8 -86, i64 2048, i1 false)
  %9 = getelementptr inbounds %struct.TXFM_2D_FLIP_CFG, %struct.TXFM_2D_FLIP_CFG* %7, i64 0, i32 0
  call void @llvm.lifetime.start.p0i8(i64 64, i8* nonnull %9) #5
  call void @llvm.memset.p0i8.i64(i8* nonnull align 8 %9, i8 -86, i64 64, i1 false)
  call void @av1_get_fwd_txfm_cfg(i8 zeroext %3, i8 zeroext 9, %struct.TXFM_2D_FLIP_CFG* nonnull %7)
  %10 = getelementptr inbounds [512 x i32], [512 x i32]* %6, i64 0, i64 0
  call fastcc void @fwd_txfm2d_c(i16* %0, i32* %1, i32 %2, %struct.TXFM_2D_FLIP_CFG* nonnull %7, i32* nonnull %10, i32 %4)
  call void @llvm.lifetime.end.p0i8(i64 64, i8* nonnull %9) #5
  call void @llvm.lifetime.end.p0i8(i64 2048, i8* nonnull %8) #5
  ret void
}

; Function Attrs: nounwind ssp uwtable
define hidden void @av1_fwd_txfm2d_32x16_c(i16* nocapture readonly, i32*, i32, i8 zeroext, i32) local_unnamed_addr #2 {
  %6 = alloca [512 x i32], align 16
  %7 = alloca %struct.TXFM_2D_FLIP_CFG, align 8
  %8 = bitcast [512 x i32]* %6 to i8*
  call void @llvm.lifetime.start.p0i8(i64 2048, i8* nonnull %8) #5
  call void @llvm.memset.p0i8.i64(i8* nonnull align 16 %8, i8 -86, i64 2048, i1 false)
  %9 = getelementptr inbounds %struct.TXFM_2D_FLIP_CFG, %struct.TXFM_2D_FLIP_CFG* %7, i64 0, i32 0
  call void @llvm.lifetime.start.p0i8(i64 64, i8* nonnull %9) #5
  call void @llvm.memset.p0i8.i64(i8* nonnull align 8 %9, i8 -86, i64 64, i1 false)
  call void @av1_get_fwd_txfm_cfg(i8 zeroext %3, i8 zeroext 10, %struct.TXFM_2D_FLIP_CFG* nonnull %7)
  %10 = getelementptr inbounds [512 x i32], [512 x i32]* %6, i64 0, i64 0
  call fastcc void @fwd_txfm2d_c(i16* %0, i32* %1, i32 %2, %struct.TXFM_2D_FLIP_CFG* nonnull %7, i32* nonnull %10, i32 %4)
  call void @llvm.lifetime.end.p0i8(i64 64, i8* nonnull %9) #5
  call void @llvm.lifetime.end.p0i8(i64 2048, i8* nonnull %8) #5
  ret void
}

; Function Attrs: nounwind ssp uwtable
define hidden void @av1_fwd_txfm2d_4x16_c(i16* nocapture readonly, i32*, i32, i8 zeroext, i32) local_unnamed_addr #2 {
  %6 = alloca [64 x i32], align 32
  %7 = alloca %struct.TXFM_2D_FLIP_CFG, align 8
  %8 = bitcast [64 x i32]* %6 to i8*
  call void @llvm.lifetime.start.p0i8(i64 256, i8* nonnull %8) #5
  call void @llvm.memset.p0i8.i64(i8* nonnull align 32 %8, i8 -86, i64 256, i1 false)
  %9 = getelementptr inbounds %struct.TXFM_2D_FLIP_CFG, %struct.TXFM_2D_FLIP_CFG* %7, i64 0, i32 0
  call void @llvm.lifetime.start.p0i8(i64 64, i8* nonnull %9) #5
  call void @llvm.memset.p0i8.i64(i8* nonnull align 8 %9, i8 -86, i64 64, i1 false)
  call void @av1_get_fwd_txfm_cfg(i8 zeroext %3, i8 zeroext 13, %struct.TXFM_2D_FLIP_CFG* nonnull %7)
  %10 = getelementptr inbounds [64 x i32], [64 x i32]* %6, i64 0, i64 0
  call fastcc void @fwd_txfm2d_c(i16* %0, i32* %1, i32 %2, %struct.TXFM_2D_FLIP_CFG* nonnull %7, i32* nonnull %10, i32 %4)
  call void @llvm.lifetime.end.p0i8(i64 64, i8* nonnull %9) #5
  call void @llvm.lifetime.end.p0i8(i64 256, i8* nonnull %8) #5
  ret void
}

; Function Attrs: nounwind ssp uwtable
define hidden void @av1_fwd_txfm2d_16x4_c(i16* nocapture readonly, i32*, i32, i8 zeroext, i32) local_unnamed_addr #2 {
  %6 = alloca [64 x i32], align 16
  %7 = alloca %struct.TXFM_2D_FLIP_CFG, align 8
  %8 = bitcast [64 x i32]* %6 to i8*
  call void @llvm.lifetime.start.p0i8(i64 256, i8* nonnull %8) #5
  call void @llvm.memset.p0i8.i64(i8* nonnull align 16 %8, i8 -86, i64 256, i1 false)
  %9 = getelementptr inbounds %struct.TXFM_2D_FLIP_CFG, %struct.TXFM_2D_FLIP_CFG* %7, i64 0, i32 0
  call void @llvm.lifetime.start.p0i8(i64 64, i8* nonnull %9) #5
  call void @llvm.memset.p0i8.i64(i8* nonnull align 8 %9, i8 -86, i64 64, i1 false)
  call void @av1_get_fwd_txfm_cfg(i8 zeroext %3, i8 zeroext 14, %struct.TXFM_2D_FLIP_CFG* nonnull %7)
  %10 = getelementptr inbounds [64 x i32], [64 x i32]* %6, i64 0, i64 0
  call fastcc void @fwd_txfm2d_c(i16* %0, i32* %1, i32 %2, %struct.TXFM_2D_FLIP_CFG* nonnull %7, i32* nonnull %10, i32 %4)
  call void @llvm.lifetime.end.p0i8(i64 64, i8* nonnull %9) #5
  call void @llvm.lifetime.end.p0i8(i64 256, i8* nonnull %8) #5
  ret void
}

; Function Attrs: nounwind ssp uwtable
define hidden void @av1_fwd_txfm2d_8x32_c(i16* nocapture readonly, i32*, i32, i8 zeroext, i32) local_unnamed_addr #2 {
  %6 = alloca [256 x i32], align 32
  %7 = alloca %struct.TXFM_2D_FLIP_CFG, align 8
  %8 = bitcast [256 x i32]* %6 to i8*
  call void @llvm.lifetime.start.p0i8(i64 1024, i8* nonnull %8) #5
  call void @llvm.memset.p0i8.i64(i8* nonnull align 32 %8, i8 -86, i64 1024, i1 false)
  %9 = getelementptr inbounds %struct.TXFM_2D_FLIP_CFG, %struct.TXFM_2D_FLIP_CFG* %7, i64 0, i32 0
  call void @llvm.lifetime.start.p0i8(i64 64, i8* nonnull %9) #5
  call void @llvm.memset.p0i8.i64(i8* nonnull align 8 %9, i8 -86, i64 64, i1 false)
  call void @av1_get_fwd_txfm_cfg(i8 zeroext %3, i8 zeroext 15, %struct.TXFM_2D_FLIP_CFG* nonnull %7)
  %10 = getelementptr inbounds [256 x i32], [256 x i32]* %6, i64 0, i64 0
  call fastcc void @fwd_txfm2d_c(i16* %0, i32* %1, i32 %2, %struct.TXFM_2D_FLIP_CFG* nonnull %7, i32* nonnull %10, i32 %4)
  call void @llvm.lifetime.end.p0i8(i64 64, i8* nonnull %9) #5
  call void @llvm.lifetime.end.p0i8(i64 1024, i8* nonnull %8) #5
  ret void
}

; Function Attrs: nounwind ssp uwtable
define hidden void @av1_fwd_txfm2d_32x8_c(i16* nocapture readonly, i32*, i32, i8 zeroext, i32) local_unnamed_addr #2 {
  %6 = alloca [256 x i32], align 16
  %7 = alloca %struct.TXFM_2D_FLIP_CFG, align 8
  %8 = bitcast [256 x i32]* %6 to i8*
  call void @llvm.lifetime.start.p0i8(i64 1024, i8* nonnull %8) #5
  call void @llvm.memset.p0i8.i64(i8* nonnull align 16 %8, i8 -86, i64 1024, i1 false)
  %9 = getelementptr inbounds %struct.TXFM_2D_FLIP_CFG, %struct.TXFM_2D_FLIP_CFG* %7, i64 0, i32 0
  call void @llvm.lifetime.start.p0i8(i64 64, i8* nonnull %9) #5
  call void @llvm.memset.p0i8.i64(i8* nonnull align 8 %9, i8 -86, i64 64, i1 false)
  call void @av1_get_fwd_txfm_cfg(i8 zeroext %3, i8 zeroext 16, %struct.TXFM_2D_FLIP_CFG* nonnull %7)
  %10 = getelementptr inbounds [256 x i32], [256 x i32]* %6, i64 0, i64 0
  call fastcc void @fwd_txfm2d_c(i16* %0, i32* %1, i32 %2, %struct.TXFM_2D_FLIP_CFG* nonnull %7, i32* nonnull %10, i32 %4)
  call void @llvm.lifetime.end.p0i8(i64 64, i8* nonnull %9) #5
  call void @llvm.lifetime.end.p0i8(i64 1024, i8* nonnull %8) #5
  ret void
}

; Function Attrs: nounwind ssp uwtable
define hidden void @av1_fwd_txfm2d_4x4_c(i16* nocapture readonly, i32*, i32, i8 zeroext, i32) local_unnamed_addr #2 {
  %6 = alloca [16 x i32], align 16
  %7 = alloca %struct.TXFM_2D_FLIP_CFG, align 8
  %8 = bitcast [16 x i32]* %6 to i8*
  call void @llvm.lifetime.start.p0i8(i64 64, i8* nonnull %8) #5
  call void @llvm.memset.p0i8.i64(i8* nonnull align 16 %8, i8 -86, i64 64, i1 false)
  %9 = getelementptr inbounds %struct.TXFM_2D_FLIP_CFG, %struct.TXFM_2D_FLIP_CFG* %7, i64 0, i32 0
  call void @llvm.lifetime.start.p0i8(i64 64, i8* nonnull %9) #5
  call void @llvm.memset.p0i8.i64(i8* nonnull align 8 %9, i8 -86, i64 64, i1 false)
  call void @av1_get_fwd_txfm_cfg(i8 zeroext %3, i8 zeroext 0, %struct.TXFM_2D_FLIP_CFG* nonnull %7)
  %10 = getelementptr inbounds [16 x i32], [16 x i32]* %6, i64 0, i64 0
  call fastcc void @fwd_txfm2d_c(i16* %0, i32* %1, i32 %2, %struct.TXFM_2D_FLIP_CFG* nonnull %7, i32* nonnull %10, i32 %4)
  call void @llvm.lifetime.end.p0i8(i64 64, i8* nonnull %9) #5
  call void @llvm.lifetime.end.p0i8(i64 64, i8* nonnull %8) #5
  ret void
}

; Function Attrs: nounwind ssp uwtable
define hidden void @av1_fwd_txfm2d_8x8_c(i16* nocapture readonly, i32*, i32, i8 zeroext, i32) local_unnamed_addr #2 {
  %6 = alloca [64 x i32], align 16
  %7 = alloca %struct.TXFM_2D_FLIP_CFG, align 8
  %8 = bitcast [64 x i32]* %6 to i8*
  call void @llvm.lifetime.start.p0i8(i64 256, i8* nonnull %8) #5
  call void @llvm.memset.p0i8.i64(i8* nonnull align 16 %8, i8 -86, i64 256, i1 false)
  %9 = getelementptr inbounds %struct.TXFM_2D_FLIP_CFG, %struct.TXFM_2D_FLIP_CFG* %7, i64 0, i32 0
  call void @llvm.lifetime.start.p0i8(i64 64, i8* nonnull %9) #5
  call void @llvm.memset.p0i8.i64(i8* nonnull align 8 %9, i8 -86, i64 64, i1 false)
  call void @av1_get_fwd_txfm_cfg(i8 zeroext %3, i8 zeroext 1, %struct.TXFM_2D_FLIP_CFG* nonnull %7)
  %10 = getelementptr inbounds [64 x i32], [64 x i32]* %6, i64 0, i64 0
  call fastcc void @fwd_txfm2d_c(i16* %0, i32* %1, i32 %2, %struct.TXFM_2D_FLIP_CFG* nonnull %7, i32* nonnull %10, i32 %4)
  call void @llvm.lifetime.end.p0i8(i64 64, i8* nonnull %9) #5
  call void @llvm.lifetime.end.p0i8(i64 256, i8* nonnull %8) #5
  ret void
}

; Function Attrs: nounwind ssp uwtable
define hidden void @av1_fwd_txfm2d_16x16_c(i16* nocapture readonly, i32*, i32, i8 zeroext, i32) local_unnamed_addr #2 {
  %6 = alloca [256 x i32], align 16
  %7 = alloca %struct.TXFM_2D_FLIP_CFG, align 8
  %8 = bitcast [256 x i32]* %6 to i8*
  call void @llvm.lifetime.start.p0i8(i64 1024, i8* nonnull %8) #5
  call void @llvm.memset.p0i8.i64(i8* nonnull align 16 %8, i8 -86, i64 1024, i1 false)
  %9 = getelementptr inbounds %struct.TXFM_2D_FLIP_CFG, %struct.TXFM_2D_FLIP_CFG* %7, i64 0, i32 0
  call void @llvm.lifetime.start.p0i8(i64 64, i8* nonnull %9) #5
  call void @llvm.memset.p0i8.i64(i8* nonnull align 8 %9, i8 -86, i64 64, i1 false)
  call void @av1_get_fwd_txfm_cfg(i8 zeroext %3, i8 zeroext 2, %struct.TXFM_2D_FLIP_CFG* nonnull %7)
  %10 = getelementptr inbounds [256 x i32], [256 x i32]* %6, i64 0, i64 0
  call fastcc void @fwd_txfm2d_c(i16* %0, i32* %1, i32 %2, %struct.TXFM_2D_FLIP_CFG* nonnull %7, i32* nonnull %10, i32 %4)
  call void @llvm.lifetime.end.p0i8(i64 64, i8* nonnull %9) #5
  call void @llvm.lifetime.end.p0i8(i64 1024, i8* nonnull %8) #5
  ret void
}

; Function Attrs: nounwind ssp uwtable
define hidden void @av1_fwd_txfm2d_32x32_c(i16* nocapture readonly, i32*, i32, i8 zeroext, i32) local_unnamed_addr #2 {
  %6 = alloca [1024 x i32], align 16
  %7 = alloca %struct.TXFM_2D_FLIP_CFG, align 8
  %8 = bitcast [1024 x i32]* %6 to i8*
  call void @llvm.lifetime.start.p0i8(i64 4096, i8* nonnull %8) #5
  call void @llvm.memset.p0i8.i64(i8* nonnull align 16 %8, i8 -86, i64 4096, i1 false)
  %9 = getelementptr inbounds %struct.TXFM_2D_FLIP_CFG, %struct.TXFM_2D_FLIP_CFG* %7, i64 0, i32 0
  call void @llvm.lifetime.start.p0i8(i64 64, i8* nonnull %9) #5
  call void @llvm.memset.p0i8.i64(i8* nonnull align 8 %9, i8 -86, i64 64, i1 false)
  call void @av1_get_fwd_txfm_cfg(i8 zeroext %3, i8 zeroext 3, %struct.TXFM_2D_FLIP_CFG* nonnull %7)
  %10 = getelementptr inbounds [1024 x i32], [1024 x i32]* %6, i64 0, i64 0
  call fastcc void @fwd_txfm2d_c(i16* %0, i32* %1, i32 %2, %struct.TXFM_2D_FLIP_CFG* nonnull %7, i32* nonnull %10, i32 %4)
  call void @llvm.lifetime.end.p0i8(i64 64, i8* nonnull %9) #5
  call void @llvm.lifetime.end.p0i8(i64 4096, i8* nonnull %8) #5
  ret void
}

; Function Attrs: nounwind ssp uwtable
define hidden void @av1_fwd_txfm2d_64x64_c(i16* nocapture readonly, i32*, i32, i8 zeroext, i32) local_unnamed_addr #2 {
  %6 = alloca [4096 x i32], align 16
  %7 = alloca %struct.TXFM_2D_FLIP_CFG, align 8
  %8 = bitcast [4096 x i32]* %6 to i8*
  call void @llvm.lifetime.start.p0i8(i64 16384, i8* nonnull %8) #5
  call void @llvm.memset.p0i8.i64(i8* nonnull align 16 %8, i8 -86, i64 16384, i1 false)
  %9 = getelementptr inbounds %struct.TXFM_2D_FLIP_CFG, %struct.TXFM_2D_FLIP_CFG* %7, i64 0, i32 0
  call void @llvm.lifetime.start.p0i8(i64 64, i8* nonnull %9) #5
  call void @llvm.memset.p0i8.i64(i8* nonnull align 8 %9, i8 -86, i64 64, i1 false)
  call void @av1_get_fwd_txfm_cfg(i8 zeroext %3, i8 zeroext 4, %struct.TXFM_2D_FLIP_CFG* nonnull %7)
  %10 = getelementptr inbounds [4096 x i32], [4096 x i32]* %6, i64 0, i64 0
  call fastcc void @fwd_txfm2d_c(i16* %0, i32* %1, i32 %2, %struct.TXFM_2D_FLIP_CFG* nonnull %7, i32* nonnull %10, i32 %4)
  %11 = getelementptr inbounds i32, i32* %1, i64 32
  %12 = bitcast i32* %11 to i8*
  call void @llvm.memset.p0i8.i64(i8* align 4 %12, i8 0, i64 128, i1 false)
  %13 = getelementptr inbounds i32, i32* %1, i64 96
  %14 = bitcast i32* %13 to i8*
  call void @llvm.memset.p0i8.i64(i8* align 4 %14, i8 0, i64 128, i1 false)
  %15 = getelementptr inbounds i32, i32* %1, i64 160
  %16 = bitcast i32* %15 to i8*
  call void @llvm.memset.p0i8.i64(i8* align 4 %16, i8 0, i64 128, i1 false)
  %17 = getelementptr inbounds i32, i32* %1, i64 224
  %18 = bitcast i32* %17 to i8*
  call void @llvm.memset.p0i8.i64(i8* align 4 %18, i8 0, i64 128, i1 false)
  %19 = getelementptr inbounds i32, i32* %1, i64 288
  %20 = bitcast i32* %19 to i8*
  call void @llvm.memset.p0i8.i64(i8* align 4 %20, i8 0, i64 128, i1 false)
  %21 = getelementptr inbounds i32, i32* %1, i64 352
  %22 = bitcast i32* %21 to i8*
  call void @llvm.memset.p0i8.i64(i8* align 4 %22, i8 0, i64 128, i1 false)
  %23 = getelementptr inbounds i32, i32* %1, i64 416
  %24 = bitcast i32* %23 to i8*
  call void @llvm.memset.p0i8.i64(i8* align 4 %24, i8 0, i64 128, i1 false)
  %25 = getelementptr inbounds i32, i32* %1, i64 480
  %26 = bitcast i32* %25 to i8*
  call void @llvm.memset.p0i8.i64(i8* align 4 %26, i8 0, i64 128, i1 false)
  %27 = getelementptr inbounds i32, i32* %1, i64 544
  %28 = bitcast i32* %27 to i8*
  call void @llvm.memset.p0i8.i64(i8* align 4 %28, i8 0, i64 128, i1 false)
  %29 = getelementptr inbounds i32, i32* %1, i64 608
  %30 = bitcast i32* %29 to i8*
  call void @llvm.memset.p0i8.i64(i8* align 4 %30, i8 0, i64 128, i1 false)
  %31 = getelementptr inbounds i32, i32* %1, i64 672
  %32 = bitcast i32* %31 to i8*
  call void @llvm.memset.p0i8.i64(i8* align 4 %32, i8 0, i64 128, i1 false)
  %33 = getelementptr inbounds i32, i32* %1, i64 736
  %34 = bitcast i32* %33 to i8*
  call void @llvm.memset.p0i8.i64(i8* align 4 %34, i8 0, i64 128, i1 false)
  %35 = getelementptr inbounds i32, i32* %1, i64 800
  %36 = bitcast i32* %35 to i8*
  call void @llvm.memset.p0i8.i64(i8* align 4 %36, i8 0, i64 128, i1 false)
  %37 = getelementptr inbounds i32, i32* %1, i64 864
  %38 = bitcast i32* %37 to i8*
  call void @llvm.memset.p0i8.i64(i8* align 4 %38, i8 0, i64 128, i1 false)
  %39 = getelementptr inbounds i32, i32* %1, i64 928
  %40 = bitcast i32* %39 to i8*
  call void @llvm.memset.p0i8.i64(i8* align 4 %40, i8 0, i64 128, i1 false)
  %41 = getelementptr inbounds i32, i32* %1, i64 992
  %42 = bitcast i32* %41 to i8*
  call void @llvm.memset.p0i8.i64(i8* align 4 %42, i8 0, i64 128, i1 false)
  %43 = getelementptr inbounds i32, i32* %1, i64 1056
  %44 = bitcast i32* %43 to i8*
  call void @llvm.memset.p0i8.i64(i8* align 4 %44, i8 0, i64 128, i1 false)
  %45 = getelementptr inbounds i32, i32* %1, i64 1120
  %46 = bitcast i32* %45 to i8*
  call void @llvm.memset.p0i8.i64(i8* align 4 %46, i8 0, i64 128, i1 false)
  %47 = getelementptr inbounds i32, i32* %1, i64 1184
  %48 = bitcast i32* %47 to i8*
  call void @llvm.memset.p0i8.i64(i8* align 4 %48, i8 0, i64 128, i1 false)
  %49 = getelementptr inbounds i32, i32* %1, i64 1248
  %50 = bitcast i32* %49 to i8*
  call void @llvm.memset.p0i8.i64(i8* align 4 %50, i8 0, i64 128, i1 false)
  %51 = getelementptr inbounds i32, i32* %1, i64 1312
  %52 = bitcast i32* %51 to i8*
  call void @llvm.memset.p0i8.i64(i8* align 4 %52, i8 0, i64 128, i1 false)
  %53 = getelementptr inbounds i32, i32* %1, i64 1376
  %54 = bitcast i32* %53 to i8*
  call void @llvm.memset.p0i8.i64(i8* align 4 %54, i8 0, i64 128, i1 false)
  %55 = getelementptr inbounds i32, i32* %1, i64 1440
  %56 = bitcast i32* %55 to i8*
  call void @llvm.memset.p0i8.i64(i8* align 4 %56, i8 0, i64 128, i1 false)
  %57 = getelementptr inbounds i32, i32* %1, i64 1504
  %58 = bitcast i32* %57 to i8*
  call void @llvm.memset.p0i8.i64(i8* align 4 %58, i8 0, i64 128, i1 false)
  %59 = getelementptr inbounds i32, i32* %1, i64 1568
  %60 = bitcast i32* %59 to i8*
  call void @llvm.memset.p0i8.i64(i8* align 4 %60, i8 0, i64 128, i1 false)
  %61 = getelementptr inbounds i32, i32* %1, i64 1632
  %62 = bitcast i32* %61 to i8*
  call void @llvm.memset.p0i8.i64(i8* align 4 %62, i8 0, i64 128, i1 false)
  %63 = getelementptr inbounds i32, i32* %1, i64 1696
  %64 = bitcast i32* %63 to i8*
  call void @llvm.memset.p0i8.i64(i8* align 4 %64, i8 0, i64 128, i1 false)
  %65 = getelementptr inbounds i32, i32* %1, i64 1760
  %66 = bitcast i32* %65 to i8*
  call void @llvm.memset.p0i8.i64(i8* align 4 %66, i8 0, i64 128, i1 false)
  %67 = getelementptr inbounds i32, i32* %1, i64 1824
  %68 = bitcast i32* %67 to i8*
  call void @llvm.memset.p0i8.i64(i8* align 4 %68, i8 0, i64 128, i1 false)
  %69 = getelementptr inbounds i32, i32* %1, i64 1888
  %70 = bitcast i32* %69 to i8*
  call void @llvm.memset.p0i8.i64(i8* align 4 %70, i8 0, i64 128, i1 false)
  %71 = getelementptr inbounds i32, i32* %1, i64 1952
  %72 = bitcast i32* %71 to i8*
  call void @llvm.memset.p0i8.i64(i8* align 4 %72, i8 0, i64 128, i1 false)
  %73 = getelementptr inbounds i32, i32* %1, i64 2016
  %74 = bitcast i32* %73 to i8*
  call void @llvm.memset.p0i8.i64(i8* align 4 %74, i8 0, i64 128, i1 false)
  %75 = getelementptr inbounds i32, i32* %1, i64 2048
  %76 = bitcast i32* %75 to i8*
  call void @llvm.memset.p0i8.i64(i8* align 4 %76, i8 0, i64 8192, i1 false)
  br label %78

77:                                               ; preds = %78
  call void @llvm.lifetime.end.p0i8(i64 64, i8* nonnull %9) #5
  call void @llvm.lifetime.end.p0i8(i64 16384, i8* nonnull %8) #5
  ret void

78:                                               ; preds = %88, %5
  %79 = phi i64 [ 1, %5 ], [ %95, %88 ]
  %80 = shl nsw i64 %79, 5
  %81 = getelementptr inbounds i32, i32* %1, i64 %80
  %82 = bitcast i32* %81 to i8*
  %83 = shl nsw i64 %79, 6
  %84 = getelementptr inbounds i32, i32* %1, i64 %83
  %85 = bitcast i32* %84 to i8*
  call void @llvm.memcpy.p0i8.p0i8.i64(i8* align 4 %82, i8* align 4 %85, i64 128, i1 false)
  %86 = add nuw nsw i64 %79, 1
  %87 = icmp eq i64 %86, 32
  br i1 %87, label %77, label %88

88:                                               ; preds = %78
  %89 = shl nsw i64 %86, 5
  %90 = getelementptr inbounds i32, i32* %1, i64 %89
  %91 = bitcast i32* %90 to i8*
  %92 = shl nsw i64 %86, 6
  %93 = getelementptr inbounds i32, i32* %1, i64 %92
  %94 = bitcast i32* %93 to i8*
  call void @llvm.memcpy.p0i8.p0i8.i64(i8* align 4 %91, i8* align 4 %94, i64 128, i1 false)
  %95 = add nuw nsw i64 %79, 2
  br label %78
}

; Function Attrs: argmemonly nounwind
declare void @llvm.memcpy.p0i8.p0i8.i64(i8* nocapture writeonly, i8* nocapture readonly, i64, i1 immarg) #1

; Function Attrs: nounwind ssp uwtable
define hidden void @av1_fwd_txfm2d_32x64_c(i16* nocapture readonly, i32*, i32, i8 zeroext, i32) local_unnamed_addr #2 {
  %6 = alloca [2048 x i32], align 32
  %7 = alloca %struct.TXFM_2D_FLIP_CFG, align 8
  %8 = bitcast [2048 x i32]* %6 to i8*
  call void @llvm.lifetime.start.p0i8(i64 8192, i8* nonnull %8) #5
  call void @llvm.memset.p0i8.i64(i8* nonnull align 32 %8, i8 -86, i64 8192, i1 false)
  %9 = getelementptr inbounds %struct.TXFM_2D_FLIP_CFG, %struct.TXFM_2D_FLIP_CFG* %7, i64 0, i32 0
  call void @llvm.lifetime.start.p0i8(i64 64, i8* nonnull %9) #5
  call void @llvm.memset.p0i8.i64(i8* nonnull align 8 %9, i8 -86, i64 64, i1 false)
  call void @av1_get_fwd_txfm_cfg(i8 zeroext %3, i8 zeroext 11, %struct.TXFM_2D_FLIP_CFG* nonnull %7)
  %10 = getelementptr inbounds [2048 x i32], [2048 x i32]* %6, i64 0, i64 0
  call fastcc void @fwd_txfm2d_c(i16* %0, i32* %1, i32 %2, %struct.TXFM_2D_FLIP_CFG* nonnull %7, i32* nonnull %10, i32 %4)
  %11 = getelementptr inbounds i32, i32* %1, i64 1024
  %12 = bitcast i32* %11 to i8*
  call void @llvm.memset.p0i8.i64(i8* align 4 %12, i8 0, i64 4096, i1 false)
  call void @llvm.lifetime.end.p0i8(i64 64, i8* nonnull %9) #5
  call void @llvm.lifetime.end.p0i8(i64 8192, i8* nonnull %8) #5
  ret void
}

; Function Attrs: nounwind ssp uwtable
define hidden void @av1_fwd_txfm2d_64x32_c(i16* nocapture readonly, i32*, i32, i8 zeroext, i32) local_unnamed_addr #2 {
  %6 = alloca [2048 x i32], align 16
  %7 = alloca %struct.TXFM_2D_FLIP_CFG, align 8
  %8 = bitcast [2048 x i32]* %6 to i8*
  call void @llvm.lifetime.start.p0i8(i64 8192, i8* nonnull %8) #5
  call void @llvm.memset.p0i8.i64(i8* nonnull align 16 %8, i8 -86, i64 8192, i1 false)
  %9 = getelementptr inbounds %struct.TXFM_2D_FLIP_CFG, %struct.TXFM_2D_FLIP_CFG* %7, i64 0, i32 0
  call void @llvm.lifetime.start.p0i8(i64 64, i8* nonnull %9) #5
  call void @llvm.memset.p0i8.i64(i8* nonnull align 8 %9, i8 -86, i64 64, i1 false)
  call void @av1_get_fwd_txfm_cfg(i8 zeroext %3, i8 zeroext 12, %struct.TXFM_2D_FLIP_CFG* nonnull %7)
  %10 = getelementptr inbounds [2048 x i32], [2048 x i32]* %6, i64 0, i64 0
  call fastcc void @fwd_txfm2d_c(i16* %0, i32* %1, i32 %2, %struct.TXFM_2D_FLIP_CFG* nonnull %7, i32* nonnull %10, i32 %4)
  %11 = getelementptr inbounds i32, i32* %1, i64 32
  %12 = bitcast i32* %11 to i8*
  call void @llvm.memset.p0i8.i64(i8* align 4 %12, i8 0, i64 128, i1 false)
  %13 = getelementptr inbounds i32, i32* %1, i64 96
  %14 = bitcast i32* %13 to i8*
  call void @llvm.memset.p0i8.i64(i8* align 4 %14, i8 0, i64 128, i1 false)
  %15 = getelementptr inbounds i32, i32* %1, i64 160
  %16 = bitcast i32* %15 to i8*
  call void @llvm.memset.p0i8.i64(i8* align 4 %16, i8 0, i64 128, i1 false)
  %17 = getelementptr inbounds i32, i32* %1, i64 224
  %18 = bitcast i32* %17 to i8*
  call void @llvm.memset.p0i8.i64(i8* align 4 %18, i8 0, i64 128, i1 false)
  %19 = getelementptr inbounds i32, i32* %1, i64 288
  %20 = bitcast i32* %19 to i8*
  call void @llvm.memset.p0i8.i64(i8* align 4 %20, i8 0, i64 128, i1 false)
  %21 = getelementptr inbounds i32, i32* %1, i64 352
  %22 = bitcast i32* %21 to i8*
  call void @llvm.memset.p0i8.i64(i8* align 4 %22, i8 0, i64 128, i1 false)
  %23 = getelementptr inbounds i32, i32* %1, i64 416
  %24 = bitcast i32* %23 to i8*
  call void @llvm.memset.p0i8.i64(i8* align 4 %24, i8 0, i64 128, i1 false)
  %25 = getelementptr inbounds i32, i32* %1, i64 480
  %26 = bitcast i32* %25 to i8*
  call void @llvm.memset.p0i8.i64(i8* align 4 %26, i8 0, i64 128, i1 false)
  %27 = getelementptr inbounds i32, i32* %1, i64 544
  %28 = bitcast i32* %27 to i8*
  call void @llvm.memset.p0i8.i64(i8* align 4 %28, i8 0, i64 128, i1 false)
  %29 = getelementptr inbounds i32, i32* %1, i64 608
  %30 = bitcast i32* %29 to i8*
  call void @llvm.memset.p0i8.i64(i8* align 4 %30, i8 0, i64 128, i1 false)
  %31 = getelementptr inbounds i32, i32* %1, i64 672
  %32 = bitcast i32* %31 to i8*
  call void @llvm.memset.p0i8.i64(i8* align 4 %32, i8 0, i64 128, i1 false)
  %33 = getelementptr inbounds i32, i32* %1, i64 736
  %34 = bitcast i32* %33 to i8*
  call void @llvm.memset.p0i8.i64(i8* align 4 %34, i8 0, i64 128, i1 false)
  %35 = getelementptr inbounds i32, i32* %1, i64 800
  %36 = bitcast i32* %35 to i8*
  call void @llvm.memset.p0i8.i64(i8* align 4 %36, i8 0, i64 128, i1 false)
  %37 = getelementptr inbounds i32, i32* %1, i64 864
  %38 = bitcast i32* %37 to i8*
  call void @llvm.memset.p0i8.i64(i8* align 4 %38, i8 0, i64 128, i1 false)
  %39 = getelementptr inbounds i32, i32* %1, i64 928
  %40 = bitcast i32* %39 to i8*
  call void @llvm.memset.p0i8.i64(i8* align 4 %40, i8 0, i64 128, i1 false)
  %41 = getelementptr inbounds i32, i32* %1, i64 992
  %42 = bitcast i32* %41 to i8*
  call void @llvm.memset.p0i8.i64(i8* align 4 %42, i8 0, i64 128, i1 false)
  %43 = getelementptr inbounds i32, i32* %1, i64 1056
  %44 = bitcast i32* %43 to i8*
  call void @llvm.memset.p0i8.i64(i8* align 4 %44, i8 0, i64 128, i1 false)
  %45 = getelementptr inbounds i32, i32* %1, i64 1120
  %46 = bitcast i32* %45 to i8*
  call void @llvm.memset.p0i8.i64(i8* align 4 %46, i8 0, i64 128, i1 false)
  %47 = getelementptr inbounds i32, i32* %1, i64 1184
  %48 = bitcast i32* %47 to i8*
  call void @llvm.memset.p0i8.i64(i8* align 4 %48, i8 0, i64 128, i1 false)
  %49 = getelementptr inbounds i32, i32* %1, i64 1248
  %50 = bitcast i32* %49 to i8*
  call void @llvm.memset.p0i8.i64(i8* align 4 %50, i8 0, i64 128, i1 false)
  %51 = getelementptr inbounds i32, i32* %1, i64 1312
  %52 = bitcast i32* %51 to i8*
  call void @llvm.memset.p0i8.i64(i8* align 4 %52, i8 0, i64 128, i1 false)
  %53 = getelementptr inbounds i32, i32* %1, i64 1376
  %54 = bitcast i32* %53 to i8*
  call void @llvm.memset.p0i8.i64(i8* align 4 %54, i8 0, i64 128, i1 false)
  %55 = getelementptr inbounds i32, i32* %1, i64 1440
  %56 = bitcast i32* %55 to i8*
  call void @llvm.memset.p0i8.i64(i8* align 4 %56, i8 0, i64 128, i1 false)
  %57 = getelementptr inbounds i32, i32* %1, i64 1504
  %58 = bitcast i32* %57 to i8*
  call void @llvm.memset.p0i8.i64(i8* align 4 %58, i8 0, i64 128, i1 false)
  %59 = getelementptr inbounds i32, i32* %1, i64 1568
  %60 = bitcast i32* %59 to i8*
  call void @llvm.memset.p0i8.i64(i8* align 4 %60, i8 0, i64 128, i1 false)
  %61 = getelementptr inbounds i32, i32* %1, i64 1632
  %62 = bitcast i32* %61 to i8*
  call void @llvm.memset.p0i8.i64(i8* align 4 %62, i8 0, i64 128, i1 false)
  %63 = getelementptr inbounds i32, i32* %1, i64 1696
  %64 = bitcast i32* %63 to i8*
  call void @llvm.memset.p0i8.i64(i8* align 4 %64, i8 0, i64 128, i1 false)
  %65 = getelementptr inbounds i32, i32* %1, i64 1760
  %66 = bitcast i32* %65 to i8*
  call void @llvm.memset.p0i8.i64(i8* align 4 %66, i8 0, i64 128, i1 false)
  %67 = getelementptr inbounds i32, i32* %1, i64 1824
  %68 = bitcast i32* %67 to i8*
  call void @llvm.memset.p0i8.i64(i8* align 4 %68, i8 0, i64 128, i1 false)
  %69 = getelementptr inbounds i32, i32* %1, i64 1888
  %70 = bitcast i32* %69 to i8*
  call void @llvm.memset.p0i8.i64(i8* align 4 %70, i8 0, i64 128, i1 false)
  %71 = getelementptr inbounds i32, i32* %1, i64 1952
  %72 = bitcast i32* %71 to i8*
  call void @llvm.memset.p0i8.i64(i8* align 4 %72, i8 0, i64 128, i1 false)
  %73 = getelementptr inbounds i32, i32* %1, i64 2016
  %74 = bitcast i32* %73 to i8*
  call void @llvm.memset.p0i8.i64(i8* align 4 %74, i8 0, i64 128, i1 false)
  br label %76

75:                                               ; preds = %76
  call void @llvm.lifetime.end.p0i8(i64 64, i8* nonnull %9) #5
  call void @llvm.lifetime.end.p0i8(i64 8192, i8* nonnull %8) #5
  ret void

76:                                               ; preds = %86, %5
  %77 = phi i64 [ 1, %5 ], [ %93, %86 ]
  %78 = shl nsw i64 %77, 5
  %79 = getelementptr inbounds i32, i32* %1, i64 %78
  %80 = bitcast i32* %79 to i8*
  %81 = shl nsw i64 %77, 6
  %82 = getelementptr inbounds i32, i32* %1, i64 %81
  %83 = bitcast i32* %82 to i8*
  call void @llvm.memcpy.p0i8.p0i8.i64(i8* align 4 %80, i8* align 4 %83, i64 128, i1 false)
  %84 = add nuw nsw i64 %77, 1
  %85 = icmp eq i64 %84, 32
  br i1 %85, label %75, label %86

86:                                               ; preds = %76
  %87 = shl nsw i64 %84, 5
  %88 = getelementptr inbounds i32, i32* %1, i64 %87
  %89 = bitcast i32* %88 to i8*
  %90 = shl nsw i64 %84, 6
  %91 = getelementptr inbounds i32, i32* %1, i64 %90
  %92 = bitcast i32* %91 to i8*
  call void @llvm.memcpy.p0i8.p0i8.i64(i8* align 4 %89, i8* align 4 %92, i64 128, i1 false)
  %93 = add nuw nsw i64 %77, 2
  br label %76
}

; Function Attrs: nounwind ssp uwtable
define hidden void @av1_fwd_txfm2d_16x64_c(i16* nocapture readonly, i32*, i32, i8 zeroext, i32) local_unnamed_addr #2 {
  %6 = alloca [1024 x i32], align 32
  %7 = alloca %struct.TXFM_2D_FLIP_CFG, align 8
  %8 = bitcast [1024 x i32]* %6 to i8*
  call void @llvm.lifetime.start.p0i8(i64 4096, i8* nonnull %8) #5
  call void @llvm.memset.p0i8.i64(i8* nonnull align 32 %8, i8 -86, i64 4096, i1 false)
  %9 = getelementptr inbounds %struct.TXFM_2D_FLIP_CFG, %struct.TXFM_2D_FLIP_CFG* %7, i64 0, i32 0
  call void @llvm.lifetime.start.p0i8(i64 64, i8* nonnull %9) #5
  call void @llvm.memset.p0i8.i64(i8* nonnull align 8 %9, i8 -86, i64 64, i1 false)
  call void @av1_get_fwd_txfm_cfg(i8 zeroext %3, i8 zeroext 17, %struct.TXFM_2D_FLIP_CFG* nonnull %7)
  %10 = getelementptr inbounds [1024 x i32], [1024 x i32]* %6, i64 0, i64 0
  call fastcc void @fwd_txfm2d_c(i16* %0, i32* %1, i32 %2, %struct.TXFM_2D_FLIP_CFG* nonnull %7, i32* nonnull %10, i32 %4)
  %11 = getelementptr inbounds i32, i32* %1, i64 512
  %12 = bitcast i32* %11 to i8*
  call void @llvm.memset.p0i8.i64(i8* align 4 %12, i8 0, i64 2048, i1 false)
  call void @llvm.lifetime.end.p0i8(i64 64, i8* nonnull %9) #5
  call void @llvm.lifetime.end.p0i8(i64 4096, i8* nonnull %8) #5
  ret void
}

; Function Attrs: nounwind ssp uwtable
define hidden void @av1_fwd_txfm2d_64x16_c(i16* nocapture readonly, i32*, i32, i8 zeroext, i32) local_unnamed_addr #2 {
  %6 = alloca [1024 x i32], align 16
  %7 = alloca %struct.TXFM_2D_FLIP_CFG, align 8
  %8 = bitcast [1024 x i32]* %6 to i8*
  call void @llvm.lifetime.start.p0i8(i64 4096, i8* nonnull %8) #5
  call void @llvm.memset.p0i8.i64(i8* nonnull align 16 %8, i8 -86, i64 4096, i1 false)
  %9 = getelementptr inbounds %struct.TXFM_2D_FLIP_CFG, %struct.TXFM_2D_FLIP_CFG* %7, i64 0, i32 0
  call void @llvm.lifetime.start.p0i8(i64 64, i8* nonnull %9) #5
  call void @llvm.memset.p0i8.i64(i8* nonnull align 8 %9, i8 -86, i64 64, i1 false)
  call void @av1_get_fwd_txfm_cfg(i8 zeroext %3, i8 zeroext 18, %struct.TXFM_2D_FLIP_CFG* nonnull %7)
  %10 = getelementptr inbounds [1024 x i32], [1024 x i32]* %6, i64 0, i64 0
  call fastcc void @fwd_txfm2d_c(i16* %0, i32* %1, i32 %2, %struct.TXFM_2D_FLIP_CFG* nonnull %7, i32* nonnull %10, i32 %4)
  %11 = getelementptr inbounds i32, i32* %1, i64 32
  %12 = bitcast i32* %11 to i8*
  %13 = getelementptr inbounds i32, i32* %1, i64 544
  %14 = bitcast i32* %13 to i8*
  call void @llvm.memset.p0i8.i64(i8* align 4 %14, i8 0, i64 128, i1 false)
  %15 = getelementptr inbounds i32, i32* %1, i64 608
  %16 = bitcast i32* %15 to i8*
  call void @llvm.memset.p0i8.i64(i8* align 4 %16, i8 0, i64 128, i1 false)
  %17 = getelementptr inbounds i32, i32* %1, i64 672
  %18 = bitcast i32* %17 to i8*
  call void @llvm.memset.p0i8.i64(i8* align 4 %18, i8 0, i64 128, i1 false)
  %19 = getelementptr inbounds i32, i32* %1, i64 736
  %20 = bitcast i32* %19 to i8*
  call void @llvm.memset.p0i8.i64(i8* align 4 %20, i8 0, i64 128, i1 false)
  %21 = getelementptr inbounds i32, i32* %1, i64 800
  %22 = bitcast i32* %21 to i8*
  call void @llvm.memset.p0i8.i64(i8* align 4 %22, i8 0, i64 128, i1 false)
  %23 = getelementptr inbounds i32, i32* %1, i64 864
  %24 = bitcast i32* %23 to i8*
  call void @llvm.memset.p0i8.i64(i8* align 4 %24, i8 0, i64 128, i1 false)
  %25 = getelementptr inbounds i32, i32* %1, i64 928
  %26 = bitcast i32* %25 to i8*
  call void @llvm.memset.p0i8.i64(i8* align 4 %26, i8 0, i64 128, i1 false)
  %27 = getelementptr inbounds i32, i32* %1, i64 992
  %28 = bitcast i32* %27 to i8*
  call void @llvm.memset.p0i8.i64(i8* align 4 %28, i8 0, i64 128, i1 false)
  %29 = getelementptr inbounds i32, i32* %1, i64 64
  %30 = bitcast i32* %29 to i8*
  call void @llvm.memcpy.p0i8.p0i8.i64(i8* align 4 %12, i8* align 4 %30, i64 128, i1 false)
  %31 = getelementptr inbounds i32, i32* %1, i64 128
  %32 = bitcast i32* %31 to i8*
  call void @llvm.memcpy.p0i8.p0i8.i64(i8* align 4 %30, i8* align 4 %32, i64 128, i1 false)
  %33 = getelementptr inbounds i32, i32* %1, i64 96
  %34 = bitcast i32* %33 to i8*
  %35 = getelementptr inbounds i32, i32* %1, i64 192
  %36 = bitcast i32* %35 to i8*
  call void @llvm.memcpy.p0i8.p0i8.i64(i8* align 4 %34, i8* align 4 %36, i64 128, i1 false)
  %37 = getelementptr inbounds i32, i32* %1, i64 256
  %38 = bitcast i32* %37 to i8*
  call void @llvm.memcpy.p0i8.p0i8.i64(i8* align 4 %32, i8* align 4 %38, i64 128, i1 false)
  %39 = getelementptr inbounds i32, i32* %1, i64 160
  %40 = bitcast i32* %39 to i8*
  %41 = getelementptr inbounds i32, i32* %1, i64 320
  %42 = bitcast i32* %41 to i8*
  call void @llvm.memcpy.p0i8.p0i8.i64(i8* align 4 %40, i8* align 4 %42, i64 128, i1 false)
  %43 = getelementptr inbounds i32, i32* %1, i64 384
  %44 = bitcast i32* %43 to i8*
  call void @llvm.memcpy.p0i8.p0i8.i64(i8* align 4 %36, i8* align 4 %44, i64 128, i1 false)
  %45 = getelementptr inbounds i32, i32* %1, i64 224
  %46 = bitcast i32* %45 to i8*
  %47 = getelementptr inbounds i32, i32* %1, i64 448
  %48 = bitcast i32* %47 to i8*
  call void @llvm.memcpy.p0i8.p0i8.i64(i8* align 4 %46, i8* align 4 %48, i64 128, i1 false)
  %49 = getelementptr inbounds i32, i32* %1, i64 512
  %50 = bitcast i32* %49 to i8*
  call void @llvm.memcpy.p0i8.p0i8.i64(i8* align 4 %38, i8* align 4 %50, i64 128, i1 false)
  %51 = getelementptr inbounds i32, i32* %1, i64 288
  %52 = bitcast i32* %51 to i8*
  %53 = getelementptr inbounds i32, i32* %1, i64 576
  %54 = bitcast i32* %53 to i8*
  call void @llvm.memcpy.p0i8.p0i8.i64(i8* align 4 %52, i8* align 4 %54, i64 128, i1 false)
  %55 = getelementptr inbounds i32, i32* %1, i64 640
  %56 = bitcast i32* %55 to i8*
  call void @llvm.memcpy.p0i8.p0i8.i64(i8* align 4 %42, i8* align 4 %56, i64 128, i1 false)
  %57 = getelementptr inbounds i32, i32* %1, i64 352
  %58 = bitcast i32* %57 to i8*
  %59 = getelementptr inbounds i32, i32* %1, i64 704
  %60 = bitcast i32* %59 to i8*
  call void @llvm.memcpy.p0i8.p0i8.i64(i8* align 4 %58, i8* align 4 %60, i64 128, i1 false)
  %61 = getelementptr inbounds i32, i32* %1, i64 768
  %62 = bitcast i32* %61 to i8*
  call void @llvm.memcpy.p0i8.p0i8.i64(i8* align 4 %44, i8* align 4 %62, i64 128, i1 false)
  %63 = getelementptr inbounds i32, i32* %1, i64 416
  %64 = bitcast i32* %63 to i8*
  %65 = getelementptr inbounds i32, i32* %1, i64 832
  %66 = bitcast i32* %65 to i8*
  call void @llvm.memcpy.p0i8.p0i8.i64(i8* align 4 %64, i8* align 4 %66, i64 128, i1 false)
  %67 = getelementptr inbounds i32, i32* %1, i64 896
  %68 = bitcast i32* %67 to i8*
  call void @llvm.memcpy.p0i8.p0i8.i64(i8* align 4 %48, i8* align 4 %68, i64 128, i1 false)
  %69 = getelementptr inbounds i32, i32* %1, i64 480
  %70 = bitcast i32* %69 to i8*
  %71 = getelementptr inbounds i32, i32* %1, i64 960
  %72 = bitcast i32* %71 to i8*
  call void @llvm.memcpy.p0i8.p0i8.i64(i8* align 4 %70, i8* align 4 %72, i64 128, i1 false)
  call void @llvm.lifetime.end.p0i8(i64 64, i8* nonnull %9) #5
  call void @llvm.lifetime.end.p0i8(i64 4096, i8* nonnull %8) #5
  ret void
}

declare void @av1_fdct4(i32*, i32*, i8 signext, i8*) local_unnamed_addr #4

declare void @av1_fdct8(i32*, i32*, i8 signext, i8*) local_unnamed_addr #4

declare void @av1_fdct16(i32*, i32*, i8 signext, i8*) local_unnamed_addr #4

declare void @av1_fdct32(i32*, i32*, i8 signext, i8*) local_unnamed_addr #4

declare void @av1_fdct64(i32*, i32*, i8 signext, i8*) local_unnamed_addr #4

declare void @av1_fadst4(i32*, i32*, i8 signext, i8*) local_unnamed_addr #4

declare void @av1_fadst8(i32*, i32*, i8 signext, i8*) local_unnamed_addr #4

declare void @av1_fadst16(i32*, i32*, i8 signext, i8*) local_unnamed_addr #4

declare void @av1_fidentity4_c(i32*, i32*, i8 signext, i8*) local_unnamed_addr #4

declare void @av1_fidentity8_c(i32*, i32*, i8 signext, i8*) local_unnamed_addr #4

declare void @av1_fidentity16_c(i32*, i32*, i8 signext, i8*) local_unnamed_addr #4

declare void @av1_fidentity32_c(i32*, i32*, i8 signext, i8*) local_unnamed_addr #4

attributes #0 = { nofree norecurse nounwind ssp uwtable "correctly-rounded-divide-sqrt-fp-math"="false" "disable-tail-calls"="false" "less-precise-fpmad"="false" "min-legal-vector-width"="0" "no-frame-pointer-elim"="false" "no-frame-pointer-elim-non-leaf" "no-infs-fp-math"="false" "no-jump-tables"="false" "no-nans-fp-math"="false" "no-signed-zeros-fp-math"="false" "no-trapping-math"="false" "null-pointer-is-valid"="true" "stack-protector-buffer-size"="4" "target-cpu"="x86-64" "target-features"="+cx8,+fxsr,+mmx,+sse,+sse2,+sse3,+x87" "unsafe-fp-math"="false" "use-soft-float"="false" }
attributes #1 = { argmemonly nounwind }
attributes #2 = { nounwind ssp uwtable "correctly-rounded-divide-sqrt-fp-math"="false" "disable-tail-calls"="false" "less-precise-fpmad"="false" "min-legal-vector-width"="0" "no-frame-pointer-elim"="false" "no-frame-pointer-elim-non-leaf" "no-infs-fp-math"="false" "no-jump-tables"="false" "no-nans-fp-math"="false" "no-signed-zeros-fp-math"="false" "no-trapping-math"="false" "null-pointer-is-valid"="true" "stack-protector-buffer-size"="4" "target-cpu"="x86-64" "target-features"="+cx8,+fxsr,+mmx,+sse,+sse2,+sse3,+x87" "unsafe-fp-math"="false" "use-soft-float"="false" }
attributes #3 = { inlinehint nounwind ssp uwtable "correctly-rounded-divide-sqrt-fp-math"="false" "disable-tail-calls"="false" "less-precise-fpmad"="false" "min-legal-vector-width"="0" "no-frame-pointer-elim"="false" "no-frame-pointer-elim-non-leaf" "no-infs-fp-math"="false" "no-jump-tables"="false" "no-nans-fp-math"="false" "no-signed-zeros-fp-math"="false" "no-trapping-math"="false" "null-pointer-is-valid"="true" "stack-protector-buffer-size"="4" "target-cpu"="x86-64" "target-features"="+cx8,+fxsr,+mmx,+sse,+sse2,+sse3,+x87" "unsafe-fp-math"="false" "use-soft-float"="false" }
attributes #4 = { "correctly-rounded-divide-sqrt-fp-math"="false" "disable-tail-calls"="false" "less-precise-fpmad"="false" "no-frame-pointer-elim"="false" "no-frame-pointer-elim-non-leaf" "no-infs-fp-math"="false" "no-nans-fp-math"="false" "no-signed-zeros-fp-math"="false" "no-trapping-math"="false" "null-pointer-is-valid"="true" "stack-protector-buffer-size"="4" "target-cpu"="x86-64" "target-features"="+cx8,+fxsr,+mmx,+sse,+sse2,+sse3,+x87" "unsafe-fp-math"="false" "use-soft-float"="false" }
attributes #5 = { nounwind }

!llvm.module.flags = !{!0, !1}

!0 = !{i32 1, !"wchar_size", i32 4}
!1 = !{i32 7, !"PIC Level", i32 2}
!2 = !{!3}
!3 = distinct !{!3, !4}
!4 = distinct !{!4, !"LVerDomain"}
!5 = !{!6}
!6 = distinct !{!6, !4}
!7 = distinct !{!7, !8}
!8 = !{!"llvm.loop.isvectorized", i32 1}
!9 = distinct !{!9, !10}
!10 = !{!"llvm.loop.unroll.disable"}
!11 = distinct !{!11, !8}
!12 = !{!13}
!13 = distinct !{!13, !14}
!14 = distinct !{!14, !"LVerDomain"}
!15 = !{!16}
!16 = distinct !{!16, !14}
!17 = distinct !{!17, !8}
!18 = distinct !{!18, !8}
!19 = distinct !{!19, !10}
!20 = distinct !{!20, !10}
!21 = distinct !{!21, !8}
!22 = distinct !{!22, !23, !8}
!23 = !{!"llvm.loop.unroll.runtime.disable"}
