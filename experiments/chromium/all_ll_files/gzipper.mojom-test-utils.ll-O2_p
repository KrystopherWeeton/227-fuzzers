; ModuleID = 'gen/services/data_decoder/public/mojom/gzipper.mojom-test-utils.cc'
source_filename = "gen/services/data_decoder/public/mojom/gzipper.mojom-test-utils.cc"
target datalayout = "e-m:e-i64:64-f80:128-n8:16:32:64-S128"
target triple = "x86_64-unknown-linux-gnu"

module asm ".symver exp, exp@GLIBC_2.2.5"
module asm ".symver exp2, exp2@GLIBC_2.2.5"
module asm ".symver exp2f, exp2f@GLIBC_2.2.5"
module asm ".symver expf, expf@GLIBC_2.2.5"
module asm ".symver lgamma, lgamma@GLIBC_2.2.5"
module asm ".symver lgammaf, lgammaf@GLIBC_2.2.5"
module asm ".symver lgammal, lgammal@GLIBC_2.2.5"
module asm ".symver log, log@GLIBC_2.2.5"
module asm ".symver log2, log2@GLIBC_2.2.5"
module asm ".symver log2f, log2f@GLIBC_2.2.5"
module asm ".symver logf, logf@GLIBC_2.2.5"
module asm ".symver pow, pow@GLIBC_2.2.5"
module asm ".symver powf, powf@GLIBC_2.2.5"

%"class.data_decoder::mojom::GzipperAsyncWaiter" = type { %"class.data_decoder::mojom::Gzipper"* }
%"class.data_decoder::mojom::Gzipper" = type { i32 (...)** }
%"class.data_decoder::mojom::GzipperInterceptorForTesting" = type { %"class.data_decoder::mojom::Gzipper" }
%"class.mojo_base::BigBuffer" = type { i32, %"class.std::__1::unique_ptr", i64, %"class.absl::optional" }
%"class.std::__1::unique_ptr" = type { %"class.std::__1::__compressed_pair" }
%"class.std::__1::__compressed_pair" = type { %"struct.std::__1::__compressed_pair_elem" }
%"struct.std::__1::__compressed_pair_elem" = type { i8* }
%"class.absl::optional" = type { %"class.absl::optional_internal::optional_data" }
%"class.absl::optional_internal::optional_data" = type { %"class.absl::optional_internal::optional_data_base" }
%"class.absl::optional_internal::optional_data_base" = type { %"class.absl::optional_internal::optional_data_dtor_base" }
%"class.absl::optional_internal::optional_data_dtor_base" = type { i8, %union.anon }
%union.anon = type { %"class.mojo_base::internal::BigBufferSharedMemoryRegion" }
%"class.mojo_base::internal::BigBufferSharedMemoryRegion" = type { i64, %"class.mojo::ScopedHandleBase", %"class.std::__1::unique_ptr.1" }
%"class.mojo::ScopedHandleBase" = type { %"class.mojo::SharedBufferHandle" }
%"class.mojo::SharedBufferHandle" = type { %"class.mojo::Handle" }
%"class.mojo::Handle" = type { i32 }
%"class.std::__1::unique_ptr.1" = type { %"class.std::__1::__compressed_pair.2" }
%"class.std::__1::__compressed_pair.2" = type { %"struct.std::__1::__compressed_pair_elem.3" }
%"struct.std::__1::__compressed_pair_elem.3" = type { i8* }
%"class.base::OnceCallback" = type { %"class.base::internal::CallbackBase" }
%"class.base::internal::CallbackBase" = type { %class.scoped_refptr }
%class.scoped_refptr = type { %"class.base::internal::BindStateBase"* }
%"class.base::internal::BindStateBase" = type { %"class.base::RefCountedThreadSafe", void ()*, void (%"class.base::internal::BindStateBase"*)*, i1 (%"class.base::internal::BindStateBase"*, i32)* }
%"class.base::RefCountedThreadSafe" = type { %"class.base::subtle::RefCountedThreadSafeBase" }
%"class.base::subtle::RefCountedThreadSafeBase" = type { %"class.base::AtomicRefCount" }
%"class.base::AtomicRefCount" = type { %"struct.std::__1::atomic" }
%"struct.std::__1::atomic" = type { %"struct.std::__1::__atomic_base" }
%"struct.std::__1::__atomic_base" = type { %"struct.std::__1::__atomic_base.5" }
%"struct.std::__1::__atomic_base.5" = type { %"struct.std::__1::__cxx_atomic_impl" }
%"struct.std::__1::__cxx_atomic_impl" = type { %"struct.std::__1::__cxx_atomic_base_impl" }
%"struct.std::__1::__cxx_atomic_base_impl" = type { i32 }
%"class.absl::optional.6" = type { %"class.absl::optional_internal::optional_data.7" }
%"class.absl::optional_internal::optional_data.7" = type { %"class.absl::optional_internal::optional_data_base.8" }
%"class.absl::optional_internal::optional_data_base.8" = type { %"class.absl::optional_internal::optional_data_dtor_base.9" }
%"class.absl::optional_internal::optional_data_dtor_base.9" = type { i8, %union.anon.10 }
%union.anon.10 = type { %"class.mojo_base::BigBuffer" }
%"class.base::RunLoop" = type { %"class.base::RunLoop::Delegate"*, i32, i8, i8, i8, i8, i8, %class.scoped_refptr.21, %"class.base::WeakPtrFactory" }
%"class.base::RunLoop::Delegate" = type <{ i32 (...)**, %"class.std::__1::stack", %"class.base::ObserverList", i8, [7 x i8] }>
%"class.std::__1::stack" = type { %"class.std::__1::vector" }
%"class.std::__1::vector" = type { %"class.std::__1::__vector_base" }
%"class.std::__1::__vector_base" = type { %"class.base::RunLoop"**, %"class.base::RunLoop"**, %"class.std::__1::__compressed_pair.11" }
%"class.std::__1::__compressed_pair.11" = type { %"struct.std::__1::__compressed_pair_elem.12" }
%"struct.std::__1::__compressed_pair_elem.12" = type { %"class.base::RunLoop"** }
%"class.base::ObserverList" = type <{ %"class.std::__1::vector.14", %"class.base::LinkedList", i64, i32, [4 x i8] }>
%"class.std::__1::vector.14" = type { %"class.std::__1::__vector_base.15" }
%"class.std::__1::__vector_base.15" = type { %"class.base::internal::UncheckedObserverAdapter"*, %"class.base::internal::UncheckedObserverAdapter"*, %"class.std::__1::__compressed_pair.16" }
%"class.base::internal::UncheckedObserverAdapter" = type { i8* }
%"class.std::__1::__compressed_pair.16" = type { %"struct.std::__1::__compressed_pair_elem.17" }
%"struct.std::__1::__compressed_pair_elem.17" = type { %"class.base::internal::UncheckedObserverAdapter"* }
%"class.base::LinkedList" = type { %"class.base::LinkNode" }
%"class.base::LinkNode" = type { %"class.base::internal::LinkNodeBase" }
%"class.base::internal::LinkNodeBase" = type { %"class.base::internal::LinkNodeBase"*, %"class.base::internal::LinkNodeBase"* }
%class.scoped_refptr.21 = type { %"class.base::SingleThreadTaskRunner"* }
%"class.base::SingleThreadTaskRunner" = type { %"class.base::SequencedTaskRunner.base", [4 x i8] }
%"class.base::SequencedTaskRunner.base" = type { %"class.base::TaskRunner.base" }
%"class.base::TaskRunner.base" = type <{ i32 (...)**, %"class.base::RefCountedThreadSafe.22" }>
%"class.base::RefCountedThreadSafe.22" = type { %"class.base::subtle::RefCountedThreadSafeBase" }
%"class.base::WeakPtrFactory" = type { %"class.base::internal::WeakPtrFactoryBase" }
%"class.base::internal::WeakPtrFactoryBase" = type { %"class.base::internal::WeakReferenceOwner", i64 }
%"class.base::internal::WeakReferenceOwner" = type { %class.scoped_refptr.23 }
%class.scoped_refptr.23 = type { %"class.base::internal::WeakReference::Flag"* }
%"class.base::internal::WeakReference::Flag" = type <{ %"class.base::RefCountedThreadSafe.24", %"class.base::AtomicFlag", [3 x i8] }>
%"class.base::RefCountedThreadSafe.24" = type { %"class.base::subtle::RefCountedThreadSafeBase" }
%"class.base::AtomicFlag" = type { %"struct.std::__1::atomic.25" }
%"struct.std::__1::atomic.25" = type { %"struct.std::__1::__atomic_base.26" }
%"struct.std::__1::__atomic_base.26" = type { %"struct.std::__1::__atomic_base.27" }
%"struct.std::__1::__atomic_base.27" = type { %"struct.std::__1::__cxx_atomic_impl.28" }
%"struct.std::__1::__cxx_atomic_impl.28" = type { %"struct.std::__1::__cxx_atomic_base_impl.29" }
%"struct.std::__1::__cxx_atomic_base_impl.29" = type { i8 }
%"class.base::Location" = type { i8*, i8*, i32, i8* }

$_ZN12data_decoder5mojom7GzipperD2Ev = comdat any

$_ZN12data_decoder5mojom28GzipperInterceptorForTestingD0Ev = comdat any

@.str = private unnamed_addr constant [9 x i8] c"Compress\00", align 1
@.str.1 = private unnamed_addr constant [67 x i8] c"gen/services/data_decoder/public/mojom/gzipper.mojom-test-utils.cc\00", align 1
@.str.2 = private unnamed_addr constant [11 x i8] c"Uncompress\00", align 1
@_ZTVN12data_decoder5mojom28GzipperInterceptorForTestingE = hidden unnamed_addr constant { [7 x i8*] } { [7 x i8*] [i8* null, i8* null, i8* bitcast (void (%"class.data_decoder::mojom::Gzipper"*)* @_ZN12data_decoder5mojom7GzipperD2Ev to i8*), i8* bitcast (void (%"class.data_decoder::mojom::GzipperInterceptorForTesting"*)* @_ZN12data_decoder5mojom28GzipperInterceptorForTestingD0Ev to i8*), i8* bitcast (void (%"class.data_decoder::mojom::GzipperInterceptorForTesting"*, %"class.mojo_base::BigBuffer"*, %"class.base::OnceCallback"*)* @_ZN12data_decoder5mojom28GzipperInterceptorForTesting8CompressEN9mojo_base9BigBufferEN4base12OnceCallbackIFvN4absl8optionalIS3_EEEEE to i8*), i8* bitcast (void (%"class.data_decoder::mojom::GzipperInterceptorForTesting"*, %"class.mojo_base::BigBuffer"*, %"class.base::OnceCallback"*)* @_ZN12data_decoder5mojom28GzipperInterceptorForTesting10UncompressEN9mojo_base9BigBufferEN4base12OnceCallbackIFvN4absl8optionalIS3_EEEEE to i8*), i8* bitcast (void ()* @__cxa_pure_virtual to i8*)] }, align 8

@_ZN12data_decoder5mojom18GzipperAsyncWaiterC1EPNS0_7GzipperE = hidden unnamed_addr alias void (%"class.data_decoder::mojom::GzipperAsyncWaiter"*, %"class.data_decoder::mojom::Gzipper"*), void (%"class.data_decoder::mojom::GzipperAsyncWaiter"*, %"class.data_decoder::mojom::Gzipper"*)* @_ZN12data_decoder5mojom18GzipperAsyncWaiterC2EPNS0_7GzipperE
@_ZN12data_decoder5mojom18GzipperAsyncWaiterD1Ev = hidden unnamed_addr alias void (%"class.data_decoder::mojom::GzipperAsyncWaiter"*), void (%"class.data_decoder::mojom::GzipperAsyncWaiter"*)* @_ZN12data_decoder5mojom18GzipperAsyncWaiterD2Ev

; Function Attrs: nounwind ssp uwtable
define hidden void @_ZN12data_decoder5mojom28GzipperInterceptorForTesting8CompressEN9mojo_base9BigBufferEN4base12OnceCallbackIFvN4absl8optionalIS3_EEEEE(%"class.data_decoder::mojom::GzipperInterceptorForTesting"*, %"class.mojo_base::BigBuffer"*, %"class.base::OnceCallback"* nocapture) unnamed_addr #0 align 2 {
  %4 = alloca %"class.mojo_base::BigBuffer", align 8
  %5 = alloca %"class.base::OnceCallback", align 8
  %6 = bitcast %"class.data_decoder::mojom::GzipperInterceptorForTesting"* %0 to %"class.data_decoder::mojom::Gzipper"* (%"class.data_decoder::mojom::GzipperInterceptorForTesting"*)***
  %7 = load %"class.data_decoder::mojom::Gzipper"* (%"class.data_decoder::mojom::GzipperInterceptorForTesting"*)**, %"class.data_decoder::mojom::Gzipper"* (%"class.data_decoder::mojom::GzipperInterceptorForTesting"*)*** %6, align 8
  %8 = getelementptr inbounds %"class.data_decoder::mojom::Gzipper"* (%"class.data_decoder::mojom::GzipperInterceptorForTesting"*)*, %"class.data_decoder::mojom::Gzipper"* (%"class.data_decoder::mojom::GzipperInterceptorForTesting"*)** %7, i64 4
  %9 = load %"class.data_decoder::mojom::Gzipper"* (%"class.data_decoder::mojom::GzipperInterceptorForTesting"*)*, %"class.data_decoder::mojom::Gzipper"* (%"class.data_decoder::mojom::GzipperInterceptorForTesting"*)** %8, align 8
  %10 = tail call %"class.data_decoder::mojom::Gzipper"* %9(%"class.data_decoder::mojom::GzipperInterceptorForTesting"* %0) #10
  call void @_ZN9mojo_base9BigBufferC1EOS0_(%"class.mojo_base::BigBuffer"* nonnull %4, %"class.mojo_base::BigBuffer"* dereferenceable(56) %1) #10
  %11 = getelementptr inbounds %"class.base::OnceCallback", %"class.base::OnceCallback"* %2, i64 0, i32 0, i32 0, i32 0
  %12 = bitcast %"class.base::OnceCallback"* %2 to i64*
  %13 = load i64, i64* %12, align 8
  %14 = bitcast %"class.base::OnceCallback"* %5 to i64*
  store i64 %13, i64* %14, align 8
  store %"class.base::internal::BindStateBase"* null, %"class.base::internal::BindStateBase"** %11, align 8
  %15 = bitcast %"class.data_decoder::mojom::Gzipper"* %10 to void (%"class.data_decoder::mojom::Gzipper"*, %"class.mojo_base::BigBuffer"*, %"class.base::OnceCallback"*)***
  %16 = load void (%"class.data_decoder::mojom::Gzipper"*, %"class.mojo_base::BigBuffer"*, %"class.base::OnceCallback"*)**, void (%"class.data_decoder::mojom::Gzipper"*, %"class.mojo_base::BigBuffer"*, %"class.base::OnceCallback"*)*** %15, align 8
  %17 = getelementptr inbounds void (%"class.data_decoder::mojom::Gzipper"*, %"class.mojo_base::BigBuffer"*, %"class.base::OnceCallback"*)*, void (%"class.data_decoder::mojom::Gzipper"*, %"class.mojo_base::BigBuffer"*, %"class.base::OnceCallback"*)** %16, i64 2
  %18 = load void (%"class.data_decoder::mojom::Gzipper"*, %"class.mojo_base::BigBuffer"*, %"class.base::OnceCallback"*)*, void (%"class.data_decoder::mojom::Gzipper"*, %"class.mojo_base::BigBuffer"*, %"class.base::OnceCallback"*)** %17, align 8
  call void %18(%"class.data_decoder::mojom::Gzipper"* %10, %"class.mojo_base::BigBuffer"* nonnull %4, %"class.base::OnceCallback"* nonnull %5) #10
  %19 = getelementptr inbounds %"class.base::OnceCallback", %"class.base::OnceCallback"* %5, i64 0, i32 0
  call void @_ZN4base8internal12CallbackBaseD2Ev(%"class.base::internal::CallbackBase"* nonnull %19) #10
  call void @_ZN9mojo_base9BigBufferD1Ev(%"class.mojo_base::BigBuffer"* nonnull %4) #10
  ret void
}

declare void @_ZN9mojo_base9BigBufferC1EOS0_(%"class.mojo_base::BigBuffer"*, %"class.mojo_base::BigBuffer"* dereferenceable(56)) unnamed_addr #1

; Function Attrs: nounwind
declare void @_ZN4base8internal12CallbackBaseD2Ev(%"class.base::internal::CallbackBase"*) unnamed_addr #2

; Function Attrs: nounwind
declare void @_ZN9mojo_base9BigBufferD1Ev(%"class.mojo_base::BigBuffer"*) unnamed_addr #2

; Function Attrs: nounwind ssp uwtable
define hidden void @_ZN12data_decoder5mojom28GzipperInterceptorForTesting10UncompressEN9mojo_base9BigBufferEN4base12OnceCallbackIFvN4absl8optionalIS3_EEEEE(%"class.data_decoder::mojom::GzipperInterceptorForTesting"*, %"class.mojo_base::BigBuffer"*, %"class.base::OnceCallback"* nocapture) unnamed_addr #0 align 2 {
  %4 = alloca %"class.mojo_base::BigBuffer", align 8
  %5 = alloca %"class.base::OnceCallback", align 8
  %6 = bitcast %"class.data_decoder::mojom::GzipperInterceptorForTesting"* %0 to %"class.data_decoder::mojom::Gzipper"* (%"class.data_decoder::mojom::GzipperInterceptorForTesting"*)***
  %7 = load %"class.data_decoder::mojom::Gzipper"* (%"class.data_decoder::mojom::GzipperInterceptorForTesting"*)**, %"class.data_decoder::mojom::Gzipper"* (%"class.data_decoder::mojom::GzipperInterceptorForTesting"*)*** %6, align 8
  %8 = getelementptr inbounds %"class.data_decoder::mojom::Gzipper"* (%"class.data_decoder::mojom::GzipperInterceptorForTesting"*)*, %"class.data_decoder::mojom::Gzipper"* (%"class.data_decoder::mojom::GzipperInterceptorForTesting"*)** %7, i64 4
  %9 = load %"class.data_decoder::mojom::Gzipper"* (%"class.data_decoder::mojom::GzipperInterceptorForTesting"*)*, %"class.data_decoder::mojom::Gzipper"* (%"class.data_decoder::mojom::GzipperInterceptorForTesting"*)** %8, align 8
  %10 = tail call %"class.data_decoder::mojom::Gzipper"* %9(%"class.data_decoder::mojom::GzipperInterceptorForTesting"* %0) #10
  call void @_ZN9mojo_base9BigBufferC1EOS0_(%"class.mojo_base::BigBuffer"* nonnull %4, %"class.mojo_base::BigBuffer"* dereferenceable(56) %1) #10
  %11 = getelementptr inbounds %"class.base::OnceCallback", %"class.base::OnceCallback"* %2, i64 0, i32 0, i32 0, i32 0
  %12 = bitcast %"class.base::OnceCallback"* %2 to i64*
  %13 = load i64, i64* %12, align 8
  %14 = bitcast %"class.base::OnceCallback"* %5 to i64*
  store i64 %13, i64* %14, align 8
  store %"class.base::internal::BindStateBase"* null, %"class.base::internal::BindStateBase"** %11, align 8
  %15 = bitcast %"class.data_decoder::mojom::Gzipper"* %10 to void (%"class.data_decoder::mojom::Gzipper"*, %"class.mojo_base::BigBuffer"*, %"class.base::OnceCallback"*)***
  %16 = load void (%"class.data_decoder::mojom::Gzipper"*, %"class.mojo_base::BigBuffer"*, %"class.base::OnceCallback"*)**, void (%"class.data_decoder::mojom::Gzipper"*, %"class.mojo_base::BigBuffer"*, %"class.base::OnceCallback"*)*** %15, align 8
  %17 = getelementptr inbounds void (%"class.data_decoder::mojom::Gzipper"*, %"class.mojo_base::BigBuffer"*, %"class.base::OnceCallback"*)*, void (%"class.data_decoder::mojom::Gzipper"*, %"class.mojo_base::BigBuffer"*, %"class.base::OnceCallback"*)** %16, i64 3
  %18 = load void (%"class.data_decoder::mojom::Gzipper"*, %"class.mojo_base::BigBuffer"*, %"class.base::OnceCallback"*)*, void (%"class.data_decoder::mojom::Gzipper"*, %"class.mojo_base::BigBuffer"*, %"class.base::OnceCallback"*)** %17, align 8
  call void %18(%"class.data_decoder::mojom::Gzipper"* %10, %"class.mojo_base::BigBuffer"* nonnull %4, %"class.base::OnceCallback"* nonnull %5) #10
  %19 = getelementptr inbounds %"class.base::OnceCallback", %"class.base::OnceCallback"* %5, i64 0, i32 0
  call void @_ZN4base8internal12CallbackBaseD2Ev(%"class.base::internal::CallbackBase"* nonnull %19) #10
  call void @_ZN9mojo_base9BigBufferD1Ev(%"class.mojo_base::BigBuffer"* nonnull %4) #10
  ret void
}

; Function Attrs: nofree norecurse nounwind ssp uwtable writeonly
define hidden void @_ZN12data_decoder5mojom18GzipperAsyncWaiterC2EPNS0_7GzipperE(%"class.data_decoder::mojom::GzipperAsyncWaiter"* nocapture, %"class.data_decoder::mojom::Gzipper"*) unnamed_addr #3 align 2 {
  %3 = getelementptr inbounds %"class.data_decoder::mojom::GzipperAsyncWaiter", %"class.data_decoder::mojom::GzipperAsyncWaiter"* %0, i64 0, i32 0
  store %"class.data_decoder::mojom::Gzipper"* %1, %"class.data_decoder::mojom::Gzipper"** %3, align 8
  ret void
}

; Function Attrs: norecurse nounwind readnone ssp uwtable
define hidden void @_ZN12data_decoder5mojom18GzipperAsyncWaiterD2Ev(%"class.data_decoder::mojom::GzipperAsyncWaiter"* nocapture) unnamed_addr #4 align 2 {
  ret void
}

; Function Attrs: nounwind ssp uwtable
define hidden void @_ZN12data_decoder5mojom18GzipperAsyncWaiter8CompressEN9mojo_base9BigBufferEPN4absl8optionalIS3_EE(%"class.data_decoder::mojom::GzipperAsyncWaiter"* nocapture readonly, %"class.mojo_base::BigBuffer"*, %"class.absl::optional.6"*) local_unnamed_addr #0 align 2 {
  %4 = alloca %"class.base::RunLoop", align 8
  %5 = alloca %"class.mojo_base::BigBuffer", align 8
  %6 = alloca %"class.base::OnceCallback", align 8
  %7 = alloca %"class.base::Location", align 8
  %8 = ptrtoint %"class.absl::optional.6"* %2 to i64
  %9 = bitcast %"class.base::RunLoop"* %4 to i8*
  call void @llvm.lifetime.start.p0i8(i64 48, i8* nonnull %9) #10
  call void @llvm.memset.p0i8.i64(i8* nonnull align 8 %9, i8 -86, i64 48, i1 false)
  call void @_ZN4base7RunLoopC1ENS0_4TypeE(%"class.base::RunLoop"* nonnull %4, i32 0) #10
  %10 = getelementptr inbounds %"class.data_decoder::mojom::GzipperAsyncWaiter", %"class.data_decoder::mojom::GzipperAsyncWaiter"* %0, i64 0, i32 0
  %11 = load %"class.data_decoder::mojom::Gzipper"*, %"class.data_decoder::mojom::Gzipper"** %10, align 8
  call void @_ZN9mojo_base9BigBufferC1EOS0_(%"class.mojo_base::BigBuffer"* nonnull %5, %"class.mojo_base::BigBuffer"* dereferenceable(56) %1) #10
  %12 = ptrtoint %"class.base::RunLoop"* %4 to i64
  %13 = call i8* @_Znwm(i64 56) #11, !noalias !2
  %14 = bitcast i8* %13 to %"class.base::internal::BindStateBase"*
  call void @_ZN4base8internal13BindStateBaseC2EPFvvEPFvPKS1_E(%"class.base::internal::BindStateBase"* nonnull %14, void ()* bitcast (void (%"class.base::internal::BindStateBase"*, %"class.absl::optional.6"*)* @"_ZN4base8internal7InvokerINS0_9BindStateIZN12data_decoder5mojom18GzipperAsyncWaiter8CompressEN9mojo_base9BigBufferEPN4absl8optionalIS7_EEE3$_0JPNS_7RunLoopESB_EEEFvSA_EE7RunOnceEPNS0_13BindStateBaseEOSA_" to void ()*), void (%"class.base::internal::BindStateBase"*)* nonnull @"_ZN4base8internal9BindStateIZN12data_decoder5mojom18GzipperAsyncWaiter8CompressEN9mojo_base9BigBufferEPN4absl8optionalIS6_EEE3$_0JPNS_7RunLoopESA_EE7DestroyEPKNS0_13BindStateBaseE") #10, !noalias !2
  %15 = getelementptr inbounds i8, i8* %13, i64 40
  %16 = bitcast i8* %15 to i64*
  store i64 %12, i64* %16, align 8, !noalias !2
  %17 = getelementptr inbounds i8, i8* %13, i64 48
  %18 = bitcast i8* %17 to i64*
  store i64 %8, i64* %18, align 8, !noalias !2
  %19 = bitcast %"class.base::OnceCallback"* %6 to i8**
  store i8* %13, i8** %19, align 8, !alias.scope !2
  %20 = bitcast %"class.data_decoder::mojom::Gzipper"* %11 to void (%"class.data_decoder::mojom::Gzipper"*, %"class.mojo_base::BigBuffer"*, %"class.base::OnceCallback"*)***
  %21 = load void (%"class.data_decoder::mojom::Gzipper"*, %"class.mojo_base::BigBuffer"*, %"class.base::OnceCallback"*)**, void (%"class.data_decoder::mojom::Gzipper"*, %"class.mojo_base::BigBuffer"*, %"class.base::OnceCallback"*)*** %20, align 8
  %22 = getelementptr inbounds void (%"class.data_decoder::mojom::Gzipper"*, %"class.mojo_base::BigBuffer"*, %"class.base::OnceCallback"*)*, void (%"class.data_decoder::mojom::Gzipper"*, %"class.mojo_base::BigBuffer"*, %"class.base::OnceCallback"*)** %21, i64 2
  %23 = load void (%"class.data_decoder::mojom::Gzipper"*, %"class.mojo_base::BigBuffer"*, %"class.base::OnceCallback"*)*, void (%"class.data_decoder::mojom::Gzipper"*, %"class.mojo_base::BigBuffer"*, %"class.base::OnceCallback"*)** %22, align 8
  call void %23(%"class.data_decoder::mojom::Gzipper"* %11, %"class.mojo_base::BigBuffer"* nonnull %5, %"class.base::OnceCallback"* nonnull %6) #10
  %24 = getelementptr inbounds %"class.base::OnceCallback", %"class.base::OnceCallback"* %6, i64 0, i32 0
  call void @_ZN4base8internal12CallbackBaseD2Ev(%"class.base::internal::CallbackBase"* nonnull %24) #10
  call void @_ZN9mojo_base9BigBufferD1Ev(%"class.mojo_base::BigBuffer"* nonnull %5) #10
  %25 = bitcast %"class.base::Location"* %7 to i8*
  call void @llvm.lifetime.start.p0i8(i64 32, i8* nonnull %25) #10
  call void @_ZN4base8Location7CurrentEPKcS2_i(%"class.base::Location"* nonnull sret %7, i8* getelementptr inbounds ([9 x i8], [9 x i8]* @.str, i64 0, i64 0), i8* getelementptr inbounds ([67 x i8], [67 x i8]* @.str.1, i64 0, i64 0), i32 55) #10
  call void @_ZN4base7RunLoop3RunERKNS_8LocationE(%"class.base::RunLoop"* nonnull %4, %"class.base::Location"* nonnull dereferenceable(32) %7) #10
  call void @llvm.lifetime.end.p0i8(i64 32, i8* nonnull %25) #10
  call void @_ZN4base7RunLoopD1Ev(%"class.base::RunLoop"* nonnull %4) #10
  call void @llvm.lifetime.end.p0i8(i64 48, i8* nonnull %9) #10
  ret void
}

; Function Attrs: argmemonly nounwind
declare void @llvm.lifetime.start.p0i8(i64 immarg, i8* nocapture) #5

; Function Attrs: argmemonly nounwind
declare void @llvm.memset.p0i8.i64(i8* nocapture writeonly, i8, i64, i1 immarg) #5

declare void @_ZN4base7RunLoopC1ENS0_4TypeE(%"class.base::RunLoop"*, i32) unnamed_addr #1

; Function Attrs: argmemonly nounwind
declare void @llvm.lifetime.end.p0i8(i64 immarg, i8* nocapture) #5

declare void @_ZN4base7RunLoop3RunERKNS_8LocationE(%"class.base::RunLoop"*, %"class.base::Location"* dereferenceable(32)) local_unnamed_addr #1

declare void @_ZN4base8Location7CurrentEPKcS2_i(%"class.base::Location"* sret, i8*, i8*, i32) local_unnamed_addr #1

; Function Attrs: nounwind
declare void @_ZN4base7RunLoopD1Ev(%"class.base::RunLoop"*) unnamed_addr #2

; Function Attrs: nounwind ssp uwtable
define hidden void @_ZN12data_decoder5mojom18GzipperAsyncWaiter10UncompressEN9mojo_base9BigBufferEPN4absl8optionalIS3_EE(%"class.data_decoder::mojom::GzipperAsyncWaiter"* nocapture readonly, %"class.mojo_base::BigBuffer"*, %"class.absl::optional.6"*) local_unnamed_addr #0 align 2 {
  %4 = alloca %"class.base::RunLoop", align 8
  %5 = alloca %"class.mojo_base::BigBuffer", align 8
  %6 = alloca %"class.base::OnceCallback", align 8
  %7 = alloca %"class.base::Location", align 8
  %8 = ptrtoint %"class.absl::optional.6"* %2 to i64
  %9 = bitcast %"class.base::RunLoop"* %4 to i8*
  call void @llvm.lifetime.start.p0i8(i64 48, i8* nonnull %9) #10
  call void @llvm.memset.p0i8.i64(i8* nonnull align 8 %9, i8 -86, i64 48, i1 false)
  call void @_ZN4base7RunLoopC1ENS0_4TypeE(%"class.base::RunLoop"* nonnull %4, i32 0) #10
  %10 = getelementptr inbounds %"class.data_decoder::mojom::GzipperAsyncWaiter", %"class.data_decoder::mojom::GzipperAsyncWaiter"* %0, i64 0, i32 0
  %11 = load %"class.data_decoder::mojom::Gzipper"*, %"class.data_decoder::mojom::Gzipper"** %10, align 8
  call void @_ZN9mojo_base9BigBufferC1EOS0_(%"class.mojo_base::BigBuffer"* nonnull %5, %"class.mojo_base::BigBuffer"* dereferenceable(56) %1) #10
  %12 = ptrtoint %"class.base::RunLoop"* %4 to i64
  %13 = call i8* @_Znwm(i64 56) #11, !noalias !7
  %14 = bitcast i8* %13 to %"class.base::internal::BindStateBase"*
  call void @_ZN4base8internal13BindStateBaseC2EPFvvEPFvPKS1_E(%"class.base::internal::BindStateBase"* nonnull %14, void ()* bitcast (void (%"class.base::internal::BindStateBase"*, %"class.absl::optional.6"*)* @"_ZN4base8internal7InvokerINS0_9BindStateIZN12data_decoder5mojom18GzipperAsyncWaiter10UncompressEN9mojo_base9BigBufferEPN4absl8optionalIS7_EEE3$_1JPNS_7RunLoopESB_EEEFvSA_EE7RunOnceEPNS0_13BindStateBaseEOSA_" to void ()*), void (%"class.base::internal::BindStateBase"*)* nonnull @"_ZN4base8internal9BindStateIZN12data_decoder5mojom18GzipperAsyncWaiter10UncompressEN9mojo_base9BigBufferEPN4absl8optionalIS6_EEE3$_1JPNS_7RunLoopESA_EE7DestroyEPKNS0_13BindStateBaseE") #10, !noalias !7
  %15 = getelementptr inbounds i8, i8* %13, i64 40
  %16 = bitcast i8* %15 to i64*
  store i64 %12, i64* %16, align 8, !noalias !7
  %17 = getelementptr inbounds i8, i8* %13, i64 48
  %18 = bitcast i8* %17 to i64*
  store i64 %8, i64* %18, align 8, !noalias !7
  %19 = bitcast %"class.base::OnceCallback"* %6 to i8**
  store i8* %13, i8** %19, align 8, !alias.scope !7
  %20 = bitcast %"class.data_decoder::mojom::Gzipper"* %11 to void (%"class.data_decoder::mojom::Gzipper"*, %"class.mojo_base::BigBuffer"*, %"class.base::OnceCallback"*)***
  %21 = load void (%"class.data_decoder::mojom::Gzipper"*, %"class.mojo_base::BigBuffer"*, %"class.base::OnceCallback"*)**, void (%"class.data_decoder::mojom::Gzipper"*, %"class.mojo_base::BigBuffer"*, %"class.base::OnceCallback"*)*** %20, align 8
  %22 = getelementptr inbounds void (%"class.data_decoder::mojom::Gzipper"*, %"class.mojo_base::BigBuffer"*, %"class.base::OnceCallback"*)*, void (%"class.data_decoder::mojom::Gzipper"*, %"class.mojo_base::BigBuffer"*, %"class.base::OnceCallback"*)** %21, i64 3
  %23 = load void (%"class.data_decoder::mojom::Gzipper"*, %"class.mojo_base::BigBuffer"*, %"class.base::OnceCallback"*)*, void (%"class.data_decoder::mojom::Gzipper"*, %"class.mojo_base::BigBuffer"*, %"class.base::OnceCallback"*)** %22, align 8
  call void %23(%"class.data_decoder::mojom::Gzipper"* %11, %"class.mojo_base::BigBuffer"* nonnull %5, %"class.base::OnceCallback"* nonnull %6) #10
  %24 = getelementptr inbounds %"class.base::OnceCallback", %"class.base::OnceCallback"* %6, i64 0, i32 0
  call void @_ZN4base8internal12CallbackBaseD2Ev(%"class.base::internal::CallbackBase"* nonnull %24) #10
  call void @_ZN9mojo_base9BigBufferD1Ev(%"class.mojo_base::BigBuffer"* nonnull %5) #10
  %25 = bitcast %"class.base::Location"* %7 to i8*
  call void @llvm.lifetime.start.p0i8(i64 32, i8* nonnull %25) #10
  call void @_ZN4base8Location7CurrentEPKcS2_i(%"class.base::Location"* nonnull sret %7, i8* getelementptr inbounds ([11 x i8], [11 x i8]* @.str.2, i64 0, i64 0), i8* getelementptr inbounds ([67 x i8], [67 x i8]* @.str.1, i64 0, i64 0), i32 70) #10
  call void @_ZN4base7RunLoop3RunERKNS_8LocationE(%"class.base::RunLoop"* nonnull %4, %"class.base::Location"* nonnull dereferenceable(32) %7) #10
  call void @llvm.lifetime.end.p0i8(i64 32, i8* nonnull %25) #10
  call void @_ZN4base7RunLoopD1Ev(%"class.base::RunLoop"* nonnull %4) #10
  call void @llvm.lifetime.end.p0i8(i64 48, i8* nonnull %9) #10
  ret void
}

; Function Attrs: nounwind ssp uwtable
define linkonce_odr hidden void @_ZN12data_decoder5mojom7GzipperD2Ev(%"class.data_decoder::mojom::Gzipper"*) unnamed_addr #0 comdat align 2 {
  ret void
}

; Function Attrs: inlinehint nounwind ssp uwtable
define linkonce_odr hidden void @_ZN12data_decoder5mojom28GzipperInterceptorForTestingD0Ev(%"class.data_decoder::mojom::GzipperInterceptorForTesting"*) unnamed_addr #6 comdat align 2 {
  tail call void @llvm.trap() #12
  unreachable
}

declare void @__cxa_pure_virtual() unnamed_addr

; Function Attrs: cold noreturn nounwind
declare void @llvm.trap() #7

; Function Attrs: nounwind ssp uwtable
define internal void @"_ZN4base8internal7InvokerINS0_9BindStateIZN12data_decoder5mojom18GzipperAsyncWaiter8CompressEN9mojo_base9BigBufferEPN4absl8optionalIS7_EEE3$_0JPNS_7RunLoopESB_EEEFvSA_EE7RunOnceEPNS0_13BindStateBaseEOSA_"(%"class.base::internal::BindStateBase"* nocapture readonly, %"class.absl::optional.6"* dereferenceable(64)) #0 align 2 {
  %3 = alloca %"class.absl::optional.6", align 8
  %4 = getelementptr inbounds %"class.base::internal::BindStateBase", %"class.base::internal::BindStateBase"* %0, i64 1, i32 1
  %5 = bitcast void ()** %4 to %"class.base::RunLoop"**
  %6 = getelementptr inbounds void ()*, void ()** %4, i64 1
  %7 = bitcast void ()** %6 to %"class.absl::optional.6"**
  %8 = getelementptr inbounds %"class.absl::optional.6", %"class.absl::optional.6"* %3, i64 0, i32 0, i32 0, i32 0, i32 0
  call void @llvm.lifetime.start.p0i8(i64 64, i8* nonnull %8) #10
  %9 = load %"class.base::RunLoop"*, %"class.base::RunLoop"** %5, align 8
  %10 = load %"class.absl::optional.6"*, %"class.absl::optional.6"** %7, align 8
  %11 = getelementptr inbounds %"class.absl::optional.6", %"class.absl::optional.6"* %1, i64 0, i32 0, i32 0, i32 0, i32 0
  call void @llvm.memset.p0i8.i64(i8* nonnull align 8 %8, i8 0, i64 64, i1 false) #10
  %12 = load i8, i8* %11, align 8, !range !12
  %13 = icmp eq i8 %12, 0
  br i1 %13, label %24, label %14

14:                                               ; preds = %2
  %15 = getelementptr inbounds %"class.absl::optional.6", %"class.absl::optional.6"* %1, i64 0, i32 0, i32 0, i32 0, i32 1, i32 0
  %16 = getelementptr inbounds %"class.absl::optional.6", %"class.absl::optional.6"* %3, i64 0, i32 0, i32 0, i32 0, i32 1, i32 0
  call void @_ZN9mojo_base9BigBufferC1EOS0_(%"class.mojo_base::BigBuffer"* %16, %"class.mojo_base::BigBuffer"* dereferenceable(56) %15) #10
  store i8 1, i8* %8, align 8
  %17 = getelementptr inbounds %"class.absl::optional.6", %"class.absl::optional.6"* %10, i64 0, i32 0, i32 0, i32 0, i32 0
  %18 = load i8, i8* %17, align 8, !range !12
  %19 = icmp eq i8 %18, 0
  %20 = getelementptr inbounds %"class.absl::optional.6", %"class.absl::optional.6"* %10, i64 0, i32 0, i32 0, i32 0, i32 1, i32 0
  br i1 %19, label %23, label %21

21:                                               ; preds = %14
  %22 = call dereferenceable(56) %"class.mojo_base::BigBuffer"* @_ZN9mojo_base9BigBufferaSEOS0_(%"class.mojo_base::BigBuffer"* %20, %"class.mojo_base::BigBuffer"* dereferenceable(56) %16) #10
  br label %30

23:                                               ; preds = %14
  call void @_ZN9mojo_base9BigBufferC1EOS0_(%"class.mojo_base::BigBuffer"* %20, %"class.mojo_base::BigBuffer"* dereferenceable(56) %16) #10
  store i8 1, i8* %17, align 8
  br label %30

24:                                               ; preds = %2
  %25 = getelementptr inbounds %"class.absl::optional.6", %"class.absl::optional.6"* %10, i64 0, i32 0, i32 0, i32 0, i32 0
  %26 = load i8, i8* %25, align 8, !range !12
  %27 = icmp eq i8 %26, 0
  br i1 %27, label %30, label %28

28:                                               ; preds = %24
  %29 = getelementptr inbounds %"class.absl::optional.6", %"class.absl::optional.6"* %10, i64 0, i32 0, i32 0, i32 0, i32 1, i32 0
  tail call void @_ZN9mojo_base9BigBufferD1Ev(%"class.mojo_base::BigBuffer"* %29) #10
  store i8 0, i8* %25, align 8
  br label %30

30:                                               ; preds = %28, %24, %23, %21
  call void @_ZN4base7RunLoop4QuitEv(%"class.base::RunLoop"* %9) #10
  %31 = load i8, i8* %8, align 8, !range !12
  %32 = icmp eq i8 %31, 0
  br i1 %32, label %35, label %33

33:                                               ; preds = %30
  %34 = getelementptr inbounds %"class.absl::optional.6", %"class.absl::optional.6"* %3, i64 0, i32 0, i32 0, i32 0, i32 1, i32 0
  call void @_ZN9mojo_base9BigBufferD1Ev(%"class.mojo_base::BigBuffer"* %34) #10
  store i8 0, i8* %8, align 8
  br label %35

35:                                               ; preds = %30, %33
  call void @llvm.lifetime.end.p0i8(i64 64, i8* nonnull %8) #10
  ret void
}

declare void @_ZN4base7RunLoop4QuitEv(%"class.base::RunLoop"*) local_unnamed_addr #1

declare dereferenceable(56) %"class.mojo_base::BigBuffer"* @_ZN9mojo_base9BigBufferaSEOS0_(%"class.mojo_base::BigBuffer"*, %"class.mojo_base::BigBuffer"* dereferenceable(56)) local_unnamed_addr #1

; Function Attrs: nobuiltin nofree
declare noalias nonnull i8* @_Znwm(i64) local_unnamed_addr #8

; Function Attrs: nounwind ssp uwtable
define internal void @"_ZN4base8internal9BindStateIZN12data_decoder5mojom18GzipperAsyncWaiter8CompressEN9mojo_base9BigBufferEPN4absl8optionalIS6_EEE3$_0JPNS_7RunLoopESA_EE7DestroyEPKNS0_13BindStateBaseE"(%"class.base::internal::BindStateBase"*) #0 align 2 {
  %2 = icmp eq %"class.base::internal::BindStateBase"* %0, null
  br i1 %2, label %5, label %3

3:                                                ; preds = %1
  %4 = bitcast %"class.base::internal::BindStateBase"* %0 to i8*
  tail call void @_ZdlPv(i8* %4) #11
  br label %5

5:                                                ; preds = %3, %1
  ret void
}

declare void @_ZN4base8internal13BindStateBaseC2EPFvvEPFvPKS1_E(%"class.base::internal::BindStateBase"*, void ()*, void (%"class.base::internal::BindStateBase"*)*) unnamed_addr #1

; Function Attrs: nobuiltin nounwind
declare void @_ZdlPv(i8*) local_unnamed_addr #9

; Function Attrs: nounwind ssp uwtable
define internal void @"_ZN4base8internal7InvokerINS0_9BindStateIZN12data_decoder5mojom18GzipperAsyncWaiter10UncompressEN9mojo_base9BigBufferEPN4absl8optionalIS7_EEE3$_1JPNS_7RunLoopESB_EEEFvSA_EE7RunOnceEPNS0_13BindStateBaseEOSA_"(%"class.base::internal::BindStateBase"* nocapture readonly, %"class.absl::optional.6"* dereferenceable(64)) #0 align 2 {
  %3 = alloca %"class.absl::optional.6", align 8
  %4 = getelementptr inbounds %"class.base::internal::BindStateBase", %"class.base::internal::BindStateBase"* %0, i64 1, i32 1
  %5 = bitcast void ()** %4 to %"class.base::RunLoop"**
  %6 = getelementptr inbounds void ()*, void ()** %4, i64 1
  %7 = bitcast void ()** %6 to %"class.absl::optional.6"**
  %8 = getelementptr inbounds %"class.absl::optional.6", %"class.absl::optional.6"* %3, i64 0, i32 0, i32 0, i32 0, i32 0
  call void @llvm.lifetime.start.p0i8(i64 64, i8* nonnull %8) #10
  %9 = load %"class.base::RunLoop"*, %"class.base::RunLoop"** %5, align 8
  %10 = load %"class.absl::optional.6"*, %"class.absl::optional.6"** %7, align 8
  %11 = getelementptr inbounds %"class.absl::optional.6", %"class.absl::optional.6"* %1, i64 0, i32 0, i32 0, i32 0, i32 0
  call void @llvm.memset.p0i8.i64(i8* nonnull align 8 %8, i8 0, i64 64, i1 false) #10
  %12 = load i8, i8* %11, align 8, !range !12
  %13 = icmp eq i8 %12, 0
  br i1 %13, label %24, label %14

14:                                               ; preds = %2
  %15 = getelementptr inbounds %"class.absl::optional.6", %"class.absl::optional.6"* %1, i64 0, i32 0, i32 0, i32 0, i32 1, i32 0
  %16 = getelementptr inbounds %"class.absl::optional.6", %"class.absl::optional.6"* %3, i64 0, i32 0, i32 0, i32 0, i32 1, i32 0
  call void @_ZN9mojo_base9BigBufferC1EOS0_(%"class.mojo_base::BigBuffer"* %16, %"class.mojo_base::BigBuffer"* dereferenceable(56) %15) #10
  store i8 1, i8* %8, align 8
  %17 = getelementptr inbounds %"class.absl::optional.6", %"class.absl::optional.6"* %10, i64 0, i32 0, i32 0, i32 0, i32 0
  %18 = load i8, i8* %17, align 8, !range !12
  %19 = icmp eq i8 %18, 0
  %20 = getelementptr inbounds %"class.absl::optional.6", %"class.absl::optional.6"* %10, i64 0, i32 0, i32 0, i32 0, i32 1, i32 0
  br i1 %19, label %23, label %21

21:                                               ; preds = %14
  %22 = call dereferenceable(56) %"class.mojo_base::BigBuffer"* @_ZN9mojo_base9BigBufferaSEOS0_(%"class.mojo_base::BigBuffer"* %20, %"class.mojo_base::BigBuffer"* dereferenceable(56) %16) #10
  br label %30

23:                                               ; preds = %14
  call void @_ZN9mojo_base9BigBufferC1EOS0_(%"class.mojo_base::BigBuffer"* %20, %"class.mojo_base::BigBuffer"* dereferenceable(56) %16) #10
  store i8 1, i8* %17, align 8
  br label %30

24:                                               ; preds = %2
  %25 = getelementptr inbounds %"class.absl::optional.6", %"class.absl::optional.6"* %10, i64 0, i32 0, i32 0, i32 0, i32 0
  %26 = load i8, i8* %25, align 8, !range !12
  %27 = icmp eq i8 %26, 0
  br i1 %27, label %30, label %28

28:                                               ; preds = %24
  %29 = getelementptr inbounds %"class.absl::optional.6", %"class.absl::optional.6"* %10, i64 0, i32 0, i32 0, i32 0, i32 1, i32 0
  tail call void @_ZN9mojo_base9BigBufferD1Ev(%"class.mojo_base::BigBuffer"* %29) #10
  store i8 0, i8* %25, align 8
  br label %30

30:                                               ; preds = %28, %24, %23, %21
  call void @_ZN4base7RunLoop4QuitEv(%"class.base::RunLoop"* %9) #10
  %31 = load i8, i8* %8, align 8, !range !12
  %32 = icmp eq i8 %31, 0
  br i1 %32, label %35, label %33

33:                                               ; preds = %30
  %34 = getelementptr inbounds %"class.absl::optional.6", %"class.absl::optional.6"* %3, i64 0, i32 0, i32 0, i32 0, i32 1, i32 0
  call void @_ZN9mojo_base9BigBufferD1Ev(%"class.mojo_base::BigBuffer"* %34) #10
  store i8 0, i8* %8, align 8
  br label %35

35:                                               ; preds = %30, %33
  call void @llvm.lifetime.end.p0i8(i64 64, i8* nonnull %8) #10
  ret void
}

; Function Attrs: nounwind ssp uwtable
define internal void @"_ZN4base8internal9BindStateIZN12data_decoder5mojom18GzipperAsyncWaiter10UncompressEN9mojo_base9BigBufferEPN4absl8optionalIS6_EEE3$_1JPNS_7RunLoopESA_EE7DestroyEPKNS0_13BindStateBaseE"(%"class.base::internal::BindStateBase"*) #0 align 2 {
  %2 = icmp eq %"class.base::internal::BindStateBase"* %0, null
  br i1 %2, label %5, label %3

3:                                                ; preds = %1
  %4 = bitcast %"class.base::internal::BindStateBase"* %0 to i8*
  tail call void @_ZdlPv(i8* %4) #11
  br label %5

5:                                                ; preds = %3, %1
  ret void
}

attributes #0 = { nounwind ssp uwtable "correctly-rounded-divide-sqrt-fp-math"="false" "disable-tail-calls"="false" "less-precise-fpmad"="false" "min-legal-vector-width"="0" "no-frame-pointer-elim"="false" "no-frame-pointer-elim-non-leaf" "no-infs-fp-math"="false" "no-jump-tables"="false" "no-nans-fp-math"="false" "no-signed-zeros-fp-math"="false" "no-trapping-math"="false" "null-pointer-is-valid"="true" "stack-protector-buffer-size"="4" "target-cpu"="x86-64" "target-features"="+cx8,+fxsr,+mmx,+sse,+sse2,+sse3,+x87" "unsafe-fp-math"="false" "use-soft-float"="false" }
attributes #1 = { "correctly-rounded-divide-sqrt-fp-math"="false" "disable-tail-calls"="false" "less-precise-fpmad"="false" "no-frame-pointer-elim"="false" "no-frame-pointer-elim-non-leaf" "no-infs-fp-math"="false" "no-nans-fp-math"="false" "no-signed-zeros-fp-math"="false" "no-trapping-math"="false" "null-pointer-is-valid"="true" "stack-protector-buffer-size"="4" "target-cpu"="x86-64" "target-features"="+cx8,+fxsr,+mmx,+sse,+sse2,+sse3,+x87" "unsafe-fp-math"="false" "use-soft-float"="false" }
attributes #2 = { nounwind "correctly-rounded-divide-sqrt-fp-math"="false" "disable-tail-calls"="false" "less-precise-fpmad"="false" "no-frame-pointer-elim"="false" "no-frame-pointer-elim-non-leaf" "no-infs-fp-math"="false" "no-nans-fp-math"="false" "no-signed-zeros-fp-math"="false" "no-trapping-math"="false" "null-pointer-is-valid"="true" "stack-protector-buffer-size"="4" "target-cpu"="x86-64" "target-features"="+cx8,+fxsr,+mmx,+sse,+sse2,+sse3,+x87" "unsafe-fp-math"="false" "use-soft-float"="false" }
attributes #3 = { nofree norecurse nounwind ssp uwtable writeonly "correctly-rounded-divide-sqrt-fp-math"="false" "disable-tail-calls"="false" "less-precise-fpmad"="false" "min-legal-vector-width"="0" "no-frame-pointer-elim"="false" "no-frame-pointer-elim-non-leaf" "no-infs-fp-math"="false" "no-jump-tables"="false" "no-nans-fp-math"="false" "no-signed-zeros-fp-math"="false" "no-trapping-math"="false" "null-pointer-is-valid"="true" "stack-protector-buffer-size"="4" "target-cpu"="x86-64" "target-features"="+cx8,+fxsr,+mmx,+sse,+sse2,+sse3,+x87" "unsafe-fp-math"="false" "use-soft-float"="false" }
attributes #4 = { norecurse nounwind readnone ssp uwtable "correctly-rounded-divide-sqrt-fp-math"="false" "disable-tail-calls"="false" "less-precise-fpmad"="false" "min-legal-vector-width"="0" "no-frame-pointer-elim"="false" "no-frame-pointer-elim-non-leaf" "no-infs-fp-math"="false" "no-jump-tables"="false" "no-nans-fp-math"="false" "no-signed-zeros-fp-math"="false" "no-trapping-math"="false" "null-pointer-is-valid"="true" "stack-protector-buffer-size"="4" "target-cpu"="x86-64" "target-features"="+cx8,+fxsr,+mmx,+sse,+sse2,+sse3,+x87" "unsafe-fp-math"="false" "use-soft-float"="false" }
attributes #5 = { argmemonly nounwind }
attributes #6 = { inlinehint nounwind ssp uwtable "correctly-rounded-divide-sqrt-fp-math"="false" "disable-tail-calls"="false" "less-precise-fpmad"="false" "min-legal-vector-width"="0" "no-frame-pointer-elim"="false" "no-frame-pointer-elim-non-leaf" "no-infs-fp-math"="false" "no-jump-tables"="false" "no-nans-fp-math"="false" "no-signed-zeros-fp-math"="false" "no-trapping-math"="false" "null-pointer-is-valid"="true" "stack-protector-buffer-size"="4" "target-cpu"="x86-64" "target-features"="+cx8,+fxsr,+mmx,+sse,+sse2,+sse3,+x87" "unsafe-fp-math"="false" "use-soft-float"="false" }
attributes #7 = { cold noreturn nounwind }
attributes #8 = { nobuiltin nofree "correctly-rounded-divide-sqrt-fp-math"="false" "disable-tail-calls"="false" "less-precise-fpmad"="false" "no-frame-pointer-elim"="false" "no-frame-pointer-elim-non-leaf" "no-infs-fp-math"="false" "no-nans-fp-math"="false" "no-signed-zeros-fp-math"="false" "no-trapping-math"="false" "null-pointer-is-valid"="true" "stack-protector-buffer-size"="4" "target-cpu"="x86-64" "target-features"="+cx8,+fxsr,+mmx,+sse,+sse2,+sse3,+x87" "unsafe-fp-math"="false" "use-soft-float"="false" }
attributes #9 = { nobuiltin nounwind "correctly-rounded-divide-sqrt-fp-math"="false" "disable-tail-calls"="false" "less-precise-fpmad"="false" "no-frame-pointer-elim"="false" "no-frame-pointer-elim-non-leaf" "no-infs-fp-math"="false" "no-nans-fp-math"="false" "no-signed-zeros-fp-math"="false" "no-trapping-math"="false" "null-pointer-is-valid"="true" "stack-protector-buffer-size"="4" "target-cpu"="x86-64" "target-features"="+cx8,+fxsr,+mmx,+sse,+sse2,+sse3,+x87" "unsafe-fp-math"="false" "use-soft-float"="false" }
attributes #10 = { nounwind }
attributes #11 = { builtin nounwind }
attributes #12 = { noreturn nounwind }

!llvm.module.flags = !{!0, !1}

!0 = !{i32 1, !"wchar_size", i32 4}
!1 = !{i32 7, !"PIC Level", i32 2}
!2 = !{!3, !5}
!3 = distinct !{!3, !4, !"_ZN4base8internal8BindImplINS_12OnceCallbackEZN12data_decoder5mojom18GzipperAsyncWaiter8CompressEN9mojo_base9BigBufferEPN4absl8optionalIS7_EEE3$_0JPNS_7RunLoopERSB_EEEDcOT0_DpOT1_: argument 0"}
!4 = distinct !{!4, !"_ZN4base8internal8BindImplINS_12OnceCallbackEZN12data_decoder5mojom18GzipperAsyncWaiter8CompressEN9mojo_base9BigBufferEPN4absl8optionalIS7_EEE3$_0JPNS_7RunLoopERSB_EEEDcOT0_DpOT1_"}
!5 = distinct !{!5, !6, !"_ZN4base8BindOnceIZN12data_decoder5mojom18GzipperAsyncWaiter8CompressEN9mojo_base9BigBufferEPN4absl8optionalIS5_EEE3$_0JPNS_7RunLoopERS9_EEENS_12OnceCallbackINS_8internal14BindTypeHelperIT_JDpT0_EE14UnboundRunTypeEEEOSH_DpOSI_: argument 0"}
!6 = distinct !{!6, !"_ZN4base8BindOnceIZN12data_decoder5mojom18GzipperAsyncWaiter8CompressEN9mojo_base9BigBufferEPN4absl8optionalIS5_EEE3$_0JPNS_7RunLoopERS9_EEENS_12OnceCallbackINS_8internal14BindTypeHelperIT_JDpT0_EE14UnboundRunTypeEEEOSH_DpOSI_"}
!7 = !{!8, !10}
!8 = distinct !{!8, !9, !"_ZN4base8internal8BindImplINS_12OnceCallbackEZN12data_decoder5mojom18GzipperAsyncWaiter10UncompressEN9mojo_base9BigBufferEPN4absl8optionalIS7_EEE3$_1JPNS_7RunLoopERSB_EEEDcOT0_DpOT1_: argument 0"}
!9 = distinct !{!9, !"_ZN4base8internal8BindImplINS_12OnceCallbackEZN12data_decoder5mojom18GzipperAsyncWaiter10UncompressEN9mojo_base9BigBufferEPN4absl8optionalIS7_EEE3$_1JPNS_7RunLoopERSB_EEEDcOT0_DpOT1_"}
!10 = distinct !{!10, !11, !"_ZN4base8BindOnceIZN12data_decoder5mojom18GzipperAsyncWaiter10UncompressEN9mojo_base9BigBufferEPN4absl8optionalIS5_EEE3$_1JPNS_7RunLoopERS9_EEENS_12OnceCallbackINS_8internal14BindTypeHelperIT_JDpT0_EE14UnboundRunTypeEEEOSH_DpOSI_: argument 0"}
!11 = distinct !{!11, !"_ZN4base8BindOnceIZN12data_decoder5mojom18GzipperAsyncWaiter10UncompressEN9mojo_base9BigBufferEPN4absl8optionalIS5_EEE3$_1JPNS_7RunLoopERS9_EEENS_12OnceCallbackINS_8internal14BindTypeHelperIT_JDpT0_EE14UnboundRunTypeEEEOSH_DpOSI_"}
!12 = !{i8 0, i8 2}
