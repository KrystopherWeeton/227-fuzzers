; ModuleID = '../../third_party/protobuf/src/google/protobuf/generated_enum_util.cc'
source_filename = "../../third_party/protobuf/src/google/protobuf/generated_enum_util.cc"
target datalayout = "e-m:e-i64:64-f80:128-n8:16:32:64-S128"
target triple = "x86_64-unknown-linux-gnu"

module asm ".symver exp, exp@GLIBC_2.2.5"
module asm ".symver exp2, exp2@GLIBC_2.2.5"
module asm ".symver exp2f, exp2f@GLIBC_2.2.5"
module asm ".symver expf, expf@GLIBC_2.2.5"
module asm ".symver lgamma, lgamma@GLIBC_2.2.5"
module asm ".symver lgammaf, lgammaf@GLIBC_2.2.5"
module asm ".symver lgammal, lgammal@GLIBC_2.2.5"
module asm ".symver log, log@GLIBC_2.2.5"
module asm ".symver log2, log2@GLIBC_2.2.5"
module asm ".symver log2f, log2f@GLIBC_2.2.5"
module asm ".symver logf, logf@GLIBC_2.2.5"
module asm ".symver pow, pow@GLIBC_2.2.5"
module asm ".symver powf, powf@GLIBC_2.2.5"

%"struct.google::protobuf::internal::EnumEntry" = type <{ %"class.google::protobuf::StringPiece", i32, [4 x i8] }>
%"class.google::protobuf::StringPiece" = type { i8*, i64 }
%"class.google::protobuf::internal::ExplicitlyConstructed" = type { %"union.google::protobuf::internal::ExplicitlyConstructed<std::__1::basic_string<char, std::__1::char_traits<char>, std::__1::allocator<char> > >::AlignedUnion" }
%"union.google::protobuf::internal::ExplicitlyConstructed<std::__1::basic_string<char, std::__1::char_traits<char>, std::__1::allocator<char> > >::AlignedUnion" = type { i64, [16 x i8] }
%"class.std::__1::__basic_string_common" = type { i8 }

$_ZN6google8protobufltENS0_11StringPieceES1_ = comdat any

; Function Attrs: nounwind ssp uwtable
define hidden zeroext i1 @_ZN6google8protobuf8internal15LookUpEnumValueEPKNS1_9EnumEntryEmNS0_11StringPieceEPi(%"struct.google::protobuf::internal::EnumEntry"*, i64, i8*, i64, i32* nocapture) local_unnamed_addr #0 {
  %6 = getelementptr inbounds %"struct.google::protobuf::internal::EnumEntry", %"struct.google::protobuf::internal::EnumEntry"* %0, i64 %1
  %7 = mul nuw i64 %1, 24
  %8 = icmp eq i64 %7, 0
  br i1 %8, label %27, label %9

9:                                                ; preds = %5
  %10 = sdiv exact i64 %7, 24
  br label %11

11:                                               ; preds = %11, %9
  %12 = phi i64 [ %25, %11 ], [ %10, %9 ]
  %13 = phi %"struct.google::protobuf::internal::EnumEntry"* [ %24, %11 ], [ %0, %9 ]
  %14 = lshr i64 %12, 1
  %15 = getelementptr inbounds %"struct.google::protobuf::internal::EnumEntry", %"struct.google::protobuf::internal::EnumEntry"* %13, i64 %14
  %16 = getelementptr inbounds %"struct.google::protobuf::internal::EnumEntry", %"struct.google::protobuf::internal::EnumEntry"* %15, i64 0, i32 0, i32 0
  %17 = load i8*, i8** %16, align 8
  %18 = getelementptr inbounds %"struct.google::protobuf::internal::EnumEntry", %"struct.google::protobuf::internal::EnumEntry"* %13, i64 %14, i32 0, i32 1
  %19 = load i64, i64* %18, align 8
  %20 = tail call zeroext i1 @_ZN6google8protobufltENS0_11StringPieceES1_(i8* %17, i64 %19, i8* %2, i64 %3) #9
  %21 = getelementptr inbounds %"struct.google::protobuf::internal::EnumEntry", %"struct.google::protobuf::internal::EnumEntry"* %15, i64 1
  %22 = xor i64 %14, -1
  %23 = add i64 %12, %22
  %24 = select i1 %20, %"struct.google::protobuf::internal::EnumEntry"* %21, %"struct.google::protobuf::internal::EnumEntry"* %13
  %25 = select i1 %20, i64 %23, i64 %14
  %26 = icmp eq i64 %25, 0
  br i1 %26, label %27, label %11

27:                                               ; preds = %11, %5
  %28 = phi %"struct.google::protobuf::internal::EnumEntry"* [ %0, %5 ], [ %24, %11 ]
  %29 = icmp eq %"struct.google::protobuf::internal::EnumEntry"* %28, %6
  br i1 %29, label %46, label %30

30:                                               ; preds = %27
  %31 = getelementptr inbounds %"struct.google::protobuf::internal::EnumEntry", %"struct.google::protobuf::internal::EnumEntry"* %28, i64 0, i32 0, i32 0
  %32 = load i8*, i8** %31, align 8
  %33 = getelementptr inbounds %"struct.google::protobuf::internal::EnumEntry", %"struct.google::protobuf::internal::EnumEntry"* %28, i64 0, i32 0, i32 1
  %34 = load i64, i64* %33, align 8
  %35 = icmp eq i64 %34, %3
  br i1 %35, label %36, label %46

36:                                               ; preds = %30
  %37 = icmp eq i8* %32, %2
  %38 = icmp slt i64 %3, 1
  %39 = or i1 %37, %38
  br i1 %39, label %43, label %40

40:                                               ; preds = %36
  %41 = tail call i32 @bcmp(i8* %32, i8* %2, i64 %3) #9
  %42 = icmp eq i32 %41, 0
  br i1 %42, label %43, label %46

43:                                               ; preds = %36, %40
  %44 = getelementptr inbounds %"struct.google::protobuf::internal::EnumEntry", %"struct.google::protobuf::internal::EnumEntry"* %28, i64 0, i32 1
  %45 = load i32, i32* %44, align 8
  store i32 %45, i32* %4, align 4
  br label %46

46:                                               ; preds = %30, %40, %27, %43
  %47 = phi i1 [ true, %43 ], [ false, %27 ], [ false, %40 ], [ false, %30 ]
  ret i1 %47
}

; Function Attrs: argmemonly nounwind
declare void @llvm.memcpy.p0i8.p0i8.i64(i8* nocapture writeonly, i8* nocapture readonly, i64, i1 immarg) #1

; Function Attrs: nounwind readonly ssp uwtable
define hidden i32 @_ZN6google8protobuf8internal14LookUpEnumNameEPKNS1_9EnumEntryEPKimi(%"struct.google::protobuf::internal::EnumEntry"* nocapture readonly, i32*, i64, i32) local_unnamed_addr #2 {
  %5 = getelementptr inbounds i32, i32* %1, i64 %2
  %6 = ptrtoint i32* %1 to i64
  %7 = icmp eq i64 %2, 0
  br i1 %7, label %31, label %8

8:                                                ; preds = %4
  %9 = shl nuw i64 %2, 2
  %10 = ashr exact i64 %9, 2
  br label %11

11:                                               ; preds = %22, %8
  %12 = phi i64 [ %10, %8 ], [ %29, %22 ]
  %13 = phi i32* [ %1, %8 ], [ %28, %22 ]
  %14 = lshr i64 %12, 1
  %15 = getelementptr inbounds i32, i32* %13, i64 %14
  %16 = load i32, i32* %15, align 4
  %17 = icmp eq i32 %16, -1
  br i1 %17, label %22, label %18

18:                                               ; preds = %11
  %19 = sext i32 %16 to i64
  %20 = getelementptr inbounds %"struct.google::protobuf::internal::EnumEntry", %"struct.google::protobuf::internal::EnumEntry"* %0, i64 %19, i32 1
  %21 = load i32, i32* %20, align 8
  br label %22

22:                                               ; preds = %11, %18
  %23 = phi i32 [ %21, %18 ], [ %3, %11 ]
  %24 = icmp slt i32 %23, %3
  %25 = getelementptr inbounds i32, i32* %15, i64 1
  %26 = xor i64 %14, -1
  %27 = add i64 %12, %26
  %28 = select i1 %24, i32* %25, i32* %13
  %29 = select i1 %24, i64 %27, i64 %14
  %30 = icmp eq i64 %29, 0
  br i1 %30, label %31, label %11

31:                                               ; preds = %22, %4
  %32 = phi i32* [ %1, %4 ], [ %28, %22 ]
  %33 = icmp eq i32* %32, %5
  br i1 %33, label %45, label %34

34:                                               ; preds = %31
  %35 = load i32, i32* %32, align 4
  %36 = sext i32 %35 to i64
  %37 = getelementptr inbounds %"struct.google::protobuf::internal::EnumEntry", %"struct.google::protobuf::internal::EnumEntry"* %0, i64 %36, i32 1
  %38 = load i32, i32* %37, align 8
  %39 = icmp eq i32 %38, %3
  br i1 %39, label %40, label %45

40:                                               ; preds = %34
  %41 = ptrtoint i32* %32 to i64
  %42 = sub i64 %41, %6
  %43 = lshr exact i64 %42, 2
  %44 = trunc i64 %43 to i32
  br label %45

45:                                               ; preds = %34, %31, %40
  %46 = phi i32 [ %44, %40 ], [ -1, %31 ], [ -1, %34 ]
  ret i32 %46
}

; Function Attrs: nounwind ssp uwtable
define hidden zeroext i1 @_ZN6google8protobuf8internal21InitializeEnumStringsEPKNS1_9EnumEntryEPKimPNS1_21ExplicitlyConstructedINSt3__112basic_stringIcNS8_11char_traitsIcEENS8_9allocatorIcEEEEEE(%"struct.google::protobuf::internal::EnumEntry"* nocapture readonly, i32* nocapture readonly, i64, %"class.google::protobuf::internal::ExplicitlyConstructed"*) local_unnamed_addr #0 {
  %5 = icmp eq i64 %2, 0
  br i1 %5, label %6, label %7

6:                                                ; preds = %50, %4
  ret i1 true

7:                                                ; preds = %4, %50
  %8 = phi i64 [ %52, %50 ], [ 0, %4 ]
  %9 = getelementptr inbounds %"class.google::protobuf::internal::ExplicitlyConstructed", %"class.google::protobuf::internal::ExplicitlyConstructed"* %3, i64 %8
  %10 = getelementptr inbounds i32, i32* %1, i64 %8
  %11 = load i32, i32* %10, align 4
  %12 = sext i32 %11 to i64
  %13 = getelementptr inbounds %"struct.google::protobuf::internal::EnumEntry", %"struct.google::protobuf::internal::EnumEntry"* %0, i64 %12, i32 0, i32 0
  %14 = load i8*, i8** %13, align 8, !noalias !2
  %15 = icmp eq i8* %14, null
  br i1 %15, label %16, label %19

16:                                               ; preds = %7
  %17 = getelementptr inbounds %"class.google::protobuf::internal::ExplicitlyConstructed", %"class.google::protobuf::internal::ExplicitlyConstructed"* %3, i64 %8, i32 0, i32 1, i64 15
  store i8 0, i8* %17, align 1, !alias.scope !2
  %18 = bitcast %"class.google::protobuf::internal::ExplicitlyConstructed"* %9 to i8*
  store i8 0, i8* %18, align 8, !alias.scope !2
  br label %50

19:                                               ; preds = %7
  %20 = getelementptr inbounds %"struct.google::protobuf::internal::EnumEntry", %"struct.google::protobuf::internal::EnumEntry"* %0, i64 %12, i32 0, i32 1
  %21 = load i64, i64* %20, align 8, !noalias !2
  %22 = icmp ugt i64 %21, -17
  br i1 %22, label %23, label %25

23:                                               ; preds = %19
  %24 = bitcast %"class.google::protobuf::internal::ExplicitlyConstructed"* %9 to %"class.std::__1::__basic_string_common"*
  tail call void @_ZNKSt3__121__basic_string_commonILb1EE20__throw_length_errorEv(%"class.std::__1::__basic_string_common"* %24) #10
  unreachable

25:                                               ; preds = %19
  %26 = icmp ult i64 %21, 23
  br i1 %26, label %38, label %27

27:                                               ; preds = %25
  %28 = add nuw i64 %21, 16
  %29 = and i64 %28, -16
  %30 = tail call i8* @_Znwm(i64 %29) #11
  %31 = bitcast %"class.google::protobuf::internal::ExplicitlyConstructed"* %9 to i8**
  store i8* %30, i8** %31, align 8, !alias.scope !2
  %32 = or i64 %29, -9223372036854775808
  %33 = getelementptr inbounds %"class.google::protobuf::internal::ExplicitlyConstructed", %"class.google::protobuf::internal::ExplicitlyConstructed"* %3, i64 %8, i32 0, i32 1, i64 8
  %34 = bitcast i8* %33 to i64*
  store i64 %32, i64* %34, align 8, !alias.scope !2
  %35 = getelementptr inbounds %"class.google::protobuf::internal::ExplicitlyConstructed", %"class.google::protobuf::internal::ExplicitlyConstructed"* %3, i64 %8, i32 0, i32 1
  %36 = bitcast [16 x i8]* %35 to i64*
  store i64 %21, i64* %36, align 8, !alias.scope !2
  %37 = bitcast %"class.google::protobuf::internal::ExplicitlyConstructed"* %9 to i8*
  br label %43

38:                                               ; preds = %25
  %39 = trunc i64 %21 to i8
  %40 = getelementptr inbounds %"class.google::protobuf::internal::ExplicitlyConstructed", %"class.google::protobuf::internal::ExplicitlyConstructed"* %3, i64 %8, i32 0, i32 1, i64 15
  store i8 %39, i8* %40, align 1, !alias.scope !2
  %41 = bitcast %"class.google::protobuf::internal::ExplicitlyConstructed"* %9 to i8*
  %42 = icmp eq i64 %21, 0
  br i1 %42, label %46, label %43

43:                                               ; preds = %38, %27
  %44 = phi i8* [ %41, %38 ], [ %37, %27 ]
  %45 = phi i8* [ %41, %38 ], [ %30, %27 ]
  tail call void @llvm.memcpy.p0i8.p0i8.i64(i8* align 1 %45, i8* nonnull align 1 %14, i64 %21, i1 false) #9
  br label %46

46:                                               ; preds = %43, %38
  %47 = phi i8* [ %44, %43 ], [ %41, %38 ]
  %48 = phi i8* [ %45, %43 ], [ %41, %38 ]
  %49 = getelementptr inbounds i8, i8* %48, i64 %21
  store i8 0, i8* %49, align 1
  br label %50

50:                                               ; preds = %16, %46
  %51 = phi i8* [ %18, %16 ], [ %47, %46 ]
  tail call void @_ZN6google8protobuf8internal13OnShutdownRunEPFvPKvES3_(void (i8*)* nonnull @_ZN6google8protobuf8internal13DestroyStringEPKv, i8* %51) #9
  %52 = add nuw i64 %8, 1
  %53 = icmp eq i64 %52, %2
  br i1 %53, label %6, label %7
}

; Function Attrs: inlinehint nounwind ssp uwtable
define linkonce_odr hidden zeroext i1 @_ZN6google8protobufltENS0_11StringPieceES1_(i8*, i64, i8*, i64) local_unnamed_addr #3 comdat {
  %5 = icmp slt i64 %1, %3
  %6 = select i1 %5, i64 %1, i64 %3
  %7 = tail call i32 @memcmp(i8* %0, i8* %2, i64 %6) #12
  %8 = icmp slt i32 %7, 0
  br i1 %8, label %12, label %9

9:                                                ; preds = %4
  %10 = icmp eq i32 %7, 0
  %11 = and i1 %5, %10
  ret i1 %11

12:                                               ; preds = %4
  ret i1 true
}

; Function Attrs: nofree nounwind readonly
declare i32 @memcmp(i8* nocapture, i8* nocapture, i64) local_unnamed_addr #4

declare void @_ZN6google8protobuf8internal13OnShutdownRunEPFvPKvES3_(void (i8*)*, i8*) local_unnamed_addr #5

declare void @_ZN6google8protobuf8internal13DestroyStringEPKv(i8*) #5

; Function Attrs: noreturn
declare void @_ZNKSt3__121__basic_string_commonILb1EE20__throw_length_errorEv(%"class.std::__1::__basic_string_common"*) local_unnamed_addr #6

; Function Attrs: nobuiltin nofree
declare noalias nonnull i8* @_Znwm(i64) local_unnamed_addr #7

; Function Attrs: nofree nounwind readonly
declare i32 @bcmp(i8* nocapture, i8* nocapture, i64) local_unnamed_addr #8

attributes #0 = { nounwind ssp uwtable "correctly-rounded-divide-sqrt-fp-math"="false" "disable-tail-calls"="false" "less-precise-fpmad"="false" "min-legal-vector-width"="0" "no-frame-pointer-elim"="false" "no-frame-pointer-elim-non-leaf" "no-infs-fp-math"="false" "no-jump-tables"="false" "no-nans-fp-math"="false" "no-signed-zeros-fp-math"="false" "no-trapping-math"="false" "null-pointer-is-valid"="true" "stack-protector-buffer-size"="4" "target-cpu"="x86-64" "target-features"="+cx8,+fxsr,+mmx,+sse,+sse2,+sse3,+x87" "unsafe-fp-math"="false" "use-soft-float"="false" }
attributes #1 = { argmemonly nounwind }
attributes #2 = { nounwind readonly ssp uwtable "correctly-rounded-divide-sqrt-fp-math"="false" "disable-tail-calls"="false" "less-precise-fpmad"="false" "min-legal-vector-width"="0" "no-frame-pointer-elim"="false" "no-frame-pointer-elim-non-leaf" "no-infs-fp-math"="false" "no-jump-tables"="false" "no-nans-fp-math"="false" "no-signed-zeros-fp-math"="false" "no-trapping-math"="false" "null-pointer-is-valid"="true" "stack-protector-buffer-size"="4" "target-cpu"="x86-64" "target-features"="+cx8,+fxsr,+mmx,+sse,+sse2,+sse3,+x87" "unsafe-fp-math"="false" "use-soft-float"="false" }
attributes #3 = { inlinehint nounwind ssp uwtable "correctly-rounded-divide-sqrt-fp-math"="false" "disable-tail-calls"="false" "less-precise-fpmad"="false" "min-legal-vector-width"="0" "no-frame-pointer-elim"="false" "no-frame-pointer-elim-non-leaf" "no-infs-fp-math"="false" "no-jump-tables"="false" "no-nans-fp-math"="false" "no-signed-zeros-fp-math"="false" "no-trapping-math"="false" "null-pointer-is-valid"="true" "stack-protector-buffer-size"="4" "target-cpu"="x86-64" "target-features"="+cx8,+fxsr,+mmx,+sse,+sse2,+sse3,+x87" "unsafe-fp-math"="false" "use-soft-float"="false" }
attributes #4 = { nofree nounwind readonly "correctly-rounded-divide-sqrt-fp-math"="false" "disable-tail-calls"="false" "less-precise-fpmad"="false" "no-frame-pointer-elim"="false" "no-frame-pointer-elim-non-leaf" "no-infs-fp-math"="false" "no-nans-fp-math"="false" "no-signed-zeros-fp-math"="false" "no-trapping-math"="false" "null-pointer-is-valid"="true" "stack-protector-buffer-size"="4" "target-cpu"="x86-64" "target-features"="+cx8,+fxsr,+mmx,+sse,+sse2,+sse3,+x87" "unsafe-fp-math"="false" "use-soft-float"="false" }
attributes #5 = { "correctly-rounded-divide-sqrt-fp-math"="false" "disable-tail-calls"="false" "less-precise-fpmad"="false" "no-frame-pointer-elim"="false" "no-frame-pointer-elim-non-leaf" "no-infs-fp-math"="false" "no-nans-fp-math"="false" "no-signed-zeros-fp-math"="false" "no-trapping-math"="false" "null-pointer-is-valid"="true" "stack-protector-buffer-size"="4" "target-cpu"="x86-64" "target-features"="+cx8,+fxsr,+mmx,+sse,+sse2,+sse3,+x87" "unsafe-fp-math"="false" "use-soft-float"="false" }
attributes #6 = { noreturn "correctly-rounded-divide-sqrt-fp-math"="false" "disable-tail-calls"="false" "less-precise-fpmad"="false" "no-frame-pointer-elim"="false" "no-frame-pointer-elim-non-leaf" "no-infs-fp-math"="false" "no-nans-fp-math"="false" "no-signed-zeros-fp-math"="false" "no-trapping-math"="false" "null-pointer-is-valid"="true" "stack-protector-buffer-size"="4" "target-cpu"="x86-64" "target-features"="+cx8,+fxsr,+mmx,+sse,+sse2,+sse3,+x87" "unsafe-fp-math"="false" "use-soft-float"="false" }
attributes #7 = { nobuiltin nofree "correctly-rounded-divide-sqrt-fp-math"="false" "disable-tail-calls"="false" "less-precise-fpmad"="false" "no-frame-pointer-elim"="false" "no-frame-pointer-elim-non-leaf" "no-infs-fp-math"="false" "no-nans-fp-math"="false" "no-signed-zeros-fp-math"="false" "no-trapping-math"="false" "null-pointer-is-valid"="true" "stack-protector-buffer-size"="4" "target-cpu"="x86-64" "target-features"="+cx8,+fxsr,+mmx,+sse,+sse2,+sse3,+x87" "unsafe-fp-math"="false" "use-soft-float"="false" }
attributes #8 = { nofree nounwind readonly }
attributes #9 = { nounwind }
attributes #10 = { noreturn nounwind }
attributes #11 = { builtin nounwind }
attributes #12 = { nounwind readonly }

!llvm.module.flags = !{!0, !1}

!0 = !{i32 1, !"wchar_size", i32 4}
!1 = !{i32 7, !"PIC Level", i32 2}
!2 = !{!3, !5}
!3 = distinct !{!3, !4, !"_ZNK6google8protobuf11StringPiece8ToStringEv: argument 0"}
!4 = distinct !{!4, !"_ZNK6google8protobuf11StringPiece8ToStringEv"}
!5 = distinct !{!5, !6, !"_ZNK6google8protobuf11StringPiececvNSt3__112basic_stringIcNS2_11char_traitsIcEENS2_9allocatorIcEEEEEv: argument 0"}
!6 = distinct !{!6, !"_ZNK6google8protobuf11StringPiececvNSt3__112basic_stringIcNS2_11char_traitsIcEENS2_9allocatorIcEEEEEv"}
