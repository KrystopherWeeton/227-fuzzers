; ModuleID = '../../base/i18n/streaming_utf8_validator.cc'
source_filename = "../../base/i18n/streaming_utf8_validator.cc"
target datalayout = "e-m:e-i64:64-f80:128-n8:16:32:64-S128"
target triple = "x86_64-unknown-linux-gnu"

%"class.base::StreamingUtf8Validator" = type { i8 }
%"class.std::__1::basic_string" = type { %"class.std::__1::__compressed_pair" }
%"class.std::__1::__compressed_pair" = type { %"struct.std::__1::__compressed_pair_elem" }
%"struct.std::__1::__compressed_pair_elem" = type { %"struct.std::__1::basic_string<char, std::__1::char_traits<char>, std::__1::allocator<char> >::__rep" }
%"struct.std::__1::basic_string<char, std::__1::char_traits<char>, std::__1::allocator<char> >::__rep" = type { %union.anon }
%union.anon = type { %"struct.std::__1::basic_string<char, std::__1::char_traits<char>, std::__1::allocator<char> >::__long" }
%"struct.std::__1::basic_string<char, std::__1::char_traits<char>, std::__1::allocator<char> >::__long" = type { i8*, i64, i64 }
%"struct.std::__1::basic_string<char, std::__1::char_traits<char>, std::__1::allocator<char> >::__short" = type { [23 x i8], %struct.anon }
%struct.anon = type { i8 }

@_ZN4base8internal20kUtf8ValidatorTablesE = external local_unnamed_addr constant [0 x i8], align 1

; Function Attrs: nofree norecurse nounwind ssp uwtable
define hidden i32 @_ZN4base22StreamingUtf8Validator8AddBytesEPKcm(%"class.base::StreamingUtf8Validator"* nocapture, i8* readonly, i64) local_unnamed_addr #0 align 2 {
  %4 = getelementptr inbounds %"class.base::StreamingUtf8Validator", %"class.base::StreamingUtf8Validator"* %0, i64 0, i32 0
  %5 = load i8, i8* %4, align 1
  %6 = getelementptr inbounds i8, i8* %1, i64 %2
  %7 = icmp eq i64 %2, 0
  br i1 %7, label %34, label %8

8:                                                ; preds = %3, %30
  %9 = phi i8 [ %31, %30 ], [ %5, %3 ]
  %10 = phi i8* [ %32, %30 ], [ %1, %3 ]
  %11 = load i8, i8* %10, align 1
  %12 = icmp sgt i8 %11, -1
  br i1 %12, label %13, label %16

13:                                               ; preds = %8
  %14 = icmp eq i8 %9, 0
  br i1 %14, label %30, label %15

15:                                               ; preds = %13
  store i8 -127, i8* %4, align 1
  br label %38

16:                                               ; preds = %8
  %17 = zext i8 %9 to i64
  %18 = getelementptr inbounds [0 x i8], [0 x i8]* @_ZN4base8internal20kUtf8ValidatorTablesE, i64 0, i64 %17
  %19 = load i8, i8* %18, align 1
  %20 = and i8 %11, 127
  %21 = zext i8 %20 to i32
  %22 = zext i8 %19 to i32
  %23 = lshr i32 %21, %22
  %24 = trunc i32 %23 to i8
  %25 = add i8 %9, 1
  %26 = add i8 %25, %24
  %27 = zext i8 %26 to i64
  %28 = getelementptr inbounds [0 x i8], [0 x i8]* @_ZN4base8internal20kUtf8ValidatorTablesE, i64 0, i64 %27
  %29 = load i8, i8* %28, align 1
  br label %30

30:                                               ; preds = %13, %16
  %31 = phi i8 [ 0, %13 ], [ %29, %16 ]
  %32 = getelementptr inbounds i8, i8* %10, i64 1
  %33 = icmp eq i8* %32, %6
  br i1 %33, label %34, label %8

34:                                               ; preds = %30, %3
  %35 = phi i8 [ %5, %3 ], [ %31, %30 ]
  store i8 %35, i8* %4, align 1
  %36 = icmp eq i8 %35, 0
  %37 = icmp eq i8 %35, -127
  br i1 %37, label %38, label %40

38:                                               ; preds = %15, %34
  %39 = phi i1 [ false, %15 ], [ %36, %34 ]
  br label %40

40:                                               ; preds = %34, %38
  %41 = phi i1 [ %39, %38 ], [ %36, %34 ]
  %42 = phi i32 [ 2, %38 ], [ 1, %34 ]
  %43 = select i1 %41, i32 0, i32 %42
  ret i32 %43
}

; Function Attrs: nofree norecurse nounwind ssp uwtable writeonly
define hidden void @_ZN4base22StreamingUtf8Validator5ResetEv(%"class.base::StreamingUtf8Validator"* nocapture) local_unnamed_addr #1 align 2 {
  %2 = getelementptr inbounds %"class.base::StreamingUtf8Validator", %"class.base::StreamingUtf8Validator"* %0, i64 0, i32 0
  store i8 0, i8* %2, align 1
  ret void
}

; Function Attrs: nounwind readonly ssp uwtable
define hidden zeroext i1 @_ZN4base22StreamingUtf8Validator8ValidateERKNSt3__112basic_stringIcNS1_11char_traitsIcEENS1_9allocatorIcEEEE(%"class.std::__1::basic_string"* readonly dereferenceable(24)) local_unnamed_addr #2 align 2 {
  %2 = bitcast %"class.std::__1::basic_string"* %0 to %"struct.std::__1::basic_string<char, std::__1::char_traits<char>, std::__1::allocator<char> >::__short"*
  %3 = getelementptr inbounds %"struct.std::__1::basic_string<char, std::__1::char_traits<char>, std::__1::allocator<char> >::__short", %"struct.std::__1::basic_string<char, std::__1::char_traits<char>, std::__1::allocator<char> >::__short"* %2, i64 0, i32 1, i32 0
  %4 = load i8, i8* %3, align 1
  %5 = icmp slt i8 %4, 0
  %6 = getelementptr inbounds %"class.std::__1::basic_string", %"class.std::__1::basic_string"* %0, i64 0, i32 0, i32 0, i32 0, i32 0, i32 0, i32 0
  %7 = load i8*, i8** %6, align 8
  %8 = getelementptr inbounds %"class.std::__1::basic_string", %"class.std::__1::basic_string"* %0, i64 0, i32 0, i32 0, i32 0, i32 0, i32 0, i32 1
  %9 = load i64, i64* %8, align 8
  %10 = bitcast %"class.std::__1::basic_string"* %0 to i8*
  %11 = zext i8 %4 to i64
  %12 = select i1 %5, i8* %7, i8* %10
  %13 = select i1 %5, i64 %9, i64 %11
  %14 = getelementptr inbounds i8, i8* %12, i64 %13
  %15 = icmp eq i64 %13, 0
  br i1 %15, label %43, label %16

16:                                               ; preds = %1, %37
  %17 = phi i8 [ %38, %37 ], [ 0, %1 ]
  %18 = phi i8* [ %39, %37 ], [ %12, %1 ]
  %19 = load i8, i8* %18, align 1
  %20 = icmp sgt i8 %19, -1
  br i1 %20, label %21, label %23

21:                                               ; preds = %16
  %22 = icmp eq i8 %17, 0
  br i1 %22, label %37, label %44

23:                                               ; preds = %16
  %24 = zext i8 %17 to i64
  %25 = getelementptr inbounds [0 x i8], [0 x i8]* @_ZN4base8internal20kUtf8ValidatorTablesE, i64 0, i64 %24
  %26 = load i8, i8* %25, align 1
  %27 = and i8 %19, 127
  %28 = zext i8 %27 to i32
  %29 = zext i8 %26 to i32
  %30 = lshr i32 %28, %29
  %31 = trunc i32 %30 to i8
  %32 = add i8 %17, 1
  %33 = add i8 %32, %31
  %34 = zext i8 %33 to i64
  %35 = getelementptr inbounds [0 x i8], [0 x i8]* @_ZN4base8internal20kUtf8ValidatorTablesE, i64 0, i64 %34
  %36 = load i8, i8* %35, align 1
  br label %37

37:                                               ; preds = %23, %21
  %38 = phi i8 [ 0, %21 ], [ %36, %23 ]
  %39 = getelementptr inbounds i8, i8* %18, i64 1
  %40 = icmp eq i8* %39, %14
  br i1 %40, label %41, label %16

41:                                               ; preds = %37
  %42 = icmp eq i8 %38, 0
  br i1 %42, label %43, label %44

43:                                               ; preds = %41, %1
  br label %44

44:                                               ; preds = %21, %41, %43
  %45 = phi i1 [ true, %43 ], [ false, %41 ], [ false, %21 ]
  ret i1 %45
}

attributes #0 = { nofree norecurse nounwind ssp uwtable "correctly-rounded-divide-sqrt-fp-math"="false" "disable-tail-calls"="false" "less-precise-fpmad"="false" "min-legal-vector-width"="0" "no-frame-pointer-elim"="false" "no-frame-pointer-elim-non-leaf" "no-infs-fp-math"="false" "no-jump-tables"="false" "no-nans-fp-math"="false" "no-signed-zeros-fp-math"="false" "no-trapping-math"="false" "null-pointer-is-valid"="true" "stack-protector-buffer-size"="4" "target-cpu"="x86-64" "target-features"="+cx8,+fxsr,+mmx,+sse,+sse2,+sse3,+x87" "unsafe-fp-math"="false" "use-soft-float"="false" }
attributes #1 = { nofree norecurse nounwind ssp uwtable writeonly "correctly-rounded-divide-sqrt-fp-math"="false" "disable-tail-calls"="false" "less-precise-fpmad"="false" "min-legal-vector-width"="0" "no-frame-pointer-elim"="false" "no-frame-pointer-elim-non-leaf" "no-infs-fp-math"="false" "no-jump-tables"="false" "no-nans-fp-math"="false" "no-signed-zeros-fp-math"="false" "no-trapping-math"="false" "null-pointer-is-valid"="true" "stack-protector-buffer-size"="4" "target-cpu"="x86-64" "target-features"="+cx8,+fxsr,+mmx,+sse,+sse2,+sse3,+x87" "unsafe-fp-math"="false" "use-soft-float"="false" }
attributes #2 = { nounwind readonly ssp uwtable "correctly-rounded-divide-sqrt-fp-math"="false" "disable-tail-calls"="false" "less-precise-fpmad"="false" "min-legal-vector-width"="0" "no-frame-pointer-elim"="false" "no-frame-pointer-elim-non-leaf" "no-infs-fp-math"="false" "no-jump-tables"="false" "no-nans-fp-math"="false" "no-signed-zeros-fp-math"="false" "no-trapping-math"="false" "null-pointer-is-valid"="true" "stack-protector-buffer-size"="4" "target-cpu"="x86-64" "target-features"="+cx8,+fxsr,+mmx,+sse,+sse2,+sse3,+x87" "unsafe-fp-math"="false" "use-soft-float"="false" }

!llvm.module.flags = !{!0, !1}

!0 = !{i32 1, !"wchar_size", i32 4}
!1 = !{i32 7, !"PIC Level", i32 2}
