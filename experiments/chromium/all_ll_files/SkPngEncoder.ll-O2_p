; ModuleID = '../../third_party/skia/src/images/SkPngEncoder.cpp'
source_filename = "../../third_party/skia/src/images/SkPngEncoder.cpp"
target datalayout = "e-m:e-i64:64-f80:128-n8:16:32:64-S128"
target triple = "x86_64-unknown-linux-gnu"

module asm ".symver exp, exp@GLIBC_2.2.5"
module asm ".symver exp2, exp2@GLIBC_2.2.5"
module asm ".symver exp2f, exp2f@GLIBC_2.2.5"
module asm ".symver expf, expf@GLIBC_2.2.5"
module asm ".symver lgamma, lgamma@GLIBC_2.2.5"
module asm ".symver lgammaf, lgammaf@GLIBC_2.2.5"
module asm ".symver lgammal, lgammal@GLIBC_2.2.5"
module asm ".symver log, log@GLIBC_2.2.5"
module asm ".symver log2, log2@GLIBC_2.2.5"
module asm ".symver log2f, log2f@GLIBC_2.2.5"
module asm ".symver logf, logf@GLIBC_2.2.5"
module asm ".symver pow, pow@GLIBC_2.2.5"
module asm ".symver powf, powf@GLIBC_2.2.5"

%class.SkPngEncoder = type { %class.SkEncoder, %"class.std::__1::unique_ptr" }
%class.SkEncoder = type { i32 (...)**, %class.SkPixmap*, i32, %class.SkAutoTMalloc }
%class.SkAutoTMalloc = type { %"class.std::__1::unique_ptr.22" }
%"class.std::__1::unique_ptr.22" = type { %"class.std::__1::__compressed_pair.23" }
%"class.std::__1::__compressed_pair.23" = type { %"struct.std::__1::__compressed_pair_elem.24" }
%"struct.std::__1::__compressed_pair_elem.24" = type { i8* }
%"class.std::__1::unique_ptr" = type { %"class.std::__1::__compressed_pair" }
%"class.std::__1::__compressed_pair" = type { %"struct.std::__1::__compressed_pair_elem" }
%"struct.std::__1::__compressed_pair_elem" = type { %class.SkPngEncoderMgr* }
%class.SkPngEncoderMgr = type { %struct.png_struct_def*, %struct.png_info_def*, i32, void (i8*, i8*, i32, i32)* }
%struct.png_struct_def = type opaque
%struct.png_info_def = type opaque
%class.SkPixmap = type { i8*, i64, %struct.SkImageInfo }
%struct.SkImageInfo = type { %class.SkColorInfo, %struct.SkISize }
%class.SkColorInfo = type { %class.sk_sp, i32, i32 }
%class.sk_sp = type { %class.SkColorSpace* }
%class.SkColorSpace = type <{ %class.SkNVRefCnt, i32, i32, %struct.skcms_TransferFunction, %struct.skcms_Matrix3x3, %struct.skcms_TransferFunction, %struct.skcms_Matrix3x3, %class.SkOnce, [3 x i8] }>
%class.SkNVRefCnt = type { %"struct.std::__1::atomic" }
%"struct.std::__1::atomic" = type { %"struct.std::__1::__atomic_base" }
%"struct.std::__1::__atomic_base" = type { %"struct.std::__1::__atomic_base.1" }
%"struct.std::__1::__atomic_base.1" = type { %"struct.std::__1::__cxx_atomic_impl" }
%"struct.std::__1::__cxx_atomic_impl" = type { %"struct.std::__1::__cxx_atomic_base_impl" }
%"struct.std::__1::__cxx_atomic_base_impl" = type { i32 }
%struct.skcms_TransferFunction = type { float, float, float, float, float, float, float }
%struct.skcms_Matrix3x3 = type { [3 x [3 x float]] }
%class.SkOnce = type { %"struct.std::__1::atomic.2" }
%"struct.std::__1::atomic.2" = type { %"struct.std::__1::__atomic_base.3" }
%"struct.std::__1::__atomic_base.3" = type { %"struct.std::__1::__atomic_base.4" }
%"struct.std::__1::__atomic_base.4" = type { %"struct.std::__1::__cxx_atomic_impl.5" }
%"struct.std::__1::__cxx_atomic_impl.5" = type { %"struct.std::__1::__cxx_atomic_base_impl.6" }
%"struct.std::__1::__cxx_atomic_base_impl.6" = type { i8 }
%struct.SkISize = type { i32, i32 }
%class.SkWStream = type { i32 (...)** }
%struct.__jmp_buf_tag = type { [8 x i64], i32, %struct.__sigset_t }
%struct.__sigset_t = type { [16 x i64] }
%"struct.SkPngEncoder::Options" = type { i32, i32, %class.sk_sp.7 }
%class.sk_sp.7 = type { %class.SkDataTable* }
%class.SkDataTable = type { %class.SkRefCnt.base, i32, i64, %union.anon, void (i8*)*, i8* }
%class.SkRefCnt.base = type { %class.SkRefCntBase.base }
%class.SkRefCntBase.base = type <{ i32 (...)**, %"struct.std::__1::atomic" }>
%union.anon = type { %"struct.SkDataTable::Dir"* }
%"struct.SkDataTable::Dir" = type { i8*, i64 }
%struct.png_color_8_struct = type { i8, i8, i8, i8, i8 }
%"class.std::__1::vector" = type { %"class.std::__1::__vector_base" }
%"class.std::__1::__vector_base" = type { %struct.png_text_struct*, %struct.png_text_struct*, %"class.std::__1::__compressed_pair.8" }
%struct.png_text_struct = type { i32, i8*, i8*, i64, i64, i8*, i8* }
%"class.std::__1::__compressed_pair.8" = type { %"struct.std::__1::__compressed_pair_elem.9" }
%"struct.std::__1::__compressed_pair_elem.9" = type { %struct.png_text_struct* }
%"class.std::__1::vector.11" = type { %"class.std::__1::__vector_base.12" }
%"class.std::__1::__vector_base.12" = type { %class.SkString*, %class.SkString*, %"class.std::__1::__compressed_pair.14" }
%class.SkString = type { %class.sk_sp.13 }
%class.sk_sp.13 = type { %"struct.SkString::Rec"* }
%"struct.SkString::Rec" = type <{ i32, %"struct.std::__1::atomic", i8, [3 x i8] }>
%"class.std::__1::__compressed_pair.14" = type { %"struct.std::__1::__compressed_pair_elem.15" }
%"struct.std::__1::__compressed_pair_elem.15" = type { %class.SkString* }
%"class.std::__1::__vector_base_common" = type { i8 }
%class.sk_sp.35 = type { %class.SkData* }
%class.SkData = type { %class.SkNVRefCnt.36, void (i8*, i8*)*, i8*, i8*, i64 }
%class.SkNVRefCnt.36 = type { %"struct.std::__1::atomic" }
%struct.skcms_ICCProfile = type { i8*, i32, i32, i32, i32, i8, [3 x %union.skcms_Curve], i8, %struct.skcms_Matrix3x3, i8, %struct.skcms_A2B, i8, %struct.skcms_B2A }
%union.skcms_Curve = type { %struct.anon.37, [8 x i8] }
%struct.anon.37 = type { i32, i8*, i8* }
%struct.skcms_A2B = type { i32, [4 x %union.skcms_Curve], [4 x i8], i8*, i8*, i32, [3 x %union.skcms_Curve], %struct.skcms_Matrix3x4, i32, [3 x %union.skcms_Curve] }
%struct.skcms_Matrix3x4 = type { [3 x [4 x float]] }
%struct.skcms_B2A = type { i32, [3 x %union.skcms_Curve], i32, %struct.skcms_Matrix3x4, [3 x %union.skcms_Curve], i32, [4 x i8], i8*, i8*, [4 x %union.skcms_Curve] }

$_ZN9SkEncoderD2Ev = comdat any

$_ZN9SkEncoderD0Ev = comdat any

$_ZNSt3__16vectorI8SkStringNS_9allocatorIS1_EEE24__emplace_back_slow_pathIJRPKciEEEvDpOT_ = comdat any

$_ZTV9SkEncoder = comdat any

@.str = private unnamed_addr constant [7 x i8] c"1.6.37\00", align 1
@_ZTV12SkPngEncoder = hidden unnamed_addr constant { [5 x i8*] } { [5 x i8*] [i8* null, i8* null, i8* bitcast (void (%class.SkPngEncoder*)* @_ZN12SkPngEncoderD2Ev to i8*), i8* bitcast (void (%class.SkPngEncoder*)* @_ZN12SkPngEncoderD0Ev to i8*), i8* bitcast (i1 (%class.SkPngEncoder*, i32)* @_ZN12SkPngEncoder12onEncodeRowsEi to i8*)] }, align 8
@.str.1 = private unnamed_addr constant [35 x i8] c"sk_write_fn cannot write to stream\00", align 1
@.str.2 = private unnamed_addr constant [5 x i8] c"Skia\00", align 1
@_ZTV9SkEncoder = linkonce_odr hidden unnamed_addr constant { [5 x i8*] } { [5 x i8*] [i8* null, i8* null, i8* bitcast (void (%class.SkEncoder*)* @_ZN9SkEncoderD2Ev to i8*), i8* bitcast (void (%class.SkEncoder*)* @_ZN9SkEncoderD0Ev to i8*), i8* bitcast (void ()* @__cxa_pure_virtual to i8*)] }, comdat, align 8
@switch.table._ZN15SkPngEncoderMgr10chooseProcERK11SkImageInfo = private unnamed_addr constant [3 x void (i8*, i8*, i32, i32)*] [void (i8*, i8*, i32, i32)* @_ZL23transform_scanline_RGBXPcPKcii, void (i8*, i8*, i32, i32)* @_ZL23transform_scanline_rgbAPcPKcii, void (i8*, i8*, i32, i32)* @_ZL25transform_scanline_memcpyPcPKcii], align 8
@switch.table._ZN15SkPngEncoderMgr10chooseProcERK11SkImageInfo.4 = private unnamed_addr constant [3 x void (i8*, i8*, i32, i32)*] [void (i8*, i8*, i32, i32)* @_ZL23transform_scanline_BGRXPcPKcii, void (i8*, i8*, i32, i32)* @_ZL23transform_scanline_bgrAPcPKcii, void (i8*, i8*, i32, i32)* @_ZL23transform_scanline_BGRAPcPKcii], align 8
@switch.table._ZN15SkPngEncoderMgr10chooseProcERK11SkImageInfo.5 = private unnamed_addr constant [3 x void (i8*, i8*, i32, i32)*] [void (i8*, i8*, i32, i32)* @_ZL22transform_scanline_F16PcPKcii, void (i8*, i8*, i32, i32)* @_ZL29transform_scanline_F16_premulPcPKcii, void (i8*, i8*, i32, i32)* @_ZL22transform_scanline_F16PcPKcii], align 8
@switch.table._ZN15SkPngEncoderMgr10chooseProcERK11SkImageInfo.6 = private unnamed_addr constant [3 x void (i8*, i8*, i32, i32)*] [void (i8*, i8*, i32, i32)* @_ZL22transform_scanline_F32PcPKcii, void (i8*, i8*, i32, i32)* @_ZL29transform_scanline_F32_premulPcPKcii, void (i8*, i8*, i32, i32)* @_ZL22transform_scanline_F32PcPKcii], align 8
@switch.table._ZN15SkPngEncoderMgr10chooseProcERK11SkImageInfo.7 = private unnamed_addr constant [3 x void (i8*, i8*, i32, i32)*] [void (i8*, i8*, i32, i32)* @_ZL26transform_scanline_1010102PcPKcii, void (i8*, i8*, i32, i32)* @_ZL33transform_scanline_1010102_premulPcPKcii, void (i8*, i8*, i32, i32)* @_ZL26transform_scanline_1010102PcPKcii], align 8
@switch.table._ZN15SkPngEncoderMgr10chooseProcERK11SkImageInfo.8 = private unnamed_addr constant [3 x void (i8*, i8*, i32, i32)*] [void (i8*, i8*, i32, i32)* @_ZL31transform_scanline_bgra_1010102PcPKcii, void (i8*, i8*, i32, i32)* @_ZL38transform_scanline_bgra_1010102_premulPcPKcii, void (i8*, i8*, i32, i32)* @_ZL31transform_scanline_bgra_1010102PcPKcii], align 8

@_ZN12SkPngEncoderC1ENSt3__110unique_ptrI15SkPngEncoderMgrNS0_14default_deleteIS2_EEEERK8SkPixmap = hidden unnamed_addr alias void (%class.SkPngEncoder*, %class.SkPngEncoderMgr*, %class.SkPixmap*), void (%class.SkPngEncoder*, %class.SkPngEncoderMgr*, %class.SkPixmap*)* @_ZN12SkPngEncoderC2ENSt3__110unique_ptrI15SkPngEncoderMgrNS0_14default_deleteIS2_EEEERK8SkPixmap
@_ZN12SkPngEncoderD1Ev = hidden unnamed_addr alias void (%class.SkPngEncoder*), void (%class.SkPngEncoder*)* @_ZN12SkPngEncoderD2Ev

; Function Attrs: nounwind ssp uwtable
define hidden %class.SkPngEncoderMgr* @_ZN15SkPngEncoderMgr4MakeEP9SkWStream(%class.SkWStream*) local_unnamed_addr #0 align 2 {
  %2 = alloca %struct.png_struct_def*, align 8
  %3 = bitcast %struct.png_struct_def** %2 to i8*
  call void @llvm.lifetime.start.p0i8(i64 8, i8* nonnull %3) #15
  %4 = tail call noalias %struct.png_struct_def* @cr_png_create_write_struct(i8* getelementptr inbounds ([7 x i8], [7 x i8]* @.str, i64 0, i64 0), i8* null, void (%struct.png_struct_def*, i8*)* nonnull @_ZL11sk_error_fnP14png_struct_defPKc, void (%struct.png_struct_def*, i8*)* null) #15
  store %struct.png_struct_def* %4, %struct.png_struct_def** %2, align 8
  %5 = icmp eq %struct.png_struct_def* %4, null
  br i1 %5, label %18, label %6

6:                                                ; preds = %1
  %7 = tail call noalias %struct.png_info_def* @cr_png_create_info_struct(%struct.png_struct_def* nonnull %4) #15
  %8 = icmp eq %struct.png_info_def* %7, null
  br i1 %8, label %9, label %10

9:                                                ; preds = %6
  call void @cr_png_destroy_write_struct(%struct.png_struct_def** nonnull %2, %struct.png_info_def** null) #15
  br label %18

10:                                               ; preds = %6
  %11 = bitcast %class.SkWStream* %0 to i8*
  tail call void @cr_png_set_write_fn(%struct.png_struct_def* nonnull %4, i8* %11, void (%struct.png_struct_def*, i8*, i64)* nonnull @_ZL11sk_write_fnP14png_struct_defPhm, void (%struct.png_struct_def*)* null) #15
  %12 = tail call i8* @_Znwm(i64 32) #16
  %13 = ptrtoint %struct.png_struct_def* %4 to i64
  %14 = bitcast i8* %12 to i64*
  store i64 %13, i64* %14, align 8
  %15 = getelementptr inbounds i8, i8* %12, i64 8
  %16 = bitcast i8* %15 to %struct.png_info_def**
  store %struct.png_info_def* %7, %struct.png_info_def** %16, align 8
  %17 = bitcast i8* %12 to %class.SkPngEncoderMgr*
  br label %18

18:                                               ; preds = %1, %9, %10
  %19 = phi %class.SkPngEncoderMgr* [ null, %9 ], [ %17, %10 ], [ null, %1 ]
  call void @llvm.lifetime.end.p0i8(i64 8, i8* nonnull %3) #15
  ret %class.SkPngEncoderMgr* %19
}

; Function Attrs: argmemonly nounwind
declare void @llvm.lifetime.start.p0i8(i64 immarg, i8* nocapture) #1

declare noalias %struct.png_struct_def* @cr_png_create_write_struct(i8*, i8*, void (%struct.png_struct_def*, i8*)*, void (%struct.png_struct_def*, i8*)*) local_unnamed_addr #2

; Function Attrs: noreturn nounwind ssp uwtable
define internal void @_ZL11sk_error_fnP14png_struct_defPKc(%struct.png_struct_def*, i8* nocapture readnone) #3 {
  %3 = tail call [1 x %struct.__jmp_buf_tag]* @cr_png_set_longjmp_fn(%struct.png_struct_def* %0, void (%struct.__jmp_buf_tag*, i32)* nonnull @longjmp, i64 200) #15
  %4 = getelementptr inbounds [1 x %struct.__jmp_buf_tag], [1 x %struct.__jmp_buf_tag]* %3, i64 0, i64 0
  tail call void @longjmp(%struct.__jmp_buf_tag* %4, i32 1) #17
  unreachable
}

declare noalias %struct.png_info_def* @cr_png_create_info_struct(%struct.png_struct_def*) local_unnamed_addr #2

declare void @cr_png_destroy_write_struct(%struct.png_struct_def**, %struct.png_info_def**) local_unnamed_addr #2

declare void @cr_png_set_write_fn(%struct.png_struct_def*, i8*, void (%struct.png_struct_def*, i8*, i64)*, void (%struct.png_struct_def*)*) local_unnamed_addr #2

; Function Attrs: nounwind ssp uwtable
define internal void @_ZL11sk_write_fnP14png_struct_defPhm(%struct.png_struct_def*, i8*, i64) #0 {
  %4 = tail call i8* @cr_png_get_io_ptr(%struct.png_struct_def* %0) #15
  %5 = bitcast i8* %4 to %class.SkWStream*
  %6 = bitcast i8* %4 to i1 (%class.SkWStream*, i8*, i64)***
  %7 = load i1 (%class.SkWStream*, i8*, i64)**, i1 (%class.SkWStream*, i8*, i64)*** %6, align 8
  %8 = getelementptr inbounds i1 (%class.SkWStream*, i8*, i64)*, i1 (%class.SkWStream*, i8*, i64)** %7, i64 2
  %9 = load i1 (%class.SkWStream*, i8*, i64)*, i1 (%class.SkWStream*, i8*, i64)** %8, align 8
  %10 = tail call zeroext i1 %9(%class.SkWStream* %5, i8* %1, i64 %2) #15
  br i1 %10, label %12, label %11

11:                                               ; preds = %3
  tail call void @cr_png_error(%struct.png_struct_def* %0, i8* getelementptr inbounds ([35 x i8], [35 x i8]* @.str.1, i64 0, i64 0)) #17
  unreachable

12:                                               ; preds = %3
  ret void
}

; Function Attrs: nobuiltin nofree
declare noalias nonnull i8* @_Znwm(i64) local_unnamed_addr #4

; Function Attrs: argmemonly nounwind
declare void @llvm.lifetime.end.p0i8(i64 immarg, i8* nocapture) #1

; Function Attrs: nounwind ssp uwtable
define hidden zeroext i1 @_ZN15SkPngEncoderMgr9setHeaderERK11SkImageInfoRKN12SkPngEncoder7OptionsE(%class.SkPngEncoderMgr* nocapture, %struct.SkImageInfo* nocapture readonly dereferenceable(24), %"struct.SkPngEncoder::Options"* nocapture readonly dereferenceable(16)) local_unnamed_addr #0 align 2 {
  %4 = alloca i64, align 8
  %5 = alloca i64, align 8
  %6 = alloca %struct.png_color_8_struct, align 1
  %7 = alloca %"class.std::__1::vector", align 8
  %8 = alloca %"class.std::__1::vector.11", align 8
  %9 = alloca i8*, align 8
  %10 = alloca i32, align 4
  %11 = getelementptr inbounds %class.SkPngEncoderMgr, %class.SkPngEncoderMgr* %0, i64 0, i32 0
  %12 = load %struct.png_struct_def*, %struct.png_struct_def** %11, align 8
  %13 = call [1 x %struct.__jmp_buf_tag]* @cr_png_set_longjmp_fn(%struct.png_struct_def* %12, void (%struct.__jmp_buf_tag*, i32)* nonnull @longjmp, i64 200) #15
  %14 = getelementptr inbounds [1 x %struct.__jmp_buf_tag], [1 x %struct.__jmp_buf_tag]* %13, i64 0, i64 0
  %15 = call i32 @_setjmp(%struct.__jmp_buf_tag* %14) #18
  %16 = icmp eq i32 %15, 0
  br i1 %16, label %17, label %231

17:                                               ; preds = %3
  %18 = getelementptr inbounds %struct.png_color_8_struct, %struct.png_color_8_struct* %6, i64 0, i32 0
  call void @llvm.lifetime.start.p0i8(i64 5, i8* nonnull %18) #15
  %19 = getelementptr inbounds %struct.png_color_8_struct, %struct.png_color_8_struct* %6, i64 0, i32 1
  %20 = getelementptr inbounds %struct.png_color_8_struct, %struct.png_color_8_struct* %6, i64 0, i32 2
  %21 = getelementptr inbounds %struct.png_color_8_struct, %struct.png_color_8_struct* %6, i64 0, i32 3
  %22 = getelementptr inbounds %struct.png_color_8_struct, %struct.png_color_8_struct* %6, i64 0, i32 4
  %23 = getelementptr inbounds %struct.SkImageInfo, %struct.SkImageInfo* %1, i64 0, i32 0, i32 1
  call void @llvm.memset.p0i8.i64(i8* nonnull align 1 %18, i8 -86, i64 5, i1 false)
  %24 = load i32, i32* %23, align 8
  switch i32 %24, label %229 [
    i32 12, label %25
    i32 13, label %25
    i32 14, label %25
    i32 11, label %32
    i32 4, label %33
    i32 6, label %33
    i32 5, label %48
    i32 3, label %49
    i32 2, label %66
    i32 1, label %67
    i32 7, label %68
    i32 9, label %75
  ]

25:                                               ; preds = %17, %17, %17
  store i8 16, i8* %18, align 1
  store i8 16, i8* %19, align 1
  store i8 16, i8* %20, align 1
  store i8 16, i8* %22, align 1
  %26 = getelementptr inbounds %struct.SkImageInfo, %struct.SkImageInfo* %1, i64 0, i32 0, i32 2
  %27 = load i32, i32* %26, align 4
  %28 = icmp eq i32 %27, 1
  br i1 %28, label %31, label %29

29:                                               ; preds = %25
  %30 = call zeroext i1 @_Z25SkColorTypeIsAlwaysOpaque11SkColorType(i32 %24) #15
  br i1 %30, label %31, label %76

31:                                               ; preds = %25, %29
  br label %76

32:                                               ; preds = %17
  store i8 8, i8* %21, align 1
  br label %76

33:                                               ; preds = %17, %17
  store i8 8, i8* %18, align 1
  store i8 8, i8* %19, align 1
  store i8 8, i8* %20, align 1
  store i8 8, i8* %22, align 1
  %34 = getelementptr inbounds %struct.SkImageInfo, %struct.SkImageInfo* %1, i64 0, i32 0, i32 2
  %35 = load i32, i32* %34, align 4
  %36 = icmp eq i32 %35, 1
  br i1 %36, label %39, label %37

37:                                               ; preds = %33
  %38 = call zeroext i1 @_Z25SkColorTypeIsAlwaysOpaque11SkColorType(i32 %24) #15
  br i1 %38, label %39, label %40

39:                                               ; preds = %33, %37
  br label %40

40:                                               ; preds = %37, %39
  %41 = phi i32 [ 2, %39 ], [ 6, %37 ]
  %42 = load i32, i32* %34, align 4
  %43 = icmp eq i32 %42, 1
  br i1 %43, label %47, label %44

44:                                               ; preds = %40
  %45 = load i32, i32* %23, align 8
  %46 = call zeroext i1 @_Z25SkColorTypeIsAlwaysOpaque11SkColorType(i32 %45) #15
  br i1 %46, label %47, label %76

47:                                               ; preds = %40, %44
  br label %76

48:                                               ; preds = %17
  store i8 8, i8* %18, align 1
  store i8 8, i8* %19, align 1
  store i8 8, i8* %20, align 1
  br label %76

49:                                               ; preds = %17
  %50 = getelementptr inbounds %struct.SkImageInfo, %struct.SkImageInfo* %1, i64 0, i32 0, i32 2
  %51 = load i32, i32* %50, align 4
  %52 = icmp eq i32 %51, 3
  br i1 %52, label %229, label %53

53:                                               ; preds = %49
  store i8 4, i8* %18, align 1
  store i8 4, i8* %19, align 1
  store i8 4, i8* %20, align 1
  store i8 4, i8* %22, align 1
  %54 = icmp eq i32 %51, 1
  br i1 %54, label %57, label %55

55:                                               ; preds = %53
  %56 = call zeroext i1 @_Z25SkColorTypeIsAlwaysOpaque11SkColorType(i32 3) #15
  br i1 %56, label %57, label %58

57:                                               ; preds = %53, %55
  br label %58

58:                                               ; preds = %55, %57
  %59 = phi i32 [ 2, %57 ], [ 6, %55 ]
  %60 = load i32, i32* %50, align 4
  %61 = icmp eq i32 %60, 1
  br i1 %61, label %65, label %62

62:                                               ; preds = %58
  %63 = load i32, i32* %23, align 8
  %64 = call zeroext i1 @_Z25SkColorTypeIsAlwaysOpaque11SkColorType(i32 %63) #15
  br i1 %64, label %65, label %76

65:                                               ; preds = %58, %62
  br label %76

66:                                               ; preds = %17
  store i8 5, i8* %18, align 1
  store i8 6, i8* %19, align 1
  store i8 5, i8* %20, align 1
  br label %76

67:                                               ; preds = %17
  store i8 1, i8* %21, align 1
  store i8 8, i8* %22, align 1
  br label %76

68:                                               ; preds = %17
  store i8 10, i8* %18, align 1
  store i8 10, i8* %19, align 1
  store i8 10, i8* %20, align 1
  store i8 2, i8* %22, align 1
  %69 = getelementptr inbounds %struct.SkImageInfo, %struct.SkImageInfo* %1, i64 0, i32 0, i32 2
  %70 = load i32, i32* %69, align 4
  %71 = icmp eq i32 %70, 1
  br i1 %71, label %74, label %72

72:                                               ; preds = %68
  %73 = call zeroext i1 @_Z25SkColorTypeIsAlwaysOpaque11SkColorType(i32 7) #15
  br i1 %73, label %74, label %76

74:                                               ; preds = %68, %72
  br label %76

75:                                               ; preds = %17
  store i8 10, i8* %18, align 1
  store i8 10, i8* %19, align 1
  store i8 10, i8* %20, align 1
  br label %76

76:                                               ; preds = %74, %72, %65, %62, %47, %44, %31, %29, %75, %67, %66, %48, %32
  %77 = phi i32 [ 6, %75 ], [ 2, %67 ], [ 3, %66 ], [ 3, %48 ], [ 1, %32 ], [ 8, %29 ], [ 8, %31 ], [ 3, %47 ], [ 4, %44 ], [ 3, %65 ], [ 4, %62 ], [ 8, %72 ], [ 8, %74 ]
  %78 = phi i32 [ 16, %75 ], [ 8, %67 ], [ 8, %66 ], [ 8, %48 ], [ 8, %32 ], [ 16, %29 ], [ 16, %31 ], [ 8, %47 ], [ 8, %44 ], [ 8, %65 ], [ 8, %62 ], [ 16, %72 ], [ 16, %74 ]
  %79 = phi i32 [ 2, %75 ], [ 4, %67 ], [ 2, %66 ], [ 2, %48 ], [ 0, %32 ], [ 6, %29 ], [ 2, %31 ], [ %41, %47 ], [ %41, %44 ], [ %59, %65 ], [ %59, %62 ], [ 6, %72 ], [ 2, %74 ]
  %80 = getelementptr inbounds %class.SkPngEncoderMgr, %class.SkPngEncoderMgr* %0, i64 0, i32 2
  store i32 %77, i32* %80, align 8
  %81 = load %struct.png_struct_def*, %struct.png_struct_def** %11, align 8
  %82 = getelementptr inbounds %class.SkPngEncoderMgr, %class.SkPngEncoderMgr* %0, i64 0, i32 1
  %83 = load %struct.png_info_def*, %struct.png_info_def** %82, align 8
  %84 = getelementptr inbounds %struct.SkImageInfo, %struct.SkImageInfo* %1, i64 0, i32 1, i32 0
  %85 = load i32, i32* %84, align 4
  %86 = getelementptr inbounds %struct.SkImageInfo, %struct.SkImageInfo* %1, i64 0, i32 1, i32 1
  %87 = load i32, i32* %86, align 4
  call void @cr_png_set_IHDR(%struct.png_struct_def* %81, %struct.png_info_def* %83, i32 %85, i32 %87, i32 %78, i32 %79, i32 0, i32 0, i32 0) #15
  %88 = load %struct.png_struct_def*, %struct.png_struct_def** %11, align 8
  %89 = load %struct.png_info_def*, %struct.png_info_def** %82, align 8
  call void @cr_png_set_sBIT(%struct.png_struct_def* %88, %struct.png_info_def* %89, %struct.png_color_8_struct* nonnull %6) #15
  %90 = getelementptr inbounds %"struct.SkPngEncoder::Options", %"struct.SkPngEncoder::Options"* %2, i64 0, i32 0
  %91 = load i32, i32* %90, align 8
  %92 = and i32 %91, 248
  %93 = load %struct.png_struct_def*, %struct.png_struct_def** %11, align 8
  call void @cr_png_set_filter(%struct.png_struct_def* %93, i32 0, i32 %92) #15
  %94 = getelementptr inbounds %"struct.SkPngEncoder::Options", %"struct.SkPngEncoder::Options"* %2, i64 0, i32 1
  %95 = load i32, i32* %94, align 4
  %96 = icmp sgt i32 %95, 0
  %97 = select i1 %96, i32 %95, i32 0
  %98 = icmp slt i32 %97, 9
  %99 = select i1 %98, i32 %97, i32 9
  %100 = load %struct.png_struct_def*, %struct.png_struct_def** %11, align 8
  call void @cr_png_set_compression_level(%struct.png_struct_def* %100, i32 %99) #15
  %101 = getelementptr inbounds %"struct.SkPngEncoder::Options", %"struct.SkPngEncoder::Options"* %2, i64 0, i32 2, i32 0
  %102 = load %class.SkDataTable*, %class.SkDataTable** %101, align 8
  %103 = icmp eq %class.SkDataTable* %102, null
  br i1 %103, label %229, label %104

104:                                              ; preds = %76
  %105 = bitcast %"class.std::__1::vector"* %7 to i8*
  call void @llvm.lifetime.start.p0i8(i64 24, i8* nonnull %105) #15
  %106 = getelementptr inbounds %"class.std::__1::vector", %"class.std::__1::vector"* %7, i64 0, i32 0, i32 0
  %107 = getelementptr inbounds %"class.std::__1::vector", %"class.std::__1::vector"* %7, i64 0, i32 0, i32 1
  %108 = getelementptr inbounds %"class.std::__1::vector", %"class.std::__1::vector"* %7, i64 0, i32 0, i32 2, i32 0, i32 0
  %109 = getelementptr inbounds %class.SkDataTable, %class.SkDataTable* %102, i64 0, i32 1
  %110 = bitcast %"class.std::__1::vector"* %7 to i8*
  call void @llvm.memset.p0i8.i64(i8* nonnull align 8 %110, i8 -86, i64 24, i1 false)
  %111 = load i32, i32* %109, align 4
  %112 = sext i32 %111 to i64
  call void @llvm.memset.p0i8.i64(i8* nonnull align 8 %105, i8 0, i64 24, i1 false) #15
  %113 = icmp eq i32 %111, 0
  br i1 %113, label %134, label %114

114:                                              ; preds = %104
  %115 = icmp slt i32 %111, 0
  br i1 %115, label %116, label %118

116:                                              ; preds = %114
  %117 = bitcast %"class.std::__1::vector"* %7 to %"class.std::__1::__vector_base_common"*
  call void @_ZNKSt3__120__vector_base_commonILb1EE20__throw_length_errorEv(%"class.std::__1::__vector_base_common"* nonnull %117) #17
  unreachable

118:                                              ; preds = %114
  %119 = mul nsw i64 %112, 56
  %120 = call i8* @_Znwm(i64 %119) #16
  %121 = bitcast i8* %120 to %struct.png_text_struct*
  %122 = bitcast %"class.std::__1::vector"* %7 to i8**
  store i8* %120, i8** %122, align 8
  %123 = getelementptr inbounds %struct.png_text_struct, %struct.png_text_struct* %121, i64 %112
  store %struct.png_text_struct* %123, %struct.png_text_struct** %108, align 8
  %124 = bitcast %struct.png_text_struct** %107 to i64*
  %125 = ptrtoint i8* %120 to i64
  %126 = add nsw i64 %112, -1
  %127 = getelementptr %struct.png_text_struct, %struct.png_text_struct* %121, i64 %126, i32 0
  %128 = ptrtoint i32* %127 to i64
  %129 = sub i64 %128, %125
  %130 = urem i64 %129, 56
  %131 = add i64 %129, 56
  %132 = sub i64 %131, %130
  call void @llvm.memset.p0i8.i64(i8* nonnull align 8 %120, i8 0, i64 %132, i1 false) #15
  %133 = ptrtoint %struct.png_text_struct* %123 to i64
  store i64 %133, i64* %124, align 8
  br label %134

134:                                              ; preds = %104, %118
  %135 = phi i64 [ 0, %104 ], [ %133, %118 ]
  %136 = phi %struct.png_text_struct* [ null, %104 ], [ %121, %118 ]
  %137 = bitcast %"class.std::__1::vector.11"* %8 to i8*
  call void @llvm.lifetime.start.p0i8(i64 24, i8* nonnull %137) #15
  %138 = getelementptr inbounds %"class.std::__1::vector.11", %"class.std::__1::vector.11"* %8, i64 0, i32 0, i32 0
  %139 = getelementptr inbounds %"class.std::__1::vector.11", %"class.std::__1::vector.11"* %8, i64 0, i32 0, i32 1
  %140 = getelementptr inbounds %"class.std::__1::vector.11", %"class.std::__1::vector.11"* %8, i64 0, i32 0, i32 2, i32 0, i32 0
  call void @llvm.memset.p0i8.i64(i8* nonnull align 8 %137, i8 0, i64 24, i1 false) #15
  %141 = load i32, i32* %109, align 4
  %142 = icmp sgt i32 %141, 1
  br i1 %142, label %145, label %143

143:                                              ; preds = %134
  %144 = bitcast %struct.png_text_struct** %107 to i64*
  br label %155

145:                                              ; preds = %134
  %146 = bitcast i8** %9 to i8*
  %147 = bitcast i64* %4 to i8*
  %148 = bitcast i64* %5 to i8*
  %149 = bitcast i32* %10 to i8*
  %150 = bitcast %class.SkString** %139 to i64*
  br label %187

151:                                              ; preds = %214
  %152 = load %struct.png_text_struct*, %struct.png_text_struct** %106, align 8
  %153 = bitcast %struct.png_text_struct** %107 to i64*
  %154 = load i64, i64* %153, align 8
  br label %155

155:                                              ; preds = %143, %151
  %156 = phi i64* [ %144, %143 ], [ %153, %151 ]
  %157 = phi i64 [ %135, %143 ], [ %154, %151 ]
  %158 = phi %struct.png_text_struct* [ %136, %143 ], [ %152, %151 ]
  %159 = load %struct.png_struct_def*, %struct.png_struct_def** %11, align 8
  %160 = load %struct.png_info_def*, %struct.png_info_def** %82, align 8
  %161 = ptrtoint %struct.png_text_struct* %158 to i64
  %162 = sub i64 %157, %161
  %163 = sdiv exact i64 %162, 56
  %164 = trunc i64 %163 to i32
  call void @cr_png_set_text(%struct.png_struct_def* %159, %struct.png_info_def* %160, %struct.png_text_struct* %158, i32 %164) #15
  %165 = load %class.SkString*, %class.SkString** %138, align 8
  %166 = icmp eq %class.SkString* %165, null
  br i1 %166, label %180, label %167

167:                                              ; preds = %155
  %168 = bitcast %class.SkString* %165 to i8*
  %169 = load %class.SkString*, %class.SkString** %139, align 8
  %170 = icmp eq %class.SkString* %169, %165
  br i1 %170, label %178, label %171

171:                                              ; preds = %167, %171
  %172 = phi %class.SkString* [ %173, %171 ], [ %169, %167 ]
  %173 = getelementptr inbounds %class.SkString, %class.SkString* %172, i64 -1
  call void @_ZN8SkStringD1Ev(%class.SkString* %173) #15
  %174 = icmp eq %class.SkString* %173, %165
  br i1 %174, label %175, label %171

175:                                              ; preds = %171
  %176 = bitcast %"class.std::__1::vector.11"* %8 to i8**
  %177 = load i8*, i8** %176, align 8
  br label %178

178:                                              ; preds = %175, %167
  %179 = phi i8* [ %177, %175 ], [ %168, %167 ]
  store %class.SkString* %165, %class.SkString** %139, align 8
  call void @_ZdlPv(i8* %179) #16
  br label %180

180:                                              ; preds = %155, %178
  call void @llvm.lifetime.end.p0i8(i64 24, i8* nonnull %137) #15
  %181 = load %struct.png_text_struct*, %struct.png_text_struct** %106, align 8
  %182 = icmp eq %struct.png_text_struct* %181, null
  br i1 %182, label %186, label %183

183:                                              ; preds = %180
  %184 = ptrtoint %struct.png_text_struct* %181 to i64
  store i64 %184, i64* %156, align 8
  %185 = bitcast %struct.png_text_struct* %181 to i8*
  call void @_ZdlPv(i8* %185) #16
  br label %186

186:                                              ; preds = %180, %183
  call void @llvm.lifetime.end.p0i8(i64 24, i8* nonnull %105) #15
  br label %229

187:                                              ; preds = %145, %214
  %188 = phi i64 [ 0, %145 ], [ %222, %214 ]
  %189 = phi %class.SkDataTable* [ %102, %145 ], [ %223, %214 ]
  call void @llvm.lifetime.start.p0i8(i64 8, i8* nonnull %146) #15
  store i8* inttoptr (i64 -6148914691236517206 to i8*), i8** %9, align 8
  %190 = shl nuw nsw i64 %188, 1
  call void @llvm.lifetime.start.p0i8(i64 8, i8* nonnull %147) #15
  store i64 -6148914691236517206, i64* %4, align 8
  %191 = trunc i64 %190 to i32
  %192 = call i8* @_ZNK11SkDataTable2atEiPm(%class.SkDataTable* %189, i32 %191, i64* nonnull %4) #15
  call void @llvm.lifetime.end.p0i8(i64 8, i8* nonnull %147) #15
  store i8* %192, i8** %9, align 8
  %193 = load %class.SkDataTable*, %class.SkDataTable** %101, align 8
  call void @llvm.lifetime.start.p0i8(i64 8, i8* nonnull %148) #15
  store i64 -6148914691236517206, i64* %5, align 8
  %194 = trunc i64 %190 to i32
  %195 = or i32 %194, 1
  %196 = call i8* @_ZNK11SkDataTable2atEiPm(%class.SkDataTable* %193, i32 %195, i64* nonnull %5) #15
  call void @llvm.lifetime.end.p0i8(i64 8, i8* nonnull %148) #15
  %197 = load i8*, i8** %9, align 8
  %198 = call i64 @strlen(i8* %197) #19
  %199 = icmp ult i64 %198, 80
  br i1 %199, label %214, label %200

200:                                              ; preds = %187
  call void @llvm.lifetime.start.p0i8(i64 4, i8* nonnull %149) #15
  store i32 79, i32* %10, align 4
  %201 = load %class.SkString*, %class.SkString** %139, align 8
  %202 = load %class.SkString*, %class.SkString** %140, align 8
  %203 = icmp ult %class.SkString* %201, %202
  br i1 %203, label %204, label %207

204:                                              ; preds = %200
  call void @_ZN8SkStringC1EPKcm(%class.SkString* %201, i8* %197, i64 79) #15
  %205 = getelementptr inbounds %class.SkString, %class.SkString* %201, i64 1
  %206 = ptrtoint %class.SkString* %205 to i64
  store i64 %206, i64* %150, align 8
  br label %209

207:                                              ; preds = %200
  call void @_ZNSt3__16vectorI8SkStringNS_9allocatorIS1_EEE24__emplace_back_slow_pathIJRPKciEEEvDpOT_(%"class.std::__1::vector.11"* nonnull %8, i8** nonnull dereferenceable(8) %9, i32* nonnull dereferenceable(4) %10) #15
  %208 = load %class.SkString*, %class.SkString** %139, align 8
  br label %209

209:                                              ; preds = %204, %207
  %210 = phi %class.SkString* [ %205, %204 ], [ %208, %207 ]
  call void @llvm.lifetime.end.p0i8(i64 4, i8* nonnull %149) #15
  %211 = getelementptr inbounds %class.SkString, %class.SkString* %210, i64 -1, i32 0, i32 0
  %212 = load %"struct.SkString::Rec"*, %"struct.SkString::Rec"** %211, align 8
  %213 = getelementptr inbounds %"struct.SkString::Rec", %"struct.SkString::Rec"* %212, i64 0, i32 2
  br label %214

214:                                              ; preds = %187, %209
  %215 = phi i8* [ %213, %209 ], [ %197, %187 ]
  %216 = load %struct.png_text_struct*, %struct.png_text_struct** %106, align 8
  %217 = getelementptr inbounds %struct.png_text_struct, %struct.png_text_struct* %216, i64 %188, i32 0
  store i32 -1, i32* %217, align 8
  %218 = load %struct.png_text_struct*, %struct.png_text_struct** %106, align 8
  %219 = getelementptr inbounds %struct.png_text_struct, %struct.png_text_struct* %218, i64 %188, i32 1
  store i8* %215, i8** %219, align 8
  %220 = load %struct.png_text_struct*, %struct.png_text_struct** %106, align 8
  %221 = getelementptr inbounds %struct.png_text_struct, %struct.png_text_struct* %220, i64 %188, i32 2
  store i8* %196, i8** %221, align 8
  call void @llvm.lifetime.end.p0i8(i64 8, i8* nonnull %146) #15
  %222 = add nuw nsw i64 %188, 1
  %223 = load %class.SkDataTable*, %class.SkDataTable** %101, align 8
  %224 = getelementptr inbounds %class.SkDataTable, %class.SkDataTable* %223, i64 0, i32 1
  %225 = load i32, i32* %224, align 4
  %226 = sdiv i32 %225, 2
  %227 = sext i32 %226 to i64
  %228 = icmp slt i64 %222, %227
  br i1 %228, label %187, label %151

229:                                              ; preds = %76, %186, %17, %49
  %230 = phi i1 [ false, %49 ], [ false, %17 ], [ true, %186 ], [ true, %76 ]
  call void @llvm.lifetime.end.p0i8(i64 5, i8* nonnull %18) #15
  br label %231

231:                                              ; preds = %3, %229
  %232 = phi i1 [ %230, %229 ], [ false, %3 ]
  ret i1 %232
}

; Function Attrs: nounwind returns_twice
declare i32 @_setjmp(%struct.__jmp_buf_tag*) local_unnamed_addr #5

declare [1 x %struct.__jmp_buf_tag]* @cr_png_set_longjmp_fn(%struct.png_struct_def*, void (%struct.__jmp_buf_tag*, i32)*, i64) local_unnamed_addr #2

; Function Attrs: noreturn nounwind
declare void @longjmp(%struct.__jmp_buf_tag*, i32) #6

declare void @cr_png_set_IHDR(%struct.png_struct_def*, %struct.png_info_def*, i32, i32, i32, i32, i32, i32, i32) local_unnamed_addr #2

declare void @cr_png_set_sBIT(%struct.png_struct_def*, %struct.png_info_def*, %struct.png_color_8_struct*) local_unnamed_addr #2

declare void @cr_png_set_filter(%struct.png_struct_def*, i32, i32) local_unnamed_addr #2

declare void @cr_png_set_compression_level(%struct.png_struct_def*, i32) local_unnamed_addr #2

; Function Attrs: argmemonly nofree nounwind readonly
declare i64 @strlen(i8* nocapture) local_unnamed_addr #7

declare void @cr_png_set_text(%struct.png_struct_def*, %struct.png_info_def*, %struct.png_text_struct*, i32) local_unnamed_addr #2

; Function Attrs: nounwind ssp uwtable
define hidden zeroext i1 @_ZN15SkPngEncoderMgr13setColorSpaceERK11SkImageInfo(%class.SkPngEncoderMgr* nocapture readonly, %struct.SkImageInfo* nocapture readonly dereferenceable(24)) local_unnamed_addr #0 align 2 {
  %3 = alloca %struct.skcms_TransferFunction, align 4
  %4 = alloca %struct.skcms_Matrix3x3, align 4
  %5 = alloca %class.sk_sp.35, align 8
  %6 = getelementptr inbounds %class.SkPngEncoderMgr, %class.SkPngEncoderMgr* %0, i64 0, i32 0
  %7 = load %struct.png_struct_def*, %struct.png_struct_def** %6, align 8
  %8 = call [1 x %struct.__jmp_buf_tag]* @cr_png_set_longjmp_fn(%struct.png_struct_def* %7, void (%struct.__jmp_buf_tag*, i32)* nonnull @longjmp, i64 200) #15
  %9 = getelementptr inbounds [1 x %struct.__jmp_buf_tag], [1 x %struct.__jmp_buf_tag]* %8, i64 0, i64 0
  %10 = call i32 @_setjmp(%struct.__jmp_buf_tag* %9) #18
  %11 = icmp eq i32 %10, 0
  br i1 %11, label %12, label %58

12:                                               ; preds = %2
  %13 = getelementptr inbounds %struct.SkImageInfo, %struct.SkImageInfo* %1, i64 0, i32 0, i32 0, i32 0
  %14 = load %class.SkColorSpace*, %class.SkColorSpace** %13, align 8
  %15 = icmp eq %class.SkColorSpace* %14, null
  br i1 %15, label %24, label %16

16:                                               ; preds = %12
  %17 = call zeroext i1 @_ZNK12SkColorSpace6isSRGBEv(%class.SkColorSpace* nonnull %14) #15
  br i1 %17, label %20, label %18

18:                                               ; preds = %16
  %19 = load %class.SkColorSpace*, %class.SkColorSpace** %13, align 8, !noalias !2
  br label %24

20:                                               ; preds = %16
  %21 = load %struct.png_struct_def*, %struct.png_struct_def** %6, align 8
  %22 = getelementptr inbounds %class.SkPngEncoderMgr, %class.SkPngEncoderMgr* %0, i64 0, i32 1
  %23 = load %struct.png_info_def*, %struct.png_info_def** %22, align 8
  call void @cr_png_set_sRGB(%struct.png_struct_def* %21, %struct.png_info_def* %23, i32 0) #15
  br label %58

24:                                               ; preds = %18, %12
  %25 = phi %class.SkColorSpace* [ %19, %18 ], [ null, %12 ]
  %26 = load %struct.png_struct_def*, %struct.png_struct_def** %6, align 8
  %27 = getelementptr inbounds %class.SkPngEncoderMgr, %class.SkPngEncoderMgr* %0, i64 0, i32 1
  %28 = load %struct.png_info_def*, %struct.png_info_def** %27, align 8
  %29 = bitcast %class.sk_sp.35* %5 to i8*
  call void @llvm.lifetime.start.p0i8(i64 8, i8* nonnull %29) #15
  %30 = getelementptr inbounds %class.sk_sp.35, %class.sk_sp.35* %5, i64 0, i32 0
  store %class.SkData* inttoptr (i64 -6148914691236517206 to %class.SkData*), %class.SkData** %30, align 8
  %31 = icmp eq %class.SkColorSpace* %25, null
  br i1 %31, label %32, label %33

32:                                               ; preds = %24
  store %class.SkData* null, %class.SkData** %30, align 8, !alias.scope !2
  br label %57

33:                                               ; preds = %24
  %34 = bitcast %struct.skcms_TransferFunction* %3 to i8*
  call void @llvm.lifetime.start.p0i8(i64 28, i8* nonnull %34) #15, !noalias !2
  %35 = bitcast %struct.skcms_Matrix3x3* %4 to i8*
  call void @llvm.memset.p0i8.i64(i8* nonnull align 4 %34, i8 -1, i64 28, i1 false) #15, !noalias !2
  call void @llvm.lifetime.start.p0i8(i64 36, i8* nonnull %35) #15, !noalias !2
  call void @llvm.memset.p0i8.i64(i8* nonnull align 4 %35, i8 -1, i64 36, i1 false) #15, !noalias !2
  %36 = call zeroext i1 @_ZNK12SkColorSpace21isNumericalTransferFnEP22skcms_TransferFunction(%class.SkColorSpace* nonnull %25, %struct.skcms_TransferFunction* nonnull %3) #15, !noalias !2
  br i1 %36, label %37, label %39

37:                                               ; preds = %33
  %38 = call zeroext i1 @_ZNK12SkColorSpace8toXYZD50EP15skcms_Matrix3x3(%class.SkColorSpace* nonnull %25, %struct.skcms_Matrix3x3* nonnull %4) #15, !noalias !2
  br i1 %38, label %40, label %39

39:                                               ; preds = %37, %33
  store %class.SkData* null, %class.SkData** %30, align 8, !alias.scope !2
  call void @llvm.lifetime.end.p0i8(i64 36, i8* nonnull %35) #15, !noalias !2
  call void @llvm.lifetime.end.p0i8(i64 28, i8* nonnull %34) #15, !noalias !2
  br label %57

40:                                               ; preds = %37
  call void @_Z17SkWriteICCProfileRK22skcms_TransferFunctionRK15skcms_Matrix3x3(%class.sk_sp.35* nonnull sret %5, %struct.skcms_TransferFunction* nonnull dereferenceable(28) %3, %struct.skcms_Matrix3x3* nonnull dereferenceable(36) %4) #15
  %41 = load %class.SkData*, %class.SkData** %30, align 8
  call void @llvm.lifetime.end.p0i8(i64 36, i8* nonnull %35) #15, !noalias !2
  call void @llvm.lifetime.end.p0i8(i64 28, i8* nonnull %34) #15, !noalias !2
  %42 = icmp eq %class.SkData* %41, null
  br i1 %42, label %57, label %43

43:                                               ; preds = %40
  %44 = getelementptr inbounds %class.SkData, %class.SkData* %41, i64 0, i32 3
  %45 = load i8*, i8** %44, align 8
  %46 = getelementptr inbounds %class.SkData, %class.SkData* %41, i64 0, i32 4
  %47 = load i64, i64* %46, align 8
  %48 = trunc i64 %47 to i32
  call void @cr_png_set_iCCP(%struct.png_struct_def* %26, %struct.png_info_def* %28, i8* getelementptr inbounds ([5 x i8], [5 x i8]* @.str.2, i64 0, i64 0), i32 0, i8* %45, i32 %48) #15
  %49 = load %class.SkData*, %class.SkData** %30, align 8
  %50 = icmp eq %class.SkData* %49, null
  br i1 %50, label %57, label %51

51:                                               ; preds = %43
  %52 = getelementptr inbounds %class.SkData, %class.SkData* %49, i64 0, i32 0, i32 0, i32 0, i32 0, i32 0, i32 0, i32 0
  %53 = atomicrmw add i32* %52, i32 -1 acq_rel
  %54 = icmp eq i32 %53, 1
  br i1 %54, label %55, label %57

55:                                               ; preds = %51
  call void @_ZN6SkDataD1Ev(%class.SkData* nonnull %49) #15
  %56 = bitcast %class.SkData* %49 to i8*
  call void @_ZN6SkDatadlEPv(i8* nonnull %56) #15
  br label %57

57:                                               ; preds = %32, %39, %40, %43, %51, %55
  call void @llvm.lifetime.end.p0i8(i64 8, i8* nonnull %29) #15
  br label %58

58:                                               ; preds = %20, %57, %2
  %59 = phi i1 [ false, %2 ], [ true, %57 ], [ true, %20 ]
  ret i1 %59
}

declare zeroext i1 @_ZNK12SkColorSpace6isSRGBEv(%class.SkColorSpace*) local_unnamed_addr #2

declare void @cr_png_set_sRGB(%struct.png_struct_def*, %struct.png_info_def*, i32) local_unnamed_addr #2

; Function Attrs: nounwind ssp uwtable
define hidden zeroext i1 @_ZN15SkPngEncoderMgr9writeInfoERK11SkImageInfo(%class.SkPngEncoderMgr* nocapture readonly, %struct.SkImageInfo* nocapture readonly dereferenceable(24)) local_unnamed_addr #0 align 2 {
  %3 = getelementptr inbounds %class.SkPngEncoderMgr, %class.SkPngEncoderMgr* %0, i64 0, i32 0
  %4 = load %struct.png_struct_def*, %struct.png_struct_def** %3, align 8
  %5 = call [1 x %struct.__jmp_buf_tag]* @cr_png_set_longjmp_fn(%struct.png_struct_def* %4, void (%struct.__jmp_buf_tag*, i32)* nonnull @longjmp, i64 200) #15
  %6 = getelementptr inbounds [1 x %struct.__jmp_buf_tag], [1 x %struct.__jmp_buf_tag]* %5, i64 0, i64 0
  %7 = call i32 @_setjmp(%struct.__jmp_buf_tag* %6) #18
  %8 = icmp eq i32 %7, 0
  br i1 %8, label %9, label %22

9:                                                ; preds = %2
  %10 = load %struct.png_struct_def*, %struct.png_struct_def** %3, align 8
  %11 = getelementptr inbounds %class.SkPngEncoderMgr, %class.SkPngEncoderMgr* %0, i64 0, i32 1
  %12 = load %struct.png_info_def*, %struct.png_info_def** %11, align 8
  call void @cr_png_write_info(%struct.png_struct_def* %10, %struct.png_info_def* %12) #15
  %13 = getelementptr inbounds %struct.SkImageInfo, %struct.SkImageInfo* %1, i64 0, i32 0, i32 1
  %14 = load i32, i32* %13, align 8
  %15 = icmp eq i32 %14, 13
  br i1 %15, label %16, label %22

16:                                               ; preds = %9
  %17 = getelementptr inbounds %struct.SkImageInfo, %struct.SkImageInfo* %1, i64 0, i32 0, i32 2
  %18 = load i32, i32* %17, align 4
  %19 = icmp eq i32 %18, 1
  br i1 %19, label %20, label %22

20:                                               ; preds = %16
  %21 = load %struct.png_struct_def*, %struct.png_struct_def** %3, align 8
  call void @cr_png_set_filler(%struct.png_struct_def* %21, i32 0, i32 1) #15
  br label %22

22:                                               ; preds = %9, %16, %20, %2
  %23 = phi i1 [ false, %2 ], [ true, %20 ], [ true, %16 ], [ true, %9 ]
  ret i1 %23
}

declare void @cr_png_write_info(%struct.png_struct_def*, %struct.png_info_def*) local_unnamed_addr #2

declare void @cr_png_set_filler(%struct.png_struct_def*, i32, i32) local_unnamed_addr #2

; Function Attrs: nofree norecurse nounwind ssp uwtable
define hidden void @_ZN15SkPngEncoderMgr10chooseProcERK11SkImageInfo(%class.SkPngEncoderMgr* nocapture, %struct.SkImageInfo* nocapture readonly dereferenceable(24)) local_unnamed_addr #8 align 2 {
  %3 = getelementptr inbounds %struct.SkImageInfo, %struct.SkImageInfo* %1, i64 0, i32 0, i32 1
  %4 = load i32, i32* %3, align 8
  switch i32 %4, label %48 [
    i32 20, label %47
    i32 4, label %5
    i32 6, label %10
    i32 2, label %73
    i32 5, label %15
    i32 3, label %16
    i32 11, label %23
    i32 12, label %24
    i32 13, label %24
    i32 14, label %29
    i32 7, label %34
    i32 8, label %39
    i32 9, label %44
    i32 10, label %45
    i32 1, label %46
    i32 15, label %47
    i32 19, label %47
    i32 17, label %47
    i32 18, label %47
    i32 16, label %47
  ]

5:                                                ; preds = %2
  %6 = getelementptr inbounds %struct.SkImageInfo, %struct.SkImageInfo* %1, i64 0, i32 0, i32 2
  %7 = load i32, i32* %6, align 4
  %8 = add i32 %7, -1
  %9 = icmp ult i32 %8, 3
  br i1 %9, label %49, label %73

10:                                               ; preds = %2
  %11 = getelementptr inbounds %struct.SkImageInfo, %struct.SkImageInfo* %1, i64 0, i32 0, i32 2
  %12 = load i32, i32* %11, align 4
  %13 = add i32 %12, -1
  %14 = icmp ult i32 %13, 3
  br i1 %14, label %53, label %73

15:                                               ; preds = %2
  br label %73

16:                                               ; preds = %2
  %17 = getelementptr inbounds %struct.SkImageInfo, %struct.SkImageInfo* %1, i64 0, i32 0, i32 2
  %18 = load i32, i32* %17, align 4
  %19 = icmp eq i32 %18, 2
  %20 = select i1 %19, void (i8*, i8*, i32, i32)* @_ZL23transform_scanline_4444PcPKcii, void (i8*, i8*, i32, i32)* null
  %21 = icmp eq i32 %18, 1
  %22 = select i1 %21, void (i8*, i8*, i32, i32)* @_ZL22transform_scanline_444PcPKcii, void (i8*, i8*, i32, i32)* %20
  br label %73

23:                                               ; preds = %2
  br label %73

24:                                               ; preds = %2, %2
  %25 = getelementptr inbounds %struct.SkImageInfo, %struct.SkImageInfo* %1, i64 0, i32 0, i32 2
  %26 = load i32, i32* %25, align 4
  %27 = add i32 %26, -1
  %28 = icmp ult i32 %27, 3
  br i1 %28, label %57, label %73

29:                                               ; preds = %2
  %30 = getelementptr inbounds %struct.SkImageInfo, %struct.SkImageInfo* %1, i64 0, i32 0, i32 2
  %31 = load i32, i32* %30, align 4
  %32 = add i32 %31, -1
  %33 = icmp ult i32 %32, 3
  br i1 %33, label %61, label %73

34:                                               ; preds = %2
  %35 = getelementptr inbounds %struct.SkImageInfo, %struct.SkImageInfo* %1, i64 0, i32 0, i32 2
  %36 = load i32, i32* %35, align 4
  %37 = add i32 %36, -1
  %38 = icmp ult i32 %37, 3
  br i1 %38, label %65, label %73

39:                                               ; preds = %2
  %40 = getelementptr inbounds %struct.SkImageInfo, %struct.SkImageInfo* %1, i64 0, i32 0, i32 2
  %41 = load i32, i32* %40, align 4
  %42 = add i32 %41, -1
  %43 = icmp ult i32 %42, 3
  br i1 %43, label %69, label %73

44:                                               ; preds = %2
  br label %73

45:                                               ; preds = %2
  br label %73

46:                                               ; preds = %2
  br label %73

47:                                               ; preds = %2, %2, %2, %2, %2, %2
  br label %73

48:                                               ; preds = %2
  br label %73

49:                                               ; preds = %5
  %50 = sext i32 %8 to i64
  %51 = getelementptr inbounds [3 x void (i8*, i8*, i32, i32)*], [3 x void (i8*, i8*, i32, i32)*]* @switch.table._ZN15SkPngEncoderMgr10chooseProcERK11SkImageInfo, i64 0, i64 %50
  %52 = load void (i8*, i8*, i32, i32)*, void (i8*, i8*, i32, i32)** %51, align 8
  br label %73

53:                                               ; preds = %10
  %54 = sext i32 %13 to i64
  %55 = getelementptr inbounds [3 x void (i8*, i8*, i32, i32)*], [3 x void (i8*, i8*, i32, i32)*]* @switch.table._ZN15SkPngEncoderMgr10chooseProcERK11SkImageInfo.4, i64 0, i64 %54
  %56 = load void (i8*, i8*, i32, i32)*, void (i8*, i8*, i32, i32)** %55, align 8
  br label %73

57:                                               ; preds = %24
  %58 = sext i32 %27 to i64
  %59 = getelementptr inbounds [3 x void (i8*, i8*, i32, i32)*], [3 x void (i8*, i8*, i32, i32)*]* @switch.table._ZN15SkPngEncoderMgr10chooseProcERK11SkImageInfo.5, i64 0, i64 %58
  %60 = load void (i8*, i8*, i32, i32)*, void (i8*, i8*, i32, i32)** %59, align 8
  br label %73

61:                                               ; preds = %29
  %62 = sext i32 %32 to i64
  %63 = getelementptr inbounds [3 x void (i8*, i8*, i32, i32)*], [3 x void (i8*, i8*, i32, i32)*]* @switch.table._ZN15SkPngEncoderMgr10chooseProcERK11SkImageInfo.6, i64 0, i64 %62
  %64 = load void (i8*, i8*, i32, i32)*, void (i8*, i8*, i32, i32)** %63, align 8
  br label %73

65:                                               ; preds = %34
  %66 = sext i32 %37 to i64
  %67 = getelementptr inbounds [3 x void (i8*, i8*, i32, i32)*], [3 x void (i8*, i8*, i32, i32)*]* @switch.table._ZN15SkPngEncoderMgr10chooseProcERK11SkImageInfo.7, i64 0, i64 %66
  %68 = load void (i8*, i8*, i32, i32)*, void (i8*, i8*, i32, i32)** %67, align 8
  br label %73

69:                                               ; preds = %39
  %70 = sext i32 %42 to i64
  %71 = getelementptr inbounds [3 x void (i8*, i8*, i32, i32)*], [3 x void (i8*, i8*, i32, i32)*]* @switch.table._ZN15SkPngEncoderMgr10chooseProcERK11SkImageInfo.8, i64 0, i64 %70
  %72 = load void (i8*, i8*, i32, i32)*, void (i8*, i8*, i32, i32)** %71, align 8
  br label %73

73:                                               ; preds = %39, %69, %34, %65, %29, %61, %24, %57, %10, %53, %5, %49, %2, %15, %16, %23, %44, %45, %46, %47, %48
  %74 = phi void (i8*, i8*, i32, i32)* [ null, %48 ], [ @_ZL34transform_scanline_A8_to_GrayAlphaPcPKcii, %46 ], [ @_ZL30transform_scanline_bgr_101010xPcPKcii, %45 ], [ @_ZL26transform_scanline_101010xPcPKcii, %44 ], [ @_ZL25transform_scanline_memcpyPcPKcii, %23 ], [ @_ZL23transform_scanline_RGBXPcPKcii, %15 ], [ null, %47 ], [ @_ZL22transform_scanline_565PcPKcii, %2 ], [ %22, %16 ], [ %52, %49 ], [ null, %5 ], [ %56, %53 ], [ null, %10 ], [ %60, %57 ], [ null, %24 ], [ %64, %61 ], [ null, %29 ], [ %68, %65 ], [ null, %34 ], [ %72, %69 ], [ null, %39 ]
  %75 = getelementptr inbounds %class.SkPngEncoderMgr, %class.SkPngEncoderMgr* %0, i64 0, i32 3
  store void (i8*, i8*, i32, i32)* %74, void (i8*, i8*, i32, i32)** %75, align 8
  ret void
}

; Function Attrs: nounwind ssp uwtable
define hidden %class.SkEncoder* @_ZN12SkPngEncoder4MakeEP9SkWStreamRK8SkPixmapRKNS_7OptionsE(%class.SkWStream*, %class.SkPixmap* dereferenceable(40), %"struct.SkPngEncoder::Options"* nocapture readonly dereferenceable(16)) local_unnamed_addr #0 align 2 {
  %4 = alloca %struct.png_struct_def*, align 8
  %5 = getelementptr inbounds %class.SkPixmap, %class.SkPixmap* %1, i64 0, i32 2, i32 1, i32 0
  %6 = load i32, i32* %5, align 4
  %7 = icmp slt i32 %6, 1
  br i1 %7, label %88, label %8

8:                                                ; preds = %3
  %9 = getelementptr inbounds %class.SkPixmap, %class.SkPixmap* %1, i64 0, i32 2, i32 1, i32 1
  %10 = load i32, i32* %9, align 4
  %11 = icmp sgt i32 %6, 536870911
  %12 = add i32 %10, -1
  %13 = icmp ugt i32 %12, 536870910
  %14 = or i1 %11, %13
  br i1 %14, label %88, label %15

15:                                               ; preds = %8
  %16 = getelementptr inbounds %class.SkPixmap, %class.SkPixmap* %1, i64 0, i32 2, i32 0, i32 1
  %17 = load i32, i32* %16, align 8
  %18 = icmp ne i32 %17, 0
  %19 = getelementptr inbounds %class.SkPixmap, %class.SkPixmap* %1, i64 0, i32 2, i32 0, i32 2
  %20 = load i32, i32* %19, align 4
  %21 = icmp ne i32 %20, 0
  %22 = and i1 %18, %21
  br i1 %22, label %23, label %88

23:                                               ; preds = %15
  %24 = getelementptr inbounds %class.SkPixmap, %class.SkPixmap* %1, i64 0, i32 0
  %25 = load i8*, i8** %24, align 8
  %26 = icmp eq i8* %25, null
  br i1 %26, label %88, label %27

27:                                               ; preds = %23
  %28 = getelementptr inbounds %class.SkPixmap, %class.SkPixmap* %1, i64 0, i32 1
  %29 = load i64, i64* %28, align 8
  %30 = sext i32 %6 to i64
  %31 = getelementptr inbounds %class.SkPixmap, %class.SkPixmap* %1, i64 0, i32 2, i32 0
  %32 = tail call i32 @_ZNK11SkColorInfo13bytesPerPixelEv(%class.SkColorInfo* %31) #15
  %33 = sext i32 %32 to i64
  %34 = mul nsw i64 %33, %30
  %35 = icmp ult i64 %34, 2147483648
  %36 = select i1 %35, i64 %34, i64 0
  %37 = icmp ult i64 %29, %36
  br i1 %37, label %88, label %38

38:                                               ; preds = %27
  %39 = bitcast %struct.png_struct_def** %4 to i8*
  call void @llvm.lifetime.start.p0i8(i64 8, i8* nonnull %39) #15
  %40 = tail call noalias %struct.png_struct_def* @cr_png_create_write_struct(i8* getelementptr inbounds ([7 x i8], [7 x i8]* @.str, i64 0, i64 0), i8* null, void (%struct.png_struct_def*, i8*)* nonnull @_ZL11sk_error_fnP14png_struct_defPKc, void (%struct.png_struct_def*, i8*)* null) #15
  store %struct.png_struct_def* %40, %struct.png_struct_def** %4, align 8
  %41 = icmp eq %struct.png_struct_def* %40, null
  br i1 %41, label %46, label %42

42:                                               ; preds = %38
  %43 = tail call noalias %struct.png_info_def* @cr_png_create_info_struct(%struct.png_struct_def* nonnull %40) #15
  %44 = icmp eq %struct.png_info_def* %43, null
  br i1 %44, label %45, label %47

45:                                               ; preds = %42
  call void @cr_png_destroy_write_struct(%struct.png_struct_def** nonnull %4, %struct.png_info_def** null) #15
  br label %46

46:                                               ; preds = %45, %38
  call void @llvm.lifetime.end.p0i8(i64 8, i8* nonnull %39) #15
  br label %88

47:                                               ; preds = %42
  %48 = bitcast %class.SkWStream* %0 to i8*
  tail call void @cr_png_set_write_fn(%struct.png_struct_def* nonnull %40, i8* %48, void (%struct.png_struct_def*, i8*, i64)* nonnull @_ZL11sk_write_fnP14png_struct_defPhm, void (%struct.png_struct_def*)* null) #15
  %49 = tail call i8* @_Znwm(i64 32) #16
  %50 = ptrtoint %struct.png_struct_def* %40 to i64
  %51 = bitcast i8* %49 to i64*
  store i64 %50, i64* %51, align 8
  %52 = getelementptr inbounds i8, i8* %49, i64 8
  %53 = bitcast i8* %52 to %struct.png_info_def**
  store %struct.png_info_def* %43, %struct.png_info_def** %53, align 8
  %54 = bitcast i8* %49 to %class.SkPngEncoderMgr*
  call void @llvm.lifetime.end.p0i8(i64 8, i8* nonnull %39) #15
  %55 = ptrtoint i8* %49 to i64
  %56 = getelementptr inbounds %class.SkPixmap, %class.SkPixmap* %1, i64 0, i32 2
  %57 = tail call zeroext i1 @_ZN15SkPngEncoderMgr9setHeaderERK11SkImageInfoRKN12SkPngEncoder7OptionsE(%class.SkPngEncoderMgr* nonnull %54, %struct.SkImageInfo* dereferenceable(24) %56, %"struct.SkPngEncoder::Options"* dereferenceable(16) %2)
  br i1 %57, label %58, label %86

58:                                               ; preds = %47
  %59 = tail call zeroext i1 @_ZN15SkPngEncoderMgr13setColorSpaceERK11SkImageInfo(%class.SkPngEncoderMgr* nonnull %54, %struct.SkImageInfo* dereferenceable(24) %56)
  br i1 %59, label %60, label %86

60:                                               ; preds = %58
  %61 = tail call zeroext i1 @_ZN15SkPngEncoderMgr9writeInfoERK11SkImageInfo(%class.SkPngEncoderMgr* nonnull %54, %struct.SkImageInfo* dereferenceable(24) %56)
  br i1 %61, label %62, label %86

62:                                               ; preds = %60
  tail call void @_ZN15SkPngEncoderMgr10chooseProcERK11SkImageInfo(%class.SkPngEncoderMgr* nonnull %54, %struct.SkImageInfo* dereferenceable(24) %56)
  %63 = tail call i8* @_Znwm(i64 40) #16
  %64 = getelementptr inbounds i8, i8* %49, i64 16
  %65 = bitcast i8* %64 to i32*
  %66 = load i32, i32* %65, align 8
  %67 = load i32, i32* %5, align 4
  %68 = mul nsw i32 %67, %66
  %69 = bitcast i8* %63 to i32 (...)***
  store i32 (...)** bitcast (i8** getelementptr inbounds ({ [5 x i8*] }, { [5 x i8*] }* @_ZTV9SkEncoder, i64 0, inrange i32 0, i64 2) to i32 (...)**), i32 (...)*** %69, align 8
  %70 = getelementptr inbounds i8, i8* %63, i64 8
  %71 = bitcast i8* %70 to %class.SkPixmap**
  store %class.SkPixmap* %1, %class.SkPixmap** %71, align 8
  %72 = getelementptr inbounds i8, i8* %63, i64 16
  %73 = bitcast i8* %72 to i32*
  store i32 0, i32* %73, align 8
  %74 = getelementptr inbounds i8, i8* %63, i64 24
  %75 = icmp eq i32 %68, 0
  br i1 %75, label %80, label %76

76:                                               ; preds = %62
  %77 = sext i32 %68 to i64
  %78 = tail call i8* @_Z15sk_malloc_throwmm(i64 %77, i64 1) #15
  %79 = ptrtoint i8* %78 to i64
  br label %80

80:                                               ; preds = %76, %62
  %81 = phi i64 [ %79, %76 ], [ 0, %62 ]
  %82 = bitcast i8* %74 to i64*
  store i64 %81, i64* %82, align 8
  store i32 (...)** bitcast (i8** getelementptr inbounds ({ [5 x i8*] }, { [5 x i8*] }* @_ZTV12SkPngEncoder, i64 0, inrange i32 0, i64 2) to i32 (...)**), i32 (...)*** %69, align 8
  %83 = getelementptr inbounds i8, i8* %63, i64 32
  %84 = bitcast i8* %83 to i64*
  store i64 %55, i64* %84, align 8
  %85 = bitcast i8* %63 to %class.SkEncoder*
  br label %88

86:                                               ; preds = %47, %58, %60
  %87 = bitcast i8* %49 to %struct.png_struct_def**
  tail call void @cr_png_destroy_write_struct(%struct.png_struct_def** nonnull %87, %struct.png_info_def** %53) #15
  tail call void @_ZdlPv(i8* nonnull %49) #16
  br label %88

88:                                               ; preds = %27, %46, %80, %3, %8, %15, %23, %86
  %89 = phi %class.SkEncoder* [ null, %27 ], [ null, %86 ], [ null, %23 ], [ null, %15 ], [ null, %8 ], [ null, %3 ], [ null, %46 ], [ %85, %80 ]
  ret %class.SkEncoder* %89
}

; Function Attrs: nounwind ssp uwtable
define hidden void @_ZN12SkPngEncoderC2ENSt3__110unique_ptrI15SkPngEncoderMgrNS0_14default_deleteIS2_EEEERK8SkPixmap(%class.SkPngEncoder* nocapture, %class.SkPngEncoderMgr*, %class.SkPixmap* dereferenceable(40)) unnamed_addr #0 align 2 {
  %4 = ptrtoint %class.SkPngEncoderMgr* %1 to i64
  %5 = getelementptr inbounds %class.SkPngEncoderMgr, %class.SkPngEncoderMgr* %1, i64 0, i32 2
  %6 = load i32, i32* %5, align 8
  %7 = getelementptr inbounds %class.SkPixmap, %class.SkPixmap* %2, i64 0, i32 2, i32 1, i32 0
  %8 = load i32, i32* %7, align 4
  %9 = mul nsw i32 %8, %6
  %10 = getelementptr inbounds %class.SkPngEncoder, %class.SkPngEncoder* %0, i64 0, i32 0, i32 0
  store i32 (...)** bitcast (i8** getelementptr inbounds ({ [5 x i8*] }, { [5 x i8*] }* @_ZTV9SkEncoder, i64 0, inrange i32 0, i64 2) to i32 (...)**), i32 (...)*** %10, align 8
  %11 = getelementptr inbounds %class.SkPngEncoder, %class.SkPngEncoder* %0, i64 0, i32 0, i32 1
  store %class.SkPixmap* %2, %class.SkPixmap** %11, align 8
  %12 = getelementptr inbounds %class.SkPngEncoder, %class.SkPngEncoder* %0, i64 0, i32 0, i32 2
  store i32 0, i32* %12, align 8
  %13 = getelementptr inbounds %class.SkPngEncoder, %class.SkPngEncoder* %0, i64 0, i32 0, i32 3
  %14 = icmp eq i32 %9, 0
  br i1 %14, label %19, label %15

15:                                               ; preds = %3
  %16 = sext i32 %9 to i64
  %17 = tail call i8* @_Z15sk_malloc_throwmm(i64 %16, i64 1) #15
  %18 = ptrtoint i8* %17 to i64
  br label %19

19:                                               ; preds = %15, %3
  %20 = phi i64 [ %18, %15 ], [ 0, %3 ]
  %21 = bitcast %class.SkAutoTMalloc* %13 to i64*
  store i64 %20, i64* %21, align 8
  store i32 (...)** bitcast (i8** getelementptr inbounds ({ [5 x i8*] }, { [5 x i8*] }* @_ZTV12SkPngEncoder, i64 0, inrange i32 0, i64 2) to i32 (...)**), i32 (...)*** %10, align 8
  %22 = getelementptr inbounds %class.SkPngEncoder, %class.SkPngEncoder* %0, i64 0, i32 1
  %23 = bitcast %"class.std::__1::unique_ptr"* %22 to i64*
  store i64 %4, i64* %23, align 8
  ret void
}

; Function Attrs: nounwind ssp uwtable
define hidden void @_ZN12SkPngEncoderD2Ev(%class.SkPngEncoder* nocapture) unnamed_addr #0 align 2 {
  %2 = getelementptr inbounds %class.SkPngEncoder, %class.SkPngEncoder* %0, i64 0, i32 0, i32 0
  store i32 (...)** bitcast (i8** getelementptr inbounds ({ [5 x i8*] }, { [5 x i8*] }* @_ZTV12SkPngEncoder, i64 0, inrange i32 0, i64 2) to i32 (...)**), i32 (...)*** %2, align 8
  %3 = getelementptr inbounds %class.SkPngEncoder, %class.SkPngEncoder* %0, i64 0, i32 1, i32 0, i32 0, i32 0
  %4 = load %class.SkPngEncoderMgr*, %class.SkPngEncoderMgr** %3, align 8
  store %class.SkPngEncoderMgr* null, %class.SkPngEncoderMgr** %3, align 8
  %5 = icmp eq %class.SkPngEncoderMgr* %4, null
  br i1 %5, label %10, label %6

6:                                                ; preds = %1
  %7 = getelementptr inbounds %class.SkPngEncoderMgr, %class.SkPngEncoderMgr* %4, i64 0, i32 0
  %8 = getelementptr inbounds %class.SkPngEncoderMgr, %class.SkPngEncoderMgr* %4, i64 0, i32 1
  tail call void @cr_png_destroy_write_struct(%struct.png_struct_def** %7, %struct.png_info_def** %8) #15
  %9 = bitcast %class.SkPngEncoderMgr* %4 to i8*
  tail call void @_ZdlPv(i8* %9) #16
  br label %10

10:                                               ; preds = %1, %6
  store i32 (...)** bitcast (i8** getelementptr inbounds ({ [5 x i8*] }, { [5 x i8*] }* @_ZTV9SkEncoder, i64 0, inrange i32 0, i64 2) to i32 (...)**), i32 (...)*** %2, align 8
  %11 = getelementptr inbounds %class.SkPngEncoder, %class.SkPngEncoder* %0, i64 0, i32 0, i32 3, i32 0, i32 0, i32 0, i32 0
  %12 = load i8*, i8** %11, align 8
  store i8* null, i8** %11, align 8
  %13 = icmp eq i8* %12, null
  br i1 %13, label %15, label %14

14:                                               ; preds = %10
  tail call void @_Z7sk_freePv(i8* nonnull %12) #15
  br label %15

15:                                               ; preds = %10, %14
  ret void
}

; Function Attrs: nounwind ssp uwtable
define hidden void @_ZN12SkPngEncoderD0Ev(%class.SkPngEncoder*) unnamed_addr #0 align 2 {
  %2 = getelementptr inbounds %class.SkPngEncoder, %class.SkPngEncoder* %0, i64 0, i32 0, i32 0
  store i32 (...)** bitcast (i8** getelementptr inbounds ({ [5 x i8*] }, { [5 x i8*] }* @_ZTV12SkPngEncoder, i64 0, inrange i32 0, i64 2) to i32 (...)**), i32 (...)*** %2, align 8
  %3 = getelementptr inbounds %class.SkPngEncoder, %class.SkPngEncoder* %0, i64 0, i32 1, i32 0, i32 0, i32 0
  %4 = load %class.SkPngEncoderMgr*, %class.SkPngEncoderMgr** %3, align 8
  store %class.SkPngEncoderMgr* null, %class.SkPngEncoderMgr** %3, align 8
  %5 = icmp eq %class.SkPngEncoderMgr* %4, null
  br i1 %5, label %10, label %6

6:                                                ; preds = %1
  %7 = getelementptr inbounds %class.SkPngEncoderMgr, %class.SkPngEncoderMgr* %4, i64 0, i32 0
  %8 = getelementptr inbounds %class.SkPngEncoderMgr, %class.SkPngEncoderMgr* %4, i64 0, i32 1
  tail call void @cr_png_destroy_write_struct(%struct.png_struct_def** %7, %struct.png_info_def** %8) #15
  %9 = bitcast %class.SkPngEncoderMgr* %4 to i8*
  tail call void @_ZdlPv(i8* %9) #16
  br label %10

10:                                               ; preds = %6, %1
  store i32 (...)** bitcast (i8** getelementptr inbounds ({ [5 x i8*] }, { [5 x i8*] }* @_ZTV9SkEncoder, i64 0, inrange i32 0, i64 2) to i32 (...)**), i32 (...)*** %2, align 8
  %11 = getelementptr inbounds %class.SkPngEncoder, %class.SkPngEncoder* %0, i64 0, i32 0, i32 3, i32 0, i32 0, i32 0, i32 0
  %12 = load i8*, i8** %11, align 8
  store i8* null, i8** %11, align 8
  %13 = icmp eq i8* %12, null
  br i1 %13, label %15, label %14

14:                                               ; preds = %10
  tail call void @_Z7sk_freePv(i8* nonnull %12) #15
  br label %15

15:                                               ; preds = %10, %14
  %16 = bitcast %class.SkPngEncoder* %0 to i8*
  tail call void @_ZdlPv(i8* %16) #16
  ret void
}

; Function Attrs: nobuiltin nounwind
declare void @_ZdlPv(i8*) local_unnamed_addr #9

; Function Attrs: nounwind ssp uwtable
define hidden zeroext i1 @_ZN12SkPngEncoder12onEncodeRowsEi(%class.SkPngEncoder* nocapture, i32) unnamed_addr #0 align 2 {
  %3 = alloca i8*, align 8
  %4 = getelementptr inbounds %class.SkPngEncoder, %class.SkPngEncoder* %0, i64 0, i32 1, i32 0, i32 0, i32 0
  %5 = load %class.SkPngEncoderMgr*, %class.SkPngEncoderMgr** %4, align 8
  %6 = getelementptr inbounds %class.SkPngEncoderMgr, %class.SkPngEncoderMgr* %5, i64 0, i32 0
  %7 = load %struct.png_struct_def*, %struct.png_struct_def** %6, align 8
  %8 = call [1 x %struct.__jmp_buf_tag]* @cr_png_set_longjmp_fn(%struct.png_struct_def* %7, void (%struct.__jmp_buf_tag*, i32)* nonnull @longjmp, i64 200) #15
  %9 = getelementptr inbounds [1 x %struct.__jmp_buf_tag], [1 x %struct.__jmp_buf_tag]* %8, i64 0, i64 0
  %10 = call i32 @_setjmp(%struct.__jmp_buf_tag* %9) #18
  %11 = icmp eq i32 %10, 0
  br i1 %11, label %12, label %72

12:                                               ; preds = %2
  %13 = getelementptr inbounds %class.SkPngEncoder, %class.SkPngEncoder* %0, i64 0, i32 0, i32 1
  %14 = load %class.SkPixmap*, %class.SkPixmap** %13, align 8
  %15 = getelementptr inbounds %class.SkPngEncoder, %class.SkPngEncoder* %0, i64 0, i32 0, i32 2
  %16 = load i32, i32* %15, align 8
  %17 = getelementptr inbounds %class.SkPixmap, %class.SkPixmap* %14, i64 0, i32 0
  %18 = load i8*, i8** %17, align 8
  %19 = getelementptr inbounds %class.SkPixmap, %class.SkPixmap* %14, i64 0, i32 2
  %20 = getelementptr inbounds %class.SkPixmap, %class.SkPixmap* %14, i64 0, i32 1
  %21 = load i64, i64* %20, align 8
  %22 = call i64 @_ZNK11SkImageInfo13computeOffsetEiim(%struct.SkImageInfo* %19, i32 0, i32 %16, i64 %21) #15
  %23 = icmp sgt i32 %1, 0
  br i1 %23, label %26, label %24

24:                                               ; preds = %12
  %25 = load %class.SkPixmap*, %class.SkPixmap** %13, align 8
  br label %33

26:                                               ; preds = %12
  %27 = getelementptr inbounds i8, i8* %18, i64 %22
  %28 = getelementptr inbounds %class.SkPngEncoder, %class.SkPngEncoder* %0, i64 0, i32 0, i32 3, i32 0, i32 0, i32 0, i32 0
  %29 = bitcast i8** %3 to i8*
  %30 = bitcast i8** %28 to i64*
  %31 = bitcast i8** %3 to i64*
  %32 = load %class.SkPixmap*, %class.SkPixmap** %13, align 8
  br label %40

33:                                               ; preds = %40, %24
  %34 = phi %class.SkPixmap* [ %25, %24 ], [ %60, %40 ]
  %35 = load i32, i32* %15, align 8
  %36 = add nsw i32 %35, %1
  store i32 %36, i32* %15, align 8
  %37 = getelementptr inbounds %class.SkPixmap, %class.SkPixmap* %34, i64 0, i32 2, i32 1, i32 1
  %38 = load i32, i32* %37, align 4
  %39 = icmp eq i32 %36, %38
  br i1 %39, label %66, label %72

40:                                               ; preds = %40, %26
  %41 = phi %class.SkPixmap* [ %32, %26 ], [ %60, %40 ]
  %42 = phi i32 [ 0, %26 ], [ %64, %40 ]
  %43 = phi i8* [ %27, %26 ], [ %63, %40 ]
  %44 = getelementptr inbounds %class.SkPixmap, %class.SkPixmap* %41, i64 0, i32 2, i32 0
  %45 = call i32 @_ZNK11SkColorInfo13shiftPerPixelEv(%class.SkColorInfo* %44) #15
  %46 = load %class.SkPngEncoderMgr*, %class.SkPngEncoderMgr** %4, align 8
  %47 = getelementptr inbounds %class.SkPngEncoderMgr, %class.SkPngEncoderMgr* %46, i64 0, i32 3
  %48 = load void (i8*, i8*, i32, i32)*, void (i8*, i8*, i32, i32)** %47, align 8
  %49 = load i8*, i8** %28, align 8
  %50 = load %class.SkPixmap*, %class.SkPixmap** %13, align 8
  %51 = getelementptr inbounds %class.SkPixmap, %class.SkPixmap* %50, i64 0, i32 2, i32 1, i32 0
  %52 = load i32, i32* %51, align 4
  %53 = getelementptr inbounds %class.SkPixmap, %class.SkPixmap* %50, i64 0, i32 2, i32 0, i32 1
  %54 = load i32, i32* %53, align 8
  %55 = call i32 @_Z24SkColorTypeBytesPerPixel11SkColorType(i32 %54) #15
  call void %48(i8* %49, i8* %43, i32 %52, i32 %55) #15
  call void @llvm.lifetime.start.p0i8(i64 8, i8* nonnull %29) #15
  %56 = load i64, i64* %30, align 8
  store i64 %56, i64* %31, align 8
  %57 = load %class.SkPngEncoderMgr*, %class.SkPngEncoderMgr** %4, align 8
  %58 = getelementptr inbounds %class.SkPngEncoderMgr, %class.SkPngEncoderMgr* %57, i64 0, i32 0
  %59 = load %struct.png_struct_def*, %struct.png_struct_def** %58, align 8
  call void @cr_png_write_rows(%struct.png_struct_def* %59, i8** nonnull %3, i32 1) #15
  %60 = load %class.SkPixmap*, %class.SkPixmap** %13, align 8
  %61 = getelementptr inbounds %class.SkPixmap, %class.SkPixmap* %60, i64 0, i32 1
  %62 = load i64, i64* %61, align 8
  %63 = getelementptr inbounds i8, i8* %43, i64 %62
  call void @llvm.lifetime.end.p0i8(i64 8, i8* nonnull %29) #15
  %64 = add nuw nsw i32 %42, 1
  %65 = icmp eq i32 %64, %1
  br i1 %65, label %33, label %40

66:                                               ; preds = %33
  %67 = load %class.SkPngEncoderMgr*, %class.SkPngEncoderMgr** %4, align 8
  %68 = getelementptr inbounds %class.SkPngEncoderMgr, %class.SkPngEncoderMgr* %67, i64 0, i32 0
  %69 = load %struct.png_struct_def*, %struct.png_struct_def** %68, align 8
  %70 = getelementptr inbounds %class.SkPngEncoderMgr, %class.SkPngEncoderMgr* %67, i64 0, i32 1
  %71 = load %struct.png_info_def*, %struct.png_info_def** %70, align 8
  call void @cr_png_write_end(%struct.png_struct_def* %69, %struct.png_info_def* %71) #15
  br label %72

72:                                               ; preds = %33, %66, %2
  %73 = phi i1 [ false, %2 ], [ true, %66 ], [ true, %33 ]
  ret i1 %73
}

declare i32 @_Z24SkColorTypeBytesPerPixel11SkColorType(i32) local_unnamed_addr #2

declare void @cr_png_write_rows(%struct.png_struct_def*, i8**, i32) local_unnamed_addr #2

declare void @cr_png_write_end(%struct.png_struct_def*, %struct.png_info_def*) local_unnamed_addr #2

; Function Attrs: nounwind ssp uwtable
define hidden zeroext i1 @_ZN12SkPngEncoder6EncodeEP9SkWStreamRK8SkPixmapRKNS_7OptionsE(%class.SkWStream*, %class.SkPixmap* dereferenceable(40), %"struct.SkPngEncoder::Options"* nocapture readonly dereferenceable(16)) local_unnamed_addr #0 align 2 {
  %4 = tail call %class.SkEncoder* @_ZN12SkPngEncoder4MakeEP9SkWStreamRK8SkPixmapRKNS_7OptionsE(%class.SkWStream* %0, %class.SkPixmap* dereferenceable(40) %1, %"struct.SkPngEncoder::Options"* dereferenceable(16) %2)
  %5 = icmp eq %class.SkEncoder* %4, null
  br i1 %5, label %14, label %6

6:                                                ; preds = %3
  %7 = getelementptr inbounds %class.SkPixmap, %class.SkPixmap* %1, i64 0, i32 2, i32 1, i32 1
  %8 = load i32, i32* %7, align 4
  %9 = tail call zeroext i1 @_ZN9SkEncoder10encodeRowsEi(%class.SkEncoder* nonnull %4, i32 %8) #15
  %10 = bitcast %class.SkEncoder* %4 to void (%class.SkEncoder*)***
  %11 = load void (%class.SkEncoder*)**, void (%class.SkEncoder*)*** %10, align 8
  %12 = getelementptr inbounds void (%class.SkEncoder*)*, void (%class.SkEncoder*)** %11, i64 1
  %13 = load void (%class.SkEncoder*)*, void (%class.SkEncoder*)** %12, align 8
  tail call void %13(%class.SkEncoder* nonnull %4) #15
  br label %14

14:                                               ; preds = %3, %6
  %15 = phi i1 [ %9, %6 ], [ false, %3 ]
  ret i1 %15
}

declare zeroext i1 @_ZN9SkEncoder10encodeRowsEi(%class.SkEncoder*, i32) local_unnamed_addr #2

declare i8* @cr_png_get_io_ptr(%struct.png_struct_def*) local_unnamed_addr #2

; Function Attrs: noreturn
declare void @cr_png_error(%struct.png_struct_def*, i8*) local_unnamed_addr #10

declare zeroext i1 @_Z25SkColorTypeIsAlwaysOpaque11SkColorType(i32) local_unnamed_addr #2

declare i8* @_ZNK11SkDataTable2atEiPm(%class.SkDataTable*, i32, i64*) local_unnamed_addr #2

declare void @cr_png_set_iCCP(%struct.png_struct_def*, %struct.png_info_def*, i8*, i32, i8*, i32) local_unnamed_addr #2

; Function Attrs: argmemonly nounwind
declare void @llvm.memset.p0i8.i64(i8* nocapture writeonly, i8, i64, i1 immarg) #1

declare zeroext i1 @_ZNK12SkColorSpace21isNumericalTransferFnEP22skcms_TransferFunction(%class.SkColorSpace*, %struct.skcms_TransferFunction*) local_unnamed_addr #2

declare zeroext i1 @_ZNK12SkColorSpace8toXYZD50EP15skcms_Matrix3x3(%class.SkColorSpace*, %struct.skcms_Matrix3x3*) local_unnamed_addr #2

declare void @_Z17SkWriteICCProfileRK22skcms_TransferFunctionRK15skcms_Matrix3x3(%class.sk_sp.35* sret, %struct.skcms_TransferFunction* dereferenceable(28), %struct.skcms_Matrix3x3* dereferenceable(36)) local_unnamed_addr #2

; Function Attrs: nounwind
declare void @_ZN6SkDataD1Ev(%class.SkData*) unnamed_addr #11

; Function Attrs: nounwind
declare void @_ZN6SkDatadlEPv(i8*) local_unnamed_addr #11

; Function Attrs: inlinehint nounwind ssp uwtable
define internal void @_ZL23transform_scanline_RGBXPcPKcii(i8*, i8*, i32, i32) #12 {
  %5 = sext i32 %2 to i64
  %6 = tail call zeroext i1 @skcms_Transform(i8* %1, i32 12, i32 1, %struct.skcms_ICCProfile* null, i8* %0, i32 10, i32 1, %struct.skcms_ICCProfile* null, i64 %5) #15
  ret void
}

; Function Attrs: inlinehint nounwind ssp uwtable
define internal void @_ZL25transform_scanline_memcpyPcPKcii(i8* nocapture, i8* nocapture readonly, i32, i32) #12 {
  %5 = mul nsw i32 %3, %2
  %6 = sext i32 %5 to i64
  tail call void @llvm.memcpy.p0i8.p0i8.i64(i8* align 1 %0, i8* align 1 %1, i64 %6, i1 false)
  ret void
}

; Function Attrs: inlinehint nounwind ssp uwtable
define internal void @_ZL23transform_scanline_rgbAPcPKcii(i8*, i8*, i32, i32) #12 {
  %5 = sext i32 %2 to i64
  %6 = tail call zeroext i1 @skcms_Transform(i8* %1, i32 12, i32 2, %struct.skcms_ICCProfile* null, i8* %0, i32 12, i32 1, %struct.skcms_ICCProfile* null, i64 %5) #15
  ret void
}

; Function Attrs: inlinehint nounwind ssp uwtable
define internal void @_ZL23transform_scanline_BGRXPcPKcii(i8*, i8*, i32, i32) #12 {
  %5 = sext i32 %2 to i64
  %6 = tail call zeroext i1 @skcms_Transform(i8* %1, i32 13, i32 1, %struct.skcms_ICCProfile* null, i8* %0, i32 10, i32 1, %struct.skcms_ICCProfile* null, i64 %5) #15
  ret void
}

; Function Attrs: inlinehint nounwind ssp uwtable
define internal void @_ZL23transform_scanline_BGRAPcPKcii(i8*, i8*, i32, i32) #12 {
  %5 = sext i32 %2 to i64
  %6 = tail call zeroext i1 @skcms_Transform(i8* %1, i32 13, i32 1, %struct.skcms_ICCProfile* null, i8* %0, i32 12, i32 1, %struct.skcms_ICCProfile* null, i64 %5) #15
  ret void
}

; Function Attrs: inlinehint nounwind ssp uwtable
define internal void @_ZL23transform_scanline_bgrAPcPKcii(i8*, i8*, i32, i32) #12 {
  %5 = sext i32 %2 to i64
  %6 = tail call zeroext i1 @skcms_Transform(i8* %1, i32 13, i32 2, %struct.skcms_ICCProfile* null, i8* %0, i32 12, i32 1, %struct.skcms_ICCProfile* null, i64 %5) #15
  ret void
}

; Function Attrs: inlinehint nounwind ssp uwtable
define internal void @_ZL22transform_scanline_565PcPKcii(i8*, i8*, i32, i32) #12 {
  %5 = sext i32 %2 to i64
  %6 = tail call zeroext i1 @skcms_Transform(i8* %1, i32 7, i32 1, %struct.skcms_ICCProfile* null, i8* %0, i32 10, i32 1, %struct.skcms_ICCProfile* null, i64 %5) #15
  ret void
}

; Function Attrs: inlinehint nounwind ssp uwtable
define internal void @_ZL22transform_scanline_444PcPKcii(i8*, i8*, i32, i32) #12 {
  %5 = sext i32 %2 to i64
  %6 = tail call zeroext i1 @skcms_Transform(i8* %1, i32 8, i32 1, %struct.skcms_ICCProfile* null, i8* %0, i32 10, i32 1, %struct.skcms_ICCProfile* null, i64 %5) #15
  ret void
}

; Function Attrs: inlinehint nounwind ssp uwtable
define internal void @_ZL23transform_scanline_4444PcPKcii(i8*, i8*, i32, i32) #12 {
  %5 = sext i32 %2 to i64
  %6 = tail call zeroext i1 @skcms_Transform(i8* %1, i32 8, i32 2, %struct.skcms_ICCProfile* null, i8* %0, i32 12, i32 1, %struct.skcms_ICCProfile* null, i64 %5) #15
  ret void
}

; Function Attrs: inlinehint nounwind ssp uwtable
define internal void @_ZL22transform_scanline_F16PcPKcii(i8*, i8*, i32, i32) #12 {
  %5 = sext i32 %2 to i64
  %6 = tail call zeroext i1 @skcms_Transform(i8* %1, i32 32, i32 1, %struct.skcms_ICCProfile* null, i8* %0, i32 24, i32 1, %struct.skcms_ICCProfile* null, i64 %5) #15
  ret void
}

; Function Attrs: inlinehint nounwind ssp uwtable
define internal void @_ZL29transform_scanline_F16_premulPcPKcii(i8*, i8*, i32, i32) #12 {
  %5 = sext i32 %2 to i64
  %6 = tail call zeroext i1 @skcms_Transform(i8* %1, i32 32, i32 2, %struct.skcms_ICCProfile* null, i8* %0, i32 24, i32 1, %struct.skcms_ICCProfile* null, i64 %5) #15
  ret void
}

; Function Attrs: inlinehint nounwind ssp uwtable
define internal void @_ZL22transform_scanline_F32PcPKcii(i8*, i8*, i32, i32) #12 {
  %5 = sext i32 %2 to i64
  %6 = tail call zeroext i1 @skcms_Transform(i8* %1, i32 36, i32 1, %struct.skcms_ICCProfile* null, i8* %0, i32 24, i32 1, %struct.skcms_ICCProfile* null, i64 %5) #15
  ret void
}

; Function Attrs: inlinehint nounwind ssp uwtable
define internal void @_ZL29transform_scanline_F32_premulPcPKcii(i8*, i8*, i32, i32) #12 {
  %5 = sext i32 %2 to i64
  %6 = tail call zeroext i1 @skcms_Transform(i8* %1, i32 36, i32 2, %struct.skcms_ICCProfile* null, i8* %0, i32 24, i32 1, %struct.skcms_ICCProfile* null, i64 %5) #15
  ret void
}

; Function Attrs: inlinehint nounwind ssp uwtable
define internal void @_ZL26transform_scanline_1010102PcPKcii(i8*, i8*, i32, i32) #12 {
  %5 = sext i32 %2 to i64
  %6 = tail call zeroext i1 @skcms_Transform(i8* %1, i32 16, i32 1, %struct.skcms_ICCProfile* null, i8* %0, i32 24, i32 1, %struct.skcms_ICCProfile* null, i64 %5) #15
  ret void
}

; Function Attrs: inlinehint nounwind ssp uwtable
define internal void @_ZL33transform_scanline_1010102_premulPcPKcii(i8*, i8*, i32, i32) #12 {
  %5 = sext i32 %2 to i64
  %6 = tail call zeroext i1 @skcms_Transform(i8* %1, i32 16, i32 2, %struct.skcms_ICCProfile* null, i8* %0, i32 24, i32 1, %struct.skcms_ICCProfile* null, i64 %5) #15
  ret void
}

; Function Attrs: inlinehint nounwind ssp uwtable
define internal void @_ZL31transform_scanline_bgra_1010102PcPKcii(i8*, i8*, i32, i32) #12 {
  %5 = sext i32 %2 to i64
  %6 = tail call zeroext i1 @skcms_Transform(i8* %1, i32 17, i32 1, %struct.skcms_ICCProfile* null, i8* %0, i32 24, i32 1, %struct.skcms_ICCProfile* null, i64 %5) #15
  ret void
}

; Function Attrs: inlinehint nounwind ssp uwtable
define internal void @_ZL38transform_scanline_bgra_1010102_premulPcPKcii(i8*, i8*, i32, i32) #12 {
  %5 = sext i32 %2 to i64
  %6 = tail call zeroext i1 @skcms_Transform(i8* %1, i32 17, i32 2, %struct.skcms_ICCProfile* null, i8* %0, i32 24, i32 1, %struct.skcms_ICCProfile* null, i64 %5) #15
  ret void
}

; Function Attrs: inlinehint nounwind ssp uwtable
define internal void @_ZL26transform_scanline_101010xPcPKcii(i8*, i8*, i32, i32) #12 {
  %5 = sext i32 %2 to i64
  %6 = tail call zeroext i1 @skcms_Transform(i8* %1, i32 16, i32 1, %struct.skcms_ICCProfile* null, i8* %0, i32 22, i32 1, %struct.skcms_ICCProfile* null, i64 %5) #15
  ret void
}

; Function Attrs: inlinehint nounwind ssp uwtable
define internal void @_ZL30transform_scanline_bgr_101010xPcPKcii(i8*, i8*, i32, i32) #12 {
  %5 = sext i32 %2 to i64
  %6 = tail call zeroext i1 @skcms_Transform(i8* %1, i32 17, i32 1, %struct.skcms_ICCProfile* null, i8* %0, i32 22, i32 1, %struct.skcms_ICCProfile* null, i64 %5) #15
  ret void
}

; Function Attrs: inlinehint nofree norecurse nounwind ssp uwtable
define internal void @_ZL34transform_scanline_A8_to_GrayAlphaPcPKcii(i8* nocapture, i8* nocapture readonly, i32, i32) #13 {
  %5 = icmp sgt i32 %2, 0
  br i1 %5, label %6, label %116

6:                                                ; preds = %4
  %7 = add i32 %2, -1
  %8 = zext i32 %7 to i64
  %9 = add nuw nsw i64 %8, 1
  %10 = icmp ult i64 %9, 16
  br i1 %10, label %11, label %37

11:                                               ; preds = %114, %37, %6
  %12 = phi i32 [ 0, %37 ], [ 0, %6 ], [ %50, %114 ]
  %13 = phi i8* [ %0, %37 ], [ %0, %6 ], [ %52, %114 ]
  %14 = phi i8* [ %1, %37 ], [ %1, %6 ], [ %53, %114 ]
  %15 = sub i32 %2, %12
  %16 = xor i32 %12, -1
  %17 = add i32 %16, %2
  %18 = and i32 %15, 3
  %19 = icmp eq i32 %18, 0
  br i1 %19, label %32, label %20

20:                                               ; preds = %11, %20
  %21 = phi i32 [ %29, %20 ], [ %12, %11 ]
  %22 = phi i8* [ %28, %20 ], [ %13, %11 ]
  %23 = phi i8* [ %26, %20 ], [ %14, %11 ]
  %24 = phi i32 [ %30, %20 ], [ %18, %11 ]
  %25 = getelementptr inbounds i8, i8* %22, i64 1
  store i8 0, i8* %22, align 1
  %26 = getelementptr inbounds i8, i8* %23, i64 1
  %27 = load i8, i8* %23, align 1
  %28 = getelementptr inbounds i8, i8* %22, i64 2
  store i8 %27, i8* %25, align 1
  %29 = add nuw nsw i32 %21, 1
  %30 = add i32 %24, -1
  %31 = icmp eq i32 %30, 0
  br i1 %31, label %32, label %20, !llvm.loop !5

32:                                               ; preds = %20, %11
  %33 = phi i32 [ %12, %11 ], [ %29, %20 ]
  %34 = phi i8* [ %13, %11 ], [ %28, %20 ]
  %35 = phi i8* [ %14, %11 ], [ %26, %20 ]
  %36 = icmp ult i32 %17, 3
  br i1 %36, label %116, label %117

37:                                               ; preds = %6
  %38 = add i32 %2, -1
  %39 = zext i32 %38 to i64
  %40 = shl nuw nsw i64 %39, 1
  %41 = add nuw nsw i64 %40, 2
  %42 = getelementptr i8, i8* %0, i64 %41
  %43 = add nuw nsw i64 %39, 1
  %44 = getelementptr i8, i8* %1, i64 %43
  %45 = icmp ugt i8* %44, %0
  %46 = icmp ugt i8* %42, %1
  %47 = and i1 %45, %46
  br i1 %47, label %11, label %48

48:                                               ; preds = %37
  %49 = and i64 %9, 8589934576
  %50 = trunc i64 %49 to i32
  %51 = shl nuw nsw i64 %49, 1
  %52 = getelementptr i8, i8* %0, i64 %51
  %53 = getelementptr i8, i8* %1, i64 %49
  %54 = add nsw i64 %49, -16
  %55 = lshr exact i64 %54, 4
  %56 = add nuw nsw i64 %55, 1
  %57 = and i64 %56, 3
  %58 = icmp ult i64 %54, 48
  br i1 %58, label %98, label %59

59:                                               ; preds = %48
  %60 = sub nsw i64 %56, %57
  br label %61

61:                                               ; preds = %61, %59
  %62 = phi i64 [ 0, %59 ], [ %95, %61 ]
  %63 = phi i64 [ %60, %59 ], [ %96, %61 ]
  %64 = shl i64 %62, 1
  %65 = getelementptr i8, i8* %1, i64 %62
  %66 = bitcast i8* %65 to <16 x i8>*
  %67 = load <16 x i8>, <16 x i8>* %66, align 1, !alias.scope !7
  %68 = getelementptr inbounds i8, i8* %0, i64 %64
  %69 = bitcast i8* %68 to <32 x i8>*
  %70 = shufflevector <16 x i8> zeroinitializer, <16 x i8> %67, <32 x i32> <i32 0, i32 16, i32 1, i32 17, i32 2, i32 18, i32 3, i32 19, i32 4, i32 20, i32 5, i32 21, i32 6, i32 22, i32 7, i32 23, i32 8, i32 24, i32 9, i32 25, i32 10, i32 26, i32 11, i32 27, i32 12, i32 28, i32 13, i32 29, i32 14, i32 30, i32 15, i32 31>
  store <32 x i8> %70, <32 x i8>* %69, align 1
  %71 = or i64 %62, 16
  %72 = shl i64 %71, 1
  %73 = getelementptr i8, i8* %1, i64 %71
  %74 = bitcast i8* %73 to <16 x i8>*
  %75 = load <16 x i8>, <16 x i8>* %74, align 1, !alias.scope !7
  %76 = getelementptr inbounds i8, i8* %0, i64 %72
  %77 = bitcast i8* %76 to <32 x i8>*
  %78 = shufflevector <16 x i8> zeroinitializer, <16 x i8> %75, <32 x i32> <i32 0, i32 16, i32 1, i32 17, i32 2, i32 18, i32 3, i32 19, i32 4, i32 20, i32 5, i32 21, i32 6, i32 22, i32 7, i32 23, i32 8, i32 24, i32 9, i32 25, i32 10, i32 26, i32 11, i32 27, i32 12, i32 28, i32 13, i32 29, i32 14, i32 30, i32 15, i32 31>
  store <32 x i8> %78, <32 x i8>* %77, align 1
  %79 = or i64 %62, 32
  %80 = shl i64 %79, 1
  %81 = getelementptr i8, i8* %1, i64 %79
  %82 = bitcast i8* %81 to <16 x i8>*
  %83 = load <16 x i8>, <16 x i8>* %82, align 1, !alias.scope !7
  %84 = getelementptr inbounds i8, i8* %0, i64 %80
  %85 = bitcast i8* %84 to <32 x i8>*
  %86 = shufflevector <16 x i8> zeroinitializer, <16 x i8> %83, <32 x i32> <i32 0, i32 16, i32 1, i32 17, i32 2, i32 18, i32 3, i32 19, i32 4, i32 20, i32 5, i32 21, i32 6, i32 22, i32 7, i32 23, i32 8, i32 24, i32 9, i32 25, i32 10, i32 26, i32 11, i32 27, i32 12, i32 28, i32 13, i32 29, i32 14, i32 30, i32 15, i32 31>
  store <32 x i8> %86, <32 x i8>* %85, align 1
  %87 = or i64 %62, 48
  %88 = shl i64 %87, 1
  %89 = getelementptr i8, i8* %1, i64 %87
  %90 = bitcast i8* %89 to <16 x i8>*
  %91 = load <16 x i8>, <16 x i8>* %90, align 1, !alias.scope !7
  %92 = getelementptr inbounds i8, i8* %0, i64 %88
  %93 = bitcast i8* %92 to <32 x i8>*
  %94 = shufflevector <16 x i8> zeroinitializer, <16 x i8> %91, <32 x i32> <i32 0, i32 16, i32 1, i32 17, i32 2, i32 18, i32 3, i32 19, i32 4, i32 20, i32 5, i32 21, i32 6, i32 22, i32 7, i32 23, i32 8, i32 24, i32 9, i32 25, i32 10, i32 26, i32 11, i32 27, i32 12, i32 28, i32 13, i32 29, i32 14, i32 30, i32 15, i32 31>
  store <32 x i8> %94, <32 x i8>* %93, align 1
  %95 = add i64 %62, 64
  %96 = add i64 %63, -4
  %97 = icmp eq i64 %96, 0
  br i1 %97, label %98, label %61, !llvm.loop !10

98:                                               ; preds = %61, %48
  %99 = phi i64 [ 0, %48 ], [ %95, %61 ]
  %100 = icmp eq i64 %57, 0
  br i1 %100, label %114, label %101

101:                                              ; preds = %98, %101
  %102 = phi i64 [ %111, %101 ], [ %99, %98 ]
  %103 = phi i64 [ %112, %101 ], [ %57, %98 ]
  %104 = shl i64 %102, 1
  %105 = getelementptr i8, i8* %1, i64 %102
  %106 = bitcast i8* %105 to <16 x i8>*
  %107 = load <16 x i8>, <16 x i8>* %106, align 1, !alias.scope !7
  %108 = getelementptr inbounds i8, i8* %0, i64 %104
  %109 = bitcast i8* %108 to <32 x i8>*
  %110 = shufflevector <16 x i8> zeroinitializer, <16 x i8> %107, <32 x i32> <i32 0, i32 16, i32 1, i32 17, i32 2, i32 18, i32 3, i32 19, i32 4, i32 20, i32 5, i32 21, i32 6, i32 22, i32 7, i32 23, i32 8, i32 24, i32 9, i32 25, i32 10, i32 26, i32 11, i32 27, i32 12, i32 28, i32 13, i32 29, i32 14, i32 30, i32 15, i32 31>
  store <32 x i8> %110, <32 x i8>* %109, align 1
  %111 = add i64 %102, 16
  %112 = add i64 %103, -1
  %113 = icmp eq i64 %112, 0
  br i1 %113, label %114, label %101, !llvm.loop !12

114:                                              ; preds = %101, %98
  %115 = icmp eq i64 %9, %49
  br i1 %115, label %116, label %11

116:                                              ; preds = %32, %117, %114, %4
  ret void

117:                                              ; preds = %32, %117
  %118 = phi i32 [ %137, %117 ], [ %33, %32 ]
  %119 = phi i8* [ %136, %117 ], [ %34, %32 ]
  %120 = phi i8* [ %134, %117 ], [ %35, %32 ]
  %121 = getelementptr inbounds i8, i8* %119, i64 1
  store i8 0, i8* %119, align 1
  %122 = getelementptr inbounds i8, i8* %120, i64 1
  %123 = load i8, i8* %120, align 1
  %124 = getelementptr inbounds i8, i8* %119, i64 2
  store i8 %123, i8* %121, align 1
  %125 = getelementptr inbounds i8, i8* %119, i64 3
  store i8 0, i8* %124, align 1
  %126 = getelementptr inbounds i8, i8* %120, i64 2
  %127 = load i8, i8* %122, align 1
  %128 = getelementptr inbounds i8, i8* %119, i64 4
  store i8 %127, i8* %125, align 1
  %129 = getelementptr inbounds i8, i8* %119, i64 5
  store i8 0, i8* %128, align 1
  %130 = getelementptr inbounds i8, i8* %120, i64 3
  %131 = load i8, i8* %126, align 1
  %132 = getelementptr inbounds i8, i8* %119, i64 6
  store i8 %131, i8* %129, align 1
  %133 = getelementptr inbounds i8, i8* %119, i64 7
  store i8 0, i8* %132, align 1
  %134 = getelementptr inbounds i8, i8* %120, i64 4
  %135 = load i8, i8* %130, align 1
  %136 = getelementptr inbounds i8, i8* %119, i64 8
  store i8 %135, i8* %133, align 1
  %137 = add nuw nsw i32 %118, 4
  %138 = icmp eq i32 %137, %2
  br i1 %138, label %116, label %117, !llvm.loop !13
}

declare zeroext i1 @skcms_Transform(i8*, i32, i32, %struct.skcms_ICCProfile*, i8*, i32, i32, %struct.skcms_ICCProfile*, i64) local_unnamed_addr #2

; Function Attrs: argmemonly nounwind
declare void @llvm.memcpy.p0i8.p0i8.i64(i8* nocapture writeonly, i8* nocapture readonly, i64, i1 immarg) #1

declare i32 @_ZNK11SkColorInfo13bytesPerPixelEv(%class.SkColorInfo*) local_unnamed_addr #2

; Function Attrs: nounwind ssp uwtable
define linkonce_odr hidden void @_ZN9SkEncoderD2Ev(%class.SkEncoder*) unnamed_addr #0 comdat align 2 {
  %2 = getelementptr inbounds %class.SkEncoder, %class.SkEncoder* %0, i64 0, i32 0
  store i32 (...)** bitcast (i8** getelementptr inbounds ({ [5 x i8*] }, { [5 x i8*] }* @_ZTV9SkEncoder, i64 0, inrange i32 0, i64 2) to i32 (...)**), i32 (...)*** %2, align 8
  %3 = getelementptr inbounds %class.SkEncoder, %class.SkEncoder* %0, i64 0, i32 3, i32 0, i32 0, i32 0, i32 0
  %4 = load i8*, i8** %3, align 8
  store i8* null, i8** %3, align 8
  %5 = icmp eq i8* %4, null
  br i1 %5, label %7, label %6

6:                                                ; preds = %1
  tail call void @_Z7sk_freePv(i8* nonnull %4) #15
  br label %7

7:                                                ; preds = %1, %6
  ret void
}

; Function Attrs: nounwind ssp uwtable
define linkonce_odr hidden void @_ZN9SkEncoderD0Ev(%class.SkEncoder*) unnamed_addr #0 comdat align 2 {
  tail call void @llvm.trap() #17
  unreachable
}

declare void @__cxa_pure_virtual() unnamed_addr

declare i8* @_Z15sk_malloc_throwmm(i64, i64) local_unnamed_addr #2

; Function Attrs: cold noreturn nounwind
declare void @llvm.trap() #14

declare void @_Z7sk_freePv(i8*) local_unnamed_addr #2

declare i64 @_ZNK11SkImageInfo13computeOffsetEiim(%struct.SkImageInfo*, i32, i32, i64) local_unnamed_addr #2

declare i32 @_ZNK11SkColorInfo13shiftPerPixelEv(%class.SkColorInfo*) local_unnamed_addr #2

; Function Attrs: noreturn
declare void @_ZNKSt3__120__vector_base_commonILb1EE20__throw_length_errorEv(%"class.std::__1::__vector_base_common"*) local_unnamed_addr #10

; Function Attrs: noreturn nounwind
declare void @abort() local_unnamed_addr #6

; Function Attrs: nounwind
declare void @_ZN8SkStringD1Ev(%class.SkString*) unnamed_addr #11

; Function Attrs: inlinehint nounwind ssp uwtable
define linkonce_odr hidden void @_ZNSt3__16vectorI8SkStringNS_9allocatorIS1_EEE24__emplace_back_slow_pathIJRPKciEEEvDpOT_(%"class.std::__1::vector.11"*, i8** dereferenceable(8), i32* dereferenceable(4)) local_unnamed_addr #12 comdat align 2 {
  %4 = getelementptr inbounds %"class.std::__1::vector.11", %"class.std::__1::vector.11"* %0, i64 0, i32 0, i32 1
  %5 = bitcast %class.SkString** %4 to i64*
  %6 = load i64, i64* %5, align 8
  %7 = bitcast %"class.std::__1::vector.11"* %0 to i64*
  %8 = load i64, i64* %7, align 8
  %9 = sub i64 %6, %8
  %10 = ashr exact i64 %9, 3
  %11 = add nsw i64 %10, 1
  %12 = icmp ugt i64 %11, 2305843009213693951
  br i1 %12, label %13, label %15

13:                                               ; preds = %3
  %14 = bitcast %"class.std::__1::vector.11"* %0 to %"class.std::__1::__vector_base_common"*
  tail call void @_ZNKSt3__120__vector_base_commonILb1EE20__throw_length_errorEv(%"class.std::__1::__vector_base_common"* %14) #17
  unreachable

15:                                               ; preds = %3
  %16 = getelementptr inbounds %"class.std::__1::vector.11", %"class.std::__1::vector.11"* %0, i64 0, i32 0, i32 2, i32 0, i32 0
  %17 = bitcast %class.SkString** %16 to i64*
  %18 = load i64, i64* %17, align 8
  %19 = sub i64 %18, %8
  %20 = ashr exact i64 %19, 3
  %21 = icmp ult i64 %20, 1152921504606846975
  br i1 %21, label %22, label %30

22:                                               ; preds = %15
  %23 = ashr exact i64 %19, 2
  %24 = icmp ult i64 %23, %11
  %25 = select i1 %24, i64 %11, i64 %23
  %26 = icmp eq i64 %25, 0
  br i1 %26, label %35, label %27

27:                                               ; preds = %22
  %28 = icmp ugt i64 %25, 2305843009213693951
  br i1 %28, label %29, label %30

29:                                               ; preds = %27
  tail call void @abort() #17
  unreachable

30:                                               ; preds = %15, %27
  %31 = phi i64 [ %25, %27 ], [ 2305843009213693951, %15 ]
  %32 = shl i64 %31, 3
  %33 = tail call i8* @_Znwm(i64 %32) #16
  %34 = bitcast i8* %33 to %class.SkString*
  br label %35

35:                                               ; preds = %22, %30
  %36 = phi i64 [ %31, %30 ], [ 0, %22 ]
  %37 = phi %class.SkString* [ %34, %30 ], [ null, %22 ]
  %38 = getelementptr inbounds %class.SkString, %class.SkString* %37, i64 %10
  %39 = getelementptr inbounds %class.SkString, %class.SkString* %37, i64 %36
  %40 = ptrtoint %class.SkString* %39 to i64
  %41 = load i8*, i8** %1, align 8
  %42 = load i32, i32* %2, align 4
  %43 = sext i32 %42 to i64
  tail call void @_ZN8SkStringC1EPKcm(%class.SkString* %38, i8* %41, i64 %43) #15
  %44 = getelementptr inbounds %class.SkString, %class.SkString* %38, i64 1
  %45 = ptrtoint %class.SkString* %44 to i64
  %46 = getelementptr inbounds %"class.std::__1::vector.11", %"class.std::__1::vector.11"* %0, i64 0, i32 0, i32 0
  %47 = load %class.SkString*, %class.SkString** %46, align 8
  %48 = load %class.SkString*, %class.SkString** %4, align 8
  %49 = icmp eq %class.SkString* %48, %47
  br i1 %49, label %50, label %52

50:                                               ; preds = %35
  %51 = ptrtoint %class.SkString* %47 to i64
  br label %61

52:                                               ; preds = %35, %52
  %53 = phi %class.SkString* [ %55, %52 ], [ %38, %35 ]
  %54 = phi %class.SkString* [ %56, %52 ], [ %48, %35 ]
  %55 = getelementptr inbounds %class.SkString, %class.SkString* %53, i64 -1
  %56 = getelementptr inbounds %class.SkString, %class.SkString* %54, i64 -1
  tail call void @_ZN8SkStringC1EOS_(%class.SkString* %55, %class.SkString* dereferenceable(8) %56) #15
  %57 = icmp eq %class.SkString* %56, %47
  br i1 %57, label %58, label %52

58:                                               ; preds = %52
  %59 = load i64, i64* %7, align 8
  %60 = load %class.SkString*, %class.SkString** %4, align 8
  br label %61

61:                                               ; preds = %50, %58
  %62 = phi %class.SkString* [ %47, %50 ], [ %60, %58 ]
  %63 = phi %class.SkString* [ %38, %50 ], [ %55, %58 ]
  %64 = phi i64 [ %51, %50 ], [ %59, %58 ]
  %65 = ptrtoint %class.SkString* %63 to i64
  store i64 %65, i64* %7, align 8
  store i64 %45, i64* %5, align 8
  store i64 %40, i64* %17, align 8
  %66 = inttoptr i64 %64 to %class.SkString*
  %67 = icmp eq %class.SkString* %62, %66
  br i1 %67, label %72, label %68

68:                                               ; preds = %61, %68
  %69 = phi %class.SkString* [ %70, %68 ], [ %62, %61 ]
  %70 = getelementptr inbounds %class.SkString, %class.SkString* %69, i64 -1
  tail call void @_ZN8SkStringD1Ev(%class.SkString* %70) #15
  %71 = icmp eq %class.SkString* %70, %66
  br i1 %71, label %72, label %68

72:                                               ; preds = %68, %61
  %73 = icmp eq i64 %64, 0
  br i1 %73, label %76, label %74

74:                                               ; preds = %72
  %75 = inttoptr i64 %64 to i8*
  tail call void @_ZdlPv(i8* %75) #16
  br label %76

76:                                               ; preds = %72, %74
  ret void
}

declare void @_ZN8SkStringC1EPKcm(%class.SkString*, i8*, i64) unnamed_addr #2

declare void @_ZN8SkStringC1EOS_(%class.SkString*, %class.SkString* dereferenceable(8)) unnamed_addr #2

attributes #0 = { nounwind ssp uwtable "correctly-rounded-divide-sqrt-fp-math"="false" "disable-tail-calls"="false" "less-precise-fpmad"="false" "min-legal-vector-width"="0" "no-frame-pointer-elim"="false" "no-frame-pointer-elim-non-leaf" "no-infs-fp-math"="false" "no-jump-tables"="false" "no-nans-fp-math"="false" "no-signed-zeros-fp-math"="false" "no-trapping-math"="false" "null-pointer-is-valid"="true" "stack-protector-buffer-size"="4" "target-cpu"="x86-64" "target-features"="+cx8,+fxsr,+mmx,+sse,+sse2,+sse3,+x87" "unsafe-fp-math"="false" "use-soft-float"="false" }
attributes #1 = { argmemonly nounwind }
attributes #2 = { "correctly-rounded-divide-sqrt-fp-math"="false" "disable-tail-calls"="false" "less-precise-fpmad"="false" "no-frame-pointer-elim"="false" "no-frame-pointer-elim-non-leaf" "no-infs-fp-math"="false" "no-nans-fp-math"="false" "no-signed-zeros-fp-math"="false" "no-trapping-math"="false" "null-pointer-is-valid"="true" "stack-protector-buffer-size"="4" "target-cpu"="x86-64" "target-features"="+cx8,+fxsr,+mmx,+sse,+sse2,+sse3,+x87" "unsafe-fp-math"="false" "use-soft-float"="false" }
attributes #3 = { noreturn nounwind ssp uwtable "correctly-rounded-divide-sqrt-fp-math"="false" "disable-tail-calls"="false" "less-precise-fpmad"="false" "min-legal-vector-width"="0" "no-frame-pointer-elim"="false" "no-frame-pointer-elim-non-leaf" "no-infs-fp-math"="false" "no-jump-tables"="false" "no-nans-fp-math"="false" "no-signed-zeros-fp-math"="false" "no-trapping-math"="false" "null-pointer-is-valid"="true" "stack-protector-buffer-size"="4" "target-cpu"="x86-64" "target-features"="+cx8,+fxsr,+mmx,+sse,+sse2,+sse3,+x87" "unsafe-fp-math"="false" "use-soft-float"="false" }
attributes #4 = { nobuiltin nofree "correctly-rounded-divide-sqrt-fp-math"="false" "disable-tail-calls"="false" "less-precise-fpmad"="false" "no-frame-pointer-elim"="false" "no-frame-pointer-elim-non-leaf" "no-infs-fp-math"="false" "no-nans-fp-math"="false" "no-signed-zeros-fp-math"="false" "no-trapping-math"="false" "null-pointer-is-valid"="true" "stack-protector-buffer-size"="4" "target-cpu"="x86-64" "target-features"="+cx8,+fxsr,+mmx,+sse,+sse2,+sse3,+x87" "unsafe-fp-math"="false" "use-soft-float"="false" }
attributes #5 = { nounwind returns_twice "correctly-rounded-divide-sqrt-fp-math"="false" "disable-tail-calls"="false" "less-precise-fpmad"="false" "no-frame-pointer-elim"="false" "no-frame-pointer-elim-non-leaf" "no-infs-fp-math"="false" "no-nans-fp-math"="false" "no-signed-zeros-fp-math"="false" "no-trapping-math"="false" "null-pointer-is-valid"="true" "stack-protector-buffer-size"="4" "target-cpu"="x86-64" "target-features"="+cx8,+fxsr,+mmx,+sse,+sse2,+sse3,+x87" "unsafe-fp-math"="false" "use-soft-float"="false" }
attributes #6 = { noreturn nounwind "correctly-rounded-divide-sqrt-fp-math"="false" "disable-tail-calls"="false" "less-precise-fpmad"="false" "no-frame-pointer-elim"="false" "no-frame-pointer-elim-non-leaf" "no-infs-fp-math"="false" "no-nans-fp-math"="false" "no-signed-zeros-fp-math"="false" "no-trapping-math"="false" "null-pointer-is-valid"="true" "stack-protector-buffer-size"="4" "target-cpu"="x86-64" "target-features"="+cx8,+fxsr,+mmx,+sse,+sse2,+sse3,+x87" "unsafe-fp-math"="false" "use-soft-float"="false" }
attributes #7 = { argmemonly nofree nounwind readonly "correctly-rounded-divide-sqrt-fp-math"="false" "disable-tail-calls"="false" "less-precise-fpmad"="false" "no-frame-pointer-elim"="false" "no-frame-pointer-elim-non-leaf" "no-infs-fp-math"="false" "no-nans-fp-math"="false" "no-signed-zeros-fp-math"="false" "no-trapping-math"="false" "null-pointer-is-valid"="true" "stack-protector-buffer-size"="4" "target-cpu"="x86-64" "target-features"="+cx8,+fxsr,+mmx,+sse,+sse2,+sse3,+x87" "unsafe-fp-math"="false" "use-soft-float"="false" }
attributes #8 = { nofree norecurse nounwind ssp uwtable "correctly-rounded-divide-sqrt-fp-math"="false" "disable-tail-calls"="false" "less-precise-fpmad"="false" "min-legal-vector-width"="0" "no-frame-pointer-elim"="false" "no-frame-pointer-elim-non-leaf" "no-infs-fp-math"="false" "no-jump-tables"="false" "no-nans-fp-math"="false" "no-signed-zeros-fp-math"="false" "no-trapping-math"="false" "null-pointer-is-valid"="true" "stack-protector-buffer-size"="4" "target-cpu"="x86-64" "target-features"="+cx8,+fxsr,+mmx,+sse,+sse2,+sse3,+x87" "unsafe-fp-math"="false" "use-soft-float"="false" }
attributes #9 = { nobuiltin nounwind "correctly-rounded-divide-sqrt-fp-math"="false" "disable-tail-calls"="false" "less-precise-fpmad"="false" "no-frame-pointer-elim"="false" "no-frame-pointer-elim-non-leaf" "no-infs-fp-math"="false" "no-nans-fp-math"="false" "no-signed-zeros-fp-math"="false" "no-trapping-math"="false" "null-pointer-is-valid"="true" "stack-protector-buffer-size"="4" "target-cpu"="x86-64" "target-features"="+cx8,+fxsr,+mmx,+sse,+sse2,+sse3,+x87" "unsafe-fp-math"="false" "use-soft-float"="false" }
attributes #10 = { noreturn "correctly-rounded-divide-sqrt-fp-math"="false" "disable-tail-calls"="false" "less-precise-fpmad"="false" "no-frame-pointer-elim"="false" "no-frame-pointer-elim-non-leaf" "no-infs-fp-math"="false" "no-nans-fp-math"="false" "no-signed-zeros-fp-math"="false" "no-trapping-math"="false" "null-pointer-is-valid"="true" "stack-protector-buffer-size"="4" "target-cpu"="x86-64" "target-features"="+cx8,+fxsr,+mmx,+sse,+sse2,+sse3,+x87" "unsafe-fp-math"="false" "use-soft-float"="false" }
attributes #11 = { nounwind "correctly-rounded-divide-sqrt-fp-math"="false" "disable-tail-calls"="false" "less-precise-fpmad"="false" "no-frame-pointer-elim"="false" "no-frame-pointer-elim-non-leaf" "no-infs-fp-math"="false" "no-nans-fp-math"="false" "no-signed-zeros-fp-math"="false" "no-trapping-math"="false" "null-pointer-is-valid"="true" "stack-protector-buffer-size"="4" "target-cpu"="x86-64" "target-features"="+cx8,+fxsr,+mmx,+sse,+sse2,+sse3,+x87" "unsafe-fp-math"="false" "use-soft-float"="false" }
attributes #12 = { inlinehint nounwind ssp uwtable "correctly-rounded-divide-sqrt-fp-math"="false" "disable-tail-calls"="false" "less-precise-fpmad"="false" "min-legal-vector-width"="0" "no-frame-pointer-elim"="false" "no-frame-pointer-elim-non-leaf" "no-infs-fp-math"="false" "no-jump-tables"="false" "no-nans-fp-math"="false" "no-signed-zeros-fp-math"="false" "no-trapping-math"="false" "null-pointer-is-valid"="true" "stack-protector-buffer-size"="4" "target-cpu"="x86-64" "target-features"="+cx8,+fxsr,+mmx,+sse,+sse2,+sse3,+x87" "unsafe-fp-math"="false" "use-soft-float"="false" }
attributes #13 = { inlinehint nofree norecurse nounwind ssp uwtable "correctly-rounded-divide-sqrt-fp-math"="false" "disable-tail-calls"="false" "less-precise-fpmad"="false" "min-legal-vector-width"="0" "no-frame-pointer-elim"="false" "no-frame-pointer-elim-non-leaf" "no-infs-fp-math"="false" "no-jump-tables"="false" "no-nans-fp-math"="false" "no-signed-zeros-fp-math"="false" "no-trapping-math"="false" "null-pointer-is-valid"="true" "stack-protector-buffer-size"="4" "target-cpu"="x86-64" "target-features"="+cx8,+fxsr,+mmx,+sse,+sse2,+sse3,+x87" "unsafe-fp-math"="false" "use-soft-float"="false" }
attributes #14 = { cold noreturn nounwind }
attributes #15 = { nounwind }
attributes #16 = { builtin nounwind }
attributes #17 = { noreturn nounwind }
attributes #18 = { nounwind returns_twice }
attributes #19 = { nounwind readonly }

!llvm.module.flags = !{!0, !1}

!0 = !{i32 1, !"wchar_size", i32 4}
!1 = !{i32 7, !"PIC Level", i32 2}
!2 = !{!3}
!3 = distinct !{!3, !4, !"_ZL20icc_from_color_spaceRK11SkImageInfo: argument 0"}
!4 = distinct !{!4, !"_ZL20icc_from_color_spaceRK11SkImageInfo"}
!5 = distinct !{!5, !6}
!6 = !{!"llvm.loop.unroll.disable"}
!7 = !{!8}
!8 = distinct !{!8, !9}
!9 = distinct !{!9, !"LVerDomain"}
!10 = distinct !{!10, !11}
!11 = !{!"llvm.loop.isvectorized", i32 1}
!12 = distinct !{!12, !6}
!13 = distinct !{!13, !11}
