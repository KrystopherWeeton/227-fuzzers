; ModuleID = '../../v8/src/codegen/safepoint-table.cc'
source_filename = "../../v8/src/codegen/safepoint-table.cc"
target datalayout = "e-m:e-i64:64-f80:128-n8:16:32:64-S128"
target triple = "x86_64-unknown-linux-gnu"

module asm ".symver exp, exp@GLIBC_2.2.5"
module asm ".symver exp2, exp2@GLIBC_2.2.5"
module asm ".symver exp2f, exp2f@GLIBC_2.2.5"
module asm ".symver expf, expf@GLIBC_2.2.5"
module asm ".symver lgamma, lgamma@GLIBC_2.2.5"
module asm ".symver lgammaf, lgammaf@GLIBC_2.2.5"
module asm ".symver lgammal, lgammal@GLIBC_2.2.5"
module asm ".symver log, log@GLIBC_2.2.5"
module asm ".symver log2, log2@GLIBC_2.2.5"
module asm ".symver log2f, log2f@GLIBC_2.2.5"
module asm ".symver logf, logf@GLIBC_2.2.5"
module asm ".symver pow, pow@GLIBC_2.2.5"
module asm ".symver powf, powf@GLIBC_2.2.5"

%"class.std::__1::locale::id" = type <{ %"struct.std::__1::once_flag", i32, [4 x i8] }>
%"struct.std::__1::once_flag" = type { i64 }
%"class.v8::internal::SafepointTable" = type { i64, i8, i64, i32, i32 }
%"class.v8::internal::Isolate" = type { %"class.v8::internal::IsolateData", %"class.std::__1::unique_ptr", %"class.v8::internal::Heap", %"class.v8::internal::ReadOnlyHeap"*, %"class.std::__1::shared_ptr.645", %"class.std::__1::unique_ptr.666", i32, %"class.v8::internal::Isolate::EntryStackItem"*, i32, %"class.v8::internal::StringStream"*, [13 x i64], %"class.v8::internal::Bootstrapper"*, %"class.v8::internal::RuntimeProfiler"*, %"class.v8::internal::CompilationCache"*, %"class.std::__1::shared_ptr.676", %"class.v8::base::RecursiveMutex", %"class.v8::base::SharedMutex", %"class.v8::base::SharedMutex", %"class.v8::base::SharedMutex", %"class.v8::base::SharedMutex", %"class.v8::base::SharedMutex", %"class.v8::internal::Logger"*, %"class.v8::internal::StubCache"*, %"class.v8::internal::StubCache"*, %"class.v8::internal::Deoptimizer"*, i8, %"class.v8::internal::MaterializedObjectStore"*, i8, i32, i32, %"class.v8::internal::DescriptorLookupCache"*, %"struct.v8::internal::HandleScopeData", %"class.v8::internal::HandleScopeImplementer"*, %"class.v8::internal::UnicodeCache"*, %"class.v8::internal::AccountingAllocator"*, %"class.v8::internal::InnerPointerToCodeCache"*, %"class.v8::internal::GlobalHandles"*, %"class.v8::internal::EternalHandles"*, %"class.v8::internal::ThreadManager"*, %"class.v8::bigint::Processor"*, %"class.v8::internal::RuntimeState", %"class.v8::internal::Builtins", %"class.v8::internal::SetupIsolateDelegate"*, %"class.v8::internal::RegExpStack"*, %"class.std::__1::vector.865", %"class.v8::internal::DateCache"*, %"class.v8::base::RandomNumberGenerator"*, %"class.v8::base::RandomNumberGenerator"*, %"struct.std::__1::atomic.878", {}*, i8*, void (i32, %"class.v8::Promise"*, %"class.v8::Value"*)*, {}*, {}*, %"struct.std::__1::atomic.888", {}*, %"class.v8::base::Mutex", double, %"class.std::__1::basic_string", %"class.std::__1::unordered_map.899", %"struct.std::__1::atomic.152", i8, i8, i8, i8, i8, i8, double, %"class.v8::internal::Debug"*, %"class.v8::internal::HeapProfiler"*, %"class.std::__1::unique_ptr.974", %"class.v8::internal::AstStringConstants"*, %"class.v8::internal::interpreter::Interpreter"*, %"class.v8::internal::compiler::PerIsolateCompilerCache"*, %"class.v8::internal::Zone"*, %"class.v8::internal::CompilerDispatcher"*, %"class.std::__1::queue", void (i8*, i8*)*, void (i8*, i1)*, void (i8*, i32)*, i1 (%"class.v8::Context"*, %"class.v8::String"*)*, { i8, %"class.v8::String"* } (%"class.v8::Context"*, %"class.v8::Value"*)*, { i8, %"class.v8::String"* } (%"class.v8::Context"*, %"class.v8::Value"*, i1)*, i1 (%"class.v8::Context"*, %"class.v8::String"*)*, i1 (%"class.v8::FunctionCallbackInfo"*)*, i1 (%"class.v8::FunctionCallbackInfo"*)*, i1 (%"class.v8::Context"*)*, void (%"class.v8::FunctionCallbackInfo"*)*, %"class.v8::String"* (%"class.v8::Isolate"*, i8*)*, i1 (%"class.v8::Context"*)*, i1 (%"class.v8::Context"*)*, %"class.v8::internal::Relocatable"*, %"class.std::__1::vector.1020"*, %"class.v8::internal::Object", i64*, %"class.v8::internal::AddressToIndexHashMap"*, %"class.v8::internal::HeapObjectToIndexHashMap"*, %"class.v8::internal::MicrotaskQueue"*, %"class.v8::internal::CompilationStatistics"*, %"class.v8::internal::CodeTracer"*, i32, void (%"class.v8::PromiseRejectMessage"*)*, %"class.v8::StartupData"*, i32, i32, i32, i64, i8, i8, i32, i8, i32, %"class.v8_inspector::V8Inspector"*, i8, i8, i8, i32, i32, %"class.v8::internal::compiler::NodeObserver"*, i8, [128 x i32], [256 x i32], [251 x i32], [251 x i32], %"class.v8::internal::OptimizingCompileDispatcher"*, %"class.std::__1::unique_ptr.1027", i32, i8, i8, i32, i32, %"class.std::__1::vector.1033", %"class.std::__1::vector.1033", void (%"class.v8::Isolate"*, i32)*, %"class.std::__1::shared_ptr.1040", i64, %"class.std::__1::unordered_map.1041", i64, %"struct.v8::metrics::LongTaskStats", %"class.std::__1::vector.541", %"class.v8::internal::BuiltinsConstantsTableBuilder"*, i8*, i32, i8*, i32, %"class.v8::ArrayBuffer::Allocator"*, %"class.std::__1::shared_ptr.160", %"class.v8::internal::FutexWaitListNode", %"class.v8::internal::CancelableTaskManager"*, %"class.v8::debug::ConsoleDelegate"*, %"class.v8::debug::AsyncEventDelegate"*, i32, i32, %"class.std::__1::unique_ptr.1097", i1 (%"class.v8::Isolate"*)*, i8, %"class.v8::base::Mutex", %"struct.v8::internal::ManagedPtrDestructor"*, i64, i64, %"class.v8::internal::wasm::WasmEngine"*, %"class.std::__1::unique_ptr.1135", %"class.v8::internal::EmbeddedFileWriterInterface"*, %"class.v8::Context::BackupIncumbentScope"*, {}*, %"class.v8::base::Mutex", %"class.v8::internal::Isolate::ThreadDataTable", i8, %"class.v8::internal::Isolate"*, %"class.v8::base::Mutex", %"class.v8::internal::Isolate"*, %"class.v8::internal::Isolate"*, %"class.v8::internal::Isolate"*, %"struct.std::__1::atomic.1169", %"class.std::__1::vector.1173", %"class.std::__1::vector.1173", void (i32, %"class.std::__1::basic_string"*)* }
%"class.v8::internal::IsolateData" = type { [4 x i8*], i64, i64, i64, i64, i64, %"class.v8::internal::StackGuard", %"class.v8::internal::RootsTable", %"class.v8::internal::ExternalReferenceTable", %"class.v8::internal::ThreadLocalTop", [1711 x i64], [1711 x i64], i8, [15 x i8] }
%"class.v8::internal::StackGuard" = type { %"class.v8::internal::Isolate"*, %"class.v8::internal::StackGuard::ThreadLocal" }
%"class.v8::internal::StackGuard::ThreadLocal" = type { i64, i64, i64, i64, %"class.v8::internal::InterruptsScope"*, i64 }
%"class.v8::internal::InterruptsScope" = type { i32 (...)**, %"class.v8::internal::StackGuard"*, i64, i64, i32, %"class.v8::internal::InterruptsScope"* }
%"class.v8::internal::RootsTable" = type { [669 x i64] }
%"class.v8::internal::ExternalReferenceTable" = type { [1042 x i64], i32, i32 }
%"class.v8::internal::ThreadLocalTop" = type { %"class.v8::TryCatch"*, %"class.v8::internal::Isolate"*, %"class.v8::internal::Context", %"struct.std::__1::atomic", %"class.v8::internal::Object", %"class.v8::internal::Context", i64, i64, i64, i64, i64, %"class.v8::internal::Object", i8, i8, %"class.v8::internal::Object", i64, i64, i64, %"class.v8::internal::PromiseOnStack"*, %"class.v8::internal::Simulator"*, i64, %"class.v8::internal::ExternalCallbackScope"*, i32, void (%"class.v8::Object"*, i32, %"class.v8::Value"*)*, i64 }
%"class.v8::TryCatch" = type <{ %"class.v8::internal::Isolate"*, %"class.v8::TryCatch"*, i8*, i8*, i8*, i8, [7 x i8] }>
%"struct.std::__1::atomic" = type { %"struct.std::__1::__atomic_base" }
%"struct.std::__1::__atomic_base" = type { %"struct.std::__1::__cxx_atomic_impl" }
%"struct.std::__1::__cxx_atomic_impl" = type { %"struct.std::__1::__cxx_atomic_base_impl" }
%"struct.std::__1::__cxx_atomic_base_impl" = type { %"class.v8::internal::ThreadId" }
%"class.v8::internal::ThreadId" = type { i32 }
%"class.v8::internal::Context" = type { %"class.v8::internal::TorqueGeneratedContext" }
%"class.v8::internal::TorqueGeneratedContext" = type { %"class.v8::internal::HeapObject" }
%"class.v8::internal::HeapObject" = type { %"class.v8::internal::Object" }
%"class.v8::internal::PromiseOnStack" = type { %"class.v8::internal::Handle", %"class.v8::internal::PromiseOnStack"* }
%"class.v8::internal::Handle" = type { %"class.v8::internal::HandleBase" }
%"class.v8::internal::HandleBase" = type { i64* }
%"class.v8::internal::Simulator" = type opaque
%"class.v8::internal::ExternalCallbackScope" = type opaque
%"class.v8::Object" = type { i8 }
%"class.v8::Value" = type { i8 }
%"class.std::__1::unique_ptr" = type { %"class.std::__1::__compressed_pair" }
%"class.std::__1::__compressed_pair" = type { %"struct.std::__1::__compressed_pair_elem" }
%"struct.std::__1::__compressed_pair_elem" = type { %"class.v8::internal::IsolateAllocator"* }
%"class.v8::internal::IsolateAllocator" = type { i8*, %"class.v8::PageAllocator"* }
%"class.v8::PageAllocator" = type { i32 (...)** }
%"class.v8::internal::Heap" = type { %"class.std::__1::unordered_map", %"struct.std::__1::atomic.19", %"class.v8::internal::Heap::ExternalMemoryAccounting", %"class.v8::internal::Isolate"*, i64, i64, i64, i64, %"struct.std::__1::atomic.19", i64, i64, i64, i64, i64, i8, i64, i64, %"struct.std::__1::atomic.19", i64, i64, %"struct.std::__1::atomic.19", %"struct.std::__1::atomic.29", %"class.std::__1::vector", i32, %"class.v8::internal::NewSpace"*, %"class.v8::internal::OldSpace"*, %"class.v8::internal::CodeSpace"*, %"class.v8::internal::MapSpace"*, %"class.v8::internal::OldLargeObjectSpace"*, %"class.v8::internal::CodeLargeObjectSpace"*, %"class.v8::internal::NewLargeObjectSpace"*, %"class.v8::internal::ReadOnlySpace"*, %"class.v8::internal::OldSpace"*, %"class.v8::internal::MapSpace"*, %"class.std::__1::unique_ptr.146", %"class.std::__1::unique_ptr.146", [8 x %"class.v8::internal::Space"*], %"class.v8::internal::LocalHeap"*, %"class.v8::internal::ArrayBufferExtension"*, %"class.v8::internal::ArrayBufferExtension"*, i8, i64, %"struct.std::__1::atomic.161", i32, i32, i32, i32, %"class.v8::internal::AllocationObserver"*, %"class.v8::internal::StressScavengeObserver"*, double, i32, i32, i32, i64, i32, [128 x i64], %"struct.std::__1::atomic.19", i64, i8, %"struct.std::__1::atomic.19", %"class.v8::internal::Object", %"class.v8::internal::Object", %"class.v8::internal::Object", %"class.std::__1::vector.165", %"class.std::__1::vector.165", i64 ()*, [113 x i32], i64, double, double, i64, i64, double, i32, i32, i32, i32, double, double, double, %"class.std::__1::unique_ptr.172", %"class.std::__1::unique_ptr.178", %"class.v8::internal::MinorMarkCompactCollector"*, %"class.std::__1::unique_ptr.308", %"class.std::__1::unique_ptr.314", %"class.std::__1::unique_ptr.320", %"class.std::__1::unique_ptr.359", %"class.std::__1::unique_ptr.398", %"class.std::__1::unique_ptr.428", %"class.std::__1::unique_ptr.434", %"class.std::__1::unique_ptr.444", %"class.std::__1::unique_ptr.450", %"class.std::__1::unique_ptr.450", %"class.std::__1::unique_ptr.456", %"class.std::__1::unique_ptr.462", %"class.std::__1::unique_ptr.462", %"class.std::__1::unique_ptr.468", %"class.std::__1::unique_ptr.474", %"class.std::__1::shared_ptr.480", %"class.v8::CppHeap"*, %"class.v8::EmbedderRootsHandler"*, %"class.v8::internal::StrongRootsEntry"*, %"class.v8::base::Mutex", i8, i64, i64, i64, i64, %"class.std::__1::unordered_map.503", %"class.std::__1::unique_ptr.529", [512 x i8], i8, i8, i64, i8, i32, i32, %"class.std::__1::unique_ptr.535", i8, %"class.v8::internal::Heap::ExternalStringTable", %"class.v8::base::Mutex", %"class.std::__1::unique_ptr.548", i32, i8, i8, i8, i8, i8, %"class.v8::internal::HeapObject", %"class.v8::base::SharedMutex", %"class.v8::base::Mutex", %"class.std::__1::unordered_set.330", i8, [7 x i8], %"class.std::__1::unordered_map.554", %"class.std::__1::unordered_map.580", %"class.std::__1::unordered_map.554", %"class.std::__1::unordered_map.604", %"class.std::__1::vector.632", i8, %"class.std::__1::unique_ptr.639", i32, i32 }
%"class.std::__1::unordered_map" = type { %"class.std::__1::__hash_table" }
%"class.std::__1::__hash_table" = type <{ %"class.std::__1::unique_ptr.2", %"class.std::__1::__compressed_pair.9", %"class.std::__1::__compressed_pair.14", %"class.std::__1::__compressed_pair.16", [4 x i8] }>
%"class.std::__1::unique_ptr.2" = type { %"class.std::__1::__compressed_pair.3" }
%"class.std::__1::__compressed_pair.3" = type { %"struct.std::__1::__compressed_pair_elem.4", %"struct.std::__1::__compressed_pair_elem.5" }
%"struct.std::__1::__compressed_pair_elem.4" = type { %"struct.std::__1::__hash_node_base"** }
%"struct.std::__1::__hash_node_base" = type { %"struct.std::__1::__hash_node_base"* }
%"struct.std::__1::__compressed_pair_elem.5" = type { %"class.std::__1::__bucket_list_deallocator" }
%"class.std::__1::__bucket_list_deallocator" = type { %"class.std::__1::__compressed_pair.6" }
%"class.std::__1::__compressed_pair.6" = type { %"struct.std::__1::__compressed_pair_elem.7" }
%"struct.std::__1::__compressed_pair_elem.7" = type { i64 }
%"class.std::__1::__compressed_pair.9" = type { %"struct.std::__1::__compressed_pair_elem.10" }
%"struct.std::__1::__compressed_pair_elem.10" = type { %"struct.std::__1::__hash_node_base" }
%"class.std::__1::__compressed_pair.14" = type { %"struct.std::__1::__compressed_pair_elem.7" }
%"class.std::__1::__compressed_pair.16" = type { %"struct.std::__1::__compressed_pair_elem.17" }
%"struct.std::__1::__compressed_pair_elem.17" = type { float }
%"class.v8::internal::Heap::ExternalMemoryAccounting" = type { %"struct.std::__1::atomic.24", %"struct.std::__1::atomic.24", %"struct.std::__1::atomic.24" }
%"struct.std::__1::atomic.24" = type { %"struct.std::__1::__atomic_base.25" }
%"struct.std::__1::__atomic_base.25" = type { %"struct.std::__1::__atomic_base.26" }
%"struct.std::__1::__atomic_base.26" = type { %"struct.std::__1::__cxx_atomic_impl.27" }
%"struct.std::__1::__cxx_atomic_impl.27" = type { %"struct.std::__1::__cxx_atomic_base_impl.28" }
%"struct.std::__1::__cxx_atomic_base_impl.28" = type { i64 }
%"struct.std::__1::atomic.29" = type { %"struct.std::__1::__atomic_base.30" }
%"struct.std::__1::__atomic_base.30" = type { %"struct.std::__1::__cxx_atomic_impl.31" }
%"struct.std::__1::__cxx_atomic_impl.31" = type { %"struct.std::__1::__cxx_atomic_base_impl.32" }
%"struct.std::__1::__cxx_atomic_base_impl.32" = type { i32 }
%"class.std::__1::vector" = type { %"class.std::__1::__vector_base" }
%"class.std::__1::__vector_base" = type { %"struct.std::__1::pair"*, %"struct.std::__1::pair"*, %"class.std::__1::__compressed_pair.33" }
%"struct.std::__1::pair" = type opaque
%"class.std::__1::__compressed_pair.33" = type { %"struct.std::__1::__compressed_pair_elem.34" }
%"struct.std::__1::__compressed_pair_elem.34" = type { %"struct.std::__1::pair"* }
%"class.v8::internal::NewSpace" = type { %"class.v8::internal::SpaceWithLinearArea", %"class.v8::base::Mutex", %"struct.std::__1::atomic.19", %"struct.std::__1::atomic.19", %"class.v8::internal::SemiSpace", %"class.v8::internal::SemiSpace", %"class.v8::internal::VirtualMemory", %"class.std::__1::vector.103" }
%"class.v8::internal::SpaceWithLinearArea" = type { %"class.v8::internal::Space", %"class.v8::internal::LinearAllocationArea", [3 x i64] }
%"class.v8::internal::Space" = type { %"class.v8::internal::BaseSpace", %"class.v8::internal::AllocationCounter", %"class.v8::internal::heap::List", %"struct.std::__1::atomic.19"*, %"class.std::__1::unique_ptr.97" }
%"class.v8::internal::BaseSpace" = type { i32 (...)**, %"class.v8::internal::Heap"*, i32, %"struct.std::__1::atomic.19", i64 }
%"class.v8::internal::AllocationCounter" = type <{ %"class.std::__1::vector.38", %"class.std::__1::vector.38", %"class.std::__1::unordered_set", i8, [7 x i8], i64, i64, i8, [7 x i8] }>
%"class.std::__1::vector.38" = type { %"class.std::__1::__vector_base.39" }
%"class.std::__1::__vector_base.39" = type { %"struct.v8::internal::AllocationCounter::AllocationObserverCounter"*, %"struct.v8::internal::AllocationCounter::AllocationObserverCounter"*, %"class.std::__1::__compressed_pair.40" }
%"struct.v8::internal::AllocationCounter::AllocationObserverCounter" = type { %"class.v8::internal::AllocationObserver"*, i64, i64 }
%"class.std::__1::__compressed_pair.40" = type { %"struct.std::__1::__compressed_pair_elem.41" }
%"struct.std::__1::__compressed_pair_elem.41" = type { %"struct.v8::internal::AllocationCounter::AllocationObserverCounter"* }
%"class.std::__1::unordered_set" = type { %"class.std::__1::__hash_table.45" }
%"class.std::__1::__hash_table.45" = type <{ %"class.std::__1::unique_ptr.46", %"class.std::__1::__compressed_pair.56", %"class.std::__1::__compressed_pair.61", %"class.std::__1::__compressed_pair.63", [4 x i8] }>
%"class.std::__1::unique_ptr.46" = type { %"class.std::__1::__compressed_pair.47" }
%"class.std::__1::__compressed_pair.47" = type { %"struct.std::__1::__compressed_pair_elem.48", %"struct.std::__1::__compressed_pair_elem.50" }
%"struct.std::__1::__compressed_pair_elem.48" = type { %"struct.std::__1::__hash_node_base.49"** }
%"struct.std::__1::__hash_node_base.49" = type { %"struct.std::__1::__hash_node_base.49"* }
%"struct.std::__1::__compressed_pair_elem.50" = type { %"class.std::__1::__bucket_list_deallocator.51" }
%"class.std::__1::__bucket_list_deallocator.51" = type { %"class.std::__1::__compressed_pair.52" }
%"class.std::__1::__compressed_pair.52" = type { %"struct.std::__1::__compressed_pair_elem.7" }
%"class.std::__1::__compressed_pair.56" = type { %"struct.std::__1::__compressed_pair_elem.57" }
%"struct.std::__1::__compressed_pair_elem.57" = type { %"struct.std::__1::__hash_node_base.49" }
%"class.std::__1::__compressed_pair.61" = type { %"struct.std::__1::__compressed_pair_elem.7" }
%"class.std::__1::__compressed_pair.63" = type { %"struct.std::__1::__compressed_pair_elem.17" }
%"class.v8::internal::heap::List" = type { %"class.v8::internal::MemoryChunk"*, %"class.v8::internal::MemoryChunk"* }
%"class.v8::internal::MemoryChunk" = type { %"class.v8::internal::BasicMemoryChunk", [2 x %"class.v8::internal::SlotSet"*], %"struct.std::__1::atomic.19", %"struct.std::__1::atomic.24", %"class.v8::internal::SlotSet"*, [2 x %"class.v8::internal::TypedSlotSet"*], [2 x %"class.std::__1::set"*], %"class.v8::base::Mutex"*, %"struct.std::__1::atomic.86", %"class.v8::base::Mutex"*, i64, [2 x %"struct.std::__1::atomic.19"], %"class.v8::internal::heap::ListNode", %"class.v8::internal::FreeListCategory"**, %"struct.std::__1::atomic.24", %"class.v8::internal::Bitmap"*, %"class.v8::internal::CodeObjectRegistry"*, %"class.v8::internal::PossiblyEmptyBuckets" }
%"class.v8::internal::BasicMemoryChunk" = type { i64, i64, %"class.v8::internal::Heap"*, i64, i64, i64, i64, %"struct.std::__1::atomic.24", %"struct.std::__1::atomic.68", %"class.v8::internal::VirtualMemory" }
%"struct.std::__1::atomic.68" = type { %"struct.std::__1::__atomic_base.69" }
%"struct.std::__1::__atomic_base.69" = type { %"struct.std::__1::__cxx_atomic_impl.70" }
%"struct.std::__1::__cxx_atomic_impl.70" = type { %"struct.std::__1::__cxx_atomic_base_impl.71" }
%"struct.std::__1::__cxx_atomic_base_impl.71" = type { %"class.v8::internal::BaseSpace"* }
%"class.v8::internal::SlotSet" = type { i8 }
%"class.v8::internal::TypedSlotSet" = type { %"class.v8::internal::TypedSlots", i64 }
%"class.v8::internal::TypedSlots" = type { i32 (...)**, %"struct.v8::internal::TypedSlots::Chunk"*, %"struct.v8::internal::TypedSlots::Chunk"* }
%"struct.v8::internal::TypedSlots::Chunk" = type { %"struct.v8::internal::TypedSlots::Chunk"*, %"class.std::__1::vector.72" }
%"class.std::__1::vector.72" = type { %"class.std::__1::__vector_base.73" }
%"class.std::__1::__vector_base.73" = type { %"struct.v8::internal::TypedSlots::TypedSlot"*, %"struct.v8::internal::TypedSlots::TypedSlot"*, %"class.std::__1::__compressed_pair.74" }
%"struct.v8::internal::TypedSlots::TypedSlot" = type { i32 }
%"class.std::__1::__compressed_pair.74" = type { %"struct.std::__1::__compressed_pair_elem.75" }
%"struct.std::__1::__compressed_pair_elem.75" = type { %"struct.v8::internal::TypedSlots::TypedSlot"* }
%"class.std::__1::set" = type { %"class.std::__1::__tree" }
%"class.std::__1::__tree" = type { %"class.std::__1::__tree_end_node"*, %"class.std::__1::__compressed_pair.79", %"class.std::__1::__compressed_pair.84" }
%"class.std::__1::__tree_end_node" = type { %"class.std::__1::__tree_node_base"* }
%"class.std::__1::__tree_node_base" = type <{ %"class.std::__1::__tree_end_node", %"class.std::__1::__tree_node_base"*, %"class.std::__1::__tree_end_node"*, i8, [7 x i8] }>
%"class.std::__1::__compressed_pair.79" = type { %"struct.std::__1::__compressed_pair_elem.80" }
%"struct.std::__1::__compressed_pair_elem.80" = type { %"class.std::__1::__tree_end_node" }
%"class.std::__1::__compressed_pair.84" = type { %"struct.std::__1::__compressed_pair_elem.7" }
%"struct.std::__1::atomic.86" = type { %"struct.std::__1::__atomic_base.87" }
%"struct.std::__1::__atomic_base.87" = type { %"struct.std::__1::__cxx_atomic_impl.88" }
%"struct.std::__1::__cxx_atomic_impl.88" = type { %"struct.std::__1::__cxx_atomic_base_impl.89" }
%"struct.std::__1::__cxx_atomic_base_impl.89" = type { i64 }
%"class.v8::internal::heap::ListNode" = type { %"class.v8::internal::MemoryChunk"*, %"class.v8::internal::MemoryChunk"* }
%"class.v8::internal::FreeListCategory" = type { i32, i32, %"class.v8::internal::FreeSpace", %"class.v8::internal::FreeListCategory"*, %"class.v8::internal::FreeListCategory"* }
%"class.v8::internal::FreeSpace" = type { %"class.v8::internal::TorqueGeneratedFreeSpace" }
%"class.v8::internal::TorqueGeneratedFreeSpace" = type { %"class.v8::internal::HeapObject" }
%"class.v8::internal::Bitmap" = type { i8 }
%"class.v8::internal::CodeObjectRegistry" = type <{ %"class.std::__1::vector.90", i8, [7 x i8] }>
%"class.std::__1::vector.90" = type { %"class.std::__1::__vector_base.91" }
%"class.std::__1::__vector_base.91" = type { i64*, i64*, %"class.std::__1::__compressed_pair.92" }
%"class.std::__1::__compressed_pair.92" = type { %"struct.std::__1::__compressed_pair_elem.93" }
%"struct.std::__1::__compressed_pair_elem.93" = type { i64* }
%"class.v8::internal::PossiblyEmptyBuckets" = type { i64 }
%"class.std::__1::unique_ptr.97" = type { %"class.std::__1::__compressed_pair.98" }
%"class.std::__1::__compressed_pair.98" = type { %"struct.std::__1::__compressed_pair_elem.99" }
%"struct.std::__1::__compressed_pair_elem.99" = type { %"class.v8::internal::FreeList"* }
%"class.v8::internal::FreeList" = type { i32 (...)**, i32, i32, i64, %"struct.std::__1::atomic.19", %"class.v8::internal::FreeListCategory"**, i64 }
%"class.v8::internal::LinearAllocationArea" = type { i64, i64, i64 }
%"class.v8::internal::SemiSpace" = type { %"class.v8::internal::Space", i64, i64, i64, i64, i64, i32, %"class.v8::internal::Page"* }
%"class.v8::internal::Page" = type { %"class.v8::internal::MemoryChunk" }
%"class.v8::internal::VirtualMemory" = type { %"class.v8::PageAllocator"*, %"class.v8::base::AddressRegion" }
%"class.v8::base::AddressRegion" = type { i64, i64 }
%"class.std::__1::vector.103" = type { %"class.std::__1::__vector_base.104" }
%"class.std::__1::__vector_base.104" = type { %"struct.std::__1::pair.105"*, %"struct.std::__1::pair.105"*, %"class.std::__1::__compressed_pair.106" }
%"struct.std::__1::pair.105" = type { i32, i64 }
%"class.std::__1::__compressed_pair.106" = type { %"struct.std::__1::__compressed_pair_elem.107" }
%"struct.std::__1::__compressed_pair_elem.107" = type { %"struct.std::__1::pair.105"* }
%"class.v8::internal::CodeSpace" = type { %"class.v8::internal::PagedSpace" }
%"class.v8::internal::PagedSpace" = type { %"class.v8::internal::SpaceWithLinearArea", i32, i32, i64, %"class.v8::internal::AllocationStats", %"class.v8::base::Mutex", i64, i64 }
%"class.v8::internal::AllocationStats" = type { %"struct.std::__1::atomic.19", i64, %"struct.std::__1::atomic.19" }
%"class.v8::internal::OldLargeObjectSpace" = type { %"class.v8::internal::LargeObjectSpace" }
%"class.v8::internal::LargeObjectSpace" = type { %"class.v8::internal::Space", %"struct.std::__1::atomic.19", i32, %"struct.std::__1::atomic.19", %"class.v8::base::Mutex", %"struct.std::__1::atomic.19" }
%"class.v8::internal::CodeLargeObjectSpace" = type { %"class.v8::internal::OldLargeObjectSpace", %"class.std::__1::unordered_map.111" }
%"class.std::__1::unordered_map.111" = type { %"class.std::__1::__hash_table.112" }
%"class.std::__1::__hash_table.112" = type <{ %"class.std::__1::unique_ptr.113", %"class.std::__1::__compressed_pair.123", %"class.std::__1::__compressed_pair.128", %"class.std::__1::__compressed_pair.133", [4 x i8] }>
%"class.std::__1::unique_ptr.113" = type { %"class.std::__1::__compressed_pair.114" }
%"class.std::__1::__compressed_pair.114" = type { %"struct.std::__1::__compressed_pair_elem.115", %"struct.std::__1::__compressed_pair_elem.117" }
%"struct.std::__1::__compressed_pair_elem.115" = type { %"struct.std::__1::__hash_node_base.116"** }
%"struct.std::__1::__hash_node_base.116" = type { %"struct.std::__1::__hash_node_base.116"* }
%"struct.std::__1::__compressed_pair_elem.117" = type { %"class.std::__1::__bucket_list_deallocator.118" }
%"class.std::__1::__bucket_list_deallocator.118" = type { %"class.std::__1::__compressed_pair.119" }
%"class.std::__1::__compressed_pair.119" = type { %"struct.std::__1::__compressed_pair_elem.7" }
%"class.std::__1::__compressed_pair.123" = type { %"struct.std::__1::__compressed_pair_elem.124" }
%"struct.std::__1::__compressed_pair_elem.124" = type { %"struct.std::__1::__hash_node_base.116" }
%"class.std::__1::__compressed_pair.128" = type { %"struct.std::__1::__compressed_pair_elem.7" }
%"class.std::__1::__compressed_pair.133" = type { %"struct.std::__1::__compressed_pair_elem.17" }
%"class.v8::internal::NewLargeObjectSpace" = type { %"class.v8::internal::LargeObjectSpace", i64 }
%"class.v8::internal::ReadOnlySpace" = type { %"class.v8::internal::BaseSpace", i8, %"class.v8::internal::AllocationStats", %"class.std::__1::vector.139", i64, i64, i8, i64, i64 }
%"class.std::__1::vector.139" = type { %"class.std::__1::__vector_base.140" }
%"class.std::__1::__vector_base.140" = type { %"class.v8::internal::ReadOnlyPage"**, %"class.v8::internal::ReadOnlyPage"**, %"class.std::__1::__compressed_pair.141" }
%"class.v8::internal::ReadOnlyPage" = type { %"class.v8::internal::BasicMemoryChunk" }
%"class.std::__1::__compressed_pair.141" = type { %"struct.std::__1::__compressed_pair_elem.142" }
%"struct.std::__1::__compressed_pair_elem.142" = type { %"class.v8::internal::ReadOnlyPage"** }
%"class.v8::internal::OldSpace" = type { %"class.v8::internal::PagedSpace" }
%"class.v8::internal::MapSpace" = type { %"class.v8::internal::PagedSpace" }
%"class.std::__1::unique_ptr.146" = type { %"class.std::__1::__compressed_pair.147" }
%"class.std::__1::__compressed_pair.147" = type { %"struct.std::__1::__compressed_pair_elem.148" }
%"struct.std::__1::__compressed_pair_elem.148" = type { %"class.v8::internal::ConcurrentAllocator"* }
%"class.v8::internal::ConcurrentAllocator" = type { %"class.v8::internal::LocalHeap"*, %"class.v8::internal::PagedSpace"*, %"class.v8::internal::LocalAllocationBuffer" }
%"class.v8::internal::LocalAllocationBuffer" = type { %"class.v8::internal::Heap"*, %"class.v8::internal::LinearAllocationArea" }
%"class.v8::internal::LocalHeap" = type { %"class.v8::internal::Heap"*, i8, %"struct.std::__1::atomic.1102", i8, i8, %"class.v8::internal::LocalHeap"*, %"class.v8::internal::LocalHeap"*, %"class.std::__1::unique_ptr.1106", %"class.std::__1::unique_ptr.1112", %"class.std::__1::unique_ptr.474", %"class.std::__1::vector.1118", %"class.v8::internal::ConcurrentAllocator" }
%"struct.std::__1::atomic.1102" = type { %"struct.std::__1::__atomic_base.1103" }
%"struct.std::__1::__atomic_base.1103" = type { %"struct.std::__1::__cxx_atomic_impl.1104" }
%"struct.std::__1::__cxx_atomic_impl.1104" = type { %"struct.std::__1::__cxx_atomic_base_impl.1105" }
%"struct.std::__1::__cxx_atomic_base_impl.1105" = type { i32 }
%"class.std::__1::unique_ptr.1106" = type { %"class.std::__1::__compressed_pair.1107" }
%"class.std::__1::__compressed_pair.1107" = type { %"struct.std::__1::__compressed_pair_elem.1108" }
%"struct.std::__1::__compressed_pair_elem.1108" = type { %"class.v8::internal::LocalHandles"* }
%"class.v8::internal::LocalHandles" = type { %"struct.v8::internal::HandleScopeData", %"class.std::__1::vector.858" }
%"class.std::__1::vector.858" = type { %"class.std::__1::__vector_base.859" }
%"class.std::__1::__vector_base.859" = type { i64**, i64**, %"class.std::__1::__compressed_pair.860" }
%"class.std::__1::__compressed_pair.860" = type { %"struct.std::__1::__compressed_pair_elem.861" }
%"struct.std::__1::__compressed_pair_elem.861" = type { i64** }
%"class.std::__1::unique_ptr.1112" = type { %"class.std::__1::__compressed_pair.1113" }
%"class.std::__1::__compressed_pair.1113" = type { %"struct.std::__1::__compressed_pair_elem.1114" }
%"struct.std::__1::__compressed_pair_elem.1114" = type { %"class.v8::internal::PersistentHandles"* }
%"class.v8::internal::PersistentHandles" = type { %"class.v8::internal::Isolate"*, %"class.std::__1::vector.858", i64*, i64*, %"class.v8::internal::PersistentHandles"*, %"class.v8::internal::PersistentHandles"* }
%"class.std::__1::vector.1118" = type { %"class.std::__1::__vector_base.1119" }
%"class.std::__1::__vector_base.1119" = type { %"struct.std::__1::pair.1120"*, %"struct.std::__1::pair.1120"*, %"class.std::__1::__compressed_pair.1121" }
%"struct.std::__1::pair.1120" = type opaque
%"class.std::__1::__compressed_pair.1121" = type { %"struct.std::__1::__compressed_pair_elem.1122" }
%"struct.std::__1::__compressed_pair_elem.1122" = type { %"struct.std::__1::pair.1120"* }
%"class.v8::internal::ArrayBufferExtension" = type { %"struct.std::__1::atomic.152", %"struct.std::__1::atomic.156", %"class.std::__1::shared_ptr", %"class.v8::internal::ArrayBufferExtension"*, %"struct.std::__1::atomic.19" }
%"struct.std::__1::atomic.156" = type { %"struct.std::__1::__atomic_base.157" }
%"struct.std::__1::__atomic_base.157" = type { %"struct.std::__1::__cxx_atomic_impl.158" }
%"struct.std::__1::__cxx_atomic_impl.158" = type { %"struct.std::__1::__cxx_atomic_base_impl.159" }
%"struct.std::__1::__cxx_atomic_base_impl.159" = type { i8 }
%"class.std::__1::shared_ptr" = type { %"class.v8::internal::BackingStore"*, %"class.std::__1::__shared_weak_count"* }
%"class.v8::internal::BackingStore" = type <{ i8*, %"struct.std::__1::atomic.19", i64, %"union.v8::internal::BackingStore::TypeSpecificData", i16, [6 x i8] }>
%"union.v8::internal::BackingStore::TypeSpecificData" = type { %"class.std::__1::shared_ptr.160" }
%"class.std::__1::__shared_weak_count" = type { %"class.std::__1::__shared_count", i64 }
%"class.std::__1::__shared_count" = type { i32 (...)**, i64 }
%"struct.std::__1::atomic.161" = type { %"struct.std::__1::__atomic_base.162" }
%"struct.std::__1::__atomic_base.162" = type { %"struct.std::__1::__cxx_atomic_impl.163" }
%"struct.std::__1::__cxx_atomic_impl.163" = type { %"struct.std::__1::__cxx_atomic_base_impl.164" }
%"struct.std::__1::__cxx_atomic_base_impl.164" = type { i32 }
%"class.v8::internal::AllocationObserver" = type { i32 (...)**, i64 }
%"class.v8::internal::StressScavengeObserver" = type opaque
%"struct.std::__1::atomic.19" = type { %"struct.std::__1::__atomic_base.20" }
%"struct.std::__1::__atomic_base.20" = type { %"struct.std::__1::__atomic_base.21" }
%"struct.std::__1::__atomic_base.21" = type { %"struct.std::__1::__cxx_atomic_impl.22" }
%"struct.std::__1::__cxx_atomic_impl.22" = type { %"struct.std::__1::__cxx_atomic_base_impl.23" }
%"struct.std::__1::__cxx_atomic_base_impl.23" = type { i64 }
%"class.std::__1::vector.165" = type { %"class.std::__1::__vector_base.166" }
%"class.std::__1::__vector_base.166" = type { %"struct.v8::internal::Heap::GCCallbackTuple"*, %"struct.v8::internal::Heap::GCCallbackTuple"*, %"class.std::__1::__compressed_pair.167" }
%"struct.v8::internal::Heap::GCCallbackTuple" = type { void (%"class.v8::Isolate"*, i32, i32, i8*)*, i32, i8* }
%"class.v8::Isolate" = type { i8 }
%"class.std::__1::__compressed_pair.167" = type { %"struct.std::__1::__compressed_pair_elem.168" }
%"struct.std::__1::__compressed_pair_elem.168" = type { %"struct.v8::internal::Heap::GCCallbackTuple"* }
%"class.std::__1::unique_ptr.172" = type { %"class.std::__1::__compressed_pair.173" }
%"class.std::__1::__compressed_pair.173" = type { %"struct.std::__1::__compressed_pair_elem.174" }
%"struct.std::__1::__compressed_pair_elem.174" = type { %"class.v8::internal::GCTracer"* }
%"class.v8::internal::GCTracer" = type opaque
%"class.std::__1::unique_ptr.178" = type { %"class.std::__1::__compressed_pair.179" }
%"class.std::__1::__compressed_pair.179" = type { %"struct.std::__1::__compressed_pair_elem.180" }
%"struct.std::__1::__compressed_pair_elem.180" = type { %"class.v8::internal::MarkCompactCollector"* }
%"class.v8::internal::MarkCompactCollector" = type <{ %"class.v8::internal::MarkCompactCollectorBase", %"class.v8::base::Mutex", %"class.v8::base::Semaphore", i8, i8, i8, i8, i8, i8, [2 x i8], %"class.v8::internal::MarkingWorklists", %"class.v8::internal::WeakObjects", %"struct.v8::internal::EphemeronMarking", %"class.std::__1::unique_ptr.220", %"class.std::__1::unique_ptr.226", %"class.v8::internal::NativeContextInferrer", [7 x i8], %"class.v8::internal::NativeContextStats", %"class.std::__1::vector.280", %"class.std::__1::vector.280", %"class.std::__1::vector.280", %"class.std::__1::vector.287", %"class.v8::internal::Sweeper"*, %"class.v8::internal::MajorMarkingState", %"class.v8::internal::MajorNonAtomicMarkingState", [2 x i8], i32, i32, [4 x i8] }>
%"class.v8::internal::MarkCompactCollectorBase" = type { i32 (...)**, %"class.v8::internal::Heap"* }
%"class.v8::base::Semaphore" = type { %union.sem_t }
%union.sem_t = type { i64, [24 x i8] }
%"class.v8::internal::MarkingWorklists" = type { %"class.heap::base::Worklist", %"class.heap::base::Worklist", %"class.heap::base::Worklist.181", %"class.std::__1::vector.182", %"class.std::__1::vector.189", %"class.heap::base::Worklist" }
%"class.heap::base::Worklist.181" = type { %"class.v8::base::Mutex", %"class.heap::base::Worklist<v8::internal::HeapObject, 16>::Segment"*, %"struct.std::__1::atomic.19" }
%"class.heap::base::Worklist<v8::internal::HeapObject, 16>::Segment" = type opaque
%"class.std::__1::vector.182" = type { %"class.std::__1::__vector_base.183" }
%"class.std::__1::__vector_base.183" = type { %"struct.v8::internal::ContextWorklistPair"*, %"struct.v8::internal::ContextWorklistPair"*, %"class.std::__1::__compressed_pair.184" }
%"struct.v8::internal::ContextWorklistPair" = type { i64, %"class.heap::base::Worklist"* }
%"class.std::__1::__compressed_pair.184" = type { %"struct.std::__1::__compressed_pair_elem.185" }
%"struct.std::__1::__compressed_pair_elem.185" = type { %"struct.v8::internal::ContextWorklistPair"* }
%"class.std::__1::vector.189" = type { %"class.std::__1::__vector_base.190" }
%"class.std::__1::__vector_base.190" = type { %"class.std::__1::unique_ptr.191"*, %"class.std::__1::unique_ptr.191"*, %"class.std::__1::__compressed_pair.192" }
%"class.std::__1::unique_ptr.191" = type opaque
%"class.std::__1::__compressed_pair.192" = type { %"struct.std::__1::__compressed_pair_elem.193" }
%"struct.std::__1::__compressed_pair_elem.193" = type { %"class.std::__1::unique_ptr.191"* }
%"class.heap::base::Worklist" = type { %"class.v8::base::Mutex", %"class.heap::base::Worklist<v8::internal::HeapObject, 64>::Segment"*, %"struct.std::__1::atomic.19" }
%"class.heap::base::Worklist<v8::internal::HeapObject, 64>::Segment" = type opaque
%"class.v8::internal::WeakObjects" = type { %"class.v8::internal::Worklist", %"class.v8::internal::Worklist.197", %"class.v8::internal::Worklist.199", %"class.v8::internal::Worklist.199", %"class.v8::internal::Worklist.199", %"class.v8::internal::Worklist.201", %"class.v8::internal::Worklist.203", %"class.v8::internal::Worklist.205", %"class.v8::internal::Worklist.207", %"class.v8::internal::Worklist.209", %"class.v8::internal::Worklist.211" }
%"class.v8::internal::Worklist" = type <{ [8 x %"struct.v8::internal::Worklist<v8::internal::TransitionArray, 64>::PrivateSegmentHolder"], %"class.v8::internal::Worklist<v8::internal::TransitionArray, 64>::GlobalPool", i32, [4 x i8] }>
%"struct.v8::internal::Worklist<v8::internal::TransitionArray, 64>::PrivateSegmentHolder" = type { %"class.v8::internal::Worklist<v8::internal::TransitionArray, 64>::Segment"*, %"class.v8::internal::Worklist<v8::internal::TransitionArray, 64>::Segment"*, [64 x i8] }
%"class.v8::internal::Worklist<v8::internal::TransitionArray, 64>::Segment" = type opaque
%"class.v8::internal::Worklist<v8::internal::TransitionArray, 64>::GlobalPool" = type { %"class.v8::base::Mutex", %"class.v8::internal::Worklist<v8::internal::TransitionArray, 64>::Segment"*, %"struct.std::__1::atomic.19" }
%"class.v8::internal::Worklist.197" = type <{ [8 x %"struct.v8::internal::Worklist<v8::internal::EphemeronHashTable, 64>::PrivateSegmentHolder"], %"class.v8::internal::Worklist<v8::internal::EphemeronHashTable, 64>::GlobalPool", i32, [4 x i8] }>
%"struct.v8::internal::Worklist<v8::internal::EphemeronHashTable, 64>::PrivateSegmentHolder" = type { %"class.v8::internal::Worklist<v8::internal::EphemeronHashTable, 64>::Segment"*, %"class.v8::internal::Worklist<v8::internal::EphemeronHashTable, 64>::Segment"*, [64 x i8] }
%"class.v8::internal::Worklist<v8::internal::EphemeronHashTable, 64>::Segment" = type opaque
%"class.v8::internal::Worklist<v8::internal::EphemeronHashTable, 64>::GlobalPool" = type { %"class.v8::base::Mutex", %"class.v8::internal::Worklist<v8::internal::EphemeronHashTable, 64>::Segment"*, %"struct.std::__1::atomic.19" }
%"class.v8::internal::Worklist.199" = type <{ [8 x %"struct.v8::internal::Worklist<v8::internal::Ephemeron, 64>::PrivateSegmentHolder"], %"class.v8::internal::Worklist<v8::internal::Ephemeron, 64>::GlobalPool", i32, [4 x i8] }>
%"struct.v8::internal::Worklist<v8::internal::Ephemeron, 64>::PrivateSegmentHolder" = type { %"class.v8::internal::Worklist<v8::internal::Ephemeron, 64>::Segment"*, %"class.v8::internal::Worklist<v8::internal::Ephemeron, 64>::Segment"*, [64 x i8] }
%"class.v8::internal::Worklist<v8::internal::Ephemeron, 64>::Segment" = type opaque
%"class.v8::internal::Worklist<v8::internal::Ephemeron, 64>::GlobalPool" = type { %"class.v8::base::Mutex", %"class.v8::internal::Worklist<v8::internal::Ephemeron, 64>::Segment"*, %"struct.std::__1::atomic.19" }
%"class.v8::internal::Worklist.201" = type <{ [8 x %"struct.v8::internal::Worklist<std::__1::pair<v8::internal::HeapObject, v8::internal::CompressedHeapObjectSlot>, 64>::PrivateSegmentHolder"], %"class.v8::internal::Worklist<std::__1::pair<v8::internal::HeapObject, v8::internal::CompressedHeapObjectSlot>, 64>::GlobalPool", i32, [4 x i8] }>
%"struct.v8::internal::Worklist<std::__1::pair<v8::internal::HeapObject, v8::internal::CompressedHeapObjectSlot>, 64>::PrivateSegmentHolder" = type { %"class.v8::internal::Worklist<std::__1::pair<v8::internal::HeapObject, v8::internal::CompressedHeapObjectSlot>, 64>::Segment"*, %"class.v8::internal::Worklist<std::__1::pair<v8::internal::HeapObject, v8::internal::CompressedHeapObjectSlot>, 64>::Segment"*, [64 x i8] }
%"class.v8::internal::Worklist<std::__1::pair<v8::internal::HeapObject, v8::internal::CompressedHeapObjectSlot>, 64>::Segment" = type opaque
%"class.v8::internal::Worklist<std::__1::pair<v8::internal::HeapObject, v8::internal::CompressedHeapObjectSlot>, 64>::GlobalPool" = type { %"class.v8::base::Mutex", %"class.v8::internal::Worklist<std::__1::pair<v8::internal::HeapObject, v8::internal::CompressedHeapObjectSlot>, 64>::Segment"*, %"struct.std::__1::atomic.19" }
%"class.v8::internal::Worklist.203" = type <{ [8 x %"struct.v8::internal::Worklist<std::__1::pair<v8::internal::HeapObject, v8::internal::Code>, 64>::PrivateSegmentHolder"], %"class.v8::internal::Worklist<std::__1::pair<v8::internal::HeapObject, v8::internal::Code>, 64>::GlobalPool", i32, [4 x i8] }>
%"struct.v8::internal::Worklist<std::__1::pair<v8::internal::HeapObject, v8::internal::Code>, 64>::PrivateSegmentHolder" = type { %"class.v8::internal::Worklist<std::__1::pair<v8::internal::HeapObject, v8::internal::Code>, 64>::Segment"*, %"class.v8::internal::Worklist<std::__1::pair<v8::internal::HeapObject, v8::internal::Code>, 64>::Segment"*, [64 x i8] }
%"class.v8::internal::Worklist<std::__1::pair<v8::internal::HeapObject, v8::internal::Code>, 64>::Segment" = type opaque
%"class.v8::internal::Worklist<std::__1::pair<v8::internal::HeapObject, v8::internal::Code>, 64>::GlobalPool" = type { %"class.v8::base::Mutex", %"class.v8::internal::Worklist<std::__1::pair<v8::internal::HeapObject, v8::internal::Code>, 64>::Segment"*, %"struct.std::__1::atomic.19" }
%"class.v8::internal::Worklist.205" = type <{ [8 x %"struct.v8::internal::Worklist<v8::internal::JSWeakRef, 64>::PrivateSegmentHolder"], %"class.v8::internal::Worklist<v8::internal::JSWeakRef, 64>::GlobalPool", i32, [4 x i8] }>
%"struct.v8::internal::Worklist<v8::internal::JSWeakRef, 64>::PrivateSegmentHolder" = type { %"class.v8::internal::Worklist<v8::internal::JSWeakRef, 64>::Segment"*, %"class.v8::internal::Worklist<v8::internal::JSWeakRef, 64>::Segment"*, [64 x i8] }
%"class.v8::internal::Worklist<v8::internal::JSWeakRef, 64>::Segment" = type opaque
%"class.v8::internal::Worklist<v8::internal::JSWeakRef, 64>::GlobalPool" = type { %"class.v8::base::Mutex", %"class.v8::internal::Worklist<v8::internal::JSWeakRef, 64>::Segment"*, %"struct.std::__1::atomic.19" }
%"class.v8::internal::Worklist.207" = type <{ [8 x %"struct.v8::internal::Worklist<v8::internal::WeakCell, 64>::PrivateSegmentHolder"], %"class.v8::internal::Worklist<v8::internal::WeakCell, 64>::GlobalPool", i32, [4 x i8] }>
%"struct.v8::internal::Worklist<v8::internal::WeakCell, 64>::PrivateSegmentHolder" = type { %"class.v8::internal::Worklist<v8::internal::WeakCell, 64>::Segment"*, %"class.v8::internal::Worklist<v8::internal::WeakCell, 64>::Segment"*, [64 x i8] }
%"class.v8::internal::Worklist<v8::internal::WeakCell, 64>::Segment" = type opaque
%"class.v8::internal::Worklist<v8::internal::WeakCell, 64>::GlobalPool" = type { %"class.v8::base::Mutex", %"class.v8::internal::Worklist<v8::internal::WeakCell, 64>::Segment"*, %"struct.std::__1::atomic.19" }
%"class.v8::internal::Worklist.209" = type <{ [8 x %"struct.v8::internal::Worklist<v8::internal::SharedFunctionInfo, 64>::PrivateSegmentHolder"], %"class.v8::internal::Worklist<v8::internal::SharedFunctionInfo, 64>::GlobalPool", i32, [4 x i8] }>
%"struct.v8::internal::Worklist<v8::internal::SharedFunctionInfo, 64>::PrivateSegmentHolder" = type { %"class.v8::internal::Worklist<v8::internal::SharedFunctionInfo, 64>::Segment"*, %"class.v8::internal::Worklist<v8::internal::SharedFunctionInfo, 64>::Segment"*, [64 x i8] }
%"class.v8::internal::Worklist<v8::internal::SharedFunctionInfo, 64>::Segment" = type opaque
%"class.v8::internal::Worklist<v8::internal::SharedFunctionInfo, 64>::GlobalPool" = type { %"class.v8::base::Mutex", %"class.v8::internal::Worklist<v8::internal::SharedFunctionInfo, 64>::Segment"*, %"struct.std::__1::atomic.19" }
%"class.v8::internal::Worklist.211" = type <{ [8 x %"struct.v8::internal::Worklist<v8::internal::JSFunction, 64>::PrivateSegmentHolder"], %"class.v8::internal::Worklist<v8::internal::JSFunction, 64>::GlobalPool", i32, [4 x i8] }>
%"struct.v8::internal::Worklist<v8::internal::JSFunction, 64>::PrivateSegmentHolder" = type { %"class.v8::internal::Worklist<v8::internal::JSFunction, 64>::Segment"*, %"class.v8::internal::Worklist<v8::internal::JSFunction, 64>::Segment"*, [64 x i8] }
%"class.v8::internal::Worklist<v8::internal::JSFunction, 64>::Segment" = type opaque
%"class.v8::internal::Worklist<v8::internal::JSFunction, 64>::GlobalPool" = type { %"class.v8::base::Mutex", %"class.v8::internal::Worklist<v8::internal::JSFunction, 64>::Segment"*, %"struct.std::__1::atomic.19" }
%"struct.v8::internal::EphemeronMarking" = type { %"class.std::__1::vector.213", i8, i64 }
%"class.std::__1::vector.213" = type { %"class.std::__1::__vector_base.214" }
%"class.std::__1::__vector_base.214" = type { %"class.v8::internal::HeapObject"*, %"class.v8::internal::HeapObject"*, %"class.std::__1::__compressed_pair.215" }
%"class.std::__1::__compressed_pair.215" = type { %"struct.std::__1::__compressed_pair_elem.216" }
%"struct.std::__1::__compressed_pair_elem.216" = type { %"class.v8::internal::HeapObject"* }
%"class.std::__1::unique_ptr.220" = type { %"class.std::__1::__compressed_pair.221" }
%"class.std::__1::__compressed_pair.221" = type { %"struct.std::__1::__compressed_pair_elem.222" }
%"struct.std::__1::__compressed_pair_elem.222" = type { %"class.v8::internal::MainMarkingVisitor"* }
%"class.v8::internal::MainMarkingVisitor" = type opaque
%"class.std::__1::unique_ptr.226" = type { %"class.std::__1::__compressed_pair.227" }
%"class.std::__1::__compressed_pair.227" = type { %"struct.std::__1::__compressed_pair_elem.228" }
%"struct.std::__1::__compressed_pair_elem.228" = type { %"class.v8::internal::MarkingWorklists::Local"* }
%"class.v8::internal::MarkingWorklists::Local" = type { %"class.heap::base::Worklist<v8::internal::HeapObject, 64>::Local", %"class.heap::base::Worklist<v8::internal::HeapObject, 16>::Local", %"class.heap::base::Worklist<v8::internal::HeapObject, 64>::Local", i64, %"class.heap::base::Worklist<v8::internal::HeapObject, 64>::Local"*, i8, [7 x i8], %"class.std::__1::unordered_map.229" }
%"class.heap::base::Worklist<v8::internal::HeapObject, 16>::Local" = type { %"class.heap::base::Worklist.181"*, %"class.heap::base::internal::SegmentBase"*, %"class.heap::base::internal::SegmentBase"* }
%"class.heap::base::internal::SegmentBase" = type { i16, i16 }
%"class.heap::base::Worklist<v8::internal::HeapObject, 64>::Local" = type { %"class.heap::base::Worklist"*, %"class.heap::base::internal::SegmentBase"*, %"class.heap::base::internal::SegmentBase"* }
%"class.std::__1::unordered_map.229" = type { %"class.std::__1::__hash_table.230" }
%"class.std::__1::__hash_table.230" = type <{ %"class.std::__1::unique_ptr.231", %"class.std::__1::__compressed_pair.241", %"class.std::__1::__compressed_pair.246", %"class.std::__1::__compressed_pair.249", [4 x i8] }>
%"class.std::__1::unique_ptr.231" = type { %"class.std::__1::__compressed_pair.232" }
%"class.std::__1::__compressed_pair.232" = type { %"struct.std::__1::__compressed_pair_elem.233", %"struct.std::__1::__compressed_pair_elem.235" }
%"struct.std::__1::__compressed_pair_elem.233" = type { %"struct.std::__1::__hash_node_base.234"** }
%"struct.std::__1::__hash_node_base.234" = type { %"struct.std::__1::__hash_node_base.234"* }
%"struct.std::__1::__compressed_pair_elem.235" = type { %"class.std::__1::__bucket_list_deallocator.236" }
%"class.std::__1::__bucket_list_deallocator.236" = type { %"class.std::__1::__compressed_pair.237" }
%"class.std::__1::__compressed_pair.237" = type { %"struct.std::__1::__compressed_pair_elem.7" }
%"class.std::__1::__compressed_pair.241" = type { %"struct.std::__1::__compressed_pair_elem.242" }
%"struct.std::__1::__compressed_pair_elem.242" = type { %"struct.std::__1::__hash_node_base.234" }
%"class.std::__1::__compressed_pair.246" = type { %"struct.std::__1::__compressed_pair_elem.7" }
%"class.std::__1::__compressed_pair.249" = type { %"struct.std::__1::__compressed_pair_elem.17" }
%"class.v8::internal::NativeContextInferrer" = type { i8 }
%"class.v8::internal::NativeContextStats" = type { %"class.std::__1::unordered_map.256" }
%"class.std::__1::unordered_map.256" = type { %"class.std::__1::__hash_table.257" }
%"class.std::__1::__hash_table.257" = type <{ %"class.std::__1::unique_ptr.258", %"class.std::__1::__compressed_pair.268", %"class.std::__1::__compressed_pair.273", %"class.std::__1::__compressed_pair.276", [4 x i8] }>
%"class.std::__1::unique_ptr.258" = type { %"class.std::__1::__compressed_pair.259" }
%"class.std::__1::__compressed_pair.259" = type { %"struct.std::__1::__compressed_pair_elem.260", %"struct.std::__1::__compressed_pair_elem.262" }
%"struct.std::__1::__compressed_pair_elem.260" = type { %"struct.std::__1::__hash_node_base.261"** }
%"struct.std::__1::__hash_node_base.261" = type { %"struct.std::__1::__hash_node_base.261"* }
%"struct.std::__1::__compressed_pair_elem.262" = type { %"class.std::__1::__bucket_list_deallocator.263" }
%"class.std::__1::__bucket_list_deallocator.263" = type { %"class.std::__1::__compressed_pair.264" }
%"class.std::__1::__compressed_pair.264" = type { %"struct.std::__1::__compressed_pair_elem.7" }
%"class.std::__1::__compressed_pair.268" = type { %"struct.std::__1::__compressed_pair_elem.269" }
%"struct.std::__1::__compressed_pair_elem.269" = type { %"struct.std::__1::__hash_node_base.261" }
%"class.std::__1::__compressed_pair.273" = type { %"struct.std::__1::__compressed_pair_elem.7" }
%"class.std::__1::__compressed_pair.276" = type { %"struct.std::__1::__compressed_pair_elem.17" }
%"class.std::__1::vector.280" = type { %"class.std::__1::__vector_base.281" }
%"class.std::__1::__vector_base.281" = type { %"class.v8::internal::Page"**, %"class.v8::internal::Page"**, %"class.std::__1::__compressed_pair.282" }
%"class.std::__1::__compressed_pair.282" = type { %"struct.std::__1::__compressed_pair_elem.283" }
%"struct.std::__1::__compressed_pair_elem.283" = type { %"class.v8::internal::Page"** }
%"class.std::__1::vector.287" = type { %"class.std::__1::__vector_base.288" }
%"class.std::__1::__vector_base.288" = type { %"struct.std::__1::pair.289"*, %"struct.std::__1::pair.289"*, %"class.std::__1::__compressed_pair.290" }
%"struct.std::__1::pair.289" = type opaque
%"class.std::__1::__compressed_pair.290" = type { %"struct.std::__1::__compressed_pair_elem.291" }
%"struct.std::__1::__compressed_pair_elem.291" = type { %"struct.std::__1::pair.289"* }
%"class.v8::internal::Sweeper" = type <{ %"class.v8::internal::Heap"*, %"class.v8::internal::MajorNonAtomicMarkingState"*, %"class.std::__1::unique_ptr.295", %"class.v8::base::Mutex", [3 x %"class.std::__1::vector.280"], [3 x %"class.std::__1::vector.280"], i8, %"struct.std::__1::atomic.152", [6 x i8], %"class.std::__1::vector.280", i64, %"class.v8::base::Semaphore", i8, i8, i8, [5 x i8] }>
%"class.std::__1::unique_ptr.295" = type { %"class.std::__1::__compressed_pair.296" }
%"class.std::__1::__compressed_pair.296" = type { %"struct.std::__1::__compressed_pair_elem.297" }
%"struct.std::__1::__compressed_pair_elem.297" = type { %"class.v8::JobHandle"* }
%"class.v8::JobHandle" = type { i32 (...)** }
%"class.v8::internal::MajorMarkingState" = type { i8 }
%"class.v8::internal::MajorNonAtomicMarkingState" = type { i8 }
%"class.v8::internal::MinorMarkCompactCollector" = type <{ %"class.v8::internal::MarkCompactCollectorBase", %"class.v8::internal::Worklist.305"*, %"class.v8::internal::YoungGenerationMarkingVisitor"*, %"class.v8::base::Semaphore", %"class.std::__1::vector.280", %"class.std::__1::vector.280", %"class.v8::internal::MinorMarkingState", %"class.v8::internal::MinorNonAtomicMarkingState", [6 x i8] }>
%"class.v8::internal::Worklist.305" = type opaque
%"class.v8::internal::YoungGenerationMarkingVisitor" = type opaque
%"class.v8::internal::MinorMarkingState" = type { i8 }
%"class.v8::internal::MinorNonAtomicMarkingState" = type { i8 }
%"class.std::__1::unique_ptr.308" = type { %"class.std::__1::__compressed_pair.309" }
%"class.std::__1::__compressed_pair.309" = type { %"struct.std::__1::__compressed_pair_elem.310" }
%"struct.std::__1::__compressed_pair_elem.310" = type { %"class.v8::internal::ScavengerCollector"* }
%"class.v8::internal::ScavengerCollector" = type opaque
%"class.std::__1::unique_ptr.314" = type { %"class.std::__1::__compressed_pair.315" }
%"class.std::__1::__compressed_pair.315" = type { %"struct.std::__1::__compressed_pair_elem.316" }
%"struct.std::__1::__compressed_pair_elem.316" = type { %"class.v8::internal::ArrayBufferSweeper"* }
%"class.v8::internal::ArrayBufferSweeper" = type opaque
%"class.std::__1::unique_ptr.320" = type { %"class.std::__1::__compressed_pair.321" }
%"class.std::__1::__compressed_pair.321" = type { %"struct.std::__1::__compressed_pair_elem.322" }
%"struct.std::__1::__compressed_pair_elem.322" = type { %"class.v8::internal::MemoryAllocator"* }
%"class.v8::internal::MemoryAllocator" = type { %"class.v8::internal::Isolate"*, %"class.v8::PageAllocator"*, %"class.v8::PageAllocator"*, i64, %"struct.std::__1::atomic.19", %"struct.std::__1::atomic.19", %"struct.std::__1::atomic.19", %"struct.std::__1::atomic.19", %"class.v8::internal::VirtualMemory", %"class.v8::internal::MemoryAllocator::Unmapper", %"class.std::__1::unordered_set.330", %"class.v8::base::Mutex" }
%"class.v8::internal::MemoryAllocator::Unmapper" = type { %"class.v8::internal::Heap"*, %"class.v8::internal::MemoryAllocator"*, %"class.v8::base::Mutex", [3 x %"class.std::__1::vector.323"], %"class.std::__1::unique_ptr.295" }
%"class.std::__1::vector.323" = type { %"class.std::__1::__vector_base.324" }
%"class.std::__1::__vector_base.324" = type { %"class.v8::internal::MemoryChunk"**, %"class.v8::internal::MemoryChunk"**, %"class.std::__1::__compressed_pair.325" }
%"class.std::__1::__compressed_pair.325" = type { %"struct.std::__1::__compressed_pair_elem.326" }
%"struct.std::__1::__compressed_pair_elem.326" = type { %"class.v8::internal::MemoryChunk"** }
%"class.std::__1::unique_ptr.359" = type { %"class.std::__1::__compressed_pair.360" }
%"class.std::__1::__compressed_pair.360" = type { %"struct.std::__1::__compressed_pair_elem.361" }
%"struct.std::__1::__compressed_pair_elem.361" = type { %"class.v8::internal::IncrementalMarking"* }
%"class.v8::internal::IncrementalMarking" = type { %"class.v8::internal::Heap"*, %"class.v8::internal::MarkCompactCollector"*, %"class.v8::internal::WeakObjects"*, double, double, i64, i64, i64, i64, double, i64, %"struct.std::__1::atomic.362", i8, i8, i8, i8, [3 x i8], %"class.v8::internal::IncrementalMarkingJob", %"struct.std::__1::atomic.366", %"class.v8::internal::IncrementalMarking::Observer", %"class.v8::internal::IncrementalMarking::Observer", %"class.v8::internal::MajorMarkingState", %"class.v8::internal::MajorAtomicMarkingState", %"class.v8::internal::MajorNonAtomicMarkingState", %"class.v8::base::Mutex", %"class.std::__1::unordered_map.371" }
%"struct.std::__1::atomic.362" = type { %"struct.std::__1::__atomic_base.363" }
%"struct.std::__1::__atomic_base.363" = type { %"struct.std::__1::__cxx_atomic_impl.364" }
%"struct.std::__1::__cxx_atomic_impl.364" = type { %"struct.std::__1::__cxx_atomic_base_impl.365" }
%"struct.std::__1::__cxx_atomic_base_impl.365" = type { i8 }
%"class.v8::internal::IncrementalMarkingJob" = type <{ %"class.v8::base::Mutex", double, i8, i8, [6 x i8] }>
%"struct.std::__1::atomic.366" = type { %"struct.std::__1::__atomic_base.367" }
%"struct.std::__1::__atomic_base.367" = type { %"struct.std::__1::__cxx_atomic_impl.368" }
%"struct.std::__1::__cxx_atomic_impl.368" = type { %"struct.std::__1::__cxx_atomic_base_impl.369" }
%"struct.std::__1::__cxx_atomic_base_impl.369" = type { i32 }
%"class.v8::internal::IncrementalMarking::Observer" = type { %"class.v8::internal::AllocationObserver", %"class.v8::internal::IncrementalMarking"* }
%"class.v8::internal::MajorAtomicMarkingState" = type { i8 }
%"class.std::__1::unordered_map.371" = type { %"class.std::__1::__hash_table.372" }
%"class.std::__1::__hash_table.372" = type <{ %"class.std::__1::unique_ptr.373", %"class.std::__1::__compressed_pair.383", %"class.std::__1::__compressed_pair.388", %"class.std::__1::__compressed_pair.391", [4 x i8] }>
%"class.std::__1::unique_ptr.373" = type { %"class.std::__1::__compressed_pair.374" }
%"class.std::__1::__compressed_pair.374" = type { %"struct.std::__1::__compressed_pair_elem.375", %"struct.std::__1::__compressed_pair_elem.377" }
%"struct.std::__1::__compressed_pair_elem.375" = type { %"struct.std::__1::__hash_node_base.376"** }
%"struct.std::__1::__hash_node_base.376" = type { %"struct.std::__1::__hash_node_base.376"* }
%"struct.std::__1::__compressed_pair_elem.377" = type { %"class.std::__1::__bucket_list_deallocator.378" }
%"class.std::__1::__bucket_list_deallocator.378" = type { %"class.std::__1::__compressed_pair.379" }
%"class.std::__1::__compressed_pair.379" = type { %"struct.std::__1::__compressed_pair_elem.7" }
%"class.std::__1::__compressed_pair.383" = type { %"struct.std::__1::__compressed_pair_elem.384" }
%"struct.std::__1::__compressed_pair_elem.384" = type { %"struct.std::__1::__hash_node_base.376" }
%"class.std::__1::__compressed_pair.388" = type { %"struct.std::__1::__compressed_pair_elem.7" }
%"class.std::__1::__compressed_pair.391" = type { %"struct.std::__1::__compressed_pair_elem.17" }
%"class.std::__1::unique_ptr.398" = type { %"class.std::__1::__compressed_pair.399" }
%"class.std::__1::__compressed_pair.399" = type { %"struct.std::__1::__compressed_pair_elem.400" }
%"struct.std::__1::__compressed_pair_elem.400" = type { %"class.v8::internal::ConcurrentMarking"* }
%"class.v8::internal::ConcurrentMarking" = type <{ %"class.std::__1::unique_ptr.295", %"class.v8::internal::Heap"*, %"class.v8::internal::MarkingWorklists"*, %"class.v8::internal::WeakObjects"*, [8 x %"struct.v8::internal::ConcurrentMarking::TaskState"], %"struct.std::__1::atomic.19", %"struct.std::__1::atomic.152", [7 x i8] }>
%"struct.v8::internal::ConcurrentMarking::TaskState" = type { i64, %"class.std::__1::unordered_map.401", %"class.v8::internal::NativeContextInferrer", [7 x i8], %"class.v8::internal::NativeContextStats", [64 x i8] }
%"class.std::__1::unordered_map.401" = type { %"class.std::__1::__hash_table.402" }
%"class.std::__1::__hash_table.402" = type <{ %"class.std::__1::unique_ptr.403", %"class.std::__1::__compressed_pair.413", %"class.std::__1::__compressed_pair.418", %"class.std::__1::__compressed_pair.421", [4 x i8] }>
%"class.std::__1::unique_ptr.403" = type { %"class.std::__1::__compressed_pair.404" }
%"class.std::__1::__compressed_pair.404" = type { %"struct.std::__1::__compressed_pair_elem.405", %"struct.std::__1::__compressed_pair_elem.407" }
%"struct.std::__1::__compressed_pair_elem.405" = type { %"struct.std::__1::__hash_node_base.406"** }
%"struct.std::__1::__hash_node_base.406" = type { %"struct.std::__1::__hash_node_base.406"* }
%"struct.std::__1::__compressed_pair_elem.407" = type { %"class.std::__1::__bucket_list_deallocator.408" }
%"class.std::__1::__bucket_list_deallocator.408" = type { %"class.std::__1::__compressed_pair.409" }
%"class.std::__1::__compressed_pair.409" = type { %"struct.std::__1::__compressed_pair_elem.7" }
%"class.std::__1::__compressed_pair.413" = type { %"struct.std::__1::__compressed_pair_elem.414" }
%"struct.std::__1::__compressed_pair_elem.414" = type { %"struct.std::__1::__hash_node_base.406" }
%"class.std::__1::__compressed_pair.418" = type { %"struct.std::__1::__compressed_pair_elem.7" }
%"class.std::__1::__compressed_pair.421" = type { %"struct.std::__1::__compressed_pair_elem.17" }
%"class.std::__1::unique_ptr.428" = type { %"class.std::__1::__compressed_pair.429" }
%"class.std::__1::__compressed_pair.429" = type { %"struct.std::__1::__compressed_pair_elem.430" }
%"struct.std::__1::__compressed_pair_elem.430" = type { %"class.v8::internal::GCIdleTimeHandler"* }
%"class.v8::internal::GCIdleTimeHandler" = type opaque
%"class.std::__1::unique_ptr.434" = type { %"class.std::__1::__compressed_pair.435" }
%"class.std::__1::__compressed_pair.435" = type { %"struct.std::__1::__compressed_pair_elem.436" }
%"struct.std::__1::__compressed_pair_elem.436" = type { %"class.v8::internal::MemoryMeasurement"* }
%"class.v8::internal::MemoryMeasurement" = type { %"class.std::__1::list", %"class.std::__1::list", %"class.std::__1::list", %"class.v8::internal::Isolate"*, i8, i8, i8, %"class.v8::base::RandomNumberGenerator" }
%"class.std::__1::list" = type { %"class.std::__1::__list_imp" }
%"class.std::__1::__list_imp" = type { %"struct.std::__1::__list_node_base", %"class.std::__1::__compressed_pair.437" }
%"struct.std::__1::__list_node_base" = type { %"struct.std::__1::__list_node_base"*, %"struct.std::__1::__list_node_base"* }
%"class.std::__1::__compressed_pair.437" = type { %"struct.std::__1::__compressed_pair_elem.7" }
%"class.v8::base::RandomNumberGenerator" = type { i64, i64, i64 }
%"class.std::__1::unique_ptr.444" = type { %"class.std::__1::__compressed_pair.445" }
%"class.std::__1::__compressed_pair.445" = type { %"struct.std::__1::__compressed_pair_elem.446" }
%"struct.std::__1::__compressed_pair_elem.446" = type { %"class.v8::internal::MemoryReducer"* }
%"class.v8::internal::MemoryReducer" = type opaque
%"class.std::__1::unique_ptr.450" = type { %"class.std::__1::__compressed_pair.451" }
%"class.std::__1::__compressed_pair.451" = type { %"struct.std::__1::__compressed_pair_elem.452" }
%"struct.std::__1::__compressed_pair_elem.452" = type { %"class.v8::internal::ObjectStats"* }
%"class.v8::internal::ObjectStats" = type opaque
%"class.std::__1::unique_ptr.456" = type { %"class.std::__1::__compressed_pair.457" }
%"class.std::__1::__compressed_pair.457" = type { %"struct.std::__1::__compressed_pair_elem.458" }
%"struct.std::__1::__compressed_pair_elem.458" = type { %"class.v8::internal::ScavengeJob"* }
%"class.v8::internal::ScavengeJob" = type opaque
%"class.std::__1::unique_ptr.462" = type { %"class.std::__1::__compressed_pair.463" }
%"class.std::__1::__compressed_pair.463" = type { %"struct.std::__1::__compressed_pair_elem.464" }
%"struct.std::__1::__compressed_pair_elem.464" = type { %"class.v8::internal::AllocationObserver"* }
%"class.std::__1::unique_ptr.468" = type { %"class.std::__1::__compressed_pair.469" }
%"class.std::__1::__compressed_pair.469" = type { %"struct.std::__1::__compressed_pair_elem.470" }
%"struct.std::__1::__compressed_pair_elem.470" = type { %"class.v8::internal::LocalEmbedderHeapTracer"* }
%"class.v8::internal::LocalEmbedderHeapTracer" = type opaque
%"class.std::__1::unique_ptr.474" = type { %"class.std::__1::__compressed_pair.475" }
%"class.std::__1::__compressed_pair.475" = type { %"struct.std::__1::__compressed_pair_elem.476" }
%"struct.std::__1::__compressed_pair_elem.476" = type { %"class.v8::internal::MarkingBarrier"* }
%"class.v8::internal::MarkingBarrier" = type opaque
%"class.std::__1::shared_ptr.480" = type { %"class.v8::internal::CodeRange"*, %"class.std::__1::__shared_weak_count"* }
%"class.v8::internal::CodeRange" = type { %"class.v8::internal::VirtualMemoryCage", %"struct.std::__1::atomic.499", %"class.v8::base::Mutex" }
%"class.v8::internal::VirtualMemoryCage" = type { i32 (...)**, i64, %"class.std::__1::unique_ptr.481", %"class.v8::internal::VirtualMemory" }
%"class.std::__1::unique_ptr.481" = type { %"class.std::__1::__compressed_pair.482" }
%"class.std::__1::__compressed_pair.482" = type { %"struct.std::__1::__compressed_pair_elem.483" }
%"struct.std::__1::__compressed_pair_elem.483" = type { %"class.v8::base::BoundedPageAllocator"* }
%"class.v8::base::BoundedPageAllocator" = type { %"class.v8::PageAllocator", %"class.v8::base::Mutex", i64, i64, %"class.v8::PageAllocator"*, %"class.v8::base::RegionAllocator" }
%"class.v8::base::RegionAllocator" = type { %"class.v8::base::RegionAllocator::Region", i64, i64, i64, i64, %"class.std::__1::set.484", %"class.std::__1::set.492" }
%"class.v8::base::RegionAllocator::Region" = type <{ %"class.v8::base::AddressRegion", i32, [4 x i8] }>
%"class.std::__1::set.484" = type { %"class.std::__1::__tree.485" }
%"class.std::__1::__tree.485" = type { %"class.std::__1::__tree_end_node"*, %"class.std::__1::__compressed_pair.486", %"class.std::__1::__compressed_pair.490" }
%"class.std::__1::__compressed_pair.486" = type { %"struct.std::__1::__compressed_pair_elem.80" }
%"class.std::__1::__compressed_pair.490" = type { %"struct.std::__1::__compressed_pair_elem.7" }
%"class.std::__1::set.492" = type { %"class.std::__1::__tree.493" }
%"class.std::__1::__tree.493" = type { %"class.std::__1::__tree_end_node"*, %"class.std::__1::__compressed_pair.486", %"class.std::__1::__compressed_pair.494" }
%"class.std::__1::__compressed_pair.494" = type { %"struct.std::__1::__compressed_pair_elem.7" }
%"struct.std::__1::atomic.499" = type { %"struct.std::__1::__atomic_base.500" }
%"struct.std::__1::__atomic_base.500" = type { %"struct.std::__1::__cxx_atomic_impl.501" }
%"struct.std::__1::__cxx_atomic_impl.501" = type { %"struct.std::__1::__cxx_atomic_base_impl.502" }
%"struct.std::__1::__cxx_atomic_base_impl.502" = type { i8* }
%"class.v8::CppHeap" = type opaque
%"class.v8::EmbedderRootsHandler" = type { i32 (...)** }
%"class.v8::internal::StrongRootsEntry" = type { %"class.v8::internal::FullObjectSlot", %"class.v8::internal::FullObjectSlot", %"class.v8::internal::StrongRootsEntry"*, %"class.v8::internal::StrongRootsEntry"* }
%"class.v8::internal::FullObjectSlot" = type { %"class.v8::internal::SlotBase" }
%"class.v8::internal::SlotBase" = type { i64 }
%"class.std::__1::unordered_map.503" = type { %"class.std::__1::__hash_table.504" }
%"class.std::__1::__hash_table.504" = type <{ %"class.std::__1::unique_ptr.505", %"class.std::__1::__compressed_pair.515", %"class.std::__1::__compressed_pair.520", %"class.std::__1::__compressed_pair.523", [4 x i8] }>
%"class.std::__1::unique_ptr.505" = type { %"class.std::__1::__compressed_pair.506" }
%"class.std::__1::__compressed_pair.506" = type { %"struct.std::__1::__compressed_pair_elem.507", %"struct.std::__1::__compressed_pair_elem.509" }
%"struct.std::__1::__compressed_pair_elem.507" = type { %"struct.std::__1::__hash_node_base.508"** }
%"struct.std::__1::__hash_node_base.508" = type { %"struct.std::__1::__hash_node_base.508"* }
%"struct.std::__1::__compressed_pair_elem.509" = type { %"class.std::__1::__bucket_list_deallocator.510" }
%"class.std::__1::__bucket_list_deallocator.510" = type { %"class.std::__1::__compressed_pair.511" }
%"class.std::__1::__compressed_pair.511" = type { %"struct.std::__1::__compressed_pair_elem.7" }
%"class.std::__1::__compressed_pair.515" = type { %"struct.std::__1::__compressed_pair_elem.516" }
%"struct.std::__1::__compressed_pair_elem.516" = type { %"struct.std::__1::__hash_node_base.508" }
%"class.std::__1::__compressed_pair.520" = type { %"struct.std::__1::__compressed_pair_elem.7" }
%"class.std::__1::__compressed_pair.523" = type { %"struct.std::__1::__compressed_pair_elem.17" }
%"class.std::__1::unique_ptr.529" = type { %"class.std::__1::__compressed_pair.530" }
%"class.std::__1::__compressed_pair.530" = type { %"struct.std::__1::__compressed_pair_elem.531" }
%"struct.std::__1::__compressed_pair_elem.531" = type { %"class.v8::internal::GlobalHandleVector"* }
%"class.v8::internal::GlobalHandleVector" = type opaque
%"class.std::__1::unique_ptr.535" = type { %"class.std::__1::__compressed_pair.536" }
%"class.std::__1::__compressed_pair.536" = type { %"struct.std::__1::__compressed_pair_elem.537" }
%"struct.std::__1::__compressed_pair_elem.537" = type { %"class.v8::internal::GlobalSafepoint"* }
%"class.v8::internal::GlobalSafepoint" = type opaque
%"class.v8::internal::Heap::ExternalStringTable" = type { %"class.v8::internal::Heap"*, %"class.std::__1::vector.541", %"class.std::__1::vector.541" }
%"class.std::__1::unique_ptr.548" = type { %"class.std::__1::__compressed_pair.549" }
%"class.std::__1::__compressed_pair.549" = type { %"struct.std::__1::__compressed_pair_elem.550" }
%"struct.std::__1::__compressed_pair_elem.550" = type { %"class.v8::internal::CollectionBarrier"* }
%"class.v8::internal::CollectionBarrier" = type opaque
%"class.std::__1::unordered_set.330" = type { %"class.std::__1::__hash_table.331" }
%"class.std::__1::__hash_table.331" = type <{ %"class.std::__1::unique_ptr.332", %"class.std::__1::__compressed_pair.342", %"class.std::__1::__compressed_pair.347", %"class.std::__1::__compressed_pair.351", [4 x i8] }>
%"class.std::__1::unique_ptr.332" = type { %"class.std::__1::__compressed_pair.333" }
%"class.std::__1::__compressed_pair.333" = type { %"struct.std::__1::__compressed_pair_elem.334", %"struct.std::__1::__compressed_pair_elem.336" }
%"struct.std::__1::__compressed_pair_elem.334" = type { %"struct.std::__1::__hash_node_base.335"** }
%"struct.std::__1::__hash_node_base.335" = type { %"struct.std::__1::__hash_node_base.335"* }
%"struct.std::__1::__compressed_pair_elem.336" = type { %"class.std::__1::__bucket_list_deallocator.337" }
%"class.std::__1::__bucket_list_deallocator.337" = type { %"class.std::__1::__compressed_pair.338" }
%"class.std::__1::__compressed_pair.338" = type { %"struct.std::__1::__compressed_pair_elem.7" }
%"class.std::__1::__compressed_pair.342" = type { %"struct.std::__1::__compressed_pair_elem.343" }
%"struct.std::__1::__compressed_pair_elem.343" = type { %"struct.std::__1::__hash_node_base.335" }
%"class.std::__1::__compressed_pair.347" = type { %"struct.std::__1::__compressed_pair_elem.7" }
%"class.std::__1::__compressed_pair.351" = type { %"struct.std::__1::__compressed_pair_elem.17" }
%"class.std::__1::unordered_map.580" = type { %"class.std::__1::__hash_table.581" }
%"class.std::__1::__hash_table.581" = type <{ %"class.std::__1::unique_ptr.582", %"class.std::__1::__compressed_pair.592", %"class.std::__1::__compressed_pair.597", %"class.std::__1::__compressed_pair.600", [4 x i8] }>
%"class.std::__1::unique_ptr.582" = type { %"class.std::__1::__compressed_pair.583" }
%"class.std::__1::__compressed_pair.583" = type { %"struct.std::__1::__compressed_pair_elem.584", %"struct.std::__1::__compressed_pair_elem.586" }
%"struct.std::__1::__compressed_pair_elem.584" = type { %"struct.std::__1::__hash_node_base.585"** }
%"struct.std::__1::__hash_node_base.585" = type { %"struct.std::__1::__hash_node_base.585"* }
%"struct.std::__1::__compressed_pair_elem.586" = type { %"class.std::__1::__bucket_list_deallocator.587" }
%"class.std::__1::__bucket_list_deallocator.587" = type { %"class.std::__1::__compressed_pair.588" }
%"class.std::__1::__compressed_pair.588" = type { %"struct.std::__1::__compressed_pair_elem.7" }
%"class.std::__1::__compressed_pair.592" = type { %"struct.std::__1::__compressed_pair_elem.593" }
%"struct.std::__1::__compressed_pair_elem.593" = type { %"struct.std::__1::__hash_node_base.585" }
%"class.std::__1::__compressed_pair.597" = type { %"struct.std::__1::__compressed_pair_elem.7" }
%"class.std::__1::__compressed_pair.600" = type { %"struct.std::__1::__compressed_pair_elem.17" }
%"class.std::__1::unordered_map.554" = type { %"class.std::__1::__hash_table.555" }
%"class.std::__1::__hash_table.555" = type <{ %"class.std::__1::unique_ptr.556", %"class.std::__1::__compressed_pair.566", %"class.std::__1::__compressed_pair.571", %"class.std::__1::__compressed_pair.574", [4 x i8] }>
%"class.std::__1::unique_ptr.556" = type { %"class.std::__1::__compressed_pair.557" }
%"class.std::__1::__compressed_pair.557" = type { %"struct.std::__1::__compressed_pair_elem.558", %"struct.std::__1::__compressed_pair_elem.560" }
%"struct.std::__1::__compressed_pair_elem.558" = type { %"struct.std::__1::__hash_node_base.559"** }
%"struct.std::__1::__hash_node_base.559" = type { %"struct.std::__1::__hash_node_base.559"* }
%"struct.std::__1::__compressed_pair_elem.560" = type { %"class.std::__1::__bucket_list_deallocator.561" }
%"class.std::__1::__bucket_list_deallocator.561" = type { %"class.std::__1::__compressed_pair.562" }
%"class.std::__1::__compressed_pair.562" = type { %"struct.std::__1::__compressed_pair_elem.7" }
%"class.std::__1::__compressed_pair.566" = type { %"struct.std::__1::__compressed_pair_elem.567" }
%"struct.std::__1::__compressed_pair_elem.567" = type { %"struct.std::__1::__hash_node_base.559" }
%"class.std::__1::__compressed_pair.571" = type { %"struct.std::__1::__compressed_pair_elem.7" }
%"class.std::__1::__compressed_pair.574" = type { %"struct.std::__1::__compressed_pair_elem.17" }
%"class.std::__1::unordered_map.604" = type { %"class.std::__1::__hash_table.605" }
%"class.std::__1::__hash_table.605" = type <{ %"class.std::__1::unique_ptr.606", %"class.std::__1::__compressed_pair.616", %"class.std::__1::__compressed_pair.621", %"class.std::__1::__compressed_pair.626", [4 x i8] }>
%"class.std::__1::unique_ptr.606" = type { %"class.std::__1::__compressed_pair.607" }
%"class.std::__1::__compressed_pair.607" = type { %"struct.std::__1::__compressed_pair_elem.608", %"struct.std::__1::__compressed_pair_elem.610" }
%"struct.std::__1::__compressed_pair_elem.608" = type { %"struct.std::__1::__hash_node_base.609"** }
%"struct.std::__1::__hash_node_base.609" = type { %"struct.std::__1::__hash_node_base.609"* }
%"struct.std::__1::__compressed_pair_elem.610" = type { %"class.std::__1::__bucket_list_deallocator.611" }
%"class.std::__1::__bucket_list_deallocator.611" = type { %"class.std::__1::__compressed_pair.612" }
%"class.std::__1::__compressed_pair.612" = type { %"struct.std::__1::__compressed_pair_elem.7" }
%"class.std::__1::__compressed_pair.616" = type { %"struct.std::__1::__compressed_pair_elem.617" }
%"struct.std::__1::__compressed_pair_elem.617" = type { %"struct.std::__1::__hash_node_base.609" }
%"class.std::__1::__compressed_pair.621" = type { %"struct.std::__1::__compressed_pair_elem.7" }
%"class.std::__1::__compressed_pair.626" = type { %"struct.std::__1::__compressed_pair_elem.17" }
%"class.std::__1::vector.632" = type { %"class.std::__1::__vector_base.633" }
%"class.std::__1::__vector_base.633" = type { %"class.v8::internal::HeapObjectAllocationTracker"**, %"class.v8::internal::HeapObjectAllocationTracker"**, %"class.std::__1::__compressed_pair.634" }
%"class.v8::internal::HeapObjectAllocationTracker" = type { i32 (...)** }
%"class.std::__1::__compressed_pair.634" = type { %"struct.std::__1::__compressed_pair_elem.635" }
%"struct.std::__1::__compressed_pair_elem.635" = type { %"class.v8::internal::HeapObjectAllocationTracker"** }
%"class.std::__1::unique_ptr.639" = type { %"class.std::__1::__compressed_pair.640" }
%"class.std::__1::__compressed_pair.640" = type { %"struct.std::__1::__compressed_pair_elem.641" }
%"struct.std::__1::__compressed_pair_elem.641" = type { %"class.v8::internal::third_party_heap::Heap"* }
%"class.v8::internal::third_party_heap::Heap" = type { i8 }
%"class.v8::internal::ReadOnlyHeap" = type { i32 (...)**, i8, %"class.v8::internal::ReadOnlySpace"*, %"class.std::__1::vector.541" }
%"class.std::__1::shared_ptr.645" = type { %"class.v8::internal::ReadOnlyArtifacts"*, %"class.std::__1::__shared_weak_count"* }
%"class.v8::internal::ReadOnlyArtifacts" = type { i32 (...)**, %"class.std::__1::vector.139", %"class.v8::internal::AllocationStats", %"class.std::__1::unique_ptr.646", %"class.std::__1::unique_ptr.660" }
%"class.std::__1::unique_ptr.646" = type { %"class.std::__1::__compressed_pair.647" }
%"class.std::__1::__compressed_pair.647" = type { %"struct.std::__1::__compressed_pair_elem.648" }
%"struct.std::__1::__compressed_pair_elem.648" = type { %"class.v8::internal::SharedReadOnlySpace"* }
%"class.v8::internal::SharedReadOnlySpace" = type { %"class.v8::internal::ReadOnlySpace", %"class.std::__1::vector.649" }
%"class.std::__1::vector.649" = type { %"class.std::__1::__vector_base.650" }
%"class.std::__1::__vector_base.650" = type { %"class.std::__1::unique_ptr.651"*, %"class.std::__1::unique_ptr.651"*, %"class.std::__1::__compressed_pair.652" }
%"class.std::__1::unique_ptr.651" = type { %"class.std::__1::__compressed_pair.1550" }
%"class.std::__1::__compressed_pair.1550" = type { %"struct.std::__1::__compressed_pair_elem.1551" }
%"struct.std::__1::__compressed_pair_elem.1551" = type { %"class.v8::PageAllocator::SharedMemoryMapping"* }
%"class.v8::PageAllocator::SharedMemoryMapping" = type { i32 (...)** }
%"class.std::__1::__compressed_pair.652" = type { %"struct.std::__1::__compressed_pair_elem.653" }
%"struct.std::__1::__compressed_pair_elem.653" = type { %"class.std::__1::unique_ptr.651"* }
%"class.std::__1::unique_ptr.660" = type { %"class.std::__1::__compressed_pair.661" }
%"class.std::__1::__compressed_pair.661" = type { %"struct.std::__1::__compressed_pair_elem.662" }
%"struct.std::__1::__compressed_pair_elem.662" = type { %"class.v8::internal::ReadOnlyHeap"* }
%"class.std::__1::unique_ptr.666" = type { %"class.std::__1::__compressed_pair.667" }
%"class.std::__1::__compressed_pair.667" = type { %"struct.std::__1::__compressed_pair_elem.668" }
%"struct.std::__1::__compressed_pair_elem.668" = type { %"class.v8::internal::StringTable"* }
%"class.v8::internal::StringTable" = type { %"struct.std::__1::atomic.669", %"class.v8::base::Mutex" }
%"struct.std::__1::atomic.669" = type { %"struct.std::__1::__atomic_base.670" }
%"struct.std::__1::__atomic_base.670" = type { %"struct.std::__1::__cxx_atomic_impl.671" }
%"struct.std::__1::__cxx_atomic_impl.671" = type { %"struct.std::__1::__cxx_atomic_base_impl.672" }
%"struct.std::__1::__cxx_atomic_base_impl.672" = type { %"class.v8::internal::StringTable::Data"* }
%"class.v8::internal::StringTable::Data" = type opaque
%"class.v8::internal::Isolate::EntryStackItem" = type { i32, %"class.v8::internal::Isolate::PerIsolateThreadData"*, %"class.v8::internal::Isolate"*, %"class.v8::internal::Isolate::EntryStackItem"* }
%"class.v8::internal::Isolate::PerIsolateThreadData" = type { %"class.v8::internal::Isolate"*, %"class.v8::internal::ThreadId", i64, %"class.v8::internal::ThreadState"* }
%"class.v8::internal::ThreadState" = type opaque
%"class.v8::internal::StringStream" = type opaque
%"class.v8::internal::Bootstrapper" = type { %"class.v8::internal::Isolate"*, i32, %"class.v8::internal::SourceCodeCache" }
%"class.v8::internal::SourceCodeCache" = type { i32, %"class.v8::internal::FixedArray" }
%"class.v8::internal::FixedArray" = type { %"class.v8::internal::TorqueGeneratedFixedArray" }
%"class.v8::internal::TorqueGeneratedFixedArray" = type { %"class.v8::internal::FixedArrayBase" }
%"class.v8::internal::FixedArrayBase" = type { %"class.v8::internal::TorqueGeneratedFixedArrayBase" }
%"class.v8::internal::TorqueGeneratedFixedArrayBase" = type { %"class.v8::internal::HeapObject" }
%"class.v8::internal::RuntimeProfiler" = type opaque
%"class.v8::internal::CompilationCache" = type opaque
%"class.std::__1::shared_ptr.676" = type { %"class.v8::internal::Counters"*, %"class.std::__1::__shared_weak_count"* }
%"class.v8::internal::Counters" = type { %"class.std::__1::enable_shared_from_this", %"class.v8::internal::Histogram", %"class.v8::internal::Histogram", %"class.v8::internal::Histogram", %"class.v8::internal::Histogram", %"class.v8::internal::Histogram", %"class.v8::internal::Histogram", %"class.v8::internal::Histogram", %"class.v8::internal::Histogram", %"class.v8::internal::Histogram", %"class.v8::internal::Histogram", %"class.v8::internal::Histogram", %"class.v8::internal::Histogram", %"class.v8::internal::Histogram", %"class.v8::internal::Histogram", %"class.v8::internal::Histogram", %"class.v8::internal::Histogram", %"class.v8::internal::Histogram", %"class.v8::internal::Histogram", %"class.v8::internal::Histogram", %"class.v8::internal::Histogram", %"class.v8::internal::Histogram", %"class.v8::internal::Histogram", %"class.v8::internal::Histogram", %"class.v8::internal::Histogram", %"class.v8::internal::Histogram", %"class.v8::internal::Histogram", %"class.v8::internal::Histogram", %"class.v8::internal::Histogram", %"class.v8::internal::Histogram", %"class.v8::internal::Histogram", %"class.v8::internal::Histogram", %"class.v8::internal::Histogram", %"class.v8::internal::Histogram", %"class.v8::internal::Histogram", %"class.v8::internal::Histogram", %"class.v8::internal::Histogram", %"class.v8::internal::Histogram", %"class.v8::internal::Histogram", %"class.v8::internal::Histogram", %"class.v8::internal::Histogram", %"class.v8::internal::Histogram", %"class.v8::internal::Histogram", %"class.v8::internal::Histogram", %"class.v8::internal::Histogram", %"class.v8::internal::Histogram", %"class.v8::internal::Histogram", %"class.v8::internal::Histogram", %"class.v8::internal::Histogram", %"class.v8::internal::Histogram", %"class.v8::internal::Histogram", %"class.v8::internal::Histogram", %"class.v8::internal::Histogram", %"class.v8::internal::Histogram", %"class.v8::internal::Histogram", %"class.v8::internal::Histogram", %"class.v8::internal::HistogramTimer", %"class.v8::internal::HistogramTimer", %"class.v8::internal::HistogramTimer", %"class.v8::internal::HistogramTimer", %"class.v8::internal::HistogramTimer", %"class.v8::internal::HistogramTimer", %"class.v8::internal::HistogramTimer", %"class.v8::internal::HistogramTimer", %"class.v8::internal::HistogramTimer", %"class.v8::internal::HistogramTimer", %"class.v8::internal::HistogramTimer", %"class.v8::internal::HistogramTimer", %"class.v8::internal::TimedHistogram", %"class.v8::internal::TimedHistogram", %"class.v8::internal::TimedHistogram", %"class.v8::internal::TimedHistogram", %"class.v8::internal::TimedHistogram", %"class.v8::internal::TimedHistogram", %"class.v8::internal::TimedHistogram", %"class.v8::internal::TimedHistogram", %"class.v8::internal::TimedHistogram", %"class.v8::internal::TimedHistogram", %"class.v8::internal::TimedHistogram", %"class.v8::internal::TimedHistogram", %"class.v8::internal::TimedHistogram", %"class.v8::internal::TimedHistogram", %"class.v8::internal::TimedHistogram", %"class.v8::internal::TimedHistogram", %"class.v8::internal::TimedHistogram", %"class.v8::internal::TimedHistogram", %"class.v8::internal::TimedHistogram", %"class.v8::internal::TimedHistogram", %"class.v8::internal::TimedHistogram", %"class.v8::internal::TimedHistogram", %"class.v8::internal::TimedHistogram", %"class.v8::internal::TimedHistogram", %"class.v8::internal::TimedHistogram", %"class.v8::internal::TimedHistogram", %"class.v8::internal::TimedHistogram", %"class.v8::internal::TimedHistogram", %"class.v8::internal::TimedHistogram", %"class.v8::internal::TimedHistogram", %"class.v8::internal::TimedHistogram", %"class.v8::internal::TimedHistogram", %"class.v8::internal::TimedHistogram", %"class.v8::internal::TimedHistogram", %"class.v8::internal::TimedHistogram", %"class.v8::internal::TimedHistogram", %"class.v8::internal::TimedHistogram", %"class.v8::internal::TimedHistogram", %"class.v8::internal::TimedHistogram", %"class.v8::internal::TimedHistogram", %"class.v8::internal::TimedHistogram", %"class.v8::internal::TimedHistogram", %"class.v8::internal::TimedHistogram", %"class.v8::internal::TimedHistogram", %"class.v8::internal::TimedHistogram", %"class.v8::internal::TimedHistogram", %"class.v8::internal::TimedHistogram", %"class.v8::internal::TimedHistogram", %"class.v8::internal::TimedHistogram", %"class.v8::internal::TimedHistogram", %"class.v8::internal::TimedHistogram", %"class.v8::internal::TimedHistogram", %"class.v8::internal::AggregatableHistogramTimer", %"class.v8::internal::Histogram", %"class.v8::internal::Histogram", %"class.v8::internal::Histogram", %"class.v8::internal::Histogram", %"class.v8::internal::Histogram", %"class.v8::internal::Histogram", %"class.v8::internal::Histogram", %"class.v8::internal::Histogram", %"class.v8::internal::Histogram", %"class.v8::internal::Histogram", %"class.v8::internal::StatsCounter", %"class.v8::internal::StatsCounter", %"class.v8::internal::StatsCounter", %"class.v8::internal::StatsCounter", %"class.v8::internal::StatsCounter", %"class.v8::internal::StatsCounter", %"class.v8::internal::StatsCounter", %"class.v8::internal::StatsCounter", %"class.v8::internal::StatsCounter", %"class.v8::internal::StatsCounter", %"class.v8::internal::StatsCounter", %"class.v8::internal::StatsCounter", %"class.v8::internal::StatsCounter", %"class.v8::internal::StatsCounter", %"class.v8::internal::StatsCounter", %"class.v8::internal::StatsCounter", %"class.v8::internal::StatsCounter", %"class.v8::internal::StatsCounter", %"class.v8::internal::StatsCounter", %"class.v8::internal::StatsCounter", %"class.v8::internal::StatsCounter", %"class.v8::internal::StatsCounter", %"class.v8::internal::StatsCounter", %"class.v8::internal::StatsCounter", %"class.v8::internal::StatsCounter", %"class.v8::internal::StatsCounter", %"class.v8::internal::StatsCounter", %"class.v8::internal::StatsCounter", %"class.v8::internal::StatsCounter", %"class.v8::internal::StatsCounter", %"class.v8::internal::StatsCounter", %"class.v8::internal::StatsCounter", %"class.v8::internal::StatsCounter", %"class.v8::internal::StatsCounter", %"class.v8::internal::StatsCounter", %"class.v8::internal::StatsCounter", %"class.v8::internal::StatsCounter", %"class.v8::internal::StatsCounter", %"class.v8::internal::StatsCounter", %"class.v8::internal::StatsCounter", %"class.v8::internal::StatsCounter", %"class.v8::internal::StatsCounter", %"class.v8::internal::StatsCounter", %"class.v8::internal::StatsCounter", %"class.v8::internal::StatsCounter", %"class.v8::internal::StatsCounter", %"class.v8::internal::StatsCounter", %"class.v8::internal::StatsCounter", %"class.v8::internal::StatsCounter", %"class.v8::internal::StatsCounter", %"class.v8::internal::StatsCounter", %"class.v8::internal::StatsCounter", %"class.v8::internal::StatsCounter", %"class.v8::internal::StatsCounter", %"class.v8::internal::StatsCounter", %"class.v8::internal::StatsCounter", %"class.v8::internal::StatsCounter", %"class.v8::internal::StatsCounter", %"class.v8::internal::StatsCounter", %"class.v8::internal::StatsCounter", %"class.v8::internal::StatsCounter", %"class.v8::internal::StatsCounter", %"class.v8::internal::StatsCounter", %"class.v8::internal::StatsCounter", %"class.v8::internal::StatsCounter", %"class.v8::internal::StatsCounter", %"class.v8::internal::StatsCounter", %"class.v8::internal::StatsCounter", %"class.v8::internal::StatsCounter", %"class.v8::internal::StatsCounterThreadSafe", %"class.v8::internal::StatsCounterThreadSafe", %"class.v8::internal::StatsCounterThreadSafe", %"class.v8::internal::StatsCounter", %"class.v8::internal::StatsCounter", %"class.v8::internal::StatsCounter", %"class.v8::internal::StatsCounter", %"class.v8::internal::StatsCounter", %"class.v8::internal::StatsCounter", %"class.v8::internal::StatsCounter", %"class.v8::internal::StatsCounter", %"class.v8::internal::StatsCounter", %"class.v8::internal::StatsCounter", %"class.v8::internal::StatsCounter", %"class.v8::internal::StatsCounter", %"class.v8::internal::StatsCounter", %"class.v8::internal::StatsCounter", %"class.v8::internal::StatsCounter", %"class.v8::internal::StatsCounter", %"class.v8::internal::StatsCounter", %"class.v8::internal::StatsCounter", %"class.v8::internal::StatsCounter", %"class.v8::internal::StatsCounter", %"class.v8::internal::StatsCounter", %"class.v8::internal::StatsCounter", %"class.v8::internal::StatsCounter", %"class.v8::internal::StatsCounter", %"class.v8::internal::StatsCounter", %"class.v8::internal::StatsCounter", %"class.v8::internal::StatsCounter", %"class.v8::internal::StatsCounter", %"class.v8::internal::StatsCounter", %"class.v8::internal::StatsCounter", %"class.v8::internal::StatsCounter", %"class.v8::internal::StatsCounter", %"class.v8::internal::StatsCounter", %"class.v8::internal::StatsCounter", %"class.v8::internal::StatsCounter", %"class.v8::internal::StatsCounter", %"class.v8::internal::StatsCounter", %"class.v8::internal::StatsCounter", %"class.v8::internal::StatsCounter", %"class.v8::internal::StatsCounter", %"class.v8::internal::StatsCounter", %"class.v8::internal::StatsCounter", %"class.v8::internal::StatsCounter", %"class.v8::internal::StatsCounter", %"class.v8::internal::StatsCounter", %"class.v8::internal::StatsCounter", %"class.v8::internal::StatsCounter", %"class.v8::internal::StatsCounter", %"class.v8::internal::StatsCounter", %"class.v8::internal::StatsCounter", %"class.v8::internal::StatsCounter", %"class.v8::internal::StatsCounter", %"class.v8::internal::StatsCounter", %"class.v8::internal::StatsCounter", %"class.v8::internal::StatsCounter", %"class.v8::internal::StatsCounter", %"class.v8::internal::StatsCounter", %"class.v8::internal::StatsCounter", %"class.v8::internal::StatsCounter", %"class.v8::internal::StatsCounter", %"class.v8::internal::StatsCounter", %"class.v8::internal::StatsCounter", %"class.v8::internal::StatsCounter", %"class.v8::internal::StatsCounter", %"class.v8::internal::StatsCounter", %"class.v8::internal::StatsCounter", %"class.v8::internal::StatsCounter", %"class.v8::internal::StatsCounter", %"class.v8::internal::StatsCounter", %"class.v8::internal::StatsCounter", %"class.v8::internal::StatsCounter", %"class.v8::internal::StatsCounter", %"class.v8::internal::StatsCounter", %"class.v8::internal::StatsCounter", %"class.v8::internal::StatsCounter", %"class.v8::internal::StatsCounter", %"class.v8::internal::StatsCounter", %"class.v8::internal::StatsCounter", %"class.v8::internal::StatsCounter", %"class.v8::internal::StatsCounter", %"class.v8::internal::StatsCounter", %"class.v8::internal::StatsCounter", %"class.v8::internal::StatsCounter", %"class.v8::internal::StatsCounter", %"class.v8::internal::StatsCounter", %"class.v8::internal::StatsCounter", %"class.v8::internal::StatsCounter", %"class.v8::internal::StatsCounter", %"class.v8::internal::StatsCounter", %"class.v8::internal::StatsCounter", %"class.v8::internal::StatsCounter", %"class.v8::internal::StatsCounter", %"class.v8::internal::StatsCounter", %"class.v8::internal::StatsCounter", %"class.v8::internal::StatsCounter", %"class.v8::internal::StatsCounter", %"class.v8::internal::StatsCounter", %"class.v8::internal::StatsCounter", %"class.v8::internal::StatsCounter", %"class.v8::internal::StatsCounter", %"class.v8::internal::StatsCounter", %"class.v8::internal::StatsCounter", %"class.v8::internal::StatsCounter", %"class.v8::internal::StatsCounter", %"class.v8::internal::StatsCounter", %"class.v8::internal::StatsCounter", %"class.v8::internal::StatsCounter", %"class.v8::internal::StatsCounter", %"class.v8::internal::StatsCounter", %"class.v8::internal::StatsCounter", %"class.v8::internal::StatsCounter", %"class.v8::internal::StatsCounter", %"class.v8::internal::StatsCounter", %"class.v8::internal::StatsCounter", %"class.v8::internal::StatsCounter", %"class.v8::internal::StatsCounter", %"class.v8::internal::StatsCounter", %"class.v8::internal::StatsCounter", %"class.v8::internal::StatsCounter", %"class.v8::internal::StatsCounter", %"class.v8::internal::StatsCounter", %"class.v8::internal::StatsCounter", %"class.v8::internal::StatsCounter", %"class.v8::internal::StatsCounter", %"class.v8::internal::StatsCounter", %"class.v8::internal::StatsCounter", %"class.v8::internal::StatsCounter", %"class.v8::internal::StatsCounter", %"class.v8::internal::StatsCounter", %"class.v8::internal::StatsCounter", %"class.v8::internal::StatsCounter", %"class.v8::internal::StatsCounter", %"class.v8::internal::StatsCounter", %"class.v8::internal::StatsCounter", %"class.v8::internal::StatsCounter", %"class.v8::internal::StatsCounter", %"class.v8::internal::StatsCounter", %"class.v8::internal::StatsCounter", %"class.v8::internal::StatsCounter", %"class.v8::internal::StatsCounter", %"class.v8::internal::StatsCounter", %"class.v8::internal::StatsCounter", %"class.v8::internal::StatsCounter", %"class.v8::internal::StatsCounter", %"class.v8::internal::StatsCounter", %"class.v8::internal::StatsCounter", %"class.v8::internal::StatsCounter", %"class.v8::internal::StatsCounter", %"class.v8::internal::StatsCounter", %"class.v8::internal::StatsCounter", %"class.v8::internal::StatsCounter", %"class.v8::internal::StatsCounter", %"class.v8::internal::StatsCounter", %"class.v8::internal::StatsCounter", %"class.v8::internal::StatsCounter", %"class.v8::internal::StatsCounter", %"class.v8::internal::StatsCounter", %"class.v8::internal::StatsCounter", %"class.v8::internal::StatsCounter", %"class.v8::internal::StatsCounter", %"class.v8::internal::StatsCounter", %"class.v8::internal::StatsCounter", %"class.v8::internal::StatsCounter", %"class.v8::internal::StatsCounter", %"class.v8::internal::StatsCounter", %"class.v8::internal::StatsCounter", %"class.v8::internal::StatsCounter", %"class.v8::internal::StatsCounter", %"class.v8::internal::StatsCounter", %"class.v8::internal::StatsCounter", %"class.v8::internal::StatsCounter", %"class.v8::internal::StatsCounter", %"class.v8::internal::StatsCounter", %"class.v8::internal::StatsCounter", %"class.v8::internal::StatsCounter", %"class.v8::internal::StatsCounter", %"class.v8::internal::StatsCounter", %"class.v8::internal::StatsCounter", %"class.v8::internal::StatsCounter", %"class.v8::internal::StatsCounter", %"class.v8::internal::StatsCounter", %"class.v8::internal::StatsCounter", %"class.v8::internal::StatsCounter", %"class.v8::internal::StatsCounter", %"class.v8::internal::StatsCounter", %"class.v8::internal::StatsCounter", %"class.v8::internal::StatsCounter", %"class.v8::internal::StatsCounter", %"class.v8::internal::StatsCounter", %"class.v8::internal::StatsCounter", %"class.v8::internal::StatsCounter", %"class.v8::internal::StatsCounter", %"class.v8::internal::StatsCounter", %"class.v8::internal::StatsCounter", %"class.v8::internal::StatsCounter", %"class.v8::internal::StatsCounter", %"class.v8::internal::StatsCounter", %"class.v8::internal::StatsCounter", %"class.v8::internal::StatsCounter", %"class.v8::internal::StatsCounter", %"class.v8::internal::StatsCounter", %"class.v8::internal::StatsCounter", %"class.v8::internal::StatsCounter", %"class.v8::internal::StatsCounter", %"class.v8::internal::StatsCounter", %"class.v8::internal::StatsCounter", %"class.v8::internal::StatsCounter", %"class.v8::internal::StatsCounter", %"class.v8::internal::StatsCounter", %"class.v8::internal::StatsCounter", %"class.v8::internal::StatsCounter", %"class.v8::internal::StatsCounter", %"class.v8::internal::StatsCounter", %"class.v8::internal::StatsCounter", %"class.v8::internal::StatsCounter", %"class.v8::internal::StatsCounter", %"class.v8::internal::StatsCounter", %"class.v8::internal::StatsCounter", %"class.v8::internal::StatsCounter", %"class.v8::internal::StatsCounter", %"class.v8::internal::StatsCounter", %"class.v8::internal::StatsCounter", %"class.v8::internal::StatsCounter", %"class.v8::internal::StatsCounter", %"class.v8::internal::StatsCounter", %"class.v8::internal::StatsCounter", %"class.v8::internal::StatsCounter", %"class.v8::internal::StatsCounter", %"class.v8::internal::StatsCounter", %"class.v8::internal::StatsCounter", %"class.v8::internal::StatsCounter", %"class.v8::internal::StatsCounter", %"class.v8::internal::StatsCounter", %"class.v8::internal::StatsCounter", %"class.v8::internal::StatsCounter", %"class.v8::internal::StatsCounter", %"class.v8::internal::StatsCounter", %"class.v8::internal::StatsCounter", %"class.v8::internal::StatsCounter", %"class.v8::internal::StatsCounter", %"class.v8::internal::StatsCounter", %"class.v8::internal::StatsCounter", %"class.v8::internal::StatsCounter", %"class.v8::internal::StatsCounter", %"class.v8::internal::StatsCounter", %"class.v8::internal::StatsCounter", %"class.v8::internal::StatsCounter", %"class.v8::internal::StatsCounter", %"class.v8::internal::StatsCounter", %"class.v8::internal::StatsCounter", %"class.v8::internal::StatsCounter", %"class.v8::internal::StatsCounter", %"class.v8::internal::StatsCounter", %"class.v8::internal::StatsCounter", %"class.v8::internal::StatsCounter", %"class.v8::internal::StatsCounter", %"class.v8::internal::StatsCounter", %"class.v8::internal::StatsCounter", %"class.v8::internal::StatsCounter", %"class.v8::internal::StatsCounter", %"class.v8::internal::StatsCounter", %"class.v8::internal::StatsCounter", %"class.v8::internal::StatsCounter", %"class.v8::internal::StatsCounter", %"class.v8::internal::StatsCounter", %"class.v8::internal::StatsCounter", %"class.v8::internal::StatsCounter", %"class.v8::internal::StatsCounter", %"class.v8::internal::StatsCounter", %"class.v8::internal::StatsCounter", %"class.v8::internal::StatsCounter", %"class.v8::internal::StatsCounter", %"class.v8::internal::StatsCounter", %"class.v8::internal::StatsCounter", %"class.v8::internal::StatsCounter", %"class.v8::internal::StatsCounter", %"class.v8::internal::StatsCounter", %"class.v8::internal::StatsCounter", %"class.v8::internal::StatsCounter", %"class.v8::internal::StatsCounter", %"class.v8::internal::StatsCounter", %"class.v8::internal::StatsCounter", %"class.v8::internal::StatsCounter", %"class.v8::internal::StatsCounter", %"class.v8::internal::StatsCounter", %"class.v8::internal::StatsCounter", %"class.v8::internal::StatsCounter", %"class.v8::internal::StatsCounter", %"class.v8::internal::StatsCounter", %"class.v8::internal::StatsCounter", %"class.v8::internal::StatsCounter", %"class.v8::internal::StatsCounter", %"class.v8::internal::StatsCounter", %"class.v8::internal::StatsCounter", %"class.v8::internal::StatsCounter", %"class.v8::internal::StatsCounter", %"class.v8::internal::StatsCounter", %"class.v8::internal::StatsCounter", %"class.v8::internal::StatsCounter", %"class.v8::internal::StatsCounter", %"class.v8::internal::StatsCounter", %"class.v8::internal::StatsCounter", %"class.v8::internal::StatsCounter", %"class.v8::internal::StatsCounter", %"class.v8::internal::StatsCounter", %"class.v8::internal::StatsCounter", %"class.v8::internal::StatsCounter", %"class.v8::internal::StatsCounter", %"class.v8::internal::StatsCounter", %"class.v8::internal::StatsCounter", %"class.v8::internal::StatsCounter", %"class.v8::internal::StatsCounter", %"class.v8::internal::StatsCounter", %"class.v8::internal::StatsCounter", %"class.v8::internal::StatsCounter", %"class.v8::internal::StatsCounter", %"class.v8::internal::StatsCounter", %"class.v8::internal::StatsCounter", %"class.v8::internal::StatsCounter", %"class.v8::internal::StatsCounter", %"class.v8::internal::StatsCounter", %"class.v8::internal::StatsCounter", %"class.v8::internal::StatsCounter", %"class.v8::internal::StatsCounter", %"class.v8::internal::StatsCounter", %"class.v8::internal::StatsCounter", %"class.v8::internal::StatsCounter", %"class.v8::internal::StatsCounter", %"class.v8::internal::StatsCounter", %"class.v8::internal::StatsCounter", %"class.v8::internal::StatsCounter", %"class.v8::internal::StatsCounter", %"class.v8::internal::StatsCounter", %"class.v8::internal::StatsCounter", %"class.v8::internal::StatsCounter", %"class.v8::internal::StatsCounter", %"class.v8::internal::StatsCounter", %"class.v8::internal::StatsCounter", %"class.v8::internal::StatsCounter", %"class.v8::internal::StatsCounter", %"class.v8::internal::StatsCounter", %"class.v8::internal::StatsCounter", %"class.v8::internal::StatsCounter", %"class.v8::internal::StatsCounter", %"class.v8::internal::StatsCounter", %"class.v8::internal::StatsCounter", %"class.v8::internal::StatsCounter", %"class.v8::internal::StatsCounter", %"class.v8::internal::StatsCounter", %"class.v8::internal::StatsCounter", %"class.v8::internal::StatsCounter", %"class.v8::internal::StatsCounter", %"class.v8::internal::StatsCounter", %"class.v8::internal::StatsCounter", %"class.v8::internal::StatsCounter", %"class.v8::internal::StatsCounter", %"class.v8::internal::StatsCounter", %"class.v8::internal::StatsCounter", %"class.v8::internal::StatsCounter", %"class.v8::internal::StatsCounter", %"class.v8::internal::StatsCounter", %"class.v8::internal::StatsCounter", %"class.v8::internal::StatsCounter", %"class.v8::internal::StatsCounter", %"class.v8::internal::StatsCounter", %"class.v8::internal::StatsCounter", %"class.v8::internal::StatsCounter", %"class.v8::internal::StatsCounter", %"class.v8::internal::StatsCounter", %"class.v8::internal::StatsCounter", %"class.v8::internal::StatsCounter", %"class.v8::internal::StatsCounter", %"class.v8::internal::StatsCounter", %"class.v8::internal::StatsCounter", %"class.v8::internal::StatsCounter", %"class.v8::internal::StatsCounter", %"class.v8::internal::StatsCounter", %"class.v8::internal::StatsCounter", %"class.v8::internal::StatsCounter", %"class.v8::internal::StatsCounter", %"class.v8::internal::StatsCounter", %"class.v8::internal::StatsCounter", %"class.v8::internal::StatsCounter", %"class.v8::internal::StatsCounter", %"class.v8::internal::StatsCounter", %"class.v8::internal::StatsCounter", %"class.v8::internal::StatsCounter", %"class.v8::internal::StatsCounter", %"class.v8::internal::StatsCounter", %"class.v8::internal::StatsCounter", %"class.v8::internal::StatsCounter", %"class.v8::internal::StatsCounter", %"class.v8::internal::StatsCounter", %"class.v8::internal::StatsCounter", %"class.v8::internal::StatsCounter", %"class.v8::internal::StatsCounter", %"class.v8::internal::StatsCounter", %"class.v8::internal::StatsCounter", %"class.v8::internal::StatsCounter", %"class.v8::internal::StatsCounter", %"class.v8::internal::StatsCounter", %"class.v8::internal::StatsCounter", %"class.v8::internal::StatsCounter", %"class.v8::internal::StatsCounter", %"class.v8::internal::StatsCounter", %"class.v8::internal::StatsCounter", %"class.v8::internal::StatsCounter", %"class.v8::internal::StatsCounter", %"class.v8::internal::StatsCounter", %"class.v8::internal::StatsCounter", %"class.v8::internal::StatsCounter", %"class.v8::internal::StatsCounter", %"class.v8::internal::StatsCounter", %"class.v8::internal::StatsCounter", %"class.v8::internal::StatsCounter", %"class.v8::internal::StatsCounter", %"class.v8::internal::StatsCounter", %"class.v8::internal::StatsCounter", %"class.v8::internal::StatsCounter", %"class.v8::internal::StatsCounter", %"class.v8::internal::StatsCounter", %"class.v8::internal::StatsCounter", %"class.v8::internal::StatsCounter", %"class.v8::internal::StatsCounter", %"class.v8::internal::StatsCounter", %"class.v8::internal::StatsCounter", %"class.v8::internal::StatsCounter", %"class.v8::internal::StatsCounter", %"class.v8::internal::StatsCounter", %"class.v8::internal::StatsCounter", %"class.v8::internal::StatsCounter", %"class.v8::internal::StatsCounter", %"class.v8::internal::StatsCounter", %"class.v8::internal::StatsCounter", %"class.v8::internal::StatsCounter", %"class.v8::internal::StatsCounter", %"class.v8::internal::StatsCounter", %"class.v8::internal::StatsCounter", %"class.v8::internal::StatsCounter", %"class.v8::internal::StatsCounter", %"class.v8::internal::StatsCounter", %"class.v8::internal::StatsCounter", %"class.v8::internal::StatsCounter", %"class.v8::internal::StatsCounter", %"class.v8::internal::StatsCounter", %"class.v8::internal::StatsCounter", %"class.v8::internal::StatsCounter", %"class.v8::internal::StatsCounter", %"class.v8::internal::StatsCounter", %"class.v8::internal::StatsCounter", %"class.v8::internal::StatsCounter", %"class.v8::internal::StatsCounter", %"class.v8::internal::StatsCounter", %"class.v8::internal::StatsCounter", %"class.v8::internal::StatsCounter", %"class.v8::internal::StatsCounter", %"class.v8::internal::StatsCounter", %"class.v8::internal::StatsCounter", %"class.v8::internal::StatsCounter", %"class.v8::internal::StatsCounter", %"class.v8::internal::StatsCounter", %"class.v8::internal::StatsCounter", %"class.v8::internal::StatsCounter", %"class.v8::internal::StatsCounter", %"class.v8::internal::StatsCounter", %"class.v8::internal::StatsCounter", %"class.v8::internal::StatsCounter", %"class.v8::internal::StatsCounter", %"class.v8::internal::StatsCounter", %"class.v8::internal::StatsCounter", %"class.v8::internal::StatsCounter", %"class.v8::internal::StatsCounter", %"class.v8::internal::StatsCounter", %"class.v8::internal::StatsCounter", %"class.v8::internal::StatsCounter", %"class.v8::internal::StatsCounter", %"class.v8::internal::StatsCounter", %"class.v8::internal::StatsCounter", %"class.v8::internal::StatsCounter", %"class.v8::internal::StatsCounter", %"class.v8::internal::StatsCounter", %"class.v8::internal::StatsCounter", %"class.v8::internal::StatsCounter", %"class.v8::internal::StatsCounter", %"class.v8::internal::StatsCounter", %"class.v8::internal::StatsCounter", %"class.v8::internal::StatsCounter", %"class.v8::internal::StatsCounter", %"class.v8::internal::StatsCounter", %"class.v8::internal::StatsCounter", %"class.v8::internal::StatsCounter", %"class.v8::internal::StatsCounter", %"class.v8::internal::StatsCounter", %"class.v8::internal::StatsCounter", %"class.v8::internal::StatsCounter", %"class.v8::internal::StatsCounter", %"class.v8::internal::StatsCounter", %"class.v8::internal::StatsCounter", %"class.v8::internal::StatsCounter", %"class.v8::internal::StatsCounter", %"class.v8::internal::StatsCounter", %"class.v8::internal::StatsCounter", %"class.v8::internal::StatsCounter", %"class.v8::internal::StatsCounter", %"class.v8::internal::StatsCounter", %"class.v8::internal::StatsCounter", %"class.v8::internal::StatsCounter", %"class.v8::internal::StatsCounter", %"class.v8::internal::StatsCounter", %"class.v8::internal::StatsCounter", %"class.v8::internal::StatsCounter", %"class.v8::internal::StatsCounter", %"class.v8::internal::StatsCounter", %"class.v8::internal::StatsCounter", %"class.v8::internal::StatsCounter", %"class.v8::internal::StatsCounter", %"class.v8::internal::StatsCounter", %"class.v8::internal::StatsCounter", %"class.v8::internal::StatsCounter", %"class.v8::internal::StatsCounter", %"class.v8::internal::StatsCounter", %"class.v8::internal::StatsCounter", %"class.v8::internal::StatsCounter", %"class.v8::internal::StatsCounter", %"class.v8::internal::StatsCounter", %"class.v8::internal::StatsCounter", %"class.v8::internal::StatsCounter", %"class.v8::internal::StatsCounter", %"class.v8::internal::StatsCounter", %"class.v8::internal::StatsCounter", %"class.v8::internal::StatsCounter", %"class.v8::internal::StatsCounter", %"class.v8::internal::StatsCounter", %"class.v8::internal::StatsCounter", %"class.v8::internal::StatsCounter", %"class.v8::internal::StatsCounter", %"class.v8::internal::StatsCounter", %"class.v8::internal::StatsCounter", %"class.v8::internal::StatsCounter", %"class.v8::internal::StatsCounter", %"class.v8::internal::StatsCounter", %"class.v8::internal::StatsCounter", %"class.v8::internal::StatsCounter", %"class.v8::internal::StatsCounter", %"class.v8::internal::StatsCounter", %"class.v8::internal::StatsCounter", %"class.v8::internal::StatsCounter", %"class.v8::internal::StatsCounter", %"class.v8::internal::StatsCounter", %"class.v8::internal::StatsCounter", %"class.v8::internal::StatsCounter", %"class.v8::internal::StatsCounter", %"class.v8::internal::StatsCounter", %"class.v8::internal::StatsCounter", %"class.v8::internal::RuntimeCallStats", %"class.v8::internal::WorkerThreadRuntimeCallStats", %"class.v8::internal::Isolate"*, %"class.v8::internal::StatsTable" }
%"class.std::__1::enable_shared_from_this" = type { %"class.std::__1::weak_ptr" }
%"class.std::__1::weak_ptr" = type { %"class.v8::internal::Counters"*, %"class.std::__1::__shared_weak_count"* }
%"class.v8::internal::HistogramTimer" = type { %"class.v8::internal::TimedHistogram.base", %"class.v8::base::ElapsedTimer" }
%"class.v8::internal::TimedHistogram.base" = type <{ %"class.v8::internal::Histogram", i32 }>
%"class.v8::base::ElapsedTimer" = type { %"class.v8::base::TimeTicks" }
%"class.v8::base::TimeTicks" = type { %"class.v8::base::time_internal::TimeBase" }
%"class.v8::base::time_internal::TimeBase" = type { i64 }
%"class.v8::internal::TimedHistogram" = type <{ %"class.v8::internal::Histogram", i32, [4 x i8] }>
%"class.v8::internal::AggregatableHistogramTimer" = type { %"class.v8::internal::Histogram", %"class.v8::base::TimeDelta" }
%"class.v8::base::TimeDelta" = type { i64 }
%"class.v8::internal::Histogram" = type { i8*, i32, i32, i32, i8*, %"class.v8::internal::Counters"* }
%"class.v8::internal::StatsCounterThreadSafe" = type { %"class.v8::internal::StatsCounterBase", %"class.v8::base::Mutex" }
%"class.v8::internal::StatsCounterBase" = type { %"class.v8::internal::Counters"*, i8*, i32* }
%"class.v8::internal::StatsCounter" = type <{ %"class.v8::internal::StatsCounterBase", i8, [7 x i8] }>
%"class.v8::internal::RuntimeCallStats" = type { %"class.v8::base::AtomicValue", %"class.v8::base::AtomicValue.677", i8, i32, %"class.v8::internal::ThreadId", [1370 x %"class.v8::internal::RuntimeCallCounter"] }
%"class.v8::base::AtomicValue" = type { i64 }
%"class.v8::base::AtomicValue.677" = type { i64 }
%"class.v8::internal::RuntimeCallCounter" = type { i8*, i64, i64 }
%"class.v8::internal::WorkerThreadRuntimeCallStats" = type <{ %"class.v8::base::Mutex", %"class.std::__1::vector.678", %"class.v8::base::Optional", %"class.v8::internal::ThreadId", [4 x i8] }>
%"class.std::__1::vector.678" = type { %"class.std::__1::__vector_base.679" }
%"class.std::__1::__vector_base.679" = type { %"class.std::__1::unique_ptr.680"*, %"class.std::__1::unique_ptr.680"*, %"class.std::__1::__compressed_pair.681" }
%"class.std::__1::unique_ptr.680" = type opaque
%"class.std::__1::__compressed_pair.681" = type { %"struct.std::__1::__compressed_pair_elem.682" }
%"struct.std::__1::__compressed_pair_elem.682" = type { %"class.std::__1::unique_ptr.680"* }
%"class.v8::base::Optional" = type { %"class.v8::base::internal::OptionalBase" }
%"class.v8::base::internal::OptionalBase" = type { %"struct.v8::base::internal::OptionalStorage" }
%"struct.v8::base::internal::OptionalStorage" = type { %"struct.v8::base::internal::OptionalStorageBase" }
%"struct.v8::base::internal::OptionalStorageBase" = type { i8, %union.anon }
%union.anon = type { i32 }
%"class.v8::internal::StatsTable" = type { i32* (i8*)*, i8* (i8*, i32, i32, i64)*, void (i8*, i32)* }
%"class.v8::base::RecursiveMutex" = type { %union.pthread_mutex_t }
%union.pthread_mutex_t = type { %struct.__pthread_mutex_s }
%struct.__pthread_mutex_s = type { i32, i32, i32, i32, i32, i16, i16, %struct.__pthread_internal_list }
%struct.__pthread_internal_list = type { %struct.__pthread_internal_list*, %struct.__pthread_internal_list* }
%"class.v8::base::SharedMutex" = type { %union.pthread_rwlock_t }
%union.pthread_rwlock_t = type { %struct.__pthread_rwlock_arch_t }
%struct.__pthread_rwlock_arch_t = type { i32, i32, i32, i32, i32, i32, i32, i32, i8, [7 x i8], i64, i32 }
%"class.v8::internal::Logger" = type { %"class.v8::internal::CodeEventListener", %"class.v8::internal::Isolate"*, %"class.std::__1::unique_ptr.686", %"class.std::__1::unique_ptr.692", %"struct.std::__1::atomic.152", %"class.std::__1::unique_ptr.698", %"class.std::__1::unique_ptr.704", %"class.std::__1::unique_ptr.710", %"class.std::__1::unique_ptr.716", %"class.std::__1::unique_ptr.722", %"class.std::__1::set.728", i32, i8, %"class.v8::internal::ExistingCodeLogger", %"class.v8::base::ElapsedTimer" }
%"class.v8::internal::CodeEventListener" = type { i32 (...)** }
%"class.std::__1::unique_ptr.686" = type { %"class.std::__1::__compressed_pair.687" }
%"class.std::__1::__compressed_pair.687" = type { %"struct.std::__1::__compressed_pair_elem.688" }
%"struct.std::__1::__compressed_pair_elem.688" = type { %"class.v8::internal::Ticker"* }
%"class.v8::internal::Ticker" = type opaque
%"class.std::__1::unique_ptr.692" = type { %"class.std::__1::__compressed_pair.693" }
%"class.std::__1::__compressed_pair.693" = type { %"struct.std::__1::__compressed_pair_elem.694" }
%"struct.std::__1::__compressed_pair_elem.694" = type { %"class.v8::internal::Profiler"* }
%"class.v8::internal::Profiler" = type opaque
%"class.std::__1::unique_ptr.698" = type { %"class.std::__1::__compressed_pair.699" }
%"class.std::__1::__compressed_pair.699" = type { %"struct.std::__1::__compressed_pair_elem.700" }
%"struct.std::__1::__compressed_pair_elem.700" = type { %"class.v8::internal::Log"* }
%"class.v8::internal::Log" = type opaque
%"class.std::__1::unique_ptr.704" = type { %"class.std::__1::__compressed_pair.705" }
%"class.std::__1::__compressed_pair.705" = type { %"struct.std::__1::__compressed_pair_elem.706" }
%"struct.std::__1::__compressed_pair_elem.706" = type { %"class.v8::internal::PerfBasicLogger"* }
%"class.v8::internal::PerfBasicLogger" = type opaque
%"class.std::__1::unique_ptr.710" = type { %"class.std::__1::__compressed_pair.711" }
%"class.std::__1::__compressed_pair.711" = type { %"struct.std::__1::__compressed_pair_elem.712" }
%"struct.std::__1::__compressed_pair_elem.712" = type { %"class.v8::internal::PerfJitLogger"* }
%"class.v8::internal::PerfJitLogger" = type opaque
%"class.std::__1::unique_ptr.716" = type { %"class.std::__1::__compressed_pair.717" }
%"class.std::__1::__compressed_pair.717" = type { %"struct.std::__1::__compressed_pair_elem.718" }
%"struct.std::__1::__compressed_pair_elem.718" = type { %"class.v8::internal::LowLevelLogger"* }
%"class.v8::internal::LowLevelLogger" = type opaque
%"class.std::__1::unique_ptr.722" = type { %"class.std::__1::__compressed_pair.723" }
%"class.std::__1::__compressed_pair.723" = type { %"struct.std::__1::__compressed_pair_elem.724" }
%"struct.std::__1::__compressed_pair_elem.724" = type { %"class.v8::internal::JitLogger"* }
%"class.v8::internal::JitLogger" = type opaque
%"class.std::__1::set.728" = type { %"class.std::__1::__tree.729" }
%"class.std::__1::__tree.729" = type { %"class.std::__1::__tree_end_node"*, %"class.std::__1::__compressed_pair.730", %"class.std::__1::__compressed_pair.734" }
%"class.std::__1::__compressed_pair.730" = type { %"struct.std::__1::__compressed_pair_elem.80" }
%"class.std::__1::__compressed_pair.734" = type { %"struct.std::__1::__compressed_pair_elem.7" }
%"class.v8::internal::ExistingCodeLogger" = type { %"class.v8::internal::Isolate"*, %"class.v8::internal::CodeEventListener"* }
%"class.v8::internal::StubCache" = type { [2048 x %"struct.v8::internal::StubCache::Entry"], [512 x %"struct.v8::internal::StubCache::Entry"], %"class.v8::internal::Isolate"* }
%"struct.v8::internal::StubCache::Entry" = type { %"class.v8::internal::StrongTaggedValue", %"class.v8::internal::TaggedValue", %"class.v8::internal::StrongTaggedValue" }
%"class.v8::internal::TaggedValue" = type { %"class.v8::internal::TaggedImpl.737" }
%"class.v8::internal::TaggedImpl.737" = type { i32 }
%"class.v8::internal::StrongTaggedValue" = type { %"class.v8::internal::TaggedImpl.736" }
%"class.v8::internal::TaggedImpl.736" = type { i32 }
%"class.v8::internal::Deoptimizer" = type { %"class.v8::internal::Isolate"*, %"class.v8::internal::JSFunction", %"class.v8::internal::Code", i32, i8, i64, i32, i8, i32, i32, %"class.v8::internal::FrameDescription"*, i32, %"class.v8::internal::FrameDescription"**, i64, i64, i64, i64, i32, i64, %"class.v8::internal::TranslatedState", %"class.std::__1::vector.775", %"class.std::__1::unique_ptr.782" }
%"class.v8::internal::JSFunction" = type { %"class.v8::internal::JSFunctionOrBoundFunction" }
%"class.v8::internal::JSFunctionOrBoundFunction" = type { %"class.v8::internal::TorqueGeneratedJSFunctionOrBoundFunction" }
%"class.v8::internal::TorqueGeneratedJSFunctionOrBoundFunction" = type { %"class.v8::internal::JSObject" }
%"class.v8::internal::JSObject" = type { %"class.v8::internal::TorqueGeneratedJSObject" }
%"class.v8::internal::TorqueGeneratedJSObject" = type { %"class.v8::internal::JSReceiver" }
%"class.v8::internal::JSReceiver" = type { %"class.v8::internal::HeapObject" }
%"class.v8::internal::Code" = type { %"class.v8::internal::HeapObject" }
%"class.v8::internal::FrameDescription" = type { i64, i32, %"class.v8::internal::RegisterValues", i64, i64, i64, i64, i64, i64, [1 x i64] }
%"class.v8::internal::RegisterValues" = type { [16 x i64], [16 x %"class.v8::internal::Float64"] }
%"class.v8::internal::Float64" = type { i64 }
%"class.v8::internal::TranslatedState" = type <{ i32, [4 x i8], %"class.std::__1::vector.738", %"class.v8::internal::Isolate"*, i64, i32, i32, %"class.std::__1::deque.762", %"class.v8::internal::Handle.774", %"class.v8::internal::FeedbackVector", %"class.v8::internal::FeedbackSlot", [4 x i8] }>
%"class.std::__1::vector.738" = type { %"class.std::__1::__vector_base.739" }
%"class.std::__1::__vector_base.739" = type { %"class.v8::internal::TranslatedFrame"*, %"class.v8::internal::TranslatedFrame"*, %"class.std::__1::__compressed_pair.757" }
%"class.v8::internal::TranslatedFrame" = type <{ i32, %"class.v8::internal::BytecodeOffset", %"class.v8::internal::SharedFunctionInfo", %"class.v8::internal::Handle.740", i32, i32, i32, [4 x i8], %"class.std::__1::deque", %"class.v8::base::Optional.752", [6 x i8] }>
%"class.v8::internal::BytecodeOffset" = type { i32 }
%"class.v8::internal::SharedFunctionInfo" = type { %"class.v8::internal::TorqueGeneratedSharedFunctionInfo" }
%"class.v8::internal::TorqueGeneratedSharedFunctionInfo" = type { %"class.v8::internal::HeapObject" }
%"class.v8::internal::Handle.740" = type { %"class.v8::internal::HandleBase" }
%"class.std::__1::deque" = type { %"class.std::__1::__deque_base" }
%"class.std::__1::__deque_base" = type { %"struct.std::__1::__split_buffer", i64, %"class.std::__1::__compressed_pair.748" }
%"struct.std::__1::__split_buffer" = type { %"class.v8::internal::TranslatedValue"**, %"class.v8::internal::TranslatedValue"**, %"class.v8::internal::TranslatedValue"**, %"class.std::__1::__compressed_pair.743" }
%"class.v8::internal::TranslatedValue" = type { i8, i8, %"class.v8::internal::TranslatedState"*, %"class.v8::internal::Handle.741", %union.anon.742 }
%"class.v8::internal::Handle.741" = type { %"class.v8::internal::HandleBase" }
%union.anon.742 = type { %"class.v8::internal::Object" }
%"class.std::__1::__compressed_pair.743" = type { %"struct.std::__1::__compressed_pair_elem.744" }
%"struct.std::__1::__compressed_pair_elem.744" = type { %"class.v8::internal::TranslatedValue"** }
%"class.std::__1::__compressed_pair.748" = type { %"struct.std::__1::__compressed_pair_elem.7" }
%"class.v8::base::Optional.752" = type { %"class.v8::base::internal::OptionalBase.753" }
%"class.v8::base::internal::OptionalBase.753" = type { %"struct.v8::base::internal::OptionalStorage.754" }
%"struct.v8::base::internal::OptionalStorage.754" = type { %"struct.v8::base::internal::OptionalStorageBase.755" }
%"struct.v8::base::internal::OptionalStorageBase.755" = type { i8, %union.anon.756 }
%union.anon.756 = type { i8 }
%"class.std::__1::__compressed_pair.757" = type { %"struct.std::__1::__compressed_pair_elem.758" }
%"struct.std::__1::__compressed_pair_elem.758" = type { %"class.v8::internal::TranslatedFrame"* }
%"class.std::__1::deque.762" = type { %"class.std::__1::__deque_base.763" }
%"class.std::__1::__deque_base.763" = type { %"struct.std::__1::__split_buffer.764", i64, %"class.std::__1::__compressed_pair.770" }
%"struct.std::__1::__split_buffer.764" = type { %"struct.v8::internal::TranslatedState::ObjectPosition"**, %"struct.v8::internal::TranslatedState::ObjectPosition"**, %"struct.v8::internal::TranslatedState::ObjectPosition"**, %"class.std::__1::__compressed_pair.765" }
%"struct.v8::internal::TranslatedState::ObjectPosition" = type { i32, i32 }
%"class.std::__1::__compressed_pair.765" = type { %"struct.std::__1::__compressed_pair_elem.766" }
%"struct.std::__1::__compressed_pair_elem.766" = type { %"struct.v8::internal::TranslatedState::ObjectPosition"** }
%"class.std::__1::__compressed_pair.770" = type { %"struct.std::__1::__compressed_pair_elem.7" }
%"class.v8::internal::Handle.774" = type { %"class.v8::internal::HandleBase" }
%"class.v8::internal::FeedbackVector" = type { %"class.v8::internal::TorqueGeneratedFeedbackVector" }
%"class.v8::internal::TorqueGeneratedFeedbackVector" = type { %"class.v8::internal::HeapObject" }
%"class.v8::internal::FeedbackSlot" = type { i32 }
%"class.std::__1::vector.775" = type { %"class.std::__1::__vector_base.776" }
%"class.std::__1::__vector_base.776" = type { %"struct.v8::internal::Deoptimizer::ValueToMaterialize"*, %"struct.v8::internal::Deoptimizer::ValueToMaterialize"*, %"class.std::__1::__compressed_pair.777" }
%"struct.v8::internal::Deoptimizer::ValueToMaterialize" = type { i64, %"class.v8::internal::TranslatedFrame::iterator" }
%"class.v8::internal::TranslatedFrame::iterator" = type <{ %"class.std::__1::__deque_iterator", i32, [4 x i8] }>
%"class.std::__1::__deque_iterator" = type { %"class.v8::internal::TranslatedValue"**, %"class.v8::internal::TranslatedValue"* }
%"class.std::__1::__compressed_pair.777" = type { %"struct.std::__1::__compressed_pair_elem.778" }
%"struct.std::__1::__compressed_pair_elem.778" = type { %"struct.v8::internal::Deoptimizer::ValueToMaterialize"* }
%"class.std::__1::unique_ptr.782" = type { %"class.std::__1::__compressed_pair.783" }
%"class.std::__1::__compressed_pair.783" = type { %"struct.std::__1::__compressed_pair_elem.784" }
%"struct.std::__1::__compressed_pair_elem.784" = type { %"class.v8::internal::CodeTracer::Scope"* }
%"class.v8::internal::CodeTracer::Scope" = type { %"class.v8::internal::CodeTracer"* }
%"class.v8::internal::MaterializedObjectStore" = type opaque
%"class.v8::internal::DescriptorLookupCache" = type { [64 x %"struct.v8::internal::DescriptorLookupCache::Key"], [64 x i32] }
%"struct.v8::internal::DescriptorLookupCache::Key" = type { %"class.v8::internal::Map", %"class.v8::internal::Name" }
%"class.v8::internal::Map" = type { %"class.v8::internal::HeapObject" }
%"class.v8::internal::Name" = type { %"class.v8::internal::TorqueGeneratedName" }
%"class.v8::internal::TorqueGeneratedName" = type { %"class.v8::internal::PrimitiveHeapObject" }
%"class.v8::internal::PrimitiveHeapObject" = type { %"class.v8::internal::TorqueGeneratedPrimitiveHeapObject" }
%"class.v8::internal::TorqueGeneratedPrimitiveHeapObject" = type { %"class.v8::internal::HeapObject" }
%"struct.v8::internal::HandleScopeData" = type { i64*, i64*, i32, i32, %"class.v8::internal::CanonicalHandleScope"* }
%"class.v8::internal::CanonicalHandleScope" = type { %"class.v8::internal::Isolate"*, %"class.v8::internal::OptimizedCompilationInfo"*, %"class.v8::internal::Zone"*, %"class.v8::internal::RootIndexMap"*, %"class.std::__1::unique_ptr.794", i32, %"class.v8::internal::CanonicalHandleScope"* }
%"class.v8::internal::OptimizedCompilationInfo" = type opaque
%"class.v8::internal::RootIndexMap" = type opaque
%"class.std::__1::unique_ptr.794" = type { %"class.std::__1::__compressed_pair.795" }
%"class.std::__1::__compressed_pair.795" = type { %"struct.std::__1::__compressed_pair_elem.796" }
%"struct.std::__1::__compressed_pair_elem.796" = type { %"class.v8::internal::IdentityMap"* }
%"class.v8::internal::IdentityMap" = type opaque
%"class.v8::internal::HandleScopeImplementer" = type { %"class.v8::internal::Isolate"*, %"class.v8::internal::DetachableVector", %"class.v8::internal::DetachableVector.800", %"class.v8::internal::DetachableVector.801", %"class.v8::internal::DetachableVector.800", i64*, i64*, %"struct.v8::internal::HandleScopeData" }
%"class.v8::internal::DetachableVector" = type { %"class.v8::internal::DetachableVectorBase" }
%"class.v8::internal::DetachableVectorBase" = type { i8*, i64, i64 }
%"class.v8::internal::DetachableVector.801" = type { %"class.v8::internal::DetachableVectorBase" }
%"class.v8::internal::DetachableVector.800" = type { %"class.v8::internal::DetachableVectorBase" }
%"class.v8::internal::UnicodeCache" = type opaque
%"class.v8::internal::AccountingAllocator" = type { i32 (...)**, %"struct.std::__1::atomic.19", %"struct.std::__1::atomic.19", %"class.std::__1::unique_ptr.788", %"class.std::__1::unique_ptr.481" }
%"class.std::__1::unique_ptr.788" = type { %"class.std::__1::__compressed_pair.789" }
%"class.std::__1::__compressed_pair.789" = type { %"struct.std::__1::__compressed_pair_elem.790" }
%"struct.std::__1::__compressed_pair_elem.790" = type { %"class.v8::internal::VirtualMemory"* }
%"class.v8::internal::InnerPointerToCodeCache" = type { %"class.v8::internal::Isolate"*, [1024 x %"struct.v8::internal::InnerPointerToCodeCache::InnerPointerToCodeCacheEntry"] }
%"struct.v8::internal::InnerPointerToCodeCache::InnerPointerToCodeCacheEntry" = type { i64, %"class.v8::internal::Code", %"class.v8::internal::SafepointEntry" }
%"class.v8::internal::SafepointEntry" = type <{ i32, [4 x i8], i8*, i8*, i32, [4 x i8] }>
%"class.v8::internal::GlobalHandles" = type { %"class.v8::internal::Isolate"*, %"class.std::__1::unique_ptr.802", %"class.std::__1::vector.808", %"class.std::__1::unique_ptr.815", %"class.std::__1::vector.822", %"class.std::__1::unique_ptr.829", i64, %"class.std::__1::vector.835", %"class.std::__1::vector.843", %"class.std::__1::vector.851", i8, i8, i32 }
%"class.std::__1::unique_ptr.802" = type { %"class.std::__1::__compressed_pair.803" }
%"class.std::__1::__compressed_pair.803" = type { %"struct.std::__1::__compressed_pair_elem.804" }
%"struct.std::__1::__compressed_pair_elem.804" = type { %"class.v8::internal::GlobalHandles::NodeSpace"* }
%"class.v8::internal::GlobalHandles::NodeSpace" = type opaque
%"class.std::__1::vector.808" = type { %"class.std::__1::__vector_base.809" }
%"class.std::__1::__vector_base.809" = type { %"class.v8::internal::GlobalHandles::Node"**, %"class.v8::internal::GlobalHandles::Node"**, %"class.std::__1::__compressed_pair.810" }
%"class.v8::internal::GlobalHandles::Node" = type opaque
%"class.std::__1::__compressed_pair.810" = type { %"struct.std::__1::__compressed_pair_elem.811" }
%"struct.std::__1::__compressed_pair_elem.811" = type { %"class.v8::internal::GlobalHandles::Node"** }
%"class.std::__1::unique_ptr.815" = type { %"class.std::__1::__compressed_pair.816" }
%"class.std::__1::__compressed_pair.816" = type { %"struct.std::__1::__compressed_pair_elem.817" }
%"struct.std::__1::__compressed_pair_elem.817" = type { %"class.v8::internal::GlobalHandles::NodeSpace.818"* }
%"class.v8::internal::GlobalHandles::NodeSpace.818" = type opaque
%"class.std::__1::vector.822" = type { %"class.std::__1::__vector_base.823" }
%"class.std::__1::__vector_base.823" = type { %"class.v8::internal::GlobalHandles::TracedNode"**, %"class.v8::internal::GlobalHandles::TracedNode"**, %"class.std::__1::__compressed_pair.824" }
%"class.v8::internal::GlobalHandles::TracedNode" = type opaque
%"class.std::__1::__compressed_pair.824" = type { %"struct.std::__1::__compressed_pair_elem.825" }
%"struct.std::__1::__compressed_pair_elem.825" = type { %"class.v8::internal::GlobalHandles::TracedNode"** }
%"class.std::__1::unique_ptr.829" = type { %"class.std::__1::__compressed_pair.830" }
%"class.std::__1::__compressed_pair.830" = type { %"struct.std::__1::__compressed_pair_elem.831" }
%"struct.std::__1::__compressed_pair_elem.831" = type { %"class.v8::internal::GlobalHandles::OnStackTracedNodeSpace"* }
%"class.v8::internal::GlobalHandles::OnStackTracedNodeSpace" = type opaque
%"class.std::__1::vector.835" = type { %"class.std::__1::__vector_base.836" }
%"class.std::__1::__vector_base.836" = type { %"struct.std::__1::pair.837"*, %"struct.std::__1::pair.837"*, %"class.std::__1::__compressed_pair.838" }
%"struct.std::__1::pair.837" = type opaque
%"class.std::__1::__compressed_pair.838" = type { %"struct.std::__1::__compressed_pair_elem.839" }
%"struct.std::__1::__compressed_pair_elem.839" = type { %"struct.std::__1::pair.837"* }
%"class.std::__1::vector.843" = type { %"class.std::__1::__vector_base.844" }
%"class.std::__1::__vector_base.844" = type { %"struct.std::__1::pair.845"*, %"struct.std::__1::pair.845"*, %"class.std::__1::__compressed_pair.846" }
%"struct.std::__1::pair.845" = type opaque
%"class.std::__1::__compressed_pair.846" = type { %"struct.std::__1::__compressed_pair_elem.847" }
%"struct.std::__1::__compressed_pair_elem.847" = type { %"struct.std::__1::pair.845"* }
%"class.std::__1::vector.851" = type { %"class.std::__1::__vector_base.852" }
%"class.std::__1::__vector_base.852" = type { %"class.v8::internal::GlobalHandles::PendingPhantomCallback"*, %"class.v8::internal::GlobalHandles::PendingPhantomCallback"*, %"class.std::__1::__compressed_pair.853" }
%"class.v8::internal::GlobalHandles::PendingPhantomCallback" = type { void (%"class.v8::WeakCallbackInfo"*)*, i8*, [2 x i8*] }
%"class.v8::WeakCallbackInfo" = type { %"class.v8::Isolate"*, i8*, {}**, [2 x i8*] }
%"class.std::__1::__compressed_pair.853" = type { %"struct.std::__1::__compressed_pair_elem.854" }
%"struct.std::__1::__compressed_pair_elem.854" = type { %"class.v8::internal::GlobalHandles::PendingPhantomCallback"* }
%"class.v8::internal::EternalHandles" = type { i32, %"class.std::__1::vector.858", %"class.std::__1::vector.865" }
%"class.v8::internal::ThreadManager" = type opaque
%"class.v8::bigint::Processor" = type opaque
%"class.v8::internal::RuntimeState" = type { %"class.std::__1::unique_ptr.872" }
%"class.std::__1::unique_ptr.872" = type { %"class.std::__1::__compressed_pair.873" }
%"class.std::__1::__compressed_pair.873" = type { %"struct.std::__1::__compressed_pair_elem.874" }
%"struct.std::__1::__compressed_pair_elem.874" = type { %"struct.v8::internal::Runtime::Function"* }
%"struct.v8::internal::Runtime::Function" = type { i32, i32, i8*, i64, i8, i8 }
%"class.v8::internal::Builtins" = type { %"class.v8::internal::Isolate"*, i8, i32 }
%"class.v8::internal::SetupIsolateDelegate" = type opaque
%"class.v8::internal::RegExpStack" = type opaque
%"class.std::__1::vector.865" = type { %"class.std::__1::__vector_base.866" }
%"class.std::__1::__vector_base.866" = type { i32*, i32*, %"class.std::__1::__compressed_pair.867" }
%"class.std::__1::__compressed_pair.867" = type { %"struct.std::__1::__compressed_pair_elem.868" }
%"struct.std::__1::__compressed_pair_elem.868" = type { i32* }
%"class.v8::internal::DateCache" = type opaque
%"struct.std::__1::atomic.878" = type { %"struct.std::__1::__atomic_base.879" }
%"struct.std::__1::__atomic_base.879" = type { %"struct.std::__1::__cxx_atomic_impl.880" }
%"struct.std::__1::__cxx_atomic_impl.880" = type { %"struct.std::__1::__cxx_atomic_base_impl.881" }
%"struct.std::__1::__cxx_atomic_base_impl.881" = type { i32 }
%"class.v8::Promise" = type { i8 }
%"struct.std::__1::atomic.888" = type { %"struct.std::__1::__atomic_base.889" }
%"struct.std::__1::__atomic_base.889" = type { %"struct.std::__1::__cxx_atomic_impl.890" }
%"struct.std::__1::__cxx_atomic_impl.890" = type { %"struct.std::__1::__cxx_atomic_base_impl.891" }
%"struct.std::__1::__cxx_atomic_base_impl.891" = type { i32 }
%"class.std::__1::basic_string" = type { %"class.std::__1::__compressed_pair.893" }
%"class.std::__1::__compressed_pair.893" = type { %"struct.std::__1::__compressed_pair_elem.894" }
%"struct.std::__1::__compressed_pair_elem.894" = type { %"struct.std::__1::basic_string<char, std::__1::char_traits<char>, std::__1::allocator<char> >::__rep" }
%"struct.std::__1::basic_string<char, std::__1::char_traits<char>, std::__1::allocator<char> >::__rep" = type { %union.anon.895 }
%union.anon.895 = type { %"struct.std::__1::basic_string<char, std::__1::char_traits<char>, std::__1::allocator<char> >::__long" }
%"struct.std::__1::basic_string<char, std::__1::char_traits<char>, std::__1::allocator<char> >::__long" = type { i8*, i64, i64 }
%"class.std::__1::unordered_map.899" = type { %"class.std::__1::__hash_table.900" }
%"class.std::__1::__hash_table.900" = type <{ %"class.std::__1::unique_ptr.901", %"class.std::__1::__compressed_pair.911", %"class.std::__1::__compressed_pair.916", %"class.std::__1::__compressed_pair.919", [4 x i8] }>
%"class.std::__1::unique_ptr.901" = type { %"class.std::__1::__compressed_pair.902" }
%"class.std::__1::__compressed_pair.902" = type { %"struct.std::__1::__compressed_pair_elem.903", %"struct.std::__1::__compressed_pair_elem.905" }
%"struct.std::__1::__compressed_pair_elem.903" = type { %"struct.std::__1::__hash_node_base.904"** }
%"struct.std::__1::__hash_node_base.904" = type { %"struct.std::__1::__hash_node_base.904"* }
%"struct.std::__1::__compressed_pair_elem.905" = type { %"class.std::__1::__bucket_list_deallocator.906" }
%"class.std::__1::__bucket_list_deallocator.906" = type { %"class.std::__1::__compressed_pair.907" }
%"class.std::__1::__compressed_pair.907" = type { %"struct.std::__1::__compressed_pair_elem.7" }
%"class.std::__1::__compressed_pair.911" = type { %"struct.std::__1::__compressed_pair_elem.912" }
%"struct.std::__1::__compressed_pair_elem.912" = type { %"struct.std::__1::__hash_node_base.904" }
%"class.std::__1::__compressed_pair.916" = type { %"struct.std::__1::__compressed_pair_elem.7" }
%"class.std::__1::__compressed_pair.919" = type { %"struct.std::__1::__compressed_pair_elem.17" }
%"struct.std::__1::atomic.152" = type { %"struct.std::__1::__atomic_base.153" }
%"struct.std::__1::__atomic_base.153" = type { %"struct.std::__1::__cxx_atomic_impl.154" }
%"struct.std::__1::__cxx_atomic_impl.154" = type { %"struct.std::__1::__cxx_atomic_base_impl.155" }
%"struct.std::__1::__cxx_atomic_base_impl.155" = type { i8 }
%"class.v8::internal::Debug" = type { %"class.v8::debug::DebugDelegate"*, i8, i8, i8, i8, i8, i8, i8, i8, i8, %"class.v8::internal::DebugInfoListNode"*, %"class.std::__1::unique_ptr.925", %"class.v8::internal::Handle.931", %"class.v8::internal::DebugFeatureTracker", %"class.v8::internal::Debug::ThreadLocal", %"class.v8::internal::Handle.932", %"class.v8::internal::Isolate"* }
%"class.v8::debug::DebugDelegate" = type { i32 (...)** }
%"class.v8::internal::DebugInfoListNode" = type { i64*, %"class.v8::internal::DebugInfoListNode"* }
%"class.std::__1::unique_ptr.925" = type { %"class.std::__1::__compressed_pair.926" }
%"class.std::__1::__compressed_pair.926" = type { %"struct.std::__1::__compressed_pair_elem.927" }
%"struct.std::__1::__compressed_pair_elem.927" = type { %"class.v8::internal::Debug::TemporaryObjectsTracker"* }
%"class.v8::internal::Debug::TemporaryObjectsTracker" = type opaque
%"class.v8::internal::Handle.931" = type { %"class.v8::internal::HandleBase" }
%"class.v8::internal::DebugFeatureTracker" = type <{ %"class.v8::internal::Isolate"*, i32, [4 x i8] }>
%"class.v8::internal::Debug::ThreadLocal" = type <{ i64, i32, i8, [3 x i8], %"class.v8::internal::Object", i8, [3 x i8], i32, i32, i32, %"class.v8::internal::Object", %"class.v8::internal::Object", i32, i8, [3 x i8] }>
%"class.v8::internal::Handle.932" = type { %"class.v8::internal::HandleBase" }
%"class.v8::internal::HeapProfiler" = type { %"class.v8::internal::HeapObjectAllocationTracker", %"class.std::__1::unique_ptr.933", %"class.std::__1::vector.939", %"class.std::__1::unique_ptr.947", %"class.std::__1::unique_ptr.953", i8, i8, %"class.v8::base::Mutex", %"class.std::__1::unique_ptr.959", %"class.std::__1::vector.965", %"struct.std::__1::pair.973" }
%"class.std::__1::unique_ptr.933" = type { %"class.std::__1::__compressed_pair.934" }
%"class.std::__1::__compressed_pair.934" = type { %"struct.std::__1::__compressed_pair_elem.935" }
%"struct.std::__1::__compressed_pair_elem.935" = type { %"class.v8::internal::HeapObjectsMap"* }
%"class.v8::internal::HeapObjectsMap" = type opaque
%"class.std::__1::vector.939" = type { %"class.std::__1::__vector_base.940" }
%"class.std::__1::__vector_base.940" = type { %"class.std::__1::unique_ptr.941"*, %"class.std::__1::unique_ptr.941"*, %"class.std::__1::__compressed_pair.942" }
%"class.std::__1::unique_ptr.941" = type opaque
%"class.std::__1::__compressed_pair.942" = type { %"struct.std::__1::__compressed_pair_elem.943" }
%"struct.std::__1::__compressed_pair_elem.943" = type { %"class.std::__1::unique_ptr.941"* }
%"class.std::__1::unique_ptr.947" = type { %"class.std::__1::__compressed_pair.948" }
%"class.std::__1::__compressed_pair.948" = type { %"struct.std::__1::__compressed_pair_elem.949" }
%"struct.std::__1::__compressed_pair_elem.949" = type { %"class.v8::internal::StringsStorage"* }
%"class.v8::internal::StringsStorage" = type opaque
%"class.std::__1::unique_ptr.953" = type { %"class.std::__1::__compressed_pair.954" }
%"class.std::__1::__compressed_pair.954" = type { %"struct.std::__1::__compressed_pair_elem.955" }
%"struct.std::__1::__compressed_pair_elem.955" = type { %"class.v8::internal::AllocationTracker"* }
%"class.v8::internal::AllocationTracker" = type opaque
%"class.std::__1::unique_ptr.959" = type { %"class.std::__1::__compressed_pair.960" }
%"class.std::__1::__compressed_pair.960" = type { %"struct.std::__1::__compressed_pair_elem.961" }
%"struct.std::__1::__compressed_pair_elem.961" = type { %"class.v8::internal::SamplingHeapProfiler"* }
%"class.v8::internal::SamplingHeapProfiler" = type opaque
%"class.std::__1::vector.965" = type { %"class.std::__1::__vector_base.966" }
%"class.std::__1::__vector_base.966" = type { %"struct.std::__1::pair.967"*, %"struct.std::__1::pair.967"*, %"class.std::__1::__compressed_pair.968" }
%"struct.std::__1::pair.967" = type opaque
%"class.std::__1::__compressed_pair.968" = type { %"struct.std::__1::__compressed_pair_elem.969" }
%"struct.std::__1::__compressed_pair_elem.969" = type { %"struct.std::__1::pair.967"* }
%"struct.std::__1::pair.973" = type { i8 (%"class.v8::Isolate"*, %"class.v8::Local.0"*, i16, i8*)*, i8* }
%"class.v8::Local.0" = type { %"class.v8::Value"* }
%"class.std::__1::unique_ptr.974" = type { %"class.std::__1::__compressed_pair.975" }
%"class.std::__1::__compressed_pair.975" = type { %"struct.std::__1::__compressed_pair_elem.976" }
%"struct.std::__1::__compressed_pair_elem.976" = type { %"class.v8::internal::CodeEventDispatcher"* }
%"class.v8::internal::CodeEventDispatcher" = type { %"class.v8::internal::CodeEventListener", %"class.std::__1::unordered_set.977", %"class.v8::base::Mutex" }
%"class.std::__1::unordered_set.977" = type { %"class.std::__1::__hash_table.978" }
%"class.std::__1::__hash_table.978" = type <{ %"class.std::__1::unique_ptr.979", %"class.std::__1::__compressed_pair.989", %"class.std::__1::__compressed_pair.994", %"class.std::__1::__compressed_pair.998", [4 x i8] }>
%"class.std::__1::unique_ptr.979" = type { %"class.std::__1::__compressed_pair.980" }
%"class.std::__1::__compressed_pair.980" = type { %"struct.std::__1::__compressed_pair_elem.981", %"struct.std::__1::__compressed_pair_elem.983" }
%"struct.std::__1::__compressed_pair_elem.981" = type { %"struct.std::__1::__hash_node_base.982"** }
%"struct.std::__1::__hash_node_base.982" = type { %"struct.std::__1::__hash_node_base.982"* }
%"struct.std::__1::__compressed_pair_elem.983" = type { %"class.std::__1::__bucket_list_deallocator.984" }
%"class.std::__1::__bucket_list_deallocator.984" = type { %"class.std::__1::__compressed_pair.985" }
%"class.std::__1::__compressed_pair.985" = type { %"struct.std::__1::__compressed_pair_elem.7" }
%"class.std::__1::__compressed_pair.989" = type { %"struct.std::__1::__compressed_pair_elem.990" }
%"struct.std::__1::__compressed_pair_elem.990" = type { %"struct.std::__1::__hash_node_base.982" }
%"class.std::__1::__compressed_pair.994" = type { %"struct.std::__1::__compressed_pair_elem.7" }
%"class.std::__1::__compressed_pair.998" = type { %"struct.std::__1::__compressed_pair_elem.17" }
%"class.v8::internal::AstStringConstants" = type opaque
%"class.v8::internal::interpreter::Interpreter" = type opaque
%"class.v8::internal::compiler::PerIsolateCompilerCache" = type opaque
%"class.v8::internal::Zone" = type <{ i64, i64, i64, i64, %"class.v8::internal::AccountingAllocator"*, %"class.v8::internal::Segment"*, i8*, i8, i8, [6 x i8] }>
%"class.v8::internal::Segment" = type { %"class.v8::internal::Zone"*, %"class.v8::internal::Segment"*, i64 }
%"class.v8::internal::CompilerDispatcher" = type opaque
%"class.std::__1::queue" = type { %"class.std::__1::deque.1006" }
%"class.std::__1::deque.1006" = type { %"class.std::__1::__deque_base.1007" }
%"class.std::__1::__deque_base.1007" = type { %"struct.std::__1::__split_buffer.1008", i64, %"class.std::__1::__compressed_pair.1015" }
%"struct.std::__1::__split_buffer.1008" = type { %"struct.std::__1::pair.1009"**, %"struct.std::__1::pair.1009"**, %"struct.std::__1::pair.1009"**, %"class.std::__1::__compressed_pair.1010" }
%"struct.std::__1::pair.1009" = type opaque
%"class.std::__1::__compressed_pair.1010" = type { %"struct.std::__1::__compressed_pair_elem.1011" }
%"struct.std::__1::__compressed_pair_elem.1011" = type { %"struct.std::__1::pair.1009"** }
%"class.std::__1::__compressed_pair.1015" = type { %"struct.std::__1::__compressed_pair_elem.7" }
%"class.v8::String" = type { i8 }
%"class.v8::Context" = type { i8 }
%"class.v8::FunctionCallbackInfo" = type <{ i64*, i64*, i32, [4 x i8] }>
%"class.v8::internal::Relocatable" = type { i32 (...)**, %"class.v8::internal::Isolate"*, %"class.v8::internal::Relocatable"* }
%"class.std::__1::vector.1020" = type { %"class.std::__1::__vector_base.1021" }
%"class.std::__1::__vector_base.1021" = type { %"class.v8::internal::Handle.741"*, %"class.v8::internal::Handle.741"*, %"class.std::__1::__compressed_pair.1022" }
%"class.std::__1::__compressed_pair.1022" = type { %"struct.std::__1::__compressed_pair_elem.1023" }
%"struct.std::__1::__compressed_pair_elem.1023" = type { %"class.v8::internal::Handle.741"* }
%"class.v8::internal::Object" = type { %"class.v8::internal::TaggedImpl" }
%"class.v8::internal::TaggedImpl" = type { i64 }
%"class.v8::internal::AddressToIndexHashMap" = type opaque
%"class.v8::internal::HeapObjectToIndexHashMap" = type opaque
%"class.v8::internal::MicrotaskQueue" = type opaque
%"class.v8::internal::CompilationStatistics" = type opaque
%"class.v8::internal::CodeTracer" = type <{ %"class.v8::internal::EmbeddedVector", %struct._IO_FILE*, i32, [4 x i8] }>
%"class.v8::internal::EmbeddedVector" = type { %"class.v8::internal::Vector", [128 x i8] }
%"class.v8::internal::Vector" = type { i8*, i64 }
%struct._IO_FILE = type { i32, i8*, i8*, i8*, i8*, i8*, i8*, i8*, i8*, i8*, i8*, i8*, %struct._IO_marker*, %struct._IO_FILE*, i32, i32, i64, i16, i8, [1 x i8], i8*, i64, %struct._IO_codecvt*, %struct._IO_wide_data*, %struct._IO_FILE*, i8*, i64, i32, [20 x i8] }
%struct._IO_marker = type opaque
%struct._IO_codecvt = type opaque
%struct._IO_wide_data = type opaque
%"class.v8::PromiseRejectMessage" = type { %"class.v8::Local.883", i32, %"class.v8::Local.0" }
%"class.v8::Local.883" = type { %"class.v8::Promise"* }
%"class.v8::StartupData" = type { i8*, i32 }
%"class.v8_inspector::V8Inspector" = type opaque
%"class.v8::internal::compiler::NodeObserver" = type opaque
%"class.v8::internal::OptimizingCompileDispatcher" = type opaque
%"class.std::__1::unique_ptr.1027" = type { %"class.std::__1::__compressed_pair.1028" }
%"class.std::__1::__compressed_pair.1028" = type { %"struct.std::__1::__compressed_pair_elem.1029" }
%"struct.std::__1::__compressed_pair_elem.1029" = type { %"class.v8::internal::PersistentHandlesList"* }
%"class.v8::internal::PersistentHandlesList" = type { %"class.v8::base::Mutex", %"class.v8::internal::PersistentHandles"* }
%"class.std::__1::vector.1033" = type { %"class.std::__1::__vector_base.1034" }
%"class.std::__1::__vector_base.1034" = type { void (%"class.v8::Isolate"*)**, void (%"class.v8::Isolate"*)**, %"class.std::__1::__compressed_pair.1035" }
%"class.std::__1::__compressed_pair.1035" = type { %"struct.std::__1::__compressed_pair_elem.1036" }
%"struct.std::__1::__compressed_pair_elem.1036" = type { void (%"class.v8::Isolate"*)** }
%"class.std::__1::shared_ptr.1040" = type { %"class.v8::internal::metrics::Recorder"*, %"class.std::__1::__shared_weak_count"* }
%"class.v8::internal::metrics::Recorder" = type opaque
%"class.std::__1::unordered_map.1041" = type { %"class.std::__1::__hash_table.1042" }
%"class.std::__1::__hash_table.1042" = type <{ %"class.std::__1::unique_ptr.1043", %"class.std::__1::__compressed_pair.1053", %"class.std::__1::__compressed_pair.1058", %"class.std::__1::__compressed_pair.1061", [4 x i8] }>
%"class.std::__1::unique_ptr.1043" = type { %"class.std::__1::__compressed_pair.1044" }
%"class.std::__1::__compressed_pair.1044" = type { %"struct.std::__1::__compressed_pair_elem.1045", %"struct.std::__1::__compressed_pair_elem.1047" }
%"struct.std::__1::__compressed_pair_elem.1045" = type { %"struct.std::__1::__hash_node_base.1046"** }
%"struct.std::__1::__hash_node_base.1046" = type { %"struct.std::__1::__hash_node_base.1046"* }
%"struct.std::__1::__compressed_pair_elem.1047" = type { %"class.std::__1::__bucket_list_deallocator.1048" }
%"class.std::__1::__bucket_list_deallocator.1048" = type { %"class.std::__1::__compressed_pair.1049" }
%"class.std::__1::__compressed_pair.1049" = type { %"struct.std::__1::__compressed_pair_elem.7" }
%"class.std::__1::__compressed_pair.1053" = type { %"struct.std::__1::__compressed_pair_elem.1054" }
%"struct.std::__1::__compressed_pair_elem.1054" = type { %"struct.std::__1::__hash_node_base.1046" }
%"class.std::__1::__compressed_pair.1058" = type { %"struct.std::__1::__compressed_pair_elem.7" }
%"class.std::__1::__compressed_pair.1061" = type { %"struct.std::__1::__compressed_pair_elem.17" }
%"struct.v8::metrics::LongTaskStats" = type { i64, i64, i64 }
%"class.std::__1::vector.541" = type { %"class.std::__1::__vector_base.542" }
%"class.std::__1::__vector_base.542" = type { %"class.v8::internal::Object"*, %"class.v8::internal::Object"*, %"class.std::__1::__compressed_pair.543" }
%"class.std::__1::__compressed_pair.543" = type { %"struct.std::__1::__compressed_pair_elem.544" }
%"struct.std::__1::__compressed_pair_elem.544" = type { %"class.v8::internal::Object"* }
%"class.v8::internal::BuiltinsConstantsTableBuilder" = type opaque
%"class.v8::ArrayBuffer::Allocator" = type { i32 (...)** }
%"class.std::__1::shared_ptr.160" = type { %"class.v8::ArrayBuffer::Allocator"*, %"class.std::__1::__shared_weak_count"* }
%"class.v8::internal::FutexWaitListNode" = type { %"class.v8::internal::Isolate"*, %"class.std::__1::shared_ptr.1065", %"class.v8::internal::CancelableTaskManager"*, %"class.v8::base::ConditionVariable", %"class.v8::internal::FutexWaitListNode"*, %"class.v8::internal::FutexWaitListNode"*, %"class.std::__1::weak_ptr.1094", i64, i8*, i8, i8, %"class.v8::Global", %"class.v8::Global.1095", %"class.v8::base::TimeTicks", i64 }
%"class.std::__1::shared_ptr.1065" = type { %"class.v8::TaskRunner"*, %"class.std::__1::__shared_weak_count"* }
%"class.v8::TaskRunner" = type { i32 (...)** }
%"class.v8::base::ConditionVariable" = type { %union.pthread_cond_t }
%union.pthread_cond_t = type { %struct.__pthread_cond_s }
%struct.__pthread_cond_s = type { %union.anon.1090, %union.anon.1092, [2 x i32], [2 x i32], i32, i32, [2 x i32] }
%union.anon.1090 = type { i64 }
%union.anon.1092 = type { i64 }
%"class.std::__1::weak_ptr.1094" = type { %"class.v8::internal::BackingStore"*, %"class.std::__1::__shared_weak_count"* }
%"class.v8::Global" = type { %"class.v8::PersistentBase" }
%"class.v8::PersistentBase" = type { %"class.v8::Promise"* }
%"class.v8::Global.1095" = type { %"class.v8::PersistentBase.1096" }
%"class.v8::PersistentBase.1096" = type { %"class.v8::Context"* }
%"class.v8::internal::CancelableTaskManager" = type <{ i64, %"class.std::__1::unordered_map.1066", %"class.v8::base::ConditionVariable", %"class.v8::base::Mutex", i8, [7 x i8] }>
%"class.std::__1::unordered_map.1066" = type { %"class.std::__1::__hash_table.1067" }
%"class.std::__1::__hash_table.1067" = type <{ %"class.std::__1::unique_ptr.1068", %"class.std::__1::__compressed_pair.1078", %"class.std::__1::__compressed_pair.1083", %"class.std::__1::__compressed_pair.1086", [4 x i8] }>
%"class.std::__1::unique_ptr.1068" = type { %"class.std::__1::__compressed_pair.1069" }
%"class.std::__1::__compressed_pair.1069" = type { %"struct.std::__1::__compressed_pair_elem.1070", %"struct.std::__1::__compressed_pair_elem.1072" }
%"struct.std::__1::__compressed_pair_elem.1070" = type { %"struct.std::__1::__hash_node_base.1071"** }
%"struct.std::__1::__hash_node_base.1071" = type { %"struct.std::__1::__hash_node_base.1071"* }
%"struct.std::__1::__compressed_pair_elem.1072" = type { %"class.std::__1::__bucket_list_deallocator.1073" }
%"class.std::__1::__bucket_list_deallocator.1073" = type { %"class.std::__1::__compressed_pair.1074" }
%"class.std::__1::__compressed_pair.1074" = type { %"struct.std::__1::__compressed_pair_elem.7" }
%"class.std::__1::__compressed_pair.1078" = type { %"struct.std::__1::__compressed_pair_elem.1079" }
%"struct.std::__1::__compressed_pair_elem.1079" = type { %"struct.std::__1::__hash_node_base.1071" }
%"class.std::__1::__compressed_pair.1083" = type { %"struct.std::__1::__compressed_pair_elem.7" }
%"class.std::__1::__compressed_pair.1086" = type { %"struct.std::__1::__compressed_pair_elem.17" }
%"class.v8::debug::ConsoleDelegate" = type { i32 (...)** }
%"class.v8::debug::AsyncEventDelegate" = type { i32 (...)** }
%"class.std::__1::unique_ptr.1097" = type { %"class.std::__1::__compressed_pair.1098" }
%"class.std::__1::__compressed_pair.1098" = type { %"struct.std::__1::__compressed_pair_elem.1099" }
%"struct.std::__1::__compressed_pair_elem.1099" = type { %"class.v8::internal::LocalIsolate"* }
%"class.v8::internal::LocalIsolate" = type { %"class.v8::internal::HiddenLocalFactory", %"class.v8::internal::LocalHeap", %"class.v8::internal::Isolate"*, %"class.std::__1::unique_ptr.1126", %"class.v8::internal::ThreadId", i64, %"class.v8::internal::RuntimeCallStats"* }
%"class.v8::internal::HiddenLocalFactory" = type { %"class.v8::internal::LocalFactory" }
%"class.v8::internal::LocalFactory" = type { %"class.v8::internal::ReadOnlyRoots" }
%"class.v8::internal::ReadOnlyRoots" = type { i64* }
%"class.std::__1::unique_ptr.1126" = type { %"class.std::__1::__compressed_pair.1127" }
%"class.std::__1::__compressed_pair.1127" = type { %"struct.std::__1::__compressed_pair_elem.1128" }
%"struct.std::__1::__compressed_pair_elem.1128" = type { %"class.v8::internal::LocalLogger"* }
%"class.v8::internal::LocalLogger" = type opaque
%"struct.v8::internal::ManagedPtrDestructor" = type { i64, %"struct.v8::internal::ManagedPtrDestructor"*, %"struct.v8::internal::ManagedPtrDestructor"*, i8*, void (i8*)*, i64* }
%"class.v8::internal::wasm::WasmEngine" = type opaque
%"class.std::__1::unique_ptr.1135" = type { %"class.std::__1::__compressed_pair.1136" }
%"class.std::__1::__compressed_pair.1136" = type { %"struct.std::__1::__compressed_pair_elem.1137" }
%"struct.std::__1::__compressed_pair_elem.1137" = type { %"class.v8::internal::TracingCpuProfilerImpl"* }
%"class.v8::internal::TracingCpuProfilerImpl" = type opaque
%"class.v8::internal::EmbeddedFileWriterInterface" = type opaque
%"class.v8::Context::BackupIncumbentScope" = type { %"class.v8::Local.884", i64, %"class.v8::Context::BackupIncumbentScope"* }
%"class.v8::Local.884" = type { %"class.v8::Context"* }
%"class.v8::internal::Isolate::ThreadDataTable" = type { %"class.std::__1::unordered_map.1143" }
%"class.std::__1::unordered_map.1143" = type { %"class.std::__1::__hash_table.1144" }
%"class.std::__1::__hash_table.1144" = type <{ %"class.std::__1::unique_ptr.1145", %"class.std::__1::__compressed_pair.1155", %"class.std::__1::__compressed_pair.1160", %"class.std::__1::__compressed_pair.1163", [4 x i8] }>
%"class.std::__1::unique_ptr.1145" = type { %"class.std::__1::__compressed_pair.1146" }
%"class.std::__1::__compressed_pair.1146" = type { %"struct.std::__1::__compressed_pair_elem.1147", %"struct.std::__1::__compressed_pair_elem.1149" }
%"struct.std::__1::__compressed_pair_elem.1147" = type { %"struct.std::__1::__hash_node_base.1148"** }
%"struct.std::__1::__hash_node_base.1148" = type { %"struct.std::__1::__hash_node_base.1148"* }
%"struct.std::__1::__compressed_pair_elem.1149" = type { %"class.std::__1::__bucket_list_deallocator.1150" }
%"class.std::__1::__bucket_list_deallocator.1150" = type { %"class.std::__1::__compressed_pair.1151" }
%"class.std::__1::__compressed_pair.1151" = type { %"struct.std::__1::__compressed_pair_elem.7" }
%"class.std::__1::__compressed_pair.1155" = type { %"struct.std::__1::__compressed_pair_elem.1156" }
%"struct.std::__1::__compressed_pair_elem.1156" = type { %"struct.std::__1::__hash_node_base.1148" }
%"class.std::__1::__compressed_pair.1160" = type { %"struct.std::__1::__compressed_pair_elem.7" }
%"class.std::__1::__compressed_pair.1163" = type { %"struct.std::__1::__compressed_pair_elem.17" }
%"class.v8::base::Mutex" = type { %union.pthread_mutex_t }
%"struct.std::__1::atomic.1169" = type { %"struct.std::__1::__atomic_base.1170" }
%"struct.std::__1::__atomic_base.1170" = type { %"struct.std::__1::__cxx_atomic_impl.1171" }
%"struct.std::__1::__cxx_atomic_impl.1171" = type { %"struct.std::__1::__cxx_atomic_base_impl.1172" }
%"struct.std::__1::__cxx_atomic_base_impl.1172" = type { %"class.std::__1::vector.1173"* }
%"class.std::__1::vector.1173" = type { %"class.std::__1::__vector_base.1174" }
%"class.std::__1::__vector_base.1174" = type { %"struct.v8::MemoryRange"*, %"struct.v8::MemoryRange"*, %"class.std::__1::__compressed_pair.1175" }
%"struct.v8::MemoryRange" = type { i8*, i64 }
%"class.std::__1::__compressed_pair.1175" = type { %"struct.std::__1::__compressed_pair_elem.1176" }
%"struct.std::__1::__compressed_pair_elem.1176" = type { %"struct.v8::MemoryRange"* }
%"class.v8::internal::wasm::WasmCode" = type { %"class.v8::internal::wasm::NativeModule"*, i8*, i8, %"class.std::__1::unique_ptr.1371", i32, i32, i32, i32, i32, i32, i32, i32, i32, i32, i32, i32, i32, %"struct.std::__1::atomic.1460" }
%"class.v8::internal::wasm::NativeModule" = type { %"class.v8::internal::wasm::WasmEngine"*, %"class.v8::internal::OperationsBarrier::Token", %"class.v8::internal::wasm::WasmCodeAllocator", %"class.v8::internal::wasm::WasmFeatures", %"class.std::__1::shared_ptr.1202", %"class.std::__1::unique_ptr.1386", %"class.std::__1::shared_ptr.1399", %"class.v8::internal::wasm::WasmCode"*, %"class.v8::internal::wasm::WasmCode"*, %"class.v8::internal::wasm::WasmCode"*, %"class.std::__1::unique_ptr.1400", %"class.std::__1::unique_ptr.1406", %"class.std::__1::unique_ptr.1412", %"class.v8::base::RecursiveMutex", %"class.std::__1::map.1417", %"class.std::__1::vector.1426", %"class.std::__1::unique_ptr.1434", %"class.std::__1::vector.1440", %"class.std::__1::unique_ptr.1447", i8, %"class.std::__1::unique_ptr.1453", i8, i8, %"struct.std::__1::atomic.19", %"struct.std::__1::atomic.19", %"struct.std::__1::atomic.19" }
%"class.v8::internal::OperationsBarrier::Token" = type { %"class.v8::internal::OperationsBarrier"* }
%"class.v8::internal::OperationsBarrier" = type { %"class.v8::base::Mutex", %"class.v8::base::ConditionVariable", i8, i64 }
%"class.v8::internal::wasm::WasmCodeAllocator" = type { %"class.v8::internal::wasm::WasmCodeManager"*, %"class.v8::internal::wasm::DisjointAllocationPool", %"class.v8::internal::wasm::DisjointAllocationPool", %"class.v8::internal::wasm::DisjointAllocationPool", %"class.std::__1::vector.1196", i32, %"struct.std::__1::atomic.19", %"struct.std::__1::atomic.19", %"struct.std::__1::atomic.19", %"class.std::__1::shared_ptr.676" }
%"class.v8::internal::wasm::WasmCodeManager" = type { i64, %"struct.std::__1::atomic.19", %"struct.std::__1::atomic.19", i32, %"class.v8::base::Mutex", %"class.std::__1::map" }
%"class.std::__1::map" = type { %"class.std::__1::__tree.1180" }
%"class.std::__1::__tree.1180" = type { %"class.std::__1::__tree_end_node"*, %"class.std::__1::__compressed_pair.1181", %"class.std::__1::__compressed_pair.1185" }
%"class.std::__1::__compressed_pair.1181" = type { %"struct.std::__1::__compressed_pair_elem.80" }
%"class.std::__1::__compressed_pair.1185" = type { %"struct.std::__1::__compressed_pair_elem.7" }
%"class.v8::internal::wasm::DisjointAllocationPool" = type { %"class.std::__1::set.1188" }
%"class.std::__1::set.1188" = type { %"class.std::__1::__tree.1189" }
%"class.std::__1::__tree.1189" = type { %"class.std::__1::__tree_end_node"*, %"class.std::__1::__compressed_pair.1190", %"class.std::__1::__compressed_pair.1194" }
%"class.std::__1::__compressed_pair.1190" = type { %"struct.std::__1::__compressed_pair_elem.80" }
%"class.std::__1::__compressed_pair.1194" = type { %"struct.std::__1::__compressed_pair_elem.7" }
%"class.std::__1::vector.1196" = type { %"class.std::__1::__vector_base.1197" }
%"class.std::__1::__vector_base.1197" = type { %"class.v8::internal::VirtualMemory"*, %"class.v8::internal::VirtualMemory"*, %"class.std::__1::__compressed_pair.1198" }
%"class.std::__1::__compressed_pair.1198" = type { %"struct.std::__1::__compressed_pair_elem.790" }
%"class.v8::internal::wasm::WasmFeatures" = type { %"class.v8::base::EnumSet" }
%"class.v8::base::EnumSet" = type { i32 }
%"class.std::__1::shared_ptr.1202" = type { %"struct.v8::internal::wasm::WasmModule"*, %"class.std::__1::__shared_weak_count"* }
%"struct.v8::internal::wasm::WasmModule" = type { %"class.std::__1::unique_ptr.1203", i32, i32, i8, i8, i8, i8, i8, i32, %"class.std::__1::vector.1209", i32, i32, i32, i32, i32, i32, i32, i32, %"class.v8::internal::wasm::WireBytesRef", %"class.v8::internal::wasm::WireBytesRef", %"class.std::__1::vector.1223", %"class.std::__1::vector.1231", %"class.std::__1::vector.1238", %"class.std::__1::vector.1245", %"class.std::__1::vector.1252", %"class.std::__1::vector.1259", %"class.std::__1::vector.1266", %"class.std::__1::vector.1273", %"class.std::__1::vector.1280", %"class.std::__1::vector.1287", %"class.std::__1::vector.1300", %"class.std::__1::unordered_map.1307", %"class.v8::internal::wasm::SignatureMap", i8, %"class.v8::internal::wasm::LazilyGeneratedNames", %"struct.v8::internal::wasm::WasmDebugSymbols", %"class.std::__1::unique_ptr.1368" }
%"class.std::__1::unique_ptr.1203" = type { %"class.std::__1::__compressed_pair.1204" }
%"class.std::__1::__compressed_pair.1204" = type { %"struct.std::__1::__compressed_pair_elem.1205" }
%"struct.std::__1::__compressed_pair_elem.1205" = type { %"class.v8::internal::Zone"* }
%"class.std::__1::vector.1209" = type { %"class.std::__1::__vector_base.1210" }
%"class.std::__1::__vector_base.1210" = type { %"struct.v8::internal::wasm::WasmGlobal"*, %"struct.v8::internal::wasm::WasmGlobal"*, %"class.std::__1::__compressed_pair.1218" }
%"struct.v8::internal::wasm::WasmGlobal" = type <{ %"class.v8::internal::wasm::ValueType", i8, [3 x i8], %"class.v8::internal::wasm::WasmInitExpr", %union.anon.1217, i8, i8, [2 x i8] }>
%"class.v8::internal::wasm::ValueType" = type { i32 }
%"class.v8::internal::wasm::WasmInitExpr" = type { %"union.v8::internal::wasm::WasmInitExpr::Immediate", i32, %"class.std::__1::unique_ptr.1211" }
%"union.v8::internal::wasm::WasmInitExpr::Immediate" = type { i64, [8 x i8] }
%"class.std::__1::unique_ptr.1211" = type { %"class.std::__1::__compressed_pair.1212" }
%"class.std::__1::__compressed_pair.1212" = type { %"struct.std::__1::__compressed_pair_elem.1213" }
%"struct.std::__1::__compressed_pair_elem.1213" = type { %"class.v8::internal::wasm::WasmInitExpr"* }
%union.anon.1217 = type { i32 }
%"class.std::__1::__compressed_pair.1218" = type { %"struct.std::__1::__compressed_pair_elem.1219" }
%"struct.std::__1::__compressed_pair_elem.1219" = type { %"struct.v8::internal::wasm::WasmGlobal"* }
%"class.v8::internal::wasm::WireBytesRef" = type { i32, i32 }
%"class.std::__1::vector.1223" = type { %"class.std::__1::__vector_base.1224" }
%"class.std::__1::__vector_base.1224" = type { %"struct.v8::internal::wasm::TypeDefinition"*, %"struct.v8::internal::wasm::TypeDefinition"*, %"class.std::__1::__compressed_pair.1226" }
%"struct.v8::internal::wasm::TypeDefinition" = type { %union.anon.1225 }
%union.anon.1225 = type { %"class.v8::internal::Signature"* }
%"class.v8::internal::Signature" = type { i64, i64, %"class.v8::internal::wasm::ValueType"* }
%"class.std::__1::__compressed_pair.1226" = type { %"struct.std::__1::__compressed_pair_elem.1227" }
%"struct.std::__1::__compressed_pair_elem.1227" = type { %"struct.v8::internal::wasm::TypeDefinition"* }
%"class.std::__1::vector.1231" = type { %"class.std::__1::__vector_base.1232" }
%"class.std::__1::__vector_base.1232" = type { i8*, i8*, %"class.std::__1::__compressed_pair.1233" }
%"class.std::__1::__compressed_pair.1233" = type { %"struct.std::__1::__compressed_pair_elem.1234" }
%"struct.std::__1::__compressed_pair_elem.1234" = type { i8* }
%"class.std::__1::vector.1238" = type { %"class.std::__1::__vector_base.1239" }
%"class.std::__1::__vector_base.1239" = type { i32*, i32*, %"class.std::__1::__compressed_pair.1240" }
%"class.std::__1::__compressed_pair.1240" = type { %"struct.std::__1::__compressed_pair_elem.1241" }
%"struct.std::__1::__compressed_pair_elem.1241" = type { i32* }
%"class.std::__1::vector.1245" = type { %"class.std::__1::__vector_base.1246" }
%"class.std::__1::__vector_base.1246" = type { %"struct.v8::internal::wasm::WasmFunction"*, %"struct.v8::internal::wasm::WasmFunction"*, %"class.std::__1::__compressed_pair.1247" }
%"struct.v8::internal::wasm::WasmFunction" = type <{ %"class.v8::internal::Signature"*, i32, i32, %"class.v8::internal::wasm::WireBytesRef", i8, i8, i8, [5 x i8] }>
%"class.std::__1::__compressed_pair.1247" = type { %"struct.std::__1::__compressed_pair_elem.1248" }
%"struct.std::__1::__compressed_pair_elem.1248" = type { %"struct.v8::internal::wasm::WasmFunction"* }
%"class.std::__1::vector.1252" = type { %"class.std::__1::__vector_base.1253" }
%"class.std::__1::__vector_base.1253" = type { %"struct.v8::internal::wasm::WasmDataSegment"*, %"struct.v8::internal::wasm::WasmDataSegment"*, %"class.std::__1::__compressed_pair.1254" }
%"struct.v8::internal::wasm::WasmDataSegment" = type <{ %"class.v8::internal::wasm::WasmInitExpr", %"class.v8::internal::wasm::WireBytesRef", i8, [7 x i8] }>
%"class.std::__1::__compressed_pair.1254" = type { %"struct.std::__1::__compressed_pair_elem.1255" }
%"struct.std::__1::__compressed_pair_elem.1255" = type { %"struct.v8::internal::wasm::WasmDataSegment"* }
%"class.std::__1::vector.1259" = type { %"class.std::__1::__vector_base.1260" }
%"class.std::__1::__vector_base.1260" = type { %"struct.v8::internal::wasm::WasmTable"*, %"struct.v8::internal::wasm::WasmTable"*, %"class.std::__1::__compressed_pair.1261" }
%"struct.v8::internal::wasm::WasmTable" = type { %"class.v8::internal::wasm::ValueType", i32, i32, i8, i8, i8, %"class.v8::internal::wasm::WasmInitExpr" }
%"class.std::__1::__compressed_pair.1261" = type { %"struct.std::__1::__compressed_pair_elem.1262" }
%"struct.std::__1::__compressed_pair_elem.1262" = type { %"struct.v8::internal::wasm::WasmTable"* }
%"class.std::__1::vector.1266" = type { %"class.std::__1::__vector_base.1267" }
%"class.std::__1::__vector_base.1267" = type { %"struct.v8::internal::wasm::WasmImport"*, %"struct.v8::internal::wasm::WasmImport"*, %"class.std::__1::__compressed_pair.1268" }
%"struct.v8::internal::wasm::WasmImport" = type { %"class.v8::internal::wasm::WireBytesRef", %"class.v8::internal::wasm::WireBytesRef", i8, i32 }
%"class.std::__1::__compressed_pair.1268" = type { %"struct.std::__1::__compressed_pair_elem.1269" }
%"struct.std::__1::__compressed_pair_elem.1269" = type { %"struct.v8::internal::wasm::WasmImport"* }
%"class.std::__1::vector.1273" = type { %"class.std::__1::__vector_base.1274" }
%"class.std::__1::__vector_base.1274" = type { %"struct.v8::internal::wasm::WasmExport"*, %"struct.v8::internal::wasm::WasmExport"*, %"class.std::__1::__compressed_pair.1275" }
%"struct.v8::internal::wasm::WasmExport" = type { %"class.v8::internal::wasm::WireBytesRef", i8, i32 }
%"class.std::__1::__compressed_pair.1275" = type { %"struct.std::__1::__compressed_pair_elem.1276" }
%"struct.std::__1::__compressed_pair_elem.1276" = type { %"struct.v8::internal::wasm::WasmExport"* }
%"class.std::__1::vector.1280" = type { %"class.std::__1::__vector_base.1281" }
%"class.std::__1::__vector_base.1281" = type { %"struct.v8::internal::wasm::WasmException"*, %"struct.v8::internal::wasm::WasmException"*, %"class.std::__1::__compressed_pair.1282" }
%"struct.v8::internal::wasm::WasmException" = type { %"class.v8::internal::Signature"* }
%"class.std::__1::__compressed_pair.1282" = type { %"struct.std::__1::__compressed_pair_elem.1283" }
%"struct.std::__1::__compressed_pair_elem.1283" = type { %"struct.v8::internal::wasm::WasmException"* }
%"class.std::__1::vector.1287" = type { %"class.std::__1::__vector_base.1288" }
%"class.std::__1::__vector_base.1288" = type { %"struct.v8::internal::wasm::WasmElemSegment"*, %"struct.v8::internal::wasm::WasmElemSegment"*, %"class.std::__1::__compressed_pair.1295" }
%"struct.v8::internal::wasm::WasmElemSegment" = type <{ %"class.v8::internal::wasm::ValueType", i32, %"class.v8::internal::wasm::WasmInitExpr", %"class.std::__1::vector.1289", i32, [4 x i8] }>
%"class.std::__1::vector.1289" = type { %"class.std::__1::__vector_base.1290" }
%"class.std::__1::__vector_base.1290" = type { %"class.v8::internal::wasm::WasmInitExpr"*, %"class.v8::internal::wasm::WasmInitExpr"*, %"class.std::__1::__compressed_pair.1291" }
%"class.std::__1::__compressed_pair.1291" = type { %"struct.std::__1::__compressed_pair_elem.1213" }
%"class.std::__1::__compressed_pair.1295" = type { %"struct.std::__1::__compressed_pair_elem.1296" }
%"struct.std::__1::__compressed_pair_elem.1296" = type { %"struct.v8::internal::wasm::WasmElemSegment"* }
%"class.std::__1::vector.1300" = type { %"class.std::__1::__vector_base.1301" }
%"class.std::__1::__vector_base.1301" = type { %"struct.v8::internal::wasm::WasmCompilationHint"*, %"struct.v8::internal::wasm::WasmCompilationHint"*, %"class.std::__1::__compressed_pair.1302" }
%"struct.v8::internal::wasm::WasmCompilationHint" = type { i8, i8, i8 }
%"class.std::__1::__compressed_pair.1302" = type { %"struct.std::__1::__compressed_pair_elem.1303" }
%"struct.std::__1::__compressed_pair_elem.1303" = type { %"struct.v8::internal::wasm::WasmCompilationHint"* }
%"class.std::__1::unordered_map.1307" = type { %"class.std::__1::__hash_table.1308" }
%"class.std::__1::__hash_table.1308" = type <{ %"class.std::__1::unique_ptr.1309", %"class.std::__1::__compressed_pair.1319", %"class.std::__1::__compressed_pair.1324", %"class.std::__1::__compressed_pair.1329", [4 x i8] }>
%"class.std::__1::unique_ptr.1309" = type { %"class.std::__1::__compressed_pair.1310" }
%"class.std::__1::__compressed_pair.1310" = type { %"struct.std::__1::__compressed_pair_elem.1311", %"struct.std::__1::__compressed_pair_elem.1313" }
%"struct.std::__1::__compressed_pair_elem.1311" = type { %"struct.std::__1::__hash_node_base.1312"** }
%"struct.std::__1::__hash_node_base.1312" = type { %"struct.std::__1::__hash_node_base.1312"* }
%"struct.std::__1::__compressed_pair_elem.1313" = type { %"class.std::__1::__bucket_list_deallocator.1314" }
%"class.std::__1::__bucket_list_deallocator.1314" = type { %"class.std::__1::__compressed_pair.1315" }
%"class.std::__1::__compressed_pair.1315" = type { %"struct.std::__1::__compressed_pair_elem.7" }
%"class.std::__1::__compressed_pair.1319" = type { %"struct.std::__1::__compressed_pair_elem.1320" }
%"struct.std::__1::__compressed_pair_elem.1320" = type { %"struct.std::__1::__hash_node_base.1312" }
%"class.std::__1::__compressed_pair.1324" = type { %"struct.std::__1::__compressed_pair_elem.7" }
%"class.std::__1::__compressed_pair.1329" = type { %"struct.std::__1::__compressed_pair_elem.17" }
%"class.v8::internal::wasm::SignatureMap" = type { i8, [7 x i8], %"class.std::__1::unordered_map.1335" }
%"class.std::__1::unordered_map.1335" = type { %"class.std::__1::__hash_table.1336" }
%"class.std::__1::__hash_table.1336" = type <{ %"class.std::__1::unique_ptr.1337", %"class.std::__1::__compressed_pair.1347", %"class.std::__1::__compressed_pair.1352", %"class.std::__1::__compressed_pair.1355", [4 x i8] }>
%"class.std::__1::unique_ptr.1337" = type { %"class.std::__1::__compressed_pair.1338" }
%"class.std::__1::__compressed_pair.1338" = type { %"struct.std::__1::__compressed_pair_elem.1339", %"struct.std::__1::__compressed_pair_elem.1341" }
%"struct.std::__1::__compressed_pair_elem.1339" = type { %"struct.std::__1::__hash_node_base.1340"** }
%"struct.std::__1::__hash_node_base.1340" = type { %"struct.std::__1::__hash_node_base.1340"* }
%"struct.std::__1::__compressed_pair_elem.1341" = type { %"class.std::__1::__bucket_list_deallocator.1342" }
%"class.std::__1::__bucket_list_deallocator.1342" = type { %"class.std::__1::__compressed_pair.1343" }
%"class.std::__1::__compressed_pair.1343" = type { %"struct.std::__1::__compressed_pair_elem.7" }
%"class.std::__1::__compressed_pair.1347" = type { %"struct.std::__1::__compressed_pair_elem.1348" }
%"struct.std::__1::__compressed_pair_elem.1348" = type { %"struct.std::__1::__hash_node_base.1340" }
%"class.std::__1::__compressed_pair.1352" = type { %"struct.std::__1::__compressed_pair_elem.7" }
%"class.std::__1::__compressed_pair.1355" = type { %"struct.std::__1::__compressed_pair_elem.17" }
%"class.v8::internal::wasm::LazilyGeneratedNames" = type { %"class.v8::base::Mutex", %"class.std::__1::unique_ptr.1361" }
%"class.std::__1::unique_ptr.1361" = type { %"class.std::__1::__compressed_pair.1362" }
%"class.std::__1::__compressed_pair.1362" = type { %"struct.std::__1::__compressed_pair_elem.1363" }
%"struct.std::__1::__compressed_pair_elem.1363" = type { %"class.std::__1::unordered_map.1364"* }
%"class.std::__1::unordered_map.1364" = type opaque
%"struct.v8::internal::wasm::WasmDebugSymbols" = type { i32, %"class.v8::internal::wasm::WireBytesRef" }
%"class.std::__1::unique_ptr.1368" = type { %"class.std::__1::__compressed_pair.1369" }
%"class.std::__1::__compressed_pair.1369" = type { %"struct.std::__1::__compressed_pair_elem.1370" }
%"struct.std::__1::__compressed_pair_elem.1370" = type { %"class.v8::internal::wasm::AsmJsOffsetInformation"* }
%"class.v8::internal::wasm::AsmJsOffsetInformation" = type { %"class.v8::base::Mutex", %"class.v8::internal::OwnedVector", %"class.std::__1::unique_ptr.1377" }
%"class.v8::internal::OwnedVector" = type { %"class.std::__1::unique_ptr.1371", i64 }
%"class.std::__1::unique_ptr.1377" = type { %"class.std::__1::__compressed_pair.1378" }
%"class.std::__1::__compressed_pair.1378" = type { %"struct.std::__1::__compressed_pair_elem.1379" }
%"struct.std::__1::__compressed_pair_elem.1379" = type { %"struct.v8::internal::wasm::AsmJsOffsets"* }
%"struct.v8::internal::wasm::AsmJsOffsets" = type opaque
%"class.std::__1::unique_ptr.1386" = type { %"class.std::__1::__compressed_pair.1387" }
%"class.std::__1::__compressed_pair.1387" = type { %"struct.std::__1::__compressed_pair_elem.1388" }
%"struct.std::__1::__compressed_pair_elem.1388" = type { %"class.v8::internal::wasm::WasmModuleSourceMap"* }
%"class.v8::internal::wasm::WasmModuleSourceMap" = type <{ %"class.std::__1::vector.90", %"class.std::__1::vector.1389", %"class.std::__1::vector.90", %"class.std::__1::vector.90", i8, [7 x i8] }>
%"class.std::__1::vector.1389" = type { %"class.std::__1::__vector_base.1390" }
%"class.std::__1::__vector_base.1390" = type { %"class.std::__1::basic_string"*, %"class.std::__1::basic_string"*, %"class.std::__1::__compressed_pair.1391" }
%"class.std::__1::__compressed_pair.1391" = type { %"struct.std::__1::__compressed_pair_elem.1392" }
%"struct.std::__1::__compressed_pair_elem.1392" = type { %"class.std::__1::basic_string"* }
%"class.std::__1::shared_ptr.1399" = type { %"class.v8::internal::OwnedVector"*, %"class.std::__1::__shared_weak_count"* }
%"class.std::__1::unique_ptr.1400" = type { %"class.std::__1::__compressed_pair.1401" }
%"class.std::__1::__compressed_pair.1401" = type { %"struct.std::__1::__compressed_pair_elem.1402" }
%"struct.std::__1::__compressed_pair_elem.1402" = type { %"class.v8::internal::wasm::CompilationState"* }
%"class.v8::internal::wasm::CompilationState" = type { i8 }
%"class.std::__1::unique_ptr.1406" = type { %"class.std::__1::__compressed_pair.1407" }
%"class.std::__1::__compressed_pair.1407" = type { %"struct.std::__1::__compressed_pair_elem.1408" }
%"struct.std::__1::__compressed_pair_elem.1408" = type { %"class.v8::internal::wasm::WasmImportWrapperCache"* }
%"class.v8::internal::wasm::WasmImportWrapperCache" = type opaque
%"class.std::__1::unique_ptr.1412" = type { %"class.std::__1::__compressed_pair.1413" }
%"class.std::__1::__compressed_pair.1413" = type { %"struct.std::__1::__compressed_pair_elem.1241" }
%"class.std::__1::map.1417" = type { %"class.std::__1::__tree.1418" }
%"class.std::__1::__tree.1418" = type { %"class.std::__1::__tree_end_node"*, %"class.std::__1::__compressed_pair.1419", %"class.std::__1::__compressed_pair.1423" }
%"class.std::__1::__compressed_pair.1419" = type { %"struct.std::__1::__compressed_pair_elem.80" }
%"class.std::__1::__compressed_pair.1423" = type { %"struct.std::__1::__compressed_pair_elem.7" }
%"class.std::__1::vector.1426" = type { %"class.std::__1::__vector_base.1427" }
%"class.std::__1::__vector_base.1427" = type { %"class.std::__1::unique_ptr.1428"*, %"class.std::__1::unique_ptr.1428"*, %"class.std::__1::__compressed_pair.1429" }
%"class.std::__1::unique_ptr.1428" = type opaque
%"class.std::__1::__compressed_pair.1429" = type { %"struct.std::__1::__compressed_pair_elem.1430" }
%"struct.std::__1::__compressed_pair_elem.1430" = type { %"class.std::__1::unique_ptr.1428"* }
%"class.std::__1::unique_ptr.1434" = type { %"class.std::__1::__compressed_pair.1435" }
%"class.std::__1::__compressed_pair.1435" = type { %"struct.std::__1::__compressed_pair_elem.1436" }
%"struct.std::__1::__compressed_pair_elem.1436" = type { %"class.v8::internal::wasm::WasmCode"** }
%"class.std::__1::vector.1440" = type { %"class.std::__1::__vector_base.1441" }
%"class.std::__1::__vector_base.1441" = type { %"struct.v8::internal::wasm::NativeModule::CodeSpaceData"*, %"struct.v8::internal::wasm::NativeModule::CodeSpaceData"*, %"class.std::__1::__compressed_pair.1442" }
%"struct.v8::internal::wasm::NativeModule::CodeSpaceData" = type { %"class.v8::base::AddressRegion", %"class.v8::internal::wasm::WasmCode"*, %"class.v8::internal::wasm::WasmCode"* }
%"class.std::__1::__compressed_pair.1442" = type { %"struct.std::__1::__compressed_pair_elem.1443" }
%"struct.std::__1::__compressed_pair_elem.1443" = type { %"struct.v8::internal::wasm::NativeModule::CodeSpaceData"* }
%"class.std::__1::unique_ptr.1447" = type { %"class.std::__1::__compressed_pair.1448" }
%"class.std::__1::__compressed_pair.1448" = type { %"struct.std::__1::__compressed_pair_elem.1449" }
%"struct.std::__1::__compressed_pair_elem.1449" = type { %"class.v8::internal::wasm::DebugInfo"* }
%"class.v8::internal::wasm::DebugInfo" = type opaque
%"class.std::__1::unique_ptr.1453" = type { %"class.std::__1::__compressed_pair.1454" }
%"class.std::__1::__compressed_pair.1454" = type { %"struct.std::__1::__compressed_pair_elem.1455" }
%"struct.std::__1::__compressed_pair_elem.1455" = type { %"class.std::__1::map.1456"* }
%"class.std::__1::map.1456" = type opaque
%"class.std::__1::unique_ptr.1371" = type { %"class.std::__1::__compressed_pair.1372" }
%"class.std::__1::__compressed_pair.1372" = type { %"struct.std::__1::__compressed_pair_elem.1373" }
%"struct.std::__1::__compressed_pair_elem.1373" = type { i8* }
%"struct.std::__1::atomic.1460" = type { %"struct.std::__1::__atomic_base.1461" }
%"struct.std::__1::__atomic_base.1461" = type { %"struct.std::__1::__atomic_base.1462" }
%"struct.std::__1::__atomic_base.1462" = type { %"struct.std::__1::__cxx_atomic_impl.1463" }
%"struct.std::__1::__cxx_atomic_impl.1463" = type { %"struct.std::__1::__cxx_atomic_base_impl.1464" }
%"struct.std::__1::__cxx_atomic_base_impl.1464" = type { i32 }
%"class.std::__1::basic_ostream" = type { i32 (...)**, %"class.std::__1::basic_ios.base" }
%"class.std::__1::basic_ios.base" = type <{ %"class.std::__1::ios_base", %"class.std::__1::basic_ostream"*, i32 }>
%"class.std::__1::ios_base" = type { i32 (...)**, i32, i64, i64, i32, i32, i8*, i8*, void (i32, %"class.std::__1::ios_base"*, i32)**, i32*, i64, i64, i64*, i64, i64, i8**, i64, i64 }
%"class.disasm::NameConverter" = type { i32 (...)**, %"class.v8::internal::EmbeddedVector" }
%"class.v8::internal::ZoneChunkList" = type { %"class.v8::internal::Zone"*, i64, %"struct.v8::internal::ZoneChunkList<int>::Chunk"*, %"struct.v8::internal::ZoneChunkList<int>::Chunk"* }
%"struct.v8::internal::ZoneChunkList<int>::Chunk" = type { i32, i32, %"struct.v8::internal::ZoneChunkList<int>::Chunk"*, %"struct.v8::internal::ZoneChunkList<int>::Chunk"* }
%"class.v8::internal::SafepointTableBuilder" = type { %"class.v8::internal::ZoneChunkList.1465", i32, i8, %"class.v8::internal::Zone"* }
%"class.v8::internal::ZoneChunkList.1465" = type { %"class.v8::internal::Zone"*, i64, %"struct.v8::internal::ZoneChunkList<v8::internal::SafepointTableBuilder::DeoptimizationInfo>::Chunk"*, %"struct.v8::internal::ZoneChunkList<v8::internal::SafepointTableBuilder::DeoptimizationInfo>::Chunk"* }
%"struct.v8::internal::ZoneChunkList<v8::internal::SafepointTableBuilder::DeoptimizationInfo>::Chunk" = type { i32, i32, %"struct.v8::internal::ZoneChunkList<v8::internal::SafepointTableBuilder::DeoptimizationInfo>::Chunk"*, %"struct.v8::internal::ZoneChunkList<v8::internal::SafepointTableBuilder::DeoptimizationInfo>::Chunk"* }
%"class.v8::internal::Assembler" = type { %"class.v8::internal::AssemblerBase", %"class.v8::internal::RelocInfoWriter", %"class.std::__1::deque.1516", i32, %"class.std::__1::deque.1516", %"class.std::__1::map.1525", %"class.v8::internal::ConstPool" }
%"class.v8::internal::AssemblerBase" = type { i32 (...)**, %"class.std::__1::unique_ptr.1466", i8*, %"class.std::__1::forward_list", i8*, %"class.v8::internal::CodeCommentsWriter", %"class.std::__1::vector.1484", %"class.std::__1::vector.1020", %"class.std::__1::unordered_map.1492", %"struct.v8::internal::AssemblerOptions", i64, i8, i8, %"class.v8::internal::JumpOptimizationInfo"* }
%"class.std::__1::unique_ptr.1466" = type { %"class.std::__1::__compressed_pair.1467" }
%"class.std::__1::__compressed_pair.1467" = type { %"struct.std::__1::__compressed_pair_elem.1468" }
%"struct.std::__1::__compressed_pair_elem.1468" = type { %"class.v8::internal::AssemblerBuffer"* }
%"class.v8::internal::AssemblerBuffer" = type { i32 (...)** }
%"class.std::__1::forward_list" = type { %"class.std::__1::__forward_list_base" }
%"class.std::__1::__forward_list_base" = type { %"class.std::__1::__compressed_pair.1472" }
%"class.std::__1::__compressed_pair.1472" = type { %"struct.std::__1::__compressed_pair_elem.1473" }
%"struct.std::__1::__compressed_pair_elem.1473" = type { %"struct.std::__1::__forward_begin_node" }
%"struct.std::__1::__forward_begin_node" = type { %"struct.std::__1::__forward_list_node"* }
%"struct.std::__1::__forward_list_node" = type opaque
%"class.v8::internal::CodeCommentsWriter" = type { i32, %"class.std::__1::vector.1477" }
%"class.std::__1::vector.1477" = type { %"class.std::__1::__vector_base.1478" }
%"class.std::__1::__vector_base.1478" = type { %"struct.v8::internal::CodeCommentEntry"*, %"struct.v8::internal::CodeCommentEntry"*, %"class.std::__1::__compressed_pair.1479" }
%"struct.v8::internal::CodeCommentEntry" = type { i32, %"class.std::__1::basic_string" }
%"class.std::__1::__compressed_pair.1479" = type { %"struct.std::__1::__compressed_pair_elem.1480" }
%"struct.std::__1::__compressed_pair_elem.1480" = type { %"struct.v8::internal::CodeCommentEntry"* }
%"class.std::__1::vector.1484" = type { %"class.std::__1::__vector_base.1485" }
%"class.std::__1::__vector_base.1485" = type { %"class.v8::internal::Handle.1486"*, %"class.v8::internal::Handle.1486"*, %"class.std::__1::__compressed_pair.1487" }
%"class.v8::internal::Handle.1486" = type { %"class.v8::internal::HandleBase" }
%"class.std::__1::__compressed_pair.1487" = type { %"struct.std::__1::__compressed_pair_elem.1488" }
%"struct.std::__1::__compressed_pair_elem.1488" = type { %"class.v8::internal::Handle.1486"* }
%"class.std::__1::unordered_map.1492" = type { %"class.std::__1::__hash_table.1493" }
%"class.std::__1::__hash_table.1493" = type <{ %"class.std::__1::unique_ptr.1494", %"class.std::__1::__compressed_pair.1504", %"class.std::__1::__compressed_pair.1509", %"class.std::__1::__compressed_pair.1512", [4 x i8] }>
%"class.std::__1::unique_ptr.1494" = type { %"class.std::__1::__compressed_pair.1495" }
%"class.std::__1::__compressed_pair.1495" = type { %"struct.std::__1::__compressed_pair_elem.1496", %"struct.std::__1::__compressed_pair_elem.1498" }
%"struct.std::__1::__compressed_pair_elem.1496" = type { %"struct.std::__1::__hash_node_base.1497"** }
%"struct.std::__1::__hash_node_base.1497" = type { %"struct.std::__1::__hash_node_base.1497"* }
%"struct.std::__1::__compressed_pair_elem.1498" = type { %"class.std::__1::__bucket_list_deallocator.1499" }
%"class.std::__1::__bucket_list_deallocator.1499" = type { %"class.std::__1::__compressed_pair.1500" }
%"class.std::__1::__compressed_pair.1500" = type { %"struct.std::__1::__compressed_pair_elem.7" }
%"class.std::__1::__compressed_pair.1504" = type { %"struct.std::__1::__compressed_pair_elem.1505" }
%"struct.std::__1::__compressed_pair_elem.1505" = type { %"struct.std::__1::__hash_node_base.1497" }
%"class.std::__1::__compressed_pair.1509" = type { %"struct.std::__1::__compressed_pair_elem.7" }
%"class.std::__1::__compressed_pair.1512" = type { %"struct.std::__1::__compressed_pair_elem.17" }
%"struct.v8::internal::AssemblerOptions" = type <{ i8, i8, i8, i8, i8, i8, i8, i8, i64, i8, i8, i8, [5 x i8] }>
%"class.v8::internal::JumpOptimizationInfo" = type { i32, i8, %"class.std::__1::vector.1238", i64 }
%"class.v8::internal::RelocInfoWriter" = type { i8*, i8* }
%"class.std::__1::deque.1516" = type { %"class.std::__1::__deque_base.1517" }
%"class.std::__1::__deque_base.1517" = type { %"struct.std::__1::__split_buffer.1518", i64, %"class.std::__1::__compressed_pair.1524" }
%"struct.std::__1::__split_buffer.1518" = type { i32**, i32**, i32**, %"class.std::__1::__compressed_pair.1519" }
%"class.std::__1::__compressed_pair.1519" = type { %"struct.std::__1::__compressed_pair_elem.1520" }
%"struct.std::__1::__compressed_pair_elem.1520" = type { i32** }
%"class.std::__1::__compressed_pair.1524" = type { %"struct.std::__1::__compressed_pair_elem.7" }
%"class.std::__1::map.1525" = type { %"class.std::__1::__tree.1526" }
%"class.std::__1::__tree.1526" = type { %"class.std::__1::__tree_end_node"*, %"class.std::__1::__compressed_pair.1527", %"class.std::__1::__compressed_pair.1531" }
%"class.std::__1::__compressed_pair.1527" = type { %"struct.std::__1::__compressed_pair_elem.80" }
%"class.std::__1::__compressed_pair.1531" = type { %"struct.std::__1::__compressed_pair_elem.7" }
%"class.v8::internal::ConstPool" = type { %"class.v8::internal::Assembler"*, %"class.std::__1::multimap" }
%"class.std::__1::multimap" = type { %"class.std::__1::__tree.1536" }
%"class.std::__1::__tree.1536" = type { %"class.std::__1::__tree_end_node"*, %"class.std::__1::__compressed_pair.1537", %"class.std::__1::__compressed_pair.1541" }
%"class.std::__1::__compressed_pair.1537" = type { %"struct.std::__1::__compressed_pair_elem.80" }
%"class.std::__1::__compressed_pair.1541" = type { %"struct.std::__1::__compressed_pair_elem.7" }
%"struct.v8::internal::SafepointTableBuilder::DeoptimizationInfo" = type <{ i32, i32, i32, [4 x i8], %"class.v8::internal::ZoneChunkList"*, i32, [4 x i8] }>
%"class.v8::internal::ZoneVector" = type { %"class.std::__1::vector.1544" }
%"class.std::__1::vector.1544" = type { %"class.std::__1::__vector_base.1545" }
%"class.std::__1::__vector_base.1545" = type { i8*, i8*, %"class.std::__1::__compressed_pair.1546" }
%"class.std::__1::__compressed_pair.1546" = type { %"struct.std::__1::__compressed_pair_elem.1234", %"struct.std::__1::__compressed_pair_elem.1547" }
%"struct.std::__1::__compressed_pair_elem.1547" = type { %"class.v8::internal::ZoneAllocator" }
%"class.v8::internal::ZoneAllocator" = type { %"class.v8::internal::Zone"* }
%"class.std::__1::__vector_base_common" = type { i8 }
%"class.std::__1::locale" = type { %"class.std::__1::locale::__imp"* }
%"class.std::__1::locale::__imp" = type opaque
%"class.std::__1::basic_ostream<char, std::__1::char_traits<char> >::sentry" = type { i8, %"class.std::__1::basic_ostream"* }
%"class.std::__1::basic_streambuf" = type { i32 (...)**, %"class.std::__1::locale", i8*, i8*, i8*, i8*, i8*, i8* }
%"class.std::__1::locale::facet" = type { %"class.std::__1::__shared_count" }
%"class.std::__1::ctype" = type <{ %"class.std::__1::locale::facet", i16*, i8, [7 x i8] }>
%"struct.std::__1::basic_string<char, std::__1::char_traits<char>, std::__1::allocator<char> >::__short" = type { [23 x i8], %struct.anon }
%struct.anon = type { i8 }

$_ZN2v88internal13ZoneChunkListINS0_21SafepointTableBuilder18DeoptimizationInfoEE9push_backERKS3_ = comdat any

$_ZNSt3__124__put_character_sequenceIcNS_11char_traitsIcEEEERNS_13basic_ostreamIT_T0_EES7_PKS4_m = comdat any

$_ZNSt3__116__pad_and_outputIcNS_11char_traitsIcEEEENS_19ostreambuf_iteratorIT_T0_EES6_PKS4_S8_S8_RNS_8ios_baseES4_ = comdat any

@.str = private unnamed_addr constant [17 x i8] c"unreachable code\00", align 1
@.str.1 = private unnamed_addr constant [18 x i8] c"Check failed: %s.\00", align 1
@.str.2 = private unnamed_addr constant [8 x i8] c"len > 0\00", align 1
@.str.3 = private unnamed_addr constant [2 x i8] c"1\00", align 1
@.str.4 = private unnamed_addr constant [2 x i8] c"0\00", align 1
@_ZTVN6disasm13NameConverterE = external unnamed_addr constant { [11 x i8*] }, align 8
@_ZNSt3__15ctypeIcE2idE = external global %"class.std::__1::locale::id", align 8

@_ZN2v88internal14SafepointTableC1EPNS0_7IsolateEmNS0_4CodeE = hidden unnamed_addr alias void (%"class.v8::internal::SafepointTable"*, %"class.v8::internal::Isolate"*, i64, i64), void (%"class.v8::internal::SafepointTable"*, %"class.v8::internal::Isolate"*, i64, i64)* @_ZN2v88internal14SafepointTableC2EPNS0_7IsolateEmNS0_4CodeE
@_ZN2v88internal14SafepointTableC1EPKNS0_4wasm8WasmCodeE = hidden unnamed_addr alias void (%"class.v8::internal::SafepointTable"*, %"class.v8::internal::wasm::WasmCode"*), void (%"class.v8::internal::SafepointTable"*, %"class.v8::internal::wasm::WasmCode"*)* @_ZN2v88internal14SafepointTableC2EPKNS0_4wasm8WasmCodeE
@_ZN2v88internal14SafepointTableC1Emmb = hidden unnamed_addr alias void (%"class.v8::internal::SafepointTable"*, i64, i64, i1), void (%"class.v8::internal::SafepointTable"*, i64, i64, i1)* @_ZN2v88internal14SafepointTableC2Emmb

; Function Attrs: nounwind ssp uwtable
define hidden void @_ZN2v88internal14SafepointTableC2EPNS0_7IsolateEmNS0_4CodeE(%"class.v8::internal::SafepointTable"* nocapture, %"class.v8::internal::Isolate"*, i64, i64) unnamed_addr #0 align 2 {
  %5 = alloca %"class.v8::internal::Code", align 8
  %6 = getelementptr inbounds %"class.v8::internal::Code", %"class.v8::internal::Code"* %5, i64 0, i32 0, i32 0, i32 0, i32 0
  store i64 %3, i64* %6, align 8
  %7 = add i64 %3, 27
  %8 = inttoptr i64 %7 to i32*
  %9 = load atomic i32, i32* %8 monotonic, align 4
  %10 = and i32 %9, 536870912
  %11 = icmp eq i32 %10, 0
  br i1 %11, label %14, label %12, !prof !2

12:                                               ; preds = %4
  %13 = call i64 @_ZNK2v88internal4Code23OffHeapInstructionStartEPNS0_7IsolateEm(%"class.v8::internal::Code"* nonnull %5, %"class.v8::internal::Isolate"* %1, i64 %2) #9
  br label %16

14:                                               ; preds = %4
  %15 = add i64 %3, 63
  br label %16

16:                                               ; preds = %12, %14
  %17 = phi i64 [ %13, %12 ], [ %15, %14 ]
  %18 = call i64 @_ZNK2v88internal4Code21SafepointTableAddressEv(%"class.v8::internal::Code"* nonnull %5) #9
  %19 = getelementptr inbounds %"class.v8::internal::SafepointTable", %"class.v8::internal::SafepointTable"* %0, i64 0, i32 0
  store i64 %17, i64* %19, align 8
  %20 = getelementptr inbounds %"class.v8::internal::SafepointTable", %"class.v8::internal::SafepointTable"* %0, i64 0, i32 1
  store i8 1, i8* %20, align 8
  %21 = getelementptr inbounds %"class.v8::internal::SafepointTable", %"class.v8::internal::SafepointTable"* %0, i64 0, i32 2
  store i64 %18, i64* %21, align 8
  %22 = getelementptr inbounds %"class.v8::internal::SafepointTable", %"class.v8::internal::SafepointTable"* %0, i64 0, i32 3
  %23 = inttoptr i64 %18 to i32*
  %24 = load i32, i32* %23, align 4
  store i32 %24, i32* %22, align 8
  %25 = getelementptr inbounds %"class.v8::internal::SafepointTable", %"class.v8::internal::SafepointTable"* %0, i64 0, i32 4
  %26 = add i64 %18, 4
  %27 = inttoptr i64 %26 to i32*
  %28 = load i32, i32* %27, align 4
  store i32 %28, i32* %25, align 4
  ret void
}

declare i64 @_ZNK2v88internal4Code21SafepointTableAddressEv(%"class.v8::internal::Code"*) local_unnamed_addr #1

; Function Attrs: nofree norecurse nounwind ssp uwtable
define hidden void @_ZN2v88internal14SafepointTableC2Emmb(%"class.v8::internal::SafepointTable"* nocapture, i64, i64, i1 zeroext) unnamed_addr #2 align 2 {
  %5 = zext i1 %3 to i8
  %6 = getelementptr inbounds %"class.v8::internal::SafepointTable", %"class.v8::internal::SafepointTable"* %0, i64 0, i32 0
  store i64 %1, i64* %6, align 8
  %7 = getelementptr inbounds %"class.v8::internal::SafepointTable", %"class.v8::internal::SafepointTable"* %0, i64 0, i32 1
  store i8 %5, i8* %7, align 8
  %8 = getelementptr inbounds %"class.v8::internal::SafepointTable", %"class.v8::internal::SafepointTable"* %0, i64 0, i32 2
  store i64 %2, i64* %8, align 8
  %9 = getelementptr inbounds %"class.v8::internal::SafepointTable", %"class.v8::internal::SafepointTable"* %0, i64 0, i32 3
  %10 = inttoptr i64 %2 to i32*
  %11 = load i32, i32* %10, align 4
  store i32 %11, i32* %9, align 8
  %12 = getelementptr inbounds %"class.v8::internal::SafepointTable", %"class.v8::internal::SafepointTable"* %0, i64 0, i32 4
  %13 = add i64 %2, 4
  %14 = inttoptr i64 %13 to i32*
  %15 = load i32, i32* %14, align 4
  store i32 %15, i32* %12, align 4
  ret void
}

; Function Attrs: nofree norecurse nounwind ssp uwtable
define hidden void @_ZN2v88internal14SafepointTableC2EPKNS0_4wasm8WasmCodeE(%"class.v8::internal::SafepointTable"* nocapture, %"class.v8::internal::wasm::WasmCode"* nocapture readonly) unnamed_addr #2 align 2 {
  %3 = getelementptr inbounds %"class.v8::internal::wasm::WasmCode", %"class.v8::internal::wasm::WasmCode"* %1, i64 0, i32 1
  %4 = bitcast i8** %3 to i64*
  %5 = load i64, i64* %4, align 8
  %6 = getelementptr inbounds %"class.v8::internal::wasm::WasmCode", %"class.v8::internal::wasm::WasmCode"* %1, i64 0, i32 12
  %7 = load i32, i32* %6, align 8
  %8 = sext i32 %7 to i64
  %9 = add i64 %5, %8
  %10 = getelementptr inbounds %"class.v8::internal::SafepointTable", %"class.v8::internal::SafepointTable"* %0, i64 0, i32 0
  store i64 %5, i64* %10, align 8
  %11 = getelementptr inbounds %"class.v8::internal::SafepointTable", %"class.v8::internal::SafepointTable"* %0, i64 0, i32 1
  store i8 0, i8* %11, align 8
  %12 = getelementptr inbounds %"class.v8::internal::SafepointTable", %"class.v8::internal::SafepointTable"* %0, i64 0, i32 2
  store i64 %9, i64* %12, align 8
  %13 = getelementptr inbounds %"class.v8::internal::SafepointTable", %"class.v8::internal::SafepointTable"* %0, i64 0, i32 3
  %14 = inttoptr i64 %9 to i32*
  %15 = load i32, i32* %14, align 4
  store i32 %15, i32* %13, align 8
  %16 = getelementptr inbounds %"class.v8::internal::SafepointTable", %"class.v8::internal::SafepointTable"* %0, i64 0, i32 4
  %17 = add i64 %9, 4
  %18 = inttoptr i64 %17 to i32*
  %19 = load i32, i32* %18, align 4
  store i32 %19, i32* %16, align 4
  ret void
}

; Function Attrs: nounwind ssp uwtable
define hidden i32 @_ZN2v88internal14SafepointTable14find_return_pcEj(%"class.v8::internal::SafepointTable"* nocapture readonly, i32) local_unnamed_addr #0 align 2 {
  %3 = getelementptr inbounds %"class.v8::internal::SafepointTable", %"class.v8::internal::SafepointTable"* %0, i64 0, i32 3
  %4 = load i32, i32* %3, align 8
  %5 = icmp eq i32 %4, 0
  br i1 %5, label %27, label %6

6:                                                ; preds = %2
  %7 = getelementptr inbounds %"class.v8::internal::SafepointTable", %"class.v8::internal::SafepointTable"* %0, i64 0, i32 2
  %8 = load i64, i64* %7, align 8
  %9 = zext i32 %4 to i64
  br label %12

10:                                               ; preds = %24
  %11 = icmp ult i64 %26, %9
  br i1 %11, label %12, label %27

12:                                               ; preds = %6, %10
  %13 = phi i64 [ 0, %6 ], [ %26, %10 ]
  %14 = mul i64 %13, 12
  %15 = and i64 %14, 4294967292
  %16 = add i64 %8, %15
  %17 = add i64 %16, 16
  %18 = inttoptr i64 %17 to i32*
  %19 = load i32, i32* %18, align 4
  %20 = icmp eq i32 %19, %1
  %21 = add i64 %16, 8
  %22 = inttoptr i64 %21 to i32*
  %23 = load i32, i32* %22, align 4
  br i1 %20, label %28, label %24

24:                                               ; preds = %12
  %25 = icmp eq i32 %23, %1
  %26 = add nuw nsw i64 %13, 1
  br i1 %25, label %28, label %10

27:                                               ; preds = %10, %2
  tail call void (i8*, ...) @_Z8V8_FatalPKcz(i8* getelementptr inbounds ([17 x i8], [17 x i8]* @.str, i64 0, i64 0)) #10
  unreachable

28:                                               ; preds = %12, %24
  %29 = phi i32 [ %1, %24 ], [ %23, %12 ]
  ret i32 %29
}

; Function Attrs: argmemonly nounwind
declare void @llvm.lifetime.start.p0i8(i64 immarg, i8* nocapture) #3

; Function Attrs: argmemonly nounwind
declare void @llvm.lifetime.end.p0i8(i64 immarg, i8* nocapture) #3

; Function Attrs: noreturn
declare void @_Z8V8_FatalPKcz(i8*, ...) local_unnamed_addr #4

; Function Attrs: nounwind ssp uwtable
define hidden void @_ZNK2v88internal14SafepointTable9FindEntryEm(%"class.v8::internal::SafepointEntry"* noalias nocapture sret, %"class.v8::internal::SafepointTable"* nocapture readonly, i64) local_unnamed_addr #0 align 2 {
  %4 = getelementptr inbounds %"class.v8::internal::SafepointTable", %"class.v8::internal::SafepointTable"* %1, i64 0, i32 0
  %5 = load i64, i64* %4, align 8
  %6 = sub i64 %2, %5
  %7 = trunc i64 %6 to i32
  %8 = getelementptr inbounds %"class.v8::internal::SafepointTable", %"class.v8::internal::SafepointTable"* %1, i64 0, i32 3
  %9 = load i32, i32* %8, align 8
  switch i32 %9, label %33 [
    i32 0, label %10
    i32 1, label %11
  ], !prof !3

10:                                               ; preds = %3
  tail call void (i8*, ...) @_Z8V8_FatalPKcz(i8* getelementptr inbounds ([18 x i8], [18 x i8]* @.str.1, i64 0, i64 0), i8* getelementptr inbounds ([8 x i8], [8 x i8]* @.str.2, i64 0, i64 0)) #10
  unreachable

11:                                               ; preds = %3
  %12 = getelementptr inbounds %"class.v8::internal::SafepointTable", %"class.v8::internal::SafepointTable"* %1, i64 0, i32 2
  %13 = load i64, i64* %12, align 8
  %14 = add i64 %13, 8
  %15 = inttoptr i64 %14 to i32*
  %16 = load i32, i32* %15, align 4
  %17 = icmp eq i32 %16, -1
  br i1 %17, label %18, label %33

18:                                               ; preds = %11
  %19 = add i64 %13, 12
  %20 = inttoptr i64 %19 to i32*
  %21 = load i32, i32* %20, align 4, !noalias !4
  %22 = add i64 %13, 20
  %23 = getelementptr inbounds %"class.v8::internal::SafepointTable", %"class.v8::internal::SafepointTable"* %1, i64 0, i32 4
  %24 = load i32, i32* %23, align 4, !noalias !4
  %25 = inttoptr i64 %22 to i8*
  %26 = getelementptr inbounds %"class.v8::internal::SafepointTable", %"class.v8::internal::SafepointTable"* %1, i64 0, i32 1
  %27 = load i8, i8* %26, align 8, !range !7, !noalias !4
  %28 = icmp eq i8 %27, 0
  br i1 %28, label %79, label %29

29:                                               ; preds = %18
  %30 = add i64 %13, 16
  %31 = inttoptr i64 %30 to i32*
  %32 = load i32, i32* %31, align 4, !noalias !4
  br label %79

33:                                               ; preds = %11, %3
  %34 = getelementptr inbounds %"class.v8::internal::SafepointTable", %"class.v8::internal::SafepointTable"* %1, i64 0, i32 2
  %35 = load i64, i64* %34, align 8
  %36 = getelementptr inbounds %"class.v8::internal::SafepointTable", %"class.v8::internal::SafepointTable"* %1, i64 0, i32 1
  %37 = zext i32 %9 to i64
  %38 = load i8, i8* %36, align 8, !range !7
  %39 = icmp eq i8 %38, 0
  br label %40

40:                                               ; preds = %75, %33
  %41 = phi i64 [ 0, %33 ], [ %76, %75 ]
  %42 = mul i64 %41, 12
  %43 = and i64 %42, 4294967292
  %44 = add i64 %35, %43
  %45 = add i64 %44, 8
  %46 = inttoptr i64 %45 to i32*
  %47 = load i32, i32* %46, align 4
  %48 = icmp eq i32 %47, %7
  br i1 %48, label %55, label %49

49:                                               ; preds = %40
  br i1 %39, label %75, label %50

50:                                               ; preds = %49
  %51 = add i64 %44, 16
  %52 = inttoptr i64 %51 to i32*
  %53 = load i32, i32* %52, align 4
  %54 = icmp eq i32 %53, %7
  br i1 %54, label %55, label %75

55:                                               ; preds = %50, %40
  %56 = phi i1 [ %39, %40 ], [ false, %50 ]
  %57 = trunc i64 %41 to i32
  %58 = add i64 %44, 12
  %59 = inttoptr i64 %58 to i32*
  %60 = load i32, i32* %59, align 4, !noalias !8
  %61 = add i64 %35, 8
  %62 = mul i32 %9, 12
  %63 = zext i32 %62 to i64
  %64 = add i64 %61, %63
  %65 = getelementptr inbounds %"class.v8::internal::SafepointTable", %"class.v8::internal::SafepointTable"* %1, i64 0, i32 4
  %66 = load i32, i32* %65, align 4, !noalias !8
  %67 = mul i32 %66, %57
  %68 = zext i32 %67 to i64
  %69 = add i64 %64, %68
  %70 = inttoptr i64 %69 to i8*
  br i1 %56, label %79, label %71

71:                                               ; preds = %55
  %72 = add i64 %44, 16
  %73 = inttoptr i64 %72 to i32*
  %74 = load i32, i32* %73, align 4, !noalias !8
  br label %79

75:                                               ; preds = %49, %50
  %76 = add nuw nsw i64 %41, 1
  %77 = icmp eq i64 %76, %37
  br i1 %77, label %78, label %40

78:                                               ; preds = %75
  tail call void (i8*, ...) @_Z8V8_FatalPKcz(i8* getelementptr inbounds ([17 x i8], [17 x i8]* @.str, i64 0, i64 0)) #10
  unreachable

79:                                               ; preds = %71, %55, %29, %18
  %80 = phi i32 [ %24, %18 ], [ %24, %29 ], [ %66, %55 ], [ %66, %71 ]
  %81 = phi i8* [ %25, %18 ], [ %25, %29 ], [ %70, %55 ], [ %70, %71 ]
  %82 = phi i32 [ %21, %18 ], [ %21, %29 ], [ %60, %55 ], [ %60, %71 ]
  %83 = phi i32 [ -1, %18 ], [ %32, %29 ], [ -1, %55 ], [ %74, %71 ]
  %84 = zext i32 %80 to i64
  %85 = getelementptr inbounds i8, i8* %81, i64 %84
  %86 = getelementptr inbounds %"class.v8::internal::SafepointEntry", %"class.v8::internal::SafepointEntry"* %0, i64 0, i32 0
  store i32 %82, i32* %86, align 8, !alias.scope !11
  %87 = getelementptr inbounds %"class.v8::internal::SafepointEntry", %"class.v8::internal::SafepointEntry"* %0, i64 0, i32 2
  store i8* %81, i8** %87, align 8, !alias.scope !11
  %88 = getelementptr inbounds %"class.v8::internal::SafepointEntry", %"class.v8::internal::SafepointEntry"* %0, i64 0, i32 3
  store i8* %85, i8** %88, align 8, !alias.scope !11
  %89 = getelementptr inbounds %"class.v8::internal::SafepointEntry", %"class.v8::internal::SafepointEntry"* %0, i64 0, i32 4
  store i32 %83, i32* %89, align 8, !alias.scope !11
  ret void
}

; Function Attrs: nounwind ssp uwtable
define hidden void @_ZNK2v88internal14SafepointTable10PrintEntryEjRNSt3__113basic_ostreamIcNS2_11char_traitsIcEEEE(%"class.v8::internal::SafepointTable"* nocapture readonly, i32, %"class.std::__1::basic_ostream"* dereferenceable(160)) local_unnamed_addr #0 align 2 {
  %4 = alloca %"class.disasm::NameConverter", align 8
  %5 = bitcast %"class.disasm::NameConverter"* %4 to i8*
  call void @llvm.lifetime.start.p0i8(i64 152, i8* nonnull %5) #9
  %6 = getelementptr inbounds %"class.disasm::NameConverter", %"class.disasm::NameConverter"* %4, i64 0, i32 0
  store i32 (...)** bitcast (i8** getelementptr inbounds ({ [11 x i8*] }, { [11 x i8*] }* @_ZTVN6disasm13NameConverterE, i64 0, inrange i32 0, i64 2) to i32 (...)**), i32 (...)*** %6, align 8
  %7 = getelementptr inbounds %"class.disasm::NameConverter", %"class.disasm::NameConverter"* %4, i64 0, i32 1, i32 1, i64 0
  %8 = getelementptr inbounds %"class.disasm::NameConverter", %"class.disasm::NameConverter"* %4, i64 0, i32 1, i32 0, i32 0
  store i8* %7, i8** %8, align 8
  %9 = getelementptr inbounds %"class.disasm::NameConverter", %"class.disasm::NameConverter"* %4, i64 0, i32 1, i32 0, i32 1
  store i64 128, i64* %9, align 8
  %10 = getelementptr inbounds %"class.v8::internal::SafepointTable", %"class.v8::internal::SafepointTable"* %0, i64 0, i32 2
  %11 = load i64, i64* %10, align 8, !noalias !12
  %12 = add i64 %11, 8
  %13 = getelementptr inbounds %"class.v8::internal::SafepointTable", %"class.v8::internal::SafepointTable"* %0, i64 0, i32 3
  %14 = load i32, i32* %13, align 8, !noalias !12
  %15 = mul i32 %14, 12
  %16 = zext i32 %15 to i64
  %17 = add i64 %12, %16
  %18 = getelementptr inbounds %"class.v8::internal::SafepointTable", %"class.v8::internal::SafepointTable"* %0, i64 0, i32 4
  %19 = load i32, i32* %18, align 4, !noalias !12
  %20 = mul i32 %19, %1
  %21 = zext i32 %20 to i64
  %22 = add i64 %17, %21
  %23 = inttoptr i64 %22 to i8*
  %24 = icmp eq i32 %19, 0
  br i1 %24, label %79, label %25

25:                                               ; preds = %3, %25
  %26 = phi i64 [ %75, %25 ], [ 0, %3 ]
  %27 = getelementptr inbounds i8, i8* %23, i64 %26
  %28 = load i8, i8* %27, align 1
  %29 = and i8 %28, 1
  %30 = icmp eq i8 %29, 0
  %31 = select i1 %30, [2 x i8]* @.str.4, [2 x i8]* @.str.3
  %32 = getelementptr inbounds [2 x i8], [2 x i8]* %31, i64 0, i64 0
  %33 = call dereferenceable(160) %"class.std::__1::basic_ostream"* @_ZNSt3__124__put_character_sequenceIcNS_11char_traitsIcEEEERNS_13basic_ostreamIT_T0_EES7_PKS4_m(%"class.std::__1::basic_ostream"* dereferenceable(160) %2, i8* nonnull %32, i64 1) #9
  %34 = load i8, i8* %27, align 1
  %35 = and i8 %34, 2
  %36 = icmp eq i8 %35, 0
  %37 = select i1 %36, [2 x i8]* @.str.4, [2 x i8]* @.str.3
  %38 = getelementptr inbounds [2 x i8], [2 x i8]* %37, i64 0, i64 0
  %39 = call dereferenceable(160) %"class.std::__1::basic_ostream"* @_ZNSt3__124__put_character_sequenceIcNS_11char_traitsIcEEEERNS_13basic_ostreamIT_T0_EES7_PKS4_m(%"class.std::__1::basic_ostream"* dereferenceable(160) %2, i8* nonnull %38, i64 1) #9
  %40 = load i8, i8* %27, align 1
  %41 = and i8 %40, 4
  %42 = icmp eq i8 %41, 0
  %43 = select i1 %42, [2 x i8]* @.str.4, [2 x i8]* @.str.3
  %44 = getelementptr inbounds [2 x i8], [2 x i8]* %43, i64 0, i64 0
  %45 = call dereferenceable(160) %"class.std::__1::basic_ostream"* @_ZNSt3__124__put_character_sequenceIcNS_11char_traitsIcEEEERNS_13basic_ostreamIT_T0_EES7_PKS4_m(%"class.std::__1::basic_ostream"* dereferenceable(160) %2, i8* nonnull %44, i64 1) #9
  %46 = load i8, i8* %27, align 1
  %47 = and i8 %46, 8
  %48 = icmp eq i8 %47, 0
  %49 = select i1 %48, [2 x i8]* @.str.4, [2 x i8]* @.str.3
  %50 = getelementptr inbounds [2 x i8], [2 x i8]* %49, i64 0, i64 0
  %51 = call dereferenceable(160) %"class.std::__1::basic_ostream"* @_ZNSt3__124__put_character_sequenceIcNS_11char_traitsIcEEEERNS_13basic_ostreamIT_T0_EES7_PKS4_m(%"class.std::__1::basic_ostream"* dereferenceable(160) %2, i8* nonnull %50, i64 1) #9
  %52 = load i8, i8* %27, align 1
  %53 = and i8 %52, 16
  %54 = icmp eq i8 %53, 0
  %55 = select i1 %54, [2 x i8]* @.str.4, [2 x i8]* @.str.3
  %56 = getelementptr inbounds [2 x i8], [2 x i8]* %55, i64 0, i64 0
  %57 = call dereferenceable(160) %"class.std::__1::basic_ostream"* @_ZNSt3__124__put_character_sequenceIcNS_11char_traitsIcEEEERNS_13basic_ostreamIT_T0_EES7_PKS4_m(%"class.std::__1::basic_ostream"* dereferenceable(160) %2, i8* nonnull %56, i64 1) #9
  %58 = load i8, i8* %27, align 1
  %59 = and i8 %58, 32
  %60 = icmp eq i8 %59, 0
  %61 = select i1 %60, [2 x i8]* @.str.4, [2 x i8]* @.str.3
  %62 = getelementptr inbounds [2 x i8], [2 x i8]* %61, i64 0, i64 0
  %63 = call dereferenceable(160) %"class.std::__1::basic_ostream"* @_ZNSt3__124__put_character_sequenceIcNS_11char_traitsIcEEEERNS_13basic_ostreamIT_T0_EES7_PKS4_m(%"class.std::__1::basic_ostream"* dereferenceable(160) %2, i8* nonnull %62, i64 1) #9
  %64 = load i8, i8* %27, align 1
  %65 = and i8 %64, 64
  %66 = icmp eq i8 %65, 0
  %67 = select i1 %66, [2 x i8]* @.str.4, [2 x i8]* @.str.3
  %68 = getelementptr inbounds [2 x i8], [2 x i8]* %67, i64 0, i64 0
  %69 = call dereferenceable(160) %"class.std::__1::basic_ostream"* @_ZNSt3__124__put_character_sequenceIcNS_11char_traitsIcEEEERNS_13basic_ostreamIT_T0_EES7_PKS4_m(%"class.std::__1::basic_ostream"* dereferenceable(160) %2, i8* nonnull %68, i64 1) #9
  %70 = load i8, i8* %27, align 1
  %71 = icmp sgt i8 %70, -1
  %72 = select i1 %71, [2 x i8]* @.str.4, [2 x i8]* @.str.3
  %73 = getelementptr inbounds [2 x i8], [2 x i8]* %72, i64 0, i64 0
  %74 = call dereferenceable(160) %"class.std::__1::basic_ostream"* @_ZNSt3__124__put_character_sequenceIcNS_11char_traitsIcEEEERNS_13basic_ostreamIT_T0_EES7_PKS4_m(%"class.std::__1::basic_ostream"* dereferenceable(160) %2, i8* nonnull %73, i64 1) #9
  %75 = add nuw nsw i64 %26, 1
  %76 = load i32, i32* %18, align 4
  %77 = zext i32 %76 to i64
  %78 = icmp ult i64 %75, %77
  br i1 %78, label %25, label %79

79:                                               ; preds = %25, %3
  call void @llvm.lifetime.end.p0i8(i64 152, i8* nonnull %5) #9
  ret void
}

; Function Attrs: nounwind ssp uwtable
define hidden { %"class.v8::internal::ZoneChunkList"*, i32* } @_ZN2v88internal21SafepointTableBuilder15DefineSafepointEPNS0_9AssemblerE(%"class.v8::internal::SafepointTableBuilder"*, %"class.v8::internal::Assembler"* nocapture readonly) local_unnamed_addr #0 align 2 {
  %3 = alloca %"struct.v8::internal::SafepointTableBuilder::DeoptimizationInfo", align 8
  %4 = getelementptr inbounds %"class.v8::internal::SafepointTableBuilder", %"class.v8::internal::SafepointTableBuilder"* %0, i64 0, i32 0
  %5 = bitcast %"struct.v8::internal::SafepointTableBuilder::DeoptimizationInfo"* %3 to i8*
  call void @llvm.lifetime.start.p0i8(i64 32, i8* nonnull %5) #9
  %6 = getelementptr inbounds %"class.v8::internal::SafepointTableBuilder", %"class.v8::internal::SafepointTableBuilder"* %0, i64 0, i32 3
  %7 = load %"class.v8::internal::Zone"*, %"class.v8::internal::Zone"** %6, align 8
  %8 = getelementptr inbounds %"class.v8::internal::Assembler", %"class.v8::internal::Assembler"* %1, i64 0, i32 0, i32 4
  %9 = bitcast i8** %8 to i64*
  %10 = load i64, i64* %9, align 8
  %11 = getelementptr inbounds %"class.v8::internal::Assembler", %"class.v8::internal::Assembler"* %1, i64 0, i32 0, i32 2
  %12 = bitcast i8** %11 to i64*
  %13 = load i64, i64* %12, align 8
  %14 = sub i64 %10, %13
  %15 = trunc i64 %14 to i32
  %16 = getelementptr inbounds %"struct.v8::internal::SafepointTableBuilder::DeoptimizationInfo", %"struct.v8::internal::SafepointTableBuilder::DeoptimizationInfo"* %3, i64 0, i32 0
  store i32 %15, i32* %16, align 8
  %17 = getelementptr inbounds %"struct.v8::internal::SafepointTableBuilder::DeoptimizationInfo", %"struct.v8::internal::SafepointTableBuilder::DeoptimizationInfo"* %3, i64 0, i32 1
  store i32 -1, i32* %17, align 4
  %18 = getelementptr inbounds %"struct.v8::internal::SafepointTableBuilder::DeoptimizationInfo", %"struct.v8::internal::SafepointTableBuilder::DeoptimizationInfo"* %3, i64 0, i32 2
  store i32 -1, i32* %18, align 8
  %19 = getelementptr inbounds %"struct.v8::internal::SafepointTableBuilder::DeoptimizationInfo", %"struct.v8::internal::SafepointTableBuilder::DeoptimizationInfo"* %3, i64 0, i32 4
  %20 = getelementptr inbounds %"class.v8::internal::Zone", %"class.v8::internal::Zone"* %7, i64 0, i32 2
  %21 = load i64, i64* %20, align 8
  %22 = getelementptr inbounds %"class.v8::internal::Zone", %"class.v8::internal::Zone"* %7, i64 0, i32 3
  %23 = load i64, i64* %22, align 8
  %24 = sub i64 %23, %21
  %25 = icmp ult i64 %24, 32
  br i1 %25, label %26, label %28, !prof !15

26:                                               ; preds = %2
  %27 = tail call i64 @_ZN2v88internal4Zone9NewExpandEm(%"class.v8::internal::Zone"* %7, i64 32) #9
  br label %30

28:                                               ; preds = %2
  %29 = add i64 %21, 32
  store i64 %29, i64* %20, align 8
  br label %30

30:                                               ; preds = %28, %26
  %31 = phi i64 [ %27, %26 ], [ %21, %28 ]
  %32 = inttoptr i64 %31 to %"class.v8::internal::ZoneChunkList"*
  %33 = getelementptr inbounds %"class.v8::internal::ZoneChunkList", %"class.v8::internal::ZoneChunkList"* %32, i64 0, i32 0
  store %"class.v8::internal::Zone"* %7, %"class.v8::internal::Zone"** %33, align 8
  %34 = getelementptr inbounds %"class.v8::internal::ZoneChunkList", %"class.v8::internal::ZoneChunkList"* %32, i64 0, i32 1
  %35 = getelementptr inbounds %"class.v8::internal::ZoneChunkList", %"class.v8::internal::ZoneChunkList"* %32, i64 0, i32 2
  %36 = getelementptr inbounds %"class.v8::internal::ZoneChunkList", %"class.v8::internal::ZoneChunkList"* %32, i64 0, i32 3
  %37 = bitcast i64* %34 to i8*
  tail call void @llvm.memset.p0i8.i64(i8* align 8 %37, i8 0, i64 24, i1 false) #9
  %38 = load i64, i64* %20, align 8
  %39 = load i64, i64* %22, align 8
  %40 = sub i64 %39, %38
  %41 = icmp ult i64 %40, 56
  br i1 %41, label %42, label %44, !prof !15

42:                                               ; preds = %30
  %43 = tail call i64 @_ZN2v88internal4Zone9NewExpandEm(%"class.v8::internal::Zone"* %7, i64 56) #9
  br label %46

44:                                               ; preds = %30
  %45 = add i64 %38, 56
  store i64 %45, i64* %20, align 8
  br label %46

46:                                               ; preds = %42, %44
  %47 = phi i64 [ %43, %42 ], [ %38, %44 ]
  %48 = inttoptr i64 %47 to i8*
  %49 = inttoptr i64 %47 to %"struct.v8::internal::ZoneChunkList<int>::Chunk"*
  %50 = inttoptr i64 %47 to i32*
  tail call void @llvm.memset.p0i8.i64(i8* align 8 %48, i8 0, i64 24, i1 false) #9
  store i32 8, i32* %50, align 8
  store %"struct.v8::internal::ZoneChunkList<int>::Chunk"* %49, %"struct.v8::internal::ZoneChunkList<int>::Chunk"** %35, align 8
  store %"struct.v8::internal::ZoneChunkList<int>::Chunk"* %49, %"struct.v8::internal::ZoneChunkList<int>::Chunk"** %36, align 8
  store %"class.v8::internal::ZoneChunkList"* %32, %"class.v8::internal::ZoneChunkList"** %19, align 8
  %51 = getelementptr inbounds %"struct.v8::internal::SafepointTableBuilder::DeoptimizationInfo", %"struct.v8::internal::SafepointTableBuilder::DeoptimizationInfo"* %3, i64 0, i32 5
  store i32 0, i32* %51, align 8
  call void @_ZN2v88internal13ZoneChunkListINS0_21SafepointTableBuilder18DeoptimizationInfoEE9push_backERKS3_(%"class.v8::internal::ZoneChunkList.1465"* %4, %"struct.v8::internal::SafepointTableBuilder::DeoptimizationInfo"* nonnull dereferenceable(32) %3)
  call void @llvm.lifetime.end.p0i8(i64 32, i8* nonnull %5) #9
  %52 = getelementptr inbounds %"class.v8::internal::SafepointTableBuilder", %"class.v8::internal::SafepointTableBuilder"* %0, i64 0, i32 0, i32 3
  %53 = load %"struct.v8::internal::ZoneChunkList<v8::internal::SafepointTableBuilder::DeoptimizationInfo>::Chunk"*, %"struct.v8::internal::ZoneChunkList<v8::internal::SafepointTableBuilder::DeoptimizationInfo>::Chunk"** %52, align 8
  %54 = getelementptr inbounds %"struct.v8::internal::ZoneChunkList<v8::internal::SafepointTableBuilder::DeoptimizationInfo>::Chunk", %"struct.v8::internal::ZoneChunkList<v8::internal::SafepointTableBuilder::DeoptimizationInfo>::Chunk"* %53, i64 0, i32 1
  %55 = load i32, i32* %54, align 4
  %56 = icmp eq i32 %55, 0
  br i1 %56, label %57, label %62

57:                                               ; preds = %46
  %58 = getelementptr inbounds %"struct.v8::internal::ZoneChunkList<v8::internal::SafepointTableBuilder::DeoptimizationInfo>::Chunk", %"struct.v8::internal::ZoneChunkList<v8::internal::SafepointTableBuilder::DeoptimizationInfo>::Chunk"* %53, i64 0, i32 3
  %59 = load %"struct.v8::internal::ZoneChunkList<v8::internal::SafepointTableBuilder::DeoptimizationInfo>::Chunk"*, %"struct.v8::internal::ZoneChunkList<v8::internal::SafepointTableBuilder::DeoptimizationInfo>::Chunk"** %58, align 8
  %60 = getelementptr inbounds %"struct.v8::internal::ZoneChunkList<v8::internal::SafepointTableBuilder::DeoptimizationInfo>::Chunk", %"struct.v8::internal::ZoneChunkList<v8::internal::SafepointTableBuilder::DeoptimizationInfo>::Chunk"* %59, i64 0, i32 1
  %61 = load i32, i32* %60, align 4
  br label %62

62:                                               ; preds = %46, %57
  %63 = phi i32 [ %61, %57 ], [ %55, %46 ]
  %64 = phi %"struct.v8::internal::ZoneChunkList<v8::internal::SafepointTableBuilder::DeoptimizationInfo>::Chunk"* [ %59, %57 ], [ %53, %46 ]
  %65 = getelementptr inbounds %"struct.v8::internal::ZoneChunkList<v8::internal::SafepointTableBuilder::DeoptimizationInfo>::Chunk", %"struct.v8::internal::ZoneChunkList<v8::internal::SafepointTableBuilder::DeoptimizationInfo>::Chunk"* %64, i64 1
  %66 = bitcast %"struct.v8::internal::ZoneChunkList<v8::internal::SafepointTableBuilder::DeoptimizationInfo>::Chunk"* %65 to %"struct.v8::internal::SafepointTableBuilder::DeoptimizationInfo"*
  %67 = add i32 %63, -1
  %68 = zext i32 %67 to i64
  %69 = getelementptr inbounds %"struct.v8::internal::SafepointTableBuilder::DeoptimizationInfo", %"struct.v8::internal::SafepointTableBuilder::DeoptimizationInfo"* %66, i64 %68, i32 4
  %70 = load %"class.v8::internal::ZoneChunkList"*, %"class.v8::internal::ZoneChunkList"** %69, align 8
  %71 = getelementptr inbounds %"struct.v8::internal::SafepointTableBuilder::DeoptimizationInfo", %"struct.v8::internal::SafepointTableBuilder::DeoptimizationInfo"* %66, i64 %68, i32 5
  %72 = insertvalue { %"class.v8::internal::ZoneChunkList"*, i32* } undef, %"class.v8::internal::ZoneChunkList"* %70, 0
  %73 = insertvalue { %"class.v8::internal::ZoneChunkList"*, i32* } %72, i32* %71, 1
  ret { %"class.v8::internal::ZoneChunkList"*, i32* } %73
}

; Function Attrs: nounwind ssp uwtable
define linkonce_odr hidden void @_ZN2v88internal13ZoneChunkListINS0_21SafepointTableBuilder18DeoptimizationInfoEE9push_backERKS3_(%"class.v8::internal::ZoneChunkList.1465"*, %"struct.v8::internal::SafepointTableBuilder::DeoptimizationInfo"* dereferenceable(32)) local_unnamed_addr #0 comdat align 2 {
  %3 = getelementptr inbounds %"class.v8::internal::ZoneChunkList.1465", %"class.v8::internal::ZoneChunkList.1465"* %0, i64 0, i32 3
  %4 = load %"struct.v8::internal::ZoneChunkList<v8::internal::SafepointTableBuilder::DeoptimizationInfo>::Chunk"*, %"struct.v8::internal::ZoneChunkList<v8::internal::SafepointTableBuilder::DeoptimizationInfo>::Chunk"** %3, align 8
  %5 = icmp eq %"struct.v8::internal::ZoneChunkList<v8::internal::SafepointTableBuilder::DeoptimizationInfo>::Chunk"* %4, null
  br i1 %5, label %6, label %25

6:                                                ; preds = %2
  %7 = getelementptr inbounds %"class.v8::internal::ZoneChunkList.1465", %"class.v8::internal::ZoneChunkList.1465"* %0, i64 0, i32 0
  %8 = load %"class.v8::internal::Zone"*, %"class.v8::internal::Zone"** %7, align 8
  %9 = getelementptr inbounds %"class.v8::internal::Zone", %"class.v8::internal::Zone"* %8, i64 0, i32 2
  %10 = load i64, i64* %9, align 8
  %11 = getelementptr inbounds %"class.v8::internal::Zone", %"class.v8::internal::Zone"* %8, i64 0, i32 3
  %12 = load i64, i64* %11, align 8
  %13 = sub i64 %12, %10
  %14 = icmp ult i64 %13, 280
  br i1 %14, label %15, label %17, !prof !15

15:                                               ; preds = %6
  %16 = tail call i64 @_ZN2v88internal4Zone9NewExpandEm(%"class.v8::internal::Zone"* %8, i64 280) #9
  br label %19

17:                                               ; preds = %6
  %18 = add i64 %10, 280
  store i64 %18, i64* %9, align 8
  br label %19

19:                                               ; preds = %15, %17
  %20 = phi i64 [ %16, %15 ], [ %10, %17 ]
  %21 = inttoptr i64 %20 to i8*
  %22 = inttoptr i64 %20 to %"struct.v8::internal::ZoneChunkList<v8::internal::SafepointTableBuilder::DeoptimizationInfo>::Chunk"*
  %23 = inttoptr i64 %20 to i32*
  tail call void @llvm.memset.p0i8.i64(i8* align 8 %21, i8 0, i64 24, i1 false) #9
  store i32 8, i32* %23, align 8
  %24 = getelementptr inbounds %"class.v8::internal::ZoneChunkList.1465", %"class.v8::internal::ZoneChunkList.1465"* %0, i64 0, i32 2
  store %"struct.v8::internal::ZoneChunkList<v8::internal::SafepointTableBuilder::DeoptimizationInfo>::Chunk"* %22, %"struct.v8::internal::ZoneChunkList<v8::internal::SafepointTableBuilder::DeoptimizationInfo>::Chunk"** %24, align 8
  store %"struct.v8::internal::ZoneChunkList<v8::internal::SafepointTableBuilder::DeoptimizationInfo>::Chunk"* %22, %"struct.v8::internal::ZoneChunkList<v8::internal::SafepointTableBuilder::DeoptimizationInfo>::Chunk"** %3, align 8
  br label %25

25:                                               ; preds = %19, %2
  %26 = phi %"struct.v8::internal::ZoneChunkList<v8::internal::SafepointTableBuilder::DeoptimizationInfo>::Chunk"* [ %22, %19 ], [ %4, %2 ]
  %27 = getelementptr inbounds %"struct.v8::internal::ZoneChunkList<v8::internal::SafepointTableBuilder::DeoptimizationInfo>::Chunk", %"struct.v8::internal::ZoneChunkList<v8::internal::SafepointTableBuilder::DeoptimizationInfo>::Chunk"* %26, i64 0, i32 1
  %28 = load i32, i32* %27, align 4
  %29 = getelementptr inbounds %"struct.v8::internal::ZoneChunkList<v8::internal::SafepointTableBuilder::DeoptimizationInfo>::Chunk", %"struct.v8::internal::ZoneChunkList<v8::internal::SafepointTableBuilder::DeoptimizationInfo>::Chunk"* %26, i64 0, i32 0
  %30 = load i32, i32* %29, align 8
  %31 = icmp eq i32 %28, %30
  br i1 %31, label %32, label %78

32:                                               ; preds = %25
  %33 = getelementptr inbounds %"struct.v8::internal::ZoneChunkList<v8::internal::SafepointTableBuilder::DeoptimizationInfo>::Chunk", %"struct.v8::internal::ZoneChunkList<v8::internal::SafepointTableBuilder::DeoptimizationInfo>::Chunk"* %26, i64 0, i32 2
  %34 = load %"struct.v8::internal::ZoneChunkList<v8::internal::SafepointTableBuilder::DeoptimizationInfo>::Chunk"*, %"struct.v8::internal::ZoneChunkList<v8::internal::SafepointTableBuilder::DeoptimizationInfo>::Chunk"** %33, align 8
  %35 = icmp eq %"struct.v8::internal::ZoneChunkList<v8::internal::SafepointTableBuilder::DeoptimizationInfo>::Chunk"* %34, null
  br i1 %35, label %38, label %36

36:                                               ; preds = %32
  %37 = bitcast %"struct.v8::internal::ZoneChunkList<v8::internal::SafepointTableBuilder::DeoptimizationInfo>::Chunk"** %3 to i64*
  br label %69

38:                                               ; preds = %32
  %39 = shl i32 %28, 1
  %40 = icmp ult i32 %39, 256
  %41 = select i1 %40, i32 %39, i32 256
  %42 = getelementptr inbounds %"class.v8::internal::ZoneChunkList.1465", %"class.v8::internal::ZoneChunkList.1465"* %0, i64 0, i32 0
  %43 = load %"class.v8::internal::Zone"*, %"class.v8::internal::Zone"** %42, align 8
  %44 = shl nuw nsw i32 %41, 5
  %45 = or i32 %44, 24
  %46 = zext i32 %45 to i64
  %47 = getelementptr inbounds %"class.v8::internal::Zone", %"class.v8::internal::Zone"* %43, i64 0, i32 2
  %48 = load i64, i64* %47, align 8
  %49 = getelementptr inbounds %"class.v8::internal::Zone", %"class.v8::internal::Zone"* %43, i64 0, i32 3
  %50 = load i64, i64* %49, align 8
  %51 = sub i64 %50, %48
  %52 = icmp ult i64 %51, %46
  br i1 %52, label %53, label %55, !prof !15

53:                                               ; preds = %38
  %54 = tail call i64 @_ZN2v88internal4Zone9NewExpandEm(%"class.v8::internal::Zone"* %43, i64 %46) #9
  br label %57

55:                                               ; preds = %38
  %56 = add i64 %48, %46
  store i64 %56, i64* %47, align 8
  br label %57

57:                                               ; preds = %53, %55
  %58 = phi i64 [ %54, %53 ], [ %48, %55 ]
  %59 = inttoptr i64 %58 to i8*
  %60 = inttoptr i64 %58 to %"struct.v8::internal::ZoneChunkList<v8::internal::SafepointTableBuilder::DeoptimizationInfo>::Chunk"*
  %61 = inttoptr i64 %58 to i32*
  tail call void @llvm.memset.p0i8.i64(i8* align 8 %59, i8 0, i64 24, i1 false) #9
  store i32 %41, i32* %61, align 8
  %62 = load %"struct.v8::internal::ZoneChunkList<v8::internal::SafepointTableBuilder::DeoptimizationInfo>::Chunk"*, %"struct.v8::internal::ZoneChunkList<v8::internal::SafepointTableBuilder::DeoptimizationInfo>::Chunk"** %3, align 8
  %63 = getelementptr inbounds %"struct.v8::internal::ZoneChunkList<v8::internal::SafepointTableBuilder::DeoptimizationInfo>::Chunk", %"struct.v8::internal::ZoneChunkList<v8::internal::SafepointTableBuilder::DeoptimizationInfo>::Chunk"* %62, i64 0, i32 2
  store %"struct.v8::internal::ZoneChunkList<v8::internal::SafepointTableBuilder::DeoptimizationInfo>::Chunk"* %60, %"struct.v8::internal::ZoneChunkList<v8::internal::SafepointTableBuilder::DeoptimizationInfo>::Chunk"** %63, align 8
  %64 = bitcast %"struct.v8::internal::ZoneChunkList<v8::internal::SafepointTableBuilder::DeoptimizationInfo>::Chunk"** %3 to i64*
  %65 = load i64, i64* %64, align 8
  %66 = getelementptr inbounds %"struct.v8::internal::ZoneChunkList<v8::internal::SafepointTableBuilder::DeoptimizationInfo>::Chunk", %"struct.v8::internal::ZoneChunkList<v8::internal::SafepointTableBuilder::DeoptimizationInfo>::Chunk"* %60, i64 0, i32 3
  %67 = bitcast %"struct.v8::internal::ZoneChunkList<v8::internal::SafepointTableBuilder::DeoptimizationInfo>::Chunk"** %66 to i64*
  store i64 %65, i64* %67, align 8
  %68 = load %"struct.v8::internal::ZoneChunkList<v8::internal::SafepointTableBuilder::DeoptimizationInfo>::Chunk"*, %"struct.v8::internal::ZoneChunkList<v8::internal::SafepointTableBuilder::DeoptimizationInfo>::Chunk"** %3, align 8
  br label %69

69:                                               ; preds = %36, %57
  %70 = phi i64* [ %37, %36 ], [ %64, %57 ]
  %71 = phi %"struct.v8::internal::ZoneChunkList<v8::internal::SafepointTableBuilder::DeoptimizationInfo>::Chunk"* [ %26, %36 ], [ %68, %57 ]
  %72 = getelementptr inbounds %"struct.v8::internal::ZoneChunkList<v8::internal::SafepointTableBuilder::DeoptimizationInfo>::Chunk", %"struct.v8::internal::ZoneChunkList<v8::internal::SafepointTableBuilder::DeoptimizationInfo>::Chunk"* %71, i64 0, i32 2
  %73 = bitcast %"struct.v8::internal::ZoneChunkList<v8::internal::SafepointTableBuilder::DeoptimizationInfo>::Chunk"** %72 to i64*
  %74 = load i64, i64* %73, align 8
  store i64 %74, i64* %70, align 8
  %75 = inttoptr i64 %74 to %"struct.v8::internal::ZoneChunkList<v8::internal::SafepointTableBuilder::DeoptimizationInfo>::Chunk"*
  %76 = getelementptr inbounds %"struct.v8::internal::ZoneChunkList<v8::internal::SafepointTableBuilder::DeoptimizationInfo>::Chunk", %"struct.v8::internal::ZoneChunkList<v8::internal::SafepointTableBuilder::DeoptimizationInfo>::Chunk"* %75, i64 0, i32 1
  %77 = load i32, i32* %76, align 4
  br label %78

78:                                               ; preds = %69, %25
  %79 = phi i32 [ %77, %69 ], [ %28, %25 ]
  %80 = phi %"struct.v8::internal::ZoneChunkList<v8::internal::SafepointTableBuilder::DeoptimizationInfo>::Chunk"* [ %75, %69 ], [ %26, %25 ]
  %81 = getelementptr inbounds %"struct.v8::internal::ZoneChunkList<v8::internal::SafepointTableBuilder::DeoptimizationInfo>::Chunk", %"struct.v8::internal::ZoneChunkList<v8::internal::SafepointTableBuilder::DeoptimizationInfo>::Chunk"* %80, i64 1
  %82 = bitcast %"struct.v8::internal::ZoneChunkList<v8::internal::SafepointTableBuilder::DeoptimizationInfo>::Chunk"* %81 to %"struct.v8::internal::SafepointTableBuilder::DeoptimizationInfo"*
  %83 = zext i32 %79 to i64
  %84 = getelementptr inbounds %"struct.v8::internal::SafepointTableBuilder::DeoptimizationInfo", %"struct.v8::internal::SafepointTableBuilder::DeoptimizationInfo"* %82, i64 %83
  %85 = bitcast %"struct.v8::internal::SafepointTableBuilder::DeoptimizationInfo"* %84 to i8*
  %86 = bitcast %"struct.v8::internal::SafepointTableBuilder::DeoptimizationInfo"* %1 to i8*
  tail call void @llvm.memcpy.p0i8.p0i8.i64(i8* align 8 %85, i8* align 8 %86, i64 28, i1 false)
  %87 = load %"struct.v8::internal::ZoneChunkList<v8::internal::SafepointTableBuilder::DeoptimizationInfo>::Chunk"*, %"struct.v8::internal::ZoneChunkList<v8::internal::SafepointTableBuilder::DeoptimizationInfo>::Chunk"** %3, align 8
  %88 = getelementptr inbounds %"struct.v8::internal::ZoneChunkList<v8::internal::SafepointTableBuilder::DeoptimizationInfo>::Chunk", %"struct.v8::internal::ZoneChunkList<v8::internal::SafepointTableBuilder::DeoptimizationInfo>::Chunk"* %87, i64 0, i32 1
  %89 = load i32, i32* %88, align 4
  %90 = add i32 %89, 1
  store i32 %90, i32* %88, align 4
  %91 = getelementptr inbounds %"class.v8::internal::ZoneChunkList.1465", %"class.v8::internal::ZoneChunkList.1465"* %0, i64 0, i32 1
  %92 = load i64, i64* %91, align 8
  %93 = add i64 %92, 1
  store i64 %93, i64* %91, align 8
  ret void
}

; Function Attrs: norecurse nounwind readonly ssp uwtable
define hidden i32 @_ZNK2v88internal21SafepointTableBuilder13GetCodeOffsetEv(%"class.v8::internal::SafepointTableBuilder"* nocapture readonly) local_unnamed_addr #5 align 2 {
  %2 = getelementptr inbounds %"class.v8::internal::SafepointTableBuilder", %"class.v8::internal::SafepointTableBuilder"* %0, i64 0, i32 1
  %3 = load i32, i32* %2, align 8
  ret i32 %3
}

; Function Attrs: nounwind ssp uwtable
define hidden i32 @_ZN2v88internal21SafepointTableBuilder24UpdateDeoptimizationInfoEiiij(%"class.v8::internal::SafepointTableBuilder"* nocapture readonly, i32, i32, i32, i32) local_unnamed_addr #0 align 2 {
  %6 = sext i32 %3 to i64
  %7 = getelementptr inbounds %"class.v8::internal::SafepointTableBuilder", %"class.v8::internal::SafepointTableBuilder"* %0, i64 0, i32 0, i32 2
  %8 = load %"struct.v8::internal::ZoneChunkList<v8::internal::SafepointTableBuilder::DeoptimizationInfo>::Chunk"*, %"struct.v8::internal::ZoneChunkList<v8::internal::SafepointTableBuilder::DeoptimizationInfo>::Chunk"** %7, align 8
  %9 = getelementptr inbounds %"struct.v8::internal::ZoneChunkList<v8::internal::SafepointTableBuilder::DeoptimizationInfo>::Chunk", %"struct.v8::internal::ZoneChunkList<v8::internal::SafepointTableBuilder::DeoptimizationInfo>::Chunk"* %8, i64 0, i32 0
  %10 = load i32, i32* %9, align 8
  %11 = zext i32 %10 to i64
  %12 = icmp ugt i64 %11, %6
  br i1 %12, label %24, label %13

13:                                               ; preds = %5, %13
  %14 = phi i64 [ %22, %13 ], [ %11, %5 ]
  %15 = phi %"struct.v8::internal::ZoneChunkList<v8::internal::SafepointTableBuilder::DeoptimizationInfo>::Chunk"* [ %19, %13 ], [ %8, %5 ]
  %16 = phi i64 [ %17, %13 ], [ %6, %5 ]
  %17 = sub i64 %16, %14
  %18 = getelementptr inbounds %"struct.v8::internal::ZoneChunkList<v8::internal::SafepointTableBuilder::DeoptimizationInfo>::Chunk", %"struct.v8::internal::ZoneChunkList<v8::internal::SafepointTableBuilder::DeoptimizationInfo>::Chunk"* %15, i64 0, i32 2
  %19 = load %"struct.v8::internal::ZoneChunkList<v8::internal::SafepointTableBuilder::DeoptimizationInfo>::Chunk"*, %"struct.v8::internal::ZoneChunkList<v8::internal::SafepointTableBuilder::DeoptimizationInfo>::Chunk"** %18, align 8
  %20 = getelementptr inbounds %"struct.v8::internal::ZoneChunkList<v8::internal::SafepointTableBuilder::DeoptimizationInfo>::Chunk", %"struct.v8::internal::ZoneChunkList<v8::internal::SafepointTableBuilder::DeoptimizationInfo>::Chunk"* %19, i64 0, i32 0
  %21 = load i32, i32* %20, align 8
  %22 = zext i32 %21 to i64
  %23 = icmp ult i64 %17, %22
  br i1 %23, label %24, label %13

24:                                               ; preds = %13, %5
  %25 = phi i64 [ %6, %5 ], [ %17, %13 ]
  %26 = phi %"struct.v8::internal::ZoneChunkList<v8::internal::SafepointTableBuilder::DeoptimizationInfo>::Chunk"* [ %8, %5 ], [ %19, %13 ]
  %27 = and i64 %25, 4294967295
  %28 = ptrtoint %"struct.v8::internal::ZoneChunkList<v8::internal::SafepointTableBuilder::DeoptimizationInfo>::Chunk"* %26 to i64
  %29 = getelementptr inbounds %"class.v8::internal::SafepointTableBuilder", %"class.v8::internal::SafepointTableBuilder"* %0, i64 0, i32 0, i32 3
  %30 = load %"struct.v8::internal::ZoneChunkList<v8::internal::SafepointTableBuilder::DeoptimizationInfo>::Chunk"*, %"struct.v8::internal::ZoneChunkList<v8::internal::SafepointTableBuilder::DeoptimizationInfo>::Chunk"** %29, align 8
  %31 = icmp eq %"struct.v8::internal::ZoneChunkList<v8::internal::SafepointTableBuilder::DeoptimizationInfo>::Chunk"* %30, null
  %32 = getelementptr inbounds %"struct.v8::internal::ZoneChunkList<v8::internal::SafepointTableBuilder::DeoptimizationInfo>::Chunk", %"struct.v8::internal::ZoneChunkList<v8::internal::SafepointTableBuilder::DeoptimizationInfo>::Chunk"* %30, i64 0, i32 2
  br i1 %31, label %33, label %37

33:                                               ; preds = %24
  %34 = icmp ne %"struct.v8::internal::ZoneChunkList<v8::internal::SafepointTableBuilder::DeoptimizationInfo>::Chunk"* %8, %26
  %35 = icmp ne i64 %27, 0
  %36 = or i1 %35, %34
  br i1 %36, label %44, label %112

37:                                               ; preds = %24
  %38 = getelementptr inbounds %"struct.v8::internal::ZoneChunkList<v8::internal::SafepointTableBuilder::DeoptimizationInfo>::Chunk", %"struct.v8::internal::ZoneChunkList<v8::internal::SafepointTableBuilder::DeoptimizationInfo>::Chunk"* %30, i64 0, i32 0
  %39 = getelementptr inbounds %"struct.v8::internal::ZoneChunkList<v8::internal::SafepointTableBuilder::DeoptimizationInfo>::Chunk", %"struct.v8::internal::ZoneChunkList<v8::internal::SafepointTableBuilder::DeoptimizationInfo>::Chunk"* %30, i64 0, i32 1
  %40 = load i32, i32* %39, align 4
  %41 = load i32, i32* %38, align 8
  %42 = icmp eq i32 %40, %41
  %43 = zext i32 %40 to i64
  br label %72

44:                                               ; preds = %33, %64
  %45 = phi %"struct.v8::internal::ZoneChunkList<v8::internal::SafepointTableBuilder::DeoptimizationInfo>::Chunk"* [ %68, %64 ], [ %26, %33 ]
  %46 = phi i32 [ %67, %64 ], [ %3, %33 ]
  %47 = phi i64 [ %66, %64 ], [ %27, %33 ]
  %48 = phi i64 [ %65, %64 ], [ %28, %33 ]
  %49 = getelementptr inbounds %"struct.v8::internal::ZoneChunkList<v8::internal::SafepointTableBuilder::DeoptimizationInfo>::Chunk", %"struct.v8::internal::ZoneChunkList<v8::internal::SafepointTableBuilder::DeoptimizationInfo>::Chunk"* %45, i64 1
  %50 = bitcast %"struct.v8::internal::ZoneChunkList<v8::internal::SafepointTableBuilder::DeoptimizationInfo>::Chunk"* %49 to %"struct.v8::internal::SafepointTableBuilder::DeoptimizationInfo"*
  %51 = getelementptr inbounds %"struct.v8::internal::SafepointTableBuilder::DeoptimizationInfo", %"struct.v8::internal::SafepointTableBuilder::DeoptimizationInfo"* %50, i64 %47, i32 0
  %52 = load i32, i32* %51, align 8
  %53 = icmp eq i32 %52, %1
  br i1 %53, label %91, label %54

54:                                               ; preds = %44
  %55 = add i64 %47, 1
  %56 = getelementptr inbounds %"struct.v8::internal::ZoneChunkList<v8::internal::SafepointTableBuilder::DeoptimizationInfo>::Chunk", %"struct.v8::internal::ZoneChunkList<v8::internal::SafepointTableBuilder::DeoptimizationInfo>::Chunk"* %45, i64 0, i32 0
  %57 = load i32, i32* %56, align 8
  %58 = zext i32 %57 to i64
  %59 = icmp ult i64 %55, %58
  br i1 %59, label %64, label %60

60:                                               ; preds = %54
  %61 = getelementptr inbounds %"struct.v8::internal::ZoneChunkList<v8::internal::SafepointTableBuilder::DeoptimizationInfo>::Chunk", %"struct.v8::internal::ZoneChunkList<v8::internal::SafepointTableBuilder::DeoptimizationInfo>::Chunk"* %45, i64 0, i32 2
  %62 = bitcast %"struct.v8::internal::ZoneChunkList<v8::internal::SafepointTableBuilder::DeoptimizationInfo>::Chunk"** %61 to i64*
  %63 = load i64, i64* %62, align 8
  br label %64

64:                                               ; preds = %60, %54
  %65 = phi i64 [ %48, %54 ], [ %63, %60 ]
  %66 = phi i64 [ %55, %54 ], [ 0, %60 ]
  %67 = add nsw i32 %46, 1
  %68 = inttoptr i64 %65 to %"struct.v8::internal::ZoneChunkList<v8::internal::SafepointTableBuilder::DeoptimizationInfo>::Chunk"*
  %69 = icmp ne %"struct.v8::internal::ZoneChunkList<v8::internal::SafepointTableBuilder::DeoptimizationInfo>::Chunk"* %8, %68
  %70 = icmp ne i64 %66, 0
  %71 = or i1 %70, %69
  br i1 %71, label %44, label %112

72:                                               ; preds = %37, %108
  %73 = phi i64 [ %109, %108 ], [ %28, %37 ]
  %74 = phi i64 [ %110, %108 ], [ %27, %37 ]
  %75 = phi i32 [ %111, %108 ], [ %3, %37 ]
  br i1 %42, label %76, label %78

76:                                               ; preds = %72
  %77 = load %"struct.v8::internal::ZoneChunkList<v8::internal::SafepointTableBuilder::DeoptimizationInfo>::Chunk"*, %"struct.v8::internal::ZoneChunkList<v8::internal::SafepointTableBuilder::DeoptimizationInfo>::Chunk"** %32, align 8
  br label %78

78:                                               ; preds = %72, %76
  %79 = phi i64 [ 0, %76 ], [ %43, %72 ]
  %80 = phi %"struct.v8::internal::ZoneChunkList<v8::internal::SafepointTableBuilder::DeoptimizationInfo>::Chunk"* [ %77, %76 ], [ %30, %72 ]
  %81 = inttoptr i64 %73 to %"struct.v8::internal::ZoneChunkList<v8::internal::SafepointTableBuilder::DeoptimizationInfo>::Chunk"*
  %82 = icmp ne %"struct.v8::internal::ZoneChunkList<v8::internal::SafepointTableBuilder::DeoptimizationInfo>::Chunk"* %80, %81
  %83 = icmp ne i64 %79, %74
  %84 = or i1 %83, %82
  br i1 %84, label %85, label %112

85:                                               ; preds = %78
  %86 = getelementptr inbounds %"struct.v8::internal::ZoneChunkList<v8::internal::SafepointTableBuilder::DeoptimizationInfo>::Chunk", %"struct.v8::internal::ZoneChunkList<v8::internal::SafepointTableBuilder::DeoptimizationInfo>::Chunk"* %81, i64 1
  %87 = bitcast %"struct.v8::internal::ZoneChunkList<v8::internal::SafepointTableBuilder::DeoptimizationInfo>::Chunk"* %86 to %"struct.v8::internal::SafepointTableBuilder::DeoptimizationInfo"*
  %88 = getelementptr inbounds %"struct.v8::internal::SafepointTableBuilder::DeoptimizationInfo", %"struct.v8::internal::SafepointTableBuilder::DeoptimizationInfo"* %87, i64 %74, i32 0
  %89 = load i32, i32* %88, align 8
  %90 = icmp eq i32 %89, %1
  br i1 %90, label %91, label %98

91:                                               ; preds = %85, %44
  %92 = phi %"struct.v8::internal::ZoneChunkList<v8::internal::SafepointTableBuilder::DeoptimizationInfo>::Chunk"* [ %49, %44 ], [ %86, %85 ]
  %93 = phi i64 [ %47, %44 ], [ %74, %85 ]
  %94 = phi i32 [ %46, %44 ], [ %75, %85 ]
  %95 = bitcast %"struct.v8::internal::ZoneChunkList<v8::internal::SafepointTableBuilder::DeoptimizationInfo>::Chunk"* %92 to %"struct.v8::internal::SafepointTableBuilder::DeoptimizationInfo"*
  %96 = getelementptr inbounds %"struct.v8::internal::SafepointTableBuilder::DeoptimizationInfo", %"struct.v8::internal::SafepointTableBuilder::DeoptimizationInfo"* %95, i64 %93, i32 2
  store i32 %2, i32* %96, align 8
  %97 = getelementptr inbounds %"struct.v8::internal::SafepointTableBuilder::DeoptimizationInfo", %"struct.v8::internal::SafepointTableBuilder::DeoptimizationInfo"* %95, i64 %93, i32 1
  store i32 %4, i32* %97, align 4
  ret i32 %94

98:                                               ; preds = %85
  %99 = add i64 %74, 1
  %100 = getelementptr inbounds %"struct.v8::internal::ZoneChunkList<v8::internal::SafepointTableBuilder::DeoptimizationInfo>::Chunk", %"struct.v8::internal::ZoneChunkList<v8::internal::SafepointTableBuilder::DeoptimizationInfo>::Chunk"* %81, i64 0, i32 0
  %101 = load i32, i32* %100, align 8
  %102 = zext i32 %101 to i64
  %103 = icmp ult i64 %99, %102
  br i1 %103, label %108, label %104

104:                                              ; preds = %98
  %105 = getelementptr inbounds %"struct.v8::internal::ZoneChunkList<v8::internal::SafepointTableBuilder::DeoptimizationInfo>::Chunk", %"struct.v8::internal::ZoneChunkList<v8::internal::SafepointTableBuilder::DeoptimizationInfo>::Chunk"* %81, i64 0, i32 2
  %106 = bitcast %"struct.v8::internal::ZoneChunkList<v8::internal::SafepointTableBuilder::DeoptimizationInfo>::Chunk"** %105 to i64*
  %107 = load i64, i64* %106, align 8
  br label %108

108:                                              ; preds = %98, %104
  %109 = phi i64 [ %73, %98 ], [ %107, %104 ]
  %110 = phi i64 [ %99, %98 ], [ 0, %104 ]
  %111 = add nsw i32 %75, 1
  br label %72

112:                                              ; preds = %78, %64, %33
  tail call void (i8*, ...) @_Z8V8_FatalPKcz(i8* getelementptr inbounds ([17 x i8], [17 x i8]* @.str, i64 0, i64 0)) #10
  unreachable
}

; Function Attrs: nounwind ssp uwtable
define hidden void @_ZN2v88internal21SafepointTableBuilder4EmitEPNS0_9AssemblerEi(%"class.v8::internal::SafepointTableBuilder"* nocapture, %"class.v8::internal::Assembler"*, i32) local_unnamed_addr #0 align 2 {
  %4 = alloca i32, align 4
  %5 = alloca %"class.v8::internal::ZoneVector", align 8
  store i32 %2, i32* %4, align 4
  tail call void @_ZN2v88internal21SafepointTableBuilder16RemoveDuplicatesEv(%"class.v8::internal::SafepointTableBuilder"* %0)
  call void @_ZN2v88internal21SafepointTableBuilder11TrimEntriesEPi(%"class.v8::internal::SafepointTableBuilder"* %0, i32* nonnull %4)
  tail call void @_ZN2v88internal9Assembler5AlignEi(%"class.v8::internal::Assembler"* %1, i32 4) #9
  %6 = getelementptr inbounds %"class.v8::internal::Assembler", %"class.v8::internal::Assembler"* %1, i64 0, i32 0, i32 4
  %7 = bitcast i8** %6 to i64*
  %8 = load i64, i64* %7, align 8
  %9 = getelementptr inbounds %"class.v8::internal::Assembler", %"class.v8::internal::Assembler"* %1, i64 0, i32 0, i32 2
  %10 = bitcast i8** %9 to i64*
  %11 = load i64, i64* %10, align 8
  %12 = sub i64 %8, %11
  %13 = trunc i64 %12 to i32
  %14 = getelementptr inbounds %"class.v8::internal::SafepointTableBuilder", %"class.v8::internal::SafepointTableBuilder"* %0, i64 0, i32 1
  store i32 %13, i32* %14, align 8
  %15 = load i32, i32* %4, align 4
  %16 = add i32 %15, 7
  %17 = ashr i32 %16, 3
  %18 = getelementptr inbounds %"class.v8::internal::SafepointTableBuilder", %"class.v8::internal::SafepointTableBuilder"* %0, i64 0, i32 0, i32 1
  %19 = load i64, i64* %18, align 8
  %20 = trunc i64 %19 to i32
  tail call void @_ZN2v88internal9Assembler2ddEjNS0_9RelocInfo4ModeE(%"class.v8::internal::Assembler"* %1, i32 %20, i8 signext 0) #9
  tail call void @_ZN2v88internal9Assembler2ddEjNS0_9RelocInfo4ModeE(%"class.v8::internal::Assembler"* %1, i32 %17, i8 signext 0) #9
  %21 = getelementptr inbounds %"class.v8::internal::SafepointTableBuilder", %"class.v8::internal::SafepointTableBuilder"* %0, i64 0, i32 0, i32 2
  %22 = load %"struct.v8::internal::ZoneChunkList<v8::internal::SafepointTableBuilder::DeoptimizationInfo>::Chunk"*, %"struct.v8::internal::ZoneChunkList<v8::internal::SafepointTableBuilder::DeoptimizationInfo>::Chunk"** %21, align 8
  %23 = ptrtoint %"struct.v8::internal::ZoneChunkList<v8::internal::SafepointTableBuilder::DeoptimizationInfo>::Chunk"* %22 to i64
  %24 = getelementptr inbounds %"class.v8::internal::SafepointTableBuilder", %"class.v8::internal::SafepointTableBuilder"* %0, i64 0, i32 0, i32 3
  %25 = load %"struct.v8::internal::ZoneChunkList<v8::internal::SafepointTableBuilder::DeoptimizationInfo>::Chunk"*, %"struct.v8::internal::ZoneChunkList<v8::internal::SafepointTableBuilder::DeoptimizationInfo>::Chunk"** %24, align 8
  %26 = icmp eq %"struct.v8::internal::ZoneChunkList<v8::internal::SafepointTableBuilder::DeoptimizationInfo>::Chunk"* %25, null
  br i1 %26, label %38, label %27

27:                                               ; preds = %3
  %28 = getelementptr inbounds %"struct.v8::internal::ZoneChunkList<v8::internal::SafepointTableBuilder::DeoptimizationInfo>::Chunk", %"struct.v8::internal::ZoneChunkList<v8::internal::SafepointTableBuilder::DeoptimizationInfo>::Chunk"* %25, i64 0, i32 1
  %29 = load i32, i32* %28, align 4
  %30 = getelementptr inbounds %"struct.v8::internal::ZoneChunkList<v8::internal::SafepointTableBuilder::DeoptimizationInfo>::Chunk", %"struct.v8::internal::ZoneChunkList<v8::internal::SafepointTableBuilder::DeoptimizationInfo>::Chunk"* %25, i64 0, i32 0
  %31 = load i32, i32* %30, align 8
  %32 = icmp eq i32 %29, %31
  br i1 %32, label %33, label %36

33:                                               ; preds = %27
  %34 = getelementptr inbounds %"struct.v8::internal::ZoneChunkList<v8::internal::SafepointTableBuilder::DeoptimizationInfo>::Chunk", %"struct.v8::internal::ZoneChunkList<v8::internal::SafepointTableBuilder::DeoptimizationInfo>::Chunk"* %25, i64 0, i32 2
  %35 = load %"struct.v8::internal::ZoneChunkList<v8::internal::SafepointTableBuilder::DeoptimizationInfo>::Chunk"*, %"struct.v8::internal::ZoneChunkList<v8::internal::SafepointTableBuilder::DeoptimizationInfo>::Chunk"** %34, align 8
  br label %38

36:                                               ; preds = %27
  %37 = zext i32 %29 to i64
  br label %38

38:                                               ; preds = %3, %33, %36
  %39 = phi i64 [ 0, %33 ], [ %37, %36 ], [ 0, %3 ]
  %40 = phi %"struct.v8::internal::ZoneChunkList<v8::internal::SafepointTableBuilder::DeoptimizationInfo>::Chunk"* [ %35, %33 ], [ %25, %36 ], [ %22, %3 ]
  %41 = icmp ne %"struct.v8::internal::ZoneChunkList<v8::internal::SafepointTableBuilder::DeoptimizationInfo>::Chunk"* %40, %22
  %42 = icmp ne i64 %39, 0
  %43 = or i1 %41, %42
  br i1 %43, label %209, label %44

44:                                               ; preds = %236, %38
  %45 = bitcast %"class.v8::internal::ZoneVector"* %5 to i8*
  call void @llvm.lifetime.start.p0i8(i64 32, i8* nonnull %45) #9
  %46 = getelementptr inbounds %"class.v8::internal::SafepointTableBuilder", %"class.v8::internal::SafepointTableBuilder"* %0, i64 0, i32 3
  %47 = load %"class.v8::internal::Zone"*, %"class.v8::internal::Zone"** %46, align 8
  %48 = sext i32 %17 to i64
  %49 = ptrtoint %"class.v8::internal::Zone"* %47 to i64
  %50 = getelementptr inbounds %"class.v8::internal::ZoneVector", %"class.v8::internal::ZoneVector"* %5, i64 0, i32 0, i32 0, i32 2, i32 1
  %51 = bitcast %"struct.std::__1::__compressed_pair_elem.1547"* %50 to i64*
  call void @llvm.memset.p0i8.i64(i8* nonnull align 8 %45, i8 0, i64 24, i1 false) #9
  store i64 %49, i64* %51, align 8
  %52 = icmp eq i32 %17, 0
  br i1 %52, label %79, label %53

53:                                               ; preds = %44
  %54 = icmp slt i32 %16, 0
  br i1 %54, label %55, label %57

55:                                               ; preds = %53
  %56 = bitcast %"class.v8::internal::ZoneVector"* %5 to %"class.std::__1::__vector_base_common"*
  call void @_ZNKSt3__120__vector_base_commonILb1EE20__throw_length_errorEv(%"class.std::__1::__vector_base_common"* nonnull %56) #10
  unreachable

57:                                               ; preds = %53
  %58 = add nuw nsw i64 %48, 7
  %59 = and i64 %58, -8
  %60 = getelementptr inbounds %"class.v8::internal::Zone", %"class.v8::internal::Zone"* %47, i64 0, i32 2
  %61 = load i64, i64* %60, align 8
  %62 = getelementptr inbounds %"class.v8::internal::Zone", %"class.v8::internal::Zone"* %47, i64 0, i32 3
  %63 = load i64, i64* %62, align 8
  %64 = sub i64 %63, %61
  %65 = icmp ugt i64 %59, %64
  br i1 %65, label %66, label %68, !prof !15

66:                                               ; preds = %57
  %67 = tail call i64 @_ZN2v88internal4Zone9NewExpandEm(%"class.v8::internal::Zone"* %47, i64 %59) #9
  br label %70

68:                                               ; preds = %57
  %69 = add i64 %61, %59
  store i64 %69, i64* %60, align 8
  br label %70

70:                                               ; preds = %68, %66
  %71 = phi i64 [ %67, %66 ], [ %61, %68 ]
  %72 = inttoptr i64 %71 to i8*
  %73 = getelementptr inbounds %"class.v8::internal::ZoneVector", %"class.v8::internal::ZoneVector"* %5, i64 0, i32 0, i32 0, i32 1
  %74 = getelementptr inbounds %"class.v8::internal::ZoneVector", %"class.v8::internal::ZoneVector"* %5, i64 0, i32 0, i32 0, i32 0
  store i8* %72, i8** %74, align 8
  %75 = getelementptr inbounds i8, i8* %72, i64 %48
  %76 = getelementptr inbounds %"class.v8::internal::ZoneVector", %"class.v8::internal::ZoneVector"* %5, i64 0, i32 0, i32 0, i32 2, i32 0, i32 0
  store i8* %75, i8** %76, align 8
  tail call void @llvm.memset.p0i8.i64(i8* align 1 %72, i8 0, i64 %48, i1 false) #9
  %77 = bitcast i8** %73 to i64*
  %78 = ptrtoint i8* %75 to i64
  store i64 %78, i64* %77, align 8
  br label %79

79:                                               ; preds = %44, %70
  %80 = phi i64 [ 0, %44 ], [ %78, %70 ]
  %81 = phi i8* [ null, %44 ], [ %72, %70 ]
  %82 = load %"struct.v8::internal::ZoneChunkList<v8::internal::SafepointTableBuilder::DeoptimizationInfo>::Chunk"*, %"struct.v8::internal::ZoneChunkList<v8::internal::SafepointTableBuilder::DeoptimizationInfo>::Chunk"** %21, align 8
  %83 = ptrtoint %"struct.v8::internal::ZoneChunkList<v8::internal::SafepointTableBuilder::DeoptimizationInfo>::Chunk"* %82 to i64
  %84 = load %"struct.v8::internal::ZoneChunkList<v8::internal::SafepointTableBuilder::DeoptimizationInfo>::Chunk"*, %"struct.v8::internal::ZoneChunkList<v8::internal::SafepointTableBuilder::DeoptimizationInfo>::Chunk"** %24, align 8
  %85 = icmp eq %"struct.v8::internal::ZoneChunkList<v8::internal::SafepointTableBuilder::DeoptimizationInfo>::Chunk"* %84, null
  br i1 %85, label %97, label %86

86:                                               ; preds = %79
  %87 = getelementptr inbounds %"struct.v8::internal::ZoneChunkList<v8::internal::SafepointTableBuilder::DeoptimizationInfo>::Chunk", %"struct.v8::internal::ZoneChunkList<v8::internal::SafepointTableBuilder::DeoptimizationInfo>::Chunk"* %84, i64 0, i32 1
  %88 = load i32, i32* %87, align 4
  %89 = getelementptr inbounds %"struct.v8::internal::ZoneChunkList<v8::internal::SafepointTableBuilder::DeoptimizationInfo>::Chunk", %"struct.v8::internal::ZoneChunkList<v8::internal::SafepointTableBuilder::DeoptimizationInfo>::Chunk"* %84, i64 0, i32 0
  %90 = load i32, i32* %89, align 8
  %91 = icmp eq i32 %88, %90
  br i1 %91, label %92, label %95

92:                                               ; preds = %86
  %93 = getelementptr inbounds %"struct.v8::internal::ZoneChunkList<v8::internal::SafepointTableBuilder::DeoptimizationInfo>::Chunk", %"struct.v8::internal::ZoneChunkList<v8::internal::SafepointTableBuilder::DeoptimizationInfo>::Chunk"* %84, i64 0, i32 2
  %94 = load %"struct.v8::internal::ZoneChunkList<v8::internal::SafepointTableBuilder::DeoptimizationInfo>::Chunk"*, %"struct.v8::internal::ZoneChunkList<v8::internal::SafepointTableBuilder::DeoptimizationInfo>::Chunk"** %93, align 8
  br label %97

95:                                               ; preds = %86
  %96 = zext i32 %88 to i64
  br label %97

97:                                               ; preds = %79, %92, %95
  %98 = phi i64 [ 0, %92 ], [ %96, %95 ], [ 0, %79 ]
  %99 = phi %"struct.v8::internal::ZoneChunkList<v8::internal::SafepointTableBuilder::DeoptimizationInfo>::Chunk"* [ %94, %92 ], [ %84, %95 ], [ %82, %79 ]
  %100 = icmp ne %"struct.v8::internal::ZoneChunkList<v8::internal::SafepointTableBuilder::DeoptimizationInfo>::Chunk"* %99, %82
  %101 = icmp ne i64 %98, 0
  %102 = or i1 %100, %101
  br i1 %102, label %103, label %243

103:                                              ; preds = %97
  %104 = getelementptr inbounds %"class.v8::internal::ZoneVector", %"class.v8::internal::ZoneVector"* %5, i64 0, i32 0, i32 0, i32 0
  %105 = getelementptr inbounds %"class.v8::internal::ZoneVector", %"class.v8::internal::ZoneVector"* %5, i64 0, i32 0, i32 0, i32 1
  %106 = bitcast i8** %105 to i64*
  %107 = icmp sgt i32 %16, 7
  br i1 %107, label %108, label %252

108:                                              ; preds = %103, %159
  %109 = phi i64 [ %160, %159 ], [ %80, %103 ]
  %110 = phi i8* [ %202, %159 ], [ %81, %103 ]
  %111 = phi %"struct.v8::internal::ZoneChunkList<v8::internal::SafepointTableBuilder::DeoptimizationInfo>::Chunk"* [ %155, %159 ], [ %82, %103 ]
  %112 = phi i64 [ %154, %159 ], [ 0, %103 ]
  %113 = phi i64 [ %153, %159 ], [ %83, %103 ]
  %114 = getelementptr inbounds %"struct.v8::internal::ZoneChunkList<v8::internal::SafepointTableBuilder::DeoptimizationInfo>::Chunk", %"struct.v8::internal::ZoneChunkList<v8::internal::SafepointTableBuilder::DeoptimizationInfo>::Chunk"* %111, i64 1
  %115 = bitcast %"struct.v8::internal::ZoneChunkList<v8::internal::SafepointTableBuilder::DeoptimizationInfo>::Chunk"* %114 to %"struct.v8::internal::SafepointTableBuilder::DeoptimizationInfo"*
  %116 = getelementptr inbounds %"struct.v8::internal::SafepointTableBuilder::DeoptimizationInfo", %"struct.v8::internal::SafepointTableBuilder::DeoptimizationInfo"* %115, i64 %112, i32 4
  %117 = load %"class.v8::internal::ZoneChunkList"*, %"class.v8::internal::ZoneChunkList"** %116, align 8
  %118 = ptrtoint i8* %110 to i64
  %119 = sub i64 %109, %118
  %120 = icmp sgt i64 %119, 0
  br i1 %120, label %121, label %122

121:                                              ; preds = %108
  call void @llvm.memset.p0i8.i64(i8* align 1 %110, i8 0, i64 %119, i1 false)
  br label %122

122:                                              ; preds = %121, %108
  %123 = getelementptr inbounds %"class.v8::internal::ZoneChunkList", %"class.v8::internal::ZoneChunkList"* %117, i64 0, i32 2
  %124 = load %"struct.v8::internal::ZoneChunkList<int>::Chunk"*, %"struct.v8::internal::ZoneChunkList<int>::Chunk"** %123, align 8
  %125 = ptrtoint %"struct.v8::internal::ZoneChunkList<int>::Chunk"* %124 to i64
  %126 = getelementptr inbounds %"class.v8::internal::ZoneChunkList", %"class.v8::internal::ZoneChunkList"* %117, i64 0, i32 3
  %127 = load %"struct.v8::internal::ZoneChunkList<int>::Chunk"*, %"struct.v8::internal::ZoneChunkList<int>::Chunk"** %126, align 8
  %128 = icmp eq %"struct.v8::internal::ZoneChunkList<int>::Chunk"* %127, null
  br i1 %128, label %140, label %129

129:                                              ; preds = %122
  %130 = getelementptr inbounds %"struct.v8::internal::ZoneChunkList<int>::Chunk", %"struct.v8::internal::ZoneChunkList<int>::Chunk"* %127, i64 0, i32 1
  %131 = load i32, i32* %130, align 4
  %132 = getelementptr inbounds %"struct.v8::internal::ZoneChunkList<int>::Chunk", %"struct.v8::internal::ZoneChunkList<int>::Chunk"* %127, i64 0, i32 0
  %133 = load i32, i32* %132, align 8
  %134 = icmp eq i32 %131, %133
  br i1 %134, label %137, label %135

135:                                              ; preds = %129
  %136 = zext i32 %131 to i64
  br label %140

137:                                              ; preds = %129
  %138 = getelementptr inbounds %"struct.v8::internal::ZoneChunkList<int>::Chunk", %"struct.v8::internal::ZoneChunkList<int>::Chunk"* %127, i64 0, i32 2
  %139 = load %"struct.v8::internal::ZoneChunkList<int>::Chunk"*, %"struct.v8::internal::ZoneChunkList<int>::Chunk"** %138, align 8
  br label %140

140:                                              ; preds = %137, %135, %122
  %141 = phi i64 [ 0, %137 ], [ %136, %135 ], [ 0, %122 ]
  %142 = phi %"struct.v8::internal::ZoneChunkList<int>::Chunk"* [ %139, %137 ], [ %127, %135 ], [ %124, %122 ]
  %143 = icmp ne %"struct.v8::internal::ZoneChunkList<int>::Chunk"* %142, %124
  %144 = icmp ne i64 %141, 0
  %145 = or i1 %144, %143
  br i1 %145, label %146, label %201

146:                                              ; preds = %140
  %147 = load i32, i32* %4, align 4
  br label %167

148:                                              ; preds = %203
  %149 = getelementptr inbounds %"struct.v8::internal::ZoneChunkList<v8::internal::SafepointTableBuilder::DeoptimizationInfo>::Chunk", %"struct.v8::internal::ZoneChunkList<v8::internal::SafepointTableBuilder::DeoptimizationInfo>::Chunk"* %111, i64 0, i32 2
  %150 = bitcast %"struct.v8::internal::ZoneChunkList<v8::internal::SafepointTableBuilder::DeoptimizationInfo>::Chunk"** %149 to i64*
  %151 = load i64, i64* %150, align 8
  br label %152

152:                                              ; preds = %148, %203
  %153 = phi i64 [ %113, %203 ], [ %151, %148 ]
  %154 = phi i64 [ %204, %203 ], [ 0, %148 ]
  %155 = inttoptr i64 %153 to %"struct.v8::internal::ZoneChunkList<v8::internal::SafepointTableBuilder::DeoptimizationInfo>::Chunk"*
  %156 = icmp ne %"struct.v8::internal::ZoneChunkList<v8::internal::SafepointTableBuilder::DeoptimizationInfo>::Chunk"* %99, %155
  %157 = icmp ne i64 %98, %154
  %158 = or i1 %156, %157
  br i1 %158, label %159, label %243

159:                                              ; preds = %152
  %160 = load i64, i64* %106, align 8
  br label %108

161:                                              ; preds = %201, %161
  %162 = phi i64 [ 0, %201 ], [ %165, %161 ]
  %163 = getelementptr inbounds i8, i8* %202, i64 %162
  %164 = load i8, i8* %163, align 1
  tail call void @_ZN2v88internal9Assembler2dbEh(%"class.v8::internal::Assembler"* %1, i8 zeroext %164) #9
  %165 = add nuw nsw i64 %162, 1
  %166 = icmp slt i64 %165, %48
  br i1 %166, label %161, label %203

167:                                              ; preds = %146, %194
  %168 = phi %"struct.v8::internal::ZoneChunkList<int>::Chunk"* [ %197, %194 ], [ %124, %146 ]
  %169 = phi i64 [ %196, %194 ], [ %125, %146 ]
  %170 = phi i64 [ %195, %194 ], [ 0, %146 ]
  %171 = getelementptr inbounds %"struct.v8::internal::ZoneChunkList<int>::Chunk", %"struct.v8::internal::ZoneChunkList<int>::Chunk"* %168, i64 1, i32 0
  %172 = getelementptr inbounds i32, i32* %171, i64 %170
  %173 = load i32, i32* %172, align 4
  %174 = xor i32 %173, -1
  %175 = add i32 %147, %174
  %176 = ashr i32 %175, 3
  %177 = and i32 %175, 7
  %178 = shl i32 1, %177
  %179 = sext i32 %176 to i64
  %180 = load i8*, i8** %104, align 8
  %181 = getelementptr inbounds i8, i8* %180, i64 %179
  %182 = load i8, i8* %181, align 1
  %183 = trunc i32 %178 to i8
  %184 = or i8 %182, %183
  store i8 %184, i8* %181, align 1
  %185 = add i64 %170, 1
  %186 = getelementptr inbounds %"struct.v8::internal::ZoneChunkList<int>::Chunk", %"struct.v8::internal::ZoneChunkList<int>::Chunk"* %168, i64 0, i32 0
  %187 = load i32, i32* %186, align 8
  %188 = zext i32 %187 to i64
  %189 = icmp ult i64 %185, %188
  br i1 %189, label %194, label %190

190:                                              ; preds = %167
  %191 = getelementptr inbounds %"struct.v8::internal::ZoneChunkList<int>::Chunk", %"struct.v8::internal::ZoneChunkList<int>::Chunk"* %168, i64 0, i32 2
  %192 = bitcast %"struct.v8::internal::ZoneChunkList<int>::Chunk"** %191 to i64*
  %193 = load i64, i64* %192, align 8
  br label %194

194:                                              ; preds = %190, %167
  %195 = phi i64 [ %185, %167 ], [ 0, %190 ]
  %196 = phi i64 [ %169, %167 ], [ %193, %190 ]
  %197 = inttoptr i64 %196 to %"struct.v8::internal::ZoneChunkList<int>::Chunk"*
  %198 = icmp ne %"struct.v8::internal::ZoneChunkList<int>::Chunk"* %142, %197
  %199 = icmp ne i64 %141, %195
  %200 = or i1 %199, %198
  br i1 %200, label %167, label %201

201:                                              ; preds = %194, %140
  %202 = load i8*, i8** %104, align 8
  br label %161

203:                                              ; preds = %161
  %204 = add i64 %112, 1
  %205 = getelementptr inbounds %"struct.v8::internal::ZoneChunkList<v8::internal::SafepointTableBuilder::DeoptimizationInfo>::Chunk", %"struct.v8::internal::ZoneChunkList<v8::internal::SafepointTableBuilder::DeoptimizationInfo>::Chunk"* %111, i64 0, i32 0
  %206 = load i32, i32* %205, align 8
  %207 = zext i32 %206 to i64
  %208 = icmp ult i64 %204, %207
  br i1 %208, label %152, label %148

209:                                              ; preds = %38, %236
  %210 = phi %"struct.v8::internal::ZoneChunkList<v8::internal::SafepointTableBuilder::DeoptimizationInfo>::Chunk"* [ %239, %236 ], [ %22, %38 ]
  %211 = phi i64 [ %238, %236 ], [ 0, %38 ]
  %212 = phi i64 [ %237, %236 ], [ %23, %38 ]
  %213 = getelementptr inbounds %"struct.v8::internal::ZoneChunkList<v8::internal::SafepointTableBuilder::DeoptimizationInfo>::Chunk", %"struct.v8::internal::ZoneChunkList<v8::internal::SafepointTableBuilder::DeoptimizationInfo>::Chunk"* %210, i64 1
  %214 = bitcast %"struct.v8::internal::ZoneChunkList<v8::internal::SafepointTableBuilder::DeoptimizationInfo>::Chunk"* %213 to %"struct.v8::internal::SafepointTableBuilder::DeoptimizationInfo"*
  %215 = getelementptr inbounds %"struct.v8::internal::SafepointTableBuilder::DeoptimizationInfo", %"struct.v8::internal::SafepointTableBuilder::DeoptimizationInfo"* %214, i64 %211, i32 0
  %216 = load i32, i32* %215, align 8
  tail call void @_ZN2v88internal9Assembler2ddEjNS0_9RelocInfo4ModeE(%"class.v8::internal::Assembler"* %1, i32 %216, i8 signext 0) #9
  %217 = getelementptr inbounds %"struct.v8::internal::SafepointTableBuilder::DeoptimizationInfo", %"struct.v8::internal::SafepointTableBuilder::DeoptimizationInfo"* %214, i64 %211, i32 5
  %218 = load i32, i32* %217, align 8
  %219 = icmp eq i32 %218, 0
  br i1 %219, label %220, label %223

220:                                              ; preds = %209
  %221 = getelementptr inbounds %"struct.v8::internal::SafepointTableBuilder::DeoptimizationInfo", %"struct.v8::internal::SafepointTableBuilder::DeoptimizationInfo"* %214, i64 %211, i32 1
  %222 = load i32, i32* %221, align 4
  br label %223

223:                                              ; preds = %209, %220
  %224 = phi i32 [ %222, %220 ], [ %218, %209 ]
  tail call void @_ZN2v88internal9Assembler2ddEjNS0_9RelocInfo4ModeE(%"class.v8::internal::Assembler"* %1, i32 %224, i8 signext 0) #9
  %225 = getelementptr inbounds %"struct.v8::internal::SafepointTableBuilder::DeoptimizationInfo", %"struct.v8::internal::SafepointTableBuilder::DeoptimizationInfo"* %214, i64 %211, i32 2
  %226 = load i32, i32* %225, align 8
  tail call void @_ZN2v88internal9Assembler2ddEjNS0_9RelocInfo4ModeE(%"class.v8::internal::Assembler"* %1, i32 %226, i8 signext 0) #9
  %227 = add i64 %211, 1
  %228 = getelementptr inbounds %"struct.v8::internal::ZoneChunkList<v8::internal::SafepointTableBuilder::DeoptimizationInfo>::Chunk", %"struct.v8::internal::ZoneChunkList<v8::internal::SafepointTableBuilder::DeoptimizationInfo>::Chunk"* %210, i64 0, i32 0
  %229 = load i32, i32* %228, align 8
  %230 = zext i32 %229 to i64
  %231 = icmp ult i64 %227, %230
  br i1 %231, label %236, label %232

232:                                              ; preds = %223
  %233 = getelementptr inbounds %"struct.v8::internal::ZoneChunkList<v8::internal::SafepointTableBuilder::DeoptimizationInfo>::Chunk", %"struct.v8::internal::ZoneChunkList<v8::internal::SafepointTableBuilder::DeoptimizationInfo>::Chunk"* %210, i64 0, i32 2
  %234 = bitcast %"struct.v8::internal::ZoneChunkList<v8::internal::SafepointTableBuilder::DeoptimizationInfo>::Chunk"** %233 to i64*
  %235 = load i64, i64* %234, align 8
  br label %236

236:                                              ; preds = %223, %232
  %237 = phi i64 [ %212, %223 ], [ %235, %232 ]
  %238 = phi i64 [ %227, %223 ], [ 0, %232 ]
  %239 = inttoptr i64 %237 to %"struct.v8::internal::ZoneChunkList<v8::internal::SafepointTableBuilder::DeoptimizationInfo>::Chunk"*
  %240 = icmp ne %"struct.v8::internal::ZoneChunkList<v8::internal::SafepointTableBuilder::DeoptimizationInfo>::Chunk"* %40, %239
  %241 = icmp ne i64 %39, %238
  %242 = or i1 %240, %241
  br i1 %242, label %209, label %44

243:                                              ; preds = %336, %152, %97
  %244 = phi i8* [ %81, %97 ], [ %202, %152 ], [ %343, %336 ]
  %245 = getelementptr inbounds %"class.v8::internal::SafepointTableBuilder", %"class.v8::internal::SafepointTableBuilder"* %0, i64 0, i32 2
  store i8 1, i8* %245, align 4
  %246 = icmp eq i8* %244, null
  br i1 %246, label %251, label %247

247:                                              ; preds = %243
  %248 = ptrtoint i8* %244 to i64
  %249 = getelementptr inbounds %"class.v8::internal::ZoneVector", %"class.v8::internal::ZoneVector"* %5, i64 0, i32 0, i32 0, i32 1
  %250 = bitcast i8** %249 to i64*
  store i64 %248, i64* %250, align 8
  br label %251

251:                                              ; preds = %243, %247
  call void @llvm.lifetime.end.p0i8(i64 32, i8* nonnull %45) #9
  ret void

252:                                              ; preds = %103, %344
  %253 = phi i64 [ %345, %344 ], [ %80, %103 ]
  %254 = phi i8* [ %343, %344 ], [ %81, %103 ]
  %255 = phi %"struct.v8::internal::ZoneChunkList<v8::internal::SafepointTableBuilder::DeoptimizationInfo>::Chunk"* [ %339, %344 ], [ %82, %103 ]
  %256 = phi i64 [ %338, %344 ], [ 0, %103 ]
  %257 = phi i64 [ %337, %344 ], [ %83, %103 ]
  %258 = getelementptr inbounds %"struct.v8::internal::ZoneChunkList<v8::internal::SafepointTableBuilder::DeoptimizationInfo>::Chunk", %"struct.v8::internal::ZoneChunkList<v8::internal::SafepointTableBuilder::DeoptimizationInfo>::Chunk"* %255, i64 1
  %259 = bitcast %"struct.v8::internal::ZoneChunkList<v8::internal::SafepointTableBuilder::DeoptimizationInfo>::Chunk"* %258 to %"struct.v8::internal::SafepointTableBuilder::DeoptimizationInfo"*
  %260 = getelementptr inbounds %"struct.v8::internal::SafepointTableBuilder::DeoptimizationInfo", %"struct.v8::internal::SafepointTableBuilder::DeoptimizationInfo"* %259, i64 %256, i32 4
  %261 = load %"class.v8::internal::ZoneChunkList"*, %"class.v8::internal::ZoneChunkList"** %260, align 8
  %262 = ptrtoint i8* %254 to i64
  %263 = sub i64 %253, %262
  %264 = icmp sgt i64 %263, 0
  br i1 %264, label %265, label %266

265:                                              ; preds = %252
  call void @llvm.memset.p0i8.i64(i8* align 1 %254, i8 0, i64 %263, i1 false)
  br label %266

266:                                              ; preds = %265, %252
  %267 = getelementptr inbounds %"class.v8::internal::ZoneChunkList", %"class.v8::internal::ZoneChunkList"* %261, i64 0, i32 2
  %268 = load %"struct.v8::internal::ZoneChunkList<int>::Chunk"*, %"struct.v8::internal::ZoneChunkList<int>::Chunk"** %267, align 8
  %269 = ptrtoint %"struct.v8::internal::ZoneChunkList<int>::Chunk"* %268 to i64
  %270 = getelementptr inbounds %"class.v8::internal::ZoneChunkList", %"class.v8::internal::ZoneChunkList"* %261, i64 0, i32 3
  %271 = load %"struct.v8::internal::ZoneChunkList<int>::Chunk"*, %"struct.v8::internal::ZoneChunkList<int>::Chunk"** %270, align 8
  %272 = icmp eq %"struct.v8::internal::ZoneChunkList<int>::Chunk"* %271, null
  br i1 %272, label %284, label %273

273:                                              ; preds = %266
  %274 = getelementptr inbounds %"struct.v8::internal::ZoneChunkList<int>::Chunk", %"struct.v8::internal::ZoneChunkList<int>::Chunk"* %271, i64 0, i32 1
  %275 = load i32, i32* %274, align 4
  %276 = getelementptr inbounds %"struct.v8::internal::ZoneChunkList<int>::Chunk", %"struct.v8::internal::ZoneChunkList<int>::Chunk"* %271, i64 0, i32 0
  %277 = load i32, i32* %276, align 8
  %278 = icmp eq i32 %275, %277
  br i1 %278, label %279, label %282

279:                                              ; preds = %273
  %280 = getelementptr inbounds %"struct.v8::internal::ZoneChunkList<int>::Chunk", %"struct.v8::internal::ZoneChunkList<int>::Chunk"* %271, i64 0, i32 2
  %281 = load %"struct.v8::internal::ZoneChunkList<int>::Chunk"*, %"struct.v8::internal::ZoneChunkList<int>::Chunk"** %280, align 8
  br label %284

282:                                              ; preds = %273
  %283 = zext i32 %275 to i64
  br label %284

284:                                              ; preds = %266, %279, %282
  %285 = phi i64 [ 0, %279 ], [ %283, %282 ], [ 0, %266 ]
  %286 = phi %"struct.v8::internal::ZoneChunkList<int>::Chunk"* [ %281, %279 ], [ %271, %282 ], [ %268, %266 ]
  %287 = icmp ne %"struct.v8::internal::ZoneChunkList<int>::Chunk"* %286, %268
  %288 = icmp ne i64 %285, 0
  %289 = or i1 %288, %287
  br i1 %289, label %290, label %326

290:                                              ; preds = %284
  %291 = load i32, i32* %4, align 4
  br label %292

292:                                              ; preds = %290, %319
  %293 = phi %"struct.v8::internal::ZoneChunkList<int>::Chunk"* [ %322, %319 ], [ %268, %290 ]
  %294 = phi i64 [ %321, %319 ], [ %269, %290 ]
  %295 = phi i64 [ %320, %319 ], [ 0, %290 ]
  %296 = getelementptr inbounds %"struct.v8::internal::ZoneChunkList<int>::Chunk", %"struct.v8::internal::ZoneChunkList<int>::Chunk"* %293, i64 1, i32 0
  %297 = getelementptr inbounds i32, i32* %296, i64 %295
  %298 = load i32, i32* %297, align 4
  %299 = xor i32 %298, -1
  %300 = add i32 %291, %299
  %301 = ashr i32 %300, 3
  %302 = and i32 %300, 7
  %303 = shl i32 1, %302
  %304 = sext i32 %301 to i64
  %305 = load i8*, i8** %104, align 8
  %306 = getelementptr inbounds i8, i8* %305, i64 %304
  %307 = load i8, i8* %306, align 1
  %308 = trunc i32 %303 to i8
  %309 = or i8 %307, %308
  store i8 %309, i8* %306, align 1
  %310 = add i64 %295, 1
  %311 = getelementptr inbounds %"struct.v8::internal::ZoneChunkList<int>::Chunk", %"struct.v8::internal::ZoneChunkList<int>::Chunk"* %293, i64 0, i32 0
  %312 = load i32, i32* %311, align 8
  %313 = zext i32 %312 to i64
  %314 = icmp ult i64 %310, %313
  br i1 %314, label %319, label %315

315:                                              ; preds = %292
  %316 = getelementptr inbounds %"struct.v8::internal::ZoneChunkList<int>::Chunk", %"struct.v8::internal::ZoneChunkList<int>::Chunk"* %293, i64 0, i32 2
  %317 = bitcast %"struct.v8::internal::ZoneChunkList<int>::Chunk"** %316 to i64*
  %318 = load i64, i64* %317, align 8
  br label %319

319:                                              ; preds = %292, %315
  %320 = phi i64 [ %310, %292 ], [ 0, %315 ]
  %321 = phi i64 [ %294, %292 ], [ %318, %315 ]
  %322 = inttoptr i64 %321 to %"struct.v8::internal::ZoneChunkList<int>::Chunk"*
  %323 = icmp ne %"struct.v8::internal::ZoneChunkList<int>::Chunk"* %286, %322
  %324 = icmp ne i64 %285, %320
  %325 = or i1 %324, %323
  br i1 %325, label %292, label %326

326:                                              ; preds = %319, %284
  %327 = add i64 %256, 1
  %328 = getelementptr inbounds %"struct.v8::internal::ZoneChunkList<v8::internal::SafepointTableBuilder::DeoptimizationInfo>::Chunk", %"struct.v8::internal::ZoneChunkList<v8::internal::SafepointTableBuilder::DeoptimizationInfo>::Chunk"* %255, i64 0, i32 0
  %329 = load i32, i32* %328, align 8
  %330 = zext i32 %329 to i64
  %331 = icmp ult i64 %327, %330
  br i1 %331, label %336, label %332

332:                                              ; preds = %326
  %333 = getelementptr inbounds %"struct.v8::internal::ZoneChunkList<v8::internal::SafepointTableBuilder::DeoptimizationInfo>::Chunk", %"struct.v8::internal::ZoneChunkList<v8::internal::SafepointTableBuilder::DeoptimizationInfo>::Chunk"* %255, i64 0, i32 2
  %334 = bitcast %"struct.v8::internal::ZoneChunkList<v8::internal::SafepointTableBuilder::DeoptimizationInfo>::Chunk"** %333 to i64*
  %335 = load i64, i64* %334, align 8
  br label %336

336:                                              ; preds = %326, %332
  %337 = phi i64 [ %257, %326 ], [ %335, %332 ]
  %338 = phi i64 [ %327, %326 ], [ 0, %332 ]
  %339 = inttoptr i64 %337 to %"struct.v8::internal::ZoneChunkList<v8::internal::SafepointTableBuilder::DeoptimizationInfo>::Chunk"*
  %340 = icmp ne %"struct.v8::internal::ZoneChunkList<v8::internal::SafepointTableBuilder::DeoptimizationInfo>::Chunk"* %99, %339
  %341 = icmp ne i64 %98, %338
  %342 = or i1 %340, %341
  %343 = load i8*, i8** %104, align 8
  br i1 %342, label %344, label %243

344:                                              ; preds = %336
  %345 = load i64, i64* %106, align 8
  br label %252
}

; Function Attrs: nounwind ssp uwtable
define hidden void @_ZN2v88internal21SafepointTableBuilder16RemoveDuplicatesEv(%"class.v8::internal::SafepointTableBuilder"* nocapture) local_unnamed_addr #0 align 2 {
  %2 = getelementptr inbounds %"class.v8::internal::SafepointTableBuilder", %"class.v8::internal::SafepointTableBuilder"* %0, i64 0, i32 0, i32 1
  %3 = load i64, i64* %2, align 8
  %4 = icmp ult i64 %3, 2
  br i1 %4, label %309, label %5

5:                                                ; preds = %1
  %6 = getelementptr inbounds %"class.v8::internal::SafepointTableBuilder", %"class.v8::internal::SafepointTableBuilder"* %0, i64 0, i32 0, i32 2
  %7 = load %"struct.v8::internal::ZoneChunkList<v8::internal::SafepointTableBuilder::DeoptimizationInfo>::Chunk"*, %"struct.v8::internal::ZoneChunkList<v8::internal::SafepointTableBuilder::DeoptimizationInfo>::Chunk"** %6, align 8
  %8 = getelementptr inbounds %"struct.v8::internal::ZoneChunkList<v8::internal::SafepointTableBuilder::DeoptimizationInfo>::Chunk", %"struct.v8::internal::ZoneChunkList<v8::internal::SafepointTableBuilder::DeoptimizationInfo>::Chunk"* %7, i64 0, i32 0
  %9 = load i32, i32* %8, align 8
  %10 = zext i32 %9 to i64
  %11 = icmp ugt i32 %9, 1
  br i1 %11, label %25, label %12

12:                                               ; preds = %5, %12
  %13 = phi i64 [ %21, %12 ], [ %10, %5 ]
  %14 = phi %"struct.v8::internal::ZoneChunkList<v8::internal::SafepointTableBuilder::DeoptimizationInfo>::Chunk"* [ %18, %12 ], [ %7, %5 ]
  %15 = phi i64 [ %16, %12 ], [ 1, %5 ]
  %16 = sub i64 %15, %13
  %17 = getelementptr inbounds %"struct.v8::internal::ZoneChunkList<v8::internal::SafepointTableBuilder::DeoptimizationInfo>::Chunk", %"struct.v8::internal::ZoneChunkList<v8::internal::SafepointTableBuilder::DeoptimizationInfo>::Chunk"* %14, i64 0, i32 2
  %18 = load %"struct.v8::internal::ZoneChunkList<v8::internal::SafepointTableBuilder::DeoptimizationInfo>::Chunk"*, %"struct.v8::internal::ZoneChunkList<v8::internal::SafepointTableBuilder::DeoptimizationInfo>::Chunk"** %17, align 8
  %19 = getelementptr inbounds %"struct.v8::internal::ZoneChunkList<v8::internal::SafepointTableBuilder::DeoptimizationInfo>::Chunk", %"struct.v8::internal::ZoneChunkList<v8::internal::SafepointTableBuilder::DeoptimizationInfo>::Chunk"* %18, i64 0, i32 0
  %20 = load i32, i32* %19, align 8
  %21 = zext i32 %20 to i64
  %22 = icmp ult i64 %16, %21
  br i1 %22, label %23, label %12

23:                                               ; preds = %12
  %24 = and i64 %16, 4294967295
  br label %25

25:                                               ; preds = %23, %5
  %26 = phi i64 [ 1, %5 ], [ %24, %23 ]
  %27 = phi %"struct.v8::internal::ZoneChunkList<v8::internal::SafepointTableBuilder::DeoptimizationInfo>::Chunk"* [ %7, %5 ], [ %18, %23 ]
  %28 = ptrtoint %"struct.v8::internal::ZoneChunkList<v8::internal::SafepointTableBuilder::DeoptimizationInfo>::Chunk"* %27 to i64
  %29 = getelementptr inbounds %"class.v8::internal::SafepointTableBuilder", %"class.v8::internal::SafepointTableBuilder"* %0, i64 0, i32 0, i32 3
  %30 = load %"struct.v8::internal::ZoneChunkList<v8::internal::SafepointTableBuilder::DeoptimizationInfo>::Chunk"*, %"struct.v8::internal::ZoneChunkList<v8::internal::SafepointTableBuilder::DeoptimizationInfo>::Chunk"** %29, align 8
  %31 = icmp eq %"struct.v8::internal::ZoneChunkList<v8::internal::SafepointTableBuilder::DeoptimizationInfo>::Chunk"* %30, null
  %32 = getelementptr inbounds %"struct.v8::internal::ZoneChunkList<v8::internal::SafepointTableBuilder::DeoptimizationInfo>::Chunk", %"struct.v8::internal::ZoneChunkList<v8::internal::SafepointTableBuilder::DeoptimizationInfo>::Chunk"* %30, i64 0, i32 2
  %33 = getelementptr inbounds %"struct.v8::internal::ZoneChunkList<v8::internal::SafepointTableBuilder::DeoptimizationInfo>::Chunk", %"struct.v8::internal::ZoneChunkList<v8::internal::SafepointTableBuilder::DeoptimizationInfo>::Chunk"* %7, i64 1, i32 1
  %34 = getelementptr inbounds %"struct.v8::internal::ZoneChunkList<v8::internal::SafepointTableBuilder::DeoptimizationInfo>::Chunk", %"struct.v8::internal::ZoneChunkList<v8::internal::SafepointTableBuilder::DeoptimizationInfo>::Chunk"* %7, i64 1, i32 3
  %35 = bitcast %"struct.v8::internal::ZoneChunkList<v8::internal::SafepointTableBuilder::DeoptimizationInfo>::Chunk"** %34 to %"class.v8::internal::ZoneChunkList"**
  %36 = getelementptr inbounds %"struct.v8::internal::ZoneChunkList<v8::internal::SafepointTableBuilder::DeoptimizationInfo>::Chunk", %"struct.v8::internal::ZoneChunkList<v8::internal::SafepointTableBuilder::DeoptimizationInfo>::Chunk"* %7, i64 2, i32 0
  br i1 %31, label %37, label %43

37:                                               ; preds = %25
  %38 = icmp ne %"struct.v8::internal::ZoneChunkList<v8::internal::SafepointTableBuilder::DeoptimizationInfo>::Chunk"* %7, %27
  %39 = icmp ne i64 %26, 0
  %40 = or i1 %39, %38
  br i1 %40, label %41, label %275

41:                                               ; preds = %37
  %42 = load i32, i32* %33, align 4
  br label %56

43:                                               ; preds = %25
  %44 = getelementptr inbounds %"struct.v8::internal::ZoneChunkList<v8::internal::SafepointTableBuilder::DeoptimizationInfo>::Chunk", %"struct.v8::internal::ZoneChunkList<v8::internal::SafepointTableBuilder::DeoptimizationInfo>::Chunk"* %30, i64 0, i32 0
  %45 = getelementptr inbounds %"struct.v8::internal::ZoneChunkList<v8::internal::SafepointTableBuilder::DeoptimizationInfo>::Chunk", %"struct.v8::internal::ZoneChunkList<v8::internal::SafepointTableBuilder::DeoptimizationInfo>::Chunk"* %30, i64 0, i32 1
  %46 = load i32, i32* %45, align 4
  %47 = load i32, i32* %44, align 8
  %48 = icmp eq i32 %46, %47
  %49 = zext i32 %46 to i64
  br label %50

50:                                               ; preds = %272, %43
  %51 = phi %"struct.v8::internal::ZoneChunkList<v8::internal::SafepointTableBuilder::DeoptimizationInfo>::Chunk"* [ %274, %272 ], [ %27, %43 ]
  %52 = phi i64 [ 0, %272 ], [ %26, %43 ]
  %53 = getelementptr inbounds %"struct.v8::internal::ZoneChunkList<v8::internal::SafepointTableBuilder::DeoptimizationInfo>::Chunk", %"struct.v8::internal::ZoneChunkList<v8::internal::SafepointTableBuilder::DeoptimizationInfo>::Chunk"* %51, i64 1
  %54 = bitcast %"struct.v8::internal::ZoneChunkList<v8::internal::SafepointTableBuilder::DeoptimizationInfo>::Chunk"* %53 to %"struct.v8::internal::SafepointTableBuilder::DeoptimizationInfo"*
  %55 = getelementptr inbounds %"struct.v8::internal::ZoneChunkList<v8::internal::SafepointTableBuilder::DeoptimizationInfo>::Chunk", %"struct.v8::internal::ZoneChunkList<v8::internal::SafepointTableBuilder::DeoptimizationInfo>::Chunk"* %51, i64 0, i32 0
  br label %167

56:                                               ; preds = %41, %160
  %57 = phi %"struct.v8::internal::ZoneChunkList<v8::internal::SafepointTableBuilder::DeoptimizationInfo>::Chunk"* [ %163, %160 ], [ %27, %41 ]
  %58 = phi i64 [ %162, %160 ], [ %26, %41 ]
  %59 = phi i64 [ %161, %160 ], [ %28, %41 ]
  %60 = getelementptr inbounds %"struct.v8::internal::ZoneChunkList<v8::internal::SafepointTableBuilder::DeoptimizationInfo>::Chunk", %"struct.v8::internal::ZoneChunkList<v8::internal::SafepointTableBuilder::DeoptimizationInfo>::Chunk"* %57, i64 1
  %61 = bitcast %"struct.v8::internal::ZoneChunkList<v8::internal::SafepointTableBuilder::DeoptimizationInfo>::Chunk"* %60 to %"struct.v8::internal::SafepointTableBuilder::DeoptimizationInfo"*
  %62 = getelementptr inbounds %"struct.v8::internal::SafepointTableBuilder::DeoptimizationInfo", %"struct.v8::internal::SafepointTableBuilder::DeoptimizationInfo"* %61, i64 %58, i32 1
  %63 = load i32, i32* %62, align 4
  %64 = icmp eq i32 %42, %63
  br i1 %64, label %65, label %309

65:                                               ; preds = %56
  %66 = load %"class.v8::internal::ZoneChunkList"*, %"class.v8::internal::ZoneChunkList"** %35, align 8
  %67 = getelementptr inbounds %"struct.v8::internal::SafepointTableBuilder::DeoptimizationInfo", %"struct.v8::internal::SafepointTableBuilder::DeoptimizationInfo"* %61, i64 %58, i32 4
  %68 = load %"class.v8::internal::ZoneChunkList"*, %"class.v8::internal::ZoneChunkList"** %67, align 8
  %69 = getelementptr inbounds %"class.v8::internal::ZoneChunkList", %"class.v8::internal::ZoneChunkList"* %66, i64 0, i32 1
  %70 = load i64, i64* %69, align 8
  %71 = getelementptr inbounds %"class.v8::internal::ZoneChunkList", %"class.v8::internal::ZoneChunkList"* %68, i64 0, i32 1
  %72 = load i64, i64* %71, align 8
  %73 = icmp eq i64 %70, %72
  br i1 %73, label %74, label %309

74:                                               ; preds = %65
  %75 = getelementptr inbounds %"class.v8::internal::ZoneChunkList", %"class.v8::internal::ZoneChunkList"* %66, i64 0, i32 2
  %76 = load %"struct.v8::internal::ZoneChunkList<int>::Chunk"*, %"struct.v8::internal::ZoneChunkList<int>::Chunk"** %75, align 8
  %77 = getelementptr inbounds %"class.v8::internal::ZoneChunkList", %"class.v8::internal::ZoneChunkList"* %66, i64 0, i32 3
  %78 = load %"struct.v8::internal::ZoneChunkList<int>::Chunk"*, %"struct.v8::internal::ZoneChunkList<int>::Chunk"** %77, align 8
  %79 = icmp eq %"struct.v8::internal::ZoneChunkList<int>::Chunk"* %78, null
  br i1 %79, label %91, label %80

80:                                               ; preds = %74
  %81 = getelementptr inbounds %"struct.v8::internal::ZoneChunkList<int>::Chunk", %"struct.v8::internal::ZoneChunkList<int>::Chunk"* %78, i64 0, i32 1
  %82 = load i32, i32* %81, align 4
  %83 = getelementptr inbounds %"struct.v8::internal::ZoneChunkList<int>::Chunk", %"struct.v8::internal::ZoneChunkList<int>::Chunk"* %78, i64 0, i32 0
  %84 = load i32, i32* %83, align 8
  %85 = icmp eq i32 %82, %84
  br i1 %85, label %88, label %86

86:                                               ; preds = %80
  %87 = zext i32 %82 to i64
  br label %91

88:                                               ; preds = %80
  %89 = getelementptr inbounds %"struct.v8::internal::ZoneChunkList<int>::Chunk", %"struct.v8::internal::ZoneChunkList<int>::Chunk"* %78, i64 0, i32 2
  %90 = load %"struct.v8::internal::ZoneChunkList<int>::Chunk"*, %"struct.v8::internal::ZoneChunkList<int>::Chunk"** %89, align 8
  br label %91

91:                                               ; preds = %88, %86, %74
  %92 = phi i64 [ 0, %88 ], [ %87, %86 ], [ 0, %74 ]
  %93 = phi %"struct.v8::internal::ZoneChunkList<int>::Chunk"* [ %90, %88 ], [ %78, %86 ], [ %76, %74 ]
  %94 = icmp ne %"struct.v8::internal::ZoneChunkList<int>::Chunk"* %76, %93
  %95 = icmp ne i64 %92, 0
  %96 = or i1 %95, %94
  br i1 %96, label %97, label %145

97:                                               ; preds = %91
  %98 = getelementptr inbounds %"class.v8::internal::ZoneChunkList", %"class.v8::internal::ZoneChunkList"* %68, i64 0, i32 2
  %99 = bitcast %"struct.v8::internal::ZoneChunkList<int>::Chunk"** %98 to i64*
  %100 = load i64, i64* %99, align 8
  %101 = ptrtoint %"struct.v8::internal::ZoneChunkList<int>::Chunk"* %76 to i64
  br label %102

102:                                              ; preds = %138, %97
  %103 = phi %"struct.v8::internal::ZoneChunkList<int>::Chunk"* [ %141, %138 ], [ %76, %97 ]
  %104 = phi i64 [ %140, %138 ], [ %100, %97 ]
  %105 = phi i64 [ %139, %138 ], [ 0, %97 ]
  %106 = phi i64 [ %128, %138 ], [ 0, %97 ]
  %107 = phi i64 [ %127, %138 ], [ %101, %97 ]
  %108 = getelementptr inbounds %"struct.v8::internal::ZoneChunkList<int>::Chunk", %"struct.v8::internal::ZoneChunkList<int>::Chunk"* %103, i64 1, i32 0
  %109 = getelementptr inbounds i32, i32* %108, i64 %106
  %110 = inttoptr i64 %104 to %"struct.v8::internal::ZoneChunkList<int>::Chunk"*
  %111 = getelementptr inbounds %"struct.v8::internal::ZoneChunkList<int>::Chunk", %"struct.v8::internal::ZoneChunkList<int>::Chunk"* %110, i64 1, i32 0
  %112 = getelementptr inbounds i32, i32* %111, i64 %105
  %113 = load i32, i32* %109, align 4
  %114 = load i32, i32* %112, align 4
  %115 = icmp eq i32 %113, %114
  br i1 %115, label %116, label %309

116:                                              ; preds = %102
  %117 = add i64 %106, 1
  %118 = getelementptr inbounds %"struct.v8::internal::ZoneChunkList<int>::Chunk", %"struct.v8::internal::ZoneChunkList<int>::Chunk"* %103, i64 0, i32 0
  %119 = load i32, i32* %118, align 8
  %120 = zext i32 %119 to i64
  %121 = icmp ult i64 %117, %120
  br i1 %121, label %126, label %122

122:                                              ; preds = %116
  %123 = getelementptr inbounds %"struct.v8::internal::ZoneChunkList<int>::Chunk", %"struct.v8::internal::ZoneChunkList<int>::Chunk"* %103, i64 0, i32 2
  %124 = bitcast %"struct.v8::internal::ZoneChunkList<int>::Chunk"** %123 to i64*
  %125 = load i64, i64* %124, align 8
  br label %126

126:                                              ; preds = %122, %116
  %127 = phi i64 [ %107, %116 ], [ %125, %122 ]
  %128 = phi i64 [ %117, %116 ], [ 0, %122 ]
  %129 = add i64 %105, 1
  %130 = getelementptr inbounds %"struct.v8::internal::ZoneChunkList<int>::Chunk", %"struct.v8::internal::ZoneChunkList<int>::Chunk"* %110, i64 0, i32 0
  %131 = load i32, i32* %130, align 8
  %132 = zext i32 %131 to i64
  %133 = icmp ult i64 %129, %132
  br i1 %133, label %138, label %134

134:                                              ; preds = %126
  %135 = getelementptr inbounds %"struct.v8::internal::ZoneChunkList<int>::Chunk", %"struct.v8::internal::ZoneChunkList<int>::Chunk"* %110, i64 0, i32 2
  %136 = bitcast %"struct.v8::internal::ZoneChunkList<int>::Chunk"** %135 to i64*
  %137 = load i64, i64* %136, align 8
  br label %138

138:                                              ; preds = %134, %126
  %139 = phi i64 [ %129, %126 ], [ 0, %134 ]
  %140 = phi i64 [ %104, %126 ], [ %137, %134 ]
  %141 = inttoptr i64 %127 to %"struct.v8::internal::ZoneChunkList<int>::Chunk"*
  %142 = icmp ne %"struct.v8::internal::ZoneChunkList<int>::Chunk"* %93, %141
  %143 = icmp ne i64 %128, %92
  %144 = or i1 %142, %143
  br i1 %144, label %102, label %145

145:                                              ; preds = %138, %91
  %146 = load i32, i32* %36, align 8
  %147 = getelementptr inbounds %"struct.v8::internal::SafepointTableBuilder::DeoptimizationInfo", %"struct.v8::internal::SafepointTableBuilder::DeoptimizationInfo"* %61, i64 %58, i32 5
  %148 = load i32, i32* %147, align 8
  %149 = icmp eq i32 %146, %148
  br i1 %149, label %150, label %309

150:                                              ; preds = %145
  %151 = add i64 %58, 1
  %152 = getelementptr inbounds %"struct.v8::internal::ZoneChunkList<v8::internal::SafepointTableBuilder::DeoptimizationInfo>::Chunk", %"struct.v8::internal::ZoneChunkList<v8::internal::SafepointTableBuilder::DeoptimizationInfo>::Chunk"* %57, i64 0, i32 0
  %153 = load i32, i32* %152, align 8
  %154 = zext i32 %153 to i64
  %155 = icmp ult i64 %151, %154
  br i1 %155, label %160, label %156

156:                                              ; preds = %150
  %157 = getelementptr inbounds %"struct.v8::internal::ZoneChunkList<v8::internal::SafepointTableBuilder::DeoptimizationInfo>::Chunk", %"struct.v8::internal::ZoneChunkList<v8::internal::SafepointTableBuilder::DeoptimizationInfo>::Chunk"* %57, i64 0, i32 2
  %158 = bitcast %"struct.v8::internal::ZoneChunkList<v8::internal::SafepointTableBuilder::DeoptimizationInfo>::Chunk"** %157 to i64*
  %159 = load i64, i64* %158, align 8
  br label %160

160:                                              ; preds = %156, %150
  %161 = phi i64 [ %59, %150 ], [ %159, %156 ]
  %162 = phi i64 [ %151, %150 ], [ 0, %156 ]
  %163 = inttoptr i64 %161 to %"struct.v8::internal::ZoneChunkList<v8::internal::SafepointTableBuilder::DeoptimizationInfo>::Chunk"*
  %164 = icmp ne %"struct.v8::internal::ZoneChunkList<v8::internal::SafepointTableBuilder::DeoptimizationInfo>::Chunk"* %7, %163
  %165 = icmp ne i64 %162, 0
  %166 = or i1 %165, %164
  br i1 %166, label %56, label %275

167:                                              ; preds = %50, %267
  %168 = phi i64 [ %268, %267 ], [ %52, %50 ]
  br i1 %48, label %169, label %171

169:                                              ; preds = %167
  %170 = load %"struct.v8::internal::ZoneChunkList<v8::internal::SafepointTableBuilder::DeoptimizationInfo>::Chunk"*, %"struct.v8::internal::ZoneChunkList<v8::internal::SafepointTableBuilder::DeoptimizationInfo>::Chunk"** %32, align 8
  br label %171

171:                                              ; preds = %167, %169
  %172 = phi i64 [ 0, %169 ], [ %49, %167 ]
  %173 = phi %"struct.v8::internal::ZoneChunkList<v8::internal::SafepointTableBuilder::DeoptimizationInfo>::Chunk"* [ %170, %169 ], [ %30, %167 ]
  %174 = icmp ne %"struct.v8::internal::ZoneChunkList<v8::internal::SafepointTableBuilder::DeoptimizationInfo>::Chunk"* %173, %51
  %175 = icmp ne i64 %172, %168
  %176 = or i1 %175, %174
  br i1 %176, label %177, label %275

177:                                              ; preds = %171
  %178 = load i32, i32* %33, align 4
  %179 = getelementptr inbounds %"struct.v8::internal::SafepointTableBuilder::DeoptimizationInfo", %"struct.v8::internal::SafepointTableBuilder::DeoptimizationInfo"* %54, i64 %168, i32 1
  %180 = load i32, i32* %179, align 4
  %181 = icmp eq i32 %178, %180
  br i1 %181, label %182, label %309

182:                                              ; preds = %177
  %183 = load %"class.v8::internal::ZoneChunkList"*, %"class.v8::internal::ZoneChunkList"** %35, align 8
  %184 = getelementptr inbounds %"struct.v8::internal::SafepointTableBuilder::DeoptimizationInfo", %"struct.v8::internal::SafepointTableBuilder::DeoptimizationInfo"* %54, i64 %168, i32 4
  %185 = load %"class.v8::internal::ZoneChunkList"*, %"class.v8::internal::ZoneChunkList"** %184, align 8
  %186 = getelementptr inbounds %"class.v8::internal::ZoneChunkList", %"class.v8::internal::ZoneChunkList"* %183, i64 0, i32 1
  %187 = load i64, i64* %186, align 8
  %188 = getelementptr inbounds %"class.v8::internal::ZoneChunkList", %"class.v8::internal::ZoneChunkList"* %185, i64 0, i32 1
  %189 = load i64, i64* %188, align 8
  %190 = icmp eq i64 %187, %189
  br i1 %190, label %191, label %309

191:                                              ; preds = %182
  %192 = getelementptr inbounds %"class.v8::internal::ZoneChunkList", %"class.v8::internal::ZoneChunkList"* %183, i64 0, i32 2
  %193 = load %"struct.v8::internal::ZoneChunkList<int>::Chunk"*, %"struct.v8::internal::ZoneChunkList<int>::Chunk"** %192, align 8
  %194 = getelementptr inbounds %"class.v8::internal::ZoneChunkList", %"class.v8::internal::ZoneChunkList"* %183, i64 0, i32 3
  %195 = load %"struct.v8::internal::ZoneChunkList<int>::Chunk"*, %"struct.v8::internal::ZoneChunkList<int>::Chunk"** %194, align 8
  %196 = icmp eq %"struct.v8::internal::ZoneChunkList<int>::Chunk"* %195, null
  br i1 %196, label %208, label %197

197:                                              ; preds = %191
  %198 = getelementptr inbounds %"struct.v8::internal::ZoneChunkList<int>::Chunk", %"struct.v8::internal::ZoneChunkList<int>::Chunk"* %195, i64 0, i32 1
  %199 = load i32, i32* %198, align 4
  %200 = getelementptr inbounds %"struct.v8::internal::ZoneChunkList<int>::Chunk", %"struct.v8::internal::ZoneChunkList<int>::Chunk"* %195, i64 0, i32 0
  %201 = load i32, i32* %200, align 8
  %202 = icmp eq i32 %199, %201
  br i1 %202, label %203, label %206

203:                                              ; preds = %197
  %204 = getelementptr inbounds %"struct.v8::internal::ZoneChunkList<int>::Chunk", %"struct.v8::internal::ZoneChunkList<int>::Chunk"* %195, i64 0, i32 2
  %205 = load %"struct.v8::internal::ZoneChunkList<int>::Chunk"*, %"struct.v8::internal::ZoneChunkList<int>::Chunk"** %204, align 8
  br label %208

206:                                              ; preds = %197
  %207 = zext i32 %199 to i64
  br label %208

208:                                              ; preds = %206, %203, %191
  %209 = phi i64 [ 0, %203 ], [ %207, %206 ], [ 0, %191 ]
  %210 = phi %"struct.v8::internal::ZoneChunkList<int>::Chunk"* [ %205, %203 ], [ %195, %206 ], [ %193, %191 ]
  %211 = icmp ne %"struct.v8::internal::ZoneChunkList<int>::Chunk"* %193, %210
  %212 = icmp ne i64 %209, 0
  %213 = or i1 %212, %211
  br i1 %213, label %214, label %262

214:                                              ; preds = %208
  %215 = getelementptr inbounds %"class.v8::internal::ZoneChunkList", %"class.v8::internal::ZoneChunkList"* %185, i64 0, i32 2
  %216 = bitcast %"struct.v8::internal::ZoneChunkList<int>::Chunk"** %215 to i64*
  %217 = load i64, i64* %216, align 8
  %218 = ptrtoint %"struct.v8::internal::ZoneChunkList<int>::Chunk"* %193 to i64
  br label %219

219:                                              ; preds = %255, %214
  %220 = phi %"struct.v8::internal::ZoneChunkList<int>::Chunk"* [ %258, %255 ], [ %193, %214 ]
  %221 = phi i64 [ %257, %255 ], [ %217, %214 ]
  %222 = phi i64 [ %256, %255 ], [ 0, %214 ]
  %223 = phi i64 [ %245, %255 ], [ 0, %214 ]
  %224 = phi i64 [ %244, %255 ], [ %218, %214 ]
  %225 = getelementptr inbounds %"struct.v8::internal::ZoneChunkList<int>::Chunk", %"struct.v8::internal::ZoneChunkList<int>::Chunk"* %220, i64 1, i32 0
  %226 = getelementptr inbounds i32, i32* %225, i64 %223
  %227 = inttoptr i64 %221 to %"struct.v8::internal::ZoneChunkList<int>::Chunk"*
  %228 = getelementptr inbounds %"struct.v8::internal::ZoneChunkList<int>::Chunk", %"struct.v8::internal::ZoneChunkList<int>::Chunk"* %227, i64 1, i32 0
  %229 = getelementptr inbounds i32, i32* %228, i64 %222
  %230 = load i32, i32* %226, align 4
  %231 = load i32, i32* %229, align 4
  %232 = icmp eq i32 %230, %231
  br i1 %232, label %233, label %309

233:                                              ; preds = %219
  %234 = add i64 %223, 1
  %235 = getelementptr inbounds %"struct.v8::internal::ZoneChunkList<int>::Chunk", %"struct.v8::internal::ZoneChunkList<int>::Chunk"* %220, i64 0, i32 0
  %236 = load i32, i32* %235, align 8
  %237 = zext i32 %236 to i64
  %238 = icmp ult i64 %234, %237
  br i1 %238, label %243, label %239

239:                                              ; preds = %233
  %240 = getelementptr inbounds %"struct.v8::internal::ZoneChunkList<int>::Chunk", %"struct.v8::internal::ZoneChunkList<int>::Chunk"* %220, i64 0, i32 2
  %241 = bitcast %"struct.v8::internal::ZoneChunkList<int>::Chunk"** %240 to i64*
  %242 = load i64, i64* %241, align 8
  br label %243

243:                                              ; preds = %239, %233
  %244 = phi i64 [ %224, %233 ], [ %242, %239 ]
  %245 = phi i64 [ %234, %233 ], [ 0, %239 ]
  %246 = add i64 %222, 1
  %247 = getelementptr inbounds %"struct.v8::internal::ZoneChunkList<int>::Chunk", %"struct.v8::internal::ZoneChunkList<int>::Chunk"* %227, i64 0, i32 0
  %248 = load i32, i32* %247, align 8
  %249 = zext i32 %248 to i64
  %250 = icmp ult i64 %246, %249
  br i1 %250, label %255, label %251

251:                                              ; preds = %243
  %252 = getelementptr inbounds %"struct.v8::internal::ZoneChunkList<int>::Chunk", %"struct.v8::internal::ZoneChunkList<int>::Chunk"* %227, i64 0, i32 2
  %253 = bitcast %"struct.v8::internal::ZoneChunkList<int>::Chunk"** %252 to i64*
  %254 = load i64, i64* %253, align 8
  br label %255

255:                                              ; preds = %251, %243
  %256 = phi i64 [ %246, %243 ], [ 0, %251 ]
  %257 = phi i64 [ %221, %243 ], [ %254, %251 ]
  %258 = inttoptr i64 %244 to %"struct.v8::internal::ZoneChunkList<int>::Chunk"*
  %259 = icmp ne %"struct.v8::internal::ZoneChunkList<int>::Chunk"* %210, %258
  %260 = icmp ne i64 %245, %209
  %261 = or i1 %259, %260
  br i1 %261, label %219, label %262

262:                                              ; preds = %255, %208
  %263 = load i32, i32* %36, align 8
  %264 = getelementptr inbounds %"struct.v8::internal::SafepointTableBuilder::DeoptimizationInfo", %"struct.v8::internal::SafepointTableBuilder::DeoptimizationInfo"* %54, i64 %168, i32 5
  %265 = load i32, i32* %264, align 8
  %266 = icmp eq i32 %263, %265
  br i1 %266, label %267, label %309

267:                                              ; preds = %262
  %268 = add i64 %168, 1
  %269 = load i32, i32* %55, align 8
  %270 = zext i32 %269 to i64
  %271 = icmp ult i64 %268, %270
  br i1 %271, label %167, label %272

272:                                              ; preds = %267
  %273 = getelementptr inbounds %"struct.v8::internal::ZoneChunkList<v8::internal::SafepointTableBuilder::DeoptimizationInfo>::Chunk", %"struct.v8::internal::ZoneChunkList<v8::internal::SafepointTableBuilder::DeoptimizationInfo>::Chunk"* %51, i64 0, i32 2
  %274 = load %"struct.v8::internal::ZoneChunkList<v8::internal::SafepointTableBuilder::DeoptimizationInfo>::Chunk"*, %"struct.v8::internal::ZoneChunkList<v8::internal::SafepointTableBuilder::DeoptimizationInfo>::Chunk"** %273, align 8
  br label %50

275:                                              ; preds = %171, %160, %37
  %276 = icmp ugt i64 %3, 1
  br i1 %276, label %277, label %306

277:                                              ; preds = %275
  br i1 %11, label %291, label %278

278:                                              ; preds = %277, %278
  %279 = phi i64 [ %287, %278 ], [ %10, %277 ]
  %280 = phi %"struct.v8::internal::ZoneChunkList<v8::internal::SafepointTableBuilder::DeoptimizationInfo>::Chunk"* [ %284, %278 ], [ %7, %277 ]
  %281 = phi i64 [ %282, %278 ], [ 1, %277 ]
  %282 = sub i64 %281, %279
  %283 = getelementptr inbounds %"struct.v8::internal::ZoneChunkList<v8::internal::SafepointTableBuilder::DeoptimizationInfo>::Chunk", %"struct.v8::internal::ZoneChunkList<v8::internal::SafepointTableBuilder::DeoptimizationInfo>::Chunk"* %280, i64 0, i32 2
  %284 = load %"struct.v8::internal::ZoneChunkList<v8::internal::SafepointTableBuilder::DeoptimizationInfo>::Chunk"*, %"struct.v8::internal::ZoneChunkList<v8::internal::SafepointTableBuilder::DeoptimizationInfo>::Chunk"** %283, align 8
  %285 = getelementptr inbounds %"struct.v8::internal::ZoneChunkList<v8::internal::SafepointTableBuilder::DeoptimizationInfo>::Chunk", %"struct.v8::internal::ZoneChunkList<v8::internal::SafepointTableBuilder::DeoptimizationInfo>::Chunk"* %284, i64 0, i32 0
  %286 = load i32, i32* %285, align 8
  %287 = zext i32 %286 to i64
  %288 = icmp ult i64 %282, %287
  br i1 %288, label %289, label %278

289:                                              ; preds = %278
  %290 = trunc i64 %282 to i32
  br label %291

291:                                              ; preds = %289, %277
  %292 = phi i32 [ 1, %277 ], [ %290, %289 ]
  %293 = phi %"struct.v8::internal::ZoneChunkList<v8::internal::SafepointTableBuilder::DeoptimizationInfo>::Chunk"* [ %7, %277 ], [ %284, %289 ]
  %294 = getelementptr inbounds %"struct.v8::internal::ZoneChunkList<v8::internal::SafepointTableBuilder::DeoptimizationInfo>::Chunk", %"struct.v8::internal::ZoneChunkList<v8::internal::SafepointTableBuilder::DeoptimizationInfo>::Chunk"* %293, i64 0, i32 1
  store i32 %292, i32* %294, align 4
  store %"struct.v8::internal::ZoneChunkList<v8::internal::SafepointTableBuilder::DeoptimizationInfo>::Chunk"* %293, %"struct.v8::internal::ZoneChunkList<v8::internal::SafepointTableBuilder::DeoptimizationInfo>::Chunk"** %29, align 8
  %295 = getelementptr inbounds %"struct.v8::internal::ZoneChunkList<v8::internal::SafepointTableBuilder::DeoptimizationInfo>::Chunk", %"struct.v8::internal::ZoneChunkList<v8::internal::SafepointTableBuilder::DeoptimizationInfo>::Chunk"* %293, i64 0, i32 2
  %296 = load %"struct.v8::internal::ZoneChunkList<v8::internal::SafepointTableBuilder::DeoptimizationInfo>::Chunk"*, %"struct.v8::internal::ZoneChunkList<v8::internal::SafepointTableBuilder::DeoptimizationInfo>::Chunk"** %295, align 8
  %297 = icmp eq %"struct.v8::internal::ZoneChunkList<v8::internal::SafepointTableBuilder::DeoptimizationInfo>::Chunk"* %296, null
  br i1 %297, label %298, label %300

298:                                              ; preds = %300, %291
  store i64 1, i64* %2, align 8
  %299 = load %"struct.v8::internal::ZoneChunkList<v8::internal::SafepointTableBuilder::DeoptimizationInfo>::Chunk"*, %"struct.v8::internal::ZoneChunkList<v8::internal::SafepointTableBuilder::DeoptimizationInfo>::Chunk"** %6, align 8
  br label %306

300:                                              ; preds = %291, %300
  %301 = phi %"struct.v8::internal::ZoneChunkList<v8::internal::SafepointTableBuilder::DeoptimizationInfo>::Chunk"* [ %304, %300 ], [ %296, %291 ]
  %302 = getelementptr inbounds %"struct.v8::internal::ZoneChunkList<v8::internal::SafepointTableBuilder::DeoptimizationInfo>::Chunk", %"struct.v8::internal::ZoneChunkList<v8::internal::SafepointTableBuilder::DeoptimizationInfo>::Chunk"* %301, i64 0, i32 1
  store i32 0, i32* %302, align 4
  %303 = getelementptr inbounds %"struct.v8::internal::ZoneChunkList<v8::internal::SafepointTableBuilder::DeoptimizationInfo>::Chunk", %"struct.v8::internal::ZoneChunkList<v8::internal::SafepointTableBuilder::DeoptimizationInfo>::Chunk"* %301, i64 0, i32 2
  %304 = load %"struct.v8::internal::ZoneChunkList<v8::internal::SafepointTableBuilder::DeoptimizationInfo>::Chunk"*, %"struct.v8::internal::ZoneChunkList<v8::internal::SafepointTableBuilder::DeoptimizationInfo>::Chunk"** %303, align 8
  %305 = icmp eq %"struct.v8::internal::ZoneChunkList<v8::internal::SafepointTableBuilder::DeoptimizationInfo>::Chunk"* %304, null
  br i1 %305, label %298, label %300

306:                                              ; preds = %275, %298
  %307 = phi %"struct.v8::internal::ZoneChunkList<v8::internal::SafepointTableBuilder::DeoptimizationInfo>::Chunk"* [ %7, %275 ], [ %299, %298 ]
  %308 = getelementptr inbounds %"struct.v8::internal::ZoneChunkList<v8::internal::SafepointTableBuilder::DeoptimizationInfo>::Chunk", %"struct.v8::internal::ZoneChunkList<v8::internal::SafepointTableBuilder::DeoptimizationInfo>::Chunk"* %307, i64 1, i32 0
  store i32 -1, i32* %308, align 8
  br label %309

309:                                              ; preds = %182, %177, %262, %219, %145, %65, %56, %102, %306, %1
  ret void
}

; Function Attrs: nounwind ssp uwtable
define hidden void @_ZN2v88internal21SafepointTableBuilder11TrimEntriesEPi(%"class.v8::internal::SafepointTableBuilder"* nocapture readonly, i32* nocapture) local_unnamed_addr #0 align 2 {
  %3 = load i32, i32* %1, align 4
  %4 = icmp eq i32 %3, 0
  br i1 %4, label %204, label %5

5:                                                ; preds = %2
  %6 = getelementptr inbounds %"class.v8::internal::SafepointTableBuilder", %"class.v8::internal::SafepointTableBuilder"* %0, i64 0, i32 0, i32 2
  %7 = load %"struct.v8::internal::ZoneChunkList<v8::internal::SafepointTableBuilder::DeoptimizationInfo>::Chunk"*, %"struct.v8::internal::ZoneChunkList<v8::internal::SafepointTableBuilder::DeoptimizationInfo>::Chunk"** %6, align 8
  %8 = ptrtoint %"struct.v8::internal::ZoneChunkList<v8::internal::SafepointTableBuilder::DeoptimizationInfo>::Chunk"* %7 to i64
  %9 = getelementptr inbounds %"class.v8::internal::SafepointTableBuilder", %"class.v8::internal::SafepointTableBuilder"* %0, i64 0, i32 0, i32 3
  %10 = load %"struct.v8::internal::ZoneChunkList<v8::internal::SafepointTableBuilder::DeoptimizationInfo>::Chunk"*, %"struct.v8::internal::ZoneChunkList<v8::internal::SafepointTableBuilder::DeoptimizationInfo>::Chunk"** %9, align 8
  %11 = icmp eq %"struct.v8::internal::ZoneChunkList<v8::internal::SafepointTableBuilder::DeoptimizationInfo>::Chunk"* %10, null
  br i1 %11, label %23, label %12

12:                                               ; preds = %5
  %13 = getelementptr inbounds %"struct.v8::internal::ZoneChunkList<v8::internal::SafepointTableBuilder::DeoptimizationInfo>::Chunk", %"struct.v8::internal::ZoneChunkList<v8::internal::SafepointTableBuilder::DeoptimizationInfo>::Chunk"* %10, i64 0, i32 1
  %14 = load i32, i32* %13, align 4
  %15 = getelementptr inbounds %"struct.v8::internal::ZoneChunkList<v8::internal::SafepointTableBuilder::DeoptimizationInfo>::Chunk", %"struct.v8::internal::ZoneChunkList<v8::internal::SafepointTableBuilder::DeoptimizationInfo>::Chunk"* %10, i64 0, i32 0
  %16 = load i32, i32* %15, align 8
  %17 = icmp eq i32 %14, %16
  br i1 %17, label %18, label %21

18:                                               ; preds = %12
  %19 = getelementptr inbounds %"struct.v8::internal::ZoneChunkList<v8::internal::SafepointTableBuilder::DeoptimizationInfo>::Chunk", %"struct.v8::internal::ZoneChunkList<v8::internal::SafepointTableBuilder::DeoptimizationInfo>::Chunk"* %10, i64 0, i32 2
  %20 = load %"struct.v8::internal::ZoneChunkList<v8::internal::SafepointTableBuilder::DeoptimizationInfo>::Chunk"*, %"struct.v8::internal::ZoneChunkList<v8::internal::SafepointTableBuilder::DeoptimizationInfo>::Chunk"** %19, align 8
  br label %23

21:                                               ; preds = %12
  %22 = zext i32 %14 to i64
  br label %23

23:                                               ; preds = %5, %18, %21
  %24 = phi i64 [ 0, %18 ], [ %22, %21 ], [ 0, %5 ]
  %25 = phi %"struct.v8::internal::ZoneChunkList<v8::internal::SafepointTableBuilder::DeoptimizationInfo>::Chunk"* [ %20, %18 ], [ %10, %21 ], [ %7, %5 ]
  %26 = icmp ne %"struct.v8::internal::ZoneChunkList<v8::internal::SafepointTableBuilder::DeoptimizationInfo>::Chunk"* %25, %7
  %27 = icmp ne i64 %24, 0
  %28 = or i1 %26, %27
  br i1 %28, label %29, label %108

29:                                               ; preds = %23, %101
  %30 = phi %"struct.v8::internal::ZoneChunkList<v8::internal::SafepointTableBuilder::DeoptimizationInfo>::Chunk"* [ %104, %101 ], [ %7, %23 ]
  %31 = phi i32 [ %91, %101 ], [ %3, %23 ]
  %32 = phi i64 [ %103, %101 ], [ 0, %23 ]
  %33 = phi i64 [ %102, %101 ], [ %8, %23 ]
  %34 = getelementptr inbounds %"struct.v8::internal::ZoneChunkList<v8::internal::SafepointTableBuilder::DeoptimizationInfo>::Chunk", %"struct.v8::internal::ZoneChunkList<v8::internal::SafepointTableBuilder::DeoptimizationInfo>::Chunk"* %30, i64 1
  %35 = bitcast %"struct.v8::internal::ZoneChunkList<v8::internal::SafepointTableBuilder::DeoptimizationInfo>::Chunk"* %34 to %"struct.v8::internal::SafepointTableBuilder::DeoptimizationInfo"*
  %36 = getelementptr inbounds %"struct.v8::internal::SafepointTableBuilder::DeoptimizationInfo", %"struct.v8::internal::SafepointTableBuilder::DeoptimizationInfo"* %35, i64 %32, i32 4
  %37 = load %"class.v8::internal::ZoneChunkList"*, %"class.v8::internal::ZoneChunkList"** %36, align 8
  %38 = getelementptr inbounds %"class.v8::internal::ZoneChunkList", %"class.v8::internal::ZoneChunkList"* %37, i64 0, i32 2
  %39 = load %"struct.v8::internal::ZoneChunkList<int>::Chunk"*, %"struct.v8::internal::ZoneChunkList<int>::Chunk"** %38, align 8
  %40 = ptrtoint %"struct.v8::internal::ZoneChunkList<int>::Chunk"* %39 to i64
  %41 = getelementptr inbounds %"class.v8::internal::ZoneChunkList", %"class.v8::internal::ZoneChunkList"* %37, i64 0, i32 3
  %42 = load %"struct.v8::internal::ZoneChunkList<int>::Chunk"*, %"struct.v8::internal::ZoneChunkList<int>::Chunk"** %41, align 8
  %43 = icmp eq %"struct.v8::internal::ZoneChunkList<int>::Chunk"* %42, null
  br i1 %43, label %55, label %44

44:                                               ; preds = %29
  %45 = getelementptr inbounds %"struct.v8::internal::ZoneChunkList<int>::Chunk", %"struct.v8::internal::ZoneChunkList<int>::Chunk"* %42, i64 0, i32 1
  %46 = load i32, i32* %45, align 4
  %47 = getelementptr inbounds %"struct.v8::internal::ZoneChunkList<int>::Chunk", %"struct.v8::internal::ZoneChunkList<int>::Chunk"* %42, i64 0, i32 0
  %48 = load i32, i32* %47, align 8
  %49 = icmp eq i32 %46, %48
  br i1 %49, label %50, label %53

50:                                               ; preds = %44
  %51 = getelementptr inbounds %"struct.v8::internal::ZoneChunkList<int>::Chunk", %"struct.v8::internal::ZoneChunkList<int>::Chunk"* %42, i64 0, i32 2
  %52 = load %"struct.v8::internal::ZoneChunkList<int>::Chunk"*, %"struct.v8::internal::ZoneChunkList<int>::Chunk"** %51, align 8
  br label %55

53:                                               ; preds = %44
  %54 = zext i32 %46 to i64
  br label %55

55:                                               ; preds = %29, %50, %53
  %56 = phi i64 [ 0, %50 ], [ %54, %53 ], [ 0, %29 ]
  %57 = phi %"struct.v8::internal::ZoneChunkList<int>::Chunk"* [ %52, %50 ], [ %42, %53 ], [ %39, %29 ]
  %58 = icmp ne %"struct.v8::internal::ZoneChunkList<int>::Chunk"* %57, %39
  %59 = icmp ne i64 %56, 0
  %60 = or i1 %58, %59
  br i1 %60, label %61, label %90

61:                                               ; preds = %55, %83
  %62 = phi %"struct.v8::internal::ZoneChunkList<int>::Chunk"* [ %86, %83 ], [ %39, %55 ]
  %63 = phi i32 [ %73, %83 ], [ %31, %55 ]
  %64 = phi i64 [ %85, %83 ], [ 0, %55 ]
  %65 = phi i64 [ %84, %83 ], [ %40, %55 ]
  %66 = getelementptr inbounds %"struct.v8::internal::ZoneChunkList<int>::Chunk", %"struct.v8::internal::ZoneChunkList<int>::Chunk"* %62, i64 1, i32 0
  %67 = getelementptr inbounds i32, i32* %66, i64 %64
  %68 = load i32, i32* %67, align 4
  %69 = icmp slt i32 %68, %63
  br i1 %69, label %70, label %72

70:                                               ; preds = %61
  %71 = icmp eq i32 %68, 0
  br i1 %71, label %204, label %72

72:                                               ; preds = %61, %70
  %73 = phi i32 [ %68, %70 ], [ %63, %61 ]
  %74 = add i64 %64, 1
  %75 = getelementptr inbounds %"struct.v8::internal::ZoneChunkList<int>::Chunk", %"struct.v8::internal::ZoneChunkList<int>::Chunk"* %62, i64 0, i32 0
  %76 = load i32, i32* %75, align 8
  %77 = zext i32 %76 to i64
  %78 = icmp ult i64 %74, %77
  br i1 %78, label %83, label %79

79:                                               ; preds = %72
  %80 = getelementptr inbounds %"struct.v8::internal::ZoneChunkList<int>::Chunk", %"struct.v8::internal::ZoneChunkList<int>::Chunk"* %62, i64 0, i32 2
  %81 = bitcast %"struct.v8::internal::ZoneChunkList<int>::Chunk"** %80 to i64*
  %82 = load i64, i64* %81, align 8
  br label %83

83:                                               ; preds = %72, %79
  %84 = phi i64 [ %65, %72 ], [ %82, %79 ]
  %85 = phi i64 [ %74, %72 ], [ 0, %79 ]
  %86 = inttoptr i64 %84 to %"struct.v8::internal::ZoneChunkList<int>::Chunk"*
  %87 = icmp ne %"struct.v8::internal::ZoneChunkList<int>::Chunk"* %57, %86
  %88 = icmp ne i64 %56, %85
  %89 = or i1 %87, %88
  br i1 %89, label %61, label %90

90:                                               ; preds = %83, %55
  %91 = phi i32 [ %31, %55 ], [ %73, %83 ]
  %92 = add i64 %32, 1
  %93 = getelementptr inbounds %"struct.v8::internal::ZoneChunkList<v8::internal::SafepointTableBuilder::DeoptimizationInfo>::Chunk", %"struct.v8::internal::ZoneChunkList<v8::internal::SafepointTableBuilder::DeoptimizationInfo>::Chunk"* %30, i64 0, i32 0
  %94 = load i32, i32* %93, align 8
  %95 = zext i32 %94 to i64
  %96 = icmp ult i64 %92, %95
  br i1 %96, label %101, label %97

97:                                               ; preds = %90
  %98 = getelementptr inbounds %"struct.v8::internal::ZoneChunkList<v8::internal::SafepointTableBuilder::DeoptimizationInfo>::Chunk", %"struct.v8::internal::ZoneChunkList<v8::internal::SafepointTableBuilder::DeoptimizationInfo>::Chunk"* %30, i64 0, i32 2
  %99 = bitcast %"struct.v8::internal::ZoneChunkList<v8::internal::SafepointTableBuilder::DeoptimizationInfo>::Chunk"** %98 to i64*
  %100 = load i64, i64* %99, align 8
  br label %101

101:                                              ; preds = %90, %97
  %102 = phi i64 [ %33, %90 ], [ %100, %97 ]
  %103 = phi i64 [ %92, %90 ], [ 0, %97 ]
  %104 = inttoptr i64 %102 to %"struct.v8::internal::ZoneChunkList<v8::internal::SafepointTableBuilder::DeoptimizationInfo>::Chunk"*
  %105 = icmp ne %"struct.v8::internal::ZoneChunkList<v8::internal::SafepointTableBuilder::DeoptimizationInfo>::Chunk"* %25, %104
  %106 = icmp ne i64 %24, %103
  %107 = or i1 %105, %106
  br i1 %107, label %29, label %108

108:                                              ; preds = %101, %23
  %109 = phi i32 [ %3, %23 ], [ %91, %101 ]
  %110 = sub nsw i32 %3, %109
  store i32 %110, i32* %1, align 4
  %111 = load %"struct.v8::internal::ZoneChunkList<v8::internal::SafepointTableBuilder::DeoptimizationInfo>::Chunk"*, %"struct.v8::internal::ZoneChunkList<v8::internal::SafepointTableBuilder::DeoptimizationInfo>::Chunk"** %6, align 8
  %112 = ptrtoint %"struct.v8::internal::ZoneChunkList<v8::internal::SafepointTableBuilder::DeoptimizationInfo>::Chunk"* %111 to i64
  %113 = load %"struct.v8::internal::ZoneChunkList<v8::internal::SafepointTableBuilder::DeoptimizationInfo>::Chunk"*, %"struct.v8::internal::ZoneChunkList<v8::internal::SafepointTableBuilder::DeoptimizationInfo>::Chunk"** %9, align 8
  %114 = icmp eq %"struct.v8::internal::ZoneChunkList<v8::internal::SafepointTableBuilder::DeoptimizationInfo>::Chunk"* %113, null
  br i1 %114, label %126, label %115

115:                                              ; preds = %108
  %116 = getelementptr inbounds %"struct.v8::internal::ZoneChunkList<v8::internal::SafepointTableBuilder::DeoptimizationInfo>::Chunk", %"struct.v8::internal::ZoneChunkList<v8::internal::SafepointTableBuilder::DeoptimizationInfo>::Chunk"* %113, i64 0, i32 1
  %117 = load i32, i32* %116, align 4
  %118 = getelementptr inbounds %"struct.v8::internal::ZoneChunkList<v8::internal::SafepointTableBuilder::DeoptimizationInfo>::Chunk", %"struct.v8::internal::ZoneChunkList<v8::internal::SafepointTableBuilder::DeoptimizationInfo>::Chunk"* %113, i64 0, i32 0
  %119 = load i32, i32* %118, align 8
  %120 = icmp eq i32 %117, %119
  br i1 %120, label %121, label %124

121:                                              ; preds = %115
  %122 = getelementptr inbounds %"struct.v8::internal::ZoneChunkList<v8::internal::SafepointTableBuilder::DeoptimizationInfo>::Chunk", %"struct.v8::internal::ZoneChunkList<v8::internal::SafepointTableBuilder::DeoptimizationInfo>::Chunk"* %113, i64 0, i32 2
  %123 = load %"struct.v8::internal::ZoneChunkList<v8::internal::SafepointTableBuilder::DeoptimizationInfo>::Chunk"*, %"struct.v8::internal::ZoneChunkList<v8::internal::SafepointTableBuilder::DeoptimizationInfo>::Chunk"** %122, align 8
  br label %126

124:                                              ; preds = %115
  %125 = zext i32 %117 to i64
  br label %126

126:                                              ; preds = %108, %121, %124
  %127 = phi i64 [ 0, %121 ], [ %125, %124 ], [ 0, %108 ]
  %128 = phi %"struct.v8::internal::ZoneChunkList<v8::internal::SafepointTableBuilder::DeoptimizationInfo>::Chunk"* [ %123, %121 ], [ %113, %124 ], [ %111, %108 ]
  %129 = icmp ne %"struct.v8::internal::ZoneChunkList<v8::internal::SafepointTableBuilder::DeoptimizationInfo>::Chunk"* %128, %111
  %130 = icmp ne i64 %127, 0
  %131 = or i1 %130, %129
  br i1 %131, label %132, label %204

132:                                              ; preds = %126, %173
  %133 = phi %"struct.v8::internal::ZoneChunkList<v8::internal::SafepointTableBuilder::DeoptimizationInfo>::Chunk"* [ %176, %173 ], [ %111, %126 ]
  %134 = phi i64 [ %175, %173 ], [ %112, %126 ]
  %135 = phi i64 [ %174, %173 ], [ 0, %126 ]
  %136 = getelementptr inbounds %"struct.v8::internal::ZoneChunkList<v8::internal::SafepointTableBuilder::DeoptimizationInfo>::Chunk", %"struct.v8::internal::ZoneChunkList<v8::internal::SafepointTableBuilder::DeoptimizationInfo>::Chunk"* %133, i64 1
  %137 = bitcast %"struct.v8::internal::ZoneChunkList<v8::internal::SafepointTableBuilder::DeoptimizationInfo>::Chunk"* %136 to %"struct.v8::internal::SafepointTableBuilder::DeoptimizationInfo"*
  %138 = getelementptr inbounds %"struct.v8::internal::SafepointTableBuilder::DeoptimizationInfo", %"struct.v8::internal::SafepointTableBuilder::DeoptimizationInfo"* %137, i64 %135, i32 4
  %139 = load %"class.v8::internal::ZoneChunkList"*, %"class.v8::internal::ZoneChunkList"** %138, align 8
  %140 = getelementptr inbounds %"class.v8::internal::ZoneChunkList", %"class.v8::internal::ZoneChunkList"* %139, i64 0, i32 2
  %141 = load %"struct.v8::internal::ZoneChunkList<int>::Chunk"*, %"struct.v8::internal::ZoneChunkList<int>::Chunk"** %140, align 8
  %142 = ptrtoint %"struct.v8::internal::ZoneChunkList<int>::Chunk"* %141 to i64
  %143 = getelementptr inbounds %"class.v8::internal::ZoneChunkList", %"class.v8::internal::ZoneChunkList"* %139, i64 0, i32 3
  %144 = load %"struct.v8::internal::ZoneChunkList<int>::Chunk"*, %"struct.v8::internal::ZoneChunkList<int>::Chunk"** %143, align 8
  %145 = icmp eq %"struct.v8::internal::ZoneChunkList<int>::Chunk"* %144, null
  br i1 %145, label %157, label %146

146:                                              ; preds = %132
  %147 = getelementptr inbounds %"struct.v8::internal::ZoneChunkList<int>::Chunk", %"struct.v8::internal::ZoneChunkList<int>::Chunk"* %144, i64 0, i32 1
  %148 = load i32, i32* %147, align 4
  %149 = getelementptr inbounds %"struct.v8::internal::ZoneChunkList<int>::Chunk", %"struct.v8::internal::ZoneChunkList<int>::Chunk"* %144, i64 0, i32 0
  %150 = load i32, i32* %149, align 8
  %151 = icmp eq i32 %148, %150
  br i1 %151, label %152, label %155

152:                                              ; preds = %146
  %153 = getelementptr inbounds %"struct.v8::internal::ZoneChunkList<int>::Chunk", %"struct.v8::internal::ZoneChunkList<int>::Chunk"* %144, i64 0, i32 2
  %154 = load %"struct.v8::internal::ZoneChunkList<int>::Chunk"*, %"struct.v8::internal::ZoneChunkList<int>::Chunk"** %153, align 8
  br label %157

155:                                              ; preds = %146
  %156 = zext i32 %148 to i64
  br label %157

157:                                              ; preds = %132, %152, %155
  %158 = phi i64 [ 0, %152 ], [ %156, %155 ], [ 0, %132 ]
  %159 = phi %"struct.v8::internal::ZoneChunkList<int>::Chunk"* [ %154, %152 ], [ %144, %155 ], [ %141, %132 ]
  %160 = icmp ne %"struct.v8::internal::ZoneChunkList<int>::Chunk"* %159, %141
  %161 = icmp ne i64 %158, 0
  %162 = or i1 %161, %160
  br i1 %162, label %180, label %163

163:                                              ; preds = %197, %157
  %164 = add i64 %135, 1
  %165 = getelementptr inbounds %"struct.v8::internal::ZoneChunkList<v8::internal::SafepointTableBuilder::DeoptimizationInfo>::Chunk", %"struct.v8::internal::ZoneChunkList<v8::internal::SafepointTableBuilder::DeoptimizationInfo>::Chunk"* %133, i64 0, i32 0
  %166 = load i32, i32* %165, align 8
  %167 = zext i32 %166 to i64
  %168 = icmp ult i64 %164, %167
  br i1 %168, label %173, label %169

169:                                              ; preds = %163
  %170 = getelementptr inbounds %"struct.v8::internal::ZoneChunkList<v8::internal::SafepointTableBuilder::DeoptimizationInfo>::Chunk", %"struct.v8::internal::ZoneChunkList<v8::internal::SafepointTableBuilder::DeoptimizationInfo>::Chunk"* %133, i64 0, i32 2
  %171 = bitcast %"struct.v8::internal::ZoneChunkList<v8::internal::SafepointTableBuilder::DeoptimizationInfo>::Chunk"** %170 to i64*
  %172 = load i64, i64* %171, align 8
  br label %173

173:                                              ; preds = %163, %169
  %174 = phi i64 [ %164, %163 ], [ 0, %169 ]
  %175 = phi i64 [ %134, %163 ], [ %172, %169 ]
  %176 = inttoptr i64 %175 to %"struct.v8::internal::ZoneChunkList<v8::internal::SafepointTableBuilder::DeoptimizationInfo>::Chunk"*
  %177 = icmp ne %"struct.v8::internal::ZoneChunkList<v8::internal::SafepointTableBuilder::DeoptimizationInfo>::Chunk"* %128, %176
  %178 = icmp ne i64 %127, %174
  %179 = or i1 %178, %177
  br i1 %179, label %132, label %204

180:                                              ; preds = %157, %197
  %181 = phi %"struct.v8::internal::ZoneChunkList<int>::Chunk"* [ %200, %197 ], [ %141, %157 ]
  %182 = phi i64 [ %199, %197 ], [ %142, %157 ]
  %183 = phi i64 [ %198, %197 ], [ 0, %157 ]
  %184 = getelementptr inbounds %"struct.v8::internal::ZoneChunkList<int>::Chunk", %"struct.v8::internal::ZoneChunkList<int>::Chunk"* %181, i64 1, i32 0
  %185 = getelementptr inbounds i32, i32* %184, i64 %183
  %186 = load i32, i32* %185, align 4
  %187 = sub nsw i32 %186, %109
  store i32 %187, i32* %185, align 4
  %188 = add i64 %183, 1
  %189 = getelementptr inbounds %"struct.v8::internal::ZoneChunkList<int>::Chunk", %"struct.v8::internal::ZoneChunkList<int>::Chunk"* %181, i64 0, i32 0
  %190 = load i32, i32* %189, align 8
  %191 = zext i32 %190 to i64
  %192 = icmp ult i64 %188, %191
  br i1 %192, label %197, label %193

193:                                              ; preds = %180
  %194 = getelementptr inbounds %"struct.v8::internal::ZoneChunkList<int>::Chunk", %"struct.v8::internal::ZoneChunkList<int>::Chunk"* %181, i64 0, i32 2
  %195 = bitcast %"struct.v8::internal::ZoneChunkList<int>::Chunk"** %194 to i64*
  %196 = load i64, i64* %195, align 8
  br label %197

197:                                              ; preds = %180, %193
  %198 = phi i64 [ %188, %180 ], [ 0, %193 ]
  %199 = phi i64 [ %182, %180 ], [ %196, %193 ]
  %200 = inttoptr i64 %199 to %"struct.v8::internal::ZoneChunkList<int>::Chunk"*
  %201 = icmp ne %"struct.v8::internal::ZoneChunkList<int>::Chunk"* %159, %200
  %202 = icmp ne i64 %158, %198
  %203 = or i1 %202, %201
  br i1 %203, label %180, label %163

204:                                              ; preds = %70, %173, %126, %2
  ret void
}

declare void @_ZN2v88internal9Assembler5AlignEi(%"class.v8::internal::Assembler"*, i32) local_unnamed_addr #1

declare void @_ZN2v88internal9Assembler2ddEjNS0_9RelocInfo4ModeE(%"class.v8::internal::Assembler"*, i32, i8 signext) local_unnamed_addr #1

declare void @_ZN2v88internal9Assembler2dbEh(%"class.v8::internal::Assembler"*, i8 zeroext) local_unnamed_addr #1

; Function Attrs: norecurse nounwind readonly ssp uwtable
define hidden zeroext i1 @_ZNK2v88internal21SafepointTableBuilder22IsIdenticalExceptForPcERKNS1_18DeoptimizationInfoES4_(%"class.v8::internal::SafepointTableBuilder"* nocapture readnone, %"struct.v8::internal::SafepointTableBuilder::DeoptimizationInfo"* nocapture readonly dereferenceable(32), %"struct.v8::internal::SafepointTableBuilder::DeoptimizationInfo"* nocapture readonly dereferenceable(32)) local_unnamed_addr #5 align 2 {
  %4 = getelementptr inbounds %"struct.v8::internal::SafepointTableBuilder::DeoptimizationInfo", %"struct.v8::internal::SafepointTableBuilder::DeoptimizationInfo"* %1, i64 0, i32 1
  %5 = load i32, i32* %4, align 4
  %6 = getelementptr inbounds %"struct.v8::internal::SafepointTableBuilder::DeoptimizationInfo", %"struct.v8::internal::SafepointTableBuilder::DeoptimizationInfo"* %2, i64 0, i32 1
  %7 = load i32, i32* %6, align 4
  %8 = icmp eq i32 %5, %7
  br i1 %8, label %9, label %96

9:                                                ; preds = %3
  %10 = getelementptr inbounds %"struct.v8::internal::SafepointTableBuilder::DeoptimizationInfo", %"struct.v8::internal::SafepointTableBuilder::DeoptimizationInfo"* %1, i64 0, i32 4
  %11 = load %"class.v8::internal::ZoneChunkList"*, %"class.v8::internal::ZoneChunkList"** %10, align 8
  %12 = getelementptr inbounds %"struct.v8::internal::SafepointTableBuilder::DeoptimizationInfo", %"struct.v8::internal::SafepointTableBuilder::DeoptimizationInfo"* %2, i64 0, i32 4
  %13 = load %"class.v8::internal::ZoneChunkList"*, %"class.v8::internal::ZoneChunkList"** %12, align 8
  %14 = getelementptr inbounds %"class.v8::internal::ZoneChunkList", %"class.v8::internal::ZoneChunkList"* %11, i64 0, i32 1
  %15 = load i64, i64* %14, align 8
  %16 = getelementptr inbounds %"class.v8::internal::ZoneChunkList", %"class.v8::internal::ZoneChunkList"* %13, i64 0, i32 1
  %17 = load i64, i64* %16, align 8
  %18 = icmp eq i64 %15, %17
  br i1 %18, label %19, label %96

19:                                               ; preds = %9
  %20 = getelementptr inbounds %"class.v8::internal::ZoneChunkList", %"class.v8::internal::ZoneChunkList"* %11, i64 0, i32 2
  %21 = load %"struct.v8::internal::ZoneChunkList<int>::Chunk"*, %"struct.v8::internal::ZoneChunkList<int>::Chunk"** %20, align 8
  %22 = getelementptr inbounds %"class.v8::internal::ZoneChunkList", %"class.v8::internal::ZoneChunkList"* %11, i64 0, i32 3
  %23 = load %"struct.v8::internal::ZoneChunkList<int>::Chunk"*, %"struct.v8::internal::ZoneChunkList<int>::Chunk"** %22, align 8
  %24 = icmp eq %"struct.v8::internal::ZoneChunkList<int>::Chunk"* %23, null
  br i1 %24, label %36, label %25

25:                                               ; preds = %19
  %26 = getelementptr inbounds %"struct.v8::internal::ZoneChunkList<int>::Chunk", %"struct.v8::internal::ZoneChunkList<int>::Chunk"* %23, i64 0, i32 1
  %27 = load i32, i32* %26, align 4
  %28 = getelementptr inbounds %"struct.v8::internal::ZoneChunkList<int>::Chunk", %"struct.v8::internal::ZoneChunkList<int>::Chunk"* %23, i64 0, i32 0
  %29 = load i32, i32* %28, align 8
  %30 = icmp eq i32 %27, %29
  br i1 %30, label %31, label %34

31:                                               ; preds = %25
  %32 = getelementptr inbounds %"struct.v8::internal::ZoneChunkList<int>::Chunk", %"struct.v8::internal::ZoneChunkList<int>::Chunk"* %23, i64 0, i32 2
  %33 = load %"struct.v8::internal::ZoneChunkList<int>::Chunk"*, %"struct.v8::internal::ZoneChunkList<int>::Chunk"** %32, align 8
  br label %36

34:                                               ; preds = %25
  %35 = zext i32 %27 to i64
  br label %36

36:                                               ; preds = %19, %31, %34
  %37 = phi i64 [ 0, %31 ], [ %35, %34 ], [ 0, %19 ]
  %38 = phi %"struct.v8::internal::ZoneChunkList<int>::Chunk"* [ %33, %31 ], [ %23, %34 ], [ %21, %19 ]
  %39 = icmp ne %"struct.v8::internal::ZoneChunkList<int>::Chunk"* %21, %38
  %40 = icmp ne i64 %37, 0
  %41 = or i1 %40, %39
  br i1 %41, label %42, label %90

42:                                               ; preds = %36
  %43 = getelementptr inbounds %"class.v8::internal::ZoneChunkList", %"class.v8::internal::ZoneChunkList"* %13, i64 0, i32 2
  %44 = bitcast %"struct.v8::internal::ZoneChunkList<int>::Chunk"** %43 to i64*
  %45 = load i64, i64* %44, align 8
  %46 = ptrtoint %"struct.v8::internal::ZoneChunkList<int>::Chunk"* %21 to i64
  br label %47

47:                                               ; preds = %83, %42
  %48 = phi %"struct.v8::internal::ZoneChunkList<int>::Chunk"* [ %86, %83 ], [ %21, %42 ]
  %49 = phi i64 [ %85, %83 ], [ %45, %42 ]
  %50 = phi i64 [ %84, %83 ], [ 0, %42 ]
  %51 = phi i64 [ %73, %83 ], [ 0, %42 ]
  %52 = phi i64 [ %72, %83 ], [ %46, %42 ]
  %53 = getelementptr inbounds %"struct.v8::internal::ZoneChunkList<int>::Chunk", %"struct.v8::internal::ZoneChunkList<int>::Chunk"* %48, i64 1, i32 0
  %54 = getelementptr inbounds i32, i32* %53, i64 %51
  %55 = inttoptr i64 %49 to %"struct.v8::internal::ZoneChunkList<int>::Chunk"*
  %56 = getelementptr inbounds %"struct.v8::internal::ZoneChunkList<int>::Chunk", %"struct.v8::internal::ZoneChunkList<int>::Chunk"* %55, i64 1, i32 0
  %57 = getelementptr inbounds i32, i32* %56, i64 %50
  %58 = load i32, i32* %54, align 4
  %59 = load i32, i32* %57, align 4
  %60 = icmp eq i32 %58, %59
  br i1 %60, label %61, label %96

61:                                               ; preds = %47
  %62 = add i64 %51, 1
  %63 = getelementptr inbounds %"struct.v8::internal::ZoneChunkList<int>::Chunk", %"struct.v8::internal::ZoneChunkList<int>::Chunk"* %48, i64 0, i32 0
  %64 = load i32, i32* %63, align 8
  %65 = zext i32 %64 to i64
  %66 = icmp ult i64 %62, %65
  br i1 %66, label %71, label %67

67:                                               ; preds = %61
  %68 = getelementptr inbounds %"struct.v8::internal::ZoneChunkList<int>::Chunk", %"struct.v8::internal::ZoneChunkList<int>::Chunk"* %48, i64 0, i32 2
  %69 = bitcast %"struct.v8::internal::ZoneChunkList<int>::Chunk"** %68 to i64*
  %70 = load i64, i64* %69, align 8
  br label %71

71:                                               ; preds = %67, %61
  %72 = phi i64 [ %52, %61 ], [ %70, %67 ]
  %73 = phi i64 [ %62, %61 ], [ 0, %67 ]
  %74 = add i64 %50, 1
  %75 = getelementptr inbounds %"struct.v8::internal::ZoneChunkList<int>::Chunk", %"struct.v8::internal::ZoneChunkList<int>::Chunk"* %55, i64 0, i32 0
  %76 = load i32, i32* %75, align 8
  %77 = zext i32 %76 to i64
  %78 = icmp ult i64 %74, %77
  br i1 %78, label %83, label %79

79:                                               ; preds = %71
  %80 = getelementptr inbounds %"struct.v8::internal::ZoneChunkList<int>::Chunk", %"struct.v8::internal::ZoneChunkList<int>::Chunk"* %55, i64 0, i32 2
  %81 = bitcast %"struct.v8::internal::ZoneChunkList<int>::Chunk"** %80 to i64*
  %82 = load i64, i64* %81, align 8
  br label %83

83:                                               ; preds = %79, %71
  %84 = phi i64 [ %74, %71 ], [ 0, %79 ]
  %85 = phi i64 [ %49, %71 ], [ %82, %79 ]
  %86 = inttoptr i64 %72 to %"struct.v8::internal::ZoneChunkList<int>::Chunk"*
  %87 = icmp ne %"struct.v8::internal::ZoneChunkList<int>::Chunk"* %38, %86
  %88 = icmp ne i64 %73, %37
  %89 = or i1 %87, %88
  br i1 %89, label %47, label %90

90:                                               ; preds = %83, %36
  %91 = getelementptr inbounds %"struct.v8::internal::SafepointTableBuilder::DeoptimizationInfo", %"struct.v8::internal::SafepointTableBuilder::DeoptimizationInfo"* %1, i64 0, i32 5
  %92 = load i32, i32* %91, align 8
  %93 = getelementptr inbounds %"struct.v8::internal::SafepointTableBuilder::DeoptimizationInfo", %"struct.v8::internal::SafepointTableBuilder::DeoptimizationInfo"* %2, i64 0, i32 5
  %94 = load i32, i32* %93, align 8
  %95 = icmp eq i32 %92, %94
  br label %96

96:                                               ; preds = %47, %9, %90, %3
  %97 = phi i1 [ false, %3 ], [ false, %9 ], [ %95, %90 ], [ false, %47 ]
  ret i1 %97
}

declare i64 @_ZNK2v88internal4Code23OffHeapInstructionStartEPNS0_7IsolateEm(%"class.v8::internal::Code"*, %"class.v8::internal::Isolate"*, i64) local_unnamed_addr #1

declare i64 @_ZN2v88internal4Zone9NewExpandEm(%"class.v8::internal::Zone"*, i64) local_unnamed_addr #1

; Function Attrs: argmemonly nounwind
declare void @llvm.memset.p0i8.i64(i8* nocapture writeonly, i8, i64, i1 immarg) #3

; Function Attrs: nounwind ssp uwtable
define linkonce_odr hidden dereferenceable(160) %"class.std::__1::basic_ostream"* @_ZNSt3__124__put_character_sequenceIcNS_11char_traitsIcEEEERNS_13basic_ostreamIT_T0_EES7_PKS4_m(%"class.std::__1::basic_ostream"* dereferenceable(160), i8*, i64) local_unnamed_addr #0 comdat {
  %4 = alloca %"class.std::__1::locale", align 8
  %5 = alloca %"class.std::__1::basic_ostream<char, std::__1::char_traits<char> >::sentry", align 8
  %6 = getelementptr inbounds %"class.std::__1::basic_ostream<char, std::__1::char_traits<char> >::sentry", %"class.std::__1::basic_ostream<char, std::__1::char_traits<char> >::sentry"* %5, i64 0, i32 0
  call void @llvm.lifetime.start.p0i8(i64 16, i8* nonnull %6) #9
  call void @_ZNSt3__113basic_ostreamIcNS_11char_traitsIcEEE6sentryC1ERS3_(%"class.std::__1::basic_ostream<char, std::__1::char_traits<char> >::sentry"* nonnull %5, %"class.std::__1::basic_ostream"* dereferenceable(160) %0) #9
  %7 = load i8, i8* %6, align 8, !range !7
  %8 = icmp eq i8 %7, 0
  br i1 %8, label %58, label %9

9:                                                ; preds = %3
  %10 = bitcast %"class.std::__1::basic_ostream"* %0 to i8**
  %11 = load i8*, i8** %10, align 8
  %12 = getelementptr i8, i8* %11, i64 -24
  %13 = bitcast i8* %12 to i64*
  %14 = load i64, i64* %13, align 8
  %15 = bitcast %"class.std::__1::basic_ostream"* %0 to i8*
  %16 = getelementptr inbounds i8, i8* %15, i64 %14
  %17 = getelementptr inbounds i8, i8* %16, i64 40
  %18 = bitcast i8* %17 to %"class.std::__1::basic_streambuf"**
  %19 = load %"class.std::__1::basic_streambuf"*, %"class.std::__1::basic_streambuf"** %18, align 8
  %20 = bitcast i8* %16 to %"class.std::__1::ios_base"*
  %21 = getelementptr inbounds i8, i8* %16, i64 8
  %22 = bitcast i8* %21 to i32*
  %23 = load i32, i32* %22, align 8
  %24 = and i32 %23, 176
  %25 = icmp eq i32 %24, 32
  %26 = getelementptr inbounds i8, i8* %1, i64 %2
  %27 = select i1 %25, i8* %26, i8* %1
  %28 = getelementptr inbounds i8, i8* %16, i64 144
  %29 = bitcast i8* %28 to i32*
  %30 = load i32, i32* %29, align 8
  %31 = icmp eq i32 %30, -1
  br i1 %31, label %32, label %42

32:                                               ; preds = %9
  %33 = bitcast %"class.std::__1::locale"* %4 to i8*
  call void @llvm.lifetime.start.p0i8(i64 8, i8* nonnull %33) #9
  call void @_ZNKSt3__18ios_base6getlocEv(%"class.std::__1::locale"* nonnull sret %4, %"class.std::__1::ios_base"* %20) #9
  %34 = call %"class.std::__1::locale::facet"* @_ZNKSt3__16locale9use_facetERNS0_2idE(%"class.std::__1::locale"* nonnull %4, %"class.std::__1::locale::id"* nonnull dereferenceable(16) @_ZNSt3__15ctypeIcE2idE) #9
  %35 = bitcast %"class.std::__1::locale::facet"* %34 to %"class.std::__1::ctype"*
  %36 = bitcast %"class.std::__1::locale::facet"* %34 to i8 (%"class.std::__1::ctype"*, i8)***
  %37 = load i8 (%"class.std::__1::ctype"*, i8)**, i8 (%"class.std::__1::ctype"*, i8)*** %36, align 8
  %38 = getelementptr inbounds i8 (%"class.std::__1::ctype"*, i8)*, i8 (%"class.std::__1::ctype"*, i8)** %37, i64 7
  %39 = load i8 (%"class.std::__1::ctype"*, i8)*, i8 (%"class.std::__1::ctype"*, i8)** %38, align 8
  %40 = call signext i8 %39(%"class.std::__1::ctype"* %35, i8 signext 32) #9
  call void @_ZNSt3__16localeD1Ev(%"class.std::__1::locale"* nonnull %4) #9
  call void @llvm.lifetime.end.p0i8(i64 8, i8* nonnull %33) #9
  %41 = sext i8 %40 to i32
  store i32 %41, i32* %29, align 8
  br label %42

42:                                               ; preds = %9, %32
  %43 = phi i32 [ %41, %32 ], [ %30, %9 ]
  %44 = trunc i32 %43 to i8
  %45 = call %"class.std::__1::basic_streambuf"* @_ZNSt3__116__pad_and_outputIcNS_11char_traitsIcEEEENS_19ostreambuf_iteratorIT_T0_EES6_PKS4_S8_S8_RNS_8ios_baseES4_(%"class.std::__1::basic_streambuf"* %19, i8* %1, i8* %27, i8* %26, %"class.std::__1::ios_base"* dereferenceable(136) %20, i8 signext %44)
  %46 = icmp eq %"class.std::__1::basic_streambuf"* %45, null
  br i1 %46, label %47, label %58

47:                                               ; preds = %42
  %48 = load i8*, i8** %10, align 8
  %49 = getelementptr i8, i8* %48, i64 -24
  %50 = bitcast i8* %49 to i64*
  %51 = load i64, i64* %50, align 8
  %52 = getelementptr inbounds i8, i8* %15, i64 %51
  %53 = bitcast i8* %52 to %"class.std::__1::ios_base"*
  %54 = getelementptr inbounds i8, i8* %52, i64 32
  %55 = bitcast i8* %54 to i32*
  %56 = load i32, i32* %55, align 8
  %57 = or i32 %56, 5
  call void @_ZNSt3__18ios_base5clearEj(%"class.std::__1::ios_base"* %53, i32 %57) #9
  br label %58

58:                                               ; preds = %3, %42, %47
  call void @_ZNSt3__113basic_ostreamIcNS_11char_traitsIcEEE6sentryD1Ev(%"class.std::__1::basic_ostream<char, std::__1::char_traits<char> >::sentry"* nonnull %5) #9
  call void @llvm.lifetime.end.p0i8(i64 16, i8* nonnull %6) #9
  ret %"class.std::__1::basic_ostream"* %0
}

declare void @_ZNSt3__113basic_ostreamIcNS_11char_traitsIcEEE6sentryC1ERS3_(%"class.std::__1::basic_ostream<char, std::__1::char_traits<char> >::sentry"*, %"class.std::__1::basic_ostream"* dereferenceable(160)) unnamed_addr #1

; Function Attrs: nounwind ssp uwtable
define linkonce_odr hidden %"class.std::__1::basic_streambuf"* @_ZNSt3__116__pad_and_outputIcNS_11char_traitsIcEEEENS_19ostreambuf_iteratorIT_T0_EES6_PKS4_S8_S8_RNS_8ios_baseES4_(%"class.std::__1::basic_streambuf"*, i8*, i8*, i8*, %"class.std::__1::ios_base"* dereferenceable(136), i8 signext) local_unnamed_addr #0 comdat {
  %7 = alloca %"class.std::__1::basic_string", align 8
  %8 = icmp eq %"class.std::__1::basic_streambuf"* %0, null
  br i1 %8, label %78, label %9

9:                                                ; preds = %6
  %10 = ptrtoint i8* %3 to i64
  %11 = ptrtoint i8* %1 to i64
  %12 = sub i64 %10, %11
  %13 = getelementptr inbounds %"class.std::__1::ios_base", %"class.std::__1::ios_base"* %4, i64 0, i32 3
  %14 = load i64, i64* %13, align 8
  %15 = icmp sgt i64 %14, %12
  %16 = sub nsw i64 %14, %12
  %17 = select i1 %15, i64 %16, i64 0
  %18 = ptrtoint i8* %2 to i64
  %19 = sub i64 %18, %11
  %20 = icmp sgt i64 %19, 0
  br i1 %20, label %21, label %28

21:                                               ; preds = %9
  %22 = bitcast %"class.std::__1::basic_streambuf"* %0 to i64 (%"class.std::__1::basic_streambuf"*, i8*, i64)***
  %23 = load i64 (%"class.std::__1::basic_streambuf"*, i8*, i64)**, i64 (%"class.std::__1::basic_streambuf"*, i8*, i64)*** %22, align 8
  %24 = getelementptr inbounds i64 (%"class.std::__1::basic_streambuf"*, i8*, i64)*, i64 (%"class.std::__1::basic_streambuf"*, i8*, i64)** %23, i64 12
  %25 = load i64 (%"class.std::__1::basic_streambuf"*, i8*, i64)*, i64 (%"class.std::__1::basic_streambuf"*, i8*, i64)** %24, align 8
  %26 = tail call i64 %25(%"class.std::__1::basic_streambuf"* nonnull %0, i8* %1, i64 %19) #9
  %27 = icmp eq i64 %26, %19
  br i1 %27, label %28, label %78

28:                                               ; preds = %21, %9
  %29 = icmp sgt i64 %17, 0
  br i1 %29, label %30, label %67

30:                                               ; preds = %28
  %31 = bitcast %"class.std::__1::basic_string"* %7 to i8*
  call void @llvm.lifetime.start.p0i8(i64 24, i8* nonnull %31) #9
  %32 = icmp ult i64 %17, 23
  br i1 %32, label %42, label %33

33:                                               ; preds = %30
  %34 = add nuw i64 %17, 16
  %35 = and i64 %34, -16
  %36 = tail call i8* @_Znwm(i64 %35) #11
  %37 = getelementptr inbounds %"class.std::__1::basic_string", %"class.std::__1::basic_string"* %7, i64 0, i32 0, i32 0, i32 0, i32 0, i32 0, i32 0
  store i8* %36, i8** %37, align 8
  %38 = or i64 %35, -9223372036854775808
  %39 = getelementptr inbounds %"class.std::__1::basic_string", %"class.std::__1::basic_string"* %7, i64 0, i32 0, i32 0, i32 0, i32 0, i32 0, i32 2
  store i64 %38, i64* %39, align 8
  %40 = getelementptr inbounds %"class.std::__1::basic_string", %"class.std::__1::basic_string"* %7, i64 0, i32 0, i32 0, i32 0, i32 0, i32 0, i32 1
  store i64 %17, i64* %40, align 8
  %41 = bitcast %"class.std::__1::basic_string"* %7 to %"struct.std::__1::basic_string<char, std::__1::char_traits<char>, std::__1::allocator<char> >::__short"*
  br label %46

42:                                               ; preds = %30
  %43 = trunc i64 %17 to i8
  %44 = bitcast %"class.std::__1::basic_string"* %7 to %"struct.std::__1::basic_string<char, std::__1::char_traits<char>, std::__1::allocator<char> >::__short"*
  %45 = getelementptr inbounds %"struct.std::__1::basic_string<char, std::__1::char_traits<char>, std::__1::allocator<char> >::__short", %"struct.std::__1::basic_string<char, std::__1::char_traits<char>, std::__1::allocator<char> >::__short"* %44, i64 0, i32 1, i32 0
  store i8 %43, i8* %45, align 1
  br label %46

46:                                               ; preds = %33, %42
  %47 = phi %"struct.std::__1::basic_string<char, std::__1::char_traits<char>, std::__1::allocator<char> >::__short"* [ %41, %33 ], [ %44, %42 ]
  %48 = phi i8* [ %36, %33 ], [ %31, %42 ]
  call void @llvm.memset.p0i8.i64(i8* nonnull align 1 %48, i8 %5, i64 %17, i1 false) #9
  %49 = getelementptr inbounds i8, i8* %48, i64 %17
  store i8 0, i8* %49, align 1
  %50 = getelementptr inbounds %"struct.std::__1::basic_string<char, std::__1::char_traits<char>, std::__1::allocator<char> >::__short", %"struct.std::__1::basic_string<char, std::__1::char_traits<char>, std::__1::allocator<char> >::__short"* %47, i64 0, i32 1, i32 0
  %51 = load i8, i8* %50, align 1
  %52 = icmp slt i8 %51, 0
  %53 = getelementptr inbounds %"class.std::__1::basic_string", %"class.std::__1::basic_string"* %7, i64 0, i32 0, i32 0, i32 0, i32 0, i32 0, i32 0
  %54 = load i8*, i8** %53, align 8
  %55 = select i1 %52, i8* %54, i8* %31
  %56 = bitcast %"class.std::__1::basic_streambuf"* %0 to i64 (%"class.std::__1::basic_streambuf"*, i8*, i64)***
  %57 = load i64 (%"class.std::__1::basic_streambuf"*, i8*, i64)**, i64 (%"class.std::__1::basic_streambuf"*, i8*, i64)*** %56, align 8
  %58 = getelementptr inbounds i64 (%"class.std::__1::basic_streambuf"*, i8*, i64)*, i64 (%"class.std::__1::basic_streambuf"*, i8*, i64)** %57, i64 12
  %59 = load i64 (%"class.std::__1::basic_streambuf"*, i8*, i64)*, i64 (%"class.std::__1::basic_streambuf"*, i8*, i64)** %58, align 8
  %60 = call i64 %59(%"class.std::__1::basic_streambuf"* nonnull %0, i8* %55, i64 %17) #9
  %61 = icmp eq i64 %60, %17
  %62 = load i8, i8* %50, align 1
  %63 = icmp slt i8 %62, 0
  br i1 %63, label %64, label %66

64:                                               ; preds = %46
  %65 = load i8*, i8** %53, align 8
  call void @_ZdlPv(i8* %65) #11
  br label %66

66:                                               ; preds = %46, %64
  call void @llvm.lifetime.end.p0i8(i64 24, i8* nonnull %31) #9
  br i1 %61, label %67, label %78

67:                                               ; preds = %66, %28
  %68 = sub i64 %10, %18
  %69 = icmp sgt i64 %68, 0
  br i1 %69, label %70, label %77

70:                                               ; preds = %67
  %71 = bitcast %"class.std::__1::basic_streambuf"* %0 to i64 (%"class.std::__1::basic_streambuf"*, i8*, i64)***
  %72 = load i64 (%"class.std::__1::basic_streambuf"*, i8*, i64)**, i64 (%"class.std::__1::basic_streambuf"*, i8*, i64)*** %71, align 8
  %73 = getelementptr inbounds i64 (%"class.std::__1::basic_streambuf"*, i8*, i64)*, i64 (%"class.std::__1::basic_streambuf"*, i8*, i64)** %72, i64 12
  %74 = load i64 (%"class.std::__1::basic_streambuf"*, i8*, i64)*, i64 (%"class.std::__1::basic_streambuf"*, i8*, i64)** %73, align 8
  %75 = call i64 %74(%"class.std::__1::basic_streambuf"* nonnull %0, i8* %2, i64 %68) #9
  %76 = icmp eq i64 %75, %68
  br i1 %76, label %77, label %78

77:                                               ; preds = %70, %67
  store i64 0, i64* %13, align 8
  br label %78

78:                                               ; preds = %77, %66, %21, %70, %6
  %79 = phi %"class.std::__1::basic_streambuf"* [ null, %6 ], [ %0, %77 ], [ null, %66 ], [ null, %21 ], [ null, %70 ]
  ret %"class.std::__1::basic_streambuf"* %79
}

; Function Attrs: nounwind
declare void @_ZNSt3__113basic_ostreamIcNS_11char_traitsIcEEE6sentryD1Ev(%"class.std::__1::basic_ostream<char, std::__1::char_traits<char> >::sentry"*) unnamed_addr #6

; Function Attrs: argmemonly nounwind
declare void @llvm.memcpy.p0i8.p0i8.i64(i8* nocapture writeonly, i8* nocapture readonly, i64, i1 immarg) #3

; Function Attrs: nobuiltin nofree
declare noalias nonnull i8* @_Znwm(i64) local_unnamed_addr #7

; Function Attrs: nobuiltin nounwind
declare void @_ZdlPv(i8*) local_unnamed_addr #8

declare void @_ZNKSt3__18ios_base6getlocEv(%"class.std::__1::locale"* sret, %"class.std::__1::ios_base"*) local_unnamed_addr #1

; Function Attrs: nounwind
declare void @_ZNSt3__16localeD1Ev(%"class.std::__1::locale"*) unnamed_addr #6

declare %"class.std::__1::locale::facet"* @_ZNKSt3__16locale9use_facetERNS0_2idE(%"class.std::__1::locale"*, %"class.std::__1::locale::id"* dereferenceable(16)) local_unnamed_addr #1

declare void @_ZNSt3__18ios_base5clearEj(%"class.std::__1::ios_base"*, i32) local_unnamed_addr #1

; Function Attrs: noreturn
declare void @_ZNKSt3__120__vector_base_commonILb1EE20__throw_length_errorEv(%"class.std::__1::__vector_base_common"*) local_unnamed_addr #4

attributes #0 = { nounwind ssp uwtable "correctly-rounded-divide-sqrt-fp-math"="false" "disable-tail-calls"="false" "less-precise-fpmad"="false" "min-legal-vector-width"="0" "no-frame-pointer-elim"="false" "no-frame-pointer-elim-non-leaf" "no-infs-fp-math"="false" "no-jump-tables"="false" "no-nans-fp-math"="false" "no-signed-zeros-fp-math"="false" "no-trapping-math"="false" "null-pointer-is-valid"="true" "stack-protector-buffer-size"="4" "target-cpu"="x86-64" "target-features"="+cx8,+fxsr,+mmx,+sse,+sse2,+sse3,+x87" "unsafe-fp-math"="false" "use-soft-float"="false" }
attributes #1 = { "correctly-rounded-divide-sqrt-fp-math"="false" "disable-tail-calls"="false" "less-precise-fpmad"="false" "no-frame-pointer-elim"="false" "no-frame-pointer-elim-non-leaf" "no-infs-fp-math"="false" "no-nans-fp-math"="false" "no-signed-zeros-fp-math"="false" "no-trapping-math"="false" "null-pointer-is-valid"="true" "stack-protector-buffer-size"="4" "target-cpu"="x86-64" "target-features"="+cx8,+fxsr,+mmx,+sse,+sse2,+sse3,+x87" "unsafe-fp-math"="false" "use-soft-float"="false" }
attributes #2 = { nofree norecurse nounwind ssp uwtable "correctly-rounded-divide-sqrt-fp-math"="false" "disable-tail-calls"="false" "less-precise-fpmad"="false" "min-legal-vector-width"="0" "no-frame-pointer-elim"="false" "no-frame-pointer-elim-non-leaf" "no-infs-fp-math"="false" "no-jump-tables"="false" "no-nans-fp-math"="false" "no-signed-zeros-fp-math"="false" "no-trapping-math"="false" "null-pointer-is-valid"="true" "stack-protector-buffer-size"="4" "target-cpu"="x86-64" "target-features"="+cx8,+fxsr,+mmx,+sse,+sse2,+sse3,+x87" "unsafe-fp-math"="false" "use-soft-float"="false" }
attributes #3 = { argmemonly nounwind }
attributes #4 = { noreturn "correctly-rounded-divide-sqrt-fp-math"="false" "disable-tail-calls"="false" "less-precise-fpmad"="false" "no-frame-pointer-elim"="false" "no-frame-pointer-elim-non-leaf" "no-infs-fp-math"="false" "no-nans-fp-math"="false" "no-signed-zeros-fp-math"="false" "no-trapping-math"="false" "null-pointer-is-valid"="true" "stack-protector-buffer-size"="4" "target-cpu"="x86-64" "target-features"="+cx8,+fxsr,+mmx,+sse,+sse2,+sse3,+x87" "unsafe-fp-math"="false" "use-soft-float"="false" }
attributes #5 = { norecurse nounwind readonly ssp uwtable "correctly-rounded-divide-sqrt-fp-math"="false" "disable-tail-calls"="false" "less-precise-fpmad"="false" "min-legal-vector-width"="0" "no-frame-pointer-elim"="false" "no-frame-pointer-elim-non-leaf" "no-infs-fp-math"="false" "no-jump-tables"="false" "no-nans-fp-math"="false" "no-signed-zeros-fp-math"="false" "no-trapping-math"="false" "null-pointer-is-valid"="true" "stack-protector-buffer-size"="4" "target-cpu"="x86-64" "target-features"="+cx8,+fxsr,+mmx,+sse,+sse2,+sse3,+x87" "unsafe-fp-math"="false" "use-soft-float"="false" }
attributes #6 = { nounwind "correctly-rounded-divide-sqrt-fp-math"="false" "disable-tail-calls"="false" "less-precise-fpmad"="false" "no-frame-pointer-elim"="false" "no-frame-pointer-elim-non-leaf" "no-infs-fp-math"="false" "no-nans-fp-math"="false" "no-signed-zeros-fp-math"="false" "no-trapping-math"="false" "null-pointer-is-valid"="true" "stack-protector-buffer-size"="4" "target-cpu"="x86-64" "target-features"="+cx8,+fxsr,+mmx,+sse,+sse2,+sse3,+x87" "unsafe-fp-math"="false" "use-soft-float"="false" }
attributes #7 = { nobuiltin nofree "correctly-rounded-divide-sqrt-fp-math"="false" "disable-tail-calls"="false" "less-precise-fpmad"="false" "no-frame-pointer-elim"="false" "no-frame-pointer-elim-non-leaf" "no-infs-fp-math"="false" "no-nans-fp-math"="false" "no-signed-zeros-fp-math"="false" "no-trapping-math"="false" "null-pointer-is-valid"="true" "stack-protector-buffer-size"="4" "target-cpu"="x86-64" "target-features"="+cx8,+fxsr,+mmx,+sse,+sse2,+sse3,+x87" "unsafe-fp-math"="false" "use-soft-float"="false" }
attributes #8 = { nobuiltin nounwind "correctly-rounded-divide-sqrt-fp-math"="false" "disable-tail-calls"="false" "less-precise-fpmad"="false" "no-frame-pointer-elim"="false" "no-frame-pointer-elim-non-leaf" "no-infs-fp-math"="false" "no-nans-fp-math"="false" "no-signed-zeros-fp-math"="false" "no-trapping-math"="false" "null-pointer-is-valid"="true" "stack-protector-buffer-size"="4" "target-cpu"="x86-64" "target-features"="+cx8,+fxsr,+mmx,+sse,+sse2,+sse3,+x87" "unsafe-fp-math"="false" "use-soft-float"="false" }
attributes #9 = { nounwind }
attributes #10 = { noreturn nounwind }
attributes #11 = { builtin nounwind }

!llvm.module.flags = !{!0, !1}

!0 = !{i32 1, !"wchar_size", i32 4}
!1 = !{i32 7, !"PIC Level", i32 2}
!2 = !{!"branch_weights", i32 2000, i32 1}
!3 = !{!"branch_weights", i32 2000, i32 2, i32 2000}
!4 = !{!5}
!5 = distinct !{!5, !6, !"_ZNK2v88internal14SafepointTable8GetEntryEj: argument 0"}
!6 = distinct !{!6, !"_ZNK2v88internal14SafepointTable8GetEntryEj"}
!7 = !{i8 0, i8 2}
!8 = !{!9}
!9 = distinct !{!9, !10, !"_ZNK2v88internal14SafepointTable8GetEntryEj: argument 0"}
!10 = distinct !{!10, !"_ZNK2v88internal14SafepointTable8GetEntryEj"}
!11 = !{!5, !9}
!12 = !{!13}
!13 = distinct !{!13, !14, !"_ZNK2v88internal14SafepointTable8GetEntryEj: argument 0"}
!14 = distinct !{!14, !"_ZNK2v88internal14SafepointTable8GetEntryEj"}
!15 = !{!"branch_weights", i32 1, i32 2000}
