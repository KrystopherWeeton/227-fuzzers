; ModuleID = '../../third_party/libpng/pngset.c'
source_filename = "../../third_party/libpng/pngset.c"
target datalayout = "e-m:e-i64:64-f80:128-n8:16:32:64-S128"
target triple = "x86_64-unknown-linux-gnu"

module asm ".symver exp, exp@GLIBC_2.2.5"
module asm ".symver exp2, exp2@GLIBC_2.2.5"
module asm ".symver exp2f, exp2f@GLIBC_2.2.5"
module asm ".symver expf, expf@GLIBC_2.2.5"
module asm ".symver lgamma, lgamma@GLIBC_2.2.5"
module asm ".symver lgammaf, lgammaf@GLIBC_2.2.5"
module asm ".symver lgammal, lgammal@GLIBC_2.2.5"
module asm ".symver log, log@GLIBC_2.2.5"
module asm ".symver log2, log2@GLIBC_2.2.5"
module asm ".symver log2f, log2f@GLIBC_2.2.5"
module asm ".symver logf, logf@GLIBC_2.2.5"
module asm ".symver pow, pow@GLIBC_2.2.5"
module asm ".symver powf, powf@GLIBC_2.2.5"

%struct.png_struct_def = type { [1 x %struct.__jmp_buf_tag], void (%struct.__jmp_buf_tag*, i32)*, [1 x %struct.__jmp_buf_tag]*, i64, void (%struct.png_struct_def*, i8*)*, void (%struct.png_struct_def*, i8*)*, i8*, void (%struct.png_struct_def*, i8*, i64)*, void (%struct.png_struct_def*, i8*, i64)*, i8*, void (%struct.png_struct_def*, %struct.png_row_info_struct*, i8*)*, void (%struct.png_struct_def*, %struct.png_row_info_struct*, i8*)*, i8*, i8, i8, i32, i32, i32, i32, %struct.z_stream_s, %struct.png_compression_buffer*, i32, i32, i32, i32, i32, i32, i32, i32, i32, i32, i32, i32, i32, i32, i32, i32, i32, i32, i32, i32, i64, i32, i32, i32, i8*, i8*, i8*, i8*, i64, i32, i32, %struct.png_color_struct*, i16, i16, i8, i8, i8, i8, i8, i8, i8, i8, i8, i8, i8, i8, i8, i8, i8, i16, i8, i32, %struct.png_color_16_struct, %struct.png_color_16_struct, void (%struct.png_struct_def*)*, i32, i32, i32, i32, i8*, i16**, i8*, i8*, i16**, i16**, %struct.png_color_8_struct, %struct.png_color_8_struct, i8*, %struct.png_color_16_struct, void (%struct.png_struct_def*, i32, i32)*, void (%struct.png_struct_def*, i32, i32)*, void (%struct.png_struct_def*, %struct.png_info_def*)*, void (%struct.png_struct_def*, i8*, i32, i32)*, void (%struct.png_struct_def*, %struct.png_info_def*)*, i8*, i8*, i8*, i8*, i32, i32, i64, i64, i64, i64, i32, i32, i32, i32, i8*, i32 (%struct.png_struct_def*, %struct.png_unknown_chunk_t*)*, i32, i32, i8*, i8, i8, i16, i16, i8*, i8* (%struct.png_struct_def*, i64)*, void (%struct.png_struct_def*, i8*)*, i8*, i8, i32, i32, i32, i64, %struct.png_unknown_chunk_t, i64, i8*, i64, i32, i8*, [4 x void (%struct.png_row_info_struct*, i8*, i8*)*], %struct.png_colorspace }
%struct.__jmp_buf_tag = type { [8 x i64], i32, %struct.__sigset_t }
%struct.__sigset_t = type { [16 x i64] }
%struct.png_row_info_struct = type { i32, i64, i8, i8, i8, i8 }
%struct.z_stream_s = type { i8*, i32, i64, i8*, i32, i64, i8*, %struct.internal_state*, i8* (i8*, i32, i32)*, void (i8*, i8*)*, i8*, i32, i64, i64 }
%struct.internal_state = type opaque
%struct.png_compression_buffer = type { %struct.png_compression_buffer*, [1 x i8] }
%struct.png_color_struct = type { i8, i8, i8 }
%struct.png_color_8_struct = type { i8, i8, i8, i8, i8 }
%struct.png_color_16_struct = type { i8, i16, i16, i16, i16 }
%struct.png_unknown_chunk_t = type { [5 x i8], i8*, i64, i8 }
%struct.png_colorspace = type { i32, %struct.png_xy, %struct.png_XYZ, i16, i16 }
%struct.png_xy = type { i32, i32, i32, i32, i32, i32, i32, i32 }
%struct.png_XYZ = type { i32, i32, i32, i32, i32, i32, i32, i32, i32 }
%struct.png_info_def = type { i32, i32, i32, i64, %struct.png_color_struct*, i16, i16, i8, i8, i8, i8, i8, i8, i8, i8, [8 x i8], %struct.png_colorspace, i8*, i8*, i32, i32, i32, %struct.png_text_struct*, %struct.png_color_8_struct, i8*, %struct.png_color_16_struct, %struct.png_color_16_struct, i32, %struct.png_unknown_chunk_t*, i32, i8** }
%struct.png_text_struct = type { i32, i8*, i8*, i64, i64, i8*, i8* }

@.str = private unnamed_addr constant [13 x i8] c"cHRM White X\00", align 1
@.str.1 = private unnamed_addr constant [13 x i8] c"cHRM White Y\00", align 1
@.str.2 = private unnamed_addr constant [11 x i8] c"cHRM Red X\00", align 1
@.str.3 = private unnamed_addr constant [11 x i8] c"cHRM Red Y\00", align 1
@.str.4 = private unnamed_addr constant [13 x i8] c"cHRM Green X\00", align 1
@.str.5 = private unnamed_addr constant [13 x i8] c"cHRM Green Y\00", align 1
@.str.6 = private unnamed_addr constant [12 x i8] c"cHRM Blue X\00", align 1
@.str.7 = private unnamed_addr constant [12 x i8] c"cHRM Blue Y\00", align 1
@.str.8 = private unnamed_addr constant [11 x i8] c"cHRM Red Z\00", align 1
@.str.9 = private unnamed_addr constant [13 x i8] c"cHRM Green Z\00", align 1
@.str.10 = private unnamed_addr constant [12 x i8] c"cHRM Blue Z\00", align 1
@.str.11 = private unnamed_addr constant [13 x i8] c"png_set_gAMA\00", align 1
@.str.12 = private unnamed_addr constant [23 x i8] c"Invalid palette length\00", align 1
@.str.13 = private unnamed_addr constant [16 x i8] c"Invalid palette\00", align 1
@.str.14 = private unnamed_addr constant [32 x i8] c"Invalid iCCP compression method\00", align 1
@.str.15 = private unnamed_addr constant [42 x i8] c"Insufficient memory to process iCCP chunk\00", align 1
@.str.16 = private unnamed_addr constant [44 x i8] c"Insufficient memory to process iCCP profile\00", align 1
@.str.17 = private unnamed_addr constant [34 x i8] c"Insufficient memory to store text\00", align 1
@.str.18 = private unnamed_addr constant [21 x i8] c"too many text chunks\00", align 1
@.str.19 = private unnamed_addr constant [38 x i8] c"text compression mode is out of range\00", align 1
@.str.20 = private unnamed_addr constant [25 x i8] c"iTXt chunk not supported\00", align 1
@.str.21 = private unnamed_addr constant [26 x i8] c"text chunk: out of memory\00", align 1
@.str.22 = private unnamed_addr constant [50 x i8] c"tRNS chunk has out-of-range samples for bit_depth\00", align 1
@.str.23 = private unnamed_addr constant [24 x i8] c"too many unknown chunks\00", align 1
@.str.24 = private unnamed_addr constant [29 x i8] c"unknown chunk: out of memory\00", align 1
@.str.25 = private unnamed_addr constant [31 x i8] c"invalid unknown chunk location\00", align 1
@.str.26 = private unnamed_addr constant [42 x i8] c"png_set_keep_unknown_chunks: invalid keep\00", align 1
@cr_png_set_keep_unknown_chunks.chunks_to_ignore = internal constant [90 x i8] c"bKGD\00cHRM\00eXIf\00gAMA\00hIST\00iCCP\00iTXt\00oFFs\00pCAL\00pHYs\00sBIT\00sCAL\00sPLT\00sTER\00sRGB\00tEXt\00tIME\00zTXt\00", align 16
@.str.27 = private unnamed_addr constant [43 x i8] c"png_set_keep_unknown_chunks: no chunk list\00", align 1
@.str.28 = private unnamed_addr constant [45 x i8] c"png_set_keep_unknown_chunks: too many chunks\00", align 1
@.str.29 = private unnamed_addr constant [32 x i8] c"invalid compression buffer size\00", align 1
@.str.30 = private unnamed_addr constant [63 x i8] c"Compression buffer size cannot be changed because it is in use\00", align 1
@.str.32 = private unnamed_addr constant [50 x i8] c"Compression buffer size cannot be reduced below 6\00", align 1
@.str.33 = private unnamed_addr constant [18 x i8] c"keyword truncated\00", align 1
@.str.34 = private unnamed_addr constant [35 x i8] c"keyword \22@1\22: bad character '0x@2'\00", align 1
@.str.35 = private unnamed_addr constant [52 x i8] c"png_set_unknown_chunks now expects a valid location\00", align 1
@.str.36 = private unnamed_addr constant [43 x i8] c"invalid location in png_set_unknown_chunks\00", align 1

; Function Attrs: nounwind ssp uwtable
define hidden void @cr_png_set_cHRM_fixed(%struct.png_struct_def* noalias, %struct.png_info_def* noalias, i32, i32, i32, i32, i32, i32, i32, i32) local_unnamed_addr #0 {
  %11 = alloca %struct.png_xy, align 4
  %12 = bitcast %struct.png_xy* %11 to i8*
  call void @llvm.lifetime.start.p0i8(i64 32, i8* nonnull %12) #8
  %13 = icmp eq %struct.png_struct_def* %0, null
  %14 = icmp eq %struct.png_info_def* %1, null
  %15 = or i1 %13, %14
  %16 = bitcast %struct.png_xy* %11 to i8*
  call void @llvm.memset.p0i8.i64(i8* nonnull align 4 %16, i8 -86, i64 32, i1 false)
  br i1 %15, label %34, label %17

17:                                               ; preds = %10
  %18 = getelementptr inbounds %struct.png_xy, %struct.png_xy* %11, i64 0, i32 0
  %19 = getelementptr inbounds %struct.png_xy, %struct.png_xy* %11, i64 0, i32 7
  %20 = getelementptr inbounds %struct.png_xy, %struct.png_xy* %11, i64 0, i32 6
  %21 = getelementptr inbounds %struct.png_xy, %struct.png_xy* %11, i64 0, i32 5
  %22 = getelementptr inbounds %struct.png_xy, %struct.png_xy* %11, i64 0, i32 4
  %23 = getelementptr inbounds %struct.png_xy, %struct.png_xy* %11, i64 0, i32 3
  %24 = getelementptr inbounds %struct.png_xy, %struct.png_xy* %11, i64 0, i32 2
  %25 = getelementptr inbounds %struct.png_xy, %struct.png_xy* %11, i64 0, i32 1
  store i32 %4, i32* %18, align 4
  store i32 %5, i32* %25, align 4
  store i32 %6, i32* %24, align 4
  store i32 %7, i32* %23, align 4
  store i32 %8, i32* %22, align 4
  store i32 %9, i32* %21, align 4
  store i32 %2, i32* %20, align 4
  store i32 %3, i32* %19, align 4
  %26 = getelementptr inbounds %struct.png_info_def, %struct.png_info_def* %1, i64 0, i32 16
  %27 = call i32 @cr_png_colorspace_set_chromaticities(%struct.png_struct_def* nonnull %0, %struct.png_colorspace* %26, %struct.png_xy* nonnull %11, i32 2) #8
  %28 = icmp eq i32 %27, 0
  br i1 %28, label %33, label %29

29:                                               ; preds = %17
  %30 = getelementptr inbounds %struct.png_info_def, %struct.png_info_def* %1, i64 0, i32 16, i32 4
  %31 = load i16, i16* %30, align 2
  %32 = or i16 %31, 16
  store i16 %32, i16* %30, align 2
  br label %33

33:                                               ; preds = %17, %29
  call void @cr_png_colorspace_sync_info(%struct.png_struct_def* nonnull %0, %struct.png_info_def* nonnull %1) #8
  br label %34

34:                                               ; preds = %10, %33
  call void @llvm.lifetime.end.p0i8(i64 32, i8* nonnull %12) #8
  ret void
}

; Function Attrs: argmemonly nounwind
declare void @llvm.lifetime.start.p0i8(i64 immarg, i8* nocapture) #1

declare i32 @cr_png_colorspace_set_chromaticities(%struct.png_struct_def*, %struct.png_colorspace*, %struct.png_xy*, i32) local_unnamed_addr #2

declare void @cr_png_colorspace_sync_info(%struct.png_struct_def*, %struct.png_info_def*) local_unnamed_addr #2

; Function Attrs: argmemonly nounwind
declare void @llvm.lifetime.end.p0i8(i64 immarg, i8* nocapture) #1

; Function Attrs: nounwind ssp uwtable
define hidden void @cr_png_set_cHRM_XYZ_fixed(%struct.png_struct_def* noalias, %struct.png_info_def* noalias, i32, i32, i32, i32, i32, i32, i32, i32, i32) local_unnamed_addr #0 {
  %12 = alloca %struct.png_XYZ, align 4
  %13 = bitcast %struct.png_XYZ* %12 to i8*
  call void @llvm.lifetime.start.p0i8(i64 36, i8* nonnull %13) #8
  call void @llvm.memset.p0i8.i64(i8* nonnull align 4 %13, i8 -86, i64 36, i1 false)
  %14 = icmp eq %struct.png_struct_def* %0, null
  %15 = icmp eq %struct.png_info_def* %1, null
  %16 = or i1 %14, %15
  br i1 %16, label %35, label %17

17:                                               ; preds = %11
  %18 = getelementptr inbounds %struct.png_XYZ, %struct.png_XYZ* %12, i64 0, i32 0
  store i32 %2, i32* %18, align 4
  %19 = getelementptr inbounds %struct.png_XYZ, %struct.png_XYZ* %12, i64 0, i32 1
  store i32 %3, i32* %19, align 4
  %20 = getelementptr inbounds %struct.png_XYZ, %struct.png_XYZ* %12, i64 0, i32 2
  store i32 %4, i32* %20, align 4
  %21 = getelementptr inbounds %struct.png_XYZ, %struct.png_XYZ* %12, i64 0, i32 3
  store i32 %5, i32* %21, align 4
  %22 = getelementptr inbounds %struct.png_XYZ, %struct.png_XYZ* %12, i64 0, i32 4
  store i32 %6, i32* %22, align 4
  %23 = getelementptr inbounds %struct.png_XYZ, %struct.png_XYZ* %12, i64 0, i32 5
  store i32 %7, i32* %23, align 4
  %24 = getelementptr inbounds %struct.png_XYZ, %struct.png_XYZ* %12, i64 0, i32 6
  store i32 %8, i32* %24, align 4
  %25 = getelementptr inbounds %struct.png_XYZ, %struct.png_XYZ* %12, i64 0, i32 7
  store i32 %9, i32* %25, align 4
  %26 = getelementptr inbounds %struct.png_XYZ, %struct.png_XYZ* %12, i64 0, i32 8
  store i32 %10, i32* %26, align 4
  %27 = getelementptr inbounds %struct.png_info_def, %struct.png_info_def* %1, i64 0, i32 16
  %28 = call i32 @cr_png_colorspace_set_endpoints(%struct.png_struct_def* nonnull %0, %struct.png_colorspace* %27, %struct.png_XYZ* nonnull %12, i32 2) #8
  %29 = icmp eq i32 %28, 0
  br i1 %29, label %34, label %30

30:                                               ; preds = %17
  %31 = getelementptr inbounds %struct.png_info_def, %struct.png_info_def* %1, i64 0, i32 16, i32 4
  %32 = load i16, i16* %31, align 2
  %33 = or i16 %32, 16
  store i16 %33, i16* %31, align 2
  br label %34

34:                                               ; preds = %17, %30
  call void @cr_png_colorspace_sync_info(%struct.png_struct_def* nonnull %0, %struct.png_info_def* nonnull %1) #8
  br label %35

35:                                               ; preds = %11, %34
  call void @llvm.lifetime.end.p0i8(i64 36, i8* nonnull %13) #8
  ret void
}

; Function Attrs: argmemonly nounwind
declare void @llvm.memset.p0i8.i64(i8* nocapture writeonly, i8, i64, i1 immarg) #1

declare i32 @cr_png_colorspace_set_endpoints(%struct.png_struct_def*, %struct.png_colorspace*, %struct.png_XYZ*, i32) local_unnamed_addr #2

; Function Attrs: nounwind ssp uwtable
define hidden void @cr_png_set_cHRM(%struct.png_struct_def* noalias, %struct.png_info_def* noalias, double, double, double, double, double, double, double, double) local_unnamed_addr #0 {
  %11 = alloca %struct.png_xy, align 4
  %12 = tail call i32 @cr_png_fixed(%struct.png_struct_def* %0, double %2, i8* getelementptr inbounds ([13 x i8], [13 x i8]* @.str, i64 0, i64 0)) #8
  %13 = tail call i32 @cr_png_fixed(%struct.png_struct_def* %0, double %3, i8* getelementptr inbounds ([13 x i8], [13 x i8]* @.str.1, i64 0, i64 0)) #8
  %14 = tail call i32 @cr_png_fixed(%struct.png_struct_def* %0, double %4, i8* getelementptr inbounds ([11 x i8], [11 x i8]* @.str.2, i64 0, i64 0)) #8
  %15 = tail call i32 @cr_png_fixed(%struct.png_struct_def* %0, double %5, i8* getelementptr inbounds ([11 x i8], [11 x i8]* @.str.3, i64 0, i64 0)) #8
  %16 = tail call i32 @cr_png_fixed(%struct.png_struct_def* %0, double %6, i8* getelementptr inbounds ([13 x i8], [13 x i8]* @.str.4, i64 0, i64 0)) #8
  %17 = tail call i32 @cr_png_fixed(%struct.png_struct_def* %0, double %7, i8* getelementptr inbounds ([13 x i8], [13 x i8]* @.str.5, i64 0, i64 0)) #8
  %18 = tail call i32 @cr_png_fixed(%struct.png_struct_def* %0, double %8, i8* getelementptr inbounds ([12 x i8], [12 x i8]* @.str.6, i64 0, i64 0)) #8
  %19 = tail call i32 @cr_png_fixed(%struct.png_struct_def* %0, double %9, i8* getelementptr inbounds ([12 x i8], [12 x i8]* @.str.7, i64 0, i64 0)) #8
  %20 = bitcast %struct.png_xy* %11 to i8*
  call void @llvm.lifetime.start.p0i8(i64 32, i8* nonnull %20) #8, !noalias !2
  %21 = icmp eq %struct.png_struct_def* %0, null
  %22 = icmp eq %struct.png_info_def* %1, null
  %23 = or i1 %21, %22
  call void @llvm.memset.p0i8.i64(i8* nonnull align 4 %20, i8 -86, i64 32, i1 false) #8, !noalias !2
  br i1 %23, label %41, label %24

24:                                               ; preds = %10
  %25 = getelementptr inbounds %struct.png_xy, %struct.png_xy* %11, i64 0, i32 0
  %26 = getelementptr inbounds %struct.png_xy, %struct.png_xy* %11, i64 0, i32 7
  %27 = getelementptr inbounds %struct.png_xy, %struct.png_xy* %11, i64 0, i32 6
  %28 = getelementptr inbounds %struct.png_xy, %struct.png_xy* %11, i64 0, i32 5
  %29 = getelementptr inbounds %struct.png_xy, %struct.png_xy* %11, i64 0, i32 4
  %30 = getelementptr inbounds %struct.png_xy, %struct.png_xy* %11, i64 0, i32 3
  %31 = getelementptr inbounds %struct.png_xy, %struct.png_xy* %11, i64 0, i32 2
  %32 = getelementptr inbounds %struct.png_xy, %struct.png_xy* %11, i64 0, i32 1
  store i32 %14, i32* %25, align 4, !noalias !2
  store i32 %15, i32* %32, align 4, !noalias !2
  store i32 %16, i32* %31, align 4, !noalias !2
  store i32 %17, i32* %30, align 4, !noalias !2
  store i32 %18, i32* %29, align 4, !noalias !2
  store i32 %19, i32* %28, align 4, !noalias !2
  store i32 %12, i32* %27, align 4, !noalias !2
  store i32 %13, i32* %26, align 4, !noalias !2
  %33 = getelementptr inbounds %struct.png_info_def, %struct.png_info_def* %1, i64 0, i32 16
  %34 = call i32 @cr_png_colorspace_set_chromaticities(%struct.png_struct_def* nonnull %0, %struct.png_colorspace* %33, %struct.png_xy* nonnull %11, i32 2) #8
  %35 = icmp eq i32 %34, 0
  br i1 %35, label %40, label %36

36:                                               ; preds = %24
  %37 = getelementptr inbounds %struct.png_info_def, %struct.png_info_def* %1, i64 0, i32 16, i32 4
  %38 = load i16, i16* %37, align 2, !alias.scope !6, !noalias !7
  %39 = or i16 %38, 16
  store i16 %39, i16* %37, align 2, !alias.scope !6, !noalias !7
  br label %40

40:                                               ; preds = %36, %24
  call void @cr_png_colorspace_sync_info(%struct.png_struct_def* nonnull %0, %struct.png_info_def* nonnull %1) #8
  br label %41

41:                                               ; preds = %10, %40
  call void @llvm.lifetime.end.p0i8(i64 32, i8* nonnull %20) #8, !noalias !2
  ret void
}

declare i32 @cr_png_fixed(%struct.png_struct_def*, double, i8*) local_unnamed_addr #2

; Function Attrs: nounwind ssp uwtable
define hidden void @cr_png_set_cHRM_XYZ(%struct.png_struct_def* noalias, %struct.png_info_def* noalias, double, double, double, double, double, double, double, double, double) local_unnamed_addr #0 {
  %12 = alloca %struct.png_XYZ, align 4
  %13 = tail call i32 @cr_png_fixed(%struct.png_struct_def* %0, double %2, i8* getelementptr inbounds ([11 x i8], [11 x i8]* @.str.2, i64 0, i64 0)) #8
  %14 = tail call i32 @cr_png_fixed(%struct.png_struct_def* %0, double %3, i8* getelementptr inbounds ([11 x i8], [11 x i8]* @.str.3, i64 0, i64 0)) #8
  %15 = tail call i32 @cr_png_fixed(%struct.png_struct_def* %0, double %4, i8* getelementptr inbounds ([11 x i8], [11 x i8]* @.str.8, i64 0, i64 0)) #8
  %16 = tail call i32 @cr_png_fixed(%struct.png_struct_def* %0, double %5, i8* getelementptr inbounds ([13 x i8], [13 x i8]* @.str.4, i64 0, i64 0)) #8
  %17 = tail call i32 @cr_png_fixed(%struct.png_struct_def* %0, double %6, i8* getelementptr inbounds ([13 x i8], [13 x i8]* @.str.5, i64 0, i64 0)) #8
  %18 = tail call i32 @cr_png_fixed(%struct.png_struct_def* %0, double %7, i8* getelementptr inbounds ([13 x i8], [13 x i8]* @.str.9, i64 0, i64 0)) #8
  %19 = tail call i32 @cr_png_fixed(%struct.png_struct_def* %0, double %8, i8* getelementptr inbounds ([12 x i8], [12 x i8]* @.str.6, i64 0, i64 0)) #8
  %20 = tail call i32 @cr_png_fixed(%struct.png_struct_def* %0, double %9, i8* getelementptr inbounds ([12 x i8], [12 x i8]* @.str.7, i64 0, i64 0)) #8
  %21 = tail call i32 @cr_png_fixed(%struct.png_struct_def* %0, double %10, i8* getelementptr inbounds ([12 x i8], [12 x i8]* @.str.10, i64 0, i64 0)) #8
  %22 = bitcast %struct.png_XYZ* %12 to i8*
  call void @llvm.lifetime.start.p0i8(i64 36, i8* nonnull %22) #8, !noalias !8
  call void @llvm.memset.p0i8.i64(i8* nonnull align 4 %22, i8 -86, i64 36, i1 false) #8, !noalias !8
  %23 = icmp eq %struct.png_struct_def* %0, null
  %24 = icmp eq %struct.png_info_def* %1, null
  %25 = or i1 %23, %24
  br i1 %25, label %44, label %26

26:                                               ; preds = %11
  %27 = getelementptr inbounds %struct.png_XYZ, %struct.png_XYZ* %12, i64 0, i32 0
  store i32 %13, i32* %27, align 4, !noalias !8
  %28 = getelementptr inbounds %struct.png_XYZ, %struct.png_XYZ* %12, i64 0, i32 1
  store i32 %14, i32* %28, align 4, !noalias !8
  %29 = getelementptr inbounds %struct.png_XYZ, %struct.png_XYZ* %12, i64 0, i32 2
  store i32 %15, i32* %29, align 4, !noalias !8
  %30 = getelementptr inbounds %struct.png_XYZ, %struct.png_XYZ* %12, i64 0, i32 3
  store i32 %16, i32* %30, align 4, !noalias !8
  %31 = getelementptr inbounds %struct.png_XYZ, %struct.png_XYZ* %12, i64 0, i32 4
  store i32 %17, i32* %31, align 4, !noalias !8
  %32 = getelementptr inbounds %struct.png_XYZ, %struct.png_XYZ* %12, i64 0, i32 5
  store i32 %18, i32* %32, align 4, !noalias !8
  %33 = getelementptr inbounds %struct.png_XYZ, %struct.png_XYZ* %12, i64 0, i32 6
  store i32 %19, i32* %33, align 4, !noalias !8
  %34 = getelementptr inbounds %struct.png_XYZ, %struct.png_XYZ* %12, i64 0, i32 7
  store i32 %20, i32* %34, align 4, !noalias !8
  %35 = getelementptr inbounds %struct.png_XYZ, %struct.png_XYZ* %12, i64 0, i32 8
  store i32 %21, i32* %35, align 4, !noalias !8
  %36 = getelementptr inbounds %struct.png_info_def, %struct.png_info_def* %1, i64 0, i32 16
  %37 = call i32 @cr_png_colorspace_set_endpoints(%struct.png_struct_def* nonnull %0, %struct.png_colorspace* %36, %struct.png_XYZ* nonnull %12, i32 2) #8
  %38 = icmp eq i32 %37, 0
  br i1 %38, label %43, label %39

39:                                               ; preds = %26
  %40 = getelementptr inbounds %struct.png_info_def, %struct.png_info_def* %1, i64 0, i32 16, i32 4
  %41 = load i16, i16* %40, align 2, !alias.scope !12, !noalias !13
  %42 = or i16 %41, 16
  store i16 %42, i16* %40, align 2, !alias.scope !12, !noalias !13
  br label %43

43:                                               ; preds = %39, %26
  call void @cr_png_colorspace_sync_info(%struct.png_struct_def* nonnull %0, %struct.png_info_def* nonnull %1) #8
  br label %44

44:                                               ; preds = %11, %43
  call void @llvm.lifetime.end.p0i8(i64 36, i8* nonnull %22) #8, !noalias !8
  ret void
}

; Function Attrs: nounwind ssp uwtable
define hidden void @cr_png_set_gAMA_fixed(%struct.png_struct_def* noalias, %struct.png_info_def* noalias, i32) local_unnamed_addr #0 {
  %4 = icmp eq %struct.png_struct_def* %0, null
  %5 = icmp eq %struct.png_info_def* %1, null
  %6 = or i1 %4, %5
  br i1 %6, label %9, label %7

7:                                                ; preds = %3
  %8 = getelementptr inbounds %struct.png_info_def, %struct.png_info_def* %1, i64 0, i32 16
  tail call void @cr_png_colorspace_set_gamma(%struct.png_struct_def* nonnull %0, %struct.png_colorspace* %8, i32 %2) #8
  tail call void @cr_png_colorspace_sync_info(%struct.png_struct_def* nonnull %0, %struct.png_info_def* nonnull %1) #8
  br label %9

9:                                                ; preds = %3, %7
  ret void
}

declare void @cr_png_colorspace_set_gamma(%struct.png_struct_def*, %struct.png_colorspace*, i32) local_unnamed_addr #2

; Function Attrs: nounwind ssp uwtable
define hidden void @cr_png_set_gAMA(%struct.png_struct_def* noalias, %struct.png_info_def* noalias, double) local_unnamed_addr #0 {
  %4 = tail call i32 @cr_png_fixed(%struct.png_struct_def* %0, double %2, i8* getelementptr inbounds ([13 x i8], [13 x i8]* @.str.11, i64 0, i64 0)) #8
  %5 = icmp eq %struct.png_struct_def* %0, null
  %6 = icmp eq %struct.png_info_def* %1, null
  %7 = or i1 %5, %6
  br i1 %7, label %10, label %8

8:                                                ; preds = %3
  %9 = getelementptr inbounds %struct.png_info_def, %struct.png_info_def* %1, i64 0, i32 16
  tail call void @cr_png_colorspace_set_gamma(%struct.png_struct_def* nonnull %0, %struct.png_colorspace* %9, i32 %4) #8
  tail call void @cr_png_colorspace_sync_info(%struct.png_struct_def* nonnull %0, %struct.png_info_def* nonnull %1) #8
  br label %10

10:                                               ; preds = %3, %8
  ret void
}

; Function Attrs: nounwind ssp uwtable
define hidden void @cr_png_set_IHDR(%struct.png_struct_def* noalias, %struct.png_info_def* noalias, i32, i32, i32, i32, i32, i32, i32) local_unnamed_addr #0 {
  %10 = icmp eq %struct.png_struct_def* %0, null
  %11 = icmp eq %struct.png_info_def* %1, null
  %12 = or i1 %10, %11
  br i1 %12, label %61, label %13

13:                                               ; preds = %9
  %14 = getelementptr inbounds %struct.png_info_def, %struct.png_info_def* %1, i64 0, i32 0
  store i32 %2, i32* %14, align 8
  %15 = getelementptr inbounds %struct.png_info_def, %struct.png_info_def* %1, i64 0, i32 1
  store i32 %3, i32* %15, align 4
  %16 = trunc i32 %4 to i8
  %17 = getelementptr inbounds %struct.png_info_def, %struct.png_info_def* %1, i64 0, i32 7
  store i8 %16, i8* %17, align 4
  %18 = trunc i32 %5 to i8
  %19 = getelementptr inbounds %struct.png_info_def, %struct.png_info_def* %1, i64 0, i32 8
  store i8 %18, i8* %19, align 1
  %20 = trunc i32 %7 to i8
  %21 = getelementptr inbounds %struct.png_info_def, %struct.png_info_def* %1, i64 0, i32 9
  store i8 %20, i8* %21, align 2
  %22 = trunc i32 %8 to i8
  %23 = getelementptr inbounds %struct.png_info_def, %struct.png_info_def* %1, i64 0, i32 10
  store i8 %22, i8* %23, align 1
  %24 = trunc i32 %6 to i8
  %25 = getelementptr inbounds %struct.png_info_def, %struct.png_info_def* %1, i64 0, i32 11
  store i8 %24, i8* %25, align 8
  %26 = and i32 %4, 255
  %27 = and i32 %5, 255
  %28 = and i32 %6, 255
  %29 = and i32 %7, 255
  %30 = and i32 %8, 255
  tail call void @cr_png_check_IHDR(%struct.png_struct_def* nonnull %0, i32 %2, i32 %3, i32 %26, i32 %27, i32 %28, i32 %29, i32 %30) #8
  %31 = load i8, i8* %19, align 1
  %32 = icmp eq i8 %31, 3
  br i1 %32, label %33, label %35

33:                                               ; preds = %13
  %34 = getelementptr inbounds %struct.png_info_def, %struct.png_info_def* %1, i64 0, i32 12
  store i8 1, i8* %34, align 1
  br label %43

35:                                               ; preds = %13
  %36 = and i8 %31, 2
  %37 = getelementptr inbounds %struct.png_info_def, %struct.png_info_def* %1, i64 0, i32 12
  %38 = or i8 %36, 1
  store i8 %38, i8* %37, align 1
  %39 = and i8 %31, 4
  %40 = icmp eq i8 %39, 0
  br i1 %40, label %43, label %41

41:                                               ; preds = %35
  %42 = add nuw nsw i8 %38, 1
  store i8 %42, i8* %37, align 1
  br label %43

43:                                               ; preds = %33, %35, %41
  %44 = phi i8 [ 1, %33 ], [ %38, %35 ], [ %42, %41 ]
  %45 = load i8, i8* %17, align 4
  %46 = mul i8 %45, %44
  %47 = getelementptr inbounds %struct.png_info_def, %struct.png_info_def* %1, i64 0, i32 13
  store i8 %46, i8* %47, align 2
  %48 = icmp ugt i8 %46, 7
  %49 = zext i32 %2 to i64
  %50 = zext i8 %46 to i64
  br i1 %48, label %51, label %54

51:                                               ; preds = %43
  %52 = lshr i64 %50, 3
  %53 = mul nuw nsw i64 %52, %49
  br label %58

54:                                               ; preds = %43
  %55 = mul nuw nsw i64 %50, %49
  %56 = add nuw nsw i64 %55, 7
  %57 = lshr i64 %56, 3
  br label %58

58:                                               ; preds = %54, %51
  %59 = phi i64 [ %53, %51 ], [ %57, %54 ]
  %60 = getelementptr inbounds %struct.png_info_def, %struct.png_info_def* %1, i64 0, i32 3
  store i64 %59, i64* %60, align 8
  br label %61

61:                                               ; preds = %9, %58
  ret void
}

declare void @cr_png_check_IHDR(%struct.png_struct_def*, i32, i32, i32, i32, i32, i32, i32) local_unnamed_addr #2

; Function Attrs: nounwind ssp uwtable
define hidden void @cr_png_set_PLTE(%struct.png_struct_def* noalias, %struct.png_info_def* noalias, %struct.png_color_struct* readonly, i32) local_unnamed_addr #0 {
  %5 = icmp eq %struct.png_struct_def* %0, null
  %6 = icmp eq %struct.png_info_def* %1, null
  %7 = or i1 %5, %6
  br i1 %7, label %51, label %8

8:                                                ; preds = %4
  %9 = getelementptr inbounds %struct.png_info_def, %struct.png_info_def* %1, i64 0, i32 8
  %10 = load i8, i8* %9, align 1
  %11 = icmp eq i8 %10, 3
  br i1 %11, label %12, label %17

12:                                               ; preds = %8
  %13 = getelementptr inbounds %struct.png_info_def, %struct.png_info_def* %1, i64 0, i32 7
  %14 = load i8, i8* %13, align 4
  %15 = zext i8 %14 to i32
  %16 = shl i32 1, %15
  br label %17

17:                                               ; preds = %8, %12
  %18 = phi i32 [ %16, %12 ], [ 256, %8 ]
  %19 = icmp slt i32 %3, 0
  %20 = icmp slt i32 %18, %3
  %21 = or i1 %19, %20
  br i1 %21, label %22, label %25

22:                                               ; preds = %17
  br i1 %11, label %23, label %24

23:                                               ; preds = %22
  tail call void @cr_png_error(%struct.png_struct_def* nonnull %0, i8* getelementptr inbounds ([23 x i8], [23 x i8]* @.str.12, i64 0, i64 0)) #9
  unreachable

24:                                               ; preds = %22
  tail call void @cr_png_warning(%struct.png_struct_def* nonnull %0, i8* getelementptr inbounds ([23 x i8], [23 x i8]* @.str.12, i64 0, i64 0)) #8
  br label %51

25:                                               ; preds = %17
  %26 = icmp sgt i32 %3, 0
  %27 = icmp eq %struct.png_color_struct* %2, null
  %28 = and i1 %27, %26
  %29 = icmp eq i32 %3, 0
  %30 = or i1 %29, %28
  br i1 %30, label %31, label %32

31:                                               ; preds = %25
  tail call void @cr_png_error(%struct.png_struct_def* nonnull %0, i8* getelementptr inbounds ([16 x i8], [16 x i8]* @.str.13, i64 0, i64 0)) #9
  unreachable

32:                                               ; preds = %25
  tail call void @cr_png_free_data(%struct.png_struct_def* nonnull %0, %struct.png_info_def* nonnull %1, i32 4096, i32 0) #8
  %33 = tail call noalias i8* @cr_png_calloc(%struct.png_struct_def* nonnull %0, i64 768) #8
  %34 = getelementptr inbounds %struct.png_struct_def, %struct.png_struct_def* %0, i64 0, i32 52
  %35 = bitcast %struct.png_color_struct** %34 to i8**
  store i8* %33, i8** %35, align 8
  %36 = getelementptr inbounds %struct.png_color_struct, %struct.png_color_struct* %2, i64 0, i32 0
  %37 = zext i32 %3 to i64
  %38 = mul nuw nsw i64 %37, 3
  tail call void @llvm.memcpy.p0i8.p0i8.i64(i8* align 1 %33, i8* align 1 %36, i64 %38, i1 false)
  %39 = ptrtoint i8* %33 to i64
  %40 = getelementptr inbounds %struct.png_info_def, %struct.png_info_def* %1, i64 0, i32 4
  %41 = bitcast %struct.png_color_struct** %40 to i64*
  store i64 %39, i64* %41, align 8
  %42 = trunc i32 %3 to i16
  %43 = getelementptr inbounds %struct.png_struct_def, %struct.png_struct_def* %0, i64 0, i32 53
  store i16 %42, i16* %43, align 8
  %44 = getelementptr inbounds %struct.png_info_def, %struct.png_info_def* %1, i64 0, i32 5
  store i16 %42, i16* %44, align 8
  %45 = getelementptr inbounds %struct.png_info_def, %struct.png_info_def* %1, i64 0, i32 27
  %46 = load i32, i32* %45, align 4
  %47 = or i32 %46, 4096
  store i32 %47, i32* %45, align 4
  %48 = getelementptr inbounds %struct.png_info_def, %struct.png_info_def* %1, i64 0, i32 2
  %49 = load i32, i32* %48, align 8
  %50 = or i32 %49, 8
  store i32 %50, i32* %48, align 8
  br label %51

51:                                               ; preds = %4, %32, %24
  ret void
}

; Function Attrs: noreturn
declare void @cr_png_error(%struct.png_struct_def*, i8*) local_unnamed_addr #3

declare void @cr_png_warning(%struct.png_struct_def*, i8*) local_unnamed_addr #2

declare void @cr_png_free_data(%struct.png_struct_def*, %struct.png_info_def*, i32, i32) local_unnamed_addr #2

declare noalias i8* @cr_png_calloc(%struct.png_struct_def*, i64) local_unnamed_addr #2

; Function Attrs: argmemonly nounwind
declare void @llvm.memcpy.p0i8.p0i8.i64(i8* nocapture writeonly, i8* nocapture readonly, i64, i1 immarg) #1

; Function Attrs: nounwind ssp uwtable
define hidden void @cr_png_set_sBIT(%struct.png_struct_def* noalias readnone, %struct.png_info_def* noalias, %struct.png_color_8_struct* readonly) local_unnamed_addr #0 {
  %4 = icmp eq %struct.png_struct_def* %0, null
  %5 = icmp eq %struct.png_info_def* %1, null
  %6 = or i1 %4, %5
  %7 = icmp eq %struct.png_color_8_struct* %2, null
  %8 = or i1 %6, %7
  br i1 %8, label %15, label %9

9:                                                ; preds = %3
  %10 = getelementptr inbounds %struct.png_info_def, %struct.png_info_def* %1, i64 0, i32 23, i32 0
  %11 = getelementptr inbounds %struct.png_color_8_struct, %struct.png_color_8_struct* %2, i64 0, i32 0
  tail call void @llvm.memcpy.p0i8.p0i8.i64(i8* align 8 %10, i8* align 1 %11, i64 5, i1 false)
  %12 = getelementptr inbounds %struct.png_info_def, %struct.png_info_def* %1, i64 0, i32 2
  %13 = load i32, i32* %12, align 8
  %14 = or i32 %13, 2
  store i32 %14, i32* %12, align 8
  br label %15

15:                                               ; preds = %3, %9
  ret void
}

; Function Attrs: nounwind ssp uwtable
define hidden void @cr_png_set_sRGB(%struct.png_struct_def* noalias, %struct.png_info_def* noalias, i32) local_unnamed_addr #0 {
  %4 = icmp eq %struct.png_struct_def* %0, null
  %5 = icmp eq %struct.png_info_def* %1, null
  %6 = or i1 %4, %5
  br i1 %6, label %10, label %7

7:                                                ; preds = %3
  %8 = getelementptr inbounds %struct.png_info_def, %struct.png_info_def* %1, i64 0, i32 16
  %9 = tail call i32 @cr_png_colorspace_set_sRGB(%struct.png_struct_def* nonnull %0, %struct.png_colorspace* %8, i32 %2) #8
  tail call void @cr_png_colorspace_sync_info(%struct.png_struct_def* nonnull %0, %struct.png_info_def* nonnull %1) #8
  br label %10

10:                                               ; preds = %3, %7
  ret void
}

declare i32 @cr_png_colorspace_set_sRGB(%struct.png_struct_def*, %struct.png_colorspace*, i32) local_unnamed_addr #2

; Function Attrs: nounwind ssp uwtable
define hidden void @cr_png_set_sRGB_gAMA_and_cHRM(%struct.png_struct_def* noalias, %struct.png_info_def* noalias, i32) local_unnamed_addr #0 {
  %4 = icmp eq %struct.png_struct_def* %0, null
  %5 = icmp eq %struct.png_info_def* %1, null
  %6 = or i1 %4, %5
  br i1 %6, label %16, label %7

7:                                                ; preds = %3
  %8 = getelementptr inbounds %struct.png_info_def, %struct.png_info_def* %1, i64 0, i32 16
  %9 = tail call i32 @cr_png_colorspace_set_sRGB(%struct.png_struct_def* nonnull %0, %struct.png_colorspace* %8, i32 %2) #8
  %10 = icmp eq i32 %9, 0
  br i1 %10, label %15, label %11

11:                                               ; preds = %7
  %12 = getelementptr inbounds %struct.png_info_def, %struct.png_info_def* %1, i64 0, i32 16, i32 4
  %13 = load i16, i16* %12, align 2
  %14 = or i16 %13, 24
  store i16 %14, i16* %12, align 2
  br label %15

15:                                               ; preds = %7, %11
  tail call void @cr_png_colorspace_sync_info(%struct.png_struct_def* nonnull %0, %struct.png_info_def* nonnull %1) #8
  br label %16

16:                                               ; preds = %3, %15
  ret void
}

; Function Attrs: nounwind ssp uwtable
define hidden void @cr_png_set_iCCP(%struct.png_struct_def* noalias, %struct.png_info_def* noalias, i8*, i32, i8*, i32) local_unnamed_addr #0 {
  %7 = icmp eq %struct.png_struct_def* %0, null
  %8 = icmp eq %struct.png_info_def* %1, null
  %9 = or i1 %7, %8
  %10 = icmp eq i8* %2, null
  %11 = or i1 %9, %10
  %12 = icmp eq i8* %4, null
  %13 = or i1 %11, %12
  br i1 %13, label %48, label %14

14:                                               ; preds = %6
  %15 = icmp eq i32 %3, 0
  br i1 %15, label %17, label %16

16:                                               ; preds = %14
  tail call void @cr_png_app_error(%struct.png_struct_def* nonnull %0, i8* getelementptr inbounds ([32 x i8], [32 x i8]* @.str.14, i64 0, i64 0)) #8
  br label %17

17:                                               ; preds = %14, %16
  %18 = getelementptr inbounds %struct.png_info_def, %struct.png_info_def* %1, i64 0, i32 16
  %19 = getelementptr inbounds %struct.png_info_def, %struct.png_info_def* %1, i64 0, i32 8
  %20 = load i8, i8* %19, align 1
  %21 = zext i8 %20 to i32
  %22 = tail call i32 @cr_png_colorspace_set_ICC(%struct.png_struct_def* nonnull %0, %struct.png_colorspace* %18, i8* nonnull %2, i32 %5, i8* nonnull %4, i32 %21) #8
  tail call void @cr_png_colorspace_sync_info(%struct.png_struct_def* nonnull %0, %struct.png_info_def* nonnull %1) #8
  %23 = icmp eq i32 %22, 0
  br i1 %23, label %48, label %24

24:                                               ; preds = %17
  %25 = getelementptr inbounds %struct.png_info_def, %struct.png_info_def* %1, i64 0, i32 16, i32 4
  %26 = load i16, i16* %25, align 2
  %27 = or i16 %26, 24
  store i16 %27, i16* %25, align 2
  %28 = tail call i64 @strlen(i8* nonnull %2) #10
  %29 = add i64 %28, 1
  %30 = tail call noalias i8* @cr_png_malloc_warn(%struct.png_struct_def* nonnull %0, i64 %29) #8
  %31 = icmp eq i8* %30, null
  br i1 %31, label %32, label %33

32:                                               ; preds = %24
  tail call void @cr_png_benign_error(%struct.png_struct_def* nonnull %0, i8* getelementptr inbounds ([42 x i8], [42 x i8]* @.str.15, i64 0, i64 0)) #8
  br label %48

33:                                               ; preds = %24
  tail call void @llvm.memcpy.p0i8.p0i8.i64(i8* nonnull align 1 %30, i8* nonnull align 1 %2, i64 %29, i1 false)
  %34 = zext i32 %5 to i64
  %35 = tail call noalias i8* @cr_png_malloc_warn(%struct.png_struct_def* nonnull %0, i64 %34) #8
  %36 = icmp eq i8* %35, null
  br i1 %36, label %37, label %38

37:                                               ; preds = %33
  tail call void @cr_png_free(%struct.png_struct_def* nonnull %0, i8* nonnull %30) #8
  tail call void @cr_png_benign_error(%struct.png_struct_def* nonnull %0, i8* getelementptr inbounds ([44 x i8], [44 x i8]* @.str.16, i64 0, i64 0)) #8
  br label %48

38:                                               ; preds = %33
  tail call void @llvm.memcpy.p0i8.p0i8.i64(i8* nonnull align 1 %35, i8* nonnull align 1 %4, i64 %34, i1 false)
  tail call void @cr_png_free_data(%struct.png_struct_def* nonnull %0, %struct.png_info_def* nonnull %1, i32 16, i32 0) #8
  %39 = getelementptr inbounds %struct.png_info_def, %struct.png_info_def* %1, i64 0, i32 19
  store i32 %5, i32* %39, align 8
  %40 = getelementptr inbounds %struct.png_info_def, %struct.png_info_def* %1, i64 0, i32 17
  store i8* %30, i8** %40, align 8
  %41 = getelementptr inbounds %struct.png_info_def, %struct.png_info_def* %1, i64 0, i32 18
  store i8* %35, i8** %41, align 8
  %42 = getelementptr inbounds %struct.png_info_def, %struct.png_info_def* %1, i64 0, i32 27
  %43 = load i32, i32* %42, align 4
  %44 = or i32 %43, 16
  store i32 %44, i32* %42, align 4
  %45 = getelementptr inbounds %struct.png_info_def, %struct.png_info_def* %1, i64 0, i32 2
  %46 = load i32, i32* %45, align 8
  %47 = or i32 %46, 4096
  store i32 %47, i32* %45, align 8
  br label %48

48:                                               ; preds = %17, %6, %38, %37, %32
  ret void
}

declare void @cr_png_app_error(%struct.png_struct_def*, i8*) local_unnamed_addr #2

declare i32 @cr_png_colorspace_set_ICC(%struct.png_struct_def*, %struct.png_colorspace*, i8*, i32, i8*, i32) local_unnamed_addr #2

; Function Attrs: argmemonly nofree nounwind readonly
declare i64 @strlen(i8* nocapture) local_unnamed_addr #4

declare noalias i8* @cr_png_malloc_warn(%struct.png_struct_def*, i64) local_unnamed_addr #2

declare void @cr_png_benign_error(%struct.png_struct_def*, i8*) local_unnamed_addr #2

declare void @cr_png_free(%struct.png_struct_def*, i8*) local_unnamed_addr #2

; Function Attrs: nounwind ssp uwtable
define hidden void @cr_png_set_text(%struct.png_struct_def* noalias, %struct.png_info_def* noalias, %struct.png_text_struct* readonly, i32) local_unnamed_addr #0 {
  %5 = tail call i32 @cr_png_set_text_2(%struct.png_struct_def* %0, %struct.png_info_def* %1, %struct.png_text_struct* %2, i32 %3)
  %6 = icmp eq i32 %5, 0
  br i1 %6, label %8, label %7

7:                                                ; preds = %4
  tail call void @cr_png_error(%struct.png_struct_def* %0, i8* getelementptr inbounds ([34 x i8], [34 x i8]* @.str.17, i64 0, i64 0)) #9
  unreachable

8:                                                ; preds = %4
  ret void
}

; Function Attrs: nounwind ssp uwtable
define hidden i32 @cr_png_set_text_2(%struct.png_struct_def* noalias, %struct.png_info_def* noalias, %struct.png_text_struct* readonly, i32) local_unnamed_addr #0 {
  %5 = icmp eq %struct.png_struct_def* %0, null
  %6 = icmp eq %struct.png_info_def* %1, null
  %7 = or i1 %5, %6
  %8 = icmp slt i32 %3, 1
  %9 = or i1 %7, %8
  %10 = icmp eq %struct.png_text_struct* %2, null
  %11 = or i1 %10, %9
  br i1 %11, label %119, label %12

12:                                               ; preds = %4
  %13 = getelementptr inbounds %struct.png_info_def, %struct.png_info_def* %1, i64 0, i32 21
  %14 = load i32, i32* %13, align 8
  %15 = getelementptr inbounds %struct.png_info_def, %struct.png_info_def* %1, i64 0, i32 20
  %16 = load i32, i32* %15, align 4
  %17 = sub nsw i32 %14, %16
  %18 = icmp slt i32 %17, %3
  br i1 %18, label %19, label %40

19:                                               ; preds = %12
  %20 = sub nsw i32 2147483647, %16
  %21 = icmp slt i32 %20, %3
  br i1 %21, label %34, label %22

22:                                               ; preds = %19
  %23 = add nsw i32 %16, %3
  %24 = icmp slt i32 %23, 2147483639
  %25 = add nsw i32 %23, 8
  %26 = and i32 %25, -8
  %27 = select i1 %24, i32 %26, i32 2147483647
  %28 = getelementptr inbounds %struct.png_info_def, %struct.png_info_def* %1, i64 0, i32 22
  %29 = bitcast %struct.png_text_struct** %28 to i8**
  %30 = load i8*, i8** %29, align 8
  %31 = sub nsw i32 %27, %16
  %32 = tail call noalias i8* @cr_png_realloc_array(%struct.png_struct_def* nonnull %0, i8* %30, i32 %16, i32 %31, i64 56) #8
  %33 = icmp eq i8* %32, null
  br i1 %33, label %34, label %35

34:                                               ; preds = %19, %22
  tail call void @cr_png_chunk_report(%struct.png_struct_def* nonnull %0, i8* getelementptr inbounds ([21 x i8], [21 x i8]* @.str.18, i64 0, i64 0), i32 1) #8
  br label %119

35:                                               ; preds = %22
  %36 = load i8*, i8** %29, align 8
  tail call void @cr_png_free(%struct.png_struct_def* nonnull %0, i8* %36) #8
  store i8* %32, i8** %29, align 8
  %37 = getelementptr inbounds %struct.png_info_def, %struct.png_info_def* %1, i64 0, i32 27
  %38 = load i32, i32* %37, align 4
  %39 = or i32 %38, 16384
  store i32 %39, i32* %37, align 4
  store i32 %27, i32* %13, align 8
  br label %40

40:                                               ; preds = %12, %35
  %41 = getelementptr inbounds %struct.png_info_def, %struct.png_info_def* %1, i64 0, i32 22
  %42 = zext i32 %3 to i64
  br label %43

43:                                               ; preds = %116, %40
  %44 = phi i64 [ 0, %40 ], [ %117, %116 ]
  %45 = load %struct.png_text_struct*, %struct.png_text_struct** %41, align 8
  %46 = load i32, i32* %15, align 4
  %47 = sext i32 %46 to i64
  %48 = getelementptr inbounds %struct.png_text_struct, %struct.png_text_struct* %2, i64 %44, i32 1
  %49 = load i8*, i8** %48, align 8
  %50 = icmp eq i8* %49, null
  br i1 %50, label %116, label %51

51:                                               ; preds = %43
  %52 = getelementptr inbounds %struct.png_text_struct, %struct.png_text_struct* %2, i64 %44, i32 0
  %53 = load i32, i32* %52, align 8
  %54 = add i32 %53, 1
  %55 = icmp ugt i32 %54, 3
  br i1 %55, label %56, label %57

56:                                               ; preds = %51
  tail call void @cr_png_chunk_report(%struct.png_struct_def* %0, i8* getelementptr inbounds ([38 x i8], [38 x i8]* @.str.19, i64 0, i64 0), i32 1) #8
  br label %116

57:                                               ; preds = %51
  %58 = tail call i64 @strlen(i8* nonnull %49) #10
  %59 = icmp slt i32 %53, 1
  br i1 %59, label %60, label %64

60:                                               ; preds = %57
  %61 = getelementptr inbounds %struct.png_text_struct, %struct.png_text_struct* %2, i64 %44, i32 2
  %62 = load i8*, i8** %61, align 8
  %63 = icmp eq i8* %62, null
  br i1 %63, label %70, label %65

64:                                               ; preds = %57
  tail call void @cr_png_chunk_report(%struct.png_struct_def* %0, i8* getelementptr inbounds ([25 x i8], [25 x i8]* @.str.20, i64 0, i64 0), i32 1) #8
  br label %116

65:                                               ; preds = %60
  %66 = load i8, i8* %62, align 1
  %67 = icmp eq i8 %66, 0
  br i1 %67, label %70, label %68

68:                                               ; preds = %65
  %69 = tail call i64 @strlen(i8* nonnull %62) #10
  br label %70

70:                                               ; preds = %60, %65, %68
  %71 = phi i32 [ %53, %68 ], [ -1, %65 ], [ -1, %60 ]
  %72 = phi i64 [ %69, %68 ], [ 0, %65 ], [ 0, %60 ]
  %73 = getelementptr inbounds %struct.png_text_struct, %struct.png_text_struct* %45, i64 %47, i32 0
  store i32 %71, i32* %73, align 8
  %74 = add i64 %58, 4
  %75 = add i64 %74, %72
  %76 = tail call noalias i8* @cr_png_malloc_base(%struct.png_struct_def* %0, i64 %75) #8
  %77 = getelementptr inbounds %struct.png_text_struct, %struct.png_text_struct* %45, i64 %47, i32 1
  store i8* %76, i8** %77, align 8
  %78 = icmp eq i8* %76, null
  br i1 %78, label %115, label %79

79:                                               ; preds = %70
  %80 = load i8*, i8** %48, align 8
  tail call void @llvm.memcpy.p0i8.p0i8.i64(i8* nonnull align 1 %76, i8* align 1 %80, i64 %58, i1 false)
  %81 = load i8*, i8** %77, align 8
  %82 = getelementptr inbounds i8, i8* %81, i64 %58
  store i8 0, i8* %82, align 1
  %83 = load i32, i32* %52, align 8
  %84 = icmp sgt i32 %83, 0
  br i1 %84, label %85, label %95

85:                                               ; preds = %79
  %86 = load i8*, i8** %77, align 8
  %87 = getelementptr inbounds i8, i8* %86, i64 1
  %88 = getelementptr inbounds i8, i8* %87, i64 %58
  %89 = getelementptr inbounds %struct.png_text_struct, %struct.png_text_struct* %45, i64 %47, i32 5
  store i8* %88, i8** %89, align 8
  store i8 0, i8* %88, align 1
  %90 = load i8*, i8** %89, align 8
  %91 = getelementptr inbounds i8, i8* %90, i64 1
  %92 = getelementptr inbounds %struct.png_text_struct, %struct.png_text_struct* %45, i64 %47, i32 6
  store i8* %91, i8** %92, align 8
  store i8 0, i8* %91, align 1
  %93 = load i8*, i8** %92, align 8
  %94 = getelementptr inbounds i8, i8* %93, i64 1
  br label %101

95:                                               ; preds = %79
  %96 = getelementptr inbounds %struct.png_text_struct, %struct.png_text_struct* %45, i64 %47, i32 5
  %97 = bitcast i8** %96 to i8*
  call void @llvm.memset.p0i8.i64(i8* align 8 %97, i8 0, i64 16, i1 false)
  %98 = load i8*, i8** %77, align 8
  %99 = getelementptr inbounds i8, i8* %98, i64 1
  %100 = getelementptr inbounds i8, i8* %99, i64 %58
  br label %101

101:                                              ; preds = %95, %85
  %102 = phi i8* [ %100, %95 ], [ %94, %85 ]
  %103 = getelementptr inbounds %struct.png_text_struct, %struct.png_text_struct* %45, i64 %47, i32 2
  store i8* %102, i8** %103, align 8
  %104 = icmp eq i64 %72, 0
  br i1 %104, label %108, label %105

105:                                              ; preds = %101
  %106 = load i8*, i8** %61, align 8
  tail call void @llvm.memcpy.p0i8.p0i8.i64(i8* align 1 %102, i8* align 1 %106, i64 %72, i1 false)
  %107 = load i8*, i8** %103, align 8
  br label %108

108:                                              ; preds = %101, %105
  %109 = phi i8* [ %102, %101 ], [ %107, %105 ]
  %110 = getelementptr inbounds i8, i8* %109, i64 %72
  store i8 0, i8* %110, align 1
  %111 = getelementptr inbounds %struct.png_text_struct, %struct.png_text_struct* %45, i64 %47, i32 3
  store i64 %72, i64* %111, align 8
  %112 = getelementptr inbounds %struct.png_text_struct, %struct.png_text_struct* %45, i64 %47, i32 4
  store i64 0, i64* %112, align 8
  %113 = load i32, i32* %15, align 4
  %114 = add nsw i32 %113, 1
  store i32 %114, i32* %15, align 4
  br label %116

115:                                              ; preds = %70
  tail call void @cr_png_chunk_report(%struct.png_struct_def* %0, i8* getelementptr inbounds ([26 x i8], [26 x i8]* @.str.21, i64 0, i64 0), i32 1) #8
  br label %119

116:                                              ; preds = %56, %108, %64, %43
  %117 = add nuw nsw i64 %44, 1
  %118 = icmp eq i64 %117, %42
  br i1 %118, label %119, label %43

119:                                              ; preds = %116, %115, %34, %4
  %120 = phi i32 [ 1, %115 ], [ 0, %4 ], [ 1, %34 ], [ 0, %116 ]
  ret i32 %120
}

declare noalias i8* @cr_png_realloc_array(%struct.png_struct_def*, i8*, i32, i32, i64) local_unnamed_addr #2

declare void @cr_png_chunk_report(%struct.png_struct_def*, i8*, i32) local_unnamed_addr #2

declare noalias i8* @cr_png_malloc_base(%struct.png_struct_def*, i64) local_unnamed_addr #2

; Function Attrs: nounwind ssp uwtable
define hidden void @cr_png_set_tRNS(%struct.png_struct_def* noalias, %struct.png_info_def* noalias, i8* readonly, i32, %struct.png_color_16_struct* readonly) local_unnamed_addr #0 {
  %6 = icmp eq %struct.png_struct_def* %0, null
  %7 = icmp eq %struct.png_info_def* %1, null
  %8 = or i1 %6, %7
  br i1 %8, label %78, label %9

9:                                                ; preds = %5
  %10 = icmp eq i8* %2, null
  br i1 %10, label %27, label %11

11:                                               ; preds = %9
  tail call void @cr_png_free_data(%struct.png_struct_def* nonnull %0, %struct.png_info_def* nonnull %1, i32 8192, i32 0) #8
  %12 = add i32 %3, -1
  %13 = icmp ult i32 %12, 256
  br i1 %13, label %18, label %14

14:                                               ; preds = %11
  %15 = getelementptr inbounds %struct.png_info_def, %struct.png_info_def* %1, i64 0, i32 24
  %16 = bitcast i8** %15 to i64*
  %17 = load i64, i64* %16, align 8
  br label %23

18:                                               ; preds = %11
  %19 = tail call noalias i8* @cr_png_malloc(%struct.png_struct_def* nonnull %0, i64 256) #8
  %20 = getelementptr inbounds %struct.png_info_def, %struct.png_info_def* %1, i64 0, i32 24
  store i8* %19, i8** %20, align 8
  %21 = sext i32 %3 to i64
  tail call void @llvm.memcpy.p0i8.p0i8.i64(i8* align 1 %19, i8* nonnull align 1 %2, i64 %21, i1 false)
  %22 = ptrtoint i8* %19 to i64
  br label %23

23:                                               ; preds = %14, %18
  %24 = phi i64 [ %17, %14 ], [ %22, %18 ]
  %25 = getelementptr inbounds %struct.png_struct_def, %struct.png_struct_def* %0, i64 0, i32 88
  %26 = bitcast i8** %25 to i64*
  store i64 %24, i64* %26, align 8
  br label %27

27:                                               ; preds = %9, %23
  %28 = icmp eq %struct.png_color_16_struct* %4, null
  br i1 %28, label %67, label %29

29:                                               ; preds = %27
  %30 = getelementptr inbounds %struct.png_info_def, %struct.png_info_def* %1, i64 0, i32 7
  %31 = load i8, i8* %30, align 4
  %32 = icmp ult i8 %31, 16
  br i1 %32, label %33, label %60

33:                                               ; preds = %29
  %34 = zext i8 %31 to i32
  %35 = shl nsw i32 -1, %34
  %36 = xor i32 %35, -1
  %37 = getelementptr inbounds %struct.png_info_def, %struct.png_info_def* %1, i64 0, i32 8
  %38 = load i8, i8* %37, align 1
  switch i8 %38, label %60 [
    i8 0, label %39
    i8 2, label %44
  ]

39:                                               ; preds = %33
  %40 = getelementptr inbounds %struct.png_color_16_struct, %struct.png_color_16_struct* %4, i64 0, i32 4
  %41 = load i16, i16* %40, align 2
  %42 = zext i16 %41 to i32
  %43 = icmp sgt i32 %42, %36
  br i1 %43, label %59, label %60

44:                                               ; preds = %33
  %45 = getelementptr inbounds %struct.png_color_16_struct, %struct.png_color_16_struct* %4, i64 0, i32 1
  %46 = load i16, i16* %45, align 2
  %47 = zext i16 %46 to i32
  %48 = icmp sgt i32 %47, %36
  br i1 %48, label %59, label %49

49:                                               ; preds = %44
  %50 = getelementptr inbounds %struct.png_color_16_struct, %struct.png_color_16_struct* %4, i64 0, i32 2
  %51 = load i16, i16* %50, align 2
  %52 = zext i16 %51 to i32
  %53 = icmp sgt i32 %52, %36
  br i1 %53, label %59, label %54

54:                                               ; preds = %49
  %55 = getelementptr inbounds %struct.png_color_16_struct, %struct.png_color_16_struct* %4, i64 0, i32 3
  %56 = load i16, i16* %55, align 2
  %57 = zext i16 %56 to i32
  %58 = icmp sgt i32 %57, %36
  br i1 %58, label %59, label %60

59:                                               ; preds = %54, %49, %44, %39
  tail call void @cr_png_warning(%struct.png_struct_def* nonnull %0, i8* getelementptr inbounds ([50 x i8], [50 x i8]* @.str.22, i64 0, i64 0)) #8
  br label %60

60:                                               ; preds = %33, %39, %54, %59, %29
  %61 = getelementptr inbounds %struct.png_info_def, %struct.png_info_def* %1, i64 0, i32 25, i32 0
  %62 = getelementptr inbounds %struct.png_color_16_struct, %struct.png_color_16_struct* %4, i64 0, i32 0
  tail call void @llvm.memcpy.p0i8.p0i8.i64(i8* align 8 %61, i8* align 2 %62, i64 10, i1 false)
  %63 = icmp eq i32 %3, 0
  %64 = select i1 %63, i32 1, i32 %3
  %65 = trunc i32 %64 to i16
  %66 = getelementptr inbounds %struct.png_info_def, %struct.png_info_def* %1, i64 0, i32 6
  store i16 %65, i16* %66, align 2
  br label %71

67:                                               ; preds = %27
  %68 = trunc i32 %3 to i16
  %69 = getelementptr inbounds %struct.png_info_def, %struct.png_info_def* %1, i64 0, i32 6
  store i16 %68, i16* %69, align 2
  %70 = icmp eq i32 %3, 0
  br i1 %70, label %78, label %71

71:                                               ; preds = %60, %67
  %72 = getelementptr inbounds %struct.png_info_def, %struct.png_info_def* %1, i64 0, i32 2
  %73 = load i32, i32* %72, align 8
  %74 = or i32 %73, 16
  store i32 %74, i32* %72, align 8
  %75 = getelementptr inbounds %struct.png_info_def, %struct.png_info_def* %1, i64 0, i32 27
  %76 = load i32, i32* %75, align 4
  %77 = or i32 %76, 8192
  store i32 %77, i32* %75, align 4
  br label %78

78:                                               ; preds = %67, %5, %71
  ret void
}

declare noalias i8* @cr_png_malloc(%struct.png_struct_def*, i64) local_unnamed_addr #2

; Function Attrs: nounwind ssp uwtable
define hidden void @cr_png_set_unknown_chunks(%struct.png_struct_def* noalias, %struct.png_info_def* noalias, %struct.png_unknown_chunk_t* readonly, i32) local_unnamed_addr #0 {
  %5 = icmp eq %struct.png_struct_def* %0, null
  %6 = icmp eq %struct.png_info_def* %1, null
  %7 = or i1 %5, %6
  %8 = icmp slt i32 %3, 1
  %9 = or i1 %7, %8
  %10 = icmp eq %struct.png_unknown_chunk_t* %2, null
  %11 = or i1 %10, %9
  br i1 %11, label %89, label %12

12:                                               ; preds = %4
  %13 = getelementptr inbounds %struct.png_info_def, %struct.png_info_def* %1, i64 0, i32 28
  %14 = bitcast %struct.png_unknown_chunk_t** %13 to i8**
  %15 = load i8*, i8** %14, align 8
  %16 = getelementptr inbounds %struct.png_info_def, %struct.png_info_def* %1, i64 0, i32 29
  %17 = load i32, i32* %16, align 8
  %18 = tail call noalias i8* @cr_png_realloc_array(%struct.png_struct_def* nonnull %0, i8* %15, i32 %17, i32 %3, i64 32) #8
  %19 = icmp eq i8* %18, null
  br i1 %19, label %20, label %21

20:                                               ; preds = %12
  tail call void @cr_png_chunk_report(%struct.png_struct_def* nonnull %0, i8* getelementptr inbounds ([24 x i8], [24 x i8]* @.str.23, i64 0, i64 0), i32 1) #8
  br label %89

21:                                               ; preds = %12
  %22 = load i8*, i8** %14, align 8
  tail call void @cr_png_free(%struct.png_struct_def* nonnull %0, i8* %22) #8
  store i8* %18, i8** %14, align 8
  %23 = getelementptr inbounds %struct.png_info_def, %struct.png_info_def* %1, i64 0, i32 27
  %24 = load i32, i32* %23, align 4
  %25 = or i32 %24, 512
  store i32 %25, i32* %23, align 4
  %26 = bitcast i8* %18 to %struct.png_unknown_chunk_t*
  %27 = load i32, i32* %16, align 8
  %28 = sext i32 %27 to i64
  %29 = getelementptr inbounds %struct.png_unknown_chunk_t, %struct.png_unknown_chunk_t* %26, i64 %28
  %30 = getelementptr inbounds %struct.png_struct_def, %struct.png_struct_def* %0, i64 0, i32 15
  br label %31

31:                                               ; preds = %21, %84
  %32 = phi %struct.png_unknown_chunk_t* [ %29, %21 ], [ %85, %84 ]
  %33 = phi i32 [ %3, %21 ], [ %86, %84 ]
  %34 = phi %struct.png_unknown_chunk_t* [ %2, %21 ], [ %87, %84 ]
  %35 = getelementptr inbounds %struct.png_unknown_chunk_t, %struct.png_unknown_chunk_t* %32, i64 0, i32 0, i64 0
  %36 = getelementptr inbounds %struct.png_unknown_chunk_t, %struct.png_unknown_chunk_t* %34, i64 0, i32 0, i64 0
  tail call void @llvm.memcpy.p0i8.p0i8.i64(i8* align 8 %35, i8* align 8 %36, i64 5, i1 false)
  %37 = getelementptr inbounds %struct.png_unknown_chunk_t, %struct.png_unknown_chunk_t* %32, i64 0, i32 0, i64 4
  store i8 0, i8* %37, align 4
  %38 = getelementptr inbounds %struct.png_unknown_chunk_t, %struct.png_unknown_chunk_t* %34, i64 0, i32 3
  %39 = load i8, i8* %38, align 8
  %40 = and i8 %39, 11
  %41 = zext i8 %40 to i32
  %42 = icmp eq i8 %40, 0
  br i1 %42, label %45, label %43

43:                                               ; preds = %49, %31
  %44 = phi i32 [ %41, %31 ], [ %51, %49 ]
  br label %54

45:                                               ; preds = %31
  %46 = load i32, i32* %30, align 4, !alias.scope !14
  %47 = trunc i32 %46 to i16
  %48 = icmp sgt i16 %47, -1
  br i1 %48, label %49, label %53

49:                                               ; preds = %45
  tail call void @cr_png_app_warning(%struct.png_struct_def* %0, i8* getelementptr inbounds ([52 x i8], [52 x i8]* @.str.35, i64 0, i64 0)) #8
  %50 = load i32, i32* %30, align 4, !alias.scope !14
  %51 = and i32 %50, 11
  %52 = icmp eq i32 %51, 0
  br i1 %52, label %53, label %43

53:                                               ; preds = %49, %45
  tail call void @cr_png_error(%struct.png_struct_def* %0, i8* getelementptr inbounds ([43 x i8], [43 x i8]* @.str.36, i64 0, i64 0)) #9
  unreachable

54:                                               ; preds = %43, %54
  %55 = phi i32 [ %59, %54 ], [ %44, %43 ]
  %56 = sub nsw i32 0, %55
  %57 = and i32 %55, %56
  %58 = icmp eq i32 %55, %57
  %59 = xor i32 %57, %55
  br i1 %58, label %60, label %54

60:                                               ; preds = %54
  %61 = trunc i32 %55 to i8
  %62 = getelementptr inbounds %struct.png_unknown_chunk_t, %struct.png_unknown_chunk_t* %32, i64 0, i32 3
  store i8 %61, i8* %62, align 8
  %63 = getelementptr inbounds %struct.png_unknown_chunk_t, %struct.png_unknown_chunk_t* %34, i64 0, i32 2
  %64 = load i64, i64* %63, align 8
  %65 = icmp eq i64 %64, 0
  br i1 %65, label %66, label %69

66:                                               ; preds = %60
  %67 = getelementptr inbounds %struct.png_unknown_chunk_t, %struct.png_unknown_chunk_t* %32, i64 0, i32 1
  %68 = bitcast i8** %67 to i8*
  call void @llvm.memset.p0i8.i64(i8* align 8 %68, i8 0, i64 16, i1 false)
  br label %80

69:                                               ; preds = %60
  %70 = tail call noalias i8* @cr_png_malloc_base(%struct.png_struct_def* %0, i64 %64) #8
  %71 = getelementptr inbounds %struct.png_unknown_chunk_t, %struct.png_unknown_chunk_t* %32, i64 0, i32 1
  store i8* %70, i8** %71, align 8
  %72 = icmp eq i8* %70, null
  br i1 %72, label %73, label %74

73:                                               ; preds = %69
  tail call void @cr_png_chunk_report(%struct.png_struct_def* %0, i8* getelementptr inbounds ([29 x i8], [29 x i8]* @.str.24, i64 0, i64 0), i32 1) #8
  br label %84

74:                                               ; preds = %69
  %75 = getelementptr inbounds %struct.png_unknown_chunk_t, %struct.png_unknown_chunk_t* %34, i64 0, i32 1
  %76 = load i8*, i8** %75, align 8
  %77 = load i64, i64* %63, align 8
  tail call void @llvm.memcpy.p0i8.p0i8.i64(i8* nonnull align 1 %70, i8* align 1 %76, i64 %77, i1 false)
  %78 = load i64, i64* %63, align 8
  %79 = getelementptr inbounds %struct.png_unknown_chunk_t, %struct.png_unknown_chunk_t* %32, i64 0, i32 2
  store i64 %78, i64* %79, align 8
  br label %80

80:                                               ; preds = %74, %66
  %81 = getelementptr inbounds %struct.png_unknown_chunk_t, %struct.png_unknown_chunk_t* %32, i64 1
  %82 = load i32, i32* %16, align 8
  %83 = add nsw i32 %82, 1
  store i32 %83, i32* %16, align 8
  br label %84

84:                                               ; preds = %80, %73
  %85 = phi %struct.png_unknown_chunk_t* [ %81, %80 ], [ %32, %73 ]
  %86 = add nsw i32 %33, -1
  %87 = getelementptr inbounds %struct.png_unknown_chunk_t, %struct.png_unknown_chunk_t* %34, i64 1
  %88 = icmp sgt i32 %86, 0
  br i1 %88, label %31, label %89

89:                                               ; preds = %84, %4, %20
  ret void
}

; Function Attrs: nounwind ssp uwtable
define hidden void @cr_png_set_unknown_chunk_location(%struct.png_struct_def* noalias, %struct.png_info_def* noalias readonly, i32, i32) local_unnamed_addr #0 {
  %5 = icmp ne %struct.png_struct_def* %0, null
  %6 = icmp ne %struct.png_info_def* %1, null
  %7 = and i1 %5, %6
  %8 = icmp sgt i32 %2, -1
  %9 = and i1 %7, %8
  br i1 %9, label %10, label %49

10:                                               ; preds = %4
  %11 = getelementptr inbounds %struct.png_info_def, %struct.png_info_def* %1, i64 0, i32 29
  %12 = load i32, i32* %11, align 8
  %13 = icmp sgt i32 %12, %2
  br i1 %13, label %14, label %49

14:                                               ; preds = %10
  %15 = and i32 %3, 11
  %16 = icmp eq i32 %15, 0
  br i1 %16, label %17, label %21

17:                                               ; preds = %14
  tail call void @cr_png_app_error(%struct.png_struct_def* nonnull %0, i8* getelementptr inbounds ([31 x i8], [31 x i8]* @.str.25, i64 0, i64 0)) #8
  %18 = and i32 %3, 4
  %19 = icmp eq i32 %18, 0
  %20 = select i1 %19, i32 1, i32 8
  br label %21

21:                                               ; preds = %17, %14
  %22 = phi i32 [ %3, %14 ], [ %20, %17 ]
  %23 = and i32 %22, 11
  %24 = icmp eq i32 %23, 0
  br i1 %24, label %27, label %25

25:                                               ; preds = %32, %21
  %26 = phi i32 [ %23, %21 ], [ %34, %32 ]
  br label %37

27:                                               ; preds = %21
  %28 = getelementptr inbounds %struct.png_struct_def, %struct.png_struct_def* %0, i64 0, i32 15
  %29 = load i32, i32* %28, align 4, !alias.scope !17
  %30 = trunc i32 %29 to i16
  %31 = icmp sgt i16 %30, -1
  br i1 %31, label %32, label %36

32:                                               ; preds = %27
  tail call void @cr_png_app_warning(%struct.png_struct_def* nonnull %0, i8* getelementptr inbounds ([52 x i8], [52 x i8]* @.str.35, i64 0, i64 0)) #8
  %33 = load i32, i32* %28, align 4, !alias.scope !17
  %34 = and i32 %33, 11
  %35 = icmp eq i32 %34, 0
  br i1 %35, label %36, label %25

36:                                               ; preds = %32, %27
  tail call void @cr_png_error(%struct.png_struct_def* nonnull %0, i8* getelementptr inbounds ([43 x i8], [43 x i8]* @.str.36, i64 0, i64 0)) #9
  unreachable

37:                                               ; preds = %25, %37
  %38 = phi i32 [ %42, %37 ], [ %26, %25 ]
  %39 = sub nsw i32 0, %38
  %40 = and i32 %38, %39
  %41 = icmp eq i32 %38, %40
  %42 = xor i32 %40, %38
  br i1 %41, label %43, label %37

43:                                               ; preds = %37
  %44 = trunc i32 %38 to i8
  %45 = getelementptr inbounds %struct.png_info_def, %struct.png_info_def* %1, i64 0, i32 28
  %46 = load %struct.png_unknown_chunk_t*, %struct.png_unknown_chunk_t** %45, align 8
  %47 = sext i32 %2 to i64
  %48 = getelementptr inbounds %struct.png_unknown_chunk_t, %struct.png_unknown_chunk_t* %46, i64 %47, i32 3
  store i8 %44, i8* %48, align 8
  br label %49

49:                                               ; preds = %43, %10, %4
  ret void
}

; Function Attrs: nounwind ssp uwtable
define hidden void @cr_png_set_keep_unknown_chunks(%struct.png_struct_def* noalias, i32, i8* readonly, i32) local_unnamed_addr #0 {
  %5 = icmp eq %struct.png_struct_def* %0, null
  br i1 %5, label %142, label %6

6:                                                ; preds = %4
  %7 = icmp ugt i32 %1, 3
  br i1 %7, label %8, label %9

8:                                                ; preds = %6
  tail call void @cr_png_app_error(%struct.png_struct_def* nonnull %0, i8* getelementptr inbounds ([42 x i8], [42 x i8]* @.str.26, i64 0, i64 0)) #8
  br label %142

9:                                                ; preds = %6
  %10 = icmp slt i32 %3, 1
  br i1 %10, label %11, label %14

11:                                               ; preds = %9
  %12 = getelementptr inbounds %struct.png_struct_def, %struct.png_struct_def* %0, i64 0, i32 111
  store i32 %1, i32* %12, align 8
  %13 = icmp eq i32 %3, 0
  br i1 %13, label %142, label %17

14:                                               ; preds = %9
  %15 = icmp eq i8* %2, null
  br i1 %15, label %16, label %17

16:                                               ; preds = %14
  tail call void @cr_png_app_error(%struct.png_struct_def* nonnull %0, i8* getelementptr inbounds ([43 x i8], [43 x i8]* @.str.27, i64 0, i64 0)) #8
  br label %142

17:                                               ; preds = %11, %14
  %18 = phi i8* [ %2, %14 ], [ getelementptr inbounds ([90 x i8], [90 x i8]* @cr_png_set_keep_unknown_chunks.chunks_to_ignore, i64 0, i64 0), %11 ]
  %19 = phi i32 [ %3, %14 ], [ 18, %11 ]
  %20 = getelementptr inbounds %struct.png_struct_def, %struct.png_struct_def* %0, i64 0, i32 112
  %21 = load i32, i32* %20, align 4
  %22 = getelementptr inbounds %struct.png_struct_def, %struct.png_struct_def* %0, i64 0, i32 113
  %23 = load i8*, i8** %22, align 8
  %24 = icmp eq i8* %23, null
  %25 = select i1 %24, i32 0, i32 %21
  %26 = add i32 %25, %19
  %27 = icmp ugt i32 %26, 858993459
  br i1 %27, label %28, label %29

28:                                               ; preds = %17
  tail call void @cr_png_app_error(%struct.png_struct_def* nonnull %0, i8* getelementptr inbounds ([45 x i8], [45 x i8]* @.str.28, i64 0, i64 0)) #8
  br label %142

29:                                               ; preds = %17
  %30 = icmp eq i32 %1, 0
  br i1 %30, label %40, label %31

31:                                               ; preds = %29
  %32 = mul i32 %26, 5
  %33 = zext i32 %32 to i64
  %34 = tail call noalias i8* @cr_png_malloc(%struct.png_struct_def* nonnull %0, i64 %33) #8
  %35 = icmp eq i32 %25, 0
  br i1 %35, label %42, label %36

36:                                               ; preds = %31
  %37 = load i8*, i8** %22, align 8
  %38 = mul i32 %25, 5
  %39 = zext i32 %38 to i64
  tail call void @llvm.memcpy.p0i8.p0i8.i64(i8* align 1 %34, i8* align 1 %37, i64 %39, i1 false)
  br label %42

40:                                               ; preds = %29
  %41 = icmp eq i32 %25, 0
  br i1 %41, label %129, label %42

42:                                               ; preds = %40, %31, %36
  %43 = phi i8* [ %34, %36 ], [ %34, %31 ], [ %23, %40 ]
  %44 = icmp eq i8* %43, null
  br i1 %44, label %129, label %45

45:                                               ; preds = %42
  %46 = trunc i32 %1 to i8
  %47 = zext i32 %19 to i64
  br label %55

48:                                               ; preds = %82
  %49 = icmp eq i32 %83, 0
  br i1 %49, label %125, label %50

50:                                               ; preds = %48
  %51 = and i32 %83, 1
  %52 = icmp eq i32 %83, 1
  br i1 %52, label %107, label %53

53:                                               ; preds = %50
  %54 = sub i32 %83, %51
  br label %86

55:                                               ; preds = %82, %45
  %56 = phi i64 [ 0, %45 ], [ %84, %82 ]
  %57 = phi i32 [ %25, %45 ], [ %83, %82 ]
  %58 = mul i64 %56, 5
  %59 = and i64 %58, 4294967295
  %60 = getelementptr inbounds i8, i8* %18, i64 %59
  %61 = icmp eq i32 %57, 0
  br i1 %61, label %71, label %62

62:                                               ; preds = %55, %67
  %63 = phi i32 [ %68, %67 ], [ 0, %55 ]
  %64 = phi i8* [ %69, %67 ], [ %43, %55 ]
  %65 = tail call i32 @bcmp(i8* %64, i8* %60, i64 4) #8
  %66 = icmp eq i32 %65, 0
  br i1 %66, label %78, label %67

67:                                               ; preds = %62
  %68 = add nuw i32 %63, 1
  %69 = getelementptr inbounds i8, i8* %64, i64 5
  %70 = icmp eq i32 %68, %57
  br i1 %70, label %71, label %62

71:                                               ; preds = %67, %55
  %72 = phi i8* [ %43, %55 ], [ %69, %67 ]
  br i1 %30, label %82, label %73

73:                                               ; preds = %71
  %74 = add i32 %57, 1
  %75 = bitcast i8* %60 to i32*
  %76 = bitcast i8* %72 to i32*
  %77 = load i32, i32* %75, align 1
  store i32 %77, i32* %76, align 1
  br label %78

78:                                               ; preds = %62, %73
  %79 = phi i8* [ %72, %73 ], [ %64, %62 ]
  %80 = phi i32 [ %74, %73 ], [ %57, %62 ]
  %81 = getelementptr inbounds i8, i8* %79, i64 4
  store i8 %46, i8* %81, align 1
  br label %82

82:                                               ; preds = %78, %71
  %83 = phi i32 [ %57, %71 ], [ %80, %78 ]
  %84 = add nuw nsw i64 %56, 1
  %85 = icmp eq i64 %84, %47
  br i1 %85, label %48, label %55

86:                                               ; preds = %149, %53
  %87 = phi i8* [ %43, %53 ], [ %151, %149 ]
  %88 = phi i8* [ %43, %53 ], [ %152, %149 ]
  %89 = phi i32 [ 0, %53 ], [ %150, %149 ]
  %90 = phi i32 [ %54, %53 ], [ %153, %149 ]
  %91 = getelementptr inbounds i8, i8* %88, i64 4
  %92 = load i8, i8* %91, align 1
  %93 = icmp eq i8 %92, 0
  br i1 %93, label %100, label %94

94:                                               ; preds = %86
  %95 = icmp eq i8* %87, %88
  br i1 %95, label %97, label %96

96:                                               ; preds = %94
  tail call void @llvm.memcpy.p0i8.p0i8.i64(i8* align 1 %87, i8* align 1 %88, i64 5, i1 false)
  br label %97

97:                                               ; preds = %94, %96
  %98 = getelementptr inbounds i8, i8* %87, i64 5
  %99 = add i32 %89, 1
  br label %100

100:                                              ; preds = %86, %97
  %101 = phi i32 [ %99, %97 ], [ %89, %86 ]
  %102 = phi i8* [ %98, %97 ], [ %87, %86 ]
  %103 = getelementptr inbounds i8, i8* %88, i64 5
  %104 = getelementptr inbounds i8, i8* %88, i64 9
  %105 = load i8, i8* %104, align 1
  %106 = icmp eq i8 %105, 0
  br i1 %106, label %149, label %143

107:                                              ; preds = %149, %50
  %108 = phi i32 [ undef, %50 ], [ %150, %149 ]
  %109 = phi i8* [ %43, %50 ], [ %151, %149 ]
  %110 = phi i8* [ %43, %50 ], [ %152, %149 ]
  %111 = phi i32 [ 0, %50 ], [ %150, %149 ]
  %112 = icmp eq i32 %51, 0
  br i1 %112, label %122, label %113

113:                                              ; preds = %107
  %114 = getelementptr inbounds i8, i8* %110, i64 4
  %115 = load i8, i8* %114, align 1
  %116 = icmp eq i8 %115, 0
  br i1 %116, label %122, label %117

117:                                              ; preds = %113
  %118 = icmp eq i8* %109, %110
  br i1 %118, label %120, label %119

119:                                              ; preds = %117
  tail call void @llvm.memcpy.p0i8.p0i8.i64(i8* align 1 %109, i8* align 1 %110, i64 5, i1 false)
  br label %120

120:                                              ; preds = %119, %117
  %121 = add i32 %111, 1
  br label %122

122:                                              ; preds = %120, %113, %107
  %123 = phi i32 [ %108, %107 ], [ %121, %120 ], [ %111, %113 ]
  %124 = icmp eq i32 %123, 0
  br i1 %124, label %125, label %129

125:                                              ; preds = %48, %122
  %126 = load i8*, i8** %22, align 8
  %127 = icmp eq i8* %126, %43
  br i1 %127, label %133, label %128

128:                                              ; preds = %125
  tail call void @cr_png_free(%struct.png_struct_def* nonnull %0, i8* nonnull %43) #8
  br label %129

129:                                              ; preds = %40, %128, %122, %42
  %130 = phi i8* [ null, %42 ], [ null, %128 ], [ %43, %122 ], [ null, %40 ]
  %131 = phi i32 [ 0, %42 ], [ 0, %128 ], [ %123, %122 ], [ 0, %40 ]
  %132 = load i8*, i8** %22, align 8
  br label %133

133:                                              ; preds = %129, %125
  %134 = phi i8* [ %132, %129 ], [ %43, %125 ]
  %135 = phi i8* [ %130, %129 ], [ null, %125 ]
  %136 = phi i32 [ %131, %129 ], [ 0, %125 ]
  store i32 %136, i32* %20, align 4
  %137 = icmp eq i8* %134, %135
  br i1 %137, label %142, label %138

138:                                              ; preds = %133
  %139 = icmp eq i8* %134, null
  br i1 %139, label %141, label %140

140:                                              ; preds = %138
  tail call void @cr_png_free(%struct.png_struct_def* nonnull %0, i8* nonnull %134) #8
  br label %141

141:                                              ; preds = %138, %140
  store i8* %135, i8** %22, align 8
  br label %142

142:                                              ; preds = %141, %133, %11, %4, %28, %16, %8
  ret void

143:                                              ; preds = %100
  %144 = icmp eq i8* %102, %103
  br i1 %144, label %146, label %145

145:                                              ; preds = %143
  tail call void @llvm.memcpy.p0i8.p0i8.i64(i8* align 1 %102, i8* align 1 %103, i64 5, i1 false)
  br label %146

146:                                              ; preds = %145, %143
  %147 = getelementptr inbounds i8, i8* %102, i64 5
  %148 = add i32 %101, 1
  br label %149

149:                                              ; preds = %146, %100
  %150 = phi i32 [ %148, %146 ], [ %101, %100 ]
  %151 = phi i8* [ %147, %146 ], [ %102, %100 ]
  %152 = getelementptr inbounds i8, i8* %88, i64 10
  %153 = add i32 %90, -2
  %154 = icmp eq i32 %153, 0
  br i1 %154, label %107, label %86
}

; Function Attrs: nofree norecurse nounwind ssp uwtable writeonly
define hidden void @cr_png_set_read_user_chunk_fn(%struct.png_struct_def* noalias, i8*, i32 (%struct.png_struct_def*, %struct.png_unknown_chunk_t*)*) local_unnamed_addr #5 {
  %4 = icmp eq %struct.png_struct_def* %0, null
  br i1 %4, label %8, label %5

5:                                                ; preds = %3
  %6 = getelementptr inbounds %struct.png_struct_def, %struct.png_struct_def* %0, i64 0, i32 110
  store i32 (%struct.png_struct_def*, %struct.png_unknown_chunk_t*)* %2, i32 (%struct.png_struct_def*, %struct.png_unknown_chunk_t*)** %6, align 8
  %7 = getelementptr inbounds %struct.png_struct_def, %struct.png_struct_def* %0, i64 0, i32 109
  store i8* %1, i8** %7, align 8
  br label %8

8:                                                ; preds = %3, %5
  ret void
}

; Function Attrs: nounwind ssp uwtable
define hidden void @cr_png_set_rows(%struct.png_struct_def* noalias, %struct.png_info_def* noalias, i8**) local_unnamed_addr #0 {
  %4 = icmp eq %struct.png_struct_def* %0, null
  %5 = icmp eq %struct.png_info_def* %1, null
  %6 = or i1 %4, %5
  br i1 %6, label %20, label %7

7:                                                ; preds = %3
  %8 = getelementptr inbounds %struct.png_info_def, %struct.png_info_def* %1, i64 0, i32 30
  %9 = load i8**, i8*** %8, align 8
  %10 = icmp eq i8** %9, null
  %11 = icmp eq i8** %9, %2
  %12 = or i1 %10, %11
  br i1 %12, label %14, label %13

13:                                               ; preds = %7
  tail call void @cr_png_free_data(%struct.png_struct_def* nonnull %0, %struct.png_info_def* nonnull %1, i32 64, i32 0) #8
  br label %14

14:                                               ; preds = %7, %13
  store i8** %2, i8*** %8, align 8
  %15 = icmp eq i8** %2, null
  br i1 %15, label %20, label %16

16:                                               ; preds = %14
  %17 = getelementptr inbounds %struct.png_info_def, %struct.png_info_def* %1, i64 0, i32 2
  %18 = load i32, i32* %17, align 8
  %19 = or i32 %18, 32768
  store i32 %19, i32* %17, align 8
  br label %20

20:                                               ; preds = %14, %3, %16
  ret void
}

; Function Attrs: nounwind ssp uwtable
define hidden void @cr_png_set_compression_buffer_size(%struct.png_struct_def* noalias, i64) local_unnamed_addr #0 {
  %3 = icmp eq %struct.png_struct_def* %0, null
  br i1 %3, label %32, label %4

4:                                                ; preds = %2
  %5 = add i64 %1, -1
  %6 = icmp ugt i64 %5, 2147483646
  br i1 %6, label %7, label %8

7:                                                ; preds = %4
  tail call void @cr_png_error(%struct.png_struct_def* nonnull %0, i8* getelementptr inbounds ([32 x i8], [32 x i8]* @.str.29, i64 0, i64 0)) #9
  unreachable

8:                                                ; preds = %4
  %9 = getelementptr inbounds %struct.png_struct_def, %struct.png_struct_def* %0, i64 0, i32 15
  %10 = load i32, i32* %9, align 4
  %11 = trunc i32 %10 to i16
  %12 = icmp slt i16 %11, 0
  br i1 %12, label %13, label %16

13:                                               ; preds = %8
  %14 = trunc i64 %1 to i32
  %15 = getelementptr inbounds %struct.png_struct_def, %struct.png_struct_def* %0, i64 0, i32 131
  store i32 %14, i32* %15, align 8
  br label %32

16:                                               ; preds = %8
  %17 = getelementptr inbounds %struct.png_struct_def, %struct.png_struct_def* %0, i64 0, i32 18
  %18 = load i32, i32* %17, align 8
  %19 = icmp eq i32 %18, 0
  br i1 %19, label %21, label %20

20:                                               ; preds = %16
  tail call void @cr_png_warning(%struct.png_struct_def* nonnull %0, i8* getelementptr inbounds ([63 x i8], [63 x i8]* @.str.30, i64 0, i64 0)) #8
  br label %32

21:                                               ; preds = %16
  %22 = icmp ult i64 %1, 6
  br i1 %22, label %23, label %24

23:                                               ; preds = %21
  tail call void @cr_png_warning(%struct.png_struct_def* nonnull %0, i8* getelementptr inbounds ([50 x i8], [50 x i8]* @.str.32, i64 0, i64 0)) #8
  br label %32

24:                                               ; preds = %21
  %25 = getelementptr inbounds %struct.png_struct_def, %struct.png_struct_def* %0, i64 0, i32 21
  %26 = load i32, i32* %25, align 8
  %27 = zext i32 %26 to i64
  %28 = icmp eq i64 %27, %1
  br i1 %28, label %32, label %29

29:                                               ; preds = %24
  %30 = getelementptr inbounds %struct.png_struct_def, %struct.png_struct_def* %0, i64 0, i32 20
  tail call void @cr_png_free_buffer_list(%struct.png_struct_def* nonnull %0, %struct.png_compression_buffer** %30) #8
  %31 = trunc i64 %1 to i32
  store i32 %31, i32* %25, align 8
  br label %32

32:                                               ; preds = %24, %29, %2, %13, %20, %23
  ret void
}

declare void @cr_png_free_buffer_list(%struct.png_struct_def*, %struct.png_compression_buffer**) local_unnamed_addr #2

; Function Attrs: nofree norecurse nounwind ssp uwtable
define hidden void @cr_png_set_invalid(%struct.png_struct_def* noalias readnone, %struct.png_info_def* noalias, i32) local_unnamed_addr #6 {
  %4 = icmp ne %struct.png_struct_def* %0, null
  %5 = icmp ne %struct.png_info_def* %1, null
  %6 = and i1 %4, %5
  br i1 %6, label %7, label %12

7:                                                ; preds = %3
  %8 = xor i32 %2, -1
  %9 = getelementptr inbounds %struct.png_info_def, %struct.png_info_def* %1, i64 0, i32 2
  %10 = load i32, i32* %9, align 8
  %11 = and i32 %10, %8
  store i32 %11, i32* %9, align 8
  br label %12

12:                                               ; preds = %7, %3
  ret void
}

; Function Attrs: nofree norecurse nounwind ssp uwtable writeonly
define hidden void @cr_png_set_user_limits(%struct.png_struct_def* noalias, i32, i32) local_unnamed_addr #5 {
  %4 = icmp eq %struct.png_struct_def* %0, null
  br i1 %4, label %8, label %5

5:                                                ; preds = %3
  %6 = getelementptr inbounds %struct.png_struct_def, %struct.png_struct_def* %0, i64 0, i32 123
  store i32 %1, i32* %6, align 4
  %7 = getelementptr inbounds %struct.png_struct_def, %struct.png_struct_def* %0, i64 0, i32 124
  store i32 %2, i32* %7, align 8
  br label %8

8:                                                ; preds = %3, %5
  ret void
}

; Function Attrs: nofree norecurse nounwind ssp uwtable writeonly
define hidden void @cr_png_set_chunk_cache_max(%struct.png_struct_def* noalias, i32) local_unnamed_addr #5 {
  %3 = icmp eq %struct.png_struct_def* %0, null
  br i1 %3, label %6, label %4

4:                                                ; preds = %2
  %5 = getelementptr inbounds %struct.png_struct_def, %struct.png_struct_def* %0, i64 0, i32 125
  store i32 %1, i32* %5, align 4
  br label %6

6:                                                ; preds = %2, %4
  ret void
}

; Function Attrs: nofree norecurse nounwind ssp uwtable writeonly
define hidden void @cr_png_set_chunk_malloc_max(%struct.png_struct_def* noalias, i64) local_unnamed_addr #5 {
  %3 = icmp eq %struct.png_struct_def* %0, null
  br i1 %3, label %6, label %4

4:                                                ; preds = %2
  %5 = getelementptr inbounds %struct.png_struct_def, %struct.png_struct_def* %0, i64 0, i32 126
  store i64 %1, i64* %5, align 8
  br label %6

6:                                                ; preds = %2, %4
  ret void
}

; Function Attrs: nofree norecurse nounwind ssp uwtable
define hidden void @cr_png_set_benign_errors(%struct.png_struct_def* noalias nocapture, i32) local_unnamed_addr #6 {
  %3 = icmp eq i32 %1, 0
  %4 = getelementptr inbounds %struct.png_struct_def, %struct.png_struct_def* %0, i64 0, i32 16
  %5 = load i32, i32* %4, align 8
  %6 = and i32 %5, -7340033
  %7 = or i32 %5, 7340032
  %8 = select i1 %3, i32 %6, i32 %7
  store i32 %8, i32* %4, align 8
  ret void
}

; Function Attrs: nounwind ssp uwtable
define hidden i32 @cr_png_check_keyword(%struct.png_struct_def* noalias, i8*, i8* nocapture) local_unnamed_addr #0 {
  %4 = alloca [8 x [32 x i8]], align 16
  %5 = icmp eq i8* %1, null
  br i1 %5, label %10, label %6

6:                                                ; preds = %3
  %7 = load i8, i8* %1, align 1
  %8 = icmp eq i8 %7, 0
  br i1 %8, label %9, label %11

9:                                                ; preds = %6
  store i8 0, i8* %2, align 1
  br label %69

10:                                               ; preds = %3
  store i8 0, i8* %2, align 1
  br label %69

11:                                               ; preds = %6, %37
  %12 = phi i8 [ %42, %37 ], [ %7, %6 ]
  %13 = phi i32 [ %41, %37 ], [ 1, %6 ]
  %14 = phi i32 [ %40, %37 ], [ 0, %6 ]
  %15 = phi i32 [ %39, %37 ], [ 0, %6 ]
  %16 = phi i8* [ %38, %37 ], [ %2, %6 ]
  %17 = phi i8* [ %18, %37 ], [ %1, %6 ]
  %18 = getelementptr inbounds i8, i8* %17, i64 1
  %19 = zext i8 %12 to i32
  %20 = add i8 %12, -33
  %21 = icmp ult i8 %20, 94
  %22 = icmp ugt i8 %12, -96
  %23 = or i1 %22, %21
  br i1 %23, label %24, label %27

24:                                               ; preds = %11
  %25 = getelementptr inbounds i8, i8* %16, i64 1
  store i8 %12, i8* %16, align 1
  %26 = add nuw nsw i32 %15, 1
  br label %37

27:                                               ; preds = %11
  %28 = icmp eq i32 %13, 0
  br i1 %28, label %29, label %34

29:                                               ; preds = %27
  %30 = getelementptr inbounds i8, i8* %16, i64 1
  store i8 32, i8* %16, align 1
  %31 = add nuw nsw i32 %15, 1
  %32 = icmp eq i8 %12, 32
  %33 = select i1 %32, i32 %14, i32 %19
  br label %37

34:                                               ; preds = %27
  %35 = icmp eq i32 %14, 0
  %36 = select i1 %35, i32 %19, i32 %14
  br label %37

37:                                               ; preds = %34, %29, %24
  %38 = phi i8* [ %25, %24 ], [ %30, %29 ], [ %16, %34 ]
  %39 = phi i32 [ %26, %24 ], [ %31, %29 ], [ %15, %34 ]
  %40 = phi i32 [ %14, %24 ], [ %33, %29 ], [ %36, %34 ]
  %41 = phi i32 [ 0, %24 ], [ 1, %29 ], [ %13, %34 ]
  %42 = load i8, i8* %18, align 1
  %43 = icmp ne i8 %42, 0
  %44 = icmp ult i32 %39, 79
  %45 = and i1 %44, %43
  br i1 %45, label %11, label %46

46:                                               ; preds = %37
  %47 = icmp ne i32 %39, 0
  %48 = icmp ne i32 %41, 0
  %49 = and i1 %47, %48
  br i1 %49, label %50, label %55

50:                                               ; preds = %46
  %51 = add nsw i32 %39, -1
  %52 = getelementptr inbounds i8, i8* %38, i64 -1
  %53 = icmp eq i32 %40, 0
  %54 = select i1 %53, i32 32, i32 %40
  br label %55

55:                                               ; preds = %50, %46
  %56 = phi i8* [ %38, %46 ], [ %52, %50 ]
  %57 = phi i32 [ %39, %46 ], [ %51, %50 ]
  %58 = phi i32 [ %40, %46 ], [ %54, %50 ]
  store i8 0, i8* %56, align 1
  %59 = icmp eq i32 %57, 0
  br i1 %59, label %69, label %60

60:                                               ; preds = %55
  %61 = load i8, i8* %18, align 1
  %62 = icmp eq i8 %61, 0
  br i1 %62, label %64, label %63

63:                                               ; preds = %60
  tail call void @cr_png_warning(%struct.png_struct_def* %0, i8* getelementptr inbounds ([18 x i8], [18 x i8]* @.str.33, i64 0, i64 0)) #8
  br label %69

64:                                               ; preds = %60
  %65 = icmp eq i32 %58, 0
  br i1 %65, label %69, label %66

66:                                               ; preds = %64
  %67 = getelementptr inbounds [8 x [32 x i8]], [8 x [32 x i8]]* %4, i64 0, i64 0, i64 0
  call void @llvm.lifetime.start.p0i8(i64 256, i8* nonnull %67) #8
  call void @llvm.memset.p0i8.i64(i8* nonnull align 16 %67, i8 -86, i64 256, i1 false)
  %68 = getelementptr inbounds [8 x [32 x i8]], [8 x [32 x i8]]* %4, i64 0, i64 0
  call void @cr_png_warning_parameter([32 x i8]* nonnull %68, i32 1, i8* nonnull %1) #8
  call void @cr_png_warning_parameter_signed([32 x i8]* nonnull %68, i32 2, i32 4, i32 %58) #8
  call void @cr_png_formatted_warning(%struct.png_struct_def* %0, [32 x i8]* nonnull %68, i8* getelementptr inbounds ([35 x i8], [35 x i8]* @.str.34, i64 0, i64 0)) #8
  call void @llvm.lifetime.end.p0i8(i64 256, i8* nonnull %67) #8
  br label %69

69:                                               ; preds = %9, %63, %66, %64, %55, %10
  %70 = phi i32 [ 0, %10 ], [ 0, %55 ], [ %57, %64 ], [ %57, %66 ], [ %57, %63 ], [ 0, %9 ]
  ret i32 %70
}

declare void @cr_png_warning_parameter([32 x i8]*, i32, i8*) local_unnamed_addr #2

declare void @cr_png_warning_parameter_signed([32 x i8]*, i32, i32, i32) local_unnamed_addr #2

declare void @cr_png_formatted_warning(%struct.png_struct_def*, [32 x i8]*, i8*) local_unnamed_addr #2

declare void @cr_png_app_warning(%struct.png_struct_def*, i8*) local_unnamed_addr #2

; Function Attrs: nofree nounwind readonly
declare i32 @bcmp(i8* nocapture, i8* nocapture, i64) local_unnamed_addr #7

attributes #0 = { nounwind ssp uwtable "correctly-rounded-divide-sqrt-fp-math"="false" "disable-tail-calls"="false" "less-precise-fpmad"="false" "min-legal-vector-width"="0" "no-frame-pointer-elim"="false" "no-frame-pointer-elim-non-leaf" "no-infs-fp-math"="false" "no-jump-tables"="false" "no-nans-fp-math"="false" "no-signed-zeros-fp-math"="false" "no-trapping-math"="false" "null-pointer-is-valid"="true" "stack-protector-buffer-size"="4" "target-cpu"="x86-64" "target-features"="+cx8,+fxsr,+mmx,+sse,+sse2,+sse3,+x87" "unsafe-fp-math"="false" "use-soft-float"="false" }
attributes #1 = { argmemonly nounwind }
attributes #2 = { "correctly-rounded-divide-sqrt-fp-math"="false" "disable-tail-calls"="false" "less-precise-fpmad"="false" "no-frame-pointer-elim"="false" "no-frame-pointer-elim-non-leaf" "no-infs-fp-math"="false" "no-nans-fp-math"="false" "no-signed-zeros-fp-math"="false" "no-trapping-math"="false" "null-pointer-is-valid"="true" "stack-protector-buffer-size"="4" "target-cpu"="x86-64" "target-features"="+cx8,+fxsr,+mmx,+sse,+sse2,+sse3,+x87" "unsafe-fp-math"="false" "use-soft-float"="false" }
attributes #3 = { noreturn "correctly-rounded-divide-sqrt-fp-math"="false" "disable-tail-calls"="false" "less-precise-fpmad"="false" "no-frame-pointer-elim"="false" "no-frame-pointer-elim-non-leaf" "no-infs-fp-math"="false" "no-nans-fp-math"="false" "no-signed-zeros-fp-math"="false" "no-trapping-math"="false" "null-pointer-is-valid"="true" "stack-protector-buffer-size"="4" "target-cpu"="x86-64" "target-features"="+cx8,+fxsr,+mmx,+sse,+sse2,+sse3,+x87" "unsafe-fp-math"="false" "use-soft-float"="false" }
attributes #4 = { argmemonly nofree nounwind readonly "correctly-rounded-divide-sqrt-fp-math"="false" "disable-tail-calls"="false" "less-precise-fpmad"="false" "no-frame-pointer-elim"="false" "no-frame-pointer-elim-non-leaf" "no-infs-fp-math"="false" "no-nans-fp-math"="false" "no-signed-zeros-fp-math"="false" "no-trapping-math"="false" "null-pointer-is-valid"="true" "stack-protector-buffer-size"="4" "target-cpu"="x86-64" "target-features"="+cx8,+fxsr,+mmx,+sse,+sse2,+sse3,+x87" "unsafe-fp-math"="false" "use-soft-float"="false" }
attributes #5 = { nofree norecurse nounwind ssp uwtable writeonly "correctly-rounded-divide-sqrt-fp-math"="false" "disable-tail-calls"="false" "less-precise-fpmad"="false" "min-legal-vector-width"="0" "no-frame-pointer-elim"="false" "no-frame-pointer-elim-non-leaf" "no-infs-fp-math"="false" "no-jump-tables"="false" "no-nans-fp-math"="false" "no-signed-zeros-fp-math"="false" "no-trapping-math"="false" "null-pointer-is-valid"="true" "stack-protector-buffer-size"="4" "target-cpu"="x86-64" "target-features"="+cx8,+fxsr,+mmx,+sse,+sse2,+sse3,+x87" "unsafe-fp-math"="false" "use-soft-float"="false" }
attributes #6 = { nofree norecurse nounwind ssp uwtable "correctly-rounded-divide-sqrt-fp-math"="false" "disable-tail-calls"="false" "less-precise-fpmad"="false" "min-legal-vector-width"="0" "no-frame-pointer-elim"="false" "no-frame-pointer-elim-non-leaf" "no-infs-fp-math"="false" "no-jump-tables"="false" "no-nans-fp-math"="false" "no-signed-zeros-fp-math"="false" "no-trapping-math"="false" "null-pointer-is-valid"="true" "stack-protector-buffer-size"="4" "target-cpu"="x86-64" "target-features"="+cx8,+fxsr,+mmx,+sse,+sse2,+sse3,+x87" "unsafe-fp-math"="false" "use-soft-float"="false" }
attributes #7 = { nofree nounwind readonly }
attributes #8 = { nounwind }
attributes #9 = { noreturn nounwind }
attributes #10 = { nounwind readonly }

!llvm.module.flags = !{!0, !1}

!0 = !{i32 1, !"wchar_size", i32 4}
!1 = !{i32 7, !"PIC Level", i32 2}
!2 = !{!3, !5}
!3 = distinct !{!3, !4, !"cr_png_set_cHRM_fixed: argument 0"}
!4 = distinct !{!4, !"cr_png_set_cHRM_fixed"}
!5 = distinct !{!5, !4, !"cr_png_set_cHRM_fixed: argument 1"}
!6 = !{!5}
!7 = !{!3}
!8 = !{!9, !11}
!9 = distinct !{!9, !10, !"cr_png_set_cHRM_XYZ_fixed: argument 0"}
!10 = distinct !{!10, !"cr_png_set_cHRM_XYZ_fixed"}
!11 = distinct !{!11, !10, !"cr_png_set_cHRM_XYZ_fixed: argument 1"}
!12 = !{!11}
!13 = !{!9}
!14 = !{!15}
!15 = distinct !{!15, !16, !"check_location: argument 0"}
!16 = distinct !{!16, !"check_location"}
!17 = !{!18}
!18 = distinct !{!18, !19, !"check_location: argument 0"}
!19 = distinct !{!19, !"check_location"}
