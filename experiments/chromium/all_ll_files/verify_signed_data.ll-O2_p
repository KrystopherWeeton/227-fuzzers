; ModuleID = '../../net/cert/internal/verify_signed_data.cc'
source_filename = "../../net/cert/internal/verify_signed_data.cc"
target datalayout = "e-m:e-i64:64-f80:128-n8:16:32:64-S128"
target triple = "x86_64-unknown-linux-gnu"

module asm ".symver exp, exp@GLIBC_2.2.5"
module asm ".symver exp2, exp2@GLIBC_2.2.5"
module asm ".symver exp2f, exp2f@GLIBC_2.2.5"
module asm ".symver expf, expf@GLIBC_2.2.5"
module asm ".symver lgamma, lgamma@GLIBC_2.2.5"
module asm ".symver lgammaf, lgammaf@GLIBC_2.2.5"
module asm ".symver lgammal, lgammal@GLIBC_2.2.5"
module asm ".symver log, log@GLIBC_2.2.5"
module asm ".symver log2, log2@GLIBC_2.2.5"
module asm ".symver log2f, log2f@GLIBC_2.2.5"
module asm ".symver logf, logf@GLIBC_2.2.5"
module asm ".symver pow, pow@GLIBC_2.2.5"
module asm ".symver powf, powf@GLIBC_2.2.5"

%"class.net::der::Input" = type { i8*, i64 }
%"class.std::__1::unique_ptr" = type { %"class.std::__1::__compressed_pair" }
%"class.std::__1::__compressed_pair" = type { %"struct.std::__1::__compressed_pair_elem" }
%"struct.std::__1::__compressed_pair_elem" = type { %struct.evp_pkey_st* }
%struct.evp_pkey_st = type { i32, i32, %union.anon, %struct.evp_pkey_asn1_method_st* }
%union.anon = type { i8* }
%struct.evp_pkey_asn1_method_st = type opaque
%"class.crypto::OpenSSLErrStackTracer" = type { %"class.base::Location" }
%"class.base::Location" = type { i8*, i8*, i32, i8* }
%struct.cbs_st = type { i8*, i64 }
%"class.net::SignatureAlgorithm" = type { i32, i32, %"class.std::__1::unique_ptr.1" }
%"class.std::__1::unique_ptr.1" = type { %"class.std::__1::__compressed_pair.2" }
%"class.std::__1::__compressed_pair.2" = type { %"struct.std::__1::__compressed_pair_elem.3" }
%"struct.std::__1::__compressed_pair_elem.3" = type { %"class.net::SignatureAlgorithmParameters"* }
%"class.net::SignatureAlgorithmParameters" = type { i32 (...)** }
%"class.net::der::BitString" = type <{ %"class.net::der::Input", i8, [7 x i8] }>
%"class.bssl::internal::StackAllocated" = type { %struct.env_md_ctx_st }
%struct.env_md_ctx_st = type { %struct.env_md_st*, i8*, %struct.evp_pkey_ctx_st*, %struct.evp_md_pctx_ops* }
%struct.env_md_st = type opaque
%struct.evp_pkey_ctx_st = type opaque
%struct.evp_md_pctx_ops = type opaque
%struct.engine_st = type opaque
%"class.net::RsaPssParameters" = type { %"class.net::SignatureAlgorithmParameters", i32, i32 }

@.str = private unnamed_addr constant [15 x i8] c"ParsePublicKey\00", align 1
@.str.1 = private unnamed_addr constant [46 x i8] c"../../net/cert/internal/verify_signed_data.cc\00", align 1
@.str.2 = private unnamed_addr constant [17 x i8] c"VerifySignedData\00", align 1

; Function Attrs: nounwind ssp uwtable
define hidden zeroext i1 @_ZN3net14ParsePublicKeyERKNS_3der5InputEPNSt3__110unique_ptrI11evp_pkey_stN4bssl8internal7DeleterIS6_EEEE(%"class.net::der::Input"* nocapture readonly dereferenceable(16), %"class.std::__1::unique_ptr"* nocapture) local_unnamed_addr #0 {
  %3 = alloca %"class.crypto::OpenSSLErrStackTracer", align 8
  %4 = alloca %"class.base::Location", align 8
  %5 = alloca %struct.cbs_st, align 8
  %6 = bitcast %"class.crypto::OpenSSLErrStackTracer"* %3 to i8*
  call void @llvm.lifetime.start.p0i8(i64 32, i8* nonnull %6) #3
  call void @llvm.memset.p0i8.i64(i8* nonnull align 8 %6, i8 -86, i64 32, i1 false)
  %7 = bitcast %"class.base::Location"* %4 to i8*
  call void @llvm.lifetime.start.p0i8(i64 32, i8* nonnull %7) #3
  call void @_ZN4base8Location7CurrentEPKcS2_i(%"class.base::Location"* nonnull sret %4, i8* getelementptr inbounds ([15 x i8], [15 x i8]* @.str, i64 0, i64 0), i8* getelementptr inbounds ([46 x i8], [46 x i8]* @.str.1, i64 0, i64 0), i32 171) #3
  %8 = getelementptr inbounds %"class.crypto::OpenSSLErrStackTracer", %"class.crypto::OpenSSLErrStackTracer"* %3, i64 0, i32 0
  call void @_ZN4base8LocationC1ERKS0_(%"class.base::Location"* nonnull %8, %"class.base::Location"* nonnull dereferenceable(32) %4) #3
  call void @_ZN6crypto17EnsureOpenSSLInitEv() #3
  call void @llvm.lifetime.end.p0i8(i64 32, i8* nonnull %7) #3
  %9 = bitcast %struct.cbs_st* %5 to i8*
  call void @llvm.lifetime.start.p0i8(i64 16, i8* nonnull %9) #3
  %10 = getelementptr inbounds %"class.net::der::Input", %"class.net::der::Input"* %0, i64 0, i32 0
  %11 = bitcast %struct.cbs_st* %5 to i8*
  call void @llvm.memset.p0i8.i64(i8* nonnull align 8 %11, i8 -86, i64 16, i1 false)
  %12 = load i8*, i8** %10, align 8
  %13 = getelementptr inbounds %"class.net::der::Input", %"class.net::der::Input"* %0, i64 0, i32 1
  %14 = load i64, i64* %13, align 8
  call void @CBS_init(%struct.cbs_st* nonnull %5, i8* %12, i64 %14) #3
  %15 = call %struct.evp_pkey_st* @EVP_parse_public_key(%struct.cbs_st* nonnull %5) #3
  %16 = getelementptr inbounds %"class.std::__1::unique_ptr", %"class.std::__1::unique_ptr"* %1, i64 0, i32 0, i32 0, i32 0
  %17 = load %struct.evp_pkey_st*, %struct.evp_pkey_st** %16, align 8
  store %struct.evp_pkey_st* %15, %struct.evp_pkey_st** %16, align 8
  %18 = icmp eq %struct.evp_pkey_st* %17, null
  br i1 %18, label %21, label %19

19:                                               ; preds = %2
  call void @EVP_PKEY_free(%struct.evp_pkey_st* nonnull %17) #3
  %20 = load %struct.evp_pkey_st*, %struct.evp_pkey_st** %16, align 8
  br label %21

21:                                               ; preds = %2, %19
  %22 = phi %struct.evp_pkey_st* [ %15, %2 ], [ %20, %19 ]
  %23 = icmp eq %struct.evp_pkey_st* %22, null
  br i1 %23, label %24, label %25

24:                                               ; preds = %21
  store %struct.evp_pkey_st* null, %struct.evp_pkey_st** %16, align 8
  br label %32

25:                                               ; preds = %21
  %26 = call i64 @CBS_len(%struct.cbs_st* nonnull %5) #3
  %27 = icmp eq i64 %26, 0
  br i1 %27, label %32, label %28

28:                                               ; preds = %25
  %29 = load %struct.evp_pkey_st*, %struct.evp_pkey_st** %16, align 8
  store %struct.evp_pkey_st* null, %struct.evp_pkey_st** %16, align 8
  %30 = icmp eq %struct.evp_pkey_st* %29, null
  br i1 %30, label %32, label %31

31:                                               ; preds = %28
  call void @EVP_PKEY_free(%struct.evp_pkey_st* nonnull %29) #3
  br label %32

32:                                               ; preds = %24, %31, %28, %25
  %33 = phi i1 [ true, %25 ], [ false, %28 ], [ false, %31 ], [ false, %24 ]
  call void @llvm.lifetime.end.p0i8(i64 16, i8* nonnull %9) #3
  call void @_ZN6crypto20ClearOpenSSLERRStackERKN4base8LocationE(%"class.base::Location"* nonnull dereferenceable(32) %8) #3
  call void @llvm.lifetime.end.p0i8(i64 32, i8* nonnull %6) #3
  ret i1 %33
}

; Function Attrs: argmemonly nounwind
declare void @llvm.lifetime.start.p0i8(i64 immarg, i8* nocapture) #1

declare void @_ZN4base8Location7CurrentEPKcS2_i(%"class.base::Location"* sret, i8*, i8*, i32) local_unnamed_addr #2

; Function Attrs: argmemonly nounwind
declare void @llvm.lifetime.end.p0i8(i64 immarg, i8* nocapture) #1

declare void @CBS_init(%struct.cbs_st*, i8*, i64) local_unnamed_addr #2

declare %struct.evp_pkey_st* @EVP_parse_public_key(%struct.cbs_st*) local_unnamed_addr #2

declare i64 @CBS_len(%struct.cbs_st*) local_unnamed_addr #2

; Function Attrs: nounwind ssp uwtable
define hidden zeroext i1 @_ZN3net16VerifySignedDataERKNS_18SignatureAlgorithmERKNS_3der5InputERKNS3_9BitStringEP11evp_pkey_st(%"class.net::SignatureAlgorithm"* dereferenceable(16), %"class.net::der::Input"* nocapture readonly dereferenceable(16), %"class.net::der::BitString"* nocapture readonly dereferenceable(24), %struct.evp_pkey_st*) local_unnamed_addr #0 {
  %5 = alloca %"class.crypto::OpenSSLErrStackTracer", align 8
  %6 = alloca %"class.base::Location", align 8
  %7 = alloca %"class.bssl::internal::StackAllocated", align 8
  %8 = alloca %struct.evp_pkey_ctx_st*, align 8
  %9 = getelementptr inbounds %"class.net::SignatureAlgorithm", %"class.net::SignatureAlgorithm"* %0, i64 0, i32 0
  %10 = load i32, i32* %9, align 8
  switch i32 %10, label %13 [
    i32 3, label %94
    i32 0, label %11
    i32 1, label %11
    i32 2, label %12
  ]

11:                                               ; preds = %4, %4
  br label %13

12:                                               ; preds = %4
  br label %13

13:                                               ; preds = %4, %12, %11
  %14 = phi i32 [ -1, %4 ], [ 408, %12 ], [ 6, %11 ]
  %15 = tail call i32 @EVP_PKEY_id(%struct.evp_pkey_st* %3) #3
  %16 = icmp eq i32 %14, %15
  br i1 %16, label %17, label %94

17:                                               ; preds = %13
  %18 = getelementptr inbounds %"class.net::der::BitString", %"class.net::der::BitString"* %2, i64 0, i32 1
  %19 = load i8, i8* %18, align 8
  %20 = icmp eq i8 %19, 0
  br i1 %20, label %21, label %94

21:                                               ; preds = %17
  %22 = bitcast %"class.crypto::OpenSSLErrStackTracer"* %5 to i8*
  call void @llvm.lifetime.start.p0i8(i64 32, i8* nonnull %22) #3
  call void @llvm.memset.p0i8.i64(i8* nonnull align 8 %22, i8 -86, i64 32, i1 false)
  %23 = bitcast %"class.base::Location"* %6 to i8*
  call void @llvm.lifetime.start.p0i8(i64 32, i8* nonnull %23) #3
  call void @_ZN4base8Location7CurrentEPKcS2_i(%"class.base::Location"* nonnull sret %6, i8* getelementptr inbounds ([17 x i8], [17 x i8]* @.str.2, i64 0, i64 0), i8* getelementptr inbounds ([46 x i8], [46 x i8]* @.str.1, i64 0, i64 0), i32 214) #3
  %24 = getelementptr inbounds %"class.crypto::OpenSSLErrStackTracer", %"class.crypto::OpenSSLErrStackTracer"* %5, i64 0, i32 0
  call void @_ZN4base8LocationC1ERKS0_(%"class.base::Location"* nonnull %24, %"class.base::Location"* nonnull dereferenceable(32) %6) #3
  call void @_ZN6crypto17EnsureOpenSSLInitEv() #3
  call void @llvm.lifetime.end.p0i8(i64 32, i8* nonnull %23) #3
  %25 = bitcast %"class.bssl::internal::StackAllocated"* %7 to i8*
  call void @llvm.lifetime.start.p0i8(i64 32, i8* nonnull %25) #3
  %26 = getelementptr inbounds %"class.bssl::internal::StackAllocated", %"class.bssl::internal::StackAllocated"* %7, i64 0, i32 0
  %27 = bitcast %"class.bssl::internal::StackAllocated"* %7 to i8*
  call void @llvm.memset.p0i8.i64(i8* nonnull align 8 %27, i8 -86, i64 32, i1 false)
  call void @EVP_MD_CTX_init(%struct.env_md_ctx_st* nonnull %26) #3
  %28 = bitcast %struct.evp_pkey_ctx_st** %8 to i8*
  call void @llvm.lifetime.start.p0i8(i64 8, i8* nonnull %28) #3
  store %struct.evp_pkey_ctx_st* null, %struct.evp_pkey_ctx_st** %8, align 8
  %29 = getelementptr inbounds %"class.net::SignatureAlgorithm", %"class.net::SignatureAlgorithm"* %0, i64 0, i32 1
  %30 = load i32, i32* %29, align 4
  switch i32 %30, label %91 [
    i32 6, label %37
    i32 5, label %35
    i32 4, label %33
    i32 3, label %31
  ]

31:                                               ; preds = %21
  %32 = call %struct.env_md_st* @EVP_sha1() #3
  br label %39

33:                                               ; preds = %21
  %34 = call %struct.env_md_st* @EVP_sha256() #3
  br label %39

35:                                               ; preds = %21
  %36 = call %struct.env_md_st* @EVP_sha384() #3
  br label %39

37:                                               ; preds = %21
  %38 = call %struct.env_md_st* @EVP_sha512() #3
  br label %39

39:                                               ; preds = %31, %33, %35, %37
  %40 = phi %struct.env_md_st* [ %32, %31 ], [ %34, %33 ], [ %36, %35 ], [ %38, %37 ]
  %41 = icmp eq %struct.env_md_st* %40, null
  br i1 %41, label %91, label %42

42:                                               ; preds = %39
  %43 = call i32 @EVP_DigestVerifyInit(%struct.env_md_ctx_st* nonnull %26, %struct.evp_pkey_ctx_st** nonnull %8, %struct.env_md_st* nonnull %40, %struct.engine_st* null, %struct.evp_pkey_st* %3) #3
  %44 = icmp eq i32 %43, 0
  br i1 %44, label %91, label %45

45:                                               ; preds = %42
  %46 = load i32, i32* %9, align 8
  %47 = icmp eq i32 %46, 1
  br i1 %47, label %48, label %77

48:                                               ; preds = %45
  %49 = call %"class.net::RsaPssParameters"* @_ZNK3net18SignatureAlgorithm15ParamsForRsaPssEv(%"class.net::SignatureAlgorithm"* %0) #3
  %50 = load %struct.evp_pkey_ctx_st*, %struct.evp_pkey_ctx_st** %8, align 8
  %51 = getelementptr inbounds %"class.net::RsaPssParameters", %"class.net::RsaPssParameters"* %49, i64 0, i32 2
  %52 = load i32, i32* %51, align 4
  %53 = icmp sgt i32 %52, -1
  br i1 %53, label %54, label %91

54:                                               ; preds = %48
  %55 = getelementptr inbounds %"class.net::RsaPssParameters", %"class.net::RsaPssParameters"* %49, i64 0, i32 1
  %56 = load i32, i32* %55, align 8
  switch i32 %56, label %91 [
    i32 6, label %63
    i32 5, label %61
    i32 4, label %59
    i32 3, label %57
  ]

57:                                               ; preds = %54
  %58 = call %struct.env_md_st* @EVP_sha1() #3
  br label %65

59:                                               ; preds = %54
  %60 = call %struct.env_md_st* @EVP_sha256() #3
  br label %65

61:                                               ; preds = %54
  %62 = call %struct.env_md_st* @EVP_sha384() #3
  br label %65

63:                                               ; preds = %54
  %64 = call %struct.env_md_st* @EVP_sha512() #3
  br label %65

65:                                               ; preds = %63, %61, %59, %57
  %66 = phi %struct.env_md_st* [ %58, %57 ], [ %60, %59 ], [ %62, %61 ], [ %64, %63 ]
  %67 = icmp eq %struct.env_md_st* %66, null
  br i1 %67, label %91, label %68

68:                                               ; preds = %65
  %69 = call i32 @EVP_PKEY_CTX_set_rsa_padding(%struct.evp_pkey_ctx_st* %50, i32 6) #3
  %70 = icmp eq i32 %69, 0
  br i1 %70, label %91, label %71

71:                                               ; preds = %68
  %72 = call i32 @EVP_PKEY_CTX_set_rsa_mgf1_md(%struct.evp_pkey_ctx_st* %50, %struct.env_md_st* nonnull %66) #3
  %73 = icmp eq i32 %72, 0
  br i1 %73, label %91, label %74

74:                                               ; preds = %71
  %75 = call i32 @EVP_PKEY_CTX_set_rsa_pss_saltlen(%struct.evp_pkey_ctx_st* %50, i32 %52) #3
  %76 = icmp eq i32 %75, 0
  br i1 %76, label %91, label %77

77:                                               ; preds = %74, %45
  %78 = getelementptr inbounds %"class.net::der::Input", %"class.net::der::Input"* %1, i64 0, i32 0
  %79 = load i8*, i8** %78, align 8
  %80 = getelementptr inbounds %"class.net::der::Input", %"class.net::der::Input"* %1, i64 0, i32 1
  %81 = load i64, i64* %80, align 8
  %82 = call i32 @EVP_DigestVerifyUpdate(%struct.env_md_ctx_st* nonnull %26, i8* %79, i64 %81) #3
  %83 = icmp eq i32 %82, 0
  br i1 %83, label %91, label %84

84:                                               ; preds = %77
  %85 = getelementptr inbounds %"class.net::der::BitString", %"class.net::der::BitString"* %2, i64 0, i32 0, i32 0
  %86 = load i8*, i8** %85, align 8
  %87 = getelementptr inbounds %"class.net::der::BitString", %"class.net::der::BitString"* %2, i64 0, i32 0, i32 1
  %88 = load i64, i64* %87, align 8
  %89 = call i32 @EVP_DigestVerifyFinal(%struct.env_md_ctx_st* nonnull %26, i8* %86, i64 %88) #3
  %90 = icmp eq i32 %89, 1
  br label %91

91:                                               ; preds = %74, %39, %54, %68, %71, %65, %48, %21, %77, %42, %84
  %92 = phi i1 [ %90, %84 ], [ false, %39 ], [ false, %42 ], [ false, %74 ], [ false, %77 ], [ false, %21 ], [ false, %48 ], [ false, %65 ], [ false, %71 ], [ false, %68 ], [ false, %54 ]
  call void @llvm.lifetime.end.p0i8(i64 8, i8* nonnull %28) #3
  %93 = call i32 @EVP_MD_CTX_cleanup(%struct.env_md_ctx_st* nonnull %26) #3
  call void @llvm.lifetime.end.p0i8(i64 32, i8* nonnull %25) #3
  call void @_ZN6crypto20ClearOpenSSLERRStackERKN4base8LocationE(%"class.base::Location"* nonnull dereferenceable(32) %24) #3
  call void @llvm.lifetime.end.p0i8(i64 32, i8* nonnull %22) #3
  br label %94

94:                                               ; preds = %17, %13, %4, %91
  %95 = phi i1 [ %92, %91 ], [ false, %4 ], [ false, %13 ], [ false, %17 ]
  ret i1 %95
}

declare i32 @EVP_PKEY_id(%struct.evp_pkey_st*) local_unnamed_addr #2

declare i32 @EVP_DigestVerifyInit(%struct.env_md_ctx_st*, %struct.evp_pkey_ctx_st**, %struct.env_md_st*, %struct.engine_st*, %struct.evp_pkey_st*) local_unnamed_addr #2

declare %"class.net::RsaPssParameters"* @_ZNK3net18SignatureAlgorithm15ParamsForRsaPssEv(%"class.net::SignatureAlgorithm"*) local_unnamed_addr #2

declare i32 @EVP_DigestVerifyUpdate(%struct.env_md_ctx_st*, i8*, i64) local_unnamed_addr #2

declare i32 @EVP_DigestVerifyFinal(%struct.env_md_ctx_st*, i8*, i64) local_unnamed_addr #2

; Function Attrs: nounwind ssp uwtable
define hidden zeroext i1 @_ZN3net16VerifySignedDataERKNS_18SignatureAlgorithmERKNS_3der5InputERKNS3_9BitStringES6_(%"class.net::SignatureAlgorithm"* dereferenceable(16), %"class.net::der::Input"* nocapture readonly dereferenceable(16), %"class.net::der::BitString"* nocapture readonly dereferenceable(24), %"class.net::der::Input"* nocapture readonly dereferenceable(16)) local_unnamed_addr #0 {
  %5 = alloca %"class.std::__1::unique_ptr", align 8
  %6 = bitcast %"class.std::__1::unique_ptr"* %5 to i8*
  call void @llvm.lifetime.start.p0i8(i64 8, i8* nonnull %6) #3
  %7 = getelementptr inbounds %"class.std::__1::unique_ptr", %"class.std::__1::unique_ptr"* %5, i64 0, i32 0, i32 0, i32 0
  %8 = bitcast %"class.std::__1::unique_ptr"* %5 to i64*
  store i64 0, i64* %8, align 8
  %9 = call zeroext i1 @_ZN3net14ParsePublicKeyERKNS_3der5InputEPNSt3__110unique_ptrI11evp_pkey_stN4bssl8internal7DeleterIS6_EEEE(%"class.net::der::Input"* dereferenceable(16) %3, %"class.std::__1::unique_ptr"* nonnull %5)
  %10 = load %struct.evp_pkey_st*, %struct.evp_pkey_st** %7, align 8
  br i1 %9, label %11, label %13

11:                                               ; preds = %4
  %12 = tail call zeroext i1 @_ZN3net16VerifySignedDataERKNS_18SignatureAlgorithmERKNS_3der5InputERKNS3_9BitStringEP11evp_pkey_st(%"class.net::SignatureAlgorithm"* dereferenceable(16) %0, %"class.net::der::Input"* dereferenceable(16) %1, %"class.net::der::BitString"* dereferenceable(24) %2, %struct.evp_pkey_st* %10)
  br label %13

13:                                               ; preds = %4, %11
  %14 = phi i1 [ %12, %11 ], [ false, %4 ]
  store %struct.evp_pkey_st* null, %struct.evp_pkey_st** %7, align 8
  %15 = icmp eq %struct.evp_pkey_st* %10, null
  br i1 %15, label %17, label %16

16:                                               ; preds = %13
  tail call void @EVP_PKEY_free(%struct.evp_pkey_st* nonnull %10) #3
  br label %17

17:                                               ; preds = %13, %16
  call void @llvm.lifetime.end.p0i8(i64 8, i8* nonnull %6) #3
  ret i1 %14
}

declare void @_ZN4base8LocationC1ERKS0_(%"class.base::Location"*, %"class.base::Location"* dereferenceable(32)) unnamed_addr #2

declare void @_ZN6crypto17EnsureOpenSSLInitEv() local_unnamed_addr #2

declare void @_ZN6crypto20ClearOpenSSLERRStackERKN4base8LocationE(%"class.base::Location"* dereferenceable(32)) local_unnamed_addr #2

declare %struct.env_md_st* @EVP_sha1() local_unnamed_addr #2

declare %struct.env_md_st* @EVP_sha256() local_unnamed_addr #2

declare %struct.env_md_st* @EVP_sha384() local_unnamed_addr #2

declare %struct.env_md_st* @EVP_sha512() local_unnamed_addr #2

declare i32 @EVP_PKEY_CTX_set_rsa_padding(%struct.evp_pkey_ctx_st*, i32) local_unnamed_addr #2

declare i32 @EVP_PKEY_CTX_set_rsa_mgf1_md(%struct.evp_pkey_ctx_st*, %struct.env_md_st*) local_unnamed_addr #2

declare i32 @EVP_PKEY_CTX_set_rsa_pss_saltlen(%struct.evp_pkey_ctx_st*, i32) local_unnamed_addr #2

declare void @EVP_PKEY_free(%struct.evp_pkey_st*) local_unnamed_addr #2

declare void @EVP_MD_CTX_init(%struct.env_md_ctx_st*) local_unnamed_addr #2

declare i32 @EVP_MD_CTX_cleanup(%struct.env_md_ctx_st*) local_unnamed_addr #2

; Function Attrs: argmemonly nounwind
declare void @llvm.memset.p0i8.i64(i8* nocapture writeonly, i8, i64, i1 immarg) #1

attributes #0 = { nounwind ssp uwtable "correctly-rounded-divide-sqrt-fp-math"="false" "disable-tail-calls"="false" "less-precise-fpmad"="false" "min-legal-vector-width"="0" "no-frame-pointer-elim"="false" "no-frame-pointer-elim-non-leaf" "no-infs-fp-math"="false" "no-jump-tables"="false" "no-nans-fp-math"="false" "no-signed-zeros-fp-math"="false" "no-trapping-math"="false" "null-pointer-is-valid"="true" "stack-protector-buffer-size"="4" "target-cpu"="x86-64" "target-features"="+cx8,+fxsr,+mmx,+sse,+sse2,+sse3,+x87" "unsafe-fp-math"="false" "use-soft-float"="false" }
attributes #1 = { argmemonly nounwind }
attributes #2 = { "correctly-rounded-divide-sqrt-fp-math"="false" "disable-tail-calls"="false" "less-precise-fpmad"="false" "no-frame-pointer-elim"="false" "no-frame-pointer-elim-non-leaf" "no-infs-fp-math"="false" "no-nans-fp-math"="false" "no-signed-zeros-fp-math"="false" "no-trapping-math"="false" "null-pointer-is-valid"="true" "stack-protector-buffer-size"="4" "target-cpu"="x86-64" "target-features"="+cx8,+fxsr,+mmx,+sse,+sse2,+sse3,+x87" "unsafe-fp-math"="false" "use-soft-float"="false" }
attributes #3 = { nounwind }

!llvm.module.flags = !{!0, !1}

!0 = !{i32 1, !"wchar_size", i32 4}
!1 = !{i32 7, !"PIC Level", i32 2}
