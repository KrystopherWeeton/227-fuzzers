; ModuleID = '../../gpu/command_buffer/service/shared_image_backing_factory_ozone.cc'
source_filename = "../../gpu/command_buffer/service/shared_image_backing_factory_ozone.cc"
target datalayout = "e-m:e-i64:64-f80:128-n8:16:32:64-S128"
target triple = "x86_64-unknown-linux-gnu"

module asm ".symver exp, exp@GLIBC_2.2.5"
module asm ".symver exp2, exp2@GLIBC_2.2.5"
module asm ".symver exp2f, exp2f@GLIBC_2.2.5"
module asm ".symver expf, expf@GLIBC_2.2.5"
module asm ".symver lgamma, lgamma@GLIBC_2.2.5"
module asm ".symver lgammaf, lgammaf@GLIBC_2.2.5"
module asm ".symver lgammal, lgammal@GLIBC_2.2.5"
module asm ".symver log, log@GLIBC_2.2.5"
module asm ".symver log2, log2@GLIBC_2.2.5"
module asm ".symver log2f, log2f@GLIBC_2.2.5"
module asm ".symver logf, logf@GLIBC_2.2.5"
module asm ".symver pow, pow@GLIBC_2.2.5"
module asm ".symver powf, powf@GLIBC_2.2.5"

%"class.gpu::SharedImageBackingFactoryOzone" = type { %"class.gpu::SharedImageBackingFactory", %"class.gpu::SharedContextState"*, %class.scoped_refptr.124 }
%"class.gpu::SharedImageBackingFactory" = type { i32 (...)** }
%class.scoped_refptr.124 = type { %"class.base::RefCountedData"* }
%"class.base::RefCountedData" = type { %"class.base::RefCountedThreadSafe.180", %struct.DawnProcTable }
%"class.base::RefCountedThreadSafe.180" = type { %"class.base::subtle::RefCountedThreadSafeBase" }
%"class.base::subtle::RefCountedThreadSafeBase" = type { %"class.base::AtomicRefCount" }
%"class.base::AtomicRefCount" = type { %"struct.std::__1::atomic" }
%"struct.std::__1::atomic" = type { %"struct.std::__1::__atomic_base" }
%"struct.std::__1::__atomic_base" = type { %"struct.std::__1::__atomic_base.0" }
%"struct.std::__1::__atomic_base.0" = type { %"struct.std::__1::__cxx_atomic_impl" }
%"struct.std::__1::__cxx_atomic_impl" = type { %"struct.std::__1::__cxx_atomic_base_impl" }
%"struct.std::__1::__cxx_atomic_base_impl" = type { i32 }
%struct.DawnProcTable = type { void ()* (%struct.WGPUDeviceImpl*, i8*)*, %struct.WGPUInstanceImpl* (%struct.WGPUInstanceDescriptor*)*, void (%struct.WGPUBindGroupImpl*)*, void (%struct.WGPUBindGroupImpl*)*, void (%struct.WGPUBindGroupLayoutImpl*)*, void (%struct.WGPUBindGroupLayoutImpl*)*, void (%struct.WGPUBufferImpl*)*, i8* (%struct.WGPUBufferImpl*, i64, i64)*, i8* (%struct.WGPUBufferImpl*, i64, i64)*, void (%struct.WGPUBufferImpl*, i32, i64, i64, void (i32, i8*)*, i8*)*, void (%struct.WGPUBufferImpl*)*, void (%struct.WGPUBufferImpl*)*, void (%struct.WGPUBufferImpl*)*, void (%struct.WGPUCommandBufferImpl*)*, void (%struct.WGPUCommandBufferImpl*)*, %struct.WGPUComputePassEncoderImpl* (%struct.WGPUCommandEncoderImpl*, %struct.WGPUComputePassDescriptor*)*, %struct.WGPURenderPassEncoderImpl* (%struct.WGPUCommandEncoderImpl*, %struct.WGPURenderPassDescriptor*)*, void (%struct.WGPUCommandEncoderImpl*, %struct.WGPUBufferImpl*, i64, %struct.WGPUBufferImpl*, i64, i64)*, void (%struct.WGPUCommandEncoderImpl*, %struct.WGPUImageCopyBuffer*, %struct.WGPUImageCopyTexture*, %struct.WGPUExtent3D*)*, void (%struct.WGPUCommandEncoderImpl*, %struct.WGPUImageCopyTexture*, %struct.WGPUImageCopyBuffer*, %struct.WGPUExtent3D*)*, void (%struct.WGPUCommandEncoderImpl*, %struct.WGPUImageCopyTexture*, %struct.WGPUImageCopyTexture*, %struct.WGPUExtent3D*)*, %struct.WGPUCommandBufferImpl* (%struct.WGPUCommandEncoderImpl*, %struct.WGPUCommandBufferDescriptor*)*, void (%struct.WGPUCommandEncoderImpl*, i8*)*, void (%struct.WGPUCommandEncoderImpl*, i8*)*, void (%struct.WGPUCommandEncoderImpl*)*, void (%struct.WGPUCommandEncoderImpl*, i8*)*, void (%struct.WGPUCommandEncoderImpl*, %struct.WGPUQuerySetImpl*, i32, i32, %struct.WGPUBufferImpl*, i64)*, void (%struct.WGPUCommandEncoderImpl*, %struct.WGPUQuerySetImpl*, i32)*, void (%struct.WGPUCommandEncoderImpl*)*, void (%struct.WGPUCommandEncoderImpl*)*, void (%struct.WGPUComputePassEncoderImpl*, i32, i32, i32)*, void (%struct.WGPUComputePassEncoderImpl*, %struct.WGPUBufferImpl*, i64)*, void (%struct.WGPUComputePassEncoderImpl*)*, void (%struct.WGPUComputePassEncoderImpl*, i8*)*, void (%struct.WGPUComputePassEncoderImpl*)*, void (%struct.WGPUComputePassEncoderImpl*, i8*)*, void (%struct.WGPUComputePassEncoderImpl*, i32, %struct.WGPUBindGroupImpl*, i32, i32*)*, void (%struct.WGPUComputePassEncoderImpl*, %struct.WGPUComputePipelineImpl*)*, void (%struct.WGPUComputePassEncoderImpl*, %struct.WGPUQuerySetImpl*, i32)*, void (%struct.WGPUComputePassEncoderImpl*)*, void (%struct.WGPUComputePassEncoderImpl*)*, %struct.WGPUBindGroupLayoutImpl* (%struct.WGPUComputePipelineImpl*, i32)*, void (%struct.WGPUComputePipelineImpl*)*, void (%struct.WGPUComputePipelineImpl*)*, %struct.WGPUBindGroupImpl* (%struct.WGPUDeviceImpl*, %struct.WGPUBindGroupDescriptor*)*, %struct.WGPUBindGroupLayoutImpl* (%struct.WGPUDeviceImpl*, %struct.WGPUBindGroupLayoutDescriptor*)*, %struct.WGPUBufferImpl* (%struct.WGPUDeviceImpl*, %struct.WGPUBufferDescriptor*)*, %struct.WGPUCommandEncoderImpl* (%struct.WGPUDeviceImpl*, %struct.WGPUCommandEncoderDescriptor*)*, %struct.WGPUComputePipelineImpl* (%struct.WGPUDeviceImpl*, %struct.WGPUComputePipelineDescriptor*)*, void (%struct.WGPUDeviceImpl*, %struct.WGPUComputePipelineDescriptor*, void (i32, %struct.WGPUComputePipelineImpl*, i8*, i8*)*, i8*)*, %struct.WGPUBufferImpl* (%struct.WGPUDeviceImpl*)*, %struct.WGPUExternalTextureImpl* (%struct.WGPUDeviceImpl*, %struct.WGPUExternalTextureDescriptor*)*, %struct.WGPUPipelineLayoutImpl* (%struct.WGPUDeviceImpl*, %struct.WGPUPipelineLayoutDescriptor*)*, %struct.WGPUQuerySetImpl* (%struct.WGPUDeviceImpl*, %struct.WGPUQuerySetDescriptor*)*, %struct.WGPURenderBundleEncoderImpl* (%struct.WGPUDeviceImpl*, %struct.WGPURenderBundleEncoderDescriptor*)*, %struct.WGPURenderPipelineImpl* (%struct.WGPUDeviceImpl*, %struct.WGPURenderPipelineDescriptor*)*, %struct.WGPURenderPipelineImpl* (%struct.WGPUDeviceImpl*, %struct.WGPURenderPipelineDescriptor*)*, void (%struct.WGPUDeviceImpl*, %struct.WGPURenderPipelineDescriptor*, void (i32, %struct.WGPURenderPipelineImpl*, i8*, i8*)*, i8*)*, %struct.WGPUSamplerImpl* (%struct.WGPUDeviceImpl*, %struct.WGPUSamplerDescriptor*)*, %struct.WGPUShaderModuleImpl* (%struct.WGPUDeviceImpl*, %struct.WGPUShaderModuleDescriptor*)*, %struct.WGPUSwapChainImpl* (%struct.WGPUDeviceImpl*, %struct.WGPUSurfaceImpl*, %struct.WGPUSwapChainDescriptor*)*, %struct.WGPUTextureImpl* (%struct.WGPUDeviceImpl*, %struct.WGPUTextureDescriptor*)*, %struct.WGPUQueueImpl* (%struct.WGPUDeviceImpl*)*, void (%struct.WGPUDeviceImpl*, i32, i8*)*, void (%struct.WGPUDeviceImpl*)*, i1 (%struct.WGPUDeviceImpl*, void (i32, i8*, i8*)*, i8*)*, void (%struct.WGPUDeviceImpl*, i32)*, void (%struct.WGPUDeviceImpl*, void (i8*, i8*)*, i8*)*, void (%struct.WGPUDeviceImpl*, void (i32, i8*, i8*)*, i8*)*, void (%struct.WGPUDeviceImpl*)*, void (%struct.WGPUDeviceImpl*)*, void (%struct.WGPUDeviceImpl*)*, void (%struct.WGPUExternalTextureImpl*)*, void (%struct.WGPUExternalTextureImpl*)*, void (%struct.WGPUExternalTextureImpl*)*, %struct.WGPUSurfaceImpl* (%struct.WGPUInstanceImpl*, %struct.WGPUSurfaceDescriptor*)*, void (%struct.WGPUInstanceImpl*)*, void (%struct.WGPUInstanceImpl*)*, void (%struct.WGPUPipelineLayoutImpl*)*, void (%struct.WGPUPipelineLayoutImpl*)*, void (%struct.WGPUQuerySetImpl*)*, void (%struct.WGPUQuerySetImpl*)*, void (%struct.WGPUQuerySetImpl*)*, void (%struct.WGPUQueueImpl*, %struct.WGPUImageCopyTexture*, %struct.WGPUImageCopyTexture*, %struct.WGPUExtent3D*, %struct.WGPUCopyTextureForBrowserOptions*)*, void (%struct.WGPUQueueImpl*, i64, void (i32, i8*)*, i8*)*, void (%struct.WGPUQueueImpl*, i32, %struct.WGPUCommandBufferImpl**)*, void (%struct.WGPUQueueImpl*, %struct.WGPUBufferImpl*, i64, i8*, i64)*, void (%struct.WGPUQueueImpl*, %struct.WGPUImageCopyTexture*, i8*, i64, %struct.WGPUTextureDataLayout*, %struct.WGPUExtent3D*)*, void (%struct.WGPUQueueImpl*)*, void (%struct.WGPUQueueImpl*)*, void (%struct.WGPURenderBundleImpl*)*, void (%struct.WGPURenderBundleImpl*)*, void (%struct.WGPURenderBundleEncoderImpl*, i32, i32, i32, i32)*, void (%struct.WGPURenderBundleEncoderImpl*, i32, i32, i32, i32, i32)*, void (%struct.WGPURenderBundleEncoderImpl*, %struct.WGPUBufferImpl*, i64)*, void (%struct.WGPURenderBundleEncoderImpl*, %struct.WGPUBufferImpl*, i64)*, %struct.WGPURenderBundleImpl* (%struct.WGPURenderBundleEncoderImpl*, %struct.WGPURenderBundleDescriptor*)*, void (%struct.WGPURenderBundleEncoderImpl*, i8*)*, void (%struct.WGPURenderBundleEncoderImpl*)*, void (%struct.WGPURenderBundleEncoderImpl*, i8*)*, void (%struct.WGPURenderBundleEncoderImpl*, i32, %struct.WGPUBindGroupImpl*, i32, i32*)*, void (%struct.WGPURenderBundleEncoderImpl*, %struct.WGPUBufferImpl*, i32, i64, i64)*, void (%struct.WGPURenderBundleEncoderImpl*, %struct.WGPURenderPipelineImpl*)*, void (%struct.WGPURenderBundleEncoderImpl*, i32, %struct.WGPUBufferImpl*, i64, i64)*, void (%struct.WGPURenderBundleEncoderImpl*)*, void (%struct.WGPURenderBundleEncoderImpl*)*, void (%struct.WGPURenderPassEncoderImpl*, i32)*, void (%struct.WGPURenderPassEncoderImpl*, i32, i32, i32, i32)*, void (%struct.WGPURenderPassEncoderImpl*, i32, i32, i32, i32, i32)*, void (%struct.WGPURenderPassEncoderImpl*, %struct.WGPUBufferImpl*, i64)*, void (%struct.WGPURenderPassEncoderImpl*, %struct.WGPUBufferImpl*, i64)*, void (%struct.WGPURenderPassEncoderImpl*)*, void (%struct.WGPURenderPassEncoderImpl*)*, void (%struct.WGPURenderPassEncoderImpl*, i32, %struct.WGPURenderBundleImpl**)*, void (%struct.WGPURenderPassEncoderImpl*, i8*)*, void (%struct.WGPURenderPassEncoderImpl*)*, void (%struct.WGPURenderPassEncoderImpl*, i8*)*, void (%struct.WGPURenderPassEncoderImpl*, i32, %struct.WGPUBindGroupImpl*, i32, i32*)*, void (%struct.WGPURenderPassEncoderImpl*, %struct.WGPUColor*)*, void (%struct.WGPURenderPassEncoderImpl*, %struct.WGPUColor*)*, void (%struct.WGPURenderPassEncoderImpl*, %struct.WGPUBufferImpl*, i32, i64, i64)*, void (%struct.WGPURenderPassEncoderImpl*, %struct.WGPURenderPipelineImpl*)*, void (%struct.WGPURenderPassEncoderImpl*, i32, i32, i32, i32)*, void (%struct.WGPURenderPassEncoderImpl*, i32)*, void (%struct.WGPURenderPassEncoderImpl*, i32, %struct.WGPUBufferImpl*, i64, i64)*, void (%struct.WGPURenderPassEncoderImpl*, float, float, float, float, float, float)*, void (%struct.WGPURenderPassEncoderImpl*, %struct.WGPUQuerySetImpl*, i32)*, void (%struct.WGPURenderPassEncoderImpl*)*, void (%struct.WGPURenderPassEncoderImpl*)*, %struct.WGPUBindGroupLayoutImpl* (%struct.WGPURenderPipelineImpl*, i32)*, void (%struct.WGPURenderPipelineImpl*)*, void (%struct.WGPURenderPipelineImpl*)*, void (%struct.WGPUSamplerImpl*)*, void (%struct.WGPUSamplerImpl*)*, void (%struct.WGPUShaderModuleImpl*, void (i32, %struct.WGPUCompilationInfo*, i8*)*, i8*)*, void (%struct.WGPUShaderModuleImpl*)*, void (%struct.WGPUShaderModuleImpl*)*, void (%struct.WGPUSurfaceImpl*)*, void (%struct.WGPUSurfaceImpl*)*, void (%struct.WGPUSwapChainImpl*, i32, i32, i32, i32)*, %struct.WGPUTextureViewImpl* (%struct.WGPUSwapChainImpl*)*, void (%struct.WGPUSwapChainImpl*)*, void (%struct.WGPUSwapChainImpl*)*, void (%struct.WGPUSwapChainImpl*)*, %struct.WGPUTextureViewImpl* (%struct.WGPUTextureImpl*, %struct.WGPUTextureViewDescriptor*)*, void (%struct.WGPUTextureImpl*)*, void (%struct.WGPUTextureImpl*)*, void (%struct.WGPUTextureImpl*)*, void (%struct.WGPUTextureViewImpl*)*, void (%struct.WGPUTextureViewImpl*)* }
%struct.WGPUDeviceImpl = type opaque
%struct.WGPUInstanceImpl = type opaque
%struct.WGPUInstanceDescriptor = type { %struct.WGPUChainedStruct* }
%struct.WGPUChainedStruct = type { %struct.WGPUChainedStruct*, i32 }
%struct.WGPUBindGroupImpl = type opaque
%struct.WGPUBindGroupLayoutImpl = type opaque
%struct.WGPUBufferImpl = type opaque
%struct.WGPUCommandBufferImpl = type opaque
%struct.WGPUComputePassEncoderImpl = type opaque
%struct.WGPUCommandEncoderImpl = type opaque
%struct.WGPUComputePassDescriptor = type { %struct.WGPUChainedStruct*, i8* }
%struct.WGPURenderPassEncoderImpl = type opaque
%struct.WGPURenderPassDescriptor = type { %struct.WGPUChainedStruct*, i8*, i32, %struct.WGPURenderPassColorAttachment*, %struct.WGPURenderPassDepthStencilAttachment*, %struct.WGPUQuerySetImpl* }
%struct.WGPURenderPassColorAttachment = type { %struct.WGPUTextureViewImpl*, %struct.WGPUTextureViewImpl*, i32, i32, %struct.WGPUColor, %struct.WGPUTextureViewImpl* }
%struct.WGPUColor = type { double, double, double, double }
%struct.WGPUTextureViewImpl = type opaque
%struct.WGPURenderPassDepthStencilAttachment = type { %struct.WGPUTextureViewImpl*, i32, i32, float, i8, i32, i32, i32, i8, %struct.WGPUTextureViewImpl* }
%struct.WGPUQuerySetImpl = type opaque
%struct.WGPUImageCopyBuffer = type { %struct.WGPUChainedStruct*, %struct.WGPUTextureDataLayout, %struct.WGPUBufferImpl* }
%struct.WGPUTextureDataLayout = type { %struct.WGPUChainedStruct*, i64, i32, i32 }
%struct.WGPUImageCopyTexture = type { %struct.WGPUChainedStruct*, %struct.WGPUTextureImpl*, i32, %struct.WGPUOrigin3D, i32 }
%struct.WGPUTextureImpl = type opaque
%struct.WGPUOrigin3D = type { i32, i32, i32 }
%struct.WGPUExtent3D = type { i32, i32, i32 }
%struct.WGPUCommandBufferDescriptor = type { %struct.WGPUChainedStruct*, i8* }
%struct.WGPUComputePipelineImpl = type opaque
%struct.WGPUBindGroupDescriptor = type { %struct.WGPUChainedStruct*, i8*, %struct.WGPUBindGroupLayoutImpl*, i32, %struct.WGPUBindGroupEntry* }
%struct.WGPUBindGroupEntry = type { i32, %struct.WGPUBufferImpl*, i64, i64, %struct.WGPUSamplerImpl*, %struct.WGPUTextureViewImpl* }
%struct.WGPUSamplerImpl = type opaque
%struct.WGPUBindGroupLayoutDescriptor = type { %struct.WGPUChainedStruct*, i8*, i32, %struct.WGPUBindGroupLayoutEntry* }
%struct.WGPUBindGroupLayoutEntry = type { %struct.WGPUChainedStruct*, i32, i32, %struct.WGPUBufferBindingLayout, %struct.WGPUSamplerBindingLayout, %struct.WGPUTextureBindingLayout, %struct.WGPUStorageTextureBindingLayout }
%struct.WGPUBufferBindingLayout = type { %struct.WGPUChainedStruct*, i32, i8, i64 }
%struct.WGPUSamplerBindingLayout = type { %struct.WGPUChainedStruct*, i32 }
%struct.WGPUTextureBindingLayout = type { %struct.WGPUChainedStruct*, i32, i32, i8 }
%struct.WGPUStorageTextureBindingLayout = type { %struct.WGPUChainedStruct*, i32, i32, i32 }
%struct.WGPUBufferDescriptor = type { %struct.WGPUChainedStruct*, i8*, i32, i64, i8 }
%struct.WGPUCommandEncoderDescriptor = type { %struct.WGPUChainedStruct*, i8* }
%struct.WGPUComputePipelineDescriptor = type { %struct.WGPUChainedStruct*, i8*, %struct.WGPUPipelineLayoutImpl*, %struct.WGPUProgrammableStageDescriptor }
%struct.WGPUPipelineLayoutImpl = type opaque
%struct.WGPUProgrammableStageDescriptor = type { %struct.WGPUChainedStruct*, %struct.WGPUShaderModuleImpl*, i8* }
%struct.WGPUShaderModuleImpl = type opaque
%struct.WGPUExternalTextureImpl = type opaque
%struct.WGPUExternalTextureDescriptor = type { %struct.WGPUChainedStruct*, %struct.WGPUTextureViewImpl*, i32 }
%struct.WGPUPipelineLayoutDescriptor = type { %struct.WGPUChainedStruct*, i8*, i32, %struct.WGPUBindGroupLayoutImpl** }
%struct.WGPUQuerySetDescriptor = type { %struct.WGPUChainedStruct*, i8*, i32, i32, i32*, i32 }
%struct.WGPURenderBundleEncoderImpl = type opaque
%struct.WGPURenderBundleEncoderDescriptor = type { %struct.WGPUChainedStruct*, i8*, i32, i32*, i32, i32 }
%struct.WGPURenderPipelineImpl = type opaque
%struct.WGPURenderPipelineDescriptor = type { %struct.WGPUChainedStruct*, i8*, %struct.WGPUPipelineLayoutImpl*, %struct.WGPUVertexState, %struct.WGPUPrimitiveState, %struct.WGPUDepthStencilState*, %struct.WGPUMultisampleState, %struct.WGPUFragmentState* }
%struct.WGPUVertexState = type { %struct.WGPUChainedStruct*, %struct.WGPUShaderModuleImpl*, i8*, i32, %struct.WGPUVertexBufferLayout* }
%struct.WGPUVertexBufferLayout = type { i64, i32, i32, %struct.WGPUVertexAttribute* }
%struct.WGPUVertexAttribute = type { i32, i64, i32 }
%struct.WGPUPrimitiveState = type { %struct.WGPUChainedStruct*, i32, i32, i32, i32 }
%struct.WGPUDepthStencilState = type { %struct.WGPUChainedStruct*, i32, i8, i32, %struct.WGPUStencilFaceState, %struct.WGPUStencilFaceState, i32, i32, i32, float, float }
%struct.WGPUStencilFaceState = type { i32, i32, i32, i32 }
%struct.WGPUMultisampleState = type { %struct.WGPUChainedStruct*, i32, i32, i8 }
%struct.WGPUFragmentState = type { %struct.WGPUChainedStruct*, %struct.WGPUShaderModuleImpl*, i8*, i32, %struct.WGPUColorTargetState* }
%struct.WGPUColorTargetState = type { %struct.WGPUChainedStruct*, i32, %struct.WGPUBlendState*, i32 }
%struct.WGPUBlendState = type { %struct.WGPUBlendComponent, %struct.WGPUBlendComponent }
%struct.WGPUBlendComponent = type { i32, i32, i32 }
%struct.WGPUSamplerDescriptor = type { %struct.WGPUChainedStruct*, i8*, i32, i32, i32, i32, i32, i32, float, float, i32, i16 }
%struct.WGPUShaderModuleDescriptor = type { %struct.WGPUChainedStruct*, i8* }
%struct.WGPUSwapChainImpl = type opaque
%struct.WGPUSurfaceImpl = type opaque
%struct.WGPUSwapChainDescriptor = type { %struct.WGPUChainedStruct*, i8*, i32, i32, i32, i32, i32, i64 }
%struct.WGPUTextureDescriptor = type { %struct.WGPUChainedStruct*, i8*, i32, i32, %struct.WGPUExtent3D, i32, i32, i32 }
%struct.WGPUQueueImpl = type opaque
%struct.WGPUSurfaceDescriptor = type { %struct.WGPUChainedStruct*, i8* }
%struct.WGPUCopyTextureForBrowserOptions = type { %struct.WGPUChainedStruct*, i8 }
%struct.WGPURenderBundleImpl = type opaque
%struct.WGPURenderBundleDescriptor = type { %struct.WGPUChainedStruct*, i8* }
%struct.WGPUCompilationInfo = type { i32, %struct.WGPUCompilationMessage* }
%struct.WGPUCompilationMessage = type { i8*, i32, i64, i64, i64, i64 }
%struct.WGPUTextureViewDescriptor = type { %struct.WGPUChainedStruct*, i8*, i32, i32, i32, i32, i32, i32, i32 }
%"class.gpu::SharedContextState" = type { %"class.base::trace_event::MemoryDumpProvider", %"class.gpu::GLContextVirtualDelegate", %"class.base::RefCounted", %"class.GrContextOptions::ShaderErrorHandler", i8, i8, i8, %"class.base::OnceCallback", i32, %"class.gpu::SharedContextState::MemoryTrackerObserver", %"class.gpu::SharedContextState::MemoryTracker", %"class.gpu::MemoryTypeTracker", %"class.viz::VulkanContextProvider"*, %"class.viz::MetalContextProvider"*, %"class.viz::DawnContextProvider"*, %class.GrDirectContext*, %class.scoped_refptr.78, %class.scoped_refptr.79, %class.scoped_refptr.79, %class.scoped_refptr.80, %"class.gl::GLSurface"*, %class.scoped_refptr.81, %"class.std::__1::unique_ptr.82", %"class.gl::ProgressReporter"*, %class.sk_sp.88, %"class.std::__1::unique_ptr.89", i64, %"class.std::__1::vector", %"class.gpu::raster::GrShaderCache"*, i8, %"class.absl::optional", [4 x i8], %"class.base::ObserverList", %"class.base::MRUCache", i8, %"class.base::Time", i8, %"class.std::__1::unique_ptr.117", %"class.base::WeakPtrFactory.123" }
%"class.base::trace_event::MemoryDumpProvider" = type { i32 (...)** }
%"class.gpu::GLContextVirtualDelegate" = type { i32 (...)** }
%"class.base::RefCounted" = type { %"class.base::subtle::RefCountedBase" }
%"class.base::subtle::RefCountedBase" = type { i32 }
%"class.GrContextOptions::ShaderErrorHandler" = type { i32 (...)** }
%"class.base::OnceCallback" = type { %"class.base::internal::CallbackBase" }
%"class.base::internal::CallbackBase" = type { %class.scoped_refptr }
%class.scoped_refptr = type { %"class.base::internal::BindStateBase"* }
%"class.base::internal::BindStateBase" = type { %"class.base::RefCountedThreadSafe", void ()*, void (%"class.base::internal::BindStateBase"*)*, i1 (%"class.base::internal::BindStateBase"*, i32)* }
%"class.base::RefCountedThreadSafe" = type { %"class.base::subtle::RefCountedThreadSafeBase" }
%"class.gpu::SharedContextState::MemoryTrackerObserver" = type { %"class.gpu::MemoryTracker::Observer", i64, %"class.base::WeakPtr" }
%"class.gpu::MemoryTracker::Observer" = type { i32 (...)** }
%"class.base::WeakPtr" = type { %"class.base::internal::WeakPtrBase" }
%"class.base::internal::WeakPtrBase" = type { %"class.base::internal::WeakReference", i64 }
%"class.base::internal::WeakReference" = type { %class.scoped_refptr.1 }
%class.scoped_refptr.1 = type { %"class.base::internal::WeakReference::Flag"* }
%"class.base::internal::WeakReference::Flag" = type <{ %"class.base::RefCountedThreadSafe.2", %"class.base::AtomicFlag", [3 x i8] }>
%"class.base::RefCountedThreadSafe.2" = type { %"class.base::subtle::RefCountedThreadSafeBase" }
%"class.base::AtomicFlag" = type { %"struct.std::__1::atomic.3" }
%"struct.std::__1::atomic.3" = type { %"struct.std::__1::__atomic_base.4" }
%"struct.std::__1::__atomic_base.4" = type { %"struct.std::__1::__atomic_base.5" }
%"struct.std::__1::__atomic_base.5" = type { %"struct.std::__1::__cxx_atomic_impl.6" }
%"struct.std::__1::__cxx_atomic_impl.6" = type { %"struct.std::__1::__cxx_atomic_base_impl.7" }
%"struct.std::__1::__cxx_atomic_base_impl.7" = type { i8 }
%"class.gpu::SharedContextState::MemoryTracker" = type { %"class.gpu::MemoryTracker", %"class.util::IdType", i64, %"class.gpu::MemoryTracker::Observer"*, i64 }
%"class.gpu::MemoryTracker" = type { i32 (...)** }
%"class.util::IdType" = type { %"class.base::StrongAlias" }
%"class.base::StrongAlias" = type { i64 }
%"class.gpu::MemoryTypeTracker" = type { %"class.gpu::MemoryTracker"*, i64, %"class.base::Lock", %class.scoped_refptr.8, %"class.base::WeakPtrFactory" }
%"class.base::Lock" = type { %"class.base::internal::LockImpl" }
%"class.base::internal::LockImpl" = type { %union.pthread_mutex_t }
%union.pthread_mutex_t = type { %struct.__pthread_mutex_s }
%struct.__pthread_mutex_s = type { i32, i32, i32, i32, i32, i16, i16, %struct.__pthread_internal_list }
%struct.__pthread_internal_list = type { %struct.__pthread_internal_list*, %struct.__pthread_internal_list* }
%class.scoped_refptr.8 = type { %"class.base::SequencedTaskRunner"* }
%"class.base::SequencedTaskRunner" = type opaque
%"class.base::WeakPtrFactory" = type { %"class.base::internal::WeakPtrFactoryBase" }
%"class.base::internal::WeakPtrFactoryBase" = type { %"class.base::internal::WeakReferenceOwner", i64 }
%"class.base::internal::WeakReferenceOwner" = type { %class.scoped_refptr.9 }
%class.scoped_refptr.9 = type { %"class.base::internal::WeakReference::Flag"* }
%"class.viz::VulkanContextProvider" = type opaque
%"class.viz::MetalContextProvider" = type opaque
%"class.viz::DawnContextProvider" = type opaque
%class.GrDirectContext = type { %class.GrRecordingContext, %"class.GrDirectContext::DirectContextID", %"class.std::__1::unique_ptr.35", %"class.std::__1::unique_ptr.41", %class.sk_sp.47, %"class.std::__1::unique_ptr.48", %"class.std::__1::unique_ptr.54", i8, i8, %"class.GrContextOptions::PersistentCache"*, %"class.GrContextOptions::ShaderErrorHandler"*, %"class.std::__1::unique_ptr.60", %"class.std::__1::unique_ptr.66", %"class.std::__1::unique_ptr.72" }
%class.GrRecordingContext = type { %class.GrImageContext.base, %"class.GrRecordingContext::Stats", %"class.std::__1::unique_ptr", %"class.GrRecordingContext::OwnedArenas", %"class.std::__1::unique_ptr.23", %"class.std::__1::unique_ptr.29" }
%class.GrImageContext.base = type <{ %class.GrContext_Base, %class.GrSingleOwner }>
%class.GrContext_Base = type { %class.SkRefCnt.base, %class.sk_sp }
%class.SkRefCnt.base = type { %class.SkRefCntBase.base }
%class.SkRefCntBase.base = type <{ i32 (...)**, %"struct.std::__1::atomic" }>
%class.sk_sp = type { %class.GrContextThreadSafeProxy* }
%class.GrContextThreadSafeProxy = type opaque
%class.GrSingleOwner = type { i8 }
%"class.GrRecordingContext::Stats" = type { i8 }
%"class.std::__1::unique_ptr" = type { %"class.std::__1::__compressed_pair" }
%"class.std::__1::__compressed_pair" = type { %"struct.std::__1::__compressed_pair_elem" }
%"struct.std::__1::__compressed_pair_elem" = type { %class.GrAuditTrail* }
%class.GrAuditTrail = type opaque
%"class.GrRecordingContext::OwnedArenas" = type { i8, %"class.std::__1::unique_ptr.11", %"class.std::__1::unique_ptr.17" }
%"class.std::__1::unique_ptr.11" = type { %"class.std::__1::__compressed_pair.12" }
%"class.std::__1::__compressed_pair.12" = type { %"struct.std::__1::__compressed_pair_elem.13" }
%"struct.std::__1::__compressed_pair_elem.13" = type { %class.SkArenaAlloc* }
%class.SkArenaAlloc = type opaque
%"class.std::__1::unique_ptr.17" = type { %"class.std::__1::__compressed_pair.18" }
%"class.std::__1::__compressed_pair.18" = type { %"struct.std::__1::__compressed_pair_elem.19" }
%"struct.std::__1::__compressed_pair_elem.19" = type { %class.GrSubRunAllocator* }
%class.GrSubRunAllocator = type opaque
%"class.std::__1::unique_ptr.23" = type { %"class.std::__1::__compressed_pair.24" }
%"class.std::__1::__compressed_pair.24" = type { %"struct.std::__1::__compressed_pair_elem.25" }
%"struct.std::__1::__compressed_pair_elem.25" = type { %class.GrDrawingManager* }
%class.GrDrawingManager = type opaque
%"class.std::__1::unique_ptr.29" = type { %"class.std::__1::__compressed_pair.30" }
%"class.std::__1::__compressed_pair.30" = type { %"struct.std::__1::__compressed_pair_elem.31" }
%"struct.std::__1::__compressed_pair_elem.31" = type { %class.GrProxyProvider* }
%class.GrProxyProvider = type opaque
%"class.GrDirectContext::DirectContextID" = type { i32 }
%"class.std::__1::unique_ptr.35" = type { %"class.std::__1::__compressed_pair.36" }
%"class.std::__1::__compressed_pair.36" = type { %"struct.std::__1::__compressed_pair_elem.37" }
%"struct.std::__1::__compressed_pair_elem.37" = type { %class.SkTaskGroup* }
%class.SkTaskGroup = type opaque
%"class.std::__1::unique_ptr.41" = type { %"class.std::__1::__compressed_pair.42" }
%"class.std::__1::__compressed_pair.42" = type { %"struct.std::__1::__compressed_pair_elem.43" }
%"struct.std::__1::__compressed_pair_elem.43" = type { %class.GrStrikeCache* }
%class.GrStrikeCache = type opaque
%class.sk_sp.47 = type { %class.GrGpu* }
%class.GrGpu = type opaque
%"class.std::__1::unique_ptr.48" = type { %"class.std::__1::__compressed_pair.49" }
%"class.std::__1::__compressed_pair.49" = type { %"struct.std::__1::__compressed_pair_elem.50" }
%"struct.std::__1::__compressed_pair_elem.50" = type { %class.GrResourceCache* }
%class.GrResourceCache = type opaque
%"class.std::__1::unique_ptr.54" = type { %"class.std::__1::__compressed_pair.55" }
%"class.std::__1::__compressed_pair.55" = type { %"struct.std::__1::__compressed_pair_elem.56" }
%"struct.std::__1::__compressed_pair_elem.56" = type { %class.GrResourceProvider* }
%class.GrResourceProvider = type opaque
%"class.GrContextOptions::PersistentCache" = type { i32 (...)** }
%"class.std::__1::unique_ptr.60" = type { %"class.std::__1::__compressed_pair.61" }
%"class.std::__1::__compressed_pair.61" = type { %"struct.std::__1::__compressed_pair_elem.62" }
%"struct.std::__1::__compressed_pair_elem.62" = type { %class.GrClientMappedBufferManager* }
%class.GrClientMappedBufferManager = type opaque
%"class.std::__1::unique_ptr.66" = type { %"class.std::__1::__compressed_pair.67" }
%"class.std::__1::__compressed_pair.67" = type { %"struct.std::__1::__compressed_pair_elem.68" }
%"struct.std::__1::__compressed_pair_elem.68" = type { %class.GrAtlasManager* }
%class.GrAtlasManager = type opaque
%"class.std::__1::unique_ptr.72" = type { %"class.std::__1::__compressed_pair.73" }
%"class.std::__1::__compressed_pair.73" = type { %"struct.std::__1::__compressed_pair_elem.74" }
%"struct.std::__1::__compressed_pair_elem.74" = type { %class.GrSmallPathAtlasMgr* }
%class.GrSmallPathAtlasMgr = type opaque
%class.scoped_refptr.78 = type { %"class.gl::GLShareGroup"* }
%"class.gl::GLShareGroup" = type opaque
%class.scoped_refptr.79 = type { %"class.gl::GLContext"* }
%"class.gl::GLContext" = type opaque
%class.scoped_refptr.80 = type { %"class.gl::GLSurface"* }
%"class.gl::GLSurface" = type opaque
%class.scoped_refptr.81 = type { %"class.gpu::gles2::FeatureInfo"* }
%"class.gpu::gles2::FeatureInfo" = type opaque
%"class.std::__1::unique_ptr.82" = type { %"class.std::__1::__compressed_pair.83" }
%"class.std::__1::__compressed_pair.83" = type { %"struct.std::__1::__compressed_pair_elem.84" }
%"struct.std::__1::__compressed_pair_elem.84" = type { %"struct.gpu::gles2::ContextState"* }
%"struct.gpu::gles2::ContextState" = type opaque
%"class.gl::ProgressReporter" = type { i32 (...)** }
%class.sk_sp.88 = type { %class.GrDirectContext* }
%"class.std::__1::unique_ptr.89" = type { %"class.std::__1::__compressed_pair.90" }
%"class.std::__1::__compressed_pair.90" = type { %"struct.std::__1::__compressed_pair_elem.91" }
%"struct.std::__1::__compressed_pair_elem.91" = type { %"class.gpu::ServiceTransferCache"* }
%"class.gpu::ServiceTransferCache" = type opaque
%"class.std::__1::vector" = type { %"class.std::__1::__vector_base" }
%"class.std::__1::__vector_base" = type { i8*, i8*, %"class.std::__1::__compressed_pair.95" }
%"class.std::__1::__compressed_pair.95" = type { %"struct.std::__1::__compressed_pair_elem.96" }
%"struct.std::__1::__compressed_pair_elem.96" = type { i8* }
%"class.gpu::raster::GrShaderCache" = type opaque
%"class.absl::optional" = type { %"class.absl::optional_internal::optional_data" }
%"class.absl::optional_internal::optional_data" = type { %"class.absl::optional_internal::optional_data_base" }
%"class.absl::optional_internal::optional_data_base" = type { %"class.absl::optional_internal::optional_data_dtor_base" }
%"class.absl::optional_internal::optional_data_dtor_base" = type { i8, %union.anon }
%union.anon = type { i32 }
%"class.base::ObserverList" = type <{ %"class.std::__1::vector.98", %"class.base::LinkedList", i64, i32, [4 x i8] }>
%"class.std::__1::vector.98" = type { %"class.std::__1::__vector_base.99" }
%"class.std::__1::__vector_base.99" = type { %"class.base::internal::UncheckedObserverAdapter"*, %"class.base::internal::UncheckedObserverAdapter"*, %"class.std::__1::__compressed_pair.100" }
%"class.base::internal::UncheckedObserverAdapter" = type { i8* }
%"class.std::__1::__compressed_pair.100" = type { %"struct.std::__1::__compressed_pair_elem.101" }
%"struct.std::__1::__compressed_pair_elem.101" = type { %"class.base::internal::UncheckedObserverAdapter"* }
%"class.base::LinkedList" = type { %"class.base::LinkNode" }
%"class.base::LinkNode" = type { %"class.base::internal::LinkNodeBase" }
%"class.base::internal::LinkNodeBase" = type { %"class.base::internal::LinkNodeBase"*, %"class.base::internal::LinkNodeBase"* }
%"class.base::MRUCache" = type { %"class.base::MRUCacheBase" }
%"class.base::MRUCacheBase" = type { i32 (...)**, %"class.std::__1::list", %"class.std::__1::map", i64 }
%"class.std::__1::list" = type { %"class.std::__1::__list_imp" }
%"class.std::__1::__list_imp" = type { %"struct.std::__1::__list_node_base", %"class.std::__1::__compressed_pair.105" }
%"struct.std::__1::__list_node_base" = type { %"struct.std::__1::__list_node_base"*, %"struct.std::__1::__list_node_base"* }
%"class.std::__1::__compressed_pair.105" = type { %"struct.std::__1::__compressed_pair_elem.106" }
%"struct.std::__1::__compressed_pair_elem.106" = type { i64 }
%"class.std::__1::map" = type { %"class.std::__1::__tree" }
%"class.std::__1::__tree" = type { %"class.std::__1::__tree_end_node"*, %"class.std::__1::__compressed_pair.110", %"class.std::__1::__compressed_pair.115" }
%"class.std::__1::__tree_end_node" = type { %"class.std::__1::__tree_node_base"* }
%"class.std::__1::__tree_node_base" = type <{ %"class.std::__1::__tree_end_node", %"class.std::__1::__tree_node_base"*, %"class.std::__1::__tree_end_node"*, i8, [7 x i8] }>
%"class.std::__1::__compressed_pair.110" = type { %"struct.std::__1::__compressed_pair_elem.111" }
%"struct.std::__1::__compressed_pair_elem.111" = type { %"class.std::__1::__tree_end_node" }
%"class.std::__1::__compressed_pair.115" = type { %"struct.std::__1::__compressed_pair_elem.106" }
%"class.base::Time" = type { %"class.base::time_internal::TimeBase" }
%"class.base::time_internal::TimeBase" = type { i64 }
%"class.std::__1::unique_ptr.117" = type { %"class.std::__1::__compressed_pair.118" }
%"class.std::__1::__compressed_pair.118" = type { %"struct.std::__1::__compressed_pair_elem.119" }
%"struct.std::__1::__compressed_pair_elem.119" = type { %"class.gpu::ExternalSemaphorePool"* }
%"class.gpu::ExternalSemaphorePool" = type opaque
%"class.base::WeakPtrFactory.123" = type { %"class.base::internal::WeakPtrFactoryBase" }
%"class.gpu::SharedImageBacking" = type { i32 (...)**, %"class.absl::optional.128", %"struct.gpu::Mailbox", i32, %"class.gfx::Size", %"class.gfx::ColorSpace", i32, i32, i32, i64, %"class.gpu::SharedImageFactory"*, i8, %"class.absl::optional.137", %"class.std::__1::vector.142" }
%"class.absl::optional.128" = type { %"class.absl::optional_internal::optional_data.129" }
%"class.absl::optional_internal::optional_data.129" = type { %"class.absl::optional_internal::optional_data_base.130" }
%"class.absl::optional_internal::optional_data_base.130" = type { %"class.absl::optional_internal::optional_data_dtor_base.131" }
%"class.absl::optional_internal::optional_data_dtor_base.131" = type { i8, %union.anon.132 }
%union.anon.132 = type { %"class.base::Lock" }
%"struct.gpu::Mailbox" = type { [16 x i8] }
%"class.gfx::Size" = type { i32, i32 }
%"class.gfx::ColorSpace" = type { i8, i8, i8, i8, [9 x float], [7 x float] }
%"class.gpu::SharedImageFactory" = type opaque
%"class.absl::optional.137" = type { %"class.absl::optional_internal::optional_data.138" }
%"class.absl::optional_internal::optional_data.138" = type { %"class.absl::optional_internal::optional_data_base.139" }
%"class.absl::optional_internal::optional_data_base.139" = type { %"class.absl::optional_internal::optional_data_dtor_base.140" }
%"class.absl::optional_internal::optional_data_dtor_base.140" = type { i8, %union.anon.141 }
%union.anon.141 = type { %"class.gpu::SharedImageBacking::ScopedWriteUMA" }
%"class.gpu::SharedImageBacking::ScopedWriteUMA" = type { i8 }
%"class.std::__1::vector.142" = type { %"class.std::__1::__vector_base.143" }
%"class.std::__1::__vector_base.143" = type { %"class.gpu::SharedImageRepresentation"**, %"class.gpu::SharedImageRepresentation"**, %"class.std::__1::__compressed_pair.151" }
%"class.gpu::SharedImageRepresentation" = type <{ i32 (...)**, %"class.gpu::SharedImageManager"*, %"class.gpu::SharedImageBacking"*, %"class.gpu::MemoryTypeTracker"*, i8, i8, [6 x i8] }>
%"class.gpu::SharedImageManager" = type <{ %"class.absl::optional.128", %"class.base::internal::flat_tree", i8, [7 x i8] }>
%"class.base::internal::flat_tree" = type { %"class.std::__1::vector.144" }
%"class.std::__1::vector.144" = type { %"class.std::__1::__vector_base.145" }
%"class.std::__1::__vector_base.145" = type { %"class.std::__1::unique_ptr.125"*, %"class.std::__1::unique_ptr.125"*, %"class.std::__1::__compressed_pair.146" }
%"class.std::__1::unique_ptr.125" = type { %"class.std::__1::__compressed_pair.126" }
%"class.std::__1::__compressed_pair.126" = type { %"struct.std::__1::__compressed_pair_elem.127" }
%"struct.std::__1::__compressed_pair_elem.127" = type { %"class.gpu::SharedImageBacking"* }
%"class.std::__1::__compressed_pair.146" = type { %"struct.std::__1::__compressed_pair_elem.147" }
%"struct.std::__1::__compressed_pair_elem.147" = type { %"class.std::__1::unique_ptr.125"* }
%"class.std::__1::__compressed_pair.151" = type { %"struct.std::__1::__compressed_pair_elem.152" }
%"struct.std::__1::__compressed_pair_elem.152" = type { %"class.gpu::SharedImageRepresentation"** }
%"class.gpu::SharedImageBackingOzone" = type { %"class.gpu::ClearTrackingSharedImageBacking", i8, %"class.std::__1::unique_ptr.162", %class.scoped_refptr.168, %class.scoped_refptr.124 }
%"class.gpu::ClearTrackingSharedImageBacking" = type { %"class.gpu::SharedImageBacking", %"class.gfx::Rect" }
%"class.gfx::Rect" = type { %"class.gfx::Point", %"class.gfx::Size" }
%"class.gfx::Point" = type { i32, i32 }
%"class.std::__1::unique_ptr.162" = type { %"class.std::__1::__compressed_pair.163" }
%"class.std::__1::__compressed_pair.163" = type { %"struct.std::__1::__compressed_pair_elem.164" }
%"struct.std::__1::__compressed_pair_elem.164" = type { %"class.gpu::VaapiDependencies"* }
%"class.gpu::VaapiDependencies" = type { i32 (...)** }
%class.scoped_refptr.168 = type { %"class.gfx::NativePixmap"* }
%"class.gfx::NativePixmap" = type <{ i32 (...)**, %"class.base::RefCountedThreadSafe.169", [4 x i8] }>
%"class.base::RefCountedThreadSafe.169" = type { %"class.base::subtle::RefCountedThreadSafeBase" }
%"class.base::span" = type { %"struct.base::internal::ExtentStorage", i8* }
%"struct.base::internal::ExtentStorage" = type { i64 }
%"struct.gfx::GpuMemoryBufferHandle" = type { i32, %"class.gfx::GenericSharedMemoryId", %"class.base::UnsafeSharedMemoryRegion", i32, i32, %"struct.gfx::NativePixmapHandle" }
%"class.gfx::GenericSharedMemoryId" = type { i32 }
%"class.base::UnsafeSharedMemoryRegion" = type { %"class.base::subtle::PlatformSharedMemoryRegion" }
%"class.base::subtle::PlatformSharedMemoryRegion" = type { %"struct.base::subtle::ScopedFDPair", i32, i64, %"class.base::UnguessableToken" }
%"struct.base::subtle::ScopedFDPair" = type { %"class.base::ScopedGeneric", %"class.base::ScopedGeneric" }
%"class.base::ScopedGeneric" = type <{ i32 (...)**, %"struct.base::ScopedGeneric<int, base::internal::ScopedFDCloseTraits>::Data", i8, [3 x i8] }>
%"struct.base::ScopedGeneric<int, base::internal::ScopedFDCloseTraits>::Data" = type { i32 }
%"class.base::UnguessableToken" = type { %"class.base::Token" }
%"class.base::Token" = type { i64, i64 }
%"struct.gfx::NativePixmapHandle" = type { %"class.std::__1::vector.173", i64 }
%"class.std::__1::vector.173" = type { %"class.std::__1::__vector_base.174" }
%"class.std::__1::__vector_base.174" = type { %"struct.gfx::NativePixmapPlane"*, %"struct.gfx::NativePixmapPlane"*, %"class.std::__1::__compressed_pair.175" }
%"struct.gfx::NativePixmapPlane" = type { i32, i64, i64, %"class.base::ScopedGeneric" }
%"class.std::__1::__compressed_pair.175" = type { %"struct.std::__1::__compressed_pair_elem.176" }
%"struct.std::__1::__compressed_pair_elem.176" = type { %"struct.gfx::NativePixmapPlane"* }

@_ZTVN3gpu30SharedImageBackingFactoryOzoneE = hidden unnamed_addr constant { [8 x i8*] } { [8 x i8*] [i8* null, i8* null, i8* bitcast (void (%"class.gpu::SharedImageBackingFactoryOzone"*)* @_ZN3gpu30SharedImageBackingFactoryOzoneD2Ev to i8*), i8* bitcast (void (%"class.gpu::SharedImageBackingFactoryOzone"*)* @_ZN3gpu30SharedImageBackingFactoryOzoneD0Ev to i8*), i8* bitcast (%"class.gpu::SharedImageBacking"* (%"class.gpu::SharedImageBackingFactoryOzone"*, %"struct.gpu::Mailbox"*, i32, i32, %"class.gfx::Size"*, %"class.gfx::ColorSpace"*, i32, i32, i32, i1)* @_ZN3gpu30SharedImageBackingFactoryOzone17CreateSharedImageERKNS_7MailboxEN3viz14ResourceFormatEjRKN3gfx4SizeERKNS6_10ColorSpaceE15GrSurfaceOrigin11SkAlphaTypejb to i8*), i8* bitcast (%"class.gpu::SharedImageBacking"* (%"class.gpu::SharedImageBackingFactoryOzone"*, %"struct.gpu::Mailbox"*, i32, %"class.gfx::Size"*, %"class.gfx::ColorSpace"*, i32, i32, i32, %"class.base::span"*)* @_ZN3gpu30SharedImageBackingFactoryOzone17CreateSharedImageERKNS_7MailboxEN3viz14ResourceFormatERKN3gfx4SizeERKNS6_10ColorSpaceE15GrSurfaceOrigin11SkAlphaTypejN4base4spanIKhLm18446744073709551615EEE to i8*), i8* bitcast (%"class.gpu::SharedImageBacking"* (%"class.gpu::SharedImageBackingFactoryOzone"*, %"struct.gpu::Mailbox"*, i32, %"struct.gfx::GpuMemoryBufferHandle"*, i32, i32, i32, %"class.gfx::Size"*, %"class.gfx::ColorSpace"*, i32, i32, i32)* @_ZN3gpu30SharedImageBackingFactoryOzone17CreateSharedImageERKNS_7MailboxEiN3gfx21GpuMemoryBufferHandleENS4_12BufferFormatENS4_11BufferPlaneEjRKNS4_4SizeERKNS4_10ColorSpaceE15GrSurfaceOrigin11SkAlphaTypej to i8*), i8* bitcast (i1 (%"class.gpu::SharedImageBackingFactoryOzone"*, i32)* @_ZN3gpu30SharedImageBackingFactoryOzone24CanImportGpuMemoryBufferEN3gfx19GpuMemoryBufferTypeE to i8*)] }, align 8
@_ZZN3gpu30SharedImageBackingFactoryOzone17CreateSharedImageERKNS_7MailboxEN3viz14ResourceFormatERKN3gfx4SizeERKNS6_10ColorSpaceE15GrSurfaceOrigin11SkAlphaTypejN4base4spanIKhLm18446744073709551615EEEE11logged_once = internal unnamed_addr global i1 false, align 1
@_ZZN3gpu30SharedImageBackingFactoryOzone17CreateSharedImageERKNS_7MailboxEiN3gfx21GpuMemoryBufferHandleENS4_12BufferFormatENS4_11BufferPlaneEjRKNS4_4SizeERKNS4_10ColorSpaceE15GrSurfaceOrigin11SkAlphaTypejE11logged_once = internal unnamed_addr global i1 false, align 1
@_ZZN3gpu30SharedImageBackingFactoryOzone24CanImportGpuMemoryBufferEN3gfx19GpuMemoryBufferTypeEE11logged_once = internal unnamed_addr global i1 false, align 1

@_ZN3gpu30SharedImageBackingFactoryOzoneC1EPNS_18SharedContextStateE = hidden unnamed_addr alias void (%"class.gpu::SharedImageBackingFactoryOzone"*, %"class.gpu::SharedContextState"*), void (%"class.gpu::SharedImageBackingFactoryOzone"*, %"class.gpu::SharedContextState"*)* @_ZN3gpu30SharedImageBackingFactoryOzoneC2EPNS_18SharedContextStateE
@_ZN3gpu30SharedImageBackingFactoryOzoneD1Ev = hidden unnamed_addr alias void (%"class.gpu::SharedImageBackingFactoryOzone"*), void (%"class.gpu::SharedImageBackingFactoryOzone"*)* @_ZN3gpu30SharedImageBackingFactoryOzoneD2Ev

; Function Attrs: nounwind ssp uwtable
define hidden void @_ZN3gpu30SharedImageBackingFactoryOzoneC2EPNS_18SharedContextStateE(%"class.gpu::SharedImageBackingFactoryOzone"* nocapture, %"class.gpu::SharedContextState"*) unnamed_addr #0 align 2 {
  %3 = getelementptr inbounds %"class.gpu::SharedImageBackingFactoryOzone", %"class.gpu::SharedImageBackingFactoryOzone"* %0, i64 0, i32 0, i32 0
  store i32 (...)** bitcast (i8** getelementptr inbounds ({ [8 x i8*] }, { [8 x i8*] }* @_ZTVN3gpu30SharedImageBackingFactoryOzoneE, i64 0, inrange i32 0, i64 2) to i32 (...)**), i32 (...)*** %3, align 8
  %4 = getelementptr inbounds %"class.gpu::SharedImageBackingFactoryOzone", %"class.gpu::SharedImageBackingFactoryOzone"* %0, i64 0, i32 1
  store %"class.gpu::SharedContextState"* %1, %"class.gpu::SharedContextState"** %4, align 8
  %5 = getelementptr inbounds %"class.gpu::SharedImageBackingFactoryOzone", %"class.gpu::SharedImageBackingFactoryOzone"* %0, i64 0, i32 2
  %6 = getelementptr inbounds %class.scoped_refptr.124, %class.scoped_refptr.124* %5, i64 0, i32 0
  store %"class.base::RefCountedData"* null, %"class.base::RefCountedData"** %6, align 8
  %7 = tail call dereferenceable(1200) %struct.DawnProcTable* @_ZN11dawn_native8GetProcsEv() #6
  %8 = tail call i8* @_Znwm(i64 1208) #7
  %9 = bitcast i8* %8 to i32*
  store i32 0, i32* %9, align 4
  %10 = getelementptr inbounds i8, i8* %8, i64 8
  %11 = bitcast %struct.DawnProcTable* %7 to i8*
  tail call void @llvm.memcpy.p0i8.p0i8.i64(i8* align 8 %10, i8* align 8 %11, i64 1200, i1 false) #6
  %12 = atomicrmw add i32* %9, i32 1 monotonic
  %13 = ptrtoint i8* %8 to i64
  %14 = bitcast %class.scoped_refptr.124* %5 to i64*
  %15 = load %"class.base::RefCountedData"*, %"class.base::RefCountedData"** %6, align 8
  store i64 %13, i64* %14, align 8
  %16 = icmp eq %"class.base::RefCountedData"* %15, null
  br i1 %16, label %23, label %17

17:                                               ; preds = %2
  %18 = getelementptr inbounds %"class.base::RefCountedData", %"class.base::RefCountedData"* %15, i64 0, i32 0, i32 0, i32 0, i32 0, i32 0, i32 0, i32 0, i32 0, i32 0
  %19 = atomicrmw sub i32* %18, i32 1 acq_rel
  %20 = icmp eq i32 %19, 1
  br i1 %20, label %21, label %23

21:                                               ; preds = %17
  %22 = bitcast %"class.base::RefCountedData"* %15 to i8*
  tail call void @_ZdlPv(i8* %22) #7
  br label %23

23:                                               ; preds = %2, %17, %21
  ret void
}

declare dereferenceable(1200) %struct.DawnProcTable* @_ZN11dawn_native8GetProcsEv() local_unnamed_addr #1

; Function Attrs: nounwind ssp uwtable
define hidden void @_ZN3gpu30SharedImageBackingFactoryOzoneD2Ev(%"class.gpu::SharedImageBackingFactoryOzone"* nocapture) unnamed_addr #0 align 2 {
  %2 = getelementptr inbounds %"class.gpu::SharedImageBackingFactoryOzone", %"class.gpu::SharedImageBackingFactoryOzone"* %0, i64 0, i32 0, i32 0
  store i32 (...)** bitcast (i8** getelementptr inbounds ({ [8 x i8*] }, { [8 x i8*] }* @_ZTVN3gpu30SharedImageBackingFactoryOzoneE, i64 0, inrange i32 0, i64 2) to i32 (...)**), i32 (...)*** %2, align 8
  %3 = getelementptr inbounds %"class.gpu::SharedImageBackingFactoryOzone", %"class.gpu::SharedImageBackingFactoryOzone"* %0, i64 0, i32 2, i32 0
  %4 = load %"class.base::RefCountedData"*, %"class.base::RefCountedData"** %3, align 8
  %5 = icmp eq %"class.base::RefCountedData"* %4, null
  br i1 %5, label %12, label %6

6:                                                ; preds = %1
  %7 = getelementptr inbounds %"class.base::RefCountedData", %"class.base::RefCountedData"* %4, i64 0, i32 0, i32 0, i32 0, i32 0, i32 0, i32 0, i32 0, i32 0, i32 0
  %8 = atomicrmw sub i32* %7, i32 1 acq_rel
  %9 = icmp eq i32 %8, 1
  br i1 %9, label %10, label %12

10:                                               ; preds = %6
  %11 = bitcast %"class.base::RefCountedData"* %4 to i8*
  tail call void @_ZdlPv(i8* %11) #7
  br label %12

12:                                               ; preds = %1, %6, %10
  ret void
}

; Function Attrs: nounwind ssp uwtable
define hidden void @_ZN3gpu30SharedImageBackingFactoryOzoneD0Ev(%"class.gpu::SharedImageBackingFactoryOzone"*) unnamed_addr #0 align 2 {
  %2 = getelementptr inbounds %"class.gpu::SharedImageBackingFactoryOzone", %"class.gpu::SharedImageBackingFactoryOzone"* %0, i64 0, i32 0, i32 0
  store i32 (...)** bitcast (i8** getelementptr inbounds ({ [8 x i8*] }, { [8 x i8*] }* @_ZTVN3gpu30SharedImageBackingFactoryOzoneE, i64 0, inrange i32 0, i64 2) to i32 (...)**), i32 (...)*** %2, align 8
  %3 = getelementptr inbounds %"class.gpu::SharedImageBackingFactoryOzone", %"class.gpu::SharedImageBackingFactoryOzone"* %0, i64 0, i32 2, i32 0
  %4 = load %"class.base::RefCountedData"*, %"class.base::RefCountedData"** %3, align 8
  %5 = icmp eq %"class.base::RefCountedData"* %4, null
  br i1 %5, label %12, label %6

6:                                                ; preds = %1
  %7 = getelementptr inbounds %"class.base::RefCountedData", %"class.base::RefCountedData"* %4, i64 0, i32 0, i32 0, i32 0, i32 0, i32 0, i32 0, i32 0, i32 0, i32 0
  %8 = atomicrmw sub i32* %7, i32 1 acq_rel
  %9 = icmp eq i32 %8, 1
  br i1 %9, label %10, label %12

10:                                               ; preds = %6
  %11 = bitcast %"class.base::RefCountedData"* %4 to i8*
  tail call void @_ZdlPv(i8* %11) #7
  br label %12

12:                                               ; preds = %1, %6, %10
  %13 = bitcast %"class.gpu::SharedImageBackingFactoryOzone"* %0 to i8*
  tail call void @_ZdlPv(i8* %13) #7
  ret void
}

; Function Attrs: nobuiltin nounwind
declare void @_ZdlPv(i8*) local_unnamed_addr #2

; Function Attrs: nounwind ssp uwtable
define hidden %"class.gpu::SharedImageBacking"* @_ZN3gpu30SharedImageBackingFactoryOzone17CreateSharedImageERKNS_7MailboxEN3viz14ResourceFormatEjRKN3gfx4SizeERKNS6_10ColorSpaceE15GrSurfaceOrigin11SkAlphaTypejb(%"class.gpu::SharedImageBackingFactoryOzone"* nocapture readonly, %"struct.gpu::Mailbox"* dereferenceable(16), i32, i32, %"class.gfx::Size"* dereferenceable(8), %"class.gfx::ColorSpace"* dereferenceable(68), i32, i32, i32, i1 zeroext) unnamed_addr #0 align 2 {
  %11 = getelementptr inbounds %"class.gpu::SharedImageBackingFactoryOzone", %"class.gpu::SharedImageBackingFactoryOzone"* %0, i64 0, i32 2, i32 0
  %12 = load %"class.base::RefCountedData"*, %"class.base::RefCountedData"** %11, align 8
  %13 = icmp eq %"class.base::RefCountedData"* %12, null
  br i1 %13, label %17, label %14

14:                                               ; preds = %10
  %15 = getelementptr inbounds %"class.base::RefCountedData", %"class.base::RefCountedData"* %12, i64 0, i32 0, i32 0, i32 0, i32 0, i32 0, i32 0, i32 0, i32 0, i32 0
  %16 = atomicrmw add i32* %15, i32 1 monotonic
  br label %17

17:                                               ; preds = %14, %10
  %18 = getelementptr inbounds %"class.gpu::SharedImageBackingFactoryOzone", %"class.gpu::SharedImageBackingFactoryOzone"* %0, i64 0, i32 1
  %19 = load %"class.gpu::SharedContextState"*, %"class.gpu::SharedContextState"** %18, align 8
  %20 = tail call %"class.gpu::SharedImageBackingOzone"* @_ZN3gpu23SharedImageBackingOzone6CreateE13scoped_refptrIN4base14RefCountedDataI13DawnProcTableEEEPNS_18SharedContextStateERKNS_7MailboxEN3viz14ResourceFormatERKN3gfx4SizeERKNSE_10ColorSpaceE15GrSurfaceOrigin11SkAlphaTypejj(%"class.base::RefCountedData"* %12, %"class.gpu::SharedContextState"* %19, %"struct.gpu::Mailbox"* dereferenceable(16) %1, i32 %2, %"class.gfx::Size"* dereferenceable(8) %4, %"class.gfx::ColorSpace"* dereferenceable(68) %5, i32 %6, i32 %7, i32 %8, i32 %3) #6
  %21 = getelementptr inbounds %"class.gpu::SharedImageBackingOzone", %"class.gpu::SharedImageBackingOzone"* %20, i64 0, i32 0, i32 0
  ret %"class.gpu::SharedImageBacking"* %21
}

declare %"class.gpu::SharedImageBackingOzone"* @_ZN3gpu23SharedImageBackingOzone6CreateE13scoped_refptrIN4base14RefCountedDataI13DawnProcTableEEEPNS_18SharedContextStateERKNS_7MailboxEN3viz14ResourceFormatERKN3gfx4SizeERKNSE_10ColorSpaceE15GrSurfaceOrigin11SkAlphaTypejj(%"class.base::RefCountedData"*, %"class.gpu::SharedContextState"*, %"struct.gpu::Mailbox"* dereferenceable(16), i32, %"class.gfx::Size"* dereferenceable(8), %"class.gfx::ColorSpace"* dereferenceable(68), i32, i32, i32, i32) local_unnamed_addr #1

; Function Attrs: nofree norecurse nounwind ssp uwtable
define hidden %"class.gpu::SharedImageBacking"* @_ZN3gpu30SharedImageBackingFactoryOzone17CreateSharedImageERKNS_7MailboxEN3viz14ResourceFormatERKN3gfx4SizeERKNS6_10ColorSpaceE15GrSurfaceOrigin11SkAlphaTypejN4base4spanIKhLm18446744073709551615EEE(%"class.gpu::SharedImageBackingFactoryOzone"* nocapture readnone, %"struct.gpu::Mailbox"* nocapture readnone dereferenceable(16), i32, %"class.gfx::Size"* nocapture readnone dereferenceable(8), %"class.gfx::ColorSpace"* nocapture readnone dereferenceable(68), i32, i32, i32, %"class.base::span"* nocapture readnone byval(%"class.base::span") align 8) unnamed_addr #3 align 2 {
  %10 = load i1, i1* @_ZZN3gpu30SharedImageBackingFactoryOzone17CreateSharedImageERKNS_7MailboxEN3viz14ResourceFormatERKN3gfx4SizeERKNS6_10ColorSpaceE15GrSurfaceOrigin11SkAlphaTypejN4base4spanIKhLm18446744073709551615EEEE11logged_once, align 1
  br i1 %10, label %12, label %11

11:                                               ; preds = %9
  store i1 true, i1* @_ZZN3gpu30SharedImageBackingFactoryOzone17CreateSharedImageERKNS_7MailboxEN3viz14ResourceFormatERKN3gfx4SizeERKNS6_10ColorSpaceE15GrSurfaceOrigin11SkAlphaTypejN4base4spanIKhLm18446744073709551615EEEE11logged_once, align 1
  br label %12

12:                                               ; preds = %11, %9
  ret %"class.gpu::SharedImageBacking"* null
}

; Function Attrs: nofree norecurse nounwind ssp uwtable
define hidden %"class.gpu::SharedImageBacking"* @_ZN3gpu30SharedImageBackingFactoryOzone17CreateSharedImageERKNS_7MailboxEiN3gfx21GpuMemoryBufferHandleENS4_12BufferFormatENS4_11BufferPlaneEjRKNS4_4SizeERKNS4_10ColorSpaceE15GrSurfaceOrigin11SkAlphaTypej(%"class.gpu::SharedImageBackingFactoryOzone"* nocapture readnone, %"struct.gpu::Mailbox"* nocapture readnone dereferenceable(16), i32, %"struct.gfx::GpuMemoryBufferHandle"* nocapture readnone, i32, i32, i32, %"class.gfx::Size"* nocapture readnone dereferenceable(8), %"class.gfx::ColorSpace"* nocapture readnone dereferenceable(68), i32, i32, i32) unnamed_addr #3 align 2 {
  %13 = load i1, i1* @_ZZN3gpu30SharedImageBackingFactoryOzone17CreateSharedImageERKNS_7MailboxEiN3gfx21GpuMemoryBufferHandleENS4_12BufferFormatENS4_11BufferPlaneEjRKNS4_4SizeERKNS4_10ColorSpaceE15GrSurfaceOrigin11SkAlphaTypejE11logged_once, align 1
  br i1 %13, label %15, label %14

14:                                               ; preds = %12
  store i1 true, i1* @_ZZN3gpu30SharedImageBackingFactoryOzone17CreateSharedImageERKNS_7MailboxEiN3gfx21GpuMemoryBufferHandleENS4_12BufferFormatENS4_11BufferPlaneEjRKNS4_4SizeERKNS4_10ColorSpaceE15GrSurfaceOrigin11SkAlphaTypejE11logged_once, align 1
  br label %15

15:                                               ; preds = %14, %12
  ret %"class.gpu::SharedImageBacking"* null
}

; Function Attrs: nofree norecurse nounwind ssp uwtable
define hidden zeroext i1 @_ZN3gpu30SharedImageBackingFactoryOzone24CanImportGpuMemoryBufferEN3gfx19GpuMemoryBufferTypeE(%"class.gpu::SharedImageBackingFactoryOzone"* nocapture readnone, i32) unnamed_addr #3 align 2 {
  %3 = load i1, i1* @_ZZN3gpu30SharedImageBackingFactoryOzone24CanImportGpuMemoryBufferEN3gfx19GpuMemoryBufferTypeEE11logged_once, align 1
  br i1 %3, label %5, label %4

4:                                                ; preds = %2
  store i1 true, i1* @_ZZN3gpu30SharedImageBackingFactoryOzone24CanImportGpuMemoryBufferEN3gfx19GpuMemoryBufferTypeEE11logged_once, align 1
  br label %5

5:                                                ; preds = %4, %2
  ret i1 false
}

; Function Attrs: nobuiltin nofree
declare noalias nonnull i8* @_Znwm(i64) local_unnamed_addr #4

; Function Attrs: argmemonly nounwind
declare void @llvm.memcpy.p0i8.p0i8.i64(i8* nocapture writeonly, i8* nocapture readonly, i64, i1 immarg) #5

attributes #0 = { nounwind ssp uwtable "correctly-rounded-divide-sqrt-fp-math"="false" "disable-tail-calls"="false" "less-precise-fpmad"="false" "min-legal-vector-width"="0" "no-frame-pointer-elim"="false" "no-frame-pointer-elim-non-leaf" "no-infs-fp-math"="false" "no-jump-tables"="false" "no-nans-fp-math"="false" "no-signed-zeros-fp-math"="false" "no-trapping-math"="false" "null-pointer-is-valid"="true" "stack-protector-buffer-size"="4" "target-cpu"="x86-64" "target-features"="+cx8,+fxsr,+mmx,+sse,+sse2,+sse3,+x87" "unsafe-fp-math"="false" "use-soft-float"="false" }
attributes #1 = { "correctly-rounded-divide-sqrt-fp-math"="false" "disable-tail-calls"="false" "less-precise-fpmad"="false" "no-frame-pointer-elim"="false" "no-frame-pointer-elim-non-leaf" "no-infs-fp-math"="false" "no-nans-fp-math"="false" "no-signed-zeros-fp-math"="false" "no-trapping-math"="false" "null-pointer-is-valid"="true" "stack-protector-buffer-size"="4" "target-cpu"="x86-64" "target-features"="+cx8,+fxsr,+mmx,+sse,+sse2,+sse3,+x87" "unsafe-fp-math"="false" "use-soft-float"="false" }
attributes #2 = { nobuiltin nounwind "correctly-rounded-divide-sqrt-fp-math"="false" "disable-tail-calls"="false" "less-precise-fpmad"="false" "no-frame-pointer-elim"="false" "no-frame-pointer-elim-non-leaf" "no-infs-fp-math"="false" "no-nans-fp-math"="false" "no-signed-zeros-fp-math"="false" "no-trapping-math"="false" "null-pointer-is-valid"="true" "stack-protector-buffer-size"="4" "target-cpu"="x86-64" "target-features"="+cx8,+fxsr,+mmx,+sse,+sse2,+sse3,+x87" "unsafe-fp-math"="false" "use-soft-float"="false" }
attributes #3 = { nofree norecurse nounwind ssp uwtable "correctly-rounded-divide-sqrt-fp-math"="false" "disable-tail-calls"="false" "less-precise-fpmad"="false" "min-legal-vector-width"="0" "no-frame-pointer-elim"="false" "no-frame-pointer-elim-non-leaf" "no-infs-fp-math"="false" "no-jump-tables"="false" "no-nans-fp-math"="false" "no-signed-zeros-fp-math"="false" "no-trapping-math"="false" "null-pointer-is-valid"="true" "stack-protector-buffer-size"="4" "target-cpu"="x86-64" "target-features"="+cx8,+fxsr,+mmx,+sse,+sse2,+sse3,+x87" "unsafe-fp-math"="false" "use-soft-float"="false" }
attributes #4 = { nobuiltin nofree "correctly-rounded-divide-sqrt-fp-math"="false" "disable-tail-calls"="false" "less-precise-fpmad"="false" "no-frame-pointer-elim"="false" "no-frame-pointer-elim-non-leaf" "no-infs-fp-math"="false" "no-nans-fp-math"="false" "no-signed-zeros-fp-math"="false" "no-trapping-math"="false" "null-pointer-is-valid"="true" "stack-protector-buffer-size"="4" "target-cpu"="x86-64" "target-features"="+cx8,+fxsr,+mmx,+sse,+sse2,+sse3,+x87" "unsafe-fp-math"="false" "use-soft-float"="false" }
attributes #5 = { argmemonly nounwind }
attributes #6 = { nounwind }
attributes #7 = { builtin nounwind }

!llvm.module.flags = !{!0, !1}

!0 = !{i32 1, !"wchar_size", i32 4}
!1 = !{i32 7, !"PIC Level", i32 2}
