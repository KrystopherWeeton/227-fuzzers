; ModuleID = '../../services/video_capture/scoped_access_permission_media_to_mojo_adapter.cc'
source_filename = "../../services/video_capture/scoped_access_permission_media_to_mojo_adapter.cc"
target datalayout = "e-m:e-i64:64-f80:128-n8:16:32:64-S128"
target triple = "x86_64-unknown-linux-gnu"

module asm ".symver exp, exp@GLIBC_2.2.5"
module asm ".symver exp2, exp2@GLIBC_2.2.5"
module asm ".symver exp2f, exp2f@GLIBC_2.2.5"
module asm ".symver expf, expf@GLIBC_2.2.5"
module asm ".symver lgamma, lgamma@GLIBC_2.2.5"
module asm ".symver lgammaf, lgammaf@GLIBC_2.2.5"
module asm ".symver lgammal, lgammal@GLIBC_2.2.5"
module asm ".symver log, log@GLIBC_2.2.5"
module asm ".symver log2, log2@GLIBC_2.2.5"
module asm ".symver log2f, log2f@GLIBC_2.2.5"
module asm ".symver logf, logf@GLIBC_2.2.5"
module asm ".symver pow, pow@GLIBC_2.2.5"
module asm ".symver powf, powf@GLIBC_2.2.5"

%"class.video_capture::ScopedAccessPermissionMediaToMojoAdapter" = type { %"class.video_capture::mojom::ScopedAccessPermission", %"class.std::__1::unique_ptr" }
%"class.video_capture::mojom::ScopedAccessPermission" = type { i32 (...)** }
%"class.std::__1::unique_ptr" = type { %"class.std::__1::__compressed_pair" }
%"class.std::__1::__compressed_pair" = type { %"struct.std::__1::__compressed_pair_elem" }
%"struct.std::__1::__compressed_pair_elem" = type { %"class.media::VideoCaptureDevice::Client::Buffer::ScopedAccessPermission"* }
%"class.media::VideoCaptureDevice::Client::Buffer::ScopedAccessPermission" = type { i32 (...)** }

@_ZTVN13video_capture40ScopedAccessPermissionMediaToMojoAdapterE = hidden unnamed_addr constant { [4 x i8*] } { [4 x i8*] [i8* null, i8* null, i8* bitcast (void (%"class.video_capture::ScopedAccessPermissionMediaToMojoAdapter"*)* @_ZN13video_capture40ScopedAccessPermissionMediaToMojoAdapterD2Ev to i8*), i8* bitcast (void (%"class.video_capture::ScopedAccessPermissionMediaToMojoAdapter"*)* @_ZN13video_capture40ScopedAccessPermissionMediaToMojoAdapterD0Ev to i8*)] }, align 8

@_ZN13video_capture40ScopedAccessPermissionMediaToMojoAdapterC1ENSt3__110unique_ptrIN5media18VideoCaptureDevice6Client6Buffer22ScopedAccessPermissionENS1_14default_deleteIS7_EEEE = hidden unnamed_addr alias void (%"class.video_capture::ScopedAccessPermissionMediaToMojoAdapter"*, %"class.media::VideoCaptureDevice::Client::Buffer::ScopedAccessPermission"*), void (%"class.video_capture::ScopedAccessPermissionMediaToMojoAdapter"*, %"class.media::VideoCaptureDevice::Client::Buffer::ScopedAccessPermission"*)* @_ZN13video_capture40ScopedAccessPermissionMediaToMojoAdapterC2ENSt3__110unique_ptrIN5media18VideoCaptureDevice6Client6Buffer22ScopedAccessPermissionENS1_14default_deleteIS7_EEEE
@_ZN13video_capture40ScopedAccessPermissionMediaToMojoAdapterD1Ev = hidden unnamed_addr alias void (%"class.video_capture::ScopedAccessPermissionMediaToMojoAdapter"*), void (%"class.video_capture::ScopedAccessPermissionMediaToMojoAdapter"*)* @_ZN13video_capture40ScopedAccessPermissionMediaToMojoAdapterD2Ev

; Function Attrs: nounwind ssp uwtable
define hidden void @_ZN13video_capture40ScopedAccessPermissionMediaToMojoAdapterC2ENSt3__110unique_ptrIN5media18VideoCaptureDevice6Client6Buffer22ScopedAccessPermissionENS1_14default_deleteIS7_EEEE(%"class.video_capture::ScopedAccessPermissionMediaToMojoAdapter"* nocapture, %"class.media::VideoCaptureDevice::Client::Buffer::ScopedAccessPermission"*) unnamed_addr #0 align 2 {
  %3 = ptrtoint %"class.media::VideoCaptureDevice::Client::Buffer::ScopedAccessPermission"* %1 to i64
  %4 = getelementptr inbounds %"class.video_capture::ScopedAccessPermissionMediaToMojoAdapter", %"class.video_capture::ScopedAccessPermissionMediaToMojoAdapter"* %0, i64 0, i32 0, i32 0
  store i32 (...)** bitcast (i8** getelementptr inbounds ({ [4 x i8*] }, { [4 x i8*] }* @_ZTVN13video_capture40ScopedAccessPermissionMediaToMojoAdapterE, i64 0, inrange i32 0, i64 2) to i32 (...)**), i32 (...)*** %4, align 8
  %5 = getelementptr inbounds %"class.video_capture::ScopedAccessPermissionMediaToMojoAdapter", %"class.video_capture::ScopedAccessPermissionMediaToMojoAdapter"* %0, i64 0, i32 1
  %6 = bitcast %"class.std::__1::unique_ptr"* %5 to i64*
  store i64 %3, i64* %6, align 8
  ret void
}

; Function Attrs: nounwind ssp uwtable
define hidden void @_ZN13video_capture40ScopedAccessPermissionMediaToMojoAdapterD2Ev(%"class.video_capture::ScopedAccessPermissionMediaToMojoAdapter"* nocapture) unnamed_addr #0 align 2 {
  %2 = getelementptr inbounds %"class.video_capture::ScopedAccessPermissionMediaToMojoAdapter", %"class.video_capture::ScopedAccessPermissionMediaToMojoAdapter"* %0, i64 0, i32 0, i32 0
  store i32 (...)** bitcast (i8** getelementptr inbounds ({ [4 x i8*] }, { [4 x i8*] }* @_ZTVN13video_capture40ScopedAccessPermissionMediaToMojoAdapterE, i64 0, inrange i32 0, i64 2) to i32 (...)**), i32 (...)*** %2, align 8
  %3 = getelementptr inbounds %"class.video_capture::ScopedAccessPermissionMediaToMojoAdapter", %"class.video_capture::ScopedAccessPermissionMediaToMojoAdapter"* %0, i64 0, i32 1, i32 0, i32 0, i32 0
  %4 = load %"class.media::VideoCaptureDevice::Client::Buffer::ScopedAccessPermission"*, %"class.media::VideoCaptureDevice::Client::Buffer::ScopedAccessPermission"** %3, align 8
  store %"class.media::VideoCaptureDevice::Client::Buffer::ScopedAccessPermission"* null, %"class.media::VideoCaptureDevice::Client::Buffer::ScopedAccessPermission"** %3, align 8
  %5 = icmp eq %"class.media::VideoCaptureDevice::Client::Buffer::ScopedAccessPermission"* %4, null
  br i1 %5, label %11, label %6

6:                                                ; preds = %1
  %7 = bitcast %"class.media::VideoCaptureDevice::Client::Buffer::ScopedAccessPermission"* %4 to void (%"class.media::VideoCaptureDevice::Client::Buffer::ScopedAccessPermission"*)***
  %8 = load void (%"class.media::VideoCaptureDevice::Client::Buffer::ScopedAccessPermission"*)**, void (%"class.media::VideoCaptureDevice::Client::Buffer::ScopedAccessPermission"*)*** %7, align 8
  %9 = getelementptr inbounds void (%"class.media::VideoCaptureDevice::Client::Buffer::ScopedAccessPermission"*)*, void (%"class.media::VideoCaptureDevice::Client::Buffer::ScopedAccessPermission"*)** %8, i64 1
  %10 = load void (%"class.media::VideoCaptureDevice::Client::Buffer::ScopedAccessPermission"*)*, void (%"class.media::VideoCaptureDevice::Client::Buffer::ScopedAccessPermission"*)** %9, align 8
  tail call void %10(%"class.media::VideoCaptureDevice::Client::Buffer::ScopedAccessPermission"* nonnull %4) #2
  br label %11

11:                                               ; preds = %1, %6
  ret void
}

; Function Attrs: nounwind ssp uwtable
define hidden void @_ZN13video_capture40ScopedAccessPermissionMediaToMojoAdapterD0Ev(%"class.video_capture::ScopedAccessPermissionMediaToMojoAdapter"*) unnamed_addr #0 align 2 {
  %2 = getelementptr inbounds %"class.video_capture::ScopedAccessPermissionMediaToMojoAdapter", %"class.video_capture::ScopedAccessPermissionMediaToMojoAdapter"* %0, i64 0, i32 0, i32 0
  store i32 (...)** bitcast (i8** getelementptr inbounds ({ [4 x i8*] }, { [4 x i8*] }* @_ZTVN13video_capture40ScopedAccessPermissionMediaToMojoAdapterE, i64 0, inrange i32 0, i64 2) to i32 (...)**), i32 (...)*** %2, align 8
  %3 = getelementptr inbounds %"class.video_capture::ScopedAccessPermissionMediaToMojoAdapter", %"class.video_capture::ScopedAccessPermissionMediaToMojoAdapter"* %0, i64 0, i32 1, i32 0, i32 0, i32 0
  %4 = load %"class.media::VideoCaptureDevice::Client::Buffer::ScopedAccessPermission"*, %"class.media::VideoCaptureDevice::Client::Buffer::ScopedAccessPermission"** %3, align 8
  store %"class.media::VideoCaptureDevice::Client::Buffer::ScopedAccessPermission"* null, %"class.media::VideoCaptureDevice::Client::Buffer::ScopedAccessPermission"** %3, align 8
  %5 = icmp eq %"class.media::VideoCaptureDevice::Client::Buffer::ScopedAccessPermission"* %4, null
  br i1 %5, label %11, label %6

6:                                                ; preds = %1
  %7 = bitcast %"class.media::VideoCaptureDevice::Client::Buffer::ScopedAccessPermission"* %4 to void (%"class.media::VideoCaptureDevice::Client::Buffer::ScopedAccessPermission"*)***
  %8 = load void (%"class.media::VideoCaptureDevice::Client::Buffer::ScopedAccessPermission"*)**, void (%"class.media::VideoCaptureDevice::Client::Buffer::ScopedAccessPermission"*)*** %7, align 8
  %9 = getelementptr inbounds void (%"class.media::VideoCaptureDevice::Client::Buffer::ScopedAccessPermission"*)*, void (%"class.media::VideoCaptureDevice::Client::Buffer::ScopedAccessPermission"*)** %8, i64 1
  %10 = load void (%"class.media::VideoCaptureDevice::Client::Buffer::ScopedAccessPermission"*)*, void (%"class.media::VideoCaptureDevice::Client::Buffer::ScopedAccessPermission"*)** %9, align 8
  tail call void %10(%"class.media::VideoCaptureDevice::Client::Buffer::ScopedAccessPermission"* nonnull %4) #2
  br label %11

11:                                               ; preds = %1, %6
  %12 = bitcast %"class.video_capture::ScopedAccessPermissionMediaToMojoAdapter"* %0 to i8*
  tail call void @_ZdlPv(i8* %12) #3
  ret void
}

; Function Attrs: nobuiltin nounwind
declare void @_ZdlPv(i8*) local_unnamed_addr #1

attributes #0 = { nounwind ssp uwtable "correctly-rounded-divide-sqrt-fp-math"="false" "disable-tail-calls"="false" "less-precise-fpmad"="false" "min-legal-vector-width"="0" "no-frame-pointer-elim"="false" "no-frame-pointer-elim-non-leaf" "no-infs-fp-math"="false" "no-jump-tables"="false" "no-nans-fp-math"="false" "no-signed-zeros-fp-math"="false" "no-trapping-math"="false" "null-pointer-is-valid"="true" "stack-protector-buffer-size"="4" "target-cpu"="x86-64" "target-features"="+cx8,+fxsr,+mmx,+sse,+sse2,+sse3,+x87" "unsafe-fp-math"="false" "use-soft-float"="false" }
attributes #1 = { nobuiltin nounwind "correctly-rounded-divide-sqrt-fp-math"="false" "disable-tail-calls"="false" "less-precise-fpmad"="false" "no-frame-pointer-elim"="false" "no-frame-pointer-elim-non-leaf" "no-infs-fp-math"="false" "no-nans-fp-math"="false" "no-signed-zeros-fp-math"="false" "no-trapping-math"="false" "null-pointer-is-valid"="true" "stack-protector-buffer-size"="4" "target-cpu"="x86-64" "target-features"="+cx8,+fxsr,+mmx,+sse,+sse2,+sse3,+x87" "unsafe-fp-math"="false" "use-soft-float"="false" }
attributes #2 = { nounwind }
attributes #3 = { builtin nounwind }

!llvm.module.flags = !{!0, !1}

!0 = !{i32 1, !"wchar_size", i32 4}
!1 = !{i32 7, !"PIC Level", i32 2}
