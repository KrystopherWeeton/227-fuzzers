; ModuleID = '../../components/proxy_config/proxy_prefs.cc'
source_filename = "../../components/proxy_config/proxy_prefs.cc"
target datalayout = "e-m:e-i64:64-f80:128-n8:16:32:64-S128"
target triple = "x86_64-unknown-linux-gnu"

%"class.std::__1::basic_string" = type { %"class.std::__1::__compressed_pair" }
%"class.std::__1::__compressed_pair" = type { %"struct.std::__1::__compressed_pair_elem" }
%"struct.std::__1::__compressed_pair_elem" = type { %"struct.std::__1::basic_string<char, std::__1::char_traits<char>, std::__1::allocator<char> >::__rep" }
%"struct.std::__1::basic_string<char, std::__1::char_traits<char>, std::__1::allocator<char> >::__rep" = type { %union.anon }
%union.anon = type { %"struct.std::__1::basic_string<char, std::__1::char_traits<char>, std::__1::allocator<char> >::__long" }
%"struct.std::__1::basic_string<char, std::__1::char_traits<char>, std::__1::allocator<char> >::__long" = type { i8*, i64, i64 }
%"struct.std::__1::basic_string<char, std::__1::char_traits<char>, std::__1::allocator<char> >::__short" = type { [23 x i8], %struct.anon }
%struct.anon = type { i8 }

@_ZN10ProxyPrefs20kDirectProxyModeNameE = hidden constant [7 x i8] c"direct\00", align 1
@_ZN10ProxyPrefs24kAutoDetectProxyModeNameE = hidden constant [12 x i8] c"auto_detect\00", align 1
@_ZN10ProxyPrefs23kPacScriptProxyModeNameE = hidden constant [11 x i8] c"pac_script\00", align 1
@_ZN10ProxyPrefs26kFixedServersProxyModeNameE = hidden constant [14 x i8] c"fixed_servers\00", align 1
@_ZN10ProxyPrefs20kSystemProxyModeNameE = hidden constant [7 x i8] c"system\00", align 1
@_ZN10ProxyPrefs12_GLOBAL__N_115kProxyModeNamesE = internal unnamed_addr constant [5 x i8*] [i8* getelementptr inbounds ([7 x i8], [7 x i8]* @_ZN10ProxyPrefs20kDirectProxyModeNameE, i32 0, i32 0), i8* getelementptr inbounds ([12 x i8], [12 x i8]* @_ZN10ProxyPrefs24kAutoDetectProxyModeNameE, i32 0, i32 0), i8* getelementptr inbounds ([11 x i8], [11 x i8]* @_ZN10ProxyPrefs23kPacScriptProxyModeNameE, i32 0, i32 0), i8* getelementptr inbounds ([14 x i8], [14 x i8]* @_ZN10ProxyPrefs26kFixedServersProxyModeNameE, i32 0, i32 0), i8* getelementptr inbounds ([7 x i8], [7 x i8]* @_ZN10ProxyPrefs20kSystemProxyModeNameE, i32 0, i32 0)], align 16
@.str = private unnamed_addr constant [14 x i8] c"config_policy\00", align 1
@.str.1 = private unnamed_addr constant [17 x i8] c"config_extension\00", align 1
@.str.2 = private unnamed_addr constant [21 x i8] c"config_other_precede\00", align 1
@.str.3 = private unnamed_addr constant [14 x i8] c"config_system\00", align 1
@.str.4 = private unnamed_addr constant [16 x i8] c"config_fallback\00", align 1
@.str.5 = private unnamed_addr constant [13 x i8] c"config_unset\00", align 1

; Function Attrs: nofree norecurse nounwind ssp uwtable writeonly
define hidden zeroext i1 @_ZN10ProxyPrefs14IntToProxyModeEiPNS_9ProxyModeE(i32, i32* nocapture) local_unnamed_addr #0 {
  %3 = icmp ugt i32 %0, 4
  br i1 %3, label %5, label %4

4:                                                ; preds = %2
  store i32 %0, i32* %1, align 4
  br label %5

5:                                                ; preds = %2, %4
  %6 = phi i1 [ true, %4 ], [ false, %2 ]
  ret i1 %6
}

; Function Attrs: nounwind ssp uwtable
define hidden zeroext i1 @_ZN10ProxyPrefs17StringToProxyModeERKNSt3__112basic_stringIcNS0_11char_traitsIcEENS0_9allocatorIcEEEEPNS_9ProxyModeE(%"class.std::__1::basic_string"* dereferenceable(24), i32* nocapture) local_unnamed_addr #1 {
  %3 = bitcast %"class.std::__1::basic_string"* %0 to %"struct.std::__1::basic_string<char, std::__1::char_traits<char>, std::__1::allocator<char> >::__short"*
  %4 = getelementptr inbounds %"struct.std::__1::basic_string<char, std::__1::char_traits<char>, std::__1::allocator<char> >::__short", %"struct.std::__1::basic_string<char, std::__1::char_traits<char>, std::__1::allocator<char> >::__short"* %3, i64 0, i32 1, i32 0
  %5 = getelementptr inbounds %"class.std::__1::basic_string", %"class.std::__1::basic_string"* %0, i64 0, i32 0, i32 0, i32 0, i32 0, i32 0, i32 1
  %6 = load i8, i8* %4, align 1
  %7 = icmp slt i8 %6, 0
  %8 = load i64, i64* %5, align 8
  %9 = zext i8 %6 to i64
  %10 = select i1 %7, i64 %8, i64 %9
  %11 = icmp eq i64 %10, 6
  br i1 %11, label %12, label %19

12:                                               ; preds = %2
  %13 = tail call i32 @_ZNKSt3__112basic_stringIcNS_11char_traitsIcEENS_9allocatorIcEEE7compareEmmPKcm(%"class.std::__1::basic_string"* %0, i64 0, i64 -1, i8* getelementptr inbounds ([7 x i8], [7 x i8]* @_ZN10ProxyPrefs20kDirectProxyModeNameE, i64 0, i64 0), i64 6) #5
  %14 = icmp eq i32 %13, 0
  br i1 %14, label %26, label %15

15:                                               ; preds = %12
  %16 = load i8, i8* %4, align 1
  %17 = load i64, i64* %5, align 8
  %18 = zext i8 %16 to i64
  br label %19

19:                                               ; preds = %15, %2
  %20 = phi i64 [ %18, %15 ], [ %9, %2 ]
  %21 = phi i64 [ %17, %15 ], [ %8, %2 ]
  %22 = phi i8 [ %16, %15 ], [ %6, %2 ]
  %23 = icmp slt i8 %22, 0
  %24 = select i1 %23, i64 %21, i64 %20
  %25 = icmp eq i64 %24, 11
  br i1 %25, label %30, label %37

26:                                               ; preds = %72, %58, %44, %30, %12
  %27 = phi i32 [ 0, %12 ], [ 1, %30 ], [ 2, %44 ], [ 3, %58 ], [ 4, %72 ]
  store i32 %27, i32* %1, align 4
  br label %28

28:                                               ; preds = %65, %72, %26
  %29 = phi i1 [ true, %26 ], [ false, %72 ], [ false, %65 ]
  ret i1 %29

30:                                               ; preds = %19
  %31 = tail call i32 @_ZNKSt3__112basic_stringIcNS_11char_traitsIcEENS_9allocatorIcEEE7compareEmmPKcm(%"class.std::__1::basic_string"* %0, i64 0, i64 -1, i8* getelementptr inbounds ([12 x i8], [12 x i8]* @_ZN10ProxyPrefs24kAutoDetectProxyModeNameE, i64 0, i64 0), i64 11) #5
  %32 = icmp eq i32 %31, 0
  br i1 %32, label %26, label %33

33:                                               ; preds = %30
  %34 = load i8, i8* %4, align 1
  %35 = load i64, i64* %5, align 8
  %36 = zext i8 %34 to i64
  br label %37

37:                                               ; preds = %33, %19
  %38 = phi i64 [ %36, %33 ], [ %20, %19 ]
  %39 = phi i64 [ %35, %33 ], [ %21, %19 ]
  %40 = phi i8 [ %34, %33 ], [ %22, %19 ]
  %41 = icmp slt i8 %40, 0
  %42 = select i1 %41, i64 %39, i64 %38
  %43 = icmp eq i64 %42, 10
  br i1 %43, label %44, label %51

44:                                               ; preds = %37
  %45 = tail call i32 @_ZNKSt3__112basic_stringIcNS_11char_traitsIcEENS_9allocatorIcEEE7compareEmmPKcm(%"class.std::__1::basic_string"* %0, i64 0, i64 -1, i8* getelementptr inbounds ([11 x i8], [11 x i8]* @_ZN10ProxyPrefs23kPacScriptProxyModeNameE, i64 0, i64 0), i64 10) #5
  %46 = icmp eq i32 %45, 0
  br i1 %46, label %26, label %47

47:                                               ; preds = %44
  %48 = load i8, i8* %4, align 1
  %49 = load i64, i64* %5, align 8
  %50 = zext i8 %48 to i64
  br label %51

51:                                               ; preds = %47, %37
  %52 = phi i64 [ %50, %47 ], [ %38, %37 ]
  %53 = phi i64 [ %49, %47 ], [ %39, %37 ]
  %54 = phi i8 [ %48, %47 ], [ %40, %37 ]
  %55 = icmp slt i8 %54, 0
  %56 = select i1 %55, i64 %53, i64 %52
  %57 = icmp eq i64 %56, 13
  br i1 %57, label %58, label %65

58:                                               ; preds = %51
  %59 = tail call i32 @_ZNKSt3__112basic_stringIcNS_11char_traitsIcEENS_9allocatorIcEEE7compareEmmPKcm(%"class.std::__1::basic_string"* %0, i64 0, i64 -1, i8* getelementptr inbounds ([14 x i8], [14 x i8]* @_ZN10ProxyPrefs26kFixedServersProxyModeNameE, i64 0, i64 0), i64 13) #5
  %60 = icmp eq i32 %59, 0
  br i1 %60, label %26, label %61

61:                                               ; preds = %58
  %62 = load i8, i8* %4, align 1
  %63 = load i64, i64* %5, align 8
  %64 = zext i8 %62 to i64
  br label %65

65:                                               ; preds = %61, %51
  %66 = phi i64 [ %64, %61 ], [ %52, %51 ]
  %67 = phi i64 [ %63, %61 ], [ %53, %51 ]
  %68 = phi i8 [ %62, %61 ], [ %54, %51 ]
  %69 = icmp slt i8 %68, 0
  %70 = select i1 %69, i64 %67, i64 %66
  %71 = icmp eq i64 %70, 6
  br i1 %71, label %72, label %28

72:                                               ; preds = %65
  %73 = tail call i32 @_ZNKSt3__112basic_stringIcNS_11char_traitsIcEENS_9allocatorIcEEE7compareEmmPKcm(%"class.std::__1::basic_string"* %0, i64 0, i64 -1, i8* getelementptr inbounds ([7 x i8], [7 x i8]* @_ZN10ProxyPrefs20kSystemProxyModeNameE, i64 0, i64 0), i64 6) #5
  %74 = icmp eq i32 %73, 0
  br i1 %74, label %26, label %28
}

; Function Attrs: norecurse nounwind readnone ssp uwtable
define hidden i8* @_ZN10ProxyPrefs17ProxyModeToStringENS_9ProxyModeE(i32) local_unnamed_addr #2 {
  %2 = zext i32 %0 to i64
  %3 = getelementptr inbounds [5 x i8*], [5 x i8*]* @_ZN10ProxyPrefs12_GLOBAL__N_115kProxyModeNamesE, i64 0, i64 %2
  %4 = load i8*, i8** %3, align 8
  ret i8* %4
}

; Function Attrs: nounwind ssp uwtable
define hidden void @_ZN10ProxyPrefs24ConfigStateToDebugStringENS_11ConfigStateE(%"class.std::__1::basic_string"* noalias sret, i32) local_unnamed_addr #1 {
  switch i32 %1, label %34 [
    i32 0, label %3
    i32 1, label %8
    i32 2, label %14
    i32 3, label %19
    i32 4, label %24
    i32 5, label %29
  ]

3:                                                ; preds = %2
  %4 = bitcast %"class.std::__1::basic_string"* %0 to %"struct.std::__1::basic_string<char, std::__1::char_traits<char>, std::__1::allocator<char> >::__short"*
  %5 = getelementptr inbounds %"struct.std::__1::basic_string<char, std::__1::char_traits<char>, std::__1::allocator<char> >::__short", %"struct.std::__1::basic_string<char, std::__1::char_traits<char>, std::__1::allocator<char> >::__short"* %4, i64 0, i32 1, i32 0
  store i8 13, i8* %5, align 1
  %6 = bitcast %"class.std::__1::basic_string"* %0 to i8*
  tail call void @llvm.memcpy.p0i8.p0i8.i64(i8* align 8 %6, i8* align 1 getelementptr inbounds ([14 x i8], [14 x i8]* @.str, i64 0, i64 0), i64 13, i1 false) #5
  %7 = getelementptr inbounds i8, i8* %6, i64 13
  store i8 0, i8* %7, align 1
  br label %38

8:                                                ; preds = %2
  %9 = bitcast %"class.std::__1::basic_string"* %0 to %"struct.std::__1::basic_string<char, std::__1::char_traits<char>, std::__1::allocator<char> >::__short"*
  %10 = getelementptr inbounds %"struct.std::__1::basic_string<char, std::__1::char_traits<char>, std::__1::allocator<char> >::__short", %"struct.std::__1::basic_string<char, std::__1::char_traits<char>, std::__1::allocator<char> >::__short"* %9, i64 0, i32 1, i32 0
  store i8 16, i8* %10, align 1
  %11 = bitcast %"class.std::__1::basic_string"* %0 to i8*
  tail call void @llvm.memcpy.p0i8.p0i8.i64(i8* align 8 %11, i8* align 1 getelementptr inbounds ([17 x i8], [17 x i8]* @.str.1, i64 0, i64 0), i64 16, i1 false) #5
  %12 = getelementptr inbounds %"class.std::__1::basic_string", %"class.std::__1::basic_string"* %0, i64 0, i32 0, i32 0, i32 0, i32 0, i32 0, i32 2
  %13 = bitcast i64* %12 to i8*
  store i8 0, i8* %13, align 8
  br label %38

14:                                               ; preds = %2
  %15 = bitcast %"class.std::__1::basic_string"* %0 to %"struct.std::__1::basic_string<char, std::__1::char_traits<char>, std::__1::allocator<char> >::__short"*
  %16 = getelementptr inbounds %"struct.std::__1::basic_string<char, std::__1::char_traits<char>, std::__1::allocator<char> >::__short", %"struct.std::__1::basic_string<char, std::__1::char_traits<char>, std::__1::allocator<char> >::__short"* %15, i64 0, i32 1, i32 0
  store i8 20, i8* %16, align 1
  %17 = bitcast %"class.std::__1::basic_string"* %0 to i8*
  tail call void @llvm.memcpy.p0i8.p0i8.i64(i8* align 8 %17, i8* align 1 getelementptr inbounds ([21 x i8], [21 x i8]* @.str.2, i64 0, i64 0), i64 20, i1 false) #5
  %18 = getelementptr inbounds i8, i8* %17, i64 20
  store i8 0, i8* %18, align 4
  br label %38

19:                                               ; preds = %2
  %20 = bitcast %"class.std::__1::basic_string"* %0 to %"struct.std::__1::basic_string<char, std::__1::char_traits<char>, std::__1::allocator<char> >::__short"*
  %21 = getelementptr inbounds %"struct.std::__1::basic_string<char, std::__1::char_traits<char>, std::__1::allocator<char> >::__short", %"struct.std::__1::basic_string<char, std::__1::char_traits<char>, std::__1::allocator<char> >::__short"* %20, i64 0, i32 1, i32 0
  store i8 13, i8* %21, align 1
  %22 = bitcast %"class.std::__1::basic_string"* %0 to i8*
  tail call void @llvm.memcpy.p0i8.p0i8.i64(i8* align 8 %22, i8* align 1 getelementptr inbounds ([14 x i8], [14 x i8]* @.str.3, i64 0, i64 0), i64 13, i1 false) #5
  %23 = getelementptr inbounds i8, i8* %22, i64 13
  store i8 0, i8* %23, align 1
  br label %38

24:                                               ; preds = %2
  %25 = bitcast %"class.std::__1::basic_string"* %0 to %"struct.std::__1::basic_string<char, std::__1::char_traits<char>, std::__1::allocator<char> >::__short"*
  %26 = getelementptr inbounds %"struct.std::__1::basic_string<char, std::__1::char_traits<char>, std::__1::allocator<char> >::__short", %"struct.std::__1::basic_string<char, std::__1::char_traits<char>, std::__1::allocator<char> >::__short"* %25, i64 0, i32 1, i32 0
  store i8 15, i8* %26, align 1
  %27 = bitcast %"class.std::__1::basic_string"* %0 to i8*
  tail call void @llvm.memcpy.p0i8.p0i8.i64(i8* align 8 %27, i8* align 1 getelementptr inbounds ([16 x i8], [16 x i8]* @.str.4, i64 0, i64 0), i64 15, i1 false) #5
  %28 = getelementptr inbounds i8, i8* %27, i64 15
  store i8 0, i8* %28, align 1
  br label %38

29:                                               ; preds = %2
  %30 = bitcast %"class.std::__1::basic_string"* %0 to %"struct.std::__1::basic_string<char, std::__1::char_traits<char>, std::__1::allocator<char> >::__short"*
  %31 = getelementptr inbounds %"struct.std::__1::basic_string<char, std::__1::char_traits<char>, std::__1::allocator<char> >::__short", %"struct.std::__1::basic_string<char, std::__1::char_traits<char>, std::__1::allocator<char> >::__short"* %30, i64 0, i32 1, i32 0
  store i8 12, i8* %31, align 1
  %32 = bitcast %"class.std::__1::basic_string"* %0 to i8*
  tail call void @llvm.memcpy.p0i8.p0i8.i64(i8* align 8 %32, i8* align 1 getelementptr inbounds ([13 x i8], [13 x i8]* @.str.5, i64 0, i64 0), i64 12, i1 false) #5
  %33 = getelementptr inbounds i8, i8* %32, i64 12
  store i8 0, i8* %33, align 4
  br label %38

34:                                               ; preds = %2
  %35 = bitcast %"class.std::__1::basic_string"* %0 to %"struct.std::__1::basic_string<char, std::__1::char_traits<char>, std::__1::allocator<char> >::__short"*
  %36 = getelementptr inbounds %"struct.std::__1::basic_string<char, std::__1::char_traits<char>, std::__1::allocator<char> >::__short", %"struct.std::__1::basic_string<char, std::__1::char_traits<char>, std::__1::allocator<char> >::__short"* %35, i64 0, i32 1, i32 0
  store i8 0, i8* %36, align 1
  %37 = bitcast %"class.std::__1::basic_string"* %0 to i8*
  store i8 0, i8* %37, align 8
  br label %38

38:                                               ; preds = %34, %29, %24, %19, %14, %8, %3
  ret void
}

declare i32 @_ZNKSt3__112basic_stringIcNS_11char_traitsIcEENS_9allocatorIcEEE7compareEmmPKcm(%"class.std::__1::basic_string"*, i64, i64, i8*, i64) local_unnamed_addr #3

; Function Attrs: argmemonly nounwind
declare void @llvm.memcpy.p0i8.p0i8.i64(i8* nocapture writeonly, i8* nocapture readonly, i64, i1 immarg) #4

attributes #0 = { nofree norecurse nounwind ssp uwtable writeonly "correctly-rounded-divide-sqrt-fp-math"="false" "disable-tail-calls"="false" "less-precise-fpmad"="false" "min-legal-vector-width"="0" "no-frame-pointer-elim"="false" "no-frame-pointer-elim-non-leaf" "no-infs-fp-math"="false" "no-jump-tables"="false" "no-nans-fp-math"="false" "no-signed-zeros-fp-math"="false" "no-trapping-math"="false" "null-pointer-is-valid"="true" "stack-protector-buffer-size"="4" "target-cpu"="x86-64" "target-features"="+cx8,+fxsr,+mmx,+sse,+sse2,+sse3,+x87" "unsafe-fp-math"="false" "use-soft-float"="false" }
attributes #1 = { nounwind ssp uwtable "correctly-rounded-divide-sqrt-fp-math"="false" "disable-tail-calls"="false" "less-precise-fpmad"="false" "min-legal-vector-width"="0" "no-frame-pointer-elim"="false" "no-frame-pointer-elim-non-leaf" "no-infs-fp-math"="false" "no-jump-tables"="false" "no-nans-fp-math"="false" "no-signed-zeros-fp-math"="false" "no-trapping-math"="false" "null-pointer-is-valid"="true" "stack-protector-buffer-size"="4" "target-cpu"="x86-64" "target-features"="+cx8,+fxsr,+mmx,+sse,+sse2,+sse3,+x87" "unsafe-fp-math"="false" "use-soft-float"="false" }
attributes #2 = { norecurse nounwind readnone ssp uwtable "correctly-rounded-divide-sqrt-fp-math"="false" "disable-tail-calls"="false" "less-precise-fpmad"="false" "min-legal-vector-width"="0" "no-frame-pointer-elim"="false" "no-frame-pointer-elim-non-leaf" "no-infs-fp-math"="false" "no-jump-tables"="false" "no-nans-fp-math"="false" "no-signed-zeros-fp-math"="false" "no-trapping-math"="false" "null-pointer-is-valid"="true" "stack-protector-buffer-size"="4" "target-cpu"="x86-64" "target-features"="+cx8,+fxsr,+mmx,+sse,+sse2,+sse3,+x87" "unsafe-fp-math"="false" "use-soft-float"="false" }
attributes #3 = { "correctly-rounded-divide-sqrt-fp-math"="false" "disable-tail-calls"="false" "less-precise-fpmad"="false" "no-frame-pointer-elim"="false" "no-frame-pointer-elim-non-leaf" "no-infs-fp-math"="false" "no-nans-fp-math"="false" "no-signed-zeros-fp-math"="false" "no-trapping-math"="false" "null-pointer-is-valid"="true" "stack-protector-buffer-size"="4" "target-cpu"="x86-64" "target-features"="+cx8,+fxsr,+mmx,+sse,+sse2,+sse3,+x87" "unsafe-fp-math"="false" "use-soft-float"="false" }
attributes #4 = { argmemonly nounwind }
attributes #5 = { nounwind }

!llvm.module.flags = !{!0, !1}

!0 = !{i32 1, !"wchar_size", i32 4}
!1 = !{i32 7, !"PIC Level", i32 2}
