; ModuleID = '../../third_party/pdfium/core/fxcrt/css/cfx_cssdeclaration.cpp'
source_filename = "../../third_party/pdfium/core/fxcrt/css/cfx_cssdeclaration.cpp"
target datalayout = "e-m:e-i64:64-f80:128-n8:16:32:64-S128"
target triple = "x86_64-unknown-linux-gnu"

module asm ".symver exp, exp@GLIBC_2.2.5"
module asm ".symver exp2, exp2@GLIBC_2.2.5"
module asm ".symver exp2f, exp2f@GLIBC_2.2.5"
module asm ".symver expf, expf@GLIBC_2.2.5"
module asm ".symver lgamma, lgamma@GLIBC_2.2.5"
module asm ".symver lgammaf, lgammaf@GLIBC_2.2.5"
module asm ".symver lgammal, lgammal@GLIBC_2.2.5"
module asm ".symver log, log@GLIBC_2.2.5"
module asm ".symver log2, log2@GLIBC_2.2.5"
module asm ".symver log2f, log2f@GLIBC_2.2.5"
module asm ".symver logf, logf@GLIBC_2.2.5"
module asm ".symver pow, pow@GLIBC_2.2.5"
module asm ".symver powf, powf@GLIBC_2.2.5"

%class.CFX_CSSDeclaration = type { %"class.std::__1::vector", %"class.std::__1::vector.1" }
%"class.std::__1::vector" = type { %"class.std::__1::__vector_base" }
%"class.std::__1::__vector_base" = type { %"class.std::__1::unique_ptr"*, %"class.std::__1::unique_ptr"*, %"class.std::__1::__compressed_pair" }
%"class.std::__1::unique_ptr" = type { %"class.std::__1::__compressed_pair.9" }
%"class.std::__1::__compressed_pair.9" = type { %"struct.std::__1::__compressed_pair_elem.10" }
%"struct.std::__1::__compressed_pair_elem.10" = type { %class.CFX_CSSPropertyHolder* }
%class.CFX_CSSPropertyHolder = type { i8, i8, %"class.fxcrt::RetainPtr" }
%"class.fxcrt::RetainPtr" = type { %"class.std::__1::unique_ptr.11" }
%"class.std::__1::unique_ptr.11" = type { %"class.std::__1::__compressed_pair.12" }
%"class.std::__1::__compressed_pair.12" = type { %"struct.std::__1::__compressed_pair_elem.13" }
%"struct.std::__1::__compressed_pair_elem.13" = type { %class.CFX_CSSValue* }
%class.CFX_CSSValue = type <{ %"class.fxcrt::Retainable", i8, [7 x i8] }>
%"class.fxcrt::Retainable" = type { i32 (...)**, i64 }
%"class.std::__1::__compressed_pair" = type { %"struct.std::__1::__compressed_pair_elem" }
%"struct.std::__1::__compressed_pair_elem" = type { %"class.std::__1::unique_ptr"* }
%"class.std::__1::vector.1" = type { %"class.std::__1::__vector_base.2" }
%"class.std::__1::__vector_base.2" = type { %"class.std::__1::unique_ptr.3"*, %"class.std::__1::unique_ptr.3"*, %"class.std::__1::__compressed_pair.4" }
%"class.std::__1::unique_ptr.3" = type { %"class.std::__1::__compressed_pair.16" }
%"class.std::__1::__compressed_pair.16" = type { %"struct.std::__1::__compressed_pair_elem.17" }
%"struct.std::__1::__compressed_pair_elem.17" = type { %class.CFX_CSSCustomProperty* }
%class.CFX_CSSCustomProperty = type { %"class.fxcrt::WideString", %"class.fxcrt::WideString" }
%"class.fxcrt::WideString" = type { %"class.fxcrt::RetainPtr.18" }
%"class.fxcrt::RetainPtr.18" = type { %"class.std::__1::unique_ptr.19" }
%"class.std::__1::unique_ptr.19" = type { %"class.std::__1::__compressed_pair.20" }
%"class.std::__1::__compressed_pair.20" = type { %"struct.std::__1::__compressed_pair_elem.21" }
%"struct.std::__1::__compressed_pair_elem.21" = type { %"class.fxcrt::StringDataTemplate"* }
%"class.fxcrt::StringDataTemplate" = type <{ i64, i64, i64, [1 x i32], [4 x i8] }>
%"class.std::__1::__compressed_pair.4" = type { %"struct.std::__1::__compressed_pair_elem.5" }
%"struct.std::__1::__compressed_pair_elem.5" = type { %"class.std::__1::unique_ptr.3"* }
%"class.fxcrt::StringViewTemplate" = type { %"class.pdfium::span" }
%"class.pdfium::span" = type { %"class.fxcrt::UnownedPtr", i64 }
%"class.fxcrt::UnownedPtr" = type { i32* }
%class.CFX_CSSValueListParser = type { i32, i32*, i32* }
%"struct.CFX_CSSData::LengthUnit" = type { i32*, i32 }
%"struct.CFX_CSSData::Color" = type { i32*, i32 }
%"struct.CFX_CSSData::Property" = type { i8, i32, i32 }
%"struct.CFX_CSSData::PropertyValue" = type { i8, i32 }
%class.CFX_CSSEnumValue = type { %class.CFX_CSSValue.base, i8, [6 x i8] }
%class.CFX_CSSValue.base = type <{ %"class.fxcrt::Retainable", i8 }>
%class.CFX_CSSColorValue = type { %class.CFX_CSSValue.base, i32 }
%class.CFX_CSSNumberValue = type { %class.CFX_CSSValue.base, i32, float, [4 x i8] }
%class.CFX_CSSStringValue = type { %class.CFX_CSSValue.base, %"class.fxcrt::WideString" }
%"class.std::__1::vector.51" = type { %"class.std::__1::__vector_base.52" }
%"class.std::__1::__vector_base.52" = type { %"class.fxcrt::RetainPtr"*, %"class.fxcrt::RetainPtr"*, %"class.std::__1::__compressed_pair.53" }
%"class.std::__1::__compressed_pair.53" = type { %"struct.std::__1::__compressed_pair_elem.54" }
%"struct.std::__1::__compressed_pair_elem.54" = type { %"class.fxcrt::RetainPtr"* }
%"class.fxcrt::RetainPtr.58" = type { %"class.std::__1::unique_ptr.59" }
%"class.std::__1::unique_ptr.59" = type { %"class.std::__1::__compressed_pair.60" }
%"class.std::__1::__compressed_pair.60" = type { %"struct.std::__1::__compressed_pair_elem.61" }
%"struct.std::__1::__compressed_pair_elem.61" = type { %class.CFX_CSSValueList* }
%class.CFX_CSSValueList = type { %class.CFX_CSSValue.base, %"class.std::__1::vector.51" }
%"class.std::__1::__vector_base_common" = type { i8 }

$_ZN6pdfium10MakeRetainI16CFX_CSSValueListJNSt3__16vectorIN5fxcrt9RetainPtrI12CFX_CSSValueEENS2_9allocatorIS7_EEEEEEENS5_IT_EEDpOT0_ = comdat any

$_ZNSt3__16vectorINS_10unique_ptrI21CFX_CSSPropertyHolderNS_14default_deleteIS2_EEEENS_9allocatorIS5_EEE21__push_back_slow_pathIS5_EEvOT_ = comdat any

$_ZNSt3__16vectorINS_10unique_ptrI21CFX_CSSCustomPropertyNS_14default_deleteIS2_EEEENS_9allocatorIS5_EEE21__push_back_slow_pathIS5_EEvOT_ = comdat any

$_ZNSt3__16vectorIN5fxcrt9RetainPtrI12CFX_CSSValueEENS_9allocatorIS4_EEE21__push_back_slow_pathIS4_EEvOT_ = comdat any

@.str = private unnamed_addr constant [5 x i32] [i32 114, i32 103, i32 98, i32 40, i32 0], align 4
@.str.1 = private unnamed_addr constant [10 x i32] [i32 105, i32 109, i32 112, i32 111, i32 114, i32 116, i32 97, i32 110, i32 116, i32 0], align 4
@_ZZN18CFX_CSSDeclaration11AddPropertyEPKN11CFX_CSSData8PropertyEN5fxcrt18StringViewTemplateIwEEE16kValueGuessOrder = internal constant [4 x i32] [i32 16, i32 32, i32 256, i32 128], align 16

@_ZN18CFX_CSSDeclarationC1Ev = hidden unnamed_addr alias void (%class.CFX_CSSDeclaration*), void (%class.CFX_CSSDeclaration*)* @_ZN18CFX_CSSDeclarationC2Ev
@_ZN18CFX_CSSDeclarationD1Ev = hidden unnamed_addr alias void (%class.CFX_CSSDeclaration*), void (%class.CFX_CSSDeclaration*)* @_ZN18CFX_CSSDeclarationD2Ev

; Function Attrs: nofree norecurse nounwind ssp uwtable
define hidden zeroext i1 @_ZN18CFX_CSSDeclaration14ParseCSSStringEPKwiPiS2_(i32* nocapture readonly, i32, i32* nocapture, i32* nocapture) local_unnamed_addr #0 align 2 {
  store i32 0, i32* %2, align 4
  store i32 %1, i32* %3, align 4
  %5 = icmp sgt i32 %1, 1
  br i1 %5, label %6, label %22

6:                                                ; preds = %4
  %7 = load i32, i32* %0, align 4
  %8 = add nsw i32 %1, -1
  %9 = sext i32 %8 to i64
  %10 = getelementptr inbounds i32, i32* %0, i64 %9
  %11 = load i32, i32* %10, align 4
  %12 = icmp eq i32 %7, 34
  %13 = icmp eq i32 %11, 34
  %14 = and i1 %12, %13
  br i1 %14, label %19, label %15

15:                                               ; preds = %6
  %16 = icmp eq i32 %7, 39
  %17 = icmp eq i32 %11, 39
  %18 = and i1 %16, %17
  br i1 %18, label %19, label %22

19:                                               ; preds = %15, %6
  store i32 1, i32* %2, align 4
  %20 = load i32, i32* %3, align 4
  %21 = add nsw i32 %20, -2
  store i32 %21, i32* %3, align 4
  br label %22

22:                                               ; preds = %15, %19, %4
  %23 = icmp sgt i32 %1, 0
  ret i1 %23
}

; Function Attrs: argmemonly nounwind
declare void @llvm.lifetime.start.p0i8(i64 immarg, i8* nocapture) #1

; Function Attrs: argmemonly nounwind
declare void @llvm.lifetime.end.p0i8(i64 immarg, i8* nocapture) #1

; Function Attrs: nounwind ssp uwtable
define hidden zeroext i1 @_ZN18CFX_CSSDeclaration13ParseCSSColorEPKwiPj(i32*, i32, i32* nocapture) local_unnamed_addr #2 align 2 {
  %4 = alloca i32, align 4
  %5 = alloca %"class.fxcrt::StringViewTemplate", align 8
  %6 = alloca i32*, align 8
  %7 = alloca i32, align 4
  %8 = alloca [3 x i8], align 1
  %9 = alloca i8, align 1
  %10 = alloca %class.CFX_CSSValueListParser, align 8
  %11 = alloca %"class.fxcrt::StringViewTemplate", align 8
  store i32* %0, i32** %6, align 8
  store i32 %1, i32* %7, align 4
  %12 = load i32, i32* %0, align 4
  %13 = icmp eq i32 %12, 35
  br i1 %13, label %14, label %291

14:                                               ; preds = %3
  switch i32 %1, label %366 [
    i32 4, label %15
    i32 7, label %132
  ]

15:                                               ; preds = %14
  %16 = getelementptr inbounds i32, i32* %0, i64 1
  %17 = load i32, i32* %16, align 4
  %18 = trunc i32 %17 to i8
  %19 = icmp slt i8 %18, 0
  br i1 %19, label %48, label %20

20:                                               ; preds = %15
  %21 = tail call i16** @__ctype_b_loc() #13
  %22 = load i16*, i16** %21, align 8
  %23 = sext i8 %18 to i64
  %24 = getelementptr inbounds i16, i16* %22, i64 %23
  %25 = load i16, i16* %24, align 2
  %26 = and i16 %25, 4096
  %27 = icmp eq i16 %26, 0
  br i1 %27, label %48, label %28

28:                                               ; preds = %20
  %29 = shl i32 %17, 24
  %30 = ashr exact i32 %29, 24
  %31 = add nsw i32 %30, -97
  %32 = icmp ult i32 %31, 26
  %33 = add nsw i8 %18, -32
  %34 = select i1 %32, i8 %33, i8 %18
  %35 = icmp sgt i8 %34, 57
  %36 = select i1 %35, i8 9, i8 0
  %37 = add i8 %36, %34
  %38 = shl i8 %37, 4
  %39 = shl i32 %17, 24
  %40 = ashr exact i32 %39, 24
  %41 = add nsw i32 %40, -97
  %42 = icmp ult i32 %41, 26
  %43 = add nsw i8 %18, -32
  %44 = select i1 %42, i8 %43, i8 %18
  %45 = icmp sgt i8 %44, 57
  %46 = select i1 %45, i8 -55, i8 -48
  %47 = add nsw i8 %46, %44
  br label %48

48:                                               ; preds = %20, %15, %28
  %49 = phi i8 [ %38, %28 ], [ 0, %15 ], [ 0, %20 ]
  %50 = phi i8 [ %47, %28 ], [ 0, %15 ], [ 0, %20 ]
  %51 = add i8 %50, %49
  %52 = getelementptr inbounds i32, i32* %0, i64 2
  %53 = load i32, i32* %52, align 4
  %54 = trunc i32 %53 to i8
  %55 = icmp slt i8 %54, 0
  br i1 %55, label %84, label %56

56:                                               ; preds = %48
  %57 = tail call i16** @__ctype_b_loc() #13
  %58 = load i16*, i16** %57, align 8
  %59 = sext i8 %54 to i64
  %60 = getelementptr inbounds i16, i16* %58, i64 %59
  %61 = load i16, i16* %60, align 2
  %62 = and i16 %61, 4096
  %63 = icmp eq i16 %62, 0
  br i1 %63, label %84, label %64

64:                                               ; preds = %56
  %65 = shl i32 %53, 24
  %66 = ashr exact i32 %65, 24
  %67 = add nsw i32 %66, -97
  %68 = icmp ult i32 %67, 26
  %69 = add nsw i8 %54, -32
  %70 = select i1 %68, i8 %69, i8 %54
  %71 = icmp sgt i8 %70, 57
  %72 = select i1 %71, i8 9, i8 0
  %73 = add i8 %72, %70
  %74 = shl i8 %73, 4
  %75 = shl i32 %53, 24
  %76 = ashr exact i32 %75, 24
  %77 = add nsw i32 %76, -97
  %78 = icmp ult i32 %77, 26
  %79 = add nsw i8 %54, -32
  %80 = select i1 %78, i8 %79, i8 %54
  %81 = icmp sgt i8 %80, 57
  %82 = select i1 %81, i8 -55, i8 -48
  %83 = add nsw i8 %82, %80
  br label %84

84:                                               ; preds = %56, %48, %64
  %85 = phi i8 [ %74, %64 ], [ 0, %48 ], [ 0, %56 ]
  %86 = phi i8 [ %83, %64 ], [ 0, %48 ], [ 0, %56 ]
  %87 = add i8 %86, %85
  %88 = getelementptr inbounds i32, i32* %0, i64 3
  %89 = load i32, i32* %88, align 4
  %90 = trunc i32 %89 to i8
  %91 = icmp slt i8 %90, 0
  br i1 %91, label %120, label %92

92:                                               ; preds = %84
  %93 = tail call i16** @__ctype_b_loc() #13
  %94 = load i16*, i16** %93, align 8
  %95 = sext i8 %90 to i64
  %96 = getelementptr inbounds i16, i16* %94, i64 %95
  %97 = load i16, i16* %96, align 2
  %98 = and i16 %97, 4096
  %99 = icmp eq i16 %98, 0
  br i1 %99, label %120, label %100

100:                                              ; preds = %92
  %101 = shl i32 %89, 24
  %102 = ashr exact i32 %101, 24
  %103 = add nsw i32 %102, -97
  %104 = icmp ult i32 %103, 26
  %105 = add nsw i8 %90, -32
  %106 = select i1 %104, i8 %105, i8 %90
  %107 = icmp sgt i8 %106, 57
  %108 = select i1 %107, i8 9, i8 0
  %109 = add i8 %108, %106
  %110 = shl i8 %109, 4
  %111 = shl i32 %89, 24
  %112 = ashr exact i32 %111, 24
  %113 = add nsw i32 %112, -97
  %114 = icmp ult i32 %113, 26
  %115 = add nsw i8 %90, -32
  %116 = select i1 %114, i8 %115, i8 %90
  %117 = icmp sgt i8 %116, 57
  %118 = select i1 %117, i8 -55, i8 -48
  %119 = add nsw i8 %118, %116
  br label %120

120:                                              ; preds = %92, %84, %100
  %121 = phi i8 [ %110, %100 ], [ 0, %84 ], [ 0, %92 ]
  %122 = phi i8 [ %119, %100 ], [ 0, %84 ], [ 0, %92 ]
  %123 = add i8 %122, %121
  %124 = zext i8 %51 to i32
  %125 = zext i8 %87 to i32
  %126 = zext i8 %123 to i32
  %127 = shl nuw nsw i32 %124, 16
  %128 = shl nuw nsw i32 %125, 8
  %129 = or i32 %127, %128
  %130 = or i32 %129, %126
  %131 = or i32 %130, -16777216
  store i32 %131, i32* %2, align 4
  br label %366

132:                                              ; preds = %14
  %133 = getelementptr inbounds i32, i32* %0, i64 1
  %134 = load i32, i32* %133, align 4
  %135 = trunc i32 %134 to i8
  %136 = getelementptr inbounds i32, i32* %0, i64 2
  %137 = load i32, i32* %136, align 4
  %138 = trunc i32 %137 to i8
  %139 = icmp slt i8 %135, 0
  br i1 %139, label %159, label %140

140:                                              ; preds = %132
  %141 = tail call i16** @__ctype_b_loc() #13
  %142 = load i16*, i16** %141, align 8
  %143 = sext i8 %135 to i64
  %144 = getelementptr inbounds i16, i16* %142, i64 %143
  %145 = load i16, i16* %144, align 2
  %146 = and i16 %145, 4096
  %147 = icmp eq i16 %146, 0
  br i1 %147, label %159, label %148

148:                                              ; preds = %140
  %149 = shl i32 %134, 24
  %150 = ashr exact i32 %149, 24
  %151 = add nsw i32 %150, -97
  %152 = icmp ult i32 %151, 26
  %153 = add nsw i8 %135, -32
  %154 = select i1 %152, i8 %153, i8 %135
  %155 = icmp sgt i8 %154, 57
  %156 = select i1 %155, i8 9, i8 0
  %157 = add i8 %156, %154
  %158 = shl i8 %157, 4
  br label %159

159:                                              ; preds = %148, %140, %132
  %160 = phi i8 [ %158, %148 ], [ 0, %140 ], [ 0, %132 ]
  %161 = icmp slt i8 %138, 0
  br i1 %161, label %180, label %162

162:                                              ; preds = %159
  %163 = tail call i16** @__ctype_b_loc() #13
  %164 = load i16*, i16** %163, align 8
  %165 = sext i8 %138 to i64
  %166 = getelementptr inbounds i16, i16* %164, i64 %165
  %167 = load i16, i16* %166, align 2
  %168 = and i16 %167, 4096
  %169 = icmp eq i16 %168, 0
  br i1 %169, label %180, label %170

170:                                              ; preds = %162
  %171 = shl i32 %137, 24
  %172 = ashr exact i32 %171, 24
  %173 = add nsw i32 %172, -97
  %174 = icmp ult i32 %173, 26
  %175 = add nsw i8 %138, -32
  %176 = select i1 %174, i8 %175, i8 %138
  %177 = icmp sgt i8 %176, 57
  %178 = select i1 %177, i8 -55, i8 -48
  %179 = add nsw i8 %178, %176
  br label %180

180:                                              ; preds = %159, %162, %170
  %181 = phi i8 [ %179, %170 ], [ 0, %162 ], [ 0, %159 ]
  %182 = add i8 %181, %160
  %183 = getelementptr inbounds i32, i32* %0, i64 3
  %184 = load i32, i32* %183, align 4
  %185 = trunc i32 %184 to i8
  %186 = getelementptr inbounds i32, i32* %0, i64 4
  %187 = load i32, i32* %186, align 4
  %188 = trunc i32 %187 to i8
  %189 = icmp slt i8 %185, 0
  br i1 %189, label %209, label %190

190:                                              ; preds = %180
  %191 = tail call i16** @__ctype_b_loc() #13
  %192 = load i16*, i16** %191, align 8
  %193 = sext i8 %185 to i64
  %194 = getelementptr inbounds i16, i16* %192, i64 %193
  %195 = load i16, i16* %194, align 2
  %196 = and i16 %195, 4096
  %197 = icmp eq i16 %196, 0
  br i1 %197, label %209, label %198

198:                                              ; preds = %190
  %199 = shl i32 %184, 24
  %200 = ashr exact i32 %199, 24
  %201 = add nsw i32 %200, -97
  %202 = icmp ult i32 %201, 26
  %203 = add nsw i8 %185, -32
  %204 = select i1 %202, i8 %203, i8 %185
  %205 = icmp sgt i8 %204, 57
  %206 = select i1 %205, i8 9, i8 0
  %207 = add i8 %206, %204
  %208 = shl i8 %207, 4
  br label %209

209:                                              ; preds = %198, %190, %180
  %210 = phi i8 [ %208, %198 ], [ 0, %190 ], [ 0, %180 ]
  %211 = icmp slt i8 %188, 0
  br i1 %211, label %230, label %212

212:                                              ; preds = %209
  %213 = tail call i16** @__ctype_b_loc() #13
  %214 = load i16*, i16** %213, align 8
  %215 = sext i8 %188 to i64
  %216 = getelementptr inbounds i16, i16* %214, i64 %215
  %217 = load i16, i16* %216, align 2
  %218 = and i16 %217, 4096
  %219 = icmp eq i16 %218, 0
  br i1 %219, label %230, label %220

220:                                              ; preds = %212
  %221 = shl i32 %187, 24
  %222 = ashr exact i32 %221, 24
  %223 = add nsw i32 %222, -97
  %224 = icmp ult i32 %223, 26
  %225 = add nsw i8 %188, -32
  %226 = select i1 %224, i8 %225, i8 %188
  %227 = icmp sgt i8 %226, 57
  %228 = select i1 %227, i8 -55, i8 -48
  %229 = add nsw i8 %228, %226
  br label %230

230:                                              ; preds = %209, %212, %220
  %231 = phi i8 [ %229, %220 ], [ 0, %212 ], [ 0, %209 ]
  %232 = add i8 %231, %210
  %233 = getelementptr inbounds i32, i32* %0, i64 5
  %234 = load i32, i32* %233, align 4
  %235 = trunc i32 %234 to i8
  %236 = getelementptr inbounds i32, i32* %0, i64 6
  %237 = load i32, i32* %236, align 4
  %238 = trunc i32 %237 to i8
  %239 = icmp slt i8 %235, 0
  br i1 %239, label %259, label %240

240:                                              ; preds = %230
  %241 = tail call i16** @__ctype_b_loc() #13
  %242 = load i16*, i16** %241, align 8
  %243 = sext i8 %235 to i64
  %244 = getelementptr inbounds i16, i16* %242, i64 %243
  %245 = load i16, i16* %244, align 2
  %246 = and i16 %245, 4096
  %247 = icmp eq i16 %246, 0
  br i1 %247, label %259, label %248

248:                                              ; preds = %240
  %249 = shl i32 %234, 24
  %250 = ashr exact i32 %249, 24
  %251 = add nsw i32 %250, -97
  %252 = icmp ult i32 %251, 26
  %253 = add nsw i8 %235, -32
  %254 = select i1 %252, i8 %253, i8 %235
  %255 = icmp sgt i8 %254, 57
  %256 = select i1 %255, i8 9, i8 0
  %257 = add i8 %256, %254
  %258 = shl i8 %257, 4
  br label %259

259:                                              ; preds = %248, %240, %230
  %260 = phi i8 [ %258, %248 ], [ 0, %240 ], [ 0, %230 ]
  %261 = icmp slt i8 %238, 0
  br i1 %261, label %280, label %262

262:                                              ; preds = %259
  %263 = tail call i16** @__ctype_b_loc() #13
  %264 = load i16*, i16** %263, align 8
  %265 = sext i8 %238 to i64
  %266 = getelementptr inbounds i16, i16* %264, i64 %265
  %267 = load i16, i16* %266, align 2
  %268 = and i16 %267, 4096
  %269 = icmp eq i16 %268, 0
  br i1 %269, label %280, label %270

270:                                              ; preds = %262
  %271 = shl i32 %237, 24
  %272 = ashr exact i32 %271, 24
  %273 = add nsw i32 %272, -97
  %274 = icmp ult i32 %273, 26
  %275 = add nsw i8 %238, -32
  %276 = select i1 %274, i8 %275, i8 %238
  %277 = icmp sgt i8 %276, 57
  %278 = select i1 %277, i8 -55, i8 -48
  %279 = add nsw i8 %278, %276
  br label %280

280:                                              ; preds = %259, %262, %270
  %281 = phi i8 [ %279, %270 ], [ 0, %262 ], [ 0, %259 ]
  %282 = add i8 %281, %260
  %283 = zext i8 %182 to i32
  %284 = zext i8 %232 to i32
  %285 = zext i8 %282 to i32
  %286 = shl nuw nsw i32 %283, 16
  %287 = shl nuw nsw i32 %284, 8
  %288 = or i32 %286, %287
  %289 = or i32 %288, %285
  %290 = or i32 %289, -16777216
  store i32 %290, i32* %2, align 4
  br label %366

291:                                              ; preds = %3
  %292 = icmp sgt i32 %1, 9
  br i1 %292, label %293, label %357

293:                                              ; preds = %291
  %294 = add nsw i32 %1, -1
  %295 = sext i32 %294 to i64
  %296 = getelementptr inbounds i32, i32* %0, i64 %295
  %297 = load i32, i32* %296, align 4
  %298 = icmp eq i32 %297, 41
  br i1 %298, label %299, label %366

299:                                              ; preds = %293
  %300 = tail call i32 @_Z14FXSYS_wcsnicmpPKwS0_m(i32* getelementptr inbounds ([5 x i32], [5 x i32]* @.str, i64 0, i64 0), i32* %0, i64 4) #14
  %301 = icmp eq i32 %300, 0
  br i1 %301, label %302, label %366

302:                                              ; preds = %299
  %303 = getelementptr inbounds [3 x i8], [3 x i8]* %8, i64 0, i64 0
  call void @llvm.lifetime.start.p0i8(i64 3, i8* nonnull %303) #14
  call void @llvm.memset.p0i8.i64(i8* nonnull align 1 %303, i8 0, i64 3, i1 false)
  call void @llvm.lifetime.start.p0i8(i64 1, i8* nonnull %9) #14
  store i8 -86, i8* %9, align 1
  %304 = bitcast %class.CFX_CSSValueListParser* %10 to i8*
  call void @llvm.lifetime.start.p0i8(i64 24, i8* nonnull %304) #14
  call void @llvm.memset.p0i8.i64(i8* nonnull align 8 %304, i8 -86, i64 24, i1 false)
  %305 = getelementptr inbounds i32, i32* %0, i64 4
  %306 = add nsw i32 %1, -5
  call void @_ZN22CFX_CSSValueListParserC1EPKwiw(%class.CFX_CSSValueListParser* nonnull %10, i32* %305, i32 %306, i32 signext 44) #14
  %307 = bitcast %"class.fxcrt::StringViewTemplate"* %5 to i8*
  %308 = bitcast i32* %4 to i8*
  %309 = getelementptr inbounds %"class.fxcrt::StringViewTemplate", %"class.fxcrt::StringViewTemplate"* %5, i64 0, i32 0, i32 0, i32 0
  %310 = getelementptr inbounds %"class.fxcrt::StringViewTemplate", %"class.fxcrt::StringViewTemplate"* %5, i64 0, i32 0, i32 1
  %311 = call zeroext i1 @_ZN22CFX_CSSValueListParser9NextValueEPN12CFX_CSSValue13PrimitiveTypeEPPKwPi(%class.CFX_CSSValueListParser* nonnull %10, i8* nonnull %9, i32** nonnull %6, i32* nonnull %7) #14
  %312 = load i8, i8* %9, align 1
  %313 = icmp eq i8 %312, 1
  %314 = and i1 %311, %313
  br i1 %314, label %315, label %355

315:                                              ; preds = %302
  %316 = load i32*, i32** %6, align 8
  %317 = load i32, i32* %7, align 4
  call void @llvm.lifetime.start.p0i8(i64 16, i8* nonnull %307)
  call void @llvm.lifetime.start.p0i8(i64 4, i8* nonnull %308) #14
  store i32 0, i32* %4, align 4
  %318 = call float @_Z12FXSYS_wcstofPKwiPi(i32* %316, i32 %317, i32* nonnull %4) #14
  %319 = load i32, i32* %4, align 4
  %320 = icmp sgt i32 %319, 0
  %321 = call float @llvm.fabs.f32(float %318) #13
  %322 = fcmp one float %321, 0x7FF0000000000000
  %323 = and i1 %322, %320
  br i1 %323, label %324, label %345

324:                                              ; preds = %315
  %325 = sub nsw i32 %317, %319
  %326 = sext i32 %319 to i64
  %327 = getelementptr inbounds i32, i32* %316, i64 %326
  %328 = icmp sgt i32 %325, 0
  br i1 %328, label %329, label %338

329:                                              ; preds = %324
  %330 = load i32, i32* %327, align 4
  %331 = icmp eq i32 %330, 37
  br i1 %331, label %332, label %333

332:                                              ; preds = %329
  call void @llvm.lifetime.end.p0i8(i64 4, i8* nonnull %308) #14
  call void @llvm.lifetime.end.p0i8(i64 16, i8* nonnull %307)
  br label %343

333:                                              ; preds = %329
  %334 = icmp eq i32 %325, 2
  br i1 %334, label %335, label %338

335:                                              ; preds = %333
  store i32* %327, i32** %309, align 8
  store i64 2, i64* %310, align 8
  %336 = call %"struct.CFX_CSSData::LengthUnit"* @_ZN11CFX_CSSData19GetLengthUnitByNameEN5fxcrt18StringViewTemplateIwEE(%"class.fxcrt::StringViewTemplate"* nonnull %5) #14
  %337 = icmp eq %"struct.CFX_CSSData::LengthUnit"* %336, null
  br i1 %337, label %338, label %339

338:                                              ; preds = %324, %333, %335
  call void @llvm.lifetime.end.p0i8(i64 4, i8* nonnull %308) #14
  call void @llvm.lifetime.end.p0i8(i64 16, i8* nonnull %307)
  br label %346

339:                                              ; preds = %335
  %340 = getelementptr inbounds %"struct.CFX_CSSData::LengthUnit", %"struct.CFX_CSSData::LengthUnit"* %336, i64 0, i32 1
  %341 = load i32, i32* %340, align 8
  call void @llvm.lifetime.end.p0i8(i64 4, i8* nonnull %308) #14
  call void @llvm.lifetime.end.p0i8(i64 16, i8* nonnull %307)
  %342 = icmp eq i32 %341, 1
  br i1 %342, label %343, label %346

343:                                              ; preds = %332, %339
  %344 = fmul float %318, 0x4004666660000000
  br label %346

345:                                              ; preds = %407, %368, %315
  call void @llvm.lifetime.end.p0i8(i64 4, i8* nonnull %308) #14
  call void @llvm.lifetime.end.p0i8(i64 16, i8* nonnull %307)
  br label %355

346:                                              ; preds = %339, %338, %343
  %347 = phi float [ %344, %343 ], [ %318, %338 ], [ %318, %339 ]
  %348 = call i32 @FXSYS_roundf(float %347) #14
  %349 = trunc i32 %348 to i8
  %350 = getelementptr inbounds [3 x i8], [3 x i8]* %8, i64 0, i64 0
  store i8 %349, i8* %350, align 1
  %351 = call zeroext i1 @_ZN22CFX_CSSValueListParser9NextValueEPN12CFX_CSSValue13PrimitiveTypeEPPKwPi(%class.CFX_CSSValueListParser* nonnull %10, i8* nonnull %9, i32** nonnull %6, i32* nonnull %7) #14
  %352 = load i8, i8* %9, align 1
  %353 = icmp eq i8 %352, 1
  %354 = and i1 %351, %353
  br i1 %354, label %368, label %355

355:                                              ; preds = %302, %346, %398, %345, %437
  %356 = phi i1 [ true, %437 ], [ false, %345 ], [ false, %398 ], [ false, %346 ], [ false, %302 ]
  call void @llvm.lifetime.end.p0i8(i64 24, i8* nonnull %304) #14
  call void @llvm.lifetime.end.p0i8(i64 1, i8* nonnull %9) #14
  call void @llvm.lifetime.end.p0i8(i64 3, i8* nonnull %303) #14
  br label %366

357:                                              ; preds = %291
  %358 = sext i32 %1 to i64
  %359 = getelementptr inbounds %"class.fxcrt::StringViewTemplate", %"class.fxcrt::StringViewTemplate"* %11, i64 0, i32 0, i32 0, i32 0
  store i32* %0, i32** %359, align 8
  %360 = getelementptr inbounds %"class.fxcrt::StringViewTemplate", %"class.fxcrt::StringViewTemplate"* %11, i64 0, i32 0, i32 1
  store i64 %358, i64* %360, align 8
  %361 = call %"struct.CFX_CSSData::Color"* @_ZN11CFX_CSSData14GetColorByNameEN5fxcrt18StringViewTemplateIwEE(%"class.fxcrt::StringViewTemplate"* nonnull %11) #14
  %362 = icmp eq %"struct.CFX_CSSData::Color"* %361, null
  br i1 %362, label %366, label %363

363:                                              ; preds = %357
  %364 = getelementptr inbounds %"struct.CFX_CSSData::Color", %"struct.CFX_CSSData::Color"* %361, i64 0, i32 1
  %365 = load i32, i32* %364, align 8
  store i32 %365, i32* %2, align 4
  br label %366

366:                                              ; preds = %363, %357, %293, %299, %14, %355, %280, %120
  %367 = phi i1 [ true, %280 ], [ true, %120 ], [ %356, %355 ], [ false, %14 ], [ false, %299 ], [ false, %293 ], [ true, %363 ], [ false, %357 ]
  ret i1 %367

368:                                              ; preds = %346
  %369 = load i32*, i32** %6, align 8
  %370 = load i32, i32* %7, align 4
  call void @llvm.lifetime.start.p0i8(i64 16, i8* nonnull %307)
  call void @llvm.lifetime.start.p0i8(i64 4, i8* nonnull %308) #14
  store i32 0, i32* %4, align 4
  %371 = call float @_Z12FXSYS_wcstofPKwiPi(i32* %369, i32 %370, i32* nonnull %4) #14
  %372 = load i32, i32* %4, align 4
  %373 = icmp sgt i32 %372, 0
  %374 = call float @llvm.fabs.f32(float %371) #13
  %375 = fcmp one float %374, 0x7FF0000000000000
  %376 = and i1 %375, %373
  br i1 %376, label %377, label %345

377:                                              ; preds = %368
  %378 = sub nsw i32 %370, %372
  %379 = sext i32 %372 to i64
  %380 = getelementptr inbounds i32, i32* %369, i64 %379
  %381 = icmp sgt i32 %378, 0
  br i1 %381, label %382, label %394

382:                                              ; preds = %377
  %383 = load i32, i32* %380, align 4
  %384 = icmp eq i32 %383, 37
  br i1 %384, label %395, label %385

385:                                              ; preds = %382
  %386 = icmp eq i32 %378, 2
  br i1 %386, label %387, label %394

387:                                              ; preds = %385
  store i32* %380, i32** %309, align 8
  store i64 2, i64* %310, align 8
  %388 = call %"struct.CFX_CSSData::LengthUnit"* @_ZN11CFX_CSSData19GetLengthUnitByNameEN5fxcrt18StringViewTemplateIwEE(%"class.fxcrt::StringViewTemplate"* nonnull %5) #14
  %389 = icmp eq %"struct.CFX_CSSData::LengthUnit"* %388, null
  br i1 %389, label %394, label %390

390:                                              ; preds = %387
  %391 = getelementptr inbounds %"struct.CFX_CSSData::LengthUnit", %"struct.CFX_CSSData::LengthUnit"* %388, i64 0, i32 1
  %392 = load i32, i32* %391, align 8
  call void @llvm.lifetime.end.p0i8(i64 4, i8* nonnull %308) #14
  call void @llvm.lifetime.end.p0i8(i64 16, i8* nonnull %307)
  %393 = icmp eq i32 %392, 1
  br i1 %393, label %396, label %398

394:                                              ; preds = %387, %385, %377
  call void @llvm.lifetime.end.p0i8(i64 4, i8* nonnull %308) #14
  call void @llvm.lifetime.end.p0i8(i64 16, i8* nonnull %307)
  br label %398

395:                                              ; preds = %382
  call void @llvm.lifetime.end.p0i8(i64 4, i8* nonnull %308) #14
  call void @llvm.lifetime.end.p0i8(i64 16, i8* nonnull %307)
  br label %396

396:                                              ; preds = %395, %390
  %397 = fmul float %371, 0x4004666660000000
  br label %398

398:                                              ; preds = %396, %394, %390
  %399 = phi float [ %397, %396 ], [ %371, %394 ], [ %371, %390 ]
  %400 = call i32 @FXSYS_roundf(float %399) #14
  %401 = trunc i32 %400 to i8
  %402 = getelementptr inbounds [3 x i8], [3 x i8]* %8, i64 0, i64 1
  store i8 %401, i8* %402, align 1
  %403 = call zeroext i1 @_ZN22CFX_CSSValueListParser9NextValueEPN12CFX_CSSValue13PrimitiveTypeEPPKwPi(%class.CFX_CSSValueListParser* nonnull %10, i8* nonnull %9, i32** nonnull %6, i32* nonnull %7) #14
  %404 = load i8, i8* %9, align 1
  %405 = icmp eq i8 %404, 1
  %406 = and i1 %403, %405
  br i1 %406, label %407, label %355

407:                                              ; preds = %398
  %408 = load i32*, i32** %6, align 8
  %409 = load i32, i32* %7, align 4
  call void @llvm.lifetime.start.p0i8(i64 16, i8* nonnull %307)
  call void @llvm.lifetime.start.p0i8(i64 4, i8* nonnull %308) #14
  store i32 0, i32* %4, align 4
  %410 = call float @_Z12FXSYS_wcstofPKwiPi(i32* %408, i32 %409, i32* nonnull %4) #14
  %411 = load i32, i32* %4, align 4
  %412 = icmp sgt i32 %411, 0
  %413 = call float @llvm.fabs.f32(float %410) #13
  %414 = fcmp one float %413, 0x7FF0000000000000
  %415 = and i1 %414, %412
  br i1 %415, label %416, label %345

416:                                              ; preds = %407
  %417 = sub nsw i32 %409, %411
  %418 = sext i32 %411 to i64
  %419 = getelementptr inbounds i32, i32* %408, i64 %418
  %420 = icmp sgt i32 %417, 0
  br i1 %420, label %421, label %433

421:                                              ; preds = %416
  %422 = load i32, i32* %419, align 4
  %423 = icmp eq i32 %422, 37
  br i1 %423, label %434, label %424

424:                                              ; preds = %421
  %425 = icmp eq i32 %417, 2
  br i1 %425, label %426, label %433

426:                                              ; preds = %424
  store i32* %419, i32** %309, align 8
  store i64 2, i64* %310, align 8
  %427 = call %"struct.CFX_CSSData::LengthUnit"* @_ZN11CFX_CSSData19GetLengthUnitByNameEN5fxcrt18StringViewTemplateIwEE(%"class.fxcrt::StringViewTemplate"* nonnull %5) #14
  %428 = icmp eq %"struct.CFX_CSSData::LengthUnit"* %427, null
  br i1 %428, label %433, label %429

429:                                              ; preds = %426
  %430 = getelementptr inbounds %"struct.CFX_CSSData::LengthUnit", %"struct.CFX_CSSData::LengthUnit"* %427, i64 0, i32 1
  %431 = load i32, i32* %430, align 8
  call void @llvm.lifetime.end.p0i8(i64 4, i8* nonnull %308) #14
  call void @llvm.lifetime.end.p0i8(i64 16, i8* nonnull %307)
  %432 = icmp eq i32 %431, 1
  br i1 %432, label %435, label %437

433:                                              ; preds = %426, %424, %416
  call void @llvm.lifetime.end.p0i8(i64 4, i8* nonnull %308) #14
  call void @llvm.lifetime.end.p0i8(i64 16, i8* nonnull %307)
  br label %437

434:                                              ; preds = %421
  call void @llvm.lifetime.end.p0i8(i64 4, i8* nonnull %308) #14
  call void @llvm.lifetime.end.p0i8(i64 16, i8* nonnull %307)
  br label %435

435:                                              ; preds = %434, %429
  %436 = fmul float %410, 0x4004666660000000
  br label %437

437:                                              ; preds = %435, %433, %429
  %438 = phi float [ %436, %435 ], [ %410, %433 ], [ %410, %429 ]
  %439 = call i32 @FXSYS_roundf(float %438) #14
  %440 = trunc i32 %439 to i8
  %441 = getelementptr inbounds [3 x i8], [3 x i8]* %8, i64 0, i64 2
  store i8 %440, i8* %441, align 1
  %442 = load i8, i8* %303, align 1
  %443 = zext i8 %442 to i32
  %444 = getelementptr inbounds [3 x i8], [3 x i8]* %8, i64 0, i64 1
  %445 = load i8, i8* %444, align 1
  %446 = zext i8 %445 to i32
  %447 = getelementptr inbounds [3 x i8], [3 x i8]* %8, i64 0, i64 2
  %448 = load i8, i8* %447, align 1
  %449 = zext i8 %448 to i32
  %450 = shl nuw nsw i32 %443, 16
  %451 = shl nuw nsw i32 %446, 8
  %452 = or i32 %450, %451
  %453 = or i32 %452, %449
  %454 = or i32 %453, -16777216
  store i32 %454, i32* %2, align 4
  br label %355
}

declare i32 @_Z14FXSYS_wcsnicmpPKwS0_m(i32*, i32*, i64) local_unnamed_addr #3

; Function Attrs: argmemonly nounwind
declare void @llvm.memset.p0i8.i64(i8* nocapture writeonly, i8, i64, i1 immarg) #1

declare void @_ZN22CFX_CSSValueListParserC1EPKwiw(%class.CFX_CSSValueListParser*, i32*, i32, i32 signext) unnamed_addr #3

declare zeroext i1 @_ZN22CFX_CSSValueListParser9NextValueEPN12CFX_CSSValue13PrimitiveTypeEPPKwPi(%class.CFX_CSSValueListParser*, i8*, i32**, i32*) local_unnamed_addr #3

declare i32 @FXSYS_roundf(float) local_unnamed_addr #3

declare %"struct.CFX_CSSData::Color"* @_ZN11CFX_CSSData14GetColorByNameEN5fxcrt18StringViewTemplateIwEE(%"class.fxcrt::StringViewTemplate"*) local_unnamed_addr #3

; Function Attrs: nounwind ssp uwtable
define hidden void @_ZN18CFX_CSSDeclarationC2Ev(%class.CFX_CSSDeclaration* nocapture) unnamed_addr #2 align 2 {
  %2 = bitcast %class.CFX_CSSDeclaration* %0 to i8*
  call void @llvm.memset.p0i8.i64(i8* align 8 %2, i8 0, i64 48, i1 false)
  ret void
}

; Function Attrs: nounwind ssp uwtable
define hidden void @_ZN18CFX_CSSDeclarationD2Ev(%class.CFX_CSSDeclaration* nocapture) unnamed_addr #2 align 2 {
  %2 = getelementptr inbounds %class.CFX_CSSDeclaration, %class.CFX_CSSDeclaration* %0, i64 0, i32 1
  %3 = getelementptr inbounds %"class.std::__1::vector.1", %"class.std::__1::vector.1"* %2, i64 0, i32 0, i32 0
  %4 = load %"class.std::__1::unique_ptr.3"*, %"class.std::__1::unique_ptr.3"** %3, align 8
  %5 = icmp eq %"class.std::__1::unique_ptr.3"* %4, null
  br i1 %5, label %26, label %6

6:                                                ; preds = %1
  %7 = bitcast %"class.std::__1::unique_ptr.3"* %4 to i8*
  %8 = getelementptr inbounds %class.CFX_CSSDeclaration, %class.CFX_CSSDeclaration* %0, i64 0, i32 1, i32 0, i32 1
  %9 = load %"class.std::__1::unique_ptr.3"*, %"class.std::__1::unique_ptr.3"** %8, align 8
  %10 = icmp eq %"class.std::__1::unique_ptr.3"* %9, %4
  br i1 %10, label %24, label %11

11:                                               ; preds = %6, %19
  %12 = phi %"class.std::__1::unique_ptr.3"* [ %13, %19 ], [ %9, %6 ]
  %13 = getelementptr inbounds %"class.std::__1::unique_ptr.3", %"class.std::__1::unique_ptr.3"* %12, i64 -1
  %14 = getelementptr inbounds %"class.std::__1::unique_ptr.3", %"class.std::__1::unique_ptr.3"* %13, i64 0, i32 0, i32 0, i32 0
  %15 = load %class.CFX_CSSCustomProperty*, %class.CFX_CSSCustomProperty** %14, align 8
  store %class.CFX_CSSCustomProperty* null, %class.CFX_CSSCustomProperty** %14, align 8
  %16 = icmp eq %class.CFX_CSSCustomProperty* %15, null
  br i1 %16, label %19, label %17

17:                                               ; preds = %11
  tail call void @_ZN21CFX_CSSCustomPropertyD1Ev(%class.CFX_CSSCustomProperty* nonnull %15) #14
  %18 = bitcast %class.CFX_CSSCustomProperty* %15 to i8*
  tail call void @_ZdlPv(i8* %18) #15
  br label %19

19:                                               ; preds = %17, %11
  %20 = icmp eq %"class.std::__1::unique_ptr.3"* %13, %4
  br i1 %20, label %21, label %11

21:                                               ; preds = %19
  %22 = bitcast %"class.std::__1::vector.1"* %2 to i8**
  %23 = load i8*, i8** %22, align 8
  br label %24

24:                                               ; preds = %21, %6
  %25 = phi i8* [ %23, %21 ], [ %7, %6 ]
  store %"class.std::__1::unique_ptr.3"* %4, %"class.std::__1::unique_ptr.3"** %8, align 8
  tail call void @_ZdlPv(i8* %25) #15
  br label %26

26:                                               ; preds = %1, %24
  %27 = getelementptr inbounds %class.CFX_CSSDeclaration, %class.CFX_CSSDeclaration* %0, i64 0, i32 0, i32 0, i32 0
  %28 = load %"class.std::__1::unique_ptr"*, %"class.std::__1::unique_ptr"** %27, align 8
  %29 = icmp eq %"class.std::__1::unique_ptr"* %28, null
  br i1 %29, label %50, label %30

30:                                               ; preds = %26
  %31 = bitcast %"class.std::__1::unique_ptr"* %28 to i8*
  %32 = getelementptr inbounds %class.CFX_CSSDeclaration, %class.CFX_CSSDeclaration* %0, i64 0, i32 0, i32 0, i32 1
  %33 = load %"class.std::__1::unique_ptr"*, %"class.std::__1::unique_ptr"** %32, align 8
  %34 = icmp eq %"class.std::__1::unique_ptr"* %33, %28
  br i1 %34, label %48, label %35

35:                                               ; preds = %30, %43
  %36 = phi %"class.std::__1::unique_ptr"* [ %37, %43 ], [ %33, %30 ]
  %37 = getelementptr inbounds %"class.std::__1::unique_ptr", %"class.std::__1::unique_ptr"* %36, i64 -1
  %38 = getelementptr inbounds %"class.std::__1::unique_ptr", %"class.std::__1::unique_ptr"* %37, i64 0, i32 0, i32 0, i32 0
  %39 = load %class.CFX_CSSPropertyHolder*, %class.CFX_CSSPropertyHolder** %38, align 8
  store %class.CFX_CSSPropertyHolder* null, %class.CFX_CSSPropertyHolder** %38, align 8
  %40 = icmp eq %class.CFX_CSSPropertyHolder* %39, null
  br i1 %40, label %43, label %41

41:                                               ; preds = %35
  tail call void @_ZN21CFX_CSSPropertyHolderD1Ev(%class.CFX_CSSPropertyHolder* nonnull %39) #14
  %42 = getelementptr inbounds %class.CFX_CSSPropertyHolder, %class.CFX_CSSPropertyHolder* %39, i64 0, i32 0
  tail call void @_ZdlPv(i8* %42) #15
  br label %43

43:                                               ; preds = %41, %35
  %44 = icmp eq %"class.std::__1::unique_ptr"* %37, %28
  br i1 %44, label %45, label %35

45:                                               ; preds = %43
  %46 = bitcast %class.CFX_CSSDeclaration* %0 to i8**
  %47 = load i8*, i8** %46, align 8
  br label %48

48:                                               ; preds = %45, %30
  %49 = phi i8* [ %47, %45 ], [ %31, %30 ]
  store %"class.std::__1::unique_ptr"* %28, %"class.std::__1::unique_ptr"** %32, align 8
  tail call void @_ZdlPv(i8* %49) #15
  br label %50

50:                                               ; preds = %26, %48
  ret void
}

; Function Attrs: nounwind ssp uwtable
define hidden void @_ZNK18CFX_CSSDeclaration11GetPropertyE15CFX_CSSPropertyPb(%"class.fxcrt::RetainPtr"* noalias nocapture sret, %class.CFX_CSSDeclaration* nocapture readonly, i8 zeroext, i8* nocapture) local_unnamed_addr #2 align 2 {
  %5 = getelementptr inbounds %class.CFX_CSSDeclaration, %class.CFX_CSSDeclaration* %1, i64 0, i32 0, i32 0, i32 0
  %6 = load %"class.std::__1::unique_ptr"*, %"class.std::__1::unique_ptr"** %5, align 8
  %7 = getelementptr inbounds %class.CFX_CSSDeclaration, %class.CFX_CSSDeclaration* %1, i64 0, i32 0, i32 0, i32 1
  %8 = load %"class.std::__1::unique_ptr"*, %"class.std::__1::unique_ptr"** %7, align 8
  %9 = icmp eq %"class.std::__1::unique_ptr"* %6, %8
  br i1 %9, label %34, label %12

10:                                               ; preds = %12
  %11 = icmp eq %"class.std::__1::unique_ptr"* %19, %8
  br i1 %11, label %34, label %12

12:                                               ; preds = %4, %10
  %13 = phi %"class.std::__1::unique_ptr"* [ %19, %10 ], [ %6, %4 ]
  %14 = getelementptr inbounds %"class.std::__1::unique_ptr", %"class.std::__1::unique_ptr"* %13, i64 0, i32 0, i32 0, i32 0
  %15 = load %class.CFX_CSSPropertyHolder*, %class.CFX_CSSPropertyHolder** %14, align 8
  %16 = getelementptr inbounds %class.CFX_CSSPropertyHolder, %class.CFX_CSSPropertyHolder* %15, i64 0, i32 0
  %17 = load i8, i8* %16, align 8
  %18 = icmp eq i8 %17, %2
  %19 = getelementptr inbounds %"class.std::__1::unique_ptr", %"class.std::__1::unique_ptr"* %13, i64 1
  br i1 %18, label %20, label %10

20:                                               ; preds = %12
  %21 = getelementptr inbounds %"class.std::__1::unique_ptr", %"class.std::__1::unique_ptr"* %13, i64 0, i32 0, i32 0, i32 0
  %22 = getelementptr inbounds %class.CFX_CSSPropertyHolder, %class.CFX_CSSPropertyHolder* %15, i64 0, i32 1
  %23 = load i8, i8* %22, align 1, !range !2
  store i8 %23, i8* %3, align 1
  %24 = load %class.CFX_CSSPropertyHolder*, %class.CFX_CSSPropertyHolder** %21, align 8
  %25 = getelementptr inbounds %class.CFX_CSSPropertyHolder, %class.CFX_CSSPropertyHolder* %24, i64 0, i32 2, i32 0, i32 0, i32 0, i32 0
  %26 = load %class.CFX_CSSValue*, %class.CFX_CSSValue** %25, align 8
  %27 = ptrtoint %class.CFX_CSSValue* %26 to i64
  %28 = bitcast %"class.fxcrt::RetainPtr"* %0 to i64*
  store i64 %27, i64* %28, align 8
  %29 = icmp eq %class.CFX_CSSValue* %26, null
  br i1 %29, label %36, label %30

30:                                               ; preds = %20
  %31 = getelementptr inbounds %class.CFX_CSSValue, %class.CFX_CSSValue* %26, i64 0, i32 0, i32 1
  %32 = load i64, i64* %31, align 8
  %33 = add nsw i64 %32, 1
  store i64 %33, i64* %31, align 8
  br label %36

34:                                               ; preds = %10, %4
  %35 = bitcast %"class.fxcrt::RetainPtr"* %0 to i64*
  store i64 0, i64* %35, align 8
  br label %36

36:                                               ; preds = %30, %20, %34
  ret void
}

; Function Attrs: nounwind ssp uwtable
define hidden void @_ZN18CFX_CSSDeclaration17AddPropertyHolderE15CFX_CSSPropertyN5fxcrt9RetainPtrI12CFX_CSSValueEEb(%class.CFX_CSSDeclaration*, i8 zeroext, %"class.fxcrt::RetainPtr"* nocapture readonly, i1 zeroext) local_unnamed_addr #2 align 2 {
  %5 = alloca %"class.std::__1::unique_ptr", align 8
  %6 = zext i1 %3 to i8
  %7 = bitcast %"class.std::__1::unique_ptr"* %5 to i8*
  call void @llvm.lifetime.start.p0i8(i64 8, i8* nonnull %7) #14
  %8 = getelementptr inbounds %"class.std::__1::unique_ptr", %"class.std::__1::unique_ptr"* %5, i64 0, i32 0, i32 0, i32 0
  %9 = tail call i8* @_Znwm(i64 16) #15
  %10 = bitcast i8* %9 to %class.CFX_CSSPropertyHolder*
  tail call void @_ZN21CFX_CSSPropertyHolderC1Ev(%class.CFX_CSSPropertyHolder* nonnull %10) #14
  %11 = bitcast %"class.std::__1::unique_ptr"* %5 to i8**
  store i8* %9, i8** %11, align 8
  %12 = getelementptr inbounds i8, i8* %9, i64 1
  store i8 %6, i8* %12, align 1
  store i8 %1, i8* %9, align 8
  %13 = getelementptr inbounds i8, i8* %9, i64 8
  %14 = bitcast i8* %13 to %class.CFX_CSSValue**
  %15 = load %class.CFX_CSSValue*, %class.CFX_CSSValue** %14, align 8
  %16 = getelementptr inbounds %"class.fxcrt::RetainPtr", %"class.fxcrt::RetainPtr"* %2, i64 0, i32 0, i32 0, i32 0, i32 0
  %17 = load %class.CFX_CSSValue*, %class.CFX_CSSValue** %16, align 8
  %18 = icmp eq %class.CFX_CSSValue* %15, %17
  %19 = ptrtoint i8* %9 to i64
  br i1 %18, label %41, label %20

20:                                               ; preds = %4
  %21 = icmp eq %class.CFX_CSSValue* %17, null
  br i1 %21, label %27, label %22

22:                                               ; preds = %20
  %23 = getelementptr inbounds %class.CFX_CSSValue, %class.CFX_CSSValue* %17, i64 0, i32 0, i32 1
  %24 = load i64, i64* %23, align 8
  %25 = add nsw i64 %24, 1
  store i64 %25, i64* %23, align 8
  %26 = load %class.CFX_CSSValue*, %class.CFX_CSSValue** %14, align 8
  br label %27

27:                                               ; preds = %22, %20
  %28 = phi %class.CFX_CSSValue* [ %26, %22 ], [ %15, %20 ]
  store %class.CFX_CSSValue* %17, %class.CFX_CSSValue** %14, align 8
  %29 = icmp eq %class.CFX_CSSValue* %28, null
  br i1 %29, label %41, label %30

30:                                               ; preds = %27
  %31 = getelementptr inbounds %class.CFX_CSSValue, %class.CFX_CSSValue* %28, i64 0, i32 0, i32 1
  %32 = load i64, i64* %31, align 8
  %33 = add nsw i64 %32, -1
  store i64 %33, i64* %31, align 8
  %34 = icmp eq i64 %33, 0
  br i1 %34, label %35, label %41

35:                                               ; preds = %30
  %36 = getelementptr inbounds %class.CFX_CSSValue, %class.CFX_CSSValue* %28, i64 0, i32 0
  %37 = bitcast %class.CFX_CSSValue* %28 to void (%"class.fxcrt::Retainable"*)***
  %38 = load void (%"class.fxcrt::Retainable"*)**, void (%"class.fxcrt::Retainable"*)*** %37, align 8
  %39 = getelementptr inbounds void (%"class.fxcrt::Retainable"*)*, void (%"class.fxcrt::Retainable"*)** %38, i64 1
  %40 = load void (%"class.fxcrt::Retainable"*)*, void (%"class.fxcrt::Retainable"*)** %39, align 8
  tail call void %40(%"class.fxcrt::Retainable"* nonnull %36) #14
  br label %41

41:                                               ; preds = %4, %27, %30, %35
  %42 = getelementptr inbounds %class.CFX_CSSDeclaration, %class.CFX_CSSDeclaration* %0, i64 0, i32 0, i32 0, i32 1
  %43 = load %"class.std::__1::unique_ptr"*, %"class.std::__1::unique_ptr"** %42, align 8
  %44 = getelementptr inbounds %class.CFX_CSSDeclaration, %class.CFX_CSSDeclaration* %0, i64 0, i32 0, i32 0, i32 2, i32 0, i32 0
  %45 = load %"class.std::__1::unique_ptr"*, %"class.std::__1::unique_ptr"** %44, align 8
  %46 = icmp ult %"class.std::__1::unique_ptr"* %43, %45
  br i1 %46, label %47, label %52

47:                                               ; preds = %41
  store %class.CFX_CSSPropertyHolder* null, %class.CFX_CSSPropertyHolder** %8, align 8
  %48 = bitcast %"class.std::__1::unique_ptr"* %43 to i64*
  store i64 %19, i64* %48, align 8
  %49 = getelementptr inbounds %"class.std::__1::unique_ptr", %"class.std::__1::unique_ptr"* %43, i64 1
  %50 = ptrtoint %"class.std::__1::unique_ptr"* %49 to i64
  %51 = bitcast %"class.std::__1::unique_ptr"** %42 to i64*
  store i64 %50, i64* %51, align 8
  br label %54

52:                                               ; preds = %41
  %53 = getelementptr inbounds %class.CFX_CSSDeclaration, %class.CFX_CSSDeclaration* %0, i64 0, i32 0
  call void @_ZNSt3__16vectorINS_10unique_ptrI21CFX_CSSPropertyHolderNS_14default_deleteIS2_EEEENS_9allocatorIS5_EEE21__push_back_slow_pathIS5_EEvOT_(%"class.std::__1::vector"* %53, %"class.std::__1::unique_ptr"* nonnull dereferenceable(8) %5) #14
  br label %54

54:                                               ; preds = %47, %52
  %55 = load %class.CFX_CSSPropertyHolder*, %class.CFX_CSSPropertyHolder** %8, align 8
  store %class.CFX_CSSPropertyHolder* null, %class.CFX_CSSPropertyHolder** %8, align 8
  %56 = icmp eq %class.CFX_CSSPropertyHolder* %55, null
  br i1 %56, label %59, label %57

57:                                               ; preds = %54
  call void @_ZN21CFX_CSSPropertyHolderD1Ev(%class.CFX_CSSPropertyHolder* nonnull %55) #14
  %58 = getelementptr inbounds %class.CFX_CSSPropertyHolder, %class.CFX_CSSPropertyHolder* %55, i64 0, i32 0
  call void @_ZdlPv(i8* %58) #15
  br label %59

59:                                               ; preds = %54, %57
  call void @llvm.lifetime.end.p0i8(i64 8, i8* nonnull %7) #14
  ret void
}

; Function Attrs: nounwind ssp uwtable
define hidden void @_ZN18CFX_CSSDeclaration11AddPropertyEPKN11CFX_CSSData8PropertyEN5fxcrt18StringViewTemplateIwEE(%class.CFX_CSSDeclaration*, %"struct.CFX_CSSData::Property"* nocapture readonly, %"class.fxcrt::StringViewTemplate"* nocapture readonly) local_unnamed_addr #2 align 2 {
  %4 = alloca i32, align 4
  %5 = alloca %"class.fxcrt::StringViewTemplate", align 8
  %6 = alloca %"class.fxcrt::RetainPtr", align 8
  %7 = alloca %"class.fxcrt::RetainPtr", align 8
  %8 = alloca %"class.fxcrt::RetainPtr", align 8
  %9 = alloca %"class.fxcrt::RetainPtr", align 8
  %10 = alloca %"class.fxcrt::RetainPtr", align 8
  %11 = alloca %"class.fxcrt::RetainPtr", align 8
  %12 = alloca %"class.fxcrt::RetainPtr", align 8
  %13 = alloca %"class.fxcrt::RetainPtr", align 8
  %14 = alloca %"class.fxcrt::RetainPtr", align 8
  %15 = alloca %"class.fxcrt::RetainPtr", align 8
  %16 = alloca %"class.fxcrt::RetainPtr", align 8
  %17 = alloca %"class.fxcrt::RetainPtr", align 8
  %18 = getelementptr inbounds %"class.fxcrt::StringViewTemplate", %"class.fxcrt::StringViewTemplate"* %2, i64 0, i32 0, i32 0, i32 0
  %19 = load i32*, i32** %18, align 8
  %20 = getelementptr inbounds %"class.fxcrt::StringViewTemplate", %"class.fxcrt::StringViewTemplate"* %2, i64 0, i32 0, i32 1
  %21 = load i64, i64* %20, align 8
  %22 = trunc i64 %21 to i32
  %23 = icmp sgt i32 %22, 9
  br i1 %23, label %24, label %39

24:                                               ; preds = %3
  %25 = add nsw i32 %22, -10
  %26 = sext i32 %25 to i64
  %27 = getelementptr inbounds i32, i32* %19, i64 %26
  %28 = load i32, i32* %27, align 4
  %29 = icmp eq i32 %28, 33
  br i1 %29, label %30, label %39

30:                                               ; preds = %24
  %31 = shl i64 %21, 32
  %32 = ashr exact i64 %31, 32
  %33 = getelementptr inbounds i32, i32* %19, i64 %32
  %34 = getelementptr inbounds i32, i32* %33, i64 -9
  %35 = tail call i32 @_Z14FXSYS_wcsnicmpPKwS0_m(i32* getelementptr inbounds ([10 x i32], [10 x i32]* @.str.1, i64 0, i64 0), i32* %34, i64 9) #14
  %36 = icmp eq i32 %35, 0
  br i1 %36, label %37, label %39

37:                                               ; preds = %30
  %38 = icmp eq i32 %25, 0
  br i1 %38, label %144, label %39

39:                                               ; preds = %37, %30, %24, %3
  %40 = phi i32 [ %22, %30 ], [ %22, %24 ], [ %22, %3 ], [ %25, %37 ]
  %41 = phi i1 [ false, %30 ], [ false, %24 ], [ false, %3 ], [ true, %37 ]
  %42 = getelementptr inbounds %"struct.CFX_CSSData::Property", %"struct.CFX_CSSData::Property"* %1, i64 0, i32 2
  %43 = load i32, i32* %42, align 4
  %44 = and i32 %43, 15
  switch i32 %44, label %144 [
    i32 1, label %45
    i32 4, label %145
    i32 2, label %374
  ]

45:                                               ; preds = %39
  %46 = bitcast %"class.fxcrt::RetainPtr"* %7 to i8*
  %47 = bitcast %"class.fxcrt::RetainPtr"* %7 to i64*
  %48 = bitcast i32* %4 to i8*
  %49 = bitcast %"class.fxcrt::StringViewTemplate"* %5 to i8*
  %50 = sext i32 %40 to i64
  %51 = getelementptr inbounds %"class.fxcrt::StringViewTemplate", %"class.fxcrt::StringViewTemplate"* %5, i64 0, i32 0, i32 0, i32 0
  %52 = getelementptr inbounds %"class.fxcrt::StringViewTemplate", %"class.fxcrt::StringViewTemplate"* %5, i64 0, i32 0, i32 1
  %53 = bitcast %"class.fxcrt::RetainPtr"* %6 to i8*
  %54 = bitcast %"class.fxcrt::RetainPtr"* %6 to i64*
  br label %55

55:                                               ; preds = %45, %141
  %56 = phi i32* [ getelementptr inbounds ([4 x i32], [4 x i32]* @_ZZN18CFX_CSSDeclaration11AddPropertyEPKN11CFX_CSSData8PropertyEN5fxcrt18StringViewTemplateIwEEE16kValueGuessOrder, i64 0, i64 0), %45 ], [ %142, %141 ]
  %57 = load i32, i32* %56, align 4
  %58 = and i32 %57, %43
  switch i32 %58, label %127 [
    i32 0, label %141
    i32 16, label %59
    i32 32, label %61
    i32 256, label %83
    i32 128, label %103
  ]

59:                                               ; preds = %55
  call void @llvm.lifetime.start.p0i8(i64 8, i8* nonnull %53) #14
  call void @_ZN18CFX_CSSDeclaration11ParseNumberEPKwi(%"class.fxcrt::RetainPtr"* nonnull sret %6, %class.CFX_CSSDeclaration* undef, i32* %19, i32 %40)
  %60 = load i64, i64* %54, align 8
  call void @llvm.lifetime.end.p0i8(i64 8, i8* nonnull %53) #14
  br label %105

61:                                               ; preds = %55
  call void @llvm.lifetime.start.p0i8(i64 16, i8* nonnull %49)
  store i32* %19, i32** %51, align 8, !noalias !3
  store i64 %50, i64* %52, align 8, !noalias !3
  %62 = call %"struct.CFX_CSSData::PropertyValue"* @_ZN11CFX_CSSData22GetPropertyValueByNameEN5fxcrt18StringViewTemplateIwEE(%"class.fxcrt::StringViewTemplate"* nonnull %5) #14, !noalias !3
  %63 = icmp eq %"struct.CFX_CSSData::PropertyValue"* %62, null
  br i1 %63, label %81, label %64

64:                                               ; preds = %61
  %65 = getelementptr inbounds %"struct.CFX_CSSData::PropertyValue", %"struct.CFX_CSSData::PropertyValue"* %62, i64 0, i32 0
  %66 = call i8* @_Znwm(i64 24) #15, !noalias !6
  %67 = bitcast i8* %66 to %class.CFX_CSSEnumValue*
  %68 = load i8, i8* %65, align 1, !noalias !6
  call void @_ZN16CFX_CSSEnumValueC1E20CFX_CSSPropertyValue(%class.CFX_CSSEnumValue* nonnull %67, i8 zeroext %68) #14, !noalias !6
  %69 = ptrtoint i8* %66 to i64
  %70 = getelementptr inbounds i8, i8* %66, i64 8
  %71 = bitcast i8* %70 to i64*
  %72 = load i64, i64* %71, align 8, !noalias !6
  %73 = add nsw i64 %72, 1
  store i64 %73, i64* %71, align 8, !noalias !3
  %74 = icmp eq i64 %73, 0
  br i1 %74, label %75, label %81

75:                                               ; preds = %64
  %76 = bitcast i8* %66 to %"class.fxcrt::Retainable"*
  %77 = bitcast i8* %66 to void (%"class.fxcrt::Retainable"*)***
  %78 = load void (%"class.fxcrt::Retainable"*)**, void (%"class.fxcrt::Retainable"*)*** %77, align 8, !noalias !3
  %79 = getelementptr inbounds void (%"class.fxcrt::Retainable"*)*, void (%"class.fxcrt::Retainable"*)** %78, i64 1
  %80 = load void (%"class.fxcrt::Retainable"*)*, void (%"class.fxcrt::Retainable"*)** %79, align 8, !noalias !3
  call void %80(%"class.fxcrt::Retainable"* nonnull %76) #14, !noalias !3
  br label %81

81:                                               ; preds = %61, %64, %75
  %82 = phi i64 [ %69, %75 ], [ %69, %64 ], [ 0, %61 ]
  call void @llvm.lifetime.end.p0i8(i64 16, i8* nonnull %49)
  br label %105

83:                                               ; preds = %55
  call void @llvm.lifetime.start.p0i8(i64 4, i8* nonnull %48) #14, !noalias !9
  store i32 -1431655766, i32* %4, align 4, !noalias !9
  %84 = call zeroext i1 @_ZN18CFX_CSSDeclaration13ParseCSSColorEPKwiPj(i32* %19, i32 %40, i32* nonnull %4) #14, !noalias !9
  br i1 %84, label %85, label %101

85:                                               ; preds = %83
  %86 = call i8* @_Znwm(i64 24) #15, !noalias !12
  %87 = bitcast i8* %86 to %class.CFX_CSSColorValue*
  %88 = load i32, i32* %4, align 4, !noalias !12
  call void @_ZN17CFX_CSSColorValueC1Ej(%class.CFX_CSSColorValue* nonnull %87, i32 %88) #14, !noalias !12
  %89 = ptrtoint i8* %86 to i64
  %90 = getelementptr inbounds i8, i8* %86, i64 8
  %91 = bitcast i8* %90 to i64*
  %92 = load i64, i64* %91, align 8, !noalias !12
  %93 = add nsw i64 %92, 1
  store i64 %93, i64* %91, align 8, !noalias !9
  %94 = icmp eq i64 %93, 0
  br i1 %94, label %95, label %101

95:                                               ; preds = %85
  %96 = bitcast i8* %86 to %"class.fxcrt::Retainable"*
  %97 = bitcast i8* %86 to void (%"class.fxcrt::Retainable"*)***
  %98 = load void (%"class.fxcrt::Retainable"*)**, void (%"class.fxcrt::Retainable"*)*** %97, align 8, !noalias !9
  %99 = getelementptr inbounds void (%"class.fxcrt::Retainable"*)*, void (%"class.fxcrt::Retainable"*)** %98, i64 1
  %100 = load void (%"class.fxcrt::Retainable"*)*, void (%"class.fxcrt::Retainable"*)** %99, align 8, !noalias !9
  call void %100(%"class.fxcrt::Retainable"* nonnull %96) #14, !noalias !9
  br label %101

101:                                              ; preds = %83, %85, %95
  %102 = phi i64 [ %89, %95 ], [ %89, %85 ], [ 0, %83 ]
  call void @llvm.lifetime.end.p0i8(i64 4, i8* nonnull %48) #14, !noalias !9
  br label %105

103:                                              ; preds = %55
  call void @llvm.lifetime.start.p0i8(i64 8, i8* nonnull %46) #14
  call void @_ZN18CFX_CSSDeclaration11ParseStringEPKwi(%"class.fxcrt::RetainPtr"* nonnull sret %7, %class.CFX_CSSDeclaration* undef, i32* %19, i32 %40)
  %104 = load i64, i64* %47, align 8
  call void @llvm.lifetime.end.p0i8(i64 8, i8* nonnull %46) #14
  br label %105

105:                                              ; preds = %103, %101, %81, %59
  %106 = phi i64 [ %104, %103 ], [ %102, %101 ], [ %82, %81 ], [ %60, %59 ]
  %107 = icmp eq i64 %106, 0
  br i1 %107, label %127, label %108

108:                                              ; preds = %105
  %109 = inttoptr i64 %106 to %class.CFX_CSSValue*
  %110 = getelementptr inbounds %"struct.CFX_CSSData::Property", %"struct.CFX_CSSData::Property"* %1, i64 0, i32 0
  %111 = load i8, i8* %110, align 4
  %112 = bitcast %"class.fxcrt::RetainPtr"* %8 to i64*
  store i64 %106, i64* %112, align 8
  %113 = getelementptr inbounds %class.CFX_CSSValue, %class.CFX_CSSValue* %109, i64 0, i32 0, i32 1
  %114 = load i64, i64* %113, align 8
  %115 = add nsw i64 %114, 1
  store i64 %115, i64* %113, align 8
  call void @_ZN18CFX_CSSDeclaration17AddPropertyHolderE15CFX_CSSPropertyN5fxcrt9RetainPtrI12CFX_CSSValueEEb(%class.CFX_CSSDeclaration* %0, i8 zeroext %111, %"class.fxcrt::RetainPtr"* nonnull %8, i1 zeroext %41)
  %116 = getelementptr inbounds %"class.fxcrt::RetainPtr", %"class.fxcrt::RetainPtr"* %8, i64 0, i32 0, i32 0, i32 0, i32 0
  store %class.CFX_CSSValue* null, %class.CFX_CSSValue** %116, align 8
  %117 = load i64, i64* %113, align 8
  %118 = add nsw i64 %117, -1
  store i64 %118, i64* %113, align 8
  %119 = icmp eq i64 %118, 0
  br i1 %119, label %120, label %131

120:                                              ; preds = %108
  %121 = getelementptr inbounds %class.CFX_CSSValue, %class.CFX_CSSValue* %109, i64 0, i32 0
  %122 = inttoptr i64 %106 to void (%"class.fxcrt::Retainable"*)***
  %123 = load void (%"class.fxcrt::Retainable"*)**, void (%"class.fxcrt::Retainable"*)*** %122, align 8
  %124 = getelementptr inbounds void (%"class.fxcrt::Retainable"*)*, void (%"class.fxcrt::Retainable"*)** %123, i64 1
  %125 = load void (%"class.fxcrt::Retainable"*)*, void (%"class.fxcrt::Retainable"*)** %124, align 8
  call void %125(%"class.fxcrt::Retainable"* nonnull %121) #14
  %126 = load i64, i64* %113, align 8
  br label %131

127:                                              ; preds = %105, %55
  %128 = xor i32 %57, -1
  %129 = and i32 %43, %128
  %130 = icmp eq i32 %129, 1
  br i1 %130, label %144, label %141

131:                                              ; preds = %108, %120
  %132 = phi i64 [ %118, %108 ], [ %126, %120 ]
  %133 = add nsw i64 %132, -1
  store i64 %133, i64* %113, align 8
  %134 = icmp eq i64 %133, 0
  br i1 %134, label %135, label %144

135:                                              ; preds = %131
  %136 = getelementptr inbounds %class.CFX_CSSValue, %class.CFX_CSSValue* %109, i64 0, i32 0
  %137 = inttoptr i64 %106 to void (%"class.fxcrt::Retainable"*)***
  %138 = load void (%"class.fxcrt::Retainable"*)**, void (%"class.fxcrt::Retainable"*)*** %137, align 8
  %139 = getelementptr inbounds void (%"class.fxcrt::Retainable"*)*, void (%"class.fxcrt::Retainable"*)** %138, i64 1
  %140 = load void (%"class.fxcrt::Retainable"*)*, void (%"class.fxcrt::Retainable"*)** %139, align 8
  call void %140(%"class.fxcrt::Retainable"* nonnull %136) #14
  br label %144

141:                                              ; preds = %55, %127
  %142 = getelementptr inbounds i32, i32* %56, i64 1
  %143 = icmp eq i32* %142, getelementptr inbounds ([4 x i32], [4 x i32]* @_ZZN18CFX_CSSDeclaration11AddPropertyEPKN11CFX_CSSData8PropertyEN5fxcrt18StringViewTemplateIwEEE16kValueGuessOrder, i64 1, i64 0)
  br i1 %143, label %144, label %55

144:                                              ; preds = %127, %141, %37, %39, %373, %151, %236, %270, %304, %338, %372, %374, %135, %131
  ret void

145:                                              ; preds = %39
  %146 = bitcast %"class.fxcrt::RetainPtr"* %9 to i8*
  call void @llvm.lifetime.start.p0i8(i64 8, i8* nonnull %146) #14
  %147 = getelementptr inbounds %"class.fxcrt::RetainPtr", %"class.fxcrt::RetainPtr"* %9, i64 0, i32 0, i32 0, i32 0, i32 0
  %148 = bitcast %"class.fxcrt::RetainPtr"* %9 to i64*
  store i64 0, i64* %148, align 8
  %149 = getelementptr inbounds %"struct.CFX_CSSData::Property", %"struct.CFX_CSSData::Property"* %1, i64 0, i32 0
  %150 = load i8, i8* %149, align 4
  switch i8 %150, label %373 [
    i8 27, label %151
    i8 7, label %152
    i8 0, label %237
    i8 8, label %271
    i8 23, label %305
    i8 11, label %339
  ]

151:                                              ; preds = %145
  tail call void @_ZN18CFX_CSSDeclaration17ParseFontPropertyEPKwib(%class.CFX_CSSDeclaration* %0, i32* %19, i32 %40, i1 zeroext %41)
  call void @llvm.lifetime.end.p0i8(i64 8, i8* nonnull %146) #14
  br label %144

152:                                              ; preds = %145
  %153 = call zeroext i1 @_ZNK18CFX_CSSDeclaration19ParseBorderPropertyEPKwiRN5fxcrt9RetainPtrI12CFX_CSSValueEE(%class.CFX_CSSDeclaration* undef, i32* %19, i32 %40, %"class.fxcrt::RetainPtr"* nonnull dereferenceable(8) %9)
  %154 = load %class.CFX_CSSValue*, %class.CFX_CSSValue** %147, align 8
  %155 = ptrtoint %class.CFX_CSSValue* %154 to i64
  %156 = bitcast %"class.fxcrt::RetainPtr"* %10 to i64*
  store i64 %155, i64* %156, align 8
  %157 = icmp eq %class.CFX_CSSValue* %154, null
  br i1 %157, label %218, label %158

158:                                              ; preds = %152
  %159 = getelementptr inbounds %class.CFX_CSSValue, %class.CFX_CSSValue* %154, i64 0, i32 0, i32 1
  %160 = load i64, i64* %159, align 8
  %161 = add nsw i64 %160, 1
  store i64 %161, i64* %159, align 8
  call void @_ZN18CFX_CSSDeclaration17AddPropertyHolderE15CFX_CSSPropertyN5fxcrt9RetainPtrI12CFX_CSSValueEEb(%class.CFX_CSSDeclaration* %0, i8 zeroext 30, %"class.fxcrt::RetainPtr"* nonnull %10, i1 zeroext %41)
  %162 = getelementptr inbounds %"class.fxcrt::RetainPtr", %"class.fxcrt::RetainPtr"* %10, i64 0, i32 0, i32 0, i32 0, i32 0
  store %class.CFX_CSSValue* null, %class.CFX_CSSValue** %162, align 8
  %163 = load i64, i64* %159, align 8
  %164 = add nsw i64 %163, -1
  store i64 %164, i64* %159, align 8
  %165 = icmp eq i64 %164, 0
  br i1 %165, label %166, label %173

166:                                              ; preds = %158
  %167 = getelementptr inbounds %class.CFX_CSSValue, %class.CFX_CSSValue* %154, i64 0, i32 0
  %168 = bitcast %class.CFX_CSSValue* %154 to void (%"class.fxcrt::Retainable"*)***
  %169 = load void (%"class.fxcrt::Retainable"*)**, void (%"class.fxcrt::Retainable"*)*** %168, align 8
  %170 = getelementptr inbounds void (%"class.fxcrt::Retainable"*)*, void (%"class.fxcrt::Retainable"*)** %169, i64 1
  %171 = load void (%"class.fxcrt::Retainable"*)*, void (%"class.fxcrt::Retainable"*)** %170, align 8
  tail call void %171(%"class.fxcrt::Retainable"* nonnull %167) #14
  %172 = load i64, i64* %159, align 8
  br label %173

173:                                              ; preds = %158, %166
  %174 = phi i64 [ %164, %158 ], [ %172, %166 ]
  %175 = bitcast %"class.fxcrt::RetainPtr"* %11 to i64*
  store i64 %155, i64* %175, align 8
  %176 = add nsw i64 %174, 1
  store i64 %176, i64* %159, align 8
  call void @_ZN18CFX_CSSDeclaration17AddPropertyHolderE15CFX_CSSPropertyN5fxcrt9RetainPtrI12CFX_CSSValueEEb(%class.CFX_CSSDeclaration* %0, i8 zeroext 33, %"class.fxcrt::RetainPtr"* nonnull %11, i1 zeroext %41)
  %177 = getelementptr inbounds %"class.fxcrt::RetainPtr", %"class.fxcrt::RetainPtr"* %11, i64 0, i32 0, i32 0, i32 0, i32 0
  store %class.CFX_CSSValue* null, %class.CFX_CSSValue** %177, align 8
  %178 = load i64, i64* %159, align 8
  %179 = add nsw i64 %178, -1
  store i64 %179, i64* %159, align 8
  %180 = icmp eq i64 %179, 0
  br i1 %180, label %181, label %188

181:                                              ; preds = %173
  %182 = getelementptr inbounds %class.CFX_CSSValue, %class.CFX_CSSValue* %154, i64 0, i32 0
  %183 = bitcast %class.CFX_CSSValue* %154 to void (%"class.fxcrt::Retainable"*)***
  %184 = load void (%"class.fxcrt::Retainable"*)**, void (%"class.fxcrt::Retainable"*)*** %183, align 8
  %185 = getelementptr inbounds void (%"class.fxcrt::Retainable"*)*, void (%"class.fxcrt::Retainable"*)** %184, i64 1
  %186 = load void (%"class.fxcrt::Retainable"*)*, void (%"class.fxcrt::Retainable"*)** %185, align 8
  tail call void %186(%"class.fxcrt::Retainable"* nonnull %182) #14
  %187 = load i64, i64* %159, align 8
  br label %188

188:                                              ; preds = %173, %181
  %189 = phi i64 [ %179, %173 ], [ %187, %181 ]
  %190 = bitcast %"class.fxcrt::RetainPtr"* %12 to i64*
  store i64 %155, i64* %190, align 8
  %191 = add nsw i64 %189, 1
  store i64 %191, i64* %159, align 8
  call void @_ZN18CFX_CSSDeclaration17AddPropertyHolderE15CFX_CSSPropertyN5fxcrt9RetainPtrI12CFX_CSSValueEEb(%class.CFX_CSSDeclaration* %0, i8 zeroext 17, %"class.fxcrt::RetainPtr"* nonnull %12, i1 zeroext %41)
  %192 = getelementptr inbounds %"class.fxcrt::RetainPtr", %"class.fxcrt::RetainPtr"* %12, i64 0, i32 0, i32 0, i32 0, i32 0
  store %class.CFX_CSSValue* null, %class.CFX_CSSValue** %192, align 8
  %193 = load i64, i64* %159, align 8
  %194 = add nsw i64 %193, -1
  store i64 %194, i64* %159, align 8
  %195 = icmp eq i64 %194, 0
  br i1 %195, label %196, label %203

196:                                              ; preds = %188
  %197 = getelementptr inbounds %class.CFX_CSSValue, %class.CFX_CSSValue* %154, i64 0, i32 0
  %198 = bitcast %class.CFX_CSSValue* %154 to void (%"class.fxcrt::Retainable"*)***
  %199 = load void (%"class.fxcrt::Retainable"*)**, void (%"class.fxcrt::Retainable"*)*** %198, align 8
  %200 = getelementptr inbounds void (%"class.fxcrt::Retainable"*)*, void (%"class.fxcrt::Retainable"*)** %199, i64 1
  %201 = load void (%"class.fxcrt::Retainable"*)*, void (%"class.fxcrt::Retainable"*)** %200, align 8
  tail call void %201(%"class.fxcrt::Retainable"* nonnull %197) #14
  %202 = load i64, i64* %159, align 8
  br label %203

203:                                              ; preds = %188, %196
  %204 = phi i64 [ %194, %188 ], [ %202, %196 ]
  %205 = bitcast %"class.fxcrt::RetainPtr"* %13 to i64*
  store i64 %155, i64* %205, align 8
  %206 = add nsw i64 %204, 1
  store i64 %206, i64* %159, align 8
  call void @_ZN18CFX_CSSDeclaration17AddPropertyHolderE15CFX_CSSPropertyN5fxcrt9RetainPtrI12CFX_CSSValueEEb(%class.CFX_CSSDeclaration* %0, i8 zeroext 22, %"class.fxcrt::RetainPtr"* nonnull %13, i1 zeroext %41)
  %207 = getelementptr inbounds %"class.fxcrt::RetainPtr", %"class.fxcrt::RetainPtr"* %13, i64 0, i32 0, i32 0, i32 0, i32 0
  store %class.CFX_CSSValue* null, %class.CFX_CSSValue** %207, align 8
  %208 = load i64, i64* %159, align 8
  %209 = add nsw i64 %208, -1
  store i64 %209, i64* %159, align 8
  %210 = icmp eq i64 %209, 0
  br i1 %210, label %211, label %226

211:                                              ; preds = %203
  %212 = getelementptr inbounds %class.CFX_CSSValue, %class.CFX_CSSValue* %154, i64 0, i32 0
  %213 = bitcast %class.CFX_CSSValue* %154 to void (%"class.fxcrt::Retainable"*)***
  %214 = load void (%"class.fxcrt::Retainable"*)**, void (%"class.fxcrt::Retainable"*)*** %213, align 8
  %215 = getelementptr inbounds void (%"class.fxcrt::Retainable"*)*, void (%"class.fxcrt::Retainable"*)** %214, i64 1
  %216 = load void (%"class.fxcrt::Retainable"*)*, void (%"class.fxcrt::Retainable"*)** %215, align 8
  tail call void %216(%"class.fxcrt::Retainable"* nonnull %212) #14
  %217 = load i64, i64* %159, align 8
  br label %226

218:                                              ; preds = %152
  call void @_ZN18CFX_CSSDeclaration17AddPropertyHolderE15CFX_CSSPropertyN5fxcrt9RetainPtrI12CFX_CSSValueEEb(%class.CFX_CSSDeclaration* %0, i8 zeroext 30, %"class.fxcrt::RetainPtr"* nonnull %10, i1 zeroext %41)
  %219 = getelementptr inbounds %"class.fxcrt::RetainPtr", %"class.fxcrt::RetainPtr"* %10, i64 0, i32 0, i32 0, i32 0, i32 0
  store %class.CFX_CSSValue* null, %class.CFX_CSSValue** %219, align 8
  %220 = bitcast %"class.fxcrt::RetainPtr"* %11 to i64*
  store i64 %155, i64* %220, align 8
  call void @_ZN18CFX_CSSDeclaration17AddPropertyHolderE15CFX_CSSPropertyN5fxcrt9RetainPtrI12CFX_CSSValueEEb(%class.CFX_CSSDeclaration* %0, i8 zeroext 33, %"class.fxcrt::RetainPtr"* nonnull %11, i1 zeroext %41)
  %221 = getelementptr inbounds %"class.fxcrt::RetainPtr", %"class.fxcrt::RetainPtr"* %11, i64 0, i32 0, i32 0, i32 0, i32 0
  store %class.CFX_CSSValue* null, %class.CFX_CSSValue** %221, align 8
  %222 = bitcast %"class.fxcrt::RetainPtr"* %12 to i64*
  store i64 %155, i64* %222, align 8
  call void @_ZN18CFX_CSSDeclaration17AddPropertyHolderE15CFX_CSSPropertyN5fxcrt9RetainPtrI12CFX_CSSValueEEb(%class.CFX_CSSDeclaration* %0, i8 zeroext 17, %"class.fxcrt::RetainPtr"* nonnull %12, i1 zeroext %41)
  %223 = getelementptr inbounds %"class.fxcrt::RetainPtr", %"class.fxcrt::RetainPtr"* %12, i64 0, i32 0, i32 0, i32 0, i32 0
  store %class.CFX_CSSValue* null, %class.CFX_CSSValue** %223, align 8
  %224 = bitcast %"class.fxcrt::RetainPtr"* %13 to i64*
  store i64 %155, i64* %224, align 8
  call void @_ZN18CFX_CSSDeclaration17AddPropertyHolderE15CFX_CSSPropertyN5fxcrt9RetainPtrI12CFX_CSSValueEEb(%class.CFX_CSSDeclaration* %0, i8 zeroext 22, %"class.fxcrt::RetainPtr"* nonnull %13, i1 zeroext %41)
  %225 = getelementptr inbounds %"class.fxcrt::RetainPtr", %"class.fxcrt::RetainPtr"* %13, i64 0, i32 0, i32 0, i32 0, i32 0
  store %class.CFX_CSSValue* null, %class.CFX_CSSValue** %225, align 8
  store %class.CFX_CSSValue* null, %class.CFX_CSSValue** %147, align 8
  br label %236

226:                                              ; preds = %203, %211
  %227 = phi i64 [ %209, %203 ], [ %217, %211 ]
  store %class.CFX_CSSValue* null, %class.CFX_CSSValue** %147, align 8
  %228 = add nsw i64 %227, -1
  store i64 %228, i64* %159, align 8
  %229 = icmp eq i64 %228, 0
  br i1 %229, label %230, label %236

230:                                              ; preds = %226
  %231 = getelementptr inbounds %class.CFX_CSSValue, %class.CFX_CSSValue* %154, i64 0, i32 0
  %232 = bitcast %class.CFX_CSSValue* %154 to void (%"class.fxcrt::Retainable"*)***
  %233 = load void (%"class.fxcrt::Retainable"*)**, void (%"class.fxcrt::Retainable"*)*** %232, align 8
  %234 = getelementptr inbounds void (%"class.fxcrt::Retainable"*)*, void (%"class.fxcrt::Retainable"*)** %233, i64 1
  %235 = load void (%"class.fxcrt::Retainable"*)*, void (%"class.fxcrt::Retainable"*)** %234, align 8
  tail call void %235(%"class.fxcrt::Retainable"* nonnull %231) #14
  br label %236

236:                                              ; preds = %218, %226, %230
  call void @llvm.lifetime.end.p0i8(i64 8, i8* nonnull %146) #14
  br label %144

237:                                              ; preds = %145
  %238 = call zeroext i1 @_ZNK18CFX_CSSDeclaration19ParseBorderPropertyEPKwiRN5fxcrt9RetainPtrI12CFX_CSSValueEE(%class.CFX_CSSDeclaration* undef, i32* %19, i32 %40, %"class.fxcrt::RetainPtr"* nonnull dereferenceable(8) %9)
  %239 = load %class.CFX_CSSValue*, %class.CFX_CSSValue** %147, align 8
  %240 = ptrtoint %class.CFX_CSSValue* %239 to i64
  %241 = bitcast %"class.fxcrt::RetainPtr"* %14 to i64*
  store i64 %240, i64* %241, align 8
  %242 = icmp eq %class.CFX_CSSValue* %239, null
  br i1 %242, label %258, label %243

243:                                              ; preds = %237
  %244 = getelementptr inbounds %class.CFX_CSSValue, %class.CFX_CSSValue* %239, i64 0, i32 0, i32 1
  %245 = load i64, i64* %244, align 8
  %246 = add nsw i64 %245, 1
  store i64 %246, i64* %244, align 8
  call void @_ZN18CFX_CSSDeclaration17AddPropertyHolderE15CFX_CSSPropertyN5fxcrt9RetainPtrI12CFX_CSSValueEEb(%class.CFX_CSSDeclaration* %0, i8 zeroext 30, %"class.fxcrt::RetainPtr"* nonnull %14, i1 zeroext %41)
  %247 = getelementptr inbounds %"class.fxcrt::RetainPtr", %"class.fxcrt::RetainPtr"* %14, i64 0, i32 0, i32 0, i32 0, i32 0
  store %class.CFX_CSSValue* null, %class.CFX_CSSValue** %247, align 8
  %248 = load i64, i64* %244, align 8
  %249 = add nsw i64 %248, -1
  store i64 %249, i64* %244, align 8
  %250 = icmp eq i64 %249, 0
  br i1 %250, label %251, label %260

251:                                              ; preds = %243
  %252 = getelementptr inbounds %class.CFX_CSSValue, %class.CFX_CSSValue* %239, i64 0, i32 0
  %253 = bitcast %class.CFX_CSSValue* %239 to void (%"class.fxcrt::Retainable"*)***
  %254 = load void (%"class.fxcrt::Retainable"*)**, void (%"class.fxcrt::Retainable"*)*** %253, align 8
  %255 = getelementptr inbounds void (%"class.fxcrt::Retainable"*)*, void (%"class.fxcrt::Retainable"*)** %254, i64 1
  %256 = load void (%"class.fxcrt::Retainable"*)*, void (%"class.fxcrt::Retainable"*)** %255, align 8
  tail call void %256(%"class.fxcrt::Retainable"* nonnull %252) #14
  %257 = load i64, i64* %244, align 8
  br label %260

258:                                              ; preds = %237
  call void @_ZN18CFX_CSSDeclaration17AddPropertyHolderE15CFX_CSSPropertyN5fxcrt9RetainPtrI12CFX_CSSValueEEb(%class.CFX_CSSDeclaration* %0, i8 zeroext 30, %"class.fxcrt::RetainPtr"* nonnull %14, i1 zeroext %41)
  %259 = getelementptr inbounds %"class.fxcrt::RetainPtr", %"class.fxcrt::RetainPtr"* %14, i64 0, i32 0, i32 0, i32 0, i32 0
  store %class.CFX_CSSValue* null, %class.CFX_CSSValue** %259, align 8
  store %class.CFX_CSSValue* null, %class.CFX_CSSValue** %147, align 8
  br label %270

260:                                              ; preds = %243, %251
  %261 = phi i64 [ %249, %243 ], [ %257, %251 ]
  store %class.CFX_CSSValue* null, %class.CFX_CSSValue** %147, align 8
  %262 = add nsw i64 %261, -1
  store i64 %262, i64* %244, align 8
  %263 = icmp eq i64 %262, 0
  br i1 %263, label %264, label %270

264:                                              ; preds = %260
  %265 = getelementptr inbounds %class.CFX_CSSValue, %class.CFX_CSSValue* %239, i64 0, i32 0
  %266 = bitcast %class.CFX_CSSValue* %239 to void (%"class.fxcrt::Retainable"*)***
  %267 = load void (%"class.fxcrt::Retainable"*)**, void (%"class.fxcrt::Retainable"*)*** %266, align 8
  %268 = getelementptr inbounds void (%"class.fxcrt::Retainable"*)*, void (%"class.fxcrt::Retainable"*)** %267, i64 1
  %269 = load void (%"class.fxcrt::Retainable"*)*, void (%"class.fxcrt::Retainable"*)** %268, align 8
  tail call void %269(%"class.fxcrt::Retainable"* nonnull %265) #14
  br label %270

270:                                              ; preds = %258, %260, %264
  call void @llvm.lifetime.end.p0i8(i64 8, i8* nonnull %146) #14
  br label %144

271:                                              ; preds = %145
  %272 = call zeroext i1 @_ZNK18CFX_CSSDeclaration19ParseBorderPropertyEPKwiRN5fxcrt9RetainPtrI12CFX_CSSValueEE(%class.CFX_CSSDeclaration* undef, i32* %19, i32 %40, %"class.fxcrt::RetainPtr"* nonnull dereferenceable(8) %9)
  %273 = load %class.CFX_CSSValue*, %class.CFX_CSSValue** %147, align 8
  %274 = ptrtoint %class.CFX_CSSValue* %273 to i64
  %275 = bitcast %"class.fxcrt::RetainPtr"* %15 to i64*
  store i64 %274, i64* %275, align 8
  %276 = icmp eq %class.CFX_CSSValue* %273, null
  br i1 %276, label %292, label %277

277:                                              ; preds = %271
  %278 = getelementptr inbounds %class.CFX_CSSValue, %class.CFX_CSSValue* %273, i64 0, i32 0, i32 1
  %279 = load i64, i64* %278, align 8
  %280 = add nsw i64 %279, 1
  store i64 %280, i64* %278, align 8
  call void @_ZN18CFX_CSSDeclaration17AddPropertyHolderE15CFX_CSSPropertyN5fxcrt9RetainPtrI12CFX_CSSValueEEb(%class.CFX_CSSDeclaration* %0, i8 zeroext 33, %"class.fxcrt::RetainPtr"* nonnull %15, i1 zeroext %41)
  %281 = getelementptr inbounds %"class.fxcrt::RetainPtr", %"class.fxcrt::RetainPtr"* %15, i64 0, i32 0, i32 0, i32 0, i32 0
  store %class.CFX_CSSValue* null, %class.CFX_CSSValue** %281, align 8
  %282 = load i64, i64* %278, align 8
  %283 = add nsw i64 %282, -1
  store i64 %283, i64* %278, align 8
  %284 = icmp eq i64 %283, 0
  br i1 %284, label %285, label %294

285:                                              ; preds = %277
  %286 = getelementptr inbounds %class.CFX_CSSValue, %class.CFX_CSSValue* %273, i64 0, i32 0
  %287 = bitcast %class.CFX_CSSValue* %273 to void (%"class.fxcrt::Retainable"*)***
  %288 = load void (%"class.fxcrt::Retainable"*)**, void (%"class.fxcrt::Retainable"*)*** %287, align 8
  %289 = getelementptr inbounds void (%"class.fxcrt::Retainable"*)*, void (%"class.fxcrt::Retainable"*)** %288, i64 1
  %290 = load void (%"class.fxcrt::Retainable"*)*, void (%"class.fxcrt::Retainable"*)** %289, align 8
  tail call void %290(%"class.fxcrt::Retainable"* nonnull %286) #14
  %291 = load i64, i64* %278, align 8
  br label %294

292:                                              ; preds = %271
  call void @_ZN18CFX_CSSDeclaration17AddPropertyHolderE15CFX_CSSPropertyN5fxcrt9RetainPtrI12CFX_CSSValueEEb(%class.CFX_CSSDeclaration* %0, i8 zeroext 33, %"class.fxcrt::RetainPtr"* nonnull %15, i1 zeroext %41)
  %293 = getelementptr inbounds %"class.fxcrt::RetainPtr", %"class.fxcrt::RetainPtr"* %15, i64 0, i32 0, i32 0, i32 0, i32 0
  store %class.CFX_CSSValue* null, %class.CFX_CSSValue** %293, align 8
  store %class.CFX_CSSValue* null, %class.CFX_CSSValue** %147, align 8
  br label %304

294:                                              ; preds = %277, %285
  %295 = phi i64 [ %283, %277 ], [ %291, %285 ]
  store %class.CFX_CSSValue* null, %class.CFX_CSSValue** %147, align 8
  %296 = add nsw i64 %295, -1
  store i64 %296, i64* %278, align 8
  %297 = icmp eq i64 %296, 0
  br i1 %297, label %298, label %304

298:                                              ; preds = %294
  %299 = getelementptr inbounds %class.CFX_CSSValue, %class.CFX_CSSValue* %273, i64 0, i32 0
  %300 = bitcast %class.CFX_CSSValue* %273 to void (%"class.fxcrt::Retainable"*)***
  %301 = load void (%"class.fxcrt::Retainable"*)**, void (%"class.fxcrt::Retainable"*)*** %300, align 8
  %302 = getelementptr inbounds void (%"class.fxcrt::Retainable"*)*, void (%"class.fxcrt::Retainable"*)** %301, i64 1
  %303 = load void (%"class.fxcrt::Retainable"*)*, void (%"class.fxcrt::Retainable"*)** %302, align 8
  tail call void %303(%"class.fxcrt::Retainable"* nonnull %299) #14
  br label %304

304:                                              ; preds = %292, %294, %298
  call void @llvm.lifetime.end.p0i8(i64 8, i8* nonnull %146) #14
  br label %144

305:                                              ; preds = %145
  %306 = call zeroext i1 @_ZNK18CFX_CSSDeclaration19ParseBorderPropertyEPKwiRN5fxcrt9RetainPtrI12CFX_CSSValueEE(%class.CFX_CSSDeclaration* undef, i32* %19, i32 %40, %"class.fxcrt::RetainPtr"* nonnull dereferenceable(8) %9)
  %307 = load %class.CFX_CSSValue*, %class.CFX_CSSValue** %147, align 8
  %308 = ptrtoint %class.CFX_CSSValue* %307 to i64
  %309 = bitcast %"class.fxcrt::RetainPtr"* %16 to i64*
  store i64 %308, i64* %309, align 8
  %310 = icmp eq %class.CFX_CSSValue* %307, null
  br i1 %310, label %326, label %311

311:                                              ; preds = %305
  %312 = getelementptr inbounds %class.CFX_CSSValue, %class.CFX_CSSValue* %307, i64 0, i32 0, i32 1
  %313 = load i64, i64* %312, align 8
  %314 = add nsw i64 %313, 1
  store i64 %314, i64* %312, align 8
  call void @_ZN18CFX_CSSDeclaration17AddPropertyHolderE15CFX_CSSPropertyN5fxcrt9RetainPtrI12CFX_CSSValueEEb(%class.CFX_CSSDeclaration* %0, i8 zeroext 17, %"class.fxcrt::RetainPtr"* nonnull %16, i1 zeroext %41)
  %315 = getelementptr inbounds %"class.fxcrt::RetainPtr", %"class.fxcrt::RetainPtr"* %16, i64 0, i32 0, i32 0, i32 0, i32 0
  store %class.CFX_CSSValue* null, %class.CFX_CSSValue** %315, align 8
  %316 = load i64, i64* %312, align 8
  %317 = add nsw i64 %316, -1
  store i64 %317, i64* %312, align 8
  %318 = icmp eq i64 %317, 0
  br i1 %318, label %319, label %328

319:                                              ; preds = %311
  %320 = getelementptr inbounds %class.CFX_CSSValue, %class.CFX_CSSValue* %307, i64 0, i32 0
  %321 = bitcast %class.CFX_CSSValue* %307 to void (%"class.fxcrt::Retainable"*)***
  %322 = load void (%"class.fxcrt::Retainable"*)**, void (%"class.fxcrt::Retainable"*)*** %321, align 8
  %323 = getelementptr inbounds void (%"class.fxcrt::Retainable"*)*, void (%"class.fxcrt::Retainable"*)** %322, i64 1
  %324 = load void (%"class.fxcrt::Retainable"*)*, void (%"class.fxcrt::Retainable"*)** %323, align 8
  tail call void %324(%"class.fxcrt::Retainable"* nonnull %320) #14
  %325 = load i64, i64* %312, align 8
  br label %328

326:                                              ; preds = %305
  call void @_ZN18CFX_CSSDeclaration17AddPropertyHolderE15CFX_CSSPropertyN5fxcrt9RetainPtrI12CFX_CSSValueEEb(%class.CFX_CSSDeclaration* %0, i8 zeroext 17, %"class.fxcrt::RetainPtr"* nonnull %16, i1 zeroext %41)
  %327 = getelementptr inbounds %"class.fxcrt::RetainPtr", %"class.fxcrt::RetainPtr"* %16, i64 0, i32 0, i32 0, i32 0, i32 0
  store %class.CFX_CSSValue* null, %class.CFX_CSSValue** %327, align 8
  store %class.CFX_CSSValue* null, %class.CFX_CSSValue** %147, align 8
  br label %338

328:                                              ; preds = %311, %319
  %329 = phi i64 [ %317, %311 ], [ %325, %319 ]
  store %class.CFX_CSSValue* null, %class.CFX_CSSValue** %147, align 8
  %330 = add nsw i64 %329, -1
  store i64 %330, i64* %312, align 8
  %331 = icmp eq i64 %330, 0
  br i1 %331, label %332, label %338

332:                                              ; preds = %328
  %333 = getelementptr inbounds %class.CFX_CSSValue, %class.CFX_CSSValue* %307, i64 0, i32 0
  %334 = bitcast %class.CFX_CSSValue* %307 to void (%"class.fxcrt::Retainable"*)***
  %335 = load void (%"class.fxcrt::Retainable"*)**, void (%"class.fxcrt::Retainable"*)*** %334, align 8
  %336 = getelementptr inbounds void (%"class.fxcrt::Retainable"*)*, void (%"class.fxcrt::Retainable"*)** %335, i64 1
  %337 = load void (%"class.fxcrt::Retainable"*)*, void (%"class.fxcrt::Retainable"*)** %336, align 8
  tail call void %337(%"class.fxcrt::Retainable"* nonnull %333) #14
  br label %338

338:                                              ; preds = %326, %328, %332
  call void @llvm.lifetime.end.p0i8(i64 8, i8* nonnull %146) #14
  br label %144

339:                                              ; preds = %145
  %340 = call zeroext i1 @_ZNK18CFX_CSSDeclaration19ParseBorderPropertyEPKwiRN5fxcrt9RetainPtrI12CFX_CSSValueEE(%class.CFX_CSSDeclaration* undef, i32* %19, i32 %40, %"class.fxcrt::RetainPtr"* nonnull dereferenceable(8) %9)
  %341 = load %class.CFX_CSSValue*, %class.CFX_CSSValue** %147, align 8
  %342 = ptrtoint %class.CFX_CSSValue* %341 to i64
  %343 = bitcast %"class.fxcrt::RetainPtr"* %17 to i64*
  store i64 %342, i64* %343, align 8
  %344 = icmp eq %class.CFX_CSSValue* %341, null
  br i1 %344, label %360, label %345

345:                                              ; preds = %339
  %346 = getelementptr inbounds %class.CFX_CSSValue, %class.CFX_CSSValue* %341, i64 0, i32 0, i32 1
  %347 = load i64, i64* %346, align 8
  %348 = add nsw i64 %347, 1
  store i64 %348, i64* %346, align 8
  call void @_ZN18CFX_CSSDeclaration17AddPropertyHolderE15CFX_CSSPropertyN5fxcrt9RetainPtrI12CFX_CSSValueEEb(%class.CFX_CSSDeclaration* %0, i8 zeroext 22, %"class.fxcrt::RetainPtr"* nonnull %17, i1 zeroext %41)
  %349 = getelementptr inbounds %"class.fxcrt::RetainPtr", %"class.fxcrt::RetainPtr"* %17, i64 0, i32 0, i32 0, i32 0, i32 0
  store %class.CFX_CSSValue* null, %class.CFX_CSSValue** %349, align 8
  %350 = load i64, i64* %346, align 8
  %351 = add nsw i64 %350, -1
  store i64 %351, i64* %346, align 8
  %352 = icmp eq i64 %351, 0
  br i1 %352, label %353, label %362

353:                                              ; preds = %345
  %354 = getelementptr inbounds %class.CFX_CSSValue, %class.CFX_CSSValue* %341, i64 0, i32 0
  %355 = bitcast %class.CFX_CSSValue* %341 to void (%"class.fxcrt::Retainable"*)***
  %356 = load void (%"class.fxcrt::Retainable"*)**, void (%"class.fxcrt::Retainable"*)*** %355, align 8
  %357 = getelementptr inbounds void (%"class.fxcrt::Retainable"*)*, void (%"class.fxcrt::Retainable"*)** %356, i64 1
  %358 = load void (%"class.fxcrt::Retainable"*)*, void (%"class.fxcrt::Retainable"*)** %357, align 8
  tail call void %358(%"class.fxcrt::Retainable"* nonnull %354) #14
  %359 = load i64, i64* %346, align 8
  br label %362

360:                                              ; preds = %339
  call void @_ZN18CFX_CSSDeclaration17AddPropertyHolderE15CFX_CSSPropertyN5fxcrt9RetainPtrI12CFX_CSSValueEEb(%class.CFX_CSSDeclaration* %0, i8 zeroext 22, %"class.fxcrt::RetainPtr"* nonnull %17, i1 zeroext %41)
  %361 = getelementptr inbounds %"class.fxcrt::RetainPtr", %"class.fxcrt::RetainPtr"* %17, i64 0, i32 0, i32 0, i32 0, i32 0
  store %class.CFX_CSSValue* null, %class.CFX_CSSValue** %361, align 8
  store %class.CFX_CSSValue* null, %class.CFX_CSSValue** %147, align 8
  br label %372

362:                                              ; preds = %345, %353
  %363 = phi i64 [ %351, %345 ], [ %359, %353 ]
  store %class.CFX_CSSValue* null, %class.CFX_CSSValue** %147, align 8
  %364 = add nsw i64 %363, -1
  store i64 %364, i64* %346, align 8
  %365 = icmp eq i64 %364, 0
  br i1 %365, label %366, label %372

366:                                              ; preds = %362
  %367 = getelementptr inbounds %class.CFX_CSSValue, %class.CFX_CSSValue* %341, i64 0, i32 0
  %368 = bitcast %class.CFX_CSSValue* %341 to void (%"class.fxcrt::Retainable"*)***
  %369 = load void (%"class.fxcrt::Retainable"*)**, void (%"class.fxcrt::Retainable"*)*** %368, align 8
  %370 = getelementptr inbounds void (%"class.fxcrt::Retainable"*)*, void (%"class.fxcrt::Retainable"*)** %369, i64 1
  %371 = load void (%"class.fxcrt::Retainable"*)*, void (%"class.fxcrt::Retainable"*)** %370, align 8
  tail call void %371(%"class.fxcrt::Retainable"* nonnull %367) #14
  br label %372

372:                                              ; preds = %360, %362, %366
  call void @llvm.lifetime.end.p0i8(i64 8, i8* nonnull %146) #14
  br label %144

373:                                              ; preds = %145
  call void @llvm.lifetime.end.p0i8(i64 8, i8* nonnull %146) #14
  br label %144

374:                                              ; preds = %39
  tail call void @_ZN18CFX_CSSDeclaration22ParseValueListPropertyEPKN11CFX_CSSData8PropertyEPKwib(%class.CFX_CSSDeclaration* %0, %"struct.CFX_CSSData::Property"* %1, i32* %19, i32 %40, i1 zeroext %41)
  br label %144
}

; Function Attrs: nounwind ssp uwtable
define hidden void @_ZN18CFX_CSSDeclaration11ParseNumberEPKwi(%"class.fxcrt::RetainPtr"* noalias nocapture sret, %class.CFX_CSSDeclaration* nocapture readnone, i32*, i32) local_unnamed_addr #2 align 2 {
  %5 = alloca i32, align 4
  %6 = alloca %"class.fxcrt::StringViewTemplate", align 8
  %7 = bitcast %"class.fxcrt::StringViewTemplate"* %6 to i8*
  call void @llvm.lifetime.start.p0i8(i64 16, i8* nonnull %7)
  %8 = bitcast i32* %5 to i8*
  call void @llvm.lifetime.start.p0i8(i64 4, i8* nonnull %8) #14
  store i32 0, i32* %5, align 4
  %9 = call float @_Z12FXSYS_wcstofPKwiPi(i32* %2, i32 %3, i32* nonnull %5) #14
  %10 = load i32, i32* %5, align 4
  %11 = icmp sgt i32 %10, 0
  %12 = call float @llvm.fabs.f32(float %9) #13
  %13 = fcmp one float %12, 0x7FF0000000000000
  %14 = and i1 %13, %11
  br i1 %14, label %15, label %33

15:                                               ; preds = %4
  %16 = sub nsw i32 %3, %10
  %17 = sext i32 %10 to i64
  %18 = getelementptr inbounds i32, i32* %2, i64 %17
  %19 = icmp sgt i32 %16, 0
  br i1 %19, label %20, label %35

20:                                               ; preds = %15
  %21 = load i32, i32* %18, align 4
  %22 = icmp eq i32 %21, 37
  br i1 %22, label %35, label %23

23:                                               ; preds = %20
  %24 = icmp eq i32 %16, 2
  br i1 %24, label %25, label %35

25:                                               ; preds = %23
  %26 = getelementptr inbounds %"class.fxcrt::StringViewTemplate", %"class.fxcrt::StringViewTemplate"* %6, i64 0, i32 0, i32 0, i32 0
  store i32* %18, i32** %26, align 8
  %27 = getelementptr inbounds %"class.fxcrt::StringViewTemplate", %"class.fxcrt::StringViewTemplate"* %6, i64 0, i32 0, i32 1
  store i64 2, i64* %27, align 8
  %28 = call %"struct.CFX_CSSData::LengthUnit"* @_ZN11CFX_CSSData19GetLengthUnitByNameEN5fxcrt18StringViewTemplateIwEE(%"class.fxcrt::StringViewTemplate"* nonnull %6) #14
  %29 = icmp eq %"struct.CFX_CSSData::LengthUnit"* %28, null
  br i1 %29, label %35, label %30

30:                                               ; preds = %25
  %31 = getelementptr inbounds %"struct.CFX_CSSData::LengthUnit", %"struct.CFX_CSSData::LengthUnit"* %28, i64 0, i32 1
  %32 = load i32, i32* %31, align 8
  br label %35

33:                                               ; preds = %4
  call void @llvm.lifetime.end.p0i8(i64 4, i8* nonnull %8) #14
  call void @llvm.lifetime.end.p0i8(i64 16, i8* nonnull %7)
  %34 = bitcast %"class.fxcrt::RetainPtr"* %0 to i64*
  store i64 0, i64* %34, align 8
  br label %52

35:                                               ; preds = %20, %15, %23, %25, %30
  %36 = phi i32 [ 1, %20 ], [ 0, %15 ], [ 0, %23 ], [ %32, %30 ], [ 0, %25 ]
  call void @llvm.lifetime.end.p0i8(i64 4, i8* nonnull %8) #14
  call void @llvm.lifetime.end.p0i8(i64 16, i8* nonnull %7)
  %37 = call i8* @_Znwm(i64 32) #15, !noalias !15
  %38 = bitcast i8* %37 to %class.CFX_CSSNumberValue*
  call void @_ZN18CFX_CSSNumberValueC1ENS_4UnitEf(%class.CFX_CSSNumberValue* nonnull %38, i32 %36, float %9) #14, !noalias !15
  %39 = ptrtoint i8* %37 to i64
  %40 = getelementptr inbounds i8, i8* %37, i64 8
  %41 = bitcast i8* %40 to i64*
  %42 = load i64, i64* %41, align 8, !noalias !15
  %43 = add nsw i64 %42, 1
  %44 = bitcast %"class.fxcrt::RetainPtr"* %0 to i64*
  store i64 %39, i64* %44, align 8
  store i64 %43, i64* %41, align 8
  %45 = icmp eq i64 %43, 0
  br i1 %45, label %46, label %52

46:                                               ; preds = %35
  %47 = bitcast i8* %37 to %"class.fxcrt::Retainable"*
  %48 = bitcast i8* %37 to void (%"class.fxcrt::Retainable"*)***
  %49 = load void (%"class.fxcrt::Retainable"*)**, void (%"class.fxcrt::Retainable"*)*** %48, align 8
  %50 = getelementptr inbounds void (%"class.fxcrt::Retainable"*)*, void (%"class.fxcrt::Retainable"*)** %49, i64 1
  %51 = load void (%"class.fxcrt::Retainable"*)*, void (%"class.fxcrt::Retainable"*)** %50, align 8
  call void %51(%"class.fxcrt::Retainable"* nonnull %47) #14
  br label %52

52:                                               ; preds = %46, %35, %33
  ret void
}

; Function Attrs: nounwind ssp uwtable
define hidden void @_ZN18CFX_CSSDeclaration9ParseEnumEPKwi(%"class.fxcrt::RetainPtr"* noalias nocapture sret, %class.CFX_CSSDeclaration* nocapture readnone, i32*, i32) local_unnamed_addr #2 align 2 {
  %5 = alloca %"class.fxcrt::StringViewTemplate", align 8
  %6 = sext i32 %3 to i64
  %7 = getelementptr inbounds %"class.fxcrt::StringViewTemplate", %"class.fxcrt::StringViewTemplate"* %5, i64 0, i32 0, i32 0, i32 0
  store i32* %2, i32** %7, align 8
  %8 = getelementptr inbounds %"class.fxcrt::StringViewTemplate", %"class.fxcrt::StringViewTemplate"* %5, i64 0, i32 0, i32 1
  store i64 %6, i64* %8, align 8
  %9 = call %"struct.CFX_CSSData::PropertyValue"* @_ZN11CFX_CSSData22GetPropertyValueByNameEN5fxcrt18StringViewTemplateIwEE(%"class.fxcrt::StringViewTemplate"* nonnull %5) #14
  %10 = icmp eq %"struct.CFX_CSSData::PropertyValue"* %9, null
  br i1 %10, label %11, label %13

11:                                               ; preds = %4
  %12 = bitcast %"class.fxcrt::RetainPtr"* %0 to i64*
  store i64 0, i64* %12, align 8
  br label %31

13:                                               ; preds = %4
  %14 = getelementptr inbounds %"struct.CFX_CSSData::PropertyValue", %"struct.CFX_CSSData::PropertyValue"* %9, i64 0, i32 0
  %15 = call i8* @_Znwm(i64 24) #15, !noalias !18
  %16 = bitcast i8* %15 to %class.CFX_CSSEnumValue*
  %17 = load i8, i8* %14, align 1, !noalias !18
  call void @_ZN16CFX_CSSEnumValueC1E20CFX_CSSPropertyValue(%class.CFX_CSSEnumValue* nonnull %16, i8 zeroext %17) #14, !noalias !18
  %18 = ptrtoint i8* %15 to i64
  %19 = getelementptr inbounds i8, i8* %15, i64 8
  %20 = bitcast i8* %19 to i64*
  %21 = load i64, i64* %20, align 8, !noalias !18
  %22 = add nsw i64 %21, 1
  %23 = bitcast %"class.fxcrt::RetainPtr"* %0 to i64*
  store i64 %18, i64* %23, align 8
  store i64 %22, i64* %20, align 8
  %24 = icmp eq i64 %22, 0
  br i1 %24, label %25, label %31

25:                                               ; preds = %13
  %26 = bitcast i8* %15 to %"class.fxcrt::Retainable"*
  %27 = bitcast i8* %15 to void (%"class.fxcrt::Retainable"*)***
  %28 = load void (%"class.fxcrt::Retainable"*)**, void (%"class.fxcrt::Retainable"*)*** %27, align 8
  %29 = getelementptr inbounds void (%"class.fxcrt::Retainable"*)*, void (%"class.fxcrt::Retainable"*)** %28, i64 1
  %30 = load void (%"class.fxcrt::Retainable"*)*, void (%"class.fxcrt::Retainable"*)** %29, align 8
  call void %30(%"class.fxcrt::Retainable"* nonnull %26) #14
  br label %31

31:                                               ; preds = %11, %13, %25
  ret void
}

; Function Attrs: nounwind ssp uwtable
define hidden void @_ZN18CFX_CSSDeclaration10ParseColorEPKwi(%"class.fxcrt::RetainPtr"* noalias nocapture sret, %class.CFX_CSSDeclaration* nocapture readnone, i32*, i32) local_unnamed_addr #2 align 2 {
  %5 = alloca i32, align 4
  %6 = bitcast i32* %5 to i8*
  call void @llvm.lifetime.start.p0i8(i64 4, i8* nonnull %6) #14
  store i32 -1431655766, i32* %5, align 4
  %7 = call zeroext i1 @_ZN18CFX_CSSDeclaration13ParseCSSColorEPKwiPj(i32* %2, i32 %3, i32* nonnull %5)
  br i1 %7, label %10, label %8

8:                                                ; preds = %4
  %9 = bitcast %"class.fxcrt::RetainPtr"* %0 to i64*
  store i64 0, i64* %9, align 8
  br label %27

10:                                               ; preds = %4
  %11 = tail call i8* @_Znwm(i64 24) #15, !noalias !21
  %12 = bitcast i8* %11 to %class.CFX_CSSColorValue*
  %13 = load i32, i32* %5, align 4, !noalias !21
  tail call void @_ZN17CFX_CSSColorValueC1Ej(%class.CFX_CSSColorValue* nonnull %12, i32 %13) #14, !noalias !21
  %14 = ptrtoint i8* %11 to i64
  %15 = getelementptr inbounds i8, i8* %11, i64 8
  %16 = bitcast i8* %15 to i64*
  %17 = load i64, i64* %16, align 8, !noalias !21
  %18 = add nsw i64 %17, 1
  %19 = bitcast %"class.fxcrt::RetainPtr"* %0 to i64*
  store i64 %14, i64* %19, align 8
  store i64 %18, i64* %16, align 8
  %20 = icmp eq i64 %18, 0
  br i1 %20, label %21, label %27

21:                                               ; preds = %10
  %22 = bitcast i8* %11 to %"class.fxcrt::Retainable"*
  %23 = bitcast i8* %11 to void (%"class.fxcrt::Retainable"*)***
  %24 = load void (%"class.fxcrt::Retainable"*)**, void (%"class.fxcrt::Retainable"*)*** %23, align 8
  %25 = getelementptr inbounds void (%"class.fxcrt::Retainable"*)*, void (%"class.fxcrt::Retainable"*)** %24, i64 1
  %26 = load void (%"class.fxcrt::Retainable"*)*, void (%"class.fxcrt::Retainable"*)** %25, align 8
  tail call void %26(%"class.fxcrt::Retainable"* nonnull %22) #14
  br label %27

27:                                               ; preds = %21, %10, %8
  call void @llvm.lifetime.end.p0i8(i64 4, i8* nonnull %6) #14
  ret void
}

; Function Attrs: nounwind ssp uwtable
define hidden void @_ZN18CFX_CSSDeclaration11ParseStringEPKwi(%"class.fxcrt::RetainPtr"* noalias nocapture sret, %class.CFX_CSSDeclaration* nocapture readnone, i32*, i32) local_unnamed_addr #2 align 2 {
  %5 = alloca %"class.fxcrt::WideString", align 8
  %6 = icmp sgt i32 %3, 1
  br i1 %6, label %7, label %20

7:                                                ; preds = %4
  %8 = load i32, i32* %2, align 4
  %9 = add nsw i32 %3, -1
  %10 = sext i32 %9 to i64
  %11 = getelementptr inbounds i32, i32* %2, i64 %10
  %12 = load i32, i32* %11, align 4
  %13 = icmp eq i32 %8, 34
  %14 = icmp eq i32 %12, 34
  %15 = and i1 %13, %14
  br i1 %15, label %24, label %16

16:                                               ; preds = %7
  %17 = icmp eq i32 %8, 39
  %18 = icmp eq i32 %12, 39
  %19 = and i1 %17, %18
  br i1 %19, label %24, label %29

20:                                               ; preds = %4
  %21 = icmp eq i32 %3, 1
  br i1 %21, label %29, label %22

22:                                               ; preds = %20
  %23 = bitcast %"class.fxcrt::RetainPtr"* %0 to i64*
  store i64 0, i64* %23, align 8
  br label %51

24:                                               ; preds = %7, %16
  %25 = add nsw i32 %3, -2
  %26 = icmp slt i32 %25, 1
  br i1 %26, label %27, label %29

27:                                               ; preds = %24
  %28 = bitcast %"class.fxcrt::RetainPtr"* %0 to i64*
  store i64 0, i64* %28, align 8
  br label %51

29:                                               ; preds = %20, %16, %24
  %30 = phi i32 [ %25, %24 ], [ %3, %16 ], [ 1, %20 ]
  %31 = phi i64 [ 1, %24 ], [ 0, %16 ], [ 0, %20 ]
  %32 = bitcast %"class.fxcrt::WideString"* %5 to i8*
  call void @llvm.lifetime.start.p0i8(i64 8, i8* nonnull %32) #14
  %33 = getelementptr inbounds i32, i32* %2, i64 %31
  %34 = sext i32 %30 to i64
  call void @_ZN5fxcrt10WideStringC1EPKwm(%"class.fxcrt::WideString"* nonnull %5, i32* %33, i64 %34) #14
  %35 = call i8* @_Znwm(i64 32) #15, !noalias !24
  %36 = bitcast i8* %35 to %class.CFX_CSSStringValue*
  call void @_ZN18CFX_CSSStringValueC1ERKN5fxcrt10WideStringE(%class.CFX_CSSStringValue* nonnull %36, %"class.fxcrt::WideString"* nonnull dereferenceable(8) %5) #14, !noalias !24
  %37 = ptrtoint i8* %35 to i64
  %38 = getelementptr inbounds i8, i8* %35, i64 8
  %39 = bitcast i8* %38 to i64*
  %40 = load i64, i64* %39, align 8, !noalias !24
  %41 = add nsw i64 %40, 1
  %42 = bitcast %"class.fxcrt::RetainPtr"* %0 to i64*
  store i64 %37, i64* %42, align 8
  store i64 %41, i64* %39, align 8
  %43 = icmp eq i64 %41, 0
  br i1 %43, label %44, label %50

44:                                               ; preds = %29
  %45 = bitcast i8* %35 to %"class.fxcrt::Retainable"*
  %46 = bitcast i8* %35 to void (%"class.fxcrt::Retainable"*)***
  %47 = load void (%"class.fxcrt::Retainable"*)**, void (%"class.fxcrt::Retainable"*)*** %46, align 8
  %48 = getelementptr inbounds void (%"class.fxcrt::Retainable"*)*, void (%"class.fxcrt::Retainable"*)** %47, i64 1
  %49 = load void (%"class.fxcrt::Retainable"*)*, void (%"class.fxcrt::Retainable"*)** %48, align 8
  call void %49(%"class.fxcrt::Retainable"* nonnull %45) #14
  br label %50

50:                                               ; preds = %29, %44
  call void @_ZN5fxcrt10WideStringD1Ev(%"class.fxcrt::WideString"* nonnull %5) #14
  call void @llvm.lifetime.end.p0i8(i64 8, i8* nonnull %32) #14
  br label %51

51:                                               ; preds = %50, %27, %22
  ret void
}

; Function Attrs: nounwind ssp uwtable
define hidden void @_ZN18CFX_CSSDeclaration17ParseFontPropertyEPKwib(%class.CFX_CSSDeclaration*, i32*, i32, i1 zeroext) local_unnamed_addr #2 align 2 {
  %5 = alloca i32, align 4
  %6 = alloca %"class.fxcrt::StringViewTemplate", align 8
  %7 = alloca i32*, align 8
  %8 = alloca i32, align 4
  %9 = alloca %class.CFX_CSSValueListParser, align 8
  %10 = alloca %"class.std::__1::vector.51", align 8
  %11 = alloca i8, align 1
  %12 = alloca %"class.fxcrt::StringViewTemplate", align 8
  %13 = alloca %"class.fxcrt::RetainPtr", align 8
  %14 = alloca %"class.fxcrt::WideString", align 8
  %15 = alloca %"class.fxcrt::RetainPtr", align 8
  %16 = alloca %"class.fxcrt::RetainPtr", align 8
  %17 = alloca %"class.fxcrt::RetainPtr", align 8
  %18 = alloca %"class.fxcrt::RetainPtr", align 8
  %19 = alloca %"class.fxcrt::RetainPtr", align 8
  %20 = alloca %"class.fxcrt::RetainPtr.58", align 8
  %21 = alloca %"class.fxcrt::RetainPtr", align 8
  store i32* %1, i32** %7, align 8
  store i32 %2, i32* %8, align 4
  %22 = bitcast %class.CFX_CSSValueListParser* %9 to i8*
  call void @llvm.lifetime.start.p0i8(i64 24, i8* nonnull %22) #14
  call void @llvm.memset.p0i8.i64(i8* nonnull align 8 %22, i8 -86, i64 24, i1 false)
  call void @_ZN22CFX_CSSValueListParserC1EPKwiw(%class.CFX_CSSValueListParser* nonnull %9, i32* %1, i32 %2, i32 signext 47) #14
  %23 = bitcast %"class.std::__1::vector.51"* %10 to i8*
  call void @llvm.lifetime.start.p0i8(i64 24, i8* nonnull %23) #14
  %24 = getelementptr inbounds %"class.std::__1::vector.51", %"class.std::__1::vector.51"* %10, i64 0, i32 0, i32 1
  %25 = getelementptr inbounds %"class.std::__1::vector.51", %"class.std::__1::vector.51"* %10, i64 0, i32 0, i32 2, i32 0, i32 0
  call void @llvm.memset.p0i8.i64(i8* nonnull align 8 %23, i8 0, i64 24, i1 false) #14
  call void @llvm.lifetime.start.p0i8(i64 1, i8* nonnull %11) #14
  store i8 -86, i8* %11, align 1
  %26 = bitcast %"class.fxcrt::StringViewTemplate"* %6 to i8*
  %27 = bitcast i32* %5 to i8*
  %28 = getelementptr inbounds %"class.fxcrt::StringViewTemplate", %"class.fxcrt::StringViewTemplate"* %6, i64 0, i32 0, i32 0, i32 0
  %29 = getelementptr inbounds %"class.fxcrt::StringViewTemplate", %"class.fxcrt::StringViewTemplate"* %6, i64 0, i32 0, i32 1
  %30 = bitcast i32** %7 to i64*
  %31 = bitcast %"class.fxcrt::StringViewTemplate"* %12 to i64*
  %32 = getelementptr inbounds %"class.fxcrt::StringViewTemplate", %"class.fxcrt::StringViewTemplate"* %12, i64 0, i32 0, i32 1
  %33 = bitcast %"class.fxcrt::RetainPtr"* %13 to i8*
  %34 = bitcast %"class.fxcrt::WideString"* %14 to i8*
  %35 = bitcast %"class.fxcrt::RetainPtr"* %13 to i64*
  %36 = bitcast %"class.fxcrt::RetainPtr"** %24 to i64*
  %37 = getelementptr inbounds %"class.fxcrt::RetainPtr", %"class.fxcrt::RetainPtr"* %13, i64 0, i32 0, i32 0, i32 0, i32 0
  %38 = getelementptr inbounds %class.CFX_CSSValueListParser, %class.CFX_CSSValueListParser* %9, i64 0, i32 0
  br label %39

39:                                               ; preds = %67, %4
  %40 = phi i64 [ 0, %4 ], [ %68, %67 ]
  %41 = phi i64 [ 0, %4 ], [ %69, %67 ]
  %42 = phi i64 [ 0, %4 ], [ %70, %67 ]
  %43 = phi i64 [ 0, %4 ], [ %71, %67 ]
  %44 = phi i64 [ 0, %4 ], [ %72, %67 ]
  br label %45

45:                                               ; preds = %350, %39
  %46 = phi i64 [ %40, %39 ], [ %351, %350 ]
  %47 = phi i64 [ %41, %39 ], [ %352, %350 ]
  %48 = phi i64 [ %42, %39 ], [ %50, %350 ]
  br label %49

49:                                               ; preds = %324, %45
  %50 = phi i64 [ %48, %45 ], [ %318, %324 ]
  %51 = icmp eq i64 %50, 0
  br label %52

52:                                               ; preds = %49, %314
  %53 = call zeroext i1 @_ZN22CFX_CSSValueListParser9NextValueEPN12CFX_CSSValue13PrimitiveTypeEPPKwPi(%class.CFX_CSSValueListParser* nonnull %9, i8* nonnull %11, i32** nonnull %7, i32* nonnull %8) #14
  br i1 %53, label %54, label %369

54:                                               ; preds = %52
  %55 = load i8, i8* %11, align 1
  switch i8 %55, label %350 [
    i8 2, label %56
    i8 1, label %283
  ]

56:                                               ; preds = %54
  %57 = load i64, i64* %30, align 8
  %58 = load i32, i32* %8, align 4
  %59 = sext i32 %58 to i64
  store i64 %57, i64* %31, align 8
  store i64 %59, i64* %32, align 8
  %60 = call %"struct.CFX_CSSData::PropertyValue"* @_ZN11CFX_CSSData22GetPropertyValueByNameEN5fxcrt18StringViewTemplateIwEE(%"class.fxcrt::StringViewTemplate"* nonnull %12) #14
  %61 = icmp eq %"struct.CFX_CSSData::PropertyValue"* %60, null
  br i1 %61, label %236, label %62

62:                                               ; preds = %56
  %63 = getelementptr inbounds %"struct.CFX_CSSData::PropertyValue", %"struct.CFX_CSSData::PropertyValue"* %60, i64 0, i32 0
  %64 = load i8, i8* %63, align 4
  switch i8 %64, label %236 [
    i8 27, label %65
    i8 9, label %65
    i8 11, label %65
    i8 25, label %65
    i8 41, label %65
    i8 40, label %65
    i8 19, label %65
    i8 20, label %65
    i8 33, label %65
    i8 28, label %90
    i8 0, label %90
    i8 15, label %90
    i8 38, label %108
    i8 16, label %108
    i8 29, label %127
    i8 6, label %146
  ]

65:                                               ; preds = %62, %62, %62, %62, %62, %62, %62, %62, %62
  %66 = icmp eq i64 %47, 0
  br i1 %66, label %73, label %67

67:                                               ; preds = %65, %90, %108, %127, %218, %230, %220, %212, %202, %194, %184, %177, %167, %159, %149, %140, %129, %121, %110, %102, %91, %84, %73
  %68 = phi i64 [ %46, %218 ], [ %46, %127 ], [ %46, %108 ], [ %46, %90 ], [ %46, %65 ], [ %46, %73 ], [ %46, %84 ], [ %46, %91 ], [ %46, %102 ], [ %46, %110 ], [ %46, %121 ], [ %46, %129 ], [ %46, %140 ], [ %46, %149 ], [ %46, %159 ], [ %46, %167 ], [ %46, %177 ], [ %46, %184 ], [ %46, %194 ], [ %46, %202 ], [ %46, %212 ], [ %224, %220 ], [ %224, %230 ]
  %69 = phi i64 [ %47, %218 ], [ %47, %127 ], [ %47, %108 ], [ %47, %90 ], [ %47, %65 ], [ %78, %73 ], [ %78, %84 ], [ %47, %91 ], [ %47, %102 ], [ %47, %110 ], [ %47, %121 ], [ %47, %129 ], [ %47, %140 ], [ %47, %149 ], [ %47, %159 ], [ %47, %167 ], [ %47, %177 ], [ %47, %184 ], [ %47, %194 ], [ %206, %202 ], [ %206, %212 ], [ %47, %220 ], [ %47, %230 ]
  %70 = phi i64 [ %50, %218 ], [ %50, %127 ], [ %50, %108 ], [ %50, %90 ], [ %50, %65 ], [ %50, %73 ], [ %50, %84 ], [ %96, %91 ], [ %96, %102 ], [ %50, %110 ], [ %50, %121 ], [ %50, %129 ], [ %50, %140 ], [ %50, %149 ], [ %50, %159 ], [ %50, %167 ], [ %50, %177 ], [ %188, %184 ], [ %188, %194 ], [ %50, %202 ], [ %50, %212 ], [ %50, %220 ], [ %50, %230 ]
  %71 = phi i64 [ %43, %218 ], [ %43, %127 ], [ %43, %108 ], [ %43, %90 ], [ %43, %65 ], [ %43, %73 ], [ %43, %84 ], [ %43, %91 ], [ %43, %102 ], [ %43, %110 ], [ %43, %121 ], [ %134, %129 ], [ %134, %140 ], [ %43, %149 ], [ %43, %159 ], [ %171, %167 ], [ %171, %177 ], [ %43, %184 ], [ %43, %194 ], [ %43, %202 ], [ %43, %212 ], [ %43, %220 ], [ %43, %230 ]
  %72 = phi i64 [ %44, %218 ], [ %44, %127 ], [ %44, %108 ], [ %44, %90 ], [ %44, %65 ], [ %44, %73 ], [ %44, %84 ], [ %44, %91 ], [ %44, %102 ], [ %115, %110 ], [ %115, %121 ], [ %44, %129 ], [ %44, %140 ], [ %153, %149 ], [ %153, %159 ], [ %44, %167 ], [ %44, %177 ], [ %44, %184 ], [ %44, %194 ], [ %44, %202 ], [ %44, %212 ], [ %44, %220 ], [ %44, %230 ]
  br label %39

73:                                               ; preds = %65
  %74 = getelementptr inbounds %"struct.CFX_CSSData::PropertyValue", %"struct.CFX_CSSData::PropertyValue"* %60, i64 0, i32 0
  %75 = call i8* @_Znwm(i64 24) #15, !noalias !27
  %76 = bitcast i8* %75 to %class.CFX_CSSEnumValue*
  %77 = load i8, i8* %74, align 1, !noalias !27
  call void @_ZN16CFX_CSSEnumValueC1E20CFX_CSSPropertyValue(%class.CFX_CSSEnumValue* nonnull %76, i8 zeroext %77) #14, !noalias !27
  %78 = ptrtoint i8* %75 to i64
  %79 = getelementptr inbounds i8, i8* %75, i64 8
  %80 = bitcast i8* %79 to i64*
  %81 = load i64, i64* %80, align 8, !noalias !27
  %82 = add nsw i64 %81, 1
  store i64 %82, i64* %80, align 8
  %83 = icmp eq i64 %82, 0
  br i1 %83, label %84, label %67

84:                                               ; preds = %73
  %85 = bitcast i8* %75 to %"class.fxcrt::Retainable"*
  %86 = bitcast i8* %75 to void (%"class.fxcrt::Retainable"*)***
  %87 = load void (%"class.fxcrt::Retainable"*)**, void (%"class.fxcrt::Retainable"*)*** %86, align 8
  %88 = getelementptr inbounds void (%"class.fxcrt::Retainable"*)*, void (%"class.fxcrt::Retainable"*)** %87, i64 1
  %89 = load void (%"class.fxcrt::Retainable"*)*, void (%"class.fxcrt::Retainable"*)** %88, align 8
  call void %89(%"class.fxcrt::Retainable"* nonnull %85) #14
  br label %67

90:                                               ; preds = %62, %62, %62
  br i1 %51, label %91, label %67

91:                                               ; preds = %90
  %92 = getelementptr inbounds %"struct.CFX_CSSData::PropertyValue", %"struct.CFX_CSSData::PropertyValue"* %60, i64 0, i32 0
  %93 = call i8* @_Znwm(i64 24) #15, !noalias !30
  %94 = bitcast i8* %93 to %class.CFX_CSSEnumValue*
  %95 = load i8, i8* %92, align 1, !noalias !30
  call void @_ZN16CFX_CSSEnumValueC1E20CFX_CSSPropertyValue(%class.CFX_CSSEnumValue* nonnull %94, i8 zeroext %95) #14, !noalias !30
  %96 = ptrtoint i8* %93 to i64
  %97 = getelementptr inbounds i8, i8* %93, i64 8
  %98 = bitcast i8* %97 to i64*
  %99 = load i64, i64* %98, align 8, !noalias !30
  %100 = add nsw i64 %99, 1
  store i64 %100, i64* %98, align 8
  %101 = icmp eq i64 %100, 0
  br i1 %101, label %102, label %67

102:                                              ; preds = %91
  %103 = bitcast i8* %93 to %"class.fxcrt::Retainable"*
  %104 = bitcast i8* %93 to void (%"class.fxcrt::Retainable"*)***
  %105 = load void (%"class.fxcrt::Retainable"*)**, void (%"class.fxcrt::Retainable"*)*** %104, align 8
  %106 = getelementptr inbounds void (%"class.fxcrt::Retainable"*)*, void (%"class.fxcrt::Retainable"*)** %105, i64 1
  %107 = load void (%"class.fxcrt::Retainable"*)*, void (%"class.fxcrt::Retainable"*)** %106, align 8
  call void %107(%"class.fxcrt::Retainable"* nonnull %103) #14
  br label %67

108:                                              ; preds = %62, %62
  %109 = icmp eq i64 %44, 0
  br i1 %109, label %110, label %67

110:                                              ; preds = %108
  %111 = getelementptr inbounds %"struct.CFX_CSSData::PropertyValue", %"struct.CFX_CSSData::PropertyValue"* %60, i64 0, i32 0
  %112 = call i8* @_Znwm(i64 24) #15, !noalias !33
  %113 = bitcast i8* %112 to %class.CFX_CSSEnumValue*
  %114 = load i8, i8* %111, align 1, !noalias !33
  call void @_ZN16CFX_CSSEnumValueC1E20CFX_CSSPropertyValue(%class.CFX_CSSEnumValue* nonnull %113, i8 zeroext %114) #14, !noalias !33
  %115 = ptrtoint i8* %112 to i64
  %116 = getelementptr inbounds i8, i8* %112, i64 8
  %117 = bitcast i8* %116 to i64*
  %118 = load i64, i64* %117, align 8, !noalias !33
  %119 = add nsw i64 %118, 1
  store i64 %119, i64* %117, align 8
  %120 = icmp eq i64 %119, 0
  br i1 %120, label %121, label %67

121:                                              ; preds = %110
  %122 = bitcast i8* %112 to %"class.fxcrt::Retainable"*
  %123 = bitcast i8* %112 to void (%"class.fxcrt::Retainable"*)***
  %124 = load void (%"class.fxcrt::Retainable"*)**, void (%"class.fxcrt::Retainable"*)*** %123, align 8
  %125 = getelementptr inbounds void (%"class.fxcrt::Retainable"*)*, void (%"class.fxcrt::Retainable"*)** %124, i64 1
  %126 = load void (%"class.fxcrt::Retainable"*)*, void (%"class.fxcrt::Retainable"*)** %125, align 8
  call void %126(%"class.fxcrt::Retainable"* nonnull %122) #14
  br label %67

127:                                              ; preds = %62
  %128 = icmp eq i64 %43, 0
  br i1 %128, label %129, label %67

129:                                              ; preds = %127
  %130 = getelementptr inbounds %"struct.CFX_CSSData::PropertyValue", %"struct.CFX_CSSData::PropertyValue"* %60, i64 0, i32 0
  %131 = call i8* @_Znwm(i64 24) #15, !noalias !36
  %132 = bitcast i8* %131 to %class.CFX_CSSEnumValue*
  %133 = load i8, i8* %130, align 1, !noalias !36
  call void @_ZN16CFX_CSSEnumValueC1E20CFX_CSSPropertyValue(%class.CFX_CSSEnumValue* nonnull %132, i8 zeroext %133) #14, !noalias !36
  %134 = ptrtoint i8* %131 to i64
  %135 = getelementptr inbounds i8, i8* %131, i64 8
  %136 = bitcast i8* %135 to i64*
  %137 = load i64, i64* %136, align 8, !noalias !36
  %138 = add nsw i64 %137, 1
  store i64 %138, i64* %136, align 8
  %139 = icmp eq i64 %138, 0
  br i1 %139, label %140, label %67

140:                                              ; preds = %129
  %141 = bitcast i8* %131 to %"class.fxcrt::Retainable"*
  %142 = bitcast i8* %131 to void (%"class.fxcrt::Retainable"*)***
  %143 = load void (%"class.fxcrt::Retainable"*)**, void (%"class.fxcrt::Retainable"*)*** %142, align 8
  %144 = getelementptr inbounds void (%"class.fxcrt::Retainable"*)*, void (%"class.fxcrt::Retainable"*)** %143, i64 1
  %145 = load void (%"class.fxcrt::Retainable"*)*, void (%"class.fxcrt::Retainable"*)** %144, align 8
  call void %145(%"class.fxcrt::Retainable"* nonnull %141) #14
  br label %67

146:                                              ; preds = %62
  %147 = getelementptr inbounds %"struct.CFX_CSSData::PropertyValue", %"struct.CFX_CSSData::PropertyValue"* %60, i64 0, i32 0
  %148 = icmp eq i64 %44, 0
  br i1 %148, label %149, label %165

149:                                              ; preds = %146
  %150 = call i8* @_Znwm(i64 24) #15, !noalias !39
  %151 = bitcast i8* %150 to %class.CFX_CSSEnumValue*
  %152 = load i8, i8* %147, align 1, !noalias !39
  call void @_ZN16CFX_CSSEnumValueC1E20CFX_CSSPropertyValue(%class.CFX_CSSEnumValue* nonnull %151, i8 zeroext %152) #14, !noalias !39
  %153 = ptrtoint i8* %150 to i64
  %154 = getelementptr inbounds i8, i8* %150, i64 8
  %155 = bitcast i8* %154 to i64*
  %156 = load i64, i64* %155, align 8, !noalias !39
  %157 = add nsw i64 %156, 1
  store i64 %157, i64* %155, align 8
  %158 = icmp eq i64 %157, 0
  br i1 %158, label %159, label %67

159:                                              ; preds = %149
  %160 = bitcast i8* %150 to %"class.fxcrt::Retainable"*
  %161 = bitcast i8* %150 to void (%"class.fxcrt::Retainable"*)***
  %162 = load void (%"class.fxcrt::Retainable"*)**, void (%"class.fxcrt::Retainable"*)*** %161, align 8
  %163 = getelementptr inbounds void (%"class.fxcrt::Retainable"*)*, void (%"class.fxcrt::Retainable"*)** %162, i64 1
  %164 = load void (%"class.fxcrt::Retainable"*)*, void (%"class.fxcrt::Retainable"*)** %163, align 8
  call void %164(%"class.fxcrt::Retainable"* nonnull %160) #14
  br label %67

165:                                              ; preds = %146
  %166 = icmp eq i64 %43, 0
  br i1 %166, label %167, label %183

167:                                              ; preds = %165
  %168 = call i8* @_Znwm(i64 24) #15, !noalias !42
  %169 = bitcast i8* %168 to %class.CFX_CSSEnumValue*
  %170 = load i8, i8* %147, align 1, !noalias !42
  call void @_ZN16CFX_CSSEnumValueC1E20CFX_CSSPropertyValue(%class.CFX_CSSEnumValue* nonnull %169, i8 zeroext %170) #14, !noalias !42
  %171 = ptrtoint i8* %168 to i64
  %172 = getelementptr inbounds i8, i8* %168, i64 8
  %173 = bitcast i8* %172 to i64*
  %174 = load i64, i64* %173, align 8, !noalias !42
  %175 = add nsw i64 %174, 1
  store i64 %175, i64* %173, align 8
  %176 = icmp eq i64 %175, 0
  br i1 %176, label %177, label %67

177:                                              ; preds = %167
  %178 = bitcast i8* %168 to %"class.fxcrt::Retainable"*
  %179 = bitcast i8* %168 to void (%"class.fxcrt::Retainable"*)***
  %180 = load void (%"class.fxcrt::Retainable"*)**, void (%"class.fxcrt::Retainable"*)*** %179, align 8
  %181 = getelementptr inbounds void (%"class.fxcrt::Retainable"*)*, void (%"class.fxcrt::Retainable"*)** %180, i64 1
  %182 = load void (%"class.fxcrt::Retainable"*)*, void (%"class.fxcrt::Retainable"*)** %181, align 8
  call void %182(%"class.fxcrt::Retainable"* nonnull %178) #14
  br label %67

183:                                              ; preds = %165
  br i1 %51, label %184, label %200

184:                                              ; preds = %183
  %185 = call i8* @_Znwm(i64 24) #15, !noalias !45
  %186 = bitcast i8* %185 to %class.CFX_CSSEnumValue*
  %187 = load i8, i8* %147, align 1, !noalias !45
  call void @_ZN16CFX_CSSEnumValueC1E20CFX_CSSPropertyValue(%class.CFX_CSSEnumValue* nonnull %186, i8 zeroext %187) #14, !noalias !45
  %188 = ptrtoint i8* %185 to i64
  %189 = getelementptr inbounds i8, i8* %185, i64 8
  %190 = bitcast i8* %189 to i64*
  %191 = load i64, i64* %190, align 8, !noalias !45
  %192 = add nsw i64 %191, 1
  store i64 %192, i64* %190, align 8
  %193 = icmp eq i64 %192, 0
  br i1 %193, label %194, label %67

194:                                              ; preds = %184
  %195 = bitcast i8* %185 to %"class.fxcrt::Retainable"*
  %196 = bitcast i8* %185 to void (%"class.fxcrt::Retainable"*)***
  %197 = load void (%"class.fxcrt::Retainable"*)**, void (%"class.fxcrt::Retainable"*)*** %196, align 8
  %198 = getelementptr inbounds void (%"class.fxcrt::Retainable"*)*, void (%"class.fxcrt::Retainable"*)** %197, i64 1
  %199 = load void (%"class.fxcrt::Retainable"*)*, void (%"class.fxcrt::Retainable"*)** %198, align 8
  call void %199(%"class.fxcrt::Retainable"* nonnull %195) #14
  br label %67

200:                                              ; preds = %183
  %201 = icmp eq i64 %47, 0
  br i1 %201, label %202, label %218

202:                                              ; preds = %200
  %203 = call i8* @_Znwm(i64 24) #15, !noalias !48
  %204 = bitcast i8* %203 to %class.CFX_CSSEnumValue*
  %205 = load i8, i8* %147, align 1, !noalias !48
  call void @_ZN16CFX_CSSEnumValueC1E20CFX_CSSPropertyValue(%class.CFX_CSSEnumValue* nonnull %204, i8 zeroext %205) #14, !noalias !48
  %206 = ptrtoint i8* %203 to i64
  %207 = getelementptr inbounds i8, i8* %203, i64 8
  %208 = bitcast i8* %207 to i64*
  %209 = load i64, i64* %208, align 8, !noalias !48
  %210 = add nsw i64 %209, 1
  store i64 %210, i64* %208, align 8
  %211 = icmp eq i64 %210, 0
  br i1 %211, label %212, label %67

212:                                              ; preds = %202
  %213 = bitcast i8* %203 to %"class.fxcrt::Retainable"*
  %214 = bitcast i8* %203 to void (%"class.fxcrt::Retainable"*)***
  %215 = load void (%"class.fxcrt::Retainable"*)**, void (%"class.fxcrt::Retainable"*)*** %214, align 8
  %216 = getelementptr inbounds void (%"class.fxcrt::Retainable"*)*, void (%"class.fxcrt::Retainable"*)** %215, i64 1
  %217 = load void (%"class.fxcrt::Retainable"*)*, void (%"class.fxcrt::Retainable"*)** %216, align 8
  call void %217(%"class.fxcrt::Retainable"* nonnull %213) #14
  br label %67

218:                                              ; preds = %200
  %219 = icmp eq i64 %46, 0
  br i1 %219, label %220, label %67

220:                                              ; preds = %218
  %221 = call i8* @_Znwm(i64 24) #15, !noalias !51
  %222 = bitcast i8* %221 to %class.CFX_CSSEnumValue*
  %223 = load i8, i8* %147, align 1, !noalias !51
  call void @_ZN16CFX_CSSEnumValueC1E20CFX_CSSPropertyValue(%class.CFX_CSSEnumValue* nonnull %222, i8 zeroext %223) #14, !noalias !51
  %224 = ptrtoint i8* %221 to i64
  %225 = getelementptr inbounds i8, i8* %221, i64 8
  %226 = bitcast i8* %225 to i64*
  %227 = load i64, i64* %226, align 8, !noalias !51
  %228 = add nsw i64 %227, 1
  store i64 %228, i64* %226, align 8
  %229 = icmp eq i64 %228, 0
  br i1 %229, label %230, label %67

230:                                              ; preds = %220
  %231 = bitcast i8* %221 to %"class.fxcrt::Retainable"*
  %232 = bitcast i8* %221 to void (%"class.fxcrt::Retainable"*)***
  %233 = load void (%"class.fxcrt::Retainable"*)**, void (%"class.fxcrt::Retainable"*)*** %232, align 8
  %234 = getelementptr inbounds void (%"class.fxcrt::Retainable"*)*, void (%"class.fxcrt::Retainable"*)** %233, i64 1
  %235 = load void (%"class.fxcrt::Retainable"*)*, void (%"class.fxcrt::Retainable"*)** %234, align 8
  call void %235(%"class.fxcrt::Retainable"* nonnull %231) #14
  br label %67

236:                                              ; preds = %56, %62
  %237 = icmp eq i64 %47, 0
  br i1 %237, label %282, label %238

238:                                              ; preds = %236
  call void @llvm.lifetime.start.p0i8(i64 8, i8* nonnull %33) #14
  call void @llvm.lifetime.start.p0i8(i64 8, i8* nonnull %34) #14
  %239 = load i32*, i32** %7, align 8
  %240 = load i32, i32* %8, align 4
  %241 = sext i32 %240 to i64
  call void @_ZN5fxcrt10WideStringC1EPKwm(%"class.fxcrt::WideString"* nonnull %14, i32* %239, i64 %241) #14
  %242 = call i8* @_Znwm(i64 32) #15, !noalias !54
  %243 = bitcast i8* %242 to %class.CFX_CSSStringValue*
  call void @_ZN18CFX_CSSStringValueC1ERKN5fxcrt10WideStringE(%class.CFX_CSSStringValue* nonnull %243, %"class.fxcrt::WideString"* nonnull dereferenceable(8) %14) #14, !noalias !54
  %244 = ptrtoint i8* %242 to i64
  %245 = getelementptr inbounds i8, i8* %242, i64 8
  %246 = bitcast i8* %245 to i64*
  %247 = load i64, i64* %246, align 8, !noalias !54
  store i64 %244, i64* %35, align 8
  %248 = add nsw i64 %247, 2
  store i64 %248, i64* %246, align 8
  %249 = load %"class.fxcrt::RetainPtr"*, %"class.fxcrt::RetainPtr"** %24, align 8
  %250 = load %"class.fxcrt::RetainPtr"*, %"class.fxcrt::RetainPtr"** %25, align 8
  %251 = icmp ult %"class.fxcrt::RetainPtr"* %249, %250
  br i1 %251, label %252, label %257

252:                                              ; preds = %238
  %253 = bitcast %"class.fxcrt::RetainPtr"* %249 to i64*
  store i64 0, i64* %253, align 8
  %254 = load i64, i64* %35, align 8
  store i64 %254, i64* %253, align 8
  %255 = getelementptr inbounds %"class.fxcrt::RetainPtr", %"class.fxcrt::RetainPtr"* %249, i64 1
  %256 = ptrtoint %"class.fxcrt::RetainPtr"* %255 to i64
  store i64 %256, i64* %36, align 8
  store %class.CFX_CSSValue* null, %class.CFX_CSSValue** %37, align 8
  br label %271

257:                                              ; preds = %238
  call void @_ZNSt3__16vectorIN5fxcrt9RetainPtrI12CFX_CSSValueEENS_9allocatorIS4_EEE21__push_back_slow_pathIS4_EEvOT_(%"class.std::__1::vector.51"* nonnull %10, %"class.fxcrt::RetainPtr"* nonnull dereferenceable(8) %13) #14
  %258 = load %class.CFX_CSSValue*, %class.CFX_CSSValue** %37, align 8
  %259 = bitcast %class.CFX_CSSValue* %258 to void (%"class.fxcrt::Retainable"*)***
  store %class.CFX_CSSValue* null, %class.CFX_CSSValue** %37, align 8
  %260 = icmp eq %class.CFX_CSSValue* %258, null
  br i1 %260, label %271, label %261

261:                                              ; preds = %257
  %262 = getelementptr inbounds %class.CFX_CSSValue, %class.CFX_CSSValue* %258, i64 0, i32 0, i32 1
  %263 = load i64, i64* %262, align 8
  %264 = add nsw i64 %263, -1
  store i64 %264, i64* %262, align 8
  %265 = icmp eq i64 %264, 0
  br i1 %265, label %266, label %271

266:                                              ; preds = %261
  %267 = getelementptr inbounds %class.CFX_CSSValue, %class.CFX_CSSValue* %258, i64 0, i32 0
  %268 = load void (%"class.fxcrt::Retainable"*)**, void (%"class.fxcrt::Retainable"*)*** %259, align 8
  %269 = getelementptr inbounds void (%"class.fxcrt::Retainable"*)*, void (%"class.fxcrt::Retainable"*)** %268, i64 1
  %270 = load void (%"class.fxcrt::Retainable"*)*, void (%"class.fxcrt::Retainable"*)** %269, align 8
  call void %270(%"class.fxcrt::Retainable"* nonnull %267) #14
  br label %271

271:                                              ; preds = %252, %266, %261, %257
  %272 = load i64, i64* %246, align 8
  %273 = add nsw i64 %272, -1
  store i64 %273, i64* %246, align 8
  %274 = icmp eq i64 %273, 0
  br i1 %274, label %275, label %281

275:                                              ; preds = %271
  %276 = bitcast i8* %242 to %"class.fxcrt::Retainable"*
  %277 = bitcast i8* %242 to void (%"class.fxcrt::Retainable"*)***
  %278 = load void (%"class.fxcrt::Retainable"*)**, void (%"class.fxcrt::Retainable"*)*** %277, align 8
  %279 = getelementptr inbounds void (%"class.fxcrt::Retainable"*)*, void (%"class.fxcrt::Retainable"*)** %278, i64 1
  %280 = load void (%"class.fxcrt::Retainable"*)*, void (%"class.fxcrt::Retainable"*)** %279, align 8
  call void %280(%"class.fxcrt::Retainable"* nonnull %276) #14
  br label %281

281:                                              ; preds = %271, %275
  call void @_ZN5fxcrt10WideStringD1Ev(%"class.fxcrt::WideString"* nonnull %14) #14
  call void @llvm.lifetime.end.p0i8(i64 8, i8* nonnull %34) #14
  call void @llvm.lifetime.end.p0i8(i64 8, i8* nonnull %33) #14
  br label %282

282:                                              ; preds = %236, %281
  store i32 44, i32* %38, align 8
  br label %350

283:                                              ; preds = %54
  %284 = load i32*, i32** %7, align 8
  %285 = load i32, i32* %8, align 4
  call void @llvm.lifetime.start.p0i8(i64 16, i8* nonnull %26)
  call void @llvm.lifetime.start.p0i8(i64 4, i8* nonnull %27) #14
  store i32 0, i32* %5, align 4
  %286 = call float @_Z12FXSYS_wcstofPKwiPi(i32* %284, i32 %285, i32* nonnull %5) #14
  %287 = load i32, i32* %5, align 4
  %288 = icmp sgt i32 %287, 0
  %289 = call float @llvm.fabs.f32(float %286) #13
  %290 = fcmp one float %289, 0x7FF0000000000000
  %291 = and i1 %290, %288
  br i1 %291, label %292, label %368

292:                                              ; preds = %283
  %293 = sub nsw i32 %285, %287
  %294 = sext i32 %287 to i64
  %295 = getelementptr inbounds i32, i32* %284, i64 %294
  %296 = icmp sgt i32 %293, 0
  br i1 %296, label %297, label %308

297:                                              ; preds = %292
  %298 = load i32, i32* %295, align 4
  %299 = icmp eq i32 %298, 37
  br i1 %299, label %308, label %300

300:                                              ; preds = %297
  %301 = icmp eq i32 %293, 2
  br i1 %301, label %302, label %308

302:                                              ; preds = %300
  store i32* %295, i32** %28, align 8
  store i64 2, i64* %29, align 8
  %303 = call %"struct.CFX_CSSData::LengthUnit"* @_ZN11CFX_CSSData19GetLengthUnitByNameEN5fxcrt18StringViewTemplateIwEE(%"class.fxcrt::StringViewTemplate"* nonnull %6) #14
  %304 = icmp eq %"struct.CFX_CSSData::LengthUnit"* %303, null
  br i1 %304, label %308, label %305

305:                                              ; preds = %302
  %306 = getelementptr inbounds %"struct.CFX_CSSData::LengthUnit", %"struct.CFX_CSSData::LengthUnit"* %303, i64 0, i32 1
  %307 = load i32, i32* %306, align 8
  br label %308

308:                                              ; preds = %305, %302, %300, %292, %297
  %309 = phi i32 [ 1, %297 ], [ 0, %292 ], [ 0, %300 ], [ %307, %305 ], [ 0, %302 ]
  call void @llvm.lifetime.end.p0i8(i64 4, i8* nonnull %27) #14
  call void @llvm.lifetime.end.p0i8(i64 16, i8* nonnull %26)
  %310 = load i8, i8* %11, align 1
  %311 = icmp eq i8 %310, 1
  br i1 %311, label %312, label %331

312:                                              ; preds = %308
  %313 = fptosi float %286 to i32
  switch i32 %313, label %331 [
    i32 100, label %314
    i32 200, label %314
    i32 300, label %314
    i32 400, label %314
    i32 500, label %314
    i32 600, label %314
    i32 700, label %314
    i32 800, label %314
    i32 900, label %314
  ]

314:                                              ; preds = %312, %312, %312, %312, %312, %312, %312, %312, %312
  br i1 %51, label %315, label %52

315:                                              ; preds = %314
  %316 = call i8* @_Znwm(i64 32) #15, !noalias !57
  %317 = bitcast i8* %316 to %class.CFX_CSSNumberValue*
  call void @_ZN18CFX_CSSNumberValueC1ENS_4UnitEf(%class.CFX_CSSNumberValue* nonnull %317, i32 0, float %286) #14, !noalias !57
  %318 = ptrtoint i8* %316 to i64
  %319 = getelementptr inbounds i8, i8* %316, i64 8
  %320 = bitcast i8* %319 to i64*
  %321 = load i64, i64* %320, align 8, !noalias !57
  %322 = add nsw i64 %321, 1
  store i64 %322, i64* %320, align 8
  %323 = icmp eq i64 %322, 0
  br i1 %323, label %325, label %324

324:                                              ; preds = %315, %325
  br label %49

325:                                              ; preds = %315
  %326 = bitcast i8* %316 to %"class.fxcrt::Retainable"*
  %327 = bitcast i8* %316 to void (%"class.fxcrt::Retainable"*)***
  %328 = load void (%"class.fxcrt::Retainable"*)**, void (%"class.fxcrt::Retainable"*)*** %327, align 8
  %329 = getelementptr inbounds void (%"class.fxcrt::Retainable"*)*, void (%"class.fxcrt::Retainable"*)** %328, i64 1
  %330 = load void (%"class.fxcrt::Retainable"*)*, void (%"class.fxcrt::Retainable"*)** %329, align 8
  call void %330(%"class.fxcrt::Retainable"* nonnull %326) #14
  br label %324

331:                                              ; preds = %312, %308
  %332 = icmp eq i64 %47, 0
  br i1 %332, label %333, label %348

333:                                              ; preds = %331
  %334 = call i8* @_Znwm(i64 32) #15, !noalias !60
  %335 = bitcast i8* %334 to %class.CFX_CSSNumberValue*
  call void @_ZN18CFX_CSSNumberValueC1ENS_4UnitEf(%class.CFX_CSSNumberValue* nonnull %335, i32 %309, float %286) #14, !noalias !60
  %336 = ptrtoint i8* %334 to i64
  %337 = getelementptr inbounds i8, i8* %334, i64 8
  %338 = bitcast i8* %337 to i64*
  %339 = load i64, i64* %338, align 8, !noalias !60
  %340 = add nsw i64 %339, 1
  store i64 %340, i64* %338, align 8
  %341 = icmp eq i64 %340, 0
  br i1 %341, label %342, label %350

342:                                              ; preds = %333
  %343 = bitcast i8* %334 to %"class.fxcrt::Retainable"*
  %344 = bitcast i8* %334 to void (%"class.fxcrt::Retainable"*)***
  %345 = load void (%"class.fxcrt::Retainable"*)**, void (%"class.fxcrt::Retainable"*)*** %344, align 8
  %346 = getelementptr inbounds void (%"class.fxcrt::Retainable"*)*, void (%"class.fxcrt::Retainable"*)** %345, i64 1
  %347 = load void (%"class.fxcrt::Retainable"*)*, void (%"class.fxcrt::Retainable"*)** %346, align 8
  call void %347(%"class.fxcrt::Retainable"* nonnull %343) #14
  br label %350

348:                                              ; preds = %331
  %349 = icmp eq i64 %46, 0
  br i1 %349, label %353, label %350

350:                                              ; preds = %54, %348, %333, %342, %353, %362, %368, %282
  %351 = phi i64 [ %46, %368 ], [ %46, %282 ], [ %46, %348 ], [ %46, %333 ], [ %46, %342 ], [ %356, %353 ], [ %356, %362 ], [ %46, %54 ]
  %352 = phi i64 [ %47, %368 ], [ %47, %282 ], [ %47, %348 ], [ %336, %333 ], [ %336, %342 ], [ %47, %353 ], [ %47, %362 ], [ %47, %54 ]
  br label %45

353:                                              ; preds = %348
  %354 = call i8* @_Znwm(i64 32) #15, !noalias !63
  %355 = bitcast i8* %354 to %class.CFX_CSSNumberValue*
  call void @_ZN18CFX_CSSNumberValueC1ENS_4UnitEf(%class.CFX_CSSNumberValue* nonnull %355, i32 %309, float %286) #14, !noalias !63
  %356 = ptrtoint i8* %354 to i64
  %357 = getelementptr inbounds i8, i8* %354, i64 8
  %358 = bitcast i8* %357 to i64*
  %359 = load i64, i64* %358, align 8, !noalias !63
  %360 = add nsw i64 %359, 1
  store i64 %360, i64* %358, align 8
  %361 = icmp eq i64 %360, 0
  br i1 %361, label %362, label %350

362:                                              ; preds = %353
  %363 = bitcast i8* %354 to %"class.fxcrt::Retainable"*
  %364 = bitcast i8* %354 to void (%"class.fxcrt::Retainable"*)***
  %365 = load void (%"class.fxcrt::Retainable"*)**, void (%"class.fxcrt::Retainable"*)*** %364, align 8
  %366 = getelementptr inbounds void (%"class.fxcrt::Retainable"*)*, void (%"class.fxcrt::Retainable"*)** %365, i64 1
  %367 = load void (%"class.fxcrt::Retainable"*)*, void (%"class.fxcrt::Retainable"*)** %366, align 8
  call void %367(%"class.fxcrt::Retainable"* nonnull %363) #14
  br label %350

368:                                              ; preds = %283
  call void @llvm.lifetime.end.p0i8(i64 4, i8* nonnull %27) #14
  call void @llvm.lifetime.end.p0i8(i64 16, i8* nonnull %26)
  br label %350

369:                                              ; preds = %52
  %370 = getelementptr inbounds %"class.std::__1::vector.51", %"class.std::__1::vector.51"* %10, i64 0, i32 0, i32 0
  %371 = icmp eq i64 %44, 0
  br i1 %371, label %372, label %387

372:                                              ; preds = %369
  %373 = call i8* @_Znwm(i64 24) #15, !noalias !66
  %374 = bitcast i8* %373 to %class.CFX_CSSEnumValue*
  call void @_ZN16CFX_CSSEnumValueC1E20CFX_CSSPropertyValue(%class.CFX_CSSEnumValue* nonnull %374, i8 zeroext 6) #14, !noalias !66
  %375 = ptrtoint i8* %373 to i64
  %376 = getelementptr inbounds i8, i8* %373, i64 8
  %377 = bitcast i8* %376 to i64*
  %378 = load i64, i64* %377, align 8, !noalias !66
  %379 = add nsw i64 %378, 1
  store i64 %379, i64* %377, align 8
  %380 = icmp eq i64 %379, 0
  br i1 %380, label %381, label %387

381:                                              ; preds = %372
  %382 = bitcast i8* %373 to %"class.fxcrt::Retainable"*
  %383 = bitcast i8* %373 to void (%"class.fxcrt::Retainable"*)***
  %384 = load void (%"class.fxcrt::Retainable"*)**, void (%"class.fxcrt::Retainable"*)*** %383, align 8
  %385 = getelementptr inbounds void (%"class.fxcrt::Retainable"*)*, void (%"class.fxcrt::Retainable"*)** %384, i64 1
  %386 = load void (%"class.fxcrt::Retainable"*)*, void (%"class.fxcrt::Retainable"*)** %385, align 8
  call void %386(%"class.fxcrt::Retainable"* nonnull %382) #14
  br label %387

387:                                              ; preds = %369, %381, %372
  %388 = phi i64 [ %44, %369 ], [ %375, %372 ], [ %375, %381 ]
  %389 = icmp eq i64 %43, 0
  br i1 %389, label %390, label %405

390:                                              ; preds = %387
  %391 = call i8* @_Znwm(i64 24) #15, !noalias !69
  %392 = bitcast i8* %391 to %class.CFX_CSSEnumValue*
  call void @_ZN16CFX_CSSEnumValueC1E20CFX_CSSPropertyValue(%class.CFX_CSSEnumValue* nonnull %392, i8 zeroext 6) #14, !noalias !69
  %393 = ptrtoint i8* %391 to i64
  %394 = getelementptr inbounds i8, i8* %391, i64 8
  %395 = bitcast i8* %394 to i64*
  %396 = load i64, i64* %395, align 8, !noalias !69
  %397 = add nsw i64 %396, 1
  store i64 %397, i64* %395, align 8
  %398 = icmp eq i64 %397, 0
  br i1 %398, label %399, label %405

399:                                              ; preds = %390
  %400 = bitcast i8* %391 to %"class.fxcrt::Retainable"*
  %401 = bitcast i8* %391 to void (%"class.fxcrt::Retainable"*)***
  %402 = load void (%"class.fxcrt::Retainable"*)**, void (%"class.fxcrt::Retainable"*)*** %401, align 8
  %403 = getelementptr inbounds void (%"class.fxcrt::Retainable"*)*, void (%"class.fxcrt::Retainable"*)** %402, i64 1
  %404 = load void (%"class.fxcrt::Retainable"*)*, void (%"class.fxcrt::Retainable"*)** %403, align 8
  call void %404(%"class.fxcrt::Retainable"* nonnull %400) #14
  br label %405

405:                                              ; preds = %387, %399, %390
  %406 = phi i64 [ %43, %387 ], [ %393, %390 ], [ %393, %399 ]
  br i1 %51, label %407, label %422

407:                                              ; preds = %405
  %408 = call i8* @_Znwm(i64 24) #15, !noalias !72
  %409 = bitcast i8* %408 to %class.CFX_CSSEnumValue*
  call void @_ZN16CFX_CSSEnumValueC1E20CFX_CSSPropertyValue(%class.CFX_CSSEnumValue* nonnull %409, i8 zeroext 6) #14, !noalias !72
  %410 = ptrtoint i8* %408 to i64
  %411 = getelementptr inbounds i8, i8* %408, i64 8
  %412 = bitcast i8* %411 to i64*
  %413 = load i64, i64* %412, align 8, !noalias !72
  %414 = add nsw i64 %413, 1
  store i64 %414, i64* %412, align 8
  %415 = icmp eq i64 %414, 0
  br i1 %415, label %416, label %422

416:                                              ; preds = %407
  %417 = bitcast i8* %408 to %"class.fxcrt::Retainable"*
  %418 = bitcast i8* %408 to void (%"class.fxcrt::Retainable"*)***
  %419 = load void (%"class.fxcrt::Retainable"*)**, void (%"class.fxcrt::Retainable"*)*** %418, align 8
  %420 = getelementptr inbounds void (%"class.fxcrt::Retainable"*)*, void (%"class.fxcrt::Retainable"*)** %419, i64 1
  %421 = load void (%"class.fxcrt::Retainable"*)*, void (%"class.fxcrt::Retainable"*)** %420, align 8
  call void %421(%"class.fxcrt::Retainable"* nonnull %417) #14
  br label %422

422:                                              ; preds = %405, %416, %407
  %423 = phi i64 [ %50, %405 ], [ %410, %407 ], [ %410, %416 ]
  %424 = icmp eq i64 %47, 0
  br i1 %424, label %425, label %440

425:                                              ; preds = %422
  %426 = call i8* @_Znwm(i64 24) #15, !noalias !75
  %427 = bitcast i8* %426 to %class.CFX_CSSEnumValue*
  call void @_ZN16CFX_CSSEnumValueC1E20CFX_CSSPropertyValue(%class.CFX_CSSEnumValue* nonnull %427, i8 zeroext 25) #14, !noalias !75
  %428 = ptrtoint i8* %426 to i64
  %429 = getelementptr inbounds i8, i8* %426, i64 8
  %430 = bitcast i8* %429 to i64*
  %431 = load i64, i64* %430, align 8, !noalias !75
  %432 = add nsw i64 %431, 1
  store i64 %432, i64* %430, align 8
  %433 = icmp eq i64 %432, 0
  br i1 %433, label %434, label %440

434:                                              ; preds = %425
  %435 = bitcast i8* %426 to %"class.fxcrt::Retainable"*
  %436 = bitcast i8* %426 to void (%"class.fxcrt::Retainable"*)***
  %437 = load void (%"class.fxcrt::Retainable"*)**, void (%"class.fxcrt::Retainable"*)*** %436, align 8
  %438 = getelementptr inbounds void (%"class.fxcrt::Retainable"*)*, void (%"class.fxcrt::Retainable"*)** %437, i64 1
  %439 = load void (%"class.fxcrt::Retainable"*)*, void (%"class.fxcrt::Retainable"*)** %438, align 8
  call void %439(%"class.fxcrt::Retainable"* nonnull %435) #14
  br label %440

440:                                              ; preds = %422, %434, %425
  %441 = phi i64 [ %47, %422 ], [ %428, %425 ], [ %428, %434 ]
  %442 = icmp eq i64 %46, 0
  br i1 %442, label %443, label %458

443:                                              ; preds = %440
  %444 = call i8* @_Znwm(i64 24) #15, !noalias !78
  %445 = bitcast i8* %444 to %class.CFX_CSSEnumValue*
  call void @_ZN16CFX_CSSEnumValueC1E20CFX_CSSPropertyValue(%class.CFX_CSSEnumValue* nonnull %445, i8 zeroext 6) #14, !noalias !78
  %446 = ptrtoint i8* %444 to i64
  %447 = getelementptr inbounds i8, i8* %444, i64 8
  %448 = bitcast i8* %447 to i64*
  %449 = load i64, i64* %448, align 8, !noalias !78
  %450 = add nsw i64 %449, 1
  store i64 %450, i64* %448, align 8
  %451 = icmp eq i64 %450, 0
  br i1 %451, label %452, label %458

452:                                              ; preds = %443
  %453 = bitcast i8* %444 to %"class.fxcrt::Retainable"*
  %454 = bitcast i8* %444 to void (%"class.fxcrt::Retainable"*)***
  %455 = load void (%"class.fxcrt::Retainable"*)**, void (%"class.fxcrt::Retainable"*)*** %454, align 8
  %456 = getelementptr inbounds void (%"class.fxcrt::Retainable"*)*, void (%"class.fxcrt::Retainable"*)** %455, i64 1
  %457 = load void (%"class.fxcrt::Retainable"*)*, void (%"class.fxcrt::Retainable"*)** %456, align 8
  call void %457(%"class.fxcrt::Retainable"* nonnull %453) #14
  br label %458

458:                                              ; preds = %440, %452, %443
  %459 = phi i64 [ %46, %440 ], [ %446, %443 ], [ %446, %452 ]
  %460 = inttoptr i64 %388 to %class.CFX_CSSValue*
  %461 = bitcast %"class.fxcrt::RetainPtr"* %15 to i64*
  store i64 %388, i64* %461, align 8
  %462 = icmp eq i64 %388, 0
  br i1 %462, label %463, label %465

463:                                              ; preds = %458
  call void @_ZN18CFX_CSSDeclaration17AddPropertyHolderE15CFX_CSSPropertyN5fxcrt9RetainPtrI12CFX_CSSValueEEb(%class.CFX_CSSDeclaration* %0, i8 zeroext 26, %"class.fxcrt::RetainPtr"* nonnull %15, i1 zeroext %3)
  %464 = getelementptr inbounds %"class.fxcrt::RetainPtr", %"class.fxcrt::RetainPtr"* %15, i64 0, i32 0, i32 0, i32 0, i32 0
  store %class.CFX_CSSValue* null, %class.CFX_CSSValue** %464, align 8
  br label %479

465:                                              ; preds = %458
  %466 = getelementptr inbounds %class.CFX_CSSValue, %class.CFX_CSSValue* %460, i64 0, i32 0, i32 1
  %467 = load i64, i64* %466, align 8
  %468 = add nsw i64 %467, 1
  store i64 %468, i64* %466, align 8
  call void @_ZN18CFX_CSSDeclaration17AddPropertyHolderE15CFX_CSSPropertyN5fxcrt9RetainPtrI12CFX_CSSValueEEb(%class.CFX_CSSDeclaration* %0, i8 zeroext 26, %"class.fxcrt::RetainPtr"* nonnull %15, i1 zeroext %3)
  %469 = getelementptr inbounds %"class.fxcrt::RetainPtr", %"class.fxcrt::RetainPtr"* %15, i64 0, i32 0, i32 0, i32 0, i32 0
  store %class.CFX_CSSValue* null, %class.CFX_CSSValue** %469, align 8
  %470 = load i64, i64* %466, align 8
  %471 = add nsw i64 %470, -1
  store i64 %471, i64* %466, align 8
  %472 = icmp eq i64 %471, 0
  br i1 %472, label %473, label %479

473:                                              ; preds = %465
  %474 = getelementptr inbounds %class.CFX_CSSValue, %class.CFX_CSSValue* %460, i64 0, i32 0
  %475 = inttoptr i64 %388 to void (%"class.fxcrt::Retainable"*)***
  %476 = load void (%"class.fxcrt::Retainable"*)**, void (%"class.fxcrt::Retainable"*)*** %475, align 8
  %477 = getelementptr inbounds void (%"class.fxcrt::Retainable"*)*, void (%"class.fxcrt::Retainable"*)** %476, i64 1
  %478 = load void (%"class.fxcrt::Retainable"*)*, void (%"class.fxcrt::Retainable"*)** %477, align 8
  call void %478(%"class.fxcrt::Retainable"* nonnull %474) #14
  br label %479

479:                                              ; preds = %463, %465, %473
  %480 = inttoptr i64 %406 to %class.CFX_CSSValue*
  %481 = bitcast %"class.fxcrt::RetainPtr"* %16 to i64*
  store i64 %406, i64* %481, align 8
  %482 = icmp eq i64 %406, 0
  br i1 %482, label %483, label %485

483:                                              ; preds = %479
  call void @_ZN18CFX_CSSDeclaration17AddPropertyHolderE15CFX_CSSPropertyN5fxcrt9RetainPtrI12CFX_CSSValueEEb(%class.CFX_CSSDeclaration* %0, i8 zeroext 20, %"class.fxcrt::RetainPtr"* nonnull %16, i1 zeroext %3)
  %484 = getelementptr inbounds %"class.fxcrt::RetainPtr", %"class.fxcrt::RetainPtr"* %16, i64 0, i32 0, i32 0, i32 0, i32 0
  store %class.CFX_CSSValue* null, %class.CFX_CSSValue** %484, align 8
  br label %499

485:                                              ; preds = %479
  %486 = getelementptr inbounds %class.CFX_CSSValue, %class.CFX_CSSValue* %480, i64 0, i32 0, i32 1
  %487 = load i64, i64* %486, align 8
  %488 = add nsw i64 %487, 1
  store i64 %488, i64* %486, align 8
  call void @_ZN18CFX_CSSDeclaration17AddPropertyHolderE15CFX_CSSPropertyN5fxcrt9RetainPtrI12CFX_CSSValueEEb(%class.CFX_CSSDeclaration* %0, i8 zeroext 20, %"class.fxcrt::RetainPtr"* nonnull %16, i1 zeroext %3)
  %489 = getelementptr inbounds %"class.fxcrt::RetainPtr", %"class.fxcrt::RetainPtr"* %16, i64 0, i32 0, i32 0, i32 0, i32 0
  store %class.CFX_CSSValue* null, %class.CFX_CSSValue** %489, align 8
  %490 = load i64, i64* %486, align 8
  %491 = add nsw i64 %490, -1
  store i64 %491, i64* %486, align 8
  %492 = icmp eq i64 %491, 0
  br i1 %492, label %493, label %499

493:                                              ; preds = %485
  %494 = getelementptr inbounds %class.CFX_CSSValue, %class.CFX_CSSValue* %480, i64 0, i32 0
  %495 = inttoptr i64 %406 to void (%"class.fxcrt::Retainable"*)***
  %496 = load void (%"class.fxcrt::Retainable"*)**, void (%"class.fxcrt::Retainable"*)*** %495, align 8
  %497 = getelementptr inbounds void (%"class.fxcrt::Retainable"*)*, void (%"class.fxcrt::Retainable"*)** %496, i64 1
  %498 = load void (%"class.fxcrt::Retainable"*)*, void (%"class.fxcrt::Retainable"*)** %497, align 8
  call void %498(%"class.fxcrt::Retainable"* nonnull %494) #14
  br label %499

499:                                              ; preds = %483, %485, %493
  %500 = inttoptr i64 %423 to %class.CFX_CSSValue*
  %501 = bitcast %"class.fxcrt::RetainPtr"* %17 to i64*
  store i64 %423, i64* %501, align 8
  %502 = icmp eq i64 %423, 0
  br i1 %502, label %503, label %505

503:                                              ; preds = %499
  call void @_ZN18CFX_CSSDeclaration17AddPropertyHolderE15CFX_CSSPropertyN5fxcrt9RetainPtrI12CFX_CSSValueEEb(%class.CFX_CSSDeclaration* %0, i8 zeroext 13, %"class.fxcrt::RetainPtr"* nonnull %17, i1 zeroext %3)
  %504 = getelementptr inbounds %"class.fxcrt::RetainPtr", %"class.fxcrt::RetainPtr"* %17, i64 0, i32 0, i32 0, i32 0, i32 0
  store %class.CFX_CSSValue* null, %class.CFX_CSSValue** %504, align 8
  br label %519

505:                                              ; preds = %499
  %506 = getelementptr inbounds %class.CFX_CSSValue, %class.CFX_CSSValue* %500, i64 0, i32 0, i32 1
  %507 = load i64, i64* %506, align 8
  %508 = add nsw i64 %507, 1
  store i64 %508, i64* %506, align 8
  call void @_ZN18CFX_CSSDeclaration17AddPropertyHolderE15CFX_CSSPropertyN5fxcrt9RetainPtrI12CFX_CSSValueEEb(%class.CFX_CSSDeclaration* %0, i8 zeroext 13, %"class.fxcrt::RetainPtr"* nonnull %17, i1 zeroext %3)
  %509 = getelementptr inbounds %"class.fxcrt::RetainPtr", %"class.fxcrt::RetainPtr"* %17, i64 0, i32 0, i32 0, i32 0, i32 0
  store %class.CFX_CSSValue* null, %class.CFX_CSSValue** %509, align 8
  %510 = load i64, i64* %506, align 8
  %511 = add nsw i64 %510, -1
  store i64 %511, i64* %506, align 8
  %512 = icmp eq i64 %511, 0
  br i1 %512, label %513, label %519

513:                                              ; preds = %505
  %514 = getelementptr inbounds %class.CFX_CSSValue, %class.CFX_CSSValue* %500, i64 0, i32 0
  %515 = inttoptr i64 %423 to void (%"class.fxcrt::Retainable"*)***
  %516 = load void (%"class.fxcrt::Retainable"*)**, void (%"class.fxcrt::Retainable"*)*** %515, align 8
  %517 = getelementptr inbounds void (%"class.fxcrt::Retainable"*)*, void (%"class.fxcrt::Retainable"*)** %516, i64 1
  %518 = load void (%"class.fxcrt::Retainable"*)*, void (%"class.fxcrt::Retainable"*)** %517, align 8
  call void %518(%"class.fxcrt::Retainable"* nonnull %514) #14
  br label %519

519:                                              ; preds = %503, %505, %513
  %520 = inttoptr i64 %441 to %class.CFX_CSSValue*
  %521 = bitcast %"class.fxcrt::RetainPtr"* %18 to i64*
  store i64 %441, i64* %521, align 8
  %522 = icmp eq i64 %441, 0
  br i1 %522, label %523, label %525

523:                                              ; preds = %519
  call void @_ZN18CFX_CSSDeclaration17AddPropertyHolderE15CFX_CSSPropertyN5fxcrt9RetainPtrI12CFX_CSSValueEEb(%class.CFX_CSSDeclaration* %0, i8 zeroext 24, %"class.fxcrt::RetainPtr"* nonnull %18, i1 zeroext %3)
  %524 = getelementptr inbounds %"class.fxcrt::RetainPtr", %"class.fxcrt::RetainPtr"* %18, i64 0, i32 0, i32 0, i32 0, i32 0
  store %class.CFX_CSSValue* null, %class.CFX_CSSValue** %524, align 8
  br label %539

525:                                              ; preds = %519
  %526 = getelementptr inbounds %class.CFX_CSSValue, %class.CFX_CSSValue* %520, i64 0, i32 0, i32 1
  %527 = load i64, i64* %526, align 8
  %528 = add nsw i64 %527, 1
  store i64 %528, i64* %526, align 8
  call void @_ZN18CFX_CSSDeclaration17AddPropertyHolderE15CFX_CSSPropertyN5fxcrt9RetainPtrI12CFX_CSSValueEEb(%class.CFX_CSSDeclaration* %0, i8 zeroext 24, %"class.fxcrt::RetainPtr"* nonnull %18, i1 zeroext %3)
  %529 = getelementptr inbounds %"class.fxcrt::RetainPtr", %"class.fxcrt::RetainPtr"* %18, i64 0, i32 0, i32 0, i32 0, i32 0
  store %class.CFX_CSSValue* null, %class.CFX_CSSValue** %529, align 8
  %530 = load i64, i64* %526, align 8
  %531 = add nsw i64 %530, -1
  store i64 %531, i64* %526, align 8
  %532 = icmp eq i64 %531, 0
  br i1 %532, label %533, label %539

533:                                              ; preds = %525
  %534 = getelementptr inbounds %class.CFX_CSSValue, %class.CFX_CSSValue* %520, i64 0, i32 0
  %535 = inttoptr i64 %441 to void (%"class.fxcrt::Retainable"*)***
  %536 = load void (%"class.fxcrt::Retainable"*)**, void (%"class.fxcrt::Retainable"*)*** %535, align 8
  %537 = getelementptr inbounds void (%"class.fxcrt::Retainable"*)*, void (%"class.fxcrt::Retainable"*)** %536, i64 1
  %538 = load void (%"class.fxcrt::Retainable"*)*, void (%"class.fxcrt::Retainable"*)** %537, align 8
  call void %538(%"class.fxcrt::Retainable"* nonnull %534) #14
  br label %539

539:                                              ; preds = %523, %525, %533
  %540 = inttoptr i64 %459 to %class.CFX_CSSValue*
  %541 = bitcast %"class.fxcrt::RetainPtr"* %19 to i64*
  store i64 %459, i64* %541, align 8
  %542 = icmp eq i64 %459, 0
  br i1 %542, label %543, label %545

543:                                              ; preds = %539
  call void @_ZN18CFX_CSSDeclaration17AddPropertyHolderE15CFX_CSSPropertyN5fxcrt9RetainPtrI12CFX_CSSValueEEb(%class.CFX_CSSDeclaration* %0, i8 zeroext 28, %"class.fxcrt::RetainPtr"* nonnull %19, i1 zeroext %3)
  %544 = getelementptr inbounds %"class.fxcrt::RetainPtr", %"class.fxcrt::RetainPtr"* %19, i64 0, i32 0, i32 0, i32 0, i32 0
  store %class.CFX_CSSValue* null, %class.CFX_CSSValue** %544, align 8
  br label %559

545:                                              ; preds = %539
  %546 = getelementptr inbounds %class.CFX_CSSValue, %class.CFX_CSSValue* %540, i64 0, i32 0, i32 1
  %547 = load i64, i64* %546, align 8
  %548 = add nsw i64 %547, 1
  store i64 %548, i64* %546, align 8
  call void @_ZN18CFX_CSSDeclaration17AddPropertyHolderE15CFX_CSSPropertyN5fxcrt9RetainPtrI12CFX_CSSValueEEb(%class.CFX_CSSDeclaration* %0, i8 zeroext 28, %"class.fxcrt::RetainPtr"* nonnull %19, i1 zeroext %3)
  %549 = getelementptr inbounds %"class.fxcrt::RetainPtr", %"class.fxcrt::RetainPtr"* %19, i64 0, i32 0, i32 0, i32 0, i32 0
  store %class.CFX_CSSValue* null, %class.CFX_CSSValue** %549, align 8
  %550 = load i64, i64* %546, align 8
  %551 = add nsw i64 %550, -1
  store i64 %551, i64* %546, align 8
  %552 = icmp eq i64 %551, 0
  br i1 %552, label %553, label %559

553:                                              ; preds = %545
  %554 = getelementptr inbounds %class.CFX_CSSValue, %class.CFX_CSSValue* %540, i64 0, i32 0
  %555 = inttoptr i64 %459 to void (%"class.fxcrt::Retainable"*)***
  %556 = load void (%"class.fxcrt::Retainable"*)**, void (%"class.fxcrt::Retainable"*)*** %555, align 8
  %557 = getelementptr inbounds void (%"class.fxcrt::Retainable"*)*, void (%"class.fxcrt::Retainable"*)** %556, i64 1
  %558 = load void (%"class.fxcrt::Retainable"*)*, void (%"class.fxcrt::Retainable"*)** %557, align 8
  call void %558(%"class.fxcrt::Retainable"* nonnull %554) #14
  br label %559

559:                                              ; preds = %543, %545, %553
  %560 = load %"class.fxcrt::RetainPtr"*, %"class.fxcrt::RetainPtr"** %370, align 8
  %561 = load %"class.fxcrt::RetainPtr"*, %"class.fxcrt::RetainPtr"** %24, align 8
  %562 = icmp eq %"class.fxcrt::RetainPtr"* %560, %561
  br i1 %562, label %603, label %563

563:                                              ; preds = %559
  %564 = bitcast %"class.fxcrt::RetainPtr.58"* %20 to i8*
  call void @llvm.lifetime.start.p0i8(i64 8, i8* nonnull %564) #14
  %565 = getelementptr inbounds %"class.fxcrt::RetainPtr.58", %"class.fxcrt::RetainPtr.58"* %20, i64 0, i32 0, i32 0, i32 0, i32 0
  store %class.CFX_CSSValueList* inttoptr (i64 -6148914691236517206 to %class.CFX_CSSValueList*), %class.CFX_CSSValueList** %565, align 8
  call void @_ZN6pdfium10MakeRetainI16CFX_CSSValueListJNSt3__16vectorIN5fxcrt9RetainPtrI12CFX_CSSValueEENS2_9allocatorIS7_EEEEEEENS5_IT_EEDpOT0_(%"class.fxcrt::RetainPtr.58"* nonnull sret %20, %"class.std::__1::vector.51"* nonnull dereferenceable(24) %10)
  %566 = bitcast %"class.fxcrt::RetainPtr.58"* %20 to %class.CFX_CSSValue**
  %567 = load %class.CFX_CSSValue*, %class.CFX_CSSValue** %566, align 8
  %568 = ptrtoint %class.CFX_CSSValue* %567 to i64
  %569 = bitcast %"class.fxcrt::RetainPtr"* %21 to i64*
  store i64 %568, i64* %569, align 8
  %570 = icmp eq %class.CFX_CSSValue* %567, null
  br i1 %570, label %571, label %573

571:                                              ; preds = %563
  call void @_ZN18CFX_CSSDeclaration17AddPropertyHolderE15CFX_CSSPropertyN5fxcrt9RetainPtrI12CFX_CSSValueEEb(%class.CFX_CSSDeclaration* %0, i8 zeroext 12, %"class.fxcrt::RetainPtr"* nonnull %21, i1 zeroext %3)
  %572 = getelementptr inbounds %"class.fxcrt::RetainPtr", %"class.fxcrt::RetainPtr"* %21, i64 0, i32 0, i32 0, i32 0, i32 0
  store %class.CFX_CSSValue* null, %class.CFX_CSSValue** %572, align 8
  br label %587

573:                                              ; preds = %563
  %574 = getelementptr inbounds %class.CFX_CSSValue, %class.CFX_CSSValue* %567, i64 0, i32 0, i32 1
  %575 = load i64, i64* %574, align 8
  %576 = add nsw i64 %575, 1
  store i64 %576, i64* %574, align 8
  call void @_ZN18CFX_CSSDeclaration17AddPropertyHolderE15CFX_CSSPropertyN5fxcrt9RetainPtrI12CFX_CSSValueEEb(%class.CFX_CSSDeclaration* %0, i8 zeroext 12, %"class.fxcrt::RetainPtr"* nonnull %21, i1 zeroext %3)
  %577 = getelementptr inbounds %"class.fxcrt::RetainPtr", %"class.fxcrt::RetainPtr"* %21, i64 0, i32 0, i32 0, i32 0, i32 0
  store %class.CFX_CSSValue* null, %class.CFX_CSSValue** %577, align 8
  %578 = load i64, i64* %574, align 8
  %579 = add nsw i64 %578, -1
  store i64 %579, i64* %574, align 8
  %580 = icmp eq i64 %579, 0
  br i1 %580, label %581, label %587

581:                                              ; preds = %573
  %582 = getelementptr inbounds %class.CFX_CSSValue, %class.CFX_CSSValue* %567, i64 0, i32 0
  %583 = bitcast %class.CFX_CSSValue* %567 to void (%"class.fxcrt::Retainable"*)***
  %584 = load void (%"class.fxcrt::Retainable"*)**, void (%"class.fxcrt::Retainable"*)*** %583, align 8
  %585 = getelementptr inbounds void (%"class.fxcrt::Retainable"*)*, void (%"class.fxcrt::Retainable"*)** %584, i64 1
  %586 = load void (%"class.fxcrt::Retainable"*)*, void (%"class.fxcrt::Retainable"*)** %585, align 8
  call void %586(%"class.fxcrt::Retainable"* nonnull %582) #14
  br label %587

587:                                              ; preds = %571, %573, %581
  %588 = load %class.CFX_CSSValueList*, %class.CFX_CSSValueList** %565, align 8
  store %class.CFX_CSSValueList* null, %class.CFX_CSSValueList** %565, align 8
  %589 = icmp eq %class.CFX_CSSValueList* %588, null
  br i1 %589, label %601, label %590

590:                                              ; preds = %587
  %591 = getelementptr inbounds %class.CFX_CSSValueList, %class.CFX_CSSValueList* %588, i64 0, i32 0, i32 0, i32 1
  %592 = load i64, i64* %591, align 8
  %593 = add nsw i64 %592, -1
  store i64 %593, i64* %591, align 8
  %594 = icmp eq i64 %593, 0
  br i1 %594, label %595, label %601

595:                                              ; preds = %590
  %596 = getelementptr inbounds %class.CFX_CSSValueList, %class.CFX_CSSValueList* %588, i64 0, i32 0, i32 0
  %597 = bitcast %class.CFX_CSSValueList* %588 to void (%"class.fxcrt::Retainable"*)***
  %598 = load void (%"class.fxcrt::Retainable"*)**, void (%"class.fxcrt::Retainable"*)*** %597, align 8
  %599 = getelementptr inbounds void (%"class.fxcrt::Retainable"*)*, void (%"class.fxcrt::Retainable"*)** %598, i64 1
  %600 = load void (%"class.fxcrt::Retainable"*)*, void (%"class.fxcrt::Retainable"*)** %599, align 8
  call void %600(%"class.fxcrt::Retainable"* nonnull %596) #14
  br label %601

601:                                              ; preds = %587, %590, %595
  call void @llvm.lifetime.end.p0i8(i64 8, i8* nonnull %564) #14
  %602 = load %"class.fxcrt::RetainPtr"*, %"class.fxcrt::RetainPtr"** %370, align 8
  br label %603

603:                                              ; preds = %601, %559
  %604 = phi %"class.fxcrt::RetainPtr"* [ %602, %601 ], [ %560, %559 ]
  call void @llvm.lifetime.end.p0i8(i64 1, i8* nonnull %11) #14
  %605 = icmp eq %"class.fxcrt::RetainPtr"* %604, null
  br i1 %605, label %634, label %606

606:                                              ; preds = %603
  %607 = bitcast %"class.fxcrt::RetainPtr"* %604 to i8*
  %608 = load %"class.fxcrt::RetainPtr"*, %"class.fxcrt::RetainPtr"** %24, align 8
  %609 = icmp eq %"class.fxcrt::RetainPtr"* %608, %604
  br i1 %609, label %632, label %610

610:                                              ; preds = %606, %627
  %611 = phi %"class.fxcrt::RetainPtr"* [ %612, %627 ], [ %608, %606 ]
  %612 = getelementptr inbounds %"class.fxcrt::RetainPtr", %"class.fxcrt::RetainPtr"* %611, i64 -1
  %613 = getelementptr inbounds %"class.fxcrt::RetainPtr", %"class.fxcrt::RetainPtr"* %612, i64 0, i32 0, i32 0, i32 0, i32 0
  %614 = load %class.CFX_CSSValue*, %class.CFX_CSSValue** %613, align 8
  store %class.CFX_CSSValue* null, %class.CFX_CSSValue** %613, align 8
  %615 = icmp eq %class.CFX_CSSValue* %614, null
  br i1 %615, label %627, label %616

616:                                              ; preds = %610
  %617 = getelementptr inbounds %class.CFX_CSSValue, %class.CFX_CSSValue* %614, i64 0, i32 0, i32 1
  %618 = load i64, i64* %617, align 8
  %619 = add nsw i64 %618, -1
  store i64 %619, i64* %617, align 8
  %620 = icmp eq i64 %619, 0
  br i1 %620, label %621, label %627

621:                                              ; preds = %616
  %622 = getelementptr inbounds %class.CFX_CSSValue, %class.CFX_CSSValue* %614, i64 0, i32 0
  %623 = bitcast %class.CFX_CSSValue* %614 to void (%"class.fxcrt::Retainable"*)***
  %624 = load void (%"class.fxcrt::Retainable"*)**, void (%"class.fxcrt::Retainable"*)*** %623, align 8
  %625 = getelementptr inbounds void (%"class.fxcrt::Retainable"*)*, void (%"class.fxcrt::Retainable"*)** %624, i64 1
  %626 = load void (%"class.fxcrt::Retainable"*)*, void (%"class.fxcrt::Retainable"*)** %625, align 8
  call void %626(%"class.fxcrt::Retainable"* nonnull %622) #14
  br label %627

627:                                              ; preds = %621, %616, %610
  %628 = icmp eq %"class.fxcrt::RetainPtr"* %612, %604
  br i1 %628, label %629, label %610

629:                                              ; preds = %627
  %630 = bitcast %"class.std::__1::vector.51"* %10 to i8**
  %631 = load i8*, i8** %630, align 8
  br label %632

632:                                              ; preds = %629, %606
  %633 = phi i8* [ %631, %629 ], [ %607, %606 ]
  store %"class.fxcrt::RetainPtr"* %604, %"class.fxcrt::RetainPtr"** %24, align 8
  call void @_ZdlPv(i8* %633) #15
  br label %634

634:                                              ; preds = %603, %632
  call void @llvm.lifetime.end.p0i8(i64 24, i8* nonnull %23) #14
  br i1 %542, label %646, label %635

635:                                              ; preds = %634
  %636 = getelementptr inbounds %class.CFX_CSSValue, %class.CFX_CSSValue* %540, i64 0, i32 0, i32 1
  %637 = load i64, i64* %636, align 8
  %638 = add nsw i64 %637, -1
  store i64 %638, i64* %636, align 8
  %639 = icmp eq i64 %638, 0
  br i1 %639, label %640, label %646

640:                                              ; preds = %635
  %641 = getelementptr inbounds %class.CFX_CSSValue, %class.CFX_CSSValue* %540, i64 0, i32 0
  %642 = inttoptr i64 %459 to void (%"class.fxcrt::Retainable"*)***
  %643 = load void (%"class.fxcrt::Retainable"*)**, void (%"class.fxcrt::Retainable"*)*** %642, align 8
  %644 = getelementptr inbounds void (%"class.fxcrt::Retainable"*)*, void (%"class.fxcrt::Retainable"*)** %643, i64 1
  %645 = load void (%"class.fxcrt::Retainable"*)*, void (%"class.fxcrt::Retainable"*)** %644, align 8
  call void %645(%"class.fxcrt::Retainable"* nonnull %641) #14
  br label %646

646:                                              ; preds = %634, %635, %640
  br i1 %522, label %658, label %647

647:                                              ; preds = %646
  %648 = getelementptr inbounds %class.CFX_CSSValue, %class.CFX_CSSValue* %520, i64 0, i32 0, i32 1
  %649 = load i64, i64* %648, align 8
  %650 = add nsw i64 %649, -1
  store i64 %650, i64* %648, align 8
  %651 = icmp eq i64 %650, 0
  br i1 %651, label %652, label %658

652:                                              ; preds = %647
  %653 = getelementptr inbounds %class.CFX_CSSValue, %class.CFX_CSSValue* %520, i64 0, i32 0
  %654 = inttoptr i64 %441 to void (%"class.fxcrt::Retainable"*)***
  %655 = load void (%"class.fxcrt::Retainable"*)**, void (%"class.fxcrt::Retainable"*)*** %654, align 8
  %656 = getelementptr inbounds void (%"class.fxcrt::Retainable"*)*, void (%"class.fxcrt::Retainable"*)** %655, i64 1
  %657 = load void (%"class.fxcrt::Retainable"*)*, void (%"class.fxcrt::Retainable"*)** %656, align 8
  call void %657(%"class.fxcrt::Retainable"* nonnull %653) #14
  br label %658

658:                                              ; preds = %646, %647, %652
  br i1 %502, label %670, label %659

659:                                              ; preds = %658
  %660 = getelementptr inbounds %class.CFX_CSSValue, %class.CFX_CSSValue* %500, i64 0, i32 0, i32 1
  %661 = load i64, i64* %660, align 8
  %662 = add nsw i64 %661, -1
  store i64 %662, i64* %660, align 8
  %663 = icmp eq i64 %662, 0
  br i1 %663, label %664, label %670

664:                                              ; preds = %659
  %665 = getelementptr inbounds %class.CFX_CSSValue, %class.CFX_CSSValue* %500, i64 0, i32 0
  %666 = inttoptr i64 %423 to void (%"class.fxcrt::Retainable"*)***
  %667 = load void (%"class.fxcrt::Retainable"*)**, void (%"class.fxcrt::Retainable"*)*** %666, align 8
  %668 = getelementptr inbounds void (%"class.fxcrt::Retainable"*)*, void (%"class.fxcrt::Retainable"*)** %667, i64 1
  %669 = load void (%"class.fxcrt::Retainable"*)*, void (%"class.fxcrt::Retainable"*)** %668, align 8
  call void %669(%"class.fxcrt::Retainable"* nonnull %665) #14
  br label %670

670:                                              ; preds = %658, %659, %664
  br i1 %482, label %682, label %671

671:                                              ; preds = %670
  %672 = getelementptr inbounds %class.CFX_CSSValue, %class.CFX_CSSValue* %480, i64 0, i32 0, i32 1
  %673 = load i64, i64* %672, align 8
  %674 = add nsw i64 %673, -1
  store i64 %674, i64* %672, align 8
  %675 = icmp eq i64 %674, 0
  br i1 %675, label %676, label %682

676:                                              ; preds = %671
  %677 = getelementptr inbounds %class.CFX_CSSValue, %class.CFX_CSSValue* %480, i64 0, i32 0
  %678 = inttoptr i64 %406 to void (%"class.fxcrt::Retainable"*)***
  %679 = load void (%"class.fxcrt::Retainable"*)**, void (%"class.fxcrt::Retainable"*)*** %678, align 8
  %680 = getelementptr inbounds void (%"class.fxcrt::Retainable"*)*, void (%"class.fxcrt::Retainable"*)** %679, i64 1
  %681 = load void (%"class.fxcrt::Retainable"*)*, void (%"class.fxcrt::Retainable"*)** %680, align 8
  call void %681(%"class.fxcrt::Retainable"* nonnull %677) #14
  br label %682

682:                                              ; preds = %670, %671, %676
  br i1 %462, label %694, label %683

683:                                              ; preds = %682
  %684 = getelementptr inbounds %class.CFX_CSSValue, %class.CFX_CSSValue* %460, i64 0, i32 0, i32 1
  %685 = load i64, i64* %684, align 8
  %686 = add nsw i64 %685, -1
  store i64 %686, i64* %684, align 8
  %687 = icmp eq i64 %686, 0
  br i1 %687, label %688, label %694

688:                                              ; preds = %683
  %689 = getelementptr inbounds %class.CFX_CSSValue, %class.CFX_CSSValue* %460, i64 0, i32 0
  %690 = inttoptr i64 %388 to void (%"class.fxcrt::Retainable"*)***
  %691 = load void (%"class.fxcrt::Retainable"*)**, void (%"class.fxcrt::Retainable"*)*** %690, align 8
  %692 = getelementptr inbounds void (%"class.fxcrt::Retainable"*)*, void (%"class.fxcrt::Retainable"*)** %691, i64 1
  %693 = load void (%"class.fxcrt::Retainable"*)*, void (%"class.fxcrt::Retainable"*)** %692, align 8
  call void %693(%"class.fxcrt::Retainable"* nonnull %689) #14
  br label %694

694:                                              ; preds = %682, %683, %688
  call void @llvm.lifetime.end.p0i8(i64 24, i8* nonnull %22) #14
  ret void
}

; Function Attrs: nounwind ssp uwtable
define hidden zeroext i1 @_ZNK18CFX_CSSDeclaration19ParseBorderPropertyEPKwiRN5fxcrt9RetainPtrI12CFX_CSSValueEE(%class.CFX_CSSDeclaration* nocapture readnone, i32*, i32, %"class.fxcrt::RetainPtr"* nocapture dereferenceable(8)) local_unnamed_addr #2 align 2 {
  %5 = alloca i32, align 4
  %6 = alloca %"class.fxcrt::StringViewTemplate", align 8
  %7 = alloca i32*, align 8
  %8 = alloca i32, align 4
  %9 = alloca i8, align 1
  %10 = alloca %class.CFX_CSSValueListParser, align 8
  %11 = alloca %"class.fxcrt::StringViewTemplate", align 8
  %12 = alloca %"class.fxcrt::StringViewTemplate", align 8
  store i32* %1, i32** %7, align 8
  store i32 %2, i32* %8, align 4
  %13 = getelementptr inbounds %"class.fxcrt::RetainPtr", %"class.fxcrt::RetainPtr"* %3, i64 0, i32 0, i32 0, i32 0, i32 0
  %14 = load %class.CFX_CSSValue*, %class.CFX_CSSValue** %13, align 8
  store %class.CFX_CSSValue* null, %class.CFX_CSSValue** %13, align 8
  %15 = icmp eq %class.CFX_CSSValue* %14, null
  br i1 %15, label %27, label %16

16:                                               ; preds = %4
  %17 = getelementptr inbounds %class.CFX_CSSValue, %class.CFX_CSSValue* %14, i64 0, i32 0, i32 1
  %18 = load i64, i64* %17, align 8
  %19 = add nsw i64 %18, -1
  store i64 %19, i64* %17, align 8
  %20 = icmp eq i64 %19, 0
  br i1 %20, label %21, label %27

21:                                               ; preds = %16
  %22 = getelementptr inbounds %class.CFX_CSSValue, %class.CFX_CSSValue* %14, i64 0, i32 0
  %23 = bitcast %class.CFX_CSSValue* %14 to void (%"class.fxcrt::Retainable"*)***
  %24 = load void (%"class.fxcrt::Retainable"*)**, void (%"class.fxcrt::Retainable"*)*** %23, align 8
  %25 = getelementptr inbounds void (%"class.fxcrt::Retainable"*)*, void (%"class.fxcrt::Retainable"*)** %24, i64 1
  %26 = load void (%"class.fxcrt::Retainable"*)*, void (%"class.fxcrt::Retainable"*)** %25, align 8
  tail call void %26(%"class.fxcrt::Retainable"* nonnull %22) #14
  br label %27

27:                                               ; preds = %4, %16, %21
  call void @llvm.lifetime.start.p0i8(i64 1, i8* nonnull %9) #14
  store i8 -86, i8* %9, align 1
  %28 = bitcast %class.CFX_CSSValueListParser* %10 to i8*
  call void @llvm.lifetime.start.p0i8(i64 24, i8* nonnull %28) #14
  call void @llvm.memset.p0i8.i64(i8* nonnull align 8 %28, i8 -86, i64 24, i1 false)
  call void @_ZN22CFX_CSSValueListParserC1EPKwiw(%class.CFX_CSSValueListParser* nonnull %10, i32* %1, i32 %2, i32 signext 32) #14
  %29 = call zeroext i1 @_ZN22CFX_CSSValueListParser9NextValueEPN12CFX_CSSValue13PrimitiveTypeEPPKwPi(%class.CFX_CSSValueListParser* nonnull %10, i8* nonnull %9, i32** nonnull %7, i32* nonnull %8) #14
  br i1 %29, label %30, label %156

30:                                               ; preds = %27
  %31 = bitcast i32** %7 to i64*
  %32 = bitcast %"class.fxcrt::StringViewTemplate"* %11 to i64*
  %33 = getelementptr inbounds %"class.fxcrt::StringViewTemplate", %"class.fxcrt::StringViewTemplate"* %11, i64 0, i32 0, i32 1
  %34 = bitcast %"class.fxcrt::StringViewTemplate"* %12 to i64*
  %35 = getelementptr inbounds %"class.fxcrt::StringViewTemplate", %"class.fxcrt::StringViewTemplate"* %12, i64 0, i32 0, i32 1
  %36 = bitcast %"class.fxcrt::RetainPtr"* %3 to i64*
  %37 = bitcast %"class.fxcrt::StringViewTemplate"* %6 to i8*
  %38 = bitcast i32* %5 to i8*
  %39 = getelementptr inbounds %"class.fxcrt::StringViewTemplate", %"class.fxcrt::StringViewTemplate"* %6, i64 0, i32 0, i32 0, i32 0
  %40 = getelementptr inbounds %"class.fxcrt::StringViewTemplate", %"class.fxcrt::StringViewTemplate"* %6, i64 0, i32 0, i32 1
  br label %41

41:                                               ; preds = %30, %154
  %42 = load i8, i8* %9, align 1
  switch i8 %42, label %154 [
    i8 1, label %43
    i8 2, label %104
  ]

43:                                               ; preds = %41
  %44 = load %class.CFX_CSSValue*, %class.CFX_CSSValue** %13, align 8
  %45 = icmp eq %class.CFX_CSSValue* %44, null
  br i1 %45, label %46, label %154

46:                                               ; preds = %43
  %47 = load i32*, i32** %7, align 8
  %48 = load i32, i32* %8, align 4
  call void @llvm.lifetime.start.p0i8(i64 16, i8* nonnull %37)
  call void @llvm.lifetime.start.p0i8(i64 4, i8* nonnull %38) #14
  store i32 0, i32* %5, align 4
  %49 = call float @_Z12FXSYS_wcstofPKwiPi(i32* %47, i32 %48, i32* nonnull %5) #14
  %50 = load i32, i32* %5, align 4
  %51 = icmp sgt i32 %50, 0
  %52 = call float @llvm.fabs.f32(float %49) #13
  %53 = fcmp one float %52, 0x7FF0000000000000
  %54 = and i1 %53, %51
  br i1 %54, label %55, label %71

55:                                               ; preds = %46
  %56 = sub nsw i32 %48, %50
  %57 = sext i32 %50 to i64
  %58 = getelementptr inbounds i32, i32* %47, i64 %57
  %59 = icmp sgt i32 %56, 0
  br i1 %59, label %60, label %72

60:                                               ; preds = %55
  %61 = load i32, i32* %58, align 4
  %62 = icmp eq i32 %61, 37
  br i1 %62, label %72, label %63

63:                                               ; preds = %60
  %64 = icmp eq i32 %56, 2
  br i1 %64, label %65, label %72

65:                                               ; preds = %63
  store i32* %58, i32** %39, align 8
  store i64 2, i64* %40, align 8
  %66 = call %"struct.CFX_CSSData::LengthUnit"* @_ZN11CFX_CSSData19GetLengthUnitByNameEN5fxcrt18StringViewTemplateIwEE(%"class.fxcrt::StringViewTemplate"* nonnull %6) #14
  %67 = icmp eq %"struct.CFX_CSSData::LengthUnit"* %66, null
  br i1 %67, label %72, label %68

68:                                               ; preds = %65
  %69 = getelementptr inbounds %"struct.CFX_CSSData::LengthUnit", %"struct.CFX_CSSData::LengthUnit"* %66, i64 0, i32 1
  %70 = load i32, i32* %69, align 8
  br label %72

71:                                               ; preds = %46
  call void @llvm.lifetime.end.p0i8(i64 4, i8* nonnull %38) #14
  call void @llvm.lifetime.end.p0i8(i64 16, i8* nonnull %37)
  br label %154

72:                                               ; preds = %68, %65, %63, %55, %60
  %73 = phi i32 [ 1, %60 ], [ 0, %55 ], [ 0, %63 ], [ %70, %68 ], [ 0, %65 ]
  call void @llvm.lifetime.end.p0i8(i64 4, i8* nonnull %38) #14
  call void @llvm.lifetime.end.p0i8(i64 16, i8* nonnull %37)
  %74 = call i8* @_Znwm(i64 32) #15, !noalias !81
  %75 = bitcast i8* %74 to %class.CFX_CSSNumberValue*
  call void @_ZN18CFX_CSSNumberValueC1ENS_4UnitEf(%class.CFX_CSSNumberValue* nonnull %75, i32 %73, float %49) #14, !noalias !81
  %76 = ptrtoint i8* %74 to i64
  %77 = getelementptr inbounds i8, i8* %74, i64 8
  %78 = bitcast i8* %77 to i64*
  %79 = load i64, i64* %78, align 8, !noalias !81
  %80 = add nsw i64 %79, 2
  store i64 %80, i64* %78, align 8
  %81 = load %class.CFX_CSSValue*, %class.CFX_CSSValue** %13, align 8
  store i64 %76, i64* %36, align 8
  %82 = icmp eq %class.CFX_CSSValue* %81, null
  br i1 %82, label %94, label %83

83:                                               ; preds = %72
  %84 = getelementptr inbounds %class.CFX_CSSValue, %class.CFX_CSSValue* %81, i64 0, i32 0, i32 1
  %85 = load i64, i64* %84, align 8
  %86 = add nsw i64 %85, -1
  store i64 %86, i64* %84, align 8
  %87 = icmp eq i64 %86, 0
  br i1 %87, label %88, label %94

88:                                               ; preds = %83
  %89 = getelementptr inbounds %class.CFX_CSSValue, %class.CFX_CSSValue* %81, i64 0, i32 0
  %90 = bitcast %class.CFX_CSSValue* %81 to void (%"class.fxcrt::Retainable"*)***
  %91 = load void (%"class.fxcrt::Retainable"*)**, void (%"class.fxcrt::Retainable"*)*** %90, align 8
  %92 = getelementptr inbounds void (%"class.fxcrt::Retainable"*)*, void (%"class.fxcrt::Retainable"*)** %91, i64 1
  %93 = load void (%"class.fxcrt::Retainable"*)*, void (%"class.fxcrt::Retainable"*)** %92, align 8
  call void %93(%"class.fxcrt::Retainable"* nonnull %89) #14
  br label %94

94:                                               ; preds = %72, %83, %88
  %95 = load i64, i64* %78, align 8
  %96 = add nsw i64 %95, -1
  store i64 %96, i64* %78, align 8
  %97 = icmp eq i64 %96, 0
  br i1 %97, label %98, label %154

98:                                               ; preds = %94
  %99 = bitcast i8* %74 to %"class.fxcrt::Retainable"*
  %100 = bitcast i8* %74 to void (%"class.fxcrt::Retainable"*)***
  %101 = load void (%"class.fxcrt::Retainable"*)**, void (%"class.fxcrt::Retainable"*)*** %100, align 8
  %102 = getelementptr inbounds void (%"class.fxcrt::Retainable"*)*, void (%"class.fxcrt::Retainable"*)** %101, i64 1
  %103 = load void (%"class.fxcrt::Retainable"*)*, void (%"class.fxcrt::Retainable"*)** %102, align 8
  call void %103(%"class.fxcrt::Retainable"* nonnull %99) #14
  br label %154

104:                                              ; preds = %41
  %105 = load i64, i64* %31, align 8
  %106 = load i32, i32* %8, align 4
  %107 = sext i32 %106 to i64
  store i64 %105, i64* %32, align 8
  store i64 %107, i64* %33, align 8
  %108 = call %"struct.CFX_CSSData::Color"* @_ZN11CFX_CSSData14GetColorByNameEN5fxcrt18StringViewTemplateIwEE(%"class.fxcrt::StringViewTemplate"* nonnull %11) #14
  %109 = icmp eq %"struct.CFX_CSSData::Color"* %108, null
  br i1 %109, label %110, label %154

110:                                              ; preds = %104
  %111 = load i64, i64* %31, align 8
  %112 = load i32, i32* %8, align 4
  %113 = sext i32 %112 to i64
  store i64 %111, i64* %34, align 8
  store i64 %113, i64* %35, align 8
  %114 = call %"struct.CFX_CSSData::PropertyValue"* @_ZN11CFX_CSSData22GetPropertyValueByNameEN5fxcrt18StringViewTemplateIwEE(%"class.fxcrt::StringViewTemplate"* nonnull %12) #14
  %115 = icmp eq %"struct.CFX_CSSData::PropertyValue"* %114, null
  br i1 %115, label %154, label %116

116:                                              ; preds = %110
  %117 = getelementptr inbounds %"struct.CFX_CSSData::PropertyValue", %"struct.CFX_CSSData::PropertyValue"* %114, i64 0, i32 0
  %118 = load i8, i8* %117, align 4
  switch i8 %118, label %154 [
    i8 10, label %119
    i8 22, label %119
    i8 25, label %119
  ]

119:                                              ; preds = %116, %116, %116
  %120 = load %class.CFX_CSSValue*, %class.CFX_CSSValue** %13, align 8
  %121 = icmp eq %class.CFX_CSSValue* %120, null
  br i1 %121, label %122, label %154

122:                                              ; preds = %119
  %123 = call i8* @_Znwm(i64 24) #15, !noalias !84
  %124 = bitcast i8* %123 to %class.CFX_CSSEnumValue*
  %125 = load i8, i8* %117, align 1, !noalias !84
  call void @_ZN16CFX_CSSEnumValueC1E20CFX_CSSPropertyValue(%class.CFX_CSSEnumValue* nonnull %124, i8 zeroext %125) #14, !noalias !84
  %126 = ptrtoint i8* %123 to i64
  %127 = getelementptr inbounds i8, i8* %123, i64 8
  %128 = bitcast i8* %127 to i64*
  %129 = load i64, i64* %128, align 8, !noalias !84
  %130 = add nsw i64 %129, 2
  store i64 %130, i64* %128, align 8
  %131 = load %class.CFX_CSSValue*, %class.CFX_CSSValue** %13, align 8
  store i64 %126, i64* %36, align 8
  %132 = icmp eq %class.CFX_CSSValue* %131, null
  br i1 %132, label %144, label %133

133:                                              ; preds = %122
  %134 = getelementptr inbounds %class.CFX_CSSValue, %class.CFX_CSSValue* %131, i64 0, i32 0, i32 1
  %135 = load i64, i64* %134, align 8
  %136 = add nsw i64 %135, -1
  store i64 %136, i64* %134, align 8
  %137 = icmp eq i64 %136, 0
  br i1 %137, label %138, label %144

138:                                              ; preds = %133
  %139 = getelementptr inbounds %class.CFX_CSSValue, %class.CFX_CSSValue* %131, i64 0, i32 0
  %140 = bitcast %class.CFX_CSSValue* %131 to void (%"class.fxcrt::Retainable"*)***
  %141 = load void (%"class.fxcrt::Retainable"*)**, void (%"class.fxcrt::Retainable"*)*** %140, align 8
  %142 = getelementptr inbounds void (%"class.fxcrt::Retainable"*)*, void (%"class.fxcrt::Retainable"*)** %141, i64 1
  %143 = load void (%"class.fxcrt::Retainable"*)*, void (%"class.fxcrt::Retainable"*)** %142, align 8
  call void %143(%"class.fxcrt::Retainable"* nonnull %139) #14
  br label %144

144:                                              ; preds = %122, %133, %138
  %145 = load i64, i64* %128, align 8
  %146 = add nsw i64 %145, -1
  store i64 %146, i64* %128, align 8
  %147 = icmp eq i64 %146, 0
  br i1 %147, label %148, label %154

148:                                              ; preds = %144
  %149 = bitcast i8* %123 to %"class.fxcrt::Retainable"*
  %150 = bitcast i8* %123 to void (%"class.fxcrt::Retainable"*)***
  %151 = load void (%"class.fxcrt::Retainable"*)**, void (%"class.fxcrt::Retainable"*)*** %150, align 8
  %152 = getelementptr inbounds void (%"class.fxcrt::Retainable"*)*, void (%"class.fxcrt::Retainable"*)** %151, i64 1
  %153 = load void (%"class.fxcrt::Retainable"*)*, void (%"class.fxcrt::Retainable"*)** %152, align 8
  call void %153(%"class.fxcrt::Retainable"* nonnull %149) #14
  br label %154

154:                                              ; preds = %41, %98, %94, %71, %116, %144, %148, %119, %104, %110, %43
  %155 = call zeroext i1 @_ZN22CFX_CSSValueListParser9NextValueEPN12CFX_CSSValue13PrimitiveTypeEPPKwPi(%class.CFX_CSSValueListParser* nonnull %10, i8* nonnull %9, i32** nonnull %7, i32* nonnull %8) #14
  br i1 %155, label %41, label %156

156:                                              ; preds = %154, %27
  %157 = load %class.CFX_CSSValue*, %class.CFX_CSSValue** %13, align 8
  %158 = icmp eq %class.CFX_CSSValue* %157, null
  br i1 %158, label %159, label %191

159:                                              ; preds = %156
  %160 = call i8* @_Znwm(i64 32) #15, !noalias !87
  %161 = bitcast i8* %160 to %class.CFX_CSSNumberValue*
  call void @_ZN18CFX_CSSNumberValueC1ENS_4UnitEf(%class.CFX_CSSNumberValue* nonnull %161, i32 0, float 0.000000e+00) #14, !noalias !87
  %162 = ptrtoint i8* %160 to i64
  %163 = getelementptr inbounds i8, i8* %160, i64 8
  %164 = bitcast i8* %163 to i64*
  %165 = load i64, i64* %164, align 8, !noalias !87
  %166 = add nsw i64 %165, 2
  store i64 %166, i64* %164, align 8
  %167 = load %class.CFX_CSSValue*, %class.CFX_CSSValue** %13, align 8
  %168 = bitcast %"class.fxcrt::RetainPtr"* %3 to i64*
  store i64 %162, i64* %168, align 8
  %169 = icmp eq %class.CFX_CSSValue* %167, null
  br i1 %169, label %181, label %170

170:                                              ; preds = %159
  %171 = getelementptr inbounds %class.CFX_CSSValue, %class.CFX_CSSValue* %167, i64 0, i32 0, i32 1
  %172 = load i64, i64* %171, align 8
  %173 = add nsw i64 %172, -1
  store i64 %173, i64* %171, align 8
  %174 = icmp eq i64 %173, 0
  br i1 %174, label %175, label %181

175:                                              ; preds = %170
  %176 = getelementptr inbounds %class.CFX_CSSValue, %class.CFX_CSSValue* %167, i64 0, i32 0
  %177 = bitcast %class.CFX_CSSValue* %167 to void (%"class.fxcrt::Retainable"*)***
  %178 = load void (%"class.fxcrt::Retainable"*)**, void (%"class.fxcrt::Retainable"*)*** %177, align 8
  %179 = getelementptr inbounds void (%"class.fxcrt::Retainable"*)*, void (%"class.fxcrt::Retainable"*)** %178, i64 1
  %180 = load void (%"class.fxcrt::Retainable"*)*, void (%"class.fxcrt::Retainable"*)** %179, align 8
  call void %180(%"class.fxcrt::Retainable"* nonnull %176) #14
  br label %181

181:                                              ; preds = %159, %170, %175
  %182 = load i64, i64* %164, align 8
  %183 = add nsw i64 %182, -1
  store i64 %183, i64* %164, align 8
  %184 = icmp eq i64 %183, 0
  br i1 %184, label %185, label %191

185:                                              ; preds = %181
  %186 = bitcast i8* %160 to %"class.fxcrt::Retainable"*
  %187 = bitcast i8* %160 to void (%"class.fxcrt::Retainable"*)***
  %188 = load void (%"class.fxcrt::Retainable"*)**, void (%"class.fxcrt::Retainable"*)*** %187, align 8
  %189 = getelementptr inbounds void (%"class.fxcrt::Retainable"*)*, void (%"class.fxcrt::Retainable"*)** %188, i64 1
  %190 = load void (%"class.fxcrt::Retainable"*)*, void (%"class.fxcrt::Retainable"*)** %189, align 8
  call void %190(%"class.fxcrt::Retainable"* nonnull %186) #14
  br label %191

191:                                              ; preds = %156, %185, %181
  call void @llvm.lifetime.end.p0i8(i64 24, i8* nonnull %28) #14
  call void @llvm.lifetime.end.p0i8(i64 1, i8* nonnull %9) #14
  ret i1 true
}

; Function Attrs: nounwind ssp uwtable
define hidden void @_ZN18CFX_CSSDeclaration22ParseValueListPropertyEPKN11CFX_CSSData8PropertyEPKwib(%class.CFX_CSSDeclaration*, %"struct.CFX_CSSData::Property"* nocapture readonly, i32*, i32, i1 zeroext) local_unnamed_addr #2 align 2 {
  %6 = alloca i32, align 4
  %7 = alloca %"class.fxcrt::StringViewTemplate", align 8
  %8 = alloca i32*, align 8
  %9 = alloca i32, align 4
  %10 = alloca %class.CFX_CSSValueListParser, align 8
  %11 = alloca i8, align 1
  %12 = alloca %"class.std::__1::vector.51", align 8
  %13 = alloca %"class.fxcrt::RetainPtr", align 8
  %14 = alloca i32, align 4
  %15 = alloca %"class.fxcrt::RetainPtr", align 8
  %16 = alloca %"class.fxcrt::StringViewTemplate", align 8
  %17 = alloca %"class.fxcrt::RetainPtr", align 8
  %18 = alloca %"class.fxcrt::RetainPtr", align 8
  %19 = alloca %"class.fxcrt::WideString", align 8
  %20 = alloca i32, align 4
  %21 = alloca %"class.fxcrt::RetainPtr", align 8
  %22 = alloca %"class.fxcrt::RetainPtr.58", align 8
  %23 = alloca %"class.fxcrt::RetainPtr", align 8
  store i32* %2, i32** %8, align 8
  store i32 %3, i32* %9, align 4
  %24 = getelementptr inbounds %"struct.CFX_CSSData::Property", %"struct.CFX_CSSData::Property"* %1, i64 0, i32 0
  %25 = load i8, i8* %24, align 4
  %26 = icmp eq i8 %25, 12
  %27 = select i1 %26, i32 44, i32 32
  %28 = bitcast %class.CFX_CSSValueListParser* %10 to i8*
  call void @llvm.lifetime.start.p0i8(i64 24, i8* nonnull %28) #14
  call void @llvm.memset.p0i8.i64(i8* nonnull align 8 %28, i8 -86, i64 24, i1 false)
  call void @_ZN22CFX_CSSValueListParserC1EPKwiw(%class.CFX_CSSValueListParser* nonnull %10, i32* %2, i32 %3, i32 signext %27) #14
  %29 = getelementptr inbounds %"struct.CFX_CSSData::Property", %"struct.CFX_CSSData::Property"* %1, i64 0, i32 2
  %30 = load i32, i32* %29, align 4
  call void @llvm.lifetime.start.p0i8(i64 1, i8* nonnull %11) #14
  store i8 -86, i8* %11, align 1
  %31 = bitcast %"class.std::__1::vector.51"* %12 to i8*
  call void @llvm.lifetime.start.p0i8(i64 24, i8* nonnull %31) #14
  %32 = getelementptr inbounds %"class.std::__1::vector.51", %"class.std::__1::vector.51"* %12, i64 0, i32 0, i32 0
  %33 = getelementptr inbounds %"class.std::__1::vector.51", %"class.std::__1::vector.51"* %12, i64 0, i32 0, i32 1
  %34 = getelementptr inbounds %"class.std::__1::vector.51", %"class.std::__1::vector.51"* %12, i64 0, i32 0, i32 2, i32 0, i32 0
  call void @llvm.memset.p0i8.i64(i8* nonnull align 8 %31, i8 0, i64 24, i1 false) #14
  %35 = call zeroext i1 @_ZN22CFX_CSSValueListParser9NextValueEPN12CFX_CSSValue13PrimitiveTypeEPPKwPi(%class.CFX_CSSValueListParser* nonnull %10, i8* nonnull %11, i32** nonnull %8, i32* nonnull %9) #14
  br i1 %35, label %36, label %418

36:                                               ; preds = %5
  %37 = and i32 %30, 256
  %38 = icmp eq i32 %37, 0
  %39 = bitcast i32* %20 to i8*
  %40 = bitcast %"class.fxcrt::RetainPtr"* %21 to i8*
  %41 = bitcast %"class.fxcrt::RetainPtr"* %21 to i64*
  %42 = bitcast %"class.fxcrt::RetainPtr"** %33 to i64*
  %43 = getelementptr inbounds %"class.fxcrt::RetainPtr", %"class.fxcrt::RetainPtr"* %21, i64 0, i32 0, i32 0, i32 0, i32 0
  %44 = bitcast i32* %14 to i8*
  %45 = bitcast %"class.fxcrt::RetainPtr"* %15 to i8*
  %46 = bitcast %"class.fxcrt::RetainPtr"* %15 to i64*
  %47 = getelementptr inbounds %"class.fxcrt::RetainPtr", %"class.fxcrt::RetainPtr"* %15, i64 0, i32 0, i32 0, i32 0, i32 0
  %48 = and i32 %30, 32
  %49 = icmp eq i32 %48, 0
  %50 = bitcast i32** %8 to i64*
  %51 = bitcast %"class.fxcrt::StringViewTemplate"* %16 to i64*
  %52 = getelementptr inbounds %"class.fxcrt::StringViewTemplate", %"class.fxcrt::StringViewTemplate"* %16, i64 0, i32 0, i32 1
  %53 = bitcast %"class.fxcrt::RetainPtr"* %17 to i8*
  %54 = bitcast %"class.fxcrt::RetainPtr"* %17 to i64*
  %55 = getelementptr inbounds %"class.fxcrt::RetainPtr", %"class.fxcrt::RetainPtr"* %17, i64 0, i32 0, i32 0, i32 0, i32 0
  %56 = trunc i32 %30 to i8
  %57 = icmp slt i8 %56, 0
  %58 = bitcast %"class.fxcrt::RetainPtr"* %18 to i8*
  %59 = bitcast %"class.fxcrt::WideString"* %19 to i8*
  %60 = bitcast %"class.fxcrt::RetainPtr"* %18 to i64*
  %61 = getelementptr inbounds %"class.fxcrt::RetainPtr", %"class.fxcrt::RetainPtr"* %18, i64 0, i32 0, i32 0, i32 0, i32 0
  %62 = and i32 %30, 16
  %63 = icmp eq i32 %62, 0
  %64 = bitcast %"class.fxcrt::StringViewTemplate"* %7 to i8*
  %65 = bitcast i32* %6 to i8*
  %66 = getelementptr inbounds %"class.fxcrt::StringViewTemplate", %"class.fxcrt::StringViewTemplate"* %7, i64 0, i32 0, i32 0, i32 0
  %67 = getelementptr inbounds %"class.fxcrt::StringViewTemplate", %"class.fxcrt::StringViewTemplate"* %7, i64 0, i32 0, i32 1
  %68 = bitcast %"class.fxcrt::RetainPtr"* %13 to i8*
  %69 = bitcast %"class.fxcrt::RetainPtr"* %13 to i64*
  %70 = getelementptr inbounds %"class.fxcrt::RetainPtr", %"class.fxcrt::RetainPtr"* %13, i64 0, i32 0, i32 0, i32 0, i32 0
  br label %71

71:                                               ; preds = %36, %333
  %72 = load i8, i8* %11, align 1
  switch i8 %72, label %333 [
    i8 1, label %73
    i8 2, label %142
    i8 3, label %285
  ]

73:                                               ; preds = %71
  br i1 %63, label %333, label %74

74:                                               ; preds = %73
  %75 = load i32*, i32** %8, align 8
  %76 = load i32, i32* %9, align 4
  call void @llvm.lifetime.start.p0i8(i64 16, i8* nonnull %64)
  call void @llvm.lifetime.start.p0i8(i64 4, i8* nonnull %65) #14
  store i32 0, i32* %6, align 4
  %77 = call float @_Z12FXSYS_wcstofPKwiPi(i32* %75, i32 %76, i32* nonnull %6) #14
  %78 = load i32, i32* %6, align 4
  %79 = icmp sgt i32 %78, 0
  %80 = call float @llvm.fabs.f32(float %77) #13
  %81 = fcmp one float %80, 0x7FF0000000000000
  %82 = and i1 %81, %79
  br i1 %82, label %83, label %99

83:                                               ; preds = %74
  %84 = sub nsw i32 %76, %78
  %85 = sext i32 %78 to i64
  %86 = getelementptr inbounds i32, i32* %75, i64 %85
  %87 = icmp sgt i32 %84, 0
  br i1 %87, label %88, label %100

88:                                               ; preds = %83
  %89 = load i32, i32* %86, align 4
  %90 = icmp eq i32 %89, 37
  br i1 %90, label %100, label %91

91:                                               ; preds = %88
  %92 = icmp eq i32 %84, 2
  br i1 %92, label %93, label %100

93:                                               ; preds = %91
  store i32* %86, i32** %66, align 8
  store i64 2, i64* %67, align 8
  %94 = call %"struct.CFX_CSSData::LengthUnit"* @_ZN11CFX_CSSData19GetLengthUnitByNameEN5fxcrt18StringViewTemplateIwEE(%"class.fxcrt::StringViewTemplate"* nonnull %7) #14
  %95 = icmp eq %"struct.CFX_CSSData::LengthUnit"* %94, null
  br i1 %95, label %100, label %96

96:                                               ; preds = %93
  %97 = getelementptr inbounds %"struct.CFX_CSSData::LengthUnit", %"struct.CFX_CSSData::LengthUnit"* %94, i64 0, i32 1
  %98 = load i32, i32* %97, align 8
  br label %100

99:                                               ; preds = %74
  call void @llvm.lifetime.end.p0i8(i64 4, i8* nonnull %65) #14
  call void @llvm.lifetime.end.p0i8(i64 16, i8* nonnull %64)
  br label %333

100:                                              ; preds = %96, %93, %91, %83, %88
  %101 = phi i32 [ 1, %88 ], [ 0, %83 ], [ 0, %91 ], [ %98, %96 ], [ 0, %93 ]
  call void @llvm.lifetime.end.p0i8(i64 4, i8* nonnull %65) #14
  call void @llvm.lifetime.end.p0i8(i64 16, i8* nonnull %64)
  call void @llvm.lifetime.start.p0i8(i64 8, i8* nonnull %68) #14
  %102 = call i8* @_Znwm(i64 32) #15, !noalias !90
  %103 = bitcast i8* %102 to %class.CFX_CSSNumberValue*
  call void @_ZN18CFX_CSSNumberValueC1ENS_4UnitEf(%class.CFX_CSSNumberValue* nonnull %103, i32 %101, float %77) #14, !noalias !90
  %104 = ptrtoint i8* %102 to i64
  %105 = getelementptr inbounds i8, i8* %102, i64 8
  %106 = bitcast i8* %105 to i64*
  %107 = load i64, i64* %106, align 8, !noalias !90
  store i64 %104, i64* %69, align 8
  %108 = add nsw i64 %107, 2
  store i64 %108, i64* %106, align 8
  %109 = load %"class.fxcrt::RetainPtr"*, %"class.fxcrt::RetainPtr"** %33, align 8
  %110 = load %"class.fxcrt::RetainPtr"*, %"class.fxcrt::RetainPtr"** %34, align 8
  %111 = icmp ult %"class.fxcrt::RetainPtr"* %109, %110
  br i1 %111, label %112, label %117

112:                                              ; preds = %100
  %113 = bitcast %"class.fxcrt::RetainPtr"* %109 to i64*
  store i64 0, i64* %113, align 8
  %114 = load i64, i64* %69, align 8
  store i64 %114, i64* %113, align 8
  %115 = getelementptr inbounds %"class.fxcrt::RetainPtr", %"class.fxcrt::RetainPtr"* %109, i64 1
  %116 = ptrtoint %"class.fxcrt::RetainPtr"* %115 to i64
  store i64 %116, i64* %42, align 8
  store %class.CFX_CSSValue* null, %class.CFX_CSSValue** %70, align 8
  br label %131

117:                                              ; preds = %100
  call void @_ZNSt3__16vectorIN5fxcrt9RetainPtrI12CFX_CSSValueEENS_9allocatorIS4_EEE21__push_back_slow_pathIS4_EEvOT_(%"class.std::__1::vector.51"* nonnull %12, %"class.fxcrt::RetainPtr"* nonnull dereferenceable(8) %13) #14
  %118 = load %class.CFX_CSSValue*, %class.CFX_CSSValue** %70, align 8
  %119 = bitcast %class.CFX_CSSValue* %118 to void (%"class.fxcrt::Retainable"*)***
  store %class.CFX_CSSValue* null, %class.CFX_CSSValue** %70, align 8
  %120 = icmp eq %class.CFX_CSSValue* %118, null
  br i1 %120, label %131, label %121

121:                                              ; preds = %117
  %122 = getelementptr inbounds %class.CFX_CSSValue, %class.CFX_CSSValue* %118, i64 0, i32 0, i32 1
  %123 = load i64, i64* %122, align 8
  %124 = add nsw i64 %123, -1
  store i64 %124, i64* %122, align 8
  %125 = icmp eq i64 %124, 0
  br i1 %125, label %126, label %131

126:                                              ; preds = %121
  %127 = getelementptr inbounds %class.CFX_CSSValue, %class.CFX_CSSValue* %118, i64 0, i32 0
  %128 = load void (%"class.fxcrt::Retainable"*)**, void (%"class.fxcrt::Retainable"*)*** %119, align 8
  %129 = getelementptr inbounds void (%"class.fxcrt::Retainable"*)*, void (%"class.fxcrt::Retainable"*)** %128, i64 1
  %130 = load void (%"class.fxcrt::Retainable"*)*, void (%"class.fxcrt::Retainable"*)** %129, align 8
  call void %130(%"class.fxcrt::Retainable"* nonnull %127) #14
  br label %131

131:                                              ; preds = %112, %126, %121, %117
  %132 = load i64, i64* %106, align 8
  %133 = add nsw i64 %132, -1
  store i64 %133, i64* %106, align 8
  %134 = icmp eq i64 %133, 0
  br i1 %134, label %135, label %141

135:                                              ; preds = %131
  %136 = bitcast i8* %102 to %"class.fxcrt::Retainable"*
  %137 = bitcast i8* %102 to void (%"class.fxcrt::Retainable"*)***
  %138 = load void (%"class.fxcrt::Retainable"*)**, void (%"class.fxcrt::Retainable"*)*** %137, align 8
  %139 = getelementptr inbounds void (%"class.fxcrt::Retainable"*)*, void (%"class.fxcrt::Retainable"*)** %138, i64 1
  %140 = load void (%"class.fxcrt::Retainable"*)*, void (%"class.fxcrt::Retainable"*)** %139, align 8
  call void %140(%"class.fxcrt::Retainable"* nonnull %136) #14
  br label %141

141:                                              ; preds = %131, %135
  call void @llvm.lifetime.end.p0i8(i64 8, i8* nonnull %68) #14
  br label %333

142:                                              ; preds = %71
  br i1 %38, label %190, label %143

143:                                              ; preds = %142
  call void @llvm.lifetime.start.p0i8(i64 4, i8* nonnull %44) #14
  store i32 -1431655766, i32* %14, align 4
  %144 = load i32*, i32** %8, align 8
  %145 = load i32, i32* %9, align 4
  %146 = call zeroext i1 @_ZN18CFX_CSSDeclaration13ParseCSSColorEPKwiPj(i32* %144, i32 %145, i32* nonnull %14)
  br i1 %146, label %147, label %189

147:                                              ; preds = %143
  call void @llvm.lifetime.start.p0i8(i64 8, i8* nonnull %45) #14
  %148 = call i8* @_Znwm(i64 24) #15, !noalias !93
  %149 = bitcast i8* %148 to %class.CFX_CSSColorValue*
  %150 = load i32, i32* %14, align 4, !noalias !93
  call void @_ZN17CFX_CSSColorValueC1Ej(%class.CFX_CSSColorValue* nonnull %149, i32 %150) #14, !noalias !93
  %151 = ptrtoint i8* %148 to i64
  %152 = getelementptr inbounds i8, i8* %148, i64 8
  %153 = bitcast i8* %152 to i64*
  %154 = load i64, i64* %153, align 8, !noalias !93
  store i64 %151, i64* %46, align 8
  %155 = add nsw i64 %154, 2
  store i64 %155, i64* %153, align 8
  %156 = load %"class.fxcrt::RetainPtr"*, %"class.fxcrt::RetainPtr"** %33, align 8
  %157 = load %"class.fxcrt::RetainPtr"*, %"class.fxcrt::RetainPtr"** %34, align 8
  %158 = icmp ult %"class.fxcrt::RetainPtr"* %156, %157
  br i1 %158, label %159, label %164

159:                                              ; preds = %147
  %160 = bitcast %"class.fxcrt::RetainPtr"* %156 to i64*
  store i64 0, i64* %160, align 8
  %161 = load i64, i64* %46, align 8
  store i64 %161, i64* %160, align 8
  %162 = getelementptr inbounds %"class.fxcrt::RetainPtr", %"class.fxcrt::RetainPtr"* %156, i64 1
  %163 = ptrtoint %"class.fxcrt::RetainPtr"* %162 to i64
  store i64 %163, i64* %42, align 8
  store %class.CFX_CSSValue* null, %class.CFX_CSSValue** %47, align 8
  br label %178

164:                                              ; preds = %147
  call void @_ZNSt3__16vectorIN5fxcrt9RetainPtrI12CFX_CSSValueEENS_9allocatorIS4_EEE21__push_back_slow_pathIS4_EEvOT_(%"class.std::__1::vector.51"* nonnull %12, %"class.fxcrt::RetainPtr"* nonnull dereferenceable(8) %15) #14
  %165 = load %class.CFX_CSSValue*, %class.CFX_CSSValue** %47, align 8
  %166 = bitcast %class.CFX_CSSValue* %165 to void (%"class.fxcrt::Retainable"*)***
  store %class.CFX_CSSValue* null, %class.CFX_CSSValue** %47, align 8
  %167 = icmp eq %class.CFX_CSSValue* %165, null
  br i1 %167, label %178, label %168

168:                                              ; preds = %164
  %169 = getelementptr inbounds %class.CFX_CSSValue, %class.CFX_CSSValue* %165, i64 0, i32 0, i32 1
  %170 = load i64, i64* %169, align 8
  %171 = add nsw i64 %170, -1
  store i64 %171, i64* %169, align 8
  %172 = icmp eq i64 %171, 0
  br i1 %172, label %173, label %178

173:                                              ; preds = %168
  %174 = getelementptr inbounds %class.CFX_CSSValue, %class.CFX_CSSValue* %165, i64 0, i32 0
  %175 = load void (%"class.fxcrt::Retainable"*)**, void (%"class.fxcrt::Retainable"*)*** %166, align 8
  %176 = getelementptr inbounds void (%"class.fxcrt::Retainable"*)*, void (%"class.fxcrt::Retainable"*)** %175, i64 1
  %177 = load void (%"class.fxcrt::Retainable"*)*, void (%"class.fxcrt::Retainable"*)** %176, align 8
  call void %177(%"class.fxcrt::Retainable"* nonnull %174) #14
  br label %178

178:                                              ; preds = %159, %173, %168, %164
  %179 = load i64, i64* %153, align 8
  %180 = add nsw i64 %179, -1
  store i64 %180, i64* %153, align 8
  %181 = icmp eq i64 %180, 0
  br i1 %181, label %182, label %188

182:                                              ; preds = %178
  %183 = bitcast i8* %148 to %"class.fxcrt::Retainable"*
  %184 = bitcast i8* %148 to void (%"class.fxcrt::Retainable"*)***
  %185 = load void (%"class.fxcrt::Retainable"*)**, void (%"class.fxcrt::Retainable"*)*** %184, align 8
  %186 = getelementptr inbounds void (%"class.fxcrt::Retainable"*)*, void (%"class.fxcrt::Retainable"*)** %185, i64 1
  %187 = load void (%"class.fxcrt::Retainable"*)*, void (%"class.fxcrt::Retainable"*)** %186, align 8
  call void %187(%"class.fxcrt::Retainable"* nonnull %183) #14
  br label %188

188:                                              ; preds = %178, %182
  call void @llvm.lifetime.end.p0i8(i64 8, i8* nonnull %45) #14
  call void @llvm.lifetime.end.p0i8(i64 4, i8* nonnull %44) #14
  br label %333

189:                                              ; preds = %143
  call void @llvm.lifetime.end.p0i8(i64 4, i8* nonnull %44) #14
  br label %190

190:                                              ; preds = %189, %142
  br i1 %49, label %240, label %191

191:                                              ; preds = %190
  %192 = load i64, i64* %50, align 8
  %193 = load i32, i32* %9, align 4
  %194 = sext i32 %193 to i64
  store i64 %192, i64* %51, align 8
  store i64 %194, i64* %52, align 8
  %195 = call %"struct.CFX_CSSData::PropertyValue"* @_ZN11CFX_CSSData22GetPropertyValueByNameEN5fxcrt18StringViewTemplateIwEE(%"class.fxcrt::StringViewTemplate"* nonnull %16) #14
  %196 = icmp eq %"struct.CFX_CSSData::PropertyValue"* %195, null
  br i1 %196, label %240, label %197

197:                                              ; preds = %191
  call void @llvm.lifetime.start.p0i8(i64 8, i8* nonnull %53) #14
  %198 = getelementptr inbounds %"struct.CFX_CSSData::PropertyValue", %"struct.CFX_CSSData::PropertyValue"* %195, i64 0, i32 0
  %199 = call i8* @_Znwm(i64 24) #15, !noalias !96
  %200 = bitcast i8* %199 to %class.CFX_CSSEnumValue*
  %201 = load i8, i8* %198, align 1, !noalias !96
  call void @_ZN16CFX_CSSEnumValueC1E20CFX_CSSPropertyValue(%class.CFX_CSSEnumValue* nonnull %200, i8 zeroext %201) #14, !noalias !96
  %202 = ptrtoint i8* %199 to i64
  %203 = getelementptr inbounds i8, i8* %199, i64 8
  %204 = bitcast i8* %203 to i64*
  %205 = load i64, i64* %204, align 8, !noalias !96
  store i64 %202, i64* %54, align 8
  %206 = add nsw i64 %205, 2
  store i64 %206, i64* %204, align 8
  %207 = load %"class.fxcrt::RetainPtr"*, %"class.fxcrt::RetainPtr"** %33, align 8
  %208 = load %"class.fxcrt::RetainPtr"*, %"class.fxcrt::RetainPtr"** %34, align 8
  %209 = icmp ult %"class.fxcrt::RetainPtr"* %207, %208
  br i1 %209, label %210, label %215

210:                                              ; preds = %197
  %211 = bitcast %"class.fxcrt::RetainPtr"* %207 to i64*
  store i64 0, i64* %211, align 8
  %212 = load i64, i64* %54, align 8
  store i64 %212, i64* %211, align 8
  %213 = getelementptr inbounds %"class.fxcrt::RetainPtr", %"class.fxcrt::RetainPtr"* %207, i64 1
  %214 = ptrtoint %"class.fxcrt::RetainPtr"* %213 to i64
  store i64 %214, i64* %42, align 8
  store %class.CFX_CSSValue* null, %class.CFX_CSSValue** %55, align 8
  br label %229

215:                                              ; preds = %197
  call void @_ZNSt3__16vectorIN5fxcrt9RetainPtrI12CFX_CSSValueEENS_9allocatorIS4_EEE21__push_back_slow_pathIS4_EEvOT_(%"class.std::__1::vector.51"* nonnull %12, %"class.fxcrt::RetainPtr"* nonnull dereferenceable(8) %17) #14
  %216 = load %class.CFX_CSSValue*, %class.CFX_CSSValue** %55, align 8
  %217 = bitcast %class.CFX_CSSValue* %216 to void (%"class.fxcrt::Retainable"*)***
  store %class.CFX_CSSValue* null, %class.CFX_CSSValue** %55, align 8
  %218 = icmp eq %class.CFX_CSSValue* %216, null
  br i1 %218, label %229, label %219

219:                                              ; preds = %215
  %220 = getelementptr inbounds %class.CFX_CSSValue, %class.CFX_CSSValue* %216, i64 0, i32 0, i32 1
  %221 = load i64, i64* %220, align 8
  %222 = add nsw i64 %221, -1
  store i64 %222, i64* %220, align 8
  %223 = icmp eq i64 %222, 0
  br i1 %223, label %224, label %229

224:                                              ; preds = %219
  %225 = getelementptr inbounds %class.CFX_CSSValue, %class.CFX_CSSValue* %216, i64 0, i32 0
  %226 = load void (%"class.fxcrt::Retainable"*)**, void (%"class.fxcrt::Retainable"*)*** %217, align 8
  %227 = getelementptr inbounds void (%"class.fxcrt::Retainable"*)*, void (%"class.fxcrt::Retainable"*)** %226, i64 1
  %228 = load void (%"class.fxcrt::Retainable"*)*, void (%"class.fxcrt::Retainable"*)** %227, align 8
  call void %228(%"class.fxcrt::Retainable"* nonnull %225) #14
  br label %229

229:                                              ; preds = %210, %224, %219, %215
  %230 = load i64, i64* %204, align 8
  %231 = add nsw i64 %230, -1
  store i64 %231, i64* %204, align 8
  %232 = icmp eq i64 %231, 0
  br i1 %232, label %233, label %239

233:                                              ; preds = %229
  %234 = bitcast i8* %199 to %"class.fxcrt::Retainable"*
  %235 = bitcast i8* %199 to void (%"class.fxcrt::Retainable"*)***
  %236 = load void (%"class.fxcrt::Retainable"*)**, void (%"class.fxcrt::Retainable"*)*** %235, align 8
  %237 = getelementptr inbounds void (%"class.fxcrt::Retainable"*)*, void (%"class.fxcrt::Retainable"*)** %236, i64 1
  %238 = load void (%"class.fxcrt::Retainable"*)*, void (%"class.fxcrt::Retainable"*)** %237, align 8
  call void %238(%"class.fxcrt::Retainable"* nonnull %234) #14
  br label %239

239:                                              ; preds = %229, %233
  call void @llvm.lifetime.end.p0i8(i64 8, i8* nonnull %53) #14
  br label %333

240:                                              ; preds = %191, %190
  br i1 %57, label %241, label %333

241:                                              ; preds = %240
  call void @llvm.lifetime.start.p0i8(i64 8, i8* nonnull %58) #14
  call void @llvm.lifetime.start.p0i8(i64 8, i8* nonnull %59) #14
  %242 = load i32*, i32** %8, align 8
  %243 = load i32, i32* %9, align 4
  %244 = sext i32 %243 to i64
  call void @_ZN5fxcrt10WideStringC1EPKwm(%"class.fxcrt::WideString"* nonnull %19, i32* %242, i64 %244) #14
  %245 = call i8* @_Znwm(i64 32) #15, !noalias !99
  %246 = bitcast i8* %245 to %class.CFX_CSSStringValue*
  call void @_ZN18CFX_CSSStringValueC1ERKN5fxcrt10WideStringE(%class.CFX_CSSStringValue* nonnull %246, %"class.fxcrt::WideString"* nonnull dereferenceable(8) %19) #14, !noalias !99
  %247 = ptrtoint i8* %245 to i64
  %248 = getelementptr inbounds i8, i8* %245, i64 8
  %249 = bitcast i8* %248 to i64*
  %250 = load i64, i64* %249, align 8, !noalias !99
  store i64 %247, i64* %60, align 8
  %251 = add nsw i64 %250, 2
  store i64 %251, i64* %249, align 8
  %252 = load %"class.fxcrt::RetainPtr"*, %"class.fxcrt::RetainPtr"** %33, align 8
  %253 = load %"class.fxcrt::RetainPtr"*, %"class.fxcrt::RetainPtr"** %34, align 8
  %254 = icmp ult %"class.fxcrt::RetainPtr"* %252, %253
  br i1 %254, label %255, label %260

255:                                              ; preds = %241
  %256 = bitcast %"class.fxcrt::RetainPtr"* %252 to i64*
  store i64 0, i64* %256, align 8
  %257 = load i64, i64* %60, align 8
  store i64 %257, i64* %256, align 8
  %258 = getelementptr inbounds %"class.fxcrt::RetainPtr", %"class.fxcrt::RetainPtr"* %252, i64 1
  %259 = ptrtoint %"class.fxcrt::RetainPtr"* %258 to i64
  store i64 %259, i64* %42, align 8
  store %class.CFX_CSSValue* null, %class.CFX_CSSValue** %61, align 8
  br label %274

260:                                              ; preds = %241
  call void @_ZNSt3__16vectorIN5fxcrt9RetainPtrI12CFX_CSSValueEENS_9allocatorIS4_EEE21__push_back_slow_pathIS4_EEvOT_(%"class.std::__1::vector.51"* nonnull %12, %"class.fxcrt::RetainPtr"* nonnull dereferenceable(8) %18) #14
  %261 = load %class.CFX_CSSValue*, %class.CFX_CSSValue** %61, align 8
  %262 = bitcast %class.CFX_CSSValue* %261 to void (%"class.fxcrt::Retainable"*)***
  store %class.CFX_CSSValue* null, %class.CFX_CSSValue** %61, align 8
  %263 = icmp eq %class.CFX_CSSValue* %261, null
  br i1 %263, label %274, label %264

264:                                              ; preds = %260
  %265 = getelementptr inbounds %class.CFX_CSSValue, %class.CFX_CSSValue* %261, i64 0, i32 0, i32 1
  %266 = load i64, i64* %265, align 8
  %267 = add nsw i64 %266, -1
  store i64 %267, i64* %265, align 8
  %268 = icmp eq i64 %267, 0
  br i1 %268, label %269, label %274

269:                                              ; preds = %264
  %270 = getelementptr inbounds %class.CFX_CSSValue, %class.CFX_CSSValue* %261, i64 0, i32 0
  %271 = load void (%"class.fxcrt::Retainable"*)**, void (%"class.fxcrt::Retainable"*)*** %262, align 8
  %272 = getelementptr inbounds void (%"class.fxcrt::Retainable"*)*, void (%"class.fxcrt::Retainable"*)** %271, i64 1
  %273 = load void (%"class.fxcrt::Retainable"*)*, void (%"class.fxcrt::Retainable"*)** %272, align 8
  call void %273(%"class.fxcrt::Retainable"* nonnull %270) #14
  br label %274

274:                                              ; preds = %255, %269, %264, %260
  %275 = load i64, i64* %249, align 8
  %276 = add nsw i64 %275, -1
  store i64 %276, i64* %249, align 8
  %277 = icmp eq i64 %276, 0
  br i1 %277, label %278, label %284

278:                                              ; preds = %274
  %279 = bitcast i8* %245 to %"class.fxcrt::Retainable"*
  %280 = bitcast i8* %245 to void (%"class.fxcrt::Retainable"*)***
  %281 = load void (%"class.fxcrt::Retainable"*)**, void (%"class.fxcrt::Retainable"*)*** %280, align 8
  %282 = getelementptr inbounds void (%"class.fxcrt::Retainable"*)*, void (%"class.fxcrt::Retainable"*)** %281, i64 1
  %283 = load void (%"class.fxcrt::Retainable"*)*, void (%"class.fxcrt::Retainable"*)** %282, align 8
  call void %283(%"class.fxcrt::Retainable"* nonnull %279) #14
  br label %284

284:                                              ; preds = %274, %278
  call void @_ZN5fxcrt10WideStringD1Ev(%"class.fxcrt::WideString"* nonnull %19) #14
  call void @llvm.lifetime.end.p0i8(i64 8, i8* nonnull %59) #14
  call void @llvm.lifetime.end.p0i8(i64 8, i8* nonnull %58) #14
  br label %333

285:                                              ; preds = %71
  br i1 %38, label %333, label %286

286:                                              ; preds = %285
  call void @llvm.lifetime.start.p0i8(i64 4, i8* nonnull %39) #14
  store i32 -1431655766, i32* %20, align 4
  %287 = load i32*, i32** %8, align 8
  %288 = load i32, i32* %9, align 4
  %289 = call zeroext i1 @_ZN18CFX_CSSDeclaration13ParseCSSColorEPKwiPj(i32* %287, i32 %288, i32* nonnull %20)
  br i1 %289, label %290, label %332

290:                                              ; preds = %286
  call void @llvm.lifetime.start.p0i8(i64 8, i8* nonnull %40) #14
  %291 = call i8* @_Znwm(i64 24) #15, !noalias !102
  %292 = bitcast i8* %291 to %class.CFX_CSSColorValue*
  %293 = load i32, i32* %20, align 4, !noalias !102
  call void @_ZN17CFX_CSSColorValueC1Ej(%class.CFX_CSSColorValue* nonnull %292, i32 %293) #14, !noalias !102
  %294 = ptrtoint i8* %291 to i64
  %295 = getelementptr inbounds i8, i8* %291, i64 8
  %296 = bitcast i8* %295 to i64*
  %297 = load i64, i64* %296, align 8, !noalias !102
  store i64 %294, i64* %41, align 8
  %298 = add nsw i64 %297, 2
  store i64 %298, i64* %296, align 8
  %299 = load %"class.fxcrt::RetainPtr"*, %"class.fxcrt::RetainPtr"** %33, align 8
  %300 = load %"class.fxcrt::RetainPtr"*, %"class.fxcrt::RetainPtr"** %34, align 8
  %301 = icmp ult %"class.fxcrt::RetainPtr"* %299, %300
  br i1 %301, label %302, label %307

302:                                              ; preds = %290
  %303 = bitcast %"class.fxcrt::RetainPtr"* %299 to i64*
  store i64 0, i64* %303, align 8
  %304 = load i64, i64* %41, align 8
  store i64 %304, i64* %303, align 8
  %305 = getelementptr inbounds %"class.fxcrt::RetainPtr", %"class.fxcrt::RetainPtr"* %299, i64 1
  %306 = ptrtoint %"class.fxcrt::RetainPtr"* %305 to i64
  store i64 %306, i64* %42, align 8
  store %class.CFX_CSSValue* null, %class.CFX_CSSValue** %43, align 8
  br label %321

307:                                              ; preds = %290
  call void @_ZNSt3__16vectorIN5fxcrt9RetainPtrI12CFX_CSSValueEENS_9allocatorIS4_EEE21__push_back_slow_pathIS4_EEvOT_(%"class.std::__1::vector.51"* nonnull %12, %"class.fxcrt::RetainPtr"* nonnull dereferenceable(8) %21) #14
  %308 = load %class.CFX_CSSValue*, %class.CFX_CSSValue** %43, align 8
  %309 = bitcast %class.CFX_CSSValue* %308 to void (%"class.fxcrt::Retainable"*)***
  store %class.CFX_CSSValue* null, %class.CFX_CSSValue** %43, align 8
  %310 = icmp eq %class.CFX_CSSValue* %308, null
  br i1 %310, label %321, label %311

311:                                              ; preds = %307
  %312 = getelementptr inbounds %class.CFX_CSSValue, %class.CFX_CSSValue* %308, i64 0, i32 0, i32 1
  %313 = load i64, i64* %312, align 8
  %314 = add nsw i64 %313, -1
  store i64 %314, i64* %312, align 8
  %315 = icmp eq i64 %314, 0
  br i1 %315, label %316, label %321

316:                                              ; preds = %311
  %317 = getelementptr inbounds %class.CFX_CSSValue, %class.CFX_CSSValue* %308, i64 0, i32 0
  %318 = load void (%"class.fxcrt::Retainable"*)**, void (%"class.fxcrt::Retainable"*)*** %309, align 8
  %319 = getelementptr inbounds void (%"class.fxcrt::Retainable"*)*, void (%"class.fxcrt::Retainable"*)** %318, i64 1
  %320 = load void (%"class.fxcrt::Retainable"*)*, void (%"class.fxcrt::Retainable"*)** %319, align 8
  call void %320(%"class.fxcrt::Retainable"* nonnull %317) #14
  br label %321

321:                                              ; preds = %302, %316, %311, %307
  %322 = load i64, i64* %296, align 8
  %323 = add nsw i64 %322, -1
  store i64 %323, i64* %296, align 8
  %324 = icmp eq i64 %323, 0
  br i1 %324, label %325, label %331

325:                                              ; preds = %321
  %326 = bitcast i8* %291 to %"class.fxcrt::Retainable"*
  %327 = bitcast i8* %291 to void (%"class.fxcrt::Retainable"*)***
  %328 = load void (%"class.fxcrt::Retainable"*)**, void (%"class.fxcrt::Retainable"*)*** %327, align 8
  %329 = getelementptr inbounds void (%"class.fxcrt::Retainable"*)*, void (%"class.fxcrt::Retainable"*)** %328, i64 1
  %330 = load void (%"class.fxcrt::Retainable"*)*, void (%"class.fxcrt::Retainable"*)** %329, align 8
  call void %330(%"class.fxcrt::Retainable"* nonnull %326) #14
  br label %331

331:                                              ; preds = %321, %325
  call void @llvm.lifetime.end.p0i8(i64 8, i8* nonnull %40) #14
  br label %332

332:                                              ; preds = %331, %286
  call void @llvm.lifetime.end.p0i8(i64 4, i8* nonnull %39) #14
  br label %333

333:                                              ; preds = %284, %240, %332, %71, %285, %73, %99, %141, %188, %239
  %334 = call zeroext i1 @_ZN22CFX_CSSValueListParser9NextValueEPN12CFX_CSSValue13PrimitiveTypeEPPKwPi(%class.CFX_CSSValueListParser* nonnull %10, i8* nonnull %11, i32** nonnull %8, i32* nonnull %9) #14
  br i1 %334, label %71, label %335

335:                                              ; preds = %333
  %336 = load %"class.fxcrt::RetainPtr"*, %"class.fxcrt::RetainPtr"** %32, align 8
  %337 = load %"class.fxcrt::RetainPtr"*, %"class.fxcrt::RetainPtr"** %33, align 8
  %338 = icmp eq %"class.fxcrt::RetainPtr"* %336, %337
  br i1 %338, label %387, label %339

339:                                              ; preds = %335
  %340 = load i8, i8* %24, align 4
  switch i8 %340, label %344 [
    i8 21, label %341
    i8 2, label %342
    i8 37, label %343
  ]

341:                                              ; preds = %339
  call void @_ZN18CFX_CSSDeclaration18Add4ValuesPropertyERKNSt3__16vectorIN5fxcrt9RetainPtrI12CFX_CSSValueEENS0_9allocatorIS5_EEEEb15CFX_CSSPropertySB_SB_SB_(%class.CFX_CSSDeclaration* %0, %"class.std::__1::vector.51"* nonnull dereferenceable(24) %12, i1 zeroext %4, i8 zeroext 30, i8 zeroext 33, i8 zeroext 17, i8 zeroext 22)
  br label %385

342:                                              ; preds = %339
  call void @_ZN18CFX_CSSDeclaration18Add4ValuesPropertyERKNSt3__16vectorIN5fxcrt9RetainPtrI12CFX_CSSValueEENS0_9allocatorIS5_EEEEb15CFX_CSSPropertySB_SB_SB_(%class.CFX_CSSDeclaration* %0, %"class.std::__1::vector.51"* nonnull dereferenceable(24) %12, i1 zeroext %4, i8 zeroext 6, i8 zeroext 39, i8 zeroext 29, i8 zeroext 38)
  br label %385

343:                                              ; preds = %339
  call void @_ZN18CFX_CSSDeclaration18Add4ValuesPropertyERKNSt3__16vectorIN5fxcrt9RetainPtrI12CFX_CSSValueEENS0_9allocatorIS5_EEEEb15CFX_CSSPropertySB_SB_SB_(%class.CFX_CSSDeclaration* %0, %"class.std::__1::vector.51"* nonnull dereferenceable(24) %12, i1 zeroext %4, i8 zeroext 5, i8 zeroext 19, i8 zeroext 10, i8 zeroext 32)
  br label %385

344:                                              ; preds = %339
  %345 = bitcast %"class.fxcrt::RetainPtr.58"* %22 to i8*
  call void @llvm.lifetime.start.p0i8(i64 8, i8* nonnull %345) #14
  %346 = getelementptr inbounds %"class.fxcrt::RetainPtr.58", %"class.fxcrt::RetainPtr.58"* %22, i64 0, i32 0, i32 0, i32 0, i32 0
  store %class.CFX_CSSValueList* inttoptr (i64 -6148914691236517206 to %class.CFX_CSSValueList*), %class.CFX_CSSValueList** %346, align 8
  call void @_ZN6pdfium10MakeRetainI16CFX_CSSValueListJNSt3__16vectorIN5fxcrt9RetainPtrI12CFX_CSSValueEENS2_9allocatorIS7_EEEEEEENS5_IT_EEDpOT0_(%"class.fxcrt::RetainPtr.58"* nonnull sret %22, %"class.std::__1::vector.51"* nonnull dereferenceable(24) %12)
  %347 = load i8, i8* %24, align 4
  %348 = bitcast %"class.fxcrt::RetainPtr.58"* %22 to %class.CFX_CSSValue**
  %349 = load %class.CFX_CSSValue*, %class.CFX_CSSValue** %348, align 8
  %350 = ptrtoint %class.CFX_CSSValue* %349 to i64
  %351 = bitcast %"class.fxcrt::RetainPtr"* %23 to i64*
  store i64 %350, i64* %351, align 8
  %352 = icmp eq %class.CFX_CSSValue* %349, null
  br i1 %352, label %353, label %355

353:                                              ; preds = %344
  call void @_ZN18CFX_CSSDeclaration17AddPropertyHolderE15CFX_CSSPropertyN5fxcrt9RetainPtrI12CFX_CSSValueEEb(%class.CFX_CSSDeclaration* %0, i8 zeroext %347, %"class.fxcrt::RetainPtr"* nonnull %23, i1 zeroext %4)
  %354 = getelementptr inbounds %"class.fxcrt::RetainPtr", %"class.fxcrt::RetainPtr"* %23, i64 0, i32 0, i32 0, i32 0, i32 0
  store %class.CFX_CSSValue* null, %class.CFX_CSSValue** %354, align 8
  br label %370

355:                                              ; preds = %344
  %356 = getelementptr inbounds %class.CFX_CSSValue, %class.CFX_CSSValue* %349, i64 0, i32 0, i32 1
  %357 = load i64, i64* %356, align 8
  %358 = add nsw i64 %357, 1
  store i64 %358, i64* %356, align 8
  call void @_ZN18CFX_CSSDeclaration17AddPropertyHolderE15CFX_CSSPropertyN5fxcrt9RetainPtrI12CFX_CSSValueEEb(%class.CFX_CSSDeclaration* %0, i8 zeroext %347, %"class.fxcrt::RetainPtr"* nonnull %23, i1 zeroext %4)
  %359 = getelementptr inbounds %"class.fxcrt::RetainPtr", %"class.fxcrt::RetainPtr"* %23, i64 0, i32 0, i32 0, i32 0, i32 0
  store %class.CFX_CSSValue* null, %class.CFX_CSSValue** %359, align 8
  %360 = getelementptr inbounds %class.CFX_CSSValue, %class.CFX_CSSValue* %349, i64 0, i32 0, i32 1
  %361 = load i64, i64* %360, align 8
  %362 = add nsw i64 %361, -1
  store i64 %362, i64* %360, align 8
  %363 = icmp eq i64 %362, 0
  br i1 %363, label %364, label %370

364:                                              ; preds = %355
  %365 = getelementptr inbounds %class.CFX_CSSValue, %class.CFX_CSSValue* %349, i64 0, i32 0
  %366 = bitcast %class.CFX_CSSValue* %349 to void (%"class.fxcrt::Retainable"*)***
  %367 = load void (%"class.fxcrt::Retainable"*)**, void (%"class.fxcrt::Retainable"*)*** %366, align 8
  %368 = getelementptr inbounds void (%"class.fxcrt::Retainable"*)*, void (%"class.fxcrt::Retainable"*)** %367, i64 1
  %369 = load void (%"class.fxcrt::Retainable"*)*, void (%"class.fxcrt::Retainable"*)** %368, align 8
  call void %369(%"class.fxcrt::Retainable"* nonnull %365) #14
  br label %370

370:                                              ; preds = %353, %355, %364
  %371 = load %class.CFX_CSSValueList*, %class.CFX_CSSValueList** %346, align 8
  store %class.CFX_CSSValueList* null, %class.CFX_CSSValueList** %346, align 8
  %372 = icmp eq %class.CFX_CSSValueList* %371, null
  br i1 %372, label %384, label %373

373:                                              ; preds = %370
  %374 = getelementptr inbounds %class.CFX_CSSValueList, %class.CFX_CSSValueList* %371, i64 0, i32 0, i32 0, i32 1
  %375 = load i64, i64* %374, align 8
  %376 = add nsw i64 %375, -1
  store i64 %376, i64* %374, align 8
  %377 = icmp eq i64 %376, 0
  br i1 %377, label %378, label %384

378:                                              ; preds = %373
  %379 = getelementptr inbounds %class.CFX_CSSValueList, %class.CFX_CSSValueList* %371, i64 0, i32 0, i32 0
  %380 = bitcast %class.CFX_CSSValueList* %371 to void (%"class.fxcrt::Retainable"*)***
  %381 = load void (%"class.fxcrt::Retainable"*)**, void (%"class.fxcrt::Retainable"*)*** %380, align 8
  %382 = getelementptr inbounds void (%"class.fxcrt::Retainable"*)*, void (%"class.fxcrt::Retainable"*)** %381, i64 1
  %383 = load void (%"class.fxcrt::Retainable"*)*, void (%"class.fxcrt::Retainable"*)** %382, align 8
  call void %383(%"class.fxcrt::Retainable"* nonnull %379) #14
  br label %384

384:                                              ; preds = %370, %373, %378
  call void @llvm.lifetime.end.p0i8(i64 8, i8* nonnull %345) #14
  br label %385

385:                                              ; preds = %341, %342, %343, %384
  %386 = load %"class.fxcrt::RetainPtr"*, %"class.fxcrt::RetainPtr"** %32, align 8
  br label %387

387:                                              ; preds = %385, %335
  %388 = phi %"class.fxcrt::RetainPtr"* [ %386, %385 ], [ %337, %335 ]
  %389 = icmp eq %"class.fxcrt::RetainPtr"* %388, null
  br i1 %389, label %418, label %390

390:                                              ; preds = %387
  %391 = bitcast %"class.fxcrt::RetainPtr"* %388 to i8*
  %392 = load %"class.fxcrt::RetainPtr"*, %"class.fxcrt::RetainPtr"** %33, align 8
  %393 = icmp eq %"class.fxcrt::RetainPtr"* %392, %388
  br i1 %393, label %416, label %394

394:                                              ; preds = %390, %411
  %395 = phi %"class.fxcrt::RetainPtr"* [ %396, %411 ], [ %392, %390 ]
  %396 = getelementptr inbounds %"class.fxcrt::RetainPtr", %"class.fxcrt::RetainPtr"* %395, i64 -1
  %397 = getelementptr inbounds %"class.fxcrt::RetainPtr", %"class.fxcrt::RetainPtr"* %396, i64 0, i32 0, i32 0, i32 0, i32 0
  %398 = load %class.CFX_CSSValue*, %class.CFX_CSSValue** %397, align 8
  store %class.CFX_CSSValue* null, %class.CFX_CSSValue** %397, align 8
  %399 = icmp eq %class.CFX_CSSValue* %398, null
  br i1 %399, label %411, label %400

400:                                              ; preds = %394
  %401 = getelementptr inbounds %class.CFX_CSSValue, %class.CFX_CSSValue* %398, i64 0, i32 0, i32 1
  %402 = load i64, i64* %401, align 8
  %403 = add nsw i64 %402, -1
  store i64 %403, i64* %401, align 8
  %404 = icmp eq i64 %403, 0
  br i1 %404, label %405, label %411

405:                                              ; preds = %400
  %406 = getelementptr inbounds %class.CFX_CSSValue, %class.CFX_CSSValue* %398, i64 0, i32 0
  %407 = bitcast %class.CFX_CSSValue* %398 to void (%"class.fxcrt::Retainable"*)***
  %408 = load void (%"class.fxcrt::Retainable"*)**, void (%"class.fxcrt::Retainable"*)*** %407, align 8
  %409 = getelementptr inbounds void (%"class.fxcrt::Retainable"*)*, void (%"class.fxcrt::Retainable"*)** %408, i64 1
  %410 = load void (%"class.fxcrt::Retainable"*)*, void (%"class.fxcrt::Retainable"*)** %409, align 8
  call void %410(%"class.fxcrt::Retainable"* nonnull %406) #14
  br label %411

411:                                              ; preds = %405, %400, %394
  %412 = icmp eq %"class.fxcrt::RetainPtr"* %396, %388
  br i1 %412, label %413, label %394

413:                                              ; preds = %411
  %414 = bitcast %"class.std::__1::vector.51"* %12 to i8**
  %415 = load i8*, i8** %414, align 8
  br label %416

416:                                              ; preds = %413, %390
  %417 = phi i8* [ %415, %413 ], [ %391, %390 ]
  store %"class.fxcrt::RetainPtr"* %388, %"class.fxcrt::RetainPtr"** %33, align 8
  call void @_ZdlPv(i8* %417) #15
  br label %418

418:                                              ; preds = %5, %387, %416
  call void @llvm.lifetime.end.p0i8(i64 24, i8* nonnull %31) #14
  call void @llvm.lifetime.end.p0i8(i64 1, i8* nonnull %11) #14
  call void @llvm.lifetime.end.p0i8(i64 24, i8* nonnull %28) #14
  ret void
}

; Function Attrs: nounwind ssp uwtable
define hidden void @_ZN18CFX_CSSDeclaration11AddPropertyERKN5fxcrt10WideStringES3_(%class.CFX_CSSDeclaration*, %"class.fxcrt::WideString"* dereferenceable(8), %"class.fxcrt::WideString"* dereferenceable(8)) local_unnamed_addr #2 align 2 {
  %4 = alloca %"class.std::__1::unique_ptr.3", align 8
  %5 = bitcast %"class.std::__1::unique_ptr.3"* %4 to i8*
  call void @llvm.lifetime.start.p0i8(i64 8, i8* nonnull %5) #14
  %6 = tail call i8* @_Znwm(i64 16) #15
  %7 = bitcast i8* %6 to %class.CFX_CSSCustomProperty*
  tail call void @_ZN21CFX_CSSCustomPropertyC1ERKN5fxcrt10WideStringES3_(%class.CFX_CSSCustomProperty* nonnull %7, %"class.fxcrt::WideString"* dereferenceable(8) %1, %"class.fxcrt::WideString"* dereferenceable(8) %2) #14
  %8 = getelementptr inbounds %"class.std::__1::unique_ptr.3", %"class.std::__1::unique_ptr.3"* %4, i64 0, i32 0, i32 0, i32 0
  %9 = bitcast %"class.std::__1::unique_ptr.3"* %4 to i8**
  store i8* %6, i8** %9, align 8
  %10 = getelementptr inbounds %class.CFX_CSSDeclaration, %class.CFX_CSSDeclaration* %0, i64 0, i32 1, i32 0, i32 1
  %11 = load %"class.std::__1::unique_ptr.3"*, %"class.std::__1::unique_ptr.3"** %10, align 8
  %12 = getelementptr inbounds %class.CFX_CSSDeclaration, %class.CFX_CSSDeclaration* %0, i64 0, i32 1, i32 0, i32 2, i32 0, i32 0
  %13 = load %"class.std::__1::unique_ptr.3"*, %"class.std::__1::unique_ptr.3"** %12, align 8
  %14 = icmp ult %"class.std::__1::unique_ptr.3"* %11, %13
  br i1 %14, label %15, label %21

15:                                               ; preds = %3
  %16 = ptrtoint i8* %6 to i64
  store %class.CFX_CSSCustomProperty* null, %class.CFX_CSSCustomProperty** %8, align 8
  %17 = bitcast %"class.std::__1::unique_ptr.3"* %11 to i64*
  store i64 %16, i64* %17, align 8
  %18 = getelementptr inbounds %"class.std::__1::unique_ptr.3", %"class.std::__1::unique_ptr.3"* %11, i64 1
  %19 = ptrtoint %"class.std::__1::unique_ptr.3"* %18 to i64
  %20 = bitcast %"class.std::__1::unique_ptr.3"** %10 to i64*
  store i64 %19, i64* %20, align 8
  br label %23

21:                                               ; preds = %3
  %22 = getelementptr inbounds %class.CFX_CSSDeclaration, %class.CFX_CSSDeclaration* %0, i64 0, i32 1
  call void @_ZNSt3__16vectorINS_10unique_ptrI21CFX_CSSCustomPropertyNS_14default_deleteIS2_EEEENS_9allocatorIS5_EEE21__push_back_slow_pathIS5_EEvOT_(%"class.std::__1::vector.1"* %22, %"class.std::__1::unique_ptr.3"* nonnull dereferenceable(8) %4) #14
  br label %23

23:                                               ; preds = %15, %21
  %24 = load %class.CFX_CSSCustomProperty*, %class.CFX_CSSCustomProperty** %8, align 8
  store %class.CFX_CSSCustomProperty* null, %class.CFX_CSSCustomProperty** %8, align 8
  %25 = icmp eq %class.CFX_CSSCustomProperty* %24, null
  br i1 %25, label %28, label %26

26:                                               ; preds = %23
  call void @_ZN21CFX_CSSCustomPropertyD1Ev(%class.CFX_CSSCustomProperty* nonnull %24) #14
  %27 = bitcast %class.CFX_CSSCustomProperty* %24 to i8*
  call void @_ZdlPv(i8* %27) #15
  br label %28

28:                                               ; preds = %23, %26
  call void @llvm.lifetime.end.p0i8(i64 8, i8* nonnull %5) #14
  ret void
}

declare %"struct.CFX_CSSData::PropertyValue"* @_ZN11CFX_CSSData22GetPropertyValueByNameEN5fxcrt18StringViewTemplateIwEE(%"class.fxcrt::StringViewTemplate"*) local_unnamed_addr #3

declare void @_ZN5fxcrt10WideStringC1EPKwm(%"class.fxcrt::WideString"*, i32*, i64) unnamed_addr #3

; Function Attrs: nounwind
declare void @_ZN5fxcrt10WideStringD1Ev(%"class.fxcrt::WideString"*) unnamed_addr #4

; Function Attrs: nounwind ssp uwtable
define hidden void @_ZN18CFX_CSSDeclaration18Add4ValuesPropertyERKNSt3__16vectorIN5fxcrt9RetainPtrI12CFX_CSSValueEENS0_9allocatorIS5_EEEEb15CFX_CSSPropertySB_SB_SB_(%class.CFX_CSSDeclaration*, %"class.std::__1::vector.51"* nocapture readonly dereferenceable(24), i1 zeroext, i8 zeroext, i8 zeroext, i8 zeroext, i8 zeroext) local_unnamed_addr #2 align 2 {
  %8 = alloca %"class.fxcrt::RetainPtr", align 8
  %9 = alloca %"class.fxcrt::RetainPtr", align 8
  %10 = alloca %"class.fxcrt::RetainPtr", align 8
  %11 = alloca %"class.fxcrt::RetainPtr", align 8
  %12 = alloca %"class.fxcrt::RetainPtr", align 8
  %13 = alloca %"class.fxcrt::RetainPtr", align 8
  %14 = alloca %"class.fxcrt::RetainPtr", align 8
  %15 = alloca %"class.fxcrt::RetainPtr", align 8
  %16 = alloca %"class.fxcrt::RetainPtr", align 8
  %17 = alloca %"class.fxcrt::RetainPtr", align 8
  %18 = alloca %"class.fxcrt::RetainPtr", align 8
  %19 = alloca %"class.fxcrt::RetainPtr", align 8
  %20 = alloca %"class.fxcrt::RetainPtr", align 8
  %21 = alloca %"class.fxcrt::RetainPtr", align 8
  %22 = alloca %"class.fxcrt::RetainPtr", align 8
  %23 = alloca %"class.fxcrt::RetainPtr", align 8
  %24 = getelementptr inbounds %"class.std::__1::vector.51", %"class.std::__1::vector.51"* %1, i64 0, i32 0, i32 1
  %25 = bitcast %"class.fxcrt::RetainPtr"** %24 to i64*
  %26 = load i64, i64* %25, align 8
  %27 = bitcast %"class.std::__1::vector.51"* %1 to i64*
  %28 = load i64, i64* %27, align 8
  %29 = sub i64 %26, %28
  %30 = ashr exact i64 %29, 3
  %31 = inttoptr i64 %28 to %"class.fxcrt::RetainPtr"*
  switch i64 %30, label %416 [
    i64 1, label %32
    i64 2, label %128
    i64 3, label %224
    i64 4, label %320
  ]

32:                                               ; preds = %7
  %33 = getelementptr inbounds %"class.std::__1::vector.51", %"class.std::__1::vector.51"* %1, i64 0, i32 0, i32 0
  %34 = getelementptr inbounds %"class.fxcrt::RetainPtr", %"class.fxcrt::RetainPtr"* %31, i64 0, i32 0, i32 0, i32 0, i32 0
  %35 = load %class.CFX_CSSValue*, %class.CFX_CSSValue** %34, align 8
  %36 = ptrtoint %class.CFX_CSSValue* %35 to i64
  %37 = bitcast %"class.fxcrt::RetainPtr"* %8 to i64*
  store i64 %36, i64* %37, align 8
  %38 = icmp eq %class.CFX_CSSValue* %35, null
  br i1 %38, label %39, label %41

39:                                               ; preds = %32
  call void @_ZN18CFX_CSSDeclaration17AddPropertyHolderE15CFX_CSSPropertyN5fxcrt9RetainPtrI12CFX_CSSValueEEb(%class.CFX_CSSDeclaration* %0, i8 zeroext %3, %"class.fxcrt::RetainPtr"* nonnull %8, i1 zeroext %2)
  %40 = getelementptr inbounds %"class.fxcrt::RetainPtr", %"class.fxcrt::RetainPtr"* %8, i64 0, i32 0, i32 0, i32 0, i32 0
  store %class.CFX_CSSValue* null, %class.CFX_CSSValue** %40, align 8
  br label %56

41:                                               ; preds = %32
  %42 = getelementptr inbounds %class.CFX_CSSValue, %class.CFX_CSSValue* %35, i64 0, i32 0, i32 1
  %43 = load i64, i64* %42, align 8
  %44 = add nsw i64 %43, 1
  store i64 %44, i64* %42, align 8
  call void @_ZN18CFX_CSSDeclaration17AddPropertyHolderE15CFX_CSSPropertyN5fxcrt9RetainPtrI12CFX_CSSValueEEb(%class.CFX_CSSDeclaration* %0, i8 zeroext %3, %"class.fxcrt::RetainPtr"* nonnull %8, i1 zeroext %2)
  %45 = getelementptr inbounds %"class.fxcrt::RetainPtr", %"class.fxcrt::RetainPtr"* %8, i64 0, i32 0, i32 0, i32 0, i32 0
  store %class.CFX_CSSValue* null, %class.CFX_CSSValue** %45, align 8
  %46 = getelementptr inbounds %class.CFX_CSSValue, %class.CFX_CSSValue* %35, i64 0, i32 0, i32 1
  %47 = load i64, i64* %46, align 8
  %48 = add nsw i64 %47, -1
  store i64 %48, i64* %46, align 8
  %49 = icmp eq i64 %48, 0
  br i1 %49, label %50, label %56

50:                                               ; preds = %41
  %51 = getelementptr inbounds %class.CFX_CSSValue, %class.CFX_CSSValue* %35, i64 0, i32 0
  %52 = bitcast %class.CFX_CSSValue* %35 to void (%"class.fxcrt::Retainable"*)***
  %53 = load void (%"class.fxcrt::Retainable"*)**, void (%"class.fxcrt::Retainable"*)*** %52, align 8
  %54 = getelementptr inbounds void (%"class.fxcrt::Retainable"*)*, void (%"class.fxcrt::Retainable"*)** %53, i64 1
  %55 = load void (%"class.fxcrt::Retainable"*)*, void (%"class.fxcrt::Retainable"*)** %54, align 8
  tail call void %55(%"class.fxcrt::Retainable"* nonnull %51) #14
  br label %56

56:                                               ; preds = %39, %41, %50
  %57 = load %"class.fxcrt::RetainPtr"*, %"class.fxcrt::RetainPtr"** %33, align 8
  %58 = getelementptr inbounds %"class.fxcrt::RetainPtr", %"class.fxcrt::RetainPtr"* %57, i64 0, i32 0, i32 0, i32 0, i32 0
  %59 = load %class.CFX_CSSValue*, %class.CFX_CSSValue** %58, align 8
  %60 = ptrtoint %class.CFX_CSSValue* %59 to i64
  %61 = bitcast %"class.fxcrt::RetainPtr"* %9 to i64*
  store i64 %60, i64* %61, align 8
  %62 = icmp eq %class.CFX_CSSValue* %59, null
  br i1 %62, label %63, label %65

63:                                               ; preds = %56
  call void @_ZN18CFX_CSSDeclaration17AddPropertyHolderE15CFX_CSSPropertyN5fxcrt9RetainPtrI12CFX_CSSValueEEb(%class.CFX_CSSDeclaration* %0, i8 zeroext %4, %"class.fxcrt::RetainPtr"* nonnull %9, i1 zeroext %2)
  %64 = getelementptr inbounds %"class.fxcrt::RetainPtr", %"class.fxcrt::RetainPtr"* %9, i64 0, i32 0, i32 0, i32 0, i32 0
  store %class.CFX_CSSValue* null, %class.CFX_CSSValue** %64, align 8
  br label %80

65:                                               ; preds = %56
  %66 = getelementptr inbounds %class.CFX_CSSValue, %class.CFX_CSSValue* %59, i64 0, i32 0, i32 1
  %67 = load i64, i64* %66, align 8
  %68 = add nsw i64 %67, 1
  store i64 %68, i64* %66, align 8
  call void @_ZN18CFX_CSSDeclaration17AddPropertyHolderE15CFX_CSSPropertyN5fxcrt9RetainPtrI12CFX_CSSValueEEb(%class.CFX_CSSDeclaration* %0, i8 zeroext %4, %"class.fxcrt::RetainPtr"* nonnull %9, i1 zeroext %2)
  %69 = getelementptr inbounds %"class.fxcrt::RetainPtr", %"class.fxcrt::RetainPtr"* %9, i64 0, i32 0, i32 0, i32 0, i32 0
  store %class.CFX_CSSValue* null, %class.CFX_CSSValue** %69, align 8
  %70 = getelementptr inbounds %class.CFX_CSSValue, %class.CFX_CSSValue* %59, i64 0, i32 0, i32 1
  %71 = load i64, i64* %70, align 8
  %72 = add nsw i64 %71, -1
  store i64 %72, i64* %70, align 8
  %73 = icmp eq i64 %72, 0
  br i1 %73, label %74, label %80

74:                                               ; preds = %65
  %75 = getelementptr inbounds %class.CFX_CSSValue, %class.CFX_CSSValue* %59, i64 0, i32 0
  %76 = bitcast %class.CFX_CSSValue* %59 to void (%"class.fxcrt::Retainable"*)***
  %77 = load void (%"class.fxcrt::Retainable"*)**, void (%"class.fxcrt::Retainable"*)*** %76, align 8
  %78 = getelementptr inbounds void (%"class.fxcrt::Retainable"*)*, void (%"class.fxcrt::Retainable"*)** %77, i64 1
  %79 = load void (%"class.fxcrt::Retainable"*)*, void (%"class.fxcrt::Retainable"*)** %78, align 8
  tail call void %79(%"class.fxcrt::Retainable"* nonnull %75) #14
  br label %80

80:                                               ; preds = %63, %65, %74
  %81 = load %"class.fxcrt::RetainPtr"*, %"class.fxcrt::RetainPtr"** %33, align 8
  %82 = getelementptr inbounds %"class.fxcrt::RetainPtr", %"class.fxcrt::RetainPtr"* %81, i64 0, i32 0, i32 0, i32 0, i32 0
  %83 = load %class.CFX_CSSValue*, %class.CFX_CSSValue** %82, align 8
  %84 = ptrtoint %class.CFX_CSSValue* %83 to i64
  %85 = bitcast %"class.fxcrt::RetainPtr"* %10 to i64*
  store i64 %84, i64* %85, align 8
  %86 = icmp eq %class.CFX_CSSValue* %83, null
  br i1 %86, label %87, label %89

87:                                               ; preds = %80
  call void @_ZN18CFX_CSSDeclaration17AddPropertyHolderE15CFX_CSSPropertyN5fxcrt9RetainPtrI12CFX_CSSValueEEb(%class.CFX_CSSDeclaration* %0, i8 zeroext %5, %"class.fxcrt::RetainPtr"* nonnull %10, i1 zeroext %2)
  %88 = getelementptr inbounds %"class.fxcrt::RetainPtr", %"class.fxcrt::RetainPtr"* %10, i64 0, i32 0, i32 0, i32 0, i32 0
  store %class.CFX_CSSValue* null, %class.CFX_CSSValue** %88, align 8
  br label %104

89:                                               ; preds = %80
  %90 = getelementptr inbounds %class.CFX_CSSValue, %class.CFX_CSSValue* %83, i64 0, i32 0, i32 1
  %91 = load i64, i64* %90, align 8
  %92 = add nsw i64 %91, 1
  store i64 %92, i64* %90, align 8
  call void @_ZN18CFX_CSSDeclaration17AddPropertyHolderE15CFX_CSSPropertyN5fxcrt9RetainPtrI12CFX_CSSValueEEb(%class.CFX_CSSDeclaration* %0, i8 zeroext %5, %"class.fxcrt::RetainPtr"* nonnull %10, i1 zeroext %2)
  %93 = getelementptr inbounds %"class.fxcrt::RetainPtr", %"class.fxcrt::RetainPtr"* %10, i64 0, i32 0, i32 0, i32 0, i32 0
  store %class.CFX_CSSValue* null, %class.CFX_CSSValue** %93, align 8
  %94 = getelementptr inbounds %class.CFX_CSSValue, %class.CFX_CSSValue* %83, i64 0, i32 0, i32 1
  %95 = load i64, i64* %94, align 8
  %96 = add nsw i64 %95, -1
  store i64 %96, i64* %94, align 8
  %97 = icmp eq i64 %96, 0
  br i1 %97, label %98, label %104

98:                                               ; preds = %89
  %99 = getelementptr inbounds %class.CFX_CSSValue, %class.CFX_CSSValue* %83, i64 0, i32 0
  %100 = bitcast %class.CFX_CSSValue* %83 to void (%"class.fxcrt::Retainable"*)***
  %101 = load void (%"class.fxcrt::Retainable"*)**, void (%"class.fxcrt::Retainable"*)*** %100, align 8
  %102 = getelementptr inbounds void (%"class.fxcrt::Retainable"*)*, void (%"class.fxcrt::Retainable"*)** %101, i64 1
  %103 = load void (%"class.fxcrt::Retainable"*)*, void (%"class.fxcrt::Retainable"*)** %102, align 8
  tail call void %103(%"class.fxcrt::Retainable"* nonnull %99) #14
  br label %104

104:                                              ; preds = %87, %89, %98
  %105 = load %"class.fxcrt::RetainPtr"*, %"class.fxcrt::RetainPtr"** %33, align 8
  %106 = getelementptr inbounds %"class.fxcrt::RetainPtr", %"class.fxcrt::RetainPtr"* %105, i64 0, i32 0, i32 0, i32 0, i32 0
  %107 = load %class.CFX_CSSValue*, %class.CFX_CSSValue** %106, align 8
  %108 = ptrtoint %class.CFX_CSSValue* %107 to i64
  %109 = bitcast %"class.fxcrt::RetainPtr"* %11 to i64*
  store i64 %108, i64* %109, align 8
  %110 = icmp eq %class.CFX_CSSValue* %107, null
  br i1 %110, label %111, label %113

111:                                              ; preds = %104
  call void @_ZN18CFX_CSSDeclaration17AddPropertyHolderE15CFX_CSSPropertyN5fxcrt9RetainPtrI12CFX_CSSValueEEb(%class.CFX_CSSDeclaration* %0, i8 zeroext %6, %"class.fxcrt::RetainPtr"* nonnull %11, i1 zeroext %2)
  %112 = getelementptr inbounds %"class.fxcrt::RetainPtr", %"class.fxcrt::RetainPtr"* %11, i64 0, i32 0, i32 0, i32 0, i32 0
  store %class.CFX_CSSValue* null, %class.CFX_CSSValue** %112, align 8
  br label %416

113:                                              ; preds = %104
  %114 = getelementptr inbounds %class.CFX_CSSValue, %class.CFX_CSSValue* %107, i64 0, i32 0, i32 1
  %115 = load i64, i64* %114, align 8
  %116 = add nsw i64 %115, 1
  store i64 %116, i64* %114, align 8
  call void @_ZN18CFX_CSSDeclaration17AddPropertyHolderE15CFX_CSSPropertyN5fxcrt9RetainPtrI12CFX_CSSValueEEb(%class.CFX_CSSDeclaration* %0, i8 zeroext %6, %"class.fxcrt::RetainPtr"* nonnull %11, i1 zeroext %2)
  %117 = getelementptr inbounds %"class.fxcrt::RetainPtr", %"class.fxcrt::RetainPtr"* %11, i64 0, i32 0, i32 0, i32 0, i32 0
  store %class.CFX_CSSValue* null, %class.CFX_CSSValue** %117, align 8
  %118 = getelementptr inbounds %class.CFX_CSSValue, %class.CFX_CSSValue* %107, i64 0, i32 0, i32 1
  %119 = load i64, i64* %118, align 8
  %120 = add nsw i64 %119, -1
  store i64 %120, i64* %118, align 8
  %121 = icmp eq i64 %120, 0
  br i1 %121, label %122, label %416

122:                                              ; preds = %113
  %123 = getelementptr inbounds %class.CFX_CSSValue, %class.CFX_CSSValue* %107, i64 0, i32 0
  %124 = bitcast %class.CFX_CSSValue* %107 to void (%"class.fxcrt::Retainable"*)***
  %125 = load void (%"class.fxcrt::Retainable"*)**, void (%"class.fxcrt::Retainable"*)*** %124, align 8
  %126 = getelementptr inbounds void (%"class.fxcrt::Retainable"*)*, void (%"class.fxcrt::Retainable"*)** %125, i64 1
  %127 = load void (%"class.fxcrt::Retainable"*)*, void (%"class.fxcrt::Retainable"*)** %126, align 8
  tail call void %127(%"class.fxcrt::Retainable"* nonnull %123) #14
  br label %416

128:                                              ; preds = %7
  %129 = getelementptr inbounds %"class.std::__1::vector.51", %"class.std::__1::vector.51"* %1, i64 0, i32 0, i32 0
  %130 = getelementptr inbounds %"class.fxcrt::RetainPtr", %"class.fxcrt::RetainPtr"* %31, i64 1, i32 0, i32 0, i32 0, i32 0
  %131 = load %class.CFX_CSSValue*, %class.CFX_CSSValue** %130, align 8
  %132 = ptrtoint %class.CFX_CSSValue* %131 to i64
  %133 = bitcast %"class.fxcrt::RetainPtr"* %12 to i64*
  store i64 %132, i64* %133, align 8
  %134 = icmp eq %class.CFX_CSSValue* %131, null
  br i1 %134, label %135, label %137

135:                                              ; preds = %128
  call void @_ZN18CFX_CSSDeclaration17AddPropertyHolderE15CFX_CSSPropertyN5fxcrt9RetainPtrI12CFX_CSSValueEEb(%class.CFX_CSSDeclaration* %0, i8 zeroext %3, %"class.fxcrt::RetainPtr"* nonnull %12, i1 zeroext %2)
  %136 = getelementptr inbounds %"class.fxcrt::RetainPtr", %"class.fxcrt::RetainPtr"* %12, i64 0, i32 0, i32 0, i32 0, i32 0
  store %class.CFX_CSSValue* null, %class.CFX_CSSValue** %136, align 8
  br label %152

137:                                              ; preds = %128
  %138 = getelementptr inbounds %class.CFX_CSSValue, %class.CFX_CSSValue* %131, i64 0, i32 0, i32 1
  %139 = load i64, i64* %138, align 8
  %140 = add nsw i64 %139, 1
  store i64 %140, i64* %138, align 8
  call void @_ZN18CFX_CSSDeclaration17AddPropertyHolderE15CFX_CSSPropertyN5fxcrt9RetainPtrI12CFX_CSSValueEEb(%class.CFX_CSSDeclaration* %0, i8 zeroext %3, %"class.fxcrt::RetainPtr"* nonnull %12, i1 zeroext %2)
  %141 = getelementptr inbounds %"class.fxcrt::RetainPtr", %"class.fxcrt::RetainPtr"* %12, i64 0, i32 0, i32 0, i32 0, i32 0
  store %class.CFX_CSSValue* null, %class.CFX_CSSValue** %141, align 8
  %142 = getelementptr inbounds %class.CFX_CSSValue, %class.CFX_CSSValue* %131, i64 0, i32 0, i32 1
  %143 = load i64, i64* %142, align 8
  %144 = add nsw i64 %143, -1
  store i64 %144, i64* %142, align 8
  %145 = icmp eq i64 %144, 0
  br i1 %145, label %146, label %152

146:                                              ; preds = %137
  %147 = getelementptr inbounds %class.CFX_CSSValue, %class.CFX_CSSValue* %131, i64 0, i32 0
  %148 = bitcast %class.CFX_CSSValue* %131 to void (%"class.fxcrt::Retainable"*)***
  %149 = load void (%"class.fxcrt::Retainable"*)**, void (%"class.fxcrt::Retainable"*)*** %148, align 8
  %150 = getelementptr inbounds void (%"class.fxcrt::Retainable"*)*, void (%"class.fxcrt::Retainable"*)** %149, i64 1
  %151 = load void (%"class.fxcrt::Retainable"*)*, void (%"class.fxcrt::Retainable"*)** %150, align 8
  tail call void %151(%"class.fxcrt::Retainable"* nonnull %147) #14
  br label %152

152:                                              ; preds = %135, %137, %146
  %153 = load %"class.fxcrt::RetainPtr"*, %"class.fxcrt::RetainPtr"** %129, align 8
  %154 = getelementptr inbounds %"class.fxcrt::RetainPtr", %"class.fxcrt::RetainPtr"* %153, i64 0, i32 0, i32 0, i32 0, i32 0
  %155 = load %class.CFX_CSSValue*, %class.CFX_CSSValue** %154, align 8
  %156 = ptrtoint %class.CFX_CSSValue* %155 to i64
  %157 = bitcast %"class.fxcrt::RetainPtr"* %13 to i64*
  store i64 %156, i64* %157, align 8
  %158 = icmp eq %class.CFX_CSSValue* %155, null
  br i1 %158, label %159, label %161

159:                                              ; preds = %152
  call void @_ZN18CFX_CSSDeclaration17AddPropertyHolderE15CFX_CSSPropertyN5fxcrt9RetainPtrI12CFX_CSSValueEEb(%class.CFX_CSSDeclaration* %0, i8 zeroext %4, %"class.fxcrt::RetainPtr"* nonnull %13, i1 zeroext %2)
  %160 = getelementptr inbounds %"class.fxcrt::RetainPtr", %"class.fxcrt::RetainPtr"* %13, i64 0, i32 0, i32 0, i32 0, i32 0
  store %class.CFX_CSSValue* null, %class.CFX_CSSValue** %160, align 8
  br label %176

161:                                              ; preds = %152
  %162 = getelementptr inbounds %class.CFX_CSSValue, %class.CFX_CSSValue* %155, i64 0, i32 0, i32 1
  %163 = load i64, i64* %162, align 8
  %164 = add nsw i64 %163, 1
  store i64 %164, i64* %162, align 8
  call void @_ZN18CFX_CSSDeclaration17AddPropertyHolderE15CFX_CSSPropertyN5fxcrt9RetainPtrI12CFX_CSSValueEEb(%class.CFX_CSSDeclaration* %0, i8 zeroext %4, %"class.fxcrt::RetainPtr"* nonnull %13, i1 zeroext %2)
  %165 = getelementptr inbounds %"class.fxcrt::RetainPtr", %"class.fxcrt::RetainPtr"* %13, i64 0, i32 0, i32 0, i32 0, i32 0
  store %class.CFX_CSSValue* null, %class.CFX_CSSValue** %165, align 8
  %166 = getelementptr inbounds %class.CFX_CSSValue, %class.CFX_CSSValue* %155, i64 0, i32 0, i32 1
  %167 = load i64, i64* %166, align 8
  %168 = add nsw i64 %167, -1
  store i64 %168, i64* %166, align 8
  %169 = icmp eq i64 %168, 0
  br i1 %169, label %170, label %176

170:                                              ; preds = %161
  %171 = getelementptr inbounds %class.CFX_CSSValue, %class.CFX_CSSValue* %155, i64 0, i32 0
  %172 = bitcast %class.CFX_CSSValue* %155 to void (%"class.fxcrt::Retainable"*)***
  %173 = load void (%"class.fxcrt::Retainable"*)**, void (%"class.fxcrt::Retainable"*)*** %172, align 8
  %174 = getelementptr inbounds void (%"class.fxcrt::Retainable"*)*, void (%"class.fxcrt::Retainable"*)** %173, i64 1
  %175 = load void (%"class.fxcrt::Retainable"*)*, void (%"class.fxcrt::Retainable"*)** %174, align 8
  tail call void %175(%"class.fxcrt::Retainable"* nonnull %171) #14
  br label %176

176:                                              ; preds = %159, %161, %170
  %177 = load %"class.fxcrt::RetainPtr"*, %"class.fxcrt::RetainPtr"** %129, align 8
  %178 = getelementptr inbounds %"class.fxcrt::RetainPtr", %"class.fxcrt::RetainPtr"* %177, i64 1, i32 0, i32 0, i32 0, i32 0
  %179 = load %class.CFX_CSSValue*, %class.CFX_CSSValue** %178, align 8
  %180 = ptrtoint %class.CFX_CSSValue* %179 to i64
  %181 = bitcast %"class.fxcrt::RetainPtr"* %14 to i64*
  store i64 %180, i64* %181, align 8
  %182 = icmp eq %class.CFX_CSSValue* %179, null
  br i1 %182, label %183, label %185

183:                                              ; preds = %176
  call void @_ZN18CFX_CSSDeclaration17AddPropertyHolderE15CFX_CSSPropertyN5fxcrt9RetainPtrI12CFX_CSSValueEEb(%class.CFX_CSSDeclaration* %0, i8 zeroext %5, %"class.fxcrt::RetainPtr"* nonnull %14, i1 zeroext %2)
  %184 = getelementptr inbounds %"class.fxcrt::RetainPtr", %"class.fxcrt::RetainPtr"* %14, i64 0, i32 0, i32 0, i32 0, i32 0
  store %class.CFX_CSSValue* null, %class.CFX_CSSValue** %184, align 8
  br label %200

185:                                              ; preds = %176
  %186 = getelementptr inbounds %class.CFX_CSSValue, %class.CFX_CSSValue* %179, i64 0, i32 0, i32 1
  %187 = load i64, i64* %186, align 8
  %188 = add nsw i64 %187, 1
  store i64 %188, i64* %186, align 8
  call void @_ZN18CFX_CSSDeclaration17AddPropertyHolderE15CFX_CSSPropertyN5fxcrt9RetainPtrI12CFX_CSSValueEEb(%class.CFX_CSSDeclaration* %0, i8 zeroext %5, %"class.fxcrt::RetainPtr"* nonnull %14, i1 zeroext %2)
  %189 = getelementptr inbounds %"class.fxcrt::RetainPtr", %"class.fxcrt::RetainPtr"* %14, i64 0, i32 0, i32 0, i32 0, i32 0
  store %class.CFX_CSSValue* null, %class.CFX_CSSValue** %189, align 8
  %190 = getelementptr inbounds %class.CFX_CSSValue, %class.CFX_CSSValue* %179, i64 0, i32 0, i32 1
  %191 = load i64, i64* %190, align 8
  %192 = add nsw i64 %191, -1
  store i64 %192, i64* %190, align 8
  %193 = icmp eq i64 %192, 0
  br i1 %193, label %194, label %200

194:                                              ; preds = %185
  %195 = getelementptr inbounds %class.CFX_CSSValue, %class.CFX_CSSValue* %179, i64 0, i32 0
  %196 = bitcast %class.CFX_CSSValue* %179 to void (%"class.fxcrt::Retainable"*)***
  %197 = load void (%"class.fxcrt::Retainable"*)**, void (%"class.fxcrt::Retainable"*)*** %196, align 8
  %198 = getelementptr inbounds void (%"class.fxcrt::Retainable"*)*, void (%"class.fxcrt::Retainable"*)** %197, i64 1
  %199 = load void (%"class.fxcrt::Retainable"*)*, void (%"class.fxcrt::Retainable"*)** %198, align 8
  tail call void %199(%"class.fxcrt::Retainable"* nonnull %195) #14
  br label %200

200:                                              ; preds = %183, %185, %194
  %201 = load %"class.fxcrt::RetainPtr"*, %"class.fxcrt::RetainPtr"** %129, align 8
  %202 = getelementptr inbounds %"class.fxcrt::RetainPtr", %"class.fxcrt::RetainPtr"* %201, i64 0, i32 0, i32 0, i32 0, i32 0
  %203 = load %class.CFX_CSSValue*, %class.CFX_CSSValue** %202, align 8
  %204 = ptrtoint %class.CFX_CSSValue* %203 to i64
  %205 = bitcast %"class.fxcrt::RetainPtr"* %15 to i64*
  store i64 %204, i64* %205, align 8
  %206 = icmp eq %class.CFX_CSSValue* %203, null
  br i1 %206, label %207, label %209

207:                                              ; preds = %200
  call void @_ZN18CFX_CSSDeclaration17AddPropertyHolderE15CFX_CSSPropertyN5fxcrt9RetainPtrI12CFX_CSSValueEEb(%class.CFX_CSSDeclaration* %0, i8 zeroext %6, %"class.fxcrt::RetainPtr"* nonnull %15, i1 zeroext %2)
  %208 = getelementptr inbounds %"class.fxcrt::RetainPtr", %"class.fxcrt::RetainPtr"* %15, i64 0, i32 0, i32 0, i32 0, i32 0
  store %class.CFX_CSSValue* null, %class.CFX_CSSValue** %208, align 8
  br label %416

209:                                              ; preds = %200
  %210 = getelementptr inbounds %class.CFX_CSSValue, %class.CFX_CSSValue* %203, i64 0, i32 0, i32 1
  %211 = load i64, i64* %210, align 8
  %212 = add nsw i64 %211, 1
  store i64 %212, i64* %210, align 8
  call void @_ZN18CFX_CSSDeclaration17AddPropertyHolderE15CFX_CSSPropertyN5fxcrt9RetainPtrI12CFX_CSSValueEEb(%class.CFX_CSSDeclaration* %0, i8 zeroext %6, %"class.fxcrt::RetainPtr"* nonnull %15, i1 zeroext %2)
  %213 = getelementptr inbounds %"class.fxcrt::RetainPtr", %"class.fxcrt::RetainPtr"* %15, i64 0, i32 0, i32 0, i32 0, i32 0
  store %class.CFX_CSSValue* null, %class.CFX_CSSValue** %213, align 8
  %214 = getelementptr inbounds %class.CFX_CSSValue, %class.CFX_CSSValue* %203, i64 0, i32 0, i32 1
  %215 = load i64, i64* %214, align 8
  %216 = add nsw i64 %215, -1
  store i64 %216, i64* %214, align 8
  %217 = icmp eq i64 %216, 0
  br i1 %217, label %218, label %416

218:                                              ; preds = %209
  %219 = getelementptr inbounds %class.CFX_CSSValue, %class.CFX_CSSValue* %203, i64 0, i32 0
  %220 = bitcast %class.CFX_CSSValue* %203 to void (%"class.fxcrt::Retainable"*)***
  %221 = load void (%"class.fxcrt::Retainable"*)**, void (%"class.fxcrt::Retainable"*)*** %220, align 8
  %222 = getelementptr inbounds void (%"class.fxcrt::Retainable"*)*, void (%"class.fxcrt::Retainable"*)** %221, i64 1
  %223 = load void (%"class.fxcrt::Retainable"*)*, void (%"class.fxcrt::Retainable"*)** %222, align 8
  tail call void %223(%"class.fxcrt::Retainable"* nonnull %219) #14
  br label %416

224:                                              ; preds = %7
  %225 = getelementptr inbounds %"class.std::__1::vector.51", %"class.std::__1::vector.51"* %1, i64 0, i32 0, i32 0
  %226 = getelementptr inbounds %"class.fxcrt::RetainPtr", %"class.fxcrt::RetainPtr"* %31, i64 1, i32 0, i32 0, i32 0, i32 0
  %227 = load %class.CFX_CSSValue*, %class.CFX_CSSValue** %226, align 8
  %228 = ptrtoint %class.CFX_CSSValue* %227 to i64
  %229 = bitcast %"class.fxcrt::RetainPtr"* %16 to i64*
  store i64 %228, i64* %229, align 8
  %230 = icmp eq %class.CFX_CSSValue* %227, null
  br i1 %230, label %231, label %233

231:                                              ; preds = %224
  call void @_ZN18CFX_CSSDeclaration17AddPropertyHolderE15CFX_CSSPropertyN5fxcrt9RetainPtrI12CFX_CSSValueEEb(%class.CFX_CSSDeclaration* %0, i8 zeroext %3, %"class.fxcrt::RetainPtr"* nonnull %16, i1 zeroext %2)
  %232 = getelementptr inbounds %"class.fxcrt::RetainPtr", %"class.fxcrt::RetainPtr"* %16, i64 0, i32 0, i32 0, i32 0, i32 0
  store %class.CFX_CSSValue* null, %class.CFX_CSSValue** %232, align 8
  br label %248

233:                                              ; preds = %224
  %234 = getelementptr inbounds %class.CFX_CSSValue, %class.CFX_CSSValue* %227, i64 0, i32 0, i32 1
  %235 = load i64, i64* %234, align 8
  %236 = add nsw i64 %235, 1
  store i64 %236, i64* %234, align 8
  call void @_ZN18CFX_CSSDeclaration17AddPropertyHolderE15CFX_CSSPropertyN5fxcrt9RetainPtrI12CFX_CSSValueEEb(%class.CFX_CSSDeclaration* %0, i8 zeroext %3, %"class.fxcrt::RetainPtr"* nonnull %16, i1 zeroext %2)
  %237 = getelementptr inbounds %"class.fxcrt::RetainPtr", %"class.fxcrt::RetainPtr"* %16, i64 0, i32 0, i32 0, i32 0, i32 0
  store %class.CFX_CSSValue* null, %class.CFX_CSSValue** %237, align 8
  %238 = getelementptr inbounds %class.CFX_CSSValue, %class.CFX_CSSValue* %227, i64 0, i32 0, i32 1
  %239 = load i64, i64* %238, align 8
  %240 = add nsw i64 %239, -1
  store i64 %240, i64* %238, align 8
  %241 = icmp eq i64 %240, 0
  br i1 %241, label %242, label %248

242:                                              ; preds = %233
  %243 = getelementptr inbounds %class.CFX_CSSValue, %class.CFX_CSSValue* %227, i64 0, i32 0
  %244 = bitcast %class.CFX_CSSValue* %227 to void (%"class.fxcrt::Retainable"*)***
  %245 = load void (%"class.fxcrt::Retainable"*)**, void (%"class.fxcrt::Retainable"*)*** %244, align 8
  %246 = getelementptr inbounds void (%"class.fxcrt::Retainable"*)*, void (%"class.fxcrt::Retainable"*)** %245, i64 1
  %247 = load void (%"class.fxcrt::Retainable"*)*, void (%"class.fxcrt::Retainable"*)** %246, align 8
  tail call void %247(%"class.fxcrt::Retainable"* nonnull %243) #14
  br label %248

248:                                              ; preds = %231, %233, %242
  %249 = load %"class.fxcrt::RetainPtr"*, %"class.fxcrt::RetainPtr"** %225, align 8
  %250 = getelementptr inbounds %"class.fxcrt::RetainPtr", %"class.fxcrt::RetainPtr"* %249, i64 0, i32 0, i32 0, i32 0, i32 0
  %251 = load %class.CFX_CSSValue*, %class.CFX_CSSValue** %250, align 8
  %252 = ptrtoint %class.CFX_CSSValue* %251 to i64
  %253 = bitcast %"class.fxcrt::RetainPtr"* %17 to i64*
  store i64 %252, i64* %253, align 8
  %254 = icmp eq %class.CFX_CSSValue* %251, null
  br i1 %254, label %255, label %257

255:                                              ; preds = %248
  call void @_ZN18CFX_CSSDeclaration17AddPropertyHolderE15CFX_CSSPropertyN5fxcrt9RetainPtrI12CFX_CSSValueEEb(%class.CFX_CSSDeclaration* %0, i8 zeroext %4, %"class.fxcrt::RetainPtr"* nonnull %17, i1 zeroext %2)
  %256 = getelementptr inbounds %"class.fxcrt::RetainPtr", %"class.fxcrt::RetainPtr"* %17, i64 0, i32 0, i32 0, i32 0, i32 0
  store %class.CFX_CSSValue* null, %class.CFX_CSSValue** %256, align 8
  br label %272

257:                                              ; preds = %248
  %258 = getelementptr inbounds %class.CFX_CSSValue, %class.CFX_CSSValue* %251, i64 0, i32 0, i32 1
  %259 = load i64, i64* %258, align 8
  %260 = add nsw i64 %259, 1
  store i64 %260, i64* %258, align 8
  call void @_ZN18CFX_CSSDeclaration17AddPropertyHolderE15CFX_CSSPropertyN5fxcrt9RetainPtrI12CFX_CSSValueEEb(%class.CFX_CSSDeclaration* %0, i8 zeroext %4, %"class.fxcrt::RetainPtr"* nonnull %17, i1 zeroext %2)
  %261 = getelementptr inbounds %"class.fxcrt::RetainPtr", %"class.fxcrt::RetainPtr"* %17, i64 0, i32 0, i32 0, i32 0, i32 0
  store %class.CFX_CSSValue* null, %class.CFX_CSSValue** %261, align 8
  %262 = getelementptr inbounds %class.CFX_CSSValue, %class.CFX_CSSValue* %251, i64 0, i32 0, i32 1
  %263 = load i64, i64* %262, align 8
  %264 = add nsw i64 %263, -1
  store i64 %264, i64* %262, align 8
  %265 = icmp eq i64 %264, 0
  br i1 %265, label %266, label %272

266:                                              ; preds = %257
  %267 = getelementptr inbounds %class.CFX_CSSValue, %class.CFX_CSSValue* %251, i64 0, i32 0
  %268 = bitcast %class.CFX_CSSValue* %251 to void (%"class.fxcrt::Retainable"*)***
  %269 = load void (%"class.fxcrt::Retainable"*)**, void (%"class.fxcrt::Retainable"*)*** %268, align 8
  %270 = getelementptr inbounds void (%"class.fxcrt::Retainable"*)*, void (%"class.fxcrt::Retainable"*)** %269, i64 1
  %271 = load void (%"class.fxcrt::Retainable"*)*, void (%"class.fxcrt::Retainable"*)** %270, align 8
  tail call void %271(%"class.fxcrt::Retainable"* nonnull %267) #14
  br label %272

272:                                              ; preds = %255, %257, %266
  %273 = load %"class.fxcrt::RetainPtr"*, %"class.fxcrt::RetainPtr"** %225, align 8
  %274 = getelementptr inbounds %"class.fxcrt::RetainPtr", %"class.fxcrt::RetainPtr"* %273, i64 1, i32 0, i32 0, i32 0, i32 0
  %275 = load %class.CFX_CSSValue*, %class.CFX_CSSValue** %274, align 8
  %276 = ptrtoint %class.CFX_CSSValue* %275 to i64
  %277 = bitcast %"class.fxcrt::RetainPtr"* %18 to i64*
  store i64 %276, i64* %277, align 8
  %278 = icmp eq %class.CFX_CSSValue* %275, null
  br i1 %278, label %279, label %281

279:                                              ; preds = %272
  call void @_ZN18CFX_CSSDeclaration17AddPropertyHolderE15CFX_CSSPropertyN5fxcrt9RetainPtrI12CFX_CSSValueEEb(%class.CFX_CSSDeclaration* %0, i8 zeroext %5, %"class.fxcrt::RetainPtr"* nonnull %18, i1 zeroext %2)
  %280 = getelementptr inbounds %"class.fxcrt::RetainPtr", %"class.fxcrt::RetainPtr"* %18, i64 0, i32 0, i32 0, i32 0, i32 0
  store %class.CFX_CSSValue* null, %class.CFX_CSSValue** %280, align 8
  br label %296

281:                                              ; preds = %272
  %282 = getelementptr inbounds %class.CFX_CSSValue, %class.CFX_CSSValue* %275, i64 0, i32 0, i32 1
  %283 = load i64, i64* %282, align 8
  %284 = add nsw i64 %283, 1
  store i64 %284, i64* %282, align 8
  call void @_ZN18CFX_CSSDeclaration17AddPropertyHolderE15CFX_CSSPropertyN5fxcrt9RetainPtrI12CFX_CSSValueEEb(%class.CFX_CSSDeclaration* %0, i8 zeroext %5, %"class.fxcrt::RetainPtr"* nonnull %18, i1 zeroext %2)
  %285 = getelementptr inbounds %"class.fxcrt::RetainPtr", %"class.fxcrt::RetainPtr"* %18, i64 0, i32 0, i32 0, i32 0, i32 0
  store %class.CFX_CSSValue* null, %class.CFX_CSSValue** %285, align 8
  %286 = getelementptr inbounds %class.CFX_CSSValue, %class.CFX_CSSValue* %275, i64 0, i32 0, i32 1
  %287 = load i64, i64* %286, align 8
  %288 = add nsw i64 %287, -1
  store i64 %288, i64* %286, align 8
  %289 = icmp eq i64 %288, 0
  br i1 %289, label %290, label %296

290:                                              ; preds = %281
  %291 = getelementptr inbounds %class.CFX_CSSValue, %class.CFX_CSSValue* %275, i64 0, i32 0
  %292 = bitcast %class.CFX_CSSValue* %275 to void (%"class.fxcrt::Retainable"*)***
  %293 = load void (%"class.fxcrt::Retainable"*)**, void (%"class.fxcrt::Retainable"*)*** %292, align 8
  %294 = getelementptr inbounds void (%"class.fxcrt::Retainable"*)*, void (%"class.fxcrt::Retainable"*)** %293, i64 1
  %295 = load void (%"class.fxcrt::Retainable"*)*, void (%"class.fxcrt::Retainable"*)** %294, align 8
  tail call void %295(%"class.fxcrt::Retainable"* nonnull %291) #14
  br label %296

296:                                              ; preds = %279, %281, %290
  %297 = load %"class.fxcrt::RetainPtr"*, %"class.fxcrt::RetainPtr"** %225, align 8
  %298 = getelementptr inbounds %"class.fxcrt::RetainPtr", %"class.fxcrt::RetainPtr"* %297, i64 2, i32 0, i32 0, i32 0, i32 0
  %299 = load %class.CFX_CSSValue*, %class.CFX_CSSValue** %298, align 8
  %300 = ptrtoint %class.CFX_CSSValue* %299 to i64
  %301 = bitcast %"class.fxcrt::RetainPtr"* %19 to i64*
  store i64 %300, i64* %301, align 8
  %302 = icmp eq %class.CFX_CSSValue* %299, null
  br i1 %302, label %303, label %305

303:                                              ; preds = %296
  call void @_ZN18CFX_CSSDeclaration17AddPropertyHolderE15CFX_CSSPropertyN5fxcrt9RetainPtrI12CFX_CSSValueEEb(%class.CFX_CSSDeclaration* %0, i8 zeroext %6, %"class.fxcrt::RetainPtr"* nonnull %19, i1 zeroext %2)
  %304 = getelementptr inbounds %"class.fxcrt::RetainPtr", %"class.fxcrt::RetainPtr"* %19, i64 0, i32 0, i32 0, i32 0, i32 0
  store %class.CFX_CSSValue* null, %class.CFX_CSSValue** %304, align 8
  br label %416

305:                                              ; preds = %296
  %306 = getelementptr inbounds %class.CFX_CSSValue, %class.CFX_CSSValue* %299, i64 0, i32 0, i32 1
  %307 = load i64, i64* %306, align 8
  %308 = add nsw i64 %307, 1
  store i64 %308, i64* %306, align 8
  call void @_ZN18CFX_CSSDeclaration17AddPropertyHolderE15CFX_CSSPropertyN5fxcrt9RetainPtrI12CFX_CSSValueEEb(%class.CFX_CSSDeclaration* %0, i8 zeroext %6, %"class.fxcrt::RetainPtr"* nonnull %19, i1 zeroext %2)
  %309 = getelementptr inbounds %"class.fxcrt::RetainPtr", %"class.fxcrt::RetainPtr"* %19, i64 0, i32 0, i32 0, i32 0, i32 0
  store %class.CFX_CSSValue* null, %class.CFX_CSSValue** %309, align 8
  %310 = getelementptr inbounds %class.CFX_CSSValue, %class.CFX_CSSValue* %299, i64 0, i32 0, i32 1
  %311 = load i64, i64* %310, align 8
  %312 = add nsw i64 %311, -1
  store i64 %312, i64* %310, align 8
  %313 = icmp eq i64 %312, 0
  br i1 %313, label %314, label %416

314:                                              ; preds = %305
  %315 = getelementptr inbounds %class.CFX_CSSValue, %class.CFX_CSSValue* %299, i64 0, i32 0
  %316 = bitcast %class.CFX_CSSValue* %299 to void (%"class.fxcrt::Retainable"*)***
  %317 = load void (%"class.fxcrt::Retainable"*)**, void (%"class.fxcrt::Retainable"*)*** %316, align 8
  %318 = getelementptr inbounds void (%"class.fxcrt::Retainable"*)*, void (%"class.fxcrt::Retainable"*)** %317, i64 1
  %319 = load void (%"class.fxcrt::Retainable"*)*, void (%"class.fxcrt::Retainable"*)** %318, align 8
  tail call void %319(%"class.fxcrt::Retainable"* nonnull %315) #14
  br label %416

320:                                              ; preds = %7
  %321 = getelementptr inbounds %"class.std::__1::vector.51", %"class.std::__1::vector.51"* %1, i64 0, i32 0, i32 0
  %322 = getelementptr inbounds %"class.fxcrt::RetainPtr", %"class.fxcrt::RetainPtr"* %31, i64 3, i32 0, i32 0, i32 0, i32 0
  %323 = load %class.CFX_CSSValue*, %class.CFX_CSSValue** %322, align 8
  %324 = ptrtoint %class.CFX_CSSValue* %323 to i64
  %325 = bitcast %"class.fxcrt::RetainPtr"* %20 to i64*
  store i64 %324, i64* %325, align 8
  %326 = icmp eq %class.CFX_CSSValue* %323, null
  br i1 %326, label %327, label %329

327:                                              ; preds = %320
  call void @_ZN18CFX_CSSDeclaration17AddPropertyHolderE15CFX_CSSPropertyN5fxcrt9RetainPtrI12CFX_CSSValueEEb(%class.CFX_CSSDeclaration* %0, i8 zeroext %3, %"class.fxcrt::RetainPtr"* nonnull %20, i1 zeroext %2)
  %328 = getelementptr inbounds %"class.fxcrt::RetainPtr", %"class.fxcrt::RetainPtr"* %20, i64 0, i32 0, i32 0, i32 0, i32 0
  store %class.CFX_CSSValue* null, %class.CFX_CSSValue** %328, align 8
  br label %344

329:                                              ; preds = %320
  %330 = getelementptr inbounds %class.CFX_CSSValue, %class.CFX_CSSValue* %323, i64 0, i32 0, i32 1
  %331 = load i64, i64* %330, align 8
  %332 = add nsw i64 %331, 1
  store i64 %332, i64* %330, align 8
  call void @_ZN18CFX_CSSDeclaration17AddPropertyHolderE15CFX_CSSPropertyN5fxcrt9RetainPtrI12CFX_CSSValueEEb(%class.CFX_CSSDeclaration* %0, i8 zeroext %3, %"class.fxcrt::RetainPtr"* nonnull %20, i1 zeroext %2)
  %333 = getelementptr inbounds %"class.fxcrt::RetainPtr", %"class.fxcrt::RetainPtr"* %20, i64 0, i32 0, i32 0, i32 0, i32 0
  store %class.CFX_CSSValue* null, %class.CFX_CSSValue** %333, align 8
  %334 = getelementptr inbounds %class.CFX_CSSValue, %class.CFX_CSSValue* %323, i64 0, i32 0, i32 1
  %335 = load i64, i64* %334, align 8
  %336 = add nsw i64 %335, -1
  store i64 %336, i64* %334, align 8
  %337 = icmp eq i64 %336, 0
  br i1 %337, label %338, label %344

338:                                              ; preds = %329
  %339 = getelementptr inbounds %class.CFX_CSSValue, %class.CFX_CSSValue* %323, i64 0, i32 0
  %340 = bitcast %class.CFX_CSSValue* %323 to void (%"class.fxcrt::Retainable"*)***
  %341 = load void (%"class.fxcrt::Retainable"*)**, void (%"class.fxcrt::Retainable"*)*** %340, align 8
  %342 = getelementptr inbounds void (%"class.fxcrt::Retainable"*)*, void (%"class.fxcrt::Retainable"*)** %341, i64 1
  %343 = load void (%"class.fxcrt::Retainable"*)*, void (%"class.fxcrt::Retainable"*)** %342, align 8
  tail call void %343(%"class.fxcrt::Retainable"* nonnull %339) #14
  br label %344

344:                                              ; preds = %327, %329, %338
  %345 = load %"class.fxcrt::RetainPtr"*, %"class.fxcrt::RetainPtr"** %321, align 8
  %346 = getelementptr inbounds %"class.fxcrt::RetainPtr", %"class.fxcrt::RetainPtr"* %345, i64 0, i32 0, i32 0, i32 0, i32 0
  %347 = load %class.CFX_CSSValue*, %class.CFX_CSSValue** %346, align 8
  %348 = ptrtoint %class.CFX_CSSValue* %347 to i64
  %349 = bitcast %"class.fxcrt::RetainPtr"* %21 to i64*
  store i64 %348, i64* %349, align 8
  %350 = icmp eq %class.CFX_CSSValue* %347, null
  br i1 %350, label %351, label %353

351:                                              ; preds = %344
  call void @_ZN18CFX_CSSDeclaration17AddPropertyHolderE15CFX_CSSPropertyN5fxcrt9RetainPtrI12CFX_CSSValueEEb(%class.CFX_CSSDeclaration* %0, i8 zeroext %4, %"class.fxcrt::RetainPtr"* nonnull %21, i1 zeroext %2)
  %352 = getelementptr inbounds %"class.fxcrt::RetainPtr", %"class.fxcrt::RetainPtr"* %21, i64 0, i32 0, i32 0, i32 0, i32 0
  store %class.CFX_CSSValue* null, %class.CFX_CSSValue** %352, align 8
  br label %368

353:                                              ; preds = %344
  %354 = getelementptr inbounds %class.CFX_CSSValue, %class.CFX_CSSValue* %347, i64 0, i32 0, i32 1
  %355 = load i64, i64* %354, align 8
  %356 = add nsw i64 %355, 1
  store i64 %356, i64* %354, align 8
  call void @_ZN18CFX_CSSDeclaration17AddPropertyHolderE15CFX_CSSPropertyN5fxcrt9RetainPtrI12CFX_CSSValueEEb(%class.CFX_CSSDeclaration* %0, i8 zeroext %4, %"class.fxcrt::RetainPtr"* nonnull %21, i1 zeroext %2)
  %357 = getelementptr inbounds %"class.fxcrt::RetainPtr", %"class.fxcrt::RetainPtr"* %21, i64 0, i32 0, i32 0, i32 0, i32 0
  store %class.CFX_CSSValue* null, %class.CFX_CSSValue** %357, align 8
  %358 = getelementptr inbounds %class.CFX_CSSValue, %class.CFX_CSSValue* %347, i64 0, i32 0, i32 1
  %359 = load i64, i64* %358, align 8
  %360 = add nsw i64 %359, -1
  store i64 %360, i64* %358, align 8
  %361 = icmp eq i64 %360, 0
  br i1 %361, label %362, label %368

362:                                              ; preds = %353
  %363 = getelementptr inbounds %class.CFX_CSSValue, %class.CFX_CSSValue* %347, i64 0, i32 0
  %364 = bitcast %class.CFX_CSSValue* %347 to void (%"class.fxcrt::Retainable"*)***
  %365 = load void (%"class.fxcrt::Retainable"*)**, void (%"class.fxcrt::Retainable"*)*** %364, align 8
  %366 = getelementptr inbounds void (%"class.fxcrt::Retainable"*)*, void (%"class.fxcrt::Retainable"*)** %365, i64 1
  %367 = load void (%"class.fxcrt::Retainable"*)*, void (%"class.fxcrt::Retainable"*)** %366, align 8
  tail call void %367(%"class.fxcrt::Retainable"* nonnull %363) #14
  br label %368

368:                                              ; preds = %351, %353, %362
  %369 = load %"class.fxcrt::RetainPtr"*, %"class.fxcrt::RetainPtr"** %321, align 8
  %370 = getelementptr inbounds %"class.fxcrt::RetainPtr", %"class.fxcrt::RetainPtr"* %369, i64 1, i32 0, i32 0, i32 0, i32 0
  %371 = load %class.CFX_CSSValue*, %class.CFX_CSSValue** %370, align 8
  %372 = ptrtoint %class.CFX_CSSValue* %371 to i64
  %373 = bitcast %"class.fxcrt::RetainPtr"* %22 to i64*
  store i64 %372, i64* %373, align 8
  %374 = icmp eq %class.CFX_CSSValue* %371, null
  br i1 %374, label %375, label %377

375:                                              ; preds = %368
  call void @_ZN18CFX_CSSDeclaration17AddPropertyHolderE15CFX_CSSPropertyN5fxcrt9RetainPtrI12CFX_CSSValueEEb(%class.CFX_CSSDeclaration* %0, i8 zeroext %5, %"class.fxcrt::RetainPtr"* nonnull %22, i1 zeroext %2)
  %376 = getelementptr inbounds %"class.fxcrt::RetainPtr", %"class.fxcrt::RetainPtr"* %22, i64 0, i32 0, i32 0, i32 0, i32 0
  store %class.CFX_CSSValue* null, %class.CFX_CSSValue** %376, align 8
  br label %392

377:                                              ; preds = %368
  %378 = getelementptr inbounds %class.CFX_CSSValue, %class.CFX_CSSValue* %371, i64 0, i32 0, i32 1
  %379 = load i64, i64* %378, align 8
  %380 = add nsw i64 %379, 1
  store i64 %380, i64* %378, align 8
  call void @_ZN18CFX_CSSDeclaration17AddPropertyHolderE15CFX_CSSPropertyN5fxcrt9RetainPtrI12CFX_CSSValueEEb(%class.CFX_CSSDeclaration* %0, i8 zeroext %5, %"class.fxcrt::RetainPtr"* nonnull %22, i1 zeroext %2)
  %381 = getelementptr inbounds %"class.fxcrt::RetainPtr", %"class.fxcrt::RetainPtr"* %22, i64 0, i32 0, i32 0, i32 0, i32 0
  store %class.CFX_CSSValue* null, %class.CFX_CSSValue** %381, align 8
  %382 = getelementptr inbounds %class.CFX_CSSValue, %class.CFX_CSSValue* %371, i64 0, i32 0, i32 1
  %383 = load i64, i64* %382, align 8
  %384 = add nsw i64 %383, -1
  store i64 %384, i64* %382, align 8
  %385 = icmp eq i64 %384, 0
  br i1 %385, label %386, label %392

386:                                              ; preds = %377
  %387 = getelementptr inbounds %class.CFX_CSSValue, %class.CFX_CSSValue* %371, i64 0, i32 0
  %388 = bitcast %class.CFX_CSSValue* %371 to void (%"class.fxcrt::Retainable"*)***
  %389 = load void (%"class.fxcrt::Retainable"*)**, void (%"class.fxcrt::Retainable"*)*** %388, align 8
  %390 = getelementptr inbounds void (%"class.fxcrt::Retainable"*)*, void (%"class.fxcrt::Retainable"*)** %389, i64 1
  %391 = load void (%"class.fxcrt::Retainable"*)*, void (%"class.fxcrt::Retainable"*)** %390, align 8
  tail call void %391(%"class.fxcrt::Retainable"* nonnull %387) #14
  br label %392

392:                                              ; preds = %375, %377, %386
  %393 = load %"class.fxcrt::RetainPtr"*, %"class.fxcrt::RetainPtr"** %321, align 8
  %394 = getelementptr inbounds %"class.fxcrt::RetainPtr", %"class.fxcrt::RetainPtr"* %393, i64 2, i32 0, i32 0, i32 0, i32 0
  %395 = load %class.CFX_CSSValue*, %class.CFX_CSSValue** %394, align 8
  %396 = ptrtoint %class.CFX_CSSValue* %395 to i64
  %397 = bitcast %"class.fxcrt::RetainPtr"* %23 to i64*
  store i64 %396, i64* %397, align 8
  %398 = icmp eq %class.CFX_CSSValue* %395, null
  br i1 %398, label %399, label %401

399:                                              ; preds = %392
  call void @_ZN18CFX_CSSDeclaration17AddPropertyHolderE15CFX_CSSPropertyN5fxcrt9RetainPtrI12CFX_CSSValueEEb(%class.CFX_CSSDeclaration* %0, i8 zeroext %6, %"class.fxcrt::RetainPtr"* nonnull %23, i1 zeroext %2)
  %400 = getelementptr inbounds %"class.fxcrt::RetainPtr", %"class.fxcrt::RetainPtr"* %23, i64 0, i32 0, i32 0, i32 0, i32 0
  store %class.CFX_CSSValue* null, %class.CFX_CSSValue** %400, align 8
  br label %416

401:                                              ; preds = %392
  %402 = getelementptr inbounds %class.CFX_CSSValue, %class.CFX_CSSValue* %395, i64 0, i32 0, i32 1
  %403 = load i64, i64* %402, align 8
  %404 = add nsw i64 %403, 1
  store i64 %404, i64* %402, align 8
  call void @_ZN18CFX_CSSDeclaration17AddPropertyHolderE15CFX_CSSPropertyN5fxcrt9RetainPtrI12CFX_CSSValueEEb(%class.CFX_CSSDeclaration* %0, i8 zeroext %6, %"class.fxcrt::RetainPtr"* nonnull %23, i1 zeroext %2)
  %405 = getelementptr inbounds %"class.fxcrt::RetainPtr", %"class.fxcrt::RetainPtr"* %23, i64 0, i32 0, i32 0, i32 0, i32 0
  store %class.CFX_CSSValue* null, %class.CFX_CSSValue** %405, align 8
  %406 = getelementptr inbounds %class.CFX_CSSValue, %class.CFX_CSSValue* %395, i64 0, i32 0, i32 1
  %407 = load i64, i64* %406, align 8
  %408 = add nsw i64 %407, -1
  store i64 %408, i64* %406, align 8
  %409 = icmp eq i64 %408, 0
  br i1 %409, label %410, label %416

410:                                              ; preds = %401
  %411 = getelementptr inbounds %class.CFX_CSSValue, %class.CFX_CSSValue* %395, i64 0, i32 0
  %412 = bitcast %class.CFX_CSSValue* %395 to void (%"class.fxcrt::Retainable"*)***
  %413 = load void (%"class.fxcrt::Retainable"*)**, void (%"class.fxcrt::Retainable"*)*** %412, align 8
  %414 = getelementptr inbounds void (%"class.fxcrt::Retainable"*)*, void (%"class.fxcrt::Retainable"*)** %413, i64 1
  %415 = load void (%"class.fxcrt::Retainable"*)*, void (%"class.fxcrt::Retainable"*)** %414, align 8
  tail call void %415(%"class.fxcrt::Retainable"* nonnull %411) #14
  br label %416

416:                                              ; preds = %399, %303, %207, %111, %410, %401, %314, %305, %218, %209, %122, %113, %7
  ret void
}

; Function Attrs: nounwind ssp uwtable
define linkonce_odr hidden void @_ZN6pdfium10MakeRetainI16CFX_CSSValueListJNSt3__16vectorIN5fxcrt9RetainPtrI12CFX_CSSValueEENS2_9allocatorIS7_EEEEEEENS5_IT_EEDpOT0_(%"class.fxcrt::RetainPtr.58"* noalias sret, %"class.std::__1::vector.51"* dereferenceable(24)) local_unnamed_addr #2 comdat {
  %3 = alloca %"class.std::__1::vector.51", align 16
  %4 = tail call i8* @_Znwm(i64 48) #15
  %5 = bitcast i8* %4 to %class.CFX_CSSValueList*
  %6 = bitcast %"class.std::__1::vector.51"* %1 to <2 x i64>*
  %7 = load <2 x i64>, <2 x i64>* %6, align 8
  %8 = getelementptr inbounds %"class.std::__1::vector.51", %"class.std::__1::vector.51"* %3, i64 0, i32 0, i32 1
  %9 = bitcast %"class.std::__1::vector.51"* %3 to <2 x i64>*
  store <2 x i64> %7, <2 x i64>* %9, align 16
  %10 = getelementptr inbounds %"class.std::__1::vector.51", %"class.std::__1::vector.51"* %1, i64 0, i32 0, i32 2, i32 0, i32 0
  %11 = bitcast %"class.fxcrt::RetainPtr"** %10 to i64*
  %12 = load i64, i64* %11, align 8
  %13 = getelementptr inbounds %"class.std::__1::vector.51", %"class.std::__1::vector.51"* %3, i64 0, i32 0, i32 2, i32 0, i32 0
  %14 = bitcast %"class.fxcrt::RetainPtr"** %13 to i64*
  store i64 %12, i64* %14, align 16
  %15 = bitcast %"class.std::__1::vector.51"* %1 to i8*
  tail call void @llvm.memset.p0i8.i64(i8* align 8 %15, i8 0, i64 24, i1 false) #14
  call void @_ZN16CFX_CSSValueListC1ENSt3__16vectorIN5fxcrt9RetainPtrI12CFX_CSSValueEENS0_9allocatorIS5_EEEE(%class.CFX_CSSValueList* nonnull %5, %"class.std::__1::vector.51"* nonnull %3) #14
  %16 = ptrtoint i8* %4 to i64
  %17 = bitcast %"class.fxcrt::RetainPtr.58"* %0 to i64*
  store i64 %16, i64* %17, align 8
  %18 = getelementptr inbounds i8, i8* %4, i64 8
  %19 = bitcast i8* %18 to i64*
  %20 = load i64, i64* %19, align 8
  %21 = add nsw i64 %20, 1
  store i64 %21, i64* %19, align 8
  %22 = getelementptr inbounds %"class.std::__1::vector.51", %"class.std::__1::vector.51"* %3, i64 0, i32 0, i32 0
  %23 = load %"class.fxcrt::RetainPtr"*, %"class.fxcrt::RetainPtr"** %22, align 16
  %24 = icmp eq %"class.fxcrt::RetainPtr"* %23, null
  br i1 %24, label %53, label %25

25:                                               ; preds = %2
  %26 = bitcast %"class.fxcrt::RetainPtr"* %23 to i8*
  %27 = load %"class.fxcrt::RetainPtr"*, %"class.fxcrt::RetainPtr"** %8, align 8
  %28 = icmp eq %"class.fxcrt::RetainPtr"* %27, %23
  br i1 %28, label %51, label %29

29:                                               ; preds = %25, %46
  %30 = phi %"class.fxcrt::RetainPtr"* [ %31, %46 ], [ %27, %25 ]
  %31 = getelementptr inbounds %"class.fxcrt::RetainPtr", %"class.fxcrt::RetainPtr"* %30, i64 -1
  %32 = getelementptr inbounds %"class.fxcrt::RetainPtr", %"class.fxcrt::RetainPtr"* %31, i64 0, i32 0, i32 0, i32 0, i32 0
  %33 = load %class.CFX_CSSValue*, %class.CFX_CSSValue** %32, align 8
  store %class.CFX_CSSValue* null, %class.CFX_CSSValue** %32, align 8
  %34 = icmp eq %class.CFX_CSSValue* %33, null
  br i1 %34, label %46, label %35

35:                                               ; preds = %29
  %36 = getelementptr inbounds %class.CFX_CSSValue, %class.CFX_CSSValue* %33, i64 0, i32 0, i32 1
  %37 = load i64, i64* %36, align 8
  %38 = add nsw i64 %37, -1
  store i64 %38, i64* %36, align 8
  %39 = icmp eq i64 %38, 0
  br i1 %39, label %40, label %46

40:                                               ; preds = %35
  %41 = getelementptr inbounds %class.CFX_CSSValue, %class.CFX_CSSValue* %33, i64 0, i32 0
  %42 = bitcast %class.CFX_CSSValue* %33 to void (%"class.fxcrt::Retainable"*)***
  %43 = load void (%"class.fxcrt::Retainable"*)**, void (%"class.fxcrt::Retainable"*)*** %42, align 8
  %44 = getelementptr inbounds void (%"class.fxcrt::Retainable"*)*, void (%"class.fxcrt::Retainable"*)** %43, i64 1
  %45 = load void (%"class.fxcrt::Retainable"*)*, void (%"class.fxcrt::Retainable"*)** %44, align 8
  call void %45(%"class.fxcrt::Retainable"* nonnull %41) #14
  br label %46

46:                                               ; preds = %40, %35, %29
  %47 = icmp eq %"class.fxcrt::RetainPtr"* %31, %23
  br i1 %47, label %48, label %29

48:                                               ; preds = %46
  %49 = bitcast %"class.std::__1::vector.51"* %3 to i8**
  %50 = load i8*, i8** %49, align 16
  br label %51

51:                                               ; preds = %48, %25
  %52 = phi i8* [ %50, %48 ], [ %26, %25 ]
  store %"class.fxcrt::RetainPtr"* %23, %"class.fxcrt::RetainPtr"** %8, align 8
  call void @_ZdlPv(i8* %52) #15
  br label %53

53:                                               ; preds = %2, %51
  ret void
}

; Function Attrs: norecurse nounwind readonly ssp uwtable
define hidden i64 @_ZNK18CFX_CSSDeclaration23PropertyCountForTestingEv(%class.CFX_CSSDeclaration* nocapture readonly) local_unnamed_addr #5 align 2 {
  %2 = getelementptr inbounds %class.CFX_CSSDeclaration, %class.CFX_CSSDeclaration* %0, i64 0, i32 0, i32 0, i32 1
  %3 = bitcast %"class.std::__1::unique_ptr"** %2 to i64*
  %4 = load i64, i64* %3, align 8
  %5 = bitcast %class.CFX_CSSDeclaration* %0 to i64*
  %6 = load i64, i64* %5, align 8
  %7 = sub i64 %4, %6
  %8 = ashr exact i64 %7, 3
  ret i64 %8
}

; Function Attrs: nounwind readnone
declare i16** @__ctype_b_loc() local_unnamed_addr #6

declare float @_Z12FXSYS_wcstofPKwiPi(i32*, i32, i32*) local_unnamed_addr #3

declare %"struct.CFX_CSSData::LengthUnit"* @_ZN11CFX_CSSData19GetLengthUnitByNameEN5fxcrt18StringViewTemplateIwEE(%"class.fxcrt::StringViewTemplate"*) local_unnamed_addr #3

; Function Attrs: nounwind readnone speculatable
declare float @llvm.fabs.f32(float) #7

; Function Attrs: nobuiltin nounwind
declare void @_ZdlPv(i8*) local_unnamed_addr #8

; Function Attrs: nobuiltin nofree
declare noalias nonnull i8* @_Znwm(i64) local_unnamed_addr #9

declare void @_ZN21CFX_CSSPropertyHolderC1Ev(%class.CFX_CSSPropertyHolder*) unnamed_addr #3

; Function Attrs: nounwind
declare void @_ZN21CFX_CSSPropertyHolderD1Ev(%class.CFX_CSSPropertyHolder*) unnamed_addr #4

; Function Attrs: inlinehint nounwind ssp uwtable
define linkonce_odr hidden void @_ZNSt3__16vectorINS_10unique_ptrI21CFX_CSSPropertyHolderNS_14default_deleteIS2_EEEENS_9allocatorIS5_EEE21__push_back_slow_pathIS5_EEvOT_(%"class.std::__1::vector"*, %"class.std::__1::unique_ptr"* dereferenceable(8)) local_unnamed_addr #10 comdat align 2 {
  %3 = getelementptr inbounds %"class.std::__1::vector", %"class.std::__1::vector"* %0, i64 0, i32 0, i32 1
  %4 = bitcast %"class.std::__1::unique_ptr"** %3 to i64*
  %5 = load i64, i64* %4, align 8
  %6 = bitcast %"class.std::__1::vector"* %0 to i64*
  %7 = load i64, i64* %6, align 8
  %8 = sub i64 %5, %7
  %9 = ashr exact i64 %8, 3
  %10 = add nsw i64 %9, 1
  %11 = icmp ugt i64 %10, 2305843009213693951
  br i1 %11, label %12, label %14

12:                                               ; preds = %2
  %13 = bitcast %"class.std::__1::vector"* %0 to %"class.std::__1::__vector_base_common"*
  tail call void @_ZNKSt3__120__vector_base_commonILb1EE20__throw_length_errorEv(%"class.std::__1::__vector_base_common"* %13) #16
  unreachable

14:                                               ; preds = %2
  %15 = getelementptr inbounds %"class.std::__1::vector", %"class.std::__1::vector"* %0, i64 0, i32 0, i32 2, i32 0, i32 0
  %16 = bitcast %"class.std::__1::unique_ptr"** %15 to i64*
  %17 = load i64, i64* %16, align 8
  %18 = sub i64 %17, %7
  %19 = ashr exact i64 %18, 3
  %20 = icmp ult i64 %19, 1152921504606846975
  br i1 %20, label %21, label %29

21:                                               ; preds = %14
  %22 = ashr exact i64 %18, 2
  %23 = icmp ult i64 %22, %10
  %24 = select i1 %23, i64 %10, i64 %22
  %25 = icmp eq i64 %24, 0
  br i1 %25, label %34, label %26

26:                                               ; preds = %21
  %27 = icmp ugt i64 %24, 2305843009213693951
  br i1 %27, label %28, label %29

28:                                               ; preds = %26
  tail call void @abort() #16
  unreachable

29:                                               ; preds = %14, %26
  %30 = phi i64 [ %24, %26 ], [ 2305843009213693951, %14 ]
  %31 = shl i64 %30, 3
  %32 = tail call i8* @_Znwm(i64 %31) #15
  %33 = bitcast i8* %32 to %"class.std::__1::unique_ptr"*
  br label %34

34:                                               ; preds = %21, %29
  %35 = phi i64 [ %30, %29 ], [ 0, %21 ]
  %36 = phi %"class.std::__1::unique_ptr"* [ %33, %29 ], [ null, %21 ]
  %37 = getelementptr inbounds %"class.std::__1::unique_ptr", %"class.std::__1::unique_ptr"* %36, i64 %9
  %38 = getelementptr inbounds %"class.std::__1::unique_ptr", %"class.std::__1::unique_ptr"* %36, i64 %35
  %39 = ptrtoint %"class.std::__1::unique_ptr"* %38 to i64
  %40 = getelementptr inbounds %"class.std::__1::unique_ptr", %"class.std::__1::unique_ptr"* %1, i64 0, i32 0, i32 0, i32 0
  %41 = bitcast %"class.std::__1::unique_ptr"* %1 to i64*
  %42 = load i64, i64* %41, align 8
  store %class.CFX_CSSPropertyHolder* null, %class.CFX_CSSPropertyHolder** %40, align 8
  %43 = bitcast %"class.std::__1::unique_ptr"* %37 to i64*
  store i64 %42, i64* %43, align 8
  %44 = getelementptr inbounds %"class.std::__1::unique_ptr", %"class.std::__1::unique_ptr"* %37, i64 1
  %45 = ptrtoint %"class.std::__1::unique_ptr"* %44 to i64
  %46 = getelementptr inbounds %"class.std::__1::vector", %"class.std::__1::vector"* %0, i64 0, i32 0, i32 0
  %47 = load %"class.std::__1::unique_ptr"*, %"class.std::__1::unique_ptr"** %46, align 8
  %48 = ptrtoint %"class.std::__1::unique_ptr"* %47 to i64
  %49 = load %"class.std::__1::unique_ptr"*, %"class.std::__1::unique_ptr"** %3, align 8
  %50 = icmp eq %"class.std::__1::unique_ptr"* %49, %47
  br i1 %50, label %132, label %51

51:                                               ; preds = %34
  %52 = getelementptr %"class.std::__1::unique_ptr", %"class.std::__1::unique_ptr"* %49, i64 -1, i32 0, i32 0, i32 0
  %53 = ptrtoint %class.CFX_CSSPropertyHolder** %52 to i64
  %54 = sub i64 %53, %48
  %55 = lshr i64 %54, 3
  %56 = add nuw nsw i64 %55, 1
  %57 = and i64 %56, 7
  %58 = icmp eq i64 %57, 0
  br i1 %58, label %71, label %59

59:                                               ; preds = %51, %59
  %60 = phi %"class.std::__1::unique_ptr"* [ %63, %59 ], [ %37, %51 ]
  %61 = phi %"class.std::__1::unique_ptr"* [ %64, %59 ], [ %49, %51 ]
  %62 = phi i64 [ %69, %59 ], [ %57, %51 ]
  %63 = getelementptr inbounds %"class.std::__1::unique_ptr", %"class.std::__1::unique_ptr"* %60, i64 -1
  %64 = getelementptr inbounds %"class.std::__1::unique_ptr", %"class.std::__1::unique_ptr"* %61, i64 -1
  %65 = getelementptr inbounds %"class.std::__1::unique_ptr", %"class.std::__1::unique_ptr"* %64, i64 0, i32 0, i32 0, i32 0
  %66 = bitcast %"class.std::__1::unique_ptr"* %64 to i64*
  %67 = load i64, i64* %66, align 8
  store %class.CFX_CSSPropertyHolder* null, %class.CFX_CSSPropertyHolder** %65, align 8
  %68 = bitcast %"class.std::__1::unique_ptr"* %63 to i64*
  store i64 %67, i64* %68, align 8
  %69 = add i64 %62, -1
  %70 = icmp eq i64 %69, 0
  br i1 %70, label %71, label %59, !llvm.loop !105

71:                                               ; preds = %59, %51
  %72 = phi %"class.std::__1::unique_ptr"* [ undef, %51 ], [ %63, %59 ]
  %73 = phi %"class.std::__1::unique_ptr"* [ %37, %51 ], [ %63, %59 ]
  %74 = phi %"class.std::__1::unique_ptr"* [ %49, %51 ], [ %64, %59 ]
  %75 = icmp ult i64 %54, 56
  br i1 %75, label %128, label %76

76:                                               ; preds = %71, %76
  %77 = phi %"class.std::__1::unique_ptr"* [ %121, %76 ], [ %73, %71 ]
  %78 = phi %"class.std::__1::unique_ptr"* [ %122, %76 ], [ %74, %71 ]
  %79 = getelementptr inbounds %"class.std::__1::unique_ptr", %"class.std::__1::unique_ptr"* %77, i64 -1
  %80 = getelementptr inbounds %"class.std::__1::unique_ptr", %"class.std::__1::unique_ptr"* %78, i64 -1
  %81 = getelementptr inbounds %"class.std::__1::unique_ptr", %"class.std::__1::unique_ptr"* %80, i64 0, i32 0, i32 0, i32 0
  %82 = bitcast %"class.std::__1::unique_ptr"* %80 to i64*
  %83 = load i64, i64* %82, align 8
  store %class.CFX_CSSPropertyHolder* null, %class.CFX_CSSPropertyHolder** %81, align 8
  %84 = bitcast %"class.std::__1::unique_ptr"* %79 to i64*
  store i64 %83, i64* %84, align 8
  %85 = getelementptr inbounds %"class.std::__1::unique_ptr", %"class.std::__1::unique_ptr"* %77, i64 -2
  %86 = getelementptr inbounds %"class.std::__1::unique_ptr", %"class.std::__1::unique_ptr"* %78, i64 -2
  %87 = getelementptr inbounds %"class.std::__1::unique_ptr", %"class.std::__1::unique_ptr"* %86, i64 0, i32 0, i32 0, i32 0
  %88 = bitcast %"class.std::__1::unique_ptr"* %86 to i64*
  %89 = load i64, i64* %88, align 8
  store %class.CFX_CSSPropertyHolder* null, %class.CFX_CSSPropertyHolder** %87, align 8
  %90 = bitcast %"class.std::__1::unique_ptr"* %85 to i64*
  store i64 %89, i64* %90, align 8
  %91 = getelementptr inbounds %"class.std::__1::unique_ptr", %"class.std::__1::unique_ptr"* %77, i64 -3
  %92 = getelementptr inbounds %"class.std::__1::unique_ptr", %"class.std::__1::unique_ptr"* %78, i64 -3
  %93 = getelementptr inbounds %"class.std::__1::unique_ptr", %"class.std::__1::unique_ptr"* %92, i64 0, i32 0, i32 0, i32 0
  %94 = bitcast %"class.std::__1::unique_ptr"* %92 to i64*
  %95 = load i64, i64* %94, align 8
  store %class.CFX_CSSPropertyHolder* null, %class.CFX_CSSPropertyHolder** %93, align 8
  %96 = bitcast %"class.std::__1::unique_ptr"* %91 to i64*
  store i64 %95, i64* %96, align 8
  %97 = getelementptr inbounds %"class.std::__1::unique_ptr", %"class.std::__1::unique_ptr"* %77, i64 -4
  %98 = getelementptr inbounds %"class.std::__1::unique_ptr", %"class.std::__1::unique_ptr"* %78, i64 -4
  %99 = getelementptr inbounds %"class.std::__1::unique_ptr", %"class.std::__1::unique_ptr"* %98, i64 0, i32 0, i32 0, i32 0
  %100 = bitcast %"class.std::__1::unique_ptr"* %98 to i64*
  %101 = load i64, i64* %100, align 8
  store %class.CFX_CSSPropertyHolder* null, %class.CFX_CSSPropertyHolder** %99, align 8
  %102 = bitcast %"class.std::__1::unique_ptr"* %97 to i64*
  store i64 %101, i64* %102, align 8
  %103 = getelementptr inbounds %"class.std::__1::unique_ptr", %"class.std::__1::unique_ptr"* %77, i64 -5
  %104 = getelementptr inbounds %"class.std::__1::unique_ptr", %"class.std::__1::unique_ptr"* %78, i64 -5
  %105 = getelementptr inbounds %"class.std::__1::unique_ptr", %"class.std::__1::unique_ptr"* %104, i64 0, i32 0, i32 0, i32 0
  %106 = bitcast %"class.std::__1::unique_ptr"* %104 to i64*
  %107 = load i64, i64* %106, align 8
  store %class.CFX_CSSPropertyHolder* null, %class.CFX_CSSPropertyHolder** %105, align 8
  %108 = bitcast %"class.std::__1::unique_ptr"* %103 to i64*
  store i64 %107, i64* %108, align 8
  %109 = getelementptr inbounds %"class.std::__1::unique_ptr", %"class.std::__1::unique_ptr"* %77, i64 -6
  %110 = getelementptr inbounds %"class.std::__1::unique_ptr", %"class.std::__1::unique_ptr"* %78, i64 -6
  %111 = getelementptr inbounds %"class.std::__1::unique_ptr", %"class.std::__1::unique_ptr"* %110, i64 0, i32 0, i32 0, i32 0
  %112 = bitcast %"class.std::__1::unique_ptr"* %110 to i64*
  %113 = load i64, i64* %112, align 8
  store %class.CFX_CSSPropertyHolder* null, %class.CFX_CSSPropertyHolder** %111, align 8
  %114 = bitcast %"class.std::__1::unique_ptr"* %109 to i64*
  store i64 %113, i64* %114, align 8
  %115 = getelementptr inbounds %"class.std::__1::unique_ptr", %"class.std::__1::unique_ptr"* %77, i64 -7
  %116 = getelementptr inbounds %"class.std::__1::unique_ptr", %"class.std::__1::unique_ptr"* %78, i64 -7
  %117 = getelementptr inbounds %"class.std::__1::unique_ptr", %"class.std::__1::unique_ptr"* %116, i64 0, i32 0, i32 0, i32 0
  %118 = bitcast %"class.std::__1::unique_ptr"* %116 to i64*
  %119 = load i64, i64* %118, align 8
  store %class.CFX_CSSPropertyHolder* null, %class.CFX_CSSPropertyHolder** %117, align 8
  %120 = bitcast %"class.std::__1::unique_ptr"* %115 to i64*
  store i64 %119, i64* %120, align 8
  %121 = getelementptr inbounds %"class.std::__1::unique_ptr", %"class.std::__1::unique_ptr"* %77, i64 -8
  %122 = getelementptr inbounds %"class.std::__1::unique_ptr", %"class.std::__1::unique_ptr"* %78, i64 -8
  %123 = getelementptr inbounds %"class.std::__1::unique_ptr", %"class.std::__1::unique_ptr"* %122, i64 0, i32 0, i32 0, i32 0
  %124 = bitcast %"class.std::__1::unique_ptr"* %122 to i64*
  %125 = load i64, i64* %124, align 8
  store %class.CFX_CSSPropertyHolder* null, %class.CFX_CSSPropertyHolder** %123, align 8
  %126 = bitcast %"class.std::__1::unique_ptr"* %121 to i64*
  store i64 %125, i64* %126, align 8
  %127 = icmp eq %"class.std::__1::unique_ptr"* %122, %47
  br i1 %127, label %128, label %76

128:                                              ; preds = %76, %71
  %129 = phi %"class.std::__1::unique_ptr"* [ %72, %71 ], [ %121, %76 ]
  %130 = load i64, i64* %6, align 8
  %131 = load %"class.std::__1::unique_ptr"*, %"class.std::__1::unique_ptr"** %3, align 8
  br label %132

132:                                              ; preds = %34, %128
  %133 = phi %"class.std::__1::unique_ptr"* [ %131, %128 ], [ %47, %34 ]
  %134 = phi %"class.std::__1::unique_ptr"* [ %129, %128 ], [ %37, %34 ]
  %135 = phi i64 [ %130, %128 ], [ %48, %34 ]
  %136 = ptrtoint %"class.std::__1::unique_ptr"* %134 to i64
  store i64 %136, i64* %6, align 8
  store i64 %45, i64* %4, align 8
  store i64 %39, i64* %16, align 8
  %137 = inttoptr i64 %135 to %"class.std::__1::unique_ptr"*
  %138 = icmp eq %"class.std::__1::unique_ptr"* %133, %137
  br i1 %138, label %149, label %139

139:                                              ; preds = %132, %147
  %140 = phi %"class.std::__1::unique_ptr"* [ %141, %147 ], [ %133, %132 ]
  %141 = getelementptr inbounds %"class.std::__1::unique_ptr", %"class.std::__1::unique_ptr"* %140, i64 -1
  %142 = getelementptr inbounds %"class.std::__1::unique_ptr", %"class.std::__1::unique_ptr"* %141, i64 0, i32 0, i32 0, i32 0
  %143 = load %class.CFX_CSSPropertyHolder*, %class.CFX_CSSPropertyHolder** %142, align 8
  store %class.CFX_CSSPropertyHolder* null, %class.CFX_CSSPropertyHolder** %142, align 8
  %144 = icmp eq %class.CFX_CSSPropertyHolder* %143, null
  br i1 %144, label %147, label %145

145:                                              ; preds = %139
  tail call void @_ZN21CFX_CSSPropertyHolderD1Ev(%class.CFX_CSSPropertyHolder* nonnull %143) #14
  %146 = getelementptr inbounds %class.CFX_CSSPropertyHolder, %class.CFX_CSSPropertyHolder* %143, i64 0, i32 0
  tail call void @_ZdlPv(i8* %146) #15
  br label %147

147:                                              ; preds = %145, %139
  %148 = icmp eq %"class.std::__1::unique_ptr"* %141, %137
  br i1 %148, label %149, label %139

149:                                              ; preds = %147, %132
  %150 = icmp eq i64 %135, 0
  br i1 %150, label %153, label %151

151:                                              ; preds = %149
  %152 = inttoptr i64 %135 to i8*
  tail call void @_ZdlPv(i8* %152) #15
  br label %153

153:                                              ; preds = %149, %151
  ret void
}

; Function Attrs: noreturn
declare void @_ZNKSt3__120__vector_base_commonILb1EE20__throw_length_errorEv(%"class.std::__1::__vector_base_common"*) local_unnamed_addr #11

; Function Attrs: noreturn nounwind
declare void @abort() local_unnamed_addr #12

declare void @_ZN21CFX_CSSCustomPropertyC1ERKN5fxcrt10WideStringES3_(%class.CFX_CSSCustomProperty*, %"class.fxcrt::WideString"* dereferenceable(8), %"class.fxcrt::WideString"* dereferenceable(8)) unnamed_addr #3

; Function Attrs: nounwind
declare void @_ZN21CFX_CSSCustomPropertyD1Ev(%class.CFX_CSSCustomProperty*) unnamed_addr #4

; Function Attrs: inlinehint nounwind ssp uwtable
define linkonce_odr hidden void @_ZNSt3__16vectorINS_10unique_ptrI21CFX_CSSCustomPropertyNS_14default_deleteIS2_EEEENS_9allocatorIS5_EEE21__push_back_slow_pathIS5_EEvOT_(%"class.std::__1::vector.1"*, %"class.std::__1::unique_ptr.3"* dereferenceable(8)) local_unnamed_addr #10 comdat align 2 {
  %3 = getelementptr inbounds %"class.std::__1::vector.1", %"class.std::__1::vector.1"* %0, i64 0, i32 0, i32 1
  %4 = bitcast %"class.std::__1::unique_ptr.3"** %3 to i64*
  %5 = load i64, i64* %4, align 8
  %6 = bitcast %"class.std::__1::vector.1"* %0 to i64*
  %7 = load i64, i64* %6, align 8
  %8 = sub i64 %5, %7
  %9 = ashr exact i64 %8, 3
  %10 = add nsw i64 %9, 1
  %11 = icmp ugt i64 %10, 2305843009213693951
  br i1 %11, label %12, label %14

12:                                               ; preds = %2
  %13 = bitcast %"class.std::__1::vector.1"* %0 to %"class.std::__1::__vector_base_common"*
  tail call void @_ZNKSt3__120__vector_base_commonILb1EE20__throw_length_errorEv(%"class.std::__1::__vector_base_common"* %13) #16
  unreachable

14:                                               ; preds = %2
  %15 = getelementptr inbounds %"class.std::__1::vector.1", %"class.std::__1::vector.1"* %0, i64 0, i32 0, i32 2, i32 0, i32 0
  %16 = bitcast %"class.std::__1::unique_ptr.3"** %15 to i64*
  %17 = load i64, i64* %16, align 8
  %18 = sub i64 %17, %7
  %19 = ashr exact i64 %18, 3
  %20 = icmp ult i64 %19, 1152921504606846975
  br i1 %20, label %21, label %29

21:                                               ; preds = %14
  %22 = ashr exact i64 %18, 2
  %23 = icmp ult i64 %22, %10
  %24 = select i1 %23, i64 %10, i64 %22
  %25 = icmp eq i64 %24, 0
  br i1 %25, label %34, label %26

26:                                               ; preds = %21
  %27 = icmp ugt i64 %24, 2305843009213693951
  br i1 %27, label %28, label %29

28:                                               ; preds = %26
  tail call void @abort() #16
  unreachable

29:                                               ; preds = %14, %26
  %30 = phi i64 [ %24, %26 ], [ 2305843009213693951, %14 ]
  %31 = shl i64 %30, 3
  %32 = tail call i8* @_Znwm(i64 %31) #15
  %33 = bitcast i8* %32 to %"class.std::__1::unique_ptr.3"*
  br label %34

34:                                               ; preds = %21, %29
  %35 = phi i64 [ %30, %29 ], [ 0, %21 ]
  %36 = phi %"class.std::__1::unique_ptr.3"* [ %33, %29 ], [ null, %21 ]
  %37 = getelementptr inbounds %"class.std::__1::unique_ptr.3", %"class.std::__1::unique_ptr.3"* %36, i64 %9
  %38 = getelementptr inbounds %"class.std::__1::unique_ptr.3", %"class.std::__1::unique_ptr.3"* %36, i64 %35
  %39 = ptrtoint %"class.std::__1::unique_ptr.3"* %38 to i64
  %40 = getelementptr inbounds %"class.std::__1::unique_ptr.3", %"class.std::__1::unique_ptr.3"* %1, i64 0, i32 0, i32 0, i32 0
  %41 = bitcast %"class.std::__1::unique_ptr.3"* %1 to i64*
  %42 = load i64, i64* %41, align 8
  store %class.CFX_CSSCustomProperty* null, %class.CFX_CSSCustomProperty** %40, align 8
  %43 = bitcast %"class.std::__1::unique_ptr.3"* %37 to i64*
  store i64 %42, i64* %43, align 8
  %44 = getelementptr inbounds %"class.std::__1::unique_ptr.3", %"class.std::__1::unique_ptr.3"* %37, i64 1
  %45 = ptrtoint %"class.std::__1::unique_ptr.3"* %44 to i64
  %46 = getelementptr inbounds %"class.std::__1::vector.1", %"class.std::__1::vector.1"* %0, i64 0, i32 0, i32 0
  %47 = load %"class.std::__1::unique_ptr.3"*, %"class.std::__1::unique_ptr.3"** %46, align 8
  %48 = ptrtoint %"class.std::__1::unique_ptr.3"* %47 to i64
  %49 = load %"class.std::__1::unique_ptr.3"*, %"class.std::__1::unique_ptr.3"** %3, align 8
  %50 = icmp eq %"class.std::__1::unique_ptr.3"* %49, %47
  br i1 %50, label %132, label %51

51:                                               ; preds = %34
  %52 = getelementptr %"class.std::__1::unique_ptr.3", %"class.std::__1::unique_ptr.3"* %49, i64 -1, i32 0, i32 0, i32 0
  %53 = ptrtoint %class.CFX_CSSCustomProperty** %52 to i64
  %54 = sub i64 %53, %48
  %55 = lshr i64 %54, 3
  %56 = add nuw nsw i64 %55, 1
  %57 = and i64 %56, 7
  %58 = icmp eq i64 %57, 0
  br i1 %58, label %71, label %59

59:                                               ; preds = %51, %59
  %60 = phi %"class.std::__1::unique_ptr.3"* [ %63, %59 ], [ %37, %51 ]
  %61 = phi %"class.std::__1::unique_ptr.3"* [ %64, %59 ], [ %49, %51 ]
  %62 = phi i64 [ %69, %59 ], [ %57, %51 ]
  %63 = getelementptr inbounds %"class.std::__1::unique_ptr.3", %"class.std::__1::unique_ptr.3"* %60, i64 -1
  %64 = getelementptr inbounds %"class.std::__1::unique_ptr.3", %"class.std::__1::unique_ptr.3"* %61, i64 -1
  %65 = getelementptr inbounds %"class.std::__1::unique_ptr.3", %"class.std::__1::unique_ptr.3"* %64, i64 0, i32 0, i32 0, i32 0
  %66 = bitcast %"class.std::__1::unique_ptr.3"* %64 to i64*
  %67 = load i64, i64* %66, align 8
  store %class.CFX_CSSCustomProperty* null, %class.CFX_CSSCustomProperty** %65, align 8
  %68 = bitcast %"class.std::__1::unique_ptr.3"* %63 to i64*
  store i64 %67, i64* %68, align 8
  %69 = add i64 %62, -1
  %70 = icmp eq i64 %69, 0
  br i1 %70, label %71, label %59, !llvm.loop !107

71:                                               ; preds = %59, %51
  %72 = phi %"class.std::__1::unique_ptr.3"* [ undef, %51 ], [ %63, %59 ]
  %73 = phi %"class.std::__1::unique_ptr.3"* [ %37, %51 ], [ %63, %59 ]
  %74 = phi %"class.std::__1::unique_ptr.3"* [ %49, %51 ], [ %64, %59 ]
  %75 = icmp ult i64 %54, 56
  br i1 %75, label %128, label %76

76:                                               ; preds = %71, %76
  %77 = phi %"class.std::__1::unique_ptr.3"* [ %121, %76 ], [ %73, %71 ]
  %78 = phi %"class.std::__1::unique_ptr.3"* [ %122, %76 ], [ %74, %71 ]
  %79 = getelementptr inbounds %"class.std::__1::unique_ptr.3", %"class.std::__1::unique_ptr.3"* %77, i64 -1
  %80 = getelementptr inbounds %"class.std::__1::unique_ptr.3", %"class.std::__1::unique_ptr.3"* %78, i64 -1
  %81 = getelementptr inbounds %"class.std::__1::unique_ptr.3", %"class.std::__1::unique_ptr.3"* %80, i64 0, i32 0, i32 0, i32 0
  %82 = bitcast %"class.std::__1::unique_ptr.3"* %80 to i64*
  %83 = load i64, i64* %82, align 8
  store %class.CFX_CSSCustomProperty* null, %class.CFX_CSSCustomProperty** %81, align 8
  %84 = bitcast %"class.std::__1::unique_ptr.3"* %79 to i64*
  store i64 %83, i64* %84, align 8
  %85 = getelementptr inbounds %"class.std::__1::unique_ptr.3", %"class.std::__1::unique_ptr.3"* %77, i64 -2
  %86 = getelementptr inbounds %"class.std::__1::unique_ptr.3", %"class.std::__1::unique_ptr.3"* %78, i64 -2
  %87 = getelementptr inbounds %"class.std::__1::unique_ptr.3", %"class.std::__1::unique_ptr.3"* %86, i64 0, i32 0, i32 0, i32 0
  %88 = bitcast %"class.std::__1::unique_ptr.3"* %86 to i64*
  %89 = load i64, i64* %88, align 8
  store %class.CFX_CSSCustomProperty* null, %class.CFX_CSSCustomProperty** %87, align 8
  %90 = bitcast %"class.std::__1::unique_ptr.3"* %85 to i64*
  store i64 %89, i64* %90, align 8
  %91 = getelementptr inbounds %"class.std::__1::unique_ptr.3", %"class.std::__1::unique_ptr.3"* %77, i64 -3
  %92 = getelementptr inbounds %"class.std::__1::unique_ptr.3", %"class.std::__1::unique_ptr.3"* %78, i64 -3
  %93 = getelementptr inbounds %"class.std::__1::unique_ptr.3", %"class.std::__1::unique_ptr.3"* %92, i64 0, i32 0, i32 0, i32 0
  %94 = bitcast %"class.std::__1::unique_ptr.3"* %92 to i64*
  %95 = load i64, i64* %94, align 8
  store %class.CFX_CSSCustomProperty* null, %class.CFX_CSSCustomProperty** %93, align 8
  %96 = bitcast %"class.std::__1::unique_ptr.3"* %91 to i64*
  store i64 %95, i64* %96, align 8
  %97 = getelementptr inbounds %"class.std::__1::unique_ptr.3", %"class.std::__1::unique_ptr.3"* %77, i64 -4
  %98 = getelementptr inbounds %"class.std::__1::unique_ptr.3", %"class.std::__1::unique_ptr.3"* %78, i64 -4
  %99 = getelementptr inbounds %"class.std::__1::unique_ptr.3", %"class.std::__1::unique_ptr.3"* %98, i64 0, i32 0, i32 0, i32 0
  %100 = bitcast %"class.std::__1::unique_ptr.3"* %98 to i64*
  %101 = load i64, i64* %100, align 8
  store %class.CFX_CSSCustomProperty* null, %class.CFX_CSSCustomProperty** %99, align 8
  %102 = bitcast %"class.std::__1::unique_ptr.3"* %97 to i64*
  store i64 %101, i64* %102, align 8
  %103 = getelementptr inbounds %"class.std::__1::unique_ptr.3", %"class.std::__1::unique_ptr.3"* %77, i64 -5
  %104 = getelementptr inbounds %"class.std::__1::unique_ptr.3", %"class.std::__1::unique_ptr.3"* %78, i64 -5
  %105 = getelementptr inbounds %"class.std::__1::unique_ptr.3", %"class.std::__1::unique_ptr.3"* %104, i64 0, i32 0, i32 0, i32 0
  %106 = bitcast %"class.std::__1::unique_ptr.3"* %104 to i64*
  %107 = load i64, i64* %106, align 8
  store %class.CFX_CSSCustomProperty* null, %class.CFX_CSSCustomProperty** %105, align 8
  %108 = bitcast %"class.std::__1::unique_ptr.3"* %103 to i64*
  store i64 %107, i64* %108, align 8
  %109 = getelementptr inbounds %"class.std::__1::unique_ptr.3", %"class.std::__1::unique_ptr.3"* %77, i64 -6
  %110 = getelementptr inbounds %"class.std::__1::unique_ptr.3", %"class.std::__1::unique_ptr.3"* %78, i64 -6
  %111 = getelementptr inbounds %"class.std::__1::unique_ptr.3", %"class.std::__1::unique_ptr.3"* %110, i64 0, i32 0, i32 0, i32 0
  %112 = bitcast %"class.std::__1::unique_ptr.3"* %110 to i64*
  %113 = load i64, i64* %112, align 8
  store %class.CFX_CSSCustomProperty* null, %class.CFX_CSSCustomProperty** %111, align 8
  %114 = bitcast %"class.std::__1::unique_ptr.3"* %109 to i64*
  store i64 %113, i64* %114, align 8
  %115 = getelementptr inbounds %"class.std::__1::unique_ptr.3", %"class.std::__1::unique_ptr.3"* %77, i64 -7
  %116 = getelementptr inbounds %"class.std::__1::unique_ptr.3", %"class.std::__1::unique_ptr.3"* %78, i64 -7
  %117 = getelementptr inbounds %"class.std::__1::unique_ptr.3", %"class.std::__1::unique_ptr.3"* %116, i64 0, i32 0, i32 0, i32 0
  %118 = bitcast %"class.std::__1::unique_ptr.3"* %116 to i64*
  %119 = load i64, i64* %118, align 8
  store %class.CFX_CSSCustomProperty* null, %class.CFX_CSSCustomProperty** %117, align 8
  %120 = bitcast %"class.std::__1::unique_ptr.3"* %115 to i64*
  store i64 %119, i64* %120, align 8
  %121 = getelementptr inbounds %"class.std::__1::unique_ptr.3", %"class.std::__1::unique_ptr.3"* %77, i64 -8
  %122 = getelementptr inbounds %"class.std::__1::unique_ptr.3", %"class.std::__1::unique_ptr.3"* %78, i64 -8
  %123 = getelementptr inbounds %"class.std::__1::unique_ptr.3", %"class.std::__1::unique_ptr.3"* %122, i64 0, i32 0, i32 0, i32 0
  %124 = bitcast %"class.std::__1::unique_ptr.3"* %122 to i64*
  %125 = load i64, i64* %124, align 8
  store %class.CFX_CSSCustomProperty* null, %class.CFX_CSSCustomProperty** %123, align 8
  %126 = bitcast %"class.std::__1::unique_ptr.3"* %121 to i64*
  store i64 %125, i64* %126, align 8
  %127 = icmp eq %"class.std::__1::unique_ptr.3"* %122, %47
  br i1 %127, label %128, label %76

128:                                              ; preds = %76, %71
  %129 = phi %"class.std::__1::unique_ptr.3"* [ %72, %71 ], [ %121, %76 ]
  %130 = load i64, i64* %6, align 8
  %131 = load %"class.std::__1::unique_ptr.3"*, %"class.std::__1::unique_ptr.3"** %3, align 8
  br label %132

132:                                              ; preds = %34, %128
  %133 = phi %"class.std::__1::unique_ptr.3"* [ %131, %128 ], [ %47, %34 ]
  %134 = phi %"class.std::__1::unique_ptr.3"* [ %129, %128 ], [ %37, %34 ]
  %135 = phi i64 [ %130, %128 ], [ %48, %34 ]
  %136 = ptrtoint %"class.std::__1::unique_ptr.3"* %134 to i64
  store i64 %136, i64* %6, align 8
  store i64 %45, i64* %4, align 8
  store i64 %39, i64* %16, align 8
  %137 = inttoptr i64 %135 to %"class.std::__1::unique_ptr.3"*
  %138 = icmp eq %"class.std::__1::unique_ptr.3"* %133, %137
  br i1 %138, label %149, label %139

139:                                              ; preds = %132, %147
  %140 = phi %"class.std::__1::unique_ptr.3"* [ %141, %147 ], [ %133, %132 ]
  %141 = getelementptr inbounds %"class.std::__1::unique_ptr.3", %"class.std::__1::unique_ptr.3"* %140, i64 -1
  %142 = getelementptr inbounds %"class.std::__1::unique_ptr.3", %"class.std::__1::unique_ptr.3"* %141, i64 0, i32 0, i32 0, i32 0
  %143 = load %class.CFX_CSSCustomProperty*, %class.CFX_CSSCustomProperty** %142, align 8
  store %class.CFX_CSSCustomProperty* null, %class.CFX_CSSCustomProperty** %142, align 8
  %144 = icmp eq %class.CFX_CSSCustomProperty* %143, null
  br i1 %144, label %147, label %145

145:                                              ; preds = %139
  tail call void @_ZN21CFX_CSSCustomPropertyD1Ev(%class.CFX_CSSCustomProperty* nonnull %143) #14
  %146 = bitcast %class.CFX_CSSCustomProperty* %143 to i8*
  tail call void @_ZdlPv(i8* %146) #15
  br label %147

147:                                              ; preds = %145, %139
  %148 = icmp eq %"class.std::__1::unique_ptr.3"* %141, %137
  br i1 %148, label %149, label %139

149:                                              ; preds = %147, %132
  %150 = icmp eq i64 %135, 0
  br i1 %150, label %153, label %151

151:                                              ; preds = %149
  %152 = inttoptr i64 %135 to i8*
  tail call void @_ZdlPv(i8* %152) #15
  br label %153

153:                                              ; preds = %149, %151
  ret void
}

declare void @_ZN18CFX_CSSNumberValueC1ENS_4UnitEf(%class.CFX_CSSNumberValue*, i32, float) unnamed_addr #3

declare void @_ZN16CFX_CSSEnumValueC1E20CFX_CSSPropertyValue(%class.CFX_CSSEnumValue*, i8 zeroext) unnamed_addr #3

declare void @_ZN17CFX_CSSColorValueC1Ej(%class.CFX_CSSColorValue*, i32) unnamed_addr #3

declare void @_ZN18CFX_CSSStringValueC1ERKN5fxcrt10WideStringE(%class.CFX_CSSStringValue*, %"class.fxcrt::WideString"* dereferenceable(8)) unnamed_addr #3

; Function Attrs: inlinehint nounwind ssp uwtable
define linkonce_odr hidden void @_ZNSt3__16vectorIN5fxcrt9RetainPtrI12CFX_CSSValueEENS_9allocatorIS4_EEE21__push_back_slow_pathIS4_EEvOT_(%"class.std::__1::vector.51"*, %"class.fxcrt::RetainPtr"* dereferenceable(8)) local_unnamed_addr #10 comdat align 2 {
  %3 = getelementptr inbounds %"class.std::__1::vector.51", %"class.std::__1::vector.51"* %0, i64 0, i32 0, i32 1
  %4 = bitcast %"class.fxcrt::RetainPtr"** %3 to i64*
  %5 = load i64, i64* %4, align 8
  %6 = bitcast %"class.std::__1::vector.51"* %0 to i64*
  %7 = load i64, i64* %6, align 8
  %8 = sub i64 %5, %7
  %9 = ashr exact i64 %8, 3
  %10 = add nsw i64 %9, 1
  %11 = icmp ugt i64 %10, 2305843009213693951
  br i1 %11, label %12, label %14

12:                                               ; preds = %2
  %13 = bitcast %"class.std::__1::vector.51"* %0 to %"class.std::__1::__vector_base_common"*
  tail call void @_ZNKSt3__120__vector_base_commonILb1EE20__throw_length_errorEv(%"class.std::__1::__vector_base_common"* %13) #16
  unreachable

14:                                               ; preds = %2
  %15 = getelementptr inbounds %"class.std::__1::vector.51", %"class.std::__1::vector.51"* %0, i64 0, i32 0, i32 2, i32 0, i32 0
  %16 = bitcast %"class.fxcrt::RetainPtr"** %15 to i64*
  %17 = load i64, i64* %16, align 8
  %18 = sub i64 %17, %7
  %19 = ashr exact i64 %18, 3
  %20 = icmp ult i64 %19, 1152921504606846975
  br i1 %20, label %21, label %29

21:                                               ; preds = %14
  %22 = ashr exact i64 %18, 2
  %23 = icmp ult i64 %22, %10
  %24 = select i1 %23, i64 %10, i64 %22
  %25 = icmp eq i64 %24, 0
  br i1 %25, label %34, label %26

26:                                               ; preds = %21
  %27 = icmp ugt i64 %24, 2305843009213693951
  br i1 %27, label %28, label %29

28:                                               ; preds = %26
  tail call void @abort() #16
  unreachable

29:                                               ; preds = %14, %26
  %30 = phi i64 [ %24, %26 ], [ 2305843009213693951, %14 ]
  %31 = shl i64 %30, 3
  %32 = tail call i8* @_Znwm(i64 %31) #15
  %33 = bitcast i8* %32 to %"class.fxcrt::RetainPtr"*
  br label %34

34:                                               ; preds = %21, %29
  %35 = phi i64 [ %30, %29 ], [ 0, %21 ]
  %36 = phi %"class.fxcrt::RetainPtr"* [ %33, %29 ], [ null, %21 ]
  %37 = getelementptr inbounds %"class.fxcrt::RetainPtr", %"class.fxcrt::RetainPtr"* %36, i64 %9
  %38 = getelementptr inbounds %"class.fxcrt::RetainPtr", %"class.fxcrt::RetainPtr"* %36, i64 %35
  %39 = ptrtoint %"class.fxcrt::RetainPtr"* %38 to i64
  %40 = bitcast %"class.fxcrt::RetainPtr"* %37 to i64*
  store i64 0, i64* %40, align 8
  %41 = bitcast %"class.fxcrt::RetainPtr"* %1 to i64*
  %42 = load i64, i64* %41, align 8
  store i64 %42, i64* %40, align 8
  store i64 0, i64* %41, align 8
  %43 = getelementptr inbounds %"class.fxcrt::RetainPtr", %"class.fxcrt::RetainPtr"* %37, i64 1
  %44 = ptrtoint %"class.fxcrt::RetainPtr"* %43 to i64
  %45 = getelementptr inbounds %"class.std::__1::vector.51", %"class.std::__1::vector.51"* %0, i64 0, i32 0, i32 0
  %46 = load %"class.fxcrt::RetainPtr"*, %"class.fxcrt::RetainPtr"** %45, align 8
  %47 = ptrtoint %"class.fxcrt::RetainPtr"* %46 to i64
  %48 = load %"class.fxcrt::RetainPtr"*, %"class.fxcrt::RetainPtr"** %3, align 8
  %49 = icmp eq %"class.fxcrt::RetainPtr"* %48, %46
  br i1 %49, label %215, label %50

50:                                               ; preds = %34
  %51 = getelementptr %"class.fxcrt::RetainPtr", %"class.fxcrt::RetainPtr"* %48, i64 -1, i32 0, i32 0, i32 0, i32 0
  %52 = ptrtoint %class.CFX_CSSValue** %51 to i64
  %53 = sub i64 %52, %47
  %54 = lshr i64 %53, 3
  %55 = add nuw nsw i64 %54, 1
  %56 = icmp ult i64 %55, 4
  br i1 %56, label %161, label %57

57:                                               ; preds = %50
  %58 = getelementptr %"class.fxcrt::RetainPtr", %"class.fxcrt::RetainPtr"* %48, i64 -1, i32 0, i32 0, i32 0, i32 0
  %59 = ptrtoint %class.CFX_CSSValue** %58 to i64
  %60 = sub i64 %59, %47
  %61 = lshr i64 %60, 3
  %62 = xor i64 %61, -1
  %63 = add nsw i64 %9, %62
  %64 = getelementptr %"class.fxcrt::RetainPtr", %"class.fxcrt::RetainPtr"* %36, i64 %63
  %65 = xor i64 %61, -1
  %66 = getelementptr %"class.fxcrt::RetainPtr", %"class.fxcrt::RetainPtr"* %48, i64 %65
  %67 = icmp ult %"class.fxcrt::RetainPtr"* %64, %48
  %68 = icmp ult %"class.fxcrt::RetainPtr"* %66, %37
  %69 = and i1 %67, %68
  br i1 %69, label %161, label %70

70:                                               ; preds = %57
  %71 = and i64 %55, 4611686018427387900
  %72 = sub nsw i64 0, %71
  %73 = getelementptr %"class.fxcrt::RetainPtr", %"class.fxcrt::RetainPtr"* %37, i64 %72
  %74 = sub nsw i64 0, %71
  %75 = getelementptr %"class.fxcrt::RetainPtr", %"class.fxcrt::RetainPtr"* %48, i64 %74
  %76 = add nsw i64 %71, -4
  %77 = lshr exact i64 %76, 2
  %78 = add nuw nsw i64 %77, 1
  %79 = and i64 %78, 1
  %80 = icmp eq i64 %76, 0
  br i1 %80, label %135, label %81

81:                                               ; preds = %70
  %82 = sub nuw nsw i64 %78, %79
  %83 = getelementptr %"class.fxcrt::RetainPtr", %"class.fxcrt::RetainPtr"* %37, i64 -1
  %84 = getelementptr %"class.fxcrt::RetainPtr", %"class.fxcrt::RetainPtr"* %48, i64 -1
  %85 = getelementptr %"class.fxcrt::RetainPtr", %"class.fxcrt::RetainPtr"* %37, i64 -1
  %86 = getelementptr %"class.fxcrt::RetainPtr", %"class.fxcrt::RetainPtr"* %48, i64 -1
  br label %87

87:                                               ; preds = %87, %81
  %88 = phi i64 [ 0, %81 ], [ %130, %87 ]
  %89 = phi i64 [ %82, %81 ], [ %131, %87 ]
  %90 = sub i64 0, %88
  %91 = sub i64 0, %88
  %92 = getelementptr inbounds %"class.fxcrt::RetainPtr", %"class.fxcrt::RetainPtr"* %83, i64 %90
  %93 = getelementptr inbounds %"class.fxcrt::RetainPtr", %"class.fxcrt::RetainPtr"* %84, i64 %91
  %94 = getelementptr inbounds %"class.fxcrt::RetainPtr", %"class.fxcrt::RetainPtr"* %92, i64 -1
  %95 = bitcast %"class.fxcrt::RetainPtr"* %94 to <2 x i64>*
  store <2 x i64> zeroinitializer, <2 x i64>* %95, align 8, !alias.scope !108, !noalias !111
  %96 = getelementptr inbounds %"class.fxcrt::RetainPtr", %"class.fxcrt::RetainPtr"* %92, i64 -2
  %97 = getelementptr inbounds %"class.fxcrt::RetainPtr", %"class.fxcrt::RetainPtr"* %96, i64 -1
  %98 = bitcast %"class.fxcrt::RetainPtr"* %97 to <2 x i64>*
  store <2 x i64> zeroinitializer, <2 x i64>* %98, align 8, !alias.scope !108, !noalias !111
  %99 = getelementptr inbounds %"class.fxcrt::RetainPtr", %"class.fxcrt::RetainPtr"* %93, i64 -1
  %100 = bitcast %"class.fxcrt::RetainPtr"* %99 to <2 x i64>*
  %101 = load <2 x i64>, <2 x i64>* %100, align 8, !alias.scope !111
  %102 = getelementptr inbounds %"class.fxcrt::RetainPtr", %"class.fxcrt::RetainPtr"* %93, i64 -2
  %103 = getelementptr inbounds %"class.fxcrt::RetainPtr", %"class.fxcrt::RetainPtr"* %102, i64 -1
  %104 = bitcast %"class.fxcrt::RetainPtr"* %103 to <2 x i64>*
  %105 = load <2 x i64>, <2 x i64>* %104, align 8, !alias.scope !111
  %106 = bitcast %"class.fxcrt::RetainPtr"* %94 to <2 x i64>*
  store <2 x i64> %101, <2 x i64>* %106, align 8, !alias.scope !108, !noalias !111
  %107 = bitcast %"class.fxcrt::RetainPtr"* %97 to <2 x i64>*
  store <2 x i64> %105, <2 x i64>* %107, align 8, !alias.scope !108, !noalias !111
  %108 = bitcast %"class.fxcrt::RetainPtr"* %99 to <2 x i64>*
  store <2 x i64> zeroinitializer, <2 x i64>* %108, align 8, !alias.scope !111
  %109 = bitcast %"class.fxcrt::RetainPtr"* %103 to <2 x i64>*
  store <2 x i64> zeroinitializer, <2 x i64>* %109, align 8, !alias.scope !111
  %110 = sub nuw nsw i64 -4, %88
  %111 = sub nuw nsw i64 -4, %88
  %112 = getelementptr inbounds %"class.fxcrt::RetainPtr", %"class.fxcrt::RetainPtr"* %85, i64 %110
  %113 = getelementptr inbounds %"class.fxcrt::RetainPtr", %"class.fxcrt::RetainPtr"* %86, i64 %111
  %114 = getelementptr inbounds %"class.fxcrt::RetainPtr", %"class.fxcrt::RetainPtr"* %112, i64 -1
  %115 = bitcast %"class.fxcrt::RetainPtr"* %114 to <2 x i64>*
  store <2 x i64> zeroinitializer, <2 x i64>* %115, align 8, !alias.scope !108, !noalias !111
  %116 = getelementptr inbounds %"class.fxcrt::RetainPtr", %"class.fxcrt::RetainPtr"* %112, i64 -2
  %117 = getelementptr inbounds %"class.fxcrt::RetainPtr", %"class.fxcrt::RetainPtr"* %116, i64 -1
  %118 = bitcast %"class.fxcrt::RetainPtr"* %117 to <2 x i64>*
  store <2 x i64> zeroinitializer, <2 x i64>* %118, align 8, !alias.scope !108, !noalias !111
  %119 = getelementptr inbounds %"class.fxcrt::RetainPtr", %"class.fxcrt::RetainPtr"* %113, i64 -1
  %120 = bitcast %"class.fxcrt::RetainPtr"* %119 to <2 x i64>*
  %121 = load <2 x i64>, <2 x i64>* %120, align 8, !alias.scope !111
  %122 = getelementptr inbounds %"class.fxcrt::RetainPtr", %"class.fxcrt::RetainPtr"* %113, i64 -2
  %123 = getelementptr inbounds %"class.fxcrt::RetainPtr", %"class.fxcrt::RetainPtr"* %122, i64 -1
  %124 = bitcast %"class.fxcrt::RetainPtr"* %123 to <2 x i64>*
  %125 = load <2 x i64>, <2 x i64>* %124, align 8, !alias.scope !111
  %126 = bitcast %"class.fxcrt::RetainPtr"* %114 to <2 x i64>*
  store <2 x i64> %121, <2 x i64>* %126, align 8, !alias.scope !108, !noalias !111
  %127 = bitcast %"class.fxcrt::RetainPtr"* %117 to <2 x i64>*
  store <2 x i64> %125, <2 x i64>* %127, align 8, !alias.scope !108, !noalias !111
  %128 = bitcast %"class.fxcrt::RetainPtr"* %119 to <2 x i64>*
  store <2 x i64> zeroinitializer, <2 x i64>* %128, align 8, !alias.scope !111
  %129 = bitcast %"class.fxcrt::RetainPtr"* %123 to <2 x i64>*
  store <2 x i64> zeroinitializer, <2 x i64>* %129, align 8, !alias.scope !111
  %130 = add i64 %88, 8
  %131 = add i64 %89, -2
  %132 = icmp eq i64 %131, 0
  br i1 %132, label %133, label %87, !llvm.loop !113

133:                                              ; preds = %87
  %134 = sub nuw nsw i64 -8, %88
  br label %135

135:                                              ; preds = %133, %70
  %136 = phi i64 [ 0, %70 ], [ %134, %133 ]
  %137 = icmp eq i64 %79, 0
  br i1 %137, label %159, label %138

138:                                              ; preds = %135
  %139 = getelementptr %"class.fxcrt::RetainPtr", %"class.fxcrt::RetainPtr"* %37, i64 -1
  %140 = getelementptr %"class.fxcrt::RetainPtr", %"class.fxcrt::RetainPtr"* %48, i64 -1
  %141 = getelementptr inbounds %"class.fxcrt::RetainPtr", %"class.fxcrt::RetainPtr"* %139, i64 %136
  %142 = getelementptr inbounds %"class.fxcrt::RetainPtr", %"class.fxcrt::RetainPtr"* %140, i64 %136
  %143 = getelementptr inbounds %"class.fxcrt::RetainPtr", %"class.fxcrt::RetainPtr"* %141, i64 -1
  %144 = bitcast %"class.fxcrt::RetainPtr"* %143 to <2 x i64>*
  store <2 x i64> zeroinitializer, <2 x i64>* %144, align 8, !alias.scope !108, !noalias !111
  %145 = getelementptr inbounds %"class.fxcrt::RetainPtr", %"class.fxcrt::RetainPtr"* %141, i64 -2
  %146 = getelementptr inbounds %"class.fxcrt::RetainPtr", %"class.fxcrt::RetainPtr"* %145, i64 -1
  %147 = bitcast %"class.fxcrt::RetainPtr"* %146 to <2 x i64>*
  store <2 x i64> zeroinitializer, <2 x i64>* %147, align 8, !alias.scope !108, !noalias !111
  %148 = getelementptr inbounds %"class.fxcrt::RetainPtr", %"class.fxcrt::RetainPtr"* %142, i64 -1
  %149 = bitcast %"class.fxcrt::RetainPtr"* %148 to <2 x i64>*
  %150 = load <2 x i64>, <2 x i64>* %149, align 8, !alias.scope !111
  %151 = getelementptr inbounds %"class.fxcrt::RetainPtr", %"class.fxcrt::RetainPtr"* %142, i64 -2
  %152 = getelementptr inbounds %"class.fxcrt::RetainPtr", %"class.fxcrt::RetainPtr"* %151, i64 -1
  %153 = bitcast %"class.fxcrt::RetainPtr"* %152 to <2 x i64>*
  %154 = load <2 x i64>, <2 x i64>* %153, align 8, !alias.scope !111
  %155 = bitcast %"class.fxcrt::RetainPtr"* %143 to <2 x i64>*
  store <2 x i64> %150, <2 x i64>* %155, align 8, !alias.scope !108, !noalias !111
  %156 = bitcast %"class.fxcrt::RetainPtr"* %146 to <2 x i64>*
  store <2 x i64> %154, <2 x i64>* %156, align 8, !alias.scope !108, !noalias !111
  %157 = bitcast %"class.fxcrt::RetainPtr"* %148 to <2 x i64>*
  store <2 x i64> zeroinitializer, <2 x i64>* %157, align 8, !alias.scope !111
  %158 = bitcast %"class.fxcrt::RetainPtr"* %152 to <2 x i64>*
  store <2 x i64> zeroinitializer, <2 x i64>* %158, align 8, !alias.scope !111
  br label %159

159:                                              ; preds = %135, %138
  %160 = icmp eq i64 %55, %71
  br i1 %160, label %211, label %161

161:                                              ; preds = %159, %57, %50
  %162 = phi %"class.fxcrt::RetainPtr"* [ %37, %57 ], [ %37, %50 ], [ %73, %159 ]
  %163 = phi %"class.fxcrt::RetainPtr"* [ %48, %57 ], [ %48, %50 ], [ %75, %159 ]
  %164 = getelementptr %"class.fxcrt::RetainPtr", %"class.fxcrt::RetainPtr"* %163, i64 -1, i32 0, i32 0, i32 0, i32 0
  %165 = ptrtoint %class.CFX_CSSValue** %164 to i64
  %166 = sub i64 %165, %47
  %167 = lshr i64 %166, 3
  %168 = add nuw nsw i64 %167, 1
  %169 = and i64 %168, 3
  %170 = icmp eq i64 %169, 0
  br i1 %170, label %182, label %171

171:                                              ; preds = %161, %171
  %172 = phi %"class.fxcrt::RetainPtr"* [ %175, %171 ], [ %162, %161 ]
  %173 = phi %"class.fxcrt::RetainPtr"* [ %176, %171 ], [ %163, %161 ]
  %174 = phi i64 [ %180, %171 ], [ %169, %161 ]
  %175 = getelementptr inbounds %"class.fxcrt::RetainPtr", %"class.fxcrt::RetainPtr"* %172, i64 -1
  %176 = getelementptr inbounds %"class.fxcrt::RetainPtr", %"class.fxcrt::RetainPtr"* %173, i64 -1
  %177 = bitcast %"class.fxcrt::RetainPtr"* %175 to i64*
  store i64 0, i64* %177, align 8
  %178 = bitcast %"class.fxcrt::RetainPtr"* %176 to i64*
  %179 = load i64, i64* %178, align 8
  store i64 %179, i64* %177, align 8
  store i64 0, i64* %178, align 8
  %180 = add i64 %174, -1
  %181 = icmp eq i64 %180, 0
  br i1 %181, label %182, label %171, !llvm.loop !115

182:                                              ; preds = %171, %161
  %183 = phi %"class.fxcrt::RetainPtr"* [ undef, %161 ], [ %175, %171 ]
  %184 = phi %"class.fxcrt::RetainPtr"* [ %162, %161 ], [ %175, %171 ]
  %185 = phi %"class.fxcrt::RetainPtr"* [ %163, %161 ], [ %176, %171 ]
  %186 = icmp ult i64 %166, 24
  br i1 %186, label %211, label %187

187:                                              ; preds = %182, %187
  %188 = phi %"class.fxcrt::RetainPtr"* [ %205, %187 ], [ %184, %182 ]
  %189 = phi %"class.fxcrt::RetainPtr"* [ %206, %187 ], [ %185, %182 ]
  %190 = getelementptr inbounds %"class.fxcrt::RetainPtr", %"class.fxcrt::RetainPtr"* %188, i64 -1
  %191 = getelementptr inbounds %"class.fxcrt::RetainPtr", %"class.fxcrt::RetainPtr"* %189, i64 -1
  %192 = bitcast %"class.fxcrt::RetainPtr"* %190 to i64*
  store i64 0, i64* %192, align 8
  %193 = bitcast %"class.fxcrt::RetainPtr"* %191 to i64*
  %194 = load i64, i64* %193, align 8
  store i64 %194, i64* %192, align 8
  store i64 0, i64* %193, align 8
  %195 = getelementptr inbounds %"class.fxcrt::RetainPtr", %"class.fxcrt::RetainPtr"* %188, i64 -2
  %196 = getelementptr inbounds %"class.fxcrt::RetainPtr", %"class.fxcrt::RetainPtr"* %189, i64 -2
  %197 = bitcast %"class.fxcrt::RetainPtr"* %195 to i64*
  store i64 0, i64* %197, align 8
  %198 = bitcast %"class.fxcrt::RetainPtr"* %196 to i64*
  %199 = load i64, i64* %198, align 8
  store i64 %199, i64* %197, align 8
  store i64 0, i64* %198, align 8
  %200 = getelementptr inbounds %"class.fxcrt::RetainPtr", %"class.fxcrt::RetainPtr"* %188, i64 -3
  %201 = getelementptr inbounds %"class.fxcrt::RetainPtr", %"class.fxcrt::RetainPtr"* %189, i64 -3
  %202 = bitcast %"class.fxcrt::RetainPtr"* %200 to i64*
  store i64 0, i64* %202, align 8
  %203 = bitcast %"class.fxcrt::RetainPtr"* %201 to i64*
  %204 = load i64, i64* %203, align 8
  store i64 %204, i64* %202, align 8
  store i64 0, i64* %203, align 8
  %205 = getelementptr inbounds %"class.fxcrt::RetainPtr", %"class.fxcrt::RetainPtr"* %188, i64 -4
  %206 = getelementptr inbounds %"class.fxcrt::RetainPtr", %"class.fxcrt::RetainPtr"* %189, i64 -4
  %207 = bitcast %"class.fxcrt::RetainPtr"* %205 to i64*
  store i64 0, i64* %207, align 8
  %208 = bitcast %"class.fxcrt::RetainPtr"* %206 to i64*
  %209 = load i64, i64* %208, align 8
  store i64 %209, i64* %207, align 8
  store i64 0, i64* %208, align 8
  %210 = icmp eq %"class.fxcrt::RetainPtr"* %206, %46
  br i1 %210, label %211, label %187, !llvm.loop !116

211:                                              ; preds = %182, %187, %159
  %212 = phi %"class.fxcrt::RetainPtr"* [ %73, %159 ], [ %183, %182 ], [ %205, %187 ]
  %213 = load i64, i64* %6, align 8
  %214 = load %"class.fxcrt::RetainPtr"*, %"class.fxcrt::RetainPtr"** %3, align 8
  br label %215

215:                                              ; preds = %34, %211
  %216 = phi %"class.fxcrt::RetainPtr"* [ %214, %211 ], [ %46, %34 ]
  %217 = phi %"class.fxcrt::RetainPtr"* [ %212, %211 ], [ %37, %34 ]
  %218 = phi i64 [ %213, %211 ], [ %47, %34 ]
  %219 = ptrtoint %"class.fxcrt::RetainPtr"* %217 to i64
  store i64 %219, i64* %6, align 8
  store i64 %44, i64* %4, align 8
  store i64 %39, i64* %16, align 8
  %220 = inttoptr i64 %218 to %"class.fxcrt::RetainPtr"*
  %221 = icmp eq %"class.fxcrt::RetainPtr"* %216, %220
  br i1 %221, label %241, label %222

222:                                              ; preds = %215, %239
  %223 = phi %"class.fxcrt::RetainPtr"* [ %224, %239 ], [ %216, %215 ]
  %224 = getelementptr inbounds %"class.fxcrt::RetainPtr", %"class.fxcrt::RetainPtr"* %223, i64 -1
  %225 = getelementptr inbounds %"class.fxcrt::RetainPtr", %"class.fxcrt::RetainPtr"* %224, i64 0, i32 0, i32 0, i32 0, i32 0
  %226 = load %class.CFX_CSSValue*, %class.CFX_CSSValue** %225, align 8
  store %class.CFX_CSSValue* null, %class.CFX_CSSValue** %225, align 8
  %227 = icmp eq %class.CFX_CSSValue* %226, null
  br i1 %227, label %239, label %228

228:                                              ; preds = %222
  %229 = getelementptr inbounds %class.CFX_CSSValue, %class.CFX_CSSValue* %226, i64 0, i32 0, i32 1
  %230 = load i64, i64* %229, align 8
  %231 = add nsw i64 %230, -1
  store i64 %231, i64* %229, align 8
  %232 = icmp eq i64 %231, 0
  br i1 %232, label %233, label %239

233:                                              ; preds = %228
  %234 = getelementptr inbounds %class.CFX_CSSValue, %class.CFX_CSSValue* %226, i64 0, i32 0
  %235 = bitcast %class.CFX_CSSValue* %226 to void (%"class.fxcrt::Retainable"*)***
  %236 = load void (%"class.fxcrt::Retainable"*)**, void (%"class.fxcrt::Retainable"*)*** %235, align 8
  %237 = getelementptr inbounds void (%"class.fxcrt::Retainable"*)*, void (%"class.fxcrt::Retainable"*)** %236, i64 1
  %238 = load void (%"class.fxcrt::Retainable"*)*, void (%"class.fxcrt::Retainable"*)** %237, align 8
  tail call void %238(%"class.fxcrt::Retainable"* nonnull %234) #14
  br label %239

239:                                              ; preds = %233, %228, %222
  %240 = icmp eq %"class.fxcrt::RetainPtr"* %224, %220
  br i1 %240, label %241, label %222

241:                                              ; preds = %239, %215
  %242 = icmp eq i64 %218, 0
  br i1 %242, label %245, label %243

243:                                              ; preds = %241
  %244 = inttoptr i64 %218 to i8*
  tail call void @_ZdlPv(i8* %244) #15
  br label %245

245:                                              ; preds = %241, %243
  ret void
}

declare void @_ZN16CFX_CSSValueListC1ENSt3__16vectorIN5fxcrt9RetainPtrI12CFX_CSSValueEENS0_9allocatorIS5_EEEE(%class.CFX_CSSValueList*, %"class.std::__1::vector.51"*) unnamed_addr #3

attributes #0 = { nofree norecurse nounwind ssp uwtable "correctly-rounded-divide-sqrt-fp-math"="false" "disable-tail-calls"="false" "less-precise-fpmad"="false" "min-legal-vector-width"="0" "no-frame-pointer-elim"="false" "no-frame-pointer-elim-non-leaf" "no-infs-fp-math"="false" "no-jump-tables"="false" "no-nans-fp-math"="false" "no-signed-zeros-fp-math"="false" "no-trapping-math"="false" "null-pointer-is-valid"="true" "stack-protector-buffer-size"="4" "target-cpu"="x86-64" "target-features"="+cx8,+fxsr,+mmx,+sse,+sse2,+sse3,+x87" "unsafe-fp-math"="false" "use-soft-float"="false" }
attributes #1 = { argmemonly nounwind }
attributes #2 = { nounwind ssp uwtable "correctly-rounded-divide-sqrt-fp-math"="false" "disable-tail-calls"="false" "less-precise-fpmad"="false" "min-legal-vector-width"="0" "no-frame-pointer-elim"="false" "no-frame-pointer-elim-non-leaf" "no-infs-fp-math"="false" "no-jump-tables"="false" "no-nans-fp-math"="false" "no-signed-zeros-fp-math"="false" "no-trapping-math"="false" "null-pointer-is-valid"="true" "stack-protector-buffer-size"="4" "target-cpu"="x86-64" "target-features"="+cx8,+fxsr,+mmx,+sse,+sse2,+sse3,+x87" "unsafe-fp-math"="false" "use-soft-float"="false" }
attributes #3 = { "correctly-rounded-divide-sqrt-fp-math"="false" "disable-tail-calls"="false" "less-precise-fpmad"="false" "no-frame-pointer-elim"="false" "no-frame-pointer-elim-non-leaf" "no-infs-fp-math"="false" "no-nans-fp-math"="false" "no-signed-zeros-fp-math"="false" "no-trapping-math"="false" "null-pointer-is-valid"="true" "stack-protector-buffer-size"="4" "target-cpu"="x86-64" "target-features"="+cx8,+fxsr,+mmx,+sse,+sse2,+sse3,+x87" "unsafe-fp-math"="false" "use-soft-float"="false" }
attributes #4 = { nounwind "correctly-rounded-divide-sqrt-fp-math"="false" "disable-tail-calls"="false" "less-precise-fpmad"="false" "no-frame-pointer-elim"="false" "no-frame-pointer-elim-non-leaf" "no-infs-fp-math"="false" "no-nans-fp-math"="false" "no-signed-zeros-fp-math"="false" "no-trapping-math"="false" "null-pointer-is-valid"="true" "stack-protector-buffer-size"="4" "target-cpu"="x86-64" "target-features"="+cx8,+fxsr,+mmx,+sse,+sse2,+sse3,+x87" "unsafe-fp-math"="false" "use-soft-float"="false" }
attributes #5 = { norecurse nounwind readonly ssp uwtable "correctly-rounded-divide-sqrt-fp-math"="false" "disable-tail-calls"="false" "less-precise-fpmad"="false" "min-legal-vector-width"="0" "no-frame-pointer-elim"="false" "no-frame-pointer-elim-non-leaf" "no-infs-fp-math"="false" "no-jump-tables"="false" "no-nans-fp-math"="false" "no-signed-zeros-fp-math"="false" "no-trapping-math"="false" "null-pointer-is-valid"="true" "stack-protector-buffer-size"="4" "target-cpu"="x86-64" "target-features"="+cx8,+fxsr,+mmx,+sse,+sse2,+sse3,+x87" "unsafe-fp-math"="false" "use-soft-float"="false" }
attributes #6 = { nounwind readnone "correctly-rounded-divide-sqrt-fp-math"="false" "disable-tail-calls"="false" "less-precise-fpmad"="false" "no-frame-pointer-elim"="false" "no-frame-pointer-elim-non-leaf" "no-infs-fp-math"="false" "no-nans-fp-math"="false" "no-signed-zeros-fp-math"="false" "no-trapping-math"="false" "null-pointer-is-valid"="true" "stack-protector-buffer-size"="4" "target-cpu"="x86-64" "target-features"="+cx8,+fxsr,+mmx,+sse,+sse2,+sse3,+x87" "unsafe-fp-math"="false" "use-soft-float"="false" }
attributes #7 = { nounwind readnone speculatable }
attributes #8 = { nobuiltin nounwind "correctly-rounded-divide-sqrt-fp-math"="false" "disable-tail-calls"="false" "less-precise-fpmad"="false" "no-frame-pointer-elim"="false" "no-frame-pointer-elim-non-leaf" "no-infs-fp-math"="false" "no-nans-fp-math"="false" "no-signed-zeros-fp-math"="false" "no-trapping-math"="false" "null-pointer-is-valid"="true" "stack-protector-buffer-size"="4" "target-cpu"="x86-64" "target-features"="+cx8,+fxsr,+mmx,+sse,+sse2,+sse3,+x87" "unsafe-fp-math"="false" "use-soft-float"="false" }
attributes #9 = { nobuiltin nofree "correctly-rounded-divide-sqrt-fp-math"="false" "disable-tail-calls"="false" "less-precise-fpmad"="false" "no-frame-pointer-elim"="false" "no-frame-pointer-elim-non-leaf" "no-infs-fp-math"="false" "no-nans-fp-math"="false" "no-signed-zeros-fp-math"="false" "no-trapping-math"="false" "null-pointer-is-valid"="true" "stack-protector-buffer-size"="4" "target-cpu"="x86-64" "target-features"="+cx8,+fxsr,+mmx,+sse,+sse2,+sse3,+x87" "unsafe-fp-math"="false" "use-soft-float"="false" }
attributes #10 = { inlinehint nounwind ssp uwtable "correctly-rounded-divide-sqrt-fp-math"="false" "disable-tail-calls"="false" "less-precise-fpmad"="false" "min-legal-vector-width"="0" "no-frame-pointer-elim"="false" "no-frame-pointer-elim-non-leaf" "no-infs-fp-math"="false" "no-jump-tables"="false" "no-nans-fp-math"="false" "no-signed-zeros-fp-math"="false" "no-trapping-math"="false" "null-pointer-is-valid"="true" "stack-protector-buffer-size"="4" "target-cpu"="x86-64" "target-features"="+cx8,+fxsr,+mmx,+sse,+sse2,+sse3,+x87" "unsafe-fp-math"="false" "use-soft-float"="false" }
attributes #11 = { noreturn "correctly-rounded-divide-sqrt-fp-math"="false" "disable-tail-calls"="false" "less-precise-fpmad"="false" "no-frame-pointer-elim"="false" "no-frame-pointer-elim-non-leaf" "no-infs-fp-math"="false" "no-nans-fp-math"="false" "no-signed-zeros-fp-math"="false" "no-trapping-math"="false" "null-pointer-is-valid"="true" "stack-protector-buffer-size"="4" "target-cpu"="x86-64" "target-features"="+cx8,+fxsr,+mmx,+sse,+sse2,+sse3,+x87" "unsafe-fp-math"="false" "use-soft-float"="false" }
attributes #12 = { noreturn nounwind "correctly-rounded-divide-sqrt-fp-math"="false" "disable-tail-calls"="false" "less-precise-fpmad"="false" "no-frame-pointer-elim"="false" "no-frame-pointer-elim-non-leaf" "no-infs-fp-math"="false" "no-nans-fp-math"="false" "no-signed-zeros-fp-math"="false" "no-trapping-math"="false" "null-pointer-is-valid"="true" "stack-protector-buffer-size"="4" "target-cpu"="x86-64" "target-features"="+cx8,+fxsr,+mmx,+sse,+sse2,+sse3,+x87" "unsafe-fp-math"="false" "use-soft-float"="false" }
attributes #13 = { nounwind readnone }
attributes #14 = { nounwind }
attributes #15 = { builtin nounwind }
attributes #16 = { noreturn nounwind }

!llvm.module.flags = !{!0, !1}

!0 = !{i32 1, !"wchar_size", i32 4}
!1 = !{i32 7, !"PIC Level", i32 2}
!2 = !{i8 0, i8 2}
!3 = !{!4}
!4 = distinct !{!4, !5, !"_ZN18CFX_CSSDeclaration9ParseEnumEPKwi: argument 0"}
!5 = distinct !{!5, !"_ZN18CFX_CSSDeclaration9ParseEnumEPKwi"}
!6 = !{!7, !4}
!7 = distinct !{!7, !8, !"_ZN6pdfium10MakeRetainI16CFX_CSSEnumValueJRK20CFX_CSSPropertyValueEEEN5fxcrt9RetainPtrIT_EEDpOT0_: argument 0"}
!8 = distinct !{!8, !"_ZN6pdfium10MakeRetainI16CFX_CSSEnumValueJRK20CFX_CSSPropertyValueEEEN5fxcrt9RetainPtrIT_EEDpOT0_"}
!9 = !{!10}
!10 = distinct !{!10, !11, !"_ZN18CFX_CSSDeclaration10ParseColorEPKwi: argument 0"}
!11 = distinct !{!11, !"_ZN18CFX_CSSDeclaration10ParseColorEPKwi"}
!12 = !{!13, !10}
!13 = distinct !{!13, !14, !"_ZN6pdfium10MakeRetainI17CFX_CSSColorValueJRjEEEN5fxcrt9RetainPtrIT_EEDpOT0_: argument 0"}
!14 = distinct !{!14, !"_ZN6pdfium10MakeRetainI17CFX_CSSColorValueJRjEEEN5fxcrt9RetainPtrIT_EEDpOT0_"}
!15 = !{!16}
!16 = distinct !{!16, !17, !"_ZN6pdfium10MakeRetainI18CFX_CSSNumberValueJRNS1_4UnitERfEEEN5fxcrt9RetainPtrIT_EEDpOT0_: argument 0"}
!17 = distinct !{!17, !"_ZN6pdfium10MakeRetainI18CFX_CSSNumberValueJRNS1_4UnitERfEEEN5fxcrt9RetainPtrIT_EEDpOT0_"}
!18 = !{!19}
!19 = distinct !{!19, !20, !"_ZN6pdfium10MakeRetainI16CFX_CSSEnumValueJRK20CFX_CSSPropertyValueEEEN5fxcrt9RetainPtrIT_EEDpOT0_: argument 0"}
!20 = distinct !{!20, !"_ZN6pdfium10MakeRetainI16CFX_CSSEnumValueJRK20CFX_CSSPropertyValueEEEN5fxcrt9RetainPtrIT_EEDpOT0_"}
!21 = !{!22}
!22 = distinct !{!22, !23, !"_ZN6pdfium10MakeRetainI17CFX_CSSColorValueJRjEEEN5fxcrt9RetainPtrIT_EEDpOT0_: argument 0"}
!23 = distinct !{!23, !"_ZN6pdfium10MakeRetainI17CFX_CSSColorValueJRjEEEN5fxcrt9RetainPtrIT_EEDpOT0_"}
!24 = !{!25}
!25 = distinct !{!25, !26, !"_ZN6pdfium10MakeRetainI18CFX_CSSStringValueJN5fxcrt10WideStringEEEENS2_9RetainPtrIT_EEDpOT0_: argument 0"}
!26 = distinct !{!26, !"_ZN6pdfium10MakeRetainI18CFX_CSSStringValueJN5fxcrt10WideStringEEEENS2_9RetainPtrIT_EEDpOT0_"}
!27 = !{!28}
!28 = distinct !{!28, !29, !"_ZN6pdfium10MakeRetainI16CFX_CSSEnumValueJRK20CFX_CSSPropertyValueEEEN5fxcrt9RetainPtrIT_EEDpOT0_: argument 0"}
!29 = distinct !{!29, !"_ZN6pdfium10MakeRetainI16CFX_CSSEnumValueJRK20CFX_CSSPropertyValueEEEN5fxcrt9RetainPtrIT_EEDpOT0_"}
!30 = !{!31}
!31 = distinct !{!31, !32, !"_ZN6pdfium10MakeRetainI16CFX_CSSEnumValueJRK20CFX_CSSPropertyValueEEEN5fxcrt9RetainPtrIT_EEDpOT0_: argument 0"}
!32 = distinct !{!32, !"_ZN6pdfium10MakeRetainI16CFX_CSSEnumValueJRK20CFX_CSSPropertyValueEEEN5fxcrt9RetainPtrIT_EEDpOT0_"}
!33 = !{!34}
!34 = distinct !{!34, !35, !"_ZN6pdfium10MakeRetainI16CFX_CSSEnumValueJRK20CFX_CSSPropertyValueEEEN5fxcrt9RetainPtrIT_EEDpOT0_: argument 0"}
!35 = distinct !{!35, !"_ZN6pdfium10MakeRetainI16CFX_CSSEnumValueJRK20CFX_CSSPropertyValueEEEN5fxcrt9RetainPtrIT_EEDpOT0_"}
!36 = !{!37}
!37 = distinct !{!37, !38, !"_ZN6pdfium10MakeRetainI16CFX_CSSEnumValueJRK20CFX_CSSPropertyValueEEEN5fxcrt9RetainPtrIT_EEDpOT0_: argument 0"}
!38 = distinct !{!38, !"_ZN6pdfium10MakeRetainI16CFX_CSSEnumValueJRK20CFX_CSSPropertyValueEEEN5fxcrt9RetainPtrIT_EEDpOT0_"}
!39 = !{!40}
!40 = distinct !{!40, !41, !"_ZN6pdfium10MakeRetainI16CFX_CSSEnumValueJRK20CFX_CSSPropertyValueEEEN5fxcrt9RetainPtrIT_EEDpOT0_: argument 0"}
!41 = distinct !{!41, !"_ZN6pdfium10MakeRetainI16CFX_CSSEnumValueJRK20CFX_CSSPropertyValueEEEN5fxcrt9RetainPtrIT_EEDpOT0_"}
!42 = !{!43}
!43 = distinct !{!43, !44, !"_ZN6pdfium10MakeRetainI16CFX_CSSEnumValueJRK20CFX_CSSPropertyValueEEEN5fxcrt9RetainPtrIT_EEDpOT0_: argument 0"}
!44 = distinct !{!44, !"_ZN6pdfium10MakeRetainI16CFX_CSSEnumValueJRK20CFX_CSSPropertyValueEEEN5fxcrt9RetainPtrIT_EEDpOT0_"}
!45 = !{!46}
!46 = distinct !{!46, !47, !"_ZN6pdfium10MakeRetainI16CFX_CSSEnumValueJRK20CFX_CSSPropertyValueEEEN5fxcrt9RetainPtrIT_EEDpOT0_: argument 0"}
!47 = distinct !{!47, !"_ZN6pdfium10MakeRetainI16CFX_CSSEnumValueJRK20CFX_CSSPropertyValueEEEN5fxcrt9RetainPtrIT_EEDpOT0_"}
!48 = !{!49}
!49 = distinct !{!49, !50, !"_ZN6pdfium10MakeRetainI16CFX_CSSEnumValueJRK20CFX_CSSPropertyValueEEEN5fxcrt9RetainPtrIT_EEDpOT0_: argument 0"}
!50 = distinct !{!50, !"_ZN6pdfium10MakeRetainI16CFX_CSSEnumValueJRK20CFX_CSSPropertyValueEEEN5fxcrt9RetainPtrIT_EEDpOT0_"}
!51 = !{!52}
!52 = distinct !{!52, !53, !"_ZN6pdfium10MakeRetainI16CFX_CSSEnumValueJRK20CFX_CSSPropertyValueEEEN5fxcrt9RetainPtrIT_EEDpOT0_: argument 0"}
!53 = distinct !{!53, !"_ZN6pdfium10MakeRetainI16CFX_CSSEnumValueJRK20CFX_CSSPropertyValueEEEN5fxcrt9RetainPtrIT_EEDpOT0_"}
!54 = !{!55}
!55 = distinct !{!55, !56, !"_ZN6pdfium10MakeRetainI18CFX_CSSStringValueJN5fxcrt10WideStringEEEENS2_9RetainPtrIT_EEDpOT0_: argument 0"}
!56 = distinct !{!56, !"_ZN6pdfium10MakeRetainI18CFX_CSSStringValueJN5fxcrt10WideStringEEEENS2_9RetainPtrIT_EEDpOT0_"}
!57 = !{!58}
!58 = distinct !{!58, !59, !"_ZN6pdfium10MakeRetainI18CFX_CSSNumberValueJNS1_4UnitERfEEEN5fxcrt9RetainPtrIT_EEDpOT0_: argument 0"}
!59 = distinct !{!59, !"_ZN6pdfium10MakeRetainI18CFX_CSSNumberValueJNS1_4UnitERfEEEN5fxcrt9RetainPtrIT_EEDpOT0_"}
!60 = !{!61}
!61 = distinct !{!61, !62, !"_ZN6pdfium10MakeRetainI18CFX_CSSNumberValueJRNS1_4UnitERfEEEN5fxcrt9RetainPtrIT_EEDpOT0_: argument 0"}
!62 = distinct !{!62, !"_ZN6pdfium10MakeRetainI18CFX_CSSNumberValueJRNS1_4UnitERfEEEN5fxcrt9RetainPtrIT_EEDpOT0_"}
!63 = !{!64}
!64 = distinct !{!64, !65, !"_ZN6pdfium10MakeRetainI18CFX_CSSNumberValueJRNS1_4UnitERfEEEN5fxcrt9RetainPtrIT_EEDpOT0_: argument 0"}
!65 = distinct !{!65, !"_ZN6pdfium10MakeRetainI18CFX_CSSNumberValueJRNS1_4UnitERfEEEN5fxcrt9RetainPtrIT_EEDpOT0_"}
!66 = !{!67}
!67 = distinct !{!67, !68, !"_ZN6pdfium10MakeRetainI16CFX_CSSEnumValueJ20CFX_CSSPropertyValueEEEN5fxcrt9RetainPtrIT_EEDpOT0_: argument 0"}
!68 = distinct !{!68, !"_ZN6pdfium10MakeRetainI16CFX_CSSEnumValueJ20CFX_CSSPropertyValueEEEN5fxcrt9RetainPtrIT_EEDpOT0_"}
!69 = !{!70}
!70 = distinct !{!70, !71, !"_ZN6pdfium10MakeRetainI16CFX_CSSEnumValueJ20CFX_CSSPropertyValueEEEN5fxcrt9RetainPtrIT_EEDpOT0_: argument 0"}
!71 = distinct !{!71, !"_ZN6pdfium10MakeRetainI16CFX_CSSEnumValueJ20CFX_CSSPropertyValueEEEN5fxcrt9RetainPtrIT_EEDpOT0_"}
!72 = !{!73}
!73 = distinct !{!73, !74, !"_ZN6pdfium10MakeRetainI16CFX_CSSEnumValueJ20CFX_CSSPropertyValueEEEN5fxcrt9RetainPtrIT_EEDpOT0_: argument 0"}
!74 = distinct !{!74, !"_ZN6pdfium10MakeRetainI16CFX_CSSEnumValueJ20CFX_CSSPropertyValueEEEN5fxcrt9RetainPtrIT_EEDpOT0_"}
!75 = !{!76}
!76 = distinct !{!76, !77, !"_ZN6pdfium10MakeRetainI16CFX_CSSEnumValueJ20CFX_CSSPropertyValueEEEN5fxcrt9RetainPtrIT_EEDpOT0_: argument 0"}
!77 = distinct !{!77, !"_ZN6pdfium10MakeRetainI16CFX_CSSEnumValueJ20CFX_CSSPropertyValueEEEN5fxcrt9RetainPtrIT_EEDpOT0_"}
!78 = !{!79}
!79 = distinct !{!79, !80, !"_ZN6pdfium10MakeRetainI16CFX_CSSEnumValueJ20CFX_CSSPropertyValueEEEN5fxcrt9RetainPtrIT_EEDpOT0_: argument 0"}
!80 = distinct !{!80, !"_ZN6pdfium10MakeRetainI16CFX_CSSEnumValueJ20CFX_CSSPropertyValueEEEN5fxcrt9RetainPtrIT_EEDpOT0_"}
!81 = !{!82}
!82 = distinct !{!82, !83, !"_ZN6pdfium10MakeRetainI18CFX_CSSNumberValueJRNS1_4UnitERfEEEN5fxcrt9RetainPtrIT_EEDpOT0_: argument 0"}
!83 = distinct !{!83, !"_ZN6pdfium10MakeRetainI18CFX_CSSNumberValueJRNS1_4UnitERfEEEN5fxcrt9RetainPtrIT_EEDpOT0_"}
!84 = !{!85}
!85 = distinct !{!85, !86, !"_ZN6pdfium10MakeRetainI16CFX_CSSEnumValueJRK20CFX_CSSPropertyValueEEEN5fxcrt9RetainPtrIT_EEDpOT0_: argument 0"}
!86 = distinct !{!86, !"_ZN6pdfium10MakeRetainI16CFX_CSSEnumValueJRK20CFX_CSSPropertyValueEEEN5fxcrt9RetainPtrIT_EEDpOT0_"}
!87 = !{!88}
!88 = distinct !{!88, !89, !"_ZN6pdfium10MakeRetainI18CFX_CSSNumberValueJNS1_4UnitEfEEEN5fxcrt9RetainPtrIT_EEDpOT0_: argument 0"}
!89 = distinct !{!89, !"_ZN6pdfium10MakeRetainI18CFX_CSSNumberValueJNS1_4UnitEfEEEN5fxcrt9RetainPtrIT_EEDpOT0_"}
!90 = !{!91}
!91 = distinct !{!91, !92, !"_ZN6pdfium10MakeRetainI18CFX_CSSNumberValueJRNS1_4UnitERfEEEN5fxcrt9RetainPtrIT_EEDpOT0_: argument 0"}
!92 = distinct !{!92, !"_ZN6pdfium10MakeRetainI18CFX_CSSNumberValueJRNS1_4UnitERfEEEN5fxcrt9RetainPtrIT_EEDpOT0_"}
!93 = !{!94}
!94 = distinct !{!94, !95, !"_ZN6pdfium10MakeRetainI17CFX_CSSColorValueJRjEEEN5fxcrt9RetainPtrIT_EEDpOT0_: argument 0"}
!95 = distinct !{!95, !"_ZN6pdfium10MakeRetainI17CFX_CSSColorValueJRjEEEN5fxcrt9RetainPtrIT_EEDpOT0_"}
!96 = !{!97}
!97 = distinct !{!97, !98, !"_ZN6pdfium10MakeRetainI16CFX_CSSEnumValueJRK20CFX_CSSPropertyValueEEEN5fxcrt9RetainPtrIT_EEDpOT0_: argument 0"}
!98 = distinct !{!98, !"_ZN6pdfium10MakeRetainI16CFX_CSSEnumValueJRK20CFX_CSSPropertyValueEEEN5fxcrt9RetainPtrIT_EEDpOT0_"}
!99 = !{!100}
!100 = distinct !{!100, !101, !"_ZN6pdfium10MakeRetainI18CFX_CSSStringValueJN5fxcrt10WideStringEEEENS2_9RetainPtrIT_EEDpOT0_: argument 0"}
!101 = distinct !{!101, !"_ZN6pdfium10MakeRetainI18CFX_CSSStringValueJN5fxcrt10WideStringEEEENS2_9RetainPtrIT_EEDpOT0_"}
!102 = !{!103}
!103 = distinct !{!103, !104, !"_ZN6pdfium10MakeRetainI17CFX_CSSColorValueJRjEEEN5fxcrt9RetainPtrIT_EEDpOT0_: argument 0"}
!104 = distinct !{!104, !"_ZN6pdfium10MakeRetainI17CFX_CSSColorValueJRjEEEN5fxcrt9RetainPtrIT_EEDpOT0_"}
!105 = distinct !{!105, !106}
!106 = !{!"llvm.loop.unroll.disable"}
!107 = distinct !{!107, !106}
!108 = !{!109}
!109 = distinct !{!109, !110}
!110 = distinct !{!110, !"LVerDomain"}
!111 = !{!112}
!112 = distinct !{!112, !110}
!113 = distinct !{!113, !114}
!114 = !{!"llvm.loop.isvectorized", i32 1}
!115 = distinct !{!115, !106}
!116 = distinct !{!116, !114}
