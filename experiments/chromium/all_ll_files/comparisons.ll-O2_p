; ModuleID = '../../third_party/tflite/src/tensorflow/lite/kernels/comparisons.cc'
source_filename = "../../third_party/tflite/src/tensorflow/lite/kernels/comparisons.cc"
target datalayout = "e-m:e-i64:64-f80:128-n8:16:32:64-S128"
target triple = "x86_64-unknown-linux-gnu"

module asm ".symver exp, exp@GLIBC_2.2.5"
module asm ".symver exp2, exp2@GLIBC_2.2.5"
module asm ".symver exp2f, exp2f@GLIBC_2.2.5"
module asm ".symver expf, expf@GLIBC_2.2.5"
module asm ".symver lgamma, lgamma@GLIBC_2.2.5"
module asm ".symver lgammaf, lgammaf@GLIBC_2.2.5"
module asm ".symver lgammal, lgammal@GLIBC_2.2.5"
module asm ".symver log, log@GLIBC_2.2.5"
module asm ".symver log2, log2@GLIBC_2.2.5"
module asm ".symver log2f, log2f@GLIBC_2.2.5"
module asm ".symver logf, logf@GLIBC_2.2.5"
module asm ".symver pow, pow@GLIBC_2.2.5"
module asm ".symver powf, powf@GLIBC_2.2.5"

%struct.TfLiteRegistration = type { i8* (%struct.TfLiteContext*, i8*, i64)*, void (%struct.TfLiteContext*, i8*)*, i32 (%struct.TfLiteContext*, %struct.TfLiteNode*)*, i32 (%struct.TfLiteContext*, %struct.TfLiteNode*)*, i8* (%struct.TfLiteContext*, %struct.TfLiteNode*)*, i32, i8*, i32 }
%struct.TfLiteContext = type { i64, i32 (%struct.TfLiteContext*, %struct.TfLiteIntArray**)*, %struct.TfLiteTensor*, i8*, i32 (%struct.TfLiteContext*, %struct.TfLiteTensor*, %struct.TfLiteIntArray*)*, void (%struct.TfLiteContext*, i8*, ...)*, i32 (%struct.TfLiteContext*, i32, i32*)*, i32 (%struct.TfLiteContext*, i32, %struct.TfLiteNode**, %struct.TfLiteRegistration**)*, {}*, i32, %struct.TfLiteExternalContext* (%struct.TfLiteContext*, i32)*, void (%struct.TfLiteContext*, i32, %struct.TfLiteExternalContext*)*, i8, i8*, i32 (%struct.TfLiteContext*, i64, i8**)*, i32 (%struct.TfLiteContext*, i64, i8**)*, i32 (%struct.TfLiteContext*, i64, i32*)*, i8* (%struct.TfLiteContext*, i32)*, i32 (%struct.TfLiteContext*, %struct.TfLiteTensor*, i32, i32*)*, i32 (%struct.TfLiteContext*, %struct.TfLiteIntArray*, %struct.TfLiteDelegateParams**, i32*)* }
%struct.TfLiteIntArray = type { i32, [0 x i32] }
%struct.TfLiteTensor = type { i32, %union.TfLitePtrUnion, %struct.TfLiteIntArray*, %struct.TfLiteQuantizationParams, i32, i64, i8*, i8*, %struct.TfLiteDelegate*, i32, i8, i8, %struct.TfLiteQuantization, %struct.TfLiteSparsity*, %struct.TfLiteIntArray* }
%union.TfLitePtrUnion = type { i32* }
%struct.TfLiteQuantizationParams = type { float, i32 }
%struct.TfLiteDelegate = type { i8*, i32 (%struct.TfLiteContext*, %struct.TfLiteDelegate*)*, i32 (%struct.TfLiteContext*, %struct.TfLiteDelegate*, i32, %struct.TfLiteTensor*)*, i32 (%struct.TfLiteContext*, %struct.TfLiteDelegate*, i32, %struct.TfLiteTensor*)*, void (%struct.TfLiteContext*, %struct.TfLiteDelegate*, i32*)*, i64 }
%struct.TfLiteQuantization = type { i32, i8* }
%struct.TfLiteSparsity = type { %struct.TfLiteIntArray*, %struct.TfLiteIntArray*, %struct.TfLiteDimensionMetadata*, i32 }
%struct.TfLiteDimensionMetadata = type { i32, i32, %struct.TfLiteIntArray*, %struct.TfLiteIntArray* }
%struct.TfLiteNode = type { %struct.TfLiteIntArray*, %struct.TfLiteIntArray*, %struct.TfLiteIntArray*, %struct.TfLiteIntArray*, i8*, i8*, i8*, i32, %struct.TfLiteDelegate* }
%struct.TfLiteExternalContext = type { i32, i32 (%struct.TfLiteContext*)* }
%struct.TfLiteDelegateParams = type { %struct.TfLiteDelegate*, %struct.TfLiteIntArray*, %struct.TfLiteIntArray*, %struct.TfLiteIntArray* }
%"struct.tflite::ComparisonParams" = type { i32, i32, i32, i32, i32, i32, i32, i8 }
%"class.tflite::RuntimeShape" = type { i32, %union.anon }
%union.anon = type { i32*, [16 x i8] }
%"struct.tflite::StringRef" = type { i8*, i32 }
%"struct.tflite::NdArrayDesc" = type { [4 x i32], [4 x i32] }
%"struct.tflite::reference_ops::BroadcastComparison4DSlowCommon" = type { %"class.tflite::RuntimeShape", %"struct.tflite::NdArrayDesc", %"struct.tflite::NdArrayDesc" }

$_ZN6tflite13reference_ops16StringRefEqualFnERKNS_9StringRefES3_ = comdat any

$_ZN6tflite13reference_ops29BroadcastComparison4DSlowImplIbXadL_ZNS0_7EqualFnIbEEbT_S3_EEEEvRKNS_16ComparisonParamsERKNS_12RuntimeShapeEPKS3_S9_SB_S9_Pb = comdat any

$_ZN6tflite35NdArrayDescsForElementwiseBroadcastILi4EEEvRKNS_12RuntimeShapeES3_PNS_11NdArrayDescIXT_EEES6_ = comdat any

$_ZN6tflite13reference_ops29BroadcastComparison4DSlowImplIfXadL_ZNS0_7EqualFnIfEEbT_S3_EEEEvRKNS_16ComparisonParamsERKNS_12RuntimeShapeEPKS3_S9_SB_S9_Pb = comdat any

$_ZN6tflite13reference_ops29BroadcastComparison4DSlowImplIiXadL_ZNS0_7EqualFnIiEEbT_S3_EEEEvRKNS_16ComparisonParamsERKNS_12RuntimeShapeEPKS3_S9_SB_S9_Pb = comdat any

$_ZN6tflite13reference_ops29BroadcastComparison4DSlowImplIlXadL_ZNS0_7EqualFnIlEEbT_S3_EEEEvRKNS_16ComparisonParamsERKNS_12RuntimeShapeEPKS3_S9_SB_S9_Pb = comdat any

$_ZN6tflite13reference_ops36BroadcastComparison4DSlowWithScalingIhXadL_ZNS0_7EqualFnIiEEbT_S3_EEEEvRKNS_16ComparisonParamsERKNS_12RuntimeShapeEPKS3_S9_SB_S9_Pb = comdat any

$_ZN6tflite13reference_ops36BroadcastComparison4DSlowWithScalingIaXadL_ZNS0_7EqualFnIiEEbT_S3_EEEEvRKNS_16ComparisonParamsERKNS_12RuntimeShapeEPKS3_S9_SB_S9_Pb = comdat any

$_ZN6tflite13reference_ops35BroadcastComparison4DSlowStringImplEPFbRKNS_9StringRefES3_ERKNS_12RuntimeShapeEPK12TfLiteTensorS8_SB_S8_Pb = comdat any

$_ZN6tflite13reference_ops19StringRefNotEqualFnERKNS_9StringRefES3_ = comdat any

$_ZN6tflite13reference_ops29BroadcastComparison4DSlowImplIbXadL_ZNS0_10NotEqualFnIbEEbT_S3_EEEEvRKNS_16ComparisonParamsERKNS_12RuntimeShapeEPKS3_S9_SB_S9_Pb = comdat any

$_ZN6tflite13reference_ops29BroadcastComparison4DSlowImplIfXadL_ZNS0_10NotEqualFnIfEEbT_S3_EEEEvRKNS_16ComparisonParamsERKNS_12RuntimeShapeEPKS3_S9_SB_S9_Pb = comdat any

$_ZN6tflite13reference_ops29BroadcastComparison4DSlowImplIiXadL_ZNS0_10NotEqualFnIiEEbT_S3_EEEEvRKNS_16ComparisonParamsERKNS_12RuntimeShapeEPKS3_S9_SB_S9_Pb = comdat any

$_ZN6tflite13reference_ops29BroadcastComparison4DSlowImplIlXadL_ZNS0_10NotEqualFnIlEEbT_S3_EEEEvRKNS_16ComparisonParamsERKNS_12RuntimeShapeEPKS3_S9_SB_S9_Pb = comdat any

$_ZN6tflite13reference_ops36BroadcastComparison4DSlowWithScalingIhXadL_ZNS0_10NotEqualFnIiEEbT_S3_EEEEvRKNS_16ComparisonParamsERKNS_12RuntimeShapeEPKS3_S9_SB_S9_Pb = comdat any

$_ZN6tflite13reference_ops36BroadcastComparison4DSlowWithScalingIaXadL_ZNS0_10NotEqualFnIiEEbT_S3_EEEEvRKNS_16ComparisonParamsERKNS_12RuntimeShapeEPKS3_S9_SB_S9_Pb = comdat any

$_ZN6tflite13reference_ops29BroadcastComparison4DSlowImplIfXadL_ZNS0_9GreaterFnIfEEbT_S3_EEEEvRKNS_16ComparisonParamsERKNS_12RuntimeShapeEPKS3_S9_SB_S9_Pb = comdat any

$_ZN6tflite13reference_ops29BroadcastComparison4DSlowImplIiXadL_ZNS0_9GreaterFnIiEEbT_S3_EEEEvRKNS_16ComparisonParamsERKNS_12RuntimeShapeEPKS3_S9_SB_S9_Pb = comdat any

$_ZN6tflite13reference_ops29BroadcastComparison4DSlowImplIlXadL_ZNS0_9GreaterFnIlEEbT_S3_EEEEvRKNS_16ComparisonParamsERKNS_12RuntimeShapeEPKS3_S9_SB_S9_Pb = comdat any

$_ZN6tflite13reference_ops36BroadcastComparison4DSlowWithScalingIhXadL_ZNS0_9GreaterFnIiEEbT_S3_EEEEvRKNS_16ComparisonParamsERKNS_12RuntimeShapeEPKS3_S9_SB_S9_Pb = comdat any

$_ZN6tflite13reference_ops36BroadcastComparison4DSlowWithScalingIaXadL_ZNS0_9GreaterFnIiEEbT_S3_EEEEvRKNS_16ComparisonParamsERKNS_12RuntimeShapeEPKS3_S9_SB_S9_Pb = comdat any

$_ZN6tflite13reference_ops29BroadcastComparison4DSlowImplIfXadL_ZNS0_14GreaterEqualFnIfEEbT_S3_EEEEvRKNS_16ComparisonParamsERKNS_12RuntimeShapeEPKS3_S9_SB_S9_Pb = comdat any

$_ZN6tflite13reference_ops29BroadcastComparison4DSlowImplIiXadL_ZNS0_14GreaterEqualFnIiEEbT_S3_EEEEvRKNS_16ComparisonParamsERKNS_12RuntimeShapeEPKS3_S9_SB_S9_Pb = comdat any

$_ZN6tflite13reference_ops29BroadcastComparison4DSlowImplIlXadL_ZNS0_14GreaterEqualFnIlEEbT_S3_EEEEvRKNS_16ComparisonParamsERKNS_12RuntimeShapeEPKS3_S9_SB_S9_Pb = comdat any

$_ZN6tflite13reference_ops36BroadcastComparison4DSlowWithScalingIhXadL_ZNS0_14GreaterEqualFnIiEEbT_S3_EEEEvRKNS_16ComparisonParamsERKNS_12RuntimeShapeEPKS3_S9_SB_S9_Pb = comdat any

$_ZN6tflite13reference_ops36BroadcastComparison4DSlowWithScalingIaXadL_ZNS0_14GreaterEqualFnIiEEbT_S3_EEEEvRKNS_16ComparisonParamsERKNS_12RuntimeShapeEPKS3_S9_SB_S9_Pb = comdat any

$_ZN6tflite13reference_ops29BroadcastComparison4DSlowImplIfXadL_ZNS0_6LessFnIfEEbT_S3_EEEEvRKNS_16ComparisonParamsERKNS_12RuntimeShapeEPKS3_S9_SB_S9_Pb = comdat any

$_ZN6tflite13reference_ops29BroadcastComparison4DSlowImplIiXadL_ZNS0_6LessFnIiEEbT_S3_EEEEvRKNS_16ComparisonParamsERKNS_12RuntimeShapeEPKS3_S9_SB_S9_Pb = comdat any

$_ZN6tflite13reference_ops29BroadcastComparison4DSlowImplIlXadL_ZNS0_6LessFnIlEEbT_S3_EEEEvRKNS_16ComparisonParamsERKNS_12RuntimeShapeEPKS3_S9_SB_S9_Pb = comdat any

$_ZN6tflite13reference_ops36BroadcastComparison4DSlowWithScalingIhXadL_ZNS0_6LessFnIiEEbT_S3_EEEEvRKNS_16ComparisonParamsERKNS_12RuntimeShapeEPKS3_S9_SB_S9_Pb = comdat any

$_ZN6tflite13reference_ops36BroadcastComparison4DSlowWithScalingIaXadL_ZNS0_6LessFnIiEEbT_S3_EEEEvRKNS_16ComparisonParamsERKNS_12RuntimeShapeEPKS3_S9_SB_S9_Pb = comdat any

$_ZN6tflite13reference_ops29BroadcastComparison4DSlowImplIfXadL_ZNS0_11LessEqualFnIfEEbT_S3_EEEEvRKNS_16ComparisonParamsERKNS_12RuntimeShapeEPKS3_S9_SB_S9_Pb = comdat any

$_ZN6tflite13reference_ops29BroadcastComparison4DSlowImplIiXadL_ZNS0_11LessEqualFnIiEEbT_S3_EEEEvRKNS_16ComparisonParamsERKNS_12RuntimeShapeEPKS3_S9_SB_S9_Pb = comdat any

$_ZN6tflite13reference_ops29BroadcastComparison4DSlowImplIlXadL_ZNS0_11LessEqualFnIlEEbT_S3_EEEEvRKNS_16ComparisonParamsERKNS_12RuntimeShapeEPKS3_S9_SB_S9_Pb = comdat any

$_ZN6tflite13reference_ops36BroadcastComparison4DSlowWithScalingIhXadL_ZNS0_11LessEqualFnIiEEbT_S3_EEEEvRKNS_16ComparisonParamsERKNS_12RuntimeShapeEPKS3_S9_SB_S9_Pb = comdat any

$_ZN6tflite13reference_ops36BroadcastComparison4DSlowWithScalingIaXadL_ZNS0_11LessEqualFnIiEEbT_S3_EEEEvRKNS_16ComparisonParamsERKNS_12RuntimeShapeEPKS3_S9_SB_S9_Pb = comdat any

@_ZZN6tflite3ops7builtin14Register_EQUALEvE1r = internal global %struct.TfLiteRegistration { i8* (%struct.TfLiteContext*, i8*, i64)* null, void (%struct.TfLiteContext*, i8*)* null, i32 (%struct.TfLiteContext*, %struct.TfLiteNode*)* @_ZN6tflite3ops7builtin11comparisons12_GLOBAL__N_130ComparisonPrepareStringAllowedEP13TfLiteContextP10TfLiteNode, i32 (%struct.TfLiteContext*, %struct.TfLiteNode*)* @_ZN6tflite3ops7builtin11comparisons12_GLOBAL__N_19EqualEvalEP13TfLiteContextP10TfLiteNode, i8* (%struct.TfLiteContext*, %struct.TfLiteNode*)* null, i32 0, i8* null, i32 0 }, align 8
@_ZZN6tflite3ops7builtin18Register_NOT_EQUALEvE1r = internal global %struct.TfLiteRegistration { i8* (%struct.TfLiteContext*, i8*, i64)* null, void (%struct.TfLiteContext*, i8*)* null, i32 (%struct.TfLiteContext*, %struct.TfLiteNode*)* @_ZN6tflite3ops7builtin11comparisons12_GLOBAL__N_130ComparisonPrepareStringAllowedEP13TfLiteContextP10TfLiteNode, i32 (%struct.TfLiteContext*, %struct.TfLiteNode*)* @_ZN6tflite3ops7builtin11comparisons12_GLOBAL__N_112NotEqualEvalEP13TfLiteContextP10TfLiteNode, i8* (%struct.TfLiteContext*, %struct.TfLiteNode*)* null, i32 0, i8* null, i32 0 }, align 8
@_ZZN6tflite3ops7builtin16Register_GREATEREvE1r = internal global %struct.TfLiteRegistration { i8* (%struct.TfLiteContext*, i8*, i64)* null, void (%struct.TfLiteContext*, i8*)* null, i32 (%struct.TfLiteContext*, %struct.TfLiteNode*)* @_ZN6tflite3ops7builtin11comparisons12_GLOBAL__N_117ComparisonPrepareEP13TfLiteContextP10TfLiteNode, i32 (%struct.TfLiteContext*, %struct.TfLiteNode*)* @_ZN6tflite3ops7builtin11comparisons12_GLOBAL__N_111GreaterEvalEP13TfLiteContextP10TfLiteNode, i8* (%struct.TfLiteContext*, %struct.TfLiteNode*)* null, i32 0, i8* null, i32 0 }, align 8
@_ZZN6tflite3ops7builtin22Register_GREATER_EQUALEvE1r = internal global %struct.TfLiteRegistration { i8* (%struct.TfLiteContext*, i8*, i64)* null, void (%struct.TfLiteContext*, i8*)* null, i32 (%struct.TfLiteContext*, %struct.TfLiteNode*)* @_ZN6tflite3ops7builtin11comparisons12_GLOBAL__N_117ComparisonPrepareEP13TfLiteContextP10TfLiteNode, i32 (%struct.TfLiteContext*, %struct.TfLiteNode*)* @_ZN6tflite3ops7builtin11comparisons12_GLOBAL__N_116GreaterEqualEvalEP13TfLiteContextP10TfLiteNode, i8* (%struct.TfLiteContext*, %struct.TfLiteNode*)* null, i32 0, i8* null, i32 0 }, align 8
@_ZZN6tflite3ops7builtin13Register_LESSEvE1r = internal global %struct.TfLiteRegistration { i8* (%struct.TfLiteContext*, i8*, i64)* null, void (%struct.TfLiteContext*, i8*)* null, i32 (%struct.TfLiteContext*, %struct.TfLiteNode*)* @_ZN6tflite3ops7builtin11comparisons12_GLOBAL__N_117ComparisonPrepareEP13TfLiteContextP10TfLiteNode, i32 (%struct.TfLiteContext*, %struct.TfLiteNode*)* @_ZN6tflite3ops7builtin11comparisons12_GLOBAL__N_18LessEvalEP13TfLiteContextP10TfLiteNode, i8* (%struct.TfLiteContext*, %struct.TfLiteNode*)* null, i32 0, i8* null, i32 0 }, align 8
@_ZZN6tflite3ops7builtin19Register_LESS_EQUALEvE1r = internal global %struct.TfLiteRegistration { i8* (%struct.TfLiteContext*, i8*, i64)* null, void (%struct.TfLiteContext*, i8*)* null, i32 (%struct.TfLiteContext*, %struct.TfLiteNode*)* @_ZN6tflite3ops7builtin11comparisons12_GLOBAL__N_117ComparisonPrepareEP13TfLiteContextP10TfLiteNode, i32 (%struct.TfLiteContext*, %struct.TfLiteNode*)* @_ZN6tflite3ops7builtin11comparisons12_GLOBAL__N_113LessEqualEvalEP13TfLiteContextP10TfLiteNode, i8* (%struct.TfLiteContext*, %struct.TfLiteNode*)* null, i32 0, i8* null, i32 0 }, align 8
@.str = private unnamed_addr constant [26 x i8] c"%s:%d %s != %s (%d != %d)\00", align 1
@.str.4 = private unnamed_addr constant [68 x i8] c"../../third_party/tflite/src/tensorflow/lite/kernels/comparisons.cc\00", align 1
@.str.5 = private unnamed_addr constant [16 x i8] c"NumInputs(node)\00", align 1
@.str.6 = private unnamed_addr constant [2 x i8] c"2\00", align 1
@.str.7 = private unnamed_addr constant [17 x i8] c"NumOutputs(node)\00", align 1
@.str.8 = private unnamed_addr constant [2 x i8] c"1\00", align 1
@.str.9 = private unnamed_addr constant [23 x i8] c"%s:%d %s was not true.\00", align 1
@.str.10 = private unnamed_addr constant [30 x i8] c"input1->type != kTfLiteString\00", align 1
@.str.11 = private unnamed_addr constant [26 x i8] c"%s:%d %s != %s (%s != %s)\00", align 1
@.str.12 = private unnamed_addr constant [13 x i8] c"input1->type\00", align 1
@.str.13 = private unnamed_addr constant [13 x i8] c"input2->type\00", align 1
@.str.14 = private unnamed_addr constant [63 x i8] c"Does not support type %d, requires bool|float|int|uint8|string\00", align 1
@.str.15 = private unnamed_addr constant [51 x i8] c"Does not support type %d, requires float|int|uint8\00", align 1
@llvm.global_ctors = appending global [0 x { i32, void ()*, i8* }] zeroinitializer

; Function Attrs: norecurse nounwind readnone ssp uwtable
define hidden nonnull %struct.TfLiteRegistration* @_ZN6tflite3ops7builtin14Register_EQUALEv() local_unnamed_addr #0 {
  ret %struct.TfLiteRegistration* @_ZZN6tflite3ops7builtin14Register_EQUALEvE1r
}

; Function Attrs: nounwind ssp uwtable
define internal i32 @_ZN6tflite3ops7builtin11comparisons12_GLOBAL__N_130ComparisonPrepareStringAllowedEP13TfLiteContextP10TfLiteNode(%struct.TfLiteContext*, %struct.TfLiteNode* nocapture readonly) #1 {
  %3 = tail call fastcc i32 @_ZN6tflite3ops7builtin11comparisons12_GLOBAL__N_123ComparisonPrepareCommonEP13TfLiteContextP10TfLiteNodeb(%struct.TfLiteContext* %0, %struct.TfLiteNode* %1, i1 zeroext true)
  ret i32 %3
}

; Function Attrs: nounwind ssp uwtable
define internal i32 @_ZN6tflite3ops7builtin11comparisons12_GLOBAL__N_19EqualEvalEP13TfLiteContextP10TfLiteNode(%struct.TfLiteContext*, %struct.TfLiteNode* nocapture readonly) #1 {
  %3 = alloca i32, align 4
  %4 = alloca i32, align 4
  %5 = alloca i32, align 4
  %6 = alloca i32, align 4
  %7 = alloca %"struct.tflite::ComparisonParams", align 4
  %8 = alloca %"class.tflite::RuntimeShape", align 8
  %9 = alloca %"class.tflite::RuntimeShape", align 8
  %10 = alloca %"class.tflite::RuntimeShape", align 8
  %11 = alloca %"class.tflite::RuntimeShape", align 8
  %12 = alloca %"class.tflite::RuntimeShape", align 8
  %13 = alloca %"class.tflite::RuntimeShape", align 8
  %14 = alloca %"struct.tflite::ComparisonParams", align 4
  %15 = alloca %"class.tflite::RuntimeShape", align 8
  %16 = alloca %"class.tflite::RuntimeShape", align 8
  %17 = alloca %"class.tflite::RuntimeShape", align 8
  %18 = alloca %"class.tflite::RuntimeShape", align 8
  %19 = alloca %"class.tflite::RuntimeShape", align 8
  %20 = alloca %"class.tflite::RuntimeShape", align 8
  %21 = alloca %"struct.tflite::ComparisonParams", align 4
  %22 = alloca %"class.tflite::RuntimeShape", align 8
  %23 = alloca %"class.tflite::RuntimeShape", align 8
  %24 = alloca %"class.tflite::RuntimeShape", align 8
  %25 = alloca %"class.tflite::RuntimeShape", align 8
  %26 = alloca %"class.tflite::RuntimeShape", align 8
  %27 = alloca %"class.tflite::RuntimeShape", align 8
  %28 = alloca %"struct.tflite::ComparisonParams", align 4
  %29 = alloca %"class.tflite::RuntimeShape", align 8
  %30 = alloca %"class.tflite::RuntimeShape", align 8
  %31 = alloca %"class.tflite::RuntimeShape", align 8
  %32 = alloca %"class.tflite::RuntimeShape", align 8
  %33 = alloca %"class.tflite::RuntimeShape", align 8
  %34 = alloca %"class.tflite::RuntimeShape", align 8
  %35 = alloca %"struct.tflite::ComparisonParams", align 4
  %36 = alloca %"class.tflite::RuntimeShape", align 8
  %37 = alloca %"class.tflite::RuntimeShape", align 8
  %38 = alloca %"class.tflite::RuntimeShape", align 8
  %39 = alloca %"class.tflite::RuntimeShape", align 8
  %40 = alloca %"class.tflite::RuntimeShape", align 8
  %41 = alloca %"class.tflite::RuntimeShape", align 8
  %42 = alloca i32, align 4
  %43 = alloca i32, align 4
  %44 = alloca i32, align 4
  %45 = alloca i32, align 4
  %46 = alloca %"struct.tflite::ComparisonParams", align 4
  %47 = alloca %"class.tflite::RuntimeShape", align 8
  %48 = alloca %"class.tflite::RuntimeShape", align 8
  %49 = alloca %"class.tflite::RuntimeShape", align 8
  %50 = alloca %"class.tflite::RuntimeShape", align 8
  %51 = alloca %"class.tflite::RuntimeShape", align 8
  %52 = alloca %"class.tflite::RuntimeShape", align 8
  %53 = getelementptr inbounds %struct.TfLiteNode, %struct.TfLiteNode* %1, i64 0, i32 0
  %54 = load %struct.TfLiteIntArray*, %struct.TfLiteIntArray** %53, align 8
  %55 = getelementptr inbounds %struct.TfLiteIntArray, %struct.TfLiteIntArray* %54, i64 0, i32 1, i64 0
  %56 = load i32, i32* %55, align 4
  %57 = icmp slt i32 %56, 0
  br i1 %57, label %63, label %58

58:                                               ; preds = %2
  %59 = getelementptr inbounds %struct.TfLiteContext, %struct.TfLiteContext* %0, i64 0, i32 2
  %60 = load %struct.TfLiteTensor*, %struct.TfLiteTensor** %59, align 8
  %61 = sext i32 %56 to i64
  %62 = getelementptr inbounds %struct.TfLiteTensor, %struct.TfLiteTensor* %60, i64 %61
  br label %63

63:                                               ; preds = %2, %58
  %64 = phi %struct.TfLiteTensor* [ %62, %58 ], [ null, %2 ]
  %65 = getelementptr inbounds %struct.TfLiteIntArray, %struct.TfLiteIntArray* %54, i64 0, i32 1, i64 1
  %66 = load i32, i32* %65, align 4
  %67 = icmp slt i32 %66, 0
  br i1 %67, label %73, label %68

68:                                               ; preds = %63
  %69 = getelementptr inbounds %struct.TfLiteContext, %struct.TfLiteContext* %0, i64 0, i32 2
  %70 = load %struct.TfLiteTensor*, %struct.TfLiteTensor** %69, align 8
  %71 = sext i32 %66 to i64
  %72 = getelementptr inbounds %struct.TfLiteTensor, %struct.TfLiteTensor* %70, i64 %71
  br label %73

73:                                               ; preds = %63, %68
  %74 = phi %struct.TfLiteTensor* [ %72, %68 ], [ null, %63 ]
  %75 = getelementptr inbounds %struct.TfLiteNode, %struct.TfLiteNode* %1, i64 0, i32 1
  %76 = load %struct.TfLiteIntArray*, %struct.TfLiteIntArray** %75, align 8
  %77 = getelementptr inbounds %struct.TfLiteIntArray, %struct.TfLiteIntArray* %76, i64 0, i32 1, i64 0
  %78 = load i32, i32* %77, align 4
  %79 = icmp slt i32 %78, 0
  br i1 %79, label %85, label %80

80:                                               ; preds = %73
  %81 = getelementptr inbounds %struct.TfLiteContext, %struct.TfLiteContext* %0, i64 0, i32 2
  %82 = load %struct.TfLiteTensor*, %struct.TfLiteTensor** %81, align 8
  %83 = sext i32 %78 to i64
  %84 = getelementptr inbounds %struct.TfLiteTensor, %struct.TfLiteTensor* %82, i64 %83
  br label %85

85:                                               ; preds = %73, %80
  %86 = phi %struct.TfLiteTensor* [ %84, %80 ], [ null, %73 ]
  %87 = tail call zeroext i1 @_ZN6tflite14HaveSameShapesEPK12TfLiteTensorS2_(%struct.TfLiteTensor* %64, %struct.TfLiteTensor* %74) #8
  %88 = getelementptr inbounds %struct.TfLiteTensor, %struct.TfLiteTensor* %64, i64 0, i32 0
  %89 = load i32, i32* %88, align 8
  switch i32 %89, label %2964 [
    i32 6, label %90
    i32 1, label %555
    i32 2, label %1070
    i32 4, label %1581
    i32 3, label %1996
    i32 9, label %2479
    i32 5, label %2962
  ]

90:                                               ; preds = %85
  %91 = bitcast %"struct.tflite::ComparisonParams"* %35 to i8*
  call void @llvm.lifetime.start.p0i8(i64 32, i8* nonnull %91) #8
  call void @llvm.memset.p0i8.i64(i8* nonnull align 4 %91, i8 -86, i64 32, i1 false) #8
  br i1 %87, label %193, label %92

92:                                               ; preds = %90
  %93 = bitcast %"class.tflite::RuntimeShape"* %36 to i8*
  call void @llvm.lifetime.start.p0i8(i64 32, i8* nonnull %93) #8
  %94 = icmp eq %struct.TfLiteTensor* %64, null
  br i1 %94, label %95, label %97

95:                                               ; preds = %92
  %96 = getelementptr inbounds %"class.tflite::RuntimeShape", %"class.tflite::RuntimeShape"* %36, i64 0, i32 0
  store i32 0, i32* %96, align 8, !alias.scope !2
  br label %125

97:                                               ; preds = %92
  %98 = getelementptr inbounds %struct.TfLiteTensor, %struct.TfLiteTensor* %64, i64 0, i32 2
  %99 = load %struct.TfLiteIntArray*, %struct.TfLiteIntArray** %98, align 8, !noalias !2
  %100 = getelementptr inbounds %struct.TfLiteIntArray, %struct.TfLiteIntArray* %99, i64 0, i32 0
  %101 = load i32, i32* %100, align 4, !noalias !2
  %102 = getelementptr inbounds %struct.TfLiteIntArray, %struct.TfLiteIntArray* %99, i64 0, i32 1, i64 0
  %103 = getelementptr inbounds %"class.tflite::RuntimeShape", %"class.tflite::RuntimeShape"* %36, i64 0, i32 0
  store i32 %101, i32* %103, align 8, !alias.scope !2
  %104 = icmp sgt i32 %101, 5
  br i1 %104, label %105, label %112

105:                                              ; preds = %97
  %106 = sext i32 %101 to i64
  %107 = shl nsw i64 %106, 2
  %108 = tail call i8* @_Znam(i64 %107) #9, !noalias !2
  %109 = getelementptr inbounds %"class.tflite::RuntimeShape", %"class.tflite::RuntimeShape"* %36, i64 0, i32 1, i32 0
  %110 = bitcast i32** %109 to i8**
  store i8* %108, i8** %110, align 8, !alias.scope !2
  %111 = bitcast i8* %108 to i32*
  br label %117

112:                                              ; preds = %97
  %113 = getelementptr inbounds %"class.tflite::RuntimeShape", %"class.tflite::RuntimeShape"* %36, i64 0, i32 1
  %114 = bitcast %union.anon* %113 to i32*
  %115 = sext i32 %101 to i64
  %116 = shl nsw i64 %115, 2
  br label %117

117:                                              ; preds = %112, %105
  %118 = phi i64 [ %107, %105 ], [ %116, %112 ]
  %119 = phi i32* [ %111, %105 ], [ %114, %112 ]
  %120 = bitcast i32* %119 to i8*
  %121 = bitcast i32* %102 to i8*
  call void @llvm.memcpy.p0i8.p0i8.i64(i8* align 4 %120, i8* align 4 %121, i64 %118, i1 false) #8
  %122 = getelementptr inbounds %struct.TfLiteTensor, %struct.TfLiteTensor* %64, i64 0, i32 1
  %123 = bitcast %union.TfLitePtrUnion* %122 to i8**
  %124 = load i8*, i8** %123, align 8
  br label %125

125:                                              ; preds = %117, %95
  %126 = phi i8* [ %124, %117 ], [ null, %95 ]
  %127 = bitcast %"class.tflite::RuntimeShape"* %37 to i8*
  call void @llvm.lifetime.start.p0i8(i64 32, i8* nonnull %127) #8
  %128 = icmp eq %struct.TfLiteTensor* %74, null
  br i1 %128, label %129, label %131

129:                                              ; preds = %125
  %130 = getelementptr inbounds %"class.tflite::RuntimeShape", %"class.tflite::RuntimeShape"* %37, i64 0, i32 0
  store i32 0, i32* %130, align 8, !alias.scope !5
  br label %159

131:                                              ; preds = %125
  %132 = getelementptr inbounds %struct.TfLiteTensor, %struct.TfLiteTensor* %74, i64 0, i32 2
  %133 = load %struct.TfLiteIntArray*, %struct.TfLiteIntArray** %132, align 8, !noalias !5
  %134 = getelementptr inbounds %struct.TfLiteIntArray, %struct.TfLiteIntArray* %133, i64 0, i32 0
  %135 = load i32, i32* %134, align 4, !noalias !5
  %136 = getelementptr inbounds %struct.TfLiteIntArray, %struct.TfLiteIntArray* %133, i64 0, i32 1, i64 0
  %137 = getelementptr inbounds %"class.tflite::RuntimeShape", %"class.tflite::RuntimeShape"* %37, i64 0, i32 0
  store i32 %135, i32* %137, align 8, !alias.scope !5
  %138 = icmp sgt i32 %135, 5
  br i1 %138, label %139, label %146

139:                                              ; preds = %131
  %140 = sext i32 %135 to i64
  %141 = shl nsw i64 %140, 2
  %142 = tail call i8* @_Znam(i64 %141) #9, !noalias !5
  %143 = getelementptr inbounds %"class.tflite::RuntimeShape", %"class.tflite::RuntimeShape"* %37, i64 0, i32 1, i32 0
  %144 = bitcast i32** %143 to i8**
  store i8* %142, i8** %144, align 8, !alias.scope !5
  %145 = bitcast i8* %142 to i32*
  br label %151

146:                                              ; preds = %131
  %147 = getelementptr inbounds %"class.tflite::RuntimeShape", %"class.tflite::RuntimeShape"* %37, i64 0, i32 1
  %148 = bitcast %union.anon* %147 to i32*
  %149 = sext i32 %135 to i64
  %150 = shl nsw i64 %149, 2
  br label %151

151:                                              ; preds = %146, %139
  %152 = phi i64 [ %141, %139 ], [ %150, %146 ]
  %153 = phi i32* [ %145, %139 ], [ %148, %146 ]
  %154 = bitcast i32* %153 to i8*
  %155 = bitcast i32* %136 to i8*
  call void @llvm.memcpy.p0i8.p0i8.i64(i8* align 4 %154, i8* align 4 %155, i64 %152, i1 false) #8
  %156 = getelementptr inbounds %struct.TfLiteTensor, %struct.TfLiteTensor* %74, i64 0, i32 1
  %157 = bitcast %union.TfLitePtrUnion* %156 to i8**
  %158 = load i8*, i8** %157, align 8
  br label %159

159:                                              ; preds = %151, %129
  %160 = phi i8* [ %158, %151 ], [ null, %129 ]
  %161 = bitcast %"class.tflite::RuntimeShape"* %38 to i8*
  call void @llvm.lifetime.start.p0i8(i64 32, i8* nonnull %161) #8
  %162 = icmp eq %struct.TfLiteTensor* %86, null
  br i1 %162, label %163, label %165

163:                                              ; preds = %159
  %164 = getelementptr inbounds %"class.tflite::RuntimeShape", %"class.tflite::RuntimeShape"* %38, i64 0, i32 0
  store i32 0, i32* %164, align 8, !alias.scope !8
  br label %522

165:                                              ; preds = %159
  %166 = getelementptr inbounds %struct.TfLiteTensor, %struct.TfLiteTensor* %86, i64 0, i32 2
  %167 = load %struct.TfLiteIntArray*, %struct.TfLiteIntArray** %166, align 8, !noalias !8
  %168 = getelementptr inbounds %struct.TfLiteIntArray, %struct.TfLiteIntArray* %167, i64 0, i32 0
  %169 = load i32, i32* %168, align 4, !noalias !8
  %170 = getelementptr inbounds %struct.TfLiteIntArray, %struct.TfLiteIntArray* %167, i64 0, i32 1, i64 0
  %171 = getelementptr inbounds %"class.tflite::RuntimeShape", %"class.tflite::RuntimeShape"* %38, i64 0, i32 0
  store i32 %169, i32* %171, align 8, !alias.scope !8
  %172 = icmp sgt i32 %169, 5
  br i1 %172, label %173, label %180

173:                                              ; preds = %165
  %174 = sext i32 %169 to i64
  %175 = shl nsw i64 %174, 2
  %176 = tail call i8* @_Znam(i64 %175) #9, !noalias !8
  %177 = getelementptr inbounds %"class.tflite::RuntimeShape", %"class.tflite::RuntimeShape"* %38, i64 0, i32 1, i32 0
  %178 = bitcast i32** %177 to i8**
  store i8* %176, i8** %178, align 8, !alias.scope !8
  %179 = bitcast i8* %176 to i32*
  br label %185

180:                                              ; preds = %165
  %181 = getelementptr inbounds %"class.tflite::RuntimeShape", %"class.tflite::RuntimeShape"* %38, i64 0, i32 1
  %182 = bitcast %union.anon* %181 to i32*
  %183 = sext i32 %169 to i64
  %184 = shl nsw i64 %183, 2
  br label %185

185:                                              ; preds = %180, %173
  %186 = phi i64 [ %175, %173 ], [ %184, %180 ]
  %187 = phi i32* [ %179, %173 ], [ %182, %180 ]
  %188 = bitcast i32* %187 to i8*
  %189 = bitcast i32* %170 to i8*
  call void @llvm.memcpy.p0i8.p0i8.i64(i8* align 4 %188, i8* align 4 %189, i64 %186, i1 false) #8
  %190 = getelementptr inbounds %struct.TfLiteTensor, %struct.TfLiteTensor* %86, i64 0, i32 1
  %191 = bitcast %union.TfLitePtrUnion* %190 to i8**
  %192 = load i8*, i8** %191, align 8
  br label %522

193:                                              ; preds = %90
  %194 = bitcast %"class.tflite::RuntimeShape"* %39 to i8*
  call void @llvm.lifetime.start.p0i8(i64 32, i8* nonnull %194) #8
  %195 = icmp eq %struct.TfLiteTensor* %64, null
  br i1 %195, label %196, label %198

196:                                              ; preds = %193
  %197 = getelementptr inbounds %"class.tflite::RuntimeShape", %"class.tflite::RuntimeShape"* %39, i64 0, i32 0
  store i32 0, i32* %197, align 8, !alias.scope !11
  br label %226

198:                                              ; preds = %193
  %199 = getelementptr inbounds %struct.TfLiteTensor, %struct.TfLiteTensor* %64, i64 0, i32 2
  %200 = load %struct.TfLiteIntArray*, %struct.TfLiteIntArray** %199, align 8, !noalias !11
  %201 = getelementptr inbounds %struct.TfLiteIntArray, %struct.TfLiteIntArray* %200, i64 0, i32 0
  %202 = load i32, i32* %201, align 4, !noalias !11
  %203 = getelementptr inbounds %struct.TfLiteIntArray, %struct.TfLiteIntArray* %200, i64 0, i32 1, i64 0
  %204 = getelementptr inbounds %"class.tflite::RuntimeShape", %"class.tflite::RuntimeShape"* %39, i64 0, i32 0
  store i32 %202, i32* %204, align 8, !alias.scope !11
  %205 = icmp sgt i32 %202, 5
  br i1 %205, label %206, label %213

206:                                              ; preds = %198
  %207 = sext i32 %202 to i64
  %208 = shl nsw i64 %207, 2
  %209 = tail call i8* @_Znam(i64 %208) #9, !noalias !11
  %210 = getelementptr inbounds %"class.tflite::RuntimeShape", %"class.tflite::RuntimeShape"* %39, i64 0, i32 1, i32 0
  %211 = bitcast i32** %210 to i8**
  store i8* %209, i8** %211, align 8, !alias.scope !11
  %212 = bitcast i8* %209 to i32*
  br label %218

213:                                              ; preds = %198
  %214 = getelementptr inbounds %"class.tflite::RuntimeShape", %"class.tflite::RuntimeShape"* %39, i64 0, i32 1
  %215 = bitcast %union.anon* %214 to i32*
  %216 = sext i32 %202 to i64
  %217 = shl nsw i64 %216, 2
  br label %218

218:                                              ; preds = %213, %206
  %219 = phi i64 [ %208, %206 ], [ %217, %213 ]
  %220 = phi i32* [ %212, %206 ], [ %215, %213 ]
  %221 = bitcast i32* %220 to i8*
  %222 = bitcast i32* %203 to i8*
  call void @llvm.memcpy.p0i8.p0i8.i64(i8* align 4 %221, i8* align 4 %222, i64 %219, i1 false) #8
  %223 = getelementptr inbounds %struct.TfLiteTensor, %struct.TfLiteTensor* %64, i64 0, i32 1
  %224 = bitcast %union.TfLitePtrUnion* %223 to i8**
  %225 = load i8*, i8** %224, align 8
  br label %226

226:                                              ; preds = %218, %196
  %227 = phi i32 [ %202, %218 ], [ 0, %196 ]
  %228 = phi i8* [ %225, %218 ], [ null, %196 ]
  %229 = bitcast %"class.tflite::RuntimeShape"* %40 to i8*
  call void @llvm.lifetime.start.p0i8(i64 32, i8* nonnull %229) #8
  %230 = icmp eq %struct.TfLiteTensor* %74, null
  br i1 %230, label %231, label %233

231:                                              ; preds = %226
  %232 = getelementptr inbounds %"class.tflite::RuntimeShape", %"class.tflite::RuntimeShape"* %40, i64 0, i32 0
  store i32 0, i32* %232, align 8, !alias.scope !14
  br label %261

233:                                              ; preds = %226
  %234 = getelementptr inbounds %struct.TfLiteTensor, %struct.TfLiteTensor* %74, i64 0, i32 2
  %235 = load %struct.TfLiteIntArray*, %struct.TfLiteIntArray** %234, align 8, !noalias !14
  %236 = getelementptr inbounds %struct.TfLiteIntArray, %struct.TfLiteIntArray* %235, i64 0, i32 0
  %237 = load i32, i32* %236, align 4, !noalias !14
  %238 = getelementptr inbounds %struct.TfLiteIntArray, %struct.TfLiteIntArray* %235, i64 0, i32 1, i64 0
  %239 = getelementptr inbounds %"class.tflite::RuntimeShape", %"class.tflite::RuntimeShape"* %40, i64 0, i32 0
  store i32 %237, i32* %239, align 8, !alias.scope !14
  %240 = icmp sgt i32 %237, 5
  br i1 %240, label %241, label %248

241:                                              ; preds = %233
  %242 = sext i32 %237 to i64
  %243 = shl nsw i64 %242, 2
  %244 = tail call i8* @_Znam(i64 %243) #9, !noalias !14
  %245 = getelementptr inbounds %"class.tflite::RuntimeShape", %"class.tflite::RuntimeShape"* %40, i64 0, i32 1, i32 0
  %246 = bitcast i32** %245 to i8**
  store i8* %244, i8** %246, align 8, !alias.scope !14
  %247 = bitcast i8* %244 to i32*
  br label %253

248:                                              ; preds = %233
  %249 = getelementptr inbounds %"class.tflite::RuntimeShape", %"class.tflite::RuntimeShape"* %40, i64 0, i32 1
  %250 = bitcast %union.anon* %249 to i32*
  %251 = sext i32 %237 to i64
  %252 = shl nsw i64 %251, 2
  br label %253

253:                                              ; preds = %248, %241
  %254 = phi i64 [ %243, %241 ], [ %252, %248 ]
  %255 = phi i32* [ %247, %241 ], [ %250, %248 ]
  %256 = bitcast i32* %255 to i8*
  %257 = bitcast i32* %238 to i8*
  call void @llvm.memcpy.p0i8.p0i8.i64(i8* align 4 %256, i8* align 4 %257, i64 %254, i1 false) #8
  %258 = getelementptr inbounds %struct.TfLiteTensor, %struct.TfLiteTensor* %74, i64 0, i32 1
  %259 = bitcast %union.TfLitePtrUnion* %258 to i8**
  %260 = load i8*, i8** %259, align 8
  br label %261

261:                                              ; preds = %253, %231
  %262 = phi i32 [ %237, %253 ], [ 0, %231 ]
  %263 = phi i8* [ %260, %253 ], [ null, %231 ]
  %264 = bitcast %"class.tflite::RuntimeShape"* %41 to i8*
  call void @llvm.lifetime.start.p0i8(i64 32, i8* nonnull %264) #8
  %265 = icmp eq %struct.TfLiteTensor* %86, null
  br i1 %265, label %266, label %268

266:                                              ; preds = %261
  %267 = getelementptr inbounds %"class.tflite::RuntimeShape", %"class.tflite::RuntimeShape"* %41, i64 0, i32 0
  store i32 0, i32* %267, align 8, !alias.scope !17
  br label %296

268:                                              ; preds = %261
  %269 = getelementptr inbounds %struct.TfLiteTensor, %struct.TfLiteTensor* %86, i64 0, i32 2
  %270 = load %struct.TfLiteIntArray*, %struct.TfLiteIntArray** %269, align 8, !noalias !17
  %271 = getelementptr inbounds %struct.TfLiteIntArray, %struct.TfLiteIntArray* %270, i64 0, i32 0
  %272 = load i32, i32* %271, align 4, !noalias !17
  %273 = getelementptr inbounds %struct.TfLiteIntArray, %struct.TfLiteIntArray* %270, i64 0, i32 1, i64 0
  %274 = getelementptr inbounds %"class.tflite::RuntimeShape", %"class.tflite::RuntimeShape"* %41, i64 0, i32 0
  store i32 %272, i32* %274, align 8, !alias.scope !17
  %275 = icmp sgt i32 %272, 5
  br i1 %275, label %276, label %283

276:                                              ; preds = %268
  %277 = sext i32 %272 to i64
  %278 = shl nsw i64 %277, 2
  %279 = tail call i8* @_Znam(i64 %278) #9, !noalias !17
  %280 = getelementptr inbounds %"class.tflite::RuntimeShape", %"class.tflite::RuntimeShape"* %41, i64 0, i32 1, i32 0
  %281 = bitcast i32** %280 to i8**
  store i8* %279, i8** %281, align 8, !alias.scope !17
  %282 = bitcast i8* %279 to i32*
  br label %288

283:                                              ; preds = %268
  %284 = getelementptr inbounds %"class.tflite::RuntimeShape", %"class.tflite::RuntimeShape"* %41, i64 0, i32 1
  %285 = bitcast %union.anon* %284 to i32*
  %286 = sext i32 %272 to i64
  %287 = shl nsw i64 %286, 2
  br label %288

288:                                              ; preds = %283, %276
  %289 = phi i64 [ %278, %276 ], [ %287, %283 ]
  %290 = phi i32* [ %282, %276 ], [ %285, %283 ]
  %291 = bitcast i32* %290 to i8*
  %292 = bitcast i32* %273 to i8*
  call void @llvm.memcpy.p0i8.p0i8.i64(i8* align 4 %291, i8* align 4 %292, i64 %289, i1 false) #8
  %293 = getelementptr inbounds %struct.TfLiteTensor, %struct.TfLiteTensor* %86, i64 0, i32 1
  %294 = bitcast %union.TfLitePtrUnion* %293 to i8**
  %295 = load i8*, i8** %294, align 8
  br label %296

296:                                              ; preds = %288, %266
  %297 = phi i32 [ %272, %288 ], [ 0, %266 ]
  %298 = phi i8* [ %295, %288 ], [ null, %266 ]
  %299 = getelementptr inbounds %"class.tflite::RuntimeShape", %"class.tflite::RuntimeShape"* %39, i64 0, i32 1
  %300 = icmp sgt i32 %227, 5
  br i1 %300, label %301, label %304

301:                                              ; preds = %296
  %302 = getelementptr inbounds %union.anon, %union.anon* %299, i64 0, i32 0
  %303 = load i32*, i32** %302, align 8
  br label %307

304:                                              ; preds = %296
  %305 = bitcast %union.anon* %299 to i32*
  %306 = icmp sgt i32 %227, 0
  br i1 %306, label %307, label %411

307:                                              ; preds = %304, %301
  %308 = phi i32* [ %303, %301 ], [ %305, %304 ]
  %309 = zext i32 %227 to i64
  %310 = icmp ult i32 %227, 8
  br i1 %310, label %396, label %311

311:                                              ; preds = %307
  %312 = and i64 %309, 4294967288
  %313 = add nsw i64 %312, -8
  %314 = lshr exact i64 %313, 3
  %315 = add nuw nsw i64 %314, 1
  %316 = and i64 %315, 3
  %317 = icmp ult i64 %313, 24
  br i1 %317, label %363, label %318

318:                                              ; preds = %311
  %319 = sub nsw i64 %315, %316
  br label %320

320:                                              ; preds = %320, %318
  %321 = phi i64 [ 0, %318 ], [ %360, %320 ]
  %322 = phi <4 x i32> [ <i32 1, i32 1, i32 1, i32 1>, %318 ], [ %358, %320 ]
  %323 = phi <4 x i32> [ <i32 1, i32 1, i32 1, i32 1>, %318 ], [ %359, %320 ]
  %324 = phi i64 [ %319, %318 ], [ %361, %320 ]
  %325 = getelementptr inbounds i32, i32* %308, i64 %321
  %326 = bitcast i32* %325 to <4 x i32>*
  %327 = load <4 x i32>, <4 x i32>* %326, align 4
  %328 = getelementptr inbounds i32, i32* %325, i64 4
  %329 = bitcast i32* %328 to <4 x i32>*
  %330 = load <4 x i32>, <4 x i32>* %329, align 4
  %331 = mul nsw <4 x i32> %327, %322
  %332 = mul nsw <4 x i32> %330, %323
  %333 = or i64 %321, 8
  %334 = getelementptr inbounds i32, i32* %308, i64 %333
  %335 = bitcast i32* %334 to <4 x i32>*
  %336 = load <4 x i32>, <4 x i32>* %335, align 4
  %337 = getelementptr inbounds i32, i32* %334, i64 4
  %338 = bitcast i32* %337 to <4 x i32>*
  %339 = load <4 x i32>, <4 x i32>* %338, align 4
  %340 = mul nsw <4 x i32> %336, %331
  %341 = mul nsw <4 x i32> %339, %332
  %342 = or i64 %321, 16
  %343 = getelementptr inbounds i32, i32* %308, i64 %342
  %344 = bitcast i32* %343 to <4 x i32>*
  %345 = load <4 x i32>, <4 x i32>* %344, align 4
  %346 = getelementptr inbounds i32, i32* %343, i64 4
  %347 = bitcast i32* %346 to <4 x i32>*
  %348 = load <4 x i32>, <4 x i32>* %347, align 4
  %349 = mul nsw <4 x i32> %345, %340
  %350 = mul nsw <4 x i32> %348, %341
  %351 = or i64 %321, 24
  %352 = getelementptr inbounds i32, i32* %308, i64 %351
  %353 = bitcast i32* %352 to <4 x i32>*
  %354 = load <4 x i32>, <4 x i32>* %353, align 4
  %355 = getelementptr inbounds i32, i32* %352, i64 4
  %356 = bitcast i32* %355 to <4 x i32>*
  %357 = load <4 x i32>, <4 x i32>* %356, align 4
  %358 = mul nsw <4 x i32> %354, %349
  %359 = mul nsw <4 x i32> %357, %350
  %360 = add i64 %321, 32
  %361 = add i64 %324, -4
  %362 = icmp eq i64 %361, 0
  br i1 %362, label %363, label %320, !llvm.loop !20

363:                                              ; preds = %320, %311
  %364 = phi <4 x i32> [ undef, %311 ], [ %358, %320 ]
  %365 = phi <4 x i32> [ undef, %311 ], [ %359, %320 ]
  %366 = phi i64 [ 0, %311 ], [ %360, %320 ]
  %367 = phi <4 x i32> [ <i32 1, i32 1, i32 1, i32 1>, %311 ], [ %358, %320 ]
  %368 = phi <4 x i32> [ <i32 1, i32 1, i32 1, i32 1>, %311 ], [ %359, %320 ]
  %369 = icmp eq i64 %316, 0
  br i1 %369, label %386, label %370

370:                                              ; preds = %363, %370
  %371 = phi i64 [ %383, %370 ], [ %366, %363 ]
  %372 = phi <4 x i32> [ %381, %370 ], [ %367, %363 ]
  %373 = phi <4 x i32> [ %382, %370 ], [ %368, %363 ]
  %374 = phi i64 [ %384, %370 ], [ %316, %363 ]
  %375 = getelementptr inbounds i32, i32* %308, i64 %371
  %376 = bitcast i32* %375 to <4 x i32>*
  %377 = load <4 x i32>, <4 x i32>* %376, align 4
  %378 = getelementptr inbounds i32, i32* %375, i64 4
  %379 = bitcast i32* %378 to <4 x i32>*
  %380 = load <4 x i32>, <4 x i32>* %379, align 4
  %381 = mul nsw <4 x i32> %377, %372
  %382 = mul nsw <4 x i32> %380, %373
  %383 = add i64 %371, 8
  %384 = add i64 %374, -1
  %385 = icmp eq i64 %384, 0
  br i1 %385, label %386, label %370, !llvm.loop !22

386:                                              ; preds = %370, %363
  %387 = phi <4 x i32> [ %364, %363 ], [ %381, %370 ]
  %388 = phi <4 x i32> [ %365, %363 ], [ %382, %370 ]
  %389 = mul <4 x i32> %388, %387
  %390 = shufflevector <4 x i32> %389, <4 x i32> undef, <4 x i32> <i32 2, i32 3, i32 undef, i32 undef>
  %391 = mul <4 x i32> %389, %390
  %392 = shufflevector <4 x i32> %391, <4 x i32> undef, <4 x i32> <i32 1, i32 undef, i32 undef, i32 undef>
  %393 = mul <4 x i32> %391, %392
  %394 = extractelement <4 x i32> %393, i32 0
  %395 = icmp eq i64 %312, %309
  br i1 %395, label %407, label %396

396:                                              ; preds = %386, %307
  %397 = phi i64 [ 0, %307 ], [ %312, %386 ]
  %398 = phi i32 [ 1, %307 ], [ %394, %386 ]
  br label %399

399:                                              ; preds = %396, %399
  %400 = phi i64 [ %405, %399 ], [ %397, %396 ]
  %401 = phi i32 [ %404, %399 ], [ %398, %396 ]
  %402 = getelementptr inbounds i32, i32* %308, i64 %400
  %403 = load i32, i32* %402, align 4
  %404 = mul nsw i32 %403, %401
  %405 = add nuw nsw i64 %400, 1
  %406 = icmp eq i64 %405, %309
  br i1 %406, label %407, label %399, !llvm.loop !24

407:                                              ; preds = %399, %386
  %408 = phi i32 [ %394, %386 ], [ %404, %399 ]
  %409 = sext i32 %408 to i64
  %410 = icmp sgt i32 %408, 0
  br i1 %410, label %411, label %499

411:                                              ; preds = %407, %304
  %412 = phi i64 [ %409, %407 ], [ 1, %304 ]
  %413 = icmp ult i64 %412, 32
  br i1 %413, label %457, label %414

414:                                              ; preds = %411
  %415 = getelementptr i8, i8* %298, i64 %412
  %416 = getelementptr i8, i8* %228, i64 %412
  %417 = getelementptr i8, i8* %263, i64 %412
  %418 = icmp ult i8* %298, %416
  %419 = icmp ult i8* %228, %415
  %420 = and i1 %418, %419
  %421 = icmp ult i8* %298, %417
  %422 = icmp ult i8* %263, %415
  %423 = and i1 %421, %422
  %424 = or i1 %420, %423
  br i1 %424, label %457, label %425

425:                                              ; preds = %414
  %426 = and i64 %412, -32
  br label %427

427:                                              ; preds = %427, %425
  %428 = phi i64 [ 0, %425 ], [ %453, %427 ]
  %429 = getelementptr inbounds i8, i8* %228, i64 %428
  %430 = bitcast i8* %429 to <16 x i8>*
  %431 = load <16 x i8>, <16 x i8>* %430, align 1, !alias.scope !26
  %432 = getelementptr inbounds i8, i8* %429, i64 16
  %433 = bitcast i8* %432 to <16 x i8>*
  %434 = load <16 x i8>, <16 x i8>* %433, align 1, !alias.scope !26
  %435 = icmp eq <16 x i8> %431, zeroinitializer
  %436 = icmp eq <16 x i8> %434, zeroinitializer
  %437 = getelementptr inbounds i8, i8* %263, i64 %428
  %438 = bitcast i8* %437 to <16 x i8>*
  %439 = load <16 x i8>, <16 x i8>* %438, align 1, !alias.scope !29
  %440 = getelementptr inbounds i8, i8* %437, i64 16
  %441 = bitcast i8* %440 to <16 x i8>*
  %442 = load <16 x i8>, <16 x i8>* %441, align 1, !alias.scope !29
  %443 = icmp ne <16 x i8> %439, zeroinitializer
  %444 = icmp ne <16 x i8> %442, zeroinitializer
  %445 = xor <16 x i1> %435, %443
  %446 = xor <16 x i1> %436, %444
  %447 = getelementptr inbounds i8, i8* %298, i64 %428
  %448 = zext <16 x i1> %445 to <16 x i8>
  %449 = zext <16 x i1> %446 to <16 x i8>
  %450 = bitcast i8* %447 to <16 x i8>*
  store <16 x i8> %448, <16 x i8>* %450, align 1, !alias.scope !31, !noalias !33
  %451 = getelementptr inbounds i8, i8* %447, i64 16
  %452 = bitcast i8* %451 to <16 x i8>*
  store <16 x i8> %449, <16 x i8>* %452, align 1, !alias.scope !31, !noalias !33
  %453 = add i64 %428, 32
  %454 = icmp eq i64 %453, %426
  br i1 %454, label %455, label %427, !llvm.loop !34

455:                                              ; preds = %427
  %456 = icmp eq i64 %412, %426
  br i1 %456, label %499, label %457

457:                                              ; preds = %455, %414, %411
  %458 = phi i64 [ 0, %414 ], [ 0, %411 ], [ %426, %455 ]
  %459 = and i64 %412, 1
  %460 = icmp eq i64 %459, 0
  br i1 %460, label %472, label %461

461:                                              ; preds = %457
  %462 = getelementptr inbounds i8, i8* %228, i64 %458
  %463 = load i8, i8* %462, align 1, !range !35
  %464 = icmp eq i8 %463, 0
  %465 = getelementptr inbounds i8, i8* %263, i64 %458
  %466 = load i8, i8* %465, align 1, !range !35
  %467 = icmp ne i8 %466, 0
  %468 = xor i1 %464, %467
  %469 = getelementptr inbounds i8, i8* %298, i64 %458
  %470 = zext i1 %468 to i8
  store i8 %470, i8* %469, align 1
  %471 = or i64 %458, 1
  br label %472

472:                                              ; preds = %457, %461
  %473 = phi i64 [ %458, %457 ], [ %471, %461 ]
  %474 = or i64 %458, 1
  %475 = icmp eq i64 %412, %474
  br i1 %475, label %499, label %476

476:                                              ; preds = %472, %476
  %477 = phi i64 [ %497, %476 ], [ %473, %472 ]
  %478 = getelementptr inbounds i8, i8* %228, i64 %477
  %479 = load i8, i8* %478, align 1, !range !35
  %480 = icmp eq i8 %479, 0
  %481 = getelementptr inbounds i8, i8* %263, i64 %477
  %482 = load i8, i8* %481, align 1, !range !35
  %483 = icmp ne i8 %482, 0
  %484 = xor i1 %480, %483
  %485 = getelementptr inbounds i8, i8* %298, i64 %477
  %486 = zext i1 %484 to i8
  store i8 %486, i8* %485, align 1
  %487 = add nuw nsw i64 %477, 1
  %488 = getelementptr inbounds i8, i8* %228, i64 %487
  %489 = load i8, i8* %488, align 1, !range !35
  %490 = icmp eq i8 %489, 0
  %491 = getelementptr inbounds i8, i8* %263, i64 %487
  %492 = load i8, i8* %491, align 1, !range !35
  %493 = icmp ne i8 %492, 0
  %494 = xor i1 %490, %493
  %495 = getelementptr inbounds i8, i8* %298, i64 %487
  %496 = zext i1 %494 to i8
  store i8 %496, i8* %495, align 1
  %497 = add nuw nsw i64 %477, 2
  %498 = icmp eq i64 %497, %412
  br i1 %498, label %499, label %476, !llvm.loop !36

499:                                              ; preds = %472, %476, %455, %407
  %500 = icmp sgt i32 %297, 5
  br i1 %500, label %501, label %507

501:                                              ; preds = %499
  %502 = getelementptr inbounds %"class.tflite::RuntimeShape", %"class.tflite::RuntimeShape"* %41, i64 0, i32 1, i32 0
  %503 = load i32*, i32** %502, align 8
  %504 = icmp eq i32* %503, null
  br i1 %504, label %507, label %505

505:                                              ; preds = %501
  %506 = bitcast i32* %503 to i8*
  tail call void @_ZdaPv(i8* %506) #9
  br label %507

507:                                              ; preds = %505, %501, %499
  call void @llvm.lifetime.end.p0i8(i64 32, i8* nonnull %264) #8
  %508 = icmp sgt i32 %262, 5
  br i1 %508, label %509, label %515

509:                                              ; preds = %507
  %510 = getelementptr inbounds %"class.tflite::RuntimeShape", %"class.tflite::RuntimeShape"* %40, i64 0, i32 1, i32 0
  %511 = load i32*, i32** %510, align 8
  %512 = icmp eq i32* %511, null
  br i1 %512, label %515, label %513

513:                                              ; preds = %509
  %514 = bitcast i32* %511 to i8*
  tail call void @_ZdaPv(i8* %514) #9
  br label %515

515:                                              ; preds = %513, %509, %507
  call void @llvm.lifetime.end.p0i8(i64 32, i8* nonnull %229) #8
  br i1 %300, label %516, label %553

516:                                              ; preds = %515
  %517 = getelementptr inbounds %"class.tflite::RuntimeShape", %"class.tflite::RuntimeShape"* %39, i64 0, i32 1, i32 0
  %518 = load i32*, i32** %517, align 8
  %519 = icmp eq i32* %518, null
  br i1 %519, label %553, label %520

520:                                              ; preds = %516
  %521 = bitcast i32* %518 to i8*
  tail call void @_ZdaPv(i8* %521) #9
  br label %553

522:                                              ; preds = %185, %163
  %523 = phi i8* [ %192, %185 ], [ null, %163 ]
  call void @_ZN6tflite13reference_ops29BroadcastComparison4DSlowImplIbXadL_ZNS0_7EqualFnIbEEbT_S3_EEEEvRKNS_16ComparisonParamsERKNS_12RuntimeShapeEPKS3_S9_SB_S9_Pb(%"struct.tflite::ComparisonParams"* nonnull dereferenceable(32) %35, %"class.tflite::RuntimeShape"* nonnull dereferenceable(32) %36, i8* %126, %"class.tflite::RuntimeShape"* nonnull dereferenceable(32) %37, i8* %160, %"class.tflite::RuntimeShape"* nonnull dereferenceable(32) %38, i8* %523) #8
  %524 = getelementptr inbounds %"class.tflite::RuntimeShape", %"class.tflite::RuntimeShape"* %38, i64 0, i32 0
  %525 = load i32, i32* %524, align 8
  %526 = icmp sgt i32 %525, 5
  br i1 %526, label %527, label %533

527:                                              ; preds = %522
  %528 = getelementptr inbounds %"class.tflite::RuntimeShape", %"class.tflite::RuntimeShape"* %38, i64 0, i32 1, i32 0
  %529 = load i32*, i32** %528, align 8
  %530 = icmp eq i32* %529, null
  br i1 %530, label %533, label %531

531:                                              ; preds = %527
  %532 = bitcast i32* %529 to i8*
  call void @_ZdaPv(i8* %532) #9
  br label %533

533:                                              ; preds = %531, %527, %522
  call void @llvm.lifetime.end.p0i8(i64 32, i8* nonnull %161) #8
  %534 = getelementptr inbounds %"class.tflite::RuntimeShape", %"class.tflite::RuntimeShape"* %37, i64 0, i32 0
  %535 = load i32, i32* %534, align 8
  %536 = icmp sgt i32 %535, 5
  br i1 %536, label %537, label %543

537:                                              ; preds = %533
  %538 = getelementptr inbounds %"class.tflite::RuntimeShape", %"class.tflite::RuntimeShape"* %37, i64 0, i32 1, i32 0
  %539 = load i32*, i32** %538, align 8
  %540 = icmp eq i32* %539, null
  br i1 %540, label %543, label %541

541:                                              ; preds = %537
  %542 = bitcast i32* %539 to i8*
  call void @_ZdaPv(i8* %542) #9
  br label %543

543:                                              ; preds = %541, %537, %533
  call void @llvm.lifetime.end.p0i8(i64 32, i8* nonnull %127) #8
  %544 = getelementptr inbounds %"class.tflite::RuntimeShape", %"class.tflite::RuntimeShape"* %36, i64 0, i32 0
  %545 = load i32, i32* %544, align 8
  %546 = icmp sgt i32 %545, 5
  br i1 %546, label %547, label %553

547:                                              ; preds = %543
  %548 = getelementptr inbounds %"class.tflite::RuntimeShape", %"class.tflite::RuntimeShape"* %36, i64 0, i32 1, i32 0
  %549 = load i32*, i32** %548, align 8
  %550 = icmp eq i32* %549, null
  br i1 %550, label %553, label %551

551:                                              ; preds = %547
  %552 = bitcast i32* %549 to i8*
  call void @_ZdaPv(i8* %552) #9
  br label %553

553:                                              ; preds = %543, %547, %551, %515, %516, %520
  %554 = phi i8* [ %194, %520 ], [ %194, %516 ], [ %194, %515 ], [ %93, %551 ], [ %93, %547 ], [ %93, %543 ]
  call void @llvm.lifetime.end.p0i8(i64 32, i8* nonnull %554) #8
  call void @llvm.lifetime.end.p0i8(i64 32, i8* nonnull %91) #8
  br label %2967

555:                                              ; preds = %85
  %556 = bitcast %"struct.tflite::ComparisonParams"* %28 to i8*
  call void @llvm.lifetime.start.p0i8(i64 32, i8* nonnull %556) #8
  call void @llvm.memset.p0i8.i64(i8* nonnull align 4 %556, i8 -86, i64 32, i1 false) #8
  br i1 %87, label %658, label %557

557:                                              ; preds = %555
  %558 = bitcast %"class.tflite::RuntimeShape"* %29 to i8*
  call void @llvm.lifetime.start.p0i8(i64 32, i8* nonnull %558) #8
  %559 = icmp eq %struct.TfLiteTensor* %64, null
  br i1 %559, label %560, label %562

560:                                              ; preds = %557
  %561 = getelementptr inbounds %"class.tflite::RuntimeShape", %"class.tflite::RuntimeShape"* %29, i64 0, i32 0
  store i32 0, i32* %561, align 8, !alias.scope !37
  br label %590

562:                                              ; preds = %557
  %563 = getelementptr inbounds %struct.TfLiteTensor, %struct.TfLiteTensor* %64, i64 0, i32 2
  %564 = load %struct.TfLiteIntArray*, %struct.TfLiteIntArray** %563, align 8, !noalias !37
  %565 = getelementptr inbounds %struct.TfLiteIntArray, %struct.TfLiteIntArray* %564, i64 0, i32 0
  %566 = load i32, i32* %565, align 4, !noalias !37
  %567 = getelementptr inbounds %struct.TfLiteIntArray, %struct.TfLiteIntArray* %564, i64 0, i32 1, i64 0
  %568 = getelementptr inbounds %"class.tflite::RuntimeShape", %"class.tflite::RuntimeShape"* %29, i64 0, i32 0
  store i32 %566, i32* %568, align 8, !alias.scope !37
  %569 = icmp sgt i32 %566, 5
  br i1 %569, label %570, label %577

570:                                              ; preds = %562
  %571 = sext i32 %566 to i64
  %572 = shl nsw i64 %571, 2
  %573 = tail call i8* @_Znam(i64 %572) #9, !noalias !37
  %574 = getelementptr inbounds %"class.tflite::RuntimeShape", %"class.tflite::RuntimeShape"* %29, i64 0, i32 1, i32 0
  %575 = bitcast i32** %574 to i8**
  store i8* %573, i8** %575, align 8, !alias.scope !37
  %576 = bitcast i8* %573 to i32*
  br label %582

577:                                              ; preds = %562
  %578 = getelementptr inbounds %"class.tflite::RuntimeShape", %"class.tflite::RuntimeShape"* %29, i64 0, i32 1
  %579 = bitcast %union.anon* %578 to i32*
  %580 = sext i32 %566 to i64
  %581 = shl nsw i64 %580, 2
  br label %582

582:                                              ; preds = %577, %570
  %583 = phi i64 [ %572, %570 ], [ %581, %577 ]
  %584 = phi i32* [ %576, %570 ], [ %579, %577 ]
  %585 = bitcast i32* %584 to i8*
  %586 = bitcast i32* %567 to i8*
  call void @llvm.memcpy.p0i8.p0i8.i64(i8* align 4 %585, i8* align 4 %586, i64 %583, i1 false) #8
  %587 = getelementptr inbounds %struct.TfLiteTensor, %struct.TfLiteTensor* %64, i64 0, i32 1
  %588 = bitcast %union.TfLitePtrUnion* %587 to float**
  %589 = load float*, float** %588, align 8
  br label %590

590:                                              ; preds = %582, %560
  %591 = phi float* [ %589, %582 ], [ null, %560 ]
  %592 = bitcast %"class.tflite::RuntimeShape"* %30 to i8*
  call void @llvm.lifetime.start.p0i8(i64 32, i8* nonnull %592) #8
  %593 = icmp eq %struct.TfLiteTensor* %74, null
  br i1 %593, label %594, label %596

594:                                              ; preds = %590
  %595 = getelementptr inbounds %"class.tflite::RuntimeShape", %"class.tflite::RuntimeShape"* %30, i64 0, i32 0
  store i32 0, i32* %595, align 8, !alias.scope !40
  br label %624

596:                                              ; preds = %590
  %597 = getelementptr inbounds %struct.TfLiteTensor, %struct.TfLiteTensor* %74, i64 0, i32 2
  %598 = load %struct.TfLiteIntArray*, %struct.TfLiteIntArray** %597, align 8, !noalias !40
  %599 = getelementptr inbounds %struct.TfLiteIntArray, %struct.TfLiteIntArray* %598, i64 0, i32 0
  %600 = load i32, i32* %599, align 4, !noalias !40
  %601 = getelementptr inbounds %struct.TfLiteIntArray, %struct.TfLiteIntArray* %598, i64 0, i32 1, i64 0
  %602 = getelementptr inbounds %"class.tflite::RuntimeShape", %"class.tflite::RuntimeShape"* %30, i64 0, i32 0
  store i32 %600, i32* %602, align 8, !alias.scope !40
  %603 = icmp sgt i32 %600, 5
  br i1 %603, label %604, label %611

604:                                              ; preds = %596
  %605 = sext i32 %600 to i64
  %606 = shl nsw i64 %605, 2
  %607 = tail call i8* @_Znam(i64 %606) #9, !noalias !40
  %608 = getelementptr inbounds %"class.tflite::RuntimeShape", %"class.tflite::RuntimeShape"* %30, i64 0, i32 1, i32 0
  %609 = bitcast i32** %608 to i8**
  store i8* %607, i8** %609, align 8, !alias.scope !40
  %610 = bitcast i8* %607 to i32*
  br label %616

611:                                              ; preds = %596
  %612 = getelementptr inbounds %"class.tflite::RuntimeShape", %"class.tflite::RuntimeShape"* %30, i64 0, i32 1
  %613 = bitcast %union.anon* %612 to i32*
  %614 = sext i32 %600 to i64
  %615 = shl nsw i64 %614, 2
  br label %616

616:                                              ; preds = %611, %604
  %617 = phi i64 [ %606, %604 ], [ %615, %611 ]
  %618 = phi i32* [ %610, %604 ], [ %613, %611 ]
  %619 = bitcast i32* %618 to i8*
  %620 = bitcast i32* %601 to i8*
  call void @llvm.memcpy.p0i8.p0i8.i64(i8* align 4 %619, i8* align 4 %620, i64 %617, i1 false) #8
  %621 = getelementptr inbounds %struct.TfLiteTensor, %struct.TfLiteTensor* %74, i64 0, i32 1
  %622 = bitcast %union.TfLitePtrUnion* %621 to float**
  %623 = load float*, float** %622, align 8
  br label %624

624:                                              ; preds = %616, %594
  %625 = phi float* [ %623, %616 ], [ null, %594 ]
  %626 = bitcast %"class.tflite::RuntimeShape"* %31 to i8*
  call void @llvm.lifetime.start.p0i8(i64 32, i8* nonnull %626) #8
  %627 = icmp eq %struct.TfLiteTensor* %86, null
  br i1 %627, label %628, label %630

628:                                              ; preds = %624
  %629 = getelementptr inbounds %"class.tflite::RuntimeShape", %"class.tflite::RuntimeShape"* %31, i64 0, i32 0
  store i32 0, i32* %629, align 8, !alias.scope !43
  br label %1037

630:                                              ; preds = %624
  %631 = getelementptr inbounds %struct.TfLiteTensor, %struct.TfLiteTensor* %86, i64 0, i32 2
  %632 = load %struct.TfLiteIntArray*, %struct.TfLiteIntArray** %631, align 8, !noalias !43
  %633 = getelementptr inbounds %struct.TfLiteIntArray, %struct.TfLiteIntArray* %632, i64 0, i32 0
  %634 = load i32, i32* %633, align 4, !noalias !43
  %635 = getelementptr inbounds %struct.TfLiteIntArray, %struct.TfLiteIntArray* %632, i64 0, i32 1, i64 0
  %636 = getelementptr inbounds %"class.tflite::RuntimeShape", %"class.tflite::RuntimeShape"* %31, i64 0, i32 0
  store i32 %634, i32* %636, align 8, !alias.scope !43
  %637 = icmp sgt i32 %634, 5
  br i1 %637, label %638, label %645

638:                                              ; preds = %630
  %639 = sext i32 %634 to i64
  %640 = shl nsw i64 %639, 2
  %641 = tail call i8* @_Znam(i64 %640) #9, !noalias !43
  %642 = getelementptr inbounds %"class.tflite::RuntimeShape", %"class.tflite::RuntimeShape"* %31, i64 0, i32 1, i32 0
  %643 = bitcast i32** %642 to i8**
  store i8* %641, i8** %643, align 8, !alias.scope !43
  %644 = bitcast i8* %641 to i32*
  br label %650

645:                                              ; preds = %630
  %646 = getelementptr inbounds %"class.tflite::RuntimeShape", %"class.tflite::RuntimeShape"* %31, i64 0, i32 1
  %647 = bitcast %union.anon* %646 to i32*
  %648 = sext i32 %634 to i64
  %649 = shl nsw i64 %648, 2
  br label %650

650:                                              ; preds = %645, %638
  %651 = phi i64 [ %640, %638 ], [ %649, %645 ]
  %652 = phi i32* [ %644, %638 ], [ %647, %645 ]
  %653 = bitcast i32* %652 to i8*
  %654 = bitcast i32* %635 to i8*
  call void @llvm.memcpy.p0i8.p0i8.i64(i8* align 4 %653, i8* align 4 %654, i64 %651, i1 false) #8
  %655 = getelementptr inbounds %struct.TfLiteTensor, %struct.TfLiteTensor* %86, i64 0, i32 1
  %656 = bitcast %union.TfLitePtrUnion* %655 to i8**
  %657 = load i8*, i8** %656, align 8
  br label %1037

658:                                              ; preds = %555
  %659 = bitcast %"class.tflite::RuntimeShape"* %32 to i8*
  call void @llvm.lifetime.start.p0i8(i64 32, i8* nonnull %659) #8
  %660 = icmp eq %struct.TfLiteTensor* %64, null
  br i1 %660, label %661, label %663

661:                                              ; preds = %658
  %662 = getelementptr inbounds %"class.tflite::RuntimeShape", %"class.tflite::RuntimeShape"* %32, i64 0, i32 0
  store i32 0, i32* %662, align 8, !alias.scope !46
  br label %692

663:                                              ; preds = %658
  %664 = getelementptr inbounds %struct.TfLiteTensor, %struct.TfLiteTensor* %64, i64 0, i32 2
  %665 = load %struct.TfLiteIntArray*, %struct.TfLiteIntArray** %664, align 8, !noalias !46
  %666 = getelementptr inbounds %struct.TfLiteIntArray, %struct.TfLiteIntArray* %665, i64 0, i32 0
  %667 = load i32, i32* %666, align 4, !noalias !46
  %668 = getelementptr inbounds %struct.TfLiteIntArray, %struct.TfLiteIntArray* %665, i64 0, i32 1, i64 0
  %669 = getelementptr inbounds %"class.tflite::RuntimeShape", %"class.tflite::RuntimeShape"* %32, i64 0, i32 0
  store i32 %667, i32* %669, align 8, !alias.scope !46
  %670 = icmp sgt i32 %667, 5
  br i1 %670, label %671, label %678

671:                                              ; preds = %663
  %672 = sext i32 %667 to i64
  %673 = shl nsw i64 %672, 2
  %674 = tail call i8* @_Znam(i64 %673) #9, !noalias !46
  %675 = getelementptr inbounds %"class.tflite::RuntimeShape", %"class.tflite::RuntimeShape"* %32, i64 0, i32 1, i32 0
  %676 = bitcast i32** %675 to i8**
  store i8* %674, i8** %676, align 8, !alias.scope !46
  %677 = bitcast i8* %674 to i32*
  br label %683

678:                                              ; preds = %663
  %679 = getelementptr inbounds %"class.tflite::RuntimeShape", %"class.tflite::RuntimeShape"* %32, i64 0, i32 1
  %680 = bitcast %union.anon* %679 to i32*
  %681 = sext i32 %667 to i64
  %682 = shl nsw i64 %681, 2
  br label %683

683:                                              ; preds = %678, %671
  %684 = phi i64 [ %673, %671 ], [ %682, %678 ]
  %685 = phi i32* [ %677, %671 ], [ %680, %678 ]
  %686 = bitcast i32* %685 to i8*
  %687 = bitcast i32* %668 to i8*
  call void @llvm.memcpy.p0i8.p0i8.i64(i8* align 4 %686, i8* align 4 %687, i64 %684, i1 false) #8
  %688 = getelementptr inbounds %struct.TfLiteTensor, %struct.TfLiteTensor* %64, i64 0, i32 1
  %689 = bitcast %union.TfLitePtrUnion* %688 to float**
  %690 = load float*, float** %689, align 8
  %691 = bitcast float* %690 to i8*
  br label %692

692:                                              ; preds = %683, %661
  %693 = phi i32 [ %667, %683 ], [ 0, %661 ]
  %694 = phi i8* [ %691, %683 ], [ null, %661 ]
  %695 = phi float* [ %690, %683 ], [ null, %661 ]
  %696 = bitcast %"class.tflite::RuntimeShape"* %33 to i8*
  call void @llvm.lifetime.start.p0i8(i64 32, i8* nonnull %696) #8
  %697 = icmp eq %struct.TfLiteTensor* %74, null
  br i1 %697, label %698, label %700

698:                                              ; preds = %692
  %699 = getelementptr inbounds %"class.tflite::RuntimeShape", %"class.tflite::RuntimeShape"* %33, i64 0, i32 0
  store i32 0, i32* %699, align 8, !alias.scope !49
  br label %729

700:                                              ; preds = %692
  %701 = getelementptr inbounds %struct.TfLiteTensor, %struct.TfLiteTensor* %74, i64 0, i32 2
  %702 = load %struct.TfLiteIntArray*, %struct.TfLiteIntArray** %701, align 8, !noalias !49
  %703 = getelementptr inbounds %struct.TfLiteIntArray, %struct.TfLiteIntArray* %702, i64 0, i32 0
  %704 = load i32, i32* %703, align 4, !noalias !49
  %705 = getelementptr inbounds %struct.TfLiteIntArray, %struct.TfLiteIntArray* %702, i64 0, i32 1, i64 0
  %706 = getelementptr inbounds %"class.tflite::RuntimeShape", %"class.tflite::RuntimeShape"* %33, i64 0, i32 0
  store i32 %704, i32* %706, align 8, !alias.scope !49
  %707 = icmp sgt i32 %704, 5
  br i1 %707, label %708, label %715

708:                                              ; preds = %700
  %709 = sext i32 %704 to i64
  %710 = shl nsw i64 %709, 2
  %711 = tail call i8* @_Znam(i64 %710) #9, !noalias !49
  %712 = getelementptr inbounds %"class.tflite::RuntimeShape", %"class.tflite::RuntimeShape"* %33, i64 0, i32 1, i32 0
  %713 = bitcast i32** %712 to i8**
  store i8* %711, i8** %713, align 8, !alias.scope !49
  %714 = bitcast i8* %711 to i32*
  br label %720

715:                                              ; preds = %700
  %716 = getelementptr inbounds %"class.tflite::RuntimeShape", %"class.tflite::RuntimeShape"* %33, i64 0, i32 1
  %717 = bitcast %union.anon* %716 to i32*
  %718 = sext i32 %704 to i64
  %719 = shl nsw i64 %718, 2
  br label %720

720:                                              ; preds = %715, %708
  %721 = phi i64 [ %710, %708 ], [ %719, %715 ]
  %722 = phi i32* [ %714, %708 ], [ %717, %715 ]
  %723 = bitcast i32* %722 to i8*
  %724 = bitcast i32* %705 to i8*
  call void @llvm.memcpy.p0i8.p0i8.i64(i8* align 4 %723, i8* align 4 %724, i64 %721, i1 false) #8
  %725 = getelementptr inbounds %struct.TfLiteTensor, %struct.TfLiteTensor* %74, i64 0, i32 1
  %726 = bitcast %union.TfLitePtrUnion* %725 to float**
  %727 = load float*, float** %726, align 8
  %728 = bitcast float* %727 to i8*
  br label %729

729:                                              ; preds = %720, %698
  %730 = phi i32 [ %704, %720 ], [ 0, %698 ]
  %731 = phi i8* [ %728, %720 ], [ null, %698 ]
  %732 = phi float* [ %727, %720 ], [ null, %698 ]
  %733 = bitcast %"class.tflite::RuntimeShape"* %34 to i8*
  call void @llvm.lifetime.start.p0i8(i64 32, i8* nonnull %733) #8
  %734 = icmp eq %struct.TfLiteTensor* %86, null
  br i1 %734, label %735, label %737

735:                                              ; preds = %729
  %736 = getelementptr inbounds %"class.tflite::RuntimeShape", %"class.tflite::RuntimeShape"* %34, i64 0, i32 0
  store i32 0, i32* %736, align 8, !alias.scope !52
  br label %765

737:                                              ; preds = %729
  %738 = getelementptr inbounds %struct.TfLiteTensor, %struct.TfLiteTensor* %86, i64 0, i32 2
  %739 = load %struct.TfLiteIntArray*, %struct.TfLiteIntArray** %738, align 8, !noalias !52
  %740 = getelementptr inbounds %struct.TfLiteIntArray, %struct.TfLiteIntArray* %739, i64 0, i32 0
  %741 = load i32, i32* %740, align 4, !noalias !52
  %742 = getelementptr inbounds %struct.TfLiteIntArray, %struct.TfLiteIntArray* %739, i64 0, i32 1, i64 0
  %743 = getelementptr inbounds %"class.tflite::RuntimeShape", %"class.tflite::RuntimeShape"* %34, i64 0, i32 0
  store i32 %741, i32* %743, align 8, !alias.scope !52
  %744 = icmp sgt i32 %741, 5
  br i1 %744, label %745, label %752

745:                                              ; preds = %737
  %746 = sext i32 %741 to i64
  %747 = shl nsw i64 %746, 2
  %748 = tail call i8* @_Znam(i64 %747) #9, !noalias !52
  %749 = getelementptr inbounds %"class.tflite::RuntimeShape", %"class.tflite::RuntimeShape"* %34, i64 0, i32 1, i32 0
  %750 = bitcast i32** %749 to i8**
  store i8* %748, i8** %750, align 8, !alias.scope !52
  %751 = bitcast i8* %748 to i32*
  br label %757

752:                                              ; preds = %737
  %753 = getelementptr inbounds %"class.tflite::RuntimeShape", %"class.tflite::RuntimeShape"* %34, i64 0, i32 1
  %754 = bitcast %union.anon* %753 to i32*
  %755 = sext i32 %741 to i64
  %756 = shl nsw i64 %755, 2
  br label %757

757:                                              ; preds = %752, %745
  %758 = phi i64 [ %747, %745 ], [ %756, %752 ]
  %759 = phi i32* [ %751, %745 ], [ %754, %752 ]
  %760 = bitcast i32* %759 to i8*
  %761 = bitcast i32* %742 to i8*
  call void @llvm.memcpy.p0i8.p0i8.i64(i8* align 4 %760, i8* align 4 %761, i64 %758, i1 false) #8
  %762 = getelementptr inbounds %struct.TfLiteTensor, %struct.TfLiteTensor* %86, i64 0, i32 1
  %763 = bitcast %union.TfLitePtrUnion* %762 to i8**
  %764 = load i8*, i8** %763, align 8
  br label %765

765:                                              ; preds = %757, %735
  %766 = phi i32 [ %741, %757 ], [ 0, %735 ]
  %767 = phi i8* [ %764, %757 ], [ null, %735 ]
  %768 = getelementptr inbounds %"class.tflite::RuntimeShape", %"class.tflite::RuntimeShape"* %32, i64 0, i32 1
  %769 = icmp sgt i32 %693, 5
  br i1 %769, label %770, label %773

770:                                              ; preds = %765
  %771 = getelementptr inbounds %union.anon, %union.anon* %768, i64 0, i32 0
  %772 = load i32*, i32** %771, align 8
  br label %776

773:                                              ; preds = %765
  %774 = bitcast %union.anon* %768 to i32*
  %775 = icmp sgt i32 %693, 0
  br i1 %775, label %776, label %880

776:                                              ; preds = %773, %770
  %777 = phi i32* [ %772, %770 ], [ %774, %773 ]
  %778 = zext i32 %693 to i64
  %779 = icmp ult i32 %693, 8
  br i1 %779, label %865, label %780

780:                                              ; preds = %776
  %781 = and i64 %778, 4294967288
  %782 = add nsw i64 %781, -8
  %783 = lshr exact i64 %782, 3
  %784 = add nuw nsw i64 %783, 1
  %785 = and i64 %784, 3
  %786 = icmp ult i64 %782, 24
  br i1 %786, label %832, label %787

787:                                              ; preds = %780
  %788 = sub nsw i64 %784, %785
  br label %789

789:                                              ; preds = %789, %787
  %790 = phi i64 [ 0, %787 ], [ %829, %789 ]
  %791 = phi <4 x i32> [ <i32 1, i32 1, i32 1, i32 1>, %787 ], [ %827, %789 ]
  %792 = phi <4 x i32> [ <i32 1, i32 1, i32 1, i32 1>, %787 ], [ %828, %789 ]
  %793 = phi i64 [ %788, %787 ], [ %830, %789 ]
  %794 = getelementptr inbounds i32, i32* %777, i64 %790
  %795 = bitcast i32* %794 to <4 x i32>*
  %796 = load <4 x i32>, <4 x i32>* %795, align 4
  %797 = getelementptr inbounds i32, i32* %794, i64 4
  %798 = bitcast i32* %797 to <4 x i32>*
  %799 = load <4 x i32>, <4 x i32>* %798, align 4
  %800 = mul nsw <4 x i32> %796, %791
  %801 = mul nsw <4 x i32> %799, %792
  %802 = or i64 %790, 8
  %803 = getelementptr inbounds i32, i32* %777, i64 %802
  %804 = bitcast i32* %803 to <4 x i32>*
  %805 = load <4 x i32>, <4 x i32>* %804, align 4
  %806 = getelementptr inbounds i32, i32* %803, i64 4
  %807 = bitcast i32* %806 to <4 x i32>*
  %808 = load <4 x i32>, <4 x i32>* %807, align 4
  %809 = mul nsw <4 x i32> %805, %800
  %810 = mul nsw <4 x i32> %808, %801
  %811 = or i64 %790, 16
  %812 = getelementptr inbounds i32, i32* %777, i64 %811
  %813 = bitcast i32* %812 to <4 x i32>*
  %814 = load <4 x i32>, <4 x i32>* %813, align 4
  %815 = getelementptr inbounds i32, i32* %812, i64 4
  %816 = bitcast i32* %815 to <4 x i32>*
  %817 = load <4 x i32>, <4 x i32>* %816, align 4
  %818 = mul nsw <4 x i32> %814, %809
  %819 = mul nsw <4 x i32> %817, %810
  %820 = or i64 %790, 24
  %821 = getelementptr inbounds i32, i32* %777, i64 %820
  %822 = bitcast i32* %821 to <4 x i32>*
  %823 = load <4 x i32>, <4 x i32>* %822, align 4
  %824 = getelementptr inbounds i32, i32* %821, i64 4
  %825 = bitcast i32* %824 to <4 x i32>*
  %826 = load <4 x i32>, <4 x i32>* %825, align 4
  %827 = mul nsw <4 x i32> %823, %818
  %828 = mul nsw <4 x i32> %826, %819
  %829 = add i64 %790, 32
  %830 = add i64 %793, -4
  %831 = icmp eq i64 %830, 0
  br i1 %831, label %832, label %789, !llvm.loop !55

832:                                              ; preds = %789, %780
  %833 = phi <4 x i32> [ undef, %780 ], [ %827, %789 ]
  %834 = phi <4 x i32> [ undef, %780 ], [ %828, %789 ]
  %835 = phi i64 [ 0, %780 ], [ %829, %789 ]
  %836 = phi <4 x i32> [ <i32 1, i32 1, i32 1, i32 1>, %780 ], [ %827, %789 ]
  %837 = phi <4 x i32> [ <i32 1, i32 1, i32 1, i32 1>, %780 ], [ %828, %789 ]
  %838 = icmp eq i64 %785, 0
  br i1 %838, label %855, label %839

839:                                              ; preds = %832, %839
  %840 = phi i64 [ %852, %839 ], [ %835, %832 ]
  %841 = phi <4 x i32> [ %850, %839 ], [ %836, %832 ]
  %842 = phi <4 x i32> [ %851, %839 ], [ %837, %832 ]
  %843 = phi i64 [ %853, %839 ], [ %785, %832 ]
  %844 = getelementptr inbounds i32, i32* %777, i64 %840
  %845 = bitcast i32* %844 to <4 x i32>*
  %846 = load <4 x i32>, <4 x i32>* %845, align 4
  %847 = getelementptr inbounds i32, i32* %844, i64 4
  %848 = bitcast i32* %847 to <4 x i32>*
  %849 = load <4 x i32>, <4 x i32>* %848, align 4
  %850 = mul nsw <4 x i32> %846, %841
  %851 = mul nsw <4 x i32> %849, %842
  %852 = add i64 %840, 8
  %853 = add i64 %843, -1
  %854 = icmp eq i64 %853, 0
  br i1 %854, label %855, label %839, !llvm.loop !56

855:                                              ; preds = %839, %832
  %856 = phi <4 x i32> [ %833, %832 ], [ %850, %839 ]
  %857 = phi <4 x i32> [ %834, %832 ], [ %851, %839 ]
  %858 = mul <4 x i32> %857, %856
  %859 = shufflevector <4 x i32> %858, <4 x i32> undef, <4 x i32> <i32 2, i32 3, i32 undef, i32 undef>
  %860 = mul <4 x i32> %858, %859
  %861 = shufflevector <4 x i32> %860, <4 x i32> undef, <4 x i32> <i32 1, i32 undef, i32 undef, i32 undef>
  %862 = mul <4 x i32> %860, %861
  %863 = extractelement <4 x i32> %862, i32 0
  %864 = icmp eq i64 %781, %778
  br i1 %864, label %876, label %865

865:                                              ; preds = %855, %776
  %866 = phi i64 [ 0, %776 ], [ %781, %855 ]
  %867 = phi i32 [ 1, %776 ], [ %863, %855 ]
  br label %868

868:                                              ; preds = %865, %868
  %869 = phi i64 [ %874, %868 ], [ %866, %865 ]
  %870 = phi i32 [ %873, %868 ], [ %867, %865 ]
  %871 = getelementptr inbounds i32, i32* %777, i64 %869
  %872 = load i32, i32* %871, align 4
  %873 = mul nsw i32 %872, %870
  %874 = add nuw nsw i64 %869, 1
  %875 = icmp eq i64 %874, %778
  br i1 %875, label %876, label %868, !llvm.loop !57

876:                                              ; preds = %868, %855
  %877 = phi i32 [ %863, %855 ], [ %873, %868 ]
  %878 = sext i32 %877 to i64
  %879 = icmp sgt i32 %877, 0
  br i1 %879, label %880, label %1014

880:                                              ; preds = %876, %773
  %881 = phi i64 [ %878, %876 ], [ 1, %773 ]
  %882 = icmp ult i64 %881, 8
  br i1 %882, label %978, label %883

883:                                              ; preds = %880
  %884 = getelementptr i8, i8* %767, i64 %881
  %885 = getelementptr float, float* %732, i64 %881
  %886 = bitcast float* %885 to i8*
  %887 = getelementptr float, float* %695, i64 %881
  %888 = bitcast float* %887 to i8*
  %889 = icmp ult i8* %767, %886
  %890 = icmp ult i8* %731, %884
  %891 = and i1 %889, %890
  %892 = icmp ult i8* %767, %888
  %893 = icmp ult i8* %694, %884
  %894 = and i1 %892, %893
  %895 = or i1 %891, %894
  br i1 %895, label %978, label %896

896:                                              ; preds = %883
  %897 = and i64 %881, -8
  %898 = add nsw i64 %897, -8
  %899 = lshr exact i64 %898, 3
  %900 = add nuw nsw i64 %899, 1
  %901 = and i64 %900, 1
  %902 = icmp eq i64 %898, 0
  br i1 %902, label %952, label %903

903:                                              ; preds = %896
  %904 = sub nuw nsw i64 %900, %901
  br label %905

905:                                              ; preds = %905, %903
  %906 = phi i64 [ 0, %903 ], [ %949, %905 ]
  %907 = phi i64 [ %904, %903 ], [ %950, %905 ]
  %908 = getelementptr inbounds float, float* %695, i64 %906
  %909 = bitcast float* %908 to <4 x float>*
  %910 = load <4 x float>, <4 x float>* %909, align 4, !alias.scope !58
  %911 = getelementptr inbounds float, float* %908, i64 4
  %912 = bitcast float* %911 to <4 x float>*
  %913 = load <4 x float>, <4 x float>* %912, align 4, !alias.scope !58
  %914 = getelementptr inbounds float, float* %732, i64 %906
  %915 = bitcast float* %914 to <4 x float>*
  %916 = load <4 x float>, <4 x float>* %915, align 4, !alias.scope !61
  %917 = getelementptr inbounds float, float* %914, i64 4
  %918 = bitcast float* %917 to <4 x float>*
  %919 = load <4 x float>, <4 x float>* %918, align 4, !alias.scope !61
  %920 = fcmp oeq <4 x float> %910, %916
  %921 = fcmp oeq <4 x float> %913, %919
  %922 = getelementptr inbounds i8, i8* %767, i64 %906
  %923 = zext <4 x i1> %920 to <4 x i8>
  %924 = zext <4 x i1> %921 to <4 x i8>
  %925 = bitcast i8* %922 to <4 x i8>*
  store <4 x i8> %923, <4 x i8>* %925, align 1, !alias.scope !63, !noalias !65
  %926 = getelementptr inbounds i8, i8* %922, i64 4
  %927 = bitcast i8* %926 to <4 x i8>*
  store <4 x i8> %924, <4 x i8>* %927, align 1, !alias.scope !63, !noalias !65
  %928 = or i64 %906, 8
  %929 = getelementptr inbounds float, float* %695, i64 %928
  %930 = bitcast float* %929 to <4 x float>*
  %931 = load <4 x float>, <4 x float>* %930, align 4, !alias.scope !58
  %932 = getelementptr inbounds float, float* %929, i64 4
  %933 = bitcast float* %932 to <4 x float>*
  %934 = load <4 x float>, <4 x float>* %933, align 4, !alias.scope !58
  %935 = getelementptr inbounds float, float* %732, i64 %928
  %936 = bitcast float* %935 to <4 x float>*
  %937 = load <4 x float>, <4 x float>* %936, align 4, !alias.scope !61
  %938 = getelementptr inbounds float, float* %935, i64 4
  %939 = bitcast float* %938 to <4 x float>*
  %940 = load <4 x float>, <4 x float>* %939, align 4, !alias.scope !61
  %941 = fcmp oeq <4 x float> %931, %937
  %942 = fcmp oeq <4 x float> %934, %940
  %943 = getelementptr inbounds i8, i8* %767, i64 %928
  %944 = zext <4 x i1> %941 to <4 x i8>
  %945 = zext <4 x i1> %942 to <4 x i8>
  %946 = bitcast i8* %943 to <4 x i8>*
  store <4 x i8> %944, <4 x i8>* %946, align 1, !alias.scope !63, !noalias !65
  %947 = getelementptr inbounds i8, i8* %943, i64 4
  %948 = bitcast i8* %947 to <4 x i8>*
  store <4 x i8> %945, <4 x i8>* %948, align 1, !alias.scope !63, !noalias !65
  %949 = add i64 %906, 16
  %950 = add i64 %907, -2
  %951 = icmp eq i64 %950, 0
  br i1 %951, label %952, label %905, !llvm.loop !66

952:                                              ; preds = %905, %896
  %953 = phi i64 [ 0, %896 ], [ %949, %905 ]
  %954 = icmp eq i64 %901, 0
  br i1 %954, label %976, label %955

955:                                              ; preds = %952
  %956 = getelementptr inbounds float, float* %695, i64 %953
  %957 = bitcast float* %956 to <4 x float>*
  %958 = load <4 x float>, <4 x float>* %957, align 4, !alias.scope !58
  %959 = getelementptr inbounds float, float* %956, i64 4
  %960 = bitcast float* %959 to <4 x float>*
  %961 = load <4 x float>, <4 x float>* %960, align 4, !alias.scope !58
  %962 = getelementptr inbounds float, float* %732, i64 %953
  %963 = bitcast float* %962 to <4 x float>*
  %964 = load <4 x float>, <4 x float>* %963, align 4, !alias.scope !61
  %965 = getelementptr inbounds float, float* %962, i64 4
  %966 = bitcast float* %965 to <4 x float>*
  %967 = load <4 x float>, <4 x float>* %966, align 4, !alias.scope !61
  %968 = fcmp oeq <4 x float> %958, %964
  %969 = fcmp oeq <4 x float> %961, %967
  %970 = getelementptr inbounds i8, i8* %767, i64 %953
  %971 = zext <4 x i1> %968 to <4 x i8>
  %972 = zext <4 x i1> %969 to <4 x i8>
  %973 = bitcast i8* %970 to <4 x i8>*
  store <4 x i8> %971, <4 x i8>* %973, align 1, !alias.scope !63, !noalias !65
  %974 = getelementptr inbounds i8, i8* %970, i64 4
  %975 = bitcast i8* %974 to <4 x i8>*
  store <4 x i8> %972, <4 x i8>* %975, align 1, !alias.scope !63, !noalias !65
  br label %976

976:                                              ; preds = %952, %955
  %977 = icmp eq i64 %881, %897
  br i1 %977, label %1014, label %978

978:                                              ; preds = %976, %883, %880
  %979 = phi i64 [ 0, %883 ], [ 0, %880 ], [ %897, %976 ]
  %980 = and i64 %881, 1
  %981 = icmp eq i64 %980, 0
  br i1 %981, label %991, label %982

982:                                              ; preds = %978
  %983 = getelementptr inbounds float, float* %695, i64 %979
  %984 = load float, float* %983, align 4
  %985 = getelementptr inbounds float, float* %732, i64 %979
  %986 = load float, float* %985, align 4
  %987 = fcmp oeq float %984, %986
  %988 = getelementptr inbounds i8, i8* %767, i64 %979
  %989 = zext i1 %987 to i8
  store i8 %989, i8* %988, align 1
  %990 = or i64 %979, 1
  br label %991

991:                                              ; preds = %978, %982
  %992 = phi i64 [ %979, %978 ], [ %990, %982 ]
  %993 = or i64 %979, 1
  %994 = icmp eq i64 %881, %993
  br i1 %994, label %1014, label %995

995:                                              ; preds = %991, %995
  %996 = phi i64 [ %1012, %995 ], [ %992, %991 ]
  %997 = getelementptr inbounds float, float* %695, i64 %996
  %998 = load float, float* %997, align 4
  %999 = getelementptr inbounds float, float* %732, i64 %996
  %1000 = load float, float* %999, align 4
  %1001 = fcmp oeq float %998, %1000
  %1002 = getelementptr inbounds i8, i8* %767, i64 %996
  %1003 = zext i1 %1001 to i8
  store i8 %1003, i8* %1002, align 1
  %1004 = add nuw nsw i64 %996, 1
  %1005 = getelementptr inbounds float, float* %695, i64 %1004
  %1006 = load float, float* %1005, align 4
  %1007 = getelementptr inbounds float, float* %732, i64 %1004
  %1008 = load float, float* %1007, align 4
  %1009 = fcmp oeq float %1006, %1008
  %1010 = getelementptr inbounds i8, i8* %767, i64 %1004
  %1011 = zext i1 %1009 to i8
  store i8 %1011, i8* %1010, align 1
  %1012 = add nuw nsw i64 %996, 2
  %1013 = icmp eq i64 %1012, %881
  br i1 %1013, label %1014, label %995, !llvm.loop !67

1014:                                             ; preds = %991, %995, %976, %876
  %1015 = icmp sgt i32 %766, 5
  br i1 %1015, label %1016, label %1022

1016:                                             ; preds = %1014
  %1017 = getelementptr inbounds %"class.tflite::RuntimeShape", %"class.tflite::RuntimeShape"* %34, i64 0, i32 1, i32 0
  %1018 = load i32*, i32** %1017, align 8
  %1019 = icmp eq i32* %1018, null
  br i1 %1019, label %1022, label %1020

1020:                                             ; preds = %1016
  %1021 = bitcast i32* %1018 to i8*
  tail call void @_ZdaPv(i8* %1021) #9
  br label %1022

1022:                                             ; preds = %1020, %1016, %1014
  call void @llvm.lifetime.end.p0i8(i64 32, i8* nonnull %733) #8
  %1023 = icmp sgt i32 %730, 5
  br i1 %1023, label %1024, label %1030

1024:                                             ; preds = %1022
  %1025 = getelementptr inbounds %"class.tflite::RuntimeShape", %"class.tflite::RuntimeShape"* %33, i64 0, i32 1, i32 0
  %1026 = load i32*, i32** %1025, align 8
  %1027 = icmp eq i32* %1026, null
  br i1 %1027, label %1030, label %1028

1028:                                             ; preds = %1024
  %1029 = bitcast i32* %1026 to i8*
  tail call void @_ZdaPv(i8* %1029) #9
  br label %1030

1030:                                             ; preds = %1028, %1024, %1022
  call void @llvm.lifetime.end.p0i8(i64 32, i8* nonnull %696) #8
  br i1 %769, label %1031, label %1068

1031:                                             ; preds = %1030
  %1032 = getelementptr inbounds %"class.tflite::RuntimeShape", %"class.tflite::RuntimeShape"* %32, i64 0, i32 1, i32 0
  %1033 = load i32*, i32** %1032, align 8
  %1034 = icmp eq i32* %1033, null
  br i1 %1034, label %1068, label %1035

1035:                                             ; preds = %1031
  %1036 = bitcast i32* %1033 to i8*
  tail call void @_ZdaPv(i8* %1036) #9
  br label %1068

1037:                                             ; preds = %650, %628
  %1038 = phi i8* [ %657, %650 ], [ null, %628 ]
  call void @_ZN6tflite13reference_ops29BroadcastComparison4DSlowImplIfXadL_ZNS0_7EqualFnIfEEbT_S3_EEEEvRKNS_16ComparisonParamsERKNS_12RuntimeShapeEPKS3_S9_SB_S9_Pb(%"struct.tflite::ComparisonParams"* nonnull dereferenceable(32) %28, %"class.tflite::RuntimeShape"* nonnull dereferenceable(32) %29, float* %591, %"class.tflite::RuntimeShape"* nonnull dereferenceable(32) %30, float* %625, %"class.tflite::RuntimeShape"* nonnull dereferenceable(32) %31, i8* %1038) #8
  %1039 = getelementptr inbounds %"class.tflite::RuntimeShape", %"class.tflite::RuntimeShape"* %31, i64 0, i32 0
  %1040 = load i32, i32* %1039, align 8
  %1041 = icmp sgt i32 %1040, 5
  br i1 %1041, label %1042, label %1048

1042:                                             ; preds = %1037
  %1043 = getelementptr inbounds %"class.tflite::RuntimeShape", %"class.tflite::RuntimeShape"* %31, i64 0, i32 1, i32 0
  %1044 = load i32*, i32** %1043, align 8
  %1045 = icmp eq i32* %1044, null
  br i1 %1045, label %1048, label %1046

1046:                                             ; preds = %1042
  %1047 = bitcast i32* %1044 to i8*
  call void @_ZdaPv(i8* %1047) #9
  br label %1048

1048:                                             ; preds = %1046, %1042, %1037
  call void @llvm.lifetime.end.p0i8(i64 32, i8* nonnull %626) #8
  %1049 = getelementptr inbounds %"class.tflite::RuntimeShape", %"class.tflite::RuntimeShape"* %30, i64 0, i32 0
  %1050 = load i32, i32* %1049, align 8
  %1051 = icmp sgt i32 %1050, 5
  br i1 %1051, label %1052, label %1058

1052:                                             ; preds = %1048
  %1053 = getelementptr inbounds %"class.tflite::RuntimeShape", %"class.tflite::RuntimeShape"* %30, i64 0, i32 1, i32 0
  %1054 = load i32*, i32** %1053, align 8
  %1055 = icmp eq i32* %1054, null
  br i1 %1055, label %1058, label %1056

1056:                                             ; preds = %1052
  %1057 = bitcast i32* %1054 to i8*
  call void @_ZdaPv(i8* %1057) #9
  br label %1058

1058:                                             ; preds = %1056, %1052, %1048
  call void @llvm.lifetime.end.p0i8(i64 32, i8* nonnull %592) #8
  %1059 = getelementptr inbounds %"class.tflite::RuntimeShape", %"class.tflite::RuntimeShape"* %29, i64 0, i32 0
  %1060 = load i32, i32* %1059, align 8
  %1061 = icmp sgt i32 %1060, 5
  br i1 %1061, label %1062, label %1068

1062:                                             ; preds = %1058
  %1063 = getelementptr inbounds %"class.tflite::RuntimeShape", %"class.tflite::RuntimeShape"* %29, i64 0, i32 1, i32 0
  %1064 = load i32*, i32** %1063, align 8
  %1065 = icmp eq i32* %1064, null
  br i1 %1065, label %1068, label %1066

1066:                                             ; preds = %1062
  %1067 = bitcast i32* %1064 to i8*
  call void @_ZdaPv(i8* %1067) #9
  br label %1068

1068:                                             ; preds = %1058, %1062, %1066, %1030, %1031, %1035
  %1069 = phi i8* [ %659, %1035 ], [ %659, %1031 ], [ %659, %1030 ], [ %558, %1066 ], [ %558, %1062 ], [ %558, %1058 ]
  call void @llvm.lifetime.end.p0i8(i64 32, i8* nonnull %1069) #8
  call void @llvm.lifetime.end.p0i8(i64 32, i8* nonnull %556) #8
  br label %2967

1070:                                             ; preds = %85
  %1071 = bitcast %"struct.tflite::ComparisonParams"* %21 to i8*
  call void @llvm.lifetime.start.p0i8(i64 32, i8* nonnull %1071) #8
  call void @llvm.memset.p0i8.i64(i8* nonnull align 4 %1071, i8 -86, i64 32, i1 false) #8
  br i1 %87, label %1171, label %1072

1072:                                             ; preds = %1070
  %1073 = bitcast %"class.tflite::RuntimeShape"* %22 to i8*
  call void @llvm.lifetime.start.p0i8(i64 32, i8* nonnull %1073) #8
  %1074 = icmp eq %struct.TfLiteTensor* %64, null
  br i1 %1074, label %1075, label %1077

1075:                                             ; preds = %1072
  %1076 = getelementptr inbounds %"class.tflite::RuntimeShape", %"class.tflite::RuntimeShape"* %22, i64 0, i32 0
  store i32 0, i32* %1076, align 8, !alias.scope !68
  br label %1104

1077:                                             ; preds = %1072
  %1078 = getelementptr inbounds %struct.TfLiteTensor, %struct.TfLiteTensor* %64, i64 0, i32 2
  %1079 = load %struct.TfLiteIntArray*, %struct.TfLiteIntArray** %1078, align 8, !noalias !68
  %1080 = getelementptr inbounds %struct.TfLiteIntArray, %struct.TfLiteIntArray* %1079, i64 0, i32 0
  %1081 = load i32, i32* %1080, align 4, !noalias !68
  %1082 = getelementptr inbounds %struct.TfLiteIntArray, %struct.TfLiteIntArray* %1079, i64 0, i32 1, i64 0
  %1083 = getelementptr inbounds %"class.tflite::RuntimeShape", %"class.tflite::RuntimeShape"* %22, i64 0, i32 0
  store i32 %1081, i32* %1083, align 8, !alias.scope !68
  %1084 = icmp sgt i32 %1081, 5
  br i1 %1084, label %1085, label %1092

1085:                                             ; preds = %1077
  %1086 = sext i32 %1081 to i64
  %1087 = shl nsw i64 %1086, 2
  %1088 = tail call i8* @_Znam(i64 %1087) #9, !noalias !68
  %1089 = getelementptr inbounds %"class.tflite::RuntimeShape", %"class.tflite::RuntimeShape"* %22, i64 0, i32 1, i32 0
  %1090 = bitcast i32** %1089 to i8**
  store i8* %1088, i8** %1090, align 8, !alias.scope !68
  %1091 = bitcast i8* %1088 to i32*
  br label %1097

1092:                                             ; preds = %1077
  %1093 = getelementptr inbounds %"class.tflite::RuntimeShape", %"class.tflite::RuntimeShape"* %22, i64 0, i32 1
  %1094 = bitcast %union.anon* %1093 to i32*
  %1095 = sext i32 %1081 to i64
  %1096 = shl nsw i64 %1095, 2
  br label %1097

1097:                                             ; preds = %1092, %1085
  %1098 = phi i64 [ %1087, %1085 ], [ %1096, %1092 ]
  %1099 = phi i32* [ %1091, %1085 ], [ %1094, %1092 ]
  %1100 = bitcast i32* %1099 to i8*
  %1101 = bitcast i32* %1082 to i8*
  call void @llvm.memcpy.p0i8.p0i8.i64(i8* align 4 %1100, i8* align 4 %1101, i64 %1098, i1 false) #8
  %1102 = getelementptr inbounds %struct.TfLiteTensor, %struct.TfLiteTensor* %64, i64 0, i32 1, i32 0
  %1103 = load i32*, i32** %1102, align 8
  br label %1104

1104:                                             ; preds = %1097, %1075
  %1105 = phi i32* [ %1103, %1097 ], [ null, %1075 ]
  %1106 = bitcast %"class.tflite::RuntimeShape"* %23 to i8*
  call void @llvm.lifetime.start.p0i8(i64 32, i8* nonnull %1106) #8
  %1107 = icmp eq %struct.TfLiteTensor* %74, null
  br i1 %1107, label %1108, label %1110

1108:                                             ; preds = %1104
  %1109 = getelementptr inbounds %"class.tflite::RuntimeShape", %"class.tflite::RuntimeShape"* %23, i64 0, i32 0
  store i32 0, i32* %1109, align 8, !alias.scope !71
  br label %1137

1110:                                             ; preds = %1104
  %1111 = getelementptr inbounds %struct.TfLiteTensor, %struct.TfLiteTensor* %74, i64 0, i32 2
  %1112 = load %struct.TfLiteIntArray*, %struct.TfLiteIntArray** %1111, align 8, !noalias !71
  %1113 = getelementptr inbounds %struct.TfLiteIntArray, %struct.TfLiteIntArray* %1112, i64 0, i32 0
  %1114 = load i32, i32* %1113, align 4, !noalias !71
  %1115 = getelementptr inbounds %struct.TfLiteIntArray, %struct.TfLiteIntArray* %1112, i64 0, i32 1, i64 0
  %1116 = getelementptr inbounds %"class.tflite::RuntimeShape", %"class.tflite::RuntimeShape"* %23, i64 0, i32 0
  store i32 %1114, i32* %1116, align 8, !alias.scope !71
  %1117 = icmp sgt i32 %1114, 5
  br i1 %1117, label %1118, label %1125

1118:                                             ; preds = %1110
  %1119 = sext i32 %1114 to i64
  %1120 = shl nsw i64 %1119, 2
  %1121 = tail call i8* @_Znam(i64 %1120) #9, !noalias !71
  %1122 = getelementptr inbounds %"class.tflite::RuntimeShape", %"class.tflite::RuntimeShape"* %23, i64 0, i32 1, i32 0
  %1123 = bitcast i32** %1122 to i8**
  store i8* %1121, i8** %1123, align 8, !alias.scope !71
  %1124 = bitcast i8* %1121 to i32*
  br label %1130

1125:                                             ; preds = %1110
  %1126 = getelementptr inbounds %"class.tflite::RuntimeShape", %"class.tflite::RuntimeShape"* %23, i64 0, i32 1
  %1127 = bitcast %union.anon* %1126 to i32*
  %1128 = sext i32 %1114 to i64
  %1129 = shl nsw i64 %1128, 2
  br label %1130

1130:                                             ; preds = %1125, %1118
  %1131 = phi i64 [ %1120, %1118 ], [ %1129, %1125 ]
  %1132 = phi i32* [ %1124, %1118 ], [ %1127, %1125 ]
  %1133 = bitcast i32* %1132 to i8*
  %1134 = bitcast i32* %1115 to i8*
  call void @llvm.memcpy.p0i8.p0i8.i64(i8* align 4 %1133, i8* align 4 %1134, i64 %1131, i1 false) #8
  %1135 = getelementptr inbounds %struct.TfLiteTensor, %struct.TfLiteTensor* %74, i64 0, i32 1, i32 0
  %1136 = load i32*, i32** %1135, align 8
  br label %1137

1137:                                             ; preds = %1130, %1108
  %1138 = phi i32* [ %1136, %1130 ], [ null, %1108 ]
  %1139 = bitcast %"class.tflite::RuntimeShape"* %24 to i8*
  call void @llvm.lifetime.start.p0i8(i64 32, i8* nonnull %1139) #8
  %1140 = icmp eq %struct.TfLiteTensor* %86, null
  br i1 %1140, label %1141, label %1143

1141:                                             ; preds = %1137
  %1142 = getelementptr inbounds %"class.tflite::RuntimeShape", %"class.tflite::RuntimeShape"* %24, i64 0, i32 0
  store i32 0, i32* %1142, align 8, !alias.scope !74
  br label %1548

1143:                                             ; preds = %1137
  %1144 = getelementptr inbounds %struct.TfLiteTensor, %struct.TfLiteTensor* %86, i64 0, i32 2
  %1145 = load %struct.TfLiteIntArray*, %struct.TfLiteIntArray** %1144, align 8, !noalias !74
  %1146 = getelementptr inbounds %struct.TfLiteIntArray, %struct.TfLiteIntArray* %1145, i64 0, i32 0
  %1147 = load i32, i32* %1146, align 4, !noalias !74
  %1148 = getelementptr inbounds %struct.TfLiteIntArray, %struct.TfLiteIntArray* %1145, i64 0, i32 1, i64 0
  %1149 = getelementptr inbounds %"class.tflite::RuntimeShape", %"class.tflite::RuntimeShape"* %24, i64 0, i32 0
  store i32 %1147, i32* %1149, align 8, !alias.scope !74
  %1150 = icmp sgt i32 %1147, 5
  br i1 %1150, label %1151, label %1158

1151:                                             ; preds = %1143
  %1152 = sext i32 %1147 to i64
  %1153 = shl nsw i64 %1152, 2
  %1154 = tail call i8* @_Znam(i64 %1153) #9, !noalias !74
  %1155 = getelementptr inbounds %"class.tflite::RuntimeShape", %"class.tflite::RuntimeShape"* %24, i64 0, i32 1, i32 0
  %1156 = bitcast i32** %1155 to i8**
  store i8* %1154, i8** %1156, align 8, !alias.scope !74
  %1157 = bitcast i8* %1154 to i32*
  br label %1163

1158:                                             ; preds = %1143
  %1159 = getelementptr inbounds %"class.tflite::RuntimeShape", %"class.tflite::RuntimeShape"* %24, i64 0, i32 1
  %1160 = bitcast %union.anon* %1159 to i32*
  %1161 = sext i32 %1147 to i64
  %1162 = shl nsw i64 %1161, 2
  br label %1163

1163:                                             ; preds = %1158, %1151
  %1164 = phi i64 [ %1153, %1151 ], [ %1162, %1158 ]
  %1165 = phi i32* [ %1157, %1151 ], [ %1160, %1158 ]
  %1166 = bitcast i32* %1165 to i8*
  %1167 = bitcast i32* %1148 to i8*
  call void @llvm.memcpy.p0i8.p0i8.i64(i8* align 4 %1166, i8* align 4 %1167, i64 %1164, i1 false) #8
  %1168 = getelementptr inbounds %struct.TfLiteTensor, %struct.TfLiteTensor* %86, i64 0, i32 1
  %1169 = bitcast %union.TfLitePtrUnion* %1168 to i8**
  %1170 = load i8*, i8** %1169, align 8
  br label %1548

1171:                                             ; preds = %1070
  %1172 = bitcast %"class.tflite::RuntimeShape"* %25 to i8*
  call void @llvm.lifetime.start.p0i8(i64 32, i8* nonnull %1172) #8
  %1173 = icmp eq %struct.TfLiteTensor* %64, null
  br i1 %1173, label %1174, label %1176

1174:                                             ; preds = %1171
  %1175 = getelementptr inbounds %"class.tflite::RuntimeShape", %"class.tflite::RuntimeShape"* %25, i64 0, i32 0
  store i32 0, i32* %1175, align 8, !alias.scope !77
  br label %1204

1176:                                             ; preds = %1171
  %1177 = getelementptr inbounds %struct.TfLiteTensor, %struct.TfLiteTensor* %64, i64 0, i32 2
  %1178 = load %struct.TfLiteIntArray*, %struct.TfLiteIntArray** %1177, align 8, !noalias !77
  %1179 = getelementptr inbounds %struct.TfLiteIntArray, %struct.TfLiteIntArray* %1178, i64 0, i32 0
  %1180 = load i32, i32* %1179, align 4, !noalias !77
  %1181 = getelementptr inbounds %struct.TfLiteIntArray, %struct.TfLiteIntArray* %1178, i64 0, i32 1, i64 0
  %1182 = getelementptr inbounds %"class.tflite::RuntimeShape", %"class.tflite::RuntimeShape"* %25, i64 0, i32 0
  store i32 %1180, i32* %1182, align 8, !alias.scope !77
  %1183 = icmp sgt i32 %1180, 5
  br i1 %1183, label %1184, label %1191

1184:                                             ; preds = %1176
  %1185 = sext i32 %1180 to i64
  %1186 = shl nsw i64 %1185, 2
  %1187 = tail call i8* @_Znam(i64 %1186) #9, !noalias !77
  %1188 = getelementptr inbounds %"class.tflite::RuntimeShape", %"class.tflite::RuntimeShape"* %25, i64 0, i32 1, i32 0
  %1189 = bitcast i32** %1188 to i8**
  store i8* %1187, i8** %1189, align 8, !alias.scope !77
  %1190 = bitcast i8* %1187 to i32*
  br label %1196

1191:                                             ; preds = %1176
  %1192 = getelementptr inbounds %"class.tflite::RuntimeShape", %"class.tflite::RuntimeShape"* %25, i64 0, i32 1
  %1193 = bitcast %union.anon* %1192 to i32*
  %1194 = sext i32 %1180 to i64
  %1195 = shl nsw i64 %1194, 2
  br label %1196

1196:                                             ; preds = %1191, %1184
  %1197 = phi i64 [ %1186, %1184 ], [ %1195, %1191 ]
  %1198 = phi i32* [ %1190, %1184 ], [ %1193, %1191 ]
  %1199 = bitcast i32* %1198 to i8*
  %1200 = bitcast i32* %1181 to i8*
  call void @llvm.memcpy.p0i8.p0i8.i64(i8* align 4 %1199, i8* align 4 %1200, i64 %1197, i1 false) #8
  %1201 = getelementptr inbounds %struct.TfLiteTensor, %struct.TfLiteTensor* %64, i64 0, i32 1, i32 0
  %1202 = load i32*, i32** %1201, align 8
  %1203 = bitcast i32* %1202 to i8*
  br label %1204

1204:                                             ; preds = %1196, %1174
  %1205 = phi i32 [ %1180, %1196 ], [ 0, %1174 ]
  %1206 = phi i8* [ %1203, %1196 ], [ null, %1174 ]
  %1207 = phi i32* [ %1202, %1196 ], [ null, %1174 ]
  %1208 = bitcast %"class.tflite::RuntimeShape"* %26 to i8*
  call void @llvm.lifetime.start.p0i8(i64 32, i8* nonnull %1208) #8
  %1209 = icmp eq %struct.TfLiteTensor* %74, null
  br i1 %1209, label %1210, label %1212

1210:                                             ; preds = %1204
  %1211 = getelementptr inbounds %"class.tflite::RuntimeShape", %"class.tflite::RuntimeShape"* %26, i64 0, i32 0
  store i32 0, i32* %1211, align 8, !alias.scope !80
  br label %1240

1212:                                             ; preds = %1204
  %1213 = getelementptr inbounds %struct.TfLiteTensor, %struct.TfLiteTensor* %74, i64 0, i32 2
  %1214 = load %struct.TfLiteIntArray*, %struct.TfLiteIntArray** %1213, align 8, !noalias !80
  %1215 = getelementptr inbounds %struct.TfLiteIntArray, %struct.TfLiteIntArray* %1214, i64 0, i32 0
  %1216 = load i32, i32* %1215, align 4, !noalias !80
  %1217 = getelementptr inbounds %struct.TfLiteIntArray, %struct.TfLiteIntArray* %1214, i64 0, i32 1, i64 0
  %1218 = getelementptr inbounds %"class.tflite::RuntimeShape", %"class.tflite::RuntimeShape"* %26, i64 0, i32 0
  store i32 %1216, i32* %1218, align 8, !alias.scope !80
  %1219 = icmp sgt i32 %1216, 5
  br i1 %1219, label %1220, label %1227

1220:                                             ; preds = %1212
  %1221 = sext i32 %1216 to i64
  %1222 = shl nsw i64 %1221, 2
  %1223 = tail call i8* @_Znam(i64 %1222) #9, !noalias !80
  %1224 = getelementptr inbounds %"class.tflite::RuntimeShape", %"class.tflite::RuntimeShape"* %26, i64 0, i32 1, i32 0
  %1225 = bitcast i32** %1224 to i8**
  store i8* %1223, i8** %1225, align 8, !alias.scope !80
  %1226 = bitcast i8* %1223 to i32*
  br label %1232

1227:                                             ; preds = %1212
  %1228 = getelementptr inbounds %"class.tflite::RuntimeShape", %"class.tflite::RuntimeShape"* %26, i64 0, i32 1
  %1229 = bitcast %union.anon* %1228 to i32*
  %1230 = sext i32 %1216 to i64
  %1231 = shl nsw i64 %1230, 2
  br label %1232

1232:                                             ; preds = %1227, %1220
  %1233 = phi i64 [ %1222, %1220 ], [ %1231, %1227 ]
  %1234 = phi i32* [ %1226, %1220 ], [ %1229, %1227 ]
  %1235 = bitcast i32* %1234 to i8*
  %1236 = bitcast i32* %1217 to i8*
  call void @llvm.memcpy.p0i8.p0i8.i64(i8* align 4 %1235, i8* align 4 %1236, i64 %1233, i1 false) #8
  %1237 = getelementptr inbounds %struct.TfLiteTensor, %struct.TfLiteTensor* %74, i64 0, i32 1, i32 0
  %1238 = load i32*, i32** %1237, align 8
  %1239 = bitcast i32* %1238 to i8*
  br label %1240

1240:                                             ; preds = %1232, %1210
  %1241 = phi i32 [ %1216, %1232 ], [ 0, %1210 ]
  %1242 = phi i8* [ %1239, %1232 ], [ null, %1210 ]
  %1243 = phi i32* [ %1238, %1232 ], [ null, %1210 ]
  %1244 = bitcast %"class.tflite::RuntimeShape"* %27 to i8*
  call void @llvm.lifetime.start.p0i8(i64 32, i8* nonnull %1244) #8
  %1245 = icmp eq %struct.TfLiteTensor* %86, null
  br i1 %1245, label %1246, label %1248

1246:                                             ; preds = %1240
  %1247 = getelementptr inbounds %"class.tflite::RuntimeShape", %"class.tflite::RuntimeShape"* %27, i64 0, i32 0
  store i32 0, i32* %1247, align 8, !alias.scope !83
  br label %1276

1248:                                             ; preds = %1240
  %1249 = getelementptr inbounds %struct.TfLiteTensor, %struct.TfLiteTensor* %86, i64 0, i32 2
  %1250 = load %struct.TfLiteIntArray*, %struct.TfLiteIntArray** %1249, align 8, !noalias !83
  %1251 = getelementptr inbounds %struct.TfLiteIntArray, %struct.TfLiteIntArray* %1250, i64 0, i32 0
  %1252 = load i32, i32* %1251, align 4, !noalias !83
  %1253 = getelementptr inbounds %struct.TfLiteIntArray, %struct.TfLiteIntArray* %1250, i64 0, i32 1, i64 0
  %1254 = getelementptr inbounds %"class.tflite::RuntimeShape", %"class.tflite::RuntimeShape"* %27, i64 0, i32 0
  store i32 %1252, i32* %1254, align 8, !alias.scope !83
  %1255 = icmp sgt i32 %1252, 5
  br i1 %1255, label %1256, label %1263

1256:                                             ; preds = %1248
  %1257 = sext i32 %1252 to i64
  %1258 = shl nsw i64 %1257, 2
  %1259 = tail call i8* @_Znam(i64 %1258) #9, !noalias !83
  %1260 = getelementptr inbounds %"class.tflite::RuntimeShape", %"class.tflite::RuntimeShape"* %27, i64 0, i32 1, i32 0
  %1261 = bitcast i32** %1260 to i8**
  store i8* %1259, i8** %1261, align 8, !alias.scope !83
  %1262 = bitcast i8* %1259 to i32*
  br label %1268

1263:                                             ; preds = %1248
  %1264 = getelementptr inbounds %"class.tflite::RuntimeShape", %"class.tflite::RuntimeShape"* %27, i64 0, i32 1
  %1265 = bitcast %union.anon* %1264 to i32*
  %1266 = sext i32 %1252 to i64
  %1267 = shl nsw i64 %1266, 2
  br label %1268

1268:                                             ; preds = %1263, %1256
  %1269 = phi i64 [ %1258, %1256 ], [ %1267, %1263 ]
  %1270 = phi i32* [ %1262, %1256 ], [ %1265, %1263 ]
  %1271 = bitcast i32* %1270 to i8*
  %1272 = bitcast i32* %1253 to i8*
  call void @llvm.memcpy.p0i8.p0i8.i64(i8* align 4 %1271, i8* align 4 %1272, i64 %1269, i1 false) #8
  %1273 = getelementptr inbounds %struct.TfLiteTensor, %struct.TfLiteTensor* %86, i64 0, i32 1
  %1274 = bitcast %union.TfLitePtrUnion* %1273 to i8**
  %1275 = load i8*, i8** %1274, align 8
  br label %1276

1276:                                             ; preds = %1268, %1246
  %1277 = phi i32 [ %1252, %1268 ], [ 0, %1246 ]
  %1278 = phi i8* [ %1275, %1268 ], [ null, %1246 ]
  %1279 = getelementptr inbounds %"class.tflite::RuntimeShape", %"class.tflite::RuntimeShape"* %25, i64 0, i32 1
  %1280 = icmp sgt i32 %1205, 5
  br i1 %1280, label %1281, label %1284

1281:                                             ; preds = %1276
  %1282 = getelementptr inbounds %union.anon, %union.anon* %1279, i64 0, i32 0
  %1283 = load i32*, i32** %1282, align 8
  br label %1287

1284:                                             ; preds = %1276
  %1285 = bitcast %union.anon* %1279 to i32*
  %1286 = icmp sgt i32 %1205, 0
  br i1 %1286, label %1287, label %1391

1287:                                             ; preds = %1284, %1281
  %1288 = phi i32* [ %1283, %1281 ], [ %1285, %1284 ]
  %1289 = zext i32 %1205 to i64
  %1290 = icmp ult i32 %1205, 8
  br i1 %1290, label %1376, label %1291

1291:                                             ; preds = %1287
  %1292 = and i64 %1289, 4294967288
  %1293 = add nsw i64 %1292, -8
  %1294 = lshr exact i64 %1293, 3
  %1295 = add nuw nsw i64 %1294, 1
  %1296 = and i64 %1295, 3
  %1297 = icmp ult i64 %1293, 24
  br i1 %1297, label %1343, label %1298

1298:                                             ; preds = %1291
  %1299 = sub nsw i64 %1295, %1296
  br label %1300

1300:                                             ; preds = %1300, %1298
  %1301 = phi i64 [ 0, %1298 ], [ %1340, %1300 ]
  %1302 = phi <4 x i32> [ <i32 1, i32 1, i32 1, i32 1>, %1298 ], [ %1338, %1300 ]
  %1303 = phi <4 x i32> [ <i32 1, i32 1, i32 1, i32 1>, %1298 ], [ %1339, %1300 ]
  %1304 = phi i64 [ %1299, %1298 ], [ %1341, %1300 ]
  %1305 = getelementptr inbounds i32, i32* %1288, i64 %1301
  %1306 = bitcast i32* %1305 to <4 x i32>*
  %1307 = load <4 x i32>, <4 x i32>* %1306, align 4
  %1308 = getelementptr inbounds i32, i32* %1305, i64 4
  %1309 = bitcast i32* %1308 to <4 x i32>*
  %1310 = load <4 x i32>, <4 x i32>* %1309, align 4
  %1311 = mul nsw <4 x i32> %1307, %1302
  %1312 = mul nsw <4 x i32> %1310, %1303
  %1313 = or i64 %1301, 8
  %1314 = getelementptr inbounds i32, i32* %1288, i64 %1313
  %1315 = bitcast i32* %1314 to <4 x i32>*
  %1316 = load <4 x i32>, <4 x i32>* %1315, align 4
  %1317 = getelementptr inbounds i32, i32* %1314, i64 4
  %1318 = bitcast i32* %1317 to <4 x i32>*
  %1319 = load <4 x i32>, <4 x i32>* %1318, align 4
  %1320 = mul nsw <4 x i32> %1316, %1311
  %1321 = mul nsw <4 x i32> %1319, %1312
  %1322 = or i64 %1301, 16
  %1323 = getelementptr inbounds i32, i32* %1288, i64 %1322
  %1324 = bitcast i32* %1323 to <4 x i32>*
  %1325 = load <4 x i32>, <4 x i32>* %1324, align 4
  %1326 = getelementptr inbounds i32, i32* %1323, i64 4
  %1327 = bitcast i32* %1326 to <4 x i32>*
  %1328 = load <4 x i32>, <4 x i32>* %1327, align 4
  %1329 = mul nsw <4 x i32> %1325, %1320
  %1330 = mul nsw <4 x i32> %1328, %1321
  %1331 = or i64 %1301, 24
  %1332 = getelementptr inbounds i32, i32* %1288, i64 %1331
  %1333 = bitcast i32* %1332 to <4 x i32>*
  %1334 = load <4 x i32>, <4 x i32>* %1333, align 4
  %1335 = getelementptr inbounds i32, i32* %1332, i64 4
  %1336 = bitcast i32* %1335 to <4 x i32>*
  %1337 = load <4 x i32>, <4 x i32>* %1336, align 4
  %1338 = mul nsw <4 x i32> %1334, %1329
  %1339 = mul nsw <4 x i32> %1337, %1330
  %1340 = add i64 %1301, 32
  %1341 = add i64 %1304, -4
  %1342 = icmp eq i64 %1341, 0
  br i1 %1342, label %1343, label %1300, !llvm.loop !86

1343:                                             ; preds = %1300, %1291
  %1344 = phi <4 x i32> [ undef, %1291 ], [ %1338, %1300 ]
  %1345 = phi <4 x i32> [ undef, %1291 ], [ %1339, %1300 ]
  %1346 = phi i64 [ 0, %1291 ], [ %1340, %1300 ]
  %1347 = phi <4 x i32> [ <i32 1, i32 1, i32 1, i32 1>, %1291 ], [ %1338, %1300 ]
  %1348 = phi <4 x i32> [ <i32 1, i32 1, i32 1, i32 1>, %1291 ], [ %1339, %1300 ]
  %1349 = icmp eq i64 %1296, 0
  br i1 %1349, label %1366, label %1350

1350:                                             ; preds = %1343, %1350
  %1351 = phi i64 [ %1363, %1350 ], [ %1346, %1343 ]
  %1352 = phi <4 x i32> [ %1361, %1350 ], [ %1347, %1343 ]
  %1353 = phi <4 x i32> [ %1362, %1350 ], [ %1348, %1343 ]
  %1354 = phi i64 [ %1364, %1350 ], [ %1296, %1343 ]
  %1355 = getelementptr inbounds i32, i32* %1288, i64 %1351
  %1356 = bitcast i32* %1355 to <4 x i32>*
  %1357 = load <4 x i32>, <4 x i32>* %1356, align 4
  %1358 = getelementptr inbounds i32, i32* %1355, i64 4
  %1359 = bitcast i32* %1358 to <4 x i32>*
  %1360 = load <4 x i32>, <4 x i32>* %1359, align 4
  %1361 = mul nsw <4 x i32> %1357, %1352
  %1362 = mul nsw <4 x i32> %1360, %1353
  %1363 = add i64 %1351, 8
  %1364 = add i64 %1354, -1
  %1365 = icmp eq i64 %1364, 0
  br i1 %1365, label %1366, label %1350, !llvm.loop !87

1366:                                             ; preds = %1350, %1343
  %1367 = phi <4 x i32> [ %1344, %1343 ], [ %1361, %1350 ]
  %1368 = phi <4 x i32> [ %1345, %1343 ], [ %1362, %1350 ]
  %1369 = mul <4 x i32> %1368, %1367
  %1370 = shufflevector <4 x i32> %1369, <4 x i32> undef, <4 x i32> <i32 2, i32 3, i32 undef, i32 undef>
  %1371 = mul <4 x i32> %1369, %1370
  %1372 = shufflevector <4 x i32> %1371, <4 x i32> undef, <4 x i32> <i32 1, i32 undef, i32 undef, i32 undef>
  %1373 = mul <4 x i32> %1371, %1372
  %1374 = extractelement <4 x i32> %1373, i32 0
  %1375 = icmp eq i64 %1292, %1289
  br i1 %1375, label %1387, label %1376

1376:                                             ; preds = %1366, %1287
  %1377 = phi i64 [ 0, %1287 ], [ %1292, %1366 ]
  %1378 = phi i32 [ 1, %1287 ], [ %1374, %1366 ]
  br label %1379

1379:                                             ; preds = %1376, %1379
  %1380 = phi i64 [ %1385, %1379 ], [ %1377, %1376 ]
  %1381 = phi i32 [ %1384, %1379 ], [ %1378, %1376 ]
  %1382 = getelementptr inbounds i32, i32* %1288, i64 %1380
  %1383 = load i32, i32* %1382, align 4
  %1384 = mul nsw i32 %1383, %1381
  %1385 = add nuw nsw i64 %1380, 1
  %1386 = icmp eq i64 %1385, %1289
  br i1 %1386, label %1387, label %1379, !llvm.loop !88

1387:                                             ; preds = %1379, %1366
  %1388 = phi i32 [ %1374, %1366 ], [ %1384, %1379 ]
  %1389 = sext i32 %1388 to i64
  %1390 = icmp sgt i32 %1388, 0
  br i1 %1390, label %1391, label %1525

1391:                                             ; preds = %1387, %1284
  %1392 = phi i64 [ %1389, %1387 ], [ 1, %1284 ]
  %1393 = icmp ult i64 %1392, 8
  br i1 %1393, label %1489, label %1394

1394:                                             ; preds = %1391
  %1395 = getelementptr i8, i8* %1278, i64 %1392
  %1396 = getelementptr i32, i32* %1243, i64 %1392
  %1397 = bitcast i32* %1396 to i8*
  %1398 = getelementptr i32, i32* %1207, i64 %1392
  %1399 = bitcast i32* %1398 to i8*
  %1400 = icmp ult i8* %1278, %1397
  %1401 = icmp ult i8* %1242, %1395
  %1402 = and i1 %1400, %1401
  %1403 = icmp ult i8* %1278, %1399
  %1404 = icmp ult i8* %1206, %1395
  %1405 = and i1 %1403, %1404
  %1406 = or i1 %1402, %1405
  br i1 %1406, label %1489, label %1407

1407:                                             ; preds = %1394
  %1408 = and i64 %1392, -8
  %1409 = add nsw i64 %1408, -8
  %1410 = lshr exact i64 %1409, 3
  %1411 = add nuw nsw i64 %1410, 1
  %1412 = and i64 %1411, 1
  %1413 = icmp eq i64 %1409, 0
  br i1 %1413, label %1463, label %1414

1414:                                             ; preds = %1407
  %1415 = sub nuw nsw i64 %1411, %1412
  br label %1416

1416:                                             ; preds = %1416, %1414
  %1417 = phi i64 [ 0, %1414 ], [ %1460, %1416 ]
  %1418 = phi i64 [ %1415, %1414 ], [ %1461, %1416 ]
  %1419 = getelementptr inbounds i32, i32* %1207, i64 %1417
  %1420 = bitcast i32* %1419 to <4 x i32>*
  %1421 = load <4 x i32>, <4 x i32>* %1420, align 4, !alias.scope !89
  %1422 = getelementptr inbounds i32, i32* %1419, i64 4
  %1423 = bitcast i32* %1422 to <4 x i32>*
  %1424 = load <4 x i32>, <4 x i32>* %1423, align 4, !alias.scope !89
  %1425 = getelementptr inbounds i32, i32* %1243, i64 %1417
  %1426 = bitcast i32* %1425 to <4 x i32>*
  %1427 = load <4 x i32>, <4 x i32>* %1426, align 4, !alias.scope !92
  %1428 = getelementptr inbounds i32, i32* %1425, i64 4
  %1429 = bitcast i32* %1428 to <4 x i32>*
  %1430 = load <4 x i32>, <4 x i32>* %1429, align 4, !alias.scope !92
  %1431 = icmp eq <4 x i32> %1421, %1427
  %1432 = icmp eq <4 x i32> %1424, %1430
  %1433 = getelementptr inbounds i8, i8* %1278, i64 %1417
  %1434 = zext <4 x i1> %1431 to <4 x i8>
  %1435 = zext <4 x i1> %1432 to <4 x i8>
  %1436 = bitcast i8* %1433 to <4 x i8>*
  store <4 x i8> %1434, <4 x i8>* %1436, align 1, !alias.scope !94, !noalias !96
  %1437 = getelementptr inbounds i8, i8* %1433, i64 4
  %1438 = bitcast i8* %1437 to <4 x i8>*
  store <4 x i8> %1435, <4 x i8>* %1438, align 1, !alias.scope !94, !noalias !96
  %1439 = or i64 %1417, 8
  %1440 = getelementptr inbounds i32, i32* %1207, i64 %1439
  %1441 = bitcast i32* %1440 to <4 x i32>*
  %1442 = load <4 x i32>, <4 x i32>* %1441, align 4, !alias.scope !89
  %1443 = getelementptr inbounds i32, i32* %1440, i64 4
  %1444 = bitcast i32* %1443 to <4 x i32>*
  %1445 = load <4 x i32>, <4 x i32>* %1444, align 4, !alias.scope !89
  %1446 = getelementptr inbounds i32, i32* %1243, i64 %1439
  %1447 = bitcast i32* %1446 to <4 x i32>*
  %1448 = load <4 x i32>, <4 x i32>* %1447, align 4, !alias.scope !92
  %1449 = getelementptr inbounds i32, i32* %1446, i64 4
  %1450 = bitcast i32* %1449 to <4 x i32>*
  %1451 = load <4 x i32>, <4 x i32>* %1450, align 4, !alias.scope !92
  %1452 = icmp eq <4 x i32> %1442, %1448
  %1453 = icmp eq <4 x i32> %1445, %1451
  %1454 = getelementptr inbounds i8, i8* %1278, i64 %1439
  %1455 = zext <4 x i1> %1452 to <4 x i8>
  %1456 = zext <4 x i1> %1453 to <4 x i8>
  %1457 = bitcast i8* %1454 to <4 x i8>*
  store <4 x i8> %1455, <4 x i8>* %1457, align 1, !alias.scope !94, !noalias !96
  %1458 = getelementptr inbounds i8, i8* %1454, i64 4
  %1459 = bitcast i8* %1458 to <4 x i8>*
  store <4 x i8> %1456, <4 x i8>* %1459, align 1, !alias.scope !94, !noalias !96
  %1460 = add i64 %1417, 16
  %1461 = add i64 %1418, -2
  %1462 = icmp eq i64 %1461, 0
  br i1 %1462, label %1463, label %1416, !llvm.loop !97

1463:                                             ; preds = %1416, %1407
  %1464 = phi i64 [ 0, %1407 ], [ %1460, %1416 ]
  %1465 = icmp eq i64 %1412, 0
  br i1 %1465, label %1487, label %1466

1466:                                             ; preds = %1463
  %1467 = getelementptr inbounds i32, i32* %1207, i64 %1464
  %1468 = bitcast i32* %1467 to <4 x i32>*
  %1469 = load <4 x i32>, <4 x i32>* %1468, align 4, !alias.scope !89
  %1470 = getelementptr inbounds i32, i32* %1467, i64 4
  %1471 = bitcast i32* %1470 to <4 x i32>*
  %1472 = load <4 x i32>, <4 x i32>* %1471, align 4, !alias.scope !89
  %1473 = getelementptr inbounds i32, i32* %1243, i64 %1464
  %1474 = bitcast i32* %1473 to <4 x i32>*
  %1475 = load <4 x i32>, <4 x i32>* %1474, align 4, !alias.scope !92
  %1476 = getelementptr inbounds i32, i32* %1473, i64 4
  %1477 = bitcast i32* %1476 to <4 x i32>*
  %1478 = load <4 x i32>, <4 x i32>* %1477, align 4, !alias.scope !92
  %1479 = icmp eq <4 x i32> %1469, %1475
  %1480 = icmp eq <4 x i32> %1472, %1478
  %1481 = getelementptr inbounds i8, i8* %1278, i64 %1464
  %1482 = zext <4 x i1> %1479 to <4 x i8>
  %1483 = zext <4 x i1> %1480 to <4 x i8>
  %1484 = bitcast i8* %1481 to <4 x i8>*
  store <4 x i8> %1482, <4 x i8>* %1484, align 1, !alias.scope !94, !noalias !96
  %1485 = getelementptr inbounds i8, i8* %1481, i64 4
  %1486 = bitcast i8* %1485 to <4 x i8>*
  store <4 x i8> %1483, <4 x i8>* %1486, align 1, !alias.scope !94, !noalias !96
  br label %1487

1487:                                             ; preds = %1463, %1466
  %1488 = icmp eq i64 %1392, %1408
  br i1 %1488, label %1525, label %1489

1489:                                             ; preds = %1487, %1394, %1391
  %1490 = phi i64 [ 0, %1394 ], [ 0, %1391 ], [ %1408, %1487 ]
  %1491 = and i64 %1392, 1
  %1492 = icmp eq i64 %1491, 0
  br i1 %1492, label %1502, label %1493

1493:                                             ; preds = %1489
  %1494 = getelementptr inbounds i32, i32* %1207, i64 %1490
  %1495 = load i32, i32* %1494, align 4
  %1496 = getelementptr inbounds i32, i32* %1243, i64 %1490
  %1497 = load i32, i32* %1496, align 4
  %1498 = icmp eq i32 %1495, %1497
  %1499 = getelementptr inbounds i8, i8* %1278, i64 %1490
  %1500 = zext i1 %1498 to i8
  store i8 %1500, i8* %1499, align 1
  %1501 = or i64 %1490, 1
  br label %1502

1502:                                             ; preds = %1489, %1493
  %1503 = phi i64 [ %1490, %1489 ], [ %1501, %1493 ]
  %1504 = or i64 %1490, 1
  %1505 = icmp eq i64 %1392, %1504
  br i1 %1505, label %1525, label %1506

1506:                                             ; preds = %1502, %1506
  %1507 = phi i64 [ %1523, %1506 ], [ %1503, %1502 ]
  %1508 = getelementptr inbounds i32, i32* %1207, i64 %1507
  %1509 = load i32, i32* %1508, align 4
  %1510 = getelementptr inbounds i32, i32* %1243, i64 %1507
  %1511 = load i32, i32* %1510, align 4
  %1512 = icmp eq i32 %1509, %1511
  %1513 = getelementptr inbounds i8, i8* %1278, i64 %1507
  %1514 = zext i1 %1512 to i8
  store i8 %1514, i8* %1513, align 1
  %1515 = add nuw nsw i64 %1507, 1
  %1516 = getelementptr inbounds i32, i32* %1207, i64 %1515
  %1517 = load i32, i32* %1516, align 4
  %1518 = getelementptr inbounds i32, i32* %1243, i64 %1515
  %1519 = load i32, i32* %1518, align 4
  %1520 = icmp eq i32 %1517, %1519
  %1521 = getelementptr inbounds i8, i8* %1278, i64 %1515
  %1522 = zext i1 %1520 to i8
  store i8 %1522, i8* %1521, align 1
  %1523 = add nuw nsw i64 %1507, 2
  %1524 = icmp eq i64 %1523, %1392
  br i1 %1524, label %1525, label %1506, !llvm.loop !98

1525:                                             ; preds = %1502, %1506, %1487, %1387
  %1526 = icmp sgt i32 %1277, 5
  br i1 %1526, label %1527, label %1533

1527:                                             ; preds = %1525
  %1528 = getelementptr inbounds %"class.tflite::RuntimeShape", %"class.tflite::RuntimeShape"* %27, i64 0, i32 1, i32 0
  %1529 = load i32*, i32** %1528, align 8
  %1530 = icmp eq i32* %1529, null
  br i1 %1530, label %1533, label %1531

1531:                                             ; preds = %1527
  %1532 = bitcast i32* %1529 to i8*
  tail call void @_ZdaPv(i8* %1532) #9
  br label %1533

1533:                                             ; preds = %1531, %1527, %1525
  call void @llvm.lifetime.end.p0i8(i64 32, i8* nonnull %1244) #8
  %1534 = icmp sgt i32 %1241, 5
  br i1 %1534, label %1535, label %1541

1535:                                             ; preds = %1533
  %1536 = getelementptr inbounds %"class.tflite::RuntimeShape", %"class.tflite::RuntimeShape"* %26, i64 0, i32 1, i32 0
  %1537 = load i32*, i32** %1536, align 8
  %1538 = icmp eq i32* %1537, null
  br i1 %1538, label %1541, label %1539

1539:                                             ; preds = %1535
  %1540 = bitcast i32* %1537 to i8*
  tail call void @_ZdaPv(i8* %1540) #9
  br label %1541

1541:                                             ; preds = %1539, %1535, %1533
  call void @llvm.lifetime.end.p0i8(i64 32, i8* nonnull %1208) #8
  br i1 %1280, label %1542, label %1579

1542:                                             ; preds = %1541
  %1543 = getelementptr inbounds %"class.tflite::RuntimeShape", %"class.tflite::RuntimeShape"* %25, i64 0, i32 1, i32 0
  %1544 = load i32*, i32** %1543, align 8
  %1545 = icmp eq i32* %1544, null
  br i1 %1545, label %1579, label %1546

1546:                                             ; preds = %1542
  %1547 = bitcast i32* %1544 to i8*
  tail call void @_ZdaPv(i8* %1547) #9
  br label %1579

1548:                                             ; preds = %1163, %1141
  %1549 = phi i8* [ %1170, %1163 ], [ null, %1141 ]
  call void @_ZN6tflite13reference_ops29BroadcastComparison4DSlowImplIiXadL_ZNS0_7EqualFnIiEEbT_S3_EEEEvRKNS_16ComparisonParamsERKNS_12RuntimeShapeEPKS3_S9_SB_S9_Pb(%"struct.tflite::ComparisonParams"* nonnull dereferenceable(32) %21, %"class.tflite::RuntimeShape"* nonnull dereferenceable(32) %22, i32* %1105, %"class.tflite::RuntimeShape"* nonnull dereferenceable(32) %23, i32* %1138, %"class.tflite::RuntimeShape"* nonnull dereferenceable(32) %24, i8* %1549) #8
  %1550 = getelementptr inbounds %"class.tflite::RuntimeShape", %"class.tflite::RuntimeShape"* %24, i64 0, i32 0
  %1551 = load i32, i32* %1550, align 8
  %1552 = icmp sgt i32 %1551, 5
  br i1 %1552, label %1553, label %1559

1553:                                             ; preds = %1548
  %1554 = getelementptr inbounds %"class.tflite::RuntimeShape", %"class.tflite::RuntimeShape"* %24, i64 0, i32 1, i32 0
  %1555 = load i32*, i32** %1554, align 8
  %1556 = icmp eq i32* %1555, null
  br i1 %1556, label %1559, label %1557

1557:                                             ; preds = %1553
  %1558 = bitcast i32* %1555 to i8*
  call void @_ZdaPv(i8* %1558) #9
  br label %1559

1559:                                             ; preds = %1557, %1553, %1548
  call void @llvm.lifetime.end.p0i8(i64 32, i8* nonnull %1139) #8
  %1560 = getelementptr inbounds %"class.tflite::RuntimeShape", %"class.tflite::RuntimeShape"* %23, i64 0, i32 0
  %1561 = load i32, i32* %1560, align 8
  %1562 = icmp sgt i32 %1561, 5
  br i1 %1562, label %1563, label %1569

1563:                                             ; preds = %1559
  %1564 = getelementptr inbounds %"class.tflite::RuntimeShape", %"class.tflite::RuntimeShape"* %23, i64 0, i32 1, i32 0
  %1565 = load i32*, i32** %1564, align 8
  %1566 = icmp eq i32* %1565, null
  br i1 %1566, label %1569, label %1567

1567:                                             ; preds = %1563
  %1568 = bitcast i32* %1565 to i8*
  call void @_ZdaPv(i8* %1568) #9
  br label %1569

1569:                                             ; preds = %1567, %1563, %1559
  call void @llvm.lifetime.end.p0i8(i64 32, i8* nonnull %1106) #8
  %1570 = getelementptr inbounds %"class.tflite::RuntimeShape", %"class.tflite::RuntimeShape"* %22, i64 0, i32 0
  %1571 = load i32, i32* %1570, align 8
  %1572 = icmp sgt i32 %1571, 5
  br i1 %1572, label %1573, label %1579

1573:                                             ; preds = %1569
  %1574 = getelementptr inbounds %"class.tflite::RuntimeShape", %"class.tflite::RuntimeShape"* %22, i64 0, i32 1, i32 0
  %1575 = load i32*, i32** %1574, align 8
  %1576 = icmp eq i32* %1575, null
  br i1 %1576, label %1579, label %1577

1577:                                             ; preds = %1573
  %1578 = bitcast i32* %1575 to i8*
  call void @_ZdaPv(i8* %1578) #9
  br label %1579

1579:                                             ; preds = %1569, %1573, %1577, %1541, %1542, %1546
  %1580 = phi i8* [ %1172, %1546 ], [ %1172, %1542 ], [ %1172, %1541 ], [ %1073, %1577 ], [ %1073, %1573 ], [ %1073, %1569 ]
  call void @llvm.lifetime.end.p0i8(i64 32, i8* nonnull %1580) #8
  call void @llvm.lifetime.end.p0i8(i64 32, i8* nonnull %1071) #8
  br label %2967

1581:                                             ; preds = %85
  %1582 = bitcast %"struct.tflite::ComparisonParams"* %14 to i8*
  call void @llvm.lifetime.start.p0i8(i64 32, i8* nonnull %1582) #8
  call void @llvm.memset.p0i8.i64(i8* nonnull align 4 %1582, i8 -86, i64 32, i1 false) #8
  br i1 %87, label %1684, label %1583

1583:                                             ; preds = %1581
  %1584 = bitcast %"class.tflite::RuntimeShape"* %15 to i8*
  call void @llvm.lifetime.start.p0i8(i64 32, i8* nonnull %1584) #8
  %1585 = icmp eq %struct.TfLiteTensor* %64, null
  br i1 %1585, label %1586, label %1588

1586:                                             ; preds = %1583
  %1587 = getelementptr inbounds %"class.tflite::RuntimeShape", %"class.tflite::RuntimeShape"* %15, i64 0, i32 0
  store i32 0, i32* %1587, align 8, !alias.scope !99
  br label %1616

1588:                                             ; preds = %1583
  %1589 = getelementptr inbounds %struct.TfLiteTensor, %struct.TfLiteTensor* %64, i64 0, i32 2
  %1590 = load %struct.TfLiteIntArray*, %struct.TfLiteIntArray** %1589, align 8, !noalias !99
  %1591 = getelementptr inbounds %struct.TfLiteIntArray, %struct.TfLiteIntArray* %1590, i64 0, i32 0
  %1592 = load i32, i32* %1591, align 4, !noalias !99
  %1593 = getelementptr inbounds %struct.TfLiteIntArray, %struct.TfLiteIntArray* %1590, i64 0, i32 1, i64 0
  %1594 = getelementptr inbounds %"class.tflite::RuntimeShape", %"class.tflite::RuntimeShape"* %15, i64 0, i32 0
  store i32 %1592, i32* %1594, align 8, !alias.scope !99
  %1595 = icmp sgt i32 %1592, 5
  br i1 %1595, label %1596, label %1603

1596:                                             ; preds = %1588
  %1597 = sext i32 %1592 to i64
  %1598 = shl nsw i64 %1597, 2
  %1599 = tail call i8* @_Znam(i64 %1598) #9, !noalias !99
  %1600 = getelementptr inbounds %"class.tflite::RuntimeShape", %"class.tflite::RuntimeShape"* %15, i64 0, i32 1, i32 0
  %1601 = bitcast i32** %1600 to i8**
  store i8* %1599, i8** %1601, align 8, !alias.scope !99
  %1602 = bitcast i8* %1599 to i32*
  br label %1608

1603:                                             ; preds = %1588
  %1604 = getelementptr inbounds %"class.tflite::RuntimeShape", %"class.tflite::RuntimeShape"* %15, i64 0, i32 1
  %1605 = bitcast %union.anon* %1604 to i32*
  %1606 = sext i32 %1592 to i64
  %1607 = shl nsw i64 %1606, 2
  br label %1608

1608:                                             ; preds = %1603, %1596
  %1609 = phi i64 [ %1598, %1596 ], [ %1607, %1603 ]
  %1610 = phi i32* [ %1602, %1596 ], [ %1605, %1603 ]
  %1611 = bitcast i32* %1610 to i8*
  %1612 = bitcast i32* %1593 to i8*
  call void @llvm.memcpy.p0i8.p0i8.i64(i8* align 4 %1611, i8* align 4 %1612, i64 %1609, i1 false) #8
  %1613 = getelementptr inbounds %struct.TfLiteTensor, %struct.TfLiteTensor* %64, i64 0, i32 1
  %1614 = bitcast %union.TfLitePtrUnion* %1613 to i64**
  %1615 = load i64*, i64** %1614, align 8
  br label %1616

1616:                                             ; preds = %1608, %1586
  %1617 = phi i64* [ %1615, %1608 ], [ null, %1586 ]
  %1618 = bitcast %"class.tflite::RuntimeShape"* %16 to i8*
  call void @llvm.lifetime.start.p0i8(i64 32, i8* nonnull %1618) #8
  %1619 = icmp eq %struct.TfLiteTensor* %74, null
  br i1 %1619, label %1620, label %1622

1620:                                             ; preds = %1616
  %1621 = getelementptr inbounds %"class.tflite::RuntimeShape", %"class.tflite::RuntimeShape"* %16, i64 0, i32 0
  store i32 0, i32* %1621, align 8, !alias.scope !102
  br label %1650

1622:                                             ; preds = %1616
  %1623 = getelementptr inbounds %struct.TfLiteTensor, %struct.TfLiteTensor* %74, i64 0, i32 2
  %1624 = load %struct.TfLiteIntArray*, %struct.TfLiteIntArray** %1623, align 8, !noalias !102
  %1625 = getelementptr inbounds %struct.TfLiteIntArray, %struct.TfLiteIntArray* %1624, i64 0, i32 0
  %1626 = load i32, i32* %1625, align 4, !noalias !102
  %1627 = getelementptr inbounds %struct.TfLiteIntArray, %struct.TfLiteIntArray* %1624, i64 0, i32 1, i64 0
  %1628 = getelementptr inbounds %"class.tflite::RuntimeShape", %"class.tflite::RuntimeShape"* %16, i64 0, i32 0
  store i32 %1626, i32* %1628, align 8, !alias.scope !102
  %1629 = icmp sgt i32 %1626, 5
  br i1 %1629, label %1630, label %1637

1630:                                             ; preds = %1622
  %1631 = sext i32 %1626 to i64
  %1632 = shl nsw i64 %1631, 2
  %1633 = tail call i8* @_Znam(i64 %1632) #9, !noalias !102
  %1634 = getelementptr inbounds %"class.tflite::RuntimeShape", %"class.tflite::RuntimeShape"* %16, i64 0, i32 1, i32 0
  %1635 = bitcast i32** %1634 to i8**
  store i8* %1633, i8** %1635, align 8, !alias.scope !102
  %1636 = bitcast i8* %1633 to i32*
  br label %1642

1637:                                             ; preds = %1622
  %1638 = getelementptr inbounds %"class.tflite::RuntimeShape", %"class.tflite::RuntimeShape"* %16, i64 0, i32 1
  %1639 = bitcast %union.anon* %1638 to i32*
  %1640 = sext i32 %1626 to i64
  %1641 = shl nsw i64 %1640, 2
  br label %1642

1642:                                             ; preds = %1637, %1630
  %1643 = phi i64 [ %1632, %1630 ], [ %1641, %1637 ]
  %1644 = phi i32* [ %1636, %1630 ], [ %1639, %1637 ]
  %1645 = bitcast i32* %1644 to i8*
  %1646 = bitcast i32* %1627 to i8*
  call void @llvm.memcpy.p0i8.p0i8.i64(i8* align 4 %1645, i8* align 4 %1646, i64 %1643, i1 false) #8
  %1647 = getelementptr inbounds %struct.TfLiteTensor, %struct.TfLiteTensor* %74, i64 0, i32 1
  %1648 = bitcast %union.TfLitePtrUnion* %1647 to i64**
  %1649 = load i64*, i64** %1648, align 8
  br label %1650

1650:                                             ; preds = %1642, %1620
  %1651 = phi i64* [ %1649, %1642 ], [ null, %1620 ]
  %1652 = bitcast %"class.tflite::RuntimeShape"* %17 to i8*
  call void @llvm.lifetime.start.p0i8(i64 32, i8* nonnull %1652) #8
  %1653 = icmp eq %struct.TfLiteTensor* %86, null
  br i1 %1653, label %1654, label %1656

1654:                                             ; preds = %1650
  %1655 = getelementptr inbounds %"class.tflite::RuntimeShape", %"class.tflite::RuntimeShape"* %17, i64 0, i32 0
  store i32 0, i32* %1655, align 8, !alias.scope !105
  br label %1963

1656:                                             ; preds = %1650
  %1657 = getelementptr inbounds %struct.TfLiteTensor, %struct.TfLiteTensor* %86, i64 0, i32 2
  %1658 = load %struct.TfLiteIntArray*, %struct.TfLiteIntArray** %1657, align 8, !noalias !105
  %1659 = getelementptr inbounds %struct.TfLiteIntArray, %struct.TfLiteIntArray* %1658, i64 0, i32 0
  %1660 = load i32, i32* %1659, align 4, !noalias !105
  %1661 = getelementptr inbounds %struct.TfLiteIntArray, %struct.TfLiteIntArray* %1658, i64 0, i32 1, i64 0
  %1662 = getelementptr inbounds %"class.tflite::RuntimeShape", %"class.tflite::RuntimeShape"* %17, i64 0, i32 0
  store i32 %1660, i32* %1662, align 8, !alias.scope !105
  %1663 = icmp sgt i32 %1660, 5
  br i1 %1663, label %1664, label %1671

1664:                                             ; preds = %1656
  %1665 = sext i32 %1660 to i64
  %1666 = shl nsw i64 %1665, 2
  %1667 = tail call i8* @_Znam(i64 %1666) #9, !noalias !105
  %1668 = getelementptr inbounds %"class.tflite::RuntimeShape", %"class.tflite::RuntimeShape"* %17, i64 0, i32 1, i32 0
  %1669 = bitcast i32** %1668 to i8**
  store i8* %1667, i8** %1669, align 8, !alias.scope !105
  %1670 = bitcast i8* %1667 to i32*
  br label %1676

1671:                                             ; preds = %1656
  %1672 = getelementptr inbounds %"class.tflite::RuntimeShape", %"class.tflite::RuntimeShape"* %17, i64 0, i32 1
  %1673 = bitcast %union.anon* %1672 to i32*
  %1674 = sext i32 %1660 to i64
  %1675 = shl nsw i64 %1674, 2
  br label %1676

1676:                                             ; preds = %1671, %1664
  %1677 = phi i64 [ %1666, %1664 ], [ %1675, %1671 ]
  %1678 = phi i32* [ %1670, %1664 ], [ %1673, %1671 ]
  %1679 = bitcast i32* %1678 to i8*
  %1680 = bitcast i32* %1661 to i8*
  call void @llvm.memcpy.p0i8.p0i8.i64(i8* align 4 %1679, i8* align 4 %1680, i64 %1677, i1 false) #8
  %1681 = getelementptr inbounds %struct.TfLiteTensor, %struct.TfLiteTensor* %86, i64 0, i32 1
  %1682 = bitcast %union.TfLitePtrUnion* %1681 to i8**
  %1683 = load i8*, i8** %1682, align 8
  br label %1963

1684:                                             ; preds = %1581
  %1685 = bitcast %"class.tflite::RuntimeShape"* %18 to i8*
  call void @llvm.lifetime.start.p0i8(i64 32, i8* nonnull %1685) #8
  %1686 = icmp eq %struct.TfLiteTensor* %64, null
  br i1 %1686, label %1687, label %1689

1687:                                             ; preds = %1684
  %1688 = getelementptr inbounds %"class.tflite::RuntimeShape", %"class.tflite::RuntimeShape"* %18, i64 0, i32 0
  store i32 0, i32* %1688, align 8, !alias.scope !108
  br label %1717

1689:                                             ; preds = %1684
  %1690 = getelementptr inbounds %struct.TfLiteTensor, %struct.TfLiteTensor* %64, i64 0, i32 2
  %1691 = load %struct.TfLiteIntArray*, %struct.TfLiteIntArray** %1690, align 8, !noalias !108
  %1692 = getelementptr inbounds %struct.TfLiteIntArray, %struct.TfLiteIntArray* %1691, i64 0, i32 0
  %1693 = load i32, i32* %1692, align 4, !noalias !108
  %1694 = getelementptr inbounds %struct.TfLiteIntArray, %struct.TfLiteIntArray* %1691, i64 0, i32 1, i64 0
  %1695 = getelementptr inbounds %"class.tflite::RuntimeShape", %"class.tflite::RuntimeShape"* %18, i64 0, i32 0
  store i32 %1693, i32* %1695, align 8, !alias.scope !108
  %1696 = icmp sgt i32 %1693, 5
  br i1 %1696, label %1697, label %1704

1697:                                             ; preds = %1689
  %1698 = sext i32 %1693 to i64
  %1699 = shl nsw i64 %1698, 2
  %1700 = tail call i8* @_Znam(i64 %1699) #9, !noalias !108
  %1701 = getelementptr inbounds %"class.tflite::RuntimeShape", %"class.tflite::RuntimeShape"* %18, i64 0, i32 1, i32 0
  %1702 = bitcast i32** %1701 to i8**
  store i8* %1700, i8** %1702, align 8, !alias.scope !108
  %1703 = bitcast i8* %1700 to i32*
  br label %1709

1704:                                             ; preds = %1689
  %1705 = getelementptr inbounds %"class.tflite::RuntimeShape", %"class.tflite::RuntimeShape"* %18, i64 0, i32 1
  %1706 = bitcast %union.anon* %1705 to i32*
  %1707 = sext i32 %1693 to i64
  %1708 = shl nsw i64 %1707, 2
  br label %1709

1709:                                             ; preds = %1704, %1697
  %1710 = phi i64 [ %1699, %1697 ], [ %1708, %1704 ]
  %1711 = phi i32* [ %1703, %1697 ], [ %1706, %1704 ]
  %1712 = bitcast i32* %1711 to i8*
  %1713 = bitcast i32* %1694 to i8*
  call void @llvm.memcpy.p0i8.p0i8.i64(i8* align 4 %1712, i8* align 4 %1713, i64 %1710, i1 false) #8
  %1714 = getelementptr inbounds %struct.TfLiteTensor, %struct.TfLiteTensor* %64, i64 0, i32 1
  %1715 = bitcast %union.TfLitePtrUnion* %1714 to i64**
  %1716 = load i64*, i64** %1715, align 8
  br label %1717

1717:                                             ; preds = %1709, %1687
  %1718 = phi i32 [ %1693, %1709 ], [ 0, %1687 ]
  %1719 = phi i64* [ %1716, %1709 ], [ null, %1687 ]
  %1720 = bitcast %"class.tflite::RuntimeShape"* %19 to i8*
  call void @llvm.lifetime.start.p0i8(i64 32, i8* nonnull %1720) #8
  %1721 = icmp eq %struct.TfLiteTensor* %74, null
  br i1 %1721, label %1722, label %1724

1722:                                             ; preds = %1717
  %1723 = getelementptr inbounds %"class.tflite::RuntimeShape", %"class.tflite::RuntimeShape"* %19, i64 0, i32 0
  store i32 0, i32* %1723, align 8, !alias.scope !111
  br label %1752

1724:                                             ; preds = %1717
  %1725 = getelementptr inbounds %struct.TfLiteTensor, %struct.TfLiteTensor* %74, i64 0, i32 2
  %1726 = load %struct.TfLiteIntArray*, %struct.TfLiteIntArray** %1725, align 8, !noalias !111
  %1727 = getelementptr inbounds %struct.TfLiteIntArray, %struct.TfLiteIntArray* %1726, i64 0, i32 0
  %1728 = load i32, i32* %1727, align 4, !noalias !111
  %1729 = getelementptr inbounds %struct.TfLiteIntArray, %struct.TfLiteIntArray* %1726, i64 0, i32 1, i64 0
  %1730 = getelementptr inbounds %"class.tflite::RuntimeShape", %"class.tflite::RuntimeShape"* %19, i64 0, i32 0
  store i32 %1728, i32* %1730, align 8, !alias.scope !111
  %1731 = icmp sgt i32 %1728, 5
  br i1 %1731, label %1732, label %1739

1732:                                             ; preds = %1724
  %1733 = sext i32 %1728 to i64
  %1734 = shl nsw i64 %1733, 2
  %1735 = tail call i8* @_Znam(i64 %1734) #9, !noalias !111
  %1736 = getelementptr inbounds %"class.tflite::RuntimeShape", %"class.tflite::RuntimeShape"* %19, i64 0, i32 1, i32 0
  %1737 = bitcast i32** %1736 to i8**
  store i8* %1735, i8** %1737, align 8, !alias.scope !111
  %1738 = bitcast i8* %1735 to i32*
  br label %1744

1739:                                             ; preds = %1724
  %1740 = getelementptr inbounds %"class.tflite::RuntimeShape", %"class.tflite::RuntimeShape"* %19, i64 0, i32 1
  %1741 = bitcast %union.anon* %1740 to i32*
  %1742 = sext i32 %1728 to i64
  %1743 = shl nsw i64 %1742, 2
  br label %1744

1744:                                             ; preds = %1739, %1732
  %1745 = phi i64 [ %1734, %1732 ], [ %1743, %1739 ]
  %1746 = phi i32* [ %1738, %1732 ], [ %1741, %1739 ]
  %1747 = bitcast i32* %1746 to i8*
  %1748 = bitcast i32* %1729 to i8*
  call void @llvm.memcpy.p0i8.p0i8.i64(i8* align 4 %1747, i8* align 4 %1748, i64 %1745, i1 false) #8
  %1749 = getelementptr inbounds %struct.TfLiteTensor, %struct.TfLiteTensor* %74, i64 0, i32 1
  %1750 = bitcast %union.TfLitePtrUnion* %1749 to i64**
  %1751 = load i64*, i64** %1750, align 8
  br label %1752

1752:                                             ; preds = %1744, %1722
  %1753 = phi i32 [ %1728, %1744 ], [ 0, %1722 ]
  %1754 = phi i64* [ %1751, %1744 ], [ null, %1722 ]
  %1755 = bitcast %"class.tflite::RuntimeShape"* %20 to i8*
  call void @llvm.lifetime.start.p0i8(i64 32, i8* nonnull %1755) #8
  %1756 = icmp eq %struct.TfLiteTensor* %86, null
  br i1 %1756, label %1757, label %1759

1757:                                             ; preds = %1752
  %1758 = getelementptr inbounds %"class.tflite::RuntimeShape", %"class.tflite::RuntimeShape"* %20, i64 0, i32 0
  store i32 0, i32* %1758, align 8, !alias.scope !114
  br label %1787

1759:                                             ; preds = %1752
  %1760 = getelementptr inbounds %struct.TfLiteTensor, %struct.TfLiteTensor* %86, i64 0, i32 2
  %1761 = load %struct.TfLiteIntArray*, %struct.TfLiteIntArray** %1760, align 8, !noalias !114
  %1762 = getelementptr inbounds %struct.TfLiteIntArray, %struct.TfLiteIntArray* %1761, i64 0, i32 0
  %1763 = load i32, i32* %1762, align 4, !noalias !114
  %1764 = getelementptr inbounds %struct.TfLiteIntArray, %struct.TfLiteIntArray* %1761, i64 0, i32 1, i64 0
  %1765 = getelementptr inbounds %"class.tflite::RuntimeShape", %"class.tflite::RuntimeShape"* %20, i64 0, i32 0
  store i32 %1763, i32* %1765, align 8, !alias.scope !114
  %1766 = icmp sgt i32 %1763, 5
  br i1 %1766, label %1767, label %1774

1767:                                             ; preds = %1759
  %1768 = sext i32 %1763 to i64
  %1769 = shl nsw i64 %1768, 2
  %1770 = tail call i8* @_Znam(i64 %1769) #9, !noalias !114
  %1771 = getelementptr inbounds %"class.tflite::RuntimeShape", %"class.tflite::RuntimeShape"* %20, i64 0, i32 1, i32 0
  %1772 = bitcast i32** %1771 to i8**
  store i8* %1770, i8** %1772, align 8, !alias.scope !114
  %1773 = bitcast i8* %1770 to i32*
  br label %1779

1774:                                             ; preds = %1759
  %1775 = getelementptr inbounds %"class.tflite::RuntimeShape", %"class.tflite::RuntimeShape"* %20, i64 0, i32 1
  %1776 = bitcast %union.anon* %1775 to i32*
  %1777 = sext i32 %1763 to i64
  %1778 = shl nsw i64 %1777, 2
  br label %1779

1779:                                             ; preds = %1774, %1767
  %1780 = phi i64 [ %1769, %1767 ], [ %1778, %1774 ]
  %1781 = phi i32* [ %1773, %1767 ], [ %1776, %1774 ]
  %1782 = bitcast i32* %1781 to i8*
  %1783 = bitcast i32* %1764 to i8*
  call void @llvm.memcpy.p0i8.p0i8.i64(i8* align 4 %1782, i8* align 4 %1783, i64 %1780, i1 false) #8
  %1784 = getelementptr inbounds %struct.TfLiteTensor, %struct.TfLiteTensor* %86, i64 0, i32 1
  %1785 = bitcast %union.TfLitePtrUnion* %1784 to i8**
  %1786 = load i8*, i8** %1785, align 8
  br label %1787

1787:                                             ; preds = %1779, %1757
  %1788 = phi i32 [ %1763, %1779 ], [ 0, %1757 ]
  %1789 = phi i8* [ %1786, %1779 ], [ null, %1757 ]
  %1790 = getelementptr inbounds %"class.tflite::RuntimeShape", %"class.tflite::RuntimeShape"* %18, i64 0, i32 1
  %1791 = icmp sgt i32 %1718, 5
  br i1 %1791, label %1792, label %1795

1792:                                             ; preds = %1787
  %1793 = getelementptr inbounds %union.anon, %union.anon* %1790, i64 0, i32 0
  %1794 = load i32*, i32** %1793, align 8
  br label %1798

1795:                                             ; preds = %1787
  %1796 = bitcast %union.anon* %1790 to i32*
  %1797 = icmp sgt i32 %1718, 0
  br i1 %1797, label %1798, label %1902

1798:                                             ; preds = %1795, %1792
  %1799 = phi i32* [ %1794, %1792 ], [ %1796, %1795 ]
  %1800 = zext i32 %1718 to i64
  %1801 = icmp ult i32 %1718, 8
  br i1 %1801, label %1887, label %1802

1802:                                             ; preds = %1798
  %1803 = and i64 %1800, 4294967288
  %1804 = add nsw i64 %1803, -8
  %1805 = lshr exact i64 %1804, 3
  %1806 = add nuw nsw i64 %1805, 1
  %1807 = and i64 %1806, 3
  %1808 = icmp ult i64 %1804, 24
  br i1 %1808, label %1854, label %1809

1809:                                             ; preds = %1802
  %1810 = sub nsw i64 %1806, %1807
  br label %1811

1811:                                             ; preds = %1811, %1809
  %1812 = phi i64 [ 0, %1809 ], [ %1851, %1811 ]
  %1813 = phi <4 x i32> [ <i32 1, i32 1, i32 1, i32 1>, %1809 ], [ %1849, %1811 ]
  %1814 = phi <4 x i32> [ <i32 1, i32 1, i32 1, i32 1>, %1809 ], [ %1850, %1811 ]
  %1815 = phi i64 [ %1810, %1809 ], [ %1852, %1811 ]
  %1816 = getelementptr inbounds i32, i32* %1799, i64 %1812
  %1817 = bitcast i32* %1816 to <4 x i32>*
  %1818 = load <4 x i32>, <4 x i32>* %1817, align 4
  %1819 = getelementptr inbounds i32, i32* %1816, i64 4
  %1820 = bitcast i32* %1819 to <4 x i32>*
  %1821 = load <4 x i32>, <4 x i32>* %1820, align 4
  %1822 = mul nsw <4 x i32> %1818, %1813
  %1823 = mul nsw <4 x i32> %1821, %1814
  %1824 = or i64 %1812, 8
  %1825 = getelementptr inbounds i32, i32* %1799, i64 %1824
  %1826 = bitcast i32* %1825 to <4 x i32>*
  %1827 = load <4 x i32>, <4 x i32>* %1826, align 4
  %1828 = getelementptr inbounds i32, i32* %1825, i64 4
  %1829 = bitcast i32* %1828 to <4 x i32>*
  %1830 = load <4 x i32>, <4 x i32>* %1829, align 4
  %1831 = mul nsw <4 x i32> %1827, %1822
  %1832 = mul nsw <4 x i32> %1830, %1823
  %1833 = or i64 %1812, 16
  %1834 = getelementptr inbounds i32, i32* %1799, i64 %1833
  %1835 = bitcast i32* %1834 to <4 x i32>*
  %1836 = load <4 x i32>, <4 x i32>* %1835, align 4
  %1837 = getelementptr inbounds i32, i32* %1834, i64 4
  %1838 = bitcast i32* %1837 to <4 x i32>*
  %1839 = load <4 x i32>, <4 x i32>* %1838, align 4
  %1840 = mul nsw <4 x i32> %1836, %1831
  %1841 = mul nsw <4 x i32> %1839, %1832
  %1842 = or i64 %1812, 24
  %1843 = getelementptr inbounds i32, i32* %1799, i64 %1842
  %1844 = bitcast i32* %1843 to <4 x i32>*
  %1845 = load <4 x i32>, <4 x i32>* %1844, align 4
  %1846 = getelementptr inbounds i32, i32* %1843, i64 4
  %1847 = bitcast i32* %1846 to <4 x i32>*
  %1848 = load <4 x i32>, <4 x i32>* %1847, align 4
  %1849 = mul nsw <4 x i32> %1845, %1840
  %1850 = mul nsw <4 x i32> %1848, %1841
  %1851 = add i64 %1812, 32
  %1852 = add i64 %1815, -4
  %1853 = icmp eq i64 %1852, 0
  br i1 %1853, label %1854, label %1811, !llvm.loop !117

1854:                                             ; preds = %1811, %1802
  %1855 = phi <4 x i32> [ undef, %1802 ], [ %1849, %1811 ]
  %1856 = phi <4 x i32> [ undef, %1802 ], [ %1850, %1811 ]
  %1857 = phi i64 [ 0, %1802 ], [ %1851, %1811 ]
  %1858 = phi <4 x i32> [ <i32 1, i32 1, i32 1, i32 1>, %1802 ], [ %1849, %1811 ]
  %1859 = phi <4 x i32> [ <i32 1, i32 1, i32 1, i32 1>, %1802 ], [ %1850, %1811 ]
  %1860 = icmp eq i64 %1807, 0
  br i1 %1860, label %1877, label %1861

1861:                                             ; preds = %1854, %1861
  %1862 = phi i64 [ %1874, %1861 ], [ %1857, %1854 ]
  %1863 = phi <4 x i32> [ %1872, %1861 ], [ %1858, %1854 ]
  %1864 = phi <4 x i32> [ %1873, %1861 ], [ %1859, %1854 ]
  %1865 = phi i64 [ %1875, %1861 ], [ %1807, %1854 ]
  %1866 = getelementptr inbounds i32, i32* %1799, i64 %1862
  %1867 = bitcast i32* %1866 to <4 x i32>*
  %1868 = load <4 x i32>, <4 x i32>* %1867, align 4
  %1869 = getelementptr inbounds i32, i32* %1866, i64 4
  %1870 = bitcast i32* %1869 to <4 x i32>*
  %1871 = load <4 x i32>, <4 x i32>* %1870, align 4
  %1872 = mul nsw <4 x i32> %1868, %1863
  %1873 = mul nsw <4 x i32> %1871, %1864
  %1874 = add i64 %1862, 8
  %1875 = add i64 %1865, -1
  %1876 = icmp eq i64 %1875, 0
  br i1 %1876, label %1877, label %1861, !llvm.loop !118

1877:                                             ; preds = %1861, %1854
  %1878 = phi <4 x i32> [ %1855, %1854 ], [ %1872, %1861 ]
  %1879 = phi <4 x i32> [ %1856, %1854 ], [ %1873, %1861 ]
  %1880 = mul <4 x i32> %1879, %1878
  %1881 = shufflevector <4 x i32> %1880, <4 x i32> undef, <4 x i32> <i32 2, i32 3, i32 undef, i32 undef>
  %1882 = mul <4 x i32> %1880, %1881
  %1883 = shufflevector <4 x i32> %1882, <4 x i32> undef, <4 x i32> <i32 1, i32 undef, i32 undef, i32 undef>
  %1884 = mul <4 x i32> %1882, %1883
  %1885 = extractelement <4 x i32> %1884, i32 0
  %1886 = icmp eq i64 %1803, %1800
  br i1 %1886, label %1898, label %1887

1887:                                             ; preds = %1877, %1798
  %1888 = phi i64 [ 0, %1798 ], [ %1803, %1877 ]
  %1889 = phi i32 [ 1, %1798 ], [ %1885, %1877 ]
  br label %1890

1890:                                             ; preds = %1887, %1890
  %1891 = phi i64 [ %1896, %1890 ], [ %1888, %1887 ]
  %1892 = phi i32 [ %1895, %1890 ], [ %1889, %1887 ]
  %1893 = getelementptr inbounds i32, i32* %1799, i64 %1891
  %1894 = load i32, i32* %1893, align 4
  %1895 = mul nsw i32 %1894, %1892
  %1896 = add nuw nsw i64 %1891, 1
  %1897 = icmp eq i64 %1896, %1800
  br i1 %1897, label %1898, label %1890, !llvm.loop !119

1898:                                             ; preds = %1890, %1877
  %1899 = phi i32 [ %1885, %1877 ], [ %1895, %1890 ]
  %1900 = sext i32 %1899 to i64
  %1901 = icmp sgt i32 %1899, 0
  br i1 %1901, label %1902, label %1940

1902:                                             ; preds = %1898, %1795
  %1903 = phi i64 [ %1900, %1898 ], [ 1, %1795 ]
  %1904 = and i64 %1903, 1
  %1905 = icmp eq i64 %1903, 1
  br i1 %1905, label %1929, label %1906

1906:                                             ; preds = %1902
  %1907 = sub nsw i64 %1903, %1904
  br label %1908

1908:                                             ; preds = %1908, %1906
  %1909 = phi i64 [ 0, %1906 ], [ %1926, %1908 ]
  %1910 = phi i64 [ %1907, %1906 ], [ %1927, %1908 ]
  %1911 = getelementptr inbounds i64, i64* %1719, i64 %1909
  %1912 = load i64, i64* %1911, align 8
  %1913 = getelementptr inbounds i64, i64* %1754, i64 %1909
  %1914 = load i64, i64* %1913, align 8
  %1915 = icmp eq i64 %1912, %1914
  %1916 = getelementptr inbounds i8, i8* %1789, i64 %1909
  %1917 = zext i1 %1915 to i8
  store i8 %1917, i8* %1916, align 1
  %1918 = or i64 %1909, 1
  %1919 = getelementptr inbounds i64, i64* %1719, i64 %1918
  %1920 = load i64, i64* %1919, align 8
  %1921 = getelementptr inbounds i64, i64* %1754, i64 %1918
  %1922 = load i64, i64* %1921, align 8
  %1923 = icmp eq i64 %1920, %1922
  %1924 = getelementptr inbounds i8, i8* %1789, i64 %1918
  %1925 = zext i1 %1923 to i8
  store i8 %1925, i8* %1924, align 1
  %1926 = add nuw nsw i64 %1909, 2
  %1927 = add i64 %1910, -2
  %1928 = icmp eq i64 %1927, 0
  br i1 %1928, label %1929, label %1908

1929:                                             ; preds = %1908, %1902
  %1930 = phi i64 [ 0, %1902 ], [ %1926, %1908 ]
  %1931 = icmp eq i64 %1904, 0
  br i1 %1931, label %1940, label %1932

1932:                                             ; preds = %1929
  %1933 = getelementptr inbounds i64, i64* %1719, i64 %1930
  %1934 = load i64, i64* %1933, align 8
  %1935 = getelementptr inbounds i64, i64* %1754, i64 %1930
  %1936 = load i64, i64* %1935, align 8
  %1937 = icmp eq i64 %1934, %1936
  %1938 = getelementptr inbounds i8, i8* %1789, i64 %1930
  %1939 = zext i1 %1937 to i8
  store i8 %1939, i8* %1938, align 1
  br label %1940

1940:                                             ; preds = %1932, %1929, %1898
  %1941 = icmp sgt i32 %1788, 5
  br i1 %1941, label %1942, label %1948

1942:                                             ; preds = %1940
  %1943 = getelementptr inbounds %"class.tflite::RuntimeShape", %"class.tflite::RuntimeShape"* %20, i64 0, i32 1, i32 0
  %1944 = load i32*, i32** %1943, align 8
  %1945 = icmp eq i32* %1944, null
  br i1 %1945, label %1948, label %1946

1946:                                             ; preds = %1942
  %1947 = bitcast i32* %1944 to i8*
  tail call void @_ZdaPv(i8* %1947) #9
  br label %1948

1948:                                             ; preds = %1946, %1942, %1940
  call void @llvm.lifetime.end.p0i8(i64 32, i8* nonnull %1755) #8
  %1949 = icmp sgt i32 %1753, 5
  br i1 %1949, label %1950, label %1956

1950:                                             ; preds = %1948
  %1951 = getelementptr inbounds %"class.tflite::RuntimeShape", %"class.tflite::RuntimeShape"* %19, i64 0, i32 1, i32 0
  %1952 = load i32*, i32** %1951, align 8
  %1953 = icmp eq i32* %1952, null
  br i1 %1953, label %1956, label %1954

1954:                                             ; preds = %1950
  %1955 = bitcast i32* %1952 to i8*
  tail call void @_ZdaPv(i8* %1955) #9
  br label %1956

1956:                                             ; preds = %1954, %1950, %1948
  call void @llvm.lifetime.end.p0i8(i64 32, i8* nonnull %1720) #8
  br i1 %1791, label %1957, label %1994

1957:                                             ; preds = %1956
  %1958 = getelementptr inbounds %"class.tflite::RuntimeShape", %"class.tflite::RuntimeShape"* %18, i64 0, i32 1, i32 0
  %1959 = load i32*, i32** %1958, align 8
  %1960 = icmp eq i32* %1959, null
  br i1 %1960, label %1994, label %1961

1961:                                             ; preds = %1957
  %1962 = bitcast i32* %1959 to i8*
  tail call void @_ZdaPv(i8* %1962) #9
  br label %1994

1963:                                             ; preds = %1676, %1654
  %1964 = phi i8* [ %1683, %1676 ], [ null, %1654 ]
  call void @_ZN6tflite13reference_ops29BroadcastComparison4DSlowImplIlXadL_ZNS0_7EqualFnIlEEbT_S3_EEEEvRKNS_16ComparisonParamsERKNS_12RuntimeShapeEPKS3_S9_SB_S9_Pb(%"struct.tflite::ComparisonParams"* nonnull dereferenceable(32) %14, %"class.tflite::RuntimeShape"* nonnull dereferenceable(32) %15, i64* %1617, %"class.tflite::RuntimeShape"* nonnull dereferenceable(32) %16, i64* %1651, %"class.tflite::RuntimeShape"* nonnull dereferenceable(32) %17, i8* %1964) #8
  %1965 = getelementptr inbounds %"class.tflite::RuntimeShape", %"class.tflite::RuntimeShape"* %17, i64 0, i32 0
  %1966 = load i32, i32* %1965, align 8
  %1967 = icmp sgt i32 %1966, 5
  br i1 %1967, label %1968, label %1974

1968:                                             ; preds = %1963
  %1969 = getelementptr inbounds %"class.tflite::RuntimeShape", %"class.tflite::RuntimeShape"* %17, i64 0, i32 1, i32 0
  %1970 = load i32*, i32** %1969, align 8
  %1971 = icmp eq i32* %1970, null
  br i1 %1971, label %1974, label %1972

1972:                                             ; preds = %1968
  %1973 = bitcast i32* %1970 to i8*
  call void @_ZdaPv(i8* %1973) #9
  br label %1974

1974:                                             ; preds = %1972, %1968, %1963
  call void @llvm.lifetime.end.p0i8(i64 32, i8* nonnull %1652) #8
  %1975 = getelementptr inbounds %"class.tflite::RuntimeShape", %"class.tflite::RuntimeShape"* %16, i64 0, i32 0
  %1976 = load i32, i32* %1975, align 8
  %1977 = icmp sgt i32 %1976, 5
  br i1 %1977, label %1978, label %1984

1978:                                             ; preds = %1974
  %1979 = getelementptr inbounds %"class.tflite::RuntimeShape", %"class.tflite::RuntimeShape"* %16, i64 0, i32 1, i32 0
  %1980 = load i32*, i32** %1979, align 8
  %1981 = icmp eq i32* %1980, null
  br i1 %1981, label %1984, label %1982

1982:                                             ; preds = %1978
  %1983 = bitcast i32* %1980 to i8*
  call void @_ZdaPv(i8* %1983) #9
  br label %1984

1984:                                             ; preds = %1982, %1978, %1974
  call void @llvm.lifetime.end.p0i8(i64 32, i8* nonnull %1618) #8
  %1985 = getelementptr inbounds %"class.tflite::RuntimeShape", %"class.tflite::RuntimeShape"* %15, i64 0, i32 0
  %1986 = load i32, i32* %1985, align 8
  %1987 = icmp sgt i32 %1986, 5
  br i1 %1987, label %1988, label %1994

1988:                                             ; preds = %1984
  %1989 = getelementptr inbounds %"class.tflite::RuntimeShape", %"class.tflite::RuntimeShape"* %15, i64 0, i32 1, i32 0
  %1990 = load i32*, i32** %1989, align 8
  %1991 = icmp eq i32* %1990, null
  br i1 %1991, label %1994, label %1992

1992:                                             ; preds = %1988
  %1993 = bitcast i32* %1990 to i8*
  call void @_ZdaPv(i8* %1993) #9
  br label %1994

1994:                                             ; preds = %1984, %1988, %1992, %1956, %1957, %1961
  %1995 = phi i8* [ %1685, %1961 ], [ %1685, %1957 ], [ %1685, %1956 ], [ %1584, %1992 ], [ %1584, %1988 ], [ %1584, %1984 ]
  call void @llvm.lifetime.end.p0i8(i64 32, i8* nonnull %1995) #8
  call void @llvm.lifetime.end.p0i8(i64 32, i8* nonnull %1582) #8
  br label %2967

1996:                                             ; preds = %85
  %1997 = getelementptr inbounds %struct.TfLiteTensor, %struct.TfLiteTensor* %64, i64 0, i32 3, i32 1
  %1998 = load i32, i32* %1997, align 4
  %1999 = sub nsw i32 0, %1998
  %2000 = getelementptr inbounds %struct.TfLiteTensor, %struct.TfLiteTensor* %74, i64 0, i32 3, i32 1
  %2001 = load i32, i32* %2000, align 4
  %2002 = sub nsw i32 0, %2001
  %2003 = bitcast i32* %3 to i8*
  call void @llvm.lifetime.start.p0i8(i64 4, i8* nonnull %2003) #8
  store i32 -1431655766, i32* %3, align 4
  %2004 = bitcast i32* %4 to i8*
  call void @llvm.lifetime.start.p0i8(i64 4, i8* nonnull %2004) #8
  store i32 -1431655766, i32* %4, align 4
  %2005 = getelementptr inbounds %struct.TfLiteTensor, %struct.TfLiteTensor* %64, i64 0, i32 3, i32 0
  %2006 = load float, float* %2005, align 8
  %2007 = fpext float %2006 to double
  call void @_ZN6tflite35QuantizeMultiplierSmallerThanOneExpEdPiS0_(double %2007, i32* nonnull %3, i32* nonnull %4) #8
  %2008 = bitcast i32* %5 to i8*
  call void @llvm.lifetime.start.p0i8(i64 4, i8* nonnull %2008) #8
  store i32 -1431655766, i32* %5, align 4
  %2009 = bitcast i32* %6 to i8*
  call void @llvm.lifetime.start.p0i8(i64 4, i8* nonnull %2009) #8
  store i32 -1431655766, i32* %6, align 4
  %2010 = getelementptr inbounds %struct.TfLiteTensor, %struct.TfLiteTensor* %74, i64 0, i32 3, i32 0
  %2011 = load float, float* %2010, align 8
  %2012 = fpext float %2011 to double
  call void @_ZN6tflite35QuantizeMultiplierSmallerThanOneExpEdPiS0_(double %2012, i32* nonnull %5, i32* nonnull %6) #8
  %2013 = bitcast %"struct.tflite::ComparisonParams"* %7 to i8*
  call void @llvm.lifetime.start.p0i8(i64 32, i8* nonnull %2013) #8
  %2014 = getelementptr inbounds %"struct.tflite::ComparisonParams", %"struct.tflite::ComparisonParams"* %7, i64 0, i32 7
  %2015 = bitcast i8* %2014 to i32*
  store i32 -1431655766, i32* %2015, align 4
  %2016 = getelementptr inbounds %"struct.tflite::ComparisonParams", %"struct.tflite::ComparisonParams"* %7, i64 0, i32 0
  store i32 8, i32* %2016, align 4
  %2017 = getelementptr inbounds %"struct.tflite::ComparisonParams", %"struct.tflite::ComparisonParams"* %7, i64 0, i32 1
  store i32 %1999, i32* %2017, align 4
  %2018 = load i32, i32* %3, align 4
  %2019 = getelementptr inbounds %"struct.tflite::ComparisonParams", %"struct.tflite::ComparisonParams"* %7, i64 0, i32 2
  store i32 %2018, i32* %2019, align 4
  %2020 = load i32, i32* %4, align 4
  %2021 = getelementptr inbounds %"struct.tflite::ComparisonParams", %"struct.tflite::ComparisonParams"* %7, i64 0, i32 3
  store i32 %2020, i32* %2021, align 4
  %2022 = getelementptr inbounds %"struct.tflite::ComparisonParams", %"struct.tflite::ComparisonParams"* %7, i64 0, i32 4
  store i32 %2002, i32* %2022, align 4
  %2023 = load i32, i32* %5, align 4
  %2024 = getelementptr inbounds %"struct.tflite::ComparisonParams", %"struct.tflite::ComparisonParams"* %7, i64 0, i32 5
  store i32 %2023, i32* %2024, align 4
  %2025 = load i32, i32* %6, align 4
  %2026 = getelementptr inbounds %"struct.tflite::ComparisonParams", %"struct.tflite::ComparisonParams"* %7, i64 0, i32 6
  store i32 %2025, i32* %2026, align 4
  br i1 %87, label %2159, label %2027

2027:                                             ; preds = %1996
  %2028 = bitcast %"class.tflite::RuntimeShape"* %8 to i8*
  call void @llvm.lifetime.start.p0i8(i64 32, i8* nonnull %2028) #8
  %2029 = icmp eq %struct.TfLiteTensor* %64, null
  br i1 %2029, label %2030, label %2032

2030:                                             ; preds = %2027
  %2031 = getelementptr inbounds %"class.tflite::RuntimeShape", %"class.tflite::RuntimeShape"* %8, i64 0, i32 0
  store i32 0, i32* %2031, align 8, !alias.scope !120
  br label %2060

2032:                                             ; preds = %2027
  %2033 = getelementptr inbounds %struct.TfLiteTensor, %struct.TfLiteTensor* %64, i64 0, i32 2
  %2034 = load %struct.TfLiteIntArray*, %struct.TfLiteIntArray** %2033, align 8, !noalias !120
  %2035 = getelementptr inbounds %struct.TfLiteIntArray, %struct.TfLiteIntArray* %2034, i64 0, i32 0
  %2036 = load i32, i32* %2035, align 4, !noalias !120
  %2037 = getelementptr inbounds %struct.TfLiteIntArray, %struct.TfLiteIntArray* %2034, i64 0, i32 1, i64 0
  %2038 = getelementptr inbounds %"class.tflite::RuntimeShape", %"class.tflite::RuntimeShape"* %8, i64 0, i32 0
  store i32 %2036, i32* %2038, align 8, !alias.scope !120
  %2039 = icmp sgt i32 %2036, 5
  br i1 %2039, label %2040, label %2047

2040:                                             ; preds = %2032
  %2041 = sext i32 %2036 to i64
  %2042 = shl nsw i64 %2041, 2
  %2043 = call i8* @_Znam(i64 %2042) #9, !noalias !120
  %2044 = getelementptr inbounds %"class.tflite::RuntimeShape", %"class.tflite::RuntimeShape"* %8, i64 0, i32 1, i32 0
  %2045 = bitcast i32** %2044 to i8**
  store i8* %2043, i8** %2045, align 8, !alias.scope !120
  %2046 = bitcast i8* %2043 to i32*
  br label %2052

2047:                                             ; preds = %2032
  %2048 = getelementptr inbounds %"class.tflite::RuntimeShape", %"class.tflite::RuntimeShape"* %8, i64 0, i32 1
  %2049 = bitcast %union.anon* %2048 to i32*
  %2050 = sext i32 %2036 to i64
  %2051 = shl nsw i64 %2050, 2
  br label %2052

2052:                                             ; preds = %2047, %2040
  %2053 = phi i64 [ %2042, %2040 ], [ %2051, %2047 ]
  %2054 = phi i32* [ %2046, %2040 ], [ %2049, %2047 ]
  %2055 = bitcast i32* %2054 to i8*
  %2056 = bitcast i32* %2037 to i8*
  call void @llvm.memcpy.p0i8.p0i8.i64(i8* align 4 %2055, i8* align 4 %2056, i64 %2053, i1 false) #8
  %2057 = getelementptr inbounds %struct.TfLiteTensor, %struct.TfLiteTensor* %64, i64 0, i32 1
  %2058 = bitcast %union.TfLitePtrUnion* %2057 to i8**
  %2059 = load i8*, i8** %2058, align 8
  br label %2060

2060:                                             ; preds = %2052, %2030
  %2061 = phi i8* [ %2059, %2052 ], [ null, %2030 ]
  %2062 = bitcast %"class.tflite::RuntimeShape"* %9 to i8*
  call void @llvm.lifetime.start.p0i8(i64 32, i8* nonnull %2062) #8
  %2063 = icmp eq %struct.TfLiteTensor* %74, null
  br i1 %2063, label %2064, label %2066

2064:                                             ; preds = %2060
  %2065 = getelementptr inbounds %"class.tflite::RuntimeShape", %"class.tflite::RuntimeShape"* %9, i64 0, i32 0
  store i32 0, i32* %2065, align 8, !alias.scope !123
  br label %2094

2066:                                             ; preds = %2060
  %2067 = getelementptr inbounds %struct.TfLiteTensor, %struct.TfLiteTensor* %74, i64 0, i32 2
  %2068 = load %struct.TfLiteIntArray*, %struct.TfLiteIntArray** %2067, align 8, !noalias !123
  %2069 = getelementptr inbounds %struct.TfLiteIntArray, %struct.TfLiteIntArray* %2068, i64 0, i32 0
  %2070 = load i32, i32* %2069, align 4, !noalias !123
  %2071 = getelementptr inbounds %struct.TfLiteIntArray, %struct.TfLiteIntArray* %2068, i64 0, i32 1, i64 0
  %2072 = getelementptr inbounds %"class.tflite::RuntimeShape", %"class.tflite::RuntimeShape"* %9, i64 0, i32 0
  store i32 %2070, i32* %2072, align 8, !alias.scope !123
  %2073 = icmp sgt i32 %2070, 5
  br i1 %2073, label %2074, label %2081

2074:                                             ; preds = %2066
  %2075 = sext i32 %2070 to i64
  %2076 = shl nsw i64 %2075, 2
  %2077 = call i8* @_Znam(i64 %2076) #9, !noalias !123
  %2078 = getelementptr inbounds %"class.tflite::RuntimeShape", %"class.tflite::RuntimeShape"* %9, i64 0, i32 1, i32 0
  %2079 = bitcast i32** %2078 to i8**
  store i8* %2077, i8** %2079, align 8, !alias.scope !123
  %2080 = bitcast i8* %2077 to i32*
  br label %2086

2081:                                             ; preds = %2066
  %2082 = getelementptr inbounds %"class.tflite::RuntimeShape", %"class.tflite::RuntimeShape"* %9, i64 0, i32 1
  %2083 = bitcast %union.anon* %2082 to i32*
  %2084 = sext i32 %2070 to i64
  %2085 = shl nsw i64 %2084, 2
  br label %2086

2086:                                             ; preds = %2081, %2074
  %2087 = phi i64 [ %2076, %2074 ], [ %2085, %2081 ]
  %2088 = phi i32* [ %2080, %2074 ], [ %2083, %2081 ]
  %2089 = bitcast i32* %2088 to i8*
  %2090 = bitcast i32* %2071 to i8*
  call void @llvm.memcpy.p0i8.p0i8.i64(i8* align 4 %2089, i8* align 4 %2090, i64 %2087, i1 false) #8
  %2091 = getelementptr inbounds %struct.TfLiteTensor, %struct.TfLiteTensor* %74, i64 0, i32 1
  %2092 = bitcast %union.TfLitePtrUnion* %2091 to i8**
  %2093 = load i8*, i8** %2092, align 8
  br label %2094

2094:                                             ; preds = %2086, %2064
  %2095 = phi i8* [ %2093, %2086 ], [ null, %2064 ]
  %2096 = bitcast %"class.tflite::RuntimeShape"* %10 to i8*
  call void @llvm.lifetime.start.p0i8(i64 32, i8* nonnull %2096) #8
  %2097 = icmp eq %struct.TfLiteTensor* %86, null
  br i1 %2097, label %2098, label %2100

2098:                                             ; preds = %2094
  %2099 = getelementptr inbounds %"class.tflite::RuntimeShape", %"class.tflite::RuntimeShape"* %10, i64 0, i32 0
  store i32 0, i32* %2099, align 8, !alias.scope !126
  br label %2128

2100:                                             ; preds = %2094
  %2101 = getelementptr inbounds %struct.TfLiteTensor, %struct.TfLiteTensor* %86, i64 0, i32 2
  %2102 = load %struct.TfLiteIntArray*, %struct.TfLiteIntArray** %2101, align 8, !noalias !126
  %2103 = getelementptr inbounds %struct.TfLiteIntArray, %struct.TfLiteIntArray* %2102, i64 0, i32 0
  %2104 = load i32, i32* %2103, align 4, !noalias !126
  %2105 = getelementptr inbounds %struct.TfLiteIntArray, %struct.TfLiteIntArray* %2102, i64 0, i32 1, i64 0
  %2106 = getelementptr inbounds %"class.tflite::RuntimeShape", %"class.tflite::RuntimeShape"* %10, i64 0, i32 0
  store i32 %2104, i32* %2106, align 8, !alias.scope !126
  %2107 = icmp sgt i32 %2104, 5
  br i1 %2107, label %2108, label %2115

2108:                                             ; preds = %2100
  %2109 = sext i32 %2104 to i64
  %2110 = shl nsw i64 %2109, 2
  %2111 = call i8* @_Znam(i64 %2110) #9, !noalias !126
  %2112 = getelementptr inbounds %"class.tflite::RuntimeShape", %"class.tflite::RuntimeShape"* %10, i64 0, i32 1, i32 0
  %2113 = bitcast i32** %2112 to i8**
  store i8* %2111, i8** %2113, align 8, !alias.scope !126
  %2114 = bitcast i8* %2111 to i32*
  br label %2120

2115:                                             ; preds = %2100
  %2116 = getelementptr inbounds %"class.tflite::RuntimeShape", %"class.tflite::RuntimeShape"* %10, i64 0, i32 1
  %2117 = bitcast %union.anon* %2116 to i32*
  %2118 = sext i32 %2104 to i64
  %2119 = shl nsw i64 %2118, 2
  br label %2120

2120:                                             ; preds = %2115, %2108
  %2121 = phi i64 [ %2110, %2108 ], [ %2119, %2115 ]
  %2122 = phi i32* [ %2114, %2108 ], [ %2117, %2115 ]
  %2123 = bitcast i32* %2122 to i8*
  %2124 = bitcast i32* %2105 to i8*
  call void @llvm.memcpy.p0i8.p0i8.i64(i8* align 4 %2123, i8* align 4 %2124, i64 %2121, i1 false) #8
  %2125 = getelementptr inbounds %struct.TfLiteTensor, %struct.TfLiteTensor* %86, i64 0, i32 1
  %2126 = bitcast %union.TfLitePtrUnion* %2125 to i8**
  %2127 = load i8*, i8** %2126, align 8
  br label %2128

2128:                                             ; preds = %2120, %2098
  %2129 = phi i8* [ %2127, %2120 ], [ null, %2098 ]
  call void @_ZN6tflite13reference_ops36BroadcastComparison4DSlowWithScalingIhXadL_ZNS0_7EqualFnIiEEbT_S3_EEEEvRKNS_16ComparisonParamsERKNS_12RuntimeShapeEPKS3_S9_SB_S9_Pb(%"struct.tflite::ComparisonParams"* nonnull dereferenceable(32) %7, %"class.tflite::RuntimeShape"* nonnull dereferenceable(32) %8, i8* %2061, %"class.tflite::RuntimeShape"* nonnull dereferenceable(32) %9, i8* %2095, %"class.tflite::RuntimeShape"* nonnull dereferenceable(32) %10, i8* %2129) #8
  %2130 = getelementptr inbounds %"class.tflite::RuntimeShape", %"class.tflite::RuntimeShape"* %10, i64 0, i32 0
  %2131 = load i32, i32* %2130, align 8
  %2132 = icmp sgt i32 %2131, 5
  br i1 %2132, label %2133, label %2139

2133:                                             ; preds = %2128
  %2134 = getelementptr inbounds %"class.tflite::RuntimeShape", %"class.tflite::RuntimeShape"* %10, i64 0, i32 1, i32 0
  %2135 = load i32*, i32** %2134, align 8
  %2136 = icmp eq i32* %2135, null
  br i1 %2136, label %2139, label %2137

2137:                                             ; preds = %2133
  %2138 = bitcast i32* %2135 to i8*
  call void @_ZdaPv(i8* %2138) #9
  br label %2139

2139:                                             ; preds = %2137, %2133, %2128
  call void @llvm.lifetime.end.p0i8(i64 32, i8* nonnull %2096) #8
  %2140 = getelementptr inbounds %"class.tflite::RuntimeShape", %"class.tflite::RuntimeShape"* %9, i64 0, i32 0
  %2141 = load i32, i32* %2140, align 8
  %2142 = icmp sgt i32 %2141, 5
  br i1 %2142, label %2143, label %2149

2143:                                             ; preds = %2139
  %2144 = getelementptr inbounds %"class.tflite::RuntimeShape", %"class.tflite::RuntimeShape"* %9, i64 0, i32 1, i32 0
  %2145 = load i32*, i32** %2144, align 8
  %2146 = icmp eq i32* %2145, null
  br i1 %2146, label %2149, label %2147

2147:                                             ; preds = %2143
  %2148 = bitcast i32* %2145 to i8*
  call void @_ZdaPv(i8* %2148) #9
  br label %2149

2149:                                             ; preds = %2147, %2143, %2139
  call void @llvm.lifetime.end.p0i8(i64 32, i8* nonnull %2062) #8
  %2150 = getelementptr inbounds %"class.tflite::RuntimeShape", %"class.tflite::RuntimeShape"* %8, i64 0, i32 0
  %2151 = load i32, i32* %2150, align 8
  %2152 = icmp sgt i32 %2151, 5
  br i1 %2152, label %2153, label %2477

2153:                                             ; preds = %2149
  %2154 = getelementptr inbounds %"class.tflite::RuntimeShape", %"class.tflite::RuntimeShape"* %8, i64 0, i32 1, i32 0
  %2155 = load i32*, i32** %2154, align 8
  %2156 = icmp eq i32* %2155, null
  br i1 %2156, label %2477, label %2157

2157:                                             ; preds = %2153
  %2158 = bitcast i32* %2155 to i8*
  call void @_ZdaPv(i8* %2158) #9
  br label %2477

2159:                                             ; preds = %1996
  %2160 = bitcast %"class.tflite::RuntimeShape"* %11 to i8*
  call void @llvm.lifetime.start.p0i8(i64 32, i8* nonnull %2160) #8
  %2161 = icmp eq %struct.TfLiteTensor* %64, null
  br i1 %2161, label %2162, label %2164

2162:                                             ; preds = %2159
  %2163 = getelementptr inbounds %"class.tflite::RuntimeShape", %"class.tflite::RuntimeShape"* %11, i64 0, i32 0
  store i32 0, i32* %2163, align 8, !alias.scope !129
  br label %2192

2164:                                             ; preds = %2159
  %2165 = getelementptr inbounds %struct.TfLiteTensor, %struct.TfLiteTensor* %64, i64 0, i32 2
  %2166 = load %struct.TfLiteIntArray*, %struct.TfLiteIntArray** %2165, align 8, !noalias !129
  %2167 = getelementptr inbounds %struct.TfLiteIntArray, %struct.TfLiteIntArray* %2166, i64 0, i32 0
  %2168 = load i32, i32* %2167, align 4, !noalias !129
  %2169 = getelementptr inbounds %struct.TfLiteIntArray, %struct.TfLiteIntArray* %2166, i64 0, i32 1, i64 0
  %2170 = getelementptr inbounds %"class.tflite::RuntimeShape", %"class.tflite::RuntimeShape"* %11, i64 0, i32 0
  store i32 %2168, i32* %2170, align 8, !alias.scope !129
  %2171 = icmp sgt i32 %2168, 5
  br i1 %2171, label %2172, label %2179

2172:                                             ; preds = %2164
  %2173 = sext i32 %2168 to i64
  %2174 = shl nsw i64 %2173, 2
  %2175 = call i8* @_Znam(i64 %2174) #9, !noalias !129
  %2176 = getelementptr inbounds %"class.tflite::RuntimeShape", %"class.tflite::RuntimeShape"* %11, i64 0, i32 1, i32 0
  %2177 = bitcast i32** %2176 to i8**
  store i8* %2175, i8** %2177, align 8, !alias.scope !129
  %2178 = bitcast i8* %2175 to i32*
  br label %2184

2179:                                             ; preds = %2164
  %2180 = getelementptr inbounds %"class.tflite::RuntimeShape", %"class.tflite::RuntimeShape"* %11, i64 0, i32 1
  %2181 = bitcast %union.anon* %2180 to i32*
  %2182 = sext i32 %2168 to i64
  %2183 = shl nsw i64 %2182, 2
  br label %2184

2184:                                             ; preds = %2179, %2172
  %2185 = phi i64 [ %2174, %2172 ], [ %2183, %2179 ]
  %2186 = phi i32* [ %2178, %2172 ], [ %2181, %2179 ]
  %2187 = bitcast i32* %2186 to i8*
  %2188 = bitcast i32* %2169 to i8*
  call void @llvm.memcpy.p0i8.p0i8.i64(i8* align 4 %2187, i8* align 4 %2188, i64 %2185, i1 false) #8
  %2189 = getelementptr inbounds %struct.TfLiteTensor, %struct.TfLiteTensor* %64, i64 0, i32 1
  %2190 = bitcast %union.TfLitePtrUnion* %2189 to i8**
  %2191 = load i8*, i8** %2190, align 8
  br label %2192

2192:                                             ; preds = %2184, %2162
  %2193 = phi i32 [ %2168, %2184 ], [ 0, %2162 ]
  %2194 = phi i8* [ %2191, %2184 ], [ null, %2162 ]
  %2195 = bitcast %"class.tflite::RuntimeShape"* %12 to i8*
  call void @llvm.lifetime.start.p0i8(i64 32, i8* nonnull %2195) #8
  %2196 = icmp eq %struct.TfLiteTensor* %74, null
  br i1 %2196, label %2197, label %2199

2197:                                             ; preds = %2192
  %2198 = getelementptr inbounds %"class.tflite::RuntimeShape", %"class.tflite::RuntimeShape"* %12, i64 0, i32 0
  store i32 0, i32* %2198, align 8, !alias.scope !132
  br label %2227

2199:                                             ; preds = %2192
  %2200 = getelementptr inbounds %struct.TfLiteTensor, %struct.TfLiteTensor* %74, i64 0, i32 2
  %2201 = load %struct.TfLiteIntArray*, %struct.TfLiteIntArray** %2200, align 8, !noalias !132
  %2202 = getelementptr inbounds %struct.TfLiteIntArray, %struct.TfLiteIntArray* %2201, i64 0, i32 0
  %2203 = load i32, i32* %2202, align 4, !noalias !132
  %2204 = getelementptr inbounds %struct.TfLiteIntArray, %struct.TfLiteIntArray* %2201, i64 0, i32 1, i64 0
  %2205 = getelementptr inbounds %"class.tflite::RuntimeShape", %"class.tflite::RuntimeShape"* %12, i64 0, i32 0
  store i32 %2203, i32* %2205, align 8, !alias.scope !132
  %2206 = icmp sgt i32 %2203, 5
  br i1 %2206, label %2207, label %2214

2207:                                             ; preds = %2199
  %2208 = sext i32 %2203 to i64
  %2209 = shl nsw i64 %2208, 2
  %2210 = call i8* @_Znam(i64 %2209) #9, !noalias !132
  %2211 = getelementptr inbounds %"class.tflite::RuntimeShape", %"class.tflite::RuntimeShape"* %12, i64 0, i32 1, i32 0
  %2212 = bitcast i32** %2211 to i8**
  store i8* %2210, i8** %2212, align 8, !alias.scope !132
  %2213 = bitcast i8* %2210 to i32*
  br label %2219

2214:                                             ; preds = %2199
  %2215 = getelementptr inbounds %"class.tflite::RuntimeShape", %"class.tflite::RuntimeShape"* %12, i64 0, i32 1
  %2216 = bitcast %union.anon* %2215 to i32*
  %2217 = sext i32 %2203 to i64
  %2218 = shl nsw i64 %2217, 2
  br label %2219

2219:                                             ; preds = %2214, %2207
  %2220 = phi i64 [ %2209, %2207 ], [ %2218, %2214 ]
  %2221 = phi i32* [ %2213, %2207 ], [ %2216, %2214 ]
  %2222 = bitcast i32* %2221 to i8*
  %2223 = bitcast i32* %2204 to i8*
  call void @llvm.memcpy.p0i8.p0i8.i64(i8* align 4 %2222, i8* align 4 %2223, i64 %2220, i1 false) #8
  %2224 = getelementptr inbounds %struct.TfLiteTensor, %struct.TfLiteTensor* %74, i64 0, i32 1
  %2225 = bitcast %union.TfLitePtrUnion* %2224 to i8**
  %2226 = load i8*, i8** %2225, align 8
  br label %2227

2227:                                             ; preds = %2219, %2197
  %2228 = phi i32 [ %2203, %2219 ], [ 0, %2197 ]
  %2229 = phi i8* [ %2226, %2219 ], [ null, %2197 ]
  %2230 = bitcast %"class.tflite::RuntimeShape"* %13 to i8*
  call void @llvm.lifetime.start.p0i8(i64 32, i8* nonnull %2230) #8
  %2231 = icmp eq %struct.TfLiteTensor* %86, null
  br i1 %2231, label %2232, label %2234

2232:                                             ; preds = %2227
  %2233 = getelementptr inbounds %"class.tflite::RuntimeShape", %"class.tflite::RuntimeShape"* %13, i64 0, i32 0
  store i32 0, i32* %2233, align 8, !alias.scope !135
  br label %2262

2234:                                             ; preds = %2227
  %2235 = getelementptr inbounds %struct.TfLiteTensor, %struct.TfLiteTensor* %86, i64 0, i32 2
  %2236 = load %struct.TfLiteIntArray*, %struct.TfLiteIntArray** %2235, align 8, !noalias !135
  %2237 = getelementptr inbounds %struct.TfLiteIntArray, %struct.TfLiteIntArray* %2236, i64 0, i32 0
  %2238 = load i32, i32* %2237, align 4, !noalias !135
  %2239 = getelementptr inbounds %struct.TfLiteIntArray, %struct.TfLiteIntArray* %2236, i64 0, i32 1, i64 0
  %2240 = getelementptr inbounds %"class.tflite::RuntimeShape", %"class.tflite::RuntimeShape"* %13, i64 0, i32 0
  store i32 %2238, i32* %2240, align 8, !alias.scope !135
  %2241 = icmp sgt i32 %2238, 5
  br i1 %2241, label %2242, label %2249

2242:                                             ; preds = %2234
  %2243 = sext i32 %2238 to i64
  %2244 = shl nsw i64 %2243, 2
  %2245 = call i8* @_Znam(i64 %2244) #9, !noalias !135
  %2246 = getelementptr inbounds %"class.tflite::RuntimeShape", %"class.tflite::RuntimeShape"* %13, i64 0, i32 1, i32 0
  %2247 = bitcast i32** %2246 to i8**
  store i8* %2245, i8** %2247, align 8, !alias.scope !135
  %2248 = bitcast i8* %2245 to i32*
  br label %2254

2249:                                             ; preds = %2234
  %2250 = getelementptr inbounds %"class.tflite::RuntimeShape", %"class.tflite::RuntimeShape"* %13, i64 0, i32 1
  %2251 = bitcast %union.anon* %2250 to i32*
  %2252 = sext i32 %2238 to i64
  %2253 = shl nsw i64 %2252, 2
  br label %2254

2254:                                             ; preds = %2249, %2242
  %2255 = phi i64 [ %2244, %2242 ], [ %2253, %2249 ]
  %2256 = phi i32* [ %2248, %2242 ], [ %2251, %2249 ]
  %2257 = bitcast i32* %2256 to i8*
  %2258 = bitcast i32* %2239 to i8*
  call void @llvm.memcpy.p0i8.p0i8.i64(i8* align 4 %2257, i8* align 4 %2258, i64 %2255, i1 false) #8
  %2259 = getelementptr inbounds %struct.TfLiteTensor, %struct.TfLiteTensor* %86, i64 0, i32 1
  %2260 = bitcast %union.TfLitePtrUnion* %2259 to i8**
  %2261 = load i8*, i8** %2260, align 8
  br label %2262

2262:                                             ; preds = %2254, %2232
  %2263 = phi i32 [ %2238, %2254 ], [ 0, %2232 ]
  %2264 = phi i8* [ %2261, %2254 ], [ null, %2232 ]
  %2265 = getelementptr inbounds %"class.tflite::RuntimeShape", %"class.tflite::RuntimeShape"* %11, i64 0, i32 1
  %2266 = icmp sgt i32 %2193, 5
  br i1 %2266, label %2267, label %2270

2267:                                             ; preds = %2262
  %2268 = getelementptr inbounds %union.anon, %union.anon* %2265, i64 0, i32 0
  %2269 = load i32*, i32** %2268, align 8
  br label %2273

2270:                                             ; preds = %2262
  %2271 = bitcast %union.anon* %2265 to i32*
  %2272 = icmp sgt i32 %2193, 0
  br i1 %2272, label %2273, label %2377

2273:                                             ; preds = %2270, %2267
  %2274 = phi i32* [ %2269, %2267 ], [ %2271, %2270 ]
  %2275 = zext i32 %2193 to i64
  %2276 = icmp ult i32 %2193, 8
  br i1 %2276, label %2362, label %2277

2277:                                             ; preds = %2273
  %2278 = and i64 %2275, 4294967288
  %2279 = add nsw i64 %2278, -8
  %2280 = lshr exact i64 %2279, 3
  %2281 = add nuw nsw i64 %2280, 1
  %2282 = and i64 %2281, 3
  %2283 = icmp ult i64 %2279, 24
  br i1 %2283, label %2329, label %2284

2284:                                             ; preds = %2277
  %2285 = sub nsw i64 %2281, %2282
  br label %2286

2286:                                             ; preds = %2286, %2284
  %2287 = phi i64 [ 0, %2284 ], [ %2326, %2286 ]
  %2288 = phi <4 x i32> [ <i32 1, i32 1, i32 1, i32 1>, %2284 ], [ %2324, %2286 ]
  %2289 = phi <4 x i32> [ <i32 1, i32 1, i32 1, i32 1>, %2284 ], [ %2325, %2286 ]
  %2290 = phi i64 [ %2285, %2284 ], [ %2327, %2286 ]
  %2291 = getelementptr inbounds i32, i32* %2274, i64 %2287
  %2292 = bitcast i32* %2291 to <4 x i32>*
  %2293 = load <4 x i32>, <4 x i32>* %2292, align 4
  %2294 = getelementptr inbounds i32, i32* %2291, i64 4
  %2295 = bitcast i32* %2294 to <4 x i32>*
  %2296 = load <4 x i32>, <4 x i32>* %2295, align 4
  %2297 = mul nsw <4 x i32> %2293, %2288
  %2298 = mul nsw <4 x i32> %2296, %2289
  %2299 = or i64 %2287, 8
  %2300 = getelementptr inbounds i32, i32* %2274, i64 %2299
  %2301 = bitcast i32* %2300 to <4 x i32>*
  %2302 = load <4 x i32>, <4 x i32>* %2301, align 4
  %2303 = getelementptr inbounds i32, i32* %2300, i64 4
  %2304 = bitcast i32* %2303 to <4 x i32>*
  %2305 = load <4 x i32>, <4 x i32>* %2304, align 4
  %2306 = mul nsw <4 x i32> %2302, %2297
  %2307 = mul nsw <4 x i32> %2305, %2298
  %2308 = or i64 %2287, 16
  %2309 = getelementptr inbounds i32, i32* %2274, i64 %2308
  %2310 = bitcast i32* %2309 to <4 x i32>*
  %2311 = load <4 x i32>, <4 x i32>* %2310, align 4
  %2312 = getelementptr inbounds i32, i32* %2309, i64 4
  %2313 = bitcast i32* %2312 to <4 x i32>*
  %2314 = load <4 x i32>, <4 x i32>* %2313, align 4
  %2315 = mul nsw <4 x i32> %2311, %2306
  %2316 = mul nsw <4 x i32> %2314, %2307
  %2317 = or i64 %2287, 24
  %2318 = getelementptr inbounds i32, i32* %2274, i64 %2317
  %2319 = bitcast i32* %2318 to <4 x i32>*
  %2320 = load <4 x i32>, <4 x i32>* %2319, align 4
  %2321 = getelementptr inbounds i32, i32* %2318, i64 4
  %2322 = bitcast i32* %2321 to <4 x i32>*
  %2323 = load <4 x i32>, <4 x i32>* %2322, align 4
  %2324 = mul nsw <4 x i32> %2320, %2315
  %2325 = mul nsw <4 x i32> %2323, %2316
  %2326 = add i64 %2287, 32
  %2327 = add i64 %2290, -4
  %2328 = icmp eq i64 %2327, 0
  br i1 %2328, label %2329, label %2286, !llvm.loop !138

2329:                                             ; preds = %2286, %2277
  %2330 = phi <4 x i32> [ undef, %2277 ], [ %2324, %2286 ]
  %2331 = phi <4 x i32> [ undef, %2277 ], [ %2325, %2286 ]
  %2332 = phi i64 [ 0, %2277 ], [ %2326, %2286 ]
  %2333 = phi <4 x i32> [ <i32 1, i32 1, i32 1, i32 1>, %2277 ], [ %2324, %2286 ]
  %2334 = phi <4 x i32> [ <i32 1, i32 1, i32 1, i32 1>, %2277 ], [ %2325, %2286 ]
  %2335 = icmp eq i64 %2282, 0
  br i1 %2335, label %2352, label %2336

2336:                                             ; preds = %2329, %2336
  %2337 = phi i64 [ %2349, %2336 ], [ %2332, %2329 ]
  %2338 = phi <4 x i32> [ %2347, %2336 ], [ %2333, %2329 ]
  %2339 = phi <4 x i32> [ %2348, %2336 ], [ %2334, %2329 ]
  %2340 = phi i64 [ %2350, %2336 ], [ %2282, %2329 ]
  %2341 = getelementptr inbounds i32, i32* %2274, i64 %2337
  %2342 = bitcast i32* %2341 to <4 x i32>*
  %2343 = load <4 x i32>, <4 x i32>* %2342, align 4
  %2344 = getelementptr inbounds i32, i32* %2341, i64 4
  %2345 = bitcast i32* %2344 to <4 x i32>*
  %2346 = load <4 x i32>, <4 x i32>* %2345, align 4
  %2347 = mul nsw <4 x i32> %2343, %2338
  %2348 = mul nsw <4 x i32> %2346, %2339
  %2349 = add i64 %2337, 8
  %2350 = add i64 %2340, -1
  %2351 = icmp eq i64 %2350, 0
  br i1 %2351, label %2352, label %2336, !llvm.loop !139

2352:                                             ; preds = %2336, %2329
  %2353 = phi <4 x i32> [ %2330, %2329 ], [ %2347, %2336 ]
  %2354 = phi <4 x i32> [ %2331, %2329 ], [ %2348, %2336 ]
  %2355 = mul <4 x i32> %2354, %2353
  %2356 = shufflevector <4 x i32> %2355, <4 x i32> undef, <4 x i32> <i32 2, i32 3, i32 undef, i32 undef>
  %2357 = mul <4 x i32> %2355, %2356
  %2358 = shufflevector <4 x i32> %2357, <4 x i32> undef, <4 x i32> <i32 1, i32 undef, i32 undef, i32 undef>
  %2359 = mul <4 x i32> %2357, %2358
  %2360 = extractelement <4 x i32> %2359, i32 0
  %2361 = icmp eq i64 %2278, %2275
  br i1 %2361, label %2373, label %2362

2362:                                             ; preds = %2352, %2273
  %2363 = phi i64 [ 0, %2273 ], [ %2278, %2352 ]
  %2364 = phi i32 [ 1, %2273 ], [ %2360, %2352 ]
  br label %2365

2365:                                             ; preds = %2362, %2365
  %2366 = phi i64 [ %2371, %2365 ], [ %2363, %2362 ]
  %2367 = phi i32 [ %2370, %2365 ], [ %2364, %2362 ]
  %2368 = getelementptr inbounds i32, i32* %2274, i64 %2366
  %2369 = load i32, i32* %2368, align 4
  %2370 = mul nsw i32 %2369, %2367
  %2371 = add nuw nsw i64 %2366, 1
  %2372 = icmp eq i64 %2371, %2275
  br i1 %2372, label %2373, label %2365, !llvm.loop !140

2373:                                             ; preds = %2365, %2352
  %2374 = phi i32 [ %2360, %2352 ], [ %2370, %2365 ]
  %2375 = sext i32 %2374 to i64
  %2376 = icmp sgt i32 %2374, 0
  br i1 %2376, label %2377, label %2454

2377:                                             ; preds = %2373, %2270
  %2378 = phi i64 [ %2375, %2373 ], [ 1, %2270 ]
  %2379 = sext i32 %2018 to i64
  %2380 = sub nsw i32 0, %2020
  %2381 = zext i32 %2380 to i64
  %2382 = shl nsw i64 -1, %2381
  %2383 = trunc i64 %2382 to i32
  %2384 = xor i32 %2383, -1
  %2385 = ashr i32 %2384, 1
  %2386 = sext i32 %2023 to i64
  %2387 = sub nsw i32 0, %2025
  %2388 = zext i32 %2387 to i64
  %2389 = shl nsw i64 -1, %2388
  %2390 = trunc i64 %2389 to i32
  %2391 = xor i32 %2390, -1
  %2392 = ashr i32 %2391, 1
  %2393 = icmp eq i32 %2018, -2147483648
  %2394 = icmp eq i32 %2023, -2147483648
  br label %2395

2395:                                             ; preds = %2440, %2377
  %2396 = phi i64 [ 0, %2377 ], [ %2452, %2440 ]
  %2397 = getelementptr inbounds i8, i8* %2194, i64 %2396
  %2398 = load i8, i8* %2397, align 1
  %2399 = zext i8 %2398 to i32
  %2400 = sub i32 %2399, %1998
  %2401 = getelementptr inbounds i8, i8* %2229, i64 %2396
  %2402 = load i8, i8* %2401, align 1
  %2403 = zext i8 %2402 to i32
  %2404 = sub i32 %2403, %2001
  %2405 = shl i32 %2400, 8
  %2406 = shl i32 %2404, 8
  %2407 = icmp eq i32 %2405, %2018
  br i1 %2407, label %2410, label %2408

2408:                                             ; preds = %2395
  %2409 = sext i32 %2405 to i64
  br label %2411

2410:                                             ; preds = %2395
  br i1 %2393, label %2419, label %2411

2411:                                             ; preds = %2410, %2408
  %2412 = phi i64 [ %2409, %2408 ], [ %2379, %2410 ]
  %2413 = mul nsw i64 %2412, %2379
  %2414 = icmp sgt i64 %2413, -1
  %2415 = select i1 %2414, i64 1073741824, i64 -1073741823
  %2416 = add nsw i64 %2415, %2413
  %2417 = sdiv i64 %2416, 2147483648
  %2418 = trunc i64 %2417 to i32
  br label %2419

2419:                                             ; preds = %2411, %2410
  %2420 = phi i32 [ %2418, %2411 ], [ 2147483647, %2410 ]
  %2421 = and i32 %2420, %2384
  %2422 = lshr i32 %2420, 31
  %2423 = add nsw i32 %2422, %2385
  %2424 = ashr i32 %2420, %2380
  %2425 = icmp sgt i32 %2421, %2423
  %2426 = zext i1 %2425 to i32
  %2427 = add nsw i32 %2424, %2426
  %2428 = icmp eq i32 %2406, %2023
  br i1 %2428, label %2431, label %2429

2429:                                             ; preds = %2419
  %2430 = sext i32 %2406 to i64
  br label %2432

2431:                                             ; preds = %2419
  br i1 %2394, label %2440, label %2432

2432:                                             ; preds = %2431, %2429
  %2433 = phi i64 [ %2430, %2429 ], [ %2386, %2431 ]
  %2434 = mul nsw i64 %2433, %2386
  %2435 = icmp sgt i64 %2434, -1
  %2436 = select i1 %2435, i64 1073741824, i64 -1073741823
  %2437 = add nsw i64 %2436, %2434
  %2438 = sdiv i64 %2437, 2147483648
  %2439 = trunc i64 %2438 to i32
  br label %2440

2440:                                             ; preds = %2432, %2431
  %2441 = phi i32 [ %2439, %2432 ], [ 2147483647, %2431 ]
  %2442 = and i32 %2441, %2391
  %2443 = lshr i32 %2441, 31
  %2444 = add nsw i32 %2443, %2392
  %2445 = ashr i32 %2441, %2387
  %2446 = icmp sgt i32 %2442, %2444
  %2447 = zext i1 %2446 to i32
  %2448 = add nsw i32 %2445, %2447
  %2449 = icmp eq i32 %2427, %2448
  %2450 = getelementptr inbounds i8, i8* %2264, i64 %2396
  %2451 = zext i1 %2449 to i8
  store i8 %2451, i8* %2450, align 1
  %2452 = add nuw nsw i64 %2396, 1
  %2453 = icmp eq i64 %2452, %2378
  br i1 %2453, label %2454, label %2395

2454:                                             ; preds = %2440, %2373
  %2455 = icmp sgt i32 %2263, 5
  br i1 %2455, label %2456, label %2462

2456:                                             ; preds = %2454
  %2457 = getelementptr inbounds %"class.tflite::RuntimeShape", %"class.tflite::RuntimeShape"* %13, i64 0, i32 1, i32 0
  %2458 = load i32*, i32** %2457, align 8
  %2459 = icmp eq i32* %2458, null
  br i1 %2459, label %2462, label %2460

2460:                                             ; preds = %2456
  %2461 = bitcast i32* %2458 to i8*
  call void @_ZdaPv(i8* %2461) #9
  br label %2462

2462:                                             ; preds = %2460, %2456, %2454
  call void @llvm.lifetime.end.p0i8(i64 32, i8* nonnull %2230) #8
  %2463 = icmp sgt i32 %2228, 5
  br i1 %2463, label %2464, label %2470

2464:                                             ; preds = %2462
  %2465 = getelementptr inbounds %"class.tflite::RuntimeShape", %"class.tflite::RuntimeShape"* %12, i64 0, i32 1, i32 0
  %2466 = load i32*, i32** %2465, align 8
  %2467 = icmp eq i32* %2466, null
  br i1 %2467, label %2470, label %2468

2468:                                             ; preds = %2464
  %2469 = bitcast i32* %2466 to i8*
  call void @_ZdaPv(i8* %2469) #9
  br label %2470

2470:                                             ; preds = %2468, %2464, %2462
  call void @llvm.lifetime.end.p0i8(i64 32, i8* nonnull %2195) #8
  br i1 %2266, label %2471, label %2477

2471:                                             ; preds = %2470
  %2472 = getelementptr inbounds %"class.tflite::RuntimeShape", %"class.tflite::RuntimeShape"* %11, i64 0, i32 1, i32 0
  %2473 = load i32*, i32** %2472, align 8
  %2474 = icmp eq i32* %2473, null
  br i1 %2474, label %2477, label %2475

2475:                                             ; preds = %2471
  %2476 = bitcast i32* %2473 to i8*
  call void @_ZdaPv(i8* %2476) #9
  br label %2477

2477:                                             ; preds = %2470, %2471, %2475, %2149, %2153, %2157
  %2478 = phi i8* [ %2028, %2157 ], [ %2028, %2153 ], [ %2028, %2149 ], [ %2160, %2475 ], [ %2160, %2471 ], [ %2160, %2470 ]
  call void @llvm.lifetime.end.p0i8(i64 32, i8* nonnull %2478) #8
  call void @llvm.lifetime.end.p0i8(i64 32, i8* nonnull %2013) #8
  call void @llvm.lifetime.end.p0i8(i64 4, i8* nonnull %2009) #8
  call void @llvm.lifetime.end.p0i8(i64 4, i8* nonnull %2008) #8
  call void @llvm.lifetime.end.p0i8(i64 4, i8* nonnull %2004) #8
  call void @llvm.lifetime.end.p0i8(i64 4, i8* nonnull %2003) #8
  br label %2967

2479:                                             ; preds = %85
  %2480 = getelementptr inbounds %struct.TfLiteTensor, %struct.TfLiteTensor* %64, i64 0, i32 3, i32 1
  %2481 = load i32, i32* %2480, align 4
  %2482 = sub nsw i32 0, %2481
  %2483 = getelementptr inbounds %struct.TfLiteTensor, %struct.TfLiteTensor* %74, i64 0, i32 3, i32 1
  %2484 = load i32, i32* %2483, align 4
  %2485 = sub nsw i32 0, %2484
  %2486 = bitcast i32* %42 to i8*
  call void @llvm.lifetime.start.p0i8(i64 4, i8* nonnull %2486) #8
  store i32 -1431655766, i32* %42, align 4
  %2487 = bitcast i32* %43 to i8*
  call void @llvm.lifetime.start.p0i8(i64 4, i8* nonnull %2487) #8
  store i32 -1431655766, i32* %43, align 4
  %2488 = getelementptr inbounds %struct.TfLiteTensor, %struct.TfLiteTensor* %64, i64 0, i32 3, i32 0
  %2489 = load float, float* %2488, align 8
  %2490 = fpext float %2489 to double
  call void @_ZN6tflite35QuantizeMultiplierSmallerThanOneExpEdPiS0_(double %2490, i32* nonnull %42, i32* nonnull %43) #8
  %2491 = bitcast i32* %44 to i8*
  call void @llvm.lifetime.start.p0i8(i64 4, i8* nonnull %2491) #8
  store i32 -1431655766, i32* %44, align 4
  %2492 = bitcast i32* %45 to i8*
  call void @llvm.lifetime.start.p0i8(i64 4, i8* nonnull %2492) #8
  store i32 -1431655766, i32* %45, align 4
  %2493 = getelementptr inbounds %struct.TfLiteTensor, %struct.TfLiteTensor* %74, i64 0, i32 3, i32 0
  %2494 = load float, float* %2493, align 8
  %2495 = fpext float %2494 to double
  call void @_ZN6tflite35QuantizeMultiplierSmallerThanOneExpEdPiS0_(double %2495, i32* nonnull %44, i32* nonnull %45) #8
  %2496 = bitcast %"struct.tflite::ComparisonParams"* %46 to i8*
  call void @llvm.lifetime.start.p0i8(i64 32, i8* nonnull %2496) #8
  %2497 = getelementptr inbounds %"struct.tflite::ComparisonParams", %"struct.tflite::ComparisonParams"* %46, i64 0, i32 7
  %2498 = bitcast i8* %2497 to i32*
  store i32 -1431655766, i32* %2498, align 4
  %2499 = getelementptr inbounds %"struct.tflite::ComparisonParams", %"struct.tflite::ComparisonParams"* %46, i64 0, i32 0
  store i32 8, i32* %2499, align 4
  %2500 = getelementptr inbounds %"struct.tflite::ComparisonParams", %"struct.tflite::ComparisonParams"* %46, i64 0, i32 1
  store i32 %2482, i32* %2500, align 4
  %2501 = load i32, i32* %42, align 4
  %2502 = getelementptr inbounds %"struct.tflite::ComparisonParams", %"struct.tflite::ComparisonParams"* %46, i64 0, i32 2
  store i32 %2501, i32* %2502, align 4
  %2503 = load i32, i32* %43, align 4
  %2504 = getelementptr inbounds %"struct.tflite::ComparisonParams", %"struct.tflite::ComparisonParams"* %46, i64 0, i32 3
  store i32 %2503, i32* %2504, align 4
  %2505 = getelementptr inbounds %"struct.tflite::ComparisonParams", %"struct.tflite::ComparisonParams"* %46, i64 0, i32 4
  store i32 %2485, i32* %2505, align 4
  %2506 = load i32, i32* %44, align 4
  %2507 = getelementptr inbounds %"struct.tflite::ComparisonParams", %"struct.tflite::ComparisonParams"* %46, i64 0, i32 5
  store i32 %2506, i32* %2507, align 4
  %2508 = load i32, i32* %45, align 4
  %2509 = getelementptr inbounds %"struct.tflite::ComparisonParams", %"struct.tflite::ComparisonParams"* %46, i64 0, i32 6
  store i32 %2508, i32* %2509, align 4
  br i1 %87, label %2642, label %2510

2510:                                             ; preds = %2479
  %2511 = bitcast %"class.tflite::RuntimeShape"* %47 to i8*
  call void @llvm.lifetime.start.p0i8(i64 32, i8* nonnull %2511) #8
  %2512 = icmp eq %struct.TfLiteTensor* %64, null
  br i1 %2512, label %2513, label %2515

2513:                                             ; preds = %2510
  %2514 = getelementptr inbounds %"class.tflite::RuntimeShape", %"class.tflite::RuntimeShape"* %47, i64 0, i32 0
  store i32 0, i32* %2514, align 8, !alias.scope !141
  br label %2543

2515:                                             ; preds = %2510
  %2516 = getelementptr inbounds %struct.TfLiteTensor, %struct.TfLiteTensor* %64, i64 0, i32 2
  %2517 = load %struct.TfLiteIntArray*, %struct.TfLiteIntArray** %2516, align 8, !noalias !141
  %2518 = getelementptr inbounds %struct.TfLiteIntArray, %struct.TfLiteIntArray* %2517, i64 0, i32 0
  %2519 = load i32, i32* %2518, align 4, !noalias !141
  %2520 = getelementptr inbounds %struct.TfLiteIntArray, %struct.TfLiteIntArray* %2517, i64 0, i32 1, i64 0
  %2521 = getelementptr inbounds %"class.tflite::RuntimeShape", %"class.tflite::RuntimeShape"* %47, i64 0, i32 0
  store i32 %2519, i32* %2521, align 8, !alias.scope !141
  %2522 = icmp sgt i32 %2519, 5
  br i1 %2522, label %2523, label %2530

2523:                                             ; preds = %2515
  %2524 = sext i32 %2519 to i64
  %2525 = shl nsw i64 %2524, 2
  %2526 = call i8* @_Znam(i64 %2525) #9, !noalias !141
  %2527 = getelementptr inbounds %"class.tflite::RuntimeShape", %"class.tflite::RuntimeShape"* %47, i64 0, i32 1, i32 0
  %2528 = bitcast i32** %2527 to i8**
  store i8* %2526, i8** %2528, align 8, !alias.scope !141
  %2529 = bitcast i8* %2526 to i32*
  br label %2535

2530:                                             ; preds = %2515
  %2531 = getelementptr inbounds %"class.tflite::RuntimeShape", %"class.tflite::RuntimeShape"* %47, i64 0, i32 1
  %2532 = bitcast %union.anon* %2531 to i32*
  %2533 = sext i32 %2519 to i64
  %2534 = shl nsw i64 %2533, 2
  br label %2535

2535:                                             ; preds = %2530, %2523
  %2536 = phi i64 [ %2525, %2523 ], [ %2534, %2530 ]
  %2537 = phi i32* [ %2529, %2523 ], [ %2532, %2530 ]
  %2538 = bitcast i32* %2537 to i8*
  %2539 = bitcast i32* %2520 to i8*
  call void @llvm.memcpy.p0i8.p0i8.i64(i8* align 4 %2538, i8* align 4 %2539, i64 %2536, i1 false) #8
  %2540 = getelementptr inbounds %struct.TfLiteTensor, %struct.TfLiteTensor* %64, i64 0, i32 1
  %2541 = bitcast %union.TfLitePtrUnion* %2540 to i8**
  %2542 = load i8*, i8** %2541, align 8
  br label %2543

2543:                                             ; preds = %2535, %2513
  %2544 = phi i8* [ %2542, %2535 ], [ null, %2513 ]
  %2545 = bitcast %"class.tflite::RuntimeShape"* %48 to i8*
  call void @llvm.lifetime.start.p0i8(i64 32, i8* nonnull %2545) #8
  %2546 = icmp eq %struct.TfLiteTensor* %74, null
  br i1 %2546, label %2547, label %2549

2547:                                             ; preds = %2543
  %2548 = getelementptr inbounds %"class.tflite::RuntimeShape", %"class.tflite::RuntimeShape"* %48, i64 0, i32 0
  store i32 0, i32* %2548, align 8, !alias.scope !144
  br label %2577

2549:                                             ; preds = %2543
  %2550 = getelementptr inbounds %struct.TfLiteTensor, %struct.TfLiteTensor* %74, i64 0, i32 2
  %2551 = load %struct.TfLiteIntArray*, %struct.TfLiteIntArray** %2550, align 8, !noalias !144
  %2552 = getelementptr inbounds %struct.TfLiteIntArray, %struct.TfLiteIntArray* %2551, i64 0, i32 0
  %2553 = load i32, i32* %2552, align 4, !noalias !144
  %2554 = getelementptr inbounds %struct.TfLiteIntArray, %struct.TfLiteIntArray* %2551, i64 0, i32 1, i64 0
  %2555 = getelementptr inbounds %"class.tflite::RuntimeShape", %"class.tflite::RuntimeShape"* %48, i64 0, i32 0
  store i32 %2553, i32* %2555, align 8, !alias.scope !144
  %2556 = icmp sgt i32 %2553, 5
  br i1 %2556, label %2557, label %2564

2557:                                             ; preds = %2549
  %2558 = sext i32 %2553 to i64
  %2559 = shl nsw i64 %2558, 2
  %2560 = call i8* @_Znam(i64 %2559) #9, !noalias !144
  %2561 = getelementptr inbounds %"class.tflite::RuntimeShape", %"class.tflite::RuntimeShape"* %48, i64 0, i32 1, i32 0
  %2562 = bitcast i32** %2561 to i8**
  store i8* %2560, i8** %2562, align 8, !alias.scope !144
  %2563 = bitcast i8* %2560 to i32*
  br label %2569

2564:                                             ; preds = %2549
  %2565 = getelementptr inbounds %"class.tflite::RuntimeShape", %"class.tflite::RuntimeShape"* %48, i64 0, i32 1
  %2566 = bitcast %union.anon* %2565 to i32*
  %2567 = sext i32 %2553 to i64
  %2568 = shl nsw i64 %2567, 2
  br label %2569

2569:                                             ; preds = %2564, %2557
  %2570 = phi i64 [ %2559, %2557 ], [ %2568, %2564 ]
  %2571 = phi i32* [ %2563, %2557 ], [ %2566, %2564 ]
  %2572 = bitcast i32* %2571 to i8*
  %2573 = bitcast i32* %2554 to i8*
  call void @llvm.memcpy.p0i8.p0i8.i64(i8* align 4 %2572, i8* align 4 %2573, i64 %2570, i1 false) #8
  %2574 = getelementptr inbounds %struct.TfLiteTensor, %struct.TfLiteTensor* %74, i64 0, i32 1
  %2575 = bitcast %union.TfLitePtrUnion* %2574 to i8**
  %2576 = load i8*, i8** %2575, align 8
  br label %2577

2577:                                             ; preds = %2569, %2547
  %2578 = phi i8* [ %2576, %2569 ], [ null, %2547 ]
  %2579 = bitcast %"class.tflite::RuntimeShape"* %49 to i8*
  call void @llvm.lifetime.start.p0i8(i64 32, i8* nonnull %2579) #8
  %2580 = icmp eq %struct.TfLiteTensor* %86, null
  br i1 %2580, label %2581, label %2583

2581:                                             ; preds = %2577
  %2582 = getelementptr inbounds %"class.tflite::RuntimeShape", %"class.tflite::RuntimeShape"* %49, i64 0, i32 0
  store i32 0, i32* %2582, align 8, !alias.scope !147
  br label %2611

2583:                                             ; preds = %2577
  %2584 = getelementptr inbounds %struct.TfLiteTensor, %struct.TfLiteTensor* %86, i64 0, i32 2
  %2585 = load %struct.TfLiteIntArray*, %struct.TfLiteIntArray** %2584, align 8, !noalias !147
  %2586 = getelementptr inbounds %struct.TfLiteIntArray, %struct.TfLiteIntArray* %2585, i64 0, i32 0
  %2587 = load i32, i32* %2586, align 4, !noalias !147
  %2588 = getelementptr inbounds %struct.TfLiteIntArray, %struct.TfLiteIntArray* %2585, i64 0, i32 1, i64 0
  %2589 = getelementptr inbounds %"class.tflite::RuntimeShape", %"class.tflite::RuntimeShape"* %49, i64 0, i32 0
  store i32 %2587, i32* %2589, align 8, !alias.scope !147
  %2590 = icmp sgt i32 %2587, 5
  br i1 %2590, label %2591, label %2598

2591:                                             ; preds = %2583
  %2592 = sext i32 %2587 to i64
  %2593 = shl nsw i64 %2592, 2
  %2594 = call i8* @_Znam(i64 %2593) #9, !noalias !147
  %2595 = getelementptr inbounds %"class.tflite::RuntimeShape", %"class.tflite::RuntimeShape"* %49, i64 0, i32 1, i32 0
  %2596 = bitcast i32** %2595 to i8**
  store i8* %2594, i8** %2596, align 8, !alias.scope !147
  %2597 = bitcast i8* %2594 to i32*
  br label %2603

2598:                                             ; preds = %2583
  %2599 = getelementptr inbounds %"class.tflite::RuntimeShape", %"class.tflite::RuntimeShape"* %49, i64 0, i32 1
  %2600 = bitcast %union.anon* %2599 to i32*
  %2601 = sext i32 %2587 to i64
  %2602 = shl nsw i64 %2601, 2
  br label %2603

2603:                                             ; preds = %2598, %2591
  %2604 = phi i64 [ %2593, %2591 ], [ %2602, %2598 ]
  %2605 = phi i32* [ %2597, %2591 ], [ %2600, %2598 ]
  %2606 = bitcast i32* %2605 to i8*
  %2607 = bitcast i32* %2588 to i8*
  call void @llvm.memcpy.p0i8.p0i8.i64(i8* align 4 %2606, i8* align 4 %2607, i64 %2604, i1 false) #8
  %2608 = getelementptr inbounds %struct.TfLiteTensor, %struct.TfLiteTensor* %86, i64 0, i32 1
  %2609 = bitcast %union.TfLitePtrUnion* %2608 to i8**
  %2610 = load i8*, i8** %2609, align 8
  br label %2611

2611:                                             ; preds = %2603, %2581
  %2612 = phi i8* [ %2610, %2603 ], [ null, %2581 ]
  call void @_ZN6tflite13reference_ops36BroadcastComparison4DSlowWithScalingIaXadL_ZNS0_7EqualFnIiEEbT_S3_EEEEvRKNS_16ComparisonParamsERKNS_12RuntimeShapeEPKS3_S9_SB_S9_Pb(%"struct.tflite::ComparisonParams"* nonnull dereferenceable(32) %46, %"class.tflite::RuntimeShape"* nonnull dereferenceable(32) %47, i8* %2544, %"class.tflite::RuntimeShape"* nonnull dereferenceable(32) %48, i8* %2578, %"class.tflite::RuntimeShape"* nonnull dereferenceable(32) %49, i8* %2612) #8
  %2613 = getelementptr inbounds %"class.tflite::RuntimeShape", %"class.tflite::RuntimeShape"* %49, i64 0, i32 0
  %2614 = load i32, i32* %2613, align 8
  %2615 = icmp sgt i32 %2614, 5
  br i1 %2615, label %2616, label %2622

2616:                                             ; preds = %2611
  %2617 = getelementptr inbounds %"class.tflite::RuntimeShape", %"class.tflite::RuntimeShape"* %49, i64 0, i32 1, i32 0
  %2618 = load i32*, i32** %2617, align 8
  %2619 = icmp eq i32* %2618, null
  br i1 %2619, label %2622, label %2620

2620:                                             ; preds = %2616
  %2621 = bitcast i32* %2618 to i8*
  call void @_ZdaPv(i8* %2621) #9
  br label %2622

2622:                                             ; preds = %2620, %2616, %2611
  call void @llvm.lifetime.end.p0i8(i64 32, i8* nonnull %2579) #8
  %2623 = getelementptr inbounds %"class.tflite::RuntimeShape", %"class.tflite::RuntimeShape"* %48, i64 0, i32 0
  %2624 = load i32, i32* %2623, align 8
  %2625 = icmp sgt i32 %2624, 5
  br i1 %2625, label %2626, label %2632

2626:                                             ; preds = %2622
  %2627 = getelementptr inbounds %"class.tflite::RuntimeShape", %"class.tflite::RuntimeShape"* %48, i64 0, i32 1, i32 0
  %2628 = load i32*, i32** %2627, align 8
  %2629 = icmp eq i32* %2628, null
  br i1 %2629, label %2632, label %2630

2630:                                             ; preds = %2626
  %2631 = bitcast i32* %2628 to i8*
  call void @_ZdaPv(i8* %2631) #9
  br label %2632

2632:                                             ; preds = %2630, %2626, %2622
  call void @llvm.lifetime.end.p0i8(i64 32, i8* nonnull %2545) #8
  %2633 = getelementptr inbounds %"class.tflite::RuntimeShape", %"class.tflite::RuntimeShape"* %47, i64 0, i32 0
  %2634 = load i32, i32* %2633, align 8
  %2635 = icmp sgt i32 %2634, 5
  br i1 %2635, label %2636, label %2960

2636:                                             ; preds = %2632
  %2637 = getelementptr inbounds %"class.tflite::RuntimeShape", %"class.tflite::RuntimeShape"* %47, i64 0, i32 1, i32 0
  %2638 = load i32*, i32** %2637, align 8
  %2639 = icmp eq i32* %2638, null
  br i1 %2639, label %2960, label %2640

2640:                                             ; preds = %2636
  %2641 = bitcast i32* %2638 to i8*
  call void @_ZdaPv(i8* %2641) #9
  br label %2960

2642:                                             ; preds = %2479
  %2643 = bitcast %"class.tflite::RuntimeShape"* %50 to i8*
  call void @llvm.lifetime.start.p0i8(i64 32, i8* nonnull %2643) #8
  %2644 = icmp eq %struct.TfLiteTensor* %64, null
  br i1 %2644, label %2645, label %2647

2645:                                             ; preds = %2642
  %2646 = getelementptr inbounds %"class.tflite::RuntimeShape", %"class.tflite::RuntimeShape"* %50, i64 0, i32 0
  store i32 0, i32* %2646, align 8, !alias.scope !150
  br label %2675

2647:                                             ; preds = %2642
  %2648 = getelementptr inbounds %struct.TfLiteTensor, %struct.TfLiteTensor* %64, i64 0, i32 2
  %2649 = load %struct.TfLiteIntArray*, %struct.TfLiteIntArray** %2648, align 8, !noalias !150
  %2650 = getelementptr inbounds %struct.TfLiteIntArray, %struct.TfLiteIntArray* %2649, i64 0, i32 0
  %2651 = load i32, i32* %2650, align 4, !noalias !150
  %2652 = getelementptr inbounds %struct.TfLiteIntArray, %struct.TfLiteIntArray* %2649, i64 0, i32 1, i64 0
  %2653 = getelementptr inbounds %"class.tflite::RuntimeShape", %"class.tflite::RuntimeShape"* %50, i64 0, i32 0
  store i32 %2651, i32* %2653, align 8, !alias.scope !150
  %2654 = icmp sgt i32 %2651, 5
  br i1 %2654, label %2655, label %2662

2655:                                             ; preds = %2647
  %2656 = sext i32 %2651 to i64
  %2657 = shl nsw i64 %2656, 2
  %2658 = call i8* @_Znam(i64 %2657) #9, !noalias !150
  %2659 = getelementptr inbounds %"class.tflite::RuntimeShape", %"class.tflite::RuntimeShape"* %50, i64 0, i32 1, i32 0
  %2660 = bitcast i32** %2659 to i8**
  store i8* %2658, i8** %2660, align 8, !alias.scope !150
  %2661 = bitcast i8* %2658 to i32*
  br label %2667

2662:                                             ; preds = %2647
  %2663 = getelementptr inbounds %"class.tflite::RuntimeShape", %"class.tflite::RuntimeShape"* %50, i64 0, i32 1
  %2664 = bitcast %union.anon* %2663 to i32*
  %2665 = sext i32 %2651 to i64
  %2666 = shl nsw i64 %2665, 2
  br label %2667

2667:                                             ; preds = %2662, %2655
  %2668 = phi i64 [ %2657, %2655 ], [ %2666, %2662 ]
  %2669 = phi i32* [ %2661, %2655 ], [ %2664, %2662 ]
  %2670 = bitcast i32* %2669 to i8*
  %2671 = bitcast i32* %2652 to i8*
  call void @llvm.memcpy.p0i8.p0i8.i64(i8* align 4 %2670, i8* align 4 %2671, i64 %2668, i1 false) #8
  %2672 = getelementptr inbounds %struct.TfLiteTensor, %struct.TfLiteTensor* %64, i64 0, i32 1
  %2673 = bitcast %union.TfLitePtrUnion* %2672 to i8**
  %2674 = load i8*, i8** %2673, align 8
  br label %2675

2675:                                             ; preds = %2667, %2645
  %2676 = phi i32 [ %2651, %2667 ], [ 0, %2645 ]
  %2677 = phi i8* [ %2674, %2667 ], [ null, %2645 ]
  %2678 = bitcast %"class.tflite::RuntimeShape"* %51 to i8*
  call void @llvm.lifetime.start.p0i8(i64 32, i8* nonnull %2678) #8
  %2679 = icmp eq %struct.TfLiteTensor* %74, null
  br i1 %2679, label %2680, label %2682

2680:                                             ; preds = %2675
  %2681 = getelementptr inbounds %"class.tflite::RuntimeShape", %"class.tflite::RuntimeShape"* %51, i64 0, i32 0
  store i32 0, i32* %2681, align 8, !alias.scope !153
  br label %2710

2682:                                             ; preds = %2675
  %2683 = getelementptr inbounds %struct.TfLiteTensor, %struct.TfLiteTensor* %74, i64 0, i32 2
  %2684 = load %struct.TfLiteIntArray*, %struct.TfLiteIntArray** %2683, align 8, !noalias !153
  %2685 = getelementptr inbounds %struct.TfLiteIntArray, %struct.TfLiteIntArray* %2684, i64 0, i32 0
  %2686 = load i32, i32* %2685, align 4, !noalias !153
  %2687 = getelementptr inbounds %struct.TfLiteIntArray, %struct.TfLiteIntArray* %2684, i64 0, i32 1, i64 0
  %2688 = getelementptr inbounds %"class.tflite::RuntimeShape", %"class.tflite::RuntimeShape"* %51, i64 0, i32 0
  store i32 %2686, i32* %2688, align 8, !alias.scope !153
  %2689 = icmp sgt i32 %2686, 5
  br i1 %2689, label %2690, label %2697

2690:                                             ; preds = %2682
  %2691 = sext i32 %2686 to i64
  %2692 = shl nsw i64 %2691, 2
  %2693 = call i8* @_Znam(i64 %2692) #9, !noalias !153
  %2694 = getelementptr inbounds %"class.tflite::RuntimeShape", %"class.tflite::RuntimeShape"* %51, i64 0, i32 1, i32 0
  %2695 = bitcast i32** %2694 to i8**
  store i8* %2693, i8** %2695, align 8, !alias.scope !153
  %2696 = bitcast i8* %2693 to i32*
  br label %2702

2697:                                             ; preds = %2682
  %2698 = getelementptr inbounds %"class.tflite::RuntimeShape", %"class.tflite::RuntimeShape"* %51, i64 0, i32 1
  %2699 = bitcast %union.anon* %2698 to i32*
  %2700 = sext i32 %2686 to i64
  %2701 = shl nsw i64 %2700, 2
  br label %2702

2702:                                             ; preds = %2697, %2690
  %2703 = phi i64 [ %2692, %2690 ], [ %2701, %2697 ]
  %2704 = phi i32* [ %2696, %2690 ], [ %2699, %2697 ]
  %2705 = bitcast i32* %2704 to i8*
  %2706 = bitcast i32* %2687 to i8*
  call void @llvm.memcpy.p0i8.p0i8.i64(i8* align 4 %2705, i8* align 4 %2706, i64 %2703, i1 false) #8
  %2707 = getelementptr inbounds %struct.TfLiteTensor, %struct.TfLiteTensor* %74, i64 0, i32 1
  %2708 = bitcast %union.TfLitePtrUnion* %2707 to i8**
  %2709 = load i8*, i8** %2708, align 8
  br label %2710

2710:                                             ; preds = %2702, %2680
  %2711 = phi i32 [ %2686, %2702 ], [ 0, %2680 ]
  %2712 = phi i8* [ %2709, %2702 ], [ null, %2680 ]
  %2713 = bitcast %"class.tflite::RuntimeShape"* %52 to i8*
  call void @llvm.lifetime.start.p0i8(i64 32, i8* nonnull %2713) #8
  %2714 = icmp eq %struct.TfLiteTensor* %86, null
  br i1 %2714, label %2715, label %2717

2715:                                             ; preds = %2710
  %2716 = getelementptr inbounds %"class.tflite::RuntimeShape", %"class.tflite::RuntimeShape"* %52, i64 0, i32 0
  store i32 0, i32* %2716, align 8, !alias.scope !156
  br label %2745

2717:                                             ; preds = %2710
  %2718 = getelementptr inbounds %struct.TfLiteTensor, %struct.TfLiteTensor* %86, i64 0, i32 2
  %2719 = load %struct.TfLiteIntArray*, %struct.TfLiteIntArray** %2718, align 8, !noalias !156
  %2720 = getelementptr inbounds %struct.TfLiteIntArray, %struct.TfLiteIntArray* %2719, i64 0, i32 0
  %2721 = load i32, i32* %2720, align 4, !noalias !156
  %2722 = getelementptr inbounds %struct.TfLiteIntArray, %struct.TfLiteIntArray* %2719, i64 0, i32 1, i64 0
  %2723 = getelementptr inbounds %"class.tflite::RuntimeShape", %"class.tflite::RuntimeShape"* %52, i64 0, i32 0
  store i32 %2721, i32* %2723, align 8, !alias.scope !156
  %2724 = icmp sgt i32 %2721, 5
  br i1 %2724, label %2725, label %2732

2725:                                             ; preds = %2717
  %2726 = sext i32 %2721 to i64
  %2727 = shl nsw i64 %2726, 2
  %2728 = call i8* @_Znam(i64 %2727) #9, !noalias !156
  %2729 = getelementptr inbounds %"class.tflite::RuntimeShape", %"class.tflite::RuntimeShape"* %52, i64 0, i32 1, i32 0
  %2730 = bitcast i32** %2729 to i8**
  store i8* %2728, i8** %2730, align 8, !alias.scope !156
  %2731 = bitcast i8* %2728 to i32*
  br label %2737

2732:                                             ; preds = %2717
  %2733 = getelementptr inbounds %"class.tflite::RuntimeShape", %"class.tflite::RuntimeShape"* %52, i64 0, i32 1
  %2734 = bitcast %union.anon* %2733 to i32*
  %2735 = sext i32 %2721 to i64
  %2736 = shl nsw i64 %2735, 2
  br label %2737

2737:                                             ; preds = %2732, %2725
  %2738 = phi i64 [ %2727, %2725 ], [ %2736, %2732 ]
  %2739 = phi i32* [ %2731, %2725 ], [ %2734, %2732 ]
  %2740 = bitcast i32* %2739 to i8*
  %2741 = bitcast i32* %2722 to i8*
  call void @llvm.memcpy.p0i8.p0i8.i64(i8* align 4 %2740, i8* align 4 %2741, i64 %2738, i1 false) #8
  %2742 = getelementptr inbounds %struct.TfLiteTensor, %struct.TfLiteTensor* %86, i64 0, i32 1
  %2743 = bitcast %union.TfLitePtrUnion* %2742 to i8**
  %2744 = load i8*, i8** %2743, align 8
  br label %2745

2745:                                             ; preds = %2737, %2715
  %2746 = phi i32 [ %2721, %2737 ], [ 0, %2715 ]
  %2747 = phi i8* [ %2744, %2737 ], [ null, %2715 ]
  %2748 = getelementptr inbounds %"class.tflite::RuntimeShape", %"class.tflite::RuntimeShape"* %50, i64 0, i32 1
  %2749 = icmp sgt i32 %2676, 5
  br i1 %2749, label %2750, label %2753

2750:                                             ; preds = %2745
  %2751 = getelementptr inbounds %union.anon, %union.anon* %2748, i64 0, i32 0
  %2752 = load i32*, i32** %2751, align 8
  br label %2756

2753:                                             ; preds = %2745
  %2754 = bitcast %union.anon* %2748 to i32*
  %2755 = icmp sgt i32 %2676, 0
  br i1 %2755, label %2756, label %2860

2756:                                             ; preds = %2753, %2750
  %2757 = phi i32* [ %2752, %2750 ], [ %2754, %2753 ]
  %2758 = zext i32 %2676 to i64
  %2759 = icmp ult i32 %2676, 8
  br i1 %2759, label %2845, label %2760

2760:                                             ; preds = %2756
  %2761 = and i64 %2758, 4294967288
  %2762 = add nsw i64 %2761, -8
  %2763 = lshr exact i64 %2762, 3
  %2764 = add nuw nsw i64 %2763, 1
  %2765 = and i64 %2764, 3
  %2766 = icmp ult i64 %2762, 24
  br i1 %2766, label %2812, label %2767

2767:                                             ; preds = %2760
  %2768 = sub nsw i64 %2764, %2765
  br label %2769

2769:                                             ; preds = %2769, %2767
  %2770 = phi i64 [ 0, %2767 ], [ %2809, %2769 ]
  %2771 = phi <4 x i32> [ <i32 1, i32 1, i32 1, i32 1>, %2767 ], [ %2807, %2769 ]
  %2772 = phi <4 x i32> [ <i32 1, i32 1, i32 1, i32 1>, %2767 ], [ %2808, %2769 ]
  %2773 = phi i64 [ %2768, %2767 ], [ %2810, %2769 ]
  %2774 = getelementptr inbounds i32, i32* %2757, i64 %2770
  %2775 = bitcast i32* %2774 to <4 x i32>*
  %2776 = load <4 x i32>, <4 x i32>* %2775, align 4
  %2777 = getelementptr inbounds i32, i32* %2774, i64 4
  %2778 = bitcast i32* %2777 to <4 x i32>*
  %2779 = load <4 x i32>, <4 x i32>* %2778, align 4
  %2780 = mul nsw <4 x i32> %2776, %2771
  %2781 = mul nsw <4 x i32> %2779, %2772
  %2782 = or i64 %2770, 8
  %2783 = getelementptr inbounds i32, i32* %2757, i64 %2782
  %2784 = bitcast i32* %2783 to <4 x i32>*
  %2785 = load <4 x i32>, <4 x i32>* %2784, align 4
  %2786 = getelementptr inbounds i32, i32* %2783, i64 4
  %2787 = bitcast i32* %2786 to <4 x i32>*
  %2788 = load <4 x i32>, <4 x i32>* %2787, align 4
  %2789 = mul nsw <4 x i32> %2785, %2780
  %2790 = mul nsw <4 x i32> %2788, %2781
  %2791 = or i64 %2770, 16
  %2792 = getelementptr inbounds i32, i32* %2757, i64 %2791
  %2793 = bitcast i32* %2792 to <4 x i32>*
  %2794 = load <4 x i32>, <4 x i32>* %2793, align 4
  %2795 = getelementptr inbounds i32, i32* %2792, i64 4
  %2796 = bitcast i32* %2795 to <4 x i32>*
  %2797 = load <4 x i32>, <4 x i32>* %2796, align 4
  %2798 = mul nsw <4 x i32> %2794, %2789
  %2799 = mul nsw <4 x i32> %2797, %2790
  %2800 = or i64 %2770, 24
  %2801 = getelementptr inbounds i32, i32* %2757, i64 %2800
  %2802 = bitcast i32* %2801 to <4 x i32>*
  %2803 = load <4 x i32>, <4 x i32>* %2802, align 4
  %2804 = getelementptr inbounds i32, i32* %2801, i64 4
  %2805 = bitcast i32* %2804 to <4 x i32>*
  %2806 = load <4 x i32>, <4 x i32>* %2805, align 4
  %2807 = mul nsw <4 x i32> %2803, %2798
  %2808 = mul nsw <4 x i32> %2806, %2799
  %2809 = add i64 %2770, 32
  %2810 = add i64 %2773, -4
  %2811 = icmp eq i64 %2810, 0
  br i1 %2811, label %2812, label %2769, !llvm.loop !159

2812:                                             ; preds = %2769, %2760
  %2813 = phi <4 x i32> [ undef, %2760 ], [ %2807, %2769 ]
  %2814 = phi <4 x i32> [ undef, %2760 ], [ %2808, %2769 ]
  %2815 = phi i64 [ 0, %2760 ], [ %2809, %2769 ]
  %2816 = phi <4 x i32> [ <i32 1, i32 1, i32 1, i32 1>, %2760 ], [ %2807, %2769 ]
  %2817 = phi <4 x i32> [ <i32 1, i32 1, i32 1, i32 1>, %2760 ], [ %2808, %2769 ]
  %2818 = icmp eq i64 %2765, 0
  br i1 %2818, label %2835, label %2819

2819:                                             ; preds = %2812, %2819
  %2820 = phi i64 [ %2832, %2819 ], [ %2815, %2812 ]
  %2821 = phi <4 x i32> [ %2830, %2819 ], [ %2816, %2812 ]
  %2822 = phi <4 x i32> [ %2831, %2819 ], [ %2817, %2812 ]
  %2823 = phi i64 [ %2833, %2819 ], [ %2765, %2812 ]
  %2824 = getelementptr inbounds i32, i32* %2757, i64 %2820
  %2825 = bitcast i32* %2824 to <4 x i32>*
  %2826 = load <4 x i32>, <4 x i32>* %2825, align 4
  %2827 = getelementptr inbounds i32, i32* %2824, i64 4
  %2828 = bitcast i32* %2827 to <4 x i32>*
  %2829 = load <4 x i32>, <4 x i32>* %2828, align 4
  %2830 = mul nsw <4 x i32> %2826, %2821
  %2831 = mul nsw <4 x i32> %2829, %2822
  %2832 = add i64 %2820, 8
  %2833 = add i64 %2823, -1
  %2834 = icmp eq i64 %2833, 0
  br i1 %2834, label %2835, label %2819, !llvm.loop !160

2835:                                             ; preds = %2819, %2812
  %2836 = phi <4 x i32> [ %2813, %2812 ], [ %2830, %2819 ]
  %2837 = phi <4 x i32> [ %2814, %2812 ], [ %2831, %2819 ]
  %2838 = mul <4 x i32> %2837, %2836
  %2839 = shufflevector <4 x i32> %2838, <4 x i32> undef, <4 x i32> <i32 2, i32 3, i32 undef, i32 undef>
  %2840 = mul <4 x i32> %2838, %2839
  %2841 = shufflevector <4 x i32> %2840, <4 x i32> undef, <4 x i32> <i32 1, i32 undef, i32 undef, i32 undef>
  %2842 = mul <4 x i32> %2840, %2841
  %2843 = extractelement <4 x i32> %2842, i32 0
  %2844 = icmp eq i64 %2761, %2758
  br i1 %2844, label %2856, label %2845

2845:                                             ; preds = %2835, %2756
  %2846 = phi i64 [ 0, %2756 ], [ %2761, %2835 ]
  %2847 = phi i32 [ 1, %2756 ], [ %2843, %2835 ]
  br label %2848

2848:                                             ; preds = %2845, %2848
  %2849 = phi i64 [ %2854, %2848 ], [ %2846, %2845 ]
  %2850 = phi i32 [ %2853, %2848 ], [ %2847, %2845 ]
  %2851 = getelementptr inbounds i32, i32* %2757, i64 %2849
  %2852 = load i32, i32* %2851, align 4
  %2853 = mul nsw i32 %2852, %2850
  %2854 = add nuw nsw i64 %2849, 1
  %2855 = icmp eq i64 %2854, %2758
  br i1 %2855, label %2856, label %2848, !llvm.loop !161

2856:                                             ; preds = %2848, %2835
  %2857 = phi i32 [ %2843, %2835 ], [ %2853, %2848 ]
  %2858 = sext i32 %2857 to i64
  %2859 = icmp sgt i32 %2857, 0
  br i1 %2859, label %2860, label %2937

2860:                                             ; preds = %2856, %2753
  %2861 = phi i64 [ %2858, %2856 ], [ 1, %2753 ]
  %2862 = sext i32 %2501 to i64
  %2863 = sub nsw i32 0, %2503
  %2864 = zext i32 %2863 to i64
  %2865 = shl nsw i64 -1, %2864
  %2866 = trunc i64 %2865 to i32
  %2867 = xor i32 %2866, -1
  %2868 = ashr i32 %2867, 1
  %2869 = sext i32 %2506 to i64
  %2870 = sub nsw i32 0, %2508
  %2871 = zext i32 %2870 to i64
  %2872 = shl nsw i64 -1, %2871
  %2873 = trunc i64 %2872 to i32
  %2874 = xor i32 %2873, -1
  %2875 = ashr i32 %2874, 1
  %2876 = icmp eq i32 %2501, -2147483648
  %2877 = icmp eq i32 %2506, -2147483648
  br label %2878

2878:                                             ; preds = %2923, %2860
  %2879 = phi i64 [ 0, %2860 ], [ %2935, %2923 ]
  %2880 = getelementptr inbounds i8, i8* %2677, i64 %2879
  %2881 = load i8, i8* %2880, align 1
  %2882 = sext i8 %2881 to i32
  %2883 = sub i32 %2882, %2481
  %2884 = getelementptr inbounds i8, i8* %2712, i64 %2879
  %2885 = load i8, i8* %2884, align 1
  %2886 = sext i8 %2885 to i32
  %2887 = sub i32 %2886, %2484
  %2888 = shl i32 %2883, 8
  %2889 = shl i32 %2887, 8
  %2890 = icmp eq i32 %2888, %2501
  br i1 %2890, label %2893, label %2891

2891:                                             ; preds = %2878
  %2892 = sext i32 %2888 to i64
  br label %2894

2893:                                             ; preds = %2878
  br i1 %2876, label %2902, label %2894

2894:                                             ; preds = %2893, %2891
  %2895 = phi i64 [ %2892, %2891 ], [ %2862, %2893 ]
  %2896 = mul nsw i64 %2895, %2862
  %2897 = icmp sgt i64 %2896, -1
  %2898 = select i1 %2897, i64 1073741824, i64 -1073741823
  %2899 = add nsw i64 %2898, %2896
  %2900 = sdiv i64 %2899, 2147483648
  %2901 = trunc i64 %2900 to i32
  br label %2902

2902:                                             ; preds = %2894, %2893
  %2903 = phi i32 [ %2901, %2894 ], [ 2147483647, %2893 ]
  %2904 = and i32 %2903, %2867
  %2905 = lshr i32 %2903, 31
  %2906 = add nsw i32 %2905, %2868
  %2907 = ashr i32 %2903, %2863
  %2908 = icmp sgt i32 %2904, %2906
  %2909 = zext i1 %2908 to i32
  %2910 = add nsw i32 %2907, %2909
  %2911 = icmp eq i32 %2889, %2506
  br i1 %2911, label %2914, label %2912

2912:                                             ; preds = %2902
  %2913 = sext i32 %2889 to i64
  br label %2915

2914:                                             ; preds = %2902
  br i1 %2877, label %2923, label %2915

2915:                                             ; preds = %2914, %2912
  %2916 = phi i64 [ %2913, %2912 ], [ %2869, %2914 ]
  %2917 = mul nsw i64 %2916, %2869
  %2918 = icmp sgt i64 %2917, -1
  %2919 = select i1 %2918, i64 1073741824, i64 -1073741823
  %2920 = add nsw i64 %2919, %2917
  %2921 = sdiv i64 %2920, 2147483648
  %2922 = trunc i64 %2921 to i32
  br label %2923

2923:                                             ; preds = %2915, %2914
  %2924 = phi i32 [ %2922, %2915 ], [ 2147483647, %2914 ]
  %2925 = and i32 %2924, %2874
  %2926 = lshr i32 %2924, 31
  %2927 = add nsw i32 %2926, %2875
  %2928 = ashr i32 %2924, %2870
  %2929 = icmp sgt i32 %2925, %2927
  %2930 = zext i1 %2929 to i32
  %2931 = add nsw i32 %2928, %2930
  %2932 = icmp eq i32 %2910, %2931
  %2933 = getelementptr inbounds i8, i8* %2747, i64 %2879
  %2934 = zext i1 %2932 to i8
  store i8 %2934, i8* %2933, align 1
  %2935 = add nuw nsw i64 %2879, 1
  %2936 = icmp eq i64 %2935, %2861
  br i1 %2936, label %2937, label %2878

2937:                                             ; preds = %2923, %2856
  %2938 = icmp sgt i32 %2746, 5
  br i1 %2938, label %2939, label %2945

2939:                                             ; preds = %2937
  %2940 = getelementptr inbounds %"class.tflite::RuntimeShape", %"class.tflite::RuntimeShape"* %52, i64 0, i32 1, i32 0
  %2941 = load i32*, i32** %2940, align 8
  %2942 = icmp eq i32* %2941, null
  br i1 %2942, label %2945, label %2943

2943:                                             ; preds = %2939
  %2944 = bitcast i32* %2941 to i8*
  call void @_ZdaPv(i8* %2944) #9
  br label %2945

2945:                                             ; preds = %2943, %2939, %2937
  call void @llvm.lifetime.end.p0i8(i64 32, i8* nonnull %2713) #8
  %2946 = icmp sgt i32 %2711, 5
  br i1 %2946, label %2947, label %2953

2947:                                             ; preds = %2945
  %2948 = getelementptr inbounds %"class.tflite::RuntimeShape", %"class.tflite::RuntimeShape"* %51, i64 0, i32 1, i32 0
  %2949 = load i32*, i32** %2948, align 8
  %2950 = icmp eq i32* %2949, null
  br i1 %2950, label %2953, label %2951

2951:                                             ; preds = %2947
  %2952 = bitcast i32* %2949 to i8*
  call void @_ZdaPv(i8* %2952) #9
  br label %2953

2953:                                             ; preds = %2951, %2947, %2945
  call void @llvm.lifetime.end.p0i8(i64 32, i8* nonnull %2678) #8
  br i1 %2749, label %2954, label %2960

2954:                                             ; preds = %2953
  %2955 = getelementptr inbounds %"class.tflite::RuntimeShape", %"class.tflite::RuntimeShape"* %50, i64 0, i32 1, i32 0
  %2956 = load i32*, i32** %2955, align 8
  %2957 = icmp eq i32* %2956, null
  br i1 %2957, label %2960, label %2958

2958:                                             ; preds = %2954
  %2959 = bitcast i32* %2956 to i8*
  call void @_ZdaPv(i8* %2959) #9
  br label %2960

2960:                                             ; preds = %2953, %2954, %2958, %2632, %2636, %2640
  %2961 = phi i8* [ %2511, %2640 ], [ %2511, %2636 ], [ %2511, %2632 ], [ %2643, %2958 ], [ %2643, %2954 ], [ %2643, %2953 ]
  call void @llvm.lifetime.end.p0i8(i64 32, i8* nonnull %2961) #8
  call void @llvm.lifetime.end.p0i8(i64 32, i8* nonnull %2496) #8
  call void @llvm.lifetime.end.p0i8(i64 4, i8* nonnull %2492) #8
  call void @llvm.lifetime.end.p0i8(i64 4, i8* nonnull %2491) #8
  call void @llvm.lifetime.end.p0i8(i64 4, i8* nonnull %2487) #8
  call void @llvm.lifetime.end.p0i8(i64 4, i8* nonnull %2486) #8
  br label %2967

2962:                                             ; preds = %85
  %2963 = xor i1 %87, true
  tail call fastcc void @_ZN6tflite3ops7builtin11comparisons12_GLOBAL__N_116ComparisonStringEPFbRKNS_9StringRefES6_EPK12TfLiteTensorSB_PS9_b(i1 (%"struct.tflite::StringRef"*, %"struct.tflite::StringRef"*)* nonnull @_ZN6tflite13reference_ops16StringRefEqualFnERKNS_9StringRefES3_, %struct.TfLiteTensor* %64, %struct.TfLiteTensor* %74, %struct.TfLiteTensor* %86, i1 zeroext %2963)
  br label %2967

2964:                                             ; preds = %85
  %2965 = getelementptr inbounds %struct.TfLiteContext, %struct.TfLiteContext* %0, i64 0, i32 5
  %2966 = load void (%struct.TfLiteContext*, i8*, ...)*, void (%struct.TfLiteContext*, i8*, ...)** %2965, align 8
  tail call void (%struct.TfLiteContext*, i8*, ...) %2966(%struct.TfLiteContext* %0, i8* getelementptr inbounds ([63 x i8], [63 x i8]* @.str.14, i64 0, i64 0), i32 %89) #8
  br label %2967

2967:                                             ; preds = %553, %1068, %1579, %1994, %2477, %2960, %2962, %2964
  %2968 = phi i32 [ 1, %2964 ], [ 0, %2962 ], [ 0, %2960 ], [ 0, %2477 ], [ 0, %1994 ], [ 0, %1579 ], [ 0, %1068 ], [ 0, %553 ]
  ret i32 %2968
}

; Function Attrs: norecurse nounwind readnone ssp uwtable
define hidden nonnull %struct.TfLiteRegistration* @_ZN6tflite3ops7builtin18Register_NOT_EQUALEv() local_unnamed_addr #0 {
  ret %struct.TfLiteRegistration* @_ZZN6tflite3ops7builtin18Register_NOT_EQUALEvE1r
}

; Function Attrs: nounwind ssp uwtable
define internal i32 @_ZN6tflite3ops7builtin11comparisons12_GLOBAL__N_112NotEqualEvalEP13TfLiteContextP10TfLiteNode(%struct.TfLiteContext*, %struct.TfLiteNode* nocapture readonly) #1 {
  %3 = alloca i32, align 4
  %4 = alloca i32, align 4
  %5 = alloca i32, align 4
  %6 = alloca i32, align 4
  %7 = alloca %"struct.tflite::ComparisonParams", align 4
  %8 = alloca %"class.tflite::RuntimeShape", align 8
  %9 = alloca %"class.tflite::RuntimeShape", align 8
  %10 = alloca %"class.tflite::RuntimeShape", align 8
  %11 = alloca %"class.tflite::RuntimeShape", align 8
  %12 = alloca %"class.tflite::RuntimeShape", align 8
  %13 = alloca %"class.tflite::RuntimeShape", align 8
  %14 = alloca %"struct.tflite::ComparisonParams", align 4
  %15 = alloca %"class.tflite::RuntimeShape", align 8
  %16 = alloca %"class.tflite::RuntimeShape", align 8
  %17 = alloca %"class.tflite::RuntimeShape", align 8
  %18 = alloca %"class.tflite::RuntimeShape", align 8
  %19 = alloca %"class.tflite::RuntimeShape", align 8
  %20 = alloca %"class.tflite::RuntimeShape", align 8
  %21 = alloca %"struct.tflite::ComparisonParams", align 4
  %22 = alloca %"class.tflite::RuntimeShape", align 8
  %23 = alloca %"class.tflite::RuntimeShape", align 8
  %24 = alloca %"class.tflite::RuntimeShape", align 8
  %25 = alloca %"class.tflite::RuntimeShape", align 8
  %26 = alloca %"class.tflite::RuntimeShape", align 8
  %27 = alloca %"class.tflite::RuntimeShape", align 8
  %28 = alloca %"struct.tflite::ComparisonParams", align 4
  %29 = alloca %"class.tflite::RuntimeShape", align 8
  %30 = alloca %"class.tflite::RuntimeShape", align 8
  %31 = alloca %"class.tflite::RuntimeShape", align 8
  %32 = alloca %"class.tflite::RuntimeShape", align 8
  %33 = alloca %"class.tflite::RuntimeShape", align 8
  %34 = alloca %"class.tflite::RuntimeShape", align 8
  %35 = alloca %"struct.tflite::ComparisonParams", align 4
  %36 = alloca %"class.tflite::RuntimeShape", align 8
  %37 = alloca %"class.tflite::RuntimeShape", align 8
  %38 = alloca %"class.tflite::RuntimeShape", align 8
  %39 = alloca %"class.tflite::RuntimeShape", align 8
  %40 = alloca %"class.tflite::RuntimeShape", align 8
  %41 = alloca %"class.tflite::RuntimeShape", align 8
  %42 = alloca i32, align 4
  %43 = alloca i32, align 4
  %44 = alloca i32, align 4
  %45 = alloca i32, align 4
  %46 = alloca %"struct.tflite::ComparisonParams", align 4
  %47 = alloca %"class.tflite::RuntimeShape", align 8
  %48 = alloca %"class.tflite::RuntimeShape", align 8
  %49 = alloca %"class.tflite::RuntimeShape", align 8
  %50 = alloca %"class.tflite::RuntimeShape", align 8
  %51 = alloca %"class.tflite::RuntimeShape", align 8
  %52 = alloca %"class.tflite::RuntimeShape", align 8
  %53 = getelementptr inbounds %struct.TfLiteNode, %struct.TfLiteNode* %1, i64 0, i32 0
  %54 = load %struct.TfLiteIntArray*, %struct.TfLiteIntArray** %53, align 8
  %55 = getelementptr inbounds %struct.TfLiteIntArray, %struct.TfLiteIntArray* %54, i64 0, i32 1, i64 0
  %56 = load i32, i32* %55, align 4
  %57 = icmp slt i32 %56, 0
  br i1 %57, label %63, label %58

58:                                               ; preds = %2
  %59 = getelementptr inbounds %struct.TfLiteContext, %struct.TfLiteContext* %0, i64 0, i32 2
  %60 = load %struct.TfLiteTensor*, %struct.TfLiteTensor** %59, align 8
  %61 = sext i32 %56 to i64
  %62 = getelementptr inbounds %struct.TfLiteTensor, %struct.TfLiteTensor* %60, i64 %61
  br label %63

63:                                               ; preds = %2, %58
  %64 = phi %struct.TfLiteTensor* [ %62, %58 ], [ null, %2 ]
  %65 = getelementptr inbounds %struct.TfLiteIntArray, %struct.TfLiteIntArray* %54, i64 0, i32 1, i64 1
  %66 = load i32, i32* %65, align 4
  %67 = icmp slt i32 %66, 0
  br i1 %67, label %73, label %68

68:                                               ; preds = %63
  %69 = getelementptr inbounds %struct.TfLiteContext, %struct.TfLiteContext* %0, i64 0, i32 2
  %70 = load %struct.TfLiteTensor*, %struct.TfLiteTensor** %69, align 8
  %71 = sext i32 %66 to i64
  %72 = getelementptr inbounds %struct.TfLiteTensor, %struct.TfLiteTensor* %70, i64 %71
  br label %73

73:                                               ; preds = %63, %68
  %74 = phi %struct.TfLiteTensor* [ %72, %68 ], [ null, %63 ]
  %75 = getelementptr inbounds %struct.TfLiteNode, %struct.TfLiteNode* %1, i64 0, i32 1
  %76 = load %struct.TfLiteIntArray*, %struct.TfLiteIntArray** %75, align 8
  %77 = getelementptr inbounds %struct.TfLiteIntArray, %struct.TfLiteIntArray* %76, i64 0, i32 1, i64 0
  %78 = load i32, i32* %77, align 4
  %79 = icmp slt i32 %78, 0
  br i1 %79, label %85, label %80

80:                                               ; preds = %73
  %81 = getelementptr inbounds %struct.TfLiteContext, %struct.TfLiteContext* %0, i64 0, i32 2
  %82 = load %struct.TfLiteTensor*, %struct.TfLiteTensor** %81, align 8
  %83 = sext i32 %78 to i64
  %84 = getelementptr inbounds %struct.TfLiteTensor, %struct.TfLiteTensor* %82, i64 %83
  br label %85

85:                                               ; preds = %73, %80
  %86 = phi %struct.TfLiteTensor* [ %84, %80 ], [ null, %73 ]
  %87 = tail call zeroext i1 @_ZN6tflite14HaveSameShapesEPK12TfLiteTensorS2_(%struct.TfLiteTensor* %64, %struct.TfLiteTensor* %74) #8
  %88 = getelementptr inbounds %struct.TfLiteTensor, %struct.TfLiteTensor* %64, i64 0, i32 0
  %89 = load i32, i32* %88, align 8
  switch i32 %89, label %2964 [
    i32 6, label %90
    i32 1, label %555
    i32 2, label %1070
    i32 4, label %1581
    i32 3, label %1996
    i32 9, label %2479
    i32 5, label %2962
  ]

90:                                               ; preds = %85
  %91 = bitcast %"struct.tflite::ComparisonParams"* %35 to i8*
  call void @llvm.lifetime.start.p0i8(i64 32, i8* nonnull %91) #8
  call void @llvm.memset.p0i8.i64(i8* nonnull align 4 %91, i8 -86, i64 32, i1 false) #8
  br i1 %87, label %193, label %92

92:                                               ; preds = %90
  %93 = bitcast %"class.tflite::RuntimeShape"* %36 to i8*
  call void @llvm.lifetime.start.p0i8(i64 32, i8* nonnull %93) #8
  %94 = icmp eq %struct.TfLiteTensor* %64, null
  br i1 %94, label %95, label %97

95:                                               ; preds = %92
  %96 = getelementptr inbounds %"class.tflite::RuntimeShape", %"class.tflite::RuntimeShape"* %36, i64 0, i32 0
  store i32 0, i32* %96, align 8, !alias.scope !162
  br label %125

97:                                               ; preds = %92
  %98 = getelementptr inbounds %struct.TfLiteTensor, %struct.TfLiteTensor* %64, i64 0, i32 2
  %99 = load %struct.TfLiteIntArray*, %struct.TfLiteIntArray** %98, align 8, !noalias !162
  %100 = getelementptr inbounds %struct.TfLiteIntArray, %struct.TfLiteIntArray* %99, i64 0, i32 0
  %101 = load i32, i32* %100, align 4, !noalias !162
  %102 = getelementptr inbounds %struct.TfLiteIntArray, %struct.TfLiteIntArray* %99, i64 0, i32 1, i64 0
  %103 = getelementptr inbounds %"class.tflite::RuntimeShape", %"class.tflite::RuntimeShape"* %36, i64 0, i32 0
  store i32 %101, i32* %103, align 8, !alias.scope !162
  %104 = icmp sgt i32 %101, 5
  br i1 %104, label %105, label %112

105:                                              ; preds = %97
  %106 = sext i32 %101 to i64
  %107 = shl nsw i64 %106, 2
  %108 = tail call i8* @_Znam(i64 %107) #9, !noalias !162
  %109 = getelementptr inbounds %"class.tflite::RuntimeShape", %"class.tflite::RuntimeShape"* %36, i64 0, i32 1, i32 0
  %110 = bitcast i32** %109 to i8**
  store i8* %108, i8** %110, align 8, !alias.scope !162
  %111 = bitcast i8* %108 to i32*
  br label %117

112:                                              ; preds = %97
  %113 = getelementptr inbounds %"class.tflite::RuntimeShape", %"class.tflite::RuntimeShape"* %36, i64 0, i32 1
  %114 = bitcast %union.anon* %113 to i32*
  %115 = sext i32 %101 to i64
  %116 = shl nsw i64 %115, 2
  br label %117

117:                                              ; preds = %112, %105
  %118 = phi i64 [ %107, %105 ], [ %116, %112 ]
  %119 = phi i32* [ %111, %105 ], [ %114, %112 ]
  %120 = bitcast i32* %119 to i8*
  %121 = bitcast i32* %102 to i8*
  call void @llvm.memcpy.p0i8.p0i8.i64(i8* align 4 %120, i8* align 4 %121, i64 %118, i1 false) #8
  %122 = getelementptr inbounds %struct.TfLiteTensor, %struct.TfLiteTensor* %64, i64 0, i32 1
  %123 = bitcast %union.TfLitePtrUnion* %122 to i8**
  %124 = load i8*, i8** %123, align 8
  br label %125

125:                                              ; preds = %117, %95
  %126 = phi i8* [ %124, %117 ], [ null, %95 ]
  %127 = bitcast %"class.tflite::RuntimeShape"* %37 to i8*
  call void @llvm.lifetime.start.p0i8(i64 32, i8* nonnull %127) #8
  %128 = icmp eq %struct.TfLiteTensor* %74, null
  br i1 %128, label %129, label %131

129:                                              ; preds = %125
  %130 = getelementptr inbounds %"class.tflite::RuntimeShape", %"class.tflite::RuntimeShape"* %37, i64 0, i32 0
  store i32 0, i32* %130, align 8, !alias.scope !165
  br label %159

131:                                              ; preds = %125
  %132 = getelementptr inbounds %struct.TfLiteTensor, %struct.TfLiteTensor* %74, i64 0, i32 2
  %133 = load %struct.TfLiteIntArray*, %struct.TfLiteIntArray** %132, align 8, !noalias !165
  %134 = getelementptr inbounds %struct.TfLiteIntArray, %struct.TfLiteIntArray* %133, i64 0, i32 0
  %135 = load i32, i32* %134, align 4, !noalias !165
  %136 = getelementptr inbounds %struct.TfLiteIntArray, %struct.TfLiteIntArray* %133, i64 0, i32 1, i64 0
  %137 = getelementptr inbounds %"class.tflite::RuntimeShape", %"class.tflite::RuntimeShape"* %37, i64 0, i32 0
  store i32 %135, i32* %137, align 8, !alias.scope !165
  %138 = icmp sgt i32 %135, 5
  br i1 %138, label %139, label %146

139:                                              ; preds = %131
  %140 = sext i32 %135 to i64
  %141 = shl nsw i64 %140, 2
  %142 = tail call i8* @_Znam(i64 %141) #9, !noalias !165
  %143 = getelementptr inbounds %"class.tflite::RuntimeShape", %"class.tflite::RuntimeShape"* %37, i64 0, i32 1, i32 0
  %144 = bitcast i32** %143 to i8**
  store i8* %142, i8** %144, align 8, !alias.scope !165
  %145 = bitcast i8* %142 to i32*
  br label %151

146:                                              ; preds = %131
  %147 = getelementptr inbounds %"class.tflite::RuntimeShape", %"class.tflite::RuntimeShape"* %37, i64 0, i32 1
  %148 = bitcast %union.anon* %147 to i32*
  %149 = sext i32 %135 to i64
  %150 = shl nsw i64 %149, 2
  br label %151

151:                                              ; preds = %146, %139
  %152 = phi i64 [ %141, %139 ], [ %150, %146 ]
  %153 = phi i32* [ %145, %139 ], [ %148, %146 ]
  %154 = bitcast i32* %153 to i8*
  %155 = bitcast i32* %136 to i8*
  call void @llvm.memcpy.p0i8.p0i8.i64(i8* align 4 %154, i8* align 4 %155, i64 %152, i1 false) #8
  %156 = getelementptr inbounds %struct.TfLiteTensor, %struct.TfLiteTensor* %74, i64 0, i32 1
  %157 = bitcast %union.TfLitePtrUnion* %156 to i8**
  %158 = load i8*, i8** %157, align 8
  br label %159

159:                                              ; preds = %151, %129
  %160 = phi i8* [ %158, %151 ], [ null, %129 ]
  %161 = bitcast %"class.tflite::RuntimeShape"* %38 to i8*
  call void @llvm.lifetime.start.p0i8(i64 32, i8* nonnull %161) #8
  %162 = icmp eq %struct.TfLiteTensor* %86, null
  br i1 %162, label %163, label %165

163:                                              ; preds = %159
  %164 = getelementptr inbounds %"class.tflite::RuntimeShape", %"class.tflite::RuntimeShape"* %38, i64 0, i32 0
  store i32 0, i32* %164, align 8, !alias.scope !168
  br label %522

165:                                              ; preds = %159
  %166 = getelementptr inbounds %struct.TfLiteTensor, %struct.TfLiteTensor* %86, i64 0, i32 2
  %167 = load %struct.TfLiteIntArray*, %struct.TfLiteIntArray** %166, align 8, !noalias !168
  %168 = getelementptr inbounds %struct.TfLiteIntArray, %struct.TfLiteIntArray* %167, i64 0, i32 0
  %169 = load i32, i32* %168, align 4, !noalias !168
  %170 = getelementptr inbounds %struct.TfLiteIntArray, %struct.TfLiteIntArray* %167, i64 0, i32 1, i64 0
  %171 = getelementptr inbounds %"class.tflite::RuntimeShape", %"class.tflite::RuntimeShape"* %38, i64 0, i32 0
  store i32 %169, i32* %171, align 8, !alias.scope !168
  %172 = icmp sgt i32 %169, 5
  br i1 %172, label %173, label %180

173:                                              ; preds = %165
  %174 = sext i32 %169 to i64
  %175 = shl nsw i64 %174, 2
  %176 = tail call i8* @_Znam(i64 %175) #9, !noalias !168
  %177 = getelementptr inbounds %"class.tflite::RuntimeShape", %"class.tflite::RuntimeShape"* %38, i64 0, i32 1, i32 0
  %178 = bitcast i32** %177 to i8**
  store i8* %176, i8** %178, align 8, !alias.scope !168
  %179 = bitcast i8* %176 to i32*
  br label %185

180:                                              ; preds = %165
  %181 = getelementptr inbounds %"class.tflite::RuntimeShape", %"class.tflite::RuntimeShape"* %38, i64 0, i32 1
  %182 = bitcast %union.anon* %181 to i32*
  %183 = sext i32 %169 to i64
  %184 = shl nsw i64 %183, 2
  br label %185

185:                                              ; preds = %180, %173
  %186 = phi i64 [ %175, %173 ], [ %184, %180 ]
  %187 = phi i32* [ %179, %173 ], [ %182, %180 ]
  %188 = bitcast i32* %187 to i8*
  %189 = bitcast i32* %170 to i8*
  call void @llvm.memcpy.p0i8.p0i8.i64(i8* align 4 %188, i8* align 4 %189, i64 %186, i1 false) #8
  %190 = getelementptr inbounds %struct.TfLiteTensor, %struct.TfLiteTensor* %86, i64 0, i32 1
  %191 = bitcast %union.TfLitePtrUnion* %190 to i8**
  %192 = load i8*, i8** %191, align 8
  br label %522

193:                                              ; preds = %90
  %194 = bitcast %"class.tflite::RuntimeShape"* %39 to i8*
  call void @llvm.lifetime.start.p0i8(i64 32, i8* nonnull %194) #8
  %195 = icmp eq %struct.TfLiteTensor* %64, null
  br i1 %195, label %196, label %198

196:                                              ; preds = %193
  %197 = getelementptr inbounds %"class.tflite::RuntimeShape", %"class.tflite::RuntimeShape"* %39, i64 0, i32 0
  store i32 0, i32* %197, align 8, !alias.scope !171
  br label %226

198:                                              ; preds = %193
  %199 = getelementptr inbounds %struct.TfLiteTensor, %struct.TfLiteTensor* %64, i64 0, i32 2
  %200 = load %struct.TfLiteIntArray*, %struct.TfLiteIntArray** %199, align 8, !noalias !171
  %201 = getelementptr inbounds %struct.TfLiteIntArray, %struct.TfLiteIntArray* %200, i64 0, i32 0
  %202 = load i32, i32* %201, align 4, !noalias !171
  %203 = getelementptr inbounds %struct.TfLiteIntArray, %struct.TfLiteIntArray* %200, i64 0, i32 1, i64 0
  %204 = getelementptr inbounds %"class.tflite::RuntimeShape", %"class.tflite::RuntimeShape"* %39, i64 0, i32 0
  store i32 %202, i32* %204, align 8, !alias.scope !171
  %205 = icmp sgt i32 %202, 5
  br i1 %205, label %206, label %213

206:                                              ; preds = %198
  %207 = sext i32 %202 to i64
  %208 = shl nsw i64 %207, 2
  %209 = tail call i8* @_Znam(i64 %208) #9, !noalias !171
  %210 = getelementptr inbounds %"class.tflite::RuntimeShape", %"class.tflite::RuntimeShape"* %39, i64 0, i32 1, i32 0
  %211 = bitcast i32** %210 to i8**
  store i8* %209, i8** %211, align 8, !alias.scope !171
  %212 = bitcast i8* %209 to i32*
  br label %218

213:                                              ; preds = %198
  %214 = getelementptr inbounds %"class.tflite::RuntimeShape", %"class.tflite::RuntimeShape"* %39, i64 0, i32 1
  %215 = bitcast %union.anon* %214 to i32*
  %216 = sext i32 %202 to i64
  %217 = shl nsw i64 %216, 2
  br label %218

218:                                              ; preds = %213, %206
  %219 = phi i64 [ %208, %206 ], [ %217, %213 ]
  %220 = phi i32* [ %212, %206 ], [ %215, %213 ]
  %221 = bitcast i32* %220 to i8*
  %222 = bitcast i32* %203 to i8*
  call void @llvm.memcpy.p0i8.p0i8.i64(i8* align 4 %221, i8* align 4 %222, i64 %219, i1 false) #8
  %223 = getelementptr inbounds %struct.TfLiteTensor, %struct.TfLiteTensor* %64, i64 0, i32 1
  %224 = bitcast %union.TfLitePtrUnion* %223 to i8**
  %225 = load i8*, i8** %224, align 8
  br label %226

226:                                              ; preds = %218, %196
  %227 = phi i32 [ %202, %218 ], [ 0, %196 ]
  %228 = phi i8* [ %225, %218 ], [ null, %196 ]
  %229 = bitcast %"class.tflite::RuntimeShape"* %40 to i8*
  call void @llvm.lifetime.start.p0i8(i64 32, i8* nonnull %229) #8
  %230 = icmp eq %struct.TfLiteTensor* %74, null
  br i1 %230, label %231, label %233

231:                                              ; preds = %226
  %232 = getelementptr inbounds %"class.tflite::RuntimeShape", %"class.tflite::RuntimeShape"* %40, i64 0, i32 0
  store i32 0, i32* %232, align 8, !alias.scope !174
  br label %261

233:                                              ; preds = %226
  %234 = getelementptr inbounds %struct.TfLiteTensor, %struct.TfLiteTensor* %74, i64 0, i32 2
  %235 = load %struct.TfLiteIntArray*, %struct.TfLiteIntArray** %234, align 8, !noalias !174
  %236 = getelementptr inbounds %struct.TfLiteIntArray, %struct.TfLiteIntArray* %235, i64 0, i32 0
  %237 = load i32, i32* %236, align 4, !noalias !174
  %238 = getelementptr inbounds %struct.TfLiteIntArray, %struct.TfLiteIntArray* %235, i64 0, i32 1, i64 0
  %239 = getelementptr inbounds %"class.tflite::RuntimeShape", %"class.tflite::RuntimeShape"* %40, i64 0, i32 0
  store i32 %237, i32* %239, align 8, !alias.scope !174
  %240 = icmp sgt i32 %237, 5
  br i1 %240, label %241, label %248

241:                                              ; preds = %233
  %242 = sext i32 %237 to i64
  %243 = shl nsw i64 %242, 2
  %244 = tail call i8* @_Znam(i64 %243) #9, !noalias !174
  %245 = getelementptr inbounds %"class.tflite::RuntimeShape", %"class.tflite::RuntimeShape"* %40, i64 0, i32 1, i32 0
  %246 = bitcast i32** %245 to i8**
  store i8* %244, i8** %246, align 8, !alias.scope !174
  %247 = bitcast i8* %244 to i32*
  br label %253

248:                                              ; preds = %233
  %249 = getelementptr inbounds %"class.tflite::RuntimeShape", %"class.tflite::RuntimeShape"* %40, i64 0, i32 1
  %250 = bitcast %union.anon* %249 to i32*
  %251 = sext i32 %237 to i64
  %252 = shl nsw i64 %251, 2
  br label %253

253:                                              ; preds = %248, %241
  %254 = phi i64 [ %243, %241 ], [ %252, %248 ]
  %255 = phi i32* [ %247, %241 ], [ %250, %248 ]
  %256 = bitcast i32* %255 to i8*
  %257 = bitcast i32* %238 to i8*
  call void @llvm.memcpy.p0i8.p0i8.i64(i8* align 4 %256, i8* align 4 %257, i64 %254, i1 false) #8
  %258 = getelementptr inbounds %struct.TfLiteTensor, %struct.TfLiteTensor* %74, i64 0, i32 1
  %259 = bitcast %union.TfLitePtrUnion* %258 to i8**
  %260 = load i8*, i8** %259, align 8
  br label %261

261:                                              ; preds = %253, %231
  %262 = phi i32 [ %237, %253 ], [ 0, %231 ]
  %263 = phi i8* [ %260, %253 ], [ null, %231 ]
  %264 = bitcast %"class.tflite::RuntimeShape"* %41 to i8*
  call void @llvm.lifetime.start.p0i8(i64 32, i8* nonnull %264) #8
  %265 = icmp eq %struct.TfLiteTensor* %86, null
  br i1 %265, label %266, label %268

266:                                              ; preds = %261
  %267 = getelementptr inbounds %"class.tflite::RuntimeShape", %"class.tflite::RuntimeShape"* %41, i64 0, i32 0
  store i32 0, i32* %267, align 8, !alias.scope !177
  br label %296

268:                                              ; preds = %261
  %269 = getelementptr inbounds %struct.TfLiteTensor, %struct.TfLiteTensor* %86, i64 0, i32 2
  %270 = load %struct.TfLiteIntArray*, %struct.TfLiteIntArray** %269, align 8, !noalias !177
  %271 = getelementptr inbounds %struct.TfLiteIntArray, %struct.TfLiteIntArray* %270, i64 0, i32 0
  %272 = load i32, i32* %271, align 4, !noalias !177
  %273 = getelementptr inbounds %struct.TfLiteIntArray, %struct.TfLiteIntArray* %270, i64 0, i32 1, i64 0
  %274 = getelementptr inbounds %"class.tflite::RuntimeShape", %"class.tflite::RuntimeShape"* %41, i64 0, i32 0
  store i32 %272, i32* %274, align 8, !alias.scope !177
  %275 = icmp sgt i32 %272, 5
  br i1 %275, label %276, label %283

276:                                              ; preds = %268
  %277 = sext i32 %272 to i64
  %278 = shl nsw i64 %277, 2
  %279 = tail call i8* @_Znam(i64 %278) #9, !noalias !177
  %280 = getelementptr inbounds %"class.tflite::RuntimeShape", %"class.tflite::RuntimeShape"* %41, i64 0, i32 1, i32 0
  %281 = bitcast i32** %280 to i8**
  store i8* %279, i8** %281, align 8, !alias.scope !177
  %282 = bitcast i8* %279 to i32*
  br label %288

283:                                              ; preds = %268
  %284 = getelementptr inbounds %"class.tflite::RuntimeShape", %"class.tflite::RuntimeShape"* %41, i64 0, i32 1
  %285 = bitcast %union.anon* %284 to i32*
  %286 = sext i32 %272 to i64
  %287 = shl nsw i64 %286, 2
  br label %288

288:                                              ; preds = %283, %276
  %289 = phi i64 [ %278, %276 ], [ %287, %283 ]
  %290 = phi i32* [ %282, %276 ], [ %285, %283 ]
  %291 = bitcast i32* %290 to i8*
  %292 = bitcast i32* %273 to i8*
  call void @llvm.memcpy.p0i8.p0i8.i64(i8* align 4 %291, i8* align 4 %292, i64 %289, i1 false) #8
  %293 = getelementptr inbounds %struct.TfLiteTensor, %struct.TfLiteTensor* %86, i64 0, i32 1
  %294 = bitcast %union.TfLitePtrUnion* %293 to i8**
  %295 = load i8*, i8** %294, align 8
  br label %296

296:                                              ; preds = %288, %266
  %297 = phi i32 [ %272, %288 ], [ 0, %266 ]
  %298 = phi i8* [ %295, %288 ], [ null, %266 ]
  %299 = getelementptr inbounds %"class.tflite::RuntimeShape", %"class.tflite::RuntimeShape"* %39, i64 0, i32 1
  %300 = icmp sgt i32 %227, 5
  br i1 %300, label %301, label %304

301:                                              ; preds = %296
  %302 = getelementptr inbounds %union.anon, %union.anon* %299, i64 0, i32 0
  %303 = load i32*, i32** %302, align 8
  br label %307

304:                                              ; preds = %296
  %305 = bitcast %union.anon* %299 to i32*
  %306 = icmp sgt i32 %227, 0
  br i1 %306, label %307, label %411

307:                                              ; preds = %304, %301
  %308 = phi i32* [ %303, %301 ], [ %305, %304 ]
  %309 = zext i32 %227 to i64
  %310 = icmp ult i32 %227, 8
  br i1 %310, label %396, label %311

311:                                              ; preds = %307
  %312 = and i64 %309, 4294967288
  %313 = add nsw i64 %312, -8
  %314 = lshr exact i64 %313, 3
  %315 = add nuw nsw i64 %314, 1
  %316 = and i64 %315, 3
  %317 = icmp ult i64 %313, 24
  br i1 %317, label %363, label %318

318:                                              ; preds = %311
  %319 = sub nsw i64 %315, %316
  br label %320

320:                                              ; preds = %320, %318
  %321 = phi i64 [ 0, %318 ], [ %360, %320 ]
  %322 = phi <4 x i32> [ <i32 1, i32 1, i32 1, i32 1>, %318 ], [ %358, %320 ]
  %323 = phi <4 x i32> [ <i32 1, i32 1, i32 1, i32 1>, %318 ], [ %359, %320 ]
  %324 = phi i64 [ %319, %318 ], [ %361, %320 ]
  %325 = getelementptr inbounds i32, i32* %308, i64 %321
  %326 = bitcast i32* %325 to <4 x i32>*
  %327 = load <4 x i32>, <4 x i32>* %326, align 4
  %328 = getelementptr inbounds i32, i32* %325, i64 4
  %329 = bitcast i32* %328 to <4 x i32>*
  %330 = load <4 x i32>, <4 x i32>* %329, align 4
  %331 = mul nsw <4 x i32> %327, %322
  %332 = mul nsw <4 x i32> %330, %323
  %333 = or i64 %321, 8
  %334 = getelementptr inbounds i32, i32* %308, i64 %333
  %335 = bitcast i32* %334 to <4 x i32>*
  %336 = load <4 x i32>, <4 x i32>* %335, align 4
  %337 = getelementptr inbounds i32, i32* %334, i64 4
  %338 = bitcast i32* %337 to <4 x i32>*
  %339 = load <4 x i32>, <4 x i32>* %338, align 4
  %340 = mul nsw <4 x i32> %336, %331
  %341 = mul nsw <4 x i32> %339, %332
  %342 = or i64 %321, 16
  %343 = getelementptr inbounds i32, i32* %308, i64 %342
  %344 = bitcast i32* %343 to <4 x i32>*
  %345 = load <4 x i32>, <4 x i32>* %344, align 4
  %346 = getelementptr inbounds i32, i32* %343, i64 4
  %347 = bitcast i32* %346 to <4 x i32>*
  %348 = load <4 x i32>, <4 x i32>* %347, align 4
  %349 = mul nsw <4 x i32> %345, %340
  %350 = mul nsw <4 x i32> %348, %341
  %351 = or i64 %321, 24
  %352 = getelementptr inbounds i32, i32* %308, i64 %351
  %353 = bitcast i32* %352 to <4 x i32>*
  %354 = load <4 x i32>, <4 x i32>* %353, align 4
  %355 = getelementptr inbounds i32, i32* %352, i64 4
  %356 = bitcast i32* %355 to <4 x i32>*
  %357 = load <4 x i32>, <4 x i32>* %356, align 4
  %358 = mul nsw <4 x i32> %354, %349
  %359 = mul nsw <4 x i32> %357, %350
  %360 = add i64 %321, 32
  %361 = add i64 %324, -4
  %362 = icmp eq i64 %361, 0
  br i1 %362, label %363, label %320, !llvm.loop !180

363:                                              ; preds = %320, %311
  %364 = phi <4 x i32> [ undef, %311 ], [ %358, %320 ]
  %365 = phi <4 x i32> [ undef, %311 ], [ %359, %320 ]
  %366 = phi i64 [ 0, %311 ], [ %360, %320 ]
  %367 = phi <4 x i32> [ <i32 1, i32 1, i32 1, i32 1>, %311 ], [ %358, %320 ]
  %368 = phi <4 x i32> [ <i32 1, i32 1, i32 1, i32 1>, %311 ], [ %359, %320 ]
  %369 = icmp eq i64 %316, 0
  br i1 %369, label %386, label %370

370:                                              ; preds = %363, %370
  %371 = phi i64 [ %383, %370 ], [ %366, %363 ]
  %372 = phi <4 x i32> [ %381, %370 ], [ %367, %363 ]
  %373 = phi <4 x i32> [ %382, %370 ], [ %368, %363 ]
  %374 = phi i64 [ %384, %370 ], [ %316, %363 ]
  %375 = getelementptr inbounds i32, i32* %308, i64 %371
  %376 = bitcast i32* %375 to <4 x i32>*
  %377 = load <4 x i32>, <4 x i32>* %376, align 4
  %378 = getelementptr inbounds i32, i32* %375, i64 4
  %379 = bitcast i32* %378 to <4 x i32>*
  %380 = load <4 x i32>, <4 x i32>* %379, align 4
  %381 = mul nsw <4 x i32> %377, %372
  %382 = mul nsw <4 x i32> %380, %373
  %383 = add i64 %371, 8
  %384 = add i64 %374, -1
  %385 = icmp eq i64 %384, 0
  br i1 %385, label %386, label %370, !llvm.loop !181

386:                                              ; preds = %370, %363
  %387 = phi <4 x i32> [ %364, %363 ], [ %381, %370 ]
  %388 = phi <4 x i32> [ %365, %363 ], [ %382, %370 ]
  %389 = mul <4 x i32> %388, %387
  %390 = shufflevector <4 x i32> %389, <4 x i32> undef, <4 x i32> <i32 2, i32 3, i32 undef, i32 undef>
  %391 = mul <4 x i32> %389, %390
  %392 = shufflevector <4 x i32> %391, <4 x i32> undef, <4 x i32> <i32 1, i32 undef, i32 undef, i32 undef>
  %393 = mul <4 x i32> %391, %392
  %394 = extractelement <4 x i32> %393, i32 0
  %395 = icmp eq i64 %312, %309
  br i1 %395, label %407, label %396

396:                                              ; preds = %386, %307
  %397 = phi i64 [ 0, %307 ], [ %312, %386 ]
  %398 = phi i32 [ 1, %307 ], [ %394, %386 ]
  br label %399

399:                                              ; preds = %396, %399
  %400 = phi i64 [ %405, %399 ], [ %397, %396 ]
  %401 = phi i32 [ %404, %399 ], [ %398, %396 ]
  %402 = getelementptr inbounds i32, i32* %308, i64 %400
  %403 = load i32, i32* %402, align 4
  %404 = mul nsw i32 %403, %401
  %405 = add nuw nsw i64 %400, 1
  %406 = icmp eq i64 %405, %309
  br i1 %406, label %407, label %399, !llvm.loop !182

407:                                              ; preds = %399, %386
  %408 = phi i32 [ %394, %386 ], [ %404, %399 ]
  %409 = sext i32 %408 to i64
  %410 = icmp sgt i32 %408, 0
  br i1 %410, label %411, label %499

411:                                              ; preds = %407, %304
  %412 = phi i64 [ %409, %407 ], [ 1, %304 ]
  %413 = icmp ult i64 %412, 32
  br i1 %413, label %457, label %414

414:                                              ; preds = %411
  %415 = getelementptr i8, i8* %298, i64 %412
  %416 = getelementptr i8, i8* %228, i64 %412
  %417 = getelementptr i8, i8* %263, i64 %412
  %418 = icmp ult i8* %298, %416
  %419 = icmp ult i8* %228, %415
  %420 = and i1 %418, %419
  %421 = icmp ult i8* %298, %417
  %422 = icmp ult i8* %263, %415
  %423 = and i1 %421, %422
  %424 = or i1 %420, %423
  br i1 %424, label %457, label %425

425:                                              ; preds = %414
  %426 = and i64 %412, -32
  br label %427

427:                                              ; preds = %427, %425
  %428 = phi i64 [ 0, %425 ], [ %453, %427 ]
  %429 = getelementptr inbounds i8, i8* %228, i64 %428
  %430 = bitcast i8* %429 to <16 x i8>*
  %431 = load <16 x i8>, <16 x i8>* %430, align 1, !alias.scope !183
  %432 = getelementptr inbounds i8, i8* %429, i64 16
  %433 = bitcast i8* %432 to <16 x i8>*
  %434 = load <16 x i8>, <16 x i8>* %433, align 1, !alias.scope !183
  %435 = icmp ne <16 x i8> %431, zeroinitializer
  %436 = icmp ne <16 x i8> %434, zeroinitializer
  %437 = getelementptr inbounds i8, i8* %263, i64 %428
  %438 = bitcast i8* %437 to <16 x i8>*
  %439 = load <16 x i8>, <16 x i8>* %438, align 1, !alias.scope !186
  %440 = getelementptr inbounds i8, i8* %437, i64 16
  %441 = bitcast i8* %440 to <16 x i8>*
  %442 = load <16 x i8>, <16 x i8>* %441, align 1, !alias.scope !186
  %443 = icmp ne <16 x i8> %439, zeroinitializer
  %444 = icmp ne <16 x i8> %442, zeroinitializer
  %445 = xor <16 x i1> %435, %443
  %446 = xor <16 x i1> %436, %444
  %447 = getelementptr inbounds i8, i8* %298, i64 %428
  %448 = zext <16 x i1> %445 to <16 x i8>
  %449 = zext <16 x i1> %446 to <16 x i8>
  %450 = bitcast i8* %447 to <16 x i8>*
  store <16 x i8> %448, <16 x i8>* %450, align 1, !alias.scope !188, !noalias !190
  %451 = getelementptr inbounds i8, i8* %447, i64 16
  %452 = bitcast i8* %451 to <16 x i8>*
  store <16 x i8> %449, <16 x i8>* %452, align 1, !alias.scope !188, !noalias !190
  %453 = add i64 %428, 32
  %454 = icmp eq i64 %453, %426
  br i1 %454, label %455, label %427, !llvm.loop !191

455:                                              ; preds = %427
  %456 = icmp eq i64 %412, %426
  br i1 %456, label %499, label %457

457:                                              ; preds = %455, %414, %411
  %458 = phi i64 [ 0, %414 ], [ 0, %411 ], [ %426, %455 ]
  %459 = and i64 %412, 1
  %460 = icmp eq i64 %459, 0
  br i1 %460, label %472, label %461

461:                                              ; preds = %457
  %462 = getelementptr inbounds i8, i8* %228, i64 %458
  %463 = load i8, i8* %462, align 1, !range !35
  %464 = icmp ne i8 %463, 0
  %465 = getelementptr inbounds i8, i8* %263, i64 %458
  %466 = load i8, i8* %465, align 1, !range !35
  %467 = icmp ne i8 %466, 0
  %468 = xor i1 %464, %467
  %469 = getelementptr inbounds i8, i8* %298, i64 %458
  %470 = zext i1 %468 to i8
  store i8 %470, i8* %469, align 1
  %471 = or i64 %458, 1
  br label %472

472:                                              ; preds = %457, %461
  %473 = phi i64 [ %458, %457 ], [ %471, %461 ]
  %474 = or i64 %458, 1
  %475 = icmp eq i64 %412, %474
  br i1 %475, label %499, label %476

476:                                              ; preds = %472, %476
  %477 = phi i64 [ %497, %476 ], [ %473, %472 ]
  %478 = getelementptr inbounds i8, i8* %228, i64 %477
  %479 = load i8, i8* %478, align 1, !range !35
  %480 = icmp ne i8 %479, 0
  %481 = getelementptr inbounds i8, i8* %263, i64 %477
  %482 = load i8, i8* %481, align 1, !range !35
  %483 = icmp ne i8 %482, 0
  %484 = xor i1 %480, %483
  %485 = getelementptr inbounds i8, i8* %298, i64 %477
  %486 = zext i1 %484 to i8
  store i8 %486, i8* %485, align 1
  %487 = add nuw nsw i64 %477, 1
  %488 = getelementptr inbounds i8, i8* %228, i64 %487
  %489 = load i8, i8* %488, align 1, !range !35
  %490 = icmp ne i8 %489, 0
  %491 = getelementptr inbounds i8, i8* %263, i64 %487
  %492 = load i8, i8* %491, align 1, !range !35
  %493 = icmp ne i8 %492, 0
  %494 = xor i1 %490, %493
  %495 = getelementptr inbounds i8, i8* %298, i64 %487
  %496 = zext i1 %494 to i8
  store i8 %496, i8* %495, align 1
  %497 = add nuw nsw i64 %477, 2
  %498 = icmp eq i64 %497, %412
  br i1 %498, label %499, label %476, !llvm.loop !192

499:                                              ; preds = %472, %476, %455, %407
  %500 = icmp sgt i32 %297, 5
  br i1 %500, label %501, label %507

501:                                              ; preds = %499
  %502 = getelementptr inbounds %"class.tflite::RuntimeShape", %"class.tflite::RuntimeShape"* %41, i64 0, i32 1, i32 0
  %503 = load i32*, i32** %502, align 8
  %504 = icmp eq i32* %503, null
  br i1 %504, label %507, label %505

505:                                              ; preds = %501
  %506 = bitcast i32* %503 to i8*
  tail call void @_ZdaPv(i8* %506) #9
  br label %507

507:                                              ; preds = %505, %501, %499
  call void @llvm.lifetime.end.p0i8(i64 32, i8* nonnull %264) #8
  %508 = icmp sgt i32 %262, 5
  br i1 %508, label %509, label %515

509:                                              ; preds = %507
  %510 = getelementptr inbounds %"class.tflite::RuntimeShape", %"class.tflite::RuntimeShape"* %40, i64 0, i32 1, i32 0
  %511 = load i32*, i32** %510, align 8
  %512 = icmp eq i32* %511, null
  br i1 %512, label %515, label %513

513:                                              ; preds = %509
  %514 = bitcast i32* %511 to i8*
  tail call void @_ZdaPv(i8* %514) #9
  br label %515

515:                                              ; preds = %513, %509, %507
  call void @llvm.lifetime.end.p0i8(i64 32, i8* nonnull %229) #8
  br i1 %300, label %516, label %553

516:                                              ; preds = %515
  %517 = getelementptr inbounds %"class.tflite::RuntimeShape", %"class.tflite::RuntimeShape"* %39, i64 0, i32 1, i32 0
  %518 = load i32*, i32** %517, align 8
  %519 = icmp eq i32* %518, null
  br i1 %519, label %553, label %520

520:                                              ; preds = %516
  %521 = bitcast i32* %518 to i8*
  tail call void @_ZdaPv(i8* %521) #9
  br label %553

522:                                              ; preds = %185, %163
  %523 = phi i8* [ %192, %185 ], [ null, %163 ]
  call void @_ZN6tflite13reference_ops29BroadcastComparison4DSlowImplIbXadL_ZNS0_10NotEqualFnIbEEbT_S3_EEEEvRKNS_16ComparisonParamsERKNS_12RuntimeShapeEPKS3_S9_SB_S9_Pb(%"struct.tflite::ComparisonParams"* nonnull dereferenceable(32) %35, %"class.tflite::RuntimeShape"* nonnull dereferenceable(32) %36, i8* %126, %"class.tflite::RuntimeShape"* nonnull dereferenceable(32) %37, i8* %160, %"class.tflite::RuntimeShape"* nonnull dereferenceable(32) %38, i8* %523) #8
  %524 = getelementptr inbounds %"class.tflite::RuntimeShape", %"class.tflite::RuntimeShape"* %38, i64 0, i32 0
  %525 = load i32, i32* %524, align 8
  %526 = icmp sgt i32 %525, 5
  br i1 %526, label %527, label %533

527:                                              ; preds = %522
  %528 = getelementptr inbounds %"class.tflite::RuntimeShape", %"class.tflite::RuntimeShape"* %38, i64 0, i32 1, i32 0
  %529 = load i32*, i32** %528, align 8
  %530 = icmp eq i32* %529, null
  br i1 %530, label %533, label %531

531:                                              ; preds = %527
  %532 = bitcast i32* %529 to i8*
  call void @_ZdaPv(i8* %532) #9
  br label %533

533:                                              ; preds = %531, %527, %522
  call void @llvm.lifetime.end.p0i8(i64 32, i8* nonnull %161) #8
  %534 = getelementptr inbounds %"class.tflite::RuntimeShape", %"class.tflite::RuntimeShape"* %37, i64 0, i32 0
  %535 = load i32, i32* %534, align 8
  %536 = icmp sgt i32 %535, 5
  br i1 %536, label %537, label %543

537:                                              ; preds = %533
  %538 = getelementptr inbounds %"class.tflite::RuntimeShape", %"class.tflite::RuntimeShape"* %37, i64 0, i32 1, i32 0
  %539 = load i32*, i32** %538, align 8
  %540 = icmp eq i32* %539, null
  br i1 %540, label %543, label %541

541:                                              ; preds = %537
  %542 = bitcast i32* %539 to i8*
  call void @_ZdaPv(i8* %542) #9
  br label %543

543:                                              ; preds = %541, %537, %533
  call void @llvm.lifetime.end.p0i8(i64 32, i8* nonnull %127) #8
  %544 = getelementptr inbounds %"class.tflite::RuntimeShape", %"class.tflite::RuntimeShape"* %36, i64 0, i32 0
  %545 = load i32, i32* %544, align 8
  %546 = icmp sgt i32 %545, 5
  br i1 %546, label %547, label %553

547:                                              ; preds = %543
  %548 = getelementptr inbounds %"class.tflite::RuntimeShape", %"class.tflite::RuntimeShape"* %36, i64 0, i32 1, i32 0
  %549 = load i32*, i32** %548, align 8
  %550 = icmp eq i32* %549, null
  br i1 %550, label %553, label %551

551:                                              ; preds = %547
  %552 = bitcast i32* %549 to i8*
  call void @_ZdaPv(i8* %552) #9
  br label %553

553:                                              ; preds = %543, %547, %551, %515, %516, %520
  %554 = phi i8* [ %194, %520 ], [ %194, %516 ], [ %194, %515 ], [ %93, %551 ], [ %93, %547 ], [ %93, %543 ]
  call void @llvm.lifetime.end.p0i8(i64 32, i8* nonnull %554) #8
  call void @llvm.lifetime.end.p0i8(i64 32, i8* nonnull %91) #8
  br label %2967

555:                                              ; preds = %85
  %556 = bitcast %"struct.tflite::ComparisonParams"* %28 to i8*
  call void @llvm.lifetime.start.p0i8(i64 32, i8* nonnull %556) #8
  call void @llvm.memset.p0i8.i64(i8* nonnull align 4 %556, i8 -86, i64 32, i1 false) #8
  br i1 %87, label %658, label %557

557:                                              ; preds = %555
  %558 = bitcast %"class.tflite::RuntimeShape"* %29 to i8*
  call void @llvm.lifetime.start.p0i8(i64 32, i8* nonnull %558) #8
  %559 = icmp eq %struct.TfLiteTensor* %64, null
  br i1 %559, label %560, label %562

560:                                              ; preds = %557
  %561 = getelementptr inbounds %"class.tflite::RuntimeShape", %"class.tflite::RuntimeShape"* %29, i64 0, i32 0
  store i32 0, i32* %561, align 8, !alias.scope !193
  br label %590

562:                                              ; preds = %557
  %563 = getelementptr inbounds %struct.TfLiteTensor, %struct.TfLiteTensor* %64, i64 0, i32 2
  %564 = load %struct.TfLiteIntArray*, %struct.TfLiteIntArray** %563, align 8, !noalias !193
  %565 = getelementptr inbounds %struct.TfLiteIntArray, %struct.TfLiteIntArray* %564, i64 0, i32 0
  %566 = load i32, i32* %565, align 4, !noalias !193
  %567 = getelementptr inbounds %struct.TfLiteIntArray, %struct.TfLiteIntArray* %564, i64 0, i32 1, i64 0
  %568 = getelementptr inbounds %"class.tflite::RuntimeShape", %"class.tflite::RuntimeShape"* %29, i64 0, i32 0
  store i32 %566, i32* %568, align 8, !alias.scope !193
  %569 = icmp sgt i32 %566, 5
  br i1 %569, label %570, label %577

570:                                              ; preds = %562
  %571 = sext i32 %566 to i64
  %572 = shl nsw i64 %571, 2
  %573 = tail call i8* @_Znam(i64 %572) #9, !noalias !193
  %574 = getelementptr inbounds %"class.tflite::RuntimeShape", %"class.tflite::RuntimeShape"* %29, i64 0, i32 1, i32 0
  %575 = bitcast i32** %574 to i8**
  store i8* %573, i8** %575, align 8, !alias.scope !193
  %576 = bitcast i8* %573 to i32*
  br label %582

577:                                              ; preds = %562
  %578 = getelementptr inbounds %"class.tflite::RuntimeShape", %"class.tflite::RuntimeShape"* %29, i64 0, i32 1
  %579 = bitcast %union.anon* %578 to i32*
  %580 = sext i32 %566 to i64
  %581 = shl nsw i64 %580, 2
  br label %582

582:                                              ; preds = %577, %570
  %583 = phi i64 [ %572, %570 ], [ %581, %577 ]
  %584 = phi i32* [ %576, %570 ], [ %579, %577 ]
  %585 = bitcast i32* %584 to i8*
  %586 = bitcast i32* %567 to i8*
  call void @llvm.memcpy.p0i8.p0i8.i64(i8* align 4 %585, i8* align 4 %586, i64 %583, i1 false) #8
  %587 = getelementptr inbounds %struct.TfLiteTensor, %struct.TfLiteTensor* %64, i64 0, i32 1
  %588 = bitcast %union.TfLitePtrUnion* %587 to float**
  %589 = load float*, float** %588, align 8
  br label %590

590:                                              ; preds = %582, %560
  %591 = phi float* [ %589, %582 ], [ null, %560 ]
  %592 = bitcast %"class.tflite::RuntimeShape"* %30 to i8*
  call void @llvm.lifetime.start.p0i8(i64 32, i8* nonnull %592) #8
  %593 = icmp eq %struct.TfLiteTensor* %74, null
  br i1 %593, label %594, label %596

594:                                              ; preds = %590
  %595 = getelementptr inbounds %"class.tflite::RuntimeShape", %"class.tflite::RuntimeShape"* %30, i64 0, i32 0
  store i32 0, i32* %595, align 8, !alias.scope !196
  br label %624

596:                                              ; preds = %590
  %597 = getelementptr inbounds %struct.TfLiteTensor, %struct.TfLiteTensor* %74, i64 0, i32 2
  %598 = load %struct.TfLiteIntArray*, %struct.TfLiteIntArray** %597, align 8, !noalias !196
  %599 = getelementptr inbounds %struct.TfLiteIntArray, %struct.TfLiteIntArray* %598, i64 0, i32 0
  %600 = load i32, i32* %599, align 4, !noalias !196
  %601 = getelementptr inbounds %struct.TfLiteIntArray, %struct.TfLiteIntArray* %598, i64 0, i32 1, i64 0
  %602 = getelementptr inbounds %"class.tflite::RuntimeShape", %"class.tflite::RuntimeShape"* %30, i64 0, i32 0
  store i32 %600, i32* %602, align 8, !alias.scope !196
  %603 = icmp sgt i32 %600, 5
  br i1 %603, label %604, label %611

604:                                              ; preds = %596
  %605 = sext i32 %600 to i64
  %606 = shl nsw i64 %605, 2
  %607 = tail call i8* @_Znam(i64 %606) #9, !noalias !196
  %608 = getelementptr inbounds %"class.tflite::RuntimeShape", %"class.tflite::RuntimeShape"* %30, i64 0, i32 1, i32 0
  %609 = bitcast i32** %608 to i8**
  store i8* %607, i8** %609, align 8, !alias.scope !196
  %610 = bitcast i8* %607 to i32*
  br label %616

611:                                              ; preds = %596
  %612 = getelementptr inbounds %"class.tflite::RuntimeShape", %"class.tflite::RuntimeShape"* %30, i64 0, i32 1
  %613 = bitcast %union.anon* %612 to i32*
  %614 = sext i32 %600 to i64
  %615 = shl nsw i64 %614, 2
  br label %616

616:                                              ; preds = %611, %604
  %617 = phi i64 [ %606, %604 ], [ %615, %611 ]
  %618 = phi i32* [ %610, %604 ], [ %613, %611 ]
  %619 = bitcast i32* %618 to i8*
  %620 = bitcast i32* %601 to i8*
  call void @llvm.memcpy.p0i8.p0i8.i64(i8* align 4 %619, i8* align 4 %620, i64 %617, i1 false) #8
  %621 = getelementptr inbounds %struct.TfLiteTensor, %struct.TfLiteTensor* %74, i64 0, i32 1
  %622 = bitcast %union.TfLitePtrUnion* %621 to float**
  %623 = load float*, float** %622, align 8
  br label %624

624:                                              ; preds = %616, %594
  %625 = phi float* [ %623, %616 ], [ null, %594 ]
  %626 = bitcast %"class.tflite::RuntimeShape"* %31 to i8*
  call void @llvm.lifetime.start.p0i8(i64 32, i8* nonnull %626) #8
  %627 = icmp eq %struct.TfLiteTensor* %86, null
  br i1 %627, label %628, label %630

628:                                              ; preds = %624
  %629 = getelementptr inbounds %"class.tflite::RuntimeShape", %"class.tflite::RuntimeShape"* %31, i64 0, i32 0
  store i32 0, i32* %629, align 8, !alias.scope !199
  br label %1037

630:                                              ; preds = %624
  %631 = getelementptr inbounds %struct.TfLiteTensor, %struct.TfLiteTensor* %86, i64 0, i32 2
  %632 = load %struct.TfLiteIntArray*, %struct.TfLiteIntArray** %631, align 8, !noalias !199
  %633 = getelementptr inbounds %struct.TfLiteIntArray, %struct.TfLiteIntArray* %632, i64 0, i32 0
  %634 = load i32, i32* %633, align 4, !noalias !199
  %635 = getelementptr inbounds %struct.TfLiteIntArray, %struct.TfLiteIntArray* %632, i64 0, i32 1, i64 0
  %636 = getelementptr inbounds %"class.tflite::RuntimeShape", %"class.tflite::RuntimeShape"* %31, i64 0, i32 0
  store i32 %634, i32* %636, align 8, !alias.scope !199
  %637 = icmp sgt i32 %634, 5
  br i1 %637, label %638, label %645

638:                                              ; preds = %630
  %639 = sext i32 %634 to i64
  %640 = shl nsw i64 %639, 2
  %641 = tail call i8* @_Znam(i64 %640) #9, !noalias !199
  %642 = getelementptr inbounds %"class.tflite::RuntimeShape", %"class.tflite::RuntimeShape"* %31, i64 0, i32 1, i32 0
  %643 = bitcast i32** %642 to i8**
  store i8* %641, i8** %643, align 8, !alias.scope !199
  %644 = bitcast i8* %641 to i32*
  br label %650

645:                                              ; preds = %630
  %646 = getelementptr inbounds %"class.tflite::RuntimeShape", %"class.tflite::RuntimeShape"* %31, i64 0, i32 1
  %647 = bitcast %union.anon* %646 to i32*
  %648 = sext i32 %634 to i64
  %649 = shl nsw i64 %648, 2
  br label %650

650:                                              ; preds = %645, %638
  %651 = phi i64 [ %640, %638 ], [ %649, %645 ]
  %652 = phi i32* [ %644, %638 ], [ %647, %645 ]
  %653 = bitcast i32* %652 to i8*
  %654 = bitcast i32* %635 to i8*
  call void @llvm.memcpy.p0i8.p0i8.i64(i8* align 4 %653, i8* align 4 %654, i64 %651, i1 false) #8
  %655 = getelementptr inbounds %struct.TfLiteTensor, %struct.TfLiteTensor* %86, i64 0, i32 1
  %656 = bitcast %union.TfLitePtrUnion* %655 to i8**
  %657 = load i8*, i8** %656, align 8
  br label %1037

658:                                              ; preds = %555
  %659 = bitcast %"class.tflite::RuntimeShape"* %32 to i8*
  call void @llvm.lifetime.start.p0i8(i64 32, i8* nonnull %659) #8
  %660 = icmp eq %struct.TfLiteTensor* %64, null
  br i1 %660, label %661, label %663

661:                                              ; preds = %658
  %662 = getelementptr inbounds %"class.tflite::RuntimeShape", %"class.tflite::RuntimeShape"* %32, i64 0, i32 0
  store i32 0, i32* %662, align 8, !alias.scope !202
  br label %692

663:                                              ; preds = %658
  %664 = getelementptr inbounds %struct.TfLiteTensor, %struct.TfLiteTensor* %64, i64 0, i32 2
  %665 = load %struct.TfLiteIntArray*, %struct.TfLiteIntArray** %664, align 8, !noalias !202
  %666 = getelementptr inbounds %struct.TfLiteIntArray, %struct.TfLiteIntArray* %665, i64 0, i32 0
  %667 = load i32, i32* %666, align 4, !noalias !202
  %668 = getelementptr inbounds %struct.TfLiteIntArray, %struct.TfLiteIntArray* %665, i64 0, i32 1, i64 0
  %669 = getelementptr inbounds %"class.tflite::RuntimeShape", %"class.tflite::RuntimeShape"* %32, i64 0, i32 0
  store i32 %667, i32* %669, align 8, !alias.scope !202
  %670 = icmp sgt i32 %667, 5
  br i1 %670, label %671, label %678

671:                                              ; preds = %663
  %672 = sext i32 %667 to i64
  %673 = shl nsw i64 %672, 2
  %674 = tail call i8* @_Znam(i64 %673) #9, !noalias !202
  %675 = getelementptr inbounds %"class.tflite::RuntimeShape", %"class.tflite::RuntimeShape"* %32, i64 0, i32 1, i32 0
  %676 = bitcast i32** %675 to i8**
  store i8* %674, i8** %676, align 8, !alias.scope !202
  %677 = bitcast i8* %674 to i32*
  br label %683

678:                                              ; preds = %663
  %679 = getelementptr inbounds %"class.tflite::RuntimeShape", %"class.tflite::RuntimeShape"* %32, i64 0, i32 1
  %680 = bitcast %union.anon* %679 to i32*
  %681 = sext i32 %667 to i64
  %682 = shl nsw i64 %681, 2
  br label %683

683:                                              ; preds = %678, %671
  %684 = phi i64 [ %673, %671 ], [ %682, %678 ]
  %685 = phi i32* [ %677, %671 ], [ %680, %678 ]
  %686 = bitcast i32* %685 to i8*
  %687 = bitcast i32* %668 to i8*
  call void @llvm.memcpy.p0i8.p0i8.i64(i8* align 4 %686, i8* align 4 %687, i64 %684, i1 false) #8
  %688 = getelementptr inbounds %struct.TfLiteTensor, %struct.TfLiteTensor* %64, i64 0, i32 1
  %689 = bitcast %union.TfLitePtrUnion* %688 to float**
  %690 = load float*, float** %689, align 8
  %691 = bitcast float* %690 to i8*
  br label %692

692:                                              ; preds = %683, %661
  %693 = phi i32 [ %667, %683 ], [ 0, %661 ]
  %694 = phi i8* [ %691, %683 ], [ null, %661 ]
  %695 = phi float* [ %690, %683 ], [ null, %661 ]
  %696 = bitcast %"class.tflite::RuntimeShape"* %33 to i8*
  call void @llvm.lifetime.start.p0i8(i64 32, i8* nonnull %696) #8
  %697 = icmp eq %struct.TfLiteTensor* %74, null
  br i1 %697, label %698, label %700

698:                                              ; preds = %692
  %699 = getelementptr inbounds %"class.tflite::RuntimeShape", %"class.tflite::RuntimeShape"* %33, i64 0, i32 0
  store i32 0, i32* %699, align 8, !alias.scope !205
  br label %729

700:                                              ; preds = %692
  %701 = getelementptr inbounds %struct.TfLiteTensor, %struct.TfLiteTensor* %74, i64 0, i32 2
  %702 = load %struct.TfLiteIntArray*, %struct.TfLiteIntArray** %701, align 8, !noalias !205
  %703 = getelementptr inbounds %struct.TfLiteIntArray, %struct.TfLiteIntArray* %702, i64 0, i32 0
  %704 = load i32, i32* %703, align 4, !noalias !205
  %705 = getelementptr inbounds %struct.TfLiteIntArray, %struct.TfLiteIntArray* %702, i64 0, i32 1, i64 0
  %706 = getelementptr inbounds %"class.tflite::RuntimeShape", %"class.tflite::RuntimeShape"* %33, i64 0, i32 0
  store i32 %704, i32* %706, align 8, !alias.scope !205
  %707 = icmp sgt i32 %704, 5
  br i1 %707, label %708, label %715

708:                                              ; preds = %700
  %709 = sext i32 %704 to i64
  %710 = shl nsw i64 %709, 2
  %711 = tail call i8* @_Znam(i64 %710) #9, !noalias !205
  %712 = getelementptr inbounds %"class.tflite::RuntimeShape", %"class.tflite::RuntimeShape"* %33, i64 0, i32 1, i32 0
  %713 = bitcast i32** %712 to i8**
  store i8* %711, i8** %713, align 8, !alias.scope !205
  %714 = bitcast i8* %711 to i32*
  br label %720

715:                                              ; preds = %700
  %716 = getelementptr inbounds %"class.tflite::RuntimeShape", %"class.tflite::RuntimeShape"* %33, i64 0, i32 1
  %717 = bitcast %union.anon* %716 to i32*
  %718 = sext i32 %704 to i64
  %719 = shl nsw i64 %718, 2
  br label %720

720:                                              ; preds = %715, %708
  %721 = phi i64 [ %710, %708 ], [ %719, %715 ]
  %722 = phi i32* [ %714, %708 ], [ %717, %715 ]
  %723 = bitcast i32* %722 to i8*
  %724 = bitcast i32* %705 to i8*
  call void @llvm.memcpy.p0i8.p0i8.i64(i8* align 4 %723, i8* align 4 %724, i64 %721, i1 false) #8
  %725 = getelementptr inbounds %struct.TfLiteTensor, %struct.TfLiteTensor* %74, i64 0, i32 1
  %726 = bitcast %union.TfLitePtrUnion* %725 to float**
  %727 = load float*, float** %726, align 8
  %728 = bitcast float* %727 to i8*
  br label %729

729:                                              ; preds = %720, %698
  %730 = phi i32 [ %704, %720 ], [ 0, %698 ]
  %731 = phi i8* [ %728, %720 ], [ null, %698 ]
  %732 = phi float* [ %727, %720 ], [ null, %698 ]
  %733 = bitcast %"class.tflite::RuntimeShape"* %34 to i8*
  call void @llvm.lifetime.start.p0i8(i64 32, i8* nonnull %733) #8
  %734 = icmp eq %struct.TfLiteTensor* %86, null
  br i1 %734, label %735, label %737

735:                                              ; preds = %729
  %736 = getelementptr inbounds %"class.tflite::RuntimeShape", %"class.tflite::RuntimeShape"* %34, i64 0, i32 0
  store i32 0, i32* %736, align 8, !alias.scope !208
  br label %765

737:                                              ; preds = %729
  %738 = getelementptr inbounds %struct.TfLiteTensor, %struct.TfLiteTensor* %86, i64 0, i32 2
  %739 = load %struct.TfLiteIntArray*, %struct.TfLiteIntArray** %738, align 8, !noalias !208
  %740 = getelementptr inbounds %struct.TfLiteIntArray, %struct.TfLiteIntArray* %739, i64 0, i32 0
  %741 = load i32, i32* %740, align 4, !noalias !208
  %742 = getelementptr inbounds %struct.TfLiteIntArray, %struct.TfLiteIntArray* %739, i64 0, i32 1, i64 0
  %743 = getelementptr inbounds %"class.tflite::RuntimeShape", %"class.tflite::RuntimeShape"* %34, i64 0, i32 0
  store i32 %741, i32* %743, align 8, !alias.scope !208
  %744 = icmp sgt i32 %741, 5
  br i1 %744, label %745, label %752

745:                                              ; preds = %737
  %746 = sext i32 %741 to i64
  %747 = shl nsw i64 %746, 2
  %748 = tail call i8* @_Znam(i64 %747) #9, !noalias !208
  %749 = getelementptr inbounds %"class.tflite::RuntimeShape", %"class.tflite::RuntimeShape"* %34, i64 0, i32 1, i32 0
  %750 = bitcast i32** %749 to i8**
  store i8* %748, i8** %750, align 8, !alias.scope !208
  %751 = bitcast i8* %748 to i32*
  br label %757

752:                                              ; preds = %737
  %753 = getelementptr inbounds %"class.tflite::RuntimeShape", %"class.tflite::RuntimeShape"* %34, i64 0, i32 1
  %754 = bitcast %union.anon* %753 to i32*
  %755 = sext i32 %741 to i64
  %756 = shl nsw i64 %755, 2
  br label %757

757:                                              ; preds = %752, %745
  %758 = phi i64 [ %747, %745 ], [ %756, %752 ]
  %759 = phi i32* [ %751, %745 ], [ %754, %752 ]
  %760 = bitcast i32* %759 to i8*
  %761 = bitcast i32* %742 to i8*
  call void @llvm.memcpy.p0i8.p0i8.i64(i8* align 4 %760, i8* align 4 %761, i64 %758, i1 false) #8
  %762 = getelementptr inbounds %struct.TfLiteTensor, %struct.TfLiteTensor* %86, i64 0, i32 1
  %763 = bitcast %union.TfLitePtrUnion* %762 to i8**
  %764 = load i8*, i8** %763, align 8
  br label %765

765:                                              ; preds = %757, %735
  %766 = phi i32 [ %741, %757 ], [ 0, %735 ]
  %767 = phi i8* [ %764, %757 ], [ null, %735 ]
  %768 = getelementptr inbounds %"class.tflite::RuntimeShape", %"class.tflite::RuntimeShape"* %32, i64 0, i32 1
  %769 = icmp sgt i32 %693, 5
  br i1 %769, label %770, label %773

770:                                              ; preds = %765
  %771 = getelementptr inbounds %union.anon, %union.anon* %768, i64 0, i32 0
  %772 = load i32*, i32** %771, align 8
  br label %776

773:                                              ; preds = %765
  %774 = bitcast %union.anon* %768 to i32*
  %775 = icmp sgt i32 %693, 0
  br i1 %775, label %776, label %880

776:                                              ; preds = %773, %770
  %777 = phi i32* [ %772, %770 ], [ %774, %773 ]
  %778 = zext i32 %693 to i64
  %779 = icmp ult i32 %693, 8
  br i1 %779, label %865, label %780

780:                                              ; preds = %776
  %781 = and i64 %778, 4294967288
  %782 = add nsw i64 %781, -8
  %783 = lshr exact i64 %782, 3
  %784 = add nuw nsw i64 %783, 1
  %785 = and i64 %784, 3
  %786 = icmp ult i64 %782, 24
  br i1 %786, label %832, label %787

787:                                              ; preds = %780
  %788 = sub nsw i64 %784, %785
  br label %789

789:                                              ; preds = %789, %787
  %790 = phi i64 [ 0, %787 ], [ %829, %789 ]
  %791 = phi <4 x i32> [ <i32 1, i32 1, i32 1, i32 1>, %787 ], [ %827, %789 ]
  %792 = phi <4 x i32> [ <i32 1, i32 1, i32 1, i32 1>, %787 ], [ %828, %789 ]
  %793 = phi i64 [ %788, %787 ], [ %830, %789 ]
  %794 = getelementptr inbounds i32, i32* %777, i64 %790
  %795 = bitcast i32* %794 to <4 x i32>*
  %796 = load <4 x i32>, <4 x i32>* %795, align 4
  %797 = getelementptr inbounds i32, i32* %794, i64 4
  %798 = bitcast i32* %797 to <4 x i32>*
  %799 = load <4 x i32>, <4 x i32>* %798, align 4
  %800 = mul nsw <4 x i32> %796, %791
  %801 = mul nsw <4 x i32> %799, %792
  %802 = or i64 %790, 8
  %803 = getelementptr inbounds i32, i32* %777, i64 %802
  %804 = bitcast i32* %803 to <4 x i32>*
  %805 = load <4 x i32>, <4 x i32>* %804, align 4
  %806 = getelementptr inbounds i32, i32* %803, i64 4
  %807 = bitcast i32* %806 to <4 x i32>*
  %808 = load <4 x i32>, <4 x i32>* %807, align 4
  %809 = mul nsw <4 x i32> %805, %800
  %810 = mul nsw <4 x i32> %808, %801
  %811 = or i64 %790, 16
  %812 = getelementptr inbounds i32, i32* %777, i64 %811
  %813 = bitcast i32* %812 to <4 x i32>*
  %814 = load <4 x i32>, <4 x i32>* %813, align 4
  %815 = getelementptr inbounds i32, i32* %812, i64 4
  %816 = bitcast i32* %815 to <4 x i32>*
  %817 = load <4 x i32>, <4 x i32>* %816, align 4
  %818 = mul nsw <4 x i32> %814, %809
  %819 = mul nsw <4 x i32> %817, %810
  %820 = or i64 %790, 24
  %821 = getelementptr inbounds i32, i32* %777, i64 %820
  %822 = bitcast i32* %821 to <4 x i32>*
  %823 = load <4 x i32>, <4 x i32>* %822, align 4
  %824 = getelementptr inbounds i32, i32* %821, i64 4
  %825 = bitcast i32* %824 to <4 x i32>*
  %826 = load <4 x i32>, <4 x i32>* %825, align 4
  %827 = mul nsw <4 x i32> %823, %818
  %828 = mul nsw <4 x i32> %826, %819
  %829 = add i64 %790, 32
  %830 = add i64 %793, -4
  %831 = icmp eq i64 %830, 0
  br i1 %831, label %832, label %789, !llvm.loop !211

832:                                              ; preds = %789, %780
  %833 = phi <4 x i32> [ undef, %780 ], [ %827, %789 ]
  %834 = phi <4 x i32> [ undef, %780 ], [ %828, %789 ]
  %835 = phi i64 [ 0, %780 ], [ %829, %789 ]
  %836 = phi <4 x i32> [ <i32 1, i32 1, i32 1, i32 1>, %780 ], [ %827, %789 ]
  %837 = phi <4 x i32> [ <i32 1, i32 1, i32 1, i32 1>, %780 ], [ %828, %789 ]
  %838 = icmp eq i64 %785, 0
  br i1 %838, label %855, label %839

839:                                              ; preds = %832, %839
  %840 = phi i64 [ %852, %839 ], [ %835, %832 ]
  %841 = phi <4 x i32> [ %850, %839 ], [ %836, %832 ]
  %842 = phi <4 x i32> [ %851, %839 ], [ %837, %832 ]
  %843 = phi i64 [ %853, %839 ], [ %785, %832 ]
  %844 = getelementptr inbounds i32, i32* %777, i64 %840
  %845 = bitcast i32* %844 to <4 x i32>*
  %846 = load <4 x i32>, <4 x i32>* %845, align 4
  %847 = getelementptr inbounds i32, i32* %844, i64 4
  %848 = bitcast i32* %847 to <4 x i32>*
  %849 = load <4 x i32>, <4 x i32>* %848, align 4
  %850 = mul nsw <4 x i32> %846, %841
  %851 = mul nsw <4 x i32> %849, %842
  %852 = add i64 %840, 8
  %853 = add i64 %843, -1
  %854 = icmp eq i64 %853, 0
  br i1 %854, label %855, label %839, !llvm.loop !212

855:                                              ; preds = %839, %832
  %856 = phi <4 x i32> [ %833, %832 ], [ %850, %839 ]
  %857 = phi <4 x i32> [ %834, %832 ], [ %851, %839 ]
  %858 = mul <4 x i32> %857, %856
  %859 = shufflevector <4 x i32> %858, <4 x i32> undef, <4 x i32> <i32 2, i32 3, i32 undef, i32 undef>
  %860 = mul <4 x i32> %858, %859
  %861 = shufflevector <4 x i32> %860, <4 x i32> undef, <4 x i32> <i32 1, i32 undef, i32 undef, i32 undef>
  %862 = mul <4 x i32> %860, %861
  %863 = extractelement <4 x i32> %862, i32 0
  %864 = icmp eq i64 %781, %778
  br i1 %864, label %876, label %865

865:                                              ; preds = %855, %776
  %866 = phi i64 [ 0, %776 ], [ %781, %855 ]
  %867 = phi i32 [ 1, %776 ], [ %863, %855 ]
  br label %868

868:                                              ; preds = %865, %868
  %869 = phi i64 [ %874, %868 ], [ %866, %865 ]
  %870 = phi i32 [ %873, %868 ], [ %867, %865 ]
  %871 = getelementptr inbounds i32, i32* %777, i64 %869
  %872 = load i32, i32* %871, align 4
  %873 = mul nsw i32 %872, %870
  %874 = add nuw nsw i64 %869, 1
  %875 = icmp eq i64 %874, %778
  br i1 %875, label %876, label %868, !llvm.loop !213

876:                                              ; preds = %868, %855
  %877 = phi i32 [ %863, %855 ], [ %873, %868 ]
  %878 = sext i32 %877 to i64
  %879 = icmp sgt i32 %877, 0
  br i1 %879, label %880, label %1014

880:                                              ; preds = %876, %773
  %881 = phi i64 [ %878, %876 ], [ 1, %773 ]
  %882 = icmp ult i64 %881, 8
  br i1 %882, label %978, label %883

883:                                              ; preds = %880
  %884 = getelementptr i8, i8* %767, i64 %881
  %885 = getelementptr float, float* %732, i64 %881
  %886 = bitcast float* %885 to i8*
  %887 = getelementptr float, float* %695, i64 %881
  %888 = bitcast float* %887 to i8*
  %889 = icmp ult i8* %767, %886
  %890 = icmp ult i8* %731, %884
  %891 = and i1 %889, %890
  %892 = icmp ult i8* %767, %888
  %893 = icmp ult i8* %694, %884
  %894 = and i1 %892, %893
  %895 = or i1 %891, %894
  br i1 %895, label %978, label %896

896:                                              ; preds = %883
  %897 = and i64 %881, -8
  %898 = add nsw i64 %897, -8
  %899 = lshr exact i64 %898, 3
  %900 = add nuw nsw i64 %899, 1
  %901 = and i64 %900, 1
  %902 = icmp eq i64 %898, 0
  br i1 %902, label %952, label %903

903:                                              ; preds = %896
  %904 = sub nuw nsw i64 %900, %901
  br label %905

905:                                              ; preds = %905, %903
  %906 = phi i64 [ 0, %903 ], [ %949, %905 ]
  %907 = phi i64 [ %904, %903 ], [ %950, %905 ]
  %908 = getelementptr inbounds float, float* %695, i64 %906
  %909 = bitcast float* %908 to <4 x float>*
  %910 = load <4 x float>, <4 x float>* %909, align 4, !alias.scope !214
  %911 = getelementptr inbounds float, float* %908, i64 4
  %912 = bitcast float* %911 to <4 x float>*
  %913 = load <4 x float>, <4 x float>* %912, align 4, !alias.scope !214
  %914 = getelementptr inbounds float, float* %732, i64 %906
  %915 = bitcast float* %914 to <4 x float>*
  %916 = load <4 x float>, <4 x float>* %915, align 4, !alias.scope !217
  %917 = getelementptr inbounds float, float* %914, i64 4
  %918 = bitcast float* %917 to <4 x float>*
  %919 = load <4 x float>, <4 x float>* %918, align 4, !alias.scope !217
  %920 = fcmp une <4 x float> %910, %916
  %921 = fcmp une <4 x float> %913, %919
  %922 = getelementptr inbounds i8, i8* %767, i64 %906
  %923 = zext <4 x i1> %920 to <4 x i8>
  %924 = zext <4 x i1> %921 to <4 x i8>
  %925 = bitcast i8* %922 to <4 x i8>*
  store <4 x i8> %923, <4 x i8>* %925, align 1, !alias.scope !219, !noalias !221
  %926 = getelementptr inbounds i8, i8* %922, i64 4
  %927 = bitcast i8* %926 to <4 x i8>*
  store <4 x i8> %924, <4 x i8>* %927, align 1, !alias.scope !219, !noalias !221
  %928 = or i64 %906, 8
  %929 = getelementptr inbounds float, float* %695, i64 %928
  %930 = bitcast float* %929 to <4 x float>*
  %931 = load <4 x float>, <4 x float>* %930, align 4, !alias.scope !214
  %932 = getelementptr inbounds float, float* %929, i64 4
  %933 = bitcast float* %932 to <4 x float>*
  %934 = load <4 x float>, <4 x float>* %933, align 4, !alias.scope !214
  %935 = getelementptr inbounds float, float* %732, i64 %928
  %936 = bitcast float* %935 to <4 x float>*
  %937 = load <4 x float>, <4 x float>* %936, align 4, !alias.scope !217
  %938 = getelementptr inbounds float, float* %935, i64 4
  %939 = bitcast float* %938 to <4 x float>*
  %940 = load <4 x float>, <4 x float>* %939, align 4, !alias.scope !217
  %941 = fcmp une <4 x float> %931, %937
  %942 = fcmp une <4 x float> %934, %940
  %943 = getelementptr inbounds i8, i8* %767, i64 %928
  %944 = zext <4 x i1> %941 to <4 x i8>
  %945 = zext <4 x i1> %942 to <4 x i8>
  %946 = bitcast i8* %943 to <4 x i8>*
  store <4 x i8> %944, <4 x i8>* %946, align 1, !alias.scope !219, !noalias !221
  %947 = getelementptr inbounds i8, i8* %943, i64 4
  %948 = bitcast i8* %947 to <4 x i8>*
  store <4 x i8> %945, <4 x i8>* %948, align 1, !alias.scope !219, !noalias !221
  %949 = add i64 %906, 16
  %950 = add i64 %907, -2
  %951 = icmp eq i64 %950, 0
  br i1 %951, label %952, label %905, !llvm.loop !222

952:                                              ; preds = %905, %896
  %953 = phi i64 [ 0, %896 ], [ %949, %905 ]
  %954 = icmp eq i64 %901, 0
  br i1 %954, label %976, label %955

955:                                              ; preds = %952
  %956 = getelementptr inbounds float, float* %695, i64 %953
  %957 = bitcast float* %956 to <4 x float>*
  %958 = load <4 x float>, <4 x float>* %957, align 4, !alias.scope !214
  %959 = getelementptr inbounds float, float* %956, i64 4
  %960 = bitcast float* %959 to <4 x float>*
  %961 = load <4 x float>, <4 x float>* %960, align 4, !alias.scope !214
  %962 = getelementptr inbounds float, float* %732, i64 %953
  %963 = bitcast float* %962 to <4 x float>*
  %964 = load <4 x float>, <4 x float>* %963, align 4, !alias.scope !217
  %965 = getelementptr inbounds float, float* %962, i64 4
  %966 = bitcast float* %965 to <4 x float>*
  %967 = load <4 x float>, <4 x float>* %966, align 4, !alias.scope !217
  %968 = fcmp une <4 x float> %958, %964
  %969 = fcmp une <4 x float> %961, %967
  %970 = getelementptr inbounds i8, i8* %767, i64 %953
  %971 = zext <4 x i1> %968 to <4 x i8>
  %972 = zext <4 x i1> %969 to <4 x i8>
  %973 = bitcast i8* %970 to <4 x i8>*
  store <4 x i8> %971, <4 x i8>* %973, align 1, !alias.scope !219, !noalias !221
  %974 = getelementptr inbounds i8, i8* %970, i64 4
  %975 = bitcast i8* %974 to <4 x i8>*
  store <4 x i8> %972, <4 x i8>* %975, align 1, !alias.scope !219, !noalias !221
  br label %976

976:                                              ; preds = %952, %955
  %977 = icmp eq i64 %881, %897
  br i1 %977, label %1014, label %978

978:                                              ; preds = %976, %883, %880
  %979 = phi i64 [ 0, %883 ], [ 0, %880 ], [ %897, %976 ]
  %980 = and i64 %881, 1
  %981 = icmp eq i64 %980, 0
  br i1 %981, label %991, label %982

982:                                              ; preds = %978
  %983 = getelementptr inbounds float, float* %695, i64 %979
  %984 = load float, float* %983, align 4
  %985 = getelementptr inbounds float, float* %732, i64 %979
  %986 = load float, float* %985, align 4
  %987 = fcmp une float %984, %986
  %988 = getelementptr inbounds i8, i8* %767, i64 %979
  %989 = zext i1 %987 to i8
  store i8 %989, i8* %988, align 1
  %990 = or i64 %979, 1
  br label %991

991:                                              ; preds = %978, %982
  %992 = phi i64 [ %979, %978 ], [ %990, %982 ]
  %993 = or i64 %979, 1
  %994 = icmp eq i64 %881, %993
  br i1 %994, label %1014, label %995

995:                                              ; preds = %991, %995
  %996 = phi i64 [ %1012, %995 ], [ %992, %991 ]
  %997 = getelementptr inbounds float, float* %695, i64 %996
  %998 = load float, float* %997, align 4
  %999 = getelementptr inbounds float, float* %732, i64 %996
  %1000 = load float, float* %999, align 4
  %1001 = fcmp une float %998, %1000
  %1002 = getelementptr inbounds i8, i8* %767, i64 %996
  %1003 = zext i1 %1001 to i8
  store i8 %1003, i8* %1002, align 1
  %1004 = add nuw nsw i64 %996, 1
  %1005 = getelementptr inbounds float, float* %695, i64 %1004
  %1006 = load float, float* %1005, align 4
  %1007 = getelementptr inbounds float, float* %732, i64 %1004
  %1008 = load float, float* %1007, align 4
  %1009 = fcmp une float %1006, %1008
  %1010 = getelementptr inbounds i8, i8* %767, i64 %1004
  %1011 = zext i1 %1009 to i8
  store i8 %1011, i8* %1010, align 1
  %1012 = add nuw nsw i64 %996, 2
  %1013 = icmp eq i64 %1012, %881
  br i1 %1013, label %1014, label %995, !llvm.loop !223

1014:                                             ; preds = %991, %995, %976, %876
  %1015 = icmp sgt i32 %766, 5
  br i1 %1015, label %1016, label %1022

1016:                                             ; preds = %1014
  %1017 = getelementptr inbounds %"class.tflite::RuntimeShape", %"class.tflite::RuntimeShape"* %34, i64 0, i32 1, i32 0
  %1018 = load i32*, i32** %1017, align 8
  %1019 = icmp eq i32* %1018, null
  br i1 %1019, label %1022, label %1020

1020:                                             ; preds = %1016
  %1021 = bitcast i32* %1018 to i8*
  tail call void @_ZdaPv(i8* %1021) #9
  br label %1022

1022:                                             ; preds = %1020, %1016, %1014
  call void @llvm.lifetime.end.p0i8(i64 32, i8* nonnull %733) #8
  %1023 = icmp sgt i32 %730, 5
  br i1 %1023, label %1024, label %1030

1024:                                             ; preds = %1022
  %1025 = getelementptr inbounds %"class.tflite::RuntimeShape", %"class.tflite::RuntimeShape"* %33, i64 0, i32 1, i32 0
  %1026 = load i32*, i32** %1025, align 8
  %1027 = icmp eq i32* %1026, null
  br i1 %1027, label %1030, label %1028

1028:                                             ; preds = %1024
  %1029 = bitcast i32* %1026 to i8*
  tail call void @_ZdaPv(i8* %1029) #9
  br label %1030

1030:                                             ; preds = %1028, %1024, %1022
  call void @llvm.lifetime.end.p0i8(i64 32, i8* nonnull %696) #8
  br i1 %769, label %1031, label %1068

1031:                                             ; preds = %1030
  %1032 = getelementptr inbounds %"class.tflite::RuntimeShape", %"class.tflite::RuntimeShape"* %32, i64 0, i32 1, i32 0
  %1033 = load i32*, i32** %1032, align 8
  %1034 = icmp eq i32* %1033, null
  br i1 %1034, label %1068, label %1035

1035:                                             ; preds = %1031
  %1036 = bitcast i32* %1033 to i8*
  tail call void @_ZdaPv(i8* %1036) #9
  br label %1068

1037:                                             ; preds = %650, %628
  %1038 = phi i8* [ %657, %650 ], [ null, %628 ]
  call void @_ZN6tflite13reference_ops29BroadcastComparison4DSlowImplIfXadL_ZNS0_10NotEqualFnIfEEbT_S3_EEEEvRKNS_16ComparisonParamsERKNS_12RuntimeShapeEPKS3_S9_SB_S9_Pb(%"struct.tflite::ComparisonParams"* nonnull dereferenceable(32) %28, %"class.tflite::RuntimeShape"* nonnull dereferenceable(32) %29, float* %591, %"class.tflite::RuntimeShape"* nonnull dereferenceable(32) %30, float* %625, %"class.tflite::RuntimeShape"* nonnull dereferenceable(32) %31, i8* %1038) #8
  %1039 = getelementptr inbounds %"class.tflite::RuntimeShape", %"class.tflite::RuntimeShape"* %31, i64 0, i32 0
  %1040 = load i32, i32* %1039, align 8
  %1041 = icmp sgt i32 %1040, 5
  br i1 %1041, label %1042, label %1048

1042:                                             ; preds = %1037
  %1043 = getelementptr inbounds %"class.tflite::RuntimeShape", %"class.tflite::RuntimeShape"* %31, i64 0, i32 1, i32 0
  %1044 = load i32*, i32** %1043, align 8
  %1045 = icmp eq i32* %1044, null
  br i1 %1045, label %1048, label %1046

1046:                                             ; preds = %1042
  %1047 = bitcast i32* %1044 to i8*
  call void @_ZdaPv(i8* %1047) #9
  br label %1048

1048:                                             ; preds = %1046, %1042, %1037
  call void @llvm.lifetime.end.p0i8(i64 32, i8* nonnull %626) #8
  %1049 = getelementptr inbounds %"class.tflite::RuntimeShape", %"class.tflite::RuntimeShape"* %30, i64 0, i32 0
  %1050 = load i32, i32* %1049, align 8
  %1051 = icmp sgt i32 %1050, 5
  br i1 %1051, label %1052, label %1058

1052:                                             ; preds = %1048
  %1053 = getelementptr inbounds %"class.tflite::RuntimeShape", %"class.tflite::RuntimeShape"* %30, i64 0, i32 1, i32 0
  %1054 = load i32*, i32** %1053, align 8
  %1055 = icmp eq i32* %1054, null
  br i1 %1055, label %1058, label %1056

1056:                                             ; preds = %1052
  %1057 = bitcast i32* %1054 to i8*
  call void @_ZdaPv(i8* %1057) #9
  br label %1058

1058:                                             ; preds = %1056, %1052, %1048
  call void @llvm.lifetime.end.p0i8(i64 32, i8* nonnull %592) #8
  %1059 = getelementptr inbounds %"class.tflite::RuntimeShape", %"class.tflite::RuntimeShape"* %29, i64 0, i32 0
  %1060 = load i32, i32* %1059, align 8
  %1061 = icmp sgt i32 %1060, 5
  br i1 %1061, label %1062, label %1068

1062:                                             ; preds = %1058
  %1063 = getelementptr inbounds %"class.tflite::RuntimeShape", %"class.tflite::RuntimeShape"* %29, i64 0, i32 1, i32 0
  %1064 = load i32*, i32** %1063, align 8
  %1065 = icmp eq i32* %1064, null
  br i1 %1065, label %1068, label %1066

1066:                                             ; preds = %1062
  %1067 = bitcast i32* %1064 to i8*
  call void @_ZdaPv(i8* %1067) #9
  br label %1068

1068:                                             ; preds = %1058, %1062, %1066, %1030, %1031, %1035
  %1069 = phi i8* [ %659, %1035 ], [ %659, %1031 ], [ %659, %1030 ], [ %558, %1066 ], [ %558, %1062 ], [ %558, %1058 ]
  call void @llvm.lifetime.end.p0i8(i64 32, i8* nonnull %1069) #8
  call void @llvm.lifetime.end.p0i8(i64 32, i8* nonnull %556) #8
  br label %2967

1070:                                             ; preds = %85
  %1071 = bitcast %"struct.tflite::ComparisonParams"* %21 to i8*
  call void @llvm.lifetime.start.p0i8(i64 32, i8* nonnull %1071) #8
  call void @llvm.memset.p0i8.i64(i8* nonnull align 4 %1071, i8 -86, i64 32, i1 false) #8
  br i1 %87, label %1171, label %1072

1072:                                             ; preds = %1070
  %1073 = bitcast %"class.tflite::RuntimeShape"* %22 to i8*
  call void @llvm.lifetime.start.p0i8(i64 32, i8* nonnull %1073) #8
  %1074 = icmp eq %struct.TfLiteTensor* %64, null
  br i1 %1074, label %1075, label %1077

1075:                                             ; preds = %1072
  %1076 = getelementptr inbounds %"class.tflite::RuntimeShape", %"class.tflite::RuntimeShape"* %22, i64 0, i32 0
  store i32 0, i32* %1076, align 8, !alias.scope !224
  br label %1104

1077:                                             ; preds = %1072
  %1078 = getelementptr inbounds %struct.TfLiteTensor, %struct.TfLiteTensor* %64, i64 0, i32 2
  %1079 = load %struct.TfLiteIntArray*, %struct.TfLiteIntArray** %1078, align 8, !noalias !224
  %1080 = getelementptr inbounds %struct.TfLiteIntArray, %struct.TfLiteIntArray* %1079, i64 0, i32 0
  %1081 = load i32, i32* %1080, align 4, !noalias !224
  %1082 = getelementptr inbounds %struct.TfLiteIntArray, %struct.TfLiteIntArray* %1079, i64 0, i32 1, i64 0
  %1083 = getelementptr inbounds %"class.tflite::RuntimeShape", %"class.tflite::RuntimeShape"* %22, i64 0, i32 0
  store i32 %1081, i32* %1083, align 8, !alias.scope !224
  %1084 = icmp sgt i32 %1081, 5
  br i1 %1084, label %1085, label %1092

1085:                                             ; preds = %1077
  %1086 = sext i32 %1081 to i64
  %1087 = shl nsw i64 %1086, 2
  %1088 = tail call i8* @_Znam(i64 %1087) #9, !noalias !224
  %1089 = getelementptr inbounds %"class.tflite::RuntimeShape", %"class.tflite::RuntimeShape"* %22, i64 0, i32 1, i32 0
  %1090 = bitcast i32** %1089 to i8**
  store i8* %1088, i8** %1090, align 8, !alias.scope !224
  %1091 = bitcast i8* %1088 to i32*
  br label %1097

1092:                                             ; preds = %1077
  %1093 = getelementptr inbounds %"class.tflite::RuntimeShape", %"class.tflite::RuntimeShape"* %22, i64 0, i32 1
  %1094 = bitcast %union.anon* %1093 to i32*
  %1095 = sext i32 %1081 to i64
  %1096 = shl nsw i64 %1095, 2
  br label %1097

1097:                                             ; preds = %1092, %1085
  %1098 = phi i64 [ %1087, %1085 ], [ %1096, %1092 ]
  %1099 = phi i32* [ %1091, %1085 ], [ %1094, %1092 ]
  %1100 = bitcast i32* %1099 to i8*
  %1101 = bitcast i32* %1082 to i8*
  call void @llvm.memcpy.p0i8.p0i8.i64(i8* align 4 %1100, i8* align 4 %1101, i64 %1098, i1 false) #8
  %1102 = getelementptr inbounds %struct.TfLiteTensor, %struct.TfLiteTensor* %64, i64 0, i32 1, i32 0
  %1103 = load i32*, i32** %1102, align 8
  br label %1104

1104:                                             ; preds = %1097, %1075
  %1105 = phi i32* [ %1103, %1097 ], [ null, %1075 ]
  %1106 = bitcast %"class.tflite::RuntimeShape"* %23 to i8*
  call void @llvm.lifetime.start.p0i8(i64 32, i8* nonnull %1106) #8
  %1107 = icmp eq %struct.TfLiteTensor* %74, null
  br i1 %1107, label %1108, label %1110

1108:                                             ; preds = %1104
  %1109 = getelementptr inbounds %"class.tflite::RuntimeShape", %"class.tflite::RuntimeShape"* %23, i64 0, i32 0
  store i32 0, i32* %1109, align 8, !alias.scope !227
  br label %1137

1110:                                             ; preds = %1104
  %1111 = getelementptr inbounds %struct.TfLiteTensor, %struct.TfLiteTensor* %74, i64 0, i32 2
  %1112 = load %struct.TfLiteIntArray*, %struct.TfLiteIntArray** %1111, align 8, !noalias !227
  %1113 = getelementptr inbounds %struct.TfLiteIntArray, %struct.TfLiteIntArray* %1112, i64 0, i32 0
  %1114 = load i32, i32* %1113, align 4, !noalias !227
  %1115 = getelementptr inbounds %struct.TfLiteIntArray, %struct.TfLiteIntArray* %1112, i64 0, i32 1, i64 0
  %1116 = getelementptr inbounds %"class.tflite::RuntimeShape", %"class.tflite::RuntimeShape"* %23, i64 0, i32 0
  store i32 %1114, i32* %1116, align 8, !alias.scope !227
  %1117 = icmp sgt i32 %1114, 5
  br i1 %1117, label %1118, label %1125

1118:                                             ; preds = %1110
  %1119 = sext i32 %1114 to i64
  %1120 = shl nsw i64 %1119, 2
  %1121 = tail call i8* @_Znam(i64 %1120) #9, !noalias !227
  %1122 = getelementptr inbounds %"class.tflite::RuntimeShape", %"class.tflite::RuntimeShape"* %23, i64 0, i32 1, i32 0
  %1123 = bitcast i32** %1122 to i8**
  store i8* %1121, i8** %1123, align 8, !alias.scope !227
  %1124 = bitcast i8* %1121 to i32*
  br label %1130

1125:                                             ; preds = %1110
  %1126 = getelementptr inbounds %"class.tflite::RuntimeShape", %"class.tflite::RuntimeShape"* %23, i64 0, i32 1
  %1127 = bitcast %union.anon* %1126 to i32*
  %1128 = sext i32 %1114 to i64
  %1129 = shl nsw i64 %1128, 2
  br label %1130

1130:                                             ; preds = %1125, %1118
  %1131 = phi i64 [ %1120, %1118 ], [ %1129, %1125 ]
  %1132 = phi i32* [ %1124, %1118 ], [ %1127, %1125 ]
  %1133 = bitcast i32* %1132 to i8*
  %1134 = bitcast i32* %1115 to i8*
  call void @llvm.memcpy.p0i8.p0i8.i64(i8* align 4 %1133, i8* align 4 %1134, i64 %1131, i1 false) #8
  %1135 = getelementptr inbounds %struct.TfLiteTensor, %struct.TfLiteTensor* %74, i64 0, i32 1, i32 0
  %1136 = load i32*, i32** %1135, align 8
  br label %1137

1137:                                             ; preds = %1130, %1108
  %1138 = phi i32* [ %1136, %1130 ], [ null, %1108 ]
  %1139 = bitcast %"class.tflite::RuntimeShape"* %24 to i8*
  call void @llvm.lifetime.start.p0i8(i64 32, i8* nonnull %1139) #8
  %1140 = icmp eq %struct.TfLiteTensor* %86, null
  br i1 %1140, label %1141, label %1143

1141:                                             ; preds = %1137
  %1142 = getelementptr inbounds %"class.tflite::RuntimeShape", %"class.tflite::RuntimeShape"* %24, i64 0, i32 0
  store i32 0, i32* %1142, align 8, !alias.scope !230
  br label %1548

1143:                                             ; preds = %1137
  %1144 = getelementptr inbounds %struct.TfLiteTensor, %struct.TfLiteTensor* %86, i64 0, i32 2
  %1145 = load %struct.TfLiteIntArray*, %struct.TfLiteIntArray** %1144, align 8, !noalias !230
  %1146 = getelementptr inbounds %struct.TfLiteIntArray, %struct.TfLiteIntArray* %1145, i64 0, i32 0
  %1147 = load i32, i32* %1146, align 4, !noalias !230
  %1148 = getelementptr inbounds %struct.TfLiteIntArray, %struct.TfLiteIntArray* %1145, i64 0, i32 1, i64 0
  %1149 = getelementptr inbounds %"class.tflite::RuntimeShape", %"class.tflite::RuntimeShape"* %24, i64 0, i32 0
  store i32 %1147, i32* %1149, align 8, !alias.scope !230
  %1150 = icmp sgt i32 %1147, 5
  br i1 %1150, label %1151, label %1158

1151:                                             ; preds = %1143
  %1152 = sext i32 %1147 to i64
  %1153 = shl nsw i64 %1152, 2
  %1154 = tail call i8* @_Znam(i64 %1153) #9, !noalias !230
  %1155 = getelementptr inbounds %"class.tflite::RuntimeShape", %"class.tflite::RuntimeShape"* %24, i64 0, i32 1, i32 0
  %1156 = bitcast i32** %1155 to i8**
  store i8* %1154, i8** %1156, align 8, !alias.scope !230
  %1157 = bitcast i8* %1154 to i32*
  br label %1163

1158:                                             ; preds = %1143
  %1159 = getelementptr inbounds %"class.tflite::RuntimeShape", %"class.tflite::RuntimeShape"* %24, i64 0, i32 1
  %1160 = bitcast %union.anon* %1159 to i32*
  %1161 = sext i32 %1147 to i64
  %1162 = shl nsw i64 %1161, 2
  br label %1163

1163:                                             ; preds = %1158, %1151
  %1164 = phi i64 [ %1153, %1151 ], [ %1162, %1158 ]
  %1165 = phi i32* [ %1157, %1151 ], [ %1160, %1158 ]
  %1166 = bitcast i32* %1165 to i8*
  %1167 = bitcast i32* %1148 to i8*
  call void @llvm.memcpy.p0i8.p0i8.i64(i8* align 4 %1166, i8* align 4 %1167, i64 %1164, i1 false) #8
  %1168 = getelementptr inbounds %struct.TfLiteTensor, %struct.TfLiteTensor* %86, i64 0, i32 1
  %1169 = bitcast %union.TfLitePtrUnion* %1168 to i8**
  %1170 = load i8*, i8** %1169, align 8
  br label %1548

1171:                                             ; preds = %1070
  %1172 = bitcast %"class.tflite::RuntimeShape"* %25 to i8*
  call void @llvm.lifetime.start.p0i8(i64 32, i8* nonnull %1172) #8
  %1173 = icmp eq %struct.TfLiteTensor* %64, null
  br i1 %1173, label %1174, label %1176

1174:                                             ; preds = %1171
  %1175 = getelementptr inbounds %"class.tflite::RuntimeShape", %"class.tflite::RuntimeShape"* %25, i64 0, i32 0
  store i32 0, i32* %1175, align 8, !alias.scope !233
  br label %1204

1176:                                             ; preds = %1171
  %1177 = getelementptr inbounds %struct.TfLiteTensor, %struct.TfLiteTensor* %64, i64 0, i32 2
  %1178 = load %struct.TfLiteIntArray*, %struct.TfLiteIntArray** %1177, align 8, !noalias !233
  %1179 = getelementptr inbounds %struct.TfLiteIntArray, %struct.TfLiteIntArray* %1178, i64 0, i32 0
  %1180 = load i32, i32* %1179, align 4, !noalias !233
  %1181 = getelementptr inbounds %struct.TfLiteIntArray, %struct.TfLiteIntArray* %1178, i64 0, i32 1, i64 0
  %1182 = getelementptr inbounds %"class.tflite::RuntimeShape", %"class.tflite::RuntimeShape"* %25, i64 0, i32 0
  store i32 %1180, i32* %1182, align 8, !alias.scope !233
  %1183 = icmp sgt i32 %1180, 5
  br i1 %1183, label %1184, label %1191

1184:                                             ; preds = %1176
  %1185 = sext i32 %1180 to i64
  %1186 = shl nsw i64 %1185, 2
  %1187 = tail call i8* @_Znam(i64 %1186) #9, !noalias !233
  %1188 = getelementptr inbounds %"class.tflite::RuntimeShape", %"class.tflite::RuntimeShape"* %25, i64 0, i32 1, i32 0
  %1189 = bitcast i32** %1188 to i8**
  store i8* %1187, i8** %1189, align 8, !alias.scope !233
  %1190 = bitcast i8* %1187 to i32*
  br label %1196

1191:                                             ; preds = %1176
  %1192 = getelementptr inbounds %"class.tflite::RuntimeShape", %"class.tflite::RuntimeShape"* %25, i64 0, i32 1
  %1193 = bitcast %union.anon* %1192 to i32*
  %1194 = sext i32 %1180 to i64
  %1195 = shl nsw i64 %1194, 2
  br label %1196

1196:                                             ; preds = %1191, %1184
  %1197 = phi i64 [ %1186, %1184 ], [ %1195, %1191 ]
  %1198 = phi i32* [ %1190, %1184 ], [ %1193, %1191 ]
  %1199 = bitcast i32* %1198 to i8*
  %1200 = bitcast i32* %1181 to i8*
  call void @llvm.memcpy.p0i8.p0i8.i64(i8* align 4 %1199, i8* align 4 %1200, i64 %1197, i1 false) #8
  %1201 = getelementptr inbounds %struct.TfLiteTensor, %struct.TfLiteTensor* %64, i64 0, i32 1, i32 0
  %1202 = load i32*, i32** %1201, align 8
  %1203 = bitcast i32* %1202 to i8*
  br label %1204

1204:                                             ; preds = %1196, %1174
  %1205 = phi i32 [ %1180, %1196 ], [ 0, %1174 ]
  %1206 = phi i8* [ %1203, %1196 ], [ null, %1174 ]
  %1207 = phi i32* [ %1202, %1196 ], [ null, %1174 ]
  %1208 = bitcast %"class.tflite::RuntimeShape"* %26 to i8*
  call void @llvm.lifetime.start.p0i8(i64 32, i8* nonnull %1208) #8
  %1209 = icmp eq %struct.TfLiteTensor* %74, null
  br i1 %1209, label %1210, label %1212

1210:                                             ; preds = %1204
  %1211 = getelementptr inbounds %"class.tflite::RuntimeShape", %"class.tflite::RuntimeShape"* %26, i64 0, i32 0
  store i32 0, i32* %1211, align 8, !alias.scope !236
  br label %1240

1212:                                             ; preds = %1204
  %1213 = getelementptr inbounds %struct.TfLiteTensor, %struct.TfLiteTensor* %74, i64 0, i32 2
  %1214 = load %struct.TfLiteIntArray*, %struct.TfLiteIntArray** %1213, align 8, !noalias !236
  %1215 = getelementptr inbounds %struct.TfLiteIntArray, %struct.TfLiteIntArray* %1214, i64 0, i32 0
  %1216 = load i32, i32* %1215, align 4, !noalias !236
  %1217 = getelementptr inbounds %struct.TfLiteIntArray, %struct.TfLiteIntArray* %1214, i64 0, i32 1, i64 0
  %1218 = getelementptr inbounds %"class.tflite::RuntimeShape", %"class.tflite::RuntimeShape"* %26, i64 0, i32 0
  store i32 %1216, i32* %1218, align 8, !alias.scope !236
  %1219 = icmp sgt i32 %1216, 5
  br i1 %1219, label %1220, label %1227

1220:                                             ; preds = %1212
  %1221 = sext i32 %1216 to i64
  %1222 = shl nsw i64 %1221, 2
  %1223 = tail call i8* @_Znam(i64 %1222) #9, !noalias !236
  %1224 = getelementptr inbounds %"class.tflite::RuntimeShape", %"class.tflite::RuntimeShape"* %26, i64 0, i32 1, i32 0
  %1225 = bitcast i32** %1224 to i8**
  store i8* %1223, i8** %1225, align 8, !alias.scope !236
  %1226 = bitcast i8* %1223 to i32*
  br label %1232

1227:                                             ; preds = %1212
  %1228 = getelementptr inbounds %"class.tflite::RuntimeShape", %"class.tflite::RuntimeShape"* %26, i64 0, i32 1
  %1229 = bitcast %union.anon* %1228 to i32*
  %1230 = sext i32 %1216 to i64
  %1231 = shl nsw i64 %1230, 2
  br label %1232

1232:                                             ; preds = %1227, %1220
  %1233 = phi i64 [ %1222, %1220 ], [ %1231, %1227 ]
  %1234 = phi i32* [ %1226, %1220 ], [ %1229, %1227 ]
  %1235 = bitcast i32* %1234 to i8*
  %1236 = bitcast i32* %1217 to i8*
  call void @llvm.memcpy.p0i8.p0i8.i64(i8* align 4 %1235, i8* align 4 %1236, i64 %1233, i1 false) #8
  %1237 = getelementptr inbounds %struct.TfLiteTensor, %struct.TfLiteTensor* %74, i64 0, i32 1, i32 0
  %1238 = load i32*, i32** %1237, align 8
  %1239 = bitcast i32* %1238 to i8*
  br label %1240

1240:                                             ; preds = %1232, %1210
  %1241 = phi i32 [ %1216, %1232 ], [ 0, %1210 ]
  %1242 = phi i8* [ %1239, %1232 ], [ null, %1210 ]
  %1243 = phi i32* [ %1238, %1232 ], [ null, %1210 ]
  %1244 = bitcast %"class.tflite::RuntimeShape"* %27 to i8*
  call void @llvm.lifetime.start.p0i8(i64 32, i8* nonnull %1244) #8
  %1245 = icmp eq %struct.TfLiteTensor* %86, null
  br i1 %1245, label %1246, label %1248

1246:                                             ; preds = %1240
  %1247 = getelementptr inbounds %"class.tflite::RuntimeShape", %"class.tflite::RuntimeShape"* %27, i64 0, i32 0
  store i32 0, i32* %1247, align 8, !alias.scope !239
  br label %1276

1248:                                             ; preds = %1240
  %1249 = getelementptr inbounds %struct.TfLiteTensor, %struct.TfLiteTensor* %86, i64 0, i32 2
  %1250 = load %struct.TfLiteIntArray*, %struct.TfLiteIntArray** %1249, align 8, !noalias !239
  %1251 = getelementptr inbounds %struct.TfLiteIntArray, %struct.TfLiteIntArray* %1250, i64 0, i32 0
  %1252 = load i32, i32* %1251, align 4, !noalias !239
  %1253 = getelementptr inbounds %struct.TfLiteIntArray, %struct.TfLiteIntArray* %1250, i64 0, i32 1, i64 0
  %1254 = getelementptr inbounds %"class.tflite::RuntimeShape", %"class.tflite::RuntimeShape"* %27, i64 0, i32 0
  store i32 %1252, i32* %1254, align 8, !alias.scope !239
  %1255 = icmp sgt i32 %1252, 5
  br i1 %1255, label %1256, label %1263

1256:                                             ; preds = %1248
  %1257 = sext i32 %1252 to i64
  %1258 = shl nsw i64 %1257, 2
  %1259 = tail call i8* @_Znam(i64 %1258) #9, !noalias !239
  %1260 = getelementptr inbounds %"class.tflite::RuntimeShape", %"class.tflite::RuntimeShape"* %27, i64 0, i32 1, i32 0
  %1261 = bitcast i32** %1260 to i8**
  store i8* %1259, i8** %1261, align 8, !alias.scope !239
  %1262 = bitcast i8* %1259 to i32*
  br label %1268

1263:                                             ; preds = %1248
  %1264 = getelementptr inbounds %"class.tflite::RuntimeShape", %"class.tflite::RuntimeShape"* %27, i64 0, i32 1
  %1265 = bitcast %union.anon* %1264 to i32*
  %1266 = sext i32 %1252 to i64
  %1267 = shl nsw i64 %1266, 2
  br label %1268

1268:                                             ; preds = %1263, %1256
  %1269 = phi i64 [ %1258, %1256 ], [ %1267, %1263 ]
  %1270 = phi i32* [ %1262, %1256 ], [ %1265, %1263 ]
  %1271 = bitcast i32* %1270 to i8*
  %1272 = bitcast i32* %1253 to i8*
  call void @llvm.memcpy.p0i8.p0i8.i64(i8* align 4 %1271, i8* align 4 %1272, i64 %1269, i1 false) #8
  %1273 = getelementptr inbounds %struct.TfLiteTensor, %struct.TfLiteTensor* %86, i64 0, i32 1
  %1274 = bitcast %union.TfLitePtrUnion* %1273 to i8**
  %1275 = load i8*, i8** %1274, align 8
  br label %1276

1276:                                             ; preds = %1268, %1246
  %1277 = phi i32 [ %1252, %1268 ], [ 0, %1246 ]
  %1278 = phi i8* [ %1275, %1268 ], [ null, %1246 ]
  %1279 = getelementptr inbounds %"class.tflite::RuntimeShape", %"class.tflite::RuntimeShape"* %25, i64 0, i32 1
  %1280 = icmp sgt i32 %1205, 5
  br i1 %1280, label %1281, label %1284

1281:                                             ; preds = %1276
  %1282 = getelementptr inbounds %union.anon, %union.anon* %1279, i64 0, i32 0
  %1283 = load i32*, i32** %1282, align 8
  br label %1287

1284:                                             ; preds = %1276
  %1285 = bitcast %union.anon* %1279 to i32*
  %1286 = icmp sgt i32 %1205, 0
  br i1 %1286, label %1287, label %1391

1287:                                             ; preds = %1284, %1281
  %1288 = phi i32* [ %1283, %1281 ], [ %1285, %1284 ]
  %1289 = zext i32 %1205 to i64
  %1290 = icmp ult i32 %1205, 8
  br i1 %1290, label %1376, label %1291

1291:                                             ; preds = %1287
  %1292 = and i64 %1289, 4294967288
  %1293 = add nsw i64 %1292, -8
  %1294 = lshr exact i64 %1293, 3
  %1295 = add nuw nsw i64 %1294, 1
  %1296 = and i64 %1295, 3
  %1297 = icmp ult i64 %1293, 24
  br i1 %1297, label %1343, label %1298

1298:                                             ; preds = %1291
  %1299 = sub nsw i64 %1295, %1296
  br label %1300

1300:                                             ; preds = %1300, %1298
  %1301 = phi i64 [ 0, %1298 ], [ %1340, %1300 ]
  %1302 = phi <4 x i32> [ <i32 1, i32 1, i32 1, i32 1>, %1298 ], [ %1338, %1300 ]
  %1303 = phi <4 x i32> [ <i32 1, i32 1, i32 1, i32 1>, %1298 ], [ %1339, %1300 ]
  %1304 = phi i64 [ %1299, %1298 ], [ %1341, %1300 ]
  %1305 = getelementptr inbounds i32, i32* %1288, i64 %1301
  %1306 = bitcast i32* %1305 to <4 x i32>*
  %1307 = load <4 x i32>, <4 x i32>* %1306, align 4
  %1308 = getelementptr inbounds i32, i32* %1305, i64 4
  %1309 = bitcast i32* %1308 to <4 x i32>*
  %1310 = load <4 x i32>, <4 x i32>* %1309, align 4
  %1311 = mul nsw <4 x i32> %1307, %1302
  %1312 = mul nsw <4 x i32> %1310, %1303
  %1313 = or i64 %1301, 8
  %1314 = getelementptr inbounds i32, i32* %1288, i64 %1313
  %1315 = bitcast i32* %1314 to <4 x i32>*
  %1316 = load <4 x i32>, <4 x i32>* %1315, align 4
  %1317 = getelementptr inbounds i32, i32* %1314, i64 4
  %1318 = bitcast i32* %1317 to <4 x i32>*
  %1319 = load <4 x i32>, <4 x i32>* %1318, align 4
  %1320 = mul nsw <4 x i32> %1316, %1311
  %1321 = mul nsw <4 x i32> %1319, %1312
  %1322 = or i64 %1301, 16
  %1323 = getelementptr inbounds i32, i32* %1288, i64 %1322
  %1324 = bitcast i32* %1323 to <4 x i32>*
  %1325 = load <4 x i32>, <4 x i32>* %1324, align 4
  %1326 = getelementptr inbounds i32, i32* %1323, i64 4
  %1327 = bitcast i32* %1326 to <4 x i32>*
  %1328 = load <4 x i32>, <4 x i32>* %1327, align 4
  %1329 = mul nsw <4 x i32> %1325, %1320
  %1330 = mul nsw <4 x i32> %1328, %1321
  %1331 = or i64 %1301, 24
  %1332 = getelementptr inbounds i32, i32* %1288, i64 %1331
  %1333 = bitcast i32* %1332 to <4 x i32>*
  %1334 = load <4 x i32>, <4 x i32>* %1333, align 4
  %1335 = getelementptr inbounds i32, i32* %1332, i64 4
  %1336 = bitcast i32* %1335 to <4 x i32>*
  %1337 = load <4 x i32>, <4 x i32>* %1336, align 4
  %1338 = mul nsw <4 x i32> %1334, %1329
  %1339 = mul nsw <4 x i32> %1337, %1330
  %1340 = add i64 %1301, 32
  %1341 = add i64 %1304, -4
  %1342 = icmp eq i64 %1341, 0
  br i1 %1342, label %1343, label %1300, !llvm.loop !242

1343:                                             ; preds = %1300, %1291
  %1344 = phi <4 x i32> [ undef, %1291 ], [ %1338, %1300 ]
  %1345 = phi <4 x i32> [ undef, %1291 ], [ %1339, %1300 ]
  %1346 = phi i64 [ 0, %1291 ], [ %1340, %1300 ]
  %1347 = phi <4 x i32> [ <i32 1, i32 1, i32 1, i32 1>, %1291 ], [ %1338, %1300 ]
  %1348 = phi <4 x i32> [ <i32 1, i32 1, i32 1, i32 1>, %1291 ], [ %1339, %1300 ]
  %1349 = icmp eq i64 %1296, 0
  br i1 %1349, label %1366, label %1350

1350:                                             ; preds = %1343, %1350
  %1351 = phi i64 [ %1363, %1350 ], [ %1346, %1343 ]
  %1352 = phi <4 x i32> [ %1361, %1350 ], [ %1347, %1343 ]
  %1353 = phi <4 x i32> [ %1362, %1350 ], [ %1348, %1343 ]
  %1354 = phi i64 [ %1364, %1350 ], [ %1296, %1343 ]
  %1355 = getelementptr inbounds i32, i32* %1288, i64 %1351
  %1356 = bitcast i32* %1355 to <4 x i32>*
  %1357 = load <4 x i32>, <4 x i32>* %1356, align 4
  %1358 = getelementptr inbounds i32, i32* %1355, i64 4
  %1359 = bitcast i32* %1358 to <4 x i32>*
  %1360 = load <4 x i32>, <4 x i32>* %1359, align 4
  %1361 = mul nsw <4 x i32> %1357, %1352
  %1362 = mul nsw <4 x i32> %1360, %1353
  %1363 = add i64 %1351, 8
  %1364 = add i64 %1354, -1
  %1365 = icmp eq i64 %1364, 0
  br i1 %1365, label %1366, label %1350, !llvm.loop !243

1366:                                             ; preds = %1350, %1343
  %1367 = phi <4 x i32> [ %1344, %1343 ], [ %1361, %1350 ]
  %1368 = phi <4 x i32> [ %1345, %1343 ], [ %1362, %1350 ]
  %1369 = mul <4 x i32> %1368, %1367
  %1370 = shufflevector <4 x i32> %1369, <4 x i32> undef, <4 x i32> <i32 2, i32 3, i32 undef, i32 undef>
  %1371 = mul <4 x i32> %1369, %1370
  %1372 = shufflevector <4 x i32> %1371, <4 x i32> undef, <4 x i32> <i32 1, i32 undef, i32 undef, i32 undef>
  %1373 = mul <4 x i32> %1371, %1372
  %1374 = extractelement <4 x i32> %1373, i32 0
  %1375 = icmp eq i64 %1292, %1289
  br i1 %1375, label %1387, label %1376

1376:                                             ; preds = %1366, %1287
  %1377 = phi i64 [ 0, %1287 ], [ %1292, %1366 ]
  %1378 = phi i32 [ 1, %1287 ], [ %1374, %1366 ]
  br label %1379

1379:                                             ; preds = %1376, %1379
  %1380 = phi i64 [ %1385, %1379 ], [ %1377, %1376 ]
  %1381 = phi i32 [ %1384, %1379 ], [ %1378, %1376 ]
  %1382 = getelementptr inbounds i32, i32* %1288, i64 %1380
  %1383 = load i32, i32* %1382, align 4
  %1384 = mul nsw i32 %1383, %1381
  %1385 = add nuw nsw i64 %1380, 1
  %1386 = icmp eq i64 %1385, %1289
  br i1 %1386, label %1387, label %1379, !llvm.loop !244

1387:                                             ; preds = %1379, %1366
  %1388 = phi i32 [ %1374, %1366 ], [ %1384, %1379 ]
  %1389 = sext i32 %1388 to i64
  %1390 = icmp sgt i32 %1388, 0
  br i1 %1390, label %1391, label %1525

1391:                                             ; preds = %1387, %1284
  %1392 = phi i64 [ %1389, %1387 ], [ 1, %1284 ]
  %1393 = icmp ult i64 %1392, 8
  br i1 %1393, label %1489, label %1394

1394:                                             ; preds = %1391
  %1395 = getelementptr i8, i8* %1278, i64 %1392
  %1396 = getelementptr i32, i32* %1243, i64 %1392
  %1397 = bitcast i32* %1396 to i8*
  %1398 = getelementptr i32, i32* %1207, i64 %1392
  %1399 = bitcast i32* %1398 to i8*
  %1400 = icmp ult i8* %1278, %1397
  %1401 = icmp ult i8* %1242, %1395
  %1402 = and i1 %1400, %1401
  %1403 = icmp ult i8* %1278, %1399
  %1404 = icmp ult i8* %1206, %1395
  %1405 = and i1 %1403, %1404
  %1406 = or i1 %1402, %1405
  br i1 %1406, label %1489, label %1407

1407:                                             ; preds = %1394
  %1408 = and i64 %1392, -8
  %1409 = add nsw i64 %1408, -8
  %1410 = lshr exact i64 %1409, 3
  %1411 = add nuw nsw i64 %1410, 1
  %1412 = and i64 %1411, 1
  %1413 = icmp eq i64 %1409, 0
  br i1 %1413, label %1463, label %1414

1414:                                             ; preds = %1407
  %1415 = sub nuw nsw i64 %1411, %1412
  br label %1416

1416:                                             ; preds = %1416, %1414
  %1417 = phi i64 [ 0, %1414 ], [ %1460, %1416 ]
  %1418 = phi i64 [ %1415, %1414 ], [ %1461, %1416 ]
  %1419 = getelementptr inbounds i32, i32* %1207, i64 %1417
  %1420 = bitcast i32* %1419 to <4 x i32>*
  %1421 = load <4 x i32>, <4 x i32>* %1420, align 4, !alias.scope !245
  %1422 = getelementptr inbounds i32, i32* %1419, i64 4
  %1423 = bitcast i32* %1422 to <4 x i32>*
  %1424 = load <4 x i32>, <4 x i32>* %1423, align 4, !alias.scope !245
  %1425 = getelementptr inbounds i32, i32* %1243, i64 %1417
  %1426 = bitcast i32* %1425 to <4 x i32>*
  %1427 = load <4 x i32>, <4 x i32>* %1426, align 4, !alias.scope !248
  %1428 = getelementptr inbounds i32, i32* %1425, i64 4
  %1429 = bitcast i32* %1428 to <4 x i32>*
  %1430 = load <4 x i32>, <4 x i32>* %1429, align 4, !alias.scope !248
  %1431 = icmp ne <4 x i32> %1421, %1427
  %1432 = icmp ne <4 x i32> %1424, %1430
  %1433 = getelementptr inbounds i8, i8* %1278, i64 %1417
  %1434 = zext <4 x i1> %1431 to <4 x i8>
  %1435 = zext <4 x i1> %1432 to <4 x i8>
  %1436 = bitcast i8* %1433 to <4 x i8>*
  store <4 x i8> %1434, <4 x i8>* %1436, align 1, !alias.scope !250, !noalias !252
  %1437 = getelementptr inbounds i8, i8* %1433, i64 4
  %1438 = bitcast i8* %1437 to <4 x i8>*
  store <4 x i8> %1435, <4 x i8>* %1438, align 1, !alias.scope !250, !noalias !252
  %1439 = or i64 %1417, 8
  %1440 = getelementptr inbounds i32, i32* %1207, i64 %1439
  %1441 = bitcast i32* %1440 to <4 x i32>*
  %1442 = load <4 x i32>, <4 x i32>* %1441, align 4, !alias.scope !245
  %1443 = getelementptr inbounds i32, i32* %1440, i64 4
  %1444 = bitcast i32* %1443 to <4 x i32>*
  %1445 = load <4 x i32>, <4 x i32>* %1444, align 4, !alias.scope !245
  %1446 = getelementptr inbounds i32, i32* %1243, i64 %1439
  %1447 = bitcast i32* %1446 to <4 x i32>*
  %1448 = load <4 x i32>, <4 x i32>* %1447, align 4, !alias.scope !248
  %1449 = getelementptr inbounds i32, i32* %1446, i64 4
  %1450 = bitcast i32* %1449 to <4 x i32>*
  %1451 = load <4 x i32>, <4 x i32>* %1450, align 4, !alias.scope !248
  %1452 = icmp ne <4 x i32> %1442, %1448
  %1453 = icmp ne <4 x i32> %1445, %1451
  %1454 = getelementptr inbounds i8, i8* %1278, i64 %1439
  %1455 = zext <4 x i1> %1452 to <4 x i8>
  %1456 = zext <4 x i1> %1453 to <4 x i8>
  %1457 = bitcast i8* %1454 to <4 x i8>*
  store <4 x i8> %1455, <4 x i8>* %1457, align 1, !alias.scope !250, !noalias !252
  %1458 = getelementptr inbounds i8, i8* %1454, i64 4
  %1459 = bitcast i8* %1458 to <4 x i8>*
  store <4 x i8> %1456, <4 x i8>* %1459, align 1, !alias.scope !250, !noalias !252
  %1460 = add i64 %1417, 16
  %1461 = add i64 %1418, -2
  %1462 = icmp eq i64 %1461, 0
  br i1 %1462, label %1463, label %1416, !llvm.loop !253

1463:                                             ; preds = %1416, %1407
  %1464 = phi i64 [ 0, %1407 ], [ %1460, %1416 ]
  %1465 = icmp eq i64 %1412, 0
  br i1 %1465, label %1487, label %1466

1466:                                             ; preds = %1463
  %1467 = getelementptr inbounds i32, i32* %1207, i64 %1464
  %1468 = bitcast i32* %1467 to <4 x i32>*
  %1469 = load <4 x i32>, <4 x i32>* %1468, align 4, !alias.scope !245
  %1470 = getelementptr inbounds i32, i32* %1467, i64 4
  %1471 = bitcast i32* %1470 to <4 x i32>*
  %1472 = load <4 x i32>, <4 x i32>* %1471, align 4, !alias.scope !245
  %1473 = getelementptr inbounds i32, i32* %1243, i64 %1464
  %1474 = bitcast i32* %1473 to <4 x i32>*
  %1475 = load <4 x i32>, <4 x i32>* %1474, align 4, !alias.scope !248
  %1476 = getelementptr inbounds i32, i32* %1473, i64 4
  %1477 = bitcast i32* %1476 to <4 x i32>*
  %1478 = load <4 x i32>, <4 x i32>* %1477, align 4, !alias.scope !248
  %1479 = icmp ne <4 x i32> %1469, %1475
  %1480 = icmp ne <4 x i32> %1472, %1478
  %1481 = getelementptr inbounds i8, i8* %1278, i64 %1464
  %1482 = zext <4 x i1> %1479 to <4 x i8>
  %1483 = zext <4 x i1> %1480 to <4 x i8>
  %1484 = bitcast i8* %1481 to <4 x i8>*
  store <4 x i8> %1482, <4 x i8>* %1484, align 1, !alias.scope !250, !noalias !252
  %1485 = getelementptr inbounds i8, i8* %1481, i64 4
  %1486 = bitcast i8* %1485 to <4 x i8>*
  store <4 x i8> %1483, <4 x i8>* %1486, align 1, !alias.scope !250, !noalias !252
  br label %1487

1487:                                             ; preds = %1463, %1466
  %1488 = icmp eq i64 %1392, %1408
  br i1 %1488, label %1525, label %1489

1489:                                             ; preds = %1487, %1394, %1391
  %1490 = phi i64 [ 0, %1394 ], [ 0, %1391 ], [ %1408, %1487 ]
  %1491 = and i64 %1392, 1
  %1492 = icmp eq i64 %1491, 0
  br i1 %1492, label %1502, label %1493

1493:                                             ; preds = %1489
  %1494 = getelementptr inbounds i32, i32* %1207, i64 %1490
  %1495 = load i32, i32* %1494, align 4
  %1496 = getelementptr inbounds i32, i32* %1243, i64 %1490
  %1497 = load i32, i32* %1496, align 4
  %1498 = icmp ne i32 %1495, %1497
  %1499 = getelementptr inbounds i8, i8* %1278, i64 %1490
  %1500 = zext i1 %1498 to i8
  store i8 %1500, i8* %1499, align 1
  %1501 = or i64 %1490, 1
  br label %1502

1502:                                             ; preds = %1489, %1493
  %1503 = phi i64 [ %1490, %1489 ], [ %1501, %1493 ]
  %1504 = or i64 %1490, 1
  %1505 = icmp eq i64 %1392, %1504
  br i1 %1505, label %1525, label %1506

1506:                                             ; preds = %1502, %1506
  %1507 = phi i64 [ %1523, %1506 ], [ %1503, %1502 ]
  %1508 = getelementptr inbounds i32, i32* %1207, i64 %1507
  %1509 = load i32, i32* %1508, align 4
  %1510 = getelementptr inbounds i32, i32* %1243, i64 %1507
  %1511 = load i32, i32* %1510, align 4
  %1512 = icmp ne i32 %1509, %1511
  %1513 = getelementptr inbounds i8, i8* %1278, i64 %1507
  %1514 = zext i1 %1512 to i8
  store i8 %1514, i8* %1513, align 1
  %1515 = add nuw nsw i64 %1507, 1
  %1516 = getelementptr inbounds i32, i32* %1207, i64 %1515
  %1517 = load i32, i32* %1516, align 4
  %1518 = getelementptr inbounds i32, i32* %1243, i64 %1515
  %1519 = load i32, i32* %1518, align 4
  %1520 = icmp ne i32 %1517, %1519
  %1521 = getelementptr inbounds i8, i8* %1278, i64 %1515
  %1522 = zext i1 %1520 to i8
  store i8 %1522, i8* %1521, align 1
  %1523 = add nuw nsw i64 %1507, 2
  %1524 = icmp eq i64 %1523, %1392
  br i1 %1524, label %1525, label %1506, !llvm.loop !254

1525:                                             ; preds = %1502, %1506, %1487, %1387
  %1526 = icmp sgt i32 %1277, 5
  br i1 %1526, label %1527, label %1533

1527:                                             ; preds = %1525
  %1528 = getelementptr inbounds %"class.tflite::RuntimeShape", %"class.tflite::RuntimeShape"* %27, i64 0, i32 1, i32 0
  %1529 = load i32*, i32** %1528, align 8
  %1530 = icmp eq i32* %1529, null
  br i1 %1530, label %1533, label %1531

1531:                                             ; preds = %1527
  %1532 = bitcast i32* %1529 to i8*
  tail call void @_ZdaPv(i8* %1532) #9
  br label %1533

1533:                                             ; preds = %1531, %1527, %1525
  call void @llvm.lifetime.end.p0i8(i64 32, i8* nonnull %1244) #8
  %1534 = icmp sgt i32 %1241, 5
  br i1 %1534, label %1535, label %1541

1535:                                             ; preds = %1533
  %1536 = getelementptr inbounds %"class.tflite::RuntimeShape", %"class.tflite::RuntimeShape"* %26, i64 0, i32 1, i32 0
  %1537 = load i32*, i32** %1536, align 8
  %1538 = icmp eq i32* %1537, null
  br i1 %1538, label %1541, label %1539

1539:                                             ; preds = %1535
  %1540 = bitcast i32* %1537 to i8*
  tail call void @_ZdaPv(i8* %1540) #9
  br label %1541

1541:                                             ; preds = %1539, %1535, %1533
  call void @llvm.lifetime.end.p0i8(i64 32, i8* nonnull %1208) #8
  br i1 %1280, label %1542, label %1579

1542:                                             ; preds = %1541
  %1543 = getelementptr inbounds %"class.tflite::RuntimeShape", %"class.tflite::RuntimeShape"* %25, i64 0, i32 1, i32 0
  %1544 = load i32*, i32** %1543, align 8
  %1545 = icmp eq i32* %1544, null
  br i1 %1545, label %1579, label %1546

1546:                                             ; preds = %1542
  %1547 = bitcast i32* %1544 to i8*
  tail call void @_ZdaPv(i8* %1547) #9
  br label %1579

1548:                                             ; preds = %1163, %1141
  %1549 = phi i8* [ %1170, %1163 ], [ null, %1141 ]
  call void @_ZN6tflite13reference_ops29BroadcastComparison4DSlowImplIiXadL_ZNS0_10NotEqualFnIiEEbT_S3_EEEEvRKNS_16ComparisonParamsERKNS_12RuntimeShapeEPKS3_S9_SB_S9_Pb(%"struct.tflite::ComparisonParams"* nonnull dereferenceable(32) %21, %"class.tflite::RuntimeShape"* nonnull dereferenceable(32) %22, i32* %1105, %"class.tflite::RuntimeShape"* nonnull dereferenceable(32) %23, i32* %1138, %"class.tflite::RuntimeShape"* nonnull dereferenceable(32) %24, i8* %1549) #8
  %1550 = getelementptr inbounds %"class.tflite::RuntimeShape", %"class.tflite::RuntimeShape"* %24, i64 0, i32 0
  %1551 = load i32, i32* %1550, align 8
  %1552 = icmp sgt i32 %1551, 5
  br i1 %1552, label %1553, label %1559

1553:                                             ; preds = %1548
  %1554 = getelementptr inbounds %"class.tflite::RuntimeShape", %"class.tflite::RuntimeShape"* %24, i64 0, i32 1, i32 0
  %1555 = load i32*, i32** %1554, align 8
  %1556 = icmp eq i32* %1555, null
  br i1 %1556, label %1559, label %1557

1557:                                             ; preds = %1553
  %1558 = bitcast i32* %1555 to i8*
  call void @_ZdaPv(i8* %1558) #9
  br label %1559

1559:                                             ; preds = %1557, %1553, %1548
  call void @llvm.lifetime.end.p0i8(i64 32, i8* nonnull %1139) #8
  %1560 = getelementptr inbounds %"class.tflite::RuntimeShape", %"class.tflite::RuntimeShape"* %23, i64 0, i32 0
  %1561 = load i32, i32* %1560, align 8
  %1562 = icmp sgt i32 %1561, 5
  br i1 %1562, label %1563, label %1569

1563:                                             ; preds = %1559
  %1564 = getelementptr inbounds %"class.tflite::RuntimeShape", %"class.tflite::RuntimeShape"* %23, i64 0, i32 1, i32 0
  %1565 = load i32*, i32** %1564, align 8
  %1566 = icmp eq i32* %1565, null
  br i1 %1566, label %1569, label %1567

1567:                                             ; preds = %1563
  %1568 = bitcast i32* %1565 to i8*
  call void @_ZdaPv(i8* %1568) #9
  br label %1569

1569:                                             ; preds = %1567, %1563, %1559
  call void @llvm.lifetime.end.p0i8(i64 32, i8* nonnull %1106) #8
  %1570 = getelementptr inbounds %"class.tflite::RuntimeShape", %"class.tflite::RuntimeShape"* %22, i64 0, i32 0
  %1571 = load i32, i32* %1570, align 8
  %1572 = icmp sgt i32 %1571, 5
  br i1 %1572, label %1573, label %1579

1573:                                             ; preds = %1569
  %1574 = getelementptr inbounds %"class.tflite::RuntimeShape", %"class.tflite::RuntimeShape"* %22, i64 0, i32 1, i32 0
  %1575 = load i32*, i32** %1574, align 8
  %1576 = icmp eq i32* %1575, null
  br i1 %1576, label %1579, label %1577

1577:                                             ; preds = %1573
  %1578 = bitcast i32* %1575 to i8*
  call void @_ZdaPv(i8* %1578) #9
  br label %1579

1579:                                             ; preds = %1569, %1573, %1577, %1541, %1542, %1546
  %1580 = phi i8* [ %1172, %1546 ], [ %1172, %1542 ], [ %1172, %1541 ], [ %1073, %1577 ], [ %1073, %1573 ], [ %1073, %1569 ]
  call void @llvm.lifetime.end.p0i8(i64 32, i8* nonnull %1580) #8
  call void @llvm.lifetime.end.p0i8(i64 32, i8* nonnull %1071) #8
  br label %2967

1581:                                             ; preds = %85
  %1582 = bitcast %"struct.tflite::ComparisonParams"* %14 to i8*
  call void @llvm.lifetime.start.p0i8(i64 32, i8* nonnull %1582) #8
  call void @llvm.memset.p0i8.i64(i8* nonnull align 4 %1582, i8 -86, i64 32, i1 false) #8
  br i1 %87, label %1684, label %1583

1583:                                             ; preds = %1581
  %1584 = bitcast %"class.tflite::RuntimeShape"* %15 to i8*
  call void @llvm.lifetime.start.p0i8(i64 32, i8* nonnull %1584) #8
  %1585 = icmp eq %struct.TfLiteTensor* %64, null
  br i1 %1585, label %1586, label %1588

1586:                                             ; preds = %1583
  %1587 = getelementptr inbounds %"class.tflite::RuntimeShape", %"class.tflite::RuntimeShape"* %15, i64 0, i32 0
  store i32 0, i32* %1587, align 8, !alias.scope !255
  br label %1616

1588:                                             ; preds = %1583
  %1589 = getelementptr inbounds %struct.TfLiteTensor, %struct.TfLiteTensor* %64, i64 0, i32 2
  %1590 = load %struct.TfLiteIntArray*, %struct.TfLiteIntArray** %1589, align 8, !noalias !255
  %1591 = getelementptr inbounds %struct.TfLiteIntArray, %struct.TfLiteIntArray* %1590, i64 0, i32 0
  %1592 = load i32, i32* %1591, align 4, !noalias !255
  %1593 = getelementptr inbounds %struct.TfLiteIntArray, %struct.TfLiteIntArray* %1590, i64 0, i32 1, i64 0
  %1594 = getelementptr inbounds %"class.tflite::RuntimeShape", %"class.tflite::RuntimeShape"* %15, i64 0, i32 0
  store i32 %1592, i32* %1594, align 8, !alias.scope !255
  %1595 = icmp sgt i32 %1592, 5
  br i1 %1595, label %1596, label %1603

1596:                                             ; preds = %1588
  %1597 = sext i32 %1592 to i64
  %1598 = shl nsw i64 %1597, 2
  %1599 = tail call i8* @_Znam(i64 %1598) #9, !noalias !255
  %1600 = getelementptr inbounds %"class.tflite::RuntimeShape", %"class.tflite::RuntimeShape"* %15, i64 0, i32 1, i32 0
  %1601 = bitcast i32** %1600 to i8**
  store i8* %1599, i8** %1601, align 8, !alias.scope !255
  %1602 = bitcast i8* %1599 to i32*
  br label %1608

1603:                                             ; preds = %1588
  %1604 = getelementptr inbounds %"class.tflite::RuntimeShape", %"class.tflite::RuntimeShape"* %15, i64 0, i32 1
  %1605 = bitcast %union.anon* %1604 to i32*
  %1606 = sext i32 %1592 to i64
  %1607 = shl nsw i64 %1606, 2
  br label %1608

1608:                                             ; preds = %1603, %1596
  %1609 = phi i64 [ %1598, %1596 ], [ %1607, %1603 ]
  %1610 = phi i32* [ %1602, %1596 ], [ %1605, %1603 ]
  %1611 = bitcast i32* %1610 to i8*
  %1612 = bitcast i32* %1593 to i8*
  call void @llvm.memcpy.p0i8.p0i8.i64(i8* align 4 %1611, i8* align 4 %1612, i64 %1609, i1 false) #8
  %1613 = getelementptr inbounds %struct.TfLiteTensor, %struct.TfLiteTensor* %64, i64 0, i32 1
  %1614 = bitcast %union.TfLitePtrUnion* %1613 to i64**
  %1615 = load i64*, i64** %1614, align 8
  br label %1616

1616:                                             ; preds = %1608, %1586
  %1617 = phi i64* [ %1615, %1608 ], [ null, %1586 ]
  %1618 = bitcast %"class.tflite::RuntimeShape"* %16 to i8*
  call void @llvm.lifetime.start.p0i8(i64 32, i8* nonnull %1618) #8
  %1619 = icmp eq %struct.TfLiteTensor* %74, null
  br i1 %1619, label %1620, label %1622

1620:                                             ; preds = %1616
  %1621 = getelementptr inbounds %"class.tflite::RuntimeShape", %"class.tflite::RuntimeShape"* %16, i64 0, i32 0
  store i32 0, i32* %1621, align 8, !alias.scope !258
  br label %1650

1622:                                             ; preds = %1616
  %1623 = getelementptr inbounds %struct.TfLiteTensor, %struct.TfLiteTensor* %74, i64 0, i32 2
  %1624 = load %struct.TfLiteIntArray*, %struct.TfLiteIntArray** %1623, align 8, !noalias !258
  %1625 = getelementptr inbounds %struct.TfLiteIntArray, %struct.TfLiteIntArray* %1624, i64 0, i32 0
  %1626 = load i32, i32* %1625, align 4, !noalias !258
  %1627 = getelementptr inbounds %struct.TfLiteIntArray, %struct.TfLiteIntArray* %1624, i64 0, i32 1, i64 0
  %1628 = getelementptr inbounds %"class.tflite::RuntimeShape", %"class.tflite::RuntimeShape"* %16, i64 0, i32 0
  store i32 %1626, i32* %1628, align 8, !alias.scope !258
  %1629 = icmp sgt i32 %1626, 5
  br i1 %1629, label %1630, label %1637

1630:                                             ; preds = %1622
  %1631 = sext i32 %1626 to i64
  %1632 = shl nsw i64 %1631, 2
  %1633 = tail call i8* @_Znam(i64 %1632) #9, !noalias !258
  %1634 = getelementptr inbounds %"class.tflite::RuntimeShape", %"class.tflite::RuntimeShape"* %16, i64 0, i32 1, i32 0
  %1635 = bitcast i32** %1634 to i8**
  store i8* %1633, i8** %1635, align 8, !alias.scope !258
  %1636 = bitcast i8* %1633 to i32*
  br label %1642

1637:                                             ; preds = %1622
  %1638 = getelementptr inbounds %"class.tflite::RuntimeShape", %"class.tflite::RuntimeShape"* %16, i64 0, i32 1
  %1639 = bitcast %union.anon* %1638 to i32*
  %1640 = sext i32 %1626 to i64
  %1641 = shl nsw i64 %1640, 2
  br label %1642

1642:                                             ; preds = %1637, %1630
  %1643 = phi i64 [ %1632, %1630 ], [ %1641, %1637 ]
  %1644 = phi i32* [ %1636, %1630 ], [ %1639, %1637 ]
  %1645 = bitcast i32* %1644 to i8*
  %1646 = bitcast i32* %1627 to i8*
  call void @llvm.memcpy.p0i8.p0i8.i64(i8* align 4 %1645, i8* align 4 %1646, i64 %1643, i1 false) #8
  %1647 = getelementptr inbounds %struct.TfLiteTensor, %struct.TfLiteTensor* %74, i64 0, i32 1
  %1648 = bitcast %union.TfLitePtrUnion* %1647 to i64**
  %1649 = load i64*, i64** %1648, align 8
  br label %1650

1650:                                             ; preds = %1642, %1620
  %1651 = phi i64* [ %1649, %1642 ], [ null, %1620 ]
  %1652 = bitcast %"class.tflite::RuntimeShape"* %17 to i8*
  call void @llvm.lifetime.start.p0i8(i64 32, i8* nonnull %1652) #8
  %1653 = icmp eq %struct.TfLiteTensor* %86, null
  br i1 %1653, label %1654, label %1656

1654:                                             ; preds = %1650
  %1655 = getelementptr inbounds %"class.tflite::RuntimeShape", %"class.tflite::RuntimeShape"* %17, i64 0, i32 0
  store i32 0, i32* %1655, align 8, !alias.scope !261
  br label %1963

1656:                                             ; preds = %1650
  %1657 = getelementptr inbounds %struct.TfLiteTensor, %struct.TfLiteTensor* %86, i64 0, i32 2
  %1658 = load %struct.TfLiteIntArray*, %struct.TfLiteIntArray** %1657, align 8, !noalias !261
  %1659 = getelementptr inbounds %struct.TfLiteIntArray, %struct.TfLiteIntArray* %1658, i64 0, i32 0
  %1660 = load i32, i32* %1659, align 4, !noalias !261
  %1661 = getelementptr inbounds %struct.TfLiteIntArray, %struct.TfLiteIntArray* %1658, i64 0, i32 1, i64 0
  %1662 = getelementptr inbounds %"class.tflite::RuntimeShape", %"class.tflite::RuntimeShape"* %17, i64 0, i32 0
  store i32 %1660, i32* %1662, align 8, !alias.scope !261
  %1663 = icmp sgt i32 %1660, 5
  br i1 %1663, label %1664, label %1671

1664:                                             ; preds = %1656
  %1665 = sext i32 %1660 to i64
  %1666 = shl nsw i64 %1665, 2
  %1667 = tail call i8* @_Znam(i64 %1666) #9, !noalias !261
  %1668 = getelementptr inbounds %"class.tflite::RuntimeShape", %"class.tflite::RuntimeShape"* %17, i64 0, i32 1, i32 0
  %1669 = bitcast i32** %1668 to i8**
  store i8* %1667, i8** %1669, align 8, !alias.scope !261
  %1670 = bitcast i8* %1667 to i32*
  br label %1676

1671:                                             ; preds = %1656
  %1672 = getelementptr inbounds %"class.tflite::RuntimeShape", %"class.tflite::RuntimeShape"* %17, i64 0, i32 1
  %1673 = bitcast %union.anon* %1672 to i32*
  %1674 = sext i32 %1660 to i64
  %1675 = shl nsw i64 %1674, 2
  br label %1676

1676:                                             ; preds = %1671, %1664
  %1677 = phi i64 [ %1666, %1664 ], [ %1675, %1671 ]
  %1678 = phi i32* [ %1670, %1664 ], [ %1673, %1671 ]
  %1679 = bitcast i32* %1678 to i8*
  %1680 = bitcast i32* %1661 to i8*
  call void @llvm.memcpy.p0i8.p0i8.i64(i8* align 4 %1679, i8* align 4 %1680, i64 %1677, i1 false) #8
  %1681 = getelementptr inbounds %struct.TfLiteTensor, %struct.TfLiteTensor* %86, i64 0, i32 1
  %1682 = bitcast %union.TfLitePtrUnion* %1681 to i8**
  %1683 = load i8*, i8** %1682, align 8
  br label %1963

1684:                                             ; preds = %1581
  %1685 = bitcast %"class.tflite::RuntimeShape"* %18 to i8*
  call void @llvm.lifetime.start.p0i8(i64 32, i8* nonnull %1685) #8
  %1686 = icmp eq %struct.TfLiteTensor* %64, null
  br i1 %1686, label %1687, label %1689

1687:                                             ; preds = %1684
  %1688 = getelementptr inbounds %"class.tflite::RuntimeShape", %"class.tflite::RuntimeShape"* %18, i64 0, i32 0
  store i32 0, i32* %1688, align 8, !alias.scope !264
  br label %1717

1689:                                             ; preds = %1684
  %1690 = getelementptr inbounds %struct.TfLiteTensor, %struct.TfLiteTensor* %64, i64 0, i32 2
  %1691 = load %struct.TfLiteIntArray*, %struct.TfLiteIntArray** %1690, align 8, !noalias !264
  %1692 = getelementptr inbounds %struct.TfLiteIntArray, %struct.TfLiteIntArray* %1691, i64 0, i32 0
  %1693 = load i32, i32* %1692, align 4, !noalias !264
  %1694 = getelementptr inbounds %struct.TfLiteIntArray, %struct.TfLiteIntArray* %1691, i64 0, i32 1, i64 0
  %1695 = getelementptr inbounds %"class.tflite::RuntimeShape", %"class.tflite::RuntimeShape"* %18, i64 0, i32 0
  store i32 %1693, i32* %1695, align 8, !alias.scope !264
  %1696 = icmp sgt i32 %1693, 5
  br i1 %1696, label %1697, label %1704

1697:                                             ; preds = %1689
  %1698 = sext i32 %1693 to i64
  %1699 = shl nsw i64 %1698, 2
  %1700 = tail call i8* @_Znam(i64 %1699) #9, !noalias !264
  %1701 = getelementptr inbounds %"class.tflite::RuntimeShape", %"class.tflite::RuntimeShape"* %18, i64 0, i32 1, i32 0
  %1702 = bitcast i32** %1701 to i8**
  store i8* %1700, i8** %1702, align 8, !alias.scope !264
  %1703 = bitcast i8* %1700 to i32*
  br label %1709

1704:                                             ; preds = %1689
  %1705 = getelementptr inbounds %"class.tflite::RuntimeShape", %"class.tflite::RuntimeShape"* %18, i64 0, i32 1
  %1706 = bitcast %union.anon* %1705 to i32*
  %1707 = sext i32 %1693 to i64
  %1708 = shl nsw i64 %1707, 2
  br label %1709

1709:                                             ; preds = %1704, %1697
  %1710 = phi i64 [ %1699, %1697 ], [ %1708, %1704 ]
  %1711 = phi i32* [ %1703, %1697 ], [ %1706, %1704 ]
  %1712 = bitcast i32* %1711 to i8*
  %1713 = bitcast i32* %1694 to i8*
  call void @llvm.memcpy.p0i8.p0i8.i64(i8* align 4 %1712, i8* align 4 %1713, i64 %1710, i1 false) #8
  %1714 = getelementptr inbounds %struct.TfLiteTensor, %struct.TfLiteTensor* %64, i64 0, i32 1
  %1715 = bitcast %union.TfLitePtrUnion* %1714 to i64**
  %1716 = load i64*, i64** %1715, align 8
  br label %1717

1717:                                             ; preds = %1709, %1687
  %1718 = phi i32 [ %1693, %1709 ], [ 0, %1687 ]
  %1719 = phi i64* [ %1716, %1709 ], [ null, %1687 ]
  %1720 = bitcast %"class.tflite::RuntimeShape"* %19 to i8*
  call void @llvm.lifetime.start.p0i8(i64 32, i8* nonnull %1720) #8
  %1721 = icmp eq %struct.TfLiteTensor* %74, null
  br i1 %1721, label %1722, label %1724

1722:                                             ; preds = %1717
  %1723 = getelementptr inbounds %"class.tflite::RuntimeShape", %"class.tflite::RuntimeShape"* %19, i64 0, i32 0
  store i32 0, i32* %1723, align 8, !alias.scope !267
  br label %1752

1724:                                             ; preds = %1717
  %1725 = getelementptr inbounds %struct.TfLiteTensor, %struct.TfLiteTensor* %74, i64 0, i32 2
  %1726 = load %struct.TfLiteIntArray*, %struct.TfLiteIntArray** %1725, align 8, !noalias !267
  %1727 = getelementptr inbounds %struct.TfLiteIntArray, %struct.TfLiteIntArray* %1726, i64 0, i32 0
  %1728 = load i32, i32* %1727, align 4, !noalias !267
  %1729 = getelementptr inbounds %struct.TfLiteIntArray, %struct.TfLiteIntArray* %1726, i64 0, i32 1, i64 0
  %1730 = getelementptr inbounds %"class.tflite::RuntimeShape", %"class.tflite::RuntimeShape"* %19, i64 0, i32 0
  store i32 %1728, i32* %1730, align 8, !alias.scope !267
  %1731 = icmp sgt i32 %1728, 5
  br i1 %1731, label %1732, label %1739

1732:                                             ; preds = %1724
  %1733 = sext i32 %1728 to i64
  %1734 = shl nsw i64 %1733, 2
  %1735 = tail call i8* @_Znam(i64 %1734) #9, !noalias !267
  %1736 = getelementptr inbounds %"class.tflite::RuntimeShape", %"class.tflite::RuntimeShape"* %19, i64 0, i32 1, i32 0
  %1737 = bitcast i32** %1736 to i8**
  store i8* %1735, i8** %1737, align 8, !alias.scope !267
  %1738 = bitcast i8* %1735 to i32*
  br label %1744

1739:                                             ; preds = %1724
  %1740 = getelementptr inbounds %"class.tflite::RuntimeShape", %"class.tflite::RuntimeShape"* %19, i64 0, i32 1
  %1741 = bitcast %union.anon* %1740 to i32*
  %1742 = sext i32 %1728 to i64
  %1743 = shl nsw i64 %1742, 2
  br label %1744

1744:                                             ; preds = %1739, %1732
  %1745 = phi i64 [ %1734, %1732 ], [ %1743, %1739 ]
  %1746 = phi i32* [ %1738, %1732 ], [ %1741, %1739 ]
  %1747 = bitcast i32* %1746 to i8*
  %1748 = bitcast i32* %1729 to i8*
  call void @llvm.memcpy.p0i8.p0i8.i64(i8* align 4 %1747, i8* align 4 %1748, i64 %1745, i1 false) #8
  %1749 = getelementptr inbounds %struct.TfLiteTensor, %struct.TfLiteTensor* %74, i64 0, i32 1
  %1750 = bitcast %union.TfLitePtrUnion* %1749 to i64**
  %1751 = load i64*, i64** %1750, align 8
  br label %1752

1752:                                             ; preds = %1744, %1722
  %1753 = phi i32 [ %1728, %1744 ], [ 0, %1722 ]
  %1754 = phi i64* [ %1751, %1744 ], [ null, %1722 ]
  %1755 = bitcast %"class.tflite::RuntimeShape"* %20 to i8*
  call void @llvm.lifetime.start.p0i8(i64 32, i8* nonnull %1755) #8
  %1756 = icmp eq %struct.TfLiteTensor* %86, null
  br i1 %1756, label %1757, label %1759

1757:                                             ; preds = %1752
  %1758 = getelementptr inbounds %"class.tflite::RuntimeShape", %"class.tflite::RuntimeShape"* %20, i64 0, i32 0
  store i32 0, i32* %1758, align 8, !alias.scope !270
  br label %1787

1759:                                             ; preds = %1752
  %1760 = getelementptr inbounds %struct.TfLiteTensor, %struct.TfLiteTensor* %86, i64 0, i32 2
  %1761 = load %struct.TfLiteIntArray*, %struct.TfLiteIntArray** %1760, align 8, !noalias !270
  %1762 = getelementptr inbounds %struct.TfLiteIntArray, %struct.TfLiteIntArray* %1761, i64 0, i32 0
  %1763 = load i32, i32* %1762, align 4, !noalias !270
  %1764 = getelementptr inbounds %struct.TfLiteIntArray, %struct.TfLiteIntArray* %1761, i64 0, i32 1, i64 0
  %1765 = getelementptr inbounds %"class.tflite::RuntimeShape", %"class.tflite::RuntimeShape"* %20, i64 0, i32 0
  store i32 %1763, i32* %1765, align 8, !alias.scope !270
  %1766 = icmp sgt i32 %1763, 5
  br i1 %1766, label %1767, label %1774

1767:                                             ; preds = %1759
  %1768 = sext i32 %1763 to i64
  %1769 = shl nsw i64 %1768, 2
  %1770 = tail call i8* @_Znam(i64 %1769) #9, !noalias !270
  %1771 = getelementptr inbounds %"class.tflite::RuntimeShape", %"class.tflite::RuntimeShape"* %20, i64 0, i32 1, i32 0
  %1772 = bitcast i32** %1771 to i8**
  store i8* %1770, i8** %1772, align 8, !alias.scope !270
  %1773 = bitcast i8* %1770 to i32*
  br label %1779

1774:                                             ; preds = %1759
  %1775 = getelementptr inbounds %"class.tflite::RuntimeShape", %"class.tflite::RuntimeShape"* %20, i64 0, i32 1
  %1776 = bitcast %union.anon* %1775 to i32*
  %1777 = sext i32 %1763 to i64
  %1778 = shl nsw i64 %1777, 2
  br label %1779

1779:                                             ; preds = %1774, %1767
  %1780 = phi i64 [ %1769, %1767 ], [ %1778, %1774 ]
  %1781 = phi i32* [ %1773, %1767 ], [ %1776, %1774 ]
  %1782 = bitcast i32* %1781 to i8*
  %1783 = bitcast i32* %1764 to i8*
  call void @llvm.memcpy.p0i8.p0i8.i64(i8* align 4 %1782, i8* align 4 %1783, i64 %1780, i1 false) #8
  %1784 = getelementptr inbounds %struct.TfLiteTensor, %struct.TfLiteTensor* %86, i64 0, i32 1
  %1785 = bitcast %union.TfLitePtrUnion* %1784 to i8**
  %1786 = load i8*, i8** %1785, align 8
  br label %1787

1787:                                             ; preds = %1779, %1757
  %1788 = phi i32 [ %1763, %1779 ], [ 0, %1757 ]
  %1789 = phi i8* [ %1786, %1779 ], [ null, %1757 ]
  %1790 = getelementptr inbounds %"class.tflite::RuntimeShape", %"class.tflite::RuntimeShape"* %18, i64 0, i32 1
  %1791 = icmp sgt i32 %1718, 5
  br i1 %1791, label %1792, label %1795

1792:                                             ; preds = %1787
  %1793 = getelementptr inbounds %union.anon, %union.anon* %1790, i64 0, i32 0
  %1794 = load i32*, i32** %1793, align 8
  br label %1798

1795:                                             ; preds = %1787
  %1796 = bitcast %union.anon* %1790 to i32*
  %1797 = icmp sgt i32 %1718, 0
  br i1 %1797, label %1798, label %1902

1798:                                             ; preds = %1795, %1792
  %1799 = phi i32* [ %1794, %1792 ], [ %1796, %1795 ]
  %1800 = zext i32 %1718 to i64
  %1801 = icmp ult i32 %1718, 8
  br i1 %1801, label %1887, label %1802

1802:                                             ; preds = %1798
  %1803 = and i64 %1800, 4294967288
  %1804 = add nsw i64 %1803, -8
  %1805 = lshr exact i64 %1804, 3
  %1806 = add nuw nsw i64 %1805, 1
  %1807 = and i64 %1806, 3
  %1808 = icmp ult i64 %1804, 24
  br i1 %1808, label %1854, label %1809

1809:                                             ; preds = %1802
  %1810 = sub nsw i64 %1806, %1807
  br label %1811

1811:                                             ; preds = %1811, %1809
  %1812 = phi i64 [ 0, %1809 ], [ %1851, %1811 ]
  %1813 = phi <4 x i32> [ <i32 1, i32 1, i32 1, i32 1>, %1809 ], [ %1849, %1811 ]
  %1814 = phi <4 x i32> [ <i32 1, i32 1, i32 1, i32 1>, %1809 ], [ %1850, %1811 ]
  %1815 = phi i64 [ %1810, %1809 ], [ %1852, %1811 ]
  %1816 = getelementptr inbounds i32, i32* %1799, i64 %1812
  %1817 = bitcast i32* %1816 to <4 x i32>*
  %1818 = load <4 x i32>, <4 x i32>* %1817, align 4
  %1819 = getelementptr inbounds i32, i32* %1816, i64 4
  %1820 = bitcast i32* %1819 to <4 x i32>*
  %1821 = load <4 x i32>, <4 x i32>* %1820, align 4
  %1822 = mul nsw <4 x i32> %1818, %1813
  %1823 = mul nsw <4 x i32> %1821, %1814
  %1824 = or i64 %1812, 8
  %1825 = getelementptr inbounds i32, i32* %1799, i64 %1824
  %1826 = bitcast i32* %1825 to <4 x i32>*
  %1827 = load <4 x i32>, <4 x i32>* %1826, align 4
  %1828 = getelementptr inbounds i32, i32* %1825, i64 4
  %1829 = bitcast i32* %1828 to <4 x i32>*
  %1830 = load <4 x i32>, <4 x i32>* %1829, align 4
  %1831 = mul nsw <4 x i32> %1827, %1822
  %1832 = mul nsw <4 x i32> %1830, %1823
  %1833 = or i64 %1812, 16
  %1834 = getelementptr inbounds i32, i32* %1799, i64 %1833
  %1835 = bitcast i32* %1834 to <4 x i32>*
  %1836 = load <4 x i32>, <4 x i32>* %1835, align 4
  %1837 = getelementptr inbounds i32, i32* %1834, i64 4
  %1838 = bitcast i32* %1837 to <4 x i32>*
  %1839 = load <4 x i32>, <4 x i32>* %1838, align 4
  %1840 = mul nsw <4 x i32> %1836, %1831
  %1841 = mul nsw <4 x i32> %1839, %1832
  %1842 = or i64 %1812, 24
  %1843 = getelementptr inbounds i32, i32* %1799, i64 %1842
  %1844 = bitcast i32* %1843 to <4 x i32>*
  %1845 = load <4 x i32>, <4 x i32>* %1844, align 4
  %1846 = getelementptr inbounds i32, i32* %1843, i64 4
  %1847 = bitcast i32* %1846 to <4 x i32>*
  %1848 = load <4 x i32>, <4 x i32>* %1847, align 4
  %1849 = mul nsw <4 x i32> %1845, %1840
  %1850 = mul nsw <4 x i32> %1848, %1841
  %1851 = add i64 %1812, 32
  %1852 = add i64 %1815, -4
  %1853 = icmp eq i64 %1852, 0
  br i1 %1853, label %1854, label %1811, !llvm.loop !273

1854:                                             ; preds = %1811, %1802
  %1855 = phi <4 x i32> [ undef, %1802 ], [ %1849, %1811 ]
  %1856 = phi <4 x i32> [ undef, %1802 ], [ %1850, %1811 ]
  %1857 = phi i64 [ 0, %1802 ], [ %1851, %1811 ]
  %1858 = phi <4 x i32> [ <i32 1, i32 1, i32 1, i32 1>, %1802 ], [ %1849, %1811 ]
  %1859 = phi <4 x i32> [ <i32 1, i32 1, i32 1, i32 1>, %1802 ], [ %1850, %1811 ]
  %1860 = icmp eq i64 %1807, 0
  br i1 %1860, label %1877, label %1861

1861:                                             ; preds = %1854, %1861
  %1862 = phi i64 [ %1874, %1861 ], [ %1857, %1854 ]
  %1863 = phi <4 x i32> [ %1872, %1861 ], [ %1858, %1854 ]
  %1864 = phi <4 x i32> [ %1873, %1861 ], [ %1859, %1854 ]
  %1865 = phi i64 [ %1875, %1861 ], [ %1807, %1854 ]
  %1866 = getelementptr inbounds i32, i32* %1799, i64 %1862
  %1867 = bitcast i32* %1866 to <4 x i32>*
  %1868 = load <4 x i32>, <4 x i32>* %1867, align 4
  %1869 = getelementptr inbounds i32, i32* %1866, i64 4
  %1870 = bitcast i32* %1869 to <4 x i32>*
  %1871 = load <4 x i32>, <4 x i32>* %1870, align 4
  %1872 = mul nsw <4 x i32> %1868, %1863
  %1873 = mul nsw <4 x i32> %1871, %1864
  %1874 = add i64 %1862, 8
  %1875 = add i64 %1865, -1
  %1876 = icmp eq i64 %1875, 0
  br i1 %1876, label %1877, label %1861, !llvm.loop !274

1877:                                             ; preds = %1861, %1854
  %1878 = phi <4 x i32> [ %1855, %1854 ], [ %1872, %1861 ]
  %1879 = phi <4 x i32> [ %1856, %1854 ], [ %1873, %1861 ]
  %1880 = mul <4 x i32> %1879, %1878
  %1881 = shufflevector <4 x i32> %1880, <4 x i32> undef, <4 x i32> <i32 2, i32 3, i32 undef, i32 undef>
  %1882 = mul <4 x i32> %1880, %1881
  %1883 = shufflevector <4 x i32> %1882, <4 x i32> undef, <4 x i32> <i32 1, i32 undef, i32 undef, i32 undef>
  %1884 = mul <4 x i32> %1882, %1883
  %1885 = extractelement <4 x i32> %1884, i32 0
  %1886 = icmp eq i64 %1803, %1800
  br i1 %1886, label %1898, label %1887

1887:                                             ; preds = %1877, %1798
  %1888 = phi i64 [ 0, %1798 ], [ %1803, %1877 ]
  %1889 = phi i32 [ 1, %1798 ], [ %1885, %1877 ]
  br label %1890

1890:                                             ; preds = %1887, %1890
  %1891 = phi i64 [ %1896, %1890 ], [ %1888, %1887 ]
  %1892 = phi i32 [ %1895, %1890 ], [ %1889, %1887 ]
  %1893 = getelementptr inbounds i32, i32* %1799, i64 %1891
  %1894 = load i32, i32* %1893, align 4
  %1895 = mul nsw i32 %1894, %1892
  %1896 = add nuw nsw i64 %1891, 1
  %1897 = icmp eq i64 %1896, %1800
  br i1 %1897, label %1898, label %1890, !llvm.loop !275

1898:                                             ; preds = %1890, %1877
  %1899 = phi i32 [ %1885, %1877 ], [ %1895, %1890 ]
  %1900 = sext i32 %1899 to i64
  %1901 = icmp sgt i32 %1899, 0
  br i1 %1901, label %1902, label %1940

1902:                                             ; preds = %1898, %1795
  %1903 = phi i64 [ %1900, %1898 ], [ 1, %1795 ]
  %1904 = and i64 %1903, 1
  %1905 = icmp eq i64 %1903, 1
  br i1 %1905, label %1929, label %1906

1906:                                             ; preds = %1902
  %1907 = sub nsw i64 %1903, %1904
  br label %1908

1908:                                             ; preds = %1908, %1906
  %1909 = phi i64 [ 0, %1906 ], [ %1926, %1908 ]
  %1910 = phi i64 [ %1907, %1906 ], [ %1927, %1908 ]
  %1911 = getelementptr inbounds i64, i64* %1719, i64 %1909
  %1912 = load i64, i64* %1911, align 8
  %1913 = getelementptr inbounds i64, i64* %1754, i64 %1909
  %1914 = load i64, i64* %1913, align 8
  %1915 = icmp ne i64 %1912, %1914
  %1916 = getelementptr inbounds i8, i8* %1789, i64 %1909
  %1917 = zext i1 %1915 to i8
  store i8 %1917, i8* %1916, align 1
  %1918 = or i64 %1909, 1
  %1919 = getelementptr inbounds i64, i64* %1719, i64 %1918
  %1920 = load i64, i64* %1919, align 8
  %1921 = getelementptr inbounds i64, i64* %1754, i64 %1918
  %1922 = load i64, i64* %1921, align 8
  %1923 = icmp ne i64 %1920, %1922
  %1924 = getelementptr inbounds i8, i8* %1789, i64 %1918
  %1925 = zext i1 %1923 to i8
  store i8 %1925, i8* %1924, align 1
  %1926 = add nuw nsw i64 %1909, 2
  %1927 = add i64 %1910, -2
  %1928 = icmp eq i64 %1927, 0
  br i1 %1928, label %1929, label %1908

1929:                                             ; preds = %1908, %1902
  %1930 = phi i64 [ 0, %1902 ], [ %1926, %1908 ]
  %1931 = icmp eq i64 %1904, 0
  br i1 %1931, label %1940, label %1932

1932:                                             ; preds = %1929
  %1933 = getelementptr inbounds i64, i64* %1719, i64 %1930
  %1934 = load i64, i64* %1933, align 8
  %1935 = getelementptr inbounds i64, i64* %1754, i64 %1930
  %1936 = load i64, i64* %1935, align 8
  %1937 = icmp ne i64 %1934, %1936
  %1938 = getelementptr inbounds i8, i8* %1789, i64 %1930
  %1939 = zext i1 %1937 to i8
  store i8 %1939, i8* %1938, align 1
  br label %1940

1940:                                             ; preds = %1932, %1929, %1898
  %1941 = icmp sgt i32 %1788, 5
  br i1 %1941, label %1942, label %1948

1942:                                             ; preds = %1940
  %1943 = getelementptr inbounds %"class.tflite::RuntimeShape", %"class.tflite::RuntimeShape"* %20, i64 0, i32 1, i32 0
  %1944 = load i32*, i32** %1943, align 8
  %1945 = icmp eq i32* %1944, null
  br i1 %1945, label %1948, label %1946

1946:                                             ; preds = %1942
  %1947 = bitcast i32* %1944 to i8*
  tail call void @_ZdaPv(i8* %1947) #9
  br label %1948

1948:                                             ; preds = %1946, %1942, %1940
  call void @llvm.lifetime.end.p0i8(i64 32, i8* nonnull %1755) #8
  %1949 = icmp sgt i32 %1753, 5
  br i1 %1949, label %1950, label %1956

1950:                                             ; preds = %1948
  %1951 = getelementptr inbounds %"class.tflite::RuntimeShape", %"class.tflite::RuntimeShape"* %19, i64 0, i32 1, i32 0
  %1952 = load i32*, i32** %1951, align 8
  %1953 = icmp eq i32* %1952, null
  br i1 %1953, label %1956, label %1954

1954:                                             ; preds = %1950
  %1955 = bitcast i32* %1952 to i8*
  tail call void @_ZdaPv(i8* %1955) #9
  br label %1956

1956:                                             ; preds = %1954, %1950, %1948
  call void @llvm.lifetime.end.p0i8(i64 32, i8* nonnull %1720) #8
  br i1 %1791, label %1957, label %1994

1957:                                             ; preds = %1956
  %1958 = getelementptr inbounds %"class.tflite::RuntimeShape", %"class.tflite::RuntimeShape"* %18, i64 0, i32 1, i32 0
  %1959 = load i32*, i32** %1958, align 8
  %1960 = icmp eq i32* %1959, null
  br i1 %1960, label %1994, label %1961

1961:                                             ; preds = %1957
  %1962 = bitcast i32* %1959 to i8*
  tail call void @_ZdaPv(i8* %1962) #9
  br label %1994

1963:                                             ; preds = %1676, %1654
  %1964 = phi i8* [ %1683, %1676 ], [ null, %1654 ]
  call void @_ZN6tflite13reference_ops29BroadcastComparison4DSlowImplIlXadL_ZNS0_10NotEqualFnIlEEbT_S3_EEEEvRKNS_16ComparisonParamsERKNS_12RuntimeShapeEPKS3_S9_SB_S9_Pb(%"struct.tflite::ComparisonParams"* nonnull dereferenceable(32) %14, %"class.tflite::RuntimeShape"* nonnull dereferenceable(32) %15, i64* %1617, %"class.tflite::RuntimeShape"* nonnull dereferenceable(32) %16, i64* %1651, %"class.tflite::RuntimeShape"* nonnull dereferenceable(32) %17, i8* %1964) #8
  %1965 = getelementptr inbounds %"class.tflite::RuntimeShape", %"class.tflite::RuntimeShape"* %17, i64 0, i32 0
  %1966 = load i32, i32* %1965, align 8
  %1967 = icmp sgt i32 %1966, 5
  br i1 %1967, label %1968, label %1974

1968:                                             ; preds = %1963
  %1969 = getelementptr inbounds %"class.tflite::RuntimeShape", %"class.tflite::RuntimeShape"* %17, i64 0, i32 1, i32 0
  %1970 = load i32*, i32** %1969, align 8
  %1971 = icmp eq i32* %1970, null
  br i1 %1971, label %1974, label %1972

1972:                                             ; preds = %1968
  %1973 = bitcast i32* %1970 to i8*
  call void @_ZdaPv(i8* %1973) #9
  br label %1974

1974:                                             ; preds = %1972, %1968, %1963
  call void @llvm.lifetime.end.p0i8(i64 32, i8* nonnull %1652) #8
  %1975 = getelementptr inbounds %"class.tflite::RuntimeShape", %"class.tflite::RuntimeShape"* %16, i64 0, i32 0
  %1976 = load i32, i32* %1975, align 8
  %1977 = icmp sgt i32 %1976, 5
  br i1 %1977, label %1978, label %1984

1978:                                             ; preds = %1974
  %1979 = getelementptr inbounds %"class.tflite::RuntimeShape", %"class.tflite::RuntimeShape"* %16, i64 0, i32 1, i32 0
  %1980 = load i32*, i32** %1979, align 8
  %1981 = icmp eq i32* %1980, null
  br i1 %1981, label %1984, label %1982

1982:                                             ; preds = %1978
  %1983 = bitcast i32* %1980 to i8*
  call void @_ZdaPv(i8* %1983) #9
  br label %1984

1984:                                             ; preds = %1982, %1978, %1974
  call void @llvm.lifetime.end.p0i8(i64 32, i8* nonnull %1618) #8
  %1985 = getelementptr inbounds %"class.tflite::RuntimeShape", %"class.tflite::RuntimeShape"* %15, i64 0, i32 0
  %1986 = load i32, i32* %1985, align 8
  %1987 = icmp sgt i32 %1986, 5
  br i1 %1987, label %1988, label %1994

1988:                                             ; preds = %1984
  %1989 = getelementptr inbounds %"class.tflite::RuntimeShape", %"class.tflite::RuntimeShape"* %15, i64 0, i32 1, i32 0
  %1990 = load i32*, i32** %1989, align 8
  %1991 = icmp eq i32* %1990, null
  br i1 %1991, label %1994, label %1992

1992:                                             ; preds = %1988
  %1993 = bitcast i32* %1990 to i8*
  call void @_ZdaPv(i8* %1993) #9
  br label %1994

1994:                                             ; preds = %1984, %1988, %1992, %1956, %1957, %1961
  %1995 = phi i8* [ %1685, %1961 ], [ %1685, %1957 ], [ %1685, %1956 ], [ %1584, %1992 ], [ %1584, %1988 ], [ %1584, %1984 ]
  call void @llvm.lifetime.end.p0i8(i64 32, i8* nonnull %1995) #8
  call void @llvm.lifetime.end.p0i8(i64 32, i8* nonnull %1582) #8
  br label %2967

1996:                                             ; preds = %85
  %1997 = getelementptr inbounds %struct.TfLiteTensor, %struct.TfLiteTensor* %64, i64 0, i32 3, i32 1
  %1998 = load i32, i32* %1997, align 4
  %1999 = sub nsw i32 0, %1998
  %2000 = getelementptr inbounds %struct.TfLiteTensor, %struct.TfLiteTensor* %74, i64 0, i32 3, i32 1
  %2001 = load i32, i32* %2000, align 4
  %2002 = sub nsw i32 0, %2001
  %2003 = bitcast i32* %3 to i8*
  call void @llvm.lifetime.start.p0i8(i64 4, i8* nonnull %2003) #8
  store i32 -1431655766, i32* %3, align 4
  %2004 = bitcast i32* %4 to i8*
  call void @llvm.lifetime.start.p0i8(i64 4, i8* nonnull %2004) #8
  store i32 -1431655766, i32* %4, align 4
  %2005 = getelementptr inbounds %struct.TfLiteTensor, %struct.TfLiteTensor* %64, i64 0, i32 3, i32 0
  %2006 = load float, float* %2005, align 8
  %2007 = fpext float %2006 to double
  call void @_ZN6tflite35QuantizeMultiplierSmallerThanOneExpEdPiS0_(double %2007, i32* nonnull %3, i32* nonnull %4) #8
  %2008 = bitcast i32* %5 to i8*
  call void @llvm.lifetime.start.p0i8(i64 4, i8* nonnull %2008) #8
  store i32 -1431655766, i32* %5, align 4
  %2009 = bitcast i32* %6 to i8*
  call void @llvm.lifetime.start.p0i8(i64 4, i8* nonnull %2009) #8
  store i32 -1431655766, i32* %6, align 4
  %2010 = getelementptr inbounds %struct.TfLiteTensor, %struct.TfLiteTensor* %74, i64 0, i32 3, i32 0
  %2011 = load float, float* %2010, align 8
  %2012 = fpext float %2011 to double
  call void @_ZN6tflite35QuantizeMultiplierSmallerThanOneExpEdPiS0_(double %2012, i32* nonnull %5, i32* nonnull %6) #8
  %2013 = bitcast %"struct.tflite::ComparisonParams"* %7 to i8*
  call void @llvm.lifetime.start.p0i8(i64 32, i8* nonnull %2013) #8
  %2014 = getelementptr inbounds %"struct.tflite::ComparisonParams", %"struct.tflite::ComparisonParams"* %7, i64 0, i32 7
  %2015 = bitcast i8* %2014 to i32*
  store i32 -1431655766, i32* %2015, align 4
  %2016 = getelementptr inbounds %"struct.tflite::ComparisonParams", %"struct.tflite::ComparisonParams"* %7, i64 0, i32 0
  store i32 8, i32* %2016, align 4
  %2017 = getelementptr inbounds %"struct.tflite::ComparisonParams", %"struct.tflite::ComparisonParams"* %7, i64 0, i32 1
  store i32 %1999, i32* %2017, align 4
  %2018 = load i32, i32* %3, align 4
  %2019 = getelementptr inbounds %"struct.tflite::ComparisonParams", %"struct.tflite::ComparisonParams"* %7, i64 0, i32 2
  store i32 %2018, i32* %2019, align 4
  %2020 = load i32, i32* %4, align 4
  %2021 = getelementptr inbounds %"struct.tflite::ComparisonParams", %"struct.tflite::ComparisonParams"* %7, i64 0, i32 3
  store i32 %2020, i32* %2021, align 4
  %2022 = getelementptr inbounds %"struct.tflite::ComparisonParams", %"struct.tflite::ComparisonParams"* %7, i64 0, i32 4
  store i32 %2002, i32* %2022, align 4
  %2023 = load i32, i32* %5, align 4
  %2024 = getelementptr inbounds %"struct.tflite::ComparisonParams", %"struct.tflite::ComparisonParams"* %7, i64 0, i32 5
  store i32 %2023, i32* %2024, align 4
  %2025 = load i32, i32* %6, align 4
  %2026 = getelementptr inbounds %"struct.tflite::ComparisonParams", %"struct.tflite::ComparisonParams"* %7, i64 0, i32 6
  store i32 %2025, i32* %2026, align 4
  br i1 %87, label %2159, label %2027

2027:                                             ; preds = %1996
  %2028 = bitcast %"class.tflite::RuntimeShape"* %8 to i8*
  call void @llvm.lifetime.start.p0i8(i64 32, i8* nonnull %2028) #8
  %2029 = icmp eq %struct.TfLiteTensor* %64, null
  br i1 %2029, label %2030, label %2032

2030:                                             ; preds = %2027
  %2031 = getelementptr inbounds %"class.tflite::RuntimeShape", %"class.tflite::RuntimeShape"* %8, i64 0, i32 0
  store i32 0, i32* %2031, align 8, !alias.scope !276
  br label %2060

2032:                                             ; preds = %2027
  %2033 = getelementptr inbounds %struct.TfLiteTensor, %struct.TfLiteTensor* %64, i64 0, i32 2
  %2034 = load %struct.TfLiteIntArray*, %struct.TfLiteIntArray** %2033, align 8, !noalias !276
  %2035 = getelementptr inbounds %struct.TfLiteIntArray, %struct.TfLiteIntArray* %2034, i64 0, i32 0
  %2036 = load i32, i32* %2035, align 4, !noalias !276
  %2037 = getelementptr inbounds %struct.TfLiteIntArray, %struct.TfLiteIntArray* %2034, i64 0, i32 1, i64 0
  %2038 = getelementptr inbounds %"class.tflite::RuntimeShape", %"class.tflite::RuntimeShape"* %8, i64 0, i32 0
  store i32 %2036, i32* %2038, align 8, !alias.scope !276
  %2039 = icmp sgt i32 %2036, 5
  br i1 %2039, label %2040, label %2047

2040:                                             ; preds = %2032
  %2041 = sext i32 %2036 to i64
  %2042 = shl nsw i64 %2041, 2
  %2043 = call i8* @_Znam(i64 %2042) #9, !noalias !276
  %2044 = getelementptr inbounds %"class.tflite::RuntimeShape", %"class.tflite::RuntimeShape"* %8, i64 0, i32 1, i32 0
  %2045 = bitcast i32** %2044 to i8**
  store i8* %2043, i8** %2045, align 8, !alias.scope !276
  %2046 = bitcast i8* %2043 to i32*
  br label %2052

2047:                                             ; preds = %2032
  %2048 = getelementptr inbounds %"class.tflite::RuntimeShape", %"class.tflite::RuntimeShape"* %8, i64 0, i32 1
  %2049 = bitcast %union.anon* %2048 to i32*
  %2050 = sext i32 %2036 to i64
  %2051 = shl nsw i64 %2050, 2
  br label %2052

2052:                                             ; preds = %2047, %2040
  %2053 = phi i64 [ %2042, %2040 ], [ %2051, %2047 ]
  %2054 = phi i32* [ %2046, %2040 ], [ %2049, %2047 ]
  %2055 = bitcast i32* %2054 to i8*
  %2056 = bitcast i32* %2037 to i8*
  call void @llvm.memcpy.p0i8.p0i8.i64(i8* align 4 %2055, i8* align 4 %2056, i64 %2053, i1 false) #8
  %2057 = getelementptr inbounds %struct.TfLiteTensor, %struct.TfLiteTensor* %64, i64 0, i32 1
  %2058 = bitcast %union.TfLitePtrUnion* %2057 to i8**
  %2059 = load i8*, i8** %2058, align 8
  br label %2060

2060:                                             ; preds = %2052, %2030
  %2061 = phi i8* [ %2059, %2052 ], [ null, %2030 ]
  %2062 = bitcast %"class.tflite::RuntimeShape"* %9 to i8*
  call void @llvm.lifetime.start.p0i8(i64 32, i8* nonnull %2062) #8
  %2063 = icmp eq %struct.TfLiteTensor* %74, null
  br i1 %2063, label %2064, label %2066

2064:                                             ; preds = %2060
  %2065 = getelementptr inbounds %"class.tflite::RuntimeShape", %"class.tflite::RuntimeShape"* %9, i64 0, i32 0
  store i32 0, i32* %2065, align 8, !alias.scope !279
  br label %2094

2066:                                             ; preds = %2060
  %2067 = getelementptr inbounds %struct.TfLiteTensor, %struct.TfLiteTensor* %74, i64 0, i32 2
  %2068 = load %struct.TfLiteIntArray*, %struct.TfLiteIntArray** %2067, align 8, !noalias !279
  %2069 = getelementptr inbounds %struct.TfLiteIntArray, %struct.TfLiteIntArray* %2068, i64 0, i32 0
  %2070 = load i32, i32* %2069, align 4, !noalias !279
  %2071 = getelementptr inbounds %struct.TfLiteIntArray, %struct.TfLiteIntArray* %2068, i64 0, i32 1, i64 0
  %2072 = getelementptr inbounds %"class.tflite::RuntimeShape", %"class.tflite::RuntimeShape"* %9, i64 0, i32 0
  store i32 %2070, i32* %2072, align 8, !alias.scope !279
  %2073 = icmp sgt i32 %2070, 5
  br i1 %2073, label %2074, label %2081

2074:                                             ; preds = %2066
  %2075 = sext i32 %2070 to i64
  %2076 = shl nsw i64 %2075, 2
  %2077 = call i8* @_Znam(i64 %2076) #9, !noalias !279
  %2078 = getelementptr inbounds %"class.tflite::RuntimeShape", %"class.tflite::RuntimeShape"* %9, i64 0, i32 1, i32 0
  %2079 = bitcast i32** %2078 to i8**
  store i8* %2077, i8** %2079, align 8, !alias.scope !279
  %2080 = bitcast i8* %2077 to i32*
  br label %2086

2081:                                             ; preds = %2066
  %2082 = getelementptr inbounds %"class.tflite::RuntimeShape", %"class.tflite::RuntimeShape"* %9, i64 0, i32 1
  %2083 = bitcast %union.anon* %2082 to i32*
  %2084 = sext i32 %2070 to i64
  %2085 = shl nsw i64 %2084, 2
  br label %2086

2086:                                             ; preds = %2081, %2074
  %2087 = phi i64 [ %2076, %2074 ], [ %2085, %2081 ]
  %2088 = phi i32* [ %2080, %2074 ], [ %2083, %2081 ]
  %2089 = bitcast i32* %2088 to i8*
  %2090 = bitcast i32* %2071 to i8*
  call void @llvm.memcpy.p0i8.p0i8.i64(i8* align 4 %2089, i8* align 4 %2090, i64 %2087, i1 false) #8
  %2091 = getelementptr inbounds %struct.TfLiteTensor, %struct.TfLiteTensor* %74, i64 0, i32 1
  %2092 = bitcast %union.TfLitePtrUnion* %2091 to i8**
  %2093 = load i8*, i8** %2092, align 8
  br label %2094

2094:                                             ; preds = %2086, %2064
  %2095 = phi i8* [ %2093, %2086 ], [ null, %2064 ]
  %2096 = bitcast %"class.tflite::RuntimeShape"* %10 to i8*
  call void @llvm.lifetime.start.p0i8(i64 32, i8* nonnull %2096) #8
  %2097 = icmp eq %struct.TfLiteTensor* %86, null
  br i1 %2097, label %2098, label %2100

2098:                                             ; preds = %2094
  %2099 = getelementptr inbounds %"class.tflite::RuntimeShape", %"class.tflite::RuntimeShape"* %10, i64 0, i32 0
  store i32 0, i32* %2099, align 8, !alias.scope !282
  br label %2128

2100:                                             ; preds = %2094
  %2101 = getelementptr inbounds %struct.TfLiteTensor, %struct.TfLiteTensor* %86, i64 0, i32 2
  %2102 = load %struct.TfLiteIntArray*, %struct.TfLiteIntArray** %2101, align 8, !noalias !282
  %2103 = getelementptr inbounds %struct.TfLiteIntArray, %struct.TfLiteIntArray* %2102, i64 0, i32 0
  %2104 = load i32, i32* %2103, align 4, !noalias !282
  %2105 = getelementptr inbounds %struct.TfLiteIntArray, %struct.TfLiteIntArray* %2102, i64 0, i32 1, i64 0
  %2106 = getelementptr inbounds %"class.tflite::RuntimeShape", %"class.tflite::RuntimeShape"* %10, i64 0, i32 0
  store i32 %2104, i32* %2106, align 8, !alias.scope !282
  %2107 = icmp sgt i32 %2104, 5
  br i1 %2107, label %2108, label %2115

2108:                                             ; preds = %2100
  %2109 = sext i32 %2104 to i64
  %2110 = shl nsw i64 %2109, 2
  %2111 = call i8* @_Znam(i64 %2110) #9, !noalias !282
  %2112 = getelementptr inbounds %"class.tflite::RuntimeShape", %"class.tflite::RuntimeShape"* %10, i64 0, i32 1, i32 0
  %2113 = bitcast i32** %2112 to i8**
  store i8* %2111, i8** %2113, align 8, !alias.scope !282
  %2114 = bitcast i8* %2111 to i32*
  br label %2120

2115:                                             ; preds = %2100
  %2116 = getelementptr inbounds %"class.tflite::RuntimeShape", %"class.tflite::RuntimeShape"* %10, i64 0, i32 1
  %2117 = bitcast %union.anon* %2116 to i32*
  %2118 = sext i32 %2104 to i64
  %2119 = shl nsw i64 %2118, 2
  br label %2120

2120:                                             ; preds = %2115, %2108
  %2121 = phi i64 [ %2110, %2108 ], [ %2119, %2115 ]
  %2122 = phi i32* [ %2114, %2108 ], [ %2117, %2115 ]
  %2123 = bitcast i32* %2122 to i8*
  %2124 = bitcast i32* %2105 to i8*
  call void @llvm.memcpy.p0i8.p0i8.i64(i8* align 4 %2123, i8* align 4 %2124, i64 %2121, i1 false) #8
  %2125 = getelementptr inbounds %struct.TfLiteTensor, %struct.TfLiteTensor* %86, i64 0, i32 1
  %2126 = bitcast %union.TfLitePtrUnion* %2125 to i8**
  %2127 = load i8*, i8** %2126, align 8
  br label %2128

2128:                                             ; preds = %2120, %2098
  %2129 = phi i8* [ %2127, %2120 ], [ null, %2098 ]
  call void @_ZN6tflite13reference_ops36BroadcastComparison4DSlowWithScalingIhXadL_ZNS0_10NotEqualFnIiEEbT_S3_EEEEvRKNS_16ComparisonParamsERKNS_12RuntimeShapeEPKS3_S9_SB_S9_Pb(%"struct.tflite::ComparisonParams"* nonnull dereferenceable(32) %7, %"class.tflite::RuntimeShape"* nonnull dereferenceable(32) %8, i8* %2061, %"class.tflite::RuntimeShape"* nonnull dereferenceable(32) %9, i8* %2095, %"class.tflite::RuntimeShape"* nonnull dereferenceable(32) %10, i8* %2129) #8
  %2130 = getelementptr inbounds %"class.tflite::RuntimeShape", %"class.tflite::RuntimeShape"* %10, i64 0, i32 0
  %2131 = load i32, i32* %2130, align 8
  %2132 = icmp sgt i32 %2131, 5
  br i1 %2132, label %2133, label %2139

2133:                                             ; preds = %2128
  %2134 = getelementptr inbounds %"class.tflite::RuntimeShape", %"class.tflite::RuntimeShape"* %10, i64 0, i32 1, i32 0
  %2135 = load i32*, i32** %2134, align 8
  %2136 = icmp eq i32* %2135, null
  br i1 %2136, label %2139, label %2137

2137:                                             ; preds = %2133
  %2138 = bitcast i32* %2135 to i8*
  call void @_ZdaPv(i8* %2138) #9
  br label %2139

2139:                                             ; preds = %2137, %2133, %2128
  call void @llvm.lifetime.end.p0i8(i64 32, i8* nonnull %2096) #8
  %2140 = getelementptr inbounds %"class.tflite::RuntimeShape", %"class.tflite::RuntimeShape"* %9, i64 0, i32 0
  %2141 = load i32, i32* %2140, align 8
  %2142 = icmp sgt i32 %2141, 5
  br i1 %2142, label %2143, label %2149

2143:                                             ; preds = %2139
  %2144 = getelementptr inbounds %"class.tflite::RuntimeShape", %"class.tflite::RuntimeShape"* %9, i64 0, i32 1, i32 0
  %2145 = load i32*, i32** %2144, align 8
  %2146 = icmp eq i32* %2145, null
  br i1 %2146, label %2149, label %2147

2147:                                             ; preds = %2143
  %2148 = bitcast i32* %2145 to i8*
  call void @_ZdaPv(i8* %2148) #9
  br label %2149

2149:                                             ; preds = %2147, %2143, %2139
  call void @llvm.lifetime.end.p0i8(i64 32, i8* nonnull %2062) #8
  %2150 = getelementptr inbounds %"class.tflite::RuntimeShape", %"class.tflite::RuntimeShape"* %8, i64 0, i32 0
  %2151 = load i32, i32* %2150, align 8
  %2152 = icmp sgt i32 %2151, 5
  br i1 %2152, label %2153, label %2477

2153:                                             ; preds = %2149
  %2154 = getelementptr inbounds %"class.tflite::RuntimeShape", %"class.tflite::RuntimeShape"* %8, i64 0, i32 1, i32 0
  %2155 = load i32*, i32** %2154, align 8
  %2156 = icmp eq i32* %2155, null
  br i1 %2156, label %2477, label %2157

2157:                                             ; preds = %2153
  %2158 = bitcast i32* %2155 to i8*
  call void @_ZdaPv(i8* %2158) #9
  br label %2477

2159:                                             ; preds = %1996
  %2160 = bitcast %"class.tflite::RuntimeShape"* %11 to i8*
  call void @llvm.lifetime.start.p0i8(i64 32, i8* nonnull %2160) #8
  %2161 = icmp eq %struct.TfLiteTensor* %64, null
  br i1 %2161, label %2162, label %2164

2162:                                             ; preds = %2159
  %2163 = getelementptr inbounds %"class.tflite::RuntimeShape", %"class.tflite::RuntimeShape"* %11, i64 0, i32 0
  store i32 0, i32* %2163, align 8, !alias.scope !285
  br label %2192

2164:                                             ; preds = %2159
  %2165 = getelementptr inbounds %struct.TfLiteTensor, %struct.TfLiteTensor* %64, i64 0, i32 2
  %2166 = load %struct.TfLiteIntArray*, %struct.TfLiteIntArray** %2165, align 8, !noalias !285
  %2167 = getelementptr inbounds %struct.TfLiteIntArray, %struct.TfLiteIntArray* %2166, i64 0, i32 0
  %2168 = load i32, i32* %2167, align 4, !noalias !285
  %2169 = getelementptr inbounds %struct.TfLiteIntArray, %struct.TfLiteIntArray* %2166, i64 0, i32 1, i64 0
  %2170 = getelementptr inbounds %"class.tflite::RuntimeShape", %"class.tflite::RuntimeShape"* %11, i64 0, i32 0
  store i32 %2168, i32* %2170, align 8, !alias.scope !285
  %2171 = icmp sgt i32 %2168, 5
  br i1 %2171, label %2172, label %2179

2172:                                             ; preds = %2164
  %2173 = sext i32 %2168 to i64
  %2174 = shl nsw i64 %2173, 2
  %2175 = call i8* @_Znam(i64 %2174) #9, !noalias !285
  %2176 = getelementptr inbounds %"class.tflite::RuntimeShape", %"class.tflite::RuntimeShape"* %11, i64 0, i32 1, i32 0
  %2177 = bitcast i32** %2176 to i8**
  store i8* %2175, i8** %2177, align 8, !alias.scope !285
  %2178 = bitcast i8* %2175 to i32*
  br label %2184

2179:                                             ; preds = %2164
  %2180 = getelementptr inbounds %"class.tflite::RuntimeShape", %"class.tflite::RuntimeShape"* %11, i64 0, i32 1
  %2181 = bitcast %union.anon* %2180 to i32*
  %2182 = sext i32 %2168 to i64
  %2183 = shl nsw i64 %2182, 2
  br label %2184

2184:                                             ; preds = %2179, %2172
  %2185 = phi i64 [ %2174, %2172 ], [ %2183, %2179 ]
  %2186 = phi i32* [ %2178, %2172 ], [ %2181, %2179 ]
  %2187 = bitcast i32* %2186 to i8*
  %2188 = bitcast i32* %2169 to i8*
  call void @llvm.memcpy.p0i8.p0i8.i64(i8* align 4 %2187, i8* align 4 %2188, i64 %2185, i1 false) #8
  %2189 = getelementptr inbounds %struct.TfLiteTensor, %struct.TfLiteTensor* %64, i64 0, i32 1
  %2190 = bitcast %union.TfLitePtrUnion* %2189 to i8**
  %2191 = load i8*, i8** %2190, align 8
  br label %2192

2192:                                             ; preds = %2184, %2162
  %2193 = phi i32 [ %2168, %2184 ], [ 0, %2162 ]
  %2194 = phi i8* [ %2191, %2184 ], [ null, %2162 ]
  %2195 = bitcast %"class.tflite::RuntimeShape"* %12 to i8*
  call void @llvm.lifetime.start.p0i8(i64 32, i8* nonnull %2195) #8
  %2196 = icmp eq %struct.TfLiteTensor* %74, null
  br i1 %2196, label %2197, label %2199

2197:                                             ; preds = %2192
  %2198 = getelementptr inbounds %"class.tflite::RuntimeShape", %"class.tflite::RuntimeShape"* %12, i64 0, i32 0
  store i32 0, i32* %2198, align 8, !alias.scope !288
  br label %2227

2199:                                             ; preds = %2192
  %2200 = getelementptr inbounds %struct.TfLiteTensor, %struct.TfLiteTensor* %74, i64 0, i32 2
  %2201 = load %struct.TfLiteIntArray*, %struct.TfLiteIntArray** %2200, align 8, !noalias !288
  %2202 = getelementptr inbounds %struct.TfLiteIntArray, %struct.TfLiteIntArray* %2201, i64 0, i32 0
  %2203 = load i32, i32* %2202, align 4, !noalias !288
  %2204 = getelementptr inbounds %struct.TfLiteIntArray, %struct.TfLiteIntArray* %2201, i64 0, i32 1, i64 0
  %2205 = getelementptr inbounds %"class.tflite::RuntimeShape", %"class.tflite::RuntimeShape"* %12, i64 0, i32 0
  store i32 %2203, i32* %2205, align 8, !alias.scope !288
  %2206 = icmp sgt i32 %2203, 5
  br i1 %2206, label %2207, label %2214

2207:                                             ; preds = %2199
  %2208 = sext i32 %2203 to i64
  %2209 = shl nsw i64 %2208, 2
  %2210 = call i8* @_Znam(i64 %2209) #9, !noalias !288
  %2211 = getelementptr inbounds %"class.tflite::RuntimeShape", %"class.tflite::RuntimeShape"* %12, i64 0, i32 1, i32 0
  %2212 = bitcast i32** %2211 to i8**
  store i8* %2210, i8** %2212, align 8, !alias.scope !288
  %2213 = bitcast i8* %2210 to i32*
  br label %2219

2214:                                             ; preds = %2199
  %2215 = getelementptr inbounds %"class.tflite::RuntimeShape", %"class.tflite::RuntimeShape"* %12, i64 0, i32 1
  %2216 = bitcast %union.anon* %2215 to i32*
  %2217 = sext i32 %2203 to i64
  %2218 = shl nsw i64 %2217, 2
  br label %2219

2219:                                             ; preds = %2214, %2207
  %2220 = phi i64 [ %2209, %2207 ], [ %2218, %2214 ]
  %2221 = phi i32* [ %2213, %2207 ], [ %2216, %2214 ]
  %2222 = bitcast i32* %2221 to i8*
  %2223 = bitcast i32* %2204 to i8*
  call void @llvm.memcpy.p0i8.p0i8.i64(i8* align 4 %2222, i8* align 4 %2223, i64 %2220, i1 false) #8
  %2224 = getelementptr inbounds %struct.TfLiteTensor, %struct.TfLiteTensor* %74, i64 0, i32 1
  %2225 = bitcast %union.TfLitePtrUnion* %2224 to i8**
  %2226 = load i8*, i8** %2225, align 8
  br label %2227

2227:                                             ; preds = %2219, %2197
  %2228 = phi i32 [ %2203, %2219 ], [ 0, %2197 ]
  %2229 = phi i8* [ %2226, %2219 ], [ null, %2197 ]
  %2230 = bitcast %"class.tflite::RuntimeShape"* %13 to i8*
  call void @llvm.lifetime.start.p0i8(i64 32, i8* nonnull %2230) #8
  %2231 = icmp eq %struct.TfLiteTensor* %86, null
  br i1 %2231, label %2232, label %2234

2232:                                             ; preds = %2227
  %2233 = getelementptr inbounds %"class.tflite::RuntimeShape", %"class.tflite::RuntimeShape"* %13, i64 0, i32 0
  store i32 0, i32* %2233, align 8, !alias.scope !291
  br label %2262

2234:                                             ; preds = %2227
  %2235 = getelementptr inbounds %struct.TfLiteTensor, %struct.TfLiteTensor* %86, i64 0, i32 2
  %2236 = load %struct.TfLiteIntArray*, %struct.TfLiteIntArray** %2235, align 8, !noalias !291
  %2237 = getelementptr inbounds %struct.TfLiteIntArray, %struct.TfLiteIntArray* %2236, i64 0, i32 0
  %2238 = load i32, i32* %2237, align 4, !noalias !291
  %2239 = getelementptr inbounds %struct.TfLiteIntArray, %struct.TfLiteIntArray* %2236, i64 0, i32 1, i64 0
  %2240 = getelementptr inbounds %"class.tflite::RuntimeShape", %"class.tflite::RuntimeShape"* %13, i64 0, i32 0
  store i32 %2238, i32* %2240, align 8, !alias.scope !291
  %2241 = icmp sgt i32 %2238, 5
  br i1 %2241, label %2242, label %2249

2242:                                             ; preds = %2234
  %2243 = sext i32 %2238 to i64
  %2244 = shl nsw i64 %2243, 2
  %2245 = call i8* @_Znam(i64 %2244) #9, !noalias !291
  %2246 = getelementptr inbounds %"class.tflite::RuntimeShape", %"class.tflite::RuntimeShape"* %13, i64 0, i32 1, i32 0
  %2247 = bitcast i32** %2246 to i8**
  store i8* %2245, i8** %2247, align 8, !alias.scope !291
  %2248 = bitcast i8* %2245 to i32*
  br label %2254

2249:                                             ; preds = %2234
  %2250 = getelementptr inbounds %"class.tflite::RuntimeShape", %"class.tflite::RuntimeShape"* %13, i64 0, i32 1
  %2251 = bitcast %union.anon* %2250 to i32*
  %2252 = sext i32 %2238 to i64
  %2253 = shl nsw i64 %2252, 2
  br label %2254

2254:                                             ; preds = %2249, %2242
  %2255 = phi i64 [ %2244, %2242 ], [ %2253, %2249 ]
  %2256 = phi i32* [ %2248, %2242 ], [ %2251, %2249 ]
  %2257 = bitcast i32* %2256 to i8*
  %2258 = bitcast i32* %2239 to i8*
  call void @llvm.memcpy.p0i8.p0i8.i64(i8* align 4 %2257, i8* align 4 %2258, i64 %2255, i1 false) #8
  %2259 = getelementptr inbounds %struct.TfLiteTensor, %struct.TfLiteTensor* %86, i64 0, i32 1
  %2260 = bitcast %union.TfLitePtrUnion* %2259 to i8**
  %2261 = load i8*, i8** %2260, align 8
  br label %2262

2262:                                             ; preds = %2254, %2232
  %2263 = phi i32 [ %2238, %2254 ], [ 0, %2232 ]
  %2264 = phi i8* [ %2261, %2254 ], [ null, %2232 ]
  %2265 = getelementptr inbounds %"class.tflite::RuntimeShape", %"class.tflite::RuntimeShape"* %11, i64 0, i32 1
  %2266 = icmp sgt i32 %2193, 5
  br i1 %2266, label %2267, label %2270

2267:                                             ; preds = %2262
  %2268 = getelementptr inbounds %union.anon, %union.anon* %2265, i64 0, i32 0
  %2269 = load i32*, i32** %2268, align 8
  br label %2273

2270:                                             ; preds = %2262
  %2271 = bitcast %union.anon* %2265 to i32*
  %2272 = icmp sgt i32 %2193, 0
  br i1 %2272, label %2273, label %2377

2273:                                             ; preds = %2270, %2267
  %2274 = phi i32* [ %2269, %2267 ], [ %2271, %2270 ]
  %2275 = zext i32 %2193 to i64
  %2276 = icmp ult i32 %2193, 8
  br i1 %2276, label %2362, label %2277

2277:                                             ; preds = %2273
  %2278 = and i64 %2275, 4294967288
  %2279 = add nsw i64 %2278, -8
  %2280 = lshr exact i64 %2279, 3
  %2281 = add nuw nsw i64 %2280, 1
  %2282 = and i64 %2281, 3
  %2283 = icmp ult i64 %2279, 24
  br i1 %2283, label %2329, label %2284

2284:                                             ; preds = %2277
  %2285 = sub nsw i64 %2281, %2282
  br label %2286

2286:                                             ; preds = %2286, %2284
  %2287 = phi i64 [ 0, %2284 ], [ %2326, %2286 ]
  %2288 = phi <4 x i32> [ <i32 1, i32 1, i32 1, i32 1>, %2284 ], [ %2324, %2286 ]
  %2289 = phi <4 x i32> [ <i32 1, i32 1, i32 1, i32 1>, %2284 ], [ %2325, %2286 ]
  %2290 = phi i64 [ %2285, %2284 ], [ %2327, %2286 ]
  %2291 = getelementptr inbounds i32, i32* %2274, i64 %2287
  %2292 = bitcast i32* %2291 to <4 x i32>*
  %2293 = load <4 x i32>, <4 x i32>* %2292, align 4
  %2294 = getelementptr inbounds i32, i32* %2291, i64 4
  %2295 = bitcast i32* %2294 to <4 x i32>*
  %2296 = load <4 x i32>, <4 x i32>* %2295, align 4
  %2297 = mul nsw <4 x i32> %2293, %2288
  %2298 = mul nsw <4 x i32> %2296, %2289
  %2299 = or i64 %2287, 8
  %2300 = getelementptr inbounds i32, i32* %2274, i64 %2299
  %2301 = bitcast i32* %2300 to <4 x i32>*
  %2302 = load <4 x i32>, <4 x i32>* %2301, align 4
  %2303 = getelementptr inbounds i32, i32* %2300, i64 4
  %2304 = bitcast i32* %2303 to <4 x i32>*
  %2305 = load <4 x i32>, <4 x i32>* %2304, align 4
  %2306 = mul nsw <4 x i32> %2302, %2297
  %2307 = mul nsw <4 x i32> %2305, %2298
  %2308 = or i64 %2287, 16
  %2309 = getelementptr inbounds i32, i32* %2274, i64 %2308
  %2310 = bitcast i32* %2309 to <4 x i32>*
  %2311 = load <4 x i32>, <4 x i32>* %2310, align 4
  %2312 = getelementptr inbounds i32, i32* %2309, i64 4
  %2313 = bitcast i32* %2312 to <4 x i32>*
  %2314 = load <4 x i32>, <4 x i32>* %2313, align 4
  %2315 = mul nsw <4 x i32> %2311, %2306
  %2316 = mul nsw <4 x i32> %2314, %2307
  %2317 = or i64 %2287, 24
  %2318 = getelementptr inbounds i32, i32* %2274, i64 %2317
  %2319 = bitcast i32* %2318 to <4 x i32>*
  %2320 = load <4 x i32>, <4 x i32>* %2319, align 4
  %2321 = getelementptr inbounds i32, i32* %2318, i64 4
  %2322 = bitcast i32* %2321 to <4 x i32>*
  %2323 = load <4 x i32>, <4 x i32>* %2322, align 4
  %2324 = mul nsw <4 x i32> %2320, %2315
  %2325 = mul nsw <4 x i32> %2323, %2316
  %2326 = add i64 %2287, 32
  %2327 = add i64 %2290, -4
  %2328 = icmp eq i64 %2327, 0
  br i1 %2328, label %2329, label %2286, !llvm.loop !294

2329:                                             ; preds = %2286, %2277
  %2330 = phi <4 x i32> [ undef, %2277 ], [ %2324, %2286 ]
  %2331 = phi <4 x i32> [ undef, %2277 ], [ %2325, %2286 ]
  %2332 = phi i64 [ 0, %2277 ], [ %2326, %2286 ]
  %2333 = phi <4 x i32> [ <i32 1, i32 1, i32 1, i32 1>, %2277 ], [ %2324, %2286 ]
  %2334 = phi <4 x i32> [ <i32 1, i32 1, i32 1, i32 1>, %2277 ], [ %2325, %2286 ]
  %2335 = icmp eq i64 %2282, 0
  br i1 %2335, label %2352, label %2336

2336:                                             ; preds = %2329, %2336
  %2337 = phi i64 [ %2349, %2336 ], [ %2332, %2329 ]
  %2338 = phi <4 x i32> [ %2347, %2336 ], [ %2333, %2329 ]
  %2339 = phi <4 x i32> [ %2348, %2336 ], [ %2334, %2329 ]
  %2340 = phi i64 [ %2350, %2336 ], [ %2282, %2329 ]
  %2341 = getelementptr inbounds i32, i32* %2274, i64 %2337
  %2342 = bitcast i32* %2341 to <4 x i32>*
  %2343 = load <4 x i32>, <4 x i32>* %2342, align 4
  %2344 = getelementptr inbounds i32, i32* %2341, i64 4
  %2345 = bitcast i32* %2344 to <4 x i32>*
  %2346 = load <4 x i32>, <4 x i32>* %2345, align 4
  %2347 = mul nsw <4 x i32> %2343, %2338
  %2348 = mul nsw <4 x i32> %2346, %2339
  %2349 = add i64 %2337, 8
  %2350 = add i64 %2340, -1
  %2351 = icmp eq i64 %2350, 0
  br i1 %2351, label %2352, label %2336, !llvm.loop !295

2352:                                             ; preds = %2336, %2329
  %2353 = phi <4 x i32> [ %2330, %2329 ], [ %2347, %2336 ]
  %2354 = phi <4 x i32> [ %2331, %2329 ], [ %2348, %2336 ]
  %2355 = mul <4 x i32> %2354, %2353
  %2356 = shufflevector <4 x i32> %2355, <4 x i32> undef, <4 x i32> <i32 2, i32 3, i32 undef, i32 undef>
  %2357 = mul <4 x i32> %2355, %2356
  %2358 = shufflevector <4 x i32> %2357, <4 x i32> undef, <4 x i32> <i32 1, i32 undef, i32 undef, i32 undef>
  %2359 = mul <4 x i32> %2357, %2358
  %2360 = extractelement <4 x i32> %2359, i32 0
  %2361 = icmp eq i64 %2278, %2275
  br i1 %2361, label %2373, label %2362

2362:                                             ; preds = %2352, %2273
  %2363 = phi i64 [ 0, %2273 ], [ %2278, %2352 ]
  %2364 = phi i32 [ 1, %2273 ], [ %2360, %2352 ]
  br label %2365

2365:                                             ; preds = %2362, %2365
  %2366 = phi i64 [ %2371, %2365 ], [ %2363, %2362 ]
  %2367 = phi i32 [ %2370, %2365 ], [ %2364, %2362 ]
  %2368 = getelementptr inbounds i32, i32* %2274, i64 %2366
  %2369 = load i32, i32* %2368, align 4
  %2370 = mul nsw i32 %2369, %2367
  %2371 = add nuw nsw i64 %2366, 1
  %2372 = icmp eq i64 %2371, %2275
  br i1 %2372, label %2373, label %2365, !llvm.loop !296

2373:                                             ; preds = %2365, %2352
  %2374 = phi i32 [ %2360, %2352 ], [ %2370, %2365 ]
  %2375 = sext i32 %2374 to i64
  %2376 = icmp sgt i32 %2374, 0
  br i1 %2376, label %2377, label %2454

2377:                                             ; preds = %2373, %2270
  %2378 = phi i64 [ %2375, %2373 ], [ 1, %2270 ]
  %2379 = sext i32 %2018 to i64
  %2380 = sub nsw i32 0, %2020
  %2381 = zext i32 %2380 to i64
  %2382 = shl nsw i64 -1, %2381
  %2383 = trunc i64 %2382 to i32
  %2384 = xor i32 %2383, -1
  %2385 = ashr i32 %2384, 1
  %2386 = sext i32 %2023 to i64
  %2387 = sub nsw i32 0, %2025
  %2388 = zext i32 %2387 to i64
  %2389 = shl nsw i64 -1, %2388
  %2390 = trunc i64 %2389 to i32
  %2391 = xor i32 %2390, -1
  %2392 = ashr i32 %2391, 1
  %2393 = icmp eq i32 %2018, -2147483648
  %2394 = icmp eq i32 %2023, -2147483648
  br label %2395

2395:                                             ; preds = %2440, %2377
  %2396 = phi i64 [ 0, %2377 ], [ %2452, %2440 ]
  %2397 = getelementptr inbounds i8, i8* %2194, i64 %2396
  %2398 = load i8, i8* %2397, align 1
  %2399 = zext i8 %2398 to i32
  %2400 = sub i32 %2399, %1998
  %2401 = getelementptr inbounds i8, i8* %2229, i64 %2396
  %2402 = load i8, i8* %2401, align 1
  %2403 = zext i8 %2402 to i32
  %2404 = sub i32 %2403, %2001
  %2405 = shl i32 %2400, 8
  %2406 = shl i32 %2404, 8
  %2407 = icmp eq i32 %2405, %2018
  br i1 %2407, label %2410, label %2408

2408:                                             ; preds = %2395
  %2409 = sext i32 %2405 to i64
  br label %2411

2410:                                             ; preds = %2395
  br i1 %2393, label %2419, label %2411

2411:                                             ; preds = %2410, %2408
  %2412 = phi i64 [ %2409, %2408 ], [ %2379, %2410 ]
  %2413 = mul nsw i64 %2412, %2379
  %2414 = icmp sgt i64 %2413, -1
  %2415 = select i1 %2414, i64 1073741824, i64 -1073741823
  %2416 = add nsw i64 %2415, %2413
  %2417 = sdiv i64 %2416, 2147483648
  %2418 = trunc i64 %2417 to i32
  br label %2419

2419:                                             ; preds = %2411, %2410
  %2420 = phi i32 [ %2418, %2411 ], [ 2147483647, %2410 ]
  %2421 = and i32 %2420, %2384
  %2422 = lshr i32 %2420, 31
  %2423 = add nsw i32 %2422, %2385
  %2424 = ashr i32 %2420, %2380
  %2425 = icmp sgt i32 %2421, %2423
  %2426 = zext i1 %2425 to i32
  %2427 = add nsw i32 %2424, %2426
  %2428 = icmp eq i32 %2406, %2023
  br i1 %2428, label %2431, label %2429

2429:                                             ; preds = %2419
  %2430 = sext i32 %2406 to i64
  br label %2432

2431:                                             ; preds = %2419
  br i1 %2394, label %2440, label %2432

2432:                                             ; preds = %2431, %2429
  %2433 = phi i64 [ %2430, %2429 ], [ %2386, %2431 ]
  %2434 = mul nsw i64 %2433, %2386
  %2435 = icmp sgt i64 %2434, -1
  %2436 = select i1 %2435, i64 1073741824, i64 -1073741823
  %2437 = add nsw i64 %2436, %2434
  %2438 = sdiv i64 %2437, 2147483648
  %2439 = trunc i64 %2438 to i32
  br label %2440

2440:                                             ; preds = %2432, %2431
  %2441 = phi i32 [ %2439, %2432 ], [ 2147483647, %2431 ]
  %2442 = and i32 %2441, %2391
  %2443 = lshr i32 %2441, 31
  %2444 = add nsw i32 %2443, %2392
  %2445 = ashr i32 %2441, %2387
  %2446 = icmp sgt i32 %2442, %2444
  %2447 = zext i1 %2446 to i32
  %2448 = add nsw i32 %2445, %2447
  %2449 = icmp ne i32 %2427, %2448
  %2450 = getelementptr inbounds i8, i8* %2264, i64 %2396
  %2451 = zext i1 %2449 to i8
  store i8 %2451, i8* %2450, align 1
  %2452 = add nuw nsw i64 %2396, 1
  %2453 = icmp eq i64 %2452, %2378
  br i1 %2453, label %2454, label %2395

2454:                                             ; preds = %2440, %2373
  %2455 = icmp sgt i32 %2263, 5
  br i1 %2455, label %2456, label %2462

2456:                                             ; preds = %2454
  %2457 = getelementptr inbounds %"class.tflite::RuntimeShape", %"class.tflite::RuntimeShape"* %13, i64 0, i32 1, i32 0
  %2458 = load i32*, i32** %2457, align 8
  %2459 = icmp eq i32* %2458, null
  br i1 %2459, label %2462, label %2460

2460:                                             ; preds = %2456
  %2461 = bitcast i32* %2458 to i8*
  call void @_ZdaPv(i8* %2461) #9
  br label %2462

2462:                                             ; preds = %2460, %2456, %2454
  call void @llvm.lifetime.end.p0i8(i64 32, i8* nonnull %2230) #8
  %2463 = icmp sgt i32 %2228, 5
  br i1 %2463, label %2464, label %2470

2464:                                             ; preds = %2462
  %2465 = getelementptr inbounds %"class.tflite::RuntimeShape", %"class.tflite::RuntimeShape"* %12, i64 0, i32 1, i32 0
  %2466 = load i32*, i32** %2465, align 8
  %2467 = icmp eq i32* %2466, null
  br i1 %2467, label %2470, label %2468

2468:                                             ; preds = %2464
  %2469 = bitcast i32* %2466 to i8*
  call void @_ZdaPv(i8* %2469) #9
  br label %2470

2470:                                             ; preds = %2468, %2464, %2462
  call void @llvm.lifetime.end.p0i8(i64 32, i8* nonnull %2195) #8
  br i1 %2266, label %2471, label %2477

2471:                                             ; preds = %2470
  %2472 = getelementptr inbounds %"class.tflite::RuntimeShape", %"class.tflite::RuntimeShape"* %11, i64 0, i32 1, i32 0
  %2473 = load i32*, i32** %2472, align 8
  %2474 = icmp eq i32* %2473, null
  br i1 %2474, label %2477, label %2475

2475:                                             ; preds = %2471
  %2476 = bitcast i32* %2473 to i8*
  call void @_ZdaPv(i8* %2476) #9
  br label %2477

2477:                                             ; preds = %2470, %2471, %2475, %2149, %2153, %2157
  %2478 = phi i8* [ %2028, %2157 ], [ %2028, %2153 ], [ %2028, %2149 ], [ %2160, %2475 ], [ %2160, %2471 ], [ %2160, %2470 ]
  call void @llvm.lifetime.end.p0i8(i64 32, i8* nonnull %2478) #8
  call void @llvm.lifetime.end.p0i8(i64 32, i8* nonnull %2013) #8
  call void @llvm.lifetime.end.p0i8(i64 4, i8* nonnull %2009) #8
  call void @llvm.lifetime.end.p0i8(i64 4, i8* nonnull %2008) #8
  call void @llvm.lifetime.end.p0i8(i64 4, i8* nonnull %2004) #8
  call void @llvm.lifetime.end.p0i8(i64 4, i8* nonnull %2003) #8
  br label %2967

2479:                                             ; preds = %85
  %2480 = getelementptr inbounds %struct.TfLiteTensor, %struct.TfLiteTensor* %64, i64 0, i32 3, i32 1
  %2481 = load i32, i32* %2480, align 4
  %2482 = sub nsw i32 0, %2481
  %2483 = getelementptr inbounds %struct.TfLiteTensor, %struct.TfLiteTensor* %74, i64 0, i32 3, i32 1
  %2484 = load i32, i32* %2483, align 4
  %2485 = sub nsw i32 0, %2484
  %2486 = bitcast i32* %42 to i8*
  call void @llvm.lifetime.start.p0i8(i64 4, i8* nonnull %2486) #8
  store i32 -1431655766, i32* %42, align 4
  %2487 = bitcast i32* %43 to i8*
  call void @llvm.lifetime.start.p0i8(i64 4, i8* nonnull %2487) #8
  store i32 -1431655766, i32* %43, align 4
  %2488 = getelementptr inbounds %struct.TfLiteTensor, %struct.TfLiteTensor* %64, i64 0, i32 3, i32 0
  %2489 = load float, float* %2488, align 8
  %2490 = fpext float %2489 to double
  call void @_ZN6tflite35QuantizeMultiplierSmallerThanOneExpEdPiS0_(double %2490, i32* nonnull %42, i32* nonnull %43) #8
  %2491 = bitcast i32* %44 to i8*
  call void @llvm.lifetime.start.p0i8(i64 4, i8* nonnull %2491) #8
  store i32 -1431655766, i32* %44, align 4
  %2492 = bitcast i32* %45 to i8*
  call void @llvm.lifetime.start.p0i8(i64 4, i8* nonnull %2492) #8
  store i32 -1431655766, i32* %45, align 4
  %2493 = getelementptr inbounds %struct.TfLiteTensor, %struct.TfLiteTensor* %74, i64 0, i32 3, i32 0
  %2494 = load float, float* %2493, align 8
  %2495 = fpext float %2494 to double
  call void @_ZN6tflite35QuantizeMultiplierSmallerThanOneExpEdPiS0_(double %2495, i32* nonnull %44, i32* nonnull %45) #8
  %2496 = bitcast %"struct.tflite::ComparisonParams"* %46 to i8*
  call void @llvm.lifetime.start.p0i8(i64 32, i8* nonnull %2496) #8
  %2497 = getelementptr inbounds %"struct.tflite::ComparisonParams", %"struct.tflite::ComparisonParams"* %46, i64 0, i32 7
  %2498 = bitcast i8* %2497 to i32*
  store i32 -1431655766, i32* %2498, align 4
  %2499 = getelementptr inbounds %"struct.tflite::ComparisonParams", %"struct.tflite::ComparisonParams"* %46, i64 0, i32 0
  store i32 8, i32* %2499, align 4
  %2500 = getelementptr inbounds %"struct.tflite::ComparisonParams", %"struct.tflite::ComparisonParams"* %46, i64 0, i32 1
  store i32 %2482, i32* %2500, align 4
  %2501 = load i32, i32* %42, align 4
  %2502 = getelementptr inbounds %"struct.tflite::ComparisonParams", %"struct.tflite::ComparisonParams"* %46, i64 0, i32 2
  store i32 %2501, i32* %2502, align 4
  %2503 = load i32, i32* %43, align 4
  %2504 = getelementptr inbounds %"struct.tflite::ComparisonParams", %"struct.tflite::ComparisonParams"* %46, i64 0, i32 3
  store i32 %2503, i32* %2504, align 4
  %2505 = getelementptr inbounds %"struct.tflite::ComparisonParams", %"struct.tflite::ComparisonParams"* %46, i64 0, i32 4
  store i32 %2485, i32* %2505, align 4
  %2506 = load i32, i32* %44, align 4
  %2507 = getelementptr inbounds %"struct.tflite::ComparisonParams", %"struct.tflite::ComparisonParams"* %46, i64 0, i32 5
  store i32 %2506, i32* %2507, align 4
  %2508 = load i32, i32* %45, align 4
  %2509 = getelementptr inbounds %"struct.tflite::ComparisonParams", %"struct.tflite::ComparisonParams"* %46, i64 0, i32 6
  store i32 %2508, i32* %2509, align 4
  br i1 %87, label %2642, label %2510

2510:                                             ; preds = %2479
  %2511 = bitcast %"class.tflite::RuntimeShape"* %47 to i8*
  call void @llvm.lifetime.start.p0i8(i64 32, i8* nonnull %2511) #8
  %2512 = icmp eq %struct.TfLiteTensor* %64, null
  br i1 %2512, label %2513, label %2515

2513:                                             ; preds = %2510
  %2514 = getelementptr inbounds %"class.tflite::RuntimeShape", %"class.tflite::RuntimeShape"* %47, i64 0, i32 0
  store i32 0, i32* %2514, align 8, !alias.scope !297
  br label %2543

2515:                                             ; preds = %2510
  %2516 = getelementptr inbounds %struct.TfLiteTensor, %struct.TfLiteTensor* %64, i64 0, i32 2
  %2517 = load %struct.TfLiteIntArray*, %struct.TfLiteIntArray** %2516, align 8, !noalias !297
  %2518 = getelementptr inbounds %struct.TfLiteIntArray, %struct.TfLiteIntArray* %2517, i64 0, i32 0
  %2519 = load i32, i32* %2518, align 4, !noalias !297
  %2520 = getelementptr inbounds %struct.TfLiteIntArray, %struct.TfLiteIntArray* %2517, i64 0, i32 1, i64 0
  %2521 = getelementptr inbounds %"class.tflite::RuntimeShape", %"class.tflite::RuntimeShape"* %47, i64 0, i32 0
  store i32 %2519, i32* %2521, align 8, !alias.scope !297
  %2522 = icmp sgt i32 %2519, 5
  br i1 %2522, label %2523, label %2530

2523:                                             ; preds = %2515
  %2524 = sext i32 %2519 to i64
  %2525 = shl nsw i64 %2524, 2
  %2526 = call i8* @_Znam(i64 %2525) #9, !noalias !297
  %2527 = getelementptr inbounds %"class.tflite::RuntimeShape", %"class.tflite::RuntimeShape"* %47, i64 0, i32 1, i32 0
  %2528 = bitcast i32** %2527 to i8**
  store i8* %2526, i8** %2528, align 8, !alias.scope !297
  %2529 = bitcast i8* %2526 to i32*
  br label %2535

2530:                                             ; preds = %2515
  %2531 = getelementptr inbounds %"class.tflite::RuntimeShape", %"class.tflite::RuntimeShape"* %47, i64 0, i32 1
  %2532 = bitcast %union.anon* %2531 to i32*
  %2533 = sext i32 %2519 to i64
  %2534 = shl nsw i64 %2533, 2
  br label %2535

2535:                                             ; preds = %2530, %2523
  %2536 = phi i64 [ %2525, %2523 ], [ %2534, %2530 ]
  %2537 = phi i32* [ %2529, %2523 ], [ %2532, %2530 ]
  %2538 = bitcast i32* %2537 to i8*
  %2539 = bitcast i32* %2520 to i8*
  call void @llvm.memcpy.p0i8.p0i8.i64(i8* align 4 %2538, i8* align 4 %2539, i64 %2536, i1 false) #8
  %2540 = getelementptr inbounds %struct.TfLiteTensor, %struct.TfLiteTensor* %64, i64 0, i32 1
  %2541 = bitcast %union.TfLitePtrUnion* %2540 to i8**
  %2542 = load i8*, i8** %2541, align 8
  br label %2543

2543:                                             ; preds = %2535, %2513
  %2544 = phi i8* [ %2542, %2535 ], [ null, %2513 ]
  %2545 = bitcast %"class.tflite::RuntimeShape"* %48 to i8*
  call void @llvm.lifetime.start.p0i8(i64 32, i8* nonnull %2545) #8
  %2546 = icmp eq %struct.TfLiteTensor* %74, null
  br i1 %2546, label %2547, label %2549

2547:                                             ; preds = %2543
  %2548 = getelementptr inbounds %"class.tflite::RuntimeShape", %"class.tflite::RuntimeShape"* %48, i64 0, i32 0
  store i32 0, i32* %2548, align 8, !alias.scope !300
  br label %2577

2549:                                             ; preds = %2543
  %2550 = getelementptr inbounds %struct.TfLiteTensor, %struct.TfLiteTensor* %74, i64 0, i32 2
  %2551 = load %struct.TfLiteIntArray*, %struct.TfLiteIntArray** %2550, align 8, !noalias !300
  %2552 = getelementptr inbounds %struct.TfLiteIntArray, %struct.TfLiteIntArray* %2551, i64 0, i32 0
  %2553 = load i32, i32* %2552, align 4, !noalias !300
  %2554 = getelementptr inbounds %struct.TfLiteIntArray, %struct.TfLiteIntArray* %2551, i64 0, i32 1, i64 0
  %2555 = getelementptr inbounds %"class.tflite::RuntimeShape", %"class.tflite::RuntimeShape"* %48, i64 0, i32 0
  store i32 %2553, i32* %2555, align 8, !alias.scope !300
  %2556 = icmp sgt i32 %2553, 5
  br i1 %2556, label %2557, label %2564

2557:                                             ; preds = %2549
  %2558 = sext i32 %2553 to i64
  %2559 = shl nsw i64 %2558, 2
  %2560 = call i8* @_Znam(i64 %2559) #9, !noalias !300
  %2561 = getelementptr inbounds %"class.tflite::RuntimeShape", %"class.tflite::RuntimeShape"* %48, i64 0, i32 1, i32 0
  %2562 = bitcast i32** %2561 to i8**
  store i8* %2560, i8** %2562, align 8, !alias.scope !300
  %2563 = bitcast i8* %2560 to i32*
  br label %2569

2564:                                             ; preds = %2549
  %2565 = getelementptr inbounds %"class.tflite::RuntimeShape", %"class.tflite::RuntimeShape"* %48, i64 0, i32 1
  %2566 = bitcast %union.anon* %2565 to i32*
  %2567 = sext i32 %2553 to i64
  %2568 = shl nsw i64 %2567, 2
  br label %2569

2569:                                             ; preds = %2564, %2557
  %2570 = phi i64 [ %2559, %2557 ], [ %2568, %2564 ]
  %2571 = phi i32* [ %2563, %2557 ], [ %2566, %2564 ]
  %2572 = bitcast i32* %2571 to i8*
  %2573 = bitcast i32* %2554 to i8*
  call void @llvm.memcpy.p0i8.p0i8.i64(i8* align 4 %2572, i8* align 4 %2573, i64 %2570, i1 false) #8
  %2574 = getelementptr inbounds %struct.TfLiteTensor, %struct.TfLiteTensor* %74, i64 0, i32 1
  %2575 = bitcast %union.TfLitePtrUnion* %2574 to i8**
  %2576 = load i8*, i8** %2575, align 8
  br label %2577

2577:                                             ; preds = %2569, %2547
  %2578 = phi i8* [ %2576, %2569 ], [ null, %2547 ]
  %2579 = bitcast %"class.tflite::RuntimeShape"* %49 to i8*
  call void @llvm.lifetime.start.p0i8(i64 32, i8* nonnull %2579) #8
  %2580 = icmp eq %struct.TfLiteTensor* %86, null
  br i1 %2580, label %2581, label %2583

2581:                                             ; preds = %2577
  %2582 = getelementptr inbounds %"class.tflite::RuntimeShape", %"class.tflite::RuntimeShape"* %49, i64 0, i32 0
  store i32 0, i32* %2582, align 8, !alias.scope !303
  br label %2611

2583:                                             ; preds = %2577
  %2584 = getelementptr inbounds %struct.TfLiteTensor, %struct.TfLiteTensor* %86, i64 0, i32 2
  %2585 = load %struct.TfLiteIntArray*, %struct.TfLiteIntArray** %2584, align 8, !noalias !303
  %2586 = getelementptr inbounds %struct.TfLiteIntArray, %struct.TfLiteIntArray* %2585, i64 0, i32 0
  %2587 = load i32, i32* %2586, align 4, !noalias !303
  %2588 = getelementptr inbounds %struct.TfLiteIntArray, %struct.TfLiteIntArray* %2585, i64 0, i32 1, i64 0
  %2589 = getelementptr inbounds %"class.tflite::RuntimeShape", %"class.tflite::RuntimeShape"* %49, i64 0, i32 0
  store i32 %2587, i32* %2589, align 8, !alias.scope !303
  %2590 = icmp sgt i32 %2587, 5
  br i1 %2590, label %2591, label %2598

2591:                                             ; preds = %2583
  %2592 = sext i32 %2587 to i64
  %2593 = shl nsw i64 %2592, 2
  %2594 = call i8* @_Znam(i64 %2593) #9, !noalias !303
  %2595 = getelementptr inbounds %"class.tflite::RuntimeShape", %"class.tflite::RuntimeShape"* %49, i64 0, i32 1, i32 0
  %2596 = bitcast i32** %2595 to i8**
  store i8* %2594, i8** %2596, align 8, !alias.scope !303
  %2597 = bitcast i8* %2594 to i32*
  br label %2603

2598:                                             ; preds = %2583
  %2599 = getelementptr inbounds %"class.tflite::RuntimeShape", %"class.tflite::RuntimeShape"* %49, i64 0, i32 1
  %2600 = bitcast %union.anon* %2599 to i32*
  %2601 = sext i32 %2587 to i64
  %2602 = shl nsw i64 %2601, 2
  br label %2603

2603:                                             ; preds = %2598, %2591
  %2604 = phi i64 [ %2593, %2591 ], [ %2602, %2598 ]
  %2605 = phi i32* [ %2597, %2591 ], [ %2600, %2598 ]
  %2606 = bitcast i32* %2605 to i8*
  %2607 = bitcast i32* %2588 to i8*
  call void @llvm.memcpy.p0i8.p0i8.i64(i8* align 4 %2606, i8* align 4 %2607, i64 %2604, i1 false) #8
  %2608 = getelementptr inbounds %struct.TfLiteTensor, %struct.TfLiteTensor* %86, i64 0, i32 1
  %2609 = bitcast %union.TfLitePtrUnion* %2608 to i8**
  %2610 = load i8*, i8** %2609, align 8
  br label %2611

2611:                                             ; preds = %2603, %2581
  %2612 = phi i8* [ %2610, %2603 ], [ null, %2581 ]
  call void @_ZN6tflite13reference_ops36BroadcastComparison4DSlowWithScalingIaXadL_ZNS0_10NotEqualFnIiEEbT_S3_EEEEvRKNS_16ComparisonParamsERKNS_12RuntimeShapeEPKS3_S9_SB_S9_Pb(%"struct.tflite::ComparisonParams"* nonnull dereferenceable(32) %46, %"class.tflite::RuntimeShape"* nonnull dereferenceable(32) %47, i8* %2544, %"class.tflite::RuntimeShape"* nonnull dereferenceable(32) %48, i8* %2578, %"class.tflite::RuntimeShape"* nonnull dereferenceable(32) %49, i8* %2612) #8
  %2613 = getelementptr inbounds %"class.tflite::RuntimeShape", %"class.tflite::RuntimeShape"* %49, i64 0, i32 0
  %2614 = load i32, i32* %2613, align 8
  %2615 = icmp sgt i32 %2614, 5
  br i1 %2615, label %2616, label %2622

2616:                                             ; preds = %2611
  %2617 = getelementptr inbounds %"class.tflite::RuntimeShape", %"class.tflite::RuntimeShape"* %49, i64 0, i32 1, i32 0
  %2618 = load i32*, i32** %2617, align 8
  %2619 = icmp eq i32* %2618, null
  br i1 %2619, label %2622, label %2620

2620:                                             ; preds = %2616
  %2621 = bitcast i32* %2618 to i8*
  call void @_ZdaPv(i8* %2621) #9
  br label %2622

2622:                                             ; preds = %2620, %2616, %2611
  call void @llvm.lifetime.end.p0i8(i64 32, i8* nonnull %2579) #8
  %2623 = getelementptr inbounds %"class.tflite::RuntimeShape", %"class.tflite::RuntimeShape"* %48, i64 0, i32 0
  %2624 = load i32, i32* %2623, align 8
  %2625 = icmp sgt i32 %2624, 5
  br i1 %2625, label %2626, label %2632

2626:                                             ; preds = %2622
  %2627 = getelementptr inbounds %"class.tflite::RuntimeShape", %"class.tflite::RuntimeShape"* %48, i64 0, i32 1, i32 0
  %2628 = load i32*, i32** %2627, align 8
  %2629 = icmp eq i32* %2628, null
  br i1 %2629, label %2632, label %2630

2630:                                             ; preds = %2626
  %2631 = bitcast i32* %2628 to i8*
  call void @_ZdaPv(i8* %2631) #9
  br label %2632

2632:                                             ; preds = %2630, %2626, %2622
  call void @llvm.lifetime.end.p0i8(i64 32, i8* nonnull %2545) #8
  %2633 = getelementptr inbounds %"class.tflite::RuntimeShape", %"class.tflite::RuntimeShape"* %47, i64 0, i32 0
  %2634 = load i32, i32* %2633, align 8
  %2635 = icmp sgt i32 %2634, 5
  br i1 %2635, label %2636, label %2960

2636:                                             ; preds = %2632
  %2637 = getelementptr inbounds %"class.tflite::RuntimeShape", %"class.tflite::RuntimeShape"* %47, i64 0, i32 1, i32 0
  %2638 = load i32*, i32** %2637, align 8
  %2639 = icmp eq i32* %2638, null
  br i1 %2639, label %2960, label %2640

2640:                                             ; preds = %2636
  %2641 = bitcast i32* %2638 to i8*
  call void @_ZdaPv(i8* %2641) #9
  br label %2960

2642:                                             ; preds = %2479
  %2643 = bitcast %"class.tflite::RuntimeShape"* %50 to i8*
  call void @llvm.lifetime.start.p0i8(i64 32, i8* nonnull %2643) #8
  %2644 = icmp eq %struct.TfLiteTensor* %64, null
  br i1 %2644, label %2645, label %2647

2645:                                             ; preds = %2642
  %2646 = getelementptr inbounds %"class.tflite::RuntimeShape", %"class.tflite::RuntimeShape"* %50, i64 0, i32 0
  store i32 0, i32* %2646, align 8, !alias.scope !306
  br label %2675

2647:                                             ; preds = %2642
  %2648 = getelementptr inbounds %struct.TfLiteTensor, %struct.TfLiteTensor* %64, i64 0, i32 2
  %2649 = load %struct.TfLiteIntArray*, %struct.TfLiteIntArray** %2648, align 8, !noalias !306
  %2650 = getelementptr inbounds %struct.TfLiteIntArray, %struct.TfLiteIntArray* %2649, i64 0, i32 0
  %2651 = load i32, i32* %2650, align 4, !noalias !306
  %2652 = getelementptr inbounds %struct.TfLiteIntArray, %struct.TfLiteIntArray* %2649, i64 0, i32 1, i64 0
  %2653 = getelementptr inbounds %"class.tflite::RuntimeShape", %"class.tflite::RuntimeShape"* %50, i64 0, i32 0
  store i32 %2651, i32* %2653, align 8, !alias.scope !306
  %2654 = icmp sgt i32 %2651, 5
  br i1 %2654, label %2655, label %2662

2655:                                             ; preds = %2647
  %2656 = sext i32 %2651 to i64
  %2657 = shl nsw i64 %2656, 2
  %2658 = call i8* @_Znam(i64 %2657) #9, !noalias !306
  %2659 = getelementptr inbounds %"class.tflite::RuntimeShape", %"class.tflite::RuntimeShape"* %50, i64 0, i32 1, i32 0
  %2660 = bitcast i32** %2659 to i8**
  store i8* %2658, i8** %2660, align 8, !alias.scope !306
  %2661 = bitcast i8* %2658 to i32*
  br label %2667

2662:                                             ; preds = %2647
  %2663 = getelementptr inbounds %"class.tflite::RuntimeShape", %"class.tflite::RuntimeShape"* %50, i64 0, i32 1
  %2664 = bitcast %union.anon* %2663 to i32*
  %2665 = sext i32 %2651 to i64
  %2666 = shl nsw i64 %2665, 2
  br label %2667

2667:                                             ; preds = %2662, %2655
  %2668 = phi i64 [ %2657, %2655 ], [ %2666, %2662 ]
  %2669 = phi i32* [ %2661, %2655 ], [ %2664, %2662 ]
  %2670 = bitcast i32* %2669 to i8*
  %2671 = bitcast i32* %2652 to i8*
  call void @llvm.memcpy.p0i8.p0i8.i64(i8* align 4 %2670, i8* align 4 %2671, i64 %2668, i1 false) #8
  %2672 = getelementptr inbounds %struct.TfLiteTensor, %struct.TfLiteTensor* %64, i64 0, i32 1
  %2673 = bitcast %union.TfLitePtrUnion* %2672 to i8**
  %2674 = load i8*, i8** %2673, align 8
  br label %2675

2675:                                             ; preds = %2667, %2645
  %2676 = phi i32 [ %2651, %2667 ], [ 0, %2645 ]
  %2677 = phi i8* [ %2674, %2667 ], [ null, %2645 ]
  %2678 = bitcast %"class.tflite::RuntimeShape"* %51 to i8*
  call void @llvm.lifetime.start.p0i8(i64 32, i8* nonnull %2678) #8
  %2679 = icmp eq %struct.TfLiteTensor* %74, null
  br i1 %2679, label %2680, label %2682

2680:                                             ; preds = %2675
  %2681 = getelementptr inbounds %"class.tflite::RuntimeShape", %"class.tflite::RuntimeShape"* %51, i64 0, i32 0
  store i32 0, i32* %2681, align 8, !alias.scope !309
  br label %2710

2682:                                             ; preds = %2675
  %2683 = getelementptr inbounds %struct.TfLiteTensor, %struct.TfLiteTensor* %74, i64 0, i32 2
  %2684 = load %struct.TfLiteIntArray*, %struct.TfLiteIntArray** %2683, align 8, !noalias !309
  %2685 = getelementptr inbounds %struct.TfLiteIntArray, %struct.TfLiteIntArray* %2684, i64 0, i32 0
  %2686 = load i32, i32* %2685, align 4, !noalias !309
  %2687 = getelementptr inbounds %struct.TfLiteIntArray, %struct.TfLiteIntArray* %2684, i64 0, i32 1, i64 0
  %2688 = getelementptr inbounds %"class.tflite::RuntimeShape", %"class.tflite::RuntimeShape"* %51, i64 0, i32 0
  store i32 %2686, i32* %2688, align 8, !alias.scope !309
  %2689 = icmp sgt i32 %2686, 5
  br i1 %2689, label %2690, label %2697

2690:                                             ; preds = %2682
  %2691 = sext i32 %2686 to i64
  %2692 = shl nsw i64 %2691, 2
  %2693 = call i8* @_Znam(i64 %2692) #9, !noalias !309
  %2694 = getelementptr inbounds %"class.tflite::RuntimeShape", %"class.tflite::RuntimeShape"* %51, i64 0, i32 1, i32 0
  %2695 = bitcast i32** %2694 to i8**
  store i8* %2693, i8** %2695, align 8, !alias.scope !309
  %2696 = bitcast i8* %2693 to i32*
  br label %2702

2697:                                             ; preds = %2682
  %2698 = getelementptr inbounds %"class.tflite::RuntimeShape", %"class.tflite::RuntimeShape"* %51, i64 0, i32 1
  %2699 = bitcast %union.anon* %2698 to i32*
  %2700 = sext i32 %2686 to i64
  %2701 = shl nsw i64 %2700, 2
  br label %2702

2702:                                             ; preds = %2697, %2690
  %2703 = phi i64 [ %2692, %2690 ], [ %2701, %2697 ]
  %2704 = phi i32* [ %2696, %2690 ], [ %2699, %2697 ]
  %2705 = bitcast i32* %2704 to i8*
  %2706 = bitcast i32* %2687 to i8*
  call void @llvm.memcpy.p0i8.p0i8.i64(i8* align 4 %2705, i8* align 4 %2706, i64 %2703, i1 false) #8
  %2707 = getelementptr inbounds %struct.TfLiteTensor, %struct.TfLiteTensor* %74, i64 0, i32 1
  %2708 = bitcast %union.TfLitePtrUnion* %2707 to i8**
  %2709 = load i8*, i8** %2708, align 8
  br label %2710

2710:                                             ; preds = %2702, %2680
  %2711 = phi i32 [ %2686, %2702 ], [ 0, %2680 ]
  %2712 = phi i8* [ %2709, %2702 ], [ null, %2680 ]
  %2713 = bitcast %"class.tflite::RuntimeShape"* %52 to i8*
  call void @llvm.lifetime.start.p0i8(i64 32, i8* nonnull %2713) #8
  %2714 = icmp eq %struct.TfLiteTensor* %86, null
  br i1 %2714, label %2715, label %2717

2715:                                             ; preds = %2710
  %2716 = getelementptr inbounds %"class.tflite::RuntimeShape", %"class.tflite::RuntimeShape"* %52, i64 0, i32 0
  store i32 0, i32* %2716, align 8, !alias.scope !312
  br label %2745

2717:                                             ; preds = %2710
  %2718 = getelementptr inbounds %struct.TfLiteTensor, %struct.TfLiteTensor* %86, i64 0, i32 2
  %2719 = load %struct.TfLiteIntArray*, %struct.TfLiteIntArray** %2718, align 8, !noalias !312
  %2720 = getelementptr inbounds %struct.TfLiteIntArray, %struct.TfLiteIntArray* %2719, i64 0, i32 0
  %2721 = load i32, i32* %2720, align 4, !noalias !312
  %2722 = getelementptr inbounds %struct.TfLiteIntArray, %struct.TfLiteIntArray* %2719, i64 0, i32 1, i64 0
  %2723 = getelementptr inbounds %"class.tflite::RuntimeShape", %"class.tflite::RuntimeShape"* %52, i64 0, i32 0
  store i32 %2721, i32* %2723, align 8, !alias.scope !312
  %2724 = icmp sgt i32 %2721, 5
  br i1 %2724, label %2725, label %2732

2725:                                             ; preds = %2717
  %2726 = sext i32 %2721 to i64
  %2727 = shl nsw i64 %2726, 2
  %2728 = call i8* @_Znam(i64 %2727) #9, !noalias !312
  %2729 = getelementptr inbounds %"class.tflite::RuntimeShape", %"class.tflite::RuntimeShape"* %52, i64 0, i32 1, i32 0
  %2730 = bitcast i32** %2729 to i8**
  store i8* %2728, i8** %2730, align 8, !alias.scope !312
  %2731 = bitcast i8* %2728 to i32*
  br label %2737

2732:                                             ; preds = %2717
  %2733 = getelementptr inbounds %"class.tflite::RuntimeShape", %"class.tflite::RuntimeShape"* %52, i64 0, i32 1
  %2734 = bitcast %union.anon* %2733 to i32*
  %2735 = sext i32 %2721 to i64
  %2736 = shl nsw i64 %2735, 2
  br label %2737

2737:                                             ; preds = %2732, %2725
  %2738 = phi i64 [ %2727, %2725 ], [ %2736, %2732 ]
  %2739 = phi i32* [ %2731, %2725 ], [ %2734, %2732 ]
  %2740 = bitcast i32* %2739 to i8*
  %2741 = bitcast i32* %2722 to i8*
  call void @llvm.memcpy.p0i8.p0i8.i64(i8* align 4 %2740, i8* align 4 %2741, i64 %2738, i1 false) #8
  %2742 = getelementptr inbounds %struct.TfLiteTensor, %struct.TfLiteTensor* %86, i64 0, i32 1
  %2743 = bitcast %union.TfLitePtrUnion* %2742 to i8**
  %2744 = load i8*, i8** %2743, align 8
  br label %2745

2745:                                             ; preds = %2737, %2715
  %2746 = phi i32 [ %2721, %2737 ], [ 0, %2715 ]
  %2747 = phi i8* [ %2744, %2737 ], [ null, %2715 ]
  %2748 = getelementptr inbounds %"class.tflite::RuntimeShape", %"class.tflite::RuntimeShape"* %50, i64 0, i32 1
  %2749 = icmp sgt i32 %2676, 5
  br i1 %2749, label %2750, label %2753

2750:                                             ; preds = %2745
  %2751 = getelementptr inbounds %union.anon, %union.anon* %2748, i64 0, i32 0
  %2752 = load i32*, i32** %2751, align 8
  br label %2756

2753:                                             ; preds = %2745
  %2754 = bitcast %union.anon* %2748 to i32*
  %2755 = icmp sgt i32 %2676, 0
  br i1 %2755, label %2756, label %2860

2756:                                             ; preds = %2753, %2750
  %2757 = phi i32* [ %2752, %2750 ], [ %2754, %2753 ]
  %2758 = zext i32 %2676 to i64
  %2759 = icmp ult i32 %2676, 8
  br i1 %2759, label %2845, label %2760

2760:                                             ; preds = %2756
  %2761 = and i64 %2758, 4294967288
  %2762 = add nsw i64 %2761, -8
  %2763 = lshr exact i64 %2762, 3
  %2764 = add nuw nsw i64 %2763, 1
  %2765 = and i64 %2764, 3
  %2766 = icmp ult i64 %2762, 24
  br i1 %2766, label %2812, label %2767

2767:                                             ; preds = %2760
  %2768 = sub nsw i64 %2764, %2765
  br label %2769

2769:                                             ; preds = %2769, %2767
  %2770 = phi i64 [ 0, %2767 ], [ %2809, %2769 ]
  %2771 = phi <4 x i32> [ <i32 1, i32 1, i32 1, i32 1>, %2767 ], [ %2807, %2769 ]
  %2772 = phi <4 x i32> [ <i32 1, i32 1, i32 1, i32 1>, %2767 ], [ %2808, %2769 ]
  %2773 = phi i64 [ %2768, %2767 ], [ %2810, %2769 ]
  %2774 = getelementptr inbounds i32, i32* %2757, i64 %2770
  %2775 = bitcast i32* %2774 to <4 x i32>*
  %2776 = load <4 x i32>, <4 x i32>* %2775, align 4
  %2777 = getelementptr inbounds i32, i32* %2774, i64 4
  %2778 = bitcast i32* %2777 to <4 x i32>*
  %2779 = load <4 x i32>, <4 x i32>* %2778, align 4
  %2780 = mul nsw <4 x i32> %2776, %2771
  %2781 = mul nsw <4 x i32> %2779, %2772
  %2782 = or i64 %2770, 8
  %2783 = getelementptr inbounds i32, i32* %2757, i64 %2782
  %2784 = bitcast i32* %2783 to <4 x i32>*
  %2785 = load <4 x i32>, <4 x i32>* %2784, align 4
  %2786 = getelementptr inbounds i32, i32* %2783, i64 4
  %2787 = bitcast i32* %2786 to <4 x i32>*
  %2788 = load <4 x i32>, <4 x i32>* %2787, align 4
  %2789 = mul nsw <4 x i32> %2785, %2780
  %2790 = mul nsw <4 x i32> %2788, %2781
  %2791 = or i64 %2770, 16
  %2792 = getelementptr inbounds i32, i32* %2757, i64 %2791
  %2793 = bitcast i32* %2792 to <4 x i32>*
  %2794 = load <4 x i32>, <4 x i32>* %2793, align 4
  %2795 = getelementptr inbounds i32, i32* %2792, i64 4
  %2796 = bitcast i32* %2795 to <4 x i32>*
  %2797 = load <4 x i32>, <4 x i32>* %2796, align 4
  %2798 = mul nsw <4 x i32> %2794, %2789
  %2799 = mul nsw <4 x i32> %2797, %2790
  %2800 = or i64 %2770, 24
  %2801 = getelementptr inbounds i32, i32* %2757, i64 %2800
  %2802 = bitcast i32* %2801 to <4 x i32>*
  %2803 = load <4 x i32>, <4 x i32>* %2802, align 4
  %2804 = getelementptr inbounds i32, i32* %2801, i64 4
  %2805 = bitcast i32* %2804 to <4 x i32>*
  %2806 = load <4 x i32>, <4 x i32>* %2805, align 4
  %2807 = mul nsw <4 x i32> %2803, %2798
  %2808 = mul nsw <4 x i32> %2806, %2799
  %2809 = add i64 %2770, 32
  %2810 = add i64 %2773, -4
  %2811 = icmp eq i64 %2810, 0
  br i1 %2811, label %2812, label %2769, !llvm.loop !315

2812:                                             ; preds = %2769, %2760
  %2813 = phi <4 x i32> [ undef, %2760 ], [ %2807, %2769 ]
  %2814 = phi <4 x i32> [ undef, %2760 ], [ %2808, %2769 ]
  %2815 = phi i64 [ 0, %2760 ], [ %2809, %2769 ]
  %2816 = phi <4 x i32> [ <i32 1, i32 1, i32 1, i32 1>, %2760 ], [ %2807, %2769 ]
  %2817 = phi <4 x i32> [ <i32 1, i32 1, i32 1, i32 1>, %2760 ], [ %2808, %2769 ]
  %2818 = icmp eq i64 %2765, 0
  br i1 %2818, label %2835, label %2819

2819:                                             ; preds = %2812, %2819
  %2820 = phi i64 [ %2832, %2819 ], [ %2815, %2812 ]
  %2821 = phi <4 x i32> [ %2830, %2819 ], [ %2816, %2812 ]
  %2822 = phi <4 x i32> [ %2831, %2819 ], [ %2817, %2812 ]
  %2823 = phi i64 [ %2833, %2819 ], [ %2765, %2812 ]
  %2824 = getelementptr inbounds i32, i32* %2757, i64 %2820
  %2825 = bitcast i32* %2824 to <4 x i32>*
  %2826 = load <4 x i32>, <4 x i32>* %2825, align 4
  %2827 = getelementptr inbounds i32, i32* %2824, i64 4
  %2828 = bitcast i32* %2827 to <4 x i32>*
  %2829 = load <4 x i32>, <4 x i32>* %2828, align 4
  %2830 = mul nsw <4 x i32> %2826, %2821
  %2831 = mul nsw <4 x i32> %2829, %2822
  %2832 = add i64 %2820, 8
  %2833 = add i64 %2823, -1
  %2834 = icmp eq i64 %2833, 0
  br i1 %2834, label %2835, label %2819, !llvm.loop !316

2835:                                             ; preds = %2819, %2812
  %2836 = phi <4 x i32> [ %2813, %2812 ], [ %2830, %2819 ]
  %2837 = phi <4 x i32> [ %2814, %2812 ], [ %2831, %2819 ]
  %2838 = mul <4 x i32> %2837, %2836
  %2839 = shufflevector <4 x i32> %2838, <4 x i32> undef, <4 x i32> <i32 2, i32 3, i32 undef, i32 undef>
  %2840 = mul <4 x i32> %2838, %2839
  %2841 = shufflevector <4 x i32> %2840, <4 x i32> undef, <4 x i32> <i32 1, i32 undef, i32 undef, i32 undef>
  %2842 = mul <4 x i32> %2840, %2841
  %2843 = extractelement <4 x i32> %2842, i32 0
  %2844 = icmp eq i64 %2761, %2758
  br i1 %2844, label %2856, label %2845

2845:                                             ; preds = %2835, %2756
  %2846 = phi i64 [ 0, %2756 ], [ %2761, %2835 ]
  %2847 = phi i32 [ 1, %2756 ], [ %2843, %2835 ]
  br label %2848

2848:                                             ; preds = %2845, %2848
  %2849 = phi i64 [ %2854, %2848 ], [ %2846, %2845 ]
  %2850 = phi i32 [ %2853, %2848 ], [ %2847, %2845 ]
  %2851 = getelementptr inbounds i32, i32* %2757, i64 %2849
  %2852 = load i32, i32* %2851, align 4
  %2853 = mul nsw i32 %2852, %2850
  %2854 = add nuw nsw i64 %2849, 1
  %2855 = icmp eq i64 %2854, %2758
  br i1 %2855, label %2856, label %2848, !llvm.loop !317

2856:                                             ; preds = %2848, %2835
  %2857 = phi i32 [ %2843, %2835 ], [ %2853, %2848 ]
  %2858 = sext i32 %2857 to i64
  %2859 = icmp sgt i32 %2857, 0
  br i1 %2859, label %2860, label %2937

2860:                                             ; preds = %2856, %2753
  %2861 = phi i64 [ %2858, %2856 ], [ 1, %2753 ]
  %2862 = sext i32 %2501 to i64
  %2863 = sub nsw i32 0, %2503
  %2864 = zext i32 %2863 to i64
  %2865 = shl nsw i64 -1, %2864
  %2866 = trunc i64 %2865 to i32
  %2867 = xor i32 %2866, -1
  %2868 = ashr i32 %2867, 1
  %2869 = sext i32 %2506 to i64
  %2870 = sub nsw i32 0, %2508
  %2871 = zext i32 %2870 to i64
  %2872 = shl nsw i64 -1, %2871
  %2873 = trunc i64 %2872 to i32
  %2874 = xor i32 %2873, -1
  %2875 = ashr i32 %2874, 1
  %2876 = icmp eq i32 %2501, -2147483648
  %2877 = icmp eq i32 %2506, -2147483648
  br label %2878

2878:                                             ; preds = %2923, %2860
  %2879 = phi i64 [ 0, %2860 ], [ %2935, %2923 ]
  %2880 = getelementptr inbounds i8, i8* %2677, i64 %2879
  %2881 = load i8, i8* %2880, align 1
  %2882 = sext i8 %2881 to i32
  %2883 = sub i32 %2882, %2481
  %2884 = getelementptr inbounds i8, i8* %2712, i64 %2879
  %2885 = load i8, i8* %2884, align 1
  %2886 = sext i8 %2885 to i32
  %2887 = sub i32 %2886, %2484
  %2888 = shl i32 %2883, 8
  %2889 = shl i32 %2887, 8
  %2890 = icmp eq i32 %2888, %2501
  br i1 %2890, label %2893, label %2891

2891:                                             ; preds = %2878
  %2892 = sext i32 %2888 to i64
  br label %2894

2893:                                             ; preds = %2878
  br i1 %2876, label %2902, label %2894

2894:                                             ; preds = %2893, %2891
  %2895 = phi i64 [ %2892, %2891 ], [ %2862, %2893 ]
  %2896 = mul nsw i64 %2895, %2862
  %2897 = icmp sgt i64 %2896, -1
  %2898 = select i1 %2897, i64 1073741824, i64 -1073741823
  %2899 = add nsw i64 %2898, %2896
  %2900 = sdiv i64 %2899, 2147483648
  %2901 = trunc i64 %2900 to i32
  br label %2902

2902:                                             ; preds = %2894, %2893
  %2903 = phi i32 [ %2901, %2894 ], [ 2147483647, %2893 ]
  %2904 = and i32 %2903, %2867
  %2905 = lshr i32 %2903, 31
  %2906 = add nsw i32 %2905, %2868
  %2907 = ashr i32 %2903, %2863
  %2908 = icmp sgt i32 %2904, %2906
  %2909 = zext i1 %2908 to i32
  %2910 = add nsw i32 %2907, %2909
  %2911 = icmp eq i32 %2889, %2506
  br i1 %2911, label %2914, label %2912

2912:                                             ; preds = %2902
  %2913 = sext i32 %2889 to i64
  br label %2915

2914:                                             ; preds = %2902
  br i1 %2877, label %2923, label %2915

2915:                                             ; preds = %2914, %2912
  %2916 = phi i64 [ %2913, %2912 ], [ %2869, %2914 ]
  %2917 = mul nsw i64 %2916, %2869
  %2918 = icmp sgt i64 %2917, -1
  %2919 = select i1 %2918, i64 1073741824, i64 -1073741823
  %2920 = add nsw i64 %2919, %2917
  %2921 = sdiv i64 %2920, 2147483648
  %2922 = trunc i64 %2921 to i32
  br label %2923

2923:                                             ; preds = %2915, %2914
  %2924 = phi i32 [ %2922, %2915 ], [ 2147483647, %2914 ]
  %2925 = and i32 %2924, %2874
  %2926 = lshr i32 %2924, 31
  %2927 = add nsw i32 %2926, %2875
  %2928 = ashr i32 %2924, %2870
  %2929 = icmp sgt i32 %2925, %2927
  %2930 = zext i1 %2929 to i32
  %2931 = add nsw i32 %2928, %2930
  %2932 = icmp ne i32 %2910, %2931
  %2933 = getelementptr inbounds i8, i8* %2747, i64 %2879
  %2934 = zext i1 %2932 to i8
  store i8 %2934, i8* %2933, align 1
  %2935 = add nuw nsw i64 %2879, 1
  %2936 = icmp eq i64 %2935, %2861
  br i1 %2936, label %2937, label %2878

2937:                                             ; preds = %2923, %2856
  %2938 = icmp sgt i32 %2746, 5
  br i1 %2938, label %2939, label %2945

2939:                                             ; preds = %2937
  %2940 = getelementptr inbounds %"class.tflite::RuntimeShape", %"class.tflite::RuntimeShape"* %52, i64 0, i32 1, i32 0
  %2941 = load i32*, i32** %2940, align 8
  %2942 = icmp eq i32* %2941, null
  br i1 %2942, label %2945, label %2943

2943:                                             ; preds = %2939
  %2944 = bitcast i32* %2941 to i8*
  call void @_ZdaPv(i8* %2944) #9
  br label %2945

2945:                                             ; preds = %2943, %2939, %2937
  call void @llvm.lifetime.end.p0i8(i64 32, i8* nonnull %2713) #8
  %2946 = icmp sgt i32 %2711, 5
  br i1 %2946, label %2947, label %2953

2947:                                             ; preds = %2945
  %2948 = getelementptr inbounds %"class.tflite::RuntimeShape", %"class.tflite::RuntimeShape"* %51, i64 0, i32 1, i32 0
  %2949 = load i32*, i32** %2948, align 8
  %2950 = icmp eq i32* %2949, null
  br i1 %2950, label %2953, label %2951

2951:                                             ; preds = %2947
  %2952 = bitcast i32* %2949 to i8*
  call void @_ZdaPv(i8* %2952) #9
  br label %2953

2953:                                             ; preds = %2951, %2947, %2945
  call void @llvm.lifetime.end.p0i8(i64 32, i8* nonnull %2678) #8
  br i1 %2749, label %2954, label %2960

2954:                                             ; preds = %2953
  %2955 = getelementptr inbounds %"class.tflite::RuntimeShape", %"class.tflite::RuntimeShape"* %50, i64 0, i32 1, i32 0
  %2956 = load i32*, i32** %2955, align 8
  %2957 = icmp eq i32* %2956, null
  br i1 %2957, label %2960, label %2958

2958:                                             ; preds = %2954
  %2959 = bitcast i32* %2956 to i8*
  call void @_ZdaPv(i8* %2959) #9
  br label %2960

2960:                                             ; preds = %2953, %2954, %2958, %2632, %2636, %2640
  %2961 = phi i8* [ %2511, %2640 ], [ %2511, %2636 ], [ %2511, %2632 ], [ %2643, %2958 ], [ %2643, %2954 ], [ %2643, %2953 ]
  call void @llvm.lifetime.end.p0i8(i64 32, i8* nonnull %2961) #8
  call void @llvm.lifetime.end.p0i8(i64 32, i8* nonnull %2496) #8
  call void @llvm.lifetime.end.p0i8(i64 4, i8* nonnull %2492) #8
  call void @llvm.lifetime.end.p0i8(i64 4, i8* nonnull %2491) #8
  call void @llvm.lifetime.end.p0i8(i64 4, i8* nonnull %2487) #8
  call void @llvm.lifetime.end.p0i8(i64 4, i8* nonnull %2486) #8
  br label %2967

2962:                                             ; preds = %85
  %2963 = xor i1 %87, true
  tail call fastcc void @_ZN6tflite3ops7builtin11comparisons12_GLOBAL__N_116ComparisonStringEPFbRKNS_9StringRefES6_EPK12TfLiteTensorSB_PS9_b(i1 (%"struct.tflite::StringRef"*, %"struct.tflite::StringRef"*)* nonnull @_ZN6tflite13reference_ops19StringRefNotEqualFnERKNS_9StringRefES3_, %struct.TfLiteTensor* %64, %struct.TfLiteTensor* %74, %struct.TfLiteTensor* %86, i1 zeroext %2963)
  br label %2967

2964:                                             ; preds = %85
  %2965 = getelementptr inbounds %struct.TfLiteContext, %struct.TfLiteContext* %0, i64 0, i32 5
  %2966 = load void (%struct.TfLiteContext*, i8*, ...)*, void (%struct.TfLiteContext*, i8*, ...)** %2965, align 8
  tail call void (%struct.TfLiteContext*, i8*, ...) %2966(%struct.TfLiteContext* %0, i8* getelementptr inbounds ([63 x i8], [63 x i8]* @.str.14, i64 0, i64 0), i32 %89) #8
  br label %2967

2967:                                             ; preds = %553, %1068, %1579, %1994, %2477, %2960, %2962, %2964
  %2968 = phi i32 [ 1, %2964 ], [ 0, %2962 ], [ 0, %2960 ], [ 0, %2477 ], [ 0, %1994 ], [ 0, %1579 ], [ 0, %1068 ], [ 0, %553 ]
  ret i32 %2968
}

; Function Attrs: norecurse nounwind readnone ssp uwtable
define hidden nonnull %struct.TfLiteRegistration* @_ZN6tflite3ops7builtin16Register_GREATEREv() local_unnamed_addr #0 {
  ret %struct.TfLiteRegistration* @_ZZN6tflite3ops7builtin16Register_GREATEREvE1r
}

; Function Attrs: nounwind ssp uwtable
define internal i32 @_ZN6tflite3ops7builtin11comparisons12_GLOBAL__N_117ComparisonPrepareEP13TfLiteContextP10TfLiteNode(%struct.TfLiteContext*, %struct.TfLiteNode* nocapture readonly) #1 {
  %3 = tail call fastcc i32 @_ZN6tflite3ops7builtin11comparisons12_GLOBAL__N_123ComparisonPrepareCommonEP13TfLiteContextP10TfLiteNodeb(%struct.TfLiteContext* %0, %struct.TfLiteNode* %1, i1 zeroext false)
  ret i32 %3
}

; Function Attrs: nounwind ssp uwtable
define internal i32 @_ZN6tflite3ops7builtin11comparisons12_GLOBAL__N_111GreaterEvalEP13TfLiteContextP10TfLiteNode(%struct.TfLiteContext*, %struct.TfLiteNode* nocapture readonly) #1 {
  %3 = alloca i32, align 4
  %4 = alloca i32, align 4
  %5 = alloca i32, align 4
  %6 = alloca i32, align 4
  %7 = alloca %"struct.tflite::ComparisonParams", align 4
  %8 = alloca %"class.tflite::RuntimeShape", align 8
  %9 = alloca %"class.tflite::RuntimeShape", align 8
  %10 = alloca %"class.tflite::RuntimeShape", align 8
  %11 = alloca %"class.tflite::RuntimeShape", align 8
  %12 = alloca %"class.tflite::RuntimeShape", align 8
  %13 = alloca %"class.tflite::RuntimeShape", align 8
  %14 = alloca %"struct.tflite::ComparisonParams", align 4
  %15 = alloca %"class.tflite::RuntimeShape", align 8
  %16 = alloca %"class.tflite::RuntimeShape", align 8
  %17 = alloca %"class.tflite::RuntimeShape", align 8
  %18 = alloca %"class.tflite::RuntimeShape", align 8
  %19 = alloca %"class.tflite::RuntimeShape", align 8
  %20 = alloca %"class.tflite::RuntimeShape", align 8
  %21 = alloca %"struct.tflite::ComparisonParams", align 4
  %22 = alloca %"class.tflite::RuntimeShape", align 8
  %23 = alloca %"class.tflite::RuntimeShape", align 8
  %24 = alloca %"class.tflite::RuntimeShape", align 8
  %25 = alloca %"class.tflite::RuntimeShape", align 8
  %26 = alloca %"class.tflite::RuntimeShape", align 8
  %27 = alloca %"class.tflite::RuntimeShape", align 8
  %28 = alloca %"struct.tflite::ComparisonParams", align 4
  %29 = alloca %"class.tflite::RuntimeShape", align 8
  %30 = alloca %"class.tflite::RuntimeShape", align 8
  %31 = alloca %"class.tflite::RuntimeShape", align 8
  %32 = alloca %"class.tflite::RuntimeShape", align 8
  %33 = alloca %"class.tflite::RuntimeShape", align 8
  %34 = alloca %"class.tflite::RuntimeShape", align 8
  %35 = alloca i32, align 4
  %36 = alloca i32, align 4
  %37 = alloca i32, align 4
  %38 = alloca i32, align 4
  %39 = alloca %"struct.tflite::ComparisonParams", align 4
  %40 = alloca %"class.tflite::RuntimeShape", align 8
  %41 = alloca %"class.tflite::RuntimeShape", align 8
  %42 = alloca %"class.tflite::RuntimeShape", align 8
  %43 = alloca %"class.tflite::RuntimeShape", align 8
  %44 = alloca %"class.tflite::RuntimeShape", align 8
  %45 = alloca %"class.tflite::RuntimeShape", align 8
  %46 = getelementptr inbounds %struct.TfLiteNode, %struct.TfLiteNode* %1, i64 0, i32 0
  %47 = load %struct.TfLiteIntArray*, %struct.TfLiteIntArray** %46, align 8
  %48 = getelementptr inbounds %struct.TfLiteIntArray, %struct.TfLiteIntArray* %47, i64 0, i32 1, i64 0
  %49 = load i32, i32* %48, align 4
  %50 = icmp slt i32 %49, 0
  br i1 %50, label %56, label %51

51:                                               ; preds = %2
  %52 = getelementptr inbounds %struct.TfLiteContext, %struct.TfLiteContext* %0, i64 0, i32 2
  %53 = load %struct.TfLiteTensor*, %struct.TfLiteTensor** %52, align 8
  %54 = sext i32 %49 to i64
  %55 = getelementptr inbounds %struct.TfLiteTensor, %struct.TfLiteTensor* %53, i64 %54
  br label %56

56:                                               ; preds = %2, %51
  %57 = phi %struct.TfLiteTensor* [ %55, %51 ], [ null, %2 ]
  %58 = getelementptr inbounds %struct.TfLiteIntArray, %struct.TfLiteIntArray* %47, i64 0, i32 1, i64 1
  %59 = load i32, i32* %58, align 4
  %60 = icmp slt i32 %59, 0
  br i1 %60, label %66, label %61

61:                                               ; preds = %56
  %62 = getelementptr inbounds %struct.TfLiteContext, %struct.TfLiteContext* %0, i64 0, i32 2
  %63 = load %struct.TfLiteTensor*, %struct.TfLiteTensor** %62, align 8
  %64 = sext i32 %59 to i64
  %65 = getelementptr inbounds %struct.TfLiteTensor, %struct.TfLiteTensor* %63, i64 %64
  br label %66

66:                                               ; preds = %56, %61
  %67 = phi %struct.TfLiteTensor* [ %65, %61 ], [ null, %56 ]
  %68 = getelementptr inbounds %struct.TfLiteNode, %struct.TfLiteNode* %1, i64 0, i32 1
  %69 = load %struct.TfLiteIntArray*, %struct.TfLiteIntArray** %68, align 8
  %70 = getelementptr inbounds %struct.TfLiteIntArray, %struct.TfLiteIntArray* %69, i64 0, i32 1, i64 0
  %71 = load i32, i32* %70, align 4
  %72 = icmp slt i32 %71, 0
  br i1 %72, label %78, label %73

73:                                               ; preds = %66
  %74 = getelementptr inbounds %struct.TfLiteContext, %struct.TfLiteContext* %0, i64 0, i32 2
  %75 = load %struct.TfLiteTensor*, %struct.TfLiteTensor** %74, align 8
  %76 = sext i32 %71 to i64
  %77 = getelementptr inbounds %struct.TfLiteTensor, %struct.TfLiteTensor* %75, i64 %76
  br label %78

78:                                               ; preds = %66, %73
  %79 = phi %struct.TfLiteTensor* [ %77, %73 ], [ null, %66 ]
  %80 = tail call zeroext i1 @_ZN6tflite14HaveSameShapesEPK12TfLiteTensorS2_(%struct.TfLiteTensor* %57, %struct.TfLiteTensor* %67) #8
  %81 = getelementptr inbounds %struct.TfLiteTensor, %struct.TfLiteTensor* %57, i64 0, i32 0
  %82 = load i32, i32* %81, align 8
  switch i32 %82, label %2490 [
    i32 1, label %83
    i32 2, label %598
    i32 4, label %1109
    i32 3, label %1524
    i32 9, label %2007
  ]

83:                                               ; preds = %78
  %84 = bitcast %"struct.tflite::ComparisonParams"* %28 to i8*
  call void @llvm.lifetime.start.p0i8(i64 32, i8* nonnull %84) #8
  call void @llvm.memset.p0i8.i64(i8* nonnull align 4 %84, i8 -86, i64 32, i1 false) #8
  br i1 %80, label %186, label %85

85:                                               ; preds = %83
  %86 = bitcast %"class.tflite::RuntimeShape"* %29 to i8*
  call void @llvm.lifetime.start.p0i8(i64 32, i8* nonnull %86) #8
  %87 = icmp eq %struct.TfLiteTensor* %57, null
  br i1 %87, label %88, label %90

88:                                               ; preds = %85
  %89 = getelementptr inbounds %"class.tflite::RuntimeShape", %"class.tflite::RuntimeShape"* %29, i64 0, i32 0
  store i32 0, i32* %89, align 8, !alias.scope !318
  br label %118

90:                                               ; preds = %85
  %91 = getelementptr inbounds %struct.TfLiteTensor, %struct.TfLiteTensor* %57, i64 0, i32 2
  %92 = load %struct.TfLiteIntArray*, %struct.TfLiteIntArray** %91, align 8, !noalias !318
  %93 = getelementptr inbounds %struct.TfLiteIntArray, %struct.TfLiteIntArray* %92, i64 0, i32 0
  %94 = load i32, i32* %93, align 4, !noalias !318
  %95 = getelementptr inbounds %struct.TfLiteIntArray, %struct.TfLiteIntArray* %92, i64 0, i32 1, i64 0
  %96 = getelementptr inbounds %"class.tflite::RuntimeShape", %"class.tflite::RuntimeShape"* %29, i64 0, i32 0
  store i32 %94, i32* %96, align 8, !alias.scope !318
  %97 = icmp sgt i32 %94, 5
  br i1 %97, label %98, label %105

98:                                               ; preds = %90
  %99 = sext i32 %94 to i64
  %100 = shl nsw i64 %99, 2
  %101 = tail call i8* @_Znam(i64 %100) #9, !noalias !318
  %102 = getelementptr inbounds %"class.tflite::RuntimeShape", %"class.tflite::RuntimeShape"* %29, i64 0, i32 1, i32 0
  %103 = bitcast i32** %102 to i8**
  store i8* %101, i8** %103, align 8, !alias.scope !318
  %104 = bitcast i8* %101 to i32*
  br label %110

105:                                              ; preds = %90
  %106 = getelementptr inbounds %"class.tflite::RuntimeShape", %"class.tflite::RuntimeShape"* %29, i64 0, i32 1
  %107 = bitcast %union.anon* %106 to i32*
  %108 = sext i32 %94 to i64
  %109 = shl nsw i64 %108, 2
  br label %110

110:                                              ; preds = %105, %98
  %111 = phi i64 [ %100, %98 ], [ %109, %105 ]
  %112 = phi i32* [ %104, %98 ], [ %107, %105 ]
  %113 = bitcast i32* %112 to i8*
  %114 = bitcast i32* %95 to i8*
  call void @llvm.memcpy.p0i8.p0i8.i64(i8* align 4 %113, i8* align 4 %114, i64 %111, i1 false) #8
  %115 = getelementptr inbounds %struct.TfLiteTensor, %struct.TfLiteTensor* %57, i64 0, i32 1
  %116 = bitcast %union.TfLitePtrUnion* %115 to float**
  %117 = load float*, float** %116, align 8
  br label %118

118:                                              ; preds = %110, %88
  %119 = phi float* [ %117, %110 ], [ null, %88 ]
  %120 = bitcast %"class.tflite::RuntimeShape"* %30 to i8*
  call void @llvm.lifetime.start.p0i8(i64 32, i8* nonnull %120) #8
  %121 = icmp eq %struct.TfLiteTensor* %67, null
  br i1 %121, label %122, label %124

122:                                              ; preds = %118
  %123 = getelementptr inbounds %"class.tflite::RuntimeShape", %"class.tflite::RuntimeShape"* %30, i64 0, i32 0
  store i32 0, i32* %123, align 8, !alias.scope !321
  br label %152

124:                                              ; preds = %118
  %125 = getelementptr inbounds %struct.TfLiteTensor, %struct.TfLiteTensor* %67, i64 0, i32 2
  %126 = load %struct.TfLiteIntArray*, %struct.TfLiteIntArray** %125, align 8, !noalias !321
  %127 = getelementptr inbounds %struct.TfLiteIntArray, %struct.TfLiteIntArray* %126, i64 0, i32 0
  %128 = load i32, i32* %127, align 4, !noalias !321
  %129 = getelementptr inbounds %struct.TfLiteIntArray, %struct.TfLiteIntArray* %126, i64 0, i32 1, i64 0
  %130 = getelementptr inbounds %"class.tflite::RuntimeShape", %"class.tflite::RuntimeShape"* %30, i64 0, i32 0
  store i32 %128, i32* %130, align 8, !alias.scope !321
  %131 = icmp sgt i32 %128, 5
  br i1 %131, label %132, label %139

132:                                              ; preds = %124
  %133 = sext i32 %128 to i64
  %134 = shl nsw i64 %133, 2
  %135 = tail call i8* @_Znam(i64 %134) #9, !noalias !321
  %136 = getelementptr inbounds %"class.tflite::RuntimeShape", %"class.tflite::RuntimeShape"* %30, i64 0, i32 1, i32 0
  %137 = bitcast i32** %136 to i8**
  store i8* %135, i8** %137, align 8, !alias.scope !321
  %138 = bitcast i8* %135 to i32*
  br label %144

139:                                              ; preds = %124
  %140 = getelementptr inbounds %"class.tflite::RuntimeShape", %"class.tflite::RuntimeShape"* %30, i64 0, i32 1
  %141 = bitcast %union.anon* %140 to i32*
  %142 = sext i32 %128 to i64
  %143 = shl nsw i64 %142, 2
  br label %144

144:                                              ; preds = %139, %132
  %145 = phi i64 [ %134, %132 ], [ %143, %139 ]
  %146 = phi i32* [ %138, %132 ], [ %141, %139 ]
  %147 = bitcast i32* %146 to i8*
  %148 = bitcast i32* %129 to i8*
  call void @llvm.memcpy.p0i8.p0i8.i64(i8* align 4 %147, i8* align 4 %148, i64 %145, i1 false) #8
  %149 = getelementptr inbounds %struct.TfLiteTensor, %struct.TfLiteTensor* %67, i64 0, i32 1
  %150 = bitcast %union.TfLitePtrUnion* %149 to float**
  %151 = load float*, float** %150, align 8
  br label %152

152:                                              ; preds = %144, %122
  %153 = phi float* [ %151, %144 ], [ null, %122 ]
  %154 = bitcast %"class.tflite::RuntimeShape"* %31 to i8*
  call void @llvm.lifetime.start.p0i8(i64 32, i8* nonnull %154) #8
  %155 = icmp eq %struct.TfLiteTensor* %79, null
  br i1 %155, label %156, label %158

156:                                              ; preds = %152
  %157 = getelementptr inbounds %"class.tflite::RuntimeShape", %"class.tflite::RuntimeShape"* %31, i64 0, i32 0
  store i32 0, i32* %157, align 8, !alias.scope !324
  br label %565

158:                                              ; preds = %152
  %159 = getelementptr inbounds %struct.TfLiteTensor, %struct.TfLiteTensor* %79, i64 0, i32 2
  %160 = load %struct.TfLiteIntArray*, %struct.TfLiteIntArray** %159, align 8, !noalias !324
  %161 = getelementptr inbounds %struct.TfLiteIntArray, %struct.TfLiteIntArray* %160, i64 0, i32 0
  %162 = load i32, i32* %161, align 4, !noalias !324
  %163 = getelementptr inbounds %struct.TfLiteIntArray, %struct.TfLiteIntArray* %160, i64 0, i32 1, i64 0
  %164 = getelementptr inbounds %"class.tflite::RuntimeShape", %"class.tflite::RuntimeShape"* %31, i64 0, i32 0
  store i32 %162, i32* %164, align 8, !alias.scope !324
  %165 = icmp sgt i32 %162, 5
  br i1 %165, label %166, label %173

166:                                              ; preds = %158
  %167 = sext i32 %162 to i64
  %168 = shl nsw i64 %167, 2
  %169 = tail call i8* @_Znam(i64 %168) #9, !noalias !324
  %170 = getelementptr inbounds %"class.tflite::RuntimeShape", %"class.tflite::RuntimeShape"* %31, i64 0, i32 1, i32 0
  %171 = bitcast i32** %170 to i8**
  store i8* %169, i8** %171, align 8, !alias.scope !324
  %172 = bitcast i8* %169 to i32*
  br label %178

173:                                              ; preds = %158
  %174 = getelementptr inbounds %"class.tflite::RuntimeShape", %"class.tflite::RuntimeShape"* %31, i64 0, i32 1
  %175 = bitcast %union.anon* %174 to i32*
  %176 = sext i32 %162 to i64
  %177 = shl nsw i64 %176, 2
  br label %178

178:                                              ; preds = %173, %166
  %179 = phi i64 [ %168, %166 ], [ %177, %173 ]
  %180 = phi i32* [ %172, %166 ], [ %175, %173 ]
  %181 = bitcast i32* %180 to i8*
  %182 = bitcast i32* %163 to i8*
  call void @llvm.memcpy.p0i8.p0i8.i64(i8* align 4 %181, i8* align 4 %182, i64 %179, i1 false) #8
  %183 = getelementptr inbounds %struct.TfLiteTensor, %struct.TfLiteTensor* %79, i64 0, i32 1
  %184 = bitcast %union.TfLitePtrUnion* %183 to i8**
  %185 = load i8*, i8** %184, align 8
  br label %565

186:                                              ; preds = %83
  %187 = bitcast %"class.tflite::RuntimeShape"* %32 to i8*
  call void @llvm.lifetime.start.p0i8(i64 32, i8* nonnull %187) #8
  %188 = icmp eq %struct.TfLiteTensor* %57, null
  br i1 %188, label %189, label %191

189:                                              ; preds = %186
  %190 = getelementptr inbounds %"class.tflite::RuntimeShape", %"class.tflite::RuntimeShape"* %32, i64 0, i32 0
  store i32 0, i32* %190, align 8, !alias.scope !327
  br label %220

191:                                              ; preds = %186
  %192 = getelementptr inbounds %struct.TfLiteTensor, %struct.TfLiteTensor* %57, i64 0, i32 2
  %193 = load %struct.TfLiteIntArray*, %struct.TfLiteIntArray** %192, align 8, !noalias !327
  %194 = getelementptr inbounds %struct.TfLiteIntArray, %struct.TfLiteIntArray* %193, i64 0, i32 0
  %195 = load i32, i32* %194, align 4, !noalias !327
  %196 = getelementptr inbounds %struct.TfLiteIntArray, %struct.TfLiteIntArray* %193, i64 0, i32 1, i64 0
  %197 = getelementptr inbounds %"class.tflite::RuntimeShape", %"class.tflite::RuntimeShape"* %32, i64 0, i32 0
  store i32 %195, i32* %197, align 8, !alias.scope !327
  %198 = icmp sgt i32 %195, 5
  br i1 %198, label %199, label %206

199:                                              ; preds = %191
  %200 = sext i32 %195 to i64
  %201 = shl nsw i64 %200, 2
  %202 = tail call i8* @_Znam(i64 %201) #9, !noalias !327
  %203 = getelementptr inbounds %"class.tflite::RuntimeShape", %"class.tflite::RuntimeShape"* %32, i64 0, i32 1, i32 0
  %204 = bitcast i32** %203 to i8**
  store i8* %202, i8** %204, align 8, !alias.scope !327
  %205 = bitcast i8* %202 to i32*
  br label %211

206:                                              ; preds = %191
  %207 = getelementptr inbounds %"class.tflite::RuntimeShape", %"class.tflite::RuntimeShape"* %32, i64 0, i32 1
  %208 = bitcast %union.anon* %207 to i32*
  %209 = sext i32 %195 to i64
  %210 = shl nsw i64 %209, 2
  br label %211

211:                                              ; preds = %206, %199
  %212 = phi i64 [ %201, %199 ], [ %210, %206 ]
  %213 = phi i32* [ %205, %199 ], [ %208, %206 ]
  %214 = bitcast i32* %213 to i8*
  %215 = bitcast i32* %196 to i8*
  call void @llvm.memcpy.p0i8.p0i8.i64(i8* align 4 %214, i8* align 4 %215, i64 %212, i1 false) #8
  %216 = getelementptr inbounds %struct.TfLiteTensor, %struct.TfLiteTensor* %57, i64 0, i32 1
  %217 = bitcast %union.TfLitePtrUnion* %216 to float**
  %218 = load float*, float** %217, align 8
  %219 = bitcast float* %218 to i8*
  br label %220

220:                                              ; preds = %211, %189
  %221 = phi i32 [ %195, %211 ], [ 0, %189 ]
  %222 = phi i8* [ %219, %211 ], [ null, %189 ]
  %223 = phi float* [ %218, %211 ], [ null, %189 ]
  %224 = bitcast %"class.tflite::RuntimeShape"* %33 to i8*
  call void @llvm.lifetime.start.p0i8(i64 32, i8* nonnull %224) #8
  %225 = icmp eq %struct.TfLiteTensor* %67, null
  br i1 %225, label %226, label %228

226:                                              ; preds = %220
  %227 = getelementptr inbounds %"class.tflite::RuntimeShape", %"class.tflite::RuntimeShape"* %33, i64 0, i32 0
  store i32 0, i32* %227, align 8, !alias.scope !330
  br label %257

228:                                              ; preds = %220
  %229 = getelementptr inbounds %struct.TfLiteTensor, %struct.TfLiteTensor* %67, i64 0, i32 2
  %230 = load %struct.TfLiteIntArray*, %struct.TfLiteIntArray** %229, align 8, !noalias !330
  %231 = getelementptr inbounds %struct.TfLiteIntArray, %struct.TfLiteIntArray* %230, i64 0, i32 0
  %232 = load i32, i32* %231, align 4, !noalias !330
  %233 = getelementptr inbounds %struct.TfLiteIntArray, %struct.TfLiteIntArray* %230, i64 0, i32 1, i64 0
  %234 = getelementptr inbounds %"class.tflite::RuntimeShape", %"class.tflite::RuntimeShape"* %33, i64 0, i32 0
  store i32 %232, i32* %234, align 8, !alias.scope !330
  %235 = icmp sgt i32 %232, 5
  br i1 %235, label %236, label %243

236:                                              ; preds = %228
  %237 = sext i32 %232 to i64
  %238 = shl nsw i64 %237, 2
  %239 = tail call i8* @_Znam(i64 %238) #9, !noalias !330
  %240 = getelementptr inbounds %"class.tflite::RuntimeShape", %"class.tflite::RuntimeShape"* %33, i64 0, i32 1, i32 0
  %241 = bitcast i32** %240 to i8**
  store i8* %239, i8** %241, align 8, !alias.scope !330
  %242 = bitcast i8* %239 to i32*
  br label %248

243:                                              ; preds = %228
  %244 = getelementptr inbounds %"class.tflite::RuntimeShape", %"class.tflite::RuntimeShape"* %33, i64 0, i32 1
  %245 = bitcast %union.anon* %244 to i32*
  %246 = sext i32 %232 to i64
  %247 = shl nsw i64 %246, 2
  br label %248

248:                                              ; preds = %243, %236
  %249 = phi i64 [ %238, %236 ], [ %247, %243 ]
  %250 = phi i32* [ %242, %236 ], [ %245, %243 ]
  %251 = bitcast i32* %250 to i8*
  %252 = bitcast i32* %233 to i8*
  call void @llvm.memcpy.p0i8.p0i8.i64(i8* align 4 %251, i8* align 4 %252, i64 %249, i1 false) #8
  %253 = getelementptr inbounds %struct.TfLiteTensor, %struct.TfLiteTensor* %67, i64 0, i32 1
  %254 = bitcast %union.TfLitePtrUnion* %253 to float**
  %255 = load float*, float** %254, align 8
  %256 = bitcast float* %255 to i8*
  br label %257

257:                                              ; preds = %248, %226
  %258 = phi i32 [ %232, %248 ], [ 0, %226 ]
  %259 = phi i8* [ %256, %248 ], [ null, %226 ]
  %260 = phi float* [ %255, %248 ], [ null, %226 ]
  %261 = bitcast %"class.tflite::RuntimeShape"* %34 to i8*
  call void @llvm.lifetime.start.p0i8(i64 32, i8* nonnull %261) #8
  %262 = icmp eq %struct.TfLiteTensor* %79, null
  br i1 %262, label %263, label %265

263:                                              ; preds = %257
  %264 = getelementptr inbounds %"class.tflite::RuntimeShape", %"class.tflite::RuntimeShape"* %34, i64 0, i32 0
  store i32 0, i32* %264, align 8, !alias.scope !333
  br label %293

265:                                              ; preds = %257
  %266 = getelementptr inbounds %struct.TfLiteTensor, %struct.TfLiteTensor* %79, i64 0, i32 2
  %267 = load %struct.TfLiteIntArray*, %struct.TfLiteIntArray** %266, align 8, !noalias !333
  %268 = getelementptr inbounds %struct.TfLiteIntArray, %struct.TfLiteIntArray* %267, i64 0, i32 0
  %269 = load i32, i32* %268, align 4, !noalias !333
  %270 = getelementptr inbounds %struct.TfLiteIntArray, %struct.TfLiteIntArray* %267, i64 0, i32 1, i64 0
  %271 = getelementptr inbounds %"class.tflite::RuntimeShape", %"class.tflite::RuntimeShape"* %34, i64 0, i32 0
  store i32 %269, i32* %271, align 8, !alias.scope !333
  %272 = icmp sgt i32 %269, 5
  br i1 %272, label %273, label %280

273:                                              ; preds = %265
  %274 = sext i32 %269 to i64
  %275 = shl nsw i64 %274, 2
  %276 = tail call i8* @_Znam(i64 %275) #9, !noalias !333
  %277 = getelementptr inbounds %"class.tflite::RuntimeShape", %"class.tflite::RuntimeShape"* %34, i64 0, i32 1, i32 0
  %278 = bitcast i32** %277 to i8**
  store i8* %276, i8** %278, align 8, !alias.scope !333
  %279 = bitcast i8* %276 to i32*
  br label %285

280:                                              ; preds = %265
  %281 = getelementptr inbounds %"class.tflite::RuntimeShape", %"class.tflite::RuntimeShape"* %34, i64 0, i32 1
  %282 = bitcast %union.anon* %281 to i32*
  %283 = sext i32 %269 to i64
  %284 = shl nsw i64 %283, 2
  br label %285

285:                                              ; preds = %280, %273
  %286 = phi i64 [ %275, %273 ], [ %284, %280 ]
  %287 = phi i32* [ %279, %273 ], [ %282, %280 ]
  %288 = bitcast i32* %287 to i8*
  %289 = bitcast i32* %270 to i8*
  call void @llvm.memcpy.p0i8.p0i8.i64(i8* align 4 %288, i8* align 4 %289, i64 %286, i1 false) #8
  %290 = getelementptr inbounds %struct.TfLiteTensor, %struct.TfLiteTensor* %79, i64 0, i32 1
  %291 = bitcast %union.TfLitePtrUnion* %290 to i8**
  %292 = load i8*, i8** %291, align 8
  br label %293

293:                                              ; preds = %285, %263
  %294 = phi i32 [ %269, %285 ], [ 0, %263 ]
  %295 = phi i8* [ %292, %285 ], [ null, %263 ]
  %296 = getelementptr inbounds %"class.tflite::RuntimeShape", %"class.tflite::RuntimeShape"* %32, i64 0, i32 1
  %297 = icmp sgt i32 %221, 5
  br i1 %297, label %298, label %301

298:                                              ; preds = %293
  %299 = getelementptr inbounds %union.anon, %union.anon* %296, i64 0, i32 0
  %300 = load i32*, i32** %299, align 8
  br label %304

301:                                              ; preds = %293
  %302 = bitcast %union.anon* %296 to i32*
  %303 = icmp sgt i32 %221, 0
  br i1 %303, label %304, label %408

304:                                              ; preds = %301, %298
  %305 = phi i32* [ %300, %298 ], [ %302, %301 ]
  %306 = zext i32 %221 to i64
  %307 = icmp ult i32 %221, 8
  br i1 %307, label %393, label %308

308:                                              ; preds = %304
  %309 = and i64 %306, 4294967288
  %310 = add nsw i64 %309, -8
  %311 = lshr exact i64 %310, 3
  %312 = add nuw nsw i64 %311, 1
  %313 = and i64 %312, 3
  %314 = icmp ult i64 %310, 24
  br i1 %314, label %360, label %315

315:                                              ; preds = %308
  %316 = sub nsw i64 %312, %313
  br label %317

317:                                              ; preds = %317, %315
  %318 = phi i64 [ 0, %315 ], [ %357, %317 ]
  %319 = phi <4 x i32> [ <i32 1, i32 1, i32 1, i32 1>, %315 ], [ %355, %317 ]
  %320 = phi <4 x i32> [ <i32 1, i32 1, i32 1, i32 1>, %315 ], [ %356, %317 ]
  %321 = phi i64 [ %316, %315 ], [ %358, %317 ]
  %322 = getelementptr inbounds i32, i32* %305, i64 %318
  %323 = bitcast i32* %322 to <4 x i32>*
  %324 = load <4 x i32>, <4 x i32>* %323, align 4
  %325 = getelementptr inbounds i32, i32* %322, i64 4
  %326 = bitcast i32* %325 to <4 x i32>*
  %327 = load <4 x i32>, <4 x i32>* %326, align 4
  %328 = mul nsw <4 x i32> %324, %319
  %329 = mul nsw <4 x i32> %327, %320
  %330 = or i64 %318, 8
  %331 = getelementptr inbounds i32, i32* %305, i64 %330
  %332 = bitcast i32* %331 to <4 x i32>*
  %333 = load <4 x i32>, <4 x i32>* %332, align 4
  %334 = getelementptr inbounds i32, i32* %331, i64 4
  %335 = bitcast i32* %334 to <4 x i32>*
  %336 = load <4 x i32>, <4 x i32>* %335, align 4
  %337 = mul nsw <4 x i32> %333, %328
  %338 = mul nsw <4 x i32> %336, %329
  %339 = or i64 %318, 16
  %340 = getelementptr inbounds i32, i32* %305, i64 %339
  %341 = bitcast i32* %340 to <4 x i32>*
  %342 = load <4 x i32>, <4 x i32>* %341, align 4
  %343 = getelementptr inbounds i32, i32* %340, i64 4
  %344 = bitcast i32* %343 to <4 x i32>*
  %345 = load <4 x i32>, <4 x i32>* %344, align 4
  %346 = mul nsw <4 x i32> %342, %337
  %347 = mul nsw <4 x i32> %345, %338
  %348 = or i64 %318, 24
  %349 = getelementptr inbounds i32, i32* %305, i64 %348
  %350 = bitcast i32* %349 to <4 x i32>*
  %351 = load <4 x i32>, <4 x i32>* %350, align 4
  %352 = getelementptr inbounds i32, i32* %349, i64 4
  %353 = bitcast i32* %352 to <4 x i32>*
  %354 = load <4 x i32>, <4 x i32>* %353, align 4
  %355 = mul nsw <4 x i32> %351, %346
  %356 = mul nsw <4 x i32> %354, %347
  %357 = add i64 %318, 32
  %358 = add i64 %321, -4
  %359 = icmp eq i64 %358, 0
  br i1 %359, label %360, label %317, !llvm.loop !336

360:                                              ; preds = %317, %308
  %361 = phi <4 x i32> [ undef, %308 ], [ %355, %317 ]
  %362 = phi <4 x i32> [ undef, %308 ], [ %356, %317 ]
  %363 = phi i64 [ 0, %308 ], [ %357, %317 ]
  %364 = phi <4 x i32> [ <i32 1, i32 1, i32 1, i32 1>, %308 ], [ %355, %317 ]
  %365 = phi <4 x i32> [ <i32 1, i32 1, i32 1, i32 1>, %308 ], [ %356, %317 ]
  %366 = icmp eq i64 %313, 0
  br i1 %366, label %383, label %367

367:                                              ; preds = %360, %367
  %368 = phi i64 [ %380, %367 ], [ %363, %360 ]
  %369 = phi <4 x i32> [ %378, %367 ], [ %364, %360 ]
  %370 = phi <4 x i32> [ %379, %367 ], [ %365, %360 ]
  %371 = phi i64 [ %381, %367 ], [ %313, %360 ]
  %372 = getelementptr inbounds i32, i32* %305, i64 %368
  %373 = bitcast i32* %372 to <4 x i32>*
  %374 = load <4 x i32>, <4 x i32>* %373, align 4
  %375 = getelementptr inbounds i32, i32* %372, i64 4
  %376 = bitcast i32* %375 to <4 x i32>*
  %377 = load <4 x i32>, <4 x i32>* %376, align 4
  %378 = mul nsw <4 x i32> %374, %369
  %379 = mul nsw <4 x i32> %377, %370
  %380 = add i64 %368, 8
  %381 = add i64 %371, -1
  %382 = icmp eq i64 %381, 0
  br i1 %382, label %383, label %367, !llvm.loop !337

383:                                              ; preds = %367, %360
  %384 = phi <4 x i32> [ %361, %360 ], [ %378, %367 ]
  %385 = phi <4 x i32> [ %362, %360 ], [ %379, %367 ]
  %386 = mul <4 x i32> %385, %384
  %387 = shufflevector <4 x i32> %386, <4 x i32> undef, <4 x i32> <i32 2, i32 3, i32 undef, i32 undef>
  %388 = mul <4 x i32> %386, %387
  %389 = shufflevector <4 x i32> %388, <4 x i32> undef, <4 x i32> <i32 1, i32 undef, i32 undef, i32 undef>
  %390 = mul <4 x i32> %388, %389
  %391 = extractelement <4 x i32> %390, i32 0
  %392 = icmp eq i64 %309, %306
  br i1 %392, label %404, label %393

393:                                              ; preds = %383, %304
  %394 = phi i64 [ 0, %304 ], [ %309, %383 ]
  %395 = phi i32 [ 1, %304 ], [ %391, %383 ]
  br label %396

396:                                              ; preds = %393, %396
  %397 = phi i64 [ %402, %396 ], [ %394, %393 ]
  %398 = phi i32 [ %401, %396 ], [ %395, %393 ]
  %399 = getelementptr inbounds i32, i32* %305, i64 %397
  %400 = load i32, i32* %399, align 4
  %401 = mul nsw i32 %400, %398
  %402 = add nuw nsw i64 %397, 1
  %403 = icmp eq i64 %402, %306
  br i1 %403, label %404, label %396, !llvm.loop !338

404:                                              ; preds = %396, %383
  %405 = phi i32 [ %391, %383 ], [ %401, %396 ]
  %406 = sext i32 %405 to i64
  %407 = icmp sgt i32 %405, 0
  br i1 %407, label %408, label %542

408:                                              ; preds = %404, %301
  %409 = phi i64 [ %406, %404 ], [ 1, %301 ]
  %410 = icmp ult i64 %409, 8
  br i1 %410, label %506, label %411

411:                                              ; preds = %408
  %412 = getelementptr i8, i8* %295, i64 %409
  %413 = getelementptr float, float* %260, i64 %409
  %414 = bitcast float* %413 to i8*
  %415 = getelementptr float, float* %223, i64 %409
  %416 = bitcast float* %415 to i8*
  %417 = icmp ult i8* %295, %414
  %418 = icmp ult i8* %259, %412
  %419 = and i1 %417, %418
  %420 = icmp ult i8* %295, %416
  %421 = icmp ult i8* %222, %412
  %422 = and i1 %420, %421
  %423 = or i1 %419, %422
  br i1 %423, label %506, label %424

424:                                              ; preds = %411
  %425 = and i64 %409, -8
  %426 = add nsw i64 %425, -8
  %427 = lshr exact i64 %426, 3
  %428 = add nuw nsw i64 %427, 1
  %429 = and i64 %428, 1
  %430 = icmp eq i64 %426, 0
  br i1 %430, label %480, label %431

431:                                              ; preds = %424
  %432 = sub nuw nsw i64 %428, %429
  br label %433

433:                                              ; preds = %433, %431
  %434 = phi i64 [ 0, %431 ], [ %477, %433 ]
  %435 = phi i64 [ %432, %431 ], [ %478, %433 ]
  %436 = getelementptr inbounds float, float* %223, i64 %434
  %437 = bitcast float* %436 to <4 x float>*
  %438 = load <4 x float>, <4 x float>* %437, align 4, !alias.scope !339
  %439 = getelementptr inbounds float, float* %436, i64 4
  %440 = bitcast float* %439 to <4 x float>*
  %441 = load <4 x float>, <4 x float>* %440, align 4, !alias.scope !339
  %442 = getelementptr inbounds float, float* %260, i64 %434
  %443 = bitcast float* %442 to <4 x float>*
  %444 = load <4 x float>, <4 x float>* %443, align 4, !alias.scope !342
  %445 = getelementptr inbounds float, float* %442, i64 4
  %446 = bitcast float* %445 to <4 x float>*
  %447 = load <4 x float>, <4 x float>* %446, align 4, !alias.scope !342
  %448 = fcmp ogt <4 x float> %438, %444
  %449 = fcmp ogt <4 x float> %441, %447
  %450 = getelementptr inbounds i8, i8* %295, i64 %434
  %451 = zext <4 x i1> %448 to <4 x i8>
  %452 = zext <4 x i1> %449 to <4 x i8>
  %453 = bitcast i8* %450 to <4 x i8>*
  store <4 x i8> %451, <4 x i8>* %453, align 1, !alias.scope !344, !noalias !346
  %454 = getelementptr inbounds i8, i8* %450, i64 4
  %455 = bitcast i8* %454 to <4 x i8>*
  store <4 x i8> %452, <4 x i8>* %455, align 1, !alias.scope !344, !noalias !346
  %456 = or i64 %434, 8
  %457 = getelementptr inbounds float, float* %223, i64 %456
  %458 = bitcast float* %457 to <4 x float>*
  %459 = load <4 x float>, <4 x float>* %458, align 4, !alias.scope !339
  %460 = getelementptr inbounds float, float* %457, i64 4
  %461 = bitcast float* %460 to <4 x float>*
  %462 = load <4 x float>, <4 x float>* %461, align 4, !alias.scope !339
  %463 = getelementptr inbounds float, float* %260, i64 %456
  %464 = bitcast float* %463 to <4 x float>*
  %465 = load <4 x float>, <4 x float>* %464, align 4, !alias.scope !342
  %466 = getelementptr inbounds float, float* %463, i64 4
  %467 = bitcast float* %466 to <4 x float>*
  %468 = load <4 x float>, <4 x float>* %467, align 4, !alias.scope !342
  %469 = fcmp ogt <4 x float> %459, %465
  %470 = fcmp ogt <4 x float> %462, %468
  %471 = getelementptr inbounds i8, i8* %295, i64 %456
  %472 = zext <4 x i1> %469 to <4 x i8>
  %473 = zext <4 x i1> %470 to <4 x i8>
  %474 = bitcast i8* %471 to <4 x i8>*
  store <4 x i8> %472, <4 x i8>* %474, align 1, !alias.scope !344, !noalias !346
  %475 = getelementptr inbounds i8, i8* %471, i64 4
  %476 = bitcast i8* %475 to <4 x i8>*
  store <4 x i8> %473, <4 x i8>* %476, align 1, !alias.scope !344, !noalias !346
  %477 = add i64 %434, 16
  %478 = add i64 %435, -2
  %479 = icmp eq i64 %478, 0
  br i1 %479, label %480, label %433, !llvm.loop !347

480:                                              ; preds = %433, %424
  %481 = phi i64 [ 0, %424 ], [ %477, %433 ]
  %482 = icmp eq i64 %429, 0
  br i1 %482, label %504, label %483

483:                                              ; preds = %480
  %484 = getelementptr inbounds float, float* %223, i64 %481
  %485 = bitcast float* %484 to <4 x float>*
  %486 = load <4 x float>, <4 x float>* %485, align 4, !alias.scope !339
  %487 = getelementptr inbounds float, float* %484, i64 4
  %488 = bitcast float* %487 to <4 x float>*
  %489 = load <4 x float>, <4 x float>* %488, align 4, !alias.scope !339
  %490 = getelementptr inbounds float, float* %260, i64 %481
  %491 = bitcast float* %490 to <4 x float>*
  %492 = load <4 x float>, <4 x float>* %491, align 4, !alias.scope !342
  %493 = getelementptr inbounds float, float* %490, i64 4
  %494 = bitcast float* %493 to <4 x float>*
  %495 = load <4 x float>, <4 x float>* %494, align 4, !alias.scope !342
  %496 = fcmp ogt <4 x float> %486, %492
  %497 = fcmp ogt <4 x float> %489, %495
  %498 = getelementptr inbounds i8, i8* %295, i64 %481
  %499 = zext <4 x i1> %496 to <4 x i8>
  %500 = zext <4 x i1> %497 to <4 x i8>
  %501 = bitcast i8* %498 to <4 x i8>*
  store <4 x i8> %499, <4 x i8>* %501, align 1, !alias.scope !344, !noalias !346
  %502 = getelementptr inbounds i8, i8* %498, i64 4
  %503 = bitcast i8* %502 to <4 x i8>*
  store <4 x i8> %500, <4 x i8>* %503, align 1, !alias.scope !344, !noalias !346
  br label %504

504:                                              ; preds = %480, %483
  %505 = icmp eq i64 %409, %425
  br i1 %505, label %542, label %506

506:                                              ; preds = %504, %411, %408
  %507 = phi i64 [ 0, %411 ], [ 0, %408 ], [ %425, %504 ]
  %508 = and i64 %409, 1
  %509 = icmp eq i64 %508, 0
  br i1 %509, label %519, label %510

510:                                              ; preds = %506
  %511 = getelementptr inbounds float, float* %223, i64 %507
  %512 = load float, float* %511, align 4
  %513 = getelementptr inbounds float, float* %260, i64 %507
  %514 = load float, float* %513, align 4
  %515 = fcmp ogt float %512, %514
  %516 = getelementptr inbounds i8, i8* %295, i64 %507
  %517 = zext i1 %515 to i8
  store i8 %517, i8* %516, align 1
  %518 = or i64 %507, 1
  br label %519

519:                                              ; preds = %506, %510
  %520 = phi i64 [ %507, %506 ], [ %518, %510 ]
  %521 = or i64 %507, 1
  %522 = icmp eq i64 %409, %521
  br i1 %522, label %542, label %523

523:                                              ; preds = %519, %523
  %524 = phi i64 [ %540, %523 ], [ %520, %519 ]
  %525 = getelementptr inbounds float, float* %223, i64 %524
  %526 = load float, float* %525, align 4
  %527 = getelementptr inbounds float, float* %260, i64 %524
  %528 = load float, float* %527, align 4
  %529 = fcmp ogt float %526, %528
  %530 = getelementptr inbounds i8, i8* %295, i64 %524
  %531 = zext i1 %529 to i8
  store i8 %531, i8* %530, align 1
  %532 = add nuw nsw i64 %524, 1
  %533 = getelementptr inbounds float, float* %223, i64 %532
  %534 = load float, float* %533, align 4
  %535 = getelementptr inbounds float, float* %260, i64 %532
  %536 = load float, float* %535, align 4
  %537 = fcmp ogt float %534, %536
  %538 = getelementptr inbounds i8, i8* %295, i64 %532
  %539 = zext i1 %537 to i8
  store i8 %539, i8* %538, align 1
  %540 = add nuw nsw i64 %524, 2
  %541 = icmp eq i64 %540, %409
  br i1 %541, label %542, label %523, !llvm.loop !348

542:                                              ; preds = %519, %523, %504, %404
  %543 = icmp sgt i32 %294, 5
  br i1 %543, label %544, label %550

544:                                              ; preds = %542
  %545 = getelementptr inbounds %"class.tflite::RuntimeShape", %"class.tflite::RuntimeShape"* %34, i64 0, i32 1, i32 0
  %546 = load i32*, i32** %545, align 8
  %547 = icmp eq i32* %546, null
  br i1 %547, label %550, label %548

548:                                              ; preds = %544
  %549 = bitcast i32* %546 to i8*
  tail call void @_ZdaPv(i8* %549) #9
  br label %550

550:                                              ; preds = %548, %544, %542
  call void @llvm.lifetime.end.p0i8(i64 32, i8* nonnull %261) #8
  %551 = icmp sgt i32 %258, 5
  br i1 %551, label %552, label %558

552:                                              ; preds = %550
  %553 = getelementptr inbounds %"class.tflite::RuntimeShape", %"class.tflite::RuntimeShape"* %33, i64 0, i32 1, i32 0
  %554 = load i32*, i32** %553, align 8
  %555 = icmp eq i32* %554, null
  br i1 %555, label %558, label %556

556:                                              ; preds = %552
  %557 = bitcast i32* %554 to i8*
  tail call void @_ZdaPv(i8* %557) #9
  br label %558

558:                                              ; preds = %556, %552, %550
  call void @llvm.lifetime.end.p0i8(i64 32, i8* nonnull %224) #8
  br i1 %297, label %559, label %596

559:                                              ; preds = %558
  %560 = getelementptr inbounds %"class.tflite::RuntimeShape", %"class.tflite::RuntimeShape"* %32, i64 0, i32 1, i32 0
  %561 = load i32*, i32** %560, align 8
  %562 = icmp eq i32* %561, null
  br i1 %562, label %596, label %563

563:                                              ; preds = %559
  %564 = bitcast i32* %561 to i8*
  tail call void @_ZdaPv(i8* %564) #9
  br label %596

565:                                              ; preds = %178, %156
  %566 = phi i8* [ %185, %178 ], [ null, %156 ]
  call void @_ZN6tflite13reference_ops29BroadcastComparison4DSlowImplIfXadL_ZNS0_9GreaterFnIfEEbT_S3_EEEEvRKNS_16ComparisonParamsERKNS_12RuntimeShapeEPKS3_S9_SB_S9_Pb(%"struct.tflite::ComparisonParams"* nonnull dereferenceable(32) %28, %"class.tflite::RuntimeShape"* nonnull dereferenceable(32) %29, float* %119, %"class.tflite::RuntimeShape"* nonnull dereferenceable(32) %30, float* %153, %"class.tflite::RuntimeShape"* nonnull dereferenceable(32) %31, i8* %566) #8
  %567 = getelementptr inbounds %"class.tflite::RuntimeShape", %"class.tflite::RuntimeShape"* %31, i64 0, i32 0
  %568 = load i32, i32* %567, align 8
  %569 = icmp sgt i32 %568, 5
  br i1 %569, label %570, label %576

570:                                              ; preds = %565
  %571 = getelementptr inbounds %"class.tflite::RuntimeShape", %"class.tflite::RuntimeShape"* %31, i64 0, i32 1, i32 0
  %572 = load i32*, i32** %571, align 8
  %573 = icmp eq i32* %572, null
  br i1 %573, label %576, label %574

574:                                              ; preds = %570
  %575 = bitcast i32* %572 to i8*
  call void @_ZdaPv(i8* %575) #9
  br label %576

576:                                              ; preds = %574, %570, %565
  call void @llvm.lifetime.end.p0i8(i64 32, i8* nonnull %154) #8
  %577 = getelementptr inbounds %"class.tflite::RuntimeShape", %"class.tflite::RuntimeShape"* %30, i64 0, i32 0
  %578 = load i32, i32* %577, align 8
  %579 = icmp sgt i32 %578, 5
  br i1 %579, label %580, label %586

580:                                              ; preds = %576
  %581 = getelementptr inbounds %"class.tflite::RuntimeShape", %"class.tflite::RuntimeShape"* %30, i64 0, i32 1, i32 0
  %582 = load i32*, i32** %581, align 8
  %583 = icmp eq i32* %582, null
  br i1 %583, label %586, label %584

584:                                              ; preds = %580
  %585 = bitcast i32* %582 to i8*
  call void @_ZdaPv(i8* %585) #9
  br label %586

586:                                              ; preds = %584, %580, %576
  call void @llvm.lifetime.end.p0i8(i64 32, i8* nonnull %120) #8
  %587 = getelementptr inbounds %"class.tflite::RuntimeShape", %"class.tflite::RuntimeShape"* %29, i64 0, i32 0
  %588 = load i32, i32* %587, align 8
  %589 = icmp sgt i32 %588, 5
  br i1 %589, label %590, label %596

590:                                              ; preds = %586
  %591 = getelementptr inbounds %"class.tflite::RuntimeShape", %"class.tflite::RuntimeShape"* %29, i64 0, i32 1, i32 0
  %592 = load i32*, i32** %591, align 8
  %593 = icmp eq i32* %592, null
  br i1 %593, label %596, label %594

594:                                              ; preds = %590
  %595 = bitcast i32* %592 to i8*
  call void @_ZdaPv(i8* %595) #9
  br label %596

596:                                              ; preds = %586, %590, %594, %558, %559, %563
  %597 = phi i8* [ %187, %563 ], [ %187, %559 ], [ %187, %558 ], [ %86, %594 ], [ %86, %590 ], [ %86, %586 ]
  call void @llvm.lifetime.end.p0i8(i64 32, i8* nonnull %597) #8
  call void @llvm.lifetime.end.p0i8(i64 32, i8* nonnull %84) #8
  br label %2493

598:                                              ; preds = %78
  %599 = bitcast %"struct.tflite::ComparisonParams"* %21 to i8*
  call void @llvm.lifetime.start.p0i8(i64 32, i8* nonnull %599) #8
  call void @llvm.memset.p0i8.i64(i8* nonnull align 4 %599, i8 -86, i64 32, i1 false) #8
  br i1 %80, label %699, label %600

600:                                              ; preds = %598
  %601 = bitcast %"class.tflite::RuntimeShape"* %22 to i8*
  call void @llvm.lifetime.start.p0i8(i64 32, i8* nonnull %601) #8
  %602 = icmp eq %struct.TfLiteTensor* %57, null
  br i1 %602, label %603, label %605

603:                                              ; preds = %600
  %604 = getelementptr inbounds %"class.tflite::RuntimeShape", %"class.tflite::RuntimeShape"* %22, i64 0, i32 0
  store i32 0, i32* %604, align 8, !alias.scope !349
  br label %632

605:                                              ; preds = %600
  %606 = getelementptr inbounds %struct.TfLiteTensor, %struct.TfLiteTensor* %57, i64 0, i32 2
  %607 = load %struct.TfLiteIntArray*, %struct.TfLiteIntArray** %606, align 8, !noalias !349
  %608 = getelementptr inbounds %struct.TfLiteIntArray, %struct.TfLiteIntArray* %607, i64 0, i32 0
  %609 = load i32, i32* %608, align 4, !noalias !349
  %610 = getelementptr inbounds %struct.TfLiteIntArray, %struct.TfLiteIntArray* %607, i64 0, i32 1, i64 0
  %611 = getelementptr inbounds %"class.tflite::RuntimeShape", %"class.tflite::RuntimeShape"* %22, i64 0, i32 0
  store i32 %609, i32* %611, align 8, !alias.scope !349
  %612 = icmp sgt i32 %609, 5
  br i1 %612, label %613, label %620

613:                                              ; preds = %605
  %614 = sext i32 %609 to i64
  %615 = shl nsw i64 %614, 2
  %616 = tail call i8* @_Znam(i64 %615) #9, !noalias !349
  %617 = getelementptr inbounds %"class.tflite::RuntimeShape", %"class.tflite::RuntimeShape"* %22, i64 0, i32 1, i32 0
  %618 = bitcast i32** %617 to i8**
  store i8* %616, i8** %618, align 8, !alias.scope !349
  %619 = bitcast i8* %616 to i32*
  br label %625

620:                                              ; preds = %605
  %621 = getelementptr inbounds %"class.tflite::RuntimeShape", %"class.tflite::RuntimeShape"* %22, i64 0, i32 1
  %622 = bitcast %union.anon* %621 to i32*
  %623 = sext i32 %609 to i64
  %624 = shl nsw i64 %623, 2
  br label %625

625:                                              ; preds = %620, %613
  %626 = phi i64 [ %615, %613 ], [ %624, %620 ]
  %627 = phi i32* [ %619, %613 ], [ %622, %620 ]
  %628 = bitcast i32* %627 to i8*
  %629 = bitcast i32* %610 to i8*
  call void @llvm.memcpy.p0i8.p0i8.i64(i8* align 4 %628, i8* align 4 %629, i64 %626, i1 false) #8
  %630 = getelementptr inbounds %struct.TfLiteTensor, %struct.TfLiteTensor* %57, i64 0, i32 1, i32 0
  %631 = load i32*, i32** %630, align 8
  br label %632

632:                                              ; preds = %625, %603
  %633 = phi i32* [ %631, %625 ], [ null, %603 ]
  %634 = bitcast %"class.tflite::RuntimeShape"* %23 to i8*
  call void @llvm.lifetime.start.p0i8(i64 32, i8* nonnull %634) #8
  %635 = icmp eq %struct.TfLiteTensor* %67, null
  br i1 %635, label %636, label %638

636:                                              ; preds = %632
  %637 = getelementptr inbounds %"class.tflite::RuntimeShape", %"class.tflite::RuntimeShape"* %23, i64 0, i32 0
  store i32 0, i32* %637, align 8, !alias.scope !352
  br label %665

638:                                              ; preds = %632
  %639 = getelementptr inbounds %struct.TfLiteTensor, %struct.TfLiteTensor* %67, i64 0, i32 2
  %640 = load %struct.TfLiteIntArray*, %struct.TfLiteIntArray** %639, align 8, !noalias !352
  %641 = getelementptr inbounds %struct.TfLiteIntArray, %struct.TfLiteIntArray* %640, i64 0, i32 0
  %642 = load i32, i32* %641, align 4, !noalias !352
  %643 = getelementptr inbounds %struct.TfLiteIntArray, %struct.TfLiteIntArray* %640, i64 0, i32 1, i64 0
  %644 = getelementptr inbounds %"class.tflite::RuntimeShape", %"class.tflite::RuntimeShape"* %23, i64 0, i32 0
  store i32 %642, i32* %644, align 8, !alias.scope !352
  %645 = icmp sgt i32 %642, 5
  br i1 %645, label %646, label %653

646:                                              ; preds = %638
  %647 = sext i32 %642 to i64
  %648 = shl nsw i64 %647, 2
  %649 = tail call i8* @_Znam(i64 %648) #9, !noalias !352
  %650 = getelementptr inbounds %"class.tflite::RuntimeShape", %"class.tflite::RuntimeShape"* %23, i64 0, i32 1, i32 0
  %651 = bitcast i32** %650 to i8**
  store i8* %649, i8** %651, align 8, !alias.scope !352
  %652 = bitcast i8* %649 to i32*
  br label %658

653:                                              ; preds = %638
  %654 = getelementptr inbounds %"class.tflite::RuntimeShape", %"class.tflite::RuntimeShape"* %23, i64 0, i32 1
  %655 = bitcast %union.anon* %654 to i32*
  %656 = sext i32 %642 to i64
  %657 = shl nsw i64 %656, 2
  br label %658

658:                                              ; preds = %653, %646
  %659 = phi i64 [ %648, %646 ], [ %657, %653 ]
  %660 = phi i32* [ %652, %646 ], [ %655, %653 ]
  %661 = bitcast i32* %660 to i8*
  %662 = bitcast i32* %643 to i8*
  call void @llvm.memcpy.p0i8.p0i8.i64(i8* align 4 %661, i8* align 4 %662, i64 %659, i1 false) #8
  %663 = getelementptr inbounds %struct.TfLiteTensor, %struct.TfLiteTensor* %67, i64 0, i32 1, i32 0
  %664 = load i32*, i32** %663, align 8
  br label %665

665:                                              ; preds = %658, %636
  %666 = phi i32* [ %664, %658 ], [ null, %636 ]
  %667 = bitcast %"class.tflite::RuntimeShape"* %24 to i8*
  call void @llvm.lifetime.start.p0i8(i64 32, i8* nonnull %667) #8
  %668 = icmp eq %struct.TfLiteTensor* %79, null
  br i1 %668, label %669, label %671

669:                                              ; preds = %665
  %670 = getelementptr inbounds %"class.tflite::RuntimeShape", %"class.tflite::RuntimeShape"* %24, i64 0, i32 0
  store i32 0, i32* %670, align 8, !alias.scope !355
  br label %1076

671:                                              ; preds = %665
  %672 = getelementptr inbounds %struct.TfLiteTensor, %struct.TfLiteTensor* %79, i64 0, i32 2
  %673 = load %struct.TfLiteIntArray*, %struct.TfLiteIntArray** %672, align 8, !noalias !355
  %674 = getelementptr inbounds %struct.TfLiteIntArray, %struct.TfLiteIntArray* %673, i64 0, i32 0
  %675 = load i32, i32* %674, align 4, !noalias !355
  %676 = getelementptr inbounds %struct.TfLiteIntArray, %struct.TfLiteIntArray* %673, i64 0, i32 1, i64 0
  %677 = getelementptr inbounds %"class.tflite::RuntimeShape", %"class.tflite::RuntimeShape"* %24, i64 0, i32 0
  store i32 %675, i32* %677, align 8, !alias.scope !355
  %678 = icmp sgt i32 %675, 5
  br i1 %678, label %679, label %686

679:                                              ; preds = %671
  %680 = sext i32 %675 to i64
  %681 = shl nsw i64 %680, 2
  %682 = tail call i8* @_Znam(i64 %681) #9, !noalias !355
  %683 = getelementptr inbounds %"class.tflite::RuntimeShape", %"class.tflite::RuntimeShape"* %24, i64 0, i32 1, i32 0
  %684 = bitcast i32** %683 to i8**
  store i8* %682, i8** %684, align 8, !alias.scope !355
  %685 = bitcast i8* %682 to i32*
  br label %691

686:                                              ; preds = %671
  %687 = getelementptr inbounds %"class.tflite::RuntimeShape", %"class.tflite::RuntimeShape"* %24, i64 0, i32 1
  %688 = bitcast %union.anon* %687 to i32*
  %689 = sext i32 %675 to i64
  %690 = shl nsw i64 %689, 2
  br label %691

691:                                              ; preds = %686, %679
  %692 = phi i64 [ %681, %679 ], [ %690, %686 ]
  %693 = phi i32* [ %685, %679 ], [ %688, %686 ]
  %694 = bitcast i32* %693 to i8*
  %695 = bitcast i32* %676 to i8*
  call void @llvm.memcpy.p0i8.p0i8.i64(i8* align 4 %694, i8* align 4 %695, i64 %692, i1 false) #8
  %696 = getelementptr inbounds %struct.TfLiteTensor, %struct.TfLiteTensor* %79, i64 0, i32 1
  %697 = bitcast %union.TfLitePtrUnion* %696 to i8**
  %698 = load i8*, i8** %697, align 8
  br label %1076

699:                                              ; preds = %598
  %700 = bitcast %"class.tflite::RuntimeShape"* %25 to i8*
  call void @llvm.lifetime.start.p0i8(i64 32, i8* nonnull %700) #8
  %701 = icmp eq %struct.TfLiteTensor* %57, null
  br i1 %701, label %702, label %704

702:                                              ; preds = %699
  %703 = getelementptr inbounds %"class.tflite::RuntimeShape", %"class.tflite::RuntimeShape"* %25, i64 0, i32 0
  store i32 0, i32* %703, align 8, !alias.scope !358
  br label %732

704:                                              ; preds = %699
  %705 = getelementptr inbounds %struct.TfLiteTensor, %struct.TfLiteTensor* %57, i64 0, i32 2
  %706 = load %struct.TfLiteIntArray*, %struct.TfLiteIntArray** %705, align 8, !noalias !358
  %707 = getelementptr inbounds %struct.TfLiteIntArray, %struct.TfLiteIntArray* %706, i64 0, i32 0
  %708 = load i32, i32* %707, align 4, !noalias !358
  %709 = getelementptr inbounds %struct.TfLiteIntArray, %struct.TfLiteIntArray* %706, i64 0, i32 1, i64 0
  %710 = getelementptr inbounds %"class.tflite::RuntimeShape", %"class.tflite::RuntimeShape"* %25, i64 0, i32 0
  store i32 %708, i32* %710, align 8, !alias.scope !358
  %711 = icmp sgt i32 %708, 5
  br i1 %711, label %712, label %719

712:                                              ; preds = %704
  %713 = sext i32 %708 to i64
  %714 = shl nsw i64 %713, 2
  %715 = tail call i8* @_Znam(i64 %714) #9, !noalias !358
  %716 = getelementptr inbounds %"class.tflite::RuntimeShape", %"class.tflite::RuntimeShape"* %25, i64 0, i32 1, i32 0
  %717 = bitcast i32** %716 to i8**
  store i8* %715, i8** %717, align 8, !alias.scope !358
  %718 = bitcast i8* %715 to i32*
  br label %724

719:                                              ; preds = %704
  %720 = getelementptr inbounds %"class.tflite::RuntimeShape", %"class.tflite::RuntimeShape"* %25, i64 0, i32 1
  %721 = bitcast %union.anon* %720 to i32*
  %722 = sext i32 %708 to i64
  %723 = shl nsw i64 %722, 2
  br label %724

724:                                              ; preds = %719, %712
  %725 = phi i64 [ %714, %712 ], [ %723, %719 ]
  %726 = phi i32* [ %718, %712 ], [ %721, %719 ]
  %727 = bitcast i32* %726 to i8*
  %728 = bitcast i32* %709 to i8*
  call void @llvm.memcpy.p0i8.p0i8.i64(i8* align 4 %727, i8* align 4 %728, i64 %725, i1 false) #8
  %729 = getelementptr inbounds %struct.TfLiteTensor, %struct.TfLiteTensor* %57, i64 0, i32 1, i32 0
  %730 = load i32*, i32** %729, align 8
  %731 = bitcast i32* %730 to i8*
  br label %732

732:                                              ; preds = %724, %702
  %733 = phi i32 [ %708, %724 ], [ 0, %702 ]
  %734 = phi i8* [ %731, %724 ], [ null, %702 ]
  %735 = phi i32* [ %730, %724 ], [ null, %702 ]
  %736 = bitcast %"class.tflite::RuntimeShape"* %26 to i8*
  call void @llvm.lifetime.start.p0i8(i64 32, i8* nonnull %736) #8
  %737 = icmp eq %struct.TfLiteTensor* %67, null
  br i1 %737, label %738, label %740

738:                                              ; preds = %732
  %739 = getelementptr inbounds %"class.tflite::RuntimeShape", %"class.tflite::RuntimeShape"* %26, i64 0, i32 0
  store i32 0, i32* %739, align 8, !alias.scope !361
  br label %768

740:                                              ; preds = %732
  %741 = getelementptr inbounds %struct.TfLiteTensor, %struct.TfLiteTensor* %67, i64 0, i32 2
  %742 = load %struct.TfLiteIntArray*, %struct.TfLiteIntArray** %741, align 8, !noalias !361
  %743 = getelementptr inbounds %struct.TfLiteIntArray, %struct.TfLiteIntArray* %742, i64 0, i32 0
  %744 = load i32, i32* %743, align 4, !noalias !361
  %745 = getelementptr inbounds %struct.TfLiteIntArray, %struct.TfLiteIntArray* %742, i64 0, i32 1, i64 0
  %746 = getelementptr inbounds %"class.tflite::RuntimeShape", %"class.tflite::RuntimeShape"* %26, i64 0, i32 0
  store i32 %744, i32* %746, align 8, !alias.scope !361
  %747 = icmp sgt i32 %744, 5
  br i1 %747, label %748, label %755

748:                                              ; preds = %740
  %749 = sext i32 %744 to i64
  %750 = shl nsw i64 %749, 2
  %751 = tail call i8* @_Znam(i64 %750) #9, !noalias !361
  %752 = getelementptr inbounds %"class.tflite::RuntimeShape", %"class.tflite::RuntimeShape"* %26, i64 0, i32 1, i32 0
  %753 = bitcast i32** %752 to i8**
  store i8* %751, i8** %753, align 8, !alias.scope !361
  %754 = bitcast i8* %751 to i32*
  br label %760

755:                                              ; preds = %740
  %756 = getelementptr inbounds %"class.tflite::RuntimeShape", %"class.tflite::RuntimeShape"* %26, i64 0, i32 1
  %757 = bitcast %union.anon* %756 to i32*
  %758 = sext i32 %744 to i64
  %759 = shl nsw i64 %758, 2
  br label %760

760:                                              ; preds = %755, %748
  %761 = phi i64 [ %750, %748 ], [ %759, %755 ]
  %762 = phi i32* [ %754, %748 ], [ %757, %755 ]
  %763 = bitcast i32* %762 to i8*
  %764 = bitcast i32* %745 to i8*
  call void @llvm.memcpy.p0i8.p0i8.i64(i8* align 4 %763, i8* align 4 %764, i64 %761, i1 false) #8
  %765 = getelementptr inbounds %struct.TfLiteTensor, %struct.TfLiteTensor* %67, i64 0, i32 1, i32 0
  %766 = load i32*, i32** %765, align 8
  %767 = bitcast i32* %766 to i8*
  br label %768

768:                                              ; preds = %760, %738
  %769 = phi i32 [ %744, %760 ], [ 0, %738 ]
  %770 = phi i8* [ %767, %760 ], [ null, %738 ]
  %771 = phi i32* [ %766, %760 ], [ null, %738 ]
  %772 = bitcast %"class.tflite::RuntimeShape"* %27 to i8*
  call void @llvm.lifetime.start.p0i8(i64 32, i8* nonnull %772) #8
  %773 = icmp eq %struct.TfLiteTensor* %79, null
  br i1 %773, label %774, label %776

774:                                              ; preds = %768
  %775 = getelementptr inbounds %"class.tflite::RuntimeShape", %"class.tflite::RuntimeShape"* %27, i64 0, i32 0
  store i32 0, i32* %775, align 8, !alias.scope !364
  br label %804

776:                                              ; preds = %768
  %777 = getelementptr inbounds %struct.TfLiteTensor, %struct.TfLiteTensor* %79, i64 0, i32 2
  %778 = load %struct.TfLiteIntArray*, %struct.TfLiteIntArray** %777, align 8, !noalias !364
  %779 = getelementptr inbounds %struct.TfLiteIntArray, %struct.TfLiteIntArray* %778, i64 0, i32 0
  %780 = load i32, i32* %779, align 4, !noalias !364
  %781 = getelementptr inbounds %struct.TfLiteIntArray, %struct.TfLiteIntArray* %778, i64 0, i32 1, i64 0
  %782 = getelementptr inbounds %"class.tflite::RuntimeShape", %"class.tflite::RuntimeShape"* %27, i64 0, i32 0
  store i32 %780, i32* %782, align 8, !alias.scope !364
  %783 = icmp sgt i32 %780, 5
  br i1 %783, label %784, label %791

784:                                              ; preds = %776
  %785 = sext i32 %780 to i64
  %786 = shl nsw i64 %785, 2
  %787 = tail call i8* @_Znam(i64 %786) #9, !noalias !364
  %788 = getelementptr inbounds %"class.tflite::RuntimeShape", %"class.tflite::RuntimeShape"* %27, i64 0, i32 1, i32 0
  %789 = bitcast i32** %788 to i8**
  store i8* %787, i8** %789, align 8, !alias.scope !364
  %790 = bitcast i8* %787 to i32*
  br label %796

791:                                              ; preds = %776
  %792 = getelementptr inbounds %"class.tflite::RuntimeShape", %"class.tflite::RuntimeShape"* %27, i64 0, i32 1
  %793 = bitcast %union.anon* %792 to i32*
  %794 = sext i32 %780 to i64
  %795 = shl nsw i64 %794, 2
  br label %796

796:                                              ; preds = %791, %784
  %797 = phi i64 [ %786, %784 ], [ %795, %791 ]
  %798 = phi i32* [ %790, %784 ], [ %793, %791 ]
  %799 = bitcast i32* %798 to i8*
  %800 = bitcast i32* %781 to i8*
  call void @llvm.memcpy.p0i8.p0i8.i64(i8* align 4 %799, i8* align 4 %800, i64 %797, i1 false) #8
  %801 = getelementptr inbounds %struct.TfLiteTensor, %struct.TfLiteTensor* %79, i64 0, i32 1
  %802 = bitcast %union.TfLitePtrUnion* %801 to i8**
  %803 = load i8*, i8** %802, align 8
  br label %804

804:                                              ; preds = %796, %774
  %805 = phi i32 [ %780, %796 ], [ 0, %774 ]
  %806 = phi i8* [ %803, %796 ], [ null, %774 ]
  %807 = getelementptr inbounds %"class.tflite::RuntimeShape", %"class.tflite::RuntimeShape"* %25, i64 0, i32 1
  %808 = icmp sgt i32 %733, 5
  br i1 %808, label %809, label %812

809:                                              ; preds = %804
  %810 = getelementptr inbounds %union.anon, %union.anon* %807, i64 0, i32 0
  %811 = load i32*, i32** %810, align 8
  br label %815

812:                                              ; preds = %804
  %813 = bitcast %union.anon* %807 to i32*
  %814 = icmp sgt i32 %733, 0
  br i1 %814, label %815, label %919

815:                                              ; preds = %812, %809
  %816 = phi i32* [ %811, %809 ], [ %813, %812 ]
  %817 = zext i32 %733 to i64
  %818 = icmp ult i32 %733, 8
  br i1 %818, label %904, label %819

819:                                              ; preds = %815
  %820 = and i64 %817, 4294967288
  %821 = add nsw i64 %820, -8
  %822 = lshr exact i64 %821, 3
  %823 = add nuw nsw i64 %822, 1
  %824 = and i64 %823, 3
  %825 = icmp ult i64 %821, 24
  br i1 %825, label %871, label %826

826:                                              ; preds = %819
  %827 = sub nsw i64 %823, %824
  br label %828

828:                                              ; preds = %828, %826
  %829 = phi i64 [ 0, %826 ], [ %868, %828 ]
  %830 = phi <4 x i32> [ <i32 1, i32 1, i32 1, i32 1>, %826 ], [ %866, %828 ]
  %831 = phi <4 x i32> [ <i32 1, i32 1, i32 1, i32 1>, %826 ], [ %867, %828 ]
  %832 = phi i64 [ %827, %826 ], [ %869, %828 ]
  %833 = getelementptr inbounds i32, i32* %816, i64 %829
  %834 = bitcast i32* %833 to <4 x i32>*
  %835 = load <4 x i32>, <4 x i32>* %834, align 4
  %836 = getelementptr inbounds i32, i32* %833, i64 4
  %837 = bitcast i32* %836 to <4 x i32>*
  %838 = load <4 x i32>, <4 x i32>* %837, align 4
  %839 = mul nsw <4 x i32> %835, %830
  %840 = mul nsw <4 x i32> %838, %831
  %841 = or i64 %829, 8
  %842 = getelementptr inbounds i32, i32* %816, i64 %841
  %843 = bitcast i32* %842 to <4 x i32>*
  %844 = load <4 x i32>, <4 x i32>* %843, align 4
  %845 = getelementptr inbounds i32, i32* %842, i64 4
  %846 = bitcast i32* %845 to <4 x i32>*
  %847 = load <4 x i32>, <4 x i32>* %846, align 4
  %848 = mul nsw <4 x i32> %844, %839
  %849 = mul nsw <4 x i32> %847, %840
  %850 = or i64 %829, 16
  %851 = getelementptr inbounds i32, i32* %816, i64 %850
  %852 = bitcast i32* %851 to <4 x i32>*
  %853 = load <4 x i32>, <4 x i32>* %852, align 4
  %854 = getelementptr inbounds i32, i32* %851, i64 4
  %855 = bitcast i32* %854 to <4 x i32>*
  %856 = load <4 x i32>, <4 x i32>* %855, align 4
  %857 = mul nsw <4 x i32> %853, %848
  %858 = mul nsw <4 x i32> %856, %849
  %859 = or i64 %829, 24
  %860 = getelementptr inbounds i32, i32* %816, i64 %859
  %861 = bitcast i32* %860 to <4 x i32>*
  %862 = load <4 x i32>, <4 x i32>* %861, align 4
  %863 = getelementptr inbounds i32, i32* %860, i64 4
  %864 = bitcast i32* %863 to <4 x i32>*
  %865 = load <4 x i32>, <4 x i32>* %864, align 4
  %866 = mul nsw <4 x i32> %862, %857
  %867 = mul nsw <4 x i32> %865, %858
  %868 = add i64 %829, 32
  %869 = add i64 %832, -4
  %870 = icmp eq i64 %869, 0
  br i1 %870, label %871, label %828, !llvm.loop !367

871:                                              ; preds = %828, %819
  %872 = phi <4 x i32> [ undef, %819 ], [ %866, %828 ]
  %873 = phi <4 x i32> [ undef, %819 ], [ %867, %828 ]
  %874 = phi i64 [ 0, %819 ], [ %868, %828 ]
  %875 = phi <4 x i32> [ <i32 1, i32 1, i32 1, i32 1>, %819 ], [ %866, %828 ]
  %876 = phi <4 x i32> [ <i32 1, i32 1, i32 1, i32 1>, %819 ], [ %867, %828 ]
  %877 = icmp eq i64 %824, 0
  br i1 %877, label %894, label %878

878:                                              ; preds = %871, %878
  %879 = phi i64 [ %891, %878 ], [ %874, %871 ]
  %880 = phi <4 x i32> [ %889, %878 ], [ %875, %871 ]
  %881 = phi <4 x i32> [ %890, %878 ], [ %876, %871 ]
  %882 = phi i64 [ %892, %878 ], [ %824, %871 ]
  %883 = getelementptr inbounds i32, i32* %816, i64 %879
  %884 = bitcast i32* %883 to <4 x i32>*
  %885 = load <4 x i32>, <4 x i32>* %884, align 4
  %886 = getelementptr inbounds i32, i32* %883, i64 4
  %887 = bitcast i32* %886 to <4 x i32>*
  %888 = load <4 x i32>, <4 x i32>* %887, align 4
  %889 = mul nsw <4 x i32> %885, %880
  %890 = mul nsw <4 x i32> %888, %881
  %891 = add i64 %879, 8
  %892 = add i64 %882, -1
  %893 = icmp eq i64 %892, 0
  br i1 %893, label %894, label %878, !llvm.loop !368

894:                                              ; preds = %878, %871
  %895 = phi <4 x i32> [ %872, %871 ], [ %889, %878 ]
  %896 = phi <4 x i32> [ %873, %871 ], [ %890, %878 ]
  %897 = mul <4 x i32> %896, %895
  %898 = shufflevector <4 x i32> %897, <4 x i32> undef, <4 x i32> <i32 2, i32 3, i32 undef, i32 undef>
  %899 = mul <4 x i32> %897, %898
  %900 = shufflevector <4 x i32> %899, <4 x i32> undef, <4 x i32> <i32 1, i32 undef, i32 undef, i32 undef>
  %901 = mul <4 x i32> %899, %900
  %902 = extractelement <4 x i32> %901, i32 0
  %903 = icmp eq i64 %820, %817
  br i1 %903, label %915, label %904

904:                                              ; preds = %894, %815
  %905 = phi i64 [ 0, %815 ], [ %820, %894 ]
  %906 = phi i32 [ 1, %815 ], [ %902, %894 ]
  br label %907

907:                                              ; preds = %904, %907
  %908 = phi i64 [ %913, %907 ], [ %905, %904 ]
  %909 = phi i32 [ %912, %907 ], [ %906, %904 ]
  %910 = getelementptr inbounds i32, i32* %816, i64 %908
  %911 = load i32, i32* %910, align 4
  %912 = mul nsw i32 %911, %909
  %913 = add nuw nsw i64 %908, 1
  %914 = icmp eq i64 %913, %817
  br i1 %914, label %915, label %907, !llvm.loop !369

915:                                              ; preds = %907, %894
  %916 = phi i32 [ %902, %894 ], [ %912, %907 ]
  %917 = sext i32 %916 to i64
  %918 = icmp sgt i32 %916, 0
  br i1 %918, label %919, label %1053

919:                                              ; preds = %915, %812
  %920 = phi i64 [ %917, %915 ], [ 1, %812 ]
  %921 = icmp ult i64 %920, 8
  br i1 %921, label %1017, label %922

922:                                              ; preds = %919
  %923 = getelementptr i8, i8* %806, i64 %920
  %924 = getelementptr i32, i32* %771, i64 %920
  %925 = bitcast i32* %924 to i8*
  %926 = getelementptr i32, i32* %735, i64 %920
  %927 = bitcast i32* %926 to i8*
  %928 = icmp ult i8* %806, %925
  %929 = icmp ult i8* %770, %923
  %930 = and i1 %928, %929
  %931 = icmp ult i8* %806, %927
  %932 = icmp ult i8* %734, %923
  %933 = and i1 %931, %932
  %934 = or i1 %930, %933
  br i1 %934, label %1017, label %935

935:                                              ; preds = %922
  %936 = and i64 %920, -8
  %937 = add nsw i64 %936, -8
  %938 = lshr exact i64 %937, 3
  %939 = add nuw nsw i64 %938, 1
  %940 = and i64 %939, 1
  %941 = icmp eq i64 %937, 0
  br i1 %941, label %991, label %942

942:                                              ; preds = %935
  %943 = sub nuw nsw i64 %939, %940
  br label %944

944:                                              ; preds = %944, %942
  %945 = phi i64 [ 0, %942 ], [ %988, %944 ]
  %946 = phi i64 [ %943, %942 ], [ %989, %944 ]
  %947 = getelementptr inbounds i32, i32* %735, i64 %945
  %948 = bitcast i32* %947 to <4 x i32>*
  %949 = load <4 x i32>, <4 x i32>* %948, align 4, !alias.scope !370
  %950 = getelementptr inbounds i32, i32* %947, i64 4
  %951 = bitcast i32* %950 to <4 x i32>*
  %952 = load <4 x i32>, <4 x i32>* %951, align 4, !alias.scope !370
  %953 = getelementptr inbounds i32, i32* %771, i64 %945
  %954 = bitcast i32* %953 to <4 x i32>*
  %955 = load <4 x i32>, <4 x i32>* %954, align 4, !alias.scope !373
  %956 = getelementptr inbounds i32, i32* %953, i64 4
  %957 = bitcast i32* %956 to <4 x i32>*
  %958 = load <4 x i32>, <4 x i32>* %957, align 4, !alias.scope !373
  %959 = icmp sgt <4 x i32> %949, %955
  %960 = icmp sgt <4 x i32> %952, %958
  %961 = getelementptr inbounds i8, i8* %806, i64 %945
  %962 = zext <4 x i1> %959 to <4 x i8>
  %963 = zext <4 x i1> %960 to <4 x i8>
  %964 = bitcast i8* %961 to <4 x i8>*
  store <4 x i8> %962, <4 x i8>* %964, align 1, !alias.scope !375, !noalias !377
  %965 = getelementptr inbounds i8, i8* %961, i64 4
  %966 = bitcast i8* %965 to <4 x i8>*
  store <4 x i8> %963, <4 x i8>* %966, align 1, !alias.scope !375, !noalias !377
  %967 = or i64 %945, 8
  %968 = getelementptr inbounds i32, i32* %735, i64 %967
  %969 = bitcast i32* %968 to <4 x i32>*
  %970 = load <4 x i32>, <4 x i32>* %969, align 4, !alias.scope !370
  %971 = getelementptr inbounds i32, i32* %968, i64 4
  %972 = bitcast i32* %971 to <4 x i32>*
  %973 = load <4 x i32>, <4 x i32>* %972, align 4, !alias.scope !370
  %974 = getelementptr inbounds i32, i32* %771, i64 %967
  %975 = bitcast i32* %974 to <4 x i32>*
  %976 = load <4 x i32>, <4 x i32>* %975, align 4, !alias.scope !373
  %977 = getelementptr inbounds i32, i32* %974, i64 4
  %978 = bitcast i32* %977 to <4 x i32>*
  %979 = load <4 x i32>, <4 x i32>* %978, align 4, !alias.scope !373
  %980 = icmp sgt <4 x i32> %970, %976
  %981 = icmp sgt <4 x i32> %973, %979
  %982 = getelementptr inbounds i8, i8* %806, i64 %967
  %983 = zext <4 x i1> %980 to <4 x i8>
  %984 = zext <4 x i1> %981 to <4 x i8>
  %985 = bitcast i8* %982 to <4 x i8>*
  store <4 x i8> %983, <4 x i8>* %985, align 1, !alias.scope !375, !noalias !377
  %986 = getelementptr inbounds i8, i8* %982, i64 4
  %987 = bitcast i8* %986 to <4 x i8>*
  store <4 x i8> %984, <4 x i8>* %987, align 1, !alias.scope !375, !noalias !377
  %988 = add i64 %945, 16
  %989 = add i64 %946, -2
  %990 = icmp eq i64 %989, 0
  br i1 %990, label %991, label %944, !llvm.loop !378

991:                                              ; preds = %944, %935
  %992 = phi i64 [ 0, %935 ], [ %988, %944 ]
  %993 = icmp eq i64 %940, 0
  br i1 %993, label %1015, label %994

994:                                              ; preds = %991
  %995 = getelementptr inbounds i32, i32* %735, i64 %992
  %996 = bitcast i32* %995 to <4 x i32>*
  %997 = load <4 x i32>, <4 x i32>* %996, align 4, !alias.scope !370
  %998 = getelementptr inbounds i32, i32* %995, i64 4
  %999 = bitcast i32* %998 to <4 x i32>*
  %1000 = load <4 x i32>, <4 x i32>* %999, align 4, !alias.scope !370
  %1001 = getelementptr inbounds i32, i32* %771, i64 %992
  %1002 = bitcast i32* %1001 to <4 x i32>*
  %1003 = load <4 x i32>, <4 x i32>* %1002, align 4, !alias.scope !373
  %1004 = getelementptr inbounds i32, i32* %1001, i64 4
  %1005 = bitcast i32* %1004 to <4 x i32>*
  %1006 = load <4 x i32>, <4 x i32>* %1005, align 4, !alias.scope !373
  %1007 = icmp sgt <4 x i32> %997, %1003
  %1008 = icmp sgt <4 x i32> %1000, %1006
  %1009 = getelementptr inbounds i8, i8* %806, i64 %992
  %1010 = zext <4 x i1> %1007 to <4 x i8>
  %1011 = zext <4 x i1> %1008 to <4 x i8>
  %1012 = bitcast i8* %1009 to <4 x i8>*
  store <4 x i8> %1010, <4 x i8>* %1012, align 1, !alias.scope !375, !noalias !377
  %1013 = getelementptr inbounds i8, i8* %1009, i64 4
  %1014 = bitcast i8* %1013 to <4 x i8>*
  store <4 x i8> %1011, <4 x i8>* %1014, align 1, !alias.scope !375, !noalias !377
  br label %1015

1015:                                             ; preds = %991, %994
  %1016 = icmp eq i64 %920, %936
  br i1 %1016, label %1053, label %1017

1017:                                             ; preds = %1015, %922, %919
  %1018 = phi i64 [ 0, %922 ], [ 0, %919 ], [ %936, %1015 ]
  %1019 = and i64 %920, 1
  %1020 = icmp eq i64 %1019, 0
  br i1 %1020, label %1030, label %1021

1021:                                             ; preds = %1017
  %1022 = getelementptr inbounds i32, i32* %735, i64 %1018
  %1023 = load i32, i32* %1022, align 4
  %1024 = getelementptr inbounds i32, i32* %771, i64 %1018
  %1025 = load i32, i32* %1024, align 4
  %1026 = icmp sgt i32 %1023, %1025
  %1027 = getelementptr inbounds i8, i8* %806, i64 %1018
  %1028 = zext i1 %1026 to i8
  store i8 %1028, i8* %1027, align 1
  %1029 = or i64 %1018, 1
  br label %1030

1030:                                             ; preds = %1017, %1021
  %1031 = phi i64 [ %1018, %1017 ], [ %1029, %1021 ]
  %1032 = or i64 %1018, 1
  %1033 = icmp eq i64 %920, %1032
  br i1 %1033, label %1053, label %1034

1034:                                             ; preds = %1030, %1034
  %1035 = phi i64 [ %1051, %1034 ], [ %1031, %1030 ]
  %1036 = getelementptr inbounds i32, i32* %735, i64 %1035
  %1037 = load i32, i32* %1036, align 4
  %1038 = getelementptr inbounds i32, i32* %771, i64 %1035
  %1039 = load i32, i32* %1038, align 4
  %1040 = icmp sgt i32 %1037, %1039
  %1041 = getelementptr inbounds i8, i8* %806, i64 %1035
  %1042 = zext i1 %1040 to i8
  store i8 %1042, i8* %1041, align 1
  %1043 = add nuw nsw i64 %1035, 1
  %1044 = getelementptr inbounds i32, i32* %735, i64 %1043
  %1045 = load i32, i32* %1044, align 4
  %1046 = getelementptr inbounds i32, i32* %771, i64 %1043
  %1047 = load i32, i32* %1046, align 4
  %1048 = icmp sgt i32 %1045, %1047
  %1049 = getelementptr inbounds i8, i8* %806, i64 %1043
  %1050 = zext i1 %1048 to i8
  store i8 %1050, i8* %1049, align 1
  %1051 = add nuw nsw i64 %1035, 2
  %1052 = icmp eq i64 %1051, %920
  br i1 %1052, label %1053, label %1034, !llvm.loop !379

1053:                                             ; preds = %1030, %1034, %1015, %915
  %1054 = icmp sgt i32 %805, 5
  br i1 %1054, label %1055, label %1061

1055:                                             ; preds = %1053
  %1056 = getelementptr inbounds %"class.tflite::RuntimeShape", %"class.tflite::RuntimeShape"* %27, i64 0, i32 1, i32 0
  %1057 = load i32*, i32** %1056, align 8
  %1058 = icmp eq i32* %1057, null
  br i1 %1058, label %1061, label %1059

1059:                                             ; preds = %1055
  %1060 = bitcast i32* %1057 to i8*
  tail call void @_ZdaPv(i8* %1060) #9
  br label %1061

1061:                                             ; preds = %1059, %1055, %1053
  call void @llvm.lifetime.end.p0i8(i64 32, i8* nonnull %772) #8
  %1062 = icmp sgt i32 %769, 5
  br i1 %1062, label %1063, label %1069

1063:                                             ; preds = %1061
  %1064 = getelementptr inbounds %"class.tflite::RuntimeShape", %"class.tflite::RuntimeShape"* %26, i64 0, i32 1, i32 0
  %1065 = load i32*, i32** %1064, align 8
  %1066 = icmp eq i32* %1065, null
  br i1 %1066, label %1069, label %1067

1067:                                             ; preds = %1063
  %1068 = bitcast i32* %1065 to i8*
  tail call void @_ZdaPv(i8* %1068) #9
  br label %1069

1069:                                             ; preds = %1067, %1063, %1061
  call void @llvm.lifetime.end.p0i8(i64 32, i8* nonnull %736) #8
  br i1 %808, label %1070, label %1107

1070:                                             ; preds = %1069
  %1071 = getelementptr inbounds %"class.tflite::RuntimeShape", %"class.tflite::RuntimeShape"* %25, i64 0, i32 1, i32 0
  %1072 = load i32*, i32** %1071, align 8
  %1073 = icmp eq i32* %1072, null
  br i1 %1073, label %1107, label %1074

1074:                                             ; preds = %1070
  %1075 = bitcast i32* %1072 to i8*
  tail call void @_ZdaPv(i8* %1075) #9
  br label %1107

1076:                                             ; preds = %691, %669
  %1077 = phi i8* [ %698, %691 ], [ null, %669 ]
  call void @_ZN6tflite13reference_ops29BroadcastComparison4DSlowImplIiXadL_ZNS0_9GreaterFnIiEEbT_S3_EEEEvRKNS_16ComparisonParamsERKNS_12RuntimeShapeEPKS3_S9_SB_S9_Pb(%"struct.tflite::ComparisonParams"* nonnull dereferenceable(32) %21, %"class.tflite::RuntimeShape"* nonnull dereferenceable(32) %22, i32* %633, %"class.tflite::RuntimeShape"* nonnull dereferenceable(32) %23, i32* %666, %"class.tflite::RuntimeShape"* nonnull dereferenceable(32) %24, i8* %1077) #8
  %1078 = getelementptr inbounds %"class.tflite::RuntimeShape", %"class.tflite::RuntimeShape"* %24, i64 0, i32 0
  %1079 = load i32, i32* %1078, align 8
  %1080 = icmp sgt i32 %1079, 5
  br i1 %1080, label %1081, label %1087

1081:                                             ; preds = %1076
  %1082 = getelementptr inbounds %"class.tflite::RuntimeShape", %"class.tflite::RuntimeShape"* %24, i64 0, i32 1, i32 0
  %1083 = load i32*, i32** %1082, align 8
  %1084 = icmp eq i32* %1083, null
  br i1 %1084, label %1087, label %1085

1085:                                             ; preds = %1081
  %1086 = bitcast i32* %1083 to i8*
  call void @_ZdaPv(i8* %1086) #9
  br label %1087

1087:                                             ; preds = %1085, %1081, %1076
  call void @llvm.lifetime.end.p0i8(i64 32, i8* nonnull %667) #8
  %1088 = getelementptr inbounds %"class.tflite::RuntimeShape", %"class.tflite::RuntimeShape"* %23, i64 0, i32 0
  %1089 = load i32, i32* %1088, align 8
  %1090 = icmp sgt i32 %1089, 5
  br i1 %1090, label %1091, label %1097

1091:                                             ; preds = %1087
  %1092 = getelementptr inbounds %"class.tflite::RuntimeShape", %"class.tflite::RuntimeShape"* %23, i64 0, i32 1, i32 0
  %1093 = load i32*, i32** %1092, align 8
  %1094 = icmp eq i32* %1093, null
  br i1 %1094, label %1097, label %1095

1095:                                             ; preds = %1091
  %1096 = bitcast i32* %1093 to i8*
  call void @_ZdaPv(i8* %1096) #9
  br label %1097

1097:                                             ; preds = %1095, %1091, %1087
  call void @llvm.lifetime.end.p0i8(i64 32, i8* nonnull %634) #8
  %1098 = getelementptr inbounds %"class.tflite::RuntimeShape", %"class.tflite::RuntimeShape"* %22, i64 0, i32 0
  %1099 = load i32, i32* %1098, align 8
  %1100 = icmp sgt i32 %1099, 5
  br i1 %1100, label %1101, label %1107

1101:                                             ; preds = %1097
  %1102 = getelementptr inbounds %"class.tflite::RuntimeShape", %"class.tflite::RuntimeShape"* %22, i64 0, i32 1, i32 0
  %1103 = load i32*, i32** %1102, align 8
  %1104 = icmp eq i32* %1103, null
  br i1 %1104, label %1107, label %1105

1105:                                             ; preds = %1101
  %1106 = bitcast i32* %1103 to i8*
  call void @_ZdaPv(i8* %1106) #9
  br label %1107

1107:                                             ; preds = %1097, %1101, %1105, %1069, %1070, %1074
  %1108 = phi i8* [ %700, %1074 ], [ %700, %1070 ], [ %700, %1069 ], [ %601, %1105 ], [ %601, %1101 ], [ %601, %1097 ]
  call void @llvm.lifetime.end.p0i8(i64 32, i8* nonnull %1108) #8
  call void @llvm.lifetime.end.p0i8(i64 32, i8* nonnull %599) #8
  br label %2493

1109:                                             ; preds = %78
  %1110 = bitcast %"struct.tflite::ComparisonParams"* %14 to i8*
  call void @llvm.lifetime.start.p0i8(i64 32, i8* nonnull %1110) #8
  call void @llvm.memset.p0i8.i64(i8* nonnull align 4 %1110, i8 -86, i64 32, i1 false) #8
  br i1 %80, label %1212, label %1111

1111:                                             ; preds = %1109
  %1112 = bitcast %"class.tflite::RuntimeShape"* %15 to i8*
  call void @llvm.lifetime.start.p0i8(i64 32, i8* nonnull %1112) #8
  %1113 = icmp eq %struct.TfLiteTensor* %57, null
  br i1 %1113, label %1114, label %1116

1114:                                             ; preds = %1111
  %1115 = getelementptr inbounds %"class.tflite::RuntimeShape", %"class.tflite::RuntimeShape"* %15, i64 0, i32 0
  store i32 0, i32* %1115, align 8, !alias.scope !380
  br label %1144

1116:                                             ; preds = %1111
  %1117 = getelementptr inbounds %struct.TfLiteTensor, %struct.TfLiteTensor* %57, i64 0, i32 2
  %1118 = load %struct.TfLiteIntArray*, %struct.TfLiteIntArray** %1117, align 8, !noalias !380
  %1119 = getelementptr inbounds %struct.TfLiteIntArray, %struct.TfLiteIntArray* %1118, i64 0, i32 0
  %1120 = load i32, i32* %1119, align 4, !noalias !380
  %1121 = getelementptr inbounds %struct.TfLiteIntArray, %struct.TfLiteIntArray* %1118, i64 0, i32 1, i64 0
  %1122 = getelementptr inbounds %"class.tflite::RuntimeShape", %"class.tflite::RuntimeShape"* %15, i64 0, i32 0
  store i32 %1120, i32* %1122, align 8, !alias.scope !380
  %1123 = icmp sgt i32 %1120, 5
  br i1 %1123, label %1124, label %1131

1124:                                             ; preds = %1116
  %1125 = sext i32 %1120 to i64
  %1126 = shl nsw i64 %1125, 2
  %1127 = tail call i8* @_Znam(i64 %1126) #9, !noalias !380
  %1128 = getelementptr inbounds %"class.tflite::RuntimeShape", %"class.tflite::RuntimeShape"* %15, i64 0, i32 1, i32 0
  %1129 = bitcast i32** %1128 to i8**
  store i8* %1127, i8** %1129, align 8, !alias.scope !380
  %1130 = bitcast i8* %1127 to i32*
  br label %1136

1131:                                             ; preds = %1116
  %1132 = getelementptr inbounds %"class.tflite::RuntimeShape", %"class.tflite::RuntimeShape"* %15, i64 0, i32 1
  %1133 = bitcast %union.anon* %1132 to i32*
  %1134 = sext i32 %1120 to i64
  %1135 = shl nsw i64 %1134, 2
  br label %1136

1136:                                             ; preds = %1131, %1124
  %1137 = phi i64 [ %1126, %1124 ], [ %1135, %1131 ]
  %1138 = phi i32* [ %1130, %1124 ], [ %1133, %1131 ]
  %1139 = bitcast i32* %1138 to i8*
  %1140 = bitcast i32* %1121 to i8*
  call void @llvm.memcpy.p0i8.p0i8.i64(i8* align 4 %1139, i8* align 4 %1140, i64 %1137, i1 false) #8
  %1141 = getelementptr inbounds %struct.TfLiteTensor, %struct.TfLiteTensor* %57, i64 0, i32 1
  %1142 = bitcast %union.TfLitePtrUnion* %1141 to i64**
  %1143 = load i64*, i64** %1142, align 8
  br label %1144

1144:                                             ; preds = %1136, %1114
  %1145 = phi i64* [ %1143, %1136 ], [ null, %1114 ]
  %1146 = bitcast %"class.tflite::RuntimeShape"* %16 to i8*
  call void @llvm.lifetime.start.p0i8(i64 32, i8* nonnull %1146) #8
  %1147 = icmp eq %struct.TfLiteTensor* %67, null
  br i1 %1147, label %1148, label %1150

1148:                                             ; preds = %1144
  %1149 = getelementptr inbounds %"class.tflite::RuntimeShape", %"class.tflite::RuntimeShape"* %16, i64 0, i32 0
  store i32 0, i32* %1149, align 8, !alias.scope !383
  br label %1178

1150:                                             ; preds = %1144
  %1151 = getelementptr inbounds %struct.TfLiteTensor, %struct.TfLiteTensor* %67, i64 0, i32 2
  %1152 = load %struct.TfLiteIntArray*, %struct.TfLiteIntArray** %1151, align 8, !noalias !383
  %1153 = getelementptr inbounds %struct.TfLiteIntArray, %struct.TfLiteIntArray* %1152, i64 0, i32 0
  %1154 = load i32, i32* %1153, align 4, !noalias !383
  %1155 = getelementptr inbounds %struct.TfLiteIntArray, %struct.TfLiteIntArray* %1152, i64 0, i32 1, i64 0
  %1156 = getelementptr inbounds %"class.tflite::RuntimeShape", %"class.tflite::RuntimeShape"* %16, i64 0, i32 0
  store i32 %1154, i32* %1156, align 8, !alias.scope !383
  %1157 = icmp sgt i32 %1154, 5
  br i1 %1157, label %1158, label %1165

1158:                                             ; preds = %1150
  %1159 = sext i32 %1154 to i64
  %1160 = shl nsw i64 %1159, 2
  %1161 = tail call i8* @_Znam(i64 %1160) #9, !noalias !383
  %1162 = getelementptr inbounds %"class.tflite::RuntimeShape", %"class.tflite::RuntimeShape"* %16, i64 0, i32 1, i32 0
  %1163 = bitcast i32** %1162 to i8**
  store i8* %1161, i8** %1163, align 8, !alias.scope !383
  %1164 = bitcast i8* %1161 to i32*
  br label %1170

1165:                                             ; preds = %1150
  %1166 = getelementptr inbounds %"class.tflite::RuntimeShape", %"class.tflite::RuntimeShape"* %16, i64 0, i32 1
  %1167 = bitcast %union.anon* %1166 to i32*
  %1168 = sext i32 %1154 to i64
  %1169 = shl nsw i64 %1168, 2
  br label %1170

1170:                                             ; preds = %1165, %1158
  %1171 = phi i64 [ %1160, %1158 ], [ %1169, %1165 ]
  %1172 = phi i32* [ %1164, %1158 ], [ %1167, %1165 ]
  %1173 = bitcast i32* %1172 to i8*
  %1174 = bitcast i32* %1155 to i8*
  call void @llvm.memcpy.p0i8.p0i8.i64(i8* align 4 %1173, i8* align 4 %1174, i64 %1171, i1 false) #8
  %1175 = getelementptr inbounds %struct.TfLiteTensor, %struct.TfLiteTensor* %67, i64 0, i32 1
  %1176 = bitcast %union.TfLitePtrUnion* %1175 to i64**
  %1177 = load i64*, i64** %1176, align 8
  br label %1178

1178:                                             ; preds = %1170, %1148
  %1179 = phi i64* [ %1177, %1170 ], [ null, %1148 ]
  %1180 = bitcast %"class.tflite::RuntimeShape"* %17 to i8*
  call void @llvm.lifetime.start.p0i8(i64 32, i8* nonnull %1180) #8
  %1181 = icmp eq %struct.TfLiteTensor* %79, null
  br i1 %1181, label %1182, label %1184

1182:                                             ; preds = %1178
  %1183 = getelementptr inbounds %"class.tflite::RuntimeShape", %"class.tflite::RuntimeShape"* %17, i64 0, i32 0
  store i32 0, i32* %1183, align 8, !alias.scope !386
  br label %1491

1184:                                             ; preds = %1178
  %1185 = getelementptr inbounds %struct.TfLiteTensor, %struct.TfLiteTensor* %79, i64 0, i32 2
  %1186 = load %struct.TfLiteIntArray*, %struct.TfLiteIntArray** %1185, align 8, !noalias !386
  %1187 = getelementptr inbounds %struct.TfLiteIntArray, %struct.TfLiteIntArray* %1186, i64 0, i32 0
  %1188 = load i32, i32* %1187, align 4, !noalias !386
  %1189 = getelementptr inbounds %struct.TfLiteIntArray, %struct.TfLiteIntArray* %1186, i64 0, i32 1, i64 0
  %1190 = getelementptr inbounds %"class.tflite::RuntimeShape", %"class.tflite::RuntimeShape"* %17, i64 0, i32 0
  store i32 %1188, i32* %1190, align 8, !alias.scope !386
  %1191 = icmp sgt i32 %1188, 5
  br i1 %1191, label %1192, label %1199

1192:                                             ; preds = %1184
  %1193 = sext i32 %1188 to i64
  %1194 = shl nsw i64 %1193, 2
  %1195 = tail call i8* @_Znam(i64 %1194) #9, !noalias !386
  %1196 = getelementptr inbounds %"class.tflite::RuntimeShape", %"class.tflite::RuntimeShape"* %17, i64 0, i32 1, i32 0
  %1197 = bitcast i32** %1196 to i8**
  store i8* %1195, i8** %1197, align 8, !alias.scope !386
  %1198 = bitcast i8* %1195 to i32*
  br label %1204

1199:                                             ; preds = %1184
  %1200 = getelementptr inbounds %"class.tflite::RuntimeShape", %"class.tflite::RuntimeShape"* %17, i64 0, i32 1
  %1201 = bitcast %union.anon* %1200 to i32*
  %1202 = sext i32 %1188 to i64
  %1203 = shl nsw i64 %1202, 2
  br label %1204

1204:                                             ; preds = %1199, %1192
  %1205 = phi i64 [ %1194, %1192 ], [ %1203, %1199 ]
  %1206 = phi i32* [ %1198, %1192 ], [ %1201, %1199 ]
  %1207 = bitcast i32* %1206 to i8*
  %1208 = bitcast i32* %1189 to i8*
  call void @llvm.memcpy.p0i8.p0i8.i64(i8* align 4 %1207, i8* align 4 %1208, i64 %1205, i1 false) #8
  %1209 = getelementptr inbounds %struct.TfLiteTensor, %struct.TfLiteTensor* %79, i64 0, i32 1
  %1210 = bitcast %union.TfLitePtrUnion* %1209 to i8**
  %1211 = load i8*, i8** %1210, align 8
  br label %1491

1212:                                             ; preds = %1109
  %1213 = bitcast %"class.tflite::RuntimeShape"* %18 to i8*
  call void @llvm.lifetime.start.p0i8(i64 32, i8* nonnull %1213) #8
  %1214 = icmp eq %struct.TfLiteTensor* %57, null
  br i1 %1214, label %1215, label %1217

1215:                                             ; preds = %1212
  %1216 = getelementptr inbounds %"class.tflite::RuntimeShape", %"class.tflite::RuntimeShape"* %18, i64 0, i32 0
  store i32 0, i32* %1216, align 8, !alias.scope !389
  br label %1245

1217:                                             ; preds = %1212
  %1218 = getelementptr inbounds %struct.TfLiteTensor, %struct.TfLiteTensor* %57, i64 0, i32 2
  %1219 = load %struct.TfLiteIntArray*, %struct.TfLiteIntArray** %1218, align 8, !noalias !389
  %1220 = getelementptr inbounds %struct.TfLiteIntArray, %struct.TfLiteIntArray* %1219, i64 0, i32 0
  %1221 = load i32, i32* %1220, align 4, !noalias !389
  %1222 = getelementptr inbounds %struct.TfLiteIntArray, %struct.TfLiteIntArray* %1219, i64 0, i32 1, i64 0
  %1223 = getelementptr inbounds %"class.tflite::RuntimeShape", %"class.tflite::RuntimeShape"* %18, i64 0, i32 0
  store i32 %1221, i32* %1223, align 8, !alias.scope !389
  %1224 = icmp sgt i32 %1221, 5
  br i1 %1224, label %1225, label %1232

1225:                                             ; preds = %1217
  %1226 = sext i32 %1221 to i64
  %1227 = shl nsw i64 %1226, 2
  %1228 = tail call i8* @_Znam(i64 %1227) #9, !noalias !389
  %1229 = getelementptr inbounds %"class.tflite::RuntimeShape", %"class.tflite::RuntimeShape"* %18, i64 0, i32 1, i32 0
  %1230 = bitcast i32** %1229 to i8**
  store i8* %1228, i8** %1230, align 8, !alias.scope !389
  %1231 = bitcast i8* %1228 to i32*
  br label %1237

1232:                                             ; preds = %1217
  %1233 = getelementptr inbounds %"class.tflite::RuntimeShape", %"class.tflite::RuntimeShape"* %18, i64 0, i32 1
  %1234 = bitcast %union.anon* %1233 to i32*
  %1235 = sext i32 %1221 to i64
  %1236 = shl nsw i64 %1235, 2
  br label %1237

1237:                                             ; preds = %1232, %1225
  %1238 = phi i64 [ %1227, %1225 ], [ %1236, %1232 ]
  %1239 = phi i32* [ %1231, %1225 ], [ %1234, %1232 ]
  %1240 = bitcast i32* %1239 to i8*
  %1241 = bitcast i32* %1222 to i8*
  call void @llvm.memcpy.p0i8.p0i8.i64(i8* align 4 %1240, i8* align 4 %1241, i64 %1238, i1 false) #8
  %1242 = getelementptr inbounds %struct.TfLiteTensor, %struct.TfLiteTensor* %57, i64 0, i32 1
  %1243 = bitcast %union.TfLitePtrUnion* %1242 to i64**
  %1244 = load i64*, i64** %1243, align 8
  br label %1245

1245:                                             ; preds = %1237, %1215
  %1246 = phi i32 [ %1221, %1237 ], [ 0, %1215 ]
  %1247 = phi i64* [ %1244, %1237 ], [ null, %1215 ]
  %1248 = bitcast %"class.tflite::RuntimeShape"* %19 to i8*
  call void @llvm.lifetime.start.p0i8(i64 32, i8* nonnull %1248) #8
  %1249 = icmp eq %struct.TfLiteTensor* %67, null
  br i1 %1249, label %1250, label %1252

1250:                                             ; preds = %1245
  %1251 = getelementptr inbounds %"class.tflite::RuntimeShape", %"class.tflite::RuntimeShape"* %19, i64 0, i32 0
  store i32 0, i32* %1251, align 8, !alias.scope !392
  br label %1280

1252:                                             ; preds = %1245
  %1253 = getelementptr inbounds %struct.TfLiteTensor, %struct.TfLiteTensor* %67, i64 0, i32 2
  %1254 = load %struct.TfLiteIntArray*, %struct.TfLiteIntArray** %1253, align 8, !noalias !392
  %1255 = getelementptr inbounds %struct.TfLiteIntArray, %struct.TfLiteIntArray* %1254, i64 0, i32 0
  %1256 = load i32, i32* %1255, align 4, !noalias !392
  %1257 = getelementptr inbounds %struct.TfLiteIntArray, %struct.TfLiteIntArray* %1254, i64 0, i32 1, i64 0
  %1258 = getelementptr inbounds %"class.tflite::RuntimeShape", %"class.tflite::RuntimeShape"* %19, i64 0, i32 0
  store i32 %1256, i32* %1258, align 8, !alias.scope !392
  %1259 = icmp sgt i32 %1256, 5
  br i1 %1259, label %1260, label %1267

1260:                                             ; preds = %1252
  %1261 = sext i32 %1256 to i64
  %1262 = shl nsw i64 %1261, 2
  %1263 = tail call i8* @_Znam(i64 %1262) #9, !noalias !392
  %1264 = getelementptr inbounds %"class.tflite::RuntimeShape", %"class.tflite::RuntimeShape"* %19, i64 0, i32 1, i32 0
  %1265 = bitcast i32** %1264 to i8**
  store i8* %1263, i8** %1265, align 8, !alias.scope !392
  %1266 = bitcast i8* %1263 to i32*
  br label %1272

1267:                                             ; preds = %1252
  %1268 = getelementptr inbounds %"class.tflite::RuntimeShape", %"class.tflite::RuntimeShape"* %19, i64 0, i32 1
  %1269 = bitcast %union.anon* %1268 to i32*
  %1270 = sext i32 %1256 to i64
  %1271 = shl nsw i64 %1270, 2
  br label %1272

1272:                                             ; preds = %1267, %1260
  %1273 = phi i64 [ %1262, %1260 ], [ %1271, %1267 ]
  %1274 = phi i32* [ %1266, %1260 ], [ %1269, %1267 ]
  %1275 = bitcast i32* %1274 to i8*
  %1276 = bitcast i32* %1257 to i8*
  call void @llvm.memcpy.p0i8.p0i8.i64(i8* align 4 %1275, i8* align 4 %1276, i64 %1273, i1 false) #8
  %1277 = getelementptr inbounds %struct.TfLiteTensor, %struct.TfLiteTensor* %67, i64 0, i32 1
  %1278 = bitcast %union.TfLitePtrUnion* %1277 to i64**
  %1279 = load i64*, i64** %1278, align 8
  br label %1280

1280:                                             ; preds = %1272, %1250
  %1281 = phi i32 [ %1256, %1272 ], [ 0, %1250 ]
  %1282 = phi i64* [ %1279, %1272 ], [ null, %1250 ]
  %1283 = bitcast %"class.tflite::RuntimeShape"* %20 to i8*
  call void @llvm.lifetime.start.p0i8(i64 32, i8* nonnull %1283) #8
  %1284 = icmp eq %struct.TfLiteTensor* %79, null
  br i1 %1284, label %1285, label %1287

1285:                                             ; preds = %1280
  %1286 = getelementptr inbounds %"class.tflite::RuntimeShape", %"class.tflite::RuntimeShape"* %20, i64 0, i32 0
  store i32 0, i32* %1286, align 8, !alias.scope !395
  br label %1315

1287:                                             ; preds = %1280
  %1288 = getelementptr inbounds %struct.TfLiteTensor, %struct.TfLiteTensor* %79, i64 0, i32 2
  %1289 = load %struct.TfLiteIntArray*, %struct.TfLiteIntArray** %1288, align 8, !noalias !395
  %1290 = getelementptr inbounds %struct.TfLiteIntArray, %struct.TfLiteIntArray* %1289, i64 0, i32 0
  %1291 = load i32, i32* %1290, align 4, !noalias !395
  %1292 = getelementptr inbounds %struct.TfLiteIntArray, %struct.TfLiteIntArray* %1289, i64 0, i32 1, i64 0
  %1293 = getelementptr inbounds %"class.tflite::RuntimeShape", %"class.tflite::RuntimeShape"* %20, i64 0, i32 0
  store i32 %1291, i32* %1293, align 8, !alias.scope !395
  %1294 = icmp sgt i32 %1291, 5
  br i1 %1294, label %1295, label %1302

1295:                                             ; preds = %1287
  %1296 = sext i32 %1291 to i64
  %1297 = shl nsw i64 %1296, 2
  %1298 = tail call i8* @_Znam(i64 %1297) #9, !noalias !395
  %1299 = getelementptr inbounds %"class.tflite::RuntimeShape", %"class.tflite::RuntimeShape"* %20, i64 0, i32 1, i32 0
  %1300 = bitcast i32** %1299 to i8**
  store i8* %1298, i8** %1300, align 8, !alias.scope !395
  %1301 = bitcast i8* %1298 to i32*
  br label %1307

1302:                                             ; preds = %1287
  %1303 = getelementptr inbounds %"class.tflite::RuntimeShape", %"class.tflite::RuntimeShape"* %20, i64 0, i32 1
  %1304 = bitcast %union.anon* %1303 to i32*
  %1305 = sext i32 %1291 to i64
  %1306 = shl nsw i64 %1305, 2
  br label %1307

1307:                                             ; preds = %1302, %1295
  %1308 = phi i64 [ %1297, %1295 ], [ %1306, %1302 ]
  %1309 = phi i32* [ %1301, %1295 ], [ %1304, %1302 ]
  %1310 = bitcast i32* %1309 to i8*
  %1311 = bitcast i32* %1292 to i8*
  call void @llvm.memcpy.p0i8.p0i8.i64(i8* align 4 %1310, i8* align 4 %1311, i64 %1308, i1 false) #8
  %1312 = getelementptr inbounds %struct.TfLiteTensor, %struct.TfLiteTensor* %79, i64 0, i32 1
  %1313 = bitcast %union.TfLitePtrUnion* %1312 to i8**
  %1314 = load i8*, i8** %1313, align 8
  br label %1315

1315:                                             ; preds = %1307, %1285
  %1316 = phi i32 [ %1291, %1307 ], [ 0, %1285 ]
  %1317 = phi i8* [ %1314, %1307 ], [ null, %1285 ]
  %1318 = getelementptr inbounds %"class.tflite::RuntimeShape", %"class.tflite::RuntimeShape"* %18, i64 0, i32 1
  %1319 = icmp sgt i32 %1246, 5
  br i1 %1319, label %1320, label %1323

1320:                                             ; preds = %1315
  %1321 = getelementptr inbounds %union.anon, %union.anon* %1318, i64 0, i32 0
  %1322 = load i32*, i32** %1321, align 8
  br label %1326

1323:                                             ; preds = %1315
  %1324 = bitcast %union.anon* %1318 to i32*
  %1325 = icmp sgt i32 %1246, 0
  br i1 %1325, label %1326, label %1430

1326:                                             ; preds = %1323, %1320
  %1327 = phi i32* [ %1322, %1320 ], [ %1324, %1323 ]
  %1328 = zext i32 %1246 to i64
  %1329 = icmp ult i32 %1246, 8
  br i1 %1329, label %1415, label %1330

1330:                                             ; preds = %1326
  %1331 = and i64 %1328, 4294967288
  %1332 = add nsw i64 %1331, -8
  %1333 = lshr exact i64 %1332, 3
  %1334 = add nuw nsw i64 %1333, 1
  %1335 = and i64 %1334, 3
  %1336 = icmp ult i64 %1332, 24
  br i1 %1336, label %1382, label %1337

1337:                                             ; preds = %1330
  %1338 = sub nsw i64 %1334, %1335
  br label %1339

1339:                                             ; preds = %1339, %1337
  %1340 = phi i64 [ 0, %1337 ], [ %1379, %1339 ]
  %1341 = phi <4 x i32> [ <i32 1, i32 1, i32 1, i32 1>, %1337 ], [ %1377, %1339 ]
  %1342 = phi <4 x i32> [ <i32 1, i32 1, i32 1, i32 1>, %1337 ], [ %1378, %1339 ]
  %1343 = phi i64 [ %1338, %1337 ], [ %1380, %1339 ]
  %1344 = getelementptr inbounds i32, i32* %1327, i64 %1340
  %1345 = bitcast i32* %1344 to <4 x i32>*
  %1346 = load <4 x i32>, <4 x i32>* %1345, align 4
  %1347 = getelementptr inbounds i32, i32* %1344, i64 4
  %1348 = bitcast i32* %1347 to <4 x i32>*
  %1349 = load <4 x i32>, <4 x i32>* %1348, align 4
  %1350 = mul nsw <4 x i32> %1346, %1341
  %1351 = mul nsw <4 x i32> %1349, %1342
  %1352 = or i64 %1340, 8
  %1353 = getelementptr inbounds i32, i32* %1327, i64 %1352
  %1354 = bitcast i32* %1353 to <4 x i32>*
  %1355 = load <4 x i32>, <4 x i32>* %1354, align 4
  %1356 = getelementptr inbounds i32, i32* %1353, i64 4
  %1357 = bitcast i32* %1356 to <4 x i32>*
  %1358 = load <4 x i32>, <4 x i32>* %1357, align 4
  %1359 = mul nsw <4 x i32> %1355, %1350
  %1360 = mul nsw <4 x i32> %1358, %1351
  %1361 = or i64 %1340, 16
  %1362 = getelementptr inbounds i32, i32* %1327, i64 %1361
  %1363 = bitcast i32* %1362 to <4 x i32>*
  %1364 = load <4 x i32>, <4 x i32>* %1363, align 4
  %1365 = getelementptr inbounds i32, i32* %1362, i64 4
  %1366 = bitcast i32* %1365 to <4 x i32>*
  %1367 = load <4 x i32>, <4 x i32>* %1366, align 4
  %1368 = mul nsw <4 x i32> %1364, %1359
  %1369 = mul nsw <4 x i32> %1367, %1360
  %1370 = or i64 %1340, 24
  %1371 = getelementptr inbounds i32, i32* %1327, i64 %1370
  %1372 = bitcast i32* %1371 to <4 x i32>*
  %1373 = load <4 x i32>, <4 x i32>* %1372, align 4
  %1374 = getelementptr inbounds i32, i32* %1371, i64 4
  %1375 = bitcast i32* %1374 to <4 x i32>*
  %1376 = load <4 x i32>, <4 x i32>* %1375, align 4
  %1377 = mul nsw <4 x i32> %1373, %1368
  %1378 = mul nsw <4 x i32> %1376, %1369
  %1379 = add i64 %1340, 32
  %1380 = add i64 %1343, -4
  %1381 = icmp eq i64 %1380, 0
  br i1 %1381, label %1382, label %1339, !llvm.loop !398

1382:                                             ; preds = %1339, %1330
  %1383 = phi <4 x i32> [ undef, %1330 ], [ %1377, %1339 ]
  %1384 = phi <4 x i32> [ undef, %1330 ], [ %1378, %1339 ]
  %1385 = phi i64 [ 0, %1330 ], [ %1379, %1339 ]
  %1386 = phi <4 x i32> [ <i32 1, i32 1, i32 1, i32 1>, %1330 ], [ %1377, %1339 ]
  %1387 = phi <4 x i32> [ <i32 1, i32 1, i32 1, i32 1>, %1330 ], [ %1378, %1339 ]
  %1388 = icmp eq i64 %1335, 0
  br i1 %1388, label %1405, label %1389

1389:                                             ; preds = %1382, %1389
  %1390 = phi i64 [ %1402, %1389 ], [ %1385, %1382 ]
  %1391 = phi <4 x i32> [ %1400, %1389 ], [ %1386, %1382 ]
  %1392 = phi <4 x i32> [ %1401, %1389 ], [ %1387, %1382 ]
  %1393 = phi i64 [ %1403, %1389 ], [ %1335, %1382 ]
  %1394 = getelementptr inbounds i32, i32* %1327, i64 %1390
  %1395 = bitcast i32* %1394 to <4 x i32>*
  %1396 = load <4 x i32>, <4 x i32>* %1395, align 4
  %1397 = getelementptr inbounds i32, i32* %1394, i64 4
  %1398 = bitcast i32* %1397 to <4 x i32>*
  %1399 = load <4 x i32>, <4 x i32>* %1398, align 4
  %1400 = mul nsw <4 x i32> %1396, %1391
  %1401 = mul nsw <4 x i32> %1399, %1392
  %1402 = add i64 %1390, 8
  %1403 = add i64 %1393, -1
  %1404 = icmp eq i64 %1403, 0
  br i1 %1404, label %1405, label %1389, !llvm.loop !399

1405:                                             ; preds = %1389, %1382
  %1406 = phi <4 x i32> [ %1383, %1382 ], [ %1400, %1389 ]
  %1407 = phi <4 x i32> [ %1384, %1382 ], [ %1401, %1389 ]
  %1408 = mul <4 x i32> %1407, %1406
  %1409 = shufflevector <4 x i32> %1408, <4 x i32> undef, <4 x i32> <i32 2, i32 3, i32 undef, i32 undef>
  %1410 = mul <4 x i32> %1408, %1409
  %1411 = shufflevector <4 x i32> %1410, <4 x i32> undef, <4 x i32> <i32 1, i32 undef, i32 undef, i32 undef>
  %1412 = mul <4 x i32> %1410, %1411
  %1413 = extractelement <4 x i32> %1412, i32 0
  %1414 = icmp eq i64 %1331, %1328
  br i1 %1414, label %1426, label %1415

1415:                                             ; preds = %1405, %1326
  %1416 = phi i64 [ 0, %1326 ], [ %1331, %1405 ]
  %1417 = phi i32 [ 1, %1326 ], [ %1413, %1405 ]
  br label %1418

1418:                                             ; preds = %1415, %1418
  %1419 = phi i64 [ %1424, %1418 ], [ %1416, %1415 ]
  %1420 = phi i32 [ %1423, %1418 ], [ %1417, %1415 ]
  %1421 = getelementptr inbounds i32, i32* %1327, i64 %1419
  %1422 = load i32, i32* %1421, align 4
  %1423 = mul nsw i32 %1422, %1420
  %1424 = add nuw nsw i64 %1419, 1
  %1425 = icmp eq i64 %1424, %1328
  br i1 %1425, label %1426, label %1418, !llvm.loop !400

1426:                                             ; preds = %1418, %1405
  %1427 = phi i32 [ %1413, %1405 ], [ %1423, %1418 ]
  %1428 = sext i32 %1427 to i64
  %1429 = icmp sgt i32 %1427, 0
  br i1 %1429, label %1430, label %1468

1430:                                             ; preds = %1426, %1323
  %1431 = phi i64 [ %1428, %1426 ], [ 1, %1323 ]
  %1432 = and i64 %1431, 1
  %1433 = icmp eq i64 %1431, 1
  br i1 %1433, label %1457, label %1434

1434:                                             ; preds = %1430
  %1435 = sub nsw i64 %1431, %1432
  br label %1436

1436:                                             ; preds = %1436, %1434
  %1437 = phi i64 [ 0, %1434 ], [ %1454, %1436 ]
  %1438 = phi i64 [ %1435, %1434 ], [ %1455, %1436 ]
  %1439 = getelementptr inbounds i64, i64* %1247, i64 %1437
  %1440 = load i64, i64* %1439, align 8
  %1441 = getelementptr inbounds i64, i64* %1282, i64 %1437
  %1442 = load i64, i64* %1441, align 8
  %1443 = icmp sgt i64 %1440, %1442
  %1444 = getelementptr inbounds i8, i8* %1317, i64 %1437
  %1445 = zext i1 %1443 to i8
  store i8 %1445, i8* %1444, align 1
  %1446 = or i64 %1437, 1
  %1447 = getelementptr inbounds i64, i64* %1247, i64 %1446
  %1448 = load i64, i64* %1447, align 8
  %1449 = getelementptr inbounds i64, i64* %1282, i64 %1446
  %1450 = load i64, i64* %1449, align 8
  %1451 = icmp sgt i64 %1448, %1450
  %1452 = getelementptr inbounds i8, i8* %1317, i64 %1446
  %1453 = zext i1 %1451 to i8
  store i8 %1453, i8* %1452, align 1
  %1454 = add nuw nsw i64 %1437, 2
  %1455 = add i64 %1438, -2
  %1456 = icmp eq i64 %1455, 0
  br i1 %1456, label %1457, label %1436

1457:                                             ; preds = %1436, %1430
  %1458 = phi i64 [ 0, %1430 ], [ %1454, %1436 ]
  %1459 = icmp eq i64 %1432, 0
  br i1 %1459, label %1468, label %1460

1460:                                             ; preds = %1457
  %1461 = getelementptr inbounds i64, i64* %1247, i64 %1458
  %1462 = load i64, i64* %1461, align 8
  %1463 = getelementptr inbounds i64, i64* %1282, i64 %1458
  %1464 = load i64, i64* %1463, align 8
  %1465 = icmp sgt i64 %1462, %1464
  %1466 = getelementptr inbounds i8, i8* %1317, i64 %1458
  %1467 = zext i1 %1465 to i8
  store i8 %1467, i8* %1466, align 1
  br label %1468

1468:                                             ; preds = %1460, %1457, %1426
  %1469 = icmp sgt i32 %1316, 5
  br i1 %1469, label %1470, label %1476

1470:                                             ; preds = %1468
  %1471 = getelementptr inbounds %"class.tflite::RuntimeShape", %"class.tflite::RuntimeShape"* %20, i64 0, i32 1, i32 0
  %1472 = load i32*, i32** %1471, align 8
  %1473 = icmp eq i32* %1472, null
  br i1 %1473, label %1476, label %1474

1474:                                             ; preds = %1470
  %1475 = bitcast i32* %1472 to i8*
  tail call void @_ZdaPv(i8* %1475) #9
  br label %1476

1476:                                             ; preds = %1474, %1470, %1468
  call void @llvm.lifetime.end.p0i8(i64 32, i8* nonnull %1283) #8
  %1477 = icmp sgt i32 %1281, 5
  br i1 %1477, label %1478, label %1484

1478:                                             ; preds = %1476
  %1479 = getelementptr inbounds %"class.tflite::RuntimeShape", %"class.tflite::RuntimeShape"* %19, i64 0, i32 1, i32 0
  %1480 = load i32*, i32** %1479, align 8
  %1481 = icmp eq i32* %1480, null
  br i1 %1481, label %1484, label %1482

1482:                                             ; preds = %1478
  %1483 = bitcast i32* %1480 to i8*
  tail call void @_ZdaPv(i8* %1483) #9
  br label %1484

1484:                                             ; preds = %1482, %1478, %1476
  call void @llvm.lifetime.end.p0i8(i64 32, i8* nonnull %1248) #8
  br i1 %1319, label %1485, label %1522

1485:                                             ; preds = %1484
  %1486 = getelementptr inbounds %"class.tflite::RuntimeShape", %"class.tflite::RuntimeShape"* %18, i64 0, i32 1, i32 0
  %1487 = load i32*, i32** %1486, align 8
  %1488 = icmp eq i32* %1487, null
  br i1 %1488, label %1522, label %1489

1489:                                             ; preds = %1485
  %1490 = bitcast i32* %1487 to i8*
  tail call void @_ZdaPv(i8* %1490) #9
  br label %1522

1491:                                             ; preds = %1204, %1182
  %1492 = phi i8* [ %1211, %1204 ], [ null, %1182 ]
  call void @_ZN6tflite13reference_ops29BroadcastComparison4DSlowImplIlXadL_ZNS0_9GreaterFnIlEEbT_S3_EEEEvRKNS_16ComparisonParamsERKNS_12RuntimeShapeEPKS3_S9_SB_S9_Pb(%"struct.tflite::ComparisonParams"* nonnull dereferenceable(32) %14, %"class.tflite::RuntimeShape"* nonnull dereferenceable(32) %15, i64* %1145, %"class.tflite::RuntimeShape"* nonnull dereferenceable(32) %16, i64* %1179, %"class.tflite::RuntimeShape"* nonnull dereferenceable(32) %17, i8* %1492) #8
  %1493 = getelementptr inbounds %"class.tflite::RuntimeShape", %"class.tflite::RuntimeShape"* %17, i64 0, i32 0
  %1494 = load i32, i32* %1493, align 8
  %1495 = icmp sgt i32 %1494, 5
  br i1 %1495, label %1496, label %1502

1496:                                             ; preds = %1491
  %1497 = getelementptr inbounds %"class.tflite::RuntimeShape", %"class.tflite::RuntimeShape"* %17, i64 0, i32 1, i32 0
  %1498 = load i32*, i32** %1497, align 8
  %1499 = icmp eq i32* %1498, null
  br i1 %1499, label %1502, label %1500

1500:                                             ; preds = %1496
  %1501 = bitcast i32* %1498 to i8*
  call void @_ZdaPv(i8* %1501) #9
  br label %1502

1502:                                             ; preds = %1500, %1496, %1491
  call void @llvm.lifetime.end.p0i8(i64 32, i8* nonnull %1180) #8
  %1503 = getelementptr inbounds %"class.tflite::RuntimeShape", %"class.tflite::RuntimeShape"* %16, i64 0, i32 0
  %1504 = load i32, i32* %1503, align 8
  %1505 = icmp sgt i32 %1504, 5
  br i1 %1505, label %1506, label %1512

1506:                                             ; preds = %1502
  %1507 = getelementptr inbounds %"class.tflite::RuntimeShape", %"class.tflite::RuntimeShape"* %16, i64 0, i32 1, i32 0
  %1508 = load i32*, i32** %1507, align 8
  %1509 = icmp eq i32* %1508, null
  br i1 %1509, label %1512, label %1510

1510:                                             ; preds = %1506
  %1511 = bitcast i32* %1508 to i8*
  call void @_ZdaPv(i8* %1511) #9
  br label %1512

1512:                                             ; preds = %1510, %1506, %1502
  call void @llvm.lifetime.end.p0i8(i64 32, i8* nonnull %1146) #8
  %1513 = getelementptr inbounds %"class.tflite::RuntimeShape", %"class.tflite::RuntimeShape"* %15, i64 0, i32 0
  %1514 = load i32, i32* %1513, align 8
  %1515 = icmp sgt i32 %1514, 5
  br i1 %1515, label %1516, label %1522

1516:                                             ; preds = %1512
  %1517 = getelementptr inbounds %"class.tflite::RuntimeShape", %"class.tflite::RuntimeShape"* %15, i64 0, i32 1, i32 0
  %1518 = load i32*, i32** %1517, align 8
  %1519 = icmp eq i32* %1518, null
  br i1 %1519, label %1522, label %1520

1520:                                             ; preds = %1516
  %1521 = bitcast i32* %1518 to i8*
  call void @_ZdaPv(i8* %1521) #9
  br label %1522

1522:                                             ; preds = %1512, %1516, %1520, %1484, %1485, %1489
  %1523 = phi i8* [ %1213, %1489 ], [ %1213, %1485 ], [ %1213, %1484 ], [ %1112, %1520 ], [ %1112, %1516 ], [ %1112, %1512 ]
  call void @llvm.lifetime.end.p0i8(i64 32, i8* nonnull %1523) #8
  call void @llvm.lifetime.end.p0i8(i64 32, i8* nonnull %1110) #8
  br label %2493

1524:                                             ; preds = %78
  %1525 = getelementptr inbounds %struct.TfLiteTensor, %struct.TfLiteTensor* %57, i64 0, i32 3, i32 1
  %1526 = load i32, i32* %1525, align 4
  %1527 = sub nsw i32 0, %1526
  %1528 = getelementptr inbounds %struct.TfLiteTensor, %struct.TfLiteTensor* %67, i64 0, i32 3, i32 1
  %1529 = load i32, i32* %1528, align 4
  %1530 = sub nsw i32 0, %1529
  %1531 = bitcast i32* %3 to i8*
  call void @llvm.lifetime.start.p0i8(i64 4, i8* nonnull %1531) #8
  store i32 -1431655766, i32* %3, align 4
  %1532 = bitcast i32* %4 to i8*
  call void @llvm.lifetime.start.p0i8(i64 4, i8* nonnull %1532) #8
  store i32 -1431655766, i32* %4, align 4
  %1533 = getelementptr inbounds %struct.TfLiteTensor, %struct.TfLiteTensor* %57, i64 0, i32 3, i32 0
  %1534 = load float, float* %1533, align 8
  %1535 = fpext float %1534 to double
  call void @_ZN6tflite35QuantizeMultiplierSmallerThanOneExpEdPiS0_(double %1535, i32* nonnull %3, i32* nonnull %4) #8
  %1536 = bitcast i32* %5 to i8*
  call void @llvm.lifetime.start.p0i8(i64 4, i8* nonnull %1536) #8
  store i32 -1431655766, i32* %5, align 4
  %1537 = bitcast i32* %6 to i8*
  call void @llvm.lifetime.start.p0i8(i64 4, i8* nonnull %1537) #8
  store i32 -1431655766, i32* %6, align 4
  %1538 = getelementptr inbounds %struct.TfLiteTensor, %struct.TfLiteTensor* %67, i64 0, i32 3, i32 0
  %1539 = load float, float* %1538, align 8
  %1540 = fpext float %1539 to double
  call void @_ZN6tflite35QuantizeMultiplierSmallerThanOneExpEdPiS0_(double %1540, i32* nonnull %5, i32* nonnull %6) #8
  %1541 = bitcast %"struct.tflite::ComparisonParams"* %7 to i8*
  call void @llvm.lifetime.start.p0i8(i64 32, i8* nonnull %1541) #8
  %1542 = getelementptr inbounds %"struct.tflite::ComparisonParams", %"struct.tflite::ComparisonParams"* %7, i64 0, i32 7
  %1543 = bitcast i8* %1542 to i32*
  store i32 -1431655766, i32* %1543, align 4
  %1544 = getelementptr inbounds %"struct.tflite::ComparisonParams", %"struct.tflite::ComparisonParams"* %7, i64 0, i32 0
  store i32 8, i32* %1544, align 4
  %1545 = getelementptr inbounds %"struct.tflite::ComparisonParams", %"struct.tflite::ComparisonParams"* %7, i64 0, i32 1
  store i32 %1527, i32* %1545, align 4
  %1546 = load i32, i32* %3, align 4
  %1547 = getelementptr inbounds %"struct.tflite::ComparisonParams", %"struct.tflite::ComparisonParams"* %7, i64 0, i32 2
  store i32 %1546, i32* %1547, align 4
  %1548 = load i32, i32* %4, align 4
  %1549 = getelementptr inbounds %"struct.tflite::ComparisonParams", %"struct.tflite::ComparisonParams"* %7, i64 0, i32 3
  store i32 %1548, i32* %1549, align 4
  %1550 = getelementptr inbounds %"struct.tflite::ComparisonParams", %"struct.tflite::ComparisonParams"* %7, i64 0, i32 4
  store i32 %1530, i32* %1550, align 4
  %1551 = load i32, i32* %5, align 4
  %1552 = getelementptr inbounds %"struct.tflite::ComparisonParams", %"struct.tflite::ComparisonParams"* %7, i64 0, i32 5
  store i32 %1551, i32* %1552, align 4
  %1553 = load i32, i32* %6, align 4
  %1554 = getelementptr inbounds %"struct.tflite::ComparisonParams", %"struct.tflite::ComparisonParams"* %7, i64 0, i32 6
  store i32 %1553, i32* %1554, align 4
  br i1 %80, label %1687, label %1555

1555:                                             ; preds = %1524
  %1556 = bitcast %"class.tflite::RuntimeShape"* %8 to i8*
  call void @llvm.lifetime.start.p0i8(i64 32, i8* nonnull %1556) #8
  %1557 = icmp eq %struct.TfLiteTensor* %57, null
  br i1 %1557, label %1558, label %1560

1558:                                             ; preds = %1555
  %1559 = getelementptr inbounds %"class.tflite::RuntimeShape", %"class.tflite::RuntimeShape"* %8, i64 0, i32 0
  store i32 0, i32* %1559, align 8, !alias.scope !401
  br label %1588

1560:                                             ; preds = %1555
  %1561 = getelementptr inbounds %struct.TfLiteTensor, %struct.TfLiteTensor* %57, i64 0, i32 2
  %1562 = load %struct.TfLiteIntArray*, %struct.TfLiteIntArray** %1561, align 8, !noalias !401
  %1563 = getelementptr inbounds %struct.TfLiteIntArray, %struct.TfLiteIntArray* %1562, i64 0, i32 0
  %1564 = load i32, i32* %1563, align 4, !noalias !401
  %1565 = getelementptr inbounds %struct.TfLiteIntArray, %struct.TfLiteIntArray* %1562, i64 0, i32 1, i64 0
  %1566 = getelementptr inbounds %"class.tflite::RuntimeShape", %"class.tflite::RuntimeShape"* %8, i64 0, i32 0
  store i32 %1564, i32* %1566, align 8, !alias.scope !401
  %1567 = icmp sgt i32 %1564, 5
  br i1 %1567, label %1568, label %1575

1568:                                             ; preds = %1560
  %1569 = sext i32 %1564 to i64
  %1570 = shl nsw i64 %1569, 2
  %1571 = call i8* @_Znam(i64 %1570) #9, !noalias !401
  %1572 = getelementptr inbounds %"class.tflite::RuntimeShape", %"class.tflite::RuntimeShape"* %8, i64 0, i32 1, i32 0
  %1573 = bitcast i32** %1572 to i8**
  store i8* %1571, i8** %1573, align 8, !alias.scope !401
  %1574 = bitcast i8* %1571 to i32*
  br label %1580

1575:                                             ; preds = %1560
  %1576 = getelementptr inbounds %"class.tflite::RuntimeShape", %"class.tflite::RuntimeShape"* %8, i64 0, i32 1
  %1577 = bitcast %union.anon* %1576 to i32*
  %1578 = sext i32 %1564 to i64
  %1579 = shl nsw i64 %1578, 2
  br label %1580

1580:                                             ; preds = %1575, %1568
  %1581 = phi i64 [ %1570, %1568 ], [ %1579, %1575 ]
  %1582 = phi i32* [ %1574, %1568 ], [ %1577, %1575 ]
  %1583 = bitcast i32* %1582 to i8*
  %1584 = bitcast i32* %1565 to i8*
  call void @llvm.memcpy.p0i8.p0i8.i64(i8* align 4 %1583, i8* align 4 %1584, i64 %1581, i1 false) #8
  %1585 = getelementptr inbounds %struct.TfLiteTensor, %struct.TfLiteTensor* %57, i64 0, i32 1
  %1586 = bitcast %union.TfLitePtrUnion* %1585 to i8**
  %1587 = load i8*, i8** %1586, align 8
  br label %1588

1588:                                             ; preds = %1580, %1558
  %1589 = phi i8* [ %1587, %1580 ], [ null, %1558 ]
  %1590 = bitcast %"class.tflite::RuntimeShape"* %9 to i8*
  call void @llvm.lifetime.start.p0i8(i64 32, i8* nonnull %1590) #8
  %1591 = icmp eq %struct.TfLiteTensor* %67, null
  br i1 %1591, label %1592, label %1594

1592:                                             ; preds = %1588
  %1593 = getelementptr inbounds %"class.tflite::RuntimeShape", %"class.tflite::RuntimeShape"* %9, i64 0, i32 0
  store i32 0, i32* %1593, align 8, !alias.scope !404
  br label %1622

1594:                                             ; preds = %1588
  %1595 = getelementptr inbounds %struct.TfLiteTensor, %struct.TfLiteTensor* %67, i64 0, i32 2
  %1596 = load %struct.TfLiteIntArray*, %struct.TfLiteIntArray** %1595, align 8, !noalias !404
  %1597 = getelementptr inbounds %struct.TfLiteIntArray, %struct.TfLiteIntArray* %1596, i64 0, i32 0
  %1598 = load i32, i32* %1597, align 4, !noalias !404
  %1599 = getelementptr inbounds %struct.TfLiteIntArray, %struct.TfLiteIntArray* %1596, i64 0, i32 1, i64 0
  %1600 = getelementptr inbounds %"class.tflite::RuntimeShape", %"class.tflite::RuntimeShape"* %9, i64 0, i32 0
  store i32 %1598, i32* %1600, align 8, !alias.scope !404
  %1601 = icmp sgt i32 %1598, 5
  br i1 %1601, label %1602, label %1609

1602:                                             ; preds = %1594
  %1603 = sext i32 %1598 to i64
  %1604 = shl nsw i64 %1603, 2
  %1605 = call i8* @_Znam(i64 %1604) #9, !noalias !404
  %1606 = getelementptr inbounds %"class.tflite::RuntimeShape", %"class.tflite::RuntimeShape"* %9, i64 0, i32 1, i32 0
  %1607 = bitcast i32** %1606 to i8**
  store i8* %1605, i8** %1607, align 8, !alias.scope !404
  %1608 = bitcast i8* %1605 to i32*
  br label %1614

1609:                                             ; preds = %1594
  %1610 = getelementptr inbounds %"class.tflite::RuntimeShape", %"class.tflite::RuntimeShape"* %9, i64 0, i32 1
  %1611 = bitcast %union.anon* %1610 to i32*
  %1612 = sext i32 %1598 to i64
  %1613 = shl nsw i64 %1612, 2
  br label %1614

1614:                                             ; preds = %1609, %1602
  %1615 = phi i64 [ %1604, %1602 ], [ %1613, %1609 ]
  %1616 = phi i32* [ %1608, %1602 ], [ %1611, %1609 ]
  %1617 = bitcast i32* %1616 to i8*
  %1618 = bitcast i32* %1599 to i8*
  call void @llvm.memcpy.p0i8.p0i8.i64(i8* align 4 %1617, i8* align 4 %1618, i64 %1615, i1 false) #8
  %1619 = getelementptr inbounds %struct.TfLiteTensor, %struct.TfLiteTensor* %67, i64 0, i32 1
  %1620 = bitcast %union.TfLitePtrUnion* %1619 to i8**
  %1621 = load i8*, i8** %1620, align 8
  br label %1622

1622:                                             ; preds = %1614, %1592
  %1623 = phi i8* [ %1621, %1614 ], [ null, %1592 ]
  %1624 = bitcast %"class.tflite::RuntimeShape"* %10 to i8*
  call void @llvm.lifetime.start.p0i8(i64 32, i8* nonnull %1624) #8
  %1625 = icmp eq %struct.TfLiteTensor* %79, null
  br i1 %1625, label %1626, label %1628

1626:                                             ; preds = %1622
  %1627 = getelementptr inbounds %"class.tflite::RuntimeShape", %"class.tflite::RuntimeShape"* %10, i64 0, i32 0
  store i32 0, i32* %1627, align 8, !alias.scope !407
  br label %1656

1628:                                             ; preds = %1622
  %1629 = getelementptr inbounds %struct.TfLiteTensor, %struct.TfLiteTensor* %79, i64 0, i32 2
  %1630 = load %struct.TfLiteIntArray*, %struct.TfLiteIntArray** %1629, align 8, !noalias !407
  %1631 = getelementptr inbounds %struct.TfLiteIntArray, %struct.TfLiteIntArray* %1630, i64 0, i32 0
  %1632 = load i32, i32* %1631, align 4, !noalias !407
  %1633 = getelementptr inbounds %struct.TfLiteIntArray, %struct.TfLiteIntArray* %1630, i64 0, i32 1, i64 0
  %1634 = getelementptr inbounds %"class.tflite::RuntimeShape", %"class.tflite::RuntimeShape"* %10, i64 0, i32 0
  store i32 %1632, i32* %1634, align 8, !alias.scope !407
  %1635 = icmp sgt i32 %1632, 5
  br i1 %1635, label %1636, label %1643

1636:                                             ; preds = %1628
  %1637 = sext i32 %1632 to i64
  %1638 = shl nsw i64 %1637, 2
  %1639 = call i8* @_Znam(i64 %1638) #9, !noalias !407
  %1640 = getelementptr inbounds %"class.tflite::RuntimeShape", %"class.tflite::RuntimeShape"* %10, i64 0, i32 1, i32 0
  %1641 = bitcast i32** %1640 to i8**
  store i8* %1639, i8** %1641, align 8, !alias.scope !407
  %1642 = bitcast i8* %1639 to i32*
  br label %1648

1643:                                             ; preds = %1628
  %1644 = getelementptr inbounds %"class.tflite::RuntimeShape", %"class.tflite::RuntimeShape"* %10, i64 0, i32 1
  %1645 = bitcast %union.anon* %1644 to i32*
  %1646 = sext i32 %1632 to i64
  %1647 = shl nsw i64 %1646, 2
  br label %1648

1648:                                             ; preds = %1643, %1636
  %1649 = phi i64 [ %1638, %1636 ], [ %1647, %1643 ]
  %1650 = phi i32* [ %1642, %1636 ], [ %1645, %1643 ]
  %1651 = bitcast i32* %1650 to i8*
  %1652 = bitcast i32* %1633 to i8*
  call void @llvm.memcpy.p0i8.p0i8.i64(i8* align 4 %1651, i8* align 4 %1652, i64 %1649, i1 false) #8
  %1653 = getelementptr inbounds %struct.TfLiteTensor, %struct.TfLiteTensor* %79, i64 0, i32 1
  %1654 = bitcast %union.TfLitePtrUnion* %1653 to i8**
  %1655 = load i8*, i8** %1654, align 8
  br label %1656

1656:                                             ; preds = %1648, %1626
  %1657 = phi i8* [ %1655, %1648 ], [ null, %1626 ]
  call void @_ZN6tflite13reference_ops36BroadcastComparison4DSlowWithScalingIhXadL_ZNS0_9GreaterFnIiEEbT_S3_EEEEvRKNS_16ComparisonParamsERKNS_12RuntimeShapeEPKS3_S9_SB_S9_Pb(%"struct.tflite::ComparisonParams"* nonnull dereferenceable(32) %7, %"class.tflite::RuntimeShape"* nonnull dereferenceable(32) %8, i8* %1589, %"class.tflite::RuntimeShape"* nonnull dereferenceable(32) %9, i8* %1623, %"class.tflite::RuntimeShape"* nonnull dereferenceable(32) %10, i8* %1657) #8
  %1658 = getelementptr inbounds %"class.tflite::RuntimeShape", %"class.tflite::RuntimeShape"* %10, i64 0, i32 0
  %1659 = load i32, i32* %1658, align 8
  %1660 = icmp sgt i32 %1659, 5
  br i1 %1660, label %1661, label %1667

1661:                                             ; preds = %1656
  %1662 = getelementptr inbounds %"class.tflite::RuntimeShape", %"class.tflite::RuntimeShape"* %10, i64 0, i32 1, i32 0
  %1663 = load i32*, i32** %1662, align 8
  %1664 = icmp eq i32* %1663, null
  br i1 %1664, label %1667, label %1665

1665:                                             ; preds = %1661
  %1666 = bitcast i32* %1663 to i8*
  call void @_ZdaPv(i8* %1666) #9
  br label %1667

1667:                                             ; preds = %1665, %1661, %1656
  call void @llvm.lifetime.end.p0i8(i64 32, i8* nonnull %1624) #8
  %1668 = getelementptr inbounds %"class.tflite::RuntimeShape", %"class.tflite::RuntimeShape"* %9, i64 0, i32 0
  %1669 = load i32, i32* %1668, align 8
  %1670 = icmp sgt i32 %1669, 5
  br i1 %1670, label %1671, label %1677

1671:                                             ; preds = %1667
  %1672 = getelementptr inbounds %"class.tflite::RuntimeShape", %"class.tflite::RuntimeShape"* %9, i64 0, i32 1, i32 0
  %1673 = load i32*, i32** %1672, align 8
  %1674 = icmp eq i32* %1673, null
  br i1 %1674, label %1677, label %1675

1675:                                             ; preds = %1671
  %1676 = bitcast i32* %1673 to i8*
  call void @_ZdaPv(i8* %1676) #9
  br label %1677

1677:                                             ; preds = %1675, %1671, %1667
  call void @llvm.lifetime.end.p0i8(i64 32, i8* nonnull %1590) #8
  %1678 = getelementptr inbounds %"class.tflite::RuntimeShape", %"class.tflite::RuntimeShape"* %8, i64 0, i32 0
  %1679 = load i32, i32* %1678, align 8
  %1680 = icmp sgt i32 %1679, 5
  br i1 %1680, label %1681, label %2005

1681:                                             ; preds = %1677
  %1682 = getelementptr inbounds %"class.tflite::RuntimeShape", %"class.tflite::RuntimeShape"* %8, i64 0, i32 1, i32 0
  %1683 = load i32*, i32** %1682, align 8
  %1684 = icmp eq i32* %1683, null
  br i1 %1684, label %2005, label %1685

1685:                                             ; preds = %1681
  %1686 = bitcast i32* %1683 to i8*
  call void @_ZdaPv(i8* %1686) #9
  br label %2005

1687:                                             ; preds = %1524
  %1688 = bitcast %"class.tflite::RuntimeShape"* %11 to i8*
  call void @llvm.lifetime.start.p0i8(i64 32, i8* nonnull %1688) #8
  %1689 = icmp eq %struct.TfLiteTensor* %57, null
  br i1 %1689, label %1690, label %1692

1690:                                             ; preds = %1687
  %1691 = getelementptr inbounds %"class.tflite::RuntimeShape", %"class.tflite::RuntimeShape"* %11, i64 0, i32 0
  store i32 0, i32* %1691, align 8, !alias.scope !410
  br label %1720

1692:                                             ; preds = %1687
  %1693 = getelementptr inbounds %struct.TfLiteTensor, %struct.TfLiteTensor* %57, i64 0, i32 2
  %1694 = load %struct.TfLiteIntArray*, %struct.TfLiteIntArray** %1693, align 8, !noalias !410
  %1695 = getelementptr inbounds %struct.TfLiteIntArray, %struct.TfLiteIntArray* %1694, i64 0, i32 0
  %1696 = load i32, i32* %1695, align 4, !noalias !410
  %1697 = getelementptr inbounds %struct.TfLiteIntArray, %struct.TfLiteIntArray* %1694, i64 0, i32 1, i64 0
  %1698 = getelementptr inbounds %"class.tflite::RuntimeShape", %"class.tflite::RuntimeShape"* %11, i64 0, i32 0
  store i32 %1696, i32* %1698, align 8, !alias.scope !410
  %1699 = icmp sgt i32 %1696, 5
  br i1 %1699, label %1700, label %1707

1700:                                             ; preds = %1692
  %1701 = sext i32 %1696 to i64
  %1702 = shl nsw i64 %1701, 2
  %1703 = call i8* @_Znam(i64 %1702) #9, !noalias !410
  %1704 = getelementptr inbounds %"class.tflite::RuntimeShape", %"class.tflite::RuntimeShape"* %11, i64 0, i32 1, i32 0
  %1705 = bitcast i32** %1704 to i8**
  store i8* %1703, i8** %1705, align 8, !alias.scope !410
  %1706 = bitcast i8* %1703 to i32*
  br label %1712

1707:                                             ; preds = %1692
  %1708 = getelementptr inbounds %"class.tflite::RuntimeShape", %"class.tflite::RuntimeShape"* %11, i64 0, i32 1
  %1709 = bitcast %union.anon* %1708 to i32*
  %1710 = sext i32 %1696 to i64
  %1711 = shl nsw i64 %1710, 2
  br label %1712

1712:                                             ; preds = %1707, %1700
  %1713 = phi i64 [ %1702, %1700 ], [ %1711, %1707 ]
  %1714 = phi i32* [ %1706, %1700 ], [ %1709, %1707 ]
  %1715 = bitcast i32* %1714 to i8*
  %1716 = bitcast i32* %1697 to i8*
  call void @llvm.memcpy.p0i8.p0i8.i64(i8* align 4 %1715, i8* align 4 %1716, i64 %1713, i1 false) #8
  %1717 = getelementptr inbounds %struct.TfLiteTensor, %struct.TfLiteTensor* %57, i64 0, i32 1
  %1718 = bitcast %union.TfLitePtrUnion* %1717 to i8**
  %1719 = load i8*, i8** %1718, align 8
  br label %1720

1720:                                             ; preds = %1712, %1690
  %1721 = phi i32 [ %1696, %1712 ], [ 0, %1690 ]
  %1722 = phi i8* [ %1719, %1712 ], [ null, %1690 ]
  %1723 = bitcast %"class.tflite::RuntimeShape"* %12 to i8*
  call void @llvm.lifetime.start.p0i8(i64 32, i8* nonnull %1723) #8
  %1724 = icmp eq %struct.TfLiteTensor* %67, null
  br i1 %1724, label %1725, label %1727

1725:                                             ; preds = %1720
  %1726 = getelementptr inbounds %"class.tflite::RuntimeShape", %"class.tflite::RuntimeShape"* %12, i64 0, i32 0
  store i32 0, i32* %1726, align 8, !alias.scope !413
  br label %1755

1727:                                             ; preds = %1720
  %1728 = getelementptr inbounds %struct.TfLiteTensor, %struct.TfLiteTensor* %67, i64 0, i32 2
  %1729 = load %struct.TfLiteIntArray*, %struct.TfLiteIntArray** %1728, align 8, !noalias !413
  %1730 = getelementptr inbounds %struct.TfLiteIntArray, %struct.TfLiteIntArray* %1729, i64 0, i32 0
  %1731 = load i32, i32* %1730, align 4, !noalias !413
  %1732 = getelementptr inbounds %struct.TfLiteIntArray, %struct.TfLiteIntArray* %1729, i64 0, i32 1, i64 0
  %1733 = getelementptr inbounds %"class.tflite::RuntimeShape", %"class.tflite::RuntimeShape"* %12, i64 0, i32 0
  store i32 %1731, i32* %1733, align 8, !alias.scope !413
  %1734 = icmp sgt i32 %1731, 5
  br i1 %1734, label %1735, label %1742

1735:                                             ; preds = %1727
  %1736 = sext i32 %1731 to i64
  %1737 = shl nsw i64 %1736, 2
  %1738 = call i8* @_Znam(i64 %1737) #9, !noalias !413
  %1739 = getelementptr inbounds %"class.tflite::RuntimeShape", %"class.tflite::RuntimeShape"* %12, i64 0, i32 1, i32 0
  %1740 = bitcast i32** %1739 to i8**
  store i8* %1738, i8** %1740, align 8, !alias.scope !413
  %1741 = bitcast i8* %1738 to i32*
  br label %1747

1742:                                             ; preds = %1727
  %1743 = getelementptr inbounds %"class.tflite::RuntimeShape", %"class.tflite::RuntimeShape"* %12, i64 0, i32 1
  %1744 = bitcast %union.anon* %1743 to i32*
  %1745 = sext i32 %1731 to i64
  %1746 = shl nsw i64 %1745, 2
  br label %1747

1747:                                             ; preds = %1742, %1735
  %1748 = phi i64 [ %1737, %1735 ], [ %1746, %1742 ]
  %1749 = phi i32* [ %1741, %1735 ], [ %1744, %1742 ]
  %1750 = bitcast i32* %1749 to i8*
  %1751 = bitcast i32* %1732 to i8*
  call void @llvm.memcpy.p0i8.p0i8.i64(i8* align 4 %1750, i8* align 4 %1751, i64 %1748, i1 false) #8
  %1752 = getelementptr inbounds %struct.TfLiteTensor, %struct.TfLiteTensor* %67, i64 0, i32 1
  %1753 = bitcast %union.TfLitePtrUnion* %1752 to i8**
  %1754 = load i8*, i8** %1753, align 8
  br label %1755

1755:                                             ; preds = %1747, %1725
  %1756 = phi i32 [ %1731, %1747 ], [ 0, %1725 ]
  %1757 = phi i8* [ %1754, %1747 ], [ null, %1725 ]
  %1758 = bitcast %"class.tflite::RuntimeShape"* %13 to i8*
  call void @llvm.lifetime.start.p0i8(i64 32, i8* nonnull %1758) #8
  %1759 = icmp eq %struct.TfLiteTensor* %79, null
  br i1 %1759, label %1760, label %1762

1760:                                             ; preds = %1755
  %1761 = getelementptr inbounds %"class.tflite::RuntimeShape", %"class.tflite::RuntimeShape"* %13, i64 0, i32 0
  store i32 0, i32* %1761, align 8, !alias.scope !416
  br label %1790

1762:                                             ; preds = %1755
  %1763 = getelementptr inbounds %struct.TfLiteTensor, %struct.TfLiteTensor* %79, i64 0, i32 2
  %1764 = load %struct.TfLiteIntArray*, %struct.TfLiteIntArray** %1763, align 8, !noalias !416
  %1765 = getelementptr inbounds %struct.TfLiteIntArray, %struct.TfLiteIntArray* %1764, i64 0, i32 0
  %1766 = load i32, i32* %1765, align 4, !noalias !416
  %1767 = getelementptr inbounds %struct.TfLiteIntArray, %struct.TfLiteIntArray* %1764, i64 0, i32 1, i64 0
  %1768 = getelementptr inbounds %"class.tflite::RuntimeShape", %"class.tflite::RuntimeShape"* %13, i64 0, i32 0
  store i32 %1766, i32* %1768, align 8, !alias.scope !416
  %1769 = icmp sgt i32 %1766, 5
  br i1 %1769, label %1770, label %1777

1770:                                             ; preds = %1762
  %1771 = sext i32 %1766 to i64
  %1772 = shl nsw i64 %1771, 2
  %1773 = call i8* @_Znam(i64 %1772) #9, !noalias !416
  %1774 = getelementptr inbounds %"class.tflite::RuntimeShape", %"class.tflite::RuntimeShape"* %13, i64 0, i32 1, i32 0
  %1775 = bitcast i32** %1774 to i8**
  store i8* %1773, i8** %1775, align 8, !alias.scope !416
  %1776 = bitcast i8* %1773 to i32*
  br label %1782

1777:                                             ; preds = %1762
  %1778 = getelementptr inbounds %"class.tflite::RuntimeShape", %"class.tflite::RuntimeShape"* %13, i64 0, i32 1
  %1779 = bitcast %union.anon* %1778 to i32*
  %1780 = sext i32 %1766 to i64
  %1781 = shl nsw i64 %1780, 2
  br label %1782

1782:                                             ; preds = %1777, %1770
  %1783 = phi i64 [ %1772, %1770 ], [ %1781, %1777 ]
  %1784 = phi i32* [ %1776, %1770 ], [ %1779, %1777 ]
  %1785 = bitcast i32* %1784 to i8*
  %1786 = bitcast i32* %1767 to i8*
  call void @llvm.memcpy.p0i8.p0i8.i64(i8* align 4 %1785, i8* align 4 %1786, i64 %1783, i1 false) #8
  %1787 = getelementptr inbounds %struct.TfLiteTensor, %struct.TfLiteTensor* %79, i64 0, i32 1
  %1788 = bitcast %union.TfLitePtrUnion* %1787 to i8**
  %1789 = load i8*, i8** %1788, align 8
  br label %1790

1790:                                             ; preds = %1782, %1760
  %1791 = phi i32 [ %1766, %1782 ], [ 0, %1760 ]
  %1792 = phi i8* [ %1789, %1782 ], [ null, %1760 ]
  %1793 = getelementptr inbounds %"class.tflite::RuntimeShape", %"class.tflite::RuntimeShape"* %11, i64 0, i32 1
  %1794 = icmp sgt i32 %1721, 5
  br i1 %1794, label %1795, label %1798

1795:                                             ; preds = %1790
  %1796 = getelementptr inbounds %union.anon, %union.anon* %1793, i64 0, i32 0
  %1797 = load i32*, i32** %1796, align 8
  br label %1801

1798:                                             ; preds = %1790
  %1799 = bitcast %union.anon* %1793 to i32*
  %1800 = icmp sgt i32 %1721, 0
  br i1 %1800, label %1801, label %1905

1801:                                             ; preds = %1798, %1795
  %1802 = phi i32* [ %1797, %1795 ], [ %1799, %1798 ]
  %1803 = zext i32 %1721 to i64
  %1804 = icmp ult i32 %1721, 8
  br i1 %1804, label %1890, label %1805

1805:                                             ; preds = %1801
  %1806 = and i64 %1803, 4294967288
  %1807 = add nsw i64 %1806, -8
  %1808 = lshr exact i64 %1807, 3
  %1809 = add nuw nsw i64 %1808, 1
  %1810 = and i64 %1809, 3
  %1811 = icmp ult i64 %1807, 24
  br i1 %1811, label %1857, label %1812

1812:                                             ; preds = %1805
  %1813 = sub nsw i64 %1809, %1810
  br label %1814

1814:                                             ; preds = %1814, %1812
  %1815 = phi i64 [ 0, %1812 ], [ %1854, %1814 ]
  %1816 = phi <4 x i32> [ <i32 1, i32 1, i32 1, i32 1>, %1812 ], [ %1852, %1814 ]
  %1817 = phi <4 x i32> [ <i32 1, i32 1, i32 1, i32 1>, %1812 ], [ %1853, %1814 ]
  %1818 = phi i64 [ %1813, %1812 ], [ %1855, %1814 ]
  %1819 = getelementptr inbounds i32, i32* %1802, i64 %1815
  %1820 = bitcast i32* %1819 to <4 x i32>*
  %1821 = load <4 x i32>, <4 x i32>* %1820, align 4
  %1822 = getelementptr inbounds i32, i32* %1819, i64 4
  %1823 = bitcast i32* %1822 to <4 x i32>*
  %1824 = load <4 x i32>, <4 x i32>* %1823, align 4
  %1825 = mul nsw <4 x i32> %1821, %1816
  %1826 = mul nsw <4 x i32> %1824, %1817
  %1827 = or i64 %1815, 8
  %1828 = getelementptr inbounds i32, i32* %1802, i64 %1827
  %1829 = bitcast i32* %1828 to <4 x i32>*
  %1830 = load <4 x i32>, <4 x i32>* %1829, align 4
  %1831 = getelementptr inbounds i32, i32* %1828, i64 4
  %1832 = bitcast i32* %1831 to <4 x i32>*
  %1833 = load <4 x i32>, <4 x i32>* %1832, align 4
  %1834 = mul nsw <4 x i32> %1830, %1825
  %1835 = mul nsw <4 x i32> %1833, %1826
  %1836 = or i64 %1815, 16
  %1837 = getelementptr inbounds i32, i32* %1802, i64 %1836
  %1838 = bitcast i32* %1837 to <4 x i32>*
  %1839 = load <4 x i32>, <4 x i32>* %1838, align 4
  %1840 = getelementptr inbounds i32, i32* %1837, i64 4
  %1841 = bitcast i32* %1840 to <4 x i32>*
  %1842 = load <4 x i32>, <4 x i32>* %1841, align 4
  %1843 = mul nsw <4 x i32> %1839, %1834
  %1844 = mul nsw <4 x i32> %1842, %1835
  %1845 = or i64 %1815, 24
  %1846 = getelementptr inbounds i32, i32* %1802, i64 %1845
  %1847 = bitcast i32* %1846 to <4 x i32>*
  %1848 = load <4 x i32>, <4 x i32>* %1847, align 4
  %1849 = getelementptr inbounds i32, i32* %1846, i64 4
  %1850 = bitcast i32* %1849 to <4 x i32>*
  %1851 = load <4 x i32>, <4 x i32>* %1850, align 4
  %1852 = mul nsw <4 x i32> %1848, %1843
  %1853 = mul nsw <4 x i32> %1851, %1844
  %1854 = add i64 %1815, 32
  %1855 = add i64 %1818, -4
  %1856 = icmp eq i64 %1855, 0
  br i1 %1856, label %1857, label %1814, !llvm.loop !419

1857:                                             ; preds = %1814, %1805
  %1858 = phi <4 x i32> [ undef, %1805 ], [ %1852, %1814 ]
  %1859 = phi <4 x i32> [ undef, %1805 ], [ %1853, %1814 ]
  %1860 = phi i64 [ 0, %1805 ], [ %1854, %1814 ]
  %1861 = phi <4 x i32> [ <i32 1, i32 1, i32 1, i32 1>, %1805 ], [ %1852, %1814 ]
  %1862 = phi <4 x i32> [ <i32 1, i32 1, i32 1, i32 1>, %1805 ], [ %1853, %1814 ]
  %1863 = icmp eq i64 %1810, 0
  br i1 %1863, label %1880, label %1864

1864:                                             ; preds = %1857, %1864
  %1865 = phi i64 [ %1877, %1864 ], [ %1860, %1857 ]
  %1866 = phi <4 x i32> [ %1875, %1864 ], [ %1861, %1857 ]
  %1867 = phi <4 x i32> [ %1876, %1864 ], [ %1862, %1857 ]
  %1868 = phi i64 [ %1878, %1864 ], [ %1810, %1857 ]
  %1869 = getelementptr inbounds i32, i32* %1802, i64 %1865
  %1870 = bitcast i32* %1869 to <4 x i32>*
  %1871 = load <4 x i32>, <4 x i32>* %1870, align 4
  %1872 = getelementptr inbounds i32, i32* %1869, i64 4
  %1873 = bitcast i32* %1872 to <4 x i32>*
  %1874 = load <4 x i32>, <4 x i32>* %1873, align 4
  %1875 = mul nsw <4 x i32> %1871, %1866
  %1876 = mul nsw <4 x i32> %1874, %1867
  %1877 = add i64 %1865, 8
  %1878 = add i64 %1868, -1
  %1879 = icmp eq i64 %1878, 0
  br i1 %1879, label %1880, label %1864, !llvm.loop !420

1880:                                             ; preds = %1864, %1857
  %1881 = phi <4 x i32> [ %1858, %1857 ], [ %1875, %1864 ]
  %1882 = phi <4 x i32> [ %1859, %1857 ], [ %1876, %1864 ]
  %1883 = mul <4 x i32> %1882, %1881
  %1884 = shufflevector <4 x i32> %1883, <4 x i32> undef, <4 x i32> <i32 2, i32 3, i32 undef, i32 undef>
  %1885 = mul <4 x i32> %1883, %1884
  %1886 = shufflevector <4 x i32> %1885, <4 x i32> undef, <4 x i32> <i32 1, i32 undef, i32 undef, i32 undef>
  %1887 = mul <4 x i32> %1885, %1886
  %1888 = extractelement <4 x i32> %1887, i32 0
  %1889 = icmp eq i64 %1806, %1803
  br i1 %1889, label %1901, label %1890

1890:                                             ; preds = %1880, %1801
  %1891 = phi i64 [ 0, %1801 ], [ %1806, %1880 ]
  %1892 = phi i32 [ 1, %1801 ], [ %1888, %1880 ]
  br label %1893

1893:                                             ; preds = %1890, %1893
  %1894 = phi i64 [ %1899, %1893 ], [ %1891, %1890 ]
  %1895 = phi i32 [ %1898, %1893 ], [ %1892, %1890 ]
  %1896 = getelementptr inbounds i32, i32* %1802, i64 %1894
  %1897 = load i32, i32* %1896, align 4
  %1898 = mul nsw i32 %1897, %1895
  %1899 = add nuw nsw i64 %1894, 1
  %1900 = icmp eq i64 %1899, %1803
  br i1 %1900, label %1901, label %1893, !llvm.loop !421

1901:                                             ; preds = %1893, %1880
  %1902 = phi i32 [ %1888, %1880 ], [ %1898, %1893 ]
  %1903 = sext i32 %1902 to i64
  %1904 = icmp sgt i32 %1902, 0
  br i1 %1904, label %1905, label %1982

1905:                                             ; preds = %1901, %1798
  %1906 = phi i64 [ %1903, %1901 ], [ 1, %1798 ]
  %1907 = sext i32 %1546 to i64
  %1908 = sub nsw i32 0, %1548
  %1909 = zext i32 %1908 to i64
  %1910 = shl nsw i64 -1, %1909
  %1911 = trunc i64 %1910 to i32
  %1912 = xor i32 %1911, -1
  %1913 = ashr i32 %1912, 1
  %1914 = sext i32 %1551 to i64
  %1915 = sub nsw i32 0, %1553
  %1916 = zext i32 %1915 to i64
  %1917 = shl nsw i64 -1, %1916
  %1918 = trunc i64 %1917 to i32
  %1919 = xor i32 %1918, -1
  %1920 = ashr i32 %1919, 1
  %1921 = icmp eq i32 %1546, -2147483648
  %1922 = icmp eq i32 %1551, -2147483648
  br label %1923

1923:                                             ; preds = %1968, %1905
  %1924 = phi i64 [ 0, %1905 ], [ %1980, %1968 ]
  %1925 = getelementptr inbounds i8, i8* %1722, i64 %1924
  %1926 = load i8, i8* %1925, align 1
  %1927 = zext i8 %1926 to i32
  %1928 = sub i32 %1927, %1526
  %1929 = getelementptr inbounds i8, i8* %1757, i64 %1924
  %1930 = load i8, i8* %1929, align 1
  %1931 = zext i8 %1930 to i32
  %1932 = sub i32 %1931, %1529
  %1933 = shl i32 %1928, 8
  %1934 = shl i32 %1932, 8
  %1935 = icmp eq i32 %1933, %1546
  br i1 %1935, label %1938, label %1936

1936:                                             ; preds = %1923
  %1937 = sext i32 %1933 to i64
  br label %1939

1938:                                             ; preds = %1923
  br i1 %1921, label %1947, label %1939

1939:                                             ; preds = %1938, %1936
  %1940 = phi i64 [ %1937, %1936 ], [ %1907, %1938 ]
  %1941 = mul nsw i64 %1940, %1907
  %1942 = icmp sgt i64 %1941, -1
  %1943 = select i1 %1942, i64 1073741824, i64 -1073741823
  %1944 = add nsw i64 %1943, %1941
  %1945 = sdiv i64 %1944, 2147483648
  %1946 = trunc i64 %1945 to i32
  br label %1947

1947:                                             ; preds = %1939, %1938
  %1948 = phi i32 [ %1946, %1939 ], [ 2147483647, %1938 ]
  %1949 = and i32 %1948, %1912
  %1950 = lshr i32 %1948, 31
  %1951 = add nsw i32 %1950, %1913
  %1952 = ashr i32 %1948, %1908
  %1953 = icmp sgt i32 %1949, %1951
  %1954 = zext i1 %1953 to i32
  %1955 = add nsw i32 %1952, %1954
  %1956 = icmp eq i32 %1934, %1551
  br i1 %1956, label %1959, label %1957

1957:                                             ; preds = %1947
  %1958 = sext i32 %1934 to i64
  br label %1960

1959:                                             ; preds = %1947
  br i1 %1922, label %1968, label %1960

1960:                                             ; preds = %1959, %1957
  %1961 = phi i64 [ %1958, %1957 ], [ %1914, %1959 ]
  %1962 = mul nsw i64 %1961, %1914
  %1963 = icmp sgt i64 %1962, -1
  %1964 = select i1 %1963, i64 1073741824, i64 -1073741823
  %1965 = add nsw i64 %1964, %1962
  %1966 = sdiv i64 %1965, 2147483648
  %1967 = trunc i64 %1966 to i32
  br label %1968

1968:                                             ; preds = %1960, %1959
  %1969 = phi i32 [ %1967, %1960 ], [ 2147483647, %1959 ]
  %1970 = and i32 %1969, %1919
  %1971 = lshr i32 %1969, 31
  %1972 = add nsw i32 %1971, %1920
  %1973 = ashr i32 %1969, %1915
  %1974 = icmp sgt i32 %1970, %1972
  %1975 = zext i1 %1974 to i32
  %1976 = add nsw i32 %1973, %1975
  %1977 = icmp sgt i32 %1955, %1976
  %1978 = getelementptr inbounds i8, i8* %1792, i64 %1924
  %1979 = zext i1 %1977 to i8
  store i8 %1979, i8* %1978, align 1
  %1980 = add nuw nsw i64 %1924, 1
  %1981 = icmp eq i64 %1980, %1906
  br i1 %1981, label %1982, label %1923

1982:                                             ; preds = %1968, %1901
  %1983 = icmp sgt i32 %1791, 5
  br i1 %1983, label %1984, label %1990

1984:                                             ; preds = %1982
  %1985 = getelementptr inbounds %"class.tflite::RuntimeShape", %"class.tflite::RuntimeShape"* %13, i64 0, i32 1, i32 0
  %1986 = load i32*, i32** %1985, align 8
  %1987 = icmp eq i32* %1986, null
  br i1 %1987, label %1990, label %1988

1988:                                             ; preds = %1984
  %1989 = bitcast i32* %1986 to i8*
  call void @_ZdaPv(i8* %1989) #9
  br label %1990

1990:                                             ; preds = %1988, %1984, %1982
  call void @llvm.lifetime.end.p0i8(i64 32, i8* nonnull %1758) #8
  %1991 = icmp sgt i32 %1756, 5
  br i1 %1991, label %1992, label %1998

1992:                                             ; preds = %1990
  %1993 = getelementptr inbounds %"class.tflite::RuntimeShape", %"class.tflite::RuntimeShape"* %12, i64 0, i32 1, i32 0
  %1994 = load i32*, i32** %1993, align 8
  %1995 = icmp eq i32* %1994, null
  br i1 %1995, label %1998, label %1996

1996:                                             ; preds = %1992
  %1997 = bitcast i32* %1994 to i8*
  call void @_ZdaPv(i8* %1997) #9
  br label %1998

1998:                                             ; preds = %1996, %1992, %1990
  call void @llvm.lifetime.end.p0i8(i64 32, i8* nonnull %1723) #8
  br i1 %1794, label %1999, label %2005

1999:                                             ; preds = %1998
  %2000 = getelementptr inbounds %"class.tflite::RuntimeShape", %"class.tflite::RuntimeShape"* %11, i64 0, i32 1, i32 0
  %2001 = load i32*, i32** %2000, align 8
  %2002 = icmp eq i32* %2001, null
  br i1 %2002, label %2005, label %2003

2003:                                             ; preds = %1999
  %2004 = bitcast i32* %2001 to i8*
  call void @_ZdaPv(i8* %2004) #9
  br label %2005

2005:                                             ; preds = %1998, %1999, %2003, %1677, %1681, %1685
  %2006 = phi i8* [ %1556, %1685 ], [ %1556, %1681 ], [ %1556, %1677 ], [ %1688, %2003 ], [ %1688, %1999 ], [ %1688, %1998 ]
  call void @llvm.lifetime.end.p0i8(i64 32, i8* nonnull %2006) #8
  call void @llvm.lifetime.end.p0i8(i64 32, i8* nonnull %1541) #8
  call void @llvm.lifetime.end.p0i8(i64 4, i8* nonnull %1537) #8
  call void @llvm.lifetime.end.p0i8(i64 4, i8* nonnull %1536) #8
  call void @llvm.lifetime.end.p0i8(i64 4, i8* nonnull %1532) #8
  call void @llvm.lifetime.end.p0i8(i64 4, i8* nonnull %1531) #8
  br label %2493

2007:                                             ; preds = %78
  %2008 = getelementptr inbounds %struct.TfLiteTensor, %struct.TfLiteTensor* %57, i64 0, i32 3, i32 1
  %2009 = load i32, i32* %2008, align 4
  %2010 = sub nsw i32 0, %2009
  %2011 = getelementptr inbounds %struct.TfLiteTensor, %struct.TfLiteTensor* %67, i64 0, i32 3, i32 1
  %2012 = load i32, i32* %2011, align 4
  %2013 = sub nsw i32 0, %2012
  %2014 = bitcast i32* %35 to i8*
  call void @llvm.lifetime.start.p0i8(i64 4, i8* nonnull %2014) #8
  store i32 -1431655766, i32* %35, align 4
  %2015 = bitcast i32* %36 to i8*
  call void @llvm.lifetime.start.p0i8(i64 4, i8* nonnull %2015) #8
  store i32 -1431655766, i32* %36, align 4
  %2016 = getelementptr inbounds %struct.TfLiteTensor, %struct.TfLiteTensor* %57, i64 0, i32 3, i32 0
  %2017 = load float, float* %2016, align 8
  %2018 = fpext float %2017 to double
  call void @_ZN6tflite35QuantizeMultiplierSmallerThanOneExpEdPiS0_(double %2018, i32* nonnull %35, i32* nonnull %36) #8
  %2019 = bitcast i32* %37 to i8*
  call void @llvm.lifetime.start.p0i8(i64 4, i8* nonnull %2019) #8
  store i32 -1431655766, i32* %37, align 4
  %2020 = bitcast i32* %38 to i8*
  call void @llvm.lifetime.start.p0i8(i64 4, i8* nonnull %2020) #8
  store i32 -1431655766, i32* %38, align 4
  %2021 = getelementptr inbounds %struct.TfLiteTensor, %struct.TfLiteTensor* %67, i64 0, i32 3, i32 0
  %2022 = load float, float* %2021, align 8
  %2023 = fpext float %2022 to double
  call void @_ZN6tflite35QuantizeMultiplierSmallerThanOneExpEdPiS0_(double %2023, i32* nonnull %37, i32* nonnull %38) #8
  %2024 = bitcast %"struct.tflite::ComparisonParams"* %39 to i8*
  call void @llvm.lifetime.start.p0i8(i64 32, i8* nonnull %2024) #8
  %2025 = getelementptr inbounds %"struct.tflite::ComparisonParams", %"struct.tflite::ComparisonParams"* %39, i64 0, i32 7
  %2026 = bitcast i8* %2025 to i32*
  store i32 -1431655766, i32* %2026, align 4
  %2027 = getelementptr inbounds %"struct.tflite::ComparisonParams", %"struct.tflite::ComparisonParams"* %39, i64 0, i32 0
  store i32 8, i32* %2027, align 4
  %2028 = getelementptr inbounds %"struct.tflite::ComparisonParams", %"struct.tflite::ComparisonParams"* %39, i64 0, i32 1
  store i32 %2010, i32* %2028, align 4
  %2029 = load i32, i32* %35, align 4
  %2030 = getelementptr inbounds %"struct.tflite::ComparisonParams", %"struct.tflite::ComparisonParams"* %39, i64 0, i32 2
  store i32 %2029, i32* %2030, align 4
  %2031 = load i32, i32* %36, align 4
  %2032 = getelementptr inbounds %"struct.tflite::ComparisonParams", %"struct.tflite::ComparisonParams"* %39, i64 0, i32 3
  store i32 %2031, i32* %2032, align 4
  %2033 = getelementptr inbounds %"struct.tflite::ComparisonParams", %"struct.tflite::ComparisonParams"* %39, i64 0, i32 4
  store i32 %2013, i32* %2033, align 4
  %2034 = load i32, i32* %37, align 4
  %2035 = getelementptr inbounds %"struct.tflite::ComparisonParams", %"struct.tflite::ComparisonParams"* %39, i64 0, i32 5
  store i32 %2034, i32* %2035, align 4
  %2036 = load i32, i32* %38, align 4
  %2037 = getelementptr inbounds %"struct.tflite::ComparisonParams", %"struct.tflite::ComparisonParams"* %39, i64 0, i32 6
  store i32 %2036, i32* %2037, align 4
  br i1 %80, label %2170, label %2038

2038:                                             ; preds = %2007
  %2039 = bitcast %"class.tflite::RuntimeShape"* %40 to i8*
  call void @llvm.lifetime.start.p0i8(i64 32, i8* nonnull %2039) #8
  %2040 = icmp eq %struct.TfLiteTensor* %57, null
  br i1 %2040, label %2041, label %2043

2041:                                             ; preds = %2038
  %2042 = getelementptr inbounds %"class.tflite::RuntimeShape", %"class.tflite::RuntimeShape"* %40, i64 0, i32 0
  store i32 0, i32* %2042, align 8, !alias.scope !422
  br label %2071

2043:                                             ; preds = %2038
  %2044 = getelementptr inbounds %struct.TfLiteTensor, %struct.TfLiteTensor* %57, i64 0, i32 2
  %2045 = load %struct.TfLiteIntArray*, %struct.TfLiteIntArray** %2044, align 8, !noalias !422
  %2046 = getelementptr inbounds %struct.TfLiteIntArray, %struct.TfLiteIntArray* %2045, i64 0, i32 0
  %2047 = load i32, i32* %2046, align 4, !noalias !422
  %2048 = getelementptr inbounds %struct.TfLiteIntArray, %struct.TfLiteIntArray* %2045, i64 0, i32 1, i64 0
  %2049 = getelementptr inbounds %"class.tflite::RuntimeShape", %"class.tflite::RuntimeShape"* %40, i64 0, i32 0
  store i32 %2047, i32* %2049, align 8, !alias.scope !422
  %2050 = icmp sgt i32 %2047, 5
  br i1 %2050, label %2051, label %2058

2051:                                             ; preds = %2043
  %2052 = sext i32 %2047 to i64
  %2053 = shl nsw i64 %2052, 2
  %2054 = call i8* @_Znam(i64 %2053) #9, !noalias !422
  %2055 = getelementptr inbounds %"class.tflite::RuntimeShape", %"class.tflite::RuntimeShape"* %40, i64 0, i32 1, i32 0
  %2056 = bitcast i32** %2055 to i8**
  store i8* %2054, i8** %2056, align 8, !alias.scope !422
  %2057 = bitcast i8* %2054 to i32*
  br label %2063

2058:                                             ; preds = %2043
  %2059 = getelementptr inbounds %"class.tflite::RuntimeShape", %"class.tflite::RuntimeShape"* %40, i64 0, i32 1
  %2060 = bitcast %union.anon* %2059 to i32*
  %2061 = sext i32 %2047 to i64
  %2062 = shl nsw i64 %2061, 2
  br label %2063

2063:                                             ; preds = %2058, %2051
  %2064 = phi i64 [ %2053, %2051 ], [ %2062, %2058 ]
  %2065 = phi i32* [ %2057, %2051 ], [ %2060, %2058 ]
  %2066 = bitcast i32* %2065 to i8*
  %2067 = bitcast i32* %2048 to i8*
  call void @llvm.memcpy.p0i8.p0i8.i64(i8* align 4 %2066, i8* align 4 %2067, i64 %2064, i1 false) #8
  %2068 = getelementptr inbounds %struct.TfLiteTensor, %struct.TfLiteTensor* %57, i64 0, i32 1
  %2069 = bitcast %union.TfLitePtrUnion* %2068 to i8**
  %2070 = load i8*, i8** %2069, align 8
  br label %2071

2071:                                             ; preds = %2063, %2041
  %2072 = phi i8* [ %2070, %2063 ], [ null, %2041 ]
  %2073 = bitcast %"class.tflite::RuntimeShape"* %41 to i8*
  call void @llvm.lifetime.start.p0i8(i64 32, i8* nonnull %2073) #8
  %2074 = icmp eq %struct.TfLiteTensor* %67, null
  br i1 %2074, label %2075, label %2077

2075:                                             ; preds = %2071
  %2076 = getelementptr inbounds %"class.tflite::RuntimeShape", %"class.tflite::RuntimeShape"* %41, i64 0, i32 0
  store i32 0, i32* %2076, align 8, !alias.scope !425
  br label %2105

2077:                                             ; preds = %2071
  %2078 = getelementptr inbounds %struct.TfLiteTensor, %struct.TfLiteTensor* %67, i64 0, i32 2
  %2079 = load %struct.TfLiteIntArray*, %struct.TfLiteIntArray** %2078, align 8, !noalias !425
  %2080 = getelementptr inbounds %struct.TfLiteIntArray, %struct.TfLiteIntArray* %2079, i64 0, i32 0
  %2081 = load i32, i32* %2080, align 4, !noalias !425
  %2082 = getelementptr inbounds %struct.TfLiteIntArray, %struct.TfLiteIntArray* %2079, i64 0, i32 1, i64 0
  %2083 = getelementptr inbounds %"class.tflite::RuntimeShape", %"class.tflite::RuntimeShape"* %41, i64 0, i32 0
  store i32 %2081, i32* %2083, align 8, !alias.scope !425
  %2084 = icmp sgt i32 %2081, 5
  br i1 %2084, label %2085, label %2092

2085:                                             ; preds = %2077
  %2086 = sext i32 %2081 to i64
  %2087 = shl nsw i64 %2086, 2
  %2088 = call i8* @_Znam(i64 %2087) #9, !noalias !425
  %2089 = getelementptr inbounds %"class.tflite::RuntimeShape", %"class.tflite::RuntimeShape"* %41, i64 0, i32 1, i32 0
  %2090 = bitcast i32** %2089 to i8**
  store i8* %2088, i8** %2090, align 8, !alias.scope !425
  %2091 = bitcast i8* %2088 to i32*
  br label %2097

2092:                                             ; preds = %2077
  %2093 = getelementptr inbounds %"class.tflite::RuntimeShape", %"class.tflite::RuntimeShape"* %41, i64 0, i32 1
  %2094 = bitcast %union.anon* %2093 to i32*
  %2095 = sext i32 %2081 to i64
  %2096 = shl nsw i64 %2095, 2
  br label %2097

2097:                                             ; preds = %2092, %2085
  %2098 = phi i64 [ %2087, %2085 ], [ %2096, %2092 ]
  %2099 = phi i32* [ %2091, %2085 ], [ %2094, %2092 ]
  %2100 = bitcast i32* %2099 to i8*
  %2101 = bitcast i32* %2082 to i8*
  call void @llvm.memcpy.p0i8.p0i8.i64(i8* align 4 %2100, i8* align 4 %2101, i64 %2098, i1 false) #8
  %2102 = getelementptr inbounds %struct.TfLiteTensor, %struct.TfLiteTensor* %67, i64 0, i32 1
  %2103 = bitcast %union.TfLitePtrUnion* %2102 to i8**
  %2104 = load i8*, i8** %2103, align 8
  br label %2105

2105:                                             ; preds = %2097, %2075
  %2106 = phi i8* [ %2104, %2097 ], [ null, %2075 ]
  %2107 = bitcast %"class.tflite::RuntimeShape"* %42 to i8*
  call void @llvm.lifetime.start.p0i8(i64 32, i8* nonnull %2107) #8
  %2108 = icmp eq %struct.TfLiteTensor* %79, null
  br i1 %2108, label %2109, label %2111

2109:                                             ; preds = %2105
  %2110 = getelementptr inbounds %"class.tflite::RuntimeShape", %"class.tflite::RuntimeShape"* %42, i64 0, i32 0
  store i32 0, i32* %2110, align 8, !alias.scope !428
  br label %2139

2111:                                             ; preds = %2105
  %2112 = getelementptr inbounds %struct.TfLiteTensor, %struct.TfLiteTensor* %79, i64 0, i32 2
  %2113 = load %struct.TfLiteIntArray*, %struct.TfLiteIntArray** %2112, align 8, !noalias !428
  %2114 = getelementptr inbounds %struct.TfLiteIntArray, %struct.TfLiteIntArray* %2113, i64 0, i32 0
  %2115 = load i32, i32* %2114, align 4, !noalias !428
  %2116 = getelementptr inbounds %struct.TfLiteIntArray, %struct.TfLiteIntArray* %2113, i64 0, i32 1, i64 0
  %2117 = getelementptr inbounds %"class.tflite::RuntimeShape", %"class.tflite::RuntimeShape"* %42, i64 0, i32 0
  store i32 %2115, i32* %2117, align 8, !alias.scope !428
  %2118 = icmp sgt i32 %2115, 5
  br i1 %2118, label %2119, label %2126

2119:                                             ; preds = %2111
  %2120 = sext i32 %2115 to i64
  %2121 = shl nsw i64 %2120, 2
  %2122 = call i8* @_Znam(i64 %2121) #9, !noalias !428
  %2123 = getelementptr inbounds %"class.tflite::RuntimeShape", %"class.tflite::RuntimeShape"* %42, i64 0, i32 1, i32 0
  %2124 = bitcast i32** %2123 to i8**
  store i8* %2122, i8** %2124, align 8, !alias.scope !428
  %2125 = bitcast i8* %2122 to i32*
  br label %2131

2126:                                             ; preds = %2111
  %2127 = getelementptr inbounds %"class.tflite::RuntimeShape", %"class.tflite::RuntimeShape"* %42, i64 0, i32 1
  %2128 = bitcast %union.anon* %2127 to i32*
  %2129 = sext i32 %2115 to i64
  %2130 = shl nsw i64 %2129, 2
  br label %2131

2131:                                             ; preds = %2126, %2119
  %2132 = phi i64 [ %2121, %2119 ], [ %2130, %2126 ]
  %2133 = phi i32* [ %2125, %2119 ], [ %2128, %2126 ]
  %2134 = bitcast i32* %2133 to i8*
  %2135 = bitcast i32* %2116 to i8*
  call void @llvm.memcpy.p0i8.p0i8.i64(i8* align 4 %2134, i8* align 4 %2135, i64 %2132, i1 false) #8
  %2136 = getelementptr inbounds %struct.TfLiteTensor, %struct.TfLiteTensor* %79, i64 0, i32 1
  %2137 = bitcast %union.TfLitePtrUnion* %2136 to i8**
  %2138 = load i8*, i8** %2137, align 8
  br label %2139

2139:                                             ; preds = %2131, %2109
  %2140 = phi i8* [ %2138, %2131 ], [ null, %2109 ]
  call void @_ZN6tflite13reference_ops36BroadcastComparison4DSlowWithScalingIaXadL_ZNS0_9GreaterFnIiEEbT_S3_EEEEvRKNS_16ComparisonParamsERKNS_12RuntimeShapeEPKS3_S9_SB_S9_Pb(%"struct.tflite::ComparisonParams"* nonnull dereferenceable(32) %39, %"class.tflite::RuntimeShape"* nonnull dereferenceable(32) %40, i8* %2072, %"class.tflite::RuntimeShape"* nonnull dereferenceable(32) %41, i8* %2106, %"class.tflite::RuntimeShape"* nonnull dereferenceable(32) %42, i8* %2140) #8
  %2141 = getelementptr inbounds %"class.tflite::RuntimeShape", %"class.tflite::RuntimeShape"* %42, i64 0, i32 0
  %2142 = load i32, i32* %2141, align 8
  %2143 = icmp sgt i32 %2142, 5
  br i1 %2143, label %2144, label %2150

2144:                                             ; preds = %2139
  %2145 = getelementptr inbounds %"class.tflite::RuntimeShape", %"class.tflite::RuntimeShape"* %42, i64 0, i32 1, i32 0
  %2146 = load i32*, i32** %2145, align 8
  %2147 = icmp eq i32* %2146, null
  br i1 %2147, label %2150, label %2148

2148:                                             ; preds = %2144
  %2149 = bitcast i32* %2146 to i8*
  call void @_ZdaPv(i8* %2149) #9
  br label %2150

2150:                                             ; preds = %2148, %2144, %2139
  call void @llvm.lifetime.end.p0i8(i64 32, i8* nonnull %2107) #8
  %2151 = getelementptr inbounds %"class.tflite::RuntimeShape", %"class.tflite::RuntimeShape"* %41, i64 0, i32 0
  %2152 = load i32, i32* %2151, align 8
  %2153 = icmp sgt i32 %2152, 5
  br i1 %2153, label %2154, label %2160

2154:                                             ; preds = %2150
  %2155 = getelementptr inbounds %"class.tflite::RuntimeShape", %"class.tflite::RuntimeShape"* %41, i64 0, i32 1, i32 0
  %2156 = load i32*, i32** %2155, align 8
  %2157 = icmp eq i32* %2156, null
  br i1 %2157, label %2160, label %2158

2158:                                             ; preds = %2154
  %2159 = bitcast i32* %2156 to i8*
  call void @_ZdaPv(i8* %2159) #9
  br label %2160

2160:                                             ; preds = %2158, %2154, %2150
  call void @llvm.lifetime.end.p0i8(i64 32, i8* nonnull %2073) #8
  %2161 = getelementptr inbounds %"class.tflite::RuntimeShape", %"class.tflite::RuntimeShape"* %40, i64 0, i32 0
  %2162 = load i32, i32* %2161, align 8
  %2163 = icmp sgt i32 %2162, 5
  br i1 %2163, label %2164, label %2488

2164:                                             ; preds = %2160
  %2165 = getelementptr inbounds %"class.tflite::RuntimeShape", %"class.tflite::RuntimeShape"* %40, i64 0, i32 1, i32 0
  %2166 = load i32*, i32** %2165, align 8
  %2167 = icmp eq i32* %2166, null
  br i1 %2167, label %2488, label %2168

2168:                                             ; preds = %2164
  %2169 = bitcast i32* %2166 to i8*
  call void @_ZdaPv(i8* %2169) #9
  br label %2488

2170:                                             ; preds = %2007
  %2171 = bitcast %"class.tflite::RuntimeShape"* %43 to i8*
  call void @llvm.lifetime.start.p0i8(i64 32, i8* nonnull %2171) #8
  %2172 = icmp eq %struct.TfLiteTensor* %57, null
  br i1 %2172, label %2173, label %2175

2173:                                             ; preds = %2170
  %2174 = getelementptr inbounds %"class.tflite::RuntimeShape", %"class.tflite::RuntimeShape"* %43, i64 0, i32 0
  store i32 0, i32* %2174, align 8, !alias.scope !431
  br label %2203

2175:                                             ; preds = %2170
  %2176 = getelementptr inbounds %struct.TfLiteTensor, %struct.TfLiteTensor* %57, i64 0, i32 2
  %2177 = load %struct.TfLiteIntArray*, %struct.TfLiteIntArray** %2176, align 8, !noalias !431
  %2178 = getelementptr inbounds %struct.TfLiteIntArray, %struct.TfLiteIntArray* %2177, i64 0, i32 0
  %2179 = load i32, i32* %2178, align 4, !noalias !431
  %2180 = getelementptr inbounds %struct.TfLiteIntArray, %struct.TfLiteIntArray* %2177, i64 0, i32 1, i64 0
  %2181 = getelementptr inbounds %"class.tflite::RuntimeShape", %"class.tflite::RuntimeShape"* %43, i64 0, i32 0
  store i32 %2179, i32* %2181, align 8, !alias.scope !431
  %2182 = icmp sgt i32 %2179, 5
  br i1 %2182, label %2183, label %2190

2183:                                             ; preds = %2175
  %2184 = sext i32 %2179 to i64
  %2185 = shl nsw i64 %2184, 2
  %2186 = call i8* @_Znam(i64 %2185) #9, !noalias !431
  %2187 = getelementptr inbounds %"class.tflite::RuntimeShape", %"class.tflite::RuntimeShape"* %43, i64 0, i32 1, i32 0
  %2188 = bitcast i32** %2187 to i8**
  store i8* %2186, i8** %2188, align 8, !alias.scope !431
  %2189 = bitcast i8* %2186 to i32*
  br label %2195

2190:                                             ; preds = %2175
  %2191 = getelementptr inbounds %"class.tflite::RuntimeShape", %"class.tflite::RuntimeShape"* %43, i64 0, i32 1
  %2192 = bitcast %union.anon* %2191 to i32*
  %2193 = sext i32 %2179 to i64
  %2194 = shl nsw i64 %2193, 2
  br label %2195

2195:                                             ; preds = %2190, %2183
  %2196 = phi i64 [ %2185, %2183 ], [ %2194, %2190 ]
  %2197 = phi i32* [ %2189, %2183 ], [ %2192, %2190 ]
  %2198 = bitcast i32* %2197 to i8*
  %2199 = bitcast i32* %2180 to i8*
  call void @llvm.memcpy.p0i8.p0i8.i64(i8* align 4 %2198, i8* align 4 %2199, i64 %2196, i1 false) #8
  %2200 = getelementptr inbounds %struct.TfLiteTensor, %struct.TfLiteTensor* %57, i64 0, i32 1
  %2201 = bitcast %union.TfLitePtrUnion* %2200 to i8**
  %2202 = load i8*, i8** %2201, align 8
  br label %2203

2203:                                             ; preds = %2195, %2173
  %2204 = phi i32 [ %2179, %2195 ], [ 0, %2173 ]
  %2205 = phi i8* [ %2202, %2195 ], [ null, %2173 ]
  %2206 = bitcast %"class.tflite::RuntimeShape"* %44 to i8*
  call void @llvm.lifetime.start.p0i8(i64 32, i8* nonnull %2206) #8
  %2207 = icmp eq %struct.TfLiteTensor* %67, null
  br i1 %2207, label %2208, label %2210

2208:                                             ; preds = %2203
  %2209 = getelementptr inbounds %"class.tflite::RuntimeShape", %"class.tflite::RuntimeShape"* %44, i64 0, i32 0
  store i32 0, i32* %2209, align 8, !alias.scope !434
  br label %2238

2210:                                             ; preds = %2203
  %2211 = getelementptr inbounds %struct.TfLiteTensor, %struct.TfLiteTensor* %67, i64 0, i32 2
  %2212 = load %struct.TfLiteIntArray*, %struct.TfLiteIntArray** %2211, align 8, !noalias !434
  %2213 = getelementptr inbounds %struct.TfLiteIntArray, %struct.TfLiteIntArray* %2212, i64 0, i32 0
  %2214 = load i32, i32* %2213, align 4, !noalias !434
  %2215 = getelementptr inbounds %struct.TfLiteIntArray, %struct.TfLiteIntArray* %2212, i64 0, i32 1, i64 0
  %2216 = getelementptr inbounds %"class.tflite::RuntimeShape", %"class.tflite::RuntimeShape"* %44, i64 0, i32 0
  store i32 %2214, i32* %2216, align 8, !alias.scope !434
  %2217 = icmp sgt i32 %2214, 5
  br i1 %2217, label %2218, label %2225

2218:                                             ; preds = %2210
  %2219 = sext i32 %2214 to i64
  %2220 = shl nsw i64 %2219, 2
  %2221 = call i8* @_Znam(i64 %2220) #9, !noalias !434
  %2222 = getelementptr inbounds %"class.tflite::RuntimeShape", %"class.tflite::RuntimeShape"* %44, i64 0, i32 1, i32 0
  %2223 = bitcast i32** %2222 to i8**
  store i8* %2221, i8** %2223, align 8, !alias.scope !434
  %2224 = bitcast i8* %2221 to i32*
  br label %2230

2225:                                             ; preds = %2210
  %2226 = getelementptr inbounds %"class.tflite::RuntimeShape", %"class.tflite::RuntimeShape"* %44, i64 0, i32 1
  %2227 = bitcast %union.anon* %2226 to i32*
  %2228 = sext i32 %2214 to i64
  %2229 = shl nsw i64 %2228, 2
  br label %2230

2230:                                             ; preds = %2225, %2218
  %2231 = phi i64 [ %2220, %2218 ], [ %2229, %2225 ]
  %2232 = phi i32* [ %2224, %2218 ], [ %2227, %2225 ]
  %2233 = bitcast i32* %2232 to i8*
  %2234 = bitcast i32* %2215 to i8*
  call void @llvm.memcpy.p0i8.p0i8.i64(i8* align 4 %2233, i8* align 4 %2234, i64 %2231, i1 false) #8
  %2235 = getelementptr inbounds %struct.TfLiteTensor, %struct.TfLiteTensor* %67, i64 0, i32 1
  %2236 = bitcast %union.TfLitePtrUnion* %2235 to i8**
  %2237 = load i8*, i8** %2236, align 8
  br label %2238

2238:                                             ; preds = %2230, %2208
  %2239 = phi i32 [ %2214, %2230 ], [ 0, %2208 ]
  %2240 = phi i8* [ %2237, %2230 ], [ null, %2208 ]
  %2241 = bitcast %"class.tflite::RuntimeShape"* %45 to i8*
  call void @llvm.lifetime.start.p0i8(i64 32, i8* nonnull %2241) #8
  %2242 = icmp eq %struct.TfLiteTensor* %79, null
  br i1 %2242, label %2243, label %2245

2243:                                             ; preds = %2238
  %2244 = getelementptr inbounds %"class.tflite::RuntimeShape", %"class.tflite::RuntimeShape"* %45, i64 0, i32 0
  store i32 0, i32* %2244, align 8, !alias.scope !437
  br label %2273

2245:                                             ; preds = %2238
  %2246 = getelementptr inbounds %struct.TfLiteTensor, %struct.TfLiteTensor* %79, i64 0, i32 2
  %2247 = load %struct.TfLiteIntArray*, %struct.TfLiteIntArray** %2246, align 8, !noalias !437
  %2248 = getelementptr inbounds %struct.TfLiteIntArray, %struct.TfLiteIntArray* %2247, i64 0, i32 0
  %2249 = load i32, i32* %2248, align 4, !noalias !437
  %2250 = getelementptr inbounds %struct.TfLiteIntArray, %struct.TfLiteIntArray* %2247, i64 0, i32 1, i64 0
  %2251 = getelementptr inbounds %"class.tflite::RuntimeShape", %"class.tflite::RuntimeShape"* %45, i64 0, i32 0
  store i32 %2249, i32* %2251, align 8, !alias.scope !437
  %2252 = icmp sgt i32 %2249, 5
  br i1 %2252, label %2253, label %2260

2253:                                             ; preds = %2245
  %2254 = sext i32 %2249 to i64
  %2255 = shl nsw i64 %2254, 2
  %2256 = call i8* @_Znam(i64 %2255) #9, !noalias !437
  %2257 = getelementptr inbounds %"class.tflite::RuntimeShape", %"class.tflite::RuntimeShape"* %45, i64 0, i32 1, i32 0
  %2258 = bitcast i32** %2257 to i8**
  store i8* %2256, i8** %2258, align 8, !alias.scope !437
  %2259 = bitcast i8* %2256 to i32*
  br label %2265

2260:                                             ; preds = %2245
  %2261 = getelementptr inbounds %"class.tflite::RuntimeShape", %"class.tflite::RuntimeShape"* %45, i64 0, i32 1
  %2262 = bitcast %union.anon* %2261 to i32*
  %2263 = sext i32 %2249 to i64
  %2264 = shl nsw i64 %2263, 2
  br label %2265

2265:                                             ; preds = %2260, %2253
  %2266 = phi i64 [ %2255, %2253 ], [ %2264, %2260 ]
  %2267 = phi i32* [ %2259, %2253 ], [ %2262, %2260 ]
  %2268 = bitcast i32* %2267 to i8*
  %2269 = bitcast i32* %2250 to i8*
  call void @llvm.memcpy.p0i8.p0i8.i64(i8* align 4 %2268, i8* align 4 %2269, i64 %2266, i1 false) #8
  %2270 = getelementptr inbounds %struct.TfLiteTensor, %struct.TfLiteTensor* %79, i64 0, i32 1
  %2271 = bitcast %union.TfLitePtrUnion* %2270 to i8**
  %2272 = load i8*, i8** %2271, align 8
  br label %2273

2273:                                             ; preds = %2265, %2243
  %2274 = phi i32 [ %2249, %2265 ], [ 0, %2243 ]
  %2275 = phi i8* [ %2272, %2265 ], [ null, %2243 ]
  %2276 = getelementptr inbounds %"class.tflite::RuntimeShape", %"class.tflite::RuntimeShape"* %43, i64 0, i32 1
  %2277 = icmp sgt i32 %2204, 5
  br i1 %2277, label %2278, label %2281

2278:                                             ; preds = %2273
  %2279 = getelementptr inbounds %union.anon, %union.anon* %2276, i64 0, i32 0
  %2280 = load i32*, i32** %2279, align 8
  br label %2284

2281:                                             ; preds = %2273
  %2282 = bitcast %union.anon* %2276 to i32*
  %2283 = icmp sgt i32 %2204, 0
  br i1 %2283, label %2284, label %2388

2284:                                             ; preds = %2281, %2278
  %2285 = phi i32* [ %2280, %2278 ], [ %2282, %2281 ]
  %2286 = zext i32 %2204 to i64
  %2287 = icmp ult i32 %2204, 8
  br i1 %2287, label %2373, label %2288

2288:                                             ; preds = %2284
  %2289 = and i64 %2286, 4294967288
  %2290 = add nsw i64 %2289, -8
  %2291 = lshr exact i64 %2290, 3
  %2292 = add nuw nsw i64 %2291, 1
  %2293 = and i64 %2292, 3
  %2294 = icmp ult i64 %2290, 24
  br i1 %2294, label %2340, label %2295

2295:                                             ; preds = %2288
  %2296 = sub nsw i64 %2292, %2293
  br label %2297

2297:                                             ; preds = %2297, %2295
  %2298 = phi i64 [ 0, %2295 ], [ %2337, %2297 ]
  %2299 = phi <4 x i32> [ <i32 1, i32 1, i32 1, i32 1>, %2295 ], [ %2335, %2297 ]
  %2300 = phi <4 x i32> [ <i32 1, i32 1, i32 1, i32 1>, %2295 ], [ %2336, %2297 ]
  %2301 = phi i64 [ %2296, %2295 ], [ %2338, %2297 ]
  %2302 = getelementptr inbounds i32, i32* %2285, i64 %2298
  %2303 = bitcast i32* %2302 to <4 x i32>*
  %2304 = load <4 x i32>, <4 x i32>* %2303, align 4
  %2305 = getelementptr inbounds i32, i32* %2302, i64 4
  %2306 = bitcast i32* %2305 to <4 x i32>*
  %2307 = load <4 x i32>, <4 x i32>* %2306, align 4
  %2308 = mul nsw <4 x i32> %2304, %2299
  %2309 = mul nsw <4 x i32> %2307, %2300
  %2310 = or i64 %2298, 8
  %2311 = getelementptr inbounds i32, i32* %2285, i64 %2310
  %2312 = bitcast i32* %2311 to <4 x i32>*
  %2313 = load <4 x i32>, <4 x i32>* %2312, align 4
  %2314 = getelementptr inbounds i32, i32* %2311, i64 4
  %2315 = bitcast i32* %2314 to <4 x i32>*
  %2316 = load <4 x i32>, <4 x i32>* %2315, align 4
  %2317 = mul nsw <4 x i32> %2313, %2308
  %2318 = mul nsw <4 x i32> %2316, %2309
  %2319 = or i64 %2298, 16
  %2320 = getelementptr inbounds i32, i32* %2285, i64 %2319
  %2321 = bitcast i32* %2320 to <4 x i32>*
  %2322 = load <4 x i32>, <4 x i32>* %2321, align 4
  %2323 = getelementptr inbounds i32, i32* %2320, i64 4
  %2324 = bitcast i32* %2323 to <4 x i32>*
  %2325 = load <4 x i32>, <4 x i32>* %2324, align 4
  %2326 = mul nsw <4 x i32> %2322, %2317
  %2327 = mul nsw <4 x i32> %2325, %2318
  %2328 = or i64 %2298, 24
  %2329 = getelementptr inbounds i32, i32* %2285, i64 %2328
  %2330 = bitcast i32* %2329 to <4 x i32>*
  %2331 = load <4 x i32>, <4 x i32>* %2330, align 4
  %2332 = getelementptr inbounds i32, i32* %2329, i64 4
  %2333 = bitcast i32* %2332 to <4 x i32>*
  %2334 = load <4 x i32>, <4 x i32>* %2333, align 4
  %2335 = mul nsw <4 x i32> %2331, %2326
  %2336 = mul nsw <4 x i32> %2334, %2327
  %2337 = add i64 %2298, 32
  %2338 = add i64 %2301, -4
  %2339 = icmp eq i64 %2338, 0
  br i1 %2339, label %2340, label %2297, !llvm.loop !440

2340:                                             ; preds = %2297, %2288
  %2341 = phi <4 x i32> [ undef, %2288 ], [ %2335, %2297 ]
  %2342 = phi <4 x i32> [ undef, %2288 ], [ %2336, %2297 ]
  %2343 = phi i64 [ 0, %2288 ], [ %2337, %2297 ]
  %2344 = phi <4 x i32> [ <i32 1, i32 1, i32 1, i32 1>, %2288 ], [ %2335, %2297 ]
  %2345 = phi <4 x i32> [ <i32 1, i32 1, i32 1, i32 1>, %2288 ], [ %2336, %2297 ]
  %2346 = icmp eq i64 %2293, 0
  br i1 %2346, label %2363, label %2347

2347:                                             ; preds = %2340, %2347
  %2348 = phi i64 [ %2360, %2347 ], [ %2343, %2340 ]
  %2349 = phi <4 x i32> [ %2358, %2347 ], [ %2344, %2340 ]
  %2350 = phi <4 x i32> [ %2359, %2347 ], [ %2345, %2340 ]
  %2351 = phi i64 [ %2361, %2347 ], [ %2293, %2340 ]
  %2352 = getelementptr inbounds i32, i32* %2285, i64 %2348
  %2353 = bitcast i32* %2352 to <4 x i32>*
  %2354 = load <4 x i32>, <4 x i32>* %2353, align 4
  %2355 = getelementptr inbounds i32, i32* %2352, i64 4
  %2356 = bitcast i32* %2355 to <4 x i32>*
  %2357 = load <4 x i32>, <4 x i32>* %2356, align 4
  %2358 = mul nsw <4 x i32> %2354, %2349
  %2359 = mul nsw <4 x i32> %2357, %2350
  %2360 = add i64 %2348, 8
  %2361 = add i64 %2351, -1
  %2362 = icmp eq i64 %2361, 0
  br i1 %2362, label %2363, label %2347, !llvm.loop !441

2363:                                             ; preds = %2347, %2340
  %2364 = phi <4 x i32> [ %2341, %2340 ], [ %2358, %2347 ]
  %2365 = phi <4 x i32> [ %2342, %2340 ], [ %2359, %2347 ]
  %2366 = mul <4 x i32> %2365, %2364
  %2367 = shufflevector <4 x i32> %2366, <4 x i32> undef, <4 x i32> <i32 2, i32 3, i32 undef, i32 undef>
  %2368 = mul <4 x i32> %2366, %2367
  %2369 = shufflevector <4 x i32> %2368, <4 x i32> undef, <4 x i32> <i32 1, i32 undef, i32 undef, i32 undef>
  %2370 = mul <4 x i32> %2368, %2369
  %2371 = extractelement <4 x i32> %2370, i32 0
  %2372 = icmp eq i64 %2289, %2286
  br i1 %2372, label %2384, label %2373

2373:                                             ; preds = %2363, %2284
  %2374 = phi i64 [ 0, %2284 ], [ %2289, %2363 ]
  %2375 = phi i32 [ 1, %2284 ], [ %2371, %2363 ]
  br label %2376

2376:                                             ; preds = %2373, %2376
  %2377 = phi i64 [ %2382, %2376 ], [ %2374, %2373 ]
  %2378 = phi i32 [ %2381, %2376 ], [ %2375, %2373 ]
  %2379 = getelementptr inbounds i32, i32* %2285, i64 %2377
  %2380 = load i32, i32* %2379, align 4
  %2381 = mul nsw i32 %2380, %2378
  %2382 = add nuw nsw i64 %2377, 1
  %2383 = icmp eq i64 %2382, %2286
  br i1 %2383, label %2384, label %2376, !llvm.loop !442

2384:                                             ; preds = %2376, %2363
  %2385 = phi i32 [ %2371, %2363 ], [ %2381, %2376 ]
  %2386 = sext i32 %2385 to i64
  %2387 = icmp sgt i32 %2385, 0
  br i1 %2387, label %2388, label %2465

2388:                                             ; preds = %2384, %2281
  %2389 = phi i64 [ %2386, %2384 ], [ 1, %2281 ]
  %2390 = sext i32 %2029 to i64
  %2391 = sub nsw i32 0, %2031
  %2392 = zext i32 %2391 to i64
  %2393 = shl nsw i64 -1, %2392
  %2394 = trunc i64 %2393 to i32
  %2395 = xor i32 %2394, -1
  %2396 = ashr i32 %2395, 1
  %2397 = sext i32 %2034 to i64
  %2398 = sub nsw i32 0, %2036
  %2399 = zext i32 %2398 to i64
  %2400 = shl nsw i64 -1, %2399
  %2401 = trunc i64 %2400 to i32
  %2402 = xor i32 %2401, -1
  %2403 = ashr i32 %2402, 1
  %2404 = icmp eq i32 %2029, -2147483648
  %2405 = icmp eq i32 %2034, -2147483648
  br label %2406

2406:                                             ; preds = %2451, %2388
  %2407 = phi i64 [ 0, %2388 ], [ %2463, %2451 ]
  %2408 = getelementptr inbounds i8, i8* %2205, i64 %2407
  %2409 = load i8, i8* %2408, align 1
  %2410 = sext i8 %2409 to i32
  %2411 = sub i32 %2410, %2009
  %2412 = getelementptr inbounds i8, i8* %2240, i64 %2407
  %2413 = load i8, i8* %2412, align 1
  %2414 = sext i8 %2413 to i32
  %2415 = sub i32 %2414, %2012
  %2416 = shl i32 %2411, 8
  %2417 = shl i32 %2415, 8
  %2418 = icmp eq i32 %2416, %2029
  br i1 %2418, label %2421, label %2419

2419:                                             ; preds = %2406
  %2420 = sext i32 %2416 to i64
  br label %2422

2421:                                             ; preds = %2406
  br i1 %2404, label %2430, label %2422

2422:                                             ; preds = %2421, %2419
  %2423 = phi i64 [ %2420, %2419 ], [ %2390, %2421 ]
  %2424 = mul nsw i64 %2423, %2390
  %2425 = icmp sgt i64 %2424, -1
  %2426 = select i1 %2425, i64 1073741824, i64 -1073741823
  %2427 = add nsw i64 %2426, %2424
  %2428 = sdiv i64 %2427, 2147483648
  %2429 = trunc i64 %2428 to i32
  br label %2430

2430:                                             ; preds = %2422, %2421
  %2431 = phi i32 [ %2429, %2422 ], [ 2147483647, %2421 ]
  %2432 = and i32 %2431, %2395
  %2433 = lshr i32 %2431, 31
  %2434 = add nsw i32 %2433, %2396
  %2435 = ashr i32 %2431, %2391
  %2436 = icmp sgt i32 %2432, %2434
  %2437 = zext i1 %2436 to i32
  %2438 = add nsw i32 %2435, %2437
  %2439 = icmp eq i32 %2417, %2034
  br i1 %2439, label %2442, label %2440

2440:                                             ; preds = %2430
  %2441 = sext i32 %2417 to i64
  br label %2443

2442:                                             ; preds = %2430
  br i1 %2405, label %2451, label %2443

2443:                                             ; preds = %2442, %2440
  %2444 = phi i64 [ %2441, %2440 ], [ %2397, %2442 ]
  %2445 = mul nsw i64 %2444, %2397
  %2446 = icmp sgt i64 %2445, -1
  %2447 = select i1 %2446, i64 1073741824, i64 -1073741823
  %2448 = add nsw i64 %2447, %2445
  %2449 = sdiv i64 %2448, 2147483648
  %2450 = trunc i64 %2449 to i32
  br label %2451

2451:                                             ; preds = %2443, %2442
  %2452 = phi i32 [ %2450, %2443 ], [ 2147483647, %2442 ]
  %2453 = and i32 %2452, %2402
  %2454 = lshr i32 %2452, 31
  %2455 = add nsw i32 %2454, %2403
  %2456 = ashr i32 %2452, %2398
  %2457 = icmp sgt i32 %2453, %2455
  %2458 = zext i1 %2457 to i32
  %2459 = add nsw i32 %2456, %2458
  %2460 = icmp sgt i32 %2438, %2459
  %2461 = getelementptr inbounds i8, i8* %2275, i64 %2407
  %2462 = zext i1 %2460 to i8
  store i8 %2462, i8* %2461, align 1
  %2463 = add nuw nsw i64 %2407, 1
  %2464 = icmp eq i64 %2463, %2389
  br i1 %2464, label %2465, label %2406

2465:                                             ; preds = %2451, %2384
  %2466 = icmp sgt i32 %2274, 5
  br i1 %2466, label %2467, label %2473

2467:                                             ; preds = %2465
  %2468 = getelementptr inbounds %"class.tflite::RuntimeShape", %"class.tflite::RuntimeShape"* %45, i64 0, i32 1, i32 0
  %2469 = load i32*, i32** %2468, align 8
  %2470 = icmp eq i32* %2469, null
  br i1 %2470, label %2473, label %2471

2471:                                             ; preds = %2467
  %2472 = bitcast i32* %2469 to i8*
  call void @_ZdaPv(i8* %2472) #9
  br label %2473

2473:                                             ; preds = %2471, %2467, %2465
  call void @llvm.lifetime.end.p0i8(i64 32, i8* nonnull %2241) #8
  %2474 = icmp sgt i32 %2239, 5
  br i1 %2474, label %2475, label %2481

2475:                                             ; preds = %2473
  %2476 = getelementptr inbounds %"class.tflite::RuntimeShape", %"class.tflite::RuntimeShape"* %44, i64 0, i32 1, i32 0
  %2477 = load i32*, i32** %2476, align 8
  %2478 = icmp eq i32* %2477, null
  br i1 %2478, label %2481, label %2479

2479:                                             ; preds = %2475
  %2480 = bitcast i32* %2477 to i8*
  call void @_ZdaPv(i8* %2480) #9
  br label %2481

2481:                                             ; preds = %2479, %2475, %2473
  call void @llvm.lifetime.end.p0i8(i64 32, i8* nonnull %2206) #8
  br i1 %2277, label %2482, label %2488

2482:                                             ; preds = %2481
  %2483 = getelementptr inbounds %"class.tflite::RuntimeShape", %"class.tflite::RuntimeShape"* %43, i64 0, i32 1, i32 0
  %2484 = load i32*, i32** %2483, align 8
  %2485 = icmp eq i32* %2484, null
  br i1 %2485, label %2488, label %2486

2486:                                             ; preds = %2482
  %2487 = bitcast i32* %2484 to i8*
  call void @_ZdaPv(i8* %2487) #9
  br label %2488

2488:                                             ; preds = %2481, %2482, %2486, %2160, %2164, %2168
  %2489 = phi i8* [ %2039, %2168 ], [ %2039, %2164 ], [ %2039, %2160 ], [ %2171, %2486 ], [ %2171, %2482 ], [ %2171, %2481 ]
  call void @llvm.lifetime.end.p0i8(i64 32, i8* nonnull %2489) #8
  call void @llvm.lifetime.end.p0i8(i64 32, i8* nonnull %2024) #8
  call void @llvm.lifetime.end.p0i8(i64 4, i8* nonnull %2020) #8
  call void @llvm.lifetime.end.p0i8(i64 4, i8* nonnull %2019) #8
  call void @llvm.lifetime.end.p0i8(i64 4, i8* nonnull %2015) #8
  call void @llvm.lifetime.end.p0i8(i64 4, i8* nonnull %2014) #8
  br label %2493

2490:                                             ; preds = %78
  %2491 = getelementptr inbounds %struct.TfLiteContext, %struct.TfLiteContext* %0, i64 0, i32 5
  %2492 = load void (%struct.TfLiteContext*, i8*, ...)*, void (%struct.TfLiteContext*, i8*, ...)** %2491, align 8
  tail call void (%struct.TfLiteContext*, i8*, ...) %2492(%struct.TfLiteContext* %0, i8* getelementptr inbounds ([51 x i8], [51 x i8]* @.str.15, i64 0, i64 0), i32 %82) #8
  br label %2493

2493:                                             ; preds = %596, %1107, %1522, %2005, %2488, %2490
  %2494 = phi i32 [ 1, %2490 ], [ 0, %2488 ], [ 0, %2005 ], [ 0, %1522 ], [ 0, %1107 ], [ 0, %596 ]
  ret i32 %2494
}

; Function Attrs: norecurse nounwind readnone ssp uwtable
define hidden nonnull %struct.TfLiteRegistration* @_ZN6tflite3ops7builtin22Register_GREATER_EQUALEv() local_unnamed_addr #0 {
  ret %struct.TfLiteRegistration* @_ZZN6tflite3ops7builtin22Register_GREATER_EQUALEvE1r
}

; Function Attrs: nounwind ssp uwtable
define internal i32 @_ZN6tflite3ops7builtin11comparisons12_GLOBAL__N_116GreaterEqualEvalEP13TfLiteContextP10TfLiteNode(%struct.TfLiteContext*, %struct.TfLiteNode* nocapture readonly) #1 {
  %3 = alloca i32, align 4
  %4 = alloca i32, align 4
  %5 = alloca i32, align 4
  %6 = alloca i32, align 4
  %7 = alloca %"struct.tflite::ComparisonParams", align 4
  %8 = alloca %"class.tflite::RuntimeShape", align 8
  %9 = alloca %"class.tflite::RuntimeShape", align 8
  %10 = alloca %"class.tflite::RuntimeShape", align 8
  %11 = alloca %"class.tflite::RuntimeShape", align 8
  %12 = alloca %"class.tflite::RuntimeShape", align 8
  %13 = alloca %"class.tflite::RuntimeShape", align 8
  %14 = alloca %"struct.tflite::ComparisonParams", align 4
  %15 = alloca %"class.tflite::RuntimeShape", align 8
  %16 = alloca %"class.tflite::RuntimeShape", align 8
  %17 = alloca %"class.tflite::RuntimeShape", align 8
  %18 = alloca %"class.tflite::RuntimeShape", align 8
  %19 = alloca %"class.tflite::RuntimeShape", align 8
  %20 = alloca %"class.tflite::RuntimeShape", align 8
  %21 = alloca %"struct.tflite::ComparisonParams", align 4
  %22 = alloca %"class.tflite::RuntimeShape", align 8
  %23 = alloca %"class.tflite::RuntimeShape", align 8
  %24 = alloca %"class.tflite::RuntimeShape", align 8
  %25 = alloca %"class.tflite::RuntimeShape", align 8
  %26 = alloca %"class.tflite::RuntimeShape", align 8
  %27 = alloca %"class.tflite::RuntimeShape", align 8
  %28 = alloca %"struct.tflite::ComparisonParams", align 4
  %29 = alloca %"class.tflite::RuntimeShape", align 8
  %30 = alloca %"class.tflite::RuntimeShape", align 8
  %31 = alloca %"class.tflite::RuntimeShape", align 8
  %32 = alloca %"class.tflite::RuntimeShape", align 8
  %33 = alloca %"class.tflite::RuntimeShape", align 8
  %34 = alloca %"class.tflite::RuntimeShape", align 8
  %35 = alloca i32, align 4
  %36 = alloca i32, align 4
  %37 = alloca i32, align 4
  %38 = alloca i32, align 4
  %39 = alloca %"struct.tflite::ComparisonParams", align 4
  %40 = alloca %"class.tflite::RuntimeShape", align 8
  %41 = alloca %"class.tflite::RuntimeShape", align 8
  %42 = alloca %"class.tflite::RuntimeShape", align 8
  %43 = alloca %"class.tflite::RuntimeShape", align 8
  %44 = alloca %"class.tflite::RuntimeShape", align 8
  %45 = alloca %"class.tflite::RuntimeShape", align 8
  %46 = getelementptr inbounds %struct.TfLiteNode, %struct.TfLiteNode* %1, i64 0, i32 0
  %47 = load %struct.TfLiteIntArray*, %struct.TfLiteIntArray** %46, align 8
  %48 = getelementptr inbounds %struct.TfLiteIntArray, %struct.TfLiteIntArray* %47, i64 0, i32 1, i64 0
  %49 = load i32, i32* %48, align 4
  %50 = icmp slt i32 %49, 0
  br i1 %50, label %56, label %51

51:                                               ; preds = %2
  %52 = getelementptr inbounds %struct.TfLiteContext, %struct.TfLiteContext* %0, i64 0, i32 2
  %53 = load %struct.TfLiteTensor*, %struct.TfLiteTensor** %52, align 8
  %54 = sext i32 %49 to i64
  %55 = getelementptr inbounds %struct.TfLiteTensor, %struct.TfLiteTensor* %53, i64 %54
  br label %56

56:                                               ; preds = %2, %51
  %57 = phi %struct.TfLiteTensor* [ %55, %51 ], [ null, %2 ]
  %58 = getelementptr inbounds %struct.TfLiteIntArray, %struct.TfLiteIntArray* %47, i64 0, i32 1, i64 1
  %59 = load i32, i32* %58, align 4
  %60 = icmp slt i32 %59, 0
  br i1 %60, label %66, label %61

61:                                               ; preds = %56
  %62 = getelementptr inbounds %struct.TfLiteContext, %struct.TfLiteContext* %0, i64 0, i32 2
  %63 = load %struct.TfLiteTensor*, %struct.TfLiteTensor** %62, align 8
  %64 = sext i32 %59 to i64
  %65 = getelementptr inbounds %struct.TfLiteTensor, %struct.TfLiteTensor* %63, i64 %64
  br label %66

66:                                               ; preds = %56, %61
  %67 = phi %struct.TfLiteTensor* [ %65, %61 ], [ null, %56 ]
  %68 = getelementptr inbounds %struct.TfLiteNode, %struct.TfLiteNode* %1, i64 0, i32 1
  %69 = load %struct.TfLiteIntArray*, %struct.TfLiteIntArray** %68, align 8
  %70 = getelementptr inbounds %struct.TfLiteIntArray, %struct.TfLiteIntArray* %69, i64 0, i32 1, i64 0
  %71 = load i32, i32* %70, align 4
  %72 = icmp slt i32 %71, 0
  br i1 %72, label %78, label %73

73:                                               ; preds = %66
  %74 = getelementptr inbounds %struct.TfLiteContext, %struct.TfLiteContext* %0, i64 0, i32 2
  %75 = load %struct.TfLiteTensor*, %struct.TfLiteTensor** %74, align 8
  %76 = sext i32 %71 to i64
  %77 = getelementptr inbounds %struct.TfLiteTensor, %struct.TfLiteTensor* %75, i64 %76
  br label %78

78:                                               ; preds = %66, %73
  %79 = phi %struct.TfLiteTensor* [ %77, %73 ], [ null, %66 ]
  %80 = tail call zeroext i1 @_ZN6tflite14HaveSameShapesEPK12TfLiteTensorS2_(%struct.TfLiteTensor* %57, %struct.TfLiteTensor* %67) #8
  %81 = getelementptr inbounds %struct.TfLiteTensor, %struct.TfLiteTensor* %57, i64 0, i32 0
  %82 = load i32, i32* %81, align 8
  switch i32 %82, label %2490 [
    i32 1, label %83
    i32 2, label %598
    i32 4, label %1109
    i32 3, label %1524
    i32 9, label %2007
  ]

83:                                               ; preds = %78
  %84 = bitcast %"struct.tflite::ComparisonParams"* %28 to i8*
  call void @llvm.lifetime.start.p0i8(i64 32, i8* nonnull %84) #8
  call void @llvm.memset.p0i8.i64(i8* nonnull align 4 %84, i8 -86, i64 32, i1 false) #8
  br i1 %80, label %186, label %85

85:                                               ; preds = %83
  %86 = bitcast %"class.tflite::RuntimeShape"* %29 to i8*
  call void @llvm.lifetime.start.p0i8(i64 32, i8* nonnull %86) #8
  %87 = icmp eq %struct.TfLiteTensor* %57, null
  br i1 %87, label %88, label %90

88:                                               ; preds = %85
  %89 = getelementptr inbounds %"class.tflite::RuntimeShape", %"class.tflite::RuntimeShape"* %29, i64 0, i32 0
  store i32 0, i32* %89, align 8, !alias.scope !443
  br label %118

90:                                               ; preds = %85
  %91 = getelementptr inbounds %struct.TfLiteTensor, %struct.TfLiteTensor* %57, i64 0, i32 2
  %92 = load %struct.TfLiteIntArray*, %struct.TfLiteIntArray** %91, align 8, !noalias !443
  %93 = getelementptr inbounds %struct.TfLiteIntArray, %struct.TfLiteIntArray* %92, i64 0, i32 0
  %94 = load i32, i32* %93, align 4, !noalias !443
  %95 = getelementptr inbounds %struct.TfLiteIntArray, %struct.TfLiteIntArray* %92, i64 0, i32 1, i64 0
  %96 = getelementptr inbounds %"class.tflite::RuntimeShape", %"class.tflite::RuntimeShape"* %29, i64 0, i32 0
  store i32 %94, i32* %96, align 8, !alias.scope !443
  %97 = icmp sgt i32 %94, 5
  br i1 %97, label %98, label %105

98:                                               ; preds = %90
  %99 = sext i32 %94 to i64
  %100 = shl nsw i64 %99, 2
  %101 = tail call i8* @_Znam(i64 %100) #9, !noalias !443
  %102 = getelementptr inbounds %"class.tflite::RuntimeShape", %"class.tflite::RuntimeShape"* %29, i64 0, i32 1, i32 0
  %103 = bitcast i32** %102 to i8**
  store i8* %101, i8** %103, align 8, !alias.scope !443
  %104 = bitcast i8* %101 to i32*
  br label %110

105:                                              ; preds = %90
  %106 = getelementptr inbounds %"class.tflite::RuntimeShape", %"class.tflite::RuntimeShape"* %29, i64 0, i32 1
  %107 = bitcast %union.anon* %106 to i32*
  %108 = sext i32 %94 to i64
  %109 = shl nsw i64 %108, 2
  br label %110

110:                                              ; preds = %105, %98
  %111 = phi i64 [ %100, %98 ], [ %109, %105 ]
  %112 = phi i32* [ %104, %98 ], [ %107, %105 ]
  %113 = bitcast i32* %112 to i8*
  %114 = bitcast i32* %95 to i8*
  call void @llvm.memcpy.p0i8.p0i8.i64(i8* align 4 %113, i8* align 4 %114, i64 %111, i1 false) #8
  %115 = getelementptr inbounds %struct.TfLiteTensor, %struct.TfLiteTensor* %57, i64 0, i32 1
  %116 = bitcast %union.TfLitePtrUnion* %115 to float**
  %117 = load float*, float** %116, align 8
  br label %118

118:                                              ; preds = %110, %88
  %119 = phi float* [ %117, %110 ], [ null, %88 ]
  %120 = bitcast %"class.tflite::RuntimeShape"* %30 to i8*
  call void @llvm.lifetime.start.p0i8(i64 32, i8* nonnull %120) #8
  %121 = icmp eq %struct.TfLiteTensor* %67, null
  br i1 %121, label %122, label %124

122:                                              ; preds = %118
  %123 = getelementptr inbounds %"class.tflite::RuntimeShape", %"class.tflite::RuntimeShape"* %30, i64 0, i32 0
  store i32 0, i32* %123, align 8, !alias.scope !446
  br label %152

124:                                              ; preds = %118
  %125 = getelementptr inbounds %struct.TfLiteTensor, %struct.TfLiteTensor* %67, i64 0, i32 2
  %126 = load %struct.TfLiteIntArray*, %struct.TfLiteIntArray** %125, align 8, !noalias !446
  %127 = getelementptr inbounds %struct.TfLiteIntArray, %struct.TfLiteIntArray* %126, i64 0, i32 0
  %128 = load i32, i32* %127, align 4, !noalias !446
  %129 = getelementptr inbounds %struct.TfLiteIntArray, %struct.TfLiteIntArray* %126, i64 0, i32 1, i64 0
  %130 = getelementptr inbounds %"class.tflite::RuntimeShape", %"class.tflite::RuntimeShape"* %30, i64 0, i32 0
  store i32 %128, i32* %130, align 8, !alias.scope !446
  %131 = icmp sgt i32 %128, 5
  br i1 %131, label %132, label %139

132:                                              ; preds = %124
  %133 = sext i32 %128 to i64
  %134 = shl nsw i64 %133, 2
  %135 = tail call i8* @_Znam(i64 %134) #9, !noalias !446
  %136 = getelementptr inbounds %"class.tflite::RuntimeShape", %"class.tflite::RuntimeShape"* %30, i64 0, i32 1, i32 0
  %137 = bitcast i32** %136 to i8**
  store i8* %135, i8** %137, align 8, !alias.scope !446
  %138 = bitcast i8* %135 to i32*
  br label %144

139:                                              ; preds = %124
  %140 = getelementptr inbounds %"class.tflite::RuntimeShape", %"class.tflite::RuntimeShape"* %30, i64 0, i32 1
  %141 = bitcast %union.anon* %140 to i32*
  %142 = sext i32 %128 to i64
  %143 = shl nsw i64 %142, 2
  br label %144

144:                                              ; preds = %139, %132
  %145 = phi i64 [ %134, %132 ], [ %143, %139 ]
  %146 = phi i32* [ %138, %132 ], [ %141, %139 ]
  %147 = bitcast i32* %146 to i8*
  %148 = bitcast i32* %129 to i8*
  call void @llvm.memcpy.p0i8.p0i8.i64(i8* align 4 %147, i8* align 4 %148, i64 %145, i1 false) #8
  %149 = getelementptr inbounds %struct.TfLiteTensor, %struct.TfLiteTensor* %67, i64 0, i32 1
  %150 = bitcast %union.TfLitePtrUnion* %149 to float**
  %151 = load float*, float** %150, align 8
  br label %152

152:                                              ; preds = %144, %122
  %153 = phi float* [ %151, %144 ], [ null, %122 ]
  %154 = bitcast %"class.tflite::RuntimeShape"* %31 to i8*
  call void @llvm.lifetime.start.p0i8(i64 32, i8* nonnull %154) #8
  %155 = icmp eq %struct.TfLiteTensor* %79, null
  br i1 %155, label %156, label %158

156:                                              ; preds = %152
  %157 = getelementptr inbounds %"class.tflite::RuntimeShape", %"class.tflite::RuntimeShape"* %31, i64 0, i32 0
  store i32 0, i32* %157, align 8, !alias.scope !449
  br label %565

158:                                              ; preds = %152
  %159 = getelementptr inbounds %struct.TfLiteTensor, %struct.TfLiteTensor* %79, i64 0, i32 2
  %160 = load %struct.TfLiteIntArray*, %struct.TfLiteIntArray** %159, align 8, !noalias !449
  %161 = getelementptr inbounds %struct.TfLiteIntArray, %struct.TfLiteIntArray* %160, i64 0, i32 0
  %162 = load i32, i32* %161, align 4, !noalias !449
  %163 = getelementptr inbounds %struct.TfLiteIntArray, %struct.TfLiteIntArray* %160, i64 0, i32 1, i64 0
  %164 = getelementptr inbounds %"class.tflite::RuntimeShape", %"class.tflite::RuntimeShape"* %31, i64 0, i32 0
  store i32 %162, i32* %164, align 8, !alias.scope !449
  %165 = icmp sgt i32 %162, 5
  br i1 %165, label %166, label %173

166:                                              ; preds = %158
  %167 = sext i32 %162 to i64
  %168 = shl nsw i64 %167, 2
  %169 = tail call i8* @_Znam(i64 %168) #9, !noalias !449
  %170 = getelementptr inbounds %"class.tflite::RuntimeShape", %"class.tflite::RuntimeShape"* %31, i64 0, i32 1, i32 0
  %171 = bitcast i32** %170 to i8**
  store i8* %169, i8** %171, align 8, !alias.scope !449
  %172 = bitcast i8* %169 to i32*
  br label %178

173:                                              ; preds = %158
  %174 = getelementptr inbounds %"class.tflite::RuntimeShape", %"class.tflite::RuntimeShape"* %31, i64 0, i32 1
  %175 = bitcast %union.anon* %174 to i32*
  %176 = sext i32 %162 to i64
  %177 = shl nsw i64 %176, 2
  br label %178

178:                                              ; preds = %173, %166
  %179 = phi i64 [ %168, %166 ], [ %177, %173 ]
  %180 = phi i32* [ %172, %166 ], [ %175, %173 ]
  %181 = bitcast i32* %180 to i8*
  %182 = bitcast i32* %163 to i8*
  call void @llvm.memcpy.p0i8.p0i8.i64(i8* align 4 %181, i8* align 4 %182, i64 %179, i1 false) #8
  %183 = getelementptr inbounds %struct.TfLiteTensor, %struct.TfLiteTensor* %79, i64 0, i32 1
  %184 = bitcast %union.TfLitePtrUnion* %183 to i8**
  %185 = load i8*, i8** %184, align 8
  br label %565

186:                                              ; preds = %83
  %187 = bitcast %"class.tflite::RuntimeShape"* %32 to i8*
  call void @llvm.lifetime.start.p0i8(i64 32, i8* nonnull %187) #8
  %188 = icmp eq %struct.TfLiteTensor* %57, null
  br i1 %188, label %189, label %191

189:                                              ; preds = %186
  %190 = getelementptr inbounds %"class.tflite::RuntimeShape", %"class.tflite::RuntimeShape"* %32, i64 0, i32 0
  store i32 0, i32* %190, align 8, !alias.scope !452
  br label %220

191:                                              ; preds = %186
  %192 = getelementptr inbounds %struct.TfLiteTensor, %struct.TfLiteTensor* %57, i64 0, i32 2
  %193 = load %struct.TfLiteIntArray*, %struct.TfLiteIntArray** %192, align 8, !noalias !452
  %194 = getelementptr inbounds %struct.TfLiteIntArray, %struct.TfLiteIntArray* %193, i64 0, i32 0
  %195 = load i32, i32* %194, align 4, !noalias !452
  %196 = getelementptr inbounds %struct.TfLiteIntArray, %struct.TfLiteIntArray* %193, i64 0, i32 1, i64 0
  %197 = getelementptr inbounds %"class.tflite::RuntimeShape", %"class.tflite::RuntimeShape"* %32, i64 0, i32 0
  store i32 %195, i32* %197, align 8, !alias.scope !452
  %198 = icmp sgt i32 %195, 5
  br i1 %198, label %199, label %206

199:                                              ; preds = %191
  %200 = sext i32 %195 to i64
  %201 = shl nsw i64 %200, 2
  %202 = tail call i8* @_Znam(i64 %201) #9, !noalias !452
  %203 = getelementptr inbounds %"class.tflite::RuntimeShape", %"class.tflite::RuntimeShape"* %32, i64 0, i32 1, i32 0
  %204 = bitcast i32** %203 to i8**
  store i8* %202, i8** %204, align 8, !alias.scope !452
  %205 = bitcast i8* %202 to i32*
  br label %211

206:                                              ; preds = %191
  %207 = getelementptr inbounds %"class.tflite::RuntimeShape", %"class.tflite::RuntimeShape"* %32, i64 0, i32 1
  %208 = bitcast %union.anon* %207 to i32*
  %209 = sext i32 %195 to i64
  %210 = shl nsw i64 %209, 2
  br label %211

211:                                              ; preds = %206, %199
  %212 = phi i64 [ %201, %199 ], [ %210, %206 ]
  %213 = phi i32* [ %205, %199 ], [ %208, %206 ]
  %214 = bitcast i32* %213 to i8*
  %215 = bitcast i32* %196 to i8*
  call void @llvm.memcpy.p0i8.p0i8.i64(i8* align 4 %214, i8* align 4 %215, i64 %212, i1 false) #8
  %216 = getelementptr inbounds %struct.TfLiteTensor, %struct.TfLiteTensor* %57, i64 0, i32 1
  %217 = bitcast %union.TfLitePtrUnion* %216 to float**
  %218 = load float*, float** %217, align 8
  %219 = bitcast float* %218 to i8*
  br label %220

220:                                              ; preds = %211, %189
  %221 = phi i32 [ %195, %211 ], [ 0, %189 ]
  %222 = phi i8* [ %219, %211 ], [ null, %189 ]
  %223 = phi float* [ %218, %211 ], [ null, %189 ]
  %224 = bitcast %"class.tflite::RuntimeShape"* %33 to i8*
  call void @llvm.lifetime.start.p0i8(i64 32, i8* nonnull %224) #8
  %225 = icmp eq %struct.TfLiteTensor* %67, null
  br i1 %225, label %226, label %228

226:                                              ; preds = %220
  %227 = getelementptr inbounds %"class.tflite::RuntimeShape", %"class.tflite::RuntimeShape"* %33, i64 0, i32 0
  store i32 0, i32* %227, align 8, !alias.scope !455
  br label %257

228:                                              ; preds = %220
  %229 = getelementptr inbounds %struct.TfLiteTensor, %struct.TfLiteTensor* %67, i64 0, i32 2
  %230 = load %struct.TfLiteIntArray*, %struct.TfLiteIntArray** %229, align 8, !noalias !455
  %231 = getelementptr inbounds %struct.TfLiteIntArray, %struct.TfLiteIntArray* %230, i64 0, i32 0
  %232 = load i32, i32* %231, align 4, !noalias !455
  %233 = getelementptr inbounds %struct.TfLiteIntArray, %struct.TfLiteIntArray* %230, i64 0, i32 1, i64 0
  %234 = getelementptr inbounds %"class.tflite::RuntimeShape", %"class.tflite::RuntimeShape"* %33, i64 0, i32 0
  store i32 %232, i32* %234, align 8, !alias.scope !455
  %235 = icmp sgt i32 %232, 5
  br i1 %235, label %236, label %243

236:                                              ; preds = %228
  %237 = sext i32 %232 to i64
  %238 = shl nsw i64 %237, 2
  %239 = tail call i8* @_Znam(i64 %238) #9, !noalias !455
  %240 = getelementptr inbounds %"class.tflite::RuntimeShape", %"class.tflite::RuntimeShape"* %33, i64 0, i32 1, i32 0
  %241 = bitcast i32** %240 to i8**
  store i8* %239, i8** %241, align 8, !alias.scope !455
  %242 = bitcast i8* %239 to i32*
  br label %248

243:                                              ; preds = %228
  %244 = getelementptr inbounds %"class.tflite::RuntimeShape", %"class.tflite::RuntimeShape"* %33, i64 0, i32 1
  %245 = bitcast %union.anon* %244 to i32*
  %246 = sext i32 %232 to i64
  %247 = shl nsw i64 %246, 2
  br label %248

248:                                              ; preds = %243, %236
  %249 = phi i64 [ %238, %236 ], [ %247, %243 ]
  %250 = phi i32* [ %242, %236 ], [ %245, %243 ]
  %251 = bitcast i32* %250 to i8*
  %252 = bitcast i32* %233 to i8*
  call void @llvm.memcpy.p0i8.p0i8.i64(i8* align 4 %251, i8* align 4 %252, i64 %249, i1 false) #8
  %253 = getelementptr inbounds %struct.TfLiteTensor, %struct.TfLiteTensor* %67, i64 0, i32 1
  %254 = bitcast %union.TfLitePtrUnion* %253 to float**
  %255 = load float*, float** %254, align 8
  %256 = bitcast float* %255 to i8*
  br label %257

257:                                              ; preds = %248, %226
  %258 = phi i32 [ %232, %248 ], [ 0, %226 ]
  %259 = phi i8* [ %256, %248 ], [ null, %226 ]
  %260 = phi float* [ %255, %248 ], [ null, %226 ]
  %261 = bitcast %"class.tflite::RuntimeShape"* %34 to i8*
  call void @llvm.lifetime.start.p0i8(i64 32, i8* nonnull %261) #8
  %262 = icmp eq %struct.TfLiteTensor* %79, null
  br i1 %262, label %263, label %265

263:                                              ; preds = %257
  %264 = getelementptr inbounds %"class.tflite::RuntimeShape", %"class.tflite::RuntimeShape"* %34, i64 0, i32 0
  store i32 0, i32* %264, align 8, !alias.scope !458
  br label %293

265:                                              ; preds = %257
  %266 = getelementptr inbounds %struct.TfLiteTensor, %struct.TfLiteTensor* %79, i64 0, i32 2
  %267 = load %struct.TfLiteIntArray*, %struct.TfLiteIntArray** %266, align 8, !noalias !458
  %268 = getelementptr inbounds %struct.TfLiteIntArray, %struct.TfLiteIntArray* %267, i64 0, i32 0
  %269 = load i32, i32* %268, align 4, !noalias !458
  %270 = getelementptr inbounds %struct.TfLiteIntArray, %struct.TfLiteIntArray* %267, i64 0, i32 1, i64 0
  %271 = getelementptr inbounds %"class.tflite::RuntimeShape", %"class.tflite::RuntimeShape"* %34, i64 0, i32 0
  store i32 %269, i32* %271, align 8, !alias.scope !458
  %272 = icmp sgt i32 %269, 5
  br i1 %272, label %273, label %280

273:                                              ; preds = %265
  %274 = sext i32 %269 to i64
  %275 = shl nsw i64 %274, 2
  %276 = tail call i8* @_Znam(i64 %275) #9, !noalias !458
  %277 = getelementptr inbounds %"class.tflite::RuntimeShape", %"class.tflite::RuntimeShape"* %34, i64 0, i32 1, i32 0
  %278 = bitcast i32** %277 to i8**
  store i8* %276, i8** %278, align 8, !alias.scope !458
  %279 = bitcast i8* %276 to i32*
  br label %285

280:                                              ; preds = %265
  %281 = getelementptr inbounds %"class.tflite::RuntimeShape", %"class.tflite::RuntimeShape"* %34, i64 0, i32 1
  %282 = bitcast %union.anon* %281 to i32*
  %283 = sext i32 %269 to i64
  %284 = shl nsw i64 %283, 2
  br label %285

285:                                              ; preds = %280, %273
  %286 = phi i64 [ %275, %273 ], [ %284, %280 ]
  %287 = phi i32* [ %279, %273 ], [ %282, %280 ]
  %288 = bitcast i32* %287 to i8*
  %289 = bitcast i32* %270 to i8*
  call void @llvm.memcpy.p0i8.p0i8.i64(i8* align 4 %288, i8* align 4 %289, i64 %286, i1 false) #8
  %290 = getelementptr inbounds %struct.TfLiteTensor, %struct.TfLiteTensor* %79, i64 0, i32 1
  %291 = bitcast %union.TfLitePtrUnion* %290 to i8**
  %292 = load i8*, i8** %291, align 8
  br label %293

293:                                              ; preds = %285, %263
  %294 = phi i32 [ %269, %285 ], [ 0, %263 ]
  %295 = phi i8* [ %292, %285 ], [ null, %263 ]
  %296 = getelementptr inbounds %"class.tflite::RuntimeShape", %"class.tflite::RuntimeShape"* %32, i64 0, i32 1
  %297 = icmp sgt i32 %221, 5
  br i1 %297, label %298, label %301

298:                                              ; preds = %293
  %299 = getelementptr inbounds %union.anon, %union.anon* %296, i64 0, i32 0
  %300 = load i32*, i32** %299, align 8
  br label %304

301:                                              ; preds = %293
  %302 = bitcast %union.anon* %296 to i32*
  %303 = icmp sgt i32 %221, 0
  br i1 %303, label %304, label %408

304:                                              ; preds = %301, %298
  %305 = phi i32* [ %300, %298 ], [ %302, %301 ]
  %306 = zext i32 %221 to i64
  %307 = icmp ult i32 %221, 8
  br i1 %307, label %393, label %308

308:                                              ; preds = %304
  %309 = and i64 %306, 4294967288
  %310 = add nsw i64 %309, -8
  %311 = lshr exact i64 %310, 3
  %312 = add nuw nsw i64 %311, 1
  %313 = and i64 %312, 3
  %314 = icmp ult i64 %310, 24
  br i1 %314, label %360, label %315

315:                                              ; preds = %308
  %316 = sub nsw i64 %312, %313
  br label %317

317:                                              ; preds = %317, %315
  %318 = phi i64 [ 0, %315 ], [ %357, %317 ]
  %319 = phi <4 x i32> [ <i32 1, i32 1, i32 1, i32 1>, %315 ], [ %355, %317 ]
  %320 = phi <4 x i32> [ <i32 1, i32 1, i32 1, i32 1>, %315 ], [ %356, %317 ]
  %321 = phi i64 [ %316, %315 ], [ %358, %317 ]
  %322 = getelementptr inbounds i32, i32* %305, i64 %318
  %323 = bitcast i32* %322 to <4 x i32>*
  %324 = load <4 x i32>, <4 x i32>* %323, align 4
  %325 = getelementptr inbounds i32, i32* %322, i64 4
  %326 = bitcast i32* %325 to <4 x i32>*
  %327 = load <4 x i32>, <4 x i32>* %326, align 4
  %328 = mul nsw <4 x i32> %324, %319
  %329 = mul nsw <4 x i32> %327, %320
  %330 = or i64 %318, 8
  %331 = getelementptr inbounds i32, i32* %305, i64 %330
  %332 = bitcast i32* %331 to <4 x i32>*
  %333 = load <4 x i32>, <4 x i32>* %332, align 4
  %334 = getelementptr inbounds i32, i32* %331, i64 4
  %335 = bitcast i32* %334 to <4 x i32>*
  %336 = load <4 x i32>, <4 x i32>* %335, align 4
  %337 = mul nsw <4 x i32> %333, %328
  %338 = mul nsw <4 x i32> %336, %329
  %339 = or i64 %318, 16
  %340 = getelementptr inbounds i32, i32* %305, i64 %339
  %341 = bitcast i32* %340 to <4 x i32>*
  %342 = load <4 x i32>, <4 x i32>* %341, align 4
  %343 = getelementptr inbounds i32, i32* %340, i64 4
  %344 = bitcast i32* %343 to <4 x i32>*
  %345 = load <4 x i32>, <4 x i32>* %344, align 4
  %346 = mul nsw <4 x i32> %342, %337
  %347 = mul nsw <4 x i32> %345, %338
  %348 = or i64 %318, 24
  %349 = getelementptr inbounds i32, i32* %305, i64 %348
  %350 = bitcast i32* %349 to <4 x i32>*
  %351 = load <4 x i32>, <4 x i32>* %350, align 4
  %352 = getelementptr inbounds i32, i32* %349, i64 4
  %353 = bitcast i32* %352 to <4 x i32>*
  %354 = load <4 x i32>, <4 x i32>* %353, align 4
  %355 = mul nsw <4 x i32> %351, %346
  %356 = mul nsw <4 x i32> %354, %347
  %357 = add i64 %318, 32
  %358 = add i64 %321, -4
  %359 = icmp eq i64 %358, 0
  br i1 %359, label %360, label %317, !llvm.loop !461

360:                                              ; preds = %317, %308
  %361 = phi <4 x i32> [ undef, %308 ], [ %355, %317 ]
  %362 = phi <4 x i32> [ undef, %308 ], [ %356, %317 ]
  %363 = phi i64 [ 0, %308 ], [ %357, %317 ]
  %364 = phi <4 x i32> [ <i32 1, i32 1, i32 1, i32 1>, %308 ], [ %355, %317 ]
  %365 = phi <4 x i32> [ <i32 1, i32 1, i32 1, i32 1>, %308 ], [ %356, %317 ]
  %366 = icmp eq i64 %313, 0
  br i1 %366, label %383, label %367

367:                                              ; preds = %360, %367
  %368 = phi i64 [ %380, %367 ], [ %363, %360 ]
  %369 = phi <4 x i32> [ %378, %367 ], [ %364, %360 ]
  %370 = phi <4 x i32> [ %379, %367 ], [ %365, %360 ]
  %371 = phi i64 [ %381, %367 ], [ %313, %360 ]
  %372 = getelementptr inbounds i32, i32* %305, i64 %368
  %373 = bitcast i32* %372 to <4 x i32>*
  %374 = load <4 x i32>, <4 x i32>* %373, align 4
  %375 = getelementptr inbounds i32, i32* %372, i64 4
  %376 = bitcast i32* %375 to <4 x i32>*
  %377 = load <4 x i32>, <4 x i32>* %376, align 4
  %378 = mul nsw <4 x i32> %374, %369
  %379 = mul nsw <4 x i32> %377, %370
  %380 = add i64 %368, 8
  %381 = add i64 %371, -1
  %382 = icmp eq i64 %381, 0
  br i1 %382, label %383, label %367, !llvm.loop !462

383:                                              ; preds = %367, %360
  %384 = phi <4 x i32> [ %361, %360 ], [ %378, %367 ]
  %385 = phi <4 x i32> [ %362, %360 ], [ %379, %367 ]
  %386 = mul <4 x i32> %385, %384
  %387 = shufflevector <4 x i32> %386, <4 x i32> undef, <4 x i32> <i32 2, i32 3, i32 undef, i32 undef>
  %388 = mul <4 x i32> %386, %387
  %389 = shufflevector <4 x i32> %388, <4 x i32> undef, <4 x i32> <i32 1, i32 undef, i32 undef, i32 undef>
  %390 = mul <4 x i32> %388, %389
  %391 = extractelement <4 x i32> %390, i32 0
  %392 = icmp eq i64 %309, %306
  br i1 %392, label %404, label %393

393:                                              ; preds = %383, %304
  %394 = phi i64 [ 0, %304 ], [ %309, %383 ]
  %395 = phi i32 [ 1, %304 ], [ %391, %383 ]
  br label %396

396:                                              ; preds = %393, %396
  %397 = phi i64 [ %402, %396 ], [ %394, %393 ]
  %398 = phi i32 [ %401, %396 ], [ %395, %393 ]
  %399 = getelementptr inbounds i32, i32* %305, i64 %397
  %400 = load i32, i32* %399, align 4
  %401 = mul nsw i32 %400, %398
  %402 = add nuw nsw i64 %397, 1
  %403 = icmp eq i64 %402, %306
  br i1 %403, label %404, label %396, !llvm.loop !463

404:                                              ; preds = %396, %383
  %405 = phi i32 [ %391, %383 ], [ %401, %396 ]
  %406 = sext i32 %405 to i64
  %407 = icmp sgt i32 %405, 0
  br i1 %407, label %408, label %542

408:                                              ; preds = %404, %301
  %409 = phi i64 [ %406, %404 ], [ 1, %301 ]
  %410 = icmp ult i64 %409, 8
  br i1 %410, label %506, label %411

411:                                              ; preds = %408
  %412 = getelementptr i8, i8* %295, i64 %409
  %413 = getelementptr float, float* %260, i64 %409
  %414 = bitcast float* %413 to i8*
  %415 = getelementptr float, float* %223, i64 %409
  %416 = bitcast float* %415 to i8*
  %417 = icmp ult i8* %295, %414
  %418 = icmp ult i8* %259, %412
  %419 = and i1 %417, %418
  %420 = icmp ult i8* %295, %416
  %421 = icmp ult i8* %222, %412
  %422 = and i1 %420, %421
  %423 = or i1 %419, %422
  br i1 %423, label %506, label %424

424:                                              ; preds = %411
  %425 = and i64 %409, -8
  %426 = add nsw i64 %425, -8
  %427 = lshr exact i64 %426, 3
  %428 = add nuw nsw i64 %427, 1
  %429 = and i64 %428, 1
  %430 = icmp eq i64 %426, 0
  br i1 %430, label %480, label %431

431:                                              ; preds = %424
  %432 = sub nuw nsw i64 %428, %429
  br label %433

433:                                              ; preds = %433, %431
  %434 = phi i64 [ 0, %431 ], [ %477, %433 ]
  %435 = phi i64 [ %432, %431 ], [ %478, %433 ]
  %436 = getelementptr inbounds float, float* %223, i64 %434
  %437 = bitcast float* %436 to <4 x float>*
  %438 = load <4 x float>, <4 x float>* %437, align 4, !alias.scope !464
  %439 = getelementptr inbounds float, float* %436, i64 4
  %440 = bitcast float* %439 to <4 x float>*
  %441 = load <4 x float>, <4 x float>* %440, align 4, !alias.scope !464
  %442 = getelementptr inbounds float, float* %260, i64 %434
  %443 = bitcast float* %442 to <4 x float>*
  %444 = load <4 x float>, <4 x float>* %443, align 4, !alias.scope !467
  %445 = getelementptr inbounds float, float* %442, i64 4
  %446 = bitcast float* %445 to <4 x float>*
  %447 = load <4 x float>, <4 x float>* %446, align 4, !alias.scope !467
  %448 = fcmp oge <4 x float> %438, %444
  %449 = fcmp oge <4 x float> %441, %447
  %450 = getelementptr inbounds i8, i8* %295, i64 %434
  %451 = zext <4 x i1> %448 to <4 x i8>
  %452 = zext <4 x i1> %449 to <4 x i8>
  %453 = bitcast i8* %450 to <4 x i8>*
  store <4 x i8> %451, <4 x i8>* %453, align 1, !alias.scope !469, !noalias !471
  %454 = getelementptr inbounds i8, i8* %450, i64 4
  %455 = bitcast i8* %454 to <4 x i8>*
  store <4 x i8> %452, <4 x i8>* %455, align 1, !alias.scope !469, !noalias !471
  %456 = or i64 %434, 8
  %457 = getelementptr inbounds float, float* %223, i64 %456
  %458 = bitcast float* %457 to <4 x float>*
  %459 = load <4 x float>, <4 x float>* %458, align 4, !alias.scope !464
  %460 = getelementptr inbounds float, float* %457, i64 4
  %461 = bitcast float* %460 to <4 x float>*
  %462 = load <4 x float>, <4 x float>* %461, align 4, !alias.scope !464
  %463 = getelementptr inbounds float, float* %260, i64 %456
  %464 = bitcast float* %463 to <4 x float>*
  %465 = load <4 x float>, <4 x float>* %464, align 4, !alias.scope !467
  %466 = getelementptr inbounds float, float* %463, i64 4
  %467 = bitcast float* %466 to <4 x float>*
  %468 = load <4 x float>, <4 x float>* %467, align 4, !alias.scope !467
  %469 = fcmp oge <4 x float> %459, %465
  %470 = fcmp oge <4 x float> %462, %468
  %471 = getelementptr inbounds i8, i8* %295, i64 %456
  %472 = zext <4 x i1> %469 to <4 x i8>
  %473 = zext <4 x i1> %470 to <4 x i8>
  %474 = bitcast i8* %471 to <4 x i8>*
  store <4 x i8> %472, <4 x i8>* %474, align 1, !alias.scope !469, !noalias !471
  %475 = getelementptr inbounds i8, i8* %471, i64 4
  %476 = bitcast i8* %475 to <4 x i8>*
  store <4 x i8> %473, <4 x i8>* %476, align 1, !alias.scope !469, !noalias !471
  %477 = add i64 %434, 16
  %478 = add i64 %435, -2
  %479 = icmp eq i64 %478, 0
  br i1 %479, label %480, label %433, !llvm.loop !472

480:                                              ; preds = %433, %424
  %481 = phi i64 [ 0, %424 ], [ %477, %433 ]
  %482 = icmp eq i64 %429, 0
  br i1 %482, label %504, label %483

483:                                              ; preds = %480
  %484 = getelementptr inbounds float, float* %223, i64 %481
  %485 = bitcast float* %484 to <4 x float>*
  %486 = load <4 x float>, <4 x float>* %485, align 4, !alias.scope !464
  %487 = getelementptr inbounds float, float* %484, i64 4
  %488 = bitcast float* %487 to <4 x float>*
  %489 = load <4 x float>, <4 x float>* %488, align 4, !alias.scope !464
  %490 = getelementptr inbounds float, float* %260, i64 %481
  %491 = bitcast float* %490 to <4 x float>*
  %492 = load <4 x float>, <4 x float>* %491, align 4, !alias.scope !467
  %493 = getelementptr inbounds float, float* %490, i64 4
  %494 = bitcast float* %493 to <4 x float>*
  %495 = load <4 x float>, <4 x float>* %494, align 4, !alias.scope !467
  %496 = fcmp oge <4 x float> %486, %492
  %497 = fcmp oge <4 x float> %489, %495
  %498 = getelementptr inbounds i8, i8* %295, i64 %481
  %499 = zext <4 x i1> %496 to <4 x i8>
  %500 = zext <4 x i1> %497 to <4 x i8>
  %501 = bitcast i8* %498 to <4 x i8>*
  store <4 x i8> %499, <4 x i8>* %501, align 1, !alias.scope !469, !noalias !471
  %502 = getelementptr inbounds i8, i8* %498, i64 4
  %503 = bitcast i8* %502 to <4 x i8>*
  store <4 x i8> %500, <4 x i8>* %503, align 1, !alias.scope !469, !noalias !471
  br label %504

504:                                              ; preds = %480, %483
  %505 = icmp eq i64 %409, %425
  br i1 %505, label %542, label %506

506:                                              ; preds = %504, %411, %408
  %507 = phi i64 [ 0, %411 ], [ 0, %408 ], [ %425, %504 ]
  %508 = and i64 %409, 1
  %509 = icmp eq i64 %508, 0
  br i1 %509, label %519, label %510

510:                                              ; preds = %506
  %511 = getelementptr inbounds float, float* %223, i64 %507
  %512 = load float, float* %511, align 4
  %513 = getelementptr inbounds float, float* %260, i64 %507
  %514 = load float, float* %513, align 4
  %515 = fcmp oge float %512, %514
  %516 = getelementptr inbounds i8, i8* %295, i64 %507
  %517 = zext i1 %515 to i8
  store i8 %517, i8* %516, align 1
  %518 = or i64 %507, 1
  br label %519

519:                                              ; preds = %506, %510
  %520 = phi i64 [ %507, %506 ], [ %518, %510 ]
  %521 = or i64 %507, 1
  %522 = icmp eq i64 %409, %521
  br i1 %522, label %542, label %523

523:                                              ; preds = %519, %523
  %524 = phi i64 [ %540, %523 ], [ %520, %519 ]
  %525 = getelementptr inbounds float, float* %223, i64 %524
  %526 = load float, float* %525, align 4
  %527 = getelementptr inbounds float, float* %260, i64 %524
  %528 = load float, float* %527, align 4
  %529 = fcmp oge float %526, %528
  %530 = getelementptr inbounds i8, i8* %295, i64 %524
  %531 = zext i1 %529 to i8
  store i8 %531, i8* %530, align 1
  %532 = add nuw nsw i64 %524, 1
  %533 = getelementptr inbounds float, float* %223, i64 %532
  %534 = load float, float* %533, align 4
  %535 = getelementptr inbounds float, float* %260, i64 %532
  %536 = load float, float* %535, align 4
  %537 = fcmp oge float %534, %536
  %538 = getelementptr inbounds i8, i8* %295, i64 %532
  %539 = zext i1 %537 to i8
  store i8 %539, i8* %538, align 1
  %540 = add nuw nsw i64 %524, 2
  %541 = icmp eq i64 %540, %409
  br i1 %541, label %542, label %523, !llvm.loop !473

542:                                              ; preds = %519, %523, %504, %404
  %543 = icmp sgt i32 %294, 5
  br i1 %543, label %544, label %550

544:                                              ; preds = %542
  %545 = getelementptr inbounds %"class.tflite::RuntimeShape", %"class.tflite::RuntimeShape"* %34, i64 0, i32 1, i32 0
  %546 = load i32*, i32** %545, align 8
  %547 = icmp eq i32* %546, null
  br i1 %547, label %550, label %548

548:                                              ; preds = %544
  %549 = bitcast i32* %546 to i8*
  tail call void @_ZdaPv(i8* %549) #9
  br label %550

550:                                              ; preds = %548, %544, %542
  call void @llvm.lifetime.end.p0i8(i64 32, i8* nonnull %261) #8
  %551 = icmp sgt i32 %258, 5
  br i1 %551, label %552, label %558

552:                                              ; preds = %550
  %553 = getelementptr inbounds %"class.tflite::RuntimeShape", %"class.tflite::RuntimeShape"* %33, i64 0, i32 1, i32 0
  %554 = load i32*, i32** %553, align 8
  %555 = icmp eq i32* %554, null
  br i1 %555, label %558, label %556

556:                                              ; preds = %552
  %557 = bitcast i32* %554 to i8*
  tail call void @_ZdaPv(i8* %557) #9
  br label %558

558:                                              ; preds = %556, %552, %550
  call void @llvm.lifetime.end.p0i8(i64 32, i8* nonnull %224) #8
  br i1 %297, label %559, label %596

559:                                              ; preds = %558
  %560 = getelementptr inbounds %"class.tflite::RuntimeShape", %"class.tflite::RuntimeShape"* %32, i64 0, i32 1, i32 0
  %561 = load i32*, i32** %560, align 8
  %562 = icmp eq i32* %561, null
  br i1 %562, label %596, label %563

563:                                              ; preds = %559
  %564 = bitcast i32* %561 to i8*
  tail call void @_ZdaPv(i8* %564) #9
  br label %596

565:                                              ; preds = %178, %156
  %566 = phi i8* [ %185, %178 ], [ null, %156 ]
  call void @_ZN6tflite13reference_ops29BroadcastComparison4DSlowImplIfXadL_ZNS0_14GreaterEqualFnIfEEbT_S3_EEEEvRKNS_16ComparisonParamsERKNS_12RuntimeShapeEPKS3_S9_SB_S9_Pb(%"struct.tflite::ComparisonParams"* nonnull dereferenceable(32) %28, %"class.tflite::RuntimeShape"* nonnull dereferenceable(32) %29, float* %119, %"class.tflite::RuntimeShape"* nonnull dereferenceable(32) %30, float* %153, %"class.tflite::RuntimeShape"* nonnull dereferenceable(32) %31, i8* %566) #8
  %567 = getelementptr inbounds %"class.tflite::RuntimeShape", %"class.tflite::RuntimeShape"* %31, i64 0, i32 0
  %568 = load i32, i32* %567, align 8
  %569 = icmp sgt i32 %568, 5
  br i1 %569, label %570, label %576

570:                                              ; preds = %565
  %571 = getelementptr inbounds %"class.tflite::RuntimeShape", %"class.tflite::RuntimeShape"* %31, i64 0, i32 1, i32 0
  %572 = load i32*, i32** %571, align 8
  %573 = icmp eq i32* %572, null
  br i1 %573, label %576, label %574

574:                                              ; preds = %570
  %575 = bitcast i32* %572 to i8*
  call void @_ZdaPv(i8* %575) #9
  br label %576

576:                                              ; preds = %574, %570, %565
  call void @llvm.lifetime.end.p0i8(i64 32, i8* nonnull %154) #8
  %577 = getelementptr inbounds %"class.tflite::RuntimeShape", %"class.tflite::RuntimeShape"* %30, i64 0, i32 0
  %578 = load i32, i32* %577, align 8
  %579 = icmp sgt i32 %578, 5
  br i1 %579, label %580, label %586

580:                                              ; preds = %576
  %581 = getelementptr inbounds %"class.tflite::RuntimeShape", %"class.tflite::RuntimeShape"* %30, i64 0, i32 1, i32 0
  %582 = load i32*, i32** %581, align 8
  %583 = icmp eq i32* %582, null
  br i1 %583, label %586, label %584

584:                                              ; preds = %580
  %585 = bitcast i32* %582 to i8*
  call void @_ZdaPv(i8* %585) #9
  br label %586

586:                                              ; preds = %584, %580, %576
  call void @llvm.lifetime.end.p0i8(i64 32, i8* nonnull %120) #8
  %587 = getelementptr inbounds %"class.tflite::RuntimeShape", %"class.tflite::RuntimeShape"* %29, i64 0, i32 0
  %588 = load i32, i32* %587, align 8
  %589 = icmp sgt i32 %588, 5
  br i1 %589, label %590, label %596

590:                                              ; preds = %586
  %591 = getelementptr inbounds %"class.tflite::RuntimeShape", %"class.tflite::RuntimeShape"* %29, i64 0, i32 1, i32 0
  %592 = load i32*, i32** %591, align 8
  %593 = icmp eq i32* %592, null
  br i1 %593, label %596, label %594

594:                                              ; preds = %590
  %595 = bitcast i32* %592 to i8*
  call void @_ZdaPv(i8* %595) #9
  br label %596

596:                                              ; preds = %586, %590, %594, %558, %559, %563
  %597 = phi i8* [ %187, %563 ], [ %187, %559 ], [ %187, %558 ], [ %86, %594 ], [ %86, %590 ], [ %86, %586 ]
  call void @llvm.lifetime.end.p0i8(i64 32, i8* nonnull %597) #8
  call void @llvm.lifetime.end.p0i8(i64 32, i8* nonnull %84) #8
  br label %2493

598:                                              ; preds = %78
  %599 = bitcast %"struct.tflite::ComparisonParams"* %21 to i8*
  call void @llvm.lifetime.start.p0i8(i64 32, i8* nonnull %599) #8
  call void @llvm.memset.p0i8.i64(i8* nonnull align 4 %599, i8 -86, i64 32, i1 false) #8
  br i1 %80, label %699, label %600

600:                                              ; preds = %598
  %601 = bitcast %"class.tflite::RuntimeShape"* %22 to i8*
  call void @llvm.lifetime.start.p0i8(i64 32, i8* nonnull %601) #8
  %602 = icmp eq %struct.TfLiteTensor* %57, null
  br i1 %602, label %603, label %605

603:                                              ; preds = %600
  %604 = getelementptr inbounds %"class.tflite::RuntimeShape", %"class.tflite::RuntimeShape"* %22, i64 0, i32 0
  store i32 0, i32* %604, align 8, !alias.scope !474
  br label %632

605:                                              ; preds = %600
  %606 = getelementptr inbounds %struct.TfLiteTensor, %struct.TfLiteTensor* %57, i64 0, i32 2
  %607 = load %struct.TfLiteIntArray*, %struct.TfLiteIntArray** %606, align 8, !noalias !474
  %608 = getelementptr inbounds %struct.TfLiteIntArray, %struct.TfLiteIntArray* %607, i64 0, i32 0
  %609 = load i32, i32* %608, align 4, !noalias !474
  %610 = getelementptr inbounds %struct.TfLiteIntArray, %struct.TfLiteIntArray* %607, i64 0, i32 1, i64 0
  %611 = getelementptr inbounds %"class.tflite::RuntimeShape", %"class.tflite::RuntimeShape"* %22, i64 0, i32 0
  store i32 %609, i32* %611, align 8, !alias.scope !474
  %612 = icmp sgt i32 %609, 5
  br i1 %612, label %613, label %620

613:                                              ; preds = %605
  %614 = sext i32 %609 to i64
  %615 = shl nsw i64 %614, 2
  %616 = tail call i8* @_Znam(i64 %615) #9, !noalias !474
  %617 = getelementptr inbounds %"class.tflite::RuntimeShape", %"class.tflite::RuntimeShape"* %22, i64 0, i32 1, i32 0
  %618 = bitcast i32** %617 to i8**
  store i8* %616, i8** %618, align 8, !alias.scope !474
  %619 = bitcast i8* %616 to i32*
  br label %625

620:                                              ; preds = %605
  %621 = getelementptr inbounds %"class.tflite::RuntimeShape", %"class.tflite::RuntimeShape"* %22, i64 0, i32 1
  %622 = bitcast %union.anon* %621 to i32*
  %623 = sext i32 %609 to i64
  %624 = shl nsw i64 %623, 2
  br label %625

625:                                              ; preds = %620, %613
  %626 = phi i64 [ %615, %613 ], [ %624, %620 ]
  %627 = phi i32* [ %619, %613 ], [ %622, %620 ]
  %628 = bitcast i32* %627 to i8*
  %629 = bitcast i32* %610 to i8*
  call void @llvm.memcpy.p0i8.p0i8.i64(i8* align 4 %628, i8* align 4 %629, i64 %626, i1 false) #8
  %630 = getelementptr inbounds %struct.TfLiteTensor, %struct.TfLiteTensor* %57, i64 0, i32 1, i32 0
  %631 = load i32*, i32** %630, align 8
  br label %632

632:                                              ; preds = %625, %603
  %633 = phi i32* [ %631, %625 ], [ null, %603 ]
  %634 = bitcast %"class.tflite::RuntimeShape"* %23 to i8*
  call void @llvm.lifetime.start.p0i8(i64 32, i8* nonnull %634) #8
  %635 = icmp eq %struct.TfLiteTensor* %67, null
  br i1 %635, label %636, label %638

636:                                              ; preds = %632
  %637 = getelementptr inbounds %"class.tflite::RuntimeShape", %"class.tflite::RuntimeShape"* %23, i64 0, i32 0
  store i32 0, i32* %637, align 8, !alias.scope !477
  br label %665

638:                                              ; preds = %632
  %639 = getelementptr inbounds %struct.TfLiteTensor, %struct.TfLiteTensor* %67, i64 0, i32 2
  %640 = load %struct.TfLiteIntArray*, %struct.TfLiteIntArray** %639, align 8, !noalias !477
  %641 = getelementptr inbounds %struct.TfLiteIntArray, %struct.TfLiteIntArray* %640, i64 0, i32 0
  %642 = load i32, i32* %641, align 4, !noalias !477
  %643 = getelementptr inbounds %struct.TfLiteIntArray, %struct.TfLiteIntArray* %640, i64 0, i32 1, i64 0
  %644 = getelementptr inbounds %"class.tflite::RuntimeShape", %"class.tflite::RuntimeShape"* %23, i64 0, i32 0
  store i32 %642, i32* %644, align 8, !alias.scope !477
  %645 = icmp sgt i32 %642, 5
  br i1 %645, label %646, label %653

646:                                              ; preds = %638
  %647 = sext i32 %642 to i64
  %648 = shl nsw i64 %647, 2
  %649 = tail call i8* @_Znam(i64 %648) #9, !noalias !477
  %650 = getelementptr inbounds %"class.tflite::RuntimeShape", %"class.tflite::RuntimeShape"* %23, i64 0, i32 1, i32 0
  %651 = bitcast i32** %650 to i8**
  store i8* %649, i8** %651, align 8, !alias.scope !477
  %652 = bitcast i8* %649 to i32*
  br label %658

653:                                              ; preds = %638
  %654 = getelementptr inbounds %"class.tflite::RuntimeShape", %"class.tflite::RuntimeShape"* %23, i64 0, i32 1
  %655 = bitcast %union.anon* %654 to i32*
  %656 = sext i32 %642 to i64
  %657 = shl nsw i64 %656, 2
  br label %658

658:                                              ; preds = %653, %646
  %659 = phi i64 [ %648, %646 ], [ %657, %653 ]
  %660 = phi i32* [ %652, %646 ], [ %655, %653 ]
  %661 = bitcast i32* %660 to i8*
  %662 = bitcast i32* %643 to i8*
  call void @llvm.memcpy.p0i8.p0i8.i64(i8* align 4 %661, i8* align 4 %662, i64 %659, i1 false) #8
  %663 = getelementptr inbounds %struct.TfLiteTensor, %struct.TfLiteTensor* %67, i64 0, i32 1, i32 0
  %664 = load i32*, i32** %663, align 8
  br label %665

665:                                              ; preds = %658, %636
  %666 = phi i32* [ %664, %658 ], [ null, %636 ]
  %667 = bitcast %"class.tflite::RuntimeShape"* %24 to i8*
  call void @llvm.lifetime.start.p0i8(i64 32, i8* nonnull %667) #8
  %668 = icmp eq %struct.TfLiteTensor* %79, null
  br i1 %668, label %669, label %671

669:                                              ; preds = %665
  %670 = getelementptr inbounds %"class.tflite::RuntimeShape", %"class.tflite::RuntimeShape"* %24, i64 0, i32 0
  store i32 0, i32* %670, align 8, !alias.scope !480
  br label %1076

671:                                              ; preds = %665
  %672 = getelementptr inbounds %struct.TfLiteTensor, %struct.TfLiteTensor* %79, i64 0, i32 2
  %673 = load %struct.TfLiteIntArray*, %struct.TfLiteIntArray** %672, align 8, !noalias !480
  %674 = getelementptr inbounds %struct.TfLiteIntArray, %struct.TfLiteIntArray* %673, i64 0, i32 0
  %675 = load i32, i32* %674, align 4, !noalias !480
  %676 = getelementptr inbounds %struct.TfLiteIntArray, %struct.TfLiteIntArray* %673, i64 0, i32 1, i64 0
  %677 = getelementptr inbounds %"class.tflite::RuntimeShape", %"class.tflite::RuntimeShape"* %24, i64 0, i32 0
  store i32 %675, i32* %677, align 8, !alias.scope !480
  %678 = icmp sgt i32 %675, 5
  br i1 %678, label %679, label %686

679:                                              ; preds = %671
  %680 = sext i32 %675 to i64
  %681 = shl nsw i64 %680, 2
  %682 = tail call i8* @_Znam(i64 %681) #9, !noalias !480
  %683 = getelementptr inbounds %"class.tflite::RuntimeShape", %"class.tflite::RuntimeShape"* %24, i64 0, i32 1, i32 0
  %684 = bitcast i32** %683 to i8**
  store i8* %682, i8** %684, align 8, !alias.scope !480
  %685 = bitcast i8* %682 to i32*
  br label %691

686:                                              ; preds = %671
  %687 = getelementptr inbounds %"class.tflite::RuntimeShape", %"class.tflite::RuntimeShape"* %24, i64 0, i32 1
  %688 = bitcast %union.anon* %687 to i32*
  %689 = sext i32 %675 to i64
  %690 = shl nsw i64 %689, 2
  br label %691

691:                                              ; preds = %686, %679
  %692 = phi i64 [ %681, %679 ], [ %690, %686 ]
  %693 = phi i32* [ %685, %679 ], [ %688, %686 ]
  %694 = bitcast i32* %693 to i8*
  %695 = bitcast i32* %676 to i8*
  call void @llvm.memcpy.p0i8.p0i8.i64(i8* align 4 %694, i8* align 4 %695, i64 %692, i1 false) #8
  %696 = getelementptr inbounds %struct.TfLiteTensor, %struct.TfLiteTensor* %79, i64 0, i32 1
  %697 = bitcast %union.TfLitePtrUnion* %696 to i8**
  %698 = load i8*, i8** %697, align 8
  br label %1076

699:                                              ; preds = %598
  %700 = bitcast %"class.tflite::RuntimeShape"* %25 to i8*
  call void @llvm.lifetime.start.p0i8(i64 32, i8* nonnull %700) #8
  %701 = icmp eq %struct.TfLiteTensor* %57, null
  br i1 %701, label %702, label %704

702:                                              ; preds = %699
  %703 = getelementptr inbounds %"class.tflite::RuntimeShape", %"class.tflite::RuntimeShape"* %25, i64 0, i32 0
  store i32 0, i32* %703, align 8, !alias.scope !483
  br label %732

704:                                              ; preds = %699
  %705 = getelementptr inbounds %struct.TfLiteTensor, %struct.TfLiteTensor* %57, i64 0, i32 2
  %706 = load %struct.TfLiteIntArray*, %struct.TfLiteIntArray** %705, align 8, !noalias !483
  %707 = getelementptr inbounds %struct.TfLiteIntArray, %struct.TfLiteIntArray* %706, i64 0, i32 0
  %708 = load i32, i32* %707, align 4, !noalias !483
  %709 = getelementptr inbounds %struct.TfLiteIntArray, %struct.TfLiteIntArray* %706, i64 0, i32 1, i64 0
  %710 = getelementptr inbounds %"class.tflite::RuntimeShape", %"class.tflite::RuntimeShape"* %25, i64 0, i32 0
  store i32 %708, i32* %710, align 8, !alias.scope !483
  %711 = icmp sgt i32 %708, 5
  br i1 %711, label %712, label %719

712:                                              ; preds = %704
  %713 = sext i32 %708 to i64
  %714 = shl nsw i64 %713, 2
  %715 = tail call i8* @_Znam(i64 %714) #9, !noalias !483
  %716 = getelementptr inbounds %"class.tflite::RuntimeShape", %"class.tflite::RuntimeShape"* %25, i64 0, i32 1, i32 0
  %717 = bitcast i32** %716 to i8**
  store i8* %715, i8** %717, align 8, !alias.scope !483
  %718 = bitcast i8* %715 to i32*
  br label %724

719:                                              ; preds = %704
  %720 = getelementptr inbounds %"class.tflite::RuntimeShape", %"class.tflite::RuntimeShape"* %25, i64 0, i32 1
  %721 = bitcast %union.anon* %720 to i32*
  %722 = sext i32 %708 to i64
  %723 = shl nsw i64 %722, 2
  br label %724

724:                                              ; preds = %719, %712
  %725 = phi i64 [ %714, %712 ], [ %723, %719 ]
  %726 = phi i32* [ %718, %712 ], [ %721, %719 ]
  %727 = bitcast i32* %726 to i8*
  %728 = bitcast i32* %709 to i8*
  call void @llvm.memcpy.p0i8.p0i8.i64(i8* align 4 %727, i8* align 4 %728, i64 %725, i1 false) #8
  %729 = getelementptr inbounds %struct.TfLiteTensor, %struct.TfLiteTensor* %57, i64 0, i32 1, i32 0
  %730 = load i32*, i32** %729, align 8
  %731 = bitcast i32* %730 to i8*
  br label %732

732:                                              ; preds = %724, %702
  %733 = phi i32 [ %708, %724 ], [ 0, %702 ]
  %734 = phi i8* [ %731, %724 ], [ null, %702 ]
  %735 = phi i32* [ %730, %724 ], [ null, %702 ]
  %736 = bitcast %"class.tflite::RuntimeShape"* %26 to i8*
  call void @llvm.lifetime.start.p0i8(i64 32, i8* nonnull %736) #8
  %737 = icmp eq %struct.TfLiteTensor* %67, null
  br i1 %737, label %738, label %740

738:                                              ; preds = %732
  %739 = getelementptr inbounds %"class.tflite::RuntimeShape", %"class.tflite::RuntimeShape"* %26, i64 0, i32 0
  store i32 0, i32* %739, align 8, !alias.scope !486
  br label %768

740:                                              ; preds = %732
  %741 = getelementptr inbounds %struct.TfLiteTensor, %struct.TfLiteTensor* %67, i64 0, i32 2
  %742 = load %struct.TfLiteIntArray*, %struct.TfLiteIntArray** %741, align 8, !noalias !486
  %743 = getelementptr inbounds %struct.TfLiteIntArray, %struct.TfLiteIntArray* %742, i64 0, i32 0
  %744 = load i32, i32* %743, align 4, !noalias !486
  %745 = getelementptr inbounds %struct.TfLiteIntArray, %struct.TfLiteIntArray* %742, i64 0, i32 1, i64 0
  %746 = getelementptr inbounds %"class.tflite::RuntimeShape", %"class.tflite::RuntimeShape"* %26, i64 0, i32 0
  store i32 %744, i32* %746, align 8, !alias.scope !486
  %747 = icmp sgt i32 %744, 5
  br i1 %747, label %748, label %755

748:                                              ; preds = %740
  %749 = sext i32 %744 to i64
  %750 = shl nsw i64 %749, 2
  %751 = tail call i8* @_Znam(i64 %750) #9, !noalias !486
  %752 = getelementptr inbounds %"class.tflite::RuntimeShape", %"class.tflite::RuntimeShape"* %26, i64 0, i32 1, i32 0
  %753 = bitcast i32** %752 to i8**
  store i8* %751, i8** %753, align 8, !alias.scope !486
  %754 = bitcast i8* %751 to i32*
  br label %760

755:                                              ; preds = %740
  %756 = getelementptr inbounds %"class.tflite::RuntimeShape", %"class.tflite::RuntimeShape"* %26, i64 0, i32 1
  %757 = bitcast %union.anon* %756 to i32*
  %758 = sext i32 %744 to i64
  %759 = shl nsw i64 %758, 2
  br label %760

760:                                              ; preds = %755, %748
  %761 = phi i64 [ %750, %748 ], [ %759, %755 ]
  %762 = phi i32* [ %754, %748 ], [ %757, %755 ]
  %763 = bitcast i32* %762 to i8*
  %764 = bitcast i32* %745 to i8*
  call void @llvm.memcpy.p0i8.p0i8.i64(i8* align 4 %763, i8* align 4 %764, i64 %761, i1 false) #8
  %765 = getelementptr inbounds %struct.TfLiteTensor, %struct.TfLiteTensor* %67, i64 0, i32 1, i32 0
  %766 = load i32*, i32** %765, align 8
  %767 = bitcast i32* %766 to i8*
  br label %768

768:                                              ; preds = %760, %738
  %769 = phi i32 [ %744, %760 ], [ 0, %738 ]
  %770 = phi i8* [ %767, %760 ], [ null, %738 ]
  %771 = phi i32* [ %766, %760 ], [ null, %738 ]
  %772 = bitcast %"class.tflite::RuntimeShape"* %27 to i8*
  call void @llvm.lifetime.start.p0i8(i64 32, i8* nonnull %772) #8
  %773 = icmp eq %struct.TfLiteTensor* %79, null
  br i1 %773, label %774, label %776

774:                                              ; preds = %768
  %775 = getelementptr inbounds %"class.tflite::RuntimeShape", %"class.tflite::RuntimeShape"* %27, i64 0, i32 0
  store i32 0, i32* %775, align 8, !alias.scope !489
  br label %804

776:                                              ; preds = %768
  %777 = getelementptr inbounds %struct.TfLiteTensor, %struct.TfLiteTensor* %79, i64 0, i32 2
  %778 = load %struct.TfLiteIntArray*, %struct.TfLiteIntArray** %777, align 8, !noalias !489
  %779 = getelementptr inbounds %struct.TfLiteIntArray, %struct.TfLiteIntArray* %778, i64 0, i32 0
  %780 = load i32, i32* %779, align 4, !noalias !489
  %781 = getelementptr inbounds %struct.TfLiteIntArray, %struct.TfLiteIntArray* %778, i64 0, i32 1, i64 0
  %782 = getelementptr inbounds %"class.tflite::RuntimeShape", %"class.tflite::RuntimeShape"* %27, i64 0, i32 0
  store i32 %780, i32* %782, align 8, !alias.scope !489
  %783 = icmp sgt i32 %780, 5
  br i1 %783, label %784, label %791

784:                                              ; preds = %776
  %785 = sext i32 %780 to i64
  %786 = shl nsw i64 %785, 2
  %787 = tail call i8* @_Znam(i64 %786) #9, !noalias !489
  %788 = getelementptr inbounds %"class.tflite::RuntimeShape", %"class.tflite::RuntimeShape"* %27, i64 0, i32 1, i32 0
  %789 = bitcast i32** %788 to i8**
  store i8* %787, i8** %789, align 8, !alias.scope !489
  %790 = bitcast i8* %787 to i32*
  br label %796

791:                                              ; preds = %776
  %792 = getelementptr inbounds %"class.tflite::RuntimeShape", %"class.tflite::RuntimeShape"* %27, i64 0, i32 1
  %793 = bitcast %union.anon* %792 to i32*
  %794 = sext i32 %780 to i64
  %795 = shl nsw i64 %794, 2
  br label %796

796:                                              ; preds = %791, %784
  %797 = phi i64 [ %786, %784 ], [ %795, %791 ]
  %798 = phi i32* [ %790, %784 ], [ %793, %791 ]
  %799 = bitcast i32* %798 to i8*
  %800 = bitcast i32* %781 to i8*
  call void @llvm.memcpy.p0i8.p0i8.i64(i8* align 4 %799, i8* align 4 %800, i64 %797, i1 false) #8
  %801 = getelementptr inbounds %struct.TfLiteTensor, %struct.TfLiteTensor* %79, i64 0, i32 1
  %802 = bitcast %union.TfLitePtrUnion* %801 to i8**
  %803 = load i8*, i8** %802, align 8
  br label %804

804:                                              ; preds = %796, %774
  %805 = phi i32 [ %780, %796 ], [ 0, %774 ]
  %806 = phi i8* [ %803, %796 ], [ null, %774 ]
  %807 = getelementptr inbounds %"class.tflite::RuntimeShape", %"class.tflite::RuntimeShape"* %25, i64 0, i32 1
  %808 = icmp sgt i32 %733, 5
  br i1 %808, label %809, label %812

809:                                              ; preds = %804
  %810 = getelementptr inbounds %union.anon, %union.anon* %807, i64 0, i32 0
  %811 = load i32*, i32** %810, align 8
  br label %815

812:                                              ; preds = %804
  %813 = bitcast %union.anon* %807 to i32*
  %814 = icmp sgt i32 %733, 0
  br i1 %814, label %815, label %919

815:                                              ; preds = %812, %809
  %816 = phi i32* [ %811, %809 ], [ %813, %812 ]
  %817 = zext i32 %733 to i64
  %818 = icmp ult i32 %733, 8
  br i1 %818, label %904, label %819

819:                                              ; preds = %815
  %820 = and i64 %817, 4294967288
  %821 = add nsw i64 %820, -8
  %822 = lshr exact i64 %821, 3
  %823 = add nuw nsw i64 %822, 1
  %824 = and i64 %823, 3
  %825 = icmp ult i64 %821, 24
  br i1 %825, label %871, label %826

826:                                              ; preds = %819
  %827 = sub nsw i64 %823, %824
  br label %828

828:                                              ; preds = %828, %826
  %829 = phi i64 [ 0, %826 ], [ %868, %828 ]
  %830 = phi <4 x i32> [ <i32 1, i32 1, i32 1, i32 1>, %826 ], [ %866, %828 ]
  %831 = phi <4 x i32> [ <i32 1, i32 1, i32 1, i32 1>, %826 ], [ %867, %828 ]
  %832 = phi i64 [ %827, %826 ], [ %869, %828 ]
  %833 = getelementptr inbounds i32, i32* %816, i64 %829
  %834 = bitcast i32* %833 to <4 x i32>*
  %835 = load <4 x i32>, <4 x i32>* %834, align 4
  %836 = getelementptr inbounds i32, i32* %833, i64 4
  %837 = bitcast i32* %836 to <4 x i32>*
  %838 = load <4 x i32>, <4 x i32>* %837, align 4
  %839 = mul nsw <4 x i32> %835, %830
  %840 = mul nsw <4 x i32> %838, %831
  %841 = or i64 %829, 8
  %842 = getelementptr inbounds i32, i32* %816, i64 %841
  %843 = bitcast i32* %842 to <4 x i32>*
  %844 = load <4 x i32>, <4 x i32>* %843, align 4
  %845 = getelementptr inbounds i32, i32* %842, i64 4
  %846 = bitcast i32* %845 to <4 x i32>*
  %847 = load <4 x i32>, <4 x i32>* %846, align 4
  %848 = mul nsw <4 x i32> %844, %839
  %849 = mul nsw <4 x i32> %847, %840
  %850 = or i64 %829, 16
  %851 = getelementptr inbounds i32, i32* %816, i64 %850
  %852 = bitcast i32* %851 to <4 x i32>*
  %853 = load <4 x i32>, <4 x i32>* %852, align 4
  %854 = getelementptr inbounds i32, i32* %851, i64 4
  %855 = bitcast i32* %854 to <4 x i32>*
  %856 = load <4 x i32>, <4 x i32>* %855, align 4
  %857 = mul nsw <4 x i32> %853, %848
  %858 = mul nsw <4 x i32> %856, %849
  %859 = or i64 %829, 24
  %860 = getelementptr inbounds i32, i32* %816, i64 %859
  %861 = bitcast i32* %860 to <4 x i32>*
  %862 = load <4 x i32>, <4 x i32>* %861, align 4
  %863 = getelementptr inbounds i32, i32* %860, i64 4
  %864 = bitcast i32* %863 to <4 x i32>*
  %865 = load <4 x i32>, <4 x i32>* %864, align 4
  %866 = mul nsw <4 x i32> %862, %857
  %867 = mul nsw <4 x i32> %865, %858
  %868 = add i64 %829, 32
  %869 = add i64 %832, -4
  %870 = icmp eq i64 %869, 0
  br i1 %870, label %871, label %828, !llvm.loop !492

871:                                              ; preds = %828, %819
  %872 = phi <4 x i32> [ undef, %819 ], [ %866, %828 ]
  %873 = phi <4 x i32> [ undef, %819 ], [ %867, %828 ]
  %874 = phi i64 [ 0, %819 ], [ %868, %828 ]
  %875 = phi <4 x i32> [ <i32 1, i32 1, i32 1, i32 1>, %819 ], [ %866, %828 ]
  %876 = phi <4 x i32> [ <i32 1, i32 1, i32 1, i32 1>, %819 ], [ %867, %828 ]
  %877 = icmp eq i64 %824, 0
  br i1 %877, label %894, label %878

878:                                              ; preds = %871, %878
  %879 = phi i64 [ %891, %878 ], [ %874, %871 ]
  %880 = phi <4 x i32> [ %889, %878 ], [ %875, %871 ]
  %881 = phi <4 x i32> [ %890, %878 ], [ %876, %871 ]
  %882 = phi i64 [ %892, %878 ], [ %824, %871 ]
  %883 = getelementptr inbounds i32, i32* %816, i64 %879
  %884 = bitcast i32* %883 to <4 x i32>*
  %885 = load <4 x i32>, <4 x i32>* %884, align 4
  %886 = getelementptr inbounds i32, i32* %883, i64 4
  %887 = bitcast i32* %886 to <4 x i32>*
  %888 = load <4 x i32>, <4 x i32>* %887, align 4
  %889 = mul nsw <4 x i32> %885, %880
  %890 = mul nsw <4 x i32> %888, %881
  %891 = add i64 %879, 8
  %892 = add i64 %882, -1
  %893 = icmp eq i64 %892, 0
  br i1 %893, label %894, label %878, !llvm.loop !493

894:                                              ; preds = %878, %871
  %895 = phi <4 x i32> [ %872, %871 ], [ %889, %878 ]
  %896 = phi <4 x i32> [ %873, %871 ], [ %890, %878 ]
  %897 = mul <4 x i32> %896, %895
  %898 = shufflevector <4 x i32> %897, <4 x i32> undef, <4 x i32> <i32 2, i32 3, i32 undef, i32 undef>
  %899 = mul <4 x i32> %897, %898
  %900 = shufflevector <4 x i32> %899, <4 x i32> undef, <4 x i32> <i32 1, i32 undef, i32 undef, i32 undef>
  %901 = mul <4 x i32> %899, %900
  %902 = extractelement <4 x i32> %901, i32 0
  %903 = icmp eq i64 %820, %817
  br i1 %903, label %915, label %904

904:                                              ; preds = %894, %815
  %905 = phi i64 [ 0, %815 ], [ %820, %894 ]
  %906 = phi i32 [ 1, %815 ], [ %902, %894 ]
  br label %907

907:                                              ; preds = %904, %907
  %908 = phi i64 [ %913, %907 ], [ %905, %904 ]
  %909 = phi i32 [ %912, %907 ], [ %906, %904 ]
  %910 = getelementptr inbounds i32, i32* %816, i64 %908
  %911 = load i32, i32* %910, align 4
  %912 = mul nsw i32 %911, %909
  %913 = add nuw nsw i64 %908, 1
  %914 = icmp eq i64 %913, %817
  br i1 %914, label %915, label %907, !llvm.loop !494

915:                                              ; preds = %907, %894
  %916 = phi i32 [ %902, %894 ], [ %912, %907 ]
  %917 = sext i32 %916 to i64
  %918 = icmp sgt i32 %916, 0
  br i1 %918, label %919, label %1053

919:                                              ; preds = %915, %812
  %920 = phi i64 [ %917, %915 ], [ 1, %812 ]
  %921 = icmp ult i64 %920, 8
  br i1 %921, label %1017, label %922

922:                                              ; preds = %919
  %923 = getelementptr i8, i8* %806, i64 %920
  %924 = getelementptr i32, i32* %771, i64 %920
  %925 = bitcast i32* %924 to i8*
  %926 = getelementptr i32, i32* %735, i64 %920
  %927 = bitcast i32* %926 to i8*
  %928 = icmp ult i8* %806, %925
  %929 = icmp ult i8* %770, %923
  %930 = and i1 %928, %929
  %931 = icmp ult i8* %806, %927
  %932 = icmp ult i8* %734, %923
  %933 = and i1 %931, %932
  %934 = or i1 %930, %933
  br i1 %934, label %1017, label %935

935:                                              ; preds = %922
  %936 = and i64 %920, -8
  %937 = add nsw i64 %936, -8
  %938 = lshr exact i64 %937, 3
  %939 = add nuw nsw i64 %938, 1
  %940 = and i64 %939, 1
  %941 = icmp eq i64 %937, 0
  br i1 %941, label %991, label %942

942:                                              ; preds = %935
  %943 = sub nuw nsw i64 %939, %940
  br label %944

944:                                              ; preds = %944, %942
  %945 = phi i64 [ 0, %942 ], [ %988, %944 ]
  %946 = phi i64 [ %943, %942 ], [ %989, %944 ]
  %947 = getelementptr inbounds i32, i32* %735, i64 %945
  %948 = bitcast i32* %947 to <4 x i32>*
  %949 = load <4 x i32>, <4 x i32>* %948, align 4, !alias.scope !495
  %950 = getelementptr inbounds i32, i32* %947, i64 4
  %951 = bitcast i32* %950 to <4 x i32>*
  %952 = load <4 x i32>, <4 x i32>* %951, align 4, !alias.scope !495
  %953 = getelementptr inbounds i32, i32* %771, i64 %945
  %954 = bitcast i32* %953 to <4 x i32>*
  %955 = load <4 x i32>, <4 x i32>* %954, align 4, !alias.scope !498
  %956 = getelementptr inbounds i32, i32* %953, i64 4
  %957 = bitcast i32* %956 to <4 x i32>*
  %958 = load <4 x i32>, <4 x i32>* %957, align 4, !alias.scope !498
  %959 = icmp sge <4 x i32> %949, %955
  %960 = icmp sge <4 x i32> %952, %958
  %961 = getelementptr inbounds i8, i8* %806, i64 %945
  %962 = zext <4 x i1> %959 to <4 x i8>
  %963 = zext <4 x i1> %960 to <4 x i8>
  %964 = bitcast i8* %961 to <4 x i8>*
  store <4 x i8> %962, <4 x i8>* %964, align 1, !alias.scope !500, !noalias !502
  %965 = getelementptr inbounds i8, i8* %961, i64 4
  %966 = bitcast i8* %965 to <4 x i8>*
  store <4 x i8> %963, <4 x i8>* %966, align 1, !alias.scope !500, !noalias !502
  %967 = or i64 %945, 8
  %968 = getelementptr inbounds i32, i32* %735, i64 %967
  %969 = bitcast i32* %968 to <4 x i32>*
  %970 = load <4 x i32>, <4 x i32>* %969, align 4, !alias.scope !495
  %971 = getelementptr inbounds i32, i32* %968, i64 4
  %972 = bitcast i32* %971 to <4 x i32>*
  %973 = load <4 x i32>, <4 x i32>* %972, align 4, !alias.scope !495
  %974 = getelementptr inbounds i32, i32* %771, i64 %967
  %975 = bitcast i32* %974 to <4 x i32>*
  %976 = load <4 x i32>, <4 x i32>* %975, align 4, !alias.scope !498
  %977 = getelementptr inbounds i32, i32* %974, i64 4
  %978 = bitcast i32* %977 to <4 x i32>*
  %979 = load <4 x i32>, <4 x i32>* %978, align 4, !alias.scope !498
  %980 = icmp sge <4 x i32> %970, %976
  %981 = icmp sge <4 x i32> %973, %979
  %982 = getelementptr inbounds i8, i8* %806, i64 %967
  %983 = zext <4 x i1> %980 to <4 x i8>
  %984 = zext <4 x i1> %981 to <4 x i8>
  %985 = bitcast i8* %982 to <4 x i8>*
  store <4 x i8> %983, <4 x i8>* %985, align 1, !alias.scope !500, !noalias !502
  %986 = getelementptr inbounds i8, i8* %982, i64 4
  %987 = bitcast i8* %986 to <4 x i8>*
  store <4 x i8> %984, <4 x i8>* %987, align 1, !alias.scope !500, !noalias !502
  %988 = add i64 %945, 16
  %989 = add i64 %946, -2
  %990 = icmp eq i64 %989, 0
  br i1 %990, label %991, label %944, !llvm.loop !503

991:                                              ; preds = %944, %935
  %992 = phi i64 [ 0, %935 ], [ %988, %944 ]
  %993 = icmp eq i64 %940, 0
  br i1 %993, label %1015, label %994

994:                                              ; preds = %991
  %995 = getelementptr inbounds i32, i32* %735, i64 %992
  %996 = bitcast i32* %995 to <4 x i32>*
  %997 = load <4 x i32>, <4 x i32>* %996, align 4, !alias.scope !495
  %998 = getelementptr inbounds i32, i32* %995, i64 4
  %999 = bitcast i32* %998 to <4 x i32>*
  %1000 = load <4 x i32>, <4 x i32>* %999, align 4, !alias.scope !495
  %1001 = getelementptr inbounds i32, i32* %771, i64 %992
  %1002 = bitcast i32* %1001 to <4 x i32>*
  %1003 = load <4 x i32>, <4 x i32>* %1002, align 4, !alias.scope !498
  %1004 = getelementptr inbounds i32, i32* %1001, i64 4
  %1005 = bitcast i32* %1004 to <4 x i32>*
  %1006 = load <4 x i32>, <4 x i32>* %1005, align 4, !alias.scope !498
  %1007 = icmp sge <4 x i32> %997, %1003
  %1008 = icmp sge <4 x i32> %1000, %1006
  %1009 = getelementptr inbounds i8, i8* %806, i64 %992
  %1010 = zext <4 x i1> %1007 to <4 x i8>
  %1011 = zext <4 x i1> %1008 to <4 x i8>
  %1012 = bitcast i8* %1009 to <4 x i8>*
  store <4 x i8> %1010, <4 x i8>* %1012, align 1, !alias.scope !500, !noalias !502
  %1013 = getelementptr inbounds i8, i8* %1009, i64 4
  %1014 = bitcast i8* %1013 to <4 x i8>*
  store <4 x i8> %1011, <4 x i8>* %1014, align 1, !alias.scope !500, !noalias !502
  br label %1015

1015:                                             ; preds = %991, %994
  %1016 = icmp eq i64 %920, %936
  br i1 %1016, label %1053, label %1017

1017:                                             ; preds = %1015, %922, %919
  %1018 = phi i64 [ 0, %922 ], [ 0, %919 ], [ %936, %1015 ]
  %1019 = and i64 %920, 1
  %1020 = icmp eq i64 %1019, 0
  br i1 %1020, label %1030, label %1021

1021:                                             ; preds = %1017
  %1022 = getelementptr inbounds i32, i32* %735, i64 %1018
  %1023 = load i32, i32* %1022, align 4
  %1024 = getelementptr inbounds i32, i32* %771, i64 %1018
  %1025 = load i32, i32* %1024, align 4
  %1026 = icmp sge i32 %1023, %1025
  %1027 = getelementptr inbounds i8, i8* %806, i64 %1018
  %1028 = zext i1 %1026 to i8
  store i8 %1028, i8* %1027, align 1
  %1029 = or i64 %1018, 1
  br label %1030

1030:                                             ; preds = %1017, %1021
  %1031 = phi i64 [ %1018, %1017 ], [ %1029, %1021 ]
  %1032 = or i64 %1018, 1
  %1033 = icmp eq i64 %920, %1032
  br i1 %1033, label %1053, label %1034

1034:                                             ; preds = %1030, %1034
  %1035 = phi i64 [ %1051, %1034 ], [ %1031, %1030 ]
  %1036 = getelementptr inbounds i32, i32* %735, i64 %1035
  %1037 = load i32, i32* %1036, align 4
  %1038 = getelementptr inbounds i32, i32* %771, i64 %1035
  %1039 = load i32, i32* %1038, align 4
  %1040 = icmp sge i32 %1037, %1039
  %1041 = getelementptr inbounds i8, i8* %806, i64 %1035
  %1042 = zext i1 %1040 to i8
  store i8 %1042, i8* %1041, align 1
  %1043 = add nuw nsw i64 %1035, 1
  %1044 = getelementptr inbounds i32, i32* %735, i64 %1043
  %1045 = load i32, i32* %1044, align 4
  %1046 = getelementptr inbounds i32, i32* %771, i64 %1043
  %1047 = load i32, i32* %1046, align 4
  %1048 = icmp sge i32 %1045, %1047
  %1049 = getelementptr inbounds i8, i8* %806, i64 %1043
  %1050 = zext i1 %1048 to i8
  store i8 %1050, i8* %1049, align 1
  %1051 = add nuw nsw i64 %1035, 2
  %1052 = icmp eq i64 %1051, %920
  br i1 %1052, label %1053, label %1034, !llvm.loop !504

1053:                                             ; preds = %1030, %1034, %1015, %915
  %1054 = icmp sgt i32 %805, 5
  br i1 %1054, label %1055, label %1061

1055:                                             ; preds = %1053
  %1056 = getelementptr inbounds %"class.tflite::RuntimeShape", %"class.tflite::RuntimeShape"* %27, i64 0, i32 1, i32 0
  %1057 = load i32*, i32** %1056, align 8
  %1058 = icmp eq i32* %1057, null
  br i1 %1058, label %1061, label %1059

1059:                                             ; preds = %1055
  %1060 = bitcast i32* %1057 to i8*
  tail call void @_ZdaPv(i8* %1060) #9
  br label %1061

1061:                                             ; preds = %1059, %1055, %1053
  call void @llvm.lifetime.end.p0i8(i64 32, i8* nonnull %772) #8
  %1062 = icmp sgt i32 %769, 5
  br i1 %1062, label %1063, label %1069

1063:                                             ; preds = %1061
  %1064 = getelementptr inbounds %"class.tflite::RuntimeShape", %"class.tflite::RuntimeShape"* %26, i64 0, i32 1, i32 0
  %1065 = load i32*, i32** %1064, align 8
  %1066 = icmp eq i32* %1065, null
  br i1 %1066, label %1069, label %1067

1067:                                             ; preds = %1063
  %1068 = bitcast i32* %1065 to i8*
  tail call void @_ZdaPv(i8* %1068) #9
  br label %1069

1069:                                             ; preds = %1067, %1063, %1061
  call void @llvm.lifetime.end.p0i8(i64 32, i8* nonnull %736) #8
  br i1 %808, label %1070, label %1107

1070:                                             ; preds = %1069
  %1071 = getelementptr inbounds %"class.tflite::RuntimeShape", %"class.tflite::RuntimeShape"* %25, i64 0, i32 1, i32 0
  %1072 = load i32*, i32** %1071, align 8
  %1073 = icmp eq i32* %1072, null
  br i1 %1073, label %1107, label %1074

1074:                                             ; preds = %1070
  %1075 = bitcast i32* %1072 to i8*
  tail call void @_ZdaPv(i8* %1075) #9
  br label %1107

1076:                                             ; preds = %691, %669
  %1077 = phi i8* [ %698, %691 ], [ null, %669 ]
  call void @_ZN6tflite13reference_ops29BroadcastComparison4DSlowImplIiXadL_ZNS0_14GreaterEqualFnIiEEbT_S3_EEEEvRKNS_16ComparisonParamsERKNS_12RuntimeShapeEPKS3_S9_SB_S9_Pb(%"struct.tflite::ComparisonParams"* nonnull dereferenceable(32) %21, %"class.tflite::RuntimeShape"* nonnull dereferenceable(32) %22, i32* %633, %"class.tflite::RuntimeShape"* nonnull dereferenceable(32) %23, i32* %666, %"class.tflite::RuntimeShape"* nonnull dereferenceable(32) %24, i8* %1077) #8
  %1078 = getelementptr inbounds %"class.tflite::RuntimeShape", %"class.tflite::RuntimeShape"* %24, i64 0, i32 0
  %1079 = load i32, i32* %1078, align 8
  %1080 = icmp sgt i32 %1079, 5
  br i1 %1080, label %1081, label %1087

1081:                                             ; preds = %1076
  %1082 = getelementptr inbounds %"class.tflite::RuntimeShape", %"class.tflite::RuntimeShape"* %24, i64 0, i32 1, i32 0
  %1083 = load i32*, i32** %1082, align 8
  %1084 = icmp eq i32* %1083, null
  br i1 %1084, label %1087, label %1085

1085:                                             ; preds = %1081
  %1086 = bitcast i32* %1083 to i8*
  call void @_ZdaPv(i8* %1086) #9
  br label %1087

1087:                                             ; preds = %1085, %1081, %1076
  call void @llvm.lifetime.end.p0i8(i64 32, i8* nonnull %667) #8
  %1088 = getelementptr inbounds %"class.tflite::RuntimeShape", %"class.tflite::RuntimeShape"* %23, i64 0, i32 0
  %1089 = load i32, i32* %1088, align 8
  %1090 = icmp sgt i32 %1089, 5
  br i1 %1090, label %1091, label %1097

1091:                                             ; preds = %1087
  %1092 = getelementptr inbounds %"class.tflite::RuntimeShape", %"class.tflite::RuntimeShape"* %23, i64 0, i32 1, i32 0
  %1093 = load i32*, i32** %1092, align 8
  %1094 = icmp eq i32* %1093, null
  br i1 %1094, label %1097, label %1095

1095:                                             ; preds = %1091
  %1096 = bitcast i32* %1093 to i8*
  call void @_ZdaPv(i8* %1096) #9
  br label %1097

1097:                                             ; preds = %1095, %1091, %1087
  call void @llvm.lifetime.end.p0i8(i64 32, i8* nonnull %634) #8
  %1098 = getelementptr inbounds %"class.tflite::RuntimeShape", %"class.tflite::RuntimeShape"* %22, i64 0, i32 0
  %1099 = load i32, i32* %1098, align 8
  %1100 = icmp sgt i32 %1099, 5
  br i1 %1100, label %1101, label %1107

1101:                                             ; preds = %1097
  %1102 = getelementptr inbounds %"class.tflite::RuntimeShape", %"class.tflite::RuntimeShape"* %22, i64 0, i32 1, i32 0
  %1103 = load i32*, i32** %1102, align 8
  %1104 = icmp eq i32* %1103, null
  br i1 %1104, label %1107, label %1105

1105:                                             ; preds = %1101
  %1106 = bitcast i32* %1103 to i8*
  call void @_ZdaPv(i8* %1106) #9
  br label %1107

1107:                                             ; preds = %1097, %1101, %1105, %1069, %1070, %1074
  %1108 = phi i8* [ %700, %1074 ], [ %700, %1070 ], [ %700, %1069 ], [ %601, %1105 ], [ %601, %1101 ], [ %601, %1097 ]
  call void @llvm.lifetime.end.p0i8(i64 32, i8* nonnull %1108) #8
  call void @llvm.lifetime.end.p0i8(i64 32, i8* nonnull %599) #8
  br label %2493

1109:                                             ; preds = %78
  %1110 = bitcast %"struct.tflite::ComparisonParams"* %14 to i8*
  call void @llvm.lifetime.start.p0i8(i64 32, i8* nonnull %1110) #8
  call void @llvm.memset.p0i8.i64(i8* nonnull align 4 %1110, i8 -86, i64 32, i1 false) #8
  br i1 %80, label %1212, label %1111

1111:                                             ; preds = %1109
  %1112 = bitcast %"class.tflite::RuntimeShape"* %15 to i8*
  call void @llvm.lifetime.start.p0i8(i64 32, i8* nonnull %1112) #8
  %1113 = icmp eq %struct.TfLiteTensor* %57, null
  br i1 %1113, label %1114, label %1116

1114:                                             ; preds = %1111
  %1115 = getelementptr inbounds %"class.tflite::RuntimeShape", %"class.tflite::RuntimeShape"* %15, i64 0, i32 0
  store i32 0, i32* %1115, align 8, !alias.scope !505
  br label %1144

1116:                                             ; preds = %1111
  %1117 = getelementptr inbounds %struct.TfLiteTensor, %struct.TfLiteTensor* %57, i64 0, i32 2
  %1118 = load %struct.TfLiteIntArray*, %struct.TfLiteIntArray** %1117, align 8, !noalias !505
  %1119 = getelementptr inbounds %struct.TfLiteIntArray, %struct.TfLiteIntArray* %1118, i64 0, i32 0
  %1120 = load i32, i32* %1119, align 4, !noalias !505
  %1121 = getelementptr inbounds %struct.TfLiteIntArray, %struct.TfLiteIntArray* %1118, i64 0, i32 1, i64 0
  %1122 = getelementptr inbounds %"class.tflite::RuntimeShape", %"class.tflite::RuntimeShape"* %15, i64 0, i32 0
  store i32 %1120, i32* %1122, align 8, !alias.scope !505
  %1123 = icmp sgt i32 %1120, 5
  br i1 %1123, label %1124, label %1131

1124:                                             ; preds = %1116
  %1125 = sext i32 %1120 to i64
  %1126 = shl nsw i64 %1125, 2
  %1127 = tail call i8* @_Znam(i64 %1126) #9, !noalias !505
  %1128 = getelementptr inbounds %"class.tflite::RuntimeShape", %"class.tflite::RuntimeShape"* %15, i64 0, i32 1, i32 0
  %1129 = bitcast i32** %1128 to i8**
  store i8* %1127, i8** %1129, align 8, !alias.scope !505
  %1130 = bitcast i8* %1127 to i32*
  br label %1136

1131:                                             ; preds = %1116
  %1132 = getelementptr inbounds %"class.tflite::RuntimeShape", %"class.tflite::RuntimeShape"* %15, i64 0, i32 1
  %1133 = bitcast %union.anon* %1132 to i32*
  %1134 = sext i32 %1120 to i64
  %1135 = shl nsw i64 %1134, 2
  br label %1136

1136:                                             ; preds = %1131, %1124
  %1137 = phi i64 [ %1126, %1124 ], [ %1135, %1131 ]
  %1138 = phi i32* [ %1130, %1124 ], [ %1133, %1131 ]
  %1139 = bitcast i32* %1138 to i8*
  %1140 = bitcast i32* %1121 to i8*
  call void @llvm.memcpy.p0i8.p0i8.i64(i8* align 4 %1139, i8* align 4 %1140, i64 %1137, i1 false) #8
  %1141 = getelementptr inbounds %struct.TfLiteTensor, %struct.TfLiteTensor* %57, i64 0, i32 1
  %1142 = bitcast %union.TfLitePtrUnion* %1141 to i64**
  %1143 = load i64*, i64** %1142, align 8
  br label %1144

1144:                                             ; preds = %1136, %1114
  %1145 = phi i64* [ %1143, %1136 ], [ null, %1114 ]
  %1146 = bitcast %"class.tflite::RuntimeShape"* %16 to i8*
  call void @llvm.lifetime.start.p0i8(i64 32, i8* nonnull %1146) #8
  %1147 = icmp eq %struct.TfLiteTensor* %67, null
  br i1 %1147, label %1148, label %1150

1148:                                             ; preds = %1144
  %1149 = getelementptr inbounds %"class.tflite::RuntimeShape", %"class.tflite::RuntimeShape"* %16, i64 0, i32 0
  store i32 0, i32* %1149, align 8, !alias.scope !508
  br label %1178

1150:                                             ; preds = %1144
  %1151 = getelementptr inbounds %struct.TfLiteTensor, %struct.TfLiteTensor* %67, i64 0, i32 2
  %1152 = load %struct.TfLiteIntArray*, %struct.TfLiteIntArray** %1151, align 8, !noalias !508
  %1153 = getelementptr inbounds %struct.TfLiteIntArray, %struct.TfLiteIntArray* %1152, i64 0, i32 0
  %1154 = load i32, i32* %1153, align 4, !noalias !508
  %1155 = getelementptr inbounds %struct.TfLiteIntArray, %struct.TfLiteIntArray* %1152, i64 0, i32 1, i64 0
  %1156 = getelementptr inbounds %"class.tflite::RuntimeShape", %"class.tflite::RuntimeShape"* %16, i64 0, i32 0
  store i32 %1154, i32* %1156, align 8, !alias.scope !508
  %1157 = icmp sgt i32 %1154, 5
  br i1 %1157, label %1158, label %1165

1158:                                             ; preds = %1150
  %1159 = sext i32 %1154 to i64
  %1160 = shl nsw i64 %1159, 2
  %1161 = tail call i8* @_Znam(i64 %1160) #9, !noalias !508
  %1162 = getelementptr inbounds %"class.tflite::RuntimeShape", %"class.tflite::RuntimeShape"* %16, i64 0, i32 1, i32 0
  %1163 = bitcast i32** %1162 to i8**
  store i8* %1161, i8** %1163, align 8, !alias.scope !508
  %1164 = bitcast i8* %1161 to i32*
  br label %1170

1165:                                             ; preds = %1150
  %1166 = getelementptr inbounds %"class.tflite::RuntimeShape", %"class.tflite::RuntimeShape"* %16, i64 0, i32 1
  %1167 = bitcast %union.anon* %1166 to i32*
  %1168 = sext i32 %1154 to i64
  %1169 = shl nsw i64 %1168, 2
  br label %1170

1170:                                             ; preds = %1165, %1158
  %1171 = phi i64 [ %1160, %1158 ], [ %1169, %1165 ]
  %1172 = phi i32* [ %1164, %1158 ], [ %1167, %1165 ]
  %1173 = bitcast i32* %1172 to i8*
  %1174 = bitcast i32* %1155 to i8*
  call void @llvm.memcpy.p0i8.p0i8.i64(i8* align 4 %1173, i8* align 4 %1174, i64 %1171, i1 false) #8
  %1175 = getelementptr inbounds %struct.TfLiteTensor, %struct.TfLiteTensor* %67, i64 0, i32 1
  %1176 = bitcast %union.TfLitePtrUnion* %1175 to i64**
  %1177 = load i64*, i64** %1176, align 8
  br label %1178

1178:                                             ; preds = %1170, %1148
  %1179 = phi i64* [ %1177, %1170 ], [ null, %1148 ]
  %1180 = bitcast %"class.tflite::RuntimeShape"* %17 to i8*
  call void @llvm.lifetime.start.p0i8(i64 32, i8* nonnull %1180) #8
  %1181 = icmp eq %struct.TfLiteTensor* %79, null
  br i1 %1181, label %1182, label %1184

1182:                                             ; preds = %1178
  %1183 = getelementptr inbounds %"class.tflite::RuntimeShape", %"class.tflite::RuntimeShape"* %17, i64 0, i32 0
  store i32 0, i32* %1183, align 8, !alias.scope !511
  br label %1491

1184:                                             ; preds = %1178
  %1185 = getelementptr inbounds %struct.TfLiteTensor, %struct.TfLiteTensor* %79, i64 0, i32 2
  %1186 = load %struct.TfLiteIntArray*, %struct.TfLiteIntArray** %1185, align 8, !noalias !511
  %1187 = getelementptr inbounds %struct.TfLiteIntArray, %struct.TfLiteIntArray* %1186, i64 0, i32 0
  %1188 = load i32, i32* %1187, align 4, !noalias !511
  %1189 = getelementptr inbounds %struct.TfLiteIntArray, %struct.TfLiteIntArray* %1186, i64 0, i32 1, i64 0
  %1190 = getelementptr inbounds %"class.tflite::RuntimeShape", %"class.tflite::RuntimeShape"* %17, i64 0, i32 0
  store i32 %1188, i32* %1190, align 8, !alias.scope !511
  %1191 = icmp sgt i32 %1188, 5
  br i1 %1191, label %1192, label %1199

1192:                                             ; preds = %1184
  %1193 = sext i32 %1188 to i64
  %1194 = shl nsw i64 %1193, 2
  %1195 = tail call i8* @_Znam(i64 %1194) #9, !noalias !511
  %1196 = getelementptr inbounds %"class.tflite::RuntimeShape", %"class.tflite::RuntimeShape"* %17, i64 0, i32 1, i32 0
  %1197 = bitcast i32** %1196 to i8**
  store i8* %1195, i8** %1197, align 8, !alias.scope !511
  %1198 = bitcast i8* %1195 to i32*
  br label %1204

1199:                                             ; preds = %1184
  %1200 = getelementptr inbounds %"class.tflite::RuntimeShape", %"class.tflite::RuntimeShape"* %17, i64 0, i32 1
  %1201 = bitcast %union.anon* %1200 to i32*
  %1202 = sext i32 %1188 to i64
  %1203 = shl nsw i64 %1202, 2
  br label %1204

1204:                                             ; preds = %1199, %1192
  %1205 = phi i64 [ %1194, %1192 ], [ %1203, %1199 ]
  %1206 = phi i32* [ %1198, %1192 ], [ %1201, %1199 ]
  %1207 = bitcast i32* %1206 to i8*
  %1208 = bitcast i32* %1189 to i8*
  call void @llvm.memcpy.p0i8.p0i8.i64(i8* align 4 %1207, i8* align 4 %1208, i64 %1205, i1 false) #8
  %1209 = getelementptr inbounds %struct.TfLiteTensor, %struct.TfLiteTensor* %79, i64 0, i32 1
  %1210 = bitcast %union.TfLitePtrUnion* %1209 to i8**
  %1211 = load i8*, i8** %1210, align 8
  br label %1491

1212:                                             ; preds = %1109
  %1213 = bitcast %"class.tflite::RuntimeShape"* %18 to i8*
  call void @llvm.lifetime.start.p0i8(i64 32, i8* nonnull %1213) #8
  %1214 = icmp eq %struct.TfLiteTensor* %57, null
  br i1 %1214, label %1215, label %1217

1215:                                             ; preds = %1212
  %1216 = getelementptr inbounds %"class.tflite::RuntimeShape", %"class.tflite::RuntimeShape"* %18, i64 0, i32 0
  store i32 0, i32* %1216, align 8, !alias.scope !514
  br label %1245

1217:                                             ; preds = %1212
  %1218 = getelementptr inbounds %struct.TfLiteTensor, %struct.TfLiteTensor* %57, i64 0, i32 2
  %1219 = load %struct.TfLiteIntArray*, %struct.TfLiteIntArray** %1218, align 8, !noalias !514
  %1220 = getelementptr inbounds %struct.TfLiteIntArray, %struct.TfLiteIntArray* %1219, i64 0, i32 0
  %1221 = load i32, i32* %1220, align 4, !noalias !514
  %1222 = getelementptr inbounds %struct.TfLiteIntArray, %struct.TfLiteIntArray* %1219, i64 0, i32 1, i64 0
  %1223 = getelementptr inbounds %"class.tflite::RuntimeShape", %"class.tflite::RuntimeShape"* %18, i64 0, i32 0
  store i32 %1221, i32* %1223, align 8, !alias.scope !514
  %1224 = icmp sgt i32 %1221, 5
  br i1 %1224, label %1225, label %1232

1225:                                             ; preds = %1217
  %1226 = sext i32 %1221 to i64
  %1227 = shl nsw i64 %1226, 2
  %1228 = tail call i8* @_Znam(i64 %1227) #9, !noalias !514
  %1229 = getelementptr inbounds %"class.tflite::RuntimeShape", %"class.tflite::RuntimeShape"* %18, i64 0, i32 1, i32 0
  %1230 = bitcast i32** %1229 to i8**
  store i8* %1228, i8** %1230, align 8, !alias.scope !514
  %1231 = bitcast i8* %1228 to i32*
  br label %1237

1232:                                             ; preds = %1217
  %1233 = getelementptr inbounds %"class.tflite::RuntimeShape", %"class.tflite::RuntimeShape"* %18, i64 0, i32 1
  %1234 = bitcast %union.anon* %1233 to i32*
  %1235 = sext i32 %1221 to i64
  %1236 = shl nsw i64 %1235, 2
  br label %1237

1237:                                             ; preds = %1232, %1225
  %1238 = phi i64 [ %1227, %1225 ], [ %1236, %1232 ]
  %1239 = phi i32* [ %1231, %1225 ], [ %1234, %1232 ]
  %1240 = bitcast i32* %1239 to i8*
  %1241 = bitcast i32* %1222 to i8*
  call void @llvm.memcpy.p0i8.p0i8.i64(i8* align 4 %1240, i8* align 4 %1241, i64 %1238, i1 false) #8
  %1242 = getelementptr inbounds %struct.TfLiteTensor, %struct.TfLiteTensor* %57, i64 0, i32 1
  %1243 = bitcast %union.TfLitePtrUnion* %1242 to i64**
  %1244 = load i64*, i64** %1243, align 8
  br label %1245

1245:                                             ; preds = %1237, %1215
  %1246 = phi i32 [ %1221, %1237 ], [ 0, %1215 ]
  %1247 = phi i64* [ %1244, %1237 ], [ null, %1215 ]
  %1248 = bitcast %"class.tflite::RuntimeShape"* %19 to i8*
  call void @llvm.lifetime.start.p0i8(i64 32, i8* nonnull %1248) #8
  %1249 = icmp eq %struct.TfLiteTensor* %67, null
  br i1 %1249, label %1250, label %1252

1250:                                             ; preds = %1245
  %1251 = getelementptr inbounds %"class.tflite::RuntimeShape", %"class.tflite::RuntimeShape"* %19, i64 0, i32 0
  store i32 0, i32* %1251, align 8, !alias.scope !517
  br label %1280

1252:                                             ; preds = %1245
  %1253 = getelementptr inbounds %struct.TfLiteTensor, %struct.TfLiteTensor* %67, i64 0, i32 2
  %1254 = load %struct.TfLiteIntArray*, %struct.TfLiteIntArray** %1253, align 8, !noalias !517
  %1255 = getelementptr inbounds %struct.TfLiteIntArray, %struct.TfLiteIntArray* %1254, i64 0, i32 0
  %1256 = load i32, i32* %1255, align 4, !noalias !517
  %1257 = getelementptr inbounds %struct.TfLiteIntArray, %struct.TfLiteIntArray* %1254, i64 0, i32 1, i64 0
  %1258 = getelementptr inbounds %"class.tflite::RuntimeShape", %"class.tflite::RuntimeShape"* %19, i64 0, i32 0
  store i32 %1256, i32* %1258, align 8, !alias.scope !517
  %1259 = icmp sgt i32 %1256, 5
  br i1 %1259, label %1260, label %1267

1260:                                             ; preds = %1252
  %1261 = sext i32 %1256 to i64
  %1262 = shl nsw i64 %1261, 2
  %1263 = tail call i8* @_Znam(i64 %1262) #9, !noalias !517
  %1264 = getelementptr inbounds %"class.tflite::RuntimeShape", %"class.tflite::RuntimeShape"* %19, i64 0, i32 1, i32 0
  %1265 = bitcast i32** %1264 to i8**
  store i8* %1263, i8** %1265, align 8, !alias.scope !517
  %1266 = bitcast i8* %1263 to i32*
  br label %1272

1267:                                             ; preds = %1252
  %1268 = getelementptr inbounds %"class.tflite::RuntimeShape", %"class.tflite::RuntimeShape"* %19, i64 0, i32 1
  %1269 = bitcast %union.anon* %1268 to i32*
  %1270 = sext i32 %1256 to i64
  %1271 = shl nsw i64 %1270, 2
  br label %1272

1272:                                             ; preds = %1267, %1260
  %1273 = phi i64 [ %1262, %1260 ], [ %1271, %1267 ]
  %1274 = phi i32* [ %1266, %1260 ], [ %1269, %1267 ]
  %1275 = bitcast i32* %1274 to i8*
  %1276 = bitcast i32* %1257 to i8*
  call void @llvm.memcpy.p0i8.p0i8.i64(i8* align 4 %1275, i8* align 4 %1276, i64 %1273, i1 false) #8
  %1277 = getelementptr inbounds %struct.TfLiteTensor, %struct.TfLiteTensor* %67, i64 0, i32 1
  %1278 = bitcast %union.TfLitePtrUnion* %1277 to i64**
  %1279 = load i64*, i64** %1278, align 8
  br label %1280

1280:                                             ; preds = %1272, %1250
  %1281 = phi i32 [ %1256, %1272 ], [ 0, %1250 ]
  %1282 = phi i64* [ %1279, %1272 ], [ null, %1250 ]
  %1283 = bitcast %"class.tflite::RuntimeShape"* %20 to i8*
  call void @llvm.lifetime.start.p0i8(i64 32, i8* nonnull %1283) #8
  %1284 = icmp eq %struct.TfLiteTensor* %79, null
  br i1 %1284, label %1285, label %1287

1285:                                             ; preds = %1280
  %1286 = getelementptr inbounds %"class.tflite::RuntimeShape", %"class.tflite::RuntimeShape"* %20, i64 0, i32 0
  store i32 0, i32* %1286, align 8, !alias.scope !520
  br label %1315

1287:                                             ; preds = %1280
  %1288 = getelementptr inbounds %struct.TfLiteTensor, %struct.TfLiteTensor* %79, i64 0, i32 2
  %1289 = load %struct.TfLiteIntArray*, %struct.TfLiteIntArray** %1288, align 8, !noalias !520
  %1290 = getelementptr inbounds %struct.TfLiteIntArray, %struct.TfLiteIntArray* %1289, i64 0, i32 0
  %1291 = load i32, i32* %1290, align 4, !noalias !520
  %1292 = getelementptr inbounds %struct.TfLiteIntArray, %struct.TfLiteIntArray* %1289, i64 0, i32 1, i64 0
  %1293 = getelementptr inbounds %"class.tflite::RuntimeShape", %"class.tflite::RuntimeShape"* %20, i64 0, i32 0
  store i32 %1291, i32* %1293, align 8, !alias.scope !520
  %1294 = icmp sgt i32 %1291, 5
  br i1 %1294, label %1295, label %1302

1295:                                             ; preds = %1287
  %1296 = sext i32 %1291 to i64
  %1297 = shl nsw i64 %1296, 2
  %1298 = tail call i8* @_Znam(i64 %1297) #9, !noalias !520
  %1299 = getelementptr inbounds %"class.tflite::RuntimeShape", %"class.tflite::RuntimeShape"* %20, i64 0, i32 1, i32 0
  %1300 = bitcast i32** %1299 to i8**
  store i8* %1298, i8** %1300, align 8, !alias.scope !520
  %1301 = bitcast i8* %1298 to i32*
  br label %1307

1302:                                             ; preds = %1287
  %1303 = getelementptr inbounds %"class.tflite::RuntimeShape", %"class.tflite::RuntimeShape"* %20, i64 0, i32 1
  %1304 = bitcast %union.anon* %1303 to i32*
  %1305 = sext i32 %1291 to i64
  %1306 = shl nsw i64 %1305, 2
  br label %1307

1307:                                             ; preds = %1302, %1295
  %1308 = phi i64 [ %1297, %1295 ], [ %1306, %1302 ]
  %1309 = phi i32* [ %1301, %1295 ], [ %1304, %1302 ]
  %1310 = bitcast i32* %1309 to i8*
  %1311 = bitcast i32* %1292 to i8*
  call void @llvm.memcpy.p0i8.p0i8.i64(i8* align 4 %1310, i8* align 4 %1311, i64 %1308, i1 false) #8
  %1312 = getelementptr inbounds %struct.TfLiteTensor, %struct.TfLiteTensor* %79, i64 0, i32 1
  %1313 = bitcast %union.TfLitePtrUnion* %1312 to i8**
  %1314 = load i8*, i8** %1313, align 8
  br label %1315

1315:                                             ; preds = %1307, %1285
  %1316 = phi i32 [ %1291, %1307 ], [ 0, %1285 ]
  %1317 = phi i8* [ %1314, %1307 ], [ null, %1285 ]
  %1318 = getelementptr inbounds %"class.tflite::RuntimeShape", %"class.tflite::RuntimeShape"* %18, i64 0, i32 1
  %1319 = icmp sgt i32 %1246, 5
  br i1 %1319, label %1320, label %1323

1320:                                             ; preds = %1315
  %1321 = getelementptr inbounds %union.anon, %union.anon* %1318, i64 0, i32 0
  %1322 = load i32*, i32** %1321, align 8
  br label %1326

1323:                                             ; preds = %1315
  %1324 = bitcast %union.anon* %1318 to i32*
  %1325 = icmp sgt i32 %1246, 0
  br i1 %1325, label %1326, label %1430

1326:                                             ; preds = %1323, %1320
  %1327 = phi i32* [ %1322, %1320 ], [ %1324, %1323 ]
  %1328 = zext i32 %1246 to i64
  %1329 = icmp ult i32 %1246, 8
  br i1 %1329, label %1415, label %1330

1330:                                             ; preds = %1326
  %1331 = and i64 %1328, 4294967288
  %1332 = add nsw i64 %1331, -8
  %1333 = lshr exact i64 %1332, 3
  %1334 = add nuw nsw i64 %1333, 1
  %1335 = and i64 %1334, 3
  %1336 = icmp ult i64 %1332, 24
  br i1 %1336, label %1382, label %1337

1337:                                             ; preds = %1330
  %1338 = sub nsw i64 %1334, %1335
  br label %1339

1339:                                             ; preds = %1339, %1337
  %1340 = phi i64 [ 0, %1337 ], [ %1379, %1339 ]
  %1341 = phi <4 x i32> [ <i32 1, i32 1, i32 1, i32 1>, %1337 ], [ %1377, %1339 ]
  %1342 = phi <4 x i32> [ <i32 1, i32 1, i32 1, i32 1>, %1337 ], [ %1378, %1339 ]
  %1343 = phi i64 [ %1338, %1337 ], [ %1380, %1339 ]
  %1344 = getelementptr inbounds i32, i32* %1327, i64 %1340
  %1345 = bitcast i32* %1344 to <4 x i32>*
  %1346 = load <4 x i32>, <4 x i32>* %1345, align 4
  %1347 = getelementptr inbounds i32, i32* %1344, i64 4
  %1348 = bitcast i32* %1347 to <4 x i32>*
  %1349 = load <4 x i32>, <4 x i32>* %1348, align 4
  %1350 = mul nsw <4 x i32> %1346, %1341
  %1351 = mul nsw <4 x i32> %1349, %1342
  %1352 = or i64 %1340, 8
  %1353 = getelementptr inbounds i32, i32* %1327, i64 %1352
  %1354 = bitcast i32* %1353 to <4 x i32>*
  %1355 = load <4 x i32>, <4 x i32>* %1354, align 4
  %1356 = getelementptr inbounds i32, i32* %1353, i64 4
  %1357 = bitcast i32* %1356 to <4 x i32>*
  %1358 = load <4 x i32>, <4 x i32>* %1357, align 4
  %1359 = mul nsw <4 x i32> %1355, %1350
  %1360 = mul nsw <4 x i32> %1358, %1351
  %1361 = or i64 %1340, 16
  %1362 = getelementptr inbounds i32, i32* %1327, i64 %1361
  %1363 = bitcast i32* %1362 to <4 x i32>*
  %1364 = load <4 x i32>, <4 x i32>* %1363, align 4
  %1365 = getelementptr inbounds i32, i32* %1362, i64 4
  %1366 = bitcast i32* %1365 to <4 x i32>*
  %1367 = load <4 x i32>, <4 x i32>* %1366, align 4
  %1368 = mul nsw <4 x i32> %1364, %1359
  %1369 = mul nsw <4 x i32> %1367, %1360
  %1370 = or i64 %1340, 24
  %1371 = getelementptr inbounds i32, i32* %1327, i64 %1370
  %1372 = bitcast i32* %1371 to <4 x i32>*
  %1373 = load <4 x i32>, <4 x i32>* %1372, align 4
  %1374 = getelementptr inbounds i32, i32* %1371, i64 4
  %1375 = bitcast i32* %1374 to <4 x i32>*
  %1376 = load <4 x i32>, <4 x i32>* %1375, align 4
  %1377 = mul nsw <4 x i32> %1373, %1368
  %1378 = mul nsw <4 x i32> %1376, %1369
  %1379 = add i64 %1340, 32
  %1380 = add i64 %1343, -4
  %1381 = icmp eq i64 %1380, 0
  br i1 %1381, label %1382, label %1339, !llvm.loop !523

1382:                                             ; preds = %1339, %1330
  %1383 = phi <4 x i32> [ undef, %1330 ], [ %1377, %1339 ]
  %1384 = phi <4 x i32> [ undef, %1330 ], [ %1378, %1339 ]
  %1385 = phi i64 [ 0, %1330 ], [ %1379, %1339 ]
  %1386 = phi <4 x i32> [ <i32 1, i32 1, i32 1, i32 1>, %1330 ], [ %1377, %1339 ]
  %1387 = phi <4 x i32> [ <i32 1, i32 1, i32 1, i32 1>, %1330 ], [ %1378, %1339 ]
  %1388 = icmp eq i64 %1335, 0
  br i1 %1388, label %1405, label %1389

1389:                                             ; preds = %1382, %1389
  %1390 = phi i64 [ %1402, %1389 ], [ %1385, %1382 ]
  %1391 = phi <4 x i32> [ %1400, %1389 ], [ %1386, %1382 ]
  %1392 = phi <4 x i32> [ %1401, %1389 ], [ %1387, %1382 ]
  %1393 = phi i64 [ %1403, %1389 ], [ %1335, %1382 ]
  %1394 = getelementptr inbounds i32, i32* %1327, i64 %1390
  %1395 = bitcast i32* %1394 to <4 x i32>*
  %1396 = load <4 x i32>, <4 x i32>* %1395, align 4
  %1397 = getelementptr inbounds i32, i32* %1394, i64 4
  %1398 = bitcast i32* %1397 to <4 x i32>*
  %1399 = load <4 x i32>, <4 x i32>* %1398, align 4
  %1400 = mul nsw <4 x i32> %1396, %1391
  %1401 = mul nsw <4 x i32> %1399, %1392
  %1402 = add i64 %1390, 8
  %1403 = add i64 %1393, -1
  %1404 = icmp eq i64 %1403, 0
  br i1 %1404, label %1405, label %1389, !llvm.loop !524

1405:                                             ; preds = %1389, %1382
  %1406 = phi <4 x i32> [ %1383, %1382 ], [ %1400, %1389 ]
  %1407 = phi <4 x i32> [ %1384, %1382 ], [ %1401, %1389 ]
  %1408 = mul <4 x i32> %1407, %1406
  %1409 = shufflevector <4 x i32> %1408, <4 x i32> undef, <4 x i32> <i32 2, i32 3, i32 undef, i32 undef>
  %1410 = mul <4 x i32> %1408, %1409
  %1411 = shufflevector <4 x i32> %1410, <4 x i32> undef, <4 x i32> <i32 1, i32 undef, i32 undef, i32 undef>
  %1412 = mul <4 x i32> %1410, %1411
  %1413 = extractelement <4 x i32> %1412, i32 0
  %1414 = icmp eq i64 %1331, %1328
  br i1 %1414, label %1426, label %1415

1415:                                             ; preds = %1405, %1326
  %1416 = phi i64 [ 0, %1326 ], [ %1331, %1405 ]
  %1417 = phi i32 [ 1, %1326 ], [ %1413, %1405 ]
  br label %1418

1418:                                             ; preds = %1415, %1418
  %1419 = phi i64 [ %1424, %1418 ], [ %1416, %1415 ]
  %1420 = phi i32 [ %1423, %1418 ], [ %1417, %1415 ]
  %1421 = getelementptr inbounds i32, i32* %1327, i64 %1419
  %1422 = load i32, i32* %1421, align 4
  %1423 = mul nsw i32 %1422, %1420
  %1424 = add nuw nsw i64 %1419, 1
  %1425 = icmp eq i64 %1424, %1328
  br i1 %1425, label %1426, label %1418, !llvm.loop !525

1426:                                             ; preds = %1418, %1405
  %1427 = phi i32 [ %1413, %1405 ], [ %1423, %1418 ]
  %1428 = sext i32 %1427 to i64
  %1429 = icmp sgt i32 %1427, 0
  br i1 %1429, label %1430, label %1468

1430:                                             ; preds = %1426, %1323
  %1431 = phi i64 [ %1428, %1426 ], [ 1, %1323 ]
  %1432 = and i64 %1431, 1
  %1433 = icmp eq i64 %1431, 1
  br i1 %1433, label %1457, label %1434

1434:                                             ; preds = %1430
  %1435 = sub nsw i64 %1431, %1432
  br label %1436

1436:                                             ; preds = %1436, %1434
  %1437 = phi i64 [ 0, %1434 ], [ %1454, %1436 ]
  %1438 = phi i64 [ %1435, %1434 ], [ %1455, %1436 ]
  %1439 = getelementptr inbounds i64, i64* %1247, i64 %1437
  %1440 = load i64, i64* %1439, align 8
  %1441 = getelementptr inbounds i64, i64* %1282, i64 %1437
  %1442 = load i64, i64* %1441, align 8
  %1443 = icmp sge i64 %1440, %1442
  %1444 = getelementptr inbounds i8, i8* %1317, i64 %1437
  %1445 = zext i1 %1443 to i8
  store i8 %1445, i8* %1444, align 1
  %1446 = or i64 %1437, 1
  %1447 = getelementptr inbounds i64, i64* %1247, i64 %1446
  %1448 = load i64, i64* %1447, align 8
  %1449 = getelementptr inbounds i64, i64* %1282, i64 %1446
  %1450 = load i64, i64* %1449, align 8
  %1451 = icmp sge i64 %1448, %1450
  %1452 = getelementptr inbounds i8, i8* %1317, i64 %1446
  %1453 = zext i1 %1451 to i8
  store i8 %1453, i8* %1452, align 1
  %1454 = add nuw nsw i64 %1437, 2
  %1455 = add i64 %1438, -2
  %1456 = icmp eq i64 %1455, 0
  br i1 %1456, label %1457, label %1436

1457:                                             ; preds = %1436, %1430
  %1458 = phi i64 [ 0, %1430 ], [ %1454, %1436 ]
  %1459 = icmp eq i64 %1432, 0
  br i1 %1459, label %1468, label %1460

1460:                                             ; preds = %1457
  %1461 = getelementptr inbounds i64, i64* %1247, i64 %1458
  %1462 = load i64, i64* %1461, align 8
  %1463 = getelementptr inbounds i64, i64* %1282, i64 %1458
  %1464 = load i64, i64* %1463, align 8
  %1465 = icmp sge i64 %1462, %1464
  %1466 = getelementptr inbounds i8, i8* %1317, i64 %1458
  %1467 = zext i1 %1465 to i8
  store i8 %1467, i8* %1466, align 1
  br label %1468

1468:                                             ; preds = %1460, %1457, %1426
  %1469 = icmp sgt i32 %1316, 5
  br i1 %1469, label %1470, label %1476

1470:                                             ; preds = %1468
  %1471 = getelementptr inbounds %"class.tflite::RuntimeShape", %"class.tflite::RuntimeShape"* %20, i64 0, i32 1, i32 0
  %1472 = load i32*, i32** %1471, align 8
  %1473 = icmp eq i32* %1472, null
  br i1 %1473, label %1476, label %1474

1474:                                             ; preds = %1470
  %1475 = bitcast i32* %1472 to i8*
  tail call void @_ZdaPv(i8* %1475) #9
  br label %1476

1476:                                             ; preds = %1474, %1470, %1468
  call void @llvm.lifetime.end.p0i8(i64 32, i8* nonnull %1283) #8
  %1477 = icmp sgt i32 %1281, 5
  br i1 %1477, label %1478, label %1484

1478:                                             ; preds = %1476
  %1479 = getelementptr inbounds %"class.tflite::RuntimeShape", %"class.tflite::RuntimeShape"* %19, i64 0, i32 1, i32 0
  %1480 = load i32*, i32** %1479, align 8
  %1481 = icmp eq i32* %1480, null
  br i1 %1481, label %1484, label %1482

1482:                                             ; preds = %1478
  %1483 = bitcast i32* %1480 to i8*
  tail call void @_ZdaPv(i8* %1483) #9
  br label %1484

1484:                                             ; preds = %1482, %1478, %1476
  call void @llvm.lifetime.end.p0i8(i64 32, i8* nonnull %1248) #8
  br i1 %1319, label %1485, label %1522

1485:                                             ; preds = %1484
  %1486 = getelementptr inbounds %"class.tflite::RuntimeShape", %"class.tflite::RuntimeShape"* %18, i64 0, i32 1, i32 0
  %1487 = load i32*, i32** %1486, align 8
  %1488 = icmp eq i32* %1487, null
  br i1 %1488, label %1522, label %1489

1489:                                             ; preds = %1485
  %1490 = bitcast i32* %1487 to i8*
  tail call void @_ZdaPv(i8* %1490) #9
  br label %1522

1491:                                             ; preds = %1204, %1182
  %1492 = phi i8* [ %1211, %1204 ], [ null, %1182 ]
  call void @_ZN6tflite13reference_ops29BroadcastComparison4DSlowImplIlXadL_ZNS0_14GreaterEqualFnIlEEbT_S3_EEEEvRKNS_16ComparisonParamsERKNS_12RuntimeShapeEPKS3_S9_SB_S9_Pb(%"struct.tflite::ComparisonParams"* nonnull dereferenceable(32) %14, %"class.tflite::RuntimeShape"* nonnull dereferenceable(32) %15, i64* %1145, %"class.tflite::RuntimeShape"* nonnull dereferenceable(32) %16, i64* %1179, %"class.tflite::RuntimeShape"* nonnull dereferenceable(32) %17, i8* %1492) #8
  %1493 = getelementptr inbounds %"class.tflite::RuntimeShape", %"class.tflite::RuntimeShape"* %17, i64 0, i32 0
  %1494 = load i32, i32* %1493, align 8
  %1495 = icmp sgt i32 %1494, 5
  br i1 %1495, label %1496, label %1502

1496:                                             ; preds = %1491
  %1497 = getelementptr inbounds %"class.tflite::RuntimeShape", %"class.tflite::RuntimeShape"* %17, i64 0, i32 1, i32 0
  %1498 = load i32*, i32** %1497, align 8
  %1499 = icmp eq i32* %1498, null
  br i1 %1499, label %1502, label %1500

1500:                                             ; preds = %1496
  %1501 = bitcast i32* %1498 to i8*
  call void @_ZdaPv(i8* %1501) #9
  br label %1502

1502:                                             ; preds = %1500, %1496, %1491
  call void @llvm.lifetime.end.p0i8(i64 32, i8* nonnull %1180) #8
  %1503 = getelementptr inbounds %"class.tflite::RuntimeShape", %"class.tflite::RuntimeShape"* %16, i64 0, i32 0
  %1504 = load i32, i32* %1503, align 8
  %1505 = icmp sgt i32 %1504, 5
  br i1 %1505, label %1506, label %1512

1506:                                             ; preds = %1502
  %1507 = getelementptr inbounds %"class.tflite::RuntimeShape", %"class.tflite::RuntimeShape"* %16, i64 0, i32 1, i32 0
  %1508 = load i32*, i32** %1507, align 8
  %1509 = icmp eq i32* %1508, null
  br i1 %1509, label %1512, label %1510

1510:                                             ; preds = %1506
  %1511 = bitcast i32* %1508 to i8*
  call void @_ZdaPv(i8* %1511) #9
  br label %1512

1512:                                             ; preds = %1510, %1506, %1502
  call void @llvm.lifetime.end.p0i8(i64 32, i8* nonnull %1146) #8
  %1513 = getelementptr inbounds %"class.tflite::RuntimeShape", %"class.tflite::RuntimeShape"* %15, i64 0, i32 0
  %1514 = load i32, i32* %1513, align 8
  %1515 = icmp sgt i32 %1514, 5
  br i1 %1515, label %1516, label %1522

1516:                                             ; preds = %1512
  %1517 = getelementptr inbounds %"class.tflite::RuntimeShape", %"class.tflite::RuntimeShape"* %15, i64 0, i32 1, i32 0
  %1518 = load i32*, i32** %1517, align 8
  %1519 = icmp eq i32* %1518, null
  br i1 %1519, label %1522, label %1520

1520:                                             ; preds = %1516
  %1521 = bitcast i32* %1518 to i8*
  call void @_ZdaPv(i8* %1521) #9
  br label %1522

1522:                                             ; preds = %1512, %1516, %1520, %1484, %1485, %1489
  %1523 = phi i8* [ %1213, %1489 ], [ %1213, %1485 ], [ %1213, %1484 ], [ %1112, %1520 ], [ %1112, %1516 ], [ %1112, %1512 ]
  call void @llvm.lifetime.end.p0i8(i64 32, i8* nonnull %1523) #8
  call void @llvm.lifetime.end.p0i8(i64 32, i8* nonnull %1110) #8
  br label %2493

1524:                                             ; preds = %78
  %1525 = getelementptr inbounds %struct.TfLiteTensor, %struct.TfLiteTensor* %57, i64 0, i32 3, i32 1
  %1526 = load i32, i32* %1525, align 4
  %1527 = sub nsw i32 0, %1526
  %1528 = getelementptr inbounds %struct.TfLiteTensor, %struct.TfLiteTensor* %67, i64 0, i32 3, i32 1
  %1529 = load i32, i32* %1528, align 4
  %1530 = sub nsw i32 0, %1529
  %1531 = bitcast i32* %3 to i8*
  call void @llvm.lifetime.start.p0i8(i64 4, i8* nonnull %1531) #8
  store i32 -1431655766, i32* %3, align 4
  %1532 = bitcast i32* %4 to i8*
  call void @llvm.lifetime.start.p0i8(i64 4, i8* nonnull %1532) #8
  store i32 -1431655766, i32* %4, align 4
  %1533 = getelementptr inbounds %struct.TfLiteTensor, %struct.TfLiteTensor* %57, i64 0, i32 3, i32 0
  %1534 = load float, float* %1533, align 8
  %1535 = fpext float %1534 to double
  call void @_ZN6tflite35QuantizeMultiplierSmallerThanOneExpEdPiS0_(double %1535, i32* nonnull %3, i32* nonnull %4) #8
  %1536 = bitcast i32* %5 to i8*
  call void @llvm.lifetime.start.p0i8(i64 4, i8* nonnull %1536) #8
  store i32 -1431655766, i32* %5, align 4
  %1537 = bitcast i32* %6 to i8*
  call void @llvm.lifetime.start.p0i8(i64 4, i8* nonnull %1537) #8
  store i32 -1431655766, i32* %6, align 4
  %1538 = getelementptr inbounds %struct.TfLiteTensor, %struct.TfLiteTensor* %67, i64 0, i32 3, i32 0
  %1539 = load float, float* %1538, align 8
  %1540 = fpext float %1539 to double
  call void @_ZN6tflite35QuantizeMultiplierSmallerThanOneExpEdPiS0_(double %1540, i32* nonnull %5, i32* nonnull %6) #8
  %1541 = bitcast %"struct.tflite::ComparisonParams"* %7 to i8*
  call void @llvm.lifetime.start.p0i8(i64 32, i8* nonnull %1541) #8
  %1542 = getelementptr inbounds %"struct.tflite::ComparisonParams", %"struct.tflite::ComparisonParams"* %7, i64 0, i32 7
  %1543 = bitcast i8* %1542 to i32*
  store i32 -1431655766, i32* %1543, align 4
  %1544 = getelementptr inbounds %"struct.tflite::ComparisonParams", %"struct.tflite::ComparisonParams"* %7, i64 0, i32 0
  store i32 8, i32* %1544, align 4
  %1545 = getelementptr inbounds %"struct.tflite::ComparisonParams", %"struct.tflite::ComparisonParams"* %7, i64 0, i32 1
  store i32 %1527, i32* %1545, align 4
  %1546 = load i32, i32* %3, align 4
  %1547 = getelementptr inbounds %"struct.tflite::ComparisonParams", %"struct.tflite::ComparisonParams"* %7, i64 0, i32 2
  store i32 %1546, i32* %1547, align 4
  %1548 = load i32, i32* %4, align 4
  %1549 = getelementptr inbounds %"struct.tflite::ComparisonParams", %"struct.tflite::ComparisonParams"* %7, i64 0, i32 3
  store i32 %1548, i32* %1549, align 4
  %1550 = getelementptr inbounds %"struct.tflite::ComparisonParams", %"struct.tflite::ComparisonParams"* %7, i64 0, i32 4
  store i32 %1530, i32* %1550, align 4
  %1551 = load i32, i32* %5, align 4
  %1552 = getelementptr inbounds %"struct.tflite::ComparisonParams", %"struct.tflite::ComparisonParams"* %7, i64 0, i32 5
  store i32 %1551, i32* %1552, align 4
  %1553 = load i32, i32* %6, align 4
  %1554 = getelementptr inbounds %"struct.tflite::ComparisonParams", %"struct.tflite::ComparisonParams"* %7, i64 0, i32 6
  store i32 %1553, i32* %1554, align 4
  br i1 %80, label %1687, label %1555

1555:                                             ; preds = %1524
  %1556 = bitcast %"class.tflite::RuntimeShape"* %8 to i8*
  call void @llvm.lifetime.start.p0i8(i64 32, i8* nonnull %1556) #8
  %1557 = icmp eq %struct.TfLiteTensor* %57, null
  br i1 %1557, label %1558, label %1560

1558:                                             ; preds = %1555
  %1559 = getelementptr inbounds %"class.tflite::RuntimeShape", %"class.tflite::RuntimeShape"* %8, i64 0, i32 0
  store i32 0, i32* %1559, align 8, !alias.scope !526
  br label %1588

1560:                                             ; preds = %1555
  %1561 = getelementptr inbounds %struct.TfLiteTensor, %struct.TfLiteTensor* %57, i64 0, i32 2
  %1562 = load %struct.TfLiteIntArray*, %struct.TfLiteIntArray** %1561, align 8, !noalias !526
  %1563 = getelementptr inbounds %struct.TfLiteIntArray, %struct.TfLiteIntArray* %1562, i64 0, i32 0
  %1564 = load i32, i32* %1563, align 4, !noalias !526
  %1565 = getelementptr inbounds %struct.TfLiteIntArray, %struct.TfLiteIntArray* %1562, i64 0, i32 1, i64 0
  %1566 = getelementptr inbounds %"class.tflite::RuntimeShape", %"class.tflite::RuntimeShape"* %8, i64 0, i32 0
  store i32 %1564, i32* %1566, align 8, !alias.scope !526
  %1567 = icmp sgt i32 %1564, 5
  br i1 %1567, label %1568, label %1575

1568:                                             ; preds = %1560
  %1569 = sext i32 %1564 to i64
  %1570 = shl nsw i64 %1569, 2
  %1571 = call i8* @_Znam(i64 %1570) #9, !noalias !526
  %1572 = getelementptr inbounds %"class.tflite::RuntimeShape", %"class.tflite::RuntimeShape"* %8, i64 0, i32 1, i32 0
  %1573 = bitcast i32** %1572 to i8**
  store i8* %1571, i8** %1573, align 8, !alias.scope !526
  %1574 = bitcast i8* %1571 to i32*
  br label %1580

1575:                                             ; preds = %1560
  %1576 = getelementptr inbounds %"class.tflite::RuntimeShape", %"class.tflite::RuntimeShape"* %8, i64 0, i32 1
  %1577 = bitcast %union.anon* %1576 to i32*
  %1578 = sext i32 %1564 to i64
  %1579 = shl nsw i64 %1578, 2
  br label %1580

1580:                                             ; preds = %1575, %1568
  %1581 = phi i64 [ %1570, %1568 ], [ %1579, %1575 ]
  %1582 = phi i32* [ %1574, %1568 ], [ %1577, %1575 ]
  %1583 = bitcast i32* %1582 to i8*
  %1584 = bitcast i32* %1565 to i8*
  call void @llvm.memcpy.p0i8.p0i8.i64(i8* align 4 %1583, i8* align 4 %1584, i64 %1581, i1 false) #8
  %1585 = getelementptr inbounds %struct.TfLiteTensor, %struct.TfLiteTensor* %57, i64 0, i32 1
  %1586 = bitcast %union.TfLitePtrUnion* %1585 to i8**
  %1587 = load i8*, i8** %1586, align 8
  br label %1588

1588:                                             ; preds = %1580, %1558
  %1589 = phi i8* [ %1587, %1580 ], [ null, %1558 ]
  %1590 = bitcast %"class.tflite::RuntimeShape"* %9 to i8*
  call void @llvm.lifetime.start.p0i8(i64 32, i8* nonnull %1590) #8
  %1591 = icmp eq %struct.TfLiteTensor* %67, null
  br i1 %1591, label %1592, label %1594

1592:                                             ; preds = %1588
  %1593 = getelementptr inbounds %"class.tflite::RuntimeShape", %"class.tflite::RuntimeShape"* %9, i64 0, i32 0
  store i32 0, i32* %1593, align 8, !alias.scope !529
  br label %1622

1594:                                             ; preds = %1588
  %1595 = getelementptr inbounds %struct.TfLiteTensor, %struct.TfLiteTensor* %67, i64 0, i32 2
  %1596 = load %struct.TfLiteIntArray*, %struct.TfLiteIntArray** %1595, align 8, !noalias !529
  %1597 = getelementptr inbounds %struct.TfLiteIntArray, %struct.TfLiteIntArray* %1596, i64 0, i32 0
  %1598 = load i32, i32* %1597, align 4, !noalias !529
  %1599 = getelementptr inbounds %struct.TfLiteIntArray, %struct.TfLiteIntArray* %1596, i64 0, i32 1, i64 0
  %1600 = getelementptr inbounds %"class.tflite::RuntimeShape", %"class.tflite::RuntimeShape"* %9, i64 0, i32 0
  store i32 %1598, i32* %1600, align 8, !alias.scope !529
  %1601 = icmp sgt i32 %1598, 5
  br i1 %1601, label %1602, label %1609

1602:                                             ; preds = %1594
  %1603 = sext i32 %1598 to i64
  %1604 = shl nsw i64 %1603, 2
  %1605 = call i8* @_Znam(i64 %1604) #9, !noalias !529
  %1606 = getelementptr inbounds %"class.tflite::RuntimeShape", %"class.tflite::RuntimeShape"* %9, i64 0, i32 1, i32 0
  %1607 = bitcast i32** %1606 to i8**
  store i8* %1605, i8** %1607, align 8, !alias.scope !529
  %1608 = bitcast i8* %1605 to i32*
  br label %1614

1609:                                             ; preds = %1594
  %1610 = getelementptr inbounds %"class.tflite::RuntimeShape", %"class.tflite::RuntimeShape"* %9, i64 0, i32 1
  %1611 = bitcast %union.anon* %1610 to i32*
  %1612 = sext i32 %1598 to i64
  %1613 = shl nsw i64 %1612, 2
  br label %1614

1614:                                             ; preds = %1609, %1602
  %1615 = phi i64 [ %1604, %1602 ], [ %1613, %1609 ]
  %1616 = phi i32* [ %1608, %1602 ], [ %1611, %1609 ]
  %1617 = bitcast i32* %1616 to i8*
  %1618 = bitcast i32* %1599 to i8*
  call void @llvm.memcpy.p0i8.p0i8.i64(i8* align 4 %1617, i8* align 4 %1618, i64 %1615, i1 false) #8
  %1619 = getelementptr inbounds %struct.TfLiteTensor, %struct.TfLiteTensor* %67, i64 0, i32 1
  %1620 = bitcast %union.TfLitePtrUnion* %1619 to i8**
  %1621 = load i8*, i8** %1620, align 8
  br label %1622

1622:                                             ; preds = %1614, %1592
  %1623 = phi i8* [ %1621, %1614 ], [ null, %1592 ]
  %1624 = bitcast %"class.tflite::RuntimeShape"* %10 to i8*
  call void @llvm.lifetime.start.p0i8(i64 32, i8* nonnull %1624) #8
  %1625 = icmp eq %struct.TfLiteTensor* %79, null
  br i1 %1625, label %1626, label %1628

1626:                                             ; preds = %1622
  %1627 = getelementptr inbounds %"class.tflite::RuntimeShape", %"class.tflite::RuntimeShape"* %10, i64 0, i32 0
  store i32 0, i32* %1627, align 8, !alias.scope !532
  br label %1656

1628:                                             ; preds = %1622
  %1629 = getelementptr inbounds %struct.TfLiteTensor, %struct.TfLiteTensor* %79, i64 0, i32 2
  %1630 = load %struct.TfLiteIntArray*, %struct.TfLiteIntArray** %1629, align 8, !noalias !532
  %1631 = getelementptr inbounds %struct.TfLiteIntArray, %struct.TfLiteIntArray* %1630, i64 0, i32 0
  %1632 = load i32, i32* %1631, align 4, !noalias !532
  %1633 = getelementptr inbounds %struct.TfLiteIntArray, %struct.TfLiteIntArray* %1630, i64 0, i32 1, i64 0
  %1634 = getelementptr inbounds %"class.tflite::RuntimeShape", %"class.tflite::RuntimeShape"* %10, i64 0, i32 0
  store i32 %1632, i32* %1634, align 8, !alias.scope !532
  %1635 = icmp sgt i32 %1632, 5
  br i1 %1635, label %1636, label %1643

1636:                                             ; preds = %1628
  %1637 = sext i32 %1632 to i64
  %1638 = shl nsw i64 %1637, 2
  %1639 = call i8* @_Znam(i64 %1638) #9, !noalias !532
  %1640 = getelementptr inbounds %"class.tflite::RuntimeShape", %"class.tflite::RuntimeShape"* %10, i64 0, i32 1, i32 0
  %1641 = bitcast i32** %1640 to i8**
  store i8* %1639, i8** %1641, align 8, !alias.scope !532
  %1642 = bitcast i8* %1639 to i32*
  br label %1648

1643:                                             ; preds = %1628
  %1644 = getelementptr inbounds %"class.tflite::RuntimeShape", %"class.tflite::RuntimeShape"* %10, i64 0, i32 1
  %1645 = bitcast %union.anon* %1644 to i32*
  %1646 = sext i32 %1632 to i64
  %1647 = shl nsw i64 %1646, 2
  br label %1648

1648:                                             ; preds = %1643, %1636
  %1649 = phi i64 [ %1638, %1636 ], [ %1647, %1643 ]
  %1650 = phi i32* [ %1642, %1636 ], [ %1645, %1643 ]
  %1651 = bitcast i32* %1650 to i8*
  %1652 = bitcast i32* %1633 to i8*
  call void @llvm.memcpy.p0i8.p0i8.i64(i8* align 4 %1651, i8* align 4 %1652, i64 %1649, i1 false) #8
  %1653 = getelementptr inbounds %struct.TfLiteTensor, %struct.TfLiteTensor* %79, i64 0, i32 1
  %1654 = bitcast %union.TfLitePtrUnion* %1653 to i8**
  %1655 = load i8*, i8** %1654, align 8
  br label %1656

1656:                                             ; preds = %1648, %1626
  %1657 = phi i8* [ %1655, %1648 ], [ null, %1626 ]
  call void @_ZN6tflite13reference_ops36BroadcastComparison4DSlowWithScalingIhXadL_ZNS0_14GreaterEqualFnIiEEbT_S3_EEEEvRKNS_16ComparisonParamsERKNS_12RuntimeShapeEPKS3_S9_SB_S9_Pb(%"struct.tflite::ComparisonParams"* nonnull dereferenceable(32) %7, %"class.tflite::RuntimeShape"* nonnull dereferenceable(32) %8, i8* %1589, %"class.tflite::RuntimeShape"* nonnull dereferenceable(32) %9, i8* %1623, %"class.tflite::RuntimeShape"* nonnull dereferenceable(32) %10, i8* %1657) #8
  %1658 = getelementptr inbounds %"class.tflite::RuntimeShape", %"class.tflite::RuntimeShape"* %10, i64 0, i32 0
  %1659 = load i32, i32* %1658, align 8
  %1660 = icmp sgt i32 %1659, 5
  br i1 %1660, label %1661, label %1667

1661:                                             ; preds = %1656
  %1662 = getelementptr inbounds %"class.tflite::RuntimeShape", %"class.tflite::RuntimeShape"* %10, i64 0, i32 1, i32 0
  %1663 = load i32*, i32** %1662, align 8
  %1664 = icmp eq i32* %1663, null
  br i1 %1664, label %1667, label %1665

1665:                                             ; preds = %1661
  %1666 = bitcast i32* %1663 to i8*
  call void @_ZdaPv(i8* %1666) #9
  br label %1667

1667:                                             ; preds = %1665, %1661, %1656
  call void @llvm.lifetime.end.p0i8(i64 32, i8* nonnull %1624) #8
  %1668 = getelementptr inbounds %"class.tflite::RuntimeShape", %"class.tflite::RuntimeShape"* %9, i64 0, i32 0
  %1669 = load i32, i32* %1668, align 8
  %1670 = icmp sgt i32 %1669, 5
  br i1 %1670, label %1671, label %1677

1671:                                             ; preds = %1667
  %1672 = getelementptr inbounds %"class.tflite::RuntimeShape", %"class.tflite::RuntimeShape"* %9, i64 0, i32 1, i32 0
  %1673 = load i32*, i32** %1672, align 8
  %1674 = icmp eq i32* %1673, null
  br i1 %1674, label %1677, label %1675

1675:                                             ; preds = %1671
  %1676 = bitcast i32* %1673 to i8*
  call void @_ZdaPv(i8* %1676) #9
  br label %1677

1677:                                             ; preds = %1675, %1671, %1667
  call void @llvm.lifetime.end.p0i8(i64 32, i8* nonnull %1590) #8
  %1678 = getelementptr inbounds %"class.tflite::RuntimeShape", %"class.tflite::RuntimeShape"* %8, i64 0, i32 0
  %1679 = load i32, i32* %1678, align 8
  %1680 = icmp sgt i32 %1679, 5
  br i1 %1680, label %1681, label %2005

1681:                                             ; preds = %1677
  %1682 = getelementptr inbounds %"class.tflite::RuntimeShape", %"class.tflite::RuntimeShape"* %8, i64 0, i32 1, i32 0
  %1683 = load i32*, i32** %1682, align 8
  %1684 = icmp eq i32* %1683, null
  br i1 %1684, label %2005, label %1685

1685:                                             ; preds = %1681
  %1686 = bitcast i32* %1683 to i8*
  call void @_ZdaPv(i8* %1686) #9
  br label %2005

1687:                                             ; preds = %1524
  %1688 = bitcast %"class.tflite::RuntimeShape"* %11 to i8*
  call void @llvm.lifetime.start.p0i8(i64 32, i8* nonnull %1688) #8
  %1689 = icmp eq %struct.TfLiteTensor* %57, null
  br i1 %1689, label %1690, label %1692

1690:                                             ; preds = %1687
  %1691 = getelementptr inbounds %"class.tflite::RuntimeShape", %"class.tflite::RuntimeShape"* %11, i64 0, i32 0
  store i32 0, i32* %1691, align 8, !alias.scope !535
  br label %1720

1692:                                             ; preds = %1687
  %1693 = getelementptr inbounds %struct.TfLiteTensor, %struct.TfLiteTensor* %57, i64 0, i32 2
  %1694 = load %struct.TfLiteIntArray*, %struct.TfLiteIntArray** %1693, align 8, !noalias !535
  %1695 = getelementptr inbounds %struct.TfLiteIntArray, %struct.TfLiteIntArray* %1694, i64 0, i32 0
  %1696 = load i32, i32* %1695, align 4, !noalias !535
  %1697 = getelementptr inbounds %struct.TfLiteIntArray, %struct.TfLiteIntArray* %1694, i64 0, i32 1, i64 0
  %1698 = getelementptr inbounds %"class.tflite::RuntimeShape", %"class.tflite::RuntimeShape"* %11, i64 0, i32 0
  store i32 %1696, i32* %1698, align 8, !alias.scope !535
  %1699 = icmp sgt i32 %1696, 5
  br i1 %1699, label %1700, label %1707

1700:                                             ; preds = %1692
  %1701 = sext i32 %1696 to i64
  %1702 = shl nsw i64 %1701, 2
  %1703 = call i8* @_Znam(i64 %1702) #9, !noalias !535
  %1704 = getelementptr inbounds %"class.tflite::RuntimeShape", %"class.tflite::RuntimeShape"* %11, i64 0, i32 1, i32 0
  %1705 = bitcast i32** %1704 to i8**
  store i8* %1703, i8** %1705, align 8, !alias.scope !535
  %1706 = bitcast i8* %1703 to i32*
  br label %1712

1707:                                             ; preds = %1692
  %1708 = getelementptr inbounds %"class.tflite::RuntimeShape", %"class.tflite::RuntimeShape"* %11, i64 0, i32 1
  %1709 = bitcast %union.anon* %1708 to i32*
  %1710 = sext i32 %1696 to i64
  %1711 = shl nsw i64 %1710, 2
  br label %1712

1712:                                             ; preds = %1707, %1700
  %1713 = phi i64 [ %1702, %1700 ], [ %1711, %1707 ]
  %1714 = phi i32* [ %1706, %1700 ], [ %1709, %1707 ]
  %1715 = bitcast i32* %1714 to i8*
  %1716 = bitcast i32* %1697 to i8*
  call void @llvm.memcpy.p0i8.p0i8.i64(i8* align 4 %1715, i8* align 4 %1716, i64 %1713, i1 false) #8
  %1717 = getelementptr inbounds %struct.TfLiteTensor, %struct.TfLiteTensor* %57, i64 0, i32 1
  %1718 = bitcast %union.TfLitePtrUnion* %1717 to i8**
  %1719 = load i8*, i8** %1718, align 8
  br label %1720

1720:                                             ; preds = %1712, %1690
  %1721 = phi i32 [ %1696, %1712 ], [ 0, %1690 ]
  %1722 = phi i8* [ %1719, %1712 ], [ null, %1690 ]
  %1723 = bitcast %"class.tflite::RuntimeShape"* %12 to i8*
  call void @llvm.lifetime.start.p0i8(i64 32, i8* nonnull %1723) #8
  %1724 = icmp eq %struct.TfLiteTensor* %67, null
  br i1 %1724, label %1725, label %1727

1725:                                             ; preds = %1720
  %1726 = getelementptr inbounds %"class.tflite::RuntimeShape", %"class.tflite::RuntimeShape"* %12, i64 0, i32 0
  store i32 0, i32* %1726, align 8, !alias.scope !538
  br label %1755

1727:                                             ; preds = %1720
  %1728 = getelementptr inbounds %struct.TfLiteTensor, %struct.TfLiteTensor* %67, i64 0, i32 2
  %1729 = load %struct.TfLiteIntArray*, %struct.TfLiteIntArray** %1728, align 8, !noalias !538
  %1730 = getelementptr inbounds %struct.TfLiteIntArray, %struct.TfLiteIntArray* %1729, i64 0, i32 0
  %1731 = load i32, i32* %1730, align 4, !noalias !538
  %1732 = getelementptr inbounds %struct.TfLiteIntArray, %struct.TfLiteIntArray* %1729, i64 0, i32 1, i64 0
  %1733 = getelementptr inbounds %"class.tflite::RuntimeShape", %"class.tflite::RuntimeShape"* %12, i64 0, i32 0
  store i32 %1731, i32* %1733, align 8, !alias.scope !538
  %1734 = icmp sgt i32 %1731, 5
  br i1 %1734, label %1735, label %1742

1735:                                             ; preds = %1727
  %1736 = sext i32 %1731 to i64
  %1737 = shl nsw i64 %1736, 2
  %1738 = call i8* @_Znam(i64 %1737) #9, !noalias !538
  %1739 = getelementptr inbounds %"class.tflite::RuntimeShape", %"class.tflite::RuntimeShape"* %12, i64 0, i32 1, i32 0
  %1740 = bitcast i32** %1739 to i8**
  store i8* %1738, i8** %1740, align 8, !alias.scope !538
  %1741 = bitcast i8* %1738 to i32*
  br label %1747

1742:                                             ; preds = %1727
  %1743 = getelementptr inbounds %"class.tflite::RuntimeShape", %"class.tflite::RuntimeShape"* %12, i64 0, i32 1
  %1744 = bitcast %union.anon* %1743 to i32*
  %1745 = sext i32 %1731 to i64
  %1746 = shl nsw i64 %1745, 2
  br label %1747

1747:                                             ; preds = %1742, %1735
  %1748 = phi i64 [ %1737, %1735 ], [ %1746, %1742 ]
  %1749 = phi i32* [ %1741, %1735 ], [ %1744, %1742 ]
  %1750 = bitcast i32* %1749 to i8*
  %1751 = bitcast i32* %1732 to i8*
  call void @llvm.memcpy.p0i8.p0i8.i64(i8* align 4 %1750, i8* align 4 %1751, i64 %1748, i1 false) #8
  %1752 = getelementptr inbounds %struct.TfLiteTensor, %struct.TfLiteTensor* %67, i64 0, i32 1
  %1753 = bitcast %union.TfLitePtrUnion* %1752 to i8**
  %1754 = load i8*, i8** %1753, align 8
  br label %1755

1755:                                             ; preds = %1747, %1725
  %1756 = phi i32 [ %1731, %1747 ], [ 0, %1725 ]
  %1757 = phi i8* [ %1754, %1747 ], [ null, %1725 ]
  %1758 = bitcast %"class.tflite::RuntimeShape"* %13 to i8*
  call void @llvm.lifetime.start.p0i8(i64 32, i8* nonnull %1758) #8
  %1759 = icmp eq %struct.TfLiteTensor* %79, null
  br i1 %1759, label %1760, label %1762

1760:                                             ; preds = %1755
  %1761 = getelementptr inbounds %"class.tflite::RuntimeShape", %"class.tflite::RuntimeShape"* %13, i64 0, i32 0
  store i32 0, i32* %1761, align 8, !alias.scope !541
  br label %1790

1762:                                             ; preds = %1755
  %1763 = getelementptr inbounds %struct.TfLiteTensor, %struct.TfLiteTensor* %79, i64 0, i32 2
  %1764 = load %struct.TfLiteIntArray*, %struct.TfLiteIntArray** %1763, align 8, !noalias !541
  %1765 = getelementptr inbounds %struct.TfLiteIntArray, %struct.TfLiteIntArray* %1764, i64 0, i32 0
  %1766 = load i32, i32* %1765, align 4, !noalias !541
  %1767 = getelementptr inbounds %struct.TfLiteIntArray, %struct.TfLiteIntArray* %1764, i64 0, i32 1, i64 0
  %1768 = getelementptr inbounds %"class.tflite::RuntimeShape", %"class.tflite::RuntimeShape"* %13, i64 0, i32 0
  store i32 %1766, i32* %1768, align 8, !alias.scope !541
  %1769 = icmp sgt i32 %1766, 5
  br i1 %1769, label %1770, label %1777

1770:                                             ; preds = %1762
  %1771 = sext i32 %1766 to i64
  %1772 = shl nsw i64 %1771, 2
  %1773 = call i8* @_Znam(i64 %1772) #9, !noalias !541
  %1774 = getelementptr inbounds %"class.tflite::RuntimeShape", %"class.tflite::RuntimeShape"* %13, i64 0, i32 1, i32 0
  %1775 = bitcast i32** %1774 to i8**
  store i8* %1773, i8** %1775, align 8, !alias.scope !541
  %1776 = bitcast i8* %1773 to i32*
  br label %1782

1777:                                             ; preds = %1762
  %1778 = getelementptr inbounds %"class.tflite::RuntimeShape", %"class.tflite::RuntimeShape"* %13, i64 0, i32 1
  %1779 = bitcast %union.anon* %1778 to i32*
  %1780 = sext i32 %1766 to i64
  %1781 = shl nsw i64 %1780, 2
  br label %1782

1782:                                             ; preds = %1777, %1770
  %1783 = phi i64 [ %1772, %1770 ], [ %1781, %1777 ]
  %1784 = phi i32* [ %1776, %1770 ], [ %1779, %1777 ]
  %1785 = bitcast i32* %1784 to i8*
  %1786 = bitcast i32* %1767 to i8*
  call void @llvm.memcpy.p0i8.p0i8.i64(i8* align 4 %1785, i8* align 4 %1786, i64 %1783, i1 false) #8
  %1787 = getelementptr inbounds %struct.TfLiteTensor, %struct.TfLiteTensor* %79, i64 0, i32 1
  %1788 = bitcast %union.TfLitePtrUnion* %1787 to i8**
  %1789 = load i8*, i8** %1788, align 8
  br label %1790

1790:                                             ; preds = %1782, %1760
  %1791 = phi i32 [ %1766, %1782 ], [ 0, %1760 ]
  %1792 = phi i8* [ %1789, %1782 ], [ null, %1760 ]
  %1793 = getelementptr inbounds %"class.tflite::RuntimeShape", %"class.tflite::RuntimeShape"* %11, i64 0, i32 1
  %1794 = icmp sgt i32 %1721, 5
  br i1 %1794, label %1795, label %1798

1795:                                             ; preds = %1790
  %1796 = getelementptr inbounds %union.anon, %union.anon* %1793, i64 0, i32 0
  %1797 = load i32*, i32** %1796, align 8
  br label %1801

1798:                                             ; preds = %1790
  %1799 = bitcast %union.anon* %1793 to i32*
  %1800 = icmp sgt i32 %1721, 0
  br i1 %1800, label %1801, label %1905

1801:                                             ; preds = %1798, %1795
  %1802 = phi i32* [ %1797, %1795 ], [ %1799, %1798 ]
  %1803 = zext i32 %1721 to i64
  %1804 = icmp ult i32 %1721, 8
  br i1 %1804, label %1890, label %1805

1805:                                             ; preds = %1801
  %1806 = and i64 %1803, 4294967288
  %1807 = add nsw i64 %1806, -8
  %1808 = lshr exact i64 %1807, 3
  %1809 = add nuw nsw i64 %1808, 1
  %1810 = and i64 %1809, 3
  %1811 = icmp ult i64 %1807, 24
  br i1 %1811, label %1857, label %1812

1812:                                             ; preds = %1805
  %1813 = sub nsw i64 %1809, %1810
  br label %1814

1814:                                             ; preds = %1814, %1812
  %1815 = phi i64 [ 0, %1812 ], [ %1854, %1814 ]
  %1816 = phi <4 x i32> [ <i32 1, i32 1, i32 1, i32 1>, %1812 ], [ %1852, %1814 ]
  %1817 = phi <4 x i32> [ <i32 1, i32 1, i32 1, i32 1>, %1812 ], [ %1853, %1814 ]
  %1818 = phi i64 [ %1813, %1812 ], [ %1855, %1814 ]
  %1819 = getelementptr inbounds i32, i32* %1802, i64 %1815
  %1820 = bitcast i32* %1819 to <4 x i32>*
  %1821 = load <4 x i32>, <4 x i32>* %1820, align 4
  %1822 = getelementptr inbounds i32, i32* %1819, i64 4
  %1823 = bitcast i32* %1822 to <4 x i32>*
  %1824 = load <4 x i32>, <4 x i32>* %1823, align 4
  %1825 = mul nsw <4 x i32> %1821, %1816
  %1826 = mul nsw <4 x i32> %1824, %1817
  %1827 = or i64 %1815, 8
  %1828 = getelementptr inbounds i32, i32* %1802, i64 %1827
  %1829 = bitcast i32* %1828 to <4 x i32>*
  %1830 = load <4 x i32>, <4 x i32>* %1829, align 4
  %1831 = getelementptr inbounds i32, i32* %1828, i64 4
  %1832 = bitcast i32* %1831 to <4 x i32>*
  %1833 = load <4 x i32>, <4 x i32>* %1832, align 4
  %1834 = mul nsw <4 x i32> %1830, %1825
  %1835 = mul nsw <4 x i32> %1833, %1826
  %1836 = or i64 %1815, 16
  %1837 = getelementptr inbounds i32, i32* %1802, i64 %1836
  %1838 = bitcast i32* %1837 to <4 x i32>*
  %1839 = load <4 x i32>, <4 x i32>* %1838, align 4
  %1840 = getelementptr inbounds i32, i32* %1837, i64 4
  %1841 = bitcast i32* %1840 to <4 x i32>*
  %1842 = load <4 x i32>, <4 x i32>* %1841, align 4
  %1843 = mul nsw <4 x i32> %1839, %1834
  %1844 = mul nsw <4 x i32> %1842, %1835
  %1845 = or i64 %1815, 24
  %1846 = getelementptr inbounds i32, i32* %1802, i64 %1845
  %1847 = bitcast i32* %1846 to <4 x i32>*
  %1848 = load <4 x i32>, <4 x i32>* %1847, align 4
  %1849 = getelementptr inbounds i32, i32* %1846, i64 4
  %1850 = bitcast i32* %1849 to <4 x i32>*
  %1851 = load <4 x i32>, <4 x i32>* %1850, align 4
  %1852 = mul nsw <4 x i32> %1848, %1843
  %1853 = mul nsw <4 x i32> %1851, %1844
  %1854 = add i64 %1815, 32
  %1855 = add i64 %1818, -4
  %1856 = icmp eq i64 %1855, 0
  br i1 %1856, label %1857, label %1814, !llvm.loop !544

1857:                                             ; preds = %1814, %1805
  %1858 = phi <4 x i32> [ undef, %1805 ], [ %1852, %1814 ]
  %1859 = phi <4 x i32> [ undef, %1805 ], [ %1853, %1814 ]
  %1860 = phi i64 [ 0, %1805 ], [ %1854, %1814 ]
  %1861 = phi <4 x i32> [ <i32 1, i32 1, i32 1, i32 1>, %1805 ], [ %1852, %1814 ]
  %1862 = phi <4 x i32> [ <i32 1, i32 1, i32 1, i32 1>, %1805 ], [ %1853, %1814 ]
  %1863 = icmp eq i64 %1810, 0
  br i1 %1863, label %1880, label %1864

1864:                                             ; preds = %1857, %1864
  %1865 = phi i64 [ %1877, %1864 ], [ %1860, %1857 ]
  %1866 = phi <4 x i32> [ %1875, %1864 ], [ %1861, %1857 ]
  %1867 = phi <4 x i32> [ %1876, %1864 ], [ %1862, %1857 ]
  %1868 = phi i64 [ %1878, %1864 ], [ %1810, %1857 ]
  %1869 = getelementptr inbounds i32, i32* %1802, i64 %1865
  %1870 = bitcast i32* %1869 to <4 x i32>*
  %1871 = load <4 x i32>, <4 x i32>* %1870, align 4
  %1872 = getelementptr inbounds i32, i32* %1869, i64 4
  %1873 = bitcast i32* %1872 to <4 x i32>*
  %1874 = load <4 x i32>, <4 x i32>* %1873, align 4
  %1875 = mul nsw <4 x i32> %1871, %1866
  %1876 = mul nsw <4 x i32> %1874, %1867
  %1877 = add i64 %1865, 8
  %1878 = add i64 %1868, -1
  %1879 = icmp eq i64 %1878, 0
  br i1 %1879, label %1880, label %1864, !llvm.loop !545

1880:                                             ; preds = %1864, %1857
  %1881 = phi <4 x i32> [ %1858, %1857 ], [ %1875, %1864 ]
  %1882 = phi <4 x i32> [ %1859, %1857 ], [ %1876, %1864 ]
  %1883 = mul <4 x i32> %1882, %1881
  %1884 = shufflevector <4 x i32> %1883, <4 x i32> undef, <4 x i32> <i32 2, i32 3, i32 undef, i32 undef>
  %1885 = mul <4 x i32> %1883, %1884
  %1886 = shufflevector <4 x i32> %1885, <4 x i32> undef, <4 x i32> <i32 1, i32 undef, i32 undef, i32 undef>
  %1887 = mul <4 x i32> %1885, %1886
  %1888 = extractelement <4 x i32> %1887, i32 0
  %1889 = icmp eq i64 %1806, %1803
  br i1 %1889, label %1901, label %1890

1890:                                             ; preds = %1880, %1801
  %1891 = phi i64 [ 0, %1801 ], [ %1806, %1880 ]
  %1892 = phi i32 [ 1, %1801 ], [ %1888, %1880 ]
  br label %1893

1893:                                             ; preds = %1890, %1893
  %1894 = phi i64 [ %1899, %1893 ], [ %1891, %1890 ]
  %1895 = phi i32 [ %1898, %1893 ], [ %1892, %1890 ]
  %1896 = getelementptr inbounds i32, i32* %1802, i64 %1894
  %1897 = load i32, i32* %1896, align 4
  %1898 = mul nsw i32 %1897, %1895
  %1899 = add nuw nsw i64 %1894, 1
  %1900 = icmp eq i64 %1899, %1803
  br i1 %1900, label %1901, label %1893, !llvm.loop !546

1901:                                             ; preds = %1893, %1880
  %1902 = phi i32 [ %1888, %1880 ], [ %1898, %1893 ]
  %1903 = sext i32 %1902 to i64
  %1904 = icmp sgt i32 %1902, 0
  br i1 %1904, label %1905, label %1982

1905:                                             ; preds = %1901, %1798
  %1906 = phi i64 [ %1903, %1901 ], [ 1, %1798 ]
  %1907 = sext i32 %1546 to i64
  %1908 = sub nsw i32 0, %1548
  %1909 = zext i32 %1908 to i64
  %1910 = shl nsw i64 -1, %1909
  %1911 = trunc i64 %1910 to i32
  %1912 = xor i32 %1911, -1
  %1913 = ashr i32 %1912, 1
  %1914 = sext i32 %1551 to i64
  %1915 = sub nsw i32 0, %1553
  %1916 = zext i32 %1915 to i64
  %1917 = shl nsw i64 -1, %1916
  %1918 = trunc i64 %1917 to i32
  %1919 = xor i32 %1918, -1
  %1920 = ashr i32 %1919, 1
  %1921 = icmp eq i32 %1546, -2147483648
  %1922 = icmp eq i32 %1551, -2147483648
  br label %1923

1923:                                             ; preds = %1968, %1905
  %1924 = phi i64 [ 0, %1905 ], [ %1980, %1968 ]
  %1925 = getelementptr inbounds i8, i8* %1722, i64 %1924
  %1926 = load i8, i8* %1925, align 1
  %1927 = zext i8 %1926 to i32
  %1928 = sub i32 %1927, %1526
  %1929 = getelementptr inbounds i8, i8* %1757, i64 %1924
  %1930 = load i8, i8* %1929, align 1
  %1931 = zext i8 %1930 to i32
  %1932 = sub i32 %1931, %1529
  %1933 = shl i32 %1928, 8
  %1934 = shl i32 %1932, 8
  %1935 = icmp eq i32 %1933, %1546
  br i1 %1935, label %1938, label %1936

1936:                                             ; preds = %1923
  %1937 = sext i32 %1933 to i64
  br label %1939

1938:                                             ; preds = %1923
  br i1 %1921, label %1947, label %1939

1939:                                             ; preds = %1938, %1936
  %1940 = phi i64 [ %1937, %1936 ], [ %1907, %1938 ]
  %1941 = mul nsw i64 %1940, %1907
  %1942 = icmp sgt i64 %1941, -1
  %1943 = select i1 %1942, i64 1073741824, i64 -1073741823
  %1944 = add nsw i64 %1943, %1941
  %1945 = sdiv i64 %1944, 2147483648
  %1946 = trunc i64 %1945 to i32
  br label %1947

1947:                                             ; preds = %1939, %1938
  %1948 = phi i32 [ %1946, %1939 ], [ 2147483647, %1938 ]
  %1949 = and i32 %1948, %1912
  %1950 = lshr i32 %1948, 31
  %1951 = add nsw i32 %1950, %1913
  %1952 = ashr i32 %1948, %1908
  %1953 = icmp sgt i32 %1949, %1951
  %1954 = zext i1 %1953 to i32
  %1955 = add nsw i32 %1952, %1954
  %1956 = icmp eq i32 %1934, %1551
  br i1 %1956, label %1959, label %1957

1957:                                             ; preds = %1947
  %1958 = sext i32 %1934 to i64
  br label %1960

1959:                                             ; preds = %1947
  br i1 %1922, label %1968, label %1960

1960:                                             ; preds = %1959, %1957
  %1961 = phi i64 [ %1958, %1957 ], [ %1914, %1959 ]
  %1962 = mul nsw i64 %1961, %1914
  %1963 = icmp sgt i64 %1962, -1
  %1964 = select i1 %1963, i64 1073741824, i64 -1073741823
  %1965 = add nsw i64 %1964, %1962
  %1966 = sdiv i64 %1965, 2147483648
  %1967 = trunc i64 %1966 to i32
  br label %1968

1968:                                             ; preds = %1960, %1959
  %1969 = phi i32 [ %1967, %1960 ], [ 2147483647, %1959 ]
  %1970 = and i32 %1969, %1919
  %1971 = lshr i32 %1969, 31
  %1972 = add nsw i32 %1971, %1920
  %1973 = ashr i32 %1969, %1915
  %1974 = icmp sgt i32 %1970, %1972
  %1975 = zext i1 %1974 to i32
  %1976 = add nsw i32 %1973, %1975
  %1977 = icmp sge i32 %1955, %1976
  %1978 = getelementptr inbounds i8, i8* %1792, i64 %1924
  %1979 = zext i1 %1977 to i8
  store i8 %1979, i8* %1978, align 1
  %1980 = add nuw nsw i64 %1924, 1
  %1981 = icmp eq i64 %1980, %1906
  br i1 %1981, label %1982, label %1923

1982:                                             ; preds = %1968, %1901
  %1983 = icmp sgt i32 %1791, 5
  br i1 %1983, label %1984, label %1990

1984:                                             ; preds = %1982
  %1985 = getelementptr inbounds %"class.tflite::RuntimeShape", %"class.tflite::RuntimeShape"* %13, i64 0, i32 1, i32 0
  %1986 = load i32*, i32** %1985, align 8
  %1987 = icmp eq i32* %1986, null
  br i1 %1987, label %1990, label %1988

1988:                                             ; preds = %1984
  %1989 = bitcast i32* %1986 to i8*
  call void @_ZdaPv(i8* %1989) #9
  br label %1990

1990:                                             ; preds = %1988, %1984, %1982
  call void @llvm.lifetime.end.p0i8(i64 32, i8* nonnull %1758) #8
  %1991 = icmp sgt i32 %1756, 5
  br i1 %1991, label %1992, label %1998

1992:                                             ; preds = %1990
  %1993 = getelementptr inbounds %"class.tflite::RuntimeShape", %"class.tflite::RuntimeShape"* %12, i64 0, i32 1, i32 0
  %1994 = load i32*, i32** %1993, align 8
  %1995 = icmp eq i32* %1994, null
  br i1 %1995, label %1998, label %1996

1996:                                             ; preds = %1992
  %1997 = bitcast i32* %1994 to i8*
  call void @_ZdaPv(i8* %1997) #9
  br label %1998

1998:                                             ; preds = %1996, %1992, %1990
  call void @llvm.lifetime.end.p0i8(i64 32, i8* nonnull %1723) #8
  br i1 %1794, label %1999, label %2005

1999:                                             ; preds = %1998
  %2000 = getelementptr inbounds %"class.tflite::RuntimeShape", %"class.tflite::RuntimeShape"* %11, i64 0, i32 1, i32 0
  %2001 = load i32*, i32** %2000, align 8
  %2002 = icmp eq i32* %2001, null
  br i1 %2002, label %2005, label %2003

2003:                                             ; preds = %1999
  %2004 = bitcast i32* %2001 to i8*
  call void @_ZdaPv(i8* %2004) #9
  br label %2005

2005:                                             ; preds = %1998, %1999, %2003, %1677, %1681, %1685
  %2006 = phi i8* [ %1556, %1685 ], [ %1556, %1681 ], [ %1556, %1677 ], [ %1688, %2003 ], [ %1688, %1999 ], [ %1688, %1998 ]
  call void @llvm.lifetime.end.p0i8(i64 32, i8* nonnull %2006) #8
  call void @llvm.lifetime.end.p0i8(i64 32, i8* nonnull %1541) #8
  call void @llvm.lifetime.end.p0i8(i64 4, i8* nonnull %1537) #8
  call void @llvm.lifetime.end.p0i8(i64 4, i8* nonnull %1536) #8
  call void @llvm.lifetime.end.p0i8(i64 4, i8* nonnull %1532) #8
  call void @llvm.lifetime.end.p0i8(i64 4, i8* nonnull %1531) #8
  br label %2493

2007:                                             ; preds = %78
  %2008 = getelementptr inbounds %struct.TfLiteTensor, %struct.TfLiteTensor* %57, i64 0, i32 3, i32 1
  %2009 = load i32, i32* %2008, align 4
  %2010 = sub nsw i32 0, %2009
  %2011 = getelementptr inbounds %struct.TfLiteTensor, %struct.TfLiteTensor* %67, i64 0, i32 3, i32 1
  %2012 = load i32, i32* %2011, align 4
  %2013 = sub nsw i32 0, %2012
  %2014 = bitcast i32* %35 to i8*
  call void @llvm.lifetime.start.p0i8(i64 4, i8* nonnull %2014) #8
  store i32 -1431655766, i32* %35, align 4
  %2015 = bitcast i32* %36 to i8*
  call void @llvm.lifetime.start.p0i8(i64 4, i8* nonnull %2015) #8
  store i32 -1431655766, i32* %36, align 4
  %2016 = getelementptr inbounds %struct.TfLiteTensor, %struct.TfLiteTensor* %57, i64 0, i32 3, i32 0
  %2017 = load float, float* %2016, align 8
  %2018 = fpext float %2017 to double
  call void @_ZN6tflite35QuantizeMultiplierSmallerThanOneExpEdPiS0_(double %2018, i32* nonnull %35, i32* nonnull %36) #8
  %2019 = bitcast i32* %37 to i8*
  call void @llvm.lifetime.start.p0i8(i64 4, i8* nonnull %2019) #8
  store i32 -1431655766, i32* %37, align 4
  %2020 = bitcast i32* %38 to i8*
  call void @llvm.lifetime.start.p0i8(i64 4, i8* nonnull %2020) #8
  store i32 -1431655766, i32* %38, align 4
  %2021 = getelementptr inbounds %struct.TfLiteTensor, %struct.TfLiteTensor* %67, i64 0, i32 3, i32 0
  %2022 = load float, float* %2021, align 8
  %2023 = fpext float %2022 to double
  call void @_ZN6tflite35QuantizeMultiplierSmallerThanOneExpEdPiS0_(double %2023, i32* nonnull %37, i32* nonnull %38) #8
  %2024 = bitcast %"struct.tflite::ComparisonParams"* %39 to i8*
  call void @llvm.lifetime.start.p0i8(i64 32, i8* nonnull %2024) #8
  %2025 = getelementptr inbounds %"struct.tflite::ComparisonParams", %"struct.tflite::ComparisonParams"* %39, i64 0, i32 7
  %2026 = bitcast i8* %2025 to i32*
  store i32 -1431655766, i32* %2026, align 4
  %2027 = getelementptr inbounds %"struct.tflite::ComparisonParams", %"struct.tflite::ComparisonParams"* %39, i64 0, i32 0
  store i32 8, i32* %2027, align 4
  %2028 = getelementptr inbounds %"struct.tflite::ComparisonParams", %"struct.tflite::ComparisonParams"* %39, i64 0, i32 1
  store i32 %2010, i32* %2028, align 4
  %2029 = load i32, i32* %35, align 4
  %2030 = getelementptr inbounds %"struct.tflite::ComparisonParams", %"struct.tflite::ComparisonParams"* %39, i64 0, i32 2
  store i32 %2029, i32* %2030, align 4
  %2031 = load i32, i32* %36, align 4
  %2032 = getelementptr inbounds %"struct.tflite::ComparisonParams", %"struct.tflite::ComparisonParams"* %39, i64 0, i32 3
  store i32 %2031, i32* %2032, align 4
  %2033 = getelementptr inbounds %"struct.tflite::ComparisonParams", %"struct.tflite::ComparisonParams"* %39, i64 0, i32 4
  store i32 %2013, i32* %2033, align 4
  %2034 = load i32, i32* %37, align 4
  %2035 = getelementptr inbounds %"struct.tflite::ComparisonParams", %"struct.tflite::ComparisonParams"* %39, i64 0, i32 5
  store i32 %2034, i32* %2035, align 4
  %2036 = load i32, i32* %38, align 4
  %2037 = getelementptr inbounds %"struct.tflite::ComparisonParams", %"struct.tflite::ComparisonParams"* %39, i64 0, i32 6
  store i32 %2036, i32* %2037, align 4
  br i1 %80, label %2170, label %2038

2038:                                             ; preds = %2007
  %2039 = bitcast %"class.tflite::RuntimeShape"* %40 to i8*
  call void @llvm.lifetime.start.p0i8(i64 32, i8* nonnull %2039) #8
  %2040 = icmp eq %struct.TfLiteTensor* %57, null
  br i1 %2040, label %2041, label %2043

2041:                                             ; preds = %2038
  %2042 = getelementptr inbounds %"class.tflite::RuntimeShape", %"class.tflite::RuntimeShape"* %40, i64 0, i32 0
  store i32 0, i32* %2042, align 8, !alias.scope !547
  br label %2071

2043:                                             ; preds = %2038
  %2044 = getelementptr inbounds %struct.TfLiteTensor, %struct.TfLiteTensor* %57, i64 0, i32 2
  %2045 = load %struct.TfLiteIntArray*, %struct.TfLiteIntArray** %2044, align 8, !noalias !547
  %2046 = getelementptr inbounds %struct.TfLiteIntArray, %struct.TfLiteIntArray* %2045, i64 0, i32 0
  %2047 = load i32, i32* %2046, align 4, !noalias !547
  %2048 = getelementptr inbounds %struct.TfLiteIntArray, %struct.TfLiteIntArray* %2045, i64 0, i32 1, i64 0
  %2049 = getelementptr inbounds %"class.tflite::RuntimeShape", %"class.tflite::RuntimeShape"* %40, i64 0, i32 0
  store i32 %2047, i32* %2049, align 8, !alias.scope !547
  %2050 = icmp sgt i32 %2047, 5
  br i1 %2050, label %2051, label %2058

2051:                                             ; preds = %2043
  %2052 = sext i32 %2047 to i64
  %2053 = shl nsw i64 %2052, 2
  %2054 = call i8* @_Znam(i64 %2053) #9, !noalias !547
  %2055 = getelementptr inbounds %"class.tflite::RuntimeShape", %"class.tflite::RuntimeShape"* %40, i64 0, i32 1, i32 0
  %2056 = bitcast i32** %2055 to i8**
  store i8* %2054, i8** %2056, align 8, !alias.scope !547
  %2057 = bitcast i8* %2054 to i32*
  br label %2063

2058:                                             ; preds = %2043
  %2059 = getelementptr inbounds %"class.tflite::RuntimeShape", %"class.tflite::RuntimeShape"* %40, i64 0, i32 1
  %2060 = bitcast %union.anon* %2059 to i32*
  %2061 = sext i32 %2047 to i64
  %2062 = shl nsw i64 %2061, 2
  br label %2063

2063:                                             ; preds = %2058, %2051
  %2064 = phi i64 [ %2053, %2051 ], [ %2062, %2058 ]
  %2065 = phi i32* [ %2057, %2051 ], [ %2060, %2058 ]
  %2066 = bitcast i32* %2065 to i8*
  %2067 = bitcast i32* %2048 to i8*
  call void @llvm.memcpy.p0i8.p0i8.i64(i8* align 4 %2066, i8* align 4 %2067, i64 %2064, i1 false) #8
  %2068 = getelementptr inbounds %struct.TfLiteTensor, %struct.TfLiteTensor* %57, i64 0, i32 1
  %2069 = bitcast %union.TfLitePtrUnion* %2068 to i8**
  %2070 = load i8*, i8** %2069, align 8
  br label %2071

2071:                                             ; preds = %2063, %2041
  %2072 = phi i8* [ %2070, %2063 ], [ null, %2041 ]
  %2073 = bitcast %"class.tflite::RuntimeShape"* %41 to i8*
  call void @llvm.lifetime.start.p0i8(i64 32, i8* nonnull %2073) #8
  %2074 = icmp eq %struct.TfLiteTensor* %67, null
  br i1 %2074, label %2075, label %2077

2075:                                             ; preds = %2071
  %2076 = getelementptr inbounds %"class.tflite::RuntimeShape", %"class.tflite::RuntimeShape"* %41, i64 0, i32 0
  store i32 0, i32* %2076, align 8, !alias.scope !550
  br label %2105

2077:                                             ; preds = %2071
  %2078 = getelementptr inbounds %struct.TfLiteTensor, %struct.TfLiteTensor* %67, i64 0, i32 2
  %2079 = load %struct.TfLiteIntArray*, %struct.TfLiteIntArray** %2078, align 8, !noalias !550
  %2080 = getelementptr inbounds %struct.TfLiteIntArray, %struct.TfLiteIntArray* %2079, i64 0, i32 0
  %2081 = load i32, i32* %2080, align 4, !noalias !550
  %2082 = getelementptr inbounds %struct.TfLiteIntArray, %struct.TfLiteIntArray* %2079, i64 0, i32 1, i64 0
  %2083 = getelementptr inbounds %"class.tflite::RuntimeShape", %"class.tflite::RuntimeShape"* %41, i64 0, i32 0
  store i32 %2081, i32* %2083, align 8, !alias.scope !550
  %2084 = icmp sgt i32 %2081, 5
  br i1 %2084, label %2085, label %2092

2085:                                             ; preds = %2077
  %2086 = sext i32 %2081 to i64
  %2087 = shl nsw i64 %2086, 2
  %2088 = call i8* @_Znam(i64 %2087) #9, !noalias !550
  %2089 = getelementptr inbounds %"class.tflite::RuntimeShape", %"class.tflite::RuntimeShape"* %41, i64 0, i32 1, i32 0
  %2090 = bitcast i32** %2089 to i8**
  store i8* %2088, i8** %2090, align 8, !alias.scope !550
  %2091 = bitcast i8* %2088 to i32*
  br label %2097

2092:                                             ; preds = %2077
  %2093 = getelementptr inbounds %"class.tflite::RuntimeShape", %"class.tflite::RuntimeShape"* %41, i64 0, i32 1
  %2094 = bitcast %union.anon* %2093 to i32*
  %2095 = sext i32 %2081 to i64
  %2096 = shl nsw i64 %2095, 2
  br label %2097

2097:                                             ; preds = %2092, %2085
  %2098 = phi i64 [ %2087, %2085 ], [ %2096, %2092 ]
  %2099 = phi i32* [ %2091, %2085 ], [ %2094, %2092 ]
  %2100 = bitcast i32* %2099 to i8*
  %2101 = bitcast i32* %2082 to i8*
  call void @llvm.memcpy.p0i8.p0i8.i64(i8* align 4 %2100, i8* align 4 %2101, i64 %2098, i1 false) #8
  %2102 = getelementptr inbounds %struct.TfLiteTensor, %struct.TfLiteTensor* %67, i64 0, i32 1
  %2103 = bitcast %union.TfLitePtrUnion* %2102 to i8**
  %2104 = load i8*, i8** %2103, align 8
  br label %2105

2105:                                             ; preds = %2097, %2075
  %2106 = phi i8* [ %2104, %2097 ], [ null, %2075 ]
  %2107 = bitcast %"class.tflite::RuntimeShape"* %42 to i8*
  call void @llvm.lifetime.start.p0i8(i64 32, i8* nonnull %2107) #8
  %2108 = icmp eq %struct.TfLiteTensor* %79, null
  br i1 %2108, label %2109, label %2111

2109:                                             ; preds = %2105
  %2110 = getelementptr inbounds %"class.tflite::RuntimeShape", %"class.tflite::RuntimeShape"* %42, i64 0, i32 0
  store i32 0, i32* %2110, align 8, !alias.scope !553
  br label %2139

2111:                                             ; preds = %2105
  %2112 = getelementptr inbounds %struct.TfLiteTensor, %struct.TfLiteTensor* %79, i64 0, i32 2
  %2113 = load %struct.TfLiteIntArray*, %struct.TfLiteIntArray** %2112, align 8, !noalias !553
  %2114 = getelementptr inbounds %struct.TfLiteIntArray, %struct.TfLiteIntArray* %2113, i64 0, i32 0
  %2115 = load i32, i32* %2114, align 4, !noalias !553
  %2116 = getelementptr inbounds %struct.TfLiteIntArray, %struct.TfLiteIntArray* %2113, i64 0, i32 1, i64 0
  %2117 = getelementptr inbounds %"class.tflite::RuntimeShape", %"class.tflite::RuntimeShape"* %42, i64 0, i32 0
  store i32 %2115, i32* %2117, align 8, !alias.scope !553
  %2118 = icmp sgt i32 %2115, 5
  br i1 %2118, label %2119, label %2126

2119:                                             ; preds = %2111
  %2120 = sext i32 %2115 to i64
  %2121 = shl nsw i64 %2120, 2
  %2122 = call i8* @_Znam(i64 %2121) #9, !noalias !553
  %2123 = getelementptr inbounds %"class.tflite::RuntimeShape", %"class.tflite::RuntimeShape"* %42, i64 0, i32 1, i32 0
  %2124 = bitcast i32** %2123 to i8**
  store i8* %2122, i8** %2124, align 8, !alias.scope !553
  %2125 = bitcast i8* %2122 to i32*
  br label %2131

2126:                                             ; preds = %2111
  %2127 = getelementptr inbounds %"class.tflite::RuntimeShape", %"class.tflite::RuntimeShape"* %42, i64 0, i32 1
  %2128 = bitcast %union.anon* %2127 to i32*
  %2129 = sext i32 %2115 to i64
  %2130 = shl nsw i64 %2129, 2
  br label %2131

2131:                                             ; preds = %2126, %2119
  %2132 = phi i64 [ %2121, %2119 ], [ %2130, %2126 ]
  %2133 = phi i32* [ %2125, %2119 ], [ %2128, %2126 ]
  %2134 = bitcast i32* %2133 to i8*
  %2135 = bitcast i32* %2116 to i8*
  call void @llvm.memcpy.p0i8.p0i8.i64(i8* align 4 %2134, i8* align 4 %2135, i64 %2132, i1 false) #8
  %2136 = getelementptr inbounds %struct.TfLiteTensor, %struct.TfLiteTensor* %79, i64 0, i32 1
  %2137 = bitcast %union.TfLitePtrUnion* %2136 to i8**
  %2138 = load i8*, i8** %2137, align 8
  br label %2139

2139:                                             ; preds = %2131, %2109
  %2140 = phi i8* [ %2138, %2131 ], [ null, %2109 ]
  call void @_ZN6tflite13reference_ops36BroadcastComparison4DSlowWithScalingIaXadL_ZNS0_14GreaterEqualFnIiEEbT_S3_EEEEvRKNS_16ComparisonParamsERKNS_12RuntimeShapeEPKS3_S9_SB_S9_Pb(%"struct.tflite::ComparisonParams"* nonnull dereferenceable(32) %39, %"class.tflite::RuntimeShape"* nonnull dereferenceable(32) %40, i8* %2072, %"class.tflite::RuntimeShape"* nonnull dereferenceable(32) %41, i8* %2106, %"class.tflite::RuntimeShape"* nonnull dereferenceable(32) %42, i8* %2140) #8
  %2141 = getelementptr inbounds %"class.tflite::RuntimeShape", %"class.tflite::RuntimeShape"* %42, i64 0, i32 0
  %2142 = load i32, i32* %2141, align 8
  %2143 = icmp sgt i32 %2142, 5
  br i1 %2143, label %2144, label %2150

2144:                                             ; preds = %2139
  %2145 = getelementptr inbounds %"class.tflite::RuntimeShape", %"class.tflite::RuntimeShape"* %42, i64 0, i32 1, i32 0
  %2146 = load i32*, i32** %2145, align 8
  %2147 = icmp eq i32* %2146, null
  br i1 %2147, label %2150, label %2148

2148:                                             ; preds = %2144
  %2149 = bitcast i32* %2146 to i8*
  call void @_ZdaPv(i8* %2149) #9
  br label %2150

2150:                                             ; preds = %2148, %2144, %2139
  call void @llvm.lifetime.end.p0i8(i64 32, i8* nonnull %2107) #8
  %2151 = getelementptr inbounds %"class.tflite::RuntimeShape", %"class.tflite::RuntimeShape"* %41, i64 0, i32 0
  %2152 = load i32, i32* %2151, align 8
  %2153 = icmp sgt i32 %2152, 5
  br i1 %2153, label %2154, label %2160

2154:                                             ; preds = %2150
  %2155 = getelementptr inbounds %"class.tflite::RuntimeShape", %"class.tflite::RuntimeShape"* %41, i64 0, i32 1, i32 0
  %2156 = load i32*, i32** %2155, align 8
  %2157 = icmp eq i32* %2156, null
  br i1 %2157, label %2160, label %2158

2158:                                             ; preds = %2154
  %2159 = bitcast i32* %2156 to i8*
  call void @_ZdaPv(i8* %2159) #9
  br label %2160

2160:                                             ; preds = %2158, %2154, %2150
  call void @llvm.lifetime.end.p0i8(i64 32, i8* nonnull %2073) #8
  %2161 = getelementptr inbounds %"class.tflite::RuntimeShape", %"class.tflite::RuntimeShape"* %40, i64 0, i32 0
  %2162 = load i32, i32* %2161, align 8
  %2163 = icmp sgt i32 %2162, 5
  br i1 %2163, label %2164, label %2488

2164:                                             ; preds = %2160
  %2165 = getelementptr inbounds %"class.tflite::RuntimeShape", %"class.tflite::RuntimeShape"* %40, i64 0, i32 1, i32 0
  %2166 = load i32*, i32** %2165, align 8
  %2167 = icmp eq i32* %2166, null
  br i1 %2167, label %2488, label %2168

2168:                                             ; preds = %2164
  %2169 = bitcast i32* %2166 to i8*
  call void @_ZdaPv(i8* %2169) #9
  br label %2488

2170:                                             ; preds = %2007
  %2171 = bitcast %"class.tflite::RuntimeShape"* %43 to i8*
  call void @llvm.lifetime.start.p0i8(i64 32, i8* nonnull %2171) #8
  %2172 = icmp eq %struct.TfLiteTensor* %57, null
  br i1 %2172, label %2173, label %2175

2173:                                             ; preds = %2170
  %2174 = getelementptr inbounds %"class.tflite::RuntimeShape", %"class.tflite::RuntimeShape"* %43, i64 0, i32 0
  store i32 0, i32* %2174, align 8, !alias.scope !556
  br label %2203

2175:                                             ; preds = %2170
  %2176 = getelementptr inbounds %struct.TfLiteTensor, %struct.TfLiteTensor* %57, i64 0, i32 2
  %2177 = load %struct.TfLiteIntArray*, %struct.TfLiteIntArray** %2176, align 8, !noalias !556
  %2178 = getelementptr inbounds %struct.TfLiteIntArray, %struct.TfLiteIntArray* %2177, i64 0, i32 0
  %2179 = load i32, i32* %2178, align 4, !noalias !556
  %2180 = getelementptr inbounds %struct.TfLiteIntArray, %struct.TfLiteIntArray* %2177, i64 0, i32 1, i64 0
  %2181 = getelementptr inbounds %"class.tflite::RuntimeShape", %"class.tflite::RuntimeShape"* %43, i64 0, i32 0
  store i32 %2179, i32* %2181, align 8, !alias.scope !556
  %2182 = icmp sgt i32 %2179, 5
  br i1 %2182, label %2183, label %2190

2183:                                             ; preds = %2175
  %2184 = sext i32 %2179 to i64
  %2185 = shl nsw i64 %2184, 2
  %2186 = call i8* @_Znam(i64 %2185) #9, !noalias !556
  %2187 = getelementptr inbounds %"class.tflite::RuntimeShape", %"class.tflite::RuntimeShape"* %43, i64 0, i32 1, i32 0
  %2188 = bitcast i32** %2187 to i8**
  store i8* %2186, i8** %2188, align 8, !alias.scope !556
  %2189 = bitcast i8* %2186 to i32*
  br label %2195

2190:                                             ; preds = %2175
  %2191 = getelementptr inbounds %"class.tflite::RuntimeShape", %"class.tflite::RuntimeShape"* %43, i64 0, i32 1
  %2192 = bitcast %union.anon* %2191 to i32*
  %2193 = sext i32 %2179 to i64
  %2194 = shl nsw i64 %2193, 2
  br label %2195

2195:                                             ; preds = %2190, %2183
  %2196 = phi i64 [ %2185, %2183 ], [ %2194, %2190 ]
  %2197 = phi i32* [ %2189, %2183 ], [ %2192, %2190 ]
  %2198 = bitcast i32* %2197 to i8*
  %2199 = bitcast i32* %2180 to i8*
  call void @llvm.memcpy.p0i8.p0i8.i64(i8* align 4 %2198, i8* align 4 %2199, i64 %2196, i1 false) #8
  %2200 = getelementptr inbounds %struct.TfLiteTensor, %struct.TfLiteTensor* %57, i64 0, i32 1
  %2201 = bitcast %union.TfLitePtrUnion* %2200 to i8**
  %2202 = load i8*, i8** %2201, align 8
  br label %2203

2203:                                             ; preds = %2195, %2173
  %2204 = phi i32 [ %2179, %2195 ], [ 0, %2173 ]
  %2205 = phi i8* [ %2202, %2195 ], [ null, %2173 ]
  %2206 = bitcast %"class.tflite::RuntimeShape"* %44 to i8*
  call void @llvm.lifetime.start.p0i8(i64 32, i8* nonnull %2206) #8
  %2207 = icmp eq %struct.TfLiteTensor* %67, null
  br i1 %2207, label %2208, label %2210

2208:                                             ; preds = %2203
  %2209 = getelementptr inbounds %"class.tflite::RuntimeShape", %"class.tflite::RuntimeShape"* %44, i64 0, i32 0
  store i32 0, i32* %2209, align 8, !alias.scope !559
  br label %2238

2210:                                             ; preds = %2203
  %2211 = getelementptr inbounds %struct.TfLiteTensor, %struct.TfLiteTensor* %67, i64 0, i32 2
  %2212 = load %struct.TfLiteIntArray*, %struct.TfLiteIntArray** %2211, align 8, !noalias !559
  %2213 = getelementptr inbounds %struct.TfLiteIntArray, %struct.TfLiteIntArray* %2212, i64 0, i32 0
  %2214 = load i32, i32* %2213, align 4, !noalias !559
  %2215 = getelementptr inbounds %struct.TfLiteIntArray, %struct.TfLiteIntArray* %2212, i64 0, i32 1, i64 0
  %2216 = getelementptr inbounds %"class.tflite::RuntimeShape", %"class.tflite::RuntimeShape"* %44, i64 0, i32 0
  store i32 %2214, i32* %2216, align 8, !alias.scope !559
  %2217 = icmp sgt i32 %2214, 5
  br i1 %2217, label %2218, label %2225

2218:                                             ; preds = %2210
  %2219 = sext i32 %2214 to i64
  %2220 = shl nsw i64 %2219, 2
  %2221 = call i8* @_Znam(i64 %2220) #9, !noalias !559
  %2222 = getelementptr inbounds %"class.tflite::RuntimeShape", %"class.tflite::RuntimeShape"* %44, i64 0, i32 1, i32 0
  %2223 = bitcast i32** %2222 to i8**
  store i8* %2221, i8** %2223, align 8, !alias.scope !559
  %2224 = bitcast i8* %2221 to i32*
  br label %2230

2225:                                             ; preds = %2210
  %2226 = getelementptr inbounds %"class.tflite::RuntimeShape", %"class.tflite::RuntimeShape"* %44, i64 0, i32 1
  %2227 = bitcast %union.anon* %2226 to i32*
  %2228 = sext i32 %2214 to i64
  %2229 = shl nsw i64 %2228, 2
  br label %2230

2230:                                             ; preds = %2225, %2218
  %2231 = phi i64 [ %2220, %2218 ], [ %2229, %2225 ]
  %2232 = phi i32* [ %2224, %2218 ], [ %2227, %2225 ]
  %2233 = bitcast i32* %2232 to i8*
  %2234 = bitcast i32* %2215 to i8*
  call void @llvm.memcpy.p0i8.p0i8.i64(i8* align 4 %2233, i8* align 4 %2234, i64 %2231, i1 false) #8
  %2235 = getelementptr inbounds %struct.TfLiteTensor, %struct.TfLiteTensor* %67, i64 0, i32 1
  %2236 = bitcast %union.TfLitePtrUnion* %2235 to i8**
  %2237 = load i8*, i8** %2236, align 8
  br label %2238

2238:                                             ; preds = %2230, %2208
  %2239 = phi i32 [ %2214, %2230 ], [ 0, %2208 ]
  %2240 = phi i8* [ %2237, %2230 ], [ null, %2208 ]
  %2241 = bitcast %"class.tflite::RuntimeShape"* %45 to i8*
  call void @llvm.lifetime.start.p0i8(i64 32, i8* nonnull %2241) #8
  %2242 = icmp eq %struct.TfLiteTensor* %79, null
  br i1 %2242, label %2243, label %2245

2243:                                             ; preds = %2238
  %2244 = getelementptr inbounds %"class.tflite::RuntimeShape", %"class.tflite::RuntimeShape"* %45, i64 0, i32 0
  store i32 0, i32* %2244, align 8, !alias.scope !562
  br label %2273

2245:                                             ; preds = %2238
  %2246 = getelementptr inbounds %struct.TfLiteTensor, %struct.TfLiteTensor* %79, i64 0, i32 2
  %2247 = load %struct.TfLiteIntArray*, %struct.TfLiteIntArray** %2246, align 8, !noalias !562
  %2248 = getelementptr inbounds %struct.TfLiteIntArray, %struct.TfLiteIntArray* %2247, i64 0, i32 0
  %2249 = load i32, i32* %2248, align 4, !noalias !562
  %2250 = getelementptr inbounds %struct.TfLiteIntArray, %struct.TfLiteIntArray* %2247, i64 0, i32 1, i64 0
  %2251 = getelementptr inbounds %"class.tflite::RuntimeShape", %"class.tflite::RuntimeShape"* %45, i64 0, i32 0
  store i32 %2249, i32* %2251, align 8, !alias.scope !562
  %2252 = icmp sgt i32 %2249, 5
  br i1 %2252, label %2253, label %2260

2253:                                             ; preds = %2245
  %2254 = sext i32 %2249 to i64
  %2255 = shl nsw i64 %2254, 2
  %2256 = call i8* @_Znam(i64 %2255) #9, !noalias !562
  %2257 = getelementptr inbounds %"class.tflite::RuntimeShape", %"class.tflite::RuntimeShape"* %45, i64 0, i32 1, i32 0
  %2258 = bitcast i32** %2257 to i8**
  store i8* %2256, i8** %2258, align 8, !alias.scope !562
  %2259 = bitcast i8* %2256 to i32*
  br label %2265

2260:                                             ; preds = %2245
  %2261 = getelementptr inbounds %"class.tflite::RuntimeShape", %"class.tflite::RuntimeShape"* %45, i64 0, i32 1
  %2262 = bitcast %union.anon* %2261 to i32*
  %2263 = sext i32 %2249 to i64
  %2264 = shl nsw i64 %2263, 2
  br label %2265

2265:                                             ; preds = %2260, %2253
  %2266 = phi i64 [ %2255, %2253 ], [ %2264, %2260 ]
  %2267 = phi i32* [ %2259, %2253 ], [ %2262, %2260 ]
  %2268 = bitcast i32* %2267 to i8*
  %2269 = bitcast i32* %2250 to i8*
  call void @llvm.memcpy.p0i8.p0i8.i64(i8* align 4 %2268, i8* align 4 %2269, i64 %2266, i1 false) #8
  %2270 = getelementptr inbounds %struct.TfLiteTensor, %struct.TfLiteTensor* %79, i64 0, i32 1
  %2271 = bitcast %union.TfLitePtrUnion* %2270 to i8**
  %2272 = load i8*, i8** %2271, align 8
  br label %2273

2273:                                             ; preds = %2265, %2243
  %2274 = phi i32 [ %2249, %2265 ], [ 0, %2243 ]
  %2275 = phi i8* [ %2272, %2265 ], [ null, %2243 ]
  %2276 = getelementptr inbounds %"class.tflite::RuntimeShape", %"class.tflite::RuntimeShape"* %43, i64 0, i32 1
  %2277 = icmp sgt i32 %2204, 5
  br i1 %2277, label %2278, label %2281

2278:                                             ; preds = %2273
  %2279 = getelementptr inbounds %union.anon, %union.anon* %2276, i64 0, i32 0
  %2280 = load i32*, i32** %2279, align 8
  br label %2284

2281:                                             ; preds = %2273
  %2282 = bitcast %union.anon* %2276 to i32*
  %2283 = icmp sgt i32 %2204, 0
  br i1 %2283, label %2284, label %2388

2284:                                             ; preds = %2281, %2278
  %2285 = phi i32* [ %2280, %2278 ], [ %2282, %2281 ]
  %2286 = zext i32 %2204 to i64
  %2287 = icmp ult i32 %2204, 8
  br i1 %2287, label %2373, label %2288

2288:                                             ; preds = %2284
  %2289 = and i64 %2286, 4294967288
  %2290 = add nsw i64 %2289, -8
  %2291 = lshr exact i64 %2290, 3
  %2292 = add nuw nsw i64 %2291, 1
  %2293 = and i64 %2292, 3
  %2294 = icmp ult i64 %2290, 24
  br i1 %2294, label %2340, label %2295

2295:                                             ; preds = %2288
  %2296 = sub nsw i64 %2292, %2293
  br label %2297

2297:                                             ; preds = %2297, %2295
  %2298 = phi i64 [ 0, %2295 ], [ %2337, %2297 ]
  %2299 = phi <4 x i32> [ <i32 1, i32 1, i32 1, i32 1>, %2295 ], [ %2335, %2297 ]
  %2300 = phi <4 x i32> [ <i32 1, i32 1, i32 1, i32 1>, %2295 ], [ %2336, %2297 ]
  %2301 = phi i64 [ %2296, %2295 ], [ %2338, %2297 ]
  %2302 = getelementptr inbounds i32, i32* %2285, i64 %2298
  %2303 = bitcast i32* %2302 to <4 x i32>*
  %2304 = load <4 x i32>, <4 x i32>* %2303, align 4
  %2305 = getelementptr inbounds i32, i32* %2302, i64 4
  %2306 = bitcast i32* %2305 to <4 x i32>*
  %2307 = load <4 x i32>, <4 x i32>* %2306, align 4
  %2308 = mul nsw <4 x i32> %2304, %2299
  %2309 = mul nsw <4 x i32> %2307, %2300
  %2310 = or i64 %2298, 8
  %2311 = getelementptr inbounds i32, i32* %2285, i64 %2310
  %2312 = bitcast i32* %2311 to <4 x i32>*
  %2313 = load <4 x i32>, <4 x i32>* %2312, align 4
  %2314 = getelementptr inbounds i32, i32* %2311, i64 4
  %2315 = bitcast i32* %2314 to <4 x i32>*
  %2316 = load <4 x i32>, <4 x i32>* %2315, align 4
  %2317 = mul nsw <4 x i32> %2313, %2308
  %2318 = mul nsw <4 x i32> %2316, %2309
  %2319 = or i64 %2298, 16
  %2320 = getelementptr inbounds i32, i32* %2285, i64 %2319
  %2321 = bitcast i32* %2320 to <4 x i32>*
  %2322 = load <4 x i32>, <4 x i32>* %2321, align 4
  %2323 = getelementptr inbounds i32, i32* %2320, i64 4
  %2324 = bitcast i32* %2323 to <4 x i32>*
  %2325 = load <4 x i32>, <4 x i32>* %2324, align 4
  %2326 = mul nsw <4 x i32> %2322, %2317
  %2327 = mul nsw <4 x i32> %2325, %2318
  %2328 = or i64 %2298, 24
  %2329 = getelementptr inbounds i32, i32* %2285, i64 %2328
  %2330 = bitcast i32* %2329 to <4 x i32>*
  %2331 = load <4 x i32>, <4 x i32>* %2330, align 4
  %2332 = getelementptr inbounds i32, i32* %2329, i64 4
  %2333 = bitcast i32* %2332 to <4 x i32>*
  %2334 = load <4 x i32>, <4 x i32>* %2333, align 4
  %2335 = mul nsw <4 x i32> %2331, %2326
  %2336 = mul nsw <4 x i32> %2334, %2327
  %2337 = add i64 %2298, 32
  %2338 = add i64 %2301, -4
  %2339 = icmp eq i64 %2338, 0
  br i1 %2339, label %2340, label %2297, !llvm.loop !565

2340:                                             ; preds = %2297, %2288
  %2341 = phi <4 x i32> [ undef, %2288 ], [ %2335, %2297 ]
  %2342 = phi <4 x i32> [ undef, %2288 ], [ %2336, %2297 ]
  %2343 = phi i64 [ 0, %2288 ], [ %2337, %2297 ]
  %2344 = phi <4 x i32> [ <i32 1, i32 1, i32 1, i32 1>, %2288 ], [ %2335, %2297 ]
  %2345 = phi <4 x i32> [ <i32 1, i32 1, i32 1, i32 1>, %2288 ], [ %2336, %2297 ]
  %2346 = icmp eq i64 %2293, 0
  br i1 %2346, label %2363, label %2347

2347:                                             ; preds = %2340, %2347
  %2348 = phi i64 [ %2360, %2347 ], [ %2343, %2340 ]
  %2349 = phi <4 x i32> [ %2358, %2347 ], [ %2344, %2340 ]
  %2350 = phi <4 x i32> [ %2359, %2347 ], [ %2345, %2340 ]
  %2351 = phi i64 [ %2361, %2347 ], [ %2293, %2340 ]
  %2352 = getelementptr inbounds i32, i32* %2285, i64 %2348
  %2353 = bitcast i32* %2352 to <4 x i32>*
  %2354 = load <4 x i32>, <4 x i32>* %2353, align 4
  %2355 = getelementptr inbounds i32, i32* %2352, i64 4
  %2356 = bitcast i32* %2355 to <4 x i32>*
  %2357 = load <4 x i32>, <4 x i32>* %2356, align 4
  %2358 = mul nsw <4 x i32> %2354, %2349
  %2359 = mul nsw <4 x i32> %2357, %2350
  %2360 = add i64 %2348, 8
  %2361 = add i64 %2351, -1
  %2362 = icmp eq i64 %2361, 0
  br i1 %2362, label %2363, label %2347, !llvm.loop !566

2363:                                             ; preds = %2347, %2340
  %2364 = phi <4 x i32> [ %2341, %2340 ], [ %2358, %2347 ]
  %2365 = phi <4 x i32> [ %2342, %2340 ], [ %2359, %2347 ]
  %2366 = mul <4 x i32> %2365, %2364
  %2367 = shufflevector <4 x i32> %2366, <4 x i32> undef, <4 x i32> <i32 2, i32 3, i32 undef, i32 undef>
  %2368 = mul <4 x i32> %2366, %2367
  %2369 = shufflevector <4 x i32> %2368, <4 x i32> undef, <4 x i32> <i32 1, i32 undef, i32 undef, i32 undef>
  %2370 = mul <4 x i32> %2368, %2369
  %2371 = extractelement <4 x i32> %2370, i32 0
  %2372 = icmp eq i64 %2289, %2286
  br i1 %2372, label %2384, label %2373

2373:                                             ; preds = %2363, %2284
  %2374 = phi i64 [ 0, %2284 ], [ %2289, %2363 ]
  %2375 = phi i32 [ 1, %2284 ], [ %2371, %2363 ]
  br label %2376

2376:                                             ; preds = %2373, %2376
  %2377 = phi i64 [ %2382, %2376 ], [ %2374, %2373 ]
  %2378 = phi i32 [ %2381, %2376 ], [ %2375, %2373 ]
  %2379 = getelementptr inbounds i32, i32* %2285, i64 %2377
  %2380 = load i32, i32* %2379, align 4
  %2381 = mul nsw i32 %2380, %2378
  %2382 = add nuw nsw i64 %2377, 1
  %2383 = icmp eq i64 %2382, %2286
  br i1 %2383, label %2384, label %2376, !llvm.loop !567

2384:                                             ; preds = %2376, %2363
  %2385 = phi i32 [ %2371, %2363 ], [ %2381, %2376 ]
  %2386 = sext i32 %2385 to i64
  %2387 = icmp sgt i32 %2385, 0
  br i1 %2387, label %2388, label %2465

2388:                                             ; preds = %2384, %2281
  %2389 = phi i64 [ %2386, %2384 ], [ 1, %2281 ]
  %2390 = sext i32 %2029 to i64
  %2391 = sub nsw i32 0, %2031
  %2392 = zext i32 %2391 to i64
  %2393 = shl nsw i64 -1, %2392
  %2394 = trunc i64 %2393 to i32
  %2395 = xor i32 %2394, -1
  %2396 = ashr i32 %2395, 1
  %2397 = sext i32 %2034 to i64
  %2398 = sub nsw i32 0, %2036
  %2399 = zext i32 %2398 to i64
  %2400 = shl nsw i64 -1, %2399
  %2401 = trunc i64 %2400 to i32
  %2402 = xor i32 %2401, -1
  %2403 = ashr i32 %2402, 1
  %2404 = icmp eq i32 %2029, -2147483648
  %2405 = icmp eq i32 %2034, -2147483648
  br label %2406

2406:                                             ; preds = %2451, %2388
  %2407 = phi i64 [ 0, %2388 ], [ %2463, %2451 ]
  %2408 = getelementptr inbounds i8, i8* %2205, i64 %2407
  %2409 = load i8, i8* %2408, align 1
  %2410 = sext i8 %2409 to i32
  %2411 = sub i32 %2410, %2009
  %2412 = getelementptr inbounds i8, i8* %2240, i64 %2407
  %2413 = load i8, i8* %2412, align 1
  %2414 = sext i8 %2413 to i32
  %2415 = sub i32 %2414, %2012
  %2416 = shl i32 %2411, 8
  %2417 = shl i32 %2415, 8
  %2418 = icmp eq i32 %2416, %2029
  br i1 %2418, label %2421, label %2419

2419:                                             ; preds = %2406
  %2420 = sext i32 %2416 to i64
  br label %2422

2421:                                             ; preds = %2406
  br i1 %2404, label %2430, label %2422

2422:                                             ; preds = %2421, %2419
  %2423 = phi i64 [ %2420, %2419 ], [ %2390, %2421 ]
  %2424 = mul nsw i64 %2423, %2390
  %2425 = icmp sgt i64 %2424, -1
  %2426 = select i1 %2425, i64 1073741824, i64 -1073741823
  %2427 = add nsw i64 %2426, %2424
  %2428 = sdiv i64 %2427, 2147483648
  %2429 = trunc i64 %2428 to i32
  br label %2430

2430:                                             ; preds = %2422, %2421
  %2431 = phi i32 [ %2429, %2422 ], [ 2147483647, %2421 ]
  %2432 = and i32 %2431, %2395
  %2433 = lshr i32 %2431, 31
  %2434 = add nsw i32 %2433, %2396
  %2435 = ashr i32 %2431, %2391
  %2436 = icmp sgt i32 %2432, %2434
  %2437 = zext i1 %2436 to i32
  %2438 = add nsw i32 %2435, %2437
  %2439 = icmp eq i32 %2417, %2034
  br i1 %2439, label %2442, label %2440

2440:                                             ; preds = %2430
  %2441 = sext i32 %2417 to i64
  br label %2443

2442:                                             ; preds = %2430
  br i1 %2405, label %2451, label %2443

2443:                                             ; preds = %2442, %2440
  %2444 = phi i64 [ %2441, %2440 ], [ %2397, %2442 ]
  %2445 = mul nsw i64 %2444, %2397
  %2446 = icmp sgt i64 %2445, -1
  %2447 = select i1 %2446, i64 1073741824, i64 -1073741823
  %2448 = add nsw i64 %2447, %2445
  %2449 = sdiv i64 %2448, 2147483648
  %2450 = trunc i64 %2449 to i32
  br label %2451

2451:                                             ; preds = %2443, %2442
  %2452 = phi i32 [ %2450, %2443 ], [ 2147483647, %2442 ]
  %2453 = and i32 %2452, %2402
  %2454 = lshr i32 %2452, 31
  %2455 = add nsw i32 %2454, %2403
  %2456 = ashr i32 %2452, %2398
  %2457 = icmp sgt i32 %2453, %2455
  %2458 = zext i1 %2457 to i32
  %2459 = add nsw i32 %2456, %2458
  %2460 = icmp sge i32 %2438, %2459
  %2461 = getelementptr inbounds i8, i8* %2275, i64 %2407
  %2462 = zext i1 %2460 to i8
  store i8 %2462, i8* %2461, align 1
  %2463 = add nuw nsw i64 %2407, 1
  %2464 = icmp eq i64 %2463, %2389
  br i1 %2464, label %2465, label %2406

2465:                                             ; preds = %2451, %2384
  %2466 = icmp sgt i32 %2274, 5
  br i1 %2466, label %2467, label %2473

2467:                                             ; preds = %2465
  %2468 = getelementptr inbounds %"class.tflite::RuntimeShape", %"class.tflite::RuntimeShape"* %45, i64 0, i32 1, i32 0
  %2469 = load i32*, i32** %2468, align 8
  %2470 = icmp eq i32* %2469, null
  br i1 %2470, label %2473, label %2471

2471:                                             ; preds = %2467
  %2472 = bitcast i32* %2469 to i8*
  call void @_ZdaPv(i8* %2472) #9
  br label %2473

2473:                                             ; preds = %2471, %2467, %2465
  call void @llvm.lifetime.end.p0i8(i64 32, i8* nonnull %2241) #8
  %2474 = icmp sgt i32 %2239, 5
  br i1 %2474, label %2475, label %2481

2475:                                             ; preds = %2473
  %2476 = getelementptr inbounds %"class.tflite::RuntimeShape", %"class.tflite::RuntimeShape"* %44, i64 0, i32 1, i32 0
  %2477 = load i32*, i32** %2476, align 8
  %2478 = icmp eq i32* %2477, null
  br i1 %2478, label %2481, label %2479

2479:                                             ; preds = %2475
  %2480 = bitcast i32* %2477 to i8*
  call void @_ZdaPv(i8* %2480) #9
  br label %2481

2481:                                             ; preds = %2479, %2475, %2473
  call void @llvm.lifetime.end.p0i8(i64 32, i8* nonnull %2206) #8
  br i1 %2277, label %2482, label %2488

2482:                                             ; preds = %2481
  %2483 = getelementptr inbounds %"class.tflite::RuntimeShape", %"class.tflite::RuntimeShape"* %43, i64 0, i32 1, i32 0
  %2484 = load i32*, i32** %2483, align 8
  %2485 = icmp eq i32* %2484, null
  br i1 %2485, label %2488, label %2486

2486:                                             ; preds = %2482
  %2487 = bitcast i32* %2484 to i8*
  call void @_ZdaPv(i8* %2487) #9
  br label %2488

2488:                                             ; preds = %2481, %2482, %2486, %2160, %2164, %2168
  %2489 = phi i8* [ %2039, %2168 ], [ %2039, %2164 ], [ %2039, %2160 ], [ %2171, %2486 ], [ %2171, %2482 ], [ %2171, %2481 ]
  call void @llvm.lifetime.end.p0i8(i64 32, i8* nonnull %2489) #8
  call void @llvm.lifetime.end.p0i8(i64 32, i8* nonnull %2024) #8
  call void @llvm.lifetime.end.p0i8(i64 4, i8* nonnull %2020) #8
  call void @llvm.lifetime.end.p0i8(i64 4, i8* nonnull %2019) #8
  call void @llvm.lifetime.end.p0i8(i64 4, i8* nonnull %2015) #8
  call void @llvm.lifetime.end.p0i8(i64 4, i8* nonnull %2014) #8
  br label %2493

2490:                                             ; preds = %78
  %2491 = getelementptr inbounds %struct.TfLiteContext, %struct.TfLiteContext* %0, i64 0, i32 5
  %2492 = load void (%struct.TfLiteContext*, i8*, ...)*, void (%struct.TfLiteContext*, i8*, ...)** %2491, align 8
  tail call void (%struct.TfLiteContext*, i8*, ...) %2492(%struct.TfLiteContext* %0, i8* getelementptr inbounds ([51 x i8], [51 x i8]* @.str.15, i64 0, i64 0), i32 %82) #8
  br label %2493

2493:                                             ; preds = %596, %1107, %1522, %2005, %2488, %2490
  %2494 = phi i32 [ 1, %2490 ], [ 0, %2488 ], [ 0, %2005 ], [ 0, %1522 ], [ 0, %1107 ], [ 0, %596 ]
  ret i32 %2494
}

; Function Attrs: norecurse nounwind readnone ssp uwtable
define hidden nonnull %struct.TfLiteRegistration* @_ZN6tflite3ops7builtin13Register_LESSEv() local_unnamed_addr #0 {
  ret %struct.TfLiteRegistration* @_ZZN6tflite3ops7builtin13Register_LESSEvE1r
}

; Function Attrs: nounwind ssp uwtable
define internal i32 @_ZN6tflite3ops7builtin11comparisons12_GLOBAL__N_18LessEvalEP13TfLiteContextP10TfLiteNode(%struct.TfLiteContext*, %struct.TfLiteNode* nocapture readonly) #1 {
  %3 = alloca i32, align 4
  %4 = alloca i32, align 4
  %5 = alloca i32, align 4
  %6 = alloca i32, align 4
  %7 = alloca %"struct.tflite::ComparisonParams", align 4
  %8 = alloca %"class.tflite::RuntimeShape", align 8
  %9 = alloca %"class.tflite::RuntimeShape", align 8
  %10 = alloca %"class.tflite::RuntimeShape", align 8
  %11 = alloca %"class.tflite::RuntimeShape", align 8
  %12 = alloca %"class.tflite::RuntimeShape", align 8
  %13 = alloca %"class.tflite::RuntimeShape", align 8
  %14 = alloca %"struct.tflite::ComparisonParams", align 4
  %15 = alloca %"class.tflite::RuntimeShape", align 8
  %16 = alloca %"class.tflite::RuntimeShape", align 8
  %17 = alloca %"class.tflite::RuntimeShape", align 8
  %18 = alloca %"class.tflite::RuntimeShape", align 8
  %19 = alloca %"class.tflite::RuntimeShape", align 8
  %20 = alloca %"class.tflite::RuntimeShape", align 8
  %21 = alloca %"struct.tflite::ComparisonParams", align 4
  %22 = alloca %"class.tflite::RuntimeShape", align 8
  %23 = alloca %"class.tflite::RuntimeShape", align 8
  %24 = alloca %"class.tflite::RuntimeShape", align 8
  %25 = alloca %"class.tflite::RuntimeShape", align 8
  %26 = alloca %"class.tflite::RuntimeShape", align 8
  %27 = alloca %"class.tflite::RuntimeShape", align 8
  %28 = alloca %"struct.tflite::ComparisonParams", align 4
  %29 = alloca %"class.tflite::RuntimeShape", align 8
  %30 = alloca %"class.tflite::RuntimeShape", align 8
  %31 = alloca %"class.tflite::RuntimeShape", align 8
  %32 = alloca %"class.tflite::RuntimeShape", align 8
  %33 = alloca %"class.tflite::RuntimeShape", align 8
  %34 = alloca %"class.tflite::RuntimeShape", align 8
  %35 = alloca i32, align 4
  %36 = alloca i32, align 4
  %37 = alloca i32, align 4
  %38 = alloca i32, align 4
  %39 = alloca %"struct.tflite::ComparisonParams", align 4
  %40 = alloca %"class.tflite::RuntimeShape", align 8
  %41 = alloca %"class.tflite::RuntimeShape", align 8
  %42 = alloca %"class.tflite::RuntimeShape", align 8
  %43 = alloca %"class.tflite::RuntimeShape", align 8
  %44 = alloca %"class.tflite::RuntimeShape", align 8
  %45 = alloca %"class.tflite::RuntimeShape", align 8
  %46 = getelementptr inbounds %struct.TfLiteNode, %struct.TfLiteNode* %1, i64 0, i32 0
  %47 = load %struct.TfLiteIntArray*, %struct.TfLiteIntArray** %46, align 8
  %48 = getelementptr inbounds %struct.TfLiteIntArray, %struct.TfLiteIntArray* %47, i64 0, i32 1, i64 0
  %49 = load i32, i32* %48, align 4
  %50 = icmp slt i32 %49, 0
  br i1 %50, label %56, label %51

51:                                               ; preds = %2
  %52 = getelementptr inbounds %struct.TfLiteContext, %struct.TfLiteContext* %0, i64 0, i32 2
  %53 = load %struct.TfLiteTensor*, %struct.TfLiteTensor** %52, align 8
  %54 = sext i32 %49 to i64
  %55 = getelementptr inbounds %struct.TfLiteTensor, %struct.TfLiteTensor* %53, i64 %54
  br label %56

56:                                               ; preds = %2, %51
  %57 = phi %struct.TfLiteTensor* [ %55, %51 ], [ null, %2 ]
  %58 = getelementptr inbounds %struct.TfLiteIntArray, %struct.TfLiteIntArray* %47, i64 0, i32 1, i64 1
  %59 = load i32, i32* %58, align 4
  %60 = icmp slt i32 %59, 0
  br i1 %60, label %66, label %61

61:                                               ; preds = %56
  %62 = getelementptr inbounds %struct.TfLiteContext, %struct.TfLiteContext* %0, i64 0, i32 2
  %63 = load %struct.TfLiteTensor*, %struct.TfLiteTensor** %62, align 8
  %64 = sext i32 %59 to i64
  %65 = getelementptr inbounds %struct.TfLiteTensor, %struct.TfLiteTensor* %63, i64 %64
  br label %66

66:                                               ; preds = %56, %61
  %67 = phi %struct.TfLiteTensor* [ %65, %61 ], [ null, %56 ]
  %68 = getelementptr inbounds %struct.TfLiteNode, %struct.TfLiteNode* %1, i64 0, i32 1
  %69 = load %struct.TfLiteIntArray*, %struct.TfLiteIntArray** %68, align 8
  %70 = getelementptr inbounds %struct.TfLiteIntArray, %struct.TfLiteIntArray* %69, i64 0, i32 1, i64 0
  %71 = load i32, i32* %70, align 4
  %72 = icmp slt i32 %71, 0
  br i1 %72, label %78, label %73

73:                                               ; preds = %66
  %74 = getelementptr inbounds %struct.TfLiteContext, %struct.TfLiteContext* %0, i64 0, i32 2
  %75 = load %struct.TfLiteTensor*, %struct.TfLiteTensor** %74, align 8
  %76 = sext i32 %71 to i64
  %77 = getelementptr inbounds %struct.TfLiteTensor, %struct.TfLiteTensor* %75, i64 %76
  br label %78

78:                                               ; preds = %66, %73
  %79 = phi %struct.TfLiteTensor* [ %77, %73 ], [ null, %66 ]
  %80 = tail call zeroext i1 @_ZN6tflite14HaveSameShapesEPK12TfLiteTensorS2_(%struct.TfLiteTensor* %57, %struct.TfLiteTensor* %67) #8
  %81 = getelementptr inbounds %struct.TfLiteTensor, %struct.TfLiteTensor* %57, i64 0, i32 0
  %82 = load i32, i32* %81, align 8
  switch i32 %82, label %2490 [
    i32 1, label %83
    i32 2, label %598
    i32 4, label %1109
    i32 3, label %1524
    i32 9, label %2007
  ]

83:                                               ; preds = %78
  %84 = bitcast %"struct.tflite::ComparisonParams"* %28 to i8*
  call void @llvm.lifetime.start.p0i8(i64 32, i8* nonnull %84) #8
  call void @llvm.memset.p0i8.i64(i8* nonnull align 4 %84, i8 -86, i64 32, i1 false) #8
  br i1 %80, label %186, label %85

85:                                               ; preds = %83
  %86 = bitcast %"class.tflite::RuntimeShape"* %29 to i8*
  call void @llvm.lifetime.start.p0i8(i64 32, i8* nonnull %86) #8
  %87 = icmp eq %struct.TfLiteTensor* %57, null
  br i1 %87, label %88, label %90

88:                                               ; preds = %85
  %89 = getelementptr inbounds %"class.tflite::RuntimeShape", %"class.tflite::RuntimeShape"* %29, i64 0, i32 0
  store i32 0, i32* %89, align 8, !alias.scope !568
  br label %118

90:                                               ; preds = %85
  %91 = getelementptr inbounds %struct.TfLiteTensor, %struct.TfLiteTensor* %57, i64 0, i32 2
  %92 = load %struct.TfLiteIntArray*, %struct.TfLiteIntArray** %91, align 8, !noalias !568
  %93 = getelementptr inbounds %struct.TfLiteIntArray, %struct.TfLiteIntArray* %92, i64 0, i32 0
  %94 = load i32, i32* %93, align 4, !noalias !568
  %95 = getelementptr inbounds %struct.TfLiteIntArray, %struct.TfLiteIntArray* %92, i64 0, i32 1, i64 0
  %96 = getelementptr inbounds %"class.tflite::RuntimeShape", %"class.tflite::RuntimeShape"* %29, i64 0, i32 0
  store i32 %94, i32* %96, align 8, !alias.scope !568
  %97 = icmp sgt i32 %94, 5
  br i1 %97, label %98, label %105

98:                                               ; preds = %90
  %99 = sext i32 %94 to i64
  %100 = shl nsw i64 %99, 2
  %101 = tail call i8* @_Znam(i64 %100) #9, !noalias !568
  %102 = getelementptr inbounds %"class.tflite::RuntimeShape", %"class.tflite::RuntimeShape"* %29, i64 0, i32 1, i32 0
  %103 = bitcast i32** %102 to i8**
  store i8* %101, i8** %103, align 8, !alias.scope !568
  %104 = bitcast i8* %101 to i32*
  br label %110

105:                                              ; preds = %90
  %106 = getelementptr inbounds %"class.tflite::RuntimeShape", %"class.tflite::RuntimeShape"* %29, i64 0, i32 1
  %107 = bitcast %union.anon* %106 to i32*
  %108 = sext i32 %94 to i64
  %109 = shl nsw i64 %108, 2
  br label %110

110:                                              ; preds = %105, %98
  %111 = phi i64 [ %100, %98 ], [ %109, %105 ]
  %112 = phi i32* [ %104, %98 ], [ %107, %105 ]
  %113 = bitcast i32* %112 to i8*
  %114 = bitcast i32* %95 to i8*
  call void @llvm.memcpy.p0i8.p0i8.i64(i8* align 4 %113, i8* align 4 %114, i64 %111, i1 false) #8
  %115 = getelementptr inbounds %struct.TfLiteTensor, %struct.TfLiteTensor* %57, i64 0, i32 1
  %116 = bitcast %union.TfLitePtrUnion* %115 to float**
  %117 = load float*, float** %116, align 8
  br label %118

118:                                              ; preds = %110, %88
  %119 = phi float* [ %117, %110 ], [ null, %88 ]
  %120 = bitcast %"class.tflite::RuntimeShape"* %30 to i8*
  call void @llvm.lifetime.start.p0i8(i64 32, i8* nonnull %120) #8
  %121 = icmp eq %struct.TfLiteTensor* %67, null
  br i1 %121, label %122, label %124

122:                                              ; preds = %118
  %123 = getelementptr inbounds %"class.tflite::RuntimeShape", %"class.tflite::RuntimeShape"* %30, i64 0, i32 0
  store i32 0, i32* %123, align 8, !alias.scope !571
  br label %152

124:                                              ; preds = %118
  %125 = getelementptr inbounds %struct.TfLiteTensor, %struct.TfLiteTensor* %67, i64 0, i32 2
  %126 = load %struct.TfLiteIntArray*, %struct.TfLiteIntArray** %125, align 8, !noalias !571
  %127 = getelementptr inbounds %struct.TfLiteIntArray, %struct.TfLiteIntArray* %126, i64 0, i32 0
  %128 = load i32, i32* %127, align 4, !noalias !571
  %129 = getelementptr inbounds %struct.TfLiteIntArray, %struct.TfLiteIntArray* %126, i64 0, i32 1, i64 0
  %130 = getelementptr inbounds %"class.tflite::RuntimeShape", %"class.tflite::RuntimeShape"* %30, i64 0, i32 0
  store i32 %128, i32* %130, align 8, !alias.scope !571
  %131 = icmp sgt i32 %128, 5
  br i1 %131, label %132, label %139

132:                                              ; preds = %124
  %133 = sext i32 %128 to i64
  %134 = shl nsw i64 %133, 2
  %135 = tail call i8* @_Znam(i64 %134) #9, !noalias !571
  %136 = getelementptr inbounds %"class.tflite::RuntimeShape", %"class.tflite::RuntimeShape"* %30, i64 0, i32 1, i32 0
  %137 = bitcast i32** %136 to i8**
  store i8* %135, i8** %137, align 8, !alias.scope !571
  %138 = bitcast i8* %135 to i32*
  br label %144

139:                                              ; preds = %124
  %140 = getelementptr inbounds %"class.tflite::RuntimeShape", %"class.tflite::RuntimeShape"* %30, i64 0, i32 1
  %141 = bitcast %union.anon* %140 to i32*
  %142 = sext i32 %128 to i64
  %143 = shl nsw i64 %142, 2
  br label %144

144:                                              ; preds = %139, %132
  %145 = phi i64 [ %134, %132 ], [ %143, %139 ]
  %146 = phi i32* [ %138, %132 ], [ %141, %139 ]
  %147 = bitcast i32* %146 to i8*
  %148 = bitcast i32* %129 to i8*
  call void @llvm.memcpy.p0i8.p0i8.i64(i8* align 4 %147, i8* align 4 %148, i64 %145, i1 false) #8
  %149 = getelementptr inbounds %struct.TfLiteTensor, %struct.TfLiteTensor* %67, i64 0, i32 1
  %150 = bitcast %union.TfLitePtrUnion* %149 to float**
  %151 = load float*, float** %150, align 8
  br label %152

152:                                              ; preds = %144, %122
  %153 = phi float* [ %151, %144 ], [ null, %122 ]
  %154 = bitcast %"class.tflite::RuntimeShape"* %31 to i8*
  call void @llvm.lifetime.start.p0i8(i64 32, i8* nonnull %154) #8
  %155 = icmp eq %struct.TfLiteTensor* %79, null
  br i1 %155, label %156, label %158

156:                                              ; preds = %152
  %157 = getelementptr inbounds %"class.tflite::RuntimeShape", %"class.tflite::RuntimeShape"* %31, i64 0, i32 0
  store i32 0, i32* %157, align 8, !alias.scope !574
  br label %565

158:                                              ; preds = %152
  %159 = getelementptr inbounds %struct.TfLiteTensor, %struct.TfLiteTensor* %79, i64 0, i32 2
  %160 = load %struct.TfLiteIntArray*, %struct.TfLiteIntArray** %159, align 8, !noalias !574
  %161 = getelementptr inbounds %struct.TfLiteIntArray, %struct.TfLiteIntArray* %160, i64 0, i32 0
  %162 = load i32, i32* %161, align 4, !noalias !574
  %163 = getelementptr inbounds %struct.TfLiteIntArray, %struct.TfLiteIntArray* %160, i64 0, i32 1, i64 0
  %164 = getelementptr inbounds %"class.tflite::RuntimeShape", %"class.tflite::RuntimeShape"* %31, i64 0, i32 0
  store i32 %162, i32* %164, align 8, !alias.scope !574
  %165 = icmp sgt i32 %162, 5
  br i1 %165, label %166, label %173

166:                                              ; preds = %158
  %167 = sext i32 %162 to i64
  %168 = shl nsw i64 %167, 2
  %169 = tail call i8* @_Znam(i64 %168) #9, !noalias !574
  %170 = getelementptr inbounds %"class.tflite::RuntimeShape", %"class.tflite::RuntimeShape"* %31, i64 0, i32 1, i32 0
  %171 = bitcast i32** %170 to i8**
  store i8* %169, i8** %171, align 8, !alias.scope !574
  %172 = bitcast i8* %169 to i32*
  br label %178

173:                                              ; preds = %158
  %174 = getelementptr inbounds %"class.tflite::RuntimeShape", %"class.tflite::RuntimeShape"* %31, i64 0, i32 1
  %175 = bitcast %union.anon* %174 to i32*
  %176 = sext i32 %162 to i64
  %177 = shl nsw i64 %176, 2
  br label %178

178:                                              ; preds = %173, %166
  %179 = phi i64 [ %168, %166 ], [ %177, %173 ]
  %180 = phi i32* [ %172, %166 ], [ %175, %173 ]
  %181 = bitcast i32* %180 to i8*
  %182 = bitcast i32* %163 to i8*
  call void @llvm.memcpy.p0i8.p0i8.i64(i8* align 4 %181, i8* align 4 %182, i64 %179, i1 false) #8
  %183 = getelementptr inbounds %struct.TfLiteTensor, %struct.TfLiteTensor* %79, i64 0, i32 1
  %184 = bitcast %union.TfLitePtrUnion* %183 to i8**
  %185 = load i8*, i8** %184, align 8
  br label %565

186:                                              ; preds = %83
  %187 = bitcast %"class.tflite::RuntimeShape"* %32 to i8*
  call void @llvm.lifetime.start.p0i8(i64 32, i8* nonnull %187) #8
  %188 = icmp eq %struct.TfLiteTensor* %57, null
  br i1 %188, label %189, label %191

189:                                              ; preds = %186
  %190 = getelementptr inbounds %"class.tflite::RuntimeShape", %"class.tflite::RuntimeShape"* %32, i64 0, i32 0
  store i32 0, i32* %190, align 8, !alias.scope !577
  br label %220

191:                                              ; preds = %186
  %192 = getelementptr inbounds %struct.TfLiteTensor, %struct.TfLiteTensor* %57, i64 0, i32 2
  %193 = load %struct.TfLiteIntArray*, %struct.TfLiteIntArray** %192, align 8, !noalias !577
  %194 = getelementptr inbounds %struct.TfLiteIntArray, %struct.TfLiteIntArray* %193, i64 0, i32 0
  %195 = load i32, i32* %194, align 4, !noalias !577
  %196 = getelementptr inbounds %struct.TfLiteIntArray, %struct.TfLiteIntArray* %193, i64 0, i32 1, i64 0
  %197 = getelementptr inbounds %"class.tflite::RuntimeShape", %"class.tflite::RuntimeShape"* %32, i64 0, i32 0
  store i32 %195, i32* %197, align 8, !alias.scope !577
  %198 = icmp sgt i32 %195, 5
  br i1 %198, label %199, label %206

199:                                              ; preds = %191
  %200 = sext i32 %195 to i64
  %201 = shl nsw i64 %200, 2
  %202 = tail call i8* @_Znam(i64 %201) #9, !noalias !577
  %203 = getelementptr inbounds %"class.tflite::RuntimeShape", %"class.tflite::RuntimeShape"* %32, i64 0, i32 1, i32 0
  %204 = bitcast i32** %203 to i8**
  store i8* %202, i8** %204, align 8, !alias.scope !577
  %205 = bitcast i8* %202 to i32*
  br label %211

206:                                              ; preds = %191
  %207 = getelementptr inbounds %"class.tflite::RuntimeShape", %"class.tflite::RuntimeShape"* %32, i64 0, i32 1
  %208 = bitcast %union.anon* %207 to i32*
  %209 = sext i32 %195 to i64
  %210 = shl nsw i64 %209, 2
  br label %211

211:                                              ; preds = %206, %199
  %212 = phi i64 [ %201, %199 ], [ %210, %206 ]
  %213 = phi i32* [ %205, %199 ], [ %208, %206 ]
  %214 = bitcast i32* %213 to i8*
  %215 = bitcast i32* %196 to i8*
  call void @llvm.memcpy.p0i8.p0i8.i64(i8* align 4 %214, i8* align 4 %215, i64 %212, i1 false) #8
  %216 = getelementptr inbounds %struct.TfLiteTensor, %struct.TfLiteTensor* %57, i64 0, i32 1
  %217 = bitcast %union.TfLitePtrUnion* %216 to float**
  %218 = load float*, float** %217, align 8
  %219 = bitcast float* %218 to i8*
  br label %220

220:                                              ; preds = %211, %189
  %221 = phi i32 [ %195, %211 ], [ 0, %189 ]
  %222 = phi i8* [ %219, %211 ], [ null, %189 ]
  %223 = phi float* [ %218, %211 ], [ null, %189 ]
  %224 = bitcast %"class.tflite::RuntimeShape"* %33 to i8*
  call void @llvm.lifetime.start.p0i8(i64 32, i8* nonnull %224) #8
  %225 = icmp eq %struct.TfLiteTensor* %67, null
  br i1 %225, label %226, label %228

226:                                              ; preds = %220
  %227 = getelementptr inbounds %"class.tflite::RuntimeShape", %"class.tflite::RuntimeShape"* %33, i64 0, i32 0
  store i32 0, i32* %227, align 8, !alias.scope !580
  br label %257

228:                                              ; preds = %220
  %229 = getelementptr inbounds %struct.TfLiteTensor, %struct.TfLiteTensor* %67, i64 0, i32 2
  %230 = load %struct.TfLiteIntArray*, %struct.TfLiteIntArray** %229, align 8, !noalias !580
  %231 = getelementptr inbounds %struct.TfLiteIntArray, %struct.TfLiteIntArray* %230, i64 0, i32 0
  %232 = load i32, i32* %231, align 4, !noalias !580
  %233 = getelementptr inbounds %struct.TfLiteIntArray, %struct.TfLiteIntArray* %230, i64 0, i32 1, i64 0
  %234 = getelementptr inbounds %"class.tflite::RuntimeShape", %"class.tflite::RuntimeShape"* %33, i64 0, i32 0
  store i32 %232, i32* %234, align 8, !alias.scope !580
  %235 = icmp sgt i32 %232, 5
  br i1 %235, label %236, label %243

236:                                              ; preds = %228
  %237 = sext i32 %232 to i64
  %238 = shl nsw i64 %237, 2
  %239 = tail call i8* @_Znam(i64 %238) #9, !noalias !580
  %240 = getelementptr inbounds %"class.tflite::RuntimeShape", %"class.tflite::RuntimeShape"* %33, i64 0, i32 1, i32 0
  %241 = bitcast i32** %240 to i8**
  store i8* %239, i8** %241, align 8, !alias.scope !580
  %242 = bitcast i8* %239 to i32*
  br label %248

243:                                              ; preds = %228
  %244 = getelementptr inbounds %"class.tflite::RuntimeShape", %"class.tflite::RuntimeShape"* %33, i64 0, i32 1
  %245 = bitcast %union.anon* %244 to i32*
  %246 = sext i32 %232 to i64
  %247 = shl nsw i64 %246, 2
  br label %248

248:                                              ; preds = %243, %236
  %249 = phi i64 [ %238, %236 ], [ %247, %243 ]
  %250 = phi i32* [ %242, %236 ], [ %245, %243 ]
  %251 = bitcast i32* %250 to i8*
  %252 = bitcast i32* %233 to i8*
  call void @llvm.memcpy.p0i8.p0i8.i64(i8* align 4 %251, i8* align 4 %252, i64 %249, i1 false) #8
  %253 = getelementptr inbounds %struct.TfLiteTensor, %struct.TfLiteTensor* %67, i64 0, i32 1
  %254 = bitcast %union.TfLitePtrUnion* %253 to float**
  %255 = load float*, float** %254, align 8
  %256 = bitcast float* %255 to i8*
  br label %257

257:                                              ; preds = %248, %226
  %258 = phi i32 [ %232, %248 ], [ 0, %226 ]
  %259 = phi i8* [ %256, %248 ], [ null, %226 ]
  %260 = phi float* [ %255, %248 ], [ null, %226 ]
  %261 = bitcast %"class.tflite::RuntimeShape"* %34 to i8*
  call void @llvm.lifetime.start.p0i8(i64 32, i8* nonnull %261) #8
  %262 = icmp eq %struct.TfLiteTensor* %79, null
  br i1 %262, label %263, label %265

263:                                              ; preds = %257
  %264 = getelementptr inbounds %"class.tflite::RuntimeShape", %"class.tflite::RuntimeShape"* %34, i64 0, i32 0
  store i32 0, i32* %264, align 8, !alias.scope !583
  br label %293

265:                                              ; preds = %257
  %266 = getelementptr inbounds %struct.TfLiteTensor, %struct.TfLiteTensor* %79, i64 0, i32 2
  %267 = load %struct.TfLiteIntArray*, %struct.TfLiteIntArray** %266, align 8, !noalias !583
  %268 = getelementptr inbounds %struct.TfLiteIntArray, %struct.TfLiteIntArray* %267, i64 0, i32 0
  %269 = load i32, i32* %268, align 4, !noalias !583
  %270 = getelementptr inbounds %struct.TfLiteIntArray, %struct.TfLiteIntArray* %267, i64 0, i32 1, i64 0
  %271 = getelementptr inbounds %"class.tflite::RuntimeShape", %"class.tflite::RuntimeShape"* %34, i64 0, i32 0
  store i32 %269, i32* %271, align 8, !alias.scope !583
  %272 = icmp sgt i32 %269, 5
  br i1 %272, label %273, label %280

273:                                              ; preds = %265
  %274 = sext i32 %269 to i64
  %275 = shl nsw i64 %274, 2
  %276 = tail call i8* @_Znam(i64 %275) #9, !noalias !583
  %277 = getelementptr inbounds %"class.tflite::RuntimeShape", %"class.tflite::RuntimeShape"* %34, i64 0, i32 1, i32 0
  %278 = bitcast i32** %277 to i8**
  store i8* %276, i8** %278, align 8, !alias.scope !583
  %279 = bitcast i8* %276 to i32*
  br label %285

280:                                              ; preds = %265
  %281 = getelementptr inbounds %"class.tflite::RuntimeShape", %"class.tflite::RuntimeShape"* %34, i64 0, i32 1
  %282 = bitcast %union.anon* %281 to i32*
  %283 = sext i32 %269 to i64
  %284 = shl nsw i64 %283, 2
  br label %285

285:                                              ; preds = %280, %273
  %286 = phi i64 [ %275, %273 ], [ %284, %280 ]
  %287 = phi i32* [ %279, %273 ], [ %282, %280 ]
  %288 = bitcast i32* %287 to i8*
  %289 = bitcast i32* %270 to i8*
  call void @llvm.memcpy.p0i8.p0i8.i64(i8* align 4 %288, i8* align 4 %289, i64 %286, i1 false) #8
  %290 = getelementptr inbounds %struct.TfLiteTensor, %struct.TfLiteTensor* %79, i64 0, i32 1
  %291 = bitcast %union.TfLitePtrUnion* %290 to i8**
  %292 = load i8*, i8** %291, align 8
  br label %293

293:                                              ; preds = %285, %263
  %294 = phi i32 [ %269, %285 ], [ 0, %263 ]
  %295 = phi i8* [ %292, %285 ], [ null, %263 ]
  %296 = getelementptr inbounds %"class.tflite::RuntimeShape", %"class.tflite::RuntimeShape"* %32, i64 0, i32 1
  %297 = icmp sgt i32 %221, 5
  br i1 %297, label %298, label %301

298:                                              ; preds = %293
  %299 = getelementptr inbounds %union.anon, %union.anon* %296, i64 0, i32 0
  %300 = load i32*, i32** %299, align 8
  br label %304

301:                                              ; preds = %293
  %302 = bitcast %union.anon* %296 to i32*
  %303 = icmp sgt i32 %221, 0
  br i1 %303, label %304, label %408

304:                                              ; preds = %301, %298
  %305 = phi i32* [ %300, %298 ], [ %302, %301 ]
  %306 = zext i32 %221 to i64
  %307 = icmp ult i32 %221, 8
  br i1 %307, label %393, label %308

308:                                              ; preds = %304
  %309 = and i64 %306, 4294967288
  %310 = add nsw i64 %309, -8
  %311 = lshr exact i64 %310, 3
  %312 = add nuw nsw i64 %311, 1
  %313 = and i64 %312, 3
  %314 = icmp ult i64 %310, 24
  br i1 %314, label %360, label %315

315:                                              ; preds = %308
  %316 = sub nsw i64 %312, %313
  br label %317

317:                                              ; preds = %317, %315
  %318 = phi i64 [ 0, %315 ], [ %357, %317 ]
  %319 = phi <4 x i32> [ <i32 1, i32 1, i32 1, i32 1>, %315 ], [ %355, %317 ]
  %320 = phi <4 x i32> [ <i32 1, i32 1, i32 1, i32 1>, %315 ], [ %356, %317 ]
  %321 = phi i64 [ %316, %315 ], [ %358, %317 ]
  %322 = getelementptr inbounds i32, i32* %305, i64 %318
  %323 = bitcast i32* %322 to <4 x i32>*
  %324 = load <4 x i32>, <4 x i32>* %323, align 4
  %325 = getelementptr inbounds i32, i32* %322, i64 4
  %326 = bitcast i32* %325 to <4 x i32>*
  %327 = load <4 x i32>, <4 x i32>* %326, align 4
  %328 = mul nsw <4 x i32> %324, %319
  %329 = mul nsw <4 x i32> %327, %320
  %330 = or i64 %318, 8
  %331 = getelementptr inbounds i32, i32* %305, i64 %330
  %332 = bitcast i32* %331 to <4 x i32>*
  %333 = load <4 x i32>, <4 x i32>* %332, align 4
  %334 = getelementptr inbounds i32, i32* %331, i64 4
  %335 = bitcast i32* %334 to <4 x i32>*
  %336 = load <4 x i32>, <4 x i32>* %335, align 4
  %337 = mul nsw <4 x i32> %333, %328
  %338 = mul nsw <4 x i32> %336, %329
  %339 = or i64 %318, 16
  %340 = getelementptr inbounds i32, i32* %305, i64 %339
  %341 = bitcast i32* %340 to <4 x i32>*
  %342 = load <4 x i32>, <4 x i32>* %341, align 4
  %343 = getelementptr inbounds i32, i32* %340, i64 4
  %344 = bitcast i32* %343 to <4 x i32>*
  %345 = load <4 x i32>, <4 x i32>* %344, align 4
  %346 = mul nsw <4 x i32> %342, %337
  %347 = mul nsw <4 x i32> %345, %338
  %348 = or i64 %318, 24
  %349 = getelementptr inbounds i32, i32* %305, i64 %348
  %350 = bitcast i32* %349 to <4 x i32>*
  %351 = load <4 x i32>, <4 x i32>* %350, align 4
  %352 = getelementptr inbounds i32, i32* %349, i64 4
  %353 = bitcast i32* %352 to <4 x i32>*
  %354 = load <4 x i32>, <4 x i32>* %353, align 4
  %355 = mul nsw <4 x i32> %351, %346
  %356 = mul nsw <4 x i32> %354, %347
  %357 = add i64 %318, 32
  %358 = add i64 %321, -4
  %359 = icmp eq i64 %358, 0
  br i1 %359, label %360, label %317, !llvm.loop !586

360:                                              ; preds = %317, %308
  %361 = phi <4 x i32> [ undef, %308 ], [ %355, %317 ]
  %362 = phi <4 x i32> [ undef, %308 ], [ %356, %317 ]
  %363 = phi i64 [ 0, %308 ], [ %357, %317 ]
  %364 = phi <4 x i32> [ <i32 1, i32 1, i32 1, i32 1>, %308 ], [ %355, %317 ]
  %365 = phi <4 x i32> [ <i32 1, i32 1, i32 1, i32 1>, %308 ], [ %356, %317 ]
  %366 = icmp eq i64 %313, 0
  br i1 %366, label %383, label %367

367:                                              ; preds = %360, %367
  %368 = phi i64 [ %380, %367 ], [ %363, %360 ]
  %369 = phi <4 x i32> [ %378, %367 ], [ %364, %360 ]
  %370 = phi <4 x i32> [ %379, %367 ], [ %365, %360 ]
  %371 = phi i64 [ %381, %367 ], [ %313, %360 ]
  %372 = getelementptr inbounds i32, i32* %305, i64 %368
  %373 = bitcast i32* %372 to <4 x i32>*
  %374 = load <4 x i32>, <4 x i32>* %373, align 4
  %375 = getelementptr inbounds i32, i32* %372, i64 4
  %376 = bitcast i32* %375 to <4 x i32>*
  %377 = load <4 x i32>, <4 x i32>* %376, align 4
  %378 = mul nsw <4 x i32> %374, %369
  %379 = mul nsw <4 x i32> %377, %370
  %380 = add i64 %368, 8
  %381 = add i64 %371, -1
  %382 = icmp eq i64 %381, 0
  br i1 %382, label %383, label %367, !llvm.loop !587

383:                                              ; preds = %367, %360
  %384 = phi <4 x i32> [ %361, %360 ], [ %378, %367 ]
  %385 = phi <4 x i32> [ %362, %360 ], [ %379, %367 ]
  %386 = mul <4 x i32> %385, %384
  %387 = shufflevector <4 x i32> %386, <4 x i32> undef, <4 x i32> <i32 2, i32 3, i32 undef, i32 undef>
  %388 = mul <4 x i32> %386, %387
  %389 = shufflevector <4 x i32> %388, <4 x i32> undef, <4 x i32> <i32 1, i32 undef, i32 undef, i32 undef>
  %390 = mul <4 x i32> %388, %389
  %391 = extractelement <4 x i32> %390, i32 0
  %392 = icmp eq i64 %309, %306
  br i1 %392, label %404, label %393

393:                                              ; preds = %383, %304
  %394 = phi i64 [ 0, %304 ], [ %309, %383 ]
  %395 = phi i32 [ 1, %304 ], [ %391, %383 ]
  br label %396

396:                                              ; preds = %393, %396
  %397 = phi i64 [ %402, %396 ], [ %394, %393 ]
  %398 = phi i32 [ %401, %396 ], [ %395, %393 ]
  %399 = getelementptr inbounds i32, i32* %305, i64 %397
  %400 = load i32, i32* %399, align 4
  %401 = mul nsw i32 %400, %398
  %402 = add nuw nsw i64 %397, 1
  %403 = icmp eq i64 %402, %306
  br i1 %403, label %404, label %396, !llvm.loop !588

404:                                              ; preds = %396, %383
  %405 = phi i32 [ %391, %383 ], [ %401, %396 ]
  %406 = sext i32 %405 to i64
  %407 = icmp sgt i32 %405, 0
  br i1 %407, label %408, label %542

408:                                              ; preds = %404, %301
  %409 = phi i64 [ %406, %404 ], [ 1, %301 ]
  %410 = icmp ult i64 %409, 8
  br i1 %410, label %506, label %411

411:                                              ; preds = %408
  %412 = getelementptr i8, i8* %295, i64 %409
  %413 = getelementptr float, float* %260, i64 %409
  %414 = bitcast float* %413 to i8*
  %415 = getelementptr float, float* %223, i64 %409
  %416 = bitcast float* %415 to i8*
  %417 = icmp ult i8* %295, %414
  %418 = icmp ult i8* %259, %412
  %419 = and i1 %417, %418
  %420 = icmp ult i8* %295, %416
  %421 = icmp ult i8* %222, %412
  %422 = and i1 %420, %421
  %423 = or i1 %419, %422
  br i1 %423, label %506, label %424

424:                                              ; preds = %411
  %425 = and i64 %409, -8
  %426 = add nsw i64 %425, -8
  %427 = lshr exact i64 %426, 3
  %428 = add nuw nsw i64 %427, 1
  %429 = and i64 %428, 1
  %430 = icmp eq i64 %426, 0
  br i1 %430, label %480, label %431

431:                                              ; preds = %424
  %432 = sub nuw nsw i64 %428, %429
  br label %433

433:                                              ; preds = %433, %431
  %434 = phi i64 [ 0, %431 ], [ %477, %433 ]
  %435 = phi i64 [ %432, %431 ], [ %478, %433 ]
  %436 = getelementptr inbounds float, float* %223, i64 %434
  %437 = bitcast float* %436 to <4 x float>*
  %438 = load <4 x float>, <4 x float>* %437, align 4, !alias.scope !589
  %439 = getelementptr inbounds float, float* %436, i64 4
  %440 = bitcast float* %439 to <4 x float>*
  %441 = load <4 x float>, <4 x float>* %440, align 4, !alias.scope !589
  %442 = getelementptr inbounds float, float* %260, i64 %434
  %443 = bitcast float* %442 to <4 x float>*
  %444 = load <4 x float>, <4 x float>* %443, align 4, !alias.scope !592
  %445 = getelementptr inbounds float, float* %442, i64 4
  %446 = bitcast float* %445 to <4 x float>*
  %447 = load <4 x float>, <4 x float>* %446, align 4, !alias.scope !592
  %448 = fcmp olt <4 x float> %438, %444
  %449 = fcmp olt <4 x float> %441, %447
  %450 = getelementptr inbounds i8, i8* %295, i64 %434
  %451 = zext <4 x i1> %448 to <4 x i8>
  %452 = zext <4 x i1> %449 to <4 x i8>
  %453 = bitcast i8* %450 to <4 x i8>*
  store <4 x i8> %451, <4 x i8>* %453, align 1, !alias.scope !594, !noalias !596
  %454 = getelementptr inbounds i8, i8* %450, i64 4
  %455 = bitcast i8* %454 to <4 x i8>*
  store <4 x i8> %452, <4 x i8>* %455, align 1, !alias.scope !594, !noalias !596
  %456 = or i64 %434, 8
  %457 = getelementptr inbounds float, float* %223, i64 %456
  %458 = bitcast float* %457 to <4 x float>*
  %459 = load <4 x float>, <4 x float>* %458, align 4, !alias.scope !589
  %460 = getelementptr inbounds float, float* %457, i64 4
  %461 = bitcast float* %460 to <4 x float>*
  %462 = load <4 x float>, <4 x float>* %461, align 4, !alias.scope !589
  %463 = getelementptr inbounds float, float* %260, i64 %456
  %464 = bitcast float* %463 to <4 x float>*
  %465 = load <4 x float>, <4 x float>* %464, align 4, !alias.scope !592
  %466 = getelementptr inbounds float, float* %463, i64 4
  %467 = bitcast float* %466 to <4 x float>*
  %468 = load <4 x float>, <4 x float>* %467, align 4, !alias.scope !592
  %469 = fcmp olt <4 x float> %459, %465
  %470 = fcmp olt <4 x float> %462, %468
  %471 = getelementptr inbounds i8, i8* %295, i64 %456
  %472 = zext <4 x i1> %469 to <4 x i8>
  %473 = zext <4 x i1> %470 to <4 x i8>
  %474 = bitcast i8* %471 to <4 x i8>*
  store <4 x i8> %472, <4 x i8>* %474, align 1, !alias.scope !594, !noalias !596
  %475 = getelementptr inbounds i8, i8* %471, i64 4
  %476 = bitcast i8* %475 to <4 x i8>*
  store <4 x i8> %473, <4 x i8>* %476, align 1, !alias.scope !594, !noalias !596
  %477 = add i64 %434, 16
  %478 = add i64 %435, -2
  %479 = icmp eq i64 %478, 0
  br i1 %479, label %480, label %433, !llvm.loop !597

480:                                              ; preds = %433, %424
  %481 = phi i64 [ 0, %424 ], [ %477, %433 ]
  %482 = icmp eq i64 %429, 0
  br i1 %482, label %504, label %483

483:                                              ; preds = %480
  %484 = getelementptr inbounds float, float* %223, i64 %481
  %485 = bitcast float* %484 to <4 x float>*
  %486 = load <4 x float>, <4 x float>* %485, align 4, !alias.scope !589
  %487 = getelementptr inbounds float, float* %484, i64 4
  %488 = bitcast float* %487 to <4 x float>*
  %489 = load <4 x float>, <4 x float>* %488, align 4, !alias.scope !589
  %490 = getelementptr inbounds float, float* %260, i64 %481
  %491 = bitcast float* %490 to <4 x float>*
  %492 = load <4 x float>, <4 x float>* %491, align 4, !alias.scope !592
  %493 = getelementptr inbounds float, float* %490, i64 4
  %494 = bitcast float* %493 to <4 x float>*
  %495 = load <4 x float>, <4 x float>* %494, align 4, !alias.scope !592
  %496 = fcmp olt <4 x float> %486, %492
  %497 = fcmp olt <4 x float> %489, %495
  %498 = getelementptr inbounds i8, i8* %295, i64 %481
  %499 = zext <4 x i1> %496 to <4 x i8>
  %500 = zext <4 x i1> %497 to <4 x i8>
  %501 = bitcast i8* %498 to <4 x i8>*
  store <4 x i8> %499, <4 x i8>* %501, align 1, !alias.scope !594, !noalias !596
  %502 = getelementptr inbounds i8, i8* %498, i64 4
  %503 = bitcast i8* %502 to <4 x i8>*
  store <4 x i8> %500, <4 x i8>* %503, align 1, !alias.scope !594, !noalias !596
  br label %504

504:                                              ; preds = %480, %483
  %505 = icmp eq i64 %409, %425
  br i1 %505, label %542, label %506

506:                                              ; preds = %504, %411, %408
  %507 = phi i64 [ 0, %411 ], [ 0, %408 ], [ %425, %504 ]
  %508 = and i64 %409, 1
  %509 = icmp eq i64 %508, 0
  br i1 %509, label %519, label %510

510:                                              ; preds = %506
  %511 = getelementptr inbounds float, float* %223, i64 %507
  %512 = load float, float* %511, align 4
  %513 = getelementptr inbounds float, float* %260, i64 %507
  %514 = load float, float* %513, align 4
  %515 = fcmp olt float %512, %514
  %516 = getelementptr inbounds i8, i8* %295, i64 %507
  %517 = zext i1 %515 to i8
  store i8 %517, i8* %516, align 1
  %518 = or i64 %507, 1
  br label %519

519:                                              ; preds = %506, %510
  %520 = phi i64 [ %507, %506 ], [ %518, %510 ]
  %521 = or i64 %507, 1
  %522 = icmp eq i64 %409, %521
  br i1 %522, label %542, label %523

523:                                              ; preds = %519, %523
  %524 = phi i64 [ %540, %523 ], [ %520, %519 ]
  %525 = getelementptr inbounds float, float* %223, i64 %524
  %526 = load float, float* %525, align 4
  %527 = getelementptr inbounds float, float* %260, i64 %524
  %528 = load float, float* %527, align 4
  %529 = fcmp olt float %526, %528
  %530 = getelementptr inbounds i8, i8* %295, i64 %524
  %531 = zext i1 %529 to i8
  store i8 %531, i8* %530, align 1
  %532 = add nuw nsw i64 %524, 1
  %533 = getelementptr inbounds float, float* %223, i64 %532
  %534 = load float, float* %533, align 4
  %535 = getelementptr inbounds float, float* %260, i64 %532
  %536 = load float, float* %535, align 4
  %537 = fcmp olt float %534, %536
  %538 = getelementptr inbounds i8, i8* %295, i64 %532
  %539 = zext i1 %537 to i8
  store i8 %539, i8* %538, align 1
  %540 = add nuw nsw i64 %524, 2
  %541 = icmp eq i64 %540, %409
  br i1 %541, label %542, label %523, !llvm.loop !598

542:                                              ; preds = %519, %523, %504, %404
  %543 = icmp sgt i32 %294, 5
  br i1 %543, label %544, label %550

544:                                              ; preds = %542
  %545 = getelementptr inbounds %"class.tflite::RuntimeShape", %"class.tflite::RuntimeShape"* %34, i64 0, i32 1, i32 0
  %546 = load i32*, i32** %545, align 8
  %547 = icmp eq i32* %546, null
  br i1 %547, label %550, label %548

548:                                              ; preds = %544
  %549 = bitcast i32* %546 to i8*
  tail call void @_ZdaPv(i8* %549) #9
  br label %550

550:                                              ; preds = %548, %544, %542
  call void @llvm.lifetime.end.p0i8(i64 32, i8* nonnull %261) #8
  %551 = icmp sgt i32 %258, 5
  br i1 %551, label %552, label %558

552:                                              ; preds = %550
  %553 = getelementptr inbounds %"class.tflite::RuntimeShape", %"class.tflite::RuntimeShape"* %33, i64 0, i32 1, i32 0
  %554 = load i32*, i32** %553, align 8
  %555 = icmp eq i32* %554, null
  br i1 %555, label %558, label %556

556:                                              ; preds = %552
  %557 = bitcast i32* %554 to i8*
  tail call void @_ZdaPv(i8* %557) #9
  br label %558

558:                                              ; preds = %556, %552, %550
  call void @llvm.lifetime.end.p0i8(i64 32, i8* nonnull %224) #8
  br i1 %297, label %559, label %596

559:                                              ; preds = %558
  %560 = getelementptr inbounds %"class.tflite::RuntimeShape", %"class.tflite::RuntimeShape"* %32, i64 0, i32 1, i32 0
  %561 = load i32*, i32** %560, align 8
  %562 = icmp eq i32* %561, null
  br i1 %562, label %596, label %563

563:                                              ; preds = %559
  %564 = bitcast i32* %561 to i8*
  tail call void @_ZdaPv(i8* %564) #9
  br label %596

565:                                              ; preds = %178, %156
  %566 = phi i8* [ %185, %178 ], [ null, %156 ]
  call void @_ZN6tflite13reference_ops29BroadcastComparison4DSlowImplIfXadL_ZNS0_6LessFnIfEEbT_S3_EEEEvRKNS_16ComparisonParamsERKNS_12RuntimeShapeEPKS3_S9_SB_S9_Pb(%"struct.tflite::ComparisonParams"* nonnull dereferenceable(32) %28, %"class.tflite::RuntimeShape"* nonnull dereferenceable(32) %29, float* %119, %"class.tflite::RuntimeShape"* nonnull dereferenceable(32) %30, float* %153, %"class.tflite::RuntimeShape"* nonnull dereferenceable(32) %31, i8* %566) #8
  %567 = getelementptr inbounds %"class.tflite::RuntimeShape", %"class.tflite::RuntimeShape"* %31, i64 0, i32 0
  %568 = load i32, i32* %567, align 8
  %569 = icmp sgt i32 %568, 5
  br i1 %569, label %570, label %576

570:                                              ; preds = %565
  %571 = getelementptr inbounds %"class.tflite::RuntimeShape", %"class.tflite::RuntimeShape"* %31, i64 0, i32 1, i32 0
  %572 = load i32*, i32** %571, align 8
  %573 = icmp eq i32* %572, null
  br i1 %573, label %576, label %574

574:                                              ; preds = %570
  %575 = bitcast i32* %572 to i8*
  call void @_ZdaPv(i8* %575) #9
  br label %576

576:                                              ; preds = %574, %570, %565
  call void @llvm.lifetime.end.p0i8(i64 32, i8* nonnull %154) #8
  %577 = getelementptr inbounds %"class.tflite::RuntimeShape", %"class.tflite::RuntimeShape"* %30, i64 0, i32 0
  %578 = load i32, i32* %577, align 8
  %579 = icmp sgt i32 %578, 5
  br i1 %579, label %580, label %586

580:                                              ; preds = %576
  %581 = getelementptr inbounds %"class.tflite::RuntimeShape", %"class.tflite::RuntimeShape"* %30, i64 0, i32 1, i32 0
  %582 = load i32*, i32** %581, align 8
  %583 = icmp eq i32* %582, null
  br i1 %583, label %586, label %584

584:                                              ; preds = %580
  %585 = bitcast i32* %582 to i8*
  call void @_ZdaPv(i8* %585) #9
  br label %586

586:                                              ; preds = %584, %580, %576
  call void @llvm.lifetime.end.p0i8(i64 32, i8* nonnull %120) #8
  %587 = getelementptr inbounds %"class.tflite::RuntimeShape", %"class.tflite::RuntimeShape"* %29, i64 0, i32 0
  %588 = load i32, i32* %587, align 8
  %589 = icmp sgt i32 %588, 5
  br i1 %589, label %590, label %596

590:                                              ; preds = %586
  %591 = getelementptr inbounds %"class.tflite::RuntimeShape", %"class.tflite::RuntimeShape"* %29, i64 0, i32 1, i32 0
  %592 = load i32*, i32** %591, align 8
  %593 = icmp eq i32* %592, null
  br i1 %593, label %596, label %594

594:                                              ; preds = %590
  %595 = bitcast i32* %592 to i8*
  call void @_ZdaPv(i8* %595) #9
  br label %596

596:                                              ; preds = %586, %590, %594, %558, %559, %563
  %597 = phi i8* [ %187, %563 ], [ %187, %559 ], [ %187, %558 ], [ %86, %594 ], [ %86, %590 ], [ %86, %586 ]
  call void @llvm.lifetime.end.p0i8(i64 32, i8* nonnull %597) #8
  call void @llvm.lifetime.end.p0i8(i64 32, i8* nonnull %84) #8
  br label %2493

598:                                              ; preds = %78
  %599 = bitcast %"struct.tflite::ComparisonParams"* %21 to i8*
  call void @llvm.lifetime.start.p0i8(i64 32, i8* nonnull %599) #8
  call void @llvm.memset.p0i8.i64(i8* nonnull align 4 %599, i8 -86, i64 32, i1 false) #8
  br i1 %80, label %699, label %600

600:                                              ; preds = %598
  %601 = bitcast %"class.tflite::RuntimeShape"* %22 to i8*
  call void @llvm.lifetime.start.p0i8(i64 32, i8* nonnull %601) #8
  %602 = icmp eq %struct.TfLiteTensor* %57, null
  br i1 %602, label %603, label %605

603:                                              ; preds = %600
  %604 = getelementptr inbounds %"class.tflite::RuntimeShape", %"class.tflite::RuntimeShape"* %22, i64 0, i32 0
  store i32 0, i32* %604, align 8, !alias.scope !599
  br label %632

605:                                              ; preds = %600
  %606 = getelementptr inbounds %struct.TfLiteTensor, %struct.TfLiteTensor* %57, i64 0, i32 2
  %607 = load %struct.TfLiteIntArray*, %struct.TfLiteIntArray** %606, align 8, !noalias !599
  %608 = getelementptr inbounds %struct.TfLiteIntArray, %struct.TfLiteIntArray* %607, i64 0, i32 0
  %609 = load i32, i32* %608, align 4, !noalias !599
  %610 = getelementptr inbounds %struct.TfLiteIntArray, %struct.TfLiteIntArray* %607, i64 0, i32 1, i64 0
  %611 = getelementptr inbounds %"class.tflite::RuntimeShape", %"class.tflite::RuntimeShape"* %22, i64 0, i32 0
  store i32 %609, i32* %611, align 8, !alias.scope !599
  %612 = icmp sgt i32 %609, 5
  br i1 %612, label %613, label %620

613:                                              ; preds = %605
  %614 = sext i32 %609 to i64
  %615 = shl nsw i64 %614, 2
  %616 = tail call i8* @_Znam(i64 %615) #9, !noalias !599
  %617 = getelementptr inbounds %"class.tflite::RuntimeShape", %"class.tflite::RuntimeShape"* %22, i64 0, i32 1, i32 0
  %618 = bitcast i32** %617 to i8**
  store i8* %616, i8** %618, align 8, !alias.scope !599
  %619 = bitcast i8* %616 to i32*
  br label %625

620:                                              ; preds = %605
  %621 = getelementptr inbounds %"class.tflite::RuntimeShape", %"class.tflite::RuntimeShape"* %22, i64 0, i32 1
  %622 = bitcast %union.anon* %621 to i32*
  %623 = sext i32 %609 to i64
  %624 = shl nsw i64 %623, 2
  br label %625

625:                                              ; preds = %620, %613
  %626 = phi i64 [ %615, %613 ], [ %624, %620 ]
  %627 = phi i32* [ %619, %613 ], [ %622, %620 ]
  %628 = bitcast i32* %627 to i8*
  %629 = bitcast i32* %610 to i8*
  call void @llvm.memcpy.p0i8.p0i8.i64(i8* align 4 %628, i8* align 4 %629, i64 %626, i1 false) #8
  %630 = getelementptr inbounds %struct.TfLiteTensor, %struct.TfLiteTensor* %57, i64 0, i32 1, i32 0
  %631 = load i32*, i32** %630, align 8
  br label %632

632:                                              ; preds = %625, %603
  %633 = phi i32* [ %631, %625 ], [ null, %603 ]
  %634 = bitcast %"class.tflite::RuntimeShape"* %23 to i8*
  call void @llvm.lifetime.start.p0i8(i64 32, i8* nonnull %634) #8
  %635 = icmp eq %struct.TfLiteTensor* %67, null
  br i1 %635, label %636, label %638

636:                                              ; preds = %632
  %637 = getelementptr inbounds %"class.tflite::RuntimeShape", %"class.tflite::RuntimeShape"* %23, i64 0, i32 0
  store i32 0, i32* %637, align 8, !alias.scope !602
  br label %665

638:                                              ; preds = %632
  %639 = getelementptr inbounds %struct.TfLiteTensor, %struct.TfLiteTensor* %67, i64 0, i32 2
  %640 = load %struct.TfLiteIntArray*, %struct.TfLiteIntArray** %639, align 8, !noalias !602
  %641 = getelementptr inbounds %struct.TfLiteIntArray, %struct.TfLiteIntArray* %640, i64 0, i32 0
  %642 = load i32, i32* %641, align 4, !noalias !602
  %643 = getelementptr inbounds %struct.TfLiteIntArray, %struct.TfLiteIntArray* %640, i64 0, i32 1, i64 0
  %644 = getelementptr inbounds %"class.tflite::RuntimeShape", %"class.tflite::RuntimeShape"* %23, i64 0, i32 0
  store i32 %642, i32* %644, align 8, !alias.scope !602
  %645 = icmp sgt i32 %642, 5
  br i1 %645, label %646, label %653

646:                                              ; preds = %638
  %647 = sext i32 %642 to i64
  %648 = shl nsw i64 %647, 2
  %649 = tail call i8* @_Znam(i64 %648) #9, !noalias !602
  %650 = getelementptr inbounds %"class.tflite::RuntimeShape", %"class.tflite::RuntimeShape"* %23, i64 0, i32 1, i32 0
  %651 = bitcast i32** %650 to i8**
  store i8* %649, i8** %651, align 8, !alias.scope !602
  %652 = bitcast i8* %649 to i32*
  br label %658

653:                                              ; preds = %638
  %654 = getelementptr inbounds %"class.tflite::RuntimeShape", %"class.tflite::RuntimeShape"* %23, i64 0, i32 1
  %655 = bitcast %union.anon* %654 to i32*
  %656 = sext i32 %642 to i64
  %657 = shl nsw i64 %656, 2
  br label %658

658:                                              ; preds = %653, %646
  %659 = phi i64 [ %648, %646 ], [ %657, %653 ]
  %660 = phi i32* [ %652, %646 ], [ %655, %653 ]
  %661 = bitcast i32* %660 to i8*
  %662 = bitcast i32* %643 to i8*
  call void @llvm.memcpy.p0i8.p0i8.i64(i8* align 4 %661, i8* align 4 %662, i64 %659, i1 false) #8
  %663 = getelementptr inbounds %struct.TfLiteTensor, %struct.TfLiteTensor* %67, i64 0, i32 1, i32 0
  %664 = load i32*, i32** %663, align 8
  br label %665

665:                                              ; preds = %658, %636
  %666 = phi i32* [ %664, %658 ], [ null, %636 ]
  %667 = bitcast %"class.tflite::RuntimeShape"* %24 to i8*
  call void @llvm.lifetime.start.p0i8(i64 32, i8* nonnull %667) #8
  %668 = icmp eq %struct.TfLiteTensor* %79, null
  br i1 %668, label %669, label %671

669:                                              ; preds = %665
  %670 = getelementptr inbounds %"class.tflite::RuntimeShape", %"class.tflite::RuntimeShape"* %24, i64 0, i32 0
  store i32 0, i32* %670, align 8, !alias.scope !605
  br label %1076

671:                                              ; preds = %665
  %672 = getelementptr inbounds %struct.TfLiteTensor, %struct.TfLiteTensor* %79, i64 0, i32 2
  %673 = load %struct.TfLiteIntArray*, %struct.TfLiteIntArray** %672, align 8, !noalias !605
  %674 = getelementptr inbounds %struct.TfLiteIntArray, %struct.TfLiteIntArray* %673, i64 0, i32 0
  %675 = load i32, i32* %674, align 4, !noalias !605
  %676 = getelementptr inbounds %struct.TfLiteIntArray, %struct.TfLiteIntArray* %673, i64 0, i32 1, i64 0
  %677 = getelementptr inbounds %"class.tflite::RuntimeShape", %"class.tflite::RuntimeShape"* %24, i64 0, i32 0
  store i32 %675, i32* %677, align 8, !alias.scope !605
  %678 = icmp sgt i32 %675, 5
  br i1 %678, label %679, label %686

679:                                              ; preds = %671
  %680 = sext i32 %675 to i64
  %681 = shl nsw i64 %680, 2
  %682 = tail call i8* @_Znam(i64 %681) #9, !noalias !605
  %683 = getelementptr inbounds %"class.tflite::RuntimeShape", %"class.tflite::RuntimeShape"* %24, i64 0, i32 1, i32 0
  %684 = bitcast i32** %683 to i8**
  store i8* %682, i8** %684, align 8, !alias.scope !605
  %685 = bitcast i8* %682 to i32*
  br label %691

686:                                              ; preds = %671
  %687 = getelementptr inbounds %"class.tflite::RuntimeShape", %"class.tflite::RuntimeShape"* %24, i64 0, i32 1
  %688 = bitcast %union.anon* %687 to i32*
  %689 = sext i32 %675 to i64
  %690 = shl nsw i64 %689, 2
  br label %691

691:                                              ; preds = %686, %679
  %692 = phi i64 [ %681, %679 ], [ %690, %686 ]
  %693 = phi i32* [ %685, %679 ], [ %688, %686 ]
  %694 = bitcast i32* %693 to i8*
  %695 = bitcast i32* %676 to i8*
  call void @llvm.memcpy.p0i8.p0i8.i64(i8* align 4 %694, i8* align 4 %695, i64 %692, i1 false) #8
  %696 = getelementptr inbounds %struct.TfLiteTensor, %struct.TfLiteTensor* %79, i64 0, i32 1
  %697 = bitcast %union.TfLitePtrUnion* %696 to i8**
  %698 = load i8*, i8** %697, align 8
  br label %1076

699:                                              ; preds = %598
  %700 = bitcast %"class.tflite::RuntimeShape"* %25 to i8*
  call void @llvm.lifetime.start.p0i8(i64 32, i8* nonnull %700) #8
  %701 = icmp eq %struct.TfLiteTensor* %57, null
  br i1 %701, label %702, label %704

702:                                              ; preds = %699
  %703 = getelementptr inbounds %"class.tflite::RuntimeShape", %"class.tflite::RuntimeShape"* %25, i64 0, i32 0
  store i32 0, i32* %703, align 8, !alias.scope !608
  br label %732

704:                                              ; preds = %699
  %705 = getelementptr inbounds %struct.TfLiteTensor, %struct.TfLiteTensor* %57, i64 0, i32 2
  %706 = load %struct.TfLiteIntArray*, %struct.TfLiteIntArray** %705, align 8, !noalias !608
  %707 = getelementptr inbounds %struct.TfLiteIntArray, %struct.TfLiteIntArray* %706, i64 0, i32 0
  %708 = load i32, i32* %707, align 4, !noalias !608
  %709 = getelementptr inbounds %struct.TfLiteIntArray, %struct.TfLiteIntArray* %706, i64 0, i32 1, i64 0
  %710 = getelementptr inbounds %"class.tflite::RuntimeShape", %"class.tflite::RuntimeShape"* %25, i64 0, i32 0
  store i32 %708, i32* %710, align 8, !alias.scope !608
  %711 = icmp sgt i32 %708, 5
  br i1 %711, label %712, label %719

712:                                              ; preds = %704
  %713 = sext i32 %708 to i64
  %714 = shl nsw i64 %713, 2
  %715 = tail call i8* @_Znam(i64 %714) #9, !noalias !608
  %716 = getelementptr inbounds %"class.tflite::RuntimeShape", %"class.tflite::RuntimeShape"* %25, i64 0, i32 1, i32 0
  %717 = bitcast i32** %716 to i8**
  store i8* %715, i8** %717, align 8, !alias.scope !608
  %718 = bitcast i8* %715 to i32*
  br label %724

719:                                              ; preds = %704
  %720 = getelementptr inbounds %"class.tflite::RuntimeShape", %"class.tflite::RuntimeShape"* %25, i64 0, i32 1
  %721 = bitcast %union.anon* %720 to i32*
  %722 = sext i32 %708 to i64
  %723 = shl nsw i64 %722, 2
  br label %724

724:                                              ; preds = %719, %712
  %725 = phi i64 [ %714, %712 ], [ %723, %719 ]
  %726 = phi i32* [ %718, %712 ], [ %721, %719 ]
  %727 = bitcast i32* %726 to i8*
  %728 = bitcast i32* %709 to i8*
  call void @llvm.memcpy.p0i8.p0i8.i64(i8* align 4 %727, i8* align 4 %728, i64 %725, i1 false) #8
  %729 = getelementptr inbounds %struct.TfLiteTensor, %struct.TfLiteTensor* %57, i64 0, i32 1, i32 0
  %730 = load i32*, i32** %729, align 8
  %731 = bitcast i32* %730 to i8*
  br label %732

732:                                              ; preds = %724, %702
  %733 = phi i32 [ %708, %724 ], [ 0, %702 ]
  %734 = phi i8* [ %731, %724 ], [ null, %702 ]
  %735 = phi i32* [ %730, %724 ], [ null, %702 ]
  %736 = bitcast %"class.tflite::RuntimeShape"* %26 to i8*
  call void @llvm.lifetime.start.p0i8(i64 32, i8* nonnull %736) #8
  %737 = icmp eq %struct.TfLiteTensor* %67, null
  br i1 %737, label %738, label %740

738:                                              ; preds = %732
  %739 = getelementptr inbounds %"class.tflite::RuntimeShape", %"class.tflite::RuntimeShape"* %26, i64 0, i32 0
  store i32 0, i32* %739, align 8, !alias.scope !611
  br label %768

740:                                              ; preds = %732
  %741 = getelementptr inbounds %struct.TfLiteTensor, %struct.TfLiteTensor* %67, i64 0, i32 2
  %742 = load %struct.TfLiteIntArray*, %struct.TfLiteIntArray** %741, align 8, !noalias !611
  %743 = getelementptr inbounds %struct.TfLiteIntArray, %struct.TfLiteIntArray* %742, i64 0, i32 0
  %744 = load i32, i32* %743, align 4, !noalias !611
  %745 = getelementptr inbounds %struct.TfLiteIntArray, %struct.TfLiteIntArray* %742, i64 0, i32 1, i64 0
  %746 = getelementptr inbounds %"class.tflite::RuntimeShape", %"class.tflite::RuntimeShape"* %26, i64 0, i32 0
  store i32 %744, i32* %746, align 8, !alias.scope !611
  %747 = icmp sgt i32 %744, 5
  br i1 %747, label %748, label %755

748:                                              ; preds = %740
  %749 = sext i32 %744 to i64
  %750 = shl nsw i64 %749, 2
  %751 = tail call i8* @_Znam(i64 %750) #9, !noalias !611
  %752 = getelementptr inbounds %"class.tflite::RuntimeShape", %"class.tflite::RuntimeShape"* %26, i64 0, i32 1, i32 0
  %753 = bitcast i32** %752 to i8**
  store i8* %751, i8** %753, align 8, !alias.scope !611
  %754 = bitcast i8* %751 to i32*
  br label %760

755:                                              ; preds = %740
  %756 = getelementptr inbounds %"class.tflite::RuntimeShape", %"class.tflite::RuntimeShape"* %26, i64 0, i32 1
  %757 = bitcast %union.anon* %756 to i32*
  %758 = sext i32 %744 to i64
  %759 = shl nsw i64 %758, 2
  br label %760

760:                                              ; preds = %755, %748
  %761 = phi i64 [ %750, %748 ], [ %759, %755 ]
  %762 = phi i32* [ %754, %748 ], [ %757, %755 ]
  %763 = bitcast i32* %762 to i8*
  %764 = bitcast i32* %745 to i8*
  call void @llvm.memcpy.p0i8.p0i8.i64(i8* align 4 %763, i8* align 4 %764, i64 %761, i1 false) #8
  %765 = getelementptr inbounds %struct.TfLiteTensor, %struct.TfLiteTensor* %67, i64 0, i32 1, i32 0
  %766 = load i32*, i32** %765, align 8
  %767 = bitcast i32* %766 to i8*
  br label %768

768:                                              ; preds = %760, %738
  %769 = phi i32 [ %744, %760 ], [ 0, %738 ]
  %770 = phi i8* [ %767, %760 ], [ null, %738 ]
  %771 = phi i32* [ %766, %760 ], [ null, %738 ]
  %772 = bitcast %"class.tflite::RuntimeShape"* %27 to i8*
  call void @llvm.lifetime.start.p0i8(i64 32, i8* nonnull %772) #8
  %773 = icmp eq %struct.TfLiteTensor* %79, null
  br i1 %773, label %774, label %776

774:                                              ; preds = %768
  %775 = getelementptr inbounds %"class.tflite::RuntimeShape", %"class.tflite::RuntimeShape"* %27, i64 0, i32 0
  store i32 0, i32* %775, align 8, !alias.scope !614
  br label %804

776:                                              ; preds = %768
  %777 = getelementptr inbounds %struct.TfLiteTensor, %struct.TfLiteTensor* %79, i64 0, i32 2
  %778 = load %struct.TfLiteIntArray*, %struct.TfLiteIntArray** %777, align 8, !noalias !614
  %779 = getelementptr inbounds %struct.TfLiteIntArray, %struct.TfLiteIntArray* %778, i64 0, i32 0
  %780 = load i32, i32* %779, align 4, !noalias !614
  %781 = getelementptr inbounds %struct.TfLiteIntArray, %struct.TfLiteIntArray* %778, i64 0, i32 1, i64 0
  %782 = getelementptr inbounds %"class.tflite::RuntimeShape", %"class.tflite::RuntimeShape"* %27, i64 0, i32 0
  store i32 %780, i32* %782, align 8, !alias.scope !614
  %783 = icmp sgt i32 %780, 5
  br i1 %783, label %784, label %791

784:                                              ; preds = %776
  %785 = sext i32 %780 to i64
  %786 = shl nsw i64 %785, 2
  %787 = tail call i8* @_Znam(i64 %786) #9, !noalias !614
  %788 = getelementptr inbounds %"class.tflite::RuntimeShape", %"class.tflite::RuntimeShape"* %27, i64 0, i32 1, i32 0
  %789 = bitcast i32** %788 to i8**
  store i8* %787, i8** %789, align 8, !alias.scope !614
  %790 = bitcast i8* %787 to i32*
  br label %796

791:                                              ; preds = %776
  %792 = getelementptr inbounds %"class.tflite::RuntimeShape", %"class.tflite::RuntimeShape"* %27, i64 0, i32 1
  %793 = bitcast %union.anon* %792 to i32*
  %794 = sext i32 %780 to i64
  %795 = shl nsw i64 %794, 2
  br label %796

796:                                              ; preds = %791, %784
  %797 = phi i64 [ %786, %784 ], [ %795, %791 ]
  %798 = phi i32* [ %790, %784 ], [ %793, %791 ]
  %799 = bitcast i32* %798 to i8*
  %800 = bitcast i32* %781 to i8*
  call void @llvm.memcpy.p0i8.p0i8.i64(i8* align 4 %799, i8* align 4 %800, i64 %797, i1 false) #8
  %801 = getelementptr inbounds %struct.TfLiteTensor, %struct.TfLiteTensor* %79, i64 0, i32 1
  %802 = bitcast %union.TfLitePtrUnion* %801 to i8**
  %803 = load i8*, i8** %802, align 8
  br label %804

804:                                              ; preds = %796, %774
  %805 = phi i32 [ %780, %796 ], [ 0, %774 ]
  %806 = phi i8* [ %803, %796 ], [ null, %774 ]
  %807 = getelementptr inbounds %"class.tflite::RuntimeShape", %"class.tflite::RuntimeShape"* %25, i64 0, i32 1
  %808 = icmp sgt i32 %733, 5
  br i1 %808, label %809, label %812

809:                                              ; preds = %804
  %810 = getelementptr inbounds %union.anon, %union.anon* %807, i64 0, i32 0
  %811 = load i32*, i32** %810, align 8
  br label %815

812:                                              ; preds = %804
  %813 = bitcast %union.anon* %807 to i32*
  %814 = icmp sgt i32 %733, 0
  br i1 %814, label %815, label %919

815:                                              ; preds = %812, %809
  %816 = phi i32* [ %811, %809 ], [ %813, %812 ]
  %817 = zext i32 %733 to i64
  %818 = icmp ult i32 %733, 8
  br i1 %818, label %904, label %819

819:                                              ; preds = %815
  %820 = and i64 %817, 4294967288
  %821 = add nsw i64 %820, -8
  %822 = lshr exact i64 %821, 3
  %823 = add nuw nsw i64 %822, 1
  %824 = and i64 %823, 3
  %825 = icmp ult i64 %821, 24
  br i1 %825, label %871, label %826

826:                                              ; preds = %819
  %827 = sub nsw i64 %823, %824
  br label %828

828:                                              ; preds = %828, %826
  %829 = phi i64 [ 0, %826 ], [ %868, %828 ]
  %830 = phi <4 x i32> [ <i32 1, i32 1, i32 1, i32 1>, %826 ], [ %866, %828 ]
  %831 = phi <4 x i32> [ <i32 1, i32 1, i32 1, i32 1>, %826 ], [ %867, %828 ]
  %832 = phi i64 [ %827, %826 ], [ %869, %828 ]
  %833 = getelementptr inbounds i32, i32* %816, i64 %829
  %834 = bitcast i32* %833 to <4 x i32>*
  %835 = load <4 x i32>, <4 x i32>* %834, align 4
  %836 = getelementptr inbounds i32, i32* %833, i64 4
  %837 = bitcast i32* %836 to <4 x i32>*
  %838 = load <4 x i32>, <4 x i32>* %837, align 4
  %839 = mul nsw <4 x i32> %835, %830
  %840 = mul nsw <4 x i32> %838, %831
  %841 = or i64 %829, 8
  %842 = getelementptr inbounds i32, i32* %816, i64 %841
  %843 = bitcast i32* %842 to <4 x i32>*
  %844 = load <4 x i32>, <4 x i32>* %843, align 4
  %845 = getelementptr inbounds i32, i32* %842, i64 4
  %846 = bitcast i32* %845 to <4 x i32>*
  %847 = load <4 x i32>, <4 x i32>* %846, align 4
  %848 = mul nsw <4 x i32> %844, %839
  %849 = mul nsw <4 x i32> %847, %840
  %850 = or i64 %829, 16
  %851 = getelementptr inbounds i32, i32* %816, i64 %850
  %852 = bitcast i32* %851 to <4 x i32>*
  %853 = load <4 x i32>, <4 x i32>* %852, align 4
  %854 = getelementptr inbounds i32, i32* %851, i64 4
  %855 = bitcast i32* %854 to <4 x i32>*
  %856 = load <4 x i32>, <4 x i32>* %855, align 4
  %857 = mul nsw <4 x i32> %853, %848
  %858 = mul nsw <4 x i32> %856, %849
  %859 = or i64 %829, 24
  %860 = getelementptr inbounds i32, i32* %816, i64 %859
  %861 = bitcast i32* %860 to <4 x i32>*
  %862 = load <4 x i32>, <4 x i32>* %861, align 4
  %863 = getelementptr inbounds i32, i32* %860, i64 4
  %864 = bitcast i32* %863 to <4 x i32>*
  %865 = load <4 x i32>, <4 x i32>* %864, align 4
  %866 = mul nsw <4 x i32> %862, %857
  %867 = mul nsw <4 x i32> %865, %858
  %868 = add i64 %829, 32
  %869 = add i64 %832, -4
  %870 = icmp eq i64 %869, 0
  br i1 %870, label %871, label %828, !llvm.loop !617

871:                                              ; preds = %828, %819
  %872 = phi <4 x i32> [ undef, %819 ], [ %866, %828 ]
  %873 = phi <4 x i32> [ undef, %819 ], [ %867, %828 ]
  %874 = phi i64 [ 0, %819 ], [ %868, %828 ]
  %875 = phi <4 x i32> [ <i32 1, i32 1, i32 1, i32 1>, %819 ], [ %866, %828 ]
  %876 = phi <4 x i32> [ <i32 1, i32 1, i32 1, i32 1>, %819 ], [ %867, %828 ]
  %877 = icmp eq i64 %824, 0
  br i1 %877, label %894, label %878

878:                                              ; preds = %871, %878
  %879 = phi i64 [ %891, %878 ], [ %874, %871 ]
  %880 = phi <4 x i32> [ %889, %878 ], [ %875, %871 ]
  %881 = phi <4 x i32> [ %890, %878 ], [ %876, %871 ]
  %882 = phi i64 [ %892, %878 ], [ %824, %871 ]
  %883 = getelementptr inbounds i32, i32* %816, i64 %879
  %884 = bitcast i32* %883 to <4 x i32>*
  %885 = load <4 x i32>, <4 x i32>* %884, align 4
  %886 = getelementptr inbounds i32, i32* %883, i64 4
  %887 = bitcast i32* %886 to <4 x i32>*
  %888 = load <4 x i32>, <4 x i32>* %887, align 4
  %889 = mul nsw <4 x i32> %885, %880
  %890 = mul nsw <4 x i32> %888, %881
  %891 = add i64 %879, 8
  %892 = add i64 %882, -1
  %893 = icmp eq i64 %892, 0
  br i1 %893, label %894, label %878, !llvm.loop !618

894:                                              ; preds = %878, %871
  %895 = phi <4 x i32> [ %872, %871 ], [ %889, %878 ]
  %896 = phi <4 x i32> [ %873, %871 ], [ %890, %878 ]
  %897 = mul <4 x i32> %896, %895
  %898 = shufflevector <4 x i32> %897, <4 x i32> undef, <4 x i32> <i32 2, i32 3, i32 undef, i32 undef>
  %899 = mul <4 x i32> %897, %898
  %900 = shufflevector <4 x i32> %899, <4 x i32> undef, <4 x i32> <i32 1, i32 undef, i32 undef, i32 undef>
  %901 = mul <4 x i32> %899, %900
  %902 = extractelement <4 x i32> %901, i32 0
  %903 = icmp eq i64 %820, %817
  br i1 %903, label %915, label %904

904:                                              ; preds = %894, %815
  %905 = phi i64 [ 0, %815 ], [ %820, %894 ]
  %906 = phi i32 [ 1, %815 ], [ %902, %894 ]
  br label %907

907:                                              ; preds = %904, %907
  %908 = phi i64 [ %913, %907 ], [ %905, %904 ]
  %909 = phi i32 [ %912, %907 ], [ %906, %904 ]
  %910 = getelementptr inbounds i32, i32* %816, i64 %908
  %911 = load i32, i32* %910, align 4
  %912 = mul nsw i32 %911, %909
  %913 = add nuw nsw i64 %908, 1
  %914 = icmp eq i64 %913, %817
  br i1 %914, label %915, label %907, !llvm.loop !619

915:                                              ; preds = %907, %894
  %916 = phi i32 [ %902, %894 ], [ %912, %907 ]
  %917 = sext i32 %916 to i64
  %918 = icmp sgt i32 %916, 0
  br i1 %918, label %919, label %1053

919:                                              ; preds = %915, %812
  %920 = phi i64 [ %917, %915 ], [ 1, %812 ]
  %921 = icmp ult i64 %920, 8
  br i1 %921, label %1017, label %922

922:                                              ; preds = %919
  %923 = getelementptr i8, i8* %806, i64 %920
  %924 = getelementptr i32, i32* %771, i64 %920
  %925 = bitcast i32* %924 to i8*
  %926 = getelementptr i32, i32* %735, i64 %920
  %927 = bitcast i32* %926 to i8*
  %928 = icmp ult i8* %806, %925
  %929 = icmp ult i8* %770, %923
  %930 = and i1 %928, %929
  %931 = icmp ult i8* %806, %927
  %932 = icmp ult i8* %734, %923
  %933 = and i1 %931, %932
  %934 = or i1 %930, %933
  br i1 %934, label %1017, label %935

935:                                              ; preds = %922
  %936 = and i64 %920, -8
  %937 = add nsw i64 %936, -8
  %938 = lshr exact i64 %937, 3
  %939 = add nuw nsw i64 %938, 1
  %940 = and i64 %939, 1
  %941 = icmp eq i64 %937, 0
  br i1 %941, label %991, label %942

942:                                              ; preds = %935
  %943 = sub nuw nsw i64 %939, %940
  br label %944

944:                                              ; preds = %944, %942
  %945 = phi i64 [ 0, %942 ], [ %988, %944 ]
  %946 = phi i64 [ %943, %942 ], [ %989, %944 ]
  %947 = getelementptr inbounds i32, i32* %735, i64 %945
  %948 = bitcast i32* %947 to <4 x i32>*
  %949 = load <4 x i32>, <4 x i32>* %948, align 4, !alias.scope !620
  %950 = getelementptr inbounds i32, i32* %947, i64 4
  %951 = bitcast i32* %950 to <4 x i32>*
  %952 = load <4 x i32>, <4 x i32>* %951, align 4, !alias.scope !620
  %953 = getelementptr inbounds i32, i32* %771, i64 %945
  %954 = bitcast i32* %953 to <4 x i32>*
  %955 = load <4 x i32>, <4 x i32>* %954, align 4, !alias.scope !623
  %956 = getelementptr inbounds i32, i32* %953, i64 4
  %957 = bitcast i32* %956 to <4 x i32>*
  %958 = load <4 x i32>, <4 x i32>* %957, align 4, !alias.scope !623
  %959 = icmp slt <4 x i32> %949, %955
  %960 = icmp slt <4 x i32> %952, %958
  %961 = getelementptr inbounds i8, i8* %806, i64 %945
  %962 = zext <4 x i1> %959 to <4 x i8>
  %963 = zext <4 x i1> %960 to <4 x i8>
  %964 = bitcast i8* %961 to <4 x i8>*
  store <4 x i8> %962, <4 x i8>* %964, align 1, !alias.scope !625, !noalias !627
  %965 = getelementptr inbounds i8, i8* %961, i64 4
  %966 = bitcast i8* %965 to <4 x i8>*
  store <4 x i8> %963, <4 x i8>* %966, align 1, !alias.scope !625, !noalias !627
  %967 = or i64 %945, 8
  %968 = getelementptr inbounds i32, i32* %735, i64 %967
  %969 = bitcast i32* %968 to <4 x i32>*
  %970 = load <4 x i32>, <4 x i32>* %969, align 4, !alias.scope !620
  %971 = getelementptr inbounds i32, i32* %968, i64 4
  %972 = bitcast i32* %971 to <4 x i32>*
  %973 = load <4 x i32>, <4 x i32>* %972, align 4, !alias.scope !620
  %974 = getelementptr inbounds i32, i32* %771, i64 %967
  %975 = bitcast i32* %974 to <4 x i32>*
  %976 = load <4 x i32>, <4 x i32>* %975, align 4, !alias.scope !623
  %977 = getelementptr inbounds i32, i32* %974, i64 4
  %978 = bitcast i32* %977 to <4 x i32>*
  %979 = load <4 x i32>, <4 x i32>* %978, align 4, !alias.scope !623
  %980 = icmp slt <4 x i32> %970, %976
  %981 = icmp slt <4 x i32> %973, %979
  %982 = getelementptr inbounds i8, i8* %806, i64 %967
  %983 = zext <4 x i1> %980 to <4 x i8>
  %984 = zext <4 x i1> %981 to <4 x i8>
  %985 = bitcast i8* %982 to <4 x i8>*
  store <4 x i8> %983, <4 x i8>* %985, align 1, !alias.scope !625, !noalias !627
  %986 = getelementptr inbounds i8, i8* %982, i64 4
  %987 = bitcast i8* %986 to <4 x i8>*
  store <4 x i8> %984, <4 x i8>* %987, align 1, !alias.scope !625, !noalias !627
  %988 = add i64 %945, 16
  %989 = add i64 %946, -2
  %990 = icmp eq i64 %989, 0
  br i1 %990, label %991, label %944, !llvm.loop !628

991:                                              ; preds = %944, %935
  %992 = phi i64 [ 0, %935 ], [ %988, %944 ]
  %993 = icmp eq i64 %940, 0
  br i1 %993, label %1015, label %994

994:                                              ; preds = %991
  %995 = getelementptr inbounds i32, i32* %735, i64 %992
  %996 = bitcast i32* %995 to <4 x i32>*
  %997 = load <4 x i32>, <4 x i32>* %996, align 4, !alias.scope !620
  %998 = getelementptr inbounds i32, i32* %995, i64 4
  %999 = bitcast i32* %998 to <4 x i32>*
  %1000 = load <4 x i32>, <4 x i32>* %999, align 4, !alias.scope !620
  %1001 = getelementptr inbounds i32, i32* %771, i64 %992
  %1002 = bitcast i32* %1001 to <4 x i32>*
  %1003 = load <4 x i32>, <4 x i32>* %1002, align 4, !alias.scope !623
  %1004 = getelementptr inbounds i32, i32* %1001, i64 4
  %1005 = bitcast i32* %1004 to <4 x i32>*
  %1006 = load <4 x i32>, <4 x i32>* %1005, align 4, !alias.scope !623
  %1007 = icmp slt <4 x i32> %997, %1003
  %1008 = icmp slt <4 x i32> %1000, %1006
  %1009 = getelementptr inbounds i8, i8* %806, i64 %992
  %1010 = zext <4 x i1> %1007 to <4 x i8>
  %1011 = zext <4 x i1> %1008 to <4 x i8>
  %1012 = bitcast i8* %1009 to <4 x i8>*
  store <4 x i8> %1010, <4 x i8>* %1012, align 1, !alias.scope !625, !noalias !627
  %1013 = getelementptr inbounds i8, i8* %1009, i64 4
  %1014 = bitcast i8* %1013 to <4 x i8>*
  store <4 x i8> %1011, <4 x i8>* %1014, align 1, !alias.scope !625, !noalias !627
  br label %1015

1015:                                             ; preds = %991, %994
  %1016 = icmp eq i64 %920, %936
  br i1 %1016, label %1053, label %1017

1017:                                             ; preds = %1015, %922, %919
  %1018 = phi i64 [ 0, %922 ], [ 0, %919 ], [ %936, %1015 ]
  %1019 = and i64 %920, 1
  %1020 = icmp eq i64 %1019, 0
  br i1 %1020, label %1030, label %1021

1021:                                             ; preds = %1017
  %1022 = getelementptr inbounds i32, i32* %735, i64 %1018
  %1023 = load i32, i32* %1022, align 4
  %1024 = getelementptr inbounds i32, i32* %771, i64 %1018
  %1025 = load i32, i32* %1024, align 4
  %1026 = icmp slt i32 %1023, %1025
  %1027 = getelementptr inbounds i8, i8* %806, i64 %1018
  %1028 = zext i1 %1026 to i8
  store i8 %1028, i8* %1027, align 1
  %1029 = or i64 %1018, 1
  br label %1030

1030:                                             ; preds = %1017, %1021
  %1031 = phi i64 [ %1018, %1017 ], [ %1029, %1021 ]
  %1032 = or i64 %1018, 1
  %1033 = icmp eq i64 %920, %1032
  br i1 %1033, label %1053, label %1034

1034:                                             ; preds = %1030, %1034
  %1035 = phi i64 [ %1051, %1034 ], [ %1031, %1030 ]
  %1036 = getelementptr inbounds i32, i32* %735, i64 %1035
  %1037 = load i32, i32* %1036, align 4
  %1038 = getelementptr inbounds i32, i32* %771, i64 %1035
  %1039 = load i32, i32* %1038, align 4
  %1040 = icmp slt i32 %1037, %1039
  %1041 = getelementptr inbounds i8, i8* %806, i64 %1035
  %1042 = zext i1 %1040 to i8
  store i8 %1042, i8* %1041, align 1
  %1043 = add nuw nsw i64 %1035, 1
  %1044 = getelementptr inbounds i32, i32* %735, i64 %1043
  %1045 = load i32, i32* %1044, align 4
  %1046 = getelementptr inbounds i32, i32* %771, i64 %1043
  %1047 = load i32, i32* %1046, align 4
  %1048 = icmp slt i32 %1045, %1047
  %1049 = getelementptr inbounds i8, i8* %806, i64 %1043
  %1050 = zext i1 %1048 to i8
  store i8 %1050, i8* %1049, align 1
  %1051 = add nuw nsw i64 %1035, 2
  %1052 = icmp eq i64 %1051, %920
  br i1 %1052, label %1053, label %1034, !llvm.loop !629

1053:                                             ; preds = %1030, %1034, %1015, %915
  %1054 = icmp sgt i32 %805, 5
  br i1 %1054, label %1055, label %1061

1055:                                             ; preds = %1053
  %1056 = getelementptr inbounds %"class.tflite::RuntimeShape", %"class.tflite::RuntimeShape"* %27, i64 0, i32 1, i32 0
  %1057 = load i32*, i32** %1056, align 8
  %1058 = icmp eq i32* %1057, null
  br i1 %1058, label %1061, label %1059

1059:                                             ; preds = %1055
  %1060 = bitcast i32* %1057 to i8*
  tail call void @_ZdaPv(i8* %1060) #9
  br label %1061

1061:                                             ; preds = %1059, %1055, %1053
  call void @llvm.lifetime.end.p0i8(i64 32, i8* nonnull %772) #8
  %1062 = icmp sgt i32 %769, 5
  br i1 %1062, label %1063, label %1069

1063:                                             ; preds = %1061
  %1064 = getelementptr inbounds %"class.tflite::RuntimeShape", %"class.tflite::RuntimeShape"* %26, i64 0, i32 1, i32 0
  %1065 = load i32*, i32** %1064, align 8
  %1066 = icmp eq i32* %1065, null
  br i1 %1066, label %1069, label %1067

1067:                                             ; preds = %1063
  %1068 = bitcast i32* %1065 to i8*
  tail call void @_ZdaPv(i8* %1068) #9
  br label %1069

1069:                                             ; preds = %1067, %1063, %1061
  call void @llvm.lifetime.end.p0i8(i64 32, i8* nonnull %736) #8
  br i1 %808, label %1070, label %1107

1070:                                             ; preds = %1069
  %1071 = getelementptr inbounds %"class.tflite::RuntimeShape", %"class.tflite::RuntimeShape"* %25, i64 0, i32 1, i32 0
  %1072 = load i32*, i32** %1071, align 8
  %1073 = icmp eq i32* %1072, null
  br i1 %1073, label %1107, label %1074

1074:                                             ; preds = %1070
  %1075 = bitcast i32* %1072 to i8*
  tail call void @_ZdaPv(i8* %1075) #9
  br label %1107

1076:                                             ; preds = %691, %669
  %1077 = phi i8* [ %698, %691 ], [ null, %669 ]
  call void @_ZN6tflite13reference_ops29BroadcastComparison4DSlowImplIiXadL_ZNS0_6LessFnIiEEbT_S3_EEEEvRKNS_16ComparisonParamsERKNS_12RuntimeShapeEPKS3_S9_SB_S9_Pb(%"struct.tflite::ComparisonParams"* nonnull dereferenceable(32) %21, %"class.tflite::RuntimeShape"* nonnull dereferenceable(32) %22, i32* %633, %"class.tflite::RuntimeShape"* nonnull dereferenceable(32) %23, i32* %666, %"class.tflite::RuntimeShape"* nonnull dereferenceable(32) %24, i8* %1077) #8
  %1078 = getelementptr inbounds %"class.tflite::RuntimeShape", %"class.tflite::RuntimeShape"* %24, i64 0, i32 0
  %1079 = load i32, i32* %1078, align 8
  %1080 = icmp sgt i32 %1079, 5
  br i1 %1080, label %1081, label %1087

1081:                                             ; preds = %1076
  %1082 = getelementptr inbounds %"class.tflite::RuntimeShape", %"class.tflite::RuntimeShape"* %24, i64 0, i32 1, i32 0
  %1083 = load i32*, i32** %1082, align 8
  %1084 = icmp eq i32* %1083, null
  br i1 %1084, label %1087, label %1085

1085:                                             ; preds = %1081
  %1086 = bitcast i32* %1083 to i8*
  call void @_ZdaPv(i8* %1086) #9
  br label %1087

1087:                                             ; preds = %1085, %1081, %1076
  call void @llvm.lifetime.end.p0i8(i64 32, i8* nonnull %667) #8
  %1088 = getelementptr inbounds %"class.tflite::RuntimeShape", %"class.tflite::RuntimeShape"* %23, i64 0, i32 0
  %1089 = load i32, i32* %1088, align 8
  %1090 = icmp sgt i32 %1089, 5
  br i1 %1090, label %1091, label %1097

1091:                                             ; preds = %1087
  %1092 = getelementptr inbounds %"class.tflite::RuntimeShape", %"class.tflite::RuntimeShape"* %23, i64 0, i32 1, i32 0
  %1093 = load i32*, i32** %1092, align 8
  %1094 = icmp eq i32* %1093, null
  br i1 %1094, label %1097, label %1095

1095:                                             ; preds = %1091
  %1096 = bitcast i32* %1093 to i8*
  call void @_ZdaPv(i8* %1096) #9
  br label %1097

1097:                                             ; preds = %1095, %1091, %1087
  call void @llvm.lifetime.end.p0i8(i64 32, i8* nonnull %634) #8
  %1098 = getelementptr inbounds %"class.tflite::RuntimeShape", %"class.tflite::RuntimeShape"* %22, i64 0, i32 0
  %1099 = load i32, i32* %1098, align 8
  %1100 = icmp sgt i32 %1099, 5
  br i1 %1100, label %1101, label %1107

1101:                                             ; preds = %1097
  %1102 = getelementptr inbounds %"class.tflite::RuntimeShape", %"class.tflite::RuntimeShape"* %22, i64 0, i32 1, i32 0
  %1103 = load i32*, i32** %1102, align 8
  %1104 = icmp eq i32* %1103, null
  br i1 %1104, label %1107, label %1105

1105:                                             ; preds = %1101
  %1106 = bitcast i32* %1103 to i8*
  call void @_ZdaPv(i8* %1106) #9
  br label %1107

1107:                                             ; preds = %1097, %1101, %1105, %1069, %1070, %1074
  %1108 = phi i8* [ %700, %1074 ], [ %700, %1070 ], [ %700, %1069 ], [ %601, %1105 ], [ %601, %1101 ], [ %601, %1097 ]
  call void @llvm.lifetime.end.p0i8(i64 32, i8* nonnull %1108) #8
  call void @llvm.lifetime.end.p0i8(i64 32, i8* nonnull %599) #8
  br label %2493

1109:                                             ; preds = %78
  %1110 = bitcast %"struct.tflite::ComparisonParams"* %14 to i8*
  call void @llvm.lifetime.start.p0i8(i64 32, i8* nonnull %1110) #8
  call void @llvm.memset.p0i8.i64(i8* nonnull align 4 %1110, i8 -86, i64 32, i1 false) #8
  br i1 %80, label %1212, label %1111

1111:                                             ; preds = %1109
  %1112 = bitcast %"class.tflite::RuntimeShape"* %15 to i8*
  call void @llvm.lifetime.start.p0i8(i64 32, i8* nonnull %1112) #8
  %1113 = icmp eq %struct.TfLiteTensor* %57, null
  br i1 %1113, label %1114, label %1116

1114:                                             ; preds = %1111
  %1115 = getelementptr inbounds %"class.tflite::RuntimeShape", %"class.tflite::RuntimeShape"* %15, i64 0, i32 0
  store i32 0, i32* %1115, align 8, !alias.scope !630
  br label %1144

1116:                                             ; preds = %1111
  %1117 = getelementptr inbounds %struct.TfLiteTensor, %struct.TfLiteTensor* %57, i64 0, i32 2
  %1118 = load %struct.TfLiteIntArray*, %struct.TfLiteIntArray** %1117, align 8, !noalias !630
  %1119 = getelementptr inbounds %struct.TfLiteIntArray, %struct.TfLiteIntArray* %1118, i64 0, i32 0
  %1120 = load i32, i32* %1119, align 4, !noalias !630
  %1121 = getelementptr inbounds %struct.TfLiteIntArray, %struct.TfLiteIntArray* %1118, i64 0, i32 1, i64 0
  %1122 = getelementptr inbounds %"class.tflite::RuntimeShape", %"class.tflite::RuntimeShape"* %15, i64 0, i32 0
  store i32 %1120, i32* %1122, align 8, !alias.scope !630
  %1123 = icmp sgt i32 %1120, 5
  br i1 %1123, label %1124, label %1131

1124:                                             ; preds = %1116
  %1125 = sext i32 %1120 to i64
  %1126 = shl nsw i64 %1125, 2
  %1127 = tail call i8* @_Znam(i64 %1126) #9, !noalias !630
  %1128 = getelementptr inbounds %"class.tflite::RuntimeShape", %"class.tflite::RuntimeShape"* %15, i64 0, i32 1, i32 0
  %1129 = bitcast i32** %1128 to i8**
  store i8* %1127, i8** %1129, align 8, !alias.scope !630
  %1130 = bitcast i8* %1127 to i32*
  br label %1136

1131:                                             ; preds = %1116
  %1132 = getelementptr inbounds %"class.tflite::RuntimeShape", %"class.tflite::RuntimeShape"* %15, i64 0, i32 1
  %1133 = bitcast %union.anon* %1132 to i32*
  %1134 = sext i32 %1120 to i64
  %1135 = shl nsw i64 %1134, 2
  br label %1136

1136:                                             ; preds = %1131, %1124
  %1137 = phi i64 [ %1126, %1124 ], [ %1135, %1131 ]
  %1138 = phi i32* [ %1130, %1124 ], [ %1133, %1131 ]
  %1139 = bitcast i32* %1138 to i8*
  %1140 = bitcast i32* %1121 to i8*
  call void @llvm.memcpy.p0i8.p0i8.i64(i8* align 4 %1139, i8* align 4 %1140, i64 %1137, i1 false) #8
  %1141 = getelementptr inbounds %struct.TfLiteTensor, %struct.TfLiteTensor* %57, i64 0, i32 1
  %1142 = bitcast %union.TfLitePtrUnion* %1141 to i64**
  %1143 = load i64*, i64** %1142, align 8
  br label %1144

1144:                                             ; preds = %1136, %1114
  %1145 = phi i64* [ %1143, %1136 ], [ null, %1114 ]
  %1146 = bitcast %"class.tflite::RuntimeShape"* %16 to i8*
  call void @llvm.lifetime.start.p0i8(i64 32, i8* nonnull %1146) #8
  %1147 = icmp eq %struct.TfLiteTensor* %67, null
  br i1 %1147, label %1148, label %1150

1148:                                             ; preds = %1144
  %1149 = getelementptr inbounds %"class.tflite::RuntimeShape", %"class.tflite::RuntimeShape"* %16, i64 0, i32 0
  store i32 0, i32* %1149, align 8, !alias.scope !633
  br label %1178

1150:                                             ; preds = %1144
  %1151 = getelementptr inbounds %struct.TfLiteTensor, %struct.TfLiteTensor* %67, i64 0, i32 2
  %1152 = load %struct.TfLiteIntArray*, %struct.TfLiteIntArray** %1151, align 8, !noalias !633
  %1153 = getelementptr inbounds %struct.TfLiteIntArray, %struct.TfLiteIntArray* %1152, i64 0, i32 0
  %1154 = load i32, i32* %1153, align 4, !noalias !633
  %1155 = getelementptr inbounds %struct.TfLiteIntArray, %struct.TfLiteIntArray* %1152, i64 0, i32 1, i64 0
  %1156 = getelementptr inbounds %"class.tflite::RuntimeShape", %"class.tflite::RuntimeShape"* %16, i64 0, i32 0
  store i32 %1154, i32* %1156, align 8, !alias.scope !633
  %1157 = icmp sgt i32 %1154, 5
  br i1 %1157, label %1158, label %1165

1158:                                             ; preds = %1150
  %1159 = sext i32 %1154 to i64
  %1160 = shl nsw i64 %1159, 2
  %1161 = tail call i8* @_Znam(i64 %1160) #9, !noalias !633
  %1162 = getelementptr inbounds %"class.tflite::RuntimeShape", %"class.tflite::RuntimeShape"* %16, i64 0, i32 1, i32 0
  %1163 = bitcast i32** %1162 to i8**
  store i8* %1161, i8** %1163, align 8, !alias.scope !633
  %1164 = bitcast i8* %1161 to i32*
  br label %1170

1165:                                             ; preds = %1150
  %1166 = getelementptr inbounds %"class.tflite::RuntimeShape", %"class.tflite::RuntimeShape"* %16, i64 0, i32 1
  %1167 = bitcast %union.anon* %1166 to i32*
  %1168 = sext i32 %1154 to i64
  %1169 = shl nsw i64 %1168, 2
  br label %1170

1170:                                             ; preds = %1165, %1158
  %1171 = phi i64 [ %1160, %1158 ], [ %1169, %1165 ]
  %1172 = phi i32* [ %1164, %1158 ], [ %1167, %1165 ]
  %1173 = bitcast i32* %1172 to i8*
  %1174 = bitcast i32* %1155 to i8*
  call void @llvm.memcpy.p0i8.p0i8.i64(i8* align 4 %1173, i8* align 4 %1174, i64 %1171, i1 false) #8
  %1175 = getelementptr inbounds %struct.TfLiteTensor, %struct.TfLiteTensor* %67, i64 0, i32 1
  %1176 = bitcast %union.TfLitePtrUnion* %1175 to i64**
  %1177 = load i64*, i64** %1176, align 8
  br label %1178

1178:                                             ; preds = %1170, %1148
  %1179 = phi i64* [ %1177, %1170 ], [ null, %1148 ]
  %1180 = bitcast %"class.tflite::RuntimeShape"* %17 to i8*
  call void @llvm.lifetime.start.p0i8(i64 32, i8* nonnull %1180) #8
  %1181 = icmp eq %struct.TfLiteTensor* %79, null
  br i1 %1181, label %1182, label %1184

1182:                                             ; preds = %1178
  %1183 = getelementptr inbounds %"class.tflite::RuntimeShape", %"class.tflite::RuntimeShape"* %17, i64 0, i32 0
  store i32 0, i32* %1183, align 8, !alias.scope !636
  br label %1491

1184:                                             ; preds = %1178
  %1185 = getelementptr inbounds %struct.TfLiteTensor, %struct.TfLiteTensor* %79, i64 0, i32 2
  %1186 = load %struct.TfLiteIntArray*, %struct.TfLiteIntArray** %1185, align 8, !noalias !636
  %1187 = getelementptr inbounds %struct.TfLiteIntArray, %struct.TfLiteIntArray* %1186, i64 0, i32 0
  %1188 = load i32, i32* %1187, align 4, !noalias !636
  %1189 = getelementptr inbounds %struct.TfLiteIntArray, %struct.TfLiteIntArray* %1186, i64 0, i32 1, i64 0
  %1190 = getelementptr inbounds %"class.tflite::RuntimeShape", %"class.tflite::RuntimeShape"* %17, i64 0, i32 0
  store i32 %1188, i32* %1190, align 8, !alias.scope !636
  %1191 = icmp sgt i32 %1188, 5
  br i1 %1191, label %1192, label %1199

1192:                                             ; preds = %1184
  %1193 = sext i32 %1188 to i64
  %1194 = shl nsw i64 %1193, 2
  %1195 = tail call i8* @_Znam(i64 %1194) #9, !noalias !636
  %1196 = getelementptr inbounds %"class.tflite::RuntimeShape", %"class.tflite::RuntimeShape"* %17, i64 0, i32 1, i32 0
  %1197 = bitcast i32** %1196 to i8**
  store i8* %1195, i8** %1197, align 8, !alias.scope !636
  %1198 = bitcast i8* %1195 to i32*
  br label %1204

1199:                                             ; preds = %1184
  %1200 = getelementptr inbounds %"class.tflite::RuntimeShape", %"class.tflite::RuntimeShape"* %17, i64 0, i32 1
  %1201 = bitcast %union.anon* %1200 to i32*
  %1202 = sext i32 %1188 to i64
  %1203 = shl nsw i64 %1202, 2
  br label %1204

1204:                                             ; preds = %1199, %1192
  %1205 = phi i64 [ %1194, %1192 ], [ %1203, %1199 ]
  %1206 = phi i32* [ %1198, %1192 ], [ %1201, %1199 ]
  %1207 = bitcast i32* %1206 to i8*
  %1208 = bitcast i32* %1189 to i8*
  call void @llvm.memcpy.p0i8.p0i8.i64(i8* align 4 %1207, i8* align 4 %1208, i64 %1205, i1 false) #8
  %1209 = getelementptr inbounds %struct.TfLiteTensor, %struct.TfLiteTensor* %79, i64 0, i32 1
  %1210 = bitcast %union.TfLitePtrUnion* %1209 to i8**
  %1211 = load i8*, i8** %1210, align 8
  br label %1491

1212:                                             ; preds = %1109
  %1213 = bitcast %"class.tflite::RuntimeShape"* %18 to i8*
  call void @llvm.lifetime.start.p0i8(i64 32, i8* nonnull %1213) #8
  %1214 = icmp eq %struct.TfLiteTensor* %57, null
  br i1 %1214, label %1215, label %1217

1215:                                             ; preds = %1212
  %1216 = getelementptr inbounds %"class.tflite::RuntimeShape", %"class.tflite::RuntimeShape"* %18, i64 0, i32 0
  store i32 0, i32* %1216, align 8, !alias.scope !639
  br label %1245

1217:                                             ; preds = %1212
  %1218 = getelementptr inbounds %struct.TfLiteTensor, %struct.TfLiteTensor* %57, i64 0, i32 2
  %1219 = load %struct.TfLiteIntArray*, %struct.TfLiteIntArray** %1218, align 8, !noalias !639
  %1220 = getelementptr inbounds %struct.TfLiteIntArray, %struct.TfLiteIntArray* %1219, i64 0, i32 0
  %1221 = load i32, i32* %1220, align 4, !noalias !639
  %1222 = getelementptr inbounds %struct.TfLiteIntArray, %struct.TfLiteIntArray* %1219, i64 0, i32 1, i64 0
  %1223 = getelementptr inbounds %"class.tflite::RuntimeShape", %"class.tflite::RuntimeShape"* %18, i64 0, i32 0
  store i32 %1221, i32* %1223, align 8, !alias.scope !639
  %1224 = icmp sgt i32 %1221, 5
  br i1 %1224, label %1225, label %1232

1225:                                             ; preds = %1217
  %1226 = sext i32 %1221 to i64
  %1227 = shl nsw i64 %1226, 2
  %1228 = tail call i8* @_Znam(i64 %1227) #9, !noalias !639
  %1229 = getelementptr inbounds %"class.tflite::RuntimeShape", %"class.tflite::RuntimeShape"* %18, i64 0, i32 1, i32 0
  %1230 = bitcast i32** %1229 to i8**
  store i8* %1228, i8** %1230, align 8, !alias.scope !639
  %1231 = bitcast i8* %1228 to i32*
  br label %1237

1232:                                             ; preds = %1217
  %1233 = getelementptr inbounds %"class.tflite::RuntimeShape", %"class.tflite::RuntimeShape"* %18, i64 0, i32 1
  %1234 = bitcast %union.anon* %1233 to i32*
  %1235 = sext i32 %1221 to i64
  %1236 = shl nsw i64 %1235, 2
  br label %1237

1237:                                             ; preds = %1232, %1225
  %1238 = phi i64 [ %1227, %1225 ], [ %1236, %1232 ]
  %1239 = phi i32* [ %1231, %1225 ], [ %1234, %1232 ]
  %1240 = bitcast i32* %1239 to i8*
  %1241 = bitcast i32* %1222 to i8*
  call void @llvm.memcpy.p0i8.p0i8.i64(i8* align 4 %1240, i8* align 4 %1241, i64 %1238, i1 false) #8
  %1242 = getelementptr inbounds %struct.TfLiteTensor, %struct.TfLiteTensor* %57, i64 0, i32 1
  %1243 = bitcast %union.TfLitePtrUnion* %1242 to i64**
  %1244 = load i64*, i64** %1243, align 8
  br label %1245

1245:                                             ; preds = %1237, %1215
  %1246 = phi i32 [ %1221, %1237 ], [ 0, %1215 ]
  %1247 = phi i64* [ %1244, %1237 ], [ null, %1215 ]
  %1248 = bitcast %"class.tflite::RuntimeShape"* %19 to i8*
  call void @llvm.lifetime.start.p0i8(i64 32, i8* nonnull %1248) #8
  %1249 = icmp eq %struct.TfLiteTensor* %67, null
  br i1 %1249, label %1250, label %1252

1250:                                             ; preds = %1245
  %1251 = getelementptr inbounds %"class.tflite::RuntimeShape", %"class.tflite::RuntimeShape"* %19, i64 0, i32 0
  store i32 0, i32* %1251, align 8, !alias.scope !642
  br label %1280

1252:                                             ; preds = %1245
  %1253 = getelementptr inbounds %struct.TfLiteTensor, %struct.TfLiteTensor* %67, i64 0, i32 2
  %1254 = load %struct.TfLiteIntArray*, %struct.TfLiteIntArray** %1253, align 8, !noalias !642
  %1255 = getelementptr inbounds %struct.TfLiteIntArray, %struct.TfLiteIntArray* %1254, i64 0, i32 0
  %1256 = load i32, i32* %1255, align 4, !noalias !642
  %1257 = getelementptr inbounds %struct.TfLiteIntArray, %struct.TfLiteIntArray* %1254, i64 0, i32 1, i64 0
  %1258 = getelementptr inbounds %"class.tflite::RuntimeShape", %"class.tflite::RuntimeShape"* %19, i64 0, i32 0
  store i32 %1256, i32* %1258, align 8, !alias.scope !642
  %1259 = icmp sgt i32 %1256, 5
  br i1 %1259, label %1260, label %1267

1260:                                             ; preds = %1252
  %1261 = sext i32 %1256 to i64
  %1262 = shl nsw i64 %1261, 2
  %1263 = tail call i8* @_Znam(i64 %1262) #9, !noalias !642
  %1264 = getelementptr inbounds %"class.tflite::RuntimeShape", %"class.tflite::RuntimeShape"* %19, i64 0, i32 1, i32 0
  %1265 = bitcast i32** %1264 to i8**
  store i8* %1263, i8** %1265, align 8, !alias.scope !642
  %1266 = bitcast i8* %1263 to i32*
  br label %1272

1267:                                             ; preds = %1252
  %1268 = getelementptr inbounds %"class.tflite::RuntimeShape", %"class.tflite::RuntimeShape"* %19, i64 0, i32 1
  %1269 = bitcast %union.anon* %1268 to i32*
  %1270 = sext i32 %1256 to i64
  %1271 = shl nsw i64 %1270, 2
  br label %1272

1272:                                             ; preds = %1267, %1260
  %1273 = phi i64 [ %1262, %1260 ], [ %1271, %1267 ]
  %1274 = phi i32* [ %1266, %1260 ], [ %1269, %1267 ]
  %1275 = bitcast i32* %1274 to i8*
  %1276 = bitcast i32* %1257 to i8*
  call void @llvm.memcpy.p0i8.p0i8.i64(i8* align 4 %1275, i8* align 4 %1276, i64 %1273, i1 false) #8
  %1277 = getelementptr inbounds %struct.TfLiteTensor, %struct.TfLiteTensor* %67, i64 0, i32 1
  %1278 = bitcast %union.TfLitePtrUnion* %1277 to i64**
  %1279 = load i64*, i64** %1278, align 8
  br label %1280

1280:                                             ; preds = %1272, %1250
  %1281 = phi i32 [ %1256, %1272 ], [ 0, %1250 ]
  %1282 = phi i64* [ %1279, %1272 ], [ null, %1250 ]
  %1283 = bitcast %"class.tflite::RuntimeShape"* %20 to i8*
  call void @llvm.lifetime.start.p0i8(i64 32, i8* nonnull %1283) #8
  %1284 = icmp eq %struct.TfLiteTensor* %79, null
  br i1 %1284, label %1285, label %1287

1285:                                             ; preds = %1280
  %1286 = getelementptr inbounds %"class.tflite::RuntimeShape", %"class.tflite::RuntimeShape"* %20, i64 0, i32 0
  store i32 0, i32* %1286, align 8, !alias.scope !645
  br label %1315

1287:                                             ; preds = %1280
  %1288 = getelementptr inbounds %struct.TfLiteTensor, %struct.TfLiteTensor* %79, i64 0, i32 2
  %1289 = load %struct.TfLiteIntArray*, %struct.TfLiteIntArray** %1288, align 8, !noalias !645
  %1290 = getelementptr inbounds %struct.TfLiteIntArray, %struct.TfLiteIntArray* %1289, i64 0, i32 0
  %1291 = load i32, i32* %1290, align 4, !noalias !645
  %1292 = getelementptr inbounds %struct.TfLiteIntArray, %struct.TfLiteIntArray* %1289, i64 0, i32 1, i64 0
  %1293 = getelementptr inbounds %"class.tflite::RuntimeShape", %"class.tflite::RuntimeShape"* %20, i64 0, i32 0
  store i32 %1291, i32* %1293, align 8, !alias.scope !645
  %1294 = icmp sgt i32 %1291, 5
  br i1 %1294, label %1295, label %1302

1295:                                             ; preds = %1287
  %1296 = sext i32 %1291 to i64
  %1297 = shl nsw i64 %1296, 2
  %1298 = tail call i8* @_Znam(i64 %1297) #9, !noalias !645
  %1299 = getelementptr inbounds %"class.tflite::RuntimeShape", %"class.tflite::RuntimeShape"* %20, i64 0, i32 1, i32 0
  %1300 = bitcast i32** %1299 to i8**
  store i8* %1298, i8** %1300, align 8, !alias.scope !645
  %1301 = bitcast i8* %1298 to i32*
  br label %1307

1302:                                             ; preds = %1287
  %1303 = getelementptr inbounds %"class.tflite::RuntimeShape", %"class.tflite::RuntimeShape"* %20, i64 0, i32 1
  %1304 = bitcast %union.anon* %1303 to i32*
  %1305 = sext i32 %1291 to i64
  %1306 = shl nsw i64 %1305, 2
  br label %1307

1307:                                             ; preds = %1302, %1295
  %1308 = phi i64 [ %1297, %1295 ], [ %1306, %1302 ]
  %1309 = phi i32* [ %1301, %1295 ], [ %1304, %1302 ]
  %1310 = bitcast i32* %1309 to i8*
  %1311 = bitcast i32* %1292 to i8*
  call void @llvm.memcpy.p0i8.p0i8.i64(i8* align 4 %1310, i8* align 4 %1311, i64 %1308, i1 false) #8
  %1312 = getelementptr inbounds %struct.TfLiteTensor, %struct.TfLiteTensor* %79, i64 0, i32 1
  %1313 = bitcast %union.TfLitePtrUnion* %1312 to i8**
  %1314 = load i8*, i8** %1313, align 8
  br label %1315

1315:                                             ; preds = %1307, %1285
  %1316 = phi i32 [ %1291, %1307 ], [ 0, %1285 ]
  %1317 = phi i8* [ %1314, %1307 ], [ null, %1285 ]
  %1318 = getelementptr inbounds %"class.tflite::RuntimeShape", %"class.tflite::RuntimeShape"* %18, i64 0, i32 1
  %1319 = icmp sgt i32 %1246, 5
  br i1 %1319, label %1320, label %1323

1320:                                             ; preds = %1315
  %1321 = getelementptr inbounds %union.anon, %union.anon* %1318, i64 0, i32 0
  %1322 = load i32*, i32** %1321, align 8
  br label %1326

1323:                                             ; preds = %1315
  %1324 = bitcast %union.anon* %1318 to i32*
  %1325 = icmp sgt i32 %1246, 0
  br i1 %1325, label %1326, label %1430

1326:                                             ; preds = %1323, %1320
  %1327 = phi i32* [ %1322, %1320 ], [ %1324, %1323 ]
  %1328 = zext i32 %1246 to i64
  %1329 = icmp ult i32 %1246, 8
  br i1 %1329, label %1415, label %1330

1330:                                             ; preds = %1326
  %1331 = and i64 %1328, 4294967288
  %1332 = add nsw i64 %1331, -8
  %1333 = lshr exact i64 %1332, 3
  %1334 = add nuw nsw i64 %1333, 1
  %1335 = and i64 %1334, 3
  %1336 = icmp ult i64 %1332, 24
  br i1 %1336, label %1382, label %1337

1337:                                             ; preds = %1330
  %1338 = sub nsw i64 %1334, %1335
  br label %1339

1339:                                             ; preds = %1339, %1337
  %1340 = phi i64 [ 0, %1337 ], [ %1379, %1339 ]
  %1341 = phi <4 x i32> [ <i32 1, i32 1, i32 1, i32 1>, %1337 ], [ %1377, %1339 ]
  %1342 = phi <4 x i32> [ <i32 1, i32 1, i32 1, i32 1>, %1337 ], [ %1378, %1339 ]
  %1343 = phi i64 [ %1338, %1337 ], [ %1380, %1339 ]
  %1344 = getelementptr inbounds i32, i32* %1327, i64 %1340
  %1345 = bitcast i32* %1344 to <4 x i32>*
  %1346 = load <4 x i32>, <4 x i32>* %1345, align 4
  %1347 = getelementptr inbounds i32, i32* %1344, i64 4
  %1348 = bitcast i32* %1347 to <4 x i32>*
  %1349 = load <4 x i32>, <4 x i32>* %1348, align 4
  %1350 = mul nsw <4 x i32> %1346, %1341
  %1351 = mul nsw <4 x i32> %1349, %1342
  %1352 = or i64 %1340, 8
  %1353 = getelementptr inbounds i32, i32* %1327, i64 %1352
  %1354 = bitcast i32* %1353 to <4 x i32>*
  %1355 = load <4 x i32>, <4 x i32>* %1354, align 4
  %1356 = getelementptr inbounds i32, i32* %1353, i64 4
  %1357 = bitcast i32* %1356 to <4 x i32>*
  %1358 = load <4 x i32>, <4 x i32>* %1357, align 4
  %1359 = mul nsw <4 x i32> %1355, %1350
  %1360 = mul nsw <4 x i32> %1358, %1351
  %1361 = or i64 %1340, 16
  %1362 = getelementptr inbounds i32, i32* %1327, i64 %1361
  %1363 = bitcast i32* %1362 to <4 x i32>*
  %1364 = load <4 x i32>, <4 x i32>* %1363, align 4
  %1365 = getelementptr inbounds i32, i32* %1362, i64 4
  %1366 = bitcast i32* %1365 to <4 x i32>*
  %1367 = load <4 x i32>, <4 x i32>* %1366, align 4
  %1368 = mul nsw <4 x i32> %1364, %1359
  %1369 = mul nsw <4 x i32> %1367, %1360
  %1370 = or i64 %1340, 24
  %1371 = getelementptr inbounds i32, i32* %1327, i64 %1370
  %1372 = bitcast i32* %1371 to <4 x i32>*
  %1373 = load <4 x i32>, <4 x i32>* %1372, align 4
  %1374 = getelementptr inbounds i32, i32* %1371, i64 4
  %1375 = bitcast i32* %1374 to <4 x i32>*
  %1376 = load <4 x i32>, <4 x i32>* %1375, align 4
  %1377 = mul nsw <4 x i32> %1373, %1368
  %1378 = mul nsw <4 x i32> %1376, %1369
  %1379 = add i64 %1340, 32
  %1380 = add i64 %1343, -4
  %1381 = icmp eq i64 %1380, 0
  br i1 %1381, label %1382, label %1339, !llvm.loop !648

1382:                                             ; preds = %1339, %1330
  %1383 = phi <4 x i32> [ undef, %1330 ], [ %1377, %1339 ]
  %1384 = phi <4 x i32> [ undef, %1330 ], [ %1378, %1339 ]
  %1385 = phi i64 [ 0, %1330 ], [ %1379, %1339 ]
  %1386 = phi <4 x i32> [ <i32 1, i32 1, i32 1, i32 1>, %1330 ], [ %1377, %1339 ]
  %1387 = phi <4 x i32> [ <i32 1, i32 1, i32 1, i32 1>, %1330 ], [ %1378, %1339 ]
  %1388 = icmp eq i64 %1335, 0
  br i1 %1388, label %1405, label %1389

1389:                                             ; preds = %1382, %1389
  %1390 = phi i64 [ %1402, %1389 ], [ %1385, %1382 ]
  %1391 = phi <4 x i32> [ %1400, %1389 ], [ %1386, %1382 ]
  %1392 = phi <4 x i32> [ %1401, %1389 ], [ %1387, %1382 ]
  %1393 = phi i64 [ %1403, %1389 ], [ %1335, %1382 ]
  %1394 = getelementptr inbounds i32, i32* %1327, i64 %1390
  %1395 = bitcast i32* %1394 to <4 x i32>*
  %1396 = load <4 x i32>, <4 x i32>* %1395, align 4
  %1397 = getelementptr inbounds i32, i32* %1394, i64 4
  %1398 = bitcast i32* %1397 to <4 x i32>*
  %1399 = load <4 x i32>, <4 x i32>* %1398, align 4
  %1400 = mul nsw <4 x i32> %1396, %1391
  %1401 = mul nsw <4 x i32> %1399, %1392
  %1402 = add i64 %1390, 8
  %1403 = add i64 %1393, -1
  %1404 = icmp eq i64 %1403, 0
  br i1 %1404, label %1405, label %1389, !llvm.loop !649

1405:                                             ; preds = %1389, %1382
  %1406 = phi <4 x i32> [ %1383, %1382 ], [ %1400, %1389 ]
  %1407 = phi <4 x i32> [ %1384, %1382 ], [ %1401, %1389 ]
  %1408 = mul <4 x i32> %1407, %1406
  %1409 = shufflevector <4 x i32> %1408, <4 x i32> undef, <4 x i32> <i32 2, i32 3, i32 undef, i32 undef>
  %1410 = mul <4 x i32> %1408, %1409
  %1411 = shufflevector <4 x i32> %1410, <4 x i32> undef, <4 x i32> <i32 1, i32 undef, i32 undef, i32 undef>
  %1412 = mul <4 x i32> %1410, %1411
  %1413 = extractelement <4 x i32> %1412, i32 0
  %1414 = icmp eq i64 %1331, %1328
  br i1 %1414, label %1426, label %1415

1415:                                             ; preds = %1405, %1326
  %1416 = phi i64 [ 0, %1326 ], [ %1331, %1405 ]
  %1417 = phi i32 [ 1, %1326 ], [ %1413, %1405 ]
  br label %1418

1418:                                             ; preds = %1415, %1418
  %1419 = phi i64 [ %1424, %1418 ], [ %1416, %1415 ]
  %1420 = phi i32 [ %1423, %1418 ], [ %1417, %1415 ]
  %1421 = getelementptr inbounds i32, i32* %1327, i64 %1419
  %1422 = load i32, i32* %1421, align 4
  %1423 = mul nsw i32 %1422, %1420
  %1424 = add nuw nsw i64 %1419, 1
  %1425 = icmp eq i64 %1424, %1328
  br i1 %1425, label %1426, label %1418, !llvm.loop !650

1426:                                             ; preds = %1418, %1405
  %1427 = phi i32 [ %1413, %1405 ], [ %1423, %1418 ]
  %1428 = sext i32 %1427 to i64
  %1429 = icmp sgt i32 %1427, 0
  br i1 %1429, label %1430, label %1468

1430:                                             ; preds = %1426, %1323
  %1431 = phi i64 [ %1428, %1426 ], [ 1, %1323 ]
  %1432 = and i64 %1431, 1
  %1433 = icmp eq i64 %1431, 1
  br i1 %1433, label %1457, label %1434

1434:                                             ; preds = %1430
  %1435 = sub nsw i64 %1431, %1432
  br label %1436

1436:                                             ; preds = %1436, %1434
  %1437 = phi i64 [ 0, %1434 ], [ %1454, %1436 ]
  %1438 = phi i64 [ %1435, %1434 ], [ %1455, %1436 ]
  %1439 = getelementptr inbounds i64, i64* %1247, i64 %1437
  %1440 = load i64, i64* %1439, align 8
  %1441 = getelementptr inbounds i64, i64* %1282, i64 %1437
  %1442 = load i64, i64* %1441, align 8
  %1443 = icmp slt i64 %1440, %1442
  %1444 = getelementptr inbounds i8, i8* %1317, i64 %1437
  %1445 = zext i1 %1443 to i8
  store i8 %1445, i8* %1444, align 1
  %1446 = or i64 %1437, 1
  %1447 = getelementptr inbounds i64, i64* %1247, i64 %1446
  %1448 = load i64, i64* %1447, align 8
  %1449 = getelementptr inbounds i64, i64* %1282, i64 %1446
  %1450 = load i64, i64* %1449, align 8
  %1451 = icmp slt i64 %1448, %1450
  %1452 = getelementptr inbounds i8, i8* %1317, i64 %1446
  %1453 = zext i1 %1451 to i8
  store i8 %1453, i8* %1452, align 1
  %1454 = add nuw nsw i64 %1437, 2
  %1455 = add i64 %1438, -2
  %1456 = icmp eq i64 %1455, 0
  br i1 %1456, label %1457, label %1436

1457:                                             ; preds = %1436, %1430
  %1458 = phi i64 [ 0, %1430 ], [ %1454, %1436 ]
  %1459 = icmp eq i64 %1432, 0
  br i1 %1459, label %1468, label %1460

1460:                                             ; preds = %1457
  %1461 = getelementptr inbounds i64, i64* %1247, i64 %1458
  %1462 = load i64, i64* %1461, align 8
  %1463 = getelementptr inbounds i64, i64* %1282, i64 %1458
  %1464 = load i64, i64* %1463, align 8
  %1465 = icmp slt i64 %1462, %1464
  %1466 = getelementptr inbounds i8, i8* %1317, i64 %1458
  %1467 = zext i1 %1465 to i8
  store i8 %1467, i8* %1466, align 1
  br label %1468

1468:                                             ; preds = %1460, %1457, %1426
  %1469 = icmp sgt i32 %1316, 5
  br i1 %1469, label %1470, label %1476

1470:                                             ; preds = %1468
  %1471 = getelementptr inbounds %"class.tflite::RuntimeShape", %"class.tflite::RuntimeShape"* %20, i64 0, i32 1, i32 0
  %1472 = load i32*, i32** %1471, align 8
  %1473 = icmp eq i32* %1472, null
  br i1 %1473, label %1476, label %1474

1474:                                             ; preds = %1470
  %1475 = bitcast i32* %1472 to i8*
  tail call void @_ZdaPv(i8* %1475) #9
  br label %1476

1476:                                             ; preds = %1474, %1470, %1468
  call void @llvm.lifetime.end.p0i8(i64 32, i8* nonnull %1283) #8
  %1477 = icmp sgt i32 %1281, 5
  br i1 %1477, label %1478, label %1484

1478:                                             ; preds = %1476
  %1479 = getelementptr inbounds %"class.tflite::RuntimeShape", %"class.tflite::RuntimeShape"* %19, i64 0, i32 1, i32 0
  %1480 = load i32*, i32** %1479, align 8
  %1481 = icmp eq i32* %1480, null
  br i1 %1481, label %1484, label %1482

1482:                                             ; preds = %1478
  %1483 = bitcast i32* %1480 to i8*
  tail call void @_ZdaPv(i8* %1483) #9
  br label %1484

1484:                                             ; preds = %1482, %1478, %1476
  call void @llvm.lifetime.end.p0i8(i64 32, i8* nonnull %1248) #8
  br i1 %1319, label %1485, label %1522

1485:                                             ; preds = %1484
  %1486 = getelementptr inbounds %"class.tflite::RuntimeShape", %"class.tflite::RuntimeShape"* %18, i64 0, i32 1, i32 0
  %1487 = load i32*, i32** %1486, align 8
  %1488 = icmp eq i32* %1487, null
  br i1 %1488, label %1522, label %1489

1489:                                             ; preds = %1485
  %1490 = bitcast i32* %1487 to i8*
  tail call void @_ZdaPv(i8* %1490) #9
  br label %1522

1491:                                             ; preds = %1204, %1182
  %1492 = phi i8* [ %1211, %1204 ], [ null, %1182 ]
  call void @_ZN6tflite13reference_ops29BroadcastComparison4DSlowImplIlXadL_ZNS0_6LessFnIlEEbT_S3_EEEEvRKNS_16ComparisonParamsERKNS_12RuntimeShapeEPKS3_S9_SB_S9_Pb(%"struct.tflite::ComparisonParams"* nonnull dereferenceable(32) %14, %"class.tflite::RuntimeShape"* nonnull dereferenceable(32) %15, i64* %1145, %"class.tflite::RuntimeShape"* nonnull dereferenceable(32) %16, i64* %1179, %"class.tflite::RuntimeShape"* nonnull dereferenceable(32) %17, i8* %1492) #8
  %1493 = getelementptr inbounds %"class.tflite::RuntimeShape", %"class.tflite::RuntimeShape"* %17, i64 0, i32 0
  %1494 = load i32, i32* %1493, align 8
  %1495 = icmp sgt i32 %1494, 5
  br i1 %1495, label %1496, label %1502

1496:                                             ; preds = %1491
  %1497 = getelementptr inbounds %"class.tflite::RuntimeShape", %"class.tflite::RuntimeShape"* %17, i64 0, i32 1, i32 0
  %1498 = load i32*, i32** %1497, align 8
  %1499 = icmp eq i32* %1498, null
  br i1 %1499, label %1502, label %1500

1500:                                             ; preds = %1496
  %1501 = bitcast i32* %1498 to i8*
  call void @_ZdaPv(i8* %1501) #9
  br label %1502

1502:                                             ; preds = %1500, %1496, %1491
  call void @llvm.lifetime.end.p0i8(i64 32, i8* nonnull %1180) #8
  %1503 = getelementptr inbounds %"class.tflite::RuntimeShape", %"class.tflite::RuntimeShape"* %16, i64 0, i32 0
  %1504 = load i32, i32* %1503, align 8
  %1505 = icmp sgt i32 %1504, 5
  br i1 %1505, label %1506, label %1512

1506:                                             ; preds = %1502
  %1507 = getelementptr inbounds %"class.tflite::RuntimeShape", %"class.tflite::RuntimeShape"* %16, i64 0, i32 1, i32 0
  %1508 = load i32*, i32** %1507, align 8
  %1509 = icmp eq i32* %1508, null
  br i1 %1509, label %1512, label %1510

1510:                                             ; preds = %1506
  %1511 = bitcast i32* %1508 to i8*
  call void @_ZdaPv(i8* %1511) #9
  br label %1512

1512:                                             ; preds = %1510, %1506, %1502
  call void @llvm.lifetime.end.p0i8(i64 32, i8* nonnull %1146) #8
  %1513 = getelementptr inbounds %"class.tflite::RuntimeShape", %"class.tflite::RuntimeShape"* %15, i64 0, i32 0
  %1514 = load i32, i32* %1513, align 8
  %1515 = icmp sgt i32 %1514, 5
  br i1 %1515, label %1516, label %1522

1516:                                             ; preds = %1512
  %1517 = getelementptr inbounds %"class.tflite::RuntimeShape", %"class.tflite::RuntimeShape"* %15, i64 0, i32 1, i32 0
  %1518 = load i32*, i32** %1517, align 8
  %1519 = icmp eq i32* %1518, null
  br i1 %1519, label %1522, label %1520

1520:                                             ; preds = %1516
  %1521 = bitcast i32* %1518 to i8*
  call void @_ZdaPv(i8* %1521) #9
  br label %1522

1522:                                             ; preds = %1512, %1516, %1520, %1484, %1485, %1489
  %1523 = phi i8* [ %1213, %1489 ], [ %1213, %1485 ], [ %1213, %1484 ], [ %1112, %1520 ], [ %1112, %1516 ], [ %1112, %1512 ]
  call void @llvm.lifetime.end.p0i8(i64 32, i8* nonnull %1523) #8
  call void @llvm.lifetime.end.p0i8(i64 32, i8* nonnull %1110) #8
  br label %2493

1524:                                             ; preds = %78
  %1525 = getelementptr inbounds %struct.TfLiteTensor, %struct.TfLiteTensor* %57, i64 0, i32 3, i32 1
  %1526 = load i32, i32* %1525, align 4
  %1527 = sub nsw i32 0, %1526
  %1528 = getelementptr inbounds %struct.TfLiteTensor, %struct.TfLiteTensor* %67, i64 0, i32 3, i32 1
  %1529 = load i32, i32* %1528, align 4
  %1530 = sub nsw i32 0, %1529
  %1531 = bitcast i32* %3 to i8*
  call void @llvm.lifetime.start.p0i8(i64 4, i8* nonnull %1531) #8
  store i32 -1431655766, i32* %3, align 4
  %1532 = bitcast i32* %4 to i8*
  call void @llvm.lifetime.start.p0i8(i64 4, i8* nonnull %1532) #8
  store i32 -1431655766, i32* %4, align 4
  %1533 = getelementptr inbounds %struct.TfLiteTensor, %struct.TfLiteTensor* %57, i64 0, i32 3, i32 0
  %1534 = load float, float* %1533, align 8
  %1535 = fpext float %1534 to double
  call void @_ZN6tflite35QuantizeMultiplierSmallerThanOneExpEdPiS0_(double %1535, i32* nonnull %3, i32* nonnull %4) #8
  %1536 = bitcast i32* %5 to i8*
  call void @llvm.lifetime.start.p0i8(i64 4, i8* nonnull %1536) #8
  store i32 -1431655766, i32* %5, align 4
  %1537 = bitcast i32* %6 to i8*
  call void @llvm.lifetime.start.p0i8(i64 4, i8* nonnull %1537) #8
  store i32 -1431655766, i32* %6, align 4
  %1538 = getelementptr inbounds %struct.TfLiteTensor, %struct.TfLiteTensor* %67, i64 0, i32 3, i32 0
  %1539 = load float, float* %1538, align 8
  %1540 = fpext float %1539 to double
  call void @_ZN6tflite35QuantizeMultiplierSmallerThanOneExpEdPiS0_(double %1540, i32* nonnull %5, i32* nonnull %6) #8
  %1541 = bitcast %"struct.tflite::ComparisonParams"* %7 to i8*
  call void @llvm.lifetime.start.p0i8(i64 32, i8* nonnull %1541) #8
  %1542 = getelementptr inbounds %"struct.tflite::ComparisonParams", %"struct.tflite::ComparisonParams"* %7, i64 0, i32 7
  %1543 = bitcast i8* %1542 to i32*
  store i32 -1431655766, i32* %1543, align 4
  %1544 = getelementptr inbounds %"struct.tflite::ComparisonParams", %"struct.tflite::ComparisonParams"* %7, i64 0, i32 0
  store i32 8, i32* %1544, align 4
  %1545 = getelementptr inbounds %"struct.tflite::ComparisonParams", %"struct.tflite::ComparisonParams"* %7, i64 0, i32 1
  store i32 %1527, i32* %1545, align 4
  %1546 = load i32, i32* %3, align 4
  %1547 = getelementptr inbounds %"struct.tflite::ComparisonParams", %"struct.tflite::ComparisonParams"* %7, i64 0, i32 2
  store i32 %1546, i32* %1547, align 4
  %1548 = load i32, i32* %4, align 4
  %1549 = getelementptr inbounds %"struct.tflite::ComparisonParams", %"struct.tflite::ComparisonParams"* %7, i64 0, i32 3
  store i32 %1548, i32* %1549, align 4
  %1550 = getelementptr inbounds %"struct.tflite::ComparisonParams", %"struct.tflite::ComparisonParams"* %7, i64 0, i32 4
  store i32 %1530, i32* %1550, align 4
  %1551 = load i32, i32* %5, align 4
  %1552 = getelementptr inbounds %"struct.tflite::ComparisonParams", %"struct.tflite::ComparisonParams"* %7, i64 0, i32 5
  store i32 %1551, i32* %1552, align 4
  %1553 = load i32, i32* %6, align 4
  %1554 = getelementptr inbounds %"struct.tflite::ComparisonParams", %"struct.tflite::ComparisonParams"* %7, i64 0, i32 6
  store i32 %1553, i32* %1554, align 4
  br i1 %80, label %1687, label %1555

1555:                                             ; preds = %1524
  %1556 = bitcast %"class.tflite::RuntimeShape"* %8 to i8*
  call void @llvm.lifetime.start.p0i8(i64 32, i8* nonnull %1556) #8
  %1557 = icmp eq %struct.TfLiteTensor* %57, null
  br i1 %1557, label %1558, label %1560

1558:                                             ; preds = %1555
  %1559 = getelementptr inbounds %"class.tflite::RuntimeShape", %"class.tflite::RuntimeShape"* %8, i64 0, i32 0
  store i32 0, i32* %1559, align 8, !alias.scope !651
  br label %1588

1560:                                             ; preds = %1555
  %1561 = getelementptr inbounds %struct.TfLiteTensor, %struct.TfLiteTensor* %57, i64 0, i32 2
  %1562 = load %struct.TfLiteIntArray*, %struct.TfLiteIntArray** %1561, align 8, !noalias !651
  %1563 = getelementptr inbounds %struct.TfLiteIntArray, %struct.TfLiteIntArray* %1562, i64 0, i32 0
  %1564 = load i32, i32* %1563, align 4, !noalias !651
  %1565 = getelementptr inbounds %struct.TfLiteIntArray, %struct.TfLiteIntArray* %1562, i64 0, i32 1, i64 0
  %1566 = getelementptr inbounds %"class.tflite::RuntimeShape", %"class.tflite::RuntimeShape"* %8, i64 0, i32 0
  store i32 %1564, i32* %1566, align 8, !alias.scope !651
  %1567 = icmp sgt i32 %1564, 5
  br i1 %1567, label %1568, label %1575

1568:                                             ; preds = %1560
  %1569 = sext i32 %1564 to i64
  %1570 = shl nsw i64 %1569, 2
  %1571 = call i8* @_Znam(i64 %1570) #9, !noalias !651
  %1572 = getelementptr inbounds %"class.tflite::RuntimeShape", %"class.tflite::RuntimeShape"* %8, i64 0, i32 1, i32 0
  %1573 = bitcast i32** %1572 to i8**
  store i8* %1571, i8** %1573, align 8, !alias.scope !651
  %1574 = bitcast i8* %1571 to i32*
  br label %1580

1575:                                             ; preds = %1560
  %1576 = getelementptr inbounds %"class.tflite::RuntimeShape", %"class.tflite::RuntimeShape"* %8, i64 0, i32 1
  %1577 = bitcast %union.anon* %1576 to i32*
  %1578 = sext i32 %1564 to i64
  %1579 = shl nsw i64 %1578, 2
  br label %1580

1580:                                             ; preds = %1575, %1568
  %1581 = phi i64 [ %1570, %1568 ], [ %1579, %1575 ]
  %1582 = phi i32* [ %1574, %1568 ], [ %1577, %1575 ]
  %1583 = bitcast i32* %1582 to i8*
  %1584 = bitcast i32* %1565 to i8*
  call void @llvm.memcpy.p0i8.p0i8.i64(i8* align 4 %1583, i8* align 4 %1584, i64 %1581, i1 false) #8
  %1585 = getelementptr inbounds %struct.TfLiteTensor, %struct.TfLiteTensor* %57, i64 0, i32 1
  %1586 = bitcast %union.TfLitePtrUnion* %1585 to i8**
  %1587 = load i8*, i8** %1586, align 8
  br label %1588

1588:                                             ; preds = %1580, %1558
  %1589 = phi i8* [ %1587, %1580 ], [ null, %1558 ]
  %1590 = bitcast %"class.tflite::RuntimeShape"* %9 to i8*
  call void @llvm.lifetime.start.p0i8(i64 32, i8* nonnull %1590) #8
  %1591 = icmp eq %struct.TfLiteTensor* %67, null
  br i1 %1591, label %1592, label %1594

1592:                                             ; preds = %1588
  %1593 = getelementptr inbounds %"class.tflite::RuntimeShape", %"class.tflite::RuntimeShape"* %9, i64 0, i32 0
  store i32 0, i32* %1593, align 8, !alias.scope !654
  br label %1622

1594:                                             ; preds = %1588
  %1595 = getelementptr inbounds %struct.TfLiteTensor, %struct.TfLiteTensor* %67, i64 0, i32 2
  %1596 = load %struct.TfLiteIntArray*, %struct.TfLiteIntArray** %1595, align 8, !noalias !654
  %1597 = getelementptr inbounds %struct.TfLiteIntArray, %struct.TfLiteIntArray* %1596, i64 0, i32 0
  %1598 = load i32, i32* %1597, align 4, !noalias !654
  %1599 = getelementptr inbounds %struct.TfLiteIntArray, %struct.TfLiteIntArray* %1596, i64 0, i32 1, i64 0
  %1600 = getelementptr inbounds %"class.tflite::RuntimeShape", %"class.tflite::RuntimeShape"* %9, i64 0, i32 0
  store i32 %1598, i32* %1600, align 8, !alias.scope !654
  %1601 = icmp sgt i32 %1598, 5
  br i1 %1601, label %1602, label %1609

1602:                                             ; preds = %1594
  %1603 = sext i32 %1598 to i64
  %1604 = shl nsw i64 %1603, 2
  %1605 = call i8* @_Znam(i64 %1604) #9, !noalias !654
  %1606 = getelementptr inbounds %"class.tflite::RuntimeShape", %"class.tflite::RuntimeShape"* %9, i64 0, i32 1, i32 0
  %1607 = bitcast i32** %1606 to i8**
  store i8* %1605, i8** %1607, align 8, !alias.scope !654
  %1608 = bitcast i8* %1605 to i32*
  br label %1614

1609:                                             ; preds = %1594
  %1610 = getelementptr inbounds %"class.tflite::RuntimeShape", %"class.tflite::RuntimeShape"* %9, i64 0, i32 1
  %1611 = bitcast %union.anon* %1610 to i32*
  %1612 = sext i32 %1598 to i64
  %1613 = shl nsw i64 %1612, 2
  br label %1614

1614:                                             ; preds = %1609, %1602
  %1615 = phi i64 [ %1604, %1602 ], [ %1613, %1609 ]
  %1616 = phi i32* [ %1608, %1602 ], [ %1611, %1609 ]
  %1617 = bitcast i32* %1616 to i8*
  %1618 = bitcast i32* %1599 to i8*
  call void @llvm.memcpy.p0i8.p0i8.i64(i8* align 4 %1617, i8* align 4 %1618, i64 %1615, i1 false) #8
  %1619 = getelementptr inbounds %struct.TfLiteTensor, %struct.TfLiteTensor* %67, i64 0, i32 1
  %1620 = bitcast %union.TfLitePtrUnion* %1619 to i8**
  %1621 = load i8*, i8** %1620, align 8
  br label %1622

1622:                                             ; preds = %1614, %1592
  %1623 = phi i8* [ %1621, %1614 ], [ null, %1592 ]
  %1624 = bitcast %"class.tflite::RuntimeShape"* %10 to i8*
  call void @llvm.lifetime.start.p0i8(i64 32, i8* nonnull %1624) #8
  %1625 = icmp eq %struct.TfLiteTensor* %79, null
  br i1 %1625, label %1626, label %1628

1626:                                             ; preds = %1622
  %1627 = getelementptr inbounds %"class.tflite::RuntimeShape", %"class.tflite::RuntimeShape"* %10, i64 0, i32 0
  store i32 0, i32* %1627, align 8, !alias.scope !657
  br label %1656

1628:                                             ; preds = %1622
  %1629 = getelementptr inbounds %struct.TfLiteTensor, %struct.TfLiteTensor* %79, i64 0, i32 2
  %1630 = load %struct.TfLiteIntArray*, %struct.TfLiteIntArray** %1629, align 8, !noalias !657
  %1631 = getelementptr inbounds %struct.TfLiteIntArray, %struct.TfLiteIntArray* %1630, i64 0, i32 0
  %1632 = load i32, i32* %1631, align 4, !noalias !657
  %1633 = getelementptr inbounds %struct.TfLiteIntArray, %struct.TfLiteIntArray* %1630, i64 0, i32 1, i64 0
  %1634 = getelementptr inbounds %"class.tflite::RuntimeShape", %"class.tflite::RuntimeShape"* %10, i64 0, i32 0
  store i32 %1632, i32* %1634, align 8, !alias.scope !657
  %1635 = icmp sgt i32 %1632, 5
  br i1 %1635, label %1636, label %1643

1636:                                             ; preds = %1628
  %1637 = sext i32 %1632 to i64
  %1638 = shl nsw i64 %1637, 2
  %1639 = call i8* @_Znam(i64 %1638) #9, !noalias !657
  %1640 = getelementptr inbounds %"class.tflite::RuntimeShape", %"class.tflite::RuntimeShape"* %10, i64 0, i32 1, i32 0
  %1641 = bitcast i32** %1640 to i8**
  store i8* %1639, i8** %1641, align 8, !alias.scope !657
  %1642 = bitcast i8* %1639 to i32*
  br label %1648

1643:                                             ; preds = %1628
  %1644 = getelementptr inbounds %"class.tflite::RuntimeShape", %"class.tflite::RuntimeShape"* %10, i64 0, i32 1
  %1645 = bitcast %union.anon* %1644 to i32*
  %1646 = sext i32 %1632 to i64
  %1647 = shl nsw i64 %1646, 2
  br label %1648

1648:                                             ; preds = %1643, %1636
  %1649 = phi i64 [ %1638, %1636 ], [ %1647, %1643 ]
  %1650 = phi i32* [ %1642, %1636 ], [ %1645, %1643 ]
  %1651 = bitcast i32* %1650 to i8*
  %1652 = bitcast i32* %1633 to i8*
  call void @llvm.memcpy.p0i8.p0i8.i64(i8* align 4 %1651, i8* align 4 %1652, i64 %1649, i1 false) #8
  %1653 = getelementptr inbounds %struct.TfLiteTensor, %struct.TfLiteTensor* %79, i64 0, i32 1
  %1654 = bitcast %union.TfLitePtrUnion* %1653 to i8**
  %1655 = load i8*, i8** %1654, align 8
  br label %1656

1656:                                             ; preds = %1648, %1626
  %1657 = phi i8* [ %1655, %1648 ], [ null, %1626 ]
  call void @_ZN6tflite13reference_ops36BroadcastComparison4DSlowWithScalingIhXadL_ZNS0_6LessFnIiEEbT_S3_EEEEvRKNS_16ComparisonParamsERKNS_12RuntimeShapeEPKS3_S9_SB_S9_Pb(%"struct.tflite::ComparisonParams"* nonnull dereferenceable(32) %7, %"class.tflite::RuntimeShape"* nonnull dereferenceable(32) %8, i8* %1589, %"class.tflite::RuntimeShape"* nonnull dereferenceable(32) %9, i8* %1623, %"class.tflite::RuntimeShape"* nonnull dereferenceable(32) %10, i8* %1657) #8
  %1658 = getelementptr inbounds %"class.tflite::RuntimeShape", %"class.tflite::RuntimeShape"* %10, i64 0, i32 0
  %1659 = load i32, i32* %1658, align 8
  %1660 = icmp sgt i32 %1659, 5
  br i1 %1660, label %1661, label %1667

1661:                                             ; preds = %1656
  %1662 = getelementptr inbounds %"class.tflite::RuntimeShape", %"class.tflite::RuntimeShape"* %10, i64 0, i32 1, i32 0
  %1663 = load i32*, i32** %1662, align 8
  %1664 = icmp eq i32* %1663, null
  br i1 %1664, label %1667, label %1665

1665:                                             ; preds = %1661
  %1666 = bitcast i32* %1663 to i8*
  call void @_ZdaPv(i8* %1666) #9
  br label %1667

1667:                                             ; preds = %1665, %1661, %1656
  call void @llvm.lifetime.end.p0i8(i64 32, i8* nonnull %1624) #8
  %1668 = getelementptr inbounds %"class.tflite::RuntimeShape", %"class.tflite::RuntimeShape"* %9, i64 0, i32 0
  %1669 = load i32, i32* %1668, align 8
  %1670 = icmp sgt i32 %1669, 5
  br i1 %1670, label %1671, label %1677

1671:                                             ; preds = %1667
  %1672 = getelementptr inbounds %"class.tflite::RuntimeShape", %"class.tflite::RuntimeShape"* %9, i64 0, i32 1, i32 0
  %1673 = load i32*, i32** %1672, align 8
  %1674 = icmp eq i32* %1673, null
  br i1 %1674, label %1677, label %1675

1675:                                             ; preds = %1671
  %1676 = bitcast i32* %1673 to i8*
  call void @_ZdaPv(i8* %1676) #9
  br label %1677

1677:                                             ; preds = %1675, %1671, %1667
  call void @llvm.lifetime.end.p0i8(i64 32, i8* nonnull %1590) #8
  %1678 = getelementptr inbounds %"class.tflite::RuntimeShape", %"class.tflite::RuntimeShape"* %8, i64 0, i32 0
  %1679 = load i32, i32* %1678, align 8
  %1680 = icmp sgt i32 %1679, 5
  br i1 %1680, label %1681, label %2005

1681:                                             ; preds = %1677
  %1682 = getelementptr inbounds %"class.tflite::RuntimeShape", %"class.tflite::RuntimeShape"* %8, i64 0, i32 1, i32 0
  %1683 = load i32*, i32** %1682, align 8
  %1684 = icmp eq i32* %1683, null
  br i1 %1684, label %2005, label %1685

1685:                                             ; preds = %1681
  %1686 = bitcast i32* %1683 to i8*
  call void @_ZdaPv(i8* %1686) #9
  br label %2005

1687:                                             ; preds = %1524
  %1688 = bitcast %"class.tflite::RuntimeShape"* %11 to i8*
  call void @llvm.lifetime.start.p0i8(i64 32, i8* nonnull %1688) #8
  %1689 = icmp eq %struct.TfLiteTensor* %57, null
  br i1 %1689, label %1690, label %1692

1690:                                             ; preds = %1687
  %1691 = getelementptr inbounds %"class.tflite::RuntimeShape", %"class.tflite::RuntimeShape"* %11, i64 0, i32 0
  store i32 0, i32* %1691, align 8, !alias.scope !660
  br label %1720

1692:                                             ; preds = %1687
  %1693 = getelementptr inbounds %struct.TfLiteTensor, %struct.TfLiteTensor* %57, i64 0, i32 2
  %1694 = load %struct.TfLiteIntArray*, %struct.TfLiteIntArray** %1693, align 8, !noalias !660
  %1695 = getelementptr inbounds %struct.TfLiteIntArray, %struct.TfLiteIntArray* %1694, i64 0, i32 0
  %1696 = load i32, i32* %1695, align 4, !noalias !660
  %1697 = getelementptr inbounds %struct.TfLiteIntArray, %struct.TfLiteIntArray* %1694, i64 0, i32 1, i64 0
  %1698 = getelementptr inbounds %"class.tflite::RuntimeShape", %"class.tflite::RuntimeShape"* %11, i64 0, i32 0
  store i32 %1696, i32* %1698, align 8, !alias.scope !660
  %1699 = icmp sgt i32 %1696, 5
  br i1 %1699, label %1700, label %1707

1700:                                             ; preds = %1692
  %1701 = sext i32 %1696 to i64
  %1702 = shl nsw i64 %1701, 2
  %1703 = call i8* @_Znam(i64 %1702) #9, !noalias !660
  %1704 = getelementptr inbounds %"class.tflite::RuntimeShape", %"class.tflite::RuntimeShape"* %11, i64 0, i32 1, i32 0
  %1705 = bitcast i32** %1704 to i8**
  store i8* %1703, i8** %1705, align 8, !alias.scope !660
  %1706 = bitcast i8* %1703 to i32*
  br label %1712

1707:                                             ; preds = %1692
  %1708 = getelementptr inbounds %"class.tflite::RuntimeShape", %"class.tflite::RuntimeShape"* %11, i64 0, i32 1
  %1709 = bitcast %union.anon* %1708 to i32*
  %1710 = sext i32 %1696 to i64
  %1711 = shl nsw i64 %1710, 2
  br label %1712

1712:                                             ; preds = %1707, %1700
  %1713 = phi i64 [ %1702, %1700 ], [ %1711, %1707 ]
  %1714 = phi i32* [ %1706, %1700 ], [ %1709, %1707 ]
  %1715 = bitcast i32* %1714 to i8*
  %1716 = bitcast i32* %1697 to i8*
  call void @llvm.memcpy.p0i8.p0i8.i64(i8* align 4 %1715, i8* align 4 %1716, i64 %1713, i1 false) #8
  %1717 = getelementptr inbounds %struct.TfLiteTensor, %struct.TfLiteTensor* %57, i64 0, i32 1
  %1718 = bitcast %union.TfLitePtrUnion* %1717 to i8**
  %1719 = load i8*, i8** %1718, align 8
  br label %1720

1720:                                             ; preds = %1712, %1690
  %1721 = phi i32 [ %1696, %1712 ], [ 0, %1690 ]
  %1722 = phi i8* [ %1719, %1712 ], [ null, %1690 ]
  %1723 = bitcast %"class.tflite::RuntimeShape"* %12 to i8*
  call void @llvm.lifetime.start.p0i8(i64 32, i8* nonnull %1723) #8
  %1724 = icmp eq %struct.TfLiteTensor* %67, null
  br i1 %1724, label %1725, label %1727

1725:                                             ; preds = %1720
  %1726 = getelementptr inbounds %"class.tflite::RuntimeShape", %"class.tflite::RuntimeShape"* %12, i64 0, i32 0
  store i32 0, i32* %1726, align 8, !alias.scope !663
  br label %1755

1727:                                             ; preds = %1720
  %1728 = getelementptr inbounds %struct.TfLiteTensor, %struct.TfLiteTensor* %67, i64 0, i32 2
  %1729 = load %struct.TfLiteIntArray*, %struct.TfLiteIntArray** %1728, align 8, !noalias !663
  %1730 = getelementptr inbounds %struct.TfLiteIntArray, %struct.TfLiteIntArray* %1729, i64 0, i32 0
  %1731 = load i32, i32* %1730, align 4, !noalias !663
  %1732 = getelementptr inbounds %struct.TfLiteIntArray, %struct.TfLiteIntArray* %1729, i64 0, i32 1, i64 0
  %1733 = getelementptr inbounds %"class.tflite::RuntimeShape", %"class.tflite::RuntimeShape"* %12, i64 0, i32 0
  store i32 %1731, i32* %1733, align 8, !alias.scope !663
  %1734 = icmp sgt i32 %1731, 5
  br i1 %1734, label %1735, label %1742

1735:                                             ; preds = %1727
  %1736 = sext i32 %1731 to i64
  %1737 = shl nsw i64 %1736, 2
  %1738 = call i8* @_Znam(i64 %1737) #9, !noalias !663
  %1739 = getelementptr inbounds %"class.tflite::RuntimeShape", %"class.tflite::RuntimeShape"* %12, i64 0, i32 1, i32 0
  %1740 = bitcast i32** %1739 to i8**
  store i8* %1738, i8** %1740, align 8, !alias.scope !663
  %1741 = bitcast i8* %1738 to i32*
  br label %1747

1742:                                             ; preds = %1727
  %1743 = getelementptr inbounds %"class.tflite::RuntimeShape", %"class.tflite::RuntimeShape"* %12, i64 0, i32 1
  %1744 = bitcast %union.anon* %1743 to i32*
  %1745 = sext i32 %1731 to i64
  %1746 = shl nsw i64 %1745, 2
  br label %1747

1747:                                             ; preds = %1742, %1735
  %1748 = phi i64 [ %1737, %1735 ], [ %1746, %1742 ]
  %1749 = phi i32* [ %1741, %1735 ], [ %1744, %1742 ]
  %1750 = bitcast i32* %1749 to i8*
  %1751 = bitcast i32* %1732 to i8*
  call void @llvm.memcpy.p0i8.p0i8.i64(i8* align 4 %1750, i8* align 4 %1751, i64 %1748, i1 false) #8
  %1752 = getelementptr inbounds %struct.TfLiteTensor, %struct.TfLiteTensor* %67, i64 0, i32 1
  %1753 = bitcast %union.TfLitePtrUnion* %1752 to i8**
  %1754 = load i8*, i8** %1753, align 8
  br label %1755

1755:                                             ; preds = %1747, %1725
  %1756 = phi i32 [ %1731, %1747 ], [ 0, %1725 ]
  %1757 = phi i8* [ %1754, %1747 ], [ null, %1725 ]
  %1758 = bitcast %"class.tflite::RuntimeShape"* %13 to i8*
  call void @llvm.lifetime.start.p0i8(i64 32, i8* nonnull %1758) #8
  %1759 = icmp eq %struct.TfLiteTensor* %79, null
  br i1 %1759, label %1760, label %1762

1760:                                             ; preds = %1755
  %1761 = getelementptr inbounds %"class.tflite::RuntimeShape", %"class.tflite::RuntimeShape"* %13, i64 0, i32 0
  store i32 0, i32* %1761, align 8, !alias.scope !666
  br label %1790

1762:                                             ; preds = %1755
  %1763 = getelementptr inbounds %struct.TfLiteTensor, %struct.TfLiteTensor* %79, i64 0, i32 2
  %1764 = load %struct.TfLiteIntArray*, %struct.TfLiteIntArray** %1763, align 8, !noalias !666
  %1765 = getelementptr inbounds %struct.TfLiteIntArray, %struct.TfLiteIntArray* %1764, i64 0, i32 0
  %1766 = load i32, i32* %1765, align 4, !noalias !666
  %1767 = getelementptr inbounds %struct.TfLiteIntArray, %struct.TfLiteIntArray* %1764, i64 0, i32 1, i64 0
  %1768 = getelementptr inbounds %"class.tflite::RuntimeShape", %"class.tflite::RuntimeShape"* %13, i64 0, i32 0
  store i32 %1766, i32* %1768, align 8, !alias.scope !666
  %1769 = icmp sgt i32 %1766, 5
  br i1 %1769, label %1770, label %1777

1770:                                             ; preds = %1762
  %1771 = sext i32 %1766 to i64
  %1772 = shl nsw i64 %1771, 2
  %1773 = call i8* @_Znam(i64 %1772) #9, !noalias !666
  %1774 = getelementptr inbounds %"class.tflite::RuntimeShape", %"class.tflite::RuntimeShape"* %13, i64 0, i32 1, i32 0
  %1775 = bitcast i32** %1774 to i8**
  store i8* %1773, i8** %1775, align 8, !alias.scope !666
  %1776 = bitcast i8* %1773 to i32*
  br label %1782

1777:                                             ; preds = %1762
  %1778 = getelementptr inbounds %"class.tflite::RuntimeShape", %"class.tflite::RuntimeShape"* %13, i64 0, i32 1
  %1779 = bitcast %union.anon* %1778 to i32*
  %1780 = sext i32 %1766 to i64
  %1781 = shl nsw i64 %1780, 2
  br label %1782

1782:                                             ; preds = %1777, %1770
  %1783 = phi i64 [ %1772, %1770 ], [ %1781, %1777 ]
  %1784 = phi i32* [ %1776, %1770 ], [ %1779, %1777 ]
  %1785 = bitcast i32* %1784 to i8*
  %1786 = bitcast i32* %1767 to i8*
  call void @llvm.memcpy.p0i8.p0i8.i64(i8* align 4 %1785, i8* align 4 %1786, i64 %1783, i1 false) #8
  %1787 = getelementptr inbounds %struct.TfLiteTensor, %struct.TfLiteTensor* %79, i64 0, i32 1
  %1788 = bitcast %union.TfLitePtrUnion* %1787 to i8**
  %1789 = load i8*, i8** %1788, align 8
  br label %1790

1790:                                             ; preds = %1782, %1760
  %1791 = phi i32 [ %1766, %1782 ], [ 0, %1760 ]
  %1792 = phi i8* [ %1789, %1782 ], [ null, %1760 ]
  %1793 = getelementptr inbounds %"class.tflite::RuntimeShape", %"class.tflite::RuntimeShape"* %11, i64 0, i32 1
  %1794 = icmp sgt i32 %1721, 5
  br i1 %1794, label %1795, label %1798

1795:                                             ; preds = %1790
  %1796 = getelementptr inbounds %union.anon, %union.anon* %1793, i64 0, i32 0
  %1797 = load i32*, i32** %1796, align 8
  br label %1801

1798:                                             ; preds = %1790
  %1799 = bitcast %union.anon* %1793 to i32*
  %1800 = icmp sgt i32 %1721, 0
  br i1 %1800, label %1801, label %1905

1801:                                             ; preds = %1798, %1795
  %1802 = phi i32* [ %1797, %1795 ], [ %1799, %1798 ]
  %1803 = zext i32 %1721 to i64
  %1804 = icmp ult i32 %1721, 8
  br i1 %1804, label %1890, label %1805

1805:                                             ; preds = %1801
  %1806 = and i64 %1803, 4294967288
  %1807 = add nsw i64 %1806, -8
  %1808 = lshr exact i64 %1807, 3
  %1809 = add nuw nsw i64 %1808, 1
  %1810 = and i64 %1809, 3
  %1811 = icmp ult i64 %1807, 24
  br i1 %1811, label %1857, label %1812

1812:                                             ; preds = %1805
  %1813 = sub nsw i64 %1809, %1810
  br label %1814

1814:                                             ; preds = %1814, %1812
  %1815 = phi i64 [ 0, %1812 ], [ %1854, %1814 ]
  %1816 = phi <4 x i32> [ <i32 1, i32 1, i32 1, i32 1>, %1812 ], [ %1852, %1814 ]
  %1817 = phi <4 x i32> [ <i32 1, i32 1, i32 1, i32 1>, %1812 ], [ %1853, %1814 ]
  %1818 = phi i64 [ %1813, %1812 ], [ %1855, %1814 ]
  %1819 = getelementptr inbounds i32, i32* %1802, i64 %1815
  %1820 = bitcast i32* %1819 to <4 x i32>*
  %1821 = load <4 x i32>, <4 x i32>* %1820, align 4
  %1822 = getelementptr inbounds i32, i32* %1819, i64 4
  %1823 = bitcast i32* %1822 to <4 x i32>*
  %1824 = load <4 x i32>, <4 x i32>* %1823, align 4
  %1825 = mul nsw <4 x i32> %1821, %1816
  %1826 = mul nsw <4 x i32> %1824, %1817
  %1827 = or i64 %1815, 8
  %1828 = getelementptr inbounds i32, i32* %1802, i64 %1827
  %1829 = bitcast i32* %1828 to <4 x i32>*
  %1830 = load <4 x i32>, <4 x i32>* %1829, align 4
  %1831 = getelementptr inbounds i32, i32* %1828, i64 4
  %1832 = bitcast i32* %1831 to <4 x i32>*
  %1833 = load <4 x i32>, <4 x i32>* %1832, align 4
  %1834 = mul nsw <4 x i32> %1830, %1825
  %1835 = mul nsw <4 x i32> %1833, %1826
  %1836 = or i64 %1815, 16
  %1837 = getelementptr inbounds i32, i32* %1802, i64 %1836
  %1838 = bitcast i32* %1837 to <4 x i32>*
  %1839 = load <4 x i32>, <4 x i32>* %1838, align 4
  %1840 = getelementptr inbounds i32, i32* %1837, i64 4
  %1841 = bitcast i32* %1840 to <4 x i32>*
  %1842 = load <4 x i32>, <4 x i32>* %1841, align 4
  %1843 = mul nsw <4 x i32> %1839, %1834
  %1844 = mul nsw <4 x i32> %1842, %1835
  %1845 = or i64 %1815, 24
  %1846 = getelementptr inbounds i32, i32* %1802, i64 %1845
  %1847 = bitcast i32* %1846 to <4 x i32>*
  %1848 = load <4 x i32>, <4 x i32>* %1847, align 4
  %1849 = getelementptr inbounds i32, i32* %1846, i64 4
  %1850 = bitcast i32* %1849 to <4 x i32>*
  %1851 = load <4 x i32>, <4 x i32>* %1850, align 4
  %1852 = mul nsw <4 x i32> %1848, %1843
  %1853 = mul nsw <4 x i32> %1851, %1844
  %1854 = add i64 %1815, 32
  %1855 = add i64 %1818, -4
  %1856 = icmp eq i64 %1855, 0
  br i1 %1856, label %1857, label %1814, !llvm.loop !669

1857:                                             ; preds = %1814, %1805
  %1858 = phi <4 x i32> [ undef, %1805 ], [ %1852, %1814 ]
  %1859 = phi <4 x i32> [ undef, %1805 ], [ %1853, %1814 ]
  %1860 = phi i64 [ 0, %1805 ], [ %1854, %1814 ]
  %1861 = phi <4 x i32> [ <i32 1, i32 1, i32 1, i32 1>, %1805 ], [ %1852, %1814 ]
  %1862 = phi <4 x i32> [ <i32 1, i32 1, i32 1, i32 1>, %1805 ], [ %1853, %1814 ]
  %1863 = icmp eq i64 %1810, 0
  br i1 %1863, label %1880, label %1864

1864:                                             ; preds = %1857, %1864
  %1865 = phi i64 [ %1877, %1864 ], [ %1860, %1857 ]
  %1866 = phi <4 x i32> [ %1875, %1864 ], [ %1861, %1857 ]
  %1867 = phi <4 x i32> [ %1876, %1864 ], [ %1862, %1857 ]
  %1868 = phi i64 [ %1878, %1864 ], [ %1810, %1857 ]
  %1869 = getelementptr inbounds i32, i32* %1802, i64 %1865
  %1870 = bitcast i32* %1869 to <4 x i32>*
  %1871 = load <4 x i32>, <4 x i32>* %1870, align 4
  %1872 = getelementptr inbounds i32, i32* %1869, i64 4
  %1873 = bitcast i32* %1872 to <4 x i32>*
  %1874 = load <4 x i32>, <4 x i32>* %1873, align 4
  %1875 = mul nsw <4 x i32> %1871, %1866
  %1876 = mul nsw <4 x i32> %1874, %1867
  %1877 = add i64 %1865, 8
  %1878 = add i64 %1868, -1
  %1879 = icmp eq i64 %1878, 0
  br i1 %1879, label %1880, label %1864, !llvm.loop !670

1880:                                             ; preds = %1864, %1857
  %1881 = phi <4 x i32> [ %1858, %1857 ], [ %1875, %1864 ]
  %1882 = phi <4 x i32> [ %1859, %1857 ], [ %1876, %1864 ]
  %1883 = mul <4 x i32> %1882, %1881
  %1884 = shufflevector <4 x i32> %1883, <4 x i32> undef, <4 x i32> <i32 2, i32 3, i32 undef, i32 undef>
  %1885 = mul <4 x i32> %1883, %1884
  %1886 = shufflevector <4 x i32> %1885, <4 x i32> undef, <4 x i32> <i32 1, i32 undef, i32 undef, i32 undef>
  %1887 = mul <4 x i32> %1885, %1886
  %1888 = extractelement <4 x i32> %1887, i32 0
  %1889 = icmp eq i64 %1806, %1803
  br i1 %1889, label %1901, label %1890

1890:                                             ; preds = %1880, %1801
  %1891 = phi i64 [ 0, %1801 ], [ %1806, %1880 ]
  %1892 = phi i32 [ 1, %1801 ], [ %1888, %1880 ]
  br label %1893

1893:                                             ; preds = %1890, %1893
  %1894 = phi i64 [ %1899, %1893 ], [ %1891, %1890 ]
  %1895 = phi i32 [ %1898, %1893 ], [ %1892, %1890 ]
  %1896 = getelementptr inbounds i32, i32* %1802, i64 %1894
  %1897 = load i32, i32* %1896, align 4
  %1898 = mul nsw i32 %1897, %1895
  %1899 = add nuw nsw i64 %1894, 1
  %1900 = icmp eq i64 %1899, %1803
  br i1 %1900, label %1901, label %1893, !llvm.loop !671

1901:                                             ; preds = %1893, %1880
  %1902 = phi i32 [ %1888, %1880 ], [ %1898, %1893 ]
  %1903 = sext i32 %1902 to i64
  %1904 = icmp sgt i32 %1902, 0
  br i1 %1904, label %1905, label %1982

1905:                                             ; preds = %1901, %1798
  %1906 = phi i64 [ %1903, %1901 ], [ 1, %1798 ]
  %1907 = sext i32 %1546 to i64
  %1908 = sub nsw i32 0, %1548
  %1909 = zext i32 %1908 to i64
  %1910 = shl nsw i64 -1, %1909
  %1911 = trunc i64 %1910 to i32
  %1912 = xor i32 %1911, -1
  %1913 = ashr i32 %1912, 1
  %1914 = sext i32 %1551 to i64
  %1915 = sub nsw i32 0, %1553
  %1916 = zext i32 %1915 to i64
  %1917 = shl nsw i64 -1, %1916
  %1918 = trunc i64 %1917 to i32
  %1919 = xor i32 %1918, -1
  %1920 = ashr i32 %1919, 1
  %1921 = icmp eq i32 %1546, -2147483648
  %1922 = icmp eq i32 %1551, -2147483648
  br label %1923

1923:                                             ; preds = %1968, %1905
  %1924 = phi i64 [ 0, %1905 ], [ %1980, %1968 ]
  %1925 = getelementptr inbounds i8, i8* %1722, i64 %1924
  %1926 = load i8, i8* %1925, align 1
  %1927 = zext i8 %1926 to i32
  %1928 = sub i32 %1927, %1526
  %1929 = getelementptr inbounds i8, i8* %1757, i64 %1924
  %1930 = load i8, i8* %1929, align 1
  %1931 = zext i8 %1930 to i32
  %1932 = sub i32 %1931, %1529
  %1933 = shl i32 %1928, 8
  %1934 = shl i32 %1932, 8
  %1935 = icmp eq i32 %1933, %1546
  br i1 %1935, label %1938, label %1936

1936:                                             ; preds = %1923
  %1937 = sext i32 %1933 to i64
  br label %1939

1938:                                             ; preds = %1923
  br i1 %1921, label %1947, label %1939

1939:                                             ; preds = %1938, %1936
  %1940 = phi i64 [ %1937, %1936 ], [ %1907, %1938 ]
  %1941 = mul nsw i64 %1940, %1907
  %1942 = icmp sgt i64 %1941, -1
  %1943 = select i1 %1942, i64 1073741824, i64 -1073741823
  %1944 = add nsw i64 %1943, %1941
  %1945 = sdiv i64 %1944, 2147483648
  %1946 = trunc i64 %1945 to i32
  br label %1947

1947:                                             ; preds = %1939, %1938
  %1948 = phi i32 [ %1946, %1939 ], [ 2147483647, %1938 ]
  %1949 = and i32 %1948, %1912
  %1950 = lshr i32 %1948, 31
  %1951 = add nsw i32 %1950, %1913
  %1952 = ashr i32 %1948, %1908
  %1953 = icmp sgt i32 %1949, %1951
  %1954 = zext i1 %1953 to i32
  %1955 = add nsw i32 %1952, %1954
  %1956 = icmp eq i32 %1934, %1551
  br i1 %1956, label %1959, label %1957

1957:                                             ; preds = %1947
  %1958 = sext i32 %1934 to i64
  br label %1960

1959:                                             ; preds = %1947
  br i1 %1922, label %1968, label %1960

1960:                                             ; preds = %1959, %1957
  %1961 = phi i64 [ %1958, %1957 ], [ %1914, %1959 ]
  %1962 = mul nsw i64 %1961, %1914
  %1963 = icmp sgt i64 %1962, -1
  %1964 = select i1 %1963, i64 1073741824, i64 -1073741823
  %1965 = add nsw i64 %1964, %1962
  %1966 = sdiv i64 %1965, 2147483648
  %1967 = trunc i64 %1966 to i32
  br label %1968

1968:                                             ; preds = %1960, %1959
  %1969 = phi i32 [ %1967, %1960 ], [ 2147483647, %1959 ]
  %1970 = and i32 %1969, %1919
  %1971 = lshr i32 %1969, 31
  %1972 = add nsw i32 %1971, %1920
  %1973 = ashr i32 %1969, %1915
  %1974 = icmp sgt i32 %1970, %1972
  %1975 = zext i1 %1974 to i32
  %1976 = add nsw i32 %1973, %1975
  %1977 = icmp slt i32 %1955, %1976
  %1978 = getelementptr inbounds i8, i8* %1792, i64 %1924
  %1979 = zext i1 %1977 to i8
  store i8 %1979, i8* %1978, align 1
  %1980 = add nuw nsw i64 %1924, 1
  %1981 = icmp eq i64 %1980, %1906
  br i1 %1981, label %1982, label %1923

1982:                                             ; preds = %1968, %1901
  %1983 = icmp sgt i32 %1791, 5
  br i1 %1983, label %1984, label %1990

1984:                                             ; preds = %1982
  %1985 = getelementptr inbounds %"class.tflite::RuntimeShape", %"class.tflite::RuntimeShape"* %13, i64 0, i32 1, i32 0
  %1986 = load i32*, i32** %1985, align 8
  %1987 = icmp eq i32* %1986, null
  br i1 %1987, label %1990, label %1988

1988:                                             ; preds = %1984
  %1989 = bitcast i32* %1986 to i8*
  call void @_ZdaPv(i8* %1989) #9
  br label %1990

1990:                                             ; preds = %1988, %1984, %1982
  call void @llvm.lifetime.end.p0i8(i64 32, i8* nonnull %1758) #8
  %1991 = icmp sgt i32 %1756, 5
  br i1 %1991, label %1992, label %1998

1992:                                             ; preds = %1990
  %1993 = getelementptr inbounds %"class.tflite::RuntimeShape", %"class.tflite::RuntimeShape"* %12, i64 0, i32 1, i32 0
  %1994 = load i32*, i32** %1993, align 8
  %1995 = icmp eq i32* %1994, null
  br i1 %1995, label %1998, label %1996

1996:                                             ; preds = %1992
  %1997 = bitcast i32* %1994 to i8*
  call void @_ZdaPv(i8* %1997) #9
  br label %1998

1998:                                             ; preds = %1996, %1992, %1990
  call void @llvm.lifetime.end.p0i8(i64 32, i8* nonnull %1723) #8
  br i1 %1794, label %1999, label %2005

1999:                                             ; preds = %1998
  %2000 = getelementptr inbounds %"class.tflite::RuntimeShape", %"class.tflite::RuntimeShape"* %11, i64 0, i32 1, i32 0
  %2001 = load i32*, i32** %2000, align 8
  %2002 = icmp eq i32* %2001, null
  br i1 %2002, label %2005, label %2003

2003:                                             ; preds = %1999
  %2004 = bitcast i32* %2001 to i8*
  call void @_ZdaPv(i8* %2004) #9
  br label %2005

2005:                                             ; preds = %1998, %1999, %2003, %1677, %1681, %1685
  %2006 = phi i8* [ %1556, %1685 ], [ %1556, %1681 ], [ %1556, %1677 ], [ %1688, %2003 ], [ %1688, %1999 ], [ %1688, %1998 ]
  call void @llvm.lifetime.end.p0i8(i64 32, i8* nonnull %2006) #8
  call void @llvm.lifetime.end.p0i8(i64 32, i8* nonnull %1541) #8
  call void @llvm.lifetime.end.p0i8(i64 4, i8* nonnull %1537) #8
  call void @llvm.lifetime.end.p0i8(i64 4, i8* nonnull %1536) #8
  call void @llvm.lifetime.end.p0i8(i64 4, i8* nonnull %1532) #8
  call void @llvm.lifetime.end.p0i8(i64 4, i8* nonnull %1531) #8
  br label %2493

2007:                                             ; preds = %78
  %2008 = getelementptr inbounds %struct.TfLiteTensor, %struct.TfLiteTensor* %57, i64 0, i32 3, i32 1
  %2009 = load i32, i32* %2008, align 4
  %2010 = sub nsw i32 0, %2009
  %2011 = getelementptr inbounds %struct.TfLiteTensor, %struct.TfLiteTensor* %67, i64 0, i32 3, i32 1
  %2012 = load i32, i32* %2011, align 4
  %2013 = sub nsw i32 0, %2012
  %2014 = bitcast i32* %35 to i8*
  call void @llvm.lifetime.start.p0i8(i64 4, i8* nonnull %2014) #8
  store i32 -1431655766, i32* %35, align 4
  %2015 = bitcast i32* %36 to i8*
  call void @llvm.lifetime.start.p0i8(i64 4, i8* nonnull %2015) #8
  store i32 -1431655766, i32* %36, align 4
  %2016 = getelementptr inbounds %struct.TfLiteTensor, %struct.TfLiteTensor* %57, i64 0, i32 3, i32 0
  %2017 = load float, float* %2016, align 8
  %2018 = fpext float %2017 to double
  call void @_ZN6tflite35QuantizeMultiplierSmallerThanOneExpEdPiS0_(double %2018, i32* nonnull %35, i32* nonnull %36) #8
  %2019 = bitcast i32* %37 to i8*
  call void @llvm.lifetime.start.p0i8(i64 4, i8* nonnull %2019) #8
  store i32 -1431655766, i32* %37, align 4
  %2020 = bitcast i32* %38 to i8*
  call void @llvm.lifetime.start.p0i8(i64 4, i8* nonnull %2020) #8
  store i32 -1431655766, i32* %38, align 4
  %2021 = getelementptr inbounds %struct.TfLiteTensor, %struct.TfLiteTensor* %67, i64 0, i32 3, i32 0
  %2022 = load float, float* %2021, align 8
  %2023 = fpext float %2022 to double
  call void @_ZN6tflite35QuantizeMultiplierSmallerThanOneExpEdPiS0_(double %2023, i32* nonnull %37, i32* nonnull %38) #8
  %2024 = bitcast %"struct.tflite::ComparisonParams"* %39 to i8*
  call void @llvm.lifetime.start.p0i8(i64 32, i8* nonnull %2024) #8
  %2025 = getelementptr inbounds %"struct.tflite::ComparisonParams", %"struct.tflite::ComparisonParams"* %39, i64 0, i32 7
  %2026 = bitcast i8* %2025 to i32*
  store i32 -1431655766, i32* %2026, align 4
  %2027 = getelementptr inbounds %"struct.tflite::ComparisonParams", %"struct.tflite::ComparisonParams"* %39, i64 0, i32 0
  store i32 8, i32* %2027, align 4
  %2028 = getelementptr inbounds %"struct.tflite::ComparisonParams", %"struct.tflite::ComparisonParams"* %39, i64 0, i32 1
  store i32 %2010, i32* %2028, align 4
  %2029 = load i32, i32* %35, align 4
  %2030 = getelementptr inbounds %"struct.tflite::ComparisonParams", %"struct.tflite::ComparisonParams"* %39, i64 0, i32 2
  store i32 %2029, i32* %2030, align 4
  %2031 = load i32, i32* %36, align 4
  %2032 = getelementptr inbounds %"struct.tflite::ComparisonParams", %"struct.tflite::ComparisonParams"* %39, i64 0, i32 3
  store i32 %2031, i32* %2032, align 4
  %2033 = getelementptr inbounds %"struct.tflite::ComparisonParams", %"struct.tflite::ComparisonParams"* %39, i64 0, i32 4
  store i32 %2013, i32* %2033, align 4
  %2034 = load i32, i32* %37, align 4
  %2035 = getelementptr inbounds %"struct.tflite::ComparisonParams", %"struct.tflite::ComparisonParams"* %39, i64 0, i32 5
  store i32 %2034, i32* %2035, align 4
  %2036 = load i32, i32* %38, align 4
  %2037 = getelementptr inbounds %"struct.tflite::ComparisonParams", %"struct.tflite::ComparisonParams"* %39, i64 0, i32 6
  store i32 %2036, i32* %2037, align 4
  br i1 %80, label %2170, label %2038

2038:                                             ; preds = %2007
  %2039 = bitcast %"class.tflite::RuntimeShape"* %40 to i8*
  call void @llvm.lifetime.start.p0i8(i64 32, i8* nonnull %2039) #8
  %2040 = icmp eq %struct.TfLiteTensor* %57, null
  br i1 %2040, label %2041, label %2043

2041:                                             ; preds = %2038
  %2042 = getelementptr inbounds %"class.tflite::RuntimeShape", %"class.tflite::RuntimeShape"* %40, i64 0, i32 0
  store i32 0, i32* %2042, align 8, !alias.scope !672
  br label %2071

2043:                                             ; preds = %2038
  %2044 = getelementptr inbounds %struct.TfLiteTensor, %struct.TfLiteTensor* %57, i64 0, i32 2
  %2045 = load %struct.TfLiteIntArray*, %struct.TfLiteIntArray** %2044, align 8, !noalias !672
  %2046 = getelementptr inbounds %struct.TfLiteIntArray, %struct.TfLiteIntArray* %2045, i64 0, i32 0
  %2047 = load i32, i32* %2046, align 4, !noalias !672
  %2048 = getelementptr inbounds %struct.TfLiteIntArray, %struct.TfLiteIntArray* %2045, i64 0, i32 1, i64 0
  %2049 = getelementptr inbounds %"class.tflite::RuntimeShape", %"class.tflite::RuntimeShape"* %40, i64 0, i32 0
  store i32 %2047, i32* %2049, align 8, !alias.scope !672
  %2050 = icmp sgt i32 %2047, 5
  br i1 %2050, label %2051, label %2058

2051:                                             ; preds = %2043
  %2052 = sext i32 %2047 to i64
  %2053 = shl nsw i64 %2052, 2
  %2054 = call i8* @_Znam(i64 %2053) #9, !noalias !672
  %2055 = getelementptr inbounds %"class.tflite::RuntimeShape", %"class.tflite::RuntimeShape"* %40, i64 0, i32 1, i32 0
  %2056 = bitcast i32** %2055 to i8**
  store i8* %2054, i8** %2056, align 8, !alias.scope !672
  %2057 = bitcast i8* %2054 to i32*
  br label %2063

2058:                                             ; preds = %2043
  %2059 = getelementptr inbounds %"class.tflite::RuntimeShape", %"class.tflite::RuntimeShape"* %40, i64 0, i32 1
  %2060 = bitcast %union.anon* %2059 to i32*
  %2061 = sext i32 %2047 to i64
  %2062 = shl nsw i64 %2061, 2
  br label %2063

2063:                                             ; preds = %2058, %2051
  %2064 = phi i64 [ %2053, %2051 ], [ %2062, %2058 ]
  %2065 = phi i32* [ %2057, %2051 ], [ %2060, %2058 ]
  %2066 = bitcast i32* %2065 to i8*
  %2067 = bitcast i32* %2048 to i8*
  call void @llvm.memcpy.p0i8.p0i8.i64(i8* align 4 %2066, i8* align 4 %2067, i64 %2064, i1 false) #8
  %2068 = getelementptr inbounds %struct.TfLiteTensor, %struct.TfLiteTensor* %57, i64 0, i32 1
  %2069 = bitcast %union.TfLitePtrUnion* %2068 to i8**
  %2070 = load i8*, i8** %2069, align 8
  br label %2071

2071:                                             ; preds = %2063, %2041
  %2072 = phi i8* [ %2070, %2063 ], [ null, %2041 ]
  %2073 = bitcast %"class.tflite::RuntimeShape"* %41 to i8*
  call void @llvm.lifetime.start.p0i8(i64 32, i8* nonnull %2073) #8
  %2074 = icmp eq %struct.TfLiteTensor* %67, null
  br i1 %2074, label %2075, label %2077

2075:                                             ; preds = %2071
  %2076 = getelementptr inbounds %"class.tflite::RuntimeShape", %"class.tflite::RuntimeShape"* %41, i64 0, i32 0
  store i32 0, i32* %2076, align 8, !alias.scope !675
  br label %2105

2077:                                             ; preds = %2071
  %2078 = getelementptr inbounds %struct.TfLiteTensor, %struct.TfLiteTensor* %67, i64 0, i32 2
  %2079 = load %struct.TfLiteIntArray*, %struct.TfLiteIntArray** %2078, align 8, !noalias !675
  %2080 = getelementptr inbounds %struct.TfLiteIntArray, %struct.TfLiteIntArray* %2079, i64 0, i32 0
  %2081 = load i32, i32* %2080, align 4, !noalias !675
  %2082 = getelementptr inbounds %struct.TfLiteIntArray, %struct.TfLiteIntArray* %2079, i64 0, i32 1, i64 0
  %2083 = getelementptr inbounds %"class.tflite::RuntimeShape", %"class.tflite::RuntimeShape"* %41, i64 0, i32 0
  store i32 %2081, i32* %2083, align 8, !alias.scope !675
  %2084 = icmp sgt i32 %2081, 5
  br i1 %2084, label %2085, label %2092

2085:                                             ; preds = %2077
  %2086 = sext i32 %2081 to i64
  %2087 = shl nsw i64 %2086, 2
  %2088 = call i8* @_Znam(i64 %2087) #9, !noalias !675
  %2089 = getelementptr inbounds %"class.tflite::RuntimeShape", %"class.tflite::RuntimeShape"* %41, i64 0, i32 1, i32 0
  %2090 = bitcast i32** %2089 to i8**
  store i8* %2088, i8** %2090, align 8, !alias.scope !675
  %2091 = bitcast i8* %2088 to i32*
  br label %2097

2092:                                             ; preds = %2077
  %2093 = getelementptr inbounds %"class.tflite::RuntimeShape", %"class.tflite::RuntimeShape"* %41, i64 0, i32 1
  %2094 = bitcast %union.anon* %2093 to i32*
  %2095 = sext i32 %2081 to i64
  %2096 = shl nsw i64 %2095, 2
  br label %2097

2097:                                             ; preds = %2092, %2085
  %2098 = phi i64 [ %2087, %2085 ], [ %2096, %2092 ]
  %2099 = phi i32* [ %2091, %2085 ], [ %2094, %2092 ]
  %2100 = bitcast i32* %2099 to i8*
  %2101 = bitcast i32* %2082 to i8*
  call void @llvm.memcpy.p0i8.p0i8.i64(i8* align 4 %2100, i8* align 4 %2101, i64 %2098, i1 false) #8
  %2102 = getelementptr inbounds %struct.TfLiteTensor, %struct.TfLiteTensor* %67, i64 0, i32 1
  %2103 = bitcast %union.TfLitePtrUnion* %2102 to i8**
  %2104 = load i8*, i8** %2103, align 8
  br label %2105

2105:                                             ; preds = %2097, %2075
  %2106 = phi i8* [ %2104, %2097 ], [ null, %2075 ]
  %2107 = bitcast %"class.tflite::RuntimeShape"* %42 to i8*
  call void @llvm.lifetime.start.p0i8(i64 32, i8* nonnull %2107) #8
  %2108 = icmp eq %struct.TfLiteTensor* %79, null
  br i1 %2108, label %2109, label %2111

2109:                                             ; preds = %2105
  %2110 = getelementptr inbounds %"class.tflite::RuntimeShape", %"class.tflite::RuntimeShape"* %42, i64 0, i32 0
  store i32 0, i32* %2110, align 8, !alias.scope !678
  br label %2139

2111:                                             ; preds = %2105
  %2112 = getelementptr inbounds %struct.TfLiteTensor, %struct.TfLiteTensor* %79, i64 0, i32 2
  %2113 = load %struct.TfLiteIntArray*, %struct.TfLiteIntArray** %2112, align 8, !noalias !678
  %2114 = getelementptr inbounds %struct.TfLiteIntArray, %struct.TfLiteIntArray* %2113, i64 0, i32 0
  %2115 = load i32, i32* %2114, align 4, !noalias !678
  %2116 = getelementptr inbounds %struct.TfLiteIntArray, %struct.TfLiteIntArray* %2113, i64 0, i32 1, i64 0
  %2117 = getelementptr inbounds %"class.tflite::RuntimeShape", %"class.tflite::RuntimeShape"* %42, i64 0, i32 0
  store i32 %2115, i32* %2117, align 8, !alias.scope !678
  %2118 = icmp sgt i32 %2115, 5
  br i1 %2118, label %2119, label %2126

2119:                                             ; preds = %2111
  %2120 = sext i32 %2115 to i64
  %2121 = shl nsw i64 %2120, 2
  %2122 = call i8* @_Znam(i64 %2121) #9, !noalias !678
  %2123 = getelementptr inbounds %"class.tflite::RuntimeShape", %"class.tflite::RuntimeShape"* %42, i64 0, i32 1, i32 0
  %2124 = bitcast i32** %2123 to i8**
  store i8* %2122, i8** %2124, align 8, !alias.scope !678
  %2125 = bitcast i8* %2122 to i32*
  br label %2131

2126:                                             ; preds = %2111
  %2127 = getelementptr inbounds %"class.tflite::RuntimeShape", %"class.tflite::RuntimeShape"* %42, i64 0, i32 1
  %2128 = bitcast %union.anon* %2127 to i32*
  %2129 = sext i32 %2115 to i64
  %2130 = shl nsw i64 %2129, 2
  br label %2131

2131:                                             ; preds = %2126, %2119
  %2132 = phi i64 [ %2121, %2119 ], [ %2130, %2126 ]
  %2133 = phi i32* [ %2125, %2119 ], [ %2128, %2126 ]
  %2134 = bitcast i32* %2133 to i8*
  %2135 = bitcast i32* %2116 to i8*
  call void @llvm.memcpy.p0i8.p0i8.i64(i8* align 4 %2134, i8* align 4 %2135, i64 %2132, i1 false) #8
  %2136 = getelementptr inbounds %struct.TfLiteTensor, %struct.TfLiteTensor* %79, i64 0, i32 1
  %2137 = bitcast %union.TfLitePtrUnion* %2136 to i8**
  %2138 = load i8*, i8** %2137, align 8
  br label %2139

2139:                                             ; preds = %2131, %2109
  %2140 = phi i8* [ %2138, %2131 ], [ null, %2109 ]
  call void @_ZN6tflite13reference_ops36BroadcastComparison4DSlowWithScalingIaXadL_ZNS0_6LessFnIiEEbT_S3_EEEEvRKNS_16ComparisonParamsERKNS_12RuntimeShapeEPKS3_S9_SB_S9_Pb(%"struct.tflite::ComparisonParams"* nonnull dereferenceable(32) %39, %"class.tflite::RuntimeShape"* nonnull dereferenceable(32) %40, i8* %2072, %"class.tflite::RuntimeShape"* nonnull dereferenceable(32) %41, i8* %2106, %"class.tflite::RuntimeShape"* nonnull dereferenceable(32) %42, i8* %2140) #8
  %2141 = getelementptr inbounds %"class.tflite::RuntimeShape", %"class.tflite::RuntimeShape"* %42, i64 0, i32 0
  %2142 = load i32, i32* %2141, align 8
  %2143 = icmp sgt i32 %2142, 5
  br i1 %2143, label %2144, label %2150

2144:                                             ; preds = %2139
  %2145 = getelementptr inbounds %"class.tflite::RuntimeShape", %"class.tflite::RuntimeShape"* %42, i64 0, i32 1, i32 0
  %2146 = load i32*, i32** %2145, align 8
  %2147 = icmp eq i32* %2146, null
  br i1 %2147, label %2150, label %2148

2148:                                             ; preds = %2144
  %2149 = bitcast i32* %2146 to i8*
  call void @_ZdaPv(i8* %2149) #9
  br label %2150

2150:                                             ; preds = %2148, %2144, %2139
  call void @llvm.lifetime.end.p0i8(i64 32, i8* nonnull %2107) #8
  %2151 = getelementptr inbounds %"class.tflite::RuntimeShape", %"class.tflite::RuntimeShape"* %41, i64 0, i32 0
  %2152 = load i32, i32* %2151, align 8
  %2153 = icmp sgt i32 %2152, 5
  br i1 %2153, label %2154, label %2160

2154:                                             ; preds = %2150
  %2155 = getelementptr inbounds %"class.tflite::RuntimeShape", %"class.tflite::RuntimeShape"* %41, i64 0, i32 1, i32 0
  %2156 = load i32*, i32** %2155, align 8
  %2157 = icmp eq i32* %2156, null
  br i1 %2157, label %2160, label %2158

2158:                                             ; preds = %2154
  %2159 = bitcast i32* %2156 to i8*
  call void @_ZdaPv(i8* %2159) #9
  br label %2160

2160:                                             ; preds = %2158, %2154, %2150
  call void @llvm.lifetime.end.p0i8(i64 32, i8* nonnull %2073) #8
  %2161 = getelementptr inbounds %"class.tflite::RuntimeShape", %"class.tflite::RuntimeShape"* %40, i64 0, i32 0
  %2162 = load i32, i32* %2161, align 8
  %2163 = icmp sgt i32 %2162, 5
  br i1 %2163, label %2164, label %2488

2164:                                             ; preds = %2160
  %2165 = getelementptr inbounds %"class.tflite::RuntimeShape", %"class.tflite::RuntimeShape"* %40, i64 0, i32 1, i32 0
  %2166 = load i32*, i32** %2165, align 8
  %2167 = icmp eq i32* %2166, null
  br i1 %2167, label %2488, label %2168

2168:                                             ; preds = %2164
  %2169 = bitcast i32* %2166 to i8*
  call void @_ZdaPv(i8* %2169) #9
  br label %2488

2170:                                             ; preds = %2007
  %2171 = bitcast %"class.tflite::RuntimeShape"* %43 to i8*
  call void @llvm.lifetime.start.p0i8(i64 32, i8* nonnull %2171) #8
  %2172 = icmp eq %struct.TfLiteTensor* %57, null
  br i1 %2172, label %2173, label %2175

2173:                                             ; preds = %2170
  %2174 = getelementptr inbounds %"class.tflite::RuntimeShape", %"class.tflite::RuntimeShape"* %43, i64 0, i32 0
  store i32 0, i32* %2174, align 8, !alias.scope !681
  br label %2203

2175:                                             ; preds = %2170
  %2176 = getelementptr inbounds %struct.TfLiteTensor, %struct.TfLiteTensor* %57, i64 0, i32 2
  %2177 = load %struct.TfLiteIntArray*, %struct.TfLiteIntArray** %2176, align 8, !noalias !681
  %2178 = getelementptr inbounds %struct.TfLiteIntArray, %struct.TfLiteIntArray* %2177, i64 0, i32 0
  %2179 = load i32, i32* %2178, align 4, !noalias !681
  %2180 = getelementptr inbounds %struct.TfLiteIntArray, %struct.TfLiteIntArray* %2177, i64 0, i32 1, i64 0
  %2181 = getelementptr inbounds %"class.tflite::RuntimeShape", %"class.tflite::RuntimeShape"* %43, i64 0, i32 0
  store i32 %2179, i32* %2181, align 8, !alias.scope !681
  %2182 = icmp sgt i32 %2179, 5
  br i1 %2182, label %2183, label %2190

2183:                                             ; preds = %2175
  %2184 = sext i32 %2179 to i64
  %2185 = shl nsw i64 %2184, 2
  %2186 = call i8* @_Znam(i64 %2185) #9, !noalias !681
  %2187 = getelementptr inbounds %"class.tflite::RuntimeShape", %"class.tflite::RuntimeShape"* %43, i64 0, i32 1, i32 0
  %2188 = bitcast i32** %2187 to i8**
  store i8* %2186, i8** %2188, align 8, !alias.scope !681
  %2189 = bitcast i8* %2186 to i32*
  br label %2195

2190:                                             ; preds = %2175
  %2191 = getelementptr inbounds %"class.tflite::RuntimeShape", %"class.tflite::RuntimeShape"* %43, i64 0, i32 1
  %2192 = bitcast %union.anon* %2191 to i32*
  %2193 = sext i32 %2179 to i64
  %2194 = shl nsw i64 %2193, 2
  br label %2195

2195:                                             ; preds = %2190, %2183
  %2196 = phi i64 [ %2185, %2183 ], [ %2194, %2190 ]
  %2197 = phi i32* [ %2189, %2183 ], [ %2192, %2190 ]
  %2198 = bitcast i32* %2197 to i8*
  %2199 = bitcast i32* %2180 to i8*
  call void @llvm.memcpy.p0i8.p0i8.i64(i8* align 4 %2198, i8* align 4 %2199, i64 %2196, i1 false) #8
  %2200 = getelementptr inbounds %struct.TfLiteTensor, %struct.TfLiteTensor* %57, i64 0, i32 1
  %2201 = bitcast %union.TfLitePtrUnion* %2200 to i8**
  %2202 = load i8*, i8** %2201, align 8
  br label %2203

2203:                                             ; preds = %2195, %2173
  %2204 = phi i32 [ %2179, %2195 ], [ 0, %2173 ]
  %2205 = phi i8* [ %2202, %2195 ], [ null, %2173 ]
  %2206 = bitcast %"class.tflite::RuntimeShape"* %44 to i8*
  call void @llvm.lifetime.start.p0i8(i64 32, i8* nonnull %2206) #8
  %2207 = icmp eq %struct.TfLiteTensor* %67, null
  br i1 %2207, label %2208, label %2210

2208:                                             ; preds = %2203
  %2209 = getelementptr inbounds %"class.tflite::RuntimeShape", %"class.tflite::RuntimeShape"* %44, i64 0, i32 0
  store i32 0, i32* %2209, align 8, !alias.scope !684
  br label %2238

2210:                                             ; preds = %2203
  %2211 = getelementptr inbounds %struct.TfLiteTensor, %struct.TfLiteTensor* %67, i64 0, i32 2
  %2212 = load %struct.TfLiteIntArray*, %struct.TfLiteIntArray** %2211, align 8, !noalias !684
  %2213 = getelementptr inbounds %struct.TfLiteIntArray, %struct.TfLiteIntArray* %2212, i64 0, i32 0
  %2214 = load i32, i32* %2213, align 4, !noalias !684
  %2215 = getelementptr inbounds %struct.TfLiteIntArray, %struct.TfLiteIntArray* %2212, i64 0, i32 1, i64 0
  %2216 = getelementptr inbounds %"class.tflite::RuntimeShape", %"class.tflite::RuntimeShape"* %44, i64 0, i32 0
  store i32 %2214, i32* %2216, align 8, !alias.scope !684
  %2217 = icmp sgt i32 %2214, 5
  br i1 %2217, label %2218, label %2225

2218:                                             ; preds = %2210
  %2219 = sext i32 %2214 to i64
  %2220 = shl nsw i64 %2219, 2
  %2221 = call i8* @_Znam(i64 %2220) #9, !noalias !684
  %2222 = getelementptr inbounds %"class.tflite::RuntimeShape", %"class.tflite::RuntimeShape"* %44, i64 0, i32 1, i32 0
  %2223 = bitcast i32** %2222 to i8**
  store i8* %2221, i8** %2223, align 8, !alias.scope !684
  %2224 = bitcast i8* %2221 to i32*
  br label %2230

2225:                                             ; preds = %2210
  %2226 = getelementptr inbounds %"class.tflite::RuntimeShape", %"class.tflite::RuntimeShape"* %44, i64 0, i32 1
  %2227 = bitcast %union.anon* %2226 to i32*
  %2228 = sext i32 %2214 to i64
  %2229 = shl nsw i64 %2228, 2
  br label %2230

2230:                                             ; preds = %2225, %2218
  %2231 = phi i64 [ %2220, %2218 ], [ %2229, %2225 ]
  %2232 = phi i32* [ %2224, %2218 ], [ %2227, %2225 ]
  %2233 = bitcast i32* %2232 to i8*
  %2234 = bitcast i32* %2215 to i8*
  call void @llvm.memcpy.p0i8.p0i8.i64(i8* align 4 %2233, i8* align 4 %2234, i64 %2231, i1 false) #8
  %2235 = getelementptr inbounds %struct.TfLiteTensor, %struct.TfLiteTensor* %67, i64 0, i32 1
  %2236 = bitcast %union.TfLitePtrUnion* %2235 to i8**
  %2237 = load i8*, i8** %2236, align 8
  br label %2238

2238:                                             ; preds = %2230, %2208
  %2239 = phi i32 [ %2214, %2230 ], [ 0, %2208 ]
  %2240 = phi i8* [ %2237, %2230 ], [ null, %2208 ]
  %2241 = bitcast %"class.tflite::RuntimeShape"* %45 to i8*
  call void @llvm.lifetime.start.p0i8(i64 32, i8* nonnull %2241) #8
  %2242 = icmp eq %struct.TfLiteTensor* %79, null
  br i1 %2242, label %2243, label %2245

2243:                                             ; preds = %2238
  %2244 = getelementptr inbounds %"class.tflite::RuntimeShape", %"class.tflite::RuntimeShape"* %45, i64 0, i32 0
  store i32 0, i32* %2244, align 8, !alias.scope !687
  br label %2273

2245:                                             ; preds = %2238
  %2246 = getelementptr inbounds %struct.TfLiteTensor, %struct.TfLiteTensor* %79, i64 0, i32 2
  %2247 = load %struct.TfLiteIntArray*, %struct.TfLiteIntArray** %2246, align 8, !noalias !687
  %2248 = getelementptr inbounds %struct.TfLiteIntArray, %struct.TfLiteIntArray* %2247, i64 0, i32 0
  %2249 = load i32, i32* %2248, align 4, !noalias !687
  %2250 = getelementptr inbounds %struct.TfLiteIntArray, %struct.TfLiteIntArray* %2247, i64 0, i32 1, i64 0
  %2251 = getelementptr inbounds %"class.tflite::RuntimeShape", %"class.tflite::RuntimeShape"* %45, i64 0, i32 0
  store i32 %2249, i32* %2251, align 8, !alias.scope !687
  %2252 = icmp sgt i32 %2249, 5
  br i1 %2252, label %2253, label %2260

2253:                                             ; preds = %2245
  %2254 = sext i32 %2249 to i64
  %2255 = shl nsw i64 %2254, 2
  %2256 = call i8* @_Znam(i64 %2255) #9, !noalias !687
  %2257 = getelementptr inbounds %"class.tflite::RuntimeShape", %"class.tflite::RuntimeShape"* %45, i64 0, i32 1, i32 0
  %2258 = bitcast i32** %2257 to i8**
  store i8* %2256, i8** %2258, align 8, !alias.scope !687
  %2259 = bitcast i8* %2256 to i32*
  br label %2265

2260:                                             ; preds = %2245
  %2261 = getelementptr inbounds %"class.tflite::RuntimeShape", %"class.tflite::RuntimeShape"* %45, i64 0, i32 1
  %2262 = bitcast %union.anon* %2261 to i32*
  %2263 = sext i32 %2249 to i64
  %2264 = shl nsw i64 %2263, 2
  br label %2265

2265:                                             ; preds = %2260, %2253
  %2266 = phi i64 [ %2255, %2253 ], [ %2264, %2260 ]
  %2267 = phi i32* [ %2259, %2253 ], [ %2262, %2260 ]
  %2268 = bitcast i32* %2267 to i8*
  %2269 = bitcast i32* %2250 to i8*
  call void @llvm.memcpy.p0i8.p0i8.i64(i8* align 4 %2268, i8* align 4 %2269, i64 %2266, i1 false) #8
  %2270 = getelementptr inbounds %struct.TfLiteTensor, %struct.TfLiteTensor* %79, i64 0, i32 1
  %2271 = bitcast %union.TfLitePtrUnion* %2270 to i8**
  %2272 = load i8*, i8** %2271, align 8
  br label %2273

2273:                                             ; preds = %2265, %2243
  %2274 = phi i32 [ %2249, %2265 ], [ 0, %2243 ]
  %2275 = phi i8* [ %2272, %2265 ], [ null, %2243 ]
  %2276 = getelementptr inbounds %"class.tflite::RuntimeShape", %"class.tflite::RuntimeShape"* %43, i64 0, i32 1
  %2277 = icmp sgt i32 %2204, 5
  br i1 %2277, label %2278, label %2281

2278:                                             ; preds = %2273
  %2279 = getelementptr inbounds %union.anon, %union.anon* %2276, i64 0, i32 0
  %2280 = load i32*, i32** %2279, align 8
  br label %2284

2281:                                             ; preds = %2273
  %2282 = bitcast %union.anon* %2276 to i32*
  %2283 = icmp sgt i32 %2204, 0
  br i1 %2283, label %2284, label %2388

2284:                                             ; preds = %2281, %2278
  %2285 = phi i32* [ %2280, %2278 ], [ %2282, %2281 ]
  %2286 = zext i32 %2204 to i64
  %2287 = icmp ult i32 %2204, 8
  br i1 %2287, label %2373, label %2288

2288:                                             ; preds = %2284
  %2289 = and i64 %2286, 4294967288
  %2290 = add nsw i64 %2289, -8
  %2291 = lshr exact i64 %2290, 3
  %2292 = add nuw nsw i64 %2291, 1
  %2293 = and i64 %2292, 3
  %2294 = icmp ult i64 %2290, 24
  br i1 %2294, label %2340, label %2295

2295:                                             ; preds = %2288
  %2296 = sub nsw i64 %2292, %2293
  br label %2297

2297:                                             ; preds = %2297, %2295
  %2298 = phi i64 [ 0, %2295 ], [ %2337, %2297 ]
  %2299 = phi <4 x i32> [ <i32 1, i32 1, i32 1, i32 1>, %2295 ], [ %2335, %2297 ]
  %2300 = phi <4 x i32> [ <i32 1, i32 1, i32 1, i32 1>, %2295 ], [ %2336, %2297 ]
  %2301 = phi i64 [ %2296, %2295 ], [ %2338, %2297 ]
  %2302 = getelementptr inbounds i32, i32* %2285, i64 %2298
  %2303 = bitcast i32* %2302 to <4 x i32>*
  %2304 = load <4 x i32>, <4 x i32>* %2303, align 4
  %2305 = getelementptr inbounds i32, i32* %2302, i64 4
  %2306 = bitcast i32* %2305 to <4 x i32>*
  %2307 = load <4 x i32>, <4 x i32>* %2306, align 4
  %2308 = mul nsw <4 x i32> %2304, %2299
  %2309 = mul nsw <4 x i32> %2307, %2300
  %2310 = or i64 %2298, 8
  %2311 = getelementptr inbounds i32, i32* %2285, i64 %2310
  %2312 = bitcast i32* %2311 to <4 x i32>*
  %2313 = load <4 x i32>, <4 x i32>* %2312, align 4
  %2314 = getelementptr inbounds i32, i32* %2311, i64 4
  %2315 = bitcast i32* %2314 to <4 x i32>*
  %2316 = load <4 x i32>, <4 x i32>* %2315, align 4
  %2317 = mul nsw <4 x i32> %2313, %2308
  %2318 = mul nsw <4 x i32> %2316, %2309
  %2319 = or i64 %2298, 16
  %2320 = getelementptr inbounds i32, i32* %2285, i64 %2319
  %2321 = bitcast i32* %2320 to <4 x i32>*
  %2322 = load <4 x i32>, <4 x i32>* %2321, align 4
  %2323 = getelementptr inbounds i32, i32* %2320, i64 4
  %2324 = bitcast i32* %2323 to <4 x i32>*
  %2325 = load <4 x i32>, <4 x i32>* %2324, align 4
  %2326 = mul nsw <4 x i32> %2322, %2317
  %2327 = mul nsw <4 x i32> %2325, %2318
  %2328 = or i64 %2298, 24
  %2329 = getelementptr inbounds i32, i32* %2285, i64 %2328
  %2330 = bitcast i32* %2329 to <4 x i32>*
  %2331 = load <4 x i32>, <4 x i32>* %2330, align 4
  %2332 = getelementptr inbounds i32, i32* %2329, i64 4
  %2333 = bitcast i32* %2332 to <4 x i32>*
  %2334 = load <4 x i32>, <4 x i32>* %2333, align 4
  %2335 = mul nsw <4 x i32> %2331, %2326
  %2336 = mul nsw <4 x i32> %2334, %2327
  %2337 = add i64 %2298, 32
  %2338 = add i64 %2301, -4
  %2339 = icmp eq i64 %2338, 0
  br i1 %2339, label %2340, label %2297, !llvm.loop !690

2340:                                             ; preds = %2297, %2288
  %2341 = phi <4 x i32> [ undef, %2288 ], [ %2335, %2297 ]
  %2342 = phi <4 x i32> [ undef, %2288 ], [ %2336, %2297 ]
  %2343 = phi i64 [ 0, %2288 ], [ %2337, %2297 ]
  %2344 = phi <4 x i32> [ <i32 1, i32 1, i32 1, i32 1>, %2288 ], [ %2335, %2297 ]
  %2345 = phi <4 x i32> [ <i32 1, i32 1, i32 1, i32 1>, %2288 ], [ %2336, %2297 ]
  %2346 = icmp eq i64 %2293, 0
  br i1 %2346, label %2363, label %2347

2347:                                             ; preds = %2340, %2347
  %2348 = phi i64 [ %2360, %2347 ], [ %2343, %2340 ]
  %2349 = phi <4 x i32> [ %2358, %2347 ], [ %2344, %2340 ]
  %2350 = phi <4 x i32> [ %2359, %2347 ], [ %2345, %2340 ]
  %2351 = phi i64 [ %2361, %2347 ], [ %2293, %2340 ]
  %2352 = getelementptr inbounds i32, i32* %2285, i64 %2348
  %2353 = bitcast i32* %2352 to <4 x i32>*
  %2354 = load <4 x i32>, <4 x i32>* %2353, align 4
  %2355 = getelementptr inbounds i32, i32* %2352, i64 4
  %2356 = bitcast i32* %2355 to <4 x i32>*
  %2357 = load <4 x i32>, <4 x i32>* %2356, align 4
  %2358 = mul nsw <4 x i32> %2354, %2349
  %2359 = mul nsw <4 x i32> %2357, %2350
  %2360 = add i64 %2348, 8
  %2361 = add i64 %2351, -1
  %2362 = icmp eq i64 %2361, 0
  br i1 %2362, label %2363, label %2347, !llvm.loop !691

2363:                                             ; preds = %2347, %2340
  %2364 = phi <4 x i32> [ %2341, %2340 ], [ %2358, %2347 ]
  %2365 = phi <4 x i32> [ %2342, %2340 ], [ %2359, %2347 ]
  %2366 = mul <4 x i32> %2365, %2364
  %2367 = shufflevector <4 x i32> %2366, <4 x i32> undef, <4 x i32> <i32 2, i32 3, i32 undef, i32 undef>
  %2368 = mul <4 x i32> %2366, %2367
  %2369 = shufflevector <4 x i32> %2368, <4 x i32> undef, <4 x i32> <i32 1, i32 undef, i32 undef, i32 undef>
  %2370 = mul <4 x i32> %2368, %2369
  %2371 = extractelement <4 x i32> %2370, i32 0
  %2372 = icmp eq i64 %2289, %2286
  br i1 %2372, label %2384, label %2373

2373:                                             ; preds = %2363, %2284
  %2374 = phi i64 [ 0, %2284 ], [ %2289, %2363 ]
  %2375 = phi i32 [ 1, %2284 ], [ %2371, %2363 ]
  br label %2376

2376:                                             ; preds = %2373, %2376
  %2377 = phi i64 [ %2382, %2376 ], [ %2374, %2373 ]
  %2378 = phi i32 [ %2381, %2376 ], [ %2375, %2373 ]
  %2379 = getelementptr inbounds i32, i32* %2285, i64 %2377
  %2380 = load i32, i32* %2379, align 4
  %2381 = mul nsw i32 %2380, %2378
  %2382 = add nuw nsw i64 %2377, 1
  %2383 = icmp eq i64 %2382, %2286
  br i1 %2383, label %2384, label %2376, !llvm.loop !692

2384:                                             ; preds = %2376, %2363
  %2385 = phi i32 [ %2371, %2363 ], [ %2381, %2376 ]
  %2386 = sext i32 %2385 to i64
  %2387 = icmp sgt i32 %2385, 0
  br i1 %2387, label %2388, label %2465

2388:                                             ; preds = %2384, %2281
  %2389 = phi i64 [ %2386, %2384 ], [ 1, %2281 ]
  %2390 = sext i32 %2029 to i64
  %2391 = sub nsw i32 0, %2031
  %2392 = zext i32 %2391 to i64
  %2393 = shl nsw i64 -1, %2392
  %2394 = trunc i64 %2393 to i32
  %2395 = xor i32 %2394, -1
  %2396 = ashr i32 %2395, 1
  %2397 = sext i32 %2034 to i64
  %2398 = sub nsw i32 0, %2036
  %2399 = zext i32 %2398 to i64
  %2400 = shl nsw i64 -1, %2399
  %2401 = trunc i64 %2400 to i32
  %2402 = xor i32 %2401, -1
  %2403 = ashr i32 %2402, 1
  %2404 = icmp eq i32 %2029, -2147483648
  %2405 = icmp eq i32 %2034, -2147483648
  br label %2406

2406:                                             ; preds = %2451, %2388
  %2407 = phi i64 [ 0, %2388 ], [ %2463, %2451 ]
  %2408 = getelementptr inbounds i8, i8* %2205, i64 %2407
  %2409 = load i8, i8* %2408, align 1
  %2410 = sext i8 %2409 to i32
  %2411 = sub i32 %2410, %2009
  %2412 = getelementptr inbounds i8, i8* %2240, i64 %2407
  %2413 = load i8, i8* %2412, align 1
  %2414 = sext i8 %2413 to i32
  %2415 = sub i32 %2414, %2012
  %2416 = shl i32 %2411, 8
  %2417 = shl i32 %2415, 8
  %2418 = icmp eq i32 %2416, %2029
  br i1 %2418, label %2421, label %2419

2419:                                             ; preds = %2406
  %2420 = sext i32 %2416 to i64
  br label %2422

2421:                                             ; preds = %2406
  br i1 %2404, label %2430, label %2422

2422:                                             ; preds = %2421, %2419
  %2423 = phi i64 [ %2420, %2419 ], [ %2390, %2421 ]
  %2424 = mul nsw i64 %2423, %2390
  %2425 = icmp sgt i64 %2424, -1
  %2426 = select i1 %2425, i64 1073741824, i64 -1073741823
  %2427 = add nsw i64 %2426, %2424
  %2428 = sdiv i64 %2427, 2147483648
  %2429 = trunc i64 %2428 to i32
  br label %2430

2430:                                             ; preds = %2422, %2421
  %2431 = phi i32 [ %2429, %2422 ], [ 2147483647, %2421 ]
  %2432 = and i32 %2431, %2395
  %2433 = lshr i32 %2431, 31
  %2434 = add nsw i32 %2433, %2396
  %2435 = ashr i32 %2431, %2391
  %2436 = icmp sgt i32 %2432, %2434
  %2437 = zext i1 %2436 to i32
  %2438 = add nsw i32 %2435, %2437
  %2439 = icmp eq i32 %2417, %2034
  br i1 %2439, label %2442, label %2440

2440:                                             ; preds = %2430
  %2441 = sext i32 %2417 to i64
  br label %2443

2442:                                             ; preds = %2430
  br i1 %2405, label %2451, label %2443

2443:                                             ; preds = %2442, %2440
  %2444 = phi i64 [ %2441, %2440 ], [ %2397, %2442 ]
  %2445 = mul nsw i64 %2444, %2397
  %2446 = icmp sgt i64 %2445, -1
  %2447 = select i1 %2446, i64 1073741824, i64 -1073741823
  %2448 = add nsw i64 %2447, %2445
  %2449 = sdiv i64 %2448, 2147483648
  %2450 = trunc i64 %2449 to i32
  br label %2451

2451:                                             ; preds = %2443, %2442
  %2452 = phi i32 [ %2450, %2443 ], [ 2147483647, %2442 ]
  %2453 = and i32 %2452, %2402
  %2454 = lshr i32 %2452, 31
  %2455 = add nsw i32 %2454, %2403
  %2456 = ashr i32 %2452, %2398
  %2457 = icmp sgt i32 %2453, %2455
  %2458 = zext i1 %2457 to i32
  %2459 = add nsw i32 %2456, %2458
  %2460 = icmp slt i32 %2438, %2459
  %2461 = getelementptr inbounds i8, i8* %2275, i64 %2407
  %2462 = zext i1 %2460 to i8
  store i8 %2462, i8* %2461, align 1
  %2463 = add nuw nsw i64 %2407, 1
  %2464 = icmp eq i64 %2463, %2389
  br i1 %2464, label %2465, label %2406

2465:                                             ; preds = %2451, %2384
  %2466 = icmp sgt i32 %2274, 5
  br i1 %2466, label %2467, label %2473

2467:                                             ; preds = %2465
  %2468 = getelementptr inbounds %"class.tflite::RuntimeShape", %"class.tflite::RuntimeShape"* %45, i64 0, i32 1, i32 0
  %2469 = load i32*, i32** %2468, align 8
  %2470 = icmp eq i32* %2469, null
  br i1 %2470, label %2473, label %2471

2471:                                             ; preds = %2467
  %2472 = bitcast i32* %2469 to i8*
  call void @_ZdaPv(i8* %2472) #9
  br label %2473

2473:                                             ; preds = %2471, %2467, %2465
  call void @llvm.lifetime.end.p0i8(i64 32, i8* nonnull %2241) #8
  %2474 = icmp sgt i32 %2239, 5
  br i1 %2474, label %2475, label %2481

2475:                                             ; preds = %2473
  %2476 = getelementptr inbounds %"class.tflite::RuntimeShape", %"class.tflite::RuntimeShape"* %44, i64 0, i32 1, i32 0
  %2477 = load i32*, i32** %2476, align 8
  %2478 = icmp eq i32* %2477, null
  br i1 %2478, label %2481, label %2479

2479:                                             ; preds = %2475
  %2480 = bitcast i32* %2477 to i8*
  call void @_ZdaPv(i8* %2480) #9
  br label %2481

2481:                                             ; preds = %2479, %2475, %2473
  call void @llvm.lifetime.end.p0i8(i64 32, i8* nonnull %2206) #8
  br i1 %2277, label %2482, label %2488

2482:                                             ; preds = %2481
  %2483 = getelementptr inbounds %"class.tflite::RuntimeShape", %"class.tflite::RuntimeShape"* %43, i64 0, i32 1, i32 0
  %2484 = load i32*, i32** %2483, align 8
  %2485 = icmp eq i32* %2484, null
  br i1 %2485, label %2488, label %2486

2486:                                             ; preds = %2482
  %2487 = bitcast i32* %2484 to i8*
  call void @_ZdaPv(i8* %2487) #9
  br label %2488

2488:                                             ; preds = %2481, %2482, %2486, %2160, %2164, %2168
  %2489 = phi i8* [ %2039, %2168 ], [ %2039, %2164 ], [ %2039, %2160 ], [ %2171, %2486 ], [ %2171, %2482 ], [ %2171, %2481 ]
  call void @llvm.lifetime.end.p0i8(i64 32, i8* nonnull %2489) #8
  call void @llvm.lifetime.end.p0i8(i64 32, i8* nonnull %2024) #8
  call void @llvm.lifetime.end.p0i8(i64 4, i8* nonnull %2020) #8
  call void @llvm.lifetime.end.p0i8(i64 4, i8* nonnull %2019) #8
  call void @llvm.lifetime.end.p0i8(i64 4, i8* nonnull %2015) #8
  call void @llvm.lifetime.end.p0i8(i64 4, i8* nonnull %2014) #8
  br label %2493

2490:                                             ; preds = %78
  %2491 = getelementptr inbounds %struct.TfLiteContext, %struct.TfLiteContext* %0, i64 0, i32 5
  %2492 = load void (%struct.TfLiteContext*, i8*, ...)*, void (%struct.TfLiteContext*, i8*, ...)** %2491, align 8
  tail call void (%struct.TfLiteContext*, i8*, ...) %2492(%struct.TfLiteContext* %0, i8* getelementptr inbounds ([51 x i8], [51 x i8]* @.str.15, i64 0, i64 0), i32 %82) #8
  br label %2493

2493:                                             ; preds = %596, %1107, %1522, %2005, %2488, %2490
  %2494 = phi i32 [ 1, %2490 ], [ 0, %2488 ], [ 0, %2005 ], [ 0, %1522 ], [ 0, %1107 ], [ 0, %596 ]
  ret i32 %2494
}

; Function Attrs: norecurse nounwind readnone ssp uwtable
define hidden nonnull %struct.TfLiteRegistration* @_ZN6tflite3ops7builtin19Register_LESS_EQUALEv() local_unnamed_addr #0 {
  ret %struct.TfLiteRegistration* @_ZZN6tflite3ops7builtin19Register_LESS_EQUALEvE1r
}

; Function Attrs: nounwind ssp uwtable
define internal i32 @_ZN6tflite3ops7builtin11comparisons12_GLOBAL__N_113LessEqualEvalEP13TfLiteContextP10TfLiteNode(%struct.TfLiteContext*, %struct.TfLiteNode* nocapture readonly) #1 {
  %3 = alloca i32, align 4
  %4 = alloca i32, align 4
  %5 = alloca i32, align 4
  %6 = alloca i32, align 4
  %7 = alloca %"struct.tflite::ComparisonParams", align 4
  %8 = alloca %"class.tflite::RuntimeShape", align 8
  %9 = alloca %"class.tflite::RuntimeShape", align 8
  %10 = alloca %"class.tflite::RuntimeShape", align 8
  %11 = alloca %"class.tflite::RuntimeShape", align 8
  %12 = alloca %"class.tflite::RuntimeShape", align 8
  %13 = alloca %"class.tflite::RuntimeShape", align 8
  %14 = alloca %"struct.tflite::ComparisonParams", align 4
  %15 = alloca %"class.tflite::RuntimeShape", align 8
  %16 = alloca %"class.tflite::RuntimeShape", align 8
  %17 = alloca %"class.tflite::RuntimeShape", align 8
  %18 = alloca %"class.tflite::RuntimeShape", align 8
  %19 = alloca %"class.tflite::RuntimeShape", align 8
  %20 = alloca %"class.tflite::RuntimeShape", align 8
  %21 = alloca %"struct.tflite::ComparisonParams", align 4
  %22 = alloca %"class.tflite::RuntimeShape", align 8
  %23 = alloca %"class.tflite::RuntimeShape", align 8
  %24 = alloca %"class.tflite::RuntimeShape", align 8
  %25 = alloca %"class.tflite::RuntimeShape", align 8
  %26 = alloca %"class.tflite::RuntimeShape", align 8
  %27 = alloca %"class.tflite::RuntimeShape", align 8
  %28 = alloca %"struct.tflite::ComparisonParams", align 4
  %29 = alloca %"class.tflite::RuntimeShape", align 8
  %30 = alloca %"class.tflite::RuntimeShape", align 8
  %31 = alloca %"class.tflite::RuntimeShape", align 8
  %32 = alloca %"class.tflite::RuntimeShape", align 8
  %33 = alloca %"class.tflite::RuntimeShape", align 8
  %34 = alloca %"class.tflite::RuntimeShape", align 8
  %35 = alloca i32, align 4
  %36 = alloca i32, align 4
  %37 = alloca i32, align 4
  %38 = alloca i32, align 4
  %39 = alloca %"struct.tflite::ComparisonParams", align 4
  %40 = alloca %"class.tflite::RuntimeShape", align 8
  %41 = alloca %"class.tflite::RuntimeShape", align 8
  %42 = alloca %"class.tflite::RuntimeShape", align 8
  %43 = alloca %"class.tflite::RuntimeShape", align 8
  %44 = alloca %"class.tflite::RuntimeShape", align 8
  %45 = alloca %"class.tflite::RuntimeShape", align 8
  %46 = getelementptr inbounds %struct.TfLiteNode, %struct.TfLiteNode* %1, i64 0, i32 0
  %47 = load %struct.TfLiteIntArray*, %struct.TfLiteIntArray** %46, align 8
  %48 = getelementptr inbounds %struct.TfLiteIntArray, %struct.TfLiteIntArray* %47, i64 0, i32 1, i64 0
  %49 = load i32, i32* %48, align 4
  %50 = icmp slt i32 %49, 0
  br i1 %50, label %56, label %51

51:                                               ; preds = %2
  %52 = getelementptr inbounds %struct.TfLiteContext, %struct.TfLiteContext* %0, i64 0, i32 2
  %53 = load %struct.TfLiteTensor*, %struct.TfLiteTensor** %52, align 8
  %54 = sext i32 %49 to i64
  %55 = getelementptr inbounds %struct.TfLiteTensor, %struct.TfLiteTensor* %53, i64 %54
  br label %56

56:                                               ; preds = %2, %51
  %57 = phi %struct.TfLiteTensor* [ %55, %51 ], [ null, %2 ]
  %58 = getelementptr inbounds %struct.TfLiteIntArray, %struct.TfLiteIntArray* %47, i64 0, i32 1, i64 1
  %59 = load i32, i32* %58, align 4
  %60 = icmp slt i32 %59, 0
  br i1 %60, label %66, label %61

61:                                               ; preds = %56
  %62 = getelementptr inbounds %struct.TfLiteContext, %struct.TfLiteContext* %0, i64 0, i32 2
  %63 = load %struct.TfLiteTensor*, %struct.TfLiteTensor** %62, align 8
  %64 = sext i32 %59 to i64
  %65 = getelementptr inbounds %struct.TfLiteTensor, %struct.TfLiteTensor* %63, i64 %64
  br label %66

66:                                               ; preds = %56, %61
  %67 = phi %struct.TfLiteTensor* [ %65, %61 ], [ null, %56 ]
  %68 = getelementptr inbounds %struct.TfLiteNode, %struct.TfLiteNode* %1, i64 0, i32 1
  %69 = load %struct.TfLiteIntArray*, %struct.TfLiteIntArray** %68, align 8
  %70 = getelementptr inbounds %struct.TfLiteIntArray, %struct.TfLiteIntArray* %69, i64 0, i32 1, i64 0
  %71 = load i32, i32* %70, align 4
  %72 = icmp slt i32 %71, 0
  br i1 %72, label %78, label %73

73:                                               ; preds = %66
  %74 = getelementptr inbounds %struct.TfLiteContext, %struct.TfLiteContext* %0, i64 0, i32 2
  %75 = load %struct.TfLiteTensor*, %struct.TfLiteTensor** %74, align 8
  %76 = sext i32 %71 to i64
  %77 = getelementptr inbounds %struct.TfLiteTensor, %struct.TfLiteTensor* %75, i64 %76
  br label %78

78:                                               ; preds = %66, %73
  %79 = phi %struct.TfLiteTensor* [ %77, %73 ], [ null, %66 ]
  %80 = tail call zeroext i1 @_ZN6tflite14HaveSameShapesEPK12TfLiteTensorS2_(%struct.TfLiteTensor* %57, %struct.TfLiteTensor* %67) #8
  %81 = getelementptr inbounds %struct.TfLiteTensor, %struct.TfLiteTensor* %57, i64 0, i32 0
  %82 = load i32, i32* %81, align 8
  switch i32 %82, label %2490 [
    i32 1, label %83
    i32 2, label %598
    i32 4, label %1109
    i32 3, label %1524
    i32 9, label %2007
  ]

83:                                               ; preds = %78
  %84 = bitcast %"struct.tflite::ComparisonParams"* %28 to i8*
  call void @llvm.lifetime.start.p0i8(i64 32, i8* nonnull %84) #8
  call void @llvm.memset.p0i8.i64(i8* nonnull align 4 %84, i8 -86, i64 32, i1 false) #8
  br i1 %80, label %186, label %85

85:                                               ; preds = %83
  %86 = bitcast %"class.tflite::RuntimeShape"* %29 to i8*
  call void @llvm.lifetime.start.p0i8(i64 32, i8* nonnull %86) #8
  %87 = icmp eq %struct.TfLiteTensor* %57, null
  br i1 %87, label %88, label %90

88:                                               ; preds = %85
  %89 = getelementptr inbounds %"class.tflite::RuntimeShape", %"class.tflite::RuntimeShape"* %29, i64 0, i32 0
  store i32 0, i32* %89, align 8, !alias.scope !693
  br label %118

90:                                               ; preds = %85
  %91 = getelementptr inbounds %struct.TfLiteTensor, %struct.TfLiteTensor* %57, i64 0, i32 2
  %92 = load %struct.TfLiteIntArray*, %struct.TfLiteIntArray** %91, align 8, !noalias !693
  %93 = getelementptr inbounds %struct.TfLiteIntArray, %struct.TfLiteIntArray* %92, i64 0, i32 0
  %94 = load i32, i32* %93, align 4, !noalias !693
  %95 = getelementptr inbounds %struct.TfLiteIntArray, %struct.TfLiteIntArray* %92, i64 0, i32 1, i64 0
  %96 = getelementptr inbounds %"class.tflite::RuntimeShape", %"class.tflite::RuntimeShape"* %29, i64 0, i32 0
  store i32 %94, i32* %96, align 8, !alias.scope !693
  %97 = icmp sgt i32 %94, 5
  br i1 %97, label %98, label %105

98:                                               ; preds = %90
  %99 = sext i32 %94 to i64
  %100 = shl nsw i64 %99, 2
  %101 = tail call i8* @_Znam(i64 %100) #9, !noalias !693
  %102 = getelementptr inbounds %"class.tflite::RuntimeShape", %"class.tflite::RuntimeShape"* %29, i64 0, i32 1, i32 0
  %103 = bitcast i32** %102 to i8**
  store i8* %101, i8** %103, align 8, !alias.scope !693
  %104 = bitcast i8* %101 to i32*
  br label %110

105:                                              ; preds = %90
  %106 = getelementptr inbounds %"class.tflite::RuntimeShape", %"class.tflite::RuntimeShape"* %29, i64 0, i32 1
  %107 = bitcast %union.anon* %106 to i32*
  %108 = sext i32 %94 to i64
  %109 = shl nsw i64 %108, 2
  br label %110

110:                                              ; preds = %105, %98
  %111 = phi i64 [ %100, %98 ], [ %109, %105 ]
  %112 = phi i32* [ %104, %98 ], [ %107, %105 ]
  %113 = bitcast i32* %112 to i8*
  %114 = bitcast i32* %95 to i8*
  call void @llvm.memcpy.p0i8.p0i8.i64(i8* align 4 %113, i8* align 4 %114, i64 %111, i1 false) #8
  %115 = getelementptr inbounds %struct.TfLiteTensor, %struct.TfLiteTensor* %57, i64 0, i32 1
  %116 = bitcast %union.TfLitePtrUnion* %115 to float**
  %117 = load float*, float** %116, align 8
  br label %118

118:                                              ; preds = %110, %88
  %119 = phi float* [ %117, %110 ], [ null, %88 ]
  %120 = bitcast %"class.tflite::RuntimeShape"* %30 to i8*
  call void @llvm.lifetime.start.p0i8(i64 32, i8* nonnull %120) #8
  %121 = icmp eq %struct.TfLiteTensor* %67, null
  br i1 %121, label %122, label %124

122:                                              ; preds = %118
  %123 = getelementptr inbounds %"class.tflite::RuntimeShape", %"class.tflite::RuntimeShape"* %30, i64 0, i32 0
  store i32 0, i32* %123, align 8, !alias.scope !696
  br label %152

124:                                              ; preds = %118
  %125 = getelementptr inbounds %struct.TfLiteTensor, %struct.TfLiteTensor* %67, i64 0, i32 2
  %126 = load %struct.TfLiteIntArray*, %struct.TfLiteIntArray** %125, align 8, !noalias !696
  %127 = getelementptr inbounds %struct.TfLiteIntArray, %struct.TfLiteIntArray* %126, i64 0, i32 0
  %128 = load i32, i32* %127, align 4, !noalias !696
  %129 = getelementptr inbounds %struct.TfLiteIntArray, %struct.TfLiteIntArray* %126, i64 0, i32 1, i64 0
  %130 = getelementptr inbounds %"class.tflite::RuntimeShape", %"class.tflite::RuntimeShape"* %30, i64 0, i32 0
  store i32 %128, i32* %130, align 8, !alias.scope !696
  %131 = icmp sgt i32 %128, 5
  br i1 %131, label %132, label %139

132:                                              ; preds = %124
  %133 = sext i32 %128 to i64
  %134 = shl nsw i64 %133, 2
  %135 = tail call i8* @_Znam(i64 %134) #9, !noalias !696
  %136 = getelementptr inbounds %"class.tflite::RuntimeShape", %"class.tflite::RuntimeShape"* %30, i64 0, i32 1, i32 0
  %137 = bitcast i32** %136 to i8**
  store i8* %135, i8** %137, align 8, !alias.scope !696
  %138 = bitcast i8* %135 to i32*
  br label %144

139:                                              ; preds = %124
  %140 = getelementptr inbounds %"class.tflite::RuntimeShape", %"class.tflite::RuntimeShape"* %30, i64 0, i32 1
  %141 = bitcast %union.anon* %140 to i32*
  %142 = sext i32 %128 to i64
  %143 = shl nsw i64 %142, 2
  br label %144

144:                                              ; preds = %139, %132
  %145 = phi i64 [ %134, %132 ], [ %143, %139 ]
  %146 = phi i32* [ %138, %132 ], [ %141, %139 ]
  %147 = bitcast i32* %146 to i8*
  %148 = bitcast i32* %129 to i8*
  call void @llvm.memcpy.p0i8.p0i8.i64(i8* align 4 %147, i8* align 4 %148, i64 %145, i1 false) #8
  %149 = getelementptr inbounds %struct.TfLiteTensor, %struct.TfLiteTensor* %67, i64 0, i32 1
  %150 = bitcast %union.TfLitePtrUnion* %149 to float**
  %151 = load float*, float** %150, align 8
  br label %152

152:                                              ; preds = %144, %122
  %153 = phi float* [ %151, %144 ], [ null, %122 ]
  %154 = bitcast %"class.tflite::RuntimeShape"* %31 to i8*
  call void @llvm.lifetime.start.p0i8(i64 32, i8* nonnull %154) #8
  %155 = icmp eq %struct.TfLiteTensor* %79, null
  br i1 %155, label %156, label %158

156:                                              ; preds = %152
  %157 = getelementptr inbounds %"class.tflite::RuntimeShape", %"class.tflite::RuntimeShape"* %31, i64 0, i32 0
  store i32 0, i32* %157, align 8, !alias.scope !699
  br label %565

158:                                              ; preds = %152
  %159 = getelementptr inbounds %struct.TfLiteTensor, %struct.TfLiteTensor* %79, i64 0, i32 2
  %160 = load %struct.TfLiteIntArray*, %struct.TfLiteIntArray** %159, align 8, !noalias !699
  %161 = getelementptr inbounds %struct.TfLiteIntArray, %struct.TfLiteIntArray* %160, i64 0, i32 0
  %162 = load i32, i32* %161, align 4, !noalias !699
  %163 = getelementptr inbounds %struct.TfLiteIntArray, %struct.TfLiteIntArray* %160, i64 0, i32 1, i64 0
  %164 = getelementptr inbounds %"class.tflite::RuntimeShape", %"class.tflite::RuntimeShape"* %31, i64 0, i32 0
  store i32 %162, i32* %164, align 8, !alias.scope !699
  %165 = icmp sgt i32 %162, 5
  br i1 %165, label %166, label %173

166:                                              ; preds = %158
  %167 = sext i32 %162 to i64
  %168 = shl nsw i64 %167, 2
  %169 = tail call i8* @_Znam(i64 %168) #9, !noalias !699
  %170 = getelementptr inbounds %"class.tflite::RuntimeShape", %"class.tflite::RuntimeShape"* %31, i64 0, i32 1, i32 0
  %171 = bitcast i32** %170 to i8**
  store i8* %169, i8** %171, align 8, !alias.scope !699
  %172 = bitcast i8* %169 to i32*
  br label %178

173:                                              ; preds = %158
  %174 = getelementptr inbounds %"class.tflite::RuntimeShape", %"class.tflite::RuntimeShape"* %31, i64 0, i32 1
  %175 = bitcast %union.anon* %174 to i32*
  %176 = sext i32 %162 to i64
  %177 = shl nsw i64 %176, 2
  br label %178

178:                                              ; preds = %173, %166
  %179 = phi i64 [ %168, %166 ], [ %177, %173 ]
  %180 = phi i32* [ %172, %166 ], [ %175, %173 ]
  %181 = bitcast i32* %180 to i8*
  %182 = bitcast i32* %163 to i8*
  call void @llvm.memcpy.p0i8.p0i8.i64(i8* align 4 %181, i8* align 4 %182, i64 %179, i1 false) #8
  %183 = getelementptr inbounds %struct.TfLiteTensor, %struct.TfLiteTensor* %79, i64 0, i32 1
  %184 = bitcast %union.TfLitePtrUnion* %183 to i8**
  %185 = load i8*, i8** %184, align 8
  br label %565

186:                                              ; preds = %83
  %187 = bitcast %"class.tflite::RuntimeShape"* %32 to i8*
  call void @llvm.lifetime.start.p0i8(i64 32, i8* nonnull %187) #8
  %188 = icmp eq %struct.TfLiteTensor* %57, null
  br i1 %188, label %189, label %191

189:                                              ; preds = %186
  %190 = getelementptr inbounds %"class.tflite::RuntimeShape", %"class.tflite::RuntimeShape"* %32, i64 0, i32 0
  store i32 0, i32* %190, align 8, !alias.scope !702
  br label %220

191:                                              ; preds = %186
  %192 = getelementptr inbounds %struct.TfLiteTensor, %struct.TfLiteTensor* %57, i64 0, i32 2
  %193 = load %struct.TfLiteIntArray*, %struct.TfLiteIntArray** %192, align 8, !noalias !702
  %194 = getelementptr inbounds %struct.TfLiteIntArray, %struct.TfLiteIntArray* %193, i64 0, i32 0
  %195 = load i32, i32* %194, align 4, !noalias !702
  %196 = getelementptr inbounds %struct.TfLiteIntArray, %struct.TfLiteIntArray* %193, i64 0, i32 1, i64 0
  %197 = getelementptr inbounds %"class.tflite::RuntimeShape", %"class.tflite::RuntimeShape"* %32, i64 0, i32 0
  store i32 %195, i32* %197, align 8, !alias.scope !702
  %198 = icmp sgt i32 %195, 5
  br i1 %198, label %199, label %206

199:                                              ; preds = %191
  %200 = sext i32 %195 to i64
  %201 = shl nsw i64 %200, 2
  %202 = tail call i8* @_Znam(i64 %201) #9, !noalias !702
  %203 = getelementptr inbounds %"class.tflite::RuntimeShape", %"class.tflite::RuntimeShape"* %32, i64 0, i32 1, i32 0
  %204 = bitcast i32** %203 to i8**
  store i8* %202, i8** %204, align 8, !alias.scope !702
  %205 = bitcast i8* %202 to i32*
  br label %211

206:                                              ; preds = %191
  %207 = getelementptr inbounds %"class.tflite::RuntimeShape", %"class.tflite::RuntimeShape"* %32, i64 0, i32 1
  %208 = bitcast %union.anon* %207 to i32*
  %209 = sext i32 %195 to i64
  %210 = shl nsw i64 %209, 2
  br label %211

211:                                              ; preds = %206, %199
  %212 = phi i64 [ %201, %199 ], [ %210, %206 ]
  %213 = phi i32* [ %205, %199 ], [ %208, %206 ]
  %214 = bitcast i32* %213 to i8*
  %215 = bitcast i32* %196 to i8*
  call void @llvm.memcpy.p0i8.p0i8.i64(i8* align 4 %214, i8* align 4 %215, i64 %212, i1 false) #8
  %216 = getelementptr inbounds %struct.TfLiteTensor, %struct.TfLiteTensor* %57, i64 0, i32 1
  %217 = bitcast %union.TfLitePtrUnion* %216 to float**
  %218 = load float*, float** %217, align 8
  %219 = bitcast float* %218 to i8*
  br label %220

220:                                              ; preds = %211, %189
  %221 = phi i32 [ %195, %211 ], [ 0, %189 ]
  %222 = phi i8* [ %219, %211 ], [ null, %189 ]
  %223 = phi float* [ %218, %211 ], [ null, %189 ]
  %224 = bitcast %"class.tflite::RuntimeShape"* %33 to i8*
  call void @llvm.lifetime.start.p0i8(i64 32, i8* nonnull %224) #8
  %225 = icmp eq %struct.TfLiteTensor* %67, null
  br i1 %225, label %226, label %228

226:                                              ; preds = %220
  %227 = getelementptr inbounds %"class.tflite::RuntimeShape", %"class.tflite::RuntimeShape"* %33, i64 0, i32 0
  store i32 0, i32* %227, align 8, !alias.scope !705
  br label %257

228:                                              ; preds = %220
  %229 = getelementptr inbounds %struct.TfLiteTensor, %struct.TfLiteTensor* %67, i64 0, i32 2
  %230 = load %struct.TfLiteIntArray*, %struct.TfLiteIntArray** %229, align 8, !noalias !705
  %231 = getelementptr inbounds %struct.TfLiteIntArray, %struct.TfLiteIntArray* %230, i64 0, i32 0
  %232 = load i32, i32* %231, align 4, !noalias !705
  %233 = getelementptr inbounds %struct.TfLiteIntArray, %struct.TfLiteIntArray* %230, i64 0, i32 1, i64 0
  %234 = getelementptr inbounds %"class.tflite::RuntimeShape", %"class.tflite::RuntimeShape"* %33, i64 0, i32 0
  store i32 %232, i32* %234, align 8, !alias.scope !705
  %235 = icmp sgt i32 %232, 5
  br i1 %235, label %236, label %243

236:                                              ; preds = %228
  %237 = sext i32 %232 to i64
  %238 = shl nsw i64 %237, 2
  %239 = tail call i8* @_Znam(i64 %238) #9, !noalias !705
  %240 = getelementptr inbounds %"class.tflite::RuntimeShape", %"class.tflite::RuntimeShape"* %33, i64 0, i32 1, i32 0
  %241 = bitcast i32** %240 to i8**
  store i8* %239, i8** %241, align 8, !alias.scope !705
  %242 = bitcast i8* %239 to i32*
  br label %248

243:                                              ; preds = %228
  %244 = getelementptr inbounds %"class.tflite::RuntimeShape", %"class.tflite::RuntimeShape"* %33, i64 0, i32 1
  %245 = bitcast %union.anon* %244 to i32*
  %246 = sext i32 %232 to i64
  %247 = shl nsw i64 %246, 2
  br label %248

248:                                              ; preds = %243, %236
  %249 = phi i64 [ %238, %236 ], [ %247, %243 ]
  %250 = phi i32* [ %242, %236 ], [ %245, %243 ]
  %251 = bitcast i32* %250 to i8*
  %252 = bitcast i32* %233 to i8*
  call void @llvm.memcpy.p0i8.p0i8.i64(i8* align 4 %251, i8* align 4 %252, i64 %249, i1 false) #8
  %253 = getelementptr inbounds %struct.TfLiteTensor, %struct.TfLiteTensor* %67, i64 0, i32 1
  %254 = bitcast %union.TfLitePtrUnion* %253 to float**
  %255 = load float*, float** %254, align 8
  %256 = bitcast float* %255 to i8*
  br label %257

257:                                              ; preds = %248, %226
  %258 = phi i32 [ %232, %248 ], [ 0, %226 ]
  %259 = phi i8* [ %256, %248 ], [ null, %226 ]
  %260 = phi float* [ %255, %248 ], [ null, %226 ]
  %261 = bitcast %"class.tflite::RuntimeShape"* %34 to i8*
  call void @llvm.lifetime.start.p0i8(i64 32, i8* nonnull %261) #8
  %262 = icmp eq %struct.TfLiteTensor* %79, null
  br i1 %262, label %263, label %265

263:                                              ; preds = %257
  %264 = getelementptr inbounds %"class.tflite::RuntimeShape", %"class.tflite::RuntimeShape"* %34, i64 0, i32 0
  store i32 0, i32* %264, align 8, !alias.scope !708
  br label %293

265:                                              ; preds = %257
  %266 = getelementptr inbounds %struct.TfLiteTensor, %struct.TfLiteTensor* %79, i64 0, i32 2
  %267 = load %struct.TfLiteIntArray*, %struct.TfLiteIntArray** %266, align 8, !noalias !708
  %268 = getelementptr inbounds %struct.TfLiteIntArray, %struct.TfLiteIntArray* %267, i64 0, i32 0
  %269 = load i32, i32* %268, align 4, !noalias !708
  %270 = getelementptr inbounds %struct.TfLiteIntArray, %struct.TfLiteIntArray* %267, i64 0, i32 1, i64 0
  %271 = getelementptr inbounds %"class.tflite::RuntimeShape", %"class.tflite::RuntimeShape"* %34, i64 0, i32 0
  store i32 %269, i32* %271, align 8, !alias.scope !708
  %272 = icmp sgt i32 %269, 5
  br i1 %272, label %273, label %280

273:                                              ; preds = %265
  %274 = sext i32 %269 to i64
  %275 = shl nsw i64 %274, 2
  %276 = tail call i8* @_Znam(i64 %275) #9, !noalias !708
  %277 = getelementptr inbounds %"class.tflite::RuntimeShape", %"class.tflite::RuntimeShape"* %34, i64 0, i32 1, i32 0
  %278 = bitcast i32** %277 to i8**
  store i8* %276, i8** %278, align 8, !alias.scope !708
  %279 = bitcast i8* %276 to i32*
  br label %285

280:                                              ; preds = %265
  %281 = getelementptr inbounds %"class.tflite::RuntimeShape", %"class.tflite::RuntimeShape"* %34, i64 0, i32 1
  %282 = bitcast %union.anon* %281 to i32*
  %283 = sext i32 %269 to i64
  %284 = shl nsw i64 %283, 2
  br label %285

285:                                              ; preds = %280, %273
  %286 = phi i64 [ %275, %273 ], [ %284, %280 ]
  %287 = phi i32* [ %279, %273 ], [ %282, %280 ]
  %288 = bitcast i32* %287 to i8*
  %289 = bitcast i32* %270 to i8*
  call void @llvm.memcpy.p0i8.p0i8.i64(i8* align 4 %288, i8* align 4 %289, i64 %286, i1 false) #8
  %290 = getelementptr inbounds %struct.TfLiteTensor, %struct.TfLiteTensor* %79, i64 0, i32 1
  %291 = bitcast %union.TfLitePtrUnion* %290 to i8**
  %292 = load i8*, i8** %291, align 8
  br label %293

293:                                              ; preds = %285, %263
  %294 = phi i32 [ %269, %285 ], [ 0, %263 ]
  %295 = phi i8* [ %292, %285 ], [ null, %263 ]
  %296 = getelementptr inbounds %"class.tflite::RuntimeShape", %"class.tflite::RuntimeShape"* %32, i64 0, i32 1
  %297 = icmp sgt i32 %221, 5
  br i1 %297, label %298, label %301

298:                                              ; preds = %293
  %299 = getelementptr inbounds %union.anon, %union.anon* %296, i64 0, i32 0
  %300 = load i32*, i32** %299, align 8
  br label %304

301:                                              ; preds = %293
  %302 = bitcast %union.anon* %296 to i32*
  %303 = icmp sgt i32 %221, 0
  br i1 %303, label %304, label %408

304:                                              ; preds = %301, %298
  %305 = phi i32* [ %300, %298 ], [ %302, %301 ]
  %306 = zext i32 %221 to i64
  %307 = icmp ult i32 %221, 8
  br i1 %307, label %393, label %308

308:                                              ; preds = %304
  %309 = and i64 %306, 4294967288
  %310 = add nsw i64 %309, -8
  %311 = lshr exact i64 %310, 3
  %312 = add nuw nsw i64 %311, 1
  %313 = and i64 %312, 3
  %314 = icmp ult i64 %310, 24
  br i1 %314, label %360, label %315

315:                                              ; preds = %308
  %316 = sub nsw i64 %312, %313
  br label %317

317:                                              ; preds = %317, %315
  %318 = phi i64 [ 0, %315 ], [ %357, %317 ]
  %319 = phi <4 x i32> [ <i32 1, i32 1, i32 1, i32 1>, %315 ], [ %355, %317 ]
  %320 = phi <4 x i32> [ <i32 1, i32 1, i32 1, i32 1>, %315 ], [ %356, %317 ]
  %321 = phi i64 [ %316, %315 ], [ %358, %317 ]
  %322 = getelementptr inbounds i32, i32* %305, i64 %318
  %323 = bitcast i32* %322 to <4 x i32>*
  %324 = load <4 x i32>, <4 x i32>* %323, align 4
  %325 = getelementptr inbounds i32, i32* %322, i64 4
  %326 = bitcast i32* %325 to <4 x i32>*
  %327 = load <4 x i32>, <4 x i32>* %326, align 4
  %328 = mul nsw <4 x i32> %324, %319
  %329 = mul nsw <4 x i32> %327, %320
  %330 = or i64 %318, 8
  %331 = getelementptr inbounds i32, i32* %305, i64 %330
  %332 = bitcast i32* %331 to <4 x i32>*
  %333 = load <4 x i32>, <4 x i32>* %332, align 4
  %334 = getelementptr inbounds i32, i32* %331, i64 4
  %335 = bitcast i32* %334 to <4 x i32>*
  %336 = load <4 x i32>, <4 x i32>* %335, align 4
  %337 = mul nsw <4 x i32> %333, %328
  %338 = mul nsw <4 x i32> %336, %329
  %339 = or i64 %318, 16
  %340 = getelementptr inbounds i32, i32* %305, i64 %339
  %341 = bitcast i32* %340 to <4 x i32>*
  %342 = load <4 x i32>, <4 x i32>* %341, align 4
  %343 = getelementptr inbounds i32, i32* %340, i64 4
  %344 = bitcast i32* %343 to <4 x i32>*
  %345 = load <4 x i32>, <4 x i32>* %344, align 4
  %346 = mul nsw <4 x i32> %342, %337
  %347 = mul nsw <4 x i32> %345, %338
  %348 = or i64 %318, 24
  %349 = getelementptr inbounds i32, i32* %305, i64 %348
  %350 = bitcast i32* %349 to <4 x i32>*
  %351 = load <4 x i32>, <4 x i32>* %350, align 4
  %352 = getelementptr inbounds i32, i32* %349, i64 4
  %353 = bitcast i32* %352 to <4 x i32>*
  %354 = load <4 x i32>, <4 x i32>* %353, align 4
  %355 = mul nsw <4 x i32> %351, %346
  %356 = mul nsw <4 x i32> %354, %347
  %357 = add i64 %318, 32
  %358 = add i64 %321, -4
  %359 = icmp eq i64 %358, 0
  br i1 %359, label %360, label %317, !llvm.loop !711

360:                                              ; preds = %317, %308
  %361 = phi <4 x i32> [ undef, %308 ], [ %355, %317 ]
  %362 = phi <4 x i32> [ undef, %308 ], [ %356, %317 ]
  %363 = phi i64 [ 0, %308 ], [ %357, %317 ]
  %364 = phi <4 x i32> [ <i32 1, i32 1, i32 1, i32 1>, %308 ], [ %355, %317 ]
  %365 = phi <4 x i32> [ <i32 1, i32 1, i32 1, i32 1>, %308 ], [ %356, %317 ]
  %366 = icmp eq i64 %313, 0
  br i1 %366, label %383, label %367

367:                                              ; preds = %360, %367
  %368 = phi i64 [ %380, %367 ], [ %363, %360 ]
  %369 = phi <4 x i32> [ %378, %367 ], [ %364, %360 ]
  %370 = phi <4 x i32> [ %379, %367 ], [ %365, %360 ]
  %371 = phi i64 [ %381, %367 ], [ %313, %360 ]
  %372 = getelementptr inbounds i32, i32* %305, i64 %368
  %373 = bitcast i32* %372 to <4 x i32>*
  %374 = load <4 x i32>, <4 x i32>* %373, align 4
  %375 = getelementptr inbounds i32, i32* %372, i64 4
  %376 = bitcast i32* %375 to <4 x i32>*
  %377 = load <4 x i32>, <4 x i32>* %376, align 4
  %378 = mul nsw <4 x i32> %374, %369
  %379 = mul nsw <4 x i32> %377, %370
  %380 = add i64 %368, 8
  %381 = add i64 %371, -1
  %382 = icmp eq i64 %381, 0
  br i1 %382, label %383, label %367, !llvm.loop !712

383:                                              ; preds = %367, %360
  %384 = phi <4 x i32> [ %361, %360 ], [ %378, %367 ]
  %385 = phi <4 x i32> [ %362, %360 ], [ %379, %367 ]
  %386 = mul <4 x i32> %385, %384
  %387 = shufflevector <4 x i32> %386, <4 x i32> undef, <4 x i32> <i32 2, i32 3, i32 undef, i32 undef>
  %388 = mul <4 x i32> %386, %387
  %389 = shufflevector <4 x i32> %388, <4 x i32> undef, <4 x i32> <i32 1, i32 undef, i32 undef, i32 undef>
  %390 = mul <4 x i32> %388, %389
  %391 = extractelement <4 x i32> %390, i32 0
  %392 = icmp eq i64 %309, %306
  br i1 %392, label %404, label %393

393:                                              ; preds = %383, %304
  %394 = phi i64 [ 0, %304 ], [ %309, %383 ]
  %395 = phi i32 [ 1, %304 ], [ %391, %383 ]
  br label %396

396:                                              ; preds = %393, %396
  %397 = phi i64 [ %402, %396 ], [ %394, %393 ]
  %398 = phi i32 [ %401, %396 ], [ %395, %393 ]
  %399 = getelementptr inbounds i32, i32* %305, i64 %397
  %400 = load i32, i32* %399, align 4
  %401 = mul nsw i32 %400, %398
  %402 = add nuw nsw i64 %397, 1
  %403 = icmp eq i64 %402, %306
  br i1 %403, label %404, label %396, !llvm.loop !713

404:                                              ; preds = %396, %383
  %405 = phi i32 [ %391, %383 ], [ %401, %396 ]
  %406 = sext i32 %405 to i64
  %407 = icmp sgt i32 %405, 0
  br i1 %407, label %408, label %542

408:                                              ; preds = %404, %301
  %409 = phi i64 [ %406, %404 ], [ 1, %301 ]
  %410 = icmp ult i64 %409, 8
  br i1 %410, label %506, label %411

411:                                              ; preds = %408
  %412 = getelementptr i8, i8* %295, i64 %409
  %413 = getelementptr float, float* %260, i64 %409
  %414 = bitcast float* %413 to i8*
  %415 = getelementptr float, float* %223, i64 %409
  %416 = bitcast float* %415 to i8*
  %417 = icmp ult i8* %295, %414
  %418 = icmp ult i8* %259, %412
  %419 = and i1 %417, %418
  %420 = icmp ult i8* %295, %416
  %421 = icmp ult i8* %222, %412
  %422 = and i1 %420, %421
  %423 = or i1 %419, %422
  br i1 %423, label %506, label %424

424:                                              ; preds = %411
  %425 = and i64 %409, -8
  %426 = add nsw i64 %425, -8
  %427 = lshr exact i64 %426, 3
  %428 = add nuw nsw i64 %427, 1
  %429 = and i64 %428, 1
  %430 = icmp eq i64 %426, 0
  br i1 %430, label %480, label %431

431:                                              ; preds = %424
  %432 = sub nuw nsw i64 %428, %429
  br label %433

433:                                              ; preds = %433, %431
  %434 = phi i64 [ 0, %431 ], [ %477, %433 ]
  %435 = phi i64 [ %432, %431 ], [ %478, %433 ]
  %436 = getelementptr inbounds float, float* %223, i64 %434
  %437 = bitcast float* %436 to <4 x float>*
  %438 = load <4 x float>, <4 x float>* %437, align 4, !alias.scope !714
  %439 = getelementptr inbounds float, float* %436, i64 4
  %440 = bitcast float* %439 to <4 x float>*
  %441 = load <4 x float>, <4 x float>* %440, align 4, !alias.scope !714
  %442 = getelementptr inbounds float, float* %260, i64 %434
  %443 = bitcast float* %442 to <4 x float>*
  %444 = load <4 x float>, <4 x float>* %443, align 4, !alias.scope !717
  %445 = getelementptr inbounds float, float* %442, i64 4
  %446 = bitcast float* %445 to <4 x float>*
  %447 = load <4 x float>, <4 x float>* %446, align 4, !alias.scope !717
  %448 = fcmp ole <4 x float> %438, %444
  %449 = fcmp ole <4 x float> %441, %447
  %450 = getelementptr inbounds i8, i8* %295, i64 %434
  %451 = zext <4 x i1> %448 to <4 x i8>
  %452 = zext <4 x i1> %449 to <4 x i8>
  %453 = bitcast i8* %450 to <4 x i8>*
  store <4 x i8> %451, <4 x i8>* %453, align 1, !alias.scope !719, !noalias !721
  %454 = getelementptr inbounds i8, i8* %450, i64 4
  %455 = bitcast i8* %454 to <4 x i8>*
  store <4 x i8> %452, <4 x i8>* %455, align 1, !alias.scope !719, !noalias !721
  %456 = or i64 %434, 8
  %457 = getelementptr inbounds float, float* %223, i64 %456
  %458 = bitcast float* %457 to <4 x float>*
  %459 = load <4 x float>, <4 x float>* %458, align 4, !alias.scope !714
  %460 = getelementptr inbounds float, float* %457, i64 4
  %461 = bitcast float* %460 to <4 x float>*
  %462 = load <4 x float>, <4 x float>* %461, align 4, !alias.scope !714
  %463 = getelementptr inbounds float, float* %260, i64 %456
  %464 = bitcast float* %463 to <4 x float>*
  %465 = load <4 x float>, <4 x float>* %464, align 4, !alias.scope !717
  %466 = getelementptr inbounds float, float* %463, i64 4
  %467 = bitcast float* %466 to <4 x float>*
  %468 = load <4 x float>, <4 x float>* %467, align 4, !alias.scope !717
  %469 = fcmp ole <4 x float> %459, %465
  %470 = fcmp ole <4 x float> %462, %468
  %471 = getelementptr inbounds i8, i8* %295, i64 %456
  %472 = zext <4 x i1> %469 to <4 x i8>
  %473 = zext <4 x i1> %470 to <4 x i8>
  %474 = bitcast i8* %471 to <4 x i8>*
  store <4 x i8> %472, <4 x i8>* %474, align 1, !alias.scope !719, !noalias !721
  %475 = getelementptr inbounds i8, i8* %471, i64 4
  %476 = bitcast i8* %475 to <4 x i8>*
  store <4 x i8> %473, <4 x i8>* %476, align 1, !alias.scope !719, !noalias !721
  %477 = add i64 %434, 16
  %478 = add i64 %435, -2
  %479 = icmp eq i64 %478, 0
  br i1 %479, label %480, label %433, !llvm.loop !722

480:                                              ; preds = %433, %424
  %481 = phi i64 [ 0, %424 ], [ %477, %433 ]
  %482 = icmp eq i64 %429, 0
  br i1 %482, label %504, label %483

483:                                              ; preds = %480
  %484 = getelementptr inbounds float, float* %223, i64 %481
  %485 = bitcast float* %484 to <4 x float>*
  %486 = load <4 x float>, <4 x float>* %485, align 4, !alias.scope !714
  %487 = getelementptr inbounds float, float* %484, i64 4
  %488 = bitcast float* %487 to <4 x float>*
  %489 = load <4 x float>, <4 x float>* %488, align 4, !alias.scope !714
  %490 = getelementptr inbounds float, float* %260, i64 %481
  %491 = bitcast float* %490 to <4 x float>*
  %492 = load <4 x float>, <4 x float>* %491, align 4, !alias.scope !717
  %493 = getelementptr inbounds float, float* %490, i64 4
  %494 = bitcast float* %493 to <4 x float>*
  %495 = load <4 x float>, <4 x float>* %494, align 4, !alias.scope !717
  %496 = fcmp ole <4 x float> %486, %492
  %497 = fcmp ole <4 x float> %489, %495
  %498 = getelementptr inbounds i8, i8* %295, i64 %481
  %499 = zext <4 x i1> %496 to <4 x i8>
  %500 = zext <4 x i1> %497 to <4 x i8>
  %501 = bitcast i8* %498 to <4 x i8>*
  store <4 x i8> %499, <4 x i8>* %501, align 1, !alias.scope !719, !noalias !721
  %502 = getelementptr inbounds i8, i8* %498, i64 4
  %503 = bitcast i8* %502 to <4 x i8>*
  store <4 x i8> %500, <4 x i8>* %503, align 1, !alias.scope !719, !noalias !721
  br label %504

504:                                              ; preds = %480, %483
  %505 = icmp eq i64 %409, %425
  br i1 %505, label %542, label %506

506:                                              ; preds = %504, %411, %408
  %507 = phi i64 [ 0, %411 ], [ 0, %408 ], [ %425, %504 ]
  %508 = and i64 %409, 1
  %509 = icmp eq i64 %508, 0
  br i1 %509, label %519, label %510

510:                                              ; preds = %506
  %511 = getelementptr inbounds float, float* %223, i64 %507
  %512 = load float, float* %511, align 4
  %513 = getelementptr inbounds float, float* %260, i64 %507
  %514 = load float, float* %513, align 4
  %515 = fcmp ole float %512, %514
  %516 = getelementptr inbounds i8, i8* %295, i64 %507
  %517 = zext i1 %515 to i8
  store i8 %517, i8* %516, align 1
  %518 = or i64 %507, 1
  br label %519

519:                                              ; preds = %506, %510
  %520 = phi i64 [ %507, %506 ], [ %518, %510 ]
  %521 = or i64 %507, 1
  %522 = icmp eq i64 %409, %521
  br i1 %522, label %542, label %523

523:                                              ; preds = %519, %523
  %524 = phi i64 [ %540, %523 ], [ %520, %519 ]
  %525 = getelementptr inbounds float, float* %223, i64 %524
  %526 = load float, float* %525, align 4
  %527 = getelementptr inbounds float, float* %260, i64 %524
  %528 = load float, float* %527, align 4
  %529 = fcmp ole float %526, %528
  %530 = getelementptr inbounds i8, i8* %295, i64 %524
  %531 = zext i1 %529 to i8
  store i8 %531, i8* %530, align 1
  %532 = add nuw nsw i64 %524, 1
  %533 = getelementptr inbounds float, float* %223, i64 %532
  %534 = load float, float* %533, align 4
  %535 = getelementptr inbounds float, float* %260, i64 %532
  %536 = load float, float* %535, align 4
  %537 = fcmp ole float %534, %536
  %538 = getelementptr inbounds i8, i8* %295, i64 %532
  %539 = zext i1 %537 to i8
  store i8 %539, i8* %538, align 1
  %540 = add nuw nsw i64 %524, 2
  %541 = icmp eq i64 %540, %409
  br i1 %541, label %542, label %523, !llvm.loop !723

542:                                              ; preds = %519, %523, %504, %404
  %543 = icmp sgt i32 %294, 5
  br i1 %543, label %544, label %550

544:                                              ; preds = %542
  %545 = getelementptr inbounds %"class.tflite::RuntimeShape", %"class.tflite::RuntimeShape"* %34, i64 0, i32 1, i32 0
  %546 = load i32*, i32** %545, align 8
  %547 = icmp eq i32* %546, null
  br i1 %547, label %550, label %548

548:                                              ; preds = %544
  %549 = bitcast i32* %546 to i8*
  tail call void @_ZdaPv(i8* %549) #9
  br label %550

550:                                              ; preds = %548, %544, %542
  call void @llvm.lifetime.end.p0i8(i64 32, i8* nonnull %261) #8
  %551 = icmp sgt i32 %258, 5
  br i1 %551, label %552, label %558

552:                                              ; preds = %550
  %553 = getelementptr inbounds %"class.tflite::RuntimeShape", %"class.tflite::RuntimeShape"* %33, i64 0, i32 1, i32 0
  %554 = load i32*, i32** %553, align 8
  %555 = icmp eq i32* %554, null
  br i1 %555, label %558, label %556

556:                                              ; preds = %552
  %557 = bitcast i32* %554 to i8*
  tail call void @_ZdaPv(i8* %557) #9
  br label %558

558:                                              ; preds = %556, %552, %550
  call void @llvm.lifetime.end.p0i8(i64 32, i8* nonnull %224) #8
  br i1 %297, label %559, label %596

559:                                              ; preds = %558
  %560 = getelementptr inbounds %"class.tflite::RuntimeShape", %"class.tflite::RuntimeShape"* %32, i64 0, i32 1, i32 0
  %561 = load i32*, i32** %560, align 8
  %562 = icmp eq i32* %561, null
  br i1 %562, label %596, label %563

563:                                              ; preds = %559
  %564 = bitcast i32* %561 to i8*
  tail call void @_ZdaPv(i8* %564) #9
  br label %596

565:                                              ; preds = %178, %156
  %566 = phi i8* [ %185, %178 ], [ null, %156 ]
  call void @_ZN6tflite13reference_ops29BroadcastComparison4DSlowImplIfXadL_ZNS0_11LessEqualFnIfEEbT_S3_EEEEvRKNS_16ComparisonParamsERKNS_12RuntimeShapeEPKS3_S9_SB_S9_Pb(%"struct.tflite::ComparisonParams"* nonnull dereferenceable(32) %28, %"class.tflite::RuntimeShape"* nonnull dereferenceable(32) %29, float* %119, %"class.tflite::RuntimeShape"* nonnull dereferenceable(32) %30, float* %153, %"class.tflite::RuntimeShape"* nonnull dereferenceable(32) %31, i8* %566) #8
  %567 = getelementptr inbounds %"class.tflite::RuntimeShape", %"class.tflite::RuntimeShape"* %31, i64 0, i32 0
  %568 = load i32, i32* %567, align 8
  %569 = icmp sgt i32 %568, 5
  br i1 %569, label %570, label %576

570:                                              ; preds = %565
  %571 = getelementptr inbounds %"class.tflite::RuntimeShape", %"class.tflite::RuntimeShape"* %31, i64 0, i32 1, i32 0
  %572 = load i32*, i32** %571, align 8
  %573 = icmp eq i32* %572, null
  br i1 %573, label %576, label %574

574:                                              ; preds = %570
  %575 = bitcast i32* %572 to i8*
  call void @_ZdaPv(i8* %575) #9
  br label %576

576:                                              ; preds = %574, %570, %565
  call void @llvm.lifetime.end.p0i8(i64 32, i8* nonnull %154) #8
  %577 = getelementptr inbounds %"class.tflite::RuntimeShape", %"class.tflite::RuntimeShape"* %30, i64 0, i32 0
  %578 = load i32, i32* %577, align 8
  %579 = icmp sgt i32 %578, 5
  br i1 %579, label %580, label %586

580:                                              ; preds = %576
  %581 = getelementptr inbounds %"class.tflite::RuntimeShape", %"class.tflite::RuntimeShape"* %30, i64 0, i32 1, i32 0
  %582 = load i32*, i32** %581, align 8
  %583 = icmp eq i32* %582, null
  br i1 %583, label %586, label %584

584:                                              ; preds = %580
  %585 = bitcast i32* %582 to i8*
  call void @_ZdaPv(i8* %585) #9
  br label %586

586:                                              ; preds = %584, %580, %576
  call void @llvm.lifetime.end.p0i8(i64 32, i8* nonnull %120) #8
  %587 = getelementptr inbounds %"class.tflite::RuntimeShape", %"class.tflite::RuntimeShape"* %29, i64 0, i32 0
  %588 = load i32, i32* %587, align 8
  %589 = icmp sgt i32 %588, 5
  br i1 %589, label %590, label %596

590:                                              ; preds = %586
  %591 = getelementptr inbounds %"class.tflite::RuntimeShape", %"class.tflite::RuntimeShape"* %29, i64 0, i32 1, i32 0
  %592 = load i32*, i32** %591, align 8
  %593 = icmp eq i32* %592, null
  br i1 %593, label %596, label %594

594:                                              ; preds = %590
  %595 = bitcast i32* %592 to i8*
  call void @_ZdaPv(i8* %595) #9
  br label %596

596:                                              ; preds = %586, %590, %594, %558, %559, %563
  %597 = phi i8* [ %187, %563 ], [ %187, %559 ], [ %187, %558 ], [ %86, %594 ], [ %86, %590 ], [ %86, %586 ]
  call void @llvm.lifetime.end.p0i8(i64 32, i8* nonnull %597) #8
  call void @llvm.lifetime.end.p0i8(i64 32, i8* nonnull %84) #8
  br label %2493

598:                                              ; preds = %78
  %599 = bitcast %"struct.tflite::ComparisonParams"* %21 to i8*
  call void @llvm.lifetime.start.p0i8(i64 32, i8* nonnull %599) #8
  call void @llvm.memset.p0i8.i64(i8* nonnull align 4 %599, i8 -86, i64 32, i1 false) #8
  br i1 %80, label %699, label %600

600:                                              ; preds = %598
  %601 = bitcast %"class.tflite::RuntimeShape"* %22 to i8*
  call void @llvm.lifetime.start.p0i8(i64 32, i8* nonnull %601) #8
  %602 = icmp eq %struct.TfLiteTensor* %57, null
  br i1 %602, label %603, label %605

603:                                              ; preds = %600
  %604 = getelementptr inbounds %"class.tflite::RuntimeShape", %"class.tflite::RuntimeShape"* %22, i64 0, i32 0
  store i32 0, i32* %604, align 8, !alias.scope !724
  br label %632

605:                                              ; preds = %600
  %606 = getelementptr inbounds %struct.TfLiteTensor, %struct.TfLiteTensor* %57, i64 0, i32 2
  %607 = load %struct.TfLiteIntArray*, %struct.TfLiteIntArray** %606, align 8, !noalias !724
  %608 = getelementptr inbounds %struct.TfLiteIntArray, %struct.TfLiteIntArray* %607, i64 0, i32 0
  %609 = load i32, i32* %608, align 4, !noalias !724
  %610 = getelementptr inbounds %struct.TfLiteIntArray, %struct.TfLiteIntArray* %607, i64 0, i32 1, i64 0
  %611 = getelementptr inbounds %"class.tflite::RuntimeShape", %"class.tflite::RuntimeShape"* %22, i64 0, i32 0
  store i32 %609, i32* %611, align 8, !alias.scope !724
  %612 = icmp sgt i32 %609, 5
  br i1 %612, label %613, label %620

613:                                              ; preds = %605
  %614 = sext i32 %609 to i64
  %615 = shl nsw i64 %614, 2
  %616 = tail call i8* @_Znam(i64 %615) #9, !noalias !724
  %617 = getelementptr inbounds %"class.tflite::RuntimeShape", %"class.tflite::RuntimeShape"* %22, i64 0, i32 1, i32 0
  %618 = bitcast i32** %617 to i8**
  store i8* %616, i8** %618, align 8, !alias.scope !724
  %619 = bitcast i8* %616 to i32*
  br label %625

620:                                              ; preds = %605
  %621 = getelementptr inbounds %"class.tflite::RuntimeShape", %"class.tflite::RuntimeShape"* %22, i64 0, i32 1
  %622 = bitcast %union.anon* %621 to i32*
  %623 = sext i32 %609 to i64
  %624 = shl nsw i64 %623, 2
  br label %625

625:                                              ; preds = %620, %613
  %626 = phi i64 [ %615, %613 ], [ %624, %620 ]
  %627 = phi i32* [ %619, %613 ], [ %622, %620 ]
  %628 = bitcast i32* %627 to i8*
  %629 = bitcast i32* %610 to i8*
  call void @llvm.memcpy.p0i8.p0i8.i64(i8* align 4 %628, i8* align 4 %629, i64 %626, i1 false) #8
  %630 = getelementptr inbounds %struct.TfLiteTensor, %struct.TfLiteTensor* %57, i64 0, i32 1, i32 0
  %631 = load i32*, i32** %630, align 8
  br label %632

632:                                              ; preds = %625, %603
  %633 = phi i32* [ %631, %625 ], [ null, %603 ]
  %634 = bitcast %"class.tflite::RuntimeShape"* %23 to i8*
  call void @llvm.lifetime.start.p0i8(i64 32, i8* nonnull %634) #8
  %635 = icmp eq %struct.TfLiteTensor* %67, null
  br i1 %635, label %636, label %638

636:                                              ; preds = %632
  %637 = getelementptr inbounds %"class.tflite::RuntimeShape", %"class.tflite::RuntimeShape"* %23, i64 0, i32 0
  store i32 0, i32* %637, align 8, !alias.scope !727
  br label %665

638:                                              ; preds = %632
  %639 = getelementptr inbounds %struct.TfLiteTensor, %struct.TfLiteTensor* %67, i64 0, i32 2
  %640 = load %struct.TfLiteIntArray*, %struct.TfLiteIntArray** %639, align 8, !noalias !727
  %641 = getelementptr inbounds %struct.TfLiteIntArray, %struct.TfLiteIntArray* %640, i64 0, i32 0
  %642 = load i32, i32* %641, align 4, !noalias !727
  %643 = getelementptr inbounds %struct.TfLiteIntArray, %struct.TfLiteIntArray* %640, i64 0, i32 1, i64 0
  %644 = getelementptr inbounds %"class.tflite::RuntimeShape", %"class.tflite::RuntimeShape"* %23, i64 0, i32 0
  store i32 %642, i32* %644, align 8, !alias.scope !727
  %645 = icmp sgt i32 %642, 5
  br i1 %645, label %646, label %653

646:                                              ; preds = %638
  %647 = sext i32 %642 to i64
  %648 = shl nsw i64 %647, 2
  %649 = tail call i8* @_Znam(i64 %648) #9, !noalias !727
  %650 = getelementptr inbounds %"class.tflite::RuntimeShape", %"class.tflite::RuntimeShape"* %23, i64 0, i32 1, i32 0
  %651 = bitcast i32** %650 to i8**
  store i8* %649, i8** %651, align 8, !alias.scope !727
  %652 = bitcast i8* %649 to i32*
  br label %658

653:                                              ; preds = %638
  %654 = getelementptr inbounds %"class.tflite::RuntimeShape", %"class.tflite::RuntimeShape"* %23, i64 0, i32 1
  %655 = bitcast %union.anon* %654 to i32*
  %656 = sext i32 %642 to i64
  %657 = shl nsw i64 %656, 2
  br label %658

658:                                              ; preds = %653, %646
  %659 = phi i64 [ %648, %646 ], [ %657, %653 ]
  %660 = phi i32* [ %652, %646 ], [ %655, %653 ]
  %661 = bitcast i32* %660 to i8*
  %662 = bitcast i32* %643 to i8*
  call void @llvm.memcpy.p0i8.p0i8.i64(i8* align 4 %661, i8* align 4 %662, i64 %659, i1 false) #8
  %663 = getelementptr inbounds %struct.TfLiteTensor, %struct.TfLiteTensor* %67, i64 0, i32 1, i32 0
  %664 = load i32*, i32** %663, align 8
  br label %665

665:                                              ; preds = %658, %636
  %666 = phi i32* [ %664, %658 ], [ null, %636 ]
  %667 = bitcast %"class.tflite::RuntimeShape"* %24 to i8*
  call void @llvm.lifetime.start.p0i8(i64 32, i8* nonnull %667) #8
  %668 = icmp eq %struct.TfLiteTensor* %79, null
  br i1 %668, label %669, label %671

669:                                              ; preds = %665
  %670 = getelementptr inbounds %"class.tflite::RuntimeShape", %"class.tflite::RuntimeShape"* %24, i64 0, i32 0
  store i32 0, i32* %670, align 8, !alias.scope !730
  br label %1076

671:                                              ; preds = %665
  %672 = getelementptr inbounds %struct.TfLiteTensor, %struct.TfLiteTensor* %79, i64 0, i32 2
  %673 = load %struct.TfLiteIntArray*, %struct.TfLiteIntArray** %672, align 8, !noalias !730
  %674 = getelementptr inbounds %struct.TfLiteIntArray, %struct.TfLiteIntArray* %673, i64 0, i32 0
  %675 = load i32, i32* %674, align 4, !noalias !730
  %676 = getelementptr inbounds %struct.TfLiteIntArray, %struct.TfLiteIntArray* %673, i64 0, i32 1, i64 0
  %677 = getelementptr inbounds %"class.tflite::RuntimeShape", %"class.tflite::RuntimeShape"* %24, i64 0, i32 0
  store i32 %675, i32* %677, align 8, !alias.scope !730
  %678 = icmp sgt i32 %675, 5
  br i1 %678, label %679, label %686

679:                                              ; preds = %671
  %680 = sext i32 %675 to i64
  %681 = shl nsw i64 %680, 2
  %682 = tail call i8* @_Znam(i64 %681) #9, !noalias !730
  %683 = getelementptr inbounds %"class.tflite::RuntimeShape", %"class.tflite::RuntimeShape"* %24, i64 0, i32 1, i32 0
  %684 = bitcast i32** %683 to i8**
  store i8* %682, i8** %684, align 8, !alias.scope !730
  %685 = bitcast i8* %682 to i32*
  br label %691

686:                                              ; preds = %671
  %687 = getelementptr inbounds %"class.tflite::RuntimeShape", %"class.tflite::RuntimeShape"* %24, i64 0, i32 1
  %688 = bitcast %union.anon* %687 to i32*
  %689 = sext i32 %675 to i64
  %690 = shl nsw i64 %689, 2
  br label %691

691:                                              ; preds = %686, %679
  %692 = phi i64 [ %681, %679 ], [ %690, %686 ]
  %693 = phi i32* [ %685, %679 ], [ %688, %686 ]
  %694 = bitcast i32* %693 to i8*
  %695 = bitcast i32* %676 to i8*
  call void @llvm.memcpy.p0i8.p0i8.i64(i8* align 4 %694, i8* align 4 %695, i64 %692, i1 false) #8
  %696 = getelementptr inbounds %struct.TfLiteTensor, %struct.TfLiteTensor* %79, i64 0, i32 1
  %697 = bitcast %union.TfLitePtrUnion* %696 to i8**
  %698 = load i8*, i8** %697, align 8
  br label %1076

699:                                              ; preds = %598
  %700 = bitcast %"class.tflite::RuntimeShape"* %25 to i8*
  call void @llvm.lifetime.start.p0i8(i64 32, i8* nonnull %700) #8
  %701 = icmp eq %struct.TfLiteTensor* %57, null
  br i1 %701, label %702, label %704

702:                                              ; preds = %699
  %703 = getelementptr inbounds %"class.tflite::RuntimeShape", %"class.tflite::RuntimeShape"* %25, i64 0, i32 0
  store i32 0, i32* %703, align 8, !alias.scope !733
  br label %732

704:                                              ; preds = %699
  %705 = getelementptr inbounds %struct.TfLiteTensor, %struct.TfLiteTensor* %57, i64 0, i32 2
  %706 = load %struct.TfLiteIntArray*, %struct.TfLiteIntArray** %705, align 8, !noalias !733
  %707 = getelementptr inbounds %struct.TfLiteIntArray, %struct.TfLiteIntArray* %706, i64 0, i32 0
  %708 = load i32, i32* %707, align 4, !noalias !733
  %709 = getelementptr inbounds %struct.TfLiteIntArray, %struct.TfLiteIntArray* %706, i64 0, i32 1, i64 0
  %710 = getelementptr inbounds %"class.tflite::RuntimeShape", %"class.tflite::RuntimeShape"* %25, i64 0, i32 0
  store i32 %708, i32* %710, align 8, !alias.scope !733
  %711 = icmp sgt i32 %708, 5
  br i1 %711, label %712, label %719

712:                                              ; preds = %704
  %713 = sext i32 %708 to i64
  %714 = shl nsw i64 %713, 2
  %715 = tail call i8* @_Znam(i64 %714) #9, !noalias !733
  %716 = getelementptr inbounds %"class.tflite::RuntimeShape", %"class.tflite::RuntimeShape"* %25, i64 0, i32 1, i32 0
  %717 = bitcast i32** %716 to i8**
  store i8* %715, i8** %717, align 8, !alias.scope !733
  %718 = bitcast i8* %715 to i32*
  br label %724

719:                                              ; preds = %704
  %720 = getelementptr inbounds %"class.tflite::RuntimeShape", %"class.tflite::RuntimeShape"* %25, i64 0, i32 1
  %721 = bitcast %union.anon* %720 to i32*
  %722 = sext i32 %708 to i64
  %723 = shl nsw i64 %722, 2
  br label %724

724:                                              ; preds = %719, %712
  %725 = phi i64 [ %714, %712 ], [ %723, %719 ]
  %726 = phi i32* [ %718, %712 ], [ %721, %719 ]
  %727 = bitcast i32* %726 to i8*
  %728 = bitcast i32* %709 to i8*
  call void @llvm.memcpy.p0i8.p0i8.i64(i8* align 4 %727, i8* align 4 %728, i64 %725, i1 false) #8
  %729 = getelementptr inbounds %struct.TfLiteTensor, %struct.TfLiteTensor* %57, i64 0, i32 1, i32 0
  %730 = load i32*, i32** %729, align 8
  %731 = bitcast i32* %730 to i8*
  br label %732

732:                                              ; preds = %724, %702
  %733 = phi i32 [ %708, %724 ], [ 0, %702 ]
  %734 = phi i8* [ %731, %724 ], [ null, %702 ]
  %735 = phi i32* [ %730, %724 ], [ null, %702 ]
  %736 = bitcast %"class.tflite::RuntimeShape"* %26 to i8*
  call void @llvm.lifetime.start.p0i8(i64 32, i8* nonnull %736) #8
  %737 = icmp eq %struct.TfLiteTensor* %67, null
  br i1 %737, label %738, label %740

738:                                              ; preds = %732
  %739 = getelementptr inbounds %"class.tflite::RuntimeShape", %"class.tflite::RuntimeShape"* %26, i64 0, i32 0
  store i32 0, i32* %739, align 8, !alias.scope !736
  br label %768

740:                                              ; preds = %732
  %741 = getelementptr inbounds %struct.TfLiteTensor, %struct.TfLiteTensor* %67, i64 0, i32 2
  %742 = load %struct.TfLiteIntArray*, %struct.TfLiteIntArray** %741, align 8, !noalias !736
  %743 = getelementptr inbounds %struct.TfLiteIntArray, %struct.TfLiteIntArray* %742, i64 0, i32 0
  %744 = load i32, i32* %743, align 4, !noalias !736
  %745 = getelementptr inbounds %struct.TfLiteIntArray, %struct.TfLiteIntArray* %742, i64 0, i32 1, i64 0
  %746 = getelementptr inbounds %"class.tflite::RuntimeShape", %"class.tflite::RuntimeShape"* %26, i64 0, i32 0
  store i32 %744, i32* %746, align 8, !alias.scope !736
  %747 = icmp sgt i32 %744, 5
  br i1 %747, label %748, label %755

748:                                              ; preds = %740
  %749 = sext i32 %744 to i64
  %750 = shl nsw i64 %749, 2
  %751 = tail call i8* @_Znam(i64 %750) #9, !noalias !736
  %752 = getelementptr inbounds %"class.tflite::RuntimeShape", %"class.tflite::RuntimeShape"* %26, i64 0, i32 1, i32 0
  %753 = bitcast i32** %752 to i8**
  store i8* %751, i8** %753, align 8, !alias.scope !736
  %754 = bitcast i8* %751 to i32*
  br label %760

755:                                              ; preds = %740
  %756 = getelementptr inbounds %"class.tflite::RuntimeShape", %"class.tflite::RuntimeShape"* %26, i64 0, i32 1
  %757 = bitcast %union.anon* %756 to i32*
  %758 = sext i32 %744 to i64
  %759 = shl nsw i64 %758, 2
  br label %760

760:                                              ; preds = %755, %748
  %761 = phi i64 [ %750, %748 ], [ %759, %755 ]
  %762 = phi i32* [ %754, %748 ], [ %757, %755 ]
  %763 = bitcast i32* %762 to i8*
  %764 = bitcast i32* %745 to i8*
  call void @llvm.memcpy.p0i8.p0i8.i64(i8* align 4 %763, i8* align 4 %764, i64 %761, i1 false) #8
  %765 = getelementptr inbounds %struct.TfLiteTensor, %struct.TfLiteTensor* %67, i64 0, i32 1, i32 0
  %766 = load i32*, i32** %765, align 8
  %767 = bitcast i32* %766 to i8*
  br label %768

768:                                              ; preds = %760, %738
  %769 = phi i32 [ %744, %760 ], [ 0, %738 ]
  %770 = phi i8* [ %767, %760 ], [ null, %738 ]
  %771 = phi i32* [ %766, %760 ], [ null, %738 ]
  %772 = bitcast %"class.tflite::RuntimeShape"* %27 to i8*
  call void @llvm.lifetime.start.p0i8(i64 32, i8* nonnull %772) #8
  %773 = icmp eq %struct.TfLiteTensor* %79, null
  br i1 %773, label %774, label %776

774:                                              ; preds = %768
  %775 = getelementptr inbounds %"class.tflite::RuntimeShape", %"class.tflite::RuntimeShape"* %27, i64 0, i32 0
  store i32 0, i32* %775, align 8, !alias.scope !739
  br label %804

776:                                              ; preds = %768
  %777 = getelementptr inbounds %struct.TfLiteTensor, %struct.TfLiteTensor* %79, i64 0, i32 2
  %778 = load %struct.TfLiteIntArray*, %struct.TfLiteIntArray** %777, align 8, !noalias !739
  %779 = getelementptr inbounds %struct.TfLiteIntArray, %struct.TfLiteIntArray* %778, i64 0, i32 0
  %780 = load i32, i32* %779, align 4, !noalias !739
  %781 = getelementptr inbounds %struct.TfLiteIntArray, %struct.TfLiteIntArray* %778, i64 0, i32 1, i64 0
  %782 = getelementptr inbounds %"class.tflite::RuntimeShape", %"class.tflite::RuntimeShape"* %27, i64 0, i32 0
  store i32 %780, i32* %782, align 8, !alias.scope !739
  %783 = icmp sgt i32 %780, 5
  br i1 %783, label %784, label %791

784:                                              ; preds = %776
  %785 = sext i32 %780 to i64
  %786 = shl nsw i64 %785, 2
  %787 = tail call i8* @_Znam(i64 %786) #9, !noalias !739
  %788 = getelementptr inbounds %"class.tflite::RuntimeShape", %"class.tflite::RuntimeShape"* %27, i64 0, i32 1, i32 0
  %789 = bitcast i32** %788 to i8**
  store i8* %787, i8** %789, align 8, !alias.scope !739
  %790 = bitcast i8* %787 to i32*
  br label %796

791:                                              ; preds = %776
  %792 = getelementptr inbounds %"class.tflite::RuntimeShape", %"class.tflite::RuntimeShape"* %27, i64 0, i32 1
  %793 = bitcast %union.anon* %792 to i32*
  %794 = sext i32 %780 to i64
  %795 = shl nsw i64 %794, 2
  br label %796

796:                                              ; preds = %791, %784
  %797 = phi i64 [ %786, %784 ], [ %795, %791 ]
  %798 = phi i32* [ %790, %784 ], [ %793, %791 ]
  %799 = bitcast i32* %798 to i8*
  %800 = bitcast i32* %781 to i8*
  call void @llvm.memcpy.p0i8.p0i8.i64(i8* align 4 %799, i8* align 4 %800, i64 %797, i1 false) #8
  %801 = getelementptr inbounds %struct.TfLiteTensor, %struct.TfLiteTensor* %79, i64 0, i32 1
  %802 = bitcast %union.TfLitePtrUnion* %801 to i8**
  %803 = load i8*, i8** %802, align 8
  br label %804

804:                                              ; preds = %796, %774
  %805 = phi i32 [ %780, %796 ], [ 0, %774 ]
  %806 = phi i8* [ %803, %796 ], [ null, %774 ]
  %807 = getelementptr inbounds %"class.tflite::RuntimeShape", %"class.tflite::RuntimeShape"* %25, i64 0, i32 1
  %808 = icmp sgt i32 %733, 5
  br i1 %808, label %809, label %812

809:                                              ; preds = %804
  %810 = getelementptr inbounds %union.anon, %union.anon* %807, i64 0, i32 0
  %811 = load i32*, i32** %810, align 8
  br label %815

812:                                              ; preds = %804
  %813 = bitcast %union.anon* %807 to i32*
  %814 = icmp sgt i32 %733, 0
  br i1 %814, label %815, label %919

815:                                              ; preds = %812, %809
  %816 = phi i32* [ %811, %809 ], [ %813, %812 ]
  %817 = zext i32 %733 to i64
  %818 = icmp ult i32 %733, 8
  br i1 %818, label %904, label %819

819:                                              ; preds = %815
  %820 = and i64 %817, 4294967288
  %821 = add nsw i64 %820, -8
  %822 = lshr exact i64 %821, 3
  %823 = add nuw nsw i64 %822, 1
  %824 = and i64 %823, 3
  %825 = icmp ult i64 %821, 24
  br i1 %825, label %871, label %826

826:                                              ; preds = %819
  %827 = sub nsw i64 %823, %824
  br label %828

828:                                              ; preds = %828, %826
  %829 = phi i64 [ 0, %826 ], [ %868, %828 ]
  %830 = phi <4 x i32> [ <i32 1, i32 1, i32 1, i32 1>, %826 ], [ %866, %828 ]
  %831 = phi <4 x i32> [ <i32 1, i32 1, i32 1, i32 1>, %826 ], [ %867, %828 ]
  %832 = phi i64 [ %827, %826 ], [ %869, %828 ]
  %833 = getelementptr inbounds i32, i32* %816, i64 %829
  %834 = bitcast i32* %833 to <4 x i32>*
  %835 = load <4 x i32>, <4 x i32>* %834, align 4
  %836 = getelementptr inbounds i32, i32* %833, i64 4
  %837 = bitcast i32* %836 to <4 x i32>*
  %838 = load <4 x i32>, <4 x i32>* %837, align 4
  %839 = mul nsw <4 x i32> %835, %830
  %840 = mul nsw <4 x i32> %838, %831
  %841 = or i64 %829, 8
  %842 = getelementptr inbounds i32, i32* %816, i64 %841
  %843 = bitcast i32* %842 to <4 x i32>*
  %844 = load <4 x i32>, <4 x i32>* %843, align 4
  %845 = getelementptr inbounds i32, i32* %842, i64 4
  %846 = bitcast i32* %845 to <4 x i32>*
  %847 = load <4 x i32>, <4 x i32>* %846, align 4
  %848 = mul nsw <4 x i32> %844, %839
  %849 = mul nsw <4 x i32> %847, %840
  %850 = or i64 %829, 16
  %851 = getelementptr inbounds i32, i32* %816, i64 %850
  %852 = bitcast i32* %851 to <4 x i32>*
  %853 = load <4 x i32>, <4 x i32>* %852, align 4
  %854 = getelementptr inbounds i32, i32* %851, i64 4
  %855 = bitcast i32* %854 to <4 x i32>*
  %856 = load <4 x i32>, <4 x i32>* %855, align 4
  %857 = mul nsw <4 x i32> %853, %848
  %858 = mul nsw <4 x i32> %856, %849
  %859 = or i64 %829, 24
  %860 = getelementptr inbounds i32, i32* %816, i64 %859
  %861 = bitcast i32* %860 to <4 x i32>*
  %862 = load <4 x i32>, <4 x i32>* %861, align 4
  %863 = getelementptr inbounds i32, i32* %860, i64 4
  %864 = bitcast i32* %863 to <4 x i32>*
  %865 = load <4 x i32>, <4 x i32>* %864, align 4
  %866 = mul nsw <4 x i32> %862, %857
  %867 = mul nsw <4 x i32> %865, %858
  %868 = add i64 %829, 32
  %869 = add i64 %832, -4
  %870 = icmp eq i64 %869, 0
  br i1 %870, label %871, label %828, !llvm.loop !742

871:                                              ; preds = %828, %819
  %872 = phi <4 x i32> [ undef, %819 ], [ %866, %828 ]
  %873 = phi <4 x i32> [ undef, %819 ], [ %867, %828 ]
  %874 = phi i64 [ 0, %819 ], [ %868, %828 ]
  %875 = phi <4 x i32> [ <i32 1, i32 1, i32 1, i32 1>, %819 ], [ %866, %828 ]
  %876 = phi <4 x i32> [ <i32 1, i32 1, i32 1, i32 1>, %819 ], [ %867, %828 ]
  %877 = icmp eq i64 %824, 0
  br i1 %877, label %894, label %878

878:                                              ; preds = %871, %878
  %879 = phi i64 [ %891, %878 ], [ %874, %871 ]
  %880 = phi <4 x i32> [ %889, %878 ], [ %875, %871 ]
  %881 = phi <4 x i32> [ %890, %878 ], [ %876, %871 ]
  %882 = phi i64 [ %892, %878 ], [ %824, %871 ]
  %883 = getelementptr inbounds i32, i32* %816, i64 %879
  %884 = bitcast i32* %883 to <4 x i32>*
  %885 = load <4 x i32>, <4 x i32>* %884, align 4
  %886 = getelementptr inbounds i32, i32* %883, i64 4
  %887 = bitcast i32* %886 to <4 x i32>*
  %888 = load <4 x i32>, <4 x i32>* %887, align 4
  %889 = mul nsw <4 x i32> %885, %880
  %890 = mul nsw <4 x i32> %888, %881
  %891 = add i64 %879, 8
  %892 = add i64 %882, -1
  %893 = icmp eq i64 %892, 0
  br i1 %893, label %894, label %878, !llvm.loop !743

894:                                              ; preds = %878, %871
  %895 = phi <4 x i32> [ %872, %871 ], [ %889, %878 ]
  %896 = phi <4 x i32> [ %873, %871 ], [ %890, %878 ]
  %897 = mul <4 x i32> %896, %895
  %898 = shufflevector <4 x i32> %897, <4 x i32> undef, <4 x i32> <i32 2, i32 3, i32 undef, i32 undef>
  %899 = mul <4 x i32> %897, %898
  %900 = shufflevector <4 x i32> %899, <4 x i32> undef, <4 x i32> <i32 1, i32 undef, i32 undef, i32 undef>
  %901 = mul <4 x i32> %899, %900
  %902 = extractelement <4 x i32> %901, i32 0
  %903 = icmp eq i64 %820, %817
  br i1 %903, label %915, label %904

904:                                              ; preds = %894, %815
  %905 = phi i64 [ 0, %815 ], [ %820, %894 ]
  %906 = phi i32 [ 1, %815 ], [ %902, %894 ]
  br label %907

907:                                              ; preds = %904, %907
  %908 = phi i64 [ %913, %907 ], [ %905, %904 ]
  %909 = phi i32 [ %912, %907 ], [ %906, %904 ]
  %910 = getelementptr inbounds i32, i32* %816, i64 %908
  %911 = load i32, i32* %910, align 4
  %912 = mul nsw i32 %911, %909
  %913 = add nuw nsw i64 %908, 1
  %914 = icmp eq i64 %913, %817
  br i1 %914, label %915, label %907, !llvm.loop !744

915:                                              ; preds = %907, %894
  %916 = phi i32 [ %902, %894 ], [ %912, %907 ]
  %917 = sext i32 %916 to i64
  %918 = icmp sgt i32 %916, 0
  br i1 %918, label %919, label %1053

919:                                              ; preds = %915, %812
  %920 = phi i64 [ %917, %915 ], [ 1, %812 ]
  %921 = icmp ult i64 %920, 8
  br i1 %921, label %1017, label %922

922:                                              ; preds = %919
  %923 = getelementptr i8, i8* %806, i64 %920
  %924 = getelementptr i32, i32* %771, i64 %920
  %925 = bitcast i32* %924 to i8*
  %926 = getelementptr i32, i32* %735, i64 %920
  %927 = bitcast i32* %926 to i8*
  %928 = icmp ult i8* %806, %925
  %929 = icmp ult i8* %770, %923
  %930 = and i1 %928, %929
  %931 = icmp ult i8* %806, %927
  %932 = icmp ult i8* %734, %923
  %933 = and i1 %931, %932
  %934 = or i1 %930, %933
  br i1 %934, label %1017, label %935

935:                                              ; preds = %922
  %936 = and i64 %920, -8
  %937 = add nsw i64 %936, -8
  %938 = lshr exact i64 %937, 3
  %939 = add nuw nsw i64 %938, 1
  %940 = and i64 %939, 1
  %941 = icmp eq i64 %937, 0
  br i1 %941, label %991, label %942

942:                                              ; preds = %935
  %943 = sub nuw nsw i64 %939, %940
  br label %944

944:                                              ; preds = %944, %942
  %945 = phi i64 [ 0, %942 ], [ %988, %944 ]
  %946 = phi i64 [ %943, %942 ], [ %989, %944 ]
  %947 = getelementptr inbounds i32, i32* %735, i64 %945
  %948 = bitcast i32* %947 to <4 x i32>*
  %949 = load <4 x i32>, <4 x i32>* %948, align 4, !alias.scope !745
  %950 = getelementptr inbounds i32, i32* %947, i64 4
  %951 = bitcast i32* %950 to <4 x i32>*
  %952 = load <4 x i32>, <4 x i32>* %951, align 4, !alias.scope !745
  %953 = getelementptr inbounds i32, i32* %771, i64 %945
  %954 = bitcast i32* %953 to <4 x i32>*
  %955 = load <4 x i32>, <4 x i32>* %954, align 4, !alias.scope !748
  %956 = getelementptr inbounds i32, i32* %953, i64 4
  %957 = bitcast i32* %956 to <4 x i32>*
  %958 = load <4 x i32>, <4 x i32>* %957, align 4, !alias.scope !748
  %959 = icmp sle <4 x i32> %949, %955
  %960 = icmp sle <4 x i32> %952, %958
  %961 = getelementptr inbounds i8, i8* %806, i64 %945
  %962 = zext <4 x i1> %959 to <4 x i8>
  %963 = zext <4 x i1> %960 to <4 x i8>
  %964 = bitcast i8* %961 to <4 x i8>*
  store <4 x i8> %962, <4 x i8>* %964, align 1, !alias.scope !750, !noalias !752
  %965 = getelementptr inbounds i8, i8* %961, i64 4
  %966 = bitcast i8* %965 to <4 x i8>*
  store <4 x i8> %963, <4 x i8>* %966, align 1, !alias.scope !750, !noalias !752
  %967 = or i64 %945, 8
  %968 = getelementptr inbounds i32, i32* %735, i64 %967
  %969 = bitcast i32* %968 to <4 x i32>*
  %970 = load <4 x i32>, <4 x i32>* %969, align 4, !alias.scope !745
  %971 = getelementptr inbounds i32, i32* %968, i64 4
  %972 = bitcast i32* %971 to <4 x i32>*
  %973 = load <4 x i32>, <4 x i32>* %972, align 4, !alias.scope !745
  %974 = getelementptr inbounds i32, i32* %771, i64 %967
  %975 = bitcast i32* %974 to <4 x i32>*
  %976 = load <4 x i32>, <4 x i32>* %975, align 4, !alias.scope !748
  %977 = getelementptr inbounds i32, i32* %974, i64 4
  %978 = bitcast i32* %977 to <4 x i32>*
  %979 = load <4 x i32>, <4 x i32>* %978, align 4, !alias.scope !748
  %980 = icmp sle <4 x i32> %970, %976
  %981 = icmp sle <4 x i32> %973, %979
  %982 = getelementptr inbounds i8, i8* %806, i64 %967
  %983 = zext <4 x i1> %980 to <4 x i8>
  %984 = zext <4 x i1> %981 to <4 x i8>
  %985 = bitcast i8* %982 to <4 x i8>*
  store <4 x i8> %983, <4 x i8>* %985, align 1, !alias.scope !750, !noalias !752
  %986 = getelementptr inbounds i8, i8* %982, i64 4
  %987 = bitcast i8* %986 to <4 x i8>*
  store <4 x i8> %984, <4 x i8>* %987, align 1, !alias.scope !750, !noalias !752
  %988 = add i64 %945, 16
  %989 = add i64 %946, -2
  %990 = icmp eq i64 %989, 0
  br i1 %990, label %991, label %944, !llvm.loop !753

991:                                              ; preds = %944, %935
  %992 = phi i64 [ 0, %935 ], [ %988, %944 ]
  %993 = icmp eq i64 %940, 0
  br i1 %993, label %1015, label %994

994:                                              ; preds = %991
  %995 = getelementptr inbounds i32, i32* %735, i64 %992
  %996 = bitcast i32* %995 to <4 x i32>*
  %997 = load <4 x i32>, <4 x i32>* %996, align 4, !alias.scope !745
  %998 = getelementptr inbounds i32, i32* %995, i64 4
  %999 = bitcast i32* %998 to <4 x i32>*
  %1000 = load <4 x i32>, <4 x i32>* %999, align 4, !alias.scope !745
  %1001 = getelementptr inbounds i32, i32* %771, i64 %992
  %1002 = bitcast i32* %1001 to <4 x i32>*
  %1003 = load <4 x i32>, <4 x i32>* %1002, align 4, !alias.scope !748
  %1004 = getelementptr inbounds i32, i32* %1001, i64 4
  %1005 = bitcast i32* %1004 to <4 x i32>*
  %1006 = load <4 x i32>, <4 x i32>* %1005, align 4, !alias.scope !748
  %1007 = icmp sle <4 x i32> %997, %1003
  %1008 = icmp sle <4 x i32> %1000, %1006
  %1009 = getelementptr inbounds i8, i8* %806, i64 %992
  %1010 = zext <4 x i1> %1007 to <4 x i8>
  %1011 = zext <4 x i1> %1008 to <4 x i8>
  %1012 = bitcast i8* %1009 to <4 x i8>*
  store <4 x i8> %1010, <4 x i8>* %1012, align 1, !alias.scope !750, !noalias !752
  %1013 = getelementptr inbounds i8, i8* %1009, i64 4
  %1014 = bitcast i8* %1013 to <4 x i8>*
  store <4 x i8> %1011, <4 x i8>* %1014, align 1, !alias.scope !750, !noalias !752
  br label %1015

1015:                                             ; preds = %991, %994
  %1016 = icmp eq i64 %920, %936
  br i1 %1016, label %1053, label %1017

1017:                                             ; preds = %1015, %922, %919
  %1018 = phi i64 [ 0, %922 ], [ 0, %919 ], [ %936, %1015 ]
  %1019 = and i64 %920, 1
  %1020 = icmp eq i64 %1019, 0
  br i1 %1020, label %1030, label %1021

1021:                                             ; preds = %1017
  %1022 = getelementptr inbounds i32, i32* %735, i64 %1018
  %1023 = load i32, i32* %1022, align 4
  %1024 = getelementptr inbounds i32, i32* %771, i64 %1018
  %1025 = load i32, i32* %1024, align 4
  %1026 = icmp sle i32 %1023, %1025
  %1027 = getelementptr inbounds i8, i8* %806, i64 %1018
  %1028 = zext i1 %1026 to i8
  store i8 %1028, i8* %1027, align 1
  %1029 = or i64 %1018, 1
  br label %1030

1030:                                             ; preds = %1017, %1021
  %1031 = phi i64 [ %1018, %1017 ], [ %1029, %1021 ]
  %1032 = or i64 %1018, 1
  %1033 = icmp eq i64 %920, %1032
  br i1 %1033, label %1053, label %1034

1034:                                             ; preds = %1030, %1034
  %1035 = phi i64 [ %1051, %1034 ], [ %1031, %1030 ]
  %1036 = getelementptr inbounds i32, i32* %735, i64 %1035
  %1037 = load i32, i32* %1036, align 4
  %1038 = getelementptr inbounds i32, i32* %771, i64 %1035
  %1039 = load i32, i32* %1038, align 4
  %1040 = icmp sle i32 %1037, %1039
  %1041 = getelementptr inbounds i8, i8* %806, i64 %1035
  %1042 = zext i1 %1040 to i8
  store i8 %1042, i8* %1041, align 1
  %1043 = add nuw nsw i64 %1035, 1
  %1044 = getelementptr inbounds i32, i32* %735, i64 %1043
  %1045 = load i32, i32* %1044, align 4
  %1046 = getelementptr inbounds i32, i32* %771, i64 %1043
  %1047 = load i32, i32* %1046, align 4
  %1048 = icmp sle i32 %1045, %1047
  %1049 = getelementptr inbounds i8, i8* %806, i64 %1043
  %1050 = zext i1 %1048 to i8
  store i8 %1050, i8* %1049, align 1
  %1051 = add nuw nsw i64 %1035, 2
  %1052 = icmp eq i64 %1051, %920
  br i1 %1052, label %1053, label %1034, !llvm.loop !754

1053:                                             ; preds = %1030, %1034, %1015, %915
  %1054 = icmp sgt i32 %805, 5
  br i1 %1054, label %1055, label %1061

1055:                                             ; preds = %1053
  %1056 = getelementptr inbounds %"class.tflite::RuntimeShape", %"class.tflite::RuntimeShape"* %27, i64 0, i32 1, i32 0
  %1057 = load i32*, i32** %1056, align 8
  %1058 = icmp eq i32* %1057, null
  br i1 %1058, label %1061, label %1059

1059:                                             ; preds = %1055
  %1060 = bitcast i32* %1057 to i8*
  tail call void @_ZdaPv(i8* %1060) #9
  br label %1061

1061:                                             ; preds = %1059, %1055, %1053
  call void @llvm.lifetime.end.p0i8(i64 32, i8* nonnull %772) #8
  %1062 = icmp sgt i32 %769, 5
  br i1 %1062, label %1063, label %1069

1063:                                             ; preds = %1061
  %1064 = getelementptr inbounds %"class.tflite::RuntimeShape", %"class.tflite::RuntimeShape"* %26, i64 0, i32 1, i32 0
  %1065 = load i32*, i32** %1064, align 8
  %1066 = icmp eq i32* %1065, null
  br i1 %1066, label %1069, label %1067

1067:                                             ; preds = %1063
  %1068 = bitcast i32* %1065 to i8*
  tail call void @_ZdaPv(i8* %1068) #9
  br label %1069

1069:                                             ; preds = %1067, %1063, %1061
  call void @llvm.lifetime.end.p0i8(i64 32, i8* nonnull %736) #8
  br i1 %808, label %1070, label %1107

1070:                                             ; preds = %1069
  %1071 = getelementptr inbounds %"class.tflite::RuntimeShape", %"class.tflite::RuntimeShape"* %25, i64 0, i32 1, i32 0
  %1072 = load i32*, i32** %1071, align 8
  %1073 = icmp eq i32* %1072, null
  br i1 %1073, label %1107, label %1074

1074:                                             ; preds = %1070
  %1075 = bitcast i32* %1072 to i8*
  tail call void @_ZdaPv(i8* %1075) #9
  br label %1107

1076:                                             ; preds = %691, %669
  %1077 = phi i8* [ %698, %691 ], [ null, %669 ]
  call void @_ZN6tflite13reference_ops29BroadcastComparison4DSlowImplIiXadL_ZNS0_11LessEqualFnIiEEbT_S3_EEEEvRKNS_16ComparisonParamsERKNS_12RuntimeShapeEPKS3_S9_SB_S9_Pb(%"struct.tflite::ComparisonParams"* nonnull dereferenceable(32) %21, %"class.tflite::RuntimeShape"* nonnull dereferenceable(32) %22, i32* %633, %"class.tflite::RuntimeShape"* nonnull dereferenceable(32) %23, i32* %666, %"class.tflite::RuntimeShape"* nonnull dereferenceable(32) %24, i8* %1077) #8
  %1078 = getelementptr inbounds %"class.tflite::RuntimeShape", %"class.tflite::RuntimeShape"* %24, i64 0, i32 0
  %1079 = load i32, i32* %1078, align 8
  %1080 = icmp sgt i32 %1079, 5
  br i1 %1080, label %1081, label %1087

1081:                                             ; preds = %1076
  %1082 = getelementptr inbounds %"class.tflite::RuntimeShape", %"class.tflite::RuntimeShape"* %24, i64 0, i32 1, i32 0
  %1083 = load i32*, i32** %1082, align 8
  %1084 = icmp eq i32* %1083, null
  br i1 %1084, label %1087, label %1085

1085:                                             ; preds = %1081
  %1086 = bitcast i32* %1083 to i8*
  call void @_ZdaPv(i8* %1086) #9
  br label %1087

1087:                                             ; preds = %1085, %1081, %1076
  call void @llvm.lifetime.end.p0i8(i64 32, i8* nonnull %667) #8
  %1088 = getelementptr inbounds %"class.tflite::RuntimeShape", %"class.tflite::RuntimeShape"* %23, i64 0, i32 0
  %1089 = load i32, i32* %1088, align 8
  %1090 = icmp sgt i32 %1089, 5
  br i1 %1090, label %1091, label %1097

1091:                                             ; preds = %1087
  %1092 = getelementptr inbounds %"class.tflite::RuntimeShape", %"class.tflite::RuntimeShape"* %23, i64 0, i32 1, i32 0
  %1093 = load i32*, i32** %1092, align 8
  %1094 = icmp eq i32* %1093, null
  br i1 %1094, label %1097, label %1095

1095:                                             ; preds = %1091
  %1096 = bitcast i32* %1093 to i8*
  call void @_ZdaPv(i8* %1096) #9
  br label %1097

1097:                                             ; preds = %1095, %1091, %1087
  call void @llvm.lifetime.end.p0i8(i64 32, i8* nonnull %634) #8
  %1098 = getelementptr inbounds %"class.tflite::RuntimeShape", %"class.tflite::RuntimeShape"* %22, i64 0, i32 0
  %1099 = load i32, i32* %1098, align 8
  %1100 = icmp sgt i32 %1099, 5
  br i1 %1100, label %1101, label %1107

1101:                                             ; preds = %1097
  %1102 = getelementptr inbounds %"class.tflite::RuntimeShape", %"class.tflite::RuntimeShape"* %22, i64 0, i32 1, i32 0
  %1103 = load i32*, i32** %1102, align 8
  %1104 = icmp eq i32* %1103, null
  br i1 %1104, label %1107, label %1105

1105:                                             ; preds = %1101
  %1106 = bitcast i32* %1103 to i8*
  call void @_ZdaPv(i8* %1106) #9
  br label %1107

1107:                                             ; preds = %1097, %1101, %1105, %1069, %1070, %1074
  %1108 = phi i8* [ %700, %1074 ], [ %700, %1070 ], [ %700, %1069 ], [ %601, %1105 ], [ %601, %1101 ], [ %601, %1097 ]
  call void @llvm.lifetime.end.p0i8(i64 32, i8* nonnull %1108) #8
  call void @llvm.lifetime.end.p0i8(i64 32, i8* nonnull %599) #8
  br label %2493

1109:                                             ; preds = %78
  %1110 = bitcast %"struct.tflite::ComparisonParams"* %14 to i8*
  call void @llvm.lifetime.start.p0i8(i64 32, i8* nonnull %1110) #8
  call void @llvm.memset.p0i8.i64(i8* nonnull align 4 %1110, i8 -86, i64 32, i1 false) #8
  br i1 %80, label %1212, label %1111

1111:                                             ; preds = %1109
  %1112 = bitcast %"class.tflite::RuntimeShape"* %15 to i8*
  call void @llvm.lifetime.start.p0i8(i64 32, i8* nonnull %1112) #8
  %1113 = icmp eq %struct.TfLiteTensor* %57, null
  br i1 %1113, label %1114, label %1116

1114:                                             ; preds = %1111
  %1115 = getelementptr inbounds %"class.tflite::RuntimeShape", %"class.tflite::RuntimeShape"* %15, i64 0, i32 0
  store i32 0, i32* %1115, align 8, !alias.scope !755
  br label %1144

1116:                                             ; preds = %1111
  %1117 = getelementptr inbounds %struct.TfLiteTensor, %struct.TfLiteTensor* %57, i64 0, i32 2
  %1118 = load %struct.TfLiteIntArray*, %struct.TfLiteIntArray** %1117, align 8, !noalias !755
  %1119 = getelementptr inbounds %struct.TfLiteIntArray, %struct.TfLiteIntArray* %1118, i64 0, i32 0
  %1120 = load i32, i32* %1119, align 4, !noalias !755
  %1121 = getelementptr inbounds %struct.TfLiteIntArray, %struct.TfLiteIntArray* %1118, i64 0, i32 1, i64 0
  %1122 = getelementptr inbounds %"class.tflite::RuntimeShape", %"class.tflite::RuntimeShape"* %15, i64 0, i32 0
  store i32 %1120, i32* %1122, align 8, !alias.scope !755
  %1123 = icmp sgt i32 %1120, 5
  br i1 %1123, label %1124, label %1131

1124:                                             ; preds = %1116
  %1125 = sext i32 %1120 to i64
  %1126 = shl nsw i64 %1125, 2
  %1127 = tail call i8* @_Znam(i64 %1126) #9, !noalias !755
  %1128 = getelementptr inbounds %"class.tflite::RuntimeShape", %"class.tflite::RuntimeShape"* %15, i64 0, i32 1, i32 0
  %1129 = bitcast i32** %1128 to i8**
  store i8* %1127, i8** %1129, align 8, !alias.scope !755
  %1130 = bitcast i8* %1127 to i32*
  br label %1136

1131:                                             ; preds = %1116
  %1132 = getelementptr inbounds %"class.tflite::RuntimeShape", %"class.tflite::RuntimeShape"* %15, i64 0, i32 1
  %1133 = bitcast %union.anon* %1132 to i32*
  %1134 = sext i32 %1120 to i64
  %1135 = shl nsw i64 %1134, 2
  br label %1136

1136:                                             ; preds = %1131, %1124
  %1137 = phi i64 [ %1126, %1124 ], [ %1135, %1131 ]
  %1138 = phi i32* [ %1130, %1124 ], [ %1133, %1131 ]
  %1139 = bitcast i32* %1138 to i8*
  %1140 = bitcast i32* %1121 to i8*
  call void @llvm.memcpy.p0i8.p0i8.i64(i8* align 4 %1139, i8* align 4 %1140, i64 %1137, i1 false) #8
  %1141 = getelementptr inbounds %struct.TfLiteTensor, %struct.TfLiteTensor* %57, i64 0, i32 1
  %1142 = bitcast %union.TfLitePtrUnion* %1141 to i64**
  %1143 = load i64*, i64** %1142, align 8
  br label %1144

1144:                                             ; preds = %1136, %1114
  %1145 = phi i64* [ %1143, %1136 ], [ null, %1114 ]
  %1146 = bitcast %"class.tflite::RuntimeShape"* %16 to i8*
  call void @llvm.lifetime.start.p0i8(i64 32, i8* nonnull %1146) #8
  %1147 = icmp eq %struct.TfLiteTensor* %67, null
  br i1 %1147, label %1148, label %1150

1148:                                             ; preds = %1144
  %1149 = getelementptr inbounds %"class.tflite::RuntimeShape", %"class.tflite::RuntimeShape"* %16, i64 0, i32 0
  store i32 0, i32* %1149, align 8, !alias.scope !758
  br label %1178

1150:                                             ; preds = %1144
  %1151 = getelementptr inbounds %struct.TfLiteTensor, %struct.TfLiteTensor* %67, i64 0, i32 2
  %1152 = load %struct.TfLiteIntArray*, %struct.TfLiteIntArray** %1151, align 8, !noalias !758
  %1153 = getelementptr inbounds %struct.TfLiteIntArray, %struct.TfLiteIntArray* %1152, i64 0, i32 0
  %1154 = load i32, i32* %1153, align 4, !noalias !758
  %1155 = getelementptr inbounds %struct.TfLiteIntArray, %struct.TfLiteIntArray* %1152, i64 0, i32 1, i64 0
  %1156 = getelementptr inbounds %"class.tflite::RuntimeShape", %"class.tflite::RuntimeShape"* %16, i64 0, i32 0
  store i32 %1154, i32* %1156, align 8, !alias.scope !758
  %1157 = icmp sgt i32 %1154, 5
  br i1 %1157, label %1158, label %1165

1158:                                             ; preds = %1150
  %1159 = sext i32 %1154 to i64
  %1160 = shl nsw i64 %1159, 2
  %1161 = tail call i8* @_Znam(i64 %1160) #9, !noalias !758
  %1162 = getelementptr inbounds %"class.tflite::RuntimeShape", %"class.tflite::RuntimeShape"* %16, i64 0, i32 1, i32 0
  %1163 = bitcast i32** %1162 to i8**
  store i8* %1161, i8** %1163, align 8, !alias.scope !758
  %1164 = bitcast i8* %1161 to i32*
  br label %1170

1165:                                             ; preds = %1150
  %1166 = getelementptr inbounds %"class.tflite::RuntimeShape", %"class.tflite::RuntimeShape"* %16, i64 0, i32 1
  %1167 = bitcast %union.anon* %1166 to i32*
  %1168 = sext i32 %1154 to i64
  %1169 = shl nsw i64 %1168, 2
  br label %1170

1170:                                             ; preds = %1165, %1158
  %1171 = phi i64 [ %1160, %1158 ], [ %1169, %1165 ]
  %1172 = phi i32* [ %1164, %1158 ], [ %1167, %1165 ]
  %1173 = bitcast i32* %1172 to i8*
  %1174 = bitcast i32* %1155 to i8*
  call void @llvm.memcpy.p0i8.p0i8.i64(i8* align 4 %1173, i8* align 4 %1174, i64 %1171, i1 false) #8
  %1175 = getelementptr inbounds %struct.TfLiteTensor, %struct.TfLiteTensor* %67, i64 0, i32 1
  %1176 = bitcast %union.TfLitePtrUnion* %1175 to i64**
  %1177 = load i64*, i64** %1176, align 8
  br label %1178

1178:                                             ; preds = %1170, %1148
  %1179 = phi i64* [ %1177, %1170 ], [ null, %1148 ]
  %1180 = bitcast %"class.tflite::RuntimeShape"* %17 to i8*
  call void @llvm.lifetime.start.p0i8(i64 32, i8* nonnull %1180) #8
  %1181 = icmp eq %struct.TfLiteTensor* %79, null
  br i1 %1181, label %1182, label %1184

1182:                                             ; preds = %1178
  %1183 = getelementptr inbounds %"class.tflite::RuntimeShape", %"class.tflite::RuntimeShape"* %17, i64 0, i32 0
  store i32 0, i32* %1183, align 8, !alias.scope !761
  br label %1491

1184:                                             ; preds = %1178
  %1185 = getelementptr inbounds %struct.TfLiteTensor, %struct.TfLiteTensor* %79, i64 0, i32 2
  %1186 = load %struct.TfLiteIntArray*, %struct.TfLiteIntArray** %1185, align 8, !noalias !761
  %1187 = getelementptr inbounds %struct.TfLiteIntArray, %struct.TfLiteIntArray* %1186, i64 0, i32 0
  %1188 = load i32, i32* %1187, align 4, !noalias !761
  %1189 = getelementptr inbounds %struct.TfLiteIntArray, %struct.TfLiteIntArray* %1186, i64 0, i32 1, i64 0
  %1190 = getelementptr inbounds %"class.tflite::RuntimeShape", %"class.tflite::RuntimeShape"* %17, i64 0, i32 0
  store i32 %1188, i32* %1190, align 8, !alias.scope !761
  %1191 = icmp sgt i32 %1188, 5
  br i1 %1191, label %1192, label %1199

1192:                                             ; preds = %1184
  %1193 = sext i32 %1188 to i64
  %1194 = shl nsw i64 %1193, 2
  %1195 = tail call i8* @_Znam(i64 %1194) #9, !noalias !761
  %1196 = getelementptr inbounds %"class.tflite::RuntimeShape", %"class.tflite::RuntimeShape"* %17, i64 0, i32 1, i32 0
  %1197 = bitcast i32** %1196 to i8**
  store i8* %1195, i8** %1197, align 8, !alias.scope !761
  %1198 = bitcast i8* %1195 to i32*
  br label %1204

1199:                                             ; preds = %1184
  %1200 = getelementptr inbounds %"class.tflite::RuntimeShape", %"class.tflite::RuntimeShape"* %17, i64 0, i32 1
  %1201 = bitcast %union.anon* %1200 to i32*
  %1202 = sext i32 %1188 to i64
  %1203 = shl nsw i64 %1202, 2
  br label %1204

1204:                                             ; preds = %1199, %1192
  %1205 = phi i64 [ %1194, %1192 ], [ %1203, %1199 ]
  %1206 = phi i32* [ %1198, %1192 ], [ %1201, %1199 ]
  %1207 = bitcast i32* %1206 to i8*
  %1208 = bitcast i32* %1189 to i8*
  call void @llvm.memcpy.p0i8.p0i8.i64(i8* align 4 %1207, i8* align 4 %1208, i64 %1205, i1 false) #8
  %1209 = getelementptr inbounds %struct.TfLiteTensor, %struct.TfLiteTensor* %79, i64 0, i32 1
  %1210 = bitcast %union.TfLitePtrUnion* %1209 to i8**
  %1211 = load i8*, i8** %1210, align 8
  br label %1491

1212:                                             ; preds = %1109
  %1213 = bitcast %"class.tflite::RuntimeShape"* %18 to i8*
  call void @llvm.lifetime.start.p0i8(i64 32, i8* nonnull %1213) #8
  %1214 = icmp eq %struct.TfLiteTensor* %57, null
  br i1 %1214, label %1215, label %1217

1215:                                             ; preds = %1212
  %1216 = getelementptr inbounds %"class.tflite::RuntimeShape", %"class.tflite::RuntimeShape"* %18, i64 0, i32 0
  store i32 0, i32* %1216, align 8, !alias.scope !764
  br label %1245

1217:                                             ; preds = %1212
  %1218 = getelementptr inbounds %struct.TfLiteTensor, %struct.TfLiteTensor* %57, i64 0, i32 2
  %1219 = load %struct.TfLiteIntArray*, %struct.TfLiteIntArray** %1218, align 8, !noalias !764
  %1220 = getelementptr inbounds %struct.TfLiteIntArray, %struct.TfLiteIntArray* %1219, i64 0, i32 0
  %1221 = load i32, i32* %1220, align 4, !noalias !764
  %1222 = getelementptr inbounds %struct.TfLiteIntArray, %struct.TfLiteIntArray* %1219, i64 0, i32 1, i64 0
  %1223 = getelementptr inbounds %"class.tflite::RuntimeShape", %"class.tflite::RuntimeShape"* %18, i64 0, i32 0
  store i32 %1221, i32* %1223, align 8, !alias.scope !764
  %1224 = icmp sgt i32 %1221, 5
  br i1 %1224, label %1225, label %1232

1225:                                             ; preds = %1217
  %1226 = sext i32 %1221 to i64
  %1227 = shl nsw i64 %1226, 2
  %1228 = tail call i8* @_Znam(i64 %1227) #9, !noalias !764
  %1229 = getelementptr inbounds %"class.tflite::RuntimeShape", %"class.tflite::RuntimeShape"* %18, i64 0, i32 1, i32 0
  %1230 = bitcast i32** %1229 to i8**
  store i8* %1228, i8** %1230, align 8, !alias.scope !764
  %1231 = bitcast i8* %1228 to i32*
  br label %1237

1232:                                             ; preds = %1217
  %1233 = getelementptr inbounds %"class.tflite::RuntimeShape", %"class.tflite::RuntimeShape"* %18, i64 0, i32 1
  %1234 = bitcast %union.anon* %1233 to i32*
  %1235 = sext i32 %1221 to i64
  %1236 = shl nsw i64 %1235, 2
  br label %1237

1237:                                             ; preds = %1232, %1225
  %1238 = phi i64 [ %1227, %1225 ], [ %1236, %1232 ]
  %1239 = phi i32* [ %1231, %1225 ], [ %1234, %1232 ]
  %1240 = bitcast i32* %1239 to i8*
  %1241 = bitcast i32* %1222 to i8*
  call void @llvm.memcpy.p0i8.p0i8.i64(i8* align 4 %1240, i8* align 4 %1241, i64 %1238, i1 false) #8
  %1242 = getelementptr inbounds %struct.TfLiteTensor, %struct.TfLiteTensor* %57, i64 0, i32 1
  %1243 = bitcast %union.TfLitePtrUnion* %1242 to i64**
  %1244 = load i64*, i64** %1243, align 8
  br label %1245

1245:                                             ; preds = %1237, %1215
  %1246 = phi i32 [ %1221, %1237 ], [ 0, %1215 ]
  %1247 = phi i64* [ %1244, %1237 ], [ null, %1215 ]
  %1248 = bitcast %"class.tflite::RuntimeShape"* %19 to i8*
  call void @llvm.lifetime.start.p0i8(i64 32, i8* nonnull %1248) #8
  %1249 = icmp eq %struct.TfLiteTensor* %67, null
  br i1 %1249, label %1250, label %1252

1250:                                             ; preds = %1245
  %1251 = getelementptr inbounds %"class.tflite::RuntimeShape", %"class.tflite::RuntimeShape"* %19, i64 0, i32 0
  store i32 0, i32* %1251, align 8, !alias.scope !767
  br label %1280

1252:                                             ; preds = %1245
  %1253 = getelementptr inbounds %struct.TfLiteTensor, %struct.TfLiteTensor* %67, i64 0, i32 2
  %1254 = load %struct.TfLiteIntArray*, %struct.TfLiteIntArray** %1253, align 8, !noalias !767
  %1255 = getelementptr inbounds %struct.TfLiteIntArray, %struct.TfLiteIntArray* %1254, i64 0, i32 0
  %1256 = load i32, i32* %1255, align 4, !noalias !767
  %1257 = getelementptr inbounds %struct.TfLiteIntArray, %struct.TfLiteIntArray* %1254, i64 0, i32 1, i64 0
  %1258 = getelementptr inbounds %"class.tflite::RuntimeShape", %"class.tflite::RuntimeShape"* %19, i64 0, i32 0
  store i32 %1256, i32* %1258, align 8, !alias.scope !767
  %1259 = icmp sgt i32 %1256, 5
  br i1 %1259, label %1260, label %1267

1260:                                             ; preds = %1252
  %1261 = sext i32 %1256 to i64
  %1262 = shl nsw i64 %1261, 2
  %1263 = tail call i8* @_Znam(i64 %1262) #9, !noalias !767
  %1264 = getelementptr inbounds %"class.tflite::RuntimeShape", %"class.tflite::RuntimeShape"* %19, i64 0, i32 1, i32 0
  %1265 = bitcast i32** %1264 to i8**
  store i8* %1263, i8** %1265, align 8, !alias.scope !767
  %1266 = bitcast i8* %1263 to i32*
  br label %1272

1267:                                             ; preds = %1252
  %1268 = getelementptr inbounds %"class.tflite::RuntimeShape", %"class.tflite::RuntimeShape"* %19, i64 0, i32 1
  %1269 = bitcast %union.anon* %1268 to i32*
  %1270 = sext i32 %1256 to i64
  %1271 = shl nsw i64 %1270, 2
  br label %1272

1272:                                             ; preds = %1267, %1260
  %1273 = phi i64 [ %1262, %1260 ], [ %1271, %1267 ]
  %1274 = phi i32* [ %1266, %1260 ], [ %1269, %1267 ]
  %1275 = bitcast i32* %1274 to i8*
  %1276 = bitcast i32* %1257 to i8*
  call void @llvm.memcpy.p0i8.p0i8.i64(i8* align 4 %1275, i8* align 4 %1276, i64 %1273, i1 false) #8
  %1277 = getelementptr inbounds %struct.TfLiteTensor, %struct.TfLiteTensor* %67, i64 0, i32 1
  %1278 = bitcast %union.TfLitePtrUnion* %1277 to i64**
  %1279 = load i64*, i64** %1278, align 8
  br label %1280

1280:                                             ; preds = %1272, %1250
  %1281 = phi i32 [ %1256, %1272 ], [ 0, %1250 ]
  %1282 = phi i64* [ %1279, %1272 ], [ null, %1250 ]
  %1283 = bitcast %"class.tflite::RuntimeShape"* %20 to i8*
  call void @llvm.lifetime.start.p0i8(i64 32, i8* nonnull %1283) #8
  %1284 = icmp eq %struct.TfLiteTensor* %79, null
  br i1 %1284, label %1285, label %1287

1285:                                             ; preds = %1280
  %1286 = getelementptr inbounds %"class.tflite::RuntimeShape", %"class.tflite::RuntimeShape"* %20, i64 0, i32 0
  store i32 0, i32* %1286, align 8, !alias.scope !770
  br label %1315

1287:                                             ; preds = %1280
  %1288 = getelementptr inbounds %struct.TfLiteTensor, %struct.TfLiteTensor* %79, i64 0, i32 2
  %1289 = load %struct.TfLiteIntArray*, %struct.TfLiteIntArray** %1288, align 8, !noalias !770
  %1290 = getelementptr inbounds %struct.TfLiteIntArray, %struct.TfLiteIntArray* %1289, i64 0, i32 0
  %1291 = load i32, i32* %1290, align 4, !noalias !770
  %1292 = getelementptr inbounds %struct.TfLiteIntArray, %struct.TfLiteIntArray* %1289, i64 0, i32 1, i64 0
  %1293 = getelementptr inbounds %"class.tflite::RuntimeShape", %"class.tflite::RuntimeShape"* %20, i64 0, i32 0
  store i32 %1291, i32* %1293, align 8, !alias.scope !770
  %1294 = icmp sgt i32 %1291, 5
  br i1 %1294, label %1295, label %1302

1295:                                             ; preds = %1287
  %1296 = sext i32 %1291 to i64
  %1297 = shl nsw i64 %1296, 2
  %1298 = tail call i8* @_Znam(i64 %1297) #9, !noalias !770
  %1299 = getelementptr inbounds %"class.tflite::RuntimeShape", %"class.tflite::RuntimeShape"* %20, i64 0, i32 1, i32 0
  %1300 = bitcast i32** %1299 to i8**
  store i8* %1298, i8** %1300, align 8, !alias.scope !770
  %1301 = bitcast i8* %1298 to i32*
  br label %1307

1302:                                             ; preds = %1287
  %1303 = getelementptr inbounds %"class.tflite::RuntimeShape", %"class.tflite::RuntimeShape"* %20, i64 0, i32 1
  %1304 = bitcast %union.anon* %1303 to i32*
  %1305 = sext i32 %1291 to i64
  %1306 = shl nsw i64 %1305, 2
  br label %1307

1307:                                             ; preds = %1302, %1295
  %1308 = phi i64 [ %1297, %1295 ], [ %1306, %1302 ]
  %1309 = phi i32* [ %1301, %1295 ], [ %1304, %1302 ]
  %1310 = bitcast i32* %1309 to i8*
  %1311 = bitcast i32* %1292 to i8*
  call void @llvm.memcpy.p0i8.p0i8.i64(i8* align 4 %1310, i8* align 4 %1311, i64 %1308, i1 false) #8
  %1312 = getelementptr inbounds %struct.TfLiteTensor, %struct.TfLiteTensor* %79, i64 0, i32 1
  %1313 = bitcast %union.TfLitePtrUnion* %1312 to i8**
  %1314 = load i8*, i8** %1313, align 8
  br label %1315

1315:                                             ; preds = %1307, %1285
  %1316 = phi i32 [ %1291, %1307 ], [ 0, %1285 ]
  %1317 = phi i8* [ %1314, %1307 ], [ null, %1285 ]
  %1318 = getelementptr inbounds %"class.tflite::RuntimeShape", %"class.tflite::RuntimeShape"* %18, i64 0, i32 1
  %1319 = icmp sgt i32 %1246, 5
  br i1 %1319, label %1320, label %1323

1320:                                             ; preds = %1315
  %1321 = getelementptr inbounds %union.anon, %union.anon* %1318, i64 0, i32 0
  %1322 = load i32*, i32** %1321, align 8
  br label %1326

1323:                                             ; preds = %1315
  %1324 = bitcast %union.anon* %1318 to i32*
  %1325 = icmp sgt i32 %1246, 0
  br i1 %1325, label %1326, label %1430

1326:                                             ; preds = %1323, %1320
  %1327 = phi i32* [ %1322, %1320 ], [ %1324, %1323 ]
  %1328 = zext i32 %1246 to i64
  %1329 = icmp ult i32 %1246, 8
  br i1 %1329, label %1415, label %1330

1330:                                             ; preds = %1326
  %1331 = and i64 %1328, 4294967288
  %1332 = add nsw i64 %1331, -8
  %1333 = lshr exact i64 %1332, 3
  %1334 = add nuw nsw i64 %1333, 1
  %1335 = and i64 %1334, 3
  %1336 = icmp ult i64 %1332, 24
  br i1 %1336, label %1382, label %1337

1337:                                             ; preds = %1330
  %1338 = sub nsw i64 %1334, %1335
  br label %1339

1339:                                             ; preds = %1339, %1337
  %1340 = phi i64 [ 0, %1337 ], [ %1379, %1339 ]
  %1341 = phi <4 x i32> [ <i32 1, i32 1, i32 1, i32 1>, %1337 ], [ %1377, %1339 ]
  %1342 = phi <4 x i32> [ <i32 1, i32 1, i32 1, i32 1>, %1337 ], [ %1378, %1339 ]
  %1343 = phi i64 [ %1338, %1337 ], [ %1380, %1339 ]
  %1344 = getelementptr inbounds i32, i32* %1327, i64 %1340
  %1345 = bitcast i32* %1344 to <4 x i32>*
  %1346 = load <4 x i32>, <4 x i32>* %1345, align 4
  %1347 = getelementptr inbounds i32, i32* %1344, i64 4
  %1348 = bitcast i32* %1347 to <4 x i32>*
  %1349 = load <4 x i32>, <4 x i32>* %1348, align 4
  %1350 = mul nsw <4 x i32> %1346, %1341
  %1351 = mul nsw <4 x i32> %1349, %1342
  %1352 = or i64 %1340, 8
  %1353 = getelementptr inbounds i32, i32* %1327, i64 %1352
  %1354 = bitcast i32* %1353 to <4 x i32>*
  %1355 = load <4 x i32>, <4 x i32>* %1354, align 4
  %1356 = getelementptr inbounds i32, i32* %1353, i64 4
  %1357 = bitcast i32* %1356 to <4 x i32>*
  %1358 = load <4 x i32>, <4 x i32>* %1357, align 4
  %1359 = mul nsw <4 x i32> %1355, %1350
  %1360 = mul nsw <4 x i32> %1358, %1351
  %1361 = or i64 %1340, 16
  %1362 = getelementptr inbounds i32, i32* %1327, i64 %1361
  %1363 = bitcast i32* %1362 to <4 x i32>*
  %1364 = load <4 x i32>, <4 x i32>* %1363, align 4
  %1365 = getelementptr inbounds i32, i32* %1362, i64 4
  %1366 = bitcast i32* %1365 to <4 x i32>*
  %1367 = load <4 x i32>, <4 x i32>* %1366, align 4
  %1368 = mul nsw <4 x i32> %1364, %1359
  %1369 = mul nsw <4 x i32> %1367, %1360
  %1370 = or i64 %1340, 24
  %1371 = getelementptr inbounds i32, i32* %1327, i64 %1370
  %1372 = bitcast i32* %1371 to <4 x i32>*
  %1373 = load <4 x i32>, <4 x i32>* %1372, align 4
  %1374 = getelementptr inbounds i32, i32* %1371, i64 4
  %1375 = bitcast i32* %1374 to <4 x i32>*
  %1376 = load <4 x i32>, <4 x i32>* %1375, align 4
  %1377 = mul nsw <4 x i32> %1373, %1368
  %1378 = mul nsw <4 x i32> %1376, %1369
  %1379 = add i64 %1340, 32
  %1380 = add i64 %1343, -4
  %1381 = icmp eq i64 %1380, 0
  br i1 %1381, label %1382, label %1339, !llvm.loop !773

1382:                                             ; preds = %1339, %1330
  %1383 = phi <4 x i32> [ undef, %1330 ], [ %1377, %1339 ]
  %1384 = phi <4 x i32> [ undef, %1330 ], [ %1378, %1339 ]
  %1385 = phi i64 [ 0, %1330 ], [ %1379, %1339 ]
  %1386 = phi <4 x i32> [ <i32 1, i32 1, i32 1, i32 1>, %1330 ], [ %1377, %1339 ]
  %1387 = phi <4 x i32> [ <i32 1, i32 1, i32 1, i32 1>, %1330 ], [ %1378, %1339 ]
  %1388 = icmp eq i64 %1335, 0
  br i1 %1388, label %1405, label %1389

1389:                                             ; preds = %1382, %1389
  %1390 = phi i64 [ %1402, %1389 ], [ %1385, %1382 ]
  %1391 = phi <4 x i32> [ %1400, %1389 ], [ %1386, %1382 ]
  %1392 = phi <4 x i32> [ %1401, %1389 ], [ %1387, %1382 ]
  %1393 = phi i64 [ %1403, %1389 ], [ %1335, %1382 ]
  %1394 = getelementptr inbounds i32, i32* %1327, i64 %1390
  %1395 = bitcast i32* %1394 to <4 x i32>*
  %1396 = load <4 x i32>, <4 x i32>* %1395, align 4
  %1397 = getelementptr inbounds i32, i32* %1394, i64 4
  %1398 = bitcast i32* %1397 to <4 x i32>*
  %1399 = load <4 x i32>, <4 x i32>* %1398, align 4
  %1400 = mul nsw <4 x i32> %1396, %1391
  %1401 = mul nsw <4 x i32> %1399, %1392
  %1402 = add i64 %1390, 8
  %1403 = add i64 %1393, -1
  %1404 = icmp eq i64 %1403, 0
  br i1 %1404, label %1405, label %1389, !llvm.loop !774

1405:                                             ; preds = %1389, %1382
  %1406 = phi <4 x i32> [ %1383, %1382 ], [ %1400, %1389 ]
  %1407 = phi <4 x i32> [ %1384, %1382 ], [ %1401, %1389 ]
  %1408 = mul <4 x i32> %1407, %1406
  %1409 = shufflevector <4 x i32> %1408, <4 x i32> undef, <4 x i32> <i32 2, i32 3, i32 undef, i32 undef>
  %1410 = mul <4 x i32> %1408, %1409
  %1411 = shufflevector <4 x i32> %1410, <4 x i32> undef, <4 x i32> <i32 1, i32 undef, i32 undef, i32 undef>
  %1412 = mul <4 x i32> %1410, %1411
  %1413 = extractelement <4 x i32> %1412, i32 0
  %1414 = icmp eq i64 %1331, %1328
  br i1 %1414, label %1426, label %1415

1415:                                             ; preds = %1405, %1326
  %1416 = phi i64 [ 0, %1326 ], [ %1331, %1405 ]
  %1417 = phi i32 [ 1, %1326 ], [ %1413, %1405 ]
  br label %1418

1418:                                             ; preds = %1415, %1418
  %1419 = phi i64 [ %1424, %1418 ], [ %1416, %1415 ]
  %1420 = phi i32 [ %1423, %1418 ], [ %1417, %1415 ]
  %1421 = getelementptr inbounds i32, i32* %1327, i64 %1419
  %1422 = load i32, i32* %1421, align 4
  %1423 = mul nsw i32 %1422, %1420
  %1424 = add nuw nsw i64 %1419, 1
  %1425 = icmp eq i64 %1424, %1328
  br i1 %1425, label %1426, label %1418, !llvm.loop !775

1426:                                             ; preds = %1418, %1405
  %1427 = phi i32 [ %1413, %1405 ], [ %1423, %1418 ]
  %1428 = sext i32 %1427 to i64
  %1429 = icmp sgt i32 %1427, 0
  br i1 %1429, label %1430, label %1468

1430:                                             ; preds = %1426, %1323
  %1431 = phi i64 [ %1428, %1426 ], [ 1, %1323 ]
  %1432 = and i64 %1431, 1
  %1433 = icmp eq i64 %1431, 1
  br i1 %1433, label %1457, label %1434

1434:                                             ; preds = %1430
  %1435 = sub nsw i64 %1431, %1432
  br label %1436

1436:                                             ; preds = %1436, %1434
  %1437 = phi i64 [ 0, %1434 ], [ %1454, %1436 ]
  %1438 = phi i64 [ %1435, %1434 ], [ %1455, %1436 ]
  %1439 = getelementptr inbounds i64, i64* %1247, i64 %1437
  %1440 = load i64, i64* %1439, align 8
  %1441 = getelementptr inbounds i64, i64* %1282, i64 %1437
  %1442 = load i64, i64* %1441, align 8
  %1443 = icmp sle i64 %1440, %1442
  %1444 = getelementptr inbounds i8, i8* %1317, i64 %1437
  %1445 = zext i1 %1443 to i8
  store i8 %1445, i8* %1444, align 1
  %1446 = or i64 %1437, 1
  %1447 = getelementptr inbounds i64, i64* %1247, i64 %1446
  %1448 = load i64, i64* %1447, align 8
  %1449 = getelementptr inbounds i64, i64* %1282, i64 %1446
  %1450 = load i64, i64* %1449, align 8
  %1451 = icmp sle i64 %1448, %1450
  %1452 = getelementptr inbounds i8, i8* %1317, i64 %1446
  %1453 = zext i1 %1451 to i8
  store i8 %1453, i8* %1452, align 1
  %1454 = add nuw nsw i64 %1437, 2
  %1455 = add i64 %1438, -2
  %1456 = icmp eq i64 %1455, 0
  br i1 %1456, label %1457, label %1436

1457:                                             ; preds = %1436, %1430
  %1458 = phi i64 [ 0, %1430 ], [ %1454, %1436 ]
  %1459 = icmp eq i64 %1432, 0
  br i1 %1459, label %1468, label %1460

1460:                                             ; preds = %1457
  %1461 = getelementptr inbounds i64, i64* %1247, i64 %1458
  %1462 = load i64, i64* %1461, align 8
  %1463 = getelementptr inbounds i64, i64* %1282, i64 %1458
  %1464 = load i64, i64* %1463, align 8
  %1465 = icmp sle i64 %1462, %1464
  %1466 = getelementptr inbounds i8, i8* %1317, i64 %1458
  %1467 = zext i1 %1465 to i8
  store i8 %1467, i8* %1466, align 1
  br label %1468

1468:                                             ; preds = %1460, %1457, %1426
  %1469 = icmp sgt i32 %1316, 5
  br i1 %1469, label %1470, label %1476

1470:                                             ; preds = %1468
  %1471 = getelementptr inbounds %"class.tflite::RuntimeShape", %"class.tflite::RuntimeShape"* %20, i64 0, i32 1, i32 0
  %1472 = load i32*, i32** %1471, align 8
  %1473 = icmp eq i32* %1472, null
  br i1 %1473, label %1476, label %1474

1474:                                             ; preds = %1470
  %1475 = bitcast i32* %1472 to i8*
  tail call void @_ZdaPv(i8* %1475) #9
  br label %1476

1476:                                             ; preds = %1474, %1470, %1468
  call void @llvm.lifetime.end.p0i8(i64 32, i8* nonnull %1283) #8
  %1477 = icmp sgt i32 %1281, 5
  br i1 %1477, label %1478, label %1484

1478:                                             ; preds = %1476
  %1479 = getelementptr inbounds %"class.tflite::RuntimeShape", %"class.tflite::RuntimeShape"* %19, i64 0, i32 1, i32 0
  %1480 = load i32*, i32** %1479, align 8
  %1481 = icmp eq i32* %1480, null
  br i1 %1481, label %1484, label %1482

1482:                                             ; preds = %1478
  %1483 = bitcast i32* %1480 to i8*
  tail call void @_ZdaPv(i8* %1483) #9
  br label %1484

1484:                                             ; preds = %1482, %1478, %1476
  call void @llvm.lifetime.end.p0i8(i64 32, i8* nonnull %1248) #8
  br i1 %1319, label %1485, label %1522

1485:                                             ; preds = %1484
  %1486 = getelementptr inbounds %"class.tflite::RuntimeShape", %"class.tflite::RuntimeShape"* %18, i64 0, i32 1, i32 0
  %1487 = load i32*, i32** %1486, align 8
  %1488 = icmp eq i32* %1487, null
  br i1 %1488, label %1522, label %1489

1489:                                             ; preds = %1485
  %1490 = bitcast i32* %1487 to i8*
  tail call void @_ZdaPv(i8* %1490) #9
  br label %1522

1491:                                             ; preds = %1204, %1182
  %1492 = phi i8* [ %1211, %1204 ], [ null, %1182 ]
  call void @_ZN6tflite13reference_ops29BroadcastComparison4DSlowImplIlXadL_ZNS0_11LessEqualFnIlEEbT_S3_EEEEvRKNS_16ComparisonParamsERKNS_12RuntimeShapeEPKS3_S9_SB_S9_Pb(%"struct.tflite::ComparisonParams"* nonnull dereferenceable(32) %14, %"class.tflite::RuntimeShape"* nonnull dereferenceable(32) %15, i64* %1145, %"class.tflite::RuntimeShape"* nonnull dereferenceable(32) %16, i64* %1179, %"class.tflite::RuntimeShape"* nonnull dereferenceable(32) %17, i8* %1492) #8
  %1493 = getelementptr inbounds %"class.tflite::RuntimeShape", %"class.tflite::RuntimeShape"* %17, i64 0, i32 0
  %1494 = load i32, i32* %1493, align 8
  %1495 = icmp sgt i32 %1494, 5
  br i1 %1495, label %1496, label %1502

1496:                                             ; preds = %1491
  %1497 = getelementptr inbounds %"class.tflite::RuntimeShape", %"class.tflite::RuntimeShape"* %17, i64 0, i32 1, i32 0
  %1498 = load i32*, i32** %1497, align 8
  %1499 = icmp eq i32* %1498, null
  br i1 %1499, label %1502, label %1500

1500:                                             ; preds = %1496
  %1501 = bitcast i32* %1498 to i8*
  call void @_ZdaPv(i8* %1501) #9
  br label %1502

1502:                                             ; preds = %1500, %1496, %1491
  call void @llvm.lifetime.end.p0i8(i64 32, i8* nonnull %1180) #8
  %1503 = getelementptr inbounds %"class.tflite::RuntimeShape", %"class.tflite::RuntimeShape"* %16, i64 0, i32 0
  %1504 = load i32, i32* %1503, align 8
  %1505 = icmp sgt i32 %1504, 5
  br i1 %1505, label %1506, label %1512

1506:                                             ; preds = %1502
  %1507 = getelementptr inbounds %"class.tflite::RuntimeShape", %"class.tflite::RuntimeShape"* %16, i64 0, i32 1, i32 0
  %1508 = load i32*, i32** %1507, align 8
  %1509 = icmp eq i32* %1508, null
  br i1 %1509, label %1512, label %1510

1510:                                             ; preds = %1506
  %1511 = bitcast i32* %1508 to i8*
  call void @_ZdaPv(i8* %1511) #9
  br label %1512

1512:                                             ; preds = %1510, %1506, %1502
  call void @llvm.lifetime.end.p0i8(i64 32, i8* nonnull %1146) #8
  %1513 = getelementptr inbounds %"class.tflite::RuntimeShape", %"class.tflite::RuntimeShape"* %15, i64 0, i32 0
  %1514 = load i32, i32* %1513, align 8
  %1515 = icmp sgt i32 %1514, 5
  br i1 %1515, label %1516, label %1522

1516:                                             ; preds = %1512
  %1517 = getelementptr inbounds %"class.tflite::RuntimeShape", %"class.tflite::RuntimeShape"* %15, i64 0, i32 1, i32 0
  %1518 = load i32*, i32** %1517, align 8
  %1519 = icmp eq i32* %1518, null
  br i1 %1519, label %1522, label %1520

1520:                                             ; preds = %1516
  %1521 = bitcast i32* %1518 to i8*
  call void @_ZdaPv(i8* %1521) #9
  br label %1522

1522:                                             ; preds = %1512, %1516, %1520, %1484, %1485, %1489
  %1523 = phi i8* [ %1213, %1489 ], [ %1213, %1485 ], [ %1213, %1484 ], [ %1112, %1520 ], [ %1112, %1516 ], [ %1112, %1512 ]
  call void @llvm.lifetime.end.p0i8(i64 32, i8* nonnull %1523) #8
  call void @llvm.lifetime.end.p0i8(i64 32, i8* nonnull %1110) #8
  br label %2493

1524:                                             ; preds = %78
  %1525 = getelementptr inbounds %struct.TfLiteTensor, %struct.TfLiteTensor* %57, i64 0, i32 3, i32 1
  %1526 = load i32, i32* %1525, align 4
  %1527 = sub nsw i32 0, %1526
  %1528 = getelementptr inbounds %struct.TfLiteTensor, %struct.TfLiteTensor* %67, i64 0, i32 3, i32 1
  %1529 = load i32, i32* %1528, align 4
  %1530 = sub nsw i32 0, %1529
  %1531 = bitcast i32* %3 to i8*
  call void @llvm.lifetime.start.p0i8(i64 4, i8* nonnull %1531) #8
  store i32 -1431655766, i32* %3, align 4
  %1532 = bitcast i32* %4 to i8*
  call void @llvm.lifetime.start.p0i8(i64 4, i8* nonnull %1532) #8
  store i32 -1431655766, i32* %4, align 4
  %1533 = getelementptr inbounds %struct.TfLiteTensor, %struct.TfLiteTensor* %57, i64 0, i32 3, i32 0
  %1534 = load float, float* %1533, align 8
  %1535 = fpext float %1534 to double
  call void @_ZN6tflite35QuantizeMultiplierSmallerThanOneExpEdPiS0_(double %1535, i32* nonnull %3, i32* nonnull %4) #8
  %1536 = bitcast i32* %5 to i8*
  call void @llvm.lifetime.start.p0i8(i64 4, i8* nonnull %1536) #8
  store i32 -1431655766, i32* %5, align 4
  %1537 = bitcast i32* %6 to i8*
  call void @llvm.lifetime.start.p0i8(i64 4, i8* nonnull %1537) #8
  store i32 -1431655766, i32* %6, align 4
  %1538 = getelementptr inbounds %struct.TfLiteTensor, %struct.TfLiteTensor* %67, i64 0, i32 3, i32 0
  %1539 = load float, float* %1538, align 8
  %1540 = fpext float %1539 to double
  call void @_ZN6tflite35QuantizeMultiplierSmallerThanOneExpEdPiS0_(double %1540, i32* nonnull %5, i32* nonnull %6) #8
  %1541 = bitcast %"struct.tflite::ComparisonParams"* %7 to i8*
  call void @llvm.lifetime.start.p0i8(i64 32, i8* nonnull %1541) #8
  %1542 = getelementptr inbounds %"struct.tflite::ComparisonParams", %"struct.tflite::ComparisonParams"* %7, i64 0, i32 7
  %1543 = bitcast i8* %1542 to i32*
  store i32 -1431655766, i32* %1543, align 4
  %1544 = getelementptr inbounds %"struct.tflite::ComparisonParams", %"struct.tflite::ComparisonParams"* %7, i64 0, i32 0
  store i32 8, i32* %1544, align 4
  %1545 = getelementptr inbounds %"struct.tflite::ComparisonParams", %"struct.tflite::ComparisonParams"* %7, i64 0, i32 1
  store i32 %1527, i32* %1545, align 4
  %1546 = load i32, i32* %3, align 4
  %1547 = getelementptr inbounds %"struct.tflite::ComparisonParams", %"struct.tflite::ComparisonParams"* %7, i64 0, i32 2
  store i32 %1546, i32* %1547, align 4
  %1548 = load i32, i32* %4, align 4
  %1549 = getelementptr inbounds %"struct.tflite::ComparisonParams", %"struct.tflite::ComparisonParams"* %7, i64 0, i32 3
  store i32 %1548, i32* %1549, align 4
  %1550 = getelementptr inbounds %"struct.tflite::ComparisonParams", %"struct.tflite::ComparisonParams"* %7, i64 0, i32 4
  store i32 %1530, i32* %1550, align 4
  %1551 = load i32, i32* %5, align 4
  %1552 = getelementptr inbounds %"struct.tflite::ComparisonParams", %"struct.tflite::ComparisonParams"* %7, i64 0, i32 5
  store i32 %1551, i32* %1552, align 4
  %1553 = load i32, i32* %6, align 4
  %1554 = getelementptr inbounds %"struct.tflite::ComparisonParams", %"struct.tflite::ComparisonParams"* %7, i64 0, i32 6
  store i32 %1553, i32* %1554, align 4
  br i1 %80, label %1687, label %1555

1555:                                             ; preds = %1524
  %1556 = bitcast %"class.tflite::RuntimeShape"* %8 to i8*
  call void @llvm.lifetime.start.p0i8(i64 32, i8* nonnull %1556) #8
  %1557 = icmp eq %struct.TfLiteTensor* %57, null
  br i1 %1557, label %1558, label %1560

1558:                                             ; preds = %1555
  %1559 = getelementptr inbounds %"class.tflite::RuntimeShape", %"class.tflite::RuntimeShape"* %8, i64 0, i32 0
  store i32 0, i32* %1559, align 8, !alias.scope !776
  br label %1588

1560:                                             ; preds = %1555
  %1561 = getelementptr inbounds %struct.TfLiteTensor, %struct.TfLiteTensor* %57, i64 0, i32 2
  %1562 = load %struct.TfLiteIntArray*, %struct.TfLiteIntArray** %1561, align 8, !noalias !776
  %1563 = getelementptr inbounds %struct.TfLiteIntArray, %struct.TfLiteIntArray* %1562, i64 0, i32 0
  %1564 = load i32, i32* %1563, align 4, !noalias !776
  %1565 = getelementptr inbounds %struct.TfLiteIntArray, %struct.TfLiteIntArray* %1562, i64 0, i32 1, i64 0
  %1566 = getelementptr inbounds %"class.tflite::RuntimeShape", %"class.tflite::RuntimeShape"* %8, i64 0, i32 0
  store i32 %1564, i32* %1566, align 8, !alias.scope !776
  %1567 = icmp sgt i32 %1564, 5
  br i1 %1567, label %1568, label %1575

1568:                                             ; preds = %1560
  %1569 = sext i32 %1564 to i64
  %1570 = shl nsw i64 %1569, 2
  %1571 = call i8* @_Znam(i64 %1570) #9, !noalias !776
  %1572 = getelementptr inbounds %"class.tflite::RuntimeShape", %"class.tflite::RuntimeShape"* %8, i64 0, i32 1, i32 0
  %1573 = bitcast i32** %1572 to i8**
  store i8* %1571, i8** %1573, align 8, !alias.scope !776
  %1574 = bitcast i8* %1571 to i32*
  br label %1580

1575:                                             ; preds = %1560
  %1576 = getelementptr inbounds %"class.tflite::RuntimeShape", %"class.tflite::RuntimeShape"* %8, i64 0, i32 1
  %1577 = bitcast %union.anon* %1576 to i32*
  %1578 = sext i32 %1564 to i64
  %1579 = shl nsw i64 %1578, 2
  br label %1580

1580:                                             ; preds = %1575, %1568
  %1581 = phi i64 [ %1570, %1568 ], [ %1579, %1575 ]
  %1582 = phi i32* [ %1574, %1568 ], [ %1577, %1575 ]
  %1583 = bitcast i32* %1582 to i8*
  %1584 = bitcast i32* %1565 to i8*
  call void @llvm.memcpy.p0i8.p0i8.i64(i8* align 4 %1583, i8* align 4 %1584, i64 %1581, i1 false) #8
  %1585 = getelementptr inbounds %struct.TfLiteTensor, %struct.TfLiteTensor* %57, i64 0, i32 1
  %1586 = bitcast %union.TfLitePtrUnion* %1585 to i8**
  %1587 = load i8*, i8** %1586, align 8
  br label %1588

1588:                                             ; preds = %1580, %1558
  %1589 = phi i8* [ %1587, %1580 ], [ null, %1558 ]
  %1590 = bitcast %"class.tflite::RuntimeShape"* %9 to i8*
  call void @llvm.lifetime.start.p0i8(i64 32, i8* nonnull %1590) #8
  %1591 = icmp eq %struct.TfLiteTensor* %67, null
  br i1 %1591, label %1592, label %1594

1592:                                             ; preds = %1588
  %1593 = getelementptr inbounds %"class.tflite::RuntimeShape", %"class.tflite::RuntimeShape"* %9, i64 0, i32 0
  store i32 0, i32* %1593, align 8, !alias.scope !779
  br label %1622

1594:                                             ; preds = %1588
  %1595 = getelementptr inbounds %struct.TfLiteTensor, %struct.TfLiteTensor* %67, i64 0, i32 2
  %1596 = load %struct.TfLiteIntArray*, %struct.TfLiteIntArray** %1595, align 8, !noalias !779
  %1597 = getelementptr inbounds %struct.TfLiteIntArray, %struct.TfLiteIntArray* %1596, i64 0, i32 0
  %1598 = load i32, i32* %1597, align 4, !noalias !779
  %1599 = getelementptr inbounds %struct.TfLiteIntArray, %struct.TfLiteIntArray* %1596, i64 0, i32 1, i64 0
  %1600 = getelementptr inbounds %"class.tflite::RuntimeShape", %"class.tflite::RuntimeShape"* %9, i64 0, i32 0
  store i32 %1598, i32* %1600, align 8, !alias.scope !779
  %1601 = icmp sgt i32 %1598, 5
  br i1 %1601, label %1602, label %1609

1602:                                             ; preds = %1594
  %1603 = sext i32 %1598 to i64
  %1604 = shl nsw i64 %1603, 2
  %1605 = call i8* @_Znam(i64 %1604) #9, !noalias !779
  %1606 = getelementptr inbounds %"class.tflite::RuntimeShape", %"class.tflite::RuntimeShape"* %9, i64 0, i32 1, i32 0
  %1607 = bitcast i32** %1606 to i8**
  store i8* %1605, i8** %1607, align 8, !alias.scope !779
  %1608 = bitcast i8* %1605 to i32*
  br label %1614

1609:                                             ; preds = %1594
  %1610 = getelementptr inbounds %"class.tflite::RuntimeShape", %"class.tflite::RuntimeShape"* %9, i64 0, i32 1
  %1611 = bitcast %union.anon* %1610 to i32*
  %1612 = sext i32 %1598 to i64
  %1613 = shl nsw i64 %1612, 2
  br label %1614

1614:                                             ; preds = %1609, %1602
  %1615 = phi i64 [ %1604, %1602 ], [ %1613, %1609 ]
  %1616 = phi i32* [ %1608, %1602 ], [ %1611, %1609 ]
  %1617 = bitcast i32* %1616 to i8*
  %1618 = bitcast i32* %1599 to i8*
  call void @llvm.memcpy.p0i8.p0i8.i64(i8* align 4 %1617, i8* align 4 %1618, i64 %1615, i1 false) #8
  %1619 = getelementptr inbounds %struct.TfLiteTensor, %struct.TfLiteTensor* %67, i64 0, i32 1
  %1620 = bitcast %union.TfLitePtrUnion* %1619 to i8**
  %1621 = load i8*, i8** %1620, align 8
  br label %1622

1622:                                             ; preds = %1614, %1592
  %1623 = phi i8* [ %1621, %1614 ], [ null, %1592 ]
  %1624 = bitcast %"class.tflite::RuntimeShape"* %10 to i8*
  call void @llvm.lifetime.start.p0i8(i64 32, i8* nonnull %1624) #8
  %1625 = icmp eq %struct.TfLiteTensor* %79, null
  br i1 %1625, label %1626, label %1628

1626:                                             ; preds = %1622
  %1627 = getelementptr inbounds %"class.tflite::RuntimeShape", %"class.tflite::RuntimeShape"* %10, i64 0, i32 0
  store i32 0, i32* %1627, align 8, !alias.scope !782
  br label %1656

1628:                                             ; preds = %1622
  %1629 = getelementptr inbounds %struct.TfLiteTensor, %struct.TfLiteTensor* %79, i64 0, i32 2
  %1630 = load %struct.TfLiteIntArray*, %struct.TfLiteIntArray** %1629, align 8, !noalias !782
  %1631 = getelementptr inbounds %struct.TfLiteIntArray, %struct.TfLiteIntArray* %1630, i64 0, i32 0
  %1632 = load i32, i32* %1631, align 4, !noalias !782
  %1633 = getelementptr inbounds %struct.TfLiteIntArray, %struct.TfLiteIntArray* %1630, i64 0, i32 1, i64 0
  %1634 = getelementptr inbounds %"class.tflite::RuntimeShape", %"class.tflite::RuntimeShape"* %10, i64 0, i32 0
  store i32 %1632, i32* %1634, align 8, !alias.scope !782
  %1635 = icmp sgt i32 %1632, 5
  br i1 %1635, label %1636, label %1643

1636:                                             ; preds = %1628
  %1637 = sext i32 %1632 to i64
  %1638 = shl nsw i64 %1637, 2
  %1639 = call i8* @_Znam(i64 %1638) #9, !noalias !782
  %1640 = getelementptr inbounds %"class.tflite::RuntimeShape", %"class.tflite::RuntimeShape"* %10, i64 0, i32 1, i32 0
  %1641 = bitcast i32** %1640 to i8**
  store i8* %1639, i8** %1641, align 8, !alias.scope !782
  %1642 = bitcast i8* %1639 to i32*
  br label %1648

1643:                                             ; preds = %1628
  %1644 = getelementptr inbounds %"class.tflite::RuntimeShape", %"class.tflite::RuntimeShape"* %10, i64 0, i32 1
  %1645 = bitcast %union.anon* %1644 to i32*
  %1646 = sext i32 %1632 to i64
  %1647 = shl nsw i64 %1646, 2
  br label %1648

1648:                                             ; preds = %1643, %1636
  %1649 = phi i64 [ %1638, %1636 ], [ %1647, %1643 ]
  %1650 = phi i32* [ %1642, %1636 ], [ %1645, %1643 ]
  %1651 = bitcast i32* %1650 to i8*
  %1652 = bitcast i32* %1633 to i8*
  call void @llvm.memcpy.p0i8.p0i8.i64(i8* align 4 %1651, i8* align 4 %1652, i64 %1649, i1 false) #8
  %1653 = getelementptr inbounds %struct.TfLiteTensor, %struct.TfLiteTensor* %79, i64 0, i32 1
  %1654 = bitcast %union.TfLitePtrUnion* %1653 to i8**
  %1655 = load i8*, i8** %1654, align 8
  br label %1656

1656:                                             ; preds = %1648, %1626
  %1657 = phi i8* [ %1655, %1648 ], [ null, %1626 ]
  call void @_ZN6tflite13reference_ops36BroadcastComparison4DSlowWithScalingIhXadL_ZNS0_11LessEqualFnIiEEbT_S3_EEEEvRKNS_16ComparisonParamsERKNS_12RuntimeShapeEPKS3_S9_SB_S9_Pb(%"struct.tflite::ComparisonParams"* nonnull dereferenceable(32) %7, %"class.tflite::RuntimeShape"* nonnull dereferenceable(32) %8, i8* %1589, %"class.tflite::RuntimeShape"* nonnull dereferenceable(32) %9, i8* %1623, %"class.tflite::RuntimeShape"* nonnull dereferenceable(32) %10, i8* %1657) #8
  %1658 = getelementptr inbounds %"class.tflite::RuntimeShape", %"class.tflite::RuntimeShape"* %10, i64 0, i32 0
  %1659 = load i32, i32* %1658, align 8
  %1660 = icmp sgt i32 %1659, 5
  br i1 %1660, label %1661, label %1667

1661:                                             ; preds = %1656
  %1662 = getelementptr inbounds %"class.tflite::RuntimeShape", %"class.tflite::RuntimeShape"* %10, i64 0, i32 1, i32 0
  %1663 = load i32*, i32** %1662, align 8
  %1664 = icmp eq i32* %1663, null
  br i1 %1664, label %1667, label %1665

1665:                                             ; preds = %1661
  %1666 = bitcast i32* %1663 to i8*
  call void @_ZdaPv(i8* %1666) #9
  br label %1667

1667:                                             ; preds = %1665, %1661, %1656
  call void @llvm.lifetime.end.p0i8(i64 32, i8* nonnull %1624) #8
  %1668 = getelementptr inbounds %"class.tflite::RuntimeShape", %"class.tflite::RuntimeShape"* %9, i64 0, i32 0
  %1669 = load i32, i32* %1668, align 8
  %1670 = icmp sgt i32 %1669, 5
  br i1 %1670, label %1671, label %1677

1671:                                             ; preds = %1667
  %1672 = getelementptr inbounds %"class.tflite::RuntimeShape", %"class.tflite::RuntimeShape"* %9, i64 0, i32 1, i32 0
  %1673 = load i32*, i32** %1672, align 8
  %1674 = icmp eq i32* %1673, null
  br i1 %1674, label %1677, label %1675

1675:                                             ; preds = %1671
  %1676 = bitcast i32* %1673 to i8*
  call void @_ZdaPv(i8* %1676) #9
  br label %1677

1677:                                             ; preds = %1675, %1671, %1667
  call void @llvm.lifetime.end.p0i8(i64 32, i8* nonnull %1590) #8
  %1678 = getelementptr inbounds %"class.tflite::RuntimeShape", %"class.tflite::RuntimeShape"* %8, i64 0, i32 0
  %1679 = load i32, i32* %1678, align 8
  %1680 = icmp sgt i32 %1679, 5
  br i1 %1680, label %1681, label %2005

1681:                                             ; preds = %1677
  %1682 = getelementptr inbounds %"class.tflite::RuntimeShape", %"class.tflite::RuntimeShape"* %8, i64 0, i32 1, i32 0
  %1683 = load i32*, i32** %1682, align 8
  %1684 = icmp eq i32* %1683, null
  br i1 %1684, label %2005, label %1685

1685:                                             ; preds = %1681
  %1686 = bitcast i32* %1683 to i8*
  call void @_ZdaPv(i8* %1686) #9
  br label %2005

1687:                                             ; preds = %1524
  %1688 = bitcast %"class.tflite::RuntimeShape"* %11 to i8*
  call void @llvm.lifetime.start.p0i8(i64 32, i8* nonnull %1688) #8
  %1689 = icmp eq %struct.TfLiteTensor* %57, null
  br i1 %1689, label %1690, label %1692

1690:                                             ; preds = %1687
  %1691 = getelementptr inbounds %"class.tflite::RuntimeShape", %"class.tflite::RuntimeShape"* %11, i64 0, i32 0
  store i32 0, i32* %1691, align 8, !alias.scope !785
  br label %1720

1692:                                             ; preds = %1687
  %1693 = getelementptr inbounds %struct.TfLiteTensor, %struct.TfLiteTensor* %57, i64 0, i32 2
  %1694 = load %struct.TfLiteIntArray*, %struct.TfLiteIntArray** %1693, align 8, !noalias !785
  %1695 = getelementptr inbounds %struct.TfLiteIntArray, %struct.TfLiteIntArray* %1694, i64 0, i32 0
  %1696 = load i32, i32* %1695, align 4, !noalias !785
  %1697 = getelementptr inbounds %struct.TfLiteIntArray, %struct.TfLiteIntArray* %1694, i64 0, i32 1, i64 0
  %1698 = getelementptr inbounds %"class.tflite::RuntimeShape", %"class.tflite::RuntimeShape"* %11, i64 0, i32 0
  store i32 %1696, i32* %1698, align 8, !alias.scope !785
  %1699 = icmp sgt i32 %1696, 5
  br i1 %1699, label %1700, label %1707

1700:                                             ; preds = %1692
  %1701 = sext i32 %1696 to i64
  %1702 = shl nsw i64 %1701, 2
  %1703 = call i8* @_Znam(i64 %1702) #9, !noalias !785
  %1704 = getelementptr inbounds %"class.tflite::RuntimeShape", %"class.tflite::RuntimeShape"* %11, i64 0, i32 1, i32 0
  %1705 = bitcast i32** %1704 to i8**
  store i8* %1703, i8** %1705, align 8, !alias.scope !785
  %1706 = bitcast i8* %1703 to i32*
  br label %1712

1707:                                             ; preds = %1692
  %1708 = getelementptr inbounds %"class.tflite::RuntimeShape", %"class.tflite::RuntimeShape"* %11, i64 0, i32 1
  %1709 = bitcast %union.anon* %1708 to i32*
  %1710 = sext i32 %1696 to i64
  %1711 = shl nsw i64 %1710, 2
  br label %1712

1712:                                             ; preds = %1707, %1700
  %1713 = phi i64 [ %1702, %1700 ], [ %1711, %1707 ]
  %1714 = phi i32* [ %1706, %1700 ], [ %1709, %1707 ]
  %1715 = bitcast i32* %1714 to i8*
  %1716 = bitcast i32* %1697 to i8*
  call void @llvm.memcpy.p0i8.p0i8.i64(i8* align 4 %1715, i8* align 4 %1716, i64 %1713, i1 false) #8
  %1717 = getelementptr inbounds %struct.TfLiteTensor, %struct.TfLiteTensor* %57, i64 0, i32 1
  %1718 = bitcast %union.TfLitePtrUnion* %1717 to i8**
  %1719 = load i8*, i8** %1718, align 8
  br label %1720

1720:                                             ; preds = %1712, %1690
  %1721 = phi i32 [ %1696, %1712 ], [ 0, %1690 ]
  %1722 = phi i8* [ %1719, %1712 ], [ null, %1690 ]
  %1723 = bitcast %"class.tflite::RuntimeShape"* %12 to i8*
  call void @llvm.lifetime.start.p0i8(i64 32, i8* nonnull %1723) #8
  %1724 = icmp eq %struct.TfLiteTensor* %67, null
  br i1 %1724, label %1725, label %1727

1725:                                             ; preds = %1720
  %1726 = getelementptr inbounds %"class.tflite::RuntimeShape", %"class.tflite::RuntimeShape"* %12, i64 0, i32 0
  store i32 0, i32* %1726, align 8, !alias.scope !788
  br label %1755

1727:                                             ; preds = %1720
  %1728 = getelementptr inbounds %struct.TfLiteTensor, %struct.TfLiteTensor* %67, i64 0, i32 2
  %1729 = load %struct.TfLiteIntArray*, %struct.TfLiteIntArray** %1728, align 8, !noalias !788
  %1730 = getelementptr inbounds %struct.TfLiteIntArray, %struct.TfLiteIntArray* %1729, i64 0, i32 0
  %1731 = load i32, i32* %1730, align 4, !noalias !788
  %1732 = getelementptr inbounds %struct.TfLiteIntArray, %struct.TfLiteIntArray* %1729, i64 0, i32 1, i64 0
  %1733 = getelementptr inbounds %"class.tflite::RuntimeShape", %"class.tflite::RuntimeShape"* %12, i64 0, i32 0
  store i32 %1731, i32* %1733, align 8, !alias.scope !788
  %1734 = icmp sgt i32 %1731, 5
  br i1 %1734, label %1735, label %1742

1735:                                             ; preds = %1727
  %1736 = sext i32 %1731 to i64
  %1737 = shl nsw i64 %1736, 2
  %1738 = call i8* @_Znam(i64 %1737) #9, !noalias !788
  %1739 = getelementptr inbounds %"class.tflite::RuntimeShape", %"class.tflite::RuntimeShape"* %12, i64 0, i32 1, i32 0
  %1740 = bitcast i32** %1739 to i8**
  store i8* %1738, i8** %1740, align 8, !alias.scope !788
  %1741 = bitcast i8* %1738 to i32*
  br label %1747

1742:                                             ; preds = %1727
  %1743 = getelementptr inbounds %"class.tflite::RuntimeShape", %"class.tflite::RuntimeShape"* %12, i64 0, i32 1
  %1744 = bitcast %union.anon* %1743 to i32*
  %1745 = sext i32 %1731 to i64
  %1746 = shl nsw i64 %1745, 2
  br label %1747

1747:                                             ; preds = %1742, %1735
  %1748 = phi i64 [ %1737, %1735 ], [ %1746, %1742 ]
  %1749 = phi i32* [ %1741, %1735 ], [ %1744, %1742 ]
  %1750 = bitcast i32* %1749 to i8*
  %1751 = bitcast i32* %1732 to i8*
  call void @llvm.memcpy.p0i8.p0i8.i64(i8* align 4 %1750, i8* align 4 %1751, i64 %1748, i1 false) #8
  %1752 = getelementptr inbounds %struct.TfLiteTensor, %struct.TfLiteTensor* %67, i64 0, i32 1
  %1753 = bitcast %union.TfLitePtrUnion* %1752 to i8**
  %1754 = load i8*, i8** %1753, align 8
  br label %1755

1755:                                             ; preds = %1747, %1725
  %1756 = phi i32 [ %1731, %1747 ], [ 0, %1725 ]
  %1757 = phi i8* [ %1754, %1747 ], [ null, %1725 ]
  %1758 = bitcast %"class.tflite::RuntimeShape"* %13 to i8*
  call void @llvm.lifetime.start.p0i8(i64 32, i8* nonnull %1758) #8
  %1759 = icmp eq %struct.TfLiteTensor* %79, null
  br i1 %1759, label %1760, label %1762

1760:                                             ; preds = %1755
  %1761 = getelementptr inbounds %"class.tflite::RuntimeShape", %"class.tflite::RuntimeShape"* %13, i64 0, i32 0
  store i32 0, i32* %1761, align 8, !alias.scope !791
  br label %1790

1762:                                             ; preds = %1755
  %1763 = getelementptr inbounds %struct.TfLiteTensor, %struct.TfLiteTensor* %79, i64 0, i32 2
  %1764 = load %struct.TfLiteIntArray*, %struct.TfLiteIntArray** %1763, align 8, !noalias !791
  %1765 = getelementptr inbounds %struct.TfLiteIntArray, %struct.TfLiteIntArray* %1764, i64 0, i32 0
  %1766 = load i32, i32* %1765, align 4, !noalias !791
  %1767 = getelementptr inbounds %struct.TfLiteIntArray, %struct.TfLiteIntArray* %1764, i64 0, i32 1, i64 0
  %1768 = getelementptr inbounds %"class.tflite::RuntimeShape", %"class.tflite::RuntimeShape"* %13, i64 0, i32 0
  store i32 %1766, i32* %1768, align 8, !alias.scope !791
  %1769 = icmp sgt i32 %1766, 5
  br i1 %1769, label %1770, label %1777

1770:                                             ; preds = %1762
  %1771 = sext i32 %1766 to i64
  %1772 = shl nsw i64 %1771, 2
  %1773 = call i8* @_Znam(i64 %1772) #9, !noalias !791
  %1774 = getelementptr inbounds %"class.tflite::RuntimeShape", %"class.tflite::RuntimeShape"* %13, i64 0, i32 1, i32 0
  %1775 = bitcast i32** %1774 to i8**
  store i8* %1773, i8** %1775, align 8, !alias.scope !791
  %1776 = bitcast i8* %1773 to i32*
  br label %1782

1777:                                             ; preds = %1762
  %1778 = getelementptr inbounds %"class.tflite::RuntimeShape", %"class.tflite::RuntimeShape"* %13, i64 0, i32 1
  %1779 = bitcast %union.anon* %1778 to i32*
  %1780 = sext i32 %1766 to i64
  %1781 = shl nsw i64 %1780, 2
  br label %1782

1782:                                             ; preds = %1777, %1770
  %1783 = phi i64 [ %1772, %1770 ], [ %1781, %1777 ]
  %1784 = phi i32* [ %1776, %1770 ], [ %1779, %1777 ]
  %1785 = bitcast i32* %1784 to i8*
  %1786 = bitcast i32* %1767 to i8*
  call void @llvm.memcpy.p0i8.p0i8.i64(i8* align 4 %1785, i8* align 4 %1786, i64 %1783, i1 false) #8
  %1787 = getelementptr inbounds %struct.TfLiteTensor, %struct.TfLiteTensor* %79, i64 0, i32 1
  %1788 = bitcast %union.TfLitePtrUnion* %1787 to i8**
  %1789 = load i8*, i8** %1788, align 8
  br label %1790

1790:                                             ; preds = %1782, %1760
  %1791 = phi i32 [ %1766, %1782 ], [ 0, %1760 ]
  %1792 = phi i8* [ %1789, %1782 ], [ null, %1760 ]
  %1793 = getelementptr inbounds %"class.tflite::RuntimeShape", %"class.tflite::RuntimeShape"* %11, i64 0, i32 1
  %1794 = icmp sgt i32 %1721, 5
  br i1 %1794, label %1795, label %1798

1795:                                             ; preds = %1790
  %1796 = getelementptr inbounds %union.anon, %union.anon* %1793, i64 0, i32 0
  %1797 = load i32*, i32** %1796, align 8
  br label %1801

1798:                                             ; preds = %1790
  %1799 = bitcast %union.anon* %1793 to i32*
  %1800 = icmp sgt i32 %1721, 0
  br i1 %1800, label %1801, label %1905

1801:                                             ; preds = %1798, %1795
  %1802 = phi i32* [ %1797, %1795 ], [ %1799, %1798 ]
  %1803 = zext i32 %1721 to i64
  %1804 = icmp ult i32 %1721, 8
  br i1 %1804, label %1890, label %1805

1805:                                             ; preds = %1801
  %1806 = and i64 %1803, 4294967288
  %1807 = add nsw i64 %1806, -8
  %1808 = lshr exact i64 %1807, 3
  %1809 = add nuw nsw i64 %1808, 1
  %1810 = and i64 %1809, 3
  %1811 = icmp ult i64 %1807, 24
  br i1 %1811, label %1857, label %1812

1812:                                             ; preds = %1805
  %1813 = sub nsw i64 %1809, %1810
  br label %1814

1814:                                             ; preds = %1814, %1812
  %1815 = phi i64 [ 0, %1812 ], [ %1854, %1814 ]
  %1816 = phi <4 x i32> [ <i32 1, i32 1, i32 1, i32 1>, %1812 ], [ %1852, %1814 ]
  %1817 = phi <4 x i32> [ <i32 1, i32 1, i32 1, i32 1>, %1812 ], [ %1853, %1814 ]
  %1818 = phi i64 [ %1813, %1812 ], [ %1855, %1814 ]
  %1819 = getelementptr inbounds i32, i32* %1802, i64 %1815
  %1820 = bitcast i32* %1819 to <4 x i32>*
  %1821 = load <4 x i32>, <4 x i32>* %1820, align 4
  %1822 = getelementptr inbounds i32, i32* %1819, i64 4
  %1823 = bitcast i32* %1822 to <4 x i32>*
  %1824 = load <4 x i32>, <4 x i32>* %1823, align 4
  %1825 = mul nsw <4 x i32> %1821, %1816
  %1826 = mul nsw <4 x i32> %1824, %1817
  %1827 = or i64 %1815, 8
  %1828 = getelementptr inbounds i32, i32* %1802, i64 %1827
  %1829 = bitcast i32* %1828 to <4 x i32>*
  %1830 = load <4 x i32>, <4 x i32>* %1829, align 4
  %1831 = getelementptr inbounds i32, i32* %1828, i64 4
  %1832 = bitcast i32* %1831 to <4 x i32>*
  %1833 = load <4 x i32>, <4 x i32>* %1832, align 4
  %1834 = mul nsw <4 x i32> %1830, %1825
  %1835 = mul nsw <4 x i32> %1833, %1826
  %1836 = or i64 %1815, 16
  %1837 = getelementptr inbounds i32, i32* %1802, i64 %1836
  %1838 = bitcast i32* %1837 to <4 x i32>*
  %1839 = load <4 x i32>, <4 x i32>* %1838, align 4
  %1840 = getelementptr inbounds i32, i32* %1837, i64 4
  %1841 = bitcast i32* %1840 to <4 x i32>*
  %1842 = load <4 x i32>, <4 x i32>* %1841, align 4
  %1843 = mul nsw <4 x i32> %1839, %1834
  %1844 = mul nsw <4 x i32> %1842, %1835
  %1845 = or i64 %1815, 24
  %1846 = getelementptr inbounds i32, i32* %1802, i64 %1845
  %1847 = bitcast i32* %1846 to <4 x i32>*
  %1848 = load <4 x i32>, <4 x i32>* %1847, align 4
  %1849 = getelementptr inbounds i32, i32* %1846, i64 4
  %1850 = bitcast i32* %1849 to <4 x i32>*
  %1851 = load <4 x i32>, <4 x i32>* %1850, align 4
  %1852 = mul nsw <4 x i32> %1848, %1843
  %1853 = mul nsw <4 x i32> %1851, %1844
  %1854 = add i64 %1815, 32
  %1855 = add i64 %1818, -4
  %1856 = icmp eq i64 %1855, 0
  br i1 %1856, label %1857, label %1814, !llvm.loop !794

1857:                                             ; preds = %1814, %1805
  %1858 = phi <4 x i32> [ undef, %1805 ], [ %1852, %1814 ]
  %1859 = phi <4 x i32> [ undef, %1805 ], [ %1853, %1814 ]
  %1860 = phi i64 [ 0, %1805 ], [ %1854, %1814 ]
  %1861 = phi <4 x i32> [ <i32 1, i32 1, i32 1, i32 1>, %1805 ], [ %1852, %1814 ]
  %1862 = phi <4 x i32> [ <i32 1, i32 1, i32 1, i32 1>, %1805 ], [ %1853, %1814 ]
  %1863 = icmp eq i64 %1810, 0
  br i1 %1863, label %1880, label %1864

1864:                                             ; preds = %1857, %1864
  %1865 = phi i64 [ %1877, %1864 ], [ %1860, %1857 ]
  %1866 = phi <4 x i32> [ %1875, %1864 ], [ %1861, %1857 ]
  %1867 = phi <4 x i32> [ %1876, %1864 ], [ %1862, %1857 ]
  %1868 = phi i64 [ %1878, %1864 ], [ %1810, %1857 ]
  %1869 = getelementptr inbounds i32, i32* %1802, i64 %1865
  %1870 = bitcast i32* %1869 to <4 x i32>*
  %1871 = load <4 x i32>, <4 x i32>* %1870, align 4
  %1872 = getelementptr inbounds i32, i32* %1869, i64 4
  %1873 = bitcast i32* %1872 to <4 x i32>*
  %1874 = load <4 x i32>, <4 x i32>* %1873, align 4
  %1875 = mul nsw <4 x i32> %1871, %1866
  %1876 = mul nsw <4 x i32> %1874, %1867
  %1877 = add i64 %1865, 8
  %1878 = add i64 %1868, -1
  %1879 = icmp eq i64 %1878, 0
  br i1 %1879, label %1880, label %1864, !llvm.loop !795

1880:                                             ; preds = %1864, %1857
  %1881 = phi <4 x i32> [ %1858, %1857 ], [ %1875, %1864 ]
  %1882 = phi <4 x i32> [ %1859, %1857 ], [ %1876, %1864 ]
  %1883 = mul <4 x i32> %1882, %1881
  %1884 = shufflevector <4 x i32> %1883, <4 x i32> undef, <4 x i32> <i32 2, i32 3, i32 undef, i32 undef>
  %1885 = mul <4 x i32> %1883, %1884
  %1886 = shufflevector <4 x i32> %1885, <4 x i32> undef, <4 x i32> <i32 1, i32 undef, i32 undef, i32 undef>
  %1887 = mul <4 x i32> %1885, %1886
  %1888 = extractelement <4 x i32> %1887, i32 0
  %1889 = icmp eq i64 %1806, %1803
  br i1 %1889, label %1901, label %1890

1890:                                             ; preds = %1880, %1801
  %1891 = phi i64 [ 0, %1801 ], [ %1806, %1880 ]
  %1892 = phi i32 [ 1, %1801 ], [ %1888, %1880 ]
  br label %1893

1893:                                             ; preds = %1890, %1893
  %1894 = phi i64 [ %1899, %1893 ], [ %1891, %1890 ]
  %1895 = phi i32 [ %1898, %1893 ], [ %1892, %1890 ]
  %1896 = getelementptr inbounds i32, i32* %1802, i64 %1894
  %1897 = load i32, i32* %1896, align 4
  %1898 = mul nsw i32 %1897, %1895
  %1899 = add nuw nsw i64 %1894, 1
  %1900 = icmp eq i64 %1899, %1803
  br i1 %1900, label %1901, label %1893, !llvm.loop !796

1901:                                             ; preds = %1893, %1880
  %1902 = phi i32 [ %1888, %1880 ], [ %1898, %1893 ]
  %1903 = sext i32 %1902 to i64
  %1904 = icmp sgt i32 %1902, 0
  br i1 %1904, label %1905, label %1982

1905:                                             ; preds = %1901, %1798
  %1906 = phi i64 [ %1903, %1901 ], [ 1, %1798 ]
  %1907 = sext i32 %1546 to i64
  %1908 = sub nsw i32 0, %1548
  %1909 = zext i32 %1908 to i64
  %1910 = shl nsw i64 -1, %1909
  %1911 = trunc i64 %1910 to i32
  %1912 = xor i32 %1911, -1
  %1913 = ashr i32 %1912, 1
  %1914 = sext i32 %1551 to i64
  %1915 = sub nsw i32 0, %1553
  %1916 = zext i32 %1915 to i64
  %1917 = shl nsw i64 -1, %1916
  %1918 = trunc i64 %1917 to i32
  %1919 = xor i32 %1918, -1
  %1920 = ashr i32 %1919, 1
  %1921 = icmp eq i32 %1546, -2147483648
  %1922 = icmp eq i32 %1551, -2147483648
  br label %1923

1923:                                             ; preds = %1968, %1905
  %1924 = phi i64 [ 0, %1905 ], [ %1980, %1968 ]
  %1925 = getelementptr inbounds i8, i8* %1722, i64 %1924
  %1926 = load i8, i8* %1925, align 1
  %1927 = zext i8 %1926 to i32
  %1928 = sub i32 %1927, %1526
  %1929 = getelementptr inbounds i8, i8* %1757, i64 %1924
  %1930 = load i8, i8* %1929, align 1
  %1931 = zext i8 %1930 to i32
  %1932 = sub i32 %1931, %1529
  %1933 = shl i32 %1928, 8
  %1934 = shl i32 %1932, 8
  %1935 = icmp eq i32 %1933, %1546
  br i1 %1935, label %1938, label %1936

1936:                                             ; preds = %1923
  %1937 = sext i32 %1933 to i64
  br label %1939

1938:                                             ; preds = %1923
  br i1 %1921, label %1947, label %1939

1939:                                             ; preds = %1938, %1936
  %1940 = phi i64 [ %1937, %1936 ], [ %1907, %1938 ]
  %1941 = mul nsw i64 %1940, %1907
  %1942 = icmp sgt i64 %1941, -1
  %1943 = select i1 %1942, i64 1073741824, i64 -1073741823
  %1944 = add nsw i64 %1943, %1941
  %1945 = sdiv i64 %1944, 2147483648
  %1946 = trunc i64 %1945 to i32
  br label %1947

1947:                                             ; preds = %1939, %1938
  %1948 = phi i32 [ %1946, %1939 ], [ 2147483647, %1938 ]
  %1949 = and i32 %1948, %1912
  %1950 = lshr i32 %1948, 31
  %1951 = add nsw i32 %1950, %1913
  %1952 = ashr i32 %1948, %1908
  %1953 = icmp sgt i32 %1949, %1951
  %1954 = zext i1 %1953 to i32
  %1955 = add nsw i32 %1952, %1954
  %1956 = icmp eq i32 %1934, %1551
  br i1 %1956, label %1959, label %1957

1957:                                             ; preds = %1947
  %1958 = sext i32 %1934 to i64
  br label %1960

1959:                                             ; preds = %1947
  br i1 %1922, label %1968, label %1960

1960:                                             ; preds = %1959, %1957
  %1961 = phi i64 [ %1958, %1957 ], [ %1914, %1959 ]
  %1962 = mul nsw i64 %1961, %1914
  %1963 = icmp sgt i64 %1962, -1
  %1964 = select i1 %1963, i64 1073741824, i64 -1073741823
  %1965 = add nsw i64 %1964, %1962
  %1966 = sdiv i64 %1965, 2147483648
  %1967 = trunc i64 %1966 to i32
  br label %1968

1968:                                             ; preds = %1960, %1959
  %1969 = phi i32 [ %1967, %1960 ], [ 2147483647, %1959 ]
  %1970 = and i32 %1969, %1919
  %1971 = lshr i32 %1969, 31
  %1972 = add nsw i32 %1971, %1920
  %1973 = ashr i32 %1969, %1915
  %1974 = icmp sgt i32 %1970, %1972
  %1975 = zext i1 %1974 to i32
  %1976 = add nsw i32 %1973, %1975
  %1977 = icmp sle i32 %1955, %1976
  %1978 = getelementptr inbounds i8, i8* %1792, i64 %1924
  %1979 = zext i1 %1977 to i8
  store i8 %1979, i8* %1978, align 1
  %1980 = add nuw nsw i64 %1924, 1
  %1981 = icmp eq i64 %1980, %1906
  br i1 %1981, label %1982, label %1923

1982:                                             ; preds = %1968, %1901
  %1983 = icmp sgt i32 %1791, 5
  br i1 %1983, label %1984, label %1990

1984:                                             ; preds = %1982
  %1985 = getelementptr inbounds %"class.tflite::RuntimeShape", %"class.tflite::RuntimeShape"* %13, i64 0, i32 1, i32 0
  %1986 = load i32*, i32** %1985, align 8
  %1987 = icmp eq i32* %1986, null
  br i1 %1987, label %1990, label %1988

1988:                                             ; preds = %1984
  %1989 = bitcast i32* %1986 to i8*
  call void @_ZdaPv(i8* %1989) #9
  br label %1990

1990:                                             ; preds = %1988, %1984, %1982
  call void @llvm.lifetime.end.p0i8(i64 32, i8* nonnull %1758) #8
  %1991 = icmp sgt i32 %1756, 5
  br i1 %1991, label %1992, label %1998

1992:                                             ; preds = %1990
  %1993 = getelementptr inbounds %"class.tflite::RuntimeShape", %"class.tflite::RuntimeShape"* %12, i64 0, i32 1, i32 0
  %1994 = load i32*, i32** %1993, align 8
  %1995 = icmp eq i32* %1994, null
  br i1 %1995, label %1998, label %1996

1996:                                             ; preds = %1992
  %1997 = bitcast i32* %1994 to i8*
  call void @_ZdaPv(i8* %1997) #9
  br label %1998

1998:                                             ; preds = %1996, %1992, %1990
  call void @llvm.lifetime.end.p0i8(i64 32, i8* nonnull %1723) #8
  br i1 %1794, label %1999, label %2005

1999:                                             ; preds = %1998
  %2000 = getelementptr inbounds %"class.tflite::RuntimeShape", %"class.tflite::RuntimeShape"* %11, i64 0, i32 1, i32 0
  %2001 = load i32*, i32** %2000, align 8
  %2002 = icmp eq i32* %2001, null
  br i1 %2002, label %2005, label %2003

2003:                                             ; preds = %1999
  %2004 = bitcast i32* %2001 to i8*
  call void @_ZdaPv(i8* %2004) #9
  br label %2005

2005:                                             ; preds = %1998, %1999, %2003, %1677, %1681, %1685
  %2006 = phi i8* [ %1556, %1685 ], [ %1556, %1681 ], [ %1556, %1677 ], [ %1688, %2003 ], [ %1688, %1999 ], [ %1688, %1998 ]
  call void @llvm.lifetime.end.p0i8(i64 32, i8* nonnull %2006) #8
  call void @llvm.lifetime.end.p0i8(i64 32, i8* nonnull %1541) #8
  call void @llvm.lifetime.end.p0i8(i64 4, i8* nonnull %1537) #8
  call void @llvm.lifetime.end.p0i8(i64 4, i8* nonnull %1536) #8
  call void @llvm.lifetime.end.p0i8(i64 4, i8* nonnull %1532) #8
  call void @llvm.lifetime.end.p0i8(i64 4, i8* nonnull %1531) #8
  br label %2493

2007:                                             ; preds = %78
  %2008 = getelementptr inbounds %struct.TfLiteTensor, %struct.TfLiteTensor* %57, i64 0, i32 3, i32 1
  %2009 = load i32, i32* %2008, align 4
  %2010 = sub nsw i32 0, %2009
  %2011 = getelementptr inbounds %struct.TfLiteTensor, %struct.TfLiteTensor* %67, i64 0, i32 3, i32 1
  %2012 = load i32, i32* %2011, align 4
  %2013 = sub nsw i32 0, %2012
  %2014 = bitcast i32* %35 to i8*
  call void @llvm.lifetime.start.p0i8(i64 4, i8* nonnull %2014) #8
  store i32 -1431655766, i32* %35, align 4
  %2015 = bitcast i32* %36 to i8*
  call void @llvm.lifetime.start.p0i8(i64 4, i8* nonnull %2015) #8
  store i32 -1431655766, i32* %36, align 4
  %2016 = getelementptr inbounds %struct.TfLiteTensor, %struct.TfLiteTensor* %57, i64 0, i32 3, i32 0
  %2017 = load float, float* %2016, align 8
  %2018 = fpext float %2017 to double
  call void @_ZN6tflite35QuantizeMultiplierSmallerThanOneExpEdPiS0_(double %2018, i32* nonnull %35, i32* nonnull %36) #8
  %2019 = bitcast i32* %37 to i8*
  call void @llvm.lifetime.start.p0i8(i64 4, i8* nonnull %2019) #8
  store i32 -1431655766, i32* %37, align 4
  %2020 = bitcast i32* %38 to i8*
  call void @llvm.lifetime.start.p0i8(i64 4, i8* nonnull %2020) #8
  store i32 -1431655766, i32* %38, align 4
  %2021 = getelementptr inbounds %struct.TfLiteTensor, %struct.TfLiteTensor* %67, i64 0, i32 3, i32 0
  %2022 = load float, float* %2021, align 8
  %2023 = fpext float %2022 to double
  call void @_ZN6tflite35QuantizeMultiplierSmallerThanOneExpEdPiS0_(double %2023, i32* nonnull %37, i32* nonnull %38) #8
  %2024 = bitcast %"struct.tflite::ComparisonParams"* %39 to i8*
  call void @llvm.lifetime.start.p0i8(i64 32, i8* nonnull %2024) #8
  %2025 = getelementptr inbounds %"struct.tflite::ComparisonParams", %"struct.tflite::ComparisonParams"* %39, i64 0, i32 7
  %2026 = bitcast i8* %2025 to i32*
  store i32 -1431655766, i32* %2026, align 4
  %2027 = getelementptr inbounds %"struct.tflite::ComparisonParams", %"struct.tflite::ComparisonParams"* %39, i64 0, i32 0
  store i32 8, i32* %2027, align 4
  %2028 = getelementptr inbounds %"struct.tflite::ComparisonParams", %"struct.tflite::ComparisonParams"* %39, i64 0, i32 1
  store i32 %2010, i32* %2028, align 4
  %2029 = load i32, i32* %35, align 4
  %2030 = getelementptr inbounds %"struct.tflite::ComparisonParams", %"struct.tflite::ComparisonParams"* %39, i64 0, i32 2
  store i32 %2029, i32* %2030, align 4
  %2031 = load i32, i32* %36, align 4
  %2032 = getelementptr inbounds %"struct.tflite::ComparisonParams", %"struct.tflite::ComparisonParams"* %39, i64 0, i32 3
  store i32 %2031, i32* %2032, align 4
  %2033 = getelementptr inbounds %"struct.tflite::ComparisonParams", %"struct.tflite::ComparisonParams"* %39, i64 0, i32 4
  store i32 %2013, i32* %2033, align 4
  %2034 = load i32, i32* %37, align 4
  %2035 = getelementptr inbounds %"struct.tflite::ComparisonParams", %"struct.tflite::ComparisonParams"* %39, i64 0, i32 5
  store i32 %2034, i32* %2035, align 4
  %2036 = load i32, i32* %38, align 4
  %2037 = getelementptr inbounds %"struct.tflite::ComparisonParams", %"struct.tflite::ComparisonParams"* %39, i64 0, i32 6
  store i32 %2036, i32* %2037, align 4
  br i1 %80, label %2170, label %2038

2038:                                             ; preds = %2007
  %2039 = bitcast %"class.tflite::RuntimeShape"* %40 to i8*
  call void @llvm.lifetime.start.p0i8(i64 32, i8* nonnull %2039) #8
  %2040 = icmp eq %struct.TfLiteTensor* %57, null
  br i1 %2040, label %2041, label %2043

2041:                                             ; preds = %2038
  %2042 = getelementptr inbounds %"class.tflite::RuntimeShape", %"class.tflite::RuntimeShape"* %40, i64 0, i32 0
  store i32 0, i32* %2042, align 8, !alias.scope !797
  br label %2071

2043:                                             ; preds = %2038
  %2044 = getelementptr inbounds %struct.TfLiteTensor, %struct.TfLiteTensor* %57, i64 0, i32 2
  %2045 = load %struct.TfLiteIntArray*, %struct.TfLiteIntArray** %2044, align 8, !noalias !797
  %2046 = getelementptr inbounds %struct.TfLiteIntArray, %struct.TfLiteIntArray* %2045, i64 0, i32 0
  %2047 = load i32, i32* %2046, align 4, !noalias !797
  %2048 = getelementptr inbounds %struct.TfLiteIntArray, %struct.TfLiteIntArray* %2045, i64 0, i32 1, i64 0
  %2049 = getelementptr inbounds %"class.tflite::RuntimeShape", %"class.tflite::RuntimeShape"* %40, i64 0, i32 0
  store i32 %2047, i32* %2049, align 8, !alias.scope !797
  %2050 = icmp sgt i32 %2047, 5
  br i1 %2050, label %2051, label %2058

2051:                                             ; preds = %2043
  %2052 = sext i32 %2047 to i64
  %2053 = shl nsw i64 %2052, 2
  %2054 = call i8* @_Znam(i64 %2053) #9, !noalias !797
  %2055 = getelementptr inbounds %"class.tflite::RuntimeShape", %"class.tflite::RuntimeShape"* %40, i64 0, i32 1, i32 0
  %2056 = bitcast i32** %2055 to i8**
  store i8* %2054, i8** %2056, align 8, !alias.scope !797
  %2057 = bitcast i8* %2054 to i32*
  br label %2063

2058:                                             ; preds = %2043
  %2059 = getelementptr inbounds %"class.tflite::RuntimeShape", %"class.tflite::RuntimeShape"* %40, i64 0, i32 1
  %2060 = bitcast %union.anon* %2059 to i32*
  %2061 = sext i32 %2047 to i64
  %2062 = shl nsw i64 %2061, 2
  br label %2063

2063:                                             ; preds = %2058, %2051
  %2064 = phi i64 [ %2053, %2051 ], [ %2062, %2058 ]
  %2065 = phi i32* [ %2057, %2051 ], [ %2060, %2058 ]
  %2066 = bitcast i32* %2065 to i8*
  %2067 = bitcast i32* %2048 to i8*
  call void @llvm.memcpy.p0i8.p0i8.i64(i8* align 4 %2066, i8* align 4 %2067, i64 %2064, i1 false) #8
  %2068 = getelementptr inbounds %struct.TfLiteTensor, %struct.TfLiteTensor* %57, i64 0, i32 1
  %2069 = bitcast %union.TfLitePtrUnion* %2068 to i8**
  %2070 = load i8*, i8** %2069, align 8
  br label %2071

2071:                                             ; preds = %2063, %2041
  %2072 = phi i8* [ %2070, %2063 ], [ null, %2041 ]
  %2073 = bitcast %"class.tflite::RuntimeShape"* %41 to i8*
  call void @llvm.lifetime.start.p0i8(i64 32, i8* nonnull %2073) #8
  %2074 = icmp eq %struct.TfLiteTensor* %67, null
  br i1 %2074, label %2075, label %2077

2075:                                             ; preds = %2071
  %2076 = getelementptr inbounds %"class.tflite::RuntimeShape", %"class.tflite::RuntimeShape"* %41, i64 0, i32 0
  store i32 0, i32* %2076, align 8, !alias.scope !800
  br label %2105

2077:                                             ; preds = %2071
  %2078 = getelementptr inbounds %struct.TfLiteTensor, %struct.TfLiteTensor* %67, i64 0, i32 2
  %2079 = load %struct.TfLiteIntArray*, %struct.TfLiteIntArray** %2078, align 8, !noalias !800
  %2080 = getelementptr inbounds %struct.TfLiteIntArray, %struct.TfLiteIntArray* %2079, i64 0, i32 0
  %2081 = load i32, i32* %2080, align 4, !noalias !800
  %2082 = getelementptr inbounds %struct.TfLiteIntArray, %struct.TfLiteIntArray* %2079, i64 0, i32 1, i64 0
  %2083 = getelementptr inbounds %"class.tflite::RuntimeShape", %"class.tflite::RuntimeShape"* %41, i64 0, i32 0
  store i32 %2081, i32* %2083, align 8, !alias.scope !800
  %2084 = icmp sgt i32 %2081, 5
  br i1 %2084, label %2085, label %2092

2085:                                             ; preds = %2077
  %2086 = sext i32 %2081 to i64
  %2087 = shl nsw i64 %2086, 2
  %2088 = call i8* @_Znam(i64 %2087) #9, !noalias !800
  %2089 = getelementptr inbounds %"class.tflite::RuntimeShape", %"class.tflite::RuntimeShape"* %41, i64 0, i32 1, i32 0
  %2090 = bitcast i32** %2089 to i8**
  store i8* %2088, i8** %2090, align 8, !alias.scope !800
  %2091 = bitcast i8* %2088 to i32*
  br label %2097

2092:                                             ; preds = %2077
  %2093 = getelementptr inbounds %"class.tflite::RuntimeShape", %"class.tflite::RuntimeShape"* %41, i64 0, i32 1
  %2094 = bitcast %union.anon* %2093 to i32*
  %2095 = sext i32 %2081 to i64
  %2096 = shl nsw i64 %2095, 2
  br label %2097

2097:                                             ; preds = %2092, %2085
  %2098 = phi i64 [ %2087, %2085 ], [ %2096, %2092 ]
  %2099 = phi i32* [ %2091, %2085 ], [ %2094, %2092 ]
  %2100 = bitcast i32* %2099 to i8*
  %2101 = bitcast i32* %2082 to i8*
  call void @llvm.memcpy.p0i8.p0i8.i64(i8* align 4 %2100, i8* align 4 %2101, i64 %2098, i1 false) #8
  %2102 = getelementptr inbounds %struct.TfLiteTensor, %struct.TfLiteTensor* %67, i64 0, i32 1
  %2103 = bitcast %union.TfLitePtrUnion* %2102 to i8**
  %2104 = load i8*, i8** %2103, align 8
  br label %2105

2105:                                             ; preds = %2097, %2075
  %2106 = phi i8* [ %2104, %2097 ], [ null, %2075 ]
  %2107 = bitcast %"class.tflite::RuntimeShape"* %42 to i8*
  call void @llvm.lifetime.start.p0i8(i64 32, i8* nonnull %2107) #8
  %2108 = icmp eq %struct.TfLiteTensor* %79, null
  br i1 %2108, label %2109, label %2111

2109:                                             ; preds = %2105
  %2110 = getelementptr inbounds %"class.tflite::RuntimeShape", %"class.tflite::RuntimeShape"* %42, i64 0, i32 0
  store i32 0, i32* %2110, align 8, !alias.scope !803
  br label %2139

2111:                                             ; preds = %2105
  %2112 = getelementptr inbounds %struct.TfLiteTensor, %struct.TfLiteTensor* %79, i64 0, i32 2
  %2113 = load %struct.TfLiteIntArray*, %struct.TfLiteIntArray** %2112, align 8, !noalias !803
  %2114 = getelementptr inbounds %struct.TfLiteIntArray, %struct.TfLiteIntArray* %2113, i64 0, i32 0
  %2115 = load i32, i32* %2114, align 4, !noalias !803
  %2116 = getelementptr inbounds %struct.TfLiteIntArray, %struct.TfLiteIntArray* %2113, i64 0, i32 1, i64 0
  %2117 = getelementptr inbounds %"class.tflite::RuntimeShape", %"class.tflite::RuntimeShape"* %42, i64 0, i32 0
  store i32 %2115, i32* %2117, align 8, !alias.scope !803
  %2118 = icmp sgt i32 %2115, 5
  br i1 %2118, label %2119, label %2126

2119:                                             ; preds = %2111
  %2120 = sext i32 %2115 to i64
  %2121 = shl nsw i64 %2120, 2
  %2122 = call i8* @_Znam(i64 %2121) #9, !noalias !803
  %2123 = getelementptr inbounds %"class.tflite::RuntimeShape", %"class.tflite::RuntimeShape"* %42, i64 0, i32 1, i32 0
  %2124 = bitcast i32** %2123 to i8**
  store i8* %2122, i8** %2124, align 8, !alias.scope !803
  %2125 = bitcast i8* %2122 to i32*
  br label %2131

2126:                                             ; preds = %2111
  %2127 = getelementptr inbounds %"class.tflite::RuntimeShape", %"class.tflite::RuntimeShape"* %42, i64 0, i32 1
  %2128 = bitcast %union.anon* %2127 to i32*
  %2129 = sext i32 %2115 to i64
  %2130 = shl nsw i64 %2129, 2
  br label %2131

2131:                                             ; preds = %2126, %2119
  %2132 = phi i64 [ %2121, %2119 ], [ %2130, %2126 ]
  %2133 = phi i32* [ %2125, %2119 ], [ %2128, %2126 ]
  %2134 = bitcast i32* %2133 to i8*
  %2135 = bitcast i32* %2116 to i8*
  call void @llvm.memcpy.p0i8.p0i8.i64(i8* align 4 %2134, i8* align 4 %2135, i64 %2132, i1 false) #8
  %2136 = getelementptr inbounds %struct.TfLiteTensor, %struct.TfLiteTensor* %79, i64 0, i32 1
  %2137 = bitcast %union.TfLitePtrUnion* %2136 to i8**
  %2138 = load i8*, i8** %2137, align 8
  br label %2139

2139:                                             ; preds = %2131, %2109
  %2140 = phi i8* [ %2138, %2131 ], [ null, %2109 ]
  call void @_ZN6tflite13reference_ops36BroadcastComparison4DSlowWithScalingIaXadL_ZNS0_11LessEqualFnIiEEbT_S3_EEEEvRKNS_16ComparisonParamsERKNS_12RuntimeShapeEPKS3_S9_SB_S9_Pb(%"struct.tflite::ComparisonParams"* nonnull dereferenceable(32) %39, %"class.tflite::RuntimeShape"* nonnull dereferenceable(32) %40, i8* %2072, %"class.tflite::RuntimeShape"* nonnull dereferenceable(32) %41, i8* %2106, %"class.tflite::RuntimeShape"* nonnull dereferenceable(32) %42, i8* %2140) #8
  %2141 = getelementptr inbounds %"class.tflite::RuntimeShape", %"class.tflite::RuntimeShape"* %42, i64 0, i32 0
  %2142 = load i32, i32* %2141, align 8
  %2143 = icmp sgt i32 %2142, 5
  br i1 %2143, label %2144, label %2150

2144:                                             ; preds = %2139
  %2145 = getelementptr inbounds %"class.tflite::RuntimeShape", %"class.tflite::RuntimeShape"* %42, i64 0, i32 1, i32 0
  %2146 = load i32*, i32** %2145, align 8
  %2147 = icmp eq i32* %2146, null
  br i1 %2147, label %2150, label %2148

2148:                                             ; preds = %2144
  %2149 = bitcast i32* %2146 to i8*
  call void @_ZdaPv(i8* %2149) #9
  br label %2150

2150:                                             ; preds = %2148, %2144, %2139
  call void @llvm.lifetime.end.p0i8(i64 32, i8* nonnull %2107) #8
  %2151 = getelementptr inbounds %"class.tflite::RuntimeShape", %"class.tflite::RuntimeShape"* %41, i64 0, i32 0
  %2152 = load i32, i32* %2151, align 8
  %2153 = icmp sgt i32 %2152, 5
  br i1 %2153, label %2154, label %2160

2154:                                             ; preds = %2150
  %2155 = getelementptr inbounds %"class.tflite::RuntimeShape", %"class.tflite::RuntimeShape"* %41, i64 0, i32 1, i32 0
  %2156 = load i32*, i32** %2155, align 8
  %2157 = icmp eq i32* %2156, null
  br i1 %2157, label %2160, label %2158

2158:                                             ; preds = %2154
  %2159 = bitcast i32* %2156 to i8*
  call void @_ZdaPv(i8* %2159) #9
  br label %2160

2160:                                             ; preds = %2158, %2154, %2150
  call void @llvm.lifetime.end.p0i8(i64 32, i8* nonnull %2073) #8
  %2161 = getelementptr inbounds %"class.tflite::RuntimeShape", %"class.tflite::RuntimeShape"* %40, i64 0, i32 0
  %2162 = load i32, i32* %2161, align 8
  %2163 = icmp sgt i32 %2162, 5
  br i1 %2163, label %2164, label %2488

2164:                                             ; preds = %2160
  %2165 = getelementptr inbounds %"class.tflite::RuntimeShape", %"class.tflite::RuntimeShape"* %40, i64 0, i32 1, i32 0
  %2166 = load i32*, i32** %2165, align 8
  %2167 = icmp eq i32* %2166, null
  br i1 %2167, label %2488, label %2168

2168:                                             ; preds = %2164
  %2169 = bitcast i32* %2166 to i8*
  call void @_ZdaPv(i8* %2169) #9
  br label %2488

2170:                                             ; preds = %2007
  %2171 = bitcast %"class.tflite::RuntimeShape"* %43 to i8*
  call void @llvm.lifetime.start.p0i8(i64 32, i8* nonnull %2171) #8
  %2172 = icmp eq %struct.TfLiteTensor* %57, null
  br i1 %2172, label %2173, label %2175

2173:                                             ; preds = %2170
  %2174 = getelementptr inbounds %"class.tflite::RuntimeShape", %"class.tflite::RuntimeShape"* %43, i64 0, i32 0
  store i32 0, i32* %2174, align 8, !alias.scope !806
  br label %2203

2175:                                             ; preds = %2170
  %2176 = getelementptr inbounds %struct.TfLiteTensor, %struct.TfLiteTensor* %57, i64 0, i32 2
  %2177 = load %struct.TfLiteIntArray*, %struct.TfLiteIntArray** %2176, align 8, !noalias !806
  %2178 = getelementptr inbounds %struct.TfLiteIntArray, %struct.TfLiteIntArray* %2177, i64 0, i32 0
  %2179 = load i32, i32* %2178, align 4, !noalias !806
  %2180 = getelementptr inbounds %struct.TfLiteIntArray, %struct.TfLiteIntArray* %2177, i64 0, i32 1, i64 0
  %2181 = getelementptr inbounds %"class.tflite::RuntimeShape", %"class.tflite::RuntimeShape"* %43, i64 0, i32 0
  store i32 %2179, i32* %2181, align 8, !alias.scope !806
  %2182 = icmp sgt i32 %2179, 5
  br i1 %2182, label %2183, label %2190

2183:                                             ; preds = %2175
  %2184 = sext i32 %2179 to i64
  %2185 = shl nsw i64 %2184, 2
  %2186 = call i8* @_Znam(i64 %2185) #9, !noalias !806
  %2187 = getelementptr inbounds %"class.tflite::RuntimeShape", %"class.tflite::RuntimeShape"* %43, i64 0, i32 1, i32 0
  %2188 = bitcast i32** %2187 to i8**
  store i8* %2186, i8** %2188, align 8, !alias.scope !806
  %2189 = bitcast i8* %2186 to i32*
  br label %2195

2190:                                             ; preds = %2175
  %2191 = getelementptr inbounds %"class.tflite::RuntimeShape", %"class.tflite::RuntimeShape"* %43, i64 0, i32 1
  %2192 = bitcast %union.anon* %2191 to i32*
  %2193 = sext i32 %2179 to i64
  %2194 = shl nsw i64 %2193, 2
  br label %2195

2195:                                             ; preds = %2190, %2183
  %2196 = phi i64 [ %2185, %2183 ], [ %2194, %2190 ]
  %2197 = phi i32* [ %2189, %2183 ], [ %2192, %2190 ]
  %2198 = bitcast i32* %2197 to i8*
  %2199 = bitcast i32* %2180 to i8*
  call void @llvm.memcpy.p0i8.p0i8.i64(i8* align 4 %2198, i8* align 4 %2199, i64 %2196, i1 false) #8
  %2200 = getelementptr inbounds %struct.TfLiteTensor, %struct.TfLiteTensor* %57, i64 0, i32 1
  %2201 = bitcast %union.TfLitePtrUnion* %2200 to i8**
  %2202 = load i8*, i8** %2201, align 8
  br label %2203

2203:                                             ; preds = %2195, %2173
  %2204 = phi i32 [ %2179, %2195 ], [ 0, %2173 ]
  %2205 = phi i8* [ %2202, %2195 ], [ null, %2173 ]
  %2206 = bitcast %"class.tflite::RuntimeShape"* %44 to i8*
  call void @llvm.lifetime.start.p0i8(i64 32, i8* nonnull %2206) #8
  %2207 = icmp eq %struct.TfLiteTensor* %67, null
  br i1 %2207, label %2208, label %2210

2208:                                             ; preds = %2203
  %2209 = getelementptr inbounds %"class.tflite::RuntimeShape", %"class.tflite::RuntimeShape"* %44, i64 0, i32 0
  store i32 0, i32* %2209, align 8, !alias.scope !809
  br label %2238

2210:                                             ; preds = %2203
  %2211 = getelementptr inbounds %struct.TfLiteTensor, %struct.TfLiteTensor* %67, i64 0, i32 2
  %2212 = load %struct.TfLiteIntArray*, %struct.TfLiteIntArray** %2211, align 8, !noalias !809
  %2213 = getelementptr inbounds %struct.TfLiteIntArray, %struct.TfLiteIntArray* %2212, i64 0, i32 0
  %2214 = load i32, i32* %2213, align 4, !noalias !809
  %2215 = getelementptr inbounds %struct.TfLiteIntArray, %struct.TfLiteIntArray* %2212, i64 0, i32 1, i64 0
  %2216 = getelementptr inbounds %"class.tflite::RuntimeShape", %"class.tflite::RuntimeShape"* %44, i64 0, i32 0
  store i32 %2214, i32* %2216, align 8, !alias.scope !809
  %2217 = icmp sgt i32 %2214, 5
  br i1 %2217, label %2218, label %2225

2218:                                             ; preds = %2210
  %2219 = sext i32 %2214 to i64
  %2220 = shl nsw i64 %2219, 2
  %2221 = call i8* @_Znam(i64 %2220) #9, !noalias !809
  %2222 = getelementptr inbounds %"class.tflite::RuntimeShape", %"class.tflite::RuntimeShape"* %44, i64 0, i32 1, i32 0
  %2223 = bitcast i32** %2222 to i8**
  store i8* %2221, i8** %2223, align 8, !alias.scope !809
  %2224 = bitcast i8* %2221 to i32*
  br label %2230

2225:                                             ; preds = %2210
  %2226 = getelementptr inbounds %"class.tflite::RuntimeShape", %"class.tflite::RuntimeShape"* %44, i64 0, i32 1
  %2227 = bitcast %union.anon* %2226 to i32*
  %2228 = sext i32 %2214 to i64
  %2229 = shl nsw i64 %2228, 2
  br label %2230

2230:                                             ; preds = %2225, %2218
  %2231 = phi i64 [ %2220, %2218 ], [ %2229, %2225 ]
  %2232 = phi i32* [ %2224, %2218 ], [ %2227, %2225 ]
  %2233 = bitcast i32* %2232 to i8*
  %2234 = bitcast i32* %2215 to i8*
  call void @llvm.memcpy.p0i8.p0i8.i64(i8* align 4 %2233, i8* align 4 %2234, i64 %2231, i1 false) #8
  %2235 = getelementptr inbounds %struct.TfLiteTensor, %struct.TfLiteTensor* %67, i64 0, i32 1
  %2236 = bitcast %union.TfLitePtrUnion* %2235 to i8**
  %2237 = load i8*, i8** %2236, align 8
  br label %2238

2238:                                             ; preds = %2230, %2208
  %2239 = phi i32 [ %2214, %2230 ], [ 0, %2208 ]
  %2240 = phi i8* [ %2237, %2230 ], [ null, %2208 ]
  %2241 = bitcast %"class.tflite::RuntimeShape"* %45 to i8*
  call void @llvm.lifetime.start.p0i8(i64 32, i8* nonnull %2241) #8
  %2242 = icmp eq %struct.TfLiteTensor* %79, null
  br i1 %2242, label %2243, label %2245

2243:                                             ; preds = %2238
  %2244 = getelementptr inbounds %"class.tflite::RuntimeShape", %"class.tflite::RuntimeShape"* %45, i64 0, i32 0
  store i32 0, i32* %2244, align 8, !alias.scope !812
  br label %2273

2245:                                             ; preds = %2238
  %2246 = getelementptr inbounds %struct.TfLiteTensor, %struct.TfLiteTensor* %79, i64 0, i32 2
  %2247 = load %struct.TfLiteIntArray*, %struct.TfLiteIntArray** %2246, align 8, !noalias !812
  %2248 = getelementptr inbounds %struct.TfLiteIntArray, %struct.TfLiteIntArray* %2247, i64 0, i32 0
  %2249 = load i32, i32* %2248, align 4, !noalias !812
  %2250 = getelementptr inbounds %struct.TfLiteIntArray, %struct.TfLiteIntArray* %2247, i64 0, i32 1, i64 0
  %2251 = getelementptr inbounds %"class.tflite::RuntimeShape", %"class.tflite::RuntimeShape"* %45, i64 0, i32 0
  store i32 %2249, i32* %2251, align 8, !alias.scope !812
  %2252 = icmp sgt i32 %2249, 5
  br i1 %2252, label %2253, label %2260

2253:                                             ; preds = %2245
  %2254 = sext i32 %2249 to i64
  %2255 = shl nsw i64 %2254, 2
  %2256 = call i8* @_Znam(i64 %2255) #9, !noalias !812
  %2257 = getelementptr inbounds %"class.tflite::RuntimeShape", %"class.tflite::RuntimeShape"* %45, i64 0, i32 1, i32 0
  %2258 = bitcast i32** %2257 to i8**
  store i8* %2256, i8** %2258, align 8, !alias.scope !812
  %2259 = bitcast i8* %2256 to i32*
  br label %2265

2260:                                             ; preds = %2245
  %2261 = getelementptr inbounds %"class.tflite::RuntimeShape", %"class.tflite::RuntimeShape"* %45, i64 0, i32 1
  %2262 = bitcast %union.anon* %2261 to i32*
  %2263 = sext i32 %2249 to i64
  %2264 = shl nsw i64 %2263, 2
  br label %2265

2265:                                             ; preds = %2260, %2253
  %2266 = phi i64 [ %2255, %2253 ], [ %2264, %2260 ]
  %2267 = phi i32* [ %2259, %2253 ], [ %2262, %2260 ]
  %2268 = bitcast i32* %2267 to i8*
  %2269 = bitcast i32* %2250 to i8*
  call void @llvm.memcpy.p0i8.p0i8.i64(i8* align 4 %2268, i8* align 4 %2269, i64 %2266, i1 false) #8
  %2270 = getelementptr inbounds %struct.TfLiteTensor, %struct.TfLiteTensor* %79, i64 0, i32 1
  %2271 = bitcast %union.TfLitePtrUnion* %2270 to i8**
  %2272 = load i8*, i8** %2271, align 8
  br label %2273

2273:                                             ; preds = %2265, %2243
  %2274 = phi i32 [ %2249, %2265 ], [ 0, %2243 ]
  %2275 = phi i8* [ %2272, %2265 ], [ null, %2243 ]
  %2276 = getelementptr inbounds %"class.tflite::RuntimeShape", %"class.tflite::RuntimeShape"* %43, i64 0, i32 1
  %2277 = icmp sgt i32 %2204, 5
  br i1 %2277, label %2278, label %2281

2278:                                             ; preds = %2273
  %2279 = getelementptr inbounds %union.anon, %union.anon* %2276, i64 0, i32 0
  %2280 = load i32*, i32** %2279, align 8
  br label %2284

2281:                                             ; preds = %2273
  %2282 = bitcast %union.anon* %2276 to i32*
  %2283 = icmp sgt i32 %2204, 0
  br i1 %2283, label %2284, label %2388

2284:                                             ; preds = %2281, %2278
  %2285 = phi i32* [ %2280, %2278 ], [ %2282, %2281 ]
  %2286 = zext i32 %2204 to i64
  %2287 = icmp ult i32 %2204, 8
  br i1 %2287, label %2373, label %2288

2288:                                             ; preds = %2284
  %2289 = and i64 %2286, 4294967288
  %2290 = add nsw i64 %2289, -8
  %2291 = lshr exact i64 %2290, 3
  %2292 = add nuw nsw i64 %2291, 1
  %2293 = and i64 %2292, 3
  %2294 = icmp ult i64 %2290, 24
  br i1 %2294, label %2340, label %2295

2295:                                             ; preds = %2288
  %2296 = sub nsw i64 %2292, %2293
  br label %2297

2297:                                             ; preds = %2297, %2295
  %2298 = phi i64 [ 0, %2295 ], [ %2337, %2297 ]
  %2299 = phi <4 x i32> [ <i32 1, i32 1, i32 1, i32 1>, %2295 ], [ %2335, %2297 ]
  %2300 = phi <4 x i32> [ <i32 1, i32 1, i32 1, i32 1>, %2295 ], [ %2336, %2297 ]
  %2301 = phi i64 [ %2296, %2295 ], [ %2338, %2297 ]
  %2302 = getelementptr inbounds i32, i32* %2285, i64 %2298
  %2303 = bitcast i32* %2302 to <4 x i32>*
  %2304 = load <4 x i32>, <4 x i32>* %2303, align 4
  %2305 = getelementptr inbounds i32, i32* %2302, i64 4
  %2306 = bitcast i32* %2305 to <4 x i32>*
  %2307 = load <4 x i32>, <4 x i32>* %2306, align 4
  %2308 = mul nsw <4 x i32> %2304, %2299
  %2309 = mul nsw <4 x i32> %2307, %2300
  %2310 = or i64 %2298, 8
  %2311 = getelementptr inbounds i32, i32* %2285, i64 %2310
  %2312 = bitcast i32* %2311 to <4 x i32>*
  %2313 = load <4 x i32>, <4 x i32>* %2312, align 4
  %2314 = getelementptr inbounds i32, i32* %2311, i64 4
  %2315 = bitcast i32* %2314 to <4 x i32>*
  %2316 = load <4 x i32>, <4 x i32>* %2315, align 4
  %2317 = mul nsw <4 x i32> %2313, %2308
  %2318 = mul nsw <4 x i32> %2316, %2309
  %2319 = or i64 %2298, 16
  %2320 = getelementptr inbounds i32, i32* %2285, i64 %2319
  %2321 = bitcast i32* %2320 to <4 x i32>*
  %2322 = load <4 x i32>, <4 x i32>* %2321, align 4
  %2323 = getelementptr inbounds i32, i32* %2320, i64 4
  %2324 = bitcast i32* %2323 to <4 x i32>*
  %2325 = load <4 x i32>, <4 x i32>* %2324, align 4
  %2326 = mul nsw <4 x i32> %2322, %2317
  %2327 = mul nsw <4 x i32> %2325, %2318
  %2328 = or i64 %2298, 24
  %2329 = getelementptr inbounds i32, i32* %2285, i64 %2328
  %2330 = bitcast i32* %2329 to <4 x i32>*
  %2331 = load <4 x i32>, <4 x i32>* %2330, align 4
  %2332 = getelementptr inbounds i32, i32* %2329, i64 4
  %2333 = bitcast i32* %2332 to <4 x i32>*
  %2334 = load <4 x i32>, <4 x i32>* %2333, align 4
  %2335 = mul nsw <4 x i32> %2331, %2326
  %2336 = mul nsw <4 x i32> %2334, %2327
  %2337 = add i64 %2298, 32
  %2338 = add i64 %2301, -4
  %2339 = icmp eq i64 %2338, 0
  br i1 %2339, label %2340, label %2297, !llvm.loop !815

2340:                                             ; preds = %2297, %2288
  %2341 = phi <4 x i32> [ undef, %2288 ], [ %2335, %2297 ]
  %2342 = phi <4 x i32> [ undef, %2288 ], [ %2336, %2297 ]
  %2343 = phi i64 [ 0, %2288 ], [ %2337, %2297 ]
  %2344 = phi <4 x i32> [ <i32 1, i32 1, i32 1, i32 1>, %2288 ], [ %2335, %2297 ]
  %2345 = phi <4 x i32> [ <i32 1, i32 1, i32 1, i32 1>, %2288 ], [ %2336, %2297 ]
  %2346 = icmp eq i64 %2293, 0
  br i1 %2346, label %2363, label %2347

2347:                                             ; preds = %2340, %2347
  %2348 = phi i64 [ %2360, %2347 ], [ %2343, %2340 ]
  %2349 = phi <4 x i32> [ %2358, %2347 ], [ %2344, %2340 ]
  %2350 = phi <4 x i32> [ %2359, %2347 ], [ %2345, %2340 ]
  %2351 = phi i64 [ %2361, %2347 ], [ %2293, %2340 ]
  %2352 = getelementptr inbounds i32, i32* %2285, i64 %2348
  %2353 = bitcast i32* %2352 to <4 x i32>*
  %2354 = load <4 x i32>, <4 x i32>* %2353, align 4
  %2355 = getelementptr inbounds i32, i32* %2352, i64 4
  %2356 = bitcast i32* %2355 to <4 x i32>*
  %2357 = load <4 x i32>, <4 x i32>* %2356, align 4
  %2358 = mul nsw <4 x i32> %2354, %2349
  %2359 = mul nsw <4 x i32> %2357, %2350
  %2360 = add i64 %2348, 8
  %2361 = add i64 %2351, -1
  %2362 = icmp eq i64 %2361, 0
  br i1 %2362, label %2363, label %2347, !llvm.loop !816

2363:                                             ; preds = %2347, %2340
  %2364 = phi <4 x i32> [ %2341, %2340 ], [ %2358, %2347 ]
  %2365 = phi <4 x i32> [ %2342, %2340 ], [ %2359, %2347 ]
  %2366 = mul <4 x i32> %2365, %2364
  %2367 = shufflevector <4 x i32> %2366, <4 x i32> undef, <4 x i32> <i32 2, i32 3, i32 undef, i32 undef>
  %2368 = mul <4 x i32> %2366, %2367
  %2369 = shufflevector <4 x i32> %2368, <4 x i32> undef, <4 x i32> <i32 1, i32 undef, i32 undef, i32 undef>
  %2370 = mul <4 x i32> %2368, %2369
  %2371 = extractelement <4 x i32> %2370, i32 0
  %2372 = icmp eq i64 %2289, %2286
  br i1 %2372, label %2384, label %2373

2373:                                             ; preds = %2363, %2284
  %2374 = phi i64 [ 0, %2284 ], [ %2289, %2363 ]
  %2375 = phi i32 [ 1, %2284 ], [ %2371, %2363 ]
  br label %2376

2376:                                             ; preds = %2373, %2376
  %2377 = phi i64 [ %2382, %2376 ], [ %2374, %2373 ]
  %2378 = phi i32 [ %2381, %2376 ], [ %2375, %2373 ]
  %2379 = getelementptr inbounds i32, i32* %2285, i64 %2377
  %2380 = load i32, i32* %2379, align 4
  %2381 = mul nsw i32 %2380, %2378
  %2382 = add nuw nsw i64 %2377, 1
  %2383 = icmp eq i64 %2382, %2286
  br i1 %2383, label %2384, label %2376, !llvm.loop !817

2384:                                             ; preds = %2376, %2363
  %2385 = phi i32 [ %2371, %2363 ], [ %2381, %2376 ]
  %2386 = sext i32 %2385 to i64
  %2387 = icmp sgt i32 %2385, 0
  br i1 %2387, label %2388, label %2465

2388:                                             ; preds = %2384, %2281
  %2389 = phi i64 [ %2386, %2384 ], [ 1, %2281 ]
  %2390 = sext i32 %2029 to i64
  %2391 = sub nsw i32 0, %2031
  %2392 = zext i32 %2391 to i64
  %2393 = shl nsw i64 -1, %2392
  %2394 = trunc i64 %2393 to i32
  %2395 = xor i32 %2394, -1
  %2396 = ashr i32 %2395, 1
  %2397 = sext i32 %2034 to i64
  %2398 = sub nsw i32 0, %2036
  %2399 = zext i32 %2398 to i64
  %2400 = shl nsw i64 -1, %2399
  %2401 = trunc i64 %2400 to i32
  %2402 = xor i32 %2401, -1
  %2403 = ashr i32 %2402, 1
  %2404 = icmp eq i32 %2029, -2147483648
  %2405 = icmp eq i32 %2034, -2147483648
  br label %2406

2406:                                             ; preds = %2451, %2388
  %2407 = phi i64 [ 0, %2388 ], [ %2463, %2451 ]
  %2408 = getelementptr inbounds i8, i8* %2205, i64 %2407
  %2409 = load i8, i8* %2408, align 1
  %2410 = sext i8 %2409 to i32
  %2411 = sub i32 %2410, %2009
  %2412 = getelementptr inbounds i8, i8* %2240, i64 %2407
  %2413 = load i8, i8* %2412, align 1
  %2414 = sext i8 %2413 to i32
  %2415 = sub i32 %2414, %2012
  %2416 = shl i32 %2411, 8
  %2417 = shl i32 %2415, 8
  %2418 = icmp eq i32 %2416, %2029
  br i1 %2418, label %2421, label %2419

2419:                                             ; preds = %2406
  %2420 = sext i32 %2416 to i64
  br label %2422

2421:                                             ; preds = %2406
  br i1 %2404, label %2430, label %2422

2422:                                             ; preds = %2421, %2419
  %2423 = phi i64 [ %2420, %2419 ], [ %2390, %2421 ]
  %2424 = mul nsw i64 %2423, %2390
  %2425 = icmp sgt i64 %2424, -1
  %2426 = select i1 %2425, i64 1073741824, i64 -1073741823
  %2427 = add nsw i64 %2426, %2424
  %2428 = sdiv i64 %2427, 2147483648
  %2429 = trunc i64 %2428 to i32
  br label %2430

2430:                                             ; preds = %2422, %2421
  %2431 = phi i32 [ %2429, %2422 ], [ 2147483647, %2421 ]
  %2432 = and i32 %2431, %2395
  %2433 = lshr i32 %2431, 31
  %2434 = add nsw i32 %2433, %2396
  %2435 = ashr i32 %2431, %2391
  %2436 = icmp sgt i32 %2432, %2434
  %2437 = zext i1 %2436 to i32
  %2438 = add nsw i32 %2435, %2437
  %2439 = icmp eq i32 %2417, %2034
  br i1 %2439, label %2442, label %2440

2440:                                             ; preds = %2430
  %2441 = sext i32 %2417 to i64
  br label %2443

2442:                                             ; preds = %2430
  br i1 %2405, label %2451, label %2443

2443:                                             ; preds = %2442, %2440
  %2444 = phi i64 [ %2441, %2440 ], [ %2397, %2442 ]
  %2445 = mul nsw i64 %2444, %2397
  %2446 = icmp sgt i64 %2445, -1
  %2447 = select i1 %2446, i64 1073741824, i64 -1073741823
  %2448 = add nsw i64 %2447, %2445
  %2449 = sdiv i64 %2448, 2147483648
  %2450 = trunc i64 %2449 to i32
  br label %2451

2451:                                             ; preds = %2443, %2442
  %2452 = phi i32 [ %2450, %2443 ], [ 2147483647, %2442 ]
  %2453 = and i32 %2452, %2402
  %2454 = lshr i32 %2452, 31
  %2455 = add nsw i32 %2454, %2403
  %2456 = ashr i32 %2452, %2398
  %2457 = icmp sgt i32 %2453, %2455
  %2458 = zext i1 %2457 to i32
  %2459 = add nsw i32 %2456, %2458
  %2460 = icmp sle i32 %2438, %2459
  %2461 = getelementptr inbounds i8, i8* %2275, i64 %2407
  %2462 = zext i1 %2460 to i8
  store i8 %2462, i8* %2461, align 1
  %2463 = add nuw nsw i64 %2407, 1
  %2464 = icmp eq i64 %2463, %2389
  br i1 %2464, label %2465, label %2406

2465:                                             ; preds = %2451, %2384
  %2466 = icmp sgt i32 %2274, 5
  br i1 %2466, label %2467, label %2473

2467:                                             ; preds = %2465
  %2468 = getelementptr inbounds %"class.tflite::RuntimeShape", %"class.tflite::RuntimeShape"* %45, i64 0, i32 1, i32 0
  %2469 = load i32*, i32** %2468, align 8
  %2470 = icmp eq i32* %2469, null
  br i1 %2470, label %2473, label %2471

2471:                                             ; preds = %2467
  %2472 = bitcast i32* %2469 to i8*
  call void @_ZdaPv(i8* %2472) #9
  br label %2473

2473:                                             ; preds = %2471, %2467, %2465
  call void @llvm.lifetime.end.p0i8(i64 32, i8* nonnull %2241) #8
  %2474 = icmp sgt i32 %2239, 5
  br i1 %2474, label %2475, label %2481

2475:                                             ; preds = %2473
  %2476 = getelementptr inbounds %"class.tflite::RuntimeShape", %"class.tflite::RuntimeShape"* %44, i64 0, i32 1, i32 0
  %2477 = load i32*, i32** %2476, align 8
  %2478 = icmp eq i32* %2477, null
  br i1 %2478, label %2481, label %2479

2479:                                             ; preds = %2475
  %2480 = bitcast i32* %2477 to i8*
  call void @_ZdaPv(i8* %2480) #9
  br label %2481

2481:                                             ; preds = %2479, %2475, %2473
  call void @llvm.lifetime.end.p0i8(i64 32, i8* nonnull %2206) #8
  br i1 %2277, label %2482, label %2488

2482:                                             ; preds = %2481
  %2483 = getelementptr inbounds %"class.tflite::RuntimeShape", %"class.tflite::RuntimeShape"* %43, i64 0, i32 1, i32 0
  %2484 = load i32*, i32** %2483, align 8
  %2485 = icmp eq i32* %2484, null
  br i1 %2485, label %2488, label %2486

2486:                                             ; preds = %2482
  %2487 = bitcast i32* %2484 to i8*
  call void @_ZdaPv(i8* %2487) #9
  br label %2488

2488:                                             ; preds = %2481, %2482, %2486, %2160, %2164, %2168
  %2489 = phi i8* [ %2039, %2168 ], [ %2039, %2164 ], [ %2039, %2160 ], [ %2171, %2486 ], [ %2171, %2482 ], [ %2171, %2481 ]
  call void @llvm.lifetime.end.p0i8(i64 32, i8* nonnull %2489) #8
  call void @llvm.lifetime.end.p0i8(i64 32, i8* nonnull %2024) #8
  call void @llvm.lifetime.end.p0i8(i64 4, i8* nonnull %2020) #8
  call void @llvm.lifetime.end.p0i8(i64 4, i8* nonnull %2019) #8
  call void @llvm.lifetime.end.p0i8(i64 4, i8* nonnull %2015) #8
  call void @llvm.lifetime.end.p0i8(i64 4, i8* nonnull %2014) #8
  br label %2493

2490:                                             ; preds = %78
  %2491 = getelementptr inbounds %struct.TfLiteContext, %struct.TfLiteContext* %0, i64 0, i32 5
  %2492 = load void (%struct.TfLiteContext*, i8*, ...)*, void (%struct.TfLiteContext*, i8*, ...)** %2491, align 8
  tail call void (%struct.TfLiteContext*, i8*, ...) %2492(%struct.TfLiteContext* %0, i8* getelementptr inbounds ([51 x i8], [51 x i8]* @.str.15, i64 0, i64 0), i32 %82) #8
  br label %2493

2493:                                             ; preds = %596, %1107, %1522, %2005, %2488, %2490
  %2494 = phi i32 [ 1, %2490 ], [ 0, %2488 ], [ 0, %2005 ], [ 0, %1522 ], [ 0, %1107 ], [ 0, %596 ]
  ret i32 %2494
}

; Function Attrs: nounwind ssp uwtable
define internal fastcc i32 @_ZN6tflite3ops7builtin11comparisons12_GLOBAL__N_123ComparisonPrepareCommonEP13TfLiteContextP10TfLiteNodeb(%struct.TfLiteContext*, %struct.TfLiteNode* nocapture readonly, i1 zeroext) unnamed_addr #1 {
  %4 = alloca %struct.TfLiteIntArray*, align 8
  %5 = getelementptr inbounds %struct.TfLiteNode, %struct.TfLiteNode* %1, i64 0, i32 0
  %6 = load %struct.TfLiteIntArray*, %struct.TfLiteIntArray** %5, align 8
  %7 = getelementptr inbounds %struct.TfLiteIntArray, %struct.TfLiteIntArray* %6, i64 0, i32 0
  %8 = load i32, i32* %7, align 4
  %9 = icmp eq i32 %8, 2
  br i1 %9, label %13, label %10

10:                                               ; preds = %3
  %11 = getelementptr inbounds %struct.TfLiteContext, %struct.TfLiteContext* %0, i64 0, i32 5
  %12 = load void (%struct.TfLiteContext*, i8*, ...)*, void (%struct.TfLiteContext*, i8*, ...)** %11, align 8
  tail call void (%struct.TfLiteContext*, i8*, ...) %12(%struct.TfLiteContext* %0, i8* getelementptr inbounds ([26 x i8], [26 x i8]* @.str, i64 0, i64 0), i8* getelementptr inbounds ([68 x i8], [68 x i8]* @.str.4, i64 0, i64 0), i32 41, i8* getelementptr inbounds ([16 x i8], [16 x i8]* @.str.5, i64 0, i64 0), i8* getelementptr inbounds ([2 x i8], [2 x i8]* @.str.6, i64 0, i64 0), i32 %8, i32 2) #8
  br label %91

13:                                               ; preds = %3
  %14 = getelementptr inbounds %struct.TfLiteNode, %struct.TfLiteNode* %1, i64 0, i32 1
  %15 = load %struct.TfLiteIntArray*, %struct.TfLiteIntArray** %14, align 8
  %16 = getelementptr inbounds %struct.TfLiteIntArray, %struct.TfLiteIntArray* %15, i64 0, i32 0
  %17 = load i32, i32* %16, align 4
  %18 = icmp eq i32 %17, 1
  br i1 %18, label %22, label %19

19:                                               ; preds = %13
  %20 = getelementptr inbounds %struct.TfLiteContext, %struct.TfLiteContext* %0, i64 0, i32 5
  %21 = load void (%struct.TfLiteContext*, i8*, ...)*, void (%struct.TfLiteContext*, i8*, ...)** %20, align 8
  tail call void (%struct.TfLiteContext*, i8*, ...) %21(%struct.TfLiteContext* %0, i8* getelementptr inbounds ([26 x i8], [26 x i8]* @.str, i64 0, i64 0), i8* getelementptr inbounds ([68 x i8], [68 x i8]* @.str.4, i64 0, i64 0), i32 42, i8* getelementptr inbounds ([17 x i8], [17 x i8]* @.str.7, i64 0, i64 0), i8* getelementptr inbounds ([2 x i8], [2 x i8]* @.str.8, i64 0, i64 0), i32 %17, i32 1) #8
  br label %91

22:                                               ; preds = %13
  %23 = getelementptr inbounds %struct.TfLiteIntArray, %struct.TfLiteIntArray* %6, i64 0, i32 1, i64 0
  %24 = load i32, i32* %23, align 4
  %25 = icmp slt i32 %24, 0
  br i1 %25, label %31, label %26

26:                                               ; preds = %22
  %27 = getelementptr inbounds %struct.TfLiteContext, %struct.TfLiteContext* %0, i64 0, i32 2
  %28 = load %struct.TfLiteTensor*, %struct.TfLiteTensor** %27, align 8
  %29 = sext i32 %24 to i64
  %30 = getelementptr inbounds %struct.TfLiteTensor, %struct.TfLiteTensor* %28, i64 %29
  br label %31

31:                                               ; preds = %22, %26
  %32 = phi %struct.TfLiteTensor* [ %30, %26 ], [ null, %22 ]
  %33 = getelementptr inbounds %struct.TfLiteIntArray, %struct.TfLiteIntArray* %6, i64 0, i32 1, i64 1
  %34 = load i32, i32* %33, align 4
  %35 = icmp slt i32 %34, 0
  br i1 %35, label %41, label %36

36:                                               ; preds = %31
  %37 = getelementptr inbounds %struct.TfLiteContext, %struct.TfLiteContext* %0, i64 0, i32 2
  %38 = load %struct.TfLiteTensor*, %struct.TfLiteTensor** %37, align 8
  %39 = sext i32 %34 to i64
  %40 = getelementptr inbounds %struct.TfLiteTensor, %struct.TfLiteTensor* %38, i64 %39
  br label %41

41:                                               ; preds = %31, %36
  %42 = phi %struct.TfLiteTensor* [ %40, %36 ], [ null, %31 ]
  %43 = getelementptr inbounds %struct.TfLiteIntArray, %struct.TfLiteIntArray* %15, i64 0, i32 1, i64 0
  %44 = load i32, i32* %43, align 4
  %45 = icmp slt i32 %44, 0
  br i1 %45, label %51, label %46

46:                                               ; preds = %41
  %47 = getelementptr inbounds %struct.TfLiteContext, %struct.TfLiteContext* %0, i64 0, i32 2
  %48 = load %struct.TfLiteTensor*, %struct.TfLiteTensor** %47, align 8
  %49 = sext i32 %44 to i64
  %50 = getelementptr inbounds %struct.TfLiteTensor, %struct.TfLiteTensor* %48, i64 %49
  br label %51

51:                                               ; preds = %41, %46
  %52 = phi %struct.TfLiteTensor* [ %50, %46 ], [ null, %41 ]
  %53 = getelementptr inbounds %struct.TfLiteTensor, %struct.TfLiteTensor* %32, i64 0, i32 0
  %54 = load i32, i32* %53, align 8
  %55 = xor i1 %2, true
  %56 = icmp eq i32 %54, 5
  %57 = and i1 %56, %55
  br i1 %57, label %58, label %61

58:                                               ; preds = %51
  %59 = getelementptr inbounds %struct.TfLiteContext, %struct.TfLiteContext* %0, i64 0, i32 5
  %60 = load void (%struct.TfLiteContext*, i8*, ...)*, void (%struct.TfLiteContext*, i8*, ...)** %59, align 8
  tail call void (%struct.TfLiteContext*, i8*, ...) %60(%struct.TfLiteContext* %0, i8* getelementptr inbounds ([23 x i8], [23 x i8]* @.str.9, i64 0, i64 0), i8* getelementptr inbounds ([68 x i8], [68 x i8]* @.str.4, i64 0, i64 0), i32 50, i8* getelementptr inbounds ([30 x i8], [30 x i8]* @.str.10, i64 0, i64 0)) #8
  br label %91

61:                                               ; preds = %51
  %62 = getelementptr inbounds %struct.TfLiteTensor, %struct.TfLiteTensor* %42, i64 0, i32 0
  %63 = load i32, i32* %62, align 8
  %64 = icmp eq i32 %54, %63
  br i1 %64, label %71, label %65

65:                                               ; preds = %61
  %66 = getelementptr inbounds %struct.TfLiteContext, %struct.TfLiteContext* %0, i64 0, i32 5
  %67 = load void (%struct.TfLiteContext*, i8*, ...)*, void (%struct.TfLiteContext*, i8*, ...)** %66, align 8
  %68 = tail call i8* @TfLiteTypeGetName(i32 %54) #8
  %69 = load i32, i32* %62, align 8
  %70 = tail call i8* @TfLiteTypeGetName(i32 %69) #8
  tail call void (%struct.TfLiteContext*, i8*, ...) %67(%struct.TfLiteContext* %0, i8* getelementptr inbounds ([26 x i8], [26 x i8]* @.str.11, i64 0, i64 0), i8* getelementptr inbounds ([68 x i8], [68 x i8]* @.str.4, i64 0, i64 0), i32 53, i8* getelementptr inbounds ([13 x i8], [13 x i8]* @.str.12, i64 0, i64 0), i8* getelementptr inbounds ([13 x i8], [13 x i8]* @.str.13, i64 0, i64 0), i8* %68, i8* %70) #8
  br label %91

71:                                               ; preds = %61
  %72 = getelementptr inbounds %struct.TfLiteTensor, %struct.TfLiteTensor* %52, i64 0, i32 0
  store i32 6, i32* %72, align 8
  %73 = tail call zeroext i1 @_ZN6tflite14HaveSameShapesEPK12TfLiteTensorS2_(%struct.TfLiteTensor* %32, %struct.TfLiteTensor* %42) #8
  %74 = bitcast %struct.TfLiteIntArray** %4 to i8*
  call void @llvm.lifetime.start.p0i8(i64 8, i8* nonnull %74) #8
  store %struct.TfLiteIntArray* null, %struct.TfLiteIntArray** %4, align 8
  br i1 %73, label %80, label %75

75:                                               ; preds = %71
  %76 = call i32 @_ZN6tflite26CalculateShapeForBroadcastEP13TfLiteContextPK12TfLiteTensorS4_PP14TfLiteIntArray(%struct.TfLiteContext* %0, %struct.TfLiteTensor* %32, %struct.TfLiteTensor* %42, %struct.TfLiteIntArray** nonnull %4) #8
  %77 = icmp eq i32 %76, 0
  br i1 %77, label %78, label %89

78:                                               ; preds = %75
  %79 = load %struct.TfLiteIntArray*, %struct.TfLiteIntArray** %4, align 8
  br label %84

80:                                               ; preds = %71
  %81 = getelementptr inbounds %struct.TfLiteTensor, %struct.TfLiteTensor* %32, i64 0, i32 2
  %82 = load %struct.TfLiteIntArray*, %struct.TfLiteIntArray** %81, align 8
  %83 = tail call %struct.TfLiteIntArray* @TfLiteIntArrayCopy(%struct.TfLiteIntArray* %82) #8
  store %struct.TfLiteIntArray* %83, %struct.TfLiteIntArray** %4, align 8
  br label %84

84:                                               ; preds = %78, %80
  %85 = phi %struct.TfLiteIntArray* [ %79, %78 ], [ %83, %80 ]
  %86 = getelementptr inbounds %struct.TfLiteContext, %struct.TfLiteContext* %0, i64 0, i32 4
  %87 = load i32 (%struct.TfLiteContext*, %struct.TfLiteTensor*, %struct.TfLiteIntArray*)*, i32 (%struct.TfLiteContext*, %struct.TfLiteTensor*, %struct.TfLiteIntArray*)** %86, align 8
  %88 = call i32 %87(%struct.TfLiteContext* %0, %struct.TfLiteTensor* %52, %struct.TfLiteIntArray* %85) #8
  br label %89

89:                                               ; preds = %75, %84
  %90 = phi i32 [ %88, %84 ], [ %76, %75 ]
  call void @llvm.lifetime.end.p0i8(i64 8, i8* nonnull %74) #8
  br label %91

91:                                               ; preds = %58, %65, %89, %19, %10
  %92 = phi i32 [ 1, %10 ], [ 1, %19 ], [ 1, %65 ], [ %90, %89 ], [ 1, %58 ]
  ret i32 %92
}

; Function Attrs: argmemonly nounwind
declare void @llvm.lifetime.start.p0i8(i64 immarg, i8* nocapture) #2

declare i8* @TfLiteTypeGetName(i32) local_unnamed_addr #3

declare zeroext i1 @_ZN6tflite14HaveSameShapesEPK12TfLiteTensorS2_(%struct.TfLiteTensor*, %struct.TfLiteTensor*) local_unnamed_addr #3

declare i32 @_ZN6tflite26CalculateShapeForBroadcastEP13TfLiteContextPK12TfLiteTensorS4_PP14TfLiteIntArray(%struct.TfLiteContext*, %struct.TfLiteTensor*, %struct.TfLiteTensor*, %struct.TfLiteIntArray**) local_unnamed_addr #3

; Function Attrs: argmemonly nounwind
declare void @llvm.lifetime.end.p0i8(i64 immarg, i8* nocapture) #2

declare %struct.TfLiteIntArray* @TfLiteIntArrayCopy(%struct.TfLiteIntArray*) local_unnamed_addr #3

; Function Attrs: nounwind ssp uwtable
define internal fastcc void @_ZN6tflite3ops7builtin11comparisons12_GLOBAL__N_116ComparisonStringEPFbRKNS_9StringRefES6_EPK12TfLiteTensorSB_PS9_b(i1 (%"struct.tflite::StringRef"*, %"struct.tflite::StringRef"*)*, %struct.TfLiteTensor*, %struct.TfLiteTensor*, %struct.TfLiteTensor* readonly, i1 zeroext) unnamed_addr #1 {
  %6 = alloca %"struct.tflite::StringRef", align 8
  %7 = alloca %"struct.tflite::StringRef", align 8
  %8 = alloca %"class.tflite::RuntimeShape", align 8
  %9 = alloca %"class.tflite::RuntimeShape", align 8
  %10 = alloca %"class.tflite::RuntimeShape", align 8
  %11 = alloca %"class.tflite::RuntimeShape", align 8
  %12 = alloca %"class.tflite::RuntimeShape", align 8
  %13 = alloca %"class.tflite::RuntimeShape", align 8
  %14 = icmp eq %struct.TfLiteTensor* %3, null
  br i1 %14, label %19, label %15

15:                                               ; preds = %5
  %16 = getelementptr inbounds %struct.TfLiteTensor, %struct.TfLiteTensor* %3, i64 0, i32 1
  %17 = bitcast %union.TfLitePtrUnion* %16 to i8**
  %18 = load i8*, i8** %17, align 8
  br label %19

19:                                               ; preds = %5, %15
  %20 = phi i8* [ %18, %15 ], [ null, %5 ]
  br i1 %4, label %21, label %140

21:                                               ; preds = %19
  %22 = bitcast %"class.tflite::RuntimeShape"* %8 to i8*
  call void @llvm.lifetime.start.p0i8(i64 32, i8* nonnull %22) #8
  %23 = icmp eq %struct.TfLiteTensor* %1, null
  br i1 %23, label %24, label %26

24:                                               ; preds = %21
  %25 = getelementptr inbounds %"class.tflite::RuntimeShape", %"class.tflite::RuntimeShape"* %8, i64 0, i32 0
  store i32 0, i32* %25, align 8, !alias.scope !818
  br label %51

26:                                               ; preds = %21
  %27 = getelementptr inbounds %struct.TfLiteTensor, %struct.TfLiteTensor* %1, i64 0, i32 2
  %28 = load %struct.TfLiteIntArray*, %struct.TfLiteIntArray** %27, align 8, !noalias !818
  %29 = getelementptr inbounds %struct.TfLiteIntArray, %struct.TfLiteIntArray* %28, i64 0, i32 0
  %30 = load i32, i32* %29, align 4, !noalias !818
  %31 = getelementptr inbounds %struct.TfLiteIntArray, %struct.TfLiteIntArray* %28, i64 0, i32 1, i64 0
  %32 = getelementptr inbounds %"class.tflite::RuntimeShape", %"class.tflite::RuntimeShape"* %8, i64 0, i32 0
  store i32 %30, i32* %32, align 8, !alias.scope !818
  %33 = icmp sgt i32 %30, 5
  br i1 %33, label %34, label %41

34:                                               ; preds = %26
  %35 = sext i32 %30 to i64
  %36 = shl nsw i64 %35, 2
  %37 = tail call i8* @_Znam(i64 %36) #9, !noalias !818
  %38 = getelementptr inbounds %"class.tflite::RuntimeShape", %"class.tflite::RuntimeShape"* %8, i64 0, i32 1, i32 0
  %39 = bitcast i32** %38 to i8**
  store i8* %37, i8** %39, align 8, !alias.scope !818
  %40 = bitcast i8* %37 to i32*
  br label %46

41:                                               ; preds = %26
  %42 = getelementptr inbounds %"class.tflite::RuntimeShape", %"class.tflite::RuntimeShape"* %8, i64 0, i32 1
  %43 = bitcast %union.anon* %42 to i32*
  %44 = sext i32 %30 to i64
  %45 = shl nsw i64 %44, 2
  br label %46

46:                                               ; preds = %41, %34
  %47 = phi i64 [ %36, %34 ], [ %45, %41 ]
  %48 = phi i32* [ %40, %34 ], [ %43, %41 ]
  %49 = bitcast i32* %48 to i8*
  %50 = bitcast i32* %31 to i8*
  call void @llvm.memcpy.p0i8.p0i8.i64(i8* align 4 %49, i8* align 4 %50, i64 %47, i1 false) #8
  br label %51

51:                                               ; preds = %24, %46
  %52 = bitcast %"class.tflite::RuntimeShape"* %9 to i8*
  call void @llvm.lifetime.start.p0i8(i64 32, i8* nonnull %52) #8
  %53 = icmp eq %struct.TfLiteTensor* %2, null
  br i1 %53, label %54, label %56

54:                                               ; preds = %51
  %55 = getelementptr inbounds %"class.tflite::RuntimeShape", %"class.tflite::RuntimeShape"* %9, i64 0, i32 0
  store i32 0, i32* %55, align 8, !alias.scope !821
  br label %81

56:                                               ; preds = %51
  %57 = getelementptr inbounds %struct.TfLiteTensor, %struct.TfLiteTensor* %2, i64 0, i32 2
  %58 = load %struct.TfLiteIntArray*, %struct.TfLiteIntArray** %57, align 8, !noalias !821
  %59 = getelementptr inbounds %struct.TfLiteIntArray, %struct.TfLiteIntArray* %58, i64 0, i32 0
  %60 = load i32, i32* %59, align 4, !noalias !821
  %61 = getelementptr inbounds %struct.TfLiteIntArray, %struct.TfLiteIntArray* %58, i64 0, i32 1, i64 0
  %62 = getelementptr inbounds %"class.tflite::RuntimeShape", %"class.tflite::RuntimeShape"* %9, i64 0, i32 0
  store i32 %60, i32* %62, align 8, !alias.scope !821
  %63 = icmp sgt i32 %60, 5
  br i1 %63, label %64, label %71

64:                                               ; preds = %56
  %65 = sext i32 %60 to i64
  %66 = shl nsw i64 %65, 2
  %67 = tail call i8* @_Znam(i64 %66) #9, !noalias !821
  %68 = getelementptr inbounds %"class.tflite::RuntimeShape", %"class.tflite::RuntimeShape"* %9, i64 0, i32 1, i32 0
  %69 = bitcast i32** %68 to i8**
  store i8* %67, i8** %69, align 8, !alias.scope !821
  %70 = bitcast i8* %67 to i32*
  br label %76

71:                                               ; preds = %56
  %72 = getelementptr inbounds %"class.tflite::RuntimeShape", %"class.tflite::RuntimeShape"* %9, i64 0, i32 1
  %73 = bitcast %union.anon* %72 to i32*
  %74 = sext i32 %60 to i64
  %75 = shl nsw i64 %74, 2
  br label %76

76:                                               ; preds = %71, %64
  %77 = phi i64 [ %66, %64 ], [ %75, %71 ]
  %78 = phi i32* [ %70, %64 ], [ %73, %71 ]
  %79 = bitcast i32* %78 to i8*
  %80 = bitcast i32* %61 to i8*
  call void @llvm.memcpy.p0i8.p0i8.i64(i8* align 4 %79, i8* align 4 %80, i64 %77, i1 false) #8
  br label %81

81:                                               ; preds = %54, %76
  %82 = bitcast %"class.tflite::RuntimeShape"* %10 to i8*
  call void @llvm.lifetime.start.p0i8(i64 32, i8* nonnull %82) #8
  br i1 %14, label %83, label %85

83:                                               ; preds = %81
  %84 = getelementptr inbounds %"class.tflite::RuntimeShape", %"class.tflite::RuntimeShape"* %10, i64 0, i32 0
  store i32 0, i32* %84, align 8, !alias.scope !824
  br label %110

85:                                               ; preds = %81
  %86 = getelementptr inbounds %struct.TfLiteTensor, %struct.TfLiteTensor* %3, i64 0, i32 2
  %87 = load %struct.TfLiteIntArray*, %struct.TfLiteIntArray** %86, align 8, !noalias !824
  %88 = getelementptr inbounds %struct.TfLiteIntArray, %struct.TfLiteIntArray* %87, i64 0, i32 0
  %89 = load i32, i32* %88, align 4, !noalias !824
  %90 = getelementptr inbounds %struct.TfLiteIntArray, %struct.TfLiteIntArray* %87, i64 0, i32 1, i64 0
  %91 = getelementptr inbounds %"class.tflite::RuntimeShape", %"class.tflite::RuntimeShape"* %10, i64 0, i32 0
  store i32 %89, i32* %91, align 8, !alias.scope !824
  %92 = icmp sgt i32 %89, 5
  br i1 %92, label %93, label %100

93:                                               ; preds = %85
  %94 = sext i32 %89 to i64
  %95 = shl nsw i64 %94, 2
  %96 = tail call i8* @_Znam(i64 %95) #9, !noalias !824
  %97 = getelementptr inbounds %"class.tflite::RuntimeShape", %"class.tflite::RuntimeShape"* %10, i64 0, i32 1, i32 0
  %98 = bitcast i32** %97 to i8**
  store i8* %96, i8** %98, align 8, !alias.scope !824
  %99 = bitcast i8* %96 to i32*
  br label %105

100:                                              ; preds = %85
  %101 = getelementptr inbounds %"class.tflite::RuntimeShape", %"class.tflite::RuntimeShape"* %10, i64 0, i32 1
  %102 = bitcast %union.anon* %101 to i32*
  %103 = sext i32 %89 to i64
  %104 = shl nsw i64 %103, 2
  br label %105

105:                                              ; preds = %100, %93
  %106 = phi i64 [ %95, %93 ], [ %104, %100 ]
  %107 = phi i32* [ %99, %93 ], [ %102, %100 ]
  %108 = bitcast i32* %107 to i8*
  %109 = bitcast i32* %90 to i8*
  call void @llvm.memcpy.p0i8.p0i8.i64(i8* align 4 %108, i8* align 4 %109, i64 %106, i1 false) #8
  br label %110

110:                                              ; preds = %83, %105
  call void @_ZN6tflite13reference_ops35BroadcastComparison4DSlowStringImplEPFbRKNS_9StringRefES3_ERKNS_12RuntimeShapeEPK12TfLiteTensorS8_SB_S8_Pb(i1 (%"struct.tflite::StringRef"*, %"struct.tflite::StringRef"*)* %0, %"class.tflite::RuntimeShape"* nonnull dereferenceable(32) %8, %struct.TfLiteTensor* %1, %"class.tflite::RuntimeShape"* nonnull dereferenceable(32) %9, %struct.TfLiteTensor* %2, %"class.tflite::RuntimeShape"* nonnull dereferenceable(32) %10, i8* %20)
  %111 = getelementptr inbounds %"class.tflite::RuntimeShape", %"class.tflite::RuntimeShape"* %10, i64 0, i32 0
  %112 = load i32, i32* %111, align 8
  %113 = icmp sgt i32 %112, 5
  br i1 %113, label %114, label %120

114:                                              ; preds = %110
  %115 = getelementptr inbounds %"class.tflite::RuntimeShape", %"class.tflite::RuntimeShape"* %10, i64 0, i32 1, i32 0
  %116 = load i32*, i32** %115, align 8
  %117 = icmp eq i32* %116, null
  br i1 %117, label %120, label %118

118:                                              ; preds = %114
  %119 = bitcast i32* %116 to i8*
  call void @_ZdaPv(i8* %119) #9
  br label %120

120:                                              ; preds = %110, %114, %118
  call void @llvm.lifetime.end.p0i8(i64 32, i8* nonnull %82) #8
  %121 = getelementptr inbounds %"class.tflite::RuntimeShape", %"class.tflite::RuntimeShape"* %9, i64 0, i32 0
  %122 = load i32, i32* %121, align 8
  %123 = icmp sgt i32 %122, 5
  br i1 %123, label %124, label %130

124:                                              ; preds = %120
  %125 = getelementptr inbounds %"class.tflite::RuntimeShape", %"class.tflite::RuntimeShape"* %9, i64 0, i32 1, i32 0
  %126 = load i32*, i32** %125, align 8
  %127 = icmp eq i32* %126, null
  br i1 %127, label %130, label %128

128:                                              ; preds = %124
  %129 = bitcast i32* %126 to i8*
  call void @_ZdaPv(i8* %129) #9
  br label %130

130:                                              ; preds = %120, %124, %128
  call void @llvm.lifetime.end.p0i8(i64 32, i8* nonnull %52) #8
  %131 = getelementptr inbounds %"class.tflite::RuntimeShape", %"class.tflite::RuntimeShape"* %8, i64 0, i32 0
  %132 = load i32, i32* %131, align 8
  %133 = icmp sgt i32 %132, 5
  br i1 %133, label %134, label %390

134:                                              ; preds = %130
  %135 = getelementptr inbounds %"class.tflite::RuntimeShape", %"class.tflite::RuntimeShape"* %8, i64 0, i32 1, i32 0
  %136 = load i32*, i32** %135, align 8
  %137 = icmp eq i32* %136, null
  br i1 %137, label %390, label %138

138:                                              ; preds = %134
  %139 = bitcast i32* %136 to i8*
  call void @_ZdaPv(i8* %139) #9
  br label %390

140:                                              ; preds = %19
  %141 = bitcast %"class.tflite::RuntimeShape"* %11 to i8*
  call void @llvm.lifetime.start.p0i8(i64 32, i8* nonnull %141) #8
  %142 = icmp eq %struct.TfLiteTensor* %1, null
  br i1 %142, label %143, label %145

143:                                              ; preds = %140
  %144 = getelementptr inbounds %"class.tflite::RuntimeShape", %"class.tflite::RuntimeShape"* %11, i64 0, i32 0
  store i32 0, i32* %144, align 8, !alias.scope !827
  br label %170

145:                                              ; preds = %140
  %146 = getelementptr inbounds %struct.TfLiteTensor, %struct.TfLiteTensor* %1, i64 0, i32 2
  %147 = load %struct.TfLiteIntArray*, %struct.TfLiteIntArray** %146, align 8, !noalias !827
  %148 = getelementptr inbounds %struct.TfLiteIntArray, %struct.TfLiteIntArray* %147, i64 0, i32 0
  %149 = load i32, i32* %148, align 4, !noalias !827
  %150 = getelementptr inbounds %struct.TfLiteIntArray, %struct.TfLiteIntArray* %147, i64 0, i32 1, i64 0
  %151 = getelementptr inbounds %"class.tflite::RuntimeShape", %"class.tflite::RuntimeShape"* %11, i64 0, i32 0
  store i32 %149, i32* %151, align 8, !alias.scope !827
  %152 = icmp sgt i32 %149, 5
  br i1 %152, label %153, label %160

153:                                              ; preds = %145
  %154 = sext i32 %149 to i64
  %155 = shl nsw i64 %154, 2
  %156 = tail call i8* @_Znam(i64 %155) #9, !noalias !827
  %157 = getelementptr inbounds %"class.tflite::RuntimeShape", %"class.tflite::RuntimeShape"* %11, i64 0, i32 1, i32 0
  %158 = bitcast i32** %157 to i8**
  store i8* %156, i8** %158, align 8, !alias.scope !827
  %159 = bitcast i8* %156 to i32*
  br label %165

160:                                              ; preds = %145
  %161 = getelementptr inbounds %"class.tflite::RuntimeShape", %"class.tflite::RuntimeShape"* %11, i64 0, i32 1
  %162 = bitcast %union.anon* %161 to i32*
  %163 = sext i32 %149 to i64
  %164 = shl nsw i64 %163, 2
  br label %165

165:                                              ; preds = %160, %153
  %166 = phi i64 [ %155, %153 ], [ %164, %160 ]
  %167 = phi i32* [ %159, %153 ], [ %162, %160 ]
  %168 = bitcast i32* %167 to i8*
  %169 = bitcast i32* %150 to i8*
  call void @llvm.memcpy.p0i8.p0i8.i64(i8* align 4 %168, i8* align 4 %169, i64 %166, i1 false) #8
  br label %170

170:                                              ; preds = %143, %165
  %171 = phi i32 [ 0, %143 ], [ %149, %165 ]
  %172 = bitcast %"class.tflite::RuntimeShape"* %12 to i8*
  call void @llvm.lifetime.start.p0i8(i64 32, i8* nonnull %172) #8
  %173 = icmp eq %struct.TfLiteTensor* %2, null
  br i1 %173, label %174, label %176

174:                                              ; preds = %170
  %175 = getelementptr inbounds %"class.tflite::RuntimeShape", %"class.tflite::RuntimeShape"* %12, i64 0, i32 0
  store i32 0, i32* %175, align 8, !alias.scope !830
  br label %201

176:                                              ; preds = %170
  %177 = getelementptr inbounds %struct.TfLiteTensor, %struct.TfLiteTensor* %2, i64 0, i32 2
  %178 = load %struct.TfLiteIntArray*, %struct.TfLiteIntArray** %177, align 8, !noalias !830
  %179 = getelementptr inbounds %struct.TfLiteIntArray, %struct.TfLiteIntArray* %178, i64 0, i32 0
  %180 = load i32, i32* %179, align 4, !noalias !830
  %181 = getelementptr inbounds %struct.TfLiteIntArray, %struct.TfLiteIntArray* %178, i64 0, i32 1, i64 0
  %182 = getelementptr inbounds %"class.tflite::RuntimeShape", %"class.tflite::RuntimeShape"* %12, i64 0, i32 0
  store i32 %180, i32* %182, align 8, !alias.scope !830
  %183 = icmp sgt i32 %180, 5
  br i1 %183, label %184, label %191

184:                                              ; preds = %176
  %185 = sext i32 %180 to i64
  %186 = shl nsw i64 %185, 2
  %187 = tail call i8* @_Znam(i64 %186) #9, !noalias !830
  %188 = getelementptr inbounds %"class.tflite::RuntimeShape", %"class.tflite::RuntimeShape"* %12, i64 0, i32 1, i32 0
  %189 = bitcast i32** %188 to i8**
  store i8* %187, i8** %189, align 8, !alias.scope !830
  %190 = bitcast i8* %187 to i32*
  br label %196

191:                                              ; preds = %176
  %192 = getelementptr inbounds %"class.tflite::RuntimeShape", %"class.tflite::RuntimeShape"* %12, i64 0, i32 1
  %193 = bitcast %union.anon* %192 to i32*
  %194 = sext i32 %180 to i64
  %195 = shl nsw i64 %194, 2
  br label %196

196:                                              ; preds = %191, %184
  %197 = phi i64 [ %186, %184 ], [ %195, %191 ]
  %198 = phi i32* [ %190, %184 ], [ %193, %191 ]
  %199 = bitcast i32* %198 to i8*
  %200 = bitcast i32* %181 to i8*
  call void @llvm.memcpy.p0i8.p0i8.i64(i8* align 4 %199, i8* align 4 %200, i64 %197, i1 false) #8
  br label %201

201:                                              ; preds = %174, %196
  %202 = phi i32 [ 0, %174 ], [ %180, %196 ]
  %203 = bitcast %"class.tflite::RuntimeShape"* %13 to i8*
  call void @llvm.lifetime.start.p0i8(i64 32, i8* nonnull %203) #8
  br i1 %14, label %204, label %206

204:                                              ; preds = %201
  %205 = getelementptr inbounds %"class.tflite::RuntimeShape", %"class.tflite::RuntimeShape"* %13, i64 0, i32 0
  store i32 0, i32* %205, align 8, !alias.scope !833
  br label %231

206:                                              ; preds = %201
  %207 = getelementptr inbounds %struct.TfLiteTensor, %struct.TfLiteTensor* %3, i64 0, i32 2
  %208 = load %struct.TfLiteIntArray*, %struct.TfLiteIntArray** %207, align 8, !noalias !833
  %209 = getelementptr inbounds %struct.TfLiteIntArray, %struct.TfLiteIntArray* %208, i64 0, i32 0
  %210 = load i32, i32* %209, align 4, !noalias !833
  %211 = getelementptr inbounds %struct.TfLiteIntArray, %struct.TfLiteIntArray* %208, i64 0, i32 1, i64 0
  %212 = getelementptr inbounds %"class.tflite::RuntimeShape", %"class.tflite::RuntimeShape"* %13, i64 0, i32 0
  store i32 %210, i32* %212, align 8, !alias.scope !833
  %213 = icmp sgt i32 %210, 5
  br i1 %213, label %214, label %221

214:                                              ; preds = %206
  %215 = sext i32 %210 to i64
  %216 = shl nsw i64 %215, 2
  %217 = tail call i8* @_Znam(i64 %216) #9, !noalias !833
  %218 = getelementptr inbounds %"class.tflite::RuntimeShape", %"class.tflite::RuntimeShape"* %13, i64 0, i32 1, i32 0
  %219 = bitcast i32** %218 to i8**
  store i8* %217, i8** %219, align 8, !alias.scope !833
  %220 = bitcast i8* %217 to i32*
  br label %226

221:                                              ; preds = %206
  %222 = getelementptr inbounds %"class.tflite::RuntimeShape", %"class.tflite::RuntimeShape"* %13, i64 0, i32 1
  %223 = bitcast %union.anon* %222 to i32*
  %224 = sext i32 %210 to i64
  %225 = shl nsw i64 %224, 2
  br label %226

226:                                              ; preds = %221, %214
  %227 = phi i64 [ %216, %214 ], [ %225, %221 ]
  %228 = phi i32* [ %220, %214 ], [ %223, %221 ]
  %229 = bitcast i32* %228 to i8*
  %230 = bitcast i32* %211 to i8*
  call void @llvm.memcpy.p0i8.p0i8.i64(i8* align 4 %229, i8* align 4 %230, i64 %227, i1 false) #8
  br label %231

231:                                              ; preds = %204, %226
  %232 = phi i32 [ 0, %204 ], [ %210, %226 ]
  %233 = getelementptr inbounds %"class.tflite::RuntimeShape", %"class.tflite::RuntimeShape"* %11, i64 0, i32 1
  %234 = icmp sgt i32 %171, 5
  br i1 %234, label %235, label %238

235:                                              ; preds = %231
  %236 = getelementptr inbounds %union.anon, %union.anon* %233, i64 0, i32 0
  %237 = load i32*, i32** %236, align 8
  br label %241

238:                                              ; preds = %231
  %239 = bitcast %union.anon* %233 to i32*
  %240 = icmp sgt i32 %171, 0
  br i1 %240, label %241, label %345

241:                                              ; preds = %238, %235
  %242 = phi i32* [ %237, %235 ], [ %239, %238 ]
  %243 = zext i32 %171 to i64
  %244 = icmp ult i32 %171, 8
  br i1 %244, label %330, label %245

245:                                              ; preds = %241
  %246 = and i64 %243, 4294967288
  %247 = add nsw i64 %246, -8
  %248 = lshr exact i64 %247, 3
  %249 = add nuw nsw i64 %248, 1
  %250 = and i64 %249, 3
  %251 = icmp ult i64 %247, 24
  br i1 %251, label %297, label %252

252:                                              ; preds = %245
  %253 = sub nsw i64 %249, %250
  br label %254

254:                                              ; preds = %254, %252
  %255 = phi i64 [ 0, %252 ], [ %294, %254 ]
  %256 = phi <4 x i32> [ <i32 1, i32 1, i32 1, i32 1>, %252 ], [ %292, %254 ]
  %257 = phi <4 x i32> [ <i32 1, i32 1, i32 1, i32 1>, %252 ], [ %293, %254 ]
  %258 = phi i64 [ %253, %252 ], [ %295, %254 ]
  %259 = getelementptr inbounds i32, i32* %242, i64 %255
  %260 = bitcast i32* %259 to <4 x i32>*
  %261 = load <4 x i32>, <4 x i32>* %260, align 4
  %262 = getelementptr inbounds i32, i32* %259, i64 4
  %263 = bitcast i32* %262 to <4 x i32>*
  %264 = load <4 x i32>, <4 x i32>* %263, align 4
  %265 = mul nsw <4 x i32> %261, %256
  %266 = mul nsw <4 x i32> %264, %257
  %267 = or i64 %255, 8
  %268 = getelementptr inbounds i32, i32* %242, i64 %267
  %269 = bitcast i32* %268 to <4 x i32>*
  %270 = load <4 x i32>, <4 x i32>* %269, align 4
  %271 = getelementptr inbounds i32, i32* %268, i64 4
  %272 = bitcast i32* %271 to <4 x i32>*
  %273 = load <4 x i32>, <4 x i32>* %272, align 4
  %274 = mul nsw <4 x i32> %270, %265
  %275 = mul nsw <4 x i32> %273, %266
  %276 = or i64 %255, 16
  %277 = getelementptr inbounds i32, i32* %242, i64 %276
  %278 = bitcast i32* %277 to <4 x i32>*
  %279 = load <4 x i32>, <4 x i32>* %278, align 4
  %280 = getelementptr inbounds i32, i32* %277, i64 4
  %281 = bitcast i32* %280 to <4 x i32>*
  %282 = load <4 x i32>, <4 x i32>* %281, align 4
  %283 = mul nsw <4 x i32> %279, %274
  %284 = mul nsw <4 x i32> %282, %275
  %285 = or i64 %255, 24
  %286 = getelementptr inbounds i32, i32* %242, i64 %285
  %287 = bitcast i32* %286 to <4 x i32>*
  %288 = load <4 x i32>, <4 x i32>* %287, align 4
  %289 = getelementptr inbounds i32, i32* %286, i64 4
  %290 = bitcast i32* %289 to <4 x i32>*
  %291 = load <4 x i32>, <4 x i32>* %290, align 4
  %292 = mul nsw <4 x i32> %288, %283
  %293 = mul nsw <4 x i32> %291, %284
  %294 = add i64 %255, 32
  %295 = add i64 %258, -4
  %296 = icmp eq i64 %295, 0
  br i1 %296, label %297, label %254, !llvm.loop !836

297:                                              ; preds = %254, %245
  %298 = phi <4 x i32> [ undef, %245 ], [ %292, %254 ]
  %299 = phi <4 x i32> [ undef, %245 ], [ %293, %254 ]
  %300 = phi i64 [ 0, %245 ], [ %294, %254 ]
  %301 = phi <4 x i32> [ <i32 1, i32 1, i32 1, i32 1>, %245 ], [ %292, %254 ]
  %302 = phi <4 x i32> [ <i32 1, i32 1, i32 1, i32 1>, %245 ], [ %293, %254 ]
  %303 = icmp eq i64 %250, 0
  br i1 %303, label %320, label %304

304:                                              ; preds = %297, %304
  %305 = phi i64 [ %317, %304 ], [ %300, %297 ]
  %306 = phi <4 x i32> [ %315, %304 ], [ %301, %297 ]
  %307 = phi <4 x i32> [ %316, %304 ], [ %302, %297 ]
  %308 = phi i64 [ %318, %304 ], [ %250, %297 ]
  %309 = getelementptr inbounds i32, i32* %242, i64 %305
  %310 = bitcast i32* %309 to <4 x i32>*
  %311 = load <4 x i32>, <4 x i32>* %310, align 4
  %312 = getelementptr inbounds i32, i32* %309, i64 4
  %313 = bitcast i32* %312 to <4 x i32>*
  %314 = load <4 x i32>, <4 x i32>* %313, align 4
  %315 = mul nsw <4 x i32> %311, %306
  %316 = mul nsw <4 x i32> %314, %307
  %317 = add i64 %305, 8
  %318 = add i64 %308, -1
  %319 = icmp eq i64 %318, 0
  br i1 %319, label %320, label %304, !llvm.loop !837

320:                                              ; preds = %304, %297
  %321 = phi <4 x i32> [ %298, %297 ], [ %315, %304 ]
  %322 = phi <4 x i32> [ %299, %297 ], [ %316, %304 ]
  %323 = mul <4 x i32> %322, %321
  %324 = shufflevector <4 x i32> %323, <4 x i32> undef, <4 x i32> <i32 2, i32 3, i32 undef, i32 undef>
  %325 = mul <4 x i32> %323, %324
  %326 = shufflevector <4 x i32> %325, <4 x i32> undef, <4 x i32> <i32 1, i32 undef, i32 undef, i32 undef>
  %327 = mul <4 x i32> %325, %326
  %328 = extractelement <4 x i32> %327, i32 0
  %329 = icmp eq i64 %246, %243
  br i1 %329, label %341, label %330

330:                                              ; preds = %320, %241
  %331 = phi i64 [ 0, %241 ], [ %246, %320 ]
  %332 = phi i32 [ 1, %241 ], [ %328, %320 ]
  br label %333

333:                                              ; preds = %330, %333
  %334 = phi i64 [ %339, %333 ], [ %331, %330 ]
  %335 = phi i32 [ %338, %333 ], [ %332, %330 ]
  %336 = getelementptr inbounds i32, i32* %242, i64 %334
  %337 = load i32, i32* %336, align 4
  %338 = mul nsw i32 %337, %335
  %339 = add nuw nsw i64 %334, 1
  %340 = icmp eq i64 %339, %243
  br i1 %340, label %341, label %333, !llvm.loop !838

341:                                              ; preds = %333, %320
  %342 = phi i32 [ %328, %320 ], [ %338, %333 ]
  %343 = sext i32 %342 to i64
  %344 = icmp sgt i32 %342, 0
  br i1 %344, label %345, label %367

345:                                              ; preds = %341, %238
  %346 = phi i64 [ %343, %341 ], [ 1, %238 ]
  %347 = bitcast %"struct.tflite::StringRef"* %6 to i8*
  %348 = getelementptr inbounds %"struct.tflite::StringRef", %"struct.tflite::StringRef"* %6, i64 0, i32 0
  %349 = getelementptr inbounds %"struct.tflite::StringRef", %"struct.tflite::StringRef"* %6, i64 0, i32 1
  %350 = bitcast %"struct.tflite::StringRef"* %7 to i8*
  %351 = getelementptr inbounds %"struct.tflite::StringRef", %"struct.tflite::StringRef"* %7, i64 0, i32 0
  %352 = getelementptr inbounds %"struct.tflite::StringRef", %"struct.tflite::StringRef"* %7, i64 0, i32 1
  br label %353

353:                                              ; preds = %353, %345
  %354 = phi i64 [ 0, %345 ], [ %365, %353 ]
  call void @llvm.lifetime.start.p0i8(i64 16, i8* nonnull %347) #8
  call void @llvm.memset.p0i8.i64(i8* nonnull align 8 %347, i8 -86, i64 16, i1 false) #8
  %355 = trunc i64 %354 to i32
  %356 = call { i8*, i32 } @_ZN6tflite9GetStringEPK12TfLiteTensori(%struct.TfLiteTensor* %1, i32 %355) #8
  %357 = extractvalue { i8*, i32 } %356, 0
  store i8* %357, i8** %348, align 8
  %358 = extractvalue { i8*, i32 } %356, 1
  store i32 %358, i32* %349, align 8
  call void @llvm.lifetime.start.p0i8(i64 16, i8* nonnull %350) #8
  call void @llvm.memset.p0i8.i64(i8* nonnull align 8 %350, i8 -86, i64 16, i1 false) #8
  %359 = call { i8*, i32 } @_ZN6tflite9GetStringEPK12TfLiteTensori(%struct.TfLiteTensor* %2, i32 %355) #8
  %360 = extractvalue { i8*, i32 } %359, 0
  store i8* %360, i8** %351, align 8
  %361 = extractvalue { i8*, i32 } %359, 1
  store i32 %361, i32* %352, align 8
  %362 = call zeroext i1 %0(%"struct.tflite::StringRef"* nonnull dereferenceable(16) %6, %"struct.tflite::StringRef"* nonnull dereferenceable(16) %7) #8
  %363 = getelementptr inbounds i8, i8* %20, i64 %354
  %364 = zext i1 %362 to i8
  store i8 %364, i8* %363, align 1
  call void @llvm.lifetime.end.p0i8(i64 16, i8* nonnull %350) #8
  call void @llvm.lifetime.end.p0i8(i64 16, i8* nonnull %347) #8
  %365 = add nuw nsw i64 %354, 1
  %366 = icmp eq i64 %365, %346
  br i1 %366, label %367, label %353

367:                                              ; preds = %353, %341
  %368 = icmp sgt i32 %232, 5
  br i1 %368, label %369, label %375

369:                                              ; preds = %367
  %370 = getelementptr inbounds %"class.tflite::RuntimeShape", %"class.tflite::RuntimeShape"* %13, i64 0, i32 1, i32 0
  %371 = load i32*, i32** %370, align 8
  %372 = icmp eq i32* %371, null
  br i1 %372, label %375, label %373

373:                                              ; preds = %369
  %374 = bitcast i32* %371 to i8*
  call void @_ZdaPv(i8* %374) #9
  br label %375

375:                                              ; preds = %367, %369, %373
  call void @llvm.lifetime.end.p0i8(i64 32, i8* nonnull %203) #8
  %376 = icmp sgt i32 %202, 5
  br i1 %376, label %377, label %383

377:                                              ; preds = %375
  %378 = getelementptr inbounds %"class.tflite::RuntimeShape", %"class.tflite::RuntimeShape"* %12, i64 0, i32 1, i32 0
  %379 = load i32*, i32** %378, align 8
  %380 = icmp eq i32* %379, null
  br i1 %380, label %383, label %381

381:                                              ; preds = %377
  %382 = bitcast i32* %379 to i8*
  call void @_ZdaPv(i8* %382) #9
  br label %383

383:                                              ; preds = %375, %377, %381
  call void @llvm.lifetime.end.p0i8(i64 32, i8* nonnull %172) #8
  br i1 %234, label %384, label %390

384:                                              ; preds = %383
  %385 = getelementptr inbounds %"class.tflite::RuntimeShape", %"class.tflite::RuntimeShape"* %11, i64 0, i32 1, i32 0
  %386 = load i32*, i32** %385, align 8
  %387 = icmp eq i32* %386, null
  br i1 %387, label %390, label %388

388:                                              ; preds = %384
  %389 = bitcast i32* %386 to i8*
  call void @_ZdaPv(i8* %389) #9
  br label %390

390:                                              ; preds = %388, %384, %383, %138, %134, %130
  %391 = phi i8* [ %22, %130 ], [ %22, %134 ], [ %22, %138 ], [ %141, %383 ], [ %141, %384 ], [ %141, %388 ]
  call void @llvm.lifetime.end.p0i8(i64 32, i8* nonnull %391) #8
  ret void
}

; Function Attrs: inlinehint nounwind ssp uwtable
define linkonce_odr hidden zeroext i1 @_ZN6tflite13reference_ops16StringRefEqualFnERKNS_9StringRefES3_(%"struct.tflite::StringRef"* dereferenceable(16), %"struct.tflite::StringRef"* dereferenceable(16)) #4 comdat {
  %3 = getelementptr inbounds %"struct.tflite::StringRef", %"struct.tflite::StringRef"* %0, i64 0, i32 1
  %4 = load i32, i32* %3, align 8
  %5 = getelementptr inbounds %"struct.tflite::StringRef", %"struct.tflite::StringRef"* %1, i64 0, i32 1
  %6 = load i32, i32* %5, align 8
  %7 = icmp eq i32 %4, %6
  br i1 %7, label %8, label %26

8:                                                ; preds = %2
  %9 = icmp sgt i32 %4, 0
  br i1 %9, label %10, label %26

10:                                               ; preds = %8
  %11 = getelementptr inbounds %"struct.tflite::StringRef", %"struct.tflite::StringRef"* %0, i64 0, i32 0
  %12 = load i8*, i8** %11, align 8
  %13 = getelementptr inbounds %"struct.tflite::StringRef", %"struct.tflite::StringRef"* %1, i64 0, i32 0
  %14 = load i8*, i8** %13, align 8
  %15 = zext i32 %4 to i64
  br label %18

16:                                               ; preds = %18
  %17 = icmp eq i64 %25, %15
  br i1 %17, label %26, label %18

18:                                               ; preds = %16, %10
  %19 = phi i64 [ 0, %10 ], [ %25, %16 ]
  %20 = getelementptr inbounds i8, i8* %12, i64 %19
  %21 = load i8, i8* %20, align 1
  %22 = getelementptr inbounds i8, i8* %14, i64 %19
  %23 = load i8, i8* %22, align 1
  %24 = icmp eq i8 %21, %23
  %25 = add nuw nsw i64 %19, 1
  br i1 %24, label %16, label %26

26:                                               ; preds = %18, %16, %8, %2
  %27 = phi i1 [ false, %2 ], [ true, %8 ], [ false, %18 ], [ true, %16 ]
  ret i1 %27
}

; Function Attrs: argmemonly nounwind
declare void @llvm.memcpy.p0i8.p0i8.i64(i8* nocapture writeonly, i8* nocapture readonly, i64, i1 immarg) #2

; Function Attrs: inlinehint nounwind ssp uwtable
define linkonce_odr hidden void @_ZN6tflite13reference_ops29BroadcastComparison4DSlowImplIbXadL_ZNS0_7EqualFnIbEEbT_S3_EEEEvRKNS_16ComparisonParamsERKNS_12RuntimeShapeEPKS3_S9_SB_S9_Pb(%"struct.tflite::ComparisonParams"* dereferenceable(32), %"class.tflite::RuntimeShape"* dereferenceable(32), i8*, %"class.tflite::RuntimeShape"* dereferenceable(32), i8*, %"class.tflite::RuntimeShape"* dereferenceable(32), i8*) local_unnamed_addr #4 comdat {
  %8 = alloca %"struct.tflite::NdArrayDesc", align 4
  %9 = alloca %"struct.tflite::NdArrayDesc", align 4
  %10 = alloca %"struct.tflite::reference_ops::BroadcastComparison4DSlowCommon", align 8
  %11 = bitcast %"struct.tflite::reference_ops::BroadcastComparison4DSlowCommon"* %10 to i8*
  call void @llvm.lifetime.start.p0i8(i64 96, i8* nonnull %11) #8
  call void @llvm.memset.p0i8.i64(i8* nonnull align 8 %11, i8 -86, i64 96, i1 false)
  %12 = getelementptr inbounds %"class.tflite::RuntimeShape", %"class.tflite::RuntimeShape"* %5, i64 0, i32 0
  %13 = bitcast %"struct.tflite::NdArrayDesc"* %8 to i8*
  call void @llvm.lifetime.start.p0i8(i64 32, i8* nonnull %13) #8, !noalias !839
  %14 = bitcast %"struct.tflite::NdArrayDesc"* %9 to i8*
  call void @llvm.memset.p0i8.i64(i8* nonnull align 4 %13, i8 -86, i64 32, i1 false) #8, !noalias !839
  call void @llvm.lifetime.start.p0i8(i64 32, i8* nonnull %14) #8, !noalias !839
  call void @llvm.memset.p0i8.i64(i8* nonnull align 4 %14, i8 -86, i64 32, i1 false) #8, !noalias !839
  call void @_ZN6tflite35NdArrayDescsForElementwiseBroadcastILi4EEEvRKNS_12RuntimeShapeES3_PNS_11NdArrayDescIXT_EEES6_(%"class.tflite::RuntimeShape"* dereferenceable(32) %1, %"class.tflite::RuntimeShape"* dereferenceable(32) %3, %"struct.tflite::NdArrayDesc"* nonnull %8, %"struct.tflite::NdArrayDesc"* nonnull %9) #8, !noalias !839
  %15 = getelementptr inbounds %"struct.tflite::reference_ops::BroadcastComparison4DSlowCommon", %"struct.tflite::reference_ops::BroadcastComparison4DSlowCommon"* %10, i64 0, i32 0, i32 0
  store i32 0, i32* %15, align 8, !alias.scope !842
  %16 = load i32, i32* %12, align 8, !noalias !842
  %17 = icmp sgt i32 %16, 4
  br i1 %17, label %18, label %19

18:                                               ; preds = %7
  call void @abort() #10, !noalias !842
  unreachable

19:                                               ; preds = %7
  store i32 4, i32* %15, align 8, !alias.scope !842
  %20 = sub i32 4, %16
  %21 = icmp sgt i32 %20, 0
  %22 = getelementptr inbounds %"struct.tflite::reference_ops::BroadcastComparison4DSlowCommon", %"struct.tflite::reference_ops::BroadcastComparison4DSlowCommon"* %10, i64 0, i32 0, i32 1
  br i1 %21, label %23, label %103

23:                                               ; preds = %19
  %24 = bitcast %union.anon* %22 to [5 x i32]*
  %25 = zext i32 %20 to i64
  %26 = icmp ult i32 %20, 8
  br i1 %26, label %96, label %27

27:                                               ; preds = %23
  %28 = and i64 %25, 4294967288
  %29 = add nsw i64 %28, -8
  %30 = lshr exact i64 %29, 3
  %31 = add nuw nsw i64 %30, 1
  %32 = and i64 %31, 7
  %33 = icmp ult i64 %29, 56
  br i1 %33, label %81, label %34

34:                                               ; preds = %27
  %35 = sub nsw i64 %31, %32
  br label %36

36:                                               ; preds = %36, %34
  %37 = phi i64 [ 0, %34 ], [ %78, %36 ]
  %38 = phi i64 [ %35, %34 ], [ %79, %36 ]
  %39 = getelementptr inbounds [5 x i32], [5 x i32]* %24, i64 0, i64 %37
  %40 = bitcast i32* %39 to <4 x i32>*
  store <4 x i32> <i32 1, i32 1, i32 1, i32 1>, <4 x i32>* %40, align 8, !alias.scope !842
  %41 = getelementptr inbounds i32, i32* %39, i64 4
  %42 = bitcast i32* %41 to <4 x i32>*
  store <4 x i32> <i32 1, i32 1, i32 1, i32 1>, <4 x i32>* %42, align 8, !alias.scope !842
  %43 = or i64 %37, 8
  %44 = getelementptr inbounds [5 x i32], [5 x i32]* %24, i64 0, i64 %43
  %45 = bitcast i32* %44 to <4 x i32>*
  store <4 x i32> <i32 1, i32 1, i32 1, i32 1>, <4 x i32>* %45, align 8, !alias.scope !842
  %46 = getelementptr inbounds i32, i32* %44, i64 4
  %47 = bitcast i32* %46 to <4 x i32>*
  store <4 x i32> <i32 1, i32 1, i32 1, i32 1>, <4 x i32>* %47, align 8, !alias.scope !842
  %48 = or i64 %37, 16
  %49 = getelementptr inbounds [5 x i32], [5 x i32]* %24, i64 0, i64 %48
  %50 = bitcast i32* %49 to <4 x i32>*
  store <4 x i32> <i32 1, i32 1, i32 1, i32 1>, <4 x i32>* %50, align 8, !alias.scope !842
  %51 = getelementptr inbounds i32, i32* %49, i64 4
  %52 = bitcast i32* %51 to <4 x i32>*
  store <4 x i32> <i32 1, i32 1, i32 1, i32 1>, <4 x i32>* %52, align 8, !alias.scope !842
  %53 = or i64 %37, 24
  %54 = getelementptr inbounds [5 x i32], [5 x i32]* %24, i64 0, i64 %53
  %55 = bitcast i32* %54 to <4 x i32>*
  store <4 x i32> <i32 1, i32 1, i32 1, i32 1>, <4 x i32>* %55, align 8, !alias.scope !842
  %56 = getelementptr inbounds i32, i32* %54, i64 4
  %57 = bitcast i32* %56 to <4 x i32>*
  store <4 x i32> <i32 1, i32 1, i32 1, i32 1>, <4 x i32>* %57, align 8, !alias.scope !842
  %58 = or i64 %37, 32
  %59 = getelementptr inbounds [5 x i32], [5 x i32]* %24, i64 0, i64 %58
  %60 = bitcast i32* %59 to <4 x i32>*
  store <4 x i32> <i32 1, i32 1, i32 1, i32 1>, <4 x i32>* %60, align 8, !alias.scope !842
  %61 = getelementptr inbounds i32, i32* %59, i64 4
  %62 = bitcast i32* %61 to <4 x i32>*
  store <4 x i32> <i32 1, i32 1, i32 1, i32 1>, <4 x i32>* %62, align 8, !alias.scope !842
  %63 = or i64 %37, 40
  %64 = getelementptr inbounds [5 x i32], [5 x i32]* %24, i64 0, i64 %63
  %65 = bitcast i32* %64 to <4 x i32>*
  store <4 x i32> <i32 1, i32 1, i32 1, i32 1>, <4 x i32>* %65, align 8, !alias.scope !842
  %66 = getelementptr inbounds i32, i32* %64, i64 4
  %67 = bitcast i32* %66 to <4 x i32>*
  store <4 x i32> <i32 1, i32 1, i32 1, i32 1>, <4 x i32>* %67, align 8, !alias.scope !842
  %68 = or i64 %37, 48
  %69 = getelementptr inbounds [5 x i32], [5 x i32]* %24, i64 0, i64 %68
  %70 = bitcast i32* %69 to <4 x i32>*
  store <4 x i32> <i32 1, i32 1, i32 1, i32 1>, <4 x i32>* %70, align 8, !alias.scope !842
  %71 = getelementptr inbounds i32, i32* %69, i64 4
  %72 = bitcast i32* %71 to <4 x i32>*
  store <4 x i32> <i32 1, i32 1, i32 1, i32 1>, <4 x i32>* %72, align 8, !alias.scope !842
  %73 = or i64 %37, 56
  %74 = getelementptr inbounds [5 x i32], [5 x i32]* %24, i64 0, i64 %73
  %75 = bitcast i32* %74 to <4 x i32>*
  store <4 x i32> <i32 1, i32 1, i32 1, i32 1>, <4 x i32>* %75, align 8, !alias.scope !842
  %76 = getelementptr inbounds i32, i32* %74, i64 4
  %77 = bitcast i32* %76 to <4 x i32>*
  store <4 x i32> <i32 1, i32 1, i32 1, i32 1>, <4 x i32>* %77, align 8, !alias.scope !842
  %78 = add i64 %37, 64
  %79 = add i64 %38, -8
  %80 = icmp eq i64 %79, 0
  br i1 %80, label %81, label %36, !llvm.loop !845

81:                                               ; preds = %36, %27
  %82 = phi i64 [ 0, %27 ], [ %78, %36 ]
  %83 = icmp eq i64 %32, 0
  br i1 %83, label %94, label %84

84:                                               ; preds = %81, %84
  %85 = phi i64 [ %91, %84 ], [ %82, %81 ]
  %86 = phi i64 [ %92, %84 ], [ %32, %81 ]
  %87 = getelementptr inbounds [5 x i32], [5 x i32]* %24, i64 0, i64 %85
  %88 = bitcast i32* %87 to <4 x i32>*
  store <4 x i32> <i32 1, i32 1, i32 1, i32 1>, <4 x i32>* %88, align 8, !alias.scope !842
  %89 = getelementptr inbounds i32, i32* %87, i64 4
  %90 = bitcast i32* %89 to <4 x i32>*
  store <4 x i32> <i32 1, i32 1, i32 1, i32 1>, <4 x i32>* %90, align 8, !alias.scope !842
  %91 = add i64 %85, 8
  %92 = add i64 %86, -1
  %93 = icmp eq i64 %92, 0
  br i1 %93, label %94, label %84, !llvm.loop !846

94:                                               ; preds = %84, %81
  %95 = icmp eq i64 %28, %25
  br i1 %95, label %103, label %96

96:                                               ; preds = %94, %23
  %97 = phi i64 [ 0, %23 ], [ %28, %94 ]
  br label %98

98:                                               ; preds = %96, %98
  %99 = phi i64 [ %101, %98 ], [ %97, %96 ]
  %100 = getelementptr inbounds [5 x i32], [5 x i32]* %24, i64 0, i64 %99
  store i32 1, i32* %100, align 4, !alias.scope !842
  %101 = add nuw nsw i64 %99, 1
  %102 = icmp eq i64 %101, %25
  br i1 %102, label %103, label %98, !llvm.loop !847

103:                                              ; preds = %98, %94, %19
  %104 = bitcast %union.anon* %22 to i32*
  %105 = sext i32 %20 to i64
  %106 = getelementptr inbounds i32, i32* %104, i64 %105
  %107 = bitcast i32* %106 to i8*
  %108 = icmp sgt i32 %16, 5
  %109 = getelementptr inbounds %"class.tflite::RuntimeShape", %"class.tflite::RuntimeShape"* %5, i64 0, i32 1
  %110 = getelementptr inbounds %union.anon, %union.anon* %109, i64 0, i32 0
  %111 = load i32*, i32** %110, align 8, !noalias !842
  %112 = bitcast %union.anon* %109 to i32*
  %113 = select i1 %108, i32* %111, i32* %112
  %114 = bitcast i32* %113 to i8*
  %115 = sext i32 %16 to i64
  %116 = shl nsw i64 %115, 2
  call void @llvm.memcpy.p0i8.p0i8.i64(i8* align 4 %107, i8* align 4 %114, i64 %116, i1 false) #8
  %117 = getelementptr inbounds %"struct.tflite::reference_ops::BroadcastComparison4DSlowCommon", %"struct.tflite::reference_ops::BroadcastComparison4DSlowCommon"* %10, i64 0, i32 1
  %118 = bitcast %"struct.tflite::NdArrayDesc"* %117 to i8*
  call void @llvm.memcpy.p0i8.p0i8.i64(i8* align 8 %118, i8* nonnull align 4 %13, i64 32, i1 false) #8
  %119 = getelementptr inbounds %"struct.tflite::reference_ops::BroadcastComparison4DSlowCommon", %"struct.tflite::reference_ops::BroadcastComparison4DSlowCommon"* %10, i64 0, i32 2
  %120 = bitcast %"struct.tflite::NdArrayDesc"* %119 to i8*
  call void @llvm.memcpy.p0i8.p0i8.i64(i8* align 8 %120, i8* nonnull align 4 %14, i64 32, i1 false) #8
  call void @llvm.lifetime.end.p0i8(i64 32, i8* nonnull %14) #8, !noalias !839
  call void @llvm.lifetime.end.p0i8(i64 32, i8* nonnull %13) #8, !noalias !839
  %121 = load i32, i32* %15, align 8
  %122 = icmp sgt i32 %121, 5
  %123 = getelementptr inbounds %union.anon, %union.anon* %22, i64 0, i32 0
  %124 = load i32*, i32** %123, align 8
  %125 = select i1 %122, i32* %124, i32* %104
  %126 = load i32, i32* %125, align 4
  %127 = icmp sgt i32 %126, 0
  br i1 %127, label %128, label %175

128:                                              ; preds = %103
  %129 = bitcast %union.anon* %22 to [5 x i32]*
  %130 = getelementptr inbounds [5 x i32], [5 x i32]* %129, i64 0, i64 1
  %131 = getelementptr inbounds %"struct.tflite::reference_ops::BroadcastComparison4DSlowCommon", %"struct.tflite::reference_ops::BroadcastComparison4DSlowCommon"* %10, i64 0, i32 0, i32 1, i32 1
  %132 = bitcast [16 x i8]* %131 to i32*
  %133 = getelementptr inbounds %"struct.tflite::reference_ops::BroadcastComparison4DSlowCommon", %"struct.tflite::reference_ops::BroadcastComparison4DSlowCommon"* %10, i64 0, i32 0, i32 1, i32 1, i64 4
  %134 = bitcast i8* %133 to i32*
  %135 = getelementptr inbounds %"struct.tflite::reference_ops::BroadcastComparison4DSlowCommon", %"struct.tflite::reference_ops::BroadcastComparison4DSlowCommon"* %10, i64 0, i32 1, i32 1, i64 0
  %136 = load i32, i32* %135, align 8
  %137 = getelementptr inbounds %"struct.tflite::reference_ops::BroadcastComparison4DSlowCommon", %"struct.tflite::reference_ops::BroadcastComparison4DSlowCommon"* %10, i64 0, i32 1, i32 1, i64 1
  %138 = load i32, i32* %137, align 4
  %139 = getelementptr inbounds %"struct.tflite::reference_ops::BroadcastComparison4DSlowCommon", %"struct.tflite::reference_ops::BroadcastComparison4DSlowCommon"* %10, i64 0, i32 1, i32 1, i64 2
  %140 = load i32, i32* %139, align 8
  %141 = getelementptr inbounds %"struct.tflite::reference_ops::BroadcastComparison4DSlowCommon", %"struct.tflite::reference_ops::BroadcastComparison4DSlowCommon"* %10, i64 0, i32 1, i32 1, i64 3
  %142 = load i32, i32* %141, align 4
  %143 = getelementptr inbounds %"struct.tflite::reference_ops::BroadcastComparison4DSlowCommon", %"struct.tflite::reference_ops::BroadcastComparison4DSlowCommon"* %10, i64 0, i32 2, i32 1, i64 0
  %144 = load i32, i32* %143, align 8
  %145 = getelementptr inbounds %"struct.tflite::reference_ops::BroadcastComparison4DSlowCommon", %"struct.tflite::reference_ops::BroadcastComparison4DSlowCommon"* %10, i64 0, i32 2, i32 1, i64 1
  %146 = load i32, i32* %145, align 4
  %147 = getelementptr inbounds %"struct.tflite::reference_ops::BroadcastComparison4DSlowCommon", %"struct.tflite::reference_ops::BroadcastComparison4DSlowCommon"* %10, i64 0, i32 2, i32 1, i64 2
  %148 = load i32, i32* %147, align 8
  %149 = getelementptr inbounds %"struct.tflite::reference_ops::BroadcastComparison4DSlowCommon", %"struct.tflite::reference_ops::BroadcastComparison4DSlowCommon"* %10, i64 0, i32 2, i32 1, i64 3
  %150 = load i32, i32* %149, align 4
  %151 = getelementptr inbounds i32, i32* %104, i64 1
  %152 = sext i32 %150 to i64
  %153 = sext i32 %142 to i64
  %154 = sext i32 %148 to i64
  %155 = sext i32 %140 to i64
  %156 = sext i32 %146 to i64
  %157 = sext i32 %138 to i64
  %158 = sext i32 %144 to i64
  %159 = sext i32 %136 to i64
  %160 = getelementptr inbounds i32, i32* %124, i64 1
  %161 = select i1 %122, i32* %160, i32* %130
  %162 = getelementptr inbounds i32, i32* %124, i64 2
  %163 = select i1 %122, i32* %162, i32* %132
  %164 = getelementptr inbounds i32, i32* %124, i64 3
  %165 = select i1 %122, i32* %164, i32* %134
  br label %166

166:                                              ; preds = %128, %199
  %167 = phi i32 [ %126, %128 ], [ %200, %199 ]
  %168 = phi i64 [ 0, %128 ], [ %201, %199 ]
  %169 = load i32, i32* %161, align 4
  %170 = icmp sgt i32 %169, 0
  br i1 %170, label %171, label %199

171:                                              ; preds = %166
  %172 = mul nsw i64 %168, %159
  %173 = mul nsw i64 %168, %158
  %174 = trunc i64 %168 to i32
  br label %182

175:                                              ; preds = %199, %103
  %176 = xor i1 %122, true
  %177 = icmp eq i32* %124, null
  %178 = or i1 %177, %176
  br i1 %178, label %181, label %179

179:                                              ; preds = %175
  %180 = bitcast i32* %124 to i8*
  call void @_ZdaPv(i8* %180) #9
  br label %181

181:                                              ; preds = %175, %179
  call void @llvm.lifetime.end.p0i8(i64 96, i8* nonnull %11) #8
  ret void

182:                                              ; preds = %171, %222
  %183 = phi i32 [ %169, %171 ], [ %223, %222 ]
  %184 = phi i64 [ 0, %171 ], [ %224, %222 ]
  %185 = load i32, i32* %163, align 4
  %186 = icmp sgt i32 %185, 0
  br i1 %186, label %187, label %222

187:                                              ; preds = %182
  %188 = mul nsw i64 %184, %157
  %189 = add nsw i64 %188, %172
  %190 = mul nsw i64 %184, %156
  %191 = add nsw i64 %190, %173
  %192 = load i32, i32* %151, align 4
  %193 = mul nsw i32 %192, %174
  %194 = trunc i64 %184 to i32
  %195 = add nsw i32 %193, %194
  %196 = load i32, i32* %165, align 4
  br label %204

197:                                              ; preds = %222
  %198 = load i32, i32* %125, align 4
  br label %199

199:                                              ; preds = %197, %166
  %200 = phi i32 [ %198, %197 ], [ %167, %166 ]
  %201 = add nuw nsw i64 %168, 1
  %202 = sext i32 %200 to i64
  %203 = icmp slt i64 %201, %202
  br i1 %203, label %166, label %175

204:                                              ; preds = %187, %229
  %205 = phi i32 [ %185, %187 ], [ %230, %229 ]
  %206 = phi i32 [ %196, %187 ], [ %231, %229 ]
  %207 = phi i64 [ 0, %187 ], [ %232, %229 ]
  %208 = icmp sgt i32 %206, 0
  br i1 %208, label %209, label %229

209:                                              ; preds = %204
  %210 = mul nsw i64 %207, %155
  %211 = add nsw i64 %189, %210
  %212 = mul nsw i64 %207, %154
  %213 = add nsw i64 %191, %212
  %214 = load i32, i32* %132, align 8
  %215 = mul nsw i32 %195, %214
  %216 = trunc i64 %207 to i32
  %217 = add nsw i32 %215, %216
  %218 = load i32, i32* %134, align 4
  %219 = mul nsw i32 %217, %218
  br label %235

220:                                              ; preds = %229
  %221 = load i32, i32* %161, align 4
  br label %222

222:                                              ; preds = %220, %182
  %223 = phi i32 [ %221, %220 ], [ %183, %182 ]
  %224 = add nuw nsw i64 %184, 1
  %225 = sext i32 %223 to i64
  %226 = icmp slt i64 %224, %225
  br i1 %226, label %182, label %197

227:                                              ; preds = %235
  %228 = load i32, i32* %163, align 4
  br label %229

229:                                              ; preds = %227, %204
  %230 = phi i32 [ %228, %227 ], [ %205, %204 ]
  %231 = phi i32 [ %254, %227 ], [ %206, %204 ]
  %232 = add nuw nsw i64 %207, 1
  %233 = sext i32 %230 to i64
  %234 = icmp slt i64 %232, %233
  br i1 %234, label %204, label %220

235:                                              ; preds = %209, %235
  %236 = phi i64 [ 0, %209 ], [ %253, %235 ]
  %237 = mul nsw i64 %236, %153
  %238 = add nsw i64 %211, %237
  %239 = getelementptr inbounds i8, i8* %2, i64 %238
  %240 = load i8, i8* %239, align 1, !range !35
  %241 = icmp eq i8 %240, 0
  %242 = mul nsw i64 %236, %152
  %243 = add nsw i64 %213, %242
  %244 = getelementptr inbounds i8, i8* %4, i64 %243
  %245 = load i8, i8* %244, align 1, !range !35
  %246 = icmp ne i8 %245, 0
  %247 = xor i1 %241, %246
  %248 = trunc i64 %236 to i32
  %249 = add nsw i32 %219, %248
  %250 = sext i32 %249 to i64
  %251 = getelementptr inbounds i8, i8* %6, i64 %250
  %252 = zext i1 %247 to i8
  store i8 %252, i8* %251, align 1
  %253 = add nuw nsw i64 %236, 1
  %254 = load i32, i32* %165, align 4
  %255 = sext i32 %254 to i64
  %256 = icmp slt i64 %253, %255
  br i1 %256, label %235, label %227
}

; Function Attrs: argmemonly nounwind
declare void @llvm.memset.p0i8.i64(i8* nocapture writeonly, i8, i64, i1 immarg) #2

; Function Attrs: inlinehint nounwind ssp uwtable
define linkonce_odr hidden void @_ZN6tflite35NdArrayDescsForElementwiseBroadcastILi4EEEvRKNS_12RuntimeShapeES3_PNS_11NdArrayDescIXT_EEES6_(%"class.tflite::RuntimeShape"* dereferenceable(32), %"class.tflite::RuntimeShape"* dereferenceable(32), %"struct.tflite::NdArrayDesc"*, %"struct.tflite::NdArrayDesc"*) local_unnamed_addr #4 comdat {
  %5 = alloca %"class.tflite::RuntimeShape", align 8
  %6 = alloca %"class.tflite::RuntimeShape", align 8
  %7 = bitcast %"class.tflite::RuntimeShape"* %5 to i8*
  call void @llvm.lifetime.start.p0i8(i64 32, i8* nonnull %7) #8
  call void @llvm.memset.p0i8.i64(i8* nonnull align 8 %7, i8 -86, i64 32, i1 false)
  %8 = getelementptr inbounds %"class.tflite::RuntimeShape", %"class.tflite::RuntimeShape"* %5, i64 0, i32 0
  store i32 0, i32* %8, align 8, !alias.scope !848
  %9 = getelementptr inbounds %"class.tflite::RuntimeShape", %"class.tflite::RuntimeShape"* %0, i64 0, i32 0
  %10 = load i32, i32* %9, align 8, !noalias !848
  %11 = icmp sgt i32 %10, 4
  br i1 %11, label %12, label %13

12:                                               ; preds = %4
  tail call void @abort() #10, !noalias !848
  unreachable

13:                                               ; preds = %4
  store i32 4, i32* %8, align 8, !alias.scope !848
  %14 = sub i32 4, %10
  %15 = icmp sgt i32 %14, 0
  %16 = getelementptr inbounds %"class.tflite::RuntimeShape", %"class.tflite::RuntimeShape"* %5, i64 0, i32 1
  br i1 %15, label %17, label %97

17:                                               ; preds = %13
  %18 = bitcast %union.anon* %16 to [5 x i32]*
  %19 = zext i32 %14 to i64
  %20 = icmp ult i32 %14, 8
  br i1 %20, label %90, label %21

21:                                               ; preds = %17
  %22 = and i64 %19, 4294967288
  %23 = add nsw i64 %22, -8
  %24 = lshr exact i64 %23, 3
  %25 = add nuw nsw i64 %24, 1
  %26 = and i64 %25, 7
  %27 = icmp ult i64 %23, 56
  br i1 %27, label %75, label %28

28:                                               ; preds = %21
  %29 = sub nsw i64 %25, %26
  br label %30

30:                                               ; preds = %30, %28
  %31 = phi i64 [ 0, %28 ], [ %72, %30 ]
  %32 = phi i64 [ %29, %28 ], [ %73, %30 ]
  %33 = getelementptr inbounds [5 x i32], [5 x i32]* %18, i64 0, i64 %31
  %34 = bitcast i32* %33 to <4 x i32>*
  store <4 x i32> <i32 1, i32 1, i32 1, i32 1>, <4 x i32>* %34, align 8, !alias.scope !848
  %35 = getelementptr inbounds i32, i32* %33, i64 4
  %36 = bitcast i32* %35 to <4 x i32>*
  store <4 x i32> <i32 1, i32 1, i32 1, i32 1>, <4 x i32>* %36, align 8, !alias.scope !848
  %37 = or i64 %31, 8
  %38 = getelementptr inbounds [5 x i32], [5 x i32]* %18, i64 0, i64 %37
  %39 = bitcast i32* %38 to <4 x i32>*
  store <4 x i32> <i32 1, i32 1, i32 1, i32 1>, <4 x i32>* %39, align 8, !alias.scope !848
  %40 = getelementptr inbounds i32, i32* %38, i64 4
  %41 = bitcast i32* %40 to <4 x i32>*
  store <4 x i32> <i32 1, i32 1, i32 1, i32 1>, <4 x i32>* %41, align 8, !alias.scope !848
  %42 = or i64 %31, 16
  %43 = getelementptr inbounds [5 x i32], [5 x i32]* %18, i64 0, i64 %42
  %44 = bitcast i32* %43 to <4 x i32>*
  store <4 x i32> <i32 1, i32 1, i32 1, i32 1>, <4 x i32>* %44, align 8, !alias.scope !848
  %45 = getelementptr inbounds i32, i32* %43, i64 4
  %46 = bitcast i32* %45 to <4 x i32>*
  store <4 x i32> <i32 1, i32 1, i32 1, i32 1>, <4 x i32>* %46, align 8, !alias.scope !848
  %47 = or i64 %31, 24
  %48 = getelementptr inbounds [5 x i32], [5 x i32]* %18, i64 0, i64 %47
  %49 = bitcast i32* %48 to <4 x i32>*
  store <4 x i32> <i32 1, i32 1, i32 1, i32 1>, <4 x i32>* %49, align 8, !alias.scope !848
  %50 = getelementptr inbounds i32, i32* %48, i64 4
  %51 = bitcast i32* %50 to <4 x i32>*
  store <4 x i32> <i32 1, i32 1, i32 1, i32 1>, <4 x i32>* %51, align 8, !alias.scope !848
  %52 = or i64 %31, 32
  %53 = getelementptr inbounds [5 x i32], [5 x i32]* %18, i64 0, i64 %52
  %54 = bitcast i32* %53 to <4 x i32>*
  store <4 x i32> <i32 1, i32 1, i32 1, i32 1>, <4 x i32>* %54, align 8, !alias.scope !848
  %55 = getelementptr inbounds i32, i32* %53, i64 4
  %56 = bitcast i32* %55 to <4 x i32>*
  store <4 x i32> <i32 1, i32 1, i32 1, i32 1>, <4 x i32>* %56, align 8, !alias.scope !848
  %57 = or i64 %31, 40
  %58 = getelementptr inbounds [5 x i32], [5 x i32]* %18, i64 0, i64 %57
  %59 = bitcast i32* %58 to <4 x i32>*
  store <4 x i32> <i32 1, i32 1, i32 1, i32 1>, <4 x i32>* %59, align 8, !alias.scope !848
  %60 = getelementptr inbounds i32, i32* %58, i64 4
  %61 = bitcast i32* %60 to <4 x i32>*
  store <4 x i32> <i32 1, i32 1, i32 1, i32 1>, <4 x i32>* %61, align 8, !alias.scope !848
  %62 = or i64 %31, 48
  %63 = getelementptr inbounds [5 x i32], [5 x i32]* %18, i64 0, i64 %62
  %64 = bitcast i32* %63 to <4 x i32>*
  store <4 x i32> <i32 1, i32 1, i32 1, i32 1>, <4 x i32>* %64, align 8, !alias.scope !848
  %65 = getelementptr inbounds i32, i32* %63, i64 4
  %66 = bitcast i32* %65 to <4 x i32>*
  store <4 x i32> <i32 1, i32 1, i32 1, i32 1>, <4 x i32>* %66, align 8, !alias.scope !848
  %67 = or i64 %31, 56
  %68 = getelementptr inbounds [5 x i32], [5 x i32]* %18, i64 0, i64 %67
  %69 = bitcast i32* %68 to <4 x i32>*
  store <4 x i32> <i32 1, i32 1, i32 1, i32 1>, <4 x i32>* %69, align 8, !alias.scope !848
  %70 = getelementptr inbounds i32, i32* %68, i64 4
  %71 = bitcast i32* %70 to <4 x i32>*
  store <4 x i32> <i32 1, i32 1, i32 1, i32 1>, <4 x i32>* %71, align 8, !alias.scope !848
  %72 = add i64 %31, 64
  %73 = add i64 %32, -8
  %74 = icmp eq i64 %73, 0
  br i1 %74, label %75, label %30, !llvm.loop !851

75:                                               ; preds = %30, %21
  %76 = phi i64 [ 0, %21 ], [ %72, %30 ]
  %77 = icmp eq i64 %26, 0
  br i1 %77, label %88, label %78

78:                                               ; preds = %75, %78
  %79 = phi i64 [ %85, %78 ], [ %76, %75 ]
  %80 = phi i64 [ %86, %78 ], [ %26, %75 ]
  %81 = getelementptr inbounds [5 x i32], [5 x i32]* %18, i64 0, i64 %79
  %82 = bitcast i32* %81 to <4 x i32>*
  store <4 x i32> <i32 1, i32 1, i32 1, i32 1>, <4 x i32>* %82, align 8, !alias.scope !848
  %83 = getelementptr inbounds i32, i32* %81, i64 4
  %84 = bitcast i32* %83 to <4 x i32>*
  store <4 x i32> <i32 1, i32 1, i32 1, i32 1>, <4 x i32>* %84, align 8, !alias.scope !848
  %85 = add i64 %79, 8
  %86 = add i64 %80, -1
  %87 = icmp eq i64 %86, 0
  br i1 %87, label %88, label %78, !llvm.loop !852

88:                                               ; preds = %78, %75
  %89 = icmp eq i64 %22, %19
  br i1 %89, label %97, label %90

90:                                               ; preds = %88, %17
  %91 = phi i64 [ 0, %17 ], [ %22, %88 ]
  br label %92

92:                                               ; preds = %90, %92
  %93 = phi i64 [ %95, %92 ], [ %91, %90 ]
  %94 = getelementptr inbounds [5 x i32], [5 x i32]* %18, i64 0, i64 %93
  store i32 1, i32* %94, align 4, !alias.scope !848
  %95 = add nuw nsw i64 %93, 1
  %96 = icmp eq i64 %95, %19
  br i1 %96, label %97, label %92, !llvm.loop !853

97:                                               ; preds = %92, %88, %13
  %98 = getelementptr inbounds %union.anon, %union.anon* %16, i64 0, i32 0
  %99 = bitcast %union.anon* %16 to i32*
  %100 = sext i32 %14 to i64
  %101 = getelementptr inbounds i32, i32* %99, i64 %100
  %102 = bitcast i32* %101 to i8*
  %103 = icmp sgt i32 %10, 5
  %104 = getelementptr inbounds %"class.tflite::RuntimeShape", %"class.tflite::RuntimeShape"* %0, i64 0, i32 1
  %105 = getelementptr inbounds %union.anon, %union.anon* %104, i64 0, i32 0
  %106 = load i32*, i32** %105, align 8, !noalias !848
  %107 = bitcast %union.anon* %104 to i32*
  %108 = select i1 %103, i32* %106, i32* %107
  %109 = bitcast i32* %108 to i8*
  %110 = sext i32 %10 to i64
  %111 = shl nsw i64 %110, 2
  call void @llvm.memcpy.p0i8.p0i8.i64(i8* align 4 %102, i8* align 4 %109, i64 %111, i1 false) #8
  %112 = bitcast %"class.tflite::RuntimeShape"* %6 to i8*
  call void @llvm.lifetime.start.p0i8(i64 32, i8* nonnull %112) #8
  call void @llvm.memset.p0i8.i64(i8* nonnull align 8 %112, i8 -86, i64 32, i1 false)
  %113 = getelementptr inbounds %"class.tflite::RuntimeShape", %"class.tflite::RuntimeShape"* %6, i64 0, i32 0
  store i32 0, i32* %113, align 8, !alias.scope !854
  %114 = getelementptr inbounds %"class.tflite::RuntimeShape", %"class.tflite::RuntimeShape"* %1, i64 0, i32 0
  %115 = load i32, i32* %114, align 8, !noalias !854
  %116 = icmp sgt i32 %115, 4
  br i1 %116, label %117, label %118

117:                                              ; preds = %97
  tail call void @abort() #10, !noalias !854
  unreachable

118:                                              ; preds = %97
  store i32 4, i32* %113, align 8, !alias.scope !854
  %119 = sub i32 4, %115
  %120 = icmp sgt i32 %119, 0
  %121 = getelementptr inbounds %"class.tflite::RuntimeShape", %"class.tflite::RuntimeShape"* %6, i64 0, i32 1
  %122 = bitcast %union.anon* %121 to [5 x i32]*
  br i1 %120, label %123, label %202

123:                                              ; preds = %118
  %124 = zext i32 %119 to i64
  %125 = icmp ult i32 %119, 8
  br i1 %125, label %195, label %126

126:                                              ; preds = %123
  %127 = and i64 %124, 4294967288
  %128 = add nsw i64 %127, -8
  %129 = lshr exact i64 %128, 3
  %130 = add nuw nsw i64 %129, 1
  %131 = and i64 %130, 7
  %132 = icmp ult i64 %128, 56
  br i1 %132, label %180, label %133

133:                                              ; preds = %126
  %134 = sub nsw i64 %130, %131
  br label %135

135:                                              ; preds = %135, %133
  %136 = phi i64 [ 0, %133 ], [ %177, %135 ]
  %137 = phi i64 [ %134, %133 ], [ %178, %135 ]
  %138 = getelementptr inbounds [5 x i32], [5 x i32]* %122, i64 0, i64 %136
  %139 = bitcast i32* %138 to <4 x i32>*
  store <4 x i32> <i32 1, i32 1, i32 1, i32 1>, <4 x i32>* %139, align 8, !alias.scope !854
  %140 = getelementptr inbounds i32, i32* %138, i64 4
  %141 = bitcast i32* %140 to <4 x i32>*
  store <4 x i32> <i32 1, i32 1, i32 1, i32 1>, <4 x i32>* %141, align 8, !alias.scope !854
  %142 = or i64 %136, 8
  %143 = getelementptr inbounds [5 x i32], [5 x i32]* %122, i64 0, i64 %142
  %144 = bitcast i32* %143 to <4 x i32>*
  store <4 x i32> <i32 1, i32 1, i32 1, i32 1>, <4 x i32>* %144, align 8, !alias.scope !854
  %145 = getelementptr inbounds i32, i32* %143, i64 4
  %146 = bitcast i32* %145 to <4 x i32>*
  store <4 x i32> <i32 1, i32 1, i32 1, i32 1>, <4 x i32>* %146, align 8, !alias.scope !854
  %147 = or i64 %136, 16
  %148 = getelementptr inbounds [5 x i32], [5 x i32]* %122, i64 0, i64 %147
  %149 = bitcast i32* %148 to <4 x i32>*
  store <4 x i32> <i32 1, i32 1, i32 1, i32 1>, <4 x i32>* %149, align 8, !alias.scope !854
  %150 = getelementptr inbounds i32, i32* %148, i64 4
  %151 = bitcast i32* %150 to <4 x i32>*
  store <4 x i32> <i32 1, i32 1, i32 1, i32 1>, <4 x i32>* %151, align 8, !alias.scope !854
  %152 = or i64 %136, 24
  %153 = getelementptr inbounds [5 x i32], [5 x i32]* %122, i64 0, i64 %152
  %154 = bitcast i32* %153 to <4 x i32>*
  store <4 x i32> <i32 1, i32 1, i32 1, i32 1>, <4 x i32>* %154, align 8, !alias.scope !854
  %155 = getelementptr inbounds i32, i32* %153, i64 4
  %156 = bitcast i32* %155 to <4 x i32>*
  store <4 x i32> <i32 1, i32 1, i32 1, i32 1>, <4 x i32>* %156, align 8, !alias.scope !854
  %157 = or i64 %136, 32
  %158 = getelementptr inbounds [5 x i32], [5 x i32]* %122, i64 0, i64 %157
  %159 = bitcast i32* %158 to <4 x i32>*
  store <4 x i32> <i32 1, i32 1, i32 1, i32 1>, <4 x i32>* %159, align 8, !alias.scope !854
  %160 = getelementptr inbounds i32, i32* %158, i64 4
  %161 = bitcast i32* %160 to <4 x i32>*
  store <4 x i32> <i32 1, i32 1, i32 1, i32 1>, <4 x i32>* %161, align 8, !alias.scope !854
  %162 = or i64 %136, 40
  %163 = getelementptr inbounds [5 x i32], [5 x i32]* %122, i64 0, i64 %162
  %164 = bitcast i32* %163 to <4 x i32>*
  store <4 x i32> <i32 1, i32 1, i32 1, i32 1>, <4 x i32>* %164, align 8, !alias.scope !854
  %165 = getelementptr inbounds i32, i32* %163, i64 4
  %166 = bitcast i32* %165 to <4 x i32>*
  store <4 x i32> <i32 1, i32 1, i32 1, i32 1>, <4 x i32>* %166, align 8, !alias.scope !854
  %167 = or i64 %136, 48
  %168 = getelementptr inbounds [5 x i32], [5 x i32]* %122, i64 0, i64 %167
  %169 = bitcast i32* %168 to <4 x i32>*
  store <4 x i32> <i32 1, i32 1, i32 1, i32 1>, <4 x i32>* %169, align 8, !alias.scope !854
  %170 = getelementptr inbounds i32, i32* %168, i64 4
  %171 = bitcast i32* %170 to <4 x i32>*
  store <4 x i32> <i32 1, i32 1, i32 1, i32 1>, <4 x i32>* %171, align 8, !alias.scope !854
  %172 = or i64 %136, 56
  %173 = getelementptr inbounds [5 x i32], [5 x i32]* %122, i64 0, i64 %172
  %174 = bitcast i32* %173 to <4 x i32>*
  store <4 x i32> <i32 1, i32 1, i32 1, i32 1>, <4 x i32>* %174, align 8, !alias.scope !854
  %175 = getelementptr inbounds i32, i32* %173, i64 4
  %176 = bitcast i32* %175 to <4 x i32>*
  store <4 x i32> <i32 1, i32 1, i32 1, i32 1>, <4 x i32>* %176, align 8, !alias.scope !854
  %177 = add i64 %136, 64
  %178 = add i64 %137, -8
  %179 = icmp eq i64 %178, 0
  br i1 %179, label %180, label %135, !llvm.loop !857

180:                                              ; preds = %135, %126
  %181 = phi i64 [ 0, %126 ], [ %177, %135 ]
  %182 = icmp eq i64 %131, 0
  br i1 %182, label %193, label %183

183:                                              ; preds = %180, %183
  %184 = phi i64 [ %190, %183 ], [ %181, %180 ]
  %185 = phi i64 [ %191, %183 ], [ %131, %180 ]
  %186 = getelementptr inbounds [5 x i32], [5 x i32]* %122, i64 0, i64 %184
  %187 = bitcast i32* %186 to <4 x i32>*
  store <4 x i32> <i32 1, i32 1, i32 1, i32 1>, <4 x i32>* %187, align 8, !alias.scope !854
  %188 = getelementptr inbounds i32, i32* %186, i64 4
  %189 = bitcast i32* %188 to <4 x i32>*
  store <4 x i32> <i32 1, i32 1, i32 1, i32 1>, <4 x i32>* %189, align 8, !alias.scope !854
  %190 = add i64 %184, 8
  %191 = add i64 %185, -1
  %192 = icmp eq i64 %191, 0
  br i1 %192, label %193, label %183, !llvm.loop !858

193:                                              ; preds = %183, %180
  %194 = icmp eq i64 %127, %124
  br i1 %194, label %202, label %195

195:                                              ; preds = %193, %123
  %196 = phi i64 [ 0, %123 ], [ %127, %193 ]
  br label %197

197:                                              ; preds = %195, %197
  %198 = phi i64 [ %200, %197 ], [ %196, %195 ]
  %199 = getelementptr inbounds [5 x i32], [5 x i32]* %122, i64 0, i64 %198
  store i32 1, i32* %199, align 4, !alias.scope !854
  %200 = add nuw nsw i64 %198, 1
  %201 = icmp eq i64 %200, %124
  br i1 %201, label %202, label %197, !llvm.loop !859

202:                                              ; preds = %197, %193, %118
  %203 = getelementptr inbounds %union.anon, %union.anon* %121, i64 0, i32 0
  %204 = bitcast %union.anon* %121 to i32*
  %205 = sext i32 %119 to i64
  %206 = getelementptr inbounds i32, i32* %204, i64 %205
  %207 = bitcast i32* %206 to i8*
  %208 = icmp sgt i32 %115, 5
  %209 = getelementptr inbounds %"class.tflite::RuntimeShape", %"class.tflite::RuntimeShape"* %1, i64 0, i32 1
  %210 = getelementptr inbounds %union.anon, %union.anon* %209, i64 0, i32 0
  %211 = load i32*, i32** %210, align 8, !noalias !854
  %212 = bitcast %union.anon* %209 to i32*
  %213 = select i1 %208, i32* %211, i32* %212
  %214 = bitcast i32* %213 to i8*
  %215 = sext i32 %115 to i64
  %216 = shl nsw i64 %215, 2
  call void @llvm.memcpy.p0i8.p0i8.i64(i8* align 4 %207, i8* align 4 %214, i64 %216, i1 false) #8
  %217 = bitcast %union.anon* %16 to [5 x i32]*
  %218 = load i32, i32* %8, align 8
  %219 = icmp sgt i32 %218, 5
  %220 = load i32*, i32** %98, align 8
  %221 = getelementptr inbounds i32, i32* %220, i64 3
  %222 = getelementptr inbounds %"class.tflite::RuntimeShape", %"class.tflite::RuntimeShape"* %5, i64 0, i32 1, i32 1, i64 4
  %223 = bitcast i8* %222 to i32*
  %224 = select i1 %219, i32* %221, i32* %223
  %225 = load i32, i32* %224, align 4
  %226 = getelementptr inbounds %"struct.tflite::NdArrayDesc", %"struct.tflite::NdArrayDesc"* %2, i64 0, i32 0, i64 3
  store i32 %225, i32* %226, align 4
  %227 = getelementptr inbounds %"struct.tflite::NdArrayDesc", %"struct.tflite::NdArrayDesc"* %2, i64 0, i32 1, i64 3
  store i32 1, i32* %227, align 4
  %228 = load i32, i32* %224, align 4
  %229 = getelementptr inbounds i32, i32* %220, i64 2
  %230 = getelementptr inbounds %"class.tflite::RuntimeShape", %"class.tflite::RuntimeShape"* %5, i64 0, i32 1, i32 1
  %231 = bitcast [16 x i8]* %230 to i32*
  %232 = select i1 %219, i32* %229, i32* %231
  %233 = load i32, i32* %232, align 4
  %234 = getelementptr inbounds %"struct.tflite::NdArrayDesc", %"struct.tflite::NdArrayDesc"* %2, i64 0, i32 0, i64 2
  store i32 %233, i32* %234, align 4
  %235 = getelementptr inbounds %"struct.tflite::NdArrayDesc", %"struct.tflite::NdArrayDesc"* %2, i64 0, i32 1, i64 2
  store i32 %228, i32* %235, align 4
  %236 = load i32, i32* %232, align 4
  %237 = mul nsw i32 %236, %228
  %238 = getelementptr inbounds i32, i32* %220, i64 1
  %239 = getelementptr inbounds [5 x i32], [5 x i32]* %217, i64 0, i64 1
  %240 = select i1 %219, i32* %238, i32* %239
  %241 = load i32, i32* %240, align 4
  %242 = getelementptr inbounds %"struct.tflite::NdArrayDesc", %"struct.tflite::NdArrayDesc"* %2, i64 0, i32 0, i64 1
  store i32 %241, i32* %242, align 4
  %243 = getelementptr inbounds %"struct.tflite::NdArrayDesc", %"struct.tflite::NdArrayDesc"* %2, i64 0, i32 1, i64 1
  store i32 %237, i32* %243, align 4
  %244 = load i32, i32* %240, align 4
  %245 = mul nsw i32 %244, %237
  %246 = select i1 %219, i32* %220, i32* %99
  %247 = load i32, i32* %246, align 4
  %248 = getelementptr inbounds %"struct.tflite::NdArrayDesc", %"struct.tflite::NdArrayDesc"* %2, i64 0, i32 0, i64 0
  store i32 %247, i32* %248, align 4
  %249 = getelementptr inbounds %"struct.tflite::NdArrayDesc", %"struct.tflite::NdArrayDesc"* %2, i64 0, i32 1, i64 0
  store i32 %245, i32* %249, align 4
  %250 = load i32, i32* %113, align 8
  %251 = icmp sgt i32 %250, 5
  %252 = load i32*, i32** %203, align 8
  %253 = getelementptr inbounds i32, i32* %252, i64 3
  %254 = getelementptr inbounds %"class.tflite::RuntimeShape", %"class.tflite::RuntimeShape"* %6, i64 0, i32 1, i32 1, i64 4
  %255 = bitcast i8* %254 to i32*
  %256 = select i1 %251, i32* %253, i32* %255
  %257 = load i32, i32* %256, align 4
  %258 = getelementptr inbounds %"struct.tflite::NdArrayDesc", %"struct.tflite::NdArrayDesc"* %3, i64 0, i32 0, i64 3
  store i32 %257, i32* %258, align 4
  %259 = getelementptr inbounds %"struct.tflite::NdArrayDesc", %"struct.tflite::NdArrayDesc"* %3, i64 0, i32 1, i64 3
  store i32 1, i32* %259, align 4
  %260 = load i32, i32* %256, align 4
  %261 = getelementptr inbounds i32, i32* %252, i64 2
  %262 = getelementptr inbounds %"class.tflite::RuntimeShape", %"class.tflite::RuntimeShape"* %6, i64 0, i32 1, i32 1
  %263 = bitcast [16 x i8]* %262 to i32*
  %264 = select i1 %251, i32* %261, i32* %263
  %265 = load i32, i32* %264, align 4
  %266 = getelementptr inbounds %"struct.tflite::NdArrayDesc", %"struct.tflite::NdArrayDesc"* %3, i64 0, i32 0, i64 2
  store i32 %265, i32* %266, align 4
  %267 = getelementptr inbounds %"struct.tflite::NdArrayDesc", %"struct.tflite::NdArrayDesc"* %3, i64 0, i32 1, i64 2
  store i32 %260, i32* %267, align 4
  %268 = load i32, i32* %264, align 4
  %269 = mul nsw i32 %268, %260
  %270 = getelementptr inbounds i32, i32* %252, i64 1
  %271 = getelementptr inbounds [5 x i32], [5 x i32]* %122, i64 0, i64 1
  %272 = select i1 %251, i32* %270, i32* %271
  %273 = load i32, i32* %272, align 4
  %274 = getelementptr inbounds %"struct.tflite::NdArrayDesc", %"struct.tflite::NdArrayDesc"* %3, i64 0, i32 0, i64 1
  store i32 %273, i32* %274, align 4
  %275 = getelementptr inbounds %"struct.tflite::NdArrayDesc", %"struct.tflite::NdArrayDesc"* %3, i64 0, i32 1, i64 1
  store i32 %269, i32* %275, align 4
  %276 = load i32, i32* %272, align 4
  %277 = mul nsw i32 %276, %269
  %278 = select i1 %251, i32* %252, i32* %204
  %279 = load i32, i32* %278, align 4
  %280 = getelementptr inbounds %"struct.tflite::NdArrayDesc", %"struct.tflite::NdArrayDesc"* %3, i64 0, i32 0, i64 0
  store i32 %279, i32* %280, align 4
  %281 = getelementptr inbounds %"struct.tflite::NdArrayDesc", %"struct.tflite::NdArrayDesc"* %3, i64 0, i32 1, i64 0
  store i32 %277, i32* %281, align 4
  %282 = bitcast %union.anon* %16 to i32*
  %283 = select i1 %219, i32* %220, i32* %282
  %284 = load i32, i32* %283, align 4
  %285 = bitcast %union.anon* %121 to i32*
  %286 = select i1 %251, i32* %252, i32* %285
  %287 = load i32, i32* %286, align 4
  %288 = icmp eq i32 %284, %287
  br i1 %288, label %302, label %298

289:                                              ; preds = %338
  %290 = bitcast i32* %252 to i8*
  tail call void @_ZdaPv(i8* %290) #9
  br label %291

291:                                              ; preds = %338, %289
  call void @llvm.lifetime.end.p0i8(i64 32, i8* nonnull %112) #8
  %292 = xor i1 %219, true
  %293 = icmp eq i32* %220, null
  %294 = or i1 %293, %292
  br i1 %294, label %297, label %295

295:                                              ; preds = %291
  %296 = bitcast i32* %220 to i8*
  tail call void @_ZdaPv(i8* %296) #9
  br label %297

297:                                              ; preds = %291, %295
  call void @llvm.lifetime.end.p0i8(i64 32, i8* nonnull %7) #8
  ret void

298:                                              ; preds = %202
  %299 = icmp eq i32 %284, 1
  br i1 %299, label %300, label %301

300:                                              ; preds = %298
  store i32 0, i32* %249, align 4
  store i32 %287, i32* %248, align 4
  br label %302

301:                                              ; preds = %298
  store i32 0, i32* %281, align 4
  store i32 %284, i32* %280, align 4
  br label %302

302:                                              ; preds = %202, %300, %301
  %303 = load i32, i32* %240, align 4
  %304 = load i32, i32* %272, align 4
  %305 = icmp eq i32 %303, %304
  br i1 %305, label %310, label %306

306:                                              ; preds = %302
  %307 = icmp eq i32 %303, 1
  br i1 %307, label %309, label %308

308:                                              ; preds = %306
  store i32 0, i32* %275, align 4
  store i32 %303, i32* %274, align 4
  br label %310

309:                                              ; preds = %306
  store i32 0, i32* %243, align 4
  store i32 %304, i32* %242, align 4
  br label %310

310:                                              ; preds = %309, %308, %302
  %311 = getelementptr inbounds %"class.tflite::RuntimeShape", %"class.tflite::RuntimeShape"* %5, i64 0, i32 1, i32 1
  %312 = bitcast [16 x i8]* %311 to i32*
  %313 = select i1 %219, i32* %229, i32* %312
  %314 = load i32, i32* %313, align 4
  %315 = getelementptr inbounds %"class.tflite::RuntimeShape", %"class.tflite::RuntimeShape"* %6, i64 0, i32 1, i32 1
  %316 = bitcast [16 x i8]* %315 to i32*
  %317 = select i1 %251, i32* %261, i32* %316
  %318 = load i32, i32* %317, align 4
  %319 = icmp eq i32 %314, %318
  br i1 %319, label %324, label %320

320:                                              ; preds = %310
  %321 = icmp eq i32 %314, 1
  br i1 %321, label %323, label %322

322:                                              ; preds = %320
  store i32 0, i32* %267, align 4
  store i32 %314, i32* %266, align 4
  br label %324

323:                                              ; preds = %320
  store i32 0, i32* %235, align 4
  store i32 %318, i32* %234, align 4
  br label %324

324:                                              ; preds = %323, %322, %310
  %325 = getelementptr inbounds %"class.tflite::RuntimeShape", %"class.tflite::RuntimeShape"* %5, i64 0, i32 1, i32 1, i64 4
  %326 = bitcast i8* %325 to i32*
  %327 = select i1 %219, i32* %221, i32* %326
  %328 = load i32, i32* %327, align 4
  %329 = getelementptr inbounds %"class.tflite::RuntimeShape", %"class.tflite::RuntimeShape"* %6, i64 0, i32 1, i32 1, i64 4
  %330 = bitcast i8* %329 to i32*
  %331 = select i1 %251, i32* %253, i32* %330
  %332 = load i32, i32* %331, align 4
  %333 = icmp eq i32 %328, %332
  br i1 %333, label %338, label %334

334:                                              ; preds = %324
  %335 = icmp eq i32 %328, 1
  br i1 %335, label %337, label %336

336:                                              ; preds = %334
  store i32 0, i32* %259, align 4
  store i32 %328, i32* %258, align 4
  br label %338

337:                                              ; preds = %334
  store i32 0, i32* %227, align 4
  store i32 %332, i32* %226, align 4
  br label %338

338:                                              ; preds = %337, %336, %324
  %339 = xor i1 %251, true
  %340 = icmp eq i32* %252, null
  %341 = or i1 %340, %339
  br i1 %341, label %291, label %289
}

; Function Attrs: noreturn nounwind
declare void @abort() local_unnamed_addr #5

; Function Attrs: nobuiltin nounwind
declare void @_ZdaPv(i8*) local_unnamed_addr #6

; Function Attrs: nobuiltin nofree
declare noalias nonnull i8* @_Znam(i64) local_unnamed_addr #7

; Function Attrs: inlinehint nounwind ssp uwtable
define linkonce_odr hidden void @_ZN6tflite13reference_ops29BroadcastComparison4DSlowImplIfXadL_ZNS0_7EqualFnIfEEbT_S3_EEEEvRKNS_16ComparisonParamsERKNS_12RuntimeShapeEPKS3_S9_SB_S9_Pb(%"struct.tflite::ComparisonParams"* dereferenceable(32), %"class.tflite::RuntimeShape"* dereferenceable(32), float*, %"class.tflite::RuntimeShape"* dereferenceable(32), float*, %"class.tflite::RuntimeShape"* dereferenceable(32), i8*) local_unnamed_addr #4 comdat {
  %8 = alloca %"struct.tflite::NdArrayDesc", align 4
  %9 = alloca %"struct.tflite::NdArrayDesc", align 4
  %10 = alloca %"struct.tflite::reference_ops::BroadcastComparison4DSlowCommon", align 8
  %11 = bitcast %"struct.tflite::reference_ops::BroadcastComparison4DSlowCommon"* %10 to i8*
  call void @llvm.lifetime.start.p0i8(i64 96, i8* nonnull %11) #8
  call void @llvm.memset.p0i8.i64(i8* nonnull align 8 %11, i8 -86, i64 96, i1 false)
  %12 = getelementptr inbounds %"class.tflite::RuntimeShape", %"class.tflite::RuntimeShape"* %5, i64 0, i32 0
  %13 = bitcast %"struct.tflite::NdArrayDesc"* %8 to i8*
  call void @llvm.lifetime.start.p0i8(i64 32, i8* nonnull %13) #8, !noalias !860
  %14 = bitcast %"struct.tflite::NdArrayDesc"* %9 to i8*
  call void @llvm.memset.p0i8.i64(i8* nonnull align 4 %13, i8 -86, i64 32, i1 false) #8, !noalias !860
  call void @llvm.lifetime.start.p0i8(i64 32, i8* nonnull %14) #8, !noalias !860
  call void @llvm.memset.p0i8.i64(i8* nonnull align 4 %14, i8 -86, i64 32, i1 false) #8, !noalias !860
  call void @_ZN6tflite35NdArrayDescsForElementwiseBroadcastILi4EEEvRKNS_12RuntimeShapeES3_PNS_11NdArrayDescIXT_EEES6_(%"class.tflite::RuntimeShape"* dereferenceable(32) %1, %"class.tflite::RuntimeShape"* dereferenceable(32) %3, %"struct.tflite::NdArrayDesc"* nonnull %8, %"struct.tflite::NdArrayDesc"* nonnull %9) #8, !noalias !860
  %15 = getelementptr inbounds %"struct.tflite::reference_ops::BroadcastComparison4DSlowCommon", %"struct.tflite::reference_ops::BroadcastComparison4DSlowCommon"* %10, i64 0, i32 0, i32 0
  store i32 0, i32* %15, align 8, !alias.scope !863
  %16 = load i32, i32* %12, align 8, !noalias !863
  %17 = icmp sgt i32 %16, 4
  br i1 %17, label %18, label %19

18:                                               ; preds = %7
  call void @abort() #10, !noalias !863
  unreachable

19:                                               ; preds = %7
  store i32 4, i32* %15, align 8, !alias.scope !863
  %20 = sub i32 4, %16
  %21 = icmp sgt i32 %20, 0
  %22 = getelementptr inbounds %"struct.tflite::reference_ops::BroadcastComparison4DSlowCommon", %"struct.tflite::reference_ops::BroadcastComparison4DSlowCommon"* %10, i64 0, i32 0, i32 1
  br i1 %21, label %23, label %103

23:                                               ; preds = %19
  %24 = bitcast %union.anon* %22 to [5 x i32]*
  %25 = zext i32 %20 to i64
  %26 = icmp ult i32 %20, 8
  br i1 %26, label %96, label %27

27:                                               ; preds = %23
  %28 = and i64 %25, 4294967288
  %29 = add nsw i64 %28, -8
  %30 = lshr exact i64 %29, 3
  %31 = add nuw nsw i64 %30, 1
  %32 = and i64 %31, 7
  %33 = icmp ult i64 %29, 56
  br i1 %33, label %81, label %34

34:                                               ; preds = %27
  %35 = sub nsw i64 %31, %32
  br label %36

36:                                               ; preds = %36, %34
  %37 = phi i64 [ 0, %34 ], [ %78, %36 ]
  %38 = phi i64 [ %35, %34 ], [ %79, %36 ]
  %39 = getelementptr inbounds [5 x i32], [5 x i32]* %24, i64 0, i64 %37
  %40 = bitcast i32* %39 to <4 x i32>*
  store <4 x i32> <i32 1, i32 1, i32 1, i32 1>, <4 x i32>* %40, align 8, !alias.scope !863
  %41 = getelementptr inbounds i32, i32* %39, i64 4
  %42 = bitcast i32* %41 to <4 x i32>*
  store <4 x i32> <i32 1, i32 1, i32 1, i32 1>, <4 x i32>* %42, align 8, !alias.scope !863
  %43 = or i64 %37, 8
  %44 = getelementptr inbounds [5 x i32], [5 x i32]* %24, i64 0, i64 %43
  %45 = bitcast i32* %44 to <4 x i32>*
  store <4 x i32> <i32 1, i32 1, i32 1, i32 1>, <4 x i32>* %45, align 8, !alias.scope !863
  %46 = getelementptr inbounds i32, i32* %44, i64 4
  %47 = bitcast i32* %46 to <4 x i32>*
  store <4 x i32> <i32 1, i32 1, i32 1, i32 1>, <4 x i32>* %47, align 8, !alias.scope !863
  %48 = or i64 %37, 16
  %49 = getelementptr inbounds [5 x i32], [5 x i32]* %24, i64 0, i64 %48
  %50 = bitcast i32* %49 to <4 x i32>*
  store <4 x i32> <i32 1, i32 1, i32 1, i32 1>, <4 x i32>* %50, align 8, !alias.scope !863
  %51 = getelementptr inbounds i32, i32* %49, i64 4
  %52 = bitcast i32* %51 to <4 x i32>*
  store <4 x i32> <i32 1, i32 1, i32 1, i32 1>, <4 x i32>* %52, align 8, !alias.scope !863
  %53 = or i64 %37, 24
  %54 = getelementptr inbounds [5 x i32], [5 x i32]* %24, i64 0, i64 %53
  %55 = bitcast i32* %54 to <4 x i32>*
  store <4 x i32> <i32 1, i32 1, i32 1, i32 1>, <4 x i32>* %55, align 8, !alias.scope !863
  %56 = getelementptr inbounds i32, i32* %54, i64 4
  %57 = bitcast i32* %56 to <4 x i32>*
  store <4 x i32> <i32 1, i32 1, i32 1, i32 1>, <4 x i32>* %57, align 8, !alias.scope !863
  %58 = or i64 %37, 32
  %59 = getelementptr inbounds [5 x i32], [5 x i32]* %24, i64 0, i64 %58
  %60 = bitcast i32* %59 to <4 x i32>*
  store <4 x i32> <i32 1, i32 1, i32 1, i32 1>, <4 x i32>* %60, align 8, !alias.scope !863
  %61 = getelementptr inbounds i32, i32* %59, i64 4
  %62 = bitcast i32* %61 to <4 x i32>*
  store <4 x i32> <i32 1, i32 1, i32 1, i32 1>, <4 x i32>* %62, align 8, !alias.scope !863
  %63 = or i64 %37, 40
  %64 = getelementptr inbounds [5 x i32], [5 x i32]* %24, i64 0, i64 %63
  %65 = bitcast i32* %64 to <4 x i32>*
  store <4 x i32> <i32 1, i32 1, i32 1, i32 1>, <4 x i32>* %65, align 8, !alias.scope !863
  %66 = getelementptr inbounds i32, i32* %64, i64 4
  %67 = bitcast i32* %66 to <4 x i32>*
  store <4 x i32> <i32 1, i32 1, i32 1, i32 1>, <4 x i32>* %67, align 8, !alias.scope !863
  %68 = or i64 %37, 48
  %69 = getelementptr inbounds [5 x i32], [5 x i32]* %24, i64 0, i64 %68
  %70 = bitcast i32* %69 to <4 x i32>*
  store <4 x i32> <i32 1, i32 1, i32 1, i32 1>, <4 x i32>* %70, align 8, !alias.scope !863
  %71 = getelementptr inbounds i32, i32* %69, i64 4
  %72 = bitcast i32* %71 to <4 x i32>*
  store <4 x i32> <i32 1, i32 1, i32 1, i32 1>, <4 x i32>* %72, align 8, !alias.scope !863
  %73 = or i64 %37, 56
  %74 = getelementptr inbounds [5 x i32], [5 x i32]* %24, i64 0, i64 %73
  %75 = bitcast i32* %74 to <4 x i32>*
  store <4 x i32> <i32 1, i32 1, i32 1, i32 1>, <4 x i32>* %75, align 8, !alias.scope !863
  %76 = getelementptr inbounds i32, i32* %74, i64 4
  %77 = bitcast i32* %76 to <4 x i32>*
  store <4 x i32> <i32 1, i32 1, i32 1, i32 1>, <4 x i32>* %77, align 8, !alias.scope !863
  %78 = add i64 %37, 64
  %79 = add i64 %38, -8
  %80 = icmp eq i64 %79, 0
  br i1 %80, label %81, label %36, !llvm.loop !866

81:                                               ; preds = %36, %27
  %82 = phi i64 [ 0, %27 ], [ %78, %36 ]
  %83 = icmp eq i64 %32, 0
  br i1 %83, label %94, label %84

84:                                               ; preds = %81, %84
  %85 = phi i64 [ %91, %84 ], [ %82, %81 ]
  %86 = phi i64 [ %92, %84 ], [ %32, %81 ]
  %87 = getelementptr inbounds [5 x i32], [5 x i32]* %24, i64 0, i64 %85
  %88 = bitcast i32* %87 to <4 x i32>*
  store <4 x i32> <i32 1, i32 1, i32 1, i32 1>, <4 x i32>* %88, align 8, !alias.scope !863
  %89 = getelementptr inbounds i32, i32* %87, i64 4
  %90 = bitcast i32* %89 to <4 x i32>*
  store <4 x i32> <i32 1, i32 1, i32 1, i32 1>, <4 x i32>* %90, align 8, !alias.scope !863
  %91 = add i64 %85, 8
  %92 = add i64 %86, -1
  %93 = icmp eq i64 %92, 0
  br i1 %93, label %94, label %84, !llvm.loop !867

94:                                               ; preds = %84, %81
  %95 = icmp eq i64 %28, %25
  br i1 %95, label %103, label %96

96:                                               ; preds = %94, %23
  %97 = phi i64 [ 0, %23 ], [ %28, %94 ]
  br label %98

98:                                               ; preds = %96, %98
  %99 = phi i64 [ %101, %98 ], [ %97, %96 ]
  %100 = getelementptr inbounds [5 x i32], [5 x i32]* %24, i64 0, i64 %99
  store i32 1, i32* %100, align 4, !alias.scope !863
  %101 = add nuw nsw i64 %99, 1
  %102 = icmp eq i64 %101, %25
  br i1 %102, label %103, label %98, !llvm.loop !868

103:                                              ; preds = %98, %94, %19
  %104 = bitcast %union.anon* %22 to i32*
  %105 = sext i32 %20 to i64
  %106 = getelementptr inbounds i32, i32* %104, i64 %105
  %107 = bitcast i32* %106 to i8*
  %108 = icmp sgt i32 %16, 5
  %109 = getelementptr inbounds %"class.tflite::RuntimeShape", %"class.tflite::RuntimeShape"* %5, i64 0, i32 1
  %110 = getelementptr inbounds %union.anon, %union.anon* %109, i64 0, i32 0
  %111 = load i32*, i32** %110, align 8, !noalias !863
  %112 = bitcast %union.anon* %109 to i32*
  %113 = select i1 %108, i32* %111, i32* %112
  %114 = bitcast i32* %113 to i8*
  %115 = sext i32 %16 to i64
  %116 = shl nsw i64 %115, 2
  call void @llvm.memcpy.p0i8.p0i8.i64(i8* align 4 %107, i8* align 4 %114, i64 %116, i1 false) #8
  %117 = getelementptr inbounds %"struct.tflite::reference_ops::BroadcastComparison4DSlowCommon", %"struct.tflite::reference_ops::BroadcastComparison4DSlowCommon"* %10, i64 0, i32 1
  %118 = bitcast %"struct.tflite::NdArrayDesc"* %117 to i8*
  call void @llvm.memcpy.p0i8.p0i8.i64(i8* align 8 %118, i8* nonnull align 4 %13, i64 32, i1 false) #8
  %119 = getelementptr inbounds %"struct.tflite::reference_ops::BroadcastComparison4DSlowCommon", %"struct.tflite::reference_ops::BroadcastComparison4DSlowCommon"* %10, i64 0, i32 2
  %120 = bitcast %"struct.tflite::NdArrayDesc"* %119 to i8*
  call void @llvm.memcpy.p0i8.p0i8.i64(i8* align 8 %120, i8* nonnull align 4 %14, i64 32, i1 false) #8
  call void @llvm.lifetime.end.p0i8(i64 32, i8* nonnull %14) #8, !noalias !860
  call void @llvm.lifetime.end.p0i8(i64 32, i8* nonnull %13) #8, !noalias !860
  %121 = load i32, i32* %15, align 8
  %122 = icmp sgt i32 %121, 5
  %123 = getelementptr inbounds %union.anon, %union.anon* %22, i64 0, i32 0
  %124 = load i32*, i32** %123, align 8
  %125 = select i1 %122, i32* %124, i32* %104
  %126 = load i32, i32* %125, align 4
  %127 = icmp sgt i32 %126, 0
  br i1 %127, label %128, label %175

128:                                              ; preds = %103
  %129 = bitcast %union.anon* %22 to [5 x i32]*
  %130 = getelementptr inbounds [5 x i32], [5 x i32]* %129, i64 0, i64 1
  %131 = getelementptr inbounds %"struct.tflite::reference_ops::BroadcastComparison4DSlowCommon", %"struct.tflite::reference_ops::BroadcastComparison4DSlowCommon"* %10, i64 0, i32 0, i32 1, i32 1
  %132 = bitcast [16 x i8]* %131 to i32*
  %133 = getelementptr inbounds %"struct.tflite::reference_ops::BroadcastComparison4DSlowCommon", %"struct.tflite::reference_ops::BroadcastComparison4DSlowCommon"* %10, i64 0, i32 0, i32 1, i32 1, i64 4
  %134 = bitcast i8* %133 to i32*
  %135 = getelementptr inbounds %"struct.tflite::reference_ops::BroadcastComparison4DSlowCommon", %"struct.tflite::reference_ops::BroadcastComparison4DSlowCommon"* %10, i64 0, i32 1, i32 1, i64 0
  %136 = load i32, i32* %135, align 8
  %137 = getelementptr inbounds %"struct.tflite::reference_ops::BroadcastComparison4DSlowCommon", %"struct.tflite::reference_ops::BroadcastComparison4DSlowCommon"* %10, i64 0, i32 1, i32 1, i64 1
  %138 = load i32, i32* %137, align 4
  %139 = getelementptr inbounds %"struct.tflite::reference_ops::BroadcastComparison4DSlowCommon", %"struct.tflite::reference_ops::BroadcastComparison4DSlowCommon"* %10, i64 0, i32 1, i32 1, i64 2
  %140 = load i32, i32* %139, align 8
  %141 = getelementptr inbounds %"struct.tflite::reference_ops::BroadcastComparison4DSlowCommon", %"struct.tflite::reference_ops::BroadcastComparison4DSlowCommon"* %10, i64 0, i32 1, i32 1, i64 3
  %142 = load i32, i32* %141, align 4
  %143 = getelementptr inbounds %"struct.tflite::reference_ops::BroadcastComparison4DSlowCommon", %"struct.tflite::reference_ops::BroadcastComparison4DSlowCommon"* %10, i64 0, i32 2, i32 1, i64 0
  %144 = load i32, i32* %143, align 8
  %145 = getelementptr inbounds %"struct.tflite::reference_ops::BroadcastComparison4DSlowCommon", %"struct.tflite::reference_ops::BroadcastComparison4DSlowCommon"* %10, i64 0, i32 2, i32 1, i64 1
  %146 = load i32, i32* %145, align 4
  %147 = getelementptr inbounds %"struct.tflite::reference_ops::BroadcastComparison4DSlowCommon", %"struct.tflite::reference_ops::BroadcastComparison4DSlowCommon"* %10, i64 0, i32 2, i32 1, i64 2
  %148 = load i32, i32* %147, align 8
  %149 = getelementptr inbounds %"struct.tflite::reference_ops::BroadcastComparison4DSlowCommon", %"struct.tflite::reference_ops::BroadcastComparison4DSlowCommon"* %10, i64 0, i32 2, i32 1, i64 3
  %150 = load i32, i32* %149, align 4
  %151 = getelementptr inbounds i32, i32* %104, i64 1
  %152 = sext i32 %150 to i64
  %153 = sext i32 %142 to i64
  %154 = sext i32 %148 to i64
  %155 = sext i32 %140 to i64
  %156 = sext i32 %146 to i64
  %157 = sext i32 %138 to i64
  %158 = sext i32 %144 to i64
  %159 = sext i32 %136 to i64
  %160 = getelementptr inbounds i32, i32* %124, i64 1
  %161 = select i1 %122, i32* %160, i32* %130
  %162 = getelementptr inbounds i32, i32* %124, i64 2
  %163 = select i1 %122, i32* %162, i32* %132
  %164 = getelementptr inbounds i32, i32* %124, i64 3
  %165 = select i1 %122, i32* %164, i32* %134
  br label %166

166:                                              ; preds = %128, %199
  %167 = phi i32 [ %126, %128 ], [ %200, %199 ]
  %168 = phi i64 [ 0, %128 ], [ %201, %199 ]
  %169 = load i32, i32* %161, align 4
  %170 = icmp sgt i32 %169, 0
  br i1 %170, label %171, label %199

171:                                              ; preds = %166
  %172 = mul nsw i64 %168, %159
  %173 = mul nsw i64 %168, %158
  %174 = trunc i64 %168 to i32
  br label %182

175:                                              ; preds = %199, %103
  %176 = xor i1 %122, true
  %177 = icmp eq i32* %124, null
  %178 = or i1 %177, %176
  br i1 %178, label %181, label %179

179:                                              ; preds = %175
  %180 = bitcast i32* %124 to i8*
  call void @_ZdaPv(i8* %180) #9
  br label %181

181:                                              ; preds = %175, %179
  call void @llvm.lifetime.end.p0i8(i64 96, i8* nonnull %11) #8
  ret void

182:                                              ; preds = %171, %222
  %183 = phi i32 [ %169, %171 ], [ %223, %222 ]
  %184 = phi i64 [ 0, %171 ], [ %224, %222 ]
  %185 = load i32, i32* %163, align 4
  %186 = icmp sgt i32 %185, 0
  br i1 %186, label %187, label %222

187:                                              ; preds = %182
  %188 = mul nsw i64 %184, %157
  %189 = add nsw i64 %188, %172
  %190 = mul nsw i64 %184, %156
  %191 = add nsw i64 %190, %173
  %192 = load i32, i32* %151, align 4
  %193 = mul nsw i32 %192, %174
  %194 = trunc i64 %184 to i32
  %195 = add nsw i32 %193, %194
  %196 = load i32, i32* %165, align 4
  br label %204

197:                                              ; preds = %222
  %198 = load i32, i32* %125, align 4
  br label %199

199:                                              ; preds = %197, %166
  %200 = phi i32 [ %198, %197 ], [ %167, %166 ]
  %201 = add nuw nsw i64 %168, 1
  %202 = sext i32 %200 to i64
  %203 = icmp slt i64 %201, %202
  br i1 %203, label %166, label %175

204:                                              ; preds = %187, %229
  %205 = phi i32 [ %185, %187 ], [ %230, %229 ]
  %206 = phi i32 [ %196, %187 ], [ %231, %229 ]
  %207 = phi i64 [ 0, %187 ], [ %232, %229 ]
  %208 = icmp sgt i32 %206, 0
  br i1 %208, label %209, label %229

209:                                              ; preds = %204
  %210 = mul nsw i64 %207, %155
  %211 = add nsw i64 %189, %210
  %212 = mul nsw i64 %207, %154
  %213 = add nsw i64 %191, %212
  %214 = load i32, i32* %132, align 8
  %215 = mul nsw i32 %195, %214
  %216 = trunc i64 %207 to i32
  %217 = add nsw i32 %215, %216
  %218 = load i32, i32* %134, align 4
  %219 = mul nsw i32 %217, %218
  br label %235

220:                                              ; preds = %229
  %221 = load i32, i32* %161, align 4
  br label %222

222:                                              ; preds = %220, %182
  %223 = phi i32 [ %221, %220 ], [ %183, %182 ]
  %224 = add nuw nsw i64 %184, 1
  %225 = sext i32 %223 to i64
  %226 = icmp slt i64 %224, %225
  br i1 %226, label %182, label %197

227:                                              ; preds = %235
  %228 = load i32, i32* %163, align 4
  br label %229

229:                                              ; preds = %227, %204
  %230 = phi i32 [ %228, %227 ], [ %205, %204 ]
  %231 = phi i32 [ %252, %227 ], [ %206, %204 ]
  %232 = add nuw nsw i64 %207, 1
  %233 = sext i32 %230 to i64
  %234 = icmp slt i64 %232, %233
  br i1 %234, label %204, label %220

235:                                              ; preds = %209, %235
  %236 = phi i64 [ 0, %209 ], [ %251, %235 ]
  %237 = mul nsw i64 %236, %153
  %238 = add nsw i64 %211, %237
  %239 = getelementptr inbounds float, float* %2, i64 %238
  %240 = load float, float* %239, align 4
  %241 = mul nsw i64 %236, %152
  %242 = add nsw i64 %213, %241
  %243 = getelementptr inbounds float, float* %4, i64 %242
  %244 = load float, float* %243, align 4
  %245 = fcmp oeq float %240, %244
  %246 = trunc i64 %236 to i32
  %247 = add nsw i32 %219, %246
  %248 = sext i32 %247 to i64
  %249 = getelementptr inbounds i8, i8* %6, i64 %248
  %250 = zext i1 %245 to i8
  store i8 %250, i8* %249, align 1
  %251 = add nuw nsw i64 %236, 1
  %252 = load i32, i32* %165, align 4
  %253 = sext i32 %252 to i64
  %254 = icmp slt i64 %251, %253
  br i1 %254, label %235, label %227
}

; Function Attrs: inlinehint nounwind ssp uwtable
define linkonce_odr hidden void @_ZN6tflite13reference_ops29BroadcastComparison4DSlowImplIiXadL_ZNS0_7EqualFnIiEEbT_S3_EEEEvRKNS_16ComparisonParamsERKNS_12RuntimeShapeEPKS3_S9_SB_S9_Pb(%"struct.tflite::ComparisonParams"* dereferenceable(32), %"class.tflite::RuntimeShape"* dereferenceable(32), i32*, %"class.tflite::RuntimeShape"* dereferenceable(32), i32*, %"class.tflite::RuntimeShape"* dereferenceable(32), i8*) local_unnamed_addr #4 comdat {
  %8 = alloca %"struct.tflite::NdArrayDesc", align 4
  %9 = alloca %"struct.tflite::NdArrayDesc", align 4
  %10 = alloca %"struct.tflite::reference_ops::BroadcastComparison4DSlowCommon", align 8
  %11 = bitcast %"struct.tflite::reference_ops::BroadcastComparison4DSlowCommon"* %10 to i8*
  call void @llvm.lifetime.start.p0i8(i64 96, i8* nonnull %11) #8
  call void @llvm.memset.p0i8.i64(i8* nonnull align 8 %11, i8 -86, i64 96, i1 false)
  %12 = getelementptr inbounds %"class.tflite::RuntimeShape", %"class.tflite::RuntimeShape"* %5, i64 0, i32 0
  %13 = bitcast %"struct.tflite::NdArrayDesc"* %8 to i8*
  call void @llvm.lifetime.start.p0i8(i64 32, i8* nonnull %13) #8, !noalias !869
  %14 = bitcast %"struct.tflite::NdArrayDesc"* %9 to i8*
  call void @llvm.memset.p0i8.i64(i8* nonnull align 4 %13, i8 -86, i64 32, i1 false) #8, !noalias !869
  call void @llvm.lifetime.start.p0i8(i64 32, i8* nonnull %14) #8, !noalias !869
  call void @llvm.memset.p0i8.i64(i8* nonnull align 4 %14, i8 -86, i64 32, i1 false) #8, !noalias !869
  call void @_ZN6tflite35NdArrayDescsForElementwiseBroadcastILi4EEEvRKNS_12RuntimeShapeES3_PNS_11NdArrayDescIXT_EEES6_(%"class.tflite::RuntimeShape"* dereferenceable(32) %1, %"class.tflite::RuntimeShape"* dereferenceable(32) %3, %"struct.tflite::NdArrayDesc"* nonnull %8, %"struct.tflite::NdArrayDesc"* nonnull %9) #8, !noalias !869
  %15 = getelementptr inbounds %"struct.tflite::reference_ops::BroadcastComparison4DSlowCommon", %"struct.tflite::reference_ops::BroadcastComparison4DSlowCommon"* %10, i64 0, i32 0, i32 0
  store i32 0, i32* %15, align 8, !alias.scope !872
  %16 = load i32, i32* %12, align 8, !noalias !872
  %17 = icmp sgt i32 %16, 4
  br i1 %17, label %18, label %19

18:                                               ; preds = %7
  call void @abort() #10, !noalias !872
  unreachable

19:                                               ; preds = %7
  store i32 4, i32* %15, align 8, !alias.scope !872
  %20 = sub i32 4, %16
  %21 = icmp sgt i32 %20, 0
  %22 = getelementptr inbounds %"struct.tflite::reference_ops::BroadcastComparison4DSlowCommon", %"struct.tflite::reference_ops::BroadcastComparison4DSlowCommon"* %10, i64 0, i32 0, i32 1
  br i1 %21, label %23, label %103

23:                                               ; preds = %19
  %24 = bitcast %union.anon* %22 to [5 x i32]*
  %25 = zext i32 %20 to i64
  %26 = icmp ult i32 %20, 8
  br i1 %26, label %96, label %27

27:                                               ; preds = %23
  %28 = and i64 %25, 4294967288
  %29 = add nsw i64 %28, -8
  %30 = lshr exact i64 %29, 3
  %31 = add nuw nsw i64 %30, 1
  %32 = and i64 %31, 7
  %33 = icmp ult i64 %29, 56
  br i1 %33, label %81, label %34

34:                                               ; preds = %27
  %35 = sub nsw i64 %31, %32
  br label %36

36:                                               ; preds = %36, %34
  %37 = phi i64 [ 0, %34 ], [ %78, %36 ]
  %38 = phi i64 [ %35, %34 ], [ %79, %36 ]
  %39 = getelementptr inbounds [5 x i32], [5 x i32]* %24, i64 0, i64 %37
  %40 = bitcast i32* %39 to <4 x i32>*
  store <4 x i32> <i32 1, i32 1, i32 1, i32 1>, <4 x i32>* %40, align 8, !alias.scope !872
  %41 = getelementptr inbounds i32, i32* %39, i64 4
  %42 = bitcast i32* %41 to <4 x i32>*
  store <4 x i32> <i32 1, i32 1, i32 1, i32 1>, <4 x i32>* %42, align 8, !alias.scope !872
  %43 = or i64 %37, 8
  %44 = getelementptr inbounds [5 x i32], [5 x i32]* %24, i64 0, i64 %43
  %45 = bitcast i32* %44 to <4 x i32>*
  store <4 x i32> <i32 1, i32 1, i32 1, i32 1>, <4 x i32>* %45, align 8, !alias.scope !872
  %46 = getelementptr inbounds i32, i32* %44, i64 4
  %47 = bitcast i32* %46 to <4 x i32>*
  store <4 x i32> <i32 1, i32 1, i32 1, i32 1>, <4 x i32>* %47, align 8, !alias.scope !872
  %48 = or i64 %37, 16
  %49 = getelementptr inbounds [5 x i32], [5 x i32]* %24, i64 0, i64 %48
  %50 = bitcast i32* %49 to <4 x i32>*
  store <4 x i32> <i32 1, i32 1, i32 1, i32 1>, <4 x i32>* %50, align 8, !alias.scope !872
  %51 = getelementptr inbounds i32, i32* %49, i64 4
  %52 = bitcast i32* %51 to <4 x i32>*
  store <4 x i32> <i32 1, i32 1, i32 1, i32 1>, <4 x i32>* %52, align 8, !alias.scope !872
  %53 = or i64 %37, 24
  %54 = getelementptr inbounds [5 x i32], [5 x i32]* %24, i64 0, i64 %53
  %55 = bitcast i32* %54 to <4 x i32>*
  store <4 x i32> <i32 1, i32 1, i32 1, i32 1>, <4 x i32>* %55, align 8, !alias.scope !872
  %56 = getelementptr inbounds i32, i32* %54, i64 4
  %57 = bitcast i32* %56 to <4 x i32>*
  store <4 x i32> <i32 1, i32 1, i32 1, i32 1>, <4 x i32>* %57, align 8, !alias.scope !872
  %58 = or i64 %37, 32
  %59 = getelementptr inbounds [5 x i32], [5 x i32]* %24, i64 0, i64 %58
  %60 = bitcast i32* %59 to <4 x i32>*
  store <4 x i32> <i32 1, i32 1, i32 1, i32 1>, <4 x i32>* %60, align 8, !alias.scope !872
  %61 = getelementptr inbounds i32, i32* %59, i64 4
  %62 = bitcast i32* %61 to <4 x i32>*
  store <4 x i32> <i32 1, i32 1, i32 1, i32 1>, <4 x i32>* %62, align 8, !alias.scope !872
  %63 = or i64 %37, 40
  %64 = getelementptr inbounds [5 x i32], [5 x i32]* %24, i64 0, i64 %63
  %65 = bitcast i32* %64 to <4 x i32>*
  store <4 x i32> <i32 1, i32 1, i32 1, i32 1>, <4 x i32>* %65, align 8, !alias.scope !872
  %66 = getelementptr inbounds i32, i32* %64, i64 4
  %67 = bitcast i32* %66 to <4 x i32>*
  store <4 x i32> <i32 1, i32 1, i32 1, i32 1>, <4 x i32>* %67, align 8, !alias.scope !872
  %68 = or i64 %37, 48
  %69 = getelementptr inbounds [5 x i32], [5 x i32]* %24, i64 0, i64 %68
  %70 = bitcast i32* %69 to <4 x i32>*
  store <4 x i32> <i32 1, i32 1, i32 1, i32 1>, <4 x i32>* %70, align 8, !alias.scope !872
  %71 = getelementptr inbounds i32, i32* %69, i64 4
  %72 = bitcast i32* %71 to <4 x i32>*
  store <4 x i32> <i32 1, i32 1, i32 1, i32 1>, <4 x i32>* %72, align 8, !alias.scope !872
  %73 = or i64 %37, 56
  %74 = getelementptr inbounds [5 x i32], [5 x i32]* %24, i64 0, i64 %73
  %75 = bitcast i32* %74 to <4 x i32>*
  store <4 x i32> <i32 1, i32 1, i32 1, i32 1>, <4 x i32>* %75, align 8, !alias.scope !872
  %76 = getelementptr inbounds i32, i32* %74, i64 4
  %77 = bitcast i32* %76 to <4 x i32>*
  store <4 x i32> <i32 1, i32 1, i32 1, i32 1>, <4 x i32>* %77, align 8, !alias.scope !872
  %78 = add i64 %37, 64
  %79 = add i64 %38, -8
  %80 = icmp eq i64 %79, 0
  br i1 %80, label %81, label %36, !llvm.loop !875

81:                                               ; preds = %36, %27
  %82 = phi i64 [ 0, %27 ], [ %78, %36 ]
  %83 = icmp eq i64 %32, 0
  br i1 %83, label %94, label %84

84:                                               ; preds = %81, %84
  %85 = phi i64 [ %91, %84 ], [ %82, %81 ]
  %86 = phi i64 [ %92, %84 ], [ %32, %81 ]
  %87 = getelementptr inbounds [5 x i32], [5 x i32]* %24, i64 0, i64 %85
  %88 = bitcast i32* %87 to <4 x i32>*
  store <4 x i32> <i32 1, i32 1, i32 1, i32 1>, <4 x i32>* %88, align 8, !alias.scope !872
  %89 = getelementptr inbounds i32, i32* %87, i64 4
  %90 = bitcast i32* %89 to <4 x i32>*
  store <4 x i32> <i32 1, i32 1, i32 1, i32 1>, <4 x i32>* %90, align 8, !alias.scope !872
  %91 = add i64 %85, 8
  %92 = add i64 %86, -1
  %93 = icmp eq i64 %92, 0
  br i1 %93, label %94, label %84, !llvm.loop !876

94:                                               ; preds = %84, %81
  %95 = icmp eq i64 %28, %25
  br i1 %95, label %103, label %96

96:                                               ; preds = %94, %23
  %97 = phi i64 [ 0, %23 ], [ %28, %94 ]
  br label %98

98:                                               ; preds = %96, %98
  %99 = phi i64 [ %101, %98 ], [ %97, %96 ]
  %100 = getelementptr inbounds [5 x i32], [5 x i32]* %24, i64 0, i64 %99
  store i32 1, i32* %100, align 4, !alias.scope !872
  %101 = add nuw nsw i64 %99, 1
  %102 = icmp eq i64 %101, %25
  br i1 %102, label %103, label %98, !llvm.loop !877

103:                                              ; preds = %98, %94, %19
  %104 = bitcast %union.anon* %22 to i32*
  %105 = sext i32 %20 to i64
  %106 = getelementptr inbounds i32, i32* %104, i64 %105
  %107 = bitcast i32* %106 to i8*
  %108 = icmp sgt i32 %16, 5
  %109 = getelementptr inbounds %"class.tflite::RuntimeShape", %"class.tflite::RuntimeShape"* %5, i64 0, i32 1
  %110 = getelementptr inbounds %union.anon, %union.anon* %109, i64 0, i32 0
  %111 = load i32*, i32** %110, align 8, !noalias !872
  %112 = bitcast %union.anon* %109 to i32*
  %113 = select i1 %108, i32* %111, i32* %112
  %114 = bitcast i32* %113 to i8*
  %115 = sext i32 %16 to i64
  %116 = shl nsw i64 %115, 2
  call void @llvm.memcpy.p0i8.p0i8.i64(i8* align 4 %107, i8* align 4 %114, i64 %116, i1 false) #8
  %117 = getelementptr inbounds %"struct.tflite::reference_ops::BroadcastComparison4DSlowCommon", %"struct.tflite::reference_ops::BroadcastComparison4DSlowCommon"* %10, i64 0, i32 1
  %118 = bitcast %"struct.tflite::NdArrayDesc"* %117 to i8*
  call void @llvm.memcpy.p0i8.p0i8.i64(i8* align 8 %118, i8* nonnull align 4 %13, i64 32, i1 false) #8
  %119 = getelementptr inbounds %"struct.tflite::reference_ops::BroadcastComparison4DSlowCommon", %"struct.tflite::reference_ops::BroadcastComparison4DSlowCommon"* %10, i64 0, i32 2
  %120 = bitcast %"struct.tflite::NdArrayDesc"* %119 to i8*
  call void @llvm.memcpy.p0i8.p0i8.i64(i8* align 8 %120, i8* nonnull align 4 %14, i64 32, i1 false) #8
  call void @llvm.lifetime.end.p0i8(i64 32, i8* nonnull %14) #8, !noalias !869
  call void @llvm.lifetime.end.p0i8(i64 32, i8* nonnull %13) #8, !noalias !869
  %121 = load i32, i32* %15, align 8
  %122 = icmp sgt i32 %121, 5
  %123 = getelementptr inbounds %union.anon, %union.anon* %22, i64 0, i32 0
  %124 = load i32*, i32** %123, align 8
  %125 = select i1 %122, i32* %124, i32* %104
  %126 = load i32, i32* %125, align 4
  %127 = icmp sgt i32 %126, 0
  br i1 %127, label %128, label %175

128:                                              ; preds = %103
  %129 = bitcast %union.anon* %22 to [5 x i32]*
  %130 = getelementptr inbounds [5 x i32], [5 x i32]* %129, i64 0, i64 1
  %131 = getelementptr inbounds %"struct.tflite::reference_ops::BroadcastComparison4DSlowCommon", %"struct.tflite::reference_ops::BroadcastComparison4DSlowCommon"* %10, i64 0, i32 0, i32 1, i32 1
  %132 = bitcast [16 x i8]* %131 to i32*
  %133 = getelementptr inbounds %"struct.tflite::reference_ops::BroadcastComparison4DSlowCommon", %"struct.tflite::reference_ops::BroadcastComparison4DSlowCommon"* %10, i64 0, i32 0, i32 1, i32 1, i64 4
  %134 = bitcast i8* %133 to i32*
  %135 = getelementptr inbounds %"struct.tflite::reference_ops::BroadcastComparison4DSlowCommon", %"struct.tflite::reference_ops::BroadcastComparison4DSlowCommon"* %10, i64 0, i32 1, i32 1, i64 0
  %136 = load i32, i32* %135, align 8
  %137 = getelementptr inbounds %"struct.tflite::reference_ops::BroadcastComparison4DSlowCommon", %"struct.tflite::reference_ops::BroadcastComparison4DSlowCommon"* %10, i64 0, i32 1, i32 1, i64 1
  %138 = load i32, i32* %137, align 4
  %139 = getelementptr inbounds %"struct.tflite::reference_ops::BroadcastComparison4DSlowCommon", %"struct.tflite::reference_ops::BroadcastComparison4DSlowCommon"* %10, i64 0, i32 1, i32 1, i64 2
  %140 = load i32, i32* %139, align 8
  %141 = getelementptr inbounds %"struct.tflite::reference_ops::BroadcastComparison4DSlowCommon", %"struct.tflite::reference_ops::BroadcastComparison4DSlowCommon"* %10, i64 0, i32 1, i32 1, i64 3
  %142 = load i32, i32* %141, align 4
  %143 = getelementptr inbounds %"struct.tflite::reference_ops::BroadcastComparison4DSlowCommon", %"struct.tflite::reference_ops::BroadcastComparison4DSlowCommon"* %10, i64 0, i32 2, i32 1, i64 0
  %144 = load i32, i32* %143, align 8
  %145 = getelementptr inbounds %"struct.tflite::reference_ops::BroadcastComparison4DSlowCommon", %"struct.tflite::reference_ops::BroadcastComparison4DSlowCommon"* %10, i64 0, i32 2, i32 1, i64 1
  %146 = load i32, i32* %145, align 4
  %147 = getelementptr inbounds %"struct.tflite::reference_ops::BroadcastComparison4DSlowCommon", %"struct.tflite::reference_ops::BroadcastComparison4DSlowCommon"* %10, i64 0, i32 2, i32 1, i64 2
  %148 = load i32, i32* %147, align 8
  %149 = getelementptr inbounds %"struct.tflite::reference_ops::BroadcastComparison4DSlowCommon", %"struct.tflite::reference_ops::BroadcastComparison4DSlowCommon"* %10, i64 0, i32 2, i32 1, i64 3
  %150 = load i32, i32* %149, align 4
  %151 = getelementptr inbounds i32, i32* %104, i64 1
  %152 = sext i32 %150 to i64
  %153 = sext i32 %142 to i64
  %154 = sext i32 %148 to i64
  %155 = sext i32 %140 to i64
  %156 = sext i32 %146 to i64
  %157 = sext i32 %138 to i64
  %158 = sext i32 %144 to i64
  %159 = sext i32 %136 to i64
  %160 = getelementptr inbounds i32, i32* %124, i64 1
  %161 = select i1 %122, i32* %160, i32* %130
  %162 = getelementptr inbounds i32, i32* %124, i64 2
  %163 = select i1 %122, i32* %162, i32* %132
  %164 = getelementptr inbounds i32, i32* %124, i64 3
  %165 = select i1 %122, i32* %164, i32* %134
  br label %166

166:                                              ; preds = %128, %199
  %167 = phi i32 [ %126, %128 ], [ %200, %199 ]
  %168 = phi i64 [ 0, %128 ], [ %201, %199 ]
  %169 = load i32, i32* %161, align 4
  %170 = icmp sgt i32 %169, 0
  br i1 %170, label %171, label %199

171:                                              ; preds = %166
  %172 = mul nsw i64 %168, %159
  %173 = mul nsw i64 %168, %158
  %174 = trunc i64 %168 to i32
  br label %182

175:                                              ; preds = %199, %103
  %176 = xor i1 %122, true
  %177 = icmp eq i32* %124, null
  %178 = or i1 %177, %176
  br i1 %178, label %181, label %179

179:                                              ; preds = %175
  %180 = bitcast i32* %124 to i8*
  call void @_ZdaPv(i8* %180) #9
  br label %181

181:                                              ; preds = %175, %179
  call void @llvm.lifetime.end.p0i8(i64 96, i8* nonnull %11) #8
  ret void

182:                                              ; preds = %171, %222
  %183 = phi i32 [ %169, %171 ], [ %223, %222 ]
  %184 = phi i64 [ 0, %171 ], [ %224, %222 ]
  %185 = load i32, i32* %163, align 4
  %186 = icmp sgt i32 %185, 0
  br i1 %186, label %187, label %222

187:                                              ; preds = %182
  %188 = mul nsw i64 %184, %157
  %189 = add nsw i64 %188, %172
  %190 = mul nsw i64 %184, %156
  %191 = add nsw i64 %190, %173
  %192 = load i32, i32* %151, align 4
  %193 = mul nsw i32 %192, %174
  %194 = trunc i64 %184 to i32
  %195 = add nsw i32 %193, %194
  %196 = load i32, i32* %165, align 4
  br label %204

197:                                              ; preds = %222
  %198 = load i32, i32* %125, align 4
  br label %199

199:                                              ; preds = %197, %166
  %200 = phi i32 [ %198, %197 ], [ %167, %166 ]
  %201 = add nuw nsw i64 %168, 1
  %202 = sext i32 %200 to i64
  %203 = icmp slt i64 %201, %202
  br i1 %203, label %166, label %175

204:                                              ; preds = %187, %229
  %205 = phi i32 [ %185, %187 ], [ %230, %229 ]
  %206 = phi i32 [ %196, %187 ], [ %231, %229 ]
  %207 = phi i64 [ 0, %187 ], [ %232, %229 ]
  %208 = icmp sgt i32 %206, 0
  br i1 %208, label %209, label %229

209:                                              ; preds = %204
  %210 = mul nsw i64 %207, %155
  %211 = add nsw i64 %189, %210
  %212 = mul nsw i64 %207, %154
  %213 = add nsw i64 %191, %212
  %214 = load i32, i32* %132, align 8
  %215 = mul nsw i32 %195, %214
  %216 = trunc i64 %207 to i32
  %217 = add nsw i32 %215, %216
  %218 = load i32, i32* %134, align 4
  %219 = mul nsw i32 %217, %218
  br label %235

220:                                              ; preds = %229
  %221 = load i32, i32* %161, align 4
  br label %222

222:                                              ; preds = %220, %182
  %223 = phi i32 [ %221, %220 ], [ %183, %182 ]
  %224 = add nuw nsw i64 %184, 1
  %225 = sext i32 %223 to i64
  %226 = icmp slt i64 %224, %225
  br i1 %226, label %182, label %197

227:                                              ; preds = %235
  %228 = load i32, i32* %163, align 4
  br label %229

229:                                              ; preds = %227, %204
  %230 = phi i32 [ %228, %227 ], [ %205, %204 ]
  %231 = phi i32 [ %252, %227 ], [ %206, %204 ]
  %232 = add nuw nsw i64 %207, 1
  %233 = sext i32 %230 to i64
  %234 = icmp slt i64 %232, %233
  br i1 %234, label %204, label %220

235:                                              ; preds = %209, %235
  %236 = phi i64 [ 0, %209 ], [ %251, %235 ]
  %237 = mul nsw i64 %236, %153
  %238 = add nsw i64 %211, %237
  %239 = getelementptr inbounds i32, i32* %2, i64 %238
  %240 = load i32, i32* %239, align 4
  %241 = mul nsw i64 %236, %152
  %242 = add nsw i64 %213, %241
  %243 = getelementptr inbounds i32, i32* %4, i64 %242
  %244 = load i32, i32* %243, align 4
  %245 = icmp eq i32 %240, %244
  %246 = trunc i64 %236 to i32
  %247 = add nsw i32 %219, %246
  %248 = sext i32 %247 to i64
  %249 = getelementptr inbounds i8, i8* %6, i64 %248
  %250 = zext i1 %245 to i8
  store i8 %250, i8* %249, align 1
  %251 = add nuw nsw i64 %236, 1
  %252 = load i32, i32* %165, align 4
  %253 = sext i32 %252 to i64
  %254 = icmp slt i64 %251, %253
  br i1 %254, label %235, label %227
}

; Function Attrs: inlinehint nounwind ssp uwtable
define linkonce_odr hidden void @_ZN6tflite13reference_ops29BroadcastComparison4DSlowImplIlXadL_ZNS0_7EqualFnIlEEbT_S3_EEEEvRKNS_16ComparisonParamsERKNS_12RuntimeShapeEPKS3_S9_SB_S9_Pb(%"struct.tflite::ComparisonParams"* dereferenceable(32), %"class.tflite::RuntimeShape"* dereferenceable(32), i64*, %"class.tflite::RuntimeShape"* dereferenceable(32), i64*, %"class.tflite::RuntimeShape"* dereferenceable(32), i8*) local_unnamed_addr #4 comdat {
  %8 = alloca %"struct.tflite::NdArrayDesc", align 4
  %9 = alloca %"struct.tflite::NdArrayDesc", align 4
  %10 = alloca %"struct.tflite::reference_ops::BroadcastComparison4DSlowCommon", align 8
  %11 = bitcast %"struct.tflite::reference_ops::BroadcastComparison4DSlowCommon"* %10 to i8*
  call void @llvm.lifetime.start.p0i8(i64 96, i8* nonnull %11) #8
  call void @llvm.memset.p0i8.i64(i8* nonnull align 8 %11, i8 -86, i64 96, i1 false)
  %12 = getelementptr inbounds %"class.tflite::RuntimeShape", %"class.tflite::RuntimeShape"* %5, i64 0, i32 0
  %13 = bitcast %"struct.tflite::NdArrayDesc"* %8 to i8*
  call void @llvm.lifetime.start.p0i8(i64 32, i8* nonnull %13) #8, !noalias !878
  %14 = bitcast %"struct.tflite::NdArrayDesc"* %9 to i8*
  call void @llvm.memset.p0i8.i64(i8* nonnull align 4 %13, i8 -86, i64 32, i1 false) #8, !noalias !878
  call void @llvm.lifetime.start.p0i8(i64 32, i8* nonnull %14) #8, !noalias !878
  call void @llvm.memset.p0i8.i64(i8* nonnull align 4 %14, i8 -86, i64 32, i1 false) #8, !noalias !878
  call void @_ZN6tflite35NdArrayDescsForElementwiseBroadcastILi4EEEvRKNS_12RuntimeShapeES3_PNS_11NdArrayDescIXT_EEES6_(%"class.tflite::RuntimeShape"* dereferenceable(32) %1, %"class.tflite::RuntimeShape"* dereferenceable(32) %3, %"struct.tflite::NdArrayDesc"* nonnull %8, %"struct.tflite::NdArrayDesc"* nonnull %9) #8, !noalias !878
  %15 = getelementptr inbounds %"struct.tflite::reference_ops::BroadcastComparison4DSlowCommon", %"struct.tflite::reference_ops::BroadcastComparison4DSlowCommon"* %10, i64 0, i32 0, i32 0
  store i32 0, i32* %15, align 8, !alias.scope !881
  %16 = load i32, i32* %12, align 8, !noalias !881
  %17 = icmp sgt i32 %16, 4
  br i1 %17, label %18, label %19

18:                                               ; preds = %7
  call void @abort() #10, !noalias !881
  unreachable

19:                                               ; preds = %7
  store i32 4, i32* %15, align 8, !alias.scope !881
  %20 = sub i32 4, %16
  %21 = icmp sgt i32 %20, 0
  %22 = getelementptr inbounds %"struct.tflite::reference_ops::BroadcastComparison4DSlowCommon", %"struct.tflite::reference_ops::BroadcastComparison4DSlowCommon"* %10, i64 0, i32 0, i32 1
  br i1 %21, label %23, label %103

23:                                               ; preds = %19
  %24 = bitcast %union.anon* %22 to [5 x i32]*
  %25 = zext i32 %20 to i64
  %26 = icmp ult i32 %20, 8
  br i1 %26, label %96, label %27

27:                                               ; preds = %23
  %28 = and i64 %25, 4294967288
  %29 = add nsw i64 %28, -8
  %30 = lshr exact i64 %29, 3
  %31 = add nuw nsw i64 %30, 1
  %32 = and i64 %31, 7
  %33 = icmp ult i64 %29, 56
  br i1 %33, label %81, label %34

34:                                               ; preds = %27
  %35 = sub nsw i64 %31, %32
  br label %36

36:                                               ; preds = %36, %34
  %37 = phi i64 [ 0, %34 ], [ %78, %36 ]
  %38 = phi i64 [ %35, %34 ], [ %79, %36 ]
  %39 = getelementptr inbounds [5 x i32], [5 x i32]* %24, i64 0, i64 %37
  %40 = bitcast i32* %39 to <4 x i32>*
  store <4 x i32> <i32 1, i32 1, i32 1, i32 1>, <4 x i32>* %40, align 8, !alias.scope !881
  %41 = getelementptr inbounds i32, i32* %39, i64 4
  %42 = bitcast i32* %41 to <4 x i32>*
  store <4 x i32> <i32 1, i32 1, i32 1, i32 1>, <4 x i32>* %42, align 8, !alias.scope !881
  %43 = or i64 %37, 8
  %44 = getelementptr inbounds [5 x i32], [5 x i32]* %24, i64 0, i64 %43
  %45 = bitcast i32* %44 to <4 x i32>*
  store <4 x i32> <i32 1, i32 1, i32 1, i32 1>, <4 x i32>* %45, align 8, !alias.scope !881
  %46 = getelementptr inbounds i32, i32* %44, i64 4
  %47 = bitcast i32* %46 to <4 x i32>*
  store <4 x i32> <i32 1, i32 1, i32 1, i32 1>, <4 x i32>* %47, align 8, !alias.scope !881
  %48 = or i64 %37, 16
  %49 = getelementptr inbounds [5 x i32], [5 x i32]* %24, i64 0, i64 %48
  %50 = bitcast i32* %49 to <4 x i32>*
  store <4 x i32> <i32 1, i32 1, i32 1, i32 1>, <4 x i32>* %50, align 8, !alias.scope !881
  %51 = getelementptr inbounds i32, i32* %49, i64 4
  %52 = bitcast i32* %51 to <4 x i32>*
  store <4 x i32> <i32 1, i32 1, i32 1, i32 1>, <4 x i32>* %52, align 8, !alias.scope !881
  %53 = or i64 %37, 24
  %54 = getelementptr inbounds [5 x i32], [5 x i32]* %24, i64 0, i64 %53
  %55 = bitcast i32* %54 to <4 x i32>*
  store <4 x i32> <i32 1, i32 1, i32 1, i32 1>, <4 x i32>* %55, align 8, !alias.scope !881
  %56 = getelementptr inbounds i32, i32* %54, i64 4
  %57 = bitcast i32* %56 to <4 x i32>*
  store <4 x i32> <i32 1, i32 1, i32 1, i32 1>, <4 x i32>* %57, align 8, !alias.scope !881
  %58 = or i64 %37, 32
  %59 = getelementptr inbounds [5 x i32], [5 x i32]* %24, i64 0, i64 %58
  %60 = bitcast i32* %59 to <4 x i32>*
  store <4 x i32> <i32 1, i32 1, i32 1, i32 1>, <4 x i32>* %60, align 8, !alias.scope !881
  %61 = getelementptr inbounds i32, i32* %59, i64 4
  %62 = bitcast i32* %61 to <4 x i32>*
  store <4 x i32> <i32 1, i32 1, i32 1, i32 1>, <4 x i32>* %62, align 8, !alias.scope !881
  %63 = or i64 %37, 40
  %64 = getelementptr inbounds [5 x i32], [5 x i32]* %24, i64 0, i64 %63
  %65 = bitcast i32* %64 to <4 x i32>*
  store <4 x i32> <i32 1, i32 1, i32 1, i32 1>, <4 x i32>* %65, align 8, !alias.scope !881
  %66 = getelementptr inbounds i32, i32* %64, i64 4
  %67 = bitcast i32* %66 to <4 x i32>*
  store <4 x i32> <i32 1, i32 1, i32 1, i32 1>, <4 x i32>* %67, align 8, !alias.scope !881
  %68 = or i64 %37, 48
  %69 = getelementptr inbounds [5 x i32], [5 x i32]* %24, i64 0, i64 %68
  %70 = bitcast i32* %69 to <4 x i32>*
  store <4 x i32> <i32 1, i32 1, i32 1, i32 1>, <4 x i32>* %70, align 8, !alias.scope !881
  %71 = getelementptr inbounds i32, i32* %69, i64 4
  %72 = bitcast i32* %71 to <4 x i32>*
  store <4 x i32> <i32 1, i32 1, i32 1, i32 1>, <4 x i32>* %72, align 8, !alias.scope !881
  %73 = or i64 %37, 56
  %74 = getelementptr inbounds [5 x i32], [5 x i32]* %24, i64 0, i64 %73
  %75 = bitcast i32* %74 to <4 x i32>*
  store <4 x i32> <i32 1, i32 1, i32 1, i32 1>, <4 x i32>* %75, align 8, !alias.scope !881
  %76 = getelementptr inbounds i32, i32* %74, i64 4
  %77 = bitcast i32* %76 to <4 x i32>*
  store <4 x i32> <i32 1, i32 1, i32 1, i32 1>, <4 x i32>* %77, align 8, !alias.scope !881
  %78 = add i64 %37, 64
  %79 = add i64 %38, -8
  %80 = icmp eq i64 %79, 0
  br i1 %80, label %81, label %36, !llvm.loop !884

81:                                               ; preds = %36, %27
  %82 = phi i64 [ 0, %27 ], [ %78, %36 ]
  %83 = icmp eq i64 %32, 0
  br i1 %83, label %94, label %84

84:                                               ; preds = %81, %84
  %85 = phi i64 [ %91, %84 ], [ %82, %81 ]
  %86 = phi i64 [ %92, %84 ], [ %32, %81 ]
  %87 = getelementptr inbounds [5 x i32], [5 x i32]* %24, i64 0, i64 %85
  %88 = bitcast i32* %87 to <4 x i32>*
  store <4 x i32> <i32 1, i32 1, i32 1, i32 1>, <4 x i32>* %88, align 8, !alias.scope !881
  %89 = getelementptr inbounds i32, i32* %87, i64 4
  %90 = bitcast i32* %89 to <4 x i32>*
  store <4 x i32> <i32 1, i32 1, i32 1, i32 1>, <4 x i32>* %90, align 8, !alias.scope !881
  %91 = add i64 %85, 8
  %92 = add i64 %86, -1
  %93 = icmp eq i64 %92, 0
  br i1 %93, label %94, label %84, !llvm.loop !885

94:                                               ; preds = %84, %81
  %95 = icmp eq i64 %28, %25
  br i1 %95, label %103, label %96

96:                                               ; preds = %94, %23
  %97 = phi i64 [ 0, %23 ], [ %28, %94 ]
  br label %98

98:                                               ; preds = %96, %98
  %99 = phi i64 [ %101, %98 ], [ %97, %96 ]
  %100 = getelementptr inbounds [5 x i32], [5 x i32]* %24, i64 0, i64 %99
  store i32 1, i32* %100, align 4, !alias.scope !881
  %101 = add nuw nsw i64 %99, 1
  %102 = icmp eq i64 %101, %25
  br i1 %102, label %103, label %98, !llvm.loop !886

103:                                              ; preds = %98, %94, %19
  %104 = bitcast %union.anon* %22 to i32*
  %105 = sext i32 %20 to i64
  %106 = getelementptr inbounds i32, i32* %104, i64 %105
  %107 = bitcast i32* %106 to i8*
  %108 = icmp sgt i32 %16, 5
  %109 = getelementptr inbounds %"class.tflite::RuntimeShape", %"class.tflite::RuntimeShape"* %5, i64 0, i32 1
  %110 = getelementptr inbounds %union.anon, %union.anon* %109, i64 0, i32 0
  %111 = load i32*, i32** %110, align 8, !noalias !881
  %112 = bitcast %union.anon* %109 to i32*
  %113 = select i1 %108, i32* %111, i32* %112
  %114 = bitcast i32* %113 to i8*
  %115 = sext i32 %16 to i64
  %116 = shl nsw i64 %115, 2
  call void @llvm.memcpy.p0i8.p0i8.i64(i8* align 4 %107, i8* align 4 %114, i64 %116, i1 false) #8
  %117 = getelementptr inbounds %"struct.tflite::reference_ops::BroadcastComparison4DSlowCommon", %"struct.tflite::reference_ops::BroadcastComparison4DSlowCommon"* %10, i64 0, i32 1
  %118 = bitcast %"struct.tflite::NdArrayDesc"* %117 to i8*
  call void @llvm.memcpy.p0i8.p0i8.i64(i8* align 8 %118, i8* nonnull align 4 %13, i64 32, i1 false) #8
  %119 = getelementptr inbounds %"struct.tflite::reference_ops::BroadcastComparison4DSlowCommon", %"struct.tflite::reference_ops::BroadcastComparison4DSlowCommon"* %10, i64 0, i32 2
  %120 = bitcast %"struct.tflite::NdArrayDesc"* %119 to i8*
  call void @llvm.memcpy.p0i8.p0i8.i64(i8* align 8 %120, i8* nonnull align 4 %14, i64 32, i1 false) #8
  call void @llvm.lifetime.end.p0i8(i64 32, i8* nonnull %14) #8, !noalias !878
  call void @llvm.lifetime.end.p0i8(i64 32, i8* nonnull %13) #8, !noalias !878
  %121 = load i32, i32* %15, align 8
  %122 = icmp sgt i32 %121, 5
  %123 = getelementptr inbounds %union.anon, %union.anon* %22, i64 0, i32 0
  %124 = load i32*, i32** %123, align 8
  %125 = select i1 %122, i32* %124, i32* %104
  %126 = load i32, i32* %125, align 4
  %127 = icmp sgt i32 %126, 0
  br i1 %127, label %128, label %175

128:                                              ; preds = %103
  %129 = bitcast %union.anon* %22 to [5 x i32]*
  %130 = getelementptr inbounds [5 x i32], [5 x i32]* %129, i64 0, i64 1
  %131 = getelementptr inbounds %"struct.tflite::reference_ops::BroadcastComparison4DSlowCommon", %"struct.tflite::reference_ops::BroadcastComparison4DSlowCommon"* %10, i64 0, i32 0, i32 1, i32 1
  %132 = bitcast [16 x i8]* %131 to i32*
  %133 = getelementptr inbounds %"struct.tflite::reference_ops::BroadcastComparison4DSlowCommon", %"struct.tflite::reference_ops::BroadcastComparison4DSlowCommon"* %10, i64 0, i32 0, i32 1, i32 1, i64 4
  %134 = bitcast i8* %133 to i32*
  %135 = getelementptr inbounds %"struct.tflite::reference_ops::BroadcastComparison4DSlowCommon", %"struct.tflite::reference_ops::BroadcastComparison4DSlowCommon"* %10, i64 0, i32 1, i32 1, i64 0
  %136 = load i32, i32* %135, align 8
  %137 = getelementptr inbounds %"struct.tflite::reference_ops::BroadcastComparison4DSlowCommon", %"struct.tflite::reference_ops::BroadcastComparison4DSlowCommon"* %10, i64 0, i32 1, i32 1, i64 1
  %138 = load i32, i32* %137, align 4
  %139 = getelementptr inbounds %"struct.tflite::reference_ops::BroadcastComparison4DSlowCommon", %"struct.tflite::reference_ops::BroadcastComparison4DSlowCommon"* %10, i64 0, i32 1, i32 1, i64 2
  %140 = load i32, i32* %139, align 8
  %141 = getelementptr inbounds %"struct.tflite::reference_ops::BroadcastComparison4DSlowCommon", %"struct.tflite::reference_ops::BroadcastComparison4DSlowCommon"* %10, i64 0, i32 1, i32 1, i64 3
  %142 = load i32, i32* %141, align 4
  %143 = getelementptr inbounds %"struct.tflite::reference_ops::BroadcastComparison4DSlowCommon", %"struct.tflite::reference_ops::BroadcastComparison4DSlowCommon"* %10, i64 0, i32 2, i32 1, i64 0
  %144 = load i32, i32* %143, align 8
  %145 = getelementptr inbounds %"struct.tflite::reference_ops::BroadcastComparison4DSlowCommon", %"struct.tflite::reference_ops::BroadcastComparison4DSlowCommon"* %10, i64 0, i32 2, i32 1, i64 1
  %146 = load i32, i32* %145, align 4
  %147 = getelementptr inbounds %"struct.tflite::reference_ops::BroadcastComparison4DSlowCommon", %"struct.tflite::reference_ops::BroadcastComparison4DSlowCommon"* %10, i64 0, i32 2, i32 1, i64 2
  %148 = load i32, i32* %147, align 8
  %149 = getelementptr inbounds %"struct.tflite::reference_ops::BroadcastComparison4DSlowCommon", %"struct.tflite::reference_ops::BroadcastComparison4DSlowCommon"* %10, i64 0, i32 2, i32 1, i64 3
  %150 = load i32, i32* %149, align 4
  %151 = getelementptr inbounds i32, i32* %104, i64 1
  %152 = sext i32 %150 to i64
  %153 = sext i32 %142 to i64
  %154 = sext i32 %148 to i64
  %155 = sext i32 %140 to i64
  %156 = sext i32 %146 to i64
  %157 = sext i32 %138 to i64
  %158 = sext i32 %144 to i64
  %159 = sext i32 %136 to i64
  %160 = getelementptr inbounds i32, i32* %124, i64 1
  %161 = select i1 %122, i32* %160, i32* %130
  %162 = getelementptr inbounds i32, i32* %124, i64 2
  %163 = select i1 %122, i32* %162, i32* %132
  %164 = getelementptr inbounds i32, i32* %124, i64 3
  %165 = select i1 %122, i32* %164, i32* %134
  br label %166

166:                                              ; preds = %128, %199
  %167 = phi i32 [ %126, %128 ], [ %200, %199 ]
  %168 = phi i64 [ 0, %128 ], [ %201, %199 ]
  %169 = load i32, i32* %161, align 4
  %170 = icmp sgt i32 %169, 0
  br i1 %170, label %171, label %199

171:                                              ; preds = %166
  %172 = mul nsw i64 %168, %159
  %173 = mul nsw i64 %168, %158
  %174 = trunc i64 %168 to i32
  br label %182

175:                                              ; preds = %199, %103
  %176 = xor i1 %122, true
  %177 = icmp eq i32* %124, null
  %178 = or i1 %177, %176
  br i1 %178, label %181, label %179

179:                                              ; preds = %175
  %180 = bitcast i32* %124 to i8*
  call void @_ZdaPv(i8* %180) #9
  br label %181

181:                                              ; preds = %175, %179
  call void @llvm.lifetime.end.p0i8(i64 96, i8* nonnull %11) #8
  ret void

182:                                              ; preds = %171, %222
  %183 = phi i32 [ %169, %171 ], [ %223, %222 ]
  %184 = phi i64 [ 0, %171 ], [ %224, %222 ]
  %185 = load i32, i32* %163, align 4
  %186 = icmp sgt i32 %185, 0
  br i1 %186, label %187, label %222

187:                                              ; preds = %182
  %188 = mul nsw i64 %184, %157
  %189 = add nsw i64 %188, %172
  %190 = mul nsw i64 %184, %156
  %191 = add nsw i64 %190, %173
  %192 = load i32, i32* %151, align 4
  %193 = mul nsw i32 %192, %174
  %194 = trunc i64 %184 to i32
  %195 = add nsw i32 %193, %194
  %196 = load i32, i32* %165, align 4
  br label %204

197:                                              ; preds = %222
  %198 = load i32, i32* %125, align 4
  br label %199

199:                                              ; preds = %197, %166
  %200 = phi i32 [ %198, %197 ], [ %167, %166 ]
  %201 = add nuw nsw i64 %168, 1
  %202 = sext i32 %200 to i64
  %203 = icmp slt i64 %201, %202
  br i1 %203, label %166, label %175

204:                                              ; preds = %187, %229
  %205 = phi i32 [ %185, %187 ], [ %230, %229 ]
  %206 = phi i32 [ %196, %187 ], [ %231, %229 ]
  %207 = phi i64 [ 0, %187 ], [ %232, %229 ]
  %208 = icmp sgt i32 %206, 0
  br i1 %208, label %209, label %229

209:                                              ; preds = %204
  %210 = mul nsw i64 %207, %155
  %211 = add nsw i64 %189, %210
  %212 = mul nsw i64 %207, %154
  %213 = add nsw i64 %191, %212
  %214 = load i32, i32* %132, align 8
  %215 = mul nsw i32 %195, %214
  %216 = trunc i64 %207 to i32
  %217 = add nsw i32 %215, %216
  %218 = load i32, i32* %134, align 4
  %219 = mul nsw i32 %217, %218
  br label %235

220:                                              ; preds = %229
  %221 = load i32, i32* %161, align 4
  br label %222

222:                                              ; preds = %220, %182
  %223 = phi i32 [ %221, %220 ], [ %183, %182 ]
  %224 = add nuw nsw i64 %184, 1
  %225 = sext i32 %223 to i64
  %226 = icmp slt i64 %224, %225
  br i1 %226, label %182, label %197

227:                                              ; preds = %235
  %228 = load i32, i32* %163, align 4
  br label %229

229:                                              ; preds = %227, %204
  %230 = phi i32 [ %228, %227 ], [ %205, %204 ]
  %231 = phi i32 [ %252, %227 ], [ %206, %204 ]
  %232 = add nuw nsw i64 %207, 1
  %233 = sext i32 %230 to i64
  %234 = icmp slt i64 %232, %233
  br i1 %234, label %204, label %220

235:                                              ; preds = %209, %235
  %236 = phi i64 [ 0, %209 ], [ %251, %235 ]
  %237 = mul nsw i64 %236, %153
  %238 = add nsw i64 %211, %237
  %239 = getelementptr inbounds i64, i64* %2, i64 %238
  %240 = load i64, i64* %239, align 8
  %241 = mul nsw i64 %236, %152
  %242 = add nsw i64 %213, %241
  %243 = getelementptr inbounds i64, i64* %4, i64 %242
  %244 = load i64, i64* %243, align 8
  %245 = icmp eq i64 %240, %244
  %246 = trunc i64 %236 to i32
  %247 = add nsw i32 %219, %246
  %248 = sext i32 %247 to i64
  %249 = getelementptr inbounds i8, i8* %6, i64 %248
  %250 = zext i1 %245 to i8
  store i8 %250, i8* %249, align 1
  %251 = add nuw nsw i64 %236, 1
  %252 = load i32, i32* %165, align 4
  %253 = sext i32 %252 to i64
  %254 = icmp slt i64 %251, %253
  br i1 %254, label %235, label %227
}

declare void @_ZN6tflite35QuantizeMultiplierSmallerThanOneExpEdPiS0_(double, i32*, i32*) local_unnamed_addr #3

; Function Attrs: inlinehint nounwind ssp uwtable
define linkonce_odr hidden void @_ZN6tflite13reference_ops36BroadcastComparison4DSlowWithScalingIhXadL_ZNS0_7EqualFnIiEEbT_S3_EEEEvRKNS_16ComparisonParamsERKNS_12RuntimeShapeEPKS3_S9_SB_S9_Pb(%"struct.tflite::ComparisonParams"* dereferenceable(32), %"class.tflite::RuntimeShape"* dereferenceable(32), i8*, %"class.tflite::RuntimeShape"* dereferenceable(32), i8*, %"class.tflite::RuntimeShape"* dereferenceable(32), i8*) local_unnamed_addr #4 comdat {
  %8 = alloca %"struct.tflite::NdArrayDesc", align 4
  %9 = alloca %"struct.tflite::NdArrayDesc", align 4
  %10 = alloca %"struct.tflite::reference_ops::BroadcastComparison4DSlowCommon", align 8
  %11 = bitcast %"struct.tflite::reference_ops::BroadcastComparison4DSlowCommon"* %10 to i8*
  call void @llvm.lifetime.start.p0i8(i64 96, i8* nonnull %11) #8
  call void @llvm.memset.p0i8.i64(i8* nonnull align 8 %11, i8 -86, i64 96, i1 false)
  %12 = getelementptr inbounds %"class.tflite::RuntimeShape", %"class.tflite::RuntimeShape"* %5, i64 0, i32 0
  %13 = bitcast %"struct.tflite::NdArrayDesc"* %8 to i8*
  call void @llvm.lifetime.start.p0i8(i64 32, i8* nonnull %13) #8, !noalias !887
  %14 = bitcast %"struct.tflite::NdArrayDesc"* %9 to i8*
  call void @llvm.memset.p0i8.i64(i8* nonnull align 4 %13, i8 -86, i64 32, i1 false) #8, !noalias !887
  call void @llvm.lifetime.start.p0i8(i64 32, i8* nonnull %14) #8, !noalias !887
  call void @llvm.memset.p0i8.i64(i8* nonnull align 4 %14, i8 -86, i64 32, i1 false) #8, !noalias !887
  call void @_ZN6tflite35NdArrayDescsForElementwiseBroadcastILi4EEEvRKNS_12RuntimeShapeES3_PNS_11NdArrayDescIXT_EEES6_(%"class.tflite::RuntimeShape"* dereferenceable(32) %1, %"class.tflite::RuntimeShape"* dereferenceable(32) %3, %"struct.tflite::NdArrayDesc"* nonnull %8, %"struct.tflite::NdArrayDesc"* nonnull %9) #8, !noalias !887
  %15 = getelementptr inbounds %"struct.tflite::reference_ops::BroadcastComparison4DSlowCommon", %"struct.tflite::reference_ops::BroadcastComparison4DSlowCommon"* %10, i64 0, i32 0, i32 0
  store i32 0, i32* %15, align 8, !alias.scope !890
  %16 = load i32, i32* %12, align 8, !noalias !890
  %17 = icmp sgt i32 %16, 4
  br i1 %17, label %18, label %19

18:                                               ; preds = %7
  call void @abort() #10, !noalias !890
  unreachable

19:                                               ; preds = %7
  store i32 4, i32* %15, align 8, !alias.scope !890
  %20 = sub i32 4, %16
  %21 = icmp sgt i32 %20, 0
  %22 = getelementptr inbounds %"struct.tflite::reference_ops::BroadcastComparison4DSlowCommon", %"struct.tflite::reference_ops::BroadcastComparison4DSlowCommon"* %10, i64 0, i32 0, i32 1
  br i1 %21, label %23, label %103

23:                                               ; preds = %19
  %24 = bitcast %union.anon* %22 to [5 x i32]*
  %25 = zext i32 %20 to i64
  %26 = icmp ult i32 %20, 8
  br i1 %26, label %96, label %27

27:                                               ; preds = %23
  %28 = and i64 %25, 4294967288
  %29 = add nsw i64 %28, -8
  %30 = lshr exact i64 %29, 3
  %31 = add nuw nsw i64 %30, 1
  %32 = and i64 %31, 7
  %33 = icmp ult i64 %29, 56
  br i1 %33, label %81, label %34

34:                                               ; preds = %27
  %35 = sub nsw i64 %31, %32
  br label %36

36:                                               ; preds = %36, %34
  %37 = phi i64 [ 0, %34 ], [ %78, %36 ]
  %38 = phi i64 [ %35, %34 ], [ %79, %36 ]
  %39 = getelementptr inbounds [5 x i32], [5 x i32]* %24, i64 0, i64 %37
  %40 = bitcast i32* %39 to <4 x i32>*
  store <4 x i32> <i32 1, i32 1, i32 1, i32 1>, <4 x i32>* %40, align 8, !alias.scope !890
  %41 = getelementptr inbounds i32, i32* %39, i64 4
  %42 = bitcast i32* %41 to <4 x i32>*
  store <4 x i32> <i32 1, i32 1, i32 1, i32 1>, <4 x i32>* %42, align 8, !alias.scope !890
  %43 = or i64 %37, 8
  %44 = getelementptr inbounds [5 x i32], [5 x i32]* %24, i64 0, i64 %43
  %45 = bitcast i32* %44 to <4 x i32>*
  store <4 x i32> <i32 1, i32 1, i32 1, i32 1>, <4 x i32>* %45, align 8, !alias.scope !890
  %46 = getelementptr inbounds i32, i32* %44, i64 4
  %47 = bitcast i32* %46 to <4 x i32>*
  store <4 x i32> <i32 1, i32 1, i32 1, i32 1>, <4 x i32>* %47, align 8, !alias.scope !890
  %48 = or i64 %37, 16
  %49 = getelementptr inbounds [5 x i32], [5 x i32]* %24, i64 0, i64 %48
  %50 = bitcast i32* %49 to <4 x i32>*
  store <4 x i32> <i32 1, i32 1, i32 1, i32 1>, <4 x i32>* %50, align 8, !alias.scope !890
  %51 = getelementptr inbounds i32, i32* %49, i64 4
  %52 = bitcast i32* %51 to <4 x i32>*
  store <4 x i32> <i32 1, i32 1, i32 1, i32 1>, <4 x i32>* %52, align 8, !alias.scope !890
  %53 = or i64 %37, 24
  %54 = getelementptr inbounds [5 x i32], [5 x i32]* %24, i64 0, i64 %53
  %55 = bitcast i32* %54 to <4 x i32>*
  store <4 x i32> <i32 1, i32 1, i32 1, i32 1>, <4 x i32>* %55, align 8, !alias.scope !890
  %56 = getelementptr inbounds i32, i32* %54, i64 4
  %57 = bitcast i32* %56 to <4 x i32>*
  store <4 x i32> <i32 1, i32 1, i32 1, i32 1>, <4 x i32>* %57, align 8, !alias.scope !890
  %58 = or i64 %37, 32
  %59 = getelementptr inbounds [5 x i32], [5 x i32]* %24, i64 0, i64 %58
  %60 = bitcast i32* %59 to <4 x i32>*
  store <4 x i32> <i32 1, i32 1, i32 1, i32 1>, <4 x i32>* %60, align 8, !alias.scope !890
  %61 = getelementptr inbounds i32, i32* %59, i64 4
  %62 = bitcast i32* %61 to <4 x i32>*
  store <4 x i32> <i32 1, i32 1, i32 1, i32 1>, <4 x i32>* %62, align 8, !alias.scope !890
  %63 = or i64 %37, 40
  %64 = getelementptr inbounds [5 x i32], [5 x i32]* %24, i64 0, i64 %63
  %65 = bitcast i32* %64 to <4 x i32>*
  store <4 x i32> <i32 1, i32 1, i32 1, i32 1>, <4 x i32>* %65, align 8, !alias.scope !890
  %66 = getelementptr inbounds i32, i32* %64, i64 4
  %67 = bitcast i32* %66 to <4 x i32>*
  store <4 x i32> <i32 1, i32 1, i32 1, i32 1>, <4 x i32>* %67, align 8, !alias.scope !890
  %68 = or i64 %37, 48
  %69 = getelementptr inbounds [5 x i32], [5 x i32]* %24, i64 0, i64 %68
  %70 = bitcast i32* %69 to <4 x i32>*
  store <4 x i32> <i32 1, i32 1, i32 1, i32 1>, <4 x i32>* %70, align 8, !alias.scope !890
  %71 = getelementptr inbounds i32, i32* %69, i64 4
  %72 = bitcast i32* %71 to <4 x i32>*
  store <4 x i32> <i32 1, i32 1, i32 1, i32 1>, <4 x i32>* %72, align 8, !alias.scope !890
  %73 = or i64 %37, 56
  %74 = getelementptr inbounds [5 x i32], [5 x i32]* %24, i64 0, i64 %73
  %75 = bitcast i32* %74 to <4 x i32>*
  store <4 x i32> <i32 1, i32 1, i32 1, i32 1>, <4 x i32>* %75, align 8, !alias.scope !890
  %76 = getelementptr inbounds i32, i32* %74, i64 4
  %77 = bitcast i32* %76 to <4 x i32>*
  store <4 x i32> <i32 1, i32 1, i32 1, i32 1>, <4 x i32>* %77, align 8, !alias.scope !890
  %78 = add i64 %37, 64
  %79 = add i64 %38, -8
  %80 = icmp eq i64 %79, 0
  br i1 %80, label %81, label %36, !llvm.loop !893

81:                                               ; preds = %36, %27
  %82 = phi i64 [ 0, %27 ], [ %78, %36 ]
  %83 = icmp eq i64 %32, 0
  br i1 %83, label %94, label %84

84:                                               ; preds = %81, %84
  %85 = phi i64 [ %91, %84 ], [ %82, %81 ]
  %86 = phi i64 [ %92, %84 ], [ %32, %81 ]
  %87 = getelementptr inbounds [5 x i32], [5 x i32]* %24, i64 0, i64 %85
  %88 = bitcast i32* %87 to <4 x i32>*
  store <4 x i32> <i32 1, i32 1, i32 1, i32 1>, <4 x i32>* %88, align 8, !alias.scope !890
  %89 = getelementptr inbounds i32, i32* %87, i64 4
  %90 = bitcast i32* %89 to <4 x i32>*
  store <4 x i32> <i32 1, i32 1, i32 1, i32 1>, <4 x i32>* %90, align 8, !alias.scope !890
  %91 = add i64 %85, 8
  %92 = add i64 %86, -1
  %93 = icmp eq i64 %92, 0
  br i1 %93, label %94, label %84, !llvm.loop !894

94:                                               ; preds = %84, %81
  %95 = icmp eq i64 %28, %25
  br i1 %95, label %103, label %96

96:                                               ; preds = %94, %23
  %97 = phi i64 [ 0, %23 ], [ %28, %94 ]
  br label %98

98:                                               ; preds = %96, %98
  %99 = phi i64 [ %101, %98 ], [ %97, %96 ]
  %100 = getelementptr inbounds [5 x i32], [5 x i32]* %24, i64 0, i64 %99
  store i32 1, i32* %100, align 4, !alias.scope !890
  %101 = add nuw nsw i64 %99, 1
  %102 = icmp eq i64 %101, %25
  br i1 %102, label %103, label %98, !llvm.loop !895

103:                                              ; preds = %98, %94, %19
  %104 = bitcast %union.anon* %22 to i32*
  %105 = sext i32 %20 to i64
  %106 = getelementptr inbounds i32, i32* %104, i64 %105
  %107 = bitcast i32* %106 to i8*
  %108 = icmp sgt i32 %16, 5
  %109 = getelementptr inbounds %"class.tflite::RuntimeShape", %"class.tflite::RuntimeShape"* %5, i64 0, i32 1
  %110 = getelementptr inbounds %union.anon, %union.anon* %109, i64 0, i32 0
  %111 = load i32*, i32** %110, align 8, !noalias !890
  %112 = bitcast %union.anon* %109 to i32*
  %113 = select i1 %108, i32* %111, i32* %112
  %114 = bitcast i32* %113 to i8*
  %115 = sext i32 %16 to i64
  %116 = shl nsw i64 %115, 2
  call void @llvm.memcpy.p0i8.p0i8.i64(i8* align 4 %107, i8* align 4 %114, i64 %116, i1 false) #8
  %117 = getelementptr inbounds %"struct.tflite::reference_ops::BroadcastComparison4DSlowCommon", %"struct.tflite::reference_ops::BroadcastComparison4DSlowCommon"* %10, i64 0, i32 1
  %118 = bitcast %"struct.tflite::NdArrayDesc"* %117 to i8*
  call void @llvm.memcpy.p0i8.p0i8.i64(i8* align 8 %118, i8* nonnull align 4 %13, i64 32, i1 false) #8
  %119 = getelementptr inbounds %"struct.tflite::reference_ops::BroadcastComparison4DSlowCommon", %"struct.tflite::reference_ops::BroadcastComparison4DSlowCommon"* %10, i64 0, i32 2
  %120 = bitcast %"struct.tflite::NdArrayDesc"* %119 to i8*
  call void @llvm.memcpy.p0i8.p0i8.i64(i8* align 8 %120, i8* nonnull align 4 %14, i64 32, i1 false) #8
  call void @llvm.lifetime.end.p0i8(i64 32, i8* nonnull %14) #8, !noalias !887
  call void @llvm.lifetime.end.p0i8(i64 32, i8* nonnull %13) #8, !noalias !887
  %121 = getelementptr inbounds %"struct.tflite::ComparisonParams", %"struct.tflite::ComparisonParams"* %0, i64 0, i32 0
  %122 = load i32, i32* %121, align 4
  %123 = getelementptr inbounds %"struct.tflite::ComparisonParams", %"struct.tflite::ComparisonParams"* %0, i64 0, i32 1
  %124 = load i32, i32* %123, align 4
  %125 = getelementptr inbounds %"struct.tflite::ComparisonParams", %"struct.tflite::ComparisonParams"* %0, i64 0, i32 2
  %126 = load i32, i32* %125, align 4
  %127 = getelementptr inbounds %"struct.tflite::ComparisonParams", %"struct.tflite::ComparisonParams"* %0, i64 0, i32 4
  %128 = load i32, i32* %127, align 4
  %129 = getelementptr inbounds %"struct.tflite::ComparisonParams", %"struct.tflite::ComparisonParams"* %0, i64 0, i32 5
  %130 = load i32, i32* %129, align 4
  %131 = load i32, i32* %15, align 8
  %132 = icmp sgt i32 %131, 5
  %133 = getelementptr inbounds %union.anon, %union.anon* %22, i64 0, i32 0
  %134 = load i32*, i32** %133, align 8
  %135 = select i1 %132, i32* %134, i32* %104
  %136 = load i32, i32* %135, align 4
  %137 = icmp sgt i32 %136, 0
  br i1 %137, label %138, label %205

138:                                              ; preds = %103
  %139 = getelementptr inbounds %"struct.tflite::ComparisonParams", %"struct.tflite::ComparisonParams"* %0, i64 0, i32 6
  %140 = load i32, i32* %139, align 4
  %141 = getelementptr inbounds %"struct.tflite::ComparisonParams", %"struct.tflite::ComparisonParams"* %0, i64 0, i32 3
  %142 = load i32, i32* %141, align 4
  %143 = bitcast %union.anon* %22 to [5 x i32]*
  %144 = getelementptr inbounds [5 x i32], [5 x i32]* %143, i64 0, i64 1
  %145 = getelementptr inbounds %"struct.tflite::reference_ops::BroadcastComparison4DSlowCommon", %"struct.tflite::reference_ops::BroadcastComparison4DSlowCommon"* %10, i64 0, i32 0, i32 1, i32 1
  %146 = bitcast [16 x i8]* %145 to i32*
  %147 = getelementptr inbounds %"struct.tflite::reference_ops::BroadcastComparison4DSlowCommon", %"struct.tflite::reference_ops::BroadcastComparison4DSlowCommon"* %10, i64 0, i32 0, i32 1, i32 1, i64 4
  %148 = bitcast i8* %147 to i32*
  %149 = getelementptr inbounds %"struct.tflite::reference_ops::BroadcastComparison4DSlowCommon", %"struct.tflite::reference_ops::BroadcastComparison4DSlowCommon"* %10, i64 0, i32 1, i32 1, i64 0
  %150 = load i32, i32* %149, align 8
  %151 = getelementptr inbounds %"struct.tflite::reference_ops::BroadcastComparison4DSlowCommon", %"struct.tflite::reference_ops::BroadcastComparison4DSlowCommon"* %10, i64 0, i32 1, i32 1, i64 1
  %152 = load i32, i32* %151, align 4
  %153 = getelementptr inbounds %"struct.tflite::reference_ops::BroadcastComparison4DSlowCommon", %"struct.tflite::reference_ops::BroadcastComparison4DSlowCommon"* %10, i64 0, i32 1, i32 1, i64 2
  %154 = load i32, i32* %153, align 8
  %155 = getelementptr inbounds %"struct.tflite::reference_ops::BroadcastComparison4DSlowCommon", %"struct.tflite::reference_ops::BroadcastComparison4DSlowCommon"* %10, i64 0, i32 1, i32 1, i64 3
  %156 = load i32, i32* %155, align 4
  %157 = getelementptr inbounds %"struct.tflite::reference_ops::BroadcastComparison4DSlowCommon", %"struct.tflite::reference_ops::BroadcastComparison4DSlowCommon"* %10, i64 0, i32 2, i32 1, i64 0
  %158 = load i32, i32* %157, align 8
  %159 = getelementptr inbounds %"struct.tflite::reference_ops::BroadcastComparison4DSlowCommon", %"struct.tflite::reference_ops::BroadcastComparison4DSlowCommon"* %10, i64 0, i32 2, i32 1, i64 1
  %160 = load i32, i32* %159, align 4
  %161 = getelementptr inbounds %"struct.tflite::reference_ops::BroadcastComparison4DSlowCommon", %"struct.tflite::reference_ops::BroadcastComparison4DSlowCommon"* %10, i64 0, i32 2, i32 1, i64 2
  %162 = load i32, i32* %161, align 8
  %163 = getelementptr inbounds %"struct.tflite::reference_ops::BroadcastComparison4DSlowCommon", %"struct.tflite::reference_ops::BroadcastComparison4DSlowCommon"* %10, i64 0, i32 2, i32 1, i64 3
  %164 = load i32, i32* %163, align 4
  %165 = sext i32 %126 to i64
  %166 = sub nsw i32 0, %142
  %167 = zext i32 %166 to i64
  %168 = shl nsw i64 -1, %167
  %169 = trunc i64 %168 to i32
  %170 = xor i32 %169, -1
  %171 = ashr i32 %170, 1
  %172 = sext i32 %130 to i64
  %173 = sub nsw i32 0, %140
  %174 = zext i32 %173 to i64
  %175 = shl nsw i64 -1, %174
  %176 = trunc i64 %175 to i32
  %177 = xor i32 %176, -1
  %178 = ashr i32 %177, 1
  %179 = getelementptr inbounds i32, i32* %104, i64 1
  %180 = sext i32 %164 to i64
  %181 = sext i32 %156 to i64
  %182 = sext i32 %162 to i64
  %183 = sext i32 %154 to i64
  %184 = sext i32 %160 to i64
  %185 = sext i32 %152 to i64
  %186 = sext i32 %158 to i64
  %187 = sext i32 %150 to i64
  %188 = getelementptr inbounds i32, i32* %134, i64 1
  %189 = select i1 %132, i32* %188, i32* %144
  %190 = getelementptr inbounds i32, i32* %134, i64 2
  %191 = select i1 %132, i32* %190, i32* %146
  %192 = getelementptr inbounds i32, i32* %134, i64 3
  %193 = select i1 %132, i32* %192, i32* %148
  %194 = icmp eq i32 %126, -2147483648
  %195 = icmp eq i32 %130, -2147483648
  br label %196

196:                                              ; preds = %138, %229
  %197 = phi i32 [ %136, %138 ], [ %230, %229 ]
  %198 = phi i64 [ 0, %138 ], [ %231, %229 ]
  %199 = load i32, i32* %189, align 4
  %200 = icmp sgt i32 %199, 0
  br i1 %200, label %201, label %229

201:                                              ; preds = %196
  %202 = mul nsw i64 %198, %187
  %203 = mul nsw i64 %198, %186
  %204 = trunc i64 %198 to i32
  br label %212

205:                                              ; preds = %229, %103
  %206 = xor i1 %132, true
  %207 = icmp eq i32* %134, null
  %208 = or i1 %207, %206
  br i1 %208, label %211, label %209

209:                                              ; preds = %205
  %210 = bitcast i32* %134 to i8*
  call void @_ZdaPv(i8* %210) #9
  br label %211

211:                                              ; preds = %205, %209
  call void @llvm.lifetime.end.p0i8(i64 96, i8* nonnull %11) #8
  ret void

212:                                              ; preds = %201, %250
  %213 = phi i32 [ %199, %201 ], [ %251, %250 ]
  %214 = phi i64 [ 0, %201 ], [ %252, %250 ]
  %215 = load i32, i32* %191, align 4
  %216 = icmp sgt i32 %215, 0
  br i1 %216, label %217, label %250

217:                                              ; preds = %212
  %218 = mul nsw i64 %214, %185
  %219 = add nsw i64 %218, %202
  %220 = mul nsw i64 %214, %184
  %221 = add nsw i64 %220, %203
  %222 = load i32, i32* %179, align 4
  %223 = mul nsw i32 %222, %204
  %224 = trunc i64 %214 to i32
  %225 = add nsw i32 %223, %224
  %226 = load i32, i32* %193, align 4
  br label %234

227:                                              ; preds = %250
  %228 = load i32, i32* %135, align 4
  br label %229

229:                                              ; preds = %227, %196
  %230 = phi i32 [ %228, %227 ], [ %197, %196 ]
  %231 = add nuw nsw i64 %198, 1
  %232 = sext i32 %230 to i64
  %233 = icmp slt i64 %231, %232
  br i1 %233, label %196, label %205

234:                                              ; preds = %217, %257
  %235 = phi i32 [ %215, %217 ], [ %258, %257 ]
  %236 = phi i32 [ %226, %217 ], [ %259, %257 ]
  %237 = phi i64 [ 0, %217 ], [ %260, %257 ]
  %238 = icmp sgt i32 %236, 0
  br i1 %238, label %239, label %257

239:                                              ; preds = %234
  %240 = mul nsw i64 %237, %183
  %241 = add nsw i64 %219, %240
  %242 = mul nsw i64 %237, %182
  %243 = add nsw i64 %221, %242
  %244 = load i32, i32* %146, align 8
  %245 = mul nsw i32 %225, %244
  %246 = trunc i64 %237 to i32
  %247 = add nsw i32 %245, %246
  br label %263

248:                                              ; preds = %257
  %249 = load i32, i32* %189, align 4
  br label %250

250:                                              ; preds = %248, %212
  %251 = phi i32 [ %249, %248 ], [ %213, %212 ]
  %252 = add nuw nsw i64 %214, 1
  %253 = sext i32 %251 to i64
  %254 = icmp slt i64 %252, %253
  br i1 %254, label %212, label %227

255:                                              ; preds = %312
  %256 = load i32, i32* %191, align 4
  br label %257

257:                                              ; preds = %255, %234
  %258 = phi i32 [ %256, %255 ], [ %235, %234 ]
  %259 = phi i32 [ %330, %255 ], [ %236, %234 ]
  %260 = add nuw nsw i64 %237, 1
  %261 = sext i32 %258 to i64
  %262 = icmp slt i64 %260, %261
  br i1 %262, label %234, label %248

263:                                              ; preds = %239, %312
  %264 = phi i64 [ 0, %239 ], [ %329, %312 ]
  %265 = mul nsw i64 %264, %181
  %266 = add nsw i64 %241, %265
  %267 = getelementptr inbounds i8, i8* %2, i64 %266
  %268 = load i8, i8* %267, align 1
  %269 = zext i8 %268 to i32
  %270 = add nsw i32 %124, %269
  %271 = mul nsw i64 %264, %180
  %272 = add nsw i64 %243, %271
  %273 = getelementptr inbounds i8, i8* %4, i64 %272
  %274 = load i8, i8* %273, align 1
  %275 = zext i8 %274 to i32
  %276 = add nsw i32 %128, %275
  %277 = shl i32 %270, %122
  %278 = shl i32 %276, %122
  %279 = icmp eq i32 %277, %126
  br i1 %279, label %282, label %280

280:                                              ; preds = %263
  %281 = sext i32 %277 to i64
  br label %283

282:                                              ; preds = %263
  br i1 %194, label %291, label %283

283:                                              ; preds = %282, %280
  %284 = phi i64 [ %281, %280 ], [ %165, %282 ]
  %285 = mul nsw i64 %284, %165
  %286 = icmp sgt i64 %285, -1
  %287 = select i1 %286, i64 1073741824, i64 -1073741823
  %288 = add nsw i64 %287, %285
  %289 = sdiv i64 %288, 2147483648
  %290 = trunc i64 %289 to i32
  br label %291

291:                                              ; preds = %282, %283
  %292 = phi i32 [ %290, %283 ], [ 2147483647, %282 ]
  %293 = and i32 %292, %170
  %294 = lshr i32 %292, 31
  %295 = add nsw i32 %294, %171
  %296 = ashr i32 %292, %166
  %297 = icmp sgt i32 %293, %295
  %298 = zext i1 %297 to i32
  %299 = add nsw i32 %296, %298
  %300 = icmp eq i32 %278, %130
  br i1 %300, label %303, label %301

301:                                              ; preds = %291
  %302 = sext i32 %278 to i64
  br label %304

303:                                              ; preds = %291
  br i1 %195, label %312, label %304

304:                                              ; preds = %303, %301
  %305 = phi i64 [ %302, %301 ], [ %172, %303 ]
  %306 = mul nsw i64 %305, %172
  %307 = icmp sgt i64 %306, -1
  %308 = select i1 %307, i64 1073741824, i64 -1073741823
  %309 = add nsw i64 %308, %306
  %310 = sdiv i64 %309, 2147483648
  %311 = trunc i64 %310 to i32
  br label %312

312:                                              ; preds = %303, %304
  %313 = phi i32 [ %311, %304 ], [ 2147483647, %303 ]
  %314 = and i32 %313, %177
  %315 = lshr i32 %313, 31
  %316 = add nsw i32 %315, %178
  %317 = ashr i32 %313, %173
  %318 = icmp sgt i32 %314, %316
  %319 = zext i1 %318 to i32
  %320 = add nsw i32 %317, %319
  %321 = icmp eq i32 %299, %320
  %322 = load i32, i32* %148, align 4
  %323 = mul nsw i32 %247, %322
  %324 = trunc i64 %264 to i32
  %325 = add nsw i32 %323, %324
  %326 = sext i32 %325 to i64
  %327 = getelementptr inbounds i8, i8* %6, i64 %326
  %328 = zext i1 %321 to i8
  store i8 %328, i8* %327, align 1
  %329 = add nuw nsw i64 %264, 1
  %330 = load i32, i32* %193, align 4
  %331 = sext i32 %330 to i64
  %332 = icmp slt i64 %329, %331
  br i1 %332, label %263, label %255
}

; Function Attrs: inlinehint nounwind ssp uwtable
define linkonce_odr hidden void @_ZN6tflite13reference_ops36BroadcastComparison4DSlowWithScalingIaXadL_ZNS0_7EqualFnIiEEbT_S3_EEEEvRKNS_16ComparisonParamsERKNS_12RuntimeShapeEPKS3_S9_SB_S9_Pb(%"struct.tflite::ComparisonParams"* dereferenceable(32), %"class.tflite::RuntimeShape"* dereferenceable(32), i8*, %"class.tflite::RuntimeShape"* dereferenceable(32), i8*, %"class.tflite::RuntimeShape"* dereferenceable(32), i8*) local_unnamed_addr #4 comdat {
  %8 = alloca %"struct.tflite::NdArrayDesc", align 4
  %9 = alloca %"struct.tflite::NdArrayDesc", align 4
  %10 = alloca %"struct.tflite::reference_ops::BroadcastComparison4DSlowCommon", align 8
  %11 = bitcast %"struct.tflite::reference_ops::BroadcastComparison4DSlowCommon"* %10 to i8*
  call void @llvm.lifetime.start.p0i8(i64 96, i8* nonnull %11) #8
  call void @llvm.memset.p0i8.i64(i8* nonnull align 8 %11, i8 -86, i64 96, i1 false)
  %12 = getelementptr inbounds %"class.tflite::RuntimeShape", %"class.tflite::RuntimeShape"* %5, i64 0, i32 0
  %13 = bitcast %"struct.tflite::NdArrayDesc"* %8 to i8*
  call void @llvm.lifetime.start.p0i8(i64 32, i8* nonnull %13) #8, !noalias !896
  %14 = bitcast %"struct.tflite::NdArrayDesc"* %9 to i8*
  call void @llvm.memset.p0i8.i64(i8* nonnull align 4 %13, i8 -86, i64 32, i1 false) #8, !noalias !896
  call void @llvm.lifetime.start.p0i8(i64 32, i8* nonnull %14) #8, !noalias !896
  call void @llvm.memset.p0i8.i64(i8* nonnull align 4 %14, i8 -86, i64 32, i1 false) #8, !noalias !896
  call void @_ZN6tflite35NdArrayDescsForElementwiseBroadcastILi4EEEvRKNS_12RuntimeShapeES3_PNS_11NdArrayDescIXT_EEES6_(%"class.tflite::RuntimeShape"* dereferenceable(32) %1, %"class.tflite::RuntimeShape"* dereferenceable(32) %3, %"struct.tflite::NdArrayDesc"* nonnull %8, %"struct.tflite::NdArrayDesc"* nonnull %9) #8, !noalias !896
  %15 = getelementptr inbounds %"struct.tflite::reference_ops::BroadcastComparison4DSlowCommon", %"struct.tflite::reference_ops::BroadcastComparison4DSlowCommon"* %10, i64 0, i32 0, i32 0
  store i32 0, i32* %15, align 8, !alias.scope !899
  %16 = load i32, i32* %12, align 8, !noalias !899
  %17 = icmp sgt i32 %16, 4
  br i1 %17, label %18, label %19

18:                                               ; preds = %7
  call void @abort() #10, !noalias !899
  unreachable

19:                                               ; preds = %7
  store i32 4, i32* %15, align 8, !alias.scope !899
  %20 = sub i32 4, %16
  %21 = icmp sgt i32 %20, 0
  %22 = getelementptr inbounds %"struct.tflite::reference_ops::BroadcastComparison4DSlowCommon", %"struct.tflite::reference_ops::BroadcastComparison4DSlowCommon"* %10, i64 0, i32 0, i32 1
  br i1 %21, label %23, label %103

23:                                               ; preds = %19
  %24 = bitcast %union.anon* %22 to [5 x i32]*
  %25 = zext i32 %20 to i64
  %26 = icmp ult i32 %20, 8
  br i1 %26, label %96, label %27

27:                                               ; preds = %23
  %28 = and i64 %25, 4294967288
  %29 = add nsw i64 %28, -8
  %30 = lshr exact i64 %29, 3
  %31 = add nuw nsw i64 %30, 1
  %32 = and i64 %31, 7
  %33 = icmp ult i64 %29, 56
  br i1 %33, label %81, label %34

34:                                               ; preds = %27
  %35 = sub nsw i64 %31, %32
  br label %36

36:                                               ; preds = %36, %34
  %37 = phi i64 [ 0, %34 ], [ %78, %36 ]
  %38 = phi i64 [ %35, %34 ], [ %79, %36 ]
  %39 = getelementptr inbounds [5 x i32], [5 x i32]* %24, i64 0, i64 %37
  %40 = bitcast i32* %39 to <4 x i32>*
  store <4 x i32> <i32 1, i32 1, i32 1, i32 1>, <4 x i32>* %40, align 8, !alias.scope !899
  %41 = getelementptr inbounds i32, i32* %39, i64 4
  %42 = bitcast i32* %41 to <4 x i32>*
  store <4 x i32> <i32 1, i32 1, i32 1, i32 1>, <4 x i32>* %42, align 8, !alias.scope !899
  %43 = or i64 %37, 8
  %44 = getelementptr inbounds [5 x i32], [5 x i32]* %24, i64 0, i64 %43
  %45 = bitcast i32* %44 to <4 x i32>*
  store <4 x i32> <i32 1, i32 1, i32 1, i32 1>, <4 x i32>* %45, align 8, !alias.scope !899
  %46 = getelementptr inbounds i32, i32* %44, i64 4
  %47 = bitcast i32* %46 to <4 x i32>*
  store <4 x i32> <i32 1, i32 1, i32 1, i32 1>, <4 x i32>* %47, align 8, !alias.scope !899
  %48 = or i64 %37, 16
  %49 = getelementptr inbounds [5 x i32], [5 x i32]* %24, i64 0, i64 %48
  %50 = bitcast i32* %49 to <4 x i32>*
  store <4 x i32> <i32 1, i32 1, i32 1, i32 1>, <4 x i32>* %50, align 8, !alias.scope !899
  %51 = getelementptr inbounds i32, i32* %49, i64 4
  %52 = bitcast i32* %51 to <4 x i32>*
  store <4 x i32> <i32 1, i32 1, i32 1, i32 1>, <4 x i32>* %52, align 8, !alias.scope !899
  %53 = or i64 %37, 24
  %54 = getelementptr inbounds [5 x i32], [5 x i32]* %24, i64 0, i64 %53
  %55 = bitcast i32* %54 to <4 x i32>*
  store <4 x i32> <i32 1, i32 1, i32 1, i32 1>, <4 x i32>* %55, align 8, !alias.scope !899
  %56 = getelementptr inbounds i32, i32* %54, i64 4
  %57 = bitcast i32* %56 to <4 x i32>*
  store <4 x i32> <i32 1, i32 1, i32 1, i32 1>, <4 x i32>* %57, align 8, !alias.scope !899
  %58 = or i64 %37, 32
  %59 = getelementptr inbounds [5 x i32], [5 x i32]* %24, i64 0, i64 %58
  %60 = bitcast i32* %59 to <4 x i32>*
  store <4 x i32> <i32 1, i32 1, i32 1, i32 1>, <4 x i32>* %60, align 8, !alias.scope !899
  %61 = getelementptr inbounds i32, i32* %59, i64 4
  %62 = bitcast i32* %61 to <4 x i32>*
  store <4 x i32> <i32 1, i32 1, i32 1, i32 1>, <4 x i32>* %62, align 8, !alias.scope !899
  %63 = or i64 %37, 40
  %64 = getelementptr inbounds [5 x i32], [5 x i32]* %24, i64 0, i64 %63
  %65 = bitcast i32* %64 to <4 x i32>*
  store <4 x i32> <i32 1, i32 1, i32 1, i32 1>, <4 x i32>* %65, align 8, !alias.scope !899
  %66 = getelementptr inbounds i32, i32* %64, i64 4
  %67 = bitcast i32* %66 to <4 x i32>*
  store <4 x i32> <i32 1, i32 1, i32 1, i32 1>, <4 x i32>* %67, align 8, !alias.scope !899
  %68 = or i64 %37, 48
  %69 = getelementptr inbounds [5 x i32], [5 x i32]* %24, i64 0, i64 %68
  %70 = bitcast i32* %69 to <4 x i32>*
  store <4 x i32> <i32 1, i32 1, i32 1, i32 1>, <4 x i32>* %70, align 8, !alias.scope !899
  %71 = getelementptr inbounds i32, i32* %69, i64 4
  %72 = bitcast i32* %71 to <4 x i32>*
  store <4 x i32> <i32 1, i32 1, i32 1, i32 1>, <4 x i32>* %72, align 8, !alias.scope !899
  %73 = or i64 %37, 56
  %74 = getelementptr inbounds [5 x i32], [5 x i32]* %24, i64 0, i64 %73
  %75 = bitcast i32* %74 to <4 x i32>*
  store <4 x i32> <i32 1, i32 1, i32 1, i32 1>, <4 x i32>* %75, align 8, !alias.scope !899
  %76 = getelementptr inbounds i32, i32* %74, i64 4
  %77 = bitcast i32* %76 to <4 x i32>*
  store <4 x i32> <i32 1, i32 1, i32 1, i32 1>, <4 x i32>* %77, align 8, !alias.scope !899
  %78 = add i64 %37, 64
  %79 = add i64 %38, -8
  %80 = icmp eq i64 %79, 0
  br i1 %80, label %81, label %36, !llvm.loop !902

81:                                               ; preds = %36, %27
  %82 = phi i64 [ 0, %27 ], [ %78, %36 ]
  %83 = icmp eq i64 %32, 0
  br i1 %83, label %94, label %84

84:                                               ; preds = %81, %84
  %85 = phi i64 [ %91, %84 ], [ %82, %81 ]
  %86 = phi i64 [ %92, %84 ], [ %32, %81 ]
  %87 = getelementptr inbounds [5 x i32], [5 x i32]* %24, i64 0, i64 %85
  %88 = bitcast i32* %87 to <4 x i32>*
  store <4 x i32> <i32 1, i32 1, i32 1, i32 1>, <4 x i32>* %88, align 8, !alias.scope !899
  %89 = getelementptr inbounds i32, i32* %87, i64 4
  %90 = bitcast i32* %89 to <4 x i32>*
  store <4 x i32> <i32 1, i32 1, i32 1, i32 1>, <4 x i32>* %90, align 8, !alias.scope !899
  %91 = add i64 %85, 8
  %92 = add i64 %86, -1
  %93 = icmp eq i64 %92, 0
  br i1 %93, label %94, label %84, !llvm.loop !903

94:                                               ; preds = %84, %81
  %95 = icmp eq i64 %28, %25
  br i1 %95, label %103, label %96

96:                                               ; preds = %94, %23
  %97 = phi i64 [ 0, %23 ], [ %28, %94 ]
  br label %98

98:                                               ; preds = %96, %98
  %99 = phi i64 [ %101, %98 ], [ %97, %96 ]
  %100 = getelementptr inbounds [5 x i32], [5 x i32]* %24, i64 0, i64 %99
  store i32 1, i32* %100, align 4, !alias.scope !899
  %101 = add nuw nsw i64 %99, 1
  %102 = icmp eq i64 %101, %25
  br i1 %102, label %103, label %98, !llvm.loop !904

103:                                              ; preds = %98, %94, %19
  %104 = bitcast %union.anon* %22 to i32*
  %105 = sext i32 %20 to i64
  %106 = getelementptr inbounds i32, i32* %104, i64 %105
  %107 = bitcast i32* %106 to i8*
  %108 = icmp sgt i32 %16, 5
  %109 = getelementptr inbounds %"class.tflite::RuntimeShape", %"class.tflite::RuntimeShape"* %5, i64 0, i32 1
  %110 = getelementptr inbounds %union.anon, %union.anon* %109, i64 0, i32 0
  %111 = load i32*, i32** %110, align 8, !noalias !899
  %112 = bitcast %union.anon* %109 to i32*
  %113 = select i1 %108, i32* %111, i32* %112
  %114 = bitcast i32* %113 to i8*
  %115 = sext i32 %16 to i64
  %116 = shl nsw i64 %115, 2
  call void @llvm.memcpy.p0i8.p0i8.i64(i8* align 4 %107, i8* align 4 %114, i64 %116, i1 false) #8
  %117 = getelementptr inbounds %"struct.tflite::reference_ops::BroadcastComparison4DSlowCommon", %"struct.tflite::reference_ops::BroadcastComparison4DSlowCommon"* %10, i64 0, i32 1
  %118 = bitcast %"struct.tflite::NdArrayDesc"* %117 to i8*
  call void @llvm.memcpy.p0i8.p0i8.i64(i8* align 8 %118, i8* nonnull align 4 %13, i64 32, i1 false) #8
  %119 = getelementptr inbounds %"struct.tflite::reference_ops::BroadcastComparison4DSlowCommon", %"struct.tflite::reference_ops::BroadcastComparison4DSlowCommon"* %10, i64 0, i32 2
  %120 = bitcast %"struct.tflite::NdArrayDesc"* %119 to i8*
  call void @llvm.memcpy.p0i8.p0i8.i64(i8* align 8 %120, i8* nonnull align 4 %14, i64 32, i1 false) #8
  call void @llvm.lifetime.end.p0i8(i64 32, i8* nonnull %14) #8, !noalias !896
  call void @llvm.lifetime.end.p0i8(i64 32, i8* nonnull %13) #8, !noalias !896
  %121 = getelementptr inbounds %"struct.tflite::ComparisonParams", %"struct.tflite::ComparisonParams"* %0, i64 0, i32 0
  %122 = load i32, i32* %121, align 4
  %123 = getelementptr inbounds %"struct.tflite::ComparisonParams", %"struct.tflite::ComparisonParams"* %0, i64 0, i32 1
  %124 = load i32, i32* %123, align 4
  %125 = getelementptr inbounds %"struct.tflite::ComparisonParams", %"struct.tflite::ComparisonParams"* %0, i64 0, i32 2
  %126 = load i32, i32* %125, align 4
  %127 = getelementptr inbounds %"struct.tflite::ComparisonParams", %"struct.tflite::ComparisonParams"* %0, i64 0, i32 4
  %128 = load i32, i32* %127, align 4
  %129 = getelementptr inbounds %"struct.tflite::ComparisonParams", %"struct.tflite::ComparisonParams"* %0, i64 0, i32 5
  %130 = load i32, i32* %129, align 4
  %131 = load i32, i32* %15, align 8
  %132 = icmp sgt i32 %131, 5
  %133 = getelementptr inbounds %union.anon, %union.anon* %22, i64 0, i32 0
  %134 = load i32*, i32** %133, align 8
  %135 = select i1 %132, i32* %134, i32* %104
  %136 = load i32, i32* %135, align 4
  %137 = icmp sgt i32 %136, 0
  br i1 %137, label %138, label %205

138:                                              ; preds = %103
  %139 = getelementptr inbounds %"struct.tflite::ComparisonParams", %"struct.tflite::ComparisonParams"* %0, i64 0, i32 6
  %140 = load i32, i32* %139, align 4
  %141 = getelementptr inbounds %"struct.tflite::ComparisonParams", %"struct.tflite::ComparisonParams"* %0, i64 0, i32 3
  %142 = load i32, i32* %141, align 4
  %143 = bitcast %union.anon* %22 to [5 x i32]*
  %144 = getelementptr inbounds [5 x i32], [5 x i32]* %143, i64 0, i64 1
  %145 = getelementptr inbounds %"struct.tflite::reference_ops::BroadcastComparison4DSlowCommon", %"struct.tflite::reference_ops::BroadcastComparison4DSlowCommon"* %10, i64 0, i32 0, i32 1, i32 1
  %146 = bitcast [16 x i8]* %145 to i32*
  %147 = getelementptr inbounds %"struct.tflite::reference_ops::BroadcastComparison4DSlowCommon", %"struct.tflite::reference_ops::BroadcastComparison4DSlowCommon"* %10, i64 0, i32 0, i32 1, i32 1, i64 4
  %148 = bitcast i8* %147 to i32*
  %149 = getelementptr inbounds %"struct.tflite::reference_ops::BroadcastComparison4DSlowCommon", %"struct.tflite::reference_ops::BroadcastComparison4DSlowCommon"* %10, i64 0, i32 1, i32 1, i64 0
  %150 = load i32, i32* %149, align 8
  %151 = getelementptr inbounds %"struct.tflite::reference_ops::BroadcastComparison4DSlowCommon", %"struct.tflite::reference_ops::BroadcastComparison4DSlowCommon"* %10, i64 0, i32 1, i32 1, i64 1
  %152 = load i32, i32* %151, align 4
  %153 = getelementptr inbounds %"struct.tflite::reference_ops::BroadcastComparison4DSlowCommon", %"struct.tflite::reference_ops::BroadcastComparison4DSlowCommon"* %10, i64 0, i32 1, i32 1, i64 2
  %154 = load i32, i32* %153, align 8
  %155 = getelementptr inbounds %"struct.tflite::reference_ops::BroadcastComparison4DSlowCommon", %"struct.tflite::reference_ops::BroadcastComparison4DSlowCommon"* %10, i64 0, i32 1, i32 1, i64 3
  %156 = load i32, i32* %155, align 4
  %157 = getelementptr inbounds %"struct.tflite::reference_ops::BroadcastComparison4DSlowCommon", %"struct.tflite::reference_ops::BroadcastComparison4DSlowCommon"* %10, i64 0, i32 2, i32 1, i64 0
  %158 = load i32, i32* %157, align 8
  %159 = getelementptr inbounds %"struct.tflite::reference_ops::BroadcastComparison4DSlowCommon", %"struct.tflite::reference_ops::BroadcastComparison4DSlowCommon"* %10, i64 0, i32 2, i32 1, i64 1
  %160 = load i32, i32* %159, align 4
  %161 = getelementptr inbounds %"struct.tflite::reference_ops::BroadcastComparison4DSlowCommon", %"struct.tflite::reference_ops::BroadcastComparison4DSlowCommon"* %10, i64 0, i32 2, i32 1, i64 2
  %162 = load i32, i32* %161, align 8
  %163 = getelementptr inbounds %"struct.tflite::reference_ops::BroadcastComparison4DSlowCommon", %"struct.tflite::reference_ops::BroadcastComparison4DSlowCommon"* %10, i64 0, i32 2, i32 1, i64 3
  %164 = load i32, i32* %163, align 4
  %165 = sext i32 %126 to i64
  %166 = sub nsw i32 0, %142
  %167 = zext i32 %166 to i64
  %168 = shl nsw i64 -1, %167
  %169 = trunc i64 %168 to i32
  %170 = xor i32 %169, -1
  %171 = ashr i32 %170, 1
  %172 = sext i32 %130 to i64
  %173 = sub nsw i32 0, %140
  %174 = zext i32 %173 to i64
  %175 = shl nsw i64 -1, %174
  %176 = trunc i64 %175 to i32
  %177 = xor i32 %176, -1
  %178 = ashr i32 %177, 1
  %179 = getelementptr inbounds i32, i32* %104, i64 1
  %180 = sext i32 %164 to i64
  %181 = sext i32 %156 to i64
  %182 = sext i32 %162 to i64
  %183 = sext i32 %154 to i64
  %184 = sext i32 %160 to i64
  %185 = sext i32 %152 to i64
  %186 = sext i32 %158 to i64
  %187 = sext i32 %150 to i64
  %188 = getelementptr inbounds i32, i32* %134, i64 1
  %189 = select i1 %132, i32* %188, i32* %144
  %190 = getelementptr inbounds i32, i32* %134, i64 2
  %191 = select i1 %132, i32* %190, i32* %146
  %192 = getelementptr inbounds i32, i32* %134, i64 3
  %193 = select i1 %132, i32* %192, i32* %148
  %194 = icmp eq i32 %126, -2147483648
  %195 = icmp eq i32 %130, -2147483648
  br label %196

196:                                              ; preds = %138, %229
  %197 = phi i32 [ %136, %138 ], [ %230, %229 ]
  %198 = phi i64 [ 0, %138 ], [ %231, %229 ]
  %199 = load i32, i32* %189, align 4
  %200 = icmp sgt i32 %199, 0
  br i1 %200, label %201, label %229

201:                                              ; preds = %196
  %202 = mul nsw i64 %198, %187
  %203 = mul nsw i64 %198, %186
  %204 = trunc i64 %198 to i32
  br label %212

205:                                              ; preds = %229, %103
  %206 = xor i1 %132, true
  %207 = icmp eq i32* %134, null
  %208 = or i1 %207, %206
  br i1 %208, label %211, label %209

209:                                              ; preds = %205
  %210 = bitcast i32* %134 to i8*
  call void @_ZdaPv(i8* %210) #9
  br label %211

211:                                              ; preds = %205, %209
  call void @llvm.lifetime.end.p0i8(i64 96, i8* nonnull %11) #8
  ret void

212:                                              ; preds = %201, %250
  %213 = phi i32 [ %199, %201 ], [ %251, %250 ]
  %214 = phi i64 [ 0, %201 ], [ %252, %250 ]
  %215 = load i32, i32* %191, align 4
  %216 = icmp sgt i32 %215, 0
  br i1 %216, label %217, label %250

217:                                              ; preds = %212
  %218 = mul nsw i64 %214, %185
  %219 = add nsw i64 %218, %202
  %220 = mul nsw i64 %214, %184
  %221 = add nsw i64 %220, %203
  %222 = load i32, i32* %179, align 4
  %223 = mul nsw i32 %222, %204
  %224 = trunc i64 %214 to i32
  %225 = add nsw i32 %223, %224
  %226 = load i32, i32* %193, align 4
  br label %234

227:                                              ; preds = %250
  %228 = load i32, i32* %135, align 4
  br label %229

229:                                              ; preds = %227, %196
  %230 = phi i32 [ %228, %227 ], [ %197, %196 ]
  %231 = add nuw nsw i64 %198, 1
  %232 = sext i32 %230 to i64
  %233 = icmp slt i64 %231, %232
  br i1 %233, label %196, label %205

234:                                              ; preds = %217, %257
  %235 = phi i32 [ %215, %217 ], [ %258, %257 ]
  %236 = phi i32 [ %226, %217 ], [ %259, %257 ]
  %237 = phi i64 [ 0, %217 ], [ %260, %257 ]
  %238 = icmp sgt i32 %236, 0
  br i1 %238, label %239, label %257

239:                                              ; preds = %234
  %240 = mul nsw i64 %237, %183
  %241 = add nsw i64 %219, %240
  %242 = mul nsw i64 %237, %182
  %243 = add nsw i64 %221, %242
  %244 = load i32, i32* %146, align 8
  %245 = mul nsw i32 %225, %244
  %246 = trunc i64 %237 to i32
  %247 = add nsw i32 %245, %246
  br label %263

248:                                              ; preds = %257
  %249 = load i32, i32* %189, align 4
  br label %250

250:                                              ; preds = %248, %212
  %251 = phi i32 [ %249, %248 ], [ %213, %212 ]
  %252 = add nuw nsw i64 %214, 1
  %253 = sext i32 %251 to i64
  %254 = icmp slt i64 %252, %253
  br i1 %254, label %212, label %227

255:                                              ; preds = %312
  %256 = load i32, i32* %191, align 4
  br label %257

257:                                              ; preds = %255, %234
  %258 = phi i32 [ %256, %255 ], [ %235, %234 ]
  %259 = phi i32 [ %330, %255 ], [ %236, %234 ]
  %260 = add nuw nsw i64 %237, 1
  %261 = sext i32 %258 to i64
  %262 = icmp slt i64 %260, %261
  br i1 %262, label %234, label %248

263:                                              ; preds = %239, %312
  %264 = phi i64 [ 0, %239 ], [ %329, %312 ]
  %265 = mul nsw i64 %264, %181
  %266 = add nsw i64 %241, %265
  %267 = getelementptr inbounds i8, i8* %2, i64 %266
  %268 = load i8, i8* %267, align 1
  %269 = sext i8 %268 to i32
  %270 = add nsw i32 %124, %269
  %271 = mul nsw i64 %264, %180
  %272 = add nsw i64 %243, %271
  %273 = getelementptr inbounds i8, i8* %4, i64 %272
  %274 = load i8, i8* %273, align 1
  %275 = sext i8 %274 to i32
  %276 = add nsw i32 %128, %275
  %277 = shl i32 %270, %122
  %278 = shl i32 %276, %122
  %279 = icmp eq i32 %277, %126
  br i1 %279, label %282, label %280

280:                                              ; preds = %263
  %281 = sext i32 %277 to i64
  br label %283

282:                                              ; preds = %263
  br i1 %194, label %291, label %283

283:                                              ; preds = %282, %280
  %284 = phi i64 [ %281, %280 ], [ %165, %282 ]
  %285 = mul nsw i64 %284, %165
  %286 = icmp sgt i64 %285, -1
  %287 = select i1 %286, i64 1073741824, i64 -1073741823
  %288 = add nsw i64 %287, %285
  %289 = sdiv i64 %288, 2147483648
  %290 = trunc i64 %289 to i32
  br label %291

291:                                              ; preds = %282, %283
  %292 = phi i32 [ %290, %283 ], [ 2147483647, %282 ]
  %293 = and i32 %292, %170
  %294 = lshr i32 %292, 31
  %295 = add nsw i32 %294, %171
  %296 = ashr i32 %292, %166
  %297 = icmp sgt i32 %293, %295
  %298 = zext i1 %297 to i32
  %299 = add nsw i32 %296, %298
  %300 = icmp eq i32 %278, %130
  br i1 %300, label %303, label %301

301:                                              ; preds = %291
  %302 = sext i32 %278 to i64
  br label %304

303:                                              ; preds = %291
  br i1 %195, label %312, label %304

304:                                              ; preds = %303, %301
  %305 = phi i64 [ %302, %301 ], [ %172, %303 ]
  %306 = mul nsw i64 %305, %172
  %307 = icmp sgt i64 %306, -1
  %308 = select i1 %307, i64 1073741824, i64 -1073741823
  %309 = add nsw i64 %308, %306
  %310 = sdiv i64 %309, 2147483648
  %311 = trunc i64 %310 to i32
  br label %312

312:                                              ; preds = %303, %304
  %313 = phi i32 [ %311, %304 ], [ 2147483647, %303 ]
  %314 = and i32 %313, %177
  %315 = lshr i32 %313, 31
  %316 = add nsw i32 %315, %178
  %317 = ashr i32 %313, %173
  %318 = icmp sgt i32 %314, %316
  %319 = zext i1 %318 to i32
  %320 = add nsw i32 %317, %319
  %321 = icmp eq i32 %299, %320
  %322 = load i32, i32* %148, align 4
  %323 = mul nsw i32 %247, %322
  %324 = trunc i64 %264 to i32
  %325 = add nsw i32 %323, %324
  %326 = sext i32 %325 to i64
  %327 = getelementptr inbounds i8, i8* %6, i64 %326
  %328 = zext i1 %321 to i8
  store i8 %328, i8* %327, align 1
  %329 = add nuw nsw i64 %264, 1
  %330 = load i32, i32* %193, align 4
  %331 = sext i32 %330 to i64
  %332 = icmp slt i64 %329, %331
  br i1 %332, label %263, label %255
}

; Function Attrs: inlinehint nounwind ssp uwtable
define linkonce_odr hidden void @_ZN6tflite13reference_ops35BroadcastComparison4DSlowStringImplEPFbRKNS_9StringRefES3_ERKNS_12RuntimeShapeEPK12TfLiteTensorS8_SB_S8_Pb(i1 (%"struct.tflite::StringRef"*, %"struct.tflite::StringRef"*)*, %"class.tflite::RuntimeShape"* dereferenceable(32), %struct.TfLiteTensor*, %"class.tflite::RuntimeShape"* dereferenceable(32), %struct.TfLiteTensor*, %"class.tflite::RuntimeShape"* dereferenceable(32), i8*) local_unnamed_addr #4 comdat {
  %8 = alloca %"struct.tflite::NdArrayDesc", align 4
  %9 = alloca %"struct.tflite::NdArrayDesc", align 4
  %10 = alloca %"struct.tflite::reference_ops::BroadcastComparison4DSlowCommon", align 8
  %11 = alloca %"struct.tflite::StringRef", align 8
  %12 = alloca %"struct.tflite::StringRef", align 8
  %13 = bitcast %"struct.tflite::reference_ops::BroadcastComparison4DSlowCommon"* %10 to i8*
  call void @llvm.lifetime.start.p0i8(i64 96, i8* nonnull %13) #8
  call void @llvm.memset.p0i8.i64(i8* nonnull align 8 %13, i8 -86, i64 96, i1 false)
  %14 = getelementptr inbounds %"class.tflite::RuntimeShape", %"class.tflite::RuntimeShape"* %5, i64 0, i32 0
  %15 = bitcast %"struct.tflite::NdArrayDesc"* %8 to i8*
  call void @llvm.lifetime.start.p0i8(i64 32, i8* nonnull %15) #8, !noalias !905
  %16 = bitcast %"struct.tflite::NdArrayDesc"* %9 to i8*
  call void @llvm.memset.p0i8.i64(i8* nonnull align 4 %15, i8 -86, i64 32, i1 false) #8, !noalias !905
  call void @llvm.lifetime.start.p0i8(i64 32, i8* nonnull %16) #8, !noalias !905
  call void @llvm.memset.p0i8.i64(i8* nonnull align 4 %16, i8 -86, i64 32, i1 false) #8, !noalias !905
  call void @_ZN6tflite35NdArrayDescsForElementwiseBroadcastILi4EEEvRKNS_12RuntimeShapeES3_PNS_11NdArrayDescIXT_EEES6_(%"class.tflite::RuntimeShape"* dereferenceable(32) %1, %"class.tflite::RuntimeShape"* dereferenceable(32) %3, %"struct.tflite::NdArrayDesc"* nonnull %8, %"struct.tflite::NdArrayDesc"* nonnull %9) #8, !noalias !905
  %17 = getelementptr inbounds %"struct.tflite::reference_ops::BroadcastComparison4DSlowCommon", %"struct.tflite::reference_ops::BroadcastComparison4DSlowCommon"* %10, i64 0, i32 0, i32 0
  store i32 0, i32* %17, align 8, !alias.scope !908
  %18 = load i32, i32* %14, align 8, !noalias !908
  %19 = icmp sgt i32 %18, 4
  br i1 %19, label %20, label %21

20:                                               ; preds = %7
  call void @abort() #10, !noalias !908
  unreachable

21:                                               ; preds = %7
  store i32 4, i32* %17, align 8, !alias.scope !908
  %22 = sub i32 4, %18
  %23 = icmp sgt i32 %22, 0
  %24 = getelementptr inbounds %"struct.tflite::reference_ops::BroadcastComparison4DSlowCommon", %"struct.tflite::reference_ops::BroadcastComparison4DSlowCommon"* %10, i64 0, i32 0, i32 1
  br i1 %23, label %25, label %105

25:                                               ; preds = %21
  %26 = bitcast %union.anon* %24 to [5 x i32]*
  %27 = zext i32 %22 to i64
  %28 = icmp ult i32 %22, 8
  br i1 %28, label %98, label %29

29:                                               ; preds = %25
  %30 = and i64 %27, 4294967288
  %31 = add nsw i64 %30, -8
  %32 = lshr exact i64 %31, 3
  %33 = add nuw nsw i64 %32, 1
  %34 = and i64 %33, 7
  %35 = icmp ult i64 %31, 56
  br i1 %35, label %83, label %36

36:                                               ; preds = %29
  %37 = sub nsw i64 %33, %34
  br label %38

38:                                               ; preds = %38, %36
  %39 = phi i64 [ 0, %36 ], [ %80, %38 ]
  %40 = phi i64 [ %37, %36 ], [ %81, %38 ]
  %41 = getelementptr inbounds [5 x i32], [5 x i32]* %26, i64 0, i64 %39
  %42 = bitcast i32* %41 to <4 x i32>*
  store <4 x i32> <i32 1, i32 1, i32 1, i32 1>, <4 x i32>* %42, align 8, !alias.scope !908
  %43 = getelementptr inbounds i32, i32* %41, i64 4
  %44 = bitcast i32* %43 to <4 x i32>*
  store <4 x i32> <i32 1, i32 1, i32 1, i32 1>, <4 x i32>* %44, align 8, !alias.scope !908
  %45 = or i64 %39, 8
  %46 = getelementptr inbounds [5 x i32], [5 x i32]* %26, i64 0, i64 %45
  %47 = bitcast i32* %46 to <4 x i32>*
  store <4 x i32> <i32 1, i32 1, i32 1, i32 1>, <4 x i32>* %47, align 8, !alias.scope !908
  %48 = getelementptr inbounds i32, i32* %46, i64 4
  %49 = bitcast i32* %48 to <4 x i32>*
  store <4 x i32> <i32 1, i32 1, i32 1, i32 1>, <4 x i32>* %49, align 8, !alias.scope !908
  %50 = or i64 %39, 16
  %51 = getelementptr inbounds [5 x i32], [5 x i32]* %26, i64 0, i64 %50
  %52 = bitcast i32* %51 to <4 x i32>*
  store <4 x i32> <i32 1, i32 1, i32 1, i32 1>, <4 x i32>* %52, align 8, !alias.scope !908
  %53 = getelementptr inbounds i32, i32* %51, i64 4
  %54 = bitcast i32* %53 to <4 x i32>*
  store <4 x i32> <i32 1, i32 1, i32 1, i32 1>, <4 x i32>* %54, align 8, !alias.scope !908
  %55 = or i64 %39, 24
  %56 = getelementptr inbounds [5 x i32], [5 x i32]* %26, i64 0, i64 %55
  %57 = bitcast i32* %56 to <4 x i32>*
  store <4 x i32> <i32 1, i32 1, i32 1, i32 1>, <4 x i32>* %57, align 8, !alias.scope !908
  %58 = getelementptr inbounds i32, i32* %56, i64 4
  %59 = bitcast i32* %58 to <4 x i32>*
  store <4 x i32> <i32 1, i32 1, i32 1, i32 1>, <4 x i32>* %59, align 8, !alias.scope !908
  %60 = or i64 %39, 32
  %61 = getelementptr inbounds [5 x i32], [5 x i32]* %26, i64 0, i64 %60
  %62 = bitcast i32* %61 to <4 x i32>*
  store <4 x i32> <i32 1, i32 1, i32 1, i32 1>, <4 x i32>* %62, align 8, !alias.scope !908
  %63 = getelementptr inbounds i32, i32* %61, i64 4
  %64 = bitcast i32* %63 to <4 x i32>*
  store <4 x i32> <i32 1, i32 1, i32 1, i32 1>, <4 x i32>* %64, align 8, !alias.scope !908
  %65 = or i64 %39, 40
  %66 = getelementptr inbounds [5 x i32], [5 x i32]* %26, i64 0, i64 %65
  %67 = bitcast i32* %66 to <4 x i32>*
  store <4 x i32> <i32 1, i32 1, i32 1, i32 1>, <4 x i32>* %67, align 8, !alias.scope !908
  %68 = getelementptr inbounds i32, i32* %66, i64 4
  %69 = bitcast i32* %68 to <4 x i32>*
  store <4 x i32> <i32 1, i32 1, i32 1, i32 1>, <4 x i32>* %69, align 8, !alias.scope !908
  %70 = or i64 %39, 48
  %71 = getelementptr inbounds [5 x i32], [5 x i32]* %26, i64 0, i64 %70
  %72 = bitcast i32* %71 to <4 x i32>*
  store <4 x i32> <i32 1, i32 1, i32 1, i32 1>, <4 x i32>* %72, align 8, !alias.scope !908
  %73 = getelementptr inbounds i32, i32* %71, i64 4
  %74 = bitcast i32* %73 to <4 x i32>*
  store <4 x i32> <i32 1, i32 1, i32 1, i32 1>, <4 x i32>* %74, align 8, !alias.scope !908
  %75 = or i64 %39, 56
  %76 = getelementptr inbounds [5 x i32], [5 x i32]* %26, i64 0, i64 %75
  %77 = bitcast i32* %76 to <4 x i32>*
  store <4 x i32> <i32 1, i32 1, i32 1, i32 1>, <4 x i32>* %77, align 8, !alias.scope !908
  %78 = getelementptr inbounds i32, i32* %76, i64 4
  %79 = bitcast i32* %78 to <4 x i32>*
  store <4 x i32> <i32 1, i32 1, i32 1, i32 1>, <4 x i32>* %79, align 8, !alias.scope !908
  %80 = add i64 %39, 64
  %81 = add i64 %40, -8
  %82 = icmp eq i64 %81, 0
  br i1 %82, label %83, label %38, !llvm.loop !911

83:                                               ; preds = %38, %29
  %84 = phi i64 [ 0, %29 ], [ %80, %38 ]
  %85 = icmp eq i64 %34, 0
  br i1 %85, label %96, label %86

86:                                               ; preds = %83, %86
  %87 = phi i64 [ %93, %86 ], [ %84, %83 ]
  %88 = phi i64 [ %94, %86 ], [ %34, %83 ]
  %89 = getelementptr inbounds [5 x i32], [5 x i32]* %26, i64 0, i64 %87
  %90 = bitcast i32* %89 to <4 x i32>*
  store <4 x i32> <i32 1, i32 1, i32 1, i32 1>, <4 x i32>* %90, align 8, !alias.scope !908
  %91 = getelementptr inbounds i32, i32* %89, i64 4
  %92 = bitcast i32* %91 to <4 x i32>*
  store <4 x i32> <i32 1, i32 1, i32 1, i32 1>, <4 x i32>* %92, align 8, !alias.scope !908
  %93 = add i64 %87, 8
  %94 = add i64 %88, -1
  %95 = icmp eq i64 %94, 0
  br i1 %95, label %96, label %86, !llvm.loop !912

96:                                               ; preds = %86, %83
  %97 = icmp eq i64 %30, %27
  br i1 %97, label %105, label %98

98:                                               ; preds = %96, %25
  %99 = phi i64 [ 0, %25 ], [ %30, %96 ]
  br label %100

100:                                              ; preds = %98, %100
  %101 = phi i64 [ %103, %100 ], [ %99, %98 ]
  %102 = getelementptr inbounds [5 x i32], [5 x i32]* %26, i64 0, i64 %101
  store i32 1, i32* %102, align 4, !alias.scope !908
  %103 = add nuw nsw i64 %101, 1
  %104 = icmp eq i64 %103, %27
  br i1 %104, label %105, label %100, !llvm.loop !913

105:                                              ; preds = %100, %96, %21
  %106 = bitcast %union.anon* %24 to i32*
  %107 = sext i32 %22 to i64
  %108 = getelementptr inbounds i32, i32* %106, i64 %107
  %109 = bitcast i32* %108 to i8*
  %110 = icmp sgt i32 %18, 5
  %111 = getelementptr inbounds %"class.tflite::RuntimeShape", %"class.tflite::RuntimeShape"* %5, i64 0, i32 1
  %112 = getelementptr inbounds %union.anon, %union.anon* %111, i64 0, i32 0
  %113 = load i32*, i32** %112, align 8, !noalias !908
  %114 = bitcast %union.anon* %111 to i32*
  %115 = select i1 %110, i32* %113, i32* %114
  %116 = bitcast i32* %115 to i8*
  %117 = sext i32 %18 to i64
  %118 = shl nsw i64 %117, 2
  call void @llvm.memcpy.p0i8.p0i8.i64(i8* align 4 %109, i8* align 4 %116, i64 %118, i1 false) #8
  %119 = getelementptr inbounds %"struct.tflite::reference_ops::BroadcastComparison4DSlowCommon", %"struct.tflite::reference_ops::BroadcastComparison4DSlowCommon"* %10, i64 0, i32 1
  %120 = bitcast %"struct.tflite::NdArrayDesc"* %119 to i8*
  call void @llvm.memcpy.p0i8.p0i8.i64(i8* align 8 %120, i8* nonnull align 4 %15, i64 32, i1 false) #8
  %121 = getelementptr inbounds %"struct.tflite::reference_ops::BroadcastComparison4DSlowCommon", %"struct.tflite::reference_ops::BroadcastComparison4DSlowCommon"* %10, i64 0, i32 2
  %122 = bitcast %"struct.tflite::NdArrayDesc"* %121 to i8*
  call void @llvm.memcpy.p0i8.p0i8.i64(i8* align 8 %122, i8* nonnull align 4 %16, i64 32, i1 false) #8
  call void @llvm.lifetime.end.p0i8(i64 32, i8* nonnull %16) #8, !noalias !905
  call void @llvm.lifetime.end.p0i8(i64 32, i8* nonnull %15) #8, !noalias !905
  %123 = load i32, i32* %17, align 8
  %124 = icmp sgt i32 %123, 5
  %125 = getelementptr inbounds %union.anon, %union.anon* %24, i64 0, i32 0
  %126 = load i32*, i32** %125, align 8
  %127 = select i1 %124, i32* %126, i32* %106
  %128 = load i32, i32* %127, align 4
  %129 = icmp sgt i32 %128, 0
  br i1 %129, label %130, label %174

130:                                              ; preds = %105
  %131 = bitcast %union.anon* %24 to [5 x i32]*
  %132 = getelementptr inbounds [5 x i32], [5 x i32]* %131, i64 0, i64 1
  %133 = getelementptr inbounds %"struct.tflite::reference_ops::BroadcastComparison4DSlowCommon", %"struct.tflite::reference_ops::BroadcastComparison4DSlowCommon"* %10, i64 0, i32 0, i32 1, i32 1
  %134 = bitcast [16 x i8]* %133 to i32*
  %135 = getelementptr inbounds %"struct.tflite::reference_ops::BroadcastComparison4DSlowCommon", %"struct.tflite::reference_ops::BroadcastComparison4DSlowCommon"* %10, i64 0, i32 0, i32 1, i32 1, i64 4
  %136 = bitcast i8* %135 to i32*
  %137 = bitcast %"struct.tflite::StringRef"* %11 to i8*
  %138 = getelementptr inbounds %"struct.tflite::reference_ops::BroadcastComparison4DSlowCommon", %"struct.tflite::reference_ops::BroadcastComparison4DSlowCommon"* %10, i64 0, i32 1, i32 1, i64 0
  %139 = load i32, i32* %138, align 8
  %140 = getelementptr inbounds %"struct.tflite::reference_ops::BroadcastComparison4DSlowCommon", %"struct.tflite::reference_ops::BroadcastComparison4DSlowCommon"* %10, i64 0, i32 1, i32 1, i64 1
  %141 = load i32, i32* %140, align 4
  %142 = getelementptr inbounds %"struct.tflite::reference_ops::BroadcastComparison4DSlowCommon", %"struct.tflite::reference_ops::BroadcastComparison4DSlowCommon"* %10, i64 0, i32 1, i32 1, i64 2
  %143 = load i32, i32* %142, align 8
  %144 = getelementptr inbounds %"struct.tflite::reference_ops::BroadcastComparison4DSlowCommon", %"struct.tflite::reference_ops::BroadcastComparison4DSlowCommon"* %10, i64 0, i32 1, i32 1, i64 3
  %145 = load i32, i32* %144, align 4
  %146 = getelementptr inbounds %"struct.tflite::StringRef", %"struct.tflite::StringRef"* %11, i64 0, i32 0
  %147 = getelementptr inbounds %"struct.tflite::StringRef", %"struct.tflite::StringRef"* %11, i64 0, i32 1
  %148 = bitcast %"struct.tflite::StringRef"* %12 to i8*
  %149 = getelementptr inbounds %"struct.tflite::reference_ops::BroadcastComparison4DSlowCommon", %"struct.tflite::reference_ops::BroadcastComparison4DSlowCommon"* %10, i64 0, i32 2, i32 1, i64 0
  %150 = load i32, i32* %149, align 8
  %151 = getelementptr inbounds %"struct.tflite::reference_ops::BroadcastComparison4DSlowCommon", %"struct.tflite::reference_ops::BroadcastComparison4DSlowCommon"* %10, i64 0, i32 2, i32 1, i64 1
  %152 = load i32, i32* %151, align 4
  %153 = getelementptr inbounds %"struct.tflite::reference_ops::BroadcastComparison4DSlowCommon", %"struct.tflite::reference_ops::BroadcastComparison4DSlowCommon"* %10, i64 0, i32 2, i32 1, i64 2
  %154 = load i32, i32* %153, align 8
  %155 = getelementptr inbounds %"struct.tflite::reference_ops::BroadcastComparison4DSlowCommon", %"struct.tflite::reference_ops::BroadcastComparison4DSlowCommon"* %10, i64 0, i32 2, i32 1, i64 3
  %156 = load i32, i32* %155, align 4
  %157 = getelementptr inbounds %"struct.tflite::StringRef", %"struct.tflite::StringRef"* %12, i64 0, i32 0
  %158 = getelementptr inbounds %"struct.tflite::StringRef", %"struct.tflite::StringRef"* %12, i64 0, i32 1
  %159 = getelementptr inbounds i32, i32* %106, i64 1
  %160 = getelementptr inbounds i32, i32* %126, i64 1
  %161 = select i1 %124, i32* %160, i32* %132
  %162 = getelementptr inbounds i32, i32* %126, i64 2
  %163 = select i1 %124, i32* %162, i32* %134
  %164 = getelementptr inbounds i32, i32* %126, i64 3
  %165 = select i1 %124, i32* %164, i32* %136
  br label %166

166:                                              ; preds = %130, %197
  %167 = phi i32 [ %128, %130 ], [ %198, %197 ]
  %168 = phi i32 [ 0, %130 ], [ %199, %197 ]
  %169 = load i32, i32* %161, align 4
  %170 = icmp sgt i32 %169, 0
  br i1 %170, label %171, label %197

171:                                              ; preds = %166
  %172 = mul nsw i32 %139, %168
  %173 = mul nsw i32 %150, %168
  br label %181

174:                                              ; preds = %197, %105
  %175 = xor i1 %124, true
  %176 = icmp eq i32* %126, null
  %177 = or i1 %176, %175
  br i1 %177, label %180, label %178

178:                                              ; preds = %174
  %179 = bitcast i32* %126 to i8*
  call void @_ZdaPv(i8* %179) #9
  br label %180

180:                                              ; preds = %174, %178
  call void @llvm.lifetime.end.p0i8(i64 96, i8* nonnull %13) #8
  ret void

181:                                              ; preds = %171, %218
  %182 = phi i32 [ %169, %171 ], [ %219, %218 ]
  %183 = phi i32 [ 0, %171 ], [ %220, %218 ]
  %184 = load i32, i32* %163, align 4
  %185 = icmp sgt i32 %184, 0
  br i1 %185, label %186, label %218

186:                                              ; preds = %181
  %187 = mul nsw i32 %141, %183
  %188 = add nsw i32 %187, %172
  %189 = mul nsw i32 %152, %183
  %190 = add nsw i32 %189, %173
  %191 = load i32, i32* %159, align 4
  %192 = mul nsw i32 %191, %168
  %193 = add nsw i32 %192, %183
  %194 = load i32, i32* %165, align 4
  br label %201

195:                                              ; preds = %218
  %196 = load i32, i32* %127, align 4
  br label %197

197:                                              ; preds = %195, %166
  %198 = phi i32 [ %196, %195 ], [ %167, %166 ]
  %199 = add nuw nsw i32 %168, 1
  %200 = icmp slt i32 %199, %198
  br i1 %200, label %166, label %174

201:                                              ; preds = %186, %224
  %202 = phi i32 [ %184, %186 ], [ %225, %224 ]
  %203 = phi i32 [ %194, %186 ], [ %226, %224 ]
  %204 = phi i32 [ 0, %186 ], [ %227, %224 ]
  %205 = icmp sgt i32 %203, 0
  br i1 %205, label %206, label %224

206:                                              ; preds = %201
  %207 = mul nsw i32 %143, %204
  %208 = add nsw i32 %188, %207
  %209 = mul nsw i32 %154, %204
  %210 = add nsw i32 %190, %209
  %211 = load i32, i32* %134, align 8
  %212 = mul nsw i32 %193, %211
  %213 = add nsw i32 %212, %204
  %214 = load i32, i32* %136, align 4
  %215 = mul nsw i32 %213, %214
  br label %229

216:                                              ; preds = %224
  %217 = load i32, i32* %161, align 4
  br label %218

218:                                              ; preds = %216, %181
  %219 = phi i32 [ %217, %216 ], [ %182, %181 ]
  %220 = add nuw nsw i32 %183, 1
  %221 = icmp slt i32 %220, %219
  br i1 %221, label %181, label %195

222:                                              ; preds = %229
  %223 = load i32, i32* %163, align 4
  br label %224

224:                                              ; preds = %222, %201
  %225 = phi i32 [ %223, %222 ], [ %202, %201 ]
  %226 = phi i32 [ %247, %222 ], [ %203, %201 ]
  %227 = add nuw nsw i32 %204, 1
  %228 = icmp slt i32 %227, %225
  br i1 %228, label %201, label %216

229:                                              ; preds = %206, %229
  %230 = phi i32 [ 0, %206 ], [ %246, %229 ]
  call void @llvm.lifetime.start.p0i8(i64 16, i8* nonnull %137) #8
  call void @llvm.memset.p0i8.i64(i8* nonnull align 8 %137, i8 -86, i64 16, i1 false)
  %231 = mul nsw i32 %145, %230
  %232 = add nsw i32 %208, %231
  %233 = call { i8*, i32 } @_ZN6tflite9GetStringEPK12TfLiteTensori(%struct.TfLiteTensor* %2, i32 %232) #8
  %234 = extractvalue { i8*, i32 } %233, 0
  store i8* %234, i8** %146, align 8
  %235 = extractvalue { i8*, i32 } %233, 1
  store i32 %235, i32* %147, align 8
  call void @llvm.lifetime.start.p0i8(i64 16, i8* nonnull %148) #8
  call void @llvm.memset.p0i8.i64(i8* nonnull align 8 %148, i8 -86, i64 16, i1 false)
  %236 = mul nsw i32 %156, %230
  %237 = add nsw i32 %210, %236
  %238 = call { i8*, i32 } @_ZN6tflite9GetStringEPK12TfLiteTensori(%struct.TfLiteTensor* %4, i32 %237) #8
  %239 = extractvalue { i8*, i32 } %238, 0
  store i8* %239, i8** %157, align 8
  %240 = extractvalue { i8*, i32 } %238, 1
  store i32 %240, i32* %158, align 8
  %241 = call zeroext i1 %0(%"struct.tflite::StringRef"* nonnull dereferenceable(16) %11, %"struct.tflite::StringRef"* nonnull dereferenceable(16) %12) #8
  %242 = add nsw i32 %215, %230
  %243 = sext i32 %242 to i64
  %244 = getelementptr inbounds i8, i8* %6, i64 %243
  %245 = zext i1 %241 to i8
  store i8 %245, i8* %244, align 1
  call void @llvm.lifetime.end.p0i8(i64 16, i8* nonnull %148) #8
  call void @llvm.lifetime.end.p0i8(i64 16, i8* nonnull %137) #8
  %246 = add nuw nsw i32 %230, 1
  %247 = load i32, i32* %165, align 4
  %248 = icmp slt i32 %246, %247
  br i1 %248, label %229, label %222
}

declare { i8*, i32 } @_ZN6tflite9GetStringEPK12TfLiteTensori(%struct.TfLiteTensor*, i32) local_unnamed_addr #3

; Function Attrs: inlinehint nounwind ssp uwtable
define linkonce_odr hidden zeroext i1 @_ZN6tflite13reference_ops19StringRefNotEqualFnERKNS_9StringRefES3_(%"struct.tflite::StringRef"* dereferenceable(16), %"struct.tflite::StringRef"* dereferenceable(16)) #4 comdat {
  %3 = getelementptr inbounds %"struct.tflite::StringRef", %"struct.tflite::StringRef"* %0, i64 0, i32 1
  %4 = load i32, i32* %3, align 8
  %5 = getelementptr inbounds %"struct.tflite::StringRef", %"struct.tflite::StringRef"* %1, i64 0, i32 1
  %6 = load i32, i32* %5, align 8
  %7 = icmp eq i32 %4, %6
  br i1 %7, label %8, label %26

8:                                                ; preds = %2
  %9 = icmp sgt i32 %4, 0
  br i1 %9, label %10, label %26

10:                                               ; preds = %8
  %11 = getelementptr inbounds %"struct.tflite::StringRef", %"struct.tflite::StringRef"* %0, i64 0, i32 0
  %12 = load i8*, i8** %11, align 8
  %13 = getelementptr inbounds %"struct.tflite::StringRef", %"struct.tflite::StringRef"* %1, i64 0, i32 0
  %14 = load i8*, i8** %13, align 8
  %15 = zext i32 %4 to i64
  br label %18

16:                                               ; preds = %18
  %17 = icmp eq i64 %25, %15
  br i1 %17, label %26, label %18

18:                                               ; preds = %16, %10
  %19 = phi i64 [ 0, %10 ], [ %25, %16 ]
  %20 = getelementptr inbounds i8, i8* %12, i64 %19
  %21 = load i8, i8* %20, align 1
  %22 = getelementptr inbounds i8, i8* %14, i64 %19
  %23 = load i8, i8* %22, align 1
  %24 = icmp eq i8 %21, %23
  %25 = add nuw nsw i64 %19, 1
  br i1 %24, label %16, label %26

26:                                               ; preds = %16, %18, %2, %8
  %27 = phi i1 [ true, %2 ], [ false, %8 ], [ false, %16 ], [ true, %18 ]
  ret i1 %27
}

; Function Attrs: inlinehint nounwind ssp uwtable
define linkonce_odr hidden void @_ZN6tflite13reference_ops29BroadcastComparison4DSlowImplIbXadL_ZNS0_10NotEqualFnIbEEbT_S3_EEEEvRKNS_16ComparisonParamsERKNS_12RuntimeShapeEPKS3_S9_SB_S9_Pb(%"struct.tflite::ComparisonParams"* dereferenceable(32), %"class.tflite::RuntimeShape"* dereferenceable(32), i8*, %"class.tflite::RuntimeShape"* dereferenceable(32), i8*, %"class.tflite::RuntimeShape"* dereferenceable(32), i8*) local_unnamed_addr #4 comdat {
  %8 = alloca %"struct.tflite::NdArrayDesc", align 4
  %9 = alloca %"struct.tflite::NdArrayDesc", align 4
  %10 = alloca %"struct.tflite::reference_ops::BroadcastComparison4DSlowCommon", align 8
  %11 = bitcast %"struct.tflite::reference_ops::BroadcastComparison4DSlowCommon"* %10 to i8*
  call void @llvm.lifetime.start.p0i8(i64 96, i8* nonnull %11) #8
  call void @llvm.memset.p0i8.i64(i8* nonnull align 8 %11, i8 -86, i64 96, i1 false)
  %12 = getelementptr inbounds %"class.tflite::RuntimeShape", %"class.tflite::RuntimeShape"* %5, i64 0, i32 0
  %13 = bitcast %"struct.tflite::NdArrayDesc"* %8 to i8*
  call void @llvm.lifetime.start.p0i8(i64 32, i8* nonnull %13) #8, !noalias !914
  %14 = bitcast %"struct.tflite::NdArrayDesc"* %9 to i8*
  call void @llvm.memset.p0i8.i64(i8* nonnull align 4 %13, i8 -86, i64 32, i1 false) #8, !noalias !914
  call void @llvm.lifetime.start.p0i8(i64 32, i8* nonnull %14) #8, !noalias !914
  call void @llvm.memset.p0i8.i64(i8* nonnull align 4 %14, i8 -86, i64 32, i1 false) #8, !noalias !914
  call void @_ZN6tflite35NdArrayDescsForElementwiseBroadcastILi4EEEvRKNS_12RuntimeShapeES3_PNS_11NdArrayDescIXT_EEES6_(%"class.tflite::RuntimeShape"* dereferenceable(32) %1, %"class.tflite::RuntimeShape"* dereferenceable(32) %3, %"struct.tflite::NdArrayDesc"* nonnull %8, %"struct.tflite::NdArrayDesc"* nonnull %9) #8, !noalias !914
  %15 = getelementptr inbounds %"struct.tflite::reference_ops::BroadcastComparison4DSlowCommon", %"struct.tflite::reference_ops::BroadcastComparison4DSlowCommon"* %10, i64 0, i32 0, i32 0
  store i32 0, i32* %15, align 8, !alias.scope !917
  %16 = load i32, i32* %12, align 8, !noalias !917
  %17 = icmp sgt i32 %16, 4
  br i1 %17, label %18, label %19

18:                                               ; preds = %7
  call void @abort() #10, !noalias !917
  unreachable

19:                                               ; preds = %7
  store i32 4, i32* %15, align 8, !alias.scope !917
  %20 = sub i32 4, %16
  %21 = icmp sgt i32 %20, 0
  %22 = getelementptr inbounds %"struct.tflite::reference_ops::BroadcastComparison4DSlowCommon", %"struct.tflite::reference_ops::BroadcastComparison4DSlowCommon"* %10, i64 0, i32 0, i32 1
  br i1 %21, label %23, label %103

23:                                               ; preds = %19
  %24 = bitcast %union.anon* %22 to [5 x i32]*
  %25 = zext i32 %20 to i64
  %26 = icmp ult i32 %20, 8
  br i1 %26, label %96, label %27

27:                                               ; preds = %23
  %28 = and i64 %25, 4294967288
  %29 = add nsw i64 %28, -8
  %30 = lshr exact i64 %29, 3
  %31 = add nuw nsw i64 %30, 1
  %32 = and i64 %31, 7
  %33 = icmp ult i64 %29, 56
  br i1 %33, label %81, label %34

34:                                               ; preds = %27
  %35 = sub nsw i64 %31, %32
  br label %36

36:                                               ; preds = %36, %34
  %37 = phi i64 [ 0, %34 ], [ %78, %36 ]
  %38 = phi i64 [ %35, %34 ], [ %79, %36 ]
  %39 = getelementptr inbounds [5 x i32], [5 x i32]* %24, i64 0, i64 %37
  %40 = bitcast i32* %39 to <4 x i32>*
  store <4 x i32> <i32 1, i32 1, i32 1, i32 1>, <4 x i32>* %40, align 8, !alias.scope !917
  %41 = getelementptr inbounds i32, i32* %39, i64 4
  %42 = bitcast i32* %41 to <4 x i32>*
  store <4 x i32> <i32 1, i32 1, i32 1, i32 1>, <4 x i32>* %42, align 8, !alias.scope !917
  %43 = or i64 %37, 8
  %44 = getelementptr inbounds [5 x i32], [5 x i32]* %24, i64 0, i64 %43
  %45 = bitcast i32* %44 to <4 x i32>*
  store <4 x i32> <i32 1, i32 1, i32 1, i32 1>, <4 x i32>* %45, align 8, !alias.scope !917
  %46 = getelementptr inbounds i32, i32* %44, i64 4
  %47 = bitcast i32* %46 to <4 x i32>*
  store <4 x i32> <i32 1, i32 1, i32 1, i32 1>, <4 x i32>* %47, align 8, !alias.scope !917
  %48 = or i64 %37, 16
  %49 = getelementptr inbounds [5 x i32], [5 x i32]* %24, i64 0, i64 %48
  %50 = bitcast i32* %49 to <4 x i32>*
  store <4 x i32> <i32 1, i32 1, i32 1, i32 1>, <4 x i32>* %50, align 8, !alias.scope !917
  %51 = getelementptr inbounds i32, i32* %49, i64 4
  %52 = bitcast i32* %51 to <4 x i32>*
  store <4 x i32> <i32 1, i32 1, i32 1, i32 1>, <4 x i32>* %52, align 8, !alias.scope !917
  %53 = or i64 %37, 24
  %54 = getelementptr inbounds [5 x i32], [5 x i32]* %24, i64 0, i64 %53
  %55 = bitcast i32* %54 to <4 x i32>*
  store <4 x i32> <i32 1, i32 1, i32 1, i32 1>, <4 x i32>* %55, align 8, !alias.scope !917
  %56 = getelementptr inbounds i32, i32* %54, i64 4
  %57 = bitcast i32* %56 to <4 x i32>*
  store <4 x i32> <i32 1, i32 1, i32 1, i32 1>, <4 x i32>* %57, align 8, !alias.scope !917
  %58 = or i64 %37, 32
  %59 = getelementptr inbounds [5 x i32], [5 x i32]* %24, i64 0, i64 %58
  %60 = bitcast i32* %59 to <4 x i32>*
  store <4 x i32> <i32 1, i32 1, i32 1, i32 1>, <4 x i32>* %60, align 8, !alias.scope !917
  %61 = getelementptr inbounds i32, i32* %59, i64 4
  %62 = bitcast i32* %61 to <4 x i32>*
  store <4 x i32> <i32 1, i32 1, i32 1, i32 1>, <4 x i32>* %62, align 8, !alias.scope !917
  %63 = or i64 %37, 40
  %64 = getelementptr inbounds [5 x i32], [5 x i32]* %24, i64 0, i64 %63
  %65 = bitcast i32* %64 to <4 x i32>*
  store <4 x i32> <i32 1, i32 1, i32 1, i32 1>, <4 x i32>* %65, align 8, !alias.scope !917
  %66 = getelementptr inbounds i32, i32* %64, i64 4
  %67 = bitcast i32* %66 to <4 x i32>*
  store <4 x i32> <i32 1, i32 1, i32 1, i32 1>, <4 x i32>* %67, align 8, !alias.scope !917
  %68 = or i64 %37, 48
  %69 = getelementptr inbounds [5 x i32], [5 x i32]* %24, i64 0, i64 %68
  %70 = bitcast i32* %69 to <4 x i32>*
  store <4 x i32> <i32 1, i32 1, i32 1, i32 1>, <4 x i32>* %70, align 8, !alias.scope !917
  %71 = getelementptr inbounds i32, i32* %69, i64 4
  %72 = bitcast i32* %71 to <4 x i32>*
  store <4 x i32> <i32 1, i32 1, i32 1, i32 1>, <4 x i32>* %72, align 8, !alias.scope !917
  %73 = or i64 %37, 56
  %74 = getelementptr inbounds [5 x i32], [5 x i32]* %24, i64 0, i64 %73
  %75 = bitcast i32* %74 to <4 x i32>*
  store <4 x i32> <i32 1, i32 1, i32 1, i32 1>, <4 x i32>* %75, align 8, !alias.scope !917
  %76 = getelementptr inbounds i32, i32* %74, i64 4
  %77 = bitcast i32* %76 to <4 x i32>*
  store <4 x i32> <i32 1, i32 1, i32 1, i32 1>, <4 x i32>* %77, align 8, !alias.scope !917
  %78 = add i64 %37, 64
  %79 = add i64 %38, -8
  %80 = icmp eq i64 %79, 0
  br i1 %80, label %81, label %36, !llvm.loop !920

81:                                               ; preds = %36, %27
  %82 = phi i64 [ 0, %27 ], [ %78, %36 ]
  %83 = icmp eq i64 %32, 0
  br i1 %83, label %94, label %84

84:                                               ; preds = %81, %84
  %85 = phi i64 [ %91, %84 ], [ %82, %81 ]
  %86 = phi i64 [ %92, %84 ], [ %32, %81 ]
  %87 = getelementptr inbounds [5 x i32], [5 x i32]* %24, i64 0, i64 %85
  %88 = bitcast i32* %87 to <4 x i32>*
  store <4 x i32> <i32 1, i32 1, i32 1, i32 1>, <4 x i32>* %88, align 8, !alias.scope !917
  %89 = getelementptr inbounds i32, i32* %87, i64 4
  %90 = bitcast i32* %89 to <4 x i32>*
  store <4 x i32> <i32 1, i32 1, i32 1, i32 1>, <4 x i32>* %90, align 8, !alias.scope !917
  %91 = add i64 %85, 8
  %92 = add i64 %86, -1
  %93 = icmp eq i64 %92, 0
  br i1 %93, label %94, label %84, !llvm.loop !921

94:                                               ; preds = %84, %81
  %95 = icmp eq i64 %28, %25
  br i1 %95, label %103, label %96

96:                                               ; preds = %94, %23
  %97 = phi i64 [ 0, %23 ], [ %28, %94 ]
  br label %98

98:                                               ; preds = %96, %98
  %99 = phi i64 [ %101, %98 ], [ %97, %96 ]
  %100 = getelementptr inbounds [5 x i32], [5 x i32]* %24, i64 0, i64 %99
  store i32 1, i32* %100, align 4, !alias.scope !917
  %101 = add nuw nsw i64 %99, 1
  %102 = icmp eq i64 %101, %25
  br i1 %102, label %103, label %98, !llvm.loop !922

103:                                              ; preds = %98, %94, %19
  %104 = bitcast %union.anon* %22 to i32*
  %105 = sext i32 %20 to i64
  %106 = getelementptr inbounds i32, i32* %104, i64 %105
  %107 = bitcast i32* %106 to i8*
  %108 = icmp sgt i32 %16, 5
  %109 = getelementptr inbounds %"class.tflite::RuntimeShape", %"class.tflite::RuntimeShape"* %5, i64 0, i32 1
  %110 = getelementptr inbounds %union.anon, %union.anon* %109, i64 0, i32 0
  %111 = load i32*, i32** %110, align 8, !noalias !917
  %112 = bitcast %union.anon* %109 to i32*
  %113 = select i1 %108, i32* %111, i32* %112
  %114 = bitcast i32* %113 to i8*
  %115 = sext i32 %16 to i64
  %116 = shl nsw i64 %115, 2
  call void @llvm.memcpy.p0i8.p0i8.i64(i8* align 4 %107, i8* align 4 %114, i64 %116, i1 false) #8
  %117 = getelementptr inbounds %"struct.tflite::reference_ops::BroadcastComparison4DSlowCommon", %"struct.tflite::reference_ops::BroadcastComparison4DSlowCommon"* %10, i64 0, i32 1
  %118 = bitcast %"struct.tflite::NdArrayDesc"* %117 to i8*
  call void @llvm.memcpy.p0i8.p0i8.i64(i8* align 8 %118, i8* nonnull align 4 %13, i64 32, i1 false) #8
  %119 = getelementptr inbounds %"struct.tflite::reference_ops::BroadcastComparison4DSlowCommon", %"struct.tflite::reference_ops::BroadcastComparison4DSlowCommon"* %10, i64 0, i32 2
  %120 = bitcast %"struct.tflite::NdArrayDesc"* %119 to i8*
  call void @llvm.memcpy.p0i8.p0i8.i64(i8* align 8 %120, i8* nonnull align 4 %14, i64 32, i1 false) #8
  call void @llvm.lifetime.end.p0i8(i64 32, i8* nonnull %14) #8, !noalias !914
  call void @llvm.lifetime.end.p0i8(i64 32, i8* nonnull %13) #8, !noalias !914
  %121 = load i32, i32* %15, align 8
  %122 = icmp sgt i32 %121, 5
  %123 = getelementptr inbounds %union.anon, %union.anon* %22, i64 0, i32 0
  %124 = load i32*, i32** %123, align 8
  %125 = select i1 %122, i32* %124, i32* %104
  %126 = load i32, i32* %125, align 4
  %127 = icmp sgt i32 %126, 0
  br i1 %127, label %128, label %175

128:                                              ; preds = %103
  %129 = bitcast %union.anon* %22 to [5 x i32]*
  %130 = getelementptr inbounds [5 x i32], [5 x i32]* %129, i64 0, i64 1
  %131 = getelementptr inbounds %"struct.tflite::reference_ops::BroadcastComparison4DSlowCommon", %"struct.tflite::reference_ops::BroadcastComparison4DSlowCommon"* %10, i64 0, i32 0, i32 1, i32 1
  %132 = bitcast [16 x i8]* %131 to i32*
  %133 = getelementptr inbounds %"struct.tflite::reference_ops::BroadcastComparison4DSlowCommon", %"struct.tflite::reference_ops::BroadcastComparison4DSlowCommon"* %10, i64 0, i32 0, i32 1, i32 1, i64 4
  %134 = bitcast i8* %133 to i32*
  %135 = getelementptr inbounds %"struct.tflite::reference_ops::BroadcastComparison4DSlowCommon", %"struct.tflite::reference_ops::BroadcastComparison4DSlowCommon"* %10, i64 0, i32 1, i32 1, i64 0
  %136 = load i32, i32* %135, align 8
  %137 = getelementptr inbounds %"struct.tflite::reference_ops::BroadcastComparison4DSlowCommon", %"struct.tflite::reference_ops::BroadcastComparison4DSlowCommon"* %10, i64 0, i32 1, i32 1, i64 1
  %138 = load i32, i32* %137, align 4
  %139 = getelementptr inbounds %"struct.tflite::reference_ops::BroadcastComparison4DSlowCommon", %"struct.tflite::reference_ops::BroadcastComparison4DSlowCommon"* %10, i64 0, i32 1, i32 1, i64 2
  %140 = load i32, i32* %139, align 8
  %141 = getelementptr inbounds %"struct.tflite::reference_ops::BroadcastComparison4DSlowCommon", %"struct.tflite::reference_ops::BroadcastComparison4DSlowCommon"* %10, i64 0, i32 1, i32 1, i64 3
  %142 = load i32, i32* %141, align 4
  %143 = getelementptr inbounds %"struct.tflite::reference_ops::BroadcastComparison4DSlowCommon", %"struct.tflite::reference_ops::BroadcastComparison4DSlowCommon"* %10, i64 0, i32 2, i32 1, i64 0
  %144 = load i32, i32* %143, align 8
  %145 = getelementptr inbounds %"struct.tflite::reference_ops::BroadcastComparison4DSlowCommon", %"struct.tflite::reference_ops::BroadcastComparison4DSlowCommon"* %10, i64 0, i32 2, i32 1, i64 1
  %146 = load i32, i32* %145, align 4
  %147 = getelementptr inbounds %"struct.tflite::reference_ops::BroadcastComparison4DSlowCommon", %"struct.tflite::reference_ops::BroadcastComparison4DSlowCommon"* %10, i64 0, i32 2, i32 1, i64 2
  %148 = load i32, i32* %147, align 8
  %149 = getelementptr inbounds %"struct.tflite::reference_ops::BroadcastComparison4DSlowCommon", %"struct.tflite::reference_ops::BroadcastComparison4DSlowCommon"* %10, i64 0, i32 2, i32 1, i64 3
  %150 = load i32, i32* %149, align 4
  %151 = getelementptr inbounds i32, i32* %104, i64 1
  %152 = sext i32 %150 to i64
  %153 = sext i32 %142 to i64
  %154 = sext i32 %148 to i64
  %155 = sext i32 %140 to i64
  %156 = sext i32 %146 to i64
  %157 = sext i32 %138 to i64
  %158 = sext i32 %144 to i64
  %159 = sext i32 %136 to i64
  %160 = getelementptr inbounds i32, i32* %124, i64 1
  %161 = select i1 %122, i32* %160, i32* %130
  %162 = getelementptr inbounds i32, i32* %124, i64 2
  %163 = select i1 %122, i32* %162, i32* %132
  %164 = getelementptr inbounds i32, i32* %124, i64 3
  %165 = select i1 %122, i32* %164, i32* %134
  br label %166

166:                                              ; preds = %128, %199
  %167 = phi i32 [ %126, %128 ], [ %200, %199 ]
  %168 = phi i64 [ 0, %128 ], [ %201, %199 ]
  %169 = load i32, i32* %161, align 4
  %170 = icmp sgt i32 %169, 0
  br i1 %170, label %171, label %199

171:                                              ; preds = %166
  %172 = mul nsw i64 %168, %159
  %173 = mul nsw i64 %168, %158
  %174 = trunc i64 %168 to i32
  br label %182

175:                                              ; preds = %199, %103
  %176 = xor i1 %122, true
  %177 = icmp eq i32* %124, null
  %178 = or i1 %177, %176
  br i1 %178, label %181, label %179

179:                                              ; preds = %175
  %180 = bitcast i32* %124 to i8*
  call void @_ZdaPv(i8* %180) #9
  br label %181

181:                                              ; preds = %175, %179
  call void @llvm.lifetime.end.p0i8(i64 96, i8* nonnull %11) #8
  ret void

182:                                              ; preds = %171, %222
  %183 = phi i32 [ %169, %171 ], [ %223, %222 ]
  %184 = phi i64 [ 0, %171 ], [ %224, %222 ]
  %185 = load i32, i32* %163, align 4
  %186 = icmp sgt i32 %185, 0
  br i1 %186, label %187, label %222

187:                                              ; preds = %182
  %188 = mul nsw i64 %184, %157
  %189 = add nsw i64 %188, %172
  %190 = mul nsw i64 %184, %156
  %191 = add nsw i64 %190, %173
  %192 = load i32, i32* %151, align 4
  %193 = mul nsw i32 %192, %174
  %194 = trunc i64 %184 to i32
  %195 = add nsw i32 %193, %194
  %196 = load i32, i32* %165, align 4
  br label %204

197:                                              ; preds = %222
  %198 = load i32, i32* %125, align 4
  br label %199

199:                                              ; preds = %197, %166
  %200 = phi i32 [ %198, %197 ], [ %167, %166 ]
  %201 = add nuw nsw i64 %168, 1
  %202 = sext i32 %200 to i64
  %203 = icmp slt i64 %201, %202
  br i1 %203, label %166, label %175

204:                                              ; preds = %187, %229
  %205 = phi i32 [ %185, %187 ], [ %230, %229 ]
  %206 = phi i32 [ %196, %187 ], [ %231, %229 ]
  %207 = phi i64 [ 0, %187 ], [ %232, %229 ]
  %208 = icmp sgt i32 %206, 0
  br i1 %208, label %209, label %229

209:                                              ; preds = %204
  %210 = mul nsw i64 %207, %155
  %211 = add nsw i64 %189, %210
  %212 = mul nsw i64 %207, %154
  %213 = add nsw i64 %191, %212
  %214 = load i32, i32* %132, align 8
  %215 = mul nsw i32 %195, %214
  %216 = trunc i64 %207 to i32
  %217 = add nsw i32 %215, %216
  %218 = load i32, i32* %134, align 4
  %219 = mul nsw i32 %217, %218
  br label %235

220:                                              ; preds = %229
  %221 = load i32, i32* %161, align 4
  br label %222

222:                                              ; preds = %220, %182
  %223 = phi i32 [ %221, %220 ], [ %183, %182 ]
  %224 = add nuw nsw i64 %184, 1
  %225 = sext i32 %223 to i64
  %226 = icmp slt i64 %224, %225
  br i1 %226, label %182, label %197

227:                                              ; preds = %235
  %228 = load i32, i32* %163, align 4
  br label %229

229:                                              ; preds = %227, %204
  %230 = phi i32 [ %228, %227 ], [ %205, %204 ]
  %231 = phi i32 [ %254, %227 ], [ %206, %204 ]
  %232 = add nuw nsw i64 %207, 1
  %233 = sext i32 %230 to i64
  %234 = icmp slt i64 %232, %233
  br i1 %234, label %204, label %220

235:                                              ; preds = %209, %235
  %236 = phi i64 [ 0, %209 ], [ %253, %235 ]
  %237 = mul nsw i64 %236, %153
  %238 = add nsw i64 %211, %237
  %239 = getelementptr inbounds i8, i8* %2, i64 %238
  %240 = load i8, i8* %239, align 1, !range !35
  %241 = icmp ne i8 %240, 0
  %242 = mul nsw i64 %236, %152
  %243 = add nsw i64 %213, %242
  %244 = getelementptr inbounds i8, i8* %4, i64 %243
  %245 = load i8, i8* %244, align 1, !range !35
  %246 = icmp ne i8 %245, 0
  %247 = xor i1 %241, %246
  %248 = trunc i64 %236 to i32
  %249 = add nsw i32 %219, %248
  %250 = sext i32 %249 to i64
  %251 = getelementptr inbounds i8, i8* %6, i64 %250
  %252 = zext i1 %247 to i8
  store i8 %252, i8* %251, align 1
  %253 = add nuw nsw i64 %236, 1
  %254 = load i32, i32* %165, align 4
  %255 = sext i32 %254 to i64
  %256 = icmp slt i64 %253, %255
  br i1 %256, label %235, label %227
}

; Function Attrs: inlinehint nounwind ssp uwtable
define linkonce_odr hidden void @_ZN6tflite13reference_ops29BroadcastComparison4DSlowImplIfXadL_ZNS0_10NotEqualFnIfEEbT_S3_EEEEvRKNS_16ComparisonParamsERKNS_12RuntimeShapeEPKS3_S9_SB_S9_Pb(%"struct.tflite::ComparisonParams"* dereferenceable(32), %"class.tflite::RuntimeShape"* dereferenceable(32), float*, %"class.tflite::RuntimeShape"* dereferenceable(32), float*, %"class.tflite::RuntimeShape"* dereferenceable(32), i8*) local_unnamed_addr #4 comdat {
  %8 = alloca %"struct.tflite::NdArrayDesc", align 4
  %9 = alloca %"struct.tflite::NdArrayDesc", align 4
  %10 = alloca %"struct.tflite::reference_ops::BroadcastComparison4DSlowCommon", align 8
  %11 = bitcast %"struct.tflite::reference_ops::BroadcastComparison4DSlowCommon"* %10 to i8*
  call void @llvm.lifetime.start.p0i8(i64 96, i8* nonnull %11) #8
  call void @llvm.memset.p0i8.i64(i8* nonnull align 8 %11, i8 -86, i64 96, i1 false)
  %12 = getelementptr inbounds %"class.tflite::RuntimeShape", %"class.tflite::RuntimeShape"* %5, i64 0, i32 0
  %13 = bitcast %"struct.tflite::NdArrayDesc"* %8 to i8*
  call void @llvm.lifetime.start.p0i8(i64 32, i8* nonnull %13) #8, !noalias !923
  %14 = bitcast %"struct.tflite::NdArrayDesc"* %9 to i8*
  call void @llvm.memset.p0i8.i64(i8* nonnull align 4 %13, i8 -86, i64 32, i1 false) #8, !noalias !923
  call void @llvm.lifetime.start.p0i8(i64 32, i8* nonnull %14) #8, !noalias !923
  call void @llvm.memset.p0i8.i64(i8* nonnull align 4 %14, i8 -86, i64 32, i1 false) #8, !noalias !923
  call void @_ZN6tflite35NdArrayDescsForElementwiseBroadcastILi4EEEvRKNS_12RuntimeShapeES3_PNS_11NdArrayDescIXT_EEES6_(%"class.tflite::RuntimeShape"* dereferenceable(32) %1, %"class.tflite::RuntimeShape"* dereferenceable(32) %3, %"struct.tflite::NdArrayDesc"* nonnull %8, %"struct.tflite::NdArrayDesc"* nonnull %9) #8, !noalias !923
  %15 = getelementptr inbounds %"struct.tflite::reference_ops::BroadcastComparison4DSlowCommon", %"struct.tflite::reference_ops::BroadcastComparison4DSlowCommon"* %10, i64 0, i32 0, i32 0
  store i32 0, i32* %15, align 8, !alias.scope !926
  %16 = load i32, i32* %12, align 8, !noalias !926
  %17 = icmp sgt i32 %16, 4
  br i1 %17, label %18, label %19

18:                                               ; preds = %7
  call void @abort() #10, !noalias !926
  unreachable

19:                                               ; preds = %7
  store i32 4, i32* %15, align 8, !alias.scope !926
  %20 = sub i32 4, %16
  %21 = icmp sgt i32 %20, 0
  %22 = getelementptr inbounds %"struct.tflite::reference_ops::BroadcastComparison4DSlowCommon", %"struct.tflite::reference_ops::BroadcastComparison4DSlowCommon"* %10, i64 0, i32 0, i32 1
  br i1 %21, label %23, label %103

23:                                               ; preds = %19
  %24 = bitcast %union.anon* %22 to [5 x i32]*
  %25 = zext i32 %20 to i64
  %26 = icmp ult i32 %20, 8
  br i1 %26, label %96, label %27

27:                                               ; preds = %23
  %28 = and i64 %25, 4294967288
  %29 = add nsw i64 %28, -8
  %30 = lshr exact i64 %29, 3
  %31 = add nuw nsw i64 %30, 1
  %32 = and i64 %31, 7
  %33 = icmp ult i64 %29, 56
  br i1 %33, label %81, label %34

34:                                               ; preds = %27
  %35 = sub nsw i64 %31, %32
  br label %36

36:                                               ; preds = %36, %34
  %37 = phi i64 [ 0, %34 ], [ %78, %36 ]
  %38 = phi i64 [ %35, %34 ], [ %79, %36 ]
  %39 = getelementptr inbounds [5 x i32], [5 x i32]* %24, i64 0, i64 %37
  %40 = bitcast i32* %39 to <4 x i32>*
  store <4 x i32> <i32 1, i32 1, i32 1, i32 1>, <4 x i32>* %40, align 8, !alias.scope !926
  %41 = getelementptr inbounds i32, i32* %39, i64 4
  %42 = bitcast i32* %41 to <4 x i32>*
  store <4 x i32> <i32 1, i32 1, i32 1, i32 1>, <4 x i32>* %42, align 8, !alias.scope !926
  %43 = or i64 %37, 8
  %44 = getelementptr inbounds [5 x i32], [5 x i32]* %24, i64 0, i64 %43
  %45 = bitcast i32* %44 to <4 x i32>*
  store <4 x i32> <i32 1, i32 1, i32 1, i32 1>, <4 x i32>* %45, align 8, !alias.scope !926
  %46 = getelementptr inbounds i32, i32* %44, i64 4
  %47 = bitcast i32* %46 to <4 x i32>*
  store <4 x i32> <i32 1, i32 1, i32 1, i32 1>, <4 x i32>* %47, align 8, !alias.scope !926
  %48 = or i64 %37, 16
  %49 = getelementptr inbounds [5 x i32], [5 x i32]* %24, i64 0, i64 %48
  %50 = bitcast i32* %49 to <4 x i32>*
  store <4 x i32> <i32 1, i32 1, i32 1, i32 1>, <4 x i32>* %50, align 8, !alias.scope !926
  %51 = getelementptr inbounds i32, i32* %49, i64 4
  %52 = bitcast i32* %51 to <4 x i32>*
  store <4 x i32> <i32 1, i32 1, i32 1, i32 1>, <4 x i32>* %52, align 8, !alias.scope !926
  %53 = or i64 %37, 24
  %54 = getelementptr inbounds [5 x i32], [5 x i32]* %24, i64 0, i64 %53
  %55 = bitcast i32* %54 to <4 x i32>*
  store <4 x i32> <i32 1, i32 1, i32 1, i32 1>, <4 x i32>* %55, align 8, !alias.scope !926
  %56 = getelementptr inbounds i32, i32* %54, i64 4
  %57 = bitcast i32* %56 to <4 x i32>*
  store <4 x i32> <i32 1, i32 1, i32 1, i32 1>, <4 x i32>* %57, align 8, !alias.scope !926
  %58 = or i64 %37, 32
  %59 = getelementptr inbounds [5 x i32], [5 x i32]* %24, i64 0, i64 %58
  %60 = bitcast i32* %59 to <4 x i32>*
  store <4 x i32> <i32 1, i32 1, i32 1, i32 1>, <4 x i32>* %60, align 8, !alias.scope !926
  %61 = getelementptr inbounds i32, i32* %59, i64 4
  %62 = bitcast i32* %61 to <4 x i32>*
  store <4 x i32> <i32 1, i32 1, i32 1, i32 1>, <4 x i32>* %62, align 8, !alias.scope !926
  %63 = or i64 %37, 40
  %64 = getelementptr inbounds [5 x i32], [5 x i32]* %24, i64 0, i64 %63
  %65 = bitcast i32* %64 to <4 x i32>*
  store <4 x i32> <i32 1, i32 1, i32 1, i32 1>, <4 x i32>* %65, align 8, !alias.scope !926
  %66 = getelementptr inbounds i32, i32* %64, i64 4
  %67 = bitcast i32* %66 to <4 x i32>*
  store <4 x i32> <i32 1, i32 1, i32 1, i32 1>, <4 x i32>* %67, align 8, !alias.scope !926
  %68 = or i64 %37, 48
  %69 = getelementptr inbounds [5 x i32], [5 x i32]* %24, i64 0, i64 %68
  %70 = bitcast i32* %69 to <4 x i32>*
  store <4 x i32> <i32 1, i32 1, i32 1, i32 1>, <4 x i32>* %70, align 8, !alias.scope !926
  %71 = getelementptr inbounds i32, i32* %69, i64 4
  %72 = bitcast i32* %71 to <4 x i32>*
  store <4 x i32> <i32 1, i32 1, i32 1, i32 1>, <4 x i32>* %72, align 8, !alias.scope !926
  %73 = or i64 %37, 56
  %74 = getelementptr inbounds [5 x i32], [5 x i32]* %24, i64 0, i64 %73
  %75 = bitcast i32* %74 to <4 x i32>*
  store <4 x i32> <i32 1, i32 1, i32 1, i32 1>, <4 x i32>* %75, align 8, !alias.scope !926
  %76 = getelementptr inbounds i32, i32* %74, i64 4
  %77 = bitcast i32* %76 to <4 x i32>*
  store <4 x i32> <i32 1, i32 1, i32 1, i32 1>, <4 x i32>* %77, align 8, !alias.scope !926
  %78 = add i64 %37, 64
  %79 = add i64 %38, -8
  %80 = icmp eq i64 %79, 0
  br i1 %80, label %81, label %36, !llvm.loop !929

81:                                               ; preds = %36, %27
  %82 = phi i64 [ 0, %27 ], [ %78, %36 ]
  %83 = icmp eq i64 %32, 0
  br i1 %83, label %94, label %84

84:                                               ; preds = %81, %84
  %85 = phi i64 [ %91, %84 ], [ %82, %81 ]
  %86 = phi i64 [ %92, %84 ], [ %32, %81 ]
  %87 = getelementptr inbounds [5 x i32], [5 x i32]* %24, i64 0, i64 %85
  %88 = bitcast i32* %87 to <4 x i32>*
  store <4 x i32> <i32 1, i32 1, i32 1, i32 1>, <4 x i32>* %88, align 8, !alias.scope !926
  %89 = getelementptr inbounds i32, i32* %87, i64 4
  %90 = bitcast i32* %89 to <4 x i32>*
  store <4 x i32> <i32 1, i32 1, i32 1, i32 1>, <4 x i32>* %90, align 8, !alias.scope !926
  %91 = add i64 %85, 8
  %92 = add i64 %86, -1
  %93 = icmp eq i64 %92, 0
  br i1 %93, label %94, label %84, !llvm.loop !930

94:                                               ; preds = %84, %81
  %95 = icmp eq i64 %28, %25
  br i1 %95, label %103, label %96

96:                                               ; preds = %94, %23
  %97 = phi i64 [ 0, %23 ], [ %28, %94 ]
  br label %98

98:                                               ; preds = %96, %98
  %99 = phi i64 [ %101, %98 ], [ %97, %96 ]
  %100 = getelementptr inbounds [5 x i32], [5 x i32]* %24, i64 0, i64 %99
  store i32 1, i32* %100, align 4, !alias.scope !926
  %101 = add nuw nsw i64 %99, 1
  %102 = icmp eq i64 %101, %25
  br i1 %102, label %103, label %98, !llvm.loop !931

103:                                              ; preds = %98, %94, %19
  %104 = bitcast %union.anon* %22 to i32*
  %105 = sext i32 %20 to i64
  %106 = getelementptr inbounds i32, i32* %104, i64 %105
  %107 = bitcast i32* %106 to i8*
  %108 = icmp sgt i32 %16, 5
  %109 = getelementptr inbounds %"class.tflite::RuntimeShape", %"class.tflite::RuntimeShape"* %5, i64 0, i32 1
  %110 = getelementptr inbounds %union.anon, %union.anon* %109, i64 0, i32 0
  %111 = load i32*, i32** %110, align 8, !noalias !926
  %112 = bitcast %union.anon* %109 to i32*
  %113 = select i1 %108, i32* %111, i32* %112
  %114 = bitcast i32* %113 to i8*
  %115 = sext i32 %16 to i64
  %116 = shl nsw i64 %115, 2
  call void @llvm.memcpy.p0i8.p0i8.i64(i8* align 4 %107, i8* align 4 %114, i64 %116, i1 false) #8
  %117 = getelementptr inbounds %"struct.tflite::reference_ops::BroadcastComparison4DSlowCommon", %"struct.tflite::reference_ops::BroadcastComparison4DSlowCommon"* %10, i64 0, i32 1
  %118 = bitcast %"struct.tflite::NdArrayDesc"* %117 to i8*
  call void @llvm.memcpy.p0i8.p0i8.i64(i8* align 8 %118, i8* nonnull align 4 %13, i64 32, i1 false) #8
  %119 = getelementptr inbounds %"struct.tflite::reference_ops::BroadcastComparison4DSlowCommon", %"struct.tflite::reference_ops::BroadcastComparison4DSlowCommon"* %10, i64 0, i32 2
  %120 = bitcast %"struct.tflite::NdArrayDesc"* %119 to i8*
  call void @llvm.memcpy.p0i8.p0i8.i64(i8* align 8 %120, i8* nonnull align 4 %14, i64 32, i1 false) #8
  call void @llvm.lifetime.end.p0i8(i64 32, i8* nonnull %14) #8, !noalias !923
  call void @llvm.lifetime.end.p0i8(i64 32, i8* nonnull %13) #8, !noalias !923
  %121 = load i32, i32* %15, align 8
  %122 = icmp sgt i32 %121, 5
  %123 = getelementptr inbounds %union.anon, %union.anon* %22, i64 0, i32 0
  %124 = load i32*, i32** %123, align 8
  %125 = select i1 %122, i32* %124, i32* %104
  %126 = load i32, i32* %125, align 4
  %127 = icmp sgt i32 %126, 0
  br i1 %127, label %128, label %175

128:                                              ; preds = %103
  %129 = bitcast %union.anon* %22 to [5 x i32]*
  %130 = getelementptr inbounds [5 x i32], [5 x i32]* %129, i64 0, i64 1
  %131 = getelementptr inbounds %"struct.tflite::reference_ops::BroadcastComparison4DSlowCommon", %"struct.tflite::reference_ops::BroadcastComparison4DSlowCommon"* %10, i64 0, i32 0, i32 1, i32 1
  %132 = bitcast [16 x i8]* %131 to i32*
  %133 = getelementptr inbounds %"struct.tflite::reference_ops::BroadcastComparison4DSlowCommon", %"struct.tflite::reference_ops::BroadcastComparison4DSlowCommon"* %10, i64 0, i32 0, i32 1, i32 1, i64 4
  %134 = bitcast i8* %133 to i32*
  %135 = getelementptr inbounds %"struct.tflite::reference_ops::BroadcastComparison4DSlowCommon", %"struct.tflite::reference_ops::BroadcastComparison4DSlowCommon"* %10, i64 0, i32 1, i32 1, i64 0
  %136 = load i32, i32* %135, align 8
  %137 = getelementptr inbounds %"struct.tflite::reference_ops::BroadcastComparison4DSlowCommon", %"struct.tflite::reference_ops::BroadcastComparison4DSlowCommon"* %10, i64 0, i32 1, i32 1, i64 1
  %138 = load i32, i32* %137, align 4
  %139 = getelementptr inbounds %"struct.tflite::reference_ops::BroadcastComparison4DSlowCommon", %"struct.tflite::reference_ops::BroadcastComparison4DSlowCommon"* %10, i64 0, i32 1, i32 1, i64 2
  %140 = load i32, i32* %139, align 8
  %141 = getelementptr inbounds %"struct.tflite::reference_ops::BroadcastComparison4DSlowCommon", %"struct.tflite::reference_ops::BroadcastComparison4DSlowCommon"* %10, i64 0, i32 1, i32 1, i64 3
  %142 = load i32, i32* %141, align 4
  %143 = getelementptr inbounds %"struct.tflite::reference_ops::BroadcastComparison4DSlowCommon", %"struct.tflite::reference_ops::BroadcastComparison4DSlowCommon"* %10, i64 0, i32 2, i32 1, i64 0
  %144 = load i32, i32* %143, align 8
  %145 = getelementptr inbounds %"struct.tflite::reference_ops::BroadcastComparison4DSlowCommon", %"struct.tflite::reference_ops::BroadcastComparison4DSlowCommon"* %10, i64 0, i32 2, i32 1, i64 1
  %146 = load i32, i32* %145, align 4
  %147 = getelementptr inbounds %"struct.tflite::reference_ops::BroadcastComparison4DSlowCommon", %"struct.tflite::reference_ops::BroadcastComparison4DSlowCommon"* %10, i64 0, i32 2, i32 1, i64 2
  %148 = load i32, i32* %147, align 8
  %149 = getelementptr inbounds %"struct.tflite::reference_ops::BroadcastComparison4DSlowCommon", %"struct.tflite::reference_ops::BroadcastComparison4DSlowCommon"* %10, i64 0, i32 2, i32 1, i64 3
  %150 = load i32, i32* %149, align 4
  %151 = getelementptr inbounds i32, i32* %104, i64 1
  %152 = sext i32 %150 to i64
  %153 = sext i32 %142 to i64
  %154 = sext i32 %148 to i64
  %155 = sext i32 %140 to i64
  %156 = sext i32 %146 to i64
  %157 = sext i32 %138 to i64
  %158 = sext i32 %144 to i64
  %159 = sext i32 %136 to i64
  %160 = getelementptr inbounds i32, i32* %124, i64 1
  %161 = select i1 %122, i32* %160, i32* %130
  %162 = getelementptr inbounds i32, i32* %124, i64 2
  %163 = select i1 %122, i32* %162, i32* %132
  %164 = getelementptr inbounds i32, i32* %124, i64 3
  %165 = select i1 %122, i32* %164, i32* %134
  br label %166

166:                                              ; preds = %128, %199
  %167 = phi i32 [ %126, %128 ], [ %200, %199 ]
  %168 = phi i64 [ 0, %128 ], [ %201, %199 ]
  %169 = load i32, i32* %161, align 4
  %170 = icmp sgt i32 %169, 0
  br i1 %170, label %171, label %199

171:                                              ; preds = %166
  %172 = mul nsw i64 %168, %159
  %173 = mul nsw i64 %168, %158
  %174 = trunc i64 %168 to i32
  br label %182

175:                                              ; preds = %199, %103
  %176 = xor i1 %122, true
  %177 = icmp eq i32* %124, null
  %178 = or i1 %177, %176
  br i1 %178, label %181, label %179

179:                                              ; preds = %175
  %180 = bitcast i32* %124 to i8*
  call void @_ZdaPv(i8* %180) #9
  br label %181

181:                                              ; preds = %175, %179
  call void @llvm.lifetime.end.p0i8(i64 96, i8* nonnull %11) #8
  ret void

182:                                              ; preds = %171, %222
  %183 = phi i32 [ %169, %171 ], [ %223, %222 ]
  %184 = phi i64 [ 0, %171 ], [ %224, %222 ]
  %185 = load i32, i32* %163, align 4
  %186 = icmp sgt i32 %185, 0
  br i1 %186, label %187, label %222

187:                                              ; preds = %182
  %188 = mul nsw i64 %184, %157
  %189 = add nsw i64 %188, %172
  %190 = mul nsw i64 %184, %156
  %191 = add nsw i64 %190, %173
  %192 = load i32, i32* %151, align 4
  %193 = mul nsw i32 %192, %174
  %194 = trunc i64 %184 to i32
  %195 = add nsw i32 %193, %194
  %196 = load i32, i32* %165, align 4
  br label %204

197:                                              ; preds = %222
  %198 = load i32, i32* %125, align 4
  br label %199

199:                                              ; preds = %197, %166
  %200 = phi i32 [ %198, %197 ], [ %167, %166 ]
  %201 = add nuw nsw i64 %168, 1
  %202 = sext i32 %200 to i64
  %203 = icmp slt i64 %201, %202
  br i1 %203, label %166, label %175

204:                                              ; preds = %187, %229
  %205 = phi i32 [ %185, %187 ], [ %230, %229 ]
  %206 = phi i32 [ %196, %187 ], [ %231, %229 ]
  %207 = phi i64 [ 0, %187 ], [ %232, %229 ]
  %208 = icmp sgt i32 %206, 0
  br i1 %208, label %209, label %229

209:                                              ; preds = %204
  %210 = mul nsw i64 %207, %155
  %211 = add nsw i64 %189, %210
  %212 = mul nsw i64 %207, %154
  %213 = add nsw i64 %191, %212
  %214 = load i32, i32* %132, align 8
  %215 = mul nsw i32 %195, %214
  %216 = trunc i64 %207 to i32
  %217 = add nsw i32 %215, %216
  %218 = load i32, i32* %134, align 4
  %219 = mul nsw i32 %217, %218
  br label %235

220:                                              ; preds = %229
  %221 = load i32, i32* %161, align 4
  br label %222

222:                                              ; preds = %220, %182
  %223 = phi i32 [ %221, %220 ], [ %183, %182 ]
  %224 = add nuw nsw i64 %184, 1
  %225 = sext i32 %223 to i64
  %226 = icmp slt i64 %224, %225
  br i1 %226, label %182, label %197

227:                                              ; preds = %235
  %228 = load i32, i32* %163, align 4
  br label %229

229:                                              ; preds = %227, %204
  %230 = phi i32 [ %228, %227 ], [ %205, %204 ]
  %231 = phi i32 [ %252, %227 ], [ %206, %204 ]
  %232 = add nuw nsw i64 %207, 1
  %233 = sext i32 %230 to i64
  %234 = icmp slt i64 %232, %233
  br i1 %234, label %204, label %220

235:                                              ; preds = %209, %235
  %236 = phi i64 [ 0, %209 ], [ %251, %235 ]
  %237 = mul nsw i64 %236, %153
  %238 = add nsw i64 %211, %237
  %239 = getelementptr inbounds float, float* %2, i64 %238
  %240 = load float, float* %239, align 4
  %241 = mul nsw i64 %236, %152
  %242 = add nsw i64 %213, %241
  %243 = getelementptr inbounds float, float* %4, i64 %242
  %244 = load float, float* %243, align 4
  %245 = fcmp une float %240, %244
  %246 = trunc i64 %236 to i32
  %247 = add nsw i32 %219, %246
  %248 = sext i32 %247 to i64
  %249 = getelementptr inbounds i8, i8* %6, i64 %248
  %250 = zext i1 %245 to i8
  store i8 %250, i8* %249, align 1
  %251 = add nuw nsw i64 %236, 1
  %252 = load i32, i32* %165, align 4
  %253 = sext i32 %252 to i64
  %254 = icmp slt i64 %251, %253
  br i1 %254, label %235, label %227
}

; Function Attrs: inlinehint nounwind ssp uwtable
define linkonce_odr hidden void @_ZN6tflite13reference_ops29BroadcastComparison4DSlowImplIiXadL_ZNS0_10NotEqualFnIiEEbT_S3_EEEEvRKNS_16ComparisonParamsERKNS_12RuntimeShapeEPKS3_S9_SB_S9_Pb(%"struct.tflite::ComparisonParams"* dereferenceable(32), %"class.tflite::RuntimeShape"* dereferenceable(32), i32*, %"class.tflite::RuntimeShape"* dereferenceable(32), i32*, %"class.tflite::RuntimeShape"* dereferenceable(32), i8*) local_unnamed_addr #4 comdat {
  %8 = alloca %"struct.tflite::NdArrayDesc", align 4
  %9 = alloca %"struct.tflite::NdArrayDesc", align 4
  %10 = alloca %"struct.tflite::reference_ops::BroadcastComparison4DSlowCommon", align 8
  %11 = bitcast %"struct.tflite::reference_ops::BroadcastComparison4DSlowCommon"* %10 to i8*
  call void @llvm.lifetime.start.p0i8(i64 96, i8* nonnull %11) #8
  call void @llvm.memset.p0i8.i64(i8* nonnull align 8 %11, i8 -86, i64 96, i1 false)
  %12 = getelementptr inbounds %"class.tflite::RuntimeShape", %"class.tflite::RuntimeShape"* %5, i64 0, i32 0
  %13 = bitcast %"struct.tflite::NdArrayDesc"* %8 to i8*
  call void @llvm.lifetime.start.p0i8(i64 32, i8* nonnull %13) #8, !noalias !932
  %14 = bitcast %"struct.tflite::NdArrayDesc"* %9 to i8*
  call void @llvm.memset.p0i8.i64(i8* nonnull align 4 %13, i8 -86, i64 32, i1 false) #8, !noalias !932
  call void @llvm.lifetime.start.p0i8(i64 32, i8* nonnull %14) #8, !noalias !932
  call void @llvm.memset.p0i8.i64(i8* nonnull align 4 %14, i8 -86, i64 32, i1 false) #8, !noalias !932
  call void @_ZN6tflite35NdArrayDescsForElementwiseBroadcastILi4EEEvRKNS_12RuntimeShapeES3_PNS_11NdArrayDescIXT_EEES6_(%"class.tflite::RuntimeShape"* dereferenceable(32) %1, %"class.tflite::RuntimeShape"* dereferenceable(32) %3, %"struct.tflite::NdArrayDesc"* nonnull %8, %"struct.tflite::NdArrayDesc"* nonnull %9) #8, !noalias !932
  %15 = getelementptr inbounds %"struct.tflite::reference_ops::BroadcastComparison4DSlowCommon", %"struct.tflite::reference_ops::BroadcastComparison4DSlowCommon"* %10, i64 0, i32 0, i32 0
  store i32 0, i32* %15, align 8, !alias.scope !935
  %16 = load i32, i32* %12, align 8, !noalias !935
  %17 = icmp sgt i32 %16, 4
  br i1 %17, label %18, label %19

18:                                               ; preds = %7
  call void @abort() #10, !noalias !935
  unreachable

19:                                               ; preds = %7
  store i32 4, i32* %15, align 8, !alias.scope !935
  %20 = sub i32 4, %16
  %21 = icmp sgt i32 %20, 0
  %22 = getelementptr inbounds %"struct.tflite::reference_ops::BroadcastComparison4DSlowCommon", %"struct.tflite::reference_ops::BroadcastComparison4DSlowCommon"* %10, i64 0, i32 0, i32 1
  br i1 %21, label %23, label %103

23:                                               ; preds = %19
  %24 = bitcast %union.anon* %22 to [5 x i32]*
  %25 = zext i32 %20 to i64
  %26 = icmp ult i32 %20, 8
  br i1 %26, label %96, label %27

27:                                               ; preds = %23
  %28 = and i64 %25, 4294967288
  %29 = add nsw i64 %28, -8
  %30 = lshr exact i64 %29, 3
  %31 = add nuw nsw i64 %30, 1
  %32 = and i64 %31, 7
  %33 = icmp ult i64 %29, 56
  br i1 %33, label %81, label %34

34:                                               ; preds = %27
  %35 = sub nsw i64 %31, %32
  br label %36

36:                                               ; preds = %36, %34
  %37 = phi i64 [ 0, %34 ], [ %78, %36 ]
  %38 = phi i64 [ %35, %34 ], [ %79, %36 ]
  %39 = getelementptr inbounds [5 x i32], [5 x i32]* %24, i64 0, i64 %37
  %40 = bitcast i32* %39 to <4 x i32>*
  store <4 x i32> <i32 1, i32 1, i32 1, i32 1>, <4 x i32>* %40, align 8, !alias.scope !935
  %41 = getelementptr inbounds i32, i32* %39, i64 4
  %42 = bitcast i32* %41 to <4 x i32>*
  store <4 x i32> <i32 1, i32 1, i32 1, i32 1>, <4 x i32>* %42, align 8, !alias.scope !935
  %43 = or i64 %37, 8
  %44 = getelementptr inbounds [5 x i32], [5 x i32]* %24, i64 0, i64 %43
  %45 = bitcast i32* %44 to <4 x i32>*
  store <4 x i32> <i32 1, i32 1, i32 1, i32 1>, <4 x i32>* %45, align 8, !alias.scope !935
  %46 = getelementptr inbounds i32, i32* %44, i64 4
  %47 = bitcast i32* %46 to <4 x i32>*
  store <4 x i32> <i32 1, i32 1, i32 1, i32 1>, <4 x i32>* %47, align 8, !alias.scope !935
  %48 = or i64 %37, 16
  %49 = getelementptr inbounds [5 x i32], [5 x i32]* %24, i64 0, i64 %48
  %50 = bitcast i32* %49 to <4 x i32>*
  store <4 x i32> <i32 1, i32 1, i32 1, i32 1>, <4 x i32>* %50, align 8, !alias.scope !935
  %51 = getelementptr inbounds i32, i32* %49, i64 4
  %52 = bitcast i32* %51 to <4 x i32>*
  store <4 x i32> <i32 1, i32 1, i32 1, i32 1>, <4 x i32>* %52, align 8, !alias.scope !935
  %53 = or i64 %37, 24
  %54 = getelementptr inbounds [5 x i32], [5 x i32]* %24, i64 0, i64 %53
  %55 = bitcast i32* %54 to <4 x i32>*
  store <4 x i32> <i32 1, i32 1, i32 1, i32 1>, <4 x i32>* %55, align 8, !alias.scope !935
  %56 = getelementptr inbounds i32, i32* %54, i64 4
  %57 = bitcast i32* %56 to <4 x i32>*
  store <4 x i32> <i32 1, i32 1, i32 1, i32 1>, <4 x i32>* %57, align 8, !alias.scope !935
  %58 = or i64 %37, 32
  %59 = getelementptr inbounds [5 x i32], [5 x i32]* %24, i64 0, i64 %58
  %60 = bitcast i32* %59 to <4 x i32>*
  store <4 x i32> <i32 1, i32 1, i32 1, i32 1>, <4 x i32>* %60, align 8, !alias.scope !935
  %61 = getelementptr inbounds i32, i32* %59, i64 4
  %62 = bitcast i32* %61 to <4 x i32>*
  store <4 x i32> <i32 1, i32 1, i32 1, i32 1>, <4 x i32>* %62, align 8, !alias.scope !935
  %63 = or i64 %37, 40
  %64 = getelementptr inbounds [5 x i32], [5 x i32]* %24, i64 0, i64 %63
  %65 = bitcast i32* %64 to <4 x i32>*
  store <4 x i32> <i32 1, i32 1, i32 1, i32 1>, <4 x i32>* %65, align 8, !alias.scope !935
  %66 = getelementptr inbounds i32, i32* %64, i64 4
  %67 = bitcast i32* %66 to <4 x i32>*
  store <4 x i32> <i32 1, i32 1, i32 1, i32 1>, <4 x i32>* %67, align 8, !alias.scope !935
  %68 = or i64 %37, 48
  %69 = getelementptr inbounds [5 x i32], [5 x i32]* %24, i64 0, i64 %68
  %70 = bitcast i32* %69 to <4 x i32>*
  store <4 x i32> <i32 1, i32 1, i32 1, i32 1>, <4 x i32>* %70, align 8, !alias.scope !935
  %71 = getelementptr inbounds i32, i32* %69, i64 4
  %72 = bitcast i32* %71 to <4 x i32>*
  store <4 x i32> <i32 1, i32 1, i32 1, i32 1>, <4 x i32>* %72, align 8, !alias.scope !935
  %73 = or i64 %37, 56
  %74 = getelementptr inbounds [5 x i32], [5 x i32]* %24, i64 0, i64 %73
  %75 = bitcast i32* %74 to <4 x i32>*
  store <4 x i32> <i32 1, i32 1, i32 1, i32 1>, <4 x i32>* %75, align 8, !alias.scope !935
  %76 = getelementptr inbounds i32, i32* %74, i64 4
  %77 = bitcast i32* %76 to <4 x i32>*
  store <4 x i32> <i32 1, i32 1, i32 1, i32 1>, <4 x i32>* %77, align 8, !alias.scope !935
  %78 = add i64 %37, 64
  %79 = add i64 %38, -8
  %80 = icmp eq i64 %79, 0
  br i1 %80, label %81, label %36, !llvm.loop !938

81:                                               ; preds = %36, %27
  %82 = phi i64 [ 0, %27 ], [ %78, %36 ]
  %83 = icmp eq i64 %32, 0
  br i1 %83, label %94, label %84

84:                                               ; preds = %81, %84
  %85 = phi i64 [ %91, %84 ], [ %82, %81 ]
  %86 = phi i64 [ %92, %84 ], [ %32, %81 ]
  %87 = getelementptr inbounds [5 x i32], [5 x i32]* %24, i64 0, i64 %85
  %88 = bitcast i32* %87 to <4 x i32>*
  store <4 x i32> <i32 1, i32 1, i32 1, i32 1>, <4 x i32>* %88, align 8, !alias.scope !935
  %89 = getelementptr inbounds i32, i32* %87, i64 4
  %90 = bitcast i32* %89 to <4 x i32>*
  store <4 x i32> <i32 1, i32 1, i32 1, i32 1>, <4 x i32>* %90, align 8, !alias.scope !935
  %91 = add i64 %85, 8
  %92 = add i64 %86, -1
  %93 = icmp eq i64 %92, 0
  br i1 %93, label %94, label %84, !llvm.loop !939

94:                                               ; preds = %84, %81
  %95 = icmp eq i64 %28, %25
  br i1 %95, label %103, label %96

96:                                               ; preds = %94, %23
  %97 = phi i64 [ 0, %23 ], [ %28, %94 ]
  br label %98

98:                                               ; preds = %96, %98
  %99 = phi i64 [ %101, %98 ], [ %97, %96 ]
  %100 = getelementptr inbounds [5 x i32], [5 x i32]* %24, i64 0, i64 %99
  store i32 1, i32* %100, align 4, !alias.scope !935
  %101 = add nuw nsw i64 %99, 1
  %102 = icmp eq i64 %101, %25
  br i1 %102, label %103, label %98, !llvm.loop !940

103:                                              ; preds = %98, %94, %19
  %104 = bitcast %union.anon* %22 to i32*
  %105 = sext i32 %20 to i64
  %106 = getelementptr inbounds i32, i32* %104, i64 %105
  %107 = bitcast i32* %106 to i8*
  %108 = icmp sgt i32 %16, 5
  %109 = getelementptr inbounds %"class.tflite::RuntimeShape", %"class.tflite::RuntimeShape"* %5, i64 0, i32 1
  %110 = getelementptr inbounds %union.anon, %union.anon* %109, i64 0, i32 0
  %111 = load i32*, i32** %110, align 8, !noalias !935
  %112 = bitcast %union.anon* %109 to i32*
  %113 = select i1 %108, i32* %111, i32* %112
  %114 = bitcast i32* %113 to i8*
  %115 = sext i32 %16 to i64
  %116 = shl nsw i64 %115, 2
  call void @llvm.memcpy.p0i8.p0i8.i64(i8* align 4 %107, i8* align 4 %114, i64 %116, i1 false) #8
  %117 = getelementptr inbounds %"struct.tflite::reference_ops::BroadcastComparison4DSlowCommon", %"struct.tflite::reference_ops::BroadcastComparison4DSlowCommon"* %10, i64 0, i32 1
  %118 = bitcast %"struct.tflite::NdArrayDesc"* %117 to i8*
  call void @llvm.memcpy.p0i8.p0i8.i64(i8* align 8 %118, i8* nonnull align 4 %13, i64 32, i1 false) #8
  %119 = getelementptr inbounds %"struct.tflite::reference_ops::BroadcastComparison4DSlowCommon", %"struct.tflite::reference_ops::BroadcastComparison4DSlowCommon"* %10, i64 0, i32 2
  %120 = bitcast %"struct.tflite::NdArrayDesc"* %119 to i8*
  call void @llvm.memcpy.p0i8.p0i8.i64(i8* align 8 %120, i8* nonnull align 4 %14, i64 32, i1 false) #8
  call void @llvm.lifetime.end.p0i8(i64 32, i8* nonnull %14) #8, !noalias !932
  call void @llvm.lifetime.end.p0i8(i64 32, i8* nonnull %13) #8, !noalias !932
  %121 = load i32, i32* %15, align 8
  %122 = icmp sgt i32 %121, 5
  %123 = getelementptr inbounds %union.anon, %union.anon* %22, i64 0, i32 0
  %124 = load i32*, i32** %123, align 8
  %125 = select i1 %122, i32* %124, i32* %104
  %126 = load i32, i32* %125, align 4
  %127 = icmp sgt i32 %126, 0
  br i1 %127, label %128, label %175

128:                                              ; preds = %103
  %129 = bitcast %union.anon* %22 to [5 x i32]*
  %130 = getelementptr inbounds [5 x i32], [5 x i32]* %129, i64 0, i64 1
  %131 = getelementptr inbounds %"struct.tflite::reference_ops::BroadcastComparison4DSlowCommon", %"struct.tflite::reference_ops::BroadcastComparison4DSlowCommon"* %10, i64 0, i32 0, i32 1, i32 1
  %132 = bitcast [16 x i8]* %131 to i32*
  %133 = getelementptr inbounds %"struct.tflite::reference_ops::BroadcastComparison4DSlowCommon", %"struct.tflite::reference_ops::BroadcastComparison4DSlowCommon"* %10, i64 0, i32 0, i32 1, i32 1, i64 4
  %134 = bitcast i8* %133 to i32*
  %135 = getelementptr inbounds %"struct.tflite::reference_ops::BroadcastComparison4DSlowCommon", %"struct.tflite::reference_ops::BroadcastComparison4DSlowCommon"* %10, i64 0, i32 1, i32 1, i64 0
  %136 = load i32, i32* %135, align 8
  %137 = getelementptr inbounds %"struct.tflite::reference_ops::BroadcastComparison4DSlowCommon", %"struct.tflite::reference_ops::BroadcastComparison4DSlowCommon"* %10, i64 0, i32 1, i32 1, i64 1
  %138 = load i32, i32* %137, align 4
  %139 = getelementptr inbounds %"struct.tflite::reference_ops::BroadcastComparison4DSlowCommon", %"struct.tflite::reference_ops::BroadcastComparison4DSlowCommon"* %10, i64 0, i32 1, i32 1, i64 2
  %140 = load i32, i32* %139, align 8
  %141 = getelementptr inbounds %"struct.tflite::reference_ops::BroadcastComparison4DSlowCommon", %"struct.tflite::reference_ops::BroadcastComparison4DSlowCommon"* %10, i64 0, i32 1, i32 1, i64 3
  %142 = load i32, i32* %141, align 4
  %143 = getelementptr inbounds %"struct.tflite::reference_ops::BroadcastComparison4DSlowCommon", %"struct.tflite::reference_ops::BroadcastComparison4DSlowCommon"* %10, i64 0, i32 2, i32 1, i64 0
  %144 = load i32, i32* %143, align 8
  %145 = getelementptr inbounds %"struct.tflite::reference_ops::BroadcastComparison4DSlowCommon", %"struct.tflite::reference_ops::BroadcastComparison4DSlowCommon"* %10, i64 0, i32 2, i32 1, i64 1
  %146 = load i32, i32* %145, align 4
  %147 = getelementptr inbounds %"struct.tflite::reference_ops::BroadcastComparison4DSlowCommon", %"struct.tflite::reference_ops::BroadcastComparison4DSlowCommon"* %10, i64 0, i32 2, i32 1, i64 2
  %148 = load i32, i32* %147, align 8
  %149 = getelementptr inbounds %"struct.tflite::reference_ops::BroadcastComparison4DSlowCommon", %"struct.tflite::reference_ops::BroadcastComparison4DSlowCommon"* %10, i64 0, i32 2, i32 1, i64 3
  %150 = load i32, i32* %149, align 4
  %151 = getelementptr inbounds i32, i32* %104, i64 1
  %152 = sext i32 %150 to i64
  %153 = sext i32 %142 to i64
  %154 = sext i32 %148 to i64
  %155 = sext i32 %140 to i64
  %156 = sext i32 %146 to i64
  %157 = sext i32 %138 to i64
  %158 = sext i32 %144 to i64
  %159 = sext i32 %136 to i64
  %160 = getelementptr inbounds i32, i32* %124, i64 1
  %161 = select i1 %122, i32* %160, i32* %130
  %162 = getelementptr inbounds i32, i32* %124, i64 2
  %163 = select i1 %122, i32* %162, i32* %132
  %164 = getelementptr inbounds i32, i32* %124, i64 3
  %165 = select i1 %122, i32* %164, i32* %134
  br label %166

166:                                              ; preds = %128, %199
  %167 = phi i32 [ %126, %128 ], [ %200, %199 ]
  %168 = phi i64 [ 0, %128 ], [ %201, %199 ]
  %169 = load i32, i32* %161, align 4
  %170 = icmp sgt i32 %169, 0
  br i1 %170, label %171, label %199

171:                                              ; preds = %166
  %172 = mul nsw i64 %168, %159
  %173 = mul nsw i64 %168, %158
  %174 = trunc i64 %168 to i32
  br label %182

175:                                              ; preds = %199, %103
  %176 = xor i1 %122, true
  %177 = icmp eq i32* %124, null
  %178 = or i1 %177, %176
  br i1 %178, label %181, label %179

179:                                              ; preds = %175
  %180 = bitcast i32* %124 to i8*
  call void @_ZdaPv(i8* %180) #9
  br label %181

181:                                              ; preds = %175, %179
  call void @llvm.lifetime.end.p0i8(i64 96, i8* nonnull %11) #8
  ret void

182:                                              ; preds = %171, %222
  %183 = phi i32 [ %169, %171 ], [ %223, %222 ]
  %184 = phi i64 [ 0, %171 ], [ %224, %222 ]
  %185 = load i32, i32* %163, align 4
  %186 = icmp sgt i32 %185, 0
  br i1 %186, label %187, label %222

187:                                              ; preds = %182
  %188 = mul nsw i64 %184, %157
  %189 = add nsw i64 %188, %172
  %190 = mul nsw i64 %184, %156
  %191 = add nsw i64 %190, %173
  %192 = load i32, i32* %151, align 4
  %193 = mul nsw i32 %192, %174
  %194 = trunc i64 %184 to i32
  %195 = add nsw i32 %193, %194
  %196 = load i32, i32* %165, align 4
  br label %204

197:                                              ; preds = %222
  %198 = load i32, i32* %125, align 4
  br label %199

199:                                              ; preds = %197, %166
  %200 = phi i32 [ %198, %197 ], [ %167, %166 ]
  %201 = add nuw nsw i64 %168, 1
  %202 = sext i32 %200 to i64
  %203 = icmp slt i64 %201, %202
  br i1 %203, label %166, label %175

204:                                              ; preds = %187, %229
  %205 = phi i32 [ %185, %187 ], [ %230, %229 ]
  %206 = phi i32 [ %196, %187 ], [ %231, %229 ]
  %207 = phi i64 [ 0, %187 ], [ %232, %229 ]
  %208 = icmp sgt i32 %206, 0
  br i1 %208, label %209, label %229

209:                                              ; preds = %204
  %210 = mul nsw i64 %207, %155
  %211 = add nsw i64 %189, %210
  %212 = mul nsw i64 %207, %154
  %213 = add nsw i64 %191, %212
  %214 = load i32, i32* %132, align 8
  %215 = mul nsw i32 %195, %214
  %216 = trunc i64 %207 to i32
  %217 = add nsw i32 %215, %216
  %218 = load i32, i32* %134, align 4
  %219 = mul nsw i32 %217, %218
  br label %235

220:                                              ; preds = %229
  %221 = load i32, i32* %161, align 4
  br label %222

222:                                              ; preds = %220, %182
  %223 = phi i32 [ %221, %220 ], [ %183, %182 ]
  %224 = add nuw nsw i64 %184, 1
  %225 = sext i32 %223 to i64
  %226 = icmp slt i64 %224, %225
  br i1 %226, label %182, label %197

227:                                              ; preds = %235
  %228 = load i32, i32* %163, align 4
  br label %229

229:                                              ; preds = %227, %204
  %230 = phi i32 [ %228, %227 ], [ %205, %204 ]
  %231 = phi i32 [ %252, %227 ], [ %206, %204 ]
  %232 = add nuw nsw i64 %207, 1
  %233 = sext i32 %230 to i64
  %234 = icmp slt i64 %232, %233
  br i1 %234, label %204, label %220

235:                                              ; preds = %209, %235
  %236 = phi i64 [ 0, %209 ], [ %251, %235 ]
  %237 = mul nsw i64 %236, %153
  %238 = add nsw i64 %211, %237
  %239 = getelementptr inbounds i32, i32* %2, i64 %238
  %240 = load i32, i32* %239, align 4
  %241 = mul nsw i64 %236, %152
  %242 = add nsw i64 %213, %241
  %243 = getelementptr inbounds i32, i32* %4, i64 %242
  %244 = load i32, i32* %243, align 4
  %245 = icmp ne i32 %240, %244
  %246 = trunc i64 %236 to i32
  %247 = add nsw i32 %219, %246
  %248 = sext i32 %247 to i64
  %249 = getelementptr inbounds i8, i8* %6, i64 %248
  %250 = zext i1 %245 to i8
  store i8 %250, i8* %249, align 1
  %251 = add nuw nsw i64 %236, 1
  %252 = load i32, i32* %165, align 4
  %253 = sext i32 %252 to i64
  %254 = icmp slt i64 %251, %253
  br i1 %254, label %235, label %227
}

; Function Attrs: inlinehint nounwind ssp uwtable
define linkonce_odr hidden void @_ZN6tflite13reference_ops29BroadcastComparison4DSlowImplIlXadL_ZNS0_10NotEqualFnIlEEbT_S3_EEEEvRKNS_16ComparisonParamsERKNS_12RuntimeShapeEPKS3_S9_SB_S9_Pb(%"struct.tflite::ComparisonParams"* dereferenceable(32), %"class.tflite::RuntimeShape"* dereferenceable(32), i64*, %"class.tflite::RuntimeShape"* dereferenceable(32), i64*, %"class.tflite::RuntimeShape"* dereferenceable(32), i8*) local_unnamed_addr #4 comdat {
  %8 = alloca %"struct.tflite::NdArrayDesc", align 4
  %9 = alloca %"struct.tflite::NdArrayDesc", align 4
  %10 = alloca %"struct.tflite::reference_ops::BroadcastComparison4DSlowCommon", align 8
  %11 = bitcast %"struct.tflite::reference_ops::BroadcastComparison4DSlowCommon"* %10 to i8*
  call void @llvm.lifetime.start.p0i8(i64 96, i8* nonnull %11) #8
  call void @llvm.memset.p0i8.i64(i8* nonnull align 8 %11, i8 -86, i64 96, i1 false)
  %12 = getelementptr inbounds %"class.tflite::RuntimeShape", %"class.tflite::RuntimeShape"* %5, i64 0, i32 0
  %13 = bitcast %"struct.tflite::NdArrayDesc"* %8 to i8*
  call void @llvm.lifetime.start.p0i8(i64 32, i8* nonnull %13) #8, !noalias !941
  %14 = bitcast %"struct.tflite::NdArrayDesc"* %9 to i8*
  call void @llvm.memset.p0i8.i64(i8* nonnull align 4 %13, i8 -86, i64 32, i1 false) #8, !noalias !941
  call void @llvm.lifetime.start.p0i8(i64 32, i8* nonnull %14) #8, !noalias !941
  call void @llvm.memset.p0i8.i64(i8* nonnull align 4 %14, i8 -86, i64 32, i1 false) #8, !noalias !941
  call void @_ZN6tflite35NdArrayDescsForElementwiseBroadcastILi4EEEvRKNS_12RuntimeShapeES3_PNS_11NdArrayDescIXT_EEES6_(%"class.tflite::RuntimeShape"* dereferenceable(32) %1, %"class.tflite::RuntimeShape"* dereferenceable(32) %3, %"struct.tflite::NdArrayDesc"* nonnull %8, %"struct.tflite::NdArrayDesc"* nonnull %9) #8, !noalias !941
  %15 = getelementptr inbounds %"struct.tflite::reference_ops::BroadcastComparison4DSlowCommon", %"struct.tflite::reference_ops::BroadcastComparison4DSlowCommon"* %10, i64 0, i32 0, i32 0
  store i32 0, i32* %15, align 8, !alias.scope !944
  %16 = load i32, i32* %12, align 8, !noalias !944
  %17 = icmp sgt i32 %16, 4
  br i1 %17, label %18, label %19

18:                                               ; preds = %7
  call void @abort() #10, !noalias !944
  unreachable

19:                                               ; preds = %7
  store i32 4, i32* %15, align 8, !alias.scope !944
  %20 = sub i32 4, %16
  %21 = icmp sgt i32 %20, 0
  %22 = getelementptr inbounds %"struct.tflite::reference_ops::BroadcastComparison4DSlowCommon", %"struct.tflite::reference_ops::BroadcastComparison4DSlowCommon"* %10, i64 0, i32 0, i32 1
  br i1 %21, label %23, label %103

23:                                               ; preds = %19
  %24 = bitcast %union.anon* %22 to [5 x i32]*
  %25 = zext i32 %20 to i64
  %26 = icmp ult i32 %20, 8
  br i1 %26, label %96, label %27

27:                                               ; preds = %23
  %28 = and i64 %25, 4294967288
  %29 = add nsw i64 %28, -8
  %30 = lshr exact i64 %29, 3
  %31 = add nuw nsw i64 %30, 1
  %32 = and i64 %31, 7
  %33 = icmp ult i64 %29, 56
  br i1 %33, label %81, label %34

34:                                               ; preds = %27
  %35 = sub nsw i64 %31, %32
  br label %36

36:                                               ; preds = %36, %34
  %37 = phi i64 [ 0, %34 ], [ %78, %36 ]
  %38 = phi i64 [ %35, %34 ], [ %79, %36 ]
  %39 = getelementptr inbounds [5 x i32], [5 x i32]* %24, i64 0, i64 %37
  %40 = bitcast i32* %39 to <4 x i32>*
  store <4 x i32> <i32 1, i32 1, i32 1, i32 1>, <4 x i32>* %40, align 8, !alias.scope !944
  %41 = getelementptr inbounds i32, i32* %39, i64 4
  %42 = bitcast i32* %41 to <4 x i32>*
  store <4 x i32> <i32 1, i32 1, i32 1, i32 1>, <4 x i32>* %42, align 8, !alias.scope !944
  %43 = or i64 %37, 8
  %44 = getelementptr inbounds [5 x i32], [5 x i32]* %24, i64 0, i64 %43
  %45 = bitcast i32* %44 to <4 x i32>*
  store <4 x i32> <i32 1, i32 1, i32 1, i32 1>, <4 x i32>* %45, align 8, !alias.scope !944
  %46 = getelementptr inbounds i32, i32* %44, i64 4
  %47 = bitcast i32* %46 to <4 x i32>*
  store <4 x i32> <i32 1, i32 1, i32 1, i32 1>, <4 x i32>* %47, align 8, !alias.scope !944
  %48 = or i64 %37, 16
  %49 = getelementptr inbounds [5 x i32], [5 x i32]* %24, i64 0, i64 %48
  %50 = bitcast i32* %49 to <4 x i32>*
  store <4 x i32> <i32 1, i32 1, i32 1, i32 1>, <4 x i32>* %50, align 8, !alias.scope !944
  %51 = getelementptr inbounds i32, i32* %49, i64 4
  %52 = bitcast i32* %51 to <4 x i32>*
  store <4 x i32> <i32 1, i32 1, i32 1, i32 1>, <4 x i32>* %52, align 8, !alias.scope !944
  %53 = or i64 %37, 24
  %54 = getelementptr inbounds [5 x i32], [5 x i32]* %24, i64 0, i64 %53
  %55 = bitcast i32* %54 to <4 x i32>*
  store <4 x i32> <i32 1, i32 1, i32 1, i32 1>, <4 x i32>* %55, align 8, !alias.scope !944
  %56 = getelementptr inbounds i32, i32* %54, i64 4
  %57 = bitcast i32* %56 to <4 x i32>*
  store <4 x i32> <i32 1, i32 1, i32 1, i32 1>, <4 x i32>* %57, align 8, !alias.scope !944
  %58 = or i64 %37, 32
  %59 = getelementptr inbounds [5 x i32], [5 x i32]* %24, i64 0, i64 %58
  %60 = bitcast i32* %59 to <4 x i32>*
  store <4 x i32> <i32 1, i32 1, i32 1, i32 1>, <4 x i32>* %60, align 8, !alias.scope !944
  %61 = getelementptr inbounds i32, i32* %59, i64 4
  %62 = bitcast i32* %61 to <4 x i32>*
  store <4 x i32> <i32 1, i32 1, i32 1, i32 1>, <4 x i32>* %62, align 8, !alias.scope !944
  %63 = or i64 %37, 40
  %64 = getelementptr inbounds [5 x i32], [5 x i32]* %24, i64 0, i64 %63
  %65 = bitcast i32* %64 to <4 x i32>*
  store <4 x i32> <i32 1, i32 1, i32 1, i32 1>, <4 x i32>* %65, align 8, !alias.scope !944
  %66 = getelementptr inbounds i32, i32* %64, i64 4
  %67 = bitcast i32* %66 to <4 x i32>*
  store <4 x i32> <i32 1, i32 1, i32 1, i32 1>, <4 x i32>* %67, align 8, !alias.scope !944
  %68 = or i64 %37, 48
  %69 = getelementptr inbounds [5 x i32], [5 x i32]* %24, i64 0, i64 %68
  %70 = bitcast i32* %69 to <4 x i32>*
  store <4 x i32> <i32 1, i32 1, i32 1, i32 1>, <4 x i32>* %70, align 8, !alias.scope !944
  %71 = getelementptr inbounds i32, i32* %69, i64 4
  %72 = bitcast i32* %71 to <4 x i32>*
  store <4 x i32> <i32 1, i32 1, i32 1, i32 1>, <4 x i32>* %72, align 8, !alias.scope !944
  %73 = or i64 %37, 56
  %74 = getelementptr inbounds [5 x i32], [5 x i32]* %24, i64 0, i64 %73
  %75 = bitcast i32* %74 to <4 x i32>*
  store <4 x i32> <i32 1, i32 1, i32 1, i32 1>, <4 x i32>* %75, align 8, !alias.scope !944
  %76 = getelementptr inbounds i32, i32* %74, i64 4
  %77 = bitcast i32* %76 to <4 x i32>*
  store <4 x i32> <i32 1, i32 1, i32 1, i32 1>, <4 x i32>* %77, align 8, !alias.scope !944
  %78 = add i64 %37, 64
  %79 = add i64 %38, -8
  %80 = icmp eq i64 %79, 0
  br i1 %80, label %81, label %36, !llvm.loop !947

81:                                               ; preds = %36, %27
  %82 = phi i64 [ 0, %27 ], [ %78, %36 ]
  %83 = icmp eq i64 %32, 0
  br i1 %83, label %94, label %84

84:                                               ; preds = %81, %84
  %85 = phi i64 [ %91, %84 ], [ %82, %81 ]
  %86 = phi i64 [ %92, %84 ], [ %32, %81 ]
  %87 = getelementptr inbounds [5 x i32], [5 x i32]* %24, i64 0, i64 %85
  %88 = bitcast i32* %87 to <4 x i32>*
  store <4 x i32> <i32 1, i32 1, i32 1, i32 1>, <4 x i32>* %88, align 8, !alias.scope !944
  %89 = getelementptr inbounds i32, i32* %87, i64 4
  %90 = bitcast i32* %89 to <4 x i32>*
  store <4 x i32> <i32 1, i32 1, i32 1, i32 1>, <4 x i32>* %90, align 8, !alias.scope !944
  %91 = add i64 %85, 8
  %92 = add i64 %86, -1
  %93 = icmp eq i64 %92, 0
  br i1 %93, label %94, label %84, !llvm.loop !948

94:                                               ; preds = %84, %81
  %95 = icmp eq i64 %28, %25
  br i1 %95, label %103, label %96

96:                                               ; preds = %94, %23
  %97 = phi i64 [ 0, %23 ], [ %28, %94 ]
  br label %98

98:                                               ; preds = %96, %98
  %99 = phi i64 [ %101, %98 ], [ %97, %96 ]
  %100 = getelementptr inbounds [5 x i32], [5 x i32]* %24, i64 0, i64 %99
  store i32 1, i32* %100, align 4, !alias.scope !944
  %101 = add nuw nsw i64 %99, 1
  %102 = icmp eq i64 %101, %25
  br i1 %102, label %103, label %98, !llvm.loop !949

103:                                              ; preds = %98, %94, %19
  %104 = bitcast %union.anon* %22 to i32*
  %105 = sext i32 %20 to i64
  %106 = getelementptr inbounds i32, i32* %104, i64 %105
  %107 = bitcast i32* %106 to i8*
  %108 = icmp sgt i32 %16, 5
  %109 = getelementptr inbounds %"class.tflite::RuntimeShape", %"class.tflite::RuntimeShape"* %5, i64 0, i32 1
  %110 = getelementptr inbounds %union.anon, %union.anon* %109, i64 0, i32 0
  %111 = load i32*, i32** %110, align 8, !noalias !944
  %112 = bitcast %union.anon* %109 to i32*
  %113 = select i1 %108, i32* %111, i32* %112
  %114 = bitcast i32* %113 to i8*
  %115 = sext i32 %16 to i64
  %116 = shl nsw i64 %115, 2
  call void @llvm.memcpy.p0i8.p0i8.i64(i8* align 4 %107, i8* align 4 %114, i64 %116, i1 false) #8
  %117 = getelementptr inbounds %"struct.tflite::reference_ops::BroadcastComparison4DSlowCommon", %"struct.tflite::reference_ops::BroadcastComparison4DSlowCommon"* %10, i64 0, i32 1
  %118 = bitcast %"struct.tflite::NdArrayDesc"* %117 to i8*
  call void @llvm.memcpy.p0i8.p0i8.i64(i8* align 8 %118, i8* nonnull align 4 %13, i64 32, i1 false) #8
  %119 = getelementptr inbounds %"struct.tflite::reference_ops::BroadcastComparison4DSlowCommon", %"struct.tflite::reference_ops::BroadcastComparison4DSlowCommon"* %10, i64 0, i32 2
  %120 = bitcast %"struct.tflite::NdArrayDesc"* %119 to i8*
  call void @llvm.memcpy.p0i8.p0i8.i64(i8* align 8 %120, i8* nonnull align 4 %14, i64 32, i1 false) #8
  call void @llvm.lifetime.end.p0i8(i64 32, i8* nonnull %14) #8, !noalias !941
  call void @llvm.lifetime.end.p0i8(i64 32, i8* nonnull %13) #8, !noalias !941
  %121 = load i32, i32* %15, align 8
  %122 = icmp sgt i32 %121, 5
  %123 = getelementptr inbounds %union.anon, %union.anon* %22, i64 0, i32 0
  %124 = load i32*, i32** %123, align 8
  %125 = select i1 %122, i32* %124, i32* %104
  %126 = load i32, i32* %125, align 4
  %127 = icmp sgt i32 %126, 0
  br i1 %127, label %128, label %175

128:                                              ; preds = %103
  %129 = bitcast %union.anon* %22 to [5 x i32]*
  %130 = getelementptr inbounds [5 x i32], [5 x i32]* %129, i64 0, i64 1
  %131 = getelementptr inbounds %"struct.tflite::reference_ops::BroadcastComparison4DSlowCommon", %"struct.tflite::reference_ops::BroadcastComparison4DSlowCommon"* %10, i64 0, i32 0, i32 1, i32 1
  %132 = bitcast [16 x i8]* %131 to i32*
  %133 = getelementptr inbounds %"struct.tflite::reference_ops::BroadcastComparison4DSlowCommon", %"struct.tflite::reference_ops::BroadcastComparison4DSlowCommon"* %10, i64 0, i32 0, i32 1, i32 1, i64 4
  %134 = bitcast i8* %133 to i32*
  %135 = getelementptr inbounds %"struct.tflite::reference_ops::BroadcastComparison4DSlowCommon", %"struct.tflite::reference_ops::BroadcastComparison4DSlowCommon"* %10, i64 0, i32 1, i32 1, i64 0
  %136 = load i32, i32* %135, align 8
  %137 = getelementptr inbounds %"struct.tflite::reference_ops::BroadcastComparison4DSlowCommon", %"struct.tflite::reference_ops::BroadcastComparison4DSlowCommon"* %10, i64 0, i32 1, i32 1, i64 1
  %138 = load i32, i32* %137, align 4
  %139 = getelementptr inbounds %"struct.tflite::reference_ops::BroadcastComparison4DSlowCommon", %"struct.tflite::reference_ops::BroadcastComparison4DSlowCommon"* %10, i64 0, i32 1, i32 1, i64 2
  %140 = load i32, i32* %139, align 8
  %141 = getelementptr inbounds %"struct.tflite::reference_ops::BroadcastComparison4DSlowCommon", %"struct.tflite::reference_ops::BroadcastComparison4DSlowCommon"* %10, i64 0, i32 1, i32 1, i64 3
  %142 = load i32, i32* %141, align 4
  %143 = getelementptr inbounds %"struct.tflite::reference_ops::BroadcastComparison4DSlowCommon", %"struct.tflite::reference_ops::BroadcastComparison4DSlowCommon"* %10, i64 0, i32 2, i32 1, i64 0
  %144 = load i32, i32* %143, align 8
  %145 = getelementptr inbounds %"struct.tflite::reference_ops::BroadcastComparison4DSlowCommon", %"struct.tflite::reference_ops::BroadcastComparison4DSlowCommon"* %10, i64 0, i32 2, i32 1, i64 1
  %146 = load i32, i32* %145, align 4
  %147 = getelementptr inbounds %"struct.tflite::reference_ops::BroadcastComparison4DSlowCommon", %"struct.tflite::reference_ops::BroadcastComparison4DSlowCommon"* %10, i64 0, i32 2, i32 1, i64 2
  %148 = load i32, i32* %147, align 8
  %149 = getelementptr inbounds %"struct.tflite::reference_ops::BroadcastComparison4DSlowCommon", %"struct.tflite::reference_ops::BroadcastComparison4DSlowCommon"* %10, i64 0, i32 2, i32 1, i64 3
  %150 = load i32, i32* %149, align 4
  %151 = getelementptr inbounds i32, i32* %104, i64 1
  %152 = sext i32 %150 to i64
  %153 = sext i32 %142 to i64
  %154 = sext i32 %148 to i64
  %155 = sext i32 %140 to i64
  %156 = sext i32 %146 to i64
  %157 = sext i32 %138 to i64
  %158 = sext i32 %144 to i64
  %159 = sext i32 %136 to i64
  %160 = getelementptr inbounds i32, i32* %124, i64 1
  %161 = select i1 %122, i32* %160, i32* %130
  %162 = getelementptr inbounds i32, i32* %124, i64 2
  %163 = select i1 %122, i32* %162, i32* %132
  %164 = getelementptr inbounds i32, i32* %124, i64 3
  %165 = select i1 %122, i32* %164, i32* %134
  br label %166

166:                                              ; preds = %128, %199
  %167 = phi i32 [ %126, %128 ], [ %200, %199 ]
  %168 = phi i64 [ 0, %128 ], [ %201, %199 ]
  %169 = load i32, i32* %161, align 4
  %170 = icmp sgt i32 %169, 0
  br i1 %170, label %171, label %199

171:                                              ; preds = %166
  %172 = mul nsw i64 %168, %159
  %173 = mul nsw i64 %168, %158
  %174 = trunc i64 %168 to i32
  br label %182

175:                                              ; preds = %199, %103
  %176 = xor i1 %122, true
  %177 = icmp eq i32* %124, null
  %178 = or i1 %177, %176
  br i1 %178, label %181, label %179

179:                                              ; preds = %175
  %180 = bitcast i32* %124 to i8*
  call void @_ZdaPv(i8* %180) #9
  br label %181

181:                                              ; preds = %175, %179
  call void @llvm.lifetime.end.p0i8(i64 96, i8* nonnull %11) #8
  ret void

182:                                              ; preds = %171, %222
  %183 = phi i32 [ %169, %171 ], [ %223, %222 ]
  %184 = phi i64 [ 0, %171 ], [ %224, %222 ]
  %185 = load i32, i32* %163, align 4
  %186 = icmp sgt i32 %185, 0
  br i1 %186, label %187, label %222

187:                                              ; preds = %182
  %188 = mul nsw i64 %184, %157
  %189 = add nsw i64 %188, %172
  %190 = mul nsw i64 %184, %156
  %191 = add nsw i64 %190, %173
  %192 = load i32, i32* %151, align 4
  %193 = mul nsw i32 %192, %174
  %194 = trunc i64 %184 to i32
  %195 = add nsw i32 %193, %194
  %196 = load i32, i32* %165, align 4
  br label %204

197:                                              ; preds = %222
  %198 = load i32, i32* %125, align 4
  br label %199

199:                                              ; preds = %197, %166
  %200 = phi i32 [ %198, %197 ], [ %167, %166 ]
  %201 = add nuw nsw i64 %168, 1
  %202 = sext i32 %200 to i64
  %203 = icmp slt i64 %201, %202
  br i1 %203, label %166, label %175

204:                                              ; preds = %187, %229
  %205 = phi i32 [ %185, %187 ], [ %230, %229 ]
  %206 = phi i32 [ %196, %187 ], [ %231, %229 ]
  %207 = phi i64 [ 0, %187 ], [ %232, %229 ]
  %208 = icmp sgt i32 %206, 0
  br i1 %208, label %209, label %229

209:                                              ; preds = %204
  %210 = mul nsw i64 %207, %155
  %211 = add nsw i64 %189, %210
  %212 = mul nsw i64 %207, %154
  %213 = add nsw i64 %191, %212
  %214 = load i32, i32* %132, align 8
  %215 = mul nsw i32 %195, %214
  %216 = trunc i64 %207 to i32
  %217 = add nsw i32 %215, %216
  %218 = load i32, i32* %134, align 4
  %219 = mul nsw i32 %217, %218
  br label %235

220:                                              ; preds = %229
  %221 = load i32, i32* %161, align 4
  br label %222

222:                                              ; preds = %220, %182
  %223 = phi i32 [ %221, %220 ], [ %183, %182 ]
  %224 = add nuw nsw i64 %184, 1
  %225 = sext i32 %223 to i64
  %226 = icmp slt i64 %224, %225
  br i1 %226, label %182, label %197

227:                                              ; preds = %235
  %228 = load i32, i32* %163, align 4
  br label %229

229:                                              ; preds = %227, %204
  %230 = phi i32 [ %228, %227 ], [ %205, %204 ]
  %231 = phi i32 [ %252, %227 ], [ %206, %204 ]
  %232 = add nuw nsw i64 %207, 1
  %233 = sext i32 %230 to i64
  %234 = icmp slt i64 %232, %233
  br i1 %234, label %204, label %220

235:                                              ; preds = %209, %235
  %236 = phi i64 [ 0, %209 ], [ %251, %235 ]
  %237 = mul nsw i64 %236, %153
  %238 = add nsw i64 %211, %237
  %239 = getelementptr inbounds i64, i64* %2, i64 %238
  %240 = load i64, i64* %239, align 8
  %241 = mul nsw i64 %236, %152
  %242 = add nsw i64 %213, %241
  %243 = getelementptr inbounds i64, i64* %4, i64 %242
  %244 = load i64, i64* %243, align 8
  %245 = icmp ne i64 %240, %244
  %246 = trunc i64 %236 to i32
  %247 = add nsw i32 %219, %246
  %248 = sext i32 %247 to i64
  %249 = getelementptr inbounds i8, i8* %6, i64 %248
  %250 = zext i1 %245 to i8
  store i8 %250, i8* %249, align 1
  %251 = add nuw nsw i64 %236, 1
  %252 = load i32, i32* %165, align 4
  %253 = sext i32 %252 to i64
  %254 = icmp slt i64 %251, %253
  br i1 %254, label %235, label %227
}

; Function Attrs: inlinehint nounwind ssp uwtable
define linkonce_odr hidden void @_ZN6tflite13reference_ops36BroadcastComparison4DSlowWithScalingIhXadL_ZNS0_10NotEqualFnIiEEbT_S3_EEEEvRKNS_16ComparisonParamsERKNS_12RuntimeShapeEPKS3_S9_SB_S9_Pb(%"struct.tflite::ComparisonParams"* dereferenceable(32), %"class.tflite::RuntimeShape"* dereferenceable(32), i8*, %"class.tflite::RuntimeShape"* dereferenceable(32), i8*, %"class.tflite::RuntimeShape"* dereferenceable(32), i8*) local_unnamed_addr #4 comdat {
  %8 = alloca %"struct.tflite::NdArrayDesc", align 4
  %9 = alloca %"struct.tflite::NdArrayDesc", align 4
  %10 = alloca %"struct.tflite::reference_ops::BroadcastComparison4DSlowCommon", align 8
  %11 = bitcast %"struct.tflite::reference_ops::BroadcastComparison4DSlowCommon"* %10 to i8*
  call void @llvm.lifetime.start.p0i8(i64 96, i8* nonnull %11) #8
  call void @llvm.memset.p0i8.i64(i8* nonnull align 8 %11, i8 -86, i64 96, i1 false)
  %12 = getelementptr inbounds %"class.tflite::RuntimeShape", %"class.tflite::RuntimeShape"* %5, i64 0, i32 0
  %13 = bitcast %"struct.tflite::NdArrayDesc"* %8 to i8*
  call void @llvm.lifetime.start.p0i8(i64 32, i8* nonnull %13) #8, !noalias !950
  %14 = bitcast %"struct.tflite::NdArrayDesc"* %9 to i8*
  call void @llvm.memset.p0i8.i64(i8* nonnull align 4 %13, i8 -86, i64 32, i1 false) #8, !noalias !950
  call void @llvm.lifetime.start.p0i8(i64 32, i8* nonnull %14) #8, !noalias !950
  call void @llvm.memset.p0i8.i64(i8* nonnull align 4 %14, i8 -86, i64 32, i1 false) #8, !noalias !950
  call void @_ZN6tflite35NdArrayDescsForElementwiseBroadcastILi4EEEvRKNS_12RuntimeShapeES3_PNS_11NdArrayDescIXT_EEES6_(%"class.tflite::RuntimeShape"* dereferenceable(32) %1, %"class.tflite::RuntimeShape"* dereferenceable(32) %3, %"struct.tflite::NdArrayDesc"* nonnull %8, %"struct.tflite::NdArrayDesc"* nonnull %9) #8, !noalias !950
  %15 = getelementptr inbounds %"struct.tflite::reference_ops::BroadcastComparison4DSlowCommon", %"struct.tflite::reference_ops::BroadcastComparison4DSlowCommon"* %10, i64 0, i32 0, i32 0
  store i32 0, i32* %15, align 8, !alias.scope !953
  %16 = load i32, i32* %12, align 8, !noalias !953
  %17 = icmp sgt i32 %16, 4
  br i1 %17, label %18, label %19

18:                                               ; preds = %7
  call void @abort() #10, !noalias !953
  unreachable

19:                                               ; preds = %7
  store i32 4, i32* %15, align 8, !alias.scope !953
  %20 = sub i32 4, %16
  %21 = icmp sgt i32 %20, 0
  %22 = getelementptr inbounds %"struct.tflite::reference_ops::BroadcastComparison4DSlowCommon", %"struct.tflite::reference_ops::BroadcastComparison4DSlowCommon"* %10, i64 0, i32 0, i32 1
  br i1 %21, label %23, label %103

23:                                               ; preds = %19
  %24 = bitcast %union.anon* %22 to [5 x i32]*
  %25 = zext i32 %20 to i64
  %26 = icmp ult i32 %20, 8
  br i1 %26, label %96, label %27

27:                                               ; preds = %23
  %28 = and i64 %25, 4294967288
  %29 = add nsw i64 %28, -8
  %30 = lshr exact i64 %29, 3
  %31 = add nuw nsw i64 %30, 1
  %32 = and i64 %31, 7
  %33 = icmp ult i64 %29, 56
  br i1 %33, label %81, label %34

34:                                               ; preds = %27
  %35 = sub nsw i64 %31, %32
  br label %36

36:                                               ; preds = %36, %34
  %37 = phi i64 [ 0, %34 ], [ %78, %36 ]
  %38 = phi i64 [ %35, %34 ], [ %79, %36 ]
  %39 = getelementptr inbounds [5 x i32], [5 x i32]* %24, i64 0, i64 %37
  %40 = bitcast i32* %39 to <4 x i32>*
  store <4 x i32> <i32 1, i32 1, i32 1, i32 1>, <4 x i32>* %40, align 8, !alias.scope !953
  %41 = getelementptr inbounds i32, i32* %39, i64 4
  %42 = bitcast i32* %41 to <4 x i32>*
  store <4 x i32> <i32 1, i32 1, i32 1, i32 1>, <4 x i32>* %42, align 8, !alias.scope !953
  %43 = or i64 %37, 8
  %44 = getelementptr inbounds [5 x i32], [5 x i32]* %24, i64 0, i64 %43
  %45 = bitcast i32* %44 to <4 x i32>*
  store <4 x i32> <i32 1, i32 1, i32 1, i32 1>, <4 x i32>* %45, align 8, !alias.scope !953
  %46 = getelementptr inbounds i32, i32* %44, i64 4
  %47 = bitcast i32* %46 to <4 x i32>*
  store <4 x i32> <i32 1, i32 1, i32 1, i32 1>, <4 x i32>* %47, align 8, !alias.scope !953
  %48 = or i64 %37, 16
  %49 = getelementptr inbounds [5 x i32], [5 x i32]* %24, i64 0, i64 %48
  %50 = bitcast i32* %49 to <4 x i32>*
  store <4 x i32> <i32 1, i32 1, i32 1, i32 1>, <4 x i32>* %50, align 8, !alias.scope !953
  %51 = getelementptr inbounds i32, i32* %49, i64 4
  %52 = bitcast i32* %51 to <4 x i32>*
  store <4 x i32> <i32 1, i32 1, i32 1, i32 1>, <4 x i32>* %52, align 8, !alias.scope !953
  %53 = or i64 %37, 24
  %54 = getelementptr inbounds [5 x i32], [5 x i32]* %24, i64 0, i64 %53
  %55 = bitcast i32* %54 to <4 x i32>*
  store <4 x i32> <i32 1, i32 1, i32 1, i32 1>, <4 x i32>* %55, align 8, !alias.scope !953
  %56 = getelementptr inbounds i32, i32* %54, i64 4
  %57 = bitcast i32* %56 to <4 x i32>*
  store <4 x i32> <i32 1, i32 1, i32 1, i32 1>, <4 x i32>* %57, align 8, !alias.scope !953
  %58 = or i64 %37, 32
  %59 = getelementptr inbounds [5 x i32], [5 x i32]* %24, i64 0, i64 %58
  %60 = bitcast i32* %59 to <4 x i32>*
  store <4 x i32> <i32 1, i32 1, i32 1, i32 1>, <4 x i32>* %60, align 8, !alias.scope !953
  %61 = getelementptr inbounds i32, i32* %59, i64 4
  %62 = bitcast i32* %61 to <4 x i32>*
  store <4 x i32> <i32 1, i32 1, i32 1, i32 1>, <4 x i32>* %62, align 8, !alias.scope !953
  %63 = or i64 %37, 40
  %64 = getelementptr inbounds [5 x i32], [5 x i32]* %24, i64 0, i64 %63
  %65 = bitcast i32* %64 to <4 x i32>*
  store <4 x i32> <i32 1, i32 1, i32 1, i32 1>, <4 x i32>* %65, align 8, !alias.scope !953
  %66 = getelementptr inbounds i32, i32* %64, i64 4
  %67 = bitcast i32* %66 to <4 x i32>*
  store <4 x i32> <i32 1, i32 1, i32 1, i32 1>, <4 x i32>* %67, align 8, !alias.scope !953
  %68 = or i64 %37, 48
  %69 = getelementptr inbounds [5 x i32], [5 x i32]* %24, i64 0, i64 %68
  %70 = bitcast i32* %69 to <4 x i32>*
  store <4 x i32> <i32 1, i32 1, i32 1, i32 1>, <4 x i32>* %70, align 8, !alias.scope !953
  %71 = getelementptr inbounds i32, i32* %69, i64 4
  %72 = bitcast i32* %71 to <4 x i32>*
  store <4 x i32> <i32 1, i32 1, i32 1, i32 1>, <4 x i32>* %72, align 8, !alias.scope !953
  %73 = or i64 %37, 56
  %74 = getelementptr inbounds [5 x i32], [5 x i32]* %24, i64 0, i64 %73
  %75 = bitcast i32* %74 to <4 x i32>*
  store <4 x i32> <i32 1, i32 1, i32 1, i32 1>, <4 x i32>* %75, align 8, !alias.scope !953
  %76 = getelementptr inbounds i32, i32* %74, i64 4
  %77 = bitcast i32* %76 to <4 x i32>*
  store <4 x i32> <i32 1, i32 1, i32 1, i32 1>, <4 x i32>* %77, align 8, !alias.scope !953
  %78 = add i64 %37, 64
  %79 = add i64 %38, -8
  %80 = icmp eq i64 %79, 0
  br i1 %80, label %81, label %36, !llvm.loop !956

81:                                               ; preds = %36, %27
  %82 = phi i64 [ 0, %27 ], [ %78, %36 ]
  %83 = icmp eq i64 %32, 0
  br i1 %83, label %94, label %84

84:                                               ; preds = %81, %84
  %85 = phi i64 [ %91, %84 ], [ %82, %81 ]
  %86 = phi i64 [ %92, %84 ], [ %32, %81 ]
  %87 = getelementptr inbounds [5 x i32], [5 x i32]* %24, i64 0, i64 %85
  %88 = bitcast i32* %87 to <4 x i32>*
  store <4 x i32> <i32 1, i32 1, i32 1, i32 1>, <4 x i32>* %88, align 8, !alias.scope !953
  %89 = getelementptr inbounds i32, i32* %87, i64 4
  %90 = bitcast i32* %89 to <4 x i32>*
  store <4 x i32> <i32 1, i32 1, i32 1, i32 1>, <4 x i32>* %90, align 8, !alias.scope !953
  %91 = add i64 %85, 8
  %92 = add i64 %86, -1
  %93 = icmp eq i64 %92, 0
  br i1 %93, label %94, label %84, !llvm.loop !957

94:                                               ; preds = %84, %81
  %95 = icmp eq i64 %28, %25
  br i1 %95, label %103, label %96

96:                                               ; preds = %94, %23
  %97 = phi i64 [ 0, %23 ], [ %28, %94 ]
  br label %98

98:                                               ; preds = %96, %98
  %99 = phi i64 [ %101, %98 ], [ %97, %96 ]
  %100 = getelementptr inbounds [5 x i32], [5 x i32]* %24, i64 0, i64 %99
  store i32 1, i32* %100, align 4, !alias.scope !953
  %101 = add nuw nsw i64 %99, 1
  %102 = icmp eq i64 %101, %25
  br i1 %102, label %103, label %98, !llvm.loop !958

103:                                              ; preds = %98, %94, %19
  %104 = bitcast %union.anon* %22 to i32*
  %105 = sext i32 %20 to i64
  %106 = getelementptr inbounds i32, i32* %104, i64 %105
  %107 = bitcast i32* %106 to i8*
  %108 = icmp sgt i32 %16, 5
  %109 = getelementptr inbounds %"class.tflite::RuntimeShape", %"class.tflite::RuntimeShape"* %5, i64 0, i32 1
  %110 = getelementptr inbounds %union.anon, %union.anon* %109, i64 0, i32 0
  %111 = load i32*, i32** %110, align 8, !noalias !953
  %112 = bitcast %union.anon* %109 to i32*
  %113 = select i1 %108, i32* %111, i32* %112
  %114 = bitcast i32* %113 to i8*
  %115 = sext i32 %16 to i64
  %116 = shl nsw i64 %115, 2
  call void @llvm.memcpy.p0i8.p0i8.i64(i8* align 4 %107, i8* align 4 %114, i64 %116, i1 false) #8
  %117 = getelementptr inbounds %"struct.tflite::reference_ops::BroadcastComparison4DSlowCommon", %"struct.tflite::reference_ops::BroadcastComparison4DSlowCommon"* %10, i64 0, i32 1
  %118 = bitcast %"struct.tflite::NdArrayDesc"* %117 to i8*
  call void @llvm.memcpy.p0i8.p0i8.i64(i8* align 8 %118, i8* nonnull align 4 %13, i64 32, i1 false) #8
  %119 = getelementptr inbounds %"struct.tflite::reference_ops::BroadcastComparison4DSlowCommon", %"struct.tflite::reference_ops::BroadcastComparison4DSlowCommon"* %10, i64 0, i32 2
  %120 = bitcast %"struct.tflite::NdArrayDesc"* %119 to i8*
  call void @llvm.memcpy.p0i8.p0i8.i64(i8* align 8 %120, i8* nonnull align 4 %14, i64 32, i1 false) #8
  call void @llvm.lifetime.end.p0i8(i64 32, i8* nonnull %14) #8, !noalias !950
  call void @llvm.lifetime.end.p0i8(i64 32, i8* nonnull %13) #8, !noalias !950
  %121 = getelementptr inbounds %"struct.tflite::ComparisonParams", %"struct.tflite::ComparisonParams"* %0, i64 0, i32 0
  %122 = load i32, i32* %121, align 4
  %123 = getelementptr inbounds %"struct.tflite::ComparisonParams", %"struct.tflite::ComparisonParams"* %0, i64 0, i32 1
  %124 = load i32, i32* %123, align 4
  %125 = getelementptr inbounds %"struct.tflite::ComparisonParams", %"struct.tflite::ComparisonParams"* %0, i64 0, i32 2
  %126 = load i32, i32* %125, align 4
  %127 = getelementptr inbounds %"struct.tflite::ComparisonParams", %"struct.tflite::ComparisonParams"* %0, i64 0, i32 4
  %128 = load i32, i32* %127, align 4
  %129 = getelementptr inbounds %"struct.tflite::ComparisonParams", %"struct.tflite::ComparisonParams"* %0, i64 0, i32 5
  %130 = load i32, i32* %129, align 4
  %131 = load i32, i32* %15, align 8
  %132 = icmp sgt i32 %131, 5
  %133 = getelementptr inbounds %union.anon, %union.anon* %22, i64 0, i32 0
  %134 = load i32*, i32** %133, align 8
  %135 = select i1 %132, i32* %134, i32* %104
  %136 = load i32, i32* %135, align 4
  %137 = icmp sgt i32 %136, 0
  br i1 %137, label %138, label %205

138:                                              ; preds = %103
  %139 = getelementptr inbounds %"struct.tflite::ComparisonParams", %"struct.tflite::ComparisonParams"* %0, i64 0, i32 6
  %140 = load i32, i32* %139, align 4
  %141 = getelementptr inbounds %"struct.tflite::ComparisonParams", %"struct.tflite::ComparisonParams"* %0, i64 0, i32 3
  %142 = load i32, i32* %141, align 4
  %143 = bitcast %union.anon* %22 to [5 x i32]*
  %144 = getelementptr inbounds [5 x i32], [5 x i32]* %143, i64 0, i64 1
  %145 = getelementptr inbounds %"struct.tflite::reference_ops::BroadcastComparison4DSlowCommon", %"struct.tflite::reference_ops::BroadcastComparison4DSlowCommon"* %10, i64 0, i32 0, i32 1, i32 1
  %146 = bitcast [16 x i8]* %145 to i32*
  %147 = getelementptr inbounds %"struct.tflite::reference_ops::BroadcastComparison4DSlowCommon", %"struct.tflite::reference_ops::BroadcastComparison4DSlowCommon"* %10, i64 0, i32 0, i32 1, i32 1, i64 4
  %148 = bitcast i8* %147 to i32*
  %149 = getelementptr inbounds %"struct.tflite::reference_ops::BroadcastComparison4DSlowCommon", %"struct.tflite::reference_ops::BroadcastComparison4DSlowCommon"* %10, i64 0, i32 1, i32 1, i64 0
  %150 = load i32, i32* %149, align 8
  %151 = getelementptr inbounds %"struct.tflite::reference_ops::BroadcastComparison4DSlowCommon", %"struct.tflite::reference_ops::BroadcastComparison4DSlowCommon"* %10, i64 0, i32 1, i32 1, i64 1
  %152 = load i32, i32* %151, align 4
  %153 = getelementptr inbounds %"struct.tflite::reference_ops::BroadcastComparison4DSlowCommon", %"struct.tflite::reference_ops::BroadcastComparison4DSlowCommon"* %10, i64 0, i32 1, i32 1, i64 2
  %154 = load i32, i32* %153, align 8
  %155 = getelementptr inbounds %"struct.tflite::reference_ops::BroadcastComparison4DSlowCommon", %"struct.tflite::reference_ops::BroadcastComparison4DSlowCommon"* %10, i64 0, i32 1, i32 1, i64 3
  %156 = load i32, i32* %155, align 4
  %157 = getelementptr inbounds %"struct.tflite::reference_ops::BroadcastComparison4DSlowCommon", %"struct.tflite::reference_ops::BroadcastComparison4DSlowCommon"* %10, i64 0, i32 2, i32 1, i64 0
  %158 = load i32, i32* %157, align 8
  %159 = getelementptr inbounds %"struct.tflite::reference_ops::BroadcastComparison4DSlowCommon", %"struct.tflite::reference_ops::BroadcastComparison4DSlowCommon"* %10, i64 0, i32 2, i32 1, i64 1
  %160 = load i32, i32* %159, align 4
  %161 = getelementptr inbounds %"struct.tflite::reference_ops::BroadcastComparison4DSlowCommon", %"struct.tflite::reference_ops::BroadcastComparison4DSlowCommon"* %10, i64 0, i32 2, i32 1, i64 2
  %162 = load i32, i32* %161, align 8
  %163 = getelementptr inbounds %"struct.tflite::reference_ops::BroadcastComparison4DSlowCommon", %"struct.tflite::reference_ops::BroadcastComparison4DSlowCommon"* %10, i64 0, i32 2, i32 1, i64 3
  %164 = load i32, i32* %163, align 4
  %165 = sext i32 %126 to i64
  %166 = sub nsw i32 0, %142
  %167 = zext i32 %166 to i64
  %168 = shl nsw i64 -1, %167
  %169 = trunc i64 %168 to i32
  %170 = xor i32 %169, -1
  %171 = ashr i32 %170, 1
  %172 = sext i32 %130 to i64
  %173 = sub nsw i32 0, %140
  %174 = zext i32 %173 to i64
  %175 = shl nsw i64 -1, %174
  %176 = trunc i64 %175 to i32
  %177 = xor i32 %176, -1
  %178 = ashr i32 %177, 1
  %179 = getelementptr inbounds i32, i32* %104, i64 1
  %180 = sext i32 %164 to i64
  %181 = sext i32 %156 to i64
  %182 = sext i32 %162 to i64
  %183 = sext i32 %154 to i64
  %184 = sext i32 %160 to i64
  %185 = sext i32 %152 to i64
  %186 = sext i32 %158 to i64
  %187 = sext i32 %150 to i64
  %188 = getelementptr inbounds i32, i32* %134, i64 1
  %189 = select i1 %132, i32* %188, i32* %144
  %190 = getelementptr inbounds i32, i32* %134, i64 2
  %191 = select i1 %132, i32* %190, i32* %146
  %192 = getelementptr inbounds i32, i32* %134, i64 3
  %193 = select i1 %132, i32* %192, i32* %148
  %194 = icmp eq i32 %126, -2147483648
  %195 = icmp eq i32 %130, -2147483648
  br label %196

196:                                              ; preds = %138, %229
  %197 = phi i32 [ %136, %138 ], [ %230, %229 ]
  %198 = phi i64 [ 0, %138 ], [ %231, %229 ]
  %199 = load i32, i32* %189, align 4
  %200 = icmp sgt i32 %199, 0
  br i1 %200, label %201, label %229

201:                                              ; preds = %196
  %202 = mul nsw i64 %198, %187
  %203 = mul nsw i64 %198, %186
  %204 = trunc i64 %198 to i32
  br label %212

205:                                              ; preds = %229, %103
  %206 = xor i1 %132, true
  %207 = icmp eq i32* %134, null
  %208 = or i1 %207, %206
  br i1 %208, label %211, label %209

209:                                              ; preds = %205
  %210 = bitcast i32* %134 to i8*
  call void @_ZdaPv(i8* %210) #9
  br label %211

211:                                              ; preds = %205, %209
  call void @llvm.lifetime.end.p0i8(i64 96, i8* nonnull %11) #8
  ret void

212:                                              ; preds = %201, %250
  %213 = phi i32 [ %199, %201 ], [ %251, %250 ]
  %214 = phi i64 [ 0, %201 ], [ %252, %250 ]
  %215 = load i32, i32* %191, align 4
  %216 = icmp sgt i32 %215, 0
  br i1 %216, label %217, label %250

217:                                              ; preds = %212
  %218 = mul nsw i64 %214, %185
  %219 = add nsw i64 %218, %202
  %220 = mul nsw i64 %214, %184
  %221 = add nsw i64 %220, %203
  %222 = load i32, i32* %179, align 4
  %223 = mul nsw i32 %222, %204
  %224 = trunc i64 %214 to i32
  %225 = add nsw i32 %223, %224
  %226 = load i32, i32* %193, align 4
  br label %234

227:                                              ; preds = %250
  %228 = load i32, i32* %135, align 4
  br label %229

229:                                              ; preds = %227, %196
  %230 = phi i32 [ %228, %227 ], [ %197, %196 ]
  %231 = add nuw nsw i64 %198, 1
  %232 = sext i32 %230 to i64
  %233 = icmp slt i64 %231, %232
  br i1 %233, label %196, label %205

234:                                              ; preds = %217, %257
  %235 = phi i32 [ %215, %217 ], [ %258, %257 ]
  %236 = phi i32 [ %226, %217 ], [ %259, %257 ]
  %237 = phi i64 [ 0, %217 ], [ %260, %257 ]
  %238 = icmp sgt i32 %236, 0
  br i1 %238, label %239, label %257

239:                                              ; preds = %234
  %240 = mul nsw i64 %237, %183
  %241 = add nsw i64 %219, %240
  %242 = mul nsw i64 %237, %182
  %243 = add nsw i64 %221, %242
  %244 = load i32, i32* %146, align 8
  %245 = mul nsw i32 %225, %244
  %246 = trunc i64 %237 to i32
  %247 = add nsw i32 %245, %246
  br label %263

248:                                              ; preds = %257
  %249 = load i32, i32* %189, align 4
  br label %250

250:                                              ; preds = %248, %212
  %251 = phi i32 [ %249, %248 ], [ %213, %212 ]
  %252 = add nuw nsw i64 %214, 1
  %253 = sext i32 %251 to i64
  %254 = icmp slt i64 %252, %253
  br i1 %254, label %212, label %227

255:                                              ; preds = %312
  %256 = load i32, i32* %191, align 4
  br label %257

257:                                              ; preds = %255, %234
  %258 = phi i32 [ %256, %255 ], [ %235, %234 ]
  %259 = phi i32 [ %330, %255 ], [ %236, %234 ]
  %260 = add nuw nsw i64 %237, 1
  %261 = sext i32 %258 to i64
  %262 = icmp slt i64 %260, %261
  br i1 %262, label %234, label %248

263:                                              ; preds = %239, %312
  %264 = phi i64 [ 0, %239 ], [ %329, %312 ]
  %265 = mul nsw i64 %264, %181
  %266 = add nsw i64 %241, %265
  %267 = getelementptr inbounds i8, i8* %2, i64 %266
  %268 = load i8, i8* %267, align 1
  %269 = zext i8 %268 to i32
  %270 = add nsw i32 %124, %269
  %271 = mul nsw i64 %264, %180
  %272 = add nsw i64 %243, %271
  %273 = getelementptr inbounds i8, i8* %4, i64 %272
  %274 = load i8, i8* %273, align 1
  %275 = zext i8 %274 to i32
  %276 = add nsw i32 %128, %275
  %277 = shl i32 %270, %122
  %278 = shl i32 %276, %122
  %279 = icmp eq i32 %277, %126
  br i1 %279, label %282, label %280

280:                                              ; preds = %263
  %281 = sext i32 %277 to i64
  br label %283

282:                                              ; preds = %263
  br i1 %194, label %291, label %283

283:                                              ; preds = %282, %280
  %284 = phi i64 [ %281, %280 ], [ %165, %282 ]
  %285 = mul nsw i64 %284, %165
  %286 = icmp sgt i64 %285, -1
  %287 = select i1 %286, i64 1073741824, i64 -1073741823
  %288 = add nsw i64 %287, %285
  %289 = sdiv i64 %288, 2147483648
  %290 = trunc i64 %289 to i32
  br label %291

291:                                              ; preds = %282, %283
  %292 = phi i32 [ %290, %283 ], [ 2147483647, %282 ]
  %293 = and i32 %292, %170
  %294 = lshr i32 %292, 31
  %295 = add nsw i32 %294, %171
  %296 = ashr i32 %292, %166
  %297 = icmp sgt i32 %293, %295
  %298 = zext i1 %297 to i32
  %299 = add nsw i32 %296, %298
  %300 = icmp eq i32 %278, %130
  br i1 %300, label %303, label %301

301:                                              ; preds = %291
  %302 = sext i32 %278 to i64
  br label %304

303:                                              ; preds = %291
  br i1 %195, label %312, label %304

304:                                              ; preds = %303, %301
  %305 = phi i64 [ %302, %301 ], [ %172, %303 ]
  %306 = mul nsw i64 %305, %172
  %307 = icmp sgt i64 %306, -1
  %308 = select i1 %307, i64 1073741824, i64 -1073741823
  %309 = add nsw i64 %308, %306
  %310 = sdiv i64 %309, 2147483648
  %311 = trunc i64 %310 to i32
  br label %312

312:                                              ; preds = %303, %304
  %313 = phi i32 [ %311, %304 ], [ 2147483647, %303 ]
  %314 = and i32 %313, %177
  %315 = lshr i32 %313, 31
  %316 = add nsw i32 %315, %178
  %317 = ashr i32 %313, %173
  %318 = icmp sgt i32 %314, %316
  %319 = zext i1 %318 to i32
  %320 = add nsw i32 %317, %319
  %321 = icmp ne i32 %299, %320
  %322 = load i32, i32* %148, align 4
  %323 = mul nsw i32 %247, %322
  %324 = trunc i64 %264 to i32
  %325 = add nsw i32 %323, %324
  %326 = sext i32 %325 to i64
  %327 = getelementptr inbounds i8, i8* %6, i64 %326
  %328 = zext i1 %321 to i8
  store i8 %328, i8* %327, align 1
  %329 = add nuw nsw i64 %264, 1
  %330 = load i32, i32* %193, align 4
  %331 = sext i32 %330 to i64
  %332 = icmp slt i64 %329, %331
  br i1 %332, label %263, label %255
}

; Function Attrs: inlinehint nounwind ssp uwtable
define linkonce_odr hidden void @_ZN6tflite13reference_ops36BroadcastComparison4DSlowWithScalingIaXadL_ZNS0_10NotEqualFnIiEEbT_S3_EEEEvRKNS_16ComparisonParamsERKNS_12RuntimeShapeEPKS3_S9_SB_S9_Pb(%"struct.tflite::ComparisonParams"* dereferenceable(32), %"class.tflite::RuntimeShape"* dereferenceable(32), i8*, %"class.tflite::RuntimeShape"* dereferenceable(32), i8*, %"class.tflite::RuntimeShape"* dereferenceable(32), i8*) local_unnamed_addr #4 comdat {
  %8 = alloca %"struct.tflite::NdArrayDesc", align 4
  %9 = alloca %"struct.tflite::NdArrayDesc", align 4
  %10 = alloca %"struct.tflite::reference_ops::BroadcastComparison4DSlowCommon", align 8
  %11 = bitcast %"struct.tflite::reference_ops::BroadcastComparison4DSlowCommon"* %10 to i8*
  call void @llvm.lifetime.start.p0i8(i64 96, i8* nonnull %11) #8
  call void @llvm.memset.p0i8.i64(i8* nonnull align 8 %11, i8 -86, i64 96, i1 false)
  %12 = getelementptr inbounds %"class.tflite::RuntimeShape", %"class.tflite::RuntimeShape"* %5, i64 0, i32 0
  %13 = bitcast %"struct.tflite::NdArrayDesc"* %8 to i8*
  call void @llvm.lifetime.start.p0i8(i64 32, i8* nonnull %13) #8, !noalias !959
  %14 = bitcast %"struct.tflite::NdArrayDesc"* %9 to i8*
  call void @llvm.memset.p0i8.i64(i8* nonnull align 4 %13, i8 -86, i64 32, i1 false) #8, !noalias !959
  call void @llvm.lifetime.start.p0i8(i64 32, i8* nonnull %14) #8, !noalias !959
  call void @llvm.memset.p0i8.i64(i8* nonnull align 4 %14, i8 -86, i64 32, i1 false) #8, !noalias !959
  call void @_ZN6tflite35NdArrayDescsForElementwiseBroadcastILi4EEEvRKNS_12RuntimeShapeES3_PNS_11NdArrayDescIXT_EEES6_(%"class.tflite::RuntimeShape"* dereferenceable(32) %1, %"class.tflite::RuntimeShape"* dereferenceable(32) %3, %"struct.tflite::NdArrayDesc"* nonnull %8, %"struct.tflite::NdArrayDesc"* nonnull %9) #8, !noalias !959
  %15 = getelementptr inbounds %"struct.tflite::reference_ops::BroadcastComparison4DSlowCommon", %"struct.tflite::reference_ops::BroadcastComparison4DSlowCommon"* %10, i64 0, i32 0, i32 0
  store i32 0, i32* %15, align 8, !alias.scope !962
  %16 = load i32, i32* %12, align 8, !noalias !962
  %17 = icmp sgt i32 %16, 4
  br i1 %17, label %18, label %19

18:                                               ; preds = %7
  call void @abort() #10, !noalias !962
  unreachable

19:                                               ; preds = %7
  store i32 4, i32* %15, align 8, !alias.scope !962
  %20 = sub i32 4, %16
  %21 = icmp sgt i32 %20, 0
  %22 = getelementptr inbounds %"struct.tflite::reference_ops::BroadcastComparison4DSlowCommon", %"struct.tflite::reference_ops::BroadcastComparison4DSlowCommon"* %10, i64 0, i32 0, i32 1
  br i1 %21, label %23, label %103

23:                                               ; preds = %19
  %24 = bitcast %union.anon* %22 to [5 x i32]*
  %25 = zext i32 %20 to i64
  %26 = icmp ult i32 %20, 8
  br i1 %26, label %96, label %27

27:                                               ; preds = %23
  %28 = and i64 %25, 4294967288
  %29 = add nsw i64 %28, -8
  %30 = lshr exact i64 %29, 3
  %31 = add nuw nsw i64 %30, 1
  %32 = and i64 %31, 7
  %33 = icmp ult i64 %29, 56
  br i1 %33, label %81, label %34

34:                                               ; preds = %27
  %35 = sub nsw i64 %31, %32
  br label %36

36:                                               ; preds = %36, %34
  %37 = phi i64 [ 0, %34 ], [ %78, %36 ]
  %38 = phi i64 [ %35, %34 ], [ %79, %36 ]
  %39 = getelementptr inbounds [5 x i32], [5 x i32]* %24, i64 0, i64 %37
  %40 = bitcast i32* %39 to <4 x i32>*
  store <4 x i32> <i32 1, i32 1, i32 1, i32 1>, <4 x i32>* %40, align 8, !alias.scope !962
  %41 = getelementptr inbounds i32, i32* %39, i64 4
  %42 = bitcast i32* %41 to <4 x i32>*
  store <4 x i32> <i32 1, i32 1, i32 1, i32 1>, <4 x i32>* %42, align 8, !alias.scope !962
  %43 = or i64 %37, 8
  %44 = getelementptr inbounds [5 x i32], [5 x i32]* %24, i64 0, i64 %43
  %45 = bitcast i32* %44 to <4 x i32>*
  store <4 x i32> <i32 1, i32 1, i32 1, i32 1>, <4 x i32>* %45, align 8, !alias.scope !962
  %46 = getelementptr inbounds i32, i32* %44, i64 4
  %47 = bitcast i32* %46 to <4 x i32>*
  store <4 x i32> <i32 1, i32 1, i32 1, i32 1>, <4 x i32>* %47, align 8, !alias.scope !962
  %48 = or i64 %37, 16
  %49 = getelementptr inbounds [5 x i32], [5 x i32]* %24, i64 0, i64 %48
  %50 = bitcast i32* %49 to <4 x i32>*
  store <4 x i32> <i32 1, i32 1, i32 1, i32 1>, <4 x i32>* %50, align 8, !alias.scope !962
  %51 = getelementptr inbounds i32, i32* %49, i64 4
  %52 = bitcast i32* %51 to <4 x i32>*
  store <4 x i32> <i32 1, i32 1, i32 1, i32 1>, <4 x i32>* %52, align 8, !alias.scope !962
  %53 = or i64 %37, 24
  %54 = getelementptr inbounds [5 x i32], [5 x i32]* %24, i64 0, i64 %53
  %55 = bitcast i32* %54 to <4 x i32>*
  store <4 x i32> <i32 1, i32 1, i32 1, i32 1>, <4 x i32>* %55, align 8, !alias.scope !962
  %56 = getelementptr inbounds i32, i32* %54, i64 4
  %57 = bitcast i32* %56 to <4 x i32>*
  store <4 x i32> <i32 1, i32 1, i32 1, i32 1>, <4 x i32>* %57, align 8, !alias.scope !962
  %58 = or i64 %37, 32
  %59 = getelementptr inbounds [5 x i32], [5 x i32]* %24, i64 0, i64 %58
  %60 = bitcast i32* %59 to <4 x i32>*
  store <4 x i32> <i32 1, i32 1, i32 1, i32 1>, <4 x i32>* %60, align 8, !alias.scope !962
  %61 = getelementptr inbounds i32, i32* %59, i64 4
  %62 = bitcast i32* %61 to <4 x i32>*
  store <4 x i32> <i32 1, i32 1, i32 1, i32 1>, <4 x i32>* %62, align 8, !alias.scope !962
  %63 = or i64 %37, 40
  %64 = getelementptr inbounds [5 x i32], [5 x i32]* %24, i64 0, i64 %63
  %65 = bitcast i32* %64 to <4 x i32>*
  store <4 x i32> <i32 1, i32 1, i32 1, i32 1>, <4 x i32>* %65, align 8, !alias.scope !962
  %66 = getelementptr inbounds i32, i32* %64, i64 4
  %67 = bitcast i32* %66 to <4 x i32>*
  store <4 x i32> <i32 1, i32 1, i32 1, i32 1>, <4 x i32>* %67, align 8, !alias.scope !962
  %68 = or i64 %37, 48
  %69 = getelementptr inbounds [5 x i32], [5 x i32]* %24, i64 0, i64 %68
  %70 = bitcast i32* %69 to <4 x i32>*
  store <4 x i32> <i32 1, i32 1, i32 1, i32 1>, <4 x i32>* %70, align 8, !alias.scope !962
  %71 = getelementptr inbounds i32, i32* %69, i64 4
  %72 = bitcast i32* %71 to <4 x i32>*
  store <4 x i32> <i32 1, i32 1, i32 1, i32 1>, <4 x i32>* %72, align 8, !alias.scope !962
  %73 = or i64 %37, 56
  %74 = getelementptr inbounds [5 x i32], [5 x i32]* %24, i64 0, i64 %73
  %75 = bitcast i32* %74 to <4 x i32>*
  store <4 x i32> <i32 1, i32 1, i32 1, i32 1>, <4 x i32>* %75, align 8, !alias.scope !962
  %76 = getelementptr inbounds i32, i32* %74, i64 4
  %77 = bitcast i32* %76 to <4 x i32>*
  store <4 x i32> <i32 1, i32 1, i32 1, i32 1>, <4 x i32>* %77, align 8, !alias.scope !962
  %78 = add i64 %37, 64
  %79 = add i64 %38, -8
  %80 = icmp eq i64 %79, 0
  br i1 %80, label %81, label %36, !llvm.loop !965

81:                                               ; preds = %36, %27
  %82 = phi i64 [ 0, %27 ], [ %78, %36 ]
  %83 = icmp eq i64 %32, 0
  br i1 %83, label %94, label %84

84:                                               ; preds = %81, %84
  %85 = phi i64 [ %91, %84 ], [ %82, %81 ]
  %86 = phi i64 [ %92, %84 ], [ %32, %81 ]
  %87 = getelementptr inbounds [5 x i32], [5 x i32]* %24, i64 0, i64 %85
  %88 = bitcast i32* %87 to <4 x i32>*
  store <4 x i32> <i32 1, i32 1, i32 1, i32 1>, <4 x i32>* %88, align 8, !alias.scope !962
  %89 = getelementptr inbounds i32, i32* %87, i64 4
  %90 = bitcast i32* %89 to <4 x i32>*
  store <4 x i32> <i32 1, i32 1, i32 1, i32 1>, <4 x i32>* %90, align 8, !alias.scope !962
  %91 = add i64 %85, 8
  %92 = add i64 %86, -1
  %93 = icmp eq i64 %92, 0
  br i1 %93, label %94, label %84, !llvm.loop !966

94:                                               ; preds = %84, %81
  %95 = icmp eq i64 %28, %25
  br i1 %95, label %103, label %96

96:                                               ; preds = %94, %23
  %97 = phi i64 [ 0, %23 ], [ %28, %94 ]
  br label %98

98:                                               ; preds = %96, %98
  %99 = phi i64 [ %101, %98 ], [ %97, %96 ]
  %100 = getelementptr inbounds [5 x i32], [5 x i32]* %24, i64 0, i64 %99
  store i32 1, i32* %100, align 4, !alias.scope !962
  %101 = add nuw nsw i64 %99, 1
  %102 = icmp eq i64 %101, %25
  br i1 %102, label %103, label %98, !llvm.loop !967

103:                                              ; preds = %98, %94, %19
  %104 = bitcast %union.anon* %22 to i32*
  %105 = sext i32 %20 to i64
  %106 = getelementptr inbounds i32, i32* %104, i64 %105
  %107 = bitcast i32* %106 to i8*
  %108 = icmp sgt i32 %16, 5
  %109 = getelementptr inbounds %"class.tflite::RuntimeShape", %"class.tflite::RuntimeShape"* %5, i64 0, i32 1
  %110 = getelementptr inbounds %union.anon, %union.anon* %109, i64 0, i32 0
  %111 = load i32*, i32** %110, align 8, !noalias !962
  %112 = bitcast %union.anon* %109 to i32*
  %113 = select i1 %108, i32* %111, i32* %112
  %114 = bitcast i32* %113 to i8*
  %115 = sext i32 %16 to i64
  %116 = shl nsw i64 %115, 2
  call void @llvm.memcpy.p0i8.p0i8.i64(i8* align 4 %107, i8* align 4 %114, i64 %116, i1 false) #8
  %117 = getelementptr inbounds %"struct.tflite::reference_ops::BroadcastComparison4DSlowCommon", %"struct.tflite::reference_ops::BroadcastComparison4DSlowCommon"* %10, i64 0, i32 1
  %118 = bitcast %"struct.tflite::NdArrayDesc"* %117 to i8*
  call void @llvm.memcpy.p0i8.p0i8.i64(i8* align 8 %118, i8* nonnull align 4 %13, i64 32, i1 false) #8
  %119 = getelementptr inbounds %"struct.tflite::reference_ops::BroadcastComparison4DSlowCommon", %"struct.tflite::reference_ops::BroadcastComparison4DSlowCommon"* %10, i64 0, i32 2
  %120 = bitcast %"struct.tflite::NdArrayDesc"* %119 to i8*
  call void @llvm.memcpy.p0i8.p0i8.i64(i8* align 8 %120, i8* nonnull align 4 %14, i64 32, i1 false) #8
  call void @llvm.lifetime.end.p0i8(i64 32, i8* nonnull %14) #8, !noalias !959
  call void @llvm.lifetime.end.p0i8(i64 32, i8* nonnull %13) #8, !noalias !959
  %121 = getelementptr inbounds %"struct.tflite::ComparisonParams", %"struct.tflite::ComparisonParams"* %0, i64 0, i32 0
  %122 = load i32, i32* %121, align 4
  %123 = getelementptr inbounds %"struct.tflite::ComparisonParams", %"struct.tflite::ComparisonParams"* %0, i64 0, i32 1
  %124 = load i32, i32* %123, align 4
  %125 = getelementptr inbounds %"struct.tflite::ComparisonParams", %"struct.tflite::ComparisonParams"* %0, i64 0, i32 2
  %126 = load i32, i32* %125, align 4
  %127 = getelementptr inbounds %"struct.tflite::ComparisonParams", %"struct.tflite::ComparisonParams"* %0, i64 0, i32 4
  %128 = load i32, i32* %127, align 4
  %129 = getelementptr inbounds %"struct.tflite::ComparisonParams", %"struct.tflite::ComparisonParams"* %0, i64 0, i32 5
  %130 = load i32, i32* %129, align 4
  %131 = load i32, i32* %15, align 8
  %132 = icmp sgt i32 %131, 5
  %133 = getelementptr inbounds %union.anon, %union.anon* %22, i64 0, i32 0
  %134 = load i32*, i32** %133, align 8
  %135 = select i1 %132, i32* %134, i32* %104
  %136 = load i32, i32* %135, align 4
  %137 = icmp sgt i32 %136, 0
  br i1 %137, label %138, label %205

138:                                              ; preds = %103
  %139 = getelementptr inbounds %"struct.tflite::ComparisonParams", %"struct.tflite::ComparisonParams"* %0, i64 0, i32 6
  %140 = load i32, i32* %139, align 4
  %141 = getelementptr inbounds %"struct.tflite::ComparisonParams", %"struct.tflite::ComparisonParams"* %0, i64 0, i32 3
  %142 = load i32, i32* %141, align 4
  %143 = bitcast %union.anon* %22 to [5 x i32]*
  %144 = getelementptr inbounds [5 x i32], [5 x i32]* %143, i64 0, i64 1
  %145 = getelementptr inbounds %"struct.tflite::reference_ops::BroadcastComparison4DSlowCommon", %"struct.tflite::reference_ops::BroadcastComparison4DSlowCommon"* %10, i64 0, i32 0, i32 1, i32 1
  %146 = bitcast [16 x i8]* %145 to i32*
  %147 = getelementptr inbounds %"struct.tflite::reference_ops::BroadcastComparison4DSlowCommon", %"struct.tflite::reference_ops::BroadcastComparison4DSlowCommon"* %10, i64 0, i32 0, i32 1, i32 1, i64 4
  %148 = bitcast i8* %147 to i32*
  %149 = getelementptr inbounds %"struct.tflite::reference_ops::BroadcastComparison4DSlowCommon", %"struct.tflite::reference_ops::BroadcastComparison4DSlowCommon"* %10, i64 0, i32 1, i32 1, i64 0
  %150 = load i32, i32* %149, align 8
  %151 = getelementptr inbounds %"struct.tflite::reference_ops::BroadcastComparison4DSlowCommon", %"struct.tflite::reference_ops::BroadcastComparison4DSlowCommon"* %10, i64 0, i32 1, i32 1, i64 1
  %152 = load i32, i32* %151, align 4
  %153 = getelementptr inbounds %"struct.tflite::reference_ops::BroadcastComparison4DSlowCommon", %"struct.tflite::reference_ops::BroadcastComparison4DSlowCommon"* %10, i64 0, i32 1, i32 1, i64 2
  %154 = load i32, i32* %153, align 8
  %155 = getelementptr inbounds %"struct.tflite::reference_ops::BroadcastComparison4DSlowCommon", %"struct.tflite::reference_ops::BroadcastComparison4DSlowCommon"* %10, i64 0, i32 1, i32 1, i64 3
  %156 = load i32, i32* %155, align 4
  %157 = getelementptr inbounds %"struct.tflite::reference_ops::BroadcastComparison4DSlowCommon", %"struct.tflite::reference_ops::BroadcastComparison4DSlowCommon"* %10, i64 0, i32 2, i32 1, i64 0
  %158 = load i32, i32* %157, align 8
  %159 = getelementptr inbounds %"struct.tflite::reference_ops::BroadcastComparison4DSlowCommon", %"struct.tflite::reference_ops::BroadcastComparison4DSlowCommon"* %10, i64 0, i32 2, i32 1, i64 1
  %160 = load i32, i32* %159, align 4
  %161 = getelementptr inbounds %"struct.tflite::reference_ops::BroadcastComparison4DSlowCommon", %"struct.tflite::reference_ops::BroadcastComparison4DSlowCommon"* %10, i64 0, i32 2, i32 1, i64 2
  %162 = load i32, i32* %161, align 8
  %163 = getelementptr inbounds %"struct.tflite::reference_ops::BroadcastComparison4DSlowCommon", %"struct.tflite::reference_ops::BroadcastComparison4DSlowCommon"* %10, i64 0, i32 2, i32 1, i64 3
  %164 = load i32, i32* %163, align 4
  %165 = sext i32 %126 to i64
  %166 = sub nsw i32 0, %142
  %167 = zext i32 %166 to i64
  %168 = shl nsw i64 -1, %167
  %169 = trunc i64 %168 to i32
  %170 = xor i32 %169, -1
  %171 = ashr i32 %170, 1
  %172 = sext i32 %130 to i64
  %173 = sub nsw i32 0, %140
  %174 = zext i32 %173 to i64
  %175 = shl nsw i64 -1, %174
  %176 = trunc i64 %175 to i32
  %177 = xor i32 %176, -1
  %178 = ashr i32 %177, 1
  %179 = getelementptr inbounds i32, i32* %104, i64 1
  %180 = sext i32 %164 to i64
  %181 = sext i32 %156 to i64
  %182 = sext i32 %162 to i64
  %183 = sext i32 %154 to i64
  %184 = sext i32 %160 to i64
  %185 = sext i32 %152 to i64
  %186 = sext i32 %158 to i64
  %187 = sext i32 %150 to i64
  %188 = getelementptr inbounds i32, i32* %134, i64 1
  %189 = select i1 %132, i32* %188, i32* %144
  %190 = getelementptr inbounds i32, i32* %134, i64 2
  %191 = select i1 %132, i32* %190, i32* %146
  %192 = getelementptr inbounds i32, i32* %134, i64 3
  %193 = select i1 %132, i32* %192, i32* %148
  %194 = icmp eq i32 %126, -2147483648
  %195 = icmp eq i32 %130, -2147483648
  br label %196

196:                                              ; preds = %138, %229
  %197 = phi i32 [ %136, %138 ], [ %230, %229 ]
  %198 = phi i64 [ 0, %138 ], [ %231, %229 ]
  %199 = load i32, i32* %189, align 4
  %200 = icmp sgt i32 %199, 0
  br i1 %200, label %201, label %229

201:                                              ; preds = %196
  %202 = mul nsw i64 %198, %187
  %203 = mul nsw i64 %198, %186
  %204 = trunc i64 %198 to i32
  br label %212

205:                                              ; preds = %229, %103
  %206 = xor i1 %132, true
  %207 = icmp eq i32* %134, null
  %208 = or i1 %207, %206
  br i1 %208, label %211, label %209

209:                                              ; preds = %205
  %210 = bitcast i32* %134 to i8*
  call void @_ZdaPv(i8* %210) #9
  br label %211

211:                                              ; preds = %205, %209
  call void @llvm.lifetime.end.p0i8(i64 96, i8* nonnull %11) #8
  ret void

212:                                              ; preds = %201, %250
  %213 = phi i32 [ %199, %201 ], [ %251, %250 ]
  %214 = phi i64 [ 0, %201 ], [ %252, %250 ]
  %215 = load i32, i32* %191, align 4
  %216 = icmp sgt i32 %215, 0
  br i1 %216, label %217, label %250

217:                                              ; preds = %212
  %218 = mul nsw i64 %214, %185
  %219 = add nsw i64 %218, %202
  %220 = mul nsw i64 %214, %184
  %221 = add nsw i64 %220, %203
  %222 = load i32, i32* %179, align 4
  %223 = mul nsw i32 %222, %204
  %224 = trunc i64 %214 to i32
  %225 = add nsw i32 %223, %224
  %226 = load i32, i32* %193, align 4
  br label %234

227:                                              ; preds = %250
  %228 = load i32, i32* %135, align 4
  br label %229

229:                                              ; preds = %227, %196
  %230 = phi i32 [ %228, %227 ], [ %197, %196 ]
  %231 = add nuw nsw i64 %198, 1
  %232 = sext i32 %230 to i64
  %233 = icmp slt i64 %231, %232
  br i1 %233, label %196, label %205

234:                                              ; preds = %217, %257
  %235 = phi i32 [ %215, %217 ], [ %258, %257 ]
  %236 = phi i32 [ %226, %217 ], [ %259, %257 ]
  %237 = phi i64 [ 0, %217 ], [ %260, %257 ]
  %238 = icmp sgt i32 %236, 0
  br i1 %238, label %239, label %257

239:                                              ; preds = %234
  %240 = mul nsw i64 %237, %183
  %241 = add nsw i64 %219, %240
  %242 = mul nsw i64 %237, %182
  %243 = add nsw i64 %221, %242
  %244 = load i32, i32* %146, align 8
  %245 = mul nsw i32 %225, %244
  %246 = trunc i64 %237 to i32
  %247 = add nsw i32 %245, %246
  br label %263

248:                                              ; preds = %257
  %249 = load i32, i32* %189, align 4
  br label %250

250:                                              ; preds = %248, %212
  %251 = phi i32 [ %249, %248 ], [ %213, %212 ]
  %252 = add nuw nsw i64 %214, 1
  %253 = sext i32 %251 to i64
  %254 = icmp slt i64 %252, %253
  br i1 %254, label %212, label %227

255:                                              ; preds = %312
  %256 = load i32, i32* %191, align 4
  br label %257

257:                                              ; preds = %255, %234
  %258 = phi i32 [ %256, %255 ], [ %235, %234 ]
  %259 = phi i32 [ %330, %255 ], [ %236, %234 ]
  %260 = add nuw nsw i64 %237, 1
  %261 = sext i32 %258 to i64
  %262 = icmp slt i64 %260, %261
  br i1 %262, label %234, label %248

263:                                              ; preds = %239, %312
  %264 = phi i64 [ 0, %239 ], [ %329, %312 ]
  %265 = mul nsw i64 %264, %181
  %266 = add nsw i64 %241, %265
  %267 = getelementptr inbounds i8, i8* %2, i64 %266
  %268 = load i8, i8* %267, align 1
  %269 = sext i8 %268 to i32
  %270 = add nsw i32 %124, %269
  %271 = mul nsw i64 %264, %180
  %272 = add nsw i64 %243, %271
  %273 = getelementptr inbounds i8, i8* %4, i64 %272
  %274 = load i8, i8* %273, align 1
  %275 = sext i8 %274 to i32
  %276 = add nsw i32 %128, %275
  %277 = shl i32 %270, %122
  %278 = shl i32 %276, %122
  %279 = icmp eq i32 %277, %126
  br i1 %279, label %282, label %280

280:                                              ; preds = %263
  %281 = sext i32 %277 to i64
  br label %283

282:                                              ; preds = %263
  br i1 %194, label %291, label %283

283:                                              ; preds = %282, %280
  %284 = phi i64 [ %281, %280 ], [ %165, %282 ]
  %285 = mul nsw i64 %284, %165
  %286 = icmp sgt i64 %285, -1
  %287 = select i1 %286, i64 1073741824, i64 -1073741823
  %288 = add nsw i64 %287, %285
  %289 = sdiv i64 %288, 2147483648
  %290 = trunc i64 %289 to i32
  br label %291

291:                                              ; preds = %282, %283
  %292 = phi i32 [ %290, %283 ], [ 2147483647, %282 ]
  %293 = and i32 %292, %170
  %294 = lshr i32 %292, 31
  %295 = add nsw i32 %294, %171
  %296 = ashr i32 %292, %166
  %297 = icmp sgt i32 %293, %295
  %298 = zext i1 %297 to i32
  %299 = add nsw i32 %296, %298
  %300 = icmp eq i32 %278, %130
  br i1 %300, label %303, label %301

301:                                              ; preds = %291
  %302 = sext i32 %278 to i64
  br label %304

303:                                              ; preds = %291
  br i1 %195, label %312, label %304

304:                                              ; preds = %303, %301
  %305 = phi i64 [ %302, %301 ], [ %172, %303 ]
  %306 = mul nsw i64 %305, %172
  %307 = icmp sgt i64 %306, -1
  %308 = select i1 %307, i64 1073741824, i64 -1073741823
  %309 = add nsw i64 %308, %306
  %310 = sdiv i64 %309, 2147483648
  %311 = trunc i64 %310 to i32
  br label %312

312:                                              ; preds = %303, %304
  %313 = phi i32 [ %311, %304 ], [ 2147483647, %303 ]
  %314 = and i32 %313, %177
  %315 = lshr i32 %313, 31
  %316 = add nsw i32 %315, %178
  %317 = ashr i32 %313, %173
  %318 = icmp sgt i32 %314, %316
  %319 = zext i1 %318 to i32
  %320 = add nsw i32 %317, %319
  %321 = icmp ne i32 %299, %320
  %322 = load i32, i32* %148, align 4
  %323 = mul nsw i32 %247, %322
  %324 = trunc i64 %264 to i32
  %325 = add nsw i32 %323, %324
  %326 = sext i32 %325 to i64
  %327 = getelementptr inbounds i8, i8* %6, i64 %326
  %328 = zext i1 %321 to i8
  store i8 %328, i8* %327, align 1
  %329 = add nuw nsw i64 %264, 1
  %330 = load i32, i32* %193, align 4
  %331 = sext i32 %330 to i64
  %332 = icmp slt i64 %329, %331
  br i1 %332, label %263, label %255
}

; Function Attrs: inlinehint nounwind ssp uwtable
define linkonce_odr hidden void @_ZN6tflite13reference_ops29BroadcastComparison4DSlowImplIfXadL_ZNS0_9GreaterFnIfEEbT_S3_EEEEvRKNS_16ComparisonParamsERKNS_12RuntimeShapeEPKS3_S9_SB_S9_Pb(%"struct.tflite::ComparisonParams"* dereferenceable(32), %"class.tflite::RuntimeShape"* dereferenceable(32), float*, %"class.tflite::RuntimeShape"* dereferenceable(32), float*, %"class.tflite::RuntimeShape"* dereferenceable(32), i8*) local_unnamed_addr #4 comdat {
  %8 = alloca %"struct.tflite::NdArrayDesc", align 4
  %9 = alloca %"struct.tflite::NdArrayDesc", align 4
  %10 = alloca %"struct.tflite::reference_ops::BroadcastComparison4DSlowCommon", align 8
  %11 = bitcast %"struct.tflite::reference_ops::BroadcastComparison4DSlowCommon"* %10 to i8*
  call void @llvm.lifetime.start.p0i8(i64 96, i8* nonnull %11) #8
  call void @llvm.memset.p0i8.i64(i8* nonnull align 8 %11, i8 -86, i64 96, i1 false)
  %12 = getelementptr inbounds %"class.tflite::RuntimeShape", %"class.tflite::RuntimeShape"* %5, i64 0, i32 0
  %13 = bitcast %"struct.tflite::NdArrayDesc"* %8 to i8*
  call void @llvm.lifetime.start.p0i8(i64 32, i8* nonnull %13) #8, !noalias !968
  %14 = bitcast %"struct.tflite::NdArrayDesc"* %9 to i8*
  call void @llvm.memset.p0i8.i64(i8* nonnull align 4 %13, i8 -86, i64 32, i1 false) #8, !noalias !968
  call void @llvm.lifetime.start.p0i8(i64 32, i8* nonnull %14) #8, !noalias !968
  call void @llvm.memset.p0i8.i64(i8* nonnull align 4 %14, i8 -86, i64 32, i1 false) #8, !noalias !968
  call void @_ZN6tflite35NdArrayDescsForElementwiseBroadcastILi4EEEvRKNS_12RuntimeShapeES3_PNS_11NdArrayDescIXT_EEES6_(%"class.tflite::RuntimeShape"* dereferenceable(32) %1, %"class.tflite::RuntimeShape"* dereferenceable(32) %3, %"struct.tflite::NdArrayDesc"* nonnull %8, %"struct.tflite::NdArrayDesc"* nonnull %9) #8, !noalias !968
  %15 = getelementptr inbounds %"struct.tflite::reference_ops::BroadcastComparison4DSlowCommon", %"struct.tflite::reference_ops::BroadcastComparison4DSlowCommon"* %10, i64 0, i32 0, i32 0
  store i32 0, i32* %15, align 8, !alias.scope !971
  %16 = load i32, i32* %12, align 8, !noalias !971
  %17 = icmp sgt i32 %16, 4
  br i1 %17, label %18, label %19

18:                                               ; preds = %7
  call void @abort() #10, !noalias !971
  unreachable

19:                                               ; preds = %7
  store i32 4, i32* %15, align 8, !alias.scope !971
  %20 = sub i32 4, %16
  %21 = icmp sgt i32 %20, 0
  %22 = getelementptr inbounds %"struct.tflite::reference_ops::BroadcastComparison4DSlowCommon", %"struct.tflite::reference_ops::BroadcastComparison4DSlowCommon"* %10, i64 0, i32 0, i32 1
  br i1 %21, label %23, label %103

23:                                               ; preds = %19
  %24 = bitcast %union.anon* %22 to [5 x i32]*
  %25 = zext i32 %20 to i64
  %26 = icmp ult i32 %20, 8
  br i1 %26, label %96, label %27

27:                                               ; preds = %23
  %28 = and i64 %25, 4294967288
  %29 = add nsw i64 %28, -8
  %30 = lshr exact i64 %29, 3
  %31 = add nuw nsw i64 %30, 1
  %32 = and i64 %31, 7
  %33 = icmp ult i64 %29, 56
  br i1 %33, label %81, label %34

34:                                               ; preds = %27
  %35 = sub nsw i64 %31, %32
  br label %36

36:                                               ; preds = %36, %34
  %37 = phi i64 [ 0, %34 ], [ %78, %36 ]
  %38 = phi i64 [ %35, %34 ], [ %79, %36 ]
  %39 = getelementptr inbounds [5 x i32], [5 x i32]* %24, i64 0, i64 %37
  %40 = bitcast i32* %39 to <4 x i32>*
  store <4 x i32> <i32 1, i32 1, i32 1, i32 1>, <4 x i32>* %40, align 8, !alias.scope !971
  %41 = getelementptr inbounds i32, i32* %39, i64 4
  %42 = bitcast i32* %41 to <4 x i32>*
  store <4 x i32> <i32 1, i32 1, i32 1, i32 1>, <4 x i32>* %42, align 8, !alias.scope !971
  %43 = or i64 %37, 8
  %44 = getelementptr inbounds [5 x i32], [5 x i32]* %24, i64 0, i64 %43
  %45 = bitcast i32* %44 to <4 x i32>*
  store <4 x i32> <i32 1, i32 1, i32 1, i32 1>, <4 x i32>* %45, align 8, !alias.scope !971
  %46 = getelementptr inbounds i32, i32* %44, i64 4
  %47 = bitcast i32* %46 to <4 x i32>*
  store <4 x i32> <i32 1, i32 1, i32 1, i32 1>, <4 x i32>* %47, align 8, !alias.scope !971
  %48 = or i64 %37, 16
  %49 = getelementptr inbounds [5 x i32], [5 x i32]* %24, i64 0, i64 %48
  %50 = bitcast i32* %49 to <4 x i32>*
  store <4 x i32> <i32 1, i32 1, i32 1, i32 1>, <4 x i32>* %50, align 8, !alias.scope !971
  %51 = getelementptr inbounds i32, i32* %49, i64 4
  %52 = bitcast i32* %51 to <4 x i32>*
  store <4 x i32> <i32 1, i32 1, i32 1, i32 1>, <4 x i32>* %52, align 8, !alias.scope !971
  %53 = or i64 %37, 24
  %54 = getelementptr inbounds [5 x i32], [5 x i32]* %24, i64 0, i64 %53
  %55 = bitcast i32* %54 to <4 x i32>*
  store <4 x i32> <i32 1, i32 1, i32 1, i32 1>, <4 x i32>* %55, align 8, !alias.scope !971
  %56 = getelementptr inbounds i32, i32* %54, i64 4
  %57 = bitcast i32* %56 to <4 x i32>*
  store <4 x i32> <i32 1, i32 1, i32 1, i32 1>, <4 x i32>* %57, align 8, !alias.scope !971
  %58 = or i64 %37, 32
  %59 = getelementptr inbounds [5 x i32], [5 x i32]* %24, i64 0, i64 %58
  %60 = bitcast i32* %59 to <4 x i32>*
  store <4 x i32> <i32 1, i32 1, i32 1, i32 1>, <4 x i32>* %60, align 8, !alias.scope !971
  %61 = getelementptr inbounds i32, i32* %59, i64 4
  %62 = bitcast i32* %61 to <4 x i32>*
  store <4 x i32> <i32 1, i32 1, i32 1, i32 1>, <4 x i32>* %62, align 8, !alias.scope !971
  %63 = or i64 %37, 40
  %64 = getelementptr inbounds [5 x i32], [5 x i32]* %24, i64 0, i64 %63
  %65 = bitcast i32* %64 to <4 x i32>*
  store <4 x i32> <i32 1, i32 1, i32 1, i32 1>, <4 x i32>* %65, align 8, !alias.scope !971
  %66 = getelementptr inbounds i32, i32* %64, i64 4
  %67 = bitcast i32* %66 to <4 x i32>*
  store <4 x i32> <i32 1, i32 1, i32 1, i32 1>, <4 x i32>* %67, align 8, !alias.scope !971
  %68 = or i64 %37, 48
  %69 = getelementptr inbounds [5 x i32], [5 x i32]* %24, i64 0, i64 %68
  %70 = bitcast i32* %69 to <4 x i32>*
  store <4 x i32> <i32 1, i32 1, i32 1, i32 1>, <4 x i32>* %70, align 8, !alias.scope !971
  %71 = getelementptr inbounds i32, i32* %69, i64 4
  %72 = bitcast i32* %71 to <4 x i32>*
  store <4 x i32> <i32 1, i32 1, i32 1, i32 1>, <4 x i32>* %72, align 8, !alias.scope !971
  %73 = or i64 %37, 56
  %74 = getelementptr inbounds [5 x i32], [5 x i32]* %24, i64 0, i64 %73
  %75 = bitcast i32* %74 to <4 x i32>*
  store <4 x i32> <i32 1, i32 1, i32 1, i32 1>, <4 x i32>* %75, align 8, !alias.scope !971
  %76 = getelementptr inbounds i32, i32* %74, i64 4
  %77 = bitcast i32* %76 to <4 x i32>*
  store <4 x i32> <i32 1, i32 1, i32 1, i32 1>, <4 x i32>* %77, align 8, !alias.scope !971
  %78 = add i64 %37, 64
  %79 = add i64 %38, -8
  %80 = icmp eq i64 %79, 0
  br i1 %80, label %81, label %36, !llvm.loop !974

81:                                               ; preds = %36, %27
  %82 = phi i64 [ 0, %27 ], [ %78, %36 ]
  %83 = icmp eq i64 %32, 0
  br i1 %83, label %94, label %84

84:                                               ; preds = %81, %84
  %85 = phi i64 [ %91, %84 ], [ %82, %81 ]
  %86 = phi i64 [ %92, %84 ], [ %32, %81 ]
  %87 = getelementptr inbounds [5 x i32], [5 x i32]* %24, i64 0, i64 %85
  %88 = bitcast i32* %87 to <4 x i32>*
  store <4 x i32> <i32 1, i32 1, i32 1, i32 1>, <4 x i32>* %88, align 8, !alias.scope !971
  %89 = getelementptr inbounds i32, i32* %87, i64 4
  %90 = bitcast i32* %89 to <4 x i32>*
  store <4 x i32> <i32 1, i32 1, i32 1, i32 1>, <4 x i32>* %90, align 8, !alias.scope !971
  %91 = add i64 %85, 8
  %92 = add i64 %86, -1
  %93 = icmp eq i64 %92, 0
  br i1 %93, label %94, label %84, !llvm.loop !975

94:                                               ; preds = %84, %81
  %95 = icmp eq i64 %28, %25
  br i1 %95, label %103, label %96

96:                                               ; preds = %94, %23
  %97 = phi i64 [ 0, %23 ], [ %28, %94 ]
  br label %98

98:                                               ; preds = %96, %98
  %99 = phi i64 [ %101, %98 ], [ %97, %96 ]
  %100 = getelementptr inbounds [5 x i32], [5 x i32]* %24, i64 0, i64 %99
  store i32 1, i32* %100, align 4, !alias.scope !971
  %101 = add nuw nsw i64 %99, 1
  %102 = icmp eq i64 %101, %25
  br i1 %102, label %103, label %98, !llvm.loop !976

103:                                              ; preds = %98, %94, %19
  %104 = bitcast %union.anon* %22 to i32*
  %105 = sext i32 %20 to i64
  %106 = getelementptr inbounds i32, i32* %104, i64 %105
  %107 = bitcast i32* %106 to i8*
  %108 = icmp sgt i32 %16, 5
  %109 = getelementptr inbounds %"class.tflite::RuntimeShape", %"class.tflite::RuntimeShape"* %5, i64 0, i32 1
  %110 = getelementptr inbounds %union.anon, %union.anon* %109, i64 0, i32 0
  %111 = load i32*, i32** %110, align 8, !noalias !971
  %112 = bitcast %union.anon* %109 to i32*
  %113 = select i1 %108, i32* %111, i32* %112
  %114 = bitcast i32* %113 to i8*
  %115 = sext i32 %16 to i64
  %116 = shl nsw i64 %115, 2
  call void @llvm.memcpy.p0i8.p0i8.i64(i8* align 4 %107, i8* align 4 %114, i64 %116, i1 false) #8
  %117 = getelementptr inbounds %"struct.tflite::reference_ops::BroadcastComparison4DSlowCommon", %"struct.tflite::reference_ops::BroadcastComparison4DSlowCommon"* %10, i64 0, i32 1
  %118 = bitcast %"struct.tflite::NdArrayDesc"* %117 to i8*
  call void @llvm.memcpy.p0i8.p0i8.i64(i8* align 8 %118, i8* nonnull align 4 %13, i64 32, i1 false) #8
  %119 = getelementptr inbounds %"struct.tflite::reference_ops::BroadcastComparison4DSlowCommon", %"struct.tflite::reference_ops::BroadcastComparison4DSlowCommon"* %10, i64 0, i32 2
  %120 = bitcast %"struct.tflite::NdArrayDesc"* %119 to i8*
  call void @llvm.memcpy.p0i8.p0i8.i64(i8* align 8 %120, i8* nonnull align 4 %14, i64 32, i1 false) #8
  call void @llvm.lifetime.end.p0i8(i64 32, i8* nonnull %14) #8, !noalias !968
  call void @llvm.lifetime.end.p0i8(i64 32, i8* nonnull %13) #8, !noalias !968
  %121 = load i32, i32* %15, align 8
  %122 = icmp sgt i32 %121, 5
  %123 = getelementptr inbounds %union.anon, %union.anon* %22, i64 0, i32 0
  %124 = load i32*, i32** %123, align 8
  %125 = select i1 %122, i32* %124, i32* %104
  %126 = load i32, i32* %125, align 4
  %127 = icmp sgt i32 %126, 0
  br i1 %127, label %128, label %175

128:                                              ; preds = %103
  %129 = bitcast %union.anon* %22 to [5 x i32]*
  %130 = getelementptr inbounds [5 x i32], [5 x i32]* %129, i64 0, i64 1
  %131 = getelementptr inbounds %"struct.tflite::reference_ops::BroadcastComparison4DSlowCommon", %"struct.tflite::reference_ops::BroadcastComparison4DSlowCommon"* %10, i64 0, i32 0, i32 1, i32 1
  %132 = bitcast [16 x i8]* %131 to i32*
  %133 = getelementptr inbounds %"struct.tflite::reference_ops::BroadcastComparison4DSlowCommon", %"struct.tflite::reference_ops::BroadcastComparison4DSlowCommon"* %10, i64 0, i32 0, i32 1, i32 1, i64 4
  %134 = bitcast i8* %133 to i32*
  %135 = getelementptr inbounds %"struct.tflite::reference_ops::BroadcastComparison4DSlowCommon", %"struct.tflite::reference_ops::BroadcastComparison4DSlowCommon"* %10, i64 0, i32 1, i32 1, i64 0
  %136 = load i32, i32* %135, align 8
  %137 = getelementptr inbounds %"struct.tflite::reference_ops::BroadcastComparison4DSlowCommon", %"struct.tflite::reference_ops::BroadcastComparison4DSlowCommon"* %10, i64 0, i32 1, i32 1, i64 1
  %138 = load i32, i32* %137, align 4
  %139 = getelementptr inbounds %"struct.tflite::reference_ops::BroadcastComparison4DSlowCommon", %"struct.tflite::reference_ops::BroadcastComparison4DSlowCommon"* %10, i64 0, i32 1, i32 1, i64 2
  %140 = load i32, i32* %139, align 8
  %141 = getelementptr inbounds %"struct.tflite::reference_ops::BroadcastComparison4DSlowCommon", %"struct.tflite::reference_ops::BroadcastComparison4DSlowCommon"* %10, i64 0, i32 1, i32 1, i64 3
  %142 = load i32, i32* %141, align 4
  %143 = getelementptr inbounds %"struct.tflite::reference_ops::BroadcastComparison4DSlowCommon", %"struct.tflite::reference_ops::BroadcastComparison4DSlowCommon"* %10, i64 0, i32 2, i32 1, i64 0
  %144 = load i32, i32* %143, align 8
  %145 = getelementptr inbounds %"struct.tflite::reference_ops::BroadcastComparison4DSlowCommon", %"struct.tflite::reference_ops::BroadcastComparison4DSlowCommon"* %10, i64 0, i32 2, i32 1, i64 1
  %146 = load i32, i32* %145, align 4
  %147 = getelementptr inbounds %"struct.tflite::reference_ops::BroadcastComparison4DSlowCommon", %"struct.tflite::reference_ops::BroadcastComparison4DSlowCommon"* %10, i64 0, i32 2, i32 1, i64 2
  %148 = load i32, i32* %147, align 8
  %149 = getelementptr inbounds %"struct.tflite::reference_ops::BroadcastComparison4DSlowCommon", %"struct.tflite::reference_ops::BroadcastComparison4DSlowCommon"* %10, i64 0, i32 2, i32 1, i64 3
  %150 = load i32, i32* %149, align 4
  %151 = getelementptr inbounds i32, i32* %104, i64 1
  %152 = sext i32 %150 to i64
  %153 = sext i32 %142 to i64
  %154 = sext i32 %148 to i64
  %155 = sext i32 %140 to i64
  %156 = sext i32 %146 to i64
  %157 = sext i32 %138 to i64
  %158 = sext i32 %144 to i64
  %159 = sext i32 %136 to i64
  %160 = getelementptr inbounds i32, i32* %124, i64 1
  %161 = select i1 %122, i32* %160, i32* %130
  %162 = getelementptr inbounds i32, i32* %124, i64 2
  %163 = select i1 %122, i32* %162, i32* %132
  %164 = getelementptr inbounds i32, i32* %124, i64 3
  %165 = select i1 %122, i32* %164, i32* %134
  br label %166

166:                                              ; preds = %128, %199
  %167 = phi i32 [ %126, %128 ], [ %200, %199 ]
  %168 = phi i64 [ 0, %128 ], [ %201, %199 ]
  %169 = load i32, i32* %161, align 4
  %170 = icmp sgt i32 %169, 0
  br i1 %170, label %171, label %199

171:                                              ; preds = %166
  %172 = mul nsw i64 %168, %159
  %173 = mul nsw i64 %168, %158
  %174 = trunc i64 %168 to i32
  br label %182

175:                                              ; preds = %199, %103
  %176 = xor i1 %122, true
  %177 = icmp eq i32* %124, null
  %178 = or i1 %177, %176
  br i1 %178, label %181, label %179

179:                                              ; preds = %175
  %180 = bitcast i32* %124 to i8*
  call void @_ZdaPv(i8* %180) #9
  br label %181

181:                                              ; preds = %175, %179
  call void @llvm.lifetime.end.p0i8(i64 96, i8* nonnull %11) #8
  ret void

182:                                              ; preds = %171, %222
  %183 = phi i32 [ %169, %171 ], [ %223, %222 ]
  %184 = phi i64 [ 0, %171 ], [ %224, %222 ]
  %185 = load i32, i32* %163, align 4
  %186 = icmp sgt i32 %185, 0
  br i1 %186, label %187, label %222

187:                                              ; preds = %182
  %188 = mul nsw i64 %184, %157
  %189 = add nsw i64 %188, %172
  %190 = mul nsw i64 %184, %156
  %191 = add nsw i64 %190, %173
  %192 = load i32, i32* %151, align 4
  %193 = mul nsw i32 %192, %174
  %194 = trunc i64 %184 to i32
  %195 = add nsw i32 %193, %194
  %196 = load i32, i32* %165, align 4
  br label %204

197:                                              ; preds = %222
  %198 = load i32, i32* %125, align 4
  br label %199

199:                                              ; preds = %197, %166
  %200 = phi i32 [ %198, %197 ], [ %167, %166 ]
  %201 = add nuw nsw i64 %168, 1
  %202 = sext i32 %200 to i64
  %203 = icmp slt i64 %201, %202
  br i1 %203, label %166, label %175

204:                                              ; preds = %187, %229
  %205 = phi i32 [ %185, %187 ], [ %230, %229 ]
  %206 = phi i32 [ %196, %187 ], [ %231, %229 ]
  %207 = phi i64 [ 0, %187 ], [ %232, %229 ]
  %208 = icmp sgt i32 %206, 0
  br i1 %208, label %209, label %229

209:                                              ; preds = %204
  %210 = mul nsw i64 %207, %155
  %211 = add nsw i64 %189, %210
  %212 = mul nsw i64 %207, %154
  %213 = add nsw i64 %191, %212
  %214 = load i32, i32* %132, align 8
  %215 = mul nsw i32 %195, %214
  %216 = trunc i64 %207 to i32
  %217 = add nsw i32 %215, %216
  %218 = load i32, i32* %134, align 4
  %219 = mul nsw i32 %217, %218
  br label %235

220:                                              ; preds = %229
  %221 = load i32, i32* %161, align 4
  br label %222

222:                                              ; preds = %220, %182
  %223 = phi i32 [ %221, %220 ], [ %183, %182 ]
  %224 = add nuw nsw i64 %184, 1
  %225 = sext i32 %223 to i64
  %226 = icmp slt i64 %224, %225
  br i1 %226, label %182, label %197

227:                                              ; preds = %235
  %228 = load i32, i32* %163, align 4
  br label %229

229:                                              ; preds = %227, %204
  %230 = phi i32 [ %228, %227 ], [ %205, %204 ]
  %231 = phi i32 [ %252, %227 ], [ %206, %204 ]
  %232 = add nuw nsw i64 %207, 1
  %233 = sext i32 %230 to i64
  %234 = icmp slt i64 %232, %233
  br i1 %234, label %204, label %220

235:                                              ; preds = %209, %235
  %236 = phi i64 [ 0, %209 ], [ %251, %235 ]
  %237 = mul nsw i64 %236, %153
  %238 = add nsw i64 %211, %237
  %239 = getelementptr inbounds float, float* %2, i64 %238
  %240 = load float, float* %239, align 4
  %241 = mul nsw i64 %236, %152
  %242 = add nsw i64 %213, %241
  %243 = getelementptr inbounds float, float* %4, i64 %242
  %244 = load float, float* %243, align 4
  %245 = fcmp ogt float %240, %244
  %246 = trunc i64 %236 to i32
  %247 = add nsw i32 %219, %246
  %248 = sext i32 %247 to i64
  %249 = getelementptr inbounds i8, i8* %6, i64 %248
  %250 = zext i1 %245 to i8
  store i8 %250, i8* %249, align 1
  %251 = add nuw nsw i64 %236, 1
  %252 = load i32, i32* %165, align 4
  %253 = sext i32 %252 to i64
  %254 = icmp slt i64 %251, %253
  br i1 %254, label %235, label %227
}

; Function Attrs: inlinehint nounwind ssp uwtable
define linkonce_odr hidden void @_ZN6tflite13reference_ops29BroadcastComparison4DSlowImplIiXadL_ZNS0_9GreaterFnIiEEbT_S3_EEEEvRKNS_16ComparisonParamsERKNS_12RuntimeShapeEPKS3_S9_SB_S9_Pb(%"struct.tflite::ComparisonParams"* dereferenceable(32), %"class.tflite::RuntimeShape"* dereferenceable(32), i32*, %"class.tflite::RuntimeShape"* dereferenceable(32), i32*, %"class.tflite::RuntimeShape"* dereferenceable(32), i8*) local_unnamed_addr #4 comdat {
  %8 = alloca %"struct.tflite::NdArrayDesc", align 4
  %9 = alloca %"struct.tflite::NdArrayDesc", align 4
  %10 = alloca %"struct.tflite::reference_ops::BroadcastComparison4DSlowCommon", align 8
  %11 = bitcast %"struct.tflite::reference_ops::BroadcastComparison4DSlowCommon"* %10 to i8*
  call void @llvm.lifetime.start.p0i8(i64 96, i8* nonnull %11) #8
  call void @llvm.memset.p0i8.i64(i8* nonnull align 8 %11, i8 -86, i64 96, i1 false)
  %12 = getelementptr inbounds %"class.tflite::RuntimeShape", %"class.tflite::RuntimeShape"* %5, i64 0, i32 0
  %13 = bitcast %"struct.tflite::NdArrayDesc"* %8 to i8*
  call void @llvm.lifetime.start.p0i8(i64 32, i8* nonnull %13) #8, !noalias !977
  %14 = bitcast %"struct.tflite::NdArrayDesc"* %9 to i8*
  call void @llvm.memset.p0i8.i64(i8* nonnull align 4 %13, i8 -86, i64 32, i1 false) #8, !noalias !977
  call void @llvm.lifetime.start.p0i8(i64 32, i8* nonnull %14) #8, !noalias !977
  call void @llvm.memset.p0i8.i64(i8* nonnull align 4 %14, i8 -86, i64 32, i1 false) #8, !noalias !977
  call void @_ZN6tflite35NdArrayDescsForElementwiseBroadcastILi4EEEvRKNS_12RuntimeShapeES3_PNS_11NdArrayDescIXT_EEES6_(%"class.tflite::RuntimeShape"* dereferenceable(32) %1, %"class.tflite::RuntimeShape"* dereferenceable(32) %3, %"struct.tflite::NdArrayDesc"* nonnull %8, %"struct.tflite::NdArrayDesc"* nonnull %9) #8, !noalias !977
  %15 = getelementptr inbounds %"struct.tflite::reference_ops::BroadcastComparison4DSlowCommon", %"struct.tflite::reference_ops::BroadcastComparison4DSlowCommon"* %10, i64 0, i32 0, i32 0
  store i32 0, i32* %15, align 8, !alias.scope !980
  %16 = load i32, i32* %12, align 8, !noalias !980
  %17 = icmp sgt i32 %16, 4
  br i1 %17, label %18, label %19

18:                                               ; preds = %7
  call void @abort() #10, !noalias !980
  unreachable

19:                                               ; preds = %7
  store i32 4, i32* %15, align 8, !alias.scope !980
  %20 = sub i32 4, %16
  %21 = icmp sgt i32 %20, 0
  %22 = getelementptr inbounds %"struct.tflite::reference_ops::BroadcastComparison4DSlowCommon", %"struct.tflite::reference_ops::BroadcastComparison4DSlowCommon"* %10, i64 0, i32 0, i32 1
  br i1 %21, label %23, label %103

23:                                               ; preds = %19
  %24 = bitcast %union.anon* %22 to [5 x i32]*
  %25 = zext i32 %20 to i64
  %26 = icmp ult i32 %20, 8
  br i1 %26, label %96, label %27

27:                                               ; preds = %23
  %28 = and i64 %25, 4294967288
  %29 = add nsw i64 %28, -8
  %30 = lshr exact i64 %29, 3
  %31 = add nuw nsw i64 %30, 1
  %32 = and i64 %31, 7
  %33 = icmp ult i64 %29, 56
  br i1 %33, label %81, label %34

34:                                               ; preds = %27
  %35 = sub nsw i64 %31, %32
  br label %36

36:                                               ; preds = %36, %34
  %37 = phi i64 [ 0, %34 ], [ %78, %36 ]
  %38 = phi i64 [ %35, %34 ], [ %79, %36 ]
  %39 = getelementptr inbounds [5 x i32], [5 x i32]* %24, i64 0, i64 %37
  %40 = bitcast i32* %39 to <4 x i32>*
  store <4 x i32> <i32 1, i32 1, i32 1, i32 1>, <4 x i32>* %40, align 8, !alias.scope !980
  %41 = getelementptr inbounds i32, i32* %39, i64 4
  %42 = bitcast i32* %41 to <4 x i32>*
  store <4 x i32> <i32 1, i32 1, i32 1, i32 1>, <4 x i32>* %42, align 8, !alias.scope !980
  %43 = or i64 %37, 8
  %44 = getelementptr inbounds [5 x i32], [5 x i32]* %24, i64 0, i64 %43
  %45 = bitcast i32* %44 to <4 x i32>*
  store <4 x i32> <i32 1, i32 1, i32 1, i32 1>, <4 x i32>* %45, align 8, !alias.scope !980
  %46 = getelementptr inbounds i32, i32* %44, i64 4
  %47 = bitcast i32* %46 to <4 x i32>*
  store <4 x i32> <i32 1, i32 1, i32 1, i32 1>, <4 x i32>* %47, align 8, !alias.scope !980
  %48 = or i64 %37, 16
  %49 = getelementptr inbounds [5 x i32], [5 x i32]* %24, i64 0, i64 %48
  %50 = bitcast i32* %49 to <4 x i32>*
  store <4 x i32> <i32 1, i32 1, i32 1, i32 1>, <4 x i32>* %50, align 8, !alias.scope !980
  %51 = getelementptr inbounds i32, i32* %49, i64 4
  %52 = bitcast i32* %51 to <4 x i32>*
  store <4 x i32> <i32 1, i32 1, i32 1, i32 1>, <4 x i32>* %52, align 8, !alias.scope !980
  %53 = or i64 %37, 24
  %54 = getelementptr inbounds [5 x i32], [5 x i32]* %24, i64 0, i64 %53
  %55 = bitcast i32* %54 to <4 x i32>*
  store <4 x i32> <i32 1, i32 1, i32 1, i32 1>, <4 x i32>* %55, align 8, !alias.scope !980
  %56 = getelementptr inbounds i32, i32* %54, i64 4
  %57 = bitcast i32* %56 to <4 x i32>*
  store <4 x i32> <i32 1, i32 1, i32 1, i32 1>, <4 x i32>* %57, align 8, !alias.scope !980
  %58 = or i64 %37, 32
  %59 = getelementptr inbounds [5 x i32], [5 x i32]* %24, i64 0, i64 %58
  %60 = bitcast i32* %59 to <4 x i32>*
  store <4 x i32> <i32 1, i32 1, i32 1, i32 1>, <4 x i32>* %60, align 8, !alias.scope !980
  %61 = getelementptr inbounds i32, i32* %59, i64 4
  %62 = bitcast i32* %61 to <4 x i32>*
  store <4 x i32> <i32 1, i32 1, i32 1, i32 1>, <4 x i32>* %62, align 8, !alias.scope !980
  %63 = or i64 %37, 40
  %64 = getelementptr inbounds [5 x i32], [5 x i32]* %24, i64 0, i64 %63
  %65 = bitcast i32* %64 to <4 x i32>*
  store <4 x i32> <i32 1, i32 1, i32 1, i32 1>, <4 x i32>* %65, align 8, !alias.scope !980
  %66 = getelementptr inbounds i32, i32* %64, i64 4
  %67 = bitcast i32* %66 to <4 x i32>*
  store <4 x i32> <i32 1, i32 1, i32 1, i32 1>, <4 x i32>* %67, align 8, !alias.scope !980
  %68 = or i64 %37, 48
  %69 = getelementptr inbounds [5 x i32], [5 x i32]* %24, i64 0, i64 %68
  %70 = bitcast i32* %69 to <4 x i32>*
  store <4 x i32> <i32 1, i32 1, i32 1, i32 1>, <4 x i32>* %70, align 8, !alias.scope !980
  %71 = getelementptr inbounds i32, i32* %69, i64 4
  %72 = bitcast i32* %71 to <4 x i32>*
  store <4 x i32> <i32 1, i32 1, i32 1, i32 1>, <4 x i32>* %72, align 8, !alias.scope !980
  %73 = or i64 %37, 56
  %74 = getelementptr inbounds [5 x i32], [5 x i32]* %24, i64 0, i64 %73
  %75 = bitcast i32* %74 to <4 x i32>*
  store <4 x i32> <i32 1, i32 1, i32 1, i32 1>, <4 x i32>* %75, align 8, !alias.scope !980
  %76 = getelementptr inbounds i32, i32* %74, i64 4
  %77 = bitcast i32* %76 to <4 x i32>*
  store <4 x i32> <i32 1, i32 1, i32 1, i32 1>, <4 x i32>* %77, align 8, !alias.scope !980
  %78 = add i64 %37, 64
  %79 = add i64 %38, -8
  %80 = icmp eq i64 %79, 0
  br i1 %80, label %81, label %36, !llvm.loop !983

81:                                               ; preds = %36, %27
  %82 = phi i64 [ 0, %27 ], [ %78, %36 ]
  %83 = icmp eq i64 %32, 0
  br i1 %83, label %94, label %84

84:                                               ; preds = %81, %84
  %85 = phi i64 [ %91, %84 ], [ %82, %81 ]
  %86 = phi i64 [ %92, %84 ], [ %32, %81 ]
  %87 = getelementptr inbounds [5 x i32], [5 x i32]* %24, i64 0, i64 %85
  %88 = bitcast i32* %87 to <4 x i32>*
  store <4 x i32> <i32 1, i32 1, i32 1, i32 1>, <4 x i32>* %88, align 8, !alias.scope !980
  %89 = getelementptr inbounds i32, i32* %87, i64 4
  %90 = bitcast i32* %89 to <4 x i32>*
  store <4 x i32> <i32 1, i32 1, i32 1, i32 1>, <4 x i32>* %90, align 8, !alias.scope !980
  %91 = add i64 %85, 8
  %92 = add i64 %86, -1
  %93 = icmp eq i64 %92, 0
  br i1 %93, label %94, label %84, !llvm.loop !984

94:                                               ; preds = %84, %81
  %95 = icmp eq i64 %28, %25
  br i1 %95, label %103, label %96

96:                                               ; preds = %94, %23
  %97 = phi i64 [ 0, %23 ], [ %28, %94 ]
  br label %98

98:                                               ; preds = %96, %98
  %99 = phi i64 [ %101, %98 ], [ %97, %96 ]
  %100 = getelementptr inbounds [5 x i32], [5 x i32]* %24, i64 0, i64 %99
  store i32 1, i32* %100, align 4, !alias.scope !980
  %101 = add nuw nsw i64 %99, 1
  %102 = icmp eq i64 %101, %25
  br i1 %102, label %103, label %98, !llvm.loop !985

103:                                              ; preds = %98, %94, %19
  %104 = bitcast %union.anon* %22 to i32*
  %105 = sext i32 %20 to i64
  %106 = getelementptr inbounds i32, i32* %104, i64 %105
  %107 = bitcast i32* %106 to i8*
  %108 = icmp sgt i32 %16, 5
  %109 = getelementptr inbounds %"class.tflite::RuntimeShape", %"class.tflite::RuntimeShape"* %5, i64 0, i32 1
  %110 = getelementptr inbounds %union.anon, %union.anon* %109, i64 0, i32 0
  %111 = load i32*, i32** %110, align 8, !noalias !980
  %112 = bitcast %union.anon* %109 to i32*
  %113 = select i1 %108, i32* %111, i32* %112
  %114 = bitcast i32* %113 to i8*
  %115 = sext i32 %16 to i64
  %116 = shl nsw i64 %115, 2
  call void @llvm.memcpy.p0i8.p0i8.i64(i8* align 4 %107, i8* align 4 %114, i64 %116, i1 false) #8
  %117 = getelementptr inbounds %"struct.tflite::reference_ops::BroadcastComparison4DSlowCommon", %"struct.tflite::reference_ops::BroadcastComparison4DSlowCommon"* %10, i64 0, i32 1
  %118 = bitcast %"struct.tflite::NdArrayDesc"* %117 to i8*
  call void @llvm.memcpy.p0i8.p0i8.i64(i8* align 8 %118, i8* nonnull align 4 %13, i64 32, i1 false) #8
  %119 = getelementptr inbounds %"struct.tflite::reference_ops::BroadcastComparison4DSlowCommon", %"struct.tflite::reference_ops::BroadcastComparison4DSlowCommon"* %10, i64 0, i32 2
  %120 = bitcast %"struct.tflite::NdArrayDesc"* %119 to i8*
  call void @llvm.memcpy.p0i8.p0i8.i64(i8* align 8 %120, i8* nonnull align 4 %14, i64 32, i1 false) #8
  call void @llvm.lifetime.end.p0i8(i64 32, i8* nonnull %14) #8, !noalias !977
  call void @llvm.lifetime.end.p0i8(i64 32, i8* nonnull %13) #8, !noalias !977
  %121 = load i32, i32* %15, align 8
  %122 = icmp sgt i32 %121, 5
  %123 = getelementptr inbounds %union.anon, %union.anon* %22, i64 0, i32 0
  %124 = load i32*, i32** %123, align 8
  %125 = select i1 %122, i32* %124, i32* %104
  %126 = load i32, i32* %125, align 4
  %127 = icmp sgt i32 %126, 0
  br i1 %127, label %128, label %175

128:                                              ; preds = %103
  %129 = bitcast %union.anon* %22 to [5 x i32]*
  %130 = getelementptr inbounds [5 x i32], [5 x i32]* %129, i64 0, i64 1
  %131 = getelementptr inbounds %"struct.tflite::reference_ops::BroadcastComparison4DSlowCommon", %"struct.tflite::reference_ops::BroadcastComparison4DSlowCommon"* %10, i64 0, i32 0, i32 1, i32 1
  %132 = bitcast [16 x i8]* %131 to i32*
  %133 = getelementptr inbounds %"struct.tflite::reference_ops::BroadcastComparison4DSlowCommon", %"struct.tflite::reference_ops::BroadcastComparison4DSlowCommon"* %10, i64 0, i32 0, i32 1, i32 1, i64 4
  %134 = bitcast i8* %133 to i32*
  %135 = getelementptr inbounds %"struct.tflite::reference_ops::BroadcastComparison4DSlowCommon", %"struct.tflite::reference_ops::BroadcastComparison4DSlowCommon"* %10, i64 0, i32 1, i32 1, i64 0
  %136 = load i32, i32* %135, align 8
  %137 = getelementptr inbounds %"struct.tflite::reference_ops::BroadcastComparison4DSlowCommon", %"struct.tflite::reference_ops::BroadcastComparison4DSlowCommon"* %10, i64 0, i32 1, i32 1, i64 1
  %138 = load i32, i32* %137, align 4
  %139 = getelementptr inbounds %"struct.tflite::reference_ops::BroadcastComparison4DSlowCommon", %"struct.tflite::reference_ops::BroadcastComparison4DSlowCommon"* %10, i64 0, i32 1, i32 1, i64 2
  %140 = load i32, i32* %139, align 8
  %141 = getelementptr inbounds %"struct.tflite::reference_ops::BroadcastComparison4DSlowCommon", %"struct.tflite::reference_ops::BroadcastComparison4DSlowCommon"* %10, i64 0, i32 1, i32 1, i64 3
  %142 = load i32, i32* %141, align 4
  %143 = getelementptr inbounds %"struct.tflite::reference_ops::BroadcastComparison4DSlowCommon", %"struct.tflite::reference_ops::BroadcastComparison4DSlowCommon"* %10, i64 0, i32 2, i32 1, i64 0
  %144 = load i32, i32* %143, align 8
  %145 = getelementptr inbounds %"struct.tflite::reference_ops::BroadcastComparison4DSlowCommon", %"struct.tflite::reference_ops::BroadcastComparison4DSlowCommon"* %10, i64 0, i32 2, i32 1, i64 1
  %146 = load i32, i32* %145, align 4
  %147 = getelementptr inbounds %"struct.tflite::reference_ops::BroadcastComparison4DSlowCommon", %"struct.tflite::reference_ops::BroadcastComparison4DSlowCommon"* %10, i64 0, i32 2, i32 1, i64 2
  %148 = load i32, i32* %147, align 8
  %149 = getelementptr inbounds %"struct.tflite::reference_ops::BroadcastComparison4DSlowCommon", %"struct.tflite::reference_ops::BroadcastComparison4DSlowCommon"* %10, i64 0, i32 2, i32 1, i64 3
  %150 = load i32, i32* %149, align 4
  %151 = getelementptr inbounds i32, i32* %104, i64 1
  %152 = sext i32 %150 to i64
  %153 = sext i32 %142 to i64
  %154 = sext i32 %148 to i64
  %155 = sext i32 %140 to i64
  %156 = sext i32 %146 to i64
  %157 = sext i32 %138 to i64
  %158 = sext i32 %144 to i64
  %159 = sext i32 %136 to i64
  %160 = getelementptr inbounds i32, i32* %124, i64 1
  %161 = select i1 %122, i32* %160, i32* %130
  %162 = getelementptr inbounds i32, i32* %124, i64 2
  %163 = select i1 %122, i32* %162, i32* %132
  %164 = getelementptr inbounds i32, i32* %124, i64 3
  %165 = select i1 %122, i32* %164, i32* %134
  br label %166

166:                                              ; preds = %128, %199
  %167 = phi i32 [ %126, %128 ], [ %200, %199 ]
  %168 = phi i64 [ 0, %128 ], [ %201, %199 ]
  %169 = load i32, i32* %161, align 4
  %170 = icmp sgt i32 %169, 0
  br i1 %170, label %171, label %199

171:                                              ; preds = %166
  %172 = mul nsw i64 %168, %159
  %173 = mul nsw i64 %168, %158
  %174 = trunc i64 %168 to i32
  br label %182

175:                                              ; preds = %199, %103
  %176 = xor i1 %122, true
  %177 = icmp eq i32* %124, null
  %178 = or i1 %177, %176
  br i1 %178, label %181, label %179

179:                                              ; preds = %175
  %180 = bitcast i32* %124 to i8*
  call void @_ZdaPv(i8* %180) #9
  br label %181

181:                                              ; preds = %175, %179
  call void @llvm.lifetime.end.p0i8(i64 96, i8* nonnull %11) #8
  ret void

182:                                              ; preds = %171, %222
  %183 = phi i32 [ %169, %171 ], [ %223, %222 ]
  %184 = phi i64 [ 0, %171 ], [ %224, %222 ]
  %185 = load i32, i32* %163, align 4
  %186 = icmp sgt i32 %185, 0
  br i1 %186, label %187, label %222

187:                                              ; preds = %182
  %188 = mul nsw i64 %184, %157
  %189 = add nsw i64 %188, %172
  %190 = mul nsw i64 %184, %156
  %191 = add nsw i64 %190, %173
  %192 = load i32, i32* %151, align 4
  %193 = mul nsw i32 %192, %174
  %194 = trunc i64 %184 to i32
  %195 = add nsw i32 %193, %194
  %196 = load i32, i32* %165, align 4
  br label %204

197:                                              ; preds = %222
  %198 = load i32, i32* %125, align 4
  br label %199

199:                                              ; preds = %197, %166
  %200 = phi i32 [ %198, %197 ], [ %167, %166 ]
  %201 = add nuw nsw i64 %168, 1
  %202 = sext i32 %200 to i64
  %203 = icmp slt i64 %201, %202
  br i1 %203, label %166, label %175

204:                                              ; preds = %187, %229
  %205 = phi i32 [ %185, %187 ], [ %230, %229 ]
  %206 = phi i32 [ %196, %187 ], [ %231, %229 ]
  %207 = phi i64 [ 0, %187 ], [ %232, %229 ]
  %208 = icmp sgt i32 %206, 0
  br i1 %208, label %209, label %229

209:                                              ; preds = %204
  %210 = mul nsw i64 %207, %155
  %211 = add nsw i64 %189, %210
  %212 = mul nsw i64 %207, %154
  %213 = add nsw i64 %191, %212
  %214 = load i32, i32* %132, align 8
  %215 = mul nsw i32 %195, %214
  %216 = trunc i64 %207 to i32
  %217 = add nsw i32 %215, %216
  %218 = load i32, i32* %134, align 4
  %219 = mul nsw i32 %217, %218
  br label %235

220:                                              ; preds = %229
  %221 = load i32, i32* %161, align 4
  br label %222

222:                                              ; preds = %220, %182
  %223 = phi i32 [ %221, %220 ], [ %183, %182 ]
  %224 = add nuw nsw i64 %184, 1
  %225 = sext i32 %223 to i64
  %226 = icmp slt i64 %224, %225
  br i1 %226, label %182, label %197

227:                                              ; preds = %235
  %228 = load i32, i32* %163, align 4
  br label %229

229:                                              ; preds = %227, %204
  %230 = phi i32 [ %228, %227 ], [ %205, %204 ]
  %231 = phi i32 [ %252, %227 ], [ %206, %204 ]
  %232 = add nuw nsw i64 %207, 1
  %233 = sext i32 %230 to i64
  %234 = icmp slt i64 %232, %233
  br i1 %234, label %204, label %220

235:                                              ; preds = %209, %235
  %236 = phi i64 [ 0, %209 ], [ %251, %235 ]
  %237 = mul nsw i64 %236, %153
  %238 = add nsw i64 %211, %237
  %239 = getelementptr inbounds i32, i32* %2, i64 %238
  %240 = load i32, i32* %239, align 4
  %241 = mul nsw i64 %236, %152
  %242 = add nsw i64 %213, %241
  %243 = getelementptr inbounds i32, i32* %4, i64 %242
  %244 = load i32, i32* %243, align 4
  %245 = icmp sgt i32 %240, %244
  %246 = trunc i64 %236 to i32
  %247 = add nsw i32 %219, %246
  %248 = sext i32 %247 to i64
  %249 = getelementptr inbounds i8, i8* %6, i64 %248
  %250 = zext i1 %245 to i8
  store i8 %250, i8* %249, align 1
  %251 = add nuw nsw i64 %236, 1
  %252 = load i32, i32* %165, align 4
  %253 = sext i32 %252 to i64
  %254 = icmp slt i64 %251, %253
  br i1 %254, label %235, label %227
}

; Function Attrs: inlinehint nounwind ssp uwtable
define linkonce_odr hidden void @_ZN6tflite13reference_ops29BroadcastComparison4DSlowImplIlXadL_ZNS0_9GreaterFnIlEEbT_S3_EEEEvRKNS_16ComparisonParamsERKNS_12RuntimeShapeEPKS3_S9_SB_S9_Pb(%"struct.tflite::ComparisonParams"* dereferenceable(32), %"class.tflite::RuntimeShape"* dereferenceable(32), i64*, %"class.tflite::RuntimeShape"* dereferenceable(32), i64*, %"class.tflite::RuntimeShape"* dereferenceable(32), i8*) local_unnamed_addr #4 comdat {
  %8 = alloca %"struct.tflite::NdArrayDesc", align 4
  %9 = alloca %"struct.tflite::NdArrayDesc", align 4
  %10 = alloca %"struct.tflite::reference_ops::BroadcastComparison4DSlowCommon", align 8
  %11 = bitcast %"struct.tflite::reference_ops::BroadcastComparison4DSlowCommon"* %10 to i8*
  call void @llvm.lifetime.start.p0i8(i64 96, i8* nonnull %11) #8
  call void @llvm.memset.p0i8.i64(i8* nonnull align 8 %11, i8 -86, i64 96, i1 false)
  %12 = getelementptr inbounds %"class.tflite::RuntimeShape", %"class.tflite::RuntimeShape"* %5, i64 0, i32 0
  %13 = bitcast %"struct.tflite::NdArrayDesc"* %8 to i8*
  call void @llvm.lifetime.start.p0i8(i64 32, i8* nonnull %13) #8, !noalias !986
  %14 = bitcast %"struct.tflite::NdArrayDesc"* %9 to i8*
  call void @llvm.memset.p0i8.i64(i8* nonnull align 4 %13, i8 -86, i64 32, i1 false) #8, !noalias !986
  call void @llvm.lifetime.start.p0i8(i64 32, i8* nonnull %14) #8, !noalias !986
  call void @llvm.memset.p0i8.i64(i8* nonnull align 4 %14, i8 -86, i64 32, i1 false) #8, !noalias !986
  call void @_ZN6tflite35NdArrayDescsForElementwiseBroadcastILi4EEEvRKNS_12RuntimeShapeES3_PNS_11NdArrayDescIXT_EEES6_(%"class.tflite::RuntimeShape"* dereferenceable(32) %1, %"class.tflite::RuntimeShape"* dereferenceable(32) %3, %"struct.tflite::NdArrayDesc"* nonnull %8, %"struct.tflite::NdArrayDesc"* nonnull %9) #8, !noalias !986
  %15 = getelementptr inbounds %"struct.tflite::reference_ops::BroadcastComparison4DSlowCommon", %"struct.tflite::reference_ops::BroadcastComparison4DSlowCommon"* %10, i64 0, i32 0, i32 0
  store i32 0, i32* %15, align 8, !alias.scope !989
  %16 = load i32, i32* %12, align 8, !noalias !989
  %17 = icmp sgt i32 %16, 4
  br i1 %17, label %18, label %19

18:                                               ; preds = %7
  call void @abort() #10, !noalias !989
  unreachable

19:                                               ; preds = %7
  store i32 4, i32* %15, align 8, !alias.scope !989
  %20 = sub i32 4, %16
  %21 = icmp sgt i32 %20, 0
  %22 = getelementptr inbounds %"struct.tflite::reference_ops::BroadcastComparison4DSlowCommon", %"struct.tflite::reference_ops::BroadcastComparison4DSlowCommon"* %10, i64 0, i32 0, i32 1
  br i1 %21, label %23, label %103

23:                                               ; preds = %19
  %24 = bitcast %union.anon* %22 to [5 x i32]*
  %25 = zext i32 %20 to i64
  %26 = icmp ult i32 %20, 8
  br i1 %26, label %96, label %27

27:                                               ; preds = %23
  %28 = and i64 %25, 4294967288
  %29 = add nsw i64 %28, -8
  %30 = lshr exact i64 %29, 3
  %31 = add nuw nsw i64 %30, 1
  %32 = and i64 %31, 7
  %33 = icmp ult i64 %29, 56
  br i1 %33, label %81, label %34

34:                                               ; preds = %27
  %35 = sub nsw i64 %31, %32
  br label %36

36:                                               ; preds = %36, %34
  %37 = phi i64 [ 0, %34 ], [ %78, %36 ]
  %38 = phi i64 [ %35, %34 ], [ %79, %36 ]
  %39 = getelementptr inbounds [5 x i32], [5 x i32]* %24, i64 0, i64 %37
  %40 = bitcast i32* %39 to <4 x i32>*
  store <4 x i32> <i32 1, i32 1, i32 1, i32 1>, <4 x i32>* %40, align 8, !alias.scope !989
  %41 = getelementptr inbounds i32, i32* %39, i64 4
  %42 = bitcast i32* %41 to <4 x i32>*
  store <4 x i32> <i32 1, i32 1, i32 1, i32 1>, <4 x i32>* %42, align 8, !alias.scope !989
  %43 = or i64 %37, 8
  %44 = getelementptr inbounds [5 x i32], [5 x i32]* %24, i64 0, i64 %43
  %45 = bitcast i32* %44 to <4 x i32>*
  store <4 x i32> <i32 1, i32 1, i32 1, i32 1>, <4 x i32>* %45, align 8, !alias.scope !989
  %46 = getelementptr inbounds i32, i32* %44, i64 4
  %47 = bitcast i32* %46 to <4 x i32>*
  store <4 x i32> <i32 1, i32 1, i32 1, i32 1>, <4 x i32>* %47, align 8, !alias.scope !989
  %48 = or i64 %37, 16
  %49 = getelementptr inbounds [5 x i32], [5 x i32]* %24, i64 0, i64 %48
  %50 = bitcast i32* %49 to <4 x i32>*
  store <4 x i32> <i32 1, i32 1, i32 1, i32 1>, <4 x i32>* %50, align 8, !alias.scope !989
  %51 = getelementptr inbounds i32, i32* %49, i64 4
  %52 = bitcast i32* %51 to <4 x i32>*
  store <4 x i32> <i32 1, i32 1, i32 1, i32 1>, <4 x i32>* %52, align 8, !alias.scope !989
  %53 = or i64 %37, 24
  %54 = getelementptr inbounds [5 x i32], [5 x i32]* %24, i64 0, i64 %53
  %55 = bitcast i32* %54 to <4 x i32>*
  store <4 x i32> <i32 1, i32 1, i32 1, i32 1>, <4 x i32>* %55, align 8, !alias.scope !989
  %56 = getelementptr inbounds i32, i32* %54, i64 4
  %57 = bitcast i32* %56 to <4 x i32>*
  store <4 x i32> <i32 1, i32 1, i32 1, i32 1>, <4 x i32>* %57, align 8, !alias.scope !989
  %58 = or i64 %37, 32
  %59 = getelementptr inbounds [5 x i32], [5 x i32]* %24, i64 0, i64 %58
  %60 = bitcast i32* %59 to <4 x i32>*
  store <4 x i32> <i32 1, i32 1, i32 1, i32 1>, <4 x i32>* %60, align 8, !alias.scope !989
  %61 = getelementptr inbounds i32, i32* %59, i64 4
  %62 = bitcast i32* %61 to <4 x i32>*
  store <4 x i32> <i32 1, i32 1, i32 1, i32 1>, <4 x i32>* %62, align 8, !alias.scope !989
  %63 = or i64 %37, 40
  %64 = getelementptr inbounds [5 x i32], [5 x i32]* %24, i64 0, i64 %63
  %65 = bitcast i32* %64 to <4 x i32>*
  store <4 x i32> <i32 1, i32 1, i32 1, i32 1>, <4 x i32>* %65, align 8, !alias.scope !989
  %66 = getelementptr inbounds i32, i32* %64, i64 4
  %67 = bitcast i32* %66 to <4 x i32>*
  store <4 x i32> <i32 1, i32 1, i32 1, i32 1>, <4 x i32>* %67, align 8, !alias.scope !989
  %68 = or i64 %37, 48
  %69 = getelementptr inbounds [5 x i32], [5 x i32]* %24, i64 0, i64 %68
  %70 = bitcast i32* %69 to <4 x i32>*
  store <4 x i32> <i32 1, i32 1, i32 1, i32 1>, <4 x i32>* %70, align 8, !alias.scope !989
  %71 = getelementptr inbounds i32, i32* %69, i64 4
  %72 = bitcast i32* %71 to <4 x i32>*
  store <4 x i32> <i32 1, i32 1, i32 1, i32 1>, <4 x i32>* %72, align 8, !alias.scope !989
  %73 = or i64 %37, 56
  %74 = getelementptr inbounds [5 x i32], [5 x i32]* %24, i64 0, i64 %73
  %75 = bitcast i32* %74 to <4 x i32>*
  store <4 x i32> <i32 1, i32 1, i32 1, i32 1>, <4 x i32>* %75, align 8, !alias.scope !989
  %76 = getelementptr inbounds i32, i32* %74, i64 4
  %77 = bitcast i32* %76 to <4 x i32>*
  store <4 x i32> <i32 1, i32 1, i32 1, i32 1>, <4 x i32>* %77, align 8, !alias.scope !989
  %78 = add i64 %37, 64
  %79 = add i64 %38, -8
  %80 = icmp eq i64 %79, 0
  br i1 %80, label %81, label %36, !llvm.loop !992

81:                                               ; preds = %36, %27
  %82 = phi i64 [ 0, %27 ], [ %78, %36 ]
  %83 = icmp eq i64 %32, 0
  br i1 %83, label %94, label %84

84:                                               ; preds = %81, %84
  %85 = phi i64 [ %91, %84 ], [ %82, %81 ]
  %86 = phi i64 [ %92, %84 ], [ %32, %81 ]
  %87 = getelementptr inbounds [5 x i32], [5 x i32]* %24, i64 0, i64 %85
  %88 = bitcast i32* %87 to <4 x i32>*
  store <4 x i32> <i32 1, i32 1, i32 1, i32 1>, <4 x i32>* %88, align 8, !alias.scope !989
  %89 = getelementptr inbounds i32, i32* %87, i64 4
  %90 = bitcast i32* %89 to <4 x i32>*
  store <4 x i32> <i32 1, i32 1, i32 1, i32 1>, <4 x i32>* %90, align 8, !alias.scope !989
  %91 = add i64 %85, 8
  %92 = add i64 %86, -1
  %93 = icmp eq i64 %92, 0
  br i1 %93, label %94, label %84, !llvm.loop !993

94:                                               ; preds = %84, %81
  %95 = icmp eq i64 %28, %25
  br i1 %95, label %103, label %96

96:                                               ; preds = %94, %23
  %97 = phi i64 [ 0, %23 ], [ %28, %94 ]
  br label %98

98:                                               ; preds = %96, %98
  %99 = phi i64 [ %101, %98 ], [ %97, %96 ]
  %100 = getelementptr inbounds [5 x i32], [5 x i32]* %24, i64 0, i64 %99
  store i32 1, i32* %100, align 4, !alias.scope !989
  %101 = add nuw nsw i64 %99, 1
  %102 = icmp eq i64 %101, %25
  br i1 %102, label %103, label %98, !llvm.loop !994

103:                                              ; preds = %98, %94, %19
  %104 = bitcast %union.anon* %22 to i32*
  %105 = sext i32 %20 to i64
  %106 = getelementptr inbounds i32, i32* %104, i64 %105
  %107 = bitcast i32* %106 to i8*
  %108 = icmp sgt i32 %16, 5
  %109 = getelementptr inbounds %"class.tflite::RuntimeShape", %"class.tflite::RuntimeShape"* %5, i64 0, i32 1
  %110 = getelementptr inbounds %union.anon, %union.anon* %109, i64 0, i32 0
  %111 = load i32*, i32** %110, align 8, !noalias !989
  %112 = bitcast %union.anon* %109 to i32*
  %113 = select i1 %108, i32* %111, i32* %112
  %114 = bitcast i32* %113 to i8*
  %115 = sext i32 %16 to i64
  %116 = shl nsw i64 %115, 2
  call void @llvm.memcpy.p0i8.p0i8.i64(i8* align 4 %107, i8* align 4 %114, i64 %116, i1 false) #8
  %117 = getelementptr inbounds %"struct.tflite::reference_ops::BroadcastComparison4DSlowCommon", %"struct.tflite::reference_ops::BroadcastComparison4DSlowCommon"* %10, i64 0, i32 1
  %118 = bitcast %"struct.tflite::NdArrayDesc"* %117 to i8*
  call void @llvm.memcpy.p0i8.p0i8.i64(i8* align 8 %118, i8* nonnull align 4 %13, i64 32, i1 false) #8
  %119 = getelementptr inbounds %"struct.tflite::reference_ops::BroadcastComparison4DSlowCommon", %"struct.tflite::reference_ops::BroadcastComparison4DSlowCommon"* %10, i64 0, i32 2
  %120 = bitcast %"struct.tflite::NdArrayDesc"* %119 to i8*
  call void @llvm.memcpy.p0i8.p0i8.i64(i8* align 8 %120, i8* nonnull align 4 %14, i64 32, i1 false) #8
  call void @llvm.lifetime.end.p0i8(i64 32, i8* nonnull %14) #8, !noalias !986
  call void @llvm.lifetime.end.p0i8(i64 32, i8* nonnull %13) #8, !noalias !986
  %121 = load i32, i32* %15, align 8
  %122 = icmp sgt i32 %121, 5
  %123 = getelementptr inbounds %union.anon, %union.anon* %22, i64 0, i32 0
  %124 = load i32*, i32** %123, align 8
  %125 = select i1 %122, i32* %124, i32* %104
  %126 = load i32, i32* %125, align 4
  %127 = icmp sgt i32 %126, 0
  br i1 %127, label %128, label %175

128:                                              ; preds = %103
  %129 = bitcast %union.anon* %22 to [5 x i32]*
  %130 = getelementptr inbounds [5 x i32], [5 x i32]* %129, i64 0, i64 1
  %131 = getelementptr inbounds %"struct.tflite::reference_ops::BroadcastComparison4DSlowCommon", %"struct.tflite::reference_ops::BroadcastComparison4DSlowCommon"* %10, i64 0, i32 0, i32 1, i32 1
  %132 = bitcast [16 x i8]* %131 to i32*
  %133 = getelementptr inbounds %"struct.tflite::reference_ops::BroadcastComparison4DSlowCommon", %"struct.tflite::reference_ops::BroadcastComparison4DSlowCommon"* %10, i64 0, i32 0, i32 1, i32 1, i64 4
  %134 = bitcast i8* %133 to i32*
  %135 = getelementptr inbounds %"struct.tflite::reference_ops::BroadcastComparison4DSlowCommon", %"struct.tflite::reference_ops::BroadcastComparison4DSlowCommon"* %10, i64 0, i32 1, i32 1, i64 0
  %136 = load i32, i32* %135, align 8
  %137 = getelementptr inbounds %"struct.tflite::reference_ops::BroadcastComparison4DSlowCommon", %"struct.tflite::reference_ops::BroadcastComparison4DSlowCommon"* %10, i64 0, i32 1, i32 1, i64 1
  %138 = load i32, i32* %137, align 4
  %139 = getelementptr inbounds %"struct.tflite::reference_ops::BroadcastComparison4DSlowCommon", %"struct.tflite::reference_ops::BroadcastComparison4DSlowCommon"* %10, i64 0, i32 1, i32 1, i64 2
  %140 = load i32, i32* %139, align 8
  %141 = getelementptr inbounds %"struct.tflite::reference_ops::BroadcastComparison4DSlowCommon", %"struct.tflite::reference_ops::BroadcastComparison4DSlowCommon"* %10, i64 0, i32 1, i32 1, i64 3
  %142 = load i32, i32* %141, align 4
  %143 = getelementptr inbounds %"struct.tflite::reference_ops::BroadcastComparison4DSlowCommon", %"struct.tflite::reference_ops::BroadcastComparison4DSlowCommon"* %10, i64 0, i32 2, i32 1, i64 0
  %144 = load i32, i32* %143, align 8
  %145 = getelementptr inbounds %"struct.tflite::reference_ops::BroadcastComparison4DSlowCommon", %"struct.tflite::reference_ops::BroadcastComparison4DSlowCommon"* %10, i64 0, i32 2, i32 1, i64 1
  %146 = load i32, i32* %145, align 4
  %147 = getelementptr inbounds %"struct.tflite::reference_ops::BroadcastComparison4DSlowCommon", %"struct.tflite::reference_ops::BroadcastComparison4DSlowCommon"* %10, i64 0, i32 2, i32 1, i64 2
  %148 = load i32, i32* %147, align 8
  %149 = getelementptr inbounds %"struct.tflite::reference_ops::BroadcastComparison4DSlowCommon", %"struct.tflite::reference_ops::BroadcastComparison4DSlowCommon"* %10, i64 0, i32 2, i32 1, i64 3
  %150 = load i32, i32* %149, align 4
  %151 = getelementptr inbounds i32, i32* %104, i64 1
  %152 = sext i32 %150 to i64
  %153 = sext i32 %142 to i64
  %154 = sext i32 %148 to i64
  %155 = sext i32 %140 to i64
  %156 = sext i32 %146 to i64
  %157 = sext i32 %138 to i64
  %158 = sext i32 %144 to i64
  %159 = sext i32 %136 to i64
  %160 = getelementptr inbounds i32, i32* %124, i64 1
  %161 = select i1 %122, i32* %160, i32* %130
  %162 = getelementptr inbounds i32, i32* %124, i64 2
  %163 = select i1 %122, i32* %162, i32* %132
  %164 = getelementptr inbounds i32, i32* %124, i64 3
  %165 = select i1 %122, i32* %164, i32* %134
  br label %166

166:                                              ; preds = %128, %199
  %167 = phi i32 [ %126, %128 ], [ %200, %199 ]
  %168 = phi i64 [ 0, %128 ], [ %201, %199 ]
  %169 = load i32, i32* %161, align 4
  %170 = icmp sgt i32 %169, 0
  br i1 %170, label %171, label %199

171:                                              ; preds = %166
  %172 = mul nsw i64 %168, %159
  %173 = mul nsw i64 %168, %158
  %174 = trunc i64 %168 to i32
  br label %182

175:                                              ; preds = %199, %103
  %176 = xor i1 %122, true
  %177 = icmp eq i32* %124, null
  %178 = or i1 %177, %176
  br i1 %178, label %181, label %179

179:                                              ; preds = %175
  %180 = bitcast i32* %124 to i8*
  call void @_ZdaPv(i8* %180) #9
  br label %181

181:                                              ; preds = %175, %179
  call void @llvm.lifetime.end.p0i8(i64 96, i8* nonnull %11) #8
  ret void

182:                                              ; preds = %171, %222
  %183 = phi i32 [ %169, %171 ], [ %223, %222 ]
  %184 = phi i64 [ 0, %171 ], [ %224, %222 ]
  %185 = load i32, i32* %163, align 4
  %186 = icmp sgt i32 %185, 0
  br i1 %186, label %187, label %222

187:                                              ; preds = %182
  %188 = mul nsw i64 %184, %157
  %189 = add nsw i64 %188, %172
  %190 = mul nsw i64 %184, %156
  %191 = add nsw i64 %190, %173
  %192 = load i32, i32* %151, align 4
  %193 = mul nsw i32 %192, %174
  %194 = trunc i64 %184 to i32
  %195 = add nsw i32 %193, %194
  %196 = load i32, i32* %165, align 4
  br label %204

197:                                              ; preds = %222
  %198 = load i32, i32* %125, align 4
  br label %199

199:                                              ; preds = %197, %166
  %200 = phi i32 [ %198, %197 ], [ %167, %166 ]
  %201 = add nuw nsw i64 %168, 1
  %202 = sext i32 %200 to i64
  %203 = icmp slt i64 %201, %202
  br i1 %203, label %166, label %175

204:                                              ; preds = %187, %229
  %205 = phi i32 [ %185, %187 ], [ %230, %229 ]
  %206 = phi i32 [ %196, %187 ], [ %231, %229 ]
  %207 = phi i64 [ 0, %187 ], [ %232, %229 ]
  %208 = icmp sgt i32 %206, 0
  br i1 %208, label %209, label %229

209:                                              ; preds = %204
  %210 = mul nsw i64 %207, %155
  %211 = add nsw i64 %189, %210
  %212 = mul nsw i64 %207, %154
  %213 = add nsw i64 %191, %212
  %214 = load i32, i32* %132, align 8
  %215 = mul nsw i32 %195, %214
  %216 = trunc i64 %207 to i32
  %217 = add nsw i32 %215, %216
  %218 = load i32, i32* %134, align 4
  %219 = mul nsw i32 %217, %218
  br label %235

220:                                              ; preds = %229
  %221 = load i32, i32* %161, align 4
  br label %222

222:                                              ; preds = %220, %182
  %223 = phi i32 [ %221, %220 ], [ %183, %182 ]
  %224 = add nuw nsw i64 %184, 1
  %225 = sext i32 %223 to i64
  %226 = icmp slt i64 %224, %225
  br i1 %226, label %182, label %197

227:                                              ; preds = %235
  %228 = load i32, i32* %163, align 4
  br label %229

229:                                              ; preds = %227, %204
  %230 = phi i32 [ %228, %227 ], [ %205, %204 ]
  %231 = phi i32 [ %252, %227 ], [ %206, %204 ]
  %232 = add nuw nsw i64 %207, 1
  %233 = sext i32 %230 to i64
  %234 = icmp slt i64 %232, %233
  br i1 %234, label %204, label %220

235:                                              ; preds = %209, %235
  %236 = phi i64 [ 0, %209 ], [ %251, %235 ]
  %237 = mul nsw i64 %236, %153
  %238 = add nsw i64 %211, %237
  %239 = getelementptr inbounds i64, i64* %2, i64 %238
  %240 = load i64, i64* %239, align 8
  %241 = mul nsw i64 %236, %152
  %242 = add nsw i64 %213, %241
  %243 = getelementptr inbounds i64, i64* %4, i64 %242
  %244 = load i64, i64* %243, align 8
  %245 = icmp sgt i64 %240, %244
  %246 = trunc i64 %236 to i32
  %247 = add nsw i32 %219, %246
  %248 = sext i32 %247 to i64
  %249 = getelementptr inbounds i8, i8* %6, i64 %248
  %250 = zext i1 %245 to i8
  store i8 %250, i8* %249, align 1
  %251 = add nuw nsw i64 %236, 1
  %252 = load i32, i32* %165, align 4
  %253 = sext i32 %252 to i64
  %254 = icmp slt i64 %251, %253
  br i1 %254, label %235, label %227
}

; Function Attrs: inlinehint nounwind ssp uwtable
define linkonce_odr hidden void @_ZN6tflite13reference_ops36BroadcastComparison4DSlowWithScalingIhXadL_ZNS0_9GreaterFnIiEEbT_S3_EEEEvRKNS_16ComparisonParamsERKNS_12RuntimeShapeEPKS3_S9_SB_S9_Pb(%"struct.tflite::ComparisonParams"* dereferenceable(32), %"class.tflite::RuntimeShape"* dereferenceable(32), i8*, %"class.tflite::RuntimeShape"* dereferenceable(32), i8*, %"class.tflite::RuntimeShape"* dereferenceable(32), i8*) local_unnamed_addr #4 comdat {
  %8 = alloca %"struct.tflite::NdArrayDesc", align 4
  %9 = alloca %"struct.tflite::NdArrayDesc", align 4
  %10 = alloca %"struct.tflite::reference_ops::BroadcastComparison4DSlowCommon", align 8
  %11 = bitcast %"struct.tflite::reference_ops::BroadcastComparison4DSlowCommon"* %10 to i8*
  call void @llvm.lifetime.start.p0i8(i64 96, i8* nonnull %11) #8
  call void @llvm.memset.p0i8.i64(i8* nonnull align 8 %11, i8 -86, i64 96, i1 false)
  %12 = getelementptr inbounds %"class.tflite::RuntimeShape", %"class.tflite::RuntimeShape"* %5, i64 0, i32 0
  %13 = bitcast %"struct.tflite::NdArrayDesc"* %8 to i8*
  call void @llvm.lifetime.start.p0i8(i64 32, i8* nonnull %13) #8, !noalias !995
  %14 = bitcast %"struct.tflite::NdArrayDesc"* %9 to i8*
  call void @llvm.memset.p0i8.i64(i8* nonnull align 4 %13, i8 -86, i64 32, i1 false) #8, !noalias !995
  call void @llvm.lifetime.start.p0i8(i64 32, i8* nonnull %14) #8, !noalias !995
  call void @llvm.memset.p0i8.i64(i8* nonnull align 4 %14, i8 -86, i64 32, i1 false) #8, !noalias !995
  call void @_ZN6tflite35NdArrayDescsForElementwiseBroadcastILi4EEEvRKNS_12RuntimeShapeES3_PNS_11NdArrayDescIXT_EEES6_(%"class.tflite::RuntimeShape"* dereferenceable(32) %1, %"class.tflite::RuntimeShape"* dereferenceable(32) %3, %"struct.tflite::NdArrayDesc"* nonnull %8, %"struct.tflite::NdArrayDesc"* nonnull %9) #8, !noalias !995
  %15 = getelementptr inbounds %"struct.tflite::reference_ops::BroadcastComparison4DSlowCommon", %"struct.tflite::reference_ops::BroadcastComparison4DSlowCommon"* %10, i64 0, i32 0, i32 0
  store i32 0, i32* %15, align 8, !alias.scope !998
  %16 = load i32, i32* %12, align 8, !noalias !998
  %17 = icmp sgt i32 %16, 4
  br i1 %17, label %18, label %19

18:                                               ; preds = %7
  call void @abort() #10, !noalias !998
  unreachable

19:                                               ; preds = %7
  store i32 4, i32* %15, align 8, !alias.scope !998
  %20 = sub i32 4, %16
  %21 = icmp sgt i32 %20, 0
  %22 = getelementptr inbounds %"struct.tflite::reference_ops::BroadcastComparison4DSlowCommon", %"struct.tflite::reference_ops::BroadcastComparison4DSlowCommon"* %10, i64 0, i32 0, i32 1
  br i1 %21, label %23, label %103

23:                                               ; preds = %19
  %24 = bitcast %union.anon* %22 to [5 x i32]*
  %25 = zext i32 %20 to i64
  %26 = icmp ult i32 %20, 8
  br i1 %26, label %96, label %27

27:                                               ; preds = %23
  %28 = and i64 %25, 4294967288
  %29 = add nsw i64 %28, -8
  %30 = lshr exact i64 %29, 3
  %31 = add nuw nsw i64 %30, 1
  %32 = and i64 %31, 7
  %33 = icmp ult i64 %29, 56
  br i1 %33, label %81, label %34

34:                                               ; preds = %27
  %35 = sub nsw i64 %31, %32
  br label %36

36:                                               ; preds = %36, %34
  %37 = phi i64 [ 0, %34 ], [ %78, %36 ]
  %38 = phi i64 [ %35, %34 ], [ %79, %36 ]
  %39 = getelementptr inbounds [5 x i32], [5 x i32]* %24, i64 0, i64 %37
  %40 = bitcast i32* %39 to <4 x i32>*
  store <4 x i32> <i32 1, i32 1, i32 1, i32 1>, <4 x i32>* %40, align 8, !alias.scope !998
  %41 = getelementptr inbounds i32, i32* %39, i64 4
  %42 = bitcast i32* %41 to <4 x i32>*
  store <4 x i32> <i32 1, i32 1, i32 1, i32 1>, <4 x i32>* %42, align 8, !alias.scope !998
  %43 = or i64 %37, 8
  %44 = getelementptr inbounds [5 x i32], [5 x i32]* %24, i64 0, i64 %43
  %45 = bitcast i32* %44 to <4 x i32>*
  store <4 x i32> <i32 1, i32 1, i32 1, i32 1>, <4 x i32>* %45, align 8, !alias.scope !998
  %46 = getelementptr inbounds i32, i32* %44, i64 4
  %47 = bitcast i32* %46 to <4 x i32>*
  store <4 x i32> <i32 1, i32 1, i32 1, i32 1>, <4 x i32>* %47, align 8, !alias.scope !998
  %48 = or i64 %37, 16
  %49 = getelementptr inbounds [5 x i32], [5 x i32]* %24, i64 0, i64 %48
  %50 = bitcast i32* %49 to <4 x i32>*
  store <4 x i32> <i32 1, i32 1, i32 1, i32 1>, <4 x i32>* %50, align 8, !alias.scope !998
  %51 = getelementptr inbounds i32, i32* %49, i64 4
  %52 = bitcast i32* %51 to <4 x i32>*
  store <4 x i32> <i32 1, i32 1, i32 1, i32 1>, <4 x i32>* %52, align 8, !alias.scope !998
  %53 = or i64 %37, 24
  %54 = getelementptr inbounds [5 x i32], [5 x i32]* %24, i64 0, i64 %53
  %55 = bitcast i32* %54 to <4 x i32>*
  store <4 x i32> <i32 1, i32 1, i32 1, i32 1>, <4 x i32>* %55, align 8, !alias.scope !998
  %56 = getelementptr inbounds i32, i32* %54, i64 4
  %57 = bitcast i32* %56 to <4 x i32>*
  store <4 x i32> <i32 1, i32 1, i32 1, i32 1>, <4 x i32>* %57, align 8, !alias.scope !998
  %58 = or i64 %37, 32
  %59 = getelementptr inbounds [5 x i32], [5 x i32]* %24, i64 0, i64 %58
  %60 = bitcast i32* %59 to <4 x i32>*
  store <4 x i32> <i32 1, i32 1, i32 1, i32 1>, <4 x i32>* %60, align 8, !alias.scope !998
  %61 = getelementptr inbounds i32, i32* %59, i64 4
  %62 = bitcast i32* %61 to <4 x i32>*
  store <4 x i32> <i32 1, i32 1, i32 1, i32 1>, <4 x i32>* %62, align 8, !alias.scope !998
  %63 = or i64 %37, 40
  %64 = getelementptr inbounds [5 x i32], [5 x i32]* %24, i64 0, i64 %63
  %65 = bitcast i32* %64 to <4 x i32>*
  store <4 x i32> <i32 1, i32 1, i32 1, i32 1>, <4 x i32>* %65, align 8, !alias.scope !998
  %66 = getelementptr inbounds i32, i32* %64, i64 4
  %67 = bitcast i32* %66 to <4 x i32>*
  store <4 x i32> <i32 1, i32 1, i32 1, i32 1>, <4 x i32>* %67, align 8, !alias.scope !998
  %68 = or i64 %37, 48
  %69 = getelementptr inbounds [5 x i32], [5 x i32]* %24, i64 0, i64 %68
  %70 = bitcast i32* %69 to <4 x i32>*
  store <4 x i32> <i32 1, i32 1, i32 1, i32 1>, <4 x i32>* %70, align 8, !alias.scope !998
  %71 = getelementptr inbounds i32, i32* %69, i64 4
  %72 = bitcast i32* %71 to <4 x i32>*
  store <4 x i32> <i32 1, i32 1, i32 1, i32 1>, <4 x i32>* %72, align 8, !alias.scope !998
  %73 = or i64 %37, 56
  %74 = getelementptr inbounds [5 x i32], [5 x i32]* %24, i64 0, i64 %73
  %75 = bitcast i32* %74 to <4 x i32>*
  store <4 x i32> <i32 1, i32 1, i32 1, i32 1>, <4 x i32>* %75, align 8, !alias.scope !998
  %76 = getelementptr inbounds i32, i32* %74, i64 4
  %77 = bitcast i32* %76 to <4 x i32>*
  store <4 x i32> <i32 1, i32 1, i32 1, i32 1>, <4 x i32>* %77, align 8, !alias.scope !998
  %78 = add i64 %37, 64
  %79 = add i64 %38, -8
  %80 = icmp eq i64 %79, 0
  br i1 %80, label %81, label %36, !llvm.loop !1001

81:                                               ; preds = %36, %27
  %82 = phi i64 [ 0, %27 ], [ %78, %36 ]
  %83 = icmp eq i64 %32, 0
  br i1 %83, label %94, label %84

84:                                               ; preds = %81, %84
  %85 = phi i64 [ %91, %84 ], [ %82, %81 ]
  %86 = phi i64 [ %92, %84 ], [ %32, %81 ]
  %87 = getelementptr inbounds [5 x i32], [5 x i32]* %24, i64 0, i64 %85
  %88 = bitcast i32* %87 to <4 x i32>*
  store <4 x i32> <i32 1, i32 1, i32 1, i32 1>, <4 x i32>* %88, align 8, !alias.scope !998
  %89 = getelementptr inbounds i32, i32* %87, i64 4
  %90 = bitcast i32* %89 to <4 x i32>*
  store <4 x i32> <i32 1, i32 1, i32 1, i32 1>, <4 x i32>* %90, align 8, !alias.scope !998
  %91 = add i64 %85, 8
  %92 = add i64 %86, -1
  %93 = icmp eq i64 %92, 0
  br i1 %93, label %94, label %84, !llvm.loop !1002

94:                                               ; preds = %84, %81
  %95 = icmp eq i64 %28, %25
  br i1 %95, label %103, label %96

96:                                               ; preds = %94, %23
  %97 = phi i64 [ 0, %23 ], [ %28, %94 ]
  br label %98

98:                                               ; preds = %96, %98
  %99 = phi i64 [ %101, %98 ], [ %97, %96 ]
  %100 = getelementptr inbounds [5 x i32], [5 x i32]* %24, i64 0, i64 %99
  store i32 1, i32* %100, align 4, !alias.scope !998
  %101 = add nuw nsw i64 %99, 1
  %102 = icmp eq i64 %101, %25
  br i1 %102, label %103, label %98, !llvm.loop !1003

103:                                              ; preds = %98, %94, %19
  %104 = bitcast %union.anon* %22 to i32*
  %105 = sext i32 %20 to i64
  %106 = getelementptr inbounds i32, i32* %104, i64 %105
  %107 = bitcast i32* %106 to i8*
  %108 = icmp sgt i32 %16, 5
  %109 = getelementptr inbounds %"class.tflite::RuntimeShape", %"class.tflite::RuntimeShape"* %5, i64 0, i32 1
  %110 = getelementptr inbounds %union.anon, %union.anon* %109, i64 0, i32 0
  %111 = load i32*, i32** %110, align 8, !noalias !998
  %112 = bitcast %union.anon* %109 to i32*
  %113 = select i1 %108, i32* %111, i32* %112
  %114 = bitcast i32* %113 to i8*
  %115 = sext i32 %16 to i64
  %116 = shl nsw i64 %115, 2
  call void @llvm.memcpy.p0i8.p0i8.i64(i8* align 4 %107, i8* align 4 %114, i64 %116, i1 false) #8
  %117 = getelementptr inbounds %"struct.tflite::reference_ops::BroadcastComparison4DSlowCommon", %"struct.tflite::reference_ops::BroadcastComparison4DSlowCommon"* %10, i64 0, i32 1
  %118 = bitcast %"struct.tflite::NdArrayDesc"* %117 to i8*
  call void @llvm.memcpy.p0i8.p0i8.i64(i8* align 8 %118, i8* nonnull align 4 %13, i64 32, i1 false) #8
  %119 = getelementptr inbounds %"struct.tflite::reference_ops::BroadcastComparison4DSlowCommon", %"struct.tflite::reference_ops::BroadcastComparison4DSlowCommon"* %10, i64 0, i32 2
  %120 = bitcast %"struct.tflite::NdArrayDesc"* %119 to i8*
  call void @llvm.memcpy.p0i8.p0i8.i64(i8* align 8 %120, i8* nonnull align 4 %14, i64 32, i1 false) #8
  call void @llvm.lifetime.end.p0i8(i64 32, i8* nonnull %14) #8, !noalias !995
  call void @llvm.lifetime.end.p0i8(i64 32, i8* nonnull %13) #8, !noalias !995
  %121 = getelementptr inbounds %"struct.tflite::ComparisonParams", %"struct.tflite::ComparisonParams"* %0, i64 0, i32 0
  %122 = load i32, i32* %121, align 4
  %123 = getelementptr inbounds %"struct.tflite::ComparisonParams", %"struct.tflite::ComparisonParams"* %0, i64 0, i32 1
  %124 = load i32, i32* %123, align 4
  %125 = getelementptr inbounds %"struct.tflite::ComparisonParams", %"struct.tflite::ComparisonParams"* %0, i64 0, i32 2
  %126 = load i32, i32* %125, align 4
  %127 = getelementptr inbounds %"struct.tflite::ComparisonParams", %"struct.tflite::ComparisonParams"* %0, i64 0, i32 4
  %128 = load i32, i32* %127, align 4
  %129 = getelementptr inbounds %"struct.tflite::ComparisonParams", %"struct.tflite::ComparisonParams"* %0, i64 0, i32 5
  %130 = load i32, i32* %129, align 4
  %131 = load i32, i32* %15, align 8
  %132 = icmp sgt i32 %131, 5
  %133 = getelementptr inbounds %union.anon, %union.anon* %22, i64 0, i32 0
  %134 = load i32*, i32** %133, align 8
  %135 = select i1 %132, i32* %134, i32* %104
  %136 = load i32, i32* %135, align 4
  %137 = icmp sgt i32 %136, 0
  br i1 %137, label %138, label %205

138:                                              ; preds = %103
  %139 = getelementptr inbounds %"struct.tflite::ComparisonParams", %"struct.tflite::ComparisonParams"* %0, i64 0, i32 6
  %140 = load i32, i32* %139, align 4
  %141 = getelementptr inbounds %"struct.tflite::ComparisonParams", %"struct.tflite::ComparisonParams"* %0, i64 0, i32 3
  %142 = load i32, i32* %141, align 4
  %143 = bitcast %union.anon* %22 to [5 x i32]*
  %144 = getelementptr inbounds [5 x i32], [5 x i32]* %143, i64 0, i64 1
  %145 = getelementptr inbounds %"struct.tflite::reference_ops::BroadcastComparison4DSlowCommon", %"struct.tflite::reference_ops::BroadcastComparison4DSlowCommon"* %10, i64 0, i32 0, i32 1, i32 1
  %146 = bitcast [16 x i8]* %145 to i32*
  %147 = getelementptr inbounds %"struct.tflite::reference_ops::BroadcastComparison4DSlowCommon", %"struct.tflite::reference_ops::BroadcastComparison4DSlowCommon"* %10, i64 0, i32 0, i32 1, i32 1, i64 4
  %148 = bitcast i8* %147 to i32*
  %149 = getelementptr inbounds %"struct.tflite::reference_ops::BroadcastComparison4DSlowCommon", %"struct.tflite::reference_ops::BroadcastComparison4DSlowCommon"* %10, i64 0, i32 1, i32 1, i64 0
  %150 = load i32, i32* %149, align 8
  %151 = getelementptr inbounds %"struct.tflite::reference_ops::BroadcastComparison4DSlowCommon", %"struct.tflite::reference_ops::BroadcastComparison4DSlowCommon"* %10, i64 0, i32 1, i32 1, i64 1
  %152 = load i32, i32* %151, align 4
  %153 = getelementptr inbounds %"struct.tflite::reference_ops::BroadcastComparison4DSlowCommon", %"struct.tflite::reference_ops::BroadcastComparison4DSlowCommon"* %10, i64 0, i32 1, i32 1, i64 2
  %154 = load i32, i32* %153, align 8
  %155 = getelementptr inbounds %"struct.tflite::reference_ops::BroadcastComparison4DSlowCommon", %"struct.tflite::reference_ops::BroadcastComparison4DSlowCommon"* %10, i64 0, i32 1, i32 1, i64 3
  %156 = load i32, i32* %155, align 4
  %157 = getelementptr inbounds %"struct.tflite::reference_ops::BroadcastComparison4DSlowCommon", %"struct.tflite::reference_ops::BroadcastComparison4DSlowCommon"* %10, i64 0, i32 2, i32 1, i64 0
  %158 = load i32, i32* %157, align 8
  %159 = getelementptr inbounds %"struct.tflite::reference_ops::BroadcastComparison4DSlowCommon", %"struct.tflite::reference_ops::BroadcastComparison4DSlowCommon"* %10, i64 0, i32 2, i32 1, i64 1
  %160 = load i32, i32* %159, align 4
  %161 = getelementptr inbounds %"struct.tflite::reference_ops::BroadcastComparison4DSlowCommon", %"struct.tflite::reference_ops::BroadcastComparison4DSlowCommon"* %10, i64 0, i32 2, i32 1, i64 2
  %162 = load i32, i32* %161, align 8
  %163 = getelementptr inbounds %"struct.tflite::reference_ops::BroadcastComparison4DSlowCommon", %"struct.tflite::reference_ops::BroadcastComparison4DSlowCommon"* %10, i64 0, i32 2, i32 1, i64 3
  %164 = load i32, i32* %163, align 4
  %165 = sext i32 %126 to i64
  %166 = sub nsw i32 0, %142
  %167 = zext i32 %166 to i64
  %168 = shl nsw i64 -1, %167
  %169 = trunc i64 %168 to i32
  %170 = xor i32 %169, -1
  %171 = ashr i32 %170, 1
  %172 = sext i32 %130 to i64
  %173 = sub nsw i32 0, %140
  %174 = zext i32 %173 to i64
  %175 = shl nsw i64 -1, %174
  %176 = trunc i64 %175 to i32
  %177 = xor i32 %176, -1
  %178 = ashr i32 %177, 1
  %179 = getelementptr inbounds i32, i32* %104, i64 1
  %180 = sext i32 %164 to i64
  %181 = sext i32 %156 to i64
  %182 = sext i32 %162 to i64
  %183 = sext i32 %154 to i64
  %184 = sext i32 %160 to i64
  %185 = sext i32 %152 to i64
  %186 = sext i32 %158 to i64
  %187 = sext i32 %150 to i64
  %188 = getelementptr inbounds i32, i32* %134, i64 1
  %189 = select i1 %132, i32* %188, i32* %144
  %190 = getelementptr inbounds i32, i32* %134, i64 2
  %191 = select i1 %132, i32* %190, i32* %146
  %192 = getelementptr inbounds i32, i32* %134, i64 3
  %193 = select i1 %132, i32* %192, i32* %148
  %194 = icmp eq i32 %126, -2147483648
  %195 = icmp eq i32 %130, -2147483648
  br label %196

196:                                              ; preds = %138, %229
  %197 = phi i32 [ %136, %138 ], [ %230, %229 ]
  %198 = phi i64 [ 0, %138 ], [ %231, %229 ]
  %199 = load i32, i32* %189, align 4
  %200 = icmp sgt i32 %199, 0
  br i1 %200, label %201, label %229

201:                                              ; preds = %196
  %202 = mul nsw i64 %198, %187
  %203 = mul nsw i64 %198, %186
  %204 = trunc i64 %198 to i32
  br label %212

205:                                              ; preds = %229, %103
  %206 = xor i1 %132, true
  %207 = icmp eq i32* %134, null
  %208 = or i1 %207, %206
  br i1 %208, label %211, label %209

209:                                              ; preds = %205
  %210 = bitcast i32* %134 to i8*
  call void @_ZdaPv(i8* %210) #9
  br label %211

211:                                              ; preds = %205, %209
  call void @llvm.lifetime.end.p0i8(i64 96, i8* nonnull %11) #8
  ret void

212:                                              ; preds = %201, %250
  %213 = phi i32 [ %199, %201 ], [ %251, %250 ]
  %214 = phi i64 [ 0, %201 ], [ %252, %250 ]
  %215 = load i32, i32* %191, align 4
  %216 = icmp sgt i32 %215, 0
  br i1 %216, label %217, label %250

217:                                              ; preds = %212
  %218 = mul nsw i64 %214, %185
  %219 = add nsw i64 %218, %202
  %220 = mul nsw i64 %214, %184
  %221 = add nsw i64 %220, %203
  %222 = load i32, i32* %179, align 4
  %223 = mul nsw i32 %222, %204
  %224 = trunc i64 %214 to i32
  %225 = add nsw i32 %223, %224
  %226 = load i32, i32* %193, align 4
  br label %234

227:                                              ; preds = %250
  %228 = load i32, i32* %135, align 4
  br label %229

229:                                              ; preds = %227, %196
  %230 = phi i32 [ %228, %227 ], [ %197, %196 ]
  %231 = add nuw nsw i64 %198, 1
  %232 = sext i32 %230 to i64
  %233 = icmp slt i64 %231, %232
  br i1 %233, label %196, label %205

234:                                              ; preds = %217, %257
  %235 = phi i32 [ %215, %217 ], [ %258, %257 ]
  %236 = phi i32 [ %226, %217 ], [ %259, %257 ]
  %237 = phi i64 [ 0, %217 ], [ %260, %257 ]
  %238 = icmp sgt i32 %236, 0
  br i1 %238, label %239, label %257

239:                                              ; preds = %234
  %240 = mul nsw i64 %237, %183
  %241 = add nsw i64 %219, %240
  %242 = mul nsw i64 %237, %182
  %243 = add nsw i64 %221, %242
  %244 = load i32, i32* %146, align 8
  %245 = mul nsw i32 %225, %244
  %246 = trunc i64 %237 to i32
  %247 = add nsw i32 %245, %246
  br label %263

248:                                              ; preds = %257
  %249 = load i32, i32* %189, align 4
  br label %250

250:                                              ; preds = %248, %212
  %251 = phi i32 [ %249, %248 ], [ %213, %212 ]
  %252 = add nuw nsw i64 %214, 1
  %253 = sext i32 %251 to i64
  %254 = icmp slt i64 %252, %253
  br i1 %254, label %212, label %227

255:                                              ; preds = %312
  %256 = load i32, i32* %191, align 4
  br label %257

257:                                              ; preds = %255, %234
  %258 = phi i32 [ %256, %255 ], [ %235, %234 ]
  %259 = phi i32 [ %330, %255 ], [ %236, %234 ]
  %260 = add nuw nsw i64 %237, 1
  %261 = sext i32 %258 to i64
  %262 = icmp slt i64 %260, %261
  br i1 %262, label %234, label %248

263:                                              ; preds = %239, %312
  %264 = phi i64 [ 0, %239 ], [ %329, %312 ]
  %265 = mul nsw i64 %264, %181
  %266 = add nsw i64 %241, %265
  %267 = getelementptr inbounds i8, i8* %2, i64 %266
  %268 = load i8, i8* %267, align 1
  %269 = zext i8 %268 to i32
  %270 = add nsw i32 %124, %269
  %271 = mul nsw i64 %264, %180
  %272 = add nsw i64 %243, %271
  %273 = getelementptr inbounds i8, i8* %4, i64 %272
  %274 = load i8, i8* %273, align 1
  %275 = zext i8 %274 to i32
  %276 = add nsw i32 %128, %275
  %277 = shl i32 %270, %122
  %278 = shl i32 %276, %122
  %279 = icmp eq i32 %277, %126
  br i1 %279, label %282, label %280

280:                                              ; preds = %263
  %281 = sext i32 %277 to i64
  br label %283

282:                                              ; preds = %263
  br i1 %194, label %291, label %283

283:                                              ; preds = %282, %280
  %284 = phi i64 [ %281, %280 ], [ %165, %282 ]
  %285 = mul nsw i64 %284, %165
  %286 = icmp sgt i64 %285, -1
  %287 = select i1 %286, i64 1073741824, i64 -1073741823
  %288 = add nsw i64 %287, %285
  %289 = sdiv i64 %288, 2147483648
  %290 = trunc i64 %289 to i32
  br label %291

291:                                              ; preds = %282, %283
  %292 = phi i32 [ %290, %283 ], [ 2147483647, %282 ]
  %293 = and i32 %292, %170
  %294 = lshr i32 %292, 31
  %295 = add nsw i32 %294, %171
  %296 = ashr i32 %292, %166
  %297 = icmp sgt i32 %293, %295
  %298 = zext i1 %297 to i32
  %299 = add nsw i32 %296, %298
  %300 = icmp eq i32 %278, %130
  br i1 %300, label %303, label %301

301:                                              ; preds = %291
  %302 = sext i32 %278 to i64
  br label %304

303:                                              ; preds = %291
  br i1 %195, label %312, label %304

304:                                              ; preds = %303, %301
  %305 = phi i64 [ %302, %301 ], [ %172, %303 ]
  %306 = mul nsw i64 %305, %172
  %307 = icmp sgt i64 %306, -1
  %308 = select i1 %307, i64 1073741824, i64 -1073741823
  %309 = add nsw i64 %308, %306
  %310 = sdiv i64 %309, 2147483648
  %311 = trunc i64 %310 to i32
  br label %312

312:                                              ; preds = %303, %304
  %313 = phi i32 [ %311, %304 ], [ 2147483647, %303 ]
  %314 = and i32 %313, %177
  %315 = lshr i32 %313, 31
  %316 = add nsw i32 %315, %178
  %317 = ashr i32 %313, %173
  %318 = icmp sgt i32 %314, %316
  %319 = zext i1 %318 to i32
  %320 = add nsw i32 %317, %319
  %321 = icmp sgt i32 %299, %320
  %322 = load i32, i32* %148, align 4
  %323 = mul nsw i32 %247, %322
  %324 = trunc i64 %264 to i32
  %325 = add nsw i32 %323, %324
  %326 = sext i32 %325 to i64
  %327 = getelementptr inbounds i8, i8* %6, i64 %326
  %328 = zext i1 %321 to i8
  store i8 %328, i8* %327, align 1
  %329 = add nuw nsw i64 %264, 1
  %330 = load i32, i32* %193, align 4
  %331 = sext i32 %330 to i64
  %332 = icmp slt i64 %329, %331
  br i1 %332, label %263, label %255
}

; Function Attrs: inlinehint nounwind ssp uwtable
define linkonce_odr hidden void @_ZN6tflite13reference_ops36BroadcastComparison4DSlowWithScalingIaXadL_ZNS0_9GreaterFnIiEEbT_S3_EEEEvRKNS_16ComparisonParamsERKNS_12RuntimeShapeEPKS3_S9_SB_S9_Pb(%"struct.tflite::ComparisonParams"* dereferenceable(32), %"class.tflite::RuntimeShape"* dereferenceable(32), i8*, %"class.tflite::RuntimeShape"* dereferenceable(32), i8*, %"class.tflite::RuntimeShape"* dereferenceable(32), i8*) local_unnamed_addr #4 comdat {
  %8 = alloca %"struct.tflite::NdArrayDesc", align 4
  %9 = alloca %"struct.tflite::NdArrayDesc", align 4
  %10 = alloca %"struct.tflite::reference_ops::BroadcastComparison4DSlowCommon", align 8
  %11 = bitcast %"struct.tflite::reference_ops::BroadcastComparison4DSlowCommon"* %10 to i8*
  call void @llvm.lifetime.start.p0i8(i64 96, i8* nonnull %11) #8
  call void @llvm.memset.p0i8.i64(i8* nonnull align 8 %11, i8 -86, i64 96, i1 false)
  %12 = getelementptr inbounds %"class.tflite::RuntimeShape", %"class.tflite::RuntimeShape"* %5, i64 0, i32 0
  %13 = bitcast %"struct.tflite::NdArrayDesc"* %8 to i8*
  call void @llvm.lifetime.start.p0i8(i64 32, i8* nonnull %13) #8, !noalias !1004
  %14 = bitcast %"struct.tflite::NdArrayDesc"* %9 to i8*
  call void @llvm.memset.p0i8.i64(i8* nonnull align 4 %13, i8 -86, i64 32, i1 false) #8, !noalias !1004
  call void @llvm.lifetime.start.p0i8(i64 32, i8* nonnull %14) #8, !noalias !1004
  call void @llvm.memset.p0i8.i64(i8* nonnull align 4 %14, i8 -86, i64 32, i1 false) #8, !noalias !1004
  call void @_ZN6tflite35NdArrayDescsForElementwiseBroadcastILi4EEEvRKNS_12RuntimeShapeES3_PNS_11NdArrayDescIXT_EEES6_(%"class.tflite::RuntimeShape"* dereferenceable(32) %1, %"class.tflite::RuntimeShape"* dereferenceable(32) %3, %"struct.tflite::NdArrayDesc"* nonnull %8, %"struct.tflite::NdArrayDesc"* nonnull %9) #8, !noalias !1004
  %15 = getelementptr inbounds %"struct.tflite::reference_ops::BroadcastComparison4DSlowCommon", %"struct.tflite::reference_ops::BroadcastComparison4DSlowCommon"* %10, i64 0, i32 0, i32 0
  store i32 0, i32* %15, align 8, !alias.scope !1007
  %16 = load i32, i32* %12, align 8, !noalias !1007
  %17 = icmp sgt i32 %16, 4
  br i1 %17, label %18, label %19

18:                                               ; preds = %7
  call void @abort() #10, !noalias !1007
  unreachable

19:                                               ; preds = %7
  store i32 4, i32* %15, align 8, !alias.scope !1007
  %20 = sub i32 4, %16
  %21 = icmp sgt i32 %20, 0
  %22 = getelementptr inbounds %"struct.tflite::reference_ops::BroadcastComparison4DSlowCommon", %"struct.tflite::reference_ops::BroadcastComparison4DSlowCommon"* %10, i64 0, i32 0, i32 1
  br i1 %21, label %23, label %103

23:                                               ; preds = %19
  %24 = bitcast %union.anon* %22 to [5 x i32]*
  %25 = zext i32 %20 to i64
  %26 = icmp ult i32 %20, 8
  br i1 %26, label %96, label %27

27:                                               ; preds = %23
  %28 = and i64 %25, 4294967288
  %29 = add nsw i64 %28, -8
  %30 = lshr exact i64 %29, 3
  %31 = add nuw nsw i64 %30, 1
  %32 = and i64 %31, 7
  %33 = icmp ult i64 %29, 56
  br i1 %33, label %81, label %34

34:                                               ; preds = %27
  %35 = sub nsw i64 %31, %32
  br label %36

36:                                               ; preds = %36, %34
  %37 = phi i64 [ 0, %34 ], [ %78, %36 ]
  %38 = phi i64 [ %35, %34 ], [ %79, %36 ]
  %39 = getelementptr inbounds [5 x i32], [5 x i32]* %24, i64 0, i64 %37
  %40 = bitcast i32* %39 to <4 x i32>*
  store <4 x i32> <i32 1, i32 1, i32 1, i32 1>, <4 x i32>* %40, align 8, !alias.scope !1007
  %41 = getelementptr inbounds i32, i32* %39, i64 4
  %42 = bitcast i32* %41 to <4 x i32>*
  store <4 x i32> <i32 1, i32 1, i32 1, i32 1>, <4 x i32>* %42, align 8, !alias.scope !1007
  %43 = or i64 %37, 8
  %44 = getelementptr inbounds [5 x i32], [5 x i32]* %24, i64 0, i64 %43
  %45 = bitcast i32* %44 to <4 x i32>*
  store <4 x i32> <i32 1, i32 1, i32 1, i32 1>, <4 x i32>* %45, align 8, !alias.scope !1007
  %46 = getelementptr inbounds i32, i32* %44, i64 4
  %47 = bitcast i32* %46 to <4 x i32>*
  store <4 x i32> <i32 1, i32 1, i32 1, i32 1>, <4 x i32>* %47, align 8, !alias.scope !1007
  %48 = or i64 %37, 16
  %49 = getelementptr inbounds [5 x i32], [5 x i32]* %24, i64 0, i64 %48
  %50 = bitcast i32* %49 to <4 x i32>*
  store <4 x i32> <i32 1, i32 1, i32 1, i32 1>, <4 x i32>* %50, align 8, !alias.scope !1007
  %51 = getelementptr inbounds i32, i32* %49, i64 4
  %52 = bitcast i32* %51 to <4 x i32>*
  store <4 x i32> <i32 1, i32 1, i32 1, i32 1>, <4 x i32>* %52, align 8, !alias.scope !1007
  %53 = or i64 %37, 24
  %54 = getelementptr inbounds [5 x i32], [5 x i32]* %24, i64 0, i64 %53
  %55 = bitcast i32* %54 to <4 x i32>*
  store <4 x i32> <i32 1, i32 1, i32 1, i32 1>, <4 x i32>* %55, align 8, !alias.scope !1007
  %56 = getelementptr inbounds i32, i32* %54, i64 4
  %57 = bitcast i32* %56 to <4 x i32>*
  store <4 x i32> <i32 1, i32 1, i32 1, i32 1>, <4 x i32>* %57, align 8, !alias.scope !1007
  %58 = or i64 %37, 32
  %59 = getelementptr inbounds [5 x i32], [5 x i32]* %24, i64 0, i64 %58
  %60 = bitcast i32* %59 to <4 x i32>*
  store <4 x i32> <i32 1, i32 1, i32 1, i32 1>, <4 x i32>* %60, align 8, !alias.scope !1007
  %61 = getelementptr inbounds i32, i32* %59, i64 4
  %62 = bitcast i32* %61 to <4 x i32>*
  store <4 x i32> <i32 1, i32 1, i32 1, i32 1>, <4 x i32>* %62, align 8, !alias.scope !1007
  %63 = or i64 %37, 40
  %64 = getelementptr inbounds [5 x i32], [5 x i32]* %24, i64 0, i64 %63
  %65 = bitcast i32* %64 to <4 x i32>*
  store <4 x i32> <i32 1, i32 1, i32 1, i32 1>, <4 x i32>* %65, align 8, !alias.scope !1007
  %66 = getelementptr inbounds i32, i32* %64, i64 4
  %67 = bitcast i32* %66 to <4 x i32>*
  store <4 x i32> <i32 1, i32 1, i32 1, i32 1>, <4 x i32>* %67, align 8, !alias.scope !1007
  %68 = or i64 %37, 48
  %69 = getelementptr inbounds [5 x i32], [5 x i32]* %24, i64 0, i64 %68
  %70 = bitcast i32* %69 to <4 x i32>*
  store <4 x i32> <i32 1, i32 1, i32 1, i32 1>, <4 x i32>* %70, align 8, !alias.scope !1007
  %71 = getelementptr inbounds i32, i32* %69, i64 4
  %72 = bitcast i32* %71 to <4 x i32>*
  store <4 x i32> <i32 1, i32 1, i32 1, i32 1>, <4 x i32>* %72, align 8, !alias.scope !1007
  %73 = or i64 %37, 56
  %74 = getelementptr inbounds [5 x i32], [5 x i32]* %24, i64 0, i64 %73
  %75 = bitcast i32* %74 to <4 x i32>*
  store <4 x i32> <i32 1, i32 1, i32 1, i32 1>, <4 x i32>* %75, align 8, !alias.scope !1007
  %76 = getelementptr inbounds i32, i32* %74, i64 4
  %77 = bitcast i32* %76 to <4 x i32>*
  store <4 x i32> <i32 1, i32 1, i32 1, i32 1>, <4 x i32>* %77, align 8, !alias.scope !1007
  %78 = add i64 %37, 64
  %79 = add i64 %38, -8
  %80 = icmp eq i64 %79, 0
  br i1 %80, label %81, label %36, !llvm.loop !1010

81:                                               ; preds = %36, %27
  %82 = phi i64 [ 0, %27 ], [ %78, %36 ]
  %83 = icmp eq i64 %32, 0
  br i1 %83, label %94, label %84

84:                                               ; preds = %81, %84
  %85 = phi i64 [ %91, %84 ], [ %82, %81 ]
  %86 = phi i64 [ %92, %84 ], [ %32, %81 ]
  %87 = getelementptr inbounds [5 x i32], [5 x i32]* %24, i64 0, i64 %85
  %88 = bitcast i32* %87 to <4 x i32>*
  store <4 x i32> <i32 1, i32 1, i32 1, i32 1>, <4 x i32>* %88, align 8, !alias.scope !1007
  %89 = getelementptr inbounds i32, i32* %87, i64 4
  %90 = bitcast i32* %89 to <4 x i32>*
  store <4 x i32> <i32 1, i32 1, i32 1, i32 1>, <4 x i32>* %90, align 8, !alias.scope !1007
  %91 = add i64 %85, 8
  %92 = add i64 %86, -1
  %93 = icmp eq i64 %92, 0
  br i1 %93, label %94, label %84, !llvm.loop !1011

94:                                               ; preds = %84, %81
  %95 = icmp eq i64 %28, %25
  br i1 %95, label %103, label %96

96:                                               ; preds = %94, %23
  %97 = phi i64 [ 0, %23 ], [ %28, %94 ]
  br label %98

98:                                               ; preds = %96, %98
  %99 = phi i64 [ %101, %98 ], [ %97, %96 ]
  %100 = getelementptr inbounds [5 x i32], [5 x i32]* %24, i64 0, i64 %99
  store i32 1, i32* %100, align 4, !alias.scope !1007
  %101 = add nuw nsw i64 %99, 1
  %102 = icmp eq i64 %101, %25
  br i1 %102, label %103, label %98, !llvm.loop !1012

103:                                              ; preds = %98, %94, %19
  %104 = bitcast %union.anon* %22 to i32*
  %105 = sext i32 %20 to i64
  %106 = getelementptr inbounds i32, i32* %104, i64 %105
  %107 = bitcast i32* %106 to i8*
  %108 = icmp sgt i32 %16, 5
  %109 = getelementptr inbounds %"class.tflite::RuntimeShape", %"class.tflite::RuntimeShape"* %5, i64 0, i32 1
  %110 = getelementptr inbounds %union.anon, %union.anon* %109, i64 0, i32 0
  %111 = load i32*, i32** %110, align 8, !noalias !1007
  %112 = bitcast %union.anon* %109 to i32*
  %113 = select i1 %108, i32* %111, i32* %112
  %114 = bitcast i32* %113 to i8*
  %115 = sext i32 %16 to i64
  %116 = shl nsw i64 %115, 2
  call void @llvm.memcpy.p0i8.p0i8.i64(i8* align 4 %107, i8* align 4 %114, i64 %116, i1 false) #8
  %117 = getelementptr inbounds %"struct.tflite::reference_ops::BroadcastComparison4DSlowCommon", %"struct.tflite::reference_ops::BroadcastComparison4DSlowCommon"* %10, i64 0, i32 1
  %118 = bitcast %"struct.tflite::NdArrayDesc"* %117 to i8*
  call void @llvm.memcpy.p0i8.p0i8.i64(i8* align 8 %118, i8* nonnull align 4 %13, i64 32, i1 false) #8
  %119 = getelementptr inbounds %"struct.tflite::reference_ops::BroadcastComparison4DSlowCommon", %"struct.tflite::reference_ops::BroadcastComparison4DSlowCommon"* %10, i64 0, i32 2
  %120 = bitcast %"struct.tflite::NdArrayDesc"* %119 to i8*
  call void @llvm.memcpy.p0i8.p0i8.i64(i8* align 8 %120, i8* nonnull align 4 %14, i64 32, i1 false) #8
  call void @llvm.lifetime.end.p0i8(i64 32, i8* nonnull %14) #8, !noalias !1004
  call void @llvm.lifetime.end.p0i8(i64 32, i8* nonnull %13) #8, !noalias !1004
  %121 = getelementptr inbounds %"struct.tflite::ComparisonParams", %"struct.tflite::ComparisonParams"* %0, i64 0, i32 0
  %122 = load i32, i32* %121, align 4
  %123 = getelementptr inbounds %"struct.tflite::ComparisonParams", %"struct.tflite::ComparisonParams"* %0, i64 0, i32 1
  %124 = load i32, i32* %123, align 4
  %125 = getelementptr inbounds %"struct.tflite::ComparisonParams", %"struct.tflite::ComparisonParams"* %0, i64 0, i32 2
  %126 = load i32, i32* %125, align 4
  %127 = getelementptr inbounds %"struct.tflite::ComparisonParams", %"struct.tflite::ComparisonParams"* %0, i64 0, i32 4
  %128 = load i32, i32* %127, align 4
  %129 = getelementptr inbounds %"struct.tflite::ComparisonParams", %"struct.tflite::ComparisonParams"* %0, i64 0, i32 5
  %130 = load i32, i32* %129, align 4
  %131 = load i32, i32* %15, align 8
  %132 = icmp sgt i32 %131, 5
  %133 = getelementptr inbounds %union.anon, %union.anon* %22, i64 0, i32 0
  %134 = load i32*, i32** %133, align 8
  %135 = select i1 %132, i32* %134, i32* %104
  %136 = load i32, i32* %135, align 4
  %137 = icmp sgt i32 %136, 0
  br i1 %137, label %138, label %205

138:                                              ; preds = %103
  %139 = getelementptr inbounds %"struct.tflite::ComparisonParams", %"struct.tflite::ComparisonParams"* %0, i64 0, i32 6
  %140 = load i32, i32* %139, align 4
  %141 = getelementptr inbounds %"struct.tflite::ComparisonParams", %"struct.tflite::ComparisonParams"* %0, i64 0, i32 3
  %142 = load i32, i32* %141, align 4
  %143 = bitcast %union.anon* %22 to [5 x i32]*
  %144 = getelementptr inbounds [5 x i32], [5 x i32]* %143, i64 0, i64 1
  %145 = getelementptr inbounds %"struct.tflite::reference_ops::BroadcastComparison4DSlowCommon", %"struct.tflite::reference_ops::BroadcastComparison4DSlowCommon"* %10, i64 0, i32 0, i32 1, i32 1
  %146 = bitcast [16 x i8]* %145 to i32*
  %147 = getelementptr inbounds %"struct.tflite::reference_ops::BroadcastComparison4DSlowCommon", %"struct.tflite::reference_ops::BroadcastComparison4DSlowCommon"* %10, i64 0, i32 0, i32 1, i32 1, i64 4
  %148 = bitcast i8* %147 to i32*
  %149 = getelementptr inbounds %"struct.tflite::reference_ops::BroadcastComparison4DSlowCommon", %"struct.tflite::reference_ops::BroadcastComparison4DSlowCommon"* %10, i64 0, i32 1, i32 1, i64 0
  %150 = load i32, i32* %149, align 8
  %151 = getelementptr inbounds %"struct.tflite::reference_ops::BroadcastComparison4DSlowCommon", %"struct.tflite::reference_ops::BroadcastComparison4DSlowCommon"* %10, i64 0, i32 1, i32 1, i64 1
  %152 = load i32, i32* %151, align 4
  %153 = getelementptr inbounds %"struct.tflite::reference_ops::BroadcastComparison4DSlowCommon", %"struct.tflite::reference_ops::BroadcastComparison4DSlowCommon"* %10, i64 0, i32 1, i32 1, i64 2
  %154 = load i32, i32* %153, align 8
  %155 = getelementptr inbounds %"struct.tflite::reference_ops::BroadcastComparison4DSlowCommon", %"struct.tflite::reference_ops::BroadcastComparison4DSlowCommon"* %10, i64 0, i32 1, i32 1, i64 3
  %156 = load i32, i32* %155, align 4
  %157 = getelementptr inbounds %"struct.tflite::reference_ops::BroadcastComparison4DSlowCommon", %"struct.tflite::reference_ops::BroadcastComparison4DSlowCommon"* %10, i64 0, i32 2, i32 1, i64 0
  %158 = load i32, i32* %157, align 8
  %159 = getelementptr inbounds %"struct.tflite::reference_ops::BroadcastComparison4DSlowCommon", %"struct.tflite::reference_ops::BroadcastComparison4DSlowCommon"* %10, i64 0, i32 2, i32 1, i64 1
  %160 = load i32, i32* %159, align 4
  %161 = getelementptr inbounds %"struct.tflite::reference_ops::BroadcastComparison4DSlowCommon", %"struct.tflite::reference_ops::BroadcastComparison4DSlowCommon"* %10, i64 0, i32 2, i32 1, i64 2
  %162 = load i32, i32* %161, align 8
  %163 = getelementptr inbounds %"struct.tflite::reference_ops::BroadcastComparison4DSlowCommon", %"struct.tflite::reference_ops::BroadcastComparison4DSlowCommon"* %10, i64 0, i32 2, i32 1, i64 3
  %164 = load i32, i32* %163, align 4
  %165 = sext i32 %126 to i64
  %166 = sub nsw i32 0, %142
  %167 = zext i32 %166 to i64
  %168 = shl nsw i64 -1, %167
  %169 = trunc i64 %168 to i32
  %170 = xor i32 %169, -1
  %171 = ashr i32 %170, 1
  %172 = sext i32 %130 to i64
  %173 = sub nsw i32 0, %140
  %174 = zext i32 %173 to i64
  %175 = shl nsw i64 -1, %174
  %176 = trunc i64 %175 to i32
  %177 = xor i32 %176, -1
  %178 = ashr i32 %177, 1
  %179 = getelementptr inbounds i32, i32* %104, i64 1
  %180 = sext i32 %164 to i64
  %181 = sext i32 %156 to i64
  %182 = sext i32 %162 to i64
  %183 = sext i32 %154 to i64
  %184 = sext i32 %160 to i64
  %185 = sext i32 %152 to i64
  %186 = sext i32 %158 to i64
  %187 = sext i32 %150 to i64
  %188 = getelementptr inbounds i32, i32* %134, i64 1
  %189 = select i1 %132, i32* %188, i32* %144
  %190 = getelementptr inbounds i32, i32* %134, i64 2
  %191 = select i1 %132, i32* %190, i32* %146
  %192 = getelementptr inbounds i32, i32* %134, i64 3
  %193 = select i1 %132, i32* %192, i32* %148
  %194 = icmp eq i32 %126, -2147483648
  %195 = icmp eq i32 %130, -2147483648
  br label %196

196:                                              ; preds = %138, %229
  %197 = phi i32 [ %136, %138 ], [ %230, %229 ]
  %198 = phi i64 [ 0, %138 ], [ %231, %229 ]
  %199 = load i32, i32* %189, align 4
  %200 = icmp sgt i32 %199, 0
  br i1 %200, label %201, label %229

201:                                              ; preds = %196
  %202 = mul nsw i64 %198, %187
  %203 = mul nsw i64 %198, %186
  %204 = trunc i64 %198 to i32
  br label %212

205:                                              ; preds = %229, %103
  %206 = xor i1 %132, true
  %207 = icmp eq i32* %134, null
  %208 = or i1 %207, %206
  br i1 %208, label %211, label %209

209:                                              ; preds = %205
  %210 = bitcast i32* %134 to i8*
  call void @_ZdaPv(i8* %210) #9
  br label %211

211:                                              ; preds = %205, %209
  call void @llvm.lifetime.end.p0i8(i64 96, i8* nonnull %11) #8
  ret void

212:                                              ; preds = %201, %250
  %213 = phi i32 [ %199, %201 ], [ %251, %250 ]
  %214 = phi i64 [ 0, %201 ], [ %252, %250 ]
  %215 = load i32, i32* %191, align 4
  %216 = icmp sgt i32 %215, 0
  br i1 %216, label %217, label %250

217:                                              ; preds = %212
  %218 = mul nsw i64 %214, %185
  %219 = add nsw i64 %218, %202
  %220 = mul nsw i64 %214, %184
  %221 = add nsw i64 %220, %203
  %222 = load i32, i32* %179, align 4
  %223 = mul nsw i32 %222, %204
  %224 = trunc i64 %214 to i32
  %225 = add nsw i32 %223, %224
  %226 = load i32, i32* %193, align 4
  br label %234

227:                                              ; preds = %250
  %228 = load i32, i32* %135, align 4
  br label %229

229:                                              ; preds = %227, %196
  %230 = phi i32 [ %228, %227 ], [ %197, %196 ]
  %231 = add nuw nsw i64 %198, 1
  %232 = sext i32 %230 to i64
  %233 = icmp slt i64 %231, %232
  br i1 %233, label %196, label %205

234:                                              ; preds = %217, %257
  %235 = phi i32 [ %215, %217 ], [ %258, %257 ]
  %236 = phi i32 [ %226, %217 ], [ %259, %257 ]
  %237 = phi i64 [ 0, %217 ], [ %260, %257 ]
  %238 = icmp sgt i32 %236, 0
  br i1 %238, label %239, label %257

239:                                              ; preds = %234
  %240 = mul nsw i64 %237, %183
  %241 = add nsw i64 %219, %240
  %242 = mul nsw i64 %237, %182
  %243 = add nsw i64 %221, %242
  %244 = load i32, i32* %146, align 8
  %245 = mul nsw i32 %225, %244
  %246 = trunc i64 %237 to i32
  %247 = add nsw i32 %245, %246
  br label %263

248:                                              ; preds = %257
  %249 = load i32, i32* %189, align 4
  br label %250

250:                                              ; preds = %248, %212
  %251 = phi i32 [ %249, %248 ], [ %213, %212 ]
  %252 = add nuw nsw i64 %214, 1
  %253 = sext i32 %251 to i64
  %254 = icmp slt i64 %252, %253
  br i1 %254, label %212, label %227

255:                                              ; preds = %312
  %256 = load i32, i32* %191, align 4
  br label %257

257:                                              ; preds = %255, %234
  %258 = phi i32 [ %256, %255 ], [ %235, %234 ]
  %259 = phi i32 [ %330, %255 ], [ %236, %234 ]
  %260 = add nuw nsw i64 %237, 1
  %261 = sext i32 %258 to i64
  %262 = icmp slt i64 %260, %261
  br i1 %262, label %234, label %248

263:                                              ; preds = %239, %312
  %264 = phi i64 [ 0, %239 ], [ %329, %312 ]
  %265 = mul nsw i64 %264, %181
  %266 = add nsw i64 %241, %265
  %267 = getelementptr inbounds i8, i8* %2, i64 %266
  %268 = load i8, i8* %267, align 1
  %269 = sext i8 %268 to i32
  %270 = add nsw i32 %124, %269
  %271 = mul nsw i64 %264, %180
  %272 = add nsw i64 %243, %271
  %273 = getelementptr inbounds i8, i8* %4, i64 %272
  %274 = load i8, i8* %273, align 1
  %275 = sext i8 %274 to i32
  %276 = add nsw i32 %128, %275
  %277 = shl i32 %270, %122
  %278 = shl i32 %276, %122
  %279 = icmp eq i32 %277, %126
  br i1 %279, label %282, label %280

280:                                              ; preds = %263
  %281 = sext i32 %277 to i64
  br label %283

282:                                              ; preds = %263
  br i1 %194, label %291, label %283

283:                                              ; preds = %282, %280
  %284 = phi i64 [ %281, %280 ], [ %165, %282 ]
  %285 = mul nsw i64 %284, %165
  %286 = icmp sgt i64 %285, -1
  %287 = select i1 %286, i64 1073741824, i64 -1073741823
  %288 = add nsw i64 %287, %285
  %289 = sdiv i64 %288, 2147483648
  %290 = trunc i64 %289 to i32
  br label %291

291:                                              ; preds = %282, %283
  %292 = phi i32 [ %290, %283 ], [ 2147483647, %282 ]
  %293 = and i32 %292, %170
  %294 = lshr i32 %292, 31
  %295 = add nsw i32 %294, %171
  %296 = ashr i32 %292, %166
  %297 = icmp sgt i32 %293, %295
  %298 = zext i1 %297 to i32
  %299 = add nsw i32 %296, %298
  %300 = icmp eq i32 %278, %130
  br i1 %300, label %303, label %301

301:                                              ; preds = %291
  %302 = sext i32 %278 to i64
  br label %304

303:                                              ; preds = %291
  br i1 %195, label %312, label %304

304:                                              ; preds = %303, %301
  %305 = phi i64 [ %302, %301 ], [ %172, %303 ]
  %306 = mul nsw i64 %305, %172
  %307 = icmp sgt i64 %306, -1
  %308 = select i1 %307, i64 1073741824, i64 -1073741823
  %309 = add nsw i64 %308, %306
  %310 = sdiv i64 %309, 2147483648
  %311 = trunc i64 %310 to i32
  br label %312

312:                                              ; preds = %303, %304
  %313 = phi i32 [ %311, %304 ], [ 2147483647, %303 ]
  %314 = and i32 %313, %177
  %315 = lshr i32 %313, 31
  %316 = add nsw i32 %315, %178
  %317 = ashr i32 %313, %173
  %318 = icmp sgt i32 %314, %316
  %319 = zext i1 %318 to i32
  %320 = add nsw i32 %317, %319
  %321 = icmp sgt i32 %299, %320
  %322 = load i32, i32* %148, align 4
  %323 = mul nsw i32 %247, %322
  %324 = trunc i64 %264 to i32
  %325 = add nsw i32 %323, %324
  %326 = sext i32 %325 to i64
  %327 = getelementptr inbounds i8, i8* %6, i64 %326
  %328 = zext i1 %321 to i8
  store i8 %328, i8* %327, align 1
  %329 = add nuw nsw i64 %264, 1
  %330 = load i32, i32* %193, align 4
  %331 = sext i32 %330 to i64
  %332 = icmp slt i64 %329, %331
  br i1 %332, label %263, label %255
}

; Function Attrs: inlinehint nounwind ssp uwtable
define linkonce_odr hidden void @_ZN6tflite13reference_ops29BroadcastComparison4DSlowImplIfXadL_ZNS0_14GreaterEqualFnIfEEbT_S3_EEEEvRKNS_16ComparisonParamsERKNS_12RuntimeShapeEPKS3_S9_SB_S9_Pb(%"struct.tflite::ComparisonParams"* dereferenceable(32), %"class.tflite::RuntimeShape"* dereferenceable(32), float*, %"class.tflite::RuntimeShape"* dereferenceable(32), float*, %"class.tflite::RuntimeShape"* dereferenceable(32), i8*) local_unnamed_addr #4 comdat {
  %8 = alloca %"struct.tflite::NdArrayDesc", align 4
  %9 = alloca %"struct.tflite::NdArrayDesc", align 4
  %10 = alloca %"struct.tflite::reference_ops::BroadcastComparison4DSlowCommon", align 8
  %11 = bitcast %"struct.tflite::reference_ops::BroadcastComparison4DSlowCommon"* %10 to i8*
  call void @llvm.lifetime.start.p0i8(i64 96, i8* nonnull %11) #8
  call void @llvm.memset.p0i8.i64(i8* nonnull align 8 %11, i8 -86, i64 96, i1 false)
  %12 = getelementptr inbounds %"class.tflite::RuntimeShape", %"class.tflite::RuntimeShape"* %5, i64 0, i32 0
  %13 = bitcast %"struct.tflite::NdArrayDesc"* %8 to i8*
  call void @llvm.lifetime.start.p0i8(i64 32, i8* nonnull %13) #8, !noalias !1013
  %14 = bitcast %"struct.tflite::NdArrayDesc"* %9 to i8*
  call void @llvm.memset.p0i8.i64(i8* nonnull align 4 %13, i8 -86, i64 32, i1 false) #8, !noalias !1013
  call void @llvm.lifetime.start.p0i8(i64 32, i8* nonnull %14) #8, !noalias !1013
  call void @llvm.memset.p0i8.i64(i8* nonnull align 4 %14, i8 -86, i64 32, i1 false) #8, !noalias !1013
  call void @_ZN6tflite35NdArrayDescsForElementwiseBroadcastILi4EEEvRKNS_12RuntimeShapeES3_PNS_11NdArrayDescIXT_EEES6_(%"class.tflite::RuntimeShape"* dereferenceable(32) %1, %"class.tflite::RuntimeShape"* dereferenceable(32) %3, %"struct.tflite::NdArrayDesc"* nonnull %8, %"struct.tflite::NdArrayDesc"* nonnull %9) #8, !noalias !1013
  %15 = getelementptr inbounds %"struct.tflite::reference_ops::BroadcastComparison4DSlowCommon", %"struct.tflite::reference_ops::BroadcastComparison4DSlowCommon"* %10, i64 0, i32 0, i32 0
  store i32 0, i32* %15, align 8, !alias.scope !1016
  %16 = load i32, i32* %12, align 8, !noalias !1016
  %17 = icmp sgt i32 %16, 4
  br i1 %17, label %18, label %19

18:                                               ; preds = %7
  call void @abort() #10, !noalias !1016
  unreachable

19:                                               ; preds = %7
  store i32 4, i32* %15, align 8, !alias.scope !1016
  %20 = sub i32 4, %16
  %21 = icmp sgt i32 %20, 0
  %22 = getelementptr inbounds %"struct.tflite::reference_ops::BroadcastComparison4DSlowCommon", %"struct.tflite::reference_ops::BroadcastComparison4DSlowCommon"* %10, i64 0, i32 0, i32 1
  br i1 %21, label %23, label %103

23:                                               ; preds = %19
  %24 = bitcast %union.anon* %22 to [5 x i32]*
  %25 = zext i32 %20 to i64
  %26 = icmp ult i32 %20, 8
  br i1 %26, label %96, label %27

27:                                               ; preds = %23
  %28 = and i64 %25, 4294967288
  %29 = add nsw i64 %28, -8
  %30 = lshr exact i64 %29, 3
  %31 = add nuw nsw i64 %30, 1
  %32 = and i64 %31, 7
  %33 = icmp ult i64 %29, 56
  br i1 %33, label %81, label %34

34:                                               ; preds = %27
  %35 = sub nsw i64 %31, %32
  br label %36

36:                                               ; preds = %36, %34
  %37 = phi i64 [ 0, %34 ], [ %78, %36 ]
  %38 = phi i64 [ %35, %34 ], [ %79, %36 ]
  %39 = getelementptr inbounds [5 x i32], [5 x i32]* %24, i64 0, i64 %37
  %40 = bitcast i32* %39 to <4 x i32>*
  store <4 x i32> <i32 1, i32 1, i32 1, i32 1>, <4 x i32>* %40, align 8, !alias.scope !1016
  %41 = getelementptr inbounds i32, i32* %39, i64 4
  %42 = bitcast i32* %41 to <4 x i32>*
  store <4 x i32> <i32 1, i32 1, i32 1, i32 1>, <4 x i32>* %42, align 8, !alias.scope !1016
  %43 = or i64 %37, 8
  %44 = getelementptr inbounds [5 x i32], [5 x i32]* %24, i64 0, i64 %43
  %45 = bitcast i32* %44 to <4 x i32>*
  store <4 x i32> <i32 1, i32 1, i32 1, i32 1>, <4 x i32>* %45, align 8, !alias.scope !1016
  %46 = getelementptr inbounds i32, i32* %44, i64 4
  %47 = bitcast i32* %46 to <4 x i32>*
  store <4 x i32> <i32 1, i32 1, i32 1, i32 1>, <4 x i32>* %47, align 8, !alias.scope !1016
  %48 = or i64 %37, 16
  %49 = getelementptr inbounds [5 x i32], [5 x i32]* %24, i64 0, i64 %48
  %50 = bitcast i32* %49 to <4 x i32>*
  store <4 x i32> <i32 1, i32 1, i32 1, i32 1>, <4 x i32>* %50, align 8, !alias.scope !1016
  %51 = getelementptr inbounds i32, i32* %49, i64 4
  %52 = bitcast i32* %51 to <4 x i32>*
  store <4 x i32> <i32 1, i32 1, i32 1, i32 1>, <4 x i32>* %52, align 8, !alias.scope !1016
  %53 = or i64 %37, 24
  %54 = getelementptr inbounds [5 x i32], [5 x i32]* %24, i64 0, i64 %53
  %55 = bitcast i32* %54 to <4 x i32>*
  store <4 x i32> <i32 1, i32 1, i32 1, i32 1>, <4 x i32>* %55, align 8, !alias.scope !1016
  %56 = getelementptr inbounds i32, i32* %54, i64 4
  %57 = bitcast i32* %56 to <4 x i32>*
  store <4 x i32> <i32 1, i32 1, i32 1, i32 1>, <4 x i32>* %57, align 8, !alias.scope !1016
  %58 = or i64 %37, 32
  %59 = getelementptr inbounds [5 x i32], [5 x i32]* %24, i64 0, i64 %58
  %60 = bitcast i32* %59 to <4 x i32>*
  store <4 x i32> <i32 1, i32 1, i32 1, i32 1>, <4 x i32>* %60, align 8, !alias.scope !1016
  %61 = getelementptr inbounds i32, i32* %59, i64 4
  %62 = bitcast i32* %61 to <4 x i32>*
  store <4 x i32> <i32 1, i32 1, i32 1, i32 1>, <4 x i32>* %62, align 8, !alias.scope !1016
  %63 = or i64 %37, 40
  %64 = getelementptr inbounds [5 x i32], [5 x i32]* %24, i64 0, i64 %63
  %65 = bitcast i32* %64 to <4 x i32>*
  store <4 x i32> <i32 1, i32 1, i32 1, i32 1>, <4 x i32>* %65, align 8, !alias.scope !1016
  %66 = getelementptr inbounds i32, i32* %64, i64 4
  %67 = bitcast i32* %66 to <4 x i32>*
  store <4 x i32> <i32 1, i32 1, i32 1, i32 1>, <4 x i32>* %67, align 8, !alias.scope !1016
  %68 = or i64 %37, 48
  %69 = getelementptr inbounds [5 x i32], [5 x i32]* %24, i64 0, i64 %68
  %70 = bitcast i32* %69 to <4 x i32>*
  store <4 x i32> <i32 1, i32 1, i32 1, i32 1>, <4 x i32>* %70, align 8, !alias.scope !1016
  %71 = getelementptr inbounds i32, i32* %69, i64 4
  %72 = bitcast i32* %71 to <4 x i32>*
  store <4 x i32> <i32 1, i32 1, i32 1, i32 1>, <4 x i32>* %72, align 8, !alias.scope !1016
  %73 = or i64 %37, 56
  %74 = getelementptr inbounds [5 x i32], [5 x i32]* %24, i64 0, i64 %73
  %75 = bitcast i32* %74 to <4 x i32>*
  store <4 x i32> <i32 1, i32 1, i32 1, i32 1>, <4 x i32>* %75, align 8, !alias.scope !1016
  %76 = getelementptr inbounds i32, i32* %74, i64 4
  %77 = bitcast i32* %76 to <4 x i32>*
  store <4 x i32> <i32 1, i32 1, i32 1, i32 1>, <4 x i32>* %77, align 8, !alias.scope !1016
  %78 = add i64 %37, 64
  %79 = add i64 %38, -8
  %80 = icmp eq i64 %79, 0
  br i1 %80, label %81, label %36, !llvm.loop !1019

81:                                               ; preds = %36, %27
  %82 = phi i64 [ 0, %27 ], [ %78, %36 ]
  %83 = icmp eq i64 %32, 0
  br i1 %83, label %94, label %84

84:                                               ; preds = %81, %84
  %85 = phi i64 [ %91, %84 ], [ %82, %81 ]
  %86 = phi i64 [ %92, %84 ], [ %32, %81 ]
  %87 = getelementptr inbounds [5 x i32], [5 x i32]* %24, i64 0, i64 %85
  %88 = bitcast i32* %87 to <4 x i32>*
  store <4 x i32> <i32 1, i32 1, i32 1, i32 1>, <4 x i32>* %88, align 8, !alias.scope !1016
  %89 = getelementptr inbounds i32, i32* %87, i64 4
  %90 = bitcast i32* %89 to <4 x i32>*
  store <4 x i32> <i32 1, i32 1, i32 1, i32 1>, <4 x i32>* %90, align 8, !alias.scope !1016
  %91 = add i64 %85, 8
  %92 = add i64 %86, -1
  %93 = icmp eq i64 %92, 0
  br i1 %93, label %94, label %84, !llvm.loop !1020

94:                                               ; preds = %84, %81
  %95 = icmp eq i64 %28, %25
  br i1 %95, label %103, label %96

96:                                               ; preds = %94, %23
  %97 = phi i64 [ 0, %23 ], [ %28, %94 ]
  br label %98

98:                                               ; preds = %96, %98
  %99 = phi i64 [ %101, %98 ], [ %97, %96 ]
  %100 = getelementptr inbounds [5 x i32], [5 x i32]* %24, i64 0, i64 %99
  store i32 1, i32* %100, align 4, !alias.scope !1016
  %101 = add nuw nsw i64 %99, 1
  %102 = icmp eq i64 %101, %25
  br i1 %102, label %103, label %98, !llvm.loop !1021

103:                                              ; preds = %98, %94, %19
  %104 = bitcast %union.anon* %22 to i32*
  %105 = sext i32 %20 to i64
  %106 = getelementptr inbounds i32, i32* %104, i64 %105
  %107 = bitcast i32* %106 to i8*
  %108 = icmp sgt i32 %16, 5
  %109 = getelementptr inbounds %"class.tflite::RuntimeShape", %"class.tflite::RuntimeShape"* %5, i64 0, i32 1
  %110 = getelementptr inbounds %union.anon, %union.anon* %109, i64 0, i32 0
  %111 = load i32*, i32** %110, align 8, !noalias !1016
  %112 = bitcast %union.anon* %109 to i32*
  %113 = select i1 %108, i32* %111, i32* %112
  %114 = bitcast i32* %113 to i8*
  %115 = sext i32 %16 to i64
  %116 = shl nsw i64 %115, 2
  call void @llvm.memcpy.p0i8.p0i8.i64(i8* align 4 %107, i8* align 4 %114, i64 %116, i1 false) #8
  %117 = getelementptr inbounds %"struct.tflite::reference_ops::BroadcastComparison4DSlowCommon", %"struct.tflite::reference_ops::BroadcastComparison4DSlowCommon"* %10, i64 0, i32 1
  %118 = bitcast %"struct.tflite::NdArrayDesc"* %117 to i8*
  call void @llvm.memcpy.p0i8.p0i8.i64(i8* align 8 %118, i8* nonnull align 4 %13, i64 32, i1 false) #8
  %119 = getelementptr inbounds %"struct.tflite::reference_ops::BroadcastComparison4DSlowCommon", %"struct.tflite::reference_ops::BroadcastComparison4DSlowCommon"* %10, i64 0, i32 2
  %120 = bitcast %"struct.tflite::NdArrayDesc"* %119 to i8*
  call void @llvm.memcpy.p0i8.p0i8.i64(i8* align 8 %120, i8* nonnull align 4 %14, i64 32, i1 false) #8
  call void @llvm.lifetime.end.p0i8(i64 32, i8* nonnull %14) #8, !noalias !1013
  call void @llvm.lifetime.end.p0i8(i64 32, i8* nonnull %13) #8, !noalias !1013
  %121 = load i32, i32* %15, align 8
  %122 = icmp sgt i32 %121, 5
  %123 = getelementptr inbounds %union.anon, %union.anon* %22, i64 0, i32 0
  %124 = load i32*, i32** %123, align 8
  %125 = select i1 %122, i32* %124, i32* %104
  %126 = load i32, i32* %125, align 4
  %127 = icmp sgt i32 %126, 0
  br i1 %127, label %128, label %175

128:                                              ; preds = %103
  %129 = bitcast %union.anon* %22 to [5 x i32]*
  %130 = getelementptr inbounds [5 x i32], [5 x i32]* %129, i64 0, i64 1
  %131 = getelementptr inbounds %"struct.tflite::reference_ops::BroadcastComparison4DSlowCommon", %"struct.tflite::reference_ops::BroadcastComparison4DSlowCommon"* %10, i64 0, i32 0, i32 1, i32 1
  %132 = bitcast [16 x i8]* %131 to i32*
  %133 = getelementptr inbounds %"struct.tflite::reference_ops::BroadcastComparison4DSlowCommon", %"struct.tflite::reference_ops::BroadcastComparison4DSlowCommon"* %10, i64 0, i32 0, i32 1, i32 1, i64 4
  %134 = bitcast i8* %133 to i32*
  %135 = getelementptr inbounds %"struct.tflite::reference_ops::BroadcastComparison4DSlowCommon", %"struct.tflite::reference_ops::BroadcastComparison4DSlowCommon"* %10, i64 0, i32 1, i32 1, i64 0
  %136 = load i32, i32* %135, align 8
  %137 = getelementptr inbounds %"struct.tflite::reference_ops::BroadcastComparison4DSlowCommon", %"struct.tflite::reference_ops::BroadcastComparison4DSlowCommon"* %10, i64 0, i32 1, i32 1, i64 1
  %138 = load i32, i32* %137, align 4
  %139 = getelementptr inbounds %"struct.tflite::reference_ops::BroadcastComparison4DSlowCommon", %"struct.tflite::reference_ops::BroadcastComparison4DSlowCommon"* %10, i64 0, i32 1, i32 1, i64 2
  %140 = load i32, i32* %139, align 8
  %141 = getelementptr inbounds %"struct.tflite::reference_ops::BroadcastComparison4DSlowCommon", %"struct.tflite::reference_ops::BroadcastComparison4DSlowCommon"* %10, i64 0, i32 1, i32 1, i64 3
  %142 = load i32, i32* %141, align 4
  %143 = getelementptr inbounds %"struct.tflite::reference_ops::BroadcastComparison4DSlowCommon", %"struct.tflite::reference_ops::BroadcastComparison4DSlowCommon"* %10, i64 0, i32 2, i32 1, i64 0
  %144 = load i32, i32* %143, align 8
  %145 = getelementptr inbounds %"struct.tflite::reference_ops::BroadcastComparison4DSlowCommon", %"struct.tflite::reference_ops::BroadcastComparison4DSlowCommon"* %10, i64 0, i32 2, i32 1, i64 1
  %146 = load i32, i32* %145, align 4
  %147 = getelementptr inbounds %"struct.tflite::reference_ops::BroadcastComparison4DSlowCommon", %"struct.tflite::reference_ops::BroadcastComparison4DSlowCommon"* %10, i64 0, i32 2, i32 1, i64 2
  %148 = load i32, i32* %147, align 8
  %149 = getelementptr inbounds %"struct.tflite::reference_ops::BroadcastComparison4DSlowCommon", %"struct.tflite::reference_ops::BroadcastComparison4DSlowCommon"* %10, i64 0, i32 2, i32 1, i64 3
  %150 = load i32, i32* %149, align 4
  %151 = getelementptr inbounds i32, i32* %104, i64 1
  %152 = sext i32 %150 to i64
  %153 = sext i32 %142 to i64
  %154 = sext i32 %148 to i64
  %155 = sext i32 %140 to i64
  %156 = sext i32 %146 to i64
  %157 = sext i32 %138 to i64
  %158 = sext i32 %144 to i64
  %159 = sext i32 %136 to i64
  %160 = getelementptr inbounds i32, i32* %124, i64 1
  %161 = select i1 %122, i32* %160, i32* %130
  %162 = getelementptr inbounds i32, i32* %124, i64 2
  %163 = select i1 %122, i32* %162, i32* %132
  %164 = getelementptr inbounds i32, i32* %124, i64 3
  %165 = select i1 %122, i32* %164, i32* %134
  br label %166

166:                                              ; preds = %128, %199
  %167 = phi i32 [ %126, %128 ], [ %200, %199 ]
  %168 = phi i64 [ 0, %128 ], [ %201, %199 ]
  %169 = load i32, i32* %161, align 4
  %170 = icmp sgt i32 %169, 0
  br i1 %170, label %171, label %199

171:                                              ; preds = %166
  %172 = mul nsw i64 %168, %159
  %173 = mul nsw i64 %168, %158
  %174 = trunc i64 %168 to i32
  br label %182

175:                                              ; preds = %199, %103
  %176 = xor i1 %122, true
  %177 = icmp eq i32* %124, null
  %178 = or i1 %177, %176
  br i1 %178, label %181, label %179

179:                                              ; preds = %175
  %180 = bitcast i32* %124 to i8*
  call void @_ZdaPv(i8* %180) #9
  br label %181

181:                                              ; preds = %175, %179
  call void @llvm.lifetime.end.p0i8(i64 96, i8* nonnull %11) #8
  ret void

182:                                              ; preds = %171, %222
  %183 = phi i32 [ %169, %171 ], [ %223, %222 ]
  %184 = phi i64 [ 0, %171 ], [ %224, %222 ]
  %185 = load i32, i32* %163, align 4
  %186 = icmp sgt i32 %185, 0
  br i1 %186, label %187, label %222

187:                                              ; preds = %182
  %188 = mul nsw i64 %184, %157
  %189 = add nsw i64 %188, %172
  %190 = mul nsw i64 %184, %156
  %191 = add nsw i64 %190, %173
  %192 = load i32, i32* %151, align 4
  %193 = mul nsw i32 %192, %174
  %194 = trunc i64 %184 to i32
  %195 = add nsw i32 %193, %194
  %196 = load i32, i32* %165, align 4
  br label %204

197:                                              ; preds = %222
  %198 = load i32, i32* %125, align 4
  br label %199

199:                                              ; preds = %197, %166
  %200 = phi i32 [ %198, %197 ], [ %167, %166 ]
  %201 = add nuw nsw i64 %168, 1
  %202 = sext i32 %200 to i64
  %203 = icmp slt i64 %201, %202
  br i1 %203, label %166, label %175

204:                                              ; preds = %187, %229
  %205 = phi i32 [ %185, %187 ], [ %230, %229 ]
  %206 = phi i32 [ %196, %187 ], [ %231, %229 ]
  %207 = phi i64 [ 0, %187 ], [ %232, %229 ]
  %208 = icmp sgt i32 %206, 0
  br i1 %208, label %209, label %229

209:                                              ; preds = %204
  %210 = mul nsw i64 %207, %155
  %211 = add nsw i64 %189, %210
  %212 = mul nsw i64 %207, %154
  %213 = add nsw i64 %191, %212
  %214 = load i32, i32* %132, align 8
  %215 = mul nsw i32 %195, %214
  %216 = trunc i64 %207 to i32
  %217 = add nsw i32 %215, %216
  %218 = load i32, i32* %134, align 4
  %219 = mul nsw i32 %217, %218
  br label %235

220:                                              ; preds = %229
  %221 = load i32, i32* %161, align 4
  br label %222

222:                                              ; preds = %220, %182
  %223 = phi i32 [ %221, %220 ], [ %183, %182 ]
  %224 = add nuw nsw i64 %184, 1
  %225 = sext i32 %223 to i64
  %226 = icmp slt i64 %224, %225
  br i1 %226, label %182, label %197

227:                                              ; preds = %235
  %228 = load i32, i32* %163, align 4
  br label %229

229:                                              ; preds = %227, %204
  %230 = phi i32 [ %228, %227 ], [ %205, %204 ]
  %231 = phi i32 [ %252, %227 ], [ %206, %204 ]
  %232 = add nuw nsw i64 %207, 1
  %233 = sext i32 %230 to i64
  %234 = icmp slt i64 %232, %233
  br i1 %234, label %204, label %220

235:                                              ; preds = %209, %235
  %236 = phi i64 [ 0, %209 ], [ %251, %235 ]
  %237 = mul nsw i64 %236, %153
  %238 = add nsw i64 %211, %237
  %239 = getelementptr inbounds float, float* %2, i64 %238
  %240 = load float, float* %239, align 4
  %241 = mul nsw i64 %236, %152
  %242 = add nsw i64 %213, %241
  %243 = getelementptr inbounds float, float* %4, i64 %242
  %244 = load float, float* %243, align 4
  %245 = fcmp oge float %240, %244
  %246 = trunc i64 %236 to i32
  %247 = add nsw i32 %219, %246
  %248 = sext i32 %247 to i64
  %249 = getelementptr inbounds i8, i8* %6, i64 %248
  %250 = zext i1 %245 to i8
  store i8 %250, i8* %249, align 1
  %251 = add nuw nsw i64 %236, 1
  %252 = load i32, i32* %165, align 4
  %253 = sext i32 %252 to i64
  %254 = icmp slt i64 %251, %253
  br i1 %254, label %235, label %227
}

; Function Attrs: inlinehint nounwind ssp uwtable
define linkonce_odr hidden void @_ZN6tflite13reference_ops29BroadcastComparison4DSlowImplIiXadL_ZNS0_14GreaterEqualFnIiEEbT_S3_EEEEvRKNS_16ComparisonParamsERKNS_12RuntimeShapeEPKS3_S9_SB_S9_Pb(%"struct.tflite::ComparisonParams"* dereferenceable(32), %"class.tflite::RuntimeShape"* dereferenceable(32), i32*, %"class.tflite::RuntimeShape"* dereferenceable(32), i32*, %"class.tflite::RuntimeShape"* dereferenceable(32), i8*) local_unnamed_addr #4 comdat {
  %8 = alloca %"struct.tflite::NdArrayDesc", align 4
  %9 = alloca %"struct.tflite::NdArrayDesc", align 4
  %10 = alloca %"struct.tflite::reference_ops::BroadcastComparison4DSlowCommon", align 8
  %11 = bitcast %"struct.tflite::reference_ops::BroadcastComparison4DSlowCommon"* %10 to i8*
  call void @llvm.lifetime.start.p0i8(i64 96, i8* nonnull %11) #8
  call void @llvm.memset.p0i8.i64(i8* nonnull align 8 %11, i8 -86, i64 96, i1 false)
  %12 = getelementptr inbounds %"class.tflite::RuntimeShape", %"class.tflite::RuntimeShape"* %5, i64 0, i32 0
  %13 = bitcast %"struct.tflite::NdArrayDesc"* %8 to i8*
  call void @llvm.lifetime.start.p0i8(i64 32, i8* nonnull %13) #8, !noalias !1022
  %14 = bitcast %"struct.tflite::NdArrayDesc"* %9 to i8*
  call void @llvm.memset.p0i8.i64(i8* nonnull align 4 %13, i8 -86, i64 32, i1 false) #8, !noalias !1022
  call void @llvm.lifetime.start.p0i8(i64 32, i8* nonnull %14) #8, !noalias !1022
  call void @llvm.memset.p0i8.i64(i8* nonnull align 4 %14, i8 -86, i64 32, i1 false) #8, !noalias !1022
  call void @_ZN6tflite35NdArrayDescsForElementwiseBroadcastILi4EEEvRKNS_12RuntimeShapeES3_PNS_11NdArrayDescIXT_EEES6_(%"class.tflite::RuntimeShape"* dereferenceable(32) %1, %"class.tflite::RuntimeShape"* dereferenceable(32) %3, %"struct.tflite::NdArrayDesc"* nonnull %8, %"struct.tflite::NdArrayDesc"* nonnull %9) #8, !noalias !1022
  %15 = getelementptr inbounds %"struct.tflite::reference_ops::BroadcastComparison4DSlowCommon", %"struct.tflite::reference_ops::BroadcastComparison4DSlowCommon"* %10, i64 0, i32 0, i32 0
  store i32 0, i32* %15, align 8, !alias.scope !1025
  %16 = load i32, i32* %12, align 8, !noalias !1025
  %17 = icmp sgt i32 %16, 4
  br i1 %17, label %18, label %19

18:                                               ; preds = %7
  call void @abort() #10, !noalias !1025
  unreachable

19:                                               ; preds = %7
  store i32 4, i32* %15, align 8, !alias.scope !1025
  %20 = sub i32 4, %16
  %21 = icmp sgt i32 %20, 0
  %22 = getelementptr inbounds %"struct.tflite::reference_ops::BroadcastComparison4DSlowCommon", %"struct.tflite::reference_ops::BroadcastComparison4DSlowCommon"* %10, i64 0, i32 0, i32 1
  br i1 %21, label %23, label %103

23:                                               ; preds = %19
  %24 = bitcast %union.anon* %22 to [5 x i32]*
  %25 = zext i32 %20 to i64
  %26 = icmp ult i32 %20, 8
  br i1 %26, label %96, label %27

27:                                               ; preds = %23
  %28 = and i64 %25, 4294967288
  %29 = add nsw i64 %28, -8
  %30 = lshr exact i64 %29, 3
  %31 = add nuw nsw i64 %30, 1
  %32 = and i64 %31, 7
  %33 = icmp ult i64 %29, 56
  br i1 %33, label %81, label %34

34:                                               ; preds = %27
  %35 = sub nsw i64 %31, %32
  br label %36

36:                                               ; preds = %36, %34
  %37 = phi i64 [ 0, %34 ], [ %78, %36 ]
  %38 = phi i64 [ %35, %34 ], [ %79, %36 ]
  %39 = getelementptr inbounds [5 x i32], [5 x i32]* %24, i64 0, i64 %37
  %40 = bitcast i32* %39 to <4 x i32>*
  store <4 x i32> <i32 1, i32 1, i32 1, i32 1>, <4 x i32>* %40, align 8, !alias.scope !1025
  %41 = getelementptr inbounds i32, i32* %39, i64 4
  %42 = bitcast i32* %41 to <4 x i32>*
  store <4 x i32> <i32 1, i32 1, i32 1, i32 1>, <4 x i32>* %42, align 8, !alias.scope !1025
  %43 = or i64 %37, 8
  %44 = getelementptr inbounds [5 x i32], [5 x i32]* %24, i64 0, i64 %43
  %45 = bitcast i32* %44 to <4 x i32>*
  store <4 x i32> <i32 1, i32 1, i32 1, i32 1>, <4 x i32>* %45, align 8, !alias.scope !1025
  %46 = getelementptr inbounds i32, i32* %44, i64 4
  %47 = bitcast i32* %46 to <4 x i32>*
  store <4 x i32> <i32 1, i32 1, i32 1, i32 1>, <4 x i32>* %47, align 8, !alias.scope !1025
  %48 = or i64 %37, 16
  %49 = getelementptr inbounds [5 x i32], [5 x i32]* %24, i64 0, i64 %48
  %50 = bitcast i32* %49 to <4 x i32>*
  store <4 x i32> <i32 1, i32 1, i32 1, i32 1>, <4 x i32>* %50, align 8, !alias.scope !1025
  %51 = getelementptr inbounds i32, i32* %49, i64 4
  %52 = bitcast i32* %51 to <4 x i32>*
  store <4 x i32> <i32 1, i32 1, i32 1, i32 1>, <4 x i32>* %52, align 8, !alias.scope !1025
  %53 = or i64 %37, 24
  %54 = getelementptr inbounds [5 x i32], [5 x i32]* %24, i64 0, i64 %53
  %55 = bitcast i32* %54 to <4 x i32>*
  store <4 x i32> <i32 1, i32 1, i32 1, i32 1>, <4 x i32>* %55, align 8, !alias.scope !1025
  %56 = getelementptr inbounds i32, i32* %54, i64 4
  %57 = bitcast i32* %56 to <4 x i32>*
  store <4 x i32> <i32 1, i32 1, i32 1, i32 1>, <4 x i32>* %57, align 8, !alias.scope !1025
  %58 = or i64 %37, 32
  %59 = getelementptr inbounds [5 x i32], [5 x i32]* %24, i64 0, i64 %58
  %60 = bitcast i32* %59 to <4 x i32>*
  store <4 x i32> <i32 1, i32 1, i32 1, i32 1>, <4 x i32>* %60, align 8, !alias.scope !1025
  %61 = getelementptr inbounds i32, i32* %59, i64 4
  %62 = bitcast i32* %61 to <4 x i32>*
  store <4 x i32> <i32 1, i32 1, i32 1, i32 1>, <4 x i32>* %62, align 8, !alias.scope !1025
  %63 = or i64 %37, 40
  %64 = getelementptr inbounds [5 x i32], [5 x i32]* %24, i64 0, i64 %63
  %65 = bitcast i32* %64 to <4 x i32>*
  store <4 x i32> <i32 1, i32 1, i32 1, i32 1>, <4 x i32>* %65, align 8, !alias.scope !1025
  %66 = getelementptr inbounds i32, i32* %64, i64 4
  %67 = bitcast i32* %66 to <4 x i32>*
  store <4 x i32> <i32 1, i32 1, i32 1, i32 1>, <4 x i32>* %67, align 8, !alias.scope !1025
  %68 = or i64 %37, 48
  %69 = getelementptr inbounds [5 x i32], [5 x i32]* %24, i64 0, i64 %68
  %70 = bitcast i32* %69 to <4 x i32>*
  store <4 x i32> <i32 1, i32 1, i32 1, i32 1>, <4 x i32>* %70, align 8, !alias.scope !1025
  %71 = getelementptr inbounds i32, i32* %69, i64 4
  %72 = bitcast i32* %71 to <4 x i32>*
  store <4 x i32> <i32 1, i32 1, i32 1, i32 1>, <4 x i32>* %72, align 8, !alias.scope !1025
  %73 = or i64 %37, 56
  %74 = getelementptr inbounds [5 x i32], [5 x i32]* %24, i64 0, i64 %73
  %75 = bitcast i32* %74 to <4 x i32>*
  store <4 x i32> <i32 1, i32 1, i32 1, i32 1>, <4 x i32>* %75, align 8, !alias.scope !1025
  %76 = getelementptr inbounds i32, i32* %74, i64 4
  %77 = bitcast i32* %76 to <4 x i32>*
  store <4 x i32> <i32 1, i32 1, i32 1, i32 1>, <4 x i32>* %77, align 8, !alias.scope !1025
  %78 = add i64 %37, 64
  %79 = add i64 %38, -8
  %80 = icmp eq i64 %79, 0
  br i1 %80, label %81, label %36, !llvm.loop !1028

81:                                               ; preds = %36, %27
  %82 = phi i64 [ 0, %27 ], [ %78, %36 ]
  %83 = icmp eq i64 %32, 0
  br i1 %83, label %94, label %84

84:                                               ; preds = %81, %84
  %85 = phi i64 [ %91, %84 ], [ %82, %81 ]
  %86 = phi i64 [ %92, %84 ], [ %32, %81 ]
  %87 = getelementptr inbounds [5 x i32], [5 x i32]* %24, i64 0, i64 %85
  %88 = bitcast i32* %87 to <4 x i32>*
  store <4 x i32> <i32 1, i32 1, i32 1, i32 1>, <4 x i32>* %88, align 8, !alias.scope !1025
  %89 = getelementptr inbounds i32, i32* %87, i64 4
  %90 = bitcast i32* %89 to <4 x i32>*
  store <4 x i32> <i32 1, i32 1, i32 1, i32 1>, <4 x i32>* %90, align 8, !alias.scope !1025
  %91 = add i64 %85, 8
  %92 = add i64 %86, -1
  %93 = icmp eq i64 %92, 0
  br i1 %93, label %94, label %84, !llvm.loop !1029

94:                                               ; preds = %84, %81
  %95 = icmp eq i64 %28, %25
  br i1 %95, label %103, label %96

96:                                               ; preds = %94, %23
  %97 = phi i64 [ 0, %23 ], [ %28, %94 ]
  br label %98

98:                                               ; preds = %96, %98
  %99 = phi i64 [ %101, %98 ], [ %97, %96 ]
  %100 = getelementptr inbounds [5 x i32], [5 x i32]* %24, i64 0, i64 %99
  store i32 1, i32* %100, align 4, !alias.scope !1025
  %101 = add nuw nsw i64 %99, 1
  %102 = icmp eq i64 %101, %25
  br i1 %102, label %103, label %98, !llvm.loop !1030

103:                                              ; preds = %98, %94, %19
  %104 = bitcast %union.anon* %22 to i32*
  %105 = sext i32 %20 to i64
  %106 = getelementptr inbounds i32, i32* %104, i64 %105
  %107 = bitcast i32* %106 to i8*
  %108 = icmp sgt i32 %16, 5
  %109 = getelementptr inbounds %"class.tflite::RuntimeShape", %"class.tflite::RuntimeShape"* %5, i64 0, i32 1
  %110 = getelementptr inbounds %union.anon, %union.anon* %109, i64 0, i32 0
  %111 = load i32*, i32** %110, align 8, !noalias !1025
  %112 = bitcast %union.anon* %109 to i32*
  %113 = select i1 %108, i32* %111, i32* %112
  %114 = bitcast i32* %113 to i8*
  %115 = sext i32 %16 to i64
  %116 = shl nsw i64 %115, 2
  call void @llvm.memcpy.p0i8.p0i8.i64(i8* align 4 %107, i8* align 4 %114, i64 %116, i1 false) #8
  %117 = getelementptr inbounds %"struct.tflite::reference_ops::BroadcastComparison4DSlowCommon", %"struct.tflite::reference_ops::BroadcastComparison4DSlowCommon"* %10, i64 0, i32 1
  %118 = bitcast %"struct.tflite::NdArrayDesc"* %117 to i8*
  call void @llvm.memcpy.p0i8.p0i8.i64(i8* align 8 %118, i8* nonnull align 4 %13, i64 32, i1 false) #8
  %119 = getelementptr inbounds %"struct.tflite::reference_ops::BroadcastComparison4DSlowCommon", %"struct.tflite::reference_ops::BroadcastComparison4DSlowCommon"* %10, i64 0, i32 2
  %120 = bitcast %"struct.tflite::NdArrayDesc"* %119 to i8*
  call void @llvm.memcpy.p0i8.p0i8.i64(i8* align 8 %120, i8* nonnull align 4 %14, i64 32, i1 false) #8
  call void @llvm.lifetime.end.p0i8(i64 32, i8* nonnull %14) #8, !noalias !1022
  call void @llvm.lifetime.end.p0i8(i64 32, i8* nonnull %13) #8, !noalias !1022
  %121 = load i32, i32* %15, align 8
  %122 = icmp sgt i32 %121, 5
  %123 = getelementptr inbounds %union.anon, %union.anon* %22, i64 0, i32 0
  %124 = load i32*, i32** %123, align 8
  %125 = select i1 %122, i32* %124, i32* %104
  %126 = load i32, i32* %125, align 4
  %127 = icmp sgt i32 %126, 0
  br i1 %127, label %128, label %175

128:                                              ; preds = %103
  %129 = bitcast %union.anon* %22 to [5 x i32]*
  %130 = getelementptr inbounds [5 x i32], [5 x i32]* %129, i64 0, i64 1
  %131 = getelementptr inbounds %"struct.tflite::reference_ops::BroadcastComparison4DSlowCommon", %"struct.tflite::reference_ops::BroadcastComparison4DSlowCommon"* %10, i64 0, i32 0, i32 1, i32 1
  %132 = bitcast [16 x i8]* %131 to i32*
  %133 = getelementptr inbounds %"struct.tflite::reference_ops::BroadcastComparison4DSlowCommon", %"struct.tflite::reference_ops::BroadcastComparison4DSlowCommon"* %10, i64 0, i32 0, i32 1, i32 1, i64 4
  %134 = bitcast i8* %133 to i32*
  %135 = getelementptr inbounds %"struct.tflite::reference_ops::BroadcastComparison4DSlowCommon", %"struct.tflite::reference_ops::BroadcastComparison4DSlowCommon"* %10, i64 0, i32 1, i32 1, i64 0
  %136 = load i32, i32* %135, align 8
  %137 = getelementptr inbounds %"struct.tflite::reference_ops::BroadcastComparison4DSlowCommon", %"struct.tflite::reference_ops::BroadcastComparison4DSlowCommon"* %10, i64 0, i32 1, i32 1, i64 1
  %138 = load i32, i32* %137, align 4
  %139 = getelementptr inbounds %"struct.tflite::reference_ops::BroadcastComparison4DSlowCommon", %"struct.tflite::reference_ops::BroadcastComparison4DSlowCommon"* %10, i64 0, i32 1, i32 1, i64 2
  %140 = load i32, i32* %139, align 8
  %141 = getelementptr inbounds %"struct.tflite::reference_ops::BroadcastComparison4DSlowCommon", %"struct.tflite::reference_ops::BroadcastComparison4DSlowCommon"* %10, i64 0, i32 1, i32 1, i64 3
  %142 = load i32, i32* %141, align 4
  %143 = getelementptr inbounds %"struct.tflite::reference_ops::BroadcastComparison4DSlowCommon", %"struct.tflite::reference_ops::BroadcastComparison4DSlowCommon"* %10, i64 0, i32 2, i32 1, i64 0
  %144 = load i32, i32* %143, align 8
  %145 = getelementptr inbounds %"struct.tflite::reference_ops::BroadcastComparison4DSlowCommon", %"struct.tflite::reference_ops::BroadcastComparison4DSlowCommon"* %10, i64 0, i32 2, i32 1, i64 1
  %146 = load i32, i32* %145, align 4
  %147 = getelementptr inbounds %"struct.tflite::reference_ops::BroadcastComparison4DSlowCommon", %"struct.tflite::reference_ops::BroadcastComparison4DSlowCommon"* %10, i64 0, i32 2, i32 1, i64 2
  %148 = load i32, i32* %147, align 8
  %149 = getelementptr inbounds %"struct.tflite::reference_ops::BroadcastComparison4DSlowCommon", %"struct.tflite::reference_ops::BroadcastComparison4DSlowCommon"* %10, i64 0, i32 2, i32 1, i64 3
  %150 = load i32, i32* %149, align 4
  %151 = getelementptr inbounds i32, i32* %104, i64 1
  %152 = sext i32 %150 to i64
  %153 = sext i32 %142 to i64
  %154 = sext i32 %148 to i64
  %155 = sext i32 %140 to i64
  %156 = sext i32 %146 to i64
  %157 = sext i32 %138 to i64
  %158 = sext i32 %144 to i64
  %159 = sext i32 %136 to i64
  %160 = getelementptr inbounds i32, i32* %124, i64 1
  %161 = select i1 %122, i32* %160, i32* %130
  %162 = getelementptr inbounds i32, i32* %124, i64 2
  %163 = select i1 %122, i32* %162, i32* %132
  %164 = getelementptr inbounds i32, i32* %124, i64 3
  %165 = select i1 %122, i32* %164, i32* %134
  br label %166

166:                                              ; preds = %128, %199
  %167 = phi i32 [ %126, %128 ], [ %200, %199 ]
  %168 = phi i64 [ 0, %128 ], [ %201, %199 ]
  %169 = load i32, i32* %161, align 4
  %170 = icmp sgt i32 %169, 0
  br i1 %170, label %171, label %199

171:                                              ; preds = %166
  %172 = mul nsw i64 %168, %159
  %173 = mul nsw i64 %168, %158
  %174 = trunc i64 %168 to i32
  br label %182

175:                                              ; preds = %199, %103
  %176 = xor i1 %122, true
  %177 = icmp eq i32* %124, null
  %178 = or i1 %177, %176
  br i1 %178, label %181, label %179

179:                                              ; preds = %175
  %180 = bitcast i32* %124 to i8*
  call void @_ZdaPv(i8* %180) #9
  br label %181

181:                                              ; preds = %175, %179
  call void @llvm.lifetime.end.p0i8(i64 96, i8* nonnull %11) #8
  ret void

182:                                              ; preds = %171, %222
  %183 = phi i32 [ %169, %171 ], [ %223, %222 ]
  %184 = phi i64 [ 0, %171 ], [ %224, %222 ]
  %185 = load i32, i32* %163, align 4
  %186 = icmp sgt i32 %185, 0
  br i1 %186, label %187, label %222

187:                                              ; preds = %182
  %188 = mul nsw i64 %184, %157
  %189 = add nsw i64 %188, %172
  %190 = mul nsw i64 %184, %156
  %191 = add nsw i64 %190, %173
  %192 = load i32, i32* %151, align 4
  %193 = mul nsw i32 %192, %174
  %194 = trunc i64 %184 to i32
  %195 = add nsw i32 %193, %194
  %196 = load i32, i32* %165, align 4
  br label %204

197:                                              ; preds = %222
  %198 = load i32, i32* %125, align 4
  br label %199

199:                                              ; preds = %197, %166
  %200 = phi i32 [ %198, %197 ], [ %167, %166 ]
  %201 = add nuw nsw i64 %168, 1
  %202 = sext i32 %200 to i64
  %203 = icmp slt i64 %201, %202
  br i1 %203, label %166, label %175

204:                                              ; preds = %187, %229
  %205 = phi i32 [ %185, %187 ], [ %230, %229 ]
  %206 = phi i32 [ %196, %187 ], [ %231, %229 ]
  %207 = phi i64 [ 0, %187 ], [ %232, %229 ]
  %208 = icmp sgt i32 %206, 0
  br i1 %208, label %209, label %229

209:                                              ; preds = %204
  %210 = mul nsw i64 %207, %155
  %211 = add nsw i64 %189, %210
  %212 = mul nsw i64 %207, %154
  %213 = add nsw i64 %191, %212
  %214 = load i32, i32* %132, align 8
  %215 = mul nsw i32 %195, %214
  %216 = trunc i64 %207 to i32
  %217 = add nsw i32 %215, %216
  %218 = load i32, i32* %134, align 4
  %219 = mul nsw i32 %217, %218
  br label %235

220:                                              ; preds = %229
  %221 = load i32, i32* %161, align 4
  br label %222

222:                                              ; preds = %220, %182
  %223 = phi i32 [ %221, %220 ], [ %183, %182 ]
  %224 = add nuw nsw i64 %184, 1
  %225 = sext i32 %223 to i64
  %226 = icmp slt i64 %224, %225
  br i1 %226, label %182, label %197

227:                                              ; preds = %235
  %228 = load i32, i32* %163, align 4
  br label %229

229:                                              ; preds = %227, %204
  %230 = phi i32 [ %228, %227 ], [ %205, %204 ]
  %231 = phi i32 [ %252, %227 ], [ %206, %204 ]
  %232 = add nuw nsw i64 %207, 1
  %233 = sext i32 %230 to i64
  %234 = icmp slt i64 %232, %233
  br i1 %234, label %204, label %220

235:                                              ; preds = %209, %235
  %236 = phi i64 [ 0, %209 ], [ %251, %235 ]
  %237 = mul nsw i64 %236, %153
  %238 = add nsw i64 %211, %237
  %239 = getelementptr inbounds i32, i32* %2, i64 %238
  %240 = load i32, i32* %239, align 4
  %241 = mul nsw i64 %236, %152
  %242 = add nsw i64 %213, %241
  %243 = getelementptr inbounds i32, i32* %4, i64 %242
  %244 = load i32, i32* %243, align 4
  %245 = icmp sge i32 %240, %244
  %246 = trunc i64 %236 to i32
  %247 = add nsw i32 %219, %246
  %248 = sext i32 %247 to i64
  %249 = getelementptr inbounds i8, i8* %6, i64 %248
  %250 = zext i1 %245 to i8
  store i8 %250, i8* %249, align 1
  %251 = add nuw nsw i64 %236, 1
  %252 = load i32, i32* %165, align 4
  %253 = sext i32 %252 to i64
  %254 = icmp slt i64 %251, %253
  br i1 %254, label %235, label %227
}

; Function Attrs: inlinehint nounwind ssp uwtable
define linkonce_odr hidden void @_ZN6tflite13reference_ops29BroadcastComparison4DSlowImplIlXadL_ZNS0_14GreaterEqualFnIlEEbT_S3_EEEEvRKNS_16ComparisonParamsERKNS_12RuntimeShapeEPKS3_S9_SB_S9_Pb(%"struct.tflite::ComparisonParams"* dereferenceable(32), %"class.tflite::RuntimeShape"* dereferenceable(32), i64*, %"class.tflite::RuntimeShape"* dereferenceable(32), i64*, %"class.tflite::RuntimeShape"* dereferenceable(32), i8*) local_unnamed_addr #4 comdat {
  %8 = alloca %"struct.tflite::NdArrayDesc", align 4
  %9 = alloca %"struct.tflite::NdArrayDesc", align 4
  %10 = alloca %"struct.tflite::reference_ops::BroadcastComparison4DSlowCommon", align 8
  %11 = bitcast %"struct.tflite::reference_ops::BroadcastComparison4DSlowCommon"* %10 to i8*
  call void @llvm.lifetime.start.p0i8(i64 96, i8* nonnull %11) #8
  call void @llvm.memset.p0i8.i64(i8* nonnull align 8 %11, i8 -86, i64 96, i1 false)
  %12 = getelementptr inbounds %"class.tflite::RuntimeShape", %"class.tflite::RuntimeShape"* %5, i64 0, i32 0
  %13 = bitcast %"struct.tflite::NdArrayDesc"* %8 to i8*
  call void @llvm.lifetime.start.p0i8(i64 32, i8* nonnull %13) #8, !noalias !1031
  %14 = bitcast %"struct.tflite::NdArrayDesc"* %9 to i8*
  call void @llvm.memset.p0i8.i64(i8* nonnull align 4 %13, i8 -86, i64 32, i1 false) #8, !noalias !1031
  call void @llvm.lifetime.start.p0i8(i64 32, i8* nonnull %14) #8, !noalias !1031
  call void @llvm.memset.p0i8.i64(i8* nonnull align 4 %14, i8 -86, i64 32, i1 false) #8, !noalias !1031
  call void @_ZN6tflite35NdArrayDescsForElementwiseBroadcastILi4EEEvRKNS_12RuntimeShapeES3_PNS_11NdArrayDescIXT_EEES6_(%"class.tflite::RuntimeShape"* dereferenceable(32) %1, %"class.tflite::RuntimeShape"* dereferenceable(32) %3, %"struct.tflite::NdArrayDesc"* nonnull %8, %"struct.tflite::NdArrayDesc"* nonnull %9) #8, !noalias !1031
  %15 = getelementptr inbounds %"struct.tflite::reference_ops::BroadcastComparison4DSlowCommon", %"struct.tflite::reference_ops::BroadcastComparison4DSlowCommon"* %10, i64 0, i32 0, i32 0
  store i32 0, i32* %15, align 8, !alias.scope !1034
  %16 = load i32, i32* %12, align 8, !noalias !1034
  %17 = icmp sgt i32 %16, 4
  br i1 %17, label %18, label %19

18:                                               ; preds = %7
  call void @abort() #10, !noalias !1034
  unreachable

19:                                               ; preds = %7
  store i32 4, i32* %15, align 8, !alias.scope !1034
  %20 = sub i32 4, %16
  %21 = icmp sgt i32 %20, 0
  %22 = getelementptr inbounds %"struct.tflite::reference_ops::BroadcastComparison4DSlowCommon", %"struct.tflite::reference_ops::BroadcastComparison4DSlowCommon"* %10, i64 0, i32 0, i32 1
  br i1 %21, label %23, label %103

23:                                               ; preds = %19
  %24 = bitcast %union.anon* %22 to [5 x i32]*
  %25 = zext i32 %20 to i64
  %26 = icmp ult i32 %20, 8
  br i1 %26, label %96, label %27

27:                                               ; preds = %23
  %28 = and i64 %25, 4294967288
  %29 = add nsw i64 %28, -8
  %30 = lshr exact i64 %29, 3
  %31 = add nuw nsw i64 %30, 1
  %32 = and i64 %31, 7
  %33 = icmp ult i64 %29, 56
  br i1 %33, label %81, label %34

34:                                               ; preds = %27
  %35 = sub nsw i64 %31, %32
  br label %36

36:                                               ; preds = %36, %34
  %37 = phi i64 [ 0, %34 ], [ %78, %36 ]
  %38 = phi i64 [ %35, %34 ], [ %79, %36 ]
  %39 = getelementptr inbounds [5 x i32], [5 x i32]* %24, i64 0, i64 %37
  %40 = bitcast i32* %39 to <4 x i32>*
  store <4 x i32> <i32 1, i32 1, i32 1, i32 1>, <4 x i32>* %40, align 8, !alias.scope !1034
  %41 = getelementptr inbounds i32, i32* %39, i64 4
  %42 = bitcast i32* %41 to <4 x i32>*
  store <4 x i32> <i32 1, i32 1, i32 1, i32 1>, <4 x i32>* %42, align 8, !alias.scope !1034
  %43 = or i64 %37, 8
  %44 = getelementptr inbounds [5 x i32], [5 x i32]* %24, i64 0, i64 %43
  %45 = bitcast i32* %44 to <4 x i32>*
  store <4 x i32> <i32 1, i32 1, i32 1, i32 1>, <4 x i32>* %45, align 8, !alias.scope !1034
  %46 = getelementptr inbounds i32, i32* %44, i64 4
  %47 = bitcast i32* %46 to <4 x i32>*
  store <4 x i32> <i32 1, i32 1, i32 1, i32 1>, <4 x i32>* %47, align 8, !alias.scope !1034
  %48 = or i64 %37, 16
  %49 = getelementptr inbounds [5 x i32], [5 x i32]* %24, i64 0, i64 %48
  %50 = bitcast i32* %49 to <4 x i32>*
  store <4 x i32> <i32 1, i32 1, i32 1, i32 1>, <4 x i32>* %50, align 8, !alias.scope !1034
  %51 = getelementptr inbounds i32, i32* %49, i64 4
  %52 = bitcast i32* %51 to <4 x i32>*
  store <4 x i32> <i32 1, i32 1, i32 1, i32 1>, <4 x i32>* %52, align 8, !alias.scope !1034
  %53 = or i64 %37, 24
  %54 = getelementptr inbounds [5 x i32], [5 x i32]* %24, i64 0, i64 %53
  %55 = bitcast i32* %54 to <4 x i32>*
  store <4 x i32> <i32 1, i32 1, i32 1, i32 1>, <4 x i32>* %55, align 8, !alias.scope !1034
  %56 = getelementptr inbounds i32, i32* %54, i64 4
  %57 = bitcast i32* %56 to <4 x i32>*
  store <4 x i32> <i32 1, i32 1, i32 1, i32 1>, <4 x i32>* %57, align 8, !alias.scope !1034
  %58 = or i64 %37, 32
  %59 = getelementptr inbounds [5 x i32], [5 x i32]* %24, i64 0, i64 %58
  %60 = bitcast i32* %59 to <4 x i32>*
  store <4 x i32> <i32 1, i32 1, i32 1, i32 1>, <4 x i32>* %60, align 8, !alias.scope !1034
  %61 = getelementptr inbounds i32, i32* %59, i64 4
  %62 = bitcast i32* %61 to <4 x i32>*
  store <4 x i32> <i32 1, i32 1, i32 1, i32 1>, <4 x i32>* %62, align 8, !alias.scope !1034
  %63 = or i64 %37, 40
  %64 = getelementptr inbounds [5 x i32], [5 x i32]* %24, i64 0, i64 %63
  %65 = bitcast i32* %64 to <4 x i32>*
  store <4 x i32> <i32 1, i32 1, i32 1, i32 1>, <4 x i32>* %65, align 8, !alias.scope !1034
  %66 = getelementptr inbounds i32, i32* %64, i64 4
  %67 = bitcast i32* %66 to <4 x i32>*
  store <4 x i32> <i32 1, i32 1, i32 1, i32 1>, <4 x i32>* %67, align 8, !alias.scope !1034
  %68 = or i64 %37, 48
  %69 = getelementptr inbounds [5 x i32], [5 x i32]* %24, i64 0, i64 %68
  %70 = bitcast i32* %69 to <4 x i32>*
  store <4 x i32> <i32 1, i32 1, i32 1, i32 1>, <4 x i32>* %70, align 8, !alias.scope !1034
  %71 = getelementptr inbounds i32, i32* %69, i64 4
  %72 = bitcast i32* %71 to <4 x i32>*
  store <4 x i32> <i32 1, i32 1, i32 1, i32 1>, <4 x i32>* %72, align 8, !alias.scope !1034
  %73 = or i64 %37, 56
  %74 = getelementptr inbounds [5 x i32], [5 x i32]* %24, i64 0, i64 %73
  %75 = bitcast i32* %74 to <4 x i32>*
  store <4 x i32> <i32 1, i32 1, i32 1, i32 1>, <4 x i32>* %75, align 8, !alias.scope !1034
  %76 = getelementptr inbounds i32, i32* %74, i64 4
  %77 = bitcast i32* %76 to <4 x i32>*
  store <4 x i32> <i32 1, i32 1, i32 1, i32 1>, <4 x i32>* %77, align 8, !alias.scope !1034
  %78 = add i64 %37, 64
  %79 = add i64 %38, -8
  %80 = icmp eq i64 %79, 0
  br i1 %80, label %81, label %36, !llvm.loop !1037

81:                                               ; preds = %36, %27
  %82 = phi i64 [ 0, %27 ], [ %78, %36 ]
  %83 = icmp eq i64 %32, 0
  br i1 %83, label %94, label %84

84:                                               ; preds = %81, %84
  %85 = phi i64 [ %91, %84 ], [ %82, %81 ]
  %86 = phi i64 [ %92, %84 ], [ %32, %81 ]
  %87 = getelementptr inbounds [5 x i32], [5 x i32]* %24, i64 0, i64 %85
  %88 = bitcast i32* %87 to <4 x i32>*
  store <4 x i32> <i32 1, i32 1, i32 1, i32 1>, <4 x i32>* %88, align 8, !alias.scope !1034
  %89 = getelementptr inbounds i32, i32* %87, i64 4
  %90 = bitcast i32* %89 to <4 x i32>*
  store <4 x i32> <i32 1, i32 1, i32 1, i32 1>, <4 x i32>* %90, align 8, !alias.scope !1034
  %91 = add i64 %85, 8
  %92 = add i64 %86, -1
  %93 = icmp eq i64 %92, 0
  br i1 %93, label %94, label %84, !llvm.loop !1038

94:                                               ; preds = %84, %81
  %95 = icmp eq i64 %28, %25
  br i1 %95, label %103, label %96

96:                                               ; preds = %94, %23
  %97 = phi i64 [ 0, %23 ], [ %28, %94 ]
  br label %98

98:                                               ; preds = %96, %98
  %99 = phi i64 [ %101, %98 ], [ %97, %96 ]
  %100 = getelementptr inbounds [5 x i32], [5 x i32]* %24, i64 0, i64 %99
  store i32 1, i32* %100, align 4, !alias.scope !1034
  %101 = add nuw nsw i64 %99, 1
  %102 = icmp eq i64 %101, %25
  br i1 %102, label %103, label %98, !llvm.loop !1039

103:                                              ; preds = %98, %94, %19
  %104 = bitcast %union.anon* %22 to i32*
  %105 = sext i32 %20 to i64
  %106 = getelementptr inbounds i32, i32* %104, i64 %105
  %107 = bitcast i32* %106 to i8*
  %108 = icmp sgt i32 %16, 5
  %109 = getelementptr inbounds %"class.tflite::RuntimeShape", %"class.tflite::RuntimeShape"* %5, i64 0, i32 1
  %110 = getelementptr inbounds %union.anon, %union.anon* %109, i64 0, i32 0
  %111 = load i32*, i32** %110, align 8, !noalias !1034
  %112 = bitcast %union.anon* %109 to i32*
  %113 = select i1 %108, i32* %111, i32* %112
  %114 = bitcast i32* %113 to i8*
  %115 = sext i32 %16 to i64
  %116 = shl nsw i64 %115, 2
  call void @llvm.memcpy.p0i8.p0i8.i64(i8* align 4 %107, i8* align 4 %114, i64 %116, i1 false) #8
  %117 = getelementptr inbounds %"struct.tflite::reference_ops::BroadcastComparison4DSlowCommon", %"struct.tflite::reference_ops::BroadcastComparison4DSlowCommon"* %10, i64 0, i32 1
  %118 = bitcast %"struct.tflite::NdArrayDesc"* %117 to i8*
  call void @llvm.memcpy.p0i8.p0i8.i64(i8* align 8 %118, i8* nonnull align 4 %13, i64 32, i1 false) #8
  %119 = getelementptr inbounds %"struct.tflite::reference_ops::BroadcastComparison4DSlowCommon", %"struct.tflite::reference_ops::BroadcastComparison4DSlowCommon"* %10, i64 0, i32 2
  %120 = bitcast %"struct.tflite::NdArrayDesc"* %119 to i8*
  call void @llvm.memcpy.p0i8.p0i8.i64(i8* align 8 %120, i8* nonnull align 4 %14, i64 32, i1 false) #8
  call void @llvm.lifetime.end.p0i8(i64 32, i8* nonnull %14) #8, !noalias !1031
  call void @llvm.lifetime.end.p0i8(i64 32, i8* nonnull %13) #8, !noalias !1031
  %121 = load i32, i32* %15, align 8
  %122 = icmp sgt i32 %121, 5
  %123 = getelementptr inbounds %union.anon, %union.anon* %22, i64 0, i32 0
  %124 = load i32*, i32** %123, align 8
  %125 = select i1 %122, i32* %124, i32* %104
  %126 = load i32, i32* %125, align 4
  %127 = icmp sgt i32 %126, 0
  br i1 %127, label %128, label %175

128:                                              ; preds = %103
  %129 = bitcast %union.anon* %22 to [5 x i32]*
  %130 = getelementptr inbounds [5 x i32], [5 x i32]* %129, i64 0, i64 1
  %131 = getelementptr inbounds %"struct.tflite::reference_ops::BroadcastComparison4DSlowCommon", %"struct.tflite::reference_ops::BroadcastComparison4DSlowCommon"* %10, i64 0, i32 0, i32 1, i32 1
  %132 = bitcast [16 x i8]* %131 to i32*
  %133 = getelementptr inbounds %"struct.tflite::reference_ops::BroadcastComparison4DSlowCommon", %"struct.tflite::reference_ops::BroadcastComparison4DSlowCommon"* %10, i64 0, i32 0, i32 1, i32 1, i64 4
  %134 = bitcast i8* %133 to i32*
  %135 = getelementptr inbounds %"struct.tflite::reference_ops::BroadcastComparison4DSlowCommon", %"struct.tflite::reference_ops::BroadcastComparison4DSlowCommon"* %10, i64 0, i32 1, i32 1, i64 0
  %136 = load i32, i32* %135, align 8
  %137 = getelementptr inbounds %"struct.tflite::reference_ops::BroadcastComparison4DSlowCommon", %"struct.tflite::reference_ops::BroadcastComparison4DSlowCommon"* %10, i64 0, i32 1, i32 1, i64 1
  %138 = load i32, i32* %137, align 4
  %139 = getelementptr inbounds %"struct.tflite::reference_ops::BroadcastComparison4DSlowCommon", %"struct.tflite::reference_ops::BroadcastComparison4DSlowCommon"* %10, i64 0, i32 1, i32 1, i64 2
  %140 = load i32, i32* %139, align 8
  %141 = getelementptr inbounds %"struct.tflite::reference_ops::BroadcastComparison4DSlowCommon", %"struct.tflite::reference_ops::BroadcastComparison4DSlowCommon"* %10, i64 0, i32 1, i32 1, i64 3
  %142 = load i32, i32* %141, align 4
  %143 = getelementptr inbounds %"struct.tflite::reference_ops::BroadcastComparison4DSlowCommon", %"struct.tflite::reference_ops::BroadcastComparison4DSlowCommon"* %10, i64 0, i32 2, i32 1, i64 0
  %144 = load i32, i32* %143, align 8
  %145 = getelementptr inbounds %"struct.tflite::reference_ops::BroadcastComparison4DSlowCommon", %"struct.tflite::reference_ops::BroadcastComparison4DSlowCommon"* %10, i64 0, i32 2, i32 1, i64 1
  %146 = load i32, i32* %145, align 4
  %147 = getelementptr inbounds %"struct.tflite::reference_ops::BroadcastComparison4DSlowCommon", %"struct.tflite::reference_ops::BroadcastComparison4DSlowCommon"* %10, i64 0, i32 2, i32 1, i64 2
  %148 = load i32, i32* %147, align 8
  %149 = getelementptr inbounds %"struct.tflite::reference_ops::BroadcastComparison4DSlowCommon", %"struct.tflite::reference_ops::BroadcastComparison4DSlowCommon"* %10, i64 0, i32 2, i32 1, i64 3
  %150 = load i32, i32* %149, align 4
  %151 = getelementptr inbounds i32, i32* %104, i64 1
  %152 = sext i32 %150 to i64
  %153 = sext i32 %142 to i64
  %154 = sext i32 %148 to i64
  %155 = sext i32 %140 to i64
  %156 = sext i32 %146 to i64
  %157 = sext i32 %138 to i64
  %158 = sext i32 %144 to i64
  %159 = sext i32 %136 to i64
  %160 = getelementptr inbounds i32, i32* %124, i64 1
  %161 = select i1 %122, i32* %160, i32* %130
  %162 = getelementptr inbounds i32, i32* %124, i64 2
  %163 = select i1 %122, i32* %162, i32* %132
  %164 = getelementptr inbounds i32, i32* %124, i64 3
  %165 = select i1 %122, i32* %164, i32* %134
  br label %166

166:                                              ; preds = %128, %199
  %167 = phi i32 [ %126, %128 ], [ %200, %199 ]
  %168 = phi i64 [ 0, %128 ], [ %201, %199 ]
  %169 = load i32, i32* %161, align 4
  %170 = icmp sgt i32 %169, 0
  br i1 %170, label %171, label %199

171:                                              ; preds = %166
  %172 = mul nsw i64 %168, %159
  %173 = mul nsw i64 %168, %158
  %174 = trunc i64 %168 to i32
  br label %182

175:                                              ; preds = %199, %103
  %176 = xor i1 %122, true
  %177 = icmp eq i32* %124, null
  %178 = or i1 %177, %176
  br i1 %178, label %181, label %179

179:                                              ; preds = %175
  %180 = bitcast i32* %124 to i8*
  call void @_ZdaPv(i8* %180) #9
  br label %181

181:                                              ; preds = %175, %179
  call void @llvm.lifetime.end.p0i8(i64 96, i8* nonnull %11) #8
  ret void

182:                                              ; preds = %171, %222
  %183 = phi i32 [ %169, %171 ], [ %223, %222 ]
  %184 = phi i64 [ 0, %171 ], [ %224, %222 ]
  %185 = load i32, i32* %163, align 4
  %186 = icmp sgt i32 %185, 0
  br i1 %186, label %187, label %222

187:                                              ; preds = %182
  %188 = mul nsw i64 %184, %157
  %189 = add nsw i64 %188, %172
  %190 = mul nsw i64 %184, %156
  %191 = add nsw i64 %190, %173
  %192 = load i32, i32* %151, align 4
  %193 = mul nsw i32 %192, %174
  %194 = trunc i64 %184 to i32
  %195 = add nsw i32 %193, %194
  %196 = load i32, i32* %165, align 4
  br label %204

197:                                              ; preds = %222
  %198 = load i32, i32* %125, align 4
  br label %199

199:                                              ; preds = %197, %166
  %200 = phi i32 [ %198, %197 ], [ %167, %166 ]
  %201 = add nuw nsw i64 %168, 1
  %202 = sext i32 %200 to i64
  %203 = icmp slt i64 %201, %202
  br i1 %203, label %166, label %175

204:                                              ; preds = %187, %229
  %205 = phi i32 [ %185, %187 ], [ %230, %229 ]
  %206 = phi i32 [ %196, %187 ], [ %231, %229 ]
  %207 = phi i64 [ 0, %187 ], [ %232, %229 ]
  %208 = icmp sgt i32 %206, 0
  br i1 %208, label %209, label %229

209:                                              ; preds = %204
  %210 = mul nsw i64 %207, %155
  %211 = add nsw i64 %189, %210
  %212 = mul nsw i64 %207, %154
  %213 = add nsw i64 %191, %212
  %214 = load i32, i32* %132, align 8
  %215 = mul nsw i32 %195, %214
  %216 = trunc i64 %207 to i32
  %217 = add nsw i32 %215, %216
  %218 = load i32, i32* %134, align 4
  %219 = mul nsw i32 %217, %218
  br label %235

220:                                              ; preds = %229
  %221 = load i32, i32* %161, align 4
  br label %222

222:                                              ; preds = %220, %182
  %223 = phi i32 [ %221, %220 ], [ %183, %182 ]
  %224 = add nuw nsw i64 %184, 1
  %225 = sext i32 %223 to i64
  %226 = icmp slt i64 %224, %225
  br i1 %226, label %182, label %197

227:                                              ; preds = %235
  %228 = load i32, i32* %163, align 4
  br label %229

229:                                              ; preds = %227, %204
  %230 = phi i32 [ %228, %227 ], [ %205, %204 ]
  %231 = phi i32 [ %252, %227 ], [ %206, %204 ]
  %232 = add nuw nsw i64 %207, 1
  %233 = sext i32 %230 to i64
  %234 = icmp slt i64 %232, %233
  br i1 %234, label %204, label %220

235:                                              ; preds = %209, %235
  %236 = phi i64 [ 0, %209 ], [ %251, %235 ]
  %237 = mul nsw i64 %236, %153
  %238 = add nsw i64 %211, %237
  %239 = getelementptr inbounds i64, i64* %2, i64 %238
  %240 = load i64, i64* %239, align 8
  %241 = mul nsw i64 %236, %152
  %242 = add nsw i64 %213, %241
  %243 = getelementptr inbounds i64, i64* %4, i64 %242
  %244 = load i64, i64* %243, align 8
  %245 = icmp sge i64 %240, %244
  %246 = trunc i64 %236 to i32
  %247 = add nsw i32 %219, %246
  %248 = sext i32 %247 to i64
  %249 = getelementptr inbounds i8, i8* %6, i64 %248
  %250 = zext i1 %245 to i8
  store i8 %250, i8* %249, align 1
  %251 = add nuw nsw i64 %236, 1
  %252 = load i32, i32* %165, align 4
  %253 = sext i32 %252 to i64
  %254 = icmp slt i64 %251, %253
  br i1 %254, label %235, label %227
}

; Function Attrs: inlinehint nounwind ssp uwtable
define linkonce_odr hidden void @_ZN6tflite13reference_ops36BroadcastComparison4DSlowWithScalingIhXadL_ZNS0_14GreaterEqualFnIiEEbT_S3_EEEEvRKNS_16ComparisonParamsERKNS_12RuntimeShapeEPKS3_S9_SB_S9_Pb(%"struct.tflite::ComparisonParams"* dereferenceable(32), %"class.tflite::RuntimeShape"* dereferenceable(32), i8*, %"class.tflite::RuntimeShape"* dereferenceable(32), i8*, %"class.tflite::RuntimeShape"* dereferenceable(32), i8*) local_unnamed_addr #4 comdat {
  %8 = alloca %"struct.tflite::NdArrayDesc", align 4
  %9 = alloca %"struct.tflite::NdArrayDesc", align 4
  %10 = alloca %"struct.tflite::reference_ops::BroadcastComparison4DSlowCommon", align 8
  %11 = bitcast %"struct.tflite::reference_ops::BroadcastComparison4DSlowCommon"* %10 to i8*
  call void @llvm.lifetime.start.p0i8(i64 96, i8* nonnull %11) #8
  call void @llvm.memset.p0i8.i64(i8* nonnull align 8 %11, i8 -86, i64 96, i1 false)
  %12 = getelementptr inbounds %"class.tflite::RuntimeShape", %"class.tflite::RuntimeShape"* %5, i64 0, i32 0
  %13 = bitcast %"struct.tflite::NdArrayDesc"* %8 to i8*
  call void @llvm.lifetime.start.p0i8(i64 32, i8* nonnull %13) #8, !noalias !1040
  %14 = bitcast %"struct.tflite::NdArrayDesc"* %9 to i8*
  call void @llvm.memset.p0i8.i64(i8* nonnull align 4 %13, i8 -86, i64 32, i1 false) #8, !noalias !1040
  call void @llvm.lifetime.start.p0i8(i64 32, i8* nonnull %14) #8, !noalias !1040
  call void @llvm.memset.p0i8.i64(i8* nonnull align 4 %14, i8 -86, i64 32, i1 false) #8, !noalias !1040
  call void @_ZN6tflite35NdArrayDescsForElementwiseBroadcastILi4EEEvRKNS_12RuntimeShapeES3_PNS_11NdArrayDescIXT_EEES6_(%"class.tflite::RuntimeShape"* dereferenceable(32) %1, %"class.tflite::RuntimeShape"* dereferenceable(32) %3, %"struct.tflite::NdArrayDesc"* nonnull %8, %"struct.tflite::NdArrayDesc"* nonnull %9) #8, !noalias !1040
  %15 = getelementptr inbounds %"struct.tflite::reference_ops::BroadcastComparison4DSlowCommon", %"struct.tflite::reference_ops::BroadcastComparison4DSlowCommon"* %10, i64 0, i32 0, i32 0
  store i32 0, i32* %15, align 8, !alias.scope !1043
  %16 = load i32, i32* %12, align 8, !noalias !1043
  %17 = icmp sgt i32 %16, 4
  br i1 %17, label %18, label %19

18:                                               ; preds = %7
  call void @abort() #10, !noalias !1043
  unreachable

19:                                               ; preds = %7
  store i32 4, i32* %15, align 8, !alias.scope !1043
  %20 = sub i32 4, %16
  %21 = icmp sgt i32 %20, 0
  %22 = getelementptr inbounds %"struct.tflite::reference_ops::BroadcastComparison4DSlowCommon", %"struct.tflite::reference_ops::BroadcastComparison4DSlowCommon"* %10, i64 0, i32 0, i32 1
  br i1 %21, label %23, label %103

23:                                               ; preds = %19
  %24 = bitcast %union.anon* %22 to [5 x i32]*
  %25 = zext i32 %20 to i64
  %26 = icmp ult i32 %20, 8
  br i1 %26, label %96, label %27

27:                                               ; preds = %23
  %28 = and i64 %25, 4294967288
  %29 = add nsw i64 %28, -8
  %30 = lshr exact i64 %29, 3
  %31 = add nuw nsw i64 %30, 1
  %32 = and i64 %31, 7
  %33 = icmp ult i64 %29, 56
  br i1 %33, label %81, label %34

34:                                               ; preds = %27
  %35 = sub nsw i64 %31, %32
  br label %36

36:                                               ; preds = %36, %34
  %37 = phi i64 [ 0, %34 ], [ %78, %36 ]
  %38 = phi i64 [ %35, %34 ], [ %79, %36 ]
  %39 = getelementptr inbounds [5 x i32], [5 x i32]* %24, i64 0, i64 %37
  %40 = bitcast i32* %39 to <4 x i32>*
  store <4 x i32> <i32 1, i32 1, i32 1, i32 1>, <4 x i32>* %40, align 8, !alias.scope !1043
  %41 = getelementptr inbounds i32, i32* %39, i64 4
  %42 = bitcast i32* %41 to <4 x i32>*
  store <4 x i32> <i32 1, i32 1, i32 1, i32 1>, <4 x i32>* %42, align 8, !alias.scope !1043
  %43 = or i64 %37, 8
  %44 = getelementptr inbounds [5 x i32], [5 x i32]* %24, i64 0, i64 %43
  %45 = bitcast i32* %44 to <4 x i32>*
  store <4 x i32> <i32 1, i32 1, i32 1, i32 1>, <4 x i32>* %45, align 8, !alias.scope !1043
  %46 = getelementptr inbounds i32, i32* %44, i64 4
  %47 = bitcast i32* %46 to <4 x i32>*
  store <4 x i32> <i32 1, i32 1, i32 1, i32 1>, <4 x i32>* %47, align 8, !alias.scope !1043
  %48 = or i64 %37, 16
  %49 = getelementptr inbounds [5 x i32], [5 x i32]* %24, i64 0, i64 %48
  %50 = bitcast i32* %49 to <4 x i32>*
  store <4 x i32> <i32 1, i32 1, i32 1, i32 1>, <4 x i32>* %50, align 8, !alias.scope !1043
  %51 = getelementptr inbounds i32, i32* %49, i64 4
  %52 = bitcast i32* %51 to <4 x i32>*
  store <4 x i32> <i32 1, i32 1, i32 1, i32 1>, <4 x i32>* %52, align 8, !alias.scope !1043
  %53 = or i64 %37, 24
  %54 = getelementptr inbounds [5 x i32], [5 x i32]* %24, i64 0, i64 %53
  %55 = bitcast i32* %54 to <4 x i32>*
  store <4 x i32> <i32 1, i32 1, i32 1, i32 1>, <4 x i32>* %55, align 8, !alias.scope !1043
  %56 = getelementptr inbounds i32, i32* %54, i64 4
  %57 = bitcast i32* %56 to <4 x i32>*
  store <4 x i32> <i32 1, i32 1, i32 1, i32 1>, <4 x i32>* %57, align 8, !alias.scope !1043
  %58 = or i64 %37, 32
  %59 = getelementptr inbounds [5 x i32], [5 x i32]* %24, i64 0, i64 %58
  %60 = bitcast i32* %59 to <4 x i32>*
  store <4 x i32> <i32 1, i32 1, i32 1, i32 1>, <4 x i32>* %60, align 8, !alias.scope !1043
  %61 = getelementptr inbounds i32, i32* %59, i64 4
  %62 = bitcast i32* %61 to <4 x i32>*
  store <4 x i32> <i32 1, i32 1, i32 1, i32 1>, <4 x i32>* %62, align 8, !alias.scope !1043
  %63 = or i64 %37, 40
  %64 = getelementptr inbounds [5 x i32], [5 x i32]* %24, i64 0, i64 %63
  %65 = bitcast i32* %64 to <4 x i32>*
  store <4 x i32> <i32 1, i32 1, i32 1, i32 1>, <4 x i32>* %65, align 8, !alias.scope !1043
  %66 = getelementptr inbounds i32, i32* %64, i64 4
  %67 = bitcast i32* %66 to <4 x i32>*
  store <4 x i32> <i32 1, i32 1, i32 1, i32 1>, <4 x i32>* %67, align 8, !alias.scope !1043
  %68 = or i64 %37, 48
  %69 = getelementptr inbounds [5 x i32], [5 x i32]* %24, i64 0, i64 %68
  %70 = bitcast i32* %69 to <4 x i32>*
  store <4 x i32> <i32 1, i32 1, i32 1, i32 1>, <4 x i32>* %70, align 8, !alias.scope !1043
  %71 = getelementptr inbounds i32, i32* %69, i64 4
  %72 = bitcast i32* %71 to <4 x i32>*
  store <4 x i32> <i32 1, i32 1, i32 1, i32 1>, <4 x i32>* %72, align 8, !alias.scope !1043
  %73 = or i64 %37, 56
  %74 = getelementptr inbounds [5 x i32], [5 x i32]* %24, i64 0, i64 %73
  %75 = bitcast i32* %74 to <4 x i32>*
  store <4 x i32> <i32 1, i32 1, i32 1, i32 1>, <4 x i32>* %75, align 8, !alias.scope !1043
  %76 = getelementptr inbounds i32, i32* %74, i64 4
  %77 = bitcast i32* %76 to <4 x i32>*
  store <4 x i32> <i32 1, i32 1, i32 1, i32 1>, <4 x i32>* %77, align 8, !alias.scope !1043
  %78 = add i64 %37, 64
  %79 = add i64 %38, -8
  %80 = icmp eq i64 %79, 0
  br i1 %80, label %81, label %36, !llvm.loop !1046

81:                                               ; preds = %36, %27
  %82 = phi i64 [ 0, %27 ], [ %78, %36 ]
  %83 = icmp eq i64 %32, 0
  br i1 %83, label %94, label %84

84:                                               ; preds = %81, %84
  %85 = phi i64 [ %91, %84 ], [ %82, %81 ]
  %86 = phi i64 [ %92, %84 ], [ %32, %81 ]
  %87 = getelementptr inbounds [5 x i32], [5 x i32]* %24, i64 0, i64 %85
  %88 = bitcast i32* %87 to <4 x i32>*
  store <4 x i32> <i32 1, i32 1, i32 1, i32 1>, <4 x i32>* %88, align 8, !alias.scope !1043
  %89 = getelementptr inbounds i32, i32* %87, i64 4
  %90 = bitcast i32* %89 to <4 x i32>*
  store <4 x i32> <i32 1, i32 1, i32 1, i32 1>, <4 x i32>* %90, align 8, !alias.scope !1043
  %91 = add i64 %85, 8
  %92 = add i64 %86, -1
  %93 = icmp eq i64 %92, 0
  br i1 %93, label %94, label %84, !llvm.loop !1047

94:                                               ; preds = %84, %81
  %95 = icmp eq i64 %28, %25
  br i1 %95, label %103, label %96

96:                                               ; preds = %94, %23
  %97 = phi i64 [ 0, %23 ], [ %28, %94 ]
  br label %98

98:                                               ; preds = %96, %98
  %99 = phi i64 [ %101, %98 ], [ %97, %96 ]
  %100 = getelementptr inbounds [5 x i32], [5 x i32]* %24, i64 0, i64 %99
  store i32 1, i32* %100, align 4, !alias.scope !1043
  %101 = add nuw nsw i64 %99, 1
  %102 = icmp eq i64 %101, %25
  br i1 %102, label %103, label %98, !llvm.loop !1048

103:                                              ; preds = %98, %94, %19
  %104 = bitcast %union.anon* %22 to i32*
  %105 = sext i32 %20 to i64
  %106 = getelementptr inbounds i32, i32* %104, i64 %105
  %107 = bitcast i32* %106 to i8*
  %108 = icmp sgt i32 %16, 5
  %109 = getelementptr inbounds %"class.tflite::RuntimeShape", %"class.tflite::RuntimeShape"* %5, i64 0, i32 1
  %110 = getelementptr inbounds %union.anon, %union.anon* %109, i64 0, i32 0
  %111 = load i32*, i32** %110, align 8, !noalias !1043
  %112 = bitcast %union.anon* %109 to i32*
  %113 = select i1 %108, i32* %111, i32* %112
  %114 = bitcast i32* %113 to i8*
  %115 = sext i32 %16 to i64
  %116 = shl nsw i64 %115, 2
  call void @llvm.memcpy.p0i8.p0i8.i64(i8* align 4 %107, i8* align 4 %114, i64 %116, i1 false) #8
  %117 = getelementptr inbounds %"struct.tflite::reference_ops::BroadcastComparison4DSlowCommon", %"struct.tflite::reference_ops::BroadcastComparison4DSlowCommon"* %10, i64 0, i32 1
  %118 = bitcast %"struct.tflite::NdArrayDesc"* %117 to i8*
  call void @llvm.memcpy.p0i8.p0i8.i64(i8* align 8 %118, i8* nonnull align 4 %13, i64 32, i1 false) #8
  %119 = getelementptr inbounds %"struct.tflite::reference_ops::BroadcastComparison4DSlowCommon", %"struct.tflite::reference_ops::BroadcastComparison4DSlowCommon"* %10, i64 0, i32 2
  %120 = bitcast %"struct.tflite::NdArrayDesc"* %119 to i8*
  call void @llvm.memcpy.p0i8.p0i8.i64(i8* align 8 %120, i8* nonnull align 4 %14, i64 32, i1 false) #8
  call void @llvm.lifetime.end.p0i8(i64 32, i8* nonnull %14) #8, !noalias !1040
  call void @llvm.lifetime.end.p0i8(i64 32, i8* nonnull %13) #8, !noalias !1040
  %121 = getelementptr inbounds %"struct.tflite::ComparisonParams", %"struct.tflite::ComparisonParams"* %0, i64 0, i32 0
  %122 = load i32, i32* %121, align 4
  %123 = getelementptr inbounds %"struct.tflite::ComparisonParams", %"struct.tflite::ComparisonParams"* %0, i64 0, i32 1
  %124 = load i32, i32* %123, align 4
  %125 = getelementptr inbounds %"struct.tflite::ComparisonParams", %"struct.tflite::ComparisonParams"* %0, i64 0, i32 2
  %126 = load i32, i32* %125, align 4
  %127 = getelementptr inbounds %"struct.tflite::ComparisonParams", %"struct.tflite::ComparisonParams"* %0, i64 0, i32 4
  %128 = load i32, i32* %127, align 4
  %129 = getelementptr inbounds %"struct.tflite::ComparisonParams", %"struct.tflite::ComparisonParams"* %0, i64 0, i32 5
  %130 = load i32, i32* %129, align 4
  %131 = load i32, i32* %15, align 8
  %132 = icmp sgt i32 %131, 5
  %133 = getelementptr inbounds %union.anon, %union.anon* %22, i64 0, i32 0
  %134 = load i32*, i32** %133, align 8
  %135 = select i1 %132, i32* %134, i32* %104
  %136 = load i32, i32* %135, align 4
  %137 = icmp sgt i32 %136, 0
  br i1 %137, label %138, label %205

138:                                              ; preds = %103
  %139 = getelementptr inbounds %"struct.tflite::ComparisonParams", %"struct.tflite::ComparisonParams"* %0, i64 0, i32 6
  %140 = load i32, i32* %139, align 4
  %141 = getelementptr inbounds %"struct.tflite::ComparisonParams", %"struct.tflite::ComparisonParams"* %0, i64 0, i32 3
  %142 = load i32, i32* %141, align 4
  %143 = bitcast %union.anon* %22 to [5 x i32]*
  %144 = getelementptr inbounds [5 x i32], [5 x i32]* %143, i64 0, i64 1
  %145 = getelementptr inbounds %"struct.tflite::reference_ops::BroadcastComparison4DSlowCommon", %"struct.tflite::reference_ops::BroadcastComparison4DSlowCommon"* %10, i64 0, i32 0, i32 1, i32 1
  %146 = bitcast [16 x i8]* %145 to i32*
  %147 = getelementptr inbounds %"struct.tflite::reference_ops::BroadcastComparison4DSlowCommon", %"struct.tflite::reference_ops::BroadcastComparison4DSlowCommon"* %10, i64 0, i32 0, i32 1, i32 1, i64 4
  %148 = bitcast i8* %147 to i32*
  %149 = getelementptr inbounds %"struct.tflite::reference_ops::BroadcastComparison4DSlowCommon", %"struct.tflite::reference_ops::BroadcastComparison4DSlowCommon"* %10, i64 0, i32 1, i32 1, i64 0
  %150 = load i32, i32* %149, align 8
  %151 = getelementptr inbounds %"struct.tflite::reference_ops::BroadcastComparison4DSlowCommon", %"struct.tflite::reference_ops::BroadcastComparison4DSlowCommon"* %10, i64 0, i32 1, i32 1, i64 1
  %152 = load i32, i32* %151, align 4
  %153 = getelementptr inbounds %"struct.tflite::reference_ops::BroadcastComparison4DSlowCommon", %"struct.tflite::reference_ops::BroadcastComparison4DSlowCommon"* %10, i64 0, i32 1, i32 1, i64 2
  %154 = load i32, i32* %153, align 8
  %155 = getelementptr inbounds %"struct.tflite::reference_ops::BroadcastComparison4DSlowCommon", %"struct.tflite::reference_ops::BroadcastComparison4DSlowCommon"* %10, i64 0, i32 1, i32 1, i64 3
  %156 = load i32, i32* %155, align 4
  %157 = getelementptr inbounds %"struct.tflite::reference_ops::BroadcastComparison4DSlowCommon", %"struct.tflite::reference_ops::BroadcastComparison4DSlowCommon"* %10, i64 0, i32 2, i32 1, i64 0
  %158 = load i32, i32* %157, align 8
  %159 = getelementptr inbounds %"struct.tflite::reference_ops::BroadcastComparison4DSlowCommon", %"struct.tflite::reference_ops::BroadcastComparison4DSlowCommon"* %10, i64 0, i32 2, i32 1, i64 1
  %160 = load i32, i32* %159, align 4
  %161 = getelementptr inbounds %"struct.tflite::reference_ops::BroadcastComparison4DSlowCommon", %"struct.tflite::reference_ops::BroadcastComparison4DSlowCommon"* %10, i64 0, i32 2, i32 1, i64 2
  %162 = load i32, i32* %161, align 8
  %163 = getelementptr inbounds %"struct.tflite::reference_ops::BroadcastComparison4DSlowCommon", %"struct.tflite::reference_ops::BroadcastComparison4DSlowCommon"* %10, i64 0, i32 2, i32 1, i64 3
  %164 = load i32, i32* %163, align 4
  %165 = sext i32 %126 to i64
  %166 = sub nsw i32 0, %142
  %167 = zext i32 %166 to i64
  %168 = shl nsw i64 -1, %167
  %169 = trunc i64 %168 to i32
  %170 = xor i32 %169, -1
  %171 = ashr i32 %170, 1
  %172 = sext i32 %130 to i64
  %173 = sub nsw i32 0, %140
  %174 = zext i32 %173 to i64
  %175 = shl nsw i64 -1, %174
  %176 = trunc i64 %175 to i32
  %177 = xor i32 %176, -1
  %178 = ashr i32 %177, 1
  %179 = getelementptr inbounds i32, i32* %104, i64 1
  %180 = sext i32 %164 to i64
  %181 = sext i32 %156 to i64
  %182 = sext i32 %162 to i64
  %183 = sext i32 %154 to i64
  %184 = sext i32 %160 to i64
  %185 = sext i32 %152 to i64
  %186 = sext i32 %158 to i64
  %187 = sext i32 %150 to i64
  %188 = getelementptr inbounds i32, i32* %134, i64 1
  %189 = select i1 %132, i32* %188, i32* %144
  %190 = getelementptr inbounds i32, i32* %134, i64 2
  %191 = select i1 %132, i32* %190, i32* %146
  %192 = getelementptr inbounds i32, i32* %134, i64 3
  %193 = select i1 %132, i32* %192, i32* %148
  %194 = icmp eq i32 %126, -2147483648
  %195 = icmp eq i32 %130, -2147483648
  br label %196

196:                                              ; preds = %138, %229
  %197 = phi i32 [ %136, %138 ], [ %230, %229 ]
  %198 = phi i64 [ 0, %138 ], [ %231, %229 ]
  %199 = load i32, i32* %189, align 4
  %200 = icmp sgt i32 %199, 0
  br i1 %200, label %201, label %229

201:                                              ; preds = %196
  %202 = mul nsw i64 %198, %187
  %203 = mul nsw i64 %198, %186
  %204 = trunc i64 %198 to i32
  br label %212

205:                                              ; preds = %229, %103
  %206 = xor i1 %132, true
  %207 = icmp eq i32* %134, null
  %208 = or i1 %207, %206
  br i1 %208, label %211, label %209

209:                                              ; preds = %205
  %210 = bitcast i32* %134 to i8*
  call void @_ZdaPv(i8* %210) #9
  br label %211

211:                                              ; preds = %205, %209
  call void @llvm.lifetime.end.p0i8(i64 96, i8* nonnull %11) #8
  ret void

212:                                              ; preds = %201, %250
  %213 = phi i32 [ %199, %201 ], [ %251, %250 ]
  %214 = phi i64 [ 0, %201 ], [ %252, %250 ]
  %215 = load i32, i32* %191, align 4
  %216 = icmp sgt i32 %215, 0
  br i1 %216, label %217, label %250

217:                                              ; preds = %212
  %218 = mul nsw i64 %214, %185
  %219 = add nsw i64 %218, %202
  %220 = mul nsw i64 %214, %184
  %221 = add nsw i64 %220, %203
  %222 = load i32, i32* %179, align 4
  %223 = mul nsw i32 %222, %204
  %224 = trunc i64 %214 to i32
  %225 = add nsw i32 %223, %224
  %226 = load i32, i32* %193, align 4
  br label %234

227:                                              ; preds = %250
  %228 = load i32, i32* %135, align 4
  br label %229

229:                                              ; preds = %227, %196
  %230 = phi i32 [ %228, %227 ], [ %197, %196 ]
  %231 = add nuw nsw i64 %198, 1
  %232 = sext i32 %230 to i64
  %233 = icmp slt i64 %231, %232
  br i1 %233, label %196, label %205

234:                                              ; preds = %217, %257
  %235 = phi i32 [ %215, %217 ], [ %258, %257 ]
  %236 = phi i32 [ %226, %217 ], [ %259, %257 ]
  %237 = phi i64 [ 0, %217 ], [ %260, %257 ]
  %238 = icmp sgt i32 %236, 0
  br i1 %238, label %239, label %257

239:                                              ; preds = %234
  %240 = mul nsw i64 %237, %183
  %241 = add nsw i64 %219, %240
  %242 = mul nsw i64 %237, %182
  %243 = add nsw i64 %221, %242
  %244 = load i32, i32* %146, align 8
  %245 = mul nsw i32 %225, %244
  %246 = trunc i64 %237 to i32
  %247 = add nsw i32 %245, %246
  br label %263

248:                                              ; preds = %257
  %249 = load i32, i32* %189, align 4
  br label %250

250:                                              ; preds = %248, %212
  %251 = phi i32 [ %249, %248 ], [ %213, %212 ]
  %252 = add nuw nsw i64 %214, 1
  %253 = sext i32 %251 to i64
  %254 = icmp slt i64 %252, %253
  br i1 %254, label %212, label %227

255:                                              ; preds = %312
  %256 = load i32, i32* %191, align 4
  br label %257

257:                                              ; preds = %255, %234
  %258 = phi i32 [ %256, %255 ], [ %235, %234 ]
  %259 = phi i32 [ %330, %255 ], [ %236, %234 ]
  %260 = add nuw nsw i64 %237, 1
  %261 = sext i32 %258 to i64
  %262 = icmp slt i64 %260, %261
  br i1 %262, label %234, label %248

263:                                              ; preds = %239, %312
  %264 = phi i64 [ 0, %239 ], [ %329, %312 ]
  %265 = mul nsw i64 %264, %181
  %266 = add nsw i64 %241, %265
  %267 = getelementptr inbounds i8, i8* %2, i64 %266
  %268 = load i8, i8* %267, align 1
  %269 = zext i8 %268 to i32
  %270 = add nsw i32 %124, %269
  %271 = mul nsw i64 %264, %180
  %272 = add nsw i64 %243, %271
  %273 = getelementptr inbounds i8, i8* %4, i64 %272
  %274 = load i8, i8* %273, align 1
  %275 = zext i8 %274 to i32
  %276 = add nsw i32 %128, %275
  %277 = shl i32 %270, %122
  %278 = shl i32 %276, %122
  %279 = icmp eq i32 %277, %126
  br i1 %279, label %282, label %280

280:                                              ; preds = %263
  %281 = sext i32 %277 to i64
  br label %283

282:                                              ; preds = %263
  br i1 %194, label %291, label %283

283:                                              ; preds = %282, %280
  %284 = phi i64 [ %281, %280 ], [ %165, %282 ]
  %285 = mul nsw i64 %284, %165
  %286 = icmp sgt i64 %285, -1
  %287 = select i1 %286, i64 1073741824, i64 -1073741823
  %288 = add nsw i64 %287, %285
  %289 = sdiv i64 %288, 2147483648
  %290 = trunc i64 %289 to i32
  br label %291

291:                                              ; preds = %282, %283
  %292 = phi i32 [ %290, %283 ], [ 2147483647, %282 ]
  %293 = and i32 %292, %170
  %294 = lshr i32 %292, 31
  %295 = add nsw i32 %294, %171
  %296 = ashr i32 %292, %166
  %297 = icmp sgt i32 %293, %295
  %298 = zext i1 %297 to i32
  %299 = add nsw i32 %296, %298
  %300 = icmp eq i32 %278, %130
  br i1 %300, label %303, label %301

301:                                              ; preds = %291
  %302 = sext i32 %278 to i64
  br label %304

303:                                              ; preds = %291
  br i1 %195, label %312, label %304

304:                                              ; preds = %303, %301
  %305 = phi i64 [ %302, %301 ], [ %172, %303 ]
  %306 = mul nsw i64 %305, %172
  %307 = icmp sgt i64 %306, -1
  %308 = select i1 %307, i64 1073741824, i64 -1073741823
  %309 = add nsw i64 %308, %306
  %310 = sdiv i64 %309, 2147483648
  %311 = trunc i64 %310 to i32
  br label %312

312:                                              ; preds = %303, %304
  %313 = phi i32 [ %311, %304 ], [ 2147483647, %303 ]
  %314 = and i32 %313, %177
  %315 = lshr i32 %313, 31
  %316 = add nsw i32 %315, %178
  %317 = ashr i32 %313, %173
  %318 = icmp sgt i32 %314, %316
  %319 = zext i1 %318 to i32
  %320 = add nsw i32 %317, %319
  %321 = icmp sge i32 %299, %320
  %322 = load i32, i32* %148, align 4
  %323 = mul nsw i32 %247, %322
  %324 = trunc i64 %264 to i32
  %325 = add nsw i32 %323, %324
  %326 = sext i32 %325 to i64
  %327 = getelementptr inbounds i8, i8* %6, i64 %326
  %328 = zext i1 %321 to i8
  store i8 %328, i8* %327, align 1
  %329 = add nuw nsw i64 %264, 1
  %330 = load i32, i32* %193, align 4
  %331 = sext i32 %330 to i64
  %332 = icmp slt i64 %329, %331
  br i1 %332, label %263, label %255
}

; Function Attrs: inlinehint nounwind ssp uwtable
define linkonce_odr hidden void @_ZN6tflite13reference_ops36BroadcastComparison4DSlowWithScalingIaXadL_ZNS0_14GreaterEqualFnIiEEbT_S3_EEEEvRKNS_16ComparisonParamsERKNS_12RuntimeShapeEPKS3_S9_SB_S9_Pb(%"struct.tflite::ComparisonParams"* dereferenceable(32), %"class.tflite::RuntimeShape"* dereferenceable(32), i8*, %"class.tflite::RuntimeShape"* dereferenceable(32), i8*, %"class.tflite::RuntimeShape"* dereferenceable(32), i8*) local_unnamed_addr #4 comdat {
  %8 = alloca %"struct.tflite::NdArrayDesc", align 4
  %9 = alloca %"struct.tflite::NdArrayDesc", align 4
  %10 = alloca %"struct.tflite::reference_ops::BroadcastComparison4DSlowCommon", align 8
  %11 = bitcast %"struct.tflite::reference_ops::BroadcastComparison4DSlowCommon"* %10 to i8*
  call void @llvm.lifetime.start.p0i8(i64 96, i8* nonnull %11) #8
  call void @llvm.memset.p0i8.i64(i8* nonnull align 8 %11, i8 -86, i64 96, i1 false)
  %12 = getelementptr inbounds %"class.tflite::RuntimeShape", %"class.tflite::RuntimeShape"* %5, i64 0, i32 0
  %13 = bitcast %"struct.tflite::NdArrayDesc"* %8 to i8*
  call void @llvm.lifetime.start.p0i8(i64 32, i8* nonnull %13) #8, !noalias !1049
  %14 = bitcast %"struct.tflite::NdArrayDesc"* %9 to i8*
  call void @llvm.memset.p0i8.i64(i8* nonnull align 4 %13, i8 -86, i64 32, i1 false) #8, !noalias !1049
  call void @llvm.lifetime.start.p0i8(i64 32, i8* nonnull %14) #8, !noalias !1049
  call void @llvm.memset.p0i8.i64(i8* nonnull align 4 %14, i8 -86, i64 32, i1 false) #8, !noalias !1049
  call void @_ZN6tflite35NdArrayDescsForElementwiseBroadcastILi4EEEvRKNS_12RuntimeShapeES3_PNS_11NdArrayDescIXT_EEES6_(%"class.tflite::RuntimeShape"* dereferenceable(32) %1, %"class.tflite::RuntimeShape"* dereferenceable(32) %3, %"struct.tflite::NdArrayDesc"* nonnull %8, %"struct.tflite::NdArrayDesc"* nonnull %9) #8, !noalias !1049
  %15 = getelementptr inbounds %"struct.tflite::reference_ops::BroadcastComparison4DSlowCommon", %"struct.tflite::reference_ops::BroadcastComparison4DSlowCommon"* %10, i64 0, i32 0, i32 0
  store i32 0, i32* %15, align 8, !alias.scope !1052
  %16 = load i32, i32* %12, align 8, !noalias !1052
  %17 = icmp sgt i32 %16, 4
  br i1 %17, label %18, label %19

18:                                               ; preds = %7
  call void @abort() #10, !noalias !1052
  unreachable

19:                                               ; preds = %7
  store i32 4, i32* %15, align 8, !alias.scope !1052
  %20 = sub i32 4, %16
  %21 = icmp sgt i32 %20, 0
  %22 = getelementptr inbounds %"struct.tflite::reference_ops::BroadcastComparison4DSlowCommon", %"struct.tflite::reference_ops::BroadcastComparison4DSlowCommon"* %10, i64 0, i32 0, i32 1
  br i1 %21, label %23, label %103

23:                                               ; preds = %19
  %24 = bitcast %union.anon* %22 to [5 x i32]*
  %25 = zext i32 %20 to i64
  %26 = icmp ult i32 %20, 8
  br i1 %26, label %96, label %27

27:                                               ; preds = %23
  %28 = and i64 %25, 4294967288
  %29 = add nsw i64 %28, -8
  %30 = lshr exact i64 %29, 3
  %31 = add nuw nsw i64 %30, 1
  %32 = and i64 %31, 7
  %33 = icmp ult i64 %29, 56
  br i1 %33, label %81, label %34

34:                                               ; preds = %27
  %35 = sub nsw i64 %31, %32
  br label %36

36:                                               ; preds = %36, %34
  %37 = phi i64 [ 0, %34 ], [ %78, %36 ]
  %38 = phi i64 [ %35, %34 ], [ %79, %36 ]
  %39 = getelementptr inbounds [5 x i32], [5 x i32]* %24, i64 0, i64 %37
  %40 = bitcast i32* %39 to <4 x i32>*
  store <4 x i32> <i32 1, i32 1, i32 1, i32 1>, <4 x i32>* %40, align 8, !alias.scope !1052
  %41 = getelementptr inbounds i32, i32* %39, i64 4
  %42 = bitcast i32* %41 to <4 x i32>*
  store <4 x i32> <i32 1, i32 1, i32 1, i32 1>, <4 x i32>* %42, align 8, !alias.scope !1052
  %43 = or i64 %37, 8
  %44 = getelementptr inbounds [5 x i32], [5 x i32]* %24, i64 0, i64 %43
  %45 = bitcast i32* %44 to <4 x i32>*
  store <4 x i32> <i32 1, i32 1, i32 1, i32 1>, <4 x i32>* %45, align 8, !alias.scope !1052
  %46 = getelementptr inbounds i32, i32* %44, i64 4
  %47 = bitcast i32* %46 to <4 x i32>*
  store <4 x i32> <i32 1, i32 1, i32 1, i32 1>, <4 x i32>* %47, align 8, !alias.scope !1052
  %48 = or i64 %37, 16
  %49 = getelementptr inbounds [5 x i32], [5 x i32]* %24, i64 0, i64 %48
  %50 = bitcast i32* %49 to <4 x i32>*
  store <4 x i32> <i32 1, i32 1, i32 1, i32 1>, <4 x i32>* %50, align 8, !alias.scope !1052
  %51 = getelementptr inbounds i32, i32* %49, i64 4
  %52 = bitcast i32* %51 to <4 x i32>*
  store <4 x i32> <i32 1, i32 1, i32 1, i32 1>, <4 x i32>* %52, align 8, !alias.scope !1052
  %53 = or i64 %37, 24
  %54 = getelementptr inbounds [5 x i32], [5 x i32]* %24, i64 0, i64 %53
  %55 = bitcast i32* %54 to <4 x i32>*
  store <4 x i32> <i32 1, i32 1, i32 1, i32 1>, <4 x i32>* %55, align 8, !alias.scope !1052
  %56 = getelementptr inbounds i32, i32* %54, i64 4
  %57 = bitcast i32* %56 to <4 x i32>*
  store <4 x i32> <i32 1, i32 1, i32 1, i32 1>, <4 x i32>* %57, align 8, !alias.scope !1052
  %58 = or i64 %37, 32
  %59 = getelementptr inbounds [5 x i32], [5 x i32]* %24, i64 0, i64 %58
  %60 = bitcast i32* %59 to <4 x i32>*
  store <4 x i32> <i32 1, i32 1, i32 1, i32 1>, <4 x i32>* %60, align 8, !alias.scope !1052
  %61 = getelementptr inbounds i32, i32* %59, i64 4
  %62 = bitcast i32* %61 to <4 x i32>*
  store <4 x i32> <i32 1, i32 1, i32 1, i32 1>, <4 x i32>* %62, align 8, !alias.scope !1052
  %63 = or i64 %37, 40
  %64 = getelementptr inbounds [5 x i32], [5 x i32]* %24, i64 0, i64 %63
  %65 = bitcast i32* %64 to <4 x i32>*
  store <4 x i32> <i32 1, i32 1, i32 1, i32 1>, <4 x i32>* %65, align 8, !alias.scope !1052
  %66 = getelementptr inbounds i32, i32* %64, i64 4
  %67 = bitcast i32* %66 to <4 x i32>*
  store <4 x i32> <i32 1, i32 1, i32 1, i32 1>, <4 x i32>* %67, align 8, !alias.scope !1052
  %68 = or i64 %37, 48
  %69 = getelementptr inbounds [5 x i32], [5 x i32]* %24, i64 0, i64 %68
  %70 = bitcast i32* %69 to <4 x i32>*
  store <4 x i32> <i32 1, i32 1, i32 1, i32 1>, <4 x i32>* %70, align 8, !alias.scope !1052
  %71 = getelementptr inbounds i32, i32* %69, i64 4
  %72 = bitcast i32* %71 to <4 x i32>*
  store <4 x i32> <i32 1, i32 1, i32 1, i32 1>, <4 x i32>* %72, align 8, !alias.scope !1052
  %73 = or i64 %37, 56
  %74 = getelementptr inbounds [5 x i32], [5 x i32]* %24, i64 0, i64 %73
  %75 = bitcast i32* %74 to <4 x i32>*
  store <4 x i32> <i32 1, i32 1, i32 1, i32 1>, <4 x i32>* %75, align 8, !alias.scope !1052
  %76 = getelementptr inbounds i32, i32* %74, i64 4
  %77 = bitcast i32* %76 to <4 x i32>*
  store <4 x i32> <i32 1, i32 1, i32 1, i32 1>, <4 x i32>* %77, align 8, !alias.scope !1052
  %78 = add i64 %37, 64
  %79 = add i64 %38, -8
  %80 = icmp eq i64 %79, 0
  br i1 %80, label %81, label %36, !llvm.loop !1055

81:                                               ; preds = %36, %27
  %82 = phi i64 [ 0, %27 ], [ %78, %36 ]
  %83 = icmp eq i64 %32, 0
  br i1 %83, label %94, label %84

84:                                               ; preds = %81, %84
  %85 = phi i64 [ %91, %84 ], [ %82, %81 ]
  %86 = phi i64 [ %92, %84 ], [ %32, %81 ]
  %87 = getelementptr inbounds [5 x i32], [5 x i32]* %24, i64 0, i64 %85
  %88 = bitcast i32* %87 to <4 x i32>*
  store <4 x i32> <i32 1, i32 1, i32 1, i32 1>, <4 x i32>* %88, align 8, !alias.scope !1052
  %89 = getelementptr inbounds i32, i32* %87, i64 4
  %90 = bitcast i32* %89 to <4 x i32>*
  store <4 x i32> <i32 1, i32 1, i32 1, i32 1>, <4 x i32>* %90, align 8, !alias.scope !1052
  %91 = add i64 %85, 8
  %92 = add i64 %86, -1
  %93 = icmp eq i64 %92, 0
  br i1 %93, label %94, label %84, !llvm.loop !1056

94:                                               ; preds = %84, %81
  %95 = icmp eq i64 %28, %25
  br i1 %95, label %103, label %96

96:                                               ; preds = %94, %23
  %97 = phi i64 [ 0, %23 ], [ %28, %94 ]
  br label %98

98:                                               ; preds = %96, %98
  %99 = phi i64 [ %101, %98 ], [ %97, %96 ]
  %100 = getelementptr inbounds [5 x i32], [5 x i32]* %24, i64 0, i64 %99
  store i32 1, i32* %100, align 4, !alias.scope !1052
  %101 = add nuw nsw i64 %99, 1
  %102 = icmp eq i64 %101, %25
  br i1 %102, label %103, label %98, !llvm.loop !1057

103:                                              ; preds = %98, %94, %19
  %104 = bitcast %union.anon* %22 to i32*
  %105 = sext i32 %20 to i64
  %106 = getelementptr inbounds i32, i32* %104, i64 %105
  %107 = bitcast i32* %106 to i8*
  %108 = icmp sgt i32 %16, 5
  %109 = getelementptr inbounds %"class.tflite::RuntimeShape", %"class.tflite::RuntimeShape"* %5, i64 0, i32 1
  %110 = getelementptr inbounds %union.anon, %union.anon* %109, i64 0, i32 0
  %111 = load i32*, i32** %110, align 8, !noalias !1052
  %112 = bitcast %union.anon* %109 to i32*
  %113 = select i1 %108, i32* %111, i32* %112
  %114 = bitcast i32* %113 to i8*
  %115 = sext i32 %16 to i64
  %116 = shl nsw i64 %115, 2
  call void @llvm.memcpy.p0i8.p0i8.i64(i8* align 4 %107, i8* align 4 %114, i64 %116, i1 false) #8
  %117 = getelementptr inbounds %"struct.tflite::reference_ops::BroadcastComparison4DSlowCommon", %"struct.tflite::reference_ops::BroadcastComparison4DSlowCommon"* %10, i64 0, i32 1
  %118 = bitcast %"struct.tflite::NdArrayDesc"* %117 to i8*
  call void @llvm.memcpy.p0i8.p0i8.i64(i8* align 8 %118, i8* nonnull align 4 %13, i64 32, i1 false) #8
  %119 = getelementptr inbounds %"struct.tflite::reference_ops::BroadcastComparison4DSlowCommon", %"struct.tflite::reference_ops::BroadcastComparison4DSlowCommon"* %10, i64 0, i32 2
  %120 = bitcast %"struct.tflite::NdArrayDesc"* %119 to i8*
  call void @llvm.memcpy.p0i8.p0i8.i64(i8* align 8 %120, i8* nonnull align 4 %14, i64 32, i1 false) #8
  call void @llvm.lifetime.end.p0i8(i64 32, i8* nonnull %14) #8, !noalias !1049
  call void @llvm.lifetime.end.p0i8(i64 32, i8* nonnull %13) #8, !noalias !1049
  %121 = getelementptr inbounds %"struct.tflite::ComparisonParams", %"struct.tflite::ComparisonParams"* %0, i64 0, i32 0
  %122 = load i32, i32* %121, align 4
  %123 = getelementptr inbounds %"struct.tflite::ComparisonParams", %"struct.tflite::ComparisonParams"* %0, i64 0, i32 1
  %124 = load i32, i32* %123, align 4
  %125 = getelementptr inbounds %"struct.tflite::ComparisonParams", %"struct.tflite::ComparisonParams"* %0, i64 0, i32 2
  %126 = load i32, i32* %125, align 4
  %127 = getelementptr inbounds %"struct.tflite::ComparisonParams", %"struct.tflite::ComparisonParams"* %0, i64 0, i32 4
  %128 = load i32, i32* %127, align 4
  %129 = getelementptr inbounds %"struct.tflite::ComparisonParams", %"struct.tflite::ComparisonParams"* %0, i64 0, i32 5
  %130 = load i32, i32* %129, align 4
  %131 = load i32, i32* %15, align 8
  %132 = icmp sgt i32 %131, 5
  %133 = getelementptr inbounds %union.anon, %union.anon* %22, i64 0, i32 0
  %134 = load i32*, i32** %133, align 8
  %135 = select i1 %132, i32* %134, i32* %104
  %136 = load i32, i32* %135, align 4
  %137 = icmp sgt i32 %136, 0
  br i1 %137, label %138, label %205

138:                                              ; preds = %103
  %139 = getelementptr inbounds %"struct.tflite::ComparisonParams", %"struct.tflite::ComparisonParams"* %0, i64 0, i32 6
  %140 = load i32, i32* %139, align 4
  %141 = getelementptr inbounds %"struct.tflite::ComparisonParams", %"struct.tflite::ComparisonParams"* %0, i64 0, i32 3
  %142 = load i32, i32* %141, align 4
  %143 = bitcast %union.anon* %22 to [5 x i32]*
  %144 = getelementptr inbounds [5 x i32], [5 x i32]* %143, i64 0, i64 1
  %145 = getelementptr inbounds %"struct.tflite::reference_ops::BroadcastComparison4DSlowCommon", %"struct.tflite::reference_ops::BroadcastComparison4DSlowCommon"* %10, i64 0, i32 0, i32 1, i32 1
  %146 = bitcast [16 x i8]* %145 to i32*
  %147 = getelementptr inbounds %"struct.tflite::reference_ops::BroadcastComparison4DSlowCommon", %"struct.tflite::reference_ops::BroadcastComparison4DSlowCommon"* %10, i64 0, i32 0, i32 1, i32 1, i64 4
  %148 = bitcast i8* %147 to i32*
  %149 = getelementptr inbounds %"struct.tflite::reference_ops::BroadcastComparison4DSlowCommon", %"struct.tflite::reference_ops::BroadcastComparison4DSlowCommon"* %10, i64 0, i32 1, i32 1, i64 0
  %150 = load i32, i32* %149, align 8
  %151 = getelementptr inbounds %"struct.tflite::reference_ops::BroadcastComparison4DSlowCommon", %"struct.tflite::reference_ops::BroadcastComparison4DSlowCommon"* %10, i64 0, i32 1, i32 1, i64 1
  %152 = load i32, i32* %151, align 4
  %153 = getelementptr inbounds %"struct.tflite::reference_ops::BroadcastComparison4DSlowCommon", %"struct.tflite::reference_ops::BroadcastComparison4DSlowCommon"* %10, i64 0, i32 1, i32 1, i64 2
  %154 = load i32, i32* %153, align 8
  %155 = getelementptr inbounds %"struct.tflite::reference_ops::BroadcastComparison4DSlowCommon", %"struct.tflite::reference_ops::BroadcastComparison4DSlowCommon"* %10, i64 0, i32 1, i32 1, i64 3
  %156 = load i32, i32* %155, align 4
  %157 = getelementptr inbounds %"struct.tflite::reference_ops::BroadcastComparison4DSlowCommon", %"struct.tflite::reference_ops::BroadcastComparison4DSlowCommon"* %10, i64 0, i32 2, i32 1, i64 0
  %158 = load i32, i32* %157, align 8
  %159 = getelementptr inbounds %"struct.tflite::reference_ops::BroadcastComparison4DSlowCommon", %"struct.tflite::reference_ops::BroadcastComparison4DSlowCommon"* %10, i64 0, i32 2, i32 1, i64 1
  %160 = load i32, i32* %159, align 4
  %161 = getelementptr inbounds %"struct.tflite::reference_ops::BroadcastComparison4DSlowCommon", %"struct.tflite::reference_ops::BroadcastComparison4DSlowCommon"* %10, i64 0, i32 2, i32 1, i64 2
  %162 = load i32, i32* %161, align 8
  %163 = getelementptr inbounds %"struct.tflite::reference_ops::BroadcastComparison4DSlowCommon", %"struct.tflite::reference_ops::BroadcastComparison4DSlowCommon"* %10, i64 0, i32 2, i32 1, i64 3
  %164 = load i32, i32* %163, align 4
  %165 = sext i32 %126 to i64
  %166 = sub nsw i32 0, %142
  %167 = zext i32 %166 to i64
  %168 = shl nsw i64 -1, %167
  %169 = trunc i64 %168 to i32
  %170 = xor i32 %169, -1
  %171 = ashr i32 %170, 1
  %172 = sext i32 %130 to i64
  %173 = sub nsw i32 0, %140
  %174 = zext i32 %173 to i64
  %175 = shl nsw i64 -1, %174
  %176 = trunc i64 %175 to i32
  %177 = xor i32 %176, -1
  %178 = ashr i32 %177, 1
  %179 = getelementptr inbounds i32, i32* %104, i64 1
  %180 = sext i32 %164 to i64
  %181 = sext i32 %156 to i64
  %182 = sext i32 %162 to i64
  %183 = sext i32 %154 to i64
  %184 = sext i32 %160 to i64
  %185 = sext i32 %152 to i64
  %186 = sext i32 %158 to i64
  %187 = sext i32 %150 to i64
  %188 = getelementptr inbounds i32, i32* %134, i64 1
  %189 = select i1 %132, i32* %188, i32* %144
  %190 = getelementptr inbounds i32, i32* %134, i64 2
  %191 = select i1 %132, i32* %190, i32* %146
  %192 = getelementptr inbounds i32, i32* %134, i64 3
  %193 = select i1 %132, i32* %192, i32* %148
  %194 = icmp eq i32 %126, -2147483648
  %195 = icmp eq i32 %130, -2147483648
  br label %196

196:                                              ; preds = %138, %229
  %197 = phi i32 [ %136, %138 ], [ %230, %229 ]
  %198 = phi i64 [ 0, %138 ], [ %231, %229 ]
  %199 = load i32, i32* %189, align 4
  %200 = icmp sgt i32 %199, 0
  br i1 %200, label %201, label %229

201:                                              ; preds = %196
  %202 = mul nsw i64 %198, %187
  %203 = mul nsw i64 %198, %186
  %204 = trunc i64 %198 to i32
  br label %212

205:                                              ; preds = %229, %103
  %206 = xor i1 %132, true
  %207 = icmp eq i32* %134, null
  %208 = or i1 %207, %206
  br i1 %208, label %211, label %209

209:                                              ; preds = %205
  %210 = bitcast i32* %134 to i8*
  call void @_ZdaPv(i8* %210) #9
  br label %211

211:                                              ; preds = %205, %209
  call void @llvm.lifetime.end.p0i8(i64 96, i8* nonnull %11) #8
  ret void

212:                                              ; preds = %201, %250
  %213 = phi i32 [ %199, %201 ], [ %251, %250 ]
  %214 = phi i64 [ 0, %201 ], [ %252, %250 ]
  %215 = load i32, i32* %191, align 4
  %216 = icmp sgt i32 %215, 0
  br i1 %216, label %217, label %250

217:                                              ; preds = %212
  %218 = mul nsw i64 %214, %185
  %219 = add nsw i64 %218, %202
  %220 = mul nsw i64 %214, %184
  %221 = add nsw i64 %220, %203
  %222 = load i32, i32* %179, align 4
  %223 = mul nsw i32 %222, %204
  %224 = trunc i64 %214 to i32
  %225 = add nsw i32 %223, %224
  %226 = load i32, i32* %193, align 4
  br label %234

227:                                              ; preds = %250
  %228 = load i32, i32* %135, align 4
  br label %229

229:                                              ; preds = %227, %196
  %230 = phi i32 [ %228, %227 ], [ %197, %196 ]
  %231 = add nuw nsw i64 %198, 1
  %232 = sext i32 %230 to i64
  %233 = icmp slt i64 %231, %232
  br i1 %233, label %196, label %205

234:                                              ; preds = %217, %257
  %235 = phi i32 [ %215, %217 ], [ %258, %257 ]
  %236 = phi i32 [ %226, %217 ], [ %259, %257 ]
  %237 = phi i64 [ 0, %217 ], [ %260, %257 ]
  %238 = icmp sgt i32 %236, 0
  br i1 %238, label %239, label %257

239:                                              ; preds = %234
  %240 = mul nsw i64 %237, %183
  %241 = add nsw i64 %219, %240
  %242 = mul nsw i64 %237, %182
  %243 = add nsw i64 %221, %242
  %244 = load i32, i32* %146, align 8
  %245 = mul nsw i32 %225, %244
  %246 = trunc i64 %237 to i32
  %247 = add nsw i32 %245, %246
  br label %263

248:                                              ; preds = %257
  %249 = load i32, i32* %189, align 4
  br label %250

250:                                              ; preds = %248, %212
  %251 = phi i32 [ %249, %248 ], [ %213, %212 ]
  %252 = add nuw nsw i64 %214, 1
  %253 = sext i32 %251 to i64
  %254 = icmp slt i64 %252, %253
  br i1 %254, label %212, label %227

255:                                              ; preds = %312
  %256 = load i32, i32* %191, align 4
  br label %257

257:                                              ; preds = %255, %234
  %258 = phi i32 [ %256, %255 ], [ %235, %234 ]
  %259 = phi i32 [ %330, %255 ], [ %236, %234 ]
  %260 = add nuw nsw i64 %237, 1
  %261 = sext i32 %258 to i64
  %262 = icmp slt i64 %260, %261
  br i1 %262, label %234, label %248

263:                                              ; preds = %239, %312
  %264 = phi i64 [ 0, %239 ], [ %329, %312 ]
  %265 = mul nsw i64 %264, %181
  %266 = add nsw i64 %241, %265
  %267 = getelementptr inbounds i8, i8* %2, i64 %266
  %268 = load i8, i8* %267, align 1
  %269 = sext i8 %268 to i32
  %270 = add nsw i32 %124, %269
  %271 = mul nsw i64 %264, %180
  %272 = add nsw i64 %243, %271
  %273 = getelementptr inbounds i8, i8* %4, i64 %272
  %274 = load i8, i8* %273, align 1
  %275 = sext i8 %274 to i32
  %276 = add nsw i32 %128, %275
  %277 = shl i32 %270, %122
  %278 = shl i32 %276, %122
  %279 = icmp eq i32 %277, %126
  br i1 %279, label %282, label %280

280:                                              ; preds = %263
  %281 = sext i32 %277 to i64
  br label %283

282:                                              ; preds = %263
  br i1 %194, label %291, label %283

283:                                              ; preds = %282, %280
  %284 = phi i64 [ %281, %280 ], [ %165, %282 ]
  %285 = mul nsw i64 %284, %165
  %286 = icmp sgt i64 %285, -1
  %287 = select i1 %286, i64 1073741824, i64 -1073741823
  %288 = add nsw i64 %287, %285
  %289 = sdiv i64 %288, 2147483648
  %290 = trunc i64 %289 to i32
  br label %291

291:                                              ; preds = %282, %283
  %292 = phi i32 [ %290, %283 ], [ 2147483647, %282 ]
  %293 = and i32 %292, %170
  %294 = lshr i32 %292, 31
  %295 = add nsw i32 %294, %171
  %296 = ashr i32 %292, %166
  %297 = icmp sgt i32 %293, %295
  %298 = zext i1 %297 to i32
  %299 = add nsw i32 %296, %298
  %300 = icmp eq i32 %278, %130
  br i1 %300, label %303, label %301

301:                                              ; preds = %291
  %302 = sext i32 %278 to i64
  br label %304

303:                                              ; preds = %291
  br i1 %195, label %312, label %304

304:                                              ; preds = %303, %301
  %305 = phi i64 [ %302, %301 ], [ %172, %303 ]
  %306 = mul nsw i64 %305, %172
  %307 = icmp sgt i64 %306, -1
  %308 = select i1 %307, i64 1073741824, i64 -1073741823
  %309 = add nsw i64 %308, %306
  %310 = sdiv i64 %309, 2147483648
  %311 = trunc i64 %310 to i32
  br label %312

312:                                              ; preds = %303, %304
  %313 = phi i32 [ %311, %304 ], [ 2147483647, %303 ]
  %314 = and i32 %313, %177
  %315 = lshr i32 %313, 31
  %316 = add nsw i32 %315, %178
  %317 = ashr i32 %313, %173
  %318 = icmp sgt i32 %314, %316
  %319 = zext i1 %318 to i32
  %320 = add nsw i32 %317, %319
  %321 = icmp sge i32 %299, %320
  %322 = load i32, i32* %148, align 4
  %323 = mul nsw i32 %247, %322
  %324 = trunc i64 %264 to i32
  %325 = add nsw i32 %323, %324
  %326 = sext i32 %325 to i64
  %327 = getelementptr inbounds i8, i8* %6, i64 %326
  %328 = zext i1 %321 to i8
  store i8 %328, i8* %327, align 1
  %329 = add nuw nsw i64 %264, 1
  %330 = load i32, i32* %193, align 4
  %331 = sext i32 %330 to i64
  %332 = icmp slt i64 %329, %331
  br i1 %332, label %263, label %255
}

; Function Attrs: inlinehint nounwind ssp uwtable
define linkonce_odr hidden void @_ZN6tflite13reference_ops29BroadcastComparison4DSlowImplIfXadL_ZNS0_6LessFnIfEEbT_S3_EEEEvRKNS_16ComparisonParamsERKNS_12RuntimeShapeEPKS3_S9_SB_S9_Pb(%"struct.tflite::ComparisonParams"* dereferenceable(32), %"class.tflite::RuntimeShape"* dereferenceable(32), float*, %"class.tflite::RuntimeShape"* dereferenceable(32), float*, %"class.tflite::RuntimeShape"* dereferenceable(32), i8*) local_unnamed_addr #4 comdat {
  %8 = alloca %"struct.tflite::NdArrayDesc", align 4
  %9 = alloca %"struct.tflite::NdArrayDesc", align 4
  %10 = alloca %"struct.tflite::reference_ops::BroadcastComparison4DSlowCommon", align 8
  %11 = bitcast %"struct.tflite::reference_ops::BroadcastComparison4DSlowCommon"* %10 to i8*
  call void @llvm.lifetime.start.p0i8(i64 96, i8* nonnull %11) #8
  call void @llvm.memset.p0i8.i64(i8* nonnull align 8 %11, i8 -86, i64 96, i1 false)
  %12 = getelementptr inbounds %"class.tflite::RuntimeShape", %"class.tflite::RuntimeShape"* %5, i64 0, i32 0
  %13 = bitcast %"struct.tflite::NdArrayDesc"* %8 to i8*
  call void @llvm.lifetime.start.p0i8(i64 32, i8* nonnull %13) #8, !noalias !1058
  %14 = bitcast %"struct.tflite::NdArrayDesc"* %9 to i8*
  call void @llvm.memset.p0i8.i64(i8* nonnull align 4 %13, i8 -86, i64 32, i1 false) #8, !noalias !1058
  call void @llvm.lifetime.start.p0i8(i64 32, i8* nonnull %14) #8, !noalias !1058
  call void @llvm.memset.p0i8.i64(i8* nonnull align 4 %14, i8 -86, i64 32, i1 false) #8, !noalias !1058
  call void @_ZN6tflite35NdArrayDescsForElementwiseBroadcastILi4EEEvRKNS_12RuntimeShapeES3_PNS_11NdArrayDescIXT_EEES6_(%"class.tflite::RuntimeShape"* dereferenceable(32) %1, %"class.tflite::RuntimeShape"* dereferenceable(32) %3, %"struct.tflite::NdArrayDesc"* nonnull %8, %"struct.tflite::NdArrayDesc"* nonnull %9) #8, !noalias !1058
  %15 = getelementptr inbounds %"struct.tflite::reference_ops::BroadcastComparison4DSlowCommon", %"struct.tflite::reference_ops::BroadcastComparison4DSlowCommon"* %10, i64 0, i32 0, i32 0
  store i32 0, i32* %15, align 8, !alias.scope !1061
  %16 = load i32, i32* %12, align 8, !noalias !1061
  %17 = icmp sgt i32 %16, 4
  br i1 %17, label %18, label %19

18:                                               ; preds = %7
  call void @abort() #10, !noalias !1061
  unreachable

19:                                               ; preds = %7
  store i32 4, i32* %15, align 8, !alias.scope !1061
  %20 = sub i32 4, %16
  %21 = icmp sgt i32 %20, 0
  %22 = getelementptr inbounds %"struct.tflite::reference_ops::BroadcastComparison4DSlowCommon", %"struct.tflite::reference_ops::BroadcastComparison4DSlowCommon"* %10, i64 0, i32 0, i32 1
  br i1 %21, label %23, label %103

23:                                               ; preds = %19
  %24 = bitcast %union.anon* %22 to [5 x i32]*
  %25 = zext i32 %20 to i64
  %26 = icmp ult i32 %20, 8
  br i1 %26, label %96, label %27

27:                                               ; preds = %23
  %28 = and i64 %25, 4294967288
  %29 = add nsw i64 %28, -8
  %30 = lshr exact i64 %29, 3
  %31 = add nuw nsw i64 %30, 1
  %32 = and i64 %31, 7
  %33 = icmp ult i64 %29, 56
  br i1 %33, label %81, label %34

34:                                               ; preds = %27
  %35 = sub nsw i64 %31, %32
  br label %36

36:                                               ; preds = %36, %34
  %37 = phi i64 [ 0, %34 ], [ %78, %36 ]
  %38 = phi i64 [ %35, %34 ], [ %79, %36 ]
  %39 = getelementptr inbounds [5 x i32], [5 x i32]* %24, i64 0, i64 %37
  %40 = bitcast i32* %39 to <4 x i32>*
  store <4 x i32> <i32 1, i32 1, i32 1, i32 1>, <4 x i32>* %40, align 8, !alias.scope !1061
  %41 = getelementptr inbounds i32, i32* %39, i64 4
  %42 = bitcast i32* %41 to <4 x i32>*
  store <4 x i32> <i32 1, i32 1, i32 1, i32 1>, <4 x i32>* %42, align 8, !alias.scope !1061
  %43 = or i64 %37, 8
  %44 = getelementptr inbounds [5 x i32], [5 x i32]* %24, i64 0, i64 %43
  %45 = bitcast i32* %44 to <4 x i32>*
  store <4 x i32> <i32 1, i32 1, i32 1, i32 1>, <4 x i32>* %45, align 8, !alias.scope !1061
  %46 = getelementptr inbounds i32, i32* %44, i64 4
  %47 = bitcast i32* %46 to <4 x i32>*
  store <4 x i32> <i32 1, i32 1, i32 1, i32 1>, <4 x i32>* %47, align 8, !alias.scope !1061
  %48 = or i64 %37, 16
  %49 = getelementptr inbounds [5 x i32], [5 x i32]* %24, i64 0, i64 %48
  %50 = bitcast i32* %49 to <4 x i32>*
  store <4 x i32> <i32 1, i32 1, i32 1, i32 1>, <4 x i32>* %50, align 8, !alias.scope !1061
  %51 = getelementptr inbounds i32, i32* %49, i64 4
  %52 = bitcast i32* %51 to <4 x i32>*
  store <4 x i32> <i32 1, i32 1, i32 1, i32 1>, <4 x i32>* %52, align 8, !alias.scope !1061
  %53 = or i64 %37, 24
  %54 = getelementptr inbounds [5 x i32], [5 x i32]* %24, i64 0, i64 %53
  %55 = bitcast i32* %54 to <4 x i32>*
  store <4 x i32> <i32 1, i32 1, i32 1, i32 1>, <4 x i32>* %55, align 8, !alias.scope !1061
  %56 = getelementptr inbounds i32, i32* %54, i64 4
  %57 = bitcast i32* %56 to <4 x i32>*
  store <4 x i32> <i32 1, i32 1, i32 1, i32 1>, <4 x i32>* %57, align 8, !alias.scope !1061
  %58 = or i64 %37, 32
  %59 = getelementptr inbounds [5 x i32], [5 x i32]* %24, i64 0, i64 %58
  %60 = bitcast i32* %59 to <4 x i32>*
  store <4 x i32> <i32 1, i32 1, i32 1, i32 1>, <4 x i32>* %60, align 8, !alias.scope !1061
  %61 = getelementptr inbounds i32, i32* %59, i64 4
  %62 = bitcast i32* %61 to <4 x i32>*
  store <4 x i32> <i32 1, i32 1, i32 1, i32 1>, <4 x i32>* %62, align 8, !alias.scope !1061
  %63 = or i64 %37, 40
  %64 = getelementptr inbounds [5 x i32], [5 x i32]* %24, i64 0, i64 %63
  %65 = bitcast i32* %64 to <4 x i32>*
  store <4 x i32> <i32 1, i32 1, i32 1, i32 1>, <4 x i32>* %65, align 8, !alias.scope !1061
  %66 = getelementptr inbounds i32, i32* %64, i64 4
  %67 = bitcast i32* %66 to <4 x i32>*
  store <4 x i32> <i32 1, i32 1, i32 1, i32 1>, <4 x i32>* %67, align 8, !alias.scope !1061
  %68 = or i64 %37, 48
  %69 = getelementptr inbounds [5 x i32], [5 x i32]* %24, i64 0, i64 %68
  %70 = bitcast i32* %69 to <4 x i32>*
  store <4 x i32> <i32 1, i32 1, i32 1, i32 1>, <4 x i32>* %70, align 8, !alias.scope !1061
  %71 = getelementptr inbounds i32, i32* %69, i64 4
  %72 = bitcast i32* %71 to <4 x i32>*
  store <4 x i32> <i32 1, i32 1, i32 1, i32 1>, <4 x i32>* %72, align 8, !alias.scope !1061
  %73 = or i64 %37, 56
  %74 = getelementptr inbounds [5 x i32], [5 x i32]* %24, i64 0, i64 %73
  %75 = bitcast i32* %74 to <4 x i32>*
  store <4 x i32> <i32 1, i32 1, i32 1, i32 1>, <4 x i32>* %75, align 8, !alias.scope !1061
  %76 = getelementptr inbounds i32, i32* %74, i64 4
  %77 = bitcast i32* %76 to <4 x i32>*
  store <4 x i32> <i32 1, i32 1, i32 1, i32 1>, <4 x i32>* %77, align 8, !alias.scope !1061
  %78 = add i64 %37, 64
  %79 = add i64 %38, -8
  %80 = icmp eq i64 %79, 0
  br i1 %80, label %81, label %36, !llvm.loop !1064

81:                                               ; preds = %36, %27
  %82 = phi i64 [ 0, %27 ], [ %78, %36 ]
  %83 = icmp eq i64 %32, 0
  br i1 %83, label %94, label %84

84:                                               ; preds = %81, %84
  %85 = phi i64 [ %91, %84 ], [ %82, %81 ]
  %86 = phi i64 [ %92, %84 ], [ %32, %81 ]
  %87 = getelementptr inbounds [5 x i32], [5 x i32]* %24, i64 0, i64 %85
  %88 = bitcast i32* %87 to <4 x i32>*
  store <4 x i32> <i32 1, i32 1, i32 1, i32 1>, <4 x i32>* %88, align 8, !alias.scope !1061
  %89 = getelementptr inbounds i32, i32* %87, i64 4
  %90 = bitcast i32* %89 to <4 x i32>*
  store <4 x i32> <i32 1, i32 1, i32 1, i32 1>, <4 x i32>* %90, align 8, !alias.scope !1061
  %91 = add i64 %85, 8
  %92 = add i64 %86, -1
  %93 = icmp eq i64 %92, 0
  br i1 %93, label %94, label %84, !llvm.loop !1065

94:                                               ; preds = %84, %81
  %95 = icmp eq i64 %28, %25
  br i1 %95, label %103, label %96

96:                                               ; preds = %94, %23
  %97 = phi i64 [ 0, %23 ], [ %28, %94 ]
  br label %98

98:                                               ; preds = %96, %98
  %99 = phi i64 [ %101, %98 ], [ %97, %96 ]
  %100 = getelementptr inbounds [5 x i32], [5 x i32]* %24, i64 0, i64 %99
  store i32 1, i32* %100, align 4, !alias.scope !1061
  %101 = add nuw nsw i64 %99, 1
  %102 = icmp eq i64 %101, %25
  br i1 %102, label %103, label %98, !llvm.loop !1066

103:                                              ; preds = %98, %94, %19
  %104 = bitcast %union.anon* %22 to i32*
  %105 = sext i32 %20 to i64
  %106 = getelementptr inbounds i32, i32* %104, i64 %105
  %107 = bitcast i32* %106 to i8*
  %108 = icmp sgt i32 %16, 5
  %109 = getelementptr inbounds %"class.tflite::RuntimeShape", %"class.tflite::RuntimeShape"* %5, i64 0, i32 1
  %110 = getelementptr inbounds %union.anon, %union.anon* %109, i64 0, i32 0
  %111 = load i32*, i32** %110, align 8, !noalias !1061
  %112 = bitcast %union.anon* %109 to i32*
  %113 = select i1 %108, i32* %111, i32* %112
  %114 = bitcast i32* %113 to i8*
  %115 = sext i32 %16 to i64
  %116 = shl nsw i64 %115, 2
  call void @llvm.memcpy.p0i8.p0i8.i64(i8* align 4 %107, i8* align 4 %114, i64 %116, i1 false) #8
  %117 = getelementptr inbounds %"struct.tflite::reference_ops::BroadcastComparison4DSlowCommon", %"struct.tflite::reference_ops::BroadcastComparison4DSlowCommon"* %10, i64 0, i32 1
  %118 = bitcast %"struct.tflite::NdArrayDesc"* %117 to i8*
  call void @llvm.memcpy.p0i8.p0i8.i64(i8* align 8 %118, i8* nonnull align 4 %13, i64 32, i1 false) #8
  %119 = getelementptr inbounds %"struct.tflite::reference_ops::BroadcastComparison4DSlowCommon", %"struct.tflite::reference_ops::BroadcastComparison4DSlowCommon"* %10, i64 0, i32 2
  %120 = bitcast %"struct.tflite::NdArrayDesc"* %119 to i8*
  call void @llvm.memcpy.p0i8.p0i8.i64(i8* align 8 %120, i8* nonnull align 4 %14, i64 32, i1 false) #8
  call void @llvm.lifetime.end.p0i8(i64 32, i8* nonnull %14) #8, !noalias !1058
  call void @llvm.lifetime.end.p0i8(i64 32, i8* nonnull %13) #8, !noalias !1058
  %121 = load i32, i32* %15, align 8
  %122 = icmp sgt i32 %121, 5
  %123 = getelementptr inbounds %union.anon, %union.anon* %22, i64 0, i32 0
  %124 = load i32*, i32** %123, align 8
  %125 = select i1 %122, i32* %124, i32* %104
  %126 = load i32, i32* %125, align 4
  %127 = icmp sgt i32 %126, 0
  br i1 %127, label %128, label %175

128:                                              ; preds = %103
  %129 = bitcast %union.anon* %22 to [5 x i32]*
  %130 = getelementptr inbounds [5 x i32], [5 x i32]* %129, i64 0, i64 1
  %131 = getelementptr inbounds %"struct.tflite::reference_ops::BroadcastComparison4DSlowCommon", %"struct.tflite::reference_ops::BroadcastComparison4DSlowCommon"* %10, i64 0, i32 0, i32 1, i32 1
  %132 = bitcast [16 x i8]* %131 to i32*
  %133 = getelementptr inbounds %"struct.tflite::reference_ops::BroadcastComparison4DSlowCommon", %"struct.tflite::reference_ops::BroadcastComparison4DSlowCommon"* %10, i64 0, i32 0, i32 1, i32 1, i64 4
  %134 = bitcast i8* %133 to i32*
  %135 = getelementptr inbounds %"struct.tflite::reference_ops::BroadcastComparison4DSlowCommon", %"struct.tflite::reference_ops::BroadcastComparison4DSlowCommon"* %10, i64 0, i32 1, i32 1, i64 0
  %136 = load i32, i32* %135, align 8
  %137 = getelementptr inbounds %"struct.tflite::reference_ops::BroadcastComparison4DSlowCommon", %"struct.tflite::reference_ops::BroadcastComparison4DSlowCommon"* %10, i64 0, i32 1, i32 1, i64 1
  %138 = load i32, i32* %137, align 4
  %139 = getelementptr inbounds %"struct.tflite::reference_ops::BroadcastComparison4DSlowCommon", %"struct.tflite::reference_ops::BroadcastComparison4DSlowCommon"* %10, i64 0, i32 1, i32 1, i64 2
  %140 = load i32, i32* %139, align 8
  %141 = getelementptr inbounds %"struct.tflite::reference_ops::BroadcastComparison4DSlowCommon", %"struct.tflite::reference_ops::BroadcastComparison4DSlowCommon"* %10, i64 0, i32 1, i32 1, i64 3
  %142 = load i32, i32* %141, align 4
  %143 = getelementptr inbounds %"struct.tflite::reference_ops::BroadcastComparison4DSlowCommon", %"struct.tflite::reference_ops::BroadcastComparison4DSlowCommon"* %10, i64 0, i32 2, i32 1, i64 0
  %144 = load i32, i32* %143, align 8
  %145 = getelementptr inbounds %"struct.tflite::reference_ops::BroadcastComparison4DSlowCommon", %"struct.tflite::reference_ops::BroadcastComparison4DSlowCommon"* %10, i64 0, i32 2, i32 1, i64 1
  %146 = load i32, i32* %145, align 4
  %147 = getelementptr inbounds %"struct.tflite::reference_ops::BroadcastComparison4DSlowCommon", %"struct.tflite::reference_ops::BroadcastComparison4DSlowCommon"* %10, i64 0, i32 2, i32 1, i64 2
  %148 = load i32, i32* %147, align 8
  %149 = getelementptr inbounds %"struct.tflite::reference_ops::BroadcastComparison4DSlowCommon", %"struct.tflite::reference_ops::BroadcastComparison4DSlowCommon"* %10, i64 0, i32 2, i32 1, i64 3
  %150 = load i32, i32* %149, align 4
  %151 = getelementptr inbounds i32, i32* %104, i64 1
  %152 = sext i32 %150 to i64
  %153 = sext i32 %142 to i64
  %154 = sext i32 %148 to i64
  %155 = sext i32 %140 to i64
  %156 = sext i32 %146 to i64
  %157 = sext i32 %138 to i64
  %158 = sext i32 %144 to i64
  %159 = sext i32 %136 to i64
  %160 = getelementptr inbounds i32, i32* %124, i64 1
  %161 = select i1 %122, i32* %160, i32* %130
  %162 = getelementptr inbounds i32, i32* %124, i64 2
  %163 = select i1 %122, i32* %162, i32* %132
  %164 = getelementptr inbounds i32, i32* %124, i64 3
  %165 = select i1 %122, i32* %164, i32* %134
  br label %166

166:                                              ; preds = %128, %199
  %167 = phi i32 [ %126, %128 ], [ %200, %199 ]
  %168 = phi i64 [ 0, %128 ], [ %201, %199 ]
  %169 = load i32, i32* %161, align 4
  %170 = icmp sgt i32 %169, 0
  br i1 %170, label %171, label %199

171:                                              ; preds = %166
  %172 = mul nsw i64 %168, %159
  %173 = mul nsw i64 %168, %158
  %174 = trunc i64 %168 to i32
  br label %182

175:                                              ; preds = %199, %103
  %176 = xor i1 %122, true
  %177 = icmp eq i32* %124, null
  %178 = or i1 %177, %176
  br i1 %178, label %181, label %179

179:                                              ; preds = %175
  %180 = bitcast i32* %124 to i8*
  call void @_ZdaPv(i8* %180) #9
  br label %181

181:                                              ; preds = %175, %179
  call void @llvm.lifetime.end.p0i8(i64 96, i8* nonnull %11) #8
  ret void

182:                                              ; preds = %171, %222
  %183 = phi i32 [ %169, %171 ], [ %223, %222 ]
  %184 = phi i64 [ 0, %171 ], [ %224, %222 ]
  %185 = load i32, i32* %163, align 4
  %186 = icmp sgt i32 %185, 0
  br i1 %186, label %187, label %222

187:                                              ; preds = %182
  %188 = mul nsw i64 %184, %157
  %189 = add nsw i64 %188, %172
  %190 = mul nsw i64 %184, %156
  %191 = add nsw i64 %190, %173
  %192 = load i32, i32* %151, align 4
  %193 = mul nsw i32 %192, %174
  %194 = trunc i64 %184 to i32
  %195 = add nsw i32 %193, %194
  %196 = load i32, i32* %165, align 4
  br label %204

197:                                              ; preds = %222
  %198 = load i32, i32* %125, align 4
  br label %199

199:                                              ; preds = %197, %166
  %200 = phi i32 [ %198, %197 ], [ %167, %166 ]
  %201 = add nuw nsw i64 %168, 1
  %202 = sext i32 %200 to i64
  %203 = icmp slt i64 %201, %202
  br i1 %203, label %166, label %175

204:                                              ; preds = %187, %229
  %205 = phi i32 [ %185, %187 ], [ %230, %229 ]
  %206 = phi i32 [ %196, %187 ], [ %231, %229 ]
  %207 = phi i64 [ 0, %187 ], [ %232, %229 ]
  %208 = icmp sgt i32 %206, 0
  br i1 %208, label %209, label %229

209:                                              ; preds = %204
  %210 = mul nsw i64 %207, %155
  %211 = add nsw i64 %189, %210
  %212 = mul nsw i64 %207, %154
  %213 = add nsw i64 %191, %212
  %214 = load i32, i32* %132, align 8
  %215 = mul nsw i32 %195, %214
  %216 = trunc i64 %207 to i32
  %217 = add nsw i32 %215, %216
  %218 = load i32, i32* %134, align 4
  %219 = mul nsw i32 %217, %218
  br label %235

220:                                              ; preds = %229
  %221 = load i32, i32* %161, align 4
  br label %222

222:                                              ; preds = %220, %182
  %223 = phi i32 [ %221, %220 ], [ %183, %182 ]
  %224 = add nuw nsw i64 %184, 1
  %225 = sext i32 %223 to i64
  %226 = icmp slt i64 %224, %225
  br i1 %226, label %182, label %197

227:                                              ; preds = %235
  %228 = load i32, i32* %163, align 4
  br label %229

229:                                              ; preds = %227, %204
  %230 = phi i32 [ %228, %227 ], [ %205, %204 ]
  %231 = phi i32 [ %252, %227 ], [ %206, %204 ]
  %232 = add nuw nsw i64 %207, 1
  %233 = sext i32 %230 to i64
  %234 = icmp slt i64 %232, %233
  br i1 %234, label %204, label %220

235:                                              ; preds = %209, %235
  %236 = phi i64 [ 0, %209 ], [ %251, %235 ]
  %237 = mul nsw i64 %236, %153
  %238 = add nsw i64 %211, %237
  %239 = getelementptr inbounds float, float* %2, i64 %238
  %240 = load float, float* %239, align 4
  %241 = mul nsw i64 %236, %152
  %242 = add nsw i64 %213, %241
  %243 = getelementptr inbounds float, float* %4, i64 %242
  %244 = load float, float* %243, align 4
  %245 = fcmp olt float %240, %244
  %246 = trunc i64 %236 to i32
  %247 = add nsw i32 %219, %246
  %248 = sext i32 %247 to i64
  %249 = getelementptr inbounds i8, i8* %6, i64 %248
  %250 = zext i1 %245 to i8
  store i8 %250, i8* %249, align 1
  %251 = add nuw nsw i64 %236, 1
  %252 = load i32, i32* %165, align 4
  %253 = sext i32 %252 to i64
  %254 = icmp slt i64 %251, %253
  br i1 %254, label %235, label %227
}

; Function Attrs: inlinehint nounwind ssp uwtable
define linkonce_odr hidden void @_ZN6tflite13reference_ops29BroadcastComparison4DSlowImplIiXadL_ZNS0_6LessFnIiEEbT_S3_EEEEvRKNS_16ComparisonParamsERKNS_12RuntimeShapeEPKS3_S9_SB_S9_Pb(%"struct.tflite::ComparisonParams"* dereferenceable(32), %"class.tflite::RuntimeShape"* dereferenceable(32), i32*, %"class.tflite::RuntimeShape"* dereferenceable(32), i32*, %"class.tflite::RuntimeShape"* dereferenceable(32), i8*) local_unnamed_addr #4 comdat {
  %8 = alloca %"struct.tflite::NdArrayDesc", align 4
  %9 = alloca %"struct.tflite::NdArrayDesc", align 4
  %10 = alloca %"struct.tflite::reference_ops::BroadcastComparison4DSlowCommon", align 8
  %11 = bitcast %"struct.tflite::reference_ops::BroadcastComparison4DSlowCommon"* %10 to i8*
  call void @llvm.lifetime.start.p0i8(i64 96, i8* nonnull %11) #8
  call void @llvm.memset.p0i8.i64(i8* nonnull align 8 %11, i8 -86, i64 96, i1 false)
  %12 = getelementptr inbounds %"class.tflite::RuntimeShape", %"class.tflite::RuntimeShape"* %5, i64 0, i32 0
  %13 = bitcast %"struct.tflite::NdArrayDesc"* %8 to i8*
  call void @llvm.lifetime.start.p0i8(i64 32, i8* nonnull %13) #8, !noalias !1067
  %14 = bitcast %"struct.tflite::NdArrayDesc"* %9 to i8*
  call void @llvm.memset.p0i8.i64(i8* nonnull align 4 %13, i8 -86, i64 32, i1 false) #8, !noalias !1067
  call void @llvm.lifetime.start.p0i8(i64 32, i8* nonnull %14) #8, !noalias !1067
  call void @llvm.memset.p0i8.i64(i8* nonnull align 4 %14, i8 -86, i64 32, i1 false) #8, !noalias !1067
  call void @_ZN6tflite35NdArrayDescsForElementwiseBroadcastILi4EEEvRKNS_12RuntimeShapeES3_PNS_11NdArrayDescIXT_EEES6_(%"class.tflite::RuntimeShape"* dereferenceable(32) %1, %"class.tflite::RuntimeShape"* dereferenceable(32) %3, %"struct.tflite::NdArrayDesc"* nonnull %8, %"struct.tflite::NdArrayDesc"* nonnull %9) #8, !noalias !1067
  %15 = getelementptr inbounds %"struct.tflite::reference_ops::BroadcastComparison4DSlowCommon", %"struct.tflite::reference_ops::BroadcastComparison4DSlowCommon"* %10, i64 0, i32 0, i32 0
  store i32 0, i32* %15, align 8, !alias.scope !1070
  %16 = load i32, i32* %12, align 8, !noalias !1070
  %17 = icmp sgt i32 %16, 4
  br i1 %17, label %18, label %19

18:                                               ; preds = %7
  call void @abort() #10, !noalias !1070
  unreachable

19:                                               ; preds = %7
  store i32 4, i32* %15, align 8, !alias.scope !1070
  %20 = sub i32 4, %16
  %21 = icmp sgt i32 %20, 0
  %22 = getelementptr inbounds %"struct.tflite::reference_ops::BroadcastComparison4DSlowCommon", %"struct.tflite::reference_ops::BroadcastComparison4DSlowCommon"* %10, i64 0, i32 0, i32 1
  br i1 %21, label %23, label %103

23:                                               ; preds = %19
  %24 = bitcast %union.anon* %22 to [5 x i32]*
  %25 = zext i32 %20 to i64
  %26 = icmp ult i32 %20, 8
  br i1 %26, label %96, label %27

27:                                               ; preds = %23
  %28 = and i64 %25, 4294967288
  %29 = add nsw i64 %28, -8
  %30 = lshr exact i64 %29, 3
  %31 = add nuw nsw i64 %30, 1
  %32 = and i64 %31, 7
  %33 = icmp ult i64 %29, 56
  br i1 %33, label %81, label %34

34:                                               ; preds = %27
  %35 = sub nsw i64 %31, %32
  br label %36

36:                                               ; preds = %36, %34
  %37 = phi i64 [ 0, %34 ], [ %78, %36 ]
  %38 = phi i64 [ %35, %34 ], [ %79, %36 ]
  %39 = getelementptr inbounds [5 x i32], [5 x i32]* %24, i64 0, i64 %37
  %40 = bitcast i32* %39 to <4 x i32>*
  store <4 x i32> <i32 1, i32 1, i32 1, i32 1>, <4 x i32>* %40, align 8, !alias.scope !1070
  %41 = getelementptr inbounds i32, i32* %39, i64 4
  %42 = bitcast i32* %41 to <4 x i32>*
  store <4 x i32> <i32 1, i32 1, i32 1, i32 1>, <4 x i32>* %42, align 8, !alias.scope !1070
  %43 = or i64 %37, 8
  %44 = getelementptr inbounds [5 x i32], [5 x i32]* %24, i64 0, i64 %43
  %45 = bitcast i32* %44 to <4 x i32>*
  store <4 x i32> <i32 1, i32 1, i32 1, i32 1>, <4 x i32>* %45, align 8, !alias.scope !1070
  %46 = getelementptr inbounds i32, i32* %44, i64 4
  %47 = bitcast i32* %46 to <4 x i32>*
  store <4 x i32> <i32 1, i32 1, i32 1, i32 1>, <4 x i32>* %47, align 8, !alias.scope !1070
  %48 = or i64 %37, 16
  %49 = getelementptr inbounds [5 x i32], [5 x i32]* %24, i64 0, i64 %48
  %50 = bitcast i32* %49 to <4 x i32>*
  store <4 x i32> <i32 1, i32 1, i32 1, i32 1>, <4 x i32>* %50, align 8, !alias.scope !1070
  %51 = getelementptr inbounds i32, i32* %49, i64 4
  %52 = bitcast i32* %51 to <4 x i32>*
  store <4 x i32> <i32 1, i32 1, i32 1, i32 1>, <4 x i32>* %52, align 8, !alias.scope !1070
  %53 = or i64 %37, 24
  %54 = getelementptr inbounds [5 x i32], [5 x i32]* %24, i64 0, i64 %53
  %55 = bitcast i32* %54 to <4 x i32>*
  store <4 x i32> <i32 1, i32 1, i32 1, i32 1>, <4 x i32>* %55, align 8, !alias.scope !1070
  %56 = getelementptr inbounds i32, i32* %54, i64 4
  %57 = bitcast i32* %56 to <4 x i32>*
  store <4 x i32> <i32 1, i32 1, i32 1, i32 1>, <4 x i32>* %57, align 8, !alias.scope !1070
  %58 = or i64 %37, 32
  %59 = getelementptr inbounds [5 x i32], [5 x i32]* %24, i64 0, i64 %58
  %60 = bitcast i32* %59 to <4 x i32>*
  store <4 x i32> <i32 1, i32 1, i32 1, i32 1>, <4 x i32>* %60, align 8, !alias.scope !1070
  %61 = getelementptr inbounds i32, i32* %59, i64 4
  %62 = bitcast i32* %61 to <4 x i32>*
  store <4 x i32> <i32 1, i32 1, i32 1, i32 1>, <4 x i32>* %62, align 8, !alias.scope !1070
  %63 = or i64 %37, 40
  %64 = getelementptr inbounds [5 x i32], [5 x i32]* %24, i64 0, i64 %63
  %65 = bitcast i32* %64 to <4 x i32>*
  store <4 x i32> <i32 1, i32 1, i32 1, i32 1>, <4 x i32>* %65, align 8, !alias.scope !1070
  %66 = getelementptr inbounds i32, i32* %64, i64 4
  %67 = bitcast i32* %66 to <4 x i32>*
  store <4 x i32> <i32 1, i32 1, i32 1, i32 1>, <4 x i32>* %67, align 8, !alias.scope !1070
  %68 = or i64 %37, 48
  %69 = getelementptr inbounds [5 x i32], [5 x i32]* %24, i64 0, i64 %68
  %70 = bitcast i32* %69 to <4 x i32>*
  store <4 x i32> <i32 1, i32 1, i32 1, i32 1>, <4 x i32>* %70, align 8, !alias.scope !1070
  %71 = getelementptr inbounds i32, i32* %69, i64 4
  %72 = bitcast i32* %71 to <4 x i32>*
  store <4 x i32> <i32 1, i32 1, i32 1, i32 1>, <4 x i32>* %72, align 8, !alias.scope !1070
  %73 = or i64 %37, 56
  %74 = getelementptr inbounds [5 x i32], [5 x i32]* %24, i64 0, i64 %73
  %75 = bitcast i32* %74 to <4 x i32>*
  store <4 x i32> <i32 1, i32 1, i32 1, i32 1>, <4 x i32>* %75, align 8, !alias.scope !1070
  %76 = getelementptr inbounds i32, i32* %74, i64 4
  %77 = bitcast i32* %76 to <4 x i32>*
  store <4 x i32> <i32 1, i32 1, i32 1, i32 1>, <4 x i32>* %77, align 8, !alias.scope !1070
  %78 = add i64 %37, 64
  %79 = add i64 %38, -8
  %80 = icmp eq i64 %79, 0
  br i1 %80, label %81, label %36, !llvm.loop !1073

81:                                               ; preds = %36, %27
  %82 = phi i64 [ 0, %27 ], [ %78, %36 ]
  %83 = icmp eq i64 %32, 0
  br i1 %83, label %94, label %84

84:                                               ; preds = %81, %84
  %85 = phi i64 [ %91, %84 ], [ %82, %81 ]
  %86 = phi i64 [ %92, %84 ], [ %32, %81 ]
  %87 = getelementptr inbounds [5 x i32], [5 x i32]* %24, i64 0, i64 %85
  %88 = bitcast i32* %87 to <4 x i32>*
  store <4 x i32> <i32 1, i32 1, i32 1, i32 1>, <4 x i32>* %88, align 8, !alias.scope !1070
  %89 = getelementptr inbounds i32, i32* %87, i64 4
  %90 = bitcast i32* %89 to <4 x i32>*
  store <4 x i32> <i32 1, i32 1, i32 1, i32 1>, <4 x i32>* %90, align 8, !alias.scope !1070
  %91 = add i64 %85, 8
  %92 = add i64 %86, -1
  %93 = icmp eq i64 %92, 0
  br i1 %93, label %94, label %84, !llvm.loop !1074

94:                                               ; preds = %84, %81
  %95 = icmp eq i64 %28, %25
  br i1 %95, label %103, label %96

96:                                               ; preds = %94, %23
  %97 = phi i64 [ 0, %23 ], [ %28, %94 ]
  br label %98

98:                                               ; preds = %96, %98
  %99 = phi i64 [ %101, %98 ], [ %97, %96 ]
  %100 = getelementptr inbounds [5 x i32], [5 x i32]* %24, i64 0, i64 %99
  store i32 1, i32* %100, align 4, !alias.scope !1070
  %101 = add nuw nsw i64 %99, 1
  %102 = icmp eq i64 %101, %25
  br i1 %102, label %103, label %98, !llvm.loop !1075

103:                                              ; preds = %98, %94, %19
  %104 = bitcast %union.anon* %22 to i32*
  %105 = sext i32 %20 to i64
  %106 = getelementptr inbounds i32, i32* %104, i64 %105
  %107 = bitcast i32* %106 to i8*
  %108 = icmp sgt i32 %16, 5
  %109 = getelementptr inbounds %"class.tflite::RuntimeShape", %"class.tflite::RuntimeShape"* %5, i64 0, i32 1
  %110 = getelementptr inbounds %union.anon, %union.anon* %109, i64 0, i32 0
  %111 = load i32*, i32** %110, align 8, !noalias !1070
  %112 = bitcast %union.anon* %109 to i32*
  %113 = select i1 %108, i32* %111, i32* %112
  %114 = bitcast i32* %113 to i8*
  %115 = sext i32 %16 to i64
  %116 = shl nsw i64 %115, 2
  call void @llvm.memcpy.p0i8.p0i8.i64(i8* align 4 %107, i8* align 4 %114, i64 %116, i1 false) #8
  %117 = getelementptr inbounds %"struct.tflite::reference_ops::BroadcastComparison4DSlowCommon", %"struct.tflite::reference_ops::BroadcastComparison4DSlowCommon"* %10, i64 0, i32 1
  %118 = bitcast %"struct.tflite::NdArrayDesc"* %117 to i8*
  call void @llvm.memcpy.p0i8.p0i8.i64(i8* align 8 %118, i8* nonnull align 4 %13, i64 32, i1 false) #8
  %119 = getelementptr inbounds %"struct.tflite::reference_ops::BroadcastComparison4DSlowCommon", %"struct.tflite::reference_ops::BroadcastComparison4DSlowCommon"* %10, i64 0, i32 2
  %120 = bitcast %"struct.tflite::NdArrayDesc"* %119 to i8*
  call void @llvm.memcpy.p0i8.p0i8.i64(i8* align 8 %120, i8* nonnull align 4 %14, i64 32, i1 false) #8
  call void @llvm.lifetime.end.p0i8(i64 32, i8* nonnull %14) #8, !noalias !1067
  call void @llvm.lifetime.end.p0i8(i64 32, i8* nonnull %13) #8, !noalias !1067
  %121 = load i32, i32* %15, align 8
  %122 = icmp sgt i32 %121, 5
  %123 = getelementptr inbounds %union.anon, %union.anon* %22, i64 0, i32 0
  %124 = load i32*, i32** %123, align 8
  %125 = select i1 %122, i32* %124, i32* %104
  %126 = load i32, i32* %125, align 4
  %127 = icmp sgt i32 %126, 0
  br i1 %127, label %128, label %175

128:                                              ; preds = %103
  %129 = bitcast %union.anon* %22 to [5 x i32]*
  %130 = getelementptr inbounds [5 x i32], [5 x i32]* %129, i64 0, i64 1
  %131 = getelementptr inbounds %"struct.tflite::reference_ops::BroadcastComparison4DSlowCommon", %"struct.tflite::reference_ops::BroadcastComparison4DSlowCommon"* %10, i64 0, i32 0, i32 1, i32 1
  %132 = bitcast [16 x i8]* %131 to i32*
  %133 = getelementptr inbounds %"struct.tflite::reference_ops::BroadcastComparison4DSlowCommon", %"struct.tflite::reference_ops::BroadcastComparison4DSlowCommon"* %10, i64 0, i32 0, i32 1, i32 1, i64 4
  %134 = bitcast i8* %133 to i32*
  %135 = getelementptr inbounds %"struct.tflite::reference_ops::BroadcastComparison4DSlowCommon", %"struct.tflite::reference_ops::BroadcastComparison4DSlowCommon"* %10, i64 0, i32 1, i32 1, i64 0
  %136 = load i32, i32* %135, align 8
  %137 = getelementptr inbounds %"struct.tflite::reference_ops::BroadcastComparison4DSlowCommon", %"struct.tflite::reference_ops::BroadcastComparison4DSlowCommon"* %10, i64 0, i32 1, i32 1, i64 1
  %138 = load i32, i32* %137, align 4
  %139 = getelementptr inbounds %"struct.tflite::reference_ops::BroadcastComparison4DSlowCommon", %"struct.tflite::reference_ops::BroadcastComparison4DSlowCommon"* %10, i64 0, i32 1, i32 1, i64 2
  %140 = load i32, i32* %139, align 8
  %141 = getelementptr inbounds %"struct.tflite::reference_ops::BroadcastComparison4DSlowCommon", %"struct.tflite::reference_ops::BroadcastComparison4DSlowCommon"* %10, i64 0, i32 1, i32 1, i64 3
  %142 = load i32, i32* %141, align 4
  %143 = getelementptr inbounds %"struct.tflite::reference_ops::BroadcastComparison4DSlowCommon", %"struct.tflite::reference_ops::BroadcastComparison4DSlowCommon"* %10, i64 0, i32 2, i32 1, i64 0
  %144 = load i32, i32* %143, align 8
  %145 = getelementptr inbounds %"struct.tflite::reference_ops::BroadcastComparison4DSlowCommon", %"struct.tflite::reference_ops::BroadcastComparison4DSlowCommon"* %10, i64 0, i32 2, i32 1, i64 1
  %146 = load i32, i32* %145, align 4
  %147 = getelementptr inbounds %"struct.tflite::reference_ops::BroadcastComparison4DSlowCommon", %"struct.tflite::reference_ops::BroadcastComparison4DSlowCommon"* %10, i64 0, i32 2, i32 1, i64 2
  %148 = load i32, i32* %147, align 8
  %149 = getelementptr inbounds %"struct.tflite::reference_ops::BroadcastComparison4DSlowCommon", %"struct.tflite::reference_ops::BroadcastComparison4DSlowCommon"* %10, i64 0, i32 2, i32 1, i64 3
  %150 = load i32, i32* %149, align 4
  %151 = getelementptr inbounds i32, i32* %104, i64 1
  %152 = sext i32 %150 to i64
  %153 = sext i32 %142 to i64
  %154 = sext i32 %148 to i64
  %155 = sext i32 %140 to i64
  %156 = sext i32 %146 to i64
  %157 = sext i32 %138 to i64
  %158 = sext i32 %144 to i64
  %159 = sext i32 %136 to i64
  %160 = getelementptr inbounds i32, i32* %124, i64 1
  %161 = select i1 %122, i32* %160, i32* %130
  %162 = getelementptr inbounds i32, i32* %124, i64 2
  %163 = select i1 %122, i32* %162, i32* %132
  %164 = getelementptr inbounds i32, i32* %124, i64 3
  %165 = select i1 %122, i32* %164, i32* %134
  br label %166

166:                                              ; preds = %128, %199
  %167 = phi i32 [ %126, %128 ], [ %200, %199 ]
  %168 = phi i64 [ 0, %128 ], [ %201, %199 ]
  %169 = load i32, i32* %161, align 4
  %170 = icmp sgt i32 %169, 0
  br i1 %170, label %171, label %199

171:                                              ; preds = %166
  %172 = mul nsw i64 %168, %159
  %173 = mul nsw i64 %168, %158
  %174 = trunc i64 %168 to i32
  br label %182

175:                                              ; preds = %199, %103
  %176 = xor i1 %122, true
  %177 = icmp eq i32* %124, null
  %178 = or i1 %177, %176
  br i1 %178, label %181, label %179

179:                                              ; preds = %175
  %180 = bitcast i32* %124 to i8*
  call void @_ZdaPv(i8* %180) #9
  br label %181

181:                                              ; preds = %175, %179
  call void @llvm.lifetime.end.p0i8(i64 96, i8* nonnull %11) #8
  ret void

182:                                              ; preds = %171, %222
  %183 = phi i32 [ %169, %171 ], [ %223, %222 ]
  %184 = phi i64 [ 0, %171 ], [ %224, %222 ]
  %185 = load i32, i32* %163, align 4
  %186 = icmp sgt i32 %185, 0
  br i1 %186, label %187, label %222

187:                                              ; preds = %182
  %188 = mul nsw i64 %184, %157
  %189 = add nsw i64 %188, %172
  %190 = mul nsw i64 %184, %156
  %191 = add nsw i64 %190, %173
  %192 = load i32, i32* %151, align 4
  %193 = mul nsw i32 %192, %174
  %194 = trunc i64 %184 to i32
  %195 = add nsw i32 %193, %194
  %196 = load i32, i32* %165, align 4
  br label %204

197:                                              ; preds = %222
  %198 = load i32, i32* %125, align 4
  br label %199

199:                                              ; preds = %197, %166
  %200 = phi i32 [ %198, %197 ], [ %167, %166 ]
  %201 = add nuw nsw i64 %168, 1
  %202 = sext i32 %200 to i64
  %203 = icmp slt i64 %201, %202
  br i1 %203, label %166, label %175

204:                                              ; preds = %187, %229
  %205 = phi i32 [ %185, %187 ], [ %230, %229 ]
  %206 = phi i32 [ %196, %187 ], [ %231, %229 ]
  %207 = phi i64 [ 0, %187 ], [ %232, %229 ]
  %208 = icmp sgt i32 %206, 0
  br i1 %208, label %209, label %229

209:                                              ; preds = %204
  %210 = mul nsw i64 %207, %155
  %211 = add nsw i64 %189, %210
  %212 = mul nsw i64 %207, %154
  %213 = add nsw i64 %191, %212
  %214 = load i32, i32* %132, align 8
  %215 = mul nsw i32 %195, %214
  %216 = trunc i64 %207 to i32
  %217 = add nsw i32 %215, %216
  %218 = load i32, i32* %134, align 4
  %219 = mul nsw i32 %217, %218
  br label %235

220:                                              ; preds = %229
  %221 = load i32, i32* %161, align 4
  br label %222

222:                                              ; preds = %220, %182
  %223 = phi i32 [ %221, %220 ], [ %183, %182 ]
  %224 = add nuw nsw i64 %184, 1
  %225 = sext i32 %223 to i64
  %226 = icmp slt i64 %224, %225
  br i1 %226, label %182, label %197

227:                                              ; preds = %235
  %228 = load i32, i32* %163, align 4
  br label %229

229:                                              ; preds = %227, %204
  %230 = phi i32 [ %228, %227 ], [ %205, %204 ]
  %231 = phi i32 [ %252, %227 ], [ %206, %204 ]
  %232 = add nuw nsw i64 %207, 1
  %233 = sext i32 %230 to i64
  %234 = icmp slt i64 %232, %233
  br i1 %234, label %204, label %220

235:                                              ; preds = %209, %235
  %236 = phi i64 [ 0, %209 ], [ %251, %235 ]
  %237 = mul nsw i64 %236, %153
  %238 = add nsw i64 %211, %237
  %239 = getelementptr inbounds i32, i32* %2, i64 %238
  %240 = load i32, i32* %239, align 4
  %241 = mul nsw i64 %236, %152
  %242 = add nsw i64 %213, %241
  %243 = getelementptr inbounds i32, i32* %4, i64 %242
  %244 = load i32, i32* %243, align 4
  %245 = icmp slt i32 %240, %244
  %246 = trunc i64 %236 to i32
  %247 = add nsw i32 %219, %246
  %248 = sext i32 %247 to i64
  %249 = getelementptr inbounds i8, i8* %6, i64 %248
  %250 = zext i1 %245 to i8
  store i8 %250, i8* %249, align 1
  %251 = add nuw nsw i64 %236, 1
  %252 = load i32, i32* %165, align 4
  %253 = sext i32 %252 to i64
  %254 = icmp slt i64 %251, %253
  br i1 %254, label %235, label %227
}

; Function Attrs: inlinehint nounwind ssp uwtable
define linkonce_odr hidden void @_ZN6tflite13reference_ops29BroadcastComparison4DSlowImplIlXadL_ZNS0_6LessFnIlEEbT_S3_EEEEvRKNS_16ComparisonParamsERKNS_12RuntimeShapeEPKS3_S9_SB_S9_Pb(%"struct.tflite::ComparisonParams"* dereferenceable(32), %"class.tflite::RuntimeShape"* dereferenceable(32), i64*, %"class.tflite::RuntimeShape"* dereferenceable(32), i64*, %"class.tflite::RuntimeShape"* dereferenceable(32), i8*) local_unnamed_addr #4 comdat {
  %8 = alloca %"struct.tflite::NdArrayDesc", align 4
  %9 = alloca %"struct.tflite::NdArrayDesc", align 4
  %10 = alloca %"struct.tflite::reference_ops::BroadcastComparison4DSlowCommon", align 8
  %11 = bitcast %"struct.tflite::reference_ops::BroadcastComparison4DSlowCommon"* %10 to i8*
  call void @llvm.lifetime.start.p0i8(i64 96, i8* nonnull %11) #8
  call void @llvm.memset.p0i8.i64(i8* nonnull align 8 %11, i8 -86, i64 96, i1 false)
  %12 = getelementptr inbounds %"class.tflite::RuntimeShape", %"class.tflite::RuntimeShape"* %5, i64 0, i32 0
  %13 = bitcast %"struct.tflite::NdArrayDesc"* %8 to i8*
  call void @llvm.lifetime.start.p0i8(i64 32, i8* nonnull %13) #8, !noalias !1076
  %14 = bitcast %"struct.tflite::NdArrayDesc"* %9 to i8*
  call void @llvm.memset.p0i8.i64(i8* nonnull align 4 %13, i8 -86, i64 32, i1 false) #8, !noalias !1076
  call void @llvm.lifetime.start.p0i8(i64 32, i8* nonnull %14) #8, !noalias !1076
  call void @llvm.memset.p0i8.i64(i8* nonnull align 4 %14, i8 -86, i64 32, i1 false) #8, !noalias !1076
  call void @_ZN6tflite35NdArrayDescsForElementwiseBroadcastILi4EEEvRKNS_12RuntimeShapeES3_PNS_11NdArrayDescIXT_EEES6_(%"class.tflite::RuntimeShape"* dereferenceable(32) %1, %"class.tflite::RuntimeShape"* dereferenceable(32) %3, %"struct.tflite::NdArrayDesc"* nonnull %8, %"struct.tflite::NdArrayDesc"* nonnull %9) #8, !noalias !1076
  %15 = getelementptr inbounds %"struct.tflite::reference_ops::BroadcastComparison4DSlowCommon", %"struct.tflite::reference_ops::BroadcastComparison4DSlowCommon"* %10, i64 0, i32 0, i32 0
  store i32 0, i32* %15, align 8, !alias.scope !1079
  %16 = load i32, i32* %12, align 8, !noalias !1079
  %17 = icmp sgt i32 %16, 4
  br i1 %17, label %18, label %19

18:                                               ; preds = %7
  call void @abort() #10, !noalias !1079
  unreachable

19:                                               ; preds = %7
  store i32 4, i32* %15, align 8, !alias.scope !1079
  %20 = sub i32 4, %16
  %21 = icmp sgt i32 %20, 0
  %22 = getelementptr inbounds %"struct.tflite::reference_ops::BroadcastComparison4DSlowCommon", %"struct.tflite::reference_ops::BroadcastComparison4DSlowCommon"* %10, i64 0, i32 0, i32 1
  br i1 %21, label %23, label %103

23:                                               ; preds = %19
  %24 = bitcast %union.anon* %22 to [5 x i32]*
  %25 = zext i32 %20 to i64
  %26 = icmp ult i32 %20, 8
  br i1 %26, label %96, label %27

27:                                               ; preds = %23
  %28 = and i64 %25, 4294967288
  %29 = add nsw i64 %28, -8
  %30 = lshr exact i64 %29, 3
  %31 = add nuw nsw i64 %30, 1
  %32 = and i64 %31, 7
  %33 = icmp ult i64 %29, 56
  br i1 %33, label %81, label %34

34:                                               ; preds = %27
  %35 = sub nsw i64 %31, %32
  br label %36

36:                                               ; preds = %36, %34
  %37 = phi i64 [ 0, %34 ], [ %78, %36 ]
  %38 = phi i64 [ %35, %34 ], [ %79, %36 ]
  %39 = getelementptr inbounds [5 x i32], [5 x i32]* %24, i64 0, i64 %37
  %40 = bitcast i32* %39 to <4 x i32>*
  store <4 x i32> <i32 1, i32 1, i32 1, i32 1>, <4 x i32>* %40, align 8, !alias.scope !1079
  %41 = getelementptr inbounds i32, i32* %39, i64 4
  %42 = bitcast i32* %41 to <4 x i32>*
  store <4 x i32> <i32 1, i32 1, i32 1, i32 1>, <4 x i32>* %42, align 8, !alias.scope !1079
  %43 = or i64 %37, 8
  %44 = getelementptr inbounds [5 x i32], [5 x i32]* %24, i64 0, i64 %43
  %45 = bitcast i32* %44 to <4 x i32>*
  store <4 x i32> <i32 1, i32 1, i32 1, i32 1>, <4 x i32>* %45, align 8, !alias.scope !1079
  %46 = getelementptr inbounds i32, i32* %44, i64 4
  %47 = bitcast i32* %46 to <4 x i32>*
  store <4 x i32> <i32 1, i32 1, i32 1, i32 1>, <4 x i32>* %47, align 8, !alias.scope !1079
  %48 = or i64 %37, 16
  %49 = getelementptr inbounds [5 x i32], [5 x i32]* %24, i64 0, i64 %48
  %50 = bitcast i32* %49 to <4 x i32>*
  store <4 x i32> <i32 1, i32 1, i32 1, i32 1>, <4 x i32>* %50, align 8, !alias.scope !1079
  %51 = getelementptr inbounds i32, i32* %49, i64 4
  %52 = bitcast i32* %51 to <4 x i32>*
  store <4 x i32> <i32 1, i32 1, i32 1, i32 1>, <4 x i32>* %52, align 8, !alias.scope !1079
  %53 = or i64 %37, 24
  %54 = getelementptr inbounds [5 x i32], [5 x i32]* %24, i64 0, i64 %53
  %55 = bitcast i32* %54 to <4 x i32>*
  store <4 x i32> <i32 1, i32 1, i32 1, i32 1>, <4 x i32>* %55, align 8, !alias.scope !1079
  %56 = getelementptr inbounds i32, i32* %54, i64 4
  %57 = bitcast i32* %56 to <4 x i32>*
  store <4 x i32> <i32 1, i32 1, i32 1, i32 1>, <4 x i32>* %57, align 8, !alias.scope !1079
  %58 = or i64 %37, 32
  %59 = getelementptr inbounds [5 x i32], [5 x i32]* %24, i64 0, i64 %58
  %60 = bitcast i32* %59 to <4 x i32>*
  store <4 x i32> <i32 1, i32 1, i32 1, i32 1>, <4 x i32>* %60, align 8, !alias.scope !1079
  %61 = getelementptr inbounds i32, i32* %59, i64 4
  %62 = bitcast i32* %61 to <4 x i32>*
  store <4 x i32> <i32 1, i32 1, i32 1, i32 1>, <4 x i32>* %62, align 8, !alias.scope !1079
  %63 = or i64 %37, 40
  %64 = getelementptr inbounds [5 x i32], [5 x i32]* %24, i64 0, i64 %63
  %65 = bitcast i32* %64 to <4 x i32>*
  store <4 x i32> <i32 1, i32 1, i32 1, i32 1>, <4 x i32>* %65, align 8, !alias.scope !1079
  %66 = getelementptr inbounds i32, i32* %64, i64 4
  %67 = bitcast i32* %66 to <4 x i32>*
  store <4 x i32> <i32 1, i32 1, i32 1, i32 1>, <4 x i32>* %67, align 8, !alias.scope !1079
  %68 = or i64 %37, 48
  %69 = getelementptr inbounds [5 x i32], [5 x i32]* %24, i64 0, i64 %68
  %70 = bitcast i32* %69 to <4 x i32>*
  store <4 x i32> <i32 1, i32 1, i32 1, i32 1>, <4 x i32>* %70, align 8, !alias.scope !1079
  %71 = getelementptr inbounds i32, i32* %69, i64 4
  %72 = bitcast i32* %71 to <4 x i32>*
  store <4 x i32> <i32 1, i32 1, i32 1, i32 1>, <4 x i32>* %72, align 8, !alias.scope !1079
  %73 = or i64 %37, 56
  %74 = getelementptr inbounds [5 x i32], [5 x i32]* %24, i64 0, i64 %73
  %75 = bitcast i32* %74 to <4 x i32>*
  store <4 x i32> <i32 1, i32 1, i32 1, i32 1>, <4 x i32>* %75, align 8, !alias.scope !1079
  %76 = getelementptr inbounds i32, i32* %74, i64 4
  %77 = bitcast i32* %76 to <4 x i32>*
  store <4 x i32> <i32 1, i32 1, i32 1, i32 1>, <4 x i32>* %77, align 8, !alias.scope !1079
  %78 = add i64 %37, 64
  %79 = add i64 %38, -8
  %80 = icmp eq i64 %79, 0
  br i1 %80, label %81, label %36, !llvm.loop !1082

81:                                               ; preds = %36, %27
  %82 = phi i64 [ 0, %27 ], [ %78, %36 ]
  %83 = icmp eq i64 %32, 0
  br i1 %83, label %94, label %84

84:                                               ; preds = %81, %84
  %85 = phi i64 [ %91, %84 ], [ %82, %81 ]
  %86 = phi i64 [ %92, %84 ], [ %32, %81 ]
  %87 = getelementptr inbounds [5 x i32], [5 x i32]* %24, i64 0, i64 %85
  %88 = bitcast i32* %87 to <4 x i32>*
  store <4 x i32> <i32 1, i32 1, i32 1, i32 1>, <4 x i32>* %88, align 8, !alias.scope !1079
  %89 = getelementptr inbounds i32, i32* %87, i64 4
  %90 = bitcast i32* %89 to <4 x i32>*
  store <4 x i32> <i32 1, i32 1, i32 1, i32 1>, <4 x i32>* %90, align 8, !alias.scope !1079
  %91 = add i64 %85, 8
  %92 = add i64 %86, -1
  %93 = icmp eq i64 %92, 0
  br i1 %93, label %94, label %84, !llvm.loop !1083

94:                                               ; preds = %84, %81
  %95 = icmp eq i64 %28, %25
  br i1 %95, label %103, label %96

96:                                               ; preds = %94, %23
  %97 = phi i64 [ 0, %23 ], [ %28, %94 ]
  br label %98

98:                                               ; preds = %96, %98
  %99 = phi i64 [ %101, %98 ], [ %97, %96 ]
  %100 = getelementptr inbounds [5 x i32], [5 x i32]* %24, i64 0, i64 %99
  store i32 1, i32* %100, align 4, !alias.scope !1079
  %101 = add nuw nsw i64 %99, 1
  %102 = icmp eq i64 %101, %25
  br i1 %102, label %103, label %98, !llvm.loop !1084

103:                                              ; preds = %98, %94, %19
  %104 = bitcast %union.anon* %22 to i32*
  %105 = sext i32 %20 to i64
  %106 = getelementptr inbounds i32, i32* %104, i64 %105
  %107 = bitcast i32* %106 to i8*
  %108 = icmp sgt i32 %16, 5
  %109 = getelementptr inbounds %"class.tflite::RuntimeShape", %"class.tflite::RuntimeShape"* %5, i64 0, i32 1
  %110 = getelementptr inbounds %union.anon, %union.anon* %109, i64 0, i32 0
  %111 = load i32*, i32** %110, align 8, !noalias !1079
  %112 = bitcast %union.anon* %109 to i32*
  %113 = select i1 %108, i32* %111, i32* %112
  %114 = bitcast i32* %113 to i8*
  %115 = sext i32 %16 to i64
  %116 = shl nsw i64 %115, 2
  call void @llvm.memcpy.p0i8.p0i8.i64(i8* align 4 %107, i8* align 4 %114, i64 %116, i1 false) #8
  %117 = getelementptr inbounds %"struct.tflite::reference_ops::BroadcastComparison4DSlowCommon", %"struct.tflite::reference_ops::BroadcastComparison4DSlowCommon"* %10, i64 0, i32 1
  %118 = bitcast %"struct.tflite::NdArrayDesc"* %117 to i8*
  call void @llvm.memcpy.p0i8.p0i8.i64(i8* align 8 %118, i8* nonnull align 4 %13, i64 32, i1 false) #8
  %119 = getelementptr inbounds %"struct.tflite::reference_ops::BroadcastComparison4DSlowCommon", %"struct.tflite::reference_ops::BroadcastComparison4DSlowCommon"* %10, i64 0, i32 2
  %120 = bitcast %"struct.tflite::NdArrayDesc"* %119 to i8*
  call void @llvm.memcpy.p0i8.p0i8.i64(i8* align 8 %120, i8* nonnull align 4 %14, i64 32, i1 false) #8
  call void @llvm.lifetime.end.p0i8(i64 32, i8* nonnull %14) #8, !noalias !1076
  call void @llvm.lifetime.end.p0i8(i64 32, i8* nonnull %13) #8, !noalias !1076
  %121 = load i32, i32* %15, align 8
  %122 = icmp sgt i32 %121, 5
  %123 = getelementptr inbounds %union.anon, %union.anon* %22, i64 0, i32 0
  %124 = load i32*, i32** %123, align 8
  %125 = select i1 %122, i32* %124, i32* %104
  %126 = load i32, i32* %125, align 4
  %127 = icmp sgt i32 %126, 0
  br i1 %127, label %128, label %175

128:                                              ; preds = %103
  %129 = bitcast %union.anon* %22 to [5 x i32]*
  %130 = getelementptr inbounds [5 x i32], [5 x i32]* %129, i64 0, i64 1
  %131 = getelementptr inbounds %"struct.tflite::reference_ops::BroadcastComparison4DSlowCommon", %"struct.tflite::reference_ops::BroadcastComparison4DSlowCommon"* %10, i64 0, i32 0, i32 1, i32 1
  %132 = bitcast [16 x i8]* %131 to i32*
  %133 = getelementptr inbounds %"struct.tflite::reference_ops::BroadcastComparison4DSlowCommon", %"struct.tflite::reference_ops::BroadcastComparison4DSlowCommon"* %10, i64 0, i32 0, i32 1, i32 1, i64 4
  %134 = bitcast i8* %133 to i32*
  %135 = getelementptr inbounds %"struct.tflite::reference_ops::BroadcastComparison4DSlowCommon", %"struct.tflite::reference_ops::BroadcastComparison4DSlowCommon"* %10, i64 0, i32 1, i32 1, i64 0
  %136 = load i32, i32* %135, align 8
  %137 = getelementptr inbounds %"struct.tflite::reference_ops::BroadcastComparison4DSlowCommon", %"struct.tflite::reference_ops::BroadcastComparison4DSlowCommon"* %10, i64 0, i32 1, i32 1, i64 1
  %138 = load i32, i32* %137, align 4
  %139 = getelementptr inbounds %"struct.tflite::reference_ops::BroadcastComparison4DSlowCommon", %"struct.tflite::reference_ops::BroadcastComparison4DSlowCommon"* %10, i64 0, i32 1, i32 1, i64 2
  %140 = load i32, i32* %139, align 8
  %141 = getelementptr inbounds %"struct.tflite::reference_ops::BroadcastComparison4DSlowCommon", %"struct.tflite::reference_ops::BroadcastComparison4DSlowCommon"* %10, i64 0, i32 1, i32 1, i64 3
  %142 = load i32, i32* %141, align 4
  %143 = getelementptr inbounds %"struct.tflite::reference_ops::BroadcastComparison4DSlowCommon", %"struct.tflite::reference_ops::BroadcastComparison4DSlowCommon"* %10, i64 0, i32 2, i32 1, i64 0
  %144 = load i32, i32* %143, align 8
  %145 = getelementptr inbounds %"struct.tflite::reference_ops::BroadcastComparison4DSlowCommon", %"struct.tflite::reference_ops::BroadcastComparison4DSlowCommon"* %10, i64 0, i32 2, i32 1, i64 1
  %146 = load i32, i32* %145, align 4
  %147 = getelementptr inbounds %"struct.tflite::reference_ops::BroadcastComparison4DSlowCommon", %"struct.tflite::reference_ops::BroadcastComparison4DSlowCommon"* %10, i64 0, i32 2, i32 1, i64 2
  %148 = load i32, i32* %147, align 8
  %149 = getelementptr inbounds %"struct.tflite::reference_ops::BroadcastComparison4DSlowCommon", %"struct.tflite::reference_ops::BroadcastComparison4DSlowCommon"* %10, i64 0, i32 2, i32 1, i64 3
  %150 = load i32, i32* %149, align 4
  %151 = getelementptr inbounds i32, i32* %104, i64 1
  %152 = sext i32 %150 to i64
  %153 = sext i32 %142 to i64
  %154 = sext i32 %148 to i64
  %155 = sext i32 %140 to i64
  %156 = sext i32 %146 to i64
  %157 = sext i32 %138 to i64
  %158 = sext i32 %144 to i64
  %159 = sext i32 %136 to i64
  %160 = getelementptr inbounds i32, i32* %124, i64 1
  %161 = select i1 %122, i32* %160, i32* %130
  %162 = getelementptr inbounds i32, i32* %124, i64 2
  %163 = select i1 %122, i32* %162, i32* %132
  %164 = getelementptr inbounds i32, i32* %124, i64 3
  %165 = select i1 %122, i32* %164, i32* %134
  br label %166

166:                                              ; preds = %128, %199
  %167 = phi i32 [ %126, %128 ], [ %200, %199 ]
  %168 = phi i64 [ 0, %128 ], [ %201, %199 ]
  %169 = load i32, i32* %161, align 4
  %170 = icmp sgt i32 %169, 0
  br i1 %170, label %171, label %199

171:                                              ; preds = %166
  %172 = mul nsw i64 %168, %159
  %173 = mul nsw i64 %168, %158
  %174 = trunc i64 %168 to i32
  br label %182

175:                                              ; preds = %199, %103
  %176 = xor i1 %122, true
  %177 = icmp eq i32* %124, null
  %178 = or i1 %177, %176
  br i1 %178, label %181, label %179

179:                                              ; preds = %175
  %180 = bitcast i32* %124 to i8*
  call void @_ZdaPv(i8* %180) #9
  br label %181

181:                                              ; preds = %175, %179
  call void @llvm.lifetime.end.p0i8(i64 96, i8* nonnull %11) #8
  ret void

182:                                              ; preds = %171, %222
  %183 = phi i32 [ %169, %171 ], [ %223, %222 ]
  %184 = phi i64 [ 0, %171 ], [ %224, %222 ]
  %185 = load i32, i32* %163, align 4
  %186 = icmp sgt i32 %185, 0
  br i1 %186, label %187, label %222

187:                                              ; preds = %182
  %188 = mul nsw i64 %184, %157
  %189 = add nsw i64 %188, %172
  %190 = mul nsw i64 %184, %156
  %191 = add nsw i64 %190, %173
  %192 = load i32, i32* %151, align 4
  %193 = mul nsw i32 %192, %174
  %194 = trunc i64 %184 to i32
  %195 = add nsw i32 %193, %194
  %196 = load i32, i32* %165, align 4
  br label %204

197:                                              ; preds = %222
  %198 = load i32, i32* %125, align 4
  br label %199

199:                                              ; preds = %197, %166
  %200 = phi i32 [ %198, %197 ], [ %167, %166 ]
  %201 = add nuw nsw i64 %168, 1
  %202 = sext i32 %200 to i64
  %203 = icmp slt i64 %201, %202
  br i1 %203, label %166, label %175

204:                                              ; preds = %187, %229
  %205 = phi i32 [ %185, %187 ], [ %230, %229 ]
  %206 = phi i32 [ %196, %187 ], [ %231, %229 ]
  %207 = phi i64 [ 0, %187 ], [ %232, %229 ]
  %208 = icmp sgt i32 %206, 0
  br i1 %208, label %209, label %229

209:                                              ; preds = %204
  %210 = mul nsw i64 %207, %155
  %211 = add nsw i64 %189, %210
  %212 = mul nsw i64 %207, %154
  %213 = add nsw i64 %191, %212
  %214 = load i32, i32* %132, align 8
  %215 = mul nsw i32 %195, %214
  %216 = trunc i64 %207 to i32
  %217 = add nsw i32 %215, %216
  %218 = load i32, i32* %134, align 4
  %219 = mul nsw i32 %217, %218
  br label %235

220:                                              ; preds = %229
  %221 = load i32, i32* %161, align 4
  br label %222

222:                                              ; preds = %220, %182
  %223 = phi i32 [ %221, %220 ], [ %183, %182 ]
  %224 = add nuw nsw i64 %184, 1
  %225 = sext i32 %223 to i64
  %226 = icmp slt i64 %224, %225
  br i1 %226, label %182, label %197

227:                                              ; preds = %235
  %228 = load i32, i32* %163, align 4
  br label %229

229:                                              ; preds = %227, %204
  %230 = phi i32 [ %228, %227 ], [ %205, %204 ]
  %231 = phi i32 [ %252, %227 ], [ %206, %204 ]
  %232 = add nuw nsw i64 %207, 1
  %233 = sext i32 %230 to i64
  %234 = icmp slt i64 %232, %233
  br i1 %234, label %204, label %220

235:                                              ; preds = %209, %235
  %236 = phi i64 [ 0, %209 ], [ %251, %235 ]
  %237 = mul nsw i64 %236, %153
  %238 = add nsw i64 %211, %237
  %239 = getelementptr inbounds i64, i64* %2, i64 %238
  %240 = load i64, i64* %239, align 8
  %241 = mul nsw i64 %236, %152
  %242 = add nsw i64 %213, %241
  %243 = getelementptr inbounds i64, i64* %4, i64 %242
  %244 = load i64, i64* %243, align 8
  %245 = icmp slt i64 %240, %244
  %246 = trunc i64 %236 to i32
  %247 = add nsw i32 %219, %246
  %248 = sext i32 %247 to i64
  %249 = getelementptr inbounds i8, i8* %6, i64 %248
  %250 = zext i1 %245 to i8
  store i8 %250, i8* %249, align 1
  %251 = add nuw nsw i64 %236, 1
  %252 = load i32, i32* %165, align 4
  %253 = sext i32 %252 to i64
  %254 = icmp slt i64 %251, %253
  br i1 %254, label %235, label %227
}

; Function Attrs: inlinehint nounwind ssp uwtable
define linkonce_odr hidden void @_ZN6tflite13reference_ops36BroadcastComparison4DSlowWithScalingIhXadL_ZNS0_6LessFnIiEEbT_S3_EEEEvRKNS_16ComparisonParamsERKNS_12RuntimeShapeEPKS3_S9_SB_S9_Pb(%"struct.tflite::ComparisonParams"* dereferenceable(32), %"class.tflite::RuntimeShape"* dereferenceable(32), i8*, %"class.tflite::RuntimeShape"* dereferenceable(32), i8*, %"class.tflite::RuntimeShape"* dereferenceable(32), i8*) local_unnamed_addr #4 comdat {
  %8 = alloca %"struct.tflite::NdArrayDesc", align 4
  %9 = alloca %"struct.tflite::NdArrayDesc", align 4
  %10 = alloca %"struct.tflite::reference_ops::BroadcastComparison4DSlowCommon", align 8
  %11 = bitcast %"struct.tflite::reference_ops::BroadcastComparison4DSlowCommon"* %10 to i8*
  call void @llvm.lifetime.start.p0i8(i64 96, i8* nonnull %11) #8
  call void @llvm.memset.p0i8.i64(i8* nonnull align 8 %11, i8 -86, i64 96, i1 false)
  %12 = getelementptr inbounds %"class.tflite::RuntimeShape", %"class.tflite::RuntimeShape"* %5, i64 0, i32 0
  %13 = bitcast %"struct.tflite::NdArrayDesc"* %8 to i8*
  call void @llvm.lifetime.start.p0i8(i64 32, i8* nonnull %13) #8, !noalias !1085
  %14 = bitcast %"struct.tflite::NdArrayDesc"* %9 to i8*
  call void @llvm.memset.p0i8.i64(i8* nonnull align 4 %13, i8 -86, i64 32, i1 false) #8, !noalias !1085
  call void @llvm.lifetime.start.p0i8(i64 32, i8* nonnull %14) #8, !noalias !1085
  call void @llvm.memset.p0i8.i64(i8* nonnull align 4 %14, i8 -86, i64 32, i1 false) #8, !noalias !1085
  call void @_ZN6tflite35NdArrayDescsForElementwiseBroadcastILi4EEEvRKNS_12RuntimeShapeES3_PNS_11NdArrayDescIXT_EEES6_(%"class.tflite::RuntimeShape"* dereferenceable(32) %1, %"class.tflite::RuntimeShape"* dereferenceable(32) %3, %"struct.tflite::NdArrayDesc"* nonnull %8, %"struct.tflite::NdArrayDesc"* nonnull %9) #8, !noalias !1085
  %15 = getelementptr inbounds %"struct.tflite::reference_ops::BroadcastComparison4DSlowCommon", %"struct.tflite::reference_ops::BroadcastComparison4DSlowCommon"* %10, i64 0, i32 0, i32 0
  store i32 0, i32* %15, align 8, !alias.scope !1088
  %16 = load i32, i32* %12, align 8, !noalias !1088
  %17 = icmp sgt i32 %16, 4
  br i1 %17, label %18, label %19

18:                                               ; preds = %7
  call void @abort() #10, !noalias !1088
  unreachable

19:                                               ; preds = %7
  store i32 4, i32* %15, align 8, !alias.scope !1088
  %20 = sub i32 4, %16
  %21 = icmp sgt i32 %20, 0
  %22 = getelementptr inbounds %"struct.tflite::reference_ops::BroadcastComparison4DSlowCommon", %"struct.tflite::reference_ops::BroadcastComparison4DSlowCommon"* %10, i64 0, i32 0, i32 1
  br i1 %21, label %23, label %103

23:                                               ; preds = %19
  %24 = bitcast %union.anon* %22 to [5 x i32]*
  %25 = zext i32 %20 to i64
  %26 = icmp ult i32 %20, 8
  br i1 %26, label %96, label %27

27:                                               ; preds = %23
  %28 = and i64 %25, 4294967288
  %29 = add nsw i64 %28, -8
  %30 = lshr exact i64 %29, 3
  %31 = add nuw nsw i64 %30, 1
  %32 = and i64 %31, 7
  %33 = icmp ult i64 %29, 56
  br i1 %33, label %81, label %34

34:                                               ; preds = %27
  %35 = sub nsw i64 %31, %32
  br label %36

36:                                               ; preds = %36, %34
  %37 = phi i64 [ 0, %34 ], [ %78, %36 ]
  %38 = phi i64 [ %35, %34 ], [ %79, %36 ]
  %39 = getelementptr inbounds [5 x i32], [5 x i32]* %24, i64 0, i64 %37
  %40 = bitcast i32* %39 to <4 x i32>*
  store <4 x i32> <i32 1, i32 1, i32 1, i32 1>, <4 x i32>* %40, align 8, !alias.scope !1088
  %41 = getelementptr inbounds i32, i32* %39, i64 4
  %42 = bitcast i32* %41 to <4 x i32>*
  store <4 x i32> <i32 1, i32 1, i32 1, i32 1>, <4 x i32>* %42, align 8, !alias.scope !1088
  %43 = or i64 %37, 8
  %44 = getelementptr inbounds [5 x i32], [5 x i32]* %24, i64 0, i64 %43
  %45 = bitcast i32* %44 to <4 x i32>*
  store <4 x i32> <i32 1, i32 1, i32 1, i32 1>, <4 x i32>* %45, align 8, !alias.scope !1088
  %46 = getelementptr inbounds i32, i32* %44, i64 4
  %47 = bitcast i32* %46 to <4 x i32>*
  store <4 x i32> <i32 1, i32 1, i32 1, i32 1>, <4 x i32>* %47, align 8, !alias.scope !1088
  %48 = or i64 %37, 16
  %49 = getelementptr inbounds [5 x i32], [5 x i32]* %24, i64 0, i64 %48
  %50 = bitcast i32* %49 to <4 x i32>*
  store <4 x i32> <i32 1, i32 1, i32 1, i32 1>, <4 x i32>* %50, align 8, !alias.scope !1088
  %51 = getelementptr inbounds i32, i32* %49, i64 4
  %52 = bitcast i32* %51 to <4 x i32>*
  store <4 x i32> <i32 1, i32 1, i32 1, i32 1>, <4 x i32>* %52, align 8, !alias.scope !1088
  %53 = or i64 %37, 24
  %54 = getelementptr inbounds [5 x i32], [5 x i32]* %24, i64 0, i64 %53
  %55 = bitcast i32* %54 to <4 x i32>*
  store <4 x i32> <i32 1, i32 1, i32 1, i32 1>, <4 x i32>* %55, align 8, !alias.scope !1088
  %56 = getelementptr inbounds i32, i32* %54, i64 4
  %57 = bitcast i32* %56 to <4 x i32>*
  store <4 x i32> <i32 1, i32 1, i32 1, i32 1>, <4 x i32>* %57, align 8, !alias.scope !1088
  %58 = or i64 %37, 32
  %59 = getelementptr inbounds [5 x i32], [5 x i32]* %24, i64 0, i64 %58
  %60 = bitcast i32* %59 to <4 x i32>*
  store <4 x i32> <i32 1, i32 1, i32 1, i32 1>, <4 x i32>* %60, align 8, !alias.scope !1088
  %61 = getelementptr inbounds i32, i32* %59, i64 4
  %62 = bitcast i32* %61 to <4 x i32>*
  store <4 x i32> <i32 1, i32 1, i32 1, i32 1>, <4 x i32>* %62, align 8, !alias.scope !1088
  %63 = or i64 %37, 40
  %64 = getelementptr inbounds [5 x i32], [5 x i32]* %24, i64 0, i64 %63
  %65 = bitcast i32* %64 to <4 x i32>*
  store <4 x i32> <i32 1, i32 1, i32 1, i32 1>, <4 x i32>* %65, align 8, !alias.scope !1088
  %66 = getelementptr inbounds i32, i32* %64, i64 4
  %67 = bitcast i32* %66 to <4 x i32>*
  store <4 x i32> <i32 1, i32 1, i32 1, i32 1>, <4 x i32>* %67, align 8, !alias.scope !1088
  %68 = or i64 %37, 48
  %69 = getelementptr inbounds [5 x i32], [5 x i32]* %24, i64 0, i64 %68
  %70 = bitcast i32* %69 to <4 x i32>*
  store <4 x i32> <i32 1, i32 1, i32 1, i32 1>, <4 x i32>* %70, align 8, !alias.scope !1088
  %71 = getelementptr inbounds i32, i32* %69, i64 4
  %72 = bitcast i32* %71 to <4 x i32>*
  store <4 x i32> <i32 1, i32 1, i32 1, i32 1>, <4 x i32>* %72, align 8, !alias.scope !1088
  %73 = or i64 %37, 56
  %74 = getelementptr inbounds [5 x i32], [5 x i32]* %24, i64 0, i64 %73
  %75 = bitcast i32* %74 to <4 x i32>*
  store <4 x i32> <i32 1, i32 1, i32 1, i32 1>, <4 x i32>* %75, align 8, !alias.scope !1088
  %76 = getelementptr inbounds i32, i32* %74, i64 4
  %77 = bitcast i32* %76 to <4 x i32>*
  store <4 x i32> <i32 1, i32 1, i32 1, i32 1>, <4 x i32>* %77, align 8, !alias.scope !1088
  %78 = add i64 %37, 64
  %79 = add i64 %38, -8
  %80 = icmp eq i64 %79, 0
  br i1 %80, label %81, label %36, !llvm.loop !1091

81:                                               ; preds = %36, %27
  %82 = phi i64 [ 0, %27 ], [ %78, %36 ]
  %83 = icmp eq i64 %32, 0
  br i1 %83, label %94, label %84

84:                                               ; preds = %81, %84
  %85 = phi i64 [ %91, %84 ], [ %82, %81 ]
  %86 = phi i64 [ %92, %84 ], [ %32, %81 ]
  %87 = getelementptr inbounds [5 x i32], [5 x i32]* %24, i64 0, i64 %85
  %88 = bitcast i32* %87 to <4 x i32>*
  store <4 x i32> <i32 1, i32 1, i32 1, i32 1>, <4 x i32>* %88, align 8, !alias.scope !1088
  %89 = getelementptr inbounds i32, i32* %87, i64 4
  %90 = bitcast i32* %89 to <4 x i32>*
  store <4 x i32> <i32 1, i32 1, i32 1, i32 1>, <4 x i32>* %90, align 8, !alias.scope !1088
  %91 = add i64 %85, 8
  %92 = add i64 %86, -1
  %93 = icmp eq i64 %92, 0
  br i1 %93, label %94, label %84, !llvm.loop !1092

94:                                               ; preds = %84, %81
  %95 = icmp eq i64 %28, %25
  br i1 %95, label %103, label %96

96:                                               ; preds = %94, %23
  %97 = phi i64 [ 0, %23 ], [ %28, %94 ]
  br label %98

98:                                               ; preds = %96, %98
  %99 = phi i64 [ %101, %98 ], [ %97, %96 ]
  %100 = getelementptr inbounds [5 x i32], [5 x i32]* %24, i64 0, i64 %99
  store i32 1, i32* %100, align 4, !alias.scope !1088
  %101 = add nuw nsw i64 %99, 1
  %102 = icmp eq i64 %101, %25
  br i1 %102, label %103, label %98, !llvm.loop !1093

103:                                              ; preds = %98, %94, %19
  %104 = bitcast %union.anon* %22 to i32*
  %105 = sext i32 %20 to i64
  %106 = getelementptr inbounds i32, i32* %104, i64 %105
  %107 = bitcast i32* %106 to i8*
  %108 = icmp sgt i32 %16, 5
  %109 = getelementptr inbounds %"class.tflite::RuntimeShape", %"class.tflite::RuntimeShape"* %5, i64 0, i32 1
  %110 = getelementptr inbounds %union.anon, %union.anon* %109, i64 0, i32 0
  %111 = load i32*, i32** %110, align 8, !noalias !1088
  %112 = bitcast %union.anon* %109 to i32*
  %113 = select i1 %108, i32* %111, i32* %112
  %114 = bitcast i32* %113 to i8*
  %115 = sext i32 %16 to i64
  %116 = shl nsw i64 %115, 2
  call void @llvm.memcpy.p0i8.p0i8.i64(i8* align 4 %107, i8* align 4 %114, i64 %116, i1 false) #8
  %117 = getelementptr inbounds %"struct.tflite::reference_ops::BroadcastComparison4DSlowCommon", %"struct.tflite::reference_ops::BroadcastComparison4DSlowCommon"* %10, i64 0, i32 1
  %118 = bitcast %"struct.tflite::NdArrayDesc"* %117 to i8*
  call void @llvm.memcpy.p0i8.p0i8.i64(i8* align 8 %118, i8* nonnull align 4 %13, i64 32, i1 false) #8
  %119 = getelementptr inbounds %"struct.tflite::reference_ops::BroadcastComparison4DSlowCommon", %"struct.tflite::reference_ops::BroadcastComparison4DSlowCommon"* %10, i64 0, i32 2
  %120 = bitcast %"struct.tflite::NdArrayDesc"* %119 to i8*
  call void @llvm.memcpy.p0i8.p0i8.i64(i8* align 8 %120, i8* nonnull align 4 %14, i64 32, i1 false) #8
  call void @llvm.lifetime.end.p0i8(i64 32, i8* nonnull %14) #8, !noalias !1085
  call void @llvm.lifetime.end.p0i8(i64 32, i8* nonnull %13) #8, !noalias !1085
  %121 = getelementptr inbounds %"struct.tflite::ComparisonParams", %"struct.tflite::ComparisonParams"* %0, i64 0, i32 0
  %122 = load i32, i32* %121, align 4
  %123 = getelementptr inbounds %"struct.tflite::ComparisonParams", %"struct.tflite::ComparisonParams"* %0, i64 0, i32 1
  %124 = load i32, i32* %123, align 4
  %125 = getelementptr inbounds %"struct.tflite::ComparisonParams", %"struct.tflite::ComparisonParams"* %0, i64 0, i32 2
  %126 = load i32, i32* %125, align 4
  %127 = getelementptr inbounds %"struct.tflite::ComparisonParams", %"struct.tflite::ComparisonParams"* %0, i64 0, i32 4
  %128 = load i32, i32* %127, align 4
  %129 = getelementptr inbounds %"struct.tflite::ComparisonParams", %"struct.tflite::ComparisonParams"* %0, i64 0, i32 5
  %130 = load i32, i32* %129, align 4
  %131 = load i32, i32* %15, align 8
  %132 = icmp sgt i32 %131, 5
  %133 = getelementptr inbounds %union.anon, %union.anon* %22, i64 0, i32 0
  %134 = load i32*, i32** %133, align 8
  %135 = select i1 %132, i32* %134, i32* %104
  %136 = load i32, i32* %135, align 4
  %137 = icmp sgt i32 %136, 0
  br i1 %137, label %138, label %205

138:                                              ; preds = %103
  %139 = getelementptr inbounds %"struct.tflite::ComparisonParams", %"struct.tflite::ComparisonParams"* %0, i64 0, i32 6
  %140 = load i32, i32* %139, align 4
  %141 = getelementptr inbounds %"struct.tflite::ComparisonParams", %"struct.tflite::ComparisonParams"* %0, i64 0, i32 3
  %142 = load i32, i32* %141, align 4
  %143 = bitcast %union.anon* %22 to [5 x i32]*
  %144 = getelementptr inbounds [5 x i32], [5 x i32]* %143, i64 0, i64 1
  %145 = getelementptr inbounds %"struct.tflite::reference_ops::BroadcastComparison4DSlowCommon", %"struct.tflite::reference_ops::BroadcastComparison4DSlowCommon"* %10, i64 0, i32 0, i32 1, i32 1
  %146 = bitcast [16 x i8]* %145 to i32*
  %147 = getelementptr inbounds %"struct.tflite::reference_ops::BroadcastComparison4DSlowCommon", %"struct.tflite::reference_ops::BroadcastComparison4DSlowCommon"* %10, i64 0, i32 0, i32 1, i32 1, i64 4
  %148 = bitcast i8* %147 to i32*
  %149 = getelementptr inbounds %"struct.tflite::reference_ops::BroadcastComparison4DSlowCommon", %"struct.tflite::reference_ops::BroadcastComparison4DSlowCommon"* %10, i64 0, i32 1, i32 1, i64 0
  %150 = load i32, i32* %149, align 8
  %151 = getelementptr inbounds %"struct.tflite::reference_ops::BroadcastComparison4DSlowCommon", %"struct.tflite::reference_ops::BroadcastComparison4DSlowCommon"* %10, i64 0, i32 1, i32 1, i64 1
  %152 = load i32, i32* %151, align 4
  %153 = getelementptr inbounds %"struct.tflite::reference_ops::BroadcastComparison4DSlowCommon", %"struct.tflite::reference_ops::BroadcastComparison4DSlowCommon"* %10, i64 0, i32 1, i32 1, i64 2
  %154 = load i32, i32* %153, align 8
  %155 = getelementptr inbounds %"struct.tflite::reference_ops::BroadcastComparison4DSlowCommon", %"struct.tflite::reference_ops::BroadcastComparison4DSlowCommon"* %10, i64 0, i32 1, i32 1, i64 3
  %156 = load i32, i32* %155, align 4
  %157 = getelementptr inbounds %"struct.tflite::reference_ops::BroadcastComparison4DSlowCommon", %"struct.tflite::reference_ops::BroadcastComparison4DSlowCommon"* %10, i64 0, i32 2, i32 1, i64 0
  %158 = load i32, i32* %157, align 8
  %159 = getelementptr inbounds %"struct.tflite::reference_ops::BroadcastComparison4DSlowCommon", %"struct.tflite::reference_ops::BroadcastComparison4DSlowCommon"* %10, i64 0, i32 2, i32 1, i64 1
  %160 = load i32, i32* %159, align 4
  %161 = getelementptr inbounds %"struct.tflite::reference_ops::BroadcastComparison4DSlowCommon", %"struct.tflite::reference_ops::BroadcastComparison4DSlowCommon"* %10, i64 0, i32 2, i32 1, i64 2
  %162 = load i32, i32* %161, align 8
  %163 = getelementptr inbounds %"struct.tflite::reference_ops::BroadcastComparison4DSlowCommon", %"struct.tflite::reference_ops::BroadcastComparison4DSlowCommon"* %10, i64 0, i32 2, i32 1, i64 3
  %164 = load i32, i32* %163, align 4
  %165 = sext i32 %126 to i64
  %166 = sub nsw i32 0, %142
  %167 = zext i32 %166 to i64
  %168 = shl nsw i64 -1, %167
  %169 = trunc i64 %168 to i32
  %170 = xor i32 %169, -1
  %171 = ashr i32 %170, 1
  %172 = sext i32 %130 to i64
  %173 = sub nsw i32 0, %140
  %174 = zext i32 %173 to i64
  %175 = shl nsw i64 -1, %174
  %176 = trunc i64 %175 to i32
  %177 = xor i32 %176, -1
  %178 = ashr i32 %177, 1
  %179 = getelementptr inbounds i32, i32* %104, i64 1
  %180 = sext i32 %164 to i64
  %181 = sext i32 %156 to i64
  %182 = sext i32 %162 to i64
  %183 = sext i32 %154 to i64
  %184 = sext i32 %160 to i64
  %185 = sext i32 %152 to i64
  %186 = sext i32 %158 to i64
  %187 = sext i32 %150 to i64
  %188 = getelementptr inbounds i32, i32* %134, i64 1
  %189 = select i1 %132, i32* %188, i32* %144
  %190 = getelementptr inbounds i32, i32* %134, i64 2
  %191 = select i1 %132, i32* %190, i32* %146
  %192 = getelementptr inbounds i32, i32* %134, i64 3
  %193 = select i1 %132, i32* %192, i32* %148
  %194 = icmp eq i32 %126, -2147483648
  %195 = icmp eq i32 %130, -2147483648
  br label %196

196:                                              ; preds = %138, %229
  %197 = phi i32 [ %136, %138 ], [ %230, %229 ]
  %198 = phi i64 [ 0, %138 ], [ %231, %229 ]
  %199 = load i32, i32* %189, align 4
  %200 = icmp sgt i32 %199, 0
  br i1 %200, label %201, label %229

201:                                              ; preds = %196
  %202 = mul nsw i64 %198, %187
  %203 = mul nsw i64 %198, %186
  %204 = trunc i64 %198 to i32
  br label %212

205:                                              ; preds = %229, %103
  %206 = xor i1 %132, true
  %207 = icmp eq i32* %134, null
  %208 = or i1 %207, %206
  br i1 %208, label %211, label %209

209:                                              ; preds = %205
  %210 = bitcast i32* %134 to i8*
  call void @_ZdaPv(i8* %210) #9
  br label %211

211:                                              ; preds = %205, %209
  call void @llvm.lifetime.end.p0i8(i64 96, i8* nonnull %11) #8
  ret void

212:                                              ; preds = %201, %250
  %213 = phi i32 [ %199, %201 ], [ %251, %250 ]
  %214 = phi i64 [ 0, %201 ], [ %252, %250 ]
  %215 = load i32, i32* %191, align 4
  %216 = icmp sgt i32 %215, 0
  br i1 %216, label %217, label %250

217:                                              ; preds = %212
  %218 = mul nsw i64 %214, %185
  %219 = add nsw i64 %218, %202
  %220 = mul nsw i64 %214, %184
  %221 = add nsw i64 %220, %203
  %222 = load i32, i32* %179, align 4
  %223 = mul nsw i32 %222, %204
  %224 = trunc i64 %214 to i32
  %225 = add nsw i32 %223, %224
  %226 = load i32, i32* %193, align 4
  br label %234

227:                                              ; preds = %250
  %228 = load i32, i32* %135, align 4
  br label %229

229:                                              ; preds = %227, %196
  %230 = phi i32 [ %228, %227 ], [ %197, %196 ]
  %231 = add nuw nsw i64 %198, 1
  %232 = sext i32 %230 to i64
  %233 = icmp slt i64 %231, %232
  br i1 %233, label %196, label %205

234:                                              ; preds = %217, %257
  %235 = phi i32 [ %215, %217 ], [ %258, %257 ]
  %236 = phi i32 [ %226, %217 ], [ %259, %257 ]
  %237 = phi i64 [ 0, %217 ], [ %260, %257 ]
  %238 = icmp sgt i32 %236, 0
  br i1 %238, label %239, label %257

239:                                              ; preds = %234
  %240 = mul nsw i64 %237, %183
  %241 = add nsw i64 %219, %240
  %242 = mul nsw i64 %237, %182
  %243 = add nsw i64 %221, %242
  %244 = load i32, i32* %146, align 8
  %245 = mul nsw i32 %225, %244
  %246 = trunc i64 %237 to i32
  %247 = add nsw i32 %245, %246
  br label %263

248:                                              ; preds = %257
  %249 = load i32, i32* %189, align 4
  br label %250

250:                                              ; preds = %248, %212
  %251 = phi i32 [ %249, %248 ], [ %213, %212 ]
  %252 = add nuw nsw i64 %214, 1
  %253 = sext i32 %251 to i64
  %254 = icmp slt i64 %252, %253
  br i1 %254, label %212, label %227

255:                                              ; preds = %312
  %256 = load i32, i32* %191, align 4
  br label %257

257:                                              ; preds = %255, %234
  %258 = phi i32 [ %256, %255 ], [ %235, %234 ]
  %259 = phi i32 [ %330, %255 ], [ %236, %234 ]
  %260 = add nuw nsw i64 %237, 1
  %261 = sext i32 %258 to i64
  %262 = icmp slt i64 %260, %261
  br i1 %262, label %234, label %248

263:                                              ; preds = %239, %312
  %264 = phi i64 [ 0, %239 ], [ %329, %312 ]
  %265 = mul nsw i64 %264, %181
  %266 = add nsw i64 %241, %265
  %267 = getelementptr inbounds i8, i8* %2, i64 %266
  %268 = load i8, i8* %267, align 1
  %269 = zext i8 %268 to i32
  %270 = add nsw i32 %124, %269
  %271 = mul nsw i64 %264, %180
  %272 = add nsw i64 %243, %271
  %273 = getelementptr inbounds i8, i8* %4, i64 %272
  %274 = load i8, i8* %273, align 1
  %275 = zext i8 %274 to i32
  %276 = add nsw i32 %128, %275
  %277 = shl i32 %270, %122
  %278 = shl i32 %276, %122
  %279 = icmp eq i32 %277, %126
  br i1 %279, label %282, label %280

280:                                              ; preds = %263
  %281 = sext i32 %277 to i64
  br label %283

282:                                              ; preds = %263
  br i1 %194, label %291, label %283

283:                                              ; preds = %282, %280
  %284 = phi i64 [ %281, %280 ], [ %165, %282 ]
  %285 = mul nsw i64 %284, %165
  %286 = icmp sgt i64 %285, -1
  %287 = select i1 %286, i64 1073741824, i64 -1073741823
  %288 = add nsw i64 %287, %285
  %289 = sdiv i64 %288, 2147483648
  %290 = trunc i64 %289 to i32
  br label %291

291:                                              ; preds = %282, %283
  %292 = phi i32 [ %290, %283 ], [ 2147483647, %282 ]
  %293 = and i32 %292, %170
  %294 = lshr i32 %292, 31
  %295 = add nsw i32 %294, %171
  %296 = ashr i32 %292, %166
  %297 = icmp sgt i32 %293, %295
  %298 = zext i1 %297 to i32
  %299 = add nsw i32 %296, %298
  %300 = icmp eq i32 %278, %130
  br i1 %300, label %303, label %301

301:                                              ; preds = %291
  %302 = sext i32 %278 to i64
  br label %304

303:                                              ; preds = %291
  br i1 %195, label %312, label %304

304:                                              ; preds = %303, %301
  %305 = phi i64 [ %302, %301 ], [ %172, %303 ]
  %306 = mul nsw i64 %305, %172
  %307 = icmp sgt i64 %306, -1
  %308 = select i1 %307, i64 1073741824, i64 -1073741823
  %309 = add nsw i64 %308, %306
  %310 = sdiv i64 %309, 2147483648
  %311 = trunc i64 %310 to i32
  br label %312

312:                                              ; preds = %303, %304
  %313 = phi i32 [ %311, %304 ], [ 2147483647, %303 ]
  %314 = and i32 %313, %177
  %315 = lshr i32 %313, 31
  %316 = add nsw i32 %315, %178
  %317 = ashr i32 %313, %173
  %318 = icmp sgt i32 %314, %316
  %319 = zext i1 %318 to i32
  %320 = add nsw i32 %317, %319
  %321 = icmp slt i32 %299, %320
  %322 = load i32, i32* %148, align 4
  %323 = mul nsw i32 %247, %322
  %324 = trunc i64 %264 to i32
  %325 = add nsw i32 %323, %324
  %326 = sext i32 %325 to i64
  %327 = getelementptr inbounds i8, i8* %6, i64 %326
  %328 = zext i1 %321 to i8
  store i8 %328, i8* %327, align 1
  %329 = add nuw nsw i64 %264, 1
  %330 = load i32, i32* %193, align 4
  %331 = sext i32 %330 to i64
  %332 = icmp slt i64 %329, %331
  br i1 %332, label %263, label %255
}

; Function Attrs: inlinehint nounwind ssp uwtable
define linkonce_odr hidden void @_ZN6tflite13reference_ops36BroadcastComparison4DSlowWithScalingIaXadL_ZNS0_6LessFnIiEEbT_S3_EEEEvRKNS_16ComparisonParamsERKNS_12RuntimeShapeEPKS3_S9_SB_S9_Pb(%"struct.tflite::ComparisonParams"* dereferenceable(32), %"class.tflite::RuntimeShape"* dereferenceable(32), i8*, %"class.tflite::RuntimeShape"* dereferenceable(32), i8*, %"class.tflite::RuntimeShape"* dereferenceable(32), i8*) local_unnamed_addr #4 comdat {
  %8 = alloca %"struct.tflite::NdArrayDesc", align 4
  %9 = alloca %"struct.tflite::NdArrayDesc", align 4
  %10 = alloca %"struct.tflite::reference_ops::BroadcastComparison4DSlowCommon", align 8
  %11 = bitcast %"struct.tflite::reference_ops::BroadcastComparison4DSlowCommon"* %10 to i8*
  call void @llvm.lifetime.start.p0i8(i64 96, i8* nonnull %11) #8
  call void @llvm.memset.p0i8.i64(i8* nonnull align 8 %11, i8 -86, i64 96, i1 false)
  %12 = getelementptr inbounds %"class.tflite::RuntimeShape", %"class.tflite::RuntimeShape"* %5, i64 0, i32 0
  %13 = bitcast %"struct.tflite::NdArrayDesc"* %8 to i8*
  call void @llvm.lifetime.start.p0i8(i64 32, i8* nonnull %13) #8, !noalias !1094
  %14 = bitcast %"struct.tflite::NdArrayDesc"* %9 to i8*
  call void @llvm.memset.p0i8.i64(i8* nonnull align 4 %13, i8 -86, i64 32, i1 false) #8, !noalias !1094
  call void @llvm.lifetime.start.p0i8(i64 32, i8* nonnull %14) #8, !noalias !1094
  call void @llvm.memset.p0i8.i64(i8* nonnull align 4 %14, i8 -86, i64 32, i1 false) #8, !noalias !1094
  call void @_ZN6tflite35NdArrayDescsForElementwiseBroadcastILi4EEEvRKNS_12RuntimeShapeES3_PNS_11NdArrayDescIXT_EEES6_(%"class.tflite::RuntimeShape"* dereferenceable(32) %1, %"class.tflite::RuntimeShape"* dereferenceable(32) %3, %"struct.tflite::NdArrayDesc"* nonnull %8, %"struct.tflite::NdArrayDesc"* nonnull %9) #8, !noalias !1094
  %15 = getelementptr inbounds %"struct.tflite::reference_ops::BroadcastComparison4DSlowCommon", %"struct.tflite::reference_ops::BroadcastComparison4DSlowCommon"* %10, i64 0, i32 0, i32 0
  store i32 0, i32* %15, align 8, !alias.scope !1097
  %16 = load i32, i32* %12, align 8, !noalias !1097
  %17 = icmp sgt i32 %16, 4
  br i1 %17, label %18, label %19

18:                                               ; preds = %7
  call void @abort() #10, !noalias !1097
  unreachable

19:                                               ; preds = %7
  store i32 4, i32* %15, align 8, !alias.scope !1097
  %20 = sub i32 4, %16
  %21 = icmp sgt i32 %20, 0
  %22 = getelementptr inbounds %"struct.tflite::reference_ops::BroadcastComparison4DSlowCommon", %"struct.tflite::reference_ops::BroadcastComparison4DSlowCommon"* %10, i64 0, i32 0, i32 1
  br i1 %21, label %23, label %103

23:                                               ; preds = %19
  %24 = bitcast %union.anon* %22 to [5 x i32]*
  %25 = zext i32 %20 to i64
  %26 = icmp ult i32 %20, 8
  br i1 %26, label %96, label %27

27:                                               ; preds = %23
  %28 = and i64 %25, 4294967288
  %29 = add nsw i64 %28, -8
  %30 = lshr exact i64 %29, 3
  %31 = add nuw nsw i64 %30, 1
  %32 = and i64 %31, 7
  %33 = icmp ult i64 %29, 56
  br i1 %33, label %81, label %34

34:                                               ; preds = %27
  %35 = sub nsw i64 %31, %32
  br label %36

36:                                               ; preds = %36, %34
  %37 = phi i64 [ 0, %34 ], [ %78, %36 ]
  %38 = phi i64 [ %35, %34 ], [ %79, %36 ]
  %39 = getelementptr inbounds [5 x i32], [5 x i32]* %24, i64 0, i64 %37
  %40 = bitcast i32* %39 to <4 x i32>*
  store <4 x i32> <i32 1, i32 1, i32 1, i32 1>, <4 x i32>* %40, align 8, !alias.scope !1097
  %41 = getelementptr inbounds i32, i32* %39, i64 4
  %42 = bitcast i32* %41 to <4 x i32>*
  store <4 x i32> <i32 1, i32 1, i32 1, i32 1>, <4 x i32>* %42, align 8, !alias.scope !1097
  %43 = or i64 %37, 8
  %44 = getelementptr inbounds [5 x i32], [5 x i32]* %24, i64 0, i64 %43
  %45 = bitcast i32* %44 to <4 x i32>*
  store <4 x i32> <i32 1, i32 1, i32 1, i32 1>, <4 x i32>* %45, align 8, !alias.scope !1097
  %46 = getelementptr inbounds i32, i32* %44, i64 4
  %47 = bitcast i32* %46 to <4 x i32>*
  store <4 x i32> <i32 1, i32 1, i32 1, i32 1>, <4 x i32>* %47, align 8, !alias.scope !1097
  %48 = or i64 %37, 16
  %49 = getelementptr inbounds [5 x i32], [5 x i32]* %24, i64 0, i64 %48
  %50 = bitcast i32* %49 to <4 x i32>*
  store <4 x i32> <i32 1, i32 1, i32 1, i32 1>, <4 x i32>* %50, align 8, !alias.scope !1097
  %51 = getelementptr inbounds i32, i32* %49, i64 4
  %52 = bitcast i32* %51 to <4 x i32>*
  store <4 x i32> <i32 1, i32 1, i32 1, i32 1>, <4 x i32>* %52, align 8, !alias.scope !1097
  %53 = or i64 %37, 24
  %54 = getelementptr inbounds [5 x i32], [5 x i32]* %24, i64 0, i64 %53
  %55 = bitcast i32* %54 to <4 x i32>*
  store <4 x i32> <i32 1, i32 1, i32 1, i32 1>, <4 x i32>* %55, align 8, !alias.scope !1097
  %56 = getelementptr inbounds i32, i32* %54, i64 4
  %57 = bitcast i32* %56 to <4 x i32>*
  store <4 x i32> <i32 1, i32 1, i32 1, i32 1>, <4 x i32>* %57, align 8, !alias.scope !1097
  %58 = or i64 %37, 32
  %59 = getelementptr inbounds [5 x i32], [5 x i32]* %24, i64 0, i64 %58
  %60 = bitcast i32* %59 to <4 x i32>*
  store <4 x i32> <i32 1, i32 1, i32 1, i32 1>, <4 x i32>* %60, align 8, !alias.scope !1097
  %61 = getelementptr inbounds i32, i32* %59, i64 4
  %62 = bitcast i32* %61 to <4 x i32>*
  store <4 x i32> <i32 1, i32 1, i32 1, i32 1>, <4 x i32>* %62, align 8, !alias.scope !1097
  %63 = or i64 %37, 40
  %64 = getelementptr inbounds [5 x i32], [5 x i32]* %24, i64 0, i64 %63
  %65 = bitcast i32* %64 to <4 x i32>*
  store <4 x i32> <i32 1, i32 1, i32 1, i32 1>, <4 x i32>* %65, align 8, !alias.scope !1097
  %66 = getelementptr inbounds i32, i32* %64, i64 4
  %67 = bitcast i32* %66 to <4 x i32>*
  store <4 x i32> <i32 1, i32 1, i32 1, i32 1>, <4 x i32>* %67, align 8, !alias.scope !1097
  %68 = or i64 %37, 48
  %69 = getelementptr inbounds [5 x i32], [5 x i32]* %24, i64 0, i64 %68
  %70 = bitcast i32* %69 to <4 x i32>*
  store <4 x i32> <i32 1, i32 1, i32 1, i32 1>, <4 x i32>* %70, align 8, !alias.scope !1097
  %71 = getelementptr inbounds i32, i32* %69, i64 4
  %72 = bitcast i32* %71 to <4 x i32>*
  store <4 x i32> <i32 1, i32 1, i32 1, i32 1>, <4 x i32>* %72, align 8, !alias.scope !1097
  %73 = or i64 %37, 56
  %74 = getelementptr inbounds [5 x i32], [5 x i32]* %24, i64 0, i64 %73
  %75 = bitcast i32* %74 to <4 x i32>*
  store <4 x i32> <i32 1, i32 1, i32 1, i32 1>, <4 x i32>* %75, align 8, !alias.scope !1097
  %76 = getelementptr inbounds i32, i32* %74, i64 4
  %77 = bitcast i32* %76 to <4 x i32>*
  store <4 x i32> <i32 1, i32 1, i32 1, i32 1>, <4 x i32>* %77, align 8, !alias.scope !1097
  %78 = add i64 %37, 64
  %79 = add i64 %38, -8
  %80 = icmp eq i64 %79, 0
  br i1 %80, label %81, label %36, !llvm.loop !1100

81:                                               ; preds = %36, %27
  %82 = phi i64 [ 0, %27 ], [ %78, %36 ]
  %83 = icmp eq i64 %32, 0
  br i1 %83, label %94, label %84

84:                                               ; preds = %81, %84
  %85 = phi i64 [ %91, %84 ], [ %82, %81 ]
  %86 = phi i64 [ %92, %84 ], [ %32, %81 ]
  %87 = getelementptr inbounds [5 x i32], [5 x i32]* %24, i64 0, i64 %85
  %88 = bitcast i32* %87 to <4 x i32>*
  store <4 x i32> <i32 1, i32 1, i32 1, i32 1>, <4 x i32>* %88, align 8, !alias.scope !1097
  %89 = getelementptr inbounds i32, i32* %87, i64 4
  %90 = bitcast i32* %89 to <4 x i32>*
  store <4 x i32> <i32 1, i32 1, i32 1, i32 1>, <4 x i32>* %90, align 8, !alias.scope !1097
  %91 = add i64 %85, 8
  %92 = add i64 %86, -1
  %93 = icmp eq i64 %92, 0
  br i1 %93, label %94, label %84, !llvm.loop !1101

94:                                               ; preds = %84, %81
  %95 = icmp eq i64 %28, %25
  br i1 %95, label %103, label %96

96:                                               ; preds = %94, %23
  %97 = phi i64 [ 0, %23 ], [ %28, %94 ]
  br label %98

98:                                               ; preds = %96, %98
  %99 = phi i64 [ %101, %98 ], [ %97, %96 ]
  %100 = getelementptr inbounds [5 x i32], [5 x i32]* %24, i64 0, i64 %99
  store i32 1, i32* %100, align 4, !alias.scope !1097
  %101 = add nuw nsw i64 %99, 1
  %102 = icmp eq i64 %101, %25
  br i1 %102, label %103, label %98, !llvm.loop !1102

103:                                              ; preds = %98, %94, %19
  %104 = bitcast %union.anon* %22 to i32*
  %105 = sext i32 %20 to i64
  %106 = getelementptr inbounds i32, i32* %104, i64 %105
  %107 = bitcast i32* %106 to i8*
  %108 = icmp sgt i32 %16, 5
  %109 = getelementptr inbounds %"class.tflite::RuntimeShape", %"class.tflite::RuntimeShape"* %5, i64 0, i32 1
  %110 = getelementptr inbounds %union.anon, %union.anon* %109, i64 0, i32 0
  %111 = load i32*, i32** %110, align 8, !noalias !1097
  %112 = bitcast %union.anon* %109 to i32*
  %113 = select i1 %108, i32* %111, i32* %112
  %114 = bitcast i32* %113 to i8*
  %115 = sext i32 %16 to i64
  %116 = shl nsw i64 %115, 2
  call void @llvm.memcpy.p0i8.p0i8.i64(i8* align 4 %107, i8* align 4 %114, i64 %116, i1 false) #8
  %117 = getelementptr inbounds %"struct.tflite::reference_ops::BroadcastComparison4DSlowCommon", %"struct.tflite::reference_ops::BroadcastComparison4DSlowCommon"* %10, i64 0, i32 1
  %118 = bitcast %"struct.tflite::NdArrayDesc"* %117 to i8*
  call void @llvm.memcpy.p0i8.p0i8.i64(i8* align 8 %118, i8* nonnull align 4 %13, i64 32, i1 false) #8
  %119 = getelementptr inbounds %"struct.tflite::reference_ops::BroadcastComparison4DSlowCommon", %"struct.tflite::reference_ops::BroadcastComparison4DSlowCommon"* %10, i64 0, i32 2
  %120 = bitcast %"struct.tflite::NdArrayDesc"* %119 to i8*
  call void @llvm.memcpy.p0i8.p0i8.i64(i8* align 8 %120, i8* nonnull align 4 %14, i64 32, i1 false) #8
  call void @llvm.lifetime.end.p0i8(i64 32, i8* nonnull %14) #8, !noalias !1094
  call void @llvm.lifetime.end.p0i8(i64 32, i8* nonnull %13) #8, !noalias !1094
  %121 = getelementptr inbounds %"struct.tflite::ComparisonParams", %"struct.tflite::ComparisonParams"* %0, i64 0, i32 0
  %122 = load i32, i32* %121, align 4
  %123 = getelementptr inbounds %"struct.tflite::ComparisonParams", %"struct.tflite::ComparisonParams"* %0, i64 0, i32 1
  %124 = load i32, i32* %123, align 4
  %125 = getelementptr inbounds %"struct.tflite::ComparisonParams", %"struct.tflite::ComparisonParams"* %0, i64 0, i32 2
  %126 = load i32, i32* %125, align 4
  %127 = getelementptr inbounds %"struct.tflite::ComparisonParams", %"struct.tflite::ComparisonParams"* %0, i64 0, i32 4
  %128 = load i32, i32* %127, align 4
  %129 = getelementptr inbounds %"struct.tflite::ComparisonParams", %"struct.tflite::ComparisonParams"* %0, i64 0, i32 5
  %130 = load i32, i32* %129, align 4
  %131 = load i32, i32* %15, align 8
  %132 = icmp sgt i32 %131, 5
  %133 = getelementptr inbounds %union.anon, %union.anon* %22, i64 0, i32 0
  %134 = load i32*, i32** %133, align 8
  %135 = select i1 %132, i32* %134, i32* %104
  %136 = load i32, i32* %135, align 4
  %137 = icmp sgt i32 %136, 0
  br i1 %137, label %138, label %205

138:                                              ; preds = %103
  %139 = getelementptr inbounds %"struct.tflite::ComparisonParams", %"struct.tflite::ComparisonParams"* %0, i64 0, i32 6
  %140 = load i32, i32* %139, align 4
  %141 = getelementptr inbounds %"struct.tflite::ComparisonParams", %"struct.tflite::ComparisonParams"* %0, i64 0, i32 3
  %142 = load i32, i32* %141, align 4
  %143 = bitcast %union.anon* %22 to [5 x i32]*
  %144 = getelementptr inbounds [5 x i32], [5 x i32]* %143, i64 0, i64 1
  %145 = getelementptr inbounds %"struct.tflite::reference_ops::BroadcastComparison4DSlowCommon", %"struct.tflite::reference_ops::BroadcastComparison4DSlowCommon"* %10, i64 0, i32 0, i32 1, i32 1
  %146 = bitcast [16 x i8]* %145 to i32*
  %147 = getelementptr inbounds %"struct.tflite::reference_ops::BroadcastComparison4DSlowCommon", %"struct.tflite::reference_ops::BroadcastComparison4DSlowCommon"* %10, i64 0, i32 0, i32 1, i32 1, i64 4
  %148 = bitcast i8* %147 to i32*
  %149 = getelementptr inbounds %"struct.tflite::reference_ops::BroadcastComparison4DSlowCommon", %"struct.tflite::reference_ops::BroadcastComparison4DSlowCommon"* %10, i64 0, i32 1, i32 1, i64 0
  %150 = load i32, i32* %149, align 8
  %151 = getelementptr inbounds %"struct.tflite::reference_ops::BroadcastComparison4DSlowCommon", %"struct.tflite::reference_ops::BroadcastComparison4DSlowCommon"* %10, i64 0, i32 1, i32 1, i64 1
  %152 = load i32, i32* %151, align 4
  %153 = getelementptr inbounds %"struct.tflite::reference_ops::BroadcastComparison4DSlowCommon", %"struct.tflite::reference_ops::BroadcastComparison4DSlowCommon"* %10, i64 0, i32 1, i32 1, i64 2
  %154 = load i32, i32* %153, align 8
  %155 = getelementptr inbounds %"struct.tflite::reference_ops::BroadcastComparison4DSlowCommon", %"struct.tflite::reference_ops::BroadcastComparison4DSlowCommon"* %10, i64 0, i32 1, i32 1, i64 3
  %156 = load i32, i32* %155, align 4
  %157 = getelementptr inbounds %"struct.tflite::reference_ops::BroadcastComparison4DSlowCommon", %"struct.tflite::reference_ops::BroadcastComparison4DSlowCommon"* %10, i64 0, i32 2, i32 1, i64 0
  %158 = load i32, i32* %157, align 8
  %159 = getelementptr inbounds %"struct.tflite::reference_ops::BroadcastComparison4DSlowCommon", %"struct.tflite::reference_ops::BroadcastComparison4DSlowCommon"* %10, i64 0, i32 2, i32 1, i64 1
  %160 = load i32, i32* %159, align 4
  %161 = getelementptr inbounds %"struct.tflite::reference_ops::BroadcastComparison4DSlowCommon", %"struct.tflite::reference_ops::BroadcastComparison4DSlowCommon"* %10, i64 0, i32 2, i32 1, i64 2
  %162 = load i32, i32* %161, align 8
  %163 = getelementptr inbounds %"struct.tflite::reference_ops::BroadcastComparison4DSlowCommon", %"struct.tflite::reference_ops::BroadcastComparison4DSlowCommon"* %10, i64 0, i32 2, i32 1, i64 3
  %164 = load i32, i32* %163, align 4
  %165 = sext i32 %126 to i64
  %166 = sub nsw i32 0, %142
  %167 = zext i32 %166 to i64
  %168 = shl nsw i64 -1, %167
  %169 = trunc i64 %168 to i32
  %170 = xor i32 %169, -1
  %171 = ashr i32 %170, 1
  %172 = sext i32 %130 to i64
  %173 = sub nsw i32 0, %140
  %174 = zext i32 %173 to i64
  %175 = shl nsw i64 -1, %174
  %176 = trunc i64 %175 to i32
  %177 = xor i32 %176, -1
  %178 = ashr i32 %177, 1
  %179 = getelementptr inbounds i32, i32* %104, i64 1
  %180 = sext i32 %164 to i64
  %181 = sext i32 %156 to i64
  %182 = sext i32 %162 to i64
  %183 = sext i32 %154 to i64
  %184 = sext i32 %160 to i64
  %185 = sext i32 %152 to i64
  %186 = sext i32 %158 to i64
  %187 = sext i32 %150 to i64
  %188 = getelementptr inbounds i32, i32* %134, i64 1
  %189 = select i1 %132, i32* %188, i32* %144
  %190 = getelementptr inbounds i32, i32* %134, i64 2
  %191 = select i1 %132, i32* %190, i32* %146
  %192 = getelementptr inbounds i32, i32* %134, i64 3
  %193 = select i1 %132, i32* %192, i32* %148
  %194 = icmp eq i32 %126, -2147483648
  %195 = icmp eq i32 %130, -2147483648
  br label %196

196:                                              ; preds = %138, %229
  %197 = phi i32 [ %136, %138 ], [ %230, %229 ]
  %198 = phi i64 [ 0, %138 ], [ %231, %229 ]
  %199 = load i32, i32* %189, align 4
  %200 = icmp sgt i32 %199, 0
  br i1 %200, label %201, label %229

201:                                              ; preds = %196
  %202 = mul nsw i64 %198, %187
  %203 = mul nsw i64 %198, %186
  %204 = trunc i64 %198 to i32
  br label %212

205:                                              ; preds = %229, %103
  %206 = xor i1 %132, true
  %207 = icmp eq i32* %134, null
  %208 = or i1 %207, %206
  br i1 %208, label %211, label %209

209:                                              ; preds = %205
  %210 = bitcast i32* %134 to i8*
  call void @_ZdaPv(i8* %210) #9
  br label %211

211:                                              ; preds = %205, %209
  call void @llvm.lifetime.end.p0i8(i64 96, i8* nonnull %11) #8
  ret void

212:                                              ; preds = %201, %250
  %213 = phi i32 [ %199, %201 ], [ %251, %250 ]
  %214 = phi i64 [ 0, %201 ], [ %252, %250 ]
  %215 = load i32, i32* %191, align 4
  %216 = icmp sgt i32 %215, 0
  br i1 %216, label %217, label %250

217:                                              ; preds = %212
  %218 = mul nsw i64 %214, %185
  %219 = add nsw i64 %218, %202
  %220 = mul nsw i64 %214, %184
  %221 = add nsw i64 %220, %203
  %222 = load i32, i32* %179, align 4
  %223 = mul nsw i32 %222, %204
  %224 = trunc i64 %214 to i32
  %225 = add nsw i32 %223, %224
  %226 = load i32, i32* %193, align 4
  br label %234

227:                                              ; preds = %250
  %228 = load i32, i32* %135, align 4
  br label %229

229:                                              ; preds = %227, %196
  %230 = phi i32 [ %228, %227 ], [ %197, %196 ]
  %231 = add nuw nsw i64 %198, 1
  %232 = sext i32 %230 to i64
  %233 = icmp slt i64 %231, %232
  br i1 %233, label %196, label %205

234:                                              ; preds = %217, %257
  %235 = phi i32 [ %215, %217 ], [ %258, %257 ]
  %236 = phi i32 [ %226, %217 ], [ %259, %257 ]
  %237 = phi i64 [ 0, %217 ], [ %260, %257 ]
  %238 = icmp sgt i32 %236, 0
  br i1 %238, label %239, label %257

239:                                              ; preds = %234
  %240 = mul nsw i64 %237, %183
  %241 = add nsw i64 %219, %240
  %242 = mul nsw i64 %237, %182
  %243 = add nsw i64 %221, %242
  %244 = load i32, i32* %146, align 8
  %245 = mul nsw i32 %225, %244
  %246 = trunc i64 %237 to i32
  %247 = add nsw i32 %245, %246
  br label %263

248:                                              ; preds = %257
  %249 = load i32, i32* %189, align 4
  br label %250

250:                                              ; preds = %248, %212
  %251 = phi i32 [ %249, %248 ], [ %213, %212 ]
  %252 = add nuw nsw i64 %214, 1
  %253 = sext i32 %251 to i64
  %254 = icmp slt i64 %252, %253
  br i1 %254, label %212, label %227

255:                                              ; preds = %312
  %256 = load i32, i32* %191, align 4
  br label %257

257:                                              ; preds = %255, %234
  %258 = phi i32 [ %256, %255 ], [ %235, %234 ]
  %259 = phi i32 [ %330, %255 ], [ %236, %234 ]
  %260 = add nuw nsw i64 %237, 1
  %261 = sext i32 %258 to i64
  %262 = icmp slt i64 %260, %261
  br i1 %262, label %234, label %248

263:                                              ; preds = %239, %312
  %264 = phi i64 [ 0, %239 ], [ %329, %312 ]
  %265 = mul nsw i64 %264, %181
  %266 = add nsw i64 %241, %265
  %267 = getelementptr inbounds i8, i8* %2, i64 %266
  %268 = load i8, i8* %267, align 1
  %269 = sext i8 %268 to i32
  %270 = add nsw i32 %124, %269
  %271 = mul nsw i64 %264, %180
  %272 = add nsw i64 %243, %271
  %273 = getelementptr inbounds i8, i8* %4, i64 %272
  %274 = load i8, i8* %273, align 1
  %275 = sext i8 %274 to i32
  %276 = add nsw i32 %128, %275
  %277 = shl i32 %270, %122
  %278 = shl i32 %276, %122
  %279 = icmp eq i32 %277, %126
  br i1 %279, label %282, label %280

280:                                              ; preds = %263
  %281 = sext i32 %277 to i64
  br label %283

282:                                              ; preds = %263
  br i1 %194, label %291, label %283

283:                                              ; preds = %282, %280
  %284 = phi i64 [ %281, %280 ], [ %165, %282 ]
  %285 = mul nsw i64 %284, %165
  %286 = icmp sgt i64 %285, -1
  %287 = select i1 %286, i64 1073741824, i64 -1073741823
  %288 = add nsw i64 %287, %285
  %289 = sdiv i64 %288, 2147483648
  %290 = trunc i64 %289 to i32
  br label %291

291:                                              ; preds = %282, %283
  %292 = phi i32 [ %290, %283 ], [ 2147483647, %282 ]
  %293 = and i32 %292, %170
  %294 = lshr i32 %292, 31
  %295 = add nsw i32 %294, %171
  %296 = ashr i32 %292, %166
  %297 = icmp sgt i32 %293, %295
  %298 = zext i1 %297 to i32
  %299 = add nsw i32 %296, %298
  %300 = icmp eq i32 %278, %130
  br i1 %300, label %303, label %301

301:                                              ; preds = %291
  %302 = sext i32 %278 to i64
  br label %304

303:                                              ; preds = %291
  br i1 %195, label %312, label %304

304:                                              ; preds = %303, %301
  %305 = phi i64 [ %302, %301 ], [ %172, %303 ]
  %306 = mul nsw i64 %305, %172
  %307 = icmp sgt i64 %306, -1
  %308 = select i1 %307, i64 1073741824, i64 -1073741823
  %309 = add nsw i64 %308, %306
  %310 = sdiv i64 %309, 2147483648
  %311 = trunc i64 %310 to i32
  br label %312

312:                                              ; preds = %303, %304
  %313 = phi i32 [ %311, %304 ], [ 2147483647, %303 ]
  %314 = and i32 %313, %177
  %315 = lshr i32 %313, 31
  %316 = add nsw i32 %315, %178
  %317 = ashr i32 %313, %173
  %318 = icmp sgt i32 %314, %316
  %319 = zext i1 %318 to i32
  %320 = add nsw i32 %317, %319
  %321 = icmp slt i32 %299, %320
  %322 = load i32, i32* %148, align 4
  %323 = mul nsw i32 %247, %322
  %324 = trunc i64 %264 to i32
  %325 = add nsw i32 %323, %324
  %326 = sext i32 %325 to i64
  %327 = getelementptr inbounds i8, i8* %6, i64 %326
  %328 = zext i1 %321 to i8
  store i8 %328, i8* %327, align 1
  %329 = add nuw nsw i64 %264, 1
  %330 = load i32, i32* %193, align 4
  %331 = sext i32 %330 to i64
  %332 = icmp slt i64 %329, %331
  br i1 %332, label %263, label %255
}

; Function Attrs: inlinehint nounwind ssp uwtable
define linkonce_odr hidden void @_ZN6tflite13reference_ops29BroadcastComparison4DSlowImplIfXadL_ZNS0_11LessEqualFnIfEEbT_S3_EEEEvRKNS_16ComparisonParamsERKNS_12RuntimeShapeEPKS3_S9_SB_S9_Pb(%"struct.tflite::ComparisonParams"* dereferenceable(32), %"class.tflite::RuntimeShape"* dereferenceable(32), float*, %"class.tflite::RuntimeShape"* dereferenceable(32), float*, %"class.tflite::RuntimeShape"* dereferenceable(32), i8*) local_unnamed_addr #4 comdat {
  %8 = alloca %"struct.tflite::NdArrayDesc", align 4
  %9 = alloca %"struct.tflite::NdArrayDesc", align 4
  %10 = alloca %"struct.tflite::reference_ops::BroadcastComparison4DSlowCommon", align 8
  %11 = bitcast %"struct.tflite::reference_ops::BroadcastComparison4DSlowCommon"* %10 to i8*
  call void @llvm.lifetime.start.p0i8(i64 96, i8* nonnull %11) #8
  call void @llvm.memset.p0i8.i64(i8* nonnull align 8 %11, i8 -86, i64 96, i1 false)
  %12 = getelementptr inbounds %"class.tflite::RuntimeShape", %"class.tflite::RuntimeShape"* %5, i64 0, i32 0
  %13 = bitcast %"struct.tflite::NdArrayDesc"* %8 to i8*
  call void @llvm.lifetime.start.p0i8(i64 32, i8* nonnull %13) #8, !noalias !1103
  %14 = bitcast %"struct.tflite::NdArrayDesc"* %9 to i8*
  call void @llvm.memset.p0i8.i64(i8* nonnull align 4 %13, i8 -86, i64 32, i1 false) #8, !noalias !1103
  call void @llvm.lifetime.start.p0i8(i64 32, i8* nonnull %14) #8, !noalias !1103
  call void @llvm.memset.p0i8.i64(i8* nonnull align 4 %14, i8 -86, i64 32, i1 false) #8, !noalias !1103
  call void @_ZN6tflite35NdArrayDescsForElementwiseBroadcastILi4EEEvRKNS_12RuntimeShapeES3_PNS_11NdArrayDescIXT_EEES6_(%"class.tflite::RuntimeShape"* dereferenceable(32) %1, %"class.tflite::RuntimeShape"* dereferenceable(32) %3, %"struct.tflite::NdArrayDesc"* nonnull %8, %"struct.tflite::NdArrayDesc"* nonnull %9) #8, !noalias !1103
  %15 = getelementptr inbounds %"struct.tflite::reference_ops::BroadcastComparison4DSlowCommon", %"struct.tflite::reference_ops::BroadcastComparison4DSlowCommon"* %10, i64 0, i32 0, i32 0
  store i32 0, i32* %15, align 8, !alias.scope !1106
  %16 = load i32, i32* %12, align 8, !noalias !1106
  %17 = icmp sgt i32 %16, 4
  br i1 %17, label %18, label %19

18:                                               ; preds = %7
  call void @abort() #10, !noalias !1106
  unreachable

19:                                               ; preds = %7
  store i32 4, i32* %15, align 8, !alias.scope !1106
  %20 = sub i32 4, %16
  %21 = icmp sgt i32 %20, 0
  %22 = getelementptr inbounds %"struct.tflite::reference_ops::BroadcastComparison4DSlowCommon", %"struct.tflite::reference_ops::BroadcastComparison4DSlowCommon"* %10, i64 0, i32 0, i32 1
  br i1 %21, label %23, label %103

23:                                               ; preds = %19
  %24 = bitcast %union.anon* %22 to [5 x i32]*
  %25 = zext i32 %20 to i64
  %26 = icmp ult i32 %20, 8
  br i1 %26, label %96, label %27

27:                                               ; preds = %23
  %28 = and i64 %25, 4294967288
  %29 = add nsw i64 %28, -8
  %30 = lshr exact i64 %29, 3
  %31 = add nuw nsw i64 %30, 1
  %32 = and i64 %31, 7
  %33 = icmp ult i64 %29, 56
  br i1 %33, label %81, label %34

34:                                               ; preds = %27
  %35 = sub nsw i64 %31, %32
  br label %36

36:                                               ; preds = %36, %34
  %37 = phi i64 [ 0, %34 ], [ %78, %36 ]
  %38 = phi i64 [ %35, %34 ], [ %79, %36 ]
  %39 = getelementptr inbounds [5 x i32], [5 x i32]* %24, i64 0, i64 %37
  %40 = bitcast i32* %39 to <4 x i32>*
  store <4 x i32> <i32 1, i32 1, i32 1, i32 1>, <4 x i32>* %40, align 8, !alias.scope !1106
  %41 = getelementptr inbounds i32, i32* %39, i64 4
  %42 = bitcast i32* %41 to <4 x i32>*
  store <4 x i32> <i32 1, i32 1, i32 1, i32 1>, <4 x i32>* %42, align 8, !alias.scope !1106
  %43 = or i64 %37, 8
  %44 = getelementptr inbounds [5 x i32], [5 x i32]* %24, i64 0, i64 %43
  %45 = bitcast i32* %44 to <4 x i32>*
  store <4 x i32> <i32 1, i32 1, i32 1, i32 1>, <4 x i32>* %45, align 8, !alias.scope !1106
  %46 = getelementptr inbounds i32, i32* %44, i64 4
  %47 = bitcast i32* %46 to <4 x i32>*
  store <4 x i32> <i32 1, i32 1, i32 1, i32 1>, <4 x i32>* %47, align 8, !alias.scope !1106
  %48 = or i64 %37, 16
  %49 = getelementptr inbounds [5 x i32], [5 x i32]* %24, i64 0, i64 %48
  %50 = bitcast i32* %49 to <4 x i32>*
  store <4 x i32> <i32 1, i32 1, i32 1, i32 1>, <4 x i32>* %50, align 8, !alias.scope !1106
  %51 = getelementptr inbounds i32, i32* %49, i64 4
  %52 = bitcast i32* %51 to <4 x i32>*
  store <4 x i32> <i32 1, i32 1, i32 1, i32 1>, <4 x i32>* %52, align 8, !alias.scope !1106
  %53 = or i64 %37, 24
  %54 = getelementptr inbounds [5 x i32], [5 x i32]* %24, i64 0, i64 %53
  %55 = bitcast i32* %54 to <4 x i32>*
  store <4 x i32> <i32 1, i32 1, i32 1, i32 1>, <4 x i32>* %55, align 8, !alias.scope !1106
  %56 = getelementptr inbounds i32, i32* %54, i64 4
  %57 = bitcast i32* %56 to <4 x i32>*
  store <4 x i32> <i32 1, i32 1, i32 1, i32 1>, <4 x i32>* %57, align 8, !alias.scope !1106
  %58 = or i64 %37, 32
  %59 = getelementptr inbounds [5 x i32], [5 x i32]* %24, i64 0, i64 %58
  %60 = bitcast i32* %59 to <4 x i32>*
  store <4 x i32> <i32 1, i32 1, i32 1, i32 1>, <4 x i32>* %60, align 8, !alias.scope !1106
  %61 = getelementptr inbounds i32, i32* %59, i64 4
  %62 = bitcast i32* %61 to <4 x i32>*
  store <4 x i32> <i32 1, i32 1, i32 1, i32 1>, <4 x i32>* %62, align 8, !alias.scope !1106
  %63 = or i64 %37, 40
  %64 = getelementptr inbounds [5 x i32], [5 x i32]* %24, i64 0, i64 %63
  %65 = bitcast i32* %64 to <4 x i32>*
  store <4 x i32> <i32 1, i32 1, i32 1, i32 1>, <4 x i32>* %65, align 8, !alias.scope !1106
  %66 = getelementptr inbounds i32, i32* %64, i64 4
  %67 = bitcast i32* %66 to <4 x i32>*
  store <4 x i32> <i32 1, i32 1, i32 1, i32 1>, <4 x i32>* %67, align 8, !alias.scope !1106
  %68 = or i64 %37, 48
  %69 = getelementptr inbounds [5 x i32], [5 x i32]* %24, i64 0, i64 %68
  %70 = bitcast i32* %69 to <4 x i32>*
  store <4 x i32> <i32 1, i32 1, i32 1, i32 1>, <4 x i32>* %70, align 8, !alias.scope !1106
  %71 = getelementptr inbounds i32, i32* %69, i64 4
  %72 = bitcast i32* %71 to <4 x i32>*
  store <4 x i32> <i32 1, i32 1, i32 1, i32 1>, <4 x i32>* %72, align 8, !alias.scope !1106
  %73 = or i64 %37, 56
  %74 = getelementptr inbounds [5 x i32], [5 x i32]* %24, i64 0, i64 %73
  %75 = bitcast i32* %74 to <4 x i32>*
  store <4 x i32> <i32 1, i32 1, i32 1, i32 1>, <4 x i32>* %75, align 8, !alias.scope !1106
  %76 = getelementptr inbounds i32, i32* %74, i64 4
  %77 = bitcast i32* %76 to <4 x i32>*
  store <4 x i32> <i32 1, i32 1, i32 1, i32 1>, <4 x i32>* %77, align 8, !alias.scope !1106
  %78 = add i64 %37, 64
  %79 = add i64 %38, -8
  %80 = icmp eq i64 %79, 0
  br i1 %80, label %81, label %36, !llvm.loop !1109

81:                                               ; preds = %36, %27
  %82 = phi i64 [ 0, %27 ], [ %78, %36 ]
  %83 = icmp eq i64 %32, 0
  br i1 %83, label %94, label %84

84:                                               ; preds = %81, %84
  %85 = phi i64 [ %91, %84 ], [ %82, %81 ]
  %86 = phi i64 [ %92, %84 ], [ %32, %81 ]
  %87 = getelementptr inbounds [5 x i32], [5 x i32]* %24, i64 0, i64 %85
  %88 = bitcast i32* %87 to <4 x i32>*
  store <4 x i32> <i32 1, i32 1, i32 1, i32 1>, <4 x i32>* %88, align 8, !alias.scope !1106
  %89 = getelementptr inbounds i32, i32* %87, i64 4
  %90 = bitcast i32* %89 to <4 x i32>*
  store <4 x i32> <i32 1, i32 1, i32 1, i32 1>, <4 x i32>* %90, align 8, !alias.scope !1106
  %91 = add i64 %85, 8
  %92 = add i64 %86, -1
  %93 = icmp eq i64 %92, 0
  br i1 %93, label %94, label %84, !llvm.loop !1110

94:                                               ; preds = %84, %81
  %95 = icmp eq i64 %28, %25
  br i1 %95, label %103, label %96

96:                                               ; preds = %94, %23
  %97 = phi i64 [ 0, %23 ], [ %28, %94 ]
  br label %98

98:                                               ; preds = %96, %98
  %99 = phi i64 [ %101, %98 ], [ %97, %96 ]
  %100 = getelementptr inbounds [5 x i32], [5 x i32]* %24, i64 0, i64 %99
  store i32 1, i32* %100, align 4, !alias.scope !1106
  %101 = add nuw nsw i64 %99, 1
  %102 = icmp eq i64 %101, %25
  br i1 %102, label %103, label %98, !llvm.loop !1111

103:                                              ; preds = %98, %94, %19
  %104 = bitcast %union.anon* %22 to i32*
  %105 = sext i32 %20 to i64
  %106 = getelementptr inbounds i32, i32* %104, i64 %105
  %107 = bitcast i32* %106 to i8*
  %108 = icmp sgt i32 %16, 5
  %109 = getelementptr inbounds %"class.tflite::RuntimeShape", %"class.tflite::RuntimeShape"* %5, i64 0, i32 1
  %110 = getelementptr inbounds %union.anon, %union.anon* %109, i64 0, i32 0
  %111 = load i32*, i32** %110, align 8, !noalias !1106
  %112 = bitcast %union.anon* %109 to i32*
  %113 = select i1 %108, i32* %111, i32* %112
  %114 = bitcast i32* %113 to i8*
  %115 = sext i32 %16 to i64
  %116 = shl nsw i64 %115, 2
  call void @llvm.memcpy.p0i8.p0i8.i64(i8* align 4 %107, i8* align 4 %114, i64 %116, i1 false) #8
  %117 = getelementptr inbounds %"struct.tflite::reference_ops::BroadcastComparison4DSlowCommon", %"struct.tflite::reference_ops::BroadcastComparison4DSlowCommon"* %10, i64 0, i32 1
  %118 = bitcast %"struct.tflite::NdArrayDesc"* %117 to i8*
  call void @llvm.memcpy.p0i8.p0i8.i64(i8* align 8 %118, i8* nonnull align 4 %13, i64 32, i1 false) #8
  %119 = getelementptr inbounds %"struct.tflite::reference_ops::BroadcastComparison4DSlowCommon", %"struct.tflite::reference_ops::BroadcastComparison4DSlowCommon"* %10, i64 0, i32 2
  %120 = bitcast %"struct.tflite::NdArrayDesc"* %119 to i8*
  call void @llvm.memcpy.p0i8.p0i8.i64(i8* align 8 %120, i8* nonnull align 4 %14, i64 32, i1 false) #8
  call void @llvm.lifetime.end.p0i8(i64 32, i8* nonnull %14) #8, !noalias !1103
  call void @llvm.lifetime.end.p0i8(i64 32, i8* nonnull %13) #8, !noalias !1103
  %121 = load i32, i32* %15, align 8
  %122 = icmp sgt i32 %121, 5
  %123 = getelementptr inbounds %union.anon, %union.anon* %22, i64 0, i32 0
  %124 = load i32*, i32** %123, align 8
  %125 = select i1 %122, i32* %124, i32* %104
  %126 = load i32, i32* %125, align 4
  %127 = icmp sgt i32 %126, 0
  br i1 %127, label %128, label %175

128:                                              ; preds = %103
  %129 = bitcast %union.anon* %22 to [5 x i32]*
  %130 = getelementptr inbounds [5 x i32], [5 x i32]* %129, i64 0, i64 1
  %131 = getelementptr inbounds %"struct.tflite::reference_ops::BroadcastComparison4DSlowCommon", %"struct.tflite::reference_ops::BroadcastComparison4DSlowCommon"* %10, i64 0, i32 0, i32 1, i32 1
  %132 = bitcast [16 x i8]* %131 to i32*
  %133 = getelementptr inbounds %"struct.tflite::reference_ops::BroadcastComparison4DSlowCommon", %"struct.tflite::reference_ops::BroadcastComparison4DSlowCommon"* %10, i64 0, i32 0, i32 1, i32 1, i64 4
  %134 = bitcast i8* %133 to i32*
  %135 = getelementptr inbounds %"struct.tflite::reference_ops::BroadcastComparison4DSlowCommon", %"struct.tflite::reference_ops::BroadcastComparison4DSlowCommon"* %10, i64 0, i32 1, i32 1, i64 0
  %136 = load i32, i32* %135, align 8
  %137 = getelementptr inbounds %"struct.tflite::reference_ops::BroadcastComparison4DSlowCommon", %"struct.tflite::reference_ops::BroadcastComparison4DSlowCommon"* %10, i64 0, i32 1, i32 1, i64 1
  %138 = load i32, i32* %137, align 4
  %139 = getelementptr inbounds %"struct.tflite::reference_ops::BroadcastComparison4DSlowCommon", %"struct.tflite::reference_ops::BroadcastComparison4DSlowCommon"* %10, i64 0, i32 1, i32 1, i64 2
  %140 = load i32, i32* %139, align 8
  %141 = getelementptr inbounds %"struct.tflite::reference_ops::BroadcastComparison4DSlowCommon", %"struct.tflite::reference_ops::BroadcastComparison4DSlowCommon"* %10, i64 0, i32 1, i32 1, i64 3
  %142 = load i32, i32* %141, align 4
  %143 = getelementptr inbounds %"struct.tflite::reference_ops::BroadcastComparison4DSlowCommon", %"struct.tflite::reference_ops::BroadcastComparison4DSlowCommon"* %10, i64 0, i32 2, i32 1, i64 0
  %144 = load i32, i32* %143, align 8
  %145 = getelementptr inbounds %"struct.tflite::reference_ops::BroadcastComparison4DSlowCommon", %"struct.tflite::reference_ops::BroadcastComparison4DSlowCommon"* %10, i64 0, i32 2, i32 1, i64 1
  %146 = load i32, i32* %145, align 4
  %147 = getelementptr inbounds %"struct.tflite::reference_ops::BroadcastComparison4DSlowCommon", %"struct.tflite::reference_ops::BroadcastComparison4DSlowCommon"* %10, i64 0, i32 2, i32 1, i64 2
  %148 = load i32, i32* %147, align 8
  %149 = getelementptr inbounds %"struct.tflite::reference_ops::BroadcastComparison4DSlowCommon", %"struct.tflite::reference_ops::BroadcastComparison4DSlowCommon"* %10, i64 0, i32 2, i32 1, i64 3
  %150 = load i32, i32* %149, align 4
  %151 = getelementptr inbounds i32, i32* %104, i64 1
  %152 = sext i32 %150 to i64
  %153 = sext i32 %142 to i64
  %154 = sext i32 %148 to i64
  %155 = sext i32 %140 to i64
  %156 = sext i32 %146 to i64
  %157 = sext i32 %138 to i64
  %158 = sext i32 %144 to i64
  %159 = sext i32 %136 to i64
  %160 = getelementptr inbounds i32, i32* %124, i64 1
  %161 = select i1 %122, i32* %160, i32* %130
  %162 = getelementptr inbounds i32, i32* %124, i64 2
  %163 = select i1 %122, i32* %162, i32* %132
  %164 = getelementptr inbounds i32, i32* %124, i64 3
  %165 = select i1 %122, i32* %164, i32* %134
  br label %166

166:                                              ; preds = %128, %199
  %167 = phi i32 [ %126, %128 ], [ %200, %199 ]
  %168 = phi i64 [ 0, %128 ], [ %201, %199 ]
  %169 = load i32, i32* %161, align 4
  %170 = icmp sgt i32 %169, 0
  br i1 %170, label %171, label %199

171:                                              ; preds = %166
  %172 = mul nsw i64 %168, %159
  %173 = mul nsw i64 %168, %158
  %174 = trunc i64 %168 to i32
  br label %182

175:                                              ; preds = %199, %103
  %176 = xor i1 %122, true
  %177 = icmp eq i32* %124, null
  %178 = or i1 %177, %176
  br i1 %178, label %181, label %179

179:                                              ; preds = %175
  %180 = bitcast i32* %124 to i8*
  call void @_ZdaPv(i8* %180) #9
  br label %181

181:                                              ; preds = %175, %179
  call void @llvm.lifetime.end.p0i8(i64 96, i8* nonnull %11) #8
  ret void

182:                                              ; preds = %171, %222
  %183 = phi i32 [ %169, %171 ], [ %223, %222 ]
  %184 = phi i64 [ 0, %171 ], [ %224, %222 ]
  %185 = load i32, i32* %163, align 4
  %186 = icmp sgt i32 %185, 0
  br i1 %186, label %187, label %222

187:                                              ; preds = %182
  %188 = mul nsw i64 %184, %157
  %189 = add nsw i64 %188, %172
  %190 = mul nsw i64 %184, %156
  %191 = add nsw i64 %190, %173
  %192 = load i32, i32* %151, align 4
  %193 = mul nsw i32 %192, %174
  %194 = trunc i64 %184 to i32
  %195 = add nsw i32 %193, %194
  %196 = load i32, i32* %165, align 4
  br label %204

197:                                              ; preds = %222
  %198 = load i32, i32* %125, align 4
  br label %199

199:                                              ; preds = %197, %166
  %200 = phi i32 [ %198, %197 ], [ %167, %166 ]
  %201 = add nuw nsw i64 %168, 1
  %202 = sext i32 %200 to i64
  %203 = icmp slt i64 %201, %202
  br i1 %203, label %166, label %175

204:                                              ; preds = %187, %229
  %205 = phi i32 [ %185, %187 ], [ %230, %229 ]
  %206 = phi i32 [ %196, %187 ], [ %231, %229 ]
  %207 = phi i64 [ 0, %187 ], [ %232, %229 ]
  %208 = icmp sgt i32 %206, 0
  br i1 %208, label %209, label %229

209:                                              ; preds = %204
  %210 = mul nsw i64 %207, %155
  %211 = add nsw i64 %189, %210
  %212 = mul nsw i64 %207, %154
  %213 = add nsw i64 %191, %212
  %214 = load i32, i32* %132, align 8
  %215 = mul nsw i32 %195, %214
  %216 = trunc i64 %207 to i32
  %217 = add nsw i32 %215, %216
  %218 = load i32, i32* %134, align 4
  %219 = mul nsw i32 %217, %218
  br label %235

220:                                              ; preds = %229
  %221 = load i32, i32* %161, align 4
  br label %222

222:                                              ; preds = %220, %182
  %223 = phi i32 [ %221, %220 ], [ %183, %182 ]
  %224 = add nuw nsw i64 %184, 1
  %225 = sext i32 %223 to i64
  %226 = icmp slt i64 %224, %225
  br i1 %226, label %182, label %197

227:                                              ; preds = %235
  %228 = load i32, i32* %163, align 4
  br label %229

229:                                              ; preds = %227, %204
  %230 = phi i32 [ %228, %227 ], [ %205, %204 ]
  %231 = phi i32 [ %252, %227 ], [ %206, %204 ]
  %232 = add nuw nsw i64 %207, 1
  %233 = sext i32 %230 to i64
  %234 = icmp slt i64 %232, %233
  br i1 %234, label %204, label %220

235:                                              ; preds = %209, %235
  %236 = phi i64 [ 0, %209 ], [ %251, %235 ]
  %237 = mul nsw i64 %236, %153
  %238 = add nsw i64 %211, %237
  %239 = getelementptr inbounds float, float* %2, i64 %238
  %240 = load float, float* %239, align 4
  %241 = mul nsw i64 %236, %152
  %242 = add nsw i64 %213, %241
  %243 = getelementptr inbounds float, float* %4, i64 %242
  %244 = load float, float* %243, align 4
  %245 = fcmp ole float %240, %244
  %246 = trunc i64 %236 to i32
  %247 = add nsw i32 %219, %246
  %248 = sext i32 %247 to i64
  %249 = getelementptr inbounds i8, i8* %6, i64 %248
  %250 = zext i1 %245 to i8
  store i8 %250, i8* %249, align 1
  %251 = add nuw nsw i64 %236, 1
  %252 = load i32, i32* %165, align 4
  %253 = sext i32 %252 to i64
  %254 = icmp slt i64 %251, %253
  br i1 %254, label %235, label %227
}

; Function Attrs: inlinehint nounwind ssp uwtable
define linkonce_odr hidden void @_ZN6tflite13reference_ops29BroadcastComparison4DSlowImplIiXadL_ZNS0_11LessEqualFnIiEEbT_S3_EEEEvRKNS_16ComparisonParamsERKNS_12RuntimeShapeEPKS3_S9_SB_S9_Pb(%"struct.tflite::ComparisonParams"* dereferenceable(32), %"class.tflite::RuntimeShape"* dereferenceable(32), i32*, %"class.tflite::RuntimeShape"* dereferenceable(32), i32*, %"class.tflite::RuntimeShape"* dereferenceable(32), i8*) local_unnamed_addr #4 comdat {
  %8 = alloca %"struct.tflite::NdArrayDesc", align 4
  %9 = alloca %"struct.tflite::NdArrayDesc", align 4
  %10 = alloca %"struct.tflite::reference_ops::BroadcastComparison4DSlowCommon", align 8
  %11 = bitcast %"struct.tflite::reference_ops::BroadcastComparison4DSlowCommon"* %10 to i8*
  call void @llvm.lifetime.start.p0i8(i64 96, i8* nonnull %11) #8
  call void @llvm.memset.p0i8.i64(i8* nonnull align 8 %11, i8 -86, i64 96, i1 false)
  %12 = getelementptr inbounds %"class.tflite::RuntimeShape", %"class.tflite::RuntimeShape"* %5, i64 0, i32 0
  %13 = bitcast %"struct.tflite::NdArrayDesc"* %8 to i8*
  call void @llvm.lifetime.start.p0i8(i64 32, i8* nonnull %13) #8, !noalias !1112
  %14 = bitcast %"struct.tflite::NdArrayDesc"* %9 to i8*
  call void @llvm.memset.p0i8.i64(i8* nonnull align 4 %13, i8 -86, i64 32, i1 false) #8, !noalias !1112
  call void @llvm.lifetime.start.p0i8(i64 32, i8* nonnull %14) #8, !noalias !1112
  call void @llvm.memset.p0i8.i64(i8* nonnull align 4 %14, i8 -86, i64 32, i1 false) #8, !noalias !1112
  call void @_ZN6tflite35NdArrayDescsForElementwiseBroadcastILi4EEEvRKNS_12RuntimeShapeES3_PNS_11NdArrayDescIXT_EEES6_(%"class.tflite::RuntimeShape"* dereferenceable(32) %1, %"class.tflite::RuntimeShape"* dereferenceable(32) %3, %"struct.tflite::NdArrayDesc"* nonnull %8, %"struct.tflite::NdArrayDesc"* nonnull %9) #8, !noalias !1112
  %15 = getelementptr inbounds %"struct.tflite::reference_ops::BroadcastComparison4DSlowCommon", %"struct.tflite::reference_ops::BroadcastComparison4DSlowCommon"* %10, i64 0, i32 0, i32 0
  store i32 0, i32* %15, align 8, !alias.scope !1115
  %16 = load i32, i32* %12, align 8, !noalias !1115
  %17 = icmp sgt i32 %16, 4
  br i1 %17, label %18, label %19

18:                                               ; preds = %7
  call void @abort() #10, !noalias !1115
  unreachable

19:                                               ; preds = %7
  store i32 4, i32* %15, align 8, !alias.scope !1115
  %20 = sub i32 4, %16
  %21 = icmp sgt i32 %20, 0
  %22 = getelementptr inbounds %"struct.tflite::reference_ops::BroadcastComparison4DSlowCommon", %"struct.tflite::reference_ops::BroadcastComparison4DSlowCommon"* %10, i64 0, i32 0, i32 1
  br i1 %21, label %23, label %103

23:                                               ; preds = %19
  %24 = bitcast %union.anon* %22 to [5 x i32]*
  %25 = zext i32 %20 to i64
  %26 = icmp ult i32 %20, 8
  br i1 %26, label %96, label %27

27:                                               ; preds = %23
  %28 = and i64 %25, 4294967288
  %29 = add nsw i64 %28, -8
  %30 = lshr exact i64 %29, 3
  %31 = add nuw nsw i64 %30, 1
  %32 = and i64 %31, 7
  %33 = icmp ult i64 %29, 56
  br i1 %33, label %81, label %34

34:                                               ; preds = %27
  %35 = sub nsw i64 %31, %32
  br label %36

36:                                               ; preds = %36, %34
  %37 = phi i64 [ 0, %34 ], [ %78, %36 ]
  %38 = phi i64 [ %35, %34 ], [ %79, %36 ]
  %39 = getelementptr inbounds [5 x i32], [5 x i32]* %24, i64 0, i64 %37
  %40 = bitcast i32* %39 to <4 x i32>*
  store <4 x i32> <i32 1, i32 1, i32 1, i32 1>, <4 x i32>* %40, align 8, !alias.scope !1115
  %41 = getelementptr inbounds i32, i32* %39, i64 4
  %42 = bitcast i32* %41 to <4 x i32>*
  store <4 x i32> <i32 1, i32 1, i32 1, i32 1>, <4 x i32>* %42, align 8, !alias.scope !1115
  %43 = or i64 %37, 8
  %44 = getelementptr inbounds [5 x i32], [5 x i32]* %24, i64 0, i64 %43
  %45 = bitcast i32* %44 to <4 x i32>*
  store <4 x i32> <i32 1, i32 1, i32 1, i32 1>, <4 x i32>* %45, align 8, !alias.scope !1115
  %46 = getelementptr inbounds i32, i32* %44, i64 4
  %47 = bitcast i32* %46 to <4 x i32>*
  store <4 x i32> <i32 1, i32 1, i32 1, i32 1>, <4 x i32>* %47, align 8, !alias.scope !1115
  %48 = or i64 %37, 16
  %49 = getelementptr inbounds [5 x i32], [5 x i32]* %24, i64 0, i64 %48
  %50 = bitcast i32* %49 to <4 x i32>*
  store <4 x i32> <i32 1, i32 1, i32 1, i32 1>, <4 x i32>* %50, align 8, !alias.scope !1115
  %51 = getelementptr inbounds i32, i32* %49, i64 4
  %52 = bitcast i32* %51 to <4 x i32>*
  store <4 x i32> <i32 1, i32 1, i32 1, i32 1>, <4 x i32>* %52, align 8, !alias.scope !1115
  %53 = or i64 %37, 24
  %54 = getelementptr inbounds [5 x i32], [5 x i32]* %24, i64 0, i64 %53
  %55 = bitcast i32* %54 to <4 x i32>*
  store <4 x i32> <i32 1, i32 1, i32 1, i32 1>, <4 x i32>* %55, align 8, !alias.scope !1115
  %56 = getelementptr inbounds i32, i32* %54, i64 4
  %57 = bitcast i32* %56 to <4 x i32>*
  store <4 x i32> <i32 1, i32 1, i32 1, i32 1>, <4 x i32>* %57, align 8, !alias.scope !1115
  %58 = or i64 %37, 32
  %59 = getelementptr inbounds [5 x i32], [5 x i32]* %24, i64 0, i64 %58
  %60 = bitcast i32* %59 to <4 x i32>*
  store <4 x i32> <i32 1, i32 1, i32 1, i32 1>, <4 x i32>* %60, align 8, !alias.scope !1115
  %61 = getelementptr inbounds i32, i32* %59, i64 4
  %62 = bitcast i32* %61 to <4 x i32>*
  store <4 x i32> <i32 1, i32 1, i32 1, i32 1>, <4 x i32>* %62, align 8, !alias.scope !1115
  %63 = or i64 %37, 40
  %64 = getelementptr inbounds [5 x i32], [5 x i32]* %24, i64 0, i64 %63
  %65 = bitcast i32* %64 to <4 x i32>*
  store <4 x i32> <i32 1, i32 1, i32 1, i32 1>, <4 x i32>* %65, align 8, !alias.scope !1115
  %66 = getelementptr inbounds i32, i32* %64, i64 4
  %67 = bitcast i32* %66 to <4 x i32>*
  store <4 x i32> <i32 1, i32 1, i32 1, i32 1>, <4 x i32>* %67, align 8, !alias.scope !1115
  %68 = or i64 %37, 48
  %69 = getelementptr inbounds [5 x i32], [5 x i32]* %24, i64 0, i64 %68
  %70 = bitcast i32* %69 to <4 x i32>*
  store <4 x i32> <i32 1, i32 1, i32 1, i32 1>, <4 x i32>* %70, align 8, !alias.scope !1115
  %71 = getelementptr inbounds i32, i32* %69, i64 4
  %72 = bitcast i32* %71 to <4 x i32>*
  store <4 x i32> <i32 1, i32 1, i32 1, i32 1>, <4 x i32>* %72, align 8, !alias.scope !1115
  %73 = or i64 %37, 56
  %74 = getelementptr inbounds [5 x i32], [5 x i32]* %24, i64 0, i64 %73
  %75 = bitcast i32* %74 to <4 x i32>*
  store <4 x i32> <i32 1, i32 1, i32 1, i32 1>, <4 x i32>* %75, align 8, !alias.scope !1115
  %76 = getelementptr inbounds i32, i32* %74, i64 4
  %77 = bitcast i32* %76 to <4 x i32>*
  store <4 x i32> <i32 1, i32 1, i32 1, i32 1>, <4 x i32>* %77, align 8, !alias.scope !1115
  %78 = add i64 %37, 64
  %79 = add i64 %38, -8
  %80 = icmp eq i64 %79, 0
  br i1 %80, label %81, label %36, !llvm.loop !1118

81:                                               ; preds = %36, %27
  %82 = phi i64 [ 0, %27 ], [ %78, %36 ]
  %83 = icmp eq i64 %32, 0
  br i1 %83, label %94, label %84

84:                                               ; preds = %81, %84
  %85 = phi i64 [ %91, %84 ], [ %82, %81 ]
  %86 = phi i64 [ %92, %84 ], [ %32, %81 ]
  %87 = getelementptr inbounds [5 x i32], [5 x i32]* %24, i64 0, i64 %85
  %88 = bitcast i32* %87 to <4 x i32>*
  store <4 x i32> <i32 1, i32 1, i32 1, i32 1>, <4 x i32>* %88, align 8, !alias.scope !1115
  %89 = getelementptr inbounds i32, i32* %87, i64 4
  %90 = bitcast i32* %89 to <4 x i32>*
  store <4 x i32> <i32 1, i32 1, i32 1, i32 1>, <4 x i32>* %90, align 8, !alias.scope !1115
  %91 = add i64 %85, 8
  %92 = add i64 %86, -1
  %93 = icmp eq i64 %92, 0
  br i1 %93, label %94, label %84, !llvm.loop !1119

94:                                               ; preds = %84, %81
  %95 = icmp eq i64 %28, %25
  br i1 %95, label %103, label %96

96:                                               ; preds = %94, %23
  %97 = phi i64 [ 0, %23 ], [ %28, %94 ]
  br label %98

98:                                               ; preds = %96, %98
  %99 = phi i64 [ %101, %98 ], [ %97, %96 ]
  %100 = getelementptr inbounds [5 x i32], [5 x i32]* %24, i64 0, i64 %99
  store i32 1, i32* %100, align 4, !alias.scope !1115
  %101 = add nuw nsw i64 %99, 1
  %102 = icmp eq i64 %101, %25
  br i1 %102, label %103, label %98, !llvm.loop !1120

103:                                              ; preds = %98, %94, %19
  %104 = bitcast %union.anon* %22 to i32*
  %105 = sext i32 %20 to i64
  %106 = getelementptr inbounds i32, i32* %104, i64 %105
  %107 = bitcast i32* %106 to i8*
  %108 = icmp sgt i32 %16, 5
  %109 = getelementptr inbounds %"class.tflite::RuntimeShape", %"class.tflite::RuntimeShape"* %5, i64 0, i32 1
  %110 = getelementptr inbounds %union.anon, %union.anon* %109, i64 0, i32 0
  %111 = load i32*, i32** %110, align 8, !noalias !1115
  %112 = bitcast %union.anon* %109 to i32*
  %113 = select i1 %108, i32* %111, i32* %112
  %114 = bitcast i32* %113 to i8*
  %115 = sext i32 %16 to i64
  %116 = shl nsw i64 %115, 2
  call void @llvm.memcpy.p0i8.p0i8.i64(i8* align 4 %107, i8* align 4 %114, i64 %116, i1 false) #8
  %117 = getelementptr inbounds %"struct.tflite::reference_ops::BroadcastComparison4DSlowCommon", %"struct.tflite::reference_ops::BroadcastComparison4DSlowCommon"* %10, i64 0, i32 1
  %118 = bitcast %"struct.tflite::NdArrayDesc"* %117 to i8*
  call void @llvm.memcpy.p0i8.p0i8.i64(i8* align 8 %118, i8* nonnull align 4 %13, i64 32, i1 false) #8
  %119 = getelementptr inbounds %"struct.tflite::reference_ops::BroadcastComparison4DSlowCommon", %"struct.tflite::reference_ops::BroadcastComparison4DSlowCommon"* %10, i64 0, i32 2
  %120 = bitcast %"struct.tflite::NdArrayDesc"* %119 to i8*
  call void @llvm.memcpy.p0i8.p0i8.i64(i8* align 8 %120, i8* nonnull align 4 %14, i64 32, i1 false) #8
  call void @llvm.lifetime.end.p0i8(i64 32, i8* nonnull %14) #8, !noalias !1112
  call void @llvm.lifetime.end.p0i8(i64 32, i8* nonnull %13) #8, !noalias !1112
  %121 = load i32, i32* %15, align 8
  %122 = icmp sgt i32 %121, 5
  %123 = getelementptr inbounds %union.anon, %union.anon* %22, i64 0, i32 0
  %124 = load i32*, i32** %123, align 8
  %125 = select i1 %122, i32* %124, i32* %104
  %126 = load i32, i32* %125, align 4
  %127 = icmp sgt i32 %126, 0
  br i1 %127, label %128, label %175

128:                                              ; preds = %103
  %129 = bitcast %union.anon* %22 to [5 x i32]*
  %130 = getelementptr inbounds [5 x i32], [5 x i32]* %129, i64 0, i64 1
  %131 = getelementptr inbounds %"struct.tflite::reference_ops::BroadcastComparison4DSlowCommon", %"struct.tflite::reference_ops::BroadcastComparison4DSlowCommon"* %10, i64 0, i32 0, i32 1, i32 1
  %132 = bitcast [16 x i8]* %131 to i32*
  %133 = getelementptr inbounds %"struct.tflite::reference_ops::BroadcastComparison4DSlowCommon", %"struct.tflite::reference_ops::BroadcastComparison4DSlowCommon"* %10, i64 0, i32 0, i32 1, i32 1, i64 4
  %134 = bitcast i8* %133 to i32*
  %135 = getelementptr inbounds %"struct.tflite::reference_ops::BroadcastComparison4DSlowCommon", %"struct.tflite::reference_ops::BroadcastComparison4DSlowCommon"* %10, i64 0, i32 1, i32 1, i64 0
  %136 = load i32, i32* %135, align 8
  %137 = getelementptr inbounds %"struct.tflite::reference_ops::BroadcastComparison4DSlowCommon", %"struct.tflite::reference_ops::BroadcastComparison4DSlowCommon"* %10, i64 0, i32 1, i32 1, i64 1
  %138 = load i32, i32* %137, align 4
  %139 = getelementptr inbounds %"struct.tflite::reference_ops::BroadcastComparison4DSlowCommon", %"struct.tflite::reference_ops::BroadcastComparison4DSlowCommon"* %10, i64 0, i32 1, i32 1, i64 2
  %140 = load i32, i32* %139, align 8
  %141 = getelementptr inbounds %"struct.tflite::reference_ops::BroadcastComparison4DSlowCommon", %"struct.tflite::reference_ops::BroadcastComparison4DSlowCommon"* %10, i64 0, i32 1, i32 1, i64 3
  %142 = load i32, i32* %141, align 4
  %143 = getelementptr inbounds %"struct.tflite::reference_ops::BroadcastComparison4DSlowCommon", %"struct.tflite::reference_ops::BroadcastComparison4DSlowCommon"* %10, i64 0, i32 2, i32 1, i64 0
  %144 = load i32, i32* %143, align 8
  %145 = getelementptr inbounds %"struct.tflite::reference_ops::BroadcastComparison4DSlowCommon", %"struct.tflite::reference_ops::BroadcastComparison4DSlowCommon"* %10, i64 0, i32 2, i32 1, i64 1
  %146 = load i32, i32* %145, align 4
  %147 = getelementptr inbounds %"struct.tflite::reference_ops::BroadcastComparison4DSlowCommon", %"struct.tflite::reference_ops::BroadcastComparison4DSlowCommon"* %10, i64 0, i32 2, i32 1, i64 2
  %148 = load i32, i32* %147, align 8
  %149 = getelementptr inbounds %"struct.tflite::reference_ops::BroadcastComparison4DSlowCommon", %"struct.tflite::reference_ops::BroadcastComparison4DSlowCommon"* %10, i64 0, i32 2, i32 1, i64 3
  %150 = load i32, i32* %149, align 4
  %151 = getelementptr inbounds i32, i32* %104, i64 1
  %152 = sext i32 %150 to i64
  %153 = sext i32 %142 to i64
  %154 = sext i32 %148 to i64
  %155 = sext i32 %140 to i64
  %156 = sext i32 %146 to i64
  %157 = sext i32 %138 to i64
  %158 = sext i32 %144 to i64
  %159 = sext i32 %136 to i64
  %160 = getelementptr inbounds i32, i32* %124, i64 1
  %161 = select i1 %122, i32* %160, i32* %130
  %162 = getelementptr inbounds i32, i32* %124, i64 2
  %163 = select i1 %122, i32* %162, i32* %132
  %164 = getelementptr inbounds i32, i32* %124, i64 3
  %165 = select i1 %122, i32* %164, i32* %134
  br label %166

166:                                              ; preds = %128, %199
  %167 = phi i32 [ %126, %128 ], [ %200, %199 ]
  %168 = phi i64 [ 0, %128 ], [ %201, %199 ]
  %169 = load i32, i32* %161, align 4
  %170 = icmp sgt i32 %169, 0
  br i1 %170, label %171, label %199

171:                                              ; preds = %166
  %172 = mul nsw i64 %168, %159
  %173 = mul nsw i64 %168, %158
  %174 = trunc i64 %168 to i32
  br label %182

175:                                              ; preds = %199, %103
  %176 = xor i1 %122, true
  %177 = icmp eq i32* %124, null
  %178 = or i1 %177, %176
  br i1 %178, label %181, label %179

179:                                              ; preds = %175
  %180 = bitcast i32* %124 to i8*
  call void @_ZdaPv(i8* %180) #9
  br label %181

181:                                              ; preds = %175, %179
  call void @llvm.lifetime.end.p0i8(i64 96, i8* nonnull %11) #8
  ret void

182:                                              ; preds = %171, %222
  %183 = phi i32 [ %169, %171 ], [ %223, %222 ]
  %184 = phi i64 [ 0, %171 ], [ %224, %222 ]
  %185 = load i32, i32* %163, align 4
  %186 = icmp sgt i32 %185, 0
  br i1 %186, label %187, label %222

187:                                              ; preds = %182
  %188 = mul nsw i64 %184, %157
  %189 = add nsw i64 %188, %172
  %190 = mul nsw i64 %184, %156
  %191 = add nsw i64 %190, %173
  %192 = load i32, i32* %151, align 4
  %193 = mul nsw i32 %192, %174
  %194 = trunc i64 %184 to i32
  %195 = add nsw i32 %193, %194
  %196 = load i32, i32* %165, align 4
  br label %204

197:                                              ; preds = %222
  %198 = load i32, i32* %125, align 4
  br label %199

199:                                              ; preds = %197, %166
  %200 = phi i32 [ %198, %197 ], [ %167, %166 ]
  %201 = add nuw nsw i64 %168, 1
  %202 = sext i32 %200 to i64
  %203 = icmp slt i64 %201, %202
  br i1 %203, label %166, label %175

204:                                              ; preds = %187, %229
  %205 = phi i32 [ %185, %187 ], [ %230, %229 ]
  %206 = phi i32 [ %196, %187 ], [ %231, %229 ]
  %207 = phi i64 [ 0, %187 ], [ %232, %229 ]
  %208 = icmp sgt i32 %206, 0
  br i1 %208, label %209, label %229

209:                                              ; preds = %204
  %210 = mul nsw i64 %207, %155
  %211 = add nsw i64 %189, %210
  %212 = mul nsw i64 %207, %154
  %213 = add nsw i64 %191, %212
  %214 = load i32, i32* %132, align 8
  %215 = mul nsw i32 %195, %214
  %216 = trunc i64 %207 to i32
  %217 = add nsw i32 %215, %216
  %218 = load i32, i32* %134, align 4
  %219 = mul nsw i32 %217, %218
  br label %235

220:                                              ; preds = %229
  %221 = load i32, i32* %161, align 4
  br label %222

222:                                              ; preds = %220, %182
  %223 = phi i32 [ %221, %220 ], [ %183, %182 ]
  %224 = add nuw nsw i64 %184, 1
  %225 = sext i32 %223 to i64
  %226 = icmp slt i64 %224, %225
  br i1 %226, label %182, label %197

227:                                              ; preds = %235
  %228 = load i32, i32* %163, align 4
  br label %229

229:                                              ; preds = %227, %204
  %230 = phi i32 [ %228, %227 ], [ %205, %204 ]
  %231 = phi i32 [ %252, %227 ], [ %206, %204 ]
  %232 = add nuw nsw i64 %207, 1
  %233 = sext i32 %230 to i64
  %234 = icmp slt i64 %232, %233
  br i1 %234, label %204, label %220

235:                                              ; preds = %209, %235
  %236 = phi i64 [ 0, %209 ], [ %251, %235 ]
  %237 = mul nsw i64 %236, %153
  %238 = add nsw i64 %211, %237
  %239 = getelementptr inbounds i32, i32* %2, i64 %238
  %240 = load i32, i32* %239, align 4
  %241 = mul nsw i64 %236, %152
  %242 = add nsw i64 %213, %241
  %243 = getelementptr inbounds i32, i32* %4, i64 %242
  %244 = load i32, i32* %243, align 4
  %245 = icmp sle i32 %240, %244
  %246 = trunc i64 %236 to i32
  %247 = add nsw i32 %219, %246
  %248 = sext i32 %247 to i64
  %249 = getelementptr inbounds i8, i8* %6, i64 %248
  %250 = zext i1 %245 to i8
  store i8 %250, i8* %249, align 1
  %251 = add nuw nsw i64 %236, 1
  %252 = load i32, i32* %165, align 4
  %253 = sext i32 %252 to i64
  %254 = icmp slt i64 %251, %253
  br i1 %254, label %235, label %227
}

; Function Attrs: inlinehint nounwind ssp uwtable
define linkonce_odr hidden void @_ZN6tflite13reference_ops29BroadcastComparison4DSlowImplIlXadL_ZNS0_11LessEqualFnIlEEbT_S3_EEEEvRKNS_16ComparisonParamsERKNS_12RuntimeShapeEPKS3_S9_SB_S9_Pb(%"struct.tflite::ComparisonParams"* dereferenceable(32), %"class.tflite::RuntimeShape"* dereferenceable(32), i64*, %"class.tflite::RuntimeShape"* dereferenceable(32), i64*, %"class.tflite::RuntimeShape"* dereferenceable(32), i8*) local_unnamed_addr #4 comdat {
  %8 = alloca %"struct.tflite::NdArrayDesc", align 4
  %9 = alloca %"struct.tflite::NdArrayDesc", align 4
  %10 = alloca %"struct.tflite::reference_ops::BroadcastComparison4DSlowCommon", align 8
  %11 = bitcast %"struct.tflite::reference_ops::BroadcastComparison4DSlowCommon"* %10 to i8*
  call void @llvm.lifetime.start.p0i8(i64 96, i8* nonnull %11) #8
  call void @llvm.memset.p0i8.i64(i8* nonnull align 8 %11, i8 -86, i64 96, i1 false)
  %12 = getelementptr inbounds %"class.tflite::RuntimeShape", %"class.tflite::RuntimeShape"* %5, i64 0, i32 0
  %13 = bitcast %"struct.tflite::NdArrayDesc"* %8 to i8*
  call void @llvm.lifetime.start.p0i8(i64 32, i8* nonnull %13) #8, !noalias !1121
  %14 = bitcast %"struct.tflite::NdArrayDesc"* %9 to i8*
  call void @llvm.memset.p0i8.i64(i8* nonnull align 4 %13, i8 -86, i64 32, i1 false) #8, !noalias !1121
  call void @llvm.lifetime.start.p0i8(i64 32, i8* nonnull %14) #8, !noalias !1121
  call void @llvm.memset.p0i8.i64(i8* nonnull align 4 %14, i8 -86, i64 32, i1 false) #8, !noalias !1121
  call void @_ZN6tflite35NdArrayDescsForElementwiseBroadcastILi4EEEvRKNS_12RuntimeShapeES3_PNS_11NdArrayDescIXT_EEES6_(%"class.tflite::RuntimeShape"* dereferenceable(32) %1, %"class.tflite::RuntimeShape"* dereferenceable(32) %3, %"struct.tflite::NdArrayDesc"* nonnull %8, %"struct.tflite::NdArrayDesc"* nonnull %9) #8, !noalias !1121
  %15 = getelementptr inbounds %"struct.tflite::reference_ops::BroadcastComparison4DSlowCommon", %"struct.tflite::reference_ops::BroadcastComparison4DSlowCommon"* %10, i64 0, i32 0, i32 0
  store i32 0, i32* %15, align 8, !alias.scope !1124
  %16 = load i32, i32* %12, align 8, !noalias !1124
  %17 = icmp sgt i32 %16, 4
  br i1 %17, label %18, label %19

18:                                               ; preds = %7
  call void @abort() #10, !noalias !1124
  unreachable

19:                                               ; preds = %7
  store i32 4, i32* %15, align 8, !alias.scope !1124
  %20 = sub i32 4, %16
  %21 = icmp sgt i32 %20, 0
  %22 = getelementptr inbounds %"struct.tflite::reference_ops::BroadcastComparison4DSlowCommon", %"struct.tflite::reference_ops::BroadcastComparison4DSlowCommon"* %10, i64 0, i32 0, i32 1
  br i1 %21, label %23, label %103

23:                                               ; preds = %19
  %24 = bitcast %union.anon* %22 to [5 x i32]*
  %25 = zext i32 %20 to i64
  %26 = icmp ult i32 %20, 8
  br i1 %26, label %96, label %27

27:                                               ; preds = %23
  %28 = and i64 %25, 4294967288
  %29 = add nsw i64 %28, -8
  %30 = lshr exact i64 %29, 3
  %31 = add nuw nsw i64 %30, 1
  %32 = and i64 %31, 7
  %33 = icmp ult i64 %29, 56
  br i1 %33, label %81, label %34

34:                                               ; preds = %27
  %35 = sub nsw i64 %31, %32
  br label %36

36:                                               ; preds = %36, %34
  %37 = phi i64 [ 0, %34 ], [ %78, %36 ]
  %38 = phi i64 [ %35, %34 ], [ %79, %36 ]
  %39 = getelementptr inbounds [5 x i32], [5 x i32]* %24, i64 0, i64 %37
  %40 = bitcast i32* %39 to <4 x i32>*
  store <4 x i32> <i32 1, i32 1, i32 1, i32 1>, <4 x i32>* %40, align 8, !alias.scope !1124
  %41 = getelementptr inbounds i32, i32* %39, i64 4
  %42 = bitcast i32* %41 to <4 x i32>*
  store <4 x i32> <i32 1, i32 1, i32 1, i32 1>, <4 x i32>* %42, align 8, !alias.scope !1124
  %43 = or i64 %37, 8
  %44 = getelementptr inbounds [5 x i32], [5 x i32]* %24, i64 0, i64 %43
  %45 = bitcast i32* %44 to <4 x i32>*
  store <4 x i32> <i32 1, i32 1, i32 1, i32 1>, <4 x i32>* %45, align 8, !alias.scope !1124
  %46 = getelementptr inbounds i32, i32* %44, i64 4
  %47 = bitcast i32* %46 to <4 x i32>*
  store <4 x i32> <i32 1, i32 1, i32 1, i32 1>, <4 x i32>* %47, align 8, !alias.scope !1124
  %48 = or i64 %37, 16
  %49 = getelementptr inbounds [5 x i32], [5 x i32]* %24, i64 0, i64 %48
  %50 = bitcast i32* %49 to <4 x i32>*
  store <4 x i32> <i32 1, i32 1, i32 1, i32 1>, <4 x i32>* %50, align 8, !alias.scope !1124
  %51 = getelementptr inbounds i32, i32* %49, i64 4
  %52 = bitcast i32* %51 to <4 x i32>*
  store <4 x i32> <i32 1, i32 1, i32 1, i32 1>, <4 x i32>* %52, align 8, !alias.scope !1124
  %53 = or i64 %37, 24
  %54 = getelementptr inbounds [5 x i32], [5 x i32]* %24, i64 0, i64 %53
  %55 = bitcast i32* %54 to <4 x i32>*
  store <4 x i32> <i32 1, i32 1, i32 1, i32 1>, <4 x i32>* %55, align 8, !alias.scope !1124
  %56 = getelementptr inbounds i32, i32* %54, i64 4
  %57 = bitcast i32* %56 to <4 x i32>*
  store <4 x i32> <i32 1, i32 1, i32 1, i32 1>, <4 x i32>* %57, align 8, !alias.scope !1124
  %58 = or i64 %37, 32
  %59 = getelementptr inbounds [5 x i32], [5 x i32]* %24, i64 0, i64 %58
  %60 = bitcast i32* %59 to <4 x i32>*
  store <4 x i32> <i32 1, i32 1, i32 1, i32 1>, <4 x i32>* %60, align 8, !alias.scope !1124
  %61 = getelementptr inbounds i32, i32* %59, i64 4
  %62 = bitcast i32* %61 to <4 x i32>*
  store <4 x i32> <i32 1, i32 1, i32 1, i32 1>, <4 x i32>* %62, align 8, !alias.scope !1124
  %63 = or i64 %37, 40
  %64 = getelementptr inbounds [5 x i32], [5 x i32]* %24, i64 0, i64 %63
  %65 = bitcast i32* %64 to <4 x i32>*
  store <4 x i32> <i32 1, i32 1, i32 1, i32 1>, <4 x i32>* %65, align 8, !alias.scope !1124
  %66 = getelementptr inbounds i32, i32* %64, i64 4
  %67 = bitcast i32* %66 to <4 x i32>*
  store <4 x i32> <i32 1, i32 1, i32 1, i32 1>, <4 x i32>* %67, align 8, !alias.scope !1124
  %68 = or i64 %37, 48
  %69 = getelementptr inbounds [5 x i32], [5 x i32]* %24, i64 0, i64 %68
  %70 = bitcast i32* %69 to <4 x i32>*
  store <4 x i32> <i32 1, i32 1, i32 1, i32 1>, <4 x i32>* %70, align 8, !alias.scope !1124
  %71 = getelementptr inbounds i32, i32* %69, i64 4
  %72 = bitcast i32* %71 to <4 x i32>*
  store <4 x i32> <i32 1, i32 1, i32 1, i32 1>, <4 x i32>* %72, align 8, !alias.scope !1124
  %73 = or i64 %37, 56
  %74 = getelementptr inbounds [5 x i32], [5 x i32]* %24, i64 0, i64 %73
  %75 = bitcast i32* %74 to <4 x i32>*
  store <4 x i32> <i32 1, i32 1, i32 1, i32 1>, <4 x i32>* %75, align 8, !alias.scope !1124
  %76 = getelementptr inbounds i32, i32* %74, i64 4
  %77 = bitcast i32* %76 to <4 x i32>*
  store <4 x i32> <i32 1, i32 1, i32 1, i32 1>, <4 x i32>* %77, align 8, !alias.scope !1124
  %78 = add i64 %37, 64
  %79 = add i64 %38, -8
  %80 = icmp eq i64 %79, 0
  br i1 %80, label %81, label %36, !llvm.loop !1127

81:                                               ; preds = %36, %27
  %82 = phi i64 [ 0, %27 ], [ %78, %36 ]
  %83 = icmp eq i64 %32, 0
  br i1 %83, label %94, label %84

84:                                               ; preds = %81, %84
  %85 = phi i64 [ %91, %84 ], [ %82, %81 ]
  %86 = phi i64 [ %92, %84 ], [ %32, %81 ]
  %87 = getelementptr inbounds [5 x i32], [5 x i32]* %24, i64 0, i64 %85
  %88 = bitcast i32* %87 to <4 x i32>*
  store <4 x i32> <i32 1, i32 1, i32 1, i32 1>, <4 x i32>* %88, align 8, !alias.scope !1124
  %89 = getelementptr inbounds i32, i32* %87, i64 4
  %90 = bitcast i32* %89 to <4 x i32>*
  store <4 x i32> <i32 1, i32 1, i32 1, i32 1>, <4 x i32>* %90, align 8, !alias.scope !1124
  %91 = add i64 %85, 8
  %92 = add i64 %86, -1
  %93 = icmp eq i64 %92, 0
  br i1 %93, label %94, label %84, !llvm.loop !1128

94:                                               ; preds = %84, %81
  %95 = icmp eq i64 %28, %25
  br i1 %95, label %103, label %96

96:                                               ; preds = %94, %23
  %97 = phi i64 [ 0, %23 ], [ %28, %94 ]
  br label %98

98:                                               ; preds = %96, %98
  %99 = phi i64 [ %101, %98 ], [ %97, %96 ]
  %100 = getelementptr inbounds [5 x i32], [5 x i32]* %24, i64 0, i64 %99
  store i32 1, i32* %100, align 4, !alias.scope !1124
  %101 = add nuw nsw i64 %99, 1
  %102 = icmp eq i64 %101, %25
  br i1 %102, label %103, label %98, !llvm.loop !1129

103:                                              ; preds = %98, %94, %19
  %104 = bitcast %union.anon* %22 to i32*
  %105 = sext i32 %20 to i64
  %106 = getelementptr inbounds i32, i32* %104, i64 %105
  %107 = bitcast i32* %106 to i8*
  %108 = icmp sgt i32 %16, 5
  %109 = getelementptr inbounds %"class.tflite::RuntimeShape", %"class.tflite::RuntimeShape"* %5, i64 0, i32 1
  %110 = getelementptr inbounds %union.anon, %union.anon* %109, i64 0, i32 0
  %111 = load i32*, i32** %110, align 8, !noalias !1124
  %112 = bitcast %union.anon* %109 to i32*
  %113 = select i1 %108, i32* %111, i32* %112
  %114 = bitcast i32* %113 to i8*
  %115 = sext i32 %16 to i64
  %116 = shl nsw i64 %115, 2
  call void @llvm.memcpy.p0i8.p0i8.i64(i8* align 4 %107, i8* align 4 %114, i64 %116, i1 false) #8
  %117 = getelementptr inbounds %"struct.tflite::reference_ops::BroadcastComparison4DSlowCommon", %"struct.tflite::reference_ops::BroadcastComparison4DSlowCommon"* %10, i64 0, i32 1
  %118 = bitcast %"struct.tflite::NdArrayDesc"* %117 to i8*
  call void @llvm.memcpy.p0i8.p0i8.i64(i8* align 8 %118, i8* nonnull align 4 %13, i64 32, i1 false) #8
  %119 = getelementptr inbounds %"struct.tflite::reference_ops::BroadcastComparison4DSlowCommon", %"struct.tflite::reference_ops::BroadcastComparison4DSlowCommon"* %10, i64 0, i32 2
  %120 = bitcast %"struct.tflite::NdArrayDesc"* %119 to i8*
  call void @llvm.memcpy.p0i8.p0i8.i64(i8* align 8 %120, i8* nonnull align 4 %14, i64 32, i1 false) #8
  call void @llvm.lifetime.end.p0i8(i64 32, i8* nonnull %14) #8, !noalias !1121
  call void @llvm.lifetime.end.p0i8(i64 32, i8* nonnull %13) #8, !noalias !1121
  %121 = load i32, i32* %15, align 8
  %122 = icmp sgt i32 %121, 5
  %123 = getelementptr inbounds %union.anon, %union.anon* %22, i64 0, i32 0
  %124 = load i32*, i32** %123, align 8
  %125 = select i1 %122, i32* %124, i32* %104
  %126 = load i32, i32* %125, align 4
  %127 = icmp sgt i32 %126, 0
  br i1 %127, label %128, label %175

128:                                              ; preds = %103
  %129 = bitcast %union.anon* %22 to [5 x i32]*
  %130 = getelementptr inbounds [5 x i32], [5 x i32]* %129, i64 0, i64 1
  %131 = getelementptr inbounds %"struct.tflite::reference_ops::BroadcastComparison4DSlowCommon", %"struct.tflite::reference_ops::BroadcastComparison4DSlowCommon"* %10, i64 0, i32 0, i32 1, i32 1
  %132 = bitcast [16 x i8]* %131 to i32*
  %133 = getelementptr inbounds %"struct.tflite::reference_ops::BroadcastComparison4DSlowCommon", %"struct.tflite::reference_ops::BroadcastComparison4DSlowCommon"* %10, i64 0, i32 0, i32 1, i32 1, i64 4
  %134 = bitcast i8* %133 to i32*
  %135 = getelementptr inbounds %"struct.tflite::reference_ops::BroadcastComparison4DSlowCommon", %"struct.tflite::reference_ops::BroadcastComparison4DSlowCommon"* %10, i64 0, i32 1, i32 1, i64 0
  %136 = load i32, i32* %135, align 8
  %137 = getelementptr inbounds %"struct.tflite::reference_ops::BroadcastComparison4DSlowCommon", %"struct.tflite::reference_ops::BroadcastComparison4DSlowCommon"* %10, i64 0, i32 1, i32 1, i64 1
  %138 = load i32, i32* %137, align 4
  %139 = getelementptr inbounds %"struct.tflite::reference_ops::BroadcastComparison4DSlowCommon", %"struct.tflite::reference_ops::BroadcastComparison4DSlowCommon"* %10, i64 0, i32 1, i32 1, i64 2
  %140 = load i32, i32* %139, align 8
  %141 = getelementptr inbounds %"struct.tflite::reference_ops::BroadcastComparison4DSlowCommon", %"struct.tflite::reference_ops::BroadcastComparison4DSlowCommon"* %10, i64 0, i32 1, i32 1, i64 3
  %142 = load i32, i32* %141, align 4
  %143 = getelementptr inbounds %"struct.tflite::reference_ops::BroadcastComparison4DSlowCommon", %"struct.tflite::reference_ops::BroadcastComparison4DSlowCommon"* %10, i64 0, i32 2, i32 1, i64 0
  %144 = load i32, i32* %143, align 8
  %145 = getelementptr inbounds %"struct.tflite::reference_ops::BroadcastComparison4DSlowCommon", %"struct.tflite::reference_ops::BroadcastComparison4DSlowCommon"* %10, i64 0, i32 2, i32 1, i64 1
  %146 = load i32, i32* %145, align 4
  %147 = getelementptr inbounds %"struct.tflite::reference_ops::BroadcastComparison4DSlowCommon", %"struct.tflite::reference_ops::BroadcastComparison4DSlowCommon"* %10, i64 0, i32 2, i32 1, i64 2
  %148 = load i32, i32* %147, align 8
  %149 = getelementptr inbounds %"struct.tflite::reference_ops::BroadcastComparison4DSlowCommon", %"struct.tflite::reference_ops::BroadcastComparison4DSlowCommon"* %10, i64 0, i32 2, i32 1, i64 3
  %150 = load i32, i32* %149, align 4
  %151 = getelementptr inbounds i32, i32* %104, i64 1
  %152 = sext i32 %150 to i64
  %153 = sext i32 %142 to i64
  %154 = sext i32 %148 to i64
  %155 = sext i32 %140 to i64
  %156 = sext i32 %146 to i64
  %157 = sext i32 %138 to i64
  %158 = sext i32 %144 to i64
  %159 = sext i32 %136 to i64
  %160 = getelementptr inbounds i32, i32* %124, i64 1
  %161 = select i1 %122, i32* %160, i32* %130
  %162 = getelementptr inbounds i32, i32* %124, i64 2
  %163 = select i1 %122, i32* %162, i32* %132
  %164 = getelementptr inbounds i32, i32* %124, i64 3
  %165 = select i1 %122, i32* %164, i32* %134
  br label %166

166:                                              ; preds = %128, %199
  %167 = phi i32 [ %126, %128 ], [ %200, %199 ]
  %168 = phi i64 [ 0, %128 ], [ %201, %199 ]
  %169 = load i32, i32* %161, align 4
  %170 = icmp sgt i32 %169, 0
  br i1 %170, label %171, label %199

171:                                              ; preds = %166
  %172 = mul nsw i64 %168, %159
  %173 = mul nsw i64 %168, %158
  %174 = trunc i64 %168 to i32
  br label %182

175:                                              ; preds = %199, %103
  %176 = xor i1 %122, true
  %177 = icmp eq i32* %124, null
  %178 = or i1 %177, %176
  br i1 %178, label %181, label %179

179:                                              ; preds = %175
  %180 = bitcast i32* %124 to i8*
  call void @_ZdaPv(i8* %180) #9
  br label %181

181:                                              ; preds = %175, %179
  call void @llvm.lifetime.end.p0i8(i64 96, i8* nonnull %11) #8
  ret void

182:                                              ; preds = %171, %222
  %183 = phi i32 [ %169, %171 ], [ %223, %222 ]
  %184 = phi i64 [ 0, %171 ], [ %224, %222 ]
  %185 = load i32, i32* %163, align 4
  %186 = icmp sgt i32 %185, 0
  br i1 %186, label %187, label %222

187:                                              ; preds = %182
  %188 = mul nsw i64 %184, %157
  %189 = add nsw i64 %188, %172
  %190 = mul nsw i64 %184, %156
  %191 = add nsw i64 %190, %173
  %192 = load i32, i32* %151, align 4
  %193 = mul nsw i32 %192, %174
  %194 = trunc i64 %184 to i32
  %195 = add nsw i32 %193, %194
  %196 = load i32, i32* %165, align 4
  br label %204

197:                                              ; preds = %222
  %198 = load i32, i32* %125, align 4
  br label %199

199:                                              ; preds = %197, %166
  %200 = phi i32 [ %198, %197 ], [ %167, %166 ]
  %201 = add nuw nsw i64 %168, 1
  %202 = sext i32 %200 to i64
  %203 = icmp slt i64 %201, %202
  br i1 %203, label %166, label %175

204:                                              ; preds = %187, %229
  %205 = phi i32 [ %185, %187 ], [ %230, %229 ]
  %206 = phi i32 [ %196, %187 ], [ %231, %229 ]
  %207 = phi i64 [ 0, %187 ], [ %232, %229 ]
  %208 = icmp sgt i32 %206, 0
  br i1 %208, label %209, label %229

209:                                              ; preds = %204
  %210 = mul nsw i64 %207, %155
  %211 = add nsw i64 %189, %210
  %212 = mul nsw i64 %207, %154
  %213 = add nsw i64 %191, %212
  %214 = load i32, i32* %132, align 8
  %215 = mul nsw i32 %195, %214
  %216 = trunc i64 %207 to i32
  %217 = add nsw i32 %215, %216
  %218 = load i32, i32* %134, align 4
  %219 = mul nsw i32 %217, %218
  br label %235

220:                                              ; preds = %229
  %221 = load i32, i32* %161, align 4
  br label %222

222:                                              ; preds = %220, %182
  %223 = phi i32 [ %221, %220 ], [ %183, %182 ]
  %224 = add nuw nsw i64 %184, 1
  %225 = sext i32 %223 to i64
  %226 = icmp slt i64 %224, %225
  br i1 %226, label %182, label %197

227:                                              ; preds = %235
  %228 = load i32, i32* %163, align 4
  br label %229

229:                                              ; preds = %227, %204
  %230 = phi i32 [ %228, %227 ], [ %205, %204 ]
  %231 = phi i32 [ %252, %227 ], [ %206, %204 ]
  %232 = add nuw nsw i64 %207, 1
  %233 = sext i32 %230 to i64
  %234 = icmp slt i64 %232, %233
  br i1 %234, label %204, label %220

235:                                              ; preds = %209, %235
  %236 = phi i64 [ 0, %209 ], [ %251, %235 ]
  %237 = mul nsw i64 %236, %153
  %238 = add nsw i64 %211, %237
  %239 = getelementptr inbounds i64, i64* %2, i64 %238
  %240 = load i64, i64* %239, align 8
  %241 = mul nsw i64 %236, %152
  %242 = add nsw i64 %213, %241
  %243 = getelementptr inbounds i64, i64* %4, i64 %242
  %244 = load i64, i64* %243, align 8
  %245 = icmp sle i64 %240, %244
  %246 = trunc i64 %236 to i32
  %247 = add nsw i32 %219, %246
  %248 = sext i32 %247 to i64
  %249 = getelementptr inbounds i8, i8* %6, i64 %248
  %250 = zext i1 %245 to i8
  store i8 %250, i8* %249, align 1
  %251 = add nuw nsw i64 %236, 1
  %252 = load i32, i32* %165, align 4
  %253 = sext i32 %252 to i64
  %254 = icmp slt i64 %251, %253
  br i1 %254, label %235, label %227
}

; Function Attrs: inlinehint nounwind ssp uwtable
define linkonce_odr hidden void @_ZN6tflite13reference_ops36BroadcastComparison4DSlowWithScalingIhXadL_ZNS0_11LessEqualFnIiEEbT_S3_EEEEvRKNS_16ComparisonParamsERKNS_12RuntimeShapeEPKS3_S9_SB_S9_Pb(%"struct.tflite::ComparisonParams"* dereferenceable(32), %"class.tflite::RuntimeShape"* dereferenceable(32), i8*, %"class.tflite::RuntimeShape"* dereferenceable(32), i8*, %"class.tflite::RuntimeShape"* dereferenceable(32), i8*) local_unnamed_addr #4 comdat {
  %8 = alloca %"struct.tflite::NdArrayDesc", align 4
  %9 = alloca %"struct.tflite::NdArrayDesc", align 4
  %10 = alloca %"struct.tflite::reference_ops::BroadcastComparison4DSlowCommon", align 8
  %11 = bitcast %"struct.tflite::reference_ops::BroadcastComparison4DSlowCommon"* %10 to i8*
  call void @llvm.lifetime.start.p0i8(i64 96, i8* nonnull %11) #8
  call void @llvm.memset.p0i8.i64(i8* nonnull align 8 %11, i8 -86, i64 96, i1 false)
  %12 = getelementptr inbounds %"class.tflite::RuntimeShape", %"class.tflite::RuntimeShape"* %5, i64 0, i32 0
  %13 = bitcast %"struct.tflite::NdArrayDesc"* %8 to i8*
  call void @llvm.lifetime.start.p0i8(i64 32, i8* nonnull %13) #8, !noalias !1130
  %14 = bitcast %"struct.tflite::NdArrayDesc"* %9 to i8*
  call void @llvm.memset.p0i8.i64(i8* nonnull align 4 %13, i8 -86, i64 32, i1 false) #8, !noalias !1130
  call void @llvm.lifetime.start.p0i8(i64 32, i8* nonnull %14) #8, !noalias !1130
  call void @llvm.memset.p0i8.i64(i8* nonnull align 4 %14, i8 -86, i64 32, i1 false) #8, !noalias !1130
  call void @_ZN6tflite35NdArrayDescsForElementwiseBroadcastILi4EEEvRKNS_12RuntimeShapeES3_PNS_11NdArrayDescIXT_EEES6_(%"class.tflite::RuntimeShape"* dereferenceable(32) %1, %"class.tflite::RuntimeShape"* dereferenceable(32) %3, %"struct.tflite::NdArrayDesc"* nonnull %8, %"struct.tflite::NdArrayDesc"* nonnull %9) #8, !noalias !1130
  %15 = getelementptr inbounds %"struct.tflite::reference_ops::BroadcastComparison4DSlowCommon", %"struct.tflite::reference_ops::BroadcastComparison4DSlowCommon"* %10, i64 0, i32 0, i32 0
  store i32 0, i32* %15, align 8, !alias.scope !1133
  %16 = load i32, i32* %12, align 8, !noalias !1133
  %17 = icmp sgt i32 %16, 4
  br i1 %17, label %18, label %19

18:                                               ; preds = %7
  call void @abort() #10, !noalias !1133
  unreachable

19:                                               ; preds = %7
  store i32 4, i32* %15, align 8, !alias.scope !1133
  %20 = sub i32 4, %16
  %21 = icmp sgt i32 %20, 0
  %22 = getelementptr inbounds %"struct.tflite::reference_ops::BroadcastComparison4DSlowCommon", %"struct.tflite::reference_ops::BroadcastComparison4DSlowCommon"* %10, i64 0, i32 0, i32 1
  br i1 %21, label %23, label %103

23:                                               ; preds = %19
  %24 = bitcast %union.anon* %22 to [5 x i32]*
  %25 = zext i32 %20 to i64
  %26 = icmp ult i32 %20, 8
  br i1 %26, label %96, label %27

27:                                               ; preds = %23
  %28 = and i64 %25, 4294967288
  %29 = add nsw i64 %28, -8
  %30 = lshr exact i64 %29, 3
  %31 = add nuw nsw i64 %30, 1
  %32 = and i64 %31, 7
  %33 = icmp ult i64 %29, 56
  br i1 %33, label %81, label %34

34:                                               ; preds = %27
  %35 = sub nsw i64 %31, %32
  br label %36

36:                                               ; preds = %36, %34
  %37 = phi i64 [ 0, %34 ], [ %78, %36 ]
  %38 = phi i64 [ %35, %34 ], [ %79, %36 ]
  %39 = getelementptr inbounds [5 x i32], [5 x i32]* %24, i64 0, i64 %37
  %40 = bitcast i32* %39 to <4 x i32>*
  store <4 x i32> <i32 1, i32 1, i32 1, i32 1>, <4 x i32>* %40, align 8, !alias.scope !1133
  %41 = getelementptr inbounds i32, i32* %39, i64 4
  %42 = bitcast i32* %41 to <4 x i32>*
  store <4 x i32> <i32 1, i32 1, i32 1, i32 1>, <4 x i32>* %42, align 8, !alias.scope !1133
  %43 = or i64 %37, 8
  %44 = getelementptr inbounds [5 x i32], [5 x i32]* %24, i64 0, i64 %43
  %45 = bitcast i32* %44 to <4 x i32>*
  store <4 x i32> <i32 1, i32 1, i32 1, i32 1>, <4 x i32>* %45, align 8, !alias.scope !1133
  %46 = getelementptr inbounds i32, i32* %44, i64 4
  %47 = bitcast i32* %46 to <4 x i32>*
  store <4 x i32> <i32 1, i32 1, i32 1, i32 1>, <4 x i32>* %47, align 8, !alias.scope !1133
  %48 = or i64 %37, 16
  %49 = getelementptr inbounds [5 x i32], [5 x i32]* %24, i64 0, i64 %48
  %50 = bitcast i32* %49 to <4 x i32>*
  store <4 x i32> <i32 1, i32 1, i32 1, i32 1>, <4 x i32>* %50, align 8, !alias.scope !1133
  %51 = getelementptr inbounds i32, i32* %49, i64 4
  %52 = bitcast i32* %51 to <4 x i32>*
  store <4 x i32> <i32 1, i32 1, i32 1, i32 1>, <4 x i32>* %52, align 8, !alias.scope !1133
  %53 = or i64 %37, 24
  %54 = getelementptr inbounds [5 x i32], [5 x i32]* %24, i64 0, i64 %53
  %55 = bitcast i32* %54 to <4 x i32>*
  store <4 x i32> <i32 1, i32 1, i32 1, i32 1>, <4 x i32>* %55, align 8, !alias.scope !1133
  %56 = getelementptr inbounds i32, i32* %54, i64 4
  %57 = bitcast i32* %56 to <4 x i32>*
  store <4 x i32> <i32 1, i32 1, i32 1, i32 1>, <4 x i32>* %57, align 8, !alias.scope !1133
  %58 = or i64 %37, 32
  %59 = getelementptr inbounds [5 x i32], [5 x i32]* %24, i64 0, i64 %58
  %60 = bitcast i32* %59 to <4 x i32>*
  store <4 x i32> <i32 1, i32 1, i32 1, i32 1>, <4 x i32>* %60, align 8, !alias.scope !1133
  %61 = getelementptr inbounds i32, i32* %59, i64 4
  %62 = bitcast i32* %61 to <4 x i32>*
  store <4 x i32> <i32 1, i32 1, i32 1, i32 1>, <4 x i32>* %62, align 8, !alias.scope !1133
  %63 = or i64 %37, 40
  %64 = getelementptr inbounds [5 x i32], [5 x i32]* %24, i64 0, i64 %63
  %65 = bitcast i32* %64 to <4 x i32>*
  store <4 x i32> <i32 1, i32 1, i32 1, i32 1>, <4 x i32>* %65, align 8, !alias.scope !1133
  %66 = getelementptr inbounds i32, i32* %64, i64 4
  %67 = bitcast i32* %66 to <4 x i32>*
  store <4 x i32> <i32 1, i32 1, i32 1, i32 1>, <4 x i32>* %67, align 8, !alias.scope !1133
  %68 = or i64 %37, 48
  %69 = getelementptr inbounds [5 x i32], [5 x i32]* %24, i64 0, i64 %68
  %70 = bitcast i32* %69 to <4 x i32>*
  store <4 x i32> <i32 1, i32 1, i32 1, i32 1>, <4 x i32>* %70, align 8, !alias.scope !1133
  %71 = getelementptr inbounds i32, i32* %69, i64 4
  %72 = bitcast i32* %71 to <4 x i32>*
  store <4 x i32> <i32 1, i32 1, i32 1, i32 1>, <4 x i32>* %72, align 8, !alias.scope !1133
  %73 = or i64 %37, 56
  %74 = getelementptr inbounds [5 x i32], [5 x i32]* %24, i64 0, i64 %73
  %75 = bitcast i32* %74 to <4 x i32>*
  store <4 x i32> <i32 1, i32 1, i32 1, i32 1>, <4 x i32>* %75, align 8, !alias.scope !1133
  %76 = getelementptr inbounds i32, i32* %74, i64 4
  %77 = bitcast i32* %76 to <4 x i32>*
  store <4 x i32> <i32 1, i32 1, i32 1, i32 1>, <4 x i32>* %77, align 8, !alias.scope !1133
  %78 = add i64 %37, 64
  %79 = add i64 %38, -8
  %80 = icmp eq i64 %79, 0
  br i1 %80, label %81, label %36, !llvm.loop !1136

81:                                               ; preds = %36, %27
  %82 = phi i64 [ 0, %27 ], [ %78, %36 ]
  %83 = icmp eq i64 %32, 0
  br i1 %83, label %94, label %84

84:                                               ; preds = %81, %84
  %85 = phi i64 [ %91, %84 ], [ %82, %81 ]
  %86 = phi i64 [ %92, %84 ], [ %32, %81 ]
  %87 = getelementptr inbounds [5 x i32], [5 x i32]* %24, i64 0, i64 %85
  %88 = bitcast i32* %87 to <4 x i32>*
  store <4 x i32> <i32 1, i32 1, i32 1, i32 1>, <4 x i32>* %88, align 8, !alias.scope !1133
  %89 = getelementptr inbounds i32, i32* %87, i64 4
  %90 = bitcast i32* %89 to <4 x i32>*
  store <4 x i32> <i32 1, i32 1, i32 1, i32 1>, <4 x i32>* %90, align 8, !alias.scope !1133
  %91 = add i64 %85, 8
  %92 = add i64 %86, -1
  %93 = icmp eq i64 %92, 0
  br i1 %93, label %94, label %84, !llvm.loop !1137

94:                                               ; preds = %84, %81
  %95 = icmp eq i64 %28, %25
  br i1 %95, label %103, label %96

96:                                               ; preds = %94, %23
  %97 = phi i64 [ 0, %23 ], [ %28, %94 ]
  br label %98

98:                                               ; preds = %96, %98
  %99 = phi i64 [ %101, %98 ], [ %97, %96 ]
  %100 = getelementptr inbounds [5 x i32], [5 x i32]* %24, i64 0, i64 %99
  store i32 1, i32* %100, align 4, !alias.scope !1133
  %101 = add nuw nsw i64 %99, 1
  %102 = icmp eq i64 %101, %25
  br i1 %102, label %103, label %98, !llvm.loop !1138

103:                                              ; preds = %98, %94, %19
  %104 = bitcast %union.anon* %22 to i32*
  %105 = sext i32 %20 to i64
  %106 = getelementptr inbounds i32, i32* %104, i64 %105
  %107 = bitcast i32* %106 to i8*
  %108 = icmp sgt i32 %16, 5
  %109 = getelementptr inbounds %"class.tflite::RuntimeShape", %"class.tflite::RuntimeShape"* %5, i64 0, i32 1
  %110 = getelementptr inbounds %union.anon, %union.anon* %109, i64 0, i32 0
  %111 = load i32*, i32** %110, align 8, !noalias !1133
  %112 = bitcast %union.anon* %109 to i32*
  %113 = select i1 %108, i32* %111, i32* %112
  %114 = bitcast i32* %113 to i8*
  %115 = sext i32 %16 to i64
  %116 = shl nsw i64 %115, 2
  call void @llvm.memcpy.p0i8.p0i8.i64(i8* align 4 %107, i8* align 4 %114, i64 %116, i1 false) #8
  %117 = getelementptr inbounds %"struct.tflite::reference_ops::BroadcastComparison4DSlowCommon", %"struct.tflite::reference_ops::BroadcastComparison4DSlowCommon"* %10, i64 0, i32 1
  %118 = bitcast %"struct.tflite::NdArrayDesc"* %117 to i8*
  call void @llvm.memcpy.p0i8.p0i8.i64(i8* align 8 %118, i8* nonnull align 4 %13, i64 32, i1 false) #8
  %119 = getelementptr inbounds %"struct.tflite::reference_ops::BroadcastComparison4DSlowCommon", %"struct.tflite::reference_ops::BroadcastComparison4DSlowCommon"* %10, i64 0, i32 2
  %120 = bitcast %"struct.tflite::NdArrayDesc"* %119 to i8*
  call void @llvm.memcpy.p0i8.p0i8.i64(i8* align 8 %120, i8* nonnull align 4 %14, i64 32, i1 false) #8
  call void @llvm.lifetime.end.p0i8(i64 32, i8* nonnull %14) #8, !noalias !1130
  call void @llvm.lifetime.end.p0i8(i64 32, i8* nonnull %13) #8, !noalias !1130
  %121 = getelementptr inbounds %"struct.tflite::ComparisonParams", %"struct.tflite::ComparisonParams"* %0, i64 0, i32 0
  %122 = load i32, i32* %121, align 4
  %123 = getelementptr inbounds %"struct.tflite::ComparisonParams", %"struct.tflite::ComparisonParams"* %0, i64 0, i32 1
  %124 = load i32, i32* %123, align 4
  %125 = getelementptr inbounds %"struct.tflite::ComparisonParams", %"struct.tflite::ComparisonParams"* %0, i64 0, i32 2
  %126 = load i32, i32* %125, align 4
  %127 = getelementptr inbounds %"struct.tflite::ComparisonParams", %"struct.tflite::ComparisonParams"* %0, i64 0, i32 4
  %128 = load i32, i32* %127, align 4
  %129 = getelementptr inbounds %"struct.tflite::ComparisonParams", %"struct.tflite::ComparisonParams"* %0, i64 0, i32 5
  %130 = load i32, i32* %129, align 4
  %131 = load i32, i32* %15, align 8
  %132 = icmp sgt i32 %131, 5
  %133 = getelementptr inbounds %union.anon, %union.anon* %22, i64 0, i32 0
  %134 = load i32*, i32** %133, align 8
  %135 = select i1 %132, i32* %134, i32* %104
  %136 = load i32, i32* %135, align 4
  %137 = icmp sgt i32 %136, 0
  br i1 %137, label %138, label %205

138:                                              ; preds = %103
  %139 = getelementptr inbounds %"struct.tflite::ComparisonParams", %"struct.tflite::ComparisonParams"* %0, i64 0, i32 6
  %140 = load i32, i32* %139, align 4
  %141 = getelementptr inbounds %"struct.tflite::ComparisonParams", %"struct.tflite::ComparisonParams"* %0, i64 0, i32 3
  %142 = load i32, i32* %141, align 4
  %143 = bitcast %union.anon* %22 to [5 x i32]*
  %144 = getelementptr inbounds [5 x i32], [5 x i32]* %143, i64 0, i64 1
  %145 = getelementptr inbounds %"struct.tflite::reference_ops::BroadcastComparison4DSlowCommon", %"struct.tflite::reference_ops::BroadcastComparison4DSlowCommon"* %10, i64 0, i32 0, i32 1, i32 1
  %146 = bitcast [16 x i8]* %145 to i32*
  %147 = getelementptr inbounds %"struct.tflite::reference_ops::BroadcastComparison4DSlowCommon", %"struct.tflite::reference_ops::BroadcastComparison4DSlowCommon"* %10, i64 0, i32 0, i32 1, i32 1, i64 4
  %148 = bitcast i8* %147 to i32*
  %149 = getelementptr inbounds %"struct.tflite::reference_ops::BroadcastComparison4DSlowCommon", %"struct.tflite::reference_ops::BroadcastComparison4DSlowCommon"* %10, i64 0, i32 1, i32 1, i64 0
  %150 = load i32, i32* %149, align 8
  %151 = getelementptr inbounds %"struct.tflite::reference_ops::BroadcastComparison4DSlowCommon", %"struct.tflite::reference_ops::BroadcastComparison4DSlowCommon"* %10, i64 0, i32 1, i32 1, i64 1
  %152 = load i32, i32* %151, align 4
  %153 = getelementptr inbounds %"struct.tflite::reference_ops::BroadcastComparison4DSlowCommon", %"struct.tflite::reference_ops::BroadcastComparison4DSlowCommon"* %10, i64 0, i32 1, i32 1, i64 2
  %154 = load i32, i32* %153, align 8
  %155 = getelementptr inbounds %"struct.tflite::reference_ops::BroadcastComparison4DSlowCommon", %"struct.tflite::reference_ops::BroadcastComparison4DSlowCommon"* %10, i64 0, i32 1, i32 1, i64 3
  %156 = load i32, i32* %155, align 4
  %157 = getelementptr inbounds %"struct.tflite::reference_ops::BroadcastComparison4DSlowCommon", %"struct.tflite::reference_ops::BroadcastComparison4DSlowCommon"* %10, i64 0, i32 2, i32 1, i64 0
  %158 = load i32, i32* %157, align 8
  %159 = getelementptr inbounds %"struct.tflite::reference_ops::BroadcastComparison4DSlowCommon", %"struct.tflite::reference_ops::BroadcastComparison4DSlowCommon"* %10, i64 0, i32 2, i32 1, i64 1
  %160 = load i32, i32* %159, align 4
  %161 = getelementptr inbounds %"struct.tflite::reference_ops::BroadcastComparison4DSlowCommon", %"struct.tflite::reference_ops::BroadcastComparison4DSlowCommon"* %10, i64 0, i32 2, i32 1, i64 2
  %162 = load i32, i32* %161, align 8
  %163 = getelementptr inbounds %"struct.tflite::reference_ops::BroadcastComparison4DSlowCommon", %"struct.tflite::reference_ops::BroadcastComparison4DSlowCommon"* %10, i64 0, i32 2, i32 1, i64 3
  %164 = load i32, i32* %163, align 4
  %165 = sext i32 %126 to i64
  %166 = sub nsw i32 0, %142
  %167 = zext i32 %166 to i64
  %168 = shl nsw i64 -1, %167
  %169 = trunc i64 %168 to i32
  %170 = xor i32 %169, -1
  %171 = ashr i32 %170, 1
  %172 = sext i32 %130 to i64
  %173 = sub nsw i32 0, %140
  %174 = zext i32 %173 to i64
  %175 = shl nsw i64 -1, %174
  %176 = trunc i64 %175 to i32
  %177 = xor i32 %176, -1
  %178 = ashr i32 %177, 1
  %179 = getelementptr inbounds i32, i32* %104, i64 1
  %180 = sext i32 %164 to i64
  %181 = sext i32 %156 to i64
  %182 = sext i32 %162 to i64
  %183 = sext i32 %154 to i64
  %184 = sext i32 %160 to i64
  %185 = sext i32 %152 to i64
  %186 = sext i32 %158 to i64
  %187 = sext i32 %150 to i64
  %188 = getelementptr inbounds i32, i32* %134, i64 1
  %189 = select i1 %132, i32* %188, i32* %144
  %190 = getelementptr inbounds i32, i32* %134, i64 2
  %191 = select i1 %132, i32* %190, i32* %146
  %192 = getelementptr inbounds i32, i32* %134, i64 3
  %193 = select i1 %132, i32* %192, i32* %148
  %194 = icmp eq i32 %126, -2147483648
  %195 = icmp eq i32 %130, -2147483648
  br label %196

196:                                              ; preds = %138, %229
  %197 = phi i32 [ %136, %138 ], [ %230, %229 ]
  %198 = phi i64 [ 0, %138 ], [ %231, %229 ]
  %199 = load i32, i32* %189, align 4
  %200 = icmp sgt i32 %199, 0
  br i1 %200, label %201, label %229

201:                                              ; preds = %196
  %202 = mul nsw i64 %198, %187
  %203 = mul nsw i64 %198, %186
  %204 = trunc i64 %198 to i32
  br label %212

205:                                              ; preds = %229, %103
  %206 = xor i1 %132, true
  %207 = icmp eq i32* %134, null
  %208 = or i1 %207, %206
  br i1 %208, label %211, label %209

209:                                              ; preds = %205
  %210 = bitcast i32* %134 to i8*
  call void @_ZdaPv(i8* %210) #9
  br label %211

211:                                              ; preds = %205, %209
  call void @llvm.lifetime.end.p0i8(i64 96, i8* nonnull %11) #8
  ret void

212:                                              ; preds = %201, %250
  %213 = phi i32 [ %199, %201 ], [ %251, %250 ]
  %214 = phi i64 [ 0, %201 ], [ %252, %250 ]
  %215 = load i32, i32* %191, align 4
  %216 = icmp sgt i32 %215, 0
  br i1 %216, label %217, label %250

217:                                              ; preds = %212
  %218 = mul nsw i64 %214, %185
  %219 = add nsw i64 %218, %202
  %220 = mul nsw i64 %214, %184
  %221 = add nsw i64 %220, %203
  %222 = load i32, i32* %179, align 4
  %223 = mul nsw i32 %222, %204
  %224 = trunc i64 %214 to i32
  %225 = add nsw i32 %223, %224
  %226 = load i32, i32* %193, align 4
  br label %234

227:                                              ; preds = %250
  %228 = load i32, i32* %135, align 4
  br label %229

229:                                              ; preds = %227, %196
  %230 = phi i32 [ %228, %227 ], [ %197, %196 ]
  %231 = add nuw nsw i64 %198, 1
  %232 = sext i32 %230 to i64
  %233 = icmp slt i64 %231, %232
  br i1 %233, label %196, label %205

234:                                              ; preds = %217, %257
  %235 = phi i32 [ %215, %217 ], [ %258, %257 ]
  %236 = phi i32 [ %226, %217 ], [ %259, %257 ]
  %237 = phi i64 [ 0, %217 ], [ %260, %257 ]
  %238 = icmp sgt i32 %236, 0
  br i1 %238, label %239, label %257

239:                                              ; preds = %234
  %240 = mul nsw i64 %237, %183
  %241 = add nsw i64 %219, %240
  %242 = mul nsw i64 %237, %182
  %243 = add nsw i64 %221, %242
  %244 = load i32, i32* %146, align 8
  %245 = mul nsw i32 %225, %244
  %246 = trunc i64 %237 to i32
  %247 = add nsw i32 %245, %246
  br label %263

248:                                              ; preds = %257
  %249 = load i32, i32* %189, align 4
  br label %250

250:                                              ; preds = %248, %212
  %251 = phi i32 [ %249, %248 ], [ %213, %212 ]
  %252 = add nuw nsw i64 %214, 1
  %253 = sext i32 %251 to i64
  %254 = icmp slt i64 %252, %253
  br i1 %254, label %212, label %227

255:                                              ; preds = %312
  %256 = load i32, i32* %191, align 4
  br label %257

257:                                              ; preds = %255, %234
  %258 = phi i32 [ %256, %255 ], [ %235, %234 ]
  %259 = phi i32 [ %330, %255 ], [ %236, %234 ]
  %260 = add nuw nsw i64 %237, 1
  %261 = sext i32 %258 to i64
  %262 = icmp slt i64 %260, %261
  br i1 %262, label %234, label %248

263:                                              ; preds = %239, %312
  %264 = phi i64 [ 0, %239 ], [ %329, %312 ]
  %265 = mul nsw i64 %264, %181
  %266 = add nsw i64 %241, %265
  %267 = getelementptr inbounds i8, i8* %2, i64 %266
  %268 = load i8, i8* %267, align 1
  %269 = zext i8 %268 to i32
  %270 = add nsw i32 %124, %269
  %271 = mul nsw i64 %264, %180
  %272 = add nsw i64 %243, %271
  %273 = getelementptr inbounds i8, i8* %4, i64 %272
  %274 = load i8, i8* %273, align 1
  %275 = zext i8 %274 to i32
  %276 = add nsw i32 %128, %275
  %277 = shl i32 %270, %122
  %278 = shl i32 %276, %122
  %279 = icmp eq i32 %277, %126
  br i1 %279, label %282, label %280

280:                                              ; preds = %263
  %281 = sext i32 %277 to i64
  br label %283

282:                                              ; preds = %263
  br i1 %194, label %291, label %283

283:                                              ; preds = %282, %280
  %284 = phi i64 [ %281, %280 ], [ %165, %282 ]
  %285 = mul nsw i64 %284, %165
  %286 = icmp sgt i64 %285, -1
  %287 = select i1 %286, i64 1073741824, i64 -1073741823
  %288 = add nsw i64 %287, %285
  %289 = sdiv i64 %288, 2147483648
  %290 = trunc i64 %289 to i32
  br label %291

291:                                              ; preds = %282, %283
  %292 = phi i32 [ %290, %283 ], [ 2147483647, %282 ]
  %293 = and i32 %292, %170
  %294 = lshr i32 %292, 31
  %295 = add nsw i32 %294, %171
  %296 = ashr i32 %292, %166
  %297 = icmp sgt i32 %293, %295
  %298 = zext i1 %297 to i32
  %299 = add nsw i32 %296, %298
  %300 = icmp eq i32 %278, %130
  br i1 %300, label %303, label %301

301:                                              ; preds = %291
  %302 = sext i32 %278 to i64
  br label %304

303:                                              ; preds = %291
  br i1 %195, label %312, label %304

304:                                              ; preds = %303, %301
  %305 = phi i64 [ %302, %301 ], [ %172, %303 ]
  %306 = mul nsw i64 %305, %172
  %307 = icmp sgt i64 %306, -1
  %308 = select i1 %307, i64 1073741824, i64 -1073741823
  %309 = add nsw i64 %308, %306
  %310 = sdiv i64 %309, 2147483648
  %311 = trunc i64 %310 to i32
  br label %312

312:                                              ; preds = %303, %304
  %313 = phi i32 [ %311, %304 ], [ 2147483647, %303 ]
  %314 = and i32 %313, %177
  %315 = lshr i32 %313, 31
  %316 = add nsw i32 %315, %178
  %317 = ashr i32 %313, %173
  %318 = icmp sgt i32 %314, %316
  %319 = zext i1 %318 to i32
  %320 = add nsw i32 %317, %319
  %321 = icmp sle i32 %299, %320
  %322 = load i32, i32* %148, align 4
  %323 = mul nsw i32 %247, %322
  %324 = trunc i64 %264 to i32
  %325 = add nsw i32 %323, %324
  %326 = sext i32 %325 to i64
  %327 = getelementptr inbounds i8, i8* %6, i64 %326
  %328 = zext i1 %321 to i8
  store i8 %328, i8* %327, align 1
  %329 = add nuw nsw i64 %264, 1
  %330 = load i32, i32* %193, align 4
  %331 = sext i32 %330 to i64
  %332 = icmp slt i64 %329, %331
  br i1 %332, label %263, label %255
}

; Function Attrs: inlinehint nounwind ssp uwtable
define linkonce_odr hidden void @_ZN6tflite13reference_ops36BroadcastComparison4DSlowWithScalingIaXadL_ZNS0_11LessEqualFnIiEEbT_S3_EEEEvRKNS_16ComparisonParamsERKNS_12RuntimeShapeEPKS3_S9_SB_S9_Pb(%"struct.tflite::ComparisonParams"* dereferenceable(32), %"class.tflite::RuntimeShape"* dereferenceable(32), i8*, %"class.tflite::RuntimeShape"* dereferenceable(32), i8*, %"class.tflite::RuntimeShape"* dereferenceable(32), i8*) local_unnamed_addr #4 comdat {
  %8 = alloca %"struct.tflite::NdArrayDesc", align 4
  %9 = alloca %"struct.tflite::NdArrayDesc", align 4
  %10 = alloca %"struct.tflite::reference_ops::BroadcastComparison4DSlowCommon", align 8
  %11 = bitcast %"struct.tflite::reference_ops::BroadcastComparison4DSlowCommon"* %10 to i8*
  call void @llvm.lifetime.start.p0i8(i64 96, i8* nonnull %11) #8
  call void @llvm.memset.p0i8.i64(i8* nonnull align 8 %11, i8 -86, i64 96, i1 false)
  %12 = getelementptr inbounds %"class.tflite::RuntimeShape", %"class.tflite::RuntimeShape"* %5, i64 0, i32 0
  %13 = bitcast %"struct.tflite::NdArrayDesc"* %8 to i8*
  call void @llvm.lifetime.start.p0i8(i64 32, i8* nonnull %13) #8, !noalias !1139
  %14 = bitcast %"struct.tflite::NdArrayDesc"* %9 to i8*
  call void @llvm.memset.p0i8.i64(i8* nonnull align 4 %13, i8 -86, i64 32, i1 false) #8, !noalias !1139
  call void @llvm.lifetime.start.p0i8(i64 32, i8* nonnull %14) #8, !noalias !1139
  call void @llvm.memset.p0i8.i64(i8* nonnull align 4 %14, i8 -86, i64 32, i1 false) #8, !noalias !1139
  call void @_ZN6tflite35NdArrayDescsForElementwiseBroadcastILi4EEEvRKNS_12RuntimeShapeES3_PNS_11NdArrayDescIXT_EEES6_(%"class.tflite::RuntimeShape"* dereferenceable(32) %1, %"class.tflite::RuntimeShape"* dereferenceable(32) %3, %"struct.tflite::NdArrayDesc"* nonnull %8, %"struct.tflite::NdArrayDesc"* nonnull %9) #8, !noalias !1139
  %15 = getelementptr inbounds %"struct.tflite::reference_ops::BroadcastComparison4DSlowCommon", %"struct.tflite::reference_ops::BroadcastComparison4DSlowCommon"* %10, i64 0, i32 0, i32 0
  store i32 0, i32* %15, align 8, !alias.scope !1142
  %16 = load i32, i32* %12, align 8, !noalias !1142
  %17 = icmp sgt i32 %16, 4
  br i1 %17, label %18, label %19

18:                                               ; preds = %7
  call void @abort() #10, !noalias !1142
  unreachable

19:                                               ; preds = %7
  store i32 4, i32* %15, align 8, !alias.scope !1142
  %20 = sub i32 4, %16
  %21 = icmp sgt i32 %20, 0
  %22 = getelementptr inbounds %"struct.tflite::reference_ops::BroadcastComparison4DSlowCommon", %"struct.tflite::reference_ops::BroadcastComparison4DSlowCommon"* %10, i64 0, i32 0, i32 1
  br i1 %21, label %23, label %103

23:                                               ; preds = %19
  %24 = bitcast %union.anon* %22 to [5 x i32]*
  %25 = zext i32 %20 to i64
  %26 = icmp ult i32 %20, 8
  br i1 %26, label %96, label %27

27:                                               ; preds = %23
  %28 = and i64 %25, 4294967288
  %29 = add nsw i64 %28, -8
  %30 = lshr exact i64 %29, 3
  %31 = add nuw nsw i64 %30, 1
  %32 = and i64 %31, 7
  %33 = icmp ult i64 %29, 56
  br i1 %33, label %81, label %34

34:                                               ; preds = %27
  %35 = sub nsw i64 %31, %32
  br label %36

36:                                               ; preds = %36, %34
  %37 = phi i64 [ 0, %34 ], [ %78, %36 ]
  %38 = phi i64 [ %35, %34 ], [ %79, %36 ]
  %39 = getelementptr inbounds [5 x i32], [5 x i32]* %24, i64 0, i64 %37
  %40 = bitcast i32* %39 to <4 x i32>*
  store <4 x i32> <i32 1, i32 1, i32 1, i32 1>, <4 x i32>* %40, align 8, !alias.scope !1142
  %41 = getelementptr inbounds i32, i32* %39, i64 4
  %42 = bitcast i32* %41 to <4 x i32>*
  store <4 x i32> <i32 1, i32 1, i32 1, i32 1>, <4 x i32>* %42, align 8, !alias.scope !1142
  %43 = or i64 %37, 8
  %44 = getelementptr inbounds [5 x i32], [5 x i32]* %24, i64 0, i64 %43
  %45 = bitcast i32* %44 to <4 x i32>*
  store <4 x i32> <i32 1, i32 1, i32 1, i32 1>, <4 x i32>* %45, align 8, !alias.scope !1142
  %46 = getelementptr inbounds i32, i32* %44, i64 4
  %47 = bitcast i32* %46 to <4 x i32>*
  store <4 x i32> <i32 1, i32 1, i32 1, i32 1>, <4 x i32>* %47, align 8, !alias.scope !1142
  %48 = or i64 %37, 16
  %49 = getelementptr inbounds [5 x i32], [5 x i32]* %24, i64 0, i64 %48
  %50 = bitcast i32* %49 to <4 x i32>*
  store <4 x i32> <i32 1, i32 1, i32 1, i32 1>, <4 x i32>* %50, align 8, !alias.scope !1142
  %51 = getelementptr inbounds i32, i32* %49, i64 4
  %52 = bitcast i32* %51 to <4 x i32>*
  store <4 x i32> <i32 1, i32 1, i32 1, i32 1>, <4 x i32>* %52, align 8, !alias.scope !1142
  %53 = or i64 %37, 24
  %54 = getelementptr inbounds [5 x i32], [5 x i32]* %24, i64 0, i64 %53
  %55 = bitcast i32* %54 to <4 x i32>*
  store <4 x i32> <i32 1, i32 1, i32 1, i32 1>, <4 x i32>* %55, align 8, !alias.scope !1142
  %56 = getelementptr inbounds i32, i32* %54, i64 4
  %57 = bitcast i32* %56 to <4 x i32>*
  store <4 x i32> <i32 1, i32 1, i32 1, i32 1>, <4 x i32>* %57, align 8, !alias.scope !1142
  %58 = or i64 %37, 32
  %59 = getelementptr inbounds [5 x i32], [5 x i32]* %24, i64 0, i64 %58
  %60 = bitcast i32* %59 to <4 x i32>*
  store <4 x i32> <i32 1, i32 1, i32 1, i32 1>, <4 x i32>* %60, align 8, !alias.scope !1142
  %61 = getelementptr inbounds i32, i32* %59, i64 4
  %62 = bitcast i32* %61 to <4 x i32>*
  store <4 x i32> <i32 1, i32 1, i32 1, i32 1>, <4 x i32>* %62, align 8, !alias.scope !1142
  %63 = or i64 %37, 40
  %64 = getelementptr inbounds [5 x i32], [5 x i32]* %24, i64 0, i64 %63
  %65 = bitcast i32* %64 to <4 x i32>*
  store <4 x i32> <i32 1, i32 1, i32 1, i32 1>, <4 x i32>* %65, align 8, !alias.scope !1142
  %66 = getelementptr inbounds i32, i32* %64, i64 4
  %67 = bitcast i32* %66 to <4 x i32>*
  store <4 x i32> <i32 1, i32 1, i32 1, i32 1>, <4 x i32>* %67, align 8, !alias.scope !1142
  %68 = or i64 %37, 48
  %69 = getelementptr inbounds [5 x i32], [5 x i32]* %24, i64 0, i64 %68
  %70 = bitcast i32* %69 to <4 x i32>*
  store <4 x i32> <i32 1, i32 1, i32 1, i32 1>, <4 x i32>* %70, align 8, !alias.scope !1142
  %71 = getelementptr inbounds i32, i32* %69, i64 4
  %72 = bitcast i32* %71 to <4 x i32>*
  store <4 x i32> <i32 1, i32 1, i32 1, i32 1>, <4 x i32>* %72, align 8, !alias.scope !1142
  %73 = or i64 %37, 56
  %74 = getelementptr inbounds [5 x i32], [5 x i32]* %24, i64 0, i64 %73
  %75 = bitcast i32* %74 to <4 x i32>*
  store <4 x i32> <i32 1, i32 1, i32 1, i32 1>, <4 x i32>* %75, align 8, !alias.scope !1142
  %76 = getelementptr inbounds i32, i32* %74, i64 4
  %77 = bitcast i32* %76 to <4 x i32>*
  store <4 x i32> <i32 1, i32 1, i32 1, i32 1>, <4 x i32>* %77, align 8, !alias.scope !1142
  %78 = add i64 %37, 64
  %79 = add i64 %38, -8
  %80 = icmp eq i64 %79, 0
  br i1 %80, label %81, label %36, !llvm.loop !1145

81:                                               ; preds = %36, %27
  %82 = phi i64 [ 0, %27 ], [ %78, %36 ]
  %83 = icmp eq i64 %32, 0
  br i1 %83, label %94, label %84

84:                                               ; preds = %81, %84
  %85 = phi i64 [ %91, %84 ], [ %82, %81 ]
  %86 = phi i64 [ %92, %84 ], [ %32, %81 ]
  %87 = getelementptr inbounds [5 x i32], [5 x i32]* %24, i64 0, i64 %85
  %88 = bitcast i32* %87 to <4 x i32>*
  store <4 x i32> <i32 1, i32 1, i32 1, i32 1>, <4 x i32>* %88, align 8, !alias.scope !1142
  %89 = getelementptr inbounds i32, i32* %87, i64 4
  %90 = bitcast i32* %89 to <4 x i32>*
  store <4 x i32> <i32 1, i32 1, i32 1, i32 1>, <4 x i32>* %90, align 8, !alias.scope !1142
  %91 = add i64 %85, 8
  %92 = add i64 %86, -1
  %93 = icmp eq i64 %92, 0
  br i1 %93, label %94, label %84, !llvm.loop !1146

94:                                               ; preds = %84, %81
  %95 = icmp eq i64 %28, %25
  br i1 %95, label %103, label %96

96:                                               ; preds = %94, %23
  %97 = phi i64 [ 0, %23 ], [ %28, %94 ]
  br label %98

98:                                               ; preds = %96, %98
  %99 = phi i64 [ %101, %98 ], [ %97, %96 ]
  %100 = getelementptr inbounds [5 x i32], [5 x i32]* %24, i64 0, i64 %99
  store i32 1, i32* %100, align 4, !alias.scope !1142
  %101 = add nuw nsw i64 %99, 1
  %102 = icmp eq i64 %101, %25
  br i1 %102, label %103, label %98, !llvm.loop !1147

103:                                              ; preds = %98, %94, %19
  %104 = bitcast %union.anon* %22 to i32*
  %105 = sext i32 %20 to i64
  %106 = getelementptr inbounds i32, i32* %104, i64 %105
  %107 = bitcast i32* %106 to i8*
  %108 = icmp sgt i32 %16, 5
  %109 = getelementptr inbounds %"class.tflite::RuntimeShape", %"class.tflite::RuntimeShape"* %5, i64 0, i32 1
  %110 = getelementptr inbounds %union.anon, %union.anon* %109, i64 0, i32 0
  %111 = load i32*, i32** %110, align 8, !noalias !1142
  %112 = bitcast %union.anon* %109 to i32*
  %113 = select i1 %108, i32* %111, i32* %112
  %114 = bitcast i32* %113 to i8*
  %115 = sext i32 %16 to i64
  %116 = shl nsw i64 %115, 2
  call void @llvm.memcpy.p0i8.p0i8.i64(i8* align 4 %107, i8* align 4 %114, i64 %116, i1 false) #8
  %117 = getelementptr inbounds %"struct.tflite::reference_ops::BroadcastComparison4DSlowCommon", %"struct.tflite::reference_ops::BroadcastComparison4DSlowCommon"* %10, i64 0, i32 1
  %118 = bitcast %"struct.tflite::NdArrayDesc"* %117 to i8*
  call void @llvm.memcpy.p0i8.p0i8.i64(i8* align 8 %118, i8* nonnull align 4 %13, i64 32, i1 false) #8
  %119 = getelementptr inbounds %"struct.tflite::reference_ops::BroadcastComparison4DSlowCommon", %"struct.tflite::reference_ops::BroadcastComparison4DSlowCommon"* %10, i64 0, i32 2
  %120 = bitcast %"struct.tflite::NdArrayDesc"* %119 to i8*
  call void @llvm.memcpy.p0i8.p0i8.i64(i8* align 8 %120, i8* nonnull align 4 %14, i64 32, i1 false) #8
  call void @llvm.lifetime.end.p0i8(i64 32, i8* nonnull %14) #8, !noalias !1139
  call void @llvm.lifetime.end.p0i8(i64 32, i8* nonnull %13) #8, !noalias !1139
  %121 = getelementptr inbounds %"struct.tflite::ComparisonParams", %"struct.tflite::ComparisonParams"* %0, i64 0, i32 0
  %122 = load i32, i32* %121, align 4
  %123 = getelementptr inbounds %"struct.tflite::ComparisonParams", %"struct.tflite::ComparisonParams"* %0, i64 0, i32 1
  %124 = load i32, i32* %123, align 4
  %125 = getelementptr inbounds %"struct.tflite::ComparisonParams", %"struct.tflite::ComparisonParams"* %0, i64 0, i32 2
  %126 = load i32, i32* %125, align 4
  %127 = getelementptr inbounds %"struct.tflite::ComparisonParams", %"struct.tflite::ComparisonParams"* %0, i64 0, i32 4
  %128 = load i32, i32* %127, align 4
  %129 = getelementptr inbounds %"struct.tflite::ComparisonParams", %"struct.tflite::ComparisonParams"* %0, i64 0, i32 5
  %130 = load i32, i32* %129, align 4
  %131 = load i32, i32* %15, align 8
  %132 = icmp sgt i32 %131, 5
  %133 = getelementptr inbounds %union.anon, %union.anon* %22, i64 0, i32 0
  %134 = load i32*, i32** %133, align 8
  %135 = select i1 %132, i32* %134, i32* %104
  %136 = load i32, i32* %135, align 4
  %137 = icmp sgt i32 %136, 0
  br i1 %137, label %138, label %205

138:                                              ; preds = %103
  %139 = getelementptr inbounds %"struct.tflite::ComparisonParams", %"struct.tflite::ComparisonParams"* %0, i64 0, i32 6
  %140 = load i32, i32* %139, align 4
  %141 = getelementptr inbounds %"struct.tflite::ComparisonParams", %"struct.tflite::ComparisonParams"* %0, i64 0, i32 3
  %142 = load i32, i32* %141, align 4
  %143 = bitcast %union.anon* %22 to [5 x i32]*
  %144 = getelementptr inbounds [5 x i32], [5 x i32]* %143, i64 0, i64 1
  %145 = getelementptr inbounds %"struct.tflite::reference_ops::BroadcastComparison4DSlowCommon", %"struct.tflite::reference_ops::BroadcastComparison4DSlowCommon"* %10, i64 0, i32 0, i32 1, i32 1
  %146 = bitcast [16 x i8]* %145 to i32*
  %147 = getelementptr inbounds %"struct.tflite::reference_ops::BroadcastComparison4DSlowCommon", %"struct.tflite::reference_ops::BroadcastComparison4DSlowCommon"* %10, i64 0, i32 0, i32 1, i32 1, i64 4
  %148 = bitcast i8* %147 to i32*
  %149 = getelementptr inbounds %"struct.tflite::reference_ops::BroadcastComparison4DSlowCommon", %"struct.tflite::reference_ops::BroadcastComparison4DSlowCommon"* %10, i64 0, i32 1, i32 1, i64 0
  %150 = load i32, i32* %149, align 8
  %151 = getelementptr inbounds %"struct.tflite::reference_ops::BroadcastComparison4DSlowCommon", %"struct.tflite::reference_ops::BroadcastComparison4DSlowCommon"* %10, i64 0, i32 1, i32 1, i64 1
  %152 = load i32, i32* %151, align 4
  %153 = getelementptr inbounds %"struct.tflite::reference_ops::BroadcastComparison4DSlowCommon", %"struct.tflite::reference_ops::BroadcastComparison4DSlowCommon"* %10, i64 0, i32 1, i32 1, i64 2
  %154 = load i32, i32* %153, align 8
  %155 = getelementptr inbounds %"struct.tflite::reference_ops::BroadcastComparison4DSlowCommon", %"struct.tflite::reference_ops::BroadcastComparison4DSlowCommon"* %10, i64 0, i32 1, i32 1, i64 3
  %156 = load i32, i32* %155, align 4
  %157 = getelementptr inbounds %"struct.tflite::reference_ops::BroadcastComparison4DSlowCommon", %"struct.tflite::reference_ops::BroadcastComparison4DSlowCommon"* %10, i64 0, i32 2, i32 1, i64 0
  %158 = load i32, i32* %157, align 8
  %159 = getelementptr inbounds %"struct.tflite::reference_ops::BroadcastComparison4DSlowCommon", %"struct.tflite::reference_ops::BroadcastComparison4DSlowCommon"* %10, i64 0, i32 2, i32 1, i64 1
  %160 = load i32, i32* %159, align 4
  %161 = getelementptr inbounds %"struct.tflite::reference_ops::BroadcastComparison4DSlowCommon", %"struct.tflite::reference_ops::BroadcastComparison4DSlowCommon"* %10, i64 0, i32 2, i32 1, i64 2
  %162 = load i32, i32* %161, align 8
  %163 = getelementptr inbounds %"struct.tflite::reference_ops::BroadcastComparison4DSlowCommon", %"struct.tflite::reference_ops::BroadcastComparison4DSlowCommon"* %10, i64 0, i32 2, i32 1, i64 3
  %164 = load i32, i32* %163, align 4
  %165 = sext i32 %126 to i64
  %166 = sub nsw i32 0, %142
  %167 = zext i32 %166 to i64
  %168 = shl nsw i64 -1, %167
  %169 = trunc i64 %168 to i32
  %170 = xor i32 %169, -1
  %171 = ashr i32 %170, 1
  %172 = sext i32 %130 to i64
  %173 = sub nsw i32 0, %140
  %174 = zext i32 %173 to i64
  %175 = shl nsw i64 -1, %174
  %176 = trunc i64 %175 to i32
  %177 = xor i32 %176, -1
  %178 = ashr i32 %177, 1
  %179 = getelementptr inbounds i32, i32* %104, i64 1
  %180 = sext i32 %164 to i64
  %181 = sext i32 %156 to i64
  %182 = sext i32 %162 to i64
  %183 = sext i32 %154 to i64
  %184 = sext i32 %160 to i64
  %185 = sext i32 %152 to i64
  %186 = sext i32 %158 to i64
  %187 = sext i32 %150 to i64
  %188 = getelementptr inbounds i32, i32* %134, i64 1
  %189 = select i1 %132, i32* %188, i32* %144
  %190 = getelementptr inbounds i32, i32* %134, i64 2
  %191 = select i1 %132, i32* %190, i32* %146
  %192 = getelementptr inbounds i32, i32* %134, i64 3
  %193 = select i1 %132, i32* %192, i32* %148
  %194 = icmp eq i32 %126, -2147483648
  %195 = icmp eq i32 %130, -2147483648
  br label %196

196:                                              ; preds = %138, %229
  %197 = phi i32 [ %136, %138 ], [ %230, %229 ]
  %198 = phi i64 [ 0, %138 ], [ %231, %229 ]
  %199 = load i32, i32* %189, align 4
  %200 = icmp sgt i32 %199, 0
  br i1 %200, label %201, label %229

201:                                              ; preds = %196
  %202 = mul nsw i64 %198, %187
  %203 = mul nsw i64 %198, %186
  %204 = trunc i64 %198 to i32
  br label %212

205:                                              ; preds = %229, %103
  %206 = xor i1 %132, true
  %207 = icmp eq i32* %134, null
  %208 = or i1 %207, %206
  br i1 %208, label %211, label %209

209:                                              ; preds = %205
  %210 = bitcast i32* %134 to i8*
  call void @_ZdaPv(i8* %210) #9
  br label %211

211:                                              ; preds = %205, %209
  call void @llvm.lifetime.end.p0i8(i64 96, i8* nonnull %11) #8
  ret void

212:                                              ; preds = %201, %250
  %213 = phi i32 [ %199, %201 ], [ %251, %250 ]
  %214 = phi i64 [ 0, %201 ], [ %252, %250 ]
  %215 = load i32, i32* %191, align 4
  %216 = icmp sgt i32 %215, 0
  br i1 %216, label %217, label %250

217:                                              ; preds = %212
  %218 = mul nsw i64 %214, %185
  %219 = add nsw i64 %218, %202
  %220 = mul nsw i64 %214, %184
  %221 = add nsw i64 %220, %203
  %222 = load i32, i32* %179, align 4
  %223 = mul nsw i32 %222, %204
  %224 = trunc i64 %214 to i32
  %225 = add nsw i32 %223, %224
  %226 = load i32, i32* %193, align 4
  br label %234

227:                                              ; preds = %250
  %228 = load i32, i32* %135, align 4
  br label %229

229:                                              ; preds = %227, %196
  %230 = phi i32 [ %228, %227 ], [ %197, %196 ]
  %231 = add nuw nsw i64 %198, 1
  %232 = sext i32 %230 to i64
  %233 = icmp slt i64 %231, %232
  br i1 %233, label %196, label %205

234:                                              ; preds = %217, %257
  %235 = phi i32 [ %215, %217 ], [ %258, %257 ]
  %236 = phi i32 [ %226, %217 ], [ %259, %257 ]
  %237 = phi i64 [ 0, %217 ], [ %260, %257 ]
  %238 = icmp sgt i32 %236, 0
  br i1 %238, label %239, label %257

239:                                              ; preds = %234
  %240 = mul nsw i64 %237, %183
  %241 = add nsw i64 %219, %240
  %242 = mul nsw i64 %237, %182
  %243 = add nsw i64 %221, %242
  %244 = load i32, i32* %146, align 8
  %245 = mul nsw i32 %225, %244
  %246 = trunc i64 %237 to i32
  %247 = add nsw i32 %245, %246
  br label %263

248:                                              ; preds = %257
  %249 = load i32, i32* %189, align 4
  br label %250

250:                                              ; preds = %248, %212
  %251 = phi i32 [ %249, %248 ], [ %213, %212 ]
  %252 = add nuw nsw i64 %214, 1
  %253 = sext i32 %251 to i64
  %254 = icmp slt i64 %252, %253
  br i1 %254, label %212, label %227

255:                                              ; preds = %312
  %256 = load i32, i32* %191, align 4
  br label %257

257:                                              ; preds = %255, %234
  %258 = phi i32 [ %256, %255 ], [ %235, %234 ]
  %259 = phi i32 [ %330, %255 ], [ %236, %234 ]
  %260 = add nuw nsw i64 %237, 1
  %261 = sext i32 %258 to i64
  %262 = icmp slt i64 %260, %261
  br i1 %262, label %234, label %248

263:                                              ; preds = %239, %312
  %264 = phi i64 [ 0, %239 ], [ %329, %312 ]
  %265 = mul nsw i64 %264, %181
  %266 = add nsw i64 %241, %265
  %267 = getelementptr inbounds i8, i8* %2, i64 %266
  %268 = load i8, i8* %267, align 1
  %269 = sext i8 %268 to i32
  %270 = add nsw i32 %124, %269
  %271 = mul nsw i64 %264, %180
  %272 = add nsw i64 %243, %271
  %273 = getelementptr inbounds i8, i8* %4, i64 %272
  %274 = load i8, i8* %273, align 1
  %275 = sext i8 %274 to i32
  %276 = add nsw i32 %128, %275
  %277 = shl i32 %270, %122
  %278 = shl i32 %276, %122
  %279 = icmp eq i32 %277, %126
  br i1 %279, label %282, label %280

280:                                              ; preds = %263
  %281 = sext i32 %277 to i64
  br label %283

282:                                              ; preds = %263
  br i1 %194, label %291, label %283

283:                                              ; preds = %282, %280
  %284 = phi i64 [ %281, %280 ], [ %165, %282 ]
  %285 = mul nsw i64 %284, %165
  %286 = icmp sgt i64 %285, -1
  %287 = select i1 %286, i64 1073741824, i64 -1073741823
  %288 = add nsw i64 %287, %285
  %289 = sdiv i64 %288, 2147483648
  %290 = trunc i64 %289 to i32
  br label %291

291:                                              ; preds = %282, %283
  %292 = phi i32 [ %290, %283 ], [ 2147483647, %282 ]
  %293 = and i32 %292, %170
  %294 = lshr i32 %292, 31
  %295 = add nsw i32 %294, %171
  %296 = ashr i32 %292, %166
  %297 = icmp sgt i32 %293, %295
  %298 = zext i1 %297 to i32
  %299 = add nsw i32 %296, %298
  %300 = icmp eq i32 %278, %130
  br i1 %300, label %303, label %301

301:                                              ; preds = %291
  %302 = sext i32 %278 to i64
  br label %304

303:                                              ; preds = %291
  br i1 %195, label %312, label %304

304:                                              ; preds = %303, %301
  %305 = phi i64 [ %302, %301 ], [ %172, %303 ]
  %306 = mul nsw i64 %305, %172
  %307 = icmp sgt i64 %306, -1
  %308 = select i1 %307, i64 1073741824, i64 -1073741823
  %309 = add nsw i64 %308, %306
  %310 = sdiv i64 %309, 2147483648
  %311 = trunc i64 %310 to i32
  br label %312

312:                                              ; preds = %303, %304
  %313 = phi i32 [ %311, %304 ], [ 2147483647, %303 ]
  %314 = and i32 %313, %177
  %315 = lshr i32 %313, 31
  %316 = add nsw i32 %315, %178
  %317 = ashr i32 %313, %173
  %318 = icmp sgt i32 %314, %316
  %319 = zext i1 %318 to i32
  %320 = add nsw i32 %317, %319
  %321 = icmp sle i32 %299, %320
  %322 = load i32, i32* %148, align 4
  %323 = mul nsw i32 %247, %322
  %324 = trunc i64 %264 to i32
  %325 = add nsw i32 %323, %324
  %326 = sext i32 %325 to i64
  %327 = getelementptr inbounds i8, i8* %6, i64 %326
  %328 = zext i1 %321 to i8
  store i8 %328, i8* %327, align 1
  %329 = add nuw nsw i64 %264, 1
  %330 = load i32, i32* %193, align 4
  %331 = sext i32 %330 to i64
  %332 = icmp slt i64 %329, %331
  br i1 %332, label %263, label %255
}

attributes #0 = { norecurse nounwind readnone ssp uwtable "correctly-rounded-divide-sqrt-fp-math"="false" "disable-tail-calls"="false" "less-precise-fpmad"="false" "min-legal-vector-width"="0" "no-frame-pointer-elim"="false" "no-frame-pointer-elim-non-leaf" "no-infs-fp-math"="false" "no-jump-tables"="false" "no-nans-fp-math"="false" "no-signed-zeros-fp-math"="false" "no-trapping-math"="false" "null-pointer-is-valid"="true" "stack-protector-buffer-size"="4" "target-cpu"="x86-64" "target-features"="+cx8,+fxsr,+mmx,+sse,+sse2,+sse3,+x87" "unsafe-fp-math"="false" "use-soft-float"="false" }
attributes #1 = { nounwind ssp uwtable "correctly-rounded-divide-sqrt-fp-math"="false" "disable-tail-calls"="false" "less-precise-fpmad"="false" "min-legal-vector-width"="0" "no-frame-pointer-elim"="false" "no-frame-pointer-elim-non-leaf" "no-infs-fp-math"="false" "no-jump-tables"="false" "no-nans-fp-math"="false" "no-signed-zeros-fp-math"="false" "no-trapping-math"="false" "null-pointer-is-valid"="true" "stack-protector-buffer-size"="4" "target-cpu"="x86-64" "target-features"="+cx8,+fxsr,+mmx,+sse,+sse2,+sse3,+x87" "unsafe-fp-math"="false" "use-soft-float"="false" }
attributes #2 = { argmemonly nounwind }
attributes #3 = { "correctly-rounded-divide-sqrt-fp-math"="false" "disable-tail-calls"="false" "less-precise-fpmad"="false" "no-frame-pointer-elim"="false" "no-frame-pointer-elim-non-leaf" "no-infs-fp-math"="false" "no-nans-fp-math"="false" "no-signed-zeros-fp-math"="false" "no-trapping-math"="false" "null-pointer-is-valid"="true" "stack-protector-buffer-size"="4" "target-cpu"="x86-64" "target-features"="+cx8,+fxsr,+mmx,+sse,+sse2,+sse3,+x87" "unsafe-fp-math"="false" "use-soft-float"="false" }
attributes #4 = { inlinehint nounwind ssp uwtable "correctly-rounded-divide-sqrt-fp-math"="false" "disable-tail-calls"="false" "less-precise-fpmad"="false" "min-legal-vector-width"="0" "no-frame-pointer-elim"="false" "no-frame-pointer-elim-non-leaf" "no-infs-fp-math"="false" "no-jump-tables"="false" "no-nans-fp-math"="false" "no-signed-zeros-fp-math"="false" "no-trapping-math"="false" "null-pointer-is-valid"="true" "stack-protector-buffer-size"="4" "target-cpu"="x86-64" "target-features"="+cx8,+fxsr,+mmx,+sse,+sse2,+sse3,+x87" "unsafe-fp-math"="false" "use-soft-float"="false" }
attributes #5 = { noreturn nounwind "correctly-rounded-divide-sqrt-fp-math"="false" "disable-tail-calls"="false" "less-precise-fpmad"="false" "no-frame-pointer-elim"="false" "no-frame-pointer-elim-non-leaf" "no-infs-fp-math"="false" "no-nans-fp-math"="false" "no-signed-zeros-fp-math"="false" "no-trapping-math"="false" "null-pointer-is-valid"="true" "stack-protector-buffer-size"="4" "target-cpu"="x86-64" "target-features"="+cx8,+fxsr,+mmx,+sse,+sse2,+sse3,+x87" "unsafe-fp-math"="false" "use-soft-float"="false" }
attributes #6 = { nobuiltin nounwind "correctly-rounded-divide-sqrt-fp-math"="false" "disable-tail-calls"="false" "less-precise-fpmad"="false" "no-frame-pointer-elim"="false" "no-frame-pointer-elim-non-leaf" "no-infs-fp-math"="false" "no-nans-fp-math"="false" "no-signed-zeros-fp-math"="false" "no-trapping-math"="false" "null-pointer-is-valid"="true" "stack-protector-buffer-size"="4" "target-cpu"="x86-64" "target-features"="+cx8,+fxsr,+mmx,+sse,+sse2,+sse3,+x87" "unsafe-fp-math"="false" "use-soft-float"="false" }
attributes #7 = { nobuiltin nofree "correctly-rounded-divide-sqrt-fp-math"="false" "disable-tail-calls"="false" "less-precise-fpmad"="false" "no-frame-pointer-elim"="false" "no-frame-pointer-elim-non-leaf" "no-infs-fp-math"="false" "no-nans-fp-math"="false" "no-signed-zeros-fp-math"="false" "no-trapping-math"="false" "null-pointer-is-valid"="true" "stack-protector-buffer-size"="4" "target-cpu"="x86-64" "target-features"="+cx8,+fxsr,+mmx,+sse,+sse2,+sse3,+x87" "unsafe-fp-math"="false" "use-soft-float"="false" }
attributes #8 = { nounwind }
attributes #9 = { builtin nounwind }
attributes #10 = { noreturn nounwind }

!llvm.module.flags = !{!0, !1}

!0 = !{i32 1, !"wchar_size", i32 4}
!1 = !{i32 7, !"PIC Level", i32 2}
!2 = !{!3}
!3 = distinct !{!3, !4, !"_ZN6tflite14GetTensorShapeEPK12TfLiteTensor: argument 0"}
!4 = distinct !{!4, !"_ZN6tflite14GetTensorShapeEPK12TfLiteTensor"}
!5 = !{!6}
!6 = distinct !{!6, !7, !"_ZN6tflite14GetTensorShapeEPK12TfLiteTensor: argument 0"}
!7 = distinct !{!7, !"_ZN6tflite14GetTensorShapeEPK12TfLiteTensor"}
!8 = !{!9}
!9 = distinct !{!9, !10, !"_ZN6tflite14GetTensorShapeEPK12TfLiteTensor: argument 0"}
!10 = distinct !{!10, !"_ZN6tflite14GetTensorShapeEPK12TfLiteTensor"}
!11 = !{!12}
!12 = distinct !{!12, !13, !"_ZN6tflite14GetTensorShapeEPK12TfLiteTensor: argument 0"}
!13 = distinct !{!13, !"_ZN6tflite14GetTensorShapeEPK12TfLiteTensor"}
!14 = !{!15}
!15 = distinct !{!15, !16, !"_ZN6tflite14GetTensorShapeEPK12TfLiteTensor: argument 0"}
!16 = distinct !{!16, !"_ZN6tflite14GetTensorShapeEPK12TfLiteTensor"}
!17 = !{!18}
!18 = distinct !{!18, !19, !"_ZN6tflite14GetTensorShapeEPK12TfLiteTensor: argument 0"}
!19 = distinct !{!19, !"_ZN6tflite14GetTensorShapeEPK12TfLiteTensor"}
!20 = distinct !{!20, !21}
!21 = !{!"llvm.loop.isvectorized", i32 1}
!22 = distinct !{!22, !23}
!23 = !{!"llvm.loop.unroll.disable"}
!24 = distinct !{!24, !25, !21}
!25 = !{!"llvm.loop.unroll.runtime.disable"}
!26 = !{!27}
!27 = distinct !{!27, !28}
!28 = distinct !{!28, !"LVerDomain"}
!29 = !{!30}
!30 = distinct !{!30, !28}
!31 = !{!32}
!32 = distinct !{!32, !28}
!33 = !{!27, !30}
!34 = distinct !{!34, !21}
!35 = !{i8 0, i8 2}
!36 = distinct !{!36, !21}
!37 = !{!38}
!38 = distinct !{!38, !39, !"_ZN6tflite14GetTensorShapeEPK12TfLiteTensor: argument 0"}
!39 = distinct !{!39, !"_ZN6tflite14GetTensorShapeEPK12TfLiteTensor"}
!40 = !{!41}
!41 = distinct !{!41, !42, !"_ZN6tflite14GetTensorShapeEPK12TfLiteTensor: argument 0"}
!42 = distinct !{!42, !"_ZN6tflite14GetTensorShapeEPK12TfLiteTensor"}
!43 = !{!44}
!44 = distinct !{!44, !45, !"_ZN6tflite14GetTensorShapeEPK12TfLiteTensor: argument 0"}
!45 = distinct !{!45, !"_ZN6tflite14GetTensorShapeEPK12TfLiteTensor"}
!46 = !{!47}
!47 = distinct !{!47, !48, !"_ZN6tflite14GetTensorShapeEPK12TfLiteTensor: argument 0"}
!48 = distinct !{!48, !"_ZN6tflite14GetTensorShapeEPK12TfLiteTensor"}
!49 = !{!50}
!50 = distinct !{!50, !51, !"_ZN6tflite14GetTensorShapeEPK12TfLiteTensor: argument 0"}
!51 = distinct !{!51, !"_ZN6tflite14GetTensorShapeEPK12TfLiteTensor"}
!52 = !{!53}
!53 = distinct !{!53, !54, !"_ZN6tflite14GetTensorShapeEPK12TfLiteTensor: argument 0"}
!54 = distinct !{!54, !"_ZN6tflite14GetTensorShapeEPK12TfLiteTensor"}
!55 = distinct !{!55, !21}
!56 = distinct !{!56, !23}
!57 = distinct !{!57, !25, !21}
!58 = !{!59}
!59 = distinct !{!59, !60}
!60 = distinct !{!60, !"LVerDomain"}
!61 = !{!62}
!62 = distinct !{!62, !60}
!63 = !{!64}
!64 = distinct !{!64, !60}
!65 = !{!62, !59}
!66 = distinct !{!66, !21}
!67 = distinct !{!67, !21}
!68 = !{!69}
!69 = distinct !{!69, !70, !"_ZN6tflite14GetTensorShapeEPK12TfLiteTensor: argument 0"}
!70 = distinct !{!70, !"_ZN6tflite14GetTensorShapeEPK12TfLiteTensor"}
!71 = !{!72}
!72 = distinct !{!72, !73, !"_ZN6tflite14GetTensorShapeEPK12TfLiteTensor: argument 0"}
!73 = distinct !{!73, !"_ZN6tflite14GetTensorShapeEPK12TfLiteTensor"}
!74 = !{!75}
!75 = distinct !{!75, !76, !"_ZN6tflite14GetTensorShapeEPK12TfLiteTensor: argument 0"}
!76 = distinct !{!76, !"_ZN6tflite14GetTensorShapeEPK12TfLiteTensor"}
!77 = !{!78}
!78 = distinct !{!78, !79, !"_ZN6tflite14GetTensorShapeEPK12TfLiteTensor: argument 0"}
!79 = distinct !{!79, !"_ZN6tflite14GetTensorShapeEPK12TfLiteTensor"}
!80 = !{!81}
!81 = distinct !{!81, !82, !"_ZN6tflite14GetTensorShapeEPK12TfLiteTensor: argument 0"}
!82 = distinct !{!82, !"_ZN6tflite14GetTensorShapeEPK12TfLiteTensor"}
!83 = !{!84}
!84 = distinct !{!84, !85, !"_ZN6tflite14GetTensorShapeEPK12TfLiteTensor: argument 0"}
!85 = distinct !{!85, !"_ZN6tflite14GetTensorShapeEPK12TfLiteTensor"}
!86 = distinct !{!86, !21}
!87 = distinct !{!87, !23}
!88 = distinct !{!88, !25, !21}
!89 = !{!90}
!90 = distinct !{!90, !91}
!91 = distinct !{!91, !"LVerDomain"}
!92 = !{!93}
!93 = distinct !{!93, !91}
!94 = !{!95}
!95 = distinct !{!95, !91}
!96 = !{!93, !90}
!97 = distinct !{!97, !21}
!98 = distinct !{!98, !21}
!99 = !{!100}
!100 = distinct !{!100, !101, !"_ZN6tflite14GetTensorShapeEPK12TfLiteTensor: argument 0"}
!101 = distinct !{!101, !"_ZN6tflite14GetTensorShapeEPK12TfLiteTensor"}
!102 = !{!103}
!103 = distinct !{!103, !104, !"_ZN6tflite14GetTensorShapeEPK12TfLiteTensor: argument 0"}
!104 = distinct !{!104, !"_ZN6tflite14GetTensorShapeEPK12TfLiteTensor"}
!105 = !{!106}
!106 = distinct !{!106, !107, !"_ZN6tflite14GetTensorShapeEPK12TfLiteTensor: argument 0"}
!107 = distinct !{!107, !"_ZN6tflite14GetTensorShapeEPK12TfLiteTensor"}
!108 = !{!109}
!109 = distinct !{!109, !110, !"_ZN6tflite14GetTensorShapeEPK12TfLiteTensor: argument 0"}
!110 = distinct !{!110, !"_ZN6tflite14GetTensorShapeEPK12TfLiteTensor"}
!111 = !{!112}
!112 = distinct !{!112, !113, !"_ZN6tflite14GetTensorShapeEPK12TfLiteTensor: argument 0"}
!113 = distinct !{!113, !"_ZN6tflite14GetTensorShapeEPK12TfLiteTensor"}
!114 = !{!115}
!115 = distinct !{!115, !116, !"_ZN6tflite14GetTensorShapeEPK12TfLiteTensor: argument 0"}
!116 = distinct !{!116, !"_ZN6tflite14GetTensorShapeEPK12TfLiteTensor"}
!117 = distinct !{!117, !21}
!118 = distinct !{!118, !23}
!119 = distinct !{!119, !25, !21}
!120 = !{!121}
!121 = distinct !{!121, !122, !"_ZN6tflite14GetTensorShapeEPK12TfLiteTensor: argument 0"}
!122 = distinct !{!122, !"_ZN6tflite14GetTensorShapeEPK12TfLiteTensor"}
!123 = !{!124}
!124 = distinct !{!124, !125, !"_ZN6tflite14GetTensorShapeEPK12TfLiteTensor: argument 0"}
!125 = distinct !{!125, !"_ZN6tflite14GetTensorShapeEPK12TfLiteTensor"}
!126 = !{!127}
!127 = distinct !{!127, !128, !"_ZN6tflite14GetTensorShapeEPK12TfLiteTensor: argument 0"}
!128 = distinct !{!128, !"_ZN6tflite14GetTensorShapeEPK12TfLiteTensor"}
!129 = !{!130}
!130 = distinct !{!130, !131, !"_ZN6tflite14GetTensorShapeEPK12TfLiteTensor: argument 0"}
!131 = distinct !{!131, !"_ZN6tflite14GetTensorShapeEPK12TfLiteTensor"}
!132 = !{!133}
!133 = distinct !{!133, !134, !"_ZN6tflite14GetTensorShapeEPK12TfLiteTensor: argument 0"}
!134 = distinct !{!134, !"_ZN6tflite14GetTensorShapeEPK12TfLiteTensor"}
!135 = !{!136}
!136 = distinct !{!136, !137, !"_ZN6tflite14GetTensorShapeEPK12TfLiteTensor: argument 0"}
!137 = distinct !{!137, !"_ZN6tflite14GetTensorShapeEPK12TfLiteTensor"}
!138 = distinct !{!138, !21}
!139 = distinct !{!139, !23}
!140 = distinct !{!140, !25, !21}
!141 = !{!142}
!142 = distinct !{!142, !143, !"_ZN6tflite14GetTensorShapeEPK12TfLiteTensor: argument 0"}
!143 = distinct !{!143, !"_ZN6tflite14GetTensorShapeEPK12TfLiteTensor"}
!144 = !{!145}
!145 = distinct !{!145, !146, !"_ZN6tflite14GetTensorShapeEPK12TfLiteTensor: argument 0"}
!146 = distinct !{!146, !"_ZN6tflite14GetTensorShapeEPK12TfLiteTensor"}
!147 = !{!148}
!148 = distinct !{!148, !149, !"_ZN6tflite14GetTensorShapeEPK12TfLiteTensor: argument 0"}
!149 = distinct !{!149, !"_ZN6tflite14GetTensorShapeEPK12TfLiteTensor"}
!150 = !{!151}
!151 = distinct !{!151, !152, !"_ZN6tflite14GetTensorShapeEPK12TfLiteTensor: argument 0"}
!152 = distinct !{!152, !"_ZN6tflite14GetTensorShapeEPK12TfLiteTensor"}
!153 = !{!154}
!154 = distinct !{!154, !155, !"_ZN6tflite14GetTensorShapeEPK12TfLiteTensor: argument 0"}
!155 = distinct !{!155, !"_ZN6tflite14GetTensorShapeEPK12TfLiteTensor"}
!156 = !{!157}
!157 = distinct !{!157, !158, !"_ZN6tflite14GetTensorShapeEPK12TfLiteTensor: argument 0"}
!158 = distinct !{!158, !"_ZN6tflite14GetTensorShapeEPK12TfLiteTensor"}
!159 = distinct !{!159, !21}
!160 = distinct !{!160, !23}
!161 = distinct !{!161, !25, !21}
!162 = !{!163}
!163 = distinct !{!163, !164, !"_ZN6tflite14GetTensorShapeEPK12TfLiteTensor: argument 0"}
!164 = distinct !{!164, !"_ZN6tflite14GetTensorShapeEPK12TfLiteTensor"}
!165 = !{!166}
!166 = distinct !{!166, !167, !"_ZN6tflite14GetTensorShapeEPK12TfLiteTensor: argument 0"}
!167 = distinct !{!167, !"_ZN6tflite14GetTensorShapeEPK12TfLiteTensor"}
!168 = !{!169}
!169 = distinct !{!169, !170, !"_ZN6tflite14GetTensorShapeEPK12TfLiteTensor: argument 0"}
!170 = distinct !{!170, !"_ZN6tflite14GetTensorShapeEPK12TfLiteTensor"}
!171 = !{!172}
!172 = distinct !{!172, !173, !"_ZN6tflite14GetTensorShapeEPK12TfLiteTensor: argument 0"}
!173 = distinct !{!173, !"_ZN6tflite14GetTensorShapeEPK12TfLiteTensor"}
!174 = !{!175}
!175 = distinct !{!175, !176, !"_ZN6tflite14GetTensorShapeEPK12TfLiteTensor: argument 0"}
!176 = distinct !{!176, !"_ZN6tflite14GetTensorShapeEPK12TfLiteTensor"}
!177 = !{!178}
!178 = distinct !{!178, !179, !"_ZN6tflite14GetTensorShapeEPK12TfLiteTensor: argument 0"}
!179 = distinct !{!179, !"_ZN6tflite14GetTensorShapeEPK12TfLiteTensor"}
!180 = distinct !{!180, !21}
!181 = distinct !{!181, !23}
!182 = distinct !{!182, !25, !21}
!183 = !{!184}
!184 = distinct !{!184, !185}
!185 = distinct !{!185, !"LVerDomain"}
!186 = !{!187}
!187 = distinct !{!187, !185}
!188 = !{!189}
!189 = distinct !{!189, !185}
!190 = !{!184, !187}
!191 = distinct !{!191, !21}
!192 = distinct !{!192, !21}
!193 = !{!194}
!194 = distinct !{!194, !195, !"_ZN6tflite14GetTensorShapeEPK12TfLiteTensor: argument 0"}
!195 = distinct !{!195, !"_ZN6tflite14GetTensorShapeEPK12TfLiteTensor"}
!196 = !{!197}
!197 = distinct !{!197, !198, !"_ZN6tflite14GetTensorShapeEPK12TfLiteTensor: argument 0"}
!198 = distinct !{!198, !"_ZN6tflite14GetTensorShapeEPK12TfLiteTensor"}
!199 = !{!200}
!200 = distinct !{!200, !201, !"_ZN6tflite14GetTensorShapeEPK12TfLiteTensor: argument 0"}
!201 = distinct !{!201, !"_ZN6tflite14GetTensorShapeEPK12TfLiteTensor"}
!202 = !{!203}
!203 = distinct !{!203, !204, !"_ZN6tflite14GetTensorShapeEPK12TfLiteTensor: argument 0"}
!204 = distinct !{!204, !"_ZN6tflite14GetTensorShapeEPK12TfLiteTensor"}
!205 = !{!206}
!206 = distinct !{!206, !207, !"_ZN6tflite14GetTensorShapeEPK12TfLiteTensor: argument 0"}
!207 = distinct !{!207, !"_ZN6tflite14GetTensorShapeEPK12TfLiteTensor"}
!208 = !{!209}
!209 = distinct !{!209, !210, !"_ZN6tflite14GetTensorShapeEPK12TfLiteTensor: argument 0"}
!210 = distinct !{!210, !"_ZN6tflite14GetTensorShapeEPK12TfLiteTensor"}
!211 = distinct !{!211, !21}
!212 = distinct !{!212, !23}
!213 = distinct !{!213, !25, !21}
!214 = !{!215}
!215 = distinct !{!215, !216}
!216 = distinct !{!216, !"LVerDomain"}
!217 = !{!218}
!218 = distinct !{!218, !216}
!219 = !{!220}
!220 = distinct !{!220, !216}
!221 = !{!218, !215}
!222 = distinct !{!222, !21}
!223 = distinct !{!223, !21}
!224 = !{!225}
!225 = distinct !{!225, !226, !"_ZN6tflite14GetTensorShapeEPK12TfLiteTensor: argument 0"}
!226 = distinct !{!226, !"_ZN6tflite14GetTensorShapeEPK12TfLiteTensor"}
!227 = !{!228}
!228 = distinct !{!228, !229, !"_ZN6tflite14GetTensorShapeEPK12TfLiteTensor: argument 0"}
!229 = distinct !{!229, !"_ZN6tflite14GetTensorShapeEPK12TfLiteTensor"}
!230 = !{!231}
!231 = distinct !{!231, !232, !"_ZN6tflite14GetTensorShapeEPK12TfLiteTensor: argument 0"}
!232 = distinct !{!232, !"_ZN6tflite14GetTensorShapeEPK12TfLiteTensor"}
!233 = !{!234}
!234 = distinct !{!234, !235, !"_ZN6tflite14GetTensorShapeEPK12TfLiteTensor: argument 0"}
!235 = distinct !{!235, !"_ZN6tflite14GetTensorShapeEPK12TfLiteTensor"}
!236 = !{!237}
!237 = distinct !{!237, !238, !"_ZN6tflite14GetTensorShapeEPK12TfLiteTensor: argument 0"}
!238 = distinct !{!238, !"_ZN6tflite14GetTensorShapeEPK12TfLiteTensor"}
!239 = !{!240}
!240 = distinct !{!240, !241, !"_ZN6tflite14GetTensorShapeEPK12TfLiteTensor: argument 0"}
!241 = distinct !{!241, !"_ZN6tflite14GetTensorShapeEPK12TfLiteTensor"}
!242 = distinct !{!242, !21}
!243 = distinct !{!243, !23}
!244 = distinct !{!244, !25, !21}
!245 = !{!246}
!246 = distinct !{!246, !247}
!247 = distinct !{!247, !"LVerDomain"}
!248 = !{!249}
!249 = distinct !{!249, !247}
!250 = !{!251}
!251 = distinct !{!251, !247}
!252 = !{!249, !246}
!253 = distinct !{!253, !21}
!254 = distinct !{!254, !21}
!255 = !{!256}
!256 = distinct !{!256, !257, !"_ZN6tflite14GetTensorShapeEPK12TfLiteTensor: argument 0"}
!257 = distinct !{!257, !"_ZN6tflite14GetTensorShapeEPK12TfLiteTensor"}
!258 = !{!259}
!259 = distinct !{!259, !260, !"_ZN6tflite14GetTensorShapeEPK12TfLiteTensor: argument 0"}
!260 = distinct !{!260, !"_ZN6tflite14GetTensorShapeEPK12TfLiteTensor"}
!261 = !{!262}
!262 = distinct !{!262, !263, !"_ZN6tflite14GetTensorShapeEPK12TfLiteTensor: argument 0"}
!263 = distinct !{!263, !"_ZN6tflite14GetTensorShapeEPK12TfLiteTensor"}
!264 = !{!265}
!265 = distinct !{!265, !266, !"_ZN6tflite14GetTensorShapeEPK12TfLiteTensor: argument 0"}
!266 = distinct !{!266, !"_ZN6tflite14GetTensorShapeEPK12TfLiteTensor"}
!267 = !{!268}
!268 = distinct !{!268, !269, !"_ZN6tflite14GetTensorShapeEPK12TfLiteTensor: argument 0"}
!269 = distinct !{!269, !"_ZN6tflite14GetTensorShapeEPK12TfLiteTensor"}
!270 = !{!271}
!271 = distinct !{!271, !272, !"_ZN6tflite14GetTensorShapeEPK12TfLiteTensor: argument 0"}
!272 = distinct !{!272, !"_ZN6tflite14GetTensorShapeEPK12TfLiteTensor"}
!273 = distinct !{!273, !21}
!274 = distinct !{!274, !23}
!275 = distinct !{!275, !25, !21}
!276 = !{!277}
!277 = distinct !{!277, !278, !"_ZN6tflite14GetTensorShapeEPK12TfLiteTensor: argument 0"}
!278 = distinct !{!278, !"_ZN6tflite14GetTensorShapeEPK12TfLiteTensor"}
!279 = !{!280}
!280 = distinct !{!280, !281, !"_ZN6tflite14GetTensorShapeEPK12TfLiteTensor: argument 0"}
!281 = distinct !{!281, !"_ZN6tflite14GetTensorShapeEPK12TfLiteTensor"}
!282 = !{!283}
!283 = distinct !{!283, !284, !"_ZN6tflite14GetTensorShapeEPK12TfLiteTensor: argument 0"}
!284 = distinct !{!284, !"_ZN6tflite14GetTensorShapeEPK12TfLiteTensor"}
!285 = !{!286}
!286 = distinct !{!286, !287, !"_ZN6tflite14GetTensorShapeEPK12TfLiteTensor: argument 0"}
!287 = distinct !{!287, !"_ZN6tflite14GetTensorShapeEPK12TfLiteTensor"}
!288 = !{!289}
!289 = distinct !{!289, !290, !"_ZN6tflite14GetTensorShapeEPK12TfLiteTensor: argument 0"}
!290 = distinct !{!290, !"_ZN6tflite14GetTensorShapeEPK12TfLiteTensor"}
!291 = !{!292}
!292 = distinct !{!292, !293, !"_ZN6tflite14GetTensorShapeEPK12TfLiteTensor: argument 0"}
!293 = distinct !{!293, !"_ZN6tflite14GetTensorShapeEPK12TfLiteTensor"}
!294 = distinct !{!294, !21}
!295 = distinct !{!295, !23}
!296 = distinct !{!296, !25, !21}
!297 = !{!298}
!298 = distinct !{!298, !299, !"_ZN6tflite14GetTensorShapeEPK12TfLiteTensor: argument 0"}
!299 = distinct !{!299, !"_ZN6tflite14GetTensorShapeEPK12TfLiteTensor"}
!300 = !{!301}
!301 = distinct !{!301, !302, !"_ZN6tflite14GetTensorShapeEPK12TfLiteTensor: argument 0"}
!302 = distinct !{!302, !"_ZN6tflite14GetTensorShapeEPK12TfLiteTensor"}
!303 = !{!304}
!304 = distinct !{!304, !305, !"_ZN6tflite14GetTensorShapeEPK12TfLiteTensor: argument 0"}
!305 = distinct !{!305, !"_ZN6tflite14GetTensorShapeEPK12TfLiteTensor"}
!306 = !{!307}
!307 = distinct !{!307, !308, !"_ZN6tflite14GetTensorShapeEPK12TfLiteTensor: argument 0"}
!308 = distinct !{!308, !"_ZN6tflite14GetTensorShapeEPK12TfLiteTensor"}
!309 = !{!310}
!310 = distinct !{!310, !311, !"_ZN6tflite14GetTensorShapeEPK12TfLiteTensor: argument 0"}
!311 = distinct !{!311, !"_ZN6tflite14GetTensorShapeEPK12TfLiteTensor"}
!312 = !{!313}
!313 = distinct !{!313, !314, !"_ZN6tflite14GetTensorShapeEPK12TfLiteTensor: argument 0"}
!314 = distinct !{!314, !"_ZN6tflite14GetTensorShapeEPK12TfLiteTensor"}
!315 = distinct !{!315, !21}
!316 = distinct !{!316, !23}
!317 = distinct !{!317, !25, !21}
!318 = !{!319}
!319 = distinct !{!319, !320, !"_ZN6tflite14GetTensorShapeEPK12TfLiteTensor: argument 0"}
!320 = distinct !{!320, !"_ZN6tflite14GetTensorShapeEPK12TfLiteTensor"}
!321 = !{!322}
!322 = distinct !{!322, !323, !"_ZN6tflite14GetTensorShapeEPK12TfLiteTensor: argument 0"}
!323 = distinct !{!323, !"_ZN6tflite14GetTensorShapeEPK12TfLiteTensor"}
!324 = !{!325}
!325 = distinct !{!325, !326, !"_ZN6tflite14GetTensorShapeEPK12TfLiteTensor: argument 0"}
!326 = distinct !{!326, !"_ZN6tflite14GetTensorShapeEPK12TfLiteTensor"}
!327 = !{!328}
!328 = distinct !{!328, !329, !"_ZN6tflite14GetTensorShapeEPK12TfLiteTensor: argument 0"}
!329 = distinct !{!329, !"_ZN6tflite14GetTensorShapeEPK12TfLiteTensor"}
!330 = !{!331}
!331 = distinct !{!331, !332, !"_ZN6tflite14GetTensorShapeEPK12TfLiteTensor: argument 0"}
!332 = distinct !{!332, !"_ZN6tflite14GetTensorShapeEPK12TfLiteTensor"}
!333 = !{!334}
!334 = distinct !{!334, !335, !"_ZN6tflite14GetTensorShapeEPK12TfLiteTensor: argument 0"}
!335 = distinct !{!335, !"_ZN6tflite14GetTensorShapeEPK12TfLiteTensor"}
!336 = distinct !{!336, !21}
!337 = distinct !{!337, !23}
!338 = distinct !{!338, !25, !21}
!339 = !{!340}
!340 = distinct !{!340, !341}
!341 = distinct !{!341, !"LVerDomain"}
!342 = !{!343}
!343 = distinct !{!343, !341}
!344 = !{!345}
!345 = distinct !{!345, !341}
!346 = !{!343, !340}
!347 = distinct !{!347, !21}
!348 = distinct !{!348, !21}
!349 = !{!350}
!350 = distinct !{!350, !351, !"_ZN6tflite14GetTensorShapeEPK12TfLiteTensor: argument 0"}
!351 = distinct !{!351, !"_ZN6tflite14GetTensorShapeEPK12TfLiteTensor"}
!352 = !{!353}
!353 = distinct !{!353, !354, !"_ZN6tflite14GetTensorShapeEPK12TfLiteTensor: argument 0"}
!354 = distinct !{!354, !"_ZN6tflite14GetTensorShapeEPK12TfLiteTensor"}
!355 = !{!356}
!356 = distinct !{!356, !357, !"_ZN6tflite14GetTensorShapeEPK12TfLiteTensor: argument 0"}
!357 = distinct !{!357, !"_ZN6tflite14GetTensorShapeEPK12TfLiteTensor"}
!358 = !{!359}
!359 = distinct !{!359, !360, !"_ZN6tflite14GetTensorShapeEPK12TfLiteTensor: argument 0"}
!360 = distinct !{!360, !"_ZN6tflite14GetTensorShapeEPK12TfLiteTensor"}
!361 = !{!362}
!362 = distinct !{!362, !363, !"_ZN6tflite14GetTensorShapeEPK12TfLiteTensor: argument 0"}
!363 = distinct !{!363, !"_ZN6tflite14GetTensorShapeEPK12TfLiteTensor"}
!364 = !{!365}
!365 = distinct !{!365, !366, !"_ZN6tflite14GetTensorShapeEPK12TfLiteTensor: argument 0"}
!366 = distinct !{!366, !"_ZN6tflite14GetTensorShapeEPK12TfLiteTensor"}
!367 = distinct !{!367, !21}
!368 = distinct !{!368, !23}
!369 = distinct !{!369, !25, !21}
!370 = !{!371}
!371 = distinct !{!371, !372}
!372 = distinct !{!372, !"LVerDomain"}
!373 = !{!374}
!374 = distinct !{!374, !372}
!375 = !{!376}
!376 = distinct !{!376, !372}
!377 = !{!374, !371}
!378 = distinct !{!378, !21}
!379 = distinct !{!379, !21}
!380 = !{!381}
!381 = distinct !{!381, !382, !"_ZN6tflite14GetTensorShapeEPK12TfLiteTensor: argument 0"}
!382 = distinct !{!382, !"_ZN6tflite14GetTensorShapeEPK12TfLiteTensor"}
!383 = !{!384}
!384 = distinct !{!384, !385, !"_ZN6tflite14GetTensorShapeEPK12TfLiteTensor: argument 0"}
!385 = distinct !{!385, !"_ZN6tflite14GetTensorShapeEPK12TfLiteTensor"}
!386 = !{!387}
!387 = distinct !{!387, !388, !"_ZN6tflite14GetTensorShapeEPK12TfLiteTensor: argument 0"}
!388 = distinct !{!388, !"_ZN6tflite14GetTensorShapeEPK12TfLiteTensor"}
!389 = !{!390}
!390 = distinct !{!390, !391, !"_ZN6tflite14GetTensorShapeEPK12TfLiteTensor: argument 0"}
!391 = distinct !{!391, !"_ZN6tflite14GetTensorShapeEPK12TfLiteTensor"}
!392 = !{!393}
!393 = distinct !{!393, !394, !"_ZN6tflite14GetTensorShapeEPK12TfLiteTensor: argument 0"}
!394 = distinct !{!394, !"_ZN6tflite14GetTensorShapeEPK12TfLiteTensor"}
!395 = !{!396}
!396 = distinct !{!396, !397, !"_ZN6tflite14GetTensorShapeEPK12TfLiteTensor: argument 0"}
!397 = distinct !{!397, !"_ZN6tflite14GetTensorShapeEPK12TfLiteTensor"}
!398 = distinct !{!398, !21}
!399 = distinct !{!399, !23}
!400 = distinct !{!400, !25, !21}
!401 = !{!402}
!402 = distinct !{!402, !403, !"_ZN6tflite14GetTensorShapeEPK12TfLiteTensor: argument 0"}
!403 = distinct !{!403, !"_ZN6tflite14GetTensorShapeEPK12TfLiteTensor"}
!404 = !{!405}
!405 = distinct !{!405, !406, !"_ZN6tflite14GetTensorShapeEPK12TfLiteTensor: argument 0"}
!406 = distinct !{!406, !"_ZN6tflite14GetTensorShapeEPK12TfLiteTensor"}
!407 = !{!408}
!408 = distinct !{!408, !409, !"_ZN6tflite14GetTensorShapeEPK12TfLiteTensor: argument 0"}
!409 = distinct !{!409, !"_ZN6tflite14GetTensorShapeEPK12TfLiteTensor"}
!410 = !{!411}
!411 = distinct !{!411, !412, !"_ZN6tflite14GetTensorShapeEPK12TfLiteTensor: argument 0"}
!412 = distinct !{!412, !"_ZN6tflite14GetTensorShapeEPK12TfLiteTensor"}
!413 = !{!414}
!414 = distinct !{!414, !415, !"_ZN6tflite14GetTensorShapeEPK12TfLiteTensor: argument 0"}
!415 = distinct !{!415, !"_ZN6tflite14GetTensorShapeEPK12TfLiteTensor"}
!416 = !{!417}
!417 = distinct !{!417, !418, !"_ZN6tflite14GetTensorShapeEPK12TfLiteTensor: argument 0"}
!418 = distinct !{!418, !"_ZN6tflite14GetTensorShapeEPK12TfLiteTensor"}
!419 = distinct !{!419, !21}
!420 = distinct !{!420, !23}
!421 = distinct !{!421, !25, !21}
!422 = !{!423}
!423 = distinct !{!423, !424, !"_ZN6tflite14GetTensorShapeEPK12TfLiteTensor: argument 0"}
!424 = distinct !{!424, !"_ZN6tflite14GetTensorShapeEPK12TfLiteTensor"}
!425 = !{!426}
!426 = distinct !{!426, !427, !"_ZN6tflite14GetTensorShapeEPK12TfLiteTensor: argument 0"}
!427 = distinct !{!427, !"_ZN6tflite14GetTensorShapeEPK12TfLiteTensor"}
!428 = !{!429}
!429 = distinct !{!429, !430, !"_ZN6tflite14GetTensorShapeEPK12TfLiteTensor: argument 0"}
!430 = distinct !{!430, !"_ZN6tflite14GetTensorShapeEPK12TfLiteTensor"}
!431 = !{!432}
!432 = distinct !{!432, !433, !"_ZN6tflite14GetTensorShapeEPK12TfLiteTensor: argument 0"}
!433 = distinct !{!433, !"_ZN6tflite14GetTensorShapeEPK12TfLiteTensor"}
!434 = !{!435}
!435 = distinct !{!435, !436, !"_ZN6tflite14GetTensorShapeEPK12TfLiteTensor: argument 0"}
!436 = distinct !{!436, !"_ZN6tflite14GetTensorShapeEPK12TfLiteTensor"}
!437 = !{!438}
!438 = distinct !{!438, !439, !"_ZN6tflite14GetTensorShapeEPK12TfLiteTensor: argument 0"}
!439 = distinct !{!439, !"_ZN6tflite14GetTensorShapeEPK12TfLiteTensor"}
!440 = distinct !{!440, !21}
!441 = distinct !{!441, !23}
!442 = distinct !{!442, !25, !21}
!443 = !{!444}
!444 = distinct !{!444, !445, !"_ZN6tflite14GetTensorShapeEPK12TfLiteTensor: argument 0"}
!445 = distinct !{!445, !"_ZN6tflite14GetTensorShapeEPK12TfLiteTensor"}
!446 = !{!447}
!447 = distinct !{!447, !448, !"_ZN6tflite14GetTensorShapeEPK12TfLiteTensor: argument 0"}
!448 = distinct !{!448, !"_ZN6tflite14GetTensorShapeEPK12TfLiteTensor"}
!449 = !{!450}
!450 = distinct !{!450, !451, !"_ZN6tflite14GetTensorShapeEPK12TfLiteTensor: argument 0"}
!451 = distinct !{!451, !"_ZN6tflite14GetTensorShapeEPK12TfLiteTensor"}
!452 = !{!453}
!453 = distinct !{!453, !454, !"_ZN6tflite14GetTensorShapeEPK12TfLiteTensor: argument 0"}
!454 = distinct !{!454, !"_ZN6tflite14GetTensorShapeEPK12TfLiteTensor"}
!455 = !{!456}
!456 = distinct !{!456, !457, !"_ZN6tflite14GetTensorShapeEPK12TfLiteTensor: argument 0"}
!457 = distinct !{!457, !"_ZN6tflite14GetTensorShapeEPK12TfLiteTensor"}
!458 = !{!459}
!459 = distinct !{!459, !460, !"_ZN6tflite14GetTensorShapeEPK12TfLiteTensor: argument 0"}
!460 = distinct !{!460, !"_ZN6tflite14GetTensorShapeEPK12TfLiteTensor"}
!461 = distinct !{!461, !21}
!462 = distinct !{!462, !23}
!463 = distinct !{!463, !25, !21}
!464 = !{!465}
!465 = distinct !{!465, !466}
!466 = distinct !{!466, !"LVerDomain"}
!467 = !{!468}
!468 = distinct !{!468, !466}
!469 = !{!470}
!470 = distinct !{!470, !466}
!471 = !{!468, !465}
!472 = distinct !{!472, !21}
!473 = distinct !{!473, !21}
!474 = !{!475}
!475 = distinct !{!475, !476, !"_ZN6tflite14GetTensorShapeEPK12TfLiteTensor: argument 0"}
!476 = distinct !{!476, !"_ZN6tflite14GetTensorShapeEPK12TfLiteTensor"}
!477 = !{!478}
!478 = distinct !{!478, !479, !"_ZN6tflite14GetTensorShapeEPK12TfLiteTensor: argument 0"}
!479 = distinct !{!479, !"_ZN6tflite14GetTensorShapeEPK12TfLiteTensor"}
!480 = !{!481}
!481 = distinct !{!481, !482, !"_ZN6tflite14GetTensorShapeEPK12TfLiteTensor: argument 0"}
!482 = distinct !{!482, !"_ZN6tflite14GetTensorShapeEPK12TfLiteTensor"}
!483 = !{!484}
!484 = distinct !{!484, !485, !"_ZN6tflite14GetTensorShapeEPK12TfLiteTensor: argument 0"}
!485 = distinct !{!485, !"_ZN6tflite14GetTensorShapeEPK12TfLiteTensor"}
!486 = !{!487}
!487 = distinct !{!487, !488, !"_ZN6tflite14GetTensorShapeEPK12TfLiteTensor: argument 0"}
!488 = distinct !{!488, !"_ZN6tflite14GetTensorShapeEPK12TfLiteTensor"}
!489 = !{!490}
!490 = distinct !{!490, !491, !"_ZN6tflite14GetTensorShapeEPK12TfLiteTensor: argument 0"}
!491 = distinct !{!491, !"_ZN6tflite14GetTensorShapeEPK12TfLiteTensor"}
!492 = distinct !{!492, !21}
!493 = distinct !{!493, !23}
!494 = distinct !{!494, !25, !21}
!495 = !{!496}
!496 = distinct !{!496, !497}
!497 = distinct !{!497, !"LVerDomain"}
!498 = !{!499}
!499 = distinct !{!499, !497}
!500 = !{!501}
!501 = distinct !{!501, !497}
!502 = !{!499, !496}
!503 = distinct !{!503, !21}
!504 = distinct !{!504, !21}
!505 = !{!506}
!506 = distinct !{!506, !507, !"_ZN6tflite14GetTensorShapeEPK12TfLiteTensor: argument 0"}
!507 = distinct !{!507, !"_ZN6tflite14GetTensorShapeEPK12TfLiteTensor"}
!508 = !{!509}
!509 = distinct !{!509, !510, !"_ZN6tflite14GetTensorShapeEPK12TfLiteTensor: argument 0"}
!510 = distinct !{!510, !"_ZN6tflite14GetTensorShapeEPK12TfLiteTensor"}
!511 = !{!512}
!512 = distinct !{!512, !513, !"_ZN6tflite14GetTensorShapeEPK12TfLiteTensor: argument 0"}
!513 = distinct !{!513, !"_ZN6tflite14GetTensorShapeEPK12TfLiteTensor"}
!514 = !{!515}
!515 = distinct !{!515, !516, !"_ZN6tflite14GetTensorShapeEPK12TfLiteTensor: argument 0"}
!516 = distinct !{!516, !"_ZN6tflite14GetTensorShapeEPK12TfLiteTensor"}
!517 = !{!518}
!518 = distinct !{!518, !519, !"_ZN6tflite14GetTensorShapeEPK12TfLiteTensor: argument 0"}
!519 = distinct !{!519, !"_ZN6tflite14GetTensorShapeEPK12TfLiteTensor"}
!520 = !{!521}
!521 = distinct !{!521, !522, !"_ZN6tflite14GetTensorShapeEPK12TfLiteTensor: argument 0"}
!522 = distinct !{!522, !"_ZN6tflite14GetTensorShapeEPK12TfLiteTensor"}
!523 = distinct !{!523, !21}
!524 = distinct !{!524, !23}
!525 = distinct !{!525, !25, !21}
!526 = !{!527}
!527 = distinct !{!527, !528, !"_ZN6tflite14GetTensorShapeEPK12TfLiteTensor: argument 0"}
!528 = distinct !{!528, !"_ZN6tflite14GetTensorShapeEPK12TfLiteTensor"}
!529 = !{!530}
!530 = distinct !{!530, !531, !"_ZN6tflite14GetTensorShapeEPK12TfLiteTensor: argument 0"}
!531 = distinct !{!531, !"_ZN6tflite14GetTensorShapeEPK12TfLiteTensor"}
!532 = !{!533}
!533 = distinct !{!533, !534, !"_ZN6tflite14GetTensorShapeEPK12TfLiteTensor: argument 0"}
!534 = distinct !{!534, !"_ZN6tflite14GetTensorShapeEPK12TfLiteTensor"}
!535 = !{!536}
!536 = distinct !{!536, !537, !"_ZN6tflite14GetTensorShapeEPK12TfLiteTensor: argument 0"}
!537 = distinct !{!537, !"_ZN6tflite14GetTensorShapeEPK12TfLiteTensor"}
!538 = !{!539}
!539 = distinct !{!539, !540, !"_ZN6tflite14GetTensorShapeEPK12TfLiteTensor: argument 0"}
!540 = distinct !{!540, !"_ZN6tflite14GetTensorShapeEPK12TfLiteTensor"}
!541 = !{!542}
!542 = distinct !{!542, !543, !"_ZN6tflite14GetTensorShapeEPK12TfLiteTensor: argument 0"}
!543 = distinct !{!543, !"_ZN6tflite14GetTensorShapeEPK12TfLiteTensor"}
!544 = distinct !{!544, !21}
!545 = distinct !{!545, !23}
!546 = distinct !{!546, !25, !21}
!547 = !{!548}
!548 = distinct !{!548, !549, !"_ZN6tflite14GetTensorShapeEPK12TfLiteTensor: argument 0"}
!549 = distinct !{!549, !"_ZN6tflite14GetTensorShapeEPK12TfLiteTensor"}
!550 = !{!551}
!551 = distinct !{!551, !552, !"_ZN6tflite14GetTensorShapeEPK12TfLiteTensor: argument 0"}
!552 = distinct !{!552, !"_ZN6tflite14GetTensorShapeEPK12TfLiteTensor"}
!553 = !{!554}
!554 = distinct !{!554, !555, !"_ZN6tflite14GetTensorShapeEPK12TfLiteTensor: argument 0"}
!555 = distinct !{!555, !"_ZN6tflite14GetTensorShapeEPK12TfLiteTensor"}
!556 = !{!557}
!557 = distinct !{!557, !558, !"_ZN6tflite14GetTensorShapeEPK12TfLiteTensor: argument 0"}
!558 = distinct !{!558, !"_ZN6tflite14GetTensorShapeEPK12TfLiteTensor"}
!559 = !{!560}
!560 = distinct !{!560, !561, !"_ZN6tflite14GetTensorShapeEPK12TfLiteTensor: argument 0"}
!561 = distinct !{!561, !"_ZN6tflite14GetTensorShapeEPK12TfLiteTensor"}
!562 = !{!563}
!563 = distinct !{!563, !564, !"_ZN6tflite14GetTensorShapeEPK12TfLiteTensor: argument 0"}
!564 = distinct !{!564, !"_ZN6tflite14GetTensorShapeEPK12TfLiteTensor"}
!565 = distinct !{!565, !21}
!566 = distinct !{!566, !23}
!567 = distinct !{!567, !25, !21}
!568 = !{!569}
!569 = distinct !{!569, !570, !"_ZN6tflite14GetTensorShapeEPK12TfLiteTensor: argument 0"}
!570 = distinct !{!570, !"_ZN6tflite14GetTensorShapeEPK12TfLiteTensor"}
!571 = !{!572}
!572 = distinct !{!572, !573, !"_ZN6tflite14GetTensorShapeEPK12TfLiteTensor: argument 0"}
!573 = distinct !{!573, !"_ZN6tflite14GetTensorShapeEPK12TfLiteTensor"}
!574 = !{!575}
!575 = distinct !{!575, !576, !"_ZN6tflite14GetTensorShapeEPK12TfLiteTensor: argument 0"}
!576 = distinct !{!576, !"_ZN6tflite14GetTensorShapeEPK12TfLiteTensor"}
!577 = !{!578}
!578 = distinct !{!578, !579, !"_ZN6tflite14GetTensorShapeEPK12TfLiteTensor: argument 0"}
!579 = distinct !{!579, !"_ZN6tflite14GetTensorShapeEPK12TfLiteTensor"}
!580 = !{!581}
!581 = distinct !{!581, !582, !"_ZN6tflite14GetTensorShapeEPK12TfLiteTensor: argument 0"}
!582 = distinct !{!582, !"_ZN6tflite14GetTensorShapeEPK12TfLiteTensor"}
!583 = !{!584}
!584 = distinct !{!584, !585, !"_ZN6tflite14GetTensorShapeEPK12TfLiteTensor: argument 0"}
!585 = distinct !{!585, !"_ZN6tflite14GetTensorShapeEPK12TfLiteTensor"}
!586 = distinct !{!586, !21}
!587 = distinct !{!587, !23}
!588 = distinct !{!588, !25, !21}
!589 = !{!590}
!590 = distinct !{!590, !591}
!591 = distinct !{!591, !"LVerDomain"}
!592 = !{!593}
!593 = distinct !{!593, !591}
!594 = !{!595}
!595 = distinct !{!595, !591}
!596 = !{!593, !590}
!597 = distinct !{!597, !21}
!598 = distinct !{!598, !21}
!599 = !{!600}
!600 = distinct !{!600, !601, !"_ZN6tflite14GetTensorShapeEPK12TfLiteTensor: argument 0"}
!601 = distinct !{!601, !"_ZN6tflite14GetTensorShapeEPK12TfLiteTensor"}
!602 = !{!603}
!603 = distinct !{!603, !604, !"_ZN6tflite14GetTensorShapeEPK12TfLiteTensor: argument 0"}
!604 = distinct !{!604, !"_ZN6tflite14GetTensorShapeEPK12TfLiteTensor"}
!605 = !{!606}
!606 = distinct !{!606, !607, !"_ZN6tflite14GetTensorShapeEPK12TfLiteTensor: argument 0"}
!607 = distinct !{!607, !"_ZN6tflite14GetTensorShapeEPK12TfLiteTensor"}
!608 = !{!609}
!609 = distinct !{!609, !610, !"_ZN6tflite14GetTensorShapeEPK12TfLiteTensor: argument 0"}
!610 = distinct !{!610, !"_ZN6tflite14GetTensorShapeEPK12TfLiteTensor"}
!611 = !{!612}
!612 = distinct !{!612, !613, !"_ZN6tflite14GetTensorShapeEPK12TfLiteTensor: argument 0"}
!613 = distinct !{!613, !"_ZN6tflite14GetTensorShapeEPK12TfLiteTensor"}
!614 = !{!615}
!615 = distinct !{!615, !616, !"_ZN6tflite14GetTensorShapeEPK12TfLiteTensor: argument 0"}
!616 = distinct !{!616, !"_ZN6tflite14GetTensorShapeEPK12TfLiteTensor"}
!617 = distinct !{!617, !21}
!618 = distinct !{!618, !23}
!619 = distinct !{!619, !25, !21}
!620 = !{!621}
!621 = distinct !{!621, !622}
!622 = distinct !{!622, !"LVerDomain"}
!623 = !{!624}
!624 = distinct !{!624, !622}
!625 = !{!626}
!626 = distinct !{!626, !622}
!627 = !{!624, !621}
!628 = distinct !{!628, !21}
!629 = distinct !{!629, !21}
!630 = !{!631}
!631 = distinct !{!631, !632, !"_ZN6tflite14GetTensorShapeEPK12TfLiteTensor: argument 0"}
!632 = distinct !{!632, !"_ZN6tflite14GetTensorShapeEPK12TfLiteTensor"}
!633 = !{!634}
!634 = distinct !{!634, !635, !"_ZN6tflite14GetTensorShapeEPK12TfLiteTensor: argument 0"}
!635 = distinct !{!635, !"_ZN6tflite14GetTensorShapeEPK12TfLiteTensor"}
!636 = !{!637}
!637 = distinct !{!637, !638, !"_ZN6tflite14GetTensorShapeEPK12TfLiteTensor: argument 0"}
!638 = distinct !{!638, !"_ZN6tflite14GetTensorShapeEPK12TfLiteTensor"}
!639 = !{!640}
!640 = distinct !{!640, !641, !"_ZN6tflite14GetTensorShapeEPK12TfLiteTensor: argument 0"}
!641 = distinct !{!641, !"_ZN6tflite14GetTensorShapeEPK12TfLiteTensor"}
!642 = !{!643}
!643 = distinct !{!643, !644, !"_ZN6tflite14GetTensorShapeEPK12TfLiteTensor: argument 0"}
!644 = distinct !{!644, !"_ZN6tflite14GetTensorShapeEPK12TfLiteTensor"}
!645 = !{!646}
!646 = distinct !{!646, !647, !"_ZN6tflite14GetTensorShapeEPK12TfLiteTensor: argument 0"}
!647 = distinct !{!647, !"_ZN6tflite14GetTensorShapeEPK12TfLiteTensor"}
!648 = distinct !{!648, !21}
!649 = distinct !{!649, !23}
!650 = distinct !{!650, !25, !21}
!651 = !{!652}
!652 = distinct !{!652, !653, !"_ZN6tflite14GetTensorShapeEPK12TfLiteTensor: argument 0"}
!653 = distinct !{!653, !"_ZN6tflite14GetTensorShapeEPK12TfLiteTensor"}
!654 = !{!655}
!655 = distinct !{!655, !656, !"_ZN6tflite14GetTensorShapeEPK12TfLiteTensor: argument 0"}
!656 = distinct !{!656, !"_ZN6tflite14GetTensorShapeEPK12TfLiteTensor"}
!657 = !{!658}
!658 = distinct !{!658, !659, !"_ZN6tflite14GetTensorShapeEPK12TfLiteTensor: argument 0"}
!659 = distinct !{!659, !"_ZN6tflite14GetTensorShapeEPK12TfLiteTensor"}
!660 = !{!661}
!661 = distinct !{!661, !662, !"_ZN6tflite14GetTensorShapeEPK12TfLiteTensor: argument 0"}
!662 = distinct !{!662, !"_ZN6tflite14GetTensorShapeEPK12TfLiteTensor"}
!663 = !{!664}
!664 = distinct !{!664, !665, !"_ZN6tflite14GetTensorShapeEPK12TfLiteTensor: argument 0"}
!665 = distinct !{!665, !"_ZN6tflite14GetTensorShapeEPK12TfLiteTensor"}
!666 = !{!667}
!667 = distinct !{!667, !668, !"_ZN6tflite14GetTensorShapeEPK12TfLiteTensor: argument 0"}
!668 = distinct !{!668, !"_ZN6tflite14GetTensorShapeEPK12TfLiteTensor"}
!669 = distinct !{!669, !21}
!670 = distinct !{!670, !23}
!671 = distinct !{!671, !25, !21}
!672 = !{!673}
!673 = distinct !{!673, !674, !"_ZN6tflite14GetTensorShapeEPK12TfLiteTensor: argument 0"}
!674 = distinct !{!674, !"_ZN6tflite14GetTensorShapeEPK12TfLiteTensor"}
!675 = !{!676}
!676 = distinct !{!676, !677, !"_ZN6tflite14GetTensorShapeEPK12TfLiteTensor: argument 0"}
!677 = distinct !{!677, !"_ZN6tflite14GetTensorShapeEPK12TfLiteTensor"}
!678 = !{!679}
!679 = distinct !{!679, !680, !"_ZN6tflite14GetTensorShapeEPK12TfLiteTensor: argument 0"}
!680 = distinct !{!680, !"_ZN6tflite14GetTensorShapeEPK12TfLiteTensor"}
!681 = !{!682}
!682 = distinct !{!682, !683, !"_ZN6tflite14GetTensorShapeEPK12TfLiteTensor: argument 0"}
!683 = distinct !{!683, !"_ZN6tflite14GetTensorShapeEPK12TfLiteTensor"}
!684 = !{!685}
!685 = distinct !{!685, !686, !"_ZN6tflite14GetTensorShapeEPK12TfLiteTensor: argument 0"}
!686 = distinct !{!686, !"_ZN6tflite14GetTensorShapeEPK12TfLiteTensor"}
!687 = !{!688}
!688 = distinct !{!688, !689, !"_ZN6tflite14GetTensorShapeEPK12TfLiteTensor: argument 0"}
!689 = distinct !{!689, !"_ZN6tflite14GetTensorShapeEPK12TfLiteTensor"}
!690 = distinct !{!690, !21}
!691 = distinct !{!691, !23}
!692 = distinct !{!692, !25, !21}
!693 = !{!694}
!694 = distinct !{!694, !695, !"_ZN6tflite14GetTensorShapeEPK12TfLiteTensor: argument 0"}
!695 = distinct !{!695, !"_ZN6tflite14GetTensorShapeEPK12TfLiteTensor"}
!696 = !{!697}
!697 = distinct !{!697, !698, !"_ZN6tflite14GetTensorShapeEPK12TfLiteTensor: argument 0"}
!698 = distinct !{!698, !"_ZN6tflite14GetTensorShapeEPK12TfLiteTensor"}
!699 = !{!700}
!700 = distinct !{!700, !701, !"_ZN6tflite14GetTensorShapeEPK12TfLiteTensor: argument 0"}
!701 = distinct !{!701, !"_ZN6tflite14GetTensorShapeEPK12TfLiteTensor"}
!702 = !{!703}
!703 = distinct !{!703, !704, !"_ZN6tflite14GetTensorShapeEPK12TfLiteTensor: argument 0"}
!704 = distinct !{!704, !"_ZN6tflite14GetTensorShapeEPK12TfLiteTensor"}
!705 = !{!706}
!706 = distinct !{!706, !707, !"_ZN6tflite14GetTensorShapeEPK12TfLiteTensor: argument 0"}
!707 = distinct !{!707, !"_ZN6tflite14GetTensorShapeEPK12TfLiteTensor"}
!708 = !{!709}
!709 = distinct !{!709, !710, !"_ZN6tflite14GetTensorShapeEPK12TfLiteTensor: argument 0"}
!710 = distinct !{!710, !"_ZN6tflite14GetTensorShapeEPK12TfLiteTensor"}
!711 = distinct !{!711, !21}
!712 = distinct !{!712, !23}
!713 = distinct !{!713, !25, !21}
!714 = !{!715}
!715 = distinct !{!715, !716}
!716 = distinct !{!716, !"LVerDomain"}
!717 = !{!718}
!718 = distinct !{!718, !716}
!719 = !{!720}
!720 = distinct !{!720, !716}
!721 = !{!718, !715}
!722 = distinct !{!722, !21}
!723 = distinct !{!723, !21}
!724 = !{!725}
!725 = distinct !{!725, !726, !"_ZN6tflite14GetTensorShapeEPK12TfLiteTensor: argument 0"}
!726 = distinct !{!726, !"_ZN6tflite14GetTensorShapeEPK12TfLiteTensor"}
!727 = !{!728}
!728 = distinct !{!728, !729, !"_ZN6tflite14GetTensorShapeEPK12TfLiteTensor: argument 0"}
!729 = distinct !{!729, !"_ZN6tflite14GetTensorShapeEPK12TfLiteTensor"}
!730 = !{!731}
!731 = distinct !{!731, !732, !"_ZN6tflite14GetTensorShapeEPK12TfLiteTensor: argument 0"}
!732 = distinct !{!732, !"_ZN6tflite14GetTensorShapeEPK12TfLiteTensor"}
!733 = !{!734}
!734 = distinct !{!734, !735, !"_ZN6tflite14GetTensorShapeEPK12TfLiteTensor: argument 0"}
!735 = distinct !{!735, !"_ZN6tflite14GetTensorShapeEPK12TfLiteTensor"}
!736 = !{!737}
!737 = distinct !{!737, !738, !"_ZN6tflite14GetTensorShapeEPK12TfLiteTensor: argument 0"}
!738 = distinct !{!738, !"_ZN6tflite14GetTensorShapeEPK12TfLiteTensor"}
!739 = !{!740}
!740 = distinct !{!740, !741, !"_ZN6tflite14GetTensorShapeEPK12TfLiteTensor: argument 0"}
!741 = distinct !{!741, !"_ZN6tflite14GetTensorShapeEPK12TfLiteTensor"}
!742 = distinct !{!742, !21}
!743 = distinct !{!743, !23}
!744 = distinct !{!744, !25, !21}
!745 = !{!746}
!746 = distinct !{!746, !747}
!747 = distinct !{!747, !"LVerDomain"}
!748 = !{!749}
!749 = distinct !{!749, !747}
!750 = !{!751}
!751 = distinct !{!751, !747}
!752 = !{!749, !746}
!753 = distinct !{!753, !21}
!754 = distinct !{!754, !21}
!755 = !{!756}
!756 = distinct !{!756, !757, !"_ZN6tflite14GetTensorShapeEPK12TfLiteTensor: argument 0"}
!757 = distinct !{!757, !"_ZN6tflite14GetTensorShapeEPK12TfLiteTensor"}
!758 = !{!759}
!759 = distinct !{!759, !760, !"_ZN6tflite14GetTensorShapeEPK12TfLiteTensor: argument 0"}
!760 = distinct !{!760, !"_ZN6tflite14GetTensorShapeEPK12TfLiteTensor"}
!761 = !{!762}
!762 = distinct !{!762, !763, !"_ZN6tflite14GetTensorShapeEPK12TfLiteTensor: argument 0"}
!763 = distinct !{!763, !"_ZN6tflite14GetTensorShapeEPK12TfLiteTensor"}
!764 = !{!765}
!765 = distinct !{!765, !766, !"_ZN6tflite14GetTensorShapeEPK12TfLiteTensor: argument 0"}
!766 = distinct !{!766, !"_ZN6tflite14GetTensorShapeEPK12TfLiteTensor"}
!767 = !{!768}
!768 = distinct !{!768, !769, !"_ZN6tflite14GetTensorShapeEPK12TfLiteTensor: argument 0"}
!769 = distinct !{!769, !"_ZN6tflite14GetTensorShapeEPK12TfLiteTensor"}
!770 = !{!771}
!771 = distinct !{!771, !772, !"_ZN6tflite14GetTensorShapeEPK12TfLiteTensor: argument 0"}
!772 = distinct !{!772, !"_ZN6tflite14GetTensorShapeEPK12TfLiteTensor"}
!773 = distinct !{!773, !21}
!774 = distinct !{!774, !23}
!775 = distinct !{!775, !25, !21}
!776 = !{!777}
!777 = distinct !{!777, !778, !"_ZN6tflite14GetTensorShapeEPK12TfLiteTensor: argument 0"}
!778 = distinct !{!778, !"_ZN6tflite14GetTensorShapeEPK12TfLiteTensor"}
!779 = !{!780}
!780 = distinct !{!780, !781, !"_ZN6tflite14GetTensorShapeEPK12TfLiteTensor: argument 0"}
!781 = distinct !{!781, !"_ZN6tflite14GetTensorShapeEPK12TfLiteTensor"}
!782 = !{!783}
!783 = distinct !{!783, !784, !"_ZN6tflite14GetTensorShapeEPK12TfLiteTensor: argument 0"}
!784 = distinct !{!784, !"_ZN6tflite14GetTensorShapeEPK12TfLiteTensor"}
!785 = !{!786}
!786 = distinct !{!786, !787, !"_ZN6tflite14GetTensorShapeEPK12TfLiteTensor: argument 0"}
!787 = distinct !{!787, !"_ZN6tflite14GetTensorShapeEPK12TfLiteTensor"}
!788 = !{!789}
!789 = distinct !{!789, !790, !"_ZN6tflite14GetTensorShapeEPK12TfLiteTensor: argument 0"}
!790 = distinct !{!790, !"_ZN6tflite14GetTensorShapeEPK12TfLiteTensor"}
!791 = !{!792}
!792 = distinct !{!792, !793, !"_ZN6tflite14GetTensorShapeEPK12TfLiteTensor: argument 0"}
!793 = distinct !{!793, !"_ZN6tflite14GetTensorShapeEPK12TfLiteTensor"}
!794 = distinct !{!794, !21}
!795 = distinct !{!795, !23}
!796 = distinct !{!796, !25, !21}
!797 = !{!798}
!798 = distinct !{!798, !799, !"_ZN6tflite14GetTensorShapeEPK12TfLiteTensor: argument 0"}
!799 = distinct !{!799, !"_ZN6tflite14GetTensorShapeEPK12TfLiteTensor"}
!800 = !{!801}
!801 = distinct !{!801, !802, !"_ZN6tflite14GetTensorShapeEPK12TfLiteTensor: argument 0"}
!802 = distinct !{!802, !"_ZN6tflite14GetTensorShapeEPK12TfLiteTensor"}
!803 = !{!804}
!804 = distinct !{!804, !805, !"_ZN6tflite14GetTensorShapeEPK12TfLiteTensor: argument 0"}
!805 = distinct !{!805, !"_ZN6tflite14GetTensorShapeEPK12TfLiteTensor"}
!806 = !{!807}
!807 = distinct !{!807, !808, !"_ZN6tflite14GetTensorShapeEPK12TfLiteTensor: argument 0"}
!808 = distinct !{!808, !"_ZN6tflite14GetTensorShapeEPK12TfLiteTensor"}
!809 = !{!810}
!810 = distinct !{!810, !811, !"_ZN6tflite14GetTensorShapeEPK12TfLiteTensor: argument 0"}
!811 = distinct !{!811, !"_ZN6tflite14GetTensorShapeEPK12TfLiteTensor"}
!812 = !{!813}
!813 = distinct !{!813, !814, !"_ZN6tflite14GetTensorShapeEPK12TfLiteTensor: argument 0"}
!814 = distinct !{!814, !"_ZN6tflite14GetTensorShapeEPK12TfLiteTensor"}
!815 = distinct !{!815, !21}
!816 = distinct !{!816, !23}
!817 = distinct !{!817, !25, !21}
!818 = !{!819}
!819 = distinct !{!819, !820, !"_ZN6tflite14GetTensorShapeEPK12TfLiteTensor: argument 0"}
!820 = distinct !{!820, !"_ZN6tflite14GetTensorShapeEPK12TfLiteTensor"}
!821 = !{!822}
!822 = distinct !{!822, !823, !"_ZN6tflite14GetTensorShapeEPK12TfLiteTensor: argument 0"}
!823 = distinct !{!823, !"_ZN6tflite14GetTensorShapeEPK12TfLiteTensor"}
!824 = !{!825}
!825 = distinct !{!825, !826, !"_ZN6tflite14GetTensorShapeEPK12TfLiteTensor: argument 0"}
!826 = distinct !{!826, !"_ZN6tflite14GetTensorShapeEPK12TfLiteTensor"}
!827 = !{!828}
!828 = distinct !{!828, !829, !"_ZN6tflite14GetTensorShapeEPK12TfLiteTensor: argument 0"}
!829 = distinct !{!829, !"_ZN6tflite14GetTensorShapeEPK12TfLiteTensor"}
!830 = !{!831}
!831 = distinct !{!831, !832, !"_ZN6tflite14GetTensorShapeEPK12TfLiteTensor: argument 0"}
!832 = distinct !{!832, !"_ZN6tflite14GetTensorShapeEPK12TfLiteTensor"}
!833 = !{!834}
!834 = distinct !{!834, !835, !"_ZN6tflite14GetTensorShapeEPK12TfLiteTensor: argument 0"}
!835 = distinct !{!835, !"_ZN6tflite14GetTensorShapeEPK12TfLiteTensor"}
!836 = distinct !{!836, !21}
!837 = distinct !{!837, !23}
!838 = distinct !{!838, !25, !21}
!839 = !{!840}
!840 = distinct !{!840, !841, !"_ZN6tflite13reference_ops35BroadcastComparison4DSlowPreprocessERKNS_12RuntimeShapeES3_S3_: argument 0"}
!841 = distinct !{!841, !"_ZN6tflite13reference_ops35BroadcastComparison4DSlowPreprocessERKNS_12RuntimeShapeES3_S3_"}
!842 = !{!843, !840}
!843 = distinct !{!843, !844, !"_ZN6tflite12RuntimeShape13ExtendedShapeEiRKS0_: argument 0"}
!844 = distinct !{!844, !"_ZN6tflite12RuntimeShape13ExtendedShapeEiRKS0_"}
!845 = distinct !{!845, !21}
!846 = distinct !{!846, !23}
!847 = distinct !{!847, !25, !21}
!848 = !{!849}
!849 = distinct !{!849, !850, !"_ZN6tflite12RuntimeShape13ExtendedShapeEiRKS0_: argument 0"}
!850 = distinct !{!850, !"_ZN6tflite12RuntimeShape13ExtendedShapeEiRKS0_"}
!851 = distinct !{!851, !21}
!852 = distinct !{!852, !23}
!853 = distinct !{!853, !25, !21}
!854 = !{!855}
!855 = distinct !{!855, !856, !"_ZN6tflite12RuntimeShape13ExtendedShapeEiRKS0_: argument 0"}
!856 = distinct !{!856, !"_ZN6tflite12RuntimeShape13ExtendedShapeEiRKS0_"}
!857 = distinct !{!857, !21}
!858 = distinct !{!858, !23}
!859 = distinct !{!859, !25, !21}
!860 = !{!861}
!861 = distinct !{!861, !862, !"_ZN6tflite13reference_ops35BroadcastComparison4DSlowPreprocessERKNS_12RuntimeShapeES3_S3_: argument 0"}
!862 = distinct !{!862, !"_ZN6tflite13reference_ops35BroadcastComparison4DSlowPreprocessERKNS_12RuntimeShapeES3_S3_"}
!863 = !{!864, !861}
!864 = distinct !{!864, !865, !"_ZN6tflite12RuntimeShape13ExtendedShapeEiRKS0_: argument 0"}
!865 = distinct !{!865, !"_ZN6tflite12RuntimeShape13ExtendedShapeEiRKS0_"}
!866 = distinct !{!866, !21}
!867 = distinct !{!867, !23}
!868 = distinct !{!868, !25, !21}
!869 = !{!870}
!870 = distinct !{!870, !871, !"_ZN6tflite13reference_ops35BroadcastComparison4DSlowPreprocessERKNS_12RuntimeShapeES3_S3_: argument 0"}
!871 = distinct !{!871, !"_ZN6tflite13reference_ops35BroadcastComparison4DSlowPreprocessERKNS_12RuntimeShapeES3_S3_"}
!872 = !{!873, !870}
!873 = distinct !{!873, !874, !"_ZN6tflite12RuntimeShape13ExtendedShapeEiRKS0_: argument 0"}
!874 = distinct !{!874, !"_ZN6tflite12RuntimeShape13ExtendedShapeEiRKS0_"}
!875 = distinct !{!875, !21}
!876 = distinct !{!876, !23}
!877 = distinct !{!877, !25, !21}
!878 = !{!879}
!879 = distinct !{!879, !880, !"_ZN6tflite13reference_ops35BroadcastComparison4DSlowPreprocessERKNS_12RuntimeShapeES3_S3_: argument 0"}
!880 = distinct !{!880, !"_ZN6tflite13reference_ops35BroadcastComparison4DSlowPreprocessERKNS_12RuntimeShapeES3_S3_"}
!881 = !{!882, !879}
!882 = distinct !{!882, !883, !"_ZN6tflite12RuntimeShape13ExtendedShapeEiRKS0_: argument 0"}
!883 = distinct !{!883, !"_ZN6tflite12RuntimeShape13ExtendedShapeEiRKS0_"}
!884 = distinct !{!884, !21}
!885 = distinct !{!885, !23}
!886 = distinct !{!886, !25, !21}
!887 = !{!888}
!888 = distinct !{!888, !889, !"_ZN6tflite13reference_ops35BroadcastComparison4DSlowPreprocessERKNS_12RuntimeShapeES3_S3_: argument 0"}
!889 = distinct !{!889, !"_ZN6tflite13reference_ops35BroadcastComparison4DSlowPreprocessERKNS_12RuntimeShapeES3_S3_"}
!890 = !{!891, !888}
!891 = distinct !{!891, !892, !"_ZN6tflite12RuntimeShape13ExtendedShapeEiRKS0_: argument 0"}
!892 = distinct !{!892, !"_ZN6tflite12RuntimeShape13ExtendedShapeEiRKS0_"}
!893 = distinct !{!893, !21}
!894 = distinct !{!894, !23}
!895 = distinct !{!895, !25, !21}
!896 = !{!897}
!897 = distinct !{!897, !898, !"_ZN6tflite13reference_ops35BroadcastComparison4DSlowPreprocessERKNS_12RuntimeShapeES3_S3_: argument 0"}
!898 = distinct !{!898, !"_ZN6tflite13reference_ops35BroadcastComparison4DSlowPreprocessERKNS_12RuntimeShapeES3_S3_"}
!899 = !{!900, !897}
!900 = distinct !{!900, !901, !"_ZN6tflite12RuntimeShape13ExtendedShapeEiRKS0_: argument 0"}
!901 = distinct !{!901, !"_ZN6tflite12RuntimeShape13ExtendedShapeEiRKS0_"}
!902 = distinct !{!902, !21}
!903 = distinct !{!903, !23}
!904 = distinct !{!904, !25, !21}
!905 = !{!906}
!906 = distinct !{!906, !907, !"_ZN6tflite13reference_ops35BroadcastComparison4DSlowPreprocessERKNS_12RuntimeShapeES3_S3_: argument 0"}
!907 = distinct !{!907, !"_ZN6tflite13reference_ops35BroadcastComparison4DSlowPreprocessERKNS_12RuntimeShapeES3_S3_"}
!908 = !{!909, !906}
!909 = distinct !{!909, !910, !"_ZN6tflite12RuntimeShape13ExtendedShapeEiRKS0_: argument 0"}
!910 = distinct !{!910, !"_ZN6tflite12RuntimeShape13ExtendedShapeEiRKS0_"}
!911 = distinct !{!911, !21}
!912 = distinct !{!912, !23}
!913 = distinct !{!913, !25, !21}
!914 = !{!915}
!915 = distinct !{!915, !916, !"_ZN6tflite13reference_ops35BroadcastComparison4DSlowPreprocessERKNS_12RuntimeShapeES3_S3_: argument 0"}
!916 = distinct !{!916, !"_ZN6tflite13reference_ops35BroadcastComparison4DSlowPreprocessERKNS_12RuntimeShapeES3_S3_"}
!917 = !{!918, !915}
!918 = distinct !{!918, !919, !"_ZN6tflite12RuntimeShape13ExtendedShapeEiRKS0_: argument 0"}
!919 = distinct !{!919, !"_ZN6tflite12RuntimeShape13ExtendedShapeEiRKS0_"}
!920 = distinct !{!920, !21}
!921 = distinct !{!921, !23}
!922 = distinct !{!922, !25, !21}
!923 = !{!924}
!924 = distinct !{!924, !925, !"_ZN6tflite13reference_ops35BroadcastComparison4DSlowPreprocessERKNS_12RuntimeShapeES3_S3_: argument 0"}
!925 = distinct !{!925, !"_ZN6tflite13reference_ops35BroadcastComparison4DSlowPreprocessERKNS_12RuntimeShapeES3_S3_"}
!926 = !{!927, !924}
!927 = distinct !{!927, !928, !"_ZN6tflite12RuntimeShape13ExtendedShapeEiRKS0_: argument 0"}
!928 = distinct !{!928, !"_ZN6tflite12RuntimeShape13ExtendedShapeEiRKS0_"}
!929 = distinct !{!929, !21}
!930 = distinct !{!930, !23}
!931 = distinct !{!931, !25, !21}
!932 = !{!933}
!933 = distinct !{!933, !934, !"_ZN6tflite13reference_ops35BroadcastComparison4DSlowPreprocessERKNS_12RuntimeShapeES3_S3_: argument 0"}
!934 = distinct !{!934, !"_ZN6tflite13reference_ops35BroadcastComparison4DSlowPreprocessERKNS_12RuntimeShapeES3_S3_"}
!935 = !{!936, !933}
!936 = distinct !{!936, !937, !"_ZN6tflite12RuntimeShape13ExtendedShapeEiRKS0_: argument 0"}
!937 = distinct !{!937, !"_ZN6tflite12RuntimeShape13ExtendedShapeEiRKS0_"}
!938 = distinct !{!938, !21}
!939 = distinct !{!939, !23}
!940 = distinct !{!940, !25, !21}
!941 = !{!942}
!942 = distinct !{!942, !943, !"_ZN6tflite13reference_ops35BroadcastComparison4DSlowPreprocessERKNS_12RuntimeShapeES3_S3_: argument 0"}
!943 = distinct !{!943, !"_ZN6tflite13reference_ops35BroadcastComparison4DSlowPreprocessERKNS_12RuntimeShapeES3_S3_"}
!944 = !{!945, !942}
!945 = distinct !{!945, !946, !"_ZN6tflite12RuntimeShape13ExtendedShapeEiRKS0_: argument 0"}
!946 = distinct !{!946, !"_ZN6tflite12RuntimeShape13ExtendedShapeEiRKS0_"}
!947 = distinct !{!947, !21}
!948 = distinct !{!948, !23}
!949 = distinct !{!949, !25, !21}
!950 = !{!951}
!951 = distinct !{!951, !952, !"_ZN6tflite13reference_ops35BroadcastComparison4DSlowPreprocessERKNS_12RuntimeShapeES3_S3_: argument 0"}
!952 = distinct !{!952, !"_ZN6tflite13reference_ops35BroadcastComparison4DSlowPreprocessERKNS_12RuntimeShapeES3_S3_"}
!953 = !{!954, !951}
!954 = distinct !{!954, !955, !"_ZN6tflite12RuntimeShape13ExtendedShapeEiRKS0_: argument 0"}
!955 = distinct !{!955, !"_ZN6tflite12RuntimeShape13ExtendedShapeEiRKS0_"}
!956 = distinct !{!956, !21}
!957 = distinct !{!957, !23}
!958 = distinct !{!958, !25, !21}
!959 = !{!960}
!960 = distinct !{!960, !961, !"_ZN6tflite13reference_ops35BroadcastComparison4DSlowPreprocessERKNS_12RuntimeShapeES3_S3_: argument 0"}
!961 = distinct !{!961, !"_ZN6tflite13reference_ops35BroadcastComparison4DSlowPreprocessERKNS_12RuntimeShapeES3_S3_"}
!962 = !{!963, !960}
!963 = distinct !{!963, !964, !"_ZN6tflite12RuntimeShape13ExtendedShapeEiRKS0_: argument 0"}
!964 = distinct !{!964, !"_ZN6tflite12RuntimeShape13ExtendedShapeEiRKS0_"}
!965 = distinct !{!965, !21}
!966 = distinct !{!966, !23}
!967 = distinct !{!967, !25, !21}
!968 = !{!969}
!969 = distinct !{!969, !970, !"_ZN6tflite13reference_ops35BroadcastComparison4DSlowPreprocessERKNS_12RuntimeShapeES3_S3_: argument 0"}
!970 = distinct !{!970, !"_ZN6tflite13reference_ops35BroadcastComparison4DSlowPreprocessERKNS_12RuntimeShapeES3_S3_"}
!971 = !{!972, !969}
!972 = distinct !{!972, !973, !"_ZN6tflite12RuntimeShape13ExtendedShapeEiRKS0_: argument 0"}
!973 = distinct !{!973, !"_ZN6tflite12RuntimeShape13ExtendedShapeEiRKS0_"}
!974 = distinct !{!974, !21}
!975 = distinct !{!975, !23}
!976 = distinct !{!976, !25, !21}
!977 = !{!978}
!978 = distinct !{!978, !979, !"_ZN6tflite13reference_ops35BroadcastComparison4DSlowPreprocessERKNS_12RuntimeShapeES3_S3_: argument 0"}
!979 = distinct !{!979, !"_ZN6tflite13reference_ops35BroadcastComparison4DSlowPreprocessERKNS_12RuntimeShapeES3_S3_"}
!980 = !{!981, !978}
!981 = distinct !{!981, !982, !"_ZN6tflite12RuntimeShape13ExtendedShapeEiRKS0_: argument 0"}
!982 = distinct !{!982, !"_ZN6tflite12RuntimeShape13ExtendedShapeEiRKS0_"}
!983 = distinct !{!983, !21}
!984 = distinct !{!984, !23}
!985 = distinct !{!985, !25, !21}
!986 = !{!987}
!987 = distinct !{!987, !988, !"_ZN6tflite13reference_ops35BroadcastComparison4DSlowPreprocessERKNS_12RuntimeShapeES3_S3_: argument 0"}
!988 = distinct !{!988, !"_ZN6tflite13reference_ops35BroadcastComparison4DSlowPreprocessERKNS_12RuntimeShapeES3_S3_"}
!989 = !{!990, !987}
!990 = distinct !{!990, !991, !"_ZN6tflite12RuntimeShape13ExtendedShapeEiRKS0_: argument 0"}
!991 = distinct !{!991, !"_ZN6tflite12RuntimeShape13ExtendedShapeEiRKS0_"}
!992 = distinct !{!992, !21}
!993 = distinct !{!993, !23}
!994 = distinct !{!994, !25, !21}
!995 = !{!996}
!996 = distinct !{!996, !997, !"_ZN6tflite13reference_ops35BroadcastComparison4DSlowPreprocessERKNS_12RuntimeShapeES3_S3_: argument 0"}
!997 = distinct !{!997, !"_ZN6tflite13reference_ops35BroadcastComparison4DSlowPreprocessERKNS_12RuntimeShapeES3_S3_"}
!998 = !{!999, !996}
!999 = distinct !{!999, !1000, !"_ZN6tflite12RuntimeShape13ExtendedShapeEiRKS0_: argument 0"}
!1000 = distinct !{!1000, !"_ZN6tflite12RuntimeShape13ExtendedShapeEiRKS0_"}
!1001 = distinct !{!1001, !21}
!1002 = distinct !{!1002, !23}
!1003 = distinct !{!1003, !25, !21}
!1004 = !{!1005}
!1005 = distinct !{!1005, !1006, !"_ZN6tflite13reference_ops35BroadcastComparison4DSlowPreprocessERKNS_12RuntimeShapeES3_S3_: argument 0"}
!1006 = distinct !{!1006, !"_ZN6tflite13reference_ops35BroadcastComparison4DSlowPreprocessERKNS_12RuntimeShapeES3_S3_"}
!1007 = !{!1008, !1005}
!1008 = distinct !{!1008, !1009, !"_ZN6tflite12RuntimeShape13ExtendedShapeEiRKS0_: argument 0"}
!1009 = distinct !{!1009, !"_ZN6tflite12RuntimeShape13ExtendedShapeEiRKS0_"}
!1010 = distinct !{!1010, !21}
!1011 = distinct !{!1011, !23}
!1012 = distinct !{!1012, !25, !21}
!1013 = !{!1014}
!1014 = distinct !{!1014, !1015, !"_ZN6tflite13reference_ops35BroadcastComparison4DSlowPreprocessERKNS_12RuntimeShapeES3_S3_: argument 0"}
!1015 = distinct !{!1015, !"_ZN6tflite13reference_ops35BroadcastComparison4DSlowPreprocessERKNS_12RuntimeShapeES3_S3_"}
!1016 = !{!1017, !1014}
!1017 = distinct !{!1017, !1018, !"_ZN6tflite12RuntimeShape13ExtendedShapeEiRKS0_: argument 0"}
!1018 = distinct !{!1018, !"_ZN6tflite12RuntimeShape13ExtendedShapeEiRKS0_"}
!1019 = distinct !{!1019, !21}
!1020 = distinct !{!1020, !23}
!1021 = distinct !{!1021, !25, !21}
!1022 = !{!1023}
!1023 = distinct !{!1023, !1024, !"_ZN6tflite13reference_ops35BroadcastComparison4DSlowPreprocessERKNS_12RuntimeShapeES3_S3_: argument 0"}
!1024 = distinct !{!1024, !"_ZN6tflite13reference_ops35BroadcastComparison4DSlowPreprocessERKNS_12RuntimeShapeES3_S3_"}
!1025 = !{!1026, !1023}
!1026 = distinct !{!1026, !1027, !"_ZN6tflite12RuntimeShape13ExtendedShapeEiRKS0_: argument 0"}
!1027 = distinct !{!1027, !"_ZN6tflite12RuntimeShape13ExtendedShapeEiRKS0_"}
!1028 = distinct !{!1028, !21}
!1029 = distinct !{!1029, !23}
!1030 = distinct !{!1030, !25, !21}
!1031 = !{!1032}
!1032 = distinct !{!1032, !1033, !"_ZN6tflite13reference_ops35BroadcastComparison4DSlowPreprocessERKNS_12RuntimeShapeES3_S3_: argument 0"}
!1033 = distinct !{!1033, !"_ZN6tflite13reference_ops35BroadcastComparison4DSlowPreprocessERKNS_12RuntimeShapeES3_S3_"}
!1034 = !{!1035, !1032}
!1035 = distinct !{!1035, !1036, !"_ZN6tflite12RuntimeShape13ExtendedShapeEiRKS0_: argument 0"}
!1036 = distinct !{!1036, !"_ZN6tflite12RuntimeShape13ExtendedShapeEiRKS0_"}
!1037 = distinct !{!1037, !21}
!1038 = distinct !{!1038, !23}
!1039 = distinct !{!1039, !25, !21}
!1040 = !{!1041}
!1041 = distinct !{!1041, !1042, !"_ZN6tflite13reference_ops35BroadcastComparison4DSlowPreprocessERKNS_12RuntimeShapeES3_S3_: argument 0"}
!1042 = distinct !{!1042, !"_ZN6tflite13reference_ops35BroadcastComparison4DSlowPreprocessERKNS_12RuntimeShapeES3_S3_"}
!1043 = !{!1044, !1041}
!1044 = distinct !{!1044, !1045, !"_ZN6tflite12RuntimeShape13ExtendedShapeEiRKS0_: argument 0"}
!1045 = distinct !{!1045, !"_ZN6tflite12RuntimeShape13ExtendedShapeEiRKS0_"}
!1046 = distinct !{!1046, !21}
!1047 = distinct !{!1047, !23}
!1048 = distinct !{!1048, !25, !21}
!1049 = !{!1050}
!1050 = distinct !{!1050, !1051, !"_ZN6tflite13reference_ops35BroadcastComparison4DSlowPreprocessERKNS_12RuntimeShapeES3_S3_: argument 0"}
!1051 = distinct !{!1051, !"_ZN6tflite13reference_ops35BroadcastComparison4DSlowPreprocessERKNS_12RuntimeShapeES3_S3_"}
!1052 = !{!1053, !1050}
!1053 = distinct !{!1053, !1054, !"_ZN6tflite12RuntimeShape13ExtendedShapeEiRKS0_: argument 0"}
!1054 = distinct !{!1054, !"_ZN6tflite12RuntimeShape13ExtendedShapeEiRKS0_"}
!1055 = distinct !{!1055, !21}
!1056 = distinct !{!1056, !23}
!1057 = distinct !{!1057, !25, !21}
!1058 = !{!1059}
!1059 = distinct !{!1059, !1060, !"_ZN6tflite13reference_ops35BroadcastComparison4DSlowPreprocessERKNS_12RuntimeShapeES3_S3_: argument 0"}
!1060 = distinct !{!1060, !"_ZN6tflite13reference_ops35BroadcastComparison4DSlowPreprocessERKNS_12RuntimeShapeES3_S3_"}
!1061 = !{!1062, !1059}
!1062 = distinct !{!1062, !1063, !"_ZN6tflite12RuntimeShape13ExtendedShapeEiRKS0_: argument 0"}
!1063 = distinct !{!1063, !"_ZN6tflite12RuntimeShape13ExtendedShapeEiRKS0_"}
!1064 = distinct !{!1064, !21}
!1065 = distinct !{!1065, !23}
!1066 = distinct !{!1066, !25, !21}
!1067 = !{!1068}
!1068 = distinct !{!1068, !1069, !"_ZN6tflite13reference_ops35BroadcastComparison4DSlowPreprocessERKNS_12RuntimeShapeES3_S3_: argument 0"}
!1069 = distinct !{!1069, !"_ZN6tflite13reference_ops35BroadcastComparison4DSlowPreprocessERKNS_12RuntimeShapeES3_S3_"}
!1070 = !{!1071, !1068}
!1071 = distinct !{!1071, !1072, !"_ZN6tflite12RuntimeShape13ExtendedShapeEiRKS0_: argument 0"}
!1072 = distinct !{!1072, !"_ZN6tflite12RuntimeShape13ExtendedShapeEiRKS0_"}
!1073 = distinct !{!1073, !21}
!1074 = distinct !{!1074, !23}
!1075 = distinct !{!1075, !25, !21}
!1076 = !{!1077}
!1077 = distinct !{!1077, !1078, !"_ZN6tflite13reference_ops35BroadcastComparison4DSlowPreprocessERKNS_12RuntimeShapeES3_S3_: argument 0"}
!1078 = distinct !{!1078, !"_ZN6tflite13reference_ops35BroadcastComparison4DSlowPreprocessERKNS_12RuntimeShapeES3_S3_"}
!1079 = !{!1080, !1077}
!1080 = distinct !{!1080, !1081, !"_ZN6tflite12RuntimeShape13ExtendedShapeEiRKS0_: argument 0"}
!1081 = distinct !{!1081, !"_ZN6tflite12RuntimeShape13ExtendedShapeEiRKS0_"}
!1082 = distinct !{!1082, !21}
!1083 = distinct !{!1083, !23}
!1084 = distinct !{!1084, !25, !21}
!1085 = !{!1086}
!1086 = distinct !{!1086, !1087, !"_ZN6tflite13reference_ops35BroadcastComparison4DSlowPreprocessERKNS_12RuntimeShapeES3_S3_: argument 0"}
!1087 = distinct !{!1087, !"_ZN6tflite13reference_ops35BroadcastComparison4DSlowPreprocessERKNS_12RuntimeShapeES3_S3_"}
!1088 = !{!1089, !1086}
!1089 = distinct !{!1089, !1090, !"_ZN6tflite12RuntimeShape13ExtendedShapeEiRKS0_: argument 0"}
!1090 = distinct !{!1090, !"_ZN6tflite12RuntimeShape13ExtendedShapeEiRKS0_"}
!1091 = distinct !{!1091, !21}
!1092 = distinct !{!1092, !23}
!1093 = distinct !{!1093, !25, !21}
!1094 = !{!1095}
!1095 = distinct !{!1095, !1096, !"_ZN6tflite13reference_ops35BroadcastComparison4DSlowPreprocessERKNS_12RuntimeShapeES3_S3_: argument 0"}
!1096 = distinct !{!1096, !"_ZN6tflite13reference_ops35BroadcastComparison4DSlowPreprocessERKNS_12RuntimeShapeES3_S3_"}
!1097 = !{!1098, !1095}
!1098 = distinct !{!1098, !1099, !"_ZN6tflite12RuntimeShape13ExtendedShapeEiRKS0_: argument 0"}
!1099 = distinct !{!1099, !"_ZN6tflite12RuntimeShape13ExtendedShapeEiRKS0_"}
!1100 = distinct !{!1100, !21}
!1101 = distinct !{!1101, !23}
!1102 = distinct !{!1102, !25, !21}
!1103 = !{!1104}
!1104 = distinct !{!1104, !1105, !"_ZN6tflite13reference_ops35BroadcastComparison4DSlowPreprocessERKNS_12RuntimeShapeES3_S3_: argument 0"}
!1105 = distinct !{!1105, !"_ZN6tflite13reference_ops35BroadcastComparison4DSlowPreprocessERKNS_12RuntimeShapeES3_S3_"}
!1106 = !{!1107, !1104}
!1107 = distinct !{!1107, !1108, !"_ZN6tflite12RuntimeShape13ExtendedShapeEiRKS0_: argument 0"}
!1108 = distinct !{!1108, !"_ZN6tflite12RuntimeShape13ExtendedShapeEiRKS0_"}
!1109 = distinct !{!1109, !21}
!1110 = distinct !{!1110, !23}
!1111 = distinct !{!1111, !25, !21}
!1112 = !{!1113}
!1113 = distinct !{!1113, !1114, !"_ZN6tflite13reference_ops35BroadcastComparison4DSlowPreprocessERKNS_12RuntimeShapeES3_S3_: argument 0"}
!1114 = distinct !{!1114, !"_ZN6tflite13reference_ops35BroadcastComparison4DSlowPreprocessERKNS_12RuntimeShapeES3_S3_"}
!1115 = !{!1116, !1113}
!1116 = distinct !{!1116, !1117, !"_ZN6tflite12RuntimeShape13ExtendedShapeEiRKS0_: argument 0"}
!1117 = distinct !{!1117, !"_ZN6tflite12RuntimeShape13ExtendedShapeEiRKS0_"}
!1118 = distinct !{!1118, !21}
!1119 = distinct !{!1119, !23}
!1120 = distinct !{!1120, !25, !21}
!1121 = !{!1122}
!1122 = distinct !{!1122, !1123, !"_ZN6tflite13reference_ops35BroadcastComparison4DSlowPreprocessERKNS_12RuntimeShapeES3_S3_: argument 0"}
!1123 = distinct !{!1123, !"_ZN6tflite13reference_ops35BroadcastComparison4DSlowPreprocessERKNS_12RuntimeShapeES3_S3_"}
!1124 = !{!1125, !1122}
!1125 = distinct !{!1125, !1126, !"_ZN6tflite12RuntimeShape13ExtendedShapeEiRKS0_: argument 0"}
!1126 = distinct !{!1126, !"_ZN6tflite12RuntimeShape13ExtendedShapeEiRKS0_"}
!1127 = distinct !{!1127, !21}
!1128 = distinct !{!1128, !23}
!1129 = distinct !{!1129, !25, !21}
!1130 = !{!1131}
!1131 = distinct !{!1131, !1132, !"_ZN6tflite13reference_ops35BroadcastComparison4DSlowPreprocessERKNS_12RuntimeShapeES3_S3_: argument 0"}
!1132 = distinct !{!1132, !"_ZN6tflite13reference_ops35BroadcastComparison4DSlowPreprocessERKNS_12RuntimeShapeES3_S3_"}
!1133 = !{!1134, !1131}
!1134 = distinct !{!1134, !1135, !"_ZN6tflite12RuntimeShape13ExtendedShapeEiRKS0_: argument 0"}
!1135 = distinct !{!1135, !"_ZN6tflite12RuntimeShape13ExtendedShapeEiRKS0_"}
!1136 = distinct !{!1136, !21}
!1137 = distinct !{!1137, !23}
!1138 = distinct !{!1138, !25, !21}
!1139 = !{!1140}
!1140 = distinct !{!1140, !1141, !"_ZN6tflite13reference_ops35BroadcastComparison4DSlowPreprocessERKNS_12RuntimeShapeES3_S3_: argument 0"}
!1141 = distinct !{!1141, !"_ZN6tflite13reference_ops35BroadcastComparison4DSlowPreprocessERKNS_12RuntimeShapeES3_S3_"}
!1142 = !{!1143, !1140}
!1143 = distinct !{!1143, !1144, !"_ZN6tflite12RuntimeShape13ExtendedShapeEiRKS0_: argument 0"}
!1144 = distinct !{!1144, !"_ZN6tflite12RuntimeShape13ExtendedShapeEiRKS0_"}
!1145 = distinct !{!1145, !21}
!1146 = distinct !{!1146, !23}
!1147 = distinct !{!1147, !25, !21}
