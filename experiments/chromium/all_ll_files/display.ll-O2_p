; ModuleID = '../../ui/display/display.cc'
source_filename = "../../ui/display/display.cc"
target datalayout = "e-m:e-i64:64-f80:128-n8:16:32:64-S128"
target triple = "x86_64-unknown-linux-gnu"

module asm ".symver exp, exp@GLIBC_2.2.5"
module asm ".symver exp2, exp2@GLIBC_2.2.5"
module asm ".symver exp2f, exp2f@GLIBC_2.2.5"
module asm ".symver expf, expf@GLIBC_2.2.5"
module asm ".symver lgamma, lgamma@GLIBC_2.2.5"
module asm ".symver lgammaf, lgammaf@GLIBC_2.2.5"
module asm ".symver lgammal, lgammal@GLIBC_2.2.5"
module asm ".symver log, log@GLIBC_2.2.5"
module asm ".symver log2, log2@GLIBC_2.2.5"
module asm ".symver log2f, log2f@GLIBC_2.2.5"
module asm ".symver logf, logf@GLIBC_2.2.5"
module asm ".symver pow, pow@GLIBC_2.2.5"
module asm ".symver powf, powf@GLIBC_2.2.5"

%"class.std::__1::locale::id" = type <{ %"struct.std::__1::once_flag", i32, [4 x i8] }>
%"struct.std::__1::once_flag" = type { i64 }
%"class.display::Display" = type { i64, %"class.gfx::Rect", %"class.gfx::Size", %"class.gfx::Rect", float, i32, %"class.absl::optional", i32, i32, %"class.gfx::Size", %"class.gfx::DisplayColorSpaces", i32, i32, i8, i32 }
%"class.gfx::Rect" = type { %"class.gfx::Point", %"class.gfx::Size" }
%"class.gfx::Point" = type { i32, i32 }
%"class.absl::optional" = type { %"class.absl::optional_internal::optional_data" }
%"class.absl::optional_internal::optional_data" = type { %"class.absl::optional_internal::optional_data_base" }
%"class.absl::optional_internal::optional_data_base" = type { %"class.absl::optional_internal::optional_data_dtor_base" }
%"class.absl::optional_internal::optional_data_dtor_base" = type { i8, %union.anon.14 }
%union.anon.14 = type { i32 }
%"class.gfx::Size" = type { i32, i32 }
%"class.gfx::DisplayColorSpaces" = type { [6 x %"class.gfx::ColorSpace"], [6 x i32], float, %"class.absl::optional.15" }
%"class.gfx::ColorSpace" = type { i8, i8, i8, i8, [9 x float], [7 x float] }
%"class.absl::optional.15" = type { %"class.absl::optional_internal::optional_data.16" }
%"class.absl::optional_internal::optional_data.16" = type { %"class.absl::optional_internal::optional_data_base.17" }
%"class.absl::optional_internal::optional_data_base.17" = type { %"class.absl::optional_internal::optional_data_dtor_base.18" }
%"class.absl::optional_internal::optional_data_dtor_base.18" = type { i8, %union.anon.19 }
%union.anon.19 = type { %"struct.gfx::HDRStaticMetadata" }
%"struct.gfx::HDRStaticMetadata" = type { double, double, double }
%"class.std::__1::basic_string" = type { %"class.std::__1::__compressed_pair" }
%"class.std::__1::__compressed_pair" = type { %"struct.std::__1::__compressed_pair_elem" }
%"struct.std::__1::__compressed_pair_elem" = type { %"struct.std::__1::basic_string<char, std::__1::char_traits<char>, std::__1::allocator<char> >::__rep" }
%"struct.std::__1::basic_string<char, std::__1::char_traits<char>, std::__1::allocator<char> >::__rep" = type { %union.anon }
%union.anon = type { %"struct.std::__1::basic_string<char, std::__1::char_traits<char>, std::__1::allocator<char> >::__long" }
%"struct.std::__1::basic_string<char, std::__1::char_traits<char>, std::__1::allocator<char> >::__long" = type { i8*, i64, i64 }
%"class.logging::LogMessage" = type { i32 (...)**, i32, %"class.std::__1::basic_ostringstream", i64, i8*, i32, %"class.base::ScopedClearLastErrorBase" }
%"class.std::__1::basic_ostringstream" = type { %"class.std::__1::basic_ostream.base", %"class.std::__1::basic_stringbuf", %"class.std::__1::basic_ios.base" }
%"class.std::__1::basic_ostream.base" = type { i32 (...)** }
%"class.std::__1::basic_stringbuf" = type <{ %"class.std::__1::basic_streambuf", %"class.std::__1::basic_string", i8*, i32, [4 x i8] }>
%"class.std::__1::basic_streambuf" = type { i32 (...)**, %"class.std::__1::locale", i8*, i8*, i8*, i8*, i8*, i8* }
%"class.std::__1::locale" = type { %"class.std::__1::locale::__imp"* }
%"class.std::__1::locale::__imp" = type opaque
%"class.std::__1::basic_ios.base" = type <{ %"class.std::__1::ios_base", %"class.std::__1::basic_ostream"*, i32 }>
%"class.std::__1::ios_base" = type { i32 (...)**, i32, i64, i64, i32, i32, i8*, i8*, void (i32, %"class.std::__1::ios_base"*, i32)**, i32*, i64, i64, i64*, i64, i64, i8**, i64, i64 }
%"class.std::__1::basic_ostream" = type { i32 (...)**, %"class.std::__1::basic_ios.base" }
%"class.base::ScopedClearLastErrorBase" = type { i32 }
%"class.base::CommandLine" = type { %"class.std::__1::vector", %"class.std::__1::map", i64 }
%"class.std::__1::vector" = type { %"class.std::__1::__vector_base" }
%"class.std::__1::__vector_base" = type { %"class.std::__1::basic_string"*, %"class.std::__1::basic_string"*, %"class.std::__1::__compressed_pair.1" }
%"class.std::__1::__compressed_pair.1" = type { %"struct.std::__1::__compressed_pair_elem.2" }
%"struct.std::__1::__compressed_pair_elem.2" = type { %"class.std::__1::basic_string"* }
%"class.std::__1::map" = type { %"class.std::__1::__tree" }
%"class.std::__1::__tree" = type { %"class.std::__1::__tree_end_node"*, %"class.std::__1::__compressed_pair.6", %"class.std::__1::__compressed_pair.11" }
%"class.std::__1::__tree_end_node" = type { %"class.std::__1::__tree_node_base"* }
%"class.std::__1::__tree_node_base" = type opaque
%"class.std::__1::__compressed_pair.6" = type { %"struct.std::__1::__compressed_pair_elem.7" }
%"struct.std::__1::__compressed_pair_elem.7" = type { %"class.std::__1::__tree_end_node" }
%"class.std::__1::__compressed_pair.11" = type { %"struct.std::__1::__compressed_pair_elem.12" }
%"struct.std::__1::__compressed_pair_elem.12" = type { i64 }
%"struct.std::__1::basic_string<char, std::__1::char_traits<char>, std::__1::allocator<char> >::__short" = type { [23 x i8], %struct.anon }
%struct.anon = type { i8 }
%"class.gfx::ICCProfile" = type { %class.scoped_refptr }
%class.scoped_refptr = type { %"class.gfx::ICCProfile::Internals"* }
%"class.gfx::ICCProfile::Internals" = type <{ i32 (...)**, %"class.base::RefCountedThreadSafe", [4 x i8], %"class.std::__1::vector.21", i8, i8, [2 x i8], %struct.skcms_Matrix3x3, %struct.skcms_TransferFunction, [4 x i8] }>
%"class.base::RefCountedThreadSafe" = type { %"class.base::subtle::RefCountedThreadSafeBase" }
%"class.base::subtle::RefCountedThreadSafeBase" = type { %"class.base::AtomicRefCount" }
%"class.base::AtomicRefCount" = type { %"struct.std::__1::atomic" }
%"struct.std::__1::atomic" = type { %"struct.std::__1::__atomic_base" }
%"struct.std::__1::__atomic_base" = type { %"struct.std::__1::__atomic_base.20" }
%"struct.std::__1::__atomic_base.20" = type { %"struct.std::__1::__cxx_atomic_impl" }
%"struct.std::__1::__cxx_atomic_impl" = type { %"struct.std::__1::__cxx_atomic_base_impl" }
%"struct.std::__1::__cxx_atomic_base_impl" = type { i32 }
%"class.std::__1::vector.21" = type { %"class.std::__1::__vector_base.22" }
%"class.std::__1::__vector_base.22" = type { i8*, i8*, %"class.std::__1::__compressed_pair.23" }
%"class.std::__1::__compressed_pair.23" = type { %"struct.std::__1::__compressed_pair_elem.24" }
%"struct.std::__1::__compressed_pair_elem.24" = type { i8* }
%struct.skcms_Matrix3x3 = type { [3 x [3 x float]] }
%struct.skcms_TransferFunction = type { float, float, float, float, float, float, float }
%"class.gfx::Insets" = type { i32, i32, i32, i32 }
%"class.gfx::RectF" = type { %"class.gfx::PointF", %"class.gfx::SizeF" }
%"class.gfx::PointF" = type { float, float }
%"class.gfx::SizeF" = type { float, float }
%"class.std::__1::basic_ostream<char, std::__1::char_traits<char> >::sentry" = type { i8, %"class.std::__1::basic_ostream"* }
%"class.std::__1::locale::facet" = type { %"class.std::__1::__shared_count" }
%"class.std::__1::__shared_count" = type { i32 (...)**, i64 }
%"class.std::__1::ctype" = type <{ %"class.std::__1::locale::facet", i16*, i8, [7 x i8] }>

$_ZNSt3__124__put_character_sequenceIcNS_11char_traitsIcEEEERNS_13basic_ostreamIT_T0_EES7_PKS4_m = comdat any

$_ZNSt3__116__pad_and_outputIcNS_11char_traitsIcEEEENS_19ostreambuf_iteratorIT_T0_EES6_PKS4_S8_S8_RNS_8ios_baseES4_ = comdat any

@_ZN7display12_GLOBAL__N_128g_forced_device_scale_factorE = internal unnamed_addr global float -1.000000e+00, align 4
@_ZN7display12_GLOBAL__N_132g_has_forced_device_scale_factorE = internal unnamed_addr global i32 -1, align 4
@_ZN8switches23kForceDeviceScaleFactorE = external constant [0 x i8], align 1
@.str = private unnamed_addr constant [5 x i8] c"%.2f\00", align 1
@_ZN8switches25kForceDisplayColorProfileE = external constant [0 x i8], align 1
@_ZN8switches24kForceRasterColorProfileE = external constant [0 x i8], align 1
@_ZZN7display7Display27HasEnsureForcedColorProfileEvE31has_ensure_forced_color_profile = internal unnamed_addr global i8 0, align 1
@_ZGVZN7display7Display27HasEnsureForcedColorProfileEvE31has_ensure_forced_color_profile = internal global i64 0, align 8
@_ZN8switches25kEnsureForcedColorProfileE = external constant [0 x i8], align 1
@.str.1 = private unnamed_addr constant [87 x i8] c"Display[%lld] bounds=[%s], workarea=[%s], scale=%g, rotation=%s, panel_rotation=%s %s.\00", align 1
@.str.2 = private unnamed_addr constant [9 x i8] c"internal\00", align 1
@.str.3 = private unnamed_addr constant [9 x i8] c"external\00", align 1
@_ZN7display12_GLOBAL__N_120internal_display_id_E = internal unnamed_addr global i64 -1, align 8
@.str.4 = private unnamed_addr constant [28 x i8] c"../../ui/display/display.cc\00", align 1
@.str.5 = private unnamed_addr constant [49 x i8] c"Failed to parse the default device scale factor:\00", align 1
@_ZNSt3__15ctypeIcE2idE = external global %"class.std::__1::locale::id", align 8
@.str.9 = private unnamed_addr constant [5 x i8] c"srgb\00", align 1
@.str.10 = private unnamed_addr constant [15 x i8] c"display-p3-d65\00", align 1
@.str.11 = private unnamed_addr constant [13 x i8] c"scrgb-linear\00", align 1
@.str.12 = private unnamed_addr constant [6 x i8] c"hdr10\00", align 1
@.str.13 = private unnamed_addr constant [14 x i8] c"extended-srgb\00", align 1
@.str.14 = private unnamed_addr constant [12 x i8] c"generic-rgb\00", align 1
@.str.15 = private unnamed_addr constant [19 x i8] c"color-spin-gamma24\00", align 1
@.str.16 = private unnamed_addr constant [32 x i8] c"Invalid forced color profile: \22\00", align 1
@.str.17 = private unnamed_addr constant [2 x i8] c"\22\00", align 1
@.str.19 = private unnamed_addr constant [2 x i8] c"0\00", align 1
@.str.20 = private unnamed_addr constant [3 x i8] c"90\00", align 1
@.str.21 = private unnamed_addr constant [4 x i8] c"180\00", align 1
@.str.22 = private unnamed_addr constant [4 x i8] c"270\00", align 1
@.str.23 = private unnamed_addr constant [8 x i8] c"unkonwn\00", align 1
@switch.table._ZNK7display7Display8ToStringEv.24 = private unnamed_addr constant [4 x i8*] [i8* getelementptr inbounds ([2 x i8], [2 x i8]* @.str.19, i64 0, i64 0), i8* getelementptr inbounds ([3 x i8], [3 x i8]* @.str.20, i64 0, i64 0), i8* getelementptr inbounds ([4 x i8], [4 x i8]* @.str.21, i64 0, i64 0), i8* getelementptr inbounds ([4 x i8], [4 x i8]* @.str.22, i64 0, i64 0)], align 8

@_ZN7display7DisplayC1Ev = hidden unnamed_addr alias void (%"class.display::Display"*), void (%"class.display::Display"*)* @_ZN7display7DisplayC2Ev
@_ZN7display7DisplayC1El = hidden unnamed_addr alias void (%"class.display::Display"*, i64), void (%"class.display::Display"*, i64)* @_ZN7display7DisplayC2El
@_ZN7display7DisplayC1ElRKN3gfx4RectE = hidden unnamed_addr alias void (%"class.display::Display"*, i64, %"class.gfx::Rect"*), void (%"class.display::Display"*, i64, %"class.gfx::Rect"*)* @_ZN7display7DisplayC2ElRKN3gfx4RectE
@_ZN7display7DisplayC1ERKS0_ = hidden unnamed_addr alias void (%"class.display::Display"*, %"class.display::Display"*), void (%"class.display::Display"*, %"class.display::Display"*)* @_ZN7display7DisplayC2ERKS0_
@_ZN7display7DisplayD1Ev = hidden unnamed_addr alias void (%"class.display::Display"*), void (%"class.display::Display"*)* @_ZN7display7DisplayD2Ev

; Function Attrs: norecurse nounwind readonly ssp uwtable
define hidden zeroext i1 @_ZN7display17CompareDisplayIdsEll(i64, i64) local_unnamed_addr #0 {
  %3 = icmp eq i64 %0, %1
  br i1 %3, label %19, label %4

4:                                                ; preds = %2
  %5 = load i64, i64* @_ZN7display12_GLOBAL__N_120internal_display_id_E, align 8
  %6 = icmp ne i64 %5, -1
  %7 = icmp eq i64 %5, %0
  %8 = and i1 %7, %6
  br i1 %8, label %19, label %9

9:                                                ; preds = %4
  %10 = trunc i64 %1 to i32
  %11 = and i32 %10, 255
  %12 = trunc i64 %0 to i32
  %13 = and i32 %12, 255
  %14 = icmp ult i32 %13, %11
  br i1 %14, label %15, label %19

15:                                               ; preds = %9
  %16 = icmp eq i64 %5, %1
  %17 = and i1 %16, %6
  %18 = xor i1 %17, true
  br label %19

19:                                               ; preds = %4, %15, %9, %2
  %20 = phi i1 [ false, %2 ], [ true, %4 ], [ false, %9 ], [ %18, %15 ]
  ret i1 %20
}

; Function Attrs: argmemonly nounwind
declare void @llvm.lifetime.start.p0i8(i64 immarg, i8* nocapture) #1

; Function Attrs: norecurse nounwind readonly ssp uwtable
define hidden zeroext i1 @_ZN7display7Display19IsInternalDisplayIdEl(i64) local_unnamed_addr #0 align 2 {
  %2 = load i64, i64* @_ZN7display12_GLOBAL__N_120internal_display_id_E, align 8
  %3 = icmp ne i64 %2, -1
  %4 = icmp eq i64 %2, %0
  %5 = and i1 %4, %3
  ret i1 %5
}

; Function Attrs: argmemonly nounwind
declare void @llvm.lifetime.end.p0i8(i64 immarg, i8* nocapture) #1

; Function Attrs: nounwind ssp uwtable
define hidden float @_ZN7display7Display26GetForcedDeviceScaleFactorEv() local_unnamed_addr #2 align 2 {
  %1 = alloca double, align 8
  %2 = alloca %"class.std::__1::basic_string", align 8
  %3 = alloca %"class.logging::LogMessage", align 8
  %4 = load float, float* @_ZN7display12_GLOBAL__N_128g_forced_device_scale_factorE, align 4
  %5 = fcmp olt float %4, 0.000000e+00
  br i1 %5, label %6, label %52

6:                                                ; preds = %0
  %7 = bitcast double* %1 to i8*
  call void @llvm.lifetime.start.p0i8(i64 8, i8* nonnull %7) #12
  store double 1.000000e+00, double* %1, align 8
  %8 = tail call %"class.base::CommandLine"* @_ZN4base11CommandLine17ForCurrentProcessEv() #12
  %9 = tail call zeroext i1 @_ZNK4base11CommandLine9HasSwitchEPKc(%"class.base::CommandLine"* %8, i8* getelementptr inbounds ([0 x i8], [0 x i8]* @_ZN8switches23kForceDeviceScaleFactorE, i64 0, i64 0)) #12
  br i1 %9, label %10, label %50

10:                                               ; preds = %6
  %11 = bitcast %"class.std::__1::basic_string"* %2 to i8*
  call void @llvm.lifetime.start.p0i8(i64 24, i8* nonnull %11) #12
  %12 = getelementptr inbounds %"class.std::__1::basic_string", %"class.std::__1::basic_string"* %2, i64 0, i32 0, i32 0, i32 0, i32 0, i32 0, i32 0
  %13 = getelementptr inbounds %"class.std::__1::basic_string", %"class.std::__1::basic_string"* %2, i64 0, i32 0, i32 0, i32 0, i32 0, i32 0, i32 1
  call void @llvm.memset.p0i8.i64(i8* nonnull align 8 %11, i8 -86, i64 24, i1 false) #12
  %14 = tail call %"class.base::CommandLine"* @_ZN4base11CommandLine17ForCurrentProcessEv() #12
  %15 = tail call i64 @strlen(i8* nonnull getelementptr inbounds ([0 x i8], [0 x i8]* @_ZN8switches23kForceDeviceScaleFactorE, i64 0, i64 0)) #12
  call void @_ZNK4base11CommandLine19GetSwitchValueASCIIENS_16BasicStringPieceIcNSt3__111char_traitsIcEEEE(%"class.std::__1::basic_string"* nonnull sret %2, %"class.base::CommandLine"* %14, i8* getelementptr inbounds ([0 x i8], [0 x i8]* @_ZN8switches23kForceDeviceScaleFactorE, i64 0, i64 0), i64 %15) #12
  %16 = bitcast %"class.std::__1::basic_string"* %2 to %"struct.std::__1::basic_string<char, std::__1::char_traits<char>, std::__1::allocator<char> >::__short"*
  %17 = getelementptr inbounds %"struct.std::__1::basic_string<char, std::__1::char_traits<char>, std::__1::allocator<char> >::__short", %"struct.std::__1::basic_string<char, std::__1::char_traits<char>, std::__1::allocator<char> >::__short"* %16, i64 0, i32 1, i32 0
  %18 = load i8, i8* %17, align 1
  %19 = icmp slt i8 %18, 0
  %20 = load i8*, i8** %12, align 8
  %21 = select i1 %19, i8* %20, i8* %11
  %22 = load i64, i64* %13, align 8
  %23 = zext i8 %18 to i64
  %24 = select i1 %19, i64 %22, i64 %23
  %25 = call zeroext i1 @_ZN4base14StringToDoubleENS_16BasicStringPieceIcNSt3__111char_traitsIcEEEEPd(i8* %21, i64 %24, double* nonnull %1) #12
  br i1 %25, label %42, label %26

26:                                               ; preds = %10
  %27 = call zeroext i1 @_ZN7logging22ShouldCreateLogMessageEi(i32 2) #12
  br i1 %27, label %28, label %41

28:                                               ; preds = %26
  %29 = bitcast %"class.logging::LogMessage"* %3 to i8*
  call void @llvm.lifetime.start.p0i8(i64 304, i8* nonnull %29) #12
  call void @_ZN7logging10LogMessageC1EPKcii(%"class.logging::LogMessage"* nonnull %3, i8* getelementptr inbounds ([28 x i8], [28 x i8]* @.str.4, i64 0, i64 0), i32 51, i32 2) #12
  %30 = getelementptr inbounds %"class.logging::LogMessage", %"class.logging::LogMessage"* %3, i64 0, i32 2
  %31 = bitcast %"class.std::__1::basic_ostringstream"* %30 to %"class.std::__1::basic_ostream"*
  %32 = call dereferenceable(160) %"class.std::__1::basic_ostream"* @_ZNSt3__124__put_character_sequenceIcNS_11char_traitsIcEEEERNS_13basic_ostreamIT_T0_EES7_PKS4_m(%"class.std::__1::basic_ostream"* dereferenceable(160) %31, i8* getelementptr inbounds ([49 x i8], [49 x i8]* @.str.5, i64 0, i64 0), i64 48) #12
  %33 = load i8, i8* %17, align 1
  %34 = icmp slt i8 %33, 0
  %35 = load i8*, i8** %12, align 8
  %36 = load i64, i64* %13, align 8
  %37 = zext i8 %33 to i64
  %38 = select i1 %34, i8* %35, i8* %11
  %39 = select i1 %34, i64 %36, i64 %37
  %40 = call dereferenceable(160) %"class.std::__1::basic_ostream"* @_ZNSt3__124__put_character_sequenceIcNS_11char_traitsIcEEEERNS_13basic_ostreamIT_T0_EES7_PKS4_m(%"class.std::__1::basic_ostream"* dereferenceable(160) %32, i8* %38, i64 %39) #12
  call void @_ZN7logging10LogMessageD1Ev(%"class.logging::LogMessage"* nonnull %3) #12
  call void @llvm.lifetime.end.p0i8(i64 304, i8* nonnull %29) #12
  br label %41

41:                                               ; preds = %28, %26
  store double 1.000000e+00, double* %1, align 8
  br label %42

42:                                               ; preds = %41, %10
  %43 = load i8, i8* %17, align 1
  %44 = icmp slt i8 %43, 0
  br i1 %44, label %45, label %47

45:                                               ; preds = %42
  %46 = load i8*, i8** %12, align 8
  call void @_ZdlPv(i8* %46) #13
  br label %47

47:                                               ; preds = %45, %42
  call void @llvm.lifetime.end.p0i8(i64 24, i8* nonnull %11) #12
  %48 = load double, double* %1, align 8
  %49 = fptrunc double %48 to float
  br label %50

50:                                               ; preds = %6, %47
  %51 = phi float [ %49, %47 ], [ 1.000000e+00, %6 ]
  call void @llvm.lifetime.end.p0i8(i64 8, i8* nonnull %7) #12
  store float %51, float* @_ZN7display12_GLOBAL__N_128g_forced_device_scale_factorE, align 4
  br label %52

52:                                               ; preds = %50, %0
  %53 = phi float [ %51, %50 ], [ %4, %0 ]
  ret float %53
}

; Function Attrs: nounwind ssp uwtable
define hidden zeroext i1 @_ZN7display7Display25HasForceDeviceScaleFactorEv() local_unnamed_addr #2 align 2 {
  %1 = load i32, i32* @_ZN7display12_GLOBAL__N_132g_has_forced_device_scale_factorE, align 4
  %2 = icmp eq i32 %1, -1
  br i1 %2, label %3, label %7

3:                                                ; preds = %0
  %4 = tail call %"class.base::CommandLine"* @_ZN4base11CommandLine17ForCurrentProcessEv() #12
  %5 = tail call zeroext i1 @_ZNK4base11CommandLine9HasSwitchEPKc(%"class.base::CommandLine"* %4, i8* getelementptr inbounds ([0 x i8], [0 x i8]* @_ZN8switches23kForceDeviceScaleFactorE, i64 0, i64 0)) #12
  %6 = zext i1 %5 to i32
  store i32 %6, i32* @_ZN7display12_GLOBAL__N_132g_has_forced_device_scale_factorE, align 4
  br label %7

7:                                                ; preds = %3, %0
  %8 = phi i32 [ %6, %3 ], [ %1, %0 ]
  %9 = icmp ne i32 %8, 0
  ret i1 %9
}

; Function Attrs: nofree norecurse nounwind ssp uwtable writeonly
define hidden void @_ZN7display7Display37ResetForceDeviceScaleFactorForTestingEv() local_unnamed_addr #3 align 2 {
  store i32 -1, i32* @_ZN7display12_GLOBAL__N_132g_has_forced_device_scale_factorE, align 4
  store float -1.000000e+00, float* @_ZN7display12_GLOBAL__N_128g_forced_device_scale_factorE, align 4
  ret void
}

; Function Attrs: nounwind ssp uwtable
define hidden void @_ZN7display7Display25SetForceDeviceScaleFactorEd(double) local_unnamed_addr #2 align 2 {
  %2 = alloca %"class.std::__1::basic_string", align 8
  store i32 -1, i32* @_ZN7display12_GLOBAL__N_132g_has_forced_device_scale_factorE, align 4
  store float -1.000000e+00, float* @_ZN7display12_GLOBAL__N_128g_forced_device_scale_factorE, align 4
  %3 = tail call %"class.base::CommandLine"* @_ZN4base11CommandLine17ForCurrentProcessEv() #12
  %4 = tail call i64 @strlen(i8* nonnull getelementptr inbounds ([0 x i8], [0 x i8]* @_ZN8switches23kForceDeviceScaleFactorE, i64 0, i64 0)) #12
  %5 = bitcast %"class.std::__1::basic_string"* %2 to i8*
  call void @llvm.lifetime.start.p0i8(i64 24, i8* nonnull %5) #12
  call void (%"class.std::__1::basic_string"*, i8*, ...) @_ZN4base12StringPrintfEPKcz(%"class.std::__1::basic_string"* nonnull sret %2, i8* getelementptr inbounds ([5 x i8], [5 x i8]* @.str, i64 0, i64 0), double %0) #12
  %6 = bitcast %"class.std::__1::basic_string"* %2 to %"struct.std::__1::basic_string<char, std::__1::char_traits<char>, std::__1::allocator<char> >::__short"*
  %7 = getelementptr inbounds %"struct.std::__1::basic_string<char, std::__1::char_traits<char>, std::__1::allocator<char> >::__short", %"struct.std::__1::basic_string<char, std::__1::char_traits<char>, std::__1::allocator<char> >::__short"* %6, i64 0, i32 1, i32 0
  %8 = load i8, i8* %7, align 1
  %9 = icmp slt i8 %8, 0
  %10 = getelementptr inbounds %"class.std::__1::basic_string", %"class.std::__1::basic_string"* %2, i64 0, i32 0, i32 0, i32 0, i32 0, i32 0, i32 0
  %11 = load i8*, i8** %10, align 8
  %12 = select i1 %9, i8* %11, i8* %5
  %13 = getelementptr inbounds %"class.std::__1::basic_string", %"class.std::__1::basic_string"* %2, i64 0, i32 0, i32 0, i32 0, i32 0, i32 0, i32 1
  %14 = load i64, i64* %13, align 8
  %15 = zext i8 %8 to i64
  %16 = select i1 %9, i64 %14, i64 %15
  call void @_ZN4base11CommandLine17AppendSwitchASCIIENS_16BasicStringPieceIcNSt3__111char_traitsIcEEEES5_(%"class.base::CommandLine"* %3, i8* getelementptr inbounds ([0 x i8], [0 x i8]* @_ZN8switches23kForceDeviceScaleFactorE, i64 0, i64 0), i64 %4, i8* %12, i64 %16) #12
  %17 = load i8, i8* %7, align 1
  %18 = icmp slt i8 %17, 0
  br i1 %18, label %19, label %21

19:                                               ; preds = %1
  %20 = load i8*, i8** %10, align 8
  call void @_ZdlPv(i8* %20) #13
  br label %21

21:                                               ; preds = %1, %19
  call void @llvm.lifetime.end.p0i8(i64 24, i8* nonnull %5) #12
  ret void
}

declare %"class.base::CommandLine"* @_ZN4base11CommandLine17ForCurrentProcessEv() local_unnamed_addr #4

declare void @_ZN4base11CommandLine17AppendSwitchASCIIENS_16BasicStringPieceIcNSt3__111char_traitsIcEEEES5_(%"class.base::CommandLine"*, i8*, i64, i8*, i64) local_unnamed_addr #4

declare void @_ZN4base12StringPrintfEPKcz(%"class.std::__1::basic_string"* sret, i8*, ...) local_unnamed_addr #4

; Function Attrs: nounwind ssp uwtable
define hidden void @_ZN7display7Display28GetForcedDisplayColorProfileEv(%"class.gfx::ColorSpace"* noalias sret) local_unnamed_addr #2 align 2 {
  %2 = alloca %"class.std::__1::basic_string", align 8
  %3 = bitcast %"class.std::__1::basic_string"* %2 to i8*
  call void @llvm.lifetime.start.p0i8(i64 24, i8* nonnull %3) #12
  %4 = bitcast %"class.std::__1::basic_string"* %2 to i8*
  call void @llvm.memset.p0i8.i64(i8* nonnull align 8 %4, i8 -86, i64 24, i1 false)
  %5 = tail call %"class.base::CommandLine"* @_ZN4base11CommandLine17ForCurrentProcessEv() #12
  %6 = tail call i64 @strlen(i8* nonnull getelementptr inbounds ([0 x i8], [0 x i8]* @_ZN8switches25kForceDisplayColorProfileE, i64 0, i64 0)) #12
  call void @_ZNK4base11CommandLine19GetSwitchValueASCIIENS_16BasicStringPieceIcNSt3__111char_traitsIcEEEE(%"class.std::__1::basic_string"* nonnull sret %2, %"class.base::CommandLine"* %5, i8* getelementptr inbounds ([0 x i8], [0 x i8]* @_ZN8switches25kForceDisplayColorProfileE, i64 0, i64 0), i64 %6) #12
  call fastcc void @_ZN7display12_GLOBAL__N_136ForcedColorProfileStringToColorSpaceERKNSt3__112basic_stringIcNS1_11char_traitsIcEENS1_9allocatorIcEEEE(%"class.gfx::ColorSpace"* sret %0, %"class.std::__1::basic_string"* nonnull dereferenceable(24) %2)
  %7 = bitcast %"class.std::__1::basic_string"* %2 to %"struct.std::__1::basic_string<char, std::__1::char_traits<char>, std::__1::allocator<char> >::__short"*
  %8 = getelementptr inbounds %"struct.std::__1::basic_string<char, std::__1::char_traits<char>, std::__1::allocator<char> >::__short", %"struct.std::__1::basic_string<char, std::__1::char_traits<char>, std::__1::allocator<char> >::__short"* %7, i64 0, i32 1, i32 0
  %9 = load i8, i8* %8, align 1
  %10 = icmp slt i8 %9, 0
  br i1 %10, label %11, label %14

11:                                               ; preds = %1
  %12 = getelementptr inbounds %"class.std::__1::basic_string", %"class.std::__1::basic_string"* %2, i64 0, i32 0, i32 0, i32 0, i32 0, i32 0, i32 0
  %13 = load i8*, i8** %12, align 8
  call void @_ZdlPv(i8* %13) #13
  br label %14

14:                                               ; preds = %1, %11
  call void @llvm.lifetime.end.p0i8(i64 24, i8* nonnull %3) #12
  ret void
}

declare void @_ZNK4base11CommandLine19GetSwitchValueASCIIENS_16BasicStringPieceIcNSt3__111char_traitsIcEEEE(%"class.std::__1::basic_string"* sret, %"class.base::CommandLine"*, i8*, i64) local_unnamed_addr #4

; Function Attrs: nounwind ssp uwtable
define internal fastcc void @_ZN7display12_GLOBAL__N_136ForcedColorProfileStringToColorSpaceERKNSt3__112basic_stringIcNS1_11char_traitsIcEENS1_9allocatorIcEEEE(%"class.gfx::ColorSpace"* noalias sret, %"class.std::__1::basic_string"* dereferenceable(24)) unnamed_addr #2 {
  %3 = alloca %"class.gfx::ColorSpace", align 4
  %4 = alloca %"class.gfx::ICCProfile", align 8
  %5 = alloca %"class.logging::LogMessage", align 8
  %6 = bitcast %"class.std::__1::basic_string"* %1 to %"struct.std::__1::basic_string<char, std::__1::char_traits<char>, std::__1::allocator<char> >::__short"*
  %7 = getelementptr inbounds %"struct.std::__1::basic_string<char, std::__1::char_traits<char>, std::__1::allocator<char> >::__short", %"struct.std::__1::basic_string<char, std::__1::char_traits<char>, std::__1::allocator<char> >::__short"* %6, i64 0, i32 1, i32 0
  %8 = load i8, i8* %7, align 1
  %9 = icmp slt i8 %8, 0
  %10 = getelementptr inbounds %"class.std::__1::basic_string", %"class.std::__1::basic_string"* %1, i64 0, i32 0, i32 0, i32 0, i32 0, i32 0, i32 1
  %11 = load i64, i64* %10, align 8
  %12 = zext i8 %8 to i64
  %13 = select i1 %9, i64 %11, i64 %12
  %14 = icmp eq i64 %13, 4
  br i1 %14, label %15, label %29

15:                                               ; preds = %2
  %16 = tail call i32 @_ZNKSt3__112basic_stringIcNS_11char_traitsIcEENS_9allocatorIcEEE7compareEmmPKcm(%"class.std::__1::basic_string"* %1, i64 0, i64 -1, i8* getelementptr inbounds ([5 x i8], [5 x i8]* @.str.9, i64 0, i64 0), i64 4) #12
  %17 = icmp eq i32 %16, 0
  br i1 %17, label %22, label %18

18:                                               ; preds = %15
  %19 = load i8, i8* %7, align 1
  %20 = load i64, i64* %10, align 8
  %21 = zext i8 %19 to i64
  br label %29

22:                                               ; preds = %15
  %23 = getelementptr inbounds %"class.gfx::ColorSpace", %"class.gfx::ColorSpace"* %0, i64 0, i32 0
  store i8 1, i8* %23, align 4, !alias.scope !2
  %24 = getelementptr inbounds %"class.gfx::ColorSpace", %"class.gfx::ColorSpace"* %0, i64 0, i32 1
  store i8 14, i8* %24, align 1, !alias.scope !2
  %25 = getelementptr inbounds %"class.gfx::ColorSpace", %"class.gfx::ColorSpace"* %0, i64 0, i32 2
  store i8 1, i8* %25, align 2, !alias.scope !2
  %26 = getelementptr inbounds %"class.gfx::ColorSpace", %"class.gfx::ColorSpace"* %0, i64 0, i32 3
  store i8 2, i8* %26, align 1, !alias.scope !2
  %27 = getelementptr inbounds %"class.gfx::ColorSpace", %"class.gfx::ColorSpace"* %0, i64 0, i32 4
  %28 = bitcast [9 x float]* %27 to i8*
  tail call void @llvm.memset.p0i8.i64(i8* align 4 %28, i8 0, i64 64, i1 false) #12, !alias.scope !2
  br label %177

29:                                               ; preds = %18, %2
  %30 = phi i64 [ %21, %18 ], [ %12, %2 ]
  %31 = phi i64 [ %20, %18 ], [ %11, %2 ]
  %32 = phi i8 [ %19, %18 ], [ %8, %2 ]
  %33 = icmp slt i8 %32, 0
  %34 = select i1 %33, i64 %31, i64 %30
  %35 = icmp eq i64 %34, 14
  br i1 %35, label %36, label %50

36:                                               ; preds = %29
  %37 = tail call i32 @_ZNKSt3__112basic_stringIcNS_11char_traitsIcEENS_9allocatorIcEEE7compareEmmPKcm(%"class.std::__1::basic_string"* %1, i64 0, i64 -1, i8* getelementptr inbounds ([15 x i8], [15 x i8]* @.str.10, i64 0, i64 0), i64 14) #12
  %38 = icmp eq i32 %37, 0
  br i1 %38, label %43, label %39

39:                                               ; preds = %36
  %40 = load i8, i8* %7, align 1
  %41 = load i64, i64* %10, align 8
  %42 = zext i8 %40 to i64
  br label %50

43:                                               ; preds = %36
  %44 = getelementptr inbounds %"class.gfx::ColorSpace", %"class.gfx::ColorSpace"* %0, i64 0, i32 0
  store i8 10, i8* %44, align 4, !alias.scope !5
  %45 = getelementptr inbounds %"class.gfx::ColorSpace", %"class.gfx::ColorSpace"* %0, i64 0, i32 1
  store i8 14, i8* %45, align 1, !alias.scope !5
  %46 = getelementptr inbounds %"class.gfx::ColorSpace", %"class.gfx::ColorSpace"* %0, i64 0, i32 2
  store i8 1, i8* %46, align 2, !alias.scope !5
  %47 = getelementptr inbounds %"class.gfx::ColorSpace", %"class.gfx::ColorSpace"* %0, i64 0, i32 3
  store i8 2, i8* %47, align 1, !alias.scope !5
  %48 = getelementptr inbounds %"class.gfx::ColorSpace", %"class.gfx::ColorSpace"* %0, i64 0, i32 4
  %49 = bitcast [9 x float]* %48 to i8*
  tail call void @llvm.memset.p0i8.i64(i8* align 4 %49, i8 0, i64 64, i1 false) #12, !alias.scope !5
  br label %177

50:                                               ; preds = %39, %29
  %51 = phi i64 [ %42, %39 ], [ %30, %29 ]
  %52 = phi i64 [ %41, %39 ], [ %31, %29 ]
  %53 = phi i8 [ %40, %39 ], [ %32, %29 ]
  %54 = icmp slt i8 %53, 0
  %55 = select i1 %54, i64 %52, i64 %51
  %56 = icmp eq i64 %55, 12
  br i1 %56, label %57, label %71

57:                                               ; preds = %50
  %58 = tail call i32 @_ZNKSt3__112basic_stringIcNS_11char_traitsIcEENS_9allocatorIcEEE7compareEmmPKcm(%"class.std::__1::basic_string"* %1, i64 0, i64 -1, i8* getelementptr inbounds ([13 x i8], [13 x i8]* @.str.11, i64 0, i64 0), i64 12) #12
  %59 = icmp eq i32 %58, 0
  br i1 %59, label %64, label %60

60:                                               ; preds = %57
  %61 = load i8, i8* %7, align 1
  %62 = load i64, i64* %10, align 8
  %63 = zext i8 %61 to i64
  br label %71

64:                                               ; preds = %57
  %65 = getelementptr inbounds %"class.gfx::ColorSpace", %"class.gfx::ColorSpace"* %0, i64 0, i32 0
  store i8 1, i8* %65, align 4, !alias.scope !8
  %66 = getelementptr inbounds %"class.gfx::ColorSpace", %"class.gfx::ColorSpace"* %0, i64 0, i32 1
  store i8 21, i8* %66, align 1, !alias.scope !8
  %67 = getelementptr inbounds %"class.gfx::ColorSpace", %"class.gfx::ColorSpace"* %0, i64 0, i32 2
  store i8 1, i8* %67, align 2, !alias.scope !8
  %68 = getelementptr inbounds %"class.gfx::ColorSpace", %"class.gfx::ColorSpace"* %0, i64 0, i32 3
  store i8 2, i8* %68, align 1, !alias.scope !8
  %69 = getelementptr inbounds %"class.gfx::ColorSpace", %"class.gfx::ColorSpace"* %0, i64 0, i32 4
  %70 = bitcast [9 x float]* %69 to i8*
  tail call void @llvm.memset.p0i8.i64(i8* align 4 %70, i8 0, i64 64, i1 false) #12, !alias.scope !8
  br label %177

71:                                               ; preds = %60, %50
  %72 = phi i64 [ %63, %60 ], [ %51, %50 ]
  %73 = phi i64 [ %62, %60 ], [ %52, %50 ]
  %74 = phi i8 [ %61, %60 ], [ %53, %50 ]
  %75 = icmp slt i8 %74, 0
  %76 = select i1 %75, i64 %73, i64 %72
  %77 = icmp eq i64 %76, 5
  br i1 %77, label %78, label %92

78:                                               ; preds = %71
  %79 = tail call i32 @_ZNKSt3__112basic_stringIcNS_11char_traitsIcEENS_9allocatorIcEEE7compareEmmPKcm(%"class.std::__1::basic_string"* %1, i64 0, i64 -1, i8* getelementptr inbounds ([6 x i8], [6 x i8]* @.str.12, i64 0, i64 0), i64 5) #12
  %80 = icmp eq i32 %79, 0
  br i1 %80, label %85, label %81

81:                                               ; preds = %78
  %82 = load i8, i8* %7, align 1
  %83 = load i64, i64* %10, align 8
  %84 = zext i8 %82 to i64
  br label %92

85:                                               ; preds = %78
  %86 = getelementptr inbounds %"class.gfx::ColorSpace", %"class.gfx::ColorSpace"* %0, i64 0, i32 0
  store i8 7, i8* %86, align 4, !alias.scope !11
  %87 = getelementptr inbounds %"class.gfx::ColorSpace", %"class.gfx::ColorSpace"* %0, i64 0, i32 1
  store i8 17, i8* %87, align 1, !alias.scope !11
  %88 = getelementptr inbounds %"class.gfx::ColorSpace", %"class.gfx::ColorSpace"* %0, i64 0, i32 2
  store i8 1, i8* %88, align 2, !alias.scope !11
  %89 = getelementptr inbounds %"class.gfx::ColorSpace", %"class.gfx::ColorSpace"* %0, i64 0, i32 3
  store i8 2, i8* %89, align 1, !alias.scope !11
  %90 = getelementptr inbounds %"class.gfx::ColorSpace", %"class.gfx::ColorSpace"* %0, i64 0, i32 4
  %91 = bitcast [9 x float]* %90 to i8*
  tail call void @llvm.memset.p0i8.i64(i8* align 4 %91, i8 0, i64 64, i1 false) #12, !alias.scope !11
  br label %177

92:                                               ; preds = %81, %71
  %93 = phi i64 [ %84, %81 ], [ %72, %71 ]
  %94 = phi i64 [ %83, %81 ], [ %73, %71 ]
  %95 = phi i8 [ %82, %81 ], [ %74, %71 ]
  %96 = icmp slt i8 %95, 0
  %97 = select i1 %96, i64 %94, i64 %93
  %98 = icmp eq i64 %97, 13
  br i1 %98, label %99, label %113

99:                                               ; preds = %92
  %100 = tail call i32 @_ZNKSt3__112basic_stringIcNS_11char_traitsIcEENS_9allocatorIcEEE7compareEmmPKcm(%"class.std::__1::basic_string"* %1, i64 0, i64 -1, i8* getelementptr inbounds ([14 x i8], [14 x i8]* @.str.13, i64 0, i64 0), i64 13) #12
  %101 = icmp eq i32 %100, 0
  br i1 %101, label %106, label %102

102:                                              ; preds = %99
  %103 = load i8, i8* %7, align 1
  %104 = load i64, i64* %10, align 8
  %105 = zext i8 %103 to i64
  br label %113

106:                                              ; preds = %99
  %107 = getelementptr inbounds %"class.gfx::ColorSpace", %"class.gfx::ColorSpace"* %0, i64 0, i32 0
  store i8 1, i8* %107, align 4, !alias.scope !14
  %108 = getelementptr inbounds %"class.gfx::ColorSpace", %"class.gfx::ColorSpace"* %0, i64 0, i32 1
  store i8 20, i8* %108, align 1, !alias.scope !14
  %109 = getelementptr inbounds %"class.gfx::ColorSpace", %"class.gfx::ColorSpace"* %0, i64 0, i32 2
  store i8 1, i8* %109, align 2, !alias.scope !14
  %110 = getelementptr inbounds %"class.gfx::ColorSpace", %"class.gfx::ColorSpace"* %0, i64 0, i32 3
  store i8 2, i8* %110, align 1, !alias.scope !14
  %111 = getelementptr inbounds %"class.gfx::ColorSpace", %"class.gfx::ColorSpace"* %0, i64 0, i32 4
  %112 = bitcast [9 x float]* %111 to i8*
  tail call void @llvm.memset.p0i8.i64(i8* align 4 %112, i8 0, i64 64, i1 false) #12, !alias.scope !14
  br label %177

113:                                              ; preds = %102, %92
  %114 = phi i64 [ %105, %102 ], [ %93, %92 ]
  %115 = phi i64 [ %104, %102 ], [ %94, %92 ]
  %116 = phi i8 [ %103, %102 ], [ %95, %92 ]
  %117 = icmp slt i8 %116, 0
  %118 = select i1 %117, i64 %115, i64 %114
  %119 = icmp eq i64 %118, 11
  br i1 %119, label %120, label %134

120:                                              ; preds = %113
  %121 = tail call i32 @_ZNKSt3__112basic_stringIcNS_11char_traitsIcEENS_9allocatorIcEEE7compareEmmPKcm(%"class.std::__1::basic_string"* %1, i64 0, i64 -1, i8* getelementptr inbounds ([12 x i8], [12 x i8]* @.str.14, i64 0, i64 0), i64 11) #12
  %122 = icmp eq i32 %121, 0
  br i1 %122, label %127, label %123

123:                                              ; preds = %120
  %124 = load i8, i8* %7, align 1
  %125 = load i64, i64* %10, align 8
  %126 = zext i8 %124 to i64
  br label %134

127:                                              ; preds = %120
  %128 = getelementptr inbounds %"class.gfx::ColorSpace", %"class.gfx::ColorSpace"* %0, i64 0, i32 0
  store i8 13, i8* %128, align 4
  %129 = getelementptr inbounds %"class.gfx::ColorSpace", %"class.gfx::ColorSpace"* %0, i64 0, i32 1
  store i8 3, i8* %129, align 1
  %130 = getelementptr inbounds %"class.gfx::ColorSpace", %"class.gfx::ColorSpace"* %0, i64 0, i32 2
  store i8 1, i8* %130, align 2
  %131 = getelementptr inbounds %"class.gfx::ColorSpace", %"class.gfx::ColorSpace"* %0, i64 0, i32 3
  store i8 2, i8* %131, align 1
  %132 = getelementptr inbounds %"class.gfx::ColorSpace", %"class.gfx::ColorSpace"* %0, i64 0, i32 4
  %133 = bitcast [9 x float]* %132 to i8*
  tail call void @llvm.memset.p0i8.i64(i8* align 4 %133, i8 0, i64 64, i1 false) #12
  br label %177

134:                                              ; preds = %123, %113
  %135 = phi i64 [ %126, %123 ], [ %114, %113 ]
  %136 = phi i64 [ %125, %123 ], [ %115, %113 ]
  %137 = phi i8 [ %124, %123 ], [ %116, %113 ]
  %138 = icmp slt i8 %137, 0
  %139 = select i1 %138, i64 %136, i64 %135
  %140 = icmp eq i64 %139, 18
  br i1 %140, label %141, label %152

141:                                              ; preds = %134
  %142 = tail call i32 @_ZNKSt3__112basic_stringIcNS_11char_traitsIcEENS_9allocatorIcEEE7compareEmmPKcm(%"class.std::__1::basic_string"* %1, i64 0, i64 -1, i8* getelementptr inbounds ([19 x i8], [19 x i8]* @.str.15, i64 0, i64 0), i64 18) #12
  %143 = icmp eq i32 %142, 0
  br i1 %143, label %144, label %152

144:                                              ; preds = %141
  %145 = getelementptr inbounds %"class.gfx::ColorSpace", %"class.gfx::ColorSpace"* %3, i64 0, i32 0
  call void @llvm.lifetime.start.p0i8(i64 68, i8* nonnull %145) #12
  store i8 14, i8* %145, align 4
  %146 = getelementptr inbounds %"class.gfx::ColorSpace", %"class.gfx::ColorSpace"* %3, i64 0, i32 1
  store i8 5, i8* %146, align 1
  %147 = getelementptr inbounds %"class.gfx::ColorSpace", %"class.gfx::ColorSpace"* %3, i64 0, i32 2
  store i8 1, i8* %147, align 2
  %148 = getelementptr inbounds %"class.gfx::ColorSpace", %"class.gfx::ColorSpace"* %3, i64 0, i32 3
  store i8 2, i8* %148, align 1
  %149 = getelementptr inbounds %"class.gfx::ColorSpace", %"class.gfx::ColorSpace"* %3, i64 0, i32 4
  %150 = bitcast [9 x float]* %149 to i8*
  call void @llvm.memset.p0i8.i64(i8* align 4 %150, i8 0, i64 64, i1 false) #12
  %151 = bitcast %"class.gfx::ICCProfile"* %4 to i8*
  call void @llvm.lifetime.start.p0i8(i64 8, i8* nonnull %151) #12
  call void @_ZN3gfx10ICCProfile14FromColorSpaceERKNS_10ColorSpaceE(%"class.gfx::ICCProfile"* nonnull sret %4, %"class.gfx::ColorSpace"* nonnull dereferenceable(68) %3) #12
  call void @_ZNK3gfx10ICCProfile13GetColorSpaceEv(%"class.gfx::ColorSpace"* sret %0, %"class.gfx::ICCProfile"* nonnull %4) #12
  call void @_ZN3gfx10ICCProfileD1Ev(%"class.gfx::ICCProfile"* nonnull %4) #12
  call void @llvm.lifetime.end.p0i8(i64 8, i8* nonnull %151) #12
  call void @llvm.lifetime.end.p0i8(i64 68, i8* nonnull %145) #12
  br label %177

152:                                              ; preds = %134, %141
  %153 = tail call zeroext i1 @_ZN7logging22ShouldCreateLogMessageEi(i32 2) #12
  br i1 %153, label %154, label %170

154:                                              ; preds = %152
  %155 = bitcast %"class.logging::LogMessage"* %5 to i8*
  call void @llvm.lifetime.start.p0i8(i64 304, i8* nonnull %155) #12
  call void @_ZN7logging10LogMessageC1EPKcii(%"class.logging::LogMessage"* nonnull %5, i8* getelementptr inbounds ([28 x i8], [28 x i8]* @.str.4, i64 0, i64 0), i32 84, i32 2) #12
  %156 = getelementptr inbounds %"class.logging::LogMessage", %"class.logging::LogMessage"* %5, i64 0, i32 2
  %157 = bitcast %"class.std::__1::basic_ostringstream"* %156 to %"class.std::__1::basic_ostream"*
  %158 = call dereferenceable(160) %"class.std::__1::basic_ostream"* @_ZNSt3__124__put_character_sequenceIcNS_11char_traitsIcEEEERNS_13basic_ostreamIT_T0_EES7_PKS4_m(%"class.std::__1::basic_ostream"* dereferenceable(160) %157, i8* getelementptr inbounds ([32 x i8], [32 x i8]* @.str.16, i64 0, i64 0), i64 31) #12
  %159 = load i8, i8* %7, align 1
  %160 = icmp slt i8 %159, 0
  %161 = getelementptr inbounds %"class.std::__1::basic_string", %"class.std::__1::basic_string"* %1, i64 0, i32 0, i32 0, i32 0, i32 0, i32 0, i32 0
  %162 = load i8*, i8** %161, align 8
  %163 = load i64, i64* %10, align 8
  %164 = bitcast %"class.std::__1::basic_string"* %1 to i8*
  %165 = zext i8 %159 to i64
  %166 = select i1 %160, i8* %162, i8* %164
  %167 = select i1 %160, i64 %163, i64 %165
  %168 = call dereferenceable(160) %"class.std::__1::basic_ostream"* @_ZNSt3__124__put_character_sequenceIcNS_11char_traitsIcEEEERNS_13basic_ostreamIT_T0_EES7_PKS4_m(%"class.std::__1::basic_ostream"* dereferenceable(160) %158, i8* %166, i64 %167) #12
  %169 = call dereferenceable(160) %"class.std::__1::basic_ostream"* @_ZNSt3__124__put_character_sequenceIcNS_11char_traitsIcEEEERNS_13basic_ostreamIT_T0_EES7_PKS4_m(%"class.std::__1::basic_ostream"* dereferenceable(160) %168, i8* getelementptr inbounds ([2 x i8], [2 x i8]* @.str.17, i64 0, i64 0), i64 1) #12
  call void @_ZN7logging10LogMessageD1Ev(%"class.logging::LogMessage"* nonnull %5) #12
  call void @llvm.lifetime.end.p0i8(i64 304, i8* nonnull %155) #12
  br label %170

170:                                              ; preds = %152, %154
  %171 = getelementptr inbounds %"class.gfx::ColorSpace", %"class.gfx::ColorSpace"* %0, i64 0, i32 0
  store i8 1, i8* %171, align 4, !alias.scope !17
  %172 = getelementptr inbounds %"class.gfx::ColorSpace", %"class.gfx::ColorSpace"* %0, i64 0, i32 1
  store i8 14, i8* %172, align 1, !alias.scope !17
  %173 = getelementptr inbounds %"class.gfx::ColorSpace", %"class.gfx::ColorSpace"* %0, i64 0, i32 2
  store i8 1, i8* %173, align 2, !alias.scope !17
  %174 = getelementptr inbounds %"class.gfx::ColorSpace", %"class.gfx::ColorSpace"* %0, i64 0, i32 3
  store i8 2, i8* %174, align 1, !alias.scope !17
  %175 = getelementptr inbounds %"class.gfx::ColorSpace", %"class.gfx::ColorSpace"* %0, i64 0, i32 4
  %176 = bitcast [9 x float]* %175 to i8*
  call void @llvm.memset.p0i8.i64(i8* align 4 %176, i8 0, i64 64, i1 false) #12, !alias.scope !17
  br label %177

177:                                              ; preds = %170, %144, %127, %106, %85, %64, %43, %22
  ret void
}

; Function Attrs: nounwind ssp uwtable
define hidden zeroext i1 @_ZN7display7Display27HasForceDisplayColorProfileEv() local_unnamed_addr #2 align 2 {
  %1 = tail call %"class.base::CommandLine"* @_ZN4base11CommandLine17ForCurrentProcessEv() #12
  %2 = tail call zeroext i1 @_ZNK4base11CommandLine9HasSwitchEPKc(%"class.base::CommandLine"* %1, i8* getelementptr inbounds ([0 x i8], [0 x i8]* @_ZN8switches25kForceDisplayColorProfileE, i64 0, i64 0)) #12
  ret i1 %2
}

declare zeroext i1 @_ZNK4base11CommandLine9HasSwitchEPKc(%"class.base::CommandLine"*, i8*) local_unnamed_addr #4

; Function Attrs: nounwind ssp uwtable
define hidden void @_ZN7display7Display27GetForcedRasterColorProfileEv(%"class.gfx::ColorSpace"* noalias sret) local_unnamed_addr #2 align 2 {
  %2 = alloca %"class.std::__1::basic_string", align 8
  %3 = bitcast %"class.std::__1::basic_string"* %2 to i8*
  call void @llvm.lifetime.start.p0i8(i64 24, i8* nonnull %3) #12
  %4 = bitcast %"class.std::__1::basic_string"* %2 to i8*
  call void @llvm.memset.p0i8.i64(i8* nonnull align 8 %4, i8 -86, i64 24, i1 false)
  %5 = tail call %"class.base::CommandLine"* @_ZN4base11CommandLine17ForCurrentProcessEv() #12
  %6 = tail call i64 @strlen(i8* nonnull getelementptr inbounds ([0 x i8], [0 x i8]* @_ZN8switches24kForceRasterColorProfileE, i64 0, i64 0)) #12
  call void @_ZNK4base11CommandLine19GetSwitchValueASCIIENS_16BasicStringPieceIcNSt3__111char_traitsIcEEEE(%"class.std::__1::basic_string"* nonnull sret %2, %"class.base::CommandLine"* %5, i8* getelementptr inbounds ([0 x i8], [0 x i8]* @_ZN8switches24kForceRasterColorProfileE, i64 0, i64 0), i64 %6) #12
  call fastcc void @_ZN7display12_GLOBAL__N_136ForcedColorProfileStringToColorSpaceERKNSt3__112basic_stringIcNS1_11char_traitsIcEENS1_9allocatorIcEEEE(%"class.gfx::ColorSpace"* sret %0, %"class.std::__1::basic_string"* nonnull dereferenceable(24) %2)
  %7 = bitcast %"class.std::__1::basic_string"* %2 to %"struct.std::__1::basic_string<char, std::__1::char_traits<char>, std::__1::allocator<char> >::__short"*
  %8 = getelementptr inbounds %"struct.std::__1::basic_string<char, std::__1::char_traits<char>, std::__1::allocator<char> >::__short", %"struct.std::__1::basic_string<char, std::__1::char_traits<char>, std::__1::allocator<char> >::__short"* %7, i64 0, i32 1, i32 0
  %9 = load i8, i8* %8, align 1
  %10 = icmp slt i8 %9, 0
  br i1 %10, label %11, label %14

11:                                               ; preds = %1
  %12 = getelementptr inbounds %"class.std::__1::basic_string", %"class.std::__1::basic_string"* %2, i64 0, i32 0, i32 0, i32 0, i32 0, i32 0, i32 0
  %13 = load i8*, i8** %12, align 8
  call void @_ZdlPv(i8* %13) #13
  br label %14

14:                                               ; preds = %1, %11
  call void @llvm.lifetime.end.p0i8(i64 24, i8* nonnull %3) #12
  ret void
}

; Function Attrs: nounwind ssp uwtable
define hidden zeroext i1 @_ZN7display7Display26HasForceRasterColorProfileEv() local_unnamed_addr #2 align 2 {
  %1 = tail call %"class.base::CommandLine"* @_ZN4base11CommandLine17ForCurrentProcessEv() #12
  %2 = tail call zeroext i1 @_ZNK4base11CommandLine9HasSwitchEPKc(%"class.base::CommandLine"* %1, i8* getelementptr inbounds ([0 x i8], [0 x i8]* @_ZN8switches24kForceRasterColorProfileE, i64 0, i64 0)) #12
  ret i1 %2
}

; Function Attrs: nounwind ssp uwtable
define hidden zeroext i1 @_ZN7display7Display27HasEnsureForcedColorProfileEv() local_unnamed_addr #2 align 2 {
  %1 = load atomic i8, i8* bitcast (i64* @_ZGVZN7display7Display27HasEnsureForcedColorProfileEvE31has_ensure_forced_color_profile to i8*) acquire, align 8
  %2 = icmp eq i8 %1, 0
  br i1 %2, label %3, label %10, !prof !20

3:                                                ; preds = %0
  %4 = tail call i32 @__cxa_guard_acquire(i64* nonnull @_ZGVZN7display7Display27HasEnsureForcedColorProfileEvE31has_ensure_forced_color_profile) #12
  %5 = icmp eq i32 %4, 0
  br i1 %5, label %10, label %6

6:                                                ; preds = %3
  %7 = tail call %"class.base::CommandLine"* @_ZN4base11CommandLine17ForCurrentProcessEv() #12
  %8 = tail call zeroext i1 @_ZNK4base11CommandLine9HasSwitchEPKc(%"class.base::CommandLine"* %7, i8* getelementptr inbounds ([0 x i8], [0 x i8]* @_ZN8switches25kEnsureForcedColorProfileE, i64 0, i64 0)) #12
  %9 = zext i1 %8 to i8
  store i8 %9, i8* @_ZZN7display7Display27HasEnsureForcedColorProfileEvE31has_ensure_forced_color_profile, align 1
  tail call void @__cxa_guard_release(i64* nonnull @_ZGVZN7display7Display27HasEnsureForcedColorProfileEvE31has_ensure_forced_color_profile) #12
  br label %10

10:                                               ; preds = %3, %6, %0
  %11 = load i8, i8* @_ZZN7display7Display27HasEnsureForcedColorProfileEvE31has_ensure_forced_color_profile, align 1, !range !21
  %12 = icmp ne i8 %11, 0
  ret i1 %12
}

; Function Attrs: nofree nounwind
declare i32 @__cxa_guard_acquire(i64*) local_unnamed_addr #5

; Function Attrs: nofree nounwind
declare void @__cxa_guard_release(i64*) local_unnamed_addr #5

; Function Attrs: norecurse nounwind readnone ssp uwtable
define hidden i32 @_ZN7display7Display17DegreesToRotationEi(i32) local_unnamed_addr #6 align 2 {
  switch i32 %0, label %5 [
    i32 270, label %4
    i32 90, label %2
    i32 180, label %3
  ]

2:                                                ; preds = %1
  br label %5

3:                                                ; preds = %1
  br label %5

4:                                                ; preds = %1
  br label %5

5:                                                ; preds = %1, %4, %3, %2
  %6 = phi i32 [ 1, %2 ], [ 2, %3 ], [ 3, %4 ], [ 0, %1 ]
  ret i32 %6
}

; Function Attrs: norecurse nounwind readnone ssp uwtable
define hidden i32 @_ZN7display7Display17RotationToDegreesENS0_8RotationE(i32) local_unnamed_addr #6 align 2 {
  %2 = add i32 %0, -1
  %3 = icmp ult i32 %2, 3
  br i1 %3, label %4, label %7

4:                                                ; preds = %1
  %5 = mul i32 %2, 90
  %6 = add i32 %5, 90
  ret i32 %6

7:                                                ; preds = %1
  ret i32 0
}

; Function Attrs: norecurse nounwind readnone ssp uwtable
define hidden zeroext i1 @_ZN7display7Display15IsValidRotationEi(i32) local_unnamed_addr #6 align 2 {
  switch i32 %0, label %2 [
    i32 180, label %3
    i32 90, label %3
    i32 0, label %3
    i32 270, label %3
  ]

2:                                                ; preds = %1
  br label %3

3:                                                ; preds = %1, %1, %1, %1, %2
  %4 = phi i1 [ true, %1 ], [ false, %2 ], [ true, %1 ], [ true, %1 ], [ true, %1 ]
  ret i1 %4
}

; Function Attrs: nounwind ssp uwtable
define hidden void @_ZN7display7DisplayC2Ev(%"class.display::Display"*) unnamed_addr #2 align 2 {
  %2 = alloca %"class.gfx::Rect", align 4
  %3 = bitcast %"class.gfx::Rect"* %2 to i8*
  call void @llvm.lifetime.start.p0i8(i64 16, i8* nonnull %3) #12
  call void @llvm.memset.p0i8.i64(i8* nonnull align 4 %3, i8 0, i64 16, i1 false) #12
  call void @_ZN7display7DisplayC2ElRKN3gfx4RectE(%"class.display::Display"* %0, i64 -1, %"class.gfx::Rect"* nonnull dereferenceable(16) %2) #12
  call void @llvm.lifetime.end.p0i8(i64 16, i8* nonnull %3) #12
  ret void
}

; Function Attrs: nounwind ssp uwtable
define hidden void @_ZN7display7DisplayC2El(%"class.display::Display"*, i64) unnamed_addr #2 align 2 {
  %3 = alloca %"class.gfx::Rect", align 4
  %4 = bitcast %"class.gfx::Rect"* %3 to i8*
  call void @llvm.lifetime.start.p0i8(i64 16, i8* nonnull %4) #12
  %5 = bitcast %"class.gfx::Rect"* %3 to i8*
  call void @llvm.memset.p0i8.i64(i8* nonnull align 4 %5, i8 0, i64 16, i1 false)
  call void @_ZN7display7DisplayC2ElRKN3gfx4RectE(%"class.display::Display"* %0, i64 %1, %"class.gfx::Rect"* nonnull dereferenceable(16) %3)
  call void @llvm.lifetime.end.p0i8(i64 16, i8* nonnull %4) #12
  ret void
}

; Function Attrs: argmemonly nounwind
declare void @llvm.memset.p0i8.i64(i8* nocapture writeonly, i8, i64, i1 immarg) #1

; Function Attrs: nounwind ssp uwtable
define hidden void @_ZN7display7DisplayC2ElRKN3gfx4RectE(%"class.display::Display"*, i64, %"class.gfx::Rect"* nocapture readonly dereferenceable(16)) unnamed_addr #2 align 2 {
  %4 = alloca %"class.std::__1::basic_string", align 8
  %5 = alloca %"class.gfx::ColorSpace", align 4
  %6 = alloca %"class.gfx::ColorSpace", align 4
  %7 = alloca %"class.gfx::DisplayColorSpaces", align 8
  %8 = getelementptr inbounds %"class.display::Display", %"class.display::Display"* %0, i64 0, i32 0
  store i64 %1, i64* %8, align 8
  %9 = getelementptr inbounds %"class.display::Display", %"class.display::Display"* %0, i64 0, i32 1
  %10 = bitcast %"class.gfx::Rect"* %9 to i8*
  %11 = bitcast %"class.gfx::Rect"* %2 to i8*
  tail call void @llvm.memcpy.p0i8.p0i8.i64(i8* align 8 %10, i8* align 4 %11, i64 16, i1 false)
  %12 = getelementptr inbounds %"class.display::Display", %"class.display::Display"* %0, i64 0, i32 2, i32 0
  store i32 0, i32* %12, align 4
  %13 = getelementptr inbounds %"class.display::Display", %"class.display::Display"* %0, i64 0, i32 2, i32 1
  store i32 0, i32* %13, align 4
  %14 = getelementptr inbounds %"class.display::Display", %"class.display::Display"* %0, i64 0, i32 3
  %15 = bitcast %"class.gfx::Rect"* %14 to i8*
  tail call void @llvm.memcpy.p0i8.p0i8.i64(i8* align 8 %15, i8* align 4 %11, i64 16, i1 false)
  %16 = getelementptr inbounds %"class.display::Display", %"class.display::Display"* %0, i64 0, i32 4
  %17 = tail call float @_ZN7display7Display26GetForcedDeviceScaleFactorEv()
  store float %17, float* %16, align 8
  %18 = getelementptr inbounds %"class.display::Display", %"class.display::Display"* %0, i64 0, i32 5
  store i32 0, i32* %18, align 4
  %19 = getelementptr inbounds %"class.display::Display", %"class.display::Display"* %0, i64 0, i32 6, i32 0, i32 0, i32 0, i32 0
  store i8 0, i8* %19, align 4
  %20 = getelementptr inbounds %"class.display::Display", %"class.display::Display"* %0, i64 0, i32 7
  %21 = getelementptr inbounds %"class.display::Display", %"class.display::Display"* %0, i64 0, i32 10
  %22 = bitcast i32* %20 to i8*
  call void @llvm.memset.p0i8.i64(i8* align 8 %22, i8 0, i64 16, i1 false)
  tail call void @_ZN3gfx18DisplayColorSpacesC1Ev(%"class.gfx::DisplayColorSpaces"* %21) #12
  %23 = getelementptr inbounds %"class.display::Display", %"class.display::Display"* %0, i64 0, i32 13
  store i8 0, i8* %23, align 8
  %24 = getelementptr inbounds %"class.display::Display", %"class.display::Display"* %0, i64 0, i32 14
  store i32 0, i32* %24, align 4
  %25 = getelementptr inbounds %"class.gfx::ColorSpace", %"class.gfx::ColorSpace"* %5, i64 0, i32 0
  call void @llvm.lifetime.start.p0i8(i64 68, i8* nonnull %25) #12
  store i8 1, i8* %25, align 4, !alias.scope !22
  %26 = getelementptr inbounds %"class.gfx::ColorSpace", %"class.gfx::ColorSpace"* %5, i64 0, i32 1
  store i8 14, i8* %26, align 1, !alias.scope !22
  %27 = getelementptr inbounds %"class.gfx::ColorSpace", %"class.gfx::ColorSpace"* %5, i64 0, i32 2
  store i8 1, i8* %27, align 2, !alias.scope !22
  %28 = getelementptr inbounds %"class.gfx::ColorSpace", %"class.gfx::ColorSpace"* %5, i64 0, i32 3
  store i8 2, i8* %28, align 1, !alias.scope !22
  %29 = getelementptr inbounds %"class.gfx::ColorSpace", %"class.gfx::ColorSpace"* %5, i64 0, i32 4
  %30 = bitcast [9 x float]* %29 to i8*
  call void @llvm.memset.p0i8.i64(i8* align 4 %30, i8 0, i64 64, i1 false) #12, !alias.scope !22
  %31 = tail call %"class.base::CommandLine"* @_ZN4base11CommandLine17ForCurrentProcessEv() #12
  %32 = tail call zeroext i1 @_ZNK4base11CommandLine9HasSwitchEPKc(%"class.base::CommandLine"* %31, i8* getelementptr inbounds ([0 x i8], [0 x i8]* @_ZN8switches25kForceDisplayColorProfileE, i64 0, i64 0)) #12
  br i1 %32, label %33, label %46

33:                                               ; preds = %3
  %34 = getelementptr inbounds %"class.gfx::ColorSpace", %"class.gfx::ColorSpace"* %6, i64 0, i32 0
  call void @llvm.lifetime.start.p0i8(i64 68, i8* nonnull %34) #12
  %35 = bitcast %"class.std::__1::basic_string"* %4 to i8*
  call void @llvm.lifetime.start.p0i8(i64 24, i8* nonnull %35) #12, !noalias !25
  call void @llvm.memset.p0i8.i64(i8* nonnull align 8 %35, i8 -86, i64 24, i1 false) #12, !noalias !25
  %36 = tail call %"class.base::CommandLine"* @_ZN4base11CommandLine17ForCurrentProcessEv() #12, !noalias !25
  %37 = tail call i64 @strlen(i8* nonnull getelementptr inbounds ([0 x i8], [0 x i8]* @_ZN8switches25kForceDisplayColorProfileE, i64 0, i64 0)) #12, !noalias !25
  call void @_ZNK4base11CommandLine19GetSwitchValueASCIIENS_16BasicStringPieceIcNSt3__111char_traitsIcEEEE(%"class.std::__1::basic_string"* nonnull sret %4, %"class.base::CommandLine"* %36, i8* getelementptr inbounds ([0 x i8], [0 x i8]* @_ZN8switches25kForceDisplayColorProfileE, i64 0, i64 0), i64 %37) #12, !noalias !25
  call fastcc void @_ZN7display12_GLOBAL__N_136ForcedColorProfileStringToColorSpaceERKNSt3__112basic_stringIcNS1_11char_traitsIcEENS1_9allocatorIcEEEE(%"class.gfx::ColorSpace"* nonnull sret %6, %"class.std::__1::basic_string"* nonnull dereferenceable(24) %4) #12
  %38 = bitcast %"class.std::__1::basic_string"* %4 to %"struct.std::__1::basic_string<char, std::__1::char_traits<char>, std::__1::allocator<char> >::__short"*
  %39 = getelementptr inbounds %"struct.std::__1::basic_string<char, std::__1::char_traits<char>, std::__1::allocator<char> >::__short", %"struct.std::__1::basic_string<char, std::__1::char_traits<char>, std::__1::allocator<char> >::__short"* %38, i64 0, i32 1, i32 0
  %40 = load i8, i8* %39, align 1, !noalias !25
  %41 = icmp slt i8 %40, 0
  br i1 %41, label %42, label %45

42:                                               ; preds = %33
  %43 = getelementptr inbounds %"class.std::__1::basic_string", %"class.std::__1::basic_string"* %4, i64 0, i32 0, i32 0, i32 0, i32 0, i32 0, i32 0
  %44 = load i8*, i8** %43, align 8, !noalias !25
  call void @_ZdlPv(i8* %44) #13
  br label %45

45:                                               ; preds = %33, %42
  call void @llvm.lifetime.end.p0i8(i64 24, i8* nonnull %35) #12, !noalias !25
  call void @llvm.memcpy.p0i8.p0i8.i64(i8* nonnull align 4 %25, i8* nonnull align 4 %34, i64 68, i1 false)
  call void @llvm.lifetime.end.p0i8(i64 68, i8* nonnull %34) #12
  br label %46

46:                                               ; preds = %45, %3
  %47 = getelementptr inbounds %"class.gfx::DisplayColorSpaces", %"class.gfx::DisplayColorSpaces"* %7, i64 0, i32 0, i64 0, i32 0
  call void @llvm.lifetime.start.p0i8(i64 472, i8* nonnull %47) #12
  call void @_ZN3gfx18DisplayColorSpacesC1ERKNS_10ColorSpaceE(%"class.gfx::DisplayColorSpaces"* nonnull %7, %"class.gfx::ColorSpace"* nonnull dereferenceable(68) %5) #12
  %48 = getelementptr inbounds %"class.gfx::DisplayColorSpaces", %"class.gfx::DisplayColorSpaces"* %21, i64 0, i32 0, i64 0, i32 0
  call void @llvm.memcpy.p0i8.p0i8.i64(i8* align 8 %48, i8* nonnull align 8 %47, i64 436, i1 false) #12
  %49 = getelementptr inbounds %"class.display::Display", %"class.display::Display"* %0, i64 0, i32 10, i32 3
  %50 = getelementptr inbounds %"class.gfx::DisplayColorSpaces", %"class.gfx::DisplayColorSpaces"* %7, i64 0, i32 3, i32 0, i32 0, i32 0, i32 0
  %51 = load i8, i8* %50, align 8, !range !21
  %52 = icmp eq i8 %51, 0
  br i1 %52, label %63, label %53

53:                                               ; preds = %46
  %54 = getelementptr inbounds %"class.gfx::DisplayColorSpaces", %"class.gfx::DisplayColorSpaces"* %7, i64 0, i32 3, i32 0, i32 0, i32 0, i32 1, i32 0
  %55 = getelementptr inbounds %"class.absl::optional.15", %"class.absl::optional.15"* %49, i64 0, i32 0, i32 0, i32 0, i32 0
  %56 = load i8, i8* %55, align 8, !range !21
  %57 = icmp eq i8 %56, 0
  %58 = getelementptr inbounds %"class.display::Display", %"class.display::Display"* %0, i64 0, i32 10, i32 3, i32 0, i32 0, i32 0, i32 1, i32 0
  br i1 %57, label %62, label %59

59:                                               ; preds = %53
  %60 = bitcast %"struct.gfx::HDRStaticMetadata"* %58 to i8*
  %61 = bitcast %"struct.gfx::HDRStaticMetadata"* %54 to i8*
  call void @llvm.memcpy.p0i8.p0i8.i64(i8* align 8 %60, i8* align 8 %61, i64 24, i1 false) #12
  br label %65

62:                                               ; preds = %53
  call void @_ZN3gfx17HDRStaticMetadataC1ERKS0_(%"struct.gfx::HDRStaticMetadata"* %58, %"struct.gfx::HDRStaticMetadata"* dereferenceable(24) %54) #12
  store i8 1, i8* %55, align 8
  br label %65

63:                                               ; preds = %46
  %64 = getelementptr inbounds %"class.absl::optional.15", %"class.absl::optional.15"* %49, i64 0, i32 0, i32 0, i32 0, i32 0
  store i8 0, i8* %64, align 8
  br label %65

65:                                               ; preds = %59, %62, %63
  call void @llvm.lifetime.end.p0i8(i64 472, i8* nonnull %47) #12
  %66 = call zeroext i1 @_ZNK3gfx18DisplayColorSpaces11SupportsHDREv(%"class.gfx::DisplayColorSpaces"* %21) #12
  %67 = getelementptr inbounds %"class.display::Display", %"class.display::Display"* %0, i64 0, i32 11
  %68 = select i1 %66, i32 30, i32 24
  %69 = select i1 %66, i32 10, i32 8
  store i32 %68, i32* %67, align 8
  %70 = getelementptr inbounds %"class.display::Display", %"class.display::Display"* %0, i64 0, i32 12
  store i32 %69, i32* %70, align 4
  %71 = getelementptr inbounds %"class.gfx::Rect", %"class.gfx::Rect"* %2, i64 0, i32 1, i32 0
  %72 = load i32, i32* %71, align 4
  %73 = icmp eq i32 %72, 0
  br i1 %73, label %80, label %74

74:                                               ; preds = %65
  %75 = getelementptr inbounds %"class.gfx::Rect", %"class.gfx::Rect"* %2, i64 0, i32 1, i32 1
  %76 = load i32, i32* %75, align 4
  %77 = icmp eq i32 %76, 0
  br i1 %77, label %80, label %78

78:                                               ; preds = %74
  %79 = load float, float* %16, align 8
  call void @_ZN7display7Display17SetScaleAndBoundsEfRKN3gfx4RectE(%"class.display::Display"* %0, float %79, %"class.gfx::Rect"* dereferenceable(16) %2)
  br label %80

80:                                               ; preds = %65, %78, %74
  call void @llvm.lifetime.end.p0i8(i64 68, i8* nonnull %25) #12
  ret void
}

; Function Attrs: argmemonly nounwind
declare void @llvm.memcpy.p0i8.p0i8.i64(i8* nocapture writeonly, i8* nocapture readonly, i64, i1 immarg) #1

declare void @_ZN3gfx18DisplayColorSpacesC1Ev(%"class.gfx::DisplayColorSpaces"*) unnamed_addr #4

declare void @_ZN3gfx18DisplayColorSpacesC1ERKNS_10ColorSpaceE(%"class.gfx::DisplayColorSpaces"*, %"class.gfx::ColorSpace"* dereferenceable(68)) unnamed_addr #4

declare zeroext i1 @_ZNK3gfx18DisplayColorSpaces11SupportsHDREv(%"class.gfx::DisplayColorSpaces"*) local_unnamed_addr #4

; Function Attrs: nounwind ssp uwtable
define hidden void @_ZN7display7Display17SetScaleAndBoundsEfRKN3gfx4RectE(%"class.display::Display"*, float, %"class.gfx::Rect"* nocapture readonly dereferenceable(16)) local_unnamed_addr #7 align 2 {
  %4 = alloca { i64, i64 }, align 8
  %5 = bitcast { i64, i64 }* %4 to %"class.gfx::Insets"*
  %6 = alloca float, align 4
  %7 = alloca %"class.gfx::RectF", align 8
  %8 = bitcast { i64, i64 }* %4 to i8*
  call void @llvm.lifetime.start.p0i8(i64 16, i8* nonnull %8) #12
  %9 = getelementptr inbounds { i64, i64 }, { i64, i64 }* %4, i64 0, i32 1
  %10 = getelementptr inbounds %"class.display::Display", %"class.display::Display"* %0, i64 0, i32 1
  %11 = getelementptr inbounds %"class.display::Display", %"class.display::Display"* %0, i64 0, i32 3
  %12 = tail call { i64, i64 } @_ZNK3gfx4Rect10InsetsFromERKS0_(%"class.gfx::Rect"* %10, %"class.gfx::Rect"* dereferenceable(16) %11) #12
  %13 = getelementptr inbounds { i64, i64 }, { i64, i64 }* %4, i64 0, i32 0
  %14 = extractvalue { i64, i64 } %12, 0
  store i64 %14, i64* %13, align 8
  %15 = extractvalue { i64, i64 } %12, 1
  store i64 %15, i64* %9, align 8
  %16 = load i32, i32* @_ZN7display12_GLOBAL__N_132g_has_forced_device_scale_factorE, align 4
  %17 = icmp eq i32 %16, -1
  br i1 %17, label %18, label %22

18:                                               ; preds = %3
  %19 = tail call %"class.base::CommandLine"* @_ZN4base11CommandLine17ForCurrentProcessEv() #12
  %20 = tail call zeroext i1 @_ZNK4base11CommandLine9HasSwitchEPKc(%"class.base::CommandLine"* %19, i8* getelementptr inbounds ([0 x i8], [0 x i8]* @_ZN8switches23kForceDeviceScaleFactorE, i64 0, i64 0)) #12
  %21 = zext i1 %20 to i32
  store i32 %21, i32* @_ZN7display12_GLOBAL__N_132g_has_forced_device_scale_factorE, align 4
  br label %22

22:                                               ; preds = %3, %18
  %23 = phi i32 [ %21, %18 ], [ %16, %3 ]
  %24 = icmp eq i32 %23, 0
  %25 = getelementptr inbounds %"class.display::Display", %"class.display::Display"* %0, i64 0, i32 4
  br i1 %24, label %28, label %26

26:                                               ; preds = %22
  %27 = load float, float* %25, align 4
  br label %29

28:                                               ; preds = %22
  store float %1, float* %25, align 8
  br label %29

29:                                               ; preds = %26, %28
  %30 = phi float [ %27, %26 ], [ %1, %28 ]
  %31 = bitcast float* %6 to i8*
  call void @llvm.lifetime.start.p0i8(i64 4, i8* nonnull %31)
  store float 5.000000e-01, float* %6, align 4
  %32 = getelementptr inbounds %"class.display::Display", %"class.display::Display"* %0, i64 0, i32 4
  %33 = fcmp ogt float %30, 5.000000e-01
  %34 = select i1 %33, float* %32, float* %6
  %35 = bitcast float* %34 to i32*
  %36 = load i32, i32* %35, align 4
  %37 = bitcast float* %32 to i32*
  store i32 %36, i32* %37, align 8
  call void @llvm.lifetime.end.p0i8(i64 4, i8* nonnull %31)
  %38 = bitcast %"class.gfx::RectF"* %7 to i8*
  call void @llvm.lifetime.start.p0i8(i64 16, i8* nonnull %38) #12
  %39 = getelementptr inbounds %"class.gfx::RectF", %"class.gfx::RectF"* %7, i64 0, i32 0, i32 0
  %40 = getelementptr inbounds %"class.gfx::RectF", %"class.gfx::RectF"* %7, i64 0, i32 0, i32 1
  %41 = getelementptr inbounds %"class.gfx::RectF", %"class.gfx::RectF"* %7, i64 0, i32 1, i32 0
  %42 = getelementptr inbounds %"class.gfx::RectF", %"class.gfx::RectF"* %7, i64 0, i32 1, i32 1
  %43 = getelementptr inbounds %"class.gfx::Rect", %"class.gfx::Rect"* %2, i64 0, i32 0, i32 0
  %44 = load i32, i32* %43, align 4
  %45 = sitofp i32 %44 to float
  %46 = getelementptr inbounds %"class.gfx::Rect", %"class.gfx::Rect"* %2, i64 0, i32 0, i32 1
  %47 = load i32, i32* %46, align 4
  %48 = sitofp i32 %47 to float
  %49 = getelementptr inbounds %"class.gfx::Rect", %"class.gfx::Rect"* %2, i64 0, i32 1, i32 0
  %50 = load i32, i32* %49, align 4
  %51 = getelementptr inbounds %"class.gfx::Rect", %"class.gfx::Rect"* %2, i64 0, i32 1, i32 1
  %52 = load i32, i32* %51, align 4
  store float %45, float* %39, align 8
  store float %48, float* %40, align 4
  %53 = icmp sgt i32 %50, 0
  %54 = select i1 %53, i32 %50, i32 0
  %55 = sitofp i32 %54 to float
  store float %55, float* %41, align 8
  %56 = icmp sgt i32 %52, 0
  %57 = select i1 %56, i32 %52, i32 0
  %58 = sitofp i32 %57 to float
  store float %58, float* %42, align 4
  %59 = bitcast i32 %36 to float
  %60 = fdiv float 1.000000e+00, %59
  %61 = getelementptr inbounds %"class.gfx::RectF", %"class.gfx::RectF"* %7, i64 0, i32 0
  %62 = call <2 x float> @_ZN3gfx10ScalePointERKNS_6PointFEff(%"class.gfx::PointF"* nonnull dereferenceable(8) %61, float %60, float %60) #12
  %63 = bitcast %"class.gfx::RectF"* %7 to <2 x float>*
  store <2 x float> %62, <2 x float>* %63, align 8
  %64 = getelementptr inbounds %"class.gfx::RectF", %"class.gfx::RectF"* %7, i64 0, i32 1
  %65 = call <2 x float> @_ZN3gfx9ScaleSizeERKNS_5SizeFEff(%"class.gfx::SizeF"* dereferenceable(8) %64, float %60, float %60) #12
  %66 = bitcast %"class.gfx::SizeF"* %64 to <2 x float>*
  store <2 x float> %65, <2 x float>* %66, align 8
  %67 = call { i64, i64 } @_ZN3gfx27ToEnclosedRectIgnoringErrorERKNS_5RectFEf(%"class.gfx::RectF"* nonnull dereferenceable(16) %7, float 0x3F847AE140000000) #12
  %68 = extractvalue { i64, i64 } %67, 0
  %69 = extractvalue { i64, i64 } %67, 1
  %70 = bitcast %"class.gfx::Rect"* %10 to i64*
  store i64 %68, i64* %70, align 8
  %71 = getelementptr inbounds %"class.display::Display", %"class.display::Display"* %0, i64 0, i32 1, i32 1
  %72 = bitcast %"class.gfx::Size"* %71 to i64*
  store i64 %69, i64* %72, align 8
  %73 = getelementptr inbounds %"class.gfx::Rect", %"class.gfx::Rect"* %2, i64 0, i32 1
  %74 = getelementptr inbounds %"class.display::Display", %"class.display::Display"* %0, i64 0, i32 2
  %75 = bitcast %"class.gfx::Size"* %73 to i64*
  %76 = bitcast %"class.gfx::Size"* %74 to i64*
  %77 = load i64, i64* %75, align 4
  store i64 %77, i64* %76, align 8
  %78 = bitcast %"class.gfx::Rect"* %11 to i8*
  %79 = bitcast %"class.gfx::Rect"* %10 to i8*
  call void @llvm.memcpy.p0i8.p0i8.i64(i8* align 8 %78, i8* align 4 %79, i64 16, i1 false) #12
  call void @_ZN3gfx4Rect5InsetERKNS_6InsetsE(%"class.gfx::Rect"* %11, %"class.gfx::Insets"* nonnull dereferenceable(16) %5) #12
  call void @llvm.lifetime.end.p0i8(i64 16, i8* nonnull %38) #12
  call void @llvm.lifetime.end.p0i8(i64 16, i8* nonnull %8) #12
  ret void
}

; Function Attrs: nounwind ssp uwtable
define hidden void @_ZN7display7DisplayC2ERKS0_(%"class.display::Display"*, %"class.display::Display"* dereferenceable(568)) unnamed_addr #2 align 2 {
  %3 = bitcast %"class.display::Display"* %0 to i8*
  %4 = bitcast %"class.display::Display"* %1 to i8*
  tail call void @llvm.memcpy.p0i8.p0i8.i64(i8* align 8 %3, i8* align 8 %4, i64 80, i1 false)
  %5 = getelementptr inbounds %"class.display::Display", %"class.display::Display"* %0, i64 0, i32 10
  %6 = getelementptr inbounds %"class.display::Display", %"class.display::Display"* %1, i64 0, i32 10
  tail call void @_ZN3gfx18DisplayColorSpacesC1ERKS0_(%"class.gfx::DisplayColorSpaces"* %5, %"class.gfx::DisplayColorSpaces"* dereferenceable(472) %6) #12
  %7 = getelementptr inbounds %"class.display::Display", %"class.display::Display"* %0, i64 0, i32 11
  %8 = getelementptr inbounds %"class.display::Display", %"class.display::Display"* %1, i64 0, i32 11
  %9 = bitcast i32* %7 to i8*
  %10 = bitcast i32* %8 to i8*
  tail call void @llvm.memcpy.p0i8.p0i8.i64(i8* align 8 %9, i8* align 8 %10, i64 16, i1 false)
  ret void
}

declare void @_ZN3gfx18DisplayColorSpacesC1ERKS0_(%"class.gfx::DisplayColorSpaces"*, %"class.gfx::DisplayColorSpaces"* dereferenceable(472)) unnamed_addr #4

; Function Attrs: norecurse nounwind readnone ssp uwtable
define hidden void @_ZN7display7DisplayD2Ev(%"class.display::Display"* nocapture) unnamed_addr #6 align 2 {
  ret void
}

; Function Attrs: nounwind ssp uwtable
define hidden void @_ZN7display7Display17GetDefaultDisplayEv(%"class.display::Display"* noalias sret) local_unnamed_addr #2 align 2 {
  %2 = alloca <4 x i32>, align 16
  %3 = bitcast <4 x i32>* %2 to %"class.gfx::Rect"*
  %4 = bitcast <4 x i32>* %2 to i8*
  call void @llvm.lifetime.start.p0i8(i64 16, i8* nonnull %4) #12
  store <4 x i32> <i32 0, i32 0, i32 1920, i32 1080>, <4 x i32>* %2, align 16
  call void @_ZN7display7DisplayC2ElRKN3gfx4RectE(%"class.display::Display"* %0, i64 255, %"class.gfx::Rect"* nonnull dereferenceable(16) %3)
  call void @llvm.lifetime.end.p0i8(i64 16, i8* nonnull %4) #12
  ret void
}

; Function Attrs: norecurse nounwind readonly ssp uwtable
define hidden i32 @_ZNK7display7Display16RotationAsDegreeEv(%"class.display::Display"* nocapture readonly) local_unnamed_addr #0 align 2 {
  %2 = getelementptr inbounds %"class.display::Display", %"class.display::Display"* %0, i64 0, i32 5
  %3 = load i32, i32* %2, align 4
  %4 = add i32 %3, -1
  %5 = icmp ult i32 %4, 3
  br i1 %5, label %6, label %9

6:                                                ; preds = %1
  %7 = mul i32 %4, 90
  %8 = add i32 %7, 90
  ret i32 %8

9:                                                ; preds = %1
  ret i32 0
}

; Function Attrs: nofree norecurse nounwind ssp uwtable writeonly
define hidden void @_ZN7display7Display19SetRotationAsDegreeEi(%"class.display::Display"* nocapture, i32) local_unnamed_addr #3 align 2 {
  switch i32 %1, label %9 [
    i32 0, label %6
    i32 90, label %3
    i32 180, label %4
    i32 270, label %5
  ]

3:                                                ; preds = %2
  br label %6

4:                                                ; preds = %2
  br label %6

5:                                                ; preds = %2
  br label %6

6:                                                ; preds = %2, %3, %4, %5
  %7 = phi i32 [ 3, %5 ], [ 2, %4 ], [ 1, %3 ], [ %1, %2 ]
  %8 = getelementptr inbounds %"class.display::Display", %"class.display::Display"* %0, i64 0, i32 5
  store i32 %7, i32* %8, align 4
  br label %9

9:                                                ; preds = %6, %2
  ret void
}

; Function Attrs: norecurse nounwind readonly ssp uwtable
define hidden i32 @_ZNK7display7Display21PanelRotationAsDegreeEv(%"class.display::Display"* nocapture readonly) local_unnamed_addr #0 align 2 {
  %2 = getelementptr inbounds %"class.display::Display", %"class.display::Display"* %0, i64 0, i32 6, i32 0, i32 0, i32 0, i32 0
  %3 = load i8, i8* %2, align 4, !range !21
  %4 = icmp eq i8 %3, 0
  %5 = getelementptr inbounds %"class.display::Display", %"class.display::Display"* %0, i64 0, i32 6, i32 0, i32 0, i32 0, i32 1, i32 0
  %6 = getelementptr inbounds %"class.display::Display", %"class.display::Display"* %0, i64 0, i32 5
  %7 = select i1 %4, i32* %6, i32* %5
  %8 = load i32, i32* %7, align 4
  %9 = add i32 %8, -1
  %10 = icmp ult i32 %9, 3
  br i1 %10, label %11, label %14

11:                                               ; preds = %1
  %12 = mul i32 %9, 90
  %13 = add i32 %12, 90
  ret i32 %13

14:                                               ; preds = %1
  ret i32 0
}

; Function Attrs: norecurse nounwind readonly ssp uwtable
define hidden { i64, i64 } @_ZNK7display7Display17GetWorkAreaInsetsEv(%"class.display::Display"* nocapture readonly) local_unnamed_addr #0 align 2 {
  %2 = getelementptr inbounds %"class.display::Display", %"class.display::Display"* %0, i64 0, i32 3, i32 0, i32 1
  %3 = load i32, i32* %2, align 4
  %4 = getelementptr inbounds %"class.display::Display", %"class.display::Display"* %0, i64 0, i32 1, i32 0, i32 1
  %5 = load i32, i32* %4, align 4
  %6 = sub nsw i32 %3, %5
  %7 = getelementptr inbounds %"class.display::Display", %"class.display::Display"* %0, i64 0, i32 3, i32 0, i32 0
  %8 = load i32, i32* %7, align 4
  %9 = getelementptr inbounds %"class.display::Display", %"class.display::Display"* %0, i64 0, i32 1, i32 0, i32 0
  %10 = load i32, i32* %9, align 4
  %11 = sub nsw i32 %8, %10
  %12 = getelementptr inbounds %"class.display::Display", %"class.display::Display"* %0, i64 0, i32 1, i32 1, i32 1
  %13 = load i32, i32* %12, align 4
  %14 = getelementptr inbounds %"class.display::Display", %"class.display::Display"* %0, i64 0, i32 3, i32 1, i32 1
  %15 = load i32, i32* %14, align 4
  %16 = sub i32 %5, %3
  %17 = add i32 %16, %13
  %18 = sub i32 %17, %15
  %19 = getelementptr inbounds %"class.display::Display", %"class.display::Display"* %0, i64 0, i32 1, i32 1, i32 0
  %20 = load i32, i32* %19, align 4
  %21 = getelementptr inbounds %"class.display::Display", %"class.display::Display"* %0, i64 0, i32 3, i32 1, i32 0
  %22 = load i32, i32* %21, align 4
  %23 = sub i32 %10, %8
  %24 = add i32 %23, %20
  %25 = sub i32 %24, %22
  %26 = icmp sgt i32 %6, 0
  %27 = icmp sgt i32 %18, 0
  %28 = and i1 %26, %27
  %29 = sub nuw nsw i32 2147483647, %6
  %30 = icmp ult i32 %29, %18
  %31 = and i1 %30, %28
  br i1 %31, label %39, label %32

32:                                               ; preds = %1
  %33 = and i32 %18, %6
  %34 = icmp slt i32 %33, 0
  %35 = sub nsw i32 -2147483648, %6
  %36 = icmp sgt i32 %35, %18
  %37 = and i1 %36, %34
  %38 = select i1 %37, i32 %35, i32 %18
  br label %39

39:                                               ; preds = %32, %1
  %40 = phi i32 [ %38, %32 ], [ %29, %1 ]
  %41 = icmp sgt i32 %11, 0
  %42 = icmp sgt i32 %25, 0
  %43 = and i1 %41, %42
  %44 = sub nuw nsw i32 2147483647, %11
  %45 = icmp ult i32 %44, %25
  %46 = and i1 %45, %43
  br i1 %46, label %54, label %47

47:                                               ; preds = %39
  %48 = and i32 %25, %11
  %49 = icmp slt i32 %48, 0
  %50 = sub nsw i32 -2147483648, %11
  %51 = icmp sgt i32 %50, %25
  %52 = and i1 %51, %49
  %53 = select i1 %52, i32 %50, i32 %25
  br label %54

54:                                               ; preds = %39, %47
  %55 = phi i32 [ %53, %47 ], [ %44, %39 ]
  %56 = zext i32 %11 to i64
  %57 = shl nuw i64 %56, 32
  %58 = zext i32 %6 to i64
  %59 = or i64 %57, %58
  %60 = insertvalue { i64, i64 } undef, i64 %59, 0
  %61 = zext i32 %55 to i64
  %62 = shl nuw i64 %61, 32
  %63 = zext i32 %40 to i64
  %64 = or i64 %62, %63
  %65 = insertvalue { i64, i64 } %60, i64 %64, 1
  ret { i64, i64 } %65
}

declare { i64, i64 } @_ZNK3gfx4Rect10InsetsFromERKS0_(%"class.gfx::Rect"*, %"class.gfx::Rect"* dereferenceable(16)) local_unnamed_addr #4

declare { i64, i64 } @_ZN3gfx27ToEnclosedRectIgnoringErrorERKNS_5RectFEf(%"class.gfx::RectF"* dereferenceable(16), float) local_unnamed_addr #4

; Function Attrs: nounwind ssp uwtable
define hidden void @_ZN7display7Display24UpdateWorkAreaFromInsetsERKN3gfx6InsetsE(%"class.display::Display"*, %"class.gfx::Insets"* dereferenceable(16)) local_unnamed_addr #2 align 2 {
  %3 = getelementptr inbounds %"class.display::Display", %"class.display::Display"* %0, i64 0, i32 1
  %4 = getelementptr inbounds %"class.display::Display", %"class.display::Display"* %0, i64 0, i32 3
  %5 = bitcast %"class.gfx::Rect"* %4 to i8*
  %6 = bitcast %"class.gfx::Rect"* %3 to i8*
  tail call void @llvm.memcpy.p0i8.p0i8.i64(i8* align 8 %5, i8* align 4 %6, i64 16, i1 false)
  tail call void @_ZN3gfx4Rect5InsetERKNS_6InsetsE(%"class.gfx::Rect"* %4, %"class.gfx::Insets"* dereferenceable(16) %1) #12
  ret void
}

; Function Attrs: nounwind ssp uwtable
define hidden void @_ZN7display7Display7SetSizeERKN3gfx4SizeE(%"class.display::Display"*, %"class.gfx::Size"* nocapture readonly dereferenceable(8)) local_unnamed_addr #2 align 2 {
  %3 = alloca i64, align 8
  %4 = bitcast i64* %3 to %"class.gfx::Point"*
  %5 = alloca %"class.gfx::Rect", align 8
  %6 = bitcast i64* %3 to i8*
  call void @llvm.lifetime.start.p0i8(i64 8, i8* nonnull %6) #12
  %7 = getelementptr inbounds %"class.display::Display", %"class.display::Display"* %0, i64 0, i32 1, i32 0
  %8 = bitcast %"class.gfx::Point"* %7 to i64*
  %9 = load i64, i64* %8, align 4
  store i64 %9, i64* %3, align 8
  %10 = getelementptr inbounds %"class.display::Display", %"class.display::Display"* %0, i64 0, i32 4
  %11 = load float, float* %10, align 8
  %12 = call i64 @_ZN3gfx19ScaleToFlooredPointERKNS_5PointEf(%"class.gfx::Point"* nonnull dereferenceable(8) %4, float %11) #12
  store i64 %12, i64* %3, align 8
  %13 = load float, float* %10, align 8
  %14 = bitcast %"class.gfx::Rect"* %5 to i8*
  call void @llvm.lifetime.start.p0i8(i64 16, i8* nonnull %14) #12
  %15 = bitcast %"class.gfx::Rect"* %5 to i64*
  store i64 %12, i64* %15, align 8
  %16 = trunc i64 %12 to i32
  %17 = getelementptr inbounds %"class.gfx::Size", %"class.gfx::Size"* %1, i64 0, i32 0
  %18 = load i32, i32* %17, align 4
  %19 = icmp sgt i32 %16, 0
  %20 = icmp sgt i32 %18, 0
  %21 = and i1 %19, %20
  %22 = sub nuw nsw i32 2147483647, %16
  %23 = icmp ult i32 %22, %18
  %24 = and i1 %23, %21
  %25 = select i1 %24, i32 %22, i32 %18
  %26 = lshr i64 %12, 32
  %27 = trunc i64 %26 to i32
  %28 = getelementptr inbounds %"class.gfx::Size", %"class.gfx::Size"* %1, i64 0, i32 1
  %29 = load i32, i32* %28, align 4
  %30 = icmp sgt i32 %27, 0
  %31 = icmp sgt i32 %29, 0
  %32 = and i1 %30, %31
  %33 = sub nuw nsw i32 2147483647, %27
  %34 = icmp ult i32 %33, %29
  %35 = and i1 %34, %32
  %36 = select i1 %35, i32 %33, i32 %29
  %37 = getelementptr inbounds %"class.gfx::Rect", %"class.gfx::Rect"* %5, i64 0, i32 1, i32 0
  %38 = icmp sgt i32 %25, 0
  %39 = select i1 %38, i32 %25, i32 0
  store i32 %39, i32* %37, align 8
  %40 = getelementptr inbounds %"class.gfx::Rect", %"class.gfx::Rect"* %5, i64 0, i32 1, i32 1
  %41 = icmp sgt i32 %36, 0
  %42 = select i1 %41, i32 %36, i32 0
  store i32 %42, i32* %40, align 4
  call void @_ZN7display7Display17SetScaleAndBoundsEfRKN3gfx4RectE(%"class.display::Display"* %0, float %13, %"class.gfx::Rect"* nonnull dereferenceable(16) %5)
  call void @llvm.lifetime.end.p0i8(i64 16, i8* nonnull %14) #12
  call void @llvm.lifetime.end.p0i8(i64 8, i8* nonnull %6) #12
  ret void
}

declare i64 @_ZN3gfx19ScaleToFlooredPointERKNS_5PointEf(%"class.gfx::Point"* dereferenceable(8), float) local_unnamed_addr #4

declare void @_ZN3gfx4Rect5InsetERKNS_6InsetsE(%"class.gfx::Rect"*, %"class.gfx::Insets"* dereferenceable(16)) local_unnamed_addr #4

; Function Attrs: nounwind ssp uwtable
define hidden i64 @_ZNK7display7Display14GetSizeInPixelEv(%"class.display::Display"*) local_unnamed_addr #2 align 2 {
  %2 = getelementptr inbounds %"class.display::Display", %"class.display::Display"* %0, i64 0, i32 2
  %3 = getelementptr inbounds %"class.gfx::Size", %"class.gfx::Size"* %2, i64 0, i32 0
  %4 = load i32, i32* %3, align 4
  %5 = icmp eq i32 %4, 0
  br i1 %5, label %13, label %6

6:                                                ; preds = %1
  %7 = getelementptr inbounds %"class.display::Display", %"class.display::Display"* %0, i64 0, i32 2, i32 1
  %8 = load i32, i32* %7, align 4
  %9 = icmp eq i32 %8, 0
  br i1 %9, label %13, label %10

10:                                               ; preds = %6
  %11 = bitcast %"class.gfx::Size"* %2 to i64*
  %12 = load i64, i64* %11, align 8
  br label %18

13:                                               ; preds = %1, %6
  %14 = getelementptr inbounds %"class.display::Display", %"class.display::Display"* %0, i64 0, i32 1, i32 1
  %15 = getelementptr inbounds %"class.display::Display", %"class.display::Display"* %0, i64 0, i32 4
  %16 = load float, float* %15, align 8
  %17 = tail call i64 @_ZN3gfx18ScaleToFlooredSizeERKNS_4SizeEf(%"class.gfx::Size"* dereferenceable(8) %14, float %16) #12
  br label %18

18:                                               ; preds = %13, %10
  %19 = phi i64 [ %17, %13 ], [ %12, %10 ]
  ret i64 %19
}

declare i64 @_ZN3gfx18ScaleToFlooredSizeERKNS_4SizeEf(%"class.gfx::Size"* dereferenceable(8), float) local_unnamed_addr #4

; Function Attrs: nounwind ssp uwtable
define hidden void @_ZNK7display7Display8ToStringEv(%"class.std::__1::basic_string"* noalias sret, %"class.display::Display"*) local_unnamed_addr #2 align 2 {
  %3 = alloca %"class.std::__1::basic_string", align 8
  %4 = alloca %"class.std::__1::basic_string", align 8
  %5 = getelementptr inbounds %"class.display::Display", %"class.display::Display"* %1, i64 0, i32 0
  %6 = load i64, i64* %5, align 8
  %7 = bitcast %"class.std::__1::basic_string"* %3 to i8*
  call void @llvm.lifetime.start.p0i8(i64 24, i8* nonnull %7) #12
  %8 = getelementptr inbounds %"class.display::Display", %"class.display::Display"* %1, i64 0, i32 1
  call void @_ZNK3gfx4Rect8ToStringEv(%"class.std::__1::basic_string"* nonnull sret %3, %"class.gfx::Rect"* %8) #12
  %9 = bitcast %"class.std::__1::basic_string"* %3 to %"struct.std::__1::basic_string<char, std::__1::char_traits<char>, std::__1::allocator<char> >::__short"*
  %10 = getelementptr inbounds %"struct.std::__1::basic_string<char, std::__1::char_traits<char>, std::__1::allocator<char> >::__short", %"struct.std::__1::basic_string<char, std::__1::char_traits<char>, std::__1::allocator<char> >::__short"* %9, i64 0, i32 1, i32 0
  %11 = load i8, i8* %10, align 1
  %12 = icmp slt i8 %11, 0
  %13 = getelementptr inbounds %"class.std::__1::basic_string", %"class.std::__1::basic_string"* %3, i64 0, i32 0, i32 0, i32 0, i32 0, i32 0, i32 0
  %14 = load i8*, i8** %13, align 8
  %15 = select i1 %12, i8* %14, i8* %7
  %16 = bitcast %"class.std::__1::basic_string"* %4 to i8*
  call void @llvm.lifetime.start.p0i8(i64 24, i8* nonnull %16) #12
  %17 = getelementptr inbounds %"class.display::Display", %"class.display::Display"* %1, i64 0, i32 3
  call void @_ZNK3gfx4Rect8ToStringEv(%"class.std::__1::basic_string"* nonnull sret %4, %"class.gfx::Rect"* %17) #12
  %18 = bitcast %"class.std::__1::basic_string"* %4 to %"struct.std::__1::basic_string<char, std::__1::char_traits<char>, std::__1::allocator<char> >::__short"*
  %19 = getelementptr inbounds %"struct.std::__1::basic_string<char, std::__1::char_traits<char>, std::__1::allocator<char> >::__short", %"struct.std::__1::basic_string<char, std::__1::char_traits<char>, std::__1::allocator<char> >::__short"* %18, i64 0, i32 1, i32 0
  %20 = load i8, i8* %19, align 1
  %21 = icmp slt i8 %20, 0
  %22 = getelementptr inbounds %"class.std::__1::basic_string", %"class.std::__1::basic_string"* %4, i64 0, i32 0, i32 0, i32 0, i32 0, i32 0, i32 0
  %23 = load i8*, i8** %22, align 8
  %24 = select i1 %21, i8* %23, i8* %16
  %25 = getelementptr inbounds %"class.display::Display", %"class.display::Display"* %1, i64 0, i32 4
  %26 = load float, float* %25, align 8
  %27 = fpext float %26 to double
  %28 = getelementptr inbounds %"class.display::Display", %"class.display::Display"* %1, i64 0, i32 5
  %29 = load i32, i32* %28, align 4
  %30 = icmp ult i32 %29, 4
  br i1 %30, label %31, label %35

31:                                               ; preds = %2
  %32 = sext i32 %29 to i64
  %33 = getelementptr inbounds [4 x i8*], [4 x i8*]* @switch.table._ZNK7display7Display8ToStringEv.24, i64 0, i64 %32
  %34 = load i8*, i8** %33, align 8
  br label %35

35:                                               ; preds = %2, %31
  %36 = phi i8* [ %34, %31 ], [ getelementptr inbounds ([8 x i8], [8 x i8]* @.str.23, i64 0, i64 0), %2 ]
  %37 = getelementptr inbounds %"class.display::Display", %"class.display::Display"* %1, i64 0, i32 6, i32 0, i32 0, i32 0, i32 0
  %38 = load i8, i8* %37, align 4, !range !21
  %39 = icmp eq i8 %38, 0
  %40 = getelementptr inbounds %"class.display::Display", %"class.display::Display"* %1, i64 0, i32 6, i32 0, i32 0, i32 0, i32 1, i32 0
  %41 = select i1 %39, i32* %28, i32* %40
  %42 = load i32, i32* %41, align 4
  %43 = icmp ult i32 %42, 4
  br i1 %43, label %44, label %48

44:                                               ; preds = %35
  %45 = sext i32 %42 to i64
  %46 = getelementptr inbounds [4 x i8*], [4 x i8*]* @switch.table._ZNK7display7Display8ToStringEv.24, i64 0, i64 %45
  %47 = load i8*, i8** %46, align 8
  br label %48

48:                                               ; preds = %35, %44
  %49 = phi i8* [ %47, %44 ], [ getelementptr inbounds ([8 x i8], [8 x i8]* @.str.23, i64 0, i64 0), %35 ]
  %50 = load i64, i64* %5, align 8
  %51 = icmp ne i64 %50, -1
  %52 = load i64, i64* @_ZN7display12_GLOBAL__N_120internal_display_id_E, align 8
  %53 = icmp eq i64 %50, %52
  %54 = and i1 %51, %53
  %55 = select i1 %54, [9 x i8]* @.str.2, [9 x i8]* @.str.3
  %56 = getelementptr inbounds [9 x i8], [9 x i8]* %55, i64 0, i64 0
  call void (%"class.std::__1::basic_string"*, i8*, ...) @_ZN4base12StringPrintfEPKcz(%"class.std::__1::basic_string"* sret %0, i8* getelementptr inbounds ([87 x i8], [87 x i8]* @.str.1, i64 0, i64 0), i64 %6, i8* %15, i8* %24, double %27, i8* %36, i8* nonnull %49, i8* nonnull %56) #12
  %57 = load i8, i8* %19, align 1
  %58 = icmp slt i8 %57, 0
  br i1 %58, label %59, label %61

59:                                               ; preds = %48
  %60 = load i8*, i8** %22, align 8
  call void @_ZdlPv(i8* %60) #13
  br label %61

61:                                               ; preds = %48, %59
  call void @llvm.lifetime.end.p0i8(i64 24, i8* nonnull %16) #12
  %62 = load i8, i8* %10, align 1
  %63 = icmp slt i8 %62, 0
  br i1 %63, label %64, label %66

64:                                               ; preds = %61
  %65 = load i8*, i8** %13, align 8
  call void @_ZdlPv(i8* %65) #13
  br label %66

66:                                               ; preds = %61, %64
  call void @llvm.lifetime.end.p0i8(i64 24, i8* nonnull %7) #12
  ret void
}

declare void @_ZNK3gfx4Rect8ToStringEv(%"class.std::__1::basic_string"* sret, %"class.gfx::Rect"*) local_unnamed_addr #4

; Function Attrs: norecurse nounwind readonly ssp uwtable
define hidden zeroext i1 @_ZNK7display7Display10IsInternalEv(%"class.display::Display"* nocapture readonly) local_unnamed_addr #0 align 2 {
  %2 = getelementptr inbounds %"class.display::Display", %"class.display::Display"* %0, i64 0, i32 0
  %3 = load i64, i64* %2, align 8
  %4 = icmp ne i64 %3, -1
  %5 = load i64, i64* @_ZN7display12_GLOBAL__N_120internal_display_id_E, align 8
  %6 = icmp eq i64 %3, %5
  %7 = and i1 %4, %6
  ret i1 %7
}

; Function Attrs: norecurse nounwind readonly ssp uwtable
define hidden i64 @_ZN7display7Display17InternalDisplayIdEv() local_unnamed_addr #0 align 2 {
  %1 = load i64, i64* @_ZN7display12_GLOBAL__N_120internal_display_id_E, align 8
  ret i64 %1
}

; Function Attrs: nofree norecurse nounwind ssp uwtable writeonly
define hidden void @_ZN7display7Display20SetInternalDisplayIdEl(i64) local_unnamed_addr #3 align 2 {
  store i64 %0, i64* @_ZN7display12_GLOBAL__N_120internal_display_id_E, align 8
  ret void
}

; Function Attrs: norecurse nounwind readonly ssp uwtable
define hidden zeroext i1 @_ZN7display7Display18HasInternalDisplayEv() local_unnamed_addr #0 align 2 {
  %1 = load i64, i64* @_ZN7display12_GLOBAL__N_120internal_display_id_E, align 8
  %2 = icmp ne i64 %1, -1
  ret i1 %2
}

; Function Attrs: nounwind ssp uwtable
define hidden zeroext i1 @_ZNK7display7DisplayeqERKS0_(%"class.display::Display"*, %"class.display::Display"* dereferenceable(568)) local_unnamed_addr #2 align 2 {
  %3 = getelementptr inbounds %"class.display::Display", %"class.display::Display"* %0, i64 0, i32 0
  %4 = load i64, i64* %3, align 8
  %5 = getelementptr inbounds %"class.display::Display", %"class.display::Display"* %1, i64 0, i32 0
  %6 = load i64, i64* %5, align 8
  %7 = icmp eq i64 %4, %6
  br i1 %7, label %8, label %132

8:                                                ; preds = %2
  %9 = getelementptr inbounds %"class.display::Display", %"class.display::Display"* %0, i64 0, i32 1, i32 0, i32 0
  %10 = load i32, i32* %9, align 4
  %11 = getelementptr inbounds %"class.display::Display", %"class.display::Display"* %1, i64 0, i32 1, i32 0, i32 0
  %12 = load i32, i32* %11, align 4
  %13 = icmp eq i32 %10, %12
  br i1 %13, label %14, label %132

14:                                               ; preds = %8
  %15 = getelementptr inbounds %"class.display::Display", %"class.display::Display"* %0, i64 0, i32 1, i32 0, i32 1
  %16 = load i32, i32* %15, align 4
  %17 = getelementptr inbounds %"class.display::Display", %"class.display::Display"* %1, i64 0, i32 1, i32 0, i32 1
  %18 = load i32, i32* %17, align 4
  %19 = icmp eq i32 %16, %18
  br i1 %19, label %20, label %132

20:                                               ; preds = %14
  %21 = getelementptr inbounds %"class.display::Display", %"class.display::Display"* %0, i64 0, i32 1, i32 1, i32 0
  %22 = load i32, i32* %21, align 4
  %23 = getelementptr inbounds %"class.display::Display", %"class.display::Display"* %1, i64 0, i32 1, i32 1, i32 0
  %24 = load i32, i32* %23, align 4
  %25 = icmp eq i32 %22, %24
  br i1 %25, label %26, label %132

26:                                               ; preds = %20
  %27 = getelementptr inbounds %"class.display::Display", %"class.display::Display"* %0, i64 0, i32 1, i32 1, i32 1
  %28 = load i32, i32* %27, align 4
  %29 = getelementptr inbounds %"class.display::Display", %"class.display::Display"* %1, i64 0, i32 1, i32 1, i32 1
  %30 = load i32, i32* %29, align 4
  %31 = icmp eq i32 %28, %30
  br i1 %31, label %32, label %132

32:                                               ; preds = %26
  %33 = getelementptr inbounds %"class.display::Display", %"class.display::Display"* %0, i64 0, i32 2, i32 0
  %34 = load i32, i32* %33, align 4
  %35 = getelementptr inbounds %"class.display::Display", %"class.display::Display"* %1, i64 0, i32 2, i32 0
  %36 = load i32, i32* %35, align 4
  %37 = icmp eq i32 %34, %36
  br i1 %37, label %38, label %132

38:                                               ; preds = %32
  %39 = getelementptr inbounds %"class.display::Display", %"class.display::Display"* %0, i64 0, i32 2, i32 1
  %40 = load i32, i32* %39, align 4
  %41 = getelementptr inbounds %"class.display::Display", %"class.display::Display"* %1, i64 0, i32 2, i32 1
  %42 = load i32, i32* %41, align 4
  %43 = icmp eq i32 %40, %42
  br i1 %43, label %44, label %132

44:                                               ; preds = %38
  %45 = getelementptr inbounds %"class.display::Display", %"class.display::Display"* %0, i64 0, i32 3, i32 0, i32 0
  %46 = load i32, i32* %45, align 4
  %47 = getelementptr inbounds %"class.display::Display", %"class.display::Display"* %1, i64 0, i32 3, i32 0, i32 0
  %48 = load i32, i32* %47, align 4
  %49 = icmp eq i32 %46, %48
  br i1 %49, label %50, label %132

50:                                               ; preds = %44
  %51 = getelementptr inbounds %"class.display::Display", %"class.display::Display"* %0, i64 0, i32 3, i32 0, i32 1
  %52 = load i32, i32* %51, align 4
  %53 = getelementptr inbounds %"class.display::Display", %"class.display::Display"* %1, i64 0, i32 3, i32 0, i32 1
  %54 = load i32, i32* %53, align 4
  %55 = icmp eq i32 %52, %54
  br i1 %55, label %56, label %132

56:                                               ; preds = %50
  %57 = getelementptr inbounds %"class.display::Display", %"class.display::Display"* %0, i64 0, i32 3, i32 1, i32 0
  %58 = load i32, i32* %57, align 4
  %59 = getelementptr inbounds %"class.display::Display", %"class.display::Display"* %1, i64 0, i32 3, i32 1, i32 0
  %60 = load i32, i32* %59, align 4
  %61 = icmp eq i32 %58, %60
  br i1 %61, label %62, label %132

62:                                               ; preds = %56
  %63 = getelementptr inbounds %"class.display::Display", %"class.display::Display"* %0, i64 0, i32 3, i32 1, i32 1
  %64 = load i32, i32* %63, align 4
  %65 = getelementptr inbounds %"class.display::Display", %"class.display::Display"* %1, i64 0, i32 3, i32 1, i32 1
  %66 = load i32, i32* %65, align 4
  %67 = icmp eq i32 %64, %66
  br i1 %67, label %68, label %132

68:                                               ; preds = %62
  %69 = getelementptr inbounds %"class.display::Display", %"class.display::Display"* %0, i64 0, i32 4
  %70 = load float, float* %69, align 8
  %71 = getelementptr inbounds %"class.display::Display", %"class.display::Display"* %1, i64 0, i32 4
  %72 = load float, float* %71, align 8
  %73 = fcmp oeq float %70, %72
  br i1 %73, label %74, label %132

74:                                               ; preds = %68
  %75 = getelementptr inbounds %"class.display::Display", %"class.display::Display"* %0, i64 0, i32 5
  %76 = load i32, i32* %75, align 4
  %77 = getelementptr inbounds %"class.display::Display", %"class.display::Display"* %1, i64 0, i32 5
  %78 = load i32, i32* %77, align 4
  %79 = icmp eq i32 %76, %78
  br i1 %79, label %80, label %132

80:                                               ; preds = %74
  %81 = getelementptr inbounds %"class.display::Display", %"class.display::Display"* %0, i64 0, i32 7
  %82 = load i32, i32* %81, align 8
  %83 = getelementptr inbounds %"class.display::Display", %"class.display::Display"* %1, i64 0, i32 7
  %84 = load i32, i32* %83, align 8
  %85 = icmp eq i32 %82, %84
  br i1 %85, label %86, label %132

86:                                               ; preds = %80
  %87 = getelementptr inbounds %"class.display::Display", %"class.display::Display"* %0, i64 0, i32 8
  %88 = load i32, i32* %87, align 4
  %89 = getelementptr inbounds %"class.display::Display", %"class.display::Display"* %1, i64 0, i32 8
  %90 = load i32, i32* %89, align 4
  %91 = icmp eq i32 %88, %90
  br i1 %91, label %92, label %132

92:                                               ; preds = %86
  %93 = getelementptr inbounds %"class.display::Display", %"class.display::Display"* %0, i64 0, i32 9, i32 0
  %94 = load i32, i32* %93, align 4
  %95 = getelementptr inbounds %"class.display::Display", %"class.display::Display"* %1, i64 0, i32 9, i32 0
  %96 = load i32, i32* %95, align 4
  %97 = icmp eq i32 %94, %96
  br i1 %97, label %98, label %132

98:                                               ; preds = %92
  %99 = getelementptr inbounds %"class.display::Display", %"class.display::Display"* %0, i64 0, i32 9, i32 1
  %100 = load i32, i32* %99, align 4
  %101 = getelementptr inbounds %"class.display::Display", %"class.display::Display"* %1, i64 0, i32 9, i32 1
  %102 = load i32, i32* %101, align 4
  %103 = icmp eq i32 %100, %102
  br i1 %103, label %104, label %132

104:                                              ; preds = %98
  %105 = getelementptr inbounds %"class.display::Display", %"class.display::Display"* %0, i64 0, i32 10
  %106 = getelementptr inbounds %"class.display::Display", %"class.display::Display"* %1, i64 0, i32 10
  %107 = tail call zeroext i1 @_ZNK3gfx18DisplayColorSpaceseqERKS0_(%"class.gfx::DisplayColorSpaces"* %105, %"class.gfx::DisplayColorSpaces"* dereferenceable(472) %106) #12
  br i1 %107, label %108, label %132

108:                                              ; preds = %104
  %109 = getelementptr inbounds %"class.display::Display", %"class.display::Display"* %0, i64 0, i32 11
  %110 = load i32, i32* %109, align 8
  %111 = getelementptr inbounds %"class.display::Display", %"class.display::Display"* %1, i64 0, i32 11
  %112 = load i32, i32* %111, align 8
  %113 = icmp eq i32 %110, %112
  br i1 %113, label %114, label %132

114:                                              ; preds = %108
  %115 = getelementptr inbounds %"class.display::Display", %"class.display::Display"* %0, i64 0, i32 12
  %116 = load i32, i32* %115, align 4
  %117 = getelementptr inbounds %"class.display::Display", %"class.display::Display"* %1, i64 0, i32 12
  %118 = load i32, i32* %117, align 4
  %119 = icmp eq i32 %116, %118
  br i1 %119, label %120, label %132

120:                                              ; preds = %114
  %121 = getelementptr inbounds %"class.display::Display", %"class.display::Display"* %0, i64 0, i32 13
  %122 = load i8, i8* %121, align 8, !range !21
  %123 = getelementptr inbounds %"class.display::Display", %"class.display::Display"* %1, i64 0, i32 13
  %124 = load i8, i8* %123, align 8, !range !21
  %125 = icmp eq i8 %122, %124
  br i1 %125, label %126, label %132

126:                                              ; preds = %120
  %127 = getelementptr inbounds %"class.display::Display", %"class.display::Display"* %0, i64 0, i32 14
  %128 = load i32, i32* %127, align 4
  %129 = getelementptr inbounds %"class.display::Display", %"class.display::Display"* %1, i64 0, i32 14
  %130 = load i32, i32* %129, align 4
  %131 = icmp eq i32 %128, %130
  br label %132

132:                                              ; preds = %92, %44, %56, %50, %32, %8, %20, %14, %126, %120, %114, %108, %104, %98, %86, %80, %74, %68, %62, %38, %26, %2
  %133 = phi i1 [ false, %120 ], [ false, %114 ], [ false, %108 ], [ false, %104 ], [ false, %98 ], [ false, %86 ], [ false, %80 ], [ false, %74 ], [ false, %68 ], [ false, %62 ], [ false, %38 ], [ false, %26 ], [ false, %2 ], [ %131, %126 ], [ false, %14 ], [ false, %20 ], [ false, %8 ], [ false, %32 ], [ false, %50 ], [ false, %56 ], [ false, %44 ], [ false, %92 ]
  ret i1 %133
}

declare zeroext i1 @_ZNK3gfx18DisplayColorSpaceseqERKS0_(%"class.gfx::DisplayColorSpaces"*, %"class.gfx::DisplayColorSpaces"* dereferenceable(472)) local_unnamed_addr #4

declare zeroext i1 @_ZN4base14StringToDoubleENS_16BasicStringPieceIcNSt3__111char_traitsIcEEEEPd(i8*, i64, double*) local_unnamed_addr #4

declare zeroext i1 @_ZN7logging22ShouldCreateLogMessageEi(i32) local_unnamed_addr #4

declare void @_ZN7logging10LogMessageC1EPKcii(%"class.logging::LogMessage"*, i8*, i32, i32) unnamed_addr #4

; Function Attrs: nounwind
declare void @_ZN7logging10LogMessageD1Ev(%"class.logging::LogMessage"*) unnamed_addr #8

; Function Attrs: nounwind ssp uwtable
define linkonce_odr hidden dereferenceable(160) %"class.std::__1::basic_ostream"* @_ZNSt3__124__put_character_sequenceIcNS_11char_traitsIcEEEERNS_13basic_ostreamIT_T0_EES7_PKS4_m(%"class.std::__1::basic_ostream"* dereferenceable(160), i8*, i64) local_unnamed_addr #2 comdat {
  %4 = alloca %"class.std::__1::locale", align 8
  %5 = alloca %"class.std::__1::basic_ostream<char, std::__1::char_traits<char> >::sentry", align 8
  %6 = getelementptr inbounds %"class.std::__1::basic_ostream<char, std::__1::char_traits<char> >::sentry", %"class.std::__1::basic_ostream<char, std::__1::char_traits<char> >::sentry"* %5, i64 0, i32 0
  call void @llvm.lifetime.start.p0i8(i64 16, i8* nonnull %6) #12
  call void @llvm.memset.p0i8.i64(i8* nonnull align 8 %6, i8 -86, i64 16, i1 false)
  call void @_ZNSt3__113basic_ostreamIcNS_11char_traitsIcEEE6sentryC1ERS3_(%"class.std::__1::basic_ostream<char, std::__1::char_traits<char> >::sentry"* nonnull %5, %"class.std::__1::basic_ostream"* dereferenceable(160) %0) #12
  %7 = load i8, i8* %6, align 8, !range !21
  %8 = icmp eq i8 %7, 0
  br i1 %8, label %58, label %9

9:                                                ; preds = %3
  %10 = bitcast %"class.std::__1::basic_ostream"* %0 to i8**
  %11 = load i8*, i8** %10, align 8
  %12 = getelementptr i8, i8* %11, i64 -24
  %13 = bitcast i8* %12 to i64*
  %14 = load i64, i64* %13, align 8
  %15 = bitcast %"class.std::__1::basic_ostream"* %0 to i8*
  %16 = getelementptr inbounds i8, i8* %15, i64 %14
  %17 = getelementptr inbounds i8, i8* %16, i64 40
  %18 = bitcast i8* %17 to %"class.std::__1::basic_streambuf"**
  %19 = load %"class.std::__1::basic_streambuf"*, %"class.std::__1::basic_streambuf"** %18, align 8
  %20 = bitcast i8* %16 to %"class.std::__1::ios_base"*
  %21 = getelementptr inbounds i8, i8* %16, i64 8
  %22 = bitcast i8* %21 to i32*
  %23 = load i32, i32* %22, align 8
  %24 = and i32 %23, 176
  %25 = icmp eq i32 %24, 32
  %26 = getelementptr inbounds i8, i8* %1, i64 %2
  %27 = select i1 %25, i8* %26, i8* %1
  %28 = getelementptr inbounds i8, i8* %16, i64 144
  %29 = bitcast i8* %28 to i32*
  %30 = load i32, i32* %29, align 8
  %31 = icmp eq i32 %30, -1
  br i1 %31, label %32, label %42

32:                                               ; preds = %9
  %33 = bitcast %"class.std::__1::locale"* %4 to i8*
  call void @llvm.lifetime.start.p0i8(i64 8, i8* nonnull %33) #12
  call void @_ZNKSt3__18ios_base6getlocEv(%"class.std::__1::locale"* nonnull sret %4, %"class.std::__1::ios_base"* %20) #12
  %34 = call %"class.std::__1::locale::facet"* @_ZNKSt3__16locale9use_facetERNS0_2idE(%"class.std::__1::locale"* nonnull %4, %"class.std::__1::locale::id"* nonnull dereferenceable(16) @_ZNSt3__15ctypeIcE2idE) #12
  %35 = bitcast %"class.std::__1::locale::facet"* %34 to %"class.std::__1::ctype"*
  %36 = bitcast %"class.std::__1::locale::facet"* %34 to i8 (%"class.std::__1::ctype"*, i8)***
  %37 = load i8 (%"class.std::__1::ctype"*, i8)**, i8 (%"class.std::__1::ctype"*, i8)*** %36, align 8
  %38 = getelementptr inbounds i8 (%"class.std::__1::ctype"*, i8)*, i8 (%"class.std::__1::ctype"*, i8)** %37, i64 7
  %39 = load i8 (%"class.std::__1::ctype"*, i8)*, i8 (%"class.std::__1::ctype"*, i8)** %38, align 8
  %40 = call signext i8 %39(%"class.std::__1::ctype"* %35, i8 signext 32) #12
  call void @_ZNSt3__16localeD1Ev(%"class.std::__1::locale"* nonnull %4) #12
  call void @llvm.lifetime.end.p0i8(i64 8, i8* nonnull %33) #12
  %41 = sext i8 %40 to i32
  store i32 %41, i32* %29, align 8
  br label %42

42:                                               ; preds = %9, %32
  %43 = phi i32 [ %41, %32 ], [ %30, %9 ]
  %44 = trunc i32 %43 to i8
  %45 = call %"class.std::__1::basic_streambuf"* @_ZNSt3__116__pad_and_outputIcNS_11char_traitsIcEEEENS_19ostreambuf_iteratorIT_T0_EES6_PKS4_S8_S8_RNS_8ios_baseES4_(%"class.std::__1::basic_streambuf"* %19, i8* %1, i8* %27, i8* %26, %"class.std::__1::ios_base"* dereferenceable(136) %20, i8 signext %44)
  %46 = icmp eq %"class.std::__1::basic_streambuf"* %45, null
  br i1 %46, label %47, label %58

47:                                               ; preds = %42
  %48 = load i8*, i8** %10, align 8
  %49 = getelementptr i8, i8* %48, i64 -24
  %50 = bitcast i8* %49 to i64*
  %51 = load i64, i64* %50, align 8
  %52 = getelementptr inbounds i8, i8* %15, i64 %51
  %53 = bitcast i8* %52 to %"class.std::__1::ios_base"*
  %54 = getelementptr inbounds i8, i8* %52, i64 32
  %55 = bitcast i8* %54 to i32*
  %56 = load i32, i32* %55, align 8
  %57 = or i32 %56, 5
  call void @_ZNSt3__18ios_base5clearEj(%"class.std::__1::ios_base"* %53, i32 %57) #12
  br label %58

58:                                               ; preds = %3, %42, %47
  call void @_ZNSt3__113basic_ostreamIcNS_11char_traitsIcEEE6sentryD1Ev(%"class.std::__1::basic_ostream<char, std::__1::char_traits<char> >::sentry"* nonnull %5) #12
  call void @llvm.lifetime.end.p0i8(i64 16, i8* nonnull %6) #12
  ret %"class.std::__1::basic_ostream"* %0
}

declare void @_ZNSt3__113basic_ostreamIcNS_11char_traitsIcEEE6sentryC1ERS3_(%"class.std::__1::basic_ostream<char, std::__1::char_traits<char> >::sentry"*, %"class.std::__1::basic_ostream"* dereferenceable(160)) unnamed_addr #4

; Function Attrs: nounwind ssp uwtable
define linkonce_odr hidden %"class.std::__1::basic_streambuf"* @_ZNSt3__116__pad_and_outputIcNS_11char_traitsIcEEEENS_19ostreambuf_iteratorIT_T0_EES6_PKS4_S8_S8_RNS_8ios_baseES4_(%"class.std::__1::basic_streambuf"*, i8*, i8*, i8*, %"class.std::__1::ios_base"* dereferenceable(136), i8 signext) local_unnamed_addr #2 comdat {
  %7 = alloca %"class.std::__1::basic_string", align 8
  %8 = icmp eq %"class.std::__1::basic_streambuf"* %0, null
  br i1 %8, label %78, label %9

9:                                                ; preds = %6
  %10 = ptrtoint i8* %3 to i64
  %11 = ptrtoint i8* %1 to i64
  %12 = sub i64 %10, %11
  %13 = getelementptr inbounds %"class.std::__1::ios_base", %"class.std::__1::ios_base"* %4, i64 0, i32 3
  %14 = load i64, i64* %13, align 8
  %15 = icmp sgt i64 %14, %12
  %16 = sub nsw i64 %14, %12
  %17 = select i1 %15, i64 %16, i64 0
  %18 = ptrtoint i8* %2 to i64
  %19 = sub i64 %18, %11
  %20 = icmp sgt i64 %19, 0
  br i1 %20, label %21, label %28

21:                                               ; preds = %9
  %22 = bitcast %"class.std::__1::basic_streambuf"* %0 to i64 (%"class.std::__1::basic_streambuf"*, i8*, i64)***
  %23 = load i64 (%"class.std::__1::basic_streambuf"*, i8*, i64)**, i64 (%"class.std::__1::basic_streambuf"*, i8*, i64)*** %22, align 8
  %24 = getelementptr inbounds i64 (%"class.std::__1::basic_streambuf"*, i8*, i64)*, i64 (%"class.std::__1::basic_streambuf"*, i8*, i64)** %23, i64 12
  %25 = load i64 (%"class.std::__1::basic_streambuf"*, i8*, i64)*, i64 (%"class.std::__1::basic_streambuf"*, i8*, i64)** %24, align 8
  %26 = tail call i64 %25(%"class.std::__1::basic_streambuf"* nonnull %0, i8* %1, i64 %19) #12
  %27 = icmp eq i64 %26, %19
  br i1 %27, label %28, label %78

28:                                               ; preds = %21, %9
  %29 = icmp sgt i64 %17, 0
  br i1 %29, label %30, label %67

30:                                               ; preds = %28
  %31 = bitcast %"class.std::__1::basic_string"* %7 to i8*
  call void @llvm.lifetime.start.p0i8(i64 24, i8* nonnull %31) #12
  %32 = getelementptr inbounds %"class.std::__1::basic_string", %"class.std::__1::basic_string"* %7, i64 0, i32 0, i32 0, i32 0, i32 0, i32 0, i32 0
  %33 = icmp ult i64 %17, 23
  %34 = bitcast %"class.std::__1::basic_string"* %7 to i8*
  call void @llvm.memset.p0i8.i64(i8* nonnull align 8 %34, i8 -86, i64 24, i1 false)
  br i1 %33, label %43, label %35

35:                                               ; preds = %30
  %36 = getelementptr inbounds %"class.std::__1::basic_string", %"class.std::__1::basic_string"* %7, i64 0, i32 0, i32 0, i32 0, i32 0, i32 0, i32 2
  %37 = getelementptr inbounds %"class.std::__1::basic_string", %"class.std::__1::basic_string"* %7, i64 0, i32 0, i32 0, i32 0, i32 0, i32 0, i32 1
  %38 = add nuw i64 %17, 16
  %39 = and i64 %38, -16
  %40 = tail call i8* @_Znwm(i64 %39) #13
  store i8* %40, i8** %32, align 8
  %41 = or i64 %39, -9223372036854775808
  store i64 %41, i64* %36, align 8
  store i64 %17, i64* %37, align 8
  %42 = bitcast %"class.std::__1::basic_string"* %7 to %"struct.std::__1::basic_string<char, std::__1::char_traits<char>, std::__1::allocator<char> >::__short"*
  br label %47

43:                                               ; preds = %30
  %44 = trunc i64 %17 to i8
  %45 = bitcast %"class.std::__1::basic_string"* %7 to %"struct.std::__1::basic_string<char, std::__1::char_traits<char>, std::__1::allocator<char> >::__short"*
  %46 = getelementptr inbounds %"struct.std::__1::basic_string<char, std::__1::char_traits<char>, std::__1::allocator<char> >::__short", %"struct.std::__1::basic_string<char, std::__1::char_traits<char>, std::__1::allocator<char> >::__short"* %45, i64 0, i32 1, i32 0
  store i8 %44, i8* %46, align 1
  br label %47

47:                                               ; preds = %35, %43
  %48 = phi %"struct.std::__1::basic_string<char, std::__1::char_traits<char>, std::__1::allocator<char> >::__short"* [ %42, %35 ], [ %45, %43 ]
  %49 = phi i8* [ %40, %35 ], [ %31, %43 ]
  call void @llvm.memset.p0i8.i64(i8* nonnull align 1 %49, i8 %5, i64 %17, i1 false) #12
  %50 = getelementptr inbounds i8, i8* %49, i64 %17
  store i8 0, i8* %50, align 1
  %51 = getelementptr inbounds %"struct.std::__1::basic_string<char, std::__1::char_traits<char>, std::__1::allocator<char> >::__short", %"struct.std::__1::basic_string<char, std::__1::char_traits<char>, std::__1::allocator<char> >::__short"* %48, i64 0, i32 1, i32 0
  %52 = load i8, i8* %51, align 1
  %53 = icmp slt i8 %52, 0
  %54 = load i8*, i8** %32, align 8
  %55 = select i1 %53, i8* %54, i8* %31
  %56 = bitcast %"class.std::__1::basic_streambuf"* %0 to i64 (%"class.std::__1::basic_streambuf"*, i8*, i64)***
  %57 = load i64 (%"class.std::__1::basic_streambuf"*, i8*, i64)**, i64 (%"class.std::__1::basic_streambuf"*, i8*, i64)*** %56, align 8
  %58 = getelementptr inbounds i64 (%"class.std::__1::basic_streambuf"*, i8*, i64)*, i64 (%"class.std::__1::basic_streambuf"*, i8*, i64)** %57, i64 12
  %59 = load i64 (%"class.std::__1::basic_streambuf"*, i8*, i64)*, i64 (%"class.std::__1::basic_streambuf"*, i8*, i64)** %58, align 8
  %60 = call i64 %59(%"class.std::__1::basic_streambuf"* nonnull %0, i8* %55, i64 %17) #12
  %61 = icmp eq i64 %60, %17
  %62 = load i8, i8* %51, align 1
  %63 = icmp slt i8 %62, 0
  br i1 %63, label %64, label %66

64:                                               ; preds = %47
  %65 = load i8*, i8** %32, align 8
  call void @_ZdlPv(i8* %65) #13
  br label %66

66:                                               ; preds = %47, %64
  call void @llvm.lifetime.end.p0i8(i64 24, i8* nonnull %31) #12
  br i1 %61, label %67, label %78

67:                                               ; preds = %66, %28
  %68 = sub i64 %10, %18
  %69 = icmp sgt i64 %68, 0
  br i1 %69, label %70, label %77

70:                                               ; preds = %67
  %71 = bitcast %"class.std::__1::basic_streambuf"* %0 to i64 (%"class.std::__1::basic_streambuf"*, i8*, i64)***
  %72 = load i64 (%"class.std::__1::basic_streambuf"*, i8*, i64)**, i64 (%"class.std::__1::basic_streambuf"*, i8*, i64)*** %71, align 8
  %73 = getelementptr inbounds i64 (%"class.std::__1::basic_streambuf"*, i8*, i64)*, i64 (%"class.std::__1::basic_streambuf"*, i8*, i64)** %72, i64 12
  %74 = load i64 (%"class.std::__1::basic_streambuf"*, i8*, i64)*, i64 (%"class.std::__1::basic_streambuf"*, i8*, i64)** %73, align 8
  %75 = call i64 %74(%"class.std::__1::basic_streambuf"* nonnull %0, i8* %2, i64 %68) #12
  %76 = icmp eq i64 %75, %68
  br i1 %76, label %77, label %78

77:                                               ; preds = %70, %67
  store i64 0, i64* %13, align 8
  br label %78

78:                                               ; preds = %77, %66, %21, %70, %6
  %79 = phi %"class.std::__1::basic_streambuf"* [ null, %6 ], [ %0, %77 ], [ null, %66 ], [ null, %21 ], [ null, %70 ]
  ret %"class.std::__1::basic_streambuf"* %79
}

; Function Attrs: nounwind
declare void @_ZNSt3__113basic_ostreamIcNS_11char_traitsIcEEE6sentryD1Ev(%"class.std::__1::basic_ostream<char, std::__1::char_traits<char> >::sentry"*) unnamed_addr #8

; Function Attrs: nobuiltin nofree
declare noalias nonnull i8* @_Znwm(i64) local_unnamed_addr #9

declare void @_ZNKSt3__18ios_base6getlocEv(%"class.std::__1::locale"* sret, %"class.std::__1::ios_base"*) local_unnamed_addr #4

; Function Attrs: nounwind
declare void @_ZNSt3__16localeD1Ev(%"class.std::__1::locale"*) unnamed_addr #8

declare %"class.std::__1::locale::facet"* @_ZNKSt3__16locale9use_facetERNS0_2idE(%"class.std::__1::locale"*, %"class.std::__1::locale::id"* dereferenceable(16)) local_unnamed_addr #4

declare void @_ZNSt3__18ios_base5clearEj(%"class.std::__1::ios_base"*, i32) local_unnamed_addr #4

; Function Attrs: argmemonly nofree nounwind readonly
declare i64 @strlen(i8* nocapture) local_unnamed_addr #10

declare void @_ZN3gfx10ICCProfile14FromColorSpaceERKNS_10ColorSpaceE(%"class.gfx::ICCProfile"* sret, %"class.gfx::ColorSpace"* dereferenceable(68)) local_unnamed_addr #4

declare void @_ZNK3gfx10ICCProfile13GetColorSpaceEv(%"class.gfx::ColorSpace"* sret, %"class.gfx::ICCProfile"*) local_unnamed_addr #4

; Function Attrs: nounwind
declare void @_ZN3gfx10ICCProfileD1Ev(%"class.gfx::ICCProfile"*) unnamed_addr #8

declare i32 @_ZNKSt3__112basic_stringIcNS_11char_traitsIcEENS_9allocatorIcEEE7compareEmmPKcm(%"class.std::__1::basic_string"*, i64, i64, i8*, i64) local_unnamed_addr #4

declare void @_ZN3gfx17HDRStaticMetadataC1ERKS0_(%"struct.gfx::HDRStaticMetadata"*, %"struct.gfx::HDRStaticMetadata"* dereferenceable(24)) unnamed_addr #4

declare <2 x float> @_ZN3gfx10ScalePointERKNS_6PointFEff(%"class.gfx::PointF"* dereferenceable(8), float, float) local_unnamed_addr #4

declare <2 x float> @_ZN3gfx9ScaleSizeERKNS_5SizeFEff(%"class.gfx::SizeF"* dereferenceable(8), float, float) local_unnamed_addr #4

; Function Attrs: nobuiltin nounwind
declare void @_ZdlPv(i8*) local_unnamed_addr #11

attributes #0 = { norecurse nounwind readonly ssp uwtable "correctly-rounded-divide-sqrt-fp-math"="false" "disable-tail-calls"="false" "less-precise-fpmad"="false" "min-legal-vector-width"="0" "no-frame-pointer-elim"="false" "no-frame-pointer-elim-non-leaf" "no-infs-fp-math"="false" "no-jump-tables"="false" "no-nans-fp-math"="false" "no-signed-zeros-fp-math"="false" "no-trapping-math"="false" "null-pointer-is-valid"="true" "stack-protector-buffer-size"="4" "target-cpu"="x86-64" "target-features"="+cx8,+fxsr,+mmx,+sse,+sse2,+sse3,+x87" "unsafe-fp-math"="false" "use-soft-float"="false" }
attributes #1 = { argmemonly nounwind }
attributes #2 = { nounwind ssp uwtable "correctly-rounded-divide-sqrt-fp-math"="false" "disable-tail-calls"="false" "less-precise-fpmad"="false" "min-legal-vector-width"="0" "no-frame-pointer-elim"="false" "no-frame-pointer-elim-non-leaf" "no-infs-fp-math"="false" "no-jump-tables"="false" "no-nans-fp-math"="false" "no-signed-zeros-fp-math"="false" "no-trapping-math"="false" "null-pointer-is-valid"="true" "stack-protector-buffer-size"="4" "target-cpu"="x86-64" "target-features"="+cx8,+fxsr,+mmx,+sse,+sse2,+sse3,+x87" "unsafe-fp-math"="false" "use-soft-float"="false" }
attributes #3 = { nofree norecurse nounwind ssp uwtable writeonly "correctly-rounded-divide-sqrt-fp-math"="false" "disable-tail-calls"="false" "less-precise-fpmad"="false" "min-legal-vector-width"="0" "no-frame-pointer-elim"="false" "no-frame-pointer-elim-non-leaf" "no-infs-fp-math"="false" "no-jump-tables"="false" "no-nans-fp-math"="false" "no-signed-zeros-fp-math"="false" "no-trapping-math"="false" "null-pointer-is-valid"="true" "stack-protector-buffer-size"="4" "target-cpu"="x86-64" "target-features"="+cx8,+fxsr,+mmx,+sse,+sse2,+sse3,+x87" "unsafe-fp-math"="false" "use-soft-float"="false" }
attributes #4 = { "correctly-rounded-divide-sqrt-fp-math"="false" "disable-tail-calls"="false" "less-precise-fpmad"="false" "no-frame-pointer-elim"="false" "no-frame-pointer-elim-non-leaf" "no-infs-fp-math"="false" "no-nans-fp-math"="false" "no-signed-zeros-fp-math"="false" "no-trapping-math"="false" "null-pointer-is-valid"="true" "stack-protector-buffer-size"="4" "target-cpu"="x86-64" "target-features"="+cx8,+fxsr,+mmx,+sse,+sse2,+sse3,+x87" "unsafe-fp-math"="false" "use-soft-float"="false" }
attributes #5 = { nofree nounwind }
attributes #6 = { norecurse nounwind readnone ssp uwtable "correctly-rounded-divide-sqrt-fp-math"="false" "disable-tail-calls"="false" "less-precise-fpmad"="false" "min-legal-vector-width"="0" "no-frame-pointer-elim"="false" "no-frame-pointer-elim-non-leaf" "no-infs-fp-math"="false" "no-jump-tables"="false" "no-nans-fp-math"="false" "no-signed-zeros-fp-math"="false" "no-trapping-math"="false" "null-pointer-is-valid"="true" "stack-protector-buffer-size"="4" "target-cpu"="x86-64" "target-features"="+cx8,+fxsr,+mmx,+sse,+sse2,+sse3,+x87" "unsafe-fp-math"="false" "use-soft-float"="false" }
attributes #7 = { nounwind ssp uwtable "correctly-rounded-divide-sqrt-fp-math"="false" "disable-tail-calls"="false" "less-precise-fpmad"="false" "min-legal-vector-width"="64" "no-frame-pointer-elim"="false" "no-frame-pointer-elim-non-leaf" "no-infs-fp-math"="false" "no-jump-tables"="false" "no-nans-fp-math"="false" "no-signed-zeros-fp-math"="false" "no-trapping-math"="false" "null-pointer-is-valid"="true" "stack-protector-buffer-size"="4" "target-cpu"="x86-64" "target-features"="+cx8,+fxsr,+mmx,+sse,+sse2,+sse3,+x87" "unsafe-fp-math"="false" "use-soft-float"="false" }
attributes #8 = { nounwind "correctly-rounded-divide-sqrt-fp-math"="false" "disable-tail-calls"="false" "less-precise-fpmad"="false" "no-frame-pointer-elim"="false" "no-frame-pointer-elim-non-leaf" "no-infs-fp-math"="false" "no-nans-fp-math"="false" "no-signed-zeros-fp-math"="false" "no-trapping-math"="false" "null-pointer-is-valid"="true" "stack-protector-buffer-size"="4" "target-cpu"="x86-64" "target-features"="+cx8,+fxsr,+mmx,+sse,+sse2,+sse3,+x87" "unsafe-fp-math"="false" "use-soft-float"="false" }
attributes #9 = { nobuiltin nofree "correctly-rounded-divide-sqrt-fp-math"="false" "disable-tail-calls"="false" "less-precise-fpmad"="false" "no-frame-pointer-elim"="false" "no-frame-pointer-elim-non-leaf" "no-infs-fp-math"="false" "no-nans-fp-math"="false" "no-signed-zeros-fp-math"="false" "no-trapping-math"="false" "null-pointer-is-valid"="true" "stack-protector-buffer-size"="4" "target-cpu"="x86-64" "target-features"="+cx8,+fxsr,+mmx,+sse,+sse2,+sse3,+x87" "unsafe-fp-math"="false" "use-soft-float"="false" }
attributes #10 = { argmemonly nofree nounwind readonly "correctly-rounded-divide-sqrt-fp-math"="false" "disable-tail-calls"="false" "less-precise-fpmad"="false" "no-frame-pointer-elim"="false" "no-frame-pointer-elim-non-leaf" "no-infs-fp-math"="false" "no-nans-fp-math"="false" "no-signed-zeros-fp-math"="false" "no-trapping-math"="false" "null-pointer-is-valid"="true" "stack-protector-buffer-size"="4" "target-cpu"="x86-64" "target-features"="+cx8,+fxsr,+mmx,+sse,+sse2,+sse3,+x87" "unsafe-fp-math"="false" "use-soft-float"="false" }
attributes #11 = { nobuiltin nounwind "correctly-rounded-divide-sqrt-fp-math"="false" "disable-tail-calls"="false" "less-precise-fpmad"="false" "no-frame-pointer-elim"="false" "no-frame-pointer-elim-non-leaf" "no-infs-fp-math"="false" "no-nans-fp-math"="false" "no-signed-zeros-fp-math"="false" "no-trapping-math"="false" "null-pointer-is-valid"="true" "stack-protector-buffer-size"="4" "target-cpu"="x86-64" "target-features"="+cx8,+fxsr,+mmx,+sse,+sse2,+sse3,+x87" "unsafe-fp-math"="false" "use-soft-float"="false" }
attributes #12 = { nounwind }
attributes #13 = { builtin nounwind }

!llvm.module.flags = !{!0, !1}

!0 = !{i32 1, !"wchar_size", i32 4}
!1 = !{i32 7, !"PIC Level", i32 2}
!2 = !{!3}
!3 = distinct !{!3, !4, !"_ZN3gfx10ColorSpace10CreateSRGBEv: argument 0"}
!4 = distinct !{!4, !"_ZN3gfx10ColorSpace10CreateSRGBEv"}
!5 = !{!6}
!6 = distinct !{!6, !7, !"_ZN3gfx10ColorSpace18CreateDisplayP3D65Ev: argument 0"}
!7 = distinct !{!7, !"_ZN3gfx10ColorSpace18CreateDisplayP3D65Ev"}
!8 = !{!9}
!9 = distinct !{!9, !10, !"_ZN3gfx10ColorSpace17CreateSCRGBLinearEv: argument 0"}
!10 = distinct !{!10, !"_ZN3gfx10ColorSpace17CreateSCRGBLinearEv"}
!11 = !{!12}
!12 = distinct !{!12, !13, !"_ZN3gfx10ColorSpace11CreateHDR10Ev: argument 0"}
!13 = distinct !{!13, !"_ZN3gfx10ColorSpace11CreateHDR10Ev"}
!14 = !{!15}
!15 = distinct !{!15, !16, !"_ZN3gfx10ColorSpace18CreateExtendedSRGBEv: argument 0"}
!16 = distinct !{!16, !"_ZN3gfx10ColorSpace18CreateExtendedSRGBEv"}
!17 = !{!18}
!18 = distinct !{!18, !19, !"_ZN3gfx10ColorSpace10CreateSRGBEv: argument 0"}
!19 = distinct !{!19, !"_ZN3gfx10ColorSpace10CreateSRGBEv"}
!20 = !{!"branch_weights", i32 1, i32 1048575}
!21 = !{i8 0, i8 2}
!22 = !{!23}
!23 = distinct !{!23, !24, !"_ZN3gfx10ColorSpace10CreateSRGBEv: argument 0"}
!24 = distinct !{!24, !"_ZN3gfx10ColorSpace10CreateSRGBEv"}
!25 = !{!26}
!26 = distinct !{!26, !27, !"_ZN7display7Display28GetForcedDisplayColorProfileEv: argument 0"}
!27 = distinct !{!27, !"_ZN7display7Display28GetForcedDisplayColorProfileEv"}
