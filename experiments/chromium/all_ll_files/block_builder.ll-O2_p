; ModuleID = '../../third_party/leveldatabase/src/table/block_builder.cc'
source_filename = "../../third_party/leveldatabase/src/table/block_builder.cc"
target datalayout = "e-m:e-i64:64-f80:128-n8:16:32:64-S128"
target triple = "x86_64-unknown-linux-gnu"

module asm ".symver exp, exp@GLIBC_2.2.5"
module asm ".symver exp2, exp2@GLIBC_2.2.5"
module asm ".symver exp2f, exp2f@GLIBC_2.2.5"
module asm ".symver expf, expf@GLIBC_2.2.5"
module asm ".symver lgamma, lgamma@GLIBC_2.2.5"
module asm ".symver lgammaf, lgammaf@GLIBC_2.2.5"
module asm ".symver lgammal, lgammal@GLIBC_2.2.5"
module asm ".symver log, log@GLIBC_2.2.5"
module asm ".symver log2, log2@GLIBC_2.2.5"
module asm ".symver log2f, log2f@GLIBC_2.2.5"
module asm ".symver logf, logf@GLIBC_2.2.5"
module asm ".symver pow, pow@GLIBC_2.2.5"
module asm ".symver powf, powf@GLIBC_2.2.5"

%"class.leveldb::BlockBuilder" = type { %"struct.leveldb::Options"*, %"class.std::__1::basic_string", %"class.std::__1::vector", i32, i8, %"class.std::__1::basic_string" }
%"class.std::__1::vector" = type { %"class.std::__1::__vector_base" }
%"class.std::__1::__vector_base" = type { i32*, i32*, %"class.std::__1::__compressed_pair.1" }
%"class.std::__1::__compressed_pair.1" = type { %"struct.std::__1::__compressed_pair_elem.2" }
%"struct.std::__1::__compressed_pair_elem.2" = type { i32* }
%"class.std::__1::basic_string" = type { %"class.std::__1::__compressed_pair" }
%"class.std::__1::__compressed_pair" = type { %"struct.std::__1::__compressed_pair_elem" }
%"struct.std::__1::__compressed_pair_elem" = type { %"struct.std::__1::basic_string<char, std::__1::char_traits<char>, std::__1::allocator<char> >::__rep" }
%"struct.std::__1::basic_string<char, std::__1::char_traits<char>, std::__1::allocator<char> >::__rep" = type { %union.anon }
%union.anon = type { %"struct.std::__1::basic_string<char, std::__1::char_traits<char>, std::__1::allocator<char> >::__long" }
%"struct.std::__1::basic_string<char, std::__1::char_traits<char>, std::__1::allocator<char> >::__long" = type { i8*, i64, i64 }
%"struct.leveldb::Options" = type { %"class.leveldb::Comparator"*, i8, i8, i8, %"class.leveldb::Env"*, %"class.leveldb::Logger"*, i64, i32, %"class.leveldb::Cache"*, i64, i32, i64, i32, i8, %"class.leveldb::FilterPolicy"* }
%"class.leveldb::Comparator" = type { i32 (...)** }
%"class.leveldb::Env" = type opaque
%"class.leveldb::Logger" = type opaque
%"class.leveldb::Cache" = type opaque
%"class.leveldb::FilterPolicy" = type opaque
%"struct.std::__1::basic_string<char, std::__1::char_traits<char>, std::__1::allocator<char> >::__short" = type { [23 x i8], %struct.anon }
%struct.anon = type { i8 }
%"class.leveldb::Slice" = type { i8*, i64 }
%"class.std::__1::__vector_base_common" = type { i8 }

@_ZN7leveldb12BlockBuilderC1EPKNS_7OptionsE = hidden unnamed_addr alias void (%"class.leveldb::BlockBuilder"*, %"struct.leveldb::Options"*), void (%"class.leveldb::BlockBuilder"*, %"struct.leveldb::Options"*)* @_ZN7leveldb12BlockBuilderC2EPKNS_7OptionsE

; Function Attrs: nounwind ssp uwtable
define hidden void @_ZN7leveldb12BlockBuilderC2EPKNS_7OptionsE(%"class.leveldb::BlockBuilder"*, %"struct.leveldb::Options"*) unnamed_addr #0 align 2 {
  %3 = getelementptr inbounds %"class.leveldb::BlockBuilder", %"class.leveldb::BlockBuilder"* %0, i64 0, i32 0
  store %"struct.leveldb::Options"* %1, %"struct.leveldb::Options"** %3, align 8
  %4 = getelementptr inbounds %"class.leveldb::BlockBuilder", %"class.leveldb::BlockBuilder"* %0, i64 0, i32 1
  %5 = getelementptr inbounds %"class.leveldb::BlockBuilder", %"class.leveldb::BlockBuilder"* %0, i64 0, i32 5
  %6 = bitcast %"class.std::__1::basic_string"* %5 to i8*
  tail call void @llvm.memset.p0i8.i64(i8* align 8 %6, i8 0, i64 24, i1 false) #8
  %7 = getelementptr inbounds %"class.leveldb::BlockBuilder", %"class.leveldb::BlockBuilder"* %0, i64 0, i32 2, i32 0, i32 2, i32 0, i32 0
  %8 = bitcast %"class.std::__1::basic_string"* %4 to i8*
  call void @llvm.memset.p0i8.i64(i8* align 8 %8, i8 0, i64 53, i1 false)
  %9 = getelementptr inbounds %"class.leveldb::BlockBuilder", %"class.leveldb::BlockBuilder"* %0, i64 0, i32 2, i32 0, i32 1
  %10 = getelementptr inbounds %"class.leveldb::BlockBuilder", %"class.leveldb::BlockBuilder"* %0, i64 0, i32 2
  %11 = bitcast i32** %9 to i64*
  %12 = bitcast %"class.std::__1::vector"* %10 to i64*
  %13 = bitcast i32** %7 to i64*
  %14 = tail call i8* @_Znwm(i64 4) #9
  %15 = bitcast i8* %14 to i32*
  %16 = getelementptr inbounds i8, i8* %14, i64 4
  %17 = ptrtoint i8* %16 to i64
  store i32 0, i32* %15, align 4
  %18 = ptrtoint i8* %14 to i64
  store i64 %18, i64* %12, align 8
  store i64 %17, i64* %11, align 8
  store i64 %17, i64* %13, align 8
  ret void
}

; Function Attrs: nounwind ssp uwtable
define hidden void @_ZN7leveldb12BlockBuilder5ResetEv(%"class.leveldb::BlockBuilder"*) local_unnamed_addr #0 align 2 {
  %2 = getelementptr inbounds %"class.leveldb::BlockBuilder", %"class.leveldb::BlockBuilder"* %0, i64 0, i32 1
  %3 = bitcast %"class.std::__1::basic_string"* %2 to %"struct.std::__1::basic_string<char, std::__1::char_traits<char>, std::__1::allocator<char> >::__short"*
  %4 = getelementptr inbounds %"struct.std::__1::basic_string<char, std::__1::char_traits<char>, std::__1::allocator<char> >::__short", %"struct.std::__1::basic_string<char, std::__1::char_traits<char>, std::__1::allocator<char> >::__short"* %3, i64 0, i32 1, i32 0
  %5 = load i8, i8* %4, align 1
  %6 = icmp slt i8 %5, 0
  br i1 %6, label %7, label %11

7:                                                ; preds = %1
  %8 = getelementptr inbounds %"class.std::__1::basic_string", %"class.std::__1::basic_string"* %2, i64 0, i32 0, i32 0, i32 0, i32 0, i32 0, i32 0
  %9 = load i8*, i8** %8, align 8
  store i8 0, i8* %9, align 1
  %10 = getelementptr inbounds %"class.leveldb::BlockBuilder", %"class.leveldb::BlockBuilder"* %0, i64 0, i32 1, i32 0, i32 0, i32 0, i32 0, i32 0, i32 1
  store i64 0, i64* %10, align 8
  br label %13

11:                                               ; preds = %1
  %12 = bitcast %"class.std::__1::basic_string"* %2 to i8*
  store i8 0, i8* %12, align 1
  store i8 0, i8* %4, align 1
  br label %13

13:                                               ; preds = %7, %11
  %14 = getelementptr inbounds %"class.leveldb::BlockBuilder", %"class.leveldb::BlockBuilder"* %0, i64 0, i32 2
  %15 = bitcast %"class.std::__1::vector"* %14 to i64*
  %16 = load i64, i64* %15, align 8
  %17 = getelementptr inbounds %"class.leveldb::BlockBuilder", %"class.leveldb::BlockBuilder"* %0, i64 0, i32 2, i32 0, i32 1
  %18 = bitcast i32** %17 to i64*
  store i64 %16, i64* %18, align 8
  %19 = inttoptr i64 %16 to i32*
  %20 = getelementptr inbounds %"class.leveldb::BlockBuilder", %"class.leveldb::BlockBuilder"* %0, i64 0, i32 2, i32 0, i32 2, i32 0, i32 0
  %21 = load i32*, i32** %20, align 8
  %22 = icmp ugt i32* %21, %19
  br i1 %22, label %23, label %26

23:                                               ; preds = %13
  store i32 0, i32* %19, align 4
  %24 = getelementptr inbounds i32, i32* %19, i64 1
  %25 = ptrtoint i32* %24 to i64
  store i64 %25, i64* %18, align 8
  br label %71

26:                                               ; preds = %13
  %27 = ptrtoint i32* %21 to i64
  %28 = bitcast i32** %20 to i64*
  %29 = sub i64 %27, %16
  %30 = ashr exact i64 %29, 2
  %31 = icmp ult i64 %30, 2305843009213693951
  br i1 %31, label %32, label %40

32:                                               ; preds = %26
  %33 = ashr exact i64 %29, 1
  %34 = icmp eq i64 %29, 0
  %35 = select i1 %34, i64 1, i64 %33
  %36 = icmp eq i64 %35, 0
  br i1 %36, label %45, label %37

37:                                               ; preds = %32
  %38 = icmp ugt i64 %35, 4611686018427387903
  br i1 %38, label %39, label %40

39:                                               ; preds = %37
  tail call void @abort() #10
  unreachable

40:                                               ; preds = %37, %26
  %41 = phi i64 [ %35, %37 ], [ 4611686018427387903, %26 ]
  %42 = shl i64 %41, 2
  %43 = tail call i8* @_Znwm(i64 %42) #9
  %44 = bitcast i8* %43 to i32*
  br label %45

45:                                               ; preds = %40, %32
  %46 = phi i64 [ %41, %40 ], [ 0, %32 ]
  %47 = phi i32* [ %44, %40 ], [ null, %32 ]
  %48 = getelementptr inbounds i32, i32* %47, i64 %46
  %49 = ptrtoint i32* %48 to i64
  store i32 0, i32* %47, align 4
  %50 = getelementptr inbounds i32, i32* %47, i64 1
  %51 = ptrtoint i32* %50 to i64
  %52 = getelementptr inbounds %"class.std::__1::vector", %"class.std::__1::vector"* %14, i64 0, i32 0, i32 0
  %53 = load i32*, i32** %52, align 8
  %54 = load i64, i64* %18, align 8
  %55 = ptrtoint i32* %53 to i64
  %56 = sub i64 %54, %55
  %57 = ashr exact i64 %56, 2
  %58 = sub nsw i64 0, %57
  %59 = getelementptr inbounds i32, i32* %47, i64 %58
  %60 = ptrtoint i32* %59 to i64
  %61 = icmp sgt i64 %56, 0
  br i1 %61, label %62, label %66

62:                                               ; preds = %45
  %63 = bitcast i32* %59 to i8*
  %64 = bitcast i32* %53 to i8*
  tail call void @llvm.memcpy.p0i8.p0i8.i64(i8* align 4 %63, i8* align 4 %64, i64 %56, i1 false) #8
  %65 = load i32*, i32** %52, align 8
  br label %66

66:                                               ; preds = %62, %45
  %67 = phi i32* [ %53, %45 ], [ %65, %62 ]
  store i64 %60, i64* %15, align 8
  store i64 %51, i64* %18, align 8
  store i64 %49, i64* %28, align 8
  %68 = icmp eq i32* %67, null
  br i1 %68, label %71, label %69

69:                                               ; preds = %66
  %70 = bitcast i32* %67 to i8*
  tail call void @_ZdlPv(i8* %70) #9
  br label %71

71:                                               ; preds = %23, %66, %69
  %72 = getelementptr inbounds %"class.leveldb::BlockBuilder", %"class.leveldb::BlockBuilder"* %0, i64 0, i32 3
  store i32 0, i32* %72, align 8
  %73 = getelementptr inbounds %"class.leveldb::BlockBuilder", %"class.leveldb::BlockBuilder"* %0, i64 0, i32 4
  store i8 0, i8* %73, align 4
  %74 = getelementptr inbounds %"class.leveldb::BlockBuilder", %"class.leveldb::BlockBuilder"* %0, i64 0, i32 5
  %75 = bitcast %"class.std::__1::basic_string"* %74 to %"struct.std::__1::basic_string<char, std::__1::char_traits<char>, std::__1::allocator<char> >::__short"*
  %76 = getelementptr inbounds %"struct.std::__1::basic_string<char, std::__1::char_traits<char>, std::__1::allocator<char> >::__short", %"struct.std::__1::basic_string<char, std::__1::char_traits<char>, std::__1::allocator<char> >::__short"* %75, i64 0, i32 1, i32 0
  %77 = load i8, i8* %76, align 1
  %78 = icmp slt i8 %77, 0
  br i1 %78, label %79, label %83

79:                                               ; preds = %71
  %80 = getelementptr inbounds %"class.std::__1::basic_string", %"class.std::__1::basic_string"* %74, i64 0, i32 0, i32 0, i32 0, i32 0, i32 0, i32 0
  %81 = load i8*, i8** %80, align 8
  store i8 0, i8* %81, align 1
  %82 = getelementptr inbounds %"class.leveldb::BlockBuilder", %"class.leveldb::BlockBuilder"* %0, i64 0, i32 5, i32 0, i32 0, i32 0, i32 0, i32 0, i32 1
  store i64 0, i64* %82, align 8
  br label %85

83:                                               ; preds = %71
  %84 = bitcast %"class.std::__1::basic_string"* %74 to i8*
  store i8 0, i8* %84, align 1
  store i8 0, i8* %76, align 1
  br label %85

85:                                               ; preds = %79, %83
  ret void
}

; Function Attrs: norecurse nounwind readonly ssp uwtable
define hidden i64 @_ZNK7leveldb12BlockBuilder19CurrentSizeEstimateEv(%"class.leveldb::BlockBuilder"* nocapture readonly) local_unnamed_addr #1 align 2 {
  %2 = getelementptr inbounds %"class.leveldb::BlockBuilder", %"class.leveldb::BlockBuilder"* %0, i64 0, i32 1
  %3 = bitcast %"class.std::__1::basic_string"* %2 to %"struct.std::__1::basic_string<char, std::__1::char_traits<char>, std::__1::allocator<char> >::__short"*
  %4 = getelementptr inbounds %"struct.std::__1::basic_string<char, std::__1::char_traits<char>, std::__1::allocator<char> >::__short", %"struct.std::__1::basic_string<char, std::__1::char_traits<char>, std::__1::allocator<char> >::__short"* %3, i64 0, i32 1, i32 0
  %5 = load i8, i8* %4, align 1
  %6 = icmp slt i8 %5, 0
  br i1 %6, label %7, label %10

7:                                                ; preds = %1
  %8 = getelementptr inbounds %"class.leveldb::BlockBuilder", %"class.leveldb::BlockBuilder"* %0, i64 0, i32 1, i32 0, i32 0, i32 0, i32 0, i32 0, i32 1
  %9 = load i64, i64* %8, align 8
  br label %12

10:                                               ; preds = %1
  %11 = zext i8 %5 to i64
  br label %12

12:                                               ; preds = %7, %10
  %13 = phi i64 [ %9, %7 ], [ %11, %10 ]
  %14 = getelementptr inbounds %"class.leveldb::BlockBuilder", %"class.leveldb::BlockBuilder"* %0, i64 0, i32 2
  %15 = getelementptr inbounds %"class.leveldb::BlockBuilder", %"class.leveldb::BlockBuilder"* %0, i64 0, i32 2, i32 0, i32 1
  %16 = bitcast i32** %15 to i64*
  %17 = load i64, i64* %16, align 8
  %18 = bitcast %"class.std::__1::vector"* %14 to i64*
  %19 = load i64, i64* %18, align 8
  %20 = add i64 %13, 4
  %21 = add i64 %20, %17
  %22 = sub i64 %21, %19
  ret i64 %22
}

; Function Attrs: nounwind ssp uwtable
define hidden { i8*, i64 } @_ZN7leveldb12BlockBuilder6FinishEv(%"class.leveldb::BlockBuilder"*) local_unnamed_addr #0 align 2 {
  %2 = getelementptr inbounds %"class.leveldb::BlockBuilder", %"class.leveldb::BlockBuilder"* %0, i64 0, i32 2
  %3 = getelementptr inbounds %"class.leveldb::BlockBuilder", %"class.leveldb::BlockBuilder"* %0, i64 0, i32 2, i32 0, i32 1
  %4 = bitcast i32** %3 to i64*
  %5 = load i64, i64* %4, align 8
  %6 = bitcast %"class.std::__1::vector"* %2 to i64*
  %7 = load i64, i64* %6, align 8
  %8 = icmp eq i64 %5, %7
  %9 = getelementptr inbounds %"class.leveldb::BlockBuilder", %"class.leveldb::BlockBuilder"* %0, i64 0, i32 1
  br i1 %8, label %12, label %29

10:                                               ; preds = %29
  %11 = trunc i64 %39 to i32
  br label %12

12:                                               ; preds = %10, %1
  %13 = phi i32 [ 0, %1 ], [ %11, %10 ]
  tail call void @_ZN7leveldb10PutFixed32EPNSt3__112basic_stringIcNS0_11char_traitsIcEENS0_9allocatorIcEEEEj(%"class.std::__1::basic_string"* %9, i32 %13) #8
  %14 = getelementptr inbounds %"class.leveldb::BlockBuilder", %"class.leveldb::BlockBuilder"* %0, i64 0, i32 4
  store i8 1, i8* %14, align 4
  %15 = bitcast %"class.std::__1::basic_string"* %9 to %"struct.std::__1::basic_string<char, std::__1::char_traits<char>, std::__1::allocator<char> >::__short"*
  %16 = getelementptr inbounds %"struct.std::__1::basic_string<char, std::__1::char_traits<char>, std::__1::allocator<char> >::__short", %"struct.std::__1::basic_string<char, std::__1::char_traits<char>, std::__1::allocator<char> >::__short"* %15, i64 0, i32 1, i32 0
  %17 = load i8, i8* %16, align 1
  %18 = icmp slt i8 %17, 0
  %19 = getelementptr inbounds %"class.std::__1::basic_string", %"class.std::__1::basic_string"* %9, i64 0, i32 0, i32 0, i32 0, i32 0, i32 0, i32 0
  %20 = load i8*, i8** %19, align 8
  %21 = bitcast %"class.std::__1::basic_string"* %9 to i8*
  %22 = select i1 %18, i8* %20, i8* %21
  %23 = getelementptr inbounds %"class.leveldb::BlockBuilder", %"class.leveldb::BlockBuilder"* %0, i64 0, i32 1, i32 0, i32 0, i32 0, i32 0, i32 0, i32 1
  %24 = load i64, i64* %23, align 8
  %25 = zext i8 %17 to i64
  %26 = select i1 %18, i64 %24, i64 %25
  %27 = insertvalue { i8*, i64 } undef, i8* %22, 0
  %28 = insertvalue { i8*, i64 } %27, i64 %26, 1
  ret { i8*, i64 } %28

29:                                               ; preds = %1, %29
  %30 = phi i64 [ %37, %29 ], [ %7, %1 ]
  %31 = phi i64 [ %35, %29 ], [ 0, %1 ]
  %32 = inttoptr i64 %30 to i32*
  %33 = getelementptr inbounds i32, i32* %32, i64 %31
  %34 = load i32, i32* %33, align 4
  tail call void @_ZN7leveldb10PutFixed32EPNSt3__112basic_stringIcNS0_11char_traitsIcEENS0_9allocatorIcEEEEj(%"class.std::__1::basic_string"* %9, i32 %34) #8
  %35 = add nuw i64 %31, 1
  %36 = load i64, i64* %4, align 8
  %37 = load i64, i64* %6, align 8
  %38 = sub i64 %36, %37
  %39 = ashr exact i64 %38, 2
  %40 = icmp ult i64 %35, %39
  br i1 %40, label %29, label %10
}

declare void @_ZN7leveldb10PutFixed32EPNSt3__112basic_stringIcNS0_11char_traitsIcEENS0_9allocatorIcEEEEj(%"class.std::__1::basic_string"*, i32) local_unnamed_addr #2

; Function Attrs: nounwind ssp uwtable
define hidden void @_ZN7leveldb12BlockBuilder3AddERKNS_5SliceES3_(%"class.leveldb::BlockBuilder"*, %"class.leveldb::Slice"* nocapture readonly dereferenceable(16), %"class.leveldb::Slice"* nocapture readonly dereferenceable(16)) local_unnamed_addr #0 align 2 {
  %4 = getelementptr inbounds %"class.leveldb::BlockBuilder", %"class.leveldb::BlockBuilder"* %0, i64 0, i32 5
  %5 = bitcast %"class.std::__1::basic_string"* %4 to %"struct.std::__1::basic_string<char, std::__1::char_traits<char>, std::__1::allocator<char> >::__short"*
  %6 = getelementptr inbounds %"struct.std::__1::basic_string<char, std::__1::char_traits<char>, std::__1::allocator<char> >::__short", %"struct.std::__1::basic_string<char, std::__1::char_traits<char>, std::__1::allocator<char> >::__short"* %5, i64 0, i32 1, i32 0
  %7 = load i8, i8* %6, align 1
  %8 = icmp slt i8 %7, 0
  %9 = getelementptr inbounds %"class.std::__1::basic_string", %"class.std::__1::basic_string"* %4, i64 0, i32 0, i32 0, i32 0, i32 0, i32 0, i32 0
  %10 = load i8*, i8** %9, align 8
  %11 = bitcast %"class.std::__1::basic_string"* %4 to i8*
  %12 = select i1 %8, i8* %10, i8* %11
  %13 = getelementptr inbounds %"class.leveldb::BlockBuilder", %"class.leveldb::BlockBuilder"* %0, i64 0, i32 5, i32 0, i32 0, i32 0, i32 0, i32 0, i32 1
  %14 = load i64, i64* %13, align 8
  %15 = zext i8 %7 to i64
  %16 = select i1 %8, i64 %14, i64 %15
  %17 = getelementptr inbounds %"class.leveldb::BlockBuilder", %"class.leveldb::BlockBuilder"* %0, i64 0, i32 3
  %18 = load i32, i32* %17, align 8
  %19 = getelementptr inbounds %"class.leveldb::BlockBuilder", %"class.leveldb::BlockBuilder"* %0, i64 0, i32 0
  %20 = load %"struct.leveldb::Options"*, %"struct.leveldb::Options"** %19, align 8
  %21 = getelementptr inbounds %"struct.leveldb::Options", %"struct.leveldb::Options"* %20, i64 0, i32 10
  %22 = load i32, i32* %21, align 8
  %23 = icmp slt i32 %18, %22
  br i1 %23, label %24, label %43

24:                                               ; preds = %3
  %25 = getelementptr inbounds %"class.leveldb::Slice", %"class.leveldb::Slice"* %1, i64 0, i32 1
  %26 = load i64, i64* %25, align 8
  %27 = icmp ult i64 %26, %16
  %28 = select i1 %27, i64 %26, i64 %16
  %29 = icmp eq i64 %28, 0
  br i1 %29, label %127, label %30

30:                                               ; preds = %24
  %31 = getelementptr inbounds %"class.leveldb::Slice", %"class.leveldb::Slice"* %1, i64 0, i32 0
  %32 = load i8*, i8** %31, align 8
  br label %33

33:                                               ; preds = %30, %40
  %34 = phi i64 [ 0, %30 ], [ %41, %40 ]
  %35 = getelementptr inbounds i8, i8* %12, i64 %34
  %36 = load i8, i8* %35, align 1
  %37 = getelementptr inbounds i8, i8* %32, i64 %34
  %38 = load i8, i8* %37, align 1
  %39 = icmp eq i8 %36, %38
  br i1 %39, label %40, label %127

40:                                               ; preds = %33
  %41 = add nuw i64 %34, 1
  %42 = icmp ult i64 %41, %28
  br i1 %42, label %33, label %127

43:                                               ; preds = %3
  %44 = getelementptr inbounds %"class.leveldb::BlockBuilder", %"class.leveldb::BlockBuilder"* %0, i64 0, i32 2
  %45 = getelementptr inbounds %"class.leveldb::BlockBuilder", %"class.leveldb::BlockBuilder"* %0, i64 0, i32 1
  %46 = bitcast %"class.std::__1::basic_string"* %45 to %"struct.std::__1::basic_string<char, std::__1::char_traits<char>, std::__1::allocator<char> >::__short"*
  %47 = getelementptr inbounds %"struct.std::__1::basic_string<char, std::__1::char_traits<char>, std::__1::allocator<char> >::__short", %"struct.std::__1::basic_string<char, std::__1::char_traits<char>, std::__1::allocator<char> >::__short"* %46, i64 0, i32 1, i32 0
  %48 = load i8, i8* %47, align 1
  %49 = icmp slt i8 %48, 0
  br i1 %49, label %50, label %53

50:                                               ; preds = %43
  %51 = getelementptr inbounds %"class.leveldb::BlockBuilder", %"class.leveldb::BlockBuilder"* %0, i64 0, i32 1, i32 0, i32 0, i32 0, i32 0, i32 0, i32 1
  %52 = load i64, i64* %51, align 8
  br label %55

53:                                               ; preds = %43
  %54 = zext i8 %48 to i64
  br label %55

55:                                               ; preds = %50, %53
  %56 = phi i64 [ %52, %50 ], [ %54, %53 ]
  %57 = trunc i64 %56 to i32
  %58 = getelementptr inbounds %"class.leveldb::BlockBuilder", %"class.leveldb::BlockBuilder"* %0, i64 0, i32 2, i32 0, i32 1
  %59 = load i32*, i32** %58, align 8
  %60 = getelementptr inbounds %"class.leveldb::BlockBuilder", %"class.leveldb::BlockBuilder"* %0, i64 0, i32 2, i32 0, i32 2, i32 0, i32 0
  %61 = load i32*, i32** %60, align 8
  %62 = icmp ult i32* %59, %61
  %63 = ptrtoint i32* %61 to i64
  br i1 %62, label %64, label %68

64:                                               ; preds = %55
  store i32 %57, i32* %59, align 4
  %65 = getelementptr inbounds i32, i32* %59, i64 1
  %66 = ptrtoint i32* %65 to i64
  %67 = bitcast i32** %58 to i64*
  store i64 %66, i64* %67, align 8
  br label %124

68:                                               ; preds = %55
  %69 = ptrtoint i32* %59 to i64
  %70 = bitcast i32** %58 to i64*
  %71 = bitcast %"class.std::__1::vector"* %44 to i64*
  %72 = load i64, i64* %71, align 8
  %73 = sub i64 %69, %72
  %74 = ashr exact i64 %73, 2
  %75 = add nsw i64 %74, 1
  %76 = icmp ugt i64 %75, 4611686018427387903
  br i1 %76, label %77, label %79

77:                                               ; preds = %68
  %78 = bitcast %"class.std::__1::vector"* %44 to %"class.std::__1::__vector_base_common"*
  tail call void @_ZNKSt3__120__vector_base_commonILb1EE20__throw_length_errorEv(%"class.std::__1::__vector_base_common"* %78) #10
  unreachable

79:                                               ; preds = %68
  %80 = bitcast i32** %60 to i64*
  %81 = sub i64 %63, %72
  %82 = ashr exact i64 %81, 2
  %83 = icmp ult i64 %82, 2305843009213693951
  br i1 %83, label %84, label %92

84:                                               ; preds = %79
  %85 = ashr exact i64 %81, 1
  %86 = icmp ult i64 %85, %75
  %87 = select i1 %86, i64 %75, i64 %85
  %88 = icmp eq i64 %87, 0
  br i1 %88, label %97, label %89

89:                                               ; preds = %84
  %90 = icmp ugt i64 %87, 4611686018427387903
  br i1 %90, label %91, label %92

91:                                               ; preds = %89
  tail call void @abort() #10
  unreachable

92:                                               ; preds = %89, %79
  %93 = phi i64 [ %87, %89 ], [ 4611686018427387903, %79 ]
  %94 = shl i64 %93, 2
  %95 = tail call i8* @_Znwm(i64 %94) #9
  %96 = bitcast i8* %95 to i32*
  br label %97

97:                                               ; preds = %92, %84
  %98 = phi i64 [ %93, %92 ], [ 0, %84 ]
  %99 = phi i32* [ %96, %92 ], [ null, %84 ]
  %100 = getelementptr inbounds i32, i32* %99, i64 %74
  %101 = getelementptr inbounds i32, i32* %99, i64 %98
  %102 = ptrtoint i32* %101 to i64
  store i32 %57, i32* %100, align 4
  %103 = getelementptr inbounds i32, i32* %100, i64 1
  %104 = ptrtoint i32* %103 to i64
  %105 = getelementptr inbounds %"class.std::__1::vector", %"class.std::__1::vector"* %44, i64 0, i32 0, i32 0
  %106 = load i32*, i32** %105, align 8
  %107 = load i64, i64* %70, align 8
  %108 = ptrtoint i32* %106 to i64
  %109 = sub i64 %107, %108
  %110 = ashr exact i64 %109, 2
  %111 = sub nsw i64 0, %110
  %112 = getelementptr inbounds i32, i32* %100, i64 %111
  %113 = ptrtoint i32* %112 to i64
  %114 = icmp sgt i64 %109, 0
  br i1 %114, label %115, label %119

115:                                              ; preds = %97
  %116 = bitcast i32* %112 to i8*
  %117 = bitcast i32* %106 to i8*
  tail call void @llvm.memcpy.p0i8.p0i8.i64(i8* align 4 %116, i8* align 4 %117, i64 %109, i1 false) #8
  %118 = load i32*, i32** %105, align 8
  br label %119

119:                                              ; preds = %115, %97
  %120 = phi i32* [ %106, %97 ], [ %118, %115 ]
  store i64 %113, i64* %71, align 8
  store i64 %104, i64* %70, align 8
  store i64 %102, i64* %80, align 8
  %121 = icmp eq i32* %120, null
  br i1 %121, label %124, label %122

122:                                              ; preds = %119
  %123 = bitcast i32* %120 to i8*
  tail call void @_ZdlPv(i8* %123) #9
  br label %124

124:                                              ; preds = %64, %119, %122
  store i32 0, i32* %17, align 8
  %125 = getelementptr inbounds %"class.leveldb::Slice", %"class.leveldb::Slice"* %1, i64 0, i32 1
  %126 = load i64, i64* %125, align 8
  br label %127

127:                                              ; preds = %40, %33, %24, %124
  %128 = phi i64 [ %126, %124 ], [ %26, %24 ], [ %26, %33 ], [ %26, %40 ]
  %129 = phi i64 [ 0, %124 ], [ 0, %24 ], [ %41, %40 ], [ %34, %33 ]
  %130 = sub i64 %128, %129
  %131 = getelementptr inbounds %"class.leveldb::BlockBuilder", %"class.leveldb::BlockBuilder"* %0, i64 0, i32 1
  %132 = trunc i64 %129 to i32
  tail call void @_ZN7leveldb11PutVarint32EPNSt3__112basic_stringIcNS0_11char_traitsIcEENS0_9allocatorIcEEEEj(%"class.std::__1::basic_string"* %131, i32 %132) #8
  %133 = trunc i64 %130 to i32
  tail call void @_ZN7leveldb11PutVarint32EPNSt3__112basic_stringIcNS0_11char_traitsIcEENS0_9allocatorIcEEEEj(%"class.std::__1::basic_string"* %131, i32 %133) #8
  %134 = getelementptr inbounds %"class.leveldb::Slice", %"class.leveldb::Slice"* %2, i64 0, i32 1
  %135 = load i64, i64* %134, align 8
  %136 = trunc i64 %135 to i32
  tail call void @_ZN7leveldb11PutVarint32EPNSt3__112basic_stringIcNS0_11char_traitsIcEENS0_9allocatorIcEEEEj(%"class.std::__1::basic_string"* %131, i32 %136) #8
  %137 = getelementptr inbounds %"class.leveldb::Slice", %"class.leveldb::Slice"* %1, i64 0, i32 0
  %138 = load i8*, i8** %137, align 8
  %139 = getelementptr inbounds i8, i8* %138, i64 %129
  %140 = tail call dereferenceable(24) %"class.std::__1::basic_string"* @_ZNSt3__112basic_stringIcNS_11char_traitsIcEENS_9allocatorIcEEE6appendEPKcm(%"class.std::__1::basic_string"* %131, i8* %139, i64 %130) #8
  %141 = getelementptr inbounds %"class.leveldb::Slice", %"class.leveldb::Slice"* %2, i64 0, i32 0
  %142 = load i8*, i8** %141, align 8
  %143 = load i64, i64* %134, align 8
  %144 = tail call dereferenceable(24) %"class.std::__1::basic_string"* @_ZNSt3__112basic_stringIcNS_11char_traitsIcEENS_9allocatorIcEEE6appendEPKcm(%"class.std::__1::basic_string"* %131, i8* %142, i64 %143) #8
  tail call void @_ZNSt3__112basic_stringIcNS_11char_traitsIcEENS_9allocatorIcEEE6resizeEmc(%"class.std::__1::basic_string"* %4, i64 %129, i8 signext 0) #8
  %145 = load i8*, i8** %137, align 8
  %146 = getelementptr inbounds i8, i8* %145, i64 %129
  %147 = tail call dereferenceable(24) %"class.std::__1::basic_string"* @_ZNSt3__112basic_stringIcNS_11char_traitsIcEENS_9allocatorIcEEE6appendEPKcm(%"class.std::__1::basic_string"* %4, i8* %146, i64 %130) #8
  %148 = load i32, i32* %17, align 8
  %149 = add nsw i32 %148, 1
  store i32 %149, i32* %17, align 8
  ret void
}

declare void @_ZN7leveldb11PutVarint32EPNSt3__112basic_stringIcNS0_11char_traitsIcEENS0_9allocatorIcEEEEj(%"class.std::__1::basic_string"*, i32) local_unnamed_addr #2

declare dereferenceable(24) %"class.std::__1::basic_string"* @_ZNSt3__112basic_stringIcNS_11char_traitsIcEENS_9allocatorIcEEE6appendEPKcm(%"class.std::__1::basic_string"*, i8*, i64) local_unnamed_addr #2

; Function Attrs: argmemonly nounwind
declare void @llvm.memset.p0i8.i64(i8* nocapture writeonly, i8, i64, i1 immarg) #3

; Function Attrs: noreturn
declare void @_ZNKSt3__120__vector_base_commonILb1EE20__throw_length_errorEv(%"class.std::__1::__vector_base_common"*) local_unnamed_addr #4

; Function Attrs: noreturn nounwind
declare void @abort() local_unnamed_addr #5

; Function Attrs: nobuiltin nofree
declare noalias nonnull i8* @_Znwm(i64) local_unnamed_addr #6

; Function Attrs: argmemonly nounwind
declare void @llvm.memcpy.p0i8.p0i8.i64(i8* nocapture writeonly, i8* nocapture readonly, i64, i1 immarg) #3

; Function Attrs: nobuiltin nounwind
declare void @_ZdlPv(i8*) local_unnamed_addr #7

declare void @_ZNSt3__112basic_stringIcNS_11char_traitsIcEENS_9allocatorIcEEE6resizeEmc(%"class.std::__1::basic_string"*, i64, i8 signext) local_unnamed_addr #2

attributes #0 = { nounwind ssp uwtable "correctly-rounded-divide-sqrt-fp-math"="false" "disable-tail-calls"="false" "less-precise-fpmad"="false" "min-legal-vector-width"="0" "no-frame-pointer-elim"="false" "no-frame-pointer-elim-non-leaf" "no-infs-fp-math"="false" "no-jump-tables"="false" "no-nans-fp-math"="false" "no-signed-zeros-fp-math"="false" "no-trapping-math"="false" "null-pointer-is-valid"="true" "stack-protector-buffer-size"="4" "target-cpu"="x86-64" "target-features"="+cx8,+fxsr,+mmx,+sse,+sse2,+sse3,+x87" "unsafe-fp-math"="false" "use-soft-float"="false" }
attributes #1 = { norecurse nounwind readonly ssp uwtable "correctly-rounded-divide-sqrt-fp-math"="false" "disable-tail-calls"="false" "less-precise-fpmad"="false" "min-legal-vector-width"="0" "no-frame-pointer-elim"="false" "no-frame-pointer-elim-non-leaf" "no-infs-fp-math"="false" "no-jump-tables"="false" "no-nans-fp-math"="false" "no-signed-zeros-fp-math"="false" "no-trapping-math"="false" "null-pointer-is-valid"="true" "stack-protector-buffer-size"="4" "target-cpu"="x86-64" "target-features"="+cx8,+fxsr,+mmx,+sse,+sse2,+sse3,+x87" "unsafe-fp-math"="false" "use-soft-float"="false" }
attributes #2 = { "correctly-rounded-divide-sqrt-fp-math"="false" "disable-tail-calls"="false" "less-precise-fpmad"="false" "no-frame-pointer-elim"="false" "no-frame-pointer-elim-non-leaf" "no-infs-fp-math"="false" "no-nans-fp-math"="false" "no-signed-zeros-fp-math"="false" "no-trapping-math"="false" "null-pointer-is-valid"="true" "stack-protector-buffer-size"="4" "target-cpu"="x86-64" "target-features"="+cx8,+fxsr,+mmx,+sse,+sse2,+sse3,+x87" "unsafe-fp-math"="false" "use-soft-float"="false" }
attributes #3 = { argmemonly nounwind }
attributes #4 = { noreturn "correctly-rounded-divide-sqrt-fp-math"="false" "disable-tail-calls"="false" "less-precise-fpmad"="false" "no-frame-pointer-elim"="false" "no-frame-pointer-elim-non-leaf" "no-infs-fp-math"="false" "no-nans-fp-math"="false" "no-signed-zeros-fp-math"="false" "no-trapping-math"="false" "null-pointer-is-valid"="true" "stack-protector-buffer-size"="4" "target-cpu"="x86-64" "target-features"="+cx8,+fxsr,+mmx,+sse,+sse2,+sse3,+x87" "unsafe-fp-math"="false" "use-soft-float"="false" }
attributes #5 = { noreturn nounwind "correctly-rounded-divide-sqrt-fp-math"="false" "disable-tail-calls"="false" "less-precise-fpmad"="false" "no-frame-pointer-elim"="false" "no-frame-pointer-elim-non-leaf" "no-infs-fp-math"="false" "no-nans-fp-math"="false" "no-signed-zeros-fp-math"="false" "no-trapping-math"="false" "null-pointer-is-valid"="true" "stack-protector-buffer-size"="4" "target-cpu"="x86-64" "target-features"="+cx8,+fxsr,+mmx,+sse,+sse2,+sse3,+x87" "unsafe-fp-math"="false" "use-soft-float"="false" }
attributes #6 = { nobuiltin nofree "correctly-rounded-divide-sqrt-fp-math"="false" "disable-tail-calls"="false" "less-precise-fpmad"="false" "no-frame-pointer-elim"="false" "no-frame-pointer-elim-non-leaf" "no-infs-fp-math"="false" "no-nans-fp-math"="false" "no-signed-zeros-fp-math"="false" "no-trapping-math"="false" "null-pointer-is-valid"="true" "stack-protector-buffer-size"="4" "target-cpu"="x86-64" "target-features"="+cx8,+fxsr,+mmx,+sse,+sse2,+sse3,+x87" "unsafe-fp-math"="false" "use-soft-float"="false" }
attributes #7 = { nobuiltin nounwind "correctly-rounded-divide-sqrt-fp-math"="false" "disable-tail-calls"="false" "less-precise-fpmad"="false" "no-frame-pointer-elim"="false" "no-frame-pointer-elim-non-leaf" "no-infs-fp-math"="false" "no-nans-fp-math"="false" "no-signed-zeros-fp-math"="false" "no-trapping-math"="false" "null-pointer-is-valid"="true" "stack-protector-buffer-size"="4" "target-cpu"="x86-64" "target-features"="+cx8,+fxsr,+mmx,+sse,+sse2,+sse3,+x87" "unsafe-fp-math"="false" "use-soft-float"="false" }
attributes #8 = { nounwind }
attributes #9 = { builtin nounwind }
attributes #10 = { noreturn nounwind }

!llvm.module.flags = !{!0, !1}

!0 = !{i32 1, !"wchar_size", i32 4}
!1 = !{i32 7, !"PIC Level", i32 2}
