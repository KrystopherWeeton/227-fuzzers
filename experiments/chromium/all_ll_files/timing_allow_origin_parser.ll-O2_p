; ModuleID = '../../services/network/public/cpp/timing_allow_origin_parser.cc'
source_filename = "../../services/network/public/cpp/timing_allow_origin_parser.cc"
target datalayout = "e-m:e-i64:64-f80:128-n8:16:32:64-S128"
target triple = "x86_64-unknown-linux-gnu"

module asm ".symver exp, exp@GLIBC_2.2.5"
module asm ".symver exp2, exp2@GLIBC_2.2.5"
module asm ".symver exp2f, exp2f@GLIBC_2.2.5"
module asm ".symver expf, expf@GLIBC_2.2.5"
module asm ".symver lgamma, lgamma@GLIBC_2.2.5"
module asm ".symver lgammaf, lgammaf@GLIBC_2.2.5"
module asm ".symver lgammal, lgammal@GLIBC_2.2.5"
module asm ".symver log, log@GLIBC_2.2.5"
module asm ".symver log2, log2@GLIBC_2.2.5"
module asm ".symver log2f, log2f@GLIBC_2.2.5"
module asm ".symver logf, logf@GLIBC_2.2.5"
module asm ".symver pow, pow@GLIBC_2.2.5"
module asm ".symver powf, powf@GLIBC_2.2.5"

%"class.mojo::StructPtr" = type { %"class.std::__1::unique_ptr" }
%"class.std::__1::unique_ptr" = type { %"class.std::__1::__compressed_pair.1" }
%"class.std::__1::__compressed_pair.1" = type { %"struct.std::__1::__compressed_pair_elem.2" }
%"struct.std::__1::__compressed_pair_elem.2" = type { %"class.network::mojom::TimingAllowOrigin"* }
%"class.network::mojom::TimingAllowOrigin" = type { i32, %"union.network::mojom::TimingAllowOrigin::Union_" }
%"union.network::mojom::TimingAllowOrigin::Union_" = type { %"class.std::__1::vector"* }
%"class.std::__1::vector" = type { %"class.std::__1::__vector_base" }
%"class.std::__1::__vector_base" = type { %"class.std::__1::basic_string"*, %"class.std::__1::basic_string"*, %"class.std::__1::__compressed_pair.3" }
%"class.std::__1::__compressed_pair.3" = type { %"struct.std::__1::__compressed_pair_elem.4" }
%"struct.std::__1::__compressed_pair_elem.4" = type { %"class.std::__1::basic_string"* }
%"class.std::__1::basic_string" = type { %"class.std::__1::__compressed_pair" }
%"class.std::__1::__compressed_pair" = type { %"struct.std::__1::__compressed_pair_elem" }
%"struct.std::__1::__compressed_pair_elem" = type { %"struct.std::__1::basic_string<char, std::__1::char_traits<char>, std::__1::allocator<char> >::__rep" }
%"struct.std::__1::basic_string<char, std::__1::char_traits<char>, std::__1::allocator<char> >::__rep" = type { %union.anon }
%union.anon = type { %"struct.std::__1::basic_string<char, std::__1::char_traits<char>, std::__1::allocator<char> >::__long" }
%"struct.std::__1::basic_string<char, std::__1::char_traits<char>, std::__1::allocator<char> >::__long" = type { i8*, i64, i64 }
%"class.net::HttpUtil::ValuesIterator" = type <{ %"class.base::StringTokenizerT", %"class.std::__1::__wrap_iter", %"class.std::__1::__wrap_iter", i8, [7 x i8] }>
%"class.base::StringTokenizerT" = type <{ %"class.std::__1::__wrap_iter", %"class.std::__1::__wrap_iter", %"class.std::__1::__wrap_iter", %"class.std::__1::__wrap_iter", %"class.std::__1::basic_string", %"class.std::__1::basic_string", i32, i8, [3 x i8], i32, [4 x i8] }>
%"class.std::__1::__wrap_iter" = type { i8* }
%"struct.std::__1::basic_string<char, std::__1::char_traits<char>, std::__1::allocator<char> >::__short" = type { [23 x i8], %struct.anon }
%struct.anon = type { i8 }
%"class.std::__1::__basic_string_common" = type { i8 }
%"class.std::__1::__vector_base_common" = type { i8 }

$_ZN7network5mojom17TimingAllowOrigin20NewSerializedOriginsENSt3__16vectorINS2_12basic_stringIcNS2_11char_traitsIcEENS2_9allocatorIcEEEENS7_IS9_EEEE = comdat any

$_ZNSt3__16vectorINS_12basic_stringIcNS_11char_traitsIcEENS_9allocatorIcEEEENS4_IS6_EEE21__push_back_slow_pathIS6_EEvOT_ = comdat any

@.str = private unnamed_addr constant [2 x i8] c"*\00", align 1

; Function Attrs: nounwind ssp uwtable
define hidden void @_ZN7network22ParseTimingAllowOriginERKNSt3__112basic_stringIcNS0_11char_traitsIcEENS0_9allocatorIcEEEE(%"class.mojo::StructPtr"* noalias sret, %"class.std::__1::basic_string"* dereferenceable(24)) local_unnamed_addr #0 {
  %3 = alloca %"class.net::HttpUtil::ValuesIterator", align 8
  %4 = alloca %"class.std::__1::vector", align 8
  %5 = alloca %"class.std::__1::basic_string", align 8
  %6 = alloca %"class.std::__1::vector", align 8
  %7 = bitcast %"class.std::__1::basic_string"* %1 to %"struct.std::__1::basic_string<char, std::__1::char_traits<char>, std::__1::allocator<char> >::__short"*
  %8 = getelementptr inbounds %"struct.std::__1::basic_string<char, std::__1::char_traits<char>, std::__1::allocator<char> >::__short", %"struct.std::__1::basic_string<char, std::__1::char_traits<char>, std::__1::allocator<char> >::__short"* %7, i64 0, i32 1, i32 0
  %9 = load i8, i8* %8, align 1
  %10 = icmp slt i8 %9, 0
  %11 = getelementptr inbounds %"class.std::__1::basic_string", %"class.std::__1::basic_string"* %1, i64 0, i32 0, i32 0, i32 0, i32 0, i32 0, i32 1
  %12 = load i64, i64* %11, align 8
  %13 = zext i8 %9 to i64
  %14 = select i1 %10, i64 %12, i64 %13
  %15 = icmp eq i64 %14, 1
  br i1 %15, label %16, label %28

16:                                               ; preds = %2
  %17 = tail call i32 @_ZNKSt3__112basic_stringIcNS_11char_traitsIcEENS_9allocatorIcEEE7compareEmmPKcm(%"class.std::__1::basic_string"* %1, i64 0, i64 -1, i8* getelementptr inbounds ([2 x i8], [2 x i8]* @.str, i64 0, i64 0), i64 1) #8
  %18 = icmp eq i32 %17, 0
  br i1 %18, label %23, label %19

19:                                               ; preds = %16
  %20 = load i8, i8* %8, align 1
  %21 = load i64, i64* %11, align 8
  %22 = zext i8 %20 to i64
  br label %28

23:                                               ; preds = %16
  %24 = tail call i8* @_Znwm(i64 16) #9, !noalias !2
  %25 = bitcast i8* %24 to %"class.network::mojom::TimingAllowOrigin"*
  tail call void @_ZN7network5mojom17TimingAllowOriginC1Ev(%"class.network::mojom::TimingAllowOrigin"* nonnull %25) #8, !noalias !2
  %26 = ptrtoint i8* %24 to i64
  %27 = bitcast %"class.mojo::StructPtr"* %0 to i64*
  store i64 %26, i64* %27, align 8, !alias.scope !2
  tail call void @_ZN7network5mojom17TimingAllowOrigin7set_allEh(%"class.network::mojom::TimingAllowOrigin"* nonnull %25, i8 zeroext 0) #8, !noalias !2
  br label %267

28:                                               ; preds = %19, %2
  %29 = phi i64 [ %22, %19 ], [ %13, %2 ]
  %30 = phi i64 [ %21, %19 ], [ %12, %2 ]
  %31 = phi i8 [ %20, %19 ], [ %9, %2 ]
  %32 = bitcast %"class.net::HttpUtil::ValuesIterator"* %3 to i8*
  call void @llvm.lifetime.start.p0i8(i64 120, i8* nonnull %32) #8
  call void @llvm.memset.p0i8.i64(i8* nonnull align 8 %32, i8 -86, i64 120, i1 false)
  %33 = icmp slt i8 %31, 0
  %34 = getelementptr inbounds %"class.std::__1::basic_string", %"class.std::__1::basic_string"* %1, i64 0, i32 0, i32 0, i32 0, i32 0, i32 0, i32 0
  %35 = load i8*, i8** %34, align 8
  %36 = bitcast %"class.std::__1::basic_string"* %1 to i8*
  %37 = select i1 %33, i8* %35, i8* %36
  %38 = select i1 %33, i64 %30, i64 %29
  %39 = getelementptr inbounds i8, i8* %37, i64 %38
  call void @_ZN3net8HttpUtil14ValuesIteratorC1ENSt3__111__wrap_iterIPKcEES6_cb(%"class.net::HttpUtil::ValuesIterator"* nonnull %3, i8* %37, i8* %39, i8 signext 44, i1 zeroext true) #8
  %40 = bitcast %"class.std::__1::vector"* %4 to i8*
  call void @llvm.lifetime.start.p0i8(i64 24, i8* nonnull %40) #8
  %41 = getelementptr inbounds %"class.std::__1::vector", %"class.std::__1::vector"* %4, i64 0, i32 0, i32 0
  %42 = getelementptr inbounds %"class.std::__1::vector", %"class.std::__1::vector"* %4, i64 0, i32 0, i32 1
  %43 = getelementptr inbounds %"class.std::__1::vector", %"class.std::__1::vector"* %4, i64 0, i32 0, i32 2, i32 0, i32 0
  call void @llvm.memset.p0i8.i64(i8* nonnull align 8 %40, i8 0, i64 24, i1 false) #8
  %44 = call zeroext i1 @_ZN3net8HttpUtil14ValuesIterator7GetNextEv(%"class.net::HttpUtil::ValuesIterator"* nonnull %3) #8
  br i1 %44, label %47, label %45

45:                                               ; preds = %28
  %46 = bitcast %"class.std::__1::basic_string"** %42 to i64*
  br label %206

47:                                               ; preds = %28
  %48 = getelementptr inbounds %"class.net::HttpUtil::ValuesIterator", %"class.net::HttpUtil::ValuesIterator"* %3, i64 0, i32 1, i32 0
  %49 = getelementptr inbounds %"class.net::HttpUtil::ValuesIterator", %"class.net::HttpUtil::ValuesIterator"* %3, i64 0, i32 2, i32 0
  %50 = bitcast i8** %49 to i64*
  %51 = bitcast %"class.std::__1::basic_string"* %5 to i8*
  %52 = getelementptr inbounds %"class.std::__1::basic_string", %"class.std::__1::basic_string"* %5, i64 0, i32 0, i32 0, i32 0, i32 0, i32 0, i32 0
  %53 = getelementptr inbounds %"class.std::__1::basic_string", %"class.std::__1::basic_string"* %5, i64 0, i32 0, i32 0, i32 0, i32 0, i32 0, i32 2
  %54 = getelementptr inbounds %"class.std::__1::basic_string", %"class.std::__1::basic_string"* %5, i64 0, i32 0, i32 0, i32 0, i32 0, i32 0, i32 1
  %55 = bitcast %"class.std::__1::basic_string"* %5 to %"struct.std::__1::basic_string<char, std::__1::char_traits<char>, std::__1::allocator<char> >::__short"*
  %56 = getelementptr inbounds %"struct.std::__1::basic_string<char, std::__1::char_traits<char>, std::__1::allocator<char> >::__short", %"struct.std::__1::basic_string<char, std::__1::char_traits<char>, std::__1::allocator<char> >::__short"* %55, i64 0, i32 1, i32 0
  %57 = bitcast %"class.std::__1::basic_string"** %42 to i64*
  br label %58

58:                                               ; preds = %47, %204
  %59 = load i8*, i8** %48, align 8
  %60 = ptrtoint i8* %59 to i64
  %61 = load i64, i64* %50, align 8
  %62 = sub i64 %61, %60
  %63 = icmp eq i64 %62, 1
  %64 = inttoptr i64 %61 to i8*
  br i1 %63, label %65, label %74

65:                                               ; preds = %58
  %66 = load i8, i8* %59, align 1
  %67 = icmp eq i8 %66, 42
  br i1 %67, label %69, label %68

68:                                               ; preds = %65
  call void @llvm.lifetime.start.p0i8(i64 24, i8* nonnull %51) #8
  br label %80

69:                                               ; preds = %65
  %70 = call i8* @_Znwm(i64 16) #9, !noalias !5
  %71 = bitcast i8* %70 to %"class.network::mojom::TimingAllowOrigin"*
  call void @_ZN7network5mojom17TimingAllowOriginC1Ev(%"class.network::mojom::TimingAllowOrigin"* nonnull %71) #8, !noalias !5
  %72 = ptrtoint i8* %70 to i64
  %73 = bitcast %"class.mojo::StructPtr"* %0 to i64*
  store i64 %72, i64* %73, align 8, !alias.scope !5
  call void @_ZN7network5mojom17TimingAllowOrigin7set_allEh(%"class.network::mojom::TimingAllowOrigin"* nonnull %71, i8 zeroext 0) #8, !noalias !5
  br label %242

74:                                               ; preds = %58
  call void @llvm.lifetime.start.p0i8(i64 24, i8* nonnull %51) #8
  %75 = icmp ugt i64 %62, -17
  br i1 %75, label %76, label %78

76:                                               ; preds = %74
  %77 = bitcast %"class.std::__1::basic_string"* %5 to %"class.std::__1::__basic_string_common"*
  call void @_ZNKSt3__121__basic_string_commonILb1EE20__throw_length_errorEv(%"class.std::__1::__basic_string_common"* nonnull %77) #10
  unreachable

78:                                               ; preds = %74
  %79 = icmp ult i64 %62, 23
  br i1 %79, label %80, label %82

80:                                               ; preds = %68, %78
  %81 = trunc i64 %62 to i8
  store i8 %81, i8* %56, align 1, !alias.scope !8
  br label %87

82:                                               ; preds = %78
  %83 = add nuw i64 %62, 16
  %84 = and i64 %83, -16
  %85 = call i8* @_Znwm(i64 %84) #9
  store i8* %85, i8** %52, align 8, !alias.scope !8
  %86 = or i64 %84, -9223372036854775808
  store i64 %86, i64* %53, align 8, !alias.scope !8
  store i64 %62, i64* %54, align 8, !alias.scope !8
  br label %87

87:                                               ; preds = %82, %80
  %88 = phi i8* [ %51, %80 ], [ %85, %82 ]
  %89 = icmp eq i8* %59, %64
  br i1 %89, label %190, label %90

90:                                               ; preds = %87
  %91 = sub i64 %61, %60
  %92 = icmp ult i64 %91, 32
  br i1 %92, label %180, label %93

93:                                               ; preds = %90
  %94 = sub i64 %61, %60
  %95 = getelementptr i8, i8* %88, i64 %94
  %96 = icmp ult i8* %88, %64
  %97 = icmp ult i8* %59, %95
  %98 = and i1 %96, %97
  br i1 %98, label %180, label %99

99:                                               ; preds = %93
  %100 = and i64 %91, -32
  %101 = getelementptr i8, i8* %88, i64 %100
  %102 = getelementptr i8, i8* %59, i64 %100
  %103 = add i64 %100, -32
  %104 = lshr exact i64 %103, 5
  %105 = add nuw nsw i64 %104, 1
  %106 = and i64 %105, 3
  %107 = icmp ult i64 %103, 96
  br i1 %107, label %159, label %108

108:                                              ; preds = %99
  %109 = sub nsw i64 %105, %106
  br label %110

110:                                              ; preds = %110, %108
  %111 = phi i64 [ 0, %108 ], [ %156, %110 ]
  %112 = phi i64 [ %109, %108 ], [ %157, %110 ]
  %113 = getelementptr i8, i8* %88, i64 %111
  %114 = getelementptr i8, i8* %59, i64 %111
  %115 = bitcast i8* %114 to <16 x i8>*
  %116 = load <16 x i8>, <16 x i8>* %115, align 1, !alias.scope !11
  %117 = getelementptr i8, i8* %114, i64 16
  %118 = bitcast i8* %117 to <16 x i8>*
  %119 = load <16 x i8>, <16 x i8>* %118, align 1, !alias.scope !11
  %120 = bitcast i8* %113 to <16 x i8>*
  store <16 x i8> %116, <16 x i8>* %120, align 1, !alias.scope !14, !noalias !11
  %121 = getelementptr i8, i8* %113, i64 16
  %122 = bitcast i8* %121 to <16 x i8>*
  store <16 x i8> %119, <16 x i8>* %122, align 1, !alias.scope !14, !noalias !11
  %123 = or i64 %111, 32
  %124 = getelementptr i8, i8* %88, i64 %123
  %125 = getelementptr i8, i8* %59, i64 %123
  %126 = bitcast i8* %125 to <16 x i8>*
  %127 = load <16 x i8>, <16 x i8>* %126, align 1, !alias.scope !11
  %128 = getelementptr i8, i8* %125, i64 16
  %129 = bitcast i8* %128 to <16 x i8>*
  %130 = load <16 x i8>, <16 x i8>* %129, align 1, !alias.scope !11
  %131 = bitcast i8* %124 to <16 x i8>*
  store <16 x i8> %127, <16 x i8>* %131, align 1, !alias.scope !14, !noalias !11
  %132 = getelementptr i8, i8* %124, i64 16
  %133 = bitcast i8* %132 to <16 x i8>*
  store <16 x i8> %130, <16 x i8>* %133, align 1, !alias.scope !14, !noalias !11
  %134 = or i64 %111, 64
  %135 = getelementptr i8, i8* %88, i64 %134
  %136 = getelementptr i8, i8* %59, i64 %134
  %137 = bitcast i8* %136 to <16 x i8>*
  %138 = load <16 x i8>, <16 x i8>* %137, align 1, !alias.scope !11
  %139 = getelementptr i8, i8* %136, i64 16
  %140 = bitcast i8* %139 to <16 x i8>*
  %141 = load <16 x i8>, <16 x i8>* %140, align 1, !alias.scope !11
  %142 = bitcast i8* %135 to <16 x i8>*
  store <16 x i8> %138, <16 x i8>* %142, align 1, !alias.scope !14, !noalias !11
  %143 = getelementptr i8, i8* %135, i64 16
  %144 = bitcast i8* %143 to <16 x i8>*
  store <16 x i8> %141, <16 x i8>* %144, align 1, !alias.scope !14, !noalias !11
  %145 = or i64 %111, 96
  %146 = getelementptr i8, i8* %88, i64 %145
  %147 = getelementptr i8, i8* %59, i64 %145
  %148 = bitcast i8* %147 to <16 x i8>*
  %149 = load <16 x i8>, <16 x i8>* %148, align 1, !alias.scope !11
  %150 = getelementptr i8, i8* %147, i64 16
  %151 = bitcast i8* %150 to <16 x i8>*
  %152 = load <16 x i8>, <16 x i8>* %151, align 1, !alias.scope !11
  %153 = bitcast i8* %146 to <16 x i8>*
  store <16 x i8> %149, <16 x i8>* %153, align 1, !alias.scope !14, !noalias !11
  %154 = getelementptr i8, i8* %146, i64 16
  %155 = bitcast i8* %154 to <16 x i8>*
  store <16 x i8> %152, <16 x i8>* %155, align 1, !alias.scope !14, !noalias !11
  %156 = add i64 %111, 128
  %157 = add i64 %112, -4
  %158 = icmp eq i64 %157, 0
  br i1 %158, label %159, label %110, !llvm.loop !16

159:                                              ; preds = %110, %99
  %160 = phi i64 [ 0, %99 ], [ %156, %110 ]
  %161 = icmp eq i64 %106, 0
  br i1 %161, label %178, label %162

162:                                              ; preds = %159, %162
  %163 = phi i64 [ %175, %162 ], [ %160, %159 ]
  %164 = phi i64 [ %176, %162 ], [ %106, %159 ]
  %165 = getelementptr i8, i8* %88, i64 %163
  %166 = getelementptr i8, i8* %59, i64 %163
  %167 = bitcast i8* %166 to <16 x i8>*
  %168 = load <16 x i8>, <16 x i8>* %167, align 1, !alias.scope !11
  %169 = getelementptr i8, i8* %166, i64 16
  %170 = bitcast i8* %169 to <16 x i8>*
  %171 = load <16 x i8>, <16 x i8>* %170, align 1, !alias.scope !11
  %172 = bitcast i8* %165 to <16 x i8>*
  store <16 x i8> %168, <16 x i8>* %172, align 1, !alias.scope !14, !noalias !11
  %173 = getelementptr i8, i8* %165, i64 16
  %174 = bitcast i8* %173 to <16 x i8>*
  store <16 x i8> %171, <16 x i8>* %174, align 1, !alias.scope !14, !noalias !11
  %175 = add i64 %163, 32
  %176 = add i64 %164, -1
  %177 = icmp eq i64 %176, 0
  br i1 %177, label %178, label %162, !llvm.loop !18

178:                                              ; preds = %162, %159
  %179 = icmp eq i64 %91, %100
  br i1 %179, label %190, label %180

180:                                              ; preds = %178, %93, %90
  %181 = phi i8* [ %88, %93 ], [ %88, %90 ], [ %101, %178 ]
  %182 = phi i8* [ %59, %93 ], [ %59, %90 ], [ %102, %178 ]
  br label %183

183:                                              ; preds = %180, %183
  %184 = phi i8* [ %188, %183 ], [ %181, %180 ]
  %185 = phi i8* [ %187, %183 ], [ %182, %180 ]
  %186 = load i8, i8* %185, align 1
  store i8 %186, i8* %184, align 1
  %187 = getelementptr inbounds i8, i8* %185, i64 1
  %188 = getelementptr inbounds i8, i8* %184, i64 1
  %189 = icmp eq i8* %187, %64
  br i1 %189, label %190, label %183, !llvm.loop !20

190:                                              ; preds = %183, %178, %87
  %191 = phi i8* [ %88, %87 ], [ %101, %178 ], [ %188, %183 ]
  store i8 0, i8* %191, align 1
  %192 = load %"class.std::__1::basic_string"*, %"class.std::__1::basic_string"** %42, align 8
  %193 = load %"class.std::__1::basic_string"*, %"class.std::__1::basic_string"** %43, align 8
  %194 = icmp ult %"class.std::__1::basic_string"* %192, %193
  br i1 %194, label %195, label %199

195:                                              ; preds = %190
  %196 = bitcast %"class.std::__1::basic_string"* %192 to i8*
  call void @llvm.memcpy.p0i8.p0i8.i64(i8* align 8 %196, i8* nonnull align 8 %51, i64 24, i1 false) #8
  call void @llvm.memset.p0i8.i64(i8* nonnull align 8 %51, i8 0, i64 24, i1 false) #8
  %197 = getelementptr inbounds %"class.std::__1::basic_string", %"class.std::__1::basic_string"* %192, i64 1
  %198 = ptrtoint %"class.std::__1::basic_string"* %197 to i64
  store i64 %198, i64* %57, align 8
  br label %204

199:                                              ; preds = %190
  call void @_ZNSt3__16vectorINS_12basic_stringIcNS_11char_traitsIcEENS_9allocatorIcEEEENS4_IS6_EEE21__push_back_slow_pathIS6_EEvOT_(%"class.std::__1::vector"* nonnull %4, %"class.std::__1::basic_string"* nonnull dereferenceable(24) %5) #8
  %200 = load i8, i8* %56, align 1
  %201 = icmp slt i8 %200, 0
  br i1 %201, label %202, label %204

202:                                              ; preds = %199
  %203 = load i8*, i8** %52, align 8
  call void @_ZdlPv(i8* %203) #9
  br label %204

204:                                              ; preds = %195, %199, %202
  call void @llvm.lifetime.end.p0i8(i64 24, i8* nonnull %51) #8
  %205 = call zeroext i1 @_ZN3net8HttpUtil14ValuesIterator7GetNextEv(%"class.net::HttpUtil::ValuesIterator"* nonnull %3) #8
  br i1 %205, label %58, label %206

206:                                              ; preds = %204, %45
  %207 = phi i64* [ %46, %45 ], [ %57, %204 ]
  %208 = bitcast %"class.std::__1::vector"* %4 to i64*
  %209 = load i64, i64* %208, align 8
  %210 = bitcast %"class.std::__1::vector"* %6 to i64*
  store i64 %209, i64* %210, align 8
  %211 = load i64, i64* %207, align 8
  %212 = getelementptr inbounds %"class.std::__1::vector", %"class.std::__1::vector"* %6, i64 0, i32 0, i32 1
  %213 = bitcast %"class.std::__1::basic_string"** %212 to i64*
  store i64 %211, i64* %213, align 8
  %214 = bitcast %"class.std::__1::basic_string"** %43 to i64*
  %215 = load i64, i64* %214, align 8
  %216 = getelementptr inbounds %"class.std::__1::vector", %"class.std::__1::vector"* %6, i64 0, i32 0, i32 2, i32 0, i32 0
  %217 = bitcast %"class.std::__1::basic_string"** %216 to i64*
  store i64 %215, i64* %217, align 8
  call void @llvm.memset.p0i8.i64(i8* nonnull align 8 %40, i8 0, i64 24, i1 false) #8
  call void @_ZN7network5mojom17TimingAllowOrigin20NewSerializedOriginsENSt3__16vectorINS2_12basic_stringIcNS2_11char_traitsIcEENS2_9allocatorIcEEEENS7_IS9_EEEE(%"class.mojo::StructPtr"* sret %0, %"class.std::__1::vector"* nonnull %6)
  %218 = getelementptr inbounds %"class.std::__1::vector", %"class.std::__1::vector"* %6, i64 0, i32 0, i32 0
  %219 = load %"class.std::__1::basic_string"*, %"class.std::__1::basic_string"** %218, align 8
  %220 = icmp eq %"class.std::__1::basic_string"* %219, null
  br i1 %220, label %242, label %221

221:                                              ; preds = %206
  %222 = bitcast %"class.std::__1::basic_string"* %219 to i8*
  %223 = load %"class.std::__1::basic_string"*, %"class.std::__1::basic_string"** %212, align 8
  %224 = icmp eq %"class.std::__1::basic_string"* %223, %219
  br i1 %224, label %240, label %225

225:                                              ; preds = %221, %235
  %226 = phi %"class.std::__1::basic_string"* [ %227, %235 ], [ %223, %221 ]
  %227 = getelementptr inbounds %"class.std::__1::basic_string", %"class.std::__1::basic_string"* %226, i64 -1
  %228 = bitcast %"class.std::__1::basic_string"* %227 to %"struct.std::__1::basic_string<char, std::__1::char_traits<char>, std::__1::allocator<char> >::__short"*
  %229 = getelementptr inbounds %"struct.std::__1::basic_string<char, std::__1::char_traits<char>, std::__1::allocator<char> >::__short", %"struct.std::__1::basic_string<char, std::__1::char_traits<char>, std::__1::allocator<char> >::__short"* %228, i64 0, i32 1, i32 0
  %230 = load i8, i8* %229, align 1
  %231 = icmp slt i8 %230, 0
  br i1 %231, label %232, label %235

232:                                              ; preds = %225
  %233 = getelementptr inbounds %"class.std::__1::basic_string", %"class.std::__1::basic_string"* %227, i64 0, i32 0, i32 0, i32 0, i32 0, i32 0, i32 0
  %234 = load i8*, i8** %233, align 8
  call void @_ZdlPv(i8* %234) #9
  br label %235

235:                                              ; preds = %232, %225
  %236 = icmp eq %"class.std::__1::basic_string"* %227, %219
  br i1 %236, label %237, label %225

237:                                              ; preds = %235
  %238 = bitcast %"class.std::__1::vector"* %6 to i8**
  %239 = load i8*, i8** %238, align 8
  br label %240

240:                                              ; preds = %237, %221
  %241 = phi i8* [ %239, %237 ], [ %222, %221 ]
  store %"class.std::__1::basic_string"* %219, %"class.std::__1::basic_string"** %212, align 8
  call void @_ZdlPv(i8* %241) #9
  br label %242

242:                                              ; preds = %240, %206, %69
  %243 = load %"class.std::__1::basic_string"*, %"class.std::__1::basic_string"** %41, align 8
  %244 = icmp eq %"class.std::__1::basic_string"* %243, null
  br i1 %244, label %266, label %245

245:                                              ; preds = %242
  %246 = bitcast %"class.std::__1::basic_string"* %243 to i8*
  %247 = load %"class.std::__1::basic_string"*, %"class.std::__1::basic_string"** %42, align 8
  %248 = icmp eq %"class.std::__1::basic_string"* %247, %243
  br i1 %248, label %264, label %249

249:                                              ; preds = %245, %259
  %250 = phi %"class.std::__1::basic_string"* [ %251, %259 ], [ %247, %245 ]
  %251 = getelementptr inbounds %"class.std::__1::basic_string", %"class.std::__1::basic_string"* %250, i64 -1
  %252 = bitcast %"class.std::__1::basic_string"* %251 to %"struct.std::__1::basic_string<char, std::__1::char_traits<char>, std::__1::allocator<char> >::__short"*
  %253 = getelementptr inbounds %"struct.std::__1::basic_string<char, std::__1::char_traits<char>, std::__1::allocator<char> >::__short", %"struct.std::__1::basic_string<char, std::__1::char_traits<char>, std::__1::allocator<char> >::__short"* %252, i64 0, i32 1, i32 0
  %254 = load i8, i8* %253, align 1
  %255 = icmp slt i8 %254, 0
  br i1 %255, label %256, label %259

256:                                              ; preds = %249
  %257 = getelementptr inbounds %"class.std::__1::basic_string", %"class.std::__1::basic_string"* %251, i64 0, i32 0, i32 0, i32 0, i32 0, i32 0, i32 0
  %258 = load i8*, i8** %257, align 8
  call void @_ZdlPv(i8* %258) #9
  br label %259

259:                                              ; preds = %256, %249
  %260 = icmp eq %"class.std::__1::basic_string"* %251, %243
  br i1 %260, label %261, label %249

261:                                              ; preds = %259
  %262 = bitcast %"class.std::__1::vector"* %4 to i8**
  %263 = load i8*, i8** %262, align 8
  br label %264

264:                                              ; preds = %261, %245
  %265 = phi i8* [ %263, %261 ], [ %246, %245 ]
  store %"class.std::__1::basic_string"* %243, %"class.std::__1::basic_string"** %42, align 8
  call void @_ZdlPv(i8* %265) #9
  br label %266

266:                                              ; preds = %242, %264
  call void @llvm.lifetime.end.p0i8(i64 24, i8* nonnull %40) #8
  call void @_ZN3net8HttpUtil14ValuesIteratorD1Ev(%"class.net::HttpUtil::ValuesIterator"* nonnull %3) #8
  call void @llvm.lifetime.end.p0i8(i64 120, i8* nonnull %32) #8
  br label %267

267:                                              ; preds = %266, %23
  ret void
}

; Function Attrs: argmemonly nounwind
declare void @llvm.lifetime.start.p0i8(i64 immarg, i8* nocapture) #1

; Function Attrs: argmemonly nounwind
declare void @llvm.memset.p0i8.i64(i8* nocapture writeonly, i8, i64, i1 immarg) #1

declare void @_ZN3net8HttpUtil14ValuesIteratorC1ENSt3__111__wrap_iterIPKcEES6_cb(%"class.net::HttpUtil::ValuesIterator"*, i8*, i8*, i8 signext, i1 zeroext) unnamed_addr #2

declare zeroext i1 @_ZN3net8HttpUtil14ValuesIterator7GetNextEv(%"class.net::HttpUtil::ValuesIterator"*) local_unnamed_addr #2

; Function Attrs: argmemonly nounwind
declare void @llvm.lifetime.end.p0i8(i64 immarg, i8* nocapture) #1

; Function Attrs: nounwind ssp uwtable
define linkonce_odr hidden void @_ZN7network5mojom17TimingAllowOrigin20NewSerializedOriginsENSt3__16vectorINS2_12basic_stringIcNS2_11char_traitsIcEENS2_9allocatorIcEEEENS7_IS9_EEEE(%"class.mojo::StructPtr"* noalias sret, %"class.std::__1::vector"*) local_unnamed_addr #0 comdat align 2 {
  %3 = alloca %"class.std::__1::vector", align 16
  %4 = tail call i8* @_Znwm(i64 16) #9
  %5 = bitcast i8* %4 to %"class.network::mojom::TimingAllowOrigin"*
  tail call void @_ZN7network5mojom17TimingAllowOriginC1Ev(%"class.network::mojom::TimingAllowOrigin"* nonnull %5) #8
  %6 = ptrtoint i8* %4 to i64
  %7 = bitcast %"class.mojo::StructPtr"* %0 to i64*
  store i64 %6, i64* %7, align 8
  %8 = bitcast %"class.std::__1::vector"* %1 to <2 x i64>*
  %9 = load <2 x i64>, <2 x i64>* %8, align 8
  %10 = getelementptr inbounds %"class.std::__1::vector", %"class.std::__1::vector"* %3, i64 0, i32 0, i32 1
  %11 = bitcast %"class.std::__1::vector"* %3 to <2 x i64>*
  store <2 x i64> %9, <2 x i64>* %11, align 16
  %12 = getelementptr inbounds %"class.std::__1::vector", %"class.std::__1::vector"* %1, i64 0, i32 0, i32 2, i32 0, i32 0
  %13 = bitcast %"class.std::__1::basic_string"** %12 to i64*
  %14 = load i64, i64* %13, align 8
  %15 = getelementptr inbounds %"class.std::__1::vector", %"class.std::__1::vector"* %3, i64 0, i32 0, i32 2, i32 0, i32 0
  %16 = bitcast %"class.std::__1::basic_string"** %15 to i64*
  store i64 %14, i64* %16, align 16
  %17 = bitcast %"class.std::__1::vector"* %1 to i8*
  tail call void @llvm.memset.p0i8.i64(i8* align 8 %17, i8 0, i64 24, i1 false) #8
  call void @_ZN7network5mojom17TimingAllowOrigin22set_serialized_originsENSt3__16vectorINS2_12basic_stringIcNS2_11char_traitsIcEENS2_9allocatorIcEEEENS7_IS9_EEEE(%"class.network::mojom::TimingAllowOrigin"* nonnull %5, %"class.std::__1::vector"* nonnull %3) #8
  %18 = getelementptr inbounds %"class.std::__1::vector", %"class.std::__1::vector"* %3, i64 0, i32 0, i32 0
  %19 = load %"class.std::__1::basic_string"*, %"class.std::__1::basic_string"** %18, align 16
  %20 = icmp eq %"class.std::__1::basic_string"* %19, null
  br i1 %20, label %42, label %21

21:                                               ; preds = %2
  %22 = bitcast %"class.std::__1::basic_string"* %19 to i8*
  %23 = load %"class.std::__1::basic_string"*, %"class.std::__1::basic_string"** %10, align 8
  %24 = icmp eq %"class.std::__1::basic_string"* %23, %19
  br i1 %24, label %40, label %25

25:                                               ; preds = %21, %35
  %26 = phi %"class.std::__1::basic_string"* [ %27, %35 ], [ %23, %21 ]
  %27 = getelementptr inbounds %"class.std::__1::basic_string", %"class.std::__1::basic_string"* %26, i64 -1
  %28 = bitcast %"class.std::__1::basic_string"* %27 to %"struct.std::__1::basic_string<char, std::__1::char_traits<char>, std::__1::allocator<char> >::__short"*
  %29 = getelementptr inbounds %"struct.std::__1::basic_string<char, std::__1::char_traits<char>, std::__1::allocator<char> >::__short", %"struct.std::__1::basic_string<char, std::__1::char_traits<char>, std::__1::allocator<char> >::__short"* %28, i64 0, i32 1, i32 0
  %30 = load i8, i8* %29, align 1
  %31 = icmp slt i8 %30, 0
  br i1 %31, label %32, label %35

32:                                               ; preds = %25
  %33 = getelementptr inbounds %"class.std::__1::basic_string", %"class.std::__1::basic_string"* %27, i64 0, i32 0, i32 0, i32 0, i32 0, i32 0, i32 0
  %34 = load i8*, i8** %33, align 8
  call void @_ZdlPv(i8* %34) #9
  br label %35

35:                                               ; preds = %32, %25
  %36 = icmp eq %"class.std::__1::basic_string"* %27, %19
  br i1 %36, label %37, label %25

37:                                               ; preds = %35
  %38 = bitcast %"class.std::__1::vector"* %3 to i8**
  %39 = load i8*, i8** %38, align 16
  br label %40

40:                                               ; preds = %37, %21
  %41 = phi i8* [ %39, %37 ], [ %22, %21 ]
  store %"class.std::__1::basic_string"* %19, %"class.std::__1::basic_string"** %10, align 8
  call void @_ZdlPv(i8* %41) #9
  br label %42

42:                                               ; preds = %2, %40
  ret void
}

; Function Attrs: nounwind
declare void @_ZN3net8HttpUtil14ValuesIteratorD1Ev(%"class.net::HttpUtil::ValuesIterator"*) unnamed_addr #3

declare void @_ZN7network5mojom17TimingAllowOrigin7set_allEh(%"class.network::mojom::TimingAllowOrigin"*, i8 zeroext) local_unnamed_addr #2

; Function Attrs: nobuiltin nofree
declare noalias nonnull i8* @_Znwm(i64) local_unnamed_addr #4

declare void @_ZN7network5mojom17TimingAllowOriginC1Ev(%"class.network::mojom::TimingAllowOrigin"*) unnamed_addr #2

; Function Attrs: nobuiltin nounwind
declare void @_ZdlPv(i8*) local_unnamed_addr #5

; Function Attrs: argmemonly nounwind
declare void @llvm.memcpy.p0i8.p0i8.i64(i8* nocapture writeonly, i8* nocapture readonly, i64, i1 immarg) #1

; Function Attrs: noreturn
declare void @_ZNKSt3__121__basic_string_commonILb1EE20__throw_length_errorEv(%"class.std::__1::__basic_string_common"*) local_unnamed_addr #6

declare void @_ZN7network5mojom17TimingAllowOrigin22set_serialized_originsENSt3__16vectorINS2_12basic_stringIcNS2_11char_traitsIcEENS2_9allocatorIcEEEENS7_IS9_EEEE(%"class.network::mojom::TimingAllowOrigin"*, %"class.std::__1::vector"*) local_unnamed_addr #2

declare i32 @_ZNKSt3__112basic_stringIcNS_11char_traitsIcEENS_9allocatorIcEEE7compareEmmPKcm(%"class.std::__1::basic_string"*, i64, i64, i8*, i64) local_unnamed_addr #2

; Function Attrs: inlinehint nounwind ssp uwtable
define linkonce_odr hidden void @_ZNSt3__16vectorINS_12basic_stringIcNS_11char_traitsIcEENS_9allocatorIcEEEENS4_IS6_EEE21__push_back_slow_pathIS6_EEvOT_(%"class.std::__1::vector"*, %"class.std::__1::basic_string"* dereferenceable(24)) local_unnamed_addr #7 comdat align 2 {
  %3 = getelementptr inbounds %"class.std::__1::vector", %"class.std::__1::vector"* %0, i64 0, i32 0, i32 1
  %4 = bitcast %"class.std::__1::basic_string"** %3 to i64*
  %5 = load i64, i64* %4, align 8
  %6 = bitcast %"class.std::__1::vector"* %0 to i64*
  %7 = load i64, i64* %6, align 8
  %8 = sub i64 %5, %7
  %9 = sdiv exact i64 %8, 24
  %10 = add nsw i64 %9, 1
  %11 = icmp ugt i64 %10, 768614336404564650
  br i1 %11, label %12, label %14

12:                                               ; preds = %2
  %13 = bitcast %"class.std::__1::vector"* %0 to %"class.std::__1::__vector_base_common"*
  tail call void @_ZNKSt3__120__vector_base_commonILb1EE20__throw_length_errorEv(%"class.std::__1::__vector_base_common"* %13) #10
  unreachable

14:                                               ; preds = %2
  %15 = getelementptr inbounds %"class.std::__1::vector", %"class.std::__1::vector"* %0, i64 0, i32 0, i32 2, i32 0, i32 0
  %16 = bitcast %"class.std::__1::basic_string"** %15 to i64*
  %17 = load i64, i64* %16, align 8
  %18 = sub i64 %17, %7
  %19 = sdiv exact i64 %18, 24
  %20 = icmp ult i64 %19, 384307168202282325
  br i1 %20, label %21, label %26

21:                                               ; preds = %14
  %22 = shl nsw i64 %19, 1
  %23 = icmp ult i64 %22, %10
  %24 = select i1 %23, i64 %10, i64 %22
  %25 = icmp eq i64 %24, 0
  br i1 %25, label %31, label %26

26:                                               ; preds = %14, %21
  %27 = phi i64 [ %24, %21 ], [ 768614336404564650, %14 ]
  %28 = mul i64 %27, 24
  %29 = tail call i8* @_Znwm(i64 %28) #9
  %30 = bitcast i8* %29 to %"class.std::__1::basic_string"*
  br label %31

31:                                               ; preds = %21, %26
  %32 = phi i64 [ %27, %26 ], [ 0, %21 ]
  %33 = phi %"class.std::__1::basic_string"* [ %30, %26 ], [ null, %21 ]
  %34 = getelementptr inbounds %"class.std::__1::basic_string", %"class.std::__1::basic_string"* %33, i64 %9
  %35 = getelementptr inbounds %"class.std::__1::basic_string", %"class.std::__1::basic_string"* %33, i64 %32
  %36 = ptrtoint %"class.std::__1::basic_string"* %35 to i64
  %37 = bitcast %"class.std::__1::basic_string"* %34 to i8*
  %38 = bitcast %"class.std::__1::basic_string"* %1 to i8*
  tail call void @llvm.memcpy.p0i8.p0i8.i64(i8* align 8 %37, i8* align 8 %38, i64 24, i1 false) #8
  tail call void @llvm.memset.p0i8.i64(i8* align 8 %38, i8 0, i64 24, i1 false) #8
  %39 = getelementptr inbounds %"class.std::__1::basic_string", %"class.std::__1::basic_string"* %34, i64 1
  %40 = ptrtoint %"class.std::__1::basic_string"* %39 to i64
  %41 = getelementptr inbounds %"class.std::__1::vector", %"class.std::__1::vector"* %0, i64 0, i32 0, i32 0
  %42 = load %"class.std::__1::basic_string"*, %"class.std::__1::basic_string"** %41, align 8
  %43 = load %"class.std::__1::basic_string"*, %"class.std::__1::basic_string"** %3, align 8
  %44 = icmp eq %"class.std::__1::basic_string"* %43, %42
  br i1 %44, label %45, label %47

45:                                               ; preds = %31
  %46 = ptrtoint %"class.std::__1::basic_string"* %42 to i64
  br label %58

47:                                               ; preds = %31, %47
  %48 = phi %"class.std::__1::basic_string"* [ %50, %47 ], [ %34, %31 ]
  %49 = phi %"class.std::__1::basic_string"* [ %51, %47 ], [ %43, %31 ]
  %50 = getelementptr inbounds %"class.std::__1::basic_string", %"class.std::__1::basic_string"* %48, i64 -1
  %51 = getelementptr inbounds %"class.std::__1::basic_string", %"class.std::__1::basic_string"* %49, i64 -1
  %52 = bitcast %"class.std::__1::basic_string"* %50 to i8*
  %53 = bitcast %"class.std::__1::basic_string"* %51 to i8*
  tail call void @llvm.memcpy.p0i8.p0i8.i64(i8* align 8 %52, i8* align 8 %53, i64 24, i1 false) #8
  tail call void @llvm.memset.p0i8.i64(i8* align 8 %53, i8 0, i64 24, i1 false) #8
  %54 = icmp eq %"class.std::__1::basic_string"* %51, %42
  br i1 %54, label %55, label %47

55:                                               ; preds = %47
  %56 = load i64, i64* %6, align 8
  %57 = load %"class.std::__1::basic_string"*, %"class.std::__1::basic_string"** %3, align 8
  br label %58

58:                                               ; preds = %45, %55
  %59 = phi %"class.std::__1::basic_string"* [ %42, %45 ], [ %57, %55 ]
  %60 = phi %"class.std::__1::basic_string"* [ %34, %45 ], [ %50, %55 ]
  %61 = phi i64 [ %46, %45 ], [ %56, %55 ]
  %62 = ptrtoint %"class.std::__1::basic_string"* %60 to i64
  store i64 %62, i64* %6, align 8
  store i64 %40, i64* %4, align 8
  store i64 %36, i64* %16, align 8
  %63 = inttoptr i64 %61 to %"class.std::__1::basic_string"*
  %64 = icmp eq %"class.std::__1::basic_string"* %59, %63
  br i1 %64, label %77, label %65

65:                                               ; preds = %58, %75
  %66 = phi %"class.std::__1::basic_string"* [ %67, %75 ], [ %59, %58 ]
  %67 = getelementptr inbounds %"class.std::__1::basic_string", %"class.std::__1::basic_string"* %66, i64 -1
  %68 = bitcast %"class.std::__1::basic_string"* %67 to %"struct.std::__1::basic_string<char, std::__1::char_traits<char>, std::__1::allocator<char> >::__short"*
  %69 = getelementptr inbounds %"struct.std::__1::basic_string<char, std::__1::char_traits<char>, std::__1::allocator<char> >::__short", %"struct.std::__1::basic_string<char, std::__1::char_traits<char>, std::__1::allocator<char> >::__short"* %68, i64 0, i32 1, i32 0
  %70 = load i8, i8* %69, align 1
  %71 = icmp slt i8 %70, 0
  br i1 %71, label %72, label %75

72:                                               ; preds = %65
  %73 = getelementptr inbounds %"class.std::__1::basic_string", %"class.std::__1::basic_string"* %67, i64 0, i32 0, i32 0, i32 0, i32 0, i32 0, i32 0
  %74 = load i8*, i8** %73, align 8
  tail call void @_ZdlPv(i8* %74) #9
  br label %75

75:                                               ; preds = %72, %65
  %76 = icmp eq %"class.std::__1::basic_string"* %67, %63
  br i1 %76, label %77, label %65

77:                                               ; preds = %75, %58
  %78 = icmp eq i64 %61, 0
  br i1 %78, label %81, label %79

79:                                               ; preds = %77
  %80 = inttoptr i64 %61 to i8*
  tail call void @_ZdlPv(i8* %80) #9
  br label %81

81:                                               ; preds = %77, %79
  ret void
}

; Function Attrs: noreturn
declare void @_ZNKSt3__120__vector_base_commonILb1EE20__throw_length_errorEv(%"class.std::__1::__vector_base_common"*) local_unnamed_addr #6

attributes #0 = { nounwind ssp uwtable "correctly-rounded-divide-sqrt-fp-math"="false" "disable-tail-calls"="false" "less-precise-fpmad"="false" "min-legal-vector-width"="0" "no-frame-pointer-elim"="false" "no-frame-pointer-elim-non-leaf" "no-infs-fp-math"="false" "no-jump-tables"="false" "no-nans-fp-math"="false" "no-signed-zeros-fp-math"="false" "no-trapping-math"="false" "null-pointer-is-valid"="true" "stack-protector-buffer-size"="4" "target-cpu"="x86-64" "target-features"="+cx8,+fxsr,+mmx,+sse,+sse2,+sse3,+x87" "unsafe-fp-math"="false" "use-soft-float"="false" }
attributes #1 = { argmemonly nounwind }
attributes #2 = { "correctly-rounded-divide-sqrt-fp-math"="false" "disable-tail-calls"="false" "less-precise-fpmad"="false" "no-frame-pointer-elim"="false" "no-frame-pointer-elim-non-leaf" "no-infs-fp-math"="false" "no-nans-fp-math"="false" "no-signed-zeros-fp-math"="false" "no-trapping-math"="false" "null-pointer-is-valid"="true" "stack-protector-buffer-size"="4" "target-cpu"="x86-64" "target-features"="+cx8,+fxsr,+mmx,+sse,+sse2,+sse3,+x87" "unsafe-fp-math"="false" "use-soft-float"="false" }
attributes #3 = { nounwind "correctly-rounded-divide-sqrt-fp-math"="false" "disable-tail-calls"="false" "less-precise-fpmad"="false" "no-frame-pointer-elim"="false" "no-frame-pointer-elim-non-leaf" "no-infs-fp-math"="false" "no-nans-fp-math"="false" "no-signed-zeros-fp-math"="false" "no-trapping-math"="false" "null-pointer-is-valid"="true" "stack-protector-buffer-size"="4" "target-cpu"="x86-64" "target-features"="+cx8,+fxsr,+mmx,+sse,+sse2,+sse3,+x87" "unsafe-fp-math"="false" "use-soft-float"="false" }
attributes #4 = { nobuiltin nofree "correctly-rounded-divide-sqrt-fp-math"="false" "disable-tail-calls"="false" "less-precise-fpmad"="false" "no-frame-pointer-elim"="false" "no-frame-pointer-elim-non-leaf" "no-infs-fp-math"="false" "no-nans-fp-math"="false" "no-signed-zeros-fp-math"="false" "no-trapping-math"="false" "null-pointer-is-valid"="true" "stack-protector-buffer-size"="4" "target-cpu"="x86-64" "target-features"="+cx8,+fxsr,+mmx,+sse,+sse2,+sse3,+x87" "unsafe-fp-math"="false" "use-soft-float"="false" }
attributes #5 = { nobuiltin nounwind "correctly-rounded-divide-sqrt-fp-math"="false" "disable-tail-calls"="false" "less-precise-fpmad"="false" "no-frame-pointer-elim"="false" "no-frame-pointer-elim-non-leaf" "no-infs-fp-math"="false" "no-nans-fp-math"="false" "no-signed-zeros-fp-math"="false" "no-trapping-math"="false" "null-pointer-is-valid"="true" "stack-protector-buffer-size"="4" "target-cpu"="x86-64" "target-features"="+cx8,+fxsr,+mmx,+sse,+sse2,+sse3,+x87" "unsafe-fp-math"="false" "use-soft-float"="false" }
attributes #6 = { noreturn "correctly-rounded-divide-sqrt-fp-math"="false" "disable-tail-calls"="false" "less-precise-fpmad"="false" "no-frame-pointer-elim"="false" "no-frame-pointer-elim-non-leaf" "no-infs-fp-math"="false" "no-nans-fp-math"="false" "no-signed-zeros-fp-math"="false" "no-trapping-math"="false" "null-pointer-is-valid"="true" "stack-protector-buffer-size"="4" "target-cpu"="x86-64" "target-features"="+cx8,+fxsr,+mmx,+sse,+sse2,+sse3,+x87" "unsafe-fp-math"="false" "use-soft-float"="false" }
attributes #7 = { inlinehint nounwind ssp uwtable "correctly-rounded-divide-sqrt-fp-math"="false" "disable-tail-calls"="false" "less-precise-fpmad"="false" "min-legal-vector-width"="0" "no-frame-pointer-elim"="false" "no-frame-pointer-elim-non-leaf" "no-infs-fp-math"="false" "no-jump-tables"="false" "no-nans-fp-math"="false" "no-signed-zeros-fp-math"="false" "no-trapping-math"="false" "null-pointer-is-valid"="true" "stack-protector-buffer-size"="4" "target-cpu"="x86-64" "target-features"="+cx8,+fxsr,+mmx,+sse,+sse2,+sse3,+x87" "unsafe-fp-math"="false" "use-soft-float"="false" }
attributes #8 = { nounwind }
attributes #9 = { builtin nounwind }
attributes #10 = { noreturn nounwind }

!llvm.module.flags = !{!0, !1}

!0 = !{i32 1, !"wchar_size", i32 4}
!1 = !{i32 7, !"PIC Level", i32 2}
!2 = !{!3}
!3 = distinct !{!3, !4, !"_ZN7network5mojom17TimingAllowOrigin6NewAllEh: argument 0"}
!4 = distinct !{!4, !"_ZN7network5mojom17TimingAllowOrigin6NewAllEh"}
!5 = !{!6}
!6 = distinct !{!6, !7, !"_ZN7network5mojom17TimingAllowOrigin6NewAllEh: argument 0"}
!7 = distinct !{!7, !"_ZN7network5mojom17TimingAllowOrigin6NewAllEh"}
!8 = !{!9}
!9 = distinct !{!9, !10, !"_ZNK3net8HttpUtil14ValuesIterator5valueEv: argument 0"}
!10 = distinct !{!10, !"_ZNK3net8HttpUtil14ValuesIterator5valueEv"}
!11 = !{!12}
!12 = distinct !{!12, !13}
!13 = distinct !{!13, !"LVerDomain"}
!14 = !{!15}
!15 = distinct !{!15, !13}
!16 = distinct !{!16, !17}
!17 = !{!"llvm.loop.isvectorized", i32 1}
!18 = distinct !{!18, !19}
!19 = !{!"llvm.loop.unroll.disable"}
!20 = distinct !{!20, !17}
