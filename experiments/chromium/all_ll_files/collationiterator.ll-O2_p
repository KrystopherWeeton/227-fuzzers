; ModuleID = '../../third_party/icu/source/i18n/collationiterator.cpp'
source_filename = "../../third_party/icu/source/i18n/collationiterator.cpp"
target datalayout = "e-m:e-i64:64-f80:128-n8:16:32:64-S128"
target triple = "x86_64-unknown-linux-gnu"

%"class.icu_69::MaybeStackArray" = type <{ i8*, i32, i8, [40 x i8], [3 x i8] }>
%"class.icu_69::CollationIterator::CEBuffer" = type { i32, %"class.icu_69::MaybeStackArray.0" }
%"class.icu_69::MaybeStackArray.0" = type { i64*, i32, i8, [40 x i64] }
%"class.icu_69::CollationIterator" = type <{ %"class.icu_69::UObject", %struct.UTrie2*, %"struct.icu_69::CollationData"*, %"class.icu_69::CollationIterator::CEBuffer", i32, [4 x i8], %"class.icu_69::SkippedState"*, i32, i8, [3 x i8] }>
%"class.icu_69::UObject" = type { i32 (...)** }
%struct.UTrie2 = type { i16*, i16*, i32*, i32, i32, i16, i16, i32, i32, i32, i32, i8*, i32, i8, i8, i16, %struct.UNewTrie2* }
%struct.UNewTrie2 = type opaque
%"struct.icu_69::CollationData" = type <{ %struct.UTrie2*, i32*, i64*, i16*, %"struct.icu_69::CollationData"*, i32*, %"class.icu_69::Normalizer2Impl"*, i32, i32, i32, i32, i8*, %"class.icu_69::UnicodeSet"*, i16*, i32, i32, i16*, i16*, i32, [4 x i8], i32*, i32, [4 x i8] }>
%"class.icu_69::Normalizer2Impl" = type { %"class.icu_69::UObject", i16, i16, i16, i16, i16, i16, i16, i16, i16, i16, i16, i16, %struct.UCPTrie*, i16*, i16*, i8*, %"struct.icu_69::UInitOnce", %"struct.icu_69::CanonIterData"* }
%struct.UCPTrie = type { i16*, %union.UCPTrieData, i32, i32, i32, i16, i8, i8, i32, i16, i16, i32, i32 }
%union.UCPTrieData = type { i8* }
%"struct.icu_69::UInitOnce" = type { %"struct.std::__1::atomic", i32 }
%"struct.std::__1::atomic" = type { %"struct.std::__1::__atomic_base" }
%"struct.std::__1::__atomic_base" = type { %"struct.std::__1::__atomic_base.1" }
%"struct.std::__1::__atomic_base.1" = type { %"struct.std::__1::__cxx_atomic_impl" }
%"struct.std::__1::__cxx_atomic_impl" = type { %"struct.std::__1::__cxx_atomic_base_impl" }
%"struct.std::__1::__cxx_atomic_base_impl" = type { i32 }
%"struct.icu_69::CanonIterData" = type opaque
%"class.icu_69::UnicodeSet" = type <{ %"class.icu_69::UnicodeFilter", i32*, i32, i32, i8, [7 x i8], %"class.icu_69::BMPSet"*, i32*, i32, [4 x i8], i16*, i32, [4 x i8], %"class.icu_69::UVector"*, %"class.icu_69::UnicodeSetStringSpan"*, [25 x i32], [4 x i8] }>
%"class.icu_69::UnicodeFilter" = type { %"class.icu_69::UnicodeFunctor", %"class.icu_69::UnicodeMatcher" }
%"class.icu_69::UnicodeFunctor" = type { %"class.icu_69::UObject" }
%"class.icu_69::UnicodeMatcher" = type { i32 (...)** }
%"class.icu_69::BMPSet" = type opaque
%"class.icu_69::UVector" = type opaque
%"class.icu_69::UnicodeSetStringSpan" = type opaque
%"class.icu_69::SkippedState" = type { [8 x i8], %"class.icu_69::UnicodeString", %"class.icu_69::UnicodeString", i32, i32, %"class.icu_69::UCharsTrie::State" }
%"class.icu_69::UnicodeString" = type { %"class.icu_69::Replaceable", %"union.icu_69::UnicodeString::StackBufferOrFields" }
%"class.icu_69::Replaceable" = type { %"class.icu_69::UObject" }
%"union.icu_69::UnicodeString::StackBufferOrFields" = type { %struct.anon.2, [32 x i8] }
%struct.anon.2 = type { i16, i32, i32, i16* }
%"class.icu_69::UCharsTrie::State" = type <{ i16*, i16*, i32, [4 x i8] }>
%"class.std::type_info" = type { i32 (...)**, i8* }
%"class.icu_69::UCharsTrie" = type <{ i16*, i16*, i16*, i32, [4 x i8] }>
%"class.icu_69::CharString" = type { %"class.icu_69::MaybeStackArray", i32, [4 x i8] }
%"class.icu_69::UVector32" = type { %"class.icu_69::UObject", i32, i32, i32, i32* }

$_ZN6icu_6915MaybeStackArrayIcLi40EEC5Ev = comdat any

$_ZN6icu_6915MaybeStackArrayIcLi40EEC5Ei10UErrorCode = comdat any

$_ZN6icu_6915MaybeStackArrayIcLi40EE6resizeEii = comdat any

$_ZN6icu_6915MaybeStackArrayIcLi40EED5Ev = comdat any

$_ZN6icu_6915MaybeStackArrayIcLi40EE12releaseArrayEv = comdat any

$_ZN6icu_6915MaybeStackArrayIcLi40EEC5EOS1_ = comdat any

$_ZN6icu_6915MaybeStackArrayIcLi40EE17resetToStackArrayEv = comdat any

$_ZN6icu_6915MaybeStackArrayIcLi40EEaSEOS1_ = comdat any

$_ZNK6icu_6915MaybeStackArrayIcLi40EE11getCapacityEv = comdat any

$_ZNK6icu_6915MaybeStackArrayIcLi40EE8getAliasEv = comdat any

$_ZNK6icu_6915MaybeStackArrayIcLi40EE13getArrayLimitEv = comdat any

$_ZNK6icu_6915MaybeStackArrayIcLi40EEixEl = comdat any

$_ZN6icu_6915MaybeStackArrayIcLi40EEixEl = comdat any

$_ZN6icu_6915MaybeStackArrayIcLi40EE12aliasInsteadEPci = comdat any

$_ZN6icu_6915MaybeStackArrayIcLi40EE13orphanOrCloneEiRi = comdat any

$_ZN6icu_6915MaybeStackArrayIcLi40EE8copyFromERKS1_R10UErrorCode = comdat any

$_ZN6icu_6917CollationIterator6nextCEER10UErrorCode = comdat any

@_ZTVN6icu_6917CollationIteratorE = hidden unnamed_addr constant { [18 x i8*] } { [18 x i8*] [i8* null, i8* bitcast ({ i8*, i8*, i8* }* @_ZTIN6icu_6917CollationIteratorE to i8*), i8* bitcast (void (%"class.icu_69::CollationIterator"*)* @_ZN6icu_6917CollationIteratorD2Ev to i8*), i8* bitcast (void (%"class.icu_69::CollationIterator"*)* @_ZN6icu_6917CollationIteratorD0Ev to i8*), i8* bitcast (i8* (%"class.icu_69::UObject"*)* @_ZNK6icu_697UObject17getDynamicClassIDEv to i8*), i8* bitcast (i8 (%"class.icu_69::CollationIterator"*, %"class.icu_69::CollationIterator"*)* @_ZNK6icu_6917CollationIteratoreqERKS0_ to i8*), i8* bitcast (void ()* @__cxa_pure_virtual to i8*), i8* bitcast (void ()* @__cxa_pure_virtual to i8*), i8* bitcast (void ()* @__cxa_pure_virtual to i8*), i8* bitcast (void ()* @__cxa_pure_virtual to i8*), i8* bitcast (i32 (%"class.icu_69::CollationIterator"*, i32*, i32*)* @_ZN6icu_6917CollationIterator14handleNextCE32ERiR10UErrorCode to i8*), i8* bitcast (i16 (%"class.icu_69::CollationIterator"*)* @_ZN6icu_6917CollationIterator23handleGetTrailSurrogateEv to i8*), i8* bitcast (i8 (%"class.icu_69::CollationIterator"*)* @_ZN6icu_6917CollationIterator18foundNULTerminatorEv to i8*), i8* bitcast (i8 (%"class.icu_69::CollationIterator"*)* @_ZNK6icu_6917CollationIterator25forbidSurrogateCodePointsEv to i8*), i8* bitcast (void ()* @__cxa_pure_virtual to i8*), i8* bitcast (void ()* @__cxa_pure_virtual to i8*), i8* bitcast (i32 (%"class.icu_69::CollationIterator"*, i32)* @_ZNK6icu_6917CollationIterator11getDataCE32Ei to i8*), i8* bitcast (i32 (%"class.icu_69::CollationIterator"*, i32, i32*)* @_ZN6icu_6917CollationIterator22getCE32FromBuilderDataEjR10UErrorCode to i8*)] }, align 8
@_ZTVN10__cxxabiv120__si_class_type_infoE = external global i8*
@_ZTSN6icu_6917CollationIteratorE = hidden constant [29 x i8] c"N6icu_6917CollationIteratorE\00", align 1
@_ZTIN6icu_697UObjectE = external constant i8*
@_ZTIN6icu_6917CollationIteratorE = hidden constant { i8*, i8*, i8* } { i8* bitcast (i8** getelementptr inbounds (i8*, i8** @_ZTVN10__cxxabiv120__si_class_type_infoE, i64 2) to i8*), i8* getelementptr inbounds ([29 x i8], [29 x i8]* @_ZTSN6icu_6917CollationIteratorE, i32 0, i32 0), i8* bitcast (i8** @_ZTIN6icu_697UObjectE to i8*) }, align 8
@_ZN6icu_6912CollationFCD9lcccIndexE = external local_unnamed_addr constant [2048 x i8], align 16
@_ZN6icu_6912CollationFCD8lcccBitsE = external local_unnamed_addr constant [0 x i32], align 4
@_ZTVN6icu_6913UnicodeStringE = external unnamed_addr constant { [13 x i8*] }, align 8

@_ZN6icu_6915MaybeStackArrayIcLi40EEC1Ev = weak_odr hidden unnamed_addr alias void (%"class.icu_69::MaybeStackArray"*), void (%"class.icu_69::MaybeStackArray"*)* @_ZN6icu_6915MaybeStackArrayIcLi40EEC2Ev
@_ZN6icu_6915MaybeStackArrayIcLi40EEC1Ei10UErrorCode = weak_odr hidden unnamed_addr alias void (%"class.icu_69::MaybeStackArray"*, i32, i32), void (%"class.icu_69::MaybeStackArray"*, i32, i32)* @_ZN6icu_6915MaybeStackArrayIcLi40EEC2Ei10UErrorCode
@_ZN6icu_6915MaybeStackArrayIcLi40EED1Ev = weak_odr hidden unnamed_addr alias void (%"class.icu_69::MaybeStackArray"*), void (%"class.icu_69::MaybeStackArray"*)* @_ZN6icu_6915MaybeStackArrayIcLi40EED2Ev
@_ZN6icu_6915MaybeStackArrayIcLi40EEC1EOS1_ = weak_odr hidden unnamed_addr alias void (%"class.icu_69::MaybeStackArray"*, %"class.icu_69::MaybeStackArray"*), void (%"class.icu_69::MaybeStackArray"*, %"class.icu_69::MaybeStackArray"*)* @_ZN6icu_6915MaybeStackArrayIcLi40EEC2EOS1_
@_ZN6icu_6917CollationIterator8CEBufferD1Ev = hidden unnamed_addr alias void (%"class.icu_69::CollationIterator::CEBuffer"*), void (%"class.icu_69::CollationIterator::CEBuffer"*)* @_ZN6icu_6917CollationIterator8CEBufferD2Ev
@_ZN6icu_6917CollationIteratorD1Ev = hidden unnamed_addr alias void (%"class.icu_69::CollationIterator"*), void (%"class.icu_69::CollationIterator"*)* @_ZN6icu_6917CollationIteratorD2Ev

; Function Attrs: nounwind ssp uwtable
define weak_odr hidden void @_ZN6icu_6915MaybeStackArrayIcLi40EEC2Ev(%"class.icu_69::MaybeStackArray"*) unnamed_addr #0 comdat($_ZN6icu_6915MaybeStackArrayIcLi40EEC5Ev) align 2 {
  %2 = getelementptr inbounds %"class.icu_69::MaybeStackArray", %"class.icu_69::MaybeStackArray"* %0, i64 0, i32 0
  %3 = getelementptr inbounds %"class.icu_69::MaybeStackArray", %"class.icu_69::MaybeStackArray"* %0, i64 0, i32 3, i64 0
  store i8* %3, i8** %2, align 8
  %4 = getelementptr inbounds %"class.icu_69::MaybeStackArray", %"class.icu_69::MaybeStackArray"* %0, i64 0, i32 1
  store i32 40, i32* %4, align 8
  %5 = getelementptr inbounds %"class.icu_69::MaybeStackArray", %"class.icu_69::MaybeStackArray"* %0, i64 0, i32 2
  store i8 0, i8* %5, align 4
  ret void
}

; Function Attrs: nounwind ssp uwtable
define weak_odr hidden void @_ZN6icu_6915MaybeStackArrayIcLi40EEC2Ei10UErrorCode(%"class.icu_69::MaybeStackArray"*, i32, i32) unnamed_addr #0 comdat($_ZN6icu_6915MaybeStackArrayIcLi40EEC5Ei10UErrorCode) align 2 {
  %4 = getelementptr inbounds %"class.icu_69::MaybeStackArray", %"class.icu_69::MaybeStackArray"* %0, i64 0, i32 0
  %5 = getelementptr inbounds %"class.icu_69::MaybeStackArray", %"class.icu_69::MaybeStackArray"* %0, i64 0, i32 3, i64 0
  store i8* %5, i8** %4, align 8
  %6 = getelementptr inbounds %"class.icu_69::MaybeStackArray", %"class.icu_69::MaybeStackArray"* %0, i64 0, i32 1
  store i32 40, i32* %6, align 8
  %7 = getelementptr inbounds %"class.icu_69::MaybeStackArray", %"class.icu_69::MaybeStackArray"* %0, i64 0, i32 2
  store i8 0, i8* %7, align 4
  %8 = icmp slt i32 %2, 1
  %9 = icmp sgt i32 %1, 40
  %10 = and i1 %9, %8
  br i1 %10, label %11, label %21

11:                                               ; preds = %3
  %12 = sext i32 %1 to i64
  %13 = tail call noalias i8* @uprv_malloc_69(i64 %12) #11
  %14 = icmp eq i8* %13, null
  br i1 %14, label %21, label %15

15:                                               ; preds = %11
  %16 = load i8, i8* %7, align 4
  %17 = icmp eq i8 %16, 0
  br i1 %17, label %20, label %18

18:                                               ; preds = %15
  %19 = load i8*, i8** %4, align 8
  tail call void @uprv_free_69(i8* %19) #12
  br label %20

20:                                               ; preds = %18, %15
  store i8* %13, i8** %4, align 8
  store i32 %1, i32* %6, align 8
  store i8 1, i8* %7, align 4
  br label %21

21:                                               ; preds = %3, %11, %20
  ret void
}

; Function Attrs: inlinehint nounwind ssp uwtable
define weak_odr hidden i8* @_ZN6icu_6915MaybeStackArrayIcLi40EE6resizeEii(%"class.icu_69::MaybeStackArray"*, i32, i32) local_unnamed_addr #1 comdat align 2 {
  %4 = icmp sgt i32 %1, 0
  br i1 %4, label %5, label %31

5:                                                ; preds = %3
  %6 = sext i32 %1 to i64
  %7 = tail call noalias i8* @uprv_malloc_69(i64 %6) #11
  %8 = icmp eq i8* %7, null
  br i1 %8, label %31, label %9

9:                                                ; preds = %5
  %10 = icmp sgt i32 %2, 0
  br i1 %10, label %11, label %21

11:                                               ; preds = %9
  %12 = getelementptr inbounds %"class.icu_69::MaybeStackArray", %"class.icu_69::MaybeStackArray"* %0, i64 0, i32 1
  %13 = load i32, i32* %12, align 8
  %14 = icmp slt i32 %13, %2
  %15 = select i1 %14, i32 %13, i32 %2
  %16 = icmp sgt i32 %15, %1
  %17 = select i1 %16, i32 %1, i32 %15
  %18 = getelementptr inbounds %"class.icu_69::MaybeStackArray", %"class.icu_69::MaybeStackArray"* %0, i64 0, i32 0
  %19 = load i8*, i8** %18, align 8
  %20 = sext i32 %17 to i64
  tail call void @llvm.memcpy.p0i8.p0i8.i64(i8* nonnull align 1 %7, i8* align 1 %19, i64 %20, i1 false)
  br label %21

21:                                               ; preds = %11, %9
  %22 = getelementptr inbounds %"class.icu_69::MaybeStackArray", %"class.icu_69::MaybeStackArray"* %0, i64 0, i32 2
  %23 = load i8, i8* %22, align 4
  %24 = icmp eq i8 %23, 0
  br i1 %24, label %28, label %25

25:                                               ; preds = %21
  %26 = getelementptr inbounds %"class.icu_69::MaybeStackArray", %"class.icu_69::MaybeStackArray"* %0, i64 0, i32 0
  %27 = load i8*, i8** %26, align 8
  tail call void @uprv_free_69(i8* %27) #12
  br label %28

28:                                               ; preds = %21, %25
  %29 = getelementptr inbounds %"class.icu_69::MaybeStackArray", %"class.icu_69::MaybeStackArray"* %0, i64 0, i32 0
  store i8* %7, i8** %29, align 8
  %30 = getelementptr inbounds %"class.icu_69::MaybeStackArray", %"class.icu_69::MaybeStackArray"* %0, i64 0, i32 1
  store i32 %1, i32* %30, align 8
  store i8 1, i8* %22, align 4
  br label %31

31:                                               ; preds = %3, %28, %5
  %32 = phi i8* [ null, %5 ], [ %7, %28 ], [ null, %3 ]
  ret i8* %32
}

; Function Attrs: nounwind ssp uwtable
define weak_odr hidden void @_ZN6icu_6915MaybeStackArrayIcLi40EED2Ev(%"class.icu_69::MaybeStackArray"*) unnamed_addr #0 comdat($_ZN6icu_6915MaybeStackArrayIcLi40EED5Ev) align 2 {
  %2 = getelementptr inbounds %"class.icu_69::MaybeStackArray", %"class.icu_69::MaybeStackArray"* %0, i64 0, i32 2
  %3 = load i8, i8* %2, align 4
  %4 = icmp eq i8 %3, 0
  br i1 %4, label %8, label %5

5:                                                ; preds = %1
  %6 = getelementptr inbounds %"class.icu_69::MaybeStackArray", %"class.icu_69::MaybeStackArray"* %0, i64 0, i32 0
  %7 = load i8*, i8** %6, align 8
  tail call void @uprv_free_69(i8* %7) #12
  br label %8

8:                                                ; preds = %1, %5
  ret void
}

; Function Attrs: nounwind ssp uwtable
define weak_odr hidden void @_ZN6icu_6915MaybeStackArrayIcLi40EE12releaseArrayEv(%"class.icu_69::MaybeStackArray"*) local_unnamed_addr #0 comdat align 2 {
  %2 = getelementptr inbounds %"class.icu_69::MaybeStackArray", %"class.icu_69::MaybeStackArray"* %0, i64 0, i32 2
  %3 = load i8, i8* %2, align 4
  %4 = icmp eq i8 %3, 0
  br i1 %4, label %8, label %5

5:                                                ; preds = %1
  %6 = getelementptr inbounds %"class.icu_69::MaybeStackArray", %"class.icu_69::MaybeStackArray"* %0, i64 0, i32 0
  %7 = load i8*, i8** %6, align 8
  tail call void @uprv_free_69(i8* %7) #12
  br label %8

8:                                                ; preds = %1, %5
  ret void
}

; Function Attrs: nounwind ssp uwtable
define weak_odr hidden void @_ZN6icu_6915MaybeStackArrayIcLi40EEC2EOS1_(%"class.icu_69::MaybeStackArray"*, %"class.icu_69::MaybeStackArray"* dereferenceable(56)) unnamed_addr #0 comdat($_ZN6icu_6915MaybeStackArrayIcLi40EEC5EOS1_) align 2 {
  %3 = getelementptr inbounds %"class.icu_69::MaybeStackArray", %"class.icu_69::MaybeStackArray"* %1, i64 0, i32 0
  %4 = bitcast %"class.icu_69::MaybeStackArray"* %1 to i64*
  %5 = load i64, i64* %4, align 8
  %6 = bitcast %"class.icu_69::MaybeStackArray"* %0 to i64*
  store i64 %5, i64* %6, align 8
  %7 = getelementptr inbounds %"class.icu_69::MaybeStackArray", %"class.icu_69::MaybeStackArray"* %0, i64 0, i32 1
  %8 = getelementptr inbounds %"class.icu_69::MaybeStackArray", %"class.icu_69::MaybeStackArray"* %1, i64 0, i32 1
  %9 = load i32, i32* %8, align 8
  store i32 %9, i32* %7, align 8
  %10 = getelementptr inbounds %"class.icu_69::MaybeStackArray", %"class.icu_69::MaybeStackArray"* %0, i64 0, i32 2
  %11 = getelementptr inbounds %"class.icu_69::MaybeStackArray", %"class.icu_69::MaybeStackArray"* %1, i64 0, i32 2
  %12 = load i8, i8* %11, align 4
  store i8 %12, i8* %10, align 4
  %13 = load i8*, i8** %3, align 8
  %14 = getelementptr inbounds %"class.icu_69::MaybeStackArray", %"class.icu_69::MaybeStackArray"* %1, i64 0, i32 3, i64 0
  %15 = icmp eq i8* %13, %14
  br i1 %15, label %16, label %21

16:                                               ; preds = %2
  %17 = getelementptr inbounds %"class.icu_69::MaybeStackArray", %"class.icu_69::MaybeStackArray"* %0, i64 0, i32 0
  %18 = getelementptr inbounds %"class.icu_69::MaybeStackArray", %"class.icu_69::MaybeStackArray"* %0, i64 0, i32 3, i64 0
  store i8* %18, i8** %17, align 8
  %19 = load i32, i32* %8, align 8
  %20 = sext i32 %19 to i64
  tail call void @llvm.memcpy.p0i8.p0i8.i64(i8* align 1 %18, i8* align 1 %13, i64 %20, i1 false)
  br label %22

21:                                               ; preds = %2
  store i8* %14, i8** %3, align 8
  store i32 40, i32* %8, align 8
  store i8 0, i8* %11, align 4
  br label %22

22:                                               ; preds = %21, %16
  ret void
}

; Function Attrs: argmemonly nounwind
declare void @llvm.memcpy.p0i8.p0i8.i64(i8* nocapture writeonly, i8* nocapture readonly, i64, i1 immarg) #2

; Function Attrs: nounwind ssp uwtable
define weak_odr hidden void @_ZN6icu_6915MaybeStackArrayIcLi40EE17resetToStackArrayEv(%"class.icu_69::MaybeStackArray"*) local_unnamed_addr #0 comdat align 2 {
  %2 = getelementptr inbounds %"class.icu_69::MaybeStackArray", %"class.icu_69::MaybeStackArray"* %0, i64 0, i32 3, i64 0
  %3 = getelementptr inbounds %"class.icu_69::MaybeStackArray", %"class.icu_69::MaybeStackArray"* %0, i64 0, i32 0
  store i8* %2, i8** %3, align 8
  %4 = getelementptr inbounds %"class.icu_69::MaybeStackArray", %"class.icu_69::MaybeStackArray"* %0, i64 0, i32 1
  store i32 40, i32* %4, align 8
  %5 = getelementptr inbounds %"class.icu_69::MaybeStackArray", %"class.icu_69::MaybeStackArray"* %0, i64 0, i32 2
  store i8 0, i8* %5, align 4
  ret void
}

; Function Attrs: inlinehint nounwind ssp uwtable
define weak_odr hidden dereferenceable(56) %"class.icu_69::MaybeStackArray"* @_ZN6icu_6915MaybeStackArrayIcLi40EEaSEOS1_(%"class.icu_69::MaybeStackArray"*, %"class.icu_69::MaybeStackArray"* dereferenceable(56)) local_unnamed_addr #1 comdat align 2 {
  %3 = getelementptr inbounds %"class.icu_69::MaybeStackArray", %"class.icu_69::MaybeStackArray"* %0, i64 0, i32 2
  %4 = load i8, i8* %3, align 4
  %5 = icmp eq i8 %4, 0
  br i1 %5, label %9, label %6

6:                                                ; preds = %2
  %7 = getelementptr inbounds %"class.icu_69::MaybeStackArray", %"class.icu_69::MaybeStackArray"* %0, i64 0, i32 0
  %8 = load i8*, i8** %7, align 8
  tail call void @uprv_free_69(i8* %8) #12
  br label %9

9:                                                ; preds = %2, %6
  %10 = getelementptr inbounds %"class.icu_69::MaybeStackArray", %"class.icu_69::MaybeStackArray"* %1, i64 0, i32 1
  %11 = load i32, i32* %10, align 8
  %12 = getelementptr inbounds %"class.icu_69::MaybeStackArray", %"class.icu_69::MaybeStackArray"* %0, i64 0, i32 1
  store i32 %11, i32* %12, align 8
  %13 = getelementptr inbounds %"class.icu_69::MaybeStackArray", %"class.icu_69::MaybeStackArray"* %1, i64 0, i32 2
  %14 = load i8, i8* %13, align 4
  store i8 %14, i8* %3, align 4
  %15 = getelementptr inbounds %"class.icu_69::MaybeStackArray", %"class.icu_69::MaybeStackArray"* %1, i64 0, i32 0
  %16 = load i8*, i8** %15, align 8
  %17 = getelementptr inbounds %"class.icu_69::MaybeStackArray", %"class.icu_69::MaybeStackArray"* %1, i64 0, i32 3, i64 0
  %18 = icmp eq i8* %16, %17
  br i1 %18, label %19, label %24

19:                                               ; preds = %9
  %20 = getelementptr inbounds %"class.icu_69::MaybeStackArray", %"class.icu_69::MaybeStackArray"* %0, i64 0, i32 3, i64 0
  %21 = getelementptr inbounds %"class.icu_69::MaybeStackArray", %"class.icu_69::MaybeStackArray"* %0, i64 0, i32 0
  store i8* %20, i8** %21, align 8
  %22 = load i32, i32* %10, align 8
  %23 = sext i32 %22 to i64
  tail call void @llvm.memcpy.p0i8.p0i8.i64(i8* align 1 %20, i8* align 1 %16, i64 %23, i1 false)
  br label %26

24:                                               ; preds = %9
  %25 = getelementptr inbounds %"class.icu_69::MaybeStackArray", %"class.icu_69::MaybeStackArray"* %0, i64 0, i32 0
  store i8* %16, i8** %25, align 8
  store i8* %17, i8** %15, align 8
  store i32 40, i32* %10, align 8
  store i8 0, i8* %13, align 4
  br label %26

26:                                               ; preds = %24, %19
  ret %"class.icu_69::MaybeStackArray"* %0
}

; Function Attrs: nounwind ssp uwtable
define weak_odr hidden i32 @_ZNK6icu_6915MaybeStackArrayIcLi40EE11getCapacityEv(%"class.icu_69::MaybeStackArray"*) local_unnamed_addr #0 comdat align 2 {
  %2 = getelementptr inbounds %"class.icu_69::MaybeStackArray", %"class.icu_69::MaybeStackArray"* %0, i64 0, i32 1
  %3 = load i32, i32* %2, align 8
  ret i32 %3
}

; Function Attrs: nounwind ssp uwtable
define weak_odr hidden i8* @_ZNK6icu_6915MaybeStackArrayIcLi40EE8getAliasEv(%"class.icu_69::MaybeStackArray"*) local_unnamed_addr #0 comdat align 2 {
  %2 = getelementptr inbounds %"class.icu_69::MaybeStackArray", %"class.icu_69::MaybeStackArray"* %0, i64 0, i32 0
  %3 = load i8*, i8** %2, align 8
  ret i8* %3
}

; Function Attrs: nounwind ssp uwtable
define weak_odr hidden i8* @_ZNK6icu_6915MaybeStackArrayIcLi40EE13getArrayLimitEv(%"class.icu_69::MaybeStackArray"*) local_unnamed_addr #0 comdat align 2 {
  %2 = getelementptr inbounds %"class.icu_69::MaybeStackArray", %"class.icu_69::MaybeStackArray"* %0, i64 0, i32 0
  %3 = load i8*, i8** %2, align 8
  %4 = getelementptr inbounds %"class.icu_69::MaybeStackArray", %"class.icu_69::MaybeStackArray"* %0, i64 0, i32 1
  %5 = load i32, i32* %4, align 8
  %6 = sext i32 %5 to i64
  %7 = getelementptr inbounds i8, i8* %3, i64 %6
  ret i8* %7
}

; Function Attrs: nounwind ssp uwtable
define weak_odr hidden dereferenceable(1) i8* @_ZNK6icu_6915MaybeStackArrayIcLi40EEixEl(%"class.icu_69::MaybeStackArray"*, i64) local_unnamed_addr #0 comdat align 2 {
  %3 = getelementptr inbounds %"class.icu_69::MaybeStackArray", %"class.icu_69::MaybeStackArray"* %0, i64 0, i32 0
  %4 = load i8*, i8** %3, align 8
  %5 = getelementptr inbounds i8, i8* %4, i64 %1
  ret i8* %5
}

; Function Attrs: nounwind ssp uwtable
define weak_odr hidden dereferenceable(1) i8* @_ZN6icu_6915MaybeStackArrayIcLi40EEixEl(%"class.icu_69::MaybeStackArray"*, i64) local_unnamed_addr #0 comdat align 2 {
  %3 = getelementptr inbounds %"class.icu_69::MaybeStackArray", %"class.icu_69::MaybeStackArray"* %0, i64 0, i32 0
  %4 = load i8*, i8** %3, align 8
  %5 = getelementptr inbounds i8, i8* %4, i64 %1
  ret i8* %5
}

; Function Attrs: nounwind ssp uwtable
define weak_odr hidden void @_ZN6icu_6915MaybeStackArrayIcLi40EE12aliasInsteadEPci(%"class.icu_69::MaybeStackArray"*, i8*, i32) local_unnamed_addr #0 comdat align 2 {
  %4 = icmp ne i8* %1, null
  %5 = icmp sgt i32 %2, 0
  %6 = and i1 %4, %5
  br i1 %6, label %7, label %17

7:                                                ; preds = %3
  %8 = getelementptr inbounds %"class.icu_69::MaybeStackArray", %"class.icu_69::MaybeStackArray"* %0, i64 0, i32 2
  %9 = load i8, i8* %8, align 4
  %10 = icmp eq i8 %9, 0
  br i1 %10, label %14, label %11

11:                                               ; preds = %7
  %12 = getelementptr inbounds %"class.icu_69::MaybeStackArray", %"class.icu_69::MaybeStackArray"* %0, i64 0, i32 0
  %13 = load i8*, i8** %12, align 8
  tail call void @uprv_free_69(i8* %13) #12
  br label %14

14:                                               ; preds = %7, %11
  %15 = getelementptr inbounds %"class.icu_69::MaybeStackArray", %"class.icu_69::MaybeStackArray"* %0, i64 0, i32 0
  store i8* %1, i8** %15, align 8
  %16 = getelementptr inbounds %"class.icu_69::MaybeStackArray", %"class.icu_69::MaybeStackArray"* %0, i64 0, i32 1
  store i32 %2, i32* %16, align 8
  store i8 0, i8* %8, align 4
  br label %17

17:                                               ; preds = %14, %3
  ret void
}

; Function Attrs: argmemonly nounwind
declare void @llvm.lifetime.start.p0i8(i64 immarg, i8* nocapture) #2

; Function Attrs: allocsize(0)
declare noalias i8* @uprv_malloc_69(i64) local_unnamed_addr #3

; Function Attrs: argmemonly nounwind
declare void @llvm.lifetime.end.p0i8(i64 immarg, i8* nocapture) #2

; Function Attrs: inlinehint nounwind ssp uwtable
define weak_odr hidden i8* @_ZN6icu_6915MaybeStackArrayIcLi40EE13orphanOrCloneEiRi(%"class.icu_69::MaybeStackArray"*, i32, i32* dereferenceable(4)) local_unnamed_addr #1 comdat align 2 {
  %4 = getelementptr inbounds %"class.icu_69::MaybeStackArray", %"class.icu_69::MaybeStackArray"* %0, i64 0, i32 2
  %5 = load i8, i8* %4, align 4
  %6 = icmp eq i8 %5, 0
  br i1 %6, label %10, label %7

7:                                                ; preds = %3
  %8 = getelementptr inbounds %"class.icu_69::MaybeStackArray", %"class.icu_69::MaybeStackArray"* %0, i64 0, i32 0
  %9 = load i8*, i8** %8, align 8
  br label %23

10:                                               ; preds = %3
  %11 = icmp slt i32 %1, 1
  br i1 %11, label %29, label %12

12:                                               ; preds = %10
  %13 = getelementptr inbounds %"class.icu_69::MaybeStackArray", %"class.icu_69::MaybeStackArray"* %0, i64 0, i32 1
  %14 = load i32, i32* %13, align 8
  %15 = icmp slt i32 %14, %1
  %16 = select i1 %15, i32 %14, i32 %1
  %17 = sext i32 %16 to i64
  %18 = tail call noalias i8* @uprv_malloc_69(i64 %17) #11
  %19 = icmp eq i8* %18, null
  br i1 %19, label %29, label %20

20:                                               ; preds = %12
  %21 = getelementptr inbounds %"class.icu_69::MaybeStackArray", %"class.icu_69::MaybeStackArray"* %0, i64 0, i32 0
  %22 = load i8*, i8** %21, align 8
  tail call void @llvm.memcpy.p0i8.p0i8.i64(i8* nonnull align 1 %18, i8* align 1 %22, i64 %17, i1 false)
  br label %23

23:                                               ; preds = %20, %7
  %24 = phi i32 [ %1, %7 ], [ %16, %20 ]
  %25 = phi i8* [ %9, %7 ], [ %18, %20 ]
  store i32 %24, i32* %2, align 4
  %26 = getelementptr inbounds %"class.icu_69::MaybeStackArray", %"class.icu_69::MaybeStackArray"* %0, i64 0, i32 3, i64 0
  %27 = getelementptr inbounds %"class.icu_69::MaybeStackArray", %"class.icu_69::MaybeStackArray"* %0, i64 0, i32 0
  store i8* %26, i8** %27, align 8
  %28 = getelementptr inbounds %"class.icu_69::MaybeStackArray", %"class.icu_69::MaybeStackArray"* %0, i64 0, i32 1
  store i32 40, i32* %28, align 8
  store i8 0, i8* %4, align 4
  br label %29

29:                                               ; preds = %12, %10, %23
  %30 = phi i8* [ %25, %23 ], [ null, %10 ], [ null, %12 ]
  ret i8* %30
}

; Function Attrs: nounwind ssp uwtable
define weak_odr hidden void @_ZN6icu_6915MaybeStackArrayIcLi40EE8copyFromERKS1_R10UErrorCode(%"class.icu_69::MaybeStackArray"*, %"class.icu_69::MaybeStackArray"* dereferenceable(56), i32* dereferenceable(4)) local_unnamed_addr #0 comdat align 2 {
  %4 = load i32, i32* %2, align 4
  %5 = icmp slt i32 %4, 1
  br i1 %5, label %6, label %27

6:                                                ; preds = %3
  %7 = getelementptr inbounds %"class.icu_69::MaybeStackArray", %"class.icu_69::MaybeStackArray"* %1, i64 0, i32 1
  %8 = load i32, i32* %7, align 8
  %9 = icmp sgt i32 %8, 0
  br i1 %9, label %10, label %21

10:                                               ; preds = %6
  %11 = sext i32 %8 to i64
  %12 = tail call noalias i8* @uprv_malloc_69(i64 %11) #11
  %13 = icmp eq i8* %12, null
  br i1 %13, label %21, label %14

14:                                               ; preds = %10
  %15 = getelementptr inbounds %"class.icu_69::MaybeStackArray", %"class.icu_69::MaybeStackArray"* %0, i64 0, i32 2
  %16 = load i8, i8* %15, align 4
  %17 = icmp eq i8 %16, 0
  br i1 %17, label %22, label %18

18:                                               ; preds = %14
  %19 = getelementptr inbounds %"class.icu_69::MaybeStackArray", %"class.icu_69::MaybeStackArray"* %0, i64 0, i32 0
  %20 = load i8*, i8** %19, align 8
  tail call void @uprv_free_69(i8* %20) #12
  br label %22

21:                                               ; preds = %10, %6
  store i32 7, i32* %2, align 4
  br label %27

22:                                               ; preds = %18, %14
  %23 = getelementptr inbounds %"class.icu_69::MaybeStackArray", %"class.icu_69::MaybeStackArray"* %0, i64 0, i32 0
  store i8* %12, i8** %23, align 8
  %24 = getelementptr inbounds %"class.icu_69::MaybeStackArray", %"class.icu_69::MaybeStackArray"* %0, i64 0, i32 1
  store i32 %8, i32* %24, align 8
  store i8 1, i8* %15, align 4
  %25 = getelementptr inbounds %"class.icu_69::MaybeStackArray", %"class.icu_69::MaybeStackArray"* %1, i64 0, i32 0
  %26 = load i8*, i8** %25, align 8
  tail call void @llvm.memcpy.p0i8.p0i8.i64(i8* nonnull align 1 %12, i8* align 1 %26, i64 %11, i1 false)
  br label %27

27:                                               ; preds = %3, %21, %22
  ret void
}

declare void @uprv_free_69(i8*) local_unnamed_addr #4

; Function Attrs: nounwind ssp uwtable
define hidden void @_ZN6icu_6917CollationIterator8CEBufferD2Ev(%"class.icu_69::CollationIterator::CEBuffer"* nocapture readonly) unnamed_addr #0 align 2 {
  %2 = getelementptr inbounds %"class.icu_69::CollationIterator::CEBuffer", %"class.icu_69::CollationIterator::CEBuffer"* %0, i64 0, i32 1, i32 2
  %3 = load i8, i8* %2, align 4
  %4 = icmp eq i8 %3, 0
  br i1 %4, label %9, label %5

5:                                                ; preds = %1
  %6 = getelementptr inbounds %"class.icu_69::CollationIterator::CEBuffer", %"class.icu_69::CollationIterator::CEBuffer"* %0, i64 0, i32 1
  %7 = bitcast %"class.icu_69::MaybeStackArray.0"* %6 to i8**
  %8 = load i8*, i8** %7, align 8
  tail call void @uprv_free_69(i8* %8) #12
  br label %9

9:                                                ; preds = %1, %5
  ret void
}

; Function Attrs: nounwind ssp uwtable
define hidden signext i8 @_ZN6icu_6917CollationIterator8CEBuffer20ensureAppendCapacityEiR10UErrorCode(%"class.icu_69::CollationIterator::CEBuffer"* nocapture, i32, i32* nocapture dereferenceable(4)) local_unnamed_addr #0 align 2 {
  %4 = getelementptr inbounds %"class.icu_69::CollationIterator::CEBuffer", %"class.icu_69::CollationIterator::CEBuffer"* %0, i64 0, i32 1
  %5 = getelementptr inbounds %"class.icu_69::CollationIterator::CEBuffer", %"class.icu_69::CollationIterator::CEBuffer"* %0, i64 0, i32 1, i32 1
  %6 = load i32, i32* %5, align 8
  %7 = getelementptr inbounds %"class.icu_69::CollationIterator::CEBuffer", %"class.icu_69::CollationIterator::CEBuffer"* %0, i64 0, i32 0
  %8 = load i32, i32* %7, align 8
  %9 = add nsw i32 %8, %1
  %10 = icmp sgt i32 %9, %6
  br i1 %10, label %11, label %50

11:                                               ; preds = %3
  %12 = load i32, i32* %2, align 4
  %13 = icmp slt i32 %12, 1
  br i1 %13, label %14, label %50

14:                                               ; preds = %11, %14
  %15 = phi i32 [ %18, %14 ], [ %6, %11 ]
  %16 = icmp slt i32 %15, 1000
  %17 = select i1 %16, i32 2, i32 1
  %18 = shl nsw i32 %15, %17
  %19 = icmp slt i32 %18, %9
  br i1 %19, label %14, label %20

20:                                               ; preds = %14
  %21 = icmp sgt i32 %18, 0
  br i1 %21, label %22, label %49

22:                                               ; preds = %20
  %23 = sext i32 %18 to i64
  %24 = shl nsw i64 %23, 3
  %25 = tail call noalias i8* @uprv_malloc_69(i64 %24) #11
  %26 = icmp eq i8* %25, null
  br i1 %26, label %49, label %27

27:                                               ; preds = %22
  %28 = icmp sgt i32 %8, 0
  br i1 %28, label %31, label %29

29:                                               ; preds = %27
  %30 = bitcast %"class.icu_69::MaybeStackArray.0"* %4 to i8**
  br label %41

31:                                               ; preds = %27
  %32 = load i32, i32* %5, align 8
  %33 = icmp slt i32 %32, %8
  %34 = select i1 %33, i32 %32, i32 %8
  %35 = icmp sgt i32 %34, %18
  %36 = select i1 %35, i32 %18, i32 %34
  %37 = bitcast %"class.icu_69::MaybeStackArray.0"* %4 to i8**
  %38 = load i8*, i8** %37, align 8
  %39 = sext i32 %36 to i64
  %40 = shl nsw i64 %39, 3
  tail call void @llvm.memcpy.p0i8.p0i8.i64(i8* nonnull align 8 %25, i8* align 8 %38, i64 %40, i1 false) #12
  br label %41

41:                                               ; preds = %29, %31
  %42 = phi i8** [ %30, %29 ], [ %37, %31 ]
  %43 = getelementptr inbounds %"class.icu_69::CollationIterator::CEBuffer", %"class.icu_69::CollationIterator::CEBuffer"* %0, i64 0, i32 1, i32 2
  %44 = load i8, i8* %43, align 4
  %45 = icmp eq i8 %44, 0
  br i1 %45, label %48, label %46

46:                                               ; preds = %41
  %47 = load i8*, i8** %42, align 8
  tail call void @uprv_free_69(i8* %47) #12
  br label %48

48:                                               ; preds = %46, %41
  store i8* %25, i8** %42, align 8
  store i32 %18, i32* %5, align 8
  store i8 1, i8* %43, align 4
  br label %50

49:                                               ; preds = %22, %20
  store i32 7, i32* %2, align 4
  br label %50

50:                                               ; preds = %48, %49, %11, %3
  %51 = phi i8 [ 1, %3 ], [ 0, %11 ], [ 0, %49 ], [ 1, %48 ]
  ret i8 %51
}

; Function Attrs: nounwind ssp uwtable
define hidden void @_ZN6icu_6917CollationIteratorC2ERKS0_(%"class.icu_69::CollationIterator"*, %"class.icu_69::CollationIterator"* nocapture readonly dereferenceable(392)) unnamed_addr #0 align 2 {
  %3 = getelementptr inbounds %"class.icu_69::CollationIterator", %"class.icu_69::CollationIterator"* %0, i64 0, i32 0, i32 0
  store i32 (...)** bitcast (i8** getelementptr inbounds ({ [18 x i8*] }, { [18 x i8*] }* @_ZTVN6icu_6917CollationIteratorE, i64 0, inrange i32 0, i64 2) to i32 (...)**), i32 (...)*** %3, align 8
  %4 = getelementptr inbounds %"class.icu_69::CollationIterator", %"class.icu_69::CollationIterator"* %0, i64 0, i32 1
  %5 = getelementptr inbounds %"class.icu_69::CollationIterator", %"class.icu_69::CollationIterator"* %1, i64 0, i32 1
  %6 = bitcast %struct.UTrie2** %5 to i64*
  %7 = load i64, i64* %6, align 8
  %8 = bitcast %struct.UTrie2** %4 to i64*
  store i64 %7, i64* %8, align 8
  %9 = getelementptr inbounds %"class.icu_69::CollationIterator", %"class.icu_69::CollationIterator"* %0, i64 0, i32 2
  %10 = getelementptr inbounds %"class.icu_69::CollationIterator", %"class.icu_69::CollationIterator"* %1, i64 0, i32 2
  %11 = bitcast %"struct.icu_69::CollationData"** %10 to i64*
  %12 = load i64, i64* %11, align 8
  %13 = bitcast %"struct.icu_69::CollationData"** %9 to i64*
  store i64 %12, i64* %13, align 8
  %14 = getelementptr inbounds %"class.icu_69::CollationIterator", %"class.icu_69::CollationIterator"* %0, i64 0, i32 3, i32 0
  store i32 0, i32* %14, align 8
  %15 = getelementptr inbounds %"class.icu_69::CollationIterator", %"class.icu_69::CollationIterator"* %0, i64 0, i32 3, i32 1, i32 0
  %16 = getelementptr inbounds %"class.icu_69::CollationIterator", %"class.icu_69::CollationIterator"* %0, i64 0, i32 3, i32 1, i32 3, i64 0
  store i64* %16, i64** %15, align 8
  %17 = getelementptr inbounds %"class.icu_69::CollationIterator", %"class.icu_69::CollationIterator"* %0, i64 0, i32 3, i32 1, i32 1
  store i32 40, i32* %17, align 8
  %18 = getelementptr inbounds %"class.icu_69::CollationIterator", %"class.icu_69::CollationIterator"* %0, i64 0, i32 3, i32 1, i32 2
  store i8 0, i8* %18, align 4
  %19 = getelementptr inbounds %"class.icu_69::CollationIterator", %"class.icu_69::CollationIterator"* %0, i64 0, i32 4
  %20 = getelementptr inbounds %"class.icu_69::CollationIterator", %"class.icu_69::CollationIterator"* %1, i64 0, i32 4
  %21 = load i32, i32* %20, align 8
  store i32 %21, i32* %19, align 8
  %22 = getelementptr inbounds %"class.icu_69::CollationIterator", %"class.icu_69::CollationIterator"* %0, i64 0, i32 6
  store %"class.icu_69::SkippedState"* null, %"class.icu_69::SkippedState"** %22, align 8
  %23 = getelementptr inbounds %"class.icu_69::CollationIterator", %"class.icu_69::CollationIterator"* %0, i64 0, i32 7
  %24 = getelementptr inbounds %"class.icu_69::CollationIterator", %"class.icu_69::CollationIterator"* %1, i64 0, i32 7
  %25 = load i32, i32* %24, align 8
  store i32 %25, i32* %23, align 8
  %26 = getelementptr inbounds %"class.icu_69::CollationIterator", %"class.icu_69::CollationIterator"* %0, i64 0, i32 8
  %27 = getelementptr inbounds %"class.icu_69::CollationIterator", %"class.icu_69::CollationIterator"* %1, i64 0, i32 8
  %28 = load i8, i8* %27, align 4
  store i8 %28, i8* %26, align 4
  %29 = getelementptr inbounds %"class.icu_69::CollationIterator", %"class.icu_69::CollationIterator"* %1, i64 0, i32 3, i32 0
  %30 = load i32, i32* %29, align 8
  %31 = icmp sgt i32 %30, 0
  br i1 %31, label %32, label %114

32:                                               ; preds = %2
  %33 = getelementptr inbounds %"class.icu_69::CollationIterator", %"class.icu_69::CollationIterator"* %0, i64 0, i32 3, i32 1
  %34 = icmp sgt i32 %30, 40
  br i1 %34, label %35, label %56

35:                                               ; preds = %32, %35
  %36 = phi i32 [ %39, %35 ], [ 40, %32 ]
  %37 = icmp slt i32 %36, 1000
  %38 = select i1 %37, i32 2, i32 1
  %39 = shl nsw i32 %36, %38
  %40 = icmp slt i32 %39, %30
  br i1 %40, label %35, label %41

41:                                               ; preds = %35
  %42 = icmp sgt i32 %39, 0
  br i1 %42, label %43, label %114

43:                                               ; preds = %41
  %44 = sext i32 %39 to i64
  %45 = shl nsw i64 %44, 3
  %46 = tail call noalias i8* @uprv_malloc_69(i64 %45) #11
  %47 = icmp eq i8* %46, null
  br i1 %47, label %114, label %48

48:                                               ; preds = %43
  %49 = bitcast %"class.icu_69::MaybeStackArray.0"* %33 to i8**
  %50 = load i8, i8* %18, align 4
  %51 = icmp eq i8 %50, 0
  br i1 %51, label %54, label %52

52:                                               ; preds = %48
  %53 = load i8*, i8** %49, align 8
  tail call void @uprv_free_69(i8* %53) #12
  br label %54

54:                                               ; preds = %52, %48
  store i8* %46, i8** %49, align 8
  store i32 %39, i32* %17, align 8
  store i8 1, i8* %18, align 4
  %55 = bitcast i8* %46 to i64*
  br label %56

56:                                               ; preds = %54, %32
  %57 = phi i64* [ %16, %32 ], [ %55, %54 ]
  %58 = getelementptr inbounds %"class.icu_69::CollationIterator", %"class.icu_69::CollationIterator"* %1, i64 0, i32 3, i32 1, i32 0
  %59 = zext i32 %30 to i64
  %60 = load i64*, i64** %58, align 8
  %61 = load i64, i64* %60, align 8
  store i64 %61, i64* %57, align 8
  %62 = icmp eq i32 %30, 1
  br i1 %62, label %84, label %63

63:                                               ; preds = %56
  %64 = add nsw i64 %59, -1
  %65 = add nsw i64 %59, -2
  %66 = and i64 %64, 3
  %67 = icmp ult i64 %65, 3
  br i1 %67, label %70, label %68

68:                                               ; preds = %63
  %69 = sub nsw i64 %64, %66
  br label %85

70:                                               ; preds = %85, %63
  %71 = phi i64 [ 1, %63 ], [ %111, %85 ]
  %72 = icmp eq i64 %66, 0
  br i1 %72, label %84, label %73

73:                                               ; preds = %70, %73
  %74 = phi i64 [ %81, %73 ], [ %71, %70 ]
  %75 = phi i64 [ %82, %73 ], [ %66, %70 ]
  %76 = load i64*, i64** %15, align 8
  %77 = load i64*, i64** %58, align 8
  %78 = getelementptr inbounds i64, i64* %77, i64 %74
  %79 = load i64, i64* %78, align 8
  %80 = getelementptr inbounds i64, i64* %76, i64 %74
  store i64 %79, i64* %80, align 8
  %81 = add nuw nsw i64 %74, 1
  %82 = add i64 %75, -1
  %83 = icmp eq i64 %82, 0
  br i1 %83, label %84, label %73, !llvm.loop !2

84:                                               ; preds = %70, %73, %56
  store i32 %30, i32* %14, align 8
  br label %115

85:                                               ; preds = %85, %68
  %86 = phi i64 [ 1, %68 ], [ %111, %85 ]
  %87 = phi i64 [ %69, %68 ], [ %112, %85 ]
  %88 = load i64*, i64** %15, align 8
  %89 = load i64*, i64** %58, align 8
  %90 = getelementptr inbounds i64, i64* %89, i64 %86
  %91 = load i64, i64* %90, align 8
  %92 = getelementptr inbounds i64, i64* %88, i64 %86
  store i64 %91, i64* %92, align 8
  %93 = add nuw nsw i64 %86, 1
  %94 = load i64*, i64** %15, align 8
  %95 = load i64*, i64** %58, align 8
  %96 = getelementptr inbounds i64, i64* %95, i64 %93
  %97 = load i64, i64* %96, align 8
  %98 = getelementptr inbounds i64, i64* %94, i64 %93
  store i64 %97, i64* %98, align 8
  %99 = add nuw nsw i64 %86, 2
  %100 = load i64*, i64** %15, align 8
  %101 = load i64*, i64** %58, align 8
  %102 = getelementptr inbounds i64, i64* %101, i64 %99
  %103 = load i64, i64* %102, align 8
  %104 = getelementptr inbounds i64, i64* %100, i64 %99
  store i64 %103, i64* %104, align 8
  %105 = add nuw nsw i64 %86, 3
  %106 = load i64*, i64** %15, align 8
  %107 = load i64*, i64** %58, align 8
  %108 = getelementptr inbounds i64, i64* %107, i64 %105
  %109 = load i64, i64* %108, align 8
  %110 = getelementptr inbounds i64, i64* %106, i64 %105
  store i64 %109, i64* %110, align 8
  %111 = add nuw nsw i64 %86, 4
  %112 = add i64 %87, -4
  %113 = icmp eq i64 %112, 0
  br i1 %113, label %70, label %85

114:                                              ; preds = %41, %43, %2
  store i32 0, i32* %19, align 8
  br label %115

115:                                              ; preds = %114, %84
  ret void
}

; Function Attrs: nounwind ssp uwtable
define hidden void @_ZN6icu_6917CollationIteratorD2Ev(%"class.icu_69::CollationIterator"*) unnamed_addr #0 align 2 {
  %2 = getelementptr inbounds %"class.icu_69::CollationIterator", %"class.icu_69::CollationIterator"* %0, i64 0, i32 0, i32 0
  store i32 (...)** bitcast (i8** getelementptr inbounds ({ [18 x i8*] }, { [18 x i8*] }* @_ZTVN6icu_6917CollationIteratorE, i64 0, inrange i32 0, i64 2) to i32 (...)**), i32 (...)*** %2, align 8
  %3 = getelementptr inbounds %"class.icu_69::CollationIterator", %"class.icu_69::CollationIterator"* %0, i64 0, i32 6
  %4 = load %"class.icu_69::SkippedState"*, %"class.icu_69::SkippedState"** %3, align 8
  %5 = icmp eq %"class.icu_69::SkippedState"* %4, null
  br i1 %5, label %10, label %6

6:                                                ; preds = %1
  %7 = getelementptr inbounds %"class.icu_69::SkippedState", %"class.icu_69::SkippedState"* %4, i64 0, i32 2
  tail call void @_ZN6icu_6913UnicodeStringD1Ev(%"class.icu_69::UnicodeString"* %7) #12
  %8 = getelementptr inbounds %"class.icu_69::SkippedState", %"class.icu_69::SkippedState"* %4, i64 0, i32 1
  tail call void @_ZN6icu_6913UnicodeStringD1Ev(%"class.icu_69::UnicodeString"* %8) #12
  %9 = getelementptr inbounds %"class.icu_69::SkippedState", %"class.icu_69::SkippedState"* %4, i64 0, i32 0, i64 0
  tail call void @_ZN6icu_697UMemorydlEPv(i8* %9) #12
  br label %10

10:                                               ; preds = %6, %1
  %11 = getelementptr inbounds %"class.icu_69::CollationIterator", %"class.icu_69::CollationIterator"* %0, i64 0, i32 3, i32 1, i32 2
  %12 = load i8, i8* %11, align 4
  %13 = icmp eq i8 %12, 0
  br i1 %13, label %18, label %14

14:                                               ; preds = %10
  %15 = getelementptr inbounds %"class.icu_69::CollationIterator", %"class.icu_69::CollationIterator"* %0, i64 0, i32 3, i32 1
  %16 = bitcast %"class.icu_69::MaybeStackArray.0"* %15 to i8**
  %17 = load i8*, i8** %16, align 8
  tail call void @uprv_free_69(i8* %17) #12
  br label %18

18:                                               ; preds = %10, %14
  %19 = getelementptr inbounds %"class.icu_69::CollationIterator", %"class.icu_69::CollationIterator"* %0, i64 0, i32 0
  tail call void @_ZN6icu_697UObjectD2Ev(%"class.icu_69::UObject"* %19) #12
  ret void
}

; Function Attrs: nounwind
declare void @_ZN6icu_697UMemorydlEPv(i8*) local_unnamed_addr #5

; Function Attrs: nounwind
declare void @_ZN6icu_697UObjectD2Ev(%"class.icu_69::UObject"*) unnamed_addr #5

; Function Attrs: noreturn nounwind ssp uwtable
define hidden void @_ZN6icu_6917CollationIteratorD0Ev(%"class.icu_69::CollationIterator"* nocapture readnone) unnamed_addr #6 align 2 {
  tail call void @llvm.trap() #13
  unreachable
}

; Function Attrs: cold noreturn nounwind
declare void @llvm.trap() #7

; Function Attrs: nounwind ssp uwtable
define hidden signext i8 @_ZNK6icu_6917CollationIteratoreqERKS0_(%"class.icu_69::CollationIterator"* readonly, %"class.icu_69::CollationIterator"* nocapture readonly dereferenceable(392)) unnamed_addr #0 align 2 {
  %3 = icmp eq %"class.icu_69::CollationIterator"* %0, null
  br i1 %3, label %4, label %5

4:                                                ; preds = %2
  tail call void @__cxa_bad_typeid() #13
  unreachable

5:                                                ; preds = %2
  %6 = bitcast %"class.icu_69::CollationIterator"* %0 to %"class.std::type_info"***
  %7 = load %"class.std::type_info"**, %"class.std::type_info"*** %6, align 8
  %8 = getelementptr inbounds %"class.std::type_info"*, %"class.std::type_info"** %7, i64 -1
  %9 = load %"class.std::type_info"*, %"class.std::type_info"** %8, align 8
  %10 = bitcast %"class.icu_69::CollationIterator"* %1 to %"class.std::type_info"***
  %11 = load %"class.std::type_info"**, %"class.std::type_info"*** %10, align 8
  %12 = getelementptr inbounds %"class.std::type_info"*, %"class.std::type_info"** %11, i64 -1
  %13 = load %"class.std::type_info"*, %"class.std::type_info"** %12, align 8
  %14 = getelementptr inbounds %"class.std::type_info", %"class.std::type_info"* %9, i64 0, i32 1
  %15 = load i8*, i8** %14, align 8
  %16 = getelementptr inbounds %"class.std::type_info", %"class.std::type_info"* %13, i64 0, i32 1
  %17 = load i8*, i8** %16, align 8
  %18 = icmp eq i8* %15, %17
  br i1 %18, label %19, label %61

19:                                               ; preds = %5
  %20 = getelementptr inbounds %"class.icu_69::CollationIterator", %"class.icu_69::CollationIterator"* %0, i64 0, i32 3, i32 0
  %21 = load i32, i32* %20, align 8
  %22 = getelementptr inbounds %"class.icu_69::CollationIterator", %"class.icu_69::CollationIterator"* %1, i64 0, i32 3, i32 0
  %23 = load i32, i32* %22, align 8
  %24 = icmp eq i32 %21, %23
  br i1 %24, label %25, label %61

25:                                               ; preds = %19
  %26 = getelementptr inbounds %"class.icu_69::CollationIterator", %"class.icu_69::CollationIterator"* %0, i64 0, i32 4
  %27 = load i32, i32* %26, align 8
  %28 = getelementptr inbounds %"class.icu_69::CollationIterator", %"class.icu_69::CollationIterator"* %1, i64 0, i32 4
  %29 = load i32, i32* %28, align 8
  %30 = icmp eq i32 %27, %29
  br i1 %30, label %31, label %61

31:                                               ; preds = %25
  %32 = getelementptr inbounds %"class.icu_69::CollationIterator", %"class.icu_69::CollationIterator"* %0, i64 0, i32 7
  %33 = load i32, i32* %32, align 8
  %34 = getelementptr inbounds %"class.icu_69::CollationIterator", %"class.icu_69::CollationIterator"* %1, i64 0, i32 7
  %35 = load i32, i32* %34, align 8
  %36 = icmp eq i32 %33, %35
  br i1 %36, label %37, label %61

37:                                               ; preds = %31
  %38 = getelementptr inbounds %"class.icu_69::CollationIterator", %"class.icu_69::CollationIterator"* %0, i64 0, i32 8
  %39 = load i8, i8* %38, align 4
  %40 = getelementptr inbounds %"class.icu_69::CollationIterator", %"class.icu_69::CollationIterator"* %1, i64 0, i32 8
  %41 = load i8, i8* %40, align 4
  %42 = icmp eq i8 %39, %41
  br i1 %42, label %43, label %61

43:                                               ; preds = %37
  %44 = icmp sgt i32 %21, 0
  br i1 %44, label %45, label %61

45:                                               ; preds = %43
  %46 = getelementptr inbounds %"class.icu_69::CollationIterator", %"class.icu_69::CollationIterator"* %0, i64 0, i32 3, i32 1, i32 0
  %47 = load i64*, i64** %46, align 8
  %48 = getelementptr inbounds %"class.icu_69::CollationIterator", %"class.icu_69::CollationIterator"* %1, i64 0, i32 3, i32 1, i32 0
  %49 = load i64*, i64** %48, align 8
  %50 = zext i32 %21 to i64
  br label %53

51:                                               ; preds = %53
  %52 = icmp eq i64 %60, %50
  br i1 %52, label %61, label %53

53:                                               ; preds = %51, %45
  %54 = phi i64 [ 0, %45 ], [ %60, %51 ]
  %55 = getelementptr inbounds i64, i64* %47, i64 %54
  %56 = load i64, i64* %55, align 8
  %57 = getelementptr inbounds i64, i64* %49, i64 %54
  %58 = load i64, i64* %57, align 8
  %59 = icmp eq i64 %56, %58
  %60 = add nuw nsw i64 %54, 1
  br i1 %59, label %51, label %61

61:                                               ; preds = %53, %51, %43, %37, %31, %25, %19, %5
  %62 = phi i8 [ 0, %5 ], [ 0, %19 ], [ 0, %25 ], [ 0, %31 ], [ 0, %37 ], [ 1, %43 ], [ 0, %53 ], [ 1, %51 ]
  ret i8 %62
}

declare void @__cxa_bad_typeid() local_unnamed_addr

; Function Attrs: nofree norecurse nounwind ssp uwtable
define hidden void @_ZN6icu_6917CollationIterator5resetEv(%"class.icu_69::CollationIterator"* nocapture) local_unnamed_addr #8 align 2 {
  %2 = getelementptr inbounds %"class.icu_69::CollationIterator", %"class.icu_69::CollationIterator"* %0, i64 0, i32 3, i32 0
  store i32 0, i32* %2, align 8
  %3 = getelementptr inbounds %"class.icu_69::CollationIterator", %"class.icu_69::CollationIterator"* %0, i64 0, i32 4
  store i32 0, i32* %3, align 8
  %4 = getelementptr inbounds %"class.icu_69::CollationIterator", %"class.icu_69::CollationIterator"* %0, i64 0, i32 6
  %5 = load %"class.icu_69::SkippedState"*, %"class.icu_69::SkippedState"** %4, align 8
  %6 = icmp eq %"class.icu_69::SkippedState"* %5, null
  br i1 %6, label %15, label %7

7:                                                ; preds = %1
  %8 = getelementptr inbounds %"class.icu_69::SkippedState", %"class.icu_69::SkippedState"* %5, i64 0, i32 1, i32 1, i32 0, i32 0
  %9 = load i16, i16* %8, align 8
  %10 = and i16 %9, 1
  %11 = icmp eq i16 %10, 0
  %12 = and i16 %9, 31
  %13 = select i1 %11, i16 %12, i16 2
  store i16 %13, i16* %8, align 8
  %14 = getelementptr inbounds %"class.icu_69::SkippedState", %"class.icu_69::SkippedState"* %5, i64 0, i32 3
  store i32 0, i32* %14, align 8
  br label %15

15:                                               ; preds = %1, %7
  ret void
}

; Function Attrs: nounwind ssp uwtable
define hidden i32 @_ZN6icu_6917CollationIterator8fetchCEsER10UErrorCode(%"class.icu_69::CollationIterator"*, i32* dereferenceable(4)) local_unnamed_addr #0 align 2 {
  %3 = load i32, i32* %1, align 4
  %4 = icmp sgt i32 %3, 0
  %5 = getelementptr inbounds %"class.icu_69::CollationIterator", %"class.icu_69::CollationIterator"* %0, i64 0, i32 3, i32 0
  br i1 %4, label %6, label %8

6:                                                ; preds = %2
  %7 = load i32, i32* %5, align 8
  br label %17

8:                                                ; preds = %2
  %9 = getelementptr inbounds %"class.icu_69::CollationIterator", %"class.icu_69::CollationIterator"* %0, i64 0, i32 4
  br label %10

10:                                               ; preds = %8, %14
  %11 = tail call i64 @_ZN6icu_6917CollationIterator6nextCEER10UErrorCode(%"class.icu_69::CollationIterator"* %0, i32* dereferenceable(4) %1)
  %12 = icmp eq i64 %11, 4311744768
  %13 = load i32, i32* %5, align 8
  br i1 %12, label %17, label %14

14:                                               ; preds = %10
  store i32 %13, i32* %9, align 8
  %15 = load i32, i32* %1, align 4
  %16 = icmp sgt i32 %15, 0
  br i1 %16, label %17, label %10

17:                                               ; preds = %10, %14, %6
  %18 = phi i32 [ %7, %6 ], [ %13, %14 ], [ %13, %10 ]
  ret i32 %18
}

; Function Attrs: inlinehint nounwind ssp uwtable
define linkonce_odr hidden i64 @_ZN6icu_6917CollationIterator6nextCEER10UErrorCode(%"class.icu_69::CollationIterator"*, i32* dereferenceable(4)) local_unnamed_addr #1 comdat align 2 {
  %3 = alloca i32, align 4
  %4 = getelementptr inbounds %"class.icu_69::CollationIterator", %"class.icu_69::CollationIterator"* %0, i64 0, i32 4
  %5 = load i32, i32* %4, align 8
  %6 = getelementptr inbounds %"class.icu_69::CollationIterator", %"class.icu_69::CollationIterator"* %0, i64 0, i32 3, i32 0
  %7 = load i32, i32* %6, align 8
  %8 = icmp slt i32 %5, %7
  br i1 %8, label %9, label %16

9:                                                ; preds = %2
  %10 = add nsw i32 %5, 1
  store i32 %10, i32* %4, align 8
  %11 = sext i32 %5 to i64
  %12 = getelementptr inbounds %"class.icu_69::CollationIterator", %"class.icu_69::CollationIterator"* %0, i64 0, i32 3, i32 1, i32 0
  %13 = load i64*, i64** %12, align 8
  %14 = getelementptr inbounds i64, i64* %13, i64 %11
  %15 = load i64, i64* %14, align 8
  br label %227

16:                                               ; preds = %2
  %17 = icmp slt i32 %7, 40
  br i1 %17, label %63, label %18

18:                                               ; preds = %16
  %19 = getelementptr inbounds %"class.icu_69::CollationIterator", %"class.icu_69::CollationIterator"* %0, i64 0, i32 3, i32 1
  %20 = getelementptr inbounds %"class.icu_69::CollationIterator", %"class.icu_69::CollationIterator"* %0, i64 0, i32 3, i32 1, i32 1
  %21 = load i32, i32* %20, align 8
  %22 = icmp slt i32 %7, %21
  br i1 %22, label %63, label %23

23:                                               ; preds = %18
  %24 = load i32, i32* %1, align 4
  %25 = icmp slt i32 %24, 1
  br i1 %25, label %26, label %227

26:                                               ; preds = %23, %26
  %27 = phi i32 [ %30, %26 ], [ %21, %23 ]
  %28 = icmp slt i32 %27, 1000
  %29 = select i1 %28, i32 2, i32 1
  %30 = shl nsw i32 %27, %29
  %31 = icmp sgt i32 %30, %7
  br i1 %31, label %32, label %26

32:                                               ; preds = %26
  %33 = icmp sgt i32 %30, 0
  br i1 %33, label %34, label %62

34:                                               ; preds = %32
  %35 = sext i32 %30 to i64
  %36 = shl nsw i64 %35, 3
  %37 = tail call noalias i8* @uprv_malloc_69(i64 %36) #11
  %38 = icmp eq i8* %37, null
  br i1 %38, label %62, label %39

39:                                               ; preds = %34
  %40 = icmp sgt i32 %7, 0
  br i1 %40, label %43, label %41

41:                                               ; preds = %39
  %42 = bitcast %"class.icu_69::MaybeStackArray.0"* %19 to i8**
  br label %53

43:                                               ; preds = %39
  %44 = load i32, i32* %20, align 8
  %45 = icmp slt i32 %44, %7
  %46 = select i1 %45, i32 %44, i32 %7
  %47 = icmp sgt i32 %46, %30
  %48 = select i1 %47, i32 %30, i32 %46
  %49 = bitcast %"class.icu_69::MaybeStackArray.0"* %19 to i8**
  %50 = load i8*, i8** %49, align 8
  %51 = sext i32 %48 to i64
  %52 = shl nsw i64 %51, 3
  tail call void @llvm.memcpy.p0i8.p0i8.i64(i8* nonnull align 8 %37, i8* align 8 %50, i64 %52, i1 false) #12
  br label %53

53:                                               ; preds = %43, %41
  %54 = phi i8** [ %42, %41 ], [ %49, %43 ]
  %55 = getelementptr inbounds %"class.icu_69::CollationIterator", %"class.icu_69::CollationIterator"* %0, i64 0, i32 3, i32 1, i32 2
  %56 = load i8, i8* %55, align 4
  %57 = icmp eq i8 %56, 0
  br i1 %57, label %60, label %58

58:                                               ; preds = %53
  %59 = load i8*, i8** %54, align 8
  tail call void @uprv_free_69(i8* %59) #12
  br label %60

60:                                               ; preds = %58, %53
  store i8* %37, i8** %54, align 8
  store i32 %30, i32* %20, align 8
  store i8 1, i8* %55, align 4
  %61 = load i32, i32* %6, align 8
  br label %63

62:                                               ; preds = %34, %32
  store i32 7, i32* %1, align 4
  br label %227

63:                                               ; preds = %60, %18, %16
  %64 = phi i32 [ %7, %18 ], [ %61, %60 ], [ %7, %16 ]
  %65 = add nsw i32 %64, 1
  store i32 %65, i32* %6, align 8
  %66 = bitcast i32* %3 to i8*
  call void @llvm.lifetime.start.p0i8(i64 4, i8* nonnull %66) #12
  store i32 -1431655766, i32* %3, align 4
  %67 = bitcast %"class.icu_69::CollationIterator"* %0 to i32 (%"class.icu_69::CollationIterator"*, i32*, i32*)***
  %68 = load i32 (%"class.icu_69::CollationIterator"*, i32*, i32*)**, i32 (%"class.icu_69::CollationIterator"*, i32*, i32*)*** %67, align 8
  %69 = getelementptr inbounds i32 (%"class.icu_69::CollationIterator"*, i32*, i32*)*, i32 (%"class.icu_69::CollationIterator"*, i32*, i32*)** %68, i64 8
  %70 = load i32 (%"class.icu_69::CollationIterator"*, i32*, i32*)*, i32 (%"class.icu_69::CollationIterator"*, i32*, i32*)** %69, align 8
  %71 = call i32 %70(%"class.icu_69::CollationIterator"* %0, i32* nonnull dereferenceable(4) %3, i32* dereferenceable(4) %1) #12
  %72 = and i32 %71, 255
  %73 = icmp ult i32 %72, 192
  br i1 %73, label %74, label %91

74:                                               ; preds = %63
  %75 = load i32, i32* %4, align 8
  %76 = add nsw i32 %75, 1
  store i32 %76, i32* %4, align 8
  %77 = and i32 %71, -65536
  %78 = zext i32 %77 to i64
  %79 = shl nuw i64 %78, 32
  %80 = shl i32 %71, 16
  %81 = and i32 %80, -16777216
  %82 = zext i32 %81 to i64
  %83 = or i64 %79, %82
  %84 = shl nuw nsw i32 %72, 8
  %85 = zext i32 %84 to i64
  %86 = or i64 %83, %85
  %87 = sext i32 %75 to i64
  %88 = getelementptr inbounds %"class.icu_69::CollationIterator", %"class.icu_69::CollationIterator"* %0, i64 0, i32 3, i32 1, i32 0
  %89 = load i64*, i64** %88, align 8
  %90 = getelementptr inbounds i64, i64* %89, i64 %87
  store i64 %86, i64* %90, align 8
  br label %225

91:                                               ; preds = %63
  %92 = icmp eq i32 %72, 192
  br i1 %92, label %93, label %192

93:                                               ; preds = %91
  %94 = load i32, i32* %3, align 4
  %95 = icmp slt i32 %94, 0
  br i1 %95, label %96, label %103

96:                                               ; preds = %93
  %97 = load i32, i32* %4, align 8
  %98 = add nsw i32 %97, 1
  store i32 %98, i32* %4, align 8
  %99 = sext i32 %97 to i64
  %100 = getelementptr inbounds %"class.icu_69::CollationIterator", %"class.icu_69::CollationIterator"* %0, i64 0, i32 3, i32 1, i32 0
  %101 = load i64*, i64** %100, align 8
  %102 = getelementptr inbounds i64, i64* %101, i64 %99
  store i64 4311744768, i64* %102, align 8
  br label %225

103:                                              ; preds = %93
  %104 = getelementptr inbounds %"class.icu_69::CollationIterator", %"class.icu_69::CollationIterator"* %0, i64 0, i32 2
  %105 = load %"struct.icu_69::CollationData"*, %"struct.icu_69::CollationData"** %104, align 8
  %106 = getelementptr inbounds %"struct.icu_69::CollationData", %"struct.icu_69::CollationData"* %105, i64 0, i32 4
  %107 = load %"struct.icu_69::CollationData"*, %"struct.icu_69::CollationData"** %106, align 8
  %108 = getelementptr inbounds %"struct.icu_69::CollationData", %"struct.icu_69::CollationData"* %107, i64 0, i32 0
  %109 = load %struct.UTrie2*, %struct.UTrie2** %108, align 8
  %110 = getelementptr inbounds %struct.UTrie2, %struct.UTrie2* %109, i64 0, i32 2
  %111 = load i32*, i32** %110, align 8
  %112 = icmp ult i32 %94, 55296
  br i1 %112, label %113, label %124

113:                                              ; preds = %103
  %114 = getelementptr inbounds %struct.UTrie2, %struct.UTrie2* %109, i64 0, i32 0
  %115 = load i16*, i16** %114, align 8
  %116 = lshr i32 %94, 5
  %117 = zext i32 %116 to i64
  %118 = getelementptr inbounds i16, i16* %115, i64 %117
  %119 = load i16, i16* %118, align 2
  %120 = zext i16 %119 to i32
  %121 = shl nuw nsw i32 %120, 2
  %122 = and i32 %94, 31
  %123 = add nuw nsw i32 %121, %122
  br label %168

124:                                              ; preds = %103
  %125 = icmp ult i32 %94, 65536
  br i1 %125, label %126, label %140

126:                                              ; preds = %124
  %127 = getelementptr inbounds %struct.UTrie2, %struct.UTrie2* %109, i64 0, i32 0
  %128 = load i16*, i16** %127, align 8
  %129 = icmp slt i32 %94, 56320
  %130 = select i1 %129, i32 320, i32 0
  %131 = lshr i32 %94, 5
  %132 = add nuw nsw i32 %130, %131
  %133 = zext i32 %132 to i64
  %134 = getelementptr inbounds i16, i16* %128, i64 %133
  %135 = load i16, i16* %134, align 2
  %136 = zext i16 %135 to i32
  %137 = shl nuw nsw i32 %136, 2
  %138 = and i32 %94, 31
  %139 = add nuw nsw i32 %137, %138
  br label %168

140:                                              ; preds = %124
  %141 = icmp ugt i32 %94, 1114111
  br i1 %141, label %168, label %142

142:                                              ; preds = %140
  %143 = getelementptr inbounds %struct.UTrie2, %struct.UTrie2* %109, i64 0, i32 9
  %144 = load i32, i32* %143, align 4
  %145 = icmp sgt i32 %144, %94
  br i1 %145, label %149, label %146

146:                                              ; preds = %142
  %147 = getelementptr inbounds %struct.UTrie2, %struct.UTrie2* %109, i64 0, i32 10
  %148 = load i32, i32* %147, align 8
  br label %168

149:                                              ; preds = %142
  %150 = getelementptr inbounds %struct.UTrie2, %struct.UTrie2* %109, i64 0, i32 0
  %151 = load i16*, i16** %150, align 8
  %152 = lshr i32 %94, 11
  %153 = add nuw nsw i32 %152, 2080
  %154 = zext i32 %153 to i64
  %155 = getelementptr inbounds i16, i16* %151, i64 %154
  %156 = load i16, i16* %155, align 2
  %157 = zext i16 %156 to i32
  %158 = lshr i32 %94, 5
  %159 = and i32 %158, 63
  %160 = add nuw nsw i32 %159, %157
  %161 = zext i32 %160 to i64
  %162 = getelementptr inbounds i16, i16* %151, i64 %161
  %163 = load i16, i16* %162, align 2
  %164 = zext i16 %163 to i32
  %165 = shl nuw nsw i32 %164, 2
  %166 = and i32 %94, 31
  %167 = add nuw nsw i32 %165, %166
  br label %168

168:                                              ; preds = %113, %126, %140, %146, %149
  %169 = phi i32 [ %123, %113 ], [ %139, %126 ], [ 128, %140 ], [ %148, %146 ], [ %167, %149 ]
  %170 = sext i32 %169 to i64
  %171 = getelementptr inbounds i32, i32* %111, i64 %170
  %172 = load i32, i32* %171, align 4
  %173 = and i32 %172, 255
  %174 = icmp ult i32 %173, 192
  br i1 %174, label %175, label %195

175:                                              ; preds = %168
  %176 = load i32, i32* %4, align 8
  %177 = add nsw i32 %176, 1
  store i32 %177, i32* %4, align 8
  %178 = and i32 %172, -65536
  %179 = zext i32 %178 to i64
  %180 = shl nuw i64 %179, 32
  %181 = shl i32 %172, 16
  %182 = and i32 %181, -16777216
  %183 = zext i32 %182 to i64
  %184 = or i64 %180, %183
  %185 = shl nuw nsw i32 %173, 8
  %186 = zext i32 %185 to i64
  %187 = or i64 %184, %186
  %188 = sext i32 %176 to i64
  %189 = getelementptr inbounds %"class.icu_69::CollationIterator", %"class.icu_69::CollationIterator"* %0, i64 0, i32 3, i32 1, i32 0
  %190 = load i64*, i64** %189, align 8
  %191 = getelementptr inbounds i64, i64* %190, i64 %188
  store i64 %187, i64* %191, align 8
  br label %225

192:                                              ; preds = %91
  %193 = getelementptr inbounds %"class.icu_69::CollationIterator", %"class.icu_69::CollationIterator"* %0, i64 0, i32 2
  %194 = load %"struct.icu_69::CollationData"*, %"struct.icu_69::CollationData"** %193, align 8
  br label %195

195:                                              ; preds = %168, %192
  %196 = phi i32 [ %172, %168 ], [ %71, %192 ]
  %197 = phi i32 [ %173, %168 ], [ %72, %192 ]
  %198 = phi %"struct.icu_69::CollationData"* [ %107, %168 ], [ %194, %192 ]
  %199 = icmp eq i32 %197, 193
  br i1 %199, label %200, label %211

200:                                              ; preds = %195
  %201 = load i32, i32* %4, align 8
  %202 = add nsw i32 %201, 1
  store i32 %202, i32* %4, align 8
  %203 = add i32 %196, -193
  %204 = zext i32 %203 to i64
  %205 = shl nuw i64 %204, 32
  %206 = or i64 %205, 83887360
  %207 = sext i32 %201 to i64
  %208 = getelementptr inbounds %"class.icu_69::CollationIterator", %"class.icu_69::CollationIterator"* %0, i64 0, i32 3, i32 1, i32 0
  %209 = load i64*, i64** %208, align 8
  %210 = getelementptr inbounds i64, i64* %209, i64 %207
  store i64 %206, i64* %210, align 8
  br label %225

211:                                              ; preds = %195
  %212 = load i32, i32* %3, align 4
  %213 = load i32, i32* %6, align 8
  %214 = add nsw i32 %213, -1
  store i32 %214, i32* %6, align 8
  call void @_ZN6icu_6917CollationIterator17appendCEsFromCE32EPKNS_13CollationDataEijaR10UErrorCode(%"class.icu_69::CollationIterator"* %0, %"struct.icu_69::CollationData"* %198, i32 %212, i32 %196, i8 signext 1, i32* dereferenceable(4) %1) #12
  %215 = load i32, i32* %1, align 4
  %216 = icmp sgt i32 %215, 0
  br i1 %216, label %225, label %217

217:                                              ; preds = %211
  %218 = load i32, i32* %4, align 8
  %219 = add nsw i32 %218, 1
  store i32 %219, i32* %4, align 8
  %220 = sext i32 %218 to i64
  %221 = getelementptr inbounds %"class.icu_69::CollationIterator", %"class.icu_69::CollationIterator"* %0, i64 0, i32 3, i32 1, i32 0
  %222 = load i64*, i64** %221, align 8
  %223 = getelementptr inbounds i64, i64* %222, i64 %220
  %224 = load i64, i64* %223, align 8
  br label %225

225:                                              ; preds = %217, %211, %96, %175, %200, %74
  %226 = phi i64 [ %86, %74 ], [ 4311744768, %96 ], [ %187, %175 ], [ %206, %200 ], [ %224, %217 ], [ 1, %211 ]
  call void @llvm.lifetime.end.p0i8(i64 4, i8* nonnull %66) #12
  br label %227

227:                                              ; preds = %62, %23, %225, %9
  %228 = phi i64 [ %15, %9 ], [ %226, %225 ], [ 4311744768, %23 ], [ 4311744768, %62 ]
  ret i64 %228
}

; Function Attrs: nounwind ssp uwtable
define hidden i32 @_ZN6icu_6917CollationIterator14handleNextCE32ERiR10UErrorCode(%"class.icu_69::CollationIterator"*, i32* nocapture dereferenceable(4), i32* dereferenceable(4)) unnamed_addr #0 align 2 {
  %4 = bitcast %"class.icu_69::CollationIterator"* %0 to i32 (%"class.icu_69::CollationIterator"*, i32*)***
  %5 = load i32 (%"class.icu_69::CollationIterator"*, i32*)**, i32 (%"class.icu_69::CollationIterator"*, i32*)*** %4, align 8
  %6 = getelementptr inbounds i32 (%"class.icu_69::CollationIterator"*, i32*)*, i32 (%"class.icu_69::CollationIterator"*, i32*)** %5, i64 6
  %7 = load i32 (%"class.icu_69::CollationIterator"*, i32*)*, i32 (%"class.icu_69::CollationIterator"*, i32*)** %6, align 8
  %8 = tail call i32 %7(%"class.icu_69::CollationIterator"* %0, i32* dereferenceable(4) %2) #12
  store i32 %8, i32* %1, align 4
  %9 = icmp slt i32 %8, 0
  br i1 %9, label %78, label %10

10:                                               ; preds = %3
  %11 = getelementptr inbounds %"class.icu_69::CollationIterator", %"class.icu_69::CollationIterator"* %0, i64 0, i32 2
  %12 = load %"struct.icu_69::CollationData"*, %"struct.icu_69::CollationData"** %11, align 8
  %13 = getelementptr inbounds %"struct.icu_69::CollationData", %"struct.icu_69::CollationData"* %12, i64 0, i32 0
  %14 = load %struct.UTrie2*, %struct.UTrie2** %13, align 8
  %15 = getelementptr inbounds %struct.UTrie2, %struct.UTrie2* %14, i64 0, i32 2
  %16 = load i32*, i32** %15, align 8
  %17 = icmp ult i32 %8, 55296
  br i1 %17, label %18, label %29

18:                                               ; preds = %10
  %19 = getelementptr inbounds %struct.UTrie2, %struct.UTrie2* %14, i64 0, i32 0
  %20 = load i16*, i16** %19, align 8
  %21 = lshr i32 %8, 5
  %22 = zext i32 %21 to i64
  %23 = getelementptr inbounds i16, i16* %20, i64 %22
  %24 = load i16, i16* %23, align 2
  %25 = zext i16 %24 to i32
  %26 = shl nuw nsw i32 %25, 2
  %27 = and i32 %8, 31
  %28 = add nuw nsw i32 %26, %27
  br label %73

29:                                               ; preds = %10
  %30 = icmp ult i32 %8, 65536
  br i1 %30, label %31, label %45

31:                                               ; preds = %29
  %32 = getelementptr inbounds %struct.UTrie2, %struct.UTrie2* %14, i64 0, i32 0
  %33 = load i16*, i16** %32, align 8
  %34 = icmp slt i32 %8, 56320
  %35 = select i1 %34, i32 320, i32 0
  %36 = lshr i32 %8, 5
  %37 = add nuw nsw i32 %35, %36
  %38 = zext i32 %37 to i64
  %39 = getelementptr inbounds i16, i16* %33, i64 %38
  %40 = load i16, i16* %39, align 2
  %41 = zext i16 %40 to i32
  %42 = shl nuw nsw i32 %41, 2
  %43 = and i32 %8, 31
  %44 = add nuw nsw i32 %42, %43
  br label %73

45:                                               ; preds = %29
  %46 = icmp ugt i32 %8, 1114111
  br i1 %46, label %73, label %47

47:                                               ; preds = %45
  %48 = getelementptr inbounds %struct.UTrie2, %struct.UTrie2* %14, i64 0, i32 9
  %49 = load i32, i32* %48, align 4
  %50 = icmp sgt i32 %49, %8
  br i1 %50, label %54, label %51

51:                                               ; preds = %47
  %52 = getelementptr inbounds %struct.UTrie2, %struct.UTrie2* %14, i64 0, i32 10
  %53 = load i32, i32* %52, align 8
  br label %73

54:                                               ; preds = %47
  %55 = getelementptr inbounds %struct.UTrie2, %struct.UTrie2* %14, i64 0, i32 0
  %56 = load i16*, i16** %55, align 8
  %57 = lshr i32 %8, 11
  %58 = add nuw nsw i32 %57, 2080
  %59 = zext i32 %58 to i64
  %60 = getelementptr inbounds i16, i16* %56, i64 %59
  %61 = load i16, i16* %60, align 2
  %62 = zext i16 %61 to i32
  %63 = lshr i32 %8, 5
  %64 = and i32 %63, 63
  %65 = add nuw nsw i32 %64, %62
  %66 = zext i32 %65 to i64
  %67 = getelementptr inbounds i16, i16* %56, i64 %66
  %68 = load i16, i16* %67, align 2
  %69 = zext i16 %68 to i32
  %70 = shl nuw nsw i32 %69, 2
  %71 = and i32 %8, 31
  %72 = add nuw nsw i32 %70, %71
  br label %73

73:                                               ; preds = %18, %31, %45, %51, %54
  %74 = phi i32 [ %28, %18 ], [ %44, %31 ], [ 128, %45 ], [ %53, %51 ], [ %72, %54 ]
  %75 = sext i32 %74 to i64
  %76 = getelementptr inbounds i32, i32* %16, i64 %75
  %77 = load i32, i32* %76, align 4
  br label %78

78:                                               ; preds = %3, %73
  %79 = phi i32 [ %77, %73 ], [ 192, %3 ]
  ret i32 %79
}

; Function Attrs: norecurse nounwind readnone ssp uwtable
define hidden zeroext i16 @_ZN6icu_6917CollationIterator23handleGetTrailSurrogateEv(%"class.icu_69::CollationIterator"* nocapture readnone) unnamed_addr #9 align 2 {
  ret i16 0
}

; Function Attrs: norecurse nounwind readnone ssp uwtable
define hidden signext i8 @_ZN6icu_6917CollationIterator18foundNULTerminatorEv(%"class.icu_69::CollationIterator"* nocapture readnone) unnamed_addr #9 align 2 {
  ret i8 0
}

; Function Attrs: norecurse nounwind readnone ssp uwtable
define hidden signext i8 @_ZNK6icu_6917CollationIterator25forbidSurrogateCodePointsEv(%"class.icu_69::CollationIterator"* nocapture readnone) unnamed_addr #9 align 2 {
  ret i8 0
}

; Function Attrs: norecurse nounwind readonly ssp uwtable
define hidden i32 @_ZNK6icu_6917CollationIterator11getDataCE32Ei(%"class.icu_69::CollationIterator"* nocapture readonly, i32) unnamed_addr #10 align 2 {
  %3 = getelementptr inbounds %"class.icu_69::CollationIterator", %"class.icu_69::CollationIterator"* %0, i64 0, i32 2
  %4 = load %"struct.icu_69::CollationData"*, %"struct.icu_69::CollationData"** %3, align 8
  %5 = getelementptr inbounds %"struct.icu_69::CollationData", %"struct.icu_69::CollationData"* %4, i64 0, i32 0
  %6 = load %struct.UTrie2*, %struct.UTrie2** %5, align 8
  %7 = getelementptr inbounds %struct.UTrie2, %struct.UTrie2* %6, i64 0, i32 2
  %8 = load i32*, i32** %7, align 8
  %9 = icmp ult i32 %1, 55296
  br i1 %9, label %10, label %21

10:                                               ; preds = %2
  %11 = getelementptr inbounds %struct.UTrie2, %struct.UTrie2* %6, i64 0, i32 0
  %12 = load i16*, i16** %11, align 8
  %13 = lshr i32 %1, 5
  %14 = zext i32 %13 to i64
  %15 = getelementptr inbounds i16, i16* %12, i64 %14
  %16 = load i16, i16* %15, align 2
  %17 = zext i16 %16 to i32
  %18 = shl nuw nsw i32 %17, 2
  %19 = and i32 %1, 31
  %20 = add nuw nsw i32 %18, %19
  br label %65

21:                                               ; preds = %2
  %22 = icmp ult i32 %1, 65536
  br i1 %22, label %23, label %37

23:                                               ; preds = %21
  %24 = getelementptr inbounds %struct.UTrie2, %struct.UTrie2* %6, i64 0, i32 0
  %25 = load i16*, i16** %24, align 8
  %26 = icmp slt i32 %1, 56320
  %27 = select i1 %26, i32 320, i32 0
  %28 = lshr i32 %1, 5
  %29 = add nuw nsw i32 %27, %28
  %30 = zext i32 %29 to i64
  %31 = getelementptr inbounds i16, i16* %25, i64 %30
  %32 = load i16, i16* %31, align 2
  %33 = zext i16 %32 to i32
  %34 = shl nuw nsw i32 %33, 2
  %35 = and i32 %1, 31
  %36 = add nuw nsw i32 %34, %35
  br label %65

37:                                               ; preds = %21
  %38 = icmp ugt i32 %1, 1114111
  br i1 %38, label %65, label %39

39:                                               ; preds = %37
  %40 = getelementptr inbounds %struct.UTrie2, %struct.UTrie2* %6, i64 0, i32 9
  %41 = load i32, i32* %40, align 4
  %42 = icmp sgt i32 %41, %1
  br i1 %42, label %46, label %43

43:                                               ; preds = %39
  %44 = getelementptr inbounds %struct.UTrie2, %struct.UTrie2* %6, i64 0, i32 10
  %45 = load i32, i32* %44, align 8
  br label %65

46:                                               ; preds = %39
  %47 = getelementptr inbounds %struct.UTrie2, %struct.UTrie2* %6, i64 0, i32 0
  %48 = load i16*, i16** %47, align 8
  %49 = lshr i32 %1, 11
  %50 = add nuw nsw i32 %49, 2080
  %51 = zext i32 %50 to i64
  %52 = getelementptr inbounds i16, i16* %48, i64 %51
  %53 = load i16, i16* %52, align 2
  %54 = zext i16 %53 to i32
  %55 = lshr i32 %1, 5
  %56 = and i32 %55, 63
  %57 = add nuw nsw i32 %56, %54
  %58 = zext i32 %57 to i64
  %59 = getelementptr inbounds i16, i16* %48, i64 %58
  %60 = load i16, i16* %59, align 2
  %61 = zext i16 %60 to i32
  %62 = shl nuw nsw i32 %61, 2
  %63 = and i32 %1, 31
  %64 = add nuw nsw i32 %62, %63
  br label %65

65:                                               ; preds = %10, %23, %37, %43, %46
  %66 = phi i32 [ %20, %10 ], [ %36, %23 ], [ 128, %37 ], [ %45, %43 ], [ %64, %46 ]
  %67 = sext i32 %66 to i64
  %68 = getelementptr inbounds i32, i32* %8, i64 %67
  %69 = load i32, i32* %68, align 4
  ret i32 %69
}

; Function Attrs: nofree norecurse nounwind ssp uwtable
define hidden i32 @_ZN6icu_6917CollationIterator22getCE32FromBuilderDataEjR10UErrorCode(%"class.icu_69::CollationIterator"* nocapture readnone, i32, i32* nocapture dereferenceable(4)) unnamed_addr #8 align 2 {
  %4 = load i32, i32* %2, align 4
  %5 = icmp sgt i32 %4, 0
  br i1 %5, label %7, label %6

6:                                                ; preds = %3
  store i32 5, i32* %2, align 4
  br label %7

7:                                                ; preds = %3, %6
  ret i32 0
}

; Function Attrs: nounwind ssp uwtable
define hidden i64 @_ZN6icu_6917CollationIterator14nextCEFromCE32EPKNS_13CollationDataEijR10UErrorCode(%"class.icu_69::CollationIterator"*, %"struct.icu_69::CollationData"*, i32, i32, i32* dereferenceable(4)) local_unnamed_addr #0 align 2 {
  %6 = getelementptr inbounds %"class.icu_69::CollationIterator", %"class.icu_69::CollationIterator"* %0, i64 0, i32 3, i32 0
  %7 = load i32, i32* %6, align 8
  %8 = add nsw i32 %7, -1
  store i32 %8, i32* %6, align 8
  tail call void @_ZN6icu_6917CollationIterator17appendCEsFromCE32EPKNS_13CollationDataEijaR10UErrorCode(%"class.icu_69::CollationIterator"* %0, %"struct.icu_69::CollationData"* %1, i32 %2, i32 %3, i8 signext 1, i32* dereferenceable(4) %4)
  %9 = load i32, i32* %4, align 4
  %10 = icmp sgt i32 %9, 0
  br i1 %10, label %20, label %11

11:                                               ; preds = %5
  %12 = getelementptr inbounds %"class.icu_69::CollationIterator", %"class.icu_69::CollationIterator"* %0, i64 0, i32 4
  %13 = load i32, i32* %12, align 8
  %14 = add nsw i32 %13, 1
  store i32 %14, i32* %12, align 8
  %15 = sext i32 %13 to i64
  %16 = getelementptr inbounds %"class.icu_69::CollationIterator", %"class.icu_69::CollationIterator"* %0, i64 0, i32 3, i32 1, i32 0
  %17 = load i64*, i64** %16, align 8
  %18 = getelementptr inbounds i64, i64* %17, i64 %15
  %19 = load i64, i64* %18, align 8
  br label %20

20:                                               ; preds = %5, %11
  %21 = phi i64 [ %19, %11 ], [ 1, %5 ]
  ret i64 %21
}

; Function Attrs: nounwind ssp uwtable
define hidden void @_ZN6icu_6917CollationIterator17appendCEsFromCE32EPKNS_13CollationDataEijaR10UErrorCode(%"class.icu_69::CollationIterator"*, %"struct.icu_69::CollationData"*, i32, i32, i8 signext, i32* dereferenceable(4)) local_unnamed_addr #0 align 2 {
  %7 = and i32 %3, 192
  %8 = icmp eq i32 %7, 192
  br i1 %8, label %9, label %1125

9:                                                ; preds = %6
  %10 = bitcast %"class.icu_69::CollationIterator"* %0 to i8 (%"class.icu_69::CollationIterator"*)***
  %11 = bitcast %"class.icu_69::CollationIterator"* %0 to i16 (%"class.icu_69::CollationIterator"*)***
  %12 = icmp eq i8 %4, 0
  %13 = getelementptr inbounds %"class.icu_69::CollationIterator", %"class.icu_69::CollationIterator"* %0, i64 0, i32 8
  %14 = getelementptr inbounds %"class.icu_69::CollationIterator", %"class.icu_69::CollationIterator"* %0, i64 0, i32 6
  %15 = getelementptr inbounds %"class.icu_69::CollationIterator", %"class.icu_69::CollationIterator"* %0, i64 0, i32 7
  %16 = bitcast %"class.icu_69::CollationIterator"* %0 to i32 (%"class.icu_69::CollationIterator"*, i32*)***
  %17 = bitcast %"class.icu_69::CollationIterator"* %0 to void (%"class.icu_69::CollationIterator"*, i32, i32*)***
  %18 = bitcast %"class.icu_69::CollationIterator"* %0 to i32 (%"class.icu_69::CollationIterator"*, i32, i32*)***
  %19 = getelementptr inbounds %"class.icu_69::CollationIterator", %"class.icu_69::CollationIterator"* %0, i64 0, i32 2
  br label %20

20:                                               ; preds = %9, %1119
  %21 = phi %"struct.icu_69::CollationData"* [ %1, %9 ], [ %1122, %1119 ]
  %22 = phi i32 [ %2, %9 ], [ %1121, %1119 ]
  %23 = phi i32 [ %3, %9 ], [ %1120, %1119 ]
  %24 = and i32 %23, 15
  switch i32 %24, label %1118 [
    i32 0, label %25
    i32 3, label %25
    i32 1, label %29
    i32 2, label %89
    i32 4, label %147
    i32 5, label %224
    i32 6, label %315
    i32 7, label %383
    i32 8, label %461
    i32 9, label %472
    i32 10, label %647
    i32 11, label %658
    i32 12, label %725
    i32 13, label %897
    i32 14, label %983
    i32 15, label %1049
  ]

25:                                               ; preds = %20, %20
  %26 = load i32, i32* %5, align 4
  %27 = icmp sgt i32 %26, 0
  br i1 %27, label %1193, label %28

28:                                               ; preds = %25
  store i32 5, i32* %5, align 4
  br label %1193

29:                                               ; preds = %20
  %30 = and i32 %23, -256
  %31 = zext i32 %30 to i64
  %32 = shl nuw i64 %31, 32
  %33 = or i64 %32, 83887360
  %34 = getelementptr inbounds %"class.icu_69::CollationIterator", %"class.icu_69::CollationIterator"* %0, i64 0, i32 3, i32 0
  %35 = load i32, i32* %34, align 8
  %36 = icmp slt i32 %35, 40
  br i1 %36, label %82, label %37

37:                                               ; preds = %29
  %38 = getelementptr inbounds %"class.icu_69::CollationIterator", %"class.icu_69::CollationIterator"* %0, i64 0, i32 3, i32 1
  %39 = getelementptr inbounds %"class.icu_69::CollationIterator", %"class.icu_69::CollationIterator"* %0, i64 0, i32 3, i32 1, i32 1
  %40 = load i32, i32* %39, align 8
  %41 = icmp slt i32 %35, %40
  br i1 %41, label %82, label %42

42:                                               ; preds = %37
  %43 = load i32, i32* %5, align 4
  %44 = icmp slt i32 %43, 1
  br i1 %44, label %45, label %1193

45:                                               ; preds = %42, %45
  %46 = phi i32 [ %49, %45 ], [ %40, %42 ]
  %47 = icmp slt i32 %46, 1000
  %48 = select i1 %47, i32 2, i32 1
  %49 = shl nsw i32 %46, %48
  %50 = icmp sgt i32 %49, %35
  br i1 %50, label %51, label %45

51:                                               ; preds = %45
  %52 = icmp sgt i32 %49, 0
  br i1 %52, label %53, label %81

53:                                               ; preds = %51
  %54 = sext i32 %49 to i64
  %55 = shl nsw i64 %54, 3
  %56 = tail call noalias i8* @uprv_malloc_69(i64 %55) #11
  %57 = icmp eq i8* %56, null
  br i1 %57, label %81, label %58

58:                                               ; preds = %53
  %59 = icmp sgt i32 %35, 0
  br i1 %59, label %62, label %60

60:                                               ; preds = %58
  %61 = bitcast %"class.icu_69::MaybeStackArray.0"* %38 to i8**
  br label %72

62:                                               ; preds = %58
  %63 = load i32, i32* %39, align 8
  %64 = icmp slt i32 %63, %35
  %65 = select i1 %64, i32 %63, i32 %35
  %66 = icmp sgt i32 %65, %49
  %67 = select i1 %66, i32 %49, i32 %65
  %68 = bitcast %"class.icu_69::MaybeStackArray.0"* %38 to i8**
  %69 = load i8*, i8** %68, align 8
  %70 = sext i32 %67 to i64
  %71 = shl nsw i64 %70, 3
  tail call void @llvm.memcpy.p0i8.p0i8.i64(i8* nonnull align 8 %56, i8* align 8 %69, i64 %71, i1 false) #12
  br label %72

72:                                               ; preds = %62, %60
  %73 = phi i8** [ %61, %60 ], [ %68, %62 ]
  %74 = getelementptr inbounds %"class.icu_69::CollationIterator", %"class.icu_69::CollationIterator"* %0, i64 0, i32 3, i32 1, i32 2
  %75 = load i8, i8* %74, align 4
  %76 = icmp eq i8 %75, 0
  br i1 %76, label %79, label %77

77:                                               ; preds = %72
  %78 = load i8*, i8** %73, align 8
  tail call void @uprv_free_69(i8* %78) #12
  br label %79

79:                                               ; preds = %77, %72
  store i8* %56, i8** %73, align 8
  store i32 %49, i32* %39, align 8
  store i8 1, i8* %74, align 4
  %80 = load i32, i32* %34, align 8
  br label %82

81:                                               ; preds = %53, %51
  store i32 7, i32* %5, align 4
  br label %1193

82:                                               ; preds = %79, %37, %29
  %83 = phi i32 [ %35, %37 ], [ %80, %79 ], [ %35, %29 ]
  %84 = add nsw i32 %83, 1
  store i32 %84, i32* %34, align 8
  %85 = sext i32 %83 to i64
  %86 = getelementptr inbounds %"class.icu_69::CollationIterator", %"class.icu_69::CollationIterator"* %0, i64 0, i32 3, i32 1, i32 0
  %87 = load i64*, i64** %86, align 8
  %88 = getelementptr inbounds i64, i64* %87, i64 %85
  store i64 %33, i64* %88, align 8
  br label %1193

89:                                               ; preds = %20
  %90 = and i32 %23, -256
  %91 = zext i32 %90 to i64
  %92 = getelementptr inbounds %"class.icu_69::CollationIterator", %"class.icu_69::CollationIterator"* %0, i64 0, i32 3, i32 0
  %93 = load i32, i32* %92, align 8
  %94 = icmp slt i32 %93, 40
  br i1 %94, label %140, label %95

95:                                               ; preds = %89
  %96 = getelementptr inbounds %"class.icu_69::CollationIterator", %"class.icu_69::CollationIterator"* %0, i64 0, i32 3, i32 1
  %97 = getelementptr inbounds %"class.icu_69::CollationIterator", %"class.icu_69::CollationIterator"* %0, i64 0, i32 3, i32 1, i32 1
  %98 = load i32, i32* %97, align 8
  %99 = icmp slt i32 %93, %98
  br i1 %99, label %140, label %100

100:                                              ; preds = %95
  %101 = load i32, i32* %5, align 4
  %102 = icmp slt i32 %101, 1
  br i1 %102, label %103, label %1193

103:                                              ; preds = %100, %103
  %104 = phi i32 [ %107, %103 ], [ %98, %100 ]
  %105 = icmp slt i32 %104, 1000
  %106 = select i1 %105, i32 2, i32 1
  %107 = shl nsw i32 %104, %106
  %108 = icmp sgt i32 %107, %93
  br i1 %108, label %109, label %103

109:                                              ; preds = %103
  %110 = icmp sgt i32 %107, 0
  br i1 %110, label %111, label %139

111:                                              ; preds = %109
  %112 = sext i32 %107 to i64
  %113 = shl nsw i64 %112, 3
  %114 = tail call noalias i8* @uprv_malloc_69(i64 %113) #11
  %115 = icmp eq i8* %114, null
  br i1 %115, label %139, label %116

116:                                              ; preds = %111
  %117 = icmp sgt i32 %93, 0
  br i1 %117, label %120, label %118

118:                                              ; preds = %116
  %119 = bitcast %"class.icu_69::MaybeStackArray.0"* %96 to i8**
  br label %130

120:                                              ; preds = %116
  %121 = load i32, i32* %97, align 8
  %122 = icmp slt i32 %121, %93
  %123 = select i1 %122, i32 %121, i32 %93
  %124 = icmp sgt i32 %123, %107
  %125 = select i1 %124, i32 %107, i32 %123
  %126 = bitcast %"class.icu_69::MaybeStackArray.0"* %96 to i8**
  %127 = load i8*, i8** %126, align 8
  %128 = sext i32 %125 to i64
  %129 = shl nsw i64 %128, 3
  tail call void @llvm.memcpy.p0i8.p0i8.i64(i8* nonnull align 8 %114, i8* align 8 %127, i64 %129, i1 false) #12
  br label %130

130:                                              ; preds = %120, %118
  %131 = phi i8** [ %119, %118 ], [ %126, %120 ]
  %132 = getelementptr inbounds %"class.icu_69::CollationIterator", %"class.icu_69::CollationIterator"* %0, i64 0, i32 3, i32 1, i32 2
  %133 = load i8, i8* %132, align 4
  %134 = icmp eq i8 %133, 0
  br i1 %134, label %137, label %135

135:                                              ; preds = %130
  %136 = load i8*, i8** %131, align 8
  tail call void @uprv_free_69(i8* %136) #12
  br label %137

137:                                              ; preds = %135, %130
  store i8* %114, i8** %131, align 8
  store i32 %107, i32* %97, align 8
  store i8 1, i8* %132, align 4
  %138 = load i32, i32* %92, align 8
  br label %140

139:                                              ; preds = %111, %109
  store i32 7, i32* %5, align 4
  br label %1193

140:                                              ; preds = %137, %95, %89
  %141 = phi i32 [ %93, %95 ], [ %138, %137 ], [ %93, %89 ]
  %142 = add nsw i32 %141, 1
  store i32 %142, i32* %92, align 8
  %143 = sext i32 %141 to i64
  %144 = getelementptr inbounds %"class.icu_69::CollationIterator", %"class.icu_69::CollationIterator"* %0, i64 0, i32 3, i32 1, i32 0
  %145 = load i64*, i64** %144, align 8
  %146 = getelementptr inbounds i64, i64* %145, i64 %143
  store i64 %91, i64* %146, align 8
  br label %1193

147:                                              ; preds = %20
  %148 = getelementptr inbounds %"class.icu_69::CollationIterator", %"class.icu_69::CollationIterator"* %0, i64 0, i32 3, i32 1
  %149 = getelementptr inbounds %"class.icu_69::CollationIterator", %"class.icu_69::CollationIterator"* %0, i64 0, i32 3, i32 1, i32 1
  %150 = load i32, i32* %149, align 8
  %151 = getelementptr inbounds %"class.icu_69::CollationIterator", %"class.icu_69::CollationIterator"* %0, i64 0, i32 3, i32 0
  %152 = load i32, i32* %151, align 8
  %153 = add nsw i32 %152, 2
  %154 = icmp sgt i32 %153, %150
  br i1 %154, label %158, label %155

155:                                              ; preds = %147
  %156 = getelementptr inbounds %"class.icu_69::CollationIterator", %"class.icu_69::CollationIterator"* %0, i64 0, i32 3, i32 1, i32 0
  %157 = load i64*, i64** %156, align 8
  br label %199

158:                                              ; preds = %147
  %159 = load i32, i32* %5, align 4
  %160 = icmp slt i32 %159, 1
  br i1 %160, label %161, label %1193

161:                                              ; preds = %158, %161
  %162 = phi i32 [ %165, %161 ], [ %150, %158 ]
  %163 = icmp slt i32 %162, 1000
  %164 = select i1 %163, i32 2, i32 1
  %165 = shl nsw i32 %162, %164
  %166 = icmp slt i32 %165, %153
  br i1 %166, label %161, label %167

167:                                              ; preds = %161
  %168 = icmp sgt i32 %165, 0
  br i1 %168, label %169, label %198

169:                                              ; preds = %167
  %170 = sext i32 %165 to i64
  %171 = shl nsw i64 %170, 3
  %172 = tail call noalias i8* @uprv_malloc_69(i64 %171) #11
  %173 = icmp eq i8* %172, null
  br i1 %173, label %198, label %174

174:                                              ; preds = %169
  %175 = icmp sgt i32 %152, 0
  br i1 %175, label %178, label %176

176:                                              ; preds = %174
  %177 = bitcast %"class.icu_69::MaybeStackArray.0"* %148 to i8**
  br label %188

178:                                              ; preds = %174
  %179 = load i32, i32* %149, align 8
  %180 = icmp slt i32 %179, %152
  %181 = select i1 %180, i32 %179, i32 %152
  %182 = icmp sgt i32 %181, %165
  %183 = select i1 %182, i32 %165, i32 %181
  %184 = bitcast %"class.icu_69::MaybeStackArray.0"* %148 to i8**
  %185 = load i8*, i8** %184, align 8
  %186 = sext i32 %183 to i64
  %187 = shl nsw i64 %186, 3
  tail call void @llvm.memcpy.p0i8.p0i8.i64(i8* nonnull align 8 %172, i8* align 8 %185, i64 %187, i1 false) #12
  br label %188

188:                                              ; preds = %178, %176
  %189 = phi i8** [ %177, %176 ], [ %184, %178 ]
  %190 = getelementptr inbounds %"class.icu_69::CollationIterator", %"class.icu_69::CollationIterator"* %0, i64 0, i32 3, i32 1, i32 2
  %191 = load i8, i8* %190, align 4
  %192 = icmp eq i8 %191, 0
  br i1 %192, label %195, label %193

193:                                              ; preds = %188
  %194 = load i8*, i8** %189, align 8
  tail call void @uprv_free_69(i8* %194) #12
  br label %195

195:                                              ; preds = %193, %188
  store i8* %172, i8** %189, align 8
  store i32 %165, i32* %149, align 8
  store i8 1, i8* %190, align 4
  %196 = load i32, i32* %151, align 8
  %197 = bitcast i8* %172 to i64*
  br label %199

198:                                              ; preds = %169, %167
  store i32 7, i32* %5, align 4
  br label %1193

199:                                              ; preds = %155, %195
  %200 = phi i64* [ %197, %195 ], [ %157, %155 ]
  %201 = phi i32 [ %196, %195 ], [ %152, %155 ]
  %202 = and i32 %23, -16777216
  %203 = zext i32 %202 to i64
  %204 = shl nuw i64 %203, 32
  %205 = lshr i32 %23, 8
  %206 = and i32 %205, 65280
  %207 = or i32 %206, 83886080
  %208 = zext i32 %207 to i64
  %209 = or i64 %204, %208
  %210 = sext i32 %201 to i64
  %211 = getelementptr inbounds %"class.icu_69::CollationIterator", %"class.icu_69::CollationIterator"* %0, i64 0, i32 3, i32 1, i32 0
  %212 = getelementptr inbounds i64, i64* %200, i64 %210
  store i64 %209, i64* %212, align 8
  %213 = load i32, i32* %151, align 8
  %214 = add nsw i32 %213, 1
  %215 = shl i32 %23, 16
  %216 = and i32 %215, -16777216
  %217 = or i32 %216, 1280
  %218 = zext i32 %217 to i64
  %219 = sext i32 %214 to i64
  %220 = load i64*, i64** %211, align 8
  %221 = getelementptr inbounds i64, i64* %220, i64 %219
  store i64 %218, i64* %221, align 8
  %222 = load i32, i32* %151, align 8
  %223 = add nsw i32 %222, 2
  store i32 %223, i32* %151, align 8
  br label %1193

224:                                              ; preds = %20
  %225 = getelementptr inbounds %"struct.icu_69::CollationData", %"struct.icu_69::CollationData"* %21, i64 0, i32 1
  %226 = load i32*, i32** %225, align 8
  %227 = lshr i32 %23, 13
  %228 = zext i32 %227 to i64
  %229 = getelementptr inbounds i32, i32* %226, i64 %228
  %230 = lshr i32 %23, 8
  %231 = and i32 %230, 31
  %232 = getelementptr inbounds %"class.icu_69::CollationIterator", %"class.icu_69::CollationIterator"* %0, i64 0, i32 3, i32 1
  %233 = getelementptr inbounds %"class.icu_69::CollationIterator", %"class.icu_69::CollationIterator"* %0, i64 0, i32 3, i32 1, i32 1
  %234 = load i32, i32* %233, align 8
  %235 = getelementptr inbounds %"class.icu_69::CollationIterator", %"class.icu_69::CollationIterator"* %0, i64 0, i32 3, i32 0
  %236 = load i32, i32* %235, align 8
  %237 = add nsw i32 %236, %231
  %238 = icmp sgt i32 %237, %234
  br i1 %238, label %239, label %278

239:                                              ; preds = %224
  %240 = load i32, i32* %5, align 4
  %241 = icmp slt i32 %240, 1
  br i1 %241, label %242, label %1193

242:                                              ; preds = %239, %242
  %243 = phi i32 [ %246, %242 ], [ %234, %239 ]
  %244 = icmp slt i32 %243, 1000
  %245 = select i1 %244, i32 2, i32 1
  %246 = shl nsw i32 %243, %245
  %247 = icmp slt i32 %246, %237
  br i1 %247, label %242, label %248

248:                                              ; preds = %242
  %249 = icmp sgt i32 %246, 0
  br i1 %249, label %250, label %277

250:                                              ; preds = %248
  %251 = sext i32 %246 to i64
  %252 = shl nsw i64 %251, 3
  %253 = tail call noalias i8* @uprv_malloc_69(i64 %252) #11
  %254 = icmp eq i8* %253, null
  br i1 %254, label %277, label %255

255:                                              ; preds = %250
  %256 = icmp sgt i32 %236, 0
  br i1 %256, label %259, label %257

257:                                              ; preds = %255
  %258 = bitcast %"class.icu_69::MaybeStackArray.0"* %232 to i8**
  br label %269

259:                                              ; preds = %255
  %260 = load i32, i32* %233, align 8
  %261 = icmp slt i32 %260, %236
  %262 = select i1 %261, i32 %260, i32 %236
  %263 = icmp sgt i32 %262, %246
  %264 = select i1 %263, i32 %246, i32 %262
  %265 = bitcast %"class.icu_69::MaybeStackArray.0"* %232 to i8**
  %266 = load i8*, i8** %265, align 8
  %267 = sext i32 %264 to i64
  %268 = shl nsw i64 %267, 3
  tail call void @llvm.memcpy.p0i8.p0i8.i64(i8* nonnull align 8 %253, i8* align 8 %266, i64 %268, i1 false) #12
  br label %269

269:                                              ; preds = %259, %257
  %270 = phi i8** [ %258, %257 ], [ %265, %259 ]
  %271 = getelementptr inbounds %"class.icu_69::CollationIterator", %"class.icu_69::CollationIterator"* %0, i64 0, i32 3, i32 1, i32 2
  %272 = load i8, i8* %271, align 4
  %273 = icmp eq i8 %272, 0
  br i1 %273, label %276, label %274

274:                                              ; preds = %269
  %275 = load i8*, i8** %270, align 8
  tail call void @uprv_free_69(i8* %275) #12
  br label %276

276:                                              ; preds = %274, %269
  store i8* %253, i8** %270, align 8
  store i32 %246, i32* %233, align 8
  store i8 1, i8* %271, align 4
  br label %278

277:                                              ; preds = %250, %248
  store i32 7, i32* %5, align 4
  br label %1193

278:                                              ; preds = %224, %276
  %279 = getelementptr inbounds %"class.icu_69::CollationIterator", %"class.icu_69::CollationIterator"* %0, i64 0, i32 3, i32 1, i32 0
  br label %280

280:                                              ; preds = %278, %306
  %281 = phi i32* [ %229, %278 ], [ %283, %306 ]
  %282 = phi i32 [ %231, %278 ], [ %313, %306 ]
  %283 = getelementptr inbounds i32, i32* %281, i64 1
  %284 = load i32, i32* %281, align 4
  %285 = and i32 %284, 255
  %286 = icmp ult i32 %285, 192
  br i1 %286, label %287, label %298

287:                                              ; preds = %280
  %288 = and i32 %284, -65536
  %289 = zext i32 %288 to i64
  %290 = shl nuw i64 %289, 32
  %291 = shl i32 %284, 16
  %292 = and i32 %291, -16777216
  %293 = zext i32 %292 to i64
  %294 = or i64 %290, %293
  %295 = shl nuw nsw i32 %285, 8
  %296 = zext i32 %295 to i64
  %297 = or i64 %294, %296
  br label %306

298:                                              ; preds = %280
  %299 = sub i32 %284, %285
  %300 = and i32 %284, 15
  %301 = icmp eq i32 %300, 1
  %302 = zext i32 %299 to i64
  br i1 %301, label %303, label %306

303:                                              ; preds = %298
  %304 = shl nuw i64 %302, 32
  %305 = or i64 %304, 83887360
  br label %306

306:                                              ; preds = %287, %298, %303
  %307 = phi i64 [ %297, %287 ], [ %305, %303 ], [ %302, %298 ]
  %308 = load i32, i32* %235, align 8
  %309 = add nsw i32 %308, 1
  store i32 %309, i32* %235, align 8
  %310 = sext i32 %308 to i64
  %311 = load i64*, i64** %279, align 8
  %312 = getelementptr inbounds i64, i64* %311, i64 %310
  store i64 %307, i64* %312, align 8
  %313 = add nsw i32 %282, -1
  %314 = icmp sgt i32 %313, 0
  br i1 %314, label %280, label %1193

315:                                              ; preds = %20
  %316 = getelementptr inbounds %"struct.icu_69::CollationData", %"struct.icu_69::CollationData"* %21, i64 0, i32 2
  %317 = load i64*, i64** %316, align 8
  %318 = lshr i32 %23, 13
  %319 = zext i32 %318 to i64
  %320 = getelementptr inbounds i64, i64* %317, i64 %319
  %321 = lshr i32 %23, 8
  %322 = and i32 %321, 31
  %323 = getelementptr inbounds %"class.icu_69::CollationIterator", %"class.icu_69::CollationIterator"* %0, i64 0, i32 3, i32 1
  %324 = getelementptr inbounds %"class.icu_69::CollationIterator", %"class.icu_69::CollationIterator"* %0, i64 0, i32 3, i32 1, i32 1
  %325 = load i32, i32* %324, align 8
  %326 = getelementptr inbounds %"class.icu_69::CollationIterator", %"class.icu_69::CollationIterator"* %0, i64 0, i32 3, i32 0
  %327 = load i32, i32* %326, align 8
  %328 = add nsw i32 %327, %322
  %329 = icmp sgt i32 %328, %325
  br i1 %329, label %330, label %369

330:                                              ; preds = %315
  %331 = load i32, i32* %5, align 4
  %332 = icmp slt i32 %331, 1
  br i1 %332, label %333, label %1193

333:                                              ; preds = %330, %333
  %334 = phi i32 [ %337, %333 ], [ %325, %330 ]
  %335 = icmp slt i32 %334, 1000
  %336 = select i1 %335, i32 2, i32 1
  %337 = shl nsw i32 %334, %336
  %338 = icmp slt i32 %337, %328
  br i1 %338, label %333, label %339

339:                                              ; preds = %333
  %340 = icmp sgt i32 %337, 0
  br i1 %340, label %341, label %368

341:                                              ; preds = %339
  %342 = sext i32 %337 to i64
  %343 = shl nsw i64 %342, 3
  %344 = tail call noalias i8* @uprv_malloc_69(i64 %343) #11
  %345 = icmp eq i8* %344, null
  br i1 %345, label %368, label %346

346:                                              ; preds = %341
  %347 = icmp sgt i32 %327, 0
  br i1 %347, label %350, label %348

348:                                              ; preds = %346
  %349 = bitcast %"class.icu_69::MaybeStackArray.0"* %323 to i8**
  br label %360

350:                                              ; preds = %346
  %351 = load i32, i32* %324, align 8
  %352 = icmp slt i32 %351, %327
  %353 = select i1 %352, i32 %351, i32 %327
  %354 = icmp sgt i32 %353, %337
  %355 = select i1 %354, i32 %337, i32 %353
  %356 = bitcast %"class.icu_69::MaybeStackArray.0"* %323 to i8**
  %357 = load i8*, i8** %356, align 8
  %358 = sext i32 %355 to i64
  %359 = shl nsw i64 %358, 3
  tail call void @llvm.memcpy.p0i8.p0i8.i64(i8* nonnull align 8 %344, i8* align 8 %357, i64 %359, i1 false) #12
  br label %360

360:                                              ; preds = %350, %348
  %361 = phi i8** [ %349, %348 ], [ %356, %350 ]
  %362 = getelementptr inbounds %"class.icu_69::CollationIterator", %"class.icu_69::CollationIterator"* %0, i64 0, i32 3, i32 1, i32 2
  %363 = load i8, i8* %362, align 4
  %364 = icmp eq i8 %363, 0
  br i1 %364, label %367, label %365

365:                                              ; preds = %360
  %366 = load i8*, i8** %361, align 8
  tail call void @uprv_free_69(i8* %366) #12
  br label %367

367:                                              ; preds = %365, %360
  store i8* %344, i8** %361, align 8
  store i32 %337, i32* %324, align 8
  store i8 1, i8* %362, align 4
  br label %369

368:                                              ; preds = %341, %339
  store i32 7, i32* %5, align 4
  br label %1193

369:                                              ; preds = %315, %367
  %370 = getelementptr inbounds %"class.icu_69::CollationIterator", %"class.icu_69::CollationIterator"* %0, i64 0, i32 3, i32 1, i32 0
  br label %371

371:                                              ; preds = %369, %371
  %372 = phi i64* [ %320, %369 ], [ %374, %371 ]
  %373 = phi i32 [ %322, %369 ], [ %381, %371 ]
  %374 = getelementptr inbounds i64, i64* %372, i64 1
  %375 = load i64, i64* %372, align 8
  %376 = load i32, i32* %326, align 8
  %377 = add nsw i32 %376, 1
  store i32 %377, i32* %326, align 8
  %378 = sext i32 %376 to i64
  %379 = load i64*, i64** %370, align 8
  %380 = getelementptr inbounds i64, i64* %379, i64 %378
  store i64 %375, i64* %380, align 8
  %381 = add nsw i32 %373, -1
  %382 = icmp sgt i32 %381, 0
  br i1 %382, label %371, label %1193

383:                                              ; preds = %20
  %384 = load i32 (%"class.icu_69::CollationIterator"*, i32, i32*)**, i32 (%"class.icu_69::CollationIterator"*, i32, i32*)*** %18, align 8
  %385 = getelementptr inbounds i32 (%"class.icu_69::CollationIterator"*, i32, i32*)*, i32 (%"class.icu_69::CollationIterator"*, i32, i32*)** %384, i64 15
  %386 = load i32 (%"class.icu_69::CollationIterator"*, i32, i32*)*, i32 (%"class.icu_69::CollationIterator"*, i32, i32*)** %385, align 8
  %387 = tail call i32 %386(%"class.icu_69::CollationIterator"* %0, i32 %23, i32* dereferenceable(4) %5) #12
  %388 = load i32, i32* %5, align 4
  %389 = icmp slt i32 %388, 1
  br i1 %389, label %390, label %1193

390:                                              ; preds = %383
  %391 = icmp eq i32 %387, 192
  br i1 %391, label %392, label %1119

392:                                              ; preds = %390
  %393 = load %"struct.icu_69::CollationData"*, %"struct.icu_69::CollationData"** %19, align 8
  %394 = getelementptr inbounds %"struct.icu_69::CollationData", %"struct.icu_69::CollationData"* %393, i64 0, i32 4
  %395 = load %"struct.icu_69::CollationData"*, %"struct.icu_69::CollationData"** %394, align 8
  %396 = getelementptr inbounds %"struct.icu_69::CollationData", %"struct.icu_69::CollationData"* %395, i64 0, i32 0
  %397 = load %struct.UTrie2*, %struct.UTrie2** %396, align 8
  %398 = getelementptr inbounds %struct.UTrie2, %struct.UTrie2* %397, i64 0, i32 2
  %399 = load i32*, i32** %398, align 8
  %400 = icmp ult i32 %22, 55296
  br i1 %400, label %401, label %412

401:                                              ; preds = %392
  %402 = getelementptr inbounds %struct.UTrie2, %struct.UTrie2* %397, i64 0, i32 0
  %403 = load i16*, i16** %402, align 8
  %404 = lshr i32 %22, 5
  %405 = zext i32 %404 to i64
  %406 = getelementptr inbounds i16, i16* %403, i64 %405
  %407 = load i16, i16* %406, align 2
  %408 = zext i16 %407 to i32
  %409 = shl nuw nsw i32 %408, 2
  %410 = and i32 %22, 31
  %411 = add nuw nsw i32 %409, %410
  br label %456

412:                                              ; preds = %392
  %413 = icmp ult i32 %22, 65536
  br i1 %413, label %414, label %428

414:                                              ; preds = %412
  %415 = getelementptr inbounds %struct.UTrie2, %struct.UTrie2* %397, i64 0, i32 0
  %416 = load i16*, i16** %415, align 8
  %417 = icmp slt i32 %22, 56320
  %418 = select i1 %417, i32 320, i32 0
  %419 = lshr i32 %22, 5
  %420 = add nuw nsw i32 %418, %419
  %421 = zext i32 %420 to i64
  %422 = getelementptr inbounds i16, i16* %416, i64 %421
  %423 = load i16, i16* %422, align 2
  %424 = zext i16 %423 to i32
  %425 = shl nuw nsw i32 %424, 2
  %426 = and i32 %22, 31
  %427 = add nuw nsw i32 %425, %426
  br label %456

428:                                              ; preds = %412
  %429 = icmp ugt i32 %22, 1114111
  br i1 %429, label %456, label %430

430:                                              ; preds = %428
  %431 = getelementptr inbounds %struct.UTrie2, %struct.UTrie2* %397, i64 0, i32 9
  %432 = load i32, i32* %431, align 4
  %433 = icmp sgt i32 %432, %22
  br i1 %433, label %437, label %434

434:                                              ; preds = %430
  %435 = getelementptr inbounds %struct.UTrie2, %struct.UTrie2* %397, i64 0, i32 10
  %436 = load i32, i32* %435, align 8
  br label %456

437:                                              ; preds = %430
  %438 = getelementptr inbounds %struct.UTrie2, %struct.UTrie2* %397, i64 0, i32 0
  %439 = load i16*, i16** %438, align 8
  %440 = lshr i32 %22, 11
  %441 = add nuw nsw i32 %440, 2080
  %442 = zext i32 %441 to i64
  %443 = getelementptr inbounds i16, i16* %439, i64 %442
  %444 = load i16, i16* %443, align 2
  %445 = zext i16 %444 to i32
  %446 = lshr i32 %22, 5
  %447 = and i32 %446, 63
  %448 = add nuw nsw i32 %447, %445
  %449 = zext i32 %448 to i64
  %450 = getelementptr inbounds i16, i16* %439, i64 %449
  %451 = load i16, i16* %450, align 2
  %452 = zext i16 %451 to i32
  %453 = shl nuw nsw i32 %452, 2
  %454 = and i32 %22, 31
  %455 = add nuw nsw i32 %453, %454
  br label %456

456:                                              ; preds = %401, %414, %428, %434, %437
  %457 = phi i32 [ %411, %401 ], [ %427, %414 ], [ 128, %428 ], [ %436, %434 ], [ %455, %437 ]
  %458 = sext i32 %457 to i64
  %459 = getelementptr inbounds i32, i32* %399, i64 %458
  %460 = load i32, i32* %459, align 4
  br label %1119

461:                                              ; preds = %20
  br i1 %12, label %462, label %464

462:                                              ; preds = %461
  %463 = tail call i32 @_ZN6icu_6917CollationIterator17getCE32FromPrefixEPKNS_13CollationDataEjR10UErrorCode(%"class.icu_69::CollationIterator"* %0, %"struct.icu_69::CollationData"* %21, i32 %23, i32* dereferenceable(4) %5)
  br label %1119

464:                                              ; preds = %461
  %465 = load void (%"class.icu_69::CollationIterator"*, i32, i32*)**, void (%"class.icu_69::CollationIterator"*, i32, i32*)*** %17, align 8
  %466 = getelementptr inbounds void (%"class.icu_69::CollationIterator"*, i32, i32*)*, void (%"class.icu_69::CollationIterator"*, i32, i32*)** %465, i64 13
  %467 = load void (%"class.icu_69::CollationIterator"*, i32, i32*)*, void (%"class.icu_69::CollationIterator"*, i32, i32*)** %466, align 8
  tail call void %467(%"class.icu_69::CollationIterator"* %0, i32 1, i32* dereferenceable(4) %5) #12
  %468 = tail call i32 @_ZN6icu_6917CollationIterator17getCE32FromPrefixEPKNS_13CollationDataEjR10UErrorCode(%"class.icu_69::CollationIterator"* %0, %"struct.icu_69::CollationData"* %21, i32 %23, i32* dereferenceable(4) %5)
  %469 = load void (%"class.icu_69::CollationIterator"*, i32, i32*)**, void (%"class.icu_69::CollationIterator"*, i32, i32*)*** %17, align 8
  %470 = getelementptr inbounds void (%"class.icu_69::CollationIterator"*, i32, i32*)*, void (%"class.icu_69::CollationIterator"*, i32, i32*)** %469, i64 12
  %471 = load void (%"class.icu_69::CollationIterator"*, i32, i32*)*, void (%"class.icu_69::CollationIterator"*, i32, i32*)** %470, align 8
  tail call void %471(%"class.icu_69::CollationIterator"* %0, i32 1, i32* dereferenceable(4) %5) #12
  br label %1119

472:                                              ; preds = %20
  %473 = getelementptr inbounds %"struct.icu_69::CollationData", %"struct.icu_69::CollationData"* %21, i64 0, i32 3
  %474 = load i16*, i16** %473, align 8
  %475 = lshr i32 %23, 13
  %476 = zext i32 %475 to i64
  %477 = getelementptr inbounds i16, i16* %474, i64 %476
  %478 = load i16, i16* %477, align 2
  %479 = zext i16 %478 to i32
  %480 = shl nuw i32 %479, 16
  %481 = getelementptr inbounds i16, i16* %477, i64 1
  %482 = load i16, i16* %481, align 2
  %483 = zext i16 %482 to i32
  %484 = or i32 %480, %483
  br i1 %12, label %1119, label %485

485:                                              ; preds = %472
  %486 = load %"class.icu_69::SkippedState"*, %"class.icu_69::SkippedState"** %14, align 8
  %487 = icmp eq %"class.icu_69::SkippedState"* %486, null
  br i1 %487, label %488, label %527

488:                                              ; preds = %485
  %489 = load i32, i32* %15, align 8
  %490 = icmp slt i32 %489, 0
  br i1 %490, label %491, label %551

491:                                              ; preds = %488
  %492 = load i32 (%"class.icu_69::CollationIterator"*, i32*)**, i32 (%"class.icu_69::CollationIterator"*, i32*)*** %16, align 8
  %493 = getelementptr inbounds i32 (%"class.icu_69::CollationIterator"*, i32*)*, i32 (%"class.icu_69::CollationIterator"*, i32*)** %492, i64 6
  %494 = load i32 (%"class.icu_69::CollationIterator"*, i32*)*, i32 (%"class.icu_69::CollationIterator"*, i32*)** %493, align 8
  %495 = tail call i32 %494(%"class.icu_69::CollationIterator"* %0, i32* dereferenceable(4) %5) #12
  %496 = icmp slt i32 %495, 0
  br i1 %496, label %1119, label %497

497:                                              ; preds = %491
  %498 = and i32 %23, 512
  %499 = icmp eq i32 %498, 0
  br i1 %499, label %642, label %500

500:                                              ; preds = %497
  %501 = icmp slt i32 %495, 768
  br i1 %501, label %523, label %502

502:                                              ; preds = %500
  %503 = icmp sgt i32 %495, 65535
  br i1 %503, label %504, label %508

504:                                              ; preds = %502
  %505 = lshr i32 %495, 10
  %506 = add nuw nsw i32 %505, 55232
  %507 = and i32 %506, 65535
  br label %508

508:                                              ; preds = %504, %502
  %509 = phi i32 [ %507, %504 ], [ %495, %502 ]
  %510 = lshr i32 %509, 5
  %511 = zext i32 %510 to i64
  %512 = getelementptr inbounds [2048 x i8], [2048 x i8]* @_ZN6icu_6912CollationFCD9lcccIndexE, i64 0, i64 %511
  %513 = load i8, i8* %512, align 1
  %514 = icmp eq i8 %513, 0
  br i1 %514, label %523, label %515

515:                                              ; preds = %508
  %516 = zext i8 %513 to i64
  %517 = getelementptr inbounds [0 x i32], [0 x i32]* @_ZN6icu_6912CollationFCD8lcccBitsE, i64 0, i64 %516
  %518 = load i32, i32* %517, align 4
  %519 = and i32 %509, 31
  %520 = shl i32 1, %519
  %521 = and i32 %518, %520
  %522 = icmp eq i32 %521, 0
  br i1 %522, label %523, label %642

523:                                              ; preds = %508, %500, %515
  %524 = load void (%"class.icu_69::CollationIterator"*, i32, i32*)**, void (%"class.icu_69::CollationIterator"*, i32, i32*)*** %17, align 8
  %525 = getelementptr inbounds void (%"class.icu_69::CollationIterator"*, i32, i32*)*, void (%"class.icu_69::CollationIterator"*, i32, i32*)** %524, i64 13
  %526 = load void (%"class.icu_69::CollationIterator"*, i32, i32*)*, void (%"class.icu_69::CollationIterator"*, i32, i32*)** %525, align 8
  tail call void %526(%"class.icu_69::CollationIterator"* %0, i32 1, i32* dereferenceable(4) %5) #12
  br label %1119

527:                                              ; preds = %485
  %528 = getelementptr inbounds %"class.icu_69::SkippedState", %"class.icu_69::SkippedState"* %486, i64 0, i32 3
  %529 = load i32, i32* %528, align 8
  %530 = getelementptr inbounds %"class.icu_69::SkippedState", %"class.icu_69::SkippedState"* %486, i64 0, i32 1, i32 1, i32 0, i32 0
  %531 = load i16, i16* %530, align 8
  %532 = icmp slt i16 %531, 0
  br i1 %532, label %536, label %533

533:                                              ; preds = %527
  %534 = lshr i16 %531, 5
  %535 = zext i16 %534 to i32
  br label %539

536:                                              ; preds = %527
  %537 = getelementptr inbounds %"class.icu_69::SkippedState", %"class.icu_69::SkippedState"* %486, i64 0, i32 1, i32 1, i32 0, i32 1
  %538 = load i32, i32* %537, align 4
  br label %539

539:                                              ; preds = %536, %533
  %540 = phi i32 [ %535, %533 ], [ %538, %536 ]
  %541 = icmp slt i32 %529, %540
  br i1 %541, label %544, label %542

542:                                              ; preds = %539
  %543 = load i32, i32* %15, align 8
  br label %551

544:                                              ; preds = %539
  %545 = getelementptr inbounds %"class.icu_69::SkippedState", %"class.icu_69::SkippedState"* %486, i64 0, i32 1
  %546 = tail call i32 @_ZNK6icu_6913UnicodeString8char32AtEi(%"class.icu_69::UnicodeString"* %545, i32 %529) #12
  %547 = icmp ult i32 %546, 65536
  %548 = select i1 %547, i32 1, i32 2
  %549 = load i32, i32* %528, align 8
  %550 = add nsw i32 %548, %549
  store i32 %550, i32* %528, align 8
  br label %578

551:                                              ; preds = %542, %488
  %552 = phi i32 [ %543, %542 ], [ %489, %488 ]
  %553 = icmp eq i32 %552, 0
  br i1 %553, label %1119, label %554

554:                                              ; preds = %551
  %555 = load i32 (%"class.icu_69::CollationIterator"*, i32*)**, i32 (%"class.icu_69::CollationIterator"*, i32*)*** %16, align 8
  %556 = getelementptr inbounds i32 (%"class.icu_69::CollationIterator"*, i32*)*, i32 (%"class.icu_69::CollationIterator"*, i32*)** %555, i64 6
  %557 = load i32 (%"class.icu_69::CollationIterator"*, i32*)*, i32 (%"class.icu_69::CollationIterator"*, i32*)** %556, align 8
  %558 = tail call i32 %557(%"class.icu_69::CollationIterator"* %0, i32* dereferenceable(4) %5) #12
  %559 = load %"class.icu_69::SkippedState"*, %"class.icu_69::SkippedState"** %14, align 8
  %560 = icmp eq %"class.icu_69::SkippedState"* %559, null
  br i1 %560, label %571, label %561

561:                                              ; preds = %554
  %562 = getelementptr inbounds %"class.icu_69::SkippedState", %"class.icu_69::SkippedState"* %559, i64 0, i32 1, i32 1, i32 0, i32 0
  %563 = load i16, i16* %562, align 8
  %564 = icmp ugt i16 %563, 31
  %565 = icmp sgt i32 %558, -1
  %566 = and i1 %565, %564
  br i1 %566, label %567, label %571

567:                                              ; preds = %561
  %568 = getelementptr inbounds %"class.icu_69::SkippedState", %"class.icu_69::SkippedState"* %559, i64 0, i32 3
  %569 = load i32, i32* %568, align 8
  %570 = add nsw i32 %569, 1
  store i32 %570, i32* %568, align 8
  br label %571

571:                                              ; preds = %567, %561, %554
  %572 = load i32, i32* %15, align 8
  %573 = icmp sgt i32 %572, 0
  %574 = icmp sgt i32 %558, -1
  %575 = and i1 %574, %573
  br i1 %575, label %576, label %578

576:                                              ; preds = %571
  %577 = add nsw i32 %572, -1
  store i32 %577, i32* %15, align 8
  br label %581

578:                                              ; preds = %544, %571
  %579 = phi i32 [ %546, %544 ], [ %558, %571 ]
  %580 = icmp slt i32 %579, 0
  br i1 %580, label %1119, label %581

581:                                              ; preds = %576, %578
  %582 = phi i32 [ %558, %576 ], [ %579, %578 ]
  %583 = and i32 %23, 512
  %584 = icmp eq i32 %583, 0
  br i1 %584, label %642, label %585

585:                                              ; preds = %581
  %586 = icmp slt i32 %582, 768
  br i1 %586, label %608, label %587

587:                                              ; preds = %585
  %588 = icmp sgt i32 %582, 65535
  br i1 %588, label %589, label %593

589:                                              ; preds = %587
  %590 = lshr i32 %582, 10
  %591 = add nuw nsw i32 %590, 55232
  %592 = and i32 %591, 65535
  br label %593

593:                                              ; preds = %589, %587
  %594 = phi i32 [ %592, %589 ], [ %582, %587 ]
  %595 = lshr i32 %594, 5
  %596 = zext i32 %595 to i64
  %597 = getelementptr inbounds [2048 x i8], [2048 x i8]* @_ZN6icu_6912CollationFCD9lcccIndexE, i64 0, i64 %596
  %598 = load i8, i8* %597, align 1
  %599 = icmp eq i8 %598, 0
  br i1 %599, label %608, label %600

600:                                              ; preds = %593
  %601 = zext i8 %598 to i64
  %602 = getelementptr inbounds [0 x i32], [0 x i32]* @_ZN6icu_6912CollationFCD8lcccBitsE, i64 0, i64 %601
  %603 = load i32, i32* %602, align 4
  %604 = and i32 %594, 31
  %605 = shl i32 1, %604
  %606 = and i32 %603, %605
  %607 = icmp eq i32 %606, 0
  br i1 %607, label %608, label %642

608:                                              ; preds = %593, %585, %600
  %609 = load %"class.icu_69::SkippedState"*, %"class.icu_69::SkippedState"** %14, align 8
  %610 = icmp eq %"class.icu_69::SkippedState"* %609, null
  br i1 %610, label %633, label %611

611:                                              ; preds = %608
  %612 = getelementptr inbounds %"class.icu_69::SkippedState", %"class.icu_69::SkippedState"* %609, i64 0, i32 1, i32 1, i32 0, i32 0
  %613 = load i16, i16* %612, align 8
  %614 = icmp ugt i16 %613, 31
  br i1 %614, label %615, label %633

615:                                              ; preds = %611
  %616 = getelementptr inbounds %"class.icu_69::SkippedState", %"class.icu_69::SkippedState"* %609, i64 0, i32 1
  %617 = icmp slt i16 %613, 0
  br i1 %617, label %621, label %618

618:                                              ; preds = %615
  %619 = lshr i16 %613, 5
  %620 = zext i16 %619 to i32
  br label %624

621:                                              ; preds = %615
  %622 = getelementptr inbounds %"class.icu_69::SkippedState", %"class.icu_69::SkippedState"* %609, i64 0, i32 1, i32 1, i32 0, i32 1
  %623 = load i32, i32* %622, align 4
  br label %624

624:                                              ; preds = %621, %618
  %625 = phi i32 [ %620, %618 ], [ %623, %621 ]
  %626 = getelementptr inbounds %"class.icu_69::SkippedState", %"class.icu_69::SkippedState"* %609, i64 0, i32 3
  %627 = load i32, i32* %626, align 8
  %628 = icmp sgt i32 %627, %625
  br i1 %628, label %629, label %631

629:                                              ; preds = %624
  %630 = add nsw i32 %627, -1
  store i32 %630, i32* %626, align 8
  br label %633

631:                                              ; preds = %624
  %632 = tail call i32 @_ZNK6icu_6913UnicodeString11moveIndex32Eii(%"class.icu_69::UnicodeString"* %616, i32 %627, i32 -1) #12
  store i32 %632, i32* %626, align 8
  br label %633

633:                                              ; preds = %631, %629, %611, %608
  %634 = phi i32 [ 1, %611 ], [ 1, %608 ], [ 1, %629 ], [ 0, %631 ]
  %635 = load void (%"class.icu_69::CollationIterator"*, i32, i32*)**, void (%"class.icu_69::CollationIterator"*, i32, i32*)*** %17, align 8
  %636 = getelementptr inbounds void (%"class.icu_69::CollationIterator"*, i32, i32*)*, void (%"class.icu_69::CollationIterator"*, i32, i32*)** %635, i64 13
  %637 = load void (%"class.icu_69::CollationIterator"*, i32, i32*)*, void (%"class.icu_69::CollationIterator"*, i32, i32*)** %636, align 8
  tail call void %637(%"class.icu_69::CollationIterator"* %0, i32 %634, i32* dereferenceable(4) %5) #12
  %638 = load i32, i32* %15, align 8
  %639 = icmp sgt i32 %638, -1
  br i1 %639, label %640, label %1119

640:                                              ; preds = %633
  %641 = add nuw nsw i32 %638, %634
  store i32 %641, i32* %15, align 8
  br label %1119

642:                                              ; preds = %515, %497, %600, %581
  %643 = phi i32 [ %495, %515 ], [ %495, %497 ], [ %582, %600 ], [ %582, %581 ]
  %644 = getelementptr inbounds i16, i16* %477, i64 2
  %645 = tail call i32 @_ZN6icu_6917CollationIterator23nextCE32FromContractionEPKNS_13CollationDataEjPKDsjiR10UErrorCode(%"class.icu_69::CollationIterator"* %0, %"struct.icu_69::CollationData"* %21, i32 %23, i16* %644, i32 %484, i32 %643, i32* dereferenceable(4) %5)
  %646 = icmp eq i32 %645, 1
  br i1 %646, label %1193, label %1119

647:                                              ; preds = %20
  %648 = load i8, i8* %13, align 4
  %649 = icmp eq i8 %648, 0
  br i1 %649, label %651, label %650

650:                                              ; preds = %647
  tail call void @_ZN6icu_6917CollationIterator16appendNumericCEsEjaR10UErrorCode(%"class.icu_69::CollationIterator"* %0, i32 %23, i8 signext %4, i32* dereferenceable(4) %5)
  br label %1193

651:                                              ; preds = %647
  %652 = getelementptr inbounds %"struct.icu_69::CollationData", %"struct.icu_69::CollationData"* %21, i64 0, i32 1
  %653 = load i32*, i32** %652, align 8
  %654 = lshr i32 %23, 13
  %655 = zext i32 %654 to i64
  %656 = getelementptr inbounds i32, i32* %653, i64 %655
  %657 = load i32, i32* %656, align 4
  br label %1119

658:                                              ; preds = %20
  br i1 %12, label %721, label %659

659:                                              ; preds = %658
  %660 = load i8 (%"class.icu_69::CollationIterator"*)**, i8 (%"class.icu_69::CollationIterator"*)*** %10, align 8
  %661 = getelementptr inbounds i8 (%"class.icu_69::CollationIterator"*)*, i8 (%"class.icu_69::CollationIterator"*)** %660, i64 10
  %662 = load i8 (%"class.icu_69::CollationIterator"*)*, i8 (%"class.icu_69::CollationIterator"*)** %661, align 8
  %663 = tail call signext i8 %662(%"class.icu_69::CollationIterator"* %0) #12
  %664 = icmp eq i8 %663, 0
  br i1 %664, label %721, label %665

665:                                              ; preds = %659
  %666 = getelementptr inbounds %"class.icu_69::CollationIterator", %"class.icu_69::CollationIterator"* %0, i64 0, i32 3, i32 0
  %667 = load i32, i32* %666, align 8
  %668 = icmp slt i32 %667, 40
  br i1 %668, label %714, label %669

669:                                              ; preds = %665
  %670 = getelementptr inbounds %"class.icu_69::CollationIterator", %"class.icu_69::CollationIterator"* %0, i64 0, i32 3, i32 1
  %671 = getelementptr inbounds %"class.icu_69::CollationIterator", %"class.icu_69::CollationIterator"* %0, i64 0, i32 3, i32 1, i32 1
  %672 = load i32, i32* %671, align 8
  %673 = icmp slt i32 %667, %672
  br i1 %673, label %714, label %674

674:                                              ; preds = %669
  %675 = load i32, i32* %5, align 4
  %676 = icmp slt i32 %675, 1
  br i1 %676, label %677, label %1193

677:                                              ; preds = %674, %677
  %678 = phi i32 [ %681, %677 ], [ %672, %674 ]
  %679 = icmp slt i32 %678, 1000
  %680 = select i1 %679, i32 2, i32 1
  %681 = shl nsw i32 %678, %680
  %682 = icmp sgt i32 %681, %667
  br i1 %682, label %683, label %677

683:                                              ; preds = %677
  %684 = icmp sgt i32 %681, 0
  br i1 %684, label %685, label %713

685:                                              ; preds = %683
  %686 = sext i32 %681 to i64
  %687 = shl nsw i64 %686, 3
  %688 = tail call noalias i8* @uprv_malloc_69(i64 %687) #11
  %689 = icmp eq i8* %688, null
  br i1 %689, label %713, label %690

690:                                              ; preds = %685
  %691 = icmp sgt i32 %667, 0
  br i1 %691, label %694, label %692

692:                                              ; preds = %690
  %693 = bitcast %"class.icu_69::MaybeStackArray.0"* %670 to i8**
  br label %704

694:                                              ; preds = %690
  %695 = load i32, i32* %671, align 8
  %696 = icmp slt i32 %695, %667
  %697 = select i1 %696, i32 %695, i32 %667
  %698 = icmp sgt i32 %697, %681
  %699 = select i1 %698, i32 %681, i32 %697
  %700 = bitcast %"class.icu_69::MaybeStackArray.0"* %670 to i8**
  %701 = load i8*, i8** %700, align 8
  %702 = sext i32 %699 to i64
  %703 = shl nsw i64 %702, 3
  tail call void @llvm.memcpy.p0i8.p0i8.i64(i8* nonnull align 8 %688, i8* align 8 %701, i64 %703, i1 false) #12
  br label %704

704:                                              ; preds = %694, %692
  %705 = phi i8** [ %693, %692 ], [ %700, %694 ]
  %706 = getelementptr inbounds %"class.icu_69::CollationIterator", %"class.icu_69::CollationIterator"* %0, i64 0, i32 3, i32 1, i32 2
  %707 = load i8, i8* %706, align 4
  %708 = icmp eq i8 %707, 0
  br i1 %708, label %711, label %709

709:                                              ; preds = %704
  %710 = load i8*, i8** %705, align 8
  tail call void @uprv_free_69(i8* %710) #12
  br label %711

711:                                              ; preds = %709, %704
  store i8* %688, i8** %705, align 8
  store i32 %681, i32* %671, align 8
  store i8 1, i8* %706, align 4
  %712 = load i32, i32* %666, align 8
  br label %714

713:                                              ; preds = %685, %683
  store i32 7, i32* %5, align 4
  br label %1193

714:                                              ; preds = %711, %669, %665
  %715 = phi i32 [ %667, %669 ], [ %712, %711 ], [ %667, %665 ]
  %716 = add nsw i32 %715, 1
  store i32 %716, i32* %666, align 8
  %717 = sext i32 %715 to i64
  %718 = getelementptr inbounds %"class.icu_69::CollationIterator", %"class.icu_69::CollationIterator"* %0, i64 0, i32 3, i32 1, i32 0
  %719 = load i64*, i64** %718, align 8
  %720 = getelementptr inbounds i64, i64* %719, i64 %717
  store i64 4311744768, i64* %720, align 8
  br label %1193

721:                                              ; preds = %659, %658
  %722 = getelementptr inbounds %"struct.icu_69::CollationData", %"struct.icu_69::CollationData"* %21, i64 0, i32 1
  %723 = load i32*, i32** %722, align 8
  %724 = load i32, i32* %723, align 4
  br label %1119

725:                                              ; preds = %20
  %726 = getelementptr inbounds %"struct.icu_69::CollationData", %"struct.icu_69::CollationData"* %21, i64 0, i32 5
  %727 = load i32*, i32** %726, align 8
  %728 = add nsw i32 %22, -44032
  %729 = srem i32 %728, 28
  %730 = sdiv i32 %728, 28
  %731 = srem i32 %730, 21
  %732 = sdiv i32 %728, 588
  %733 = and i32 %23, 256
  %734 = icmp eq i32 %733, 0
  br i1 %734, label %883, label %735

735:                                              ; preds = %725
  %736 = icmp eq i32 %729, 0
  %737 = select i1 %736, i32 2, i32 3
  %738 = getelementptr inbounds %"class.icu_69::CollationIterator", %"class.icu_69::CollationIterator"* %0, i64 0, i32 3, i32 1
  %739 = getelementptr inbounds %"class.icu_69::CollationIterator", %"class.icu_69::CollationIterator"* %0, i64 0, i32 3, i32 1, i32 1
  %740 = load i32, i32* %739, align 8
  %741 = getelementptr inbounds %"class.icu_69::CollationIterator", %"class.icu_69::CollationIterator"* %0, i64 0, i32 3, i32 0
  %742 = load i32, i32* %741, align 8
  %743 = add nsw i32 %742, %737
  %744 = icmp sgt i32 %743, %740
  br i1 %744, label %745, label %785

745:                                              ; preds = %735
  %746 = load i32, i32* %5, align 4
  %747 = icmp slt i32 %746, 1
  br i1 %747, label %748, label %1193

748:                                              ; preds = %745, %748
  %749 = phi i32 [ %752, %748 ], [ %740, %745 ]
  %750 = icmp slt i32 %749, 1000
  %751 = select i1 %750, i32 2, i32 1
  %752 = shl nsw i32 %749, %751
  %753 = icmp slt i32 %752, %743
  br i1 %753, label %748, label %754

754:                                              ; preds = %748
  %755 = icmp sgt i32 %752, 0
  br i1 %755, label %756, label %784

756:                                              ; preds = %754
  %757 = sext i32 %752 to i64
  %758 = shl nsw i64 %757, 3
  %759 = tail call noalias i8* @uprv_malloc_69(i64 %758) #11
  %760 = icmp eq i8* %759, null
  br i1 %760, label %784, label %761

761:                                              ; preds = %756
  %762 = icmp sgt i32 %742, 0
  br i1 %762, label %765, label %763

763:                                              ; preds = %761
  %764 = bitcast %"class.icu_69::MaybeStackArray.0"* %738 to i8**
  br label %775

765:                                              ; preds = %761
  %766 = load i32, i32* %739, align 8
  %767 = icmp slt i32 %766, %742
  %768 = select i1 %767, i32 %766, i32 %742
  %769 = icmp sgt i32 %768, %752
  %770 = select i1 %769, i32 %752, i32 %768
  %771 = bitcast %"class.icu_69::MaybeStackArray.0"* %738 to i8**
  %772 = load i8*, i8** %771, align 8
  %773 = sext i32 %770 to i64
  %774 = shl nsw i64 %773, 3
  tail call void @llvm.memcpy.p0i8.p0i8.i64(i8* nonnull align 8 %759, i8* align 8 %772, i64 %774, i1 false) #12
  br label %775

775:                                              ; preds = %765, %763
  %776 = phi i8** [ %764, %763 ], [ %771, %765 ]
  %777 = getelementptr inbounds %"class.icu_69::CollationIterator", %"class.icu_69::CollationIterator"* %0, i64 0, i32 3, i32 1, i32 2
  %778 = load i8, i8* %777, align 4
  %779 = icmp eq i8 %778, 0
  br i1 %779, label %782, label %780

780:                                              ; preds = %775
  %781 = load i8*, i8** %776, align 8
  tail call void @uprv_free_69(i8* %781) #12
  br label %782

782:                                              ; preds = %780, %775
  store i8* %759, i8** %776, align 8
  store i32 %752, i32* %739, align 8
  store i8 1, i8* %777, align 4
  %783 = load i32, i32* %741, align 8
  br label %785

784:                                              ; preds = %756, %754
  store i32 7, i32* %5, align 4
  br label %1193

785:                                              ; preds = %782, %735
  %786 = phi i32 [ %783, %782 ], [ %742, %735 ]
  %787 = sext i32 %732 to i64
  %788 = getelementptr inbounds i32, i32* %727, i64 %787
  %789 = load i32, i32* %788, align 4
  %790 = and i32 %789, 255
  %791 = icmp ult i32 %790, 192
  br i1 %791, label %792, label %803

792:                                              ; preds = %785
  %793 = and i32 %789, -65536
  %794 = zext i32 %793 to i64
  %795 = shl nuw i64 %794, 32
  %796 = shl i32 %789, 16
  %797 = and i32 %796, -16777216
  %798 = zext i32 %797 to i64
  %799 = or i64 %795, %798
  %800 = shl nuw nsw i32 %790, 8
  %801 = zext i32 %800 to i64
  %802 = or i64 %799, %801
  br label %811

803:                                              ; preds = %785
  %804 = sub i32 %789, %790
  %805 = and i32 %789, 15
  %806 = icmp eq i32 %805, 1
  %807 = zext i32 %804 to i64
  br i1 %806, label %808, label %811

808:                                              ; preds = %803
  %809 = shl nuw i64 %807, 32
  %810 = or i64 %809, 83887360
  br label %811

811:                                              ; preds = %792, %803, %808
  %812 = phi i64 [ %802, %792 ], [ %810, %808 ], [ %807, %803 ]
  %813 = sext i32 %786 to i64
  %814 = getelementptr inbounds %"class.icu_69::CollationIterator", %"class.icu_69::CollationIterator"* %0, i64 0, i32 3, i32 1, i32 0
  %815 = load i64*, i64** %814, align 8
  %816 = getelementptr inbounds i64, i64* %815, i64 %813
  store i64 %812, i64* %816, align 8
  %817 = load i32, i32* %741, align 8
  %818 = add nsw i32 %817, 1
  %819 = add nsw i32 %731, 19
  %820 = sext i32 %819 to i64
  %821 = getelementptr inbounds i32, i32* %727, i64 %820
  %822 = load i32, i32* %821, align 4
  %823 = and i32 %822, 255
  %824 = icmp ult i32 %823, 192
  br i1 %824, label %825, label %836

825:                                              ; preds = %811
  %826 = and i32 %822, -65536
  %827 = zext i32 %826 to i64
  %828 = shl nuw i64 %827, 32
  %829 = shl i32 %822, 16
  %830 = and i32 %829, -16777216
  %831 = zext i32 %830 to i64
  %832 = or i64 %828, %831
  %833 = shl nuw nsw i32 %823, 8
  %834 = zext i32 %833 to i64
  %835 = or i64 %832, %834
  br label %844

836:                                              ; preds = %811
  %837 = sub i32 %822, %823
  %838 = and i32 %822, 15
  %839 = icmp eq i32 %838, 1
  %840 = zext i32 %837 to i64
  br i1 %839, label %841, label %844

841:                                              ; preds = %836
  %842 = shl nuw i64 %840, 32
  %843 = or i64 %842, 83887360
  br label %844

844:                                              ; preds = %825, %836, %841
  %845 = phi i64 [ %835, %825 ], [ %843, %841 ], [ %840, %836 ]
  %846 = sext i32 %818 to i64
  %847 = load i64*, i64** %814, align 8
  %848 = getelementptr inbounds i64, i64* %847, i64 %846
  store i64 %845, i64* %848, align 8
  %849 = load i32, i32* %741, align 8
  %850 = add nsw i32 %849, 2
  store i32 %850, i32* %741, align 8
  br i1 %736, label %1193, label %851

851:                                              ; preds = %844
  %852 = add nsw i32 %729, 39
  %853 = sext i32 %852 to i64
  %854 = getelementptr inbounds i32, i32* %727, i64 %853
  %855 = load i32, i32* %854, align 4
  %856 = and i32 %855, 255
  %857 = icmp ult i32 %856, 192
  br i1 %857, label %858, label %869

858:                                              ; preds = %851
  %859 = and i32 %855, -65536
  %860 = zext i32 %859 to i64
  %861 = shl nuw i64 %860, 32
  %862 = shl i32 %855, 16
  %863 = and i32 %862, -16777216
  %864 = zext i32 %863 to i64
  %865 = or i64 %861, %864
  %866 = shl nuw nsw i32 %856, 8
  %867 = zext i32 %866 to i64
  %868 = or i64 %865, %867
  br label %877

869:                                              ; preds = %851
  %870 = sub i32 %855, %856
  %871 = and i32 %855, 15
  %872 = icmp eq i32 %871, 1
  %873 = zext i32 %870 to i64
  br i1 %872, label %874, label %877

874:                                              ; preds = %869
  %875 = shl nuw i64 %873, 32
  %876 = or i64 %875, 83887360
  br label %877

877:                                              ; preds = %858, %869, %874
  %878 = phi i64 [ %868, %858 ], [ %876, %874 ], [ %873, %869 ]
  %879 = add nsw i32 %849, 3
  store i32 %879, i32* %741, align 8
  %880 = sext i32 %850 to i64
  %881 = load i64*, i64** %814, align 8
  %882 = getelementptr inbounds i64, i64* %881, i64 %880
  store i64 %878, i64* %882, align 8
  br label %1193

883:                                              ; preds = %725
  %884 = sext i32 %732 to i64
  %885 = getelementptr inbounds i32, i32* %727, i64 %884
  %886 = load i32, i32* %885, align 4
  tail call void @_ZN6icu_6917CollationIterator17appendCEsFromCE32EPKNS_13CollationDataEijaR10UErrorCode(%"class.icu_69::CollationIterator"* %0, %"struct.icu_69::CollationData"* %21, i32 -1, i32 %886, i8 signext %4, i32* dereferenceable(4) %5)
  %887 = add nsw i32 %731, 19
  %888 = sext i32 %887 to i64
  %889 = getelementptr inbounds i32, i32* %727, i64 %888
  %890 = load i32, i32* %889, align 4
  tail call void @_ZN6icu_6917CollationIterator17appendCEsFromCE32EPKNS_13CollationDataEijaR10UErrorCode(%"class.icu_69::CollationIterator"* %0, %"struct.icu_69::CollationData"* %21, i32 -1, i32 %890, i8 signext %4, i32* dereferenceable(4) %5)
  %891 = icmp eq i32 %729, 0
  br i1 %891, label %1193, label %892

892:                                              ; preds = %883
  %893 = add nsw i32 %729, 39
  %894 = sext i32 %893 to i64
  %895 = getelementptr inbounds i32, i32* %727, i64 %894
  %896 = load i32, i32* %895, align 4
  br label %1119

897:                                              ; preds = %20
  %898 = load i16 (%"class.icu_69::CollationIterator"*)**, i16 (%"class.icu_69::CollationIterator"*)*** %11, align 8
  %899 = getelementptr inbounds i16 (%"class.icu_69::CollationIterator"*)*, i16 (%"class.icu_69::CollationIterator"*)** %898, i64 9
  %900 = load i16 (%"class.icu_69::CollationIterator"*)*, i16 (%"class.icu_69::CollationIterator"*)** %899, align 8
  %901 = tail call zeroext i16 %900(%"class.icu_69::CollationIterator"* %0) #12
  %902 = zext i16 %901 to i32
  %903 = and i32 %902, 64512
  %904 = icmp eq i32 %903, 56320
  br i1 %904, label %905, label %1119

905:                                              ; preds = %897
  %906 = shl i32 %22, 10
  %907 = add i32 %906, -56613888
  %908 = add i32 %907, %902
  %909 = and i32 %23, 768
  switch i32 %909, label %910 [
    i32 0, label %1119
    i32 256, label %946
  ]

910:                                              ; preds = %905
  %911 = getelementptr inbounds %"struct.icu_69::CollationData", %"struct.icu_69::CollationData"* %21, i64 0, i32 0
  %912 = load %struct.UTrie2*, %struct.UTrie2** %911, align 8
  %913 = getelementptr inbounds %struct.UTrie2, %struct.UTrie2* %912, i64 0, i32 2
  %914 = load i32*, i32** %913, align 8
  %915 = getelementptr inbounds %struct.UTrie2, %struct.UTrie2* %912, i64 0, i32 9
  %916 = load i32, i32* %915, align 4
  %917 = icmp sgt i32 %916, %908
  br i1 %917, label %921, label %918

918:                                              ; preds = %910
  %919 = getelementptr inbounds %struct.UTrie2, %struct.UTrie2* %912, i64 0, i32 10
  %920 = load i32, i32* %919, align 8
  br label %940

921:                                              ; preds = %910
  %922 = getelementptr inbounds %struct.UTrie2, %struct.UTrie2* %912, i64 0, i32 0
  %923 = load i16*, i16** %922, align 8
  %924 = ashr i32 %908, 11
  %925 = add nsw i32 %924, 2080
  %926 = sext i32 %925 to i64
  %927 = getelementptr inbounds i16, i16* %923, i64 %926
  %928 = load i16, i16* %927, align 2
  %929 = zext i16 %928 to i32
  %930 = lshr i32 %908, 5
  %931 = and i32 %930, 63
  %932 = add nuw nsw i32 %931, %929
  %933 = zext i32 %932 to i64
  %934 = getelementptr inbounds i16, i16* %923, i64 %933
  %935 = load i16, i16* %934, align 2
  %936 = zext i16 %935 to i32
  %937 = shl nuw nsw i32 %936, 2
  %938 = and i32 %908, 31
  %939 = add nuw nsw i32 %937, %938
  br label %940

940:                                              ; preds = %918, %921
  %941 = phi i32 [ %920, %918 ], [ %939, %921 ]
  %942 = sext i32 %941 to i64
  %943 = getelementptr inbounds i32, i32* %914, i64 %942
  %944 = load i32, i32* %943, align 4
  %945 = icmp eq i32 %944, 192
  br i1 %945, label %946, label %1119

946:                                              ; preds = %905, %940
  %947 = getelementptr inbounds %"struct.icu_69::CollationData", %"struct.icu_69::CollationData"* %21, i64 0, i32 4
  %948 = load %"struct.icu_69::CollationData"*, %"struct.icu_69::CollationData"** %947, align 8
  %949 = getelementptr inbounds %"struct.icu_69::CollationData", %"struct.icu_69::CollationData"* %948, i64 0, i32 0
  %950 = load %struct.UTrie2*, %struct.UTrie2** %949, align 8
  %951 = getelementptr inbounds %struct.UTrie2, %struct.UTrie2* %950, i64 0, i32 2
  %952 = load i32*, i32** %951, align 8
  %953 = getelementptr inbounds %struct.UTrie2, %struct.UTrie2* %950, i64 0, i32 9
  %954 = load i32, i32* %953, align 4
  %955 = icmp sgt i32 %954, %908
  br i1 %955, label %959, label %956

956:                                              ; preds = %946
  %957 = getelementptr inbounds %struct.UTrie2, %struct.UTrie2* %950, i64 0, i32 10
  %958 = load i32, i32* %957, align 8
  br label %978

959:                                              ; preds = %946
  %960 = getelementptr inbounds %struct.UTrie2, %struct.UTrie2* %950, i64 0, i32 0
  %961 = load i16*, i16** %960, align 8
  %962 = ashr i32 %908, 11
  %963 = add nsw i32 %962, 2080
  %964 = sext i32 %963 to i64
  %965 = getelementptr inbounds i16, i16* %961, i64 %964
  %966 = load i16, i16* %965, align 2
  %967 = zext i16 %966 to i32
  %968 = lshr i32 %908, 5
  %969 = and i32 %968, 63
  %970 = add nuw nsw i32 %969, %967
  %971 = zext i32 %970 to i64
  %972 = getelementptr inbounds i16, i16* %961, i64 %971
  %973 = load i16, i16* %972, align 2
  %974 = zext i16 %973 to i32
  %975 = shl nuw nsw i32 %974, 2
  %976 = and i32 %908, 31
  %977 = add nuw nsw i32 %975, %976
  br label %978

978:                                              ; preds = %956, %959
  %979 = phi i32 [ %958, %956 ], [ %977, %959 ]
  %980 = sext i32 %979 to i64
  %981 = getelementptr inbounds i32, i32* %952, i64 %980
  %982 = load i32, i32* %981, align 4
  br label %1119

983:                                              ; preds = %20
  %984 = getelementptr inbounds %"struct.icu_69::CollationData", %"struct.icu_69::CollationData"* %21, i64 0, i32 2
  %985 = load i64*, i64** %984, align 8
  %986 = lshr i32 %23, 13
  %987 = zext i32 %986 to i64
  %988 = getelementptr inbounds i64, i64* %985, i64 %987
  %989 = load i64, i64* %988, align 8
  %990 = tail call i32 @_ZN6icu_699Collation32getThreeBytePrimaryForOffsetDataEil(i32 %22, i64 %989) #12
  %991 = zext i32 %990 to i64
  %992 = shl nuw i64 %991, 32
  %993 = or i64 %992, 83887360
  %994 = getelementptr inbounds %"class.icu_69::CollationIterator", %"class.icu_69::CollationIterator"* %0, i64 0, i32 3, i32 0
  %995 = load i32, i32* %994, align 8
  %996 = icmp slt i32 %995, 40
  br i1 %996, label %1042, label %997

997:                                              ; preds = %983
  %998 = getelementptr inbounds %"class.icu_69::CollationIterator", %"class.icu_69::CollationIterator"* %0, i64 0, i32 3, i32 1
  %999 = getelementptr inbounds %"class.icu_69::CollationIterator", %"class.icu_69::CollationIterator"* %0, i64 0, i32 3, i32 1, i32 1
  %1000 = load i32, i32* %999, align 8
  %1001 = icmp slt i32 %995, %1000
  br i1 %1001, label %1042, label %1002

1002:                                             ; preds = %997
  %1003 = load i32, i32* %5, align 4
  %1004 = icmp slt i32 %1003, 1
  br i1 %1004, label %1005, label %1193

1005:                                             ; preds = %1002, %1005
  %1006 = phi i32 [ %1009, %1005 ], [ %1000, %1002 ]
  %1007 = icmp slt i32 %1006, 1000
  %1008 = select i1 %1007, i32 2, i32 1
  %1009 = shl nsw i32 %1006, %1008
  %1010 = icmp sgt i32 %1009, %995
  br i1 %1010, label %1011, label %1005

1011:                                             ; preds = %1005
  %1012 = icmp sgt i32 %1009, 0
  br i1 %1012, label %1013, label %1041

1013:                                             ; preds = %1011
  %1014 = sext i32 %1009 to i64
  %1015 = shl nsw i64 %1014, 3
  %1016 = tail call noalias i8* @uprv_malloc_69(i64 %1015) #11
  %1017 = icmp eq i8* %1016, null
  br i1 %1017, label %1041, label %1018

1018:                                             ; preds = %1013
  %1019 = icmp sgt i32 %995, 0
  br i1 %1019, label %1022, label %1020

1020:                                             ; preds = %1018
  %1021 = bitcast %"class.icu_69::MaybeStackArray.0"* %998 to i8**
  br label %1032

1022:                                             ; preds = %1018
  %1023 = load i32, i32* %999, align 8
  %1024 = icmp slt i32 %1023, %995
  %1025 = select i1 %1024, i32 %1023, i32 %995
  %1026 = icmp sgt i32 %1025, %1009
  %1027 = select i1 %1026, i32 %1009, i32 %1025
  %1028 = bitcast %"class.icu_69::MaybeStackArray.0"* %998 to i8**
  %1029 = load i8*, i8** %1028, align 8
  %1030 = sext i32 %1027 to i64
  %1031 = shl nsw i64 %1030, 3
  tail call void @llvm.memcpy.p0i8.p0i8.i64(i8* nonnull align 8 %1016, i8* align 8 %1029, i64 %1031, i1 false) #12
  br label %1032

1032:                                             ; preds = %1022, %1020
  %1033 = phi i8** [ %1021, %1020 ], [ %1028, %1022 ]
  %1034 = getelementptr inbounds %"class.icu_69::CollationIterator", %"class.icu_69::CollationIterator"* %0, i64 0, i32 3, i32 1, i32 2
  %1035 = load i8, i8* %1034, align 4
  %1036 = icmp eq i8 %1035, 0
  br i1 %1036, label %1039, label %1037

1037:                                             ; preds = %1032
  %1038 = load i8*, i8** %1033, align 8
  tail call void @uprv_free_69(i8* %1038) #12
  br label %1039

1039:                                             ; preds = %1037, %1032
  store i8* %1016, i8** %1033, align 8
  store i32 %1009, i32* %999, align 8
  store i8 1, i8* %1034, align 4
  %1040 = load i32, i32* %994, align 8
  br label %1042

1041:                                             ; preds = %1013, %1011
  store i32 7, i32* %5, align 4
  br label %1193

1042:                                             ; preds = %1039, %997, %983
  %1043 = phi i32 [ %995, %997 ], [ %1040, %1039 ], [ %995, %983 ]
  %1044 = add nsw i32 %1043, 1
  store i32 %1044, i32* %994, align 8
  %1045 = sext i32 %1043 to i64
  %1046 = getelementptr inbounds %"class.icu_69::CollationIterator", %"class.icu_69::CollationIterator"* %0, i64 0, i32 3, i32 1, i32 0
  %1047 = load i64*, i64** %1046, align 8
  %1048 = getelementptr inbounds i64, i64* %1047, i64 %1045
  store i64 %993, i64* %1048, align 8
  br label %1193

1049:                                             ; preds = %20
  %1050 = and i32 %22, -2048
  %1051 = icmp eq i32 %1050, 55296
  br i1 %1051, label %1052, label %1058

1052:                                             ; preds = %1049
  %1053 = load i8 (%"class.icu_69::CollationIterator"*)**, i8 (%"class.icu_69::CollationIterator"*)*** %10, align 8
  %1054 = getelementptr inbounds i8 (%"class.icu_69::CollationIterator"*)*, i8 (%"class.icu_69::CollationIterator"*)** %1053, i64 11
  %1055 = load i8 (%"class.icu_69::CollationIterator"*)*, i8 (%"class.icu_69::CollationIterator"*)** %1054, align 8
  %1056 = tail call signext i8 %1055(%"class.icu_69::CollationIterator"* %0) #12
  %1057 = icmp eq i8 %1056, 0
  br i1 %1057, label %1058, label %1125

1058:                                             ; preds = %1052, %1049
  %1059 = tail call i32 @_ZN6icu_699Collation30unassignedPrimaryFromCodePointEi(i32 %22) #12
  %1060 = zext i32 %1059 to i64
  %1061 = shl nuw i64 %1060, 32
  %1062 = or i64 %1061, 83887360
  %1063 = getelementptr inbounds %"class.icu_69::CollationIterator", %"class.icu_69::CollationIterator"* %0, i64 0, i32 3, i32 0
  %1064 = load i32, i32* %1063, align 8
  %1065 = icmp slt i32 %1064, 40
  br i1 %1065, label %1111, label %1066

1066:                                             ; preds = %1058
  %1067 = getelementptr inbounds %"class.icu_69::CollationIterator", %"class.icu_69::CollationIterator"* %0, i64 0, i32 3, i32 1
  %1068 = getelementptr inbounds %"class.icu_69::CollationIterator", %"class.icu_69::CollationIterator"* %0, i64 0, i32 3, i32 1, i32 1
  %1069 = load i32, i32* %1068, align 8
  %1070 = icmp slt i32 %1064, %1069
  br i1 %1070, label %1111, label %1071

1071:                                             ; preds = %1066
  %1072 = load i32, i32* %5, align 4
  %1073 = icmp slt i32 %1072, 1
  br i1 %1073, label %1074, label %1193

1074:                                             ; preds = %1071, %1074
  %1075 = phi i32 [ %1078, %1074 ], [ %1069, %1071 ]
  %1076 = icmp slt i32 %1075, 1000
  %1077 = select i1 %1076, i32 2, i32 1
  %1078 = shl nsw i32 %1075, %1077
  %1079 = icmp sgt i32 %1078, %1064
  br i1 %1079, label %1080, label %1074

1080:                                             ; preds = %1074
  %1081 = icmp sgt i32 %1078, 0
  br i1 %1081, label %1082, label %1110

1082:                                             ; preds = %1080
  %1083 = sext i32 %1078 to i64
  %1084 = shl nsw i64 %1083, 3
  %1085 = tail call noalias i8* @uprv_malloc_69(i64 %1084) #11
  %1086 = icmp eq i8* %1085, null
  br i1 %1086, label %1110, label %1087

1087:                                             ; preds = %1082
  %1088 = icmp sgt i32 %1064, 0
  br i1 %1088, label %1091, label %1089

1089:                                             ; preds = %1087
  %1090 = bitcast %"class.icu_69::MaybeStackArray.0"* %1067 to i8**
  br label %1101

1091:                                             ; preds = %1087
  %1092 = load i32, i32* %1068, align 8
  %1093 = icmp slt i32 %1092, %1064
  %1094 = select i1 %1093, i32 %1092, i32 %1064
  %1095 = icmp sgt i32 %1094, %1078
  %1096 = select i1 %1095, i32 %1078, i32 %1094
  %1097 = bitcast %"class.icu_69::MaybeStackArray.0"* %1067 to i8**
  %1098 = load i8*, i8** %1097, align 8
  %1099 = sext i32 %1096 to i64
  %1100 = shl nsw i64 %1099, 3
  tail call void @llvm.memcpy.p0i8.p0i8.i64(i8* nonnull align 8 %1085, i8* align 8 %1098, i64 %1100, i1 false) #12
  br label %1101

1101:                                             ; preds = %1091, %1089
  %1102 = phi i8** [ %1090, %1089 ], [ %1097, %1091 ]
  %1103 = getelementptr inbounds %"class.icu_69::CollationIterator", %"class.icu_69::CollationIterator"* %0, i64 0, i32 3, i32 1, i32 2
  %1104 = load i8, i8* %1103, align 4
  %1105 = icmp eq i8 %1104, 0
  br i1 %1105, label %1108, label %1106

1106:                                             ; preds = %1101
  %1107 = load i8*, i8** %1102, align 8
  tail call void @uprv_free_69(i8* %1107) #12
  br label %1108

1108:                                             ; preds = %1106, %1101
  store i8* %1085, i8** %1102, align 8
  store i32 %1078, i32* %1068, align 8
  store i8 1, i8* %1103, align 4
  %1109 = load i32, i32* %1063, align 8
  br label %1111

1110:                                             ; preds = %1082, %1080
  store i32 7, i32* %5, align 4
  br label %1193

1111:                                             ; preds = %1108, %1066, %1058
  %1112 = phi i32 [ %1064, %1066 ], [ %1109, %1108 ], [ %1064, %1058 ]
  %1113 = add nsw i32 %1112, 1
  store i32 %1113, i32* %1063, align 8
  %1114 = sext i32 %1112 to i64
  %1115 = getelementptr inbounds %"class.icu_69::CollationIterator", %"class.icu_69::CollationIterator"* %0, i64 0, i32 3, i32 1, i32 0
  %1116 = load i64*, i64** %1115, align 8
  %1117 = getelementptr inbounds i64, i64* %1116, i64 %1114
  store i64 %1062, i64* %1117, align 8
  br label %1193

1118:                                             ; preds = %20
  unreachable

1119:                                             ; preds = %551, %640, %633, %642, %578, %491, %523, %472, %892, %462, %940, %978, %905, %897, %464, %390, %456, %721, %651
  %1120 = phi i32 [ %896, %892 ], [ %724, %721 ], [ %657, %651 ], [ %468, %464 ], [ %463, %462 ], [ %460, %456 ], [ %387, %390 ], [ %982, %978 ], [ %944, %940 ], [ -1, %905 ], [ -1, %897 ], [ %484, %640 ], [ %484, %633 ], [ %645, %642 ], [ %484, %578 ], [ %484, %491 ], [ %484, %523 ], [ %484, %472 ], [ %484, %551 ]
  %1121 = phi i32 [ -1, %892 ], [ %22, %721 ], [ %22, %651 ], [ %22, %464 ], [ %22, %462 ], [ %22, %456 ], [ %22, %390 ], [ %908, %978 ], [ %908, %940 ], [ %908, %905 ], [ %22, %897 ], [ %22, %640 ], [ %22, %633 ], [ %22, %642 ], [ %22, %578 ], [ %22, %491 ], [ %22, %523 ], [ %22, %472 ], [ %22, %551 ]
  %1122 = phi %"struct.icu_69::CollationData"* [ %21, %892 ], [ %21, %721 ], [ %21, %651 ], [ %21, %464 ], [ %21, %462 ], [ %395, %456 ], [ %21, %390 ], [ %948, %978 ], [ %21, %940 ], [ %21, %905 ], [ %21, %897 ], [ %21, %640 ], [ %21, %633 ], [ %21, %642 ], [ %21, %578 ], [ %21, %491 ], [ %21, %523 ], [ %21, %472 ], [ %21, %551 ]
  %1123 = and i32 %1120, 192
  %1124 = icmp eq i32 %1123, 192
  br i1 %1124, label %20, label %1125

1125:                                             ; preds = %1119, %1052, %6
  %1126 = phi i32 [ %3, %6 ], [ -195323, %1052 ], [ %1120, %1119 ]
  %1127 = and i32 %1126, -65536
  %1128 = zext i32 %1127 to i64
  %1129 = shl nuw i64 %1128, 32
  %1130 = shl i32 %1126, 16
  %1131 = and i32 %1130, -16777216
  %1132 = zext i32 %1131 to i64
  %1133 = or i64 %1129, %1132
  %1134 = shl i32 %1126, 8
  %1135 = and i32 %1134, 65280
  %1136 = zext i32 %1135 to i64
  %1137 = or i64 %1133, %1136
  %1138 = getelementptr inbounds %"class.icu_69::CollationIterator", %"class.icu_69::CollationIterator"* %0, i64 0, i32 3, i32 0
  %1139 = load i32, i32* %1138, align 8
  %1140 = icmp slt i32 %1139, 40
  br i1 %1140, label %1186, label %1141

1141:                                             ; preds = %1125
  %1142 = getelementptr inbounds %"class.icu_69::CollationIterator", %"class.icu_69::CollationIterator"* %0, i64 0, i32 3, i32 1
  %1143 = getelementptr inbounds %"class.icu_69::CollationIterator", %"class.icu_69::CollationIterator"* %0, i64 0, i32 3, i32 1, i32 1
  %1144 = load i32, i32* %1143, align 8
  %1145 = icmp slt i32 %1139, %1144
  br i1 %1145, label %1186, label %1146

1146:                                             ; preds = %1141
  %1147 = load i32, i32* %5, align 4
  %1148 = icmp slt i32 %1147, 1
  br i1 %1148, label %1149, label %1193

1149:                                             ; preds = %1146, %1149
  %1150 = phi i32 [ %1153, %1149 ], [ %1144, %1146 ]
  %1151 = icmp slt i32 %1150, 1000
  %1152 = select i1 %1151, i32 2, i32 1
  %1153 = shl nsw i32 %1150, %1152
  %1154 = icmp sgt i32 %1153, %1139
  br i1 %1154, label %1155, label %1149

1155:                                             ; preds = %1149
  %1156 = icmp sgt i32 %1153, 0
  br i1 %1156, label %1157, label %1185

1157:                                             ; preds = %1155
  %1158 = sext i32 %1153 to i64
  %1159 = shl nsw i64 %1158, 3
  %1160 = tail call noalias i8* @uprv_malloc_69(i64 %1159) #11
  %1161 = icmp eq i8* %1160, null
  br i1 %1161, label %1185, label %1162

1162:                                             ; preds = %1157
  %1163 = icmp sgt i32 %1139, 0
  br i1 %1163, label %1166, label %1164

1164:                                             ; preds = %1162
  %1165 = bitcast %"class.icu_69::MaybeStackArray.0"* %1142 to i8**
  br label %1176

1166:                                             ; preds = %1162
  %1167 = load i32, i32* %1143, align 8
  %1168 = icmp slt i32 %1167, %1139
  %1169 = select i1 %1168, i32 %1167, i32 %1139
  %1170 = icmp sgt i32 %1169, %1153
  %1171 = select i1 %1170, i32 %1153, i32 %1169
  %1172 = bitcast %"class.icu_69::MaybeStackArray.0"* %1142 to i8**
  %1173 = load i8*, i8** %1172, align 8
  %1174 = sext i32 %1171 to i64
  %1175 = shl nsw i64 %1174, 3
  tail call void @llvm.memcpy.p0i8.p0i8.i64(i8* nonnull align 8 %1160, i8* align 8 %1173, i64 %1175, i1 false) #12
  br label %1176

1176:                                             ; preds = %1166, %1164
  %1177 = phi i8** [ %1165, %1164 ], [ %1172, %1166 ]
  %1178 = getelementptr inbounds %"class.icu_69::CollationIterator", %"class.icu_69::CollationIterator"* %0, i64 0, i32 3, i32 1, i32 2
  %1179 = load i8, i8* %1178, align 4
  %1180 = icmp eq i8 %1179, 0
  br i1 %1180, label %1183, label %1181

1181:                                             ; preds = %1176
  %1182 = load i8*, i8** %1177, align 8
  tail call void @uprv_free_69(i8* %1182) #12
  br label %1183

1183:                                             ; preds = %1181, %1176
  store i8* %1160, i8** %1177, align 8
  store i32 %1153, i32* %1143, align 8
  store i8 1, i8* %1178, align 4
  %1184 = load i32, i32* %1138, align 8
  br label %1186

1185:                                             ; preds = %1157, %1155
  store i32 7, i32* %5, align 4
  br label %1193

1186:                                             ; preds = %1183, %1141, %1125
  %1187 = phi i32 [ %1139, %1141 ], [ %1184, %1183 ], [ %1139, %1125 ]
  %1188 = add nsw i32 %1187, 1
  store i32 %1188, i32* %1138, align 8
  %1189 = sext i32 %1187 to i64
  %1190 = getelementptr inbounds %"class.icu_69::CollationIterator", %"class.icu_69::CollationIterator"* %0, i64 0, i32 3, i32 1, i32 0
  %1191 = load i64*, i64** %1190, align 8
  %1192 = getelementptr inbounds i64, i64* %1191, i64 %1189
  store i64 %1137, i64* %1192, align 8
  br label %1193

1193:                                             ; preds = %883, %642, %383, %371, %306, %784, %745, %877, %844, %368, %330, %277, %239, %198, %158, %1186, %1185, %1146, %1111, %1110, %1071, %1042, %1041, %1002, %714, %713, %674, %140, %139, %100, %82, %81, %42, %25, %199, %28, %650
  ret void
}

; Function Attrs: nounwind ssp uwtable
define hidden i32 @_ZN6icu_6917CollationIterator17getCE32FromPrefixEPKNS_13CollationDataEjR10UErrorCode(%"class.icu_69::CollationIterator"*, %"struct.icu_69::CollationData"* nocapture readonly, i32, i32* dereferenceable(4)) local_unnamed_addr #0 align 2 {
  %5 = alloca %"class.icu_69::UCharsTrie", align 8
  %6 = getelementptr inbounds %"struct.icu_69::CollationData", %"struct.icu_69::CollationData"* %1, i64 0, i32 3
  %7 = load i16*, i16** %6, align 8
  %8 = lshr i32 %2, 13
  %9 = zext i32 %8 to i64
  %10 = getelementptr inbounds i16, i16* %7, i64 %9
  %11 = load i16, i16* %10, align 2
  %12 = zext i16 %11 to i32
  %13 = shl nuw i32 %12, 16
  %14 = getelementptr inbounds i16, i16* %10, i64 1
  %15 = load i16, i16* %14, align 2
  %16 = zext i16 %15 to i32
  %17 = or i32 %13, %16
  %18 = getelementptr inbounds i16, i16* %10, i64 2
  %19 = bitcast %"class.icu_69::UCharsTrie"* %5 to i8*
  call void @llvm.lifetime.start.p0i8(i64 32, i8* nonnull %19) #12
  %20 = getelementptr inbounds %"class.icu_69::UCharsTrie", %"class.icu_69::UCharsTrie"* %5, i64 0, i32 0
  %21 = getelementptr inbounds %"class.icu_69::UCharsTrie", %"class.icu_69::UCharsTrie"* %5, i64 0, i32 1
  %22 = getelementptr inbounds %"class.icu_69::UCharsTrie", %"class.icu_69::UCharsTrie"* %5, i64 0, i32 2
  %23 = getelementptr inbounds %"class.icu_69::UCharsTrie", %"class.icu_69::UCharsTrie"* %5, i64 0, i32 3
  %24 = ptrtoint i16* %18 to i64
  %25 = bitcast %"class.icu_69::UCharsTrie"* %5 to i8*
  call void @llvm.memset.p0i8.i64(i8* nonnull align 8 %25, i8 -86, i64 32, i1 false)
  store i16* null, i16** %20, align 8
  %26 = bitcast i16** %21 to i64*
  store i64 %24, i64* %26, align 8
  %27 = bitcast i16** %22 to i64*
  store i64 %24, i64* %27, align 8
  store i32 -1, i32* %23, align 8
  tail call void asm sideeffect "", "rm,~{memory},~{dirflag},~{fpsr},~{flags}"(i16* %18) #12, !srcloc !4
  %28 = bitcast %"class.icu_69::CollationIterator"* %0 to i32 (%"class.icu_69::CollationIterator"*, i32*)***
  br label %29

29:                                               ; preds = %88, %4
  %30 = phi i32 [ %17, %4 ], [ %89, %88 ]
  %31 = phi i32 [ 0, %4 ], [ %38, %88 ]
  %32 = load i32 (%"class.icu_69::CollationIterator"*, i32*)**, i32 (%"class.icu_69::CollationIterator"*, i32*)*** %28, align 8
  %33 = getelementptr inbounds i32 (%"class.icu_69::CollationIterator"*, i32*)*, i32 (%"class.icu_69::CollationIterator"*, i32*)** %32, i64 7
  %34 = load i32 (%"class.icu_69::CollationIterator"*, i32*)*, i32 (%"class.icu_69::CollationIterator"*, i32*)** %33, align 8
  %35 = call i32 %34(%"class.icu_69::CollationIterator"* %0, i32* dereferenceable(4) %3) #12
  %36 = icmp slt i32 %35, 0
  br i1 %36, label %92, label %37

37:                                               ; preds = %29
  %38 = add nuw nsw i32 %31, 1
  %39 = call i32 @_ZN6icu_6910UCharsTrie16nextForCodePointEi(%"class.icu_69::UCharsTrie"* nonnull %5, i32 %35) #12
  %40 = icmp sgt i32 %39, 1
  br i1 %40, label %41, label %88

41:                                               ; preds = %37
  %42 = load i16*, i16** %22, align 8
  %43 = getelementptr inbounds i16, i16* %42, i64 1
  %44 = load i16, i16* %42, align 2
  %45 = zext i16 %44 to i32
  %46 = icmp slt i16 %44, 0
  br i1 %46, label %47, label %66

47:                                               ; preds = %41
  %48 = and i32 %45, 32767
  %49 = icmp ult i32 %48, 16384
  br i1 %49, label %88, label %50

50:                                               ; preds = %47
  %51 = icmp eq i32 %48, 32767
  br i1 %51, label %58, label %52

52:                                               ; preds = %50
  %53 = shl nuw nsw i32 %48, 16
  %54 = add nsw i32 %53, -1073741824
  %55 = load i16, i16* %43, align 2
  %56 = zext i16 %55 to i32
  %57 = or i32 %54, %56
  br label %88

58:                                               ; preds = %50
  %59 = load i16, i16* %43, align 2
  %60 = zext i16 %59 to i32
  %61 = shl nuw i32 %60, 16
  %62 = getelementptr inbounds i16, i16* %42, i64 2
  %63 = load i16, i16* %62, align 2
  %64 = zext i16 %63 to i32
  %65 = or i32 %61, %64
  br label %88

66:                                               ; preds = %41
  %67 = icmp ult i16 %44, 16448
  br i1 %67, label %68, label %71

68:                                               ; preds = %66
  %69 = lshr i32 %45, 6
  %70 = add nsw i32 %69, -1
  br label %88

71:                                               ; preds = %66
  %72 = icmp ult i16 %44, 32704
  br i1 %72, label %73, label %80

73:                                               ; preds = %71
  %74 = shl nuw nsw i32 %45, 10
  %75 = and i32 %74, 33488896
  %76 = add nsw i32 %75, -16842752
  %77 = load i16, i16* %43, align 2
  %78 = zext i16 %77 to i32
  %79 = or i32 %76, %78
  br label %88

80:                                               ; preds = %71
  %81 = load i16, i16* %43, align 2
  %82 = zext i16 %81 to i32
  %83 = shl nuw i32 %82, 16
  %84 = getelementptr inbounds i16, i16* %42, i64 2
  %85 = load i16, i16* %84, align 2
  %86 = zext i16 %85 to i32
  %87 = or i32 %83, %86
  br label %88

88:                                               ; preds = %80, %73, %68, %58, %52, %47, %37
  %89 = phi i32 [ %30, %37 ], [ %57, %52 ], [ %65, %58 ], [ %48, %47 ], [ %70, %68 ], [ %79, %73 ], [ %87, %80 ]
  %90 = and i32 %39, 1
  %91 = icmp eq i32 %90, 0
  br i1 %91, label %92, label %29

92:                                               ; preds = %88, %29
  %93 = phi i32 [ %30, %29 ], [ %89, %88 ]
  %94 = phi i32 [ %31, %29 ], [ %38, %88 ]
  %95 = bitcast %"class.icu_69::CollationIterator"* %0 to void (%"class.icu_69::CollationIterator"*, i32, i32*)***
  %96 = load void (%"class.icu_69::CollationIterator"*, i32, i32*)**, void (%"class.icu_69::CollationIterator"*, i32, i32*)*** %95, align 8
  %97 = getelementptr inbounds void (%"class.icu_69::CollationIterator"*, i32, i32*)*, void (%"class.icu_69::CollationIterator"*, i32, i32*)** %96, i64 12
  %98 = load void (%"class.icu_69::CollationIterator"*, i32, i32*)*, void (%"class.icu_69::CollationIterator"*, i32, i32*)** %97, align 8
  call void %98(%"class.icu_69::CollationIterator"* %0, i32 %94, i32* dereferenceable(4) %3) #12
  call void @_ZN6icu_6910UCharsTrieD1Ev(%"class.icu_69::UCharsTrie"* nonnull %5) #12
  call void @llvm.lifetime.end.p0i8(i64 32, i8* nonnull %19) #12
  ret i32 %93
}

; Function Attrs: nounwind ssp uwtable
define hidden i32 @_ZN6icu_6917CollationIterator20nextSkippedCodePointER10UErrorCode(%"class.icu_69::CollationIterator"*, i32* dereferenceable(4)) local_unnamed_addr #0 align 2 {
  %3 = getelementptr inbounds %"class.icu_69::CollationIterator", %"class.icu_69::CollationIterator"* %0, i64 0, i32 6
  %4 = load %"class.icu_69::SkippedState"*, %"class.icu_69::SkippedState"** %3, align 8
  %5 = icmp eq %"class.icu_69::SkippedState"* %4, null
  br i1 %5, label %28, label %6

6:                                                ; preds = %2
  %7 = getelementptr inbounds %"class.icu_69::SkippedState", %"class.icu_69::SkippedState"* %4, i64 0, i32 3
  %8 = load i32, i32* %7, align 8
  %9 = getelementptr inbounds %"class.icu_69::SkippedState", %"class.icu_69::SkippedState"* %4, i64 0, i32 1, i32 1, i32 0, i32 0
  %10 = load i16, i16* %9, align 8
  %11 = icmp slt i16 %10, 0
  br i1 %11, label %15, label %12

12:                                               ; preds = %6
  %13 = lshr i16 %10, 5
  %14 = zext i16 %13 to i32
  br label %18

15:                                               ; preds = %6
  %16 = getelementptr inbounds %"class.icu_69::SkippedState", %"class.icu_69::SkippedState"* %4, i64 0, i32 1, i32 1, i32 0, i32 1
  %17 = load i32, i32* %16, align 4
  br label %18

18:                                               ; preds = %12, %15
  %19 = phi i32 [ %14, %12 ], [ %17, %15 ]
  %20 = icmp slt i32 %8, %19
  br i1 %20, label %21, label %28

21:                                               ; preds = %18
  %22 = getelementptr inbounds %"class.icu_69::SkippedState", %"class.icu_69::SkippedState"* %4, i64 0, i32 1
  %23 = tail call i32 @_ZNK6icu_6913UnicodeString8char32AtEi(%"class.icu_69::UnicodeString"* %22, i32 %8) #12
  %24 = icmp ult i32 %23, 65536
  %25 = select i1 %24, i32 1, i32 2
  %26 = load i32, i32* %7, align 8
  %27 = add nsw i32 %25, %26
  store i32 %27, i32* %7, align 8
  br label %57

28:                                               ; preds = %18, %2
  %29 = getelementptr inbounds %"class.icu_69::CollationIterator", %"class.icu_69::CollationIterator"* %0, i64 0, i32 7
  %30 = load i32, i32* %29, align 8
  %31 = icmp eq i32 %30, 0
  br i1 %31, label %57, label %32

32:                                               ; preds = %28
  %33 = bitcast %"class.icu_69::CollationIterator"* %0 to i32 (%"class.icu_69::CollationIterator"*, i32*)***
  %34 = load i32 (%"class.icu_69::CollationIterator"*, i32*)**, i32 (%"class.icu_69::CollationIterator"*, i32*)*** %33, align 8
  %35 = getelementptr inbounds i32 (%"class.icu_69::CollationIterator"*, i32*)*, i32 (%"class.icu_69::CollationIterator"*, i32*)** %34, i64 6
  %36 = load i32 (%"class.icu_69::CollationIterator"*, i32*)*, i32 (%"class.icu_69::CollationIterator"*, i32*)** %35, align 8
  %37 = tail call i32 %36(%"class.icu_69::CollationIterator"* %0, i32* dereferenceable(4) %1) #12
  %38 = load %"class.icu_69::SkippedState"*, %"class.icu_69::SkippedState"** %3, align 8
  %39 = icmp eq %"class.icu_69::SkippedState"* %38, null
  br i1 %39, label %50, label %40

40:                                               ; preds = %32
  %41 = getelementptr inbounds %"class.icu_69::SkippedState", %"class.icu_69::SkippedState"* %38, i64 0, i32 1, i32 1, i32 0, i32 0
  %42 = load i16, i16* %41, align 8
  %43 = icmp ugt i16 %42, 31
  %44 = icmp sgt i32 %37, -1
  %45 = and i1 %44, %43
  br i1 %45, label %46, label %50

46:                                               ; preds = %40
  %47 = getelementptr inbounds %"class.icu_69::SkippedState", %"class.icu_69::SkippedState"* %38, i64 0, i32 3
  %48 = load i32, i32* %47, align 8
  %49 = add nsw i32 %48, 1
  store i32 %49, i32* %47, align 8
  br label %50

50:                                               ; preds = %32, %40, %46
  %51 = load i32, i32* %29, align 8
  %52 = icmp sgt i32 %51, 0
  %53 = icmp sgt i32 %37, -1
  %54 = and i1 %53, %52
  br i1 %54, label %55, label %57

55:                                               ; preds = %50
  %56 = add nsw i32 %51, -1
  store i32 %56, i32* %29, align 8
  br label %57

57:                                               ; preds = %50, %55, %28, %21
  %58 = phi i32 [ %23, %21 ], [ -1, %28 ], [ %37, %55 ], [ %37, %50 ]
  ret i32 %58
}

; Function Attrs: nounwind ssp uwtable
define hidden void @_ZN6icu_6917CollationIterator18backwardNumSkippedEiR10UErrorCode(%"class.icu_69::CollationIterator"*, i32, i32* dereferenceable(4)) local_unnamed_addr #0 align 2 {
  %4 = getelementptr inbounds %"class.icu_69::CollationIterator", %"class.icu_69::CollationIterator"* %0, i64 0, i32 6
  %5 = load %"class.icu_69::SkippedState"*, %"class.icu_69::SkippedState"** %4, align 8
  %6 = icmp eq %"class.icu_69::SkippedState"* %5, null
  br i1 %6, label %36, label %7

7:                                                ; preds = %3
  %8 = getelementptr inbounds %"class.icu_69::SkippedState", %"class.icu_69::SkippedState"* %5, i64 0, i32 1, i32 1, i32 0, i32 0
  %9 = load i16, i16* %8, align 8
  %10 = icmp ugt i16 %9, 31
  br i1 %10, label %11, label %36

11:                                               ; preds = %7
  %12 = getelementptr inbounds %"class.icu_69::SkippedState", %"class.icu_69::SkippedState"* %5, i64 0, i32 1
  %13 = icmp slt i16 %9, 0
  br i1 %13, label %17, label %14

14:                                               ; preds = %11
  %15 = lshr i16 %9, 5
  %16 = zext i16 %15 to i32
  br label %20

17:                                               ; preds = %11
  %18 = getelementptr inbounds %"class.icu_69::SkippedState", %"class.icu_69::SkippedState"* %5, i64 0, i32 1, i32 1, i32 0, i32 1
  %19 = load i32, i32* %18, align 4
  br label %20

20:                                               ; preds = %17, %14
  %21 = phi i32 [ %16, %14 ], [ %19, %17 ]
  %22 = getelementptr inbounds %"class.icu_69::SkippedState", %"class.icu_69::SkippedState"* %5, i64 0, i32 3
  %23 = load i32, i32* %22, align 8
  %24 = sub nsw i32 %23, %21
  %25 = icmp sgt i32 %24, 0
  br i1 %25, label %26, label %33

26:                                               ; preds = %20
  %27 = icmp slt i32 %24, %1
  br i1 %27, label %30, label %28

28:                                               ; preds = %26
  %29 = sub nsw i32 %23, %1
  store i32 %29, i32* %22, align 8
  br label %36

30:                                               ; preds = %26
  %31 = sub nsw i32 %24, %1
  %32 = tail call i32 @_ZNK6icu_6913UnicodeString11moveIndex32Eii(%"class.icu_69::UnicodeString"* %12, i32 %21, i32 %31) #12
  store i32 %32, i32* %22, align 8
  br label %36

33:                                               ; preds = %20
  %34 = sub nsw i32 0, %1
  %35 = tail call i32 @_ZNK6icu_6913UnicodeString11moveIndex32Eii(%"class.icu_69::UnicodeString"* %12, i32 %23, i32 %34) #12
  store i32 %35, i32* %22, align 8
  br label %36

36:                                               ; preds = %33, %30, %28, %7, %3
  %37 = phi i32 [ %1, %7 ], [ %1, %3 ], [ %1, %28 ], [ %24, %30 ], [ 0, %33 ]
  %38 = bitcast %"class.icu_69::CollationIterator"* %0 to void (%"class.icu_69::CollationIterator"*, i32, i32*)***
  %39 = load void (%"class.icu_69::CollationIterator"*, i32, i32*)**, void (%"class.icu_69::CollationIterator"*, i32, i32*)*** %38, align 8
  %40 = getelementptr inbounds void (%"class.icu_69::CollationIterator"*, i32, i32*)*, void (%"class.icu_69::CollationIterator"*, i32, i32*)** %39, i64 13
  %41 = load void (%"class.icu_69::CollationIterator"*, i32, i32*)*, void (%"class.icu_69::CollationIterator"*, i32, i32*)** %40, align 8
  tail call void %41(%"class.icu_69::CollationIterator"* %0, i32 %37, i32* dereferenceable(4) %2) #12
  %42 = getelementptr inbounds %"class.icu_69::CollationIterator", %"class.icu_69::CollationIterator"* %0, i64 0, i32 7
  %43 = load i32, i32* %42, align 8
  %44 = icmp sgt i32 %43, -1
  br i1 %44, label %45, label %47

45:                                               ; preds = %36
  %46 = add nsw i32 %43, %37
  store i32 %46, i32* %42, align 8
  br label %47

47:                                               ; preds = %45, %36
  ret void
}

; Function Attrs: nounwind ssp uwtable
define hidden i32 @_ZN6icu_6917CollationIterator23nextCE32FromContractionEPKNS_13CollationDataEjPKDsjiR10UErrorCode(%"class.icu_69::CollationIterator"*, %"struct.icu_69::CollationData"*, i32, i16*, i32, i32, i32* dereferenceable(4)) local_unnamed_addr #0 align 2 {
  %8 = alloca %"class.icu_69::UCharsTrie", align 8
  %9 = bitcast %"class.icu_69::UCharsTrie"* %8 to i8*
  call void @llvm.lifetime.start.p0i8(i64 32, i8* nonnull %9) #12
  %10 = getelementptr inbounds %"class.icu_69::UCharsTrie", %"class.icu_69::UCharsTrie"* %8, i64 0, i32 0
  %11 = getelementptr inbounds %"class.icu_69::UCharsTrie", %"class.icu_69::UCharsTrie"* %8, i64 0, i32 1
  %12 = getelementptr inbounds %"class.icu_69::UCharsTrie", %"class.icu_69::UCharsTrie"* %8, i64 0, i32 2
  %13 = getelementptr inbounds %"class.icu_69::UCharsTrie", %"class.icu_69::UCharsTrie"* %8, i64 0, i32 3
  %14 = ptrtoint i16* %3 to i64
  %15 = bitcast %"class.icu_69::UCharsTrie"* %8 to i8*
  call void @llvm.memset.p0i8.i64(i8* nonnull align 8 %15, i8 -86, i64 32, i1 false)
  store i16* null, i16** %10, align 8
  %16 = bitcast i16** %11 to i64*
  store i64 %14, i64* %16, align 8
  %17 = bitcast i16** %12 to i64*
  store i64 %14, i64* %17, align 8
  store i32 -1, i32* %13, align 8
  tail call void asm sideeffect "", "rm,~{memory},~{dirflag},~{fpsr},~{flags}"(i16* %3) #12, !srcloc !4
  %18 = getelementptr inbounds %"class.icu_69::CollationIterator", %"class.icu_69::CollationIterator"* %0, i64 0, i32 6
  %19 = load %"class.icu_69::SkippedState"*, %"class.icu_69::SkippedState"** %18, align 8
  %20 = icmp eq %"class.icu_69::SkippedState"* %19, null
  br i1 %20, label %31, label %21

21:                                               ; preds = %7
  %22 = getelementptr inbounds %"class.icu_69::SkippedState", %"class.icu_69::SkippedState"* %19, i64 0, i32 1, i32 1, i32 0, i32 0
  %23 = load i16, i16* %22, align 8
  %24 = icmp ugt i16 %23, 31
  br i1 %24, label %25, label %31

25:                                               ; preds = %21
  %26 = getelementptr inbounds %"class.icu_69::SkippedState", %"class.icu_69::SkippedState"* %19, i64 0, i32 5
  %27 = bitcast %"class.icu_69::UCharsTrie::State"* %26 to i64*
  store i64 %14, i64* %27, align 8
  %28 = getelementptr inbounds %"class.icu_69::SkippedState", %"class.icu_69::SkippedState"* %19, i64 0, i32 5, i32 1
  %29 = bitcast i16** %28 to i64*
  store i64 %14, i64* %29, align 8
  %30 = getelementptr inbounds %"class.icu_69::SkippedState", %"class.icu_69::SkippedState"* %19, i64 0, i32 5, i32 2
  store i32 -1, i32* %30, align 8
  br label %31

31:                                               ; preds = %21, %7, %25
  %32 = call i32 @_ZN6icu_6910UCharsTrie17firstForCodePointEi(%"class.icu_69::UCharsTrie"* nonnull %8, i32 %5) #12
  %33 = getelementptr inbounds %"class.icu_69::CollationIterator", %"class.icu_69::CollationIterator"* %0, i64 0, i32 7
  %34 = bitcast %"class.icu_69::CollationIterator"* %0 to i32 (%"class.icu_69::CollationIterator"*, i32*)***
  %35 = bitcast i16** %11 to <2 x i64>*
  br label %36

36:                                               ; preds = %363, %31
  %37 = phi i32 [ %4, %31 ], [ %364, %363 ]
  %38 = phi i32 [ %5, %31 ], [ %365, %363 ]
  %39 = phi i32 [ 1, %31 ], [ %367, %363 ]
  %40 = phi i32 [ 1, %31 ], [ %366, %363 ]
  %41 = phi i32 [ %32, %31 ], [ %368, %363 ]
  %42 = icmp sgt i32 %41, 1
  br i1 %42, label %43, label %163

43:                                               ; preds = %36
  %44 = load i16*, i16** %12, align 8
  %45 = getelementptr inbounds i16, i16* %44, i64 1
  %46 = load i16, i16* %44, align 2
  %47 = zext i16 %46 to i32
  %48 = icmp slt i16 %46, 0
  br i1 %48, label %49, label %68

49:                                               ; preds = %43
  %50 = and i32 %47, 32767
  %51 = icmp ult i32 %50, 16384
  br i1 %51, label %90, label %52

52:                                               ; preds = %49
  %53 = icmp eq i32 %50, 32767
  br i1 %53, label %60, label %54

54:                                               ; preds = %52
  %55 = shl nuw nsw i32 %50, 16
  %56 = add nsw i32 %55, -1073741824
  %57 = load i16, i16* %45, align 2
  %58 = zext i16 %57 to i32
  %59 = or i32 %56, %58
  br label %90

60:                                               ; preds = %52
  %61 = load i16, i16* %45, align 2
  %62 = zext i16 %61 to i32
  %63 = shl nuw i32 %62, 16
  %64 = getelementptr inbounds i16, i16* %44, i64 2
  %65 = load i16, i16* %64, align 2
  %66 = zext i16 %65 to i32
  %67 = or i32 %63, %66
  br label %90

68:                                               ; preds = %43
  %69 = icmp ult i16 %46, 16448
  br i1 %69, label %70, label %73

70:                                               ; preds = %68
  %71 = lshr i32 %47, 6
  %72 = add nsw i32 %71, -1
  br label %90

73:                                               ; preds = %68
  %74 = icmp ult i16 %46, 32704
  br i1 %74, label %75, label %82

75:                                               ; preds = %73
  %76 = shl nuw nsw i32 %47, 10
  %77 = and i32 %76, 33488896
  %78 = add nsw i32 %77, -16842752
  %79 = load i16, i16* %45, align 2
  %80 = zext i16 %79 to i32
  %81 = or i32 %78, %80
  br label %90

82:                                               ; preds = %73
  %83 = load i16, i16* %45, align 2
  %84 = zext i16 %83 to i32
  %85 = shl nuw i32 %84, 16
  %86 = getelementptr inbounds i16, i16* %44, i64 2
  %87 = load i16, i16* %86, align 2
  %88 = zext i16 %87 to i32
  %89 = or i32 %85, %88
  br label %90

90:                                               ; preds = %49, %54, %60, %70, %75, %82
  %91 = phi i32 [ %59, %54 ], [ %67, %60 ], [ %50, %49 ], [ %72, %70 ], [ %81, %75 ], [ %89, %82 ]
  %92 = and i32 %41, 1
  %93 = icmp eq i32 %92, 0
  br i1 %93, label %412, label %94

94:                                               ; preds = %90
  %95 = load %"class.icu_69::SkippedState"*, %"class.icu_69::SkippedState"** %18, align 8
  %96 = icmp eq %"class.icu_69::SkippedState"* %95, null
  br i1 %96, label %119, label %97

97:                                               ; preds = %94
  %98 = getelementptr inbounds %"class.icu_69::SkippedState", %"class.icu_69::SkippedState"* %95, i64 0, i32 3
  %99 = load i32, i32* %98, align 8
  %100 = getelementptr inbounds %"class.icu_69::SkippedState", %"class.icu_69::SkippedState"* %95, i64 0, i32 1, i32 1, i32 0, i32 0
  %101 = load i16, i16* %100, align 8
  %102 = icmp slt i16 %101, 0
  br i1 %102, label %106, label %103

103:                                              ; preds = %97
  %104 = lshr i16 %101, 5
  %105 = zext i16 %104 to i32
  br label %109

106:                                              ; preds = %97
  %107 = getelementptr inbounds %"class.icu_69::SkippedState", %"class.icu_69::SkippedState"* %95, i64 0, i32 1, i32 1, i32 0, i32 1
  %108 = load i32, i32* %107, align 4
  br label %109

109:                                              ; preds = %106, %103
  %110 = phi i32 [ %105, %103 ], [ %108, %106 ]
  %111 = icmp slt i32 %99, %110
  br i1 %111, label %112, label %119

112:                                              ; preds = %109
  %113 = getelementptr inbounds %"class.icu_69::SkippedState", %"class.icu_69::SkippedState"* %95, i64 0, i32 1
  %114 = call i32 @_ZNK6icu_6913UnicodeString8char32AtEi(%"class.icu_69::UnicodeString"* %113, i32 %99) #12
  %115 = icmp ult i32 %114, 65536
  %116 = select i1 %115, i32 1, i32 2
  %117 = load i32, i32* %98, align 8
  %118 = add nsw i32 %116, %117
  store i32 %118, i32* %98, align 8
  br label %146

119:                                              ; preds = %109, %94
  %120 = load i32, i32* %33, align 8
  %121 = icmp eq i32 %120, 0
  br i1 %121, label %412, label %122

122:                                              ; preds = %119
  %123 = load i32 (%"class.icu_69::CollationIterator"*, i32*)**, i32 (%"class.icu_69::CollationIterator"*, i32*)*** %34, align 8
  %124 = getelementptr inbounds i32 (%"class.icu_69::CollationIterator"*, i32*)*, i32 (%"class.icu_69::CollationIterator"*, i32*)** %123, i64 6
  %125 = load i32 (%"class.icu_69::CollationIterator"*, i32*)*, i32 (%"class.icu_69::CollationIterator"*, i32*)** %124, align 8
  %126 = call i32 %125(%"class.icu_69::CollationIterator"* %0, i32* dereferenceable(4) %6) #12
  %127 = load %"class.icu_69::SkippedState"*, %"class.icu_69::SkippedState"** %18, align 8
  %128 = icmp eq %"class.icu_69::SkippedState"* %127, null
  br i1 %128, label %139, label %129

129:                                              ; preds = %122
  %130 = getelementptr inbounds %"class.icu_69::SkippedState", %"class.icu_69::SkippedState"* %127, i64 0, i32 1, i32 1, i32 0, i32 0
  %131 = load i16, i16* %130, align 8
  %132 = icmp ugt i16 %131, 31
  %133 = icmp sgt i32 %126, -1
  %134 = and i1 %133, %132
  br i1 %134, label %135, label %139

135:                                              ; preds = %129
  %136 = getelementptr inbounds %"class.icu_69::SkippedState", %"class.icu_69::SkippedState"* %127, i64 0, i32 3
  %137 = load i32, i32* %136, align 8
  %138 = add nsw i32 %137, 1
  store i32 %138, i32* %136, align 8
  br label %139

139:                                              ; preds = %135, %129, %122
  %140 = load i32, i32* %33, align 8
  %141 = icmp sgt i32 %140, 0
  %142 = icmp sgt i32 %126, -1
  %143 = and i1 %142, %141
  br i1 %143, label %144, label %146

144:                                              ; preds = %139
  %145 = add nsw i32 %140, -1
  store i32 %145, i32* %33, align 8
  br label %149

146:                                              ; preds = %112, %139
  %147 = phi i32 [ %114, %112 ], [ %126, %139 ]
  %148 = icmp slt i32 %147, 0
  br i1 %148, label %412, label %149

149:                                              ; preds = %144, %146
  %150 = phi i32 [ %126, %144 ], [ %147, %146 ]
  %151 = load %"class.icu_69::SkippedState"*, %"class.icu_69::SkippedState"** %18, align 8
  %152 = icmp eq %"class.icu_69::SkippedState"* %151, null
  br i1 %152, label %363, label %153

153:                                              ; preds = %149
  %154 = getelementptr inbounds %"class.icu_69::SkippedState", %"class.icu_69::SkippedState"* %151, i64 0, i32 1, i32 1, i32 0, i32 0
  %155 = load i16, i16* %154, align 8
  %156 = icmp ugt i16 %155, 31
  br i1 %156, label %157, label %363

157:                                              ; preds = %153
  %158 = getelementptr inbounds %"class.icu_69::SkippedState", %"class.icu_69::SkippedState"* %151, i64 0, i32 5
  %159 = load <2 x i64>, <2 x i64>* %35, align 8
  %160 = bitcast %"class.icu_69::UCharsTrie::State"* %158 to <2 x i64>*
  store <2 x i64> %159, <2 x i64>* %160, align 8
  %161 = load i32, i32* %13, align 8
  %162 = getelementptr inbounds %"class.icu_69::SkippedState", %"class.icu_69::SkippedState"* %151, i64 0, i32 5, i32 2
  store i32 %161, i32* %162, align 8
  br label %363

163:                                              ; preds = %36
  %164 = icmp eq i32 %41, 0
  br i1 %164, label %220, label %165

165:                                              ; preds = %163
  %166 = load %"class.icu_69::SkippedState"*, %"class.icu_69::SkippedState"** %18, align 8
  %167 = icmp eq %"class.icu_69::SkippedState"* %166, null
  br i1 %167, label %190, label %168

168:                                              ; preds = %165
  %169 = getelementptr inbounds %"class.icu_69::SkippedState", %"class.icu_69::SkippedState"* %166, i64 0, i32 3
  %170 = load i32, i32* %169, align 8
  %171 = getelementptr inbounds %"class.icu_69::SkippedState", %"class.icu_69::SkippedState"* %166, i64 0, i32 1, i32 1, i32 0, i32 0
  %172 = load i16, i16* %171, align 8
  %173 = icmp slt i16 %172, 0
  br i1 %173, label %177, label %174

174:                                              ; preds = %168
  %175 = lshr i16 %172, 5
  %176 = zext i16 %175 to i32
  br label %180

177:                                              ; preds = %168
  %178 = getelementptr inbounds %"class.icu_69::SkippedState", %"class.icu_69::SkippedState"* %166, i64 0, i32 1, i32 1, i32 0, i32 1
  %179 = load i32, i32* %178, align 4
  br label %180

180:                                              ; preds = %177, %174
  %181 = phi i32 [ %176, %174 ], [ %179, %177 ]
  %182 = icmp slt i32 %170, %181
  br i1 %182, label %183, label %190

183:                                              ; preds = %180
  %184 = getelementptr inbounds %"class.icu_69::SkippedState", %"class.icu_69::SkippedState"* %166, i64 0, i32 1
  %185 = call i32 @_ZNK6icu_6913UnicodeString8char32AtEi(%"class.icu_69::UnicodeString"* %184, i32 %170) #12
  %186 = icmp ult i32 %185, 65536
  %187 = select i1 %186, i32 1, i32 2
  %188 = load i32, i32* %169, align 8
  %189 = add nsw i32 %187, %188
  store i32 %189, i32* %169, align 8
  br label %217

190:                                              ; preds = %180, %165
  %191 = load i32, i32* %33, align 8
  %192 = icmp eq i32 %191, 0
  br i1 %192, label %220, label %193

193:                                              ; preds = %190
  %194 = load i32 (%"class.icu_69::CollationIterator"*, i32*)**, i32 (%"class.icu_69::CollationIterator"*, i32*)*** %34, align 8
  %195 = getelementptr inbounds i32 (%"class.icu_69::CollationIterator"*, i32*)*, i32 (%"class.icu_69::CollationIterator"*, i32*)** %194, i64 6
  %196 = load i32 (%"class.icu_69::CollationIterator"*, i32*)*, i32 (%"class.icu_69::CollationIterator"*, i32*)** %195, align 8
  %197 = call i32 %196(%"class.icu_69::CollationIterator"* %0, i32* dereferenceable(4) %6) #12
  %198 = load %"class.icu_69::SkippedState"*, %"class.icu_69::SkippedState"** %18, align 8
  %199 = icmp eq %"class.icu_69::SkippedState"* %198, null
  br i1 %199, label %210, label %200

200:                                              ; preds = %193
  %201 = getelementptr inbounds %"class.icu_69::SkippedState", %"class.icu_69::SkippedState"* %198, i64 0, i32 1, i32 1, i32 0, i32 0
  %202 = load i16, i16* %201, align 8
  %203 = icmp ugt i16 %202, 31
  %204 = icmp sgt i32 %197, -1
  %205 = and i1 %204, %203
  br i1 %205, label %206, label %210

206:                                              ; preds = %200
  %207 = getelementptr inbounds %"class.icu_69::SkippedState", %"class.icu_69::SkippedState"* %198, i64 0, i32 3
  %208 = load i32, i32* %207, align 8
  %209 = add nsw i32 %208, 1
  store i32 %209, i32* %207, align 8
  br label %210

210:                                              ; preds = %206, %200, %193
  %211 = load i32, i32* %33, align 8
  %212 = icmp sgt i32 %211, 0
  %213 = icmp sgt i32 %197, -1
  %214 = and i1 %213, %212
  br i1 %214, label %215, label %217

215:                                              ; preds = %210
  %216 = add nsw i32 %211, -1
  store i32 %216, i32* %33, align 8
  br label %360

217:                                              ; preds = %183, %210
  %218 = phi i32 [ %185, %183 ], [ %197, %210 ]
  %219 = icmp slt i32 %218, 0
  br i1 %219, label %220, label %360

220:                                              ; preds = %190, %217, %163
  %221 = sub i32 0, %40
  %222 = and i32 %2, 1024
  %223 = icmp eq i32 %222, 0
  br i1 %223, label %369, label %224

224:                                              ; preds = %220
  %225 = and i32 %2, 256
  %226 = icmp eq i32 %225, 0
  %227 = icmp slt i32 %40, %39
  %228 = or i1 %226, %227
  br i1 %228, label %229, label %369

229:                                              ; preds = %224
  %230 = icmp sgt i32 %40, 1
  br i1 %230, label %231, label %328

231:                                              ; preds = %229
  %232 = load %"class.icu_69::SkippedState"*, %"class.icu_69::SkippedState"** %18, align 8
  %233 = icmp eq %"class.icu_69::SkippedState"* %232, null
  br i1 %233, label %262, label %234

234:                                              ; preds = %231
  %235 = getelementptr inbounds %"class.icu_69::SkippedState", %"class.icu_69::SkippedState"* %232, i64 0, i32 1, i32 1, i32 0, i32 0
  %236 = load i16, i16* %235, align 8
  %237 = icmp ugt i16 %236, 31
  br i1 %237, label %238, label %262

238:                                              ; preds = %234
  %239 = getelementptr inbounds %"class.icu_69::SkippedState", %"class.icu_69::SkippedState"* %232, i64 0, i32 1
  %240 = icmp slt i16 %236, 0
  br i1 %240, label %244, label %241

241:                                              ; preds = %238
  %242 = lshr i16 %236, 5
  %243 = zext i16 %242 to i32
  br label %247

244:                                              ; preds = %238
  %245 = getelementptr inbounds %"class.icu_69::SkippedState", %"class.icu_69::SkippedState"* %232, i64 0, i32 1, i32 1, i32 0, i32 1
  %246 = load i32, i32* %245, align 4
  br label %247

247:                                              ; preds = %244, %241
  %248 = phi i32 [ %243, %241 ], [ %246, %244 ]
  %249 = getelementptr inbounds %"class.icu_69::SkippedState", %"class.icu_69::SkippedState"* %232, i64 0, i32 3
  %250 = load i32, i32* %249, align 8
  %251 = sub nsw i32 %250, %248
  %252 = icmp sgt i32 %251, 0
  br i1 %252, label %253, label %260

253:                                              ; preds = %247
  %254 = icmp slt i32 %251, %40
  br i1 %254, label %257, label %255

255:                                              ; preds = %253
  %256 = sub nsw i32 %250, %40
  store i32 %256, i32* %249, align 8
  br label %262

257:                                              ; preds = %253
  %258 = sub nsw i32 %251, %40
  %259 = call i32 @_ZNK6icu_6913UnicodeString11moveIndex32Eii(%"class.icu_69::UnicodeString"* %239, i32 %248, i32 %258) #12
  store i32 %259, i32* %249, align 8
  br label %262

260:                                              ; preds = %247
  %261 = call i32 @_ZNK6icu_6913UnicodeString11moveIndex32Eii(%"class.icu_69::UnicodeString"* %239, i32 %250, i32 %221) #12
  store i32 %261, i32* %249, align 8
  br label %262

262:                                              ; preds = %260, %257, %255, %234, %231
  %263 = phi i32 [ %40, %234 ], [ %40, %231 ], [ %40, %255 ], [ %251, %257 ], [ 0, %260 ]
  %264 = bitcast %"class.icu_69::CollationIterator"* %0 to void (%"class.icu_69::CollationIterator"*, i32, i32*)***
  %265 = load void (%"class.icu_69::CollationIterator"*, i32, i32*)**, void (%"class.icu_69::CollationIterator"*, i32, i32*)*** %264, align 8
  %266 = getelementptr inbounds void (%"class.icu_69::CollationIterator"*, i32, i32*)*, void (%"class.icu_69::CollationIterator"*, i32, i32*)** %265, i64 13
  %267 = load void (%"class.icu_69::CollationIterator"*, i32, i32*)*, void (%"class.icu_69::CollationIterator"*, i32, i32*)** %266, align 8
  call void %267(%"class.icu_69::CollationIterator"* %0, i32 %263, i32* dereferenceable(4) %6) #12
  %268 = load i32, i32* %33, align 8
  %269 = icmp sgt i32 %268, -1
  br i1 %269, label %270, label %272

270:                                              ; preds = %262
  %271 = add nuw nsw i32 %268, %263
  store i32 %271, i32* %33, align 8
  br label %272

272:                                              ; preds = %262, %270
  %273 = phi i32 [ %268, %262 ], [ %271, %270 ]
  %274 = load %"class.icu_69::SkippedState"*, %"class.icu_69::SkippedState"** %18, align 8
  %275 = icmp eq %"class.icu_69::SkippedState"* %274, null
  br i1 %275, label %298, label %276

276:                                              ; preds = %272
  %277 = getelementptr inbounds %"class.icu_69::SkippedState", %"class.icu_69::SkippedState"* %274, i64 0, i32 3
  %278 = load i32, i32* %277, align 8
  %279 = getelementptr inbounds %"class.icu_69::SkippedState", %"class.icu_69::SkippedState"* %274, i64 0, i32 1, i32 1, i32 0, i32 0
  %280 = load i16, i16* %279, align 8
  %281 = icmp slt i16 %280, 0
  br i1 %281, label %285, label %282

282:                                              ; preds = %276
  %283 = lshr i16 %280, 5
  %284 = zext i16 %283 to i32
  br label %288

285:                                              ; preds = %276
  %286 = getelementptr inbounds %"class.icu_69::SkippedState", %"class.icu_69::SkippedState"* %274, i64 0, i32 1, i32 1, i32 0, i32 1
  %287 = load i32, i32* %286, align 4
  br label %288

288:                                              ; preds = %285, %282
  %289 = phi i32 [ %284, %282 ], [ %287, %285 ]
  %290 = icmp slt i32 %278, %289
  br i1 %290, label %291, label %298

291:                                              ; preds = %288
  %292 = getelementptr inbounds %"class.icu_69::SkippedState", %"class.icu_69::SkippedState"* %274, i64 0, i32 1
  %293 = call i32 @_ZNK6icu_6913UnicodeString8char32AtEi(%"class.icu_69::UnicodeString"* %292, i32 %278) #12
  %294 = icmp ult i32 %293, 65536
  %295 = select i1 %294, i32 1, i32 2
  %296 = load i32, i32* %277, align 8
  %297 = add nsw i32 %295, %296
  store i32 %297, i32* %277, align 8
  br label %324

298:                                              ; preds = %288, %272
  %299 = icmp eq i32 %273, 0
  br i1 %299, label %324, label %300

300:                                              ; preds = %298
  %301 = load i32 (%"class.icu_69::CollationIterator"*, i32*)**, i32 (%"class.icu_69::CollationIterator"*, i32*)*** %34, align 8
  %302 = getelementptr inbounds i32 (%"class.icu_69::CollationIterator"*, i32*)*, i32 (%"class.icu_69::CollationIterator"*, i32*)** %301, i64 6
  %303 = load i32 (%"class.icu_69::CollationIterator"*, i32*)*, i32 (%"class.icu_69::CollationIterator"*, i32*)** %302, align 8
  %304 = call i32 %303(%"class.icu_69::CollationIterator"* %0, i32* dereferenceable(4) %6) #12
  %305 = load %"class.icu_69::SkippedState"*, %"class.icu_69::SkippedState"** %18, align 8
  %306 = icmp eq %"class.icu_69::SkippedState"* %305, null
  br i1 %306, label %317, label %307

307:                                              ; preds = %300
  %308 = getelementptr inbounds %"class.icu_69::SkippedState", %"class.icu_69::SkippedState"* %305, i64 0, i32 1, i32 1, i32 0, i32 0
  %309 = load i16, i16* %308, align 8
  %310 = icmp ugt i16 %309, 31
  %311 = icmp sgt i32 %304, -1
  %312 = and i1 %311, %310
  br i1 %312, label %313, label %317

313:                                              ; preds = %307
  %314 = getelementptr inbounds %"class.icu_69::SkippedState", %"class.icu_69::SkippedState"* %305, i64 0, i32 3
  %315 = load i32, i32* %314, align 8
  %316 = add nsw i32 %315, 1
  store i32 %316, i32* %314, align 8
  br label %317

317:                                              ; preds = %313, %307, %300
  %318 = load i32, i32* %33, align 8
  %319 = icmp sgt i32 %318, 0
  %320 = icmp sgt i32 %304, -1
  %321 = and i1 %320, %319
  br i1 %321, label %322, label %324

322:                                              ; preds = %317
  %323 = add nsw i32 %318, -1
  store i32 %323, i32* %33, align 8
  br label %324

324:                                              ; preds = %291, %298, %317, %322
  %325 = phi i32 [ %293, %291 ], [ -1, %298 ], [ %304, %322 ], [ %304, %317 ]
  %326 = add nuw i32 %39, 1
  %327 = sub i32 %326, %40
  br label %328

328:                                              ; preds = %324, %229
  %329 = phi i32 [ %325, %324 ], [ %38, %229 ]
  %330 = phi i32 [ %327, %324 ], [ %39, %229 ]
  %331 = phi i32 [ 1, %324 ], [ %40, %229 ]
  %332 = getelementptr inbounds %"struct.icu_69::CollationData", %"struct.icu_69::CollationData"* %1, i64 0, i32 6
  %333 = load %"class.icu_69::Normalizer2Impl"*, %"class.icu_69::Normalizer2Impl"** %332, align 8
  %334 = getelementptr inbounds %"class.icu_69::Normalizer2Impl", %"class.icu_69::Normalizer2Impl"* %333, i64 0, i32 1
  %335 = load i16, i16* %334, align 8
  %336 = zext i16 %335 to i32
  %337 = icmp slt i32 %329, %336
  br i1 %337, label %369, label %338

338:                                              ; preds = %328
  %339 = icmp slt i32 %329, 65536
  br i1 %339, label %340, label %355

340:                                              ; preds = %338
  %341 = getelementptr inbounds %"class.icu_69::Normalizer2Impl", %"class.icu_69::Normalizer2Impl"* %333, i64 0, i32 16
  %342 = load i8*, i8** %341, align 8
  %343 = ashr i32 %329, 8
  %344 = sext i32 %343 to i64
  %345 = getelementptr inbounds i8, i8* %342, i64 %344
  %346 = load i8, i8* %345, align 1
  %347 = icmp eq i8 %346, 0
  br i1 %347, label %369, label %348

348:                                              ; preds = %340
  %349 = zext i8 %346 to i32
  %350 = lshr i32 %329, 5
  %351 = and i32 %350, 7
  %352 = shl i32 1, %351
  %353 = and i32 %352, %349
  %354 = icmp eq i32 %353, 0
  br i1 %354, label %369, label %355

355:                                              ; preds = %338, %348
  %356 = call zeroext i16 @_ZNK6icu_6915Normalizer2Impl20getFCD16FromNormDataEi(%"class.icu_69::Normalizer2Impl"* %333, i32 %329) #12
  %357 = icmp ugt i16 %356, 255
  br i1 %357, label %358, label %369

358:                                              ; preds = %355
  %359 = call i32 @_ZN6icu_6917CollationIterator36nextCE32FromDiscontiguousContractionEPKNS_13CollationDataERNS_10UCharsTrieEjiiR10UErrorCode(%"class.icu_69::CollationIterator"* %0, %"struct.icu_69::CollationData"* %1, %"class.icu_69::UCharsTrie"* nonnull dereferenceable(32) %8, i32 %37, i32 %330, i32 %329, i32* dereferenceable(4) %6)
  br label %412

360:                                              ; preds = %215, %217
  %361 = phi i32 [ %197, %215 ], [ %218, %217 ]
  %362 = add nsw i32 %40, 1
  br label %363

363:                                              ; preds = %360, %153, %149, %157
  %364 = phi i32 [ %37, %360 ], [ %91, %153 ], [ %91, %149 ], [ %91, %157 ]
  %365 = phi i32 [ %361, %360 ], [ %150, %153 ], [ %150, %149 ], [ %150, %157 ]
  %366 = phi i32 [ %362, %360 ], [ 1, %153 ], [ 1, %149 ], [ 1, %157 ]
  %367 = add nuw nsw i32 %39, 1
  %368 = call i32 @_ZN6icu_6910UCharsTrie16nextForCodePointEi(%"class.icu_69::UCharsTrie"* nonnull %8, i32 %365) #12
  br label %36

369:                                              ; preds = %340, %348, %328, %224, %220, %355
  %370 = phi i32 [ %40, %224 ], [ %40, %220 ], [ %331, %355 ], [ %331, %328 ], [ %331, %348 ], [ %331, %340 ]
  %371 = load %"class.icu_69::SkippedState"*, %"class.icu_69::SkippedState"** %18, align 8
  %372 = icmp eq %"class.icu_69::SkippedState"* %371, null
  br i1 %372, label %402, label %373

373:                                              ; preds = %369
  %374 = getelementptr inbounds %"class.icu_69::SkippedState", %"class.icu_69::SkippedState"* %371, i64 0, i32 1, i32 1, i32 0, i32 0
  %375 = load i16, i16* %374, align 8
  %376 = icmp ugt i16 %375, 31
  br i1 %376, label %377, label %402

377:                                              ; preds = %373
  %378 = getelementptr inbounds %"class.icu_69::SkippedState", %"class.icu_69::SkippedState"* %371, i64 0, i32 1
  %379 = icmp slt i16 %375, 0
  br i1 %379, label %383, label %380

380:                                              ; preds = %377
  %381 = lshr i16 %375, 5
  %382 = zext i16 %381 to i32
  br label %386

383:                                              ; preds = %377
  %384 = getelementptr inbounds %"class.icu_69::SkippedState", %"class.icu_69::SkippedState"* %371, i64 0, i32 1, i32 1, i32 0, i32 1
  %385 = load i32, i32* %384, align 4
  br label %386

386:                                              ; preds = %383, %380
  %387 = phi i32 [ %382, %380 ], [ %385, %383 ]
  %388 = getelementptr inbounds %"class.icu_69::SkippedState", %"class.icu_69::SkippedState"* %371, i64 0, i32 3
  %389 = load i32, i32* %388, align 8
  %390 = sub nsw i32 %389, %387
  %391 = icmp sgt i32 %390, 0
  br i1 %391, label %392, label %399

392:                                              ; preds = %386
  %393 = icmp slt i32 %390, %370
  br i1 %393, label %396, label %394

394:                                              ; preds = %392
  %395 = sub nsw i32 %389, %370
  store i32 %395, i32* %388, align 8
  br label %402

396:                                              ; preds = %392
  %397 = sub nsw i32 %390, %370
  %398 = call i32 @_ZNK6icu_6913UnicodeString11moveIndex32Eii(%"class.icu_69::UnicodeString"* %378, i32 %387, i32 %397) #12
  store i32 %398, i32* %388, align 8
  br label %402

399:                                              ; preds = %386
  %400 = sub nsw i32 0, %370
  %401 = call i32 @_ZNK6icu_6913UnicodeString11moveIndex32Eii(%"class.icu_69::UnicodeString"* %378, i32 %389, i32 %400) #12
  store i32 %401, i32* %388, align 8
  br label %402

402:                                              ; preds = %399, %396, %394, %373, %369
  %403 = phi i32 [ %370, %373 ], [ %370, %369 ], [ %370, %394 ], [ %390, %396 ], [ 0, %399 ]
  %404 = bitcast %"class.icu_69::CollationIterator"* %0 to void (%"class.icu_69::CollationIterator"*, i32, i32*)***
  %405 = load void (%"class.icu_69::CollationIterator"*, i32, i32*)**, void (%"class.icu_69::CollationIterator"*, i32, i32*)*** %404, align 8
  %406 = getelementptr inbounds void (%"class.icu_69::CollationIterator"*, i32, i32*)*, void (%"class.icu_69::CollationIterator"*, i32, i32*)** %405, i64 13
  %407 = load void (%"class.icu_69::CollationIterator"*, i32, i32*)*, void (%"class.icu_69::CollationIterator"*, i32, i32*)** %406, align 8
  call void %407(%"class.icu_69::CollationIterator"* %0, i32 %403, i32* dereferenceable(4) %6) #12
  %408 = load i32, i32* %33, align 8
  %409 = icmp sgt i32 %408, -1
  br i1 %409, label %410, label %412

410:                                              ; preds = %402
  %411 = add nsw i32 %408, %403
  store i32 %411, i32* %33, align 8
  br label %412

412:                                              ; preds = %119, %146, %90, %358, %410, %402
  %413 = phi i32 [ %37, %402 ], [ %37, %410 ], [ %359, %358 ], [ %91, %90 ], [ %91, %146 ], [ %91, %119 ]
  call void @_ZN6icu_6910UCharsTrieD1Ev(%"class.icu_69::UCharsTrie"* nonnull %8) #12
  call void @llvm.lifetime.end.p0i8(i64 32, i8* nonnull %9) #12
  ret i32 %413
}

; Function Attrs: nounwind ssp uwtable
define hidden void @_ZN6icu_6917CollationIterator16appendNumericCEsEjaR10UErrorCode(%"class.icu_69::CollationIterator"*, i32, i8 signext, i32* dereferenceable(4)) local_unnamed_addr #0 align 2 {
  %5 = alloca %"class.icu_69::CharString", align 8
  %6 = bitcast %"class.icu_69::CharString"* %5 to i8*
  call void @llvm.lifetime.start.p0i8(i64 64, i8* nonnull %6) #12
  call void @llvm.memset.p0i8.i64(i8* nonnull align 8 %6, i8 -86, i64 64, i1 false)
  %7 = getelementptr inbounds %"class.icu_69::CharString", %"class.icu_69::CharString"* %5, i64 0, i32 0, i32 0
  %8 = getelementptr inbounds %"class.icu_69::CharString", %"class.icu_69::CharString"* %5, i64 0, i32 0, i32 3, i64 0
  store i8* %8, i8** %7, align 8
  %9 = getelementptr inbounds %"class.icu_69::CharString", %"class.icu_69::CharString"* %5, i64 0, i32 0, i32 1
  store i32 40, i32* %9, align 8
  %10 = getelementptr inbounds %"class.icu_69::CharString", %"class.icu_69::CharString"* %5, i64 0, i32 0, i32 2
  store i8 0, i8* %10, align 4
  %11 = getelementptr inbounds %"class.icu_69::CharString", %"class.icu_69::CharString"* %5, i64 0, i32 1
  store i32 0, i32* %11, align 8
  store i8 0, i8* %8, align 1
  %12 = icmp eq i8 %2, 0
  br i1 %12, label %24, label %13

13:                                               ; preds = %4
  %14 = lshr i32 %1, 8
  %15 = trunc i32 %14 to i8
  %16 = and i8 %15, 15
  %17 = call dereferenceable(64) %"class.icu_69::CharString"* @_ZN6icu_6910CharString6appendEcR10UErrorCode(%"class.icu_69::CharString"* nonnull %5, i8 signext %16, i32* dereferenceable(4) %3) #12
  %18 = getelementptr inbounds %"class.icu_69::CollationIterator", %"class.icu_69::CollationIterator"* %0, i64 0, i32 7
  %19 = load i32, i32* %18, align 8
  %20 = icmp eq i32 %19, 0
  br i1 %20, label %359, label %21

21:                                               ; preds = %13
  %22 = bitcast %"class.icu_69::CollationIterator"* %0 to i32 (%"class.icu_69::CollationIterator"*, i32*)***
  %23 = getelementptr inbounds %"class.icu_69::CollationIterator", %"class.icu_69::CollationIterator"* %0, i64 0, i32 2
  br label %27

24:                                               ; preds = %4
  %25 = bitcast %"class.icu_69::CollationIterator"* %0 to i32 (%"class.icu_69::CollationIterator"*, i32*)***
  %26 = getelementptr inbounds %"class.icu_69::CollationIterator", %"class.icu_69::CollationIterator"* %0, i64 0, i32 2
  br label %189

27:                                               ; preds = %21, %182
  %28 = load i32 (%"class.icu_69::CollationIterator"*, i32*)**, i32 (%"class.icu_69::CollationIterator"*, i32*)*** %22, align 8
  %29 = getelementptr inbounds i32 (%"class.icu_69::CollationIterator"*, i32*)*, i32 (%"class.icu_69::CollationIterator"*, i32*)** %28, i64 6
  %30 = load i32 (%"class.icu_69::CollationIterator"*, i32*)*, i32 (%"class.icu_69::CollationIterator"*, i32*)** %29, align 8
  %31 = call i32 %30(%"class.icu_69::CollationIterator"* %0, i32* dereferenceable(4) %3) #12
  %32 = icmp slt i32 %31, 0
  br i1 %32, label %359, label %33

33:                                               ; preds = %27
  %34 = load %"struct.icu_69::CollationData"*, %"struct.icu_69::CollationData"** %23, align 8
  %35 = getelementptr inbounds %"struct.icu_69::CollationData", %"struct.icu_69::CollationData"* %34, i64 0, i32 0
  %36 = load %struct.UTrie2*, %struct.UTrie2** %35, align 8
  %37 = getelementptr inbounds %struct.UTrie2, %struct.UTrie2* %36, i64 0, i32 2
  %38 = load i32*, i32** %37, align 8
  %39 = icmp ult i32 %31, 55296
  br i1 %39, label %40, label %51

40:                                               ; preds = %33
  %41 = getelementptr inbounds %struct.UTrie2, %struct.UTrie2* %36, i64 0, i32 0
  %42 = load i16*, i16** %41, align 8
  %43 = lshr i32 %31, 5
  %44 = zext i32 %43 to i64
  %45 = getelementptr inbounds i16, i16* %42, i64 %44
  %46 = load i16, i16* %45, align 2
  %47 = zext i16 %46 to i32
  %48 = shl nuw nsw i32 %47, 2
  %49 = and i32 %31, 31
  %50 = add nuw nsw i32 %48, %49
  br label %95

51:                                               ; preds = %33
  %52 = icmp ult i32 %31, 65536
  br i1 %52, label %53, label %67

53:                                               ; preds = %51
  %54 = getelementptr inbounds %struct.UTrie2, %struct.UTrie2* %36, i64 0, i32 0
  %55 = load i16*, i16** %54, align 8
  %56 = icmp slt i32 %31, 56320
  %57 = select i1 %56, i32 320, i32 0
  %58 = lshr i32 %31, 5
  %59 = add nuw nsw i32 %57, %58
  %60 = zext i32 %59 to i64
  %61 = getelementptr inbounds i16, i16* %55, i64 %60
  %62 = load i16, i16* %61, align 2
  %63 = zext i16 %62 to i32
  %64 = shl nuw nsw i32 %63, 2
  %65 = and i32 %31, 31
  %66 = add nuw nsw i32 %64, %65
  br label %95

67:                                               ; preds = %51
  %68 = icmp ugt i32 %31, 1114111
  br i1 %68, label %95, label %69

69:                                               ; preds = %67
  %70 = getelementptr inbounds %struct.UTrie2, %struct.UTrie2* %36, i64 0, i32 9
  %71 = load i32, i32* %70, align 4
  %72 = icmp sgt i32 %71, %31
  br i1 %72, label %76, label %73

73:                                               ; preds = %69
  %74 = getelementptr inbounds %struct.UTrie2, %struct.UTrie2* %36, i64 0, i32 10
  %75 = load i32, i32* %74, align 8
  br label %95

76:                                               ; preds = %69
  %77 = getelementptr inbounds %struct.UTrie2, %struct.UTrie2* %36, i64 0, i32 0
  %78 = load i16*, i16** %77, align 8
  %79 = lshr i32 %31, 11
  %80 = add nuw nsw i32 %79, 2080
  %81 = zext i32 %80 to i64
  %82 = getelementptr inbounds i16, i16* %78, i64 %81
  %83 = load i16, i16* %82, align 2
  %84 = zext i16 %83 to i32
  %85 = lshr i32 %31, 5
  %86 = and i32 %85, 63
  %87 = add nuw nsw i32 %86, %84
  %88 = zext i32 %87 to i64
  %89 = getelementptr inbounds i16, i16* %78, i64 %88
  %90 = load i16, i16* %89, align 2
  %91 = zext i16 %90 to i32
  %92 = shl nuw nsw i32 %91, 2
  %93 = and i32 %31, 31
  %94 = add nuw nsw i32 %92, %93
  br label %95

95:                                               ; preds = %40, %53, %67, %73, %76
  %96 = phi i32 [ %50, %40 ], [ %66, %53 ], [ 128, %67 ], [ %75, %73 ], [ %94, %76 ]
  %97 = sext i32 %96 to i64
  %98 = getelementptr inbounds i32, i32* %38, i64 %97
  %99 = load i32, i32* %98, align 4
  %100 = icmp eq i32 %99, 192
  br i1 %100, label %101, label %168

101:                                              ; preds = %95
  %102 = getelementptr inbounds %"struct.icu_69::CollationData", %"struct.icu_69::CollationData"* %34, i64 0, i32 4
  %103 = load %"struct.icu_69::CollationData"*, %"struct.icu_69::CollationData"** %102, align 8
  %104 = getelementptr inbounds %"struct.icu_69::CollationData", %"struct.icu_69::CollationData"* %103, i64 0, i32 0
  %105 = load %struct.UTrie2*, %struct.UTrie2** %104, align 8
  %106 = getelementptr inbounds %struct.UTrie2, %struct.UTrie2* %105, i64 0, i32 2
  %107 = load i32*, i32** %106, align 8
  br i1 %39, label %108, label %119

108:                                              ; preds = %101
  %109 = getelementptr inbounds %struct.UTrie2, %struct.UTrie2* %105, i64 0, i32 0
  %110 = load i16*, i16** %109, align 8
  %111 = lshr i32 %31, 5
  %112 = zext i32 %111 to i64
  %113 = getelementptr inbounds i16, i16* %110, i64 %112
  %114 = load i16, i16* %113, align 2
  %115 = zext i16 %114 to i32
  %116 = shl nuw nsw i32 %115, 2
  %117 = and i32 %31, 31
  %118 = add nuw nsw i32 %116, %117
  br label %163

119:                                              ; preds = %101
  %120 = icmp ult i32 %31, 65536
  br i1 %120, label %121, label %135

121:                                              ; preds = %119
  %122 = getelementptr inbounds %struct.UTrie2, %struct.UTrie2* %105, i64 0, i32 0
  %123 = load i16*, i16** %122, align 8
  %124 = icmp slt i32 %31, 56320
  %125 = select i1 %124, i32 320, i32 0
  %126 = lshr i32 %31, 5
  %127 = add nuw nsw i32 %125, %126
  %128 = zext i32 %127 to i64
  %129 = getelementptr inbounds i16, i16* %123, i64 %128
  %130 = load i16, i16* %129, align 2
  %131 = zext i16 %130 to i32
  %132 = shl nuw nsw i32 %131, 2
  %133 = and i32 %31, 31
  %134 = add nuw nsw i32 %132, %133
  br label %163

135:                                              ; preds = %119
  %136 = icmp ugt i32 %31, 1114111
  br i1 %136, label %163, label %137

137:                                              ; preds = %135
  %138 = getelementptr inbounds %struct.UTrie2, %struct.UTrie2* %105, i64 0, i32 9
  %139 = load i32, i32* %138, align 4
  %140 = icmp sgt i32 %139, %31
  br i1 %140, label %144, label %141

141:                                              ; preds = %137
  %142 = getelementptr inbounds %struct.UTrie2, %struct.UTrie2* %105, i64 0, i32 10
  %143 = load i32, i32* %142, align 8
  br label %163

144:                                              ; preds = %137
  %145 = getelementptr inbounds %struct.UTrie2, %struct.UTrie2* %105, i64 0, i32 0
  %146 = load i16*, i16** %145, align 8
  %147 = lshr i32 %31, 11
  %148 = add nuw nsw i32 %147, 2080
  %149 = zext i32 %148 to i64
  %150 = getelementptr inbounds i16, i16* %146, i64 %149
  %151 = load i16, i16* %150, align 2
  %152 = zext i16 %151 to i32
  %153 = lshr i32 %31, 5
  %154 = and i32 %153, 63
  %155 = add nuw nsw i32 %154, %152
  %156 = zext i32 %155 to i64
  %157 = getelementptr inbounds i16, i16* %146, i64 %156
  %158 = load i16, i16* %157, align 2
  %159 = zext i16 %158 to i32
  %160 = shl nuw nsw i32 %159, 2
  %161 = and i32 %31, 31
  %162 = add nuw nsw i32 %160, %161
  br label %163

163:                                              ; preds = %108, %121, %135, %141, %144
  %164 = phi i32 [ %118, %108 ], [ %134, %121 ], [ 128, %135 ], [ %143, %141 ], [ %162, %144 ]
  %165 = sext i32 %164 to i64
  %166 = getelementptr inbounds i32, i32* %107, i64 %165
  %167 = load i32, i32* %166, align 4
  br label %168

168:                                              ; preds = %163, %95
  %169 = phi i32 [ %167, %163 ], [ %99, %95 ]
  %170 = and i32 %169, 207
  %171 = icmp eq i32 %170, 202
  br i1 %171, label %177, label %172

172:                                              ; preds = %168
  %173 = bitcast %"class.icu_69::CollationIterator"* %0 to void (%"class.icu_69::CollationIterator"*, i32, i32*)***
  %174 = load void (%"class.icu_69::CollationIterator"*, i32, i32*)**, void (%"class.icu_69::CollationIterator"*, i32, i32*)*** %173, align 8
  %175 = getelementptr inbounds void (%"class.icu_69::CollationIterator"*, i32, i32*)*, void (%"class.icu_69::CollationIterator"*, i32, i32*)** %174, i64 13
  %176 = load void (%"class.icu_69::CollationIterator"*, i32, i32*)*, void (%"class.icu_69::CollationIterator"*, i32, i32*)** %175, align 8
  call void %176(%"class.icu_69::CollationIterator"* %0, i32 1, i32* dereferenceable(4) %3) #12
  br label %359

177:                                              ; preds = %168
  %178 = load i32, i32* %18, align 8
  %179 = icmp sgt i32 %178, 0
  br i1 %179, label %180, label %182

180:                                              ; preds = %177
  %181 = add nsw i32 %178, -1
  store i32 %181, i32* %18, align 8
  br label %182

182:                                              ; preds = %180, %177
  %183 = lshr i32 %169, 8
  %184 = trunc i32 %183 to i8
  %185 = and i8 %184, 15
  %186 = call dereferenceable(64) %"class.icu_69::CharString"* @_ZN6icu_6910CharString6appendEcR10UErrorCode(%"class.icu_69::CharString"* nonnull %5, i8 signext %185, i32* dereferenceable(4) %3) #12
  %187 = load i32, i32* %18, align 8
  %188 = icmp eq i32 %187, 0
  br i1 %188, label %359, label %27

189:                                              ; preds = %24, %335
  %190 = phi i32 [ %336, %335 ], [ %1, %24 ]
  %191 = lshr i32 %190, 8
  %192 = trunc i32 %191 to i8
  %193 = and i8 %192, 15
  %194 = call dereferenceable(64) %"class.icu_69::CharString"* @_ZN6icu_6910CharString6appendEcR10UErrorCode(%"class.icu_69::CharString"* nonnull %5, i8 signext %193, i32* dereferenceable(4) %3) #12
  %195 = load i32 (%"class.icu_69::CollationIterator"*, i32*)**, i32 (%"class.icu_69::CollationIterator"*, i32*)*** %25, align 8
  %196 = getelementptr inbounds i32 (%"class.icu_69::CollationIterator"*, i32*)*, i32 (%"class.icu_69::CollationIterator"*, i32*)** %195, i64 7
  %197 = load i32 (%"class.icu_69::CollationIterator"*, i32*)*, i32 (%"class.icu_69::CollationIterator"*, i32*)** %196, align 8
  %198 = call i32 %197(%"class.icu_69::CollationIterator"* %0, i32* dereferenceable(4) %3) #12
  %199 = icmp slt i32 %198, 0
  br i1 %199, label %344, label %200

200:                                              ; preds = %189
  %201 = load %"struct.icu_69::CollationData"*, %"struct.icu_69::CollationData"** %26, align 8
  %202 = getelementptr inbounds %"struct.icu_69::CollationData", %"struct.icu_69::CollationData"* %201, i64 0, i32 0
  %203 = load %struct.UTrie2*, %struct.UTrie2** %202, align 8
  %204 = getelementptr inbounds %struct.UTrie2, %struct.UTrie2* %203, i64 0, i32 2
  %205 = load i32*, i32** %204, align 8
  %206 = icmp ult i32 %198, 55296
  br i1 %206, label %207, label %218

207:                                              ; preds = %200
  %208 = getelementptr inbounds %struct.UTrie2, %struct.UTrie2* %203, i64 0, i32 0
  %209 = load i16*, i16** %208, align 8
  %210 = lshr i32 %198, 5
  %211 = zext i32 %210 to i64
  %212 = getelementptr inbounds i16, i16* %209, i64 %211
  %213 = load i16, i16* %212, align 2
  %214 = zext i16 %213 to i32
  %215 = shl nuw nsw i32 %214, 2
  %216 = and i32 %198, 31
  %217 = add nuw nsw i32 %215, %216
  br label %262

218:                                              ; preds = %200
  %219 = icmp ult i32 %198, 65536
  br i1 %219, label %220, label %234

220:                                              ; preds = %218
  %221 = getelementptr inbounds %struct.UTrie2, %struct.UTrie2* %203, i64 0, i32 0
  %222 = load i16*, i16** %221, align 8
  %223 = icmp slt i32 %198, 56320
  %224 = select i1 %223, i32 320, i32 0
  %225 = lshr i32 %198, 5
  %226 = add nuw nsw i32 %224, %225
  %227 = zext i32 %226 to i64
  %228 = getelementptr inbounds i16, i16* %222, i64 %227
  %229 = load i16, i16* %228, align 2
  %230 = zext i16 %229 to i32
  %231 = shl nuw nsw i32 %230, 2
  %232 = and i32 %198, 31
  %233 = add nuw nsw i32 %231, %232
  br label %262

234:                                              ; preds = %218
  %235 = icmp ugt i32 %198, 1114111
  br i1 %235, label %262, label %236

236:                                              ; preds = %234
  %237 = getelementptr inbounds %struct.UTrie2, %struct.UTrie2* %203, i64 0, i32 9
  %238 = load i32, i32* %237, align 4
  %239 = icmp sgt i32 %238, %198
  br i1 %239, label %243, label %240

240:                                              ; preds = %236
  %241 = getelementptr inbounds %struct.UTrie2, %struct.UTrie2* %203, i64 0, i32 10
  %242 = load i32, i32* %241, align 8
  br label %262

243:                                              ; preds = %236
  %244 = getelementptr inbounds %struct.UTrie2, %struct.UTrie2* %203, i64 0, i32 0
  %245 = load i16*, i16** %244, align 8
  %246 = lshr i32 %198, 11
  %247 = add nuw nsw i32 %246, 2080
  %248 = zext i32 %247 to i64
  %249 = getelementptr inbounds i16, i16* %245, i64 %248
  %250 = load i16, i16* %249, align 2
  %251 = zext i16 %250 to i32
  %252 = lshr i32 %198, 5
  %253 = and i32 %252, 63
  %254 = add nuw nsw i32 %253, %251
  %255 = zext i32 %254 to i64
  %256 = getelementptr inbounds i16, i16* %245, i64 %255
  %257 = load i16, i16* %256, align 2
  %258 = zext i16 %257 to i32
  %259 = shl nuw nsw i32 %258, 2
  %260 = and i32 %198, 31
  %261 = add nuw nsw i32 %259, %260
  br label %262

262:                                              ; preds = %207, %220, %234, %240, %243
  %263 = phi i32 [ %217, %207 ], [ %233, %220 ], [ 128, %234 ], [ %242, %240 ], [ %261, %243 ]
  %264 = sext i32 %263 to i64
  %265 = getelementptr inbounds i32, i32* %205, i64 %264
  %266 = load i32, i32* %265, align 4
  %267 = icmp eq i32 %266, 192
  br i1 %267, label %268, label %335

268:                                              ; preds = %262
  %269 = getelementptr inbounds %"struct.icu_69::CollationData", %"struct.icu_69::CollationData"* %201, i64 0, i32 4
  %270 = load %"struct.icu_69::CollationData"*, %"struct.icu_69::CollationData"** %269, align 8
  %271 = getelementptr inbounds %"struct.icu_69::CollationData", %"struct.icu_69::CollationData"* %270, i64 0, i32 0
  %272 = load %struct.UTrie2*, %struct.UTrie2** %271, align 8
  %273 = getelementptr inbounds %struct.UTrie2, %struct.UTrie2* %272, i64 0, i32 2
  %274 = load i32*, i32** %273, align 8
  br i1 %206, label %275, label %286

275:                                              ; preds = %268
  %276 = getelementptr inbounds %struct.UTrie2, %struct.UTrie2* %272, i64 0, i32 0
  %277 = load i16*, i16** %276, align 8
  %278 = lshr i32 %198, 5
  %279 = zext i32 %278 to i64
  %280 = getelementptr inbounds i16, i16* %277, i64 %279
  %281 = load i16, i16* %280, align 2
  %282 = zext i16 %281 to i32
  %283 = shl nuw nsw i32 %282, 2
  %284 = and i32 %198, 31
  %285 = add nuw nsw i32 %283, %284
  br label %330

286:                                              ; preds = %268
  %287 = icmp ult i32 %198, 65536
  br i1 %287, label %288, label %302

288:                                              ; preds = %286
  %289 = getelementptr inbounds %struct.UTrie2, %struct.UTrie2* %272, i64 0, i32 0
  %290 = load i16*, i16** %289, align 8
  %291 = icmp slt i32 %198, 56320
  %292 = select i1 %291, i32 320, i32 0
  %293 = lshr i32 %198, 5
  %294 = add nuw nsw i32 %292, %293
  %295 = zext i32 %294 to i64
  %296 = getelementptr inbounds i16, i16* %290, i64 %295
  %297 = load i16, i16* %296, align 2
  %298 = zext i16 %297 to i32
  %299 = shl nuw nsw i32 %298, 2
  %300 = and i32 %198, 31
  %301 = add nuw nsw i32 %299, %300
  br label %330

302:                                              ; preds = %286
  %303 = icmp ugt i32 %198, 1114111
  br i1 %303, label %330, label %304

304:                                              ; preds = %302
  %305 = getelementptr inbounds %struct.UTrie2, %struct.UTrie2* %272, i64 0, i32 9
  %306 = load i32, i32* %305, align 4
  %307 = icmp sgt i32 %306, %198
  br i1 %307, label %311, label %308

308:                                              ; preds = %304
  %309 = getelementptr inbounds %struct.UTrie2, %struct.UTrie2* %272, i64 0, i32 10
  %310 = load i32, i32* %309, align 8
  br label %330

311:                                              ; preds = %304
  %312 = getelementptr inbounds %struct.UTrie2, %struct.UTrie2* %272, i64 0, i32 0
  %313 = load i16*, i16** %312, align 8
  %314 = lshr i32 %198, 11
  %315 = add nuw nsw i32 %314, 2080
  %316 = zext i32 %315 to i64
  %317 = getelementptr inbounds i16, i16* %313, i64 %316
  %318 = load i16, i16* %317, align 2
  %319 = zext i16 %318 to i32
  %320 = lshr i32 %198, 5
  %321 = and i32 %320, 63
  %322 = add nuw nsw i32 %321, %319
  %323 = zext i32 %322 to i64
  %324 = getelementptr inbounds i16, i16* %313, i64 %323
  %325 = load i16, i16* %324, align 2
  %326 = zext i16 %325 to i32
  %327 = shl nuw nsw i32 %326, 2
  %328 = and i32 %198, 31
  %329 = add nuw nsw i32 %327, %328
  br label %330

330:                                              ; preds = %275, %288, %302, %308, %311
  %331 = phi i32 [ %285, %275 ], [ %301, %288 ], [ 128, %302 ], [ %310, %308 ], [ %329, %311 ]
  %332 = sext i32 %331 to i64
  %333 = getelementptr inbounds i32, i32* %274, i64 %332
  %334 = load i32, i32* %333, align 4
  br label %335

335:                                              ; preds = %330, %262
  %336 = phi i32 [ %334, %330 ], [ %266, %262 ]
  %337 = and i32 %336, 207
  %338 = icmp eq i32 %337, 202
  br i1 %338, label %189, label %339

339:                                              ; preds = %335
  %340 = bitcast %"class.icu_69::CollationIterator"* %0 to void (%"class.icu_69::CollationIterator"*, i32, i32*)***
  %341 = load void (%"class.icu_69::CollationIterator"*, i32, i32*)**, void (%"class.icu_69::CollationIterator"*, i32, i32*)*** %340, align 8
  %342 = getelementptr inbounds void (%"class.icu_69::CollationIterator"*, i32, i32*)*, void (%"class.icu_69::CollationIterator"*, i32, i32*)** %341, i64 12
  %343 = load void (%"class.icu_69::CollationIterator"*, i32, i32*)*, void (%"class.icu_69::CollationIterator"*, i32, i32*)** %342, align 8
  call void %343(%"class.icu_69::CollationIterator"* %0, i32 1, i32* dereferenceable(4) %3) #12
  br label %344

344:                                              ; preds = %189, %339
  %345 = load i8*, i8** %7, align 8
  %346 = load i32, i32* %11, align 8
  %347 = sext i32 %346 to i64
  %348 = getelementptr inbounds i8, i8* %345, i64 %347
  %349 = getelementptr inbounds i8, i8* %348, i64 -1
  %350 = icmp ult i8* %345, %349
  br i1 %350, label %351, label %359

351:                                              ; preds = %344, %351
  %352 = phi i8* [ %357, %351 ], [ %349, %344 ]
  %353 = phi i8* [ %356, %351 ], [ %345, %344 ]
  %354 = load i8, i8* %353, align 1
  %355 = load i8, i8* %352, align 1
  %356 = getelementptr inbounds i8, i8* %353, i64 1
  store i8 %355, i8* %353, align 1
  store i8 %354, i8* %352, align 1
  %357 = getelementptr inbounds i8, i8* %352, i64 -1
  %358 = icmp ult i8* %356, %357
  br i1 %358, label %351, label %359

359:                                              ; preds = %182, %27, %351, %13, %344, %172
  %360 = load i32, i32* %3, align 4
  %361 = icmp slt i32 %360, 1
  br i1 %361, label %362, label %398

362:                                              ; preds = %359
  %363 = load i32, i32* %11, align 8
  br label %364

364:                                              ; preds = %362, %385
  %365 = phi i32 [ %395, %385 ], [ %363, %362 ]
  %366 = phi i32 [ %392, %385 ], [ 0, %362 ]
  %367 = add nsw i32 %365, -1
  %368 = icmp slt i32 %366, %367
  %369 = load i8*, i8** %7, align 8
  br i1 %368, label %370, label %385

370:                                              ; preds = %364
  %371 = sext i32 %366 to i64
  %372 = sext i32 %367 to i64
  br label %373

373:                                              ; preds = %370, %379
  %374 = phi i64 [ %371, %370 ], [ %380, %379 ]
  %375 = phi i32 [ %366, %370 ], [ %381, %379 ]
  %376 = getelementptr inbounds i8, i8* %369, i64 %374
  %377 = load i8, i8* %376, align 1
  %378 = icmp eq i8 %377, 0
  br i1 %378, label %379, label %383

379:                                              ; preds = %373
  %380 = add nsw i64 %374, 1
  %381 = add nsw i32 %375, 1
  %382 = icmp slt i64 %380, %372
  br i1 %382, label %373, label %385

383:                                              ; preds = %373
  %384 = trunc i64 %374 to i32
  br label %385

385:                                              ; preds = %379, %383, %364
  %386 = phi i32 [ %366, %364 ], [ %384, %383 ], [ %381, %379 ]
  %387 = sub nsw i32 %365, %386
  %388 = icmp slt i32 %387, 254
  %389 = select i1 %388, i32 %387, i32 254
  %390 = sext i32 %386 to i64
  %391 = getelementptr inbounds i8, i8* %369, i64 %390
  call void @_ZN6icu_6917CollationIterator23appendNumericSegmentCEsEPKciR10UErrorCode(%"class.icu_69::CollationIterator"* %0, i8* %391, i32 %389, i32* dereferenceable(4) %3)
  %392 = add nsw i32 %389, %386
  %393 = load i32, i32* %3, align 4
  %394 = icmp slt i32 %393, 1
  %395 = load i32, i32* %11, align 8
  %396 = icmp slt i32 %392, %395
  %397 = and i1 %394, %396
  br i1 %397, label %364, label %398

398:                                              ; preds = %385, %359
  %399 = load i8, i8* %10, align 4
  %400 = icmp eq i8 %399, 0
  br i1 %400, label %403, label %401

401:                                              ; preds = %398
  %402 = load i8*, i8** %7, align 8
  call void @uprv_free_69(i8* %402) #12
  br label %403

403:                                              ; preds = %398, %401
  call void @llvm.lifetime.end.p0i8(i64 64, i8* nonnull %6) #12
  ret void
}

declare i32 @_ZN6icu_6910UCharsTrie16nextForCodePointEi(%"class.icu_69::UCharsTrie"*, i32) local_unnamed_addr #4

; Function Attrs: nounwind
declare void @_ZN6icu_6910UCharsTrieD1Ev(%"class.icu_69::UCharsTrie"*) unnamed_addr #5

declare i32 @_ZN6icu_6910UCharsTrie17firstForCodePointEi(%"class.icu_69::UCharsTrie"*, i32) local_unnamed_addr #4

; Function Attrs: nounwind ssp uwtable
define hidden i32 @_ZN6icu_6917CollationIterator36nextCE32FromDiscontiguousContractionEPKNS_13CollationDataERNS_10UCharsTrieEjiiR10UErrorCode(%"class.icu_69::CollationIterator"*, %"struct.icu_69::CollationData"*, %"class.icu_69::UCharsTrie"* dereferenceable(32), i32, i32, i32, i32* dereferenceable(4)) local_unnamed_addr #0 align 2 {
  %8 = load i32, i32* %6, align 4
  %9 = icmp slt i32 %8, 1
  br i1 %9, label %10, label %673

10:                                               ; preds = %7
  %11 = getelementptr inbounds %"struct.icu_69::CollationData", %"struct.icu_69::CollationData"* %1, i64 0, i32 6
  %12 = load %"class.icu_69::Normalizer2Impl"*, %"class.icu_69::Normalizer2Impl"** %11, align 8
  %13 = getelementptr inbounds %"class.icu_69::Normalizer2Impl", %"class.icu_69::Normalizer2Impl"* %12, i64 0, i32 1
  %14 = load i16, i16* %13, align 8
  %15 = zext i16 %14 to i32
  %16 = icmp sgt i32 %15, %5
  br i1 %16, label %36, label %17

17:                                               ; preds = %10
  %18 = icmp slt i32 %5, 65536
  br i1 %18, label %19, label %34

19:                                               ; preds = %17
  %20 = getelementptr inbounds %"class.icu_69::Normalizer2Impl", %"class.icu_69::Normalizer2Impl"* %12, i64 0, i32 16
  %21 = load i8*, i8** %20, align 8
  %22 = ashr i32 %5, 8
  %23 = sext i32 %22 to i64
  %24 = getelementptr inbounds i8, i8* %21, i64 %23
  %25 = load i8, i8* %24, align 1
  %26 = icmp eq i8 %25, 0
  br i1 %26, label %36, label %27

27:                                               ; preds = %19
  %28 = zext i8 %25 to i32
  %29 = lshr i32 %5, 5
  %30 = and i32 %29, 7
  %31 = shl i32 1, %30
  %32 = and i32 %31, %28
  %33 = icmp eq i32 %32, 0
  br i1 %33, label %36, label %34

34:                                               ; preds = %27, %17
  %35 = tail call zeroext i16 @_ZNK6icu_6915Normalizer2Impl20getFCD16FromNormDataEi(%"class.icu_69::Normalizer2Impl"* %12, i32 %5) #12
  br label %36

36:                                               ; preds = %10, %19, %27, %34
  %37 = phi i16 [ %35, %34 ], [ 0, %10 ], [ 0, %27 ], [ 0, %19 ]
  %38 = getelementptr inbounds %"class.icu_69::CollationIterator", %"class.icu_69::CollationIterator"* %0, i64 0, i32 6
  %39 = load %"class.icu_69::SkippedState"*, %"class.icu_69::SkippedState"** %38, align 8
  %40 = icmp eq %"class.icu_69::SkippedState"* %39, null
  br i1 %40, label %63, label %41

41:                                               ; preds = %36
  %42 = getelementptr inbounds %"class.icu_69::SkippedState", %"class.icu_69::SkippedState"* %39, i64 0, i32 3
  %43 = load i32, i32* %42, align 8
  %44 = getelementptr inbounds %"class.icu_69::SkippedState", %"class.icu_69::SkippedState"* %39, i64 0, i32 1, i32 1, i32 0, i32 0
  %45 = load i16, i16* %44, align 8
  %46 = icmp slt i16 %45, 0
  br i1 %46, label %50, label %47

47:                                               ; preds = %41
  %48 = lshr i16 %45, 5
  %49 = zext i16 %48 to i32
  br label %53

50:                                               ; preds = %41
  %51 = getelementptr inbounds %"class.icu_69::SkippedState", %"class.icu_69::SkippedState"* %39, i64 0, i32 1, i32 1, i32 0, i32 1
  %52 = load i32, i32* %51, align 4
  br label %53

53:                                               ; preds = %50, %47
  %54 = phi i32 [ %49, %47 ], [ %52, %50 ]
  %55 = icmp slt i32 %43, %54
  br i1 %55, label %56, label %63

56:                                               ; preds = %53
  %57 = getelementptr inbounds %"class.icu_69::SkippedState", %"class.icu_69::SkippedState"* %39, i64 0, i32 1
  %58 = tail call i32 @_ZNK6icu_6913UnicodeString8char32AtEi(%"class.icu_69::UnicodeString"* %57, i32 %43) #12
  %59 = icmp ult i32 %58, 65536
  %60 = select i1 %59, i32 1, i32 2
  %61 = load i32, i32* %42, align 8
  %62 = add nsw i32 %60, %61
  store i32 %62, i32* %42, align 8
  br label %92

63:                                               ; preds = %53, %36
  %64 = getelementptr inbounds %"class.icu_69::CollationIterator", %"class.icu_69::CollationIterator"* %0, i64 0, i32 7
  %65 = load i32, i32* %64, align 8
  %66 = icmp eq i32 %65, 0
  br i1 %66, label %97, label %67

67:                                               ; preds = %63
  %68 = bitcast %"class.icu_69::CollationIterator"* %0 to i32 (%"class.icu_69::CollationIterator"*, i32*)***
  %69 = load i32 (%"class.icu_69::CollationIterator"*, i32*)**, i32 (%"class.icu_69::CollationIterator"*, i32*)*** %68, align 8
  %70 = getelementptr inbounds i32 (%"class.icu_69::CollationIterator"*, i32*)*, i32 (%"class.icu_69::CollationIterator"*, i32*)** %69, i64 6
  %71 = load i32 (%"class.icu_69::CollationIterator"*, i32*)*, i32 (%"class.icu_69::CollationIterator"*, i32*)** %70, align 8
  %72 = tail call i32 %71(%"class.icu_69::CollationIterator"* %0, i32* dereferenceable(4) %6) #12
  %73 = load %"class.icu_69::SkippedState"*, %"class.icu_69::SkippedState"** %38, align 8
  %74 = icmp eq %"class.icu_69::SkippedState"* %73, null
  br i1 %74, label %85, label %75

75:                                               ; preds = %67
  %76 = getelementptr inbounds %"class.icu_69::SkippedState", %"class.icu_69::SkippedState"* %73, i64 0, i32 1, i32 1, i32 0, i32 0
  %77 = load i16, i16* %76, align 8
  %78 = icmp ugt i16 %77, 31
  %79 = icmp sgt i32 %72, -1
  %80 = and i1 %79, %78
  br i1 %80, label %81, label %85

81:                                               ; preds = %75
  %82 = getelementptr inbounds %"class.icu_69::SkippedState", %"class.icu_69::SkippedState"* %73, i64 0, i32 3
  %83 = load i32, i32* %82, align 8
  %84 = add nsw i32 %83, 1
  store i32 %84, i32* %82, align 8
  br label %85

85:                                               ; preds = %81, %75, %67
  %86 = load i32, i32* %64, align 8
  %87 = icmp sgt i32 %86, 0
  %88 = icmp sgt i32 %72, -1
  %89 = and i1 %88, %87
  br i1 %89, label %90, label %92

90:                                               ; preds = %85
  %91 = add nsw i32 %86, -1
  store i32 %91, i32* %64, align 8
  br label %133

92:                                               ; preds = %56, %85
  %93 = phi i32 [ %58, %56 ], [ %72, %85 ]
  %94 = icmp slt i32 %93, 0
  br i1 %94, label %95, label %133

95:                                               ; preds = %92
  %96 = load %"class.icu_69::SkippedState"*, %"class.icu_69::SkippedState"** %38, align 8
  br label %97

97:                                               ; preds = %95, %63
  %98 = phi %"class.icu_69::SkippedState"* [ %96, %95 ], [ %39, %63 ]
  %99 = icmp eq %"class.icu_69::SkippedState"* %98, null
  br i1 %99, label %122, label %100

100:                                              ; preds = %97
  %101 = getelementptr inbounds %"class.icu_69::SkippedState", %"class.icu_69::SkippedState"* %98, i64 0, i32 1, i32 1, i32 0, i32 0
  %102 = load i16, i16* %101, align 8
  %103 = icmp ugt i16 %102, 31
  br i1 %103, label %104, label %122

104:                                              ; preds = %100
  %105 = getelementptr inbounds %"class.icu_69::SkippedState", %"class.icu_69::SkippedState"* %98, i64 0, i32 1
  %106 = icmp slt i16 %102, 0
  br i1 %106, label %110, label %107

107:                                              ; preds = %104
  %108 = lshr i16 %102, 5
  %109 = zext i16 %108 to i32
  br label %113

110:                                              ; preds = %104
  %111 = getelementptr inbounds %"class.icu_69::SkippedState", %"class.icu_69::SkippedState"* %98, i64 0, i32 1, i32 1, i32 0, i32 1
  %112 = load i32, i32* %111, align 4
  br label %113

113:                                              ; preds = %110, %107
  %114 = phi i32 [ %109, %107 ], [ %112, %110 ]
  %115 = getelementptr inbounds %"class.icu_69::SkippedState", %"class.icu_69::SkippedState"* %98, i64 0, i32 3
  %116 = load i32, i32* %115, align 8
  %117 = icmp sgt i32 %116, %114
  br i1 %117, label %118, label %120

118:                                              ; preds = %113
  %119 = add nsw i32 %116, -1
  store i32 %119, i32* %115, align 8
  br label %122

120:                                              ; preds = %113
  %121 = tail call i32 @_ZNK6icu_6913UnicodeString11moveIndex32Eii(%"class.icu_69::UnicodeString"* %105, i32 %116, i32 -1) #12
  store i32 %121, i32* %115, align 8
  br label %122

122:                                              ; preds = %120, %118, %100, %97
  %123 = phi i32 [ 1, %100 ], [ 1, %97 ], [ 1, %118 ], [ 0, %120 ]
  %124 = bitcast %"class.icu_69::CollationIterator"* %0 to void (%"class.icu_69::CollationIterator"*, i32, i32*)***
  %125 = load void (%"class.icu_69::CollationIterator"*, i32, i32*)**, void (%"class.icu_69::CollationIterator"*, i32, i32*)*** %124, align 8
  %126 = getelementptr inbounds void (%"class.icu_69::CollationIterator"*, i32, i32*)*, void (%"class.icu_69::CollationIterator"*, i32, i32*)** %125, i64 13
  %127 = load void (%"class.icu_69::CollationIterator"*, i32, i32*)*, void (%"class.icu_69::CollationIterator"*, i32, i32*)** %126, align 8
  tail call void %127(%"class.icu_69::CollationIterator"* %0, i32 %123, i32* dereferenceable(4) %6) #12
  %128 = getelementptr inbounds %"class.icu_69::CollationIterator", %"class.icu_69::CollationIterator"* %0, i64 0, i32 7
  %129 = load i32, i32* %128, align 8
  %130 = icmp sgt i32 %129, -1
  br i1 %130, label %131, label %673

131:                                              ; preds = %122
  %132 = add nuw nsw i32 %129, %123
  store i32 %132, i32* %128, align 8
  br label %673

133:                                              ; preds = %90, %92
  %134 = phi i32 [ %72, %90 ], [ %93, %92 ]
  %135 = add i32 %4, 1
  %136 = trunc i16 %37 to i8
  %137 = load %"class.icu_69::Normalizer2Impl"*, %"class.icu_69::Normalizer2Impl"** %11, align 8
  %138 = getelementptr inbounds %"class.icu_69::Normalizer2Impl", %"class.icu_69::Normalizer2Impl"* %137, i64 0, i32 1
  %139 = load i16, i16* %138, align 8
  %140 = zext i16 %139 to i32
  %141 = icmp slt i32 %134, %140
  br i1 %141, label %162, label %142

142:                                              ; preds = %133
  %143 = icmp slt i32 %134, 65536
  br i1 %143, label %144, label %159

144:                                              ; preds = %142
  %145 = getelementptr inbounds %"class.icu_69::Normalizer2Impl", %"class.icu_69::Normalizer2Impl"* %137, i64 0, i32 16
  %146 = load i8*, i8** %145, align 8
  %147 = lshr i32 %134, 8
  %148 = zext i32 %147 to i64
  %149 = getelementptr inbounds i8, i8* %146, i64 %148
  %150 = load i8, i8* %149, align 1
  %151 = icmp eq i8 %150, 0
  br i1 %151, label %162, label %152

152:                                              ; preds = %144
  %153 = zext i8 %150 to i32
  %154 = lshr i32 %134, 5
  %155 = and i32 %154, 7
  %156 = shl i32 1, %155
  %157 = and i32 %156, %153
  %158 = icmp eq i32 %157, 0
  br i1 %158, label %162, label %159

159:                                              ; preds = %142, %152
  %160 = tail call zeroext i16 @_ZNK6icu_6915Normalizer2Impl20getFCD16FromNormDataEi(%"class.icu_69::Normalizer2Impl"* %137, i32 %134) #12
  %161 = icmp ult i16 %160, 256
  br i1 %161, label %162, label %203

162:                                              ; preds = %144, %152, %133, %159
  %163 = load %"class.icu_69::SkippedState"*, %"class.icu_69::SkippedState"** %38, align 8
  %164 = icmp eq %"class.icu_69::SkippedState"* %163, null
  br i1 %164, label %192, label %165

165:                                              ; preds = %162
  %166 = getelementptr inbounds %"class.icu_69::SkippedState", %"class.icu_69::SkippedState"* %163, i64 0, i32 1, i32 1, i32 0, i32 0
  %167 = load i16, i16* %166, align 8
  %168 = icmp ugt i16 %167, 31
  br i1 %168, label %169, label %192

169:                                              ; preds = %165
  %170 = getelementptr inbounds %"class.icu_69::SkippedState", %"class.icu_69::SkippedState"* %163, i64 0, i32 1
  %171 = icmp slt i16 %167, 0
  br i1 %171, label %175, label %172

172:                                              ; preds = %169
  %173 = lshr i16 %167, 5
  %174 = zext i16 %173 to i32
  br label %178

175:                                              ; preds = %169
  %176 = getelementptr inbounds %"class.icu_69::SkippedState", %"class.icu_69::SkippedState"* %163, i64 0, i32 1, i32 1, i32 0, i32 1
  %177 = load i32, i32* %176, align 4
  br label %178

178:                                              ; preds = %175, %172
  %179 = phi i32 [ %174, %172 ], [ %177, %175 ]
  %180 = getelementptr inbounds %"class.icu_69::SkippedState", %"class.icu_69::SkippedState"* %163, i64 0, i32 3
  %181 = load i32, i32* %180, align 8
  %182 = sub nsw i32 %181, %179
  %183 = icmp sgt i32 %182, 0
  br i1 %183, label %184, label %190

184:                                              ; preds = %178
  %185 = icmp eq i32 %182, 1
  br i1 %185, label %188, label %186

186:                                              ; preds = %184
  %187 = add nsw i32 %181, -2
  store i32 %187, i32* %180, align 8
  br label %192

188:                                              ; preds = %184
  %189 = tail call i32 @_ZNK6icu_6913UnicodeString11moveIndex32Eii(%"class.icu_69::UnicodeString"* %170, i32 %179, i32 -1) #12
  store i32 %189, i32* %180, align 8
  br label %192

190:                                              ; preds = %178
  %191 = tail call i32 @_ZNK6icu_6913UnicodeString11moveIndex32Eii(%"class.icu_69::UnicodeString"* %170, i32 %181, i32 -2) #12
  store i32 %191, i32* %180, align 8
  br label %192

192:                                              ; preds = %190, %188, %186, %165, %162
  %193 = phi i32 [ 2, %165 ], [ 2, %162 ], [ 2, %186 ], [ 1, %188 ], [ 0, %190 ]
  %194 = bitcast %"class.icu_69::CollationIterator"* %0 to void (%"class.icu_69::CollationIterator"*, i32, i32*)***
  %195 = load void (%"class.icu_69::CollationIterator"*, i32, i32*)**, void (%"class.icu_69::CollationIterator"*, i32, i32*)*** %194, align 8
  %196 = getelementptr inbounds void (%"class.icu_69::CollationIterator"*, i32, i32*)*, void (%"class.icu_69::CollationIterator"*, i32, i32*)** %195, i64 13
  %197 = load void (%"class.icu_69::CollationIterator"*, i32, i32*)*, void (%"class.icu_69::CollationIterator"*, i32, i32*)** %196, align 8
  tail call void %197(%"class.icu_69::CollationIterator"* %0, i32 %193, i32* dereferenceable(4) %6) #12
  %198 = getelementptr inbounds %"class.icu_69::CollationIterator", %"class.icu_69::CollationIterator"* %0, i64 0, i32 7
  %199 = load i32, i32* %198, align 8
  %200 = icmp sgt i32 %199, -1
  br i1 %200, label %201, label %673

201:                                              ; preds = %192
  %202 = add nuw nsw i32 %199, %193
  store i32 %202, i32* %198, align 8
  br label %673

203:                                              ; preds = %159
  %204 = load %"class.icu_69::SkippedState"*, %"class.icu_69::SkippedState"** %38, align 8
  %205 = icmp eq %"class.icu_69::SkippedState"* %204, null
  br i1 %205, label %210, label %206

206:                                              ; preds = %203
  %207 = getelementptr inbounds %"class.icu_69::SkippedState", %"class.icu_69::SkippedState"* %204, i64 0, i32 1, i32 1, i32 0, i32 0
  %208 = load i16, i16* %207, align 8
  %209 = icmp ugt i16 %208, 31
  br i1 %209, label %269, label %225

210:                                              ; preds = %203
  %211 = tail call i8* @_ZN6icu_697UMemorynwEm(i64 168) #12
  %212 = icmp eq i8* %211, null
  br i1 %212, label %213, label %214

213:                                              ; preds = %210
  store %"class.icu_69::SkippedState"* null, %"class.icu_69::SkippedState"** %38, align 8
  store i32 7, i32* %6, align 4
  br label %673

214:                                              ; preds = %210
  %215 = getelementptr inbounds i8, i8* %211, i64 8
  %216 = bitcast i8* %215 to i32 (...)***
  store i32 (...)** bitcast (i8** getelementptr inbounds ({ [13 x i8*] }, { [13 x i8*] }* @_ZTVN6icu_6913UnicodeStringE, i64 0, inrange i32 0, i64 2) to i32 (...)**), i32 (...)*** %216, align 8
  %217 = getelementptr inbounds i8, i8* %211, i64 16
  %218 = bitcast i8* %217 to i16*
  store i16 2, i16* %218, align 8
  %219 = getelementptr inbounds i8, i8* %211, i64 72
  %220 = bitcast i8* %219 to i32 (...)***
  store i32 (...)** bitcast (i8** getelementptr inbounds ({ [13 x i8*] }, { [13 x i8*] }* @_ZTVN6icu_6913UnicodeStringE, i64 0, inrange i32 0, i64 2) to i32 (...)**), i32 (...)*** %220, align 8
  %221 = getelementptr inbounds i8, i8* %211, i64 80
  %222 = bitcast i8* %221 to i16*
  store i16 2, i16* %222, align 8
  %223 = getelementptr inbounds i8, i8* %211, i64 136
  tail call void @llvm.memset.p0i8.i64(i8* align 8 %223, i8 0, i64 16, i1 false) #12
  %224 = bitcast %"class.icu_69::SkippedState"** %38 to i8**
  store i8* %211, i8** %224, align 8
  br label %225

225:                                              ; preds = %214, %206
  %226 = getelementptr inbounds %"class.icu_69::UCharsTrie", %"class.icu_69::UCharsTrie"* %2, i64 0, i32 1
  %227 = bitcast i16** %226 to i64*
  %228 = load i64, i64* %227, align 8
  %229 = getelementptr inbounds %"class.icu_69::UCharsTrie", %"class.icu_69::UCharsTrie"* %2, i64 0, i32 2
  %230 = bitcast i16** %229 to i64*
  store i64 %228, i64* %230, align 8
  %231 = getelementptr inbounds %"class.icu_69::UCharsTrie", %"class.icu_69::UCharsTrie"* %2, i64 0, i32 3
  store i32 -1, i32* %231, align 8
  %232 = icmp sgt i32 %4, 1
  br i1 %232, label %233, label %259

233:                                              ; preds = %225
  %234 = bitcast %"class.icu_69::CollationIterator"* %0 to void (%"class.icu_69::CollationIterator"*, i32, i32*)***
  %235 = load void (%"class.icu_69::CollationIterator"*, i32, i32*)**, void (%"class.icu_69::CollationIterator"*, i32, i32*)*** %234, align 8
  %236 = getelementptr inbounds void (%"class.icu_69::CollationIterator"*, i32, i32*)*, void (%"class.icu_69::CollationIterator"*, i32, i32*)** %235, i64 13
  %237 = load void (%"class.icu_69::CollationIterator"*, i32, i32*)*, void (%"class.icu_69::CollationIterator"*, i32, i32*)** %236, align 8
  tail call void %237(%"class.icu_69::CollationIterator"* %0, i32 %135, i32* dereferenceable(4) %6) #12
  %238 = bitcast %"class.icu_69::CollationIterator"* %0 to i32 (%"class.icu_69::CollationIterator"*, i32*)***
  %239 = load i32 (%"class.icu_69::CollationIterator"*, i32*)**, i32 (%"class.icu_69::CollationIterator"*, i32*)*** %238, align 8
  %240 = getelementptr inbounds i32 (%"class.icu_69::CollationIterator"*, i32*)*, i32 (%"class.icu_69::CollationIterator"*, i32*)** %239, i64 6
  %241 = load i32 (%"class.icu_69::CollationIterator"*, i32*)*, i32 (%"class.icu_69::CollationIterator"*, i32*)** %240, align 8
  %242 = tail call i32 %241(%"class.icu_69::CollationIterator"* %0, i32* dereferenceable(4) %6) #12
  %243 = tail call i32 @_ZN6icu_6910UCharsTrie17firstForCodePointEi(%"class.icu_69::UCharsTrie"* %2, i32 %242) #12
  %244 = icmp eq i32 %4, 2
  br i1 %244, label %245, label %250

245:                                              ; preds = %250, %233
  %246 = load void (%"class.icu_69::CollationIterator"*, i32, i32*)**, void (%"class.icu_69::CollationIterator"*, i32, i32*)*** %234, align 8
  %247 = getelementptr inbounds void (%"class.icu_69::CollationIterator"*, i32, i32*)*, void (%"class.icu_69::CollationIterator"*, i32, i32*)** %246, i64 12
  %248 = load void (%"class.icu_69::CollationIterator"*, i32, i32*)*, void (%"class.icu_69::CollationIterator"*, i32, i32*)** %247, align 8
  tail call void %248(%"class.icu_69::CollationIterator"* %0, i32 2, i32* dereferenceable(4) %6) #12
  %249 = load i64, i64* %227, align 8
  br label %259

250:                                              ; preds = %233, %250
  %251 = phi i32 [ %257, %250 ], [ 3, %233 ]
  %252 = load i32 (%"class.icu_69::CollationIterator"*, i32*)**, i32 (%"class.icu_69::CollationIterator"*, i32*)*** %238, align 8
  %253 = getelementptr inbounds i32 (%"class.icu_69::CollationIterator"*, i32*)*, i32 (%"class.icu_69::CollationIterator"*, i32*)** %252, i64 6
  %254 = load i32 (%"class.icu_69::CollationIterator"*, i32*)*, i32 (%"class.icu_69::CollationIterator"*, i32*)** %253, align 8
  %255 = tail call i32 %254(%"class.icu_69::CollationIterator"* %0, i32* dereferenceable(4) %6) #12
  %256 = tail call i32 @_ZN6icu_6910UCharsTrie16nextForCodePointEi(%"class.icu_69::UCharsTrie"* %2, i32 %255) #12
  %257 = add nuw i32 %251, 1
  %258 = icmp eq i32 %257, %135
  br i1 %258, label %245, label %250

259:                                              ; preds = %245, %225
  %260 = phi i64 [ %249, %245 ], [ %228, %225 ]
  %261 = load %"class.icu_69::SkippedState"*, %"class.icu_69::SkippedState"** %38, align 8
  %262 = getelementptr inbounds %"class.icu_69::SkippedState", %"class.icu_69::SkippedState"* %261, i64 0, i32 5
  %263 = bitcast %"class.icu_69::UCharsTrie::State"* %262 to i64*
  store i64 %260, i64* %263, align 8
  %264 = load i64, i64* %230, align 8
  %265 = getelementptr inbounds %"class.icu_69::SkippedState", %"class.icu_69::SkippedState"* %261, i64 0, i32 5, i32 1
  %266 = bitcast i16** %265 to i64*
  store i64 %264, i64* %266, align 8
  %267 = load i32, i32* %231, align 8
  %268 = getelementptr inbounds %"class.icu_69::SkippedState", %"class.icu_69::SkippedState"* %261, i64 0, i32 5, i32 2
  store i32 %267, i32* %268, align 8
  br label %286

269:                                              ; preds = %206
  %270 = getelementptr inbounds %"class.icu_69::UCharsTrie", %"class.icu_69::UCharsTrie"* %2, i64 0, i32 1
  %271 = load i16*, i16** %270, align 8
  %272 = getelementptr inbounds %"class.icu_69::SkippedState", %"class.icu_69::SkippedState"* %204, i64 0, i32 5, i32 0
  %273 = load i16*, i16** %272, align 8
  %274 = icmp ne i16* %271, %273
  %275 = icmp eq i16* %271, null
  %276 = or i1 %275, %274
  br i1 %276, label %286, label %277

277:                                              ; preds = %269
  %278 = getelementptr inbounds %"class.icu_69::SkippedState", %"class.icu_69::SkippedState"* %204, i64 0, i32 5, i32 1
  %279 = bitcast i16** %278 to i64*
  %280 = load i64, i64* %279, align 8
  %281 = getelementptr inbounds %"class.icu_69::UCharsTrie", %"class.icu_69::UCharsTrie"* %2, i64 0, i32 2
  %282 = bitcast i16** %281 to i64*
  store i64 %280, i64* %282, align 8
  %283 = getelementptr inbounds %"class.icu_69::SkippedState", %"class.icu_69::SkippedState"* %204, i64 0, i32 5, i32 2
  %284 = load i32, i32* %283, align 8
  %285 = getelementptr inbounds %"class.icu_69::UCharsTrie", %"class.icu_69::UCharsTrie"* %2, i64 0, i32 3
  store i32 %284, i32* %285, align 8
  br label %286

286:                                              ; preds = %277, %269, %259
  %287 = load %"class.icu_69::SkippedState"*, %"class.icu_69::SkippedState"** %38, align 8
  %288 = getelementptr inbounds %"class.icu_69::SkippedState", %"class.icu_69::SkippedState"* %287, i64 0, i32 4
  store i32 0, i32* %288, align 4
  %289 = getelementptr inbounds %"class.icu_69::SkippedState", %"class.icu_69::SkippedState"* %287, i64 0, i32 2
  tail call void @_ZN6icu_6913UnicodeString7unBogusEv(%"class.icu_69::UnicodeString"* %289) #12
  %290 = getelementptr inbounds %"class.icu_69::SkippedState", %"class.icu_69::SkippedState"* %287, i64 0, i32 2, i32 1, i32 0, i32 0
  %291 = load i16, i16* %290, align 8
  %292 = icmp slt i16 %291, 0
  br i1 %292, label %296, label %293

293:                                              ; preds = %286
  %294 = lshr i16 %291, 5
  %295 = zext i16 %294 to i32
  br label %299

296:                                              ; preds = %286
  %297 = getelementptr inbounds %"class.icu_69::SkippedState", %"class.icu_69::SkippedState"* %287, i64 0, i32 2, i32 1, i32 0, i32 1
  %298 = load i32, i32* %297, align 4
  br label %299

299:                                              ; preds = %293, %296
  %300 = phi i32 [ %295, %293 ], [ %298, %296 ]
  %301 = tail call dereferenceable(64) %"class.icu_69::UnicodeString"* @_ZN6icu_6913UnicodeString7replaceEiii(%"class.icu_69::UnicodeString"* %289, i32 0, i32 %300, i32 %5) #12
  %302 = getelementptr inbounds %"class.icu_69::UCharsTrie", %"class.icu_69::UCharsTrie"* %2, i64 0, i32 1
  %303 = getelementptr inbounds %"class.icu_69::UCharsTrie", %"class.icu_69::UCharsTrie"* %2, i64 0, i32 2
  %304 = bitcast i16** %303 to i64*
  %305 = getelementptr inbounds %"class.icu_69::UCharsTrie", %"class.icu_69::UCharsTrie"* %2, i64 0, i32 3
  %306 = bitcast i16** %302 to i64*
  %307 = getelementptr inbounds %"class.icu_69::CollationIterator", %"class.icu_69::CollationIterator"* %0, i64 0, i32 7
  %308 = bitcast %"class.icu_69::CollationIterator"* %0 to i32 (%"class.icu_69::CollationIterator"*, i32*)***
  br label %309

309:                                              ; preds = %498, %299
  %310 = phi i32 [ %3, %299 ], [ %416, %498 ]
  %311 = phi i32 [ %134, %299 ], [ %474, %498 ]
  %312 = phi i16 [ %160, %299 ], [ %499, %498 ]
  %313 = phi i8 [ %136, %299 ], [ %417, %498 ]
  %314 = phi i32 [ 2, %299 ], [ %475, %498 ]
  %315 = zext i8 %313 to i32
  %316 = lshr i16 %312, 8
  %317 = zext i16 %316 to i32
  %318 = icmp ult i32 %315, %317
  br i1 %318, label %319, label %396

319:                                              ; preds = %309
  %320 = tail call i32 @_ZN6icu_6910UCharsTrie16nextForCodePointEi(%"class.icu_69::UCharsTrie"* %2, i32 %311) #12
  %321 = icmp sgt i32 %320, 1
  br i1 %321, label %322, label %396

322:                                              ; preds = %319
  %323 = load i16*, i16** %303, align 8
  %324 = getelementptr inbounds i16, i16* %323, i64 1
  %325 = load i16, i16* %323, align 2
  %326 = zext i16 %325 to i32
  %327 = icmp slt i16 %325, 0
  br i1 %327, label %328, label %347

328:                                              ; preds = %322
  %329 = and i32 %326, 32767
  %330 = icmp ult i32 %329, 16384
  br i1 %330, label %369, label %331

331:                                              ; preds = %328
  %332 = icmp eq i32 %329, 32767
  br i1 %332, label %339, label %333

333:                                              ; preds = %331
  %334 = shl nuw nsw i32 %329, 16
  %335 = add nsw i32 %334, -1073741824
  %336 = load i16, i16* %324, align 2
  %337 = zext i16 %336 to i32
  %338 = or i32 %335, %337
  br label %369

339:                                              ; preds = %331
  %340 = load i16, i16* %324, align 2
  %341 = zext i16 %340 to i32
  %342 = shl nuw i32 %341, 16
  %343 = getelementptr inbounds i16, i16* %323, i64 2
  %344 = load i16, i16* %343, align 2
  %345 = zext i16 %344 to i32
  %346 = or i32 %342, %345
  br label %369

347:                                              ; preds = %322
  %348 = icmp ult i16 %325, 16448
  br i1 %348, label %349, label %352

349:                                              ; preds = %347
  %350 = lshr i32 %326, 6
  %351 = add nsw i32 %350, -1
  br label %369

352:                                              ; preds = %347
  %353 = icmp ult i16 %325, 32704
  br i1 %353, label %354, label %361

354:                                              ; preds = %352
  %355 = shl nuw nsw i32 %326, 10
  %356 = and i32 %355, 33488896
  %357 = add nsw i32 %356, -16842752
  %358 = load i16, i16* %324, align 2
  %359 = zext i16 %358 to i32
  %360 = or i32 %357, %359
  br label %369

361:                                              ; preds = %352
  %362 = load i16, i16* %324, align 2
  %363 = zext i16 %362 to i32
  %364 = shl nuw i32 %363, 16
  %365 = getelementptr inbounds i16, i16* %323, i64 2
  %366 = load i16, i16* %365, align 2
  %367 = zext i16 %366 to i32
  %368 = or i32 %364, %367
  br label %369

369:                                              ; preds = %328, %333, %339, %349, %354, %361
  %370 = phi i32 [ %338, %333 ], [ %346, %339 ], [ %329, %328 ], [ %351, %349 ], [ %360, %354 ], [ %368, %361 ]
  %371 = load %"class.icu_69::SkippedState"*, %"class.icu_69::SkippedState"** %38, align 8
  %372 = getelementptr inbounds %"class.icu_69::SkippedState", %"class.icu_69::SkippedState"* %371, i64 0, i32 2, i32 1, i32 0, i32 0
  %373 = load i16, i16* %372, align 8
  %374 = icmp slt i16 %373, 0
  br i1 %374, label %378, label %375

375:                                              ; preds = %369
  %376 = lshr i16 %373, 5
  %377 = zext i16 %376 to i32
  br label %381

378:                                              ; preds = %369
  %379 = getelementptr inbounds %"class.icu_69::SkippedState", %"class.icu_69::SkippedState"* %371, i64 0, i32 2, i32 1, i32 0, i32 1
  %380 = load i32, i32* %379, align 4
  br label %381

381:                                              ; preds = %375, %378
  %382 = phi i32 [ %377, %375 ], [ %380, %378 ]
  %383 = getelementptr inbounds %"class.icu_69::SkippedState", %"class.icu_69::SkippedState"* %371, i64 0, i32 4
  store i32 %382, i32* %383, align 4
  %384 = and i32 %320, 1
  %385 = icmp eq i32 %384, 0
  br i1 %385, label %501, label %386

386:                                              ; preds = %381
  %387 = load %"class.icu_69::SkippedState"*, %"class.icu_69::SkippedState"** %38, align 8
  %388 = getelementptr inbounds %"class.icu_69::SkippedState", %"class.icu_69::SkippedState"* %387, i64 0, i32 5
  %389 = load i64, i64* %306, align 8
  %390 = bitcast %"class.icu_69::UCharsTrie::State"* %388 to i64*
  store i64 %389, i64* %390, align 8
  %391 = load i64, i64* %304, align 8
  %392 = getelementptr inbounds %"class.icu_69::SkippedState", %"class.icu_69::SkippedState"* %387, i64 0, i32 5, i32 1
  %393 = bitcast i16** %392 to i64*
  store i64 %391, i64* %393, align 8
  %394 = load i32, i32* %305, align 8
  %395 = getelementptr inbounds %"class.icu_69::SkippedState", %"class.icu_69::SkippedState"* %387, i64 0, i32 5, i32 2
  store i32 %394, i32* %395, align 8
  br label %415

396:                                              ; preds = %319, %309
  %397 = load %"class.icu_69::SkippedState"*, %"class.icu_69::SkippedState"** %38, align 8
  %398 = getelementptr inbounds %"class.icu_69::SkippedState", %"class.icu_69::SkippedState"* %397, i64 0, i32 2
  %399 = tail call dereferenceable(64) %"class.icu_69::UnicodeString"* @_ZN6icu_6913UnicodeString6appendEi(%"class.icu_69::UnicodeString"* %398, i32 %311) #12
  %400 = load %"class.icu_69::SkippedState"*, %"class.icu_69::SkippedState"** %38, align 8
  %401 = load i16*, i16** %302, align 8
  %402 = getelementptr inbounds %"class.icu_69::SkippedState", %"class.icu_69::SkippedState"* %400, i64 0, i32 5, i32 0
  %403 = load i16*, i16** %402, align 8
  %404 = icmp ne i16* %401, %403
  %405 = icmp eq i16* %401, null
  %406 = or i1 %405, %404
  br i1 %406, label %413, label %407

407:                                              ; preds = %396
  %408 = getelementptr inbounds %"class.icu_69::SkippedState", %"class.icu_69::SkippedState"* %400, i64 0, i32 5, i32 1
  %409 = bitcast i16** %408 to i64*
  %410 = load i64, i64* %409, align 8
  store i64 %410, i64* %304, align 8
  %411 = getelementptr inbounds %"class.icu_69::SkippedState", %"class.icu_69::SkippedState"* %400, i64 0, i32 5, i32 2
  %412 = load i32, i32* %411, align 8
  store i32 %412, i32* %305, align 8
  br label %413

413:                                              ; preds = %396, %407
  %414 = trunc i16 %312 to i8
  br label %415

415:                                              ; preds = %413, %386
  %416 = phi i32 [ %370, %386 ], [ %310, %413 ]
  %417 = phi i8 [ %313, %386 ], [ %414, %413 ]
  %418 = phi i32 [ 0, %386 ], [ %314, %413 ]
  %419 = load %"class.icu_69::SkippedState"*, %"class.icu_69::SkippedState"** %38, align 8
  %420 = icmp eq %"class.icu_69::SkippedState"* %419, null
  br i1 %420, label %443, label %421

421:                                              ; preds = %415
  %422 = getelementptr inbounds %"class.icu_69::SkippedState", %"class.icu_69::SkippedState"* %419, i64 0, i32 3
  %423 = load i32, i32* %422, align 8
  %424 = getelementptr inbounds %"class.icu_69::SkippedState", %"class.icu_69::SkippedState"* %419, i64 0, i32 1, i32 1, i32 0, i32 0
  %425 = load i16, i16* %424, align 8
  %426 = icmp slt i16 %425, 0
  br i1 %426, label %430, label %427

427:                                              ; preds = %421
  %428 = lshr i16 %425, 5
  %429 = zext i16 %428 to i32
  br label %433

430:                                              ; preds = %421
  %431 = getelementptr inbounds %"class.icu_69::SkippedState", %"class.icu_69::SkippedState"* %419, i64 0, i32 1, i32 1, i32 0, i32 1
  %432 = load i32, i32* %431, align 4
  br label %433

433:                                              ; preds = %430, %427
  %434 = phi i32 [ %429, %427 ], [ %432, %430 ]
  %435 = icmp slt i32 %423, %434
  br i1 %435, label %436, label %443

436:                                              ; preds = %433
  %437 = getelementptr inbounds %"class.icu_69::SkippedState", %"class.icu_69::SkippedState"* %419, i64 0, i32 1
  %438 = tail call i32 @_ZNK6icu_6913UnicodeString8char32AtEi(%"class.icu_69::UnicodeString"* %437, i32 %423) #12
  %439 = icmp ult i32 %438, 65536
  %440 = select i1 %439, i32 1, i32 2
  %441 = load i32, i32* %422, align 8
  %442 = add nsw i32 %440, %441
  store i32 %442, i32* %422, align 8
  br label %470

443:                                              ; preds = %433, %415
  %444 = load i32, i32* %307, align 8
  %445 = icmp eq i32 %444, 0
  br i1 %445, label %501, label %446

446:                                              ; preds = %443
  %447 = load i32 (%"class.icu_69::CollationIterator"*, i32*)**, i32 (%"class.icu_69::CollationIterator"*, i32*)*** %308, align 8
  %448 = getelementptr inbounds i32 (%"class.icu_69::CollationIterator"*, i32*)*, i32 (%"class.icu_69::CollationIterator"*, i32*)** %447, i64 6
  %449 = load i32 (%"class.icu_69::CollationIterator"*, i32*)*, i32 (%"class.icu_69::CollationIterator"*, i32*)** %448, align 8
  %450 = tail call i32 %449(%"class.icu_69::CollationIterator"* %0, i32* dereferenceable(4) %6) #12
  %451 = load %"class.icu_69::SkippedState"*, %"class.icu_69::SkippedState"** %38, align 8
  %452 = icmp eq %"class.icu_69::SkippedState"* %451, null
  br i1 %452, label %463, label %453

453:                                              ; preds = %446
  %454 = getelementptr inbounds %"class.icu_69::SkippedState", %"class.icu_69::SkippedState"* %451, i64 0, i32 1, i32 1, i32 0, i32 0
  %455 = load i16, i16* %454, align 8
  %456 = icmp ugt i16 %455, 31
  %457 = icmp sgt i32 %450, -1
  %458 = and i1 %457, %456
  br i1 %458, label %459, label %463

459:                                              ; preds = %453
  %460 = getelementptr inbounds %"class.icu_69::SkippedState", %"class.icu_69::SkippedState"* %451, i64 0, i32 3
  %461 = load i32, i32* %460, align 8
  %462 = add nsw i32 %461, 1
  store i32 %462, i32* %460, align 8
  br label %463

463:                                              ; preds = %459, %453, %446
  %464 = load i32, i32* %307, align 8
  %465 = icmp sgt i32 %464, 0
  %466 = icmp sgt i32 %450, -1
  %467 = and i1 %466, %465
  br i1 %467, label %468, label %470

468:                                              ; preds = %463
  %469 = add nsw i32 %464, -1
  store i32 %469, i32* %307, align 8
  br label %473

470:                                              ; preds = %436, %463
  %471 = phi i32 [ %438, %436 ], [ %450, %463 ]
  %472 = icmp slt i32 %471, 0
  br i1 %472, label %501, label %473

473:                                              ; preds = %468, %470
  %474 = phi i32 [ %450, %468 ], [ %471, %470 ]
  %475 = add nsw i32 %418, 1
  %476 = load %"class.icu_69::Normalizer2Impl"*, %"class.icu_69::Normalizer2Impl"** %11, align 8
  %477 = getelementptr inbounds %"class.icu_69::Normalizer2Impl", %"class.icu_69::Normalizer2Impl"* %476, i64 0, i32 1
  %478 = load i16, i16* %477, align 8
  %479 = zext i16 %478 to i32
  %480 = icmp slt i32 %474, %479
  br i1 %480, label %501, label %481

481:                                              ; preds = %473
  %482 = icmp slt i32 %474, 65536
  br i1 %482, label %483, label %498

483:                                              ; preds = %481
  %484 = getelementptr inbounds %"class.icu_69::Normalizer2Impl", %"class.icu_69::Normalizer2Impl"* %476, i64 0, i32 16
  %485 = load i8*, i8** %484, align 8
  %486 = lshr i32 %474, 8
  %487 = zext i32 %486 to i64
  %488 = getelementptr inbounds i8, i8* %485, i64 %487
  %489 = load i8, i8* %488, align 1
  %490 = icmp eq i8 %489, 0
  br i1 %490, label %501, label %491

491:                                              ; preds = %483
  %492 = zext i8 %489 to i32
  %493 = lshr i32 %474, 5
  %494 = and i32 %493, 7
  %495 = shl i32 1, %494
  %496 = and i32 %495, %492
  %497 = icmp eq i32 %496, 0
  br i1 %497, label %501, label %498

498:                                              ; preds = %481, %491
  %499 = tail call zeroext i16 @_ZNK6icu_6915Normalizer2Impl20getFCD16FromNormDataEi(%"class.icu_69::Normalizer2Impl"* %476, i32 %474) #12
  %500 = icmp ult i16 %499, 256
  br i1 %500, label %501, label %309

501:                                              ; preds = %498, %473, %491, %483, %443, %381, %470
  %502 = phi i32 [ %416, %470 ], [ %370, %381 ], [ %416, %443 ], [ %416, %483 ], [ %416, %491 ], [ %416, %473 ], [ %416, %498 ]
  %503 = phi i32 [ %418, %470 ], [ 0, %381 ], [ %418, %443 ], [ %475, %483 ], [ %475, %491 ], [ %475, %473 ], [ %475, %498 ]
  %504 = load %"class.icu_69::SkippedState"*, %"class.icu_69::SkippedState"** %38, align 8
  %505 = icmp eq %"class.icu_69::SkippedState"* %504, null
  br i1 %505, label %535, label %506

506:                                              ; preds = %501
  %507 = getelementptr inbounds %"class.icu_69::SkippedState", %"class.icu_69::SkippedState"* %504, i64 0, i32 1, i32 1, i32 0, i32 0
  %508 = load i16, i16* %507, align 8
  %509 = icmp ugt i16 %508, 31
  br i1 %509, label %510, label %535

510:                                              ; preds = %506
  %511 = getelementptr inbounds %"class.icu_69::SkippedState", %"class.icu_69::SkippedState"* %504, i64 0, i32 1
  %512 = icmp slt i16 %508, 0
  br i1 %512, label %516, label %513

513:                                              ; preds = %510
  %514 = lshr i16 %508, 5
  %515 = zext i16 %514 to i32
  br label %519

516:                                              ; preds = %510
  %517 = getelementptr inbounds %"class.icu_69::SkippedState", %"class.icu_69::SkippedState"* %504, i64 0, i32 1, i32 1, i32 0, i32 1
  %518 = load i32, i32* %517, align 4
  br label %519

519:                                              ; preds = %516, %513
  %520 = phi i32 [ %515, %513 ], [ %518, %516 ]
  %521 = getelementptr inbounds %"class.icu_69::SkippedState", %"class.icu_69::SkippedState"* %504, i64 0, i32 3
  %522 = load i32, i32* %521, align 8
  %523 = sub nsw i32 %522, %520
  %524 = icmp sgt i32 %523, 0
  br i1 %524, label %525, label %532

525:                                              ; preds = %519
  %526 = icmp slt i32 %523, %503
  br i1 %526, label %529, label %527

527:                                              ; preds = %525
  %528 = sub nsw i32 %522, %503
  store i32 %528, i32* %521, align 8
  br label %535

529:                                              ; preds = %525
  %530 = sub nsw i32 %523, %503
  %531 = tail call i32 @_ZNK6icu_6913UnicodeString11moveIndex32Eii(%"class.icu_69::UnicodeString"* %511, i32 %520, i32 %530) #12
  store i32 %531, i32* %521, align 8
  br label %535

532:                                              ; preds = %519
  %533 = sub nsw i32 0, %503
  %534 = tail call i32 @_ZNK6icu_6913UnicodeString11moveIndex32Eii(%"class.icu_69::UnicodeString"* %511, i32 %522, i32 %533) #12
  store i32 %534, i32* %521, align 8
  br label %535

535:                                              ; preds = %532, %529, %527, %506, %501
  %536 = phi i32 [ %503, %506 ], [ %503, %501 ], [ %503, %527 ], [ %523, %529 ], [ 0, %532 ]
  %537 = bitcast %"class.icu_69::CollationIterator"* %0 to void (%"class.icu_69::CollationIterator"*, i32, i32*)***
  %538 = load void (%"class.icu_69::CollationIterator"*, i32, i32*)**, void (%"class.icu_69::CollationIterator"*, i32, i32*)*** %537, align 8
  %539 = getelementptr inbounds void (%"class.icu_69::CollationIterator"*, i32, i32*)*, void (%"class.icu_69::CollationIterator"*, i32, i32*)** %538, i64 13
  %540 = load void (%"class.icu_69::CollationIterator"*, i32, i32*)*, void (%"class.icu_69::CollationIterator"*, i32, i32*)** %539, align 8
  tail call void %540(%"class.icu_69::CollationIterator"* %0, i32 %536, i32* dereferenceable(4) %6) #12
  %541 = load i32, i32* %307, align 8
  %542 = icmp sgt i32 %541, -1
  br i1 %542, label %543, label %545

543:                                              ; preds = %535
  %544 = add nsw i32 %541, %536
  store i32 %544, i32* %307, align 8
  br label %545

545:                                              ; preds = %535, %543
  %546 = load %"class.icu_69::SkippedState"*, %"class.icu_69::SkippedState"** %38, align 8
  %547 = getelementptr inbounds %"class.icu_69::SkippedState", %"class.icu_69::SkippedState"* %546, i64 0, i32 1, i32 1, i32 0, i32 0
  %548 = load i16, i16* %547, align 8
  %549 = icmp ugt i16 %548, 31
  %550 = getelementptr inbounds %"class.icu_69::SkippedState", %"class.icu_69::SkippedState"* %546, i64 0, i32 1
  %551 = getelementptr inbounds %"class.icu_69::SkippedState", %"class.icu_69::SkippedState"* %546, i64 0, i32 3
  %552 = load i32, i32* %551, align 8
  %553 = getelementptr inbounds %"class.icu_69::SkippedState", %"class.icu_69::SkippedState"* %546, i64 0, i32 2
  %554 = getelementptr inbounds %"class.icu_69::SkippedState", %"class.icu_69::SkippedState"* %546, i64 0, i32 4
  %555 = load i32, i32* %554, align 4
  %556 = tail call dereferenceable(64) %"class.icu_69::UnicodeString"* @_ZN6icu_6913UnicodeString9doReplaceEiiRKS0_ii(%"class.icu_69::UnicodeString"* %550, i32 0, i32 %552, %"class.icu_69::UnicodeString"* dereferenceable(64) %553, i32 0, i32 %555) #12
  store i32 0, i32* %551, align 8
  br i1 %549, label %673, label %557

557:                                              ; preds = %545
  %558 = load %"class.icu_69::SkippedState"*, %"class.icu_69::SkippedState"** %38, align 8
  %559 = getelementptr inbounds %"class.icu_69::SkippedState", %"class.icu_69::SkippedState"* %558, i64 0, i32 1, i32 1, i32 0, i32 0
  %560 = load i16, i16* %559, align 8
  %561 = icmp ugt i16 %560, 31
  br i1 %561, label %562, label %673

562:                                              ; preds = %557
  %563 = bitcast %"class.icu_69::CollationIterator"* %0 to i32 (%"class.icu_69::CollationIterator"*, i32)***
  %564 = getelementptr inbounds %"class.icu_69::CollationIterator", %"class.icu_69::CollationIterator"* %0, i64 0, i32 2
  br label %565

565:                                              ; preds = %597, %562
  %566 = phi i32 [ %502, %562 ], [ %598, %597 ]
  %567 = phi i32 [ -1, %562 ], [ %586, %597 ]
  %568 = phi %"struct.icu_69::CollationData"* [ %1, %562 ], [ %599, %597 ]
  tail call void @_ZN6icu_6917CollationIterator17appendCEsFromCE32EPKNS_13CollationDataEijaR10UErrorCode(%"class.icu_69::CollationIterator"* %0, %"struct.icu_69::CollationData"* %568, i32 %567, i32 %566, i8 signext 1, i32* dereferenceable(4) %6)
  %569 = load %"class.icu_69::SkippedState"*, %"class.icu_69::SkippedState"** %38, align 8
  %570 = getelementptr inbounds %"class.icu_69::SkippedState", %"class.icu_69::SkippedState"* %569, i64 0, i32 3
  %571 = load i32, i32* %570, align 8
  %572 = getelementptr inbounds %"class.icu_69::SkippedState", %"class.icu_69::SkippedState"* %569, i64 0, i32 1, i32 1, i32 0, i32 0
  %573 = load i16, i16* %572, align 8
  %574 = icmp slt i16 %573, 0
  br i1 %574, label %578, label %575

575:                                              ; preds = %565
  %576 = lshr i16 %573, 5
  %577 = zext i16 %576 to i32
  br label %581

578:                                              ; preds = %565
  %579 = getelementptr inbounds %"class.icu_69::SkippedState", %"class.icu_69::SkippedState"* %569, i64 0, i32 1, i32 1, i32 0, i32 1
  %580 = load i32, i32* %579, align 4
  br label %581

581:                                              ; preds = %575, %578
  %582 = phi i32 [ %577, %575 ], [ %580, %578 ]
  %583 = icmp slt i32 %571, %582
  br i1 %583, label %584, label %667

584:                                              ; preds = %581
  %585 = getelementptr inbounds %"class.icu_69::SkippedState", %"class.icu_69::SkippedState"* %569, i64 0, i32 1
  %586 = tail call i32 @_ZNK6icu_6913UnicodeString8char32AtEi(%"class.icu_69::UnicodeString"* %585, i32 %571) #12
  %587 = icmp ult i32 %586, 65536
  %588 = select i1 %587, i32 1, i32 2
  %589 = load i32, i32* %570, align 8
  %590 = add nsw i32 %588, %589
  store i32 %590, i32* %570, align 8
  %591 = load i32 (%"class.icu_69::CollationIterator"*, i32)**, i32 (%"class.icu_69::CollationIterator"*, i32)*** %563, align 8
  %592 = getelementptr inbounds i32 (%"class.icu_69::CollationIterator"*, i32)*, i32 (%"class.icu_69::CollationIterator"*, i32)** %591, i64 14
  %593 = load i32 (%"class.icu_69::CollationIterator"*, i32)*, i32 (%"class.icu_69::CollationIterator"*, i32)** %592, align 8
  %594 = tail call i32 %593(%"class.icu_69::CollationIterator"* %0, i32 %586) #12
  %595 = icmp eq i32 %594, 192
  %596 = load %"struct.icu_69::CollationData"*, %"struct.icu_69::CollationData"** %564, align 8
  br i1 %595, label %600, label %597

597:                                              ; preds = %584, %662
  %598 = phi i32 [ %666, %662 ], [ %594, %584 ]
  %599 = phi %"struct.icu_69::CollationData"* [ %602, %662 ], [ %596, %584 ]
  br label %565

600:                                              ; preds = %584
  %601 = getelementptr inbounds %"struct.icu_69::CollationData", %"struct.icu_69::CollationData"* %596, i64 0, i32 4
  %602 = load %"struct.icu_69::CollationData"*, %"struct.icu_69::CollationData"** %601, align 8
  %603 = getelementptr inbounds %"struct.icu_69::CollationData", %"struct.icu_69::CollationData"* %602, i64 0, i32 0
  %604 = load %struct.UTrie2*, %struct.UTrie2** %603, align 8
  %605 = getelementptr inbounds %struct.UTrie2, %struct.UTrie2* %604, i64 0, i32 2
  %606 = load i32*, i32** %605, align 8
  %607 = icmp ult i32 %586, 55296
  br i1 %607, label %608, label %619

608:                                              ; preds = %600
  %609 = getelementptr inbounds %struct.UTrie2, %struct.UTrie2* %604, i64 0, i32 0
  %610 = load i16*, i16** %609, align 8
  %611 = lshr i32 %586, 5
  %612 = zext i32 %611 to i64
  %613 = getelementptr inbounds i16, i16* %610, i64 %612
  %614 = load i16, i16* %613, align 2
  %615 = zext i16 %614 to i32
  %616 = shl nuw nsw i32 %615, 2
  %617 = and i32 %586, 31
  %618 = add nuw nsw i32 %616, %617
  br label %662

619:                                              ; preds = %600
  br i1 %587, label %620, label %634

620:                                              ; preds = %619
  %621 = getelementptr inbounds %struct.UTrie2, %struct.UTrie2* %604, i64 0, i32 0
  %622 = load i16*, i16** %621, align 8
  %623 = icmp slt i32 %586, 56320
  %624 = select i1 %623, i32 320, i32 0
  %625 = lshr i32 %586, 5
  %626 = add nuw nsw i32 %624, %625
  %627 = zext i32 %626 to i64
  %628 = getelementptr inbounds i16, i16* %622, i64 %627
  %629 = load i16, i16* %628, align 2
  %630 = zext i16 %629 to i32
  %631 = shl nuw nsw i32 %630, 2
  %632 = and i32 %586, 31
  %633 = add nuw nsw i32 %631, %632
  br label %662

634:                                              ; preds = %619
  %635 = icmp ugt i32 %586, 1114111
  br i1 %635, label %662, label %636

636:                                              ; preds = %634
  %637 = getelementptr inbounds %struct.UTrie2, %struct.UTrie2* %604, i64 0, i32 9
  %638 = load i32, i32* %637, align 4
  %639 = icmp sgt i32 %638, %586
  br i1 %639, label %643, label %640

640:                                              ; preds = %636
  %641 = getelementptr inbounds %struct.UTrie2, %struct.UTrie2* %604, i64 0, i32 10
  %642 = load i32, i32* %641, align 8
  br label %662

643:                                              ; preds = %636
  %644 = getelementptr inbounds %struct.UTrie2, %struct.UTrie2* %604, i64 0, i32 0
  %645 = load i16*, i16** %644, align 8
  %646 = lshr i32 %586, 11
  %647 = add nuw nsw i32 %646, 2080
  %648 = zext i32 %647 to i64
  %649 = getelementptr inbounds i16, i16* %645, i64 %648
  %650 = load i16, i16* %649, align 2
  %651 = zext i16 %650 to i32
  %652 = lshr i32 %586, 5
  %653 = and i32 %652, 63
  %654 = add nuw nsw i32 %653, %651
  %655 = zext i32 %654 to i64
  %656 = getelementptr inbounds i16, i16* %645, i64 %655
  %657 = load i16, i16* %656, align 2
  %658 = zext i16 %657 to i32
  %659 = shl nuw nsw i32 %658, 2
  %660 = and i32 %586, 31
  %661 = add nuw nsw i32 %659, %660
  br label %662

662:                                              ; preds = %608, %620, %634, %640, %643
  %663 = phi i32 [ %618, %608 ], [ %633, %620 ], [ 128, %634 ], [ %642, %640 ], [ %661, %643 ]
  %664 = sext i32 %663 to i64
  %665 = getelementptr inbounds i32, i32* %606, i64 %664
  %666 = load i32, i32* %665, align 4
  br label %597

667:                                              ; preds = %581
  %668 = getelementptr inbounds %"class.icu_69::SkippedState", %"class.icu_69::SkippedState"* %569, i64 0, i32 1, i32 1, i32 0, i32 0
  %669 = and i16 %573, 1
  %670 = icmp eq i16 %669, 0
  %671 = and i16 %573, 31
  %672 = select i1 %670, i16 %671, i16 2
  store i16 %672, i16* %668, align 8
  store i32 0, i32* %570, align 8
  br label %673

673:                                              ; preds = %201, %192, %131, %122, %667, %545, %557, %213, %7
  %674 = phi i32 [ 0, %7 ], [ 0, %213 ], [ %502, %557 ], [ 1, %667 ], [ %502, %545 ], [ %3, %122 ], [ %3, %131 ], [ %3, %192 ], [ %3, %201 ]
  ret i32 %674
}

; Function Attrs: nounwind
declare i8* @_ZN6icu_697UMemorynwEm(i64) local_unnamed_addr #5

; Function Attrs: argmemonly nounwind
declare void @llvm.memset.p0i8.i64(i8* nocapture writeonly, i8, i64, i1 immarg) #2

declare dereferenceable(64) %"class.icu_69::CharString"* @_ZN6icu_6910CharString6appendEcR10UErrorCode(%"class.icu_69::CharString"*, i8 signext, i32* dereferenceable(4)) local_unnamed_addr #4

; Function Attrs: nounwind ssp uwtable
define hidden void @_ZN6icu_6917CollationIterator23appendNumericSegmentCEsEPKciR10UErrorCode(%"class.icu_69::CollationIterator"* nocapture, i8* nocapture readonly, i32, i32* nocapture dereferenceable(4)) local_unnamed_addr #0 align 2 {
  %5 = getelementptr inbounds %"class.icu_69::CollationIterator", %"class.icu_69::CollationIterator"* %0, i64 0, i32 2
  %6 = load %"struct.icu_69::CollationData"*, %"struct.icu_69::CollationData"** %5, align 8
  %7 = getelementptr inbounds %"struct.icu_69::CollationData", %"struct.icu_69::CollationData"* %6, i64 0, i32 7
  %8 = load i32, i32* %7, align 8
  %9 = icmp slt i32 %2, 8
  br i1 %9, label %10, label %288

10:                                               ; preds = %4
  %11 = load i8, i8* %1, align 1
  %12 = sext i8 %11 to i32
  %13 = icmp sgt i32 %2, 1
  br i1 %13, label %14, label %39

14:                                               ; preds = %10
  %15 = zext i32 %2 to i64
  %16 = add nsw i64 %15, -1
  %17 = add nsw i64 %15, -2
  %18 = and i64 %16, 3
  %19 = icmp ult i64 %17, 3
  br i1 %19, label %22, label %20

20:                                               ; preds = %14
  %21 = sub nsw i64 %16, %18
  br label %42

22:                                               ; preds = %42, %14
  %23 = phi i32 [ undef, %14 ], [ %68, %42 ]
  %24 = phi i64 [ 1, %14 ], [ %69, %42 ]
  %25 = phi i32 [ %12, %14 ], [ %68, %42 ]
  %26 = icmp eq i64 %18, 0
  br i1 %26, label %39, label %27

27:                                               ; preds = %22, %27
  %28 = phi i64 [ %36, %27 ], [ %24, %22 ]
  %29 = phi i32 [ %35, %27 ], [ %25, %22 ]
  %30 = phi i64 [ %37, %27 ], [ %18, %22 ]
  %31 = mul nsw i32 %29, 10
  %32 = getelementptr inbounds i8, i8* %1, i64 %28
  %33 = load i8, i8* %32, align 1
  %34 = sext i8 %33 to i32
  %35 = add nsw i32 %31, %34
  %36 = add nuw nsw i64 %28, 1
  %37 = add i64 %30, -1
  %38 = icmp eq i64 %37, 0
  br i1 %38, label %39, label %27, !llvm.loop !5

39:                                               ; preds = %22, %27, %10
  %40 = phi i32 [ %12, %10 ], [ %23, %22 ], [ %35, %27 ]
  %41 = icmp slt i32 %40, 74
  br i1 %41, label %72, label %134

42:                                               ; preds = %42, %20
  %43 = phi i64 [ 1, %20 ], [ %69, %42 ]
  %44 = phi i32 [ %12, %20 ], [ %68, %42 ]
  %45 = phi i64 [ %21, %20 ], [ %70, %42 ]
  %46 = mul nsw i32 %44, 10
  %47 = getelementptr inbounds i8, i8* %1, i64 %43
  %48 = load i8, i8* %47, align 1
  %49 = sext i8 %48 to i32
  %50 = add nsw i32 %46, %49
  %51 = add nuw nsw i64 %43, 1
  %52 = mul nsw i32 %50, 10
  %53 = getelementptr inbounds i8, i8* %1, i64 %51
  %54 = load i8, i8* %53, align 1
  %55 = sext i8 %54 to i32
  %56 = add nsw i32 %52, %55
  %57 = add nuw nsw i64 %43, 2
  %58 = mul nsw i32 %56, 10
  %59 = getelementptr inbounds i8, i8* %1, i64 %57
  %60 = load i8, i8* %59, align 1
  %61 = sext i8 %60 to i32
  %62 = add nsw i32 %58, %61
  %63 = add nuw nsw i64 %43, 3
  %64 = mul nsw i32 %62, 10
  %65 = getelementptr inbounds i8, i8* %1, i64 %63
  %66 = load i8, i8* %65, align 1
  %67 = sext i8 %66 to i32
  %68 = add nsw i32 %64, %67
  %69 = add nuw nsw i64 %43, 4
  %70 = add i64 %45, -4
  %71 = icmp eq i64 %70, 0
  br i1 %71, label %22, label %42

72:                                               ; preds = %39
  %73 = shl i32 %40, 16
  %74 = add i32 %73, 131072
  %75 = or i32 %74, %8
  %76 = zext i32 %75 to i64
  %77 = shl nuw i64 %76, 32
  %78 = or i64 %77, 83887360
  %79 = getelementptr inbounds %"class.icu_69::CollationIterator", %"class.icu_69::CollationIterator"* %0, i64 0, i32 3, i32 0
  %80 = load i32, i32* %79, align 8
  %81 = icmp slt i32 %80, 40
  br i1 %81, label %127, label %82

82:                                               ; preds = %72
  %83 = getelementptr inbounds %"class.icu_69::CollationIterator", %"class.icu_69::CollationIterator"* %0, i64 0, i32 3, i32 1
  %84 = getelementptr inbounds %"class.icu_69::CollationIterator", %"class.icu_69::CollationIterator"* %0, i64 0, i32 3, i32 1, i32 1
  %85 = load i32, i32* %84, align 8
  %86 = icmp slt i32 %80, %85
  br i1 %86, label %127, label %87

87:                                               ; preds = %82
  %88 = load i32, i32* %3, align 4
  %89 = icmp slt i32 %88, 1
  br i1 %89, label %90, label %474

90:                                               ; preds = %87, %90
  %91 = phi i32 [ %94, %90 ], [ %85, %87 ]
  %92 = icmp slt i32 %91, 1000
  %93 = select i1 %92, i32 2, i32 1
  %94 = shl nsw i32 %91, %93
  %95 = icmp sgt i32 %94, %80
  br i1 %95, label %96, label %90

96:                                               ; preds = %90
  %97 = icmp sgt i32 %94, 0
  br i1 %97, label %98, label %126

98:                                               ; preds = %96
  %99 = sext i32 %94 to i64
  %100 = shl nsw i64 %99, 3
  %101 = tail call noalias i8* @uprv_malloc_69(i64 %100) #11
  %102 = icmp eq i8* %101, null
  br i1 %102, label %126, label %103

103:                                              ; preds = %98
  %104 = icmp sgt i32 %80, 0
  br i1 %104, label %107, label %105

105:                                              ; preds = %103
  %106 = bitcast %"class.icu_69::MaybeStackArray.0"* %83 to i8**
  br label %117

107:                                              ; preds = %103
  %108 = load i32, i32* %84, align 8
  %109 = icmp slt i32 %108, %80
  %110 = select i1 %109, i32 %108, i32 %80
  %111 = icmp sgt i32 %110, %94
  %112 = select i1 %111, i32 %94, i32 %110
  %113 = bitcast %"class.icu_69::MaybeStackArray.0"* %83 to i8**
  %114 = load i8*, i8** %113, align 8
  %115 = sext i32 %112 to i64
  %116 = shl nsw i64 %115, 3
  tail call void @llvm.memcpy.p0i8.p0i8.i64(i8* nonnull align 8 %101, i8* align 8 %114, i64 %116, i1 false) #12
  br label %117

117:                                              ; preds = %107, %105
  %118 = phi i8** [ %106, %105 ], [ %113, %107 ]
  %119 = getelementptr inbounds %"class.icu_69::CollationIterator", %"class.icu_69::CollationIterator"* %0, i64 0, i32 3, i32 1, i32 2
  %120 = load i8, i8* %119, align 4
  %121 = icmp eq i8 %120, 0
  br i1 %121, label %124, label %122

122:                                              ; preds = %117
  %123 = load i8*, i8** %118, align 8
  tail call void @uprv_free_69(i8* %123) #12
  br label %124

124:                                              ; preds = %122, %117
  store i8* %101, i8** %118, align 8
  store i32 %94, i32* %84, align 8
  store i8 1, i8* %119, align 4
  %125 = load i32, i32* %79, align 8
  br label %127

126:                                              ; preds = %98, %96
  store i32 7, i32* %3, align 4
  br label %474

127:                                              ; preds = %124, %82, %72
  %128 = phi i32 [ %80, %82 ], [ %125, %124 ], [ %80, %72 ]
  %129 = add nsw i32 %128, 1
  store i32 %129, i32* %79, align 8
  %130 = sext i32 %128 to i64
  %131 = getelementptr inbounds %"class.icu_69::CollationIterator", %"class.icu_69::CollationIterator"* %0, i64 0, i32 3, i32 1, i32 0
  %132 = load i64*, i64** %131, align 8
  %133 = getelementptr inbounds i64, i64* %132, i64 %130
  store i64 %78, i64* %133, align 8
  br label %474

134:                                              ; preds = %39
  %135 = add nsw i32 %40, -74
  %136 = icmp slt i32 %135, 10160
  br i1 %136, label %137, label %207

137:                                              ; preds = %134
  %138 = trunc i32 %135 to i16
  %139 = udiv i16 %138, 254
  %140 = zext i16 %139 to i32
  %141 = shl nuw nsw i32 %140, 16
  %142 = add nuw nsw i32 %141, 4980736
  %143 = or i32 %142, %8
  %144 = urem i16 %138, 254
  %145 = shl nuw i16 %144, 8
  %146 = zext i16 %145 to i32
  %147 = add nuw nsw i32 %146, 512
  %148 = or i32 %143, %147
  %149 = zext i32 %148 to i64
  %150 = shl nuw i64 %149, 32
  %151 = or i64 %150, 83887360
  %152 = getelementptr inbounds %"class.icu_69::CollationIterator", %"class.icu_69::CollationIterator"* %0, i64 0, i32 3, i32 0
  %153 = load i32, i32* %152, align 8
  %154 = icmp slt i32 %153, 40
  br i1 %154, label %200, label %155

155:                                              ; preds = %137
  %156 = getelementptr inbounds %"class.icu_69::CollationIterator", %"class.icu_69::CollationIterator"* %0, i64 0, i32 3, i32 1
  %157 = getelementptr inbounds %"class.icu_69::CollationIterator", %"class.icu_69::CollationIterator"* %0, i64 0, i32 3, i32 1, i32 1
  %158 = load i32, i32* %157, align 8
  %159 = icmp slt i32 %153, %158
  br i1 %159, label %200, label %160

160:                                              ; preds = %155
  %161 = load i32, i32* %3, align 4
  %162 = icmp slt i32 %161, 1
  br i1 %162, label %163, label %474

163:                                              ; preds = %160, %163
  %164 = phi i32 [ %167, %163 ], [ %158, %160 ]
  %165 = icmp slt i32 %164, 1000
  %166 = select i1 %165, i32 2, i32 1
  %167 = shl nsw i32 %164, %166
  %168 = icmp sgt i32 %167, %153
  br i1 %168, label %169, label %163

169:                                              ; preds = %163
  %170 = icmp sgt i32 %167, 0
  br i1 %170, label %171, label %199

171:                                              ; preds = %169
  %172 = sext i32 %167 to i64
  %173 = shl nsw i64 %172, 3
  %174 = tail call noalias i8* @uprv_malloc_69(i64 %173) #11
  %175 = icmp eq i8* %174, null
  br i1 %175, label %199, label %176

176:                                              ; preds = %171
  %177 = icmp sgt i32 %153, 0
  br i1 %177, label %180, label %178

178:                                              ; preds = %176
  %179 = bitcast %"class.icu_69::MaybeStackArray.0"* %156 to i8**
  br label %190

180:                                              ; preds = %176
  %181 = load i32, i32* %157, align 8
  %182 = icmp slt i32 %181, %153
  %183 = select i1 %182, i32 %181, i32 %153
  %184 = icmp sgt i32 %183, %167
  %185 = select i1 %184, i32 %167, i32 %183
  %186 = bitcast %"class.icu_69::MaybeStackArray.0"* %156 to i8**
  %187 = load i8*, i8** %186, align 8
  %188 = sext i32 %185 to i64
  %189 = shl nsw i64 %188, 3
  tail call void @llvm.memcpy.p0i8.p0i8.i64(i8* nonnull align 8 %174, i8* align 8 %187, i64 %189, i1 false) #12
  br label %190

190:                                              ; preds = %180, %178
  %191 = phi i8** [ %179, %178 ], [ %186, %180 ]
  %192 = getelementptr inbounds %"class.icu_69::CollationIterator", %"class.icu_69::CollationIterator"* %0, i64 0, i32 3, i32 1, i32 2
  %193 = load i8, i8* %192, align 4
  %194 = icmp eq i8 %193, 0
  br i1 %194, label %197, label %195

195:                                              ; preds = %190
  %196 = load i8*, i8** %191, align 8
  tail call void @uprv_free_69(i8* %196) #12
  br label %197

197:                                              ; preds = %195, %190
  store i8* %174, i8** %191, align 8
  store i32 %167, i32* %157, align 8
  store i8 1, i8* %192, align 4
  %198 = load i32, i32* %152, align 8
  br label %200

199:                                              ; preds = %171, %169
  store i32 7, i32* %3, align 4
  br label %474

200:                                              ; preds = %197, %155, %137
  %201 = phi i32 [ %153, %155 ], [ %198, %197 ], [ %153, %137 ]
  %202 = add nsw i32 %201, 1
  store i32 %202, i32* %152, align 8
  %203 = sext i32 %201 to i64
  %204 = getelementptr inbounds %"class.icu_69::CollationIterator", %"class.icu_69::CollationIterator"* %0, i64 0, i32 3, i32 1, i32 0
  %205 = load i64*, i64** %204, align 8
  %206 = getelementptr inbounds i64, i64* %205, i64 %203
  store i64 %151, i64* %206, align 8
  br label %474

207:                                              ; preds = %134
  %208 = add nsw i32 %40, -10234
  %209 = icmp slt i32 %208, 1032256
  br i1 %209, label %210, label %288

210:                                              ; preds = %207
  %211 = urem i32 %208, 254
  %212 = add nuw nsw i32 %211, 2
  %213 = or i32 %212, %8
  %214 = udiv i32 %208, 254
  %215 = trunc i32 %214 to i16
  %216 = urem i16 %215, 254
  %217 = shl nuw i16 %216, 8
  %218 = zext i16 %217 to i32
  %219 = add nuw nsw i32 %218, 512
  %220 = or i32 %213, %219
  %221 = udiv i32 %208, 64516
  %222 = trunc i32 %221 to i8
  %223 = icmp ult i8 %222, -2
  %224 = shl i32 %221, 16
  %225 = add i32 %224, 131072
  %226 = select i1 %223, i32 %224, i32 %225
  %227 = and i32 %226, 16711680
  %228 = add nuw nsw i32 %227, 7602176
  %229 = or i32 %220, %228
  %230 = zext i32 %229 to i64
  %231 = shl nuw i64 %230, 32
  %232 = or i64 %231, 83887360
  %233 = getelementptr inbounds %"class.icu_69::CollationIterator", %"class.icu_69::CollationIterator"* %0, i64 0, i32 3, i32 0
  %234 = load i32, i32* %233, align 8
  %235 = icmp slt i32 %234, 40
  br i1 %235, label %281, label %236

236:                                              ; preds = %210
  %237 = getelementptr inbounds %"class.icu_69::CollationIterator", %"class.icu_69::CollationIterator"* %0, i64 0, i32 3, i32 1
  %238 = getelementptr inbounds %"class.icu_69::CollationIterator", %"class.icu_69::CollationIterator"* %0, i64 0, i32 3, i32 1, i32 1
  %239 = load i32, i32* %238, align 8
  %240 = icmp slt i32 %234, %239
  br i1 %240, label %281, label %241

241:                                              ; preds = %236
  %242 = load i32, i32* %3, align 4
  %243 = icmp slt i32 %242, 1
  br i1 %243, label %244, label %474

244:                                              ; preds = %241, %244
  %245 = phi i32 [ %248, %244 ], [ %239, %241 ]
  %246 = icmp slt i32 %245, 1000
  %247 = select i1 %246, i32 2, i32 1
  %248 = shl nsw i32 %245, %247
  %249 = icmp sgt i32 %248, %234
  br i1 %249, label %250, label %244

250:                                              ; preds = %244
  %251 = icmp sgt i32 %248, 0
  br i1 %251, label %252, label %280

252:                                              ; preds = %250
  %253 = sext i32 %248 to i64
  %254 = shl nsw i64 %253, 3
  %255 = tail call noalias i8* @uprv_malloc_69(i64 %254) #11
  %256 = icmp eq i8* %255, null
  br i1 %256, label %280, label %257

257:                                              ; preds = %252
  %258 = icmp sgt i32 %234, 0
  br i1 %258, label %261, label %259

259:                                              ; preds = %257
  %260 = bitcast %"class.icu_69::MaybeStackArray.0"* %237 to i8**
  br label %271

261:                                              ; preds = %257
  %262 = load i32, i32* %238, align 8
  %263 = icmp slt i32 %262, %234
  %264 = select i1 %263, i32 %262, i32 %234
  %265 = icmp sgt i32 %264, %248
  %266 = select i1 %265, i32 %248, i32 %264
  %267 = bitcast %"class.icu_69::MaybeStackArray.0"* %237 to i8**
  %268 = load i8*, i8** %267, align 8
  %269 = sext i32 %266 to i64
  %270 = shl nsw i64 %269, 3
  tail call void @llvm.memcpy.p0i8.p0i8.i64(i8* nonnull align 8 %255, i8* align 8 %268, i64 %270, i1 false) #12
  br label %271

271:                                              ; preds = %261, %259
  %272 = phi i8** [ %260, %259 ], [ %267, %261 ]
  %273 = getelementptr inbounds %"class.icu_69::CollationIterator", %"class.icu_69::CollationIterator"* %0, i64 0, i32 3, i32 1, i32 2
  %274 = load i8, i8* %273, align 4
  %275 = icmp eq i8 %274, 0
  br i1 %275, label %278, label %276

276:                                              ; preds = %271
  %277 = load i8*, i8** %272, align 8
  tail call void @uprv_free_69(i8* %277) #12
  br label %278

278:                                              ; preds = %276, %271
  store i8* %255, i8** %272, align 8
  store i32 %248, i32* %238, align 8
  store i8 1, i8* %273, align 4
  %279 = load i32, i32* %233, align 8
  br label %281

280:                                              ; preds = %252, %250
  store i32 7, i32* %3, align 4
  br label %474

281:                                              ; preds = %278, %236, %210
  %282 = phi i32 [ %234, %236 ], [ %279, %278 ], [ %234, %210 ]
  %283 = add nsw i32 %282, 1
  store i32 %283, i32* %233, align 8
  %284 = sext i32 %282 to i64
  %285 = getelementptr inbounds %"class.icu_69::CollationIterator", %"class.icu_69::CollationIterator"* %0, i64 0, i32 3, i32 1, i32 0
  %286 = load i64*, i64** %285, align 8
  %287 = getelementptr inbounds i64, i64* %286, i64 %284
  store i64 %232, i64* %287, align 8
  br label %474

288:                                              ; preds = %207, %4
  %289 = add nsw i32 %2, 1
  %290 = sdiv i32 %289, 2
  %291 = shl i32 %290, 16
  %292 = add i32 %291, 8388608
  %293 = or i32 %8, %292
  %294 = sext i32 %2 to i64
  br label %295

295:                                              ; preds = %301, %288
  %296 = phi i64 [ %302, %301 ], [ %294, %288 ]
  %297 = add nsw i64 %296, -1
  %298 = getelementptr inbounds i8, i8* %1, i64 %297
  %299 = load i8, i8* %298, align 1
  %300 = icmp eq i8 %299, 0
  br i1 %300, label %301, label %306

301:                                              ; preds = %295
  %302 = add i64 %296, -2
  %303 = getelementptr inbounds i8, i8* %1, i64 %302
  %304 = load i8, i8* %303, align 1
  %305 = icmp eq i8 %304, 0
  br i1 %305, label %295, label %306

306:                                              ; preds = %295, %301
  %307 = trunc i64 %296 to i32
  %308 = and i32 %307, 1
  %309 = icmp eq i32 %308, 0
  %310 = load i8, i8* %1, align 1
  %311 = sext i8 %310 to i32
  br i1 %309, label %312, label %318

312:                                              ; preds = %306
  %313 = mul nsw i32 %311, 10
  %314 = getelementptr inbounds i8, i8* %1, i64 1
  %315 = load i8, i8* %314, align 1
  %316 = sext i8 %315 to i32
  %317 = add nsw i32 %313, %316
  br label %318

318:                                              ; preds = %306, %312
  %319 = phi i32 [ %317, %312 ], [ %311, %306 ]
  %320 = phi i32 [ 2, %312 ], [ 1, %306 ]
  %321 = shl nsw i32 %319, 1
  %322 = icmp slt i32 %320, %307
  br i1 %322, label %323, label %409

323:                                              ; preds = %318
  %324 = getelementptr inbounds %"class.icu_69::CollationIterator", %"class.icu_69::CollationIterator"* %0, i64 0, i32 3, i32 0
  %325 = getelementptr inbounds %"class.icu_69::CollationIterator", %"class.icu_69::CollationIterator"* %0, i64 0, i32 3, i32 1
  %326 = getelementptr inbounds %"class.icu_69::CollationIterator", %"class.icu_69::CollationIterator"* %0, i64 0, i32 3, i32 1, i32 1
  %327 = bitcast %"class.icu_69::MaybeStackArray.0"* %325 to i8**
  %328 = getelementptr inbounds %"class.icu_69::CollationIterator", %"class.icu_69::CollationIterator"* %0, i64 0, i32 3, i32 1, i32 2
  %329 = getelementptr inbounds %"class.icu_69::CollationIterator", %"class.icu_69::CollationIterator"* %0, i64 0, i32 3, i32 1, i32 0
  %330 = zext i32 %320 to i64
  br label %331

331:                                              ; preds = %323, %393
  %332 = phi i64 [ %330, %323 ], [ %405, %393 ]
  %333 = phi i32 [ %321, %323 ], [ %406, %393 ]
  %334 = phi i32 [ 8, %323 ], [ %395, %393 ]
  %335 = phi i32 [ %293, %323 ], [ %394, %393 ]
  %336 = add nsw i32 %333, 11
  %337 = icmp eq i32 %334, 0
  br i1 %337, label %338, label %389

338:                                              ; preds = %331
  %339 = or i32 %336, %335
  %340 = zext i32 %339 to i64
  %341 = shl nuw i64 %340, 32
  %342 = or i64 %341, 83887360
  %343 = load i32, i32* %324, align 8
  %344 = icmp slt i32 %343, 40
  br i1 %344, label %383, label %345

345:                                              ; preds = %338
  %346 = load i32, i32* %326, align 8
  %347 = icmp slt i32 %343, %346
  br i1 %347, label %383, label %348

348:                                              ; preds = %345
  %349 = load i32, i32* %3, align 4
  %350 = icmp slt i32 %349, 1
  br i1 %350, label %351, label %393

351:                                              ; preds = %348, %351
  %352 = phi i32 [ %355, %351 ], [ %346, %348 ]
  %353 = icmp slt i32 %352, 1000
  %354 = select i1 %353, i32 2, i32 1
  %355 = shl nsw i32 %352, %354
  %356 = icmp sgt i32 %355, %343
  br i1 %356, label %357, label %351

357:                                              ; preds = %351
  %358 = icmp sgt i32 %355, 0
  br i1 %358, label %359, label %382

359:                                              ; preds = %357
  %360 = sext i32 %355 to i64
  %361 = shl nsw i64 %360, 3
  %362 = tail call noalias i8* @uprv_malloc_69(i64 %361) #11
  %363 = icmp eq i8* %362, null
  br i1 %363, label %382, label %364

364:                                              ; preds = %359
  %365 = icmp sgt i32 %343, 0
  br i1 %365, label %366, label %375

366:                                              ; preds = %364
  %367 = load i32, i32* %326, align 8
  %368 = icmp slt i32 %367, %343
  %369 = select i1 %368, i32 %367, i32 %343
  %370 = icmp sgt i32 %369, %355
  %371 = select i1 %370, i32 %355, i32 %369
  %372 = load i8*, i8** %327, align 8
  %373 = sext i32 %371 to i64
  %374 = shl nsw i64 %373, 3
  tail call void @llvm.memcpy.p0i8.p0i8.i64(i8* nonnull align 8 %362, i8* align 8 %372, i64 %374, i1 false) #12
  br label %375

375:                                              ; preds = %364, %366
  %376 = load i8, i8* %328, align 4
  %377 = icmp eq i8 %376, 0
  br i1 %377, label %380, label %378

378:                                              ; preds = %375
  %379 = load i8*, i8** %327, align 8
  tail call void @uprv_free_69(i8* %379) #12
  br label %380

380:                                              ; preds = %378, %375
  store i8* %362, i8** %327, align 8
  store i32 %355, i32* %326, align 8
  store i8 1, i8* %328, align 4
  %381 = load i32, i32* %324, align 8
  br label %383

382:                                              ; preds = %359, %357
  store i32 7, i32* %3, align 4
  br label %393

383:                                              ; preds = %380, %345, %338
  %384 = phi i32 [ %343, %345 ], [ %381, %380 ], [ %343, %338 ]
  %385 = add nsw i32 %384, 1
  store i32 %385, i32* %324, align 8
  %386 = sext i32 %384 to i64
  %387 = load i64*, i64** %329, align 8
  %388 = getelementptr inbounds i64, i64* %387, i64 %386
  store i64 %342, i64* %388, align 8
  br label %393

389:                                              ; preds = %331
  %390 = shl i32 %336, %334
  %391 = or i32 %390, %335
  %392 = add nsw i32 %334, -8
  br label %393

393:                                              ; preds = %383, %382, %348, %389
  %394 = phi i32 [ %391, %389 ], [ %8, %348 ], [ %8, %382 ], [ %8, %383 ]
  %395 = phi i32 [ %392, %389 ], [ 16, %348 ], [ 16, %382 ], [ 16, %383 ]
  %396 = getelementptr inbounds i8, i8* %1, i64 %332
  %397 = load i8, i8* %396, align 1
  %398 = sext i8 %397 to i32
  %399 = mul nsw i32 %398, 10
  %400 = add nuw nsw i64 %332, 1
  %401 = getelementptr inbounds i8, i8* %1, i64 %400
  %402 = load i8, i8* %401, align 1
  %403 = sext i8 %402 to i32
  %404 = add nsw i32 %399, %403
  %405 = add nuw i64 %332, 2
  %406 = shl nsw i32 %404, 1
  %407 = trunc i64 %405 to i32
  %408 = icmp slt i32 %407, %307
  br i1 %408, label %331, label %409

409:                                              ; preds = %393, %318
  %410 = phi i32 [ %293, %318 ], [ %394, %393 ]
  %411 = phi i32 [ 8, %318 ], [ %395, %393 ]
  %412 = phi i32 [ %321, %318 ], [ %406, %393 ]
  %413 = add nsw i32 %412, 10
  %414 = shl i32 %413, %411
  %415 = or i32 %414, %410
  %416 = zext i32 %415 to i64
  %417 = shl nuw i64 %416, 32
  %418 = or i64 %417, 83887360
  %419 = getelementptr inbounds %"class.icu_69::CollationIterator", %"class.icu_69::CollationIterator"* %0, i64 0, i32 3, i32 0
  %420 = load i32, i32* %419, align 8
  %421 = icmp slt i32 %420, 40
  br i1 %421, label %467, label %422

422:                                              ; preds = %409
  %423 = getelementptr inbounds %"class.icu_69::CollationIterator", %"class.icu_69::CollationIterator"* %0, i64 0, i32 3, i32 1
  %424 = getelementptr inbounds %"class.icu_69::CollationIterator", %"class.icu_69::CollationIterator"* %0, i64 0, i32 3, i32 1, i32 1
  %425 = load i32, i32* %424, align 8
  %426 = icmp slt i32 %420, %425
  br i1 %426, label %467, label %427

427:                                              ; preds = %422
  %428 = load i32, i32* %3, align 4
  %429 = icmp slt i32 %428, 1
  br i1 %429, label %430, label %474

430:                                              ; preds = %427, %430
  %431 = phi i32 [ %434, %430 ], [ %425, %427 ]
  %432 = icmp slt i32 %431, 1000
  %433 = select i1 %432, i32 2, i32 1
  %434 = shl nsw i32 %431, %433
  %435 = icmp sgt i32 %434, %420
  br i1 %435, label %436, label %430

436:                                              ; preds = %430
  %437 = icmp sgt i32 %434, 0
  br i1 %437, label %438, label %466

438:                                              ; preds = %436
  %439 = sext i32 %434 to i64
  %440 = shl nsw i64 %439, 3
  %441 = tail call noalias i8* @uprv_malloc_69(i64 %440) #11
  %442 = icmp eq i8* %441, null
  br i1 %442, label %466, label %443

443:                                              ; preds = %438
  %444 = icmp sgt i32 %420, 0
  br i1 %444, label %447, label %445

445:                                              ; preds = %443
  %446 = bitcast %"class.icu_69::MaybeStackArray.0"* %423 to i8**
  br label %457

447:                                              ; preds = %443
  %448 = load i32, i32* %424, align 8
  %449 = icmp slt i32 %448, %420
  %450 = select i1 %449, i32 %448, i32 %420
  %451 = icmp sgt i32 %450, %434
  %452 = select i1 %451, i32 %434, i32 %450
  %453 = bitcast %"class.icu_69::MaybeStackArray.0"* %423 to i8**
  %454 = load i8*, i8** %453, align 8
  %455 = sext i32 %452 to i64
  %456 = shl nsw i64 %455, 3
  tail call void @llvm.memcpy.p0i8.p0i8.i64(i8* nonnull align 8 %441, i8* align 8 %454, i64 %456, i1 false) #12
  br label %457

457:                                              ; preds = %447, %445
  %458 = phi i8** [ %446, %445 ], [ %453, %447 ]
  %459 = getelementptr inbounds %"class.icu_69::CollationIterator", %"class.icu_69::CollationIterator"* %0, i64 0, i32 3, i32 1, i32 2
  %460 = load i8, i8* %459, align 4
  %461 = icmp eq i8 %460, 0
  br i1 %461, label %464, label %462

462:                                              ; preds = %457
  %463 = load i8*, i8** %458, align 8
  tail call void @uprv_free_69(i8* %463) #12
  br label %464

464:                                              ; preds = %462, %457
  store i8* %441, i8** %458, align 8
  store i32 %434, i32* %424, align 8
  store i8 1, i8* %459, align 4
  %465 = load i32, i32* %419, align 8
  br label %467

466:                                              ; preds = %438, %436
  store i32 7, i32* %3, align 4
  br label %474

467:                                              ; preds = %464, %422, %409
  %468 = phi i32 [ %420, %422 ], [ %465, %464 ], [ %420, %409 ]
  %469 = add nsw i32 %468, 1
  store i32 %469, i32* %419, align 8
  %470 = sext i32 %468 to i64
  %471 = getelementptr inbounds %"class.icu_69::CollationIterator", %"class.icu_69::CollationIterator"* %0, i64 0, i32 3, i32 1, i32 0
  %472 = load i64*, i64** %471, align 8
  %473 = getelementptr inbounds i64, i64* %472, i64 %470
  store i64 %418, i64* %473, align 8
  br label %474

474:                                              ; preds = %467, %466, %427, %281, %280, %241, %200, %199, %160, %127, %126, %87
  ret void
}

; Function Attrs: nounwind ssp uwtable
define hidden i64 @_ZN6icu_6917CollationIterator10previousCEERNS_9UVector32ER10UErrorCode(%"class.icu_69::CollationIterator"*, %"class.icu_69::UVector32"* dereferenceable(32), i32* dereferenceable(4)) local_unnamed_addr #0 align 2 {
  %4 = getelementptr inbounds %"class.icu_69::CollationIterator", %"class.icu_69::CollationIterator"* %0, i64 0, i32 3, i32 0
  %5 = load i32, i32* %4, align 8
  %6 = icmp sgt i32 %5, 0
  br i1 %6, label %7, label %14

7:                                                ; preds = %3
  %8 = add nsw i32 %5, -1
  store i32 %8, i32* %4, align 8
  %9 = sext i32 %8 to i64
  %10 = getelementptr inbounds %"class.icu_69::CollationIterator", %"class.icu_69::CollationIterator"* %0, i64 0, i32 3, i32 1, i32 0
  %11 = load i64*, i64** %10, align 8
  %12 = getelementptr inbounds i64, i64* %11, i64 %9
  %13 = load i64, i64* %12, align 8
  br label %358

14:                                               ; preds = %3
  tail call void @_ZN6icu_699UVector3217removeAllElementsEv(%"class.icu_69::UVector32"* %1) #12
  %15 = bitcast %"class.icu_69::CollationIterator"* %0 to i32 (%"class.icu_69::CollationIterator"*)***
  %16 = load i32 (%"class.icu_69::CollationIterator"*)**, i32 (%"class.icu_69::CollationIterator"*)*** %15, align 8
  %17 = getelementptr inbounds i32 (%"class.icu_69::CollationIterator"*)*, i32 (%"class.icu_69::CollationIterator"*)** %16, i64 5
  %18 = load i32 (%"class.icu_69::CollationIterator"*)*, i32 (%"class.icu_69::CollationIterator"*)** %17, align 8
  %19 = tail call i32 %18(%"class.icu_69::CollationIterator"* %0) #12
  %20 = bitcast %"class.icu_69::CollationIterator"* %0 to i32 (%"class.icu_69::CollationIterator"*, i32*)***
  %21 = load i32 (%"class.icu_69::CollationIterator"*, i32*)**, i32 (%"class.icu_69::CollationIterator"*, i32*)*** %20, align 8
  %22 = getelementptr inbounds i32 (%"class.icu_69::CollationIterator"*, i32*)*, i32 (%"class.icu_69::CollationIterator"*, i32*)** %21, i64 7
  %23 = load i32 (%"class.icu_69::CollationIterator"*, i32*)*, i32 (%"class.icu_69::CollationIterator"*, i32*)** %22, align 8
  %24 = tail call i32 %23(%"class.icu_69::CollationIterator"* %0, i32* dereferenceable(4) %2) #12
  %25 = icmp slt i32 %24, 0
  br i1 %25, label %358, label %26

26:                                               ; preds = %14
  %27 = getelementptr inbounds %"class.icu_69::CollationIterator", %"class.icu_69::CollationIterator"* %0, i64 0, i32 2
  %28 = load %"struct.icu_69::CollationData"*, %"struct.icu_69::CollationData"** %27, align 8
  %29 = getelementptr inbounds %"class.icu_69::CollationIterator", %"class.icu_69::CollationIterator"* %0, i64 0, i32 8
  %30 = load i8, i8* %29, align 4
  %31 = getelementptr inbounds %"struct.icu_69::CollationData", %"struct.icu_69::CollationData"* %28, i64 0, i32 12
  %32 = load %"class.icu_69::UnicodeSet"*, %"class.icu_69::UnicodeSet"** %31, align 8
  %33 = tail call signext i8 @_ZNK6icu_6910UnicodeSet8containsEi(%"class.icu_69::UnicodeSet"* %32, i32 %24) #12
  %34 = icmp eq i8 %33, 0
  br i1 %34, label %35, label %116

35:                                               ; preds = %26
  %36 = icmp eq i8 %30, 0
  br i1 %36, label %118, label %37

37:                                               ; preds = %35
  %38 = icmp slt i32 %24, 1632
  br i1 %38, label %39, label %48

39:                                               ; preds = %37
  %40 = add nsw i32 %24, -48
  %41 = icmp ult i32 %40, 10
  br i1 %41, label %116, label %42

42:                                               ; preds = %39
  %43 = load %"struct.icu_69::CollationData"*, %"struct.icu_69::CollationData"** %27, align 8
  %44 = getelementptr inbounds %"struct.icu_69::CollationData", %"struct.icu_69::CollationData"* %43, i64 0, i32 0
  %45 = load %struct.UTrie2*, %struct.UTrie2** %44, align 8
  %46 = getelementptr inbounds %struct.UTrie2, %struct.UTrie2* %45, i64 0, i32 2
  %47 = load i32*, i32** %46, align 8
  br label %125

48:                                               ; preds = %37
  %49 = getelementptr inbounds %"struct.icu_69::CollationData", %"struct.icu_69::CollationData"* %28, i64 0, i32 0
  %50 = load %struct.UTrie2*, %struct.UTrie2** %49, align 8
  %51 = getelementptr inbounds %struct.UTrie2, %struct.UTrie2* %50, i64 0, i32 2
  %52 = load i32*, i32** %51, align 8
  %53 = icmp ult i32 %24, 55296
  br i1 %53, label %54, label %65

54:                                               ; preds = %48
  %55 = getelementptr inbounds %struct.UTrie2, %struct.UTrie2* %50, i64 0, i32 0
  %56 = load i16*, i16** %55, align 8
  %57 = lshr i32 %24, 5
  %58 = zext i32 %57 to i64
  %59 = getelementptr inbounds i16, i16* %56, i64 %58
  %60 = load i16, i16* %59, align 2
  %61 = zext i16 %60 to i32
  %62 = shl nuw nsw i32 %61, 2
  %63 = and i32 %24, 31
  %64 = add nuw nsw i32 %62, %63
  br label %109

65:                                               ; preds = %48
  %66 = icmp ult i32 %24, 65536
  br i1 %66, label %67, label %81

67:                                               ; preds = %65
  %68 = getelementptr inbounds %struct.UTrie2, %struct.UTrie2* %50, i64 0, i32 0
  %69 = load i16*, i16** %68, align 8
  %70 = icmp slt i32 %24, 56320
  %71 = select i1 %70, i32 320, i32 0
  %72 = lshr i32 %24, 5
  %73 = add nuw nsw i32 %71, %72
  %74 = zext i32 %73 to i64
  %75 = getelementptr inbounds i16, i16* %69, i64 %74
  %76 = load i16, i16* %75, align 2
  %77 = zext i16 %76 to i32
  %78 = shl nuw nsw i32 %77, 2
  %79 = and i32 %24, 31
  %80 = add nuw nsw i32 %78, %79
  br label %109

81:                                               ; preds = %65
  %82 = icmp ugt i32 %24, 1114111
  br i1 %82, label %109, label %83

83:                                               ; preds = %81
  %84 = getelementptr inbounds %struct.UTrie2, %struct.UTrie2* %50, i64 0, i32 9
  %85 = load i32, i32* %84, align 4
  %86 = icmp sgt i32 %85, %24
  br i1 %86, label %90, label %87

87:                                               ; preds = %83
  %88 = getelementptr inbounds %struct.UTrie2, %struct.UTrie2* %50, i64 0, i32 10
  %89 = load i32, i32* %88, align 8
  br label %109

90:                                               ; preds = %83
  %91 = getelementptr inbounds %struct.UTrie2, %struct.UTrie2* %50, i64 0, i32 0
  %92 = load i16*, i16** %91, align 8
  %93 = lshr i32 %24, 11
  %94 = add nuw nsw i32 %93, 2080
  %95 = zext i32 %94 to i64
  %96 = getelementptr inbounds i16, i16* %92, i64 %95
  %97 = load i16, i16* %96, align 2
  %98 = zext i16 %97 to i32
  %99 = lshr i32 %24, 5
  %100 = and i32 %99, 63
  %101 = add nuw nsw i32 %100, %98
  %102 = zext i32 %101 to i64
  %103 = getelementptr inbounds i16, i16* %92, i64 %102
  %104 = load i16, i16* %103, align 2
  %105 = zext i16 %104 to i32
  %106 = shl nuw nsw i32 %105, 2
  %107 = and i32 %24, 31
  %108 = add nuw nsw i32 %106, %107
  br label %109

109:                                              ; preds = %90, %87, %81, %67, %54
  %110 = phi i32 [ %64, %54 ], [ %80, %67 ], [ 128, %81 ], [ %89, %87 ], [ %108, %90 ]
  %111 = sext i32 %110 to i64
  %112 = getelementptr inbounds i32, i32* %52, i64 %111
  %113 = load i32, i32* %112, align 4
  %114 = and i32 %113, 207
  %115 = icmp eq i32 %114, 202
  br i1 %115, label %116, label %118

116:                                              ; preds = %109, %39, %26
  %117 = tail call i64 @_ZN6icu_6917CollationIterator16previousCEUnsafeEiRNS_9UVector32ER10UErrorCode(%"class.icu_69::CollationIterator"* %0, i32 undef, %"class.icu_69::UVector32"* dereferenceable(32) %1, i32* dereferenceable(4) %2)
  br label %358

118:                                              ; preds = %109, %35
  %119 = load %"struct.icu_69::CollationData"*, %"struct.icu_69::CollationData"** %27, align 8
  %120 = getelementptr inbounds %"struct.icu_69::CollationData", %"struct.icu_69::CollationData"* %119, i64 0, i32 0
  %121 = load %struct.UTrie2*, %struct.UTrie2** %120, align 8
  %122 = getelementptr inbounds %struct.UTrie2, %struct.UTrie2* %121, i64 0, i32 2
  %123 = load i32*, i32** %122, align 8
  %124 = icmp ult i32 %24, 55296
  br i1 %124, label %125, label %139

125:                                              ; preds = %42, %118
  %126 = phi i32* [ %47, %42 ], [ %123, %118 ]
  %127 = phi %struct.UTrie2* [ %45, %42 ], [ %121, %118 ]
  %128 = phi %"struct.icu_69::CollationData"* [ %43, %42 ], [ %119, %118 ]
  %129 = getelementptr inbounds %struct.UTrie2, %struct.UTrie2* %127, i64 0, i32 0
  %130 = load i16*, i16** %129, align 8
  %131 = lshr i32 %24, 5
  %132 = zext i32 %131 to i64
  %133 = getelementptr inbounds i16, i16* %130, i64 %132
  %134 = load i16, i16* %133, align 2
  %135 = zext i16 %134 to i32
  %136 = shl nuw nsw i32 %135, 2
  %137 = and i32 %24, 31
  %138 = add nuw nsw i32 %136, %137
  br label %183

139:                                              ; preds = %118
  %140 = icmp ult i32 %24, 65536
  br i1 %140, label %141, label %155

141:                                              ; preds = %139
  %142 = getelementptr inbounds %struct.UTrie2, %struct.UTrie2* %121, i64 0, i32 0
  %143 = load i16*, i16** %142, align 8
  %144 = icmp slt i32 %24, 56320
  %145 = select i1 %144, i32 320, i32 0
  %146 = lshr i32 %24, 5
  %147 = add nuw nsw i32 %145, %146
  %148 = zext i32 %147 to i64
  %149 = getelementptr inbounds i16, i16* %143, i64 %148
  %150 = load i16, i16* %149, align 2
  %151 = zext i16 %150 to i32
  %152 = shl nuw nsw i32 %151, 2
  %153 = and i32 %24, 31
  %154 = add nuw nsw i32 %152, %153
  br label %183

155:                                              ; preds = %139
  %156 = icmp ugt i32 %24, 1114111
  br i1 %156, label %183, label %157

157:                                              ; preds = %155
  %158 = getelementptr inbounds %struct.UTrie2, %struct.UTrie2* %121, i64 0, i32 9
  %159 = load i32, i32* %158, align 4
  %160 = icmp sgt i32 %159, %24
  br i1 %160, label %164, label %161

161:                                              ; preds = %157
  %162 = getelementptr inbounds %struct.UTrie2, %struct.UTrie2* %121, i64 0, i32 10
  %163 = load i32, i32* %162, align 8
  br label %183

164:                                              ; preds = %157
  %165 = getelementptr inbounds %struct.UTrie2, %struct.UTrie2* %121, i64 0, i32 0
  %166 = load i16*, i16** %165, align 8
  %167 = lshr i32 %24, 11
  %168 = add nuw nsw i32 %167, 2080
  %169 = zext i32 %168 to i64
  %170 = getelementptr inbounds i16, i16* %166, i64 %169
  %171 = load i16, i16* %170, align 2
  %172 = zext i16 %171 to i32
  %173 = lshr i32 %24, 5
  %174 = and i32 %173, 63
  %175 = add nuw nsw i32 %174, %172
  %176 = zext i32 %175 to i64
  %177 = getelementptr inbounds i16, i16* %166, i64 %176
  %178 = load i16, i16* %177, align 2
  %179 = zext i16 %178 to i32
  %180 = shl nuw nsw i32 %179, 2
  %181 = and i32 %24, 31
  %182 = add nuw nsw i32 %180, %181
  br label %183

183:                                              ; preds = %125, %141, %155, %161, %164
  %184 = phi i1 [ true, %125 ], [ false, %141 ], [ false, %155 ], [ false, %161 ], [ false, %164 ]
  %185 = phi i32* [ %126, %125 ], [ %123, %141 ], [ %123, %155 ], [ %123, %161 ], [ %123, %164 ]
  %186 = phi %"struct.icu_69::CollationData"* [ %128, %125 ], [ %119, %141 ], [ %119, %155 ], [ %119, %161 ], [ %119, %164 ]
  %187 = phi i32 [ %138, %125 ], [ %154, %141 ], [ 128, %155 ], [ %163, %161 ], [ %182, %164 ]
  %188 = sext i32 %187 to i64
  %189 = getelementptr inbounds i32, i32* %185, i64 %188
  %190 = load i32, i32* %189, align 4
  %191 = icmp eq i32 %190, 192
  br i1 %191, label %192, label %259

192:                                              ; preds = %183
  %193 = getelementptr inbounds %"struct.icu_69::CollationData", %"struct.icu_69::CollationData"* %186, i64 0, i32 4
  %194 = load %"struct.icu_69::CollationData"*, %"struct.icu_69::CollationData"** %193, align 8
  %195 = getelementptr inbounds %"struct.icu_69::CollationData", %"struct.icu_69::CollationData"* %194, i64 0, i32 0
  %196 = load %struct.UTrie2*, %struct.UTrie2** %195, align 8
  %197 = getelementptr inbounds %struct.UTrie2, %struct.UTrie2* %196, i64 0, i32 2
  %198 = load i32*, i32** %197, align 8
  br i1 %184, label %199, label %210

199:                                              ; preds = %192
  %200 = getelementptr inbounds %struct.UTrie2, %struct.UTrie2* %196, i64 0, i32 0
  %201 = load i16*, i16** %200, align 8
  %202 = lshr i32 %24, 5
  %203 = zext i32 %202 to i64
  %204 = getelementptr inbounds i16, i16* %201, i64 %203
  %205 = load i16, i16* %204, align 2
  %206 = zext i16 %205 to i32
  %207 = shl nuw nsw i32 %206, 2
  %208 = and i32 %24, 31
  %209 = add nuw nsw i32 %207, %208
  br label %254

210:                                              ; preds = %192
  %211 = icmp ult i32 %24, 65536
  br i1 %211, label %212, label %226

212:                                              ; preds = %210
  %213 = getelementptr inbounds %struct.UTrie2, %struct.UTrie2* %196, i64 0, i32 0
  %214 = load i16*, i16** %213, align 8
  %215 = icmp slt i32 %24, 56320
  %216 = select i1 %215, i32 320, i32 0
  %217 = lshr i32 %24, 5
  %218 = add nuw nsw i32 %216, %217
  %219 = zext i32 %218 to i64
  %220 = getelementptr inbounds i16, i16* %214, i64 %219
  %221 = load i16, i16* %220, align 2
  %222 = zext i16 %221 to i32
  %223 = shl nuw nsw i32 %222, 2
  %224 = and i32 %24, 31
  %225 = add nuw nsw i32 %223, %224
  br label %254

226:                                              ; preds = %210
  %227 = icmp ugt i32 %24, 1114111
  br i1 %227, label %254, label %228

228:                                              ; preds = %226
  %229 = getelementptr inbounds %struct.UTrie2, %struct.UTrie2* %196, i64 0, i32 9
  %230 = load i32, i32* %229, align 4
  %231 = icmp sgt i32 %230, %24
  br i1 %231, label %235, label %232

232:                                              ; preds = %228
  %233 = getelementptr inbounds %struct.UTrie2, %struct.UTrie2* %196, i64 0, i32 10
  %234 = load i32, i32* %233, align 8
  br label %254

235:                                              ; preds = %228
  %236 = getelementptr inbounds %struct.UTrie2, %struct.UTrie2* %196, i64 0, i32 0
  %237 = load i16*, i16** %236, align 8
  %238 = lshr i32 %24, 11
  %239 = add nuw nsw i32 %238, 2080
  %240 = zext i32 %239 to i64
  %241 = getelementptr inbounds i16, i16* %237, i64 %240
  %242 = load i16, i16* %241, align 2
  %243 = zext i16 %242 to i32
  %244 = lshr i32 %24, 5
  %245 = and i32 %244, 63
  %246 = add nuw nsw i32 %245, %243
  %247 = zext i32 %246 to i64
  %248 = getelementptr inbounds i16, i16* %237, i64 %247
  %249 = load i16, i16* %248, align 2
  %250 = zext i16 %249 to i32
  %251 = shl nuw nsw i32 %250, 2
  %252 = and i32 %24, 31
  %253 = add nuw nsw i32 %251, %252
  br label %254

254:                                              ; preds = %199, %212, %226, %232, %235
  %255 = phi i32 [ %209, %199 ], [ %225, %212 ], [ 128, %226 ], [ %234, %232 ], [ %253, %235 ]
  %256 = sext i32 %255 to i64
  %257 = getelementptr inbounds i32, i32* %198, i64 %256
  %258 = load i32, i32* %257, align 4
  br label %259

259:                                              ; preds = %183, %254
  %260 = phi i32 [ %258, %254 ], [ %190, %183 ]
  %261 = phi %"struct.icu_69::CollationData"* [ %194, %254 ], [ %186, %183 ]
  %262 = and i32 %260, 192
  %263 = icmp eq i32 %262, 192
  br i1 %263, label %264, label %268

264:                                              ; preds = %259
  %265 = and i32 %260, 15
  %266 = add nsw i32 %265, -1
  %267 = icmp ult i32 %266, 2
  br i1 %267, label %268, label %290

268:                                              ; preds = %264, %259
  %269 = and i32 %260, 255
  %270 = icmp ult i32 %269, 192
  br i1 %270, label %271, label %282

271:                                              ; preds = %268
  %272 = and i32 %260, -65536
  %273 = zext i32 %272 to i64
  %274 = shl nuw i64 %273, 32
  %275 = shl i32 %260, 16
  %276 = and i32 %275, -16777216
  %277 = zext i32 %276 to i64
  %278 = or i64 %274, %277
  %279 = shl nuw nsw i32 %269, 8
  %280 = zext i32 %279 to i64
  %281 = or i64 %278, %280
  br label %358

282:                                              ; preds = %268
  %283 = sub i32 %260, %269
  %284 = and i32 %260, 15
  %285 = icmp eq i32 %284, 1
  %286 = zext i32 %283 to i64
  br i1 %285, label %287, label %358

287:                                              ; preds = %282
  %288 = shl nuw i64 %286, 32
  %289 = or i64 %288, 83887360
  br label %358

290:                                              ; preds = %264
  tail call void @_ZN6icu_6917CollationIterator17appendCEsFromCE32EPKNS_13CollationDataEijaR10UErrorCode(%"class.icu_69::CollationIterator"* %0, %"struct.icu_69::CollationData"* %261, i32 %24, i32 %260, i8 signext 0, i32* dereferenceable(4) %2)
  %291 = load i32, i32* %2, align 4
  %292 = icmp sgt i32 %291, 0
  br i1 %292, label %358, label %293

293:                                              ; preds = %290
  %294 = load i32, i32* %4, align 8
  %295 = icmp sgt i32 %294, 1
  br i1 %295, label %296, label %350

296:                                              ; preds = %293
  %297 = load i32 (%"class.icu_69::CollationIterator"*)**, i32 (%"class.icu_69::CollationIterator"*)*** %15, align 8
  %298 = getelementptr inbounds i32 (%"class.icu_69::CollationIterator"*)*, i32 (%"class.icu_69::CollationIterator"*)** %297, i64 5
  %299 = load i32 (%"class.icu_69::CollationIterator"*)*, i32 (%"class.icu_69::CollationIterator"*)** %298, align 8
  %300 = tail call i32 %299(%"class.icu_69::CollationIterator"* %0) #12
  %301 = getelementptr inbounds %"class.icu_69::UVector32", %"class.icu_69::UVector32"* %1, i64 0, i32 1
  %302 = load i32, i32* %301, align 8
  %303 = add nsw i32 %302, 1
  %304 = icmp sgt i32 %302, -2
  br i1 %304, label %305, label %309

305:                                              ; preds = %296
  %306 = getelementptr inbounds %"class.icu_69::UVector32", %"class.icu_69::UVector32"* %1, i64 0, i32 2
  %307 = load i32, i32* %306, align 4
  %308 = icmp sgt i32 %307, %302
  br i1 %308, label %313, label %309

309:                                              ; preds = %305, %296
  %310 = tail call signext i8 @_ZN6icu_699UVector3214expandCapacityEiR10UErrorCode(%"class.icu_69::UVector32"* %1, i32 %303, i32* dereferenceable(4) %2) #12
  %311 = icmp eq i8 %310, 0
  %312 = load i32, i32* %301, align 8
  br i1 %311, label %321, label %313

313:                                              ; preds = %309, %305
  %314 = phi i32 [ %302, %305 ], [ %312, %309 ]
  %315 = getelementptr inbounds %"class.icu_69::UVector32", %"class.icu_69::UVector32"* %1, i64 0, i32 4
  %316 = load i32*, i32** %315, align 8
  %317 = sext i32 %314 to i64
  %318 = getelementptr inbounds i32, i32* %316, i64 %317
  store i32 %300, i32* %318, align 4
  %319 = load i32, i32* %301, align 8
  %320 = add nsw i32 %319, 1
  store i32 %320, i32* %301, align 8
  br label %321

321:                                              ; preds = %309, %313
  %322 = phi i32 [ %320, %313 ], [ %312, %309 ]
  %323 = load i32, i32* %4, align 8
  %324 = icmp sgt i32 %322, %323
  br i1 %324, label %350, label %325

325:                                              ; preds = %321
  %326 = getelementptr inbounds %"class.icu_69::UVector32", %"class.icu_69::UVector32"* %1, i64 0, i32 2
  %327 = getelementptr inbounds %"class.icu_69::UVector32", %"class.icu_69::UVector32"* %1, i64 0, i32 4
  br label %328

328:                                              ; preds = %325, %346
  %329 = phi i32 [ %322, %325 ], [ %347, %346 ]
  %330 = icmp sgt i32 %329, -2
  %331 = load i32, i32* %326, align 4
  %332 = icmp sgt i32 %331, %329
  %333 = and i1 %330, %332
  br i1 %333, label %339, label %334

334:                                              ; preds = %328
  %335 = add nsw i32 %329, 1
  %336 = tail call signext i8 @_ZN6icu_699UVector3214expandCapacityEiR10UErrorCode(%"class.icu_69::UVector32"* %1, i32 %335, i32* dereferenceable(4) %2) #12
  %337 = icmp eq i8 %336, 0
  %338 = load i32, i32* %301, align 8
  br i1 %337, label %346, label %339

339:                                              ; preds = %334, %328
  %340 = phi i32 [ %329, %328 ], [ %338, %334 ]
  %341 = load i32*, i32** %327, align 8
  %342 = sext i32 %340 to i64
  %343 = getelementptr inbounds i32, i32* %341, i64 %342
  store i32 %19, i32* %343, align 4
  %344 = load i32, i32* %301, align 8
  %345 = add nsw i32 %344, 1
  store i32 %345, i32* %301, align 8
  br label %346

346:                                              ; preds = %334, %339
  %347 = phi i32 [ %345, %339 ], [ %338, %334 ]
  %348 = load i32, i32* %4, align 8
  %349 = icmp sgt i32 %347, %348
  br i1 %349, label %350, label %328

350:                                              ; preds = %346, %321, %293
  %351 = phi i32 [ %323, %321 ], [ %294, %293 ], [ %348, %346 ]
  %352 = add nsw i32 %351, -1
  store i32 %352, i32* %4, align 8
  %353 = sext i32 %352 to i64
  %354 = getelementptr inbounds %"class.icu_69::CollationIterator", %"class.icu_69::CollationIterator"* %0, i64 0, i32 3, i32 1, i32 0
  %355 = load i64*, i64** %354, align 8
  %356 = getelementptr inbounds i64, i64* %355, i64 %353
  %357 = load i64, i64* %356, align 8
  br label %358

358:                                              ; preds = %287, %282, %271, %116, %14, %290, %350, %7
  %359 = phi i64 [ %13, %7 ], [ %117, %116 ], [ 4311744768, %14 ], [ %357, %350 ], [ 1, %290 ], [ %281, %271 ], [ %289, %287 ], [ %286, %282 ]
  ret i64 %359
}

declare void @_ZN6icu_699UVector3217removeAllElementsEv(%"class.icu_69::UVector32"*) local_unnamed_addr #4

; Function Attrs: nounwind ssp uwtable
define hidden i64 @_ZN6icu_6917CollationIterator16previousCEUnsafeEiRNS_9UVector32ER10UErrorCode(%"class.icu_69::CollationIterator"*, i32, %"class.icu_69::UVector32"* dereferenceable(32), i32* dereferenceable(4)) local_unnamed_addr #0 align 2 {
  %5 = bitcast %"class.icu_69::CollationIterator"* %0 to i32 (%"class.icu_69::CollationIterator"*, i32*)***
  %6 = getelementptr inbounds %"class.icu_69::CollationIterator", %"class.icu_69::CollationIterator"* %0, i64 0, i32 2
  %7 = getelementptr inbounds %"class.icu_69::CollationIterator", %"class.icu_69::CollationIterator"* %0, i64 0, i32 8
  br label %8

8:                                                ; preds = %104, %4
  %9 = phi i32 [ 1, %4 ], [ %16, %104 ]
  %10 = load i32 (%"class.icu_69::CollationIterator"*, i32*)**, i32 (%"class.icu_69::CollationIterator"*, i32*)*** %5, align 8
  %11 = getelementptr inbounds i32 (%"class.icu_69::CollationIterator"*, i32*)*, i32 (%"class.icu_69::CollationIterator"*, i32*)** %10, i64 7
  %12 = load i32 (%"class.icu_69::CollationIterator"*, i32*)*, i32 (%"class.icu_69::CollationIterator"*, i32*)** %11, align 8
  %13 = tail call i32 %12(%"class.icu_69::CollationIterator"* %0, i32* dereferenceable(4) %3) #12
  %14 = icmp sgt i32 %13, -1
  br i1 %14, label %15, label %107

15:                                               ; preds = %8
  %16 = add nuw nsw i32 %9, 1
  %17 = load %"struct.icu_69::CollationData"*, %"struct.icu_69::CollationData"** %6, align 8
  %18 = load i8, i8* %7, align 4
  %19 = getelementptr inbounds %"struct.icu_69::CollationData", %"struct.icu_69::CollationData"* %17, i64 0, i32 12
  %20 = load %"class.icu_69::UnicodeSet"*, %"class.icu_69::UnicodeSet"** %19, align 8
  %21 = tail call signext i8 @_ZNK6icu_6910UnicodeSet8containsEi(%"class.icu_69::UnicodeSet"* %20, i32 %13) #12
  %22 = icmp eq i8 %21, 0
  br i1 %22, label %23, label %104

23:                                               ; preds = %15
  %24 = icmp eq i8 %18, 0
  br i1 %24, label %107, label %25

25:                                               ; preds = %23
  %26 = icmp slt i32 %13, 1632
  br i1 %26, label %27, label %30

27:                                               ; preds = %25
  %28 = add nsw i32 %13, -48
  %29 = icmp ult i32 %28, 10
  br label %101

30:                                               ; preds = %25
  %31 = getelementptr inbounds %"struct.icu_69::CollationData", %"struct.icu_69::CollationData"* %17, i64 0, i32 0
  %32 = load %struct.UTrie2*, %struct.UTrie2** %31, align 8
  %33 = getelementptr inbounds %struct.UTrie2, %struct.UTrie2* %32, i64 0, i32 2
  %34 = load i32*, i32** %33, align 8
  %35 = icmp ult i32 %13, 55296
  br i1 %35, label %36, label %47

36:                                               ; preds = %30
  %37 = getelementptr inbounds %struct.UTrie2, %struct.UTrie2* %32, i64 0, i32 0
  %38 = load i16*, i16** %37, align 8
  %39 = lshr i32 %13, 5
  %40 = zext i32 %39 to i64
  %41 = getelementptr inbounds i16, i16* %38, i64 %40
  %42 = load i16, i16* %41, align 2
  %43 = zext i16 %42 to i32
  %44 = shl nuw nsw i32 %43, 2
  %45 = and i32 %13, 31
  %46 = add nuw nsw i32 %44, %45
  br label %91

47:                                               ; preds = %30
  %48 = icmp ult i32 %13, 65536
  br i1 %48, label %49, label %63

49:                                               ; preds = %47
  %50 = getelementptr inbounds %struct.UTrie2, %struct.UTrie2* %32, i64 0, i32 0
  %51 = load i16*, i16** %50, align 8
  %52 = icmp slt i32 %13, 56320
  %53 = select i1 %52, i32 320, i32 0
  %54 = lshr i32 %13, 5
  %55 = add nuw nsw i32 %53, %54
  %56 = zext i32 %55 to i64
  %57 = getelementptr inbounds i16, i16* %51, i64 %56
  %58 = load i16, i16* %57, align 2
  %59 = zext i16 %58 to i32
  %60 = shl nuw nsw i32 %59, 2
  %61 = and i32 %13, 31
  %62 = add nuw nsw i32 %60, %61
  br label %91

63:                                               ; preds = %47
  %64 = icmp ugt i32 %13, 1114111
  br i1 %64, label %91, label %65

65:                                               ; preds = %63
  %66 = getelementptr inbounds %struct.UTrie2, %struct.UTrie2* %32, i64 0, i32 9
  %67 = load i32, i32* %66, align 4
  %68 = icmp sgt i32 %67, %13
  br i1 %68, label %72, label %69

69:                                               ; preds = %65
  %70 = getelementptr inbounds %struct.UTrie2, %struct.UTrie2* %32, i64 0, i32 10
  %71 = load i32, i32* %70, align 8
  br label %91

72:                                               ; preds = %65
  %73 = getelementptr inbounds %struct.UTrie2, %struct.UTrie2* %32, i64 0, i32 0
  %74 = load i16*, i16** %73, align 8
  %75 = lshr i32 %13, 11
  %76 = add nuw nsw i32 %75, 2080
  %77 = zext i32 %76 to i64
  %78 = getelementptr inbounds i16, i16* %74, i64 %77
  %79 = load i16, i16* %78, align 2
  %80 = zext i16 %79 to i32
  %81 = lshr i32 %13, 5
  %82 = and i32 %81, 63
  %83 = add nuw nsw i32 %82, %80
  %84 = zext i32 %83 to i64
  %85 = getelementptr inbounds i16, i16* %74, i64 %84
  %86 = load i16, i16* %85, align 2
  %87 = zext i16 %86 to i32
  %88 = shl nuw nsw i32 %87, 2
  %89 = and i32 %13, 31
  %90 = add nuw nsw i32 %88, %89
  br label %91

91:                                               ; preds = %72, %69, %63, %49, %36
  %92 = phi i32 [ %46, %36 ], [ %62, %49 ], [ 128, %63 ], [ %71, %69 ], [ %90, %72 ]
  %93 = sext i32 %92 to i64
  %94 = getelementptr inbounds i32, i32* %34, i64 %93
  %95 = load i32, i32* %94, align 4
  %96 = and i32 %95, 192
  %97 = icmp eq i32 %96, 192
  br i1 %97, label %98, label %101

98:                                               ; preds = %91
  %99 = and i32 %95, 15
  %100 = icmp eq i32 %99, 10
  br label %101

101:                                              ; preds = %27, %91, %98
  %102 = phi i1 [ %29, %27 ], [ false, %91 ], [ %100, %98 ]
  %103 = zext i1 %102 to i8
  br label %104

104:                                              ; preds = %15, %101
  %105 = phi i8 [ 1, %15 ], [ %103, %101 ]
  %106 = icmp eq i8 %105, 0
  br i1 %106, label %107, label %8

107:                                              ; preds = %23, %104, %8
  %108 = phi i32 [ %16, %104 ], [ %9, %8 ], [ %16, %23 ]
  %109 = getelementptr inbounds %"class.icu_69::CollationIterator", %"class.icu_69::CollationIterator"* %0, i64 0, i32 7
  store i32 %108, i32* %109, align 8
  %110 = getelementptr inbounds %"class.icu_69::CollationIterator", %"class.icu_69::CollationIterator"* %0, i64 0, i32 4
  store i32 0, i32* %110, align 8
  %111 = bitcast %"class.icu_69::CollationIterator"* %0 to i32 (%"class.icu_69::CollationIterator"*)***
  %112 = load i32 (%"class.icu_69::CollationIterator"*)**, i32 (%"class.icu_69::CollationIterator"*)*** %111, align 8
  %113 = getelementptr inbounds i32 (%"class.icu_69::CollationIterator"*)*, i32 (%"class.icu_69::CollationIterator"*)** %112, i64 5
  %114 = load i32 (%"class.icu_69::CollationIterator"*)*, i32 (%"class.icu_69::CollationIterator"*)** %113, align 8
  %115 = tail call i32 %114(%"class.icu_69::CollationIterator"* %0) #12
  %116 = load i32, i32* %109, align 8
  %117 = icmp sgt i32 %116, 0
  br i1 %117, label %121, label %118

118:                                              ; preds = %107
  %119 = getelementptr inbounds %"class.icu_69::UVector32", %"class.icu_69::UVector32"* %2, i64 0, i32 1
  %120 = load i32, i32* %119, align 8
  br label %184

121:                                              ; preds = %107
  %122 = getelementptr inbounds %"class.icu_69::CollationIterator", %"class.icu_69::CollationIterator"* %0, i64 0, i32 3, i32 0
  %123 = getelementptr inbounds %"class.icu_69::UVector32", %"class.icu_69::UVector32"* %2, i64 0, i32 1
  %124 = getelementptr inbounds %"class.icu_69::UVector32", %"class.icu_69::UVector32"* %2, i64 0, i32 2
  %125 = getelementptr inbounds %"class.icu_69::UVector32", %"class.icu_69::UVector32"* %2, i64 0, i32 4
  br label %130

126:                                              ; preds = %180, %154
  %127 = phi i32 [ %159, %154 ], [ %181, %180 ]
  %128 = load i32, i32* %109, align 8
  %129 = icmp sgt i32 %128, 0
  br i1 %129, label %130, label %184

130:                                              ; preds = %121, %126
  %131 = phi i32 [ %116, %121 ], [ %128, %126 ]
  %132 = phi i32 [ %115, %121 ], [ %158, %126 ]
  %133 = add nsw i32 %131, -1
  store i32 %133, i32* %109, align 8
  %134 = tail call i64 @_ZN6icu_6917CollationIterator6nextCEER10UErrorCode(%"class.icu_69::CollationIterator"* %0, i32* dereferenceable(4) %3)
  %135 = load i32, i32* %122, align 8
  store i32 %135, i32* %110, align 8
  %136 = load i32, i32* %123, align 8
  %137 = icmp sgt i32 %136, -2
  %138 = load i32, i32* %124, align 4
  %139 = icmp sgt i32 %138, %136
  %140 = and i1 %137, %139
  br i1 %140, label %147, label %141

141:                                              ; preds = %130
  %142 = add nsw i32 %136, 1
  %143 = tail call signext i8 @_ZN6icu_699UVector3214expandCapacityEiR10UErrorCode(%"class.icu_69::UVector32"* %2, i32 %142, i32* dereferenceable(4) %3) #12
  %144 = icmp eq i8 %143, 0
  br i1 %144, label %154, label %145

145:                                              ; preds = %141
  %146 = load i32, i32* %123, align 8
  br label %147

147:                                              ; preds = %130, %145
  %148 = phi i32 [ %146, %145 ], [ %136, %130 ]
  %149 = load i32*, i32** %125, align 8
  %150 = sext i32 %148 to i64
  %151 = getelementptr inbounds i32, i32* %149, i64 %150
  store i32 %132, i32* %151, align 4
  %152 = load i32, i32* %123, align 8
  %153 = add nsw i32 %152, 1
  store i32 %153, i32* %123, align 8
  br label %154

154:                                              ; preds = %141, %147
  %155 = load i32 (%"class.icu_69::CollationIterator"*)**, i32 (%"class.icu_69::CollationIterator"*)*** %111, align 8
  %156 = getelementptr inbounds i32 (%"class.icu_69::CollationIterator"*)*, i32 (%"class.icu_69::CollationIterator"*)** %155, i64 5
  %157 = load i32 (%"class.icu_69::CollationIterator"*)*, i32 (%"class.icu_69::CollationIterator"*)** %156, align 8
  %158 = tail call i32 %157(%"class.icu_69::CollationIterator"* %0) #12
  %159 = load i32, i32* %123, align 8
  %160 = load i32, i32* %122, align 8
  %161 = icmp slt i32 %159, %160
  br i1 %161, label %162, label %126

162:                                              ; preds = %154, %180
  %163 = phi i32 [ %181, %180 ], [ %159, %154 ]
  %164 = icmp sgt i32 %163, -2
  %165 = load i32, i32* %124, align 4
  %166 = icmp sgt i32 %165, %163
  %167 = and i1 %164, %166
  br i1 %167, label %173, label %168

168:                                              ; preds = %162
  %169 = add nsw i32 %163, 1
  %170 = tail call signext i8 @_ZN6icu_699UVector3214expandCapacityEiR10UErrorCode(%"class.icu_69::UVector32"* %2, i32 %169, i32* dereferenceable(4) %3) #12
  %171 = icmp eq i8 %170, 0
  %172 = load i32, i32* %123, align 8
  br i1 %171, label %180, label %173

173:                                              ; preds = %168, %162
  %174 = phi i32 [ %163, %162 ], [ %172, %168 ]
  %175 = load i32*, i32** %125, align 8
  %176 = sext i32 %174 to i64
  %177 = getelementptr inbounds i32, i32* %175, i64 %176
  store i32 %158, i32* %177, align 4
  %178 = load i32, i32* %123, align 8
  %179 = add nsw i32 %178, 1
  store i32 %179, i32* %123, align 8
  br label %180

180:                                              ; preds = %168, %173
  %181 = phi i32 [ %179, %173 ], [ %172, %168 ]
  %182 = load i32, i32* %122, align 8
  %183 = icmp slt i32 %181, %182
  br i1 %183, label %162, label %126

184:                                              ; preds = %126, %118
  %185 = phi i32 [ %120, %118 ], [ %127, %126 ]
  %186 = phi i32 [ %115, %118 ], [ %158, %126 ]
  %187 = getelementptr inbounds %"class.icu_69::UVector32", %"class.icu_69::UVector32"* %2, i64 0, i32 1
  %188 = add nsw i32 %185, 1
  %189 = icmp sgt i32 %185, -2
  br i1 %189, label %190, label %194

190:                                              ; preds = %184
  %191 = getelementptr inbounds %"class.icu_69::UVector32", %"class.icu_69::UVector32"* %2, i64 0, i32 2
  %192 = load i32, i32* %191, align 4
  %193 = icmp sgt i32 %192, %185
  br i1 %193, label %199, label %194

194:                                              ; preds = %190, %184
  %195 = tail call signext i8 @_ZN6icu_699UVector3214expandCapacityEiR10UErrorCode(%"class.icu_69::UVector32"* %2, i32 %188, i32* dereferenceable(4) %3) #12
  %196 = icmp eq i8 %195, 0
  br i1 %196, label %207, label %197

197:                                              ; preds = %194
  %198 = load i32, i32* %187, align 8
  br label %199

199:                                              ; preds = %197, %190
  %200 = phi i32 [ %198, %197 ], [ %185, %190 ]
  %201 = getelementptr inbounds %"class.icu_69::UVector32", %"class.icu_69::UVector32"* %2, i64 0, i32 4
  %202 = load i32*, i32** %201, align 8
  %203 = sext i32 %200 to i64
  %204 = getelementptr inbounds i32, i32* %202, i64 %203
  store i32 %186, i32* %204, align 4
  %205 = load i32, i32* %187, align 8
  %206 = add nsw i32 %205, 1
  store i32 %206, i32* %187, align 8
  br label %207

207:                                              ; preds = %194, %199
  store i32 -1, i32* %109, align 8
  %208 = bitcast %"class.icu_69::CollationIterator"* %0 to void (%"class.icu_69::CollationIterator"*, i32, i32*)***
  %209 = load void (%"class.icu_69::CollationIterator"*, i32, i32*)**, void (%"class.icu_69::CollationIterator"*, i32, i32*)*** %208, align 8
  %210 = getelementptr inbounds void (%"class.icu_69::CollationIterator"*, i32, i32*)*, void (%"class.icu_69::CollationIterator"*, i32, i32*)** %209, i64 13
  %211 = load void (%"class.icu_69::CollationIterator"*, i32, i32*)*, void (%"class.icu_69::CollationIterator"*, i32, i32*)** %210, align 8
  tail call void %211(%"class.icu_69::CollationIterator"* %0, i32 %108, i32* dereferenceable(4) %3) #12
  store i32 0, i32* %110, align 8
  %212 = load i32, i32* %3, align 4
  %213 = icmp sgt i32 %212, 0
  br i1 %213, label %223, label %214

214:                                              ; preds = %207
  %215 = getelementptr inbounds %"class.icu_69::CollationIterator", %"class.icu_69::CollationIterator"* %0, i64 0, i32 3, i32 0
  %216 = load i32, i32* %215, align 8
  %217 = add nsw i32 %216, -1
  store i32 %217, i32* %215, align 8
  %218 = sext i32 %217 to i64
  %219 = getelementptr inbounds %"class.icu_69::CollationIterator", %"class.icu_69::CollationIterator"* %0, i64 0, i32 3, i32 1, i32 0
  %220 = load i64*, i64** %219, align 8
  %221 = getelementptr inbounds i64, i64* %220, i64 %218
  %222 = load i64, i64* %221, align 8
  br label %223

223:                                              ; preds = %207, %214
  %224 = phi i64 [ %222, %214 ], [ 1, %207 ]
  ret i64 %224
}

declare i8* @_ZNK6icu_697UObject17getDynamicClassIDEv(%"class.icu_69::UObject"*) unnamed_addr #4

declare void @__cxa_pure_virtual() unnamed_addr

; Function Attrs: nounwind
declare void @_ZN6icu_6913UnicodeStringD1Ev(%"class.icu_69::UnicodeString"*) unnamed_addr #5

declare i32 @_ZN6icu_699Collation32getThreeBytePrimaryForOffsetDataEil(i32, i64) local_unnamed_addr #4

declare i32 @_ZN6icu_699Collation30unassignedPrimaryFromCodePointEi(i32) local_unnamed_addr #4

declare i32 @_ZNK6icu_6913UnicodeString8char32AtEi(%"class.icu_69::UnicodeString"*, i32) local_unnamed_addr #4

declare i32 @_ZNK6icu_6913UnicodeString11moveIndex32Eii(%"class.icu_69::UnicodeString"*, i32, i32) local_unnamed_addr #4

declare zeroext i16 @_ZNK6icu_6915Normalizer2Impl20getFCD16FromNormDataEi(%"class.icu_69::Normalizer2Impl"*, i32) local_unnamed_addr #4

declare void @_ZN6icu_6913UnicodeString7unBogusEv(%"class.icu_69::UnicodeString"*) local_unnamed_addr #4

declare dereferenceable(64) %"class.icu_69::UnicodeString"* @_ZN6icu_6913UnicodeString7replaceEiii(%"class.icu_69::UnicodeString"*, i32, i32, i32) local_unnamed_addr #4

declare dereferenceable(64) %"class.icu_69::UnicodeString"* @_ZN6icu_6913UnicodeString6appendEi(%"class.icu_69::UnicodeString"*, i32) local_unnamed_addr #4

declare dereferenceable(64) %"class.icu_69::UnicodeString"* @_ZN6icu_6913UnicodeString9doReplaceEiiRKS0_ii(%"class.icu_69::UnicodeString"*, i32, i32, %"class.icu_69::UnicodeString"* dereferenceable(64), i32, i32) local_unnamed_addr #4

declare signext i8 @_ZNK6icu_6910UnicodeSet8containsEi(%"class.icu_69::UnicodeSet"*, i32) unnamed_addr #4

declare signext i8 @_ZN6icu_699UVector3214expandCapacityEiR10UErrorCode(%"class.icu_69::UVector32"*, i32, i32* dereferenceable(4)) local_unnamed_addr #4

attributes #0 = { nounwind ssp uwtable "correctly-rounded-divide-sqrt-fp-math"="false" "disable-tail-calls"="false" "less-precise-fpmad"="false" "min-legal-vector-width"="0" "no-frame-pointer-elim"="false" "no-frame-pointer-elim-non-leaf" "no-infs-fp-math"="false" "no-jump-tables"="false" "no-nans-fp-math"="false" "no-signed-zeros-fp-math"="false" "no-trapping-math"="false" "null-pointer-is-valid"="true" "stack-protector-buffer-size"="4" "target-cpu"="x86-64" "target-features"="+cx8,+fxsr,+mmx,+sse,+sse2,+sse3,+x87" "unsafe-fp-math"="false" "use-soft-float"="false" }
attributes #1 = { inlinehint nounwind ssp uwtable "correctly-rounded-divide-sqrt-fp-math"="false" "disable-tail-calls"="false" "less-precise-fpmad"="false" "min-legal-vector-width"="0" "no-frame-pointer-elim"="false" "no-frame-pointer-elim-non-leaf" "no-infs-fp-math"="false" "no-jump-tables"="false" "no-nans-fp-math"="false" "no-signed-zeros-fp-math"="false" "no-trapping-math"="false" "null-pointer-is-valid"="true" "stack-protector-buffer-size"="4" "target-cpu"="x86-64" "target-features"="+cx8,+fxsr,+mmx,+sse,+sse2,+sse3,+x87" "unsafe-fp-math"="false" "use-soft-float"="false" }
attributes #2 = { argmemonly nounwind }
attributes #3 = { allocsize(0) "correctly-rounded-divide-sqrt-fp-math"="false" "disable-tail-calls"="false" "less-precise-fpmad"="false" "no-frame-pointer-elim"="false" "no-frame-pointer-elim-non-leaf" "no-infs-fp-math"="false" "no-nans-fp-math"="false" "no-signed-zeros-fp-math"="false" "no-trapping-math"="false" "null-pointer-is-valid"="true" "stack-protector-buffer-size"="4" "target-cpu"="x86-64" "target-features"="+cx8,+fxsr,+mmx,+sse,+sse2,+sse3,+x87" "unsafe-fp-math"="false" "use-soft-float"="false" }
attributes #4 = { "correctly-rounded-divide-sqrt-fp-math"="false" "disable-tail-calls"="false" "less-precise-fpmad"="false" "no-frame-pointer-elim"="false" "no-frame-pointer-elim-non-leaf" "no-infs-fp-math"="false" "no-nans-fp-math"="false" "no-signed-zeros-fp-math"="false" "no-trapping-math"="false" "null-pointer-is-valid"="true" "stack-protector-buffer-size"="4" "target-cpu"="x86-64" "target-features"="+cx8,+fxsr,+mmx,+sse,+sse2,+sse3,+x87" "unsafe-fp-math"="false" "use-soft-float"="false" }
attributes #5 = { nounwind "correctly-rounded-divide-sqrt-fp-math"="false" "disable-tail-calls"="false" "less-precise-fpmad"="false" "no-frame-pointer-elim"="false" "no-frame-pointer-elim-non-leaf" "no-infs-fp-math"="false" "no-nans-fp-math"="false" "no-signed-zeros-fp-math"="false" "no-trapping-math"="false" "null-pointer-is-valid"="true" "stack-protector-buffer-size"="4" "target-cpu"="x86-64" "target-features"="+cx8,+fxsr,+mmx,+sse,+sse2,+sse3,+x87" "unsafe-fp-math"="false" "use-soft-float"="false" }
attributes #6 = { noreturn nounwind ssp uwtable "correctly-rounded-divide-sqrt-fp-math"="false" "disable-tail-calls"="false" "less-precise-fpmad"="false" "min-legal-vector-width"="0" "no-frame-pointer-elim"="false" "no-frame-pointer-elim-non-leaf" "no-infs-fp-math"="false" "no-jump-tables"="false" "no-nans-fp-math"="false" "no-signed-zeros-fp-math"="false" "no-trapping-math"="false" "null-pointer-is-valid"="true" "stack-protector-buffer-size"="4" "target-cpu"="x86-64" "target-features"="+cx8,+fxsr,+mmx,+sse,+sse2,+sse3,+x87" "unsafe-fp-math"="false" "use-soft-float"="false" }
attributes #7 = { cold noreturn nounwind }
attributes #8 = { nofree norecurse nounwind ssp uwtable "correctly-rounded-divide-sqrt-fp-math"="false" "disable-tail-calls"="false" "less-precise-fpmad"="false" "min-legal-vector-width"="0" "no-frame-pointer-elim"="false" "no-frame-pointer-elim-non-leaf" "no-infs-fp-math"="false" "no-jump-tables"="false" "no-nans-fp-math"="false" "no-signed-zeros-fp-math"="false" "no-trapping-math"="false" "null-pointer-is-valid"="true" "stack-protector-buffer-size"="4" "target-cpu"="x86-64" "target-features"="+cx8,+fxsr,+mmx,+sse,+sse2,+sse3,+x87" "unsafe-fp-math"="false" "use-soft-float"="false" }
attributes #9 = { norecurse nounwind readnone ssp uwtable "correctly-rounded-divide-sqrt-fp-math"="false" "disable-tail-calls"="false" "less-precise-fpmad"="false" "min-legal-vector-width"="0" "no-frame-pointer-elim"="false" "no-frame-pointer-elim-non-leaf" "no-infs-fp-math"="false" "no-jump-tables"="false" "no-nans-fp-math"="false" "no-signed-zeros-fp-math"="false" "no-trapping-math"="false" "null-pointer-is-valid"="true" "stack-protector-buffer-size"="4" "target-cpu"="x86-64" "target-features"="+cx8,+fxsr,+mmx,+sse,+sse2,+sse3,+x87" "unsafe-fp-math"="false" "use-soft-float"="false" }
attributes #10 = { norecurse nounwind readonly ssp uwtable "correctly-rounded-divide-sqrt-fp-math"="false" "disable-tail-calls"="false" "less-precise-fpmad"="false" "min-legal-vector-width"="0" "no-frame-pointer-elim"="false" "no-frame-pointer-elim-non-leaf" "no-infs-fp-math"="false" "no-jump-tables"="false" "no-nans-fp-math"="false" "no-signed-zeros-fp-math"="false" "no-trapping-math"="false" "null-pointer-is-valid"="true" "stack-protector-buffer-size"="4" "target-cpu"="x86-64" "target-features"="+cx8,+fxsr,+mmx,+sse,+sse2,+sse3,+x87" "unsafe-fp-math"="false" "use-soft-float"="false" }
attributes #11 = { nounwind allocsize(0) }
attributes #12 = { nounwind }
attributes #13 = { noreturn nounwind }

!llvm.module.flags = !{!0, !1}

!0 = !{i32 1, !"wchar_size", i32 4}
!1 = !{i32 7, !"PIC Level", i32 2}
!2 = distinct !{!2, !3}
!3 = !{!"llvm.loop.unroll.disable"}
!4 = !{i32 -2146341994}
!5 = distinct !{!5, !3}
