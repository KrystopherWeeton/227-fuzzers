; ModuleID = '../../chrome/browser/metrics/power/battery_level_provider.cc'
source_filename = "../../chrome/browser/metrics/power/battery_level_provider.cc"
target datalayout = "e-m:e-i64:64-f80:128-n8:16:32:64-S128"
target triple = "x86_64-unknown-linux-gnu"

module asm ".symver exp, exp@GLIBC_2.2.5"
module asm ".symver exp2, exp2@GLIBC_2.2.5"
module asm ".symver exp2f, exp2f@GLIBC_2.2.5"
module asm ".symver expf, expf@GLIBC_2.2.5"
module asm ".symver lgamma, lgamma@GLIBC_2.2.5"
module asm ".symver lgammaf, lgammaf@GLIBC_2.2.5"
module asm ".symver lgammal, lgammal@GLIBC_2.2.5"
module asm ".symver log, log@GLIBC_2.2.5"
module asm ".symver log2, log2@GLIBC_2.2.5"
module asm ".symver log2f, log2f@GLIBC_2.2.5"
module asm ".symver logf, logf@GLIBC_2.2.5"
module asm ".symver pow, pow@GLIBC_2.2.5"
module asm ".symver powf, powf@GLIBC_2.2.5"

%"struct.BatteryLevelProvider::BatteryState" = type { i64, i64, %"class.absl::optional", i8, %"class.base::TimeTicks" }
%"class.absl::optional" = type { %"class.absl::optional_internal::optional_data" }
%"class.absl::optional_internal::optional_data" = type { %"class.absl::optional_internal::optional_data_base" }
%"class.absl::optional_internal::optional_data_base" = type { %"class.absl::optional_internal::optional_data_dtor_base" }
%"class.absl::optional_internal::optional_data_dtor_base" = type { i8, %union.anon }
%union.anon = type { double }
%"class.base::TimeTicks" = type { %"class.base::time_internal::TimeBase" }
%"class.base::time_internal::TimeBase" = type { i64 }
%"struct.BatteryLevelProvider::BatteryInterface" = type { i8, %"class.absl::optional.0" }
%"class.absl::optional.0" = type { %"class.absl::optional_internal::optional_data.1" }
%"class.absl::optional_internal::optional_data.1" = type { %"class.absl::optional_internal::optional_data_base.2" }
%"class.absl::optional_internal::optional_data_base.2" = type { %"class.absl::optional_internal::optional_data_dtor_base.3" }
%"class.absl::optional_internal::optional_data_dtor_base.3" = type { i8, %union.anon.4 }
%union.anon.4 = type { %"struct.BatteryLevelProvider::BatteryDetails" }
%"struct.BatteryLevelProvider::BatteryDetails" = type { i8, i64, i64 }
%"class.std::__1::vector" = type { %"class.std::__1::__vector_base" }
%"class.std::__1::__vector_base" = type { %"struct.BatteryLevelProvider::BatteryInterface"*, %"struct.BatteryLevelProvider::BatteryInterface"*, %"class.std::__1::__compressed_pair" }
%"class.std::__1::__compressed_pair" = type { %"struct.std::__1::__compressed_pair_elem" }
%"struct.std::__1::__compressed_pair_elem" = type { %"struct.BatteryLevelProvider::BatteryInterface"* }

@_ZN20BatteryLevelProvider12BatteryStateC1EmmN4absl8optionalIdEEbN4base9TimeTicksE = hidden unnamed_addr alias void (%"struct.BatteryLevelProvider::BatteryState"*, i64, i64, i8, double, i1, i64), void (%"struct.BatteryLevelProvider::BatteryState"*, i64, i64, i8, double, i1, i64)* @_ZN20BatteryLevelProvider12BatteryStateC2EmmN4absl8optionalIdEEbN4base9TimeTicksE
@_ZN20BatteryLevelProvider12BatteryStateC1ERKS0_ = hidden unnamed_addr alias void (%"struct.BatteryLevelProvider::BatteryState"*, %"struct.BatteryLevelProvider::BatteryState"*), void (%"struct.BatteryLevelProvider::BatteryState"*, %"struct.BatteryLevelProvider::BatteryState"*)* @_ZN20BatteryLevelProvider12BatteryStateC2ERKS0_
@_ZN20BatteryLevelProvider16BatteryInterfaceC1Eb = hidden unnamed_addr alias void (%"struct.BatteryLevelProvider::BatteryInterface"*, i1), void (%"struct.BatteryLevelProvider::BatteryInterface"*, i1)* @_ZN20BatteryLevelProvider16BatteryInterfaceC2Eb
@_ZN20BatteryLevelProvider16BatteryInterfaceC1ERKNS_14BatteryDetailsE = hidden unnamed_addr alias void (%"struct.BatteryLevelProvider::BatteryInterface"*, %"struct.BatteryLevelProvider::BatteryDetails"*), void (%"struct.BatteryLevelProvider::BatteryInterface"*, %"struct.BatteryLevelProvider::BatteryDetails"*)* @_ZN20BatteryLevelProvider16BatteryInterfaceC2ERKNS_14BatteryDetailsE
@_ZN20BatteryLevelProvider16BatteryInterfaceC1ERKS0_ = hidden unnamed_addr alias void (%"struct.BatteryLevelProvider::BatteryInterface"*, %"struct.BatteryLevelProvider::BatteryInterface"*), void (%"struct.BatteryLevelProvider::BatteryInterface"*, %"struct.BatteryLevelProvider::BatteryInterface"*)* @_ZN20BatteryLevelProvider16BatteryInterfaceC2ERKS0_

; Function Attrs: nounwind ssp uwtable
define hidden void @_ZN20BatteryLevelProvider12BatteryStateC2EmmN4absl8optionalIdEEbN4base9TimeTicksE(%"struct.BatteryLevelProvider::BatteryState"* nocapture, i64, i64, i8, double, i1 zeroext, i64) unnamed_addr #0 align 2 {
  %8 = zext i1 %5 to i8
  %9 = getelementptr inbounds %"struct.BatteryLevelProvider::BatteryState", %"struct.BatteryLevelProvider::BatteryState"* %0, i64 0, i32 0
  store i64 %1, i64* %9, align 8
  %10 = getelementptr inbounds %"struct.BatteryLevelProvider::BatteryState", %"struct.BatteryLevelProvider::BatteryState"* %0, i64 0, i32 1
  store i64 %2, i64* %10, align 8
  %11 = getelementptr inbounds %"struct.BatteryLevelProvider::BatteryState", %"struct.BatteryLevelProvider::BatteryState"* %0, i64 0, i32 2, i32 0, i32 0, i32 0, i32 0
  store i8 %3, i8* %11, align 8
  %12 = getelementptr inbounds %"struct.BatteryLevelProvider::BatteryState", %"struct.BatteryLevelProvider::BatteryState"* %0, i64 0, i32 2, i32 0, i32 0, i32 0, i32 1, i32 0
  store double %4, double* %12, align 8
  %13 = getelementptr inbounds %"struct.BatteryLevelProvider::BatteryState", %"struct.BatteryLevelProvider::BatteryState"* %0, i64 0, i32 3
  store i8 %8, i8* %13, align 8
  %14 = getelementptr inbounds %"struct.BatteryLevelProvider::BatteryState", %"struct.BatteryLevelProvider::BatteryState"* %0, i64 0, i32 4, i32 0, i32 0
  store i64 %6, i64* %14, align 8
  ret void
}

; Function Attrs: argmemonly nounwind
declare void @llvm.memcpy.p0i8.p0i8.i64(i8* nocapture writeonly, i8* nocapture readonly, i64, i1 immarg) #1

; Function Attrs: nounwind ssp uwtable
define hidden void @_ZN20BatteryLevelProvider12BatteryStateC2ERKS0_(%"struct.BatteryLevelProvider::BatteryState"* nocapture, %"struct.BatteryLevelProvider::BatteryState"* nocapture readonly dereferenceable(48)) unnamed_addr #0 align 2 {
  %3 = bitcast %"struct.BatteryLevelProvider::BatteryState"* %0 to i8*
  %4 = bitcast %"struct.BatteryLevelProvider::BatteryState"* %1 to i8*
  tail call void @llvm.memcpy.p0i8.p0i8.i64(i8* align 8 %3, i8* align 8 %4, i64 48, i1 false)
  ret void
}

; Function Attrs: nounwind ssp uwtable
define hidden void @_ZN20BatteryLevelProvider16BatteryInterfaceC2Eb(%"struct.BatteryLevelProvider::BatteryInterface"* nocapture, i1 zeroext) unnamed_addr #0 align 2 {
  %3 = zext i1 %1 to i8
  %4 = getelementptr inbounds %"struct.BatteryLevelProvider::BatteryInterface", %"struct.BatteryLevelProvider::BatteryInterface"* %0, i64 0, i32 0
  store i8 %3, i8* %4, align 8
  %5 = getelementptr inbounds %"struct.BatteryLevelProvider::BatteryInterface", %"struct.BatteryLevelProvider::BatteryInterface"* %0, i64 0, i32 1, i32 0, i32 0, i32 0, i32 0
  store i8 0, i8* %5, align 8
  %6 = getelementptr inbounds %"struct.BatteryLevelProvider::BatteryInterface", %"struct.BatteryLevelProvider::BatteryInterface"* %0, i64 0, i32 1, i32 0, i32 0, i32 0, i32 1, i32 0, i32 0
  tail call void @llvm.memset.p0i8.i64(i8* align 8 %6, i8 0, i64 24, i1 false) #3
  ret void
}

; Function Attrs: nounwind ssp uwtable
define hidden void @_ZN20BatteryLevelProvider16BatteryInterfaceC2ERKNS_14BatteryDetailsE(%"struct.BatteryLevelProvider::BatteryInterface"* nocapture, %"struct.BatteryLevelProvider::BatteryDetails"* nocapture readonly dereferenceable(24)) unnamed_addr #0 align 2 {
  %3 = getelementptr inbounds %"struct.BatteryLevelProvider::BatteryInterface", %"struct.BatteryLevelProvider::BatteryInterface"* %0, i64 0, i32 0
  store i8 1, i8* %3, align 8
  %4 = getelementptr inbounds %"struct.BatteryLevelProvider::BatteryInterface", %"struct.BatteryLevelProvider::BatteryInterface"* %0, i64 0, i32 1, i32 0, i32 0, i32 0, i32 0
  store i8 1, i8* %4, align 8
  %5 = getelementptr inbounds %"struct.BatteryLevelProvider::BatteryInterface", %"struct.BatteryLevelProvider::BatteryInterface"* %0, i64 0, i32 1, i32 0, i32 0, i32 0, i32 1, i32 0, i32 0
  %6 = getelementptr inbounds %"struct.BatteryLevelProvider::BatteryDetails", %"struct.BatteryLevelProvider::BatteryDetails"* %1, i64 0, i32 0
  tail call void @llvm.memcpy.p0i8.p0i8.i64(i8* align 8 %5, i8* align 8 %6, i64 24, i1 false) #3
  ret void
}

; Function Attrs: nounwind ssp uwtable
define hidden void @_ZN20BatteryLevelProvider16BatteryInterfaceC2ERKS0_(%"struct.BatteryLevelProvider::BatteryInterface"* nocapture, %"struct.BatteryLevelProvider::BatteryInterface"* nocapture readonly dereferenceable(40)) unnamed_addr #0 align 2 {
  %3 = getelementptr inbounds %"struct.BatteryLevelProvider::BatteryInterface", %"struct.BatteryLevelProvider::BatteryInterface"* %0, i64 0, i32 0
  %4 = getelementptr inbounds %"struct.BatteryLevelProvider::BatteryInterface", %"struct.BatteryLevelProvider::BatteryInterface"* %1, i64 0, i32 0
  tail call void @llvm.memcpy.p0i8.p0i8.i64(i8* align 8 %3, i8* align 8 %4, i64 40, i1 false)
  ret void
}

; Function Attrs: nounwind ssp uwtable
define hidden void @_ZN20BatteryLevelProvider16MakeBatteryStateERKNSt3__16vectorINS_16BatteryInterfaceENS0_9allocatorIS2_EEEE(%"struct.BatteryLevelProvider::BatteryState"* noalias nocapture sret, %"class.std::__1::vector"* nocapture readonly dereferenceable(24)) local_unnamed_addr #0 align 2 {
  %3 = tail call i64 @_ZN4base9TimeTicks3NowEv() #3
  %4 = getelementptr inbounds %"class.std::__1::vector", %"class.std::__1::vector"* %1, i64 0, i32 0, i32 0
  %5 = load %"struct.BatteryLevelProvider::BatteryInterface"*, %"struct.BatteryLevelProvider::BatteryInterface"** %4, align 8
  %6 = getelementptr inbounds %"class.std::__1::vector", %"class.std::__1::vector"* %1, i64 0, i32 0, i32 1
  %7 = load %"struct.BatteryLevelProvider::BatteryInterface"*, %"struct.BatteryLevelProvider::BatteryInterface"** %6, align 8
  %8 = icmp eq %"struct.BatteryLevelProvider::BatteryInterface"* %5, %7
  %9 = ptrtoint %"struct.BatteryLevelProvider::BatteryInterface"* %7 to i64
  %10 = ptrtoint %"struct.BatteryLevelProvider::BatteryInterface"* %5 to i64
  br i1 %8, label %54, label %16

11:                                               ; preds = %42
  %12 = and i8 %43, 1
  %13 = icmp eq i8 %12, 0
  %14 = icmp ne i64 %47, 0
  %15 = and i1 %13, %14
  br i1 %15, label %50, label %54

16:                                               ; preds = %2, %42
  %17 = phi i64 [ %47, %42 ], [ 0, %2 ]
  %18 = phi i64 [ %46, %42 ], [ 0, %2 ]
  %19 = phi i8 [ %45, %42 ], [ 1, %2 ]
  %20 = phi i64 [ %44, %42 ], [ 0, %2 ]
  %21 = phi i8 [ %43, %42 ], [ 0, %2 ]
  %22 = phi %"struct.BatteryLevelProvider::BatteryInterface"* [ %48, %42 ], [ %5, %2 ]
  %23 = getelementptr inbounds %"struct.BatteryLevelProvider::BatteryInterface", %"struct.BatteryLevelProvider::BatteryInterface"* %22, i64 0, i32 0
  %24 = load i8, i8* %23, align 8, !range !2
  %25 = icmp eq i8 %24, 0
  br i1 %25, label %42, label %26

26:                                               ; preds = %16
  %27 = add i64 %20, 1
  %28 = getelementptr inbounds %"struct.BatteryLevelProvider::BatteryInterface", %"struct.BatteryLevelProvider::BatteryInterface"* %22, i64 0, i32 1, i32 0, i32 0, i32 0, i32 0
  %29 = load i8, i8* %28, align 8, !range !2
  %30 = icmp eq i8 %29, 0
  br i1 %30, label %42, label %31

31:                                               ; preds = %26
  %32 = getelementptr inbounds %"struct.BatteryLevelProvider::BatteryInterface", %"struct.BatteryLevelProvider::BatteryInterface"* %22, i64 0, i32 1, i32 0, i32 0, i32 0, i32 1, i32 0, i32 0
  %33 = load i8, i8* %32, align 8, !range !2
  %34 = icmp eq i8 %33, 0
  %35 = select i1 %34, i8 %19, i8 0
  %36 = getelementptr inbounds %"struct.BatteryLevelProvider::BatteryInterface", %"struct.BatteryLevelProvider::BatteryInterface"* %22, i64 0, i32 1, i32 0, i32 0, i32 0, i32 1, i32 0, i32 1
  %37 = load i64, i64* %36, align 8
  %38 = add i64 %37, %18
  %39 = getelementptr inbounds %"struct.BatteryLevelProvider::BatteryInterface", %"struct.BatteryLevelProvider::BatteryInterface"* %22, i64 0, i32 1, i32 0, i32 0, i32 0, i32 1, i32 0, i32 2
  %40 = load i64, i64* %39, align 8
  %41 = add i64 %40, %17
  br label %42

42:                                               ; preds = %26, %16, %31
  %43 = phi i8 [ %21, %31 ], [ %21, %16 ], [ 1, %26 ]
  %44 = phi i64 [ %27, %31 ], [ %20, %16 ], [ %27, %26 ]
  %45 = phi i8 [ %35, %31 ], [ %19, %16 ], [ 0, %26 ]
  %46 = phi i64 [ %38, %31 ], [ %18, %16 ], [ %18, %26 ]
  %47 = phi i64 [ %41, %31 ], [ %17, %16 ], [ %17, %26 ]
  %48 = getelementptr inbounds %"struct.BatteryLevelProvider::BatteryInterface", %"struct.BatteryLevelProvider::BatteryInterface"* %22, i64 1
  %49 = icmp eq %"struct.BatteryLevelProvider::BatteryInterface"* %48, %7
  br i1 %49, label %11, label %16

50:                                               ; preds = %11
  %51 = uitofp i64 %46 to double
  %52 = uitofp i64 %47 to double
  %53 = fdiv double %51, %52
  br label %54

54:                                               ; preds = %2, %11, %50
  %55 = phi i8 [ %45, %50 ], [ %45, %11 ], [ 1, %2 ]
  %56 = phi i64 [ %44, %50 ], [ %44, %11 ], [ 0, %2 ]
  %57 = phi i8 [ 1, %50 ], [ 0, %11 ], [ 0, %2 ]
  %58 = phi double [ %53, %50 ], [ 0xFFFFFFFFFFFFFFFF, %11 ], [ 0xFFFFFFFFFFFFFFFF, %2 ]
  %59 = icmp ne i64 %56, 0
  %60 = sub i64 %9, %10
  %61 = sdiv exact i64 %60, 40
  %62 = and i8 %55, 1
  %63 = icmp ne i8 %62, 0
  %64 = and i1 %59, %63
  %65 = zext i1 %64 to i8
  %66 = getelementptr inbounds %"struct.BatteryLevelProvider::BatteryState", %"struct.BatteryLevelProvider::BatteryState"* %0, i64 0, i32 0
  store i64 %61, i64* %66, align 8
  %67 = getelementptr inbounds %"struct.BatteryLevelProvider::BatteryState", %"struct.BatteryLevelProvider::BatteryState"* %0, i64 0, i32 1
  store i64 %56, i64* %67, align 8
  %68 = getelementptr inbounds %"struct.BatteryLevelProvider::BatteryState", %"struct.BatteryLevelProvider::BatteryState"* %0, i64 0, i32 2, i32 0, i32 0, i32 0, i32 0
  store i8 %57, i8* %68, align 8
  %69 = getelementptr inbounds %"struct.BatteryLevelProvider::BatteryState", %"struct.BatteryLevelProvider::BatteryState"* %0, i64 0, i32 2, i32 0, i32 0, i32 0, i32 1, i32 0
  store double %58, double* %69, align 8
  %70 = getelementptr inbounds %"struct.BatteryLevelProvider::BatteryState", %"struct.BatteryLevelProvider::BatteryState"* %0, i64 0, i32 3
  store i8 %65, i8* %70, align 8
  %71 = getelementptr inbounds %"struct.BatteryLevelProvider::BatteryState", %"struct.BatteryLevelProvider::BatteryState"* %0, i64 0, i32 4, i32 0, i32 0
  store i64 %3, i64* %71, align 8
  ret void
}

declare i64 @_ZN4base9TimeTicks3NowEv() local_unnamed_addr #2

; Function Attrs: argmemonly nounwind
declare void @llvm.memset.p0i8.i64(i8* nocapture writeonly, i8, i64, i1 immarg) #1

attributes #0 = { nounwind ssp uwtable "correctly-rounded-divide-sqrt-fp-math"="false" "disable-tail-calls"="false" "less-precise-fpmad"="false" "min-legal-vector-width"="0" "no-frame-pointer-elim"="false" "no-frame-pointer-elim-non-leaf" "no-infs-fp-math"="false" "no-jump-tables"="false" "no-nans-fp-math"="false" "no-signed-zeros-fp-math"="false" "no-trapping-math"="false" "null-pointer-is-valid"="true" "stack-protector-buffer-size"="4" "target-cpu"="x86-64" "target-features"="+cx8,+fxsr,+mmx,+sse,+sse2,+sse3,+x87" "unsafe-fp-math"="false" "use-soft-float"="false" }
attributes #1 = { argmemonly nounwind }
attributes #2 = { "correctly-rounded-divide-sqrt-fp-math"="false" "disable-tail-calls"="false" "less-precise-fpmad"="false" "no-frame-pointer-elim"="false" "no-frame-pointer-elim-non-leaf" "no-infs-fp-math"="false" "no-nans-fp-math"="false" "no-signed-zeros-fp-math"="false" "no-trapping-math"="false" "null-pointer-is-valid"="true" "stack-protector-buffer-size"="4" "target-cpu"="x86-64" "target-features"="+cx8,+fxsr,+mmx,+sse,+sse2,+sse3,+x87" "unsafe-fp-math"="false" "use-soft-float"="false" }
attributes #3 = { nounwind }

!llvm.module.flags = !{!0, !1}

!0 = !{i32 1, !"wchar_size", i32 4}
!1 = !{i32 7, !"PIC Level", i32 2}
!2 = !{i8 0, i8 2}
