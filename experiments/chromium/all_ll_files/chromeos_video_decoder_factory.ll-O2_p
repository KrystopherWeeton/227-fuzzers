; ModuleID = '../../media/gpu/chromeos/chromeos_video_decoder_factory.cc'
source_filename = "../../media/gpu/chromeos/chromeos_video_decoder_factory.cc"
target datalayout = "e-m:e-i64:64-f80:128-n8:16:32:64-S128"
target triple = "x86_64-unknown-linux-gnu"

module asm ".symver exp, exp@GLIBC_2.2.5"
module asm ".symver exp2, exp2@GLIBC_2.2.5"
module asm ".symver exp2f, exp2f@GLIBC_2.2.5"
module asm ".symver expf, expf@GLIBC_2.2.5"
module asm ".symver lgamma, lgamma@GLIBC_2.2.5"
module asm ".symver lgammaf, lgammaf@GLIBC_2.2.5"
module asm ".symver lgammal, lgammal@GLIBC_2.2.5"
module asm ".symver log, log@GLIBC_2.2.5"
module asm ".symver log2, log2@GLIBC_2.2.5"
module asm ".symver log2f, log2f@GLIBC_2.2.5"
module asm ".symver logf, logf@GLIBC_2.2.5"
module asm ".symver pow, pow@GLIBC_2.2.5"
module asm ".symver powf, powf@GLIBC_2.2.5"

%"class.std::__1::vector" = type { %"class.std::__1::__vector_base" }
%"class.std::__1::__vector_base" = type { %"struct.media::SupportedVideoDecoderConfig"*, %"struct.media::SupportedVideoDecoderConfig"*, %"class.std::__1::__compressed_pair" }
%"struct.media::SupportedVideoDecoderConfig" = type <{ i32, i32, %"class.gfx::Size", %"class.gfx::Size", i8, i8, [2 x i8] }>
%"class.gfx::Size" = type { i32, i32 }
%"class.std::__1::__compressed_pair" = type { %"struct.std::__1::__compressed_pair_elem" }
%"struct.std::__1::__compressed_pair_elem" = type { %"struct.media::SupportedVideoDecoderConfig"* }
%"class.gpu::GpuDriverBugWorkarounds" = type { i8, i8, i8, i8, i8, i8, i8, i8, i8, i8, i8, i8, i8, i8, i8, i8, i8, i8, i8, i8, i8, i8, i8, i8, i8, i8, i8, i8, i8, i8, i8, i8, i8, i8, i8, i8, i8, i8, i8, i8, i8, i8, i8, i8, i8, i8, i8, i8, i8, i8, i8, i8, i8, i8, i8, i8, i8, i8, i8, i8, i8, i8, i8, i8, i8, i8, i8, i8, i8, i8, i8, i8, i8, i8, i8, i8, i8, i8, i8, i8, i8, i8, i8, i8, i8, i8, i8, i8, i8, i8, i8, i8, i8, i8, i8, i8, i8, i8, i8, i8, i8, i8, i8, i8, i8, i8, i8, i8, i8, i8, i8, i8, i8, i8, i8, i8, i8, i8, i8, i8, i8, i8, i8, i8, i8, i8, i8, i8, i8, i8, i8, i8, i8, i8, i32, i32, i32 }
%"class.media::VideoDecoder" = type { %"class.media::Decoder" }
%"class.media::Decoder" = type { i32 (...)** }
%"class.base::SequencedTaskRunner" = type { %"class.base::TaskRunner.base", [4 x i8] }
%"class.base::TaskRunner.base" = type <{ i32 (...)**, %"class.base::RefCountedThreadSafe" }>
%"class.base::RefCountedThreadSafe" = type { %"class.base::subtle::RefCountedThreadSafeBase" }
%"class.base::subtle::RefCountedThreadSafeBase" = type { %"class.base::AtomicRefCount" }
%"class.base::AtomicRefCount" = type { %"struct.std::__1::atomic" }
%"struct.std::__1::atomic" = type { %"struct.std::__1::__atomic_base" }
%"struct.std::__1::__atomic_base" = type { %"struct.std::__1::__atomic_base.8" }
%"struct.std::__1::__atomic_base.8" = type { %"struct.std::__1::__cxx_atomic_impl" }
%"struct.std::__1::__cxx_atomic_impl" = type { %"struct.std::__1::__cxx_atomic_base_impl" }
%"struct.std::__1::__cxx_atomic_base_impl" = type { i32 }
%"class.media::DmabufVideoFramePool" = type { i32 (...)**, %class.scoped_refptr }
%class.scoped_refptr = type { %"class.base::SequencedTaskRunner"* }
%"class.media::VideoFrameConverter" = type { i32 (...)**, %class.scoped_refptr, %"class.base::RepeatingCallback" }
%"class.base::RepeatingCallback" = type { %"class.base::internal::CallbackBaseCopyable" }
%"class.base::internal::CallbackBaseCopyable" = type { %"class.base::internal::CallbackBase" }
%"class.base::internal::CallbackBase" = type { %class.scoped_refptr.18 }
%class.scoped_refptr.18 = type { %"class.base::internal::BindStateBase"* }
%"class.base::internal::BindStateBase" = type { %"class.base::RefCountedThreadSafe.19", void ()*, void (%"class.base::internal::BindStateBase"*)*, i1 (%"class.base::internal::BindStateBase"*, i32)* }
%"class.base::RefCountedThreadSafe.19" = type { %"class.base::subtle::RefCountedThreadSafeBase" }
%"class.media::MediaLog" = type { i32 (...)**, %class.scoped_refptr.25 }
%class.scoped_refptr.25 = type { %"struct.media::MediaLog::ParentLogRecord"* }
%"struct.media::MediaLog::ParentLogRecord" = type { i32 (...)**, %"class.base::RefCountedThreadSafe.26", i32, %"class.base::Lock", %"class.media::MediaLog"* }
%"class.base::RefCountedThreadSafe.26" = type { %"class.base::subtle::RefCountedThreadSafeBase" }
%"class.base::Lock" = type { %"class.base::internal::LockImpl" }
%"class.base::internal::LockImpl" = type { %union.pthread_mutex_t }
%union.pthread_mutex_t = type { %struct.__pthread_mutex_s }
%struct.__pthread_mutex_s = type { i32, i32, i32, i32, i32, i16, i16, %struct.__pthread_internal_list }
%struct.__pthread_internal_list = type { %struct.__pthread_internal_list*, %struct.__pthread_internal_list* }
%"class.base::RepeatingCallback.30" = type { %"class.base::internal::CallbackBaseCopyable" }
%"class.media::DecoderInterface" = type { i32 (...)**, %class.scoped_refptr, %"class.base::WeakPtr" }
%"class.base::WeakPtr" = type { %"class.base::internal::WeakPtrBase" }
%"class.base::internal::WeakPtrBase" = type { %"class.base::internal::WeakReference", i64 }
%"class.base::internal::WeakReference" = type { %class.scoped_refptr.34 }
%class.scoped_refptr.34 = type { %"class.base::internal::WeakReference::Flag"* }
%"class.base::internal::WeakReference::Flag" = type <{ %"class.base::RefCountedThreadSafe.35", %"class.base::AtomicFlag", [3 x i8] }>
%"class.base::RefCountedThreadSafe.35" = type { %"class.base::subtle::RefCountedThreadSafeBase" }
%"class.base::AtomicFlag" = type { %"struct.std::__1::atomic.36" }
%"struct.std::__1::atomic.36" = type { %"struct.std::__1::__atomic_base.37" }
%"struct.std::__1::__atomic_base.37" = type { %"struct.std::__1::__atomic_base.38" }
%"struct.std::__1::__atomic_base.38" = type { %"struct.std::__1::__cxx_atomic_impl.39" }
%"struct.std::__1::__cxx_atomic_impl.39" = type { %"struct.std::__1::__cxx_atomic_base_impl.40" }
%"struct.std::__1::__cxx_atomic_base_impl.40" = type { i8 }

$_ZN4base8internal7InvokerINS0_9BindStateIPFNSt3__110unique_ptrIN5media16DecoderInterfaceENS3_14default_deleteIS6_EEEE13scoped_refptrINS_19SequencedTaskRunnerEENS_7WeakPtrINS6_6ClientEEEEJEEESG_E3RunEPNS0_13BindStateBaseEOSC_OSF_ = comdat any

$_ZN4base8internal9BindStateIPFNSt3__110unique_ptrIN5media16DecoderInterfaceENS2_14default_deleteIS5_EEEE13scoped_refptrINS_19SequencedTaskRunnerEENS_7WeakPtrINS5_6ClientEEEEJEE7DestroyEPKNS0_13BindStateBaseE = comdat any

; Function Attrs: nounwind ssp uwtable
define hidden void @_ZN5media27ChromeosVideoDecoderFactory19GetSupportedConfigsERKN3gpu23GpuDriverBugWorkaroundsE(%"class.std::__1::vector"* noalias sret, %"class.gpu::GpuDriverBugWorkarounds"* nocapture readonly dereferenceable(148)) local_unnamed_addr #0 align 2 {
  %3 = getelementptr inbounds %"class.std::__1::vector", %"class.std::__1::vector"* %0, i64 0, i32 0, i32 0
  %4 = getelementptr inbounds %"class.std::__1::vector", %"class.std::__1::vector"* %0, i64 0, i32 0, i32 1
  %5 = bitcast %"class.std::__1::vector"* %0 to i8*
  call void @llvm.memset.p0i8.i64(i8* align 8 %5, i8 -86, i64 24, i1 false)
  tail call void @_ZN5media17VaapiVideoDecoder19GetSupportedConfigsEv(%"class.std::__1::vector"* sret %0) #6
  %6 = getelementptr inbounds %"class.gpu::GpuDriverBugWorkarounds", %"class.gpu::GpuDriverBugWorkarounds"* %1, i64 0, i32 17
  %7 = load i8, i8* %6, align 1, !range !2
  %8 = icmp eq i8 %7, 0
  br i1 %8, label %66, label %9

9:                                                ; preds = %2
  %10 = load %"struct.media::SupportedVideoDecoderConfig"*, %"struct.media::SupportedVideoDecoderConfig"** %3, align 8
  %11 = load %"struct.media::SupportedVideoDecoderConfig"*, %"struct.media::SupportedVideoDecoderConfig"** %4, align 8
  %12 = icmp eq %"struct.media::SupportedVideoDecoderConfig"* %10, %11
  br i1 %12, label %25, label %13

13:                                               ; preds = %9, %22
  %14 = phi %"struct.media::SupportedVideoDecoderConfig"* [ %23, %22 ], [ %10, %9 ]
  %15 = getelementptr inbounds %"struct.media::SupportedVideoDecoderConfig", %"struct.media::SupportedVideoDecoderConfig"* %14, i64 0, i32 0
  %16 = load i32, i32* %15, align 4
  %17 = icmp sgt i32 %16, 10
  br i1 %17, label %18, label %22

18:                                               ; preds = %13
  %19 = getelementptr inbounds %"struct.media::SupportedVideoDecoderConfig", %"struct.media::SupportedVideoDecoderConfig"* %14, i64 0, i32 1
  %20 = load i32, i32* %19, align 4
  %21 = icmp slt i32 %20, 12
  br i1 %21, label %25, label %22

22:                                               ; preds = %18, %13
  %23 = getelementptr inbounds %"struct.media::SupportedVideoDecoderConfig", %"struct.media::SupportedVideoDecoderConfig"* %14, i64 1
  %24 = icmp eq %"struct.media::SupportedVideoDecoderConfig"* %23, %11
  br i1 %24, label %66, label %13

25:                                               ; preds = %18, %9
  %26 = phi %"struct.media::SupportedVideoDecoderConfig"* [ %10, %9 ], [ %14, %18 ]
  %27 = icmp eq %"struct.media::SupportedVideoDecoderConfig"* %26, %11
  br i1 %27, label %66, label %28

28:                                               ; preds = %25
  %29 = getelementptr inbounds %"struct.media::SupportedVideoDecoderConfig", %"struct.media::SupportedVideoDecoderConfig"* %26, i64 1
  %30 = icmp eq %"struct.media::SupportedVideoDecoderConfig"* %29, %11
  br i1 %30, label %57, label %31

31:                                               ; preds = %28
  %32 = ptrtoint %"struct.media::SupportedVideoDecoderConfig"* %26 to i64
  br label %33

33:                                               ; preds = %50, %31
  %34 = phi %"struct.media::SupportedVideoDecoderConfig"* [ %52, %50 ], [ %29, %31 ]
  %35 = phi %"struct.media::SupportedVideoDecoderConfig"* [ %34, %50 ], [ %26, %31 ]
  %36 = phi i64 [ %51, %50 ], [ %32, %31 ]
  %37 = getelementptr inbounds %"struct.media::SupportedVideoDecoderConfig", %"struct.media::SupportedVideoDecoderConfig"* %34, i64 0, i32 0
  %38 = load i32, i32* %37, align 4
  %39 = icmp sgt i32 %38, 10
  br i1 %39, label %40, label %44

40:                                               ; preds = %33
  %41 = getelementptr inbounds %"struct.media::SupportedVideoDecoderConfig", %"struct.media::SupportedVideoDecoderConfig"* %35, i64 1, i32 1
  %42 = load i32, i32* %41, align 4
  %43 = icmp slt i32 %42, 12
  br i1 %43, label %50, label %44

44:                                               ; preds = %40, %33
  %45 = inttoptr i64 %36 to %"struct.media::SupportedVideoDecoderConfig"*
  %46 = inttoptr i64 %36 to i8*
  %47 = bitcast %"struct.media::SupportedVideoDecoderConfig"* %34 to i8*
  tail call void @llvm.memcpy.p0i8.p0i8.i64(i8* align 4 %46, i8* align 4 %47, i64 26, i1 false) #6
  %48 = getelementptr inbounds %"struct.media::SupportedVideoDecoderConfig", %"struct.media::SupportedVideoDecoderConfig"* %45, i64 1
  %49 = ptrtoint %"struct.media::SupportedVideoDecoderConfig"* %48 to i64
  br label %50

50:                                               ; preds = %44, %40
  %51 = phi i64 [ %36, %40 ], [ %49, %44 ]
  %52 = getelementptr inbounds %"struct.media::SupportedVideoDecoderConfig", %"struct.media::SupportedVideoDecoderConfig"* %34, i64 1
  %53 = icmp eq %"struct.media::SupportedVideoDecoderConfig"* %52, %11
  br i1 %53, label %54, label %33

54:                                               ; preds = %50
  %55 = inttoptr i64 %51 to %"struct.media::SupportedVideoDecoderConfig"*
  %56 = load %"struct.media::SupportedVideoDecoderConfig"*, %"struct.media::SupportedVideoDecoderConfig"** %4, align 8
  br label %57

57:                                               ; preds = %54, %28
  %58 = phi %"struct.media::SupportedVideoDecoderConfig"* [ %11, %28 ], [ %56, %54 ]
  %59 = phi %"struct.media::SupportedVideoDecoderConfig"* [ %26, %28 ], [ %55, %54 ]
  %60 = icmp eq %"struct.media::SupportedVideoDecoderConfig"* %59, %58
  br i1 %60, label %66, label %61

61:                                               ; preds = %57, %61
  %62 = phi %"struct.media::SupportedVideoDecoderConfig"* [ %63, %61 ], [ %58, %57 ]
  %63 = getelementptr inbounds %"struct.media::SupportedVideoDecoderConfig", %"struct.media::SupportedVideoDecoderConfig"* %62, i64 -1
  tail call void @_ZN5media27SupportedVideoDecoderConfigD1Ev(%"struct.media::SupportedVideoDecoderConfig"* %63) #6
  %64 = icmp eq %"struct.media::SupportedVideoDecoderConfig"* %63, %59
  br i1 %64, label %65, label %61

65:                                               ; preds = %61
  store %"struct.media::SupportedVideoDecoderConfig"* %59, %"struct.media::SupportedVideoDecoderConfig"** %4, align 8
  br label %66

66:                                               ; preds = %22, %65, %57, %25, %2
  %67 = getelementptr inbounds %"class.gpu::GpuDriverBugWorkarounds", %"class.gpu::GpuDriverBugWorkarounds"* %1, i64 0, i32 19
  %68 = load i8, i8* %67, align 1, !range !2
  %69 = icmp eq i8 %68, 0
  br i1 %69, label %127, label %70

70:                                               ; preds = %66
  %71 = load %"struct.media::SupportedVideoDecoderConfig"*, %"struct.media::SupportedVideoDecoderConfig"** %3, align 8
  %72 = load %"struct.media::SupportedVideoDecoderConfig"*, %"struct.media::SupportedVideoDecoderConfig"** %4, align 8
  %73 = icmp eq %"struct.media::SupportedVideoDecoderConfig"* %71, %72
  br i1 %73, label %86, label %74

74:                                               ; preds = %70, %83
  %75 = phi %"struct.media::SupportedVideoDecoderConfig"* [ %84, %83 ], [ %71, %70 ]
  %76 = getelementptr inbounds %"struct.media::SupportedVideoDecoderConfig", %"struct.media::SupportedVideoDecoderConfig"* %75, i64 0, i32 0
  %77 = load i32, i32* %76, align 4
  %78 = icmp sgt i32 %77, 11
  br i1 %78, label %79, label %83

79:                                               ; preds = %74
  %80 = getelementptr inbounds %"struct.media::SupportedVideoDecoderConfig", %"struct.media::SupportedVideoDecoderConfig"* %75, i64 0, i32 1
  %81 = load i32, i32* %80, align 4
  %82 = icmp slt i32 %81, 13
  br i1 %82, label %86, label %83

83:                                               ; preds = %79, %74
  %84 = getelementptr inbounds %"struct.media::SupportedVideoDecoderConfig", %"struct.media::SupportedVideoDecoderConfig"* %75, i64 1
  %85 = icmp eq %"struct.media::SupportedVideoDecoderConfig"* %84, %72
  br i1 %85, label %127, label %74

86:                                               ; preds = %79, %70
  %87 = phi %"struct.media::SupportedVideoDecoderConfig"* [ %71, %70 ], [ %75, %79 ]
  %88 = icmp eq %"struct.media::SupportedVideoDecoderConfig"* %87, %72
  br i1 %88, label %127, label %89

89:                                               ; preds = %86
  %90 = getelementptr inbounds %"struct.media::SupportedVideoDecoderConfig", %"struct.media::SupportedVideoDecoderConfig"* %87, i64 1
  %91 = icmp eq %"struct.media::SupportedVideoDecoderConfig"* %90, %72
  br i1 %91, label %118, label %92

92:                                               ; preds = %89
  %93 = ptrtoint %"struct.media::SupportedVideoDecoderConfig"* %87 to i64
  br label %94

94:                                               ; preds = %111, %92
  %95 = phi %"struct.media::SupportedVideoDecoderConfig"* [ %113, %111 ], [ %90, %92 ]
  %96 = phi %"struct.media::SupportedVideoDecoderConfig"* [ %95, %111 ], [ %87, %92 ]
  %97 = phi i64 [ %112, %111 ], [ %93, %92 ]
  %98 = getelementptr inbounds %"struct.media::SupportedVideoDecoderConfig", %"struct.media::SupportedVideoDecoderConfig"* %95, i64 0, i32 0
  %99 = load i32, i32* %98, align 4
  %100 = icmp sgt i32 %99, 11
  br i1 %100, label %101, label %105

101:                                              ; preds = %94
  %102 = getelementptr inbounds %"struct.media::SupportedVideoDecoderConfig", %"struct.media::SupportedVideoDecoderConfig"* %96, i64 1, i32 1
  %103 = load i32, i32* %102, align 4
  %104 = icmp slt i32 %103, 13
  br i1 %104, label %111, label %105

105:                                              ; preds = %101, %94
  %106 = inttoptr i64 %97 to %"struct.media::SupportedVideoDecoderConfig"*
  %107 = inttoptr i64 %97 to i8*
  %108 = bitcast %"struct.media::SupportedVideoDecoderConfig"* %95 to i8*
  tail call void @llvm.memcpy.p0i8.p0i8.i64(i8* align 4 %107, i8* align 4 %108, i64 26, i1 false) #6
  %109 = getelementptr inbounds %"struct.media::SupportedVideoDecoderConfig", %"struct.media::SupportedVideoDecoderConfig"* %106, i64 1
  %110 = ptrtoint %"struct.media::SupportedVideoDecoderConfig"* %109 to i64
  br label %111

111:                                              ; preds = %105, %101
  %112 = phi i64 [ %97, %101 ], [ %110, %105 ]
  %113 = getelementptr inbounds %"struct.media::SupportedVideoDecoderConfig", %"struct.media::SupportedVideoDecoderConfig"* %95, i64 1
  %114 = icmp eq %"struct.media::SupportedVideoDecoderConfig"* %113, %72
  br i1 %114, label %115, label %94

115:                                              ; preds = %111
  %116 = inttoptr i64 %112 to %"struct.media::SupportedVideoDecoderConfig"*
  %117 = load %"struct.media::SupportedVideoDecoderConfig"*, %"struct.media::SupportedVideoDecoderConfig"** %4, align 8
  br label %118

118:                                              ; preds = %115, %89
  %119 = phi %"struct.media::SupportedVideoDecoderConfig"* [ %72, %89 ], [ %117, %115 ]
  %120 = phi %"struct.media::SupportedVideoDecoderConfig"* [ %87, %89 ], [ %116, %115 ]
  %121 = icmp eq %"struct.media::SupportedVideoDecoderConfig"* %120, %119
  br i1 %121, label %127, label %122

122:                                              ; preds = %118, %122
  %123 = phi %"struct.media::SupportedVideoDecoderConfig"* [ %124, %122 ], [ %119, %118 ]
  %124 = getelementptr inbounds %"struct.media::SupportedVideoDecoderConfig", %"struct.media::SupportedVideoDecoderConfig"* %123, i64 -1
  tail call void @_ZN5media27SupportedVideoDecoderConfigD1Ev(%"struct.media::SupportedVideoDecoderConfig"* %124) #6
  %125 = icmp eq %"struct.media::SupportedVideoDecoderConfig"* %124, %120
  br i1 %125, label %126, label %122

126:                                              ; preds = %122
  store %"struct.media::SupportedVideoDecoderConfig"* %120, %"struct.media::SupportedVideoDecoderConfig"** %4, align 8
  br label %127

127:                                              ; preds = %83, %126, %118, %86, %66
  %128 = getelementptr inbounds %"class.gpu::GpuDriverBugWorkarounds", %"class.gpu::GpuDriverBugWorkarounds"* %1, i64 0, i32 20
  %129 = load i8, i8* %128, align 4, !range !2
  %130 = icmp eq i8 %129, 0
  br i1 %130, label %188, label %131

131:                                              ; preds = %127
  %132 = load %"struct.media::SupportedVideoDecoderConfig"*, %"struct.media::SupportedVideoDecoderConfig"** %3, align 8
  %133 = load %"struct.media::SupportedVideoDecoderConfig"*, %"struct.media::SupportedVideoDecoderConfig"** %4, align 8
  %134 = icmp eq %"struct.media::SupportedVideoDecoderConfig"* %132, %133
  br i1 %134, label %147, label %135

135:                                              ; preds = %131, %144
  %136 = phi %"struct.media::SupportedVideoDecoderConfig"* [ %145, %144 ], [ %132, %131 ]
  %137 = getelementptr inbounds %"struct.media::SupportedVideoDecoderConfig", %"struct.media::SupportedVideoDecoderConfig"* %136, i64 0, i32 0
  %138 = load i32, i32* %137, align 4
  %139 = icmp sgt i32 %138, 13
  br i1 %139, label %140, label %144

140:                                              ; preds = %135
  %141 = getelementptr inbounds %"struct.media::SupportedVideoDecoderConfig", %"struct.media::SupportedVideoDecoderConfig"* %136, i64 0, i32 1
  %142 = load i32, i32* %141, align 4
  %143 = icmp slt i32 %142, 15
  br i1 %143, label %147, label %144

144:                                              ; preds = %140, %135
  %145 = getelementptr inbounds %"struct.media::SupportedVideoDecoderConfig", %"struct.media::SupportedVideoDecoderConfig"* %136, i64 1
  %146 = icmp eq %"struct.media::SupportedVideoDecoderConfig"* %145, %133
  br i1 %146, label %188, label %135

147:                                              ; preds = %140, %131
  %148 = phi %"struct.media::SupportedVideoDecoderConfig"* [ %132, %131 ], [ %136, %140 ]
  %149 = icmp eq %"struct.media::SupportedVideoDecoderConfig"* %148, %133
  br i1 %149, label %188, label %150

150:                                              ; preds = %147
  %151 = getelementptr inbounds %"struct.media::SupportedVideoDecoderConfig", %"struct.media::SupportedVideoDecoderConfig"* %148, i64 1
  %152 = icmp eq %"struct.media::SupportedVideoDecoderConfig"* %151, %133
  br i1 %152, label %179, label %153

153:                                              ; preds = %150
  %154 = ptrtoint %"struct.media::SupportedVideoDecoderConfig"* %148 to i64
  br label %155

155:                                              ; preds = %172, %153
  %156 = phi %"struct.media::SupportedVideoDecoderConfig"* [ %174, %172 ], [ %151, %153 ]
  %157 = phi %"struct.media::SupportedVideoDecoderConfig"* [ %156, %172 ], [ %148, %153 ]
  %158 = phi i64 [ %173, %172 ], [ %154, %153 ]
  %159 = getelementptr inbounds %"struct.media::SupportedVideoDecoderConfig", %"struct.media::SupportedVideoDecoderConfig"* %156, i64 0, i32 0
  %160 = load i32, i32* %159, align 4
  %161 = icmp sgt i32 %160, 13
  br i1 %161, label %162, label %166

162:                                              ; preds = %155
  %163 = getelementptr inbounds %"struct.media::SupportedVideoDecoderConfig", %"struct.media::SupportedVideoDecoderConfig"* %157, i64 1, i32 1
  %164 = load i32, i32* %163, align 4
  %165 = icmp slt i32 %164, 15
  br i1 %165, label %172, label %166

166:                                              ; preds = %162, %155
  %167 = inttoptr i64 %158 to %"struct.media::SupportedVideoDecoderConfig"*
  %168 = inttoptr i64 %158 to i8*
  %169 = bitcast %"struct.media::SupportedVideoDecoderConfig"* %156 to i8*
  tail call void @llvm.memcpy.p0i8.p0i8.i64(i8* align 4 %168, i8* align 4 %169, i64 26, i1 false) #6
  %170 = getelementptr inbounds %"struct.media::SupportedVideoDecoderConfig", %"struct.media::SupportedVideoDecoderConfig"* %167, i64 1
  %171 = ptrtoint %"struct.media::SupportedVideoDecoderConfig"* %170 to i64
  br label %172

172:                                              ; preds = %166, %162
  %173 = phi i64 [ %158, %162 ], [ %171, %166 ]
  %174 = getelementptr inbounds %"struct.media::SupportedVideoDecoderConfig", %"struct.media::SupportedVideoDecoderConfig"* %156, i64 1
  %175 = icmp eq %"struct.media::SupportedVideoDecoderConfig"* %174, %133
  br i1 %175, label %176, label %155

176:                                              ; preds = %172
  %177 = inttoptr i64 %173 to %"struct.media::SupportedVideoDecoderConfig"*
  %178 = load %"struct.media::SupportedVideoDecoderConfig"*, %"struct.media::SupportedVideoDecoderConfig"** %4, align 8
  br label %179

179:                                              ; preds = %176, %150
  %180 = phi %"struct.media::SupportedVideoDecoderConfig"* [ %133, %150 ], [ %178, %176 ]
  %181 = phi %"struct.media::SupportedVideoDecoderConfig"* [ %148, %150 ], [ %177, %176 ]
  %182 = icmp eq %"struct.media::SupportedVideoDecoderConfig"* %181, %180
  br i1 %182, label %188, label %183

183:                                              ; preds = %179, %183
  %184 = phi %"struct.media::SupportedVideoDecoderConfig"* [ %185, %183 ], [ %180, %179 ]
  %185 = getelementptr inbounds %"struct.media::SupportedVideoDecoderConfig", %"struct.media::SupportedVideoDecoderConfig"* %184, i64 -1
  tail call void @_ZN5media27SupportedVideoDecoderConfigD1Ev(%"struct.media::SupportedVideoDecoderConfig"* %185) #6
  %186 = icmp eq %"struct.media::SupportedVideoDecoderConfig"* %185, %181
  br i1 %186, label %187, label %183

187:                                              ; preds = %183
  store %"struct.media::SupportedVideoDecoderConfig"* %181, %"struct.media::SupportedVideoDecoderConfig"** %4, align 8
  br label %188

188:                                              ; preds = %144, %187, %179, %147, %127
  ret void
}

declare void @_ZN5media17VaapiVideoDecoder19GetSupportedConfigsEv(%"class.std::__1::vector"* sret) local_unnamed_addr #1

; Function Attrs: nounwind ssp uwtable
define hidden %"class.media::VideoDecoder"* @_ZN5media27ChromeosVideoDecoderFactory6CreateE13scoped_refptrIN4base19SequencedTaskRunnerEENSt3__110unique_ptrINS_20DmabufVideoFramePoolENS5_14default_deleteIS7_EEEENS6_INS_19VideoFrameConverterENS8_ISB_EEEENS6_INS_8MediaLogENS8_ISE_EEEE(%"class.base::SequencedTaskRunner"*, %"class.media::DmabufVideoFramePool"*, %"class.media::VideoFrameConverter"*, %"class.media::MediaLog"*) local_unnamed_addr #0 align 2 {
  %5 = alloca %"class.base::RepeatingCallback.30", align 8
  %6 = tail call i8* @_Znwm(i64 48) #7, !noalias !3
  %7 = bitcast i8* %6 to %"class.base::internal::BindStateBase"*
  tail call void @_ZN4base8internal13BindStateBaseC2EPFvvEPFvPKS1_E(%"class.base::internal::BindStateBase"* nonnull %7, void ()* bitcast (%"class.media::DecoderInterface"* (%"class.base::internal::BindStateBase"*, %class.scoped_refptr*, %"class.base::WeakPtr"*)* @_ZN4base8internal7InvokerINS0_9BindStateIPFNSt3__110unique_ptrIN5media16DecoderInterfaceENS3_14default_deleteIS6_EEEE13scoped_refptrINS_19SequencedTaskRunnerEENS_7WeakPtrINS6_6ClientEEEEJEEESG_E3RunEPNS0_13BindStateBaseEOSC_OSF_ to void ()*), void (%"class.base::internal::BindStateBase"*)* nonnull @_ZN4base8internal9BindStateIPFNSt3__110unique_ptrIN5media16DecoderInterfaceENS2_14default_deleteIS5_EEEE13scoped_refptrINS_19SequencedTaskRunnerEENS_7WeakPtrINS5_6ClientEEEEJEE7DestroyEPKNS0_13BindStateBaseE) #6, !noalias !3
  %8 = getelementptr inbounds i8, i8* %6, i64 32
  %9 = bitcast i8* %8 to i64*
  store i64 ptrtoint (%"class.media::DecoderInterface"* (%"class.base::SequencedTaskRunner"*, %"class.base::WeakPtr"*)* @_ZN5media17VaapiVideoDecoder6CreateE13scoped_refptrIN4base19SequencedTaskRunnerEENS2_7WeakPtrINS_16DecoderInterface6ClientEEE to i64), i64* %9, align 8, !noalias !3
  %10 = bitcast %"class.base::RepeatingCallback.30"* %5 to i8**
  store i8* %6, i8** %10, align 8, !alias.scope !3
  %11 = call %"class.media::VideoDecoder"* @_ZN5media20VideoDecoderPipeline6CreateE13scoped_refptrIN4base19SequencedTaskRunnerEENSt3__110unique_ptrINS_20DmabufVideoFramePoolENS5_14default_deleteIS7_EEEENS6_INS_19VideoFrameConverterENS8_ISB_EEEENS6_INS_8MediaLogENS8_ISE_EEEENS2_17RepeatingCallbackIFNS6_INS_16DecoderInterfaceENS8_ISI_EEEES4_NS2_7WeakPtrINSI_6ClientEEEEEE(%"class.base::SequencedTaskRunner"* %0, %"class.media::DmabufVideoFramePool"* %1, %"class.media::VideoFrameConverter"* %2, %"class.media::MediaLog"* %3, %"class.base::RepeatingCallback.30"* nonnull %5) #6
  %12 = getelementptr inbounds %"class.base::RepeatingCallback.30", %"class.base::RepeatingCallback.30"* %5, i64 0, i32 0, i32 0
  call void @_ZN4base8internal12CallbackBaseD2Ev(%"class.base::internal::CallbackBase"* nonnull %12) #6
  ret %"class.media::VideoDecoder"* %11
}

declare %"class.media::VideoDecoder"* @_ZN5media20VideoDecoderPipeline6CreateE13scoped_refptrIN4base19SequencedTaskRunnerEENSt3__110unique_ptrINS_20DmabufVideoFramePoolENS5_14default_deleteIS7_EEEENS6_INS_19VideoFrameConverterENS8_ISB_EEEENS6_INS_8MediaLogENS8_ISE_EEEENS2_17RepeatingCallbackIFNS6_INS_16DecoderInterfaceENS8_ISI_EEEES4_NS2_7WeakPtrINSI_6ClientEEEEEE(%"class.base::SequencedTaskRunner"*, %"class.media::DmabufVideoFramePool"*, %"class.media::VideoFrameConverter"*, %"class.media::MediaLog"*, %"class.base::RepeatingCallback.30"*) local_unnamed_addr #1

; Function Attrs: argmemonly nounwind
declare void @llvm.lifetime.start.p0i8(i64 immarg, i8* nocapture) #2

declare %"class.media::DecoderInterface"* @_ZN5media17VaapiVideoDecoder6CreateE13scoped_refptrIN4base19SequencedTaskRunnerEENS2_7WeakPtrINS_16DecoderInterface6ClientEEE(%"class.base::SequencedTaskRunner"*, %"class.base::WeakPtr"*) #1

; Function Attrs: nounwind
declare void @_ZN4base8internal12CallbackBaseD2Ev(%"class.base::internal::CallbackBase"*) unnamed_addr #3

; Function Attrs: argmemonly nounwind
declare void @llvm.lifetime.end.p0i8(i64 immarg, i8* nocapture) #2

; Function Attrs: nounwind
declare void @_ZN5media27SupportedVideoDecoderConfigD1Ev(%"struct.media::SupportedVideoDecoderConfig"*) unnamed_addr #3

; Function Attrs: nobuiltin nounwind
declare void @_ZdlPv(i8*) local_unnamed_addr #4

; Function Attrs: argmemonly nounwind
declare void @llvm.memcpy.p0i8.p0i8.i64(i8* nocapture writeonly, i8* nocapture readonly, i64, i1 immarg) #2

; Function Attrs: nounwind ssp uwtable
define linkonce_odr hidden %"class.media::DecoderInterface"* @_ZN4base8internal7InvokerINS0_9BindStateIPFNSt3__110unique_ptrIN5media16DecoderInterfaceENS3_14default_deleteIS6_EEEE13scoped_refptrINS_19SequencedTaskRunnerEENS_7WeakPtrINS6_6ClientEEEEJEEESG_E3RunEPNS0_13BindStateBaseEOSC_OSF_(%"class.base::internal::BindStateBase"*, %class.scoped_refptr* dereferenceable(8), %"class.base::WeakPtr"* dereferenceable(16)) #0 comdat align 2 {
  %4 = alloca %"class.base::WeakPtr", align 8
  %5 = getelementptr inbounds %"class.base::internal::BindStateBase", %"class.base::internal::BindStateBase"* %0, i64 1
  %6 = bitcast %"class.base::internal::BindStateBase"* %5 to %"class.media::DecoderInterface"* (%"class.base::SequencedTaskRunner"*, %"class.base::WeakPtr"*)**
  %7 = bitcast %"class.base::WeakPtr"* %4 to i8*
  call void @llvm.lifetime.start.p0i8(i64 16, i8* nonnull %7) #6
  %8 = load %"class.media::DecoderInterface"* (%"class.base::SequencedTaskRunner"*, %"class.base::WeakPtr"*)*, %"class.media::DecoderInterface"* (%"class.base::SequencedTaskRunner"*, %"class.base::WeakPtr"*)** %6, align 8
  %9 = getelementptr inbounds %class.scoped_refptr, %class.scoped_refptr* %1, i64 0, i32 0
  %10 = load %"class.base::SequencedTaskRunner"*, %"class.base::SequencedTaskRunner"** %9, align 8
  store %"class.base::SequencedTaskRunner"* null, %"class.base::SequencedTaskRunner"** %9, align 8
  %11 = getelementptr inbounds %"class.base::WeakPtr", %"class.base::WeakPtr"* %4, i64 0, i32 0, i32 0
  %12 = getelementptr inbounds %"class.base::WeakPtr", %"class.base::WeakPtr"* %2, i64 0, i32 0, i32 0
  call void @_ZN4base8internal13WeakReferenceC1EOS1_(%"class.base::internal::WeakReference"* nonnull %11, %"class.base::internal::WeakReference"* dereferenceable(8) %12) #6
  %13 = getelementptr inbounds %"class.base::WeakPtr", %"class.base::WeakPtr"* %4, i64 0, i32 0, i32 1
  %14 = getelementptr inbounds %"class.base::WeakPtr", %"class.base::WeakPtr"* %2, i64 0, i32 0, i32 1
  %15 = load i64, i64* %14, align 8
  store i64 %15, i64* %13, align 8
  %16 = call %"class.media::DecoderInterface"* %8(%"class.base::SequencedTaskRunner"* %10, %"class.base::WeakPtr"* nonnull %4) #6
  %17 = getelementptr inbounds %"class.base::WeakPtr", %"class.base::WeakPtr"* %4, i64 0, i32 0
  call void @_ZN4base8internal11WeakPtrBaseD2Ev(%"class.base::internal::WeakPtrBase"* nonnull %17) #6
  call void @llvm.lifetime.end.p0i8(i64 16, i8* nonnull %7) #6
  ret %"class.media::DecoderInterface"* %16
}

; Function Attrs: nounwind
declare void @_ZN4base8internal11WeakPtrBaseD2Ev(%"class.base::internal::WeakPtrBase"*) unnamed_addr #3

; Function Attrs: nounwind
declare void @_ZN4base8internal13WeakReferenceC1EOS1_(%"class.base::internal::WeakReference"*, %"class.base::internal::WeakReference"* dereferenceable(8)) unnamed_addr #3

; Function Attrs: nobuiltin nofree
declare noalias nonnull i8* @_Znwm(i64) local_unnamed_addr #5

; Function Attrs: nounwind ssp uwtable
define linkonce_odr hidden void @_ZN4base8internal9BindStateIPFNSt3__110unique_ptrIN5media16DecoderInterfaceENS2_14default_deleteIS5_EEEE13scoped_refptrINS_19SequencedTaskRunnerEENS_7WeakPtrINS5_6ClientEEEEJEE7DestroyEPKNS0_13BindStateBaseE(%"class.base::internal::BindStateBase"*) #0 comdat align 2 {
  %2 = icmp eq %"class.base::internal::BindStateBase"* %0, null
  br i1 %2, label %5, label %3

3:                                                ; preds = %1
  %4 = bitcast %"class.base::internal::BindStateBase"* %0 to i8*
  tail call void @_ZdlPv(i8* %4) #7
  br label %5

5:                                                ; preds = %3, %1
  ret void
}

declare void @_ZN4base8internal13BindStateBaseC2EPFvvEPFvPKS1_E(%"class.base::internal::BindStateBase"*, void ()*, void (%"class.base::internal::BindStateBase"*)*) unnamed_addr #1

; Function Attrs: argmemonly nounwind
declare void @llvm.memset.p0i8.i64(i8* nocapture writeonly, i8, i64, i1 immarg) #2

attributes #0 = { nounwind ssp uwtable "correctly-rounded-divide-sqrt-fp-math"="false" "disable-tail-calls"="false" "less-precise-fpmad"="false" "min-legal-vector-width"="0" "no-frame-pointer-elim"="false" "no-frame-pointer-elim-non-leaf" "no-infs-fp-math"="false" "no-jump-tables"="false" "no-nans-fp-math"="false" "no-signed-zeros-fp-math"="false" "no-trapping-math"="false" "null-pointer-is-valid"="true" "stack-protector-buffer-size"="4" "target-cpu"="x86-64" "target-features"="+cx8,+fxsr,+mmx,+sse,+sse2,+sse3,+x87" "unsafe-fp-math"="false" "use-soft-float"="false" }
attributes #1 = { "correctly-rounded-divide-sqrt-fp-math"="false" "disable-tail-calls"="false" "less-precise-fpmad"="false" "no-frame-pointer-elim"="false" "no-frame-pointer-elim-non-leaf" "no-infs-fp-math"="false" "no-nans-fp-math"="false" "no-signed-zeros-fp-math"="false" "no-trapping-math"="false" "null-pointer-is-valid"="true" "stack-protector-buffer-size"="4" "target-cpu"="x86-64" "target-features"="+cx8,+fxsr,+mmx,+sse,+sse2,+sse3,+x87" "unsafe-fp-math"="false" "use-soft-float"="false" }
attributes #2 = { argmemonly nounwind }
attributes #3 = { nounwind "correctly-rounded-divide-sqrt-fp-math"="false" "disable-tail-calls"="false" "less-precise-fpmad"="false" "no-frame-pointer-elim"="false" "no-frame-pointer-elim-non-leaf" "no-infs-fp-math"="false" "no-nans-fp-math"="false" "no-signed-zeros-fp-math"="false" "no-trapping-math"="false" "null-pointer-is-valid"="true" "stack-protector-buffer-size"="4" "target-cpu"="x86-64" "target-features"="+cx8,+fxsr,+mmx,+sse,+sse2,+sse3,+x87" "unsafe-fp-math"="false" "use-soft-float"="false" }
attributes #4 = { nobuiltin nounwind "correctly-rounded-divide-sqrt-fp-math"="false" "disable-tail-calls"="false" "less-precise-fpmad"="false" "no-frame-pointer-elim"="false" "no-frame-pointer-elim-non-leaf" "no-infs-fp-math"="false" "no-nans-fp-math"="false" "no-signed-zeros-fp-math"="false" "no-trapping-math"="false" "null-pointer-is-valid"="true" "stack-protector-buffer-size"="4" "target-cpu"="x86-64" "target-features"="+cx8,+fxsr,+mmx,+sse,+sse2,+sse3,+x87" "unsafe-fp-math"="false" "use-soft-float"="false" }
attributes #5 = { nobuiltin nofree "correctly-rounded-divide-sqrt-fp-math"="false" "disable-tail-calls"="false" "less-precise-fpmad"="false" "no-frame-pointer-elim"="false" "no-frame-pointer-elim-non-leaf" "no-infs-fp-math"="false" "no-nans-fp-math"="false" "no-signed-zeros-fp-math"="false" "no-trapping-math"="false" "null-pointer-is-valid"="true" "stack-protector-buffer-size"="4" "target-cpu"="x86-64" "target-features"="+cx8,+fxsr,+mmx,+sse,+sse2,+sse3,+x87" "unsafe-fp-math"="false" "use-soft-float"="false" }
attributes #6 = { nounwind }
attributes #7 = { builtin nounwind }

!llvm.module.flags = !{!0, !1}

!0 = !{i32 1, !"wchar_size", i32 4}
!1 = !{i32 7, !"PIC Level", i32 2}
!2 = !{i8 0, i8 2}
!3 = !{!4, !6}
!4 = distinct !{!4, !5, !"_ZN4base8internal8BindImplINS_17RepeatingCallbackEPFNSt3__110unique_ptrIN5media16DecoderInterfaceENS3_14default_deleteIS6_EEEE13scoped_refptrINS_19SequencedTaskRunnerEENS_7WeakPtrINS6_6ClientEEEEJEEEDcOT0_DpOT1_: argument 0"}
!5 = distinct !{!5, !"_ZN4base8internal8BindImplINS_17RepeatingCallbackEPFNSt3__110unique_ptrIN5media16DecoderInterfaceENS3_14default_deleteIS6_EEEE13scoped_refptrINS_19SequencedTaskRunnerEENS_7WeakPtrINS6_6ClientEEEEJEEEDcOT0_DpOT1_"}
!6 = distinct !{!6, !7, !"_ZN4base13BindRepeatingIPFNSt3__110unique_ptrIN5media16DecoderInterfaceENS1_14default_deleteIS4_EEEE13scoped_refptrINS_19SequencedTaskRunnerEENS_7WeakPtrINS4_6ClientEEEEJEEENS_17RepeatingCallbackINS_8internal14BindTypeHelperIT_JDpT0_EE14UnboundRunTypeEEEOSJ_DpOSK_: argument 0"}
!7 = distinct !{!7, !"_ZN4base13BindRepeatingIPFNSt3__110unique_ptrIN5media16DecoderInterfaceENS1_14default_deleteIS4_EEEE13scoped_refptrINS_19SequencedTaskRunnerEENS_7WeakPtrINS4_6ClientEEEEJEEENS_17RepeatingCallbackINS_8internal14BindTypeHelperIT_JDpT0_EE14UnboundRunTypeEEEOSJ_DpOSK_"}
