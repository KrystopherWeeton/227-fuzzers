; ModuleID = '../../chrome/common/extensions/permissions/chrome_permission_message_provider.cc'
source_filename = "../../chrome/common/extensions/permissions/chrome_permission_message_provider.cc"
target datalayout = "e-m:e-i64:64-f80:128-n8:16:32:64-S128"
target triple = "x86_64-unknown-linux-gnu"

module asm ".symver exp, exp@GLIBC_2.2.5"
module asm ".symver exp2, exp2@GLIBC_2.2.5"
module asm ".symver exp2f, exp2f@GLIBC_2.2.5"
module asm ".symver expf, expf@GLIBC_2.2.5"
module asm ".symver lgamma, lgamma@GLIBC_2.2.5"
module asm ".symver lgammaf, lgammaf@GLIBC_2.2.5"
module asm ".symver lgammal, lgammal@GLIBC_2.2.5"
module asm ".symver log, log@GLIBC_2.2.5"
module asm ".symver log2, log2@GLIBC_2.2.5"
module asm ".symver log2f, log2f@GLIBC_2.2.5"
module asm ".symver logf, logf@GLIBC_2.2.5"
module asm ".symver pow, pow@GLIBC_2.2.5"
module asm ".symver powf, powf@GLIBC_2.2.5"

%"class.extensions::ChromePermissionMessageProvider" = type { %"class.extensions::PermissionMessageProvider" }
%"class.extensions::PermissionMessageProvider" = type { i32 (...)** }
%"class.std::__1::vector" = type { %"class.std::__1::__vector_base" }
%"class.std::__1::__vector_base" = type { %"class.extensions::PermissionMessage"*, %"class.extensions::PermissionMessage"*, %"class.std::__1::__compressed_pair.16" }
%"class.extensions::PermissionMessage" = type { i32 (...)**, %"class.std::__1::basic_string", %"class.extensions::PermissionIDSet", %"class.std::__1::vector.9" }
%"class.std::__1::basic_string" = type { %"class.std::__1::__compressed_pair.4" }
%"class.std::__1::__compressed_pair.4" = type { %"struct.std::__1::__compressed_pair_elem.5" }
%"struct.std::__1::__compressed_pair_elem.5" = type { %"struct.std::__1::basic_string<char16_t, std::__1::char_traits<char16_t>, std::__1::allocator<char16_t> >::__rep" }
%"struct.std::__1::basic_string<char16_t, std::__1::char_traits<char16_t>, std::__1::allocator<char16_t> >::__rep" = type { %union.anon }
%union.anon = type { %"struct.std::__1::basic_string<char16_t, std::__1::char_traits<char16_t>, std::__1::allocator<char16_t> >::__long" }
%"struct.std::__1::basic_string<char16_t, std::__1::char_traits<char16_t>, std::__1::allocator<char16_t> >::__long" = type { i16*, i64, i64 }
%"class.extensions::PermissionIDSet" = type { i32 (...)**, %"class.std::__1::set" }
%"class.std::__1::set" = type { %"class.std::__1::__tree" }
%"class.std::__1::__tree" = type { %"class.std::__1::__tree_end_node"*, %"class.std::__1::__compressed_pair", %"class.std::__1::__compressed_pair.1" }
%"class.std::__1::__tree_end_node" = type { %"class.std::__1::__tree_node_base"* }
%"class.std::__1::__tree_node_base" = type <{ %"class.std::__1::__tree_end_node", %"class.std::__1::__tree_node_base"*, %"class.std::__1::__tree_end_node"*, i8, [7 x i8] }>
%"class.std::__1::__compressed_pair" = type { %"struct.std::__1::__compressed_pair_elem" }
%"struct.std::__1::__compressed_pair_elem" = type { %"class.std::__1::__tree_end_node" }
%"class.std::__1::__compressed_pair.1" = type { %"struct.std::__1::__compressed_pair_elem.2" }
%"struct.std::__1::__compressed_pair_elem.2" = type { i64 }
%"class.std::__1::vector.9" = type { %"class.std::__1::__vector_base.10" }
%"class.std::__1::__vector_base.10" = type { %"class.std::__1::basic_string"*, %"class.std::__1::basic_string"*, %"class.std::__1::__compressed_pair.11" }
%"class.std::__1::__compressed_pair.11" = type { %"struct.std::__1::__compressed_pair_elem.12" }
%"struct.std::__1::__compressed_pair_elem.12" = type { %"class.std::__1::basic_string"* }
%"class.std::__1::__compressed_pair.16" = type { %"struct.std::__1::__compressed_pair_elem.17" }
%"struct.std::__1::__compressed_pair_elem.17" = type { %"class.extensions::PermissionMessage"* }
%"class.std::__1::vector.21" = type { %"class.std::__1::__vector_base.22" }
%"class.std::__1::__vector_base.22" = type { %"class.extensions::ChromePermissionMessageRule"*, %"class.extensions::ChromePermissionMessageRule"*, %"class.std::__1::__compressed_pair.36" }
%"class.extensions::ChromePermissionMessageRule" = type { i32 (...)**, %"class.std::__1::set.23", %"class.std::__1::set.23", %"class.std::__1::unique_ptr" }
%"class.std::__1::set.23" = type { %"class.std::__1::__tree.24" }
%"class.std::__1::__tree.24" = type { %"class.std::__1::__tree_end_node"*, %"class.std::__1::__compressed_pair.25", %"class.std::__1::__compressed_pair.29" }
%"class.std::__1::__compressed_pair.25" = type { %"struct.std::__1::__compressed_pair_elem" }
%"class.std::__1::__compressed_pair.29" = type { %"struct.std::__1::__compressed_pair_elem.2" }
%"class.std::__1::unique_ptr" = type { %"class.std::__1::__compressed_pair.33" }
%"class.std::__1::__compressed_pair.33" = type { %"struct.std::__1::__compressed_pair_elem.34" }
%"struct.std::__1::__compressed_pair_elem.34" = type { %"class.extensions::ChromePermissionMessageFormatter"* }
%"class.extensions::ChromePermissionMessageFormatter" = type { i32 (...)** }
%"class.std::__1::__compressed_pair.36" = type { %"struct.std::__1::__compressed_pair_elem.37" }
%"struct.std::__1::__compressed_pair_elem.37" = type { %"class.extensions::ChromePermissionMessageRule"* }
%"class.std::__1::__tree_node.155" = type { %"class.std::__1::__tree_node_base.base", i32 }
%"class.std::__1::__tree_node_base.base" = type <{ %"class.std::__1::__tree_end_node", %"class.std::__1::__tree_node_base"*, %"class.std::__1::__tree_end_node"*, i8 }>
%"class.extensions::PermissionSet" = type { %"class.extensions::APIPermissionSet", %"class.extensions::ManifestPermissionSet", %"class.extensions::URLPatternSet", %"class.extensions::URLPatternSet", %"class.extensions::URLPatternSet", i32, i32 }
%"class.extensions::APIPermissionSet" = type { %"class.extensions::BaseSetOperators" }
%"class.extensions::BaseSetOperators" = type { %"class.std::__1::map" }
%"class.std::__1::map" = type { %"class.std::__1::__tree.41" }
%"class.std::__1::__tree.41" = type { %"class.std::__1::__tree_end_node"*, %"class.std::__1::__compressed_pair.42", %"class.std::__1::__compressed_pair.46" }
%"class.std::__1::__compressed_pair.42" = type { %"struct.std::__1::__compressed_pair_elem" }
%"class.std::__1::__compressed_pair.46" = type { %"struct.std::__1::__compressed_pair_elem.2" }
%"class.extensions::ManifestPermissionSet" = type { %"class.extensions::BaseSetOperators.48" }
%"class.extensions::BaseSetOperators.48" = type { %"class.std::__1::map.49" }
%"class.std::__1::map.49" = type { %"class.std::__1::__tree.50" }
%"class.std::__1::__tree.50" = type { %"class.std::__1::__tree_end_node"*, %"class.std::__1::__compressed_pair.51", %"class.std::__1::__compressed_pair.55" }
%"class.std::__1::__compressed_pair.51" = type { %"struct.std::__1::__compressed_pair_elem" }
%"class.std::__1::__compressed_pair.55" = type { %"struct.std::__1::__compressed_pair_elem.2" }
%"class.extensions::URLPatternSet" = type { %"class.std::__1::set.60" }
%"class.std::__1::set.60" = type { %"class.std::__1::__tree.61" }
%"class.std::__1::__tree.61" = type { %"class.std::__1::__tree_end_node"*, %"class.std::__1::__compressed_pair.62", %"class.std::__1::__compressed_pair.66" }
%"class.std::__1::__compressed_pair.62" = type { %"struct.std::__1::__compressed_pair_elem" }
%"class.std::__1::__compressed_pair.66" = type { %"struct.std::__1::__compressed_pair_elem.2" }
%"struct.std::__1::__less.146" = type { i8 }
%"class.std::__1::set.82" = type { %"class.std::__1::__tree.83" }
%"class.std::__1::__tree.83" = type { %"class.std::__1::__tree_end_node"*, %"class.std::__1::__compressed_pair.84", %"class.std::__1::__compressed_pair.88" }
%"class.std::__1::__compressed_pair.84" = type { %"struct.std::__1::__compressed_pair_elem" }
%"class.std::__1::__compressed_pair.88" = type { %"struct.std::__1::__compressed_pair_elem.2" }
%"class.base::BasicStringPiece" = type { i8*, i64 }
%"struct.std::__1::basic_string<char, std::__1::char_traits<char>, std::__1::allocator<char> >::__short" = type { [23 x i8], %struct.anon.95 }
%struct.anon.95 = type { i8 }
%"class.std::__1::__tree_node.142" = type { %"class.std::__1::__tree_node_base.base", %"class.std::__1::basic_string.91" }
%"class.std::__1::basic_string.91" = type { %"class.std::__1::__compressed_pair.92" }
%"class.std::__1::__compressed_pair.92" = type { %"struct.std::__1::__compressed_pair_elem.93" }
%"struct.std::__1::__compressed_pair_elem.93" = type { %"struct.std::__1::basic_string<char, std::__1::char_traits<char>, std::__1::allocator<char> >::__rep" }
%"struct.std::__1::basic_string<char, std::__1::char_traits<char>, std::__1::allocator<char> >::__rep" = type { %union.anon.94 }
%union.anon.94 = type { %"struct.std::__1::basic_string<char, std::__1::char_traits<char>, std::__1::allocator<char> >::__long" }
%"struct.std::__1::basic_string<char, std::__1::char_traits<char>, std::__1::allocator<char> >::__long" = type { i8*, i64, i64 }
%"struct.std::__1::__tuple_less" = type { i8 }
%"class.std::__1::tuple" = type { %"struct.std::__1::__tuple_impl" }
%"struct.std::__1::__tuple_impl" = type { %"class.std::__1::__tuple_leaf", %"class.std::__1::__tuple_leaf.118" }
%"class.std::__1::__tuple_leaf" = type { %"class.std::__1::basic_string"* }
%"class.std::__1::__tuple_leaf.118" = type { %"class.std::__1::vector.9"* }
%"class.std::__1::vector.100" = type { %"class.std::__1::__vector_base.101" }
%"class.std::__1::__vector_base.101" = type { %"class.extensions::(anonymous namespace)::ComparablePermission"*, %"class.extensions::(anonymous namespace)::ComparablePermission"*, %"class.std::__1::__compressed_pair.102" }
%"class.extensions::(anonymous namespace)::ComparablePermission" = type { %"class.extensions::PermissionMessage"* }
%"class.std::__1::__compressed_pair.102" = type { %"struct.std::__1::__compressed_pair_elem.103" }
%"struct.std::__1::__compressed_pair_elem.103" = type { %"class.extensions::(anonymous namespace)::ComparablePermission"* }
%"class.std::__1::__tree_node.132" = type { %"class.std::__1::__tree_node_base.base", %"struct.std::__1::__value_type" }
%"struct.std::__1::__value_type" = type { %"struct.std::__1::pair.131" }
%"struct.std::__1::pair.131" = type { i32, %"class.std::__1::unique_ptr.70" }
%"class.std::__1::unique_ptr.70" = type { %"class.std::__1::__compressed_pair.110" }
%"class.std::__1::__compressed_pair.110" = type { %"struct.std::__1::__compressed_pair_elem.111" }
%"struct.std::__1::__compressed_pair_elem.111" = type { %"class.extensions::APIPermission"* }
%"class.extensions::APIPermission" = type { i32 (...)**, %"class.extensions::APIPermissionInfo"* }
%"class.extensions::APIPermissionInfo" = type { i8*, i32, i32, {}* }
%"class.std::__1::__tree_node.141" = type { %"class.std::__1::__tree_node_base.base", %"struct.std::__1::__value_type.140" }
%"struct.std::__1::__value_type.140" = type { %"struct.std::__1::pair.133" }
%"struct.std::__1::pair.133" = type { %"class.std::__1::basic_string.91", %"class.std::__1::unique_ptr.134" }
%"class.std::__1::unique_ptr.134" = type { %"class.std::__1::__compressed_pair.135" }
%"class.std::__1::__compressed_pair.135" = type { %"struct.std::__1::__compressed_pair_elem.136" }
%"struct.std::__1::__compressed_pair_elem.136" = type { %"class.extensions::ManifestPermission"* }
%"class.extensions::ManifestPermission" = type { i32 (...)** }
%"class.std::__1::__vector_base_common" = type { i8 }
%"class.extensions::ExtensionsClient" = type <{ i32 (...)**, %"class.std::__1::vector.74", i8, [7 x i8] }>
%"class.std::__1::vector.74" = type { %"class.std::__1::__vector_base.75" }
%"class.std::__1::__vector_base.75" = type { %"class.std::__1::unique_ptr.76"*, %"class.std::__1::unique_ptr.76"*, %"class.std::__1::__compressed_pair.77" }
%"class.std::__1::unique_ptr.76" = type opaque
%"class.std::__1::__compressed_pair.77" = type { %"struct.std::__1::__compressed_pair_elem.78" }
%"struct.std::__1::__compressed_pair_elem.78" = type { %"class.std::__1::unique_ptr.76"* }
%"struct.std::__1::basic_string<char16_t, std::__1::char_traits<char16_t>, std::__1::allocator<char16_t> >::__short" = type { [11 x i16], %struct.anon }
%struct.anon = type { %"struct.std::__1::__padding", i8 }
%"struct.std::__1::__padding" = type { [1 x i8] }
%"class.std::__1::__tree_node" = type { %"class.std::__1::__tree_node_base.base", %"class.extensions::PermissionID" }
%"class.extensions::PermissionID" = type { i32 (...)**, %"struct.std::__1::pair.126" }
%"struct.std::__1::pair.126" = type { i32, %"class.std::__1::basic_string" }
%"class.std::__1::__basic_string_common" = type { i8 }
%"class.std::__1::unique_ptr.127" = type { %"class.std::__1::__compressed_pair.128" }
%"class.std::__1::__compressed_pair.128" = type { %"struct.std::__1::__compressed_pair_elem.129", %"struct.std::__1::__compressed_pair_elem.130" }
%"struct.std::__1::__compressed_pair_elem.129" = type { %"class.std::__1::__tree_node"* }
%"struct.std::__1::__compressed_pair_elem.130" = type { %"class.std::__1::__tree_node_destructor" }
%"class.std::__1::__tree_node_destructor" = type <{ %"class.std::__1::allocator"*, i8, [7 x i8] }>
%"class.std::__1::allocator" = type { i8 }

$_ZNSt3__112__tuple_lessILm2EEclINS_5tupleIJRKNS_12basic_stringIDsNS_11char_traitsIDsEENS_9allocatorIDsEEEERKNS_6vectorIS9_NS7_IS9_EEEEEEESH_EEbRKT_RKT0_ = comdat any

$_ZNSt3__16__treeIN10extensions12PermissionIDENS_4lessIS2_EENS_9allocatorIS2_EEE14__assign_multiINS_21__tree_const_iteratorIS2_PNS_11__tree_nodeIS2_PvEElEEEEvT_SF_ = comdat any

$_ZNSt3__112basic_stringIDsNS_11char_traitsIDsEENS_9allocatorIDsEEEaSERKS5_ = comdat any

$_ZNSt3__112basic_stringIDsNS_11char_traitsIDsEENS_9allocatorIDsEEE21__grow_by_and_replaceEmmmmmmPKDs = comdat any

$_ZNSt3__127__tree_balance_after_insertIPNS_16__tree_node_baseIPvEEEEvT_S5_ = comdat any

$_ZNSt3__16__treeIN10extensions12PermissionIDENS_4lessIS2_EENS_9allocatorIS2_EEE7destroyEPNS_11__tree_nodeIS2_PvEE = comdat any

$_ZNSt3__16__treeIN10extensions12PermissionIDENS_4lessIS2_EENS_9allocatorIS2_EEE15__emplace_multiIJRKS2_EEENS_15__tree_iteratorIS2_PNS_11__tree_nodeIS2_PvEElEEDpOT_ = comdat any

$_ZNSt3__16__treeIN10extensions12PermissionIDENS_4lessIS2_EENS_9allocatorIS2_EEE16__construct_nodeIJRKS2_EEENS_10unique_ptrINS_11__tree_nodeIS2_PvEENS_22__tree_node_destructorINS5_ISE_EEEEEEDpOT_ = comdat any

$_ZNSt3__16__treeINS_12basic_stringIcNS_11char_traitsIcEENS_9allocatorIcEEEENS_4lessIS6_EENS4_IS6_EEE7destroyEPNS_11__tree_nodeIS6_PvEE = comdat any

$_ZNSt3__116__set_differenceIRNS_6__lessINS_12basic_stringIcNS_11char_traitsIcEENS_9allocatorIcEEEES7_EENS_21__tree_const_iteratorIS7_PNS_11__tree_nodeIS7_PvEElEESF_NS_15insert_iteratorINS_3setIS7_NS_4lessIS7_EENS5_IS7_EEEEEEEET2_T0_SO_T1_SP_SN_T_ = comdat any

$_ZNSt3__16__treeINS_12basic_stringIcNS_11char_traitsIcEENS_9allocatorIcEEEENS_4lessIS6_EENS4_IS6_EEE30__emplace_hint_unique_key_argsIS6_JRKS6_EEENS_4pairINS_15__tree_iteratorIS6_PNS_11__tree_nodeIS6_PvEElEEbEENS_21__tree_const_iteratorIS6_SJ_lEERKT_DpOT0_ = comdat any

$_ZNSt3__16__treeINS_12basic_stringIcNS_11char_traitsIcEENS_9allocatorIcEEEENS_4lessIS6_EENS4_IS6_EEE12__find_equalIS6_EERPNS_16__tree_node_baseIPvEENS_21__tree_const_iteratorIS6_PNS_11__tree_nodeIS6_SD_EElEERPNS_15__tree_end_nodeISF_EESG_RKT_ = comdat any

$_ZNSt3__16__treeINS_12basic_stringIcNS_11char_traitsIcEENS_9allocatorIcEEEENS_4lessIS6_EENS4_IS6_EEE12__find_equalIS6_EERPNS_16__tree_node_baseIPvEERPNS_15__tree_end_nodeISF_EERKT_ = comdat any

$_ZNSt3__16__treeIN10extensions5mojom15APIPermissionIDENS_4lessIS3_EENS_9allocatorIS3_EEE7destroyEPNS_11__tree_nodeIS3_PvEE = comdat any

$_ZNSt3__16vectorIN10extensions17PermissionMessageENS_9allocatorIS2_EEE21__push_back_slow_pathIS2_EEvOT_ = comdat any

@_ZTVN10extensions31ChromePermissionMessageProviderE = hidden unnamed_addr constant { [8 x i8*] } { [8 x i8*] [i8* null, i8* null, i8* bitcast (void (%"class.extensions::ChromePermissionMessageProvider"*)* @_ZN10extensions31ChromePermissionMessageProviderD2Ev to i8*), i8* bitcast (void (%"class.extensions::ChromePermissionMessageProvider"*)* @_ZN10extensions31ChromePermissionMessageProviderD0Ev to i8*), i8* bitcast (void (%"class.std::__1::vector"*, %"class.extensions::ChromePermissionMessageProvider"*, %"class.extensions::PermissionIDSet"*)* @_ZNK10extensions31ChromePermissionMessageProvider21GetPermissionMessagesERKNS_15PermissionIDSetE to i8*), i8* bitcast (i1 (%"class.extensions::ChromePermissionMessageProvider"*, %"class.extensions::PermissionSet"*, %"class.extensions::PermissionSet"*, i32)* @_ZNK10extensions31ChromePermissionMessageProvider19IsPrivilegeIncreaseERKNS_13PermissionSetES3_NS_8Manifest4TypeE to i8*), i8* bitcast (void (%"class.extensions::PermissionIDSet"*, %"class.extensions::ChromePermissionMessageProvider"*, %"class.extensions::PermissionSet"*, i32)* @_ZNK10extensions31ChromePermissionMessageProvider19GetAllPermissionIDsERKNS_13PermissionSetENS_8Manifest4TypeE to i8*), i8* bitcast (void (%"class.extensions::PermissionIDSet"*, %"class.extensions::ChromePermissionMessageProvider"*, %"class.extensions::PermissionSet"*, i32)* @_ZNK10extensions31ChromePermissionMessageProvider28GetManagementUIPermissionIDsERKNS_13PermissionSetENS_8Manifest4TypeE to i8*)] }, align 8
@_ZTVN10extensions12PermissionIDE = external unnamed_addr constant { [4 x i8*] }, align 8

@_ZN10extensions31ChromePermissionMessageProviderC1Ev = hidden unnamed_addr alias void (%"class.extensions::ChromePermissionMessageProvider"*), void (%"class.extensions::ChromePermissionMessageProvider"*)* @_ZN10extensions31ChromePermissionMessageProviderC2Ev
@_ZN10extensions31ChromePermissionMessageProviderD1Ev = hidden unnamed_addr alias void (%"class.extensions::ChromePermissionMessageProvider"*), void (%"class.extensions::ChromePermissionMessageProvider"*)* @_ZN10extensions31ChromePermissionMessageProviderD2Ev

; Function Attrs: nofree norecurse nounwind ssp uwtable writeonly
define hidden void @_ZN10extensions31ChromePermissionMessageProviderC2Ev(%"class.extensions::ChromePermissionMessageProvider"* nocapture) unnamed_addr #0 align 2 {
  %2 = getelementptr inbounds %"class.extensions::ChromePermissionMessageProvider", %"class.extensions::ChromePermissionMessageProvider"* %0, i64 0, i32 0, i32 0
  store i32 (...)** bitcast (i8** getelementptr inbounds ({ [8 x i8*] }, { [8 x i8*] }* @_ZTVN10extensions31ChromePermissionMessageProviderE, i64 0, inrange i32 0, i64 2) to i32 (...)**), i32 (...)*** %2, align 8
  ret void
}

; Function Attrs: norecurse nounwind readnone ssp uwtable
define hidden void @_ZN10extensions31ChromePermissionMessageProviderD2Ev(%"class.extensions::ChromePermissionMessageProvider"* nocapture) unnamed_addr #1 align 2 {
  ret void
}

; Function Attrs: nounwind ssp uwtable
define hidden void @_ZN10extensions31ChromePermissionMessageProviderD0Ev(%"class.extensions::ChromePermissionMessageProvider"*) unnamed_addr #2 align 2 {
  %2 = bitcast %"class.extensions::ChromePermissionMessageProvider"* %0 to i8*
  tail call void @_ZdlPv(i8* %2) #13
  ret void
}

; Function Attrs: nobuiltin nounwind
declare void @_ZdlPv(i8*) local_unnamed_addr #3

; Function Attrs: nounwind ssp uwtable
define hidden void @_ZNK10extensions31ChromePermissionMessageProvider21GetPermissionMessagesERKNS_15PermissionIDSetE(%"class.std::__1::vector"* noalias sret, %"class.extensions::ChromePermissionMessageProvider"* nocapture readnone, %"class.extensions::PermissionIDSet"* dereferenceable(32)) unnamed_addr #2 align 2 {
  %4 = alloca %"class.std::__1::vector.21", align 8
  %5 = bitcast %"class.std::__1::vector.21"* %4 to i8*
  call void @llvm.lifetime.start.p0i8(i64 24, i8* nonnull %5) #14
  %6 = getelementptr inbounds %"class.std::__1::vector.21", %"class.std::__1::vector.21"* %4, i64 0, i32 0, i32 0
  %7 = getelementptr inbounds %"class.std::__1::vector.21", %"class.std::__1::vector.21"* %4, i64 0, i32 0, i32 1
  %8 = bitcast %"class.std::__1::vector.21"* %4 to i8*
  call void @llvm.memset.p0i8.i64(i8* nonnull align 8 %8, i8 -86, i64 24, i1 false)
  call void @_ZN10extensions27ChromePermissionMessageRule11GetAllRulesEv(%"class.std::__1::vector.21"* nonnull sret %4) #14
  call void @_ZNK10extensions31ChromePermissionMessageProvider27GetPermissionMessagesHelperERKNS_15PermissionIDSetERKNSt3__16vectorINS_27ChromePermissionMessageRuleENS4_9allocatorIS6_EEEE(%"class.std::__1::vector"* sret %0, %"class.extensions::ChromePermissionMessageProvider"* undef, %"class.extensions::PermissionIDSet"* dereferenceable(32) %2, %"class.std::__1::vector.21"* nonnull dereferenceable(24) %4)
  %9 = load %"class.extensions::ChromePermissionMessageRule"*, %"class.extensions::ChromePermissionMessageRule"** %6, align 8
  %10 = icmp eq %"class.extensions::ChromePermissionMessageRule"* %9, null
  br i1 %10, label %27, label %11

11:                                               ; preds = %3
  %12 = bitcast %"class.extensions::ChromePermissionMessageRule"* %9 to i8*
  %13 = load %"class.extensions::ChromePermissionMessageRule"*, %"class.extensions::ChromePermissionMessageRule"** %7, align 8
  %14 = icmp eq %"class.extensions::ChromePermissionMessageRule"* %13, %9
  br i1 %14, label %25, label %15

15:                                               ; preds = %11, %15
  %16 = phi %"class.extensions::ChromePermissionMessageRule"* [ %17, %15 ], [ %13, %11 ]
  %17 = getelementptr inbounds %"class.extensions::ChromePermissionMessageRule", %"class.extensions::ChromePermissionMessageRule"* %16, i64 -1
  %18 = bitcast %"class.extensions::ChromePermissionMessageRule"* %17 to void (%"class.extensions::ChromePermissionMessageRule"*)***
  %19 = load void (%"class.extensions::ChromePermissionMessageRule"*)**, void (%"class.extensions::ChromePermissionMessageRule"*)*** %18, align 8
  %20 = load void (%"class.extensions::ChromePermissionMessageRule"*)*, void (%"class.extensions::ChromePermissionMessageRule"*)** %19, align 8
  call void %20(%"class.extensions::ChromePermissionMessageRule"* %17) #14
  %21 = icmp eq %"class.extensions::ChromePermissionMessageRule"* %17, %9
  br i1 %21, label %22, label %15

22:                                               ; preds = %15
  %23 = bitcast %"class.std::__1::vector.21"* %4 to i8**
  %24 = load i8*, i8** %23, align 8
  br label %25

25:                                               ; preds = %22, %11
  %26 = phi i8* [ %24, %22 ], [ %12, %11 ]
  store %"class.extensions::ChromePermissionMessageRule"* %9, %"class.extensions::ChromePermissionMessageRule"** %7, align 8
  call void @_ZdlPv(i8* %26) #13
  br label %27

27:                                               ; preds = %3, %25
  call void @llvm.lifetime.end.p0i8(i64 24, i8* nonnull %5) #14
  ret void
}

; Function Attrs: argmemonly nounwind
declare void @llvm.lifetime.start.p0i8(i64 immarg, i8* nocapture) #4

declare void @_ZN10extensions27ChromePermissionMessageRule11GetAllRulesEv(%"class.std::__1::vector.21"* sret) local_unnamed_addr #5

; Function Attrs: nounwind ssp uwtable
define hidden void @_ZNK10extensions31ChromePermissionMessageProvider27GetPermissionMessagesHelperERKNS_15PermissionIDSetERKNSt3__16vectorINS_27ChromePermissionMessageRuleENS4_9allocatorIS6_EEEE(%"class.std::__1::vector"* noalias sret, %"class.extensions::ChromePermissionMessageProvider"* nocapture readnone, %"class.extensions::PermissionIDSet"* dereferenceable(32), %"class.std::__1::vector.21"* nocapture readonly dereferenceable(24)) local_unnamed_addr #2 align 2 {
  %5 = alloca %"class.extensions::PermissionIDSet", align 8
  %6 = alloca %"class.std::__1::set.23", align 8
  %7 = alloca %"class.extensions::PermissionIDSet", align 8
  %8 = alloca %"class.std::__1::set.23", align 8
  %9 = alloca %"class.extensions::PermissionMessage", align 8
  %10 = alloca %"class.extensions::PermissionIDSet", align 8
  %11 = bitcast %"class.extensions::PermissionIDSet"* %5 to i8*
  call void @llvm.lifetime.start.p0i8(i64 32, i8* nonnull %11) #14
  %12 = bitcast %"class.extensions::PermissionIDSet"* %5 to i8*
  call void @llvm.memset.p0i8.i64(i8* nonnull align 8 %12, i8 -86, i64 32, i1 false)
  call void @_ZN10extensions15PermissionIDSetC1ERKS0_(%"class.extensions::PermissionIDSet"* nonnull %5, %"class.extensions::PermissionIDSet"* dereferenceable(32) %2) #14
  %13 = getelementptr inbounds %"class.std::__1::vector", %"class.std::__1::vector"* %0, i64 0, i32 0, i32 1
  %14 = getelementptr inbounds %"class.std::__1::vector", %"class.std::__1::vector"* %0, i64 0, i32 0, i32 2, i32 0, i32 0
  %15 = bitcast %"class.std::__1::vector"* %0 to i8*
  call void @llvm.memset.p0i8.i64(i8* align 8 %15, i8 0, i64 24, i1 false) #14
  %16 = getelementptr inbounds %"class.std::__1::vector.21", %"class.std::__1::vector.21"* %3, i64 0, i32 0, i32 0
  %17 = load %"class.extensions::ChromePermissionMessageRule"*, %"class.extensions::ChromePermissionMessageRule"** %16, align 8
  %18 = getelementptr inbounds %"class.std::__1::vector.21", %"class.std::__1::vector.21"* %3, i64 0, i32 0, i32 1
  %19 = load %"class.extensions::ChromePermissionMessageRule"*, %"class.extensions::ChromePermissionMessageRule"** %18, align 8
  %20 = icmp eq %"class.extensions::ChromePermissionMessageRule"* %17, %19
  br i1 %20, label %38, label %21

21:                                               ; preds = %4
  %22 = bitcast %"class.std::__1::set.23"* %6 to i8*
  %23 = getelementptr inbounds %"class.std::__1::set.23", %"class.std::__1::set.23"* %6, i64 0, i32 0
  %24 = getelementptr inbounds %"class.std::__1::set.23", %"class.std::__1::set.23"* %6, i64 0, i32 0, i32 1, i32 0, i32 0
  %25 = bitcast %"class.std::__1::__tree_end_node"* %24 to %"class.std::__1::__tree_node.155"**
  %26 = bitcast %"class.extensions::PermissionIDSet"* %7 to i8*
  %27 = bitcast %"class.std::__1::set.23"* %8 to i8*
  %28 = getelementptr inbounds %"class.std::__1::set.23", %"class.std::__1::set.23"* %8, i64 0, i32 0
  %29 = getelementptr inbounds %"class.std::__1::set.23", %"class.std::__1::set.23"* %8, i64 0, i32 0, i32 1, i32 0, i32 0
  %30 = bitcast %"class.std::__1::__tree_end_node"* %29 to %"class.std::__1::__tree_node.155"**
  %31 = bitcast %"class.extensions::PermissionMessage"* %9 to i8*
  %32 = bitcast %"class.extensions::PermissionMessage"** %13 to i64*
  %33 = bitcast %"class.extensions::PermissionIDSet"* %10 to i8*
  %34 = getelementptr inbounds %"class.extensions::PermissionIDSet", %"class.extensions::PermissionIDSet"* %5, i64 0, i32 1, i32 0
  %35 = getelementptr inbounds %"class.extensions::PermissionIDSet", %"class.extensions::PermissionIDSet"* %10, i64 0, i32 1, i32 0, i32 0
  %36 = getelementptr inbounds %"class.extensions::PermissionIDSet", %"class.extensions::PermissionIDSet"* %10, i64 0, i32 1, i32 0, i32 1, i32 0, i32 0
  %37 = bitcast %"class.extensions::PermissionIDSet"* %7 to i8*
  br label %39

38:                                               ; preds = %54, %4
  call void @_ZN10extensions15PermissionIDSetD1Ev(%"class.extensions::PermissionIDSet"* nonnull %5) #14
  call void @llvm.lifetime.end.p0i8(i64 32, i8* nonnull %11) #14
  ret void

39:                                               ; preds = %21, %54
  %40 = phi %"class.extensions::ChromePermissionMessageRule"* [ %17, %21 ], [ %55, %54 ]
  call void @llvm.lifetime.start.p0i8(i64 24, i8* nonnull %22) #14
  call void @_ZNK10extensions27ChromePermissionMessageRule20required_permissionsEv(%"class.std::__1::set.23"* nonnull sret %6, %"class.extensions::ChromePermissionMessageRule"* %40) #14
  %41 = call zeroext i1 @_ZNK10extensions15PermissionIDSet14ContainsAllIDsERKNSt3__13setINS_5mojom15APIPermissionIDENS1_4lessIS4_EENS1_9allocatorIS4_EEEE(%"class.extensions::PermissionIDSet"* nonnull %5, %"class.std::__1::set.23"* nonnull dereferenceable(24) %6) #14
  %42 = load %"class.std::__1::__tree_node.155"*, %"class.std::__1::__tree_node.155"** %25, align 8
  call void @_ZNSt3__16__treeIN10extensions5mojom15APIPermissionIDENS_4lessIS3_EENS_9allocatorIS3_EEE7destroyEPNS_11__tree_nodeIS3_PvEE(%"class.std::__1::__tree.24"* nonnull %23, %"class.std::__1::__tree_node.155"* %42) #14
  call void @llvm.lifetime.end.p0i8(i64 24, i8* nonnull %22) #14
  br i1 %41, label %43, label %54

43:                                               ; preds = %39
  call void @llvm.lifetime.start.p0i8(i64 32, i8* nonnull %26) #14
  call void @llvm.memset.p0i8.i64(i8* nonnull align 8 %37, i8 -86, i64 32, i1 false)
  call void @llvm.lifetime.start.p0i8(i64 24, i8* nonnull %27) #14
  call void @_ZNK10extensions27ChromePermissionMessageRule15all_permissionsEv(%"class.std::__1::set.23"* nonnull sret %8, %"class.extensions::ChromePermissionMessageRule"* %40) #14
  call void @_ZNK10extensions15PermissionIDSet24GetAllPermissionsWithIDsERKNSt3__13setINS_5mojom15APIPermissionIDENS1_4lessIS4_EENS1_9allocatorIS4_EEEE(%"class.extensions::PermissionIDSet"* nonnull sret %7, %"class.extensions::PermissionIDSet"* nonnull %5, %"class.std::__1::set.23"* nonnull dereferenceable(24) %8) #14
  %44 = load %"class.std::__1::__tree_node.155"*, %"class.std::__1::__tree_node.155"** %30, align 8
  call void @_ZNSt3__16__treeIN10extensions5mojom15APIPermissionIDENS_4lessIS3_EENS_9allocatorIS3_EEE7destroyEPNS_11__tree_nodeIS3_PvEE(%"class.std::__1::__tree.24"* nonnull %28, %"class.std::__1::__tree_node.155"* %44) #14
  call void @llvm.lifetime.end.p0i8(i64 24, i8* nonnull %27) #14
  call void @llvm.lifetime.start.p0i8(i64 88, i8* nonnull %31) #14
  call void @_ZNK10extensions27ChromePermissionMessageRule20GetPermissionMessageERKNS_15PermissionIDSetE(%"class.extensions::PermissionMessage"* nonnull sret %9, %"class.extensions::ChromePermissionMessageRule"* %40, %"class.extensions::PermissionIDSet"* nonnull dereferenceable(32) %7) #14
  %45 = load %"class.extensions::PermissionMessage"*, %"class.extensions::PermissionMessage"** %13, align 8
  %46 = load %"class.extensions::PermissionMessage"*, %"class.extensions::PermissionMessage"** %14, align 8
  %47 = icmp ult %"class.extensions::PermissionMessage"* %45, %46
  br i1 %47, label %48, label %51

48:                                               ; preds = %43
  call void @_ZN10extensions17PermissionMessageC1ERKS0_(%"class.extensions::PermissionMessage"* %45, %"class.extensions::PermissionMessage"* nonnull dereferenceable(88) %9) #14
  %49 = getelementptr inbounds %"class.extensions::PermissionMessage", %"class.extensions::PermissionMessage"* %45, i64 1
  %50 = ptrtoint %"class.extensions::PermissionMessage"* %49 to i64
  store i64 %50, i64* %32, align 8
  br label %52

51:                                               ; preds = %43
  call void @_ZNSt3__16vectorIN10extensions17PermissionMessageENS_9allocatorIS2_EEE21__push_back_slow_pathIS2_EEvOT_(%"class.std::__1::vector"* %0, %"class.extensions::PermissionMessage"* nonnull dereferenceable(88) %9) #14
  br label %52

52:                                               ; preds = %48, %51
  call void @_ZN10extensions17PermissionMessageD1Ev(%"class.extensions::PermissionMessage"* nonnull %9) #14
  call void @llvm.lifetime.end.p0i8(i64 88, i8* nonnull %31) #14
  call void @llvm.lifetime.start.p0i8(i64 32, i8* nonnull %33) #14
  call void @_ZN10extensions15PermissionIDSet10DifferenceERKS0_S2_(%"class.extensions::PermissionIDSet"* nonnull sret %10, %"class.extensions::PermissionIDSet"* nonnull dereferenceable(32) %5, %"class.extensions::PermissionIDSet"* nonnull dereferenceable(32) %7) #14
  %53 = load %"class.std::__1::__tree_end_node"*, %"class.std::__1::__tree_end_node"** %35, align 8
  call void @_ZNSt3__16__treeIN10extensions12PermissionIDENS_4lessIS2_EENS_9allocatorIS2_EEE14__assign_multiINS_21__tree_const_iteratorIS2_PNS_11__tree_nodeIS2_PvEElEEEEvT_SF_(%"class.std::__1::__tree"* %34, %"class.std::__1::__tree_end_node"* %53, %"class.std::__1::__tree_end_node"* %36) #14
  call void @_ZN10extensions15PermissionIDSetD1Ev(%"class.extensions::PermissionIDSet"* nonnull %10) #14
  call void @llvm.lifetime.end.p0i8(i64 32, i8* nonnull %33) #14
  call void @_ZN10extensions15PermissionIDSetD1Ev(%"class.extensions::PermissionIDSet"* nonnull %7) #14
  call void @llvm.lifetime.end.p0i8(i64 32, i8* nonnull %26) #14
  br label %54

54:                                               ; preds = %52, %39
  %55 = getelementptr inbounds %"class.extensions::ChromePermissionMessageRule", %"class.extensions::ChromePermissionMessageRule"* %40, i64 1
  %56 = icmp eq %"class.extensions::ChromePermissionMessageRule"* %55, %19
  br i1 %56, label %38, label %39
}

; Function Attrs: argmemonly nounwind
declare void @llvm.lifetime.end.p0i8(i64 immarg, i8* nocapture) #4

; Function Attrs: nounwind ssp uwtable
define hidden zeroext i1 @_ZNK10extensions31ChromePermissionMessageProvider19IsPrivilegeIncreaseERKNS_13PermissionSetES3_NS_8Manifest4TypeE(%"class.extensions::ChromePermissionMessageProvider"*, %"class.extensions::PermissionSet"* dereferenceable(128), %"class.extensions::PermissionSet"* dereferenceable(128), i32) unnamed_addr #2 align 2 {
  %5 = tail call zeroext i1 @_ZNK10extensions31ChromePermissionMessageProvider23IsHostPrivilegeIncreaseERKNS_13PermissionSetES3_NS_8Manifest4TypeE(%"class.extensions::ChromePermissionMessageProvider"* undef, %"class.extensions::PermissionSet"* dereferenceable(128) %1, %"class.extensions::PermissionSet"* dereferenceable(128) %2, i32 %3)
  br i1 %5, label %8, label %6

6:                                                ; preds = %4
  %7 = tail call zeroext i1 @_ZNK10extensions31ChromePermissionMessageProvider32IsAPIOrManifestPrivilegeIncreaseERKNS_13PermissionSetES3_(%"class.extensions::ChromePermissionMessageProvider"* %0, %"class.extensions::PermissionSet"* dereferenceable(128) %1, %"class.extensions::PermissionSet"* dereferenceable(128) %2)
  br label %8

8:                                                ; preds = %6, %4
  %9 = phi i1 [ true, %4 ], [ %7, %6 ]
  ret i1 %9
}

; Function Attrs: nounwind ssp uwtable
define hidden zeroext i1 @_ZNK10extensions31ChromePermissionMessageProvider23IsHostPrivilegeIncreaseERKNS_13PermissionSetES3_NS_8Manifest4TypeE(%"class.extensions::ChromePermissionMessageProvider"* nocapture readnone, %"class.extensions::PermissionSet"* dereferenceable(128), %"class.extensions::PermissionSet"* dereferenceable(128), i32) local_unnamed_addr #2 align 2 {
  %5 = alloca %"struct.std::__1::__less.146", align 1
  %6 = alloca %"class.std::__1::set.82", align 8
  %7 = alloca %"class.std::__1::set.82", align 8
  %8 = alloca %"class.std::__1::set.82", align 8
  %9 = alloca %"class.base::BasicStringPiece", align 8
  %10 = icmp eq i32 %3, 6
  br i1 %10, label %195, label %11

11:                                               ; preds = %4
  %12 = tail call zeroext i1 @_ZNK10extensions13PermissionSet28HasEffectiveAccessToAllHostsEv(%"class.extensions::PermissionSet"* %1) #14
  br i1 %12, label %195, label %13

13:                                               ; preds = %11
  %14 = tail call zeroext i1 @_ZNK10extensions13PermissionSet28HasEffectiveAccessToAllHostsEv(%"class.extensions::PermissionSet"* %2) #14
  br i1 %14, label %195, label %15

15:                                               ; preds = %13
  %16 = getelementptr inbounds %"class.extensions::PermissionSet", %"class.extensions::PermissionSet"* %1, i64 0, i32 4
  %17 = getelementptr inbounds %"class.extensions::PermissionSet", %"class.extensions::PermissionSet"* %2, i64 0, i32 4
  %18 = bitcast %"class.std::__1::set.82"* %6 to i8*
  call void @llvm.lifetime.start.p0i8(i64 24, i8* nonnull %18) #14
  %19 = getelementptr inbounds %"class.std::__1::set.82", %"class.std::__1::set.82"* %6, i64 0, i32 0, i32 0
  %20 = bitcast %"class.std::__1::set.82"* %6 to i8*
  call void @llvm.memset.p0i8.i64(i8* nonnull align 8 %20, i8 -86, i64 24, i1 false)
  call void @_ZN23permission_message_util16GetDistinctHostsERKN10extensions13URLPatternSetEbb(%"class.std::__1::set.82"* nonnull sret %6, %"class.extensions::URLPatternSet"* dereferenceable(24) %17, i1 zeroext false, i1 zeroext false) #14
  %21 = bitcast %"class.std::__1::set.82"* %7 to i8*
  call void @llvm.lifetime.start.p0i8(i64 24, i8* nonnull %21) #14
  %22 = getelementptr inbounds %"class.std::__1::set.82", %"class.std::__1::set.82"* %7, i64 0, i32 0, i32 0
  %23 = bitcast %"class.std::__1::set.82"* %7 to i8*
  call void @llvm.memset.p0i8.i64(i8* nonnull align 8 %23, i8 -86, i64 24, i1 false)
  call void @_ZN23permission_message_util16GetDistinctHostsERKN10extensions13URLPatternSetEbb(%"class.std::__1::set.82"* nonnull sret %7, %"class.extensions::URLPatternSet"* dereferenceable(24) %16, i1 zeroext false, i1 zeroext false) #14
  %24 = bitcast %"class.std::__1::set.82"* %8 to i8*
  call void @llvm.lifetime.start.p0i8(i64 24, i8* nonnull %24) #14
  %25 = getelementptr inbounds %"class.std::__1::set.82", %"class.std::__1::set.82"* %8, i64 0, i32 0, i32 0
  %26 = getelementptr inbounds %"class.std::__1::set.82", %"class.std::__1::set.82"* %8, i64 0, i32 0, i32 1, i32 0, i32 0, i32 0
  %27 = getelementptr inbounds %"class.std::__1::set.82", %"class.std::__1::set.82"* %8, i64 0, i32 0, i32 1, i32 0, i32 0
  %28 = bitcast %"class.std::__1::__tree_node_base"** %26 to i8*
  call void @llvm.memset.p0i8.i64(i8* align 8 %28, i8 0, i64 16, i1 false) #14, !alias.scope !2
  store %"class.std::__1::__tree_end_node"* %27, %"class.std::__1::__tree_end_node"** %25, align 8, !alias.scope !2
  %29 = load %"class.std::__1::__tree_end_node"*, %"class.std::__1::__tree_end_node"** %19, align 8, !noalias !2
  %30 = getelementptr inbounds %"class.std::__1::set.82", %"class.std::__1::set.82"* %6, i64 0, i32 0, i32 1, i32 0, i32 0
  %31 = load %"class.std::__1::__tree_end_node"*, %"class.std::__1::__tree_end_node"** %22, align 8, !noalias !2
  %32 = getelementptr inbounds %"class.std::__1::set.82", %"class.std::__1::set.82"* %7, i64 0, i32 0, i32 1, i32 0, i32 0
  %33 = getelementptr inbounds %"struct.std::__1::__less.146", %"struct.std::__1::__less.146"* %5, i64 0, i32 0
  call void @llvm.lifetime.start.p0i8(i64 1, i8* nonnull %33) #14, !noalias !2
  %34 = call { %"class.std::__1::set.82"*, %"class.std::__1::__tree_end_node"* } @_ZNSt3__116__set_differenceIRNS_6__lessINS_12basic_stringIcNS_11char_traitsIcEENS_9allocatorIcEEEES7_EENS_21__tree_const_iteratorIS7_PNS_11__tree_nodeIS7_PvEElEESF_NS_15insert_iteratorINS_3setIS7_NS_4lessIS7_EENS5_IS7_EEEEEEEET2_T0_SO_T1_SP_SN_T_(%"class.std::__1::__tree_end_node"* %29, %"class.std::__1::__tree_end_node"* %30, %"class.std::__1::__tree_end_node"* %31, %"class.std::__1::__tree_end_node"* %32, %"class.std::__1::set.82"* nonnull %8, %"class.std::__1::__tree_end_node"* %27, %"struct.std::__1::__less.146"* nonnull dereferenceable(1) %5) #14
  call void @llvm.lifetime.end.p0i8(i64 1, i8* nonnull %33) #14, !noalias !2
  %35 = load %"class.std::__1::__tree_end_node"*, %"class.std::__1::__tree_end_node"** %25, align 8
  %36 = icmp eq %"class.std::__1::__tree_end_node"* %35, %27
  br i1 %36, label %184, label %37

37:                                               ; preds = %15
  %38 = bitcast %"class.base::BasicStringPiece"* %9 to i8*
  %39 = getelementptr inbounds %"class.base::BasicStringPiece", %"class.base::BasicStringPiece"* %9, i64 0, i32 0
  %40 = getelementptr inbounds %"class.base::BasicStringPiece", %"class.base::BasicStringPiece"* %9, i64 0, i32 1
  %41 = bitcast %"class.base::BasicStringPiece"* %9 to i8*
  br label %42

42:                                               ; preds = %37, %181
  %43 = phi %"class.std::__1::__tree_end_node"* [ %35, %37 ], [ %182, %181 ]
  %44 = getelementptr inbounds %"class.std::__1::__tree_end_node", %"class.std::__1::__tree_end_node"* %43, i64 4
  %45 = bitcast %"class.std::__1::__tree_end_node"* %44 to %"struct.std::__1::basic_string<char, std::__1::char_traits<char>, std::__1::allocator<char> >::__short"*
  %46 = getelementptr inbounds %"struct.std::__1::basic_string<char, std::__1::char_traits<char>, std::__1::allocator<char> >::__short", %"struct.std::__1::basic_string<char, std::__1::char_traits<char>, std::__1::allocator<char> >::__short"* %45, i64 0, i32 1, i32 0
  %47 = load i8, i8* %46, align 1
  %48 = icmp slt i8 %47, 0
  %49 = bitcast %"class.std::__1::__tree_end_node"* %44 to i8**
  %50 = load i8*, i8** %49, align 8
  %51 = bitcast %"class.std::__1::__tree_end_node"* %44 to i8*
  %52 = select i1 %48, i8* %50, i8* %51
  %53 = getelementptr inbounds %"class.std::__1::__tree_end_node", %"class.std::__1::__tree_end_node"* %43, i64 5
  %54 = bitcast %"class.std::__1::__tree_end_node"* %53 to i64*
  %55 = load i64, i64* %54, align 8
  %56 = zext i8 %47 to i64
  %57 = select i1 %48, i64 %55, i64 %56
  %58 = load %"class.std::__1::__tree_end_node"*, %"class.std::__1::__tree_end_node"** %22, align 8
  %59 = icmp eq %"class.std::__1::__tree_end_node"* %58, %32
  br i1 %59, label %184, label %60

60:                                               ; preds = %42, %154
  %61 = phi %"class.std::__1::__tree_end_node"* [ %155, %154 ], [ %58, %42 ]
  %62 = getelementptr inbounds %"class.std::__1::__tree_end_node", %"class.std::__1::__tree_end_node"* %61, i64 4
  %63 = bitcast %"class.std::__1::__tree_end_node"* %62 to %"struct.std::__1::basic_string<char, std::__1::char_traits<char>, std::__1::allocator<char> >::__short"*
  %64 = getelementptr inbounds %"struct.std::__1::basic_string<char, std::__1::char_traits<char>, std::__1::allocator<char> >::__short", %"struct.std::__1::basic_string<char, std::__1::char_traits<char>, std::__1::allocator<char> >::__short"* %63, i64 0, i32 1, i32 0
  %65 = load i8, i8* %64, align 1
  %66 = icmp slt i8 %65, 0
  br i1 %66, label %67, label %71

67:                                               ; preds = %60
  %68 = getelementptr inbounds %"class.std::__1::__tree_end_node", %"class.std::__1::__tree_end_node"* %61, i64 5
  %69 = bitcast %"class.std::__1::__tree_end_node"* %68 to i64*
  %70 = load i64, i64* %69, align 8
  br label %73

71:                                               ; preds = %60
  %72 = zext i8 %65 to i64
  br label %73

73:                                               ; preds = %67, %71
  %74 = phi i64 [ %70, %67 ], [ %72, %71 ]
  %75 = icmp ugt i64 %74, 2
  br i1 %75, label %76, label %126

76:                                               ; preds = %73
  br i1 %66, label %77, label %80

77:                                               ; preds = %76
  %78 = bitcast %"class.std::__1::__tree_end_node"* %62 to i8**
  %79 = load i8*, i8** %78, align 8
  br label %82

80:                                               ; preds = %76
  %81 = bitcast %"class.std::__1::__tree_end_node"* %62 to i8*
  br label %82

82:                                               ; preds = %77, %80
  %83 = phi i8* [ %79, %77 ], [ %81, %80 ]
  %84 = load i8, i8* %83, align 1
  %85 = icmp eq i8 %84, 42
  br i1 %85, label %86, label %126

86:                                               ; preds = %82
  br i1 %66, label %87, label %90

87:                                               ; preds = %86
  %88 = bitcast %"class.std::__1::__tree_end_node"* %62 to i8**
  %89 = load i8*, i8** %88, align 8
  br label %92

90:                                               ; preds = %86
  %91 = bitcast %"class.std::__1::__tree_end_node"* %62 to i8*
  br label %92

92:                                               ; preds = %87, %90
  %93 = phi i8* [ %89, %87 ], [ %91, %90 ]
  %94 = getelementptr inbounds i8, i8* %93, i64 1
  %95 = load i8, i8* %94, align 1
  %96 = icmp eq i8 %95, 46
  br i1 %96, label %97, label %126

97:                                               ; preds = %92
  call void @llvm.lifetime.start.p0i8(i64 16, i8* nonnull %38) #14
  call void @llvm.memset.p0i8.i64(i8* nonnull align 8 %41, i8 -86, i64 16, i1 false)
  br i1 %66, label %98, label %104

98:                                               ; preds = %97
  %99 = bitcast %"class.std::__1::__tree_end_node"* %62 to i8**
  %100 = load i8*, i8** %99, align 8
  %101 = getelementptr inbounds %"class.std::__1::__tree_end_node", %"class.std::__1::__tree_end_node"* %61, i64 5
  %102 = bitcast %"class.std::__1::__tree_end_node"* %101 to i64*
  %103 = load i64, i64* %102, align 8
  br label %107

104:                                              ; preds = %97
  %105 = bitcast %"class.std::__1::__tree_end_node"* %62 to i8*
  %106 = zext i8 %65 to i64
  br label %107

107:                                              ; preds = %98, %104
  %108 = phi i8* [ %100, %98 ], [ %105, %104 ]
  %109 = phi i64 [ %103, %98 ], [ %106, %104 ]
  %110 = getelementptr inbounds i8, i8* %108, i64 1
  %111 = add i64 %109, -1
  store i8* %110, i8** %39, align 8
  store i64 %111, i64* %40, align 8
  %112 = call zeroext i1 @_ZN4base8EndsWithENS_16BasicStringPieceIcNSt3__111char_traitsIcEEEES4_NS_11CompareCaseE(i8* %52, i64 %57, i8* %110, i64 %111, i32 0) #14
  br i1 %112, label %122, label %113

113:                                              ; preds = %107
  %114 = call { i8*, i64 } @_ZNK4base16BasicStringPieceIcNSt3__111char_traitsIcEEE6substrEmm(%"class.base::BasicStringPiece"* nonnull %9, i64 1, i64 -1)
  %115 = extractvalue { i8*, i64 } %114, 1
  %116 = icmp eq i64 %57, %115
  br i1 %116, label %117, label %121

117:                                              ; preds = %113
  %118 = extractvalue { i8*, i64 } %114, 0
  %119 = call i32 @bcmp(i8* %52, i8* %118, i64 %57) #14
  %120 = icmp eq i32 %119, 0
  br i1 %120, label %122, label %121

121:                                              ; preds = %113, %117
  call void @llvm.lifetime.end.p0i8(i64 16, i8* nonnull %38) #14
  br label %126

122:                                              ; preds = %117, %107
  call void @llvm.lifetime.end.p0i8(i64 16, i8* nonnull %38) #14
  %123 = getelementptr inbounds %"class.std::__1::__tree_end_node", %"class.std::__1::__tree_end_node"* %43, i64 1, i32 0
  %124 = load %"class.std::__1::__tree_node_base"*, %"class.std::__1::__tree_node_base"** %123, align 8
  %125 = icmp eq %"class.std::__1::__tree_node_base"* %124, null
  br i1 %125, label %157, label %165

126:                                              ; preds = %121, %92, %82, %73
  %127 = getelementptr inbounds %"class.std::__1::__tree_end_node", %"class.std::__1::__tree_end_node"* %61, i64 1, i32 0
  %128 = load %"class.std::__1::__tree_node_base"*, %"class.std::__1::__tree_node_base"** %127, align 8
  %129 = icmp eq %"class.std::__1::__tree_node_base"* %128, null
  br i1 %129, label %130, label %138

130:                                              ; preds = %126
  %131 = bitcast %"class.std::__1::__tree_end_node"* %61 to %"class.std::__1::__tree_node_base"*
  %132 = getelementptr inbounds %"class.std::__1::__tree_end_node", %"class.std::__1::__tree_end_node"* %61, i64 2
  %133 = bitcast %"class.std::__1::__tree_end_node"* %132 to %"class.std::__1::__tree_end_node"**
  %134 = load %"class.std::__1::__tree_end_node"*, %"class.std::__1::__tree_end_node"** %133, align 8
  %135 = getelementptr inbounds %"class.std::__1::__tree_end_node", %"class.std::__1::__tree_end_node"* %134, i64 0, i32 0
  %136 = load %"class.std::__1::__tree_node_base"*, %"class.std::__1::__tree_node_base"** %135, align 8
  %137 = icmp eq %"class.std::__1::__tree_node_base"* %136, %131
  br i1 %137, label %154, label %145

138:                                              ; preds = %126, %138
  %139 = phi %"class.std::__1::__tree_node_base"* [ %141, %138 ], [ %128, %126 ]
  %140 = getelementptr inbounds %"class.std::__1::__tree_node_base", %"class.std::__1::__tree_node_base"* %139, i64 0, i32 0, i32 0
  %141 = load %"class.std::__1::__tree_node_base"*, %"class.std::__1::__tree_node_base"** %140, align 8
  %142 = icmp eq %"class.std::__1::__tree_node_base"* %141, null
  br i1 %142, label %143, label %138

143:                                              ; preds = %138
  %144 = getelementptr inbounds %"class.std::__1::__tree_node_base", %"class.std::__1::__tree_node_base"* %139, i64 0, i32 0
  br label %154

145:                                              ; preds = %130, %145
  %146 = phi %"class.std::__1::__tree_end_node"** [ %149, %145 ], [ %133, %130 ]
  %147 = bitcast %"class.std::__1::__tree_end_node"** %146 to %"class.std::__1::__tree_node_base"**
  %148 = load %"class.std::__1::__tree_node_base"*, %"class.std::__1::__tree_node_base"** %147, align 8
  %149 = getelementptr inbounds %"class.std::__1::__tree_node_base", %"class.std::__1::__tree_node_base"* %148, i64 0, i32 2
  %150 = load %"class.std::__1::__tree_end_node"*, %"class.std::__1::__tree_end_node"** %149, align 8
  %151 = getelementptr inbounds %"class.std::__1::__tree_end_node", %"class.std::__1::__tree_end_node"* %150, i64 0, i32 0
  %152 = load %"class.std::__1::__tree_node_base"*, %"class.std::__1::__tree_node_base"** %151, align 8
  %153 = icmp eq %"class.std::__1::__tree_node_base"* %152, %148
  br i1 %153, label %154, label %145

154:                                              ; preds = %145, %130, %143
  %155 = phi %"class.std::__1::__tree_end_node"* [ %144, %143 ], [ %134, %130 ], [ %150, %145 ]
  %156 = icmp eq %"class.std::__1::__tree_end_node"* %155, %32
  br i1 %156, label %184, label %60

157:                                              ; preds = %122
  %158 = bitcast %"class.std::__1::__tree_end_node"* %43 to %"class.std::__1::__tree_node_base"*
  %159 = getelementptr inbounds %"class.std::__1::__tree_end_node", %"class.std::__1::__tree_end_node"* %43, i64 2
  %160 = bitcast %"class.std::__1::__tree_end_node"* %159 to %"class.std::__1::__tree_end_node"**
  %161 = load %"class.std::__1::__tree_end_node"*, %"class.std::__1::__tree_end_node"** %160, align 8
  %162 = getelementptr inbounds %"class.std::__1::__tree_end_node", %"class.std::__1::__tree_end_node"* %161, i64 0, i32 0
  %163 = load %"class.std::__1::__tree_node_base"*, %"class.std::__1::__tree_node_base"** %162, align 8
  %164 = icmp eq %"class.std::__1::__tree_node_base"* %163, %158
  br i1 %164, label %181, label %172

165:                                              ; preds = %122, %165
  %166 = phi %"class.std::__1::__tree_node_base"* [ %168, %165 ], [ %124, %122 ]
  %167 = getelementptr inbounds %"class.std::__1::__tree_node_base", %"class.std::__1::__tree_node_base"* %166, i64 0, i32 0, i32 0
  %168 = load %"class.std::__1::__tree_node_base"*, %"class.std::__1::__tree_node_base"** %167, align 8
  %169 = icmp eq %"class.std::__1::__tree_node_base"* %168, null
  br i1 %169, label %170, label %165

170:                                              ; preds = %165
  %171 = getelementptr inbounds %"class.std::__1::__tree_node_base", %"class.std::__1::__tree_node_base"* %166, i64 0, i32 0
  br label %181

172:                                              ; preds = %157, %172
  %173 = phi %"class.std::__1::__tree_end_node"** [ %176, %172 ], [ %160, %157 ]
  %174 = bitcast %"class.std::__1::__tree_end_node"** %173 to %"class.std::__1::__tree_node_base"**
  %175 = load %"class.std::__1::__tree_node_base"*, %"class.std::__1::__tree_node_base"** %174, align 8
  %176 = getelementptr inbounds %"class.std::__1::__tree_node_base", %"class.std::__1::__tree_node_base"* %175, i64 0, i32 2
  %177 = load %"class.std::__1::__tree_end_node"*, %"class.std::__1::__tree_end_node"** %176, align 8
  %178 = getelementptr inbounds %"class.std::__1::__tree_end_node", %"class.std::__1::__tree_end_node"* %177, i64 0, i32 0
  %179 = load %"class.std::__1::__tree_node_base"*, %"class.std::__1::__tree_node_base"** %178, align 8
  %180 = icmp eq %"class.std::__1::__tree_node_base"* %179, %175
  br i1 %180, label %181, label %172

181:                                              ; preds = %172, %157, %170
  %182 = phi %"class.std::__1::__tree_end_node"* [ %171, %170 ], [ %161, %157 ], [ %177, %172 ]
  %183 = icmp eq %"class.std::__1::__tree_end_node"* %182, %27
  br i1 %183, label %184, label %42

184:                                              ; preds = %181, %42, %154, %15
  %185 = phi i1 [ false, %15 ], [ true, %154 ], [ true, %42 ], [ false, %181 ]
  %186 = getelementptr inbounds %"class.std::__1::set.82", %"class.std::__1::set.82"* %8, i64 0, i32 0
  %187 = bitcast %"class.std::__1::__tree_end_node"* %27 to %"class.std::__1::__tree_node.142"**
  %188 = load %"class.std::__1::__tree_node.142"*, %"class.std::__1::__tree_node.142"** %187, align 8
  call void @_ZNSt3__16__treeINS_12basic_stringIcNS_11char_traitsIcEENS_9allocatorIcEEEENS_4lessIS6_EENS4_IS6_EEE7destroyEPNS_11__tree_nodeIS6_PvEE(%"class.std::__1::__tree.83"* nonnull %186, %"class.std::__1::__tree_node.142"* %188) #14
  call void @llvm.lifetime.end.p0i8(i64 24, i8* nonnull %24) #14
  %189 = getelementptr inbounds %"class.std::__1::set.82", %"class.std::__1::set.82"* %7, i64 0, i32 0
  %190 = bitcast %"class.std::__1::__tree_end_node"* %32 to %"class.std::__1::__tree_node.142"**
  %191 = load %"class.std::__1::__tree_node.142"*, %"class.std::__1::__tree_node.142"** %190, align 8
  call void @_ZNSt3__16__treeINS_12basic_stringIcNS_11char_traitsIcEENS_9allocatorIcEEEENS_4lessIS6_EENS4_IS6_EEE7destroyEPNS_11__tree_nodeIS6_PvEE(%"class.std::__1::__tree.83"* nonnull %189, %"class.std::__1::__tree_node.142"* %191) #14
  call void @llvm.lifetime.end.p0i8(i64 24, i8* nonnull %21) #14
  %192 = getelementptr inbounds %"class.std::__1::set.82", %"class.std::__1::set.82"* %6, i64 0, i32 0
  %193 = bitcast %"class.std::__1::__tree_end_node"* %30 to %"class.std::__1::__tree_node.142"**
  %194 = load %"class.std::__1::__tree_node.142"*, %"class.std::__1::__tree_node.142"** %193, align 8
  call void @_ZNSt3__16__treeINS_12basic_stringIcNS_11char_traitsIcEENS_9allocatorIcEEEENS_4lessIS6_EENS4_IS6_EEE7destroyEPNS_11__tree_nodeIS6_PvEE(%"class.std::__1::__tree.83"* nonnull %192, %"class.std::__1::__tree_node.142"* %194) #14
  call void @llvm.lifetime.end.p0i8(i64 24, i8* nonnull %18) #14
  br label %195

195:                                              ; preds = %13, %11, %4, %184
  %196 = phi i1 [ %185, %184 ], [ false, %4 ], [ false, %11 ], [ true, %13 ]
  ret i1 %196
}

; Function Attrs: nounwind ssp uwtable
define hidden zeroext i1 @_ZNK10extensions31ChromePermissionMessageProvider32IsAPIOrManifestPrivilegeIncreaseERKNS_13PermissionSetES3_(%"class.extensions::ChromePermissionMessageProvider"*, %"class.extensions::PermissionSet"* dereferenceable(128), %"class.extensions::PermissionSet"* dereferenceable(128)) local_unnamed_addr #2 align 2 {
  %4 = alloca %"struct.std::__1::__tuple_less", align 1
  %5 = alloca %"class.std::__1::tuple", align 8
  %6 = alloca %"class.std::__1::tuple", align 8
  %7 = alloca %"struct.std::__1::__tuple_less", align 1
  %8 = alloca %"class.std::__1::tuple", align 8
  %9 = alloca %"class.std::__1::tuple", align 8
  %10 = alloca %"class.extensions::PermissionIDSet", align 8
  %11 = alloca %"class.extensions::PermissionIDSet", align 8
  %12 = alloca %"class.extensions::PermissionIDSet", align 8
  %13 = alloca %"class.extensions::PermissionIDSet", align 8
  %14 = alloca %"class.extensions::PermissionIDSet", align 8
  %15 = alloca %"class.extensions::PermissionIDSet", align 8
  %16 = alloca %"class.std::__1::vector", align 8
  %17 = alloca %"class.std::__1::vector", align 8
  %18 = alloca %"class.std::__1::vector.100", align 8
  %19 = alloca %"class.std::__1::vector.100", align 8
  %20 = bitcast %"class.extensions::PermissionIDSet"* %14 to i8*
  call void @llvm.lifetime.start.p0i8(i64 32, i8* nonnull %20) #14
  %21 = bitcast %"class.extensions::PermissionIDSet"* %14 to i8*
  call void @llvm.memset.p0i8.i64(i8* nonnull align 8 %21, i8 -86, i64 32, i1 false)
  call void @_ZN10extensions15PermissionIDSetC1Ev(%"class.extensions::PermissionIDSet"* nonnull %14) #14
  %22 = bitcast %"class.extensions::PermissionSet"* %1 to i64*
  %23 = load i64, i64* %22, align 8, !noalias !5
  %24 = getelementptr inbounds %"class.extensions::PermissionSet", %"class.extensions::PermissionSet"* %1, i64 0, i32 0, i32 0, i32 0, i32 0, i32 1, i32 0, i32 0
  %25 = inttoptr i64 %23 to %"class.std::__1::__tree_end_node"*
  %26 = icmp eq %"class.std::__1::__tree_end_node"* %24, %25
  br i1 %26, label %68, label %27

27:                                               ; preds = %3
  %28 = bitcast %"class.extensions::PermissionIDSet"* %13 to i8*
  br label %29

29:                                               ; preds = %64, %27
  %30 = phi i64 [ %23, %27 ], [ %66, %64 ]
  %31 = inttoptr i64 %30 to %"class.std::__1::__tree_node.132"*
  %32 = getelementptr inbounds %"class.std::__1::__tree_node.132", %"class.std::__1::__tree_node.132"* %31, i64 0, i32 1, i32 0, i32 1, i32 0, i32 0, i32 0
  %33 = load %"class.extensions::APIPermission"*, %"class.extensions::APIPermission"** %32, align 8
  call void @llvm.lifetime.start.p0i8(i64 32, i8* nonnull %28) #14
  %34 = bitcast %"class.extensions::APIPermission"* %33 to void (%"class.extensions::PermissionIDSet"*, %"class.extensions::APIPermission"*)***
  %35 = load void (%"class.extensions::PermissionIDSet"*, %"class.extensions::APIPermission"*)**, void (%"class.extensions::PermissionIDSet"*, %"class.extensions::APIPermission"*)*** %34, align 8
  %36 = getelementptr inbounds void (%"class.extensions::PermissionIDSet"*, %"class.extensions::APIPermission"*)*, void (%"class.extensions::PermissionIDSet"*, %"class.extensions::APIPermission"*)** %35, i64 2
  %37 = load void (%"class.extensions::PermissionIDSet"*, %"class.extensions::APIPermission"*)*, void (%"class.extensions::PermissionIDSet"*, %"class.extensions::APIPermission"*)** %36, align 8
  call void %37(%"class.extensions::PermissionIDSet"* nonnull sret %13, %"class.extensions::APIPermission"* %33) #14
  call void @_ZN10extensions15PermissionIDSet9InsertAllERKS0_(%"class.extensions::PermissionIDSet"* nonnull %14, %"class.extensions::PermissionIDSet"* nonnull dereferenceable(32) %13) #14
  call void @_ZN10extensions15PermissionIDSetD1Ev(%"class.extensions::PermissionIDSet"* nonnull %13) #14
  call void @llvm.lifetime.end.p0i8(i64 32, i8* nonnull %28) #14
  %38 = inttoptr i64 %30 to %"class.std::__1::__tree_node_base"*
  %39 = getelementptr inbounds %"class.std::__1::__tree_node_base", %"class.std::__1::__tree_node_base"* %38, i64 0, i32 1
  %40 = load %"class.std::__1::__tree_node_base"*, %"class.std::__1::__tree_node_base"** %39, align 8
  %41 = icmp eq %"class.std::__1::__tree_node_base"* %40, null
  br i1 %41, label %42, label %48

42:                                               ; preds = %29
  %43 = getelementptr inbounds %"class.std::__1::__tree_node_base", %"class.std::__1::__tree_node_base"* %38, i64 0, i32 2
  %44 = load %"class.std::__1::__tree_end_node"*, %"class.std::__1::__tree_end_node"** %43, align 8
  %45 = getelementptr inbounds %"class.std::__1::__tree_end_node", %"class.std::__1::__tree_end_node"* %44, i64 0, i32 0
  %46 = load %"class.std::__1::__tree_node_base"*, %"class.std::__1::__tree_node_base"** %45, align 8
  %47 = icmp eq %"class.std::__1::__tree_node_base"* %46, %38
  br i1 %47, label %64, label %55

48:                                               ; preds = %29, %48
  %49 = phi %"class.std::__1::__tree_node_base"* [ %51, %48 ], [ %40, %29 ]
  %50 = getelementptr inbounds %"class.std::__1::__tree_node_base", %"class.std::__1::__tree_node_base"* %49, i64 0, i32 0, i32 0
  %51 = load %"class.std::__1::__tree_node_base"*, %"class.std::__1::__tree_node_base"** %50, align 8
  %52 = icmp eq %"class.std::__1::__tree_node_base"* %51, null
  br i1 %52, label %53, label %48

53:                                               ; preds = %48
  %54 = getelementptr inbounds %"class.std::__1::__tree_node_base", %"class.std::__1::__tree_node_base"* %49, i64 0, i32 0
  br label %64

55:                                               ; preds = %42, %55
  %56 = phi %"class.std::__1::__tree_end_node"** [ %59, %55 ], [ %43, %42 ]
  %57 = bitcast %"class.std::__1::__tree_end_node"** %56 to %"class.std::__1::__tree_node_base"**
  %58 = load %"class.std::__1::__tree_node_base"*, %"class.std::__1::__tree_node_base"** %57, align 8
  %59 = getelementptr inbounds %"class.std::__1::__tree_node_base", %"class.std::__1::__tree_node_base"* %58, i64 0, i32 2
  %60 = load %"class.std::__1::__tree_end_node"*, %"class.std::__1::__tree_end_node"** %59, align 8
  %61 = getelementptr inbounds %"class.std::__1::__tree_end_node", %"class.std::__1::__tree_end_node"* %60, i64 0, i32 0
  %62 = load %"class.std::__1::__tree_node_base"*, %"class.std::__1::__tree_node_base"** %61, align 8
  %63 = icmp eq %"class.std::__1::__tree_node_base"* %62, %58
  br i1 %63, label %64, label %55

64:                                               ; preds = %55, %53, %42
  %65 = phi %"class.std::__1::__tree_end_node"* [ %54, %53 ], [ %44, %42 ], [ %60, %55 ]
  %66 = ptrtoint %"class.std::__1::__tree_end_node"* %65 to i64
  %67 = icmp eq %"class.std::__1::__tree_end_node"* %24, %65
  br i1 %67, label %68, label %29

68:                                               ; preds = %64, %3
  %69 = getelementptr inbounds %"class.extensions::PermissionSet", %"class.extensions::PermissionSet"* %1, i64 0, i32 1, i32 0
  %70 = bitcast %"class.extensions::BaseSetOperators.48"* %69 to i64*
  %71 = load i64, i64* %70, align 8, !noalias !8
  %72 = getelementptr inbounds %"class.extensions::PermissionSet", %"class.extensions::PermissionSet"* %1, i64 0, i32 1, i32 0, i32 0, i32 0, i32 1, i32 0, i32 0
  %73 = inttoptr i64 %71 to %"class.std::__1::__tree_end_node"*
  %74 = icmp eq %"class.std::__1::__tree_end_node"* %72, %73
  br i1 %74, label %116, label %75

75:                                               ; preds = %68
  %76 = bitcast %"class.extensions::PermissionIDSet"* %12 to i8*
  br label %77

77:                                               ; preds = %112, %75
  %78 = phi i64 [ %71, %75 ], [ %114, %112 ]
  %79 = inttoptr i64 %78 to %"class.std::__1::__tree_node.141"*
  %80 = getelementptr inbounds %"class.std::__1::__tree_node.141", %"class.std::__1::__tree_node.141"* %79, i64 0, i32 1, i32 0, i32 1, i32 0, i32 0, i32 0
  %81 = load %"class.extensions::ManifestPermission"*, %"class.extensions::ManifestPermission"** %80, align 8
  call void @llvm.lifetime.start.p0i8(i64 32, i8* nonnull %76) #14
  %82 = bitcast %"class.extensions::ManifestPermission"* %81 to void (%"class.extensions::PermissionIDSet"*, %"class.extensions::ManifestPermission"*)***
  %83 = load void (%"class.extensions::PermissionIDSet"*, %"class.extensions::ManifestPermission"*)**, void (%"class.extensions::PermissionIDSet"*, %"class.extensions::ManifestPermission"*)*** %82, align 8
  %84 = getelementptr inbounds void (%"class.extensions::PermissionIDSet"*, %"class.extensions::ManifestPermission"*)*, void (%"class.extensions::PermissionIDSet"*, %"class.extensions::ManifestPermission"*)** %83, i64 4
  %85 = load void (%"class.extensions::PermissionIDSet"*, %"class.extensions::ManifestPermission"*)*, void (%"class.extensions::PermissionIDSet"*, %"class.extensions::ManifestPermission"*)** %84, align 8
  call void %85(%"class.extensions::PermissionIDSet"* nonnull sret %12, %"class.extensions::ManifestPermission"* %81) #14
  call void @_ZN10extensions15PermissionIDSet9InsertAllERKS0_(%"class.extensions::PermissionIDSet"* nonnull %14, %"class.extensions::PermissionIDSet"* nonnull dereferenceable(32) %12) #14
  call void @_ZN10extensions15PermissionIDSetD1Ev(%"class.extensions::PermissionIDSet"* nonnull %12) #14
  call void @llvm.lifetime.end.p0i8(i64 32, i8* nonnull %76) #14
  %86 = inttoptr i64 %78 to %"class.std::__1::__tree_node_base"*
  %87 = getelementptr inbounds %"class.std::__1::__tree_node_base", %"class.std::__1::__tree_node_base"* %86, i64 0, i32 1
  %88 = load %"class.std::__1::__tree_node_base"*, %"class.std::__1::__tree_node_base"** %87, align 8
  %89 = icmp eq %"class.std::__1::__tree_node_base"* %88, null
  br i1 %89, label %90, label %96

90:                                               ; preds = %77
  %91 = getelementptr inbounds %"class.std::__1::__tree_node_base", %"class.std::__1::__tree_node_base"* %86, i64 0, i32 2
  %92 = load %"class.std::__1::__tree_end_node"*, %"class.std::__1::__tree_end_node"** %91, align 8
  %93 = getelementptr inbounds %"class.std::__1::__tree_end_node", %"class.std::__1::__tree_end_node"* %92, i64 0, i32 0
  %94 = load %"class.std::__1::__tree_node_base"*, %"class.std::__1::__tree_node_base"** %93, align 8
  %95 = icmp eq %"class.std::__1::__tree_node_base"* %94, %86
  br i1 %95, label %112, label %103

96:                                               ; preds = %77, %96
  %97 = phi %"class.std::__1::__tree_node_base"* [ %99, %96 ], [ %88, %77 ]
  %98 = getelementptr inbounds %"class.std::__1::__tree_node_base", %"class.std::__1::__tree_node_base"* %97, i64 0, i32 0, i32 0
  %99 = load %"class.std::__1::__tree_node_base"*, %"class.std::__1::__tree_node_base"** %98, align 8
  %100 = icmp eq %"class.std::__1::__tree_node_base"* %99, null
  br i1 %100, label %101, label %96

101:                                              ; preds = %96
  %102 = getelementptr inbounds %"class.std::__1::__tree_node_base", %"class.std::__1::__tree_node_base"* %97, i64 0, i32 0
  br label %112

103:                                              ; preds = %90, %103
  %104 = phi %"class.std::__1::__tree_end_node"** [ %107, %103 ], [ %91, %90 ]
  %105 = bitcast %"class.std::__1::__tree_end_node"** %104 to %"class.std::__1::__tree_node_base"**
  %106 = load %"class.std::__1::__tree_node_base"*, %"class.std::__1::__tree_node_base"** %105, align 8
  %107 = getelementptr inbounds %"class.std::__1::__tree_node_base", %"class.std::__1::__tree_node_base"* %106, i64 0, i32 2
  %108 = load %"class.std::__1::__tree_end_node"*, %"class.std::__1::__tree_end_node"** %107, align 8
  %109 = getelementptr inbounds %"class.std::__1::__tree_end_node", %"class.std::__1::__tree_end_node"* %108, i64 0, i32 0
  %110 = load %"class.std::__1::__tree_node_base"*, %"class.std::__1::__tree_node_base"** %109, align 8
  %111 = icmp eq %"class.std::__1::__tree_node_base"* %110, %106
  br i1 %111, label %112, label %103

112:                                              ; preds = %103, %101, %90
  %113 = phi %"class.std::__1::__tree_end_node"* [ %102, %101 ], [ %92, %90 ], [ %108, %103 ]
  %114 = ptrtoint %"class.std::__1::__tree_end_node"* %113 to i64
  %115 = icmp eq %"class.std::__1::__tree_end_node"* %72, %113
  br i1 %115, label %116, label %77

116:                                              ; preds = %112, %68
  %117 = call zeroext i1 @_ZNK10extensions13PermissionSet18ShouldWarnAllHostsEb(%"class.extensions::PermissionSet"* %1, i1 zeroext true) #14
  br i1 %117, label %118, label %119

118:                                              ; preds = %116
  call void @_ZN10extensions15PermissionIDSet6insertENS_5mojom15APIPermissionIDE(%"class.extensions::PermissionIDSet"* nonnull %14, i32 179) #14
  br label %119

119:                                              ; preds = %118, %116
  %120 = bitcast %"class.extensions::PermissionIDSet"* %15 to i8*
  call void @llvm.lifetime.start.p0i8(i64 32, i8* nonnull %120) #14
  %121 = bitcast %"class.extensions::PermissionIDSet"* %15 to i8*
  call void @llvm.memset.p0i8.i64(i8* nonnull align 8 %121, i8 -86, i64 32, i1 false)
  call void @_ZN10extensions15PermissionIDSetC1ERKS0_(%"class.extensions::PermissionIDSet"* nonnull %15, %"class.extensions::PermissionIDSet"* nonnull dereferenceable(32) %14) #14
  %122 = bitcast %"class.extensions::PermissionSet"* %2 to i64*
  %123 = load i64, i64* %122, align 8, !noalias !11
  %124 = getelementptr inbounds %"class.extensions::PermissionSet", %"class.extensions::PermissionSet"* %2, i64 0, i32 0, i32 0, i32 0, i32 0, i32 1, i32 0, i32 0
  %125 = inttoptr i64 %123 to %"class.std::__1::__tree_end_node"*
  %126 = icmp eq %"class.std::__1::__tree_end_node"* %124, %125
  br i1 %126, label %168, label %127

127:                                              ; preds = %119
  %128 = bitcast %"class.extensions::PermissionIDSet"* %11 to i8*
  br label %129

129:                                              ; preds = %164, %127
  %130 = phi i64 [ %123, %127 ], [ %166, %164 ]
  %131 = inttoptr i64 %130 to %"class.std::__1::__tree_node.132"*
  %132 = getelementptr inbounds %"class.std::__1::__tree_node.132", %"class.std::__1::__tree_node.132"* %131, i64 0, i32 1, i32 0, i32 1, i32 0, i32 0, i32 0
  %133 = load %"class.extensions::APIPermission"*, %"class.extensions::APIPermission"** %132, align 8
  call void @llvm.lifetime.start.p0i8(i64 32, i8* nonnull %128) #14
  %134 = bitcast %"class.extensions::APIPermission"* %133 to void (%"class.extensions::PermissionIDSet"*, %"class.extensions::APIPermission"*)***
  %135 = load void (%"class.extensions::PermissionIDSet"*, %"class.extensions::APIPermission"*)**, void (%"class.extensions::PermissionIDSet"*, %"class.extensions::APIPermission"*)*** %134, align 8
  %136 = getelementptr inbounds void (%"class.extensions::PermissionIDSet"*, %"class.extensions::APIPermission"*)*, void (%"class.extensions::PermissionIDSet"*, %"class.extensions::APIPermission"*)** %135, i64 2
  %137 = load void (%"class.extensions::PermissionIDSet"*, %"class.extensions::APIPermission"*)*, void (%"class.extensions::PermissionIDSet"*, %"class.extensions::APIPermission"*)** %136, align 8
  call void %137(%"class.extensions::PermissionIDSet"* nonnull sret %11, %"class.extensions::APIPermission"* %133) #14
  call void @_ZN10extensions15PermissionIDSet9InsertAllERKS0_(%"class.extensions::PermissionIDSet"* nonnull %15, %"class.extensions::PermissionIDSet"* nonnull dereferenceable(32) %11) #14
  call void @_ZN10extensions15PermissionIDSetD1Ev(%"class.extensions::PermissionIDSet"* nonnull %11) #14
  call void @llvm.lifetime.end.p0i8(i64 32, i8* nonnull %128) #14
  %138 = inttoptr i64 %130 to %"class.std::__1::__tree_node_base"*
  %139 = getelementptr inbounds %"class.std::__1::__tree_node_base", %"class.std::__1::__tree_node_base"* %138, i64 0, i32 1
  %140 = load %"class.std::__1::__tree_node_base"*, %"class.std::__1::__tree_node_base"** %139, align 8
  %141 = icmp eq %"class.std::__1::__tree_node_base"* %140, null
  br i1 %141, label %142, label %148

142:                                              ; preds = %129
  %143 = getelementptr inbounds %"class.std::__1::__tree_node_base", %"class.std::__1::__tree_node_base"* %138, i64 0, i32 2
  %144 = load %"class.std::__1::__tree_end_node"*, %"class.std::__1::__tree_end_node"** %143, align 8
  %145 = getelementptr inbounds %"class.std::__1::__tree_end_node", %"class.std::__1::__tree_end_node"* %144, i64 0, i32 0
  %146 = load %"class.std::__1::__tree_node_base"*, %"class.std::__1::__tree_node_base"** %145, align 8
  %147 = icmp eq %"class.std::__1::__tree_node_base"* %146, %138
  br i1 %147, label %164, label %155

148:                                              ; preds = %129, %148
  %149 = phi %"class.std::__1::__tree_node_base"* [ %151, %148 ], [ %140, %129 ]
  %150 = getelementptr inbounds %"class.std::__1::__tree_node_base", %"class.std::__1::__tree_node_base"* %149, i64 0, i32 0, i32 0
  %151 = load %"class.std::__1::__tree_node_base"*, %"class.std::__1::__tree_node_base"** %150, align 8
  %152 = icmp eq %"class.std::__1::__tree_node_base"* %151, null
  br i1 %152, label %153, label %148

153:                                              ; preds = %148
  %154 = getelementptr inbounds %"class.std::__1::__tree_node_base", %"class.std::__1::__tree_node_base"* %149, i64 0, i32 0
  br label %164

155:                                              ; preds = %142, %155
  %156 = phi %"class.std::__1::__tree_end_node"** [ %159, %155 ], [ %143, %142 ]
  %157 = bitcast %"class.std::__1::__tree_end_node"** %156 to %"class.std::__1::__tree_node_base"**
  %158 = load %"class.std::__1::__tree_node_base"*, %"class.std::__1::__tree_node_base"** %157, align 8
  %159 = getelementptr inbounds %"class.std::__1::__tree_node_base", %"class.std::__1::__tree_node_base"* %158, i64 0, i32 2
  %160 = load %"class.std::__1::__tree_end_node"*, %"class.std::__1::__tree_end_node"** %159, align 8
  %161 = getelementptr inbounds %"class.std::__1::__tree_end_node", %"class.std::__1::__tree_end_node"* %160, i64 0, i32 0
  %162 = load %"class.std::__1::__tree_node_base"*, %"class.std::__1::__tree_node_base"** %161, align 8
  %163 = icmp eq %"class.std::__1::__tree_node_base"* %162, %158
  br i1 %163, label %164, label %155

164:                                              ; preds = %155, %153, %142
  %165 = phi %"class.std::__1::__tree_end_node"* [ %154, %153 ], [ %144, %142 ], [ %160, %155 ]
  %166 = ptrtoint %"class.std::__1::__tree_end_node"* %165 to i64
  %167 = icmp eq %"class.std::__1::__tree_end_node"* %124, %165
  br i1 %167, label %168, label %129

168:                                              ; preds = %164, %119
  %169 = getelementptr inbounds %"class.extensions::PermissionSet", %"class.extensions::PermissionSet"* %2, i64 0, i32 1, i32 0
  %170 = bitcast %"class.extensions::BaseSetOperators.48"* %169 to i64*
  %171 = load i64, i64* %170, align 8, !noalias !14
  %172 = getelementptr inbounds %"class.extensions::PermissionSet", %"class.extensions::PermissionSet"* %2, i64 0, i32 1, i32 0, i32 0, i32 0, i32 1, i32 0, i32 0
  %173 = inttoptr i64 %171 to %"class.std::__1::__tree_end_node"*
  %174 = icmp eq %"class.std::__1::__tree_end_node"* %172, %173
  br i1 %174, label %216, label %175

175:                                              ; preds = %168
  %176 = bitcast %"class.extensions::PermissionIDSet"* %10 to i8*
  br label %177

177:                                              ; preds = %212, %175
  %178 = phi i64 [ %171, %175 ], [ %214, %212 ]
  %179 = inttoptr i64 %178 to %"class.std::__1::__tree_node.141"*
  %180 = getelementptr inbounds %"class.std::__1::__tree_node.141", %"class.std::__1::__tree_node.141"* %179, i64 0, i32 1, i32 0, i32 1, i32 0, i32 0, i32 0
  %181 = load %"class.extensions::ManifestPermission"*, %"class.extensions::ManifestPermission"** %180, align 8
  call void @llvm.lifetime.start.p0i8(i64 32, i8* nonnull %176) #14
  %182 = bitcast %"class.extensions::ManifestPermission"* %181 to void (%"class.extensions::PermissionIDSet"*, %"class.extensions::ManifestPermission"*)***
  %183 = load void (%"class.extensions::PermissionIDSet"*, %"class.extensions::ManifestPermission"*)**, void (%"class.extensions::PermissionIDSet"*, %"class.extensions::ManifestPermission"*)*** %182, align 8
  %184 = getelementptr inbounds void (%"class.extensions::PermissionIDSet"*, %"class.extensions::ManifestPermission"*)*, void (%"class.extensions::PermissionIDSet"*, %"class.extensions::ManifestPermission"*)** %183, i64 4
  %185 = load void (%"class.extensions::PermissionIDSet"*, %"class.extensions::ManifestPermission"*)*, void (%"class.extensions::PermissionIDSet"*, %"class.extensions::ManifestPermission"*)** %184, align 8
  call void %185(%"class.extensions::PermissionIDSet"* nonnull sret %10, %"class.extensions::ManifestPermission"* %181) #14
  call void @_ZN10extensions15PermissionIDSet9InsertAllERKS0_(%"class.extensions::PermissionIDSet"* nonnull %15, %"class.extensions::PermissionIDSet"* nonnull dereferenceable(32) %10) #14
  call void @_ZN10extensions15PermissionIDSetD1Ev(%"class.extensions::PermissionIDSet"* nonnull %10) #14
  call void @llvm.lifetime.end.p0i8(i64 32, i8* nonnull %176) #14
  %186 = inttoptr i64 %178 to %"class.std::__1::__tree_node_base"*
  %187 = getelementptr inbounds %"class.std::__1::__tree_node_base", %"class.std::__1::__tree_node_base"* %186, i64 0, i32 1
  %188 = load %"class.std::__1::__tree_node_base"*, %"class.std::__1::__tree_node_base"** %187, align 8
  %189 = icmp eq %"class.std::__1::__tree_node_base"* %188, null
  br i1 %189, label %190, label %196

190:                                              ; preds = %177
  %191 = getelementptr inbounds %"class.std::__1::__tree_node_base", %"class.std::__1::__tree_node_base"* %186, i64 0, i32 2
  %192 = load %"class.std::__1::__tree_end_node"*, %"class.std::__1::__tree_end_node"** %191, align 8
  %193 = getelementptr inbounds %"class.std::__1::__tree_end_node", %"class.std::__1::__tree_end_node"* %192, i64 0, i32 0
  %194 = load %"class.std::__1::__tree_node_base"*, %"class.std::__1::__tree_node_base"** %193, align 8
  %195 = icmp eq %"class.std::__1::__tree_node_base"* %194, %186
  br i1 %195, label %212, label %203

196:                                              ; preds = %177, %196
  %197 = phi %"class.std::__1::__tree_node_base"* [ %199, %196 ], [ %188, %177 ]
  %198 = getelementptr inbounds %"class.std::__1::__tree_node_base", %"class.std::__1::__tree_node_base"* %197, i64 0, i32 0, i32 0
  %199 = load %"class.std::__1::__tree_node_base"*, %"class.std::__1::__tree_node_base"** %198, align 8
  %200 = icmp eq %"class.std::__1::__tree_node_base"* %199, null
  br i1 %200, label %201, label %196

201:                                              ; preds = %196
  %202 = getelementptr inbounds %"class.std::__1::__tree_node_base", %"class.std::__1::__tree_node_base"* %197, i64 0, i32 0
  br label %212

203:                                              ; preds = %190, %203
  %204 = phi %"class.std::__1::__tree_end_node"** [ %207, %203 ], [ %191, %190 ]
  %205 = bitcast %"class.std::__1::__tree_end_node"** %204 to %"class.std::__1::__tree_node_base"**
  %206 = load %"class.std::__1::__tree_node_base"*, %"class.std::__1::__tree_node_base"** %205, align 8
  %207 = getelementptr inbounds %"class.std::__1::__tree_node_base", %"class.std::__1::__tree_node_base"* %206, i64 0, i32 2
  %208 = load %"class.std::__1::__tree_end_node"*, %"class.std::__1::__tree_end_node"** %207, align 8
  %209 = getelementptr inbounds %"class.std::__1::__tree_end_node", %"class.std::__1::__tree_end_node"* %208, i64 0, i32 0
  %210 = load %"class.std::__1::__tree_node_base"*, %"class.std::__1::__tree_node_base"** %209, align 8
  %211 = icmp eq %"class.std::__1::__tree_node_base"* %210, %206
  br i1 %211, label %212, label %203

212:                                              ; preds = %203, %201, %190
  %213 = phi %"class.std::__1::__tree_end_node"* [ %202, %201 ], [ %192, %190 ], [ %208, %203 ]
  %214 = ptrtoint %"class.std::__1::__tree_end_node"* %213 to i64
  %215 = icmp eq %"class.std::__1::__tree_end_node"* %172, %213
  br i1 %215, label %216, label %177

216:                                              ; preds = %212, %168
  %217 = call zeroext i1 @_ZNK10extensions13PermissionSet18ShouldWarnAllHostsEb(%"class.extensions::PermissionSet"* %2, i1 zeroext true) #14
  br i1 %217, label %218, label %219

218:                                              ; preds = %216
  call void @_ZN10extensions15PermissionIDSet6insertENS_5mojom15APIPermissionIDE(%"class.extensions::PermissionIDSet"* nonnull %15, i32 179) #14
  br label %219

219:                                              ; preds = %218, %216
  call void @_ZN10extensions15PermissionIDSet5eraseENS_5mojom15APIPermissionIDE(%"class.extensions::PermissionIDSet"* nonnull %14, i32 206) #14
  call void @_ZN10extensions15PermissionIDSet5eraseENS_5mojom15APIPermissionIDE(%"class.extensions::PermissionIDSet"* nonnull %15, i32 206) #14
  %220 = call zeroext i1 @_ZNK10extensions15PermissionIDSet8IncludesERKS0_(%"class.extensions::PermissionIDSet"* nonnull %14, %"class.extensions::PermissionIDSet"* nonnull dereferenceable(32) %15) #14
  br i1 %220, label %492, label %221

221:                                              ; preds = %219
  %222 = bitcast %"class.std::__1::vector"* %16 to i8*
  call void @llvm.lifetime.start.p0i8(i64 24, i8* nonnull %222) #14
  %223 = getelementptr inbounds %"class.std::__1::vector", %"class.std::__1::vector"* %16, i64 0, i32 0, i32 0
  %224 = getelementptr inbounds %"class.std::__1::vector", %"class.std::__1::vector"* %16, i64 0, i32 0, i32 1
  %225 = bitcast %"class.extensions::ChromePermissionMessageProvider"* %0 to void (%"class.std::__1::vector"*, %"class.extensions::ChromePermissionMessageProvider"*, %"class.extensions::PermissionIDSet"*)***
  %226 = bitcast %"class.std::__1::vector"* %16 to i8*
  call void @llvm.memset.p0i8.i64(i8* nonnull align 8 %226, i8 -86, i64 24, i1 false)
  %227 = load void (%"class.std::__1::vector"*, %"class.extensions::ChromePermissionMessageProvider"*, %"class.extensions::PermissionIDSet"*)**, void (%"class.std::__1::vector"*, %"class.extensions::ChromePermissionMessageProvider"*, %"class.extensions::PermissionIDSet"*)*** %225, align 8
  %228 = getelementptr inbounds void (%"class.std::__1::vector"*, %"class.extensions::ChromePermissionMessageProvider"*, %"class.extensions::PermissionIDSet"*)*, void (%"class.std::__1::vector"*, %"class.extensions::ChromePermissionMessageProvider"*, %"class.extensions::PermissionIDSet"*)** %227, i64 2
  %229 = load void (%"class.std::__1::vector"*, %"class.extensions::ChromePermissionMessageProvider"*, %"class.extensions::PermissionIDSet"*)*, void (%"class.std::__1::vector"*, %"class.extensions::ChromePermissionMessageProvider"*, %"class.extensions::PermissionIDSet"*)** %228, align 8
  call void %229(%"class.std::__1::vector"* nonnull sret %16, %"class.extensions::ChromePermissionMessageProvider"* %0, %"class.extensions::PermissionIDSet"* nonnull dereferenceable(32) %14) #14
  %230 = bitcast %"class.std::__1::vector"* %17 to i8*
  call void @llvm.lifetime.start.p0i8(i64 24, i8* nonnull %230) #14
  %231 = getelementptr inbounds %"class.std::__1::vector", %"class.std::__1::vector"* %17, i64 0, i32 0, i32 0
  %232 = getelementptr inbounds %"class.std::__1::vector", %"class.std::__1::vector"* %17, i64 0, i32 0, i32 1
  %233 = bitcast %"class.std::__1::vector"* %17 to i8*
  call void @llvm.memset.p0i8.i64(i8* nonnull align 8 %233, i8 -86, i64 24, i1 false)
  %234 = load void (%"class.std::__1::vector"*, %"class.extensions::ChromePermissionMessageProvider"*, %"class.extensions::PermissionIDSet"*)**, void (%"class.std::__1::vector"*, %"class.extensions::ChromePermissionMessageProvider"*, %"class.extensions::PermissionIDSet"*)*** %225, align 8
  %235 = getelementptr inbounds void (%"class.std::__1::vector"*, %"class.extensions::ChromePermissionMessageProvider"*, %"class.extensions::PermissionIDSet"*)*, void (%"class.std::__1::vector"*, %"class.extensions::ChromePermissionMessageProvider"*, %"class.extensions::PermissionIDSet"*)** %234, i64 2
  %236 = load void (%"class.std::__1::vector"*, %"class.extensions::ChromePermissionMessageProvider"*, %"class.extensions::PermissionIDSet"*)*, void (%"class.std::__1::vector"*, %"class.extensions::ChromePermissionMessageProvider"*, %"class.extensions::PermissionIDSet"*)** %235, align 8
  call void %236(%"class.std::__1::vector"* nonnull sret %17, %"class.extensions::ChromePermissionMessageProvider"* %0, %"class.extensions::PermissionIDSet"* nonnull dereferenceable(32) %15) #14
  %237 = bitcast %"class.std::__1::vector.100"* %18 to i8*
  call void @llvm.lifetime.start.p0i8(i64 24, i8* nonnull %237) #14
  %238 = getelementptr inbounds %"class.std::__1::vector.100", %"class.std::__1::vector.100"* %18, i64 0, i32 0, i32 0
  %239 = getelementptr inbounds %"class.std::__1::vector.100", %"class.std::__1::vector.100"* %18, i64 0, i32 0, i32 1
  %240 = getelementptr inbounds %"class.std::__1::vector.100", %"class.std::__1::vector.100"* %18, i64 0, i32 0, i32 2, i32 0, i32 0
  %241 = load %"class.extensions::PermissionMessage"*, %"class.extensions::PermissionMessage"** %223, align 8
  %242 = ptrtoint %"class.extensions::PermissionMessage"* %241 to i64
  %243 = load %"class.extensions::PermissionMessage"*, %"class.extensions::PermissionMessage"** %224, align 8
  call void @llvm.memset.p0i8.i64(i8* nonnull align 8 %237, i8 0, i64 24, i1 false) #14
  %244 = ptrtoint %"class.extensions::PermissionMessage"* %243 to i64
  %245 = sub i64 %244, %242
  %246 = sdiv exact i64 %245, 88
  %247 = icmp eq i64 %245, 0
  br i1 %247, label %310, label %248

248:                                              ; preds = %221
  %249 = icmp ugt i64 %246, 2305843009213693951
  br i1 %249, label %250, label %252

250:                                              ; preds = %248
  %251 = bitcast %"class.std::__1::vector.100"* %18 to %"class.std::__1::__vector_base_common"*
  call void @_ZNKSt3__120__vector_base_commonILb1EE20__throw_length_errorEv(%"class.std::__1::__vector_base_common"* nonnull %251) #15
  unreachable

252:                                              ; preds = %248
  %253 = shl nsw i64 %246, 3
  %254 = call i8* @_Znwm(i64 %253) #13
  %255 = bitcast i8* %254 to %"class.extensions::(anonymous namespace)::ComparablePermission"*
  %256 = bitcast %"class.extensions::(anonymous namespace)::ComparablePermission"** %239 to i8**
  store i8* %254, i8** %256, align 8
  %257 = bitcast %"class.std::__1::vector.100"* %18 to i8**
  store i8* %254, i8** %257, align 8
  %258 = getelementptr inbounds %"class.extensions::(anonymous namespace)::ComparablePermission", %"class.extensions::(anonymous namespace)::ComparablePermission"* %255, i64 %246
  store %"class.extensions::(anonymous namespace)::ComparablePermission"* %258, %"class.extensions::(anonymous namespace)::ComparablePermission"** %240, align 8
  %259 = bitcast %"class.extensions::(anonymous namespace)::ComparablePermission"** %239 to i64*
  %260 = ptrtoint i8* %254 to i64
  %261 = icmp eq %"class.extensions::PermissionMessage"* %241, %243
  br i1 %261, label %307, label %262

262:                                              ; preds = %252
  %263 = getelementptr %"class.extensions::PermissionMessage", %"class.extensions::PermissionMessage"* %243, i64 -1, i32 0
  %264 = ptrtoint i32 (...)*** %263 to i64
  %265 = sub i64 %264, %242
  %266 = udiv i64 %265, 88
  %267 = add nuw nsw i64 %266, 1
  %268 = icmp ult i64 %267, 4
  br i1 %268, label %294, label %269

269:                                              ; preds = %262
  %270 = and i64 %267, 576460752303423484
  %271 = getelementptr %"class.extensions::(anonymous namespace)::ComparablePermission", %"class.extensions::(anonymous namespace)::ComparablePermission"* %255, i64 %270
  %272 = getelementptr %"class.extensions::PermissionMessage", %"class.extensions::PermissionMessage"* %241, i64 %270
  br label %273

273:                                              ; preds = %273, %269
  %274 = phi i64 [ 0, %269 ], [ %290, %273 ]
  %275 = getelementptr %"class.extensions::PermissionMessage", %"class.extensions::PermissionMessage"* %241, i64 %274
  %276 = or i64 %274, 1
  %277 = getelementptr %"class.extensions::PermissionMessage", %"class.extensions::PermissionMessage"* %241, i64 %276
  %278 = insertelement <2 x %"class.extensions::PermissionMessage"*> undef, %"class.extensions::PermissionMessage"* %275, i32 0
  %279 = insertelement <2 x %"class.extensions::PermissionMessage"*> %278, %"class.extensions::PermissionMessage"* %277, i32 1
  %280 = or i64 %274, 2
  %281 = getelementptr %"class.extensions::PermissionMessage", %"class.extensions::PermissionMessage"* %241, i64 %280
  %282 = or i64 %274, 3
  %283 = getelementptr %"class.extensions::PermissionMessage", %"class.extensions::PermissionMessage"* %241, i64 %282
  %284 = insertelement <2 x %"class.extensions::PermissionMessage"*> undef, %"class.extensions::PermissionMessage"* %281, i32 0
  %285 = insertelement <2 x %"class.extensions::PermissionMessage"*> %284, %"class.extensions::PermissionMessage"* %283, i32 1
  %286 = getelementptr inbounds %"class.extensions::(anonymous namespace)::ComparablePermission", %"class.extensions::(anonymous namespace)::ComparablePermission"* %255, i64 %274, i32 0
  %287 = bitcast %"class.extensions::PermissionMessage"** %286 to <2 x %"class.extensions::PermissionMessage"*>*
  store <2 x %"class.extensions::PermissionMessage"*> %279, <2 x %"class.extensions::PermissionMessage"*>* %287, align 8
  %288 = getelementptr %"class.extensions::PermissionMessage"*, %"class.extensions::PermissionMessage"** %286, i64 2
  %289 = bitcast %"class.extensions::PermissionMessage"** %288 to <2 x %"class.extensions::PermissionMessage"*>*
  store <2 x %"class.extensions::PermissionMessage"*> %285, <2 x %"class.extensions::PermissionMessage"*>* %289, align 8
  %290 = add i64 %274, 4
  %291 = icmp eq i64 %290, %270
  br i1 %291, label %292, label %273, !llvm.loop !17

292:                                              ; preds = %273
  %293 = icmp eq i64 %267, %270
  br i1 %293, label %304, label %294

294:                                              ; preds = %292, %262
  %295 = phi %"class.extensions::(anonymous namespace)::ComparablePermission"* [ %255, %262 ], [ %271, %292 ]
  %296 = phi %"class.extensions::PermissionMessage"* [ %241, %262 ], [ %272, %292 ]
  br label %297

297:                                              ; preds = %294, %297
  %298 = phi %"class.extensions::(anonymous namespace)::ComparablePermission"* [ %302, %297 ], [ %295, %294 ]
  %299 = phi %"class.extensions::PermissionMessage"* [ %301, %297 ], [ %296, %294 ]
  %300 = getelementptr inbounds %"class.extensions::(anonymous namespace)::ComparablePermission", %"class.extensions::(anonymous namespace)::ComparablePermission"* %298, i64 0, i32 0
  store %"class.extensions::PermissionMessage"* %299, %"class.extensions::PermissionMessage"** %300, align 8
  %301 = getelementptr inbounds %"class.extensions::PermissionMessage", %"class.extensions::PermissionMessage"* %299, i64 1
  %302 = getelementptr inbounds %"class.extensions::(anonymous namespace)::ComparablePermission", %"class.extensions::(anonymous namespace)::ComparablePermission"* %298, i64 1
  %303 = icmp eq %"class.extensions::PermissionMessage"* %301, %243
  br i1 %303, label %304, label %297, !llvm.loop !19

304:                                              ; preds = %297, %292
  %305 = phi %"class.extensions::(anonymous namespace)::ComparablePermission"* [ %271, %292 ], [ %302, %297 ]
  %306 = ptrtoint %"class.extensions::(anonymous namespace)::ComparablePermission"* %305 to i64
  br label %307

307:                                              ; preds = %304, %252
  %308 = phi i64 [ %260, %252 ], [ %306, %304 ]
  store i64 %308, i64* %259, align 8
  %309 = inttoptr i64 %308 to %"class.extensions::(anonymous namespace)::ComparablePermission"*
  br label %310

310:                                              ; preds = %221, %307
  %311 = phi %"class.extensions::(anonymous namespace)::ComparablePermission"* [ null, %221 ], [ %309, %307 ]
  %312 = phi %"class.extensions::(anonymous namespace)::ComparablePermission"* [ null, %221 ], [ %255, %307 ]
  %313 = bitcast %"class.std::__1::vector.100"* %19 to i8*
  call void @llvm.lifetime.start.p0i8(i64 24, i8* nonnull %313) #14
  %314 = getelementptr inbounds %"class.std::__1::vector.100", %"class.std::__1::vector.100"* %19, i64 0, i32 0, i32 0
  %315 = getelementptr inbounds %"class.std::__1::vector.100", %"class.std::__1::vector.100"* %19, i64 0, i32 0, i32 1
  %316 = getelementptr inbounds %"class.std::__1::vector.100", %"class.std::__1::vector.100"* %19, i64 0, i32 0, i32 2, i32 0, i32 0
  %317 = load %"class.extensions::PermissionMessage"*, %"class.extensions::PermissionMessage"** %231, align 8
  %318 = ptrtoint %"class.extensions::PermissionMessage"* %317 to i64
  %319 = load %"class.extensions::PermissionMessage"*, %"class.extensions::PermissionMessage"** %232, align 8
  call void @llvm.memset.p0i8.i64(i8* nonnull align 8 %313, i8 0, i64 24, i1 false) #14
  %320 = ptrtoint %"class.extensions::PermissionMessage"* %319 to i64
  %321 = sub i64 %320, %318
  %322 = sdiv exact i64 %321, 88
  %323 = icmp eq i64 %321, 0
  br i1 %323, label %385, label %324

324:                                              ; preds = %310
  %325 = icmp ugt i64 %322, 2305843009213693951
  br i1 %325, label %326, label %328

326:                                              ; preds = %324
  %327 = bitcast %"class.std::__1::vector.100"* %19 to %"class.std::__1::__vector_base_common"*
  call void @_ZNKSt3__120__vector_base_commonILb1EE20__throw_length_errorEv(%"class.std::__1::__vector_base_common"* nonnull %327) #15
  unreachable

328:                                              ; preds = %324
  %329 = shl nsw i64 %322, 3
  %330 = call i8* @_Znwm(i64 %329) #13
  %331 = bitcast i8* %330 to %"class.extensions::(anonymous namespace)::ComparablePermission"*
  %332 = bitcast %"class.extensions::(anonymous namespace)::ComparablePermission"** %315 to i8**
  store i8* %330, i8** %332, align 8
  %333 = bitcast %"class.std::__1::vector.100"* %19 to i8**
  store i8* %330, i8** %333, align 8
  %334 = getelementptr inbounds %"class.extensions::(anonymous namespace)::ComparablePermission", %"class.extensions::(anonymous namespace)::ComparablePermission"* %331, i64 %322
  store %"class.extensions::(anonymous namespace)::ComparablePermission"* %334, %"class.extensions::(anonymous namespace)::ComparablePermission"** %316, align 8
  %335 = bitcast %"class.extensions::(anonymous namespace)::ComparablePermission"** %315 to i64*
  %336 = ptrtoint i8* %330 to i64
  %337 = icmp eq %"class.extensions::PermissionMessage"* %317, %319
  br i1 %337, label %383, label %338

338:                                              ; preds = %328
  %339 = getelementptr %"class.extensions::PermissionMessage", %"class.extensions::PermissionMessage"* %319, i64 -1, i32 0
  %340 = ptrtoint i32 (...)*** %339 to i64
  %341 = sub i64 %340, %318
  %342 = udiv i64 %341, 88
  %343 = add nuw nsw i64 %342, 1
  %344 = icmp ult i64 %343, 4
  br i1 %344, label %370, label %345

345:                                              ; preds = %338
  %346 = and i64 %343, 576460752303423484
  %347 = getelementptr %"class.extensions::(anonymous namespace)::ComparablePermission", %"class.extensions::(anonymous namespace)::ComparablePermission"* %331, i64 %346
  %348 = getelementptr %"class.extensions::PermissionMessage", %"class.extensions::PermissionMessage"* %317, i64 %346
  br label %349

349:                                              ; preds = %349, %345
  %350 = phi i64 [ 0, %345 ], [ %366, %349 ]
  %351 = getelementptr %"class.extensions::PermissionMessage", %"class.extensions::PermissionMessage"* %317, i64 %350
  %352 = or i64 %350, 1
  %353 = getelementptr %"class.extensions::PermissionMessage", %"class.extensions::PermissionMessage"* %317, i64 %352
  %354 = insertelement <2 x %"class.extensions::PermissionMessage"*> undef, %"class.extensions::PermissionMessage"* %351, i32 0
  %355 = insertelement <2 x %"class.extensions::PermissionMessage"*> %354, %"class.extensions::PermissionMessage"* %353, i32 1
  %356 = or i64 %350, 2
  %357 = getelementptr %"class.extensions::PermissionMessage", %"class.extensions::PermissionMessage"* %317, i64 %356
  %358 = or i64 %350, 3
  %359 = getelementptr %"class.extensions::PermissionMessage", %"class.extensions::PermissionMessage"* %317, i64 %358
  %360 = insertelement <2 x %"class.extensions::PermissionMessage"*> undef, %"class.extensions::PermissionMessage"* %357, i32 0
  %361 = insertelement <2 x %"class.extensions::PermissionMessage"*> %360, %"class.extensions::PermissionMessage"* %359, i32 1
  %362 = getelementptr inbounds %"class.extensions::(anonymous namespace)::ComparablePermission", %"class.extensions::(anonymous namespace)::ComparablePermission"* %331, i64 %350, i32 0
  %363 = bitcast %"class.extensions::PermissionMessage"** %362 to <2 x %"class.extensions::PermissionMessage"*>*
  store <2 x %"class.extensions::PermissionMessage"*> %355, <2 x %"class.extensions::PermissionMessage"*>* %363, align 8
  %364 = getelementptr %"class.extensions::PermissionMessage"*, %"class.extensions::PermissionMessage"** %362, i64 2
  %365 = bitcast %"class.extensions::PermissionMessage"** %364 to <2 x %"class.extensions::PermissionMessage"*>*
  store <2 x %"class.extensions::PermissionMessage"*> %361, <2 x %"class.extensions::PermissionMessage"*>* %365, align 8
  %366 = add i64 %350, 4
  %367 = icmp eq i64 %366, %346
  br i1 %367, label %368, label %349, !llvm.loop !21

368:                                              ; preds = %349
  %369 = icmp eq i64 %343, %346
  br i1 %369, label %380, label %370

370:                                              ; preds = %368, %338
  %371 = phi %"class.extensions::(anonymous namespace)::ComparablePermission"* [ %331, %338 ], [ %347, %368 ]
  %372 = phi %"class.extensions::PermissionMessage"* [ %317, %338 ], [ %348, %368 ]
  br label %373

373:                                              ; preds = %370, %373
  %374 = phi %"class.extensions::(anonymous namespace)::ComparablePermission"* [ %378, %373 ], [ %371, %370 ]
  %375 = phi %"class.extensions::PermissionMessage"* [ %377, %373 ], [ %372, %370 ]
  %376 = getelementptr inbounds %"class.extensions::(anonymous namespace)::ComparablePermission", %"class.extensions::(anonymous namespace)::ComparablePermission"* %374, i64 0, i32 0
  store %"class.extensions::PermissionMessage"* %375, %"class.extensions::PermissionMessage"** %376, align 8
  %377 = getelementptr inbounds %"class.extensions::PermissionMessage", %"class.extensions::PermissionMessage"* %375, i64 1
  %378 = getelementptr inbounds %"class.extensions::(anonymous namespace)::ComparablePermission", %"class.extensions::(anonymous namespace)::ComparablePermission"* %374, i64 1
  %379 = icmp eq %"class.extensions::PermissionMessage"* %377, %319
  br i1 %379, label %380, label %373, !llvm.loop !22

380:                                              ; preds = %373, %368
  %381 = phi %"class.extensions::(anonymous namespace)::ComparablePermission"* [ %347, %368 ], [ %378, %373 ]
  %382 = ptrtoint %"class.extensions::(anonymous namespace)::ComparablePermission"* %381 to i64
  br label %383

383:                                              ; preds = %380, %328
  %384 = phi i64 [ %336, %328 ], [ %382, %380 ]
  store i64 %384, i64* %335, align 8
  br label %385

385:                                              ; preds = %310, %383
  call fastcc void @_ZNSt3__16__sortIRNS_6__lessIN10extensions12_GLOBAL__N_120ComparablePermissionES4_EEPS4_EEvT0_S8_T_(%"class.extensions::(anonymous namespace)::ComparablePermission"* %312, %"class.extensions::(anonymous namespace)::ComparablePermission"* %311) #14
  %386 = load %"class.extensions::(anonymous namespace)::ComparablePermission"*, %"class.extensions::(anonymous namespace)::ComparablePermission"** %314, align 8
  %387 = load %"class.extensions::(anonymous namespace)::ComparablePermission"*, %"class.extensions::(anonymous namespace)::ComparablePermission"** %315, align 8
  call fastcc void @_ZNSt3__16__sortIRNS_6__lessIN10extensions12_GLOBAL__N_120ComparablePermissionES4_EEPS4_EEvT0_S8_T_(%"class.extensions::(anonymous namespace)::ComparablePermission"* %386, %"class.extensions::(anonymous namespace)::ComparablePermission"* %387) #14
  %388 = load %"class.extensions::(anonymous namespace)::ComparablePermission"*, %"class.extensions::(anonymous namespace)::ComparablePermission"** %239, align 8
  %389 = load %"class.extensions::(anonymous namespace)::ComparablePermission"*, %"class.extensions::(anonymous namespace)::ComparablePermission"** %314, align 8
  %390 = load %"class.extensions::(anonymous namespace)::ComparablePermission"*, %"class.extensions::(anonymous namespace)::ComparablePermission"** %315, align 8
  %391 = icmp eq %"class.extensions::(anonymous namespace)::ComparablePermission"* %389, %390
  br i1 %391, label %437, label %392

392:                                              ; preds = %385
  %393 = load %"class.extensions::(anonymous namespace)::ComparablePermission"*, %"class.extensions::(anonymous namespace)::ComparablePermission"** %238, align 8
  %394 = bitcast %"class.std::__1::tuple"* %5 to i8*
  %395 = getelementptr inbounds %"class.std::__1::tuple", %"class.std::__1::tuple"* %5, i64 0, i32 0, i32 0, i32 0
  %396 = getelementptr inbounds %"class.std::__1::tuple", %"class.std::__1::tuple"* %5, i64 0, i32 0, i32 1, i32 0
  %397 = bitcast %"class.std::__1::tuple"* %6 to i8*
  %398 = getelementptr inbounds %"class.std::__1::tuple", %"class.std::__1::tuple"* %6, i64 0, i32 0, i32 0, i32 0
  %399 = getelementptr inbounds %"class.std::__1::tuple", %"class.std::__1::tuple"* %6, i64 0, i32 0, i32 1, i32 0
  %400 = getelementptr inbounds %"struct.std::__1::__tuple_less", %"struct.std::__1::__tuple_less"* %4, i64 0, i32 0
  %401 = bitcast %"class.std::__1::tuple"* %8 to i8*
  %402 = getelementptr inbounds %"class.std::__1::tuple", %"class.std::__1::tuple"* %8, i64 0, i32 0, i32 0, i32 0
  %403 = getelementptr inbounds %"class.std::__1::tuple", %"class.std::__1::tuple"* %8, i64 0, i32 0, i32 1, i32 0
  %404 = bitcast %"class.std::__1::tuple"* %9 to i8*
  %405 = getelementptr inbounds %"class.std::__1::tuple", %"class.std::__1::tuple"* %9, i64 0, i32 0, i32 0, i32 0
  %406 = getelementptr inbounds %"class.std::__1::tuple", %"class.std::__1::tuple"* %9, i64 0, i32 0, i32 1, i32 0
  %407 = getelementptr inbounds %"struct.std::__1::__tuple_less", %"struct.std::__1::__tuple_less"* %7, i64 0, i32 0
  br label %408

408:                                              ; preds = %422, %392
  %409 = phi %"class.extensions::(anonymous namespace)::ComparablePermission"* [ %393, %392 ], [ %432, %422 ]
  %410 = phi %"class.extensions::(anonymous namespace)::ComparablePermission"* [ %389, %392 ], [ %431, %422 ]
  %411 = icmp eq %"class.extensions::(anonymous namespace)::ComparablePermission"* %409, %388
  br i1 %411, label %434, label %412

412:                                              ; preds = %408
  call void @llvm.lifetime.start.p0i8(i64 16, i8* nonnull %394) #14
  %413 = getelementptr inbounds %"class.extensions::(anonymous namespace)::ComparablePermission", %"class.extensions::(anonymous namespace)::ComparablePermission"* %410, i64 0, i32 0
  %414 = load %"class.extensions::PermissionMessage"*, %"class.extensions::PermissionMessage"** %413, align 8
  %415 = getelementptr inbounds %"class.extensions::PermissionMessage", %"class.extensions::PermissionMessage"* %414, i64 0, i32 1
  %416 = getelementptr inbounds %"class.extensions::PermissionMessage", %"class.extensions::PermissionMessage"* %414, i64 0, i32 3
  store %"class.std::__1::basic_string"* %415, %"class.std::__1::basic_string"** %395, align 8
  store %"class.std::__1::vector.9"* %416, %"class.std::__1::vector.9"** %396, align 8
  call void @llvm.lifetime.start.p0i8(i64 16, i8* nonnull %397) #14
  %417 = getelementptr inbounds %"class.extensions::(anonymous namespace)::ComparablePermission", %"class.extensions::(anonymous namespace)::ComparablePermission"* %409, i64 0, i32 0
  %418 = load %"class.extensions::PermissionMessage"*, %"class.extensions::PermissionMessage"** %417, align 8
  %419 = getelementptr inbounds %"class.extensions::PermissionMessage", %"class.extensions::PermissionMessage"* %418, i64 0, i32 1
  %420 = getelementptr inbounds %"class.extensions::PermissionMessage", %"class.extensions::PermissionMessage"* %418, i64 0, i32 3
  store %"class.std::__1::basic_string"* %419, %"class.std::__1::basic_string"** %398, align 8
  store %"class.std::__1::vector.9"* %420, %"class.std::__1::vector.9"** %399, align 8
  call void @llvm.lifetime.start.p0i8(i64 1, i8* nonnull %400) #14
  %421 = call zeroext i1 @_ZNSt3__112__tuple_lessILm2EEclINS_5tupleIJRKNS_12basic_stringIDsNS_11char_traitsIDsEENS_9allocatorIDsEEEERKNS_6vectorIS9_NS7_IS9_EEEEEEESH_EEbRKT_RKT0_(%"struct.std::__1::__tuple_less"* nonnull %4, %"class.std::__1::tuple"* nonnull dereferenceable(16) %5, %"class.std::__1::tuple"* nonnull dereferenceable(16) %6) #14
  call void @llvm.lifetime.end.p0i8(i64 1, i8* nonnull %400) #14
  call void @llvm.lifetime.end.p0i8(i64 16, i8* nonnull %397) #14
  call void @llvm.lifetime.end.p0i8(i64 16, i8* nonnull %394) #14
  br i1 %421, label %434, label %422

422:                                              ; preds = %412
  call void @llvm.lifetime.start.p0i8(i64 16, i8* nonnull %401) #14
  %423 = load %"class.extensions::PermissionMessage"*, %"class.extensions::PermissionMessage"** %417, align 8
  %424 = getelementptr inbounds %"class.extensions::PermissionMessage", %"class.extensions::PermissionMessage"* %423, i64 0, i32 1
  %425 = getelementptr inbounds %"class.extensions::PermissionMessage", %"class.extensions::PermissionMessage"* %423, i64 0, i32 3
  store %"class.std::__1::basic_string"* %424, %"class.std::__1::basic_string"** %402, align 8
  store %"class.std::__1::vector.9"* %425, %"class.std::__1::vector.9"** %403, align 8
  call void @llvm.lifetime.start.p0i8(i64 16, i8* nonnull %404) #14
  %426 = load %"class.extensions::PermissionMessage"*, %"class.extensions::PermissionMessage"** %413, align 8
  %427 = getelementptr inbounds %"class.extensions::PermissionMessage", %"class.extensions::PermissionMessage"* %426, i64 0, i32 1
  %428 = getelementptr inbounds %"class.extensions::PermissionMessage", %"class.extensions::PermissionMessage"* %426, i64 0, i32 3
  store %"class.std::__1::basic_string"* %427, %"class.std::__1::basic_string"** %405, align 8
  store %"class.std::__1::vector.9"* %428, %"class.std::__1::vector.9"** %406, align 8
  call void @llvm.lifetime.start.p0i8(i64 1, i8* nonnull %407) #14
  %429 = call zeroext i1 @_ZNSt3__112__tuple_lessILm2EEclINS_5tupleIJRKNS_12basic_stringIDsNS_11char_traitsIDsEENS_9allocatorIDsEEEERKNS_6vectorIS9_NS7_IS9_EEEEEEESH_EEbRKT_RKT0_(%"struct.std::__1::__tuple_less"* nonnull %7, %"class.std::__1::tuple"* nonnull dereferenceable(16) %8, %"class.std::__1::tuple"* nonnull dereferenceable(16) %9) #14
  call void @llvm.lifetime.end.p0i8(i64 1, i8* nonnull %407) #14
  call void @llvm.lifetime.end.p0i8(i64 16, i8* nonnull %404) #14
  call void @llvm.lifetime.end.p0i8(i64 16, i8* nonnull %401) #14
  %430 = getelementptr inbounds %"class.extensions::(anonymous namespace)::ComparablePermission", %"class.extensions::(anonymous namespace)::ComparablePermission"* %410, i64 1
  %431 = select i1 %429, %"class.extensions::(anonymous namespace)::ComparablePermission"* %410, %"class.extensions::(anonymous namespace)::ComparablePermission"* %430
  %432 = getelementptr inbounds %"class.extensions::(anonymous namespace)::ComparablePermission", %"class.extensions::(anonymous namespace)::ComparablePermission"* %409, i64 1
  %433 = icmp eq %"class.extensions::(anonymous namespace)::ComparablePermission"* %431, %390
  br i1 %433, label %434, label %408

434:                                              ; preds = %422, %412, %408
  %435 = phi i1 [ true, %422 ], [ false, %408 ], [ false, %412 ]
  %436 = load %"class.extensions::(anonymous namespace)::ComparablePermission"*, %"class.extensions::(anonymous namespace)::ComparablePermission"** %314, align 8
  br label %437

437:                                              ; preds = %434, %385
  %438 = phi %"class.extensions::(anonymous namespace)::ComparablePermission"* [ %436, %434 ], [ %389, %385 ]
  %439 = phi i1 [ %435, %434 ], [ true, %385 ]
  %440 = xor i1 %439, true
  %441 = icmp eq %"class.extensions::(anonymous namespace)::ComparablePermission"* %438, null
  br i1 %441, label %446, label %442

442:                                              ; preds = %437
  %443 = ptrtoint %"class.extensions::(anonymous namespace)::ComparablePermission"* %438 to i64
  %444 = bitcast %"class.extensions::(anonymous namespace)::ComparablePermission"** %315 to i64*
  store i64 %443, i64* %444, align 8
  %445 = bitcast %"class.extensions::(anonymous namespace)::ComparablePermission"* %438 to i8*
  call void @_ZdlPv(i8* %445) #13
  br label %446

446:                                              ; preds = %437, %442
  call void @llvm.lifetime.end.p0i8(i64 24, i8* nonnull %313) #14
  %447 = load %"class.extensions::(anonymous namespace)::ComparablePermission"*, %"class.extensions::(anonymous namespace)::ComparablePermission"** %238, align 8
  %448 = icmp eq %"class.extensions::(anonymous namespace)::ComparablePermission"* %447, null
  br i1 %448, label %453, label %449

449:                                              ; preds = %446
  %450 = ptrtoint %"class.extensions::(anonymous namespace)::ComparablePermission"* %447 to i64
  %451 = bitcast %"class.extensions::(anonymous namespace)::ComparablePermission"** %239 to i64*
  store i64 %450, i64* %451, align 8
  %452 = bitcast %"class.extensions::(anonymous namespace)::ComparablePermission"* %447 to i8*
  call void @_ZdlPv(i8* %452) #13
  br label %453

453:                                              ; preds = %446, %449
  call void @llvm.lifetime.end.p0i8(i64 24, i8* nonnull %237) #14
  %454 = load %"class.extensions::PermissionMessage"*, %"class.extensions::PermissionMessage"** %231, align 8
  %455 = icmp eq %"class.extensions::PermissionMessage"* %454, null
  br i1 %455, label %472, label %456

456:                                              ; preds = %453
  %457 = bitcast %"class.extensions::PermissionMessage"* %454 to i8*
  %458 = load %"class.extensions::PermissionMessage"*, %"class.extensions::PermissionMessage"** %232, align 8
  %459 = icmp eq %"class.extensions::PermissionMessage"* %458, %454
  br i1 %459, label %470, label %460

460:                                              ; preds = %456, %460
  %461 = phi %"class.extensions::PermissionMessage"* [ %462, %460 ], [ %458, %456 ]
  %462 = getelementptr inbounds %"class.extensions::PermissionMessage", %"class.extensions::PermissionMessage"* %461, i64 -1
  %463 = bitcast %"class.extensions::PermissionMessage"* %462 to void (%"class.extensions::PermissionMessage"*)***
  %464 = load void (%"class.extensions::PermissionMessage"*)**, void (%"class.extensions::PermissionMessage"*)*** %463, align 8
  %465 = load void (%"class.extensions::PermissionMessage"*)*, void (%"class.extensions::PermissionMessage"*)** %464, align 8
  call void %465(%"class.extensions::PermissionMessage"* %462) #14
  %466 = icmp eq %"class.extensions::PermissionMessage"* %462, %454
  br i1 %466, label %467, label %460

467:                                              ; preds = %460
  %468 = bitcast %"class.std::__1::vector"* %17 to i8**
  %469 = load i8*, i8** %468, align 8
  br label %470

470:                                              ; preds = %467, %456
  %471 = phi i8* [ %469, %467 ], [ %457, %456 ]
  store %"class.extensions::PermissionMessage"* %454, %"class.extensions::PermissionMessage"** %232, align 8
  call void @_ZdlPv(i8* %471) #13
  br label %472

472:                                              ; preds = %453, %470
  call void @llvm.lifetime.end.p0i8(i64 24, i8* nonnull %230) #14
  %473 = load %"class.extensions::PermissionMessage"*, %"class.extensions::PermissionMessage"** %223, align 8
  %474 = icmp eq %"class.extensions::PermissionMessage"* %473, null
  br i1 %474, label %491, label %475

475:                                              ; preds = %472
  %476 = bitcast %"class.extensions::PermissionMessage"* %473 to i8*
  %477 = load %"class.extensions::PermissionMessage"*, %"class.extensions::PermissionMessage"** %224, align 8
  %478 = icmp eq %"class.extensions::PermissionMessage"* %477, %473
  br i1 %478, label %489, label %479

479:                                              ; preds = %475, %479
  %480 = phi %"class.extensions::PermissionMessage"* [ %481, %479 ], [ %477, %475 ]
  %481 = getelementptr inbounds %"class.extensions::PermissionMessage", %"class.extensions::PermissionMessage"* %480, i64 -1
  %482 = bitcast %"class.extensions::PermissionMessage"* %481 to void (%"class.extensions::PermissionMessage"*)***
  %483 = load void (%"class.extensions::PermissionMessage"*)**, void (%"class.extensions::PermissionMessage"*)*** %482, align 8
  %484 = load void (%"class.extensions::PermissionMessage"*)*, void (%"class.extensions::PermissionMessage"*)** %483, align 8
  call void %484(%"class.extensions::PermissionMessage"* %481) #14
  %485 = icmp eq %"class.extensions::PermissionMessage"* %481, %473
  br i1 %485, label %486, label %479

486:                                              ; preds = %479
  %487 = bitcast %"class.std::__1::vector"* %16 to i8**
  %488 = load i8*, i8** %487, align 8
  br label %489

489:                                              ; preds = %486, %475
  %490 = phi i8* [ %488, %486 ], [ %476, %475 ]
  store %"class.extensions::PermissionMessage"* %473, %"class.extensions::PermissionMessage"** %224, align 8
  call void @_ZdlPv(i8* %490) #13
  br label %491

491:                                              ; preds = %472, %489
  call void @llvm.lifetime.end.p0i8(i64 24, i8* nonnull %222) #14
  br label %492

492:                                              ; preds = %219, %491
  %493 = phi i1 [ %440, %491 ], [ false, %219 ]
  call void @_ZN10extensions15PermissionIDSetD1Ev(%"class.extensions::PermissionIDSet"* nonnull %15) #14
  call void @llvm.lifetime.end.p0i8(i64 32, i8* nonnull %120) #14
  call void @_ZN10extensions15PermissionIDSetD1Ev(%"class.extensions::PermissionIDSet"* nonnull %14) #14
  call void @llvm.lifetime.end.p0i8(i64 32, i8* nonnull %20) #14
  ret i1 %493
}

; Function Attrs: nounwind ssp uwtable
define hidden void @_ZNK10extensions31ChromePermissionMessageProvider19GetAllPermissionIDsERKNS_13PermissionSetENS_8Manifest4TypeE(%"class.extensions::PermissionIDSet"* noalias sret, %"class.extensions::ChromePermissionMessageProvider"* nocapture readnone, %"class.extensions::PermissionSet"* dereferenceable(128), i32) unnamed_addr #2 align 2 {
  %5 = alloca %"class.extensions::PermissionIDSet", align 8
  %6 = alloca %"class.extensions::PermissionIDSet", align 8
  %7 = bitcast %"class.extensions::PermissionIDSet"* %0 to i8*
  call void @llvm.memset.p0i8.i64(i8* align 8 %7, i8 -86, i64 32, i1 false)
  tail call void @_ZN10extensions15PermissionIDSetC1Ev(%"class.extensions::PermissionIDSet"* %0) #14
  %8 = bitcast %"class.extensions::PermissionSet"* %2 to i64*
  %9 = load i64, i64* %8, align 8, !noalias !23
  %10 = getelementptr inbounds %"class.extensions::PermissionSet", %"class.extensions::PermissionSet"* %2, i64 0, i32 0, i32 0, i32 0, i32 0, i32 1, i32 0, i32 0
  %11 = inttoptr i64 %9 to %"class.std::__1::__tree_end_node"*
  %12 = icmp eq %"class.std::__1::__tree_end_node"* %10, %11
  br i1 %12, label %54, label %13

13:                                               ; preds = %4
  %14 = bitcast %"class.extensions::PermissionIDSet"* %6 to i8*
  br label %15

15:                                               ; preds = %50, %13
  %16 = phi i64 [ %9, %13 ], [ %52, %50 ]
  %17 = inttoptr i64 %16 to %"class.std::__1::__tree_node.132"*
  %18 = getelementptr inbounds %"class.std::__1::__tree_node.132", %"class.std::__1::__tree_node.132"* %17, i64 0, i32 1, i32 0, i32 1, i32 0, i32 0, i32 0
  %19 = load %"class.extensions::APIPermission"*, %"class.extensions::APIPermission"** %18, align 8
  call void @llvm.lifetime.start.p0i8(i64 32, i8* nonnull %14) #14
  %20 = bitcast %"class.extensions::APIPermission"* %19 to void (%"class.extensions::PermissionIDSet"*, %"class.extensions::APIPermission"*)***
  %21 = load void (%"class.extensions::PermissionIDSet"*, %"class.extensions::APIPermission"*)**, void (%"class.extensions::PermissionIDSet"*, %"class.extensions::APIPermission"*)*** %20, align 8
  %22 = getelementptr inbounds void (%"class.extensions::PermissionIDSet"*, %"class.extensions::APIPermission"*)*, void (%"class.extensions::PermissionIDSet"*, %"class.extensions::APIPermission"*)** %21, i64 2
  %23 = load void (%"class.extensions::PermissionIDSet"*, %"class.extensions::APIPermission"*)*, void (%"class.extensions::PermissionIDSet"*, %"class.extensions::APIPermission"*)** %22, align 8
  call void %23(%"class.extensions::PermissionIDSet"* nonnull sret %6, %"class.extensions::APIPermission"* %19) #14
  call void @_ZN10extensions15PermissionIDSet9InsertAllERKS0_(%"class.extensions::PermissionIDSet"* %0, %"class.extensions::PermissionIDSet"* nonnull dereferenceable(32) %6) #14
  call void @_ZN10extensions15PermissionIDSetD1Ev(%"class.extensions::PermissionIDSet"* nonnull %6) #14
  call void @llvm.lifetime.end.p0i8(i64 32, i8* nonnull %14) #14
  %24 = inttoptr i64 %16 to %"class.std::__1::__tree_node_base"*
  %25 = getelementptr inbounds %"class.std::__1::__tree_node_base", %"class.std::__1::__tree_node_base"* %24, i64 0, i32 1
  %26 = load %"class.std::__1::__tree_node_base"*, %"class.std::__1::__tree_node_base"** %25, align 8
  %27 = icmp eq %"class.std::__1::__tree_node_base"* %26, null
  br i1 %27, label %28, label %34

28:                                               ; preds = %15
  %29 = getelementptr inbounds %"class.std::__1::__tree_node_base", %"class.std::__1::__tree_node_base"* %24, i64 0, i32 2
  %30 = load %"class.std::__1::__tree_end_node"*, %"class.std::__1::__tree_end_node"** %29, align 8
  %31 = getelementptr inbounds %"class.std::__1::__tree_end_node", %"class.std::__1::__tree_end_node"* %30, i64 0, i32 0
  %32 = load %"class.std::__1::__tree_node_base"*, %"class.std::__1::__tree_node_base"** %31, align 8
  %33 = icmp eq %"class.std::__1::__tree_node_base"* %32, %24
  br i1 %33, label %50, label %41

34:                                               ; preds = %15, %34
  %35 = phi %"class.std::__1::__tree_node_base"* [ %37, %34 ], [ %26, %15 ]
  %36 = getelementptr inbounds %"class.std::__1::__tree_node_base", %"class.std::__1::__tree_node_base"* %35, i64 0, i32 0, i32 0
  %37 = load %"class.std::__1::__tree_node_base"*, %"class.std::__1::__tree_node_base"** %36, align 8
  %38 = icmp eq %"class.std::__1::__tree_node_base"* %37, null
  br i1 %38, label %39, label %34

39:                                               ; preds = %34
  %40 = getelementptr inbounds %"class.std::__1::__tree_node_base", %"class.std::__1::__tree_node_base"* %35, i64 0, i32 0
  br label %50

41:                                               ; preds = %28, %41
  %42 = phi %"class.std::__1::__tree_end_node"** [ %45, %41 ], [ %29, %28 ]
  %43 = bitcast %"class.std::__1::__tree_end_node"** %42 to %"class.std::__1::__tree_node_base"**
  %44 = load %"class.std::__1::__tree_node_base"*, %"class.std::__1::__tree_node_base"** %43, align 8
  %45 = getelementptr inbounds %"class.std::__1::__tree_node_base", %"class.std::__1::__tree_node_base"* %44, i64 0, i32 2
  %46 = load %"class.std::__1::__tree_end_node"*, %"class.std::__1::__tree_end_node"** %45, align 8
  %47 = getelementptr inbounds %"class.std::__1::__tree_end_node", %"class.std::__1::__tree_end_node"* %46, i64 0, i32 0
  %48 = load %"class.std::__1::__tree_node_base"*, %"class.std::__1::__tree_node_base"** %47, align 8
  %49 = icmp eq %"class.std::__1::__tree_node_base"* %48, %44
  br i1 %49, label %50, label %41

50:                                               ; preds = %41, %39, %28
  %51 = phi %"class.std::__1::__tree_end_node"* [ %40, %39 ], [ %30, %28 ], [ %46, %41 ]
  %52 = ptrtoint %"class.std::__1::__tree_end_node"* %51 to i64
  %53 = icmp eq %"class.std::__1::__tree_end_node"* %10, %51
  br i1 %53, label %54, label %15

54:                                               ; preds = %50, %4
  %55 = getelementptr inbounds %"class.extensions::PermissionSet", %"class.extensions::PermissionSet"* %2, i64 0, i32 1, i32 0
  %56 = bitcast %"class.extensions::BaseSetOperators.48"* %55 to i64*
  %57 = load i64, i64* %56, align 8, !noalias !26
  %58 = getelementptr inbounds %"class.extensions::PermissionSet", %"class.extensions::PermissionSet"* %2, i64 0, i32 1, i32 0, i32 0, i32 0, i32 1, i32 0, i32 0
  %59 = inttoptr i64 %57 to %"class.std::__1::__tree_end_node"*
  %60 = icmp eq %"class.std::__1::__tree_end_node"* %58, %59
  br i1 %60, label %102, label %61

61:                                               ; preds = %54
  %62 = bitcast %"class.extensions::PermissionIDSet"* %5 to i8*
  br label %63

63:                                               ; preds = %98, %61
  %64 = phi i64 [ %57, %61 ], [ %100, %98 ]
  %65 = inttoptr i64 %64 to %"class.std::__1::__tree_node.141"*
  %66 = getelementptr inbounds %"class.std::__1::__tree_node.141", %"class.std::__1::__tree_node.141"* %65, i64 0, i32 1, i32 0, i32 1, i32 0, i32 0, i32 0
  %67 = load %"class.extensions::ManifestPermission"*, %"class.extensions::ManifestPermission"** %66, align 8
  call void @llvm.lifetime.start.p0i8(i64 32, i8* nonnull %62) #14
  %68 = bitcast %"class.extensions::ManifestPermission"* %67 to void (%"class.extensions::PermissionIDSet"*, %"class.extensions::ManifestPermission"*)***
  %69 = load void (%"class.extensions::PermissionIDSet"*, %"class.extensions::ManifestPermission"*)**, void (%"class.extensions::PermissionIDSet"*, %"class.extensions::ManifestPermission"*)*** %68, align 8
  %70 = getelementptr inbounds void (%"class.extensions::PermissionIDSet"*, %"class.extensions::ManifestPermission"*)*, void (%"class.extensions::PermissionIDSet"*, %"class.extensions::ManifestPermission"*)** %69, i64 4
  %71 = load void (%"class.extensions::PermissionIDSet"*, %"class.extensions::ManifestPermission"*)*, void (%"class.extensions::PermissionIDSet"*, %"class.extensions::ManifestPermission"*)** %70, align 8
  call void %71(%"class.extensions::PermissionIDSet"* nonnull sret %5, %"class.extensions::ManifestPermission"* %67) #14
  call void @_ZN10extensions15PermissionIDSet9InsertAllERKS0_(%"class.extensions::PermissionIDSet"* %0, %"class.extensions::PermissionIDSet"* nonnull dereferenceable(32) %5) #14
  call void @_ZN10extensions15PermissionIDSetD1Ev(%"class.extensions::PermissionIDSet"* nonnull %5) #14
  call void @llvm.lifetime.end.p0i8(i64 32, i8* nonnull %62) #14
  %72 = inttoptr i64 %64 to %"class.std::__1::__tree_node_base"*
  %73 = getelementptr inbounds %"class.std::__1::__tree_node_base", %"class.std::__1::__tree_node_base"* %72, i64 0, i32 1
  %74 = load %"class.std::__1::__tree_node_base"*, %"class.std::__1::__tree_node_base"** %73, align 8
  %75 = icmp eq %"class.std::__1::__tree_node_base"* %74, null
  br i1 %75, label %76, label %82

76:                                               ; preds = %63
  %77 = getelementptr inbounds %"class.std::__1::__tree_node_base", %"class.std::__1::__tree_node_base"* %72, i64 0, i32 2
  %78 = load %"class.std::__1::__tree_end_node"*, %"class.std::__1::__tree_end_node"** %77, align 8
  %79 = getelementptr inbounds %"class.std::__1::__tree_end_node", %"class.std::__1::__tree_end_node"* %78, i64 0, i32 0
  %80 = load %"class.std::__1::__tree_node_base"*, %"class.std::__1::__tree_node_base"** %79, align 8
  %81 = icmp eq %"class.std::__1::__tree_node_base"* %80, %72
  br i1 %81, label %98, label %89

82:                                               ; preds = %63, %82
  %83 = phi %"class.std::__1::__tree_node_base"* [ %85, %82 ], [ %74, %63 ]
  %84 = getelementptr inbounds %"class.std::__1::__tree_node_base", %"class.std::__1::__tree_node_base"* %83, i64 0, i32 0, i32 0
  %85 = load %"class.std::__1::__tree_node_base"*, %"class.std::__1::__tree_node_base"** %84, align 8
  %86 = icmp eq %"class.std::__1::__tree_node_base"* %85, null
  br i1 %86, label %87, label %82

87:                                               ; preds = %82
  %88 = getelementptr inbounds %"class.std::__1::__tree_node_base", %"class.std::__1::__tree_node_base"* %83, i64 0, i32 0
  br label %98

89:                                               ; preds = %76, %89
  %90 = phi %"class.std::__1::__tree_end_node"** [ %93, %89 ], [ %77, %76 ]
  %91 = bitcast %"class.std::__1::__tree_end_node"** %90 to %"class.std::__1::__tree_node_base"**
  %92 = load %"class.std::__1::__tree_node_base"*, %"class.std::__1::__tree_node_base"** %91, align 8
  %93 = getelementptr inbounds %"class.std::__1::__tree_node_base", %"class.std::__1::__tree_node_base"* %92, i64 0, i32 2
  %94 = load %"class.std::__1::__tree_end_node"*, %"class.std::__1::__tree_end_node"** %93, align 8
  %95 = getelementptr inbounds %"class.std::__1::__tree_end_node", %"class.std::__1::__tree_end_node"* %94, i64 0, i32 0
  %96 = load %"class.std::__1::__tree_node_base"*, %"class.std::__1::__tree_node_base"** %95, align 8
  %97 = icmp eq %"class.std::__1::__tree_node_base"* %96, %92
  br i1 %97, label %98, label %89

98:                                               ; preds = %89, %87, %76
  %99 = phi %"class.std::__1::__tree_end_node"* [ %88, %87 ], [ %78, %76 ], [ %94, %89 ]
  %100 = ptrtoint %"class.std::__1::__tree_end_node"* %99 to i64
  %101 = icmp eq %"class.std::__1::__tree_end_node"* %58, %99
  br i1 %101, label %102, label %63

102:                                              ; preds = %98, %54
  call void @_ZNK10extensions31ChromePermissionMessageProvider18AddHostPermissionsERKNS_13PermissionSetEPNS_15PermissionIDSetENS_8Manifest4TypeE(%"class.extensions::ChromePermissionMessageProvider"* undef, %"class.extensions::PermissionSet"* dereferenceable(128) %2, %"class.extensions::PermissionIDSet"* %0, i32 %3)
  ret void
}

declare void @_ZN10extensions15PermissionIDSetC1Ev(%"class.extensions::PermissionIDSet"*) unnamed_addr #5

; Function Attrs: nounwind ssp uwtable
define hidden void @_ZNK10extensions31ChromePermissionMessageProvider17AddAPIPermissionsERKNS_13PermissionSetEPNS_15PermissionIDSetE(%"class.extensions::ChromePermissionMessageProvider"* nocapture readnone, %"class.extensions::PermissionSet"* dereferenceable(128), %"class.extensions::PermissionIDSet"*) local_unnamed_addr #2 align 2 {
  %4 = alloca %"class.extensions::PermissionIDSet", align 8
  %5 = bitcast %"class.extensions::PermissionSet"* %1 to i64*
  %6 = load i64, i64* %5, align 8, !noalias !29
  %7 = getelementptr inbounds %"class.extensions::PermissionSet", %"class.extensions::PermissionSet"* %1, i64 0, i32 0, i32 0, i32 0, i32 0, i32 1, i32 0, i32 0
  %8 = inttoptr i64 %6 to %"class.std::__1::__tree_end_node"*
  %9 = icmp eq %"class.std::__1::__tree_end_node"* %7, %8
  br i1 %9, label %12, label %10

10:                                               ; preds = %3
  %11 = bitcast %"class.extensions::PermissionIDSet"* %4 to i8*
  br label %13

12:                                               ; preds = %48, %3
  ret void

13:                                               ; preds = %10, %48
  %14 = phi i64 [ %6, %10 ], [ %50, %48 ]
  %15 = inttoptr i64 %14 to %"class.std::__1::__tree_node.132"*
  %16 = getelementptr inbounds %"class.std::__1::__tree_node.132", %"class.std::__1::__tree_node.132"* %15, i64 0, i32 1, i32 0, i32 1, i32 0, i32 0, i32 0
  %17 = load %"class.extensions::APIPermission"*, %"class.extensions::APIPermission"** %16, align 8
  call void @llvm.lifetime.start.p0i8(i64 32, i8* nonnull %11) #14
  %18 = bitcast %"class.extensions::APIPermission"* %17 to void (%"class.extensions::PermissionIDSet"*, %"class.extensions::APIPermission"*)***
  %19 = load void (%"class.extensions::PermissionIDSet"*, %"class.extensions::APIPermission"*)**, void (%"class.extensions::PermissionIDSet"*, %"class.extensions::APIPermission"*)*** %18, align 8
  %20 = getelementptr inbounds void (%"class.extensions::PermissionIDSet"*, %"class.extensions::APIPermission"*)*, void (%"class.extensions::PermissionIDSet"*, %"class.extensions::APIPermission"*)** %19, i64 2
  %21 = load void (%"class.extensions::PermissionIDSet"*, %"class.extensions::APIPermission"*)*, void (%"class.extensions::PermissionIDSet"*, %"class.extensions::APIPermission"*)** %20, align 8
  call void %21(%"class.extensions::PermissionIDSet"* nonnull sret %4, %"class.extensions::APIPermission"* %17) #14
  call void @_ZN10extensions15PermissionIDSet9InsertAllERKS0_(%"class.extensions::PermissionIDSet"* %2, %"class.extensions::PermissionIDSet"* nonnull dereferenceable(32) %4) #14
  call void @_ZN10extensions15PermissionIDSetD1Ev(%"class.extensions::PermissionIDSet"* nonnull %4) #14
  call void @llvm.lifetime.end.p0i8(i64 32, i8* nonnull %11) #14
  %22 = inttoptr i64 %14 to %"class.std::__1::__tree_node_base"*
  %23 = getelementptr inbounds %"class.std::__1::__tree_node_base", %"class.std::__1::__tree_node_base"* %22, i64 0, i32 1
  %24 = load %"class.std::__1::__tree_node_base"*, %"class.std::__1::__tree_node_base"** %23, align 8
  %25 = icmp eq %"class.std::__1::__tree_node_base"* %24, null
  br i1 %25, label %26, label %32

26:                                               ; preds = %13
  %27 = getelementptr inbounds %"class.std::__1::__tree_node_base", %"class.std::__1::__tree_node_base"* %22, i64 0, i32 2
  %28 = load %"class.std::__1::__tree_end_node"*, %"class.std::__1::__tree_end_node"** %27, align 8
  %29 = getelementptr inbounds %"class.std::__1::__tree_end_node", %"class.std::__1::__tree_end_node"* %28, i64 0, i32 0
  %30 = load %"class.std::__1::__tree_node_base"*, %"class.std::__1::__tree_node_base"** %29, align 8
  %31 = icmp eq %"class.std::__1::__tree_node_base"* %30, %22
  br i1 %31, label %48, label %39

32:                                               ; preds = %13, %32
  %33 = phi %"class.std::__1::__tree_node_base"* [ %35, %32 ], [ %24, %13 ]
  %34 = getelementptr inbounds %"class.std::__1::__tree_node_base", %"class.std::__1::__tree_node_base"* %33, i64 0, i32 0, i32 0
  %35 = load %"class.std::__1::__tree_node_base"*, %"class.std::__1::__tree_node_base"** %34, align 8
  %36 = icmp eq %"class.std::__1::__tree_node_base"* %35, null
  br i1 %36, label %37, label %32

37:                                               ; preds = %32
  %38 = getelementptr inbounds %"class.std::__1::__tree_node_base", %"class.std::__1::__tree_node_base"* %33, i64 0, i32 0
  br label %48

39:                                               ; preds = %26, %39
  %40 = phi %"class.std::__1::__tree_end_node"** [ %43, %39 ], [ %27, %26 ]
  %41 = bitcast %"class.std::__1::__tree_end_node"** %40 to %"class.std::__1::__tree_node_base"**
  %42 = load %"class.std::__1::__tree_node_base"*, %"class.std::__1::__tree_node_base"** %41, align 8
  %43 = getelementptr inbounds %"class.std::__1::__tree_node_base", %"class.std::__1::__tree_node_base"* %42, i64 0, i32 2
  %44 = load %"class.std::__1::__tree_end_node"*, %"class.std::__1::__tree_end_node"** %43, align 8
  %45 = getelementptr inbounds %"class.std::__1::__tree_end_node", %"class.std::__1::__tree_end_node"* %44, i64 0, i32 0
  %46 = load %"class.std::__1::__tree_node_base"*, %"class.std::__1::__tree_node_base"** %45, align 8
  %47 = icmp eq %"class.std::__1::__tree_node_base"* %46, %42
  br i1 %47, label %48, label %39

48:                                               ; preds = %39, %26, %37
  %49 = phi %"class.std::__1::__tree_end_node"* [ %38, %37 ], [ %28, %26 ], [ %44, %39 ]
  %50 = ptrtoint %"class.std::__1::__tree_end_node"* %49 to i64
  %51 = icmp eq %"class.std::__1::__tree_end_node"* %7, %49
  br i1 %51, label %12, label %13
}

; Function Attrs: nounwind ssp uwtable
define hidden void @_ZNK10extensions31ChromePermissionMessageProvider22AddManifestPermissionsERKNS_13PermissionSetEPNS_15PermissionIDSetE(%"class.extensions::ChromePermissionMessageProvider"* nocapture readnone, %"class.extensions::PermissionSet"* dereferenceable(128), %"class.extensions::PermissionIDSet"*) local_unnamed_addr #2 align 2 {
  %4 = alloca %"class.extensions::PermissionIDSet", align 8
  %5 = getelementptr inbounds %"class.extensions::PermissionSet", %"class.extensions::PermissionSet"* %1, i64 0, i32 1, i32 0
  %6 = bitcast %"class.extensions::BaseSetOperators.48"* %5 to i64*
  %7 = load i64, i64* %6, align 8, !noalias !32
  %8 = getelementptr inbounds %"class.extensions::PermissionSet", %"class.extensions::PermissionSet"* %1, i64 0, i32 1, i32 0, i32 0, i32 0, i32 1, i32 0, i32 0
  %9 = inttoptr i64 %7 to %"class.std::__1::__tree_end_node"*
  %10 = icmp eq %"class.std::__1::__tree_end_node"* %8, %9
  br i1 %10, label %13, label %11

11:                                               ; preds = %3
  %12 = bitcast %"class.extensions::PermissionIDSet"* %4 to i8*
  br label %14

13:                                               ; preds = %49, %3
  ret void

14:                                               ; preds = %11, %49
  %15 = phi i64 [ %7, %11 ], [ %51, %49 ]
  %16 = inttoptr i64 %15 to %"class.std::__1::__tree_node.141"*
  %17 = getelementptr inbounds %"class.std::__1::__tree_node.141", %"class.std::__1::__tree_node.141"* %16, i64 0, i32 1, i32 0, i32 1, i32 0, i32 0, i32 0
  %18 = load %"class.extensions::ManifestPermission"*, %"class.extensions::ManifestPermission"** %17, align 8
  call void @llvm.lifetime.start.p0i8(i64 32, i8* nonnull %12) #14
  %19 = bitcast %"class.extensions::ManifestPermission"* %18 to void (%"class.extensions::PermissionIDSet"*, %"class.extensions::ManifestPermission"*)***
  %20 = load void (%"class.extensions::PermissionIDSet"*, %"class.extensions::ManifestPermission"*)**, void (%"class.extensions::PermissionIDSet"*, %"class.extensions::ManifestPermission"*)*** %19, align 8
  %21 = getelementptr inbounds void (%"class.extensions::PermissionIDSet"*, %"class.extensions::ManifestPermission"*)*, void (%"class.extensions::PermissionIDSet"*, %"class.extensions::ManifestPermission"*)** %20, i64 4
  %22 = load void (%"class.extensions::PermissionIDSet"*, %"class.extensions::ManifestPermission"*)*, void (%"class.extensions::PermissionIDSet"*, %"class.extensions::ManifestPermission"*)** %21, align 8
  call void %22(%"class.extensions::PermissionIDSet"* nonnull sret %4, %"class.extensions::ManifestPermission"* %18) #14
  call void @_ZN10extensions15PermissionIDSet9InsertAllERKS0_(%"class.extensions::PermissionIDSet"* %2, %"class.extensions::PermissionIDSet"* nonnull dereferenceable(32) %4) #14
  call void @_ZN10extensions15PermissionIDSetD1Ev(%"class.extensions::PermissionIDSet"* nonnull %4) #14
  call void @llvm.lifetime.end.p0i8(i64 32, i8* nonnull %12) #14
  %23 = inttoptr i64 %15 to %"class.std::__1::__tree_node_base"*
  %24 = getelementptr inbounds %"class.std::__1::__tree_node_base", %"class.std::__1::__tree_node_base"* %23, i64 0, i32 1
  %25 = load %"class.std::__1::__tree_node_base"*, %"class.std::__1::__tree_node_base"** %24, align 8
  %26 = icmp eq %"class.std::__1::__tree_node_base"* %25, null
  br i1 %26, label %27, label %33

27:                                               ; preds = %14
  %28 = getelementptr inbounds %"class.std::__1::__tree_node_base", %"class.std::__1::__tree_node_base"* %23, i64 0, i32 2
  %29 = load %"class.std::__1::__tree_end_node"*, %"class.std::__1::__tree_end_node"** %28, align 8
  %30 = getelementptr inbounds %"class.std::__1::__tree_end_node", %"class.std::__1::__tree_end_node"* %29, i64 0, i32 0
  %31 = load %"class.std::__1::__tree_node_base"*, %"class.std::__1::__tree_node_base"** %30, align 8
  %32 = icmp eq %"class.std::__1::__tree_node_base"* %31, %23
  br i1 %32, label %49, label %40

33:                                               ; preds = %14, %33
  %34 = phi %"class.std::__1::__tree_node_base"* [ %36, %33 ], [ %25, %14 ]
  %35 = getelementptr inbounds %"class.std::__1::__tree_node_base", %"class.std::__1::__tree_node_base"* %34, i64 0, i32 0, i32 0
  %36 = load %"class.std::__1::__tree_node_base"*, %"class.std::__1::__tree_node_base"** %35, align 8
  %37 = icmp eq %"class.std::__1::__tree_node_base"* %36, null
  br i1 %37, label %38, label %33

38:                                               ; preds = %33
  %39 = getelementptr inbounds %"class.std::__1::__tree_node_base", %"class.std::__1::__tree_node_base"* %34, i64 0, i32 0
  br label %49

40:                                               ; preds = %27, %40
  %41 = phi %"class.std::__1::__tree_end_node"** [ %44, %40 ], [ %28, %27 ]
  %42 = bitcast %"class.std::__1::__tree_end_node"** %41 to %"class.std::__1::__tree_node_base"**
  %43 = load %"class.std::__1::__tree_node_base"*, %"class.std::__1::__tree_node_base"** %42, align 8
  %44 = getelementptr inbounds %"class.std::__1::__tree_node_base", %"class.std::__1::__tree_node_base"* %43, i64 0, i32 2
  %45 = load %"class.std::__1::__tree_end_node"*, %"class.std::__1::__tree_end_node"** %44, align 8
  %46 = getelementptr inbounds %"class.std::__1::__tree_end_node", %"class.std::__1::__tree_end_node"* %45, i64 0, i32 0
  %47 = load %"class.std::__1::__tree_node_base"*, %"class.std::__1::__tree_node_base"** %46, align 8
  %48 = icmp eq %"class.std::__1::__tree_node_base"* %47, %43
  br i1 %48, label %49, label %40

49:                                               ; preds = %40, %27, %38
  %50 = phi %"class.std::__1::__tree_end_node"* [ %39, %38 ], [ %29, %27 ], [ %45, %40 ]
  %51 = ptrtoint %"class.std::__1::__tree_end_node"* %50 to i64
  %52 = icmp eq %"class.std::__1::__tree_end_node"* %8, %50
  br i1 %52, label %13, label %14
}

; Function Attrs: nounwind ssp uwtable
define hidden void @_ZNK10extensions31ChromePermissionMessageProvider18AddHostPermissionsERKNS_13PermissionSetEPNS_15PermissionIDSetENS_8Manifest4TypeE(%"class.extensions::ChromePermissionMessageProvider"* nocapture readnone, %"class.extensions::PermissionSet"* dereferenceable(128), %"class.extensions::PermissionIDSet"*, i32) local_unnamed_addr #2 align 2 {
  %5 = alloca %"class.extensions::URLPatternSet", align 8
  %6 = alloca %"class.std::__1::set.82", align 8
  %7 = alloca %"class.std::__1::basic_string", align 8
  %8 = icmp eq i32 %3, 6
  br i1 %8, label %87, label %9

9:                                                ; preds = %4
  %10 = tail call zeroext i1 @_ZNK10extensions13PermissionSet18ShouldWarnAllHostsEb(%"class.extensions::PermissionSet"* %1, i1 zeroext true) #14
  br i1 %10, label %11, label %12

11:                                               ; preds = %9
  tail call void @_ZN10extensions15PermissionIDSet6insertENS_5mojom15APIPermissionIDE(%"class.extensions::PermissionIDSet"* %2, i32 179) #14
  br label %87

12:                                               ; preds = %9
  %13 = bitcast %"class.extensions::URLPatternSet"* %5 to i8*
  call void @llvm.lifetime.start.p0i8(i64 24, i8* nonnull %13) #14
  %14 = bitcast %"class.extensions::URLPatternSet"* %5 to i8*
  call void @llvm.memset.p0i8.i64(i8* nonnull align 8 %14, i8 -86, i64 24, i1 false)
  call void @_ZN10extensions13URLPatternSetC1Ev(%"class.extensions::URLPatternSet"* nonnull %5) #14
  %15 = call %"class.extensions::ExtensionsClient"* @_ZN10extensions16ExtensionsClient3GetEv() #14
  %16 = getelementptr inbounds %"class.extensions::PermissionSet", %"class.extensions::PermissionSet"* %1, i64 0, i32 4
  %17 = bitcast %"class.extensions::ExtensionsClient"* %15 to void (%"class.extensions::ExtensionsClient"*, %"class.extensions::URLPatternSet"*, %"class.extensions::URLPatternSet"*, %"class.extensions::PermissionIDSet"*)***
  %18 = load void (%"class.extensions::ExtensionsClient"*, %"class.extensions::URLPatternSet"*, %"class.extensions::URLPatternSet"*, %"class.extensions::PermissionIDSet"*)**, void (%"class.extensions::ExtensionsClient"*, %"class.extensions::URLPatternSet"*, %"class.extensions::URLPatternSet"*, %"class.extensions::PermissionIDSet"*)*** %17, align 8
  %19 = getelementptr inbounds void (%"class.extensions::ExtensionsClient"*, %"class.extensions::URLPatternSet"*, %"class.extensions::URLPatternSet"*, %"class.extensions::PermissionIDSet"*)*, void (%"class.extensions::ExtensionsClient"*, %"class.extensions::URLPatternSet"*, %"class.extensions::URLPatternSet"*, %"class.extensions::PermissionIDSet"*)** %18, i64 6
  %20 = load void (%"class.extensions::ExtensionsClient"*, %"class.extensions::URLPatternSet"*, %"class.extensions::URLPatternSet"*, %"class.extensions::PermissionIDSet"*)*, void (%"class.extensions::ExtensionsClient"*, %"class.extensions::URLPatternSet"*, %"class.extensions::URLPatternSet"*, %"class.extensions::PermissionIDSet"*)** %19, align 8
  call void %20(%"class.extensions::ExtensionsClient"* %15, %"class.extensions::URLPatternSet"* dereferenceable(24) %16, %"class.extensions::URLPatternSet"* nonnull %5, %"class.extensions::PermissionIDSet"* %2) #14
  %21 = bitcast %"class.std::__1::set.82"* %6 to i8*
  call void @llvm.lifetime.start.p0i8(i64 24, i8* nonnull %21) #14
  %22 = getelementptr inbounds %"class.std::__1::set.82", %"class.std::__1::set.82"* %6, i64 0, i32 0, i32 0
  %23 = bitcast %"class.std::__1::set.82"* %6 to i8*
  call void @llvm.memset.p0i8.i64(i8* nonnull align 8 %23, i8 -86, i64 24, i1 false)
  call void @_ZN23permission_message_util16GetDistinctHostsERKN10extensions13URLPatternSetEbb(%"class.std::__1::set.82"* nonnull sret %6, %"class.extensions::URLPatternSet"* nonnull dereferenceable(24) %5, i1 zeroext true, i1 zeroext true) #14
  %24 = load %"class.std::__1::__tree_end_node"*, %"class.std::__1::__tree_end_node"** %22, align 8
  %25 = getelementptr inbounds %"class.std::__1::set.82", %"class.std::__1::set.82"* %6, i64 0, i32 0, i32 1, i32 0, i32 0
  %26 = icmp eq %"class.std::__1::__tree_end_node"* %24, %25
  br i1 %26, label %32, label %27

27:                                               ; preds = %12
  %28 = bitcast %"class.std::__1::basic_string"* %7 to i8*
  %29 = bitcast %"class.std::__1::basic_string"* %7 to %"struct.std::__1::basic_string<char16_t, std::__1::char_traits<char16_t>, std::__1::allocator<char16_t> >::__short"*
  %30 = getelementptr inbounds %"struct.std::__1::basic_string<char16_t, std::__1::char_traits<char16_t>, std::__1::allocator<char16_t> >::__short", %"struct.std::__1::basic_string<char16_t, std::__1::char_traits<char16_t>, std::__1::allocator<char16_t> >::__short"* %29, i64 0, i32 1, i32 1
  %31 = bitcast %"class.std::__1::basic_string"* %7 to i8**
  br label %36

32:                                               ; preds = %84, %12
  %33 = getelementptr inbounds %"class.std::__1::set.82", %"class.std::__1::set.82"* %6, i64 0, i32 0
  %34 = bitcast %"class.std::__1::__tree_end_node"* %25 to %"class.std::__1::__tree_node.142"**
  %35 = load %"class.std::__1::__tree_node.142"*, %"class.std::__1::__tree_node.142"** %34, align 8
  call void @_ZNSt3__16__treeINS_12basic_stringIcNS_11char_traitsIcEENS_9allocatorIcEEEENS_4lessIS6_EENS4_IS6_EEE7destroyEPNS_11__tree_nodeIS6_PvEE(%"class.std::__1::__tree.83"* nonnull %33, %"class.std::__1::__tree_node.142"* %35) #14
  call void @llvm.lifetime.end.p0i8(i64 24, i8* nonnull %21) #14
  call void @_ZN10extensions13URLPatternSetD1Ev(%"class.extensions::URLPatternSet"* nonnull %5) #14
  call void @llvm.lifetime.end.p0i8(i64 24, i8* nonnull %13) #14
  br label %87

36:                                               ; preds = %27, %84
  %37 = phi %"class.std::__1::__tree_end_node"* [ %24, %27 ], [ %85, %84 ]
  %38 = getelementptr inbounds %"class.std::__1::__tree_end_node", %"class.std::__1::__tree_end_node"* %37, i64 4
  call void @llvm.lifetime.start.p0i8(i64 24, i8* nonnull %28) #14
  %39 = bitcast %"class.std::__1::__tree_end_node"* %38 to %"struct.std::__1::basic_string<char, std::__1::char_traits<char>, std::__1::allocator<char> >::__short"*
  %40 = getelementptr inbounds %"struct.std::__1::basic_string<char, std::__1::char_traits<char>, std::__1::allocator<char> >::__short", %"struct.std::__1::basic_string<char, std::__1::char_traits<char>, std::__1::allocator<char> >::__short"* %39, i64 0, i32 1, i32 0
  %41 = load i8, i8* %40, align 1
  %42 = icmp slt i8 %41, 0
  %43 = bitcast %"class.std::__1::__tree_end_node"* %38 to i8**
  %44 = load i8*, i8** %43, align 8
  %45 = bitcast %"class.std::__1::__tree_end_node"* %38 to i8*
  %46 = select i1 %42, i8* %44, i8* %45
  %47 = getelementptr inbounds %"class.std::__1::__tree_end_node", %"class.std::__1::__tree_end_node"* %37, i64 5
  %48 = bitcast %"class.std::__1::__tree_end_node"* %47 to i64*
  %49 = load i64, i64* %48, align 8
  %50 = zext i8 %41 to i64
  %51 = select i1 %42, i64 %49, i64 %50
  call void @_ZN4base11UTF8ToUTF16ENS_16BasicStringPieceIcNSt3__111char_traitsIcEEEE(%"class.std::__1::basic_string"* nonnull sret %7, i8* %46, i64 %51) #14
  call void @_ZN10extensions15PermissionIDSet6insertENS_5mojom15APIPermissionIDERKNSt3__112basic_stringIDsNS3_11char_traitsIDsEENS3_9allocatorIDsEEEE(%"class.extensions::PermissionIDSet"* %2, i32 178, %"class.std::__1::basic_string"* nonnull dereferenceable(24) %7) #14
  %52 = load i8, i8* %30, align 1
  %53 = icmp slt i8 %52, 0
  br i1 %53, label %54, label %56

54:                                               ; preds = %36
  %55 = load i8*, i8** %31, align 8
  call void @_ZdlPv(i8* %55) #13
  br label %56

56:                                               ; preds = %36, %54
  call void @llvm.lifetime.end.p0i8(i64 24, i8* nonnull %28) #14
  %57 = getelementptr inbounds %"class.std::__1::__tree_end_node", %"class.std::__1::__tree_end_node"* %37, i64 1, i32 0
  %58 = load %"class.std::__1::__tree_node_base"*, %"class.std::__1::__tree_node_base"** %57, align 8
  %59 = icmp eq %"class.std::__1::__tree_node_base"* %58, null
  br i1 %59, label %60, label %68

60:                                               ; preds = %56
  %61 = bitcast %"class.std::__1::__tree_end_node"* %37 to %"class.std::__1::__tree_node_base"*
  %62 = getelementptr inbounds %"class.std::__1::__tree_end_node", %"class.std::__1::__tree_end_node"* %37, i64 2
  %63 = bitcast %"class.std::__1::__tree_end_node"* %62 to %"class.std::__1::__tree_end_node"**
  %64 = load %"class.std::__1::__tree_end_node"*, %"class.std::__1::__tree_end_node"** %63, align 8
  %65 = getelementptr inbounds %"class.std::__1::__tree_end_node", %"class.std::__1::__tree_end_node"* %64, i64 0, i32 0
  %66 = load %"class.std::__1::__tree_node_base"*, %"class.std::__1::__tree_node_base"** %65, align 8
  %67 = icmp eq %"class.std::__1::__tree_node_base"* %66, %61
  br i1 %67, label %84, label %75

68:                                               ; preds = %56, %68
  %69 = phi %"class.std::__1::__tree_node_base"* [ %71, %68 ], [ %58, %56 ]
  %70 = getelementptr inbounds %"class.std::__1::__tree_node_base", %"class.std::__1::__tree_node_base"* %69, i64 0, i32 0, i32 0
  %71 = load %"class.std::__1::__tree_node_base"*, %"class.std::__1::__tree_node_base"** %70, align 8
  %72 = icmp eq %"class.std::__1::__tree_node_base"* %71, null
  br i1 %72, label %73, label %68

73:                                               ; preds = %68
  %74 = getelementptr inbounds %"class.std::__1::__tree_node_base", %"class.std::__1::__tree_node_base"* %69, i64 0, i32 0
  br label %84

75:                                               ; preds = %60, %75
  %76 = phi %"class.std::__1::__tree_end_node"** [ %79, %75 ], [ %63, %60 ]
  %77 = bitcast %"class.std::__1::__tree_end_node"** %76 to %"class.std::__1::__tree_node_base"**
  %78 = load %"class.std::__1::__tree_node_base"*, %"class.std::__1::__tree_node_base"** %77, align 8
  %79 = getelementptr inbounds %"class.std::__1::__tree_node_base", %"class.std::__1::__tree_node_base"* %78, i64 0, i32 2
  %80 = load %"class.std::__1::__tree_end_node"*, %"class.std::__1::__tree_end_node"** %79, align 8
  %81 = getelementptr inbounds %"class.std::__1::__tree_end_node", %"class.std::__1::__tree_end_node"* %80, i64 0, i32 0
  %82 = load %"class.std::__1::__tree_node_base"*, %"class.std::__1::__tree_node_base"** %81, align 8
  %83 = icmp eq %"class.std::__1::__tree_node_base"* %82, %78
  br i1 %83, label %84, label %75

84:                                               ; preds = %75, %60, %73
  %85 = phi %"class.std::__1::__tree_end_node"* [ %74, %73 ], [ %64, %60 ], [ %80, %75 ]
  %86 = icmp eq %"class.std::__1::__tree_end_node"* %85, %25
  br i1 %86, label %32, label %36

87:                                               ; preds = %4, %32, %11
  ret void
}

; Function Attrs: nounwind
declare void @_ZN10extensions15PermissionIDSetD1Ev(%"class.extensions::PermissionIDSet"*) unnamed_addr #6

; Function Attrs: nounwind ssp uwtable
define hidden void @_ZNK10extensions31ChromePermissionMessageProvider28GetManagementUIPermissionIDsERKNS_13PermissionSetENS_8Manifest4TypeE(%"class.extensions::PermissionIDSet"* noalias sret, %"class.extensions::ChromePermissionMessageProvider"* nocapture readnone, %"class.extensions::PermissionSet"* dereferenceable(128), i32) unnamed_addr #2 align 2 {
  %5 = alloca %"class.extensions::PermissionIDSet", align 8
  %6 = alloca %"class.extensions::PermissionIDSet", align 8
  %7 = bitcast %"class.extensions::PermissionIDSet"* %0 to i8*
  call void @llvm.memset.p0i8.i64(i8* align 8 %7, i8 -86, i64 32, i1 false)
  tail call void @_ZN10extensions15PermissionIDSetC1Ev(%"class.extensions::PermissionIDSet"* %0) #14
  %8 = bitcast %"class.extensions::PermissionSet"* %2 to i64*
  %9 = load i64, i64* %8, align 8, !noalias !35
  %10 = getelementptr inbounds %"class.extensions::PermissionSet", %"class.extensions::PermissionSet"* %2, i64 0, i32 0, i32 0, i32 0, i32 0, i32 1, i32 0, i32 0
  %11 = inttoptr i64 %9 to %"class.std::__1::__tree_end_node"*
  %12 = icmp eq %"class.std::__1::__tree_end_node"* %10, %11
  br i1 %12, label %62, label %13

13:                                               ; preds = %4
  %14 = bitcast %"class.extensions::PermissionIDSet"* %6 to i8*
  br label %15

15:                                               ; preds = %58, %13
  %16 = phi i64 [ %9, %13 ], [ %60, %58 ]
  %17 = inttoptr i64 %16 to %"class.std::__1::__tree_node.132"*
  %18 = getelementptr inbounds %"class.std::__1::__tree_node.132", %"class.std::__1::__tree_node.132"* %17, i64 0, i32 1, i32 0, i32 1, i32 0, i32 0, i32 0
  %19 = load %"class.extensions::APIPermission"*, %"class.extensions::APIPermission"** %18, align 8
  %20 = getelementptr inbounds %"class.extensions::APIPermission", %"class.extensions::APIPermission"* %19, i64 0, i32 1
  %21 = load %"class.extensions::APIPermissionInfo"*, %"class.extensions::APIPermissionInfo"** %20, align 8
  %22 = getelementptr inbounds %"class.extensions::APIPermissionInfo", %"class.extensions::APIPermissionInfo"* %21, i64 0, i32 2
  %23 = load i32, i32* %22, align 4
  %24 = and i32 %23, 64
  %25 = icmp eq i32 %24, 0
  br i1 %25, label %31, label %26

26:                                               ; preds = %15
  call void @llvm.lifetime.start.p0i8(i64 32, i8* nonnull %14) #14
  %27 = bitcast %"class.extensions::APIPermission"* %19 to void (%"class.extensions::PermissionIDSet"*, %"class.extensions::APIPermission"*)***
  %28 = load void (%"class.extensions::PermissionIDSet"*, %"class.extensions::APIPermission"*)**, void (%"class.extensions::PermissionIDSet"*, %"class.extensions::APIPermission"*)*** %27, align 8
  %29 = getelementptr inbounds void (%"class.extensions::PermissionIDSet"*, %"class.extensions::APIPermission"*)*, void (%"class.extensions::PermissionIDSet"*, %"class.extensions::APIPermission"*)** %28, i64 2
  %30 = load void (%"class.extensions::PermissionIDSet"*, %"class.extensions::APIPermission"*)*, void (%"class.extensions::PermissionIDSet"*, %"class.extensions::APIPermission"*)** %29, align 8
  call void %30(%"class.extensions::PermissionIDSet"* nonnull sret %6, %"class.extensions::APIPermission"* %19) #14
  call void @_ZN10extensions15PermissionIDSet9InsertAllERKS0_(%"class.extensions::PermissionIDSet"* %0, %"class.extensions::PermissionIDSet"* nonnull dereferenceable(32) %6) #14
  call void @_ZN10extensions15PermissionIDSetD1Ev(%"class.extensions::PermissionIDSet"* nonnull %6) #14
  call void @llvm.lifetime.end.p0i8(i64 32, i8* nonnull %14) #14
  br label %31

31:                                               ; preds = %26, %15
  %32 = inttoptr i64 %16 to %"class.std::__1::__tree_node_base"*
  %33 = getelementptr inbounds %"class.std::__1::__tree_node_base", %"class.std::__1::__tree_node_base"* %32, i64 0, i32 1
  %34 = load %"class.std::__1::__tree_node_base"*, %"class.std::__1::__tree_node_base"** %33, align 8
  %35 = icmp eq %"class.std::__1::__tree_node_base"* %34, null
  br i1 %35, label %36, label %42

36:                                               ; preds = %31
  %37 = getelementptr inbounds %"class.std::__1::__tree_node_base", %"class.std::__1::__tree_node_base"* %32, i64 0, i32 2
  %38 = load %"class.std::__1::__tree_end_node"*, %"class.std::__1::__tree_end_node"** %37, align 8
  %39 = getelementptr inbounds %"class.std::__1::__tree_end_node", %"class.std::__1::__tree_end_node"* %38, i64 0, i32 0
  %40 = load %"class.std::__1::__tree_node_base"*, %"class.std::__1::__tree_node_base"** %39, align 8
  %41 = icmp eq %"class.std::__1::__tree_node_base"* %40, %32
  br i1 %41, label %58, label %49

42:                                               ; preds = %31, %42
  %43 = phi %"class.std::__1::__tree_node_base"* [ %45, %42 ], [ %34, %31 ]
  %44 = getelementptr inbounds %"class.std::__1::__tree_node_base", %"class.std::__1::__tree_node_base"* %43, i64 0, i32 0, i32 0
  %45 = load %"class.std::__1::__tree_node_base"*, %"class.std::__1::__tree_node_base"** %44, align 8
  %46 = icmp eq %"class.std::__1::__tree_node_base"* %45, null
  br i1 %46, label %47, label %42

47:                                               ; preds = %42
  %48 = getelementptr inbounds %"class.std::__1::__tree_node_base", %"class.std::__1::__tree_node_base"* %43, i64 0, i32 0
  br label %58

49:                                               ; preds = %36, %49
  %50 = phi %"class.std::__1::__tree_end_node"** [ %53, %49 ], [ %37, %36 ]
  %51 = bitcast %"class.std::__1::__tree_end_node"** %50 to %"class.std::__1::__tree_node_base"**
  %52 = load %"class.std::__1::__tree_node_base"*, %"class.std::__1::__tree_node_base"** %51, align 8
  %53 = getelementptr inbounds %"class.std::__1::__tree_node_base", %"class.std::__1::__tree_node_base"* %52, i64 0, i32 2
  %54 = load %"class.std::__1::__tree_end_node"*, %"class.std::__1::__tree_end_node"** %53, align 8
  %55 = getelementptr inbounds %"class.std::__1::__tree_end_node", %"class.std::__1::__tree_end_node"* %54, i64 0, i32 0
  %56 = load %"class.std::__1::__tree_node_base"*, %"class.std::__1::__tree_node_base"** %55, align 8
  %57 = icmp eq %"class.std::__1::__tree_node_base"* %56, %52
  br i1 %57, label %58, label %49

58:                                               ; preds = %49, %47, %36
  %59 = phi %"class.std::__1::__tree_end_node"* [ %48, %47 ], [ %38, %36 ], [ %54, %49 ]
  %60 = ptrtoint %"class.std::__1::__tree_end_node"* %59 to i64
  %61 = icmp eq %"class.std::__1::__tree_end_node"* %10, %59
  br i1 %61, label %62, label %15

62:                                               ; preds = %58, %4
  %63 = getelementptr inbounds %"class.extensions::PermissionSet", %"class.extensions::PermissionSet"* %2, i64 0, i32 1, i32 0
  %64 = bitcast %"class.extensions::BaseSetOperators.48"* %63 to i64*
  %65 = load i64, i64* %64, align 8, !noalias !38
  %66 = getelementptr inbounds %"class.extensions::PermissionSet", %"class.extensions::PermissionSet"* %2, i64 0, i32 1, i32 0, i32 0, i32 0, i32 1, i32 0, i32 0
  %67 = inttoptr i64 %65 to %"class.std::__1::__tree_end_node"*
  %68 = icmp eq %"class.std::__1::__tree_end_node"* %66, %67
  br i1 %68, label %117, label %69

69:                                               ; preds = %62
  %70 = bitcast %"class.extensions::PermissionIDSet"* %5 to i8*
  br label %71

71:                                               ; preds = %113, %69
  %72 = phi i64 [ %65, %69 ], [ %115, %113 ]
  %73 = inttoptr i64 %72 to %"class.std::__1::__tree_node.141"*
  %74 = getelementptr inbounds %"class.std::__1::__tree_node.141", %"class.std::__1::__tree_node.141"* %73, i64 0, i32 1, i32 0, i32 1, i32 0, i32 0, i32 0
  %75 = load %"class.extensions::ManifestPermission"*, %"class.extensions::ManifestPermission"** %74, align 8
  %76 = bitcast %"class.extensions::ManifestPermission"* %75 to i1 (%"class.extensions::ManifestPermission"*)***
  %77 = load i1 (%"class.extensions::ManifestPermission"*)**, i1 (%"class.extensions::ManifestPermission"*)*** %76, align 8
  %78 = getelementptr inbounds i1 (%"class.extensions::ManifestPermission"*)*, i1 (%"class.extensions::ManifestPermission"*)** %77, i64 10
  %79 = load i1 (%"class.extensions::ManifestPermission"*)*, i1 (%"class.extensions::ManifestPermission"*)** %78, align 8
  %80 = call zeroext i1 %79(%"class.extensions::ManifestPermission"* %75) #14
  br i1 %80, label %81, label %86

81:                                               ; preds = %71
  call void @llvm.lifetime.start.p0i8(i64 32, i8* nonnull %70) #14
  %82 = bitcast %"class.extensions::ManifestPermission"* %75 to void (%"class.extensions::PermissionIDSet"*, %"class.extensions::ManifestPermission"*)***
  %83 = load void (%"class.extensions::PermissionIDSet"*, %"class.extensions::ManifestPermission"*)**, void (%"class.extensions::PermissionIDSet"*, %"class.extensions::ManifestPermission"*)*** %82, align 8
  %84 = getelementptr inbounds void (%"class.extensions::PermissionIDSet"*, %"class.extensions::ManifestPermission"*)*, void (%"class.extensions::PermissionIDSet"*, %"class.extensions::ManifestPermission"*)** %83, i64 4
  %85 = load void (%"class.extensions::PermissionIDSet"*, %"class.extensions::ManifestPermission"*)*, void (%"class.extensions::PermissionIDSet"*, %"class.extensions::ManifestPermission"*)** %84, align 8
  call void %85(%"class.extensions::PermissionIDSet"* nonnull sret %5, %"class.extensions::ManifestPermission"* %75) #14
  call void @_ZN10extensions15PermissionIDSet9InsertAllERKS0_(%"class.extensions::PermissionIDSet"* %0, %"class.extensions::PermissionIDSet"* nonnull dereferenceable(32) %5) #14
  call void @_ZN10extensions15PermissionIDSetD1Ev(%"class.extensions::PermissionIDSet"* nonnull %5) #14
  call void @llvm.lifetime.end.p0i8(i64 32, i8* nonnull %70) #14
  br label %86

86:                                               ; preds = %81, %71
  %87 = inttoptr i64 %72 to %"class.std::__1::__tree_node_base"*
  %88 = getelementptr inbounds %"class.std::__1::__tree_node_base", %"class.std::__1::__tree_node_base"* %87, i64 0, i32 1
  %89 = load %"class.std::__1::__tree_node_base"*, %"class.std::__1::__tree_node_base"** %88, align 8
  %90 = icmp eq %"class.std::__1::__tree_node_base"* %89, null
  br i1 %90, label %91, label %97

91:                                               ; preds = %86
  %92 = getelementptr inbounds %"class.std::__1::__tree_node_base", %"class.std::__1::__tree_node_base"* %87, i64 0, i32 2
  %93 = load %"class.std::__1::__tree_end_node"*, %"class.std::__1::__tree_end_node"** %92, align 8
  %94 = getelementptr inbounds %"class.std::__1::__tree_end_node", %"class.std::__1::__tree_end_node"* %93, i64 0, i32 0
  %95 = load %"class.std::__1::__tree_node_base"*, %"class.std::__1::__tree_node_base"** %94, align 8
  %96 = icmp eq %"class.std::__1::__tree_node_base"* %95, %87
  br i1 %96, label %113, label %104

97:                                               ; preds = %86, %97
  %98 = phi %"class.std::__1::__tree_node_base"* [ %100, %97 ], [ %89, %86 ]
  %99 = getelementptr inbounds %"class.std::__1::__tree_node_base", %"class.std::__1::__tree_node_base"* %98, i64 0, i32 0, i32 0
  %100 = load %"class.std::__1::__tree_node_base"*, %"class.std::__1::__tree_node_base"** %99, align 8
  %101 = icmp eq %"class.std::__1::__tree_node_base"* %100, null
  br i1 %101, label %102, label %97

102:                                              ; preds = %97
  %103 = getelementptr inbounds %"class.std::__1::__tree_node_base", %"class.std::__1::__tree_node_base"* %98, i64 0, i32 0
  br label %113

104:                                              ; preds = %91, %104
  %105 = phi %"class.std::__1::__tree_end_node"** [ %108, %104 ], [ %92, %91 ]
  %106 = bitcast %"class.std::__1::__tree_end_node"** %105 to %"class.std::__1::__tree_node_base"**
  %107 = load %"class.std::__1::__tree_node_base"*, %"class.std::__1::__tree_node_base"** %106, align 8
  %108 = getelementptr inbounds %"class.std::__1::__tree_node_base", %"class.std::__1::__tree_node_base"* %107, i64 0, i32 2
  %109 = load %"class.std::__1::__tree_end_node"*, %"class.std::__1::__tree_end_node"** %108, align 8
  %110 = getelementptr inbounds %"class.std::__1::__tree_end_node", %"class.std::__1::__tree_end_node"* %109, i64 0, i32 0
  %111 = load %"class.std::__1::__tree_node_base"*, %"class.std::__1::__tree_node_base"** %110, align 8
  %112 = icmp eq %"class.std::__1::__tree_node_base"* %111, %107
  br i1 %112, label %113, label %104

113:                                              ; preds = %104, %102, %91
  %114 = phi %"class.std::__1::__tree_end_node"* [ %103, %102 ], [ %93, %91 ], [ %109, %104 ]
  %115 = ptrtoint %"class.std::__1::__tree_end_node"* %114 to i64
  %116 = icmp eq %"class.std::__1::__tree_end_node"* %66, %114
  br i1 %116, label %117, label %71

117:                                              ; preds = %113, %62
  call void @_ZNK10extensions31ChromePermissionMessageProvider18AddHostPermissionsERKNS_13PermissionSetEPNS_15PermissionIDSetENS_8Manifest4TypeE(%"class.extensions::ChromePermissionMessageProvider"* undef, %"class.extensions::PermissionSet"* dereferenceable(128) %2, %"class.extensions::PermissionIDSet"* %0, i32 %3)
  ret void
}

; Function Attrs: nounwind ssp uwtable
define hidden void @_ZNK10extensions31ChromePermissionMessageProvider39AddAPIPermissionsForManagementUIWarningERKNS_13PermissionSetEPNS_15PermissionIDSetE(%"class.extensions::ChromePermissionMessageProvider"* nocapture readnone, %"class.extensions::PermissionSet"* dereferenceable(128), %"class.extensions::PermissionIDSet"*) local_unnamed_addr #2 align 2 {
  %4 = alloca %"class.extensions::PermissionIDSet", align 8
  %5 = bitcast %"class.extensions::PermissionSet"* %1 to i64*
  %6 = load i64, i64* %5, align 8, !noalias !41
  %7 = getelementptr inbounds %"class.extensions::PermissionSet", %"class.extensions::PermissionSet"* %1, i64 0, i32 0, i32 0, i32 0, i32 0, i32 1, i32 0, i32 0
  %8 = inttoptr i64 %6 to %"class.std::__1::__tree_end_node"*
  %9 = icmp eq %"class.std::__1::__tree_end_node"* %7, %8
  br i1 %9, label %12, label %10

10:                                               ; preds = %3
  %11 = bitcast %"class.extensions::PermissionIDSet"* %4 to i8*
  br label %13

12:                                               ; preds = %56, %3
  ret void

13:                                               ; preds = %10, %56
  %14 = phi i64 [ %6, %10 ], [ %58, %56 ]
  %15 = inttoptr i64 %14 to %"class.std::__1::__tree_node.132"*
  %16 = getelementptr inbounds %"class.std::__1::__tree_node.132", %"class.std::__1::__tree_node.132"* %15, i64 0, i32 1, i32 0, i32 1, i32 0, i32 0, i32 0
  %17 = load %"class.extensions::APIPermission"*, %"class.extensions::APIPermission"** %16, align 8
  %18 = getelementptr inbounds %"class.extensions::APIPermission", %"class.extensions::APIPermission"* %17, i64 0, i32 1
  %19 = load %"class.extensions::APIPermissionInfo"*, %"class.extensions::APIPermissionInfo"** %18, align 8
  %20 = getelementptr inbounds %"class.extensions::APIPermissionInfo", %"class.extensions::APIPermissionInfo"* %19, i64 0, i32 2
  %21 = load i32, i32* %20, align 4
  %22 = and i32 %21, 64
  %23 = icmp eq i32 %22, 0
  br i1 %23, label %29, label %24

24:                                               ; preds = %13
  call void @llvm.lifetime.start.p0i8(i64 32, i8* nonnull %11) #14
  %25 = bitcast %"class.extensions::APIPermission"* %17 to void (%"class.extensions::PermissionIDSet"*, %"class.extensions::APIPermission"*)***
  %26 = load void (%"class.extensions::PermissionIDSet"*, %"class.extensions::APIPermission"*)**, void (%"class.extensions::PermissionIDSet"*, %"class.extensions::APIPermission"*)*** %25, align 8
  %27 = getelementptr inbounds void (%"class.extensions::PermissionIDSet"*, %"class.extensions::APIPermission"*)*, void (%"class.extensions::PermissionIDSet"*, %"class.extensions::APIPermission"*)** %26, i64 2
  %28 = load void (%"class.extensions::PermissionIDSet"*, %"class.extensions::APIPermission"*)*, void (%"class.extensions::PermissionIDSet"*, %"class.extensions::APIPermission"*)** %27, align 8
  call void %28(%"class.extensions::PermissionIDSet"* nonnull sret %4, %"class.extensions::APIPermission"* %17) #14
  call void @_ZN10extensions15PermissionIDSet9InsertAllERKS0_(%"class.extensions::PermissionIDSet"* %2, %"class.extensions::PermissionIDSet"* nonnull dereferenceable(32) %4) #14
  call void @_ZN10extensions15PermissionIDSetD1Ev(%"class.extensions::PermissionIDSet"* nonnull %4) #14
  call void @llvm.lifetime.end.p0i8(i64 32, i8* nonnull %11) #14
  br label %29

29:                                               ; preds = %13, %24
  %30 = inttoptr i64 %14 to %"class.std::__1::__tree_node_base"*
  %31 = getelementptr inbounds %"class.std::__1::__tree_node_base", %"class.std::__1::__tree_node_base"* %30, i64 0, i32 1
  %32 = load %"class.std::__1::__tree_node_base"*, %"class.std::__1::__tree_node_base"** %31, align 8
  %33 = icmp eq %"class.std::__1::__tree_node_base"* %32, null
  br i1 %33, label %34, label %40

34:                                               ; preds = %29
  %35 = getelementptr inbounds %"class.std::__1::__tree_node_base", %"class.std::__1::__tree_node_base"* %30, i64 0, i32 2
  %36 = load %"class.std::__1::__tree_end_node"*, %"class.std::__1::__tree_end_node"** %35, align 8
  %37 = getelementptr inbounds %"class.std::__1::__tree_end_node", %"class.std::__1::__tree_end_node"* %36, i64 0, i32 0
  %38 = load %"class.std::__1::__tree_node_base"*, %"class.std::__1::__tree_node_base"** %37, align 8
  %39 = icmp eq %"class.std::__1::__tree_node_base"* %38, %30
  br i1 %39, label %56, label %47

40:                                               ; preds = %29, %40
  %41 = phi %"class.std::__1::__tree_node_base"* [ %43, %40 ], [ %32, %29 ]
  %42 = getelementptr inbounds %"class.std::__1::__tree_node_base", %"class.std::__1::__tree_node_base"* %41, i64 0, i32 0, i32 0
  %43 = load %"class.std::__1::__tree_node_base"*, %"class.std::__1::__tree_node_base"** %42, align 8
  %44 = icmp eq %"class.std::__1::__tree_node_base"* %43, null
  br i1 %44, label %45, label %40

45:                                               ; preds = %40
  %46 = getelementptr inbounds %"class.std::__1::__tree_node_base", %"class.std::__1::__tree_node_base"* %41, i64 0, i32 0
  br label %56

47:                                               ; preds = %34, %47
  %48 = phi %"class.std::__1::__tree_end_node"** [ %51, %47 ], [ %35, %34 ]
  %49 = bitcast %"class.std::__1::__tree_end_node"** %48 to %"class.std::__1::__tree_node_base"**
  %50 = load %"class.std::__1::__tree_node_base"*, %"class.std::__1::__tree_node_base"** %49, align 8
  %51 = getelementptr inbounds %"class.std::__1::__tree_node_base", %"class.std::__1::__tree_node_base"* %50, i64 0, i32 2
  %52 = load %"class.std::__1::__tree_end_node"*, %"class.std::__1::__tree_end_node"** %51, align 8
  %53 = getelementptr inbounds %"class.std::__1::__tree_end_node", %"class.std::__1::__tree_end_node"* %52, i64 0, i32 0
  %54 = load %"class.std::__1::__tree_node_base"*, %"class.std::__1::__tree_node_base"** %53, align 8
  %55 = icmp eq %"class.std::__1::__tree_node_base"* %54, %50
  br i1 %55, label %56, label %47

56:                                               ; preds = %47, %34, %45
  %57 = phi %"class.std::__1::__tree_end_node"* [ %46, %45 ], [ %36, %34 ], [ %52, %47 ]
  %58 = ptrtoint %"class.std::__1::__tree_end_node"* %57 to i64
  %59 = icmp eq %"class.std::__1::__tree_end_node"* %7, %57
  br i1 %59, label %12, label %13
}

; Function Attrs: nounwind ssp uwtable
define hidden void @_ZNK10extensions31ChromePermissionMessageProvider44AddManifestPermissionsForManagementUIWarningERKNS_13PermissionSetEPNS_15PermissionIDSetE(%"class.extensions::ChromePermissionMessageProvider"* nocapture readnone, %"class.extensions::PermissionSet"* dereferenceable(128), %"class.extensions::PermissionIDSet"*) local_unnamed_addr #2 align 2 {
  %4 = alloca %"class.extensions::PermissionIDSet", align 8
  %5 = getelementptr inbounds %"class.extensions::PermissionSet", %"class.extensions::PermissionSet"* %1, i64 0, i32 1, i32 0
  %6 = bitcast %"class.extensions::BaseSetOperators.48"* %5 to i64*
  %7 = load i64, i64* %6, align 8, !noalias !44
  %8 = getelementptr inbounds %"class.extensions::PermissionSet", %"class.extensions::PermissionSet"* %1, i64 0, i32 1, i32 0, i32 0, i32 0, i32 1, i32 0, i32 0
  %9 = inttoptr i64 %7 to %"class.std::__1::__tree_end_node"*
  %10 = icmp eq %"class.std::__1::__tree_end_node"* %8, %9
  br i1 %10, label %13, label %11

11:                                               ; preds = %3
  %12 = bitcast %"class.extensions::PermissionIDSet"* %4 to i8*
  br label %14

13:                                               ; preds = %56, %3
  ret void

14:                                               ; preds = %11, %56
  %15 = phi i64 [ %7, %11 ], [ %58, %56 ]
  %16 = inttoptr i64 %15 to %"class.std::__1::__tree_node.141"*
  %17 = getelementptr inbounds %"class.std::__1::__tree_node.141", %"class.std::__1::__tree_node.141"* %16, i64 0, i32 1, i32 0, i32 1, i32 0, i32 0, i32 0
  %18 = load %"class.extensions::ManifestPermission"*, %"class.extensions::ManifestPermission"** %17, align 8
  %19 = bitcast %"class.extensions::ManifestPermission"* %18 to i1 (%"class.extensions::ManifestPermission"*)***
  %20 = load i1 (%"class.extensions::ManifestPermission"*)**, i1 (%"class.extensions::ManifestPermission"*)*** %19, align 8
  %21 = getelementptr inbounds i1 (%"class.extensions::ManifestPermission"*)*, i1 (%"class.extensions::ManifestPermission"*)** %20, i64 10
  %22 = load i1 (%"class.extensions::ManifestPermission"*)*, i1 (%"class.extensions::ManifestPermission"*)** %21, align 8
  %23 = call zeroext i1 %22(%"class.extensions::ManifestPermission"* %18) #14
  br i1 %23, label %24, label %29

24:                                               ; preds = %14
  call void @llvm.lifetime.start.p0i8(i64 32, i8* nonnull %12) #14
  %25 = bitcast %"class.extensions::ManifestPermission"* %18 to void (%"class.extensions::PermissionIDSet"*, %"class.extensions::ManifestPermission"*)***
  %26 = load void (%"class.extensions::PermissionIDSet"*, %"class.extensions::ManifestPermission"*)**, void (%"class.extensions::PermissionIDSet"*, %"class.extensions::ManifestPermission"*)*** %25, align 8
  %27 = getelementptr inbounds void (%"class.extensions::PermissionIDSet"*, %"class.extensions::ManifestPermission"*)*, void (%"class.extensions::PermissionIDSet"*, %"class.extensions::ManifestPermission"*)** %26, i64 4
  %28 = load void (%"class.extensions::PermissionIDSet"*, %"class.extensions::ManifestPermission"*)*, void (%"class.extensions::PermissionIDSet"*, %"class.extensions::ManifestPermission"*)** %27, align 8
  call void %28(%"class.extensions::PermissionIDSet"* nonnull sret %4, %"class.extensions::ManifestPermission"* %18) #14
  call void @_ZN10extensions15PermissionIDSet9InsertAllERKS0_(%"class.extensions::PermissionIDSet"* %2, %"class.extensions::PermissionIDSet"* nonnull dereferenceable(32) %4) #14
  call void @_ZN10extensions15PermissionIDSetD1Ev(%"class.extensions::PermissionIDSet"* nonnull %4) #14
  call void @llvm.lifetime.end.p0i8(i64 32, i8* nonnull %12) #14
  br label %29

29:                                               ; preds = %24, %14
  %30 = inttoptr i64 %15 to %"class.std::__1::__tree_node_base"*
  %31 = getelementptr inbounds %"class.std::__1::__tree_node_base", %"class.std::__1::__tree_node_base"* %30, i64 0, i32 1
  %32 = load %"class.std::__1::__tree_node_base"*, %"class.std::__1::__tree_node_base"** %31, align 8
  %33 = icmp eq %"class.std::__1::__tree_node_base"* %32, null
  br i1 %33, label %34, label %40

34:                                               ; preds = %29
  %35 = getelementptr inbounds %"class.std::__1::__tree_node_base", %"class.std::__1::__tree_node_base"* %30, i64 0, i32 2
  %36 = load %"class.std::__1::__tree_end_node"*, %"class.std::__1::__tree_end_node"** %35, align 8
  %37 = getelementptr inbounds %"class.std::__1::__tree_end_node", %"class.std::__1::__tree_end_node"* %36, i64 0, i32 0
  %38 = load %"class.std::__1::__tree_node_base"*, %"class.std::__1::__tree_node_base"** %37, align 8
  %39 = icmp eq %"class.std::__1::__tree_node_base"* %38, %30
  br i1 %39, label %56, label %47

40:                                               ; preds = %29, %40
  %41 = phi %"class.std::__1::__tree_node_base"* [ %43, %40 ], [ %32, %29 ]
  %42 = getelementptr inbounds %"class.std::__1::__tree_node_base", %"class.std::__1::__tree_node_base"* %41, i64 0, i32 0, i32 0
  %43 = load %"class.std::__1::__tree_node_base"*, %"class.std::__1::__tree_node_base"** %42, align 8
  %44 = icmp eq %"class.std::__1::__tree_node_base"* %43, null
  br i1 %44, label %45, label %40

45:                                               ; preds = %40
  %46 = getelementptr inbounds %"class.std::__1::__tree_node_base", %"class.std::__1::__tree_node_base"* %41, i64 0, i32 0
  br label %56

47:                                               ; preds = %34, %47
  %48 = phi %"class.std::__1::__tree_end_node"** [ %51, %47 ], [ %35, %34 ]
  %49 = bitcast %"class.std::__1::__tree_end_node"** %48 to %"class.std::__1::__tree_node_base"**
  %50 = load %"class.std::__1::__tree_node_base"*, %"class.std::__1::__tree_node_base"** %49, align 8
  %51 = getelementptr inbounds %"class.std::__1::__tree_node_base", %"class.std::__1::__tree_node_base"* %50, i64 0, i32 2
  %52 = load %"class.std::__1::__tree_end_node"*, %"class.std::__1::__tree_end_node"** %51, align 8
  %53 = getelementptr inbounds %"class.std::__1::__tree_end_node", %"class.std::__1::__tree_end_node"* %52, i64 0, i32 0
  %54 = load %"class.std::__1::__tree_node_base"*, %"class.std::__1::__tree_node_base"** %53, align 8
  %55 = icmp eq %"class.std::__1::__tree_node_base"* %54, %50
  br i1 %55, label %56, label %47

56:                                               ; preds = %47, %34, %45
  %57 = phi %"class.std::__1::__tree_end_node"* [ %46, %45 ], [ %36, %34 ], [ %52, %47 ]
  %58 = ptrtoint %"class.std::__1::__tree_end_node"* %57 to i64
  %59 = icmp eq %"class.std::__1::__tree_end_node"* %8, %57
  br i1 %59, label %13, label %14
}

declare void @_ZN10extensions15PermissionIDSet9InsertAllERKS0_(%"class.extensions::PermissionIDSet"*, %"class.extensions::PermissionIDSet"* dereferenceable(32)) local_unnamed_addr #5

declare zeroext i1 @_ZNK10extensions13PermissionSet18ShouldWarnAllHostsEb(%"class.extensions::PermissionSet"*, i1 zeroext) local_unnamed_addr #5

declare void @_ZN10extensions15PermissionIDSet6insertENS_5mojom15APIPermissionIDE(%"class.extensions::PermissionIDSet"*, i32) local_unnamed_addr #5

declare void @_ZN10extensions13URLPatternSetC1Ev(%"class.extensions::URLPatternSet"*) unnamed_addr #5

declare %"class.extensions::ExtensionsClient"* @_ZN10extensions16ExtensionsClient3GetEv() local_unnamed_addr #5

declare void @_ZN23permission_message_util16GetDistinctHostsERKN10extensions13URLPatternSetEbb(%"class.std::__1::set.82"* sret, %"class.extensions::URLPatternSet"* dereferenceable(24), i1 zeroext, i1 zeroext) local_unnamed_addr #5

declare void @_ZN10extensions15PermissionIDSet6insertENS_5mojom15APIPermissionIDERKNSt3__112basic_stringIDsNS3_11char_traitsIDsEENS3_9allocatorIDsEEEE(%"class.extensions::PermissionIDSet"*, i32, %"class.std::__1::basic_string"* dereferenceable(24)) local_unnamed_addr #5

declare void @_ZN4base11UTF8ToUTF16ENS_16BasicStringPieceIcNSt3__111char_traitsIcEEEE(%"class.std::__1::basic_string"* sret, i8*, i64) local_unnamed_addr #5

; Function Attrs: nounwind
declare void @_ZN10extensions13URLPatternSetD1Ev(%"class.extensions::URLPatternSet"*) unnamed_addr #6

declare void @_ZN10extensions15PermissionIDSetC1ERKS0_(%"class.extensions::PermissionIDSet"*, %"class.extensions::PermissionIDSet"* dereferenceable(32)) unnamed_addr #5

declare void @_ZN10extensions15PermissionIDSet5eraseENS_5mojom15APIPermissionIDE(%"class.extensions::PermissionIDSet"*, i32) local_unnamed_addr #5

declare zeroext i1 @_ZNK10extensions15PermissionIDSet8IncludesERKS0_(%"class.extensions::PermissionIDSet"*, %"class.extensions::PermissionIDSet"* dereferenceable(32)) local_unnamed_addr #5

declare zeroext i1 @_ZNK10extensions13PermissionSet28HasEffectiveAccessToAllHostsEv(%"class.extensions::PermissionSet"*) local_unnamed_addr #5

declare zeroext i1 @_ZN4base8EndsWithENS_16BasicStringPieceIcNSt3__111char_traitsIcEEEES4_NS_11CompareCaseE(i8*, i64, i8*, i64, i32) local_unnamed_addr #5

; Function Attrs: argmemonly nounwind
declare void @llvm.memcpy.p0i8.p0i8.i64(i8* nocapture writeonly, i8* nocapture readonly, i64, i1 immarg) #4

; Function Attrs: nounwind ssp uwtable
declare { i8*, i64 } @_ZNK4base16BasicStringPieceIcNSt3__111char_traitsIcEEE6substrEmm(%"class.base::BasicStringPiece"*, i64, i64) local_unnamed_addr #2 align 2

declare zeroext i1 @_ZNK10extensions15PermissionIDSet14ContainsAllIDsERKNSt3__13setINS_5mojom15APIPermissionIDENS1_4lessIS4_EENS1_9allocatorIS4_EEEE(%"class.extensions::PermissionIDSet"*, %"class.std::__1::set.23"* dereferenceable(24)) local_unnamed_addr #5

declare void @_ZNK10extensions27ChromePermissionMessageRule20required_permissionsEv(%"class.std::__1::set.23"* sret, %"class.extensions::ChromePermissionMessageRule"*) local_unnamed_addr #5

declare void @_ZNK10extensions15PermissionIDSet24GetAllPermissionsWithIDsERKNSt3__13setINS_5mojom15APIPermissionIDENS1_4lessIS4_EENS1_9allocatorIS4_EEEE(%"class.extensions::PermissionIDSet"* sret, %"class.extensions::PermissionIDSet"*, %"class.std::__1::set.23"* dereferenceable(24)) local_unnamed_addr #5

declare void @_ZNK10extensions27ChromePermissionMessageRule15all_permissionsEv(%"class.std::__1::set.23"* sret, %"class.extensions::ChromePermissionMessageRule"*) local_unnamed_addr #5

declare void @_ZNK10extensions27ChromePermissionMessageRule20GetPermissionMessageERKNS_15PermissionIDSetE(%"class.extensions::PermissionMessage"* sret, %"class.extensions::ChromePermissionMessageRule"*, %"class.extensions::PermissionIDSet"* dereferenceable(32)) local_unnamed_addr #5

; Function Attrs: nounwind
declare void @_ZN10extensions17PermissionMessageD1Ev(%"class.extensions::PermissionMessage"*) unnamed_addr #6

declare void @_ZN10extensions15PermissionIDSet10DifferenceERKS0_S2_(%"class.extensions::PermissionIDSet"* sret, %"class.extensions::PermissionIDSet"* dereferenceable(32), %"class.extensions::PermissionIDSet"* dereferenceable(32)) local_unnamed_addr #5

; Function Attrs: nounwind ssp uwtable
define linkonce_odr hidden zeroext i1 @_ZNSt3__112__tuple_lessILm2EEclINS_5tupleIJRKNS_12basic_stringIDsNS_11char_traitsIDsEENS_9allocatorIDsEEEERKNS_6vectorIS9_NS7_IS9_EEEEEEESH_EEbRKT_RKT0_(%"struct.std::__1::__tuple_less"*, %"class.std::__1::tuple"* dereferenceable(16), %"class.std::__1::tuple"* dereferenceable(16)) local_unnamed_addr #2 comdat align 2 {
  %4 = getelementptr inbounds %"class.std::__1::tuple", %"class.std::__1::tuple"* %1, i64 0, i32 0, i32 0, i32 0
  %5 = load %"class.std::__1::basic_string"*, %"class.std::__1::basic_string"** %4, align 8
  %6 = getelementptr inbounds %"class.std::__1::tuple", %"class.std::__1::tuple"* %2, i64 0, i32 0, i32 0, i32 0
  %7 = load %"class.std::__1::basic_string"*, %"class.std::__1::basic_string"** %6, align 8
  %8 = bitcast %"class.std::__1::basic_string"* %7 to %"struct.std::__1::basic_string<char16_t, std::__1::char_traits<char16_t>, std::__1::allocator<char16_t> >::__short"*
  %9 = getelementptr inbounds %"struct.std::__1::basic_string<char16_t, std::__1::char_traits<char16_t>, std::__1::allocator<char16_t> >::__short", %"struct.std::__1::basic_string<char16_t, std::__1::char_traits<char16_t>, std::__1::allocator<char16_t> >::__short"* %8, i64 0, i32 1, i32 1
  %10 = load i8, i8* %9, align 1
  %11 = icmp slt i8 %10, 0
  %12 = getelementptr inbounds %"class.std::__1::basic_string", %"class.std::__1::basic_string"* %7, i64 0, i32 0, i32 0, i32 0, i32 0, i32 0, i32 1
  %13 = load i64, i64* %12, align 8
  %14 = zext i8 %10 to i64
  %15 = select i1 %11, i64 %13, i64 %14
  %16 = bitcast %"class.std::__1::basic_string"* %5 to %"struct.std::__1::basic_string<char16_t, std::__1::char_traits<char16_t>, std::__1::allocator<char16_t> >::__short"*
  %17 = getelementptr inbounds %"struct.std::__1::basic_string<char16_t, std::__1::char_traits<char16_t>, std::__1::allocator<char16_t> >::__short", %"struct.std::__1::basic_string<char16_t, std::__1::char_traits<char16_t>, std::__1::allocator<char16_t> >::__short"* %16, i64 0, i32 1, i32 1
  %18 = load i8, i8* %17, align 1
  %19 = icmp slt i8 %18, 0
  %20 = getelementptr inbounds %"class.std::__1::basic_string", %"class.std::__1::basic_string"* %5, i64 0, i32 0, i32 0, i32 0, i32 0, i32 0, i32 1
  %21 = load i64, i64* %20, align 8
  %22 = zext i8 %18 to i64
  %23 = select i1 %19, i64 %21, i64 %22
  %24 = icmp ult i64 %15, %23
  %25 = select i1 %24, i64 %15, i64 %23
  %26 = icmp eq i64 %25, 0
  br i1 %26, label %50, label %27

27:                                               ; preds = %3
  %28 = getelementptr inbounds %"class.std::__1::basic_string", %"class.std::__1::basic_string"* %5, i64 0, i32 0, i32 0, i32 0, i32 0, i32 0, i32 0
  %29 = load i16*, i16** %28, align 8
  %30 = bitcast %"class.std::__1::basic_string"* %5 to i16*
  %31 = select i1 %19, i16* %29, i16* %30
  %32 = getelementptr inbounds %"class.std::__1::basic_string", %"class.std::__1::basic_string"* %7, i64 0, i32 0, i32 0, i32 0, i32 0, i32 0, i32 0
  %33 = load i16*, i16** %32, align 8
  %34 = bitcast %"class.std::__1::basic_string"* %7 to i16*
  %35 = select i1 %11, i16* %33, i16* %34
  br label %36

36:                                               ; preds = %45, %27
  %37 = phi i64 [ %46, %45 ], [ %25, %27 ]
  %38 = phi i16* [ %48, %45 ], [ %35, %27 ]
  %39 = phi i16* [ %47, %45 ], [ %31, %27 ]
  %40 = load i16, i16* %39, align 2
  %41 = load i16, i16* %38, align 2
  %42 = icmp ult i16 %40, %41
  br i1 %42, label %249, label %43

43:                                               ; preds = %36
  %44 = icmp ult i16 %41, %40
  br i1 %44, label %52, label %45

45:                                               ; preds = %43
  %46 = add i64 %37, -1
  %47 = getelementptr inbounds i16, i16* %39, i64 1
  %48 = getelementptr inbounds i16, i16* %38, i64 1
  %49 = icmp eq i64 %46, 0
  br i1 %49, label %50, label %36

50:                                               ; preds = %45, %3
  %51 = icmp ult i64 %23, %15
  br i1 %51, label %249, label %52

52:                                               ; preds = %43, %50
  br i1 %26, label %76, label %53

53:                                               ; preds = %52
  %54 = getelementptr inbounds %"class.std::__1::basic_string", %"class.std::__1::basic_string"* %7, i64 0, i32 0, i32 0, i32 0, i32 0, i32 0, i32 0
  %55 = load i16*, i16** %54, align 8
  %56 = bitcast %"class.std::__1::basic_string"* %7 to i16*
  %57 = select i1 %11, i16* %55, i16* %56
  %58 = getelementptr inbounds %"class.std::__1::basic_string", %"class.std::__1::basic_string"* %5, i64 0, i32 0, i32 0, i32 0, i32 0, i32 0, i32 0
  %59 = load i16*, i16** %58, align 8
  %60 = bitcast %"class.std::__1::basic_string"* %5 to i16*
  %61 = select i1 %19, i16* %59, i16* %60
  br label %62

62:                                               ; preds = %71, %53
  %63 = phi i64 [ %72, %71 ], [ %25, %53 ]
  %64 = phi i16* [ %74, %71 ], [ %61, %53 ]
  %65 = phi i16* [ %73, %71 ], [ %57, %53 ]
  %66 = load i16, i16* %65, align 2
  %67 = load i16, i16* %64, align 2
  %68 = icmp ult i16 %66, %67
  br i1 %68, label %249, label %69

69:                                               ; preds = %62
  %70 = icmp ult i16 %67, %66
  br i1 %70, label %77, label %71

71:                                               ; preds = %69
  %72 = add i64 %63, -1
  %73 = getelementptr inbounds i16, i16* %65, i64 1
  %74 = getelementptr inbounds i16, i16* %64, i64 1
  %75 = icmp eq i64 %72, 0
  br i1 %75, label %76, label %62

76:                                               ; preds = %71, %52
  br i1 %24, label %249, label %77

77:                                               ; preds = %69, %76
  %78 = getelementptr inbounds %"class.std::__1::tuple", %"class.std::__1::tuple"* %1, i64 0, i32 0, i32 1, i32 0
  %79 = load %"class.std::__1::vector.9"*, %"class.std::__1::vector.9"** %78, align 8
  %80 = getelementptr inbounds %"class.std::__1::tuple", %"class.std::__1::tuple"* %2, i64 0, i32 0, i32 1, i32 0
  %81 = load %"class.std::__1::vector.9"*, %"class.std::__1::vector.9"** %80, align 8
  %82 = getelementptr inbounds %"class.std::__1::vector.9", %"class.std::__1::vector.9"* %79, i64 0, i32 0, i32 1
  %83 = load %"class.std::__1::basic_string"*, %"class.std::__1::basic_string"** %82, align 8
  %84 = getelementptr inbounds %"class.std::__1::vector.9", %"class.std::__1::vector.9"* %81, i64 0, i32 0, i32 0
  %85 = load %"class.std::__1::basic_string"*, %"class.std::__1::basic_string"** %84, align 8
  %86 = getelementptr inbounds %"class.std::__1::vector.9", %"class.std::__1::vector.9"* %81, i64 0, i32 0, i32 1
  %87 = load %"class.std::__1::basic_string"*, %"class.std::__1::basic_string"** %86, align 8
  %88 = icmp eq %"class.std::__1::basic_string"* %85, %87
  %89 = getelementptr inbounds %"class.std::__1::vector.9", %"class.std::__1::vector.9"* %79, i64 0, i32 0, i32 0
  %90 = load %"class.std::__1::basic_string"*, %"class.std::__1::basic_string"** %89, align 8
  br i1 %88, label %169, label %91

91:                                               ; preds = %77, %165
  %92 = phi %"class.std::__1::basic_string"* [ %166, %165 ], [ %90, %77 ]
  %93 = phi %"class.std::__1::basic_string"* [ %167, %165 ], [ %85, %77 ]
  %94 = icmp eq %"class.std::__1::basic_string"* %92, %83
  br i1 %94, label %249, label %95

95:                                               ; preds = %91
  %96 = bitcast %"class.std::__1::basic_string"* %93 to %"struct.std::__1::basic_string<char16_t, std::__1::char_traits<char16_t>, std::__1::allocator<char16_t> >::__short"*
  %97 = getelementptr inbounds %"struct.std::__1::basic_string<char16_t, std::__1::char_traits<char16_t>, std::__1::allocator<char16_t> >::__short", %"struct.std::__1::basic_string<char16_t, std::__1::char_traits<char16_t>, std::__1::allocator<char16_t> >::__short"* %96, i64 0, i32 1, i32 1
  %98 = load i8, i8* %97, align 1
  %99 = icmp slt i8 %98, 0
  %100 = getelementptr inbounds %"class.std::__1::basic_string", %"class.std::__1::basic_string"* %93, i64 0, i32 0, i32 0, i32 0, i32 0, i32 0, i32 1
  %101 = load i64, i64* %100, align 8
  %102 = zext i8 %98 to i64
  %103 = select i1 %99, i64 %101, i64 %102
  %104 = bitcast %"class.std::__1::basic_string"* %92 to %"struct.std::__1::basic_string<char16_t, std::__1::char_traits<char16_t>, std::__1::allocator<char16_t> >::__short"*
  %105 = getelementptr inbounds %"struct.std::__1::basic_string<char16_t, std::__1::char_traits<char16_t>, std::__1::allocator<char16_t> >::__short", %"struct.std::__1::basic_string<char16_t, std::__1::char_traits<char16_t>, std::__1::allocator<char16_t> >::__short"* %104, i64 0, i32 1, i32 1
  %106 = load i8, i8* %105, align 1
  %107 = icmp slt i8 %106, 0
  %108 = getelementptr inbounds %"class.std::__1::basic_string", %"class.std::__1::basic_string"* %92, i64 0, i32 0, i32 0, i32 0, i32 0, i32 0, i32 1
  %109 = load i64, i64* %108, align 8
  %110 = zext i8 %106 to i64
  %111 = select i1 %107, i64 %109, i64 %110
  %112 = icmp ult i64 %103, %111
  %113 = select i1 %112, i64 %103, i64 %111
  %114 = icmp eq i64 %113, 0
  br i1 %114, label %138, label %115

115:                                              ; preds = %95
  %116 = getelementptr inbounds %"class.std::__1::basic_string", %"class.std::__1::basic_string"* %92, i64 0, i32 0, i32 0, i32 0, i32 0, i32 0, i32 0
  %117 = load i16*, i16** %116, align 8
  %118 = bitcast %"class.std::__1::basic_string"* %92 to i16*
  %119 = select i1 %107, i16* %117, i16* %118
  %120 = getelementptr inbounds %"class.std::__1::basic_string", %"class.std::__1::basic_string"* %93, i64 0, i32 0, i32 0, i32 0, i32 0, i32 0, i32 0
  %121 = load i16*, i16** %120, align 8
  %122 = bitcast %"class.std::__1::basic_string"* %93 to i16*
  %123 = select i1 %99, i16* %121, i16* %122
  br label %124

124:                                              ; preds = %133, %115
  %125 = phi i64 [ %134, %133 ], [ %113, %115 ]
  %126 = phi i16* [ %136, %133 ], [ %123, %115 ]
  %127 = phi i16* [ %135, %133 ], [ %119, %115 ]
  %128 = load i16, i16* %127, align 2
  %129 = load i16, i16* %126, align 2
  %130 = icmp ult i16 %128, %129
  br i1 %130, label %249, label %131

131:                                              ; preds = %124
  %132 = icmp ult i16 %129, %128
  br i1 %132, label %140, label %133

133:                                              ; preds = %131
  %134 = add i64 %125, -1
  %135 = getelementptr inbounds i16, i16* %127, i64 1
  %136 = getelementptr inbounds i16, i16* %126, i64 1
  %137 = icmp eq i64 %134, 0
  br i1 %137, label %138, label %124

138:                                              ; preds = %133, %95
  %139 = icmp ult i64 %111, %103
  br i1 %139, label %249, label %140

140:                                              ; preds = %131, %138
  br i1 %114, label %164, label %141

141:                                              ; preds = %140
  %142 = getelementptr inbounds %"class.std::__1::basic_string", %"class.std::__1::basic_string"* %93, i64 0, i32 0, i32 0, i32 0, i32 0, i32 0, i32 0
  %143 = load i16*, i16** %142, align 8
  %144 = bitcast %"class.std::__1::basic_string"* %93 to i16*
  %145 = select i1 %99, i16* %143, i16* %144
  %146 = getelementptr inbounds %"class.std::__1::basic_string", %"class.std::__1::basic_string"* %92, i64 0, i32 0, i32 0, i32 0, i32 0, i32 0, i32 0
  %147 = load i16*, i16** %146, align 8
  %148 = bitcast %"class.std::__1::basic_string"* %92 to i16*
  %149 = select i1 %107, i16* %147, i16* %148
  br label %150

150:                                              ; preds = %159, %141
  %151 = phi i64 [ %160, %159 ], [ %113, %141 ]
  %152 = phi i16* [ %162, %159 ], [ %149, %141 ]
  %153 = phi i16* [ %161, %159 ], [ %145, %141 ]
  %154 = load i16, i16* %153, align 2
  %155 = load i16, i16* %152, align 2
  %156 = icmp ult i16 %154, %155
  br i1 %156, label %169, label %157

157:                                              ; preds = %150
  %158 = icmp ult i16 %155, %154
  br i1 %158, label %165, label %159

159:                                              ; preds = %157
  %160 = add i64 %151, -1
  %161 = getelementptr inbounds i16, i16* %153, i64 1
  %162 = getelementptr inbounds i16, i16* %152, i64 1
  %163 = icmp eq i64 %160, 0
  br i1 %163, label %164, label %150

164:                                              ; preds = %159, %140
  br i1 %112, label %169, label %165

165:                                              ; preds = %157, %164
  %166 = getelementptr inbounds %"class.std::__1::basic_string", %"class.std::__1::basic_string"* %92, i64 1
  %167 = getelementptr inbounds %"class.std::__1::basic_string", %"class.std::__1::basic_string"* %93, i64 1
  %168 = icmp eq %"class.std::__1::basic_string"* %167, %87
  br i1 %168, label %169, label %91

169:                                              ; preds = %165, %164, %150, %77
  %170 = icmp eq %"class.std::__1::basic_string"* %90, %83
  br i1 %170, label %249, label %171

171:                                              ; preds = %169, %245
  %172 = phi %"class.std::__1::basic_string"* [ %246, %245 ], [ %85, %169 ]
  %173 = phi %"class.std::__1::basic_string"* [ %247, %245 ], [ %90, %169 ]
  %174 = icmp eq %"class.std::__1::basic_string"* %172, %87
  br i1 %174, label %249, label %175

175:                                              ; preds = %171
  %176 = bitcast %"class.std::__1::basic_string"* %173 to %"struct.std::__1::basic_string<char16_t, std::__1::char_traits<char16_t>, std::__1::allocator<char16_t> >::__short"*
  %177 = getelementptr inbounds %"struct.std::__1::basic_string<char16_t, std::__1::char_traits<char16_t>, std::__1::allocator<char16_t> >::__short", %"struct.std::__1::basic_string<char16_t, std::__1::char_traits<char16_t>, std::__1::allocator<char16_t> >::__short"* %176, i64 0, i32 1, i32 1
  %178 = load i8, i8* %177, align 1
  %179 = icmp slt i8 %178, 0
  %180 = getelementptr inbounds %"class.std::__1::basic_string", %"class.std::__1::basic_string"* %173, i64 0, i32 0, i32 0, i32 0, i32 0, i32 0, i32 1
  %181 = load i64, i64* %180, align 8
  %182 = zext i8 %178 to i64
  %183 = select i1 %179, i64 %181, i64 %182
  %184 = bitcast %"class.std::__1::basic_string"* %172 to %"struct.std::__1::basic_string<char16_t, std::__1::char_traits<char16_t>, std::__1::allocator<char16_t> >::__short"*
  %185 = getelementptr inbounds %"struct.std::__1::basic_string<char16_t, std::__1::char_traits<char16_t>, std::__1::allocator<char16_t> >::__short", %"struct.std::__1::basic_string<char16_t, std::__1::char_traits<char16_t>, std::__1::allocator<char16_t> >::__short"* %184, i64 0, i32 1, i32 1
  %186 = load i8, i8* %185, align 1
  %187 = icmp slt i8 %186, 0
  %188 = getelementptr inbounds %"class.std::__1::basic_string", %"class.std::__1::basic_string"* %172, i64 0, i32 0, i32 0, i32 0, i32 0, i32 0, i32 1
  %189 = load i64, i64* %188, align 8
  %190 = zext i8 %186 to i64
  %191 = select i1 %187, i64 %189, i64 %190
  %192 = icmp ult i64 %183, %191
  %193 = select i1 %192, i64 %183, i64 %191
  %194 = icmp eq i64 %193, 0
  br i1 %194, label %218, label %195

195:                                              ; preds = %175
  %196 = getelementptr inbounds %"class.std::__1::basic_string", %"class.std::__1::basic_string"* %172, i64 0, i32 0, i32 0, i32 0, i32 0, i32 0, i32 0
  %197 = load i16*, i16** %196, align 8
  %198 = bitcast %"class.std::__1::basic_string"* %172 to i16*
  %199 = select i1 %187, i16* %197, i16* %198
  %200 = getelementptr inbounds %"class.std::__1::basic_string", %"class.std::__1::basic_string"* %173, i64 0, i32 0, i32 0, i32 0, i32 0, i32 0, i32 0
  %201 = load i16*, i16** %200, align 8
  %202 = bitcast %"class.std::__1::basic_string"* %173 to i16*
  %203 = select i1 %179, i16* %201, i16* %202
  br label %204

204:                                              ; preds = %213, %195
  %205 = phi i64 [ %214, %213 ], [ %193, %195 ]
  %206 = phi i16* [ %216, %213 ], [ %203, %195 ]
  %207 = phi i16* [ %215, %213 ], [ %199, %195 ]
  %208 = load i16, i16* %207, align 2
  %209 = load i16, i16* %206, align 2
  %210 = icmp ult i16 %208, %209
  br i1 %210, label %249, label %211

211:                                              ; preds = %204
  %212 = icmp ult i16 %209, %208
  br i1 %212, label %220, label %213

213:                                              ; preds = %211
  %214 = add i64 %205, -1
  %215 = getelementptr inbounds i16, i16* %207, i64 1
  %216 = getelementptr inbounds i16, i16* %206, i64 1
  %217 = icmp eq i64 %214, 0
  br i1 %217, label %218, label %204

218:                                              ; preds = %213, %175
  %219 = icmp ult i64 %191, %183
  br i1 %219, label %249, label %220

220:                                              ; preds = %211, %218
  br i1 %194, label %244, label %221

221:                                              ; preds = %220
  %222 = getelementptr inbounds %"class.std::__1::basic_string", %"class.std::__1::basic_string"* %173, i64 0, i32 0, i32 0, i32 0, i32 0, i32 0, i32 0
  %223 = load i16*, i16** %222, align 8
  %224 = bitcast %"class.std::__1::basic_string"* %173 to i16*
  %225 = select i1 %179, i16* %223, i16* %224
  %226 = getelementptr inbounds %"class.std::__1::basic_string", %"class.std::__1::basic_string"* %172, i64 0, i32 0, i32 0, i32 0, i32 0, i32 0, i32 0
  %227 = load i16*, i16** %226, align 8
  %228 = bitcast %"class.std::__1::basic_string"* %172 to i16*
  %229 = select i1 %187, i16* %227, i16* %228
  br label %230

230:                                              ; preds = %239, %221
  %231 = phi i64 [ %240, %239 ], [ %193, %221 ]
  %232 = phi i16* [ %242, %239 ], [ %229, %221 ]
  %233 = phi i16* [ %241, %239 ], [ %225, %221 ]
  %234 = load i16, i16* %233, align 2
  %235 = load i16, i16* %232, align 2
  %236 = icmp ult i16 %234, %235
  br i1 %236, label %249, label %237

237:                                              ; preds = %230
  %238 = icmp ult i16 %235, %234
  br i1 %238, label %245, label %239

239:                                              ; preds = %237
  %240 = add i64 %231, -1
  %241 = getelementptr inbounds i16, i16* %233, i64 1
  %242 = getelementptr inbounds i16, i16* %232, i64 1
  %243 = icmp eq i64 %240, 0
  br i1 %243, label %244, label %230

244:                                              ; preds = %239, %220
  br i1 %192, label %249, label %245

245:                                              ; preds = %237, %244
  %246 = getelementptr inbounds %"class.std::__1::basic_string", %"class.std::__1::basic_string"* %172, i64 1
  %247 = getelementptr inbounds %"class.std::__1::basic_string", %"class.std::__1::basic_string"* %173, i64 1
  %248 = icmp eq %"class.std::__1::basic_string"* %247, %83
  br i1 %248, label %249, label %171

249:                                              ; preds = %36, %62, %91, %138, %124, %171, %218, %244, %245, %204, %230, %169, %76, %50
  %250 = phi i1 [ true, %50 ], [ false, %76 ], [ false, %169 ], [ false, %230 ], [ false, %204 ], [ false, %245 ], [ false, %244 ], [ false, %218 ], [ false, %171 ], [ true, %124 ], [ true, %138 ], [ true, %91 ], [ false, %62 ], [ true, %36 ]
  ret i1 %250
}

; Function Attrs: nofree nounwind readonly
declare i32 @memcmp(i8* nocapture, i8* nocapture, i64) local_unnamed_addr #7

; Function Attrs: nounwind ssp uwtable
define linkonce_odr hidden void @_ZNSt3__16__treeIN10extensions12PermissionIDENS_4lessIS2_EENS_9allocatorIS2_EEE14__assign_multiINS_21__tree_const_iteratorIS2_PNS_11__tree_nodeIS2_PvEElEEEEvT_SF_(%"class.std::__1::__tree"*, %"class.std::__1::__tree_end_node"*, %"class.std::__1::__tree_end_node"*) local_unnamed_addr #2 comdat align 2 {
  %4 = getelementptr inbounds %"class.std::__1::__tree", %"class.std::__1::__tree"* %0, i64 0, i32 2, i32 0, i32 0
  %5 = load i64, i64* %4, align 8
  %6 = icmp eq i64 %5, 0
  br i1 %6, label %299, label %7

7:                                                ; preds = %3
  %8 = getelementptr inbounds %"class.std::__1::__tree", %"class.std::__1::__tree"* %0, i64 0, i32 0
  %9 = bitcast %"class.std::__1::__tree"* %0 to %"class.std::__1::__tree_node"**
  %10 = load %"class.std::__1::__tree_node"*, %"class.std::__1::__tree_node"** %9, align 8
  %11 = getelementptr inbounds %"class.std::__1::__tree", %"class.std::__1::__tree"* %0, i64 0, i32 1, i32 0, i32 0
  store %"class.std::__1::__tree_end_node"* %11, %"class.std::__1::__tree_end_node"** %8, align 8
  %12 = getelementptr inbounds %"class.std::__1::__tree_end_node", %"class.std::__1::__tree_end_node"* %11, i64 0, i32 0
  %13 = load %"class.std::__1::__tree_node_base"*, %"class.std::__1::__tree_node_base"** %12, align 8
  %14 = getelementptr inbounds %"class.std::__1::__tree_node_base", %"class.std::__1::__tree_node_base"* %13, i64 0, i32 2
  store %"class.std::__1::__tree_end_node"* null, %"class.std::__1::__tree_end_node"** %14, align 8
  %15 = getelementptr inbounds %"class.std::__1::__tree_node", %"class.std::__1::__tree_node"* %10, i64 0, i32 0, i32 1
  %16 = bitcast %"class.std::__1::__tree_end_node"* %11 to i8*
  tail call void @llvm.memset.p0i8.i64(i8* align 8 %16, i8 0, i64 16, i1 false) #14
  %17 = load %"class.std::__1::__tree_node_base"*, %"class.std::__1::__tree_node_base"** %15, align 8
  %18 = icmp eq %"class.std::__1::__tree_node_base"* %17, null
  %19 = bitcast %"class.std::__1::__tree_node_base"* %17 to %"class.std::__1::__tree_node"*
  %20 = select i1 %18, %"class.std::__1::__tree_node"* %10, %"class.std::__1::__tree_node"* %19
  %21 = icmp eq %"class.std::__1::__tree_node"* %20, null
  br i1 %21, label %22, label %23

22:                                               ; preds = %7
  tail call void @_ZNSt3__16__treeIN10extensions12PermissionIDENS_4lessIS2_EENS_9allocatorIS2_EEE7destroyEPNS_11__tree_nodeIS2_PvEE(%"class.std::__1::__tree"* %0, %"class.std::__1::__tree_node"* %20) #14
  br label %299

23:                                               ; preds = %7
  %24 = getelementptr inbounds %"class.std::__1::__tree_node", %"class.std::__1::__tree_node"* %20, i64 0, i32 0, i32 2
  %25 = load %"class.std::__1::__tree_end_node"*, %"class.std::__1::__tree_end_node"** %24, align 8
  %26 = icmp eq %"class.std::__1::__tree_end_node"* %25, null
  br i1 %26, label %72, label %27

27:                                               ; preds = %23
  %28 = bitcast %"class.std::__1::__tree_node"* %20 to %"class.std::__1::__tree_node_base"*
  %29 = getelementptr inbounds %"class.std::__1::__tree_end_node", %"class.std::__1::__tree_end_node"* %25, i64 0, i32 0
  %30 = load %"class.std::__1::__tree_node_base"*, %"class.std::__1::__tree_node_base"** %29, align 8
  %31 = icmp eq %"class.std::__1::__tree_node_base"* %30, %28
  br i1 %31, label %32, label %51

32:                                               ; preds = %27
  store %"class.std::__1::__tree_node_base"* null, %"class.std::__1::__tree_node_base"** %29, align 8
  %33 = bitcast %"class.std::__1::__tree_end_node"** %24 to %"class.std::__1::__tree_node"**
  %34 = load %"class.std::__1::__tree_node"*, %"class.std::__1::__tree_node"** %33, align 8
  %35 = getelementptr inbounds %"class.std::__1::__tree_node", %"class.std::__1::__tree_node"* %34, i64 0, i32 0, i32 1
  %36 = load %"class.std::__1::__tree_node_base"*, %"class.std::__1::__tree_node_base"** %35, align 8
  %37 = icmp eq %"class.std::__1::__tree_node_base"* %36, null
  br i1 %37, label %72, label %38

38:                                               ; preds = %32, %47
  %39 = phi %"class.std::__1::__tree_node_base"* [ %48, %47 ], [ %36, %32 ]
  %40 = getelementptr inbounds %"class.std::__1::__tree_node_base", %"class.std::__1::__tree_node_base"* %39, i64 0, i32 0, i32 0
  %41 = load %"class.std::__1::__tree_node_base"*, %"class.std::__1::__tree_node_base"** %40, align 8
  %42 = icmp eq %"class.std::__1::__tree_node_base"* %41, null
  br i1 %42, label %43, label %47

43:                                               ; preds = %38
  %44 = getelementptr inbounds %"class.std::__1::__tree_node_base", %"class.std::__1::__tree_node_base"* %39, i64 0, i32 1
  %45 = load %"class.std::__1::__tree_node_base"*, %"class.std::__1::__tree_node_base"** %44, align 8
  %46 = icmp eq %"class.std::__1::__tree_node_base"* %45, null
  br i1 %46, label %49, label %47

47:                                               ; preds = %43, %38
  %48 = phi %"class.std::__1::__tree_node_base"* [ %41, %38 ], [ %45, %43 ]
  br label %38

49:                                               ; preds = %43
  %50 = bitcast %"class.std::__1::__tree_node_base"* %39 to %"class.std::__1::__tree_node"*
  br label %72

51:                                               ; preds = %27
  %52 = getelementptr inbounds %"class.std::__1::__tree_end_node", %"class.std::__1::__tree_end_node"* %25, i64 1, i32 0
  store %"class.std::__1::__tree_node_base"* null, %"class.std::__1::__tree_node_base"** %52, align 8
  %53 = load %"class.std::__1::__tree_end_node"*, %"class.std::__1::__tree_end_node"** %24, align 8
  %54 = getelementptr inbounds %"class.std::__1::__tree_end_node", %"class.std::__1::__tree_end_node"* %53, i64 0, i32 0
  %55 = load %"class.std::__1::__tree_node_base"*, %"class.std::__1::__tree_node_base"** %54, align 8
  %56 = icmp eq %"class.std::__1::__tree_node_base"* %55, null
  br i1 %56, label %57, label %59

57:                                               ; preds = %51
  %58 = bitcast %"class.std::__1::__tree_end_node"* %53 to %"class.std::__1::__tree_node"*
  br label %72

59:                                               ; preds = %51, %68
  %60 = phi %"class.std::__1::__tree_node_base"* [ %69, %68 ], [ %55, %51 ]
  %61 = getelementptr inbounds %"class.std::__1::__tree_node_base", %"class.std::__1::__tree_node_base"* %60, i64 0, i32 0, i32 0
  %62 = load %"class.std::__1::__tree_node_base"*, %"class.std::__1::__tree_node_base"** %61, align 8
  %63 = icmp eq %"class.std::__1::__tree_node_base"* %62, null
  br i1 %63, label %64, label %68

64:                                               ; preds = %59
  %65 = getelementptr inbounds %"class.std::__1::__tree_node_base", %"class.std::__1::__tree_node_base"* %60, i64 0, i32 1
  %66 = load %"class.std::__1::__tree_node_base"*, %"class.std::__1::__tree_node_base"** %65, align 8
  %67 = icmp eq %"class.std::__1::__tree_node_base"* %66, null
  br i1 %67, label %70, label %68

68:                                               ; preds = %64, %59
  %69 = phi %"class.std::__1::__tree_node_base"* [ %62, %59 ], [ %66, %64 ]
  br label %59

70:                                               ; preds = %64
  %71 = bitcast %"class.std::__1::__tree_node_base"* %60 to %"class.std::__1::__tree_node"*
  br label %72

72:                                               ; preds = %23, %32, %49, %57, %70
  %73 = phi %"class.std::__1::__tree_node"* [ %50, %49 ], [ %58, %57 ], [ %71, %70 ], [ null, %23 ], [ %34, %32 ]
  %74 = ptrtoint %"class.std::__1::__tree_node"* %73 to i64
  %75 = icmp eq %"class.std::__1::__tree_end_node"* %1, %2
  br i1 %75, label %279, label %76

76:                                               ; preds = %72
  %77 = bitcast %"class.std::__1::__tree_end_node"* %11 to %"class.std::__1::__tree_node"**
  %78 = ptrtoint %"class.std::__1::__tree_end_node"* %11 to i64
  %79 = bitcast %"class.std::__1::__tree"* %0 to i64*
  %80 = getelementptr inbounds %"class.std::__1::__tree", %"class.std::__1::__tree"* %0, i64 0, i32 1, i32 0, i32 0, i32 0
  br label %81

81:                                               ; preds = %76, %271
  %82 = phi %"class.std::__1::__tree_node"* [ %73, %76 ], [ %273, %271 ]
  %83 = phi i64 [ %74, %76 ], [ %243, %271 ]
  %84 = phi %"class.std::__1::__tree_node"* [ %20, %76 ], [ %82, %271 ]
  %85 = phi %"class.std::__1::__tree_end_node"* [ %1, %76 ], [ %272, %271 ]
  %86 = getelementptr inbounds %"class.std::__1::__tree_end_node", %"class.std::__1::__tree_end_node"* %85, i64 5
  %87 = bitcast %"class.std::__1::__tree_end_node"* %86 to i32*
  %88 = load i32, i32* %87, align 8
  %89 = getelementptr inbounds %"class.std::__1::__tree_node", %"class.std::__1::__tree_node"* %84, i64 0, i32 1, i32 1, i32 0
  store i32 %88, i32* %89, align 8
  %90 = getelementptr inbounds %"class.std::__1::__tree_end_node", %"class.std::__1::__tree_end_node"* %85, i64 6
  %91 = bitcast %"class.std::__1::__tree_end_node"* %90 to %"class.std::__1::basic_string"*
  %92 = getelementptr inbounds %"class.std::__1::__tree_node", %"class.std::__1::__tree_node"* %84, i64 0, i32 1, i32 1, i32 1
  %93 = tail call dereferenceable(24) %"class.std::__1::basic_string"* @_ZNSt3__112basic_stringIDsNS_11char_traitsIDsEENS_9allocatorIDsEEEaSERKS5_(%"class.std::__1::basic_string"* %92, %"class.std::__1::basic_string"* dereferenceable(24) %91) #14
  %94 = load %"class.std::__1::__tree_node"*, %"class.std::__1::__tree_node"** %77, align 8
  %95 = icmp eq %"class.std::__1::__tree_node"* %94, null
  br i1 %95, label %168, label %96

96:                                               ; preds = %81
  %97 = load i32, i32* %89, align 8
  %98 = bitcast %"class.std::__1::basic_string"* %92 to %"struct.std::__1::basic_string<char16_t, std::__1::char_traits<char16_t>, std::__1::allocator<char16_t> >::__short"*
  %99 = getelementptr inbounds %"struct.std::__1::basic_string<char16_t, std::__1::char_traits<char16_t>, std::__1::allocator<char16_t> >::__short", %"struct.std::__1::basic_string<char16_t, std::__1::char_traits<char16_t>, std::__1::allocator<char16_t> >::__short"* %98, i64 0, i32 1, i32 1
  %100 = load i8, i8* %99, align 1
  %101 = icmp slt i8 %100, 0
  %102 = getelementptr inbounds %"class.std::__1::__tree_node", %"class.std::__1::__tree_node"* %84, i64 0, i32 1, i32 1, i32 1, i32 0, i32 0, i32 0, i32 0, i32 0, i32 1
  %103 = load i64, i64* %102, align 8
  %104 = zext i8 %100 to i64
  %105 = select i1 %101, i64 %103, i64 %104
  %106 = getelementptr inbounds %"class.std::__1::basic_string", %"class.std::__1::basic_string"* %92, i64 0, i32 0, i32 0, i32 0, i32 0, i32 0, i32 0
  %107 = load i16*, i16** %106, align 8
  %108 = bitcast %"class.std::__1::basic_string"* %92 to i16*
  %109 = select i1 %101, i16* %107, i16* %108
  br label %110

110:                                              ; preds = %165, %96
  %111 = phi %"class.std::__1::__tree_node"* [ %167, %165 ], [ %94, %96 ]
  %112 = getelementptr inbounds %"class.std::__1::__tree_node", %"class.std::__1::__tree_node"* %111, i64 0, i32 1, i32 1, i32 0
  %113 = load i32, i32* %112, align 8
  %114 = icmp slt i32 %97, %113
  br i1 %114, label %151, label %115

115:                                              ; preds = %110
  %116 = icmp slt i32 %113, %97
  br i1 %116, label %158, label %117

117:                                              ; preds = %115
  %118 = getelementptr inbounds %"class.std::__1::__tree_node", %"class.std::__1::__tree_node"* %111, i64 0, i32 1, i32 1, i32 1
  %119 = bitcast %"class.std::__1::basic_string"* %118 to %"struct.std::__1::basic_string<char16_t, std::__1::char_traits<char16_t>, std::__1::allocator<char16_t> >::__short"*
  %120 = getelementptr inbounds %"struct.std::__1::basic_string<char16_t, std::__1::char_traits<char16_t>, std::__1::allocator<char16_t> >::__short", %"struct.std::__1::basic_string<char16_t, std::__1::char_traits<char16_t>, std::__1::allocator<char16_t> >::__short"* %119, i64 0, i32 1, i32 1
  %121 = load i8, i8* %120, align 1
  %122 = icmp slt i8 %121, 0
  %123 = getelementptr inbounds %"class.std::__1::__tree_node", %"class.std::__1::__tree_node"* %111, i64 0, i32 1, i32 1, i32 1, i32 0, i32 0, i32 0, i32 0, i32 0, i32 1
  %124 = load i64, i64* %123, align 8
  %125 = zext i8 %121 to i64
  %126 = select i1 %122, i64 %124, i64 %125
  %127 = icmp ult i64 %126, %105
  %128 = select i1 %127, i64 %126, i64 %105
  %129 = icmp eq i64 %128, 0
  br i1 %129, label %149, label %130

130:                                              ; preds = %117
  %131 = getelementptr inbounds %"class.std::__1::basic_string", %"class.std::__1::basic_string"* %118, i64 0, i32 0, i32 0, i32 0, i32 0, i32 0, i32 0
  %132 = load i16*, i16** %131, align 8
  %133 = bitcast %"class.std::__1::basic_string"* %118 to i16*
  %134 = select i1 %122, i16* %132, i16* %133
  br label %135

135:                                              ; preds = %144, %130
  %136 = phi i64 [ %145, %144 ], [ %128, %130 ]
  %137 = phi i16* [ %147, %144 ], [ %134, %130 ]
  %138 = phi i16* [ %146, %144 ], [ %109, %130 ]
  %139 = load i16, i16* %138, align 2
  %140 = load i16, i16* %137, align 2
  %141 = icmp ult i16 %139, %140
  br i1 %141, label %151, label %142

142:                                              ; preds = %135
  %143 = icmp ult i16 %140, %139
  br i1 %143, label %158, label %144

144:                                              ; preds = %142
  %145 = add i64 %136, -1
  %146 = getelementptr inbounds i16, i16* %138, i64 1
  %147 = getelementptr inbounds i16, i16* %137, i64 1
  %148 = icmp eq i64 %145, 0
  br i1 %148, label %149, label %135

149:                                              ; preds = %144, %117
  %150 = icmp ult i64 %105, %126
  br i1 %150, label %151, label %158

151:                                              ; preds = %135, %149, %110
  %152 = getelementptr inbounds %"class.std::__1::__tree_node", %"class.std::__1::__tree_node"* %111, i64 0, i32 0, i32 0, i32 0
  %153 = load %"class.std::__1::__tree_node_base"*, %"class.std::__1::__tree_node_base"** %152, align 8
  %154 = icmp eq %"class.std::__1::__tree_node_base"* %153, null
  br i1 %154, label %155, label %165

155:                                              ; preds = %151
  %156 = getelementptr inbounds %"class.std::__1::__tree_node", %"class.std::__1::__tree_node"* %111, i64 0, i32 0, i32 0, i32 0
  %157 = ptrtoint %"class.std::__1::__tree_node"* %111 to i64
  br label %168

158:                                              ; preds = %142, %149, %115
  %159 = getelementptr inbounds %"class.std::__1::__tree_node", %"class.std::__1::__tree_node"* %111, i64 0, i32 0, i32 1
  %160 = load %"class.std::__1::__tree_node_base"*, %"class.std::__1::__tree_node_base"** %159, align 8
  %161 = icmp eq %"class.std::__1::__tree_node_base"* %160, null
  br i1 %161, label %162, label %165

162:                                              ; preds = %158
  %163 = getelementptr inbounds %"class.std::__1::__tree_node", %"class.std::__1::__tree_node"* %111, i64 0, i32 0, i32 1
  %164 = ptrtoint %"class.std::__1::__tree_node"* %111 to i64
  br label %168

165:                                              ; preds = %158, %151
  %166 = phi %"class.std::__1::__tree_node_base"* [ %153, %151 ], [ %160, %158 ]
  %167 = bitcast %"class.std::__1::__tree_node_base"* %166 to %"class.std::__1::__tree_node"*
  br label %110

168:                                              ; preds = %81, %155, %162
  %169 = phi i64 [ %157, %155 ], [ %164, %162 ], [ %78, %81 ]
  %170 = phi %"class.std::__1::__tree_node_base"** [ %156, %155 ], [ %163, %162 ], [ %12, %81 ]
  %171 = bitcast %"class.std::__1::__tree_node"* %84 to %"class.std::__1::__tree_node_base"*
  %172 = getelementptr inbounds %"class.std::__1::__tree_node", %"class.std::__1::__tree_node"* %84, i64 0, i32 0, i32 2
  %173 = bitcast %"class.std::__1::__tree_node"* %84 to i8*
  tail call void @llvm.memset.p0i8.i64(i8* nonnull align 8 %173, i8 0, i64 16, i1 false) #14
  %174 = bitcast %"class.std::__1::__tree_end_node"** %172 to i64*
  store i64 %169, i64* %174, align 8
  %175 = bitcast %"class.std::__1::__tree_node_base"** %170 to %"class.std::__1::__tree_node"**
  store %"class.std::__1::__tree_node"* %84, %"class.std::__1::__tree_node"** %175, align 8
  %176 = load %"class.std::__1::__tree_end_node"*, %"class.std::__1::__tree_end_node"** %8, align 8
  %177 = getelementptr inbounds %"class.std::__1::__tree_end_node", %"class.std::__1::__tree_end_node"* %176, i64 0, i32 0
  %178 = load %"class.std::__1::__tree_node_base"*, %"class.std::__1::__tree_node_base"** %177, align 8
  %179 = icmp eq %"class.std::__1::__tree_node_base"* %178, null
  br i1 %179, label %183, label %180

180:                                              ; preds = %168
  %181 = ptrtoint %"class.std::__1::__tree_node_base"* %178 to i64
  store i64 %181, i64* %79, align 8
  %182 = load %"class.std::__1::__tree_node_base"*, %"class.std::__1::__tree_node_base"** %170, align 8
  br label %183

183:                                              ; preds = %168, %180
  %184 = phi %"class.std::__1::__tree_node_base"* [ %171, %168 ], [ %182, %180 ]
  %185 = load %"class.std::__1::__tree_node_base"*, %"class.std::__1::__tree_node_base"** %80, align 8
  tail call void @_ZNSt3__127__tree_balance_after_insertIPNS_16__tree_node_baseIPvEEEEvT_S5_(%"class.std::__1::__tree_node_base"* %185, %"class.std::__1::__tree_node_base"* %184) #14
  %186 = load i64, i64* %4, align 8
  %187 = add i64 %186, 1
  store i64 %187, i64* %4, align 8
  %188 = icmp eq i64 %83, 0
  br i1 %188, label %242, label %189

189:                                              ; preds = %183
  %190 = inttoptr i64 %83 to %"class.std::__1::__tree_node"*
  %191 = getelementptr inbounds %"class.std::__1::__tree_node", %"class.std::__1::__tree_node"* %190, i64 0, i32 0, i32 2
  %192 = load %"class.std::__1::__tree_end_node"*, %"class.std::__1::__tree_end_node"** %191, align 8
  %193 = icmp eq %"class.std::__1::__tree_end_node"* %192, null
  br i1 %193, label %239, label %194

194:                                              ; preds = %189
  %195 = inttoptr i64 %83 to %"class.std::__1::__tree_node_base"*
  %196 = getelementptr inbounds %"class.std::__1::__tree_end_node", %"class.std::__1::__tree_end_node"* %192, i64 0, i32 0
  %197 = load %"class.std::__1::__tree_node_base"*, %"class.std::__1::__tree_node_base"** %196, align 8
  %198 = icmp eq %"class.std::__1::__tree_node_base"* %197, %195
  br i1 %198, label %199, label %218

199:                                              ; preds = %194
  store %"class.std::__1::__tree_node_base"* null, %"class.std::__1::__tree_node_base"** %196, align 8
  %200 = bitcast %"class.std::__1::__tree_end_node"** %191 to %"class.std::__1::__tree_node"**
  %201 = load %"class.std::__1::__tree_node"*, %"class.std::__1::__tree_node"** %200, align 8
  %202 = getelementptr inbounds %"class.std::__1::__tree_node", %"class.std::__1::__tree_node"* %201, i64 0, i32 0, i32 1
  %203 = load %"class.std::__1::__tree_node_base"*, %"class.std::__1::__tree_node_base"** %202, align 8
  %204 = icmp eq %"class.std::__1::__tree_node_base"* %203, null
  br i1 %204, label %239, label %205

205:                                              ; preds = %199, %214
  %206 = phi %"class.std::__1::__tree_node_base"* [ %215, %214 ], [ %203, %199 ]
  %207 = getelementptr inbounds %"class.std::__1::__tree_node_base", %"class.std::__1::__tree_node_base"* %206, i64 0, i32 0, i32 0
  %208 = load %"class.std::__1::__tree_node_base"*, %"class.std::__1::__tree_node_base"** %207, align 8
  %209 = icmp eq %"class.std::__1::__tree_node_base"* %208, null
  br i1 %209, label %210, label %214

210:                                              ; preds = %205
  %211 = getelementptr inbounds %"class.std::__1::__tree_node_base", %"class.std::__1::__tree_node_base"* %206, i64 0, i32 1
  %212 = load %"class.std::__1::__tree_node_base"*, %"class.std::__1::__tree_node_base"** %211, align 8
  %213 = icmp eq %"class.std::__1::__tree_node_base"* %212, null
  br i1 %213, label %216, label %214

214:                                              ; preds = %210, %205
  %215 = phi %"class.std::__1::__tree_node_base"* [ %208, %205 ], [ %212, %210 ]
  br label %205

216:                                              ; preds = %210
  %217 = bitcast %"class.std::__1::__tree_node_base"* %206 to %"class.std::__1::__tree_node"*
  br label %239

218:                                              ; preds = %194
  %219 = getelementptr inbounds %"class.std::__1::__tree_end_node", %"class.std::__1::__tree_end_node"* %192, i64 1, i32 0
  store %"class.std::__1::__tree_node_base"* null, %"class.std::__1::__tree_node_base"** %219, align 8
  %220 = load %"class.std::__1::__tree_end_node"*, %"class.std::__1::__tree_end_node"** %191, align 8
  %221 = getelementptr inbounds %"class.std::__1::__tree_end_node", %"class.std::__1::__tree_end_node"* %220, i64 0, i32 0
  %222 = load %"class.std::__1::__tree_node_base"*, %"class.std::__1::__tree_node_base"** %221, align 8
  %223 = icmp eq %"class.std::__1::__tree_node_base"* %222, null
  br i1 %223, label %224, label %226

224:                                              ; preds = %218
  %225 = bitcast %"class.std::__1::__tree_end_node"* %220 to %"class.std::__1::__tree_node"*
  br label %239

226:                                              ; preds = %218, %235
  %227 = phi %"class.std::__1::__tree_node_base"* [ %236, %235 ], [ %222, %218 ]
  %228 = getelementptr inbounds %"class.std::__1::__tree_node_base", %"class.std::__1::__tree_node_base"* %227, i64 0, i32 0, i32 0
  %229 = load %"class.std::__1::__tree_node_base"*, %"class.std::__1::__tree_node_base"** %228, align 8
  %230 = icmp eq %"class.std::__1::__tree_node_base"* %229, null
  br i1 %230, label %231, label %235

231:                                              ; preds = %226
  %232 = getelementptr inbounds %"class.std::__1::__tree_node_base", %"class.std::__1::__tree_node_base"* %227, i64 0, i32 1
  %233 = load %"class.std::__1::__tree_node_base"*, %"class.std::__1::__tree_node_base"** %232, align 8
  %234 = icmp eq %"class.std::__1::__tree_node_base"* %233, null
  br i1 %234, label %237, label %235

235:                                              ; preds = %231, %226
  %236 = phi %"class.std::__1::__tree_node_base"* [ %229, %226 ], [ %233, %231 ]
  br label %226

237:                                              ; preds = %231
  %238 = bitcast %"class.std::__1::__tree_node_base"* %227 to %"class.std::__1::__tree_node"*
  br label %239

239:                                              ; preds = %237, %224, %216, %199, %189
  %240 = phi %"class.std::__1::__tree_node"* [ %217, %216 ], [ %225, %224 ], [ %238, %237 ], [ null, %189 ], [ %201, %199 ]
  %241 = ptrtoint %"class.std::__1::__tree_node"* %240 to i64
  br label %242

242:                                              ; preds = %183, %239
  %243 = phi i64 [ 0, %183 ], [ %241, %239 ]
  %244 = getelementptr inbounds %"class.std::__1::__tree_end_node", %"class.std::__1::__tree_end_node"* %85, i64 1, i32 0
  %245 = load %"class.std::__1::__tree_node_base"*, %"class.std::__1::__tree_node_base"** %244, align 8
  %246 = icmp eq %"class.std::__1::__tree_node_base"* %245, null
  br i1 %246, label %247, label %255

247:                                              ; preds = %242
  %248 = bitcast %"class.std::__1::__tree_end_node"* %85 to %"class.std::__1::__tree_node_base"*
  %249 = getelementptr inbounds %"class.std::__1::__tree_end_node", %"class.std::__1::__tree_end_node"* %85, i64 2
  %250 = bitcast %"class.std::__1::__tree_end_node"* %249 to %"class.std::__1::__tree_end_node"**
  %251 = load %"class.std::__1::__tree_end_node"*, %"class.std::__1::__tree_end_node"** %250, align 8
  %252 = getelementptr inbounds %"class.std::__1::__tree_end_node", %"class.std::__1::__tree_end_node"* %251, i64 0, i32 0
  %253 = load %"class.std::__1::__tree_node_base"*, %"class.std::__1::__tree_node_base"** %252, align 8
  %254 = icmp eq %"class.std::__1::__tree_node_base"* %253, %248
  br i1 %254, label %271, label %262

255:                                              ; preds = %242, %255
  %256 = phi %"class.std::__1::__tree_node_base"* [ %258, %255 ], [ %245, %242 ]
  %257 = getelementptr inbounds %"class.std::__1::__tree_node_base", %"class.std::__1::__tree_node_base"* %256, i64 0, i32 0, i32 0
  %258 = load %"class.std::__1::__tree_node_base"*, %"class.std::__1::__tree_node_base"** %257, align 8
  %259 = icmp eq %"class.std::__1::__tree_node_base"* %258, null
  br i1 %259, label %260, label %255

260:                                              ; preds = %255
  %261 = getelementptr inbounds %"class.std::__1::__tree_node_base", %"class.std::__1::__tree_node_base"* %256, i64 0, i32 0
  br label %271

262:                                              ; preds = %247, %262
  %263 = phi %"class.std::__1::__tree_end_node"** [ %266, %262 ], [ %250, %247 ]
  %264 = bitcast %"class.std::__1::__tree_end_node"** %263 to %"class.std::__1::__tree_node_base"**
  %265 = load %"class.std::__1::__tree_node_base"*, %"class.std::__1::__tree_node_base"** %264, align 8
  %266 = getelementptr inbounds %"class.std::__1::__tree_node_base", %"class.std::__1::__tree_node_base"* %265, i64 0, i32 2
  %267 = load %"class.std::__1::__tree_end_node"*, %"class.std::__1::__tree_end_node"** %266, align 8
  %268 = getelementptr inbounds %"class.std::__1::__tree_end_node", %"class.std::__1::__tree_end_node"* %267, i64 0, i32 0
  %269 = load %"class.std::__1::__tree_node_base"*, %"class.std::__1::__tree_node_base"** %268, align 8
  %270 = icmp eq %"class.std::__1::__tree_node_base"* %269, %265
  br i1 %270, label %271, label %262

271:                                              ; preds = %262, %247, %260
  %272 = phi %"class.std::__1::__tree_end_node"* [ %261, %260 ], [ %251, %247 ], [ %267, %262 ]
  %273 = inttoptr i64 %243 to %"class.std::__1::__tree_node"*
  %274 = icmp ne %"class.std::__1::__tree_node"* %82, null
  %275 = icmp ne %"class.std::__1::__tree_end_node"* %272, %2
  %276 = and i1 %275, %274
  br i1 %276, label %81, label %277

277:                                              ; preds = %271
  %278 = inttoptr i64 %243 to %"class.std::__1::__tree_node"*
  br label %279

279:                                              ; preds = %72, %277
  %280 = phi %"class.std::__1::__tree_node"* [ %73, %72 ], [ %278, %277 ]
  %281 = phi %"class.std::__1::__tree_end_node"* [ %1, %72 ], [ %272, %277 ]
  %282 = phi %"class.std::__1::__tree_node"* [ %20, %72 ], [ %82, %277 ]
  %283 = phi i64 [ %74, %72 ], [ %243, %277 ]
  tail call void @_ZNSt3__16__treeIN10extensions12PermissionIDENS_4lessIS2_EENS_9allocatorIS2_EEE7destroyEPNS_11__tree_nodeIS2_PvEE(%"class.std::__1::__tree"* %0, %"class.std::__1::__tree_node"* %282) #14
  %284 = icmp eq i64 %283, 0
  br i1 %284, label %299, label %285

285:                                              ; preds = %279
  %286 = getelementptr inbounds %"class.std::__1::__tree_node", %"class.std::__1::__tree_node"* %280, i64 0, i32 0, i32 2
  %287 = load %"class.std::__1::__tree_end_node"*, %"class.std::__1::__tree_end_node"** %286, align 8
  %288 = icmp eq %"class.std::__1::__tree_end_node"* %287, null
  br i1 %288, label %297, label %289

289:                                              ; preds = %285, %289
  %290 = phi %"class.std::__1::__tree_end_node"* [ %293, %289 ], [ %287, %285 ]
  %291 = getelementptr inbounds %"class.std::__1::__tree_end_node", %"class.std::__1::__tree_end_node"* %290, i64 2
  %292 = bitcast %"class.std::__1::__tree_end_node"* %291 to %"class.std::__1::__tree_end_node"**
  %293 = load %"class.std::__1::__tree_end_node"*, %"class.std::__1::__tree_end_node"** %292, align 8
  %294 = icmp eq %"class.std::__1::__tree_end_node"* %293, null
  br i1 %294, label %295, label %289

295:                                              ; preds = %289
  %296 = bitcast %"class.std::__1::__tree_end_node"* %290 to %"class.std::__1::__tree_node"*
  br label %297

297:                                              ; preds = %295, %285
  %298 = phi %"class.std::__1::__tree_node"* [ %280, %285 ], [ %296, %295 ]
  tail call void @_ZNSt3__16__treeIN10extensions12PermissionIDENS_4lessIS2_EENS_9allocatorIS2_EEE7destroyEPNS_11__tree_nodeIS2_PvEE(%"class.std::__1::__tree"* %0, %"class.std::__1::__tree_node"* %298) #14
  br label %299

299:                                              ; preds = %22, %297, %279, %3
  %300 = phi %"class.std::__1::__tree_end_node"* [ %1, %3 ], [ %281, %279 ], [ %281, %297 ], [ %1, %22 ]
  %301 = icmp eq %"class.std::__1::__tree_end_node"* %300, %2
  br i1 %301, label %337, label %302

302:                                              ; preds = %299, %334
  %303 = phi %"class.std::__1::__tree_end_node"* [ %335, %334 ], [ %300, %299 ]
  %304 = getelementptr inbounds %"class.std::__1::__tree_end_node", %"class.std::__1::__tree_end_node"* %303, i64 4
  %305 = bitcast %"class.std::__1::__tree_end_node"* %304 to %"class.extensions::PermissionID"*
  %306 = tail call %"class.std::__1::__tree_end_node"* @_ZNSt3__16__treeIN10extensions12PermissionIDENS_4lessIS2_EENS_9allocatorIS2_EEE15__emplace_multiIJRKS2_EEENS_15__tree_iteratorIS2_PNS_11__tree_nodeIS2_PvEElEEDpOT_(%"class.std::__1::__tree"* %0, %"class.extensions::PermissionID"* dereferenceable(40) %305) #14
  %307 = getelementptr inbounds %"class.std::__1::__tree_end_node", %"class.std::__1::__tree_end_node"* %303, i64 1, i32 0
  %308 = load %"class.std::__1::__tree_node_base"*, %"class.std::__1::__tree_node_base"** %307, align 8
  %309 = icmp eq %"class.std::__1::__tree_node_base"* %308, null
  br i1 %309, label %310, label %318

310:                                              ; preds = %302
  %311 = bitcast %"class.std::__1::__tree_end_node"* %303 to %"class.std::__1::__tree_node_base"*
  %312 = getelementptr inbounds %"class.std::__1::__tree_end_node", %"class.std::__1::__tree_end_node"* %303, i64 2
  %313 = bitcast %"class.std::__1::__tree_end_node"* %312 to %"class.std::__1::__tree_end_node"**
  %314 = load %"class.std::__1::__tree_end_node"*, %"class.std::__1::__tree_end_node"** %313, align 8
  %315 = getelementptr inbounds %"class.std::__1::__tree_end_node", %"class.std::__1::__tree_end_node"* %314, i64 0, i32 0
  %316 = load %"class.std::__1::__tree_node_base"*, %"class.std::__1::__tree_node_base"** %315, align 8
  %317 = icmp eq %"class.std::__1::__tree_node_base"* %316, %311
  br i1 %317, label %334, label %325

318:                                              ; preds = %302, %318
  %319 = phi %"class.std::__1::__tree_node_base"* [ %321, %318 ], [ %308, %302 ]
  %320 = getelementptr inbounds %"class.std::__1::__tree_node_base", %"class.std::__1::__tree_node_base"* %319, i64 0, i32 0, i32 0
  %321 = load %"class.std::__1::__tree_node_base"*, %"class.std::__1::__tree_node_base"** %320, align 8
  %322 = icmp eq %"class.std::__1::__tree_node_base"* %321, null
  br i1 %322, label %323, label %318

323:                                              ; preds = %318
  %324 = getelementptr inbounds %"class.std::__1::__tree_node_base", %"class.std::__1::__tree_node_base"* %319, i64 0, i32 0
  br label %334

325:                                              ; preds = %310, %325
  %326 = phi %"class.std::__1::__tree_end_node"** [ %329, %325 ], [ %313, %310 ]
  %327 = bitcast %"class.std::__1::__tree_end_node"** %326 to %"class.std::__1::__tree_node_base"**
  %328 = load %"class.std::__1::__tree_node_base"*, %"class.std::__1::__tree_node_base"** %327, align 8
  %329 = getelementptr inbounds %"class.std::__1::__tree_node_base", %"class.std::__1::__tree_node_base"* %328, i64 0, i32 2
  %330 = load %"class.std::__1::__tree_end_node"*, %"class.std::__1::__tree_end_node"** %329, align 8
  %331 = getelementptr inbounds %"class.std::__1::__tree_end_node", %"class.std::__1::__tree_end_node"* %330, i64 0, i32 0
  %332 = load %"class.std::__1::__tree_node_base"*, %"class.std::__1::__tree_node_base"** %331, align 8
  %333 = icmp eq %"class.std::__1::__tree_node_base"* %332, %328
  br i1 %333, label %334, label %325

334:                                              ; preds = %325, %310, %323
  %335 = phi %"class.std::__1::__tree_end_node"* [ %324, %323 ], [ %314, %310 ], [ %330, %325 ]
  %336 = icmp eq %"class.std::__1::__tree_end_node"* %335, %2
  br i1 %336, label %337, label %302

337:                                              ; preds = %334, %299
  ret void
}

; Function Attrs: nounwind ssp uwtable
define linkonce_odr hidden dereferenceable(24) %"class.std::__1::basic_string"* @_ZNSt3__112basic_stringIDsNS_11char_traitsIDsEENS_9allocatorIDsEEEaSERKS5_(%"class.std::__1::basic_string"*, %"class.std::__1::basic_string"* dereferenceable(24)) local_unnamed_addr #2 comdat align 2 {
  %3 = bitcast %"class.std::__1::basic_string"* %0 to i8*
  %4 = icmp eq %"class.std::__1::basic_string"* %0, %1
  br i1 %4, label %510, label %5

5:                                                ; preds = %2
  %6 = bitcast %"class.std::__1::basic_string"* %0 to %"struct.std::__1::basic_string<char16_t, std::__1::char_traits<char16_t>, std::__1::allocator<char16_t> >::__short"*
  %7 = getelementptr inbounds %"struct.std::__1::basic_string<char16_t, std::__1::char_traits<char16_t>, std::__1::allocator<char16_t> >::__short", %"struct.std::__1::basic_string<char16_t, std::__1::char_traits<char16_t>, std::__1::allocator<char16_t> >::__short"* %6, i64 0, i32 1, i32 1
  %8 = load i8, i8* %7, align 1
  %9 = icmp slt i8 %8, 0
  %10 = bitcast %"class.std::__1::basic_string"* %1 to %"struct.std::__1::basic_string<char16_t, std::__1::char_traits<char16_t>, std::__1::allocator<char16_t> >::__short"*
  %11 = getelementptr inbounds %"struct.std::__1::basic_string<char16_t, std::__1::char_traits<char16_t>, std::__1::allocator<char16_t> >::__short", %"struct.std::__1::basic_string<char16_t, std::__1::char_traits<char16_t>, std::__1::allocator<char16_t> >::__short"* %10, i64 0, i32 1, i32 1
  %12 = load i8, i8* %11, align 1
  %13 = icmp slt i8 %12, 0
  br i1 %9, label %341, label %14

14:                                               ; preds = %5
  br i1 %13, label %17, label %15

15:                                               ; preds = %14
  %16 = bitcast %"class.std::__1::basic_string"* %1 to i8*
  tail call void @llvm.memcpy.p0i8.p0i8.i64(i8* align 8 %3, i8* align 8 %16, i64 24, i1 false)
  br label %510

17:                                               ; preds = %14
  %18 = getelementptr inbounds %"class.std::__1::basic_string", %"class.std::__1::basic_string"* %1, i64 0, i32 0, i32 0, i32 0, i32 0, i32 0, i32 0
  %19 = load i16*, i16** %18, align 8
  %20 = bitcast i16* %19 to i8*
  %21 = getelementptr inbounds %"class.std::__1::basic_string", %"class.std::__1::basic_string"* %1, i64 0, i32 0, i32 0, i32 0, i32 0, i32 0, i32 1
  %22 = load i64, i64* %21, align 8
  %23 = icmp ult i64 %22, 11
  br i1 %23, label %24, label %175

24:                                               ; preds = %17
  %25 = bitcast %"class.std::__1::basic_string"* %0 to i16*
  %26 = trunc i64 %22 to i8
  store i8 %26, i8* %7, align 1
  %27 = icmp eq i64 %22, 0
  br i1 %27, label %173, label %28

28:                                               ; preds = %24
  %29 = icmp ult i64 %22, 16
  br i1 %29, label %120, label %30

30:                                               ; preds = %28
  %31 = shl i64 %22, 1
  %32 = getelementptr i8, i8* %3, i64 %31
  %33 = getelementptr i16, i16* %19, i64 %22
  %34 = bitcast i16* %33 to %"class.std::__1::basic_string"*
  %35 = icmp ugt %"class.std::__1::basic_string"* %34, %0
  %36 = icmp ugt i8* %32, %20
  %37 = and i1 %35, %36
  br i1 %37, label %120, label %38

38:                                               ; preds = %30
  %39 = and i64 %22, -16
  %40 = sub i64 %22, %39
  %41 = getelementptr i16, i16* %19, i64 %39
  %42 = getelementptr i16, i16* %25, i64 %39
  %43 = add i64 %39, -16
  %44 = lshr exact i64 %43, 4
  %45 = add nuw nsw i64 %44, 1
  %46 = and i64 %45, 3
  %47 = icmp ult i64 %43, 48
  br i1 %47, label %99, label %48

48:                                               ; preds = %38
  %49 = sub nsw i64 %45, %46
  br label %50

50:                                               ; preds = %50, %48
  %51 = phi i64 [ 0, %48 ], [ %96, %50 ]
  %52 = phi i64 [ %49, %48 ], [ %97, %50 ]
  %53 = getelementptr i16, i16* %19, i64 %51
  %54 = getelementptr i16, i16* %25, i64 %51
  %55 = bitcast i16* %53 to <8 x i16>*
  %56 = load <8 x i16>, <8 x i16>* %55, align 2, !alias.scope !47
  %57 = getelementptr i16, i16* %53, i64 8
  %58 = bitcast i16* %57 to <8 x i16>*
  %59 = load <8 x i16>, <8 x i16>* %58, align 2, !alias.scope !47
  %60 = bitcast i16* %54 to <8 x i16>*
  store <8 x i16> %56, <8 x i16>* %60, align 2, !alias.scope !50, !noalias !47
  %61 = getelementptr i16, i16* %54, i64 8
  %62 = bitcast i16* %61 to <8 x i16>*
  store <8 x i16> %59, <8 x i16>* %62, align 2, !alias.scope !50, !noalias !47
  %63 = or i64 %51, 16
  %64 = getelementptr i16, i16* %19, i64 %63
  %65 = getelementptr i16, i16* %25, i64 %63
  %66 = bitcast i16* %64 to <8 x i16>*
  %67 = load <8 x i16>, <8 x i16>* %66, align 2, !alias.scope !47
  %68 = getelementptr i16, i16* %64, i64 8
  %69 = bitcast i16* %68 to <8 x i16>*
  %70 = load <8 x i16>, <8 x i16>* %69, align 2, !alias.scope !47
  %71 = bitcast i16* %65 to <8 x i16>*
  store <8 x i16> %67, <8 x i16>* %71, align 2, !alias.scope !50, !noalias !47
  %72 = getelementptr i16, i16* %65, i64 8
  %73 = bitcast i16* %72 to <8 x i16>*
  store <8 x i16> %70, <8 x i16>* %73, align 2, !alias.scope !50, !noalias !47
  %74 = or i64 %51, 32
  %75 = getelementptr i16, i16* %19, i64 %74
  %76 = getelementptr i16, i16* %25, i64 %74
  %77 = bitcast i16* %75 to <8 x i16>*
  %78 = load <8 x i16>, <8 x i16>* %77, align 2, !alias.scope !47
  %79 = getelementptr i16, i16* %75, i64 8
  %80 = bitcast i16* %79 to <8 x i16>*
  %81 = load <8 x i16>, <8 x i16>* %80, align 2, !alias.scope !47
  %82 = bitcast i16* %76 to <8 x i16>*
  store <8 x i16> %78, <8 x i16>* %82, align 2, !alias.scope !50, !noalias !47
  %83 = getelementptr i16, i16* %76, i64 8
  %84 = bitcast i16* %83 to <8 x i16>*
  store <8 x i16> %81, <8 x i16>* %84, align 2, !alias.scope !50, !noalias !47
  %85 = or i64 %51, 48
  %86 = getelementptr i16, i16* %19, i64 %85
  %87 = getelementptr i16, i16* %25, i64 %85
  %88 = bitcast i16* %86 to <8 x i16>*
  %89 = load <8 x i16>, <8 x i16>* %88, align 2, !alias.scope !47
  %90 = getelementptr i16, i16* %86, i64 8
  %91 = bitcast i16* %90 to <8 x i16>*
  %92 = load <8 x i16>, <8 x i16>* %91, align 2, !alias.scope !47
  %93 = bitcast i16* %87 to <8 x i16>*
  store <8 x i16> %89, <8 x i16>* %93, align 2, !alias.scope !50, !noalias !47
  %94 = getelementptr i16, i16* %87, i64 8
  %95 = bitcast i16* %94 to <8 x i16>*
  store <8 x i16> %92, <8 x i16>* %95, align 2, !alias.scope !50, !noalias !47
  %96 = add i64 %51, 64
  %97 = add i64 %52, -4
  %98 = icmp eq i64 %97, 0
  br i1 %98, label %99, label %50, !llvm.loop !52

99:                                               ; preds = %50, %38
  %100 = phi i64 [ 0, %38 ], [ %96, %50 ]
  %101 = icmp eq i64 %46, 0
  br i1 %101, label %118, label %102

102:                                              ; preds = %99, %102
  %103 = phi i64 [ %115, %102 ], [ %100, %99 ]
  %104 = phi i64 [ %116, %102 ], [ %46, %99 ]
  %105 = getelementptr i16, i16* %19, i64 %103
  %106 = getelementptr i16, i16* %25, i64 %103
  %107 = bitcast i16* %105 to <8 x i16>*
  %108 = load <8 x i16>, <8 x i16>* %107, align 2, !alias.scope !47
  %109 = getelementptr i16, i16* %105, i64 8
  %110 = bitcast i16* %109 to <8 x i16>*
  %111 = load <8 x i16>, <8 x i16>* %110, align 2, !alias.scope !47
  %112 = bitcast i16* %106 to <8 x i16>*
  store <8 x i16> %108, <8 x i16>* %112, align 2, !alias.scope !50, !noalias !47
  %113 = getelementptr i16, i16* %106, i64 8
  %114 = bitcast i16* %113 to <8 x i16>*
  store <8 x i16> %111, <8 x i16>* %114, align 2, !alias.scope !50, !noalias !47
  %115 = add i64 %103, 16
  %116 = add i64 %104, -1
  %117 = icmp eq i64 %116, 0
  br i1 %117, label %118, label %102, !llvm.loop !53

118:                                              ; preds = %102, %99
  %119 = icmp eq i64 %22, %39
  br i1 %119, label %173, label %120

120:                                              ; preds = %118, %30, %28
  %121 = phi i64 [ %22, %30 ], [ %22, %28 ], [ %40, %118 ]
  %122 = phi i16* [ %19, %30 ], [ %19, %28 ], [ %41, %118 ]
  %123 = phi i16* [ %25, %30 ], [ %25, %28 ], [ %42, %118 ]
  %124 = add i64 %121, -1
  %125 = and i64 %121, 7
  %126 = icmp eq i64 %125, 0
  br i1 %126, label %138, label %127

127:                                              ; preds = %120, %127
  %128 = phi i64 [ %133, %127 ], [ %121, %120 ]
  %129 = phi i16* [ %135, %127 ], [ %122, %120 ]
  %130 = phi i16* [ %134, %127 ], [ %123, %120 ]
  %131 = phi i64 [ %136, %127 ], [ %125, %120 ]
  %132 = load i16, i16* %129, align 2
  store i16 %132, i16* %130, align 2
  %133 = add i64 %128, -1
  %134 = getelementptr inbounds i16, i16* %130, i64 1
  %135 = getelementptr inbounds i16, i16* %129, i64 1
  %136 = add i64 %131, -1
  %137 = icmp eq i64 %136, 0
  br i1 %137, label %138, label %127, !llvm.loop !55

138:                                              ; preds = %127, %120
  %139 = phi i64 [ %121, %120 ], [ %133, %127 ]
  %140 = phi i16* [ %122, %120 ], [ %135, %127 ]
  %141 = phi i16* [ %123, %120 ], [ %134, %127 ]
  %142 = icmp ult i64 %124, 7
  br i1 %142, label %173, label %143

143:                                              ; preds = %138, %143
  %144 = phi i64 [ %169, %143 ], [ %139, %138 ]
  %145 = phi i16* [ %171, %143 ], [ %140, %138 ]
  %146 = phi i16* [ %170, %143 ], [ %141, %138 ]
  %147 = load i16, i16* %145, align 2
  store i16 %147, i16* %146, align 2
  %148 = getelementptr inbounds i16, i16* %146, i64 1
  %149 = getelementptr inbounds i16, i16* %145, i64 1
  %150 = load i16, i16* %149, align 2
  store i16 %150, i16* %148, align 2
  %151 = getelementptr inbounds i16, i16* %146, i64 2
  %152 = getelementptr inbounds i16, i16* %145, i64 2
  %153 = load i16, i16* %152, align 2
  store i16 %153, i16* %151, align 2
  %154 = getelementptr inbounds i16, i16* %146, i64 3
  %155 = getelementptr inbounds i16, i16* %145, i64 3
  %156 = load i16, i16* %155, align 2
  store i16 %156, i16* %154, align 2
  %157 = getelementptr inbounds i16, i16* %146, i64 4
  %158 = getelementptr inbounds i16, i16* %145, i64 4
  %159 = load i16, i16* %158, align 2
  store i16 %159, i16* %157, align 2
  %160 = getelementptr inbounds i16, i16* %146, i64 5
  %161 = getelementptr inbounds i16, i16* %145, i64 5
  %162 = load i16, i16* %161, align 2
  store i16 %162, i16* %160, align 2
  %163 = getelementptr inbounds i16, i16* %146, i64 6
  %164 = getelementptr inbounds i16, i16* %145, i64 6
  %165 = load i16, i16* %164, align 2
  store i16 %165, i16* %163, align 2
  %166 = getelementptr inbounds i16, i16* %146, i64 7
  %167 = getelementptr inbounds i16, i16* %145, i64 7
  %168 = load i16, i16* %167, align 2
  store i16 %168, i16* %166, align 2
  %169 = add i64 %144, -8
  %170 = getelementptr inbounds i16, i16* %146, i64 8
  %171 = getelementptr inbounds i16, i16* %145, i64 8
  %172 = icmp eq i64 %169, 0
  br i1 %172, label %173, label %143, !llvm.loop !56

173:                                              ; preds = %138, %143, %118, %24
  %174 = getelementptr inbounds i16, i16* %25, i64 %22
  store i16 0, i16* %174, align 2
  br label %510

175:                                              ; preds = %17
  %176 = add i64 %22, -10
  %177 = icmp ugt i64 %176, 9223372036854775780
  br i1 %177, label %178, label %180

178:                                              ; preds = %175
  %179 = bitcast %"class.std::__1::basic_string"* %0 to %"class.std::__1::__basic_string_common"*
  tail call void @_ZNKSt3__121__basic_string_commonILb1EE20__throw_length_errorEv(%"class.std::__1::__basic_string_common"* %179) #15
  unreachable

180:                                              ; preds = %175
  %181 = icmp ugt i64 %22, 20
  %182 = select i1 %181, i64 %22, i64 20
  %183 = add nuw nsw i64 %182, 8
  %184 = and i64 %183, -8
  %185 = icmp slt i64 %184, 0
  br i1 %185, label %186, label %187

186:                                              ; preds = %180
  tail call void @abort() #15
  unreachable

187:                                              ; preds = %180
  %188 = shl i64 %184, 1
  %189 = tail call i8* @_Znwm(i64 %188) #13
  %190 = bitcast i8* %189 to i16*
  %191 = icmp ult i64 %22, 16
  br i1 %191, label %282, label %192

192:                                              ; preds = %187
  %193 = shl i64 %22, 1
  %194 = getelementptr i8, i8* %189, i64 %193
  %195 = getelementptr i16, i16* %19, i64 %22
  %196 = bitcast i16* %195 to i8*
  %197 = icmp ult i8* %189, %196
  %198 = icmp ugt i8* %194, %20
  %199 = and i1 %197, %198
  br i1 %199, label %282, label %200

200:                                              ; preds = %192
  %201 = and i64 %22, -16
  %202 = sub i64 %22, %201
  %203 = getelementptr i16, i16* %19, i64 %201
  %204 = getelementptr i16, i16* %190, i64 %201
  %205 = add i64 %201, -16
  %206 = lshr exact i64 %205, 4
  %207 = add nuw nsw i64 %206, 1
  %208 = and i64 %207, 3
  %209 = icmp ult i64 %205, 48
  br i1 %209, label %261, label %210

210:                                              ; preds = %200
  %211 = sub nsw i64 %207, %208
  br label %212

212:                                              ; preds = %212, %210
  %213 = phi i64 [ 0, %210 ], [ %258, %212 ]
  %214 = phi i64 [ %211, %210 ], [ %259, %212 ]
  %215 = getelementptr i16, i16* %19, i64 %213
  %216 = getelementptr i16, i16* %190, i64 %213
  %217 = bitcast i16* %215 to <8 x i16>*
  %218 = load <8 x i16>, <8 x i16>* %217, align 2, !alias.scope !57
  %219 = getelementptr i16, i16* %215, i64 8
  %220 = bitcast i16* %219 to <8 x i16>*
  %221 = load <8 x i16>, <8 x i16>* %220, align 2, !alias.scope !57
  %222 = bitcast i16* %216 to <8 x i16>*
  store <8 x i16> %218, <8 x i16>* %222, align 2, !alias.scope !60, !noalias !57
  %223 = getelementptr i16, i16* %216, i64 8
  %224 = bitcast i16* %223 to <8 x i16>*
  store <8 x i16> %221, <8 x i16>* %224, align 2, !alias.scope !60, !noalias !57
  %225 = or i64 %213, 16
  %226 = getelementptr i16, i16* %19, i64 %225
  %227 = getelementptr i16, i16* %190, i64 %225
  %228 = bitcast i16* %226 to <8 x i16>*
  %229 = load <8 x i16>, <8 x i16>* %228, align 2, !alias.scope !57
  %230 = getelementptr i16, i16* %226, i64 8
  %231 = bitcast i16* %230 to <8 x i16>*
  %232 = load <8 x i16>, <8 x i16>* %231, align 2, !alias.scope !57
  %233 = bitcast i16* %227 to <8 x i16>*
  store <8 x i16> %229, <8 x i16>* %233, align 2, !alias.scope !60, !noalias !57
  %234 = getelementptr i16, i16* %227, i64 8
  %235 = bitcast i16* %234 to <8 x i16>*
  store <8 x i16> %232, <8 x i16>* %235, align 2, !alias.scope !60, !noalias !57
  %236 = or i64 %213, 32
  %237 = getelementptr i16, i16* %19, i64 %236
  %238 = getelementptr i16, i16* %190, i64 %236
  %239 = bitcast i16* %237 to <8 x i16>*
  %240 = load <8 x i16>, <8 x i16>* %239, align 2, !alias.scope !57
  %241 = getelementptr i16, i16* %237, i64 8
  %242 = bitcast i16* %241 to <8 x i16>*
  %243 = load <8 x i16>, <8 x i16>* %242, align 2, !alias.scope !57
  %244 = bitcast i16* %238 to <8 x i16>*
  store <8 x i16> %240, <8 x i16>* %244, align 2, !alias.scope !60, !noalias !57
  %245 = getelementptr i16, i16* %238, i64 8
  %246 = bitcast i16* %245 to <8 x i16>*
  store <8 x i16> %243, <8 x i16>* %246, align 2, !alias.scope !60, !noalias !57
  %247 = or i64 %213, 48
  %248 = getelementptr i16, i16* %19, i64 %247
  %249 = getelementptr i16, i16* %190, i64 %247
  %250 = bitcast i16* %248 to <8 x i16>*
  %251 = load <8 x i16>, <8 x i16>* %250, align 2, !alias.scope !57
  %252 = getelementptr i16, i16* %248, i64 8
  %253 = bitcast i16* %252 to <8 x i16>*
  %254 = load <8 x i16>, <8 x i16>* %253, align 2, !alias.scope !57
  %255 = bitcast i16* %249 to <8 x i16>*
  store <8 x i16> %251, <8 x i16>* %255, align 2, !alias.scope !60, !noalias !57
  %256 = getelementptr i16, i16* %249, i64 8
  %257 = bitcast i16* %256 to <8 x i16>*
  store <8 x i16> %254, <8 x i16>* %257, align 2, !alias.scope !60, !noalias !57
  %258 = add i64 %213, 64
  %259 = add i64 %214, -4
  %260 = icmp eq i64 %259, 0
  br i1 %260, label %261, label %212, !llvm.loop !62

261:                                              ; preds = %212, %200
  %262 = phi i64 [ 0, %200 ], [ %258, %212 ]
  %263 = icmp eq i64 %208, 0
  br i1 %263, label %280, label %264

264:                                              ; preds = %261, %264
  %265 = phi i64 [ %277, %264 ], [ %262, %261 ]
  %266 = phi i64 [ %278, %264 ], [ %208, %261 ]
  %267 = getelementptr i16, i16* %19, i64 %265
  %268 = getelementptr i16, i16* %190, i64 %265
  %269 = bitcast i16* %267 to <8 x i16>*
  %270 = load <8 x i16>, <8 x i16>* %269, align 2, !alias.scope !57
  %271 = getelementptr i16, i16* %267, i64 8
  %272 = bitcast i16* %271 to <8 x i16>*
  %273 = load <8 x i16>, <8 x i16>* %272, align 2, !alias.scope !57
  %274 = bitcast i16* %268 to <8 x i16>*
  store <8 x i16> %270, <8 x i16>* %274, align 2, !alias.scope !60, !noalias !57
  %275 = getelementptr i16, i16* %268, i64 8
  %276 = bitcast i16* %275 to <8 x i16>*
  store <8 x i16> %273, <8 x i16>* %276, align 2, !alias.scope !60, !noalias !57
  %277 = add i64 %265, 16
  %278 = add i64 %266, -1
  %279 = icmp eq i64 %278, 0
  br i1 %279, label %280, label %264, !llvm.loop !63

280:                                              ; preds = %264, %261
  %281 = icmp eq i64 %22, %201
  br i1 %281, label %335, label %282

282:                                              ; preds = %280, %192, %187
  %283 = phi i64 [ %22, %192 ], [ %22, %187 ], [ %202, %280 ]
  %284 = phi i16* [ %19, %192 ], [ %19, %187 ], [ %203, %280 ]
  %285 = phi i16* [ %190, %192 ], [ %190, %187 ], [ %204, %280 ]
  %286 = add i64 %283, -1
  %287 = and i64 %283, 7
  %288 = icmp eq i64 %287, 0
  br i1 %288, label %300, label %289

289:                                              ; preds = %282, %289
  %290 = phi i64 [ %295, %289 ], [ %283, %282 ]
  %291 = phi i16* [ %297, %289 ], [ %284, %282 ]
  %292 = phi i16* [ %296, %289 ], [ %285, %282 ]
  %293 = phi i64 [ %298, %289 ], [ %287, %282 ]
  %294 = load i16, i16* %291, align 2
  store i16 %294, i16* %292, align 2
  %295 = add i64 %290, -1
  %296 = getelementptr inbounds i16, i16* %292, i64 1
  %297 = getelementptr inbounds i16, i16* %291, i64 1
  %298 = add i64 %293, -1
  %299 = icmp eq i64 %298, 0
  br i1 %299, label %300, label %289, !llvm.loop !64

300:                                              ; preds = %289, %282
  %301 = phi i64 [ %283, %282 ], [ %295, %289 ]
  %302 = phi i16* [ %284, %282 ], [ %297, %289 ]
  %303 = phi i16* [ %285, %282 ], [ %296, %289 ]
  %304 = icmp ult i64 %286, 7
  br i1 %304, label %335, label %305

305:                                              ; preds = %300, %305
  %306 = phi i64 [ %331, %305 ], [ %301, %300 ]
  %307 = phi i16* [ %333, %305 ], [ %302, %300 ]
  %308 = phi i16* [ %332, %305 ], [ %303, %300 ]
  %309 = load i16, i16* %307, align 2
  store i16 %309, i16* %308, align 2
  %310 = getelementptr inbounds i16, i16* %308, i64 1
  %311 = getelementptr inbounds i16, i16* %307, i64 1
  %312 = load i16, i16* %311, align 2
  store i16 %312, i16* %310, align 2
  %313 = getelementptr inbounds i16, i16* %308, i64 2
  %314 = getelementptr inbounds i16, i16* %307, i64 2
  %315 = load i16, i16* %314, align 2
  store i16 %315, i16* %313, align 2
  %316 = getelementptr inbounds i16, i16* %308, i64 3
  %317 = getelementptr inbounds i16, i16* %307, i64 3
  %318 = load i16, i16* %317, align 2
  store i16 %318, i16* %316, align 2
  %319 = getelementptr inbounds i16, i16* %308, i64 4
  %320 = getelementptr inbounds i16, i16* %307, i64 4
  %321 = load i16, i16* %320, align 2
  store i16 %321, i16* %319, align 2
  %322 = getelementptr inbounds i16, i16* %308, i64 5
  %323 = getelementptr inbounds i16, i16* %307, i64 5
  %324 = load i16, i16* %323, align 2
  store i16 %324, i16* %322, align 2
  %325 = getelementptr inbounds i16, i16* %308, i64 6
  %326 = getelementptr inbounds i16, i16* %307, i64 6
  %327 = load i16, i16* %326, align 2
  store i16 %327, i16* %325, align 2
  %328 = getelementptr inbounds i16, i16* %308, i64 7
  %329 = getelementptr inbounds i16, i16* %307, i64 7
  %330 = load i16, i16* %329, align 2
  store i16 %330, i16* %328, align 2
  %331 = add i64 %306, -8
  %332 = getelementptr inbounds i16, i16* %308, i64 8
  %333 = getelementptr inbounds i16, i16* %307, i64 8
  %334 = icmp eq i64 %331, 0
  br i1 %334, label %335, label %305, !llvm.loop !65

335:                                              ; preds = %300, %305, %280
  %336 = bitcast %"class.std::__1::basic_string"* %0 to i8**
  store i8* %189, i8** %336, align 8
  %337 = or i64 %184, -9223372036854775808
  %338 = getelementptr inbounds %"class.std::__1::basic_string", %"class.std::__1::basic_string"* %0, i64 0, i32 0, i32 0, i32 0, i32 0, i32 0, i32 2
  store i64 %337, i64* %338, align 8
  %339 = getelementptr inbounds %"class.std::__1::basic_string", %"class.std::__1::basic_string"* %0, i64 0, i32 0, i32 0, i32 0, i32 0, i32 0, i32 1
  store i64 %22, i64* %339, align 8
  %340 = getelementptr inbounds i16, i16* %190, i64 %22
  store i16 0, i16* %340, align 2
  br label %510

341:                                              ; preds = %5
  %342 = getelementptr inbounds %"class.std::__1::basic_string", %"class.std::__1::basic_string"* %1, i64 0, i32 0, i32 0, i32 0, i32 0, i32 0, i32 0
  %343 = load i16*, i16** %342, align 8
  %344 = getelementptr inbounds %"class.std::__1::basic_string", %"class.std::__1::basic_string"* %1, i64 0, i32 0, i32 0, i32 0, i32 0, i32 0, i32 1
  %345 = load i64, i64* %344, align 8
  %346 = bitcast %"class.std::__1::basic_string"* %1 to i16*
  %347 = zext i8 %12 to i64
  %348 = select i1 %13, i16* %343, i16* %346
  %349 = select i1 %13, i64 %345, i64 %347
  %350 = getelementptr inbounds %"class.std::__1::basic_string", %"class.std::__1::basic_string"* %0, i64 0, i32 0, i32 0, i32 0, i32 0, i32 0, i32 2
  %351 = load i64, i64* %350, align 8
  %352 = and i64 %351, 9223372036854775807
  %353 = icmp ugt i64 %352, %349
  br i1 %353, label %354, label %504

354:                                              ; preds = %341
  %355 = getelementptr inbounds %"class.std::__1::basic_string", %"class.std::__1::basic_string"* %0, i64 0, i32 0, i32 0, i32 0, i32 0, i32 0, i32 0
  %356 = load i16*, i16** %355, align 8
  %357 = getelementptr inbounds %"class.std::__1::basic_string", %"class.std::__1::basic_string"* %0, i64 0, i32 0, i32 0, i32 0, i32 0, i32 0, i32 1
  store i64 %349, i64* %357, align 8
  %358 = icmp eq i64 %349, 0
  br i1 %358, label %502, label %359

359:                                              ; preds = %354
  %360 = icmp ult i64 %349, 16
  br i1 %360, label %449, label %361

361:                                              ; preds = %359
  %362 = getelementptr i16, i16* %356, i64 %349
  %363 = getelementptr i16, i16* %348, i64 %349
  %364 = icmp ult i16* %356, %363
  %365 = icmp ult i16* %348, %362
  %366 = and i1 %364, %365
  br i1 %366, label %449, label %367

367:                                              ; preds = %361
  %368 = and i64 %349, -16
  %369 = sub i64 %349, %368
  %370 = getelementptr i16, i16* %348, i64 %368
  %371 = getelementptr i16, i16* %356, i64 %368
  %372 = add i64 %368, -16
  %373 = lshr exact i64 %372, 4
  %374 = add nuw nsw i64 %373, 1
  %375 = and i64 %374, 3
  %376 = icmp ult i64 %372, 48
  br i1 %376, label %428, label %377

377:                                              ; preds = %367
  %378 = sub nsw i64 %374, %375
  br label %379

379:                                              ; preds = %379, %377
  %380 = phi i64 [ 0, %377 ], [ %425, %379 ]
  %381 = phi i64 [ %378, %377 ], [ %426, %379 ]
  %382 = getelementptr i16, i16* %348, i64 %380
  %383 = getelementptr i16, i16* %356, i64 %380
  %384 = bitcast i16* %382 to <8 x i16>*
  %385 = load <8 x i16>, <8 x i16>* %384, align 2, !alias.scope !66
  %386 = getelementptr i16, i16* %382, i64 8
  %387 = bitcast i16* %386 to <8 x i16>*
  %388 = load <8 x i16>, <8 x i16>* %387, align 2, !alias.scope !66
  %389 = bitcast i16* %383 to <8 x i16>*
  store <8 x i16> %385, <8 x i16>* %389, align 2, !alias.scope !69, !noalias !66
  %390 = getelementptr i16, i16* %383, i64 8
  %391 = bitcast i16* %390 to <8 x i16>*
  store <8 x i16> %388, <8 x i16>* %391, align 2, !alias.scope !69, !noalias !66
  %392 = or i64 %380, 16
  %393 = getelementptr i16, i16* %348, i64 %392
  %394 = getelementptr i16, i16* %356, i64 %392
  %395 = bitcast i16* %393 to <8 x i16>*
  %396 = load <8 x i16>, <8 x i16>* %395, align 2, !alias.scope !66
  %397 = getelementptr i16, i16* %393, i64 8
  %398 = bitcast i16* %397 to <8 x i16>*
  %399 = load <8 x i16>, <8 x i16>* %398, align 2, !alias.scope !66
  %400 = bitcast i16* %394 to <8 x i16>*
  store <8 x i16> %396, <8 x i16>* %400, align 2, !alias.scope !69, !noalias !66
  %401 = getelementptr i16, i16* %394, i64 8
  %402 = bitcast i16* %401 to <8 x i16>*
  store <8 x i16> %399, <8 x i16>* %402, align 2, !alias.scope !69, !noalias !66
  %403 = or i64 %380, 32
  %404 = getelementptr i16, i16* %348, i64 %403
  %405 = getelementptr i16, i16* %356, i64 %403
  %406 = bitcast i16* %404 to <8 x i16>*
  %407 = load <8 x i16>, <8 x i16>* %406, align 2, !alias.scope !66
  %408 = getelementptr i16, i16* %404, i64 8
  %409 = bitcast i16* %408 to <8 x i16>*
  %410 = load <8 x i16>, <8 x i16>* %409, align 2, !alias.scope !66
  %411 = bitcast i16* %405 to <8 x i16>*
  store <8 x i16> %407, <8 x i16>* %411, align 2, !alias.scope !69, !noalias !66
  %412 = getelementptr i16, i16* %405, i64 8
  %413 = bitcast i16* %412 to <8 x i16>*
  store <8 x i16> %410, <8 x i16>* %413, align 2, !alias.scope !69, !noalias !66
  %414 = or i64 %380, 48
  %415 = getelementptr i16, i16* %348, i64 %414
  %416 = getelementptr i16, i16* %356, i64 %414
  %417 = bitcast i16* %415 to <8 x i16>*
  %418 = load <8 x i16>, <8 x i16>* %417, align 2, !alias.scope !66
  %419 = getelementptr i16, i16* %415, i64 8
  %420 = bitcast i16* %419 to <8 x i16>*
  %421 = load <8 x i16>, <8 x i16>* %420, align 2, !alias.scope !66
  %422 = bitcast i16* %416 to <8 x i16>*
  store <8 x i16> %418, <8 x i16>* %422, align 2, !alias.scope !69, !noalias !66
  %423 = getelementptr i16, i16* %416, i64 8
  %424 = bitcast i16* %423 to <8 x i16>*
  store <8 x i16> %421, <8 x i16>* %424, align 2, !alias.scope !69, !noalias !66
  %425 = add i64 %380, 64
  %426 = add i64 %381, -4
  %427 = icmp eq i64 %426, 0
  br i1 %427, label %428, label %379, !llvm.loop !71

428:                                              ; preds = %379, %367
  %429 = phi i64 [ 0, %367 ], [ %425, %379 ]
  %430 = icmp eq i64 %375, 0
  br i1 %430, label %447, label %431

431:                                              ; preds = %428, %431
  %432 = phi i64 [ %444, %431 ], [ %429, %428 ]
  %433 = phi i64 [ %445, %431 ], [ %375, %428 ]
  %434 = getelementptr i16, i16* %348, i64 %432
  %435 = getelementptr i16, i16* %356, i64 %432
  %436 = bitcast i16* %434 to <8 x i16>*
  %437 = load <8 x i16>, <8 x i16>* %436, align 2, !alias.scope !66
  %438 = getelementptr i16, i16* %434, i64 8
  %439 = bitcast i16* %438 to <8 x i16>*
  %440 = load <8 x i16>, <8 x i16>* %439, align 2, !alias.scope !66
  %441 = bitcast i16* %435 to <8 x i16>*
  store <8 x i16> %437, <8 x i16>* %441, align 2, !alias.scope !69, !noalias !66
  %442 = getelementptr i16, i16* %435, i64 8
  %443 = bitcast i16* %442 to <8 x i16>*
  store <8 x i16> %440, <8 x i16>* %443, align 2, !alias.scope !69, !noalias !66
  %444 = add i64 %432, 16
  %445 = add i64 %433, -1
  %446 = icmp eq i64 %445, 0
  br i1 %446, label %447, label %431, !llvm.loop !72

447:                                              ; preds = %431, %428
  %448 = icmp eq i64 %349, %368
  br i1 %448, label %502, label %449

449:                                              ; preds = %447, %361, %359
  %450 = phi i64 [ %349, %361 ], [ %349, %359 ], [ %369, %447 ]
  %451 = phi i16* [ %348, %361 ], [ %348, %359 ], [ %370, %447 ]
  %452 = phi i16* [ %356, %361 ], [ %356, %359 ], [ %371, %447 ]
  %453 = add i64 %450, -1
  %454 = and i64 %450, 7
  %455 = icmp eq i64 %454, 0
  br i1 %455, label %467, label %456

456:                                              ; preds = %449, %456
  %457 = phi i64 [ %462, %456 ], [ %450, %449 ]
  %458 = phi i16* [ %464, %456 ], [ %451, %449 ]
  %459 = phi i16* [ %463, %456 ], [ %452, %449 ]
  %460 = phi i64 [ %465, %456 ], [ %454, %449 ]
  %461 = load i16, i16* %458, align 2
  store i16 %461, i16* %459, align 2
  %462 = add i64 %457, -1
  %463 = getelementptr inbounds i16, i16* %459, i64 1
  %464 = getelementptr inbounds i16, i16* %458, i64 1
  %465 = add i64 %460, -1
  %466 = icmp eq i64 %465, 0
  br i1 %466, label %467, label %456, !llvm.loop !73

467:                                              ; preds = %456, %449
  %468 = phi i64 [ %450, %449 ], [ %462, %456 ]
  %469 = phi i16* [ %451, %449 ], [ %464, %456 ]
  %470 = phi i16* [ %452, %449 ], [ %463, %456 ]
  %471 = icmp ult i64 %453, 7
  br i1 %471, label %502, label %472

472:                                              ; preds = %467, %472
  %473 = phi i64 [ %498, %472 ], [ %468, %467 ]
  %474 = phi i16* [ %500, %472 ], [ %469, %467 ]
  %475 = phi i16* [ %499, %472 ], [ %470, %467 ]
  %476 = load i16, i16* %474, align 2
  store i16 %476, i16* %475, align 2
  %477 = getelementptr inbounds i16, i16* %475, i64 1
  %478 = getelementptr inbounds i16, i16* %474, i64 1
  %479 = load i16, i16* %478, align 2
  store i16 %479, i16* %477, align 2
  %480 = getelementptr inbounds i16, i16* %475, i64 2
  %481 = getelementptr inbounds i16, i16* %474, i64 2
  %482 = load i16, i16* %481, align 2
  store i16 %482, i16* %480, align 2
  %483 = getelementptr inbounds i16, i16* %475, i64 3
  %484 = getelementptr inbounds i16, i16* %474, i64 3
  %485 = load i16, i16* %484, align 2
  store i16 %485, i16* %483, align 2
  %486 = getelementptr inbounds i16, i16* %475, i64 4
  %487 = getelementptr inbounds i16, i16* %474, i64 4
  %488 = load i16, i16* %487, align 2
  store i16 %488, i16* %486, align 2
  %489 = getelementptr inbounds i16, i16* %475, i64 5
  %490 = getelementptr inbounds i16, i16* %474, i64 5
  %491 = load i16, i16* %490, align 2
  store i16 %491, i16* %489, align 2
  %492 = getelementptr inbounds i16, i16* %475, i64 6
  %493 = getelementptr inbounds i16, i16* %474, i64 6
  %494 = load i16, i16* %493, align 2
  store i16 %494, i16* %492, align 2
  %495 = getelementptr inbounds i16, i16* %475, i64 7
  %496 = getelementptr inbounds i16, i16* %474, i64 7
  %497 = load i16, i16* %496, align 2
  store i16 %497, i16* %495, align 2
  %498 = add i64 %473, -8
  %499 = getelementptr inbounds i16, i16* %475, i64 8
  %500 = getelementptr inbounds i16, i16* %474, i64 8
  %501 = icmp eq i64 %498, 0
  br i1 %501, label %502, label %472, !llvm.loop !74

502:                                              ; preds = %467, %472, %447, %354
  %503 = getelementptr inbounds i16, i16* %356, i64 %349
  store i16 0, i16* %503, align 2
  br label %510

504:                                              ; preds = %341
  %505 = getelementptr inbounds %"class.std::__1::basic_string", %"class.std::__1::basic_string"* %0, i64 0, i32 0, i32 0, i32 0, i32 0, i32 0, i32 1
  %506 = load i64, i64* %505, align 8
  %507 = add nsw i64 %352, -1
  %508 = add i64 %349, 1
  %509 = sub i64 %508, %352
  tail call void @_ZNSt3__112basic_stringIDsNS_11char_traitsIDsEENS_9allocatorIDsEEE21__grow_by_and_replaceEmmmmmmPKDs(%"class.std::__1::basic_string"* %0, i64 %507, i64 %509, i64 %506, i64 0, i64 %506, i64 %349, i16* %348) #14
  br label %510

510:                                              ; preds = %504, %502, %335, %173, %15, %2
  ret %"class.std::__1::basic_string"* %0
}

; Function Attrs: nounwind ssp uwtable
define linkonce_odr hidden void @_ZNSt3__112basic_stringIDsNS_11char_traitsIDsEENS_9allocatorIDsEEE21__grow_by_and_replaceEmmmmmmPKDs(%"class.std::__1::basic_string"*, i64, i64, i64, i64, i64, i64, i16*) local_unnamed_addr #2 comdat align 2 {
  %9 = sub i64 9223372036854775790, %1
  %10 = icmp ult i64 %9, %2
  br i1 %10, label %11, label %13

11:                                               ; preds = %8
  %12 = bitcast %"class.std::__1::basic_string"* %0 to %"class.std::__1::__basic_string_common"*
  tail call void @_ZNKSt3__121__basic_string_commonILb1EE20__throw_length_errorEv(%"class.std::__1::__basic_string_common"* %12) #15
  unreachable

13:                                               ; preds = %8
  %14 = bitcast %"class.std::__1::basic_string"* %0 to %"struct.std::__1::basic_string<char16_t, std::__1::char_traits<char16_t>, std::__1::allocator<char16_t> >::__short"*
  %15 = getelementptr inbounds %"struct.std::__1::basic_string<char16_t, std::__1::char_traits<char16_t>, std::__1::allocator<char16_t> >::__short", %"struct.std::__1::basic_string<char16_t, std::__1::char_traits<char16_t>, std::__1::allocator<char16_t> >::__short"* %14, i64 0, i32 1, i32 1
  %16 = load i8, i8* %15, align 1
  %17 = icmp slt i8 %16, 0
  br i1 %17, label %18, label %21

18:                                               ; preds = %13
  %19 = getelementptr inbounds %"class.std::__1::basic_string", %"class.std::__1::basic_string"* %0, i64 0, i32 0, i32 0, i32 0, i32 0, i32 0, i32 0
  %20 = load i16*, i16** %19, align 8
  br label %23

21:                                               ; preds = %13
  %22 = bitcast %"class.std::__1::basic_string"* %0 to i16*
  br label %23

23:                                               ; preds = %18, %21
  %24 = phi i16* [ %20, %18 ], [ %22, %21 ]
  %25 = bitcast i16* %24 to i8*
  %26 = icmp ult i64 %1, 4611686018427387879
  br i1 %26, label %27, label %38

27:                                               ; preds = %23
  %28 = add i64 %2, %1
  %29 = shl i64 %1, 1
  %30 = icmp ult i64 %28, %29
  %31 = select i1 %30, i64 %29, i64 %28
  %32 = icmp ult i64 %31, 11
  br i1 %32, label %38, label %33

33:                                               ; preds = %27
  %34 = add i64 %31, 8
  %35 = and i64 %34, -8
  %36 = icmp slt i64 %35, 0
  br i1 %36, label %37, label %38

37:                                               ; preds = %33
  tail call void @abort() #15
  unreachable

38:                                               ; preds = %23, %27, %33
  %39 = phi i64 [ %35, %33 ], [ 9223372036854775791, %23 ], [ 11, %27 ]
  %40 = shl i64 %39, 1
  %41 = tail call i8* @_Znwm(i64 %40) #13
  %42 = bitcast i8* %41 to i16*
  %43 = icmp eq i64 %4, 0
  br i1 %43, label %189, label %44

44:                                               ; preds = %38
  %45 = icmp ult i64 %4, 16
  br i1 %45, label %136, label %46

46:                                               ; preds = %44
  %47 = shl i64 %4, 1
  %48 = getelementptr i8, i8* %41, i64 %47
  %49 = getelementptr i16, i16* %24, i64 %4
  %50 = bitcast i16* %49 to i8*
  %51 = icmp ult i8* %41, %50
  %52 = icmp ugt i8* %48, %25
  %53 = and i1 %51, %52
  br i1 %53, label %136, label %54

54:                                               ; preds = %46
  %55 = and i64 %4, -16
  %56 = sub i64 %4, %55
  %57 = getelementptr i16, i16* %24, i64 %55
  %58 = getelementptr i16, i16* %42, i64 %55
  %59 = add i64 %55, -16
  %60 = lshr exact i64 %59, 4
  %61 = add nuw nsw i64 %60, 1
  %62 = and i64 %61, 3
  %63 = icmp ult i64 %59, 48
  br i1 %63, label %115, label %64

64:                                               ; preds = %54
  %65 = sub nsw i64 %61, %62
  br label %66

66:                                               ; preds = %66, %64
  %67 = phi i64 [ 0, %64 ], [ %112, %66 ]
  %68 = phi i64 [ %65, %64 ], [ %113, %66 ]
  %69 = getelementptr i16, i16* %24, i64 %67
  %70 = getelementptr i16, i16* %42, i64 %67
  %71 = bitcast i16* %69 to <8 x i16>*
  %72 = load <8 x i16>, <8 x i16>* %71, align 2, !alias.scope !75
  %73 = getelementptr i16, i16* %69, i64 8
  %74 = bitcast i16* %73 to <8 x i16>*
  %75 = load <8 x i16>, <8 x i16>* %74, align 2, !alias.scope !75
  %76 = bitcast i16* %70 to <8 x i16>*
  store <8 x i16> %72, <8 x i16>* %76, align 2, !alias.scope !78, !noalias !75
  %77 = getelementptr i16, i16* %70, i64 8
  %78 = bitcast i16* %77 to <8 x i16>*
  store <8 x i16> %75, <8 x i16>* %78, align 2, !alias.scope !78, !noalias !75
  %79 = or i64 %67, 16
  %80 = getelementptr i16, i16* %24, i64 %79
  %81 = getelementptr i16, i16* %42, i64 %79
  %82 = bitcast i16* %80 to <8 x i16>*
  %83 = load <8 x i16>, <8 x i16>* %82, align 2, !alias.scope !75
  %84 = getelementptr i16, i16* %80, i64 8
  %85 = bitcast i16* %84 to <8 x i16>*
  %86 = load <8 x i16>, <8 x i16>* %85, align 2, !alias.scope !75
  %87 = bitcast i16* %81 to <8 x i16>*
  store <8 x i16> %83, <8 x i16>* %87, align 2, !alias.scope !78, !noalias !75
  %88 = getelementptr i16, i16* %81, i64 8
  %89 = bitcast i16* %88 to <8 x i16>*
  store <8 x i16> %86, <8 x i16>* %89, align 2, !alias.scope !78, !noalias !75
  %90 = or i64 %67, 32
  %91 = getelementptr i16, i16* %24, i64 %90
  %92 = getelementptr i16, i16* %42, i64 %90
  %93 = bitcast i16* %91 to <8 x i16>*
  %94 = load <8 x i16>, <8 x i16>* %93, align 2, !alias.scope !75
  %95 = getelementptr i16, i16* %91, i64 8
  %96 = bitcast i16* %95 to <8 x i16>*
  %97 = load <8 x i16>, <8 x i16>* %96, align 2, !alias.scope !75
  %98 = bitcast i16* %92 to <8 x i16>*
  store <8 x i16> %94, <8 x i16>* %98, align 2, !alias.scope !78, !noalias !75
  %99 = getelementptr i16, i16* %92, i64 8
  %100 = bitcast i16* %99 to <8 x i16>*
  store <8 x i16> %97, <8 x i16>* %100, align 2, !alias.scope !78, !noalias !75
  %101 = or i64 %67, 48
  %102 = getelementptr i16, i16* %24, i64 %101
  %103 = getelementptr i16, i16* %42, i64 %101
  %104 = bitcast i16* %102 to <8 x i16>*
  %105 = load <8 x i16>, <8 x i16>* %104, align 2, !alias.scope !75
  %106 = getelementptr i16, i16* %102, i64 8
  %107 = bitcast i16* %106 to <8 x i16>*
  %108 = load <8 x i16>, <8 x i16>* %107, align 2, !alias.scope !75
  %109 = bitcast i16* %103 to <8 x i16>*
  store <8 x i16> %105, <8 x i16>* %109, align 2, !alias.scope !78, !noalias !75
  %110 = getelementptr i16, i16* %103, i64 8
  %111 = bitcast i16* %110 to <8 x i16>*
  store <8 x i16> %108, <8 x i16>* %111, align 2, !alias.scope !78, !noalias !75
  %112 = add i64 %67, 64
  %113 = add i64 %68, -4
  %114 = icmp eq i64 %113, 0
  br i1 %114, label %115, label %66, !llvm.loop !80

115:                                              ; preds = %66, %54
  %116 = phi i64 [ 0, %54 ], [ %112, %66 ]
  %117 = icmp eq i64 %62, 0
  br i1 %117, label %134, label %118

118:                                              ; preds = %115, %118
  %119 = phi i64 [ %131, %118 ], [ %116, %115 ]
  %120 = phi i64 [ %132, %118 ], [ %62, %115 ]
  %121 = getelementptr i16, i16* %24, i64 %119
  %122 = getelementptr i16, i16* %42, i64 %119
  %123 = bitcast i16* %121 to <8 x i16>*
  %124 = load <8 x i16>, <8 x i16>* %123, align 2, !alias.scope !75
  %125 = getelementptr i16, i16* %121, i64 8
  %126 = bitcast i16* %125 to <8 x i16>*
  %127 = load <8 x i16>, <8 x i16>* %126, align 2, !alias.scope !75
  %128 = bitcast i16* %122 to <8 x i16>*
  store <8 x i16> %124, <8 x i16>* %128, align 2, !alias.scope !78, !noalias !75
  %129 = getelementptr i16, i16* %122, i64 8
  %130 = bitcast i16* %129 to <8 x i16>*
  store <8 x i16> %127, <8 x i16>* %130, align 2, !alias.scope !78, !noalias !75
  %131 = add i64 %119, 16
  %132 = add i64 %120, -1
  %133 = icmp eq i64 %132, 0
  br i1 %133, label %134, label %118, !llvm.loop !81

134:                                              ; preds = %118, %115
  %135 = icmp eq i64 %55, %4
  br i1 %135, label %189, label %136

136:                                              ; preds = %134, %46, %44
  %137 = phi i64 [ %4, %46 ], [ %4, %44 ], [ %56, %134 ]
  %138 = phi i16* [ %24, %46 ], [ %24, %44 ], [ %57, %134 ]
  %139 = phi i16* [ %42, %46 ], [ %42, %44 ], [ %58, %134 ]
  %140 = add i64 %137, -1
  %141 = and i64 %137, 7
  %142 = icmp eq i64 %141, 0
  br i1 %142, label %154, label %143

143:                                              ; preds = %136, %143
  %144 = phi i64 [ %149, %143 ], [ %137, %136 ]
  %145 = phi i16* [ %151, %143 ], [ %138, %136 ]
  %146 = phi i16* [ %150, %143 ], [ %139, %136 ]
  %147 = phi i64 [ %152, %143 ], [ %141, %136 ]
  %148 = load i16, i16* %145, align 2
  store i16 %148, i16* %146, align 2
  %149 = add i64 %144, -1
  %150 = getelementptr inbounds i16, i16* %146, i64 1
  %151 = getelementptr inbounds i16, i16* %145, i64 1
  %152 = add i64 %147, -1
  %153 = icmp eq i64 %152, 0
  br i1 %153, label %154, label %143, !llvm.loop !82

154:                                              ; preds = %143, %136
  %155 = phi i64 [ %137, %136 ], [ %149, %143 ]
  %156 = phi i16* [ %138, %136 ], [ %151, %143 ]
  %157 = phi i16* [ %139, %136 ], [ %150, %143 ]
  %158 = icmp ult i64 %140, 7
  br i1 %158, label %189, label %159

159:                                              ; preds = %154, %159
  %160 = phi i64 [ %185, %159 ], [ %155, %154 ]
  %161 = phi i16* [ %187, %159 ], [ %156, %154 ]
  %162 = phi i16* [ %186, %159 ], [ %157, %154 ]
  %163 = load i16, i16* %161, align 2
  store i16 %163, i16* %162, align 2
  %164 = getelementptr inbounds i16, i16* %162, i64 1
  %165 = getelementptr inbounds i16, i16* %161, i64 1
  %166 = load i16, i16* %165, align 2
  store i16 %166, i16* %164, align 2
  %167 = getelementptr inbounds i16, i16* %162, i64 2
  %168 = getelementptr inbounds i16, i16* %161, i64 2
  %169 = load i16, i16* %168, align 2
  store i16 %169, i16* %167, align 2
  %170 = getelementptr inbounds i16, i16* %162, i64 3
  %171 = getelementptr inbounds i16, i16* %161, i64 3
  %172 = load i16, i16* %171, align 2
  store i16 %172, i16* %170, align 2
  %173 = getelementptr inbounds i16, i16* %162, i64 4
  %174 = getelementptr inbounds i16, i16* %161, i64 4
  %175 = load i16, i16* %174, align 2
  store i16 %175, i16* %173, align 2
  %176 = getelementptr inbounds i16, i16* %162, i64 5
  %177 = getelementptr inbounds i16, i16* %161, i64 5
  %178 = load i16, i16* %177, align 2
  store i16 %178, i16* %176, align 2
  %179 = getelementptr inbounds i16, i16* %162, i64 6
  %180 = getelementptr inbounds i16, i16* %161, i64 6
  %181 = load i16, i16* %180, align 2
  store i16 %181, i16* %179, align 2
  %182 = getelementptr inbounds i16, i16* %162, i64 7
  %183 = getelementptr inbounds i16, i16* %161, i64 7
  %184 = load i16, i16* %183, align 2
  store i16 %184, i16* %182, align 2
  %185 = add i64 %160, -8
  %186 = getelementptr inbounds i16, i16* %162, i64 8
  %187 = getelementptr inbounds i16, i16* %161, i64 8
  %188 = icmp eq i64 %185, 0
  br i1 %188, label %189, label %159, !llvm.loop !83

189:                                              ; preds = %154, %159, %134, %38
  %190 = icmp eq i64 %6, 0
  br i1 %190, label %289, label %191

191:                                              ; preds = %189
  %192 = getelementptr inbounds i16, i16* %42, i64 %4
  %193 = icmp ult i64 %6, 16
  br i1 %193, label %276, label %194

194:                                              ; preds = %191
  %195 = and i64 %6, -16
  %196 = sub i64 %6, %195
  %197 = getelementptr i16, i16* %7, i64 %195
  %198 = getelementptr i16, i16* %192, i64 %195
  %199 = add i64 %195, -16
  %200 = lshr exact i64 %199, 4
  %201 = add nuw nsw i64 %200, 1
  %202 = and i64 %201, 3
  %203 = icmp ult i64 %199, 48
  br i1 %203, label %255, label %204

204:                                              ; preds = %194
  %205 = sub nsw i64 %201, %202
  br label %206

206:                                              ; preds = %206, %204
  %207 = phi i64 [ 0, %204 ], [ %252, %206 ]
  %208 = phi i64 [ %205, %204 ], [ %253, %206 ]
  %209 = getelementptr i16, i16* %7, i64 %207
  %210 = getelementptr i16, i16* %192, i64 %207
  %211 = bitcast i16* %209 to <8 x i16>*
  %212 = load <8 x i16>, <8 x i16>* %211, align 2
  %213 = getelementptr i16, i16* %209, i64 8
  %214 = bitcast i16* %213 to <8 x i16>*
  %215 = load <8 x i16>, <8 x i16>* %214, align 2
  %216 = bitcast i16* %210 to <8 x i16>*
  store <8 x i16> %212, <8 x i16>* %216, align 2
  %217 = getelementptr i16, i16* %210, i64 8
  %218 = bitcast i16* %217 to <8 x i16>*
  store <8 x i16> %215, <8 x i16>* %218, align 2
  %219 = or i64 %207, 16
  %220 = getelementptr i16, i16* %7, i64 %219
  %221 = getelementptr i16, i16* %192, i64 %219
  %222 = bitcast i16* %220 to <8 x i16>*
  %223 = load <8 x i16>, <8 x i16>* %222, align 2
  %224 = getelementptr i16, i16* %220, i64 8
  %225 = bitcast i16* %224 to <8 x i16>*
  %226 = load <8 x i16>, <8 x i16>* %225, align 2
  %227 = bitcast i16* %221 to <8 x i16>*
  store <8 x i16> %223, <8 x i16>* %227, align 2
  %228 = getelementptr i16, i16* %221, i64 8
  %229 = bitcast i16* %228 to <8 x i16>*
  store <8 x i16> %226, <8 x i16>* %229, align 2
  %230 = or i64 %207, 32
  %231 = getelementptr i16, i16* %7, i64 %230
  %232 = getelementptr i16, i16* %192, i64 %230
  %233 = bitcast i16* %231 to <8 x i16>*
  %234 = load <8 x i16>, <8 x i16>* %233, align 2
  %235 = getelementptr i16, i16* %231, i64 8
  %236 = bitcast i16* %235 to <8 x i16>*
  %237 = load <8 x i16>, <8 x i16>* %236, align 2
  %238 = bitcast i16* %232 to <8 x i16>*
  store <8 x i16> %234, <8 x i16>* %238, align 2
  %239 = getelementptr i16, i16* %232, i64 8
  %240 = bitcast i16* %239 to <8 x i16>*
  store <8 x i16> %237, <8 x i16>* %240, align 2
  %241 = or i64 %207, 48
  %242 = getelementptr i16, i16* %7, i64 %241
  %243 = getelementptr i16, i16* %192, i64 %241
  %244 = bitcast i16* %242 to <8 x i16>*
  %245 = load <8 x i16>, <8 x i16>* %244, align 2
  %246 = getelementptr i16, i16* %242, i64 8
  %247 = bitcast i16* %246 to <8 x i16>*
  %248 = load <8 x i16>, <8 x i16>* %247, align 2
  %249 = bitcast i16* %243 to <8 x i16>*
  store <8 x i16> %245, <8 x i16>* %249, align 2
  %250 = getelementptr i16, i16* %243, i64 8
  %251 = bitcast i16* %250 to <8 x i16>*
  store <8 x i16> %248, <8 x i16>* %251, align 2
  %252 = add i64 %207, 64
  %253 = add i64 %208, -4
  %254 = icmp eq i64 %253, 0
  br i1 %254, label %255, label %206, !llvm.loop !84

255:                                              ; preds = %206, %194
  %256 = phi i64 [ 0, %194 ], [ %252, %206 ]
  %257 = icmp eq i64 %202, 0
  br i1 %257, label %274, label %258

258:                                              ; preds = %255, %258
  %259 = phi i64 [ %271, %258 ], [ %256, %255 ]
  %260 = phi i64 [ %272, %258 ], [ %202, %255 ]
  %261 = getelementptr i16, i16* %7, i64 %259
  %262 = getelementptr i16, i16* %192, i64 %259
  %263 = bitcast i16* %261 to <8 x i16>*
  %264 = load <8 x i16>, <8 x i16>* %263, align 2
  %265 = getelementptr i16, i16* %261, i64 8
  %266 = bitcast i16* %265 to <8 x i16>*
  %267 = load <8 x i16>, <8 x i16>* %266, align 2
  %268 = bitcast i16* %262 to <8 x i16>*
  store <8 x i16> %264, <8 x i16>* %268, align 2
  %269 = getelementptr i16, i16* %262, i64 8
  %270 = bitcast i16* %269 to <8 x i16>*
  store <8 x i16> %267, <8 x i16>* %270, align 2
  %271 = add i64 %259, 16
  %272 = add i64 %260, -1
  %273 = icmp eq i64 %272, 0
  br i1 %273, label %274, label %258, !llvm.loop !85

274:                                              ; preds = %258, %255
  %275 = icmp eq i64 %195, %6
  br i1 %275, label %289, label %276

276:                                              ; preds = %274, %191
  %277 = phi i64 [ %6, %191 ], [ %196, %274 ]
  %278 = phi i16* [ %7, %191 ], [ %197, %274 ]
  %279 = phi i16* [ %192, %191 ], [ %198, %274 ]
  br label %280

280:                                              ; preds = %276, %280
  %281 = phi i64 [ %285, %280 ], [ %277, %276 ]
  %282 = phi i16* [ %287, %280 ], [ %278, %276 ]
  %283 = phi i16* [ %286, %280 ], [ %279, %276 ]
  %284 = load i16, i16* %282, align 2
  store i16 %284, i16* %283, align 2
  %285 = add i64 %281, -1
  %286 = getelementptr inbounds i16, i16* %283, i64 1
  %287 = getelementptr inbounds i16, i16* %282, i64 1
  %288 = icmp eq i64 %285, 0
  br i1 %288, label %289, label %280, !llvm.loop !86

289:                                              ; preds = %280, %274, %189
  %290 = sub i64 %3, %5
  %291 = sub i64 %290, %4
  %292 = icmp eq i64 %291, 0
  br i1 %292, label %448, label %293

293:                                              ; preds = %289
  %294 = getelementptr inbounds i16, i16* %42, i64 %4
  %295 = getelementptr inbounds i16, i16* %294, i64 %6
  %296 = getelementptr inbounds i16, i16* %24, i64 %4
  %297 = getelementptr inbounds i16, i16* %296, i64 %5
  %298 = icmp ult i64 %291, 16
  br i1 %298, label %395, label %299

299:                                              ; preds = %293
  %300 = bitcast i16* %297 to i8*
  %301 = add i64 %6, %4
  %302 = shl i64 %301, 1
  %303 = getelementptr i8, i8* %41, i64 %302
  %304 = add i64 %6, %3
  %305 = sub i64 %304, %5
  %306 = shl i64 %305, 1
  %307 = getelementptr i8, i8* %41, i64 %306
  %308 = getelementptr i16, i16* %24, i64 %3
  %309 = bitcast i16* %308 to i8*
  %310 = icmp ult i8* %303, %309
  %311 = icmp ugt i8* %307, %300
  %312 = and i1 %310, %311
  br i1 %312, label %395, label %313

313:                                              ; preds = %299
  %314 = and i64 %291, -16
  %315 = sub i64 %291, %314
  %316 = getelementptr i16, i16* %297, i64 %314
  %317 = getelementptr i16, i16* %295, i64 %314
  %318 = add i64 %314, -16
  %319 = lshr exact i64 %318, 4
  %320 = add nuw nsw i64 %319, 1
  %321 = and i64 %320, 3
  %322 = icmp ult i64 %318, 48
  br i1 %322, label %374, label %323

323:                                              ; preds = %313
  %324 = sub nsw i64 %320, %321
  br label %325

325:                                              ; preds = %325, %323
  %326 = phi i64 [ 0, %323 ], [ %371, %325 ]
  %327 = phi i64 [ %324, %323 ], [ %372, %325 ]
  %328 = getelementptr i16, i16* %297, i64 %326
  %329 = getelementptr i16, i16* %295, i64 %326
  %330 = bitcast i16* %328 to <8 x i16>*
  %331 = load <8 x i16>, <8 x i16>* %330, align 2, !alias.scope !87
  %332 = getelementptr i16, i16* %328, i64 8
  %333 = bitcast i16* %332 to <8 x i16>*
  %334 = load <8 x i16>, <8 x i16>* %333, align 2, !alias.scope !87
  %335 = bitcast i16* %329 to <8 x i16>*
  store <8 x i16> %331, <8 x i16>* %335, align 2, !alias.scope !90, !noalias !87
  %336 = getelementptr i16, i16* %329, i64 8
  %337 = bitcast i16* %336 to <8 x i16>*
  store <8 x i16> %334, <8 x i16>* %337, align 2, !alias.scope !90, !noalias !87
  %338 = or i64 %326, 16
  %339 = getelementptr i16, i16* %297, i64 %338
  %340 = getelementptr i16, i16* %295, i64 %338
  %341 = bitcast i16* %339 to <8 x i16>*
  %342 = load <8 x i16>, <8 x i16>* %341, align 2, !alias.scope !87
  %343 = getelementptr i16, i16* %339, i64 8
  %344 = bitcast i16* %343 to <8 x i16>*
  %345 = load <8 x i16>, <8 x i16>* %344, align 2, !alias.scope !87
  %346 = bitcast i16* %340 to <8 x i16>*
  store <8 x i16> %342, <8 x i16>* %346, align 2, !alias.scope !90, !noalias !87
  %347 = getelementptr i16, i16* %340, i64 8
  %348 = bitcast i16* %347 to <8 x i16>*
  store <8 x i16> %345, <8 x i16>* %348, align 2, !alias.scope !90, !noalias !87
  %349 = or i64 %326, 32
  %350 = getelementptr i16, i16* %297, i64 %349
  %351 = getelementptr i16, i16* %295, i64 %349
  %352 = bitcast i16* %350 to <8 x i16>*
  %353 = load <8 x i16>, <8 x i16>* %352, align 2, !alias.scope !87
  %354 = getelementptr i16, i16* %350, i64 8
  %355 = bitcast i16* %354 to <8 x i16>*
  %356 = load <8 x i16>, <8 x i16>* %355, align 2, !alias.scope !87
  %357 = bitcast i16* %351 to <8 x i16>*
  store <8 x i16> %353, <8 x i16>* %357, align 2, !alias.scope !90, !noalias !87
  %358 = getelementptr i16, i16* %351, i64 8
  %359 = bitcast i16* %358 to <8 x i16>*
  store <8 x i16> %356, <8 x i16>* %359, align 2, !alias.scope !90, !noalias !87
  %360 = or i64 %326, 48
  %361 = getelementptr i16, i16* %297, i64 %360
  %362 = getelementptr i16, i16* %295, i64 %360
  %363 = bitcast i16* %361 to <8 x i16>*
  %364 = load <8 x i16>, <8 x i16>* %363, align 2, !alias.scope !87
  %365 = getelementptr i16, i16* %361, i64 8
  %366 = bitcast i16* %365 to <8 x i16>*
  %367 = load <8 x i16>, <8 x i16>* %366, align 2, !alias.scope !87
  %368 = bitcast i16* %362 to <8 x i16>*
  store <8 x i16> %364, <8 x i16>* %368, align 2, !alias.scope !90, !noalias !87
  %369 = getelementptr i16, i16* %362, i64 8
  %370 = bitcast i16* %369 to <8 x i16>*
  store <8 x i16> %367, <8 x i16>* %370, align 2, !alias.scope !90, !noalias !87
  %371 = add i64 %326, 64
  %372 = add i64 %327, -4
  %373 = icmp eq i64 %372, 0
  br i1 %373, label %374, label %325, !llvm.loop !92

374:                                              ; preds = %325, %313
  %375 = phi i64 [ 0, %313 ], [ %371, %325 ]
  %376 = icmp eq i64 %321, 0
  br i1 %376, label %393, label %377

377:                                              ; preds = %374, %377
  %378 = phi i64 [ %390, %377 ], [ %375, %374 ]
  %379 = phi i64 [ %391, %377 ], [ %321, %374 ]
  %380 = getelementptr i16, i16* %297, i64 %378
  %381 = getelementptr i16, i16* %295, i64 %378
  %382 = bitcast i16* %380 to <8 x i16>*
  %383 = load <8 x i16>, <8 x i16>* %382, align 2, !alias.scope !87
  %384 = getelementptr i16, i16* %380, i64 8
  %385 = bitcast i16* %384 to <8 x i16>*
  %386 = load <8 x i16>, <8 x i16>* %385, align 2, !alias.scope !87
  %387 = bitcast i16* %381 to <8 x i16>*
  store <8 x i16> %383, <8 x i16>* %387, align 2, !alias.scope !90, !noalias !87
  %388 = getelementptr i16, i16* %381, i64 8
  %389 = bitcast i16* %388 to <8 x i16>*
  store <8 x i16> %386, <8 x i16>* %389, align 2, !alias.scope !90, !noalias !87
  %390 = add i64 %378, 16
  %391 = add i64 %379, -1
  %392 = icmp eq i64 %391, 0
  br i1 %392, label %393, label %377, !llvm.loop !93

393:                                              ; preds = %377, %374
  %394 = icmp eq i64 %291, %314
  br i1 %394, label %448, label %395

395:                                              ; preds = %393, %299, %293
  %396 = phi i64 [ %291, %299 ], [ %291, %293 ], [ %315, %393 ]
  %397 = phi i16* [ %297, %299 ], [ %297, %293 ], [ %316, %393 ]
  %398 = phi i16* [ %295, %299 ], [ %295, %293 ], [ %317, %393 ]
  %399 = add i64 %396, -1
  %400 = and i64 %396, 7
  %401 = icmp eq i64 %400, 0
  br i1 %401, label %413, label %402

402:                                              ; preds = %395, %402
  %403 = phi i64 [ %408, %402 ], [ %396, %395 ]
  %404 = phi i16* [ %410, %402 ], [ %397, %395 ]
  %405 = phi i16* [ %409, %402 ], [ %398, %395 ]
  %406 = phi i64 [ %411, %402 ], [ %400, %395 ]
  %407 = load i16, i16* %404, align 2
  store i16 %407, i16* %405, align 2
  %408 = add i64 %403, -1
  %409 = getelementptr inbounds i16, i16* %405, i64 1
  %410 = getelementptr inbounds i16, i16* %404, i64 1
  %411 = add i64 %406, -1
  %412 = icmp eq i64 %411, 0
  br i1 %412, label %413, label %402, !llvm.loop !94

413:                                              ; preds = %402, %395
  %414 = phi i64 [ %396, %395 ], [ %408, %402 ]
  %415 = phi i16* [ %397, %395 ], [ %410, %402 ]
  %416 = phi i16* [ %398, %395 ], [ %409, %402 ]
  %417 = icmp ult i64 %399, 7
  br i1 %417, label %448, label %418

418:                                              ; preds = %413, %418
  %419 = phi i64 [ %444, %418 ], [ %414, %413 ]
  %420 = phi i16* [ %446, %418 ], [ %415, %413 ]
  %421 = phi i16* [ %445, %418 ], [ %416, %413 ]
  %422 = load i16, i16* %420, align 2
  store i16 %422, i16* %421, align 2
  %423 = getelementptr inbounds i16, i16* %421, i64 1
  %424 = getelementptr inbounds i16, i16* %420, i64 1
  %425 = load i16, i16* %424, align 2
  store i16 %425, i16* %423, align 2
  %426 = getelementptr inbounds i16, i16* %421, i64 2
  %427 = getelementptr inbounds i16, i16* %420, i64 2
  %428 = load i16, i16* %427, align 2
  store i16 %428, i16* %426, align 2
  %429 = getelementptr inbounds i16, i16* %421, i64 3
  %430 = getelementptr inbounds i16, i16* %420, i64 3
  %431 = load i16, i16* %430, align 2
  store i16 %431, i16* %429, align 2
  %432 = getelementptr inbounds i16, i16* %421, i64 4
  %433 = getelementptr inbounds i16, i16* %420, i64 4
  %434 = load i16, i16* %433, align 2
  store i16 %434, i16* %432, align 2
  %435 = getelementptr inbounds i16, i16* %421, i64 5
  %436 = getelementptr inbounds i16, i16* %420, i64 5
  %437 = load i16, i16* %436, align 2
  store i16 %437, i16* %435, align 2
  %438 = getelementptr inbounds i16, i16* %421, i64 6
  %439 = getelementptr inbounds i16, i16* %420, i64 6
  %440 = load i16, i16* %439, align 2
  store i16 %440, i16* %438, align 2
  %441 = getelementptr inbounds i16, i16* %421, i64 7
  %442 = getelementptr inbounds i16, i16* %420, i64 7
  %443 = load i16, i16* %442, align 2
  store i16 %443, i16* %441, align 2
  %444 = add i64 %419, -8
  %445 = getelementptr inbounds i16, i16* %421, i64 8
  %446 = getelementptr inbounds i16, i16* %420, i64 8
  %447 = icmp eq i64 %444, 0
  br i1 %447, label %448, label %418, !llvm.loop !95

448:                                              ; preds = %413, %418, %393, %289
  %449 = icmp eq i64 %1, 10
  br i1 %449, label %451, label %450

450:                                              ; preds = %448
  tail call void @_ZdlPv(i8* %25) #13
  br label %451

451:                                              ; preds = %448, %450
  %452 = bitcast %"class.std::__1::basic_string"* %0 to i8**
  store i8* %41, i8** %452, align 8
  %453 = or i64 %39, -9223372036854775808
  %454 = getelementptr inbounds %"class.std::__1::basic_string", %"class.std::__1::basic_string"* %0, i64 0, i32 0, i32 0, i32 0, i32 0, i32 0, i32 2
  store i64 %453, i64* %454, align 8
  %455 = add i64 %290, %6
  %456 = getelementptr inbounds %"class.std::__1::basic_string", %"class.std::__1::basic_string"* %0, i64 0, i32 0, i32 0, i32 0, i32 0, i32 0, i32 1
  store i64 %455, i64* %456, align 8
  %457 = getelementptr inbounds i16, i16* %42, i64 %455
  store i16 0, i16* %457, align 2
  ret void
}

; Function Attrs: noreturn
declare void @_ZNKSt3__121__basic_string_commonILb1EE20__throw_length_errorEv(%"class.std::__1::__basic_string_common"*) local_unnamed_addr #8

; Function Attrs: noreturn nounwind
declare void @abort() local_unnamed_addr #9

; Function Attrs: nobuiltin nofree
declare noalias nonnull i8* @_Znwm(i64) local_unnamed_addr #10

; Function Attrs: nounwind ssp uwtable
define linkonce_odr hidden void @_ZNSt3__127__tree_balance_after_insertIPNS_16__tree_node_baseIPvEEEEvT_S5_(%"class.std::__1::__tree_node_base"*, %"class.std::__1::__tree_node_base"*) local_unnamed_addr #2 comdat {
  %3 = icmp eq %"class.std::__1::__tree_node_base"* %1, %0
  %4 = getelementptr inbounds %"class.std::__1::__tree_node_base", %"class.std::__1::__tree_node_base"* %1, i64 0, i32 3
  %5 = zext i1 %3 to i8
  store i8 %5, i8* %4, align 8
  br i1 %3, label %156, label %6

6:                                                ; preds = %2, %149
  %7 = phi %"class.std::__1::__tree_node_base"* [ %20, %149 ], [ %1, %2 ]
  %8 = getelementptr inbounds %"class.std::__1::__tree_node_base", %"class.std::__1::__tree_node_base"* %7, i64 0, i32 2
  %9 = bitcast %"class.std::__1::__tree_end_node"** %8 to %"class.std::__1::__tree_node_base"**
  %10 = load %"class.std::__1::__tree_node_base"*, %"class.std::__1::__tree_node_base"** %9, align 8
  %11 = getelementptr inbounds %"class.std::__1::__tree_node_base", %"class.std::__1::__tree_node_base"* %10, i64 0, i32 3
  %12 = load i8, i8* %11, align 8, !range !96
  %13 = icmp eq i8 %12, 0
  br i1 %13, label %14, label %156

14:                                               ; preds = %6
  %15 = getelementptr inbounds %"class.std::__1::__tree_node_base", %"class.std::__1::__tree_node_base"* %10, i64 0, i32 2
  %16 = load %"class.std::__1::__tree_end_node"*, %"class.std::__1::__tree_end_node"** %15, align 8
  %17 = getelementptr inbounds %"class.std::__1::__tree_end_node", %"class.std::__1::__tree_end_node"* %16, i64 0, i32 0
  %18 = load %"class.std::__1::__tree_node_base"*, %"class.std::__1::__tree_node_base"** %17, align 8
  %19 = icmp eq %"class.std::__1::__tree_node_base"* %18, %10
  %20 = bitcast %"class.std::__1::__tree_end_node"* %16 to %"class.std::__1::__tree_node_base"*
  br i1 %19, label %21, label %87

21:                                               ; preds = %14
  %22 = getelementptr inbounds %"class.std::__1::__tree_end_node", %"class.std::__1::__tree_end_node"* %16, i64 1, i32 0
  %23 = load %"class.std::__1::__tree_node_base"*, %"class.std::__1::__tree_node_base"** %22, align 8
  %24 = icmp eq %"class.std::__1::__tree_node_base"* %23, null
  br i1 %24, label %29, label %25

25:                                               ; preds = %21
  %26 = getelementptr inbounds %"class.std::__1::__tree_node_base", %"class.std::__1::__tree_node_base"* %23, i64 0, i32 3
  %27 = load i8, i8* %26, align 8, !range !96
  %28 = icmp eq i8 %27, 0
  br i1 %28, label %149, label %29

29:                                               ; preds = %25, %21
  %30 = getelementptr inbounds %"class.std::__1::__tree_node_base", %"class.std::__1::__tree_node_base"* %10, i64 0, i32 2
  %31 = bitcast %"class.std::__1::__tree_end_node"* %16 to %"class.std::__1::__tree_node_base"*
  %32 = getelementptr inbounds %"class.std::__1::__tree_node_base", %"class.std::__1::__tree_node_base"* %10, i64 0, i32 0, i32 0
  %33 = load %"class.std::__1::__tree_node_base"*, %"class.std::__1::__tree_node_base"** %32, align 8
  %34 = icmp eq %"class.std::__1::__tree_node_base"* %33, %7
  br i1 %34, label %61, label %35

35:                                               ; preds = %29
  %36 = ptrtoint %"class.std::__1::__tree_end_node"* %16 to i64
  %37 = getelementptr inbounds %"class.std::__1::__tree_node_base", %"class.std::__1::__tree_node_base"* %10, i64 0, i32 1
  %38 = load %"class.std::__1::__tree_node_base"*, %"class.std::__1::__tree_node_base"** %37, align 8
  %39 = getelementptr inbounds %"class.std::__1::__tree_node_base", %"class.std::__1::__tree_node_base"* %38, i64 0, i32 0, i32 0
  %40 = load %"class.std::__1::__tree_node_base"*, %"class.std::__1::__tree_node_base"** %39, align 8
  store %"class.std::__1::__tree_node_base"* %40, %"class.std::__1::__tree_node_base"** %37, align 8
  %41 = icmp eq %"class.std::__1::__tree_node_base"* %40, null
  br i1 %41, label %47, label %42

42:                                               ; preds = %35
  %43 = getelementptr inbounds %"class.std::__1::__tree_node_base", %"class.std::__1::__tree_node_base"* %10, i64 0, i32 0
  %44 = getelementptr inbounds %"class.std::__1::__tree_node_base", %"class.std::__1::__tree_node_base"* %40, i64 0, i32 2
  store %"class.std::__1::__tree_end_node"* %43, %"class.std::__1::__tree_end_node"** %44, align 8
  %45 = bitcast %"class.std::__1::__tree_end_node"** %30 to i64*
  %46 = load i64, i64* %45, align 8
  br label %47

47:                                               ; preds = %35, %42
  %48 = phi i64 [ %46, %42 ], [ %36, %35 ]
  %49 = getelementptr inbounds %"class.std::__1::__tree_node_base", %"class.std::__1::__tree_node_base"* %38, i64 0, i32 2
  %50 = bitcast %"class.std::__1::__tree_end_node"** %49 to i64*
  store i64 %48, i64* %50, align 8
  %51 = load %"class.std::__1::__tree_end_node"*, %"class.std::__1::__tree_end_node"** %30, align 8
  %52 = getelementptr inbounds %"class.std::__1::__tree_end_node", %"class.std::__1::__tree_end_node"* %51, i64 0, i32 0
  %53 = load %"class.std::__1::__tree_node_base"*, %"class.std::__1::__tree_node_base"** %52, align 8
  %54 = icmp eq %"class.std::__1::__tree_node_base"* %53, %10
  %55 = getelementptr inbounds %"class.std::__1::__tree_end_node", %"class.std::__1::__tree_end_node"* %51, i64 1, i32 0
  %56 = select i1 %54, %"class.std::__1::__tree_node_base"** %52, %"class.std::__1::__tree_node_base"** %55
  store %"class.std::__1::__tree_node_base"* %38, %"class.std::__1::__tree_node_base"** %56, align 8
  store %"class.std::__1::__tree_node_base"* %10, %"class.std::__1::__tree_node_base"** %39, align 8
  %57 = getelementptr inbounds %"class.std::__1::__tree_node_base", %"class.std::__1::__tree_node_base"* %38, i64 0, i32 0
  store %"class.std::__1::__tree_end_node"* %57, %"class.std::__1::__tree_end_node"** %30, align 8
  %58 = getelementptr inbounds %"class.std::__1::__tree_node_base", %"class.std::__1::__tree_node_base"* %38, i64 0, i32 2
  %59 = bitcast %"class.std::__1::__tree_end_node"** %58 to %"class.std::__1::__tree_node_base"**
  %60 = load %"class.std::__1::__tree_node_base"*, %"class.std::__1::__tree_node_base"** %59, align 8
  br label %61

61:                                               ; preds = %47, %29
  %62 = phi %"class.std::__1::__tree_node_base"* [ %31, %29 ], [ %60, %47 ]
  %63 = phi %"class.std::__1::__tree_node_base"* [ %10, %29 ], [ %38, %47 ]
  %64 = getelementptr inbounds %"class.std::__1::__tree_node_base", %"class.std::__1::__tree_node_base"* %63, i64 0, i32 3
  store i8 1, i8* %64, align 8
  %65 = getelementptr inbounds %"class.std::__1::__tree_node_base", %"class.std::__1::__tree_node_base"* %62, i64 0, i32 3
  store i8 0, i8* %65, align 8
  %66 = getelementptr inbounds %"class.std::__1::__tree_node_base", %"class.std::__1::__tree_node_base"* %62, i64 0, i32 0, i32 0
  %67 = load %"class.std::__1::__tree_node_base"*, %"class.std::__1::__tree_node_base"** %66, align 8
  %68 = getelementptr inbounds %"class.std::__1::__tree_node_base", %"class.std::__1::__tree_node_base"* %67, i64 0, i32 1
  %69 = load %"class.std::__1::__tree_node_base"*, %"class.std::__1::__tree_node_base"** %68, align 8
  store %"class.std::__1::__tree_node_base"* %69, %"class.std::__1::__tree_node_base"** %66, align 8
  %70 = icmp eq %"class.std::__1::__tree_node_base"* %69, null
  br i1 %70, label %74, label %71

71:                                               ; preds = %61
  %72 = getelementptr inbounds %"class.std::__1::__tree_node_base", %"class.std::__1::__tree_node_base"* %62, i64 0, i32 0
  %73 = getelementptr inbounds %"class.std::__1::__tree_node_base", %"class.std::__1::__tree_node_base"* %69, i64 0, i32 2
  store %"class.std::__1::__tree_end_node"* %72, %"class.std::__1::__tree_end_node"** %73, align 8
  br label %74

74:                                               ; preds = %71, %61
  %75 = getelementptr inbounds %"class.std::__1::__tree_node_base", %"class.std::__1::__tree_node_base"* %62, i64 0, i32 2
  %76 = bitcast %"class.std::__1::__tree_end_node"** %75 to i64*
  %77 = load i64, i64* %76, align 8
  %78 = getelementptr inbounds %"class.std::__1::__tree_node_base", %"class.std::__1::__tree_node_base"* %67, i64 0, i32 2
  %79 = bitcast %"class.std::__1::__tree_end_node"** %78 to i64*
  store i64 %77, i64* %79, align 8
  %80 = load %"class.std::__1::__tree_end_node"*, %"class.std::__1::__tree_end_node"** %75, align 8
  %81 = getelementptr inbounds %"class.std::__1::__tree_end_node", %"class.std::__1::__tree_end_node"* %80, i64 0, i32 0
  %82 = load %"class.std::__1::__tree_node_base"*, %"class.std::__1::__tree_node_base"** %81, align 8
  %83 = icmp eq %"class.std::__1::__tree_node_base"* %82, %62
  %84 = getelementptr inbounds %"class.std::__1::__tree_end_node", %"class.std::__1::__tree_end_node"* %80, i64 1, i32 0
  %85 = select i1 %83, %"class.std::__1::__tree_node_base"** %81, %"class.std::__1::__tree_node_base"** %84
  store %"class.std::__1::__tree_node_base"* %67, %"class.std::__1::__tree_node_base"** %85, align 8
  store %"class.std::__1::__tree_node_base"* %62, %"class.std::__1::__tree_node_base"** %68, align 8
  %86 = getelementptr inbounds %"class.std::__1::__tree_node_base", %"class.std::__1::__tree_node_base"* %67, i64 0, i32 0
  store %"class.std::__1::__tree_end_node"* %86, %"class.std::__1::__tree_end_node"** %75, align 8
  br label %156

87:                                               ; preds = %14
  %88 = icmp eq %"class.std::__1::__tree_node_base"* %18, null
  br i1 %88, label %93, label %89

89:                                               ; preds = %87
  %90 = getelementptr inbounds %"class.std::__1::__tree_node_base", %"class.std::__1::__tree_node_base"* %18, i64 0, i32 3
  %91 = load i8, i8* %90, align 8, !range !96
  %92 = icmp eq i8 %91, 0
  br i1 %92, label %149, label %93

93:                                               ; preds = %89, %87
  %94 = getelementptr inbounds %"class.std::__1::__tree_node_base", %"class.std::__1::__tree_node_base"* %10, i64 0, i32 2
  %95 = bitcast %"class.std::__1::__tree_end_node"* %16 to %"class.std::__1::__tree_node_base"*
  %96 = getelementptr inbounds %"class.std::__1::__tree_node_base", %"class.std::__1::__tree_node_base"* %10, i64 0, i32 0, i32 0
  %97 = load %"class.std::__1::__tree_node_base"*, %"class.std::__1::__tree_node_base"** %96, align 8
  %98 = icmp eq %"class.std::__1::__tree_node_base"* %97, %7
  br i1 %98, label %99, label %123

99:                                               ; preds = %93
  %100 = ptrtoint %"class.std::__1::__tree_end_node"* %16 to i64
  %101 = getelementptr inbounds %"class.std::__1::__tree_node_base", %"class.std::__1::__tree_node_base"* %10, i64 0, i32 0, i32 0
  %102 = getelementptr inbounds %"class.std::__1::__tree_node_base", %"class.std::__1::__tree_node_base"* %7, i64 0, i32 1
  %103 = load %"class.std::__1::__tree_node_base"*, %"class.std::__1::__tree_node_base"** %102, align 8
  store %"class.std::__1::__tree_node_base"* %103, %"class.std::__1::__tree_node_base"** %101, align 8
  %104 = icmp eq %"class.std::__1::__tree_node_base"* %103, null
  br i1 %104, label %110, label %105

105:                                              ; preds = %99
  %106 = getelementptr inbounds %"class.std::__1::__tree_node_base", %"class.std::__1::__tree_node_base"* %10, i64 0, i32 0
  %107 = getelementptr inbounds %"class.std::__1::__tree_node_base", %"class.std::__1::__tree_node_base"* %103, i64 0, i32 2
  store %"class.std::__1::__tree_end_node"* %106, %"class.std::__1::__tree_end_node"** %107, align 8
  %108 = bitcast %"class.std::__1::__tree_end_node"** %94 to i64*
  %109 = load i64, i64* %108, align 8
  br label %110

110:                                              ; preds = %99, %105
  %111 = phi i64 [ %109, %105 ], [ %100, %99 ]
  %112 = bitcast %"class.std::__1::__tree_end_node"** %8 to i64*
  store i64 %111, i64* %112, align 8
  %113 = load %"class.std::__1::__tree_end_node"*, %"class.std::__1::__tree_end_node"** %94, align 8
  %114 = getelementptr inbounds %"class.std::__1::__tree_end_node", %"class.std::__1::__tree_end_node"* %113, i64 0, i32 0
  %115 = load %"class.std::__1::__tree_node_base"*, %"class.std::__1::__tree_node_base"** %114, align 8
  %116 = icmp eq %"class.std::__1::__tree_node_base"* %115, %10
  %117 = getelementptr inbounds %"class.std::__1::__tree_end_node", %"class.std::__1::__tree_end_node"* %113, i64 1, i32 0
  %118 = select i1 %116, %"class.std::__1::__tree_node_base"** %114, %"class.std::__1::__tree_node_base"** %117
  store %"class.std::__1::__tree_node_base"* %7, %"class.std::__1::__tree_node_base"** %118, align 8
  store %"class.std::__1::__tree_node_base"* %10, %"class.std::__1::__tree_node_base"** %102, align 8
  %119 = getelementptr inbounds %"class.std::__1::__tree_node_base", %"class.std::__1::__tree_node_base"* %7, i64 0, i32 0
  store %"class.std::__1::__tree_end_node"* %119, %"class.std::__1::__tree_end_node"** %94, align 8
  %120 = getelementptr inbounds %"class.std::__1::__tree_node_base", %"class.std::__1::__tree_node_base"* %7, i64 0, i32 2
  %121 = bitcast %"class.std::__1::__tree_end_node"** %120 to %"class.std::__1::__tree_node_base"**
  %122 = load %"class.std::__1::__tree_node_base"*, %"class.std::__1::__tree_node_base"** %121, align 8
  br label %123

123:                                              ; preds = %93, %110
  %124 = phi %"class.std::__1::__tree_node_base"* [ %122, %110 ], [ %95, %93 ]
  %125 = phi %"class.std::__1::__tree_node_base"* [ %7, %110 ], [ %10, %93 ]
  %126 = getelementptr inbounds %"class.std::__1::__tree_node_base", %"class.std::__1::__tree_node_base"* %125, i64 0, i32 3
  store i8 1, i8* %126, align 8
  %127 = getelementptr inbounds %"class.std::__1::__tree_node_base", %"class.std::__1::__tree_node_base"* %124, i64 0, i32 3
  store i8 0, i8* %127, align 8
  %128 = getelementptr inbounds %"class.std::__1::__tree_node_base", %"class.std::__1::__tree_node_base"* %124, i64 0, i32 1
  %129 = load %"class.std::__1::__tree_node_base"*, %"class.std::__1::__tree_node_base"** %128, align 8
  %130 = getelementptr inbounds %"class.std::__1::__tree_node_base", %"class.std::__1::__tree_node_base"* %129, i64 0, i32 0, i32 0
  %131 = load %"class.std::__1::__tree_node_base"*, %"class.std::__1::__tree_node_base"** %130, align 8
  store %"class.std::__1::__tree_node_base"* %131, %"class.std::__1::__tree_node_base"** %128, align 8
  %132 = icmp eq %"class.std::__1::__tree_node_base"* %131, null
  br i1 %132, label %136, label %133

133:                                              ; preds = %123
  %134 = getelementptr inbounds %"class.std::__1::__tree_node_base", %"class.std::__1::__tree_node_base"* %124, i64 0, i32 0
  %135 = getelementptr inbounds %"class.std::__1::__tree_node_base", %"class.std::__1::__tree_node_base"* %131, i64 0, i32 2
  store %"class.std::__1::__tree_end_node"* %134, %"class.std::__1::__tree_end_node"** %135, align 8
  br label %136

136:                                              ; preds = %133, %123
  %137 = getelementptr inbounds %"class.std::__1::__tree_node_base", %"class.std::__1::__tree_node_base"* %124, i64 0, i32 2
  %138 = bitcast %"class.std::__1::__tree_end_node"** %137 to i64*
  %139 = load i64, i64* %138, align 8
  %140 = getelementptr inbounds %"class.std::__1::__tree_node_base", %"class.std::__1::__tree_node_base"* %129, i64 0, i32 2
  %141 = bitcast %"class.std::__1::__tree_end_node"** %140 to i64*
  store i64 %139, i64* %141, align 8
  %142 = load %"class.std::__1::__tree_end_node"*, %"class.std::__1::__tree_end_node"** %137, align 8
  %143 = getelementptr inbounds %"class.std::__1::__tree_end_node", %"class.std::__1::__tree_end_node"* %142, i64 0, i32 0
  %144 = load %"class.std::__1::__tree_node_base"*, %"class.std::__1::__tree_node_base"** %143, align 8
  %145 = icmp eq %"class.std::__1::__tree_node_base"* %144, %124
  %146 = getelementptr inbounds %"class.std::__1::__tree_end_node", %"class.std::__1::__tree_end_node"* %142, i64 1, i32 0
  %147 = select i1 %145, %"class.std::__1::__tree_node_base"** %143, %"class.std::__1::__tree_node_base"** %146
  store %"class.std::__1::__tree_node_base"* %129, %"class.std::__1::__tree_node_base"** %147, align 8
  store %"class.std::__1::__tree_node_base"* %124, %"class.std::__1::__tree_node_base"** %130, align 8
  %148 = getelementptr inbounds %"class.std::__1::__tree_node_base", %"class.std::__1::__tree_node_base"* %129, i64 0, i32 0
  store %"class.std::__1::__tree_end_node"* %148, %"class.std::__1::__tree_end_node"** %137, align 8
  br label %156

149:                                              ; preds = %89, %25
  %150 = phi i8* [ %26, %25 ], [ %90, %89 ]
  store i8 1, i8* %11, align 8
  %151 = icmp eq %"class.std::__1::__tree_node_base"* %20, %0
  %152 = getelementptr inbounds %"class.std::__1::__tree_end_node", %"class.std::__1::__tree_end_node"* %16, i64 3
  %153 = bitcast %"class.std::__1::__tree_end_node"* %152 to i8*
  %154 = zext i1 %151 to i8
  store i8 %154, i8* %153, align 8
  store i8 1, i8* %150, align 8
  %155 = icmp eq %"class.std::__1::__tree_node_base"* %20, %0
  br i1 %155, label %156, label %6

156:                                              ; preds = %6, %149, %2, %136, %74
  ret void
}

; Function Attrs: nounwind ssp uwtable
define linkonce_odr hidden void @_ZNSt3__16__treeIN10extensions12PermissionIDENS_4lessIS2_EENS_9allocatorIS2_EEE7destroyEPNS_11__tree_nodeIS2_PvEE(%"class.std::__1::__tree"*, %"class.std::__1::__tree_node"*) local_unnamed_addr #2 comdat align 2 {
  %3 = icmp eq %"class.std::__1::__tree_node"* %1, null
  br i1 %3, label %15, label %4

4:                                                ; preds = %2
  %5 = bitcast %"class.std::__1::__tree_node"* %1 to %"class.std::__1::__tree_node"**
  %6 = load %"class.std::__1::__tree_node"*, %"class.std::__1::__tree_node"** %5, align 8
  tail call void @_ZNSt3__16__treeIN10extensions12PermissionIDENS_4lessIS2_EENS_9allocatorIS2_EEE7destroyEPNS_11__tree_nodeIS2_PvEE(%"class.std::__1::__tree"* %0, %"class.std::__1::__tree_node"* %6) #14
  %7 = getelementptr inbounds %"class.std::__1::__tree_node", %"class.std::__1::__tree_node"* %1, i64 0, i32 0, i32 1
  %8 = bitcast %"class.std::__1::__tree_node_base"** %7 to %"class.std::__1::__tree_node"**
  %9 = load %"class.std::__1::__tree_node"*, %"class.std::__1::__tree_node"** %8, align 8
  tail call void @_ZNSt3__16__treeIN10extensions12PermissionIDENS_4lessIS2_EENS_9allocatorIS2_EEE7destroyEPNS_11__tree_nodeIS2_PvEE(%"class.std::__1::__tree"* %0, %"class.std::__1::__tree_node"* %9) #14
  %10 = getelementptr inbounds %"class.std::__1::__tree_node", %"class.std::__1::__tree_node"* %1, i64 0, i32 1
  %11 = bitcast %"class.extensions::PermissionID"* %10 to void (%"class.extensions::PermissionID"*)***
  %12 = load void (%"class.extensions::PermissionID"*)**, void (%"class.extensions::PermissionID"*)*** %11, align 8
  %13 = load void (%"class.extensions::PermissionID"*)*, void (%"class.extensions::PermissionID"*)** %12, align 8
  tail call void %13(%"class.extensions::PermissionID"* %10) #14
  %14 = bitcast %"class.std::__1::__tree_node"* %1 to i8*
  tail call void @_ZdlPv(i8* %14) #13
  ret void

15:                                               ; preds = %2
  ret void
}

; Function Attrs: nounwind ssp uwtable
define linkonce_odr hidden %"class.std::__1::__tree_end_node"* @_ZNSt3__16__treeIN10extensions12PermissionIDENS_4lessIS2_EENS_9allocatorIS2_EEE15__emplace_multiIJRKS2_EEENS_15__tree_iteratorIS2_PNS_11__tree_nodeIS2_PvEElEEDpOT_(%"class.std::__1::__tree"*, %"class.extensions::PermissionID"* dereferenceable(40)) local_unnamed_addr #2 comdat align 2 {
  %3 = alloca %"class.std::__1::unique_ptr.127", align 8
  %4 = bitcast %"class.std::__1::unique_ptr.127"* %3 to i8*
  call void @llvm.lifetime.start.p0i8(i64 24, i8* nonnull %4) #14
  %5 = getelementptr inbounds %"class.std::__1::unique_ptr.127", %"class.std::__1::unique_ptr.127"* %3, i64 0, i32 0, i32 0, i32 0
  %6 = bitcast %"class.std::__1::unique_ptr.127"* %3 to i8*
  call void @llvm.memset.p0i8.i64(i8* nonnull align 8 %6, i8 -86, i64 24, i1 false)
  call void @_ZNSt3__16__treeIN10extensions12PermissionIDENS_4lessIS2_EENS_9allocatorIS2_EEE16__construct_nodeIJRKS2_EEENS_10unique_ptrINS_11__tree_nodeIS2_PvEENS_22__tree_node_destructorINS5_ISE_EEEEEEDpOT_(%"class.std::__1::unique_ptr.127"* nonnull sret %3, %"class.std::__1::__tree"* %0, %"class.extensions::PermissionID"* dereferenceable(40) %1)
  %7 = load %"class.std::__1::__tree_node"*, %"class.std::__1::__tree_node"** %5, align 8
  %8 = getelementptr inbounds %"class.std::__1::__tree", %"class.std::__1::__tree"* %0, i64 0, i32 1, i32 0, i32 0
  %9 = bitcast %"class.std::__1::__tree_end_node"* %8 to %"class.std::__1::__tree_node"**
  %10 = load %"class.std::__1::__tree_node"*, %"class.std::__1::__tree_node"** %9, align 8
  %11 = icmp eq %"class.std::__1::__tree_node"* %10, null
  br i1 %11, label %86, label %12

12:                                               ; preds = %2
  %13 = getelementptr inbounds %"class.std::__1::__tree_node", %"class.std::__1::__tree_node"* %7, i64 0, i32 1, i32 1, i32 0
  %14 = load i32, i32* %13, align 8
  %15 = getelementptr inbounds %"class.std::__1::__tree_node", %"class.std::__1::__tree_node"* %7, i64 0, i32 1, i32 1, i32 1
  %16 = bitcast %"class.std::__1::basic_string"* %15 to %"struct.std::__1::basic_string<char16_t, std::__1::char_traits<char16_t>, std::__1::allocator<char16_t> >::__short"*
  %17 = getelementptr inbounds %"struct.std::__1::basic_string<char16_t, std::__1::char_traits<char16_t>, std::__1::allocator<char16_t> >::__short", %"struct.std::__1::basic_string<char16_t, std::__1::char_traits<char16_t>, std::__1::allocator<char16_t> >::__short"* %16, i64 0, i32 1, i32 1
  %18 = load i8, i8* %17, align 1
  %19 = icmp slt i8 %18, 0
  %20 = getelementptr inbounds %"class.std::__1::__tree_node", %"class.std::__1::__tree_node"* %7, i64 0, i32 1, i32 1, i32 1, i32 0, i32 0, i32 0, i32 0, i32 0, i32 1
  %21 = load i64, i64* %20, align 8
  %22 = zext i8 %18 to i64
  %23 = select i1 %19, i64 %21, i64 %22
  %24 = getelementptr inbounds %"class.std::__1::basic_string", %"class.std::__1::basic_string"* %15, i64 0, i32 0, i32 0, i32 0, i32 0, i32 0, i32 0
  %25 = load i16*, i16** %24, align 8
  %26 = bitcast %"class.std::__1::basic_string"* %15 to i16*
  %27 = select i1 %19, i16* %25, i16* %26
  br label %28

28:                                               ; preds = %83, %12
  %29 = phi %"class.std::__1::__tree_node"* [ %85, %83 ], [ %10, %12 ]
  %30 = getelementptr inbounds %"class.std::__1::__tree_node", %"class.std::__1::__tree_node"* %29, i64 0, i32 1, i32 1, i32 0
  %31 = load i32, i32* %30, align 8
  %32 = icmp slt i32 %14, %31
  br i1 %32, label %69, label %33

33:                                               ; preds = %28
  %34 = icmp slt i32 %31, %14
  br i1 %34, label %76, label %35

35:                                               ; preds = %33
  %36 = getelementptr inbounds %"class.std::__1::__tree_node", %"class.std::__1::__tree_node"* %29, i64 0, i32 1, i32 1, i32 1
  %37 = bitcast %"class.std::__1::basic_string"* %36 to %"struct.std::__1::basic_string<char16_t, std::__1::char_traits<char16_t>, std::__1::allocator<char16_t> >::__short"*
  %38 = getelementptr inbounds %"struct.std::__1::basic_string<char16_t, std::__1::char_traits<char16_t>, std::__1::allocator<char16_t> >::__short", %"struct.std::__1::basic_string<char16_t, std::__1::char_traits<char16_t>, std::__1::allocator<char16_t> >::__short"* %37, i64 0, i32 1, i32 1
  %39 = load i8, i8* %38, align 1
  %40 = icmp slt i8 %39, 0
  %41 = getelementptr inbounds %"class.std::__1::__tree_node", %"class.std::__1::__tree_node"* %29, i64 0, i32 1, i32 1, i32 1, i32 0, i32 0, i32 0, i32 0, i32 0, i32 1
  %42 = load i64, i64* %41, align 8
  %43 = zext i8 %39 to i64
  %44 = select i1 %40, i64 %42, i64 %43
  %45 = icmp ult i64 %44, %23
  %46 = select i1 %45, i64 %44, i64 %23
  %47 = icmp eq i64 %46, 0
  br i1 %47, label %67, label %48

48:                                               ; preds = %35
  %49 = getelementptr inbounds %"class.std::__1::basic_string", %"class.std::__1::basic_string"* %36, i64 0, i32 0, i32 0, i32 0, i32 0, i32 0, i32 0
  %50 = load i16*, i16** %49, align 8
  %51 = bitcast %"class.std::__1::basic_string"* %36 to i16*
  %52 = select i1 %40, i16* %50, i16* %51
  br label %53

53:                                               ; preds = %62, %48
  %54 = phi i64 [ %63, %62 ], [ %46, %48 ]
  %55 = phi i16* [ %65, %62 ], [ %52, %48 ]
  %56 = phi i16* [ %64, %62 ], [ %27, %48 ]
  %57 = load i16, i16* %56, align 2
  %58 = load i16, i16* %55, align 2
  %59 = icmp ult i16 %57, %58
  br i1 %59, label %69, label %60

60:                                               ; preds = %53
  %61 = icmp ult i16 %58, %57
  br i1 %61, label %76, label %62

62:                                               ; preds = %60
  %63 = add i64 %54, -1
  %64 = getelementptr inbounds i16, i16* %56, i64 1
  %65 = getelementptr inbounds i16, i16* %55, i64 1
  %66 = icmp eq i64 %63, 0
  br i1 %66, label %67, label %53

67:                                               ; preds = %62, %35
  %68 = icmp ult i64 %23, %44
  br i1 %68, label %69, label %76

69:                                               ; preds = %53, %67, %28
  %70 = getelementptr inbounds %"class.std::__1::__tree_node", %"class.std::__1::__tree_node"* %29, i64 0, i32 0, i32 0, i32 0
  %71 = load %"class.std::__1::__tree_node_base"*, %"class.std::__1::__tree_node_base"** %70, align 8
  %72 = icmp eq %"class.std::__1::__tree_node_base"* %71, null
  br i1 %72, label %73, label %83

73:                                               ; preds = %69
  %74 = getelementptr inbounds %"class.std::__1::__tree_node", %"class.std::__1::__tree_node"* %29, i64 0, i32 0, i32 0, i32 0
  %75 = getelementptr inbounds %"class.std::__1::__tree_node", %"class.std::__1::__tree_node"* %29, i64 0, i32 0, i32 0
  br label %88

76:                                               ; preds = %60, %67, %33
  %77 = getelementptr inbounds %"class.std::__1::__tree_node", %"class.std::__1::__tree_node"* %29, i64 0, i32 0, i32 1
  %78 = load %"class.std::__1::__tree_node_base"*, %"class.std::__1::__tree_node_base"** %77, align 8
  %79 = icmp eq %"class.std::__1::__tree_node_base"* %78, null
  br i1 %79, label %80, label %83

80:                                               ; preds = %76
  %81 = getelementptr inbounds %"class.std::__1::__tree_node", %"class.std::__1::__tree_node"* %29, i64 0, i32 0, i32 1
  %82 = getelementptr inbounds %"class.std::__1::__tree_node", %"class.std::__1::__tree_node"* %29, i64 0, i32 0, i32 0
  br label %88

83:                                               ; preds = %76, %69
  %84 = phi %"class.std::__1::__tree_node_base"* [ %71, %69 ], [ %78, %76 ]
  %85 = bitcast %"class.std::__1::__tree_node_base"* %84 to %"class.std::__1::__tree_node"*
  br label %28

86:                                               ; preds = %2
  %87 = getelementptr inbounds %"class.std::__1::__tree_end_node", %"class.std::__1::__tree_end_node"* %8, i64 0, i32 0
  br label %88

88:                                               ; preds = %73, %80, %86
  %89 = phi %"class.std::__1::__tree_end_node"* [ %8, %86 ], [ %75, %73 ], [ %82, %80 ]
  %90 = phi %"class.std::__1::__tree_node_base"** [ %87, %86 ], [ %74, %73 ], [ %81, %80 ]
  %91 = bitcast %"class.std::__1::__tree_node"* %7 to %"class.std::__1::__tree_node_base"*
  %92 = getelementptr inbounds %"class.std::__1::__tree_node", %"class.std::__1::__tree_node"* %7, i64 0, i32 0, i32 2
  %93 = bitcast %"class.std::__1::__tree_node"* %7 to i8*
  call void @llvm.memset.p0i8.i64(i8* align 8 %93, i8 0, i64 16, i1 false) #14
  store %"class.std::__1::__tree_end_node"* %89, %"class.std::__1::__tree_end_node"** %92, align 8
  %94 = bitcast %"class.std::__1::__tree_node_base"** %90 to %"class.std::__1::__tree_node"**
  store %"class.std::__1::__tree_node"* %7, %"class.std::__1::__tree_node"** %94, align 8
  %95 = getelementptr inbounds %"class.std::__1::__tree", %"class.std::__1::__tree"* %0, i64 0, i32 0
  %96 = load %"class.std::__1::__tree_end_node"*, %"class.std::__1::__tree_end_node"** %95, align 8
  %97 = getelementptr inbounds %"class.std::__1::__tree_end_node", %"class.std::__1::__tree_end_node"* %96, i64 0, i32 0
  %98 = load %"class.std::__1::__tree_node_base"*, %"class.std::__1::__tree_node_base"** %97, align 8
  %99 = icmp eq %"class.std::__1::__tree_node_base"* %98, null
  br i1 %99, label %104, label %100

100:                                              ; preds = %88
  %101 = ptrtoint %"class.std::__1::__tree_node_base"* %98 to i64
  %102 = bitcast %"class.std::__1::__tree"* %0 to i64*
  store i64 %101, i64* %102, align 8
  %103 = load %"class.std::__1::__tree_node_base"*, %"class.std::__1::__tree_node_base"** %90, align 8
  br label %104

104:                                              ; preds = %100, %88
  %105 = phi %"class.std::__1::__tree_node_base"* [ %91, %88 ], [ %103, %100 ]
  %106 = getelementptr inbounds %"class.std::__1::__tree", %"class.std::__1::__tree"* %0, i64 0, i32 1, i32 0, i32 0, i32 0
  %107 = load %"class.std::__1::__tree_node_base"*, %"class.std::__1::__tree_node_base"** %106, align 8
  call void @_ZNSt3__127__tree_balance_after_insertIPNS_16__tree_node_baseIPvEEEEvT_S5_(%"class.std::__1::__tree_node_base"* %107, %"class.std::__1::__tree_node_base"* %105) #14
  %108 = getelementptr inbounds %"class.std::__1::__tree", %"class.std::__1::__tree"* %0, i64 0, i32 2, i32 0, i32 0
  %109 = load i64, i64* %108, align 8
  %110 = add i64 %109, 1
  store i64 %110, i64* %108, align 8
  %111 = load %"class.std::__1::__tree_node"*, %"class.std::__1::__tree_node"** %5, align 8
  %112 = getelementptr inbounds %"class.std::__1::__tree_node", %"class.std::__1::__tree_node"* %111, i64 0, i32 0, i32 0
  call void @llvm.lifetime.end.p0i8(i64 24, i8* nonnull %4) #14
  ret %"class.std::__1::__tree_end_node"* %112
}

; Function Attrs: nounwind ssp uwtable
define linkonce_odr hidden void @_ZNSt3__16__treeIN10extensions12PermissionIDENS_4lessIS2_EENS_9allocatorIS2_EEE16__construct_nodeIJRKS2_EEENS_10unique_ptrINS_11__tree_nodeIS2_PvEENS_22__tree_node_destructorINS5_ISE_EEEEEEDpOT_(%"class.std::__1::unique_ptr.127"* noalias sret, %"class.std::__1::__tree"*, %"class.extensions::PermissionID"* dereferenceable(40)) local_unnamed_addr #2 comdat align 2 {
  %4 = getelementptr inbounds %"class.std::__1::__tree", %"class.std::__1::__tree"* %1, i64 0, i32 1
  %5 = getelementptr inbounds %"class.std::__1::unique_ptr.127", %"class.std::__1::unique_ptr.127"* %0, i64 0, i32 0, i32 1, i32 0, i32 0
  %6 = getelementptr inbounds %"class.std::__1::unique_ptr.127", %"class.std::__1::unique_ptr.127"* %0, i64 0, i32 0, i32 1, i32 0, i32 1
  %7 = bitcast %"class.std::__1::unique_ptr.127"* %0 to i8*
  call void @llvm.memset.p0i8.i64(i8* align 8 %7, i8 -86, i64 24, i1 false)
  %8 = tail call i8* @_Znwm(i64 72) #13
  %9 = ptrtoint i8* %8 to i64
  %10 = bitcast %"class.std::__1::unique_ptr.127"* %0 to i64*
  store i64 %9, i64* %10, align 8
  %11 = bitcast %"class.std::__1::allocator"** %5 to %"class.std::__1::__compressed_pair"**
  store %"class.std::__1::__compressed_pair"* %4, %"class.std::__1::__compressed_pair"** %11, align 8
  store i8 0, i8* %6, align 8
  %12 = getelementptr inbounds i8, i8* %8, i64 32
  %13 = getelementptr inbounds i8, i8* %8, i64 40
  %14 = bitcast i8* %13 to i32*
  %15 = getelementptr inbounds %"class.extensions::PermissionID", %"class.extensions::PermissionID"* %2, i64 0, i32 1, i32 0
  %16 = load i32, i32* %15, align 8
  store i32 %16, i32* %14, align 8
  %17 = getelementptr inbounds i8, i8* %8, i64 48
  %18 = getelementptr inbounds %"class.extensions::PermissionID", %"class.extensions::PermissionID"* %2, i64 0, i32 1, i32 1
  %19 = bitcast %"class.std::__1::basic_string"* %18 to %"struct.std::__1::basic_string<char16_t, std::__1::char_traits<char16_t>, std::__1::allocator<char16_t> >::__short"*
  %20 = getelementptr inbounds %"struct.std::__1::basic_string<char16_t, std::__1::char_traits<char16_t>, std::__1::allocator<char16_t> >::__short", %"struct.std::__1::basic_string<char16_t, std::__1::char_traits<char16_t>, std::__1::allocator<char16_t> >::__short"* %19, i64 0, i32 1, i32 1
  %21 = load i8, i8* %20, align 1
  %22 = icmp slt i8 %21, 0
  br i1 %22, label %25, label %23

23:                                               ; preds = %3
  %24 = bitcast %"class.std::__1::basic_string"* %18 to i8*
  tail call void @llvm.memcpy.p0i8.p0i8.i64(i8* align 8 %17, i8* align 8 %24, i64 24, i1 false) #14
  br label %204

25:                                               ; preds = %3
  %26 = getelementptr inbounds %"class.std::__1::basic_string", %"class.std::__1::basic_string"* %18, i64 0, i32 0, i32 0, i32 0, i32 0, i32 0, i32 0
  %27 = load i16*, i16** %26, align 8
  %28 = bitcast i16* %27 to i8*
  %29 = getelementptr inbounds %"class.extensions::PermissionID", %"class.extensions::PermissionID"* %2, i64 0, i32 1, i32 1, i32 0, i32 0, i32 0, i32 0, i32 0, i32 1
  %30 = load i64, i64* %29, align 8
  %31 = icmp ult i64 %30, 11
  br i1 %31, label %32, label %35

32:                                               ; preds = %25
  %33 = trunc i64 %30 to i8
  %34 = getelementptr inbounds i8, i8* %8, i64 71
  store i8 %33, i8* %34, align 1
  br label %53

35:                                               ; preds = %25
  %36 = icmp ugt i64 %30, 9223372036854775791
  br i1 %36, label %37, label %39

37:                                               ; preds = %35
  %38 = bitcast i8* %17 to %"class.std::__1::__basic_string_common"*
  tail call void @_ZNKSt3__121__basic_string_commonILb1EE20__throw_length_errorEv(%"class.std::__1::__basic_string_common"* %38) #15
  unreachable

39:                                               ; preds = %35
  %40 = add nuw nsw i64 %30, 8
  %41 = and i64 %40, -8
  %42 = icmp slt i64 %41, 0
  br i1 %42, label %43, label %44

43:                                               ; preds = %39
  tail call void @abort() #15
  unreachable

44:                                               ; preds = %39
  %45 = shl i64 %41, 1
  %46 = tail call i8* @_Znwm(i64 %45) #13
  %47 = bitcast i8* %17 to i8**
  store i8* %46, i8** %47, align 8
  %48 = or i64 %41, -9223372036854775808
  %49 = getelementptr inbounds i8, i8* %8, i64 64
  %50 = bitcast i8* %49 to i64*
  store i64 %48, i64* %50, align 8
  %51 = getelementptr inbounds i8, i8* %8, i64 56
  %52 = bitcast i8* %51 to i64*
  store i64 %30, i64* %52, align 8
  br label %53

53:                                               ; preds = %44, %32
  %54 = phi i8* [ %17, %32 ], [ %46, %44 ]
  %55 = bitcast i8* %54 to i16*
  %56 = add nuw nsw i64 %30, 1
  %57 = add i64 %30, 1
  %58 = icmp ult i64 %57, 16
  br i1 %58, label %151, label %59

59:                                               ; preds = %53
  %60 = shl i64 %30, 1
  %61 = add i64 %60, 2
  %62 = getelementptr i8, i8* %54, i64 %61
  %63 = add i64 %30, 1
  %64 = getelementptr i16, i16* %27, i64 %63
  %65 = bitcast i16* %64 to i8*
  %66 = icmp ult i8* %54, %65
  %67 = icmp ugt i8* %62, %28
  %68 = and i1 %66, %67
  br i1 %68, label %151, label %69

69:                                               ; preds = %59
  %70 = and i64 %57, -16
  %71 = sub i64 %56, %70
  %72 = getelementptr i16, i16* %27, i64 %70
  %73 = getelementptr i16, i16* %55, i64 %70
  %74 = add i64 %70, -16
  %75 = lshr exact i64 %74, 4
  %76 = add nuw nsw i64 %75, 1
  %77 = and i64 %76, 3
  %78 = icmp ult i64 %74, 48
  br i1 %78, label %130, label %79

79:                                               ; preds = %69
  %80 = sub nsw i64 %76, %77
  br label %81

81:                                               ; preds = %81, %79
  %82 = phi i64 [ 0, %79 ], [ %127, %81 ]
  %83 = phi i64 [ %80, %79 ], [ %128, %81 ]
  %84 = getelementptr i16, i16* %27, i64 %82
  %85 = getelementptr i16, i16* %55, i64 %82
  %86 = bitcast i16* %84 to <8 x i16>*
  %87 = load <8 x i16>, <8 x i16>* %86, align 2, !alias.scope !97
  %88 = getelementptr i16, i16* %84, i64 8
  %89 = bitcast i16* %88 to <8 x i16>*
  %90 = load <8 x i16>, <8 x i16>* %89, align 2, !alias.scope !97
  %91 = bitcast i16* %85 to <8 x i16>*
  store <8 x i16> %87, <8 x i16>* %91, align 2, !alias.scope !100, !noalias !97
  %92 = getelementptr i16, i16* %85, i64 8
  %93 = bitcast i16* %92 to <8 x i16>*
  store <8 x i16> %90, <8 x i16>* %93, align 2, !alias.scope !100, !noalias !97
  %94 = or i64 %82, 16
  %95 = getelementptr i16, i16* %27, i64 %94
  %96 = getelementptr i16, i16* %55, i64 %94
  %97 = bitcast i16* %95 to <8 x i16>*
  %98 = load <8 x i16>, <8 x i16>* %97, align 2, !alias.scope !97
  %99 = getelementptr i16, i16* %95, i64 8
  %100 = bitcast i16* %99 to <8 x i16>*
  %101 = load <8 x i16>, <8 x i16>* %100, align 2, !alias.scope !97
  %102 = bitcast i16* %96 to <8 x i16>*
  store <8 x i16> %98, <8 x i16>* %102, align 2, !alias.scope !100, !noalias !97
  %103 = getelementptr i16, i16* %96, i64 8
  %104 = bitcast i16* %103 to <8 x i16>*
  store <8 x i16> %101, <8 x i16>* %104, align 2, !alias.scope !100, !noalias !97
  %105 = or i64 %82, 32
  %106 = getelementptr i16, i16* %27, i64 %105
  %107 = getelementptr i16, i16* %55, i64 %105
  %108 = bitcast i16* %106 to <8 x i16>*
  %109 = load <8 x i16>, <8 x i16>* %108, align 2, !alias.scope !97
  %110 = getelementptr i16, i16* %106, i64 8
  %111 = bitcast i16* %110 to <8 x i16>*
  %112 = load <8 x i16>, <8 x i16>* %111, align 2, !alias.scope !97
  %113 = bitcast i16* %107 to <8 x i16>*
  store <8 x i16> %109, <8 x i16>* %113, align 2, !alias.scope !100, !noalias !97
  %114 = getelementptr i16, i16* %107, i64 8
  %115 = bitcast i16* %114 to <8 x i16>*
  store <8 x i16> %112, <8 x i16>* %115, align 2, !alias.scope !100, !noalias !97
  %116 = or i64 %82, 48
  %117 = getelementptr i16, i16* %27, i64 %116
  %118 = getelementptr i16, i16* %55, i64 %116
  %119 = bitcast i16* %117 to <8 x i16>*
  %120 = load <8 x i16>, <8 x i16>* %119, align 2, !alias.scope !97
  %121 = getelementptr i16, i16* %117, i64 8
  %122 = bitcast i16* %121 to <8 x i16>*
  %123 = load <8 x i16>, <8 x i16>* %122, align 2, !alias.scope !97
  %124 = bitcast i16* %118 to <8 x i16>*
  store <8 x i16> %120, <8 x i16>* %124, align 2, !alias.scope !100, !noalias !97
  %125 = getelementptr i16, i16* %118, i64 8
  %126 = bitcast i16* %125 to <8 x i16>*
  store <8 x i16> %123, <8 x i16>* %126, align 2, !alias.scope !100, !noalias !97
  %127 = add i64 %82, 64
  %128 = add i64 %83, -4
  %129 = icmp eq i64 %128, 0
  br i1 %129, label %130, label %81, !llvm.loop !102

130:                                              ; preds = %81, %69
  %131 = phi i64 [ 0, %69 ], [ %127, %81 ]
  %132 = icmp eq i64 %77, 0
  br i1 %132, label %149, label %133

133:                                              ; preds = %130, %133
  %134 = phi i64 [ %146, %133 ], [ %131, %130 ]
  %135 = phi i64 [ %147, %133 ], [ %77, %130 ]
  %136 = getelementptr i16, i16* %27, i64 %134
  %137 = getelementptr i16, i16* %55, i64 %134
  %138 = bitcast i16* %136 to <8 x i16>*
  %139 = load <8 x i16>, <8 x i16>* %138, align 2, !alias.scope !97
  %140 = getelementptr i16, i16* %136, i64 8
  %141 = bitcast i16* %140 to <8 x i16>*
  %142 = load <8 x i16>, <8 x i16>* %141, align 2, !alias.scope !97
  %143 = bitcast i16* %137 to <8 x i16>*
  store <8 x i16> %139, <8 x i16>* %143, align 2, !alias.scope !100, !noalias !97
  %144 = getelementptr i16, i16* %137, i64 8
  %145 = bitcast i16* %144 to <8 x i16>*
  store <8 x i16> %142, <8 x i16>* %145, align 2, !alias.scope !100, !noalias !97
  %146 = add i64 %134, 16
  %147 = add i64 %135, -1
  %148 = icmp eq i64 %147, 0
  br i1 %148, label %149, label %133, !llvm.loop !103

149:                                              ; preds = %133, %130
  %150 = icmp eq i64 %57, %70
  br i1 %150, label %204, label %151

151:                                              ; preds = %149, %59, %53
  %152 = phi i64 [ %56, %59 ], [ %56, %53 ], [ %71, %149 ]
  %153 = phi i16* [ %27, %59 ], [ %27, %53 ], [ %72, %149 ]
  %154 = phi i16* [ %55, %59 ], [ %55, %53 ], [ %73, %149 ]
  %155 = add i64 %152, -1
  %156 = and i64 %152, 7
  %157 = icmp eq i64 %156, 0
  br i1 %157, label %169, label %158

158:                                              ; preds = %151, %158
  %159 = phi i64 [ %164, %158 ], [ %152, %151 ]
  %160 = phi i16* [ %166, %158 ], [ %153, %151 ]
  %161 = phi i16* [ %165, %158 ], [ %154, %151 ]
  %162 = phi i64 [ %167, %158 ], [ %156, %151 ]
  %163 = load i16, i16* %160, align 2
  store i16 %163, i16* %161, align 2
  %164 = add i64 %159, -1
  %165 = getelementptr inbounds i16, i16* %161, i64 1
  %166 = getelementptr inbounds i16, i16* %160, i64 1
  %167 = add i64 %162, -1
  %168 = icmp eq i64 %167, 0
  br i1 %168, label %169, label %158, !llvm.loop !104

169:                                              ; preds = %158, %151
  %170 = phi i64 [ %152, %151 ], [ %164, %158 ]
  %171 = phi i16* [ %153, %151 ], [ %166, %158 ]
  %172 = phi i16* [ %154, %151 ], [ %165, %158 ]
  %173 = icmp ult i64 %155, 7
  br i1 %173, label %204, label %174

174:                                              ; preds = %169, %174
  %175 = phi i64 [ %200, %174 ], [ %170, %169 ]
  %176 = phi i16* [ %202, %174 ], [ %171, %169 ]
  %177 = phi i16* [ %201, %174 ], [ %172, %169 ]
  %178 = load i16, i16* %176, align 2
  store i16 %178, i16* %177, align 2
  %179 = getelementptr inbounds i16, i16* %177, i64 1
  %180 = getelementptr inbounds i16, i16* %176, i64 1
  %181 = load i16, i16* %180, align 2
  store i16 %181, i16* %179, align 2
  %182 = getelementptr inbounds i16, i16* %177, i64 2
  %183 = getelementptr inbounds i16, i16* %176, i64 2
  %184 = load i16, i16* %183, align 2
  store i16 %184, i16* %182, align 2
  %185 = getelementptr inbounds i16, i16* %177, i64 3
  %186 = getelementptr inbounds i16, i16* %176, i64 3
  %187 = load i16, i16* %186, align 2
  store i16 %187, i16* %185, align 2
  %188 = getelementptr inbounds i16, i16* %177, i64 4
  %189 = getelementptr inbounds i16, i16* %176, i64 4
  %190 = load i16, i16* %189, align 2
  store i16 %190, i16* %188, align 2
  %191 = getelementptr inbounds i16, i16* %177, i64 5
  %192 = getelementptr inbounds i16, i16* %176, i64 5
  %193 = load i16, i16* %192, align 2
  store i16 %193, i16* %191, align 2
  %194 = getelementptr inbounds i16, i16* %177, i64 6
  %195 = getelementptr inbounds i16, i16* %176, i64 6
  %196 = load i16, i16* %195, align 2
  store i16 %196, i16* %194, align 2
  %197 = getelementptr inbounds i16, i16* %177, i64 7
  %198 = getelementptr inbounds i16, i16* %176, i64 7
  %199 = load i16, i16* %198, align 2
  store i16 %199, i16* %197, align 2
  %200 = add i64 %175, -8
  %201 = getelementptr inbounds i16, i16* %177, i64 8
  %202 = getelementptr inbounds i16, i16* %176, i64 8
  %203 = icmp eq i64 %200, 0
  br i1 %203, label %204, label %174, !llvm.loop !105

204:                                              ; preds = %169, %174, %149, %23
  %205 = bitcast i8* %12 to i32 (...)***
  store i32 (...)** bitcast (i8** getelementptr inbounds ({ [4 x i8*] }, { [4 x i8*] }* @_ZTVN10extensions12PermissionIDE, i64 0, inrange i32 0, i64 2) to i32 (...)**), i32 (...)*** %205, align 8
  store i8 1, i8* %6, align 8
  ret void
}

; Function Attrs: nounwind ssp uwtable
define linkonce_odr hidden void @_ZNSt3__16__treeINS_12basic_stringIcNS_11char_traitsIcEENS_9allocatorIcEEEENS_4lessIS6_EENS4_IS6_EEE7destroyEPNS_11__tree_nodeIS6_PvEE(%"class.std::__1::__tree.83"*, %"class.std::__1::__tree_node.142"*) local_unnamed_addr #2 comdat align 2 {
  %3 = icmp eq %"class.std::__1::__tree_node.142"* %1, null
  br i1 %3, label %20, label %4

4:                                                ; preds = %2
  %5 = bitcast %"class.std::__1::__tree_node.142"* %1 to %"class.std::__1::__tree_node.142"**
  %6 = load %"class.std::__1::__tree_node.142"*, %"class.std::__1::__tree_node.142"** %5, align 8
  tail call void @_ZNSt3__16__treeINS_12basic_stringIcNS_11char_traitsIcEENS_9allocatorIcEEEENS_4lessIS6_EENS4_IS6_EEE7destroyEPNS_11__tree_nodeIS6_PvEE(%"class.std::__1::__tree.83"* %0, %"class.std::__1::__tree_node.142"* %6) #14
  %7 = getelementptr inbounds %"class.std::__1::__tree_node.142", %"class.std::__1::__tree_node.142"* %1, i64 0, i32 0, i32 1
  %8 = bitcast %"class.std::__1::__tree_node_base"** %7 to %"class.std::__1::__tree_node.142"**
  %9 = load %"class.std::__1::__tree_node.142"*, %"class.std::__1::__tree_node.142"** %8, align 8
  tail call void @_ZNSt3__16__treeINS_12basic_stringIcNS_11char_traitsIcEENS_9allocatorIcEEEENS_4lessIS6_EENS4_IS6_EEE7destroyEPNS_11__tree_nodeIS6_PvEE(%"class.std::__1::__tree.83"* %0, %"class.std::__1::__tree_node.142"* %9) #14
  %10 = getelementptr inbounds %"class.std::__1::__tree_node.142", %"class.std::__1::__tree_node.142"* %1, i64 0, i32 1
  %11 = bitcast %"class.std::__1::basic_string.91"* %10 to %"struct.std::__1::basic_string<char, std::__1::char_traits<char>, std::__1::allocator<char> >::__short"*
  %12 = getelementptr inbounds %"struct.std::__1::basic_string<char, std::__1::char_traits<char>, std::__1::allocator<char> >::__short", %"struct.std::__1::basic_string<char, std::__1::char_traits<char>, std::__1::allocator<char> >::__short"* %11, i64 0, i32 1, i32 0
  %13 = load i8, i8* %12, align 1
  %14 = icmp slt i8 %13, 0
  br i1 %14, label %15, label %18

15:                                               ; preds = %4
  %16 = getelementptr inbounds %"class.std::__1::basic_string.91", %"class.std::__1::basic_string.91"* %10, i64 0, i32 0, i32 0, i32 0, i32 0, i32 0, i32 0
  %17 = load i8*, i8** %16, align 8
  tail call void @_ZdlPv(i8* %17) #13
  br label %18

18:                                               ; preds = %4, %15
  %19 = bitcast %"class.std::__1::__tree_node.142"* %1 to i8*
  tail call void @_ZdlPv(i8* %19) #13
  br label %20

20:                                               ; preds = %2, %18
  ret void
}

; Function Attrs: noreturn
declare void @_ZNKSt3__120__vector_base_commonILb1EE20__throw_length_errorEv(%"class.std::__1::__vector_base_common"*) local_unnamed_addr #8

; Function Attrs: nounwind ssp uwtable
define internal fastcc void @_ZNSt3__16__sortIRNS_6__lessIN10extensions12_GLOBAL__N_120ComparablePermissionES4_EEPS4_EEvT0_S8_T_(%"class.extensions::(anonymous namespace)::ComparablePermission"*, %"class.extensions::(anonymous namespace)::ComparablePermission"*) unnamed_addr #2 {
  %3 = alloca %"struct.std::__1::__tuple_less", align 1
  %4 = alloca %"class.std::__1::tuple", align 8
  %5 = alloca %"class.std::__1::tuple", align 8
  %6 = alloca %"struct.std::__1::__tuple_less", align 1
  %7 = alloca %"class.std::__1::tuple", align 8
  %8 = alloca %"class.std::__1::tuple", align 8
  %9 = alloca %"struct.std::__1::__tuple_less", align 1
  %10 = alloca %"class.std::__1::tuple", align 8
  %11 = alloca %"class.std::__1::tuple", align 8
  %12 = alloca %"struct.std::__1::__tuple_less", align 1
  %13 = alloca %"class.std::__1::tuple", align 8
  %14 = alloca %"class.std::__1::tuple", align 8
  %15 = alloca %"struct.std::__1::__tuple_less", align 1
  %16 = alloca %"class.std::__1::tuple", align 8
  %17 = alloca %"class.std::__1::tuple", align 8
  %18 = alloca %"struct.std::__1::__tuple_less", align 1
  %19 = alloca %"class.std::__1::tuple", align 8
  %20 = alloca %"class.std::__1::tuple", align 8
  %21 = alloca %"struct.std::__1::__tuple_less", align 1
  %22 = alloca %"class.std::__1::tuple", align 8
  %23 = alloca %"class.std::__1::tuple", align 8
  %24 = alloca %"struct.std::__1::__tuple_less", align 1
  %25 = alloca %"class.std::__1::tuple", align 8
  %26 = alloca %"class.std::__1::tuple", align 8
  %27 = alloca %"struct.std::__1::__tuple_less", align 1
  %28 = alloca %"class.std::__1::tuple", align 8
  %29 = alloca %"class.std::__1::tuple", align 8
  %30 = alloca %"struct.std::__1::__tuple_less", align 1
  %31 = alloca %"class.std::__1::tuple", align 8
  %32 = alloca %"class.std::__1::tuple", align 8
  %33 = alloca %"struct.std::__1::__tuple_less", align 1
  %34 = alloca %"class.std::__1::tuple", align 8
  %35 = alloca %"class.std::__1::tuple", align 8
  %36 = alloca %"struct.std::__1::__tuple_less", align 1
  %37 = alloca %"class.std::__1::tuple", align 8
  %38 = alloca %"class.std::__1::tuple", align 8
  %39 = bitcast %"class.std::__1::tuple"* %28 to i8*
  %40 = getelementptr inbounds %"class.std::__1::tuple", %"class.std::__1::tuple"* %28, i64 0, i32 0, i32 0, i32 0
  %41 = getelementptr inbounds %"class.std::__1::tuple", %"class.std::__1::tuple"* %28, i64 0, i32 0, i32 1, i32 0
  %42 = bitcast %"class.std::__1::tuple"* %29 to i8*
  %43 = getelementptr inbounds %"class.std::__1::tuple", %"class.std::__1::tuple"* %29, i64 0, i32 0, i32 0, i32 0
  %44 = getelementptr inbounds %"class.std::__1::tuple", %"class.std::__1::tuple"* %29, i64 0, i32 0, i32 1, i32 0
  %45 = getelementptr inbounds %"struct.std::__1::__tuple_less", %"struct.std::__1::__tuple_less"* %27, i64 0, i32 0
  %46 = bitcast %"class.std::__1::tuple"* %13 to i8*
  %47 = getelementptr inbounds %"class.std::__1::tuple", %"class.std::__1::tuple"* %13, i64 0, i32 0, i32 0, i32 0
  %48 = getelementptr inbounds %"class.std::__1::tuple", %"class.std::__1::tuple"* %13, i64 0, i32 0, i32 1, i32 0
  %49 = bitcast %"class.std::__1::tuple"* %14 to i8*
  %50 = getelementptr inbounds %"class.std::__1::tuple", %"class.std::__1::tuple"* %14, i64 0, i32 0, i32 0, i32 0
  %51 = getelementptr inbounds %"class.std::__1::tuple", %"class.std::__1::tuple"* %14, i64 0, i32 0, i32 1, i32 0
  %52 = getelementptr inbounds %"struct.std::__1::__tuple_less", %"struct.std::__1::__tuple_less"* %12, i64 0, i32 0
  %53 = bitcast %"class.std::__1::tuple"* %25 to i8*
  %54 = getelementptr inbounds %"class.std::__1::tuple", %"class.std::__1::tuple"* %25, i64 0, i32 0, i32 0, i32 0
  %55 = getelementptr inbounds %"class.std::__1::tuple", %"class.std::__1::tuple"* %25, i64 0, i32 0, i32 1, i32 0
  %56 = bitcast %"class.std::__1::tuple"* %26 to i8*
  %57 = getelementptr inbounds %"class.std::__1::tuple", %"class.std::__1::tuple"* %26, i64 0, i32 0, i32 0, i32 0
  %58 = getelementptr inbounds %"class.std::__1::tuple", %"class.std::__1::tuple"* %26, i64 0, i32 0, i32 1, i32 0
  %59 = getelementptr inbounds %"struct.std::__1::__tuple_less", %"struct.std::__1::__tuple_less"* %24, i64 0, i32 0
  %60 = bitcast %"class.std::__1::tuple"* %22 to i8*
  %61 = getelementptr inbounds %"class.std::__1::tuple", %"class.std::__1::tuple"* %22, i64 0, i32 0, i32 0, i32 0
  %62 = getelementptr inbounds %"class.std::__1::tuple", %"class.std::__1::tuple"* %22, i64 0, i32 0, i32 1, i32 0
  %63 = bitcast %"class.std::__1::tuple"* %23 to i8*
  %64 = getelementptr inbounds %"class.std::__1::tuple", %"class.std::__1::tuple"* %23, i64 0, i32 0, i32 0, i32 0
  %65 = getelementptr inbounds %"class.std::__1::tuple", %"class.std::__1::tuple"* %23, i64 0, i32 0, i32 1, i32 0
  %66 = getelementptr inbounds %"struct.std::__1::__tuple_less", %"struct.std::__1::__tuple_less"* %21, i64 0, i32 0
  %67 = bitcast %"class.std::__1::tuple"* %19 to i8*
  %68 = getelementptr inbounds %"class.std::__1::tuple", %"class.std::__1::tuple"* %19, i64 0, i32 0, i32 0, i32 0
  %69 = getelementptr inbounds %"class.std::__1::tuple", %"class.std::__1::tuple"* %19, i64 0, i32 0, i32 1, i32 0
  %70 = bitcast %"class.std::__1::tuple"* %20 to i8*
  %71 = getelementptr inbounds %"class.std::__1::tuple", %"class.std::__1::tuple"* %20, i64 0, i32 0, i32 0, i32 0
  %72 = getelementptr inbounds %"class.std::__1::tuple", %"class.std::__1::tuple"* %20, i64 0, i32 0, i32 1, i32 0
  %73 = getelementptr inbounds %"struct.std::__1::__tuple_less", %"struct.std::__1::__tuple_less"* %18, i64 0, i32 0
  %74 = bitcast %"class.std::__1::tuple"* %16 to i8*
  %75 = getelementptr inbounds %"class.std::__1::tuple", %"class.std::__1::tuple"* %16, i64 0, i32 0, i32 0, i32 0
  %76 = getelementptr inbounds %"class.std::__1::tuple", %"class.std::__1::tuple"* %16, i64 0, i32 0, i32 1, i32 0
  %77 = bitcast %"class.std::__1::tuple"* %17 to i8*
  %78 = getelementptr inbounds %"class.std::__1::tuple", %"class.std::__1::tuple"* %17, i64 0, i32 0, i32 0, i32 0
  %79 = getelementptr inbounds %"class.std::__1::tuple", %"class.std::__1::tuple"* %17, i64 0, i32 0, i32 1, i32 0
  %80 = getelementptr inbounds %"struct.std::__1::__tuple_less", %"struct.std::__1::__tuple_less"* %15, i64 0, i32 0
  %81 = bitcast %"class.std::__1::tuple"* %10 to i8*
  %82 = getelementptr inbounds %"class.std::__1::tuple", %"class.std::__1::tuple"* %10, i64 0, i32 0, i32 0, i32 0
  %83 = getelementptr inbounds %"class.std::__1::tuple", %"class.std::__1::tuple"* %10, i64 0, i32 0, i32 1, i32 0
  %84 = bitcast %"class.std::__1::tuple"* %11 to i8*
  %85 = getelementptr inbounds %"class.std::__1::tuple", %"class.std::__1::tuple"* %11, i64 0, i32 0, i32 0, i32 0
  %86 = getelementptr inbounds %"class.std::__1::tuple", %"class.std::__1::tuple"* %11, i64 0, i32 0, i32 1, i32 0
  %87 = getelementptr inbounds %"struct.std::__1::__tuple_less", %"struct.std::__1::__tuple_less"* %9, i64 0, i32 0
  %88 = bitcast %"class.std::__1::tuple"* %7 to i8*
  %89 = getelementptr inbounds %"class.std::__1::tuple", %"class.std::__1::tuple"* %7, i64 0, i32 0, i32 0, i32 0
  %90 = getelementptr inbounds %"class.std::__1::tuple", %"class.std::__1::tuple"* %7, i64 0, i32 0, i32 1, i32 0
  %91 = bitcast %"class.std::__1::tuple"* %8 to i8*
  %92 = getelementptr inbounds %"class.std::__1::tuple", %"class.std::__1::tuple"* %8, i64 0, i32 0, i32 0, i32 0
  %93 = getelementptr inbounds %"class.std::__1::tuple", %"class.std::__1::tuple"* %8, i64 0, i32 0, i32 1, i32 0
  %94 = getelementptr inbounds %"struct.std::__1::__tuple_less", %"struct.std::__1::__tuple_less"* %6, i64 0, i32 0
  %95 = bitcast %"class.std::__1::tuple"* %4 to i8*
  %96 = getelementptr inbounds %"class.std::__1::tuple", %"class.std::__1::tuple"* %4, i64 0, i32 0, i32 0, i32 0
  %97 = getelementptr inbounds %"class.std::__1::tuple", %"class.std::__1::tuple"* %4, i64 0, i32 0, i32 1, i32 0
  %98 = bitcast %"class.std::__1::tuple"* %5 to i8*
  %99 = getelementptr inbounds %"class.std::__1::tuple", %"class.std::__1::tuple"* %5, i64 0, i32 0, i32 0, i32 0
  %100 = getelementptr inbounds %"class.std::__1::tuple", %"class.std::__1::tuple"* %5, i64 0, i32 0, i32 1, i32 0
  %101 = getelementptr inbounds %"struct.std::__1::__tuple_less", %"struct.std::__1::__tuple_less"* %3, i64 0, i32 0
  br label %102

102:                                              ; preds = %394, %2
  %103 = phi %"class.extensions::(anonymous namespace)::ComparablePermission"* [ %1, %2 ], [ %368, %394 ]
  %104 = phi %"class.extensions::(anonymous namespace)::ComparablePermission"* [ %0, %2 ], [ %113, %394 ]
  %105 = ptrtoint %"class.extensions::(anonymous namespace)::ComparablePermission"* %103 to i64
  %106 = getelementptr inbounds %"class.extensions::(anonymous namespace)::ComparablePermission", %"class.extensions::(anonymous namespace)::ComparablePermission"* %103, i64 -1
  %107 = getelementptr inbounds %"class.extensions::(anonymous namespace)::ComparablePermission", %"class.extensions::(anonymous namespace)::ComparablePermission"* %106, i64 0, i32 0
  %108 = bitcast %"class.extensions::(anonymous namespace)::ComparablePermission"* %106 to i64*
  %109 = ptrtoint %"class.extensions::(anonymous namespace)::ComparablePermission"* %103 to i64
  br label %110

110:                                              ; preds = %403, %102
  %111 = phi %"class.extensions::(anonymous namespace)::ComparablePermission"* [ %104, %102 ], [ %404, %403 ]
  br label %112

112:                                              ; preds = %299, %110
  %113 = phi %"class.extensions::(anonymous namespace)::ComparablePermission"* [ %111, %110 ], [ %278, %299 ]
  %114 = ptrtoint %"class.extensions::(anonymous namespace)::ComparablePermission"* %113 to i64
  %115 = sub i64 %105, %114
  %116 = ashr exact i64 %115, 3
  switch i64 %116, label %155 [
    i64 0, label %407
    i64 1, label %407
    i64 2, label %117
    i64 3, label %140
    i64 4, label %144
    i64 5, label %149
  ]

117:                                              ; preds = %112
  %118 = getelementptr inbounds %"class.extensions::(anonymous namespace)::ComparablePermission", %"class.extensions::(anonymous namespace)::ComparablePermission"* %103, i64 -1
  %119 = bitcast %"class.std::__1::tuple"* %37 to i8*
  call void @llvm.lifetime.start.p0i8(i64 16, i8* nonnull %119) #14
  %120 = getelementptr inbounds %"class.extensions::(anonymous namespace)::ComparablePermission", %"class.extensions::(anonymous namespace)::ComparablePermission"* %118, i64 0, i32 0
  %121 = load %"class.extensions::PermissionMessage"*, %"class.extensions::PermissionMessage"** %120, align 8
  %122 = getelementptr inbounds %"class.extensions::PermissionMessage", %"class.extensions::PermissionMessage"* %121, i64 0, i32 1
  %123 = getelementptr inbounds %"class.extensions::PermissionMessage", %"class.extensions::PermissionMessage"* %121, i64 0, i32 3
  %124 = getelementptr inbounds %"class.std::__1::tuple", %"class.std::__1::tuple"* %37, i64 0, i32 0, i32 0, i32 0
  store %"class.std::__1::basic_string"* %122, %"class.std::__1::basic_string"** %124, align 8
  %125 = getelementptr inbounds %"class.std::__1::tuple", %"class.std::__1::tuple"* %37, i64 0, i32 0, i32 1, i32 0
  store %"class.std::__1::vector.9"* %123, %"class.std::__1::vector.9"** %125, align 8
  %126 = bitcast %"class.std::__1::tuple"* %38 to i8*
  call void @llvm.lifetime.start.p0i8(i64 16, i8* nonnull %126) #14
  %127 = getelementptr inbounds %"class.extensions::(anonymous namespace)::ComparablePermission", %"class.extensions::(anonymous namespace)::ComparablePermission"* %113, i64 0, i32 0
  %128 = load %"class.extensions::PermissionMessage"*, %"class.extensions::PermissionMessage"** %127, align 8
  %129 = getelementptr inbounds %"class.extensions::PermissionMessage", %"class.extensions::PermissionMessage"* %128, i64 0, i32 1
  %130 = getelementptr inbounds %"class.extensions::PermissionMessage", %"class.extensions::PermissionMessage"* %128, i64 0, i32 3
  %131 = getelementptr inbounds %"class.std::__1::tuple", %"class.std::__1::tuple"* %38, i64 0, i32 0, i32 0, i32 0
  store %"class.std::__1::basic_string"* %129, %"class.std::__1::basic_string"** %131, align 8
  %132 = getelementptr inbounds %"class.std::__1::tuple", %"class.std::__1::tuple"* %38, i64 0, i32 0, i32 1, i32 0
  store %"class.std::__1::vector.9"* %130, %"class.std::__1::vector.9"** %132, align 8
  %133 = getelementptr inbounds %"struct.std::__1::__tuple_less", %"struct.std::__1::__tuple_less"* %36, i64 0, i32 0
  call void @llvm.lifetime.start.p0i8(i64 1, i8* nonnull %133) #14
  %134 = call zeroext i1 @_ZNSt3__112__tuple_lessILm2EEclINS_5tupleIJRKNS_12basic_stringIDsNS_11char_traitsIDsEENS_9allocatorIDsEEEERKNS_6vectorIS9_NS7_IS9_EEEEEEESH_EEbRKT_RKT0_(%"struct.std::__1::__tuple_less"* nonnull %36, %"class.std::__1::tuple"* nonnull dereferenceable(16) %37, %"class.std::__1::tuple"* nonnull dereferenceable(16) %38) #14
  call void @llvm.lifetime.end.p0i8(i64 1, i8* nonnull %133) #14
  call void @llvm.lifetime.end.p0i8(i64 16, i8* nonnull %126) #14
  call void @llvm.lifetime.end.p0i8(i64 16, i8* nonnull %119) #14
  br i1 %134, label %135, label %407

135:                                              ; preds = %117
  %136 = bitcast %"class.extensions::(anonymous namespace)::ComparablePermission"* %113 to i64*
  %137 = load i64, i64* %136, align 8
  %138 = bitcast %"class.extensions::(anonymous namespace)::ComparablePermission"* %118 to i64*
  %139 = load i64, i64* %138, align 8
  store i64 %139, i64* %136, align 8
  store i64 %137, i64* %138, align 8
  br label %407

140:                                              ; preds = %112
  %141 = getelementptr inbounds %"class.extensions::(anonymous namespace)::ComparablePermission", %"class.extensions::(anonymous namespace)::ComparablePermission"* %113, i64 1
  %142 = getelementptr inbounds %"class.extensions::(anonymous namespace)::ComparablePermission", %"class.extensions::(anonymous namespace)::ComparablePermission"* %103, i64 -1
  %143 = call fastcc i32 @_ZNSt3__17__sort3IRNS_6__lessIN10extensions12_GLOBAL__N_120ComparablePermissionES4_EEPS4_EEjT0_S8_S8_T_(%"class.extensions::(anonymous namespace)::ComparablePermission"* %113, %"class.extensions::(anonymous namespace)::ComparablePermission"* %141, %"class.extensions::(anonymous namespace)::ComparablePermission"* %142)
  br label %407

144:                                              ; preds = %112
  %145 = getelementptr inbounds %"class.extensions::(anonymous namespace)::ComparablePermission", %"class.extensions::(anonymous namespace)::ComparablePermission"* %113, i64 1
  %146 = getelementptr inbounds %"class.extensions::(anonymous namespace)::ComparablePermission", %"class.extensions::(anonymous namespace)::ComparablePermission"* %113, i64 2
  %147 = getelementptr inbounds %"class.extensions::(anonymous namespace)::ComparablePermission", %"class.extensions::(anonymous namespace)::ComparablePermission"* %103, i64 -1
  %148 = call fastcc i32 @_ZNSt3__17__sort4IRNS_6__lessIN10extensions12_GLOBAL__N_120ComparablePermissionES4_EEPS4_EEjT0_S8_S8_S8_T_(%"class.extensions::(anonymous namespace)::ComparablePermission"* %113, %"class.extensions::(anonymous namespace)::ComparablePermission"* %145, %"class.extensions::(anonymous namespace)::ComparablePermission"* %146, %"class.extensions::(anonymous namespace)::ComparablePermission"* %147)
  br label %407

149:                                              ; preds = %112
  %150 = getelementptr inbounds %"class.extensions::(anonymous namespace)::ComparablePermission", %"class.extensions::(anonymous namespace)::ComparablePermission"* %113, i64 1
  %151 = getelementptr inbounds %"class.extensions::(anonymous namespace)::ComparablePermission", %"class.extensions::(anonymous namespace)::ComparablePermission"* %113, i64 2
  %152 = getelementptr inbounds %"class.extensions::(anonymous namespace)::ComparablePermission", %"class.extensions::(anonymous namespace)::ComparablePermission"* %113, i64 3
  %153 = getelementptr inbounds %"class.extensions::(anonymous namespace)::ComparablePermission", %"class.extensions::(anonymous namespace)::ComparablePermission"* %103, i64 -1
  %154 = call fastcc i32 @_ZNSt3__17__sort5IRNS_6__lessIN10extensions12_GLOBAL__N_120ComparablePermissionES4_EEPS4_EEjT0_S8_S8_S8_S8_T_(%"class.extensions::(anonymous namespace)::ComparablePermission"* %113, %"class.extensions::(anonymous namespace)::ComparablePermission"* %150, %"class.extensions::(anonymous namespace)::ComparablePermission"* %151, %"class.extensions::(anonymous namespace)::ComparablePermission"* %152, %"class.extensions::(anonymous namespace)::ComparablePermission"* %153)
  br label %407

155:                                              ; preds = %112
  %156 = icmp slt i64 %115, 248
  br i1 %156, label %157, label %216

157:                                              ; preds = %155
  %158 = getelementptr inbounds %"class.extensions::(anonymous namespace)::ComparablePermission", %"class.extensions::(anonymous namespace)::ComparablePermission"* %113, i64 2
  %159 = getelementptr inbounds %"class.extensions::(anonymous namespace)::ComparablePermission", %"class.extensions::(anonymous namespace)::ComparablePermission"* %113, i64 1
  %160 = call fastcc i32 @_ZNSt3__17__sort3IRNS_6__lessIN10extensions12_GLOBAL__N_120ComparablePermissionES4_EEPS4_EEjT0_S8_S8_T_(%"class.extensions::(anonymous namespace)::ComparablePermission"* %113, %"class.extensions::(anonymous namespace)::ComparablePermission"* %159, %"class.extensions::(anonymous namespace)::ComparablePermission"* %158) #14
  %161 = getelementptr inbounds %"class.extensions::(anonymous namespace)::ComparablePermission", %"class.extensions::(anonymous namespace)::ComparablePermission"* %113, i64 3
  %162 = icmp eq %"class.extensions::(anonymous namespace)::ComparablePermission"* %161, %103
  br i1 %162, label %407, label %163

163:                                              ; preds = %157
  %164 = bitcast %"class.std::__1::tuple"* %34 to i8*
  %165 = getelementptr inbounds %"class.std::__1::tuple", %"class.std::__1::tuple"* %34, i64 0, i32 0, i32 0, i32 0
  %166 = getelementptr inbounds %"class.std::__1::tuple", %"class.std::__1::tuple"* %34, i64 0, i32 0, i32 1, i32 0
  %167 = bitcast %"class.std::__1::tuple"* %35 to i8*
  %168 = getelementptr inbounds %"class.std::__1::tuple", %"class.std::__1::tuple"* %35, i64 0, i32 0, i32 0, i32 0
  %169 = getelementptr inbounds %"class.std::__1::tuple", %"class.std::__1::tuple"* %35, i64 0, i32 0, i32 1, i32 0
  %170 = getelementptr inbounds %"struct.std::__1::__tuple_less", %"struct.std::__1::__tuple_less"* %33, i64 0, i32 0
  %171 = bitcast %"class.std::__1::tuple"* %31 to i8*
  %172 = getelementptr inbounds %"class.std::__1::tuple", %"class.std::__1::tuple"* %31, i64 0, i32 0, i32 0, i32 0
  %173 = getelementptr inbounds %"class.std::__1::tuple", %"class.std::__1::tuple"* %31, i64 0, i32 0, i32 1, i32 0
  %174 = bitcast %"class.std::__1::tuple"* %32 to i8*
  %175 = getelementptr inbounds %"class.std::__1::tuple", %"class.std::__1::tuple"* %32, i64 0, i32 0, i32 0, i32 0
  %176 = getelementptr inbounds %"class.std::__1::tuple", %"class.std::__1::tuple"* %32, i64 0, i32 0, i32 1, i32 0
  %177 = getelementptr inbounds %"struct.std::__1::__tuple_less", %"struct.std::__1::__tuple_less"* %30, i64 0, i32 0
  br label %178

178:                                              ; preds = %213, %163
  %179 = phi %"class.extensions::(anonymous namespace)::ComparablePermission"* [ %161, %163 ], [ %214, %213 ]
  %180 = phi %"class.extensions::(anonymous namespace)::ComparablePermission"* [ %158, %163 ], [ %179, %213 ]
  call void @llvm.lifetime.start.p0i8(i64 16, i8* nonnull %164) #14
  %181 = getelementptr inbounds %"class.extensions::(anonymous namespace)::ComparablePermission", %"class.extensions::(anonymous namespace)::ComparablePermission"* %179, i64 0, i32 0
  %182 = load %"class.extensions::PermissionMessage"*, %"class.extensions::PermissionMessage"** %181, align 8
  %183 = getelementptr inbounds %"class.extensions::PermissionMessage", %"class.extensions::PermissionMessage"* %182, i64 0, i32 1
  %184 = getelementptr inbounds %"class.extensions::PermissionMessage", %"class.extensions::PermissionMessage"* %182, i64 0, i32 3
  store %"class.std::__1::basic_string"* %183, %"class.std::__1::basic_string"** %165, align 8
  store %"class.std::__1::vector.9"* %184, %"class.std::__1::vector.9"** %166, align 8
  call void @llvm.lifetime.start.p0i8(i64 16, i8* nonnull %167) #14
  %185 = getelementptr inbounds %"class.extensions::(anonymous namespace)::ComparablePermission", %"class.extensions::(anonymous namespace)::ComparablePermission"* %180, i64 0, i32 0
  %186 = load %"class.extensions::PermissionMessage"*, %"class.extensions::PermissionMessage"** %185, align 8
  %187 = getelementptr inbounds %"class.extensions::PermissionMessage", %"class.extensions::PermissionMessage"* %186, i64 0, i32 1
  %188 = getelementptr inbounds %"class.extensions::PermissionMessage", %"class.extensions::PermissionMessage"* %186, i64 0, i32 3
  store %"class.std::__1::basic_string"* %187, %"class.std::__1::basic_string"** %168, align 8
  store %"class.std::__1::vector.9"* %188, %"class.std::__1::vector.9"** %169, align 8
  call void @llvm.lifetime.start.p0i8(i64 1, i8* nonnull %170) #14
  %189 = call zeroext i1 @_ZNSt3__112__tuple_lessILm2EEclINS_5tupleIJRKNS_12basic_stringIDsNS_11char_traitsIDsEENS_9allocatorIDsEEEERKNS_6vectorIS9_NS7_IS9_EEEEEEESH_EEbRKT_RKT0_(%"struct.std::__1::__tuple_less"* nonnull %33, %"class.std::__1::tuple"* nonnull dereferenceable(16) %34, %"class.std::__1::tuple"* nonnull dereferenceable(16) %35) #14
  call void @llvm.lifetime.end.p0i8(i64 1, i8* nonnull %170) #14
  call void @llvm.lifetime.end.p0i8(i64 16, i8* nonnull %167) #14
  call void @llvm.lifetime.end.p0i8(i64 16, i8* nonnull %164) #14
  br i1 %189, label %190, label %213

190:                                              ; preds = %178
  %191 = bitcast %"class.extensions::(anonymous namespace)::ComparablePermission"* %179 to i64*
  %192 = load i64, i64* %191, align 8
  %193 = inttoptr i64 %192 to %"class.extensions::PermissionMessage"*
  %194 = getelementptr inbounds %"class.extensions::PermissionMessage", %"class.extensions::PermissionMessage"* %193, i64 0, i32 1
  %195 = getelementptr inbounds %"class.extensions::PermissionMessage", %"class.extensions::PermissionMessage"* %193, i64 0, i32 3
  br label %196

196:                                              ; preds = %203, %190
  %197 = phi %"class.extensions::(anonymous namespace)::ComparablePermission"* [ %179, %190 ], [ %198, %203 ]
  %198 = phi %"class.extensions::(anonymous namespace)::ComparablePermission"* [ %180, %190 ], [ %204, %203 ]
  %199 = bitcast %"class.extensions::(anonymous namespace)::ComparablePermission"* %198 to i64*
  %200 = bitcast %"class.extensions::(anonymous namespace)::ComparablePermission"* %197 to i64*
  %201 = load i64, i64* %199, align 8
  store i64 %201, i64* %200, align 8
  %202 = icmp eq %"class.extensions::(anonymous namespace)::ComparablePermission"* %198, %113
  br i1 %202, label %210, label %203

203:                                              ; preds = %196
  %204 = getelementptr inbounds %"class.extensions::(anonymous namespace)::ComparablePermission", %"class.extensions::(anonymous namespace)::ComparablePermission"* %198, i64 -1
  call void @llvm.lifetime.start.p0i8(i64 16, i8* nonnull %171) #14
  store %"class.std::__1::basic_string"* %194, %"class.std::__1::basic_string"** %172, align 8
  store %"class.std::__1::vector.9"* %195, %"class.std::__1::vector.9"** %173, align 8
  call void @llvm.lifetime.start.p0i8(i64 16, i8* nonnull %174) #14
  %205 = getelementptr inbounds %"class.extensions::(anonymous namespace)::ComparablePermission", %"class.extensions::(anonymous namespace)::ComparablePermission"* %204, i64 0, i32 0
  %206 = load %"class.extensions::PermissionMessage"*, %"class.extensions::PermissionMessage"** %205, align 8
  %207 = getelementptr inbounds %"class.extensions::PermissionMessage", %"class.extensions::PermissionMessage"* %206, i64 0, i32 1
  %208 = getelementptr inbounds %"class.extensions::PermissionMessage", %"class.extensions::PermissionMessage"* %206, i64 0, i32 3
  store %"class.std::__1::basic_string"* %207, %"class.std::__1::basic_string"** %175, align 8
  store %"class.std::__1::vector.9"* %208, %"class.std::__1::vector.9"** %176, align 8
  call void @llvm.lifetime.start.p0i8(i64 1, i8* nonnull %177) #14
  %209 = call zeroext i1 @_ZNSt3__112__tuple_lessILm2EEclINS_5tupleIJRKNS_12basic_stringIDsNS_11char_traitsIDsEENS_9allocatorIDsEEEERKNS_6vectorIS9_NS7_IS9_EEEEEEESH_EEbRKT_RKT0_(%"struct.std::__1::__tuple_less"* nonnull %30, %"class.std::__1::tuple"* nonnull dereferenceable(16) %31, %"class.std::__1::tuple"* nonnull dereferenceable(16) %32) #14
  call void @llvm.lifetime.end.p0i8(i64 1, i8* nonnull %177) #14
  call void @llvm.lifetime.end.p0i8(i64 16, i8* nonnull %174) #14
  call void @llvm.lifetime.end.p0i8(i64 16, i8* nonnull %171) #14
  br i1 %209, label %196, label %210

210:                                              ; preds = %196, %203
  %211 = phi %"class.extensions::(anonymous namespace)::ComparablePermission"* [ %198, %203 ], [ %113, %196 ]
  %212 = bitcast %"class.extensions::(anonymous namespace)::ComparablePermission"* %211 to i64*
  store i64 %192, i64* %212, align 8
  br label %213

213:                                              ; preds = %210, %178
  %214 = getelementptr inbounds %"class.extensions::(anonymous namespace)::ComparablePermission", %"class.extensions::(anonymous namespace)::ComparablePermission"* %179, i64 1
  %215 = icmp eq %"class.extensions::(anonymous namespace)::ComparablePermission"* %214, %103
  br i1 %215, label %407, label %178

216:                                              ; preds = %155
  %217 = icmp sgt i64 %115, 7992
  %218 = sdiv i64 %116, 2
  %219 = getelementptr inbounds %"class.extensions::(anonymous namespace)::ComparablePermission", %"class.extensions::(anonymous namespace)::ComparablePermission"* %113, i64 %218
  br i1 %217, label %220, label %225

220:                                              ; preds = %216
  %221 = sdiv i64 %116, 4
  %222 = getelementptr inbounds %"class.extensions::(anonymous namespace)::ComparablePermission", %"class.extensions::(anonymous namespace)::ComparablePermission"* %113, i64 %221
  %223 = getelementptr inbounds %"class.extensions::(anonymous namespace)::ComparablePermission", %"class.extensions::(anonymous namespace)::ComparablePermission"* %219, i64 %221
  %224 = call fastcc i32 @_ZNSt3__17__sort5IRNS_6__lessIN10extensions12_GLOBAL__N_120ComparablePermissionES4_EEPS4_EEjT0_S8_S8_S8_S8_T_(%"class.extensions::(anonymous namespace)::ComparablePermission"* %113, %"class.extensions::(anonymous namespace)::ComparablePermission"* %222, %"class.extensions::(anonymous namespace)::ComparablePermission"* %219, %"class.extensions::(anonymous namespace)::ComparablePermission"* %223, %"class.extensions::(anonymous namespace)::ComparablePermission"* %106)
  br label %227

225:                                              ; preds = %216
  %226 = call fastcc i32 @_ZNSt3__17__sort3IRNS_6__lessIN10extensions12_GLOBAL__N_120ComparablePermissionES4_EEPS4_EEjT0_S8_S8_T_(%"class.extensions::(anonymous namespace)::ComparablePermission"* %113, %"class.extensions::(anonymous namespace)::ComparablePermission"* %219, %"class.extensions::(anonymous namespace)::ComparablePermission"* %106)
  br label %227

227:                                              ; preds = %225, %220
  %228 = phi i32 [ %224, %220 ], [ %226, %225 ]
  call void @llvm.lifetime.start.p0i8(i64 16, i8* nonnull %39) #14
  %229 = getelementptr inbounds %"class.extensions::(anonymous namespace)::ComparablePermission", %"class.extensions::(anonymous namespace)::ComparablePermission"* %113, i64 0, i32 0
  %230 = load %"class.extensions::PermissionMessage"*, %"class.extensions::PermissionMessage"** %229, align 8
  %231 = getelementptr inbounds %"class.extensions::PermissionMessage", %"class.extensions::PermissionMessage"* %230, i64 0, i32 1
  %232 = getelementptr inbounds %"class.extensions::PermissionMessage", %"class.extensions::PermissionMessage"* %230, i64 0, i32 3
  store %"class.std::__1::basic_string"* %231, %"class.std::__1::basic_string"** %40, align 8
  store %"class.std::__1::vector.9"* %232, %"class.std::__1::vector.9"** %41, align 8
  call void @llvm.lifetime.start.p0i8(i64 16, i8* nonnull %42) #14
  %233 = getelementptr inbounds %"class.extensions::(anonymous namespace)::ComparablePermission", %"class.extensions::(anonymous namespace)::ComparablePermission"* %219, i64 0, i32 0
  %234 = load %"class.extensions::PermissionMessage"*, %"class.extensions::PermissionMessage"** %233, align 8
  %235 = getelementptr inbounds %"class.extensions::PermissionMessage", %"class.extensions::PermissionMessage"* %234, i64 0, i32 1
  %236 = getelementptr inbounds %"class.extensions::PermissionMessage", %"class.extensions::PermissionMessage"* %234, i64 0, i32 3
  store %"class.std::__1::basic_string"* %235, %"class.std::__1::basic_string"** %43, align 8
  store %"class.std::__1::vector.9"* %236, %"class.std::__1::vector.9"** %44, align 8
  call void @llvm.lifetime.start.p0i8(i64 1, i8* nonnull %45) #14
  %237 = call zeroext i1 @_ZNSt3__112__tuple_lessILm2EEclINS_5tupleIJRKNS_12basic_stringIDsNS_11char_traitsIDsEENS_9allocatorIDsEEEERKNS_6vectorIS9_NS7_IS9_EEEEEEESH_EEbRKT_RKT0_(%"struct.std::__1::__tuple_less"* nonnull %27, %"class.std::__1::tuple"* nonnull dereferenceable(16) %28, %"class.std::__1::tuple"* nonnull dereferenceable(16) %29) #14
  call void @llvm.lifetime.end.p0i8(i64 1, i8* nonnull %45) #14
  call void @llvm.lifetime.end.p0i8(i64 16, i8* nonnull %42) #14
  call void @llvm.lifetime.end.p0i8(i64 16, i8* nonnull %39) #14
  br i1 %237, label %321, label %238

238:                                              ; preds = %227, %306
  %239 = phi %"class.extensions::(anonymous namespace)::ComparablePermission"* [ %240, %306 ], [ %106, %227 ]
  %240 = getelementptr inbounds %"class.extensions::(anonymous namespace)::ComparablePermission", %"class.extensions::(anonymous namespace)::ComparablePermission"* %239, i64 -1
  %241 = icmp eq %"class.extensions::(anonymous namespace)::ComparablePermission"* %113, %240
  br i1 %241, label %242, label %306

242:                                              ; preds = %238
  %243 = getelementptr inbounds %"class.extensions::(anonymous namespace)::ComparablePermission", %"class.extensions::(anonymous namespace)::ComparablePermission"* %113, i64 1
  call void @llvm.lifetime.start.p0i8(i64 16, i8* nonnull %53) #14
  %244 = load %"class.extensions::PermissionMessage"*, %"class.extensions::PermissionMessage"** %229, align 8
  %245 = getelementptr inbounds %"class.extensions::PermissionMessage", %"class.extensions::PermissionMessage"* %244, i64 0, i32 1
  %246 = getelementptr inbounds %"class.extensions::PermissionMessage", %"class.extensions::PermissionMessage"* %244, i64 0, i32 3
  store %"class.std::__1::basic_string"* %245, %"class.std::__1::basic_string"** %54, align 8
  store %"class.std::__1::vector.9"* %246, %"class.std::__1::vector.9"** %55, align 8
  call void @llvm.lifetime.start.p0i8(i64 16, i8* nonnull %56) #14
  %247 = load %"class.extensions::PermissionMessage"*, %"class.extensions::PermissionMessage"** %107, align 8
  %248 = getelementptr inbounds %"class.extensions::PermissionMessage", %"class.extensions::PermissionMessage"* %247, i64 0, i32 1
  %249 = getelementptr inbounds %"class.extensions::PermissionMessage", %"class.extensions::PermissionMessage"* %247, i64 0, i32 3
  store %"class.std::__1::basic_string"* %248, %"class.std::__1::basic_string"** %57, align 8
  store %"class.std::__1::vector.9"* %249, %"class.std::__1::vector.9"** %58, align 8
  call void @llvm.lifetime.start.p0i8(i64 1, i8* nonnull %59) #14
  %250 = call zeroext i1 @_ZNSt3__112__tuple_lessILm2EEclINS_5tupleIJRKNS_12basic_stringIDsNS_11char_traitsIDsEENS_9allocatorIDsEEEERKNS_6vectorIS9_NS7_IS9_EEEEEEESH_EEbRKT_RKT0_(%"struct.std::__1::__tuple_less"* nonnull %24, %"class.std::__1::tuple"* nonnull dereferenceable(16) %25, %"class.std::__1::tuple"* nonnull dereferenceable(16) %26) #14
  call void @llvm.lifetime.end.p0i8(i64 1, i8* nonnull %59) #14
  call void @llvm.lifetime.end.p0i8(i64 16, i8* nonnull %56) #14
  call void @llvm.lifetime.end.p0i8(i64 16, i8* nonnull %53) #14
  br i1 %250, label %271, label %251

251:                                              ; preds = %242
  %252 = icmp eq %"class.extensions::(anonymous namespace)::ComparablePermission"* %243, %106
  br i1 %252, label %407, label %253

253:                                              ; preds = %251, %268
  %254 = phi %"class.extensions::(anonymous namespace)::ComparablePermission"* [ %269, %268 ], [ %243, %251 ]
  call void @llvm.lifetime.start.p0i8(i64 16, i8* nonnull %60) #14
  %255 = load %"class.extensions::PermissionMessage"*, %"class.extensions::PermissionMessage"** %229, align 8
  %256 = getelementptr inbounds %"class.extensions::PermissionMessage", %"class.extensions::PermissionMessage"* %255, i64 0, i32 1
  %257 = getelementptr inbounds %"class.extensions::PermissionMessage", %"class.extensions::PermissionMessage"* %255, i64 0, i32 3
  store %"class.std::__1::basic_string"* %256, %"class.std::__1::basic_string"** %61, align 8
  store %"class.std::__1::vector.9"* %257, %"class.std::__1::vector.9"** %62, align 8
  call void @llvm.lifetime.start.p0i8(i64 16, i8* nonnull %63) #14
  %258 = getelementptr inbounds %"class.extensions::(anonymous namespace)::ComparablePermission", %"class.extensions::(anonymous namespace)::ComparablePermission"* %254, i64 0, i32 0
  %259 = load %"class.extensions::PermissionMessage"*, %"class.extensions::PermissionMessage"** %258, align 8
  %260 = getelementptr inbounds %"class.extensions::PermissionMessage", %"class.extensions::PermissionMessage"* %259, i64 0, i32 1
  %261 = getelementptr inbounds %"class.extensions::PermissionMessage", %"class.extensions::PermissionMessage"* %259, i64 0, i32 3
  store %"class.std::__1::basic_string"* %260, %"class.std::__1::basic_string"** %64, align 8
  store %"class.std::__1::vector.9"* %261, %"class.std::__1::vector.9"** %65, align 8
  call void @llvm.lifetime.start.p0i8(i64 1, i8* nonnull %66) #14
  %262 = call zeroext i1 @_ZNSt3__112__tuple_lessILm2EEclINS_5tupleIJRKNS_12basic_stringIDsNS_11char_traitsIDsEENS_9allocatorIDsEEEERKNS_6vectorIS9_NS7_IS9_EEEEEEESH_EEbRKT_RKT0_(%"struct.std::__1::__tuple_less"* nonnull %21, %"class.std::__1::tuple"* nonnull dereferenceable(16) %22, %"class.std::__1::tuple"* nonnull dereferenceable(16) %23) #14
  call void @llvm.lifetime.end.p0i8(i64 1, i8* nonnull %66) #14
  call void @llvm.lifetime.end.p0i8(i64 16, i8* nonnull %63) #14
  call void @llvm.lifetime.end.p0i8(i64 16, i8* nonnull %60) #14
  br i1 %262, label %263, label %268

263:                                              ; preds = %253
  %264 = bitcast %"class.extensions::(anonymous namespace)::ComparablePermission"* %254 to i64*
  %265 = load i64, i64* %264, align 8
  %266 = load i64, i64* %108, align 8
  store i64 %266, i64* %264, align 8
  store i64 %265, i64* %108, align 8
  %267 = getelementptr inbounds %"class.extensions::(anonymous namespace)::ComparablePermission", %"class.extensions::(anonymous namespace)::ComparablePermission"* %254, i64 1
  br label %271

268:                                              ; preds = %253
  %269 = getelementptr inbounds %"class.extensions::(anonymous namespace)::ComparablePermission", %"class.extensions::(anonymous namespace)::ComparablePermission"* %254, i64 1
  %270 = icmp eq %"class.extensions::(anonymous namespace)::ComparablePermission"* %269, %106
  br i1 %270, label %407, label %253

271:                                              ; preds = %263, %242
  %272 = phi %"class.extensions::(anonymous namespace)::ComparablePermission"* [ %243, %242 ], [ %267, %263 ]
  %273 = icmp eq %"class.extensions::(anonymous namespace)::ComparablePermission"* %272, %106
  br i1 %273, label %407, label %274

274:                                              ; preds = %271, %301
  %275 = phi %"class.extensions::(anonymous namespace)::ComparablePermission"* [ %287, %301 ], [ %272, %271 ]
  %276 = phi %"class.extensions::(anonymous namespace)::ComparablePermission"* [ %290, %301 ], [ %106, %271 ]
  br label %277

277:                                              ; preds = %277, %274
  %278 = phi %"class.extensions::(anonymous namespace)::ComparablePermission"* [ %275, %274 ], [ %287, %277 ]
  call void @llvm.lifetime.start.p0i8(i64 16, i8* nonnull %67) #14
  %279 = load %"class.extensions::PermissionMessage"*, %"class.extensions::PermissionMessage"** %229, align 8
  %280 = getelementptr inbounds %"class.extensions::PermissionMessage", %"class.extensions::PermissionMessage"* %279, i64 0, i32 1
  %281 = getelementptr inbounds %"class.extensions::PermissionMessage", %"class.extensions::PermissionMessage"* %279, i64 0, i32 3
  store %"class.std::__1::basic_string"* %280, %"class.std::__1::basic_string"** %68, align 8
  store %"class.std::__1::vector.9"* %281, %"class.std::__1::vector.9"** %69, align 8
  call void @llvm.lifetime.start.p0i8(i64 16, i8* nonnull %70) #14
  %282 = getelementptr inbounds %"class.extensions::(anonymous namespace)::ComparablePermission", %"class.extensions::(anonymous namespace)::ComparablePermission"* %278, i64 0, i32 0
  %283 = load %"class.extensions::PermissionMessage"*, %"class.extensions::PermissionMessage"** %282, align 8
  %284 = getelementptr inbounds %"class.extensions::PermissionMessage", %"class.extensions::PermissionMessage"* %283, i64 0, i32 1
  %285 = getelementptr inbounds %"class.extensions::PermissionMessage", %"class.extensions::PermissionMessage"* %283, i64 0, i32 3
  store %"class.std::__1::basic_string"* %284, %"class.std::__1::basic_string"** %71, align 8
  store %"class.std::__1::vector.9"* %285, %"class.std::__1::vector.9"** %72, align 8
  call void @llvm.lifetime.start.p0i8(i64 1, i8* nonnull %73) #14
  %286 = call zeroext i1 @_ZNSt3__112__tuple_lessILm2EEclINS_5tupleIJRKNS_12basic_stringIDsNS_11char_traitsIDsEENS_9allocatorIDsEEEERKNS_6vectorIS9_NS7_IS9_EEEEEEESH_EEbRKT_RKT0_(%"struct.std::__1::__tuple_less"* nonnull %18, %"class.std::__1::tuple"* nonnull dereferenceable(16) %19, %"class.std::__1::tuple"* nonnull dereferenceable(16) %20) #14
  call void @llvm.lifetime.end.p0i8(i64 1, i8* nonnull %73) #14
  call void @llvm.lifetime.end.p0i8(i64 16, i8* nonnull %70) #14
  call void @llvm.lifetime.end.p0i8(i64 16, i8* nonnull %67) #14
  %287 = getelementptr inbounds %"class.extensions::(anonymous namespace)::ComparablePermission", %"class.extensions::(anonymous namespace)::ComparablePermission"* %278, i64 1
  br i1 %286, label %288, label %277

288:                                              ; preds = %277, %288
  %289 = phi %"class.extensions::(anonymous namespace)::ComparablePermission"* [ %290, %288 ], [ %276, %277 ]
  %290 = getelementptr inbounds %"class.extensions::(anonymous namespace)::ComparablePermission", %"class.extensions::(anonymous namespace)::ComparablePermission"* %289, i64 -1
  call void @llvm.lifetime.start.p0i8(i64 16, i8* nonnull %74) #14
  %291 = load %"class.extensions::PermissionMessage"*, %"class.extensions::PermissionMessage"** %229, align 8
  %292 = getelementptr inbounds %"class.extensions::PermissionMessage", %"class.extensions::PermissionMessage"* %291, i64 0, i32 1
  %293 = getelementptr inbounds %"class.extensions::PermissionMessage", %"class.extensions::PermissionMessage"* %291, i64 0, i32 3
  store %"class.std::__1::basic_string"* %292, %"class.std::__1::basic_string"** %75, align 8
  store %"class.std::__1::vector.9"* %293, %"class.std::__1::vector.9"** %76, align 8
  call void @llvm.lifetime.start.p0i8(i64 16, i8* nonnull %77) #14
  %294 = getelementptr inbounds %"class.extensions::(anonymous namespace)::ComparablePermission", %"class.extensions::(anonymous namespace)::ComparablePermission"* %290, i64 0, i32 0
  %295 = load %"class.extensions::PermissionMessage"*, %"class.extensions::PermissionMessage"** %294, align 8
  %296 = getelementptr inbounds %"class.extensions::PermissionMessage", %"class.extensions::PermissionMessage"* %295, i64 0, i32 1
  %297 = getelementptr inbounds %"class.extensions::PermissionMessage", %"class.extensions::PermissionMessage"* %295, i64 0, i32 3
  store %"class.std::__1::basic_string"* %296, %"class.std::__1::basic_string"** %78, align 8
  store %"class.std::__1::vector.9"* %297, %"class.std::__1::vector.9"** %79, align 8
  call void @llvm.lifetime.start.p0i8(i64 1, i8* nonnull %80) #14
  %298 = call zeroext i1 @_ZNSt3__112__tuple_lessILm2EEclINS_5tupleIJRKNS_12basic_stringIDsNS_11char_traitsIDsEENS_9allocatorIDsEEEERKNS_6vectorIS9_NS7_IS9_EEEEEEESH_EEbRKT_RKT0_(%"struct.std::__1::__tuple_less"* nonnull %15, %"class.std::__1::tuple"* nonnull dereferenceable(16) %16, %"class.std::__1::tuple"* nonnull dereferenceable(16) %17) #14
  call void @llvm.lifetime.end.p0i8(i64 1, i8* nonnull %80) #14
  call void @llvm.lifetime.end.p0i8(i64 16, i8* nonnull %77) #14
  call void @llvm.lifetime.end.p0i8(i64 16, i8* nonnull %74) #14
  br i1 %298, label %288, label %299

299:                                              ; preds = %288
  %300 = icmp ult %"class.extensions::(anonymous namespace)::ComparablePermission"* %278, %290
  br i1 %300, label %301, label %112

301:                                              ; preds = %299
  %302 = bitcast %"class.extensions::(anonymous namespace)::ComparablePermission"* %278 to i64*
  %303 = load i64, i64* %302, align 8
  %304 = bitcast %"class.extensions::(anonymous namespace)::ComparablePermission"* %290 to i64*
  %305 = load i64, i64* %304, align 8
  store i64 %305, i64* %302, align 8
  store i64 %303, i64* %304, align 8
  br label %274

306:                                              ; preds = %238
  call void @llvm.lifetime.start.p0i8(i64 16, i8* nonnull %46) #14
  %307 = getelementptr inbounds %"class.extensions::(anonymous namespace)::ComparablePermission", %"class.extensions::(anonymous namespace)::ComparablePermission"* %240, i64 0, i32 0
  %308 = load %"class.extensions::PermissionMessage"*, %"class.extensions::PermissionMessage"** %307, align 8
  %309 = getelementptr inbounds %"class.extensions::PermissionMessage", %"class.extensions::PermissionMessage"* %308, i64 0, i32 1
  %310 = getelementptr inbounds %"class.extensions::PermissionMessage", %"class.extensions::PermissionMessage"* %308, i64 0, i32 3
  store %"class.std::__1::basic_string"* %309, %"class.std::__1::basic_string"** %47, align 8
  store %"class.std::__1::vector.9"* %310, %"class.std::__1::vector.9"** %48, align 8
  call void @llvm.lifetime.start.p0i8(i64 16, i8* nonnull %49) #14
  %311 = load %"class.extensions::PermissionMessage"*, %"class.extensions::PermissionMessage"** %233, align 8
  %312 = getelementptr inbounds %"class.extensions::PermissionMessage", %"class.extensions::PermissionMessage"* %311, i64 0, i32 1
  %313 = getelementptr inbounds %"class.extensions::PermissionMessage", %"class.extensions::PermissionMessage"* %311, i64 0, i32 3
  store %"class.std::__1::basic_string"* %312, %"class.std::__1::basic_string"** %50, align 8
  store %"class.std::__1::vector.9"* %313, %"class.std::__1::vector.9"** %51, align 8
  call void @llvm.lifetime.start.p0i8(i64 1, i8* nonnull %52) #14
  %314 = call zeroext i1 @_ZNSt3__112__tuple_lessILm2EEclINS_5tupleIJRKNS_12basic_stringIDsNS_11char_traitsIDsEENS_9allocatorIDsEEEERKNS_6vectorIS9_NS7_IS9_EEEEEEESH_EEbRKT_RKT0_(%"struct.std::__1::__tuple_less"* nonnull %12, %"class.std::__1::tuple"* nonnull dereferenceable(16) %13, %"class.std::__1::tuple"* nonnull dereferenceable(16) %14) #14
  call void @llvm.lifetime.end.p0i8(i64 1, i8* nonnull %52) #14
  call void @llvm.lifetime.end.p0i8(i64 16, i8* nonnull %49) #14
  call void @llvm.lifetime.end.p0i8(i64 16, i8* nonnull %46) #14
  br i1 %314, label %315, label %238

315:                                              ; preds = %306
  %316 = bitcast %"class.extensions::(anonymous namespace)::ComparablePermission"* %113 to i64*
  %317 = load i64, i64* %316, align 8
  %318 = bitcast %"class.extensions::(anonymous namespace)::ComparablePermission"* %240 to i64*
  %319 = load i64, i64* %318, align 8
  store i64 %319, i64* %316, align 8
  store i64 %317, i64* %318, align 8
  %320 = add i32 %228, 1
  br label %321

321:                                              ; preds = %227, %315
  %322 = phi i32 [ %320, %315 ], [ %228, %227 ]
  %323 = phi %"class.extensions::(anonymous namespace)::ComparablePermission"* [ %240, %315 ], [ %106, %227 ]
  %324 = ptrtoint %"class.extensions::(anonymous namespace)::ComparablePermission"* %113 to i64
  %325 = getelementptr inbounds %"class.extensions::(anonymous namespace)::ComparablePermission", %"class.extensions::(anonymous namespace)::ComparablePermission"* %113, i64 1
  %326 = icmp ult %"class.extensions::(anonymous namespace)::ComparablePermission"* %325, %323
  br i1 %326, label %327, label %365

327:                                              ; preds = %321, %357
  %328 = phi %"class.extensions::(anonymous namespace)::ComparablePermission"* [ %364, %357 ], [ %219, %321 ]
  %329 = phi i32 [ %362, %357 ], [ %322, %321 ]
  %330 = phi %"class.extensions::(anonymous namespace)::ComparablePermission"* [ %343, %357 ], [ %325, %321 ]
  %331 = phi %"class.extensions::(anonymous namespace)::ComparablePermission"* [ %346, %357 ], [ %323, %321 ]
  %332 = getelementptr inbounds %"class.extensions::(anonymous namespace)::ComparablePermission", %"class.extensions::(anonymous namespace)::ComparablePermission"* %328, i64 0, i32 0
  br label %333

333:                                              ; preds = %333, %327
  %334 = phi %"class.extensions::(anonymous namespace)::ComparablePermission"* [ %330, %327 ], [ %343, %333 ]
  call void @llvm.lifetime.start.p0i8(i64 16, i8* nonnull %81) #14
  %335 = getelementptr inbounds %"class.extensions::(anonymous namespace)::ComparablePermission", %"class.extensions::(anonymous namespace)::ComparablePermission"* %334, i64 0, i32 0
  %336 = load %"class.extensions::PermissionMessage"*, %"class.extensions::PermissionMessage"** %335, align 8
  %337 = getelementptr inbounds %"class.extensions::PermissionMessage", %"class.extensions::PermissionMessage"* %336, i64 0, i32 1
  %338 = getelementptr inbounds %"class.extensions::PermissionMessage", %"class.extensions::PermissionMessage"* %336, i64 0, i32 3
  store %"class.std::__1::basic_string"* %337, %"class.std::__1::basic_string"** %82, align 8
  store %"class.std::__1::vector.9"* %338, %"class.std::__1::vector.9"** %83, align 8
  call void @llvm.lifetime.start.p0i8(i64 16, i8* nonnull %84) #14
  %339 = load %"class.extensions::PermissionMessage"*, %"class.extensions::PermissionMessage"** %332, align 8
  %340 = getelementptr inbounds %"class.extensions::PermissionMessage", %"class.extensions::PermissionMessage"* %339, i64 0, i32 1
  %341 = getelementptr inbounds %"class.extensions::PermissionMessage", %"class.extensions::PermissionMessage"* %339, i64 0, i32 3
  store %"class.std::__1::basic_string"* %340, %"class.std::__1::basic_string"** %85, align 8
  store %"class.std::__1::vector.9"* %341, %"class.std::__1::vector.9"** %86, align 8
  call void @llvm.lifetime.start.p0i8(i64 1, i8* nonnull %87) #14
  %342 = call zeroext i1 @_ZNSt3__112__tuple_lessILm2EEclINS_5tupleIJRKNS_12basic_stringIDsNS_11char_traitsIDsEENS_9allocatorIDsEEEERKNS_6vectorIS9_NS7_IS9_EEEEEEESH_EEbRKT_RKT0_(%"struct.std::__1::__tuple_less"* nonnull %9, %"class.std::__1::tuple"* nonnull dereferenceable(16) %10, %"class.std::__1::tuple"* nonnull dereferenceable(16) %11) #14
  call void @llvm.lifetime.end.p0i8(i64 1, i8* nonnull %87) #14
  call void @llvm.lifetime.end.p0i8(i64 16, i8* nonnull %84) #14
  call void @llvm.lifetime.end.p0i8(i64 16, i8* nonnull %81) #14
  %343 = getelementptr inbounds %"class.extensions::(anonymous namespace)::ComparablePermission", %"class.extensions::(anonymous namespace)::ComparablePermission"* %334, i64 1
  br i1 %342, label %333, label %344

344:                                              ; preds = %333, %344
  %345 = phi %"class.extensions::(anonymous namespace)::ComparablePermission"* [ %346, %344 ], [ %331, %333 ]
  %346 = getelementptr inbounds %"class.extensions::(anonymous namespace)::ComparablePermission", %"class.extensions::(anonymous namespace)::ComparablePermission"* %345, i64 -1
  call void @llvm.lifetime.start.p0i8(i64 16, i8* nonnull %88) #14
  %347 = getelementptr inbounds %"class.extensions::(anonymous namespace)::ComparablePermission", %"class.extensions::(anonymous namespace)::ComparablePermission"* %346, i64 0, i32 0
  %348 = load %"class.extensions::PermissionMessage"*, %"class.extensions::PermissionMessage"** %347, align 8
  %349 = getelementptr inbounds %"class.extensions::PermissionMessage", %"class.extensions::PermissionMessage"* %348, i64 0, i32 1
  %350 = getelementptr inbounds %"class.extensions::PermissionMessage", %"class.extensions::PermissionMessage"* %348, i64 0, i32 3
  store %"class.std::__1::basic_string"* %349, %"class.std::__1::basic_string"** %89, align 8
  store %"class.std::__1::vector.9"* %350, %"class.std::__1::vector.9"** %90, align 8
  call void @llvm.lifetime.start.p0i8(i64 16, i8* nonnull %91) #14
  %351 = load %"class.extensions::PermissionMessage"*, %"class.extensions::PermissionMessage"** %332, align 8
  %352 = getelementptr inbounds %"class.extensions::PermissionMessage", %"class.extensions::PermissionMessage"* %351, i64 0, i32 1
  %353 = getelementptr inbounds %"class.extensions::PermissionMessage", %"class.extensions::PermissionMessage"* %351, i64 0, i32 3
  store %"class.std::__1::basic_string"* %352, %"class.std::__1::basic_string"** %92, align 8
  store %"class.std::__1::vector.9"* %353, %"class.std::__1::vector.9"** %93, align 8
  call void @llvm.lifetime.start.p0i8(i64 1, i8* nonnull %94) #14
  %354 = call zeroext i1 @_ZNSt3__112__tuple_lessILm2EEclINS_5tupleIJRKNS_12basic_stringIDsNS_11char_traitsIDsEENS_9allocatorIDsEEEERKNS_6vectorIS9_NS7_IS9_EEEEEEESH_EEbRKT_RKT0_(%"struct.std::__1::__tuple_less"* nonnull %6, %"class.std::__1::tuple"* nonnull dereferenceable(16) %7, %"class.std::__1::tuple"* nonnull dereferenceable(16) %8) #14
  call void @llvm.lifetime.end.p0i8(i64 1, i8* nonnull %94) #14
  call void @llvm.lifetime.end.p0i8(i64 16, i8* nonnull %91) #14
  call void @llvm.lifetime.end.p0i8(i64 16, i8* nonnull %88) #14
  br i1 %354, label %355, label %344

355:                                              ; preds = %344
  %356 = icmp ugt %"class.extensions::(anonymous namespace)::ComparablePermission"* %334, %346
  br i1 %356, label %365, label %357

357:                                              ; preds = %355
  %358 = bitcast %"class.extensions::(anonymous namespace)::ComparablePermission"* %334 to i64*
  %359 = load i64, i64* %358, align 8
  %360 = bitcast %"class.extensions::(anonymous namespace)::ComparablePermission"* %346 to i64*
  %361 = load i64, i64* %360, align 8
  store i64 %361, i64* %358, align 8
  store i64 %359, i64* %360, align 8
  %362 = add i32 %329, 1
  %363 = icmp eq %"class.extensions::(anonymous namespace)::ComparablePermission"* %328, %334
  %364 = select i1 %363, %"class.extensions::(anonymous namespace)::ComparablePermission"* %346, %"class.extensions::(anonymous namespace)::ComparablePermission"* %328
  br label %327

365:                                              ; preds = %355, %321
  %366 = phi %"class.extensions::(anonymous namespace)::ComparablePermission"* [ %219, %321 ], [ %328, %355 ]
  %367 = phi i32 [ %322, %321 ], [ %329, %355 ]
  %368 = phi %"class.extensions::(anonymous namespace)::ComparablePermission"* [ %325, %321 ], [ %334, %355 ]
  %369 = icmp eq %"class.extensions::(anonymous namespace)::ComparablePermission"* %368, %366
  br i1 %369, label %386, label %370

370:                                              ; preds = %365
  call void @llvm.lifetime.start.p0i8(i64 16, i8* nonnull %95) #14
  %371 = getelementptr inbounds %"class.extensions::(anonymous namespace)::ComparablePermission", %"class.extensions::(anonymous namespace)::ComparablePermission"* %366, i64 0, i32 0
  %372 = load %"class.extensions::PermissionMessage"*, %"class.extensions::PermissionMessage"** %371, align 8
  %373 = getelementptr inbounds %"class.extensions::PermissionMessage", %"class.extensions::PermissionMessage"* %372, i64 0, i32 1
  %374 = getelementptr inbounds %"class.extensions::PermissionMessage", %"class.extensions::PermissionMessage"* %372, i64 0, i32 3
  store %"class.std::__1::basic_string"* %373, %"class.std::__1::basic_string"** %96, align 8
  store %"class.std::__1::vector.9"* %374, %"class.std::__1::vector.9"** %97, align 8
  call void @llvm.lifetime.start.p0i8(i64 16, i8* nonnull %98) #14
  %375 = getelementptr inbounds %"class.extensions::(anonymous namespace)::ComparablePermission", %"class.extensions::(anonymous namespace)::ComparablePermission"* %368, i64 0, i32 0
  %376 = load %"class.extensions::PermissionMessage"*, %"class.extensions::PermissionMessage"** %375, align 8
  %377 = getelementptr inbounds %"class.extensions::PermissionMessage", %"class.extensions::PermissionMessage"* %376, i64 0, i32 1
  %378 = getelementptr inbounds %"class.extensions::PermissionMessage", %"class.extensions::PermissionMessage"* %376, i64 0, i32 3
  store %"class.std::__1::basic_string"* %377, %"class.std::__1::basic_string"** %99, align 8
  store %"class.std::__1::vector.9"* %378, %"class.std::__1::vector.9"** %100, align 8
  call void @llvm.lifetime.start.p0i8(i64 1, i8* nonnull %101) #14
  %379 = call zeroext i1 @_ZNSt3__112__tuple_lessILm2EEclINS_5tupleIJRKNS_12basic_stringIDsNS_11char_traitsIDsEENS_9allocatorIDsEEEERKNS_6vectorIS9_NS7_IS9_EEEEEEESH_EEbRKT_RKT0_(%"struct.std::__1::__tuple_less"* nonnull %3, %"class.std::__1::tuple"* nonnull dereferenceable(16) %4, %"class.std::__1::tuple"* nonnull dereferenceable(16) %5) #14
  call void @llvm.lifetime.end.p0i8(i64 1, i8* nonnull %101) #14
  call void @llvm.lifetime.end.p0i8(i64 16, i8* nonnull %98) #14
  call void @llvm.lifetime.end.p0i8(i64 16, i8* nonnull %95) #14
  br i1 %379, label %380, label %386

380:                                              ; preds = %370
  %381 = bitcast %"class.extensions::(anonymous namespace)::ComparablePermission"* %368 to i64*
  %382 = load i64, i64* %381, align 8
  %383 = bitcast %"class.extensions::(anonymous namespace)::ComparablePermission"* %366 to i64*
  %384 = load i64, i64* %383, align 8
  store i64 %384, i64* %381, align 8
  store i64 %382, i64* %383, align 8
  %385 = add i32 %367, 1
  br label %386

386:                                              ; preds = %365, %380, %370
  %387 = phi i32 [ %385, %380 ], [ %367, %370 ], [ %367, %365 ]
  %388 = icmp eq i32 %387, 0
  br i1 %388, label %389, label %396

389:                                              ; preds = %386
  %390 = call fastcc zeroext i1 @_ZNSt3__127__insertion_sort_incompleteIRNS_6__lessIN10extensions12_GLOBAL__N_120ComparablePermissionES4_EEPS4_EEbT0_S8_T_(%"class.extensions::(anonymous namespace)::ComparablePermission"* %113, %"class.extensions::(anonymous namespace)::ComparablePermission"* %368)
  %391 = getelementptr inbounds %"class.extensions::(anonymous namespace)::ComparablePermission", %"class.extensions::(anonymous namespace)::ComparablePermission"* %368, i64 1
  %392 = call fastcc zeroext i1 @_ZNSt3__127__insertion_sort_incompleteIRNS_6__lessIN10extensions12_GLOBAL__N_120ComparablePermissionES4_EEPS4_EEbT0_S8_T_(%"class.extensions::(anonymous namespace)::ComparablePermission"* %391, %"class.extensions::(anonymous namespace)::ComparablePermission"* %103)
  br i1 %392, label %393, label %395

393:                                              ; preds = %389
  br i1 %390, label %407, label %394

394:                                              ; preds = %393, %405
  br label %102

395:                                              ; preds = %389
  br i1 %390, label %403, label %396

396:                                              ; preds = %395, %386
  %397 = ptrtoint %"class.extensions::(anonymous namespace)::ComparablePermission"* %368 to i64
  %398 = sub i64 %397, %324
  %399 = sub i64 %109, %397
  %400 = icmp slt i64 %398, %399
  br i1 %400, label %401, label %405

401:                                              ; preds = %396
  call fastcc void @_ZNSt3__16__sortIRNS_6__lessIN10extensions12_GLOBAL__N_120ComparablePermissionES4_EEPS4_EEvT0_S8_T_(%"class.extensions::(anonymous namespace)::ComparablePermission"* %113, %"class.extensions::(anonymous namespace)::ComparablePermission"* %368)
  %402 = getelementptr inbounds %"class.extensions::(anonymous namespace)::ComparablePermission", %"class.extensions::(anonymous namespace)::ComparablePermission"* %368, i64 1
  br label %403

403:                                              ; preds = %401, %395
  %404 = phi %"class.extensions::(anonymous namespace)::ComparablePermission"* [ %391, %395 ], [ %402, %401 ]
  br label %110

405:                                              ; preds = %396
  %406 = getelementptr inbounds %"class.extensions::(anonymous namespace)::ComparablePermission", %"class.extensions::(anonymous namespace)::ComparablePermission"* %368, i64 1
  call fastcc void @_ZNSt3__16__sortIRNS_6__lessIN10extensions12_GLOBAL__N_120ComparablePermissionES4_EEPS4_EEvT0_S8_T_(%"class.extensions::(anonymous namespace)::ComparablePermission"* %406, %"class.extensions::(anonymous namespace)::ComparablePermission"* %103)
  br label %394

407:                                              ; preds = %393, %271, %112, %112, %251, %268, %213, %157, %117, %135, %140, %144, %149
  ret void
}

; Function Attrs: nounwind ssp uwtable
define internal fastcc i32 @_ZNSt3__17__sort3IRNS_6__lessIN10extensions12_GLOBAL__N_120ComparablePermissionES4_EEPS4_EEjT0_S8_S8_T_(%"class.extensions::(anonymous namespace)::ComparablePermission"* nocapture, %"class.extensions::(anonymous namespace)::ComparablePermission"* nocapture, %"class.extensions::(anonymous namespace)::ComparablePermission"* nocapture) unnamed_addr #2 {
  %4 = alloca %"struct.std::__1::__tuple_less", align 1
  %5 = alloca %"class.std::__1::tuple", align 8
  %6 = alloca %"class.std::__1::tuple", align 8
  %7 = alloca %"struct.std::__1::__tuple_less", align 1
  %8 = alloca %"class.std::__1::tuple", align 8
  %9 = alloca %"class.std::__1::tuple", align 8
  %10 = alloca %"struct.std::__1::__tuple_less", align 1
  %11 = alloca %"class.std::__1::tuple", align 8
  %12 = alloca %"class.std::__1::tuple", align 8
  %13 = alloca %"struct.std::__1::__tuple_less", align 1
  %14 = alloca %"class.std::__1::tuple", align 8
  %15 = alloca %"class.std::__1::tuple", align 8
  %16 = bitcast %"class.std::__1::tuple"* %14 to i8*
  call void @llvm.lifetime.start.p0i8(i64 16, i8* nonnull %16) #14
  %17 = getelementptr inbounds %"class.extensions::(anonymous namespace)::ComparablePermission", %"class.extensions::(anonymous namespace)::ComparablePermission"* %1, i64 0, i32 0
  %18 = load %"class.extensions::PermissionMessage"*, %"class.extensions::PermissionMessage"** %17, align 8
  %19 = getelementptr inbounds %"class.extensions::PermissionMessage", %"class.extensions::PermissionMessage"* %18, i64 0, i32 1
  %20 = getelementptr inbounds %"class.extensions::PermissionMessage", %"class.extensions::PermissionMessage"* %18, i64 0, i32 3
  %21 = getelementptr inbounds %"class.std::__1::tuple", %"class.std::__1::tuple"* %14, i64 0, i32 0, i32 0, i32 0
  store %"class.std::__1::basic_string"* %19, %"class.std::__1::basic_string"** %21, align 8
  %22 = getelementptr inbounds %"class.std::__1::tuple", %"class.std::__1::tuple"* %14, i64 0, i32 0, i32 1, i32 0
  store %"class.std::__1::vector.9"* %20, %"class.std::__1::vector.9"** %22, align 8
  %23 = bitcast %"class.std::__1::tuple"* %15 to i8*
  call void @llvm.lifetime.start.p0i8(i64 16, i8* nonnull %23) #14
  %24 = getelementptr inbounds %"class.extensions::(anonymous namespace)::ComparablePermission", %"class.extensions::(anonymous namespace)::ComparablePermission"* %0, i64 0, i32 0
  %25 = load %"class.extensions::PermissionMessage"*, %"class.extensions::PermissionMessage"** %24, align 8
  %26 = getelementptr inbounds %"class.extensions::PermissionMessage", %"class.extensions::PermissionMessage"* %25, i64 0, i32 1
  %27 = getelementptr inbounds %"class.extensions::PermissionMessage", %"class.extensions::PermissionMessage"* %25, i64 0, i32 3
  %28 = getelementptr inbounds %"class.std::__1::tuple", %"class.std::__1::tuple"* %15, i64 0, i32 0, i32 0, i32 0
  store %"class.std::__1::basic_string"* %26, %"class.std::__1::basic_string"** %28, align 8
  %29 = getelementptr inbounds %"class.std::__1::tuple", %"class.std::__1::tuple"* %15, i64 0, i32 0, i32 1, i32 0
  store %"class.std::__1::vector.9"* %27, %"class.std::__1::vector.9"** %29, align 8
  %30 = getelementptr inbounds %"struct.std::__1::__tuple_less", %"struct.std::__1::__tuple_less"* %13, i64 0, i32 0
  call void @llvm.lifetime.start.p0i8(i64 1, i8* nonnull %30) #14
  %31 = call zeroext i1 @_ZNSt3__112__tuple_lessILm2EEclINS_5tupleIJRKNS_12basic_stringIDsNS_11char_traitsIDsEENS_9allocatorIDsEEEERKNS_6vectorIS9_NS7_IS9_EEEEEEESH_EEbRKT_RKT0_(%"struct.std::__1::__tuple_less"* nonnull %13, %"class.std::__1::tuple"* nonnull dereferenceable(16) %14, %"class.std::__1::tuple"* nonnull dereferenceable(16) %15) #14
  call void @llvm.lifetime.end.p0i8(i64 1, i8* nonnull %30) #14
  call void @llvm.lifetime.end.p0i8(i64 16, i8* nonnull %23) #14
  call void @llvm.lifetime.end.p0i8(i64 16, i8* nonnull %16) #14
  %32 = bitcast %"class.std::__1::tuple"* %11 to i8*
  call void @llvm.lifetime.start.p0i8(i64 16, i8* nonnull %32) #14
  %33 = getelementptr inbounds %"class.extensions::(anonymous namespace)::ComparablePermission", %"class.extensions::(anonymous namespace)::ComparablePermission"* %2, i64 0, i32 0
  %34 = load %"class.extensions::PermissionMessage"*, %"class.extensions::PermissionMessage"** %33, align 8
  %35 = getelementptr inbounds %"class.extensions::PermissionMessage", %"class.extensions::PermissionMessage"* %34, i64 0, i32 1
  %36 = getelementptr inbounds %"class.extensions::PermissionMessage", %"class.extensions::PermissionMessage"* %34, i64 0, i32 3
  %37 = getelementptr inbounds %"class.std::__1::tuple", %"class.std::__1::tuple"* %11, i64 0, i32 0, i32 0, i32 0
  store %"class.std::__1::basic_string"* %35, %"class.std::__1::basic_string"** %37, align 8
  %38 = getelementptr inbounds %"class.std::__1::tuple", %"class.std::__1::tuple"* %11, i64 0, i32 0, i32 1, i32 0
  store %"class.std::__1::vector.9"* %36, %"class.std::__1::vector.9"** %38, align 8
  %39 = bitcast %"class.std::__1::tuple"* %12 to i8*
  call void @llvm.lifetime.start.p0i8(i64 16, i8* nonnull %39) #14
  %40 = load %"class.extensions::PermissionMessage"*, %"class.extensions::PermissionMessage"** %17, align 8
  %41 = getelementptr inbounds %"class.extensions::PermissionMessage", %"class.extensions::PermissionMessage"* %40, i64 0, i32 1
  %42 = getelementptr inbounds %"class.extensions::PermissionMessage", %"class.extensions::PermissionMessage"* %40, i64 0, i32 3
  %43 = getelementptr inbounds %"class.std::__1::tuple", %"class.std::__1::tuple"* %12, i64 0, i32 0, i32 0, i32 0
  store %"class.std::__1::basic_string"* %41, %"class.std::__1::basic_string"** %43, align 8
  %44 = getelementptr inbounds %"class.std::__1::tuple", %"class.std::__1::tuple"* %12, i64 0, i32 0, i32 1, i32 0
  store %"class.std::__1::vector.9"* %42, %"class.std::__1::vector.9"** %44, align 8
  %45 = getelementptr inbounds %"struct.std::__1::__tuple_less", %"struct.std::__1::__tuple_less"* %10, i64 0, i32 0
  call void @llvm.lifetime.start.p0i8(i64 1, i8* nonnull %45) #14
  %46 = call zeroext i1 @_ZNSt3__112__tuple_lessILm2EEclINS_5tupleIJRKNS_12basic_stringIDsNS_11char_traitsIDsEENS_9allocatorIDsEEEERKNS_6vectorIS9_NS7_IS9_EEEEEEESH_EEbRKT_RKT0_(%"struct.std::__1::__tuple_less"* nonnull %10, %"class.std::__1::tuple"* nonnull dereferenceable(16) %11, %"class.std::__1::tuple"* nonnull dereferenceable(16) %12) #14
  call void @llvm.lifetime.end.p0i8(i64 1, i8* nonnull %45) #14
  call void @llvm.lifetime.end.p0i8(i64 16, i8* nonnull %39) #14
  call void @llvm.lifetime.end.p0i8(i64 16, i8* nonnull %32) #14
  br i1 %31, label %71, label %47

47:                                               ; preds = %3
  br i1 %46, label %48, label %98

48:                                               ; preds = %47
  %49 = bitcast %"class.extensions::(anonymous namespace)::ComparablePermission"* %1 to i64*
  %50 = load i64, i64* %49, align 8
  %51 = bitcast %"class.extensions::(anonymous namespace)::ComparablePermission"* %2 to i64*
  %52 = load i64, i64* %51, align 8
  store i64 %52, i64* %49, align 8
  store i64 %50, i64* %51, align 8
  %53 = bitcast %"class.std::__1::tuple"* %5 to i8*
  call void @llvm.lifetime.start.p0i8(i64 16, i8* nonnull %53) #14
  %54 = load %"class.extensions::PermissionMessage"*, %"class.extensions::PermissionMessage"** %17, align 8
  %55 = getelementptr inbounds %"class.extensions::PermissionMessage", %"class.extensions::PermissionMessage"* %54, i64 0, i32 1
  %56 = getelementptr inbounds %"class.extensions::PermissionMessage", %"class.extensions::PermissionMessage"* %54, i64 0, i32 3
  %57 = getelementptr inbounds %"class.std::__1::tuple", %"class.std::__1::tuple"* %5, i64 0, i32 0, i32 0, i32 0
  store %"class.std::__1::basic_string"* %55, %"class.std::__1::basic_string"** %57, align 8
  %58 = getelementptr inbounds %"class.std::__1::tuple", %"class.std::__1::tuple"* %5, i64 0, i32 0, i32 1, i32 0
  store %"class.std::__1::vector.9"* %56, %"class.std::__1::vector.9"** %58, align 8
  %59 = bitcast %"class.std::__1::tuple"* %6 to i8*
  call void @llvm.lifetime.start.p0i8(i64 16, i8* nonnull %59) #14
  %60 = load %"class.extensions::PermissionMessage"*, %"class.extensions::PermissionMessage"** %24, align 8
  %61 = getelementptr inbounds %"class.extensions::PermissionMessage", %"class.extensions::PermissionMessage"* %60, i64 0, i32 1
  %62 = getelementptr inbounds %"class.extensions::PermissionMessage", %"class.extensions::PermissionMessage"* %60, i64 0, i32 3
  %63 = getelementptr inbounds %"class.std::__1::tuple", %"class.std::__1::tuple"* %6, i64 0, i32 0, i32 0, i32 0
  store %"class.std::__1::basic_string"* %61, %"class.std::__1::basic_string"** %63, align 8
  %64 = getelementptr inbounds %"class.std::__1::tuple", %"class.std::__1::tuple"* %6, i64 0, i32 0, i32 1, i32 0
  store %"class.std::__1::vector.9"* %62, %"class.std::__1::vector.9"** %64, align 8
  %65 = getelementptr inbounds %"struct.std::__1::__tuple_less", %"struct.std::__1::__tuple_less"* %4, i64 0, i32 0
  call void @llvm.lifetime.start.p0i8(i64 1, i8* nonnull %65) #14
  %66 = call zeroext i1 @_ZNSt3__112__tuple_lessILm2EEclINS_5tupleIJRKNS_12basic_stringIDsNS_11char_traitsIDsEENS_9allocatorIDsEEEERKNS_6vectorIS9_NS7_IS9_EEEEEEESH_EEbRKT_RKT0_(%"struct.std::__1::__tuple_less"* nonnull %4, %"class.std::__1::tuple"* nonnull dereferenceable(16) %5, %"class.std::__1::tuple"* nonnull dereferenceable(16) %6) #14
  call void @llvm.lifetime.end.p0i8(i64 1, i8* nonnull %65) #14
  call void @llvm.lifetime.end.p0i8(i64 16, i8* nonnull %59) #14
  call void @llvm.lifetime.end.p0i8(i64 16, i8* nonnull %53) #14
  br i1 %66, label %67, label %98

67:                                               ; preds = %48
  %68 = bitcast %"class.extensions::(anonymous namespace)::ComparablePermission"* %0 to i64*
  %69 = load i64, i64* %68, align 8
  %70 = load i64, i64* %49, align 8
  store i64 %70, i64* %68, align 8
  store i64 %69, i64* %49, align 8
  br label %98

71:                                               ; preds = %3
  %72 = bitcast %"class.extensions::(anonymous namespace)::ComparablePermission"* %0 to i64*
  %73 = load i64, i64* %72, align 8
  br i1 %46, label %74, label %77

74:                                               ; preds = %71
  %75 = bitcast %"class.extensions::(anonymous namespace)::ComparablePermission"* %2 to i64*
  %76 = load i64, i64* %75, align 8
  store i64 %76, i64* %72, align 8
  store i64 %73, i64* %75, align 8
  br label %98

77:                                               ; preds = %71
  %78 = bitcast %"class.extensions::(anonymous namespace)::ComparablePermission"* %1 to i64*
  %79 = load i64, i64* %78, align 8
  store i64 %79, i64* %72, align 8
  store i64 %73, i64* %78, align 8
  %80 = bitcast %"class.std::__1::tuple"* %8 to i8*
  call void @llvm.lifetime.start.p0i8(i64 16, i8* nonnull %80) #14
  %81 = load %"class.extensions::PermissionMessage"*, %"class.extensions::PermissionMessage"** %33, align 8
  %82 = getelementptr inbounds %"class.extensions::PermissionMessage", %"class.extensions::PermissionMessage"* %81, i64 0, i32 1
  %83 = getelementptr inbounds %"class.extensions::PermissionMessage", %"class.extensions::PermissionMessage"* %81, i64 0, i32 3
  %84 = getelementptr inbounds %"class.std::__1::tuple", %"class.std::__1::tuple"* %8, i64 0, i32 0, i32 0, i32 0
  store %"class.std::__1::basic_string"* %82, %"class.std::__1::basic_string"** %84, align 8
  %85 = getelementptr inbounds %"class.std::__1::tuple", %"class.std::__1::tuple"* %8, i64 0, i32 0, i32 1, i32 0
  store %"class.std::__1::vector.9"* %83, %"class.std::__1::vector.9"** %85, align 8
  %86 = bitcast %"class.std::__1::tuple"* %9 to i8*
  call void @llvm.lifetime.start.p0i8(i64 16, i8* nonnull %86) #14
  %87 = inttoptr i64 %73 to %"class.extensions::PermissionMessage"*
  %88 = getelementptr inbounds %"class.extensions::PermissionMessage", %"class.extensions::PermissionMessage"* %87, i64 0, i32 1
  %89 = getelementptr inbounds %"class.extensions::PermissionMessage", %"class.extensions::PermissionMessage"* %87, i64 0, i32 3
  %90 = getelementptr inbounds %"class.std::__1::tuple", %"class.std::__1::tuple"* %9, i64 0, i32 0, i32 0, i32 0
  store %"class.std::__1::basic_string"* %88, %"class.std::__1::basic_string"** %90, align 8
  %91 = getelementptr inbounds %"class.std::__1::tuple", %"class.std::__1::tuple"* %9, i64 0, i32 0, i32 1, i32 0
  store %"class.std::__1::vector.9"* %89, %"class.std::__1::vector.9"** %91, align 8
  %92 = getelementptr inbounds %"struct.std::__1::__tuple_less", %"struct.std::__1::__tuple_less"* %7, i64 0, i32 0
  call void @llvm.lifetime.start.p0i8(i64 1, i8* nonnull %92) #14
  %93 = call zeroext i1 @_ZNSt3__112__tuple_lessILm2EEclINS_5tupleIJRKNS_12basic_stringIDsNS_11char_traitsIDsEENS_9allocatorIDsEEEERKNS_6vectorIS9_NS7_IS9_EEEEEEESH_EEbRKT_RKT0_(%"struct.std::__1::__tuple_less"* nonnull %7, %"class.std::__1::tuple"* nonnull dereferenceable(16) %8, %"class.std::__1::tuple"* nonnull dereferenceable(16) %9) #14
  call void @llvm.lifetime.end.p0i8(i64 1, i8* nonnull %92) #14
  call void @llvm.lifetime.end.p0i8(i64 16, i8* nonnull %86) #14
  call void @llvm.lifetime.end.p0i8(i64 16, i8* nonnull %80) #14
  br i1 %93, label %94, label %98

94:                                               ; preds = %77
  %95 = load i64, i64* %78, align 8
  %96 = bitcast %"class.extensions::(anonymous namespace)::ComparablePermission"* %2 to i64*
  %97 = load i64, i64* %96, align 8
  store i64 %97, i64* %78, align 8
  store i64 %95, i64* %96, align 8
  br label %98

98:                                               ; preds = %77, %94, %48, %67, %47, %74
  %99 = phi i32 [ 1, %74 ], [ 0, %47 ], [ 2, %67 ], [ 1, %48 ], [ 2, %94 ], [ 1, %77 ]
  ret i32 %99
}

; Function Attrs: nounwind ssp uwtable
define internal fastcc i32 @_ZNSt3__17__sort4IRNS_6__lessIN10extensions12_GLOBAL__N_120ComparablePermissionES4_EEPS4_EEjT0_S8_S8_S8_T_(%"class.extensions::(anonymous namespace)::ComparablePermission"* nocapture, %"class.extensions::(anonymous namespace)::ComparablePermission"* nocapture, %"class.extensions::(anonymous namespace)::ComparablePermission"* nocapture, %"class.extensions::(anonymous namespace)::ComparablePermission"* nocapture) unnamed_addr #2 {
  %5 = alloca %"struct.std::__1::__tuple_less", align 1
  %6 = alloca %"class.std::__1::tuple", align 8
  %7 = alloca %"class.std::__1::tuple", align 8
  %8 = alloca %"struct.std::__1::__tuple_less", align 1
  %9 = alloca %"class.std::__1::tuple", align 8
  %10 = alloca %"class.std::__1::tuple", align 8
  %11 = alloca %"struct.std::__1::__tuple_less", align 1
  %12 = alloca %"class.std::__1::tuple", align 8
  %13 = alloca %"class.std::__1::tuple", align 8
  %14 = tail call fastcc i32 @_ZNSt3__17__sort3IRNS_6__lessIN10extensions12_GLOBAL__N_120ComparablePermissionES4_EEPS4_EEjT0_S8_S8_T_(%"class.extensions::(anonymous namespace)::ComparablePermission"* %0, %"class.extensions::(anonymous namespace)::ComparablePermission"* %1, %"class.extensions::(anonymous namespace)::ComparablePermission"* %2)
  %15 = bitcast %"class.std::__1::tuple"* %12 to i8*
  call void @llvm.lifetime.start.p0i8(i64 16, i8* nonnull %15) #14
  %16 = getelementptr inbounds %"class.extensions::(anonymous namespace)::ComparablePermission", %"class.extensions::(anonymous namespace)::ComparablePermission"* %3, i64 0, i32 0
  %17 = load %"class.extensions::PermissionMessage"*, %"class.extensions::PermissionMessage"** %16, align 8
  %18 = getelementptr inbounds %"class.extensions::PermissionMessage", %"class.extensions::PermissionMessage"* %17, i64 0, i32 1
  %19 = getelementptr inbounds %"class.extensions::PermissionMessage", %"class.extensions::PermissionMessage"* %17, i64 0, i32 3
  %20 = getelementptr inbounds %"class.std::__1::tuple", %"class.std::__1::tuple"* %12, i64 0, i32 0, i32 0, i32 0
  store %"class.std::__1::basic_string"* %18, %"class.std::__1::basic_string"** %20, align 8
  %21 = getelementptr inbounds %"class.std::__1::tuple", %"class.std::__1::tuple"* %12, i64 0, i32 0, i32 1, i32 0
  store %"class.std::__1::vector.9"* %19, %"class.std::__1::vector.9"** %21, align 8
  %22 = bitcast %"class.std::__1::tuple"* %13 to i8*
  call void @llvm.lifetime.start.p0i8(i64 16, i8* nonnull %22) #14
  %23 = getelementptr inbounds %"class.extensions::(anonymous namespace)::ComparablePermission", %"class.extensions::(anonymous namespace)::ComparablePermission"* %2, i64 0, i32 0
  %24 = load %"class.extensions::PermissionMessage"*, %"class.extensions::PermissionMessage"** %23, align 8
  %25 = getelementptr inbounds %"class.extensions::PermissionMessage", %"class.extensions::PermissionMessage"* %24, i64 0, i32 1
  %26 = getelementptr inbounds %"class.extensions::PermissionMessage", %"class.extensions::PermissionMessage"* %24, i64 0, i32 3
  %27 = getelementptr inbounds %"class.std::__1::tuple", %"class.std::__1::tuple"* %13, i64 0, i32 0, i32 0, i32 0
  store %"class.std::__1::basic_string"* %25, %"class.std::__1::basic_string"** %27, align 8
  %28 = getelementptr inbounds %"class.std::__1::tuple", %"class.std::__1::tuple"* %13, i64 0, i32 0, i32 1, i32 0
  store %"class.std::__1::vector.9"* %26, %"class.std::__1::vector.9"** %28, align 8
  %29 = getelementptr inbounds %"struct.std::__1::__tuple_less", %"struct.std::__1::__tuple_less"* %11, i64 0, i32 0
  call void @llvm.lifetime.start.p0i8(i64 1, i8* nonnull %29) #14
  %30 = call zeroext i1 @_ZNSt3__112__tuple_lessILm2EEclINS_5tupleIJRKNS_12basic_stringIDsNS_11char_traitsIDsEENS_9allocatorIDsEEEERKNS_6vectorIS9_NS7_IS9_EEEEEEESH_EEbRKT_RKT0_(%"struct.std::__1::__tuple_less"* nonnull %11, %"class.std::__1::tuple"* nonnull dereferenceable(16) %12, %"class.std::__1::tuple"* nonnull dereferenceable(16) %13) #14
  call void @llvm.lifetime.end.p0i8(i64 1, i8* nonnull %29) #14
  call void @llvm.lifetime.end.p0i8(i64 16, i8* nonnull %22) #14
  call void @llvm.lifetime.end.p0i8(i64 16, i8* nonnull %15) #14
  br i1 %30, label %31, label %77

31:                                               ; preds = %4
  %32 = bitcast %"class.extensions::(anonymous namespace)::ComparablePermission"* %2 to i64*
  %33 = load i64, i64* %32, align 8
  %34 = bitcast %"class.extensions::(anonymous namespace)::ComparablePermission"* %3 to i64*
  %35 = load i64, i64* %34, align 8
  store i64 %35, i64* %32, align 8
  store i64 %33, i64* %34, align 8
  %36 = add i32 %14, 1
  %37 = bitcast %"class.std::__1::tuple"* %6 to i8*
  call void @llvm.lifetime.start.p0i8(i64 16, i8* nonnull %37) #14
  %38 = load %"class.extensions::PermissionMessage"*, %"class.extensions::PermissionMessage"** %23, align 8
  %39 = getelementptr inbounds %"class.extensions::PermissionMessage", %"class.extensions::PermissionMessage"* %38, i64 0, i32 1
  %40 = getelementptr inbounds %"class.extensions::PermissionMessage", %"class.extensions::PermissionMessage"* %38, i64 0, i32 3
  %41 = getelementptr inbounds %"class.std::__1::tuple", %"class.std::__1::tuple"* %6, i64 0, i32 0, i32 0, i32 0
  store %"class.std::__1::basic_string"* %39, %"class.std::__1::basic_string"** %41, align 8
  %42 = getelementptr inbounds %"class.std::__1::tuple", %"class.std::__1::tuple"* %6, i64 0, i32 0, i32 1, i32 0
  store %"class.std::__1::vector.9"* %40, %"class.std::__1::vector.9"** %42, align 8
  %43 = bitcast %"class.std::__1::tuple"* %7 to i8*
  call void @llvm.lifetime.start.p0i8(i64 16, i8* nonnull %43) #14
  %44 = getelementptr inbounds %"class.extensions::(anonymous namespace)::ComparablePermission", %"class.extensions::(anonymous namespace)::ComparablePermission"* %1, i64 0, i32 0
  %45 = load %"class.extensions::PermissionMessage"*, %"class.extensions::PermissionMessage"** %44, align 8
  %46 = getelementptr inbounds %"class.extensions::PermissionMessage", %"class.extensions::PermissionMessage"* %45, i64 0, i32 1
  %47 = getelementptr inbounds %"class.extensions::PermissionMessage", %"class.extensions::PermissionMessage"* %45, i64 0, i32 3
  %48 = getelementptr inbounds %"class.std::__1::tuple", %"class.std::__1::tuple"* %7, i64 0, i32 0, i32 0, i32 0
  store %"class.std::__1::basic_string"* %46, %"class.std::__1::basic_string"** %48, align 8
  %49 = getelementptr inbounds %"class.std::__1::tuple", %"class.std::__1::tuple"* %7, i64 0, i32 0, i32 1, i32 0
  store %"class.std::__1::vector.9"* %47, %"class.std::__1::vector.9"** %49, align 8
  %50 = getelementptr inbounds %"struct.std::__1::__tuple_less", %"struct.std::__1::__tuple_less"* %5, i64 0, i32 0
  call void @llvm.lifetime.start.p0i8(i64 1, i8* nonnull %50) #14
  %51 = call zeroext i1 @_ZNSt3__112__tuple_lessILm2EEclINS_5tupleIJRKNS_12basic_stringIDsNS_11char_traitsIDsEENS_9allocatorIDsEEEERKNS_6vectorIS9_NS7_IS9_EEEEEEESH_EEbRKT_RKT0_(%"struct.std::__1::__tuple_less"* nonnull %5, %"class.std::__1::tuple"* nonnull dereferenceable(16) %6, %"class.std::__1::tuple"* nonnull dereferenceable(16) %7) #14
  call void @llvm.lifetime.end.p0i8(i64 1, i8* nonnull %50) #14
  call void @llvm.lifetime.end.p0i8(i64 16, i8* nonnull %43) #14
  call void @llvm.lifetime.end.p0i8(i64 16, i8* nonnull %37) #14
  br i1 %51, label %52, label %77

52:                                               ; preds = %31
  %53 = bitcast %"class.extensions::(anonymous namespace)::ComparablePermission"* %1 to i64*
  %54 = load i64, i64* %53, align 8
  %55 = load i64, i64* %32, align 8
  store i64 %55, i64* %53, align 8
  store i64 %54, i64* %32, align 8
  %56 = add i32 %14, 2
  %57 = bitcast %"class.std::__1::tuple"* %9 to i8*
  call void @llvm.lifetime.start.p0i8(i64 16, i8* nonnull %57) #14
  %58 = load %"class.extensions::PermissionMessage"*, %"class.extensions::PermissionMessage"** %44, align 8
  %59 = getelementptr inbounds %"class.extensions::PermissionMessage", %"class.extensions::PermissionMessage"* %58, i64 0, i32 1
  %60 = getelementptr inbounds %"class.extensions::PermissionMessage", %"class.extensions::PermissionMessage"* %58, i64 0, i32 3
  %61 = getelementptr inbounds %"class.std::__1::tuple", %"class.std::__1::tuple"* %9, i64 0, i32 0, i32 0, i32 0
  store %"class.std::__1::basic_string"* %59, %"class.std::__1::basic_string"** %61, align 8
  %62 = getelementptr inbounds %"class.std::__1::tuple", %"class.std::__1::tuple"* %9, i64 0, i32 0, i32 1, i32 0
  store %"class.std::__1::vector.9"* %60, %"class.std::__1::vector.9"** %62, align 8
  %63 = bitcast %"class.std::__1::tuple"* %10 to i8*
  call void @llvm.lifetime.start.p0i8(i64 16, i8* nonnull %63) #14
  %64 = getelementptr inbounds %"class.extensions::(anonymous namespace)::ComparablePermission", %"class.extensions::(anonymous namespace)::ComparablePermission"* %0, i64 0, i32 0
  %65 = load %"class.extensions::PermissionMessage"*, %"class.extensions::PermissionMessage"** %64, align 8
  %66 = getelementptr inbounds %"class.extensions::PermissionMessage", %"class.extensions::PermissionMessage"* %65, i64 0, i32 1
  %67 = getelementptr inbounds %"class.extensions::PermissionMessage", %"class.extensions::PermissionMessage"* %65, i64 0, i32 3
  %68 = getelementptr inbounds %"class.std::__1::tuple", %"class.std::__1::tuple"* %10, i64 0, i32 0, i32 0, i32 0
  store %"class.std::__1::basic_string"* %66, %"class.std::__1::basic_string"** %68, align 8
  %69 = getelementptr inbounds %"class.std::__1::tuple", %"class.std::__1::tuple"* %10, i64 0, i32 0, i32 1, i32 0
  store %"class.std::__1::vector.9"* %67, %"class.std::__1::vector.9"** %69, align 8
  %70 = getelementptr inbounds %"struct.std::__1::__tuple_less", %"struct.std::__1::__tuple_less"* %8, i64 0, i32 0
  call void @llvm.lifetime.start.p0i8(i64 1, i8* nonnull %70) #14
  %71 = call zeroext i1 @_ZNSt3__112__tuple_lessILm2EEclINS_5tupleIJRKNS_12basic_stringIDsNS_11char_traitsIDsEENS_9allocatorIDsEEEERKNS_6vectorIS9_NS7_IS9_EEEEEEESH_EEbRKT_RKT0_(%"struct.std::__1::__tuple_less"* nonnull %8, %"class.std::__1::tuple"* nonnull dereferenceable(16) %9, %"class.std::__1::tuple"* nonnull dereferenceable(16) %10) #14
  call void @llvm.lifetime.end.p0i8(i64 1, i8* nonnull %70) #14
  call void @llvm.lifetime.end.p0i8(i64 16, i8* nonnull %63) #14
  call void @llvm.lifetime.end.p0i8(i64 16, i8* nonnull %57) #14
  br i1 %71, label %72, label %77

72:                                               ; preds = %52
  %73 = bitcast %"class.extensions::(anonymous namespace)::ComparablePermission"* %0 to i64*
  %74 = load i64, i64* %73, align 8
  %75 = load i64, i64* %53, align 8
  store i64 %75, i64* %73, align 8
  store i64 %74, i64* %53, align 8
  %76 = add i32 %14, 3
  br label %77

77:                                               ; preds = %31, %72, %52, %4
  %78 = phi i32 [ %76, %72 ], [ %56, %52 ], [ %36, %31 ], [ %14, %4 ]
  ret i32 %78
}

; Function Attrs: nounwind ssp uwtable
define internal fastcc i32 @_ZNSt3__17__sort5IRNS_6__lessIN10extensions12_GLOBAL__N_120ComparablePermissionES4_EEPS4_EEjT0_S8_S8_S8_S8_T_(%"class.extensions::(anonymous namespace)::ComparablePermission"* nocapture, %"class.extensions::(anonymous namespace)::ComparablePermission"* nocapture, %"class.extensions::(anonymous namespace)::ComparablePermission"* nocapture, %"class.extensions::(anonymous namespace)::ComparablePermission"* nocapture, %"class.extensions::(anonymous namespace)::ComparablePermission"* nocapture) unnamed_addr #2 {
  %6 = alloca %"struct.std::__1::__tuple_less", align 1
  %7 = alloca %"class.std::__1::tuple", align 8
  %8 = alloca %"class.std::__1::tuple", align 8
  %9 = alloca %"struct.std::__1::__tuple_less", align 1
  %10 = alloca %"class.std::__1::tuple", align 8
  %11 = alloca %"class.std::__1::tuple", align 8
  %12 = alloca %"struct.std::__1::__tuple_less", align 1
  %13 = alloca %"class.std::__1::tuple", align 8
  %14 = alloca %"class.std::__1::tuple", align 8
  %15 = alloca %"struct.std::__1::__tuple_less", align 1
  %16 = alloca %"class.std::__1::tuple", align 8
  %17 = alloca %"class.std::__1::tuple", align 8
  %18 = tail call fastcc i32 @_ZNSt3__17__sort4IRNS_6__lessIN10extensions12_GLOBAL__N_120ComparablePermissionES4_EEPS4_EEjT0_S8_S8_S8_T_(%"class.extensions::(anonymous namespace)::ComparablePermission"* %0, %"class.extensions::(anonymous namespace)::ComparablePermission"* %1, %"class.extensions::(anonymous namespace)::ComparablePermission"* %2, %"class.extensions::(anonymous namespace)::ComparablePermission"* %3)
  %19 = bitcast %"class.std::__1::tuple"* %16 to i8*
  call void @llvm.lifetime.start.p0i8(i64 16, i8* nonnull %19) #14
  %20 = getelementptr inbounds %"class.extensions::(anonymous namespace)::ComparablePermission", %"class.extensions::(anonymous namespace)::ComparablePermission"* %4, i64 0, i32 0
  %21 = load %"class.extensions::PermissionMessage"*, %"class.extensions::PermissionMessage"** %20, align 8
  %22 = getelementptr inbounds %"class.extensions::PermissionMessage", %"class.extensions::PermissionMessage"* %21, i64 0, i32 1
  %23 = getelementptr inbounds %"class.extensions::PermissionMessage", %"class.extensions::PermissionMessage"* %21, i64 0, i32 3
  %24 = getelementptr inbounds %"class.std::__1::tuple", %"class.std::__1::tuple"* %16, i64 0, i32 0, i32 0, i32 0
  store %"class.std::__1::basic_string"* %22, %"class.std::__1::basic_string"** %24, align 8
  %25 = getelementptr inbounds %"class.std::__1::tuple", %"class.std::__1::tuple"* %16, i64 0, i32 0, i32 1, i32 0
  store %"class.std::__1::vector.9"* %23, %"class.std::__1::vector.9"** %25, align 8
  %26 = bitcast %"class.std::__1::tuple"* %17 to i8*
  call void @llvm.lifetime.start.p0i8(i64 16, i8* nonnull %26) #14
  %27 = getelementptr inbounds %"class.extensions::(anonymous namespace)::ComparablePermission", %"class.extensions::(anonymous namespace)::ComparablePermission"* %3, i64 0, i32 0
  %28 = load %"class.extensions::PermissionMessage"*, %"class.extensions::PermissionMessage"** %27, align 8
  %29 = getelementptr inbounds %"class.extensions::PermissionMessage", %"class.extensions::PermissionMessage"* %28, i64 0, i32 1
  %30 = getelementptr inbounds %"class.extensions::PermissionMessage", %"class.extensions::PermissionMessage"* %28, i64 0, i32 3
  %31 = getelementptr inbounds %"class.std::__1::tuple", %"class.std::__1::tuple"* %17, i64 0, i32 0, i32 0, i32 0
  store %"class.std::__1::basic_string"* %29, %"class.std::__1::basic_string"** %31, align 8
  %32 = getelementptr inbounds %"class.std::__1::tuple", %"class.std::__1::tuple"* %17, i64 0, i32 0, i32 1, i32 0
  store %"class.std::__1::vector.9"* %30, %"class.std::__1::vector.9"** %32, align 8
  %33 = getelementptr inbounds %"struct.std::__1::__tuple_less", %"struct.std::__1::__tuple_less"* %15, i64 0, i32 0
  call void @llvm.lifetime.start.p0i8(i64 1, i8* nonnull %33) #14
  %34 = call zeroext i1 @_ZNSt3__112__tuple_lessILm2EEclINS_5tupleIJRKNS_12basic_stringIDsNS_11char_traitsIDsEENS_9allocatorIDsEEEERKNS_6vectorIS9_NS7_IS9_EEEEEEESH_EEbRKT_RKT0_(%"struct.std::__1::__tuple_less"* nonnull %15, %"class.std::__1::tuple"* nonnull dereferenceable(16) %16, %"class.std::__1::tuple"* nonnull dereferenceable(16) %17) #14
  call void @llvm.lifetime.end.p0i8(i64 1, i8* nonnull %33) #14
  call void @llvm.lifetime.end.p0i8(i64 16, i8* nonnull %26) #14
  call void @llvm.lifetime.end.p0i8(i64 16, i8* nonnull %19) #14
  br i1 %34, label %35, label %101

35:                                               ; preds = %5
  %36 = bitcast %"class.extensions::(anonymous namespace)::ComparablePermission"* %3 to i64*
  %37 = load i64, i64* %36, align 8
  %38 = bitcast %"class.extensions::(anonymous namespace)::ComparablePermission"* %4 to i64*
  %39 = load i64, i64* %38, align 8
  store i64 %39, i64* %36, align 8
  store i64 %37, i64* %38, align 8
  %40 = add i32 %18, 1
  %41 = bitcast %"class.std::__1::tuple"* %10 to i8*
  call void @llvm.lifetime.start.p0i8(i64 16, i8* nonnull %41) #14
  %42 = load %"class.extensions::PermissionMessage"*, %"class.extensions::PermissionMessage"** %27, align 8
  %43 = getelementptr inbounds %"class.extensions::PermissionMessage", %"class.extensions::PermissionMessage"* %42, i64 0, i32 1
  %44 = getelementptr inbounds %"class.extensions::PermissionMessage", %"class.extensions::PermissionMessage"* %42, i64 0, i32 3
  %45 = getelementptr inbounds %"class.std::__1::tuple", %"class.std::__1::tuple"* %10, i64 0, i32 0, i32 0, i32 0
  store %"class.std::__1::basic_string"* %43, %"class.std::__1::basic_string"** %45, align 8
  %46 = getelementptr inbounds %"class.std::__1::tuple", %"class.std::__1::tuple"* %10, i64 0, i32 0, i32 1, i32 0
  store %"class.std::__1::vector.9"* %44, %"class.std::__1::vector.9"** %46, align 8
  %47 = bitcast %"class.std::__1::tuple"* %11 to i8*
  call void @llvm.lifetime.start.p0i8(i64 16, i8* nonnull %47) #14
  %48 = getelementptr inbounds %"class.extensions::(anonymous namespace)::ComparablePermission", %"class.extensions::(anonymous namespace)::ComparablePermission"* %2, i64 0, i32 0
  %49 = load %"class.extensions::PermissionMessage"*, %"class.extensions::PermissionMessage"** %48, align 8
  %50 = getelementptr inbounds %"class.extensions::PermissionMessage", %"class.extensions::PermissionMessage"* %49, i64 0, i32 1
  %51 = getelementptr inbounds %"class.extensions::PermissionMessage", %"class.extensions::PermissionMessage"* %49, i64 0, i32 3
  %52 = getelementptr inbounds %"class.std::__1::tuple", %"class.std::__1::tuple"* %11, i64 0, i32 0, i32 0, i32 0
  store %"class.std::__1::basic_string"* %50, %"class.std::__1::basic_string"** %52, align 8
  %53 = getelementptr inbounds %"class.std::__1::tuple", %"class.std::__1::tuple"* %11, i64 0, i32 0, i32 1, i32 0
  store %"class.std::__1::vector.9"* %51, %"class.std::__1::vector.9"** %53, align 8
  %54 = getelementptr inbounds %"struct.std::__1::__tuple_less", %"struct.std::__1::__tuple_less"* %9, i64 0, i32 0
  call void @llvm.lifetime.start.p0i8(i64 1, i8* nonnull %54) #14
  %55 = call zeroext i1 @_ZNSt3__112__tuple_lessILm2EEclINS_5tupleIJRKNS_12basic_stringIDsNS_11char_traitsIDsEENS_9allocatorIDsEEEERKNS_6vectorIS9_NS7_IS9_EEEEEEESH_EEbRKT_RKT0_(%"struct.std::__1::__tuple_less"* nonnull %9, %"class.std::__1::tuple"* nonnull dereferenceable(16) %10, %"class.std::__1::tuple"* nonnull dereferenceable(16) %11) #14
  call void @llvm.lifetime.end.p0i8(i64 1, i8* nonnull %54) #14
  call void @llvm.lifetime.end.p0i8(i64 16, i8* nonnull %47) #14
  call void @llvm.lifetime.end.p0i8(i64 16, i8* nonnull %41) #14
  br i1 %55, label %56, label %101

56:                                               ; preds = %35
  %57 = bitcast %"class.extensions::(anonymous namespace)::ComparablePermission"* %2 to i64*
  %58 = load i64, i64* %57, align 8
  %59 = load i64, i64* %36, align 8
  store i64 %59, i64* %57, align 8
  store i64 %58, i64* %36, align 8
  %60 = add i32 %18, 2
  %61 = bitcast %"class.std::__1::tuple"* %7 to i8*
  call void @llvm.lifetime.start.p0i8(i64 16, i8* nonnull %61) #14
  %62 = load %"class.extensions::PermissionMessage"*, %"class.extensions::PermissionMessage"** %48, align 8
  %63 = getelementptr inbounds %"class.extensions::PermissionMessage", %"class.extensions::PermissionMessage"* %62, i64 0, i32 1
  %64 = getelementptr inbounds %"class.extensions::PermissionMessage", %"class.extensions::PermissionMessage"* %62, i64 0, i32 3
  %65 = getelementptr inbounds %"class.std::__1::tuple", %"class.std::__1::tuple"* %7, i64 0, i32 0, i32 0, i32 0
  store %"class.std::__1::basic_string"* %63, %"class.std::__1::basic_string"** %65, align 8
  %66 = getelementptr inbounds %"class.std::__1::tuple", %"class.std::__1::tuple"* %7, i64 0, i32 0, i32 1, i32 0
  store %"class.std::__1::vector.9"* %64, %"class.std::__1::vector.9"** %66, align 8
  %67 = bitcast %"class.std::__1::tuple"* %8 to i8*
  call void @llvm.lifetime.start.p0i8(i64 16, i8* nonnull %67) #14
  %68 = getelementptr inbounds %"class.extensions::(anonymous namespace)::ComparablePermission", %"class.extensions::(anonymous namespace)::ComparablePermission"* %1, i64 0, i32 0
  %69 = load %"class.extensions::PermissionMessage"*, %"class.extensions::PermissionMessage"** %68, align 8
  %70 = getelementptr inbounds %"class.extensions::PermissionMessage", %"class.extensions::PermissionMessage"* %69, i64 0, i32 1
  %71 = getelementptr inbounds %"class.extensions::PermissionMessage", %"class.extensions::PermissionMessage"* %69, i64 0, i32 3
  %72 = getelementptr inbounds %"class.std::__1::tuple", %"class.std::__1::tuple"* %8, i64 0, i32 0, i32 0, i32 0
  store %"class.std::__1::basic_string"* %70, %"class.std::__1::basic_string"** %72, align 8
  %73 = getelementptr inbounds %"class.std::__1::tuple", %"class.std::__1::tuple"* %8, i64 0, i32 0, i32 1, i32 0
  store %"class.std::__1::vector.9"* %71, %"class.std::__1::vector.9"** %73, align 8
  %74 = getelementptr inbounds %"struct.std::__1::__tuple_less", %"struct.std::__1::__tuple_less"* %6, i64 0, i32 0
  call void @llvm.lifetime.start.p0i8(i64 1, i8* nonnull %74) #14
  %75 = call zeroext i1 @_ZNSt3__112__tuple_lessILm2EEclINS_5tupleIJRKNS_12basic_stringIDsNS_11char_traitsIDsEENS_9allocatorIDsEEEERKNS_6vectorIS9_NS7_IS9_EEEEEEESH_EEbRKT_RKT0_(%"struct.std::__1::__tuple_less"* nonnull %6, %"class.std::__1::tuple"* nonnull dereferenceable(16) %7, %"class.std::__1::tuple"* nonnull dereferenceable(16) %8) #14
  call void @llvm.lifetime.end.p0i8(i64 1, i8* nonnull %74) #14
  call void @llvm.lifetime.end.p0i8(i64 16, i8* nonnull %67) #14
  call void @llvm.lifetime.end.p0i8(i64 16, i8* nonnull %61) #14
  br i1 %75, label %76, label %101

76:                                               ; preds = %56
  %77 = bitcast %"class.extensions::(anonymous namespace)::ComparablePermission"* %1 to i64*
  %78 = load i64, i64* %77, align 8
  %79 = load i64, i64* %57, align 8
  store i64 %79, i64* %77, align 8
  store i64 %78, i64* %57, align 8
  %80 = add i32 %18, 3
  %81 = bitcast %"class.std::__1::tuple"* %13 to i8*
  call void @llvm.lifetime.start.p0i8(i64 16, i8* nonnull %81) #14
  %82 = load %"class.extensions::PermissionMessage"*, %"class.extensions::PermissionMessage"** %68, align 8
  %83 = getelementptr inbounds %"class.extensions::PermissionMessage", %"class.extensions::PermissionMessage"* %82, i64 0, i32 1
  %84 = getelementptr inbounds %"class.extensions::PermissionMessage", %"class.extensions::PermissionMessage"* %82, i64 0, i32 3
  %85 = getelementptr inbounds %"class.std::__1::tuple", %"class.std::__1::tuple"* %13, i64 0, i32 0, i32 0, i32 0
  store %"class.std::__1::basic_string"* %83, %"class.std::__1::basic_string"** %85, align 8
  %86 = getelementptr inbounds %"class.std::__1::tuple", %"class.std::__1::tuple"* %13, i64 0, i32 0, i32 1, i32 0
  store %"class.std::__1::vector.9"* %84, %"class.std::__1::vector.9"** %86, align 8
  %87 = bitcast %"class.std::__1::tuple"* %14 to i8*
  call void @llvm.lifetime.start.p0i8(i64 16, i8* nonnull %87) #14
  %88 = getelementptr inbounds %"class.extensions::(anonymous namespace)::ComparablePermission", %"class.extensions::(anonymous namespace)::ComparablePermission"* %0, i64 0, i32 0
  %89 = load %"class.extensions::PermissionMessage"*, %"class.extensions::PermissionMessage"** %88, align 8
  %90 = getelementptr inbounds %"class.extensions::PermissionMessage", %"class.extensions::PermissionMessage"* %89, i64 0, i32 1
  %91 = getelementptr inbounds %"class.extensions::PermissionMessage", %"class.extensions::PermissionMessage"* %89, i64 0, i32 3
  %92 = getelementptr inbounds %"class.std::__1::tuple", %"class.std::__1::tuple"* %14, i64 0, i32 0, i32 0, i32 0
  store %"class.std::__1::basic_string"* %90, %"class.std::__1::basic_string"** %92, align 8
  %93 = getelementptr inbounds %"class.std::__1::tuple", %"class.std::__1::tuple"* %14, i64 0, i32 0, i32 1, i32 0
  store %"class.std::__1::vector.9"* %91, %"class.std::__1::vector.9"** %93, align 8
  %94 = getelementptr inbounds %"struct.std::__1::__tuple_less", %"struct.std::__1::__tuple_less"* %12, i64 0, i32 0
  call void @llvm.lifetime.start.p0i8(i64 1, i8* nonnull %94) #14
  %95 = call zeroext i1 @_ZNSt3__112__tuple_lessILm2EEclINS_5tupleIJRKNS_12basic_stringIDsNS_11char_traitsIDsEENS_9allocatorIDsEEEERKNS_6vectorIS9_NS7_IS9_EEEEEEESH_EEbRKT_RKT0_(%"struct.std::__1::__tuple_less"* nonnull %12, %"class.std::__1::tuple"* nonnull dereferenceable(16) %13, %"class.std::__1::tuple"* nonnull dereferenceable(16) %14) #14
  call void @llvm.lifetime.end.p0i8(i64 1, i8* nonnull %94) #14
  call void @llvm.lifetime.end.p0i8(i64 16, i8* nonnull %87) #14
  call void @llvm.lifetime.end.p0i8(i64 16, i8* nonnull %81) #14
  br i1 %95, label %96, label %101

96:                                               ; preds = %76
  %97 = bitcast %"class.extensions::(anonymous namespace)::ComparablePermission"* %0 to i64*
  %98 = load i64, i64* %97, align 8
  %99 = load i64, i64* %77, align 8
  store i64 %99, i64* %97, align 8
  store i64 %98, i64* %77, align 8
  %100 = add i32 %18, 4
  br label %101

101:                                              ; preds = %35, %76, %96, %56, %5
  %102 = phi i32 [ %100, %96 ], [ %80, %76 ], [ %60, %56 ], [ %40, %35 ], [ %18, %5 ]
  ret i32 %102
}

; Function Attrs: nounwind ssp uwtable
define internal fastcc zeroext i1 @_ZNSt3__127__insertion_sort_incompleteIRNS_6__lessIN10extensions12_GLOBAL__N_120ComparablePermissionES4_EEPS4_EEbT0_S8_T_(%"class.extensions::(anonymous namespace)::ComparablePermission"*, %"class.extensions::(anonymous namespace)::ComparablePermission"*) unnamed_addr #2 {
  %3 = alloca %"struct.std::__1::__tuple_less", align 1
  %4 = alloca %"class.std::__1::tuple", align 8
  %5 = alloca %"class.std::__1::tuple", align 8
  %6 = alloca %"struct.std::__1::__tuple_less", align 1
  %7 = alloca %"class.std::__1::tuple", align 8
  %8 = alloca %"class.std::__1::tuple", align 8
  %9 = alloca %"struct.std::__1::__tuple_less", align 1
  %10 = alloca %"class.std::__1::tuple", align 8
  %11 = alloca %"class.std::__1::tuple", align 8
  %12 = ptrtoint %"class.extensions::(anonymous namespace)::ComparablePermission"* %1 to i64
  %13 = ptrtoint %"class.extensions::(anonymous namespace)::ComparablePermission"* %0 to i64
  %14 = sub i64 %12, %13
  %15 = ashr exact i64 %14, 3
  switch i64 %15, label %54 [
    i64 0, label %120
    i64 1, label %120
    i64 2, label %16
    i64 3, label %39
    i64 4, label %43
    i64 5, label %48
  ]

16:                                               ; preds = %2
  %17 = getelementptr inbounds %"class.extensions::(anonymous namespace)::ComparablePermission", %"class.extensions::(anonymous namespace)::ComparablePermission"* %1, i64 -1
  %18 = bitcast %"class.std::__1::tuple"* %10 to i8*
  call void @llvm.lifetime.start.p0i8(i64 16, i8* nonnull %18) #14
  %19 = getelementptr inbounds %"class.extensions::(anonymous namespace)::ComparablePermission", %"class.extensions::(anonymous namespace)::ComparablePermission"* %17, i64 0, i32 0
  %20 = load %"class.extensions::PermissionMessage"*, %"class.extensions::PermissionMessage"** %19, align 8
  %21 = getelementptr inbounds %"class.extensions::PermissionMessage", %"class.extensions::PermissionMessage"* %20, i64 0, i32 1
  %22 = getelementptr inbounds %"class.extensions::PermissionMessage", %"class.extensions::PermissionMessage"* %20, i64 0, i32 3
  %23 = getelementptr inbounds %"class.std::__1::tuple", %"class.std::__1::tuple"* %10, i64 0, i32 0, i32 0, i32 0
  store %"class.std::__1::basic_string"* %21, %"class.std::__1::basic_string"** %23, align 8
  %24 = getelementptr inbounds %"class.std::__1::tuple", %"class.std::__1::tuple"* %10, i64 0, i32 0, i32 1, i32 0
  store %"class.std::__1::vector.9"* %22, %"class.std::__1::vector.9"** %24, align 8
  %25 = bitcast %"class.std::__1::tuple"* %11 to i8*
  call void @llvm.lifetime.start.p0i8(i64 16, i8* nonnull %25) #14
  %26 = getelementptr inbounds %"class.extensions::(anonymous namespace)::ComparablePermission", %"class.extensions::(anonymous namespace)::ComparablePermission"* %0, i64 0, i32 0
  %27 = load %"class.extensions::PermissionMessage"*, %"class.extensions::PermissionMessage"** %26, align 8
  %28 = getelementptr inbounds %"class.extensions::PermissionMessage", %"class.extensions::PermissionMessage"* %27, i64 0, i32 1
  %29 = getelementptr inbounds %"class.extensions::PermissionMessage", %"class.extensions::PermissionMessage"* %27, i64 0, i32 3
  %30 = getelementptr inbounds %"class.std::__1::tuple", %"class.std::__1::tuple"* %11, i64 0, i32 0, i32 0, i32 0
  store %"class.std::__1::basic_string"* %28, %"class.std::__1::basic_string"** %30, align 8
  %31 = getelementptr inbounds %"class.std::__1::tuple", %"class.std::__1::tuple"* %11, i64 0, i32 0, i32 1, i32 0
  store %"class.std::__1::vector.9"* %29, %"class.std::__1::vector.9"** %31, align 8
  %32 = getelementptr inbounds %"struct.std::__1::__tuple_less", %"struct.std::__1::__tuple_less"* %9, i64 0, i32 0
  call void @llvm.lifetime.start.p0i8(i64 1, i8* nonnull %32) #14
  %33 = call zeroext i1 @_ZNSt3__112__tuple_lessILm2EEclINS_5tupleIJRKNS_12basic_stringIDsNS_11char_traitsIDsEENS_9allocatorIDsEEEERKNS_6vectorIS9_NS7_IS9_EEEEEEESH_EEbRKT_RKT0_(%"struct.std::__1::__tuple_less"* nonnull %9, %"class.std::__1::tuple"* nonnull dereferenceable(16) %10, %"class.std::__1::tuple"* nonnull dereferenceable(16) %11) #14
  call void @llvm.lifetime.end.p0i8(i64 1, i8* nonnull %32) #14
  call void @llvm.lifetime.end.p0i8(i64 16, i8* nonnull %25) #14
  call void @llvm.lifetime.end.p0i8(i64 16, i8* nonnull %18) #14
  br i1 %33, label %34, label %120

34:                                               ; preds = %16
  %35 = bitcast %"class.extensions::(anonymous namespace)::ComparablePermission"* %0 to i64*
  %36 = load i64, i64* %35, align 8
  %37 = bitcast %"class.extensions::(anonymous namespace)::ComparablePermission"* %17 to i64*
  %38 = load i64, i64* %37, align 8
  store i64 %38, i64* %35, align 8
  store i64 %36, i64* %37, align 8
  br label %120

39:                                               ; preds = %2
  %40 = getelementptr inbounds %"class.extensions::(anonymous namespace)::ComparablePermission", %"class.extensions::(anonymous namespace)::ComparablePermission"* %0, i64 1
  %41 = getelementptr inbounds %"class.extensions::(anonymous namespace)::ComparablePermission", %"class.extensions::(anonymous namespace)::ComparablePermission"* %1, i64 -1
  %42 = tail call fastcc i32 @_ZNSt3__17__sort3IRNS_6__lessIN10extensions12_GLOBAL__N_120ComparablePermissionES4_EEPS4_EEjT0_S8_S8_T_(%"class.extensions::(anonymous namespace)::ComparablePermission"* %0, %"class.extensions::(anonymous namespace)::ComparablePermission"* %40, %"class.extensions::(anonymous namespace)::ComparablePermission"* %41)
  br label %120

43:                                               ; preds = %2
  %44 = getelementptr inbounds %"class.extensions::(anonymous namespace)::ComparablePermission", %"class.extensions::(anonymous namespace)::ComparablePermission"* %0, i64 1
  %45 = getelementptr inbounds %"class.extensions::(anonymous namespace)::ComparablePermission", %"class.extensions::(anonymous namespace)::ComparablePermission"* %0, i64 2
  %46 = getelementptr inbounds %"class.extensions::(anonymous namespace)::ComparablePermission", %"class.extensions::(anonymous namespace)::ComparablePermission"* %1, i64 -1
  %47 = tail call fastcc i32 @_ZNSt3__17__sort4IRNS_6__lessIN10extensions12_GLOBAL__N_120ComparablePermissionES4_EEPS4_EEjT0_S8_S8_S8_T_(%"class.extensions::(anonymous namespace)::ComparablePermission"* %0, %"class.extensions::(anonymous namespace)::ComparablePermission"* %44, %"class.extensions::(anonymous namespace)::ComparablePermission"* %45, %"class.extensions::(anonymous namespace)::ComparablePermission"* %46)
  br label %120

48:                                               ; preds = %2
  %49 = getelementptr inbounds %"class.extensions::(anonymous namespace)::ComparablePermission", %"class.extensions::(anonymous namespace)::ComparablePermission"* %0, i64 1
  %50 = getelementptr inbounds %"class.extensions::(anonymous namespace)::ComparablePermission", %"class.extensions::(anonymous namespace)::ComparablePermission"* %0, i64 2
  %51 = getelementptr inbounds %"class.extensions::(anonymous namespace)::ComparablePermission", %"class.extensions::(anonymous namespace)::ComparablePermission"* %0, i64 3
  %52 = getelementptr inbounds %"class.extensions::(anonymous namespace)::ComparablePermission", %"class.extensions::(anonymous namespace)::ComparablePermission"* %1, i64 -1
  %53 = tail call fastcc i32 @_ZNSt3__17__sort5IRNS_6__lessIN10extensions12_GLOBAL__N_120ComparablePermissionES4_EEPS4_EEjT0_S8_S8_S8_S8_T_(%"class.extensions::(anonymous namespace)::ComparablePermission"* %0, %"class.extensions::(anonymous namespace)::ComparablePermission"* %49, %"class.extensions::(anonymous namespace)::ComparablePermission"* %50, %"class.extensions::(anonymous namespace)::ComparablePermission"* %51, %"class.extensions::(anonymous namespace)::ComparablePermission"* %52)
  br label %120

54:                                               ; preds = %2
  %55 = getelementptr inbounds %"class.extensions::(anonymous namespace)::ComparablePermission", %"class.extensions::(anonymous namespace)::ComparablePermission"* %0, i64 2
  %56 = getelementptr inbounds %"class.extensions::(anonymous namespace)::ComparablePermission", %"class.extensions::(anonymous namespace)::ComparablePermission"* %0, i64 1
  %57 = tail call fastcc i32 @_ZNSt3__17__sort3IRNS_6__lessIN10extensions12_GLOBAL__N_120ComparablePermissionES4_EEPS4_EEjT0_S8_S8_T_(%"class.extensions::(anonymous namespace)::ComparablePermission"* %0, %"class.extensions::(anonymous namespace)::ComparablePermission"* %56, %"class.extensions::(anonymous namespace)::ComparablePermission"* %55)
  %58 = getelementptr inbounds %"class.extensions::(anonymous namespace)::ComparablePermission", %"class.extensions::(anonymous namespace)::ComparablePermission"* %0, i64 3
  %59 = icmp eq %"class.extensions::(anonymous namespace)::ComparablePermission"* %58, %1
  br i1 %59, label %120, label %60

60:                                               ; preds = %54
  %61 = bitcast %"class.std::__1::tuple"* %4 to i8*
  %62 = getelementptr inbounds %"class.std::__1::tuple", %"class.std::__1::tuple"* %4, i64 0, i32 0, i32 0, i32 0
  %63 = getelementptr inbounds %"class.std::__1::tuple", %"class.std::__1::tuple"* %4, i64 0, i32 0, i32 1, i32 0
  %64 = bitcast %"class.std::__1::tuple"* %5 to i8*
  %65 = getelementptr inbounds %"class.std::__1::tuple", %"class.std::__1::tuple"* %5, i64 0, i32 0, i32 0, i32 0
  %66 = getelementptr inbounds %"class.std::__1::tuple", %"class.std::__1::tuple"* %5, i64 0, i32 0, i32 1, i32 0
  %67 = getelementptr inbounds %"struct.std::__1::__tuple_less", %"struct.std::__1::__tuple_less"* %3, i64 0, i32 0
  %68 = bitcast %"class.std::__1::tuple"* %7 to i8*
  %69 = getelementptr inbounds %"class.std::__1::tuple", %"class.std::__1::tuple"* %7, i64 0, i32 0, i32 0, i32 0
  %70 = getelementptr inbounds %"class.std::__1::tuple", %"class.std::__1::tuple"* %7, i64 0, i32 0, i32 1, i32 0
  %71 = bitcast %"class.std::__1::tuple"* %8 to i8*
  %72 = getelementptr inbounds %"class.std::__1::tuple", %"class.std::__1::tuple"* %8, i64 0, i32 0, i32 0, i32 0
  %73 = getelementptr inbounds %"class.std::__1::tuple", %"class.std::__1::tuple"* %8, i64 0, i32 0, i32 1, i32 0
  %74 = getelementptr inbounds %"struct.std::__1::__tuple_less", %"struct.std::__1::__tuple_less"* %6, i64 0, i32 0
  br label %75

75:                                               ; preds = %60, %113
  %76 = phi %"class.extensions::(anonymous namespace)::ComparablePermission"* [ %58, %60 ], [ %115, %113 ]
  %77 = phi i32 [ 0, %60 ], [ %114, %113 ]
  %78 = phi %"class.extensions::(anonymous namespace)::ComparablePermission"* [ %55, %60 ], [ %76, %113 ]
  call void @llvm.lifetime.start.p0i8(i64 16, i8* nonnull %61) #14
  %79 = getelementptr inbounds %"class.extensions::(anonymous namespace)::ComparablePermission", %"class.extensions::(anonymous namespace)::ComparablePermission"* %76, i64 0, i32 0
  %80 = load %"class.extensions::PermissionMessage"*, %"class.extensions::PermissionMessage"** %79, align 8
  %81 = getelementptr inbounds %"class.extensions::PermissionMessage", %"class.extensions::PermissionMessage"* %80, i64 0, i32 1
  %82 = getelementptr inbounds %"class.extensions::PermissionMessage", %"class.extensions::PermissionMessage"* %80, i64 0, i32 3
  store %"class.std::__1::basic_string"* %81, %"class.std::__1::basic_string"** %62, align 8
  store %"class.std::__1::vector.9"* %82, %"class.std::__1::vector.9"** %63, align 8
  call void @llvm.lifetime.start.p0i8(i64 16, i8* nonnull %64) #14
  %83 = getelementptr inbounds %"class.extensions::(anonymous namespace)::ComparablePermission", %"class.extensions::(anonymous namespace)::ComparablePermission"* %78, i64 0, i32 0
  %84 = load %"class.extensions::PermissionMessage"*, %"class.extensions::PermissionMessage"** %83, align 8
  %85 = getelementptr inbounds %"class.extensions::PermissionMessage", %"class.extensions::PermissionMessage"* %84, i64 0, i32 1
  %86 = getelementptr inbounds %"class.extensions::PermissionMessage", %"class.extensions::PermissionMessage"* %84, i64 0, i32 3
  store %"class.std::__1::basic_string"* %85, %"class.std::__1::basic_string"** %65, align 8
  store %"class.std::__1::vector.9"* %86, %"class.std::__1::vector.9"** %66, align 8
  call void @llvm.lifetime.start.p0i8(i64 1, i8* nonnull %67) #14
  %87 = call zeroext i1 @_ZNSt3__112__tuple_lessILm2EEclINS_5tupleIJRKNS_12basic_stringIDsNS_11char_traitsIDsEENS_9allocatorIDsEEEERKNS_6vectorIS9_NS7_IS9_EEEEEEESH_EEbRKT_RKT0_(%"struct.std::__1::__tuple_less"* nonnull %3, %"class.std::__1::tuple"* nonnull dereferenceable(16) %4, %"class.std::__1::tuple"* nonnull dereferenceable(16) %5) #14
  call void @llvm.lifetime.end.p0i8(i64 1, i8* nonnull %67) #14
  call void @llvm.lifetime.end.p0i8(i64 16, i8* nonnull %64) #14
  call void @llvm.lifetime.end.p0i8(i64 16, i8* nonnull %61) #14
  br i1 %87, label %88, label %113

88:                                               ; preds = %75
  %89 = bitcast %"class.extensions::(anonymous namespace)::ComparablePermission"* %76 to i64*
  %90 = load i64, i64* %89, align 8
  %91 = inttoptr i64 %90 to %"class.extensions::PermissionMessage"*
  %92 = getelementptr inbounds %"class.extensions::PermissionMessage", %"class.extensions::PermissionMessage"* %91, i64 0, i32 1
  %93 = getelementptr inbounds %"class.extensions::PermissionMessage", %"class.extensions::PermissionMessage"* %91, i64 0, i32 3
  br label %94

94:                                               ; preds = %101, %88
  %95 = phi %"class.extensions::(anonymous namespace)::ComparablePermission"* [ %76, %88 ], [ %96, %101 ]
  %96 = phi %"class.extensions::(anonymous namespace)::ComparablePermission"* [ %78, %88 ], [ %102, %101 ]
  %97 = bitcast %"class.extensions::(anonymous namespace)::ComparablePermission"* %96 to i64*
  %98 = bitcast %"class.extensions::(anonymous namespace)::ComparablePermission"* %95 to i64*
  %99 = load i64, i64* %97, align 8
  store i64 %99, i64* %98, align 8
  %100 = icmp eq %"class.extensions::(anonymous namespace)::ComparablePermission"* %96, %0
  br i1 %100, label %108, label %101

101:                                              ; preds = %94
  %102 = getelementptr inbounds %"class.extensions::(anonymous namespace)::ComparablePermission", %"class.extensions::(anonymous namespace)::ComparablePermission"* %96, i64 -1
  call void @llvm.lifetime.start.p0i8(i64 16, i8* nonnull %68) #14
  store %"class.std::__1::basic_string"* %92, %"class.std::__1::basic_string"** %69, align 8
  store %"class.std::__1::vector.9"* %93, %"class.std::__1::vector.9"** %70, align 8
  call void @llvm.lifetime.start.p0i8(i64 16, i8* nonnull %71) #14
  %103 = getelementptr inbounds %"class.extensions::(anonymous namespace)::ComparablePermission", %"class.extensions::(anonymous namespace)::ComparablePermission"* %102, i64 0, i32 0
  %104 = load %"class.extensions::PermissionMessage"*, %"class.extensions::PermissionMessage"** %103, align 8
  %105 = getelementptr inbounds %"class.extensions::PermissionMessage", %"class.extensions::PermissionMessage"* %104, i64 0, i32 1
  %106 = getelementptr inbounds %"class.extensions::PermissionMessage", %"class.extensions::PermissionMessage"* %104, i64 0, i32 3
  store %"class.std::__1::basic_string"* %105, %"class.std::__1::basic_string"** %72, align 8
  store %"class.std::__1::vector.9"* %106, %"class.std::__1::vector.9"** %73, align 8
  call void @llvm.lifetime.start.p0i8(i64 1, i8* nonnull %74) #14
  %107 = call zeroext i1 @_ZNSt3__112__tuple_lessILm2EEclINS_5tupleIJRKNS_12basic_stringIDsNS_11char_traitsIDsEENS_9allocatorIDsEEEERKNS_6vectorIS9_NS7_IS9_EEEEEEESH_EEbRKT_RKT0_(%"struct.std::__1::__tuple_less"* nonnull %6, %"class.std::__1::tuple"* nonnull dereferenceable(16) %7, %"class.std::__1::tuple"* nonnull dereferenceable(16) %8) #14
  call void @llvm.lifetime.end.p0i8(i64 1, i8* nonnull %74) #14
  call void @llvm.lifetime.end.p0i8(i64 16, i8* nonnull %71) #14
  call void @llvm.lifetime.end.p0i8(i64 16, i8* nonnull %68) #14
  br i1 %107, label %94, label %108

108:                                              ; preds = %94, %101
  %109 = phi %"class.extensions::(anonymous namespace)::ComparablePermission"* [ %96, %101 ], [ %0, %94 ]
  %110 = bitcast %"class.extensions::(anonymous namespace)::ComparablePermission"* %109 to i64*
  store i64 %90, i64* %110, align 8
  %111 = add i32 %77, 1
  %112 = icmp eq i32 %111, 8
  br i1 %112, label %117, label %113

113:                                              ; preds = %108, %75
  %114 = phi i32 [ %111, %108 ], [ %77, %75 ]
  %115 = getelementptr inbounds %"class.extensions::(anonymous namespace)::ComparablePermission", %"class.extensions::(anonymous namespace)::ComparablePermission"* %76, i64 1
  %116 = icmp eq %"class.extensions::(anonymous namespace)::ComparablePermission"* %115, %1
  br i1 %116, label %120, label %75

117:                                              ; preds = %108
  %118 = getelementptr inbounds %"class.extensions::(anonymous namespace)::ComparablePermission", %"class.extensions::(anonymous namespace)::ComparablePermission"* %76, i64 1
  %119 = icmp eq %"class.extensions::(anonymous namespace)::ComparablePermission"* %118, %1
  br label %120

120:                                              ; preds = %113, %117, %54, %16, %34, %2, %2, %48, %43, %39
  %121 = phi i1 [ true, %48 ], [ true, %43 ], [ true, %39 ], [ true, %2 ], [ true, %2 ], [ true, %34 ], [ true, %16 ], [ true, %54 ], [ %119, %117 ], [ true, %113 ]
  ret i1 %121
}

; Function Attrs: nounwind ssp uwtable
define linkonce_odr hidden { %"class.std::__1::set.82"*, %"class.std::__1::__tree_end_node"* } @_ZNSt3__116__set_differenceIRNS_6__lessINS_12basic_stringIcNS_11char_traitsIcEENS_9allocatorIcEEEES7_EENS_21__tree_const_iteratorIS7_PNS_11__tree_nodeIS7_PvEElEESF_NS_15insert_iteratorINS_3setIS7_NS_4lessIS7_EENS5_IS7_EEEEEEEET2_T0_SO_T1_SP_SN_T_(%"class.std::__1::__tree_end_node"*, %"class.std::__1::__tree_end_node"*, %"class.std::__1::__tree_end_node"*, %"class.std::__1::__tree_end_node"*, %"class.std::__1::set.82"*, %"class.std::__1::__tree_end_node"*, %"struct.std::__1::__less.146"* dereferenceable(1)) local_unnamed_addr #2 comdat {
  %8 = icmp eq %"class.std::__1::__tree_end_node"* %0, %1
  br i1 %8, label %261, label %9

9:                                                ; preds = %7
  %10 = getelementptr inbounds %"class.std::__1::set.82", %"class.std::__1::set.82"* %4, i64 0, i32 0
  br label %11

11:                                               ; preds = %9, %256
  %12 = phi %"class.std::__1::__tree_end_node"* [ %0, %9 ], [ %259, %256 ]
  %13 = phi %"class.std::__1::__tree_end_node"* [ %5, %9 ], [ %258, %256 ]
  %14 = phi %"class.std::__1::__tree_end_node"* [ %2, %9 ], [ %257, %256 ]
  %15 = icmp eq %"class.std::__1::__tree_end_node"* %14, %3
  br i1 %15, label %16, label %82

16:                                               ; preds = %11, %79
  %17 = phi %"class.std::__1::__tree_end_node"* [ %80, %79 ], [ %12, %11 ]
  %18 = phi %"class.std::__1::__tree_end_node"* [ %51, %79 ], [ %13, %11 ]
  %19 = getelementptr inbounds %"class.std::__1::__tree_end_node", %"class.std::__1::__tree_end_node"* %17, i64 4
  %20 = bitcast %"class.std::__1::__tree_end_node"* %19 to %"class.std::__1::basic_string.91"*
  %21 = tail call { %"class.std::__1::__tree_end_node"*, i8 } @_ZNSt3__16__treeINS_12basic_stringIcNS_11char_traitsIcEENS_9allocatorIcEEEENS_4lessIS6_EENS4_IS6_EEE30__emplace_hint_unique_key_argsIS6_JRKS6_EEENS_4pairINS_15__tree_iteratorIS6_PNS_11__tree_nodeIS6_PvEElEEbEENS_21__tree_const_iteratorIS6_SJ_lEERKT_DpOT0_(%"class.std::__1::__tree.83"* %10, %"class.std::__1::__tree_end_node"* %18, %"class.std::__1::basic_string.91"* dereferenceable(24) %20, %"class.std::__1::basic_string.91"* dereferenceable(24) %20) #14
  %22 = extractvalue { %"class.std::__1::__tree_end_node"*, i8 } %21, 0
  %23 = getelementptr inbounds %"class.std::__1::__tree_end_node", %"class.std::__1::__tree_end_node"* %22, i64 1, i32 0
  %24 = load %"class.std::__1::__tree_node_base"*, %"class.std::__1::__tree_node_base"** %23, align 8
  %25 = icmp eq %"class.std::__1::__tree_node_base"* %24, null
  br i1 %25, label %26, label %34

26:                                               ; preds = %16
  %27 = bitcast %"class.std::__1::__tree_end_node"* %22 to %"class.std::__1::__tree_node_base"*
  %28 = getelementptr inbounds %"class.std::__1::__tree_end_node", %"class.std::__1::__tree_end_node"* %22, i64 2
  %29 = bitcast %"class.std::__1::__tree_end_node"* %28 to %"class.std::__1::__tree_end_node"**
  %30 = load %"class.std::__1::__tree_end_node"*, %"class.std::__1::__tree_end_node"** %29, align 8
  %31 = getelementptr inbounds %"class.std::__1::__tree_end_node", %"class.std::__1::__tree_end_node"* %30, i64 0, i32 0
  %32 = load %"class.std::__1::__tree_node_base"*, %"class.std::__1::__tree_node_base"** %31, align 8
  %33 = icmp eq %"class.std::__1::__tree_node_base"* %32, %27
  br i1 %33, label %50, label %41

34:                                               ; preds = %16, %34
  %35 = phi %"class.std::__1::__tree_node_base"* [ %37, %34 ], [ %24, %16 ]
  %36 = getelementptr inbounds %"class.std::__1::__tree_node_base", %"class.std::__1::__tree_node_base"* %35, i64 0, i32 0, i32 0
  %37 = load %"class.std::__1::__tree_node_base"*, %"class.std::__1::__tree_node_base"** %36, align 8
  %38 = icmp eq %"class.std::__1::__tree_node_base"* %37, null
  br i1 %38, label %39, label %34

39:                                               ; preds = %34
  %40 = getelementptr inbounds %"class.std::__1::__tree_node_base", %"class.std::__1::__tree_node_base"* %35, i64 0, i32 0
  br label %50

41:                                               ; preds = %26, %41
  %42 = phi %"class.std::__1::__tree_end_node"** [ %45, %41 ], [ %29, %26 ]
  %43 = bitcast %"class.std::__1::__tree_end_node"** %42 to %"class.std::__1::__tree_node_base"**
  %44 = load %"class.std::__1::__tree_node_base"*, %"class.std::__1::__tree_node_base"** %43, align 8
  %45 = getelementptr inbounds %"class.std::__1::__tree_node_base", %"class.std::__1::__tree_node_base"* %44, i64 0, i32 2
  %46 = load %"class.std::__1::__tree_end_node"*, %"class.std::__1::__tree_end_node"** %45, align 8
  %47 = getelementptr inbounds %"class.std::__1::__tree_end_node", %"class.std::__1::__tree_end_node"* %46, i64 0, i32 0
  %48 = load %"class.std::__1::__tree_node_base"*, %"class.std::__1::__tree_node_base"** %47, align 8
  %49 = icmp eq %"class.std::__1::__tree_node_base"* %48, %44
  br i1 %49, label %50, label %41

50:                                               ; preds = %41, %39, %26
  %51 = phi %"class.std::__1::__tree_end_node"* [ %40, %39 ], [ %30, %26 ], [ %46, %41 ]
  %52 = getelementptr inbounds %"class.std::__1::__tree_end_node", %"class.std::__1::__tree_end_node"* %17, i64 1, i32 0
  %53 = load %"class.std::__1::__tree_node_base"*, %"class.std::__1::__tree_node_base"** %52, align 8
  %54 = icmp eq %"class.std::__1::__tree_node_base"* %53, null
  br i1 %54, label %55, label %63

55:                                               ; preds = %50
  %56 = bitcast %"class.std::__1::__tree_end_node"* %17 to %"class.std::__1::__tree_node_base"*
  %57 = getelementptr inbounds %"class.std::__1::__tree_end_node", %"class.std::__1::__tree_end_node"* %17, i64 2
  %58 = bitcast %"class.std::__1::__tree_end_node"* %57 to %"class.std::__1::__tree_end_node"**
  %59 = load %"class.std::__1::__tree_end_node"*, %"class.std::__1::__tree_end_node"** %58, align 8
  %60 = getelementptr inbounds %"class.std::__1::__tree_end_node", %"class.std::__1::__tree_end_node"* %59, i64 0, i32 0
  %61 = load %"class.std::__1::__tree_node_base"*, %"class.std::__1::__tree_node_base"** %60, align 8
  %62 = icmp eq %"class.std::__1::__tree_node_base"* %61, %56
  br i1 %62, label %79, label %70

63:                                               ; preds = %50, %63
  %64 = phi %"class.std::__1::__tree_node_base"* [ %66, %63 ], [ %53, %50 ]
  %65 = getelementptr inbounds %"class.std::__1::__tree_node_base", %"class.std::__1::__tree_node_base"* %64, i64 0, i32 0, i32 0
  %66 = load %"class.std::__1::__tree_node_base"*, %"class.std::__1::__tree_node_base"** %65, align 8
  %67 = icmp eq %"class.std::__1::__tree_node_base"* %66, null
  br i1 %67, label %68, label %63

68:                                               ; preds = %63
  %69 = getelementptr inbounds %"class.std::__1::__tree_node_base", %"class.std::__1::__tree_node_base"* %64, i64 0, i32 0
  br label %79

70:                                               ; preds = %55, %70
  %71 = phi %"class.std::__1::__tree_end_node"** [ %74, %70 ], [ %58, %55 ]
  %72 = bitcast %"class.std::__1::__tree_end_node"** %71 to %"class.std::__1::__tree_node_base"**
  %73 = load %"class.std::__1::__tree_node_base"*, %"class.std::__1::__tree_node_base"** %72, align 8
  %74 = getelementptr inbounds %"class.std::__1::__tree_node_base", %"class.std::__1::__tree_node_base"* %73, i64 0, i32 2
  %75 = load %"class.std::__1::__tree_end_node"*, %"class.std::__1::__tree_end_node"** %74, align 8
  %76 = getelementptr inbounds %"class.std::__1::__tree_end_node", %"class.std::__1::__tree_end_node"* %75, i64 0, i32 0
  %77 = load %"class.std::__1::__tree_node_base"*, %"class.std::__1::__tree_node_base"** %76, align 8
  %78 = icmp eq %"class.std::__1::__tree_node_base"* %77, %73
  br i1 %78, label %79, label %70

79:                                               ; preds = %70, %68, %55
  %80 = phi %"class.std::__1::__tree_end_node"* [ %69, %68 ], [ %59, %55 ], [ %75, %70 ]
  %81 = icmp eq %"class.std::__1::__tree_end_node"* %80, %1
  br i1 %81, label %261, label %16

82:                                               ; preds = %11
  %83 = getelementptr inbounds %"class.std::__1::__tree_end_node", %"class.std::__1::__tree_end_node"* %12, i64 4
  %84 = bitcast %"class.std::__1::__tree_end_node"* %83 to %"class.std::__1::basic_string.91"*
  %85 = getelementptr inbounds %"class.std::__1::__tree_end_node", %"class.std::__1::__tree_end_node"* %14, i64 4
  %86 = bitcast %"class.std::__1::__tree_end_node"* %85 to %"struct.std::__1::basic_string<char, std::__1::char_traits<char>, std::__1::allocator<char> >::__short"*
  %87 = getelementptr inbounds %"struct.std::__1::basic_string<char, std::__1::char_traits<char>, std::__1::allocator<char> >::__short", %"struct.std::__1::basic_string<char, std::__1::char_traits<char>, std::__1::allocator<char> >::__short"* %86, i64 0, i32 1, i32 0
  %88 = load i8, i8* %87, align 1
  %89 = icmp slt i8 %88, 0
  %90 = getelementptr inbounds %"class.std::__1::__tree_end_node", %"class.std::__1::__tree_end_node"* %14, i64 5
  %91 = bitcast %"class.std::__1::__tree_end_node"* %90 to i64*
  %92 = load i64, i64* %91, align 8
  %93 = zext i8 %88 to i64
  %94 = select i1 %89, i64 %92, i64 %93
  %95 = bitcast %"class.std::__1::__tree_end_node"* %83 to %"struct.std::__1::basic_string<char, std::__1::char_traits<char>, std::__1::allocator<char> >::__short"*
  %96 = getelementptr inbounds %"struct.std::__1::basic_string<char, std::__1::char_traits<char>, std::__1::allocator<char> >::__short", %"struct.std::__1::basic_string<char, std::__1::char_traits<char>, std::__1::allocator<char> >::__short"* %95, i64 0, i32 1, i32 0
  %97 = load i8, i8* %96, align 1
  %98 = icmp slt i8 %97, 0
  %99 = getelementptr inbounds %"class.std::__1::__tree_end_node", %"class.std::__1::__tree_end_node"* %12, i64 5
  %100 = bitcast %"class.std::__1::__tree_end_node"* %99 to i64*
  %101 = load i64, i64* %100, align 8
  %102 = zext i8 %97 to i64
  %103 = select i1 %98, i64 %101, i64 %102
  %104 = icmp ult i64 %94, %103
  %105 = select i1 %104, i64 %94, i64 %103
  %106 = icmp eq i64 %105, 0
  br i1 %106, label %118, label %107

107:                                              ; preds = %82
  %108 = bitcast %"class.std::__1::__tree_end_node"* %83 to i8**
  %109 = load i8*, i8** %108, align 8
  %110 = bitcast %"class.std::__1::__tree_end_node"* %83 to i8*
  %111 = select i1 %98, i8* %109, i8* %110
  %112 = bitcast %"class.std::__1::__tree_end_node"* %85 to i8**
  %113 = load i8*, i8** %112, align 8
  %114 = bitcast %"class.std::__1::__tree_end_node"* %85 to i8*
  %115 = select i1 %89, i8* %113, i8* %114
  %116 = tail call i32 @memcmp(i8* %111, i8* %115, i64 %105) #14
  %117 = icmp eq i32 %116, 0
  br i1 %117, label %118, label %120

118:                                              ; preds = %107, %82
  %119 = icmp ult i64 %103, %94
  br i1 %119, label %122, label %181

120:                                              ; preds = %107
  %121 = icmp slt i32 %116, 0
  br i1 %121, label %122, label %191

122:                                              ; preds = %118, %120
  %123 = tail call { %"class.std::__1::__tree_end_node"*, i8 } @_ZNSt3__16__treeINS_12basic_stringIcNS_11char_traitsIcEENS_9allocatorIcEEEENS_4lessIS6_EENS4_IS6_EEE30__emplace_hint_unique_key_argsIS6_JRKS6_EEENS_4pairINS_15__tree_iteratorIS6_PNS_11__tree_nodeIS6_PvEElEEbEENS_21__tree_const_iteratorIS6_SJ_lEERKT_DpOT0_(%"class.std::__1::__tree.83"* %10, %"class.std::__1::__tree_end_node"* %13, %"class.std::__1::basic_string.91"* dereferenceable(24) %84, %"class.std::__1::basic_string.91"* dereferenceable(24) %84) #14
  %124 = extractvalue { %"class.std::__1::__tree_end_node"*, i8 } %123, 0
  %125 = getelementptr inbounds %"class.std::__1::__tree_end_node", %"class.std::__1::__tree_end_node"* %124, i64 1, i32 0
  %126 = load %"class.std::__1::__tree_node_base"*, %"class.std::__1::__tree_node_base"** %125, align 8
  %127 = icmp eq %"class.std::__1::__tree_node_base"* %126, null
  br i1 %127, label %128, label %136

128:                                              ; preds = %122
  %129 = bitcast %"class.std::__1::__tree_end_node"* %124 to %"class.std::__1::__tree_node_base"*
  %130 = getelementptr inbounds %"class.std::__1::__tree_end_node", %"class.std::__1::__tree_end_node"* %124, i64 2
  %131 = bitcast %"class.std::__1::__tree_end_node"* %130 to %"class.std::__1::__tree_end_node"**
  %132 = load %"class.std::__1::__tree_end_node"*, %"class.std::__1::__tree_end_node"** %131, align 8
  %133 = getelementptr inbounds %"class.std::__1::__tree_end_node", %"class.std::__1::__tree_end_node"* %132, i64 0, i32 0
  %134 = load %"class.std::__1::__tree_node_base"*, %"class.std::__1::__tree_node_base"** %133, align 8
  %135 = icmp eq %"class.std::__1::__tree_node_base"* %134, %129
  br i1 %135, label %152, label %143

136:                                              ; preds = %122, %136
  %137 = phi %"class.std::__1::__tree_node_base"* [ %139, %136 ], [ %126, %122 ]
  %138 = getelementptr inbounds %"class.std::__1::__tree_node_base", %"class.std::__1::__tree_node_base"* %137, i64 0, i32 0, i32 0
  %139 = load %"class.std::__1::__tree_node_base"*, %"class.std::__1::__tree_node_base"** %138, align 8
  %140 = icmp eq %"class.std::__1::__tree_node_base"* %139, null
  br i1 %140, label %141, label %136

141:                                              ; preds = %136
  %142 = getelementptr inbounds %"class.std::__1::__tree_node_base", %"class.std::__1::__tree_node_base"* %137, i64 0, i32 0
  br label %152

143:                                              ; preds = %128, %143
  %144 = phi %"class.std::__1::__tree_end_node"** [ %147, %143 ], [ %131, %128 ]
  %145 = bitcast %"class.std::__1::__tree_end_node"** %144 to %"class.std::__1::__tree_node_base"**
  %146 = load %"class.std::__1::__tree_node_base"*, %"class.std::__1::__tree_node_base"** %145, align 8
  %147 = getelementptr inbounds %"class.std::__1::__tree_node_base", %"class.std::__1::__tree_node_base"* %146, i64 0, i32 2
  %148 = load %"class.std::__1::__tree_end_node"*, %"class.std::__1::__tree_end_node"** %147, align 8
  %149 = getelementptr inbounds %"class.std::__1::__tree_end_node", %"class.std::__1::__tree_end_node"* %148, i64 0, i32 0
  %150 = load %"class.std::__1::__tree_node_base"*, %"class.std::__1::__tree_node_base"** %149, align 8
  %151 = icmp eq %"class.std::__1::__tree_node_base"* %150, %146
  br i1 %151, label %152, label %143

152:                                              ; preds = %143, %128, %141
  %153 = phi %"class.std::__1::__tree_end_node"* [ %142, %141 ], [ %132, %128 ], [ %148, %143 ]
  %154 = getelementptr inbounds %"class.std::__1::__tree_end_node", %"class.std::__1::__tree_end_node"* %12, i64 1, i32 0
  %155 = load %"class.std::__1::__tree_node_base"*, %"class.std::__1::__tree_node_base"** %154, align 8
  %156 = icmp eq %"class.std::__1::__tree_node_base"* %155, null
  br i1 %156, label %157, label %165

157:                                              ; preds = %152
  %158 = bitcast %"class.std::__1::__tree_end_node"* %12 to %"class.std::__1::__tree_node_base"*
  %159 = getelementptr inbounds %"class.std::__1::__tree_end_node", %"class.std::__1::__tree_end_node"* %12, i64 2
  %160 = bitcast %"class.std::__1::__tree_end_node"* %159 to %"class.std::__1::__tree_end_node"**
  %161 = load %"class.std::__1::__tree_end_node"*, %"class.std::__1::__tree_end_node"** %160, align 8
  %162 = getelementptr inbounds %"class.std::__1::__tree_end_node", %"class.std::__1::__tree_end_node"* %161, i64 0, i32 0
  %163 = load %"class.std::__1::__tree_node_base"*, %"class.std::__1::__tree_node_base"** %162, align 8
  %164 = icmp eq %"class.std::__1::__tree_node_base"* %163, %158
  br i1 %164, label %256, label %172

165:                                              ; preds = %152, %165
  %166 = phi %"class.std::__1::__tree_node_base"* [ %168, %165 ], [ %155, %152 ]
  %167 = getelementptr inbounds %"class.std::__1::__tree_node_base", %"class.std::__1::__tree_node_base"* %166, i64 0, i32 0, i32 0
  %168 = load %"class.std::__1::__tree_node_base"*, %"class.std::__1::__tree_node_base"** %167, align 8
  %169 = icmp eq %"class.std::__1::__tree_node_base"* %168, null
  br i1 %169, label %170, label %165

170:                                              ; preds = %165
  %171 = getelementptr inbounds %"class.std::__1::__tree_node_base", %"class.std::__1::__tree_node_base"* %166, i64 0, i32 0
  br label %256

172:                                              ; preds = %157, %172
  %173 = phi %"class.std::__1::__tree_end_node"** [ %176, %172 ], [ %160, %157 ]
  %174 = bitcast %"class.std::__1::__tree_end_node"** %173 to %"class.std::__1::__tree_node_base"**
  %175 = load %"class.std::__1::__tree_node_base"*, %"class.std::__1::__tree_node_base"** %174, align 8
  %176 = getelementptr inbounds %"class.std::__1::__tree_node_base", %"class.std::__1::__tree_node_base"* %175, i64 0, i32 2
  %177 = load %"class.std::__1::__tree_end_node"*, %"class.std::__1::__tree_end_node"** %176, align 8
  %178 = getelementptr inbounds %"class.std::__1::__tree_end_node", %"class.std::__1::__tree_end_node"* %177, i64 0, i32 0
  %179 = load %"class.std::__1::__tree_node_base"*, %"class.std::__1::__tree_node_base"** %178, align 8
  %180 = icmp eq %"class.std::__1::__tree_node_base"* %179, %175
  br i1 %180, label %256, label %172

181:                                              ; preds = %118
  br i1 %106, label %196, label %182

182:                                              ; preds = %181
  %183 = bitcast %"class.std::__1::__tree_end_node"* %85 to i8**
  %184 = load i8*, i8** %183, align 8
  %185 = bitcast %"class.std::__1::__tree_end_node"* %83 to i8**
  %186 = load i8*, i8** %185, align 8
  %187 = bitcast %"class.std::__1::__tree_end_node"* %85 to i8*
  %188 = select i1 %89, i8* %184, i8* %187
  %189 = bitcast %"class.std::__1::__tree_end_node"* %83 to i8*
  %190 = select i1 %98, i8* %186, i8* %189
  br label %191

191:                                              ; preds = %182, %120
  %192 = phi i8* [ %190, %182 ], [ %111, %120 ]
  %193 = phi i8* [ %188, %182 ], [ %115, %120 ]
  %194 = tail call i32 @memcmp(i8* %193, i8* %192, i64 %105) #14
  %195 = icmp eq i32 %194, 0
  br i1 %195, label %196, label %197

196:                                              ; preds = %191, %181
  br i1 %104, label %227, label %199

197:                                              ; preds = %191
  %198 = icmp slt i32 %194, 0
  br i1 %198, label %227, label %199

199:                                              ; preds = %196, %197
  %200 = getelementptr inbounds %"class.std::__1::__tree_end_node", %"class.std::__1::__tree_end_node"* %12, i64 1, i32 0
  %201 = load %"class.std::__1::__tree_node_base"*, %"class.std::__1::__tree_node_base"** %200, align 8
  %202 = icmp eq %"class.std::__1::__tree_node_base"* %201, null
  br i1 %202, label %203, label %211

203:                                              ; preds = %199
  %204 = bitcast %"class.std::__1::__tree_end_node"* %12 to %"class.std::__1::__tree_node_base"*
  %205 = getelementptr inbounds %"class.std::__1::__tree_end_node", %"class.std::__1::__tree_end_node"* %12, i64 2
  %206 = bitcast %"class.std::__1::__tree_end_node"* %205 to %"class.std::__1::__tree_end_node"**
  %207 = load %"class.std::__1::__tree_end_node"*, %"class.std::__1::__tree_end_node"** %206, align 8
  %208 = getelementptr inbounds %"class.std::__1::__tree_end_node", %"class.std::__1::__tree_end_node"* %207, i64 0, i32 0
  %209 = load %"class.std::__1::__tree_node_base"*, %"class.std::__1::__tree_node_base"** %208, align 8
  %210 = icmp eq %"class.std::__1::__tree_node_base"* %209, %204
  br i1 %210, label %227, label %218

211:                                              ; preds = %199, %211
  %212 = phi %"class.std::__1::__tree_node_base"* [ %214, %211 ], [ %201, %199 ]
  %213 = getelementptr inbounds %"class.std::__1::__tree_node_base", %"class.std::__1::__tree_node_base"* %212, i64 0, i32 0, i32 0
  %214 = load %"class.std::__1::__tree_node_base"*, %"class.std::__1::__tree_node_base"** %213, align 8
  %215 = icmp eq %"class.std::__1::__tree_node_base"* %214, null
  br i1 %215, label %216, label %211

216:                                              ; preds = %211
  %217 = getelementptr inbounds %"class.std::__1::__tree_node_base", %"class.std::__1::__tree_node_base"* %212, i64 0, i32 0
  br label %227

218:                                              ; preds = %203, %218
  %219 = phi %"class.std::__1::__tree_end_node"** [ %222, %218 ], [ %206, %203 ]
  %220 = bitcast %"class.std::__1::__tree_end_node"** %219 to %"class.std::__1::__tree_node_base"**
  %221 = load %"class.std::__1::__tree_node_base"*, %"class.std::__1::__tree_node_base"** %220, align 8
  %222 = getelementptr inbounds %"class.std::__1::__tree_node_base", %"class.std::__1::__tree_node_base"* %221, i64 0, i32 2
  %223 = load %"class.std::__1::__tree_end_node"*, %"class.std::__1::__tree_end_node"** %222, align 8
  %224 = getelementptr inbounds %"class.std::__1::__tree_end_node", %"class.std::__1::__tree_end_node"* %223, i64 0, i32 0
  %225 = load %"class.std::__1::__tree_node_base"*, %"class.std::__1::__tree_node_base"** %224, align 8
  %226 = icmp eq %"class.std::__1::__tree_node_base"* %225, %221
  br i1 %226, label %227, label %218

227:                                              ; preds = %218, %196, %216, %203, %197
  %228 = phi %"class.std::__1::__tree_end_node"* [ %12, %197 ], [ %217, %216 ], [ %207, %203 ], [ %12, %196 ], [ %223, %218 ]
  %229 = getelementptr inbounds %"class.std::__1::__tree_end_node", %"class.std::__1::__tree_end_node"* %14, i64 1, i32 0
  %230 = load %"class.std::__1::__tree_node_base"*, %"class.std::__1::__tree_node_base"** %229, align 8
  %231 = icmp eq %"class.std::__1::__tree_node_base"* %230, null
  br i1 %231, label %232, label %240

232:                                              ; preds = %227
  %233 = bitcast %"class.std::__1::__tree_end_node"* %14 to %"class.std::__1::__tree_node_base"*
  %234 = getelementptr inbounds %"class.std::__1::__tree_end_node", %"class.std::__1::__tree_end_node"* %14, i64 2
  %235 = bitcast %"class.std::__1::__tree_end_node"* %234 to %"class.std::__1::__tree_end_node"**
  %236 = load %"class.std::__1::__tree_end_node"*, %"class.std::__1::__tree_end_node"** %235, align 8
  %237 = getelementptr inbounds %"class.std::__1::__tree_end_node", %"class.std::__1::__tree_end_node"* %236, i64 0, i32 0
  %238 = load %"class.std::__1::__tree_node_base"*, %"class.std::__1::__tree_node_base"** %237, align 8
  %239 = icmp eq %"class.std::__1::__tree_node_base"* %238, %233
  br i1 %239, label %256, label %247

240:                                              ; preds = %227, %240
  %241 = phi %"class.std::__1::__tree_node_base"* [ %243, %240 ], [ %230, %227 ]
  %242 = getelementptr inbounds %"class.std::__1::__tree_node_base", %"class.std::__1::__tree_node_base"* %241, i64 0, i32 0, i32 0
  %243 = load %"class.std::__1::__tree_node_base"*, %"class.std::__1::__tree_node_base"** %242, align 8
  %244 = icmp eq %"class.std::__1::__tree_node_base"* %243, null
  br i1 %244, label %245, label %240

245:                                              ; preds = %240
  %246 = getelementptr inbounds %"class.std::__1::__tree_node_base", %"class.std::__1::__tree_node_base"* %241, i64 0, i32 0
  br label %256

247:                                              ; preds = %232, %247
  %248 = phi %"class.std::__1::__tree_end_node"** [ %251, %247 ], [ %235, %232 ]
  %249 = bitcast %"class.std::__1::__tree_end_node"** %248 to %"class.std::__1::__tree_node_base"**
  %250 = load %"class.std::__1::__tree_node_base"*, %"class.std::__1::__tree_node_base"** %249, align 8
  %251 = getelementptr inbounds %"class.std::__1::__tree_node_base", %"class.std::__1::__tree_node_base"* %250, i64 0, i32 2
  %252 = load %"class.std::__1::__tree_end_node"*, %"class.std::__1::__tree_end_node"** %251, align 8
  %253 = getelementptr inbounds %"class.std::__1::__tree_end_node", %"class.std::__1::__tree_end_node"* %252, i64 0, i32 0
  %254 = load %"class.std::__1::__tree_node_base"*, %"class.std::__1::__tree_node_base"** %253, align 8
  %255 = icmp eq %"class.std::__1::__tree_node_base"* %254, %250
  br i1 %255, label %256, label %247

256:                                              ; preds = %247, %172, %245, %232, %170, %157
  %257 = phi %"class.std::__1::__tree_end_node"* [ %14, %157 ], [ %14, %170 ], [ %246, %245 ], [ %236, %232 ], [ %14, %172 ], [ %252, %247 ]
  %258 = phi %"class.std::__1::__tree_end_node"* [ %153, %157 ], [ %153, %170 ], [ %13, %245 ], [ %13, %232 ], [ %153, %172 ], [ %13, %247 ]
  %259 = phi %"class.std::__1::__tree_end_node"* [ %161, %157 ], [ %171, %170 ], [ %228, %245 ], [ %228, %232 ], [ %177, %172 ], [ %228, %247 ]
  %260 = icmp eq %"class.std::__1::__tree_end_node"* %259, %1
  br i1 %260, label %261, label %11

261:                                              ; preds = %256, %79, %7
  %262 = phi %"class.std::__1::__tree_end_node"* [ %5, %7 ], [ %51, %79 ], [ %258, %256 ]
  %263 = insertvalue { %"class.std::__1::set.82"*, %"class.std::__1::__tree_end_node"* } undef, %"class.std::__1::set.82"* %4, 0
  %264 = insertvalue { %"class.std::__1::set.82"*, %"class.std::__1::__tree_end_node"* } %263, %"class.std::__1::__tree_end_node"* %262, 1
  ret { %"class.std::__1::set.82"*, %"class.std::__1::__tree_end_node"* } %264
}

; Function Attrs: nounwind ssp uwtable
define linkonce_odr hidden { %"class.std::__1::__tree_end_node"*, i8 } @_ZNSt3__16__treeINS_12basic_stringIcNS_11char_traitsIcEENS_9allocatorIcEEEENS_4lessIS6_EENS4_IS6_EEE30__emplace_hint_unique_key_argsIS6_JRKS6_EEENS_4pairINS_15__tree_iteratorIS6_PNS_11__tree_nodeIS6_PvEElEEbEENS_21__tree_const_iteratorIS6_SJ_lEERKT_DpOT0_(%"class.std::__1::__tree.83"*, %"class.std::__1::__tree_end_node"*, %"class.std::__1::basic_string.91"* dereferenceable(24), %"class.std::__1::basic_string.91"* dereferenceable(24)) local_unnamed_addr #2 comdat align 2 {
  %5 = alloca %"class.std::__1::__tree_end_node"*, align 8
  %6 = alloca %"class.std::__1::__tree_node_base"*, align 8
  %7 = bitcast %"class.std::__1::__tree_end_node"** %5 to i8*
  call void @llvm.lifetime.start.p0i8(i64 8, i8* nonnull %7) #14
  store %"class.std::__1::__tree_end_node"* inttoptr (i64 -6148914691236517206 to %"class.std::__1::__tree_end_node"*), %"class.std::__1::__tree_end_node"** %5, align 8
  %8 = bitcast %"class.std::__1::__tree_node_base"** %6 to i8*
  call void @llvm.lifetime.start.p0i8(i64 8, i8* nonnull %8) #14
  store %"class.std::__1::__tree_node_base"* inttoptr (i64 -6148914691236517206 to %"class.std::__1::__tree_node_base"*), %"class.std::__1::__tree_node_base"** %6, align 8
  %9 = call dereferenceable(8) %"class.std::__1::__tree_node_base"** @_ZNSt3__16__treeINS_12basic_stringIcNS_11char_traitsIcEENS_9allocatorIcEEEENS_4lessIS6_EENS4_IS6_EEE12__find_equalIS6_EERPNS_16__tree_node_baseIPvEENS_21__tree_const_iteratorIS6_PNS_11__tree_nodeIS6_SD_EElEERPNS_15__tree_end_nodeISF_EESG_RKT_(%"class.std::__1::__tree.83"* %0, %"class.std::__1::__tree_end_node"* %1, %"class.std::__1::__tree_end_node"** nonnull dereferenceable(8) %5, %"class.std::__1::__tree_node_base"** nonnull dereferenceable(8) %6, %"class.std::__1::basic_string.91"* dereferenceable(24) %2)
  %10 = bitcast %"class.std::__1::__tree_node_base"** %9 to %"class.std::__1::__tree_node.142"**
  %11 = load %"class.std::__1::__tree_node.142"*, %"class.std::__1::__tree_node.142"** %10, align 8
  %12 = icmp eq %"class.std::__1::__tree_node.142"* %11, null
  br i1 %12, label %13, label %52

13:                                               ; preds = %4
  %14 = call i8* @_Znwm(i64 56) #13, !noalias !106
  %15 = getelementptr inbounds i8, i8* %14, i64 32
  %16 = bitcast %"class.std::__1::basic_string.91"* %3 to %"struct.std::__1::basic_string<char, std::__1::char_traits<char>, std::__1::allocator<char> >::__short"*
  %17 = getelementptr inbounds %"struct.std::__1::basic_string<char, std::__1::char_traits<char>, std::__1::allocator<char> >::__short", %"struct.std::__1::basic_string<char, std::__1::char_traits<char>, std::__1::allocator<char> >::__short"* %16, i64 0, i32 1, i32 0
  %18 = load i8, i8* %17, align 1, !noalias !106
  %19 = icmp slt i8 %18, 0
  br i1 %19, label %22, label %20

20:                                               ; preds = %13
  %21 = bitcast %"class.std::__1::basic_string.91"* %3 to i8*
  call void @llvm.memcpy.p0i8.p0i8.i64(i8* align 8 %15, i8* align 8 %21, i64 24, i1 false) #14, !noalias !106
  br label %28

22:                                               ; preds = %13
  %23 = bitcast i8* %15 to %"class.std::__1::basic_string.91"*
  %24 = getelementptr inbounds %"class.std::__1::basic_string.91", %"class.std::__1::basic_string.91"* %3, i64 0, i32 0, i32 0, i32 0, i32 0, i32 0, i32 0
  %25 = load i8*, i8** %24, align 8, !noalias !106
  %26 = getelementptr inbounds %"class.std::__1::basic_string.91", %"class.std::__1::basic_string.91"* %3, i64 0, i32 0, i32 0, i32 0, i32 0, i32 0, i32 1
  %27 = load i64, i64* %26, align 8, !noalias !106
  call void @_ZNSt3__112basic_stringIcNS_11char_traitsIcEENS_9allocatorIcEEE25__init_copy_ctor_externalEPKcm(%"class.std::__1::basic_string.91"* %23, i8* %25, i64 %27) #14, !noalias !106
  br label %28

28:                                               ; preds = %20, %22
  %29 = bitcast %"class.std::__1::__tree_end_node"** %5 to i64*
  %30 = load i64, i64* %29, align 8
  %31 = bitcast i8* %14 to %"class.std::__1::__tree_node.142"*
  %32 = bitcast i8* %14 to %"class.std::__1::__tree_node_base"*
  %33 = getelementptr inbounds i8, i8* %14, i64 16
  call void @llvm.memset.p0i8.i64(i8* nonnull align 8 %14, i8 0, i64 16, i1 false) #14
  %34 = bitcast i8* %33 to i64*
  store i64 %30, i64* %34, align 8
  %35 = bitcast %"class.std::__1::__tree_node_base"** %9 to i8**
  store i8* %14, i8** %35, align 8
  %36 = getelementptr inbounds %"class.std::__1::__tree.83", %"class.std::__1::__tree.83"* %0, i64 0, i32 0
  %37 = load %"class.std::__1::__tree_end_node"*, %"class.std::__1::__tree_end_node"** %36, align 8
  %38 = getelementptr inbounds %"class.std::__1::__tree_end_node", %"class.std::__1::__tree_end_node"* %37, i64 0, i32 0
  %39 = load %"class.std::__1::__tree_node_base"*, %"class.std::__1::__tree_node_base"** %38, align 8
  %40 = icmp eq %"class.std::__1::__tree_node_base"* %39, null
  br i1 %40, label %45, label %41

41:                                               ; preds = %28
  %42 = ptrtoint %"class.std::__1::__tree_node_base"* %39 to i64
  %43 = bitcast %"class.std::__1::__tree.83"* %0 to i64*
  store i64 %42, i64* %43, align 8
  %44 = load %"class.std::__1::__tree_node_base"*, %"class.std::__1::__tree_node_base"** %9, align 8
  br label %45

45:                                               ; preds = %41, %28
  %46 = phi %"class.std::__1::__tree_node_base"* [ %32, %28 ], [ %44, %41 ]
  %47 = getelementptr inbounds %"class.std::__1::__tree.83", %"class.std::__1::__tree.83"* %0, i64 0, i32 1, i32 0, i32 0, i32 0
  %48 = load %"class.std::__1::__tree_node_base"*, %"class.std::__1::__tree_node_base"** %47, align 8
  call void @_ZNSt3__127__tree_balance_after_insertIPNS_16__tree_node_baseIPvEEEEvT_S5_(%"class.std::__1::__tree_node_base"* %48, %"class.std::__1::__tree_node_base"* %46) #14
  %49 = getelementptr inbounds %"class.std::__1::__tree.83", %"class.std::__1::__tree.83"* %0, i64 0, i32 2, i32 0, i32 0
  %50 = load i64, i64* %49, align 8
  %51 = add i64 %50, 1
  store i64 %51, i64* %49, align 8
  br label %52

52:                                               ; preds = %45, %4
  %53 = phi i8 [ 1, %45 ], [ 0, %4 ]
  %54 = phi %"class.std::__1::__tree_node.142"* [ %31, %45 ], [ %11, %4 ]
  %55 = getelementptr inbounds %"class.std::__1::__tree_node.142", %"class.std::__1::__tree_node.142"* %54, i64 0, i32 0, i32 0
  call void @llvm.lifetime.end.p0i8(i64 8, i8* nonnull %8) #14
  call void @llvm.lifetime.end.p0i8(i64 8, i8* nonnull %7) #14
  %56 = insertvalue { %"class.std::__1::__tree_end_node"*, i8 } undef, %"class.std::__1::__tree_end_node"* %55, 0
  %57 = insertvalue { %"class.std::__1::__tree_end_node"*, i8 } %56, i8 %53, 1
  ret { %"class.std::__1::__tree_end_node"*, i8 } %57
}

; Function Attrs: nounwind ssp uwtable
define linkonce_odr hidden dereferenceable(8) %"class.std::__1::__tree_node_base"** @_ZNSt3__16__treeINS_12basic_stringIcNS_11char_traitsIcEENS_9allocatorIcEEEENS_4lessIS6_EENS4_IS6_EEE12__find_equalIS6_EERPNS_16__tree_node_baseIPvEENS_21__tree_const_iteratorIS6_PNS_11__tree_nodeIS6_SD_EElEERPNS_15__tree_end_nodeISF_EESG_RKT_(%"class.std::__1::__tree.83"*, %"class.std::__1::__tree_end_node"*, %"class.std::__1::__tree_end_node"** dereferenceable(8), %"class.std::__1::__tree_node_base"** dereferenceable(8), %"class.std::__1::basic_string.91"* dereferenceable(24)) local_unnamed_addr #2 comdat align 2 {
  %6 = ptrtoint %"class.std::__1::__tree_end_node"* %1 to i64
  %7 = getelementptr inbounds %"class.std::__1::__tree.83", %"class.std::__1::__tree.83"* %0, i64 0, i32 1, i32 0, i32 0
  %8 = icmp eq %"class.std::__1::__tree_end_node"* %7, %1
  br i1 %8, label %46, label %9

9:                                                ; preds = %5
  %10 = getelementptr inbounds %"class.std::__1::__tree_end_node", %"class.std::__1::__tree_end_node"* %1, i64 4
  %11 = bitcast %"class.std::__1::__tree_end_node"* %10 to %"struct.std::__1::basic_string<char, std::__1::char_traits<char>, std::__1::allocator<char> >::__short"*
  %12 = getelementptr inbounds %"struct.std::__1::basic_string<char, std::__1::char_traits<char>, std::__1::allocator<char> >::__short", %"struct.std::__1::basic_string<char, std::__1::char_traits<char>, std::__1::allocator<char> >::__short"* %11, i64 0, i32 1, i32 0
  %13 = load i8, i8* %12, align 1
  %14 = icmp slt i8 %13, 0
  %15 = getelementptr inbounds %"class.std::__1::__tree_end_node", %"class.std::__1::__tree_end_node"* %1, i64 5
  %16 = bitcast %"class.std::__1::__tree_end_node"* %15 to i64*
  %17 = load i64, i64* %16, align 8
  %18 = zext i8 %13 to i64
  %19 = select i1 %14, i64 %17, i64 %18
  %20 = bitcast %"class.std::__1::basic_string.91"* %4 to %"struct.std::__1::basic_string<char, std::__1::char_traits<char>, std::__1::allocator<char> >::__short"*
  %21 = getelementptr inbounds %"struct.std::__1::basic_string<char, std::__1::char_traits<char>, std::__1::allocator<char> >::__short", %"struct.std::__1::basic_string<char, std::__1::char_traits<char>, std::__1::allocator<char> >::__short"* %20, i64 0, i32 1, i32 0
  %22 = load i8, i8* %21, align 1
  %23 = icmp slt i8 %22, 0
  %24 = getelementptr inbounds %"class.std::__1::basic_string.91", %"class.std::__1::basic_string.91"* %4, i64 0, i32 0, i32 0, i32 0, i32 0, i32 0, i32 1
  %25 = load i64, i64* %24, align 8
  %26 = zext i8 %22 to i64
  %27 = select i1 %23, i64 %25, i64 %26
  %28 = icmp ult i64 %19, %27
  %29 = select i1 %28, i64 %19, i64 %27
  %30 = icmp eq i64 %29, 0
  br i1 %30, label %42, label %31

31:                                               ; preds = %9
  %32 = getelementptr inbounds %"class.std::__1::basic_string.91", %"class.std::__1::basic_string.91"* %4, i64 0, i32 0, i32 0, i32 0, i32 0, i32 0, i32 0
  %33 = load i8*, i8** %32, align 8
  %34 = bitcast %"class.std::__1::basic_string.91"* %4 to i8*
  %35 = select i1 %23, i8* %33, i8* %34
  %36 = bitcast %"class.std::__1::__tree_end_node"* %10 to i8**
  %37 = load i8*, i8** %36, align 8
  %38 = bitcast %"class.std::__1::__tree_end_node"* %10 to i8*
  %39 = select i1 %14, i8* %37, i8* %38
  %40 = tail call i32 @memcmp(i8* %35, i8* %39, i64 %29) #14
  %41 = icmp eq i32 %40, 0
  br i1 %41, label %42, label %44

42:                                               ; preds = %31, %9
  %43 = icmp ult i64 %27, %19
  br i1 %43, label %46, label %120

44:                                               ; preds = %31
  %45 = icmp slt i32 %40, 0
  br i1 %45, label %46, label %130

46:                                               ; preds = %42, %5, %44
  %47 = getelementptr inbounds %"class.std::__1::__tree.83", %"class.std::__1::__tree.83"* %0, i64 0, i32 0
  %48 = load %"class.std::__1::__tree_end_node"*, %"class.std::__1::__tree_end_node"** %47, align 8
  %49 = icmp eq %"class.std::__1::__tree_end_node"* %48, %1
  %50 = getelementptr inbounds %"class.std::__1::__tree_end_node", %"class.std::__1::__tree_end_node"* %1, i64 0, i32 0
  %51 = load %"class.std::__1::__tree_node_base"*, %"class.std::__1::__tree_node_base"** %50, align 8
  br i1 %49, label %109, label %52

52:                                               ; preds = %46
  %53 = icmp eq %"class.std::__1::__tree_node_base"* %51, null
  br i1 %53, label %59, label %54

54:                                               ; preds = %52, %54
  %55 = phi %"class.std::__1::__tree_node_base"* [ %57, %54 ], [ %51, %52 ]
  %56 = getelementptr inbounds %"class.std::__1::__tree_node_base", %"class.std::__1::__tree_node_base"* %55, i64 0, i32 1
  %57 = load %"class.std::__1::__tree_node_base"*, %"class.std::__1::__tree_node_base"** %56, align 8
  %58 = icmp eq %"class.std::__1::__tree_node_base"* %57, null
  br i1 %58, label %70, label %54

59:                                               ; preds = %52, %59
  %60 = phi %"class.std::__1::__tree_end_node"* [ %64, %59 ], [ %1, %52 ]
  %61 = bitcast %"class.std::__1::__tree_end_node"* %60 to %"class.std::__1::__tree_node_base"*
  %62 = getelementptr inbounds %"class.std::__1::__tree_end_node", %"class.std::__1::__tree_end_node"* %60, i64 2
  %63 = bitcast %"class.std::__1::__tree_end_node"* %62 to %"class.std::__1::__tree_end_node"**
  %64 = load %"class.std::__1::__tree_end_node"*, %"class.std::__1::__tree_end_node"** %63, align 8
  %65 = getelementptr inbounds %"class.std::__1::__tree_end_node", %"class.std::__1::__tree_end_node"* %64, i64 0, i32 0
  %66 = load %"class.std::__1::__tree_node_base"*, %"class.std::__1::__tree_node_base"** %65, align 8
  %67 = icmp eq %"class.std::__1::__tree_node_base"* %66, %61
  br i1 %67, label %59, label %68

68:                                               ; preds = %59
  %69 = bitcast %"class.std::__1::__tree_end_node"* %64 to %"class.std::__1::__tree_node_base"*
  br label %70

70:                                               ; preds = %54, %68
  %71 = phi %"class.std::__1::__tree_node_base"* [ %69, %68 ], [ %55, %54 ]
  %72 = ptrtoint %"class.std::__1::__tree_node_base"* %71 to i64
  %73 = getelementptr inbounds %"class.std::__1::__tree_node_base", %"class.std::__1::__tree_node_base"* %71, i64 1
  %74 = bitcast %"class.std::__1::basic_string.91"* %4 to %"struct.std::__1::basic_string<char, std::__1::char_traits<char>, std::__1::allocator<char> >::__short"*
  %75 = getelementptr inbounds %"struct.std::__1::basic_string<char, std::__1::char_traits<char>, std::__1::allocator<char> >::__short", %"struct.std::__1::basic_string<char, std::__1::char_traits<char>, std::__1::allocator<char> >::__short"* %74, i64 0, i32 1, i32 0
  %76 = load i8, i8* %75, align 1
  %77 = icmp slt i8 %76, 0
  %78 = getelementptr inbounds %"class.std::__1::basic_string.91", %"class.std::__1::basic_string.91"* %4, i64 0, i32 0, i32 0, i32 0, i32 0, i32 0, i32 1
  %79 = load i64, i64* %78, align 8
  %80 = zext i8 %76 to i64
  %81 = select i1 %77, i64 %79, i64 %80
  %82 = bitcast %"class.std::__1::__tree_node_base"* %73 to %"struct.std::__1::basic_string<char, std::__1::char_traits<char>, std::__1::allocator<char> >::__short"*
  %83 = getelementptr inbounds %"struct.std::__1::basic_string<char, std::__1::char_traits<char>, std::__1::allocator<char> >::__short", %"struct.std::__1::basic_string<char, std::__1::char_traits<char>, std::__1::allocator<char> >::__short"* %82, i64 0, i32 1, i32 0
  %84 = load i8, i8* %83, align 1
  %85 = icmp slt i8 %84, 0
  %86 = getelementptr inbounds %"class.std::__1::__tree_node_base", %"class.std::__1::__tree_node_base"* %71, i64 1, i32 1
  %87 = bitcast %"class.std::__1::__tree_node_base"** %86 to i64*
  %88 = load i64, i64* %87, align 8
  %89 = zext i8 %84 to i64
  %90 = select i1 %85, i64 %88, i64 %89
  %91 = icmp ult i64 %81, %90
  %92 = select i1 %91, i64 %81, i64 %90
  %93 = icmp eq i64 %92, 0
  br i1 %93, label %105, label %94

94:                                               ; preds = %70
  %95 = bitcast %"class.std::__1::__tree_node_base"* %73 to i8**
  %96 = load i8*, i8** %95, align 8
  %97 = bitcast %"class.std::__1::__tree_node_base"* %73 to i8*
  %98 = select i1 %85, i8* %96, i8* %97
  %99 = getelementptr inbounds %"class.std::__1::basic_string.91", %"class.std::__1::basic_string.91"* %4, i64 0, i32 0, i32 0, i32 0, i32 0, i32 0, i32 0
  %100 = load i8*, i8** %99, align 8
  %101 = bitcast %"class.std::__1::basic_string.91"* %4 to i8*
  %102 = select i1 %77, i8* %100, i8* %101
  %103 = tail call i32 @memcmp(i8* %98, i8* %102, i64 %92) #14
  %104 = icmp eq i32 %103, 0
  br i1 %104, label %105, label %107

105:                                              ; preds = %94, %70
  %106 = icmp ult i64 %90, %81
  br i1 %106, label %109, label %118

107:                                              ; preds = %94
  %108 = icmp slt i32 %103, 0
  br i1 %108, label %109, label %118

109:                                              ; preds = %46, %105, %107
  %110 = phi i64 [ %72, %107 ], [ %72, %105 ], [ %6, %46 ]
  %111 = icmp eq %"class.std::__1::__tree_node_base"* %51, null
  br i1 %111, label %112, label %114

112:                                              ; preds = %109
  %113 = getelementptr inbounds %"class.std::__1::__tree_end_node", %"class.std::__1::__tree_end_node"* %1, i64 0, i32 0
  store %"class.std::__1::__tree_end_node"* %1, %"class.std::__1::__tree_end_node"** %2, align 8
  br label %208

114:                                              ; preds = %109
  %115 = bitcast %"class.std::__1::__tree_end_node"** %2 to i64*
  store i64 %110, i64* %115, align 8
  %116 = inttoptr i64 %110 to %"class.std::__1::__tree_node_base"*
  %117 = getelementptr inbounds %"class.std::__1::__tree_node_base", %"class.std::__1::__tree_node_base"* %116, i64 0, i32 1
  br label %208

118:                                              ; preds = %105, %107
  %119 = tail call dereferenceable(8) %"class.std::__1::__tree_node_base"** @_ZNSt3__16__treeINS_12basic_stringIcNS_11char_traitsIcEENS_9allocatorIcEEEENS_4lessIS6_EENS4_IS6_EEE12__find_equalIS6_EERPNS_16__tree_node_baseIPvEERPNS_15__tree_end_nodeISF_EERKT_(%"class.std::__1::__tree.83"* %0, %"class.std::__1::__tree_end_node"** dereferenceable(8) %2, %"class.std::__1::basic_string.91"* dereferenceable(24) %4)
  br label %208

120:                                              ; preds = %42
  br i1 %30, label %135, label %121

121:                                              ; preds = %120
  %122 = bitcast %"class.std::__1::__tree_end_node"* %10 to i8**
  %123 = load i8*, i8** %122, align 8
  %124 = getelementptr inbounds %"class.std::__1::basic_string.91", %"class.std::__1::basic_string.91"* %4, i64 0, i32 0, i32 0, i32 0, i32 0, i32 0, i32 0
  %125 = load i8*, i8** %124, align 8
  %126 = bitcast %"class.std::__1::__tree_end_node"* %10 to i8*
  %127 = select i1 %14, i8* %123, i8* %126
  %128 = bitcast %"class.std::__1::basic_string.91"* %4 to i8*
  %129 = select i1 %23, i8* %125, i8* %128
  br label %130

130:                                              ; preds = %121, %44
  %131 = phi i8* [ %129, %121 ], [ %35, %44 ]
  %132 = phi i8* [ %127, %121 ], [ %39, %44 ]
  %133 = tail call i32 @memcmp(i8* %132, i8* %131, i64 %29) #14
  %134 = icmp eq i32 %133, 0
  br i1 %134, label %135, label %136

135:                                              ; preds = %130, %120
  br i1 %28, label %138, label %205

136:                                              ; preds = %130
  %137 = icmp slt i32 %133, 0
  br i1 %137, label %138, label %205

138:                                              ; preds = %135, %136
  %139 = getelementptr inbounds %"class.std::__1::__tree_end_node", %"class.std::__1::__tree_end_node"* %1, i64 1, i32 0
  %140 = load %"class.std::__1::__tree_node_base"*, %"class.std::__1::__tree_node_base"** %139, align 8
  %141 = icmp eq %"class.std::__1::__tree_node_base"* %140, null
  br i1 %141, label %142, label %150

142:                                              ; preds = %138
  %143 = bitcast %"class.std::__1::__tree_end_node"* %1 to %"class.std::__1::__tree_node_base"*
  %144 = getelementptr inbounds %"class.std::__1::__tree_end_node", %"class.std::__1::__tree_end_node"* %1, i64 2
  %145 = bitcast %"class.std::__1::__tree_end_node"* %144 to %"class.std::__1::__tree_end_node"**
  %146 = load %"class.std::__1::__tree_end_node"*, %"class.std::__1::__tree_end_node"** %145, align 8
  %147 = getelementptr inbounds %"class.std::__1::__tree_end_node", %"class.std::__1::__tree_end_node"* %146, i64 0, i32 0
  %148 = load %"class.std::__1::__tree_node_base"*, %"class.std::__1::__tree_node_base"** %147, align 8
  %149 = icmp eq %"class.std::__1::__tree_node_base"* %148, %143
  br i1 %149, label %166, label %157

150:                                              ; preds = %138, %150
  %151 = phi %"class.std::__1::__tree_node_base"* [ %153, %150 ], [ %140, %138 ]
  %152 = getelementptr inbounds %"class.std::__1::__tree_node_base", %"class.std::__1::__tree_node_base"* %151, i64 0, i32 0, i32 0
  %153 = load %"class.std::__1::__tree_node_base"*, %"class.std::__1::__tree_node_base"** %152, align 8
  %154 = icmp eq %"class.std::__1::__tree_node_base"* %153, null
  br i1 %154, label %155, label %150

155:                                              ; preds = %150
  %156 = getelementptr inbounds %"class.std::__1::__tree_node_base", %"class.std::__1::__tree_node_base"* %151, i64 0, i32 0
  br label %166

157:                                              ; preds = %142, %157
  %158 = phi %"class.std::__1::__tree_end_node"** [ %161, %157 ], [ %145, %142 ]
  %159 = bitcast %"class.std::__1::__tree_end_node"** %158 to %"class.std::__1::__tree_node_base"**
  %160 = load %"class.std::__1::__tree_node_base"*, %"class.std::__1::__tree_node_base"** %159, align 8
  %161 = getelementptr inbounds %"class.std::__1::__tree_node_base", %"class.std::__1::__tree_node_base"* %160, i64 0, i32 2
  %162 = load %"class.std::__1::__tree_end_node"*, %"class.std::__1::__tree_end_node"** %161, align 8
  %163 = getelementptr inbounds %"class.std::__1::__tree_end_node", %"class.std::__1::__tree_end_node"* %162, i64 0, i32 0
  %164 = load %"class.std::__1::__tree_node_base"*, %"class.std::__1::__tree_node_base"** %163, align 8
  %165 = icmp eq %"class.std::__1::__tree_node_base"* %164, %160
  br i1 %165, label %166, label %157

166:                                              ; preds = %157, %155, %142
  %167 = phi %"class.std::__1::__tree_end_node"* [ %156, %155 ], [ %146, %142 ], [ %162, %157 ]
  %168 = icmp eq %"class.std::__1::__tree_end_node"* %167, %7
  br i1 %168, label %198, label %169

169:                                              ; preds = %166
  %170 = getelementptr inbounds %"class.std::__1::__tree_end_node", %"class.std::__1::__tree_end_node"* %167, i64 4
  %171 = bitcast %"class.std::__1::__tree_end_node"* %170 to %"struct.std::__1::basic_string<char, std::__1::char_traits<char>, std::__1::allocator<char> >::__short"*
  %172 = getelementptr inbounds %"struct.std::__1::basic_string<char, std::__1::char_traits<char>, std::__1::allocator<char> >::__short", %"struct.std::__1::basic_string<char, std::__1::char_traits<char>, std::__1::allocator<char> >::__short"* %171, i64 0, i32 1, i32 0
  %173 = load i8, i8* %172, align 1
  %174 = icmp slt i8 %173, 0
  %175 = getelementptr inbounds %"class.std::__1::__tree_end_node", %"class.std::__1::__tree_end_node"* %167, i64 5
  %176 = bitcast %"class.std::__1::__tree_end_node"* %175 to i64*
  %177 = load i64, i64* %176, align 8
  %178 = zext i8 %173 to i64
  %179 = select i1 %174, i64 %177, i64 %178
  %180 = icmp ult i64 %179, %27
  %181 = select i1 %180, i64 %179, i64 %27
  %182 = icmp eq i64 %181, 0
  br i1 %182, label %194, label %183

183:                                              ; preds = %169
  %184 = getelementptr inbounds %"class.std::__1::basic_string.91", %"class.std::__1::basic_string.91"* %4, i64 0, i32 0, i32 0, i32 0, i32 0, i32 0, i32 0
  %185 = load i8*, i8** %184, align 8
  %186 = bitcast %"class.std::__1::basic_string.91"* %4 to i8*
  %187 = select i1 %23, i8* %185, i8* %186
  %188 = bitcast %"class.std::__1::__tree_end_node"* %170 to i8**
  %189 = load i8*, i8** %188, align 8
  %190 = bitcast %"class.std::__1::__tree_end_node"* %170 to i8*
  %191 = select i1 %174, i8* %189, i8* %190
  %192 = tail call i32 @memcmp(i8* %187, i8* %191, i64 %181) #14
  %193 = icmp eq i32 %192, 0
  br i1 %193, label %194, label %196

194:                                              ; preds = %183, %169
  %195 = icmp ult i64 %27, %179
  br i1 %195, label %198, label %203

196:                                              ; preds = %183
  %197 = icmp slt i32 %192, 0
  br i1 %197, label %198, label %203

198:                                              ; preds = %194, %166, %196
  br i1 %141, label %199, label %201

199:                                              ; preds = %198
  %200 = bitcast %"class.std::__1::__tree_end_node"** %2 to i64*
  store i64 %6, i64* %200, align 8
  br label %208

201:                                              ; preds = %198
  store %"class.std::__1::__tree_end_node"* %167, %"class.std::__1::__tree_end_node"** %2, align 8
  %202 = getelementptr inbounds %"class.std::__1::__tree_end_node", %"class.std::__1::__tree_end_node"* %167, i64 0, i32 0
  br label %208

203:                                              ; preds = %194, %196
  %204 = tail call dereferenceable(8) %"class.std::__1::__tree_node_base"** @_ZNSt3__16__treeINS_12basic_stringIcNS_11char_traitsIcEENS_9allocatorIcEEEENS_4lessIS6_EENS4_IS6_EEE12__find_equalIS6_EERPNS_16__tree_node_baseIPvEERPNS_15__tree_end_nodeISF_EERKT_(%"class.std::__1::__tree.83"* %0, %"class.std::__1::__tree_end_node"** dereferenceable(8) %2, %"class.std::__1::basic_string.91"* dereferenceable(24) %4)
  br label %208

205:                                              ; preds = %135, %136
  %206 = bitcast %"class.std::__1::__tree_end_node"** %2 to i64*
  store i64 %6, i64* %206, align 8
  %207 = bitcast %"class.std::__1::__tree_node_base"** %3 to i64*
  store i64 %6, i64* %207, align 8
  br label %208

208:                                              ; preds = %199, %201, %203, %112, %114, %118, %205
  %209 = phi %"class.std::__1::__tree_node_base"** [ %3, %205 ], [ %113, %112 ], [ %117, %114 ], [ %119, %118 ], [ %139, %199 ], [ %202, %201 ], [ %204, %203 ]
  ret %"class.std::__1::__tree_node_base"** %209
}

; Function Attrs: nounwind ssp uwtable
define linkonce_odr hidden dereferenceable(8) %"class.std::__1::__tree_node_base"** @_ZNSt3__16__treeINS_12basic_stringIcNS_11char_traitsIcEENS_9allocatorIcEEEENS_4lessIS6_EENS4_IS6_EEE12__find_equalIS6_EERPNS_16__tree_node_baseIPvEERPNS_15__tree_end_nodeISF_EERKT_(%"class.std::__1::__tree.83"*, %"class.std::__1::__tree_end_node"** dereferenceable(8), %"class.std::__1::basic_string.91"* dereferenceable(24)) local_unnamed_addr #2 comdat align 2 {
  %4 = getelementptr inbounds %"class.std::__1::__tree.83", %"class.std::__1::__tree.83"* %0, i64 0, i32 1, i32 0, i32 0
  %5 = bitcast %"class.std::__1::__tree_end_node"* %4 to %"class.std::__1::__tree_node.142"**
  %6 = load %"class.std::__1::__tree_node.142"*, %"class.std::__1::__tree_node.142"** %5, align 8
  %7 = icmp eq %"class.std::__1::__tree_node.142"* %6, null
  br i1 %7, label %79, label %8

8:                                                ; preds = %3
  %9 = getelementptr inbounds %"class.std::__1::__tree.83", %"class.std::__1::__tree.83"* %0, i64 0, i32 1, i32 0, i32 0, i32 0
  %10 = bitcast %"class.std::__1::basic_string.91"* %2 to %"struct.std::__1::basic_string<char, std::__1::char_traits<char>, std::__1::allocator<char> >::__short"*
  %11 = getelementptr inbounds %"struct.std::__1::basic_string<char, std::__1::char_traits<char>, std::__1::allocator<char> >::__short", %"struct.std::__1::basic_string<char, std::__1::char_traits<char>, std::__1::allocator<char> >::__short"* %10, i64 0, i32 1, i32 0
  %12 = load i8, i8* %11, align 1
  %13 = icmp slt i8 %12, 0
  %14 = getelementptr inbounds %"class.std::__1::basic_string.91", %"class.std::__1::basic_string.91"* %2, i64 0, i32 0, i32 0, i32 0, i32 0, i32 0, i32 1
  %15 = load i64, i64* %14, align 8
  %16 = zext i8 %12 to i64
  %17 = select i1 %13, i64 %15, i64 %16
  %18 = getelementptr inbounds %"class.std::__1::basic_string.91", %"class.std::__1::basic_string.91"* %2, i64 0, i32 0, i32 0, i32 0, i32 0, i32 0, i32 0
  %19 = load i8*, i8** %18, align 8
  %20 = bitcast %"class.std::__1::basic_string.91"* %2 to i8*
  %21 = select i1 %13, i8* %19, i8* %20
  br label %22

22:                                               ; preds = %8, %75
  %23 = phi %"class.std::__1::__tree_node.142"* [ %78, %75 ], [ %6, %8 ]
  %24 = phi %"class.std::__1::__tree_node_base"** [ %77, %75 ], [ %9, %8 ]
  %25 = getelementptr inbounds %"class.std::__1::__tree_node.142", %"class.std::__1::__tree_node.142"* %23, i64 0, i32 1
  %26 = bitcast %"class.std::__1::basic_string.91"* %25 to %"struct.std::__1::basic_string<char, std::__1::char_traits<char>, std::__1::allocator<char> >::__short"*
  %27 = getelementptr inbounds %"struct.std::__1::basic_string<char, std::__1::char_traits<char>, std::__1::allocator<char> >::__short", %"struct.std::__1::basic_string<char, std::__1::char_traits<char>, std::__1::allocator<char> >::__short"* %26, i64 0, i32 1, i32 0
  %28 = load i8, i8* %27, align 1
  %29 = icmp slt i8 %28, 0
  %30 = getelementptr inbounds %"class.std::__1::__tree_node.142", %"class.std::__1::__tree_node.142"* %23, i64 0, i32 1, i32 0, i32 0, i32 0, i32 0, i32 0, i32 1
  %31 = load i64, i64* %30, align 8
  %32 = zext i8 %28 to i64
  %33 = select i1 %29, i64 %31, i64 %32
  %34 = icmp ult i64 %33, %17
  %35 = select i1 %34, i64 %33, i64 %17
  %36 = icmp eq i64 %35, 0
  br i1 %36, label %44, label %37

37:                                               ; preds = %22
  %38 = getelementptr inbounds %"class.std::__1::basic_string.91", %"class.std::__1::basic_string.91"* %25, i64 0, i32 0, i32 0, i32 0, i32 0, i32 0, i32 0
  %39 = load i8*, i8** %38, align 8
  %40 = bitcast %"class.std::__1::basic_string.91"* %25 to i8*
  %41 = select i1 %29, i8* %39, i8* %40
  %42 = tail call i32 @memcmp(i8* %21, i8* %41, i64 %35) #14
  %43 = icmp eq i32 %42, 0
  br i1 %43, label %44, label %46

44:                                               ; preds = %37, %22
  %45 = icmp ult i64 %17, %33
  br i1 %45, label %48, label %54

46:                                               ; preds = %37
  %47 = icmp slt i32 %42, 0
  br i1 %47, label %48, label %60

48:                                               ; preds = %44, %46
  %49 = getelementptr inbounds %"class.std::__1::__tree_node.142", %"class.std::__1::__tree_node.142"* %23, i64 0, i32 0, i32 0, i32 0
  %50 = load %"class.std::__1::__tree_node_base"*, %"class.std::__1::__tree_node_base"** %49, align 8
  %51 = icmp eq %"class.std::__1::__tree_node_base"* %50, null
  br i1 %51, label %52, label %75

52:                                               ; preds = %48
  %53 = getelementptr inbounds %"class.std::__1::__tree_node.142", %"class.std::__1::__tree_node.142"* %23, i64 0, i32 0, i32 0
  store %"class.std::__1::__tree_end_node"* %53, %"class.std::__1::__tree_end_node"** %1, align 8
  br label %81

54:                                               ; preds = %44
  br i1 %36, label %64, label %55

55:                                               ; preds = %54
  %56 = getelementptr inbounds %"class.std::__1::basic_string.91", %"class.std::__1::basic_string.91"* %25, i64 0, i32 0, i32 0, i32 0, i32 0, i32 0, i32 0
  %57 = load i8*, i8** %56, align 8
  %58 = bitcast %"class.std::__1::basic_string.91"* %25 to i8*
  %59 = select i1 %29, i8* %57, i8* %58
  br label %60

60:                                               ; preds = %55, %46
  %61 = phi i8* [ %59, %55 ], [ %41, %46 ]
  %62 = tail call i32 @memcmp(i8* %61, i8* %21, i64 %35) #14
  %63 = icmp eq i32 %62, 0
  br i1 %63, label %64, label %65

64:                                               ; preds = %60, %54
  br i1 %34, label %67, label %73

65:                                               ; preds = %60
  %66 = icmp slt i32 %62, 0
  br i1 %66, label %67, label %73

67:                                               ; preds = %64, %65
  %68 = getelementptr inbounds %"class.std::__1::__tree_node.142", %"class.std::__1::__tree_node.142"* %23, i64 0, i32 0, i32 1
  %69 = load %"class.std::__1::__tree_node_base"*, %"class.std::__1::__tree_node_base"** %68, align 8
  %70 = icmp eq %"class.std::__1::__tree_node_base"* %69, null
  br i1 %70, label %71, label %75

71:                                               ; preds = %67
  %72 = getelementptr inbounds %"class.std::__1::__tree_node.142", %"class.std::__1::__tree_node.142"* %23, i64 0, i32 0, i32 0
  store %"class.std::__1::__tree_end_node"* %72, %"class.std::__1::__tree_end_node"** %1, align 8
  br label %81

73:                                               ; preds = %64, %65
  %74 = getelementptr inbounds %"class.std::__1::__tree_node.142", %"class.std::__1::__tree_node.142"* %23, i64 0, i32 0, i32 0
  store %"class.std::__1::__tree_end_node"* %74, %"class.std::__1::__tree_end_node"** %1, align 8
  br label %81

75:                                               ; preds = %67, %48
  %76 = phi %"class.std::__1::__tree_node_base"* [ %50, %48 ], [ %69, %67 ]
  %77 = phi %"class.std::__1::__tree_node_base"** [ %49, %48 ], [ %68, %67 ]
  %78 = bitcast %"class.std::__1::__tree_node_base"* %76 to %"class.std::__1::__tree_node.142"*
  br label %22

79:                                               ; preds = %3
  store %"class.std::__1::__tree_end_node"* %4, %"class.std::__1::__tree_end_node"** %1, align 8
  %80 = getelementptr inbounds %"class.std::__1::__tree_end_node", %"class.std::__1::__tree_end_node"* %4, i64 0, i32 0
  br label %81

81:                                               ; preds = %79, %73, %71, %52
  %82 = phi %"class.std::__1::__tree_node_base"** [ %49, %52 ], [ %68, %71 ], [ %24, %73 ], [ %80, %79 ]
  ret %"class.std::__1::__tree_node_base"** %82
}

declare void @_ZNSt3__112basic_stringIcNS_11char_traitsIcEENS_9allocatorIcEEE25__init_copy_ctor_externalEPKcm(%"class.std::__1::basic_string.91"*, i8*, i64) local_unnamed_addr #5

; Function Attrs: nounwind ssp uwtable
define linkonce_odr hidden void @_ZNSt3__16__treeIN10extensions5mojom15APIPermissionIDENS_4lessIS3_EENS_9allocatorIS3_EEE7destroyEPNS_11__tree_nodeIS3_PvEE(%"class.std::__1::__tree.24"*, %"class.std::__1::__tree_node.155"*) local_unnamed_addr #2 comdat align 2 {
  %3 = icmp eq %"class.std::__1::__tree_node.155"* %1, null
  br i1 %3, label %11, label %4

4:                                                ; preds = %2
  %5 = bitcast %"class.std::__1::__tree_node.155"* %1 to %"class.std::__1::__tree_node.155"**
  %6 = load %"class.std::__1::__tree_node.155"*, %"class.std::__1::__tree_node.155"** %5, align 8
  tail call void @_ZNSt3__16__treeIN10extensions5mojom15APIPermissionIDENS_4lessIS3_EENS_9allocatorIS3_EEE7destroyEPNS_11__tree_nodeIS3_PvEE(%"class.std::__1::__tree.24"* %0, %"class.std::__1::__tree_node.155"* %6) #14
  %7 = getelementptr inbounds %"class.std::__1::__tree_node.155", %"class.std::__1::__tree_node.155"* %1, i64 0, i32 0, i32 1
  %8 = bitcast %"class.std::__1::__tree_node_base"** %7 to %"class.std::__1::__tree_node.155"**
  %9 = load %"class.std::__1::__tree_node.155"*, %"class.std::__1::__tree_node.155"** %8, align 8
  tail call void @_ZNSt3__16__treeIN10extensions5mojom15APIPermissionIDENS_4lessIS3_EENS_9allocatorIS3_EEE7destroyEPNS_11__tree_nodeIS3_PvEE(%"class.std::__1::__tree.24"* %0, %"class.std::__1::__tree_node.155"* %9) #14
  %10 = bitcast %"class.std::__1::__tree_node.155"* %1 to i8*
  tail call void @_ZdlPv(i8* %10) #13
  ret void

11:                                               ; preds = %2
  ret void
}

; Function Attrs: inlinehint nounwind ssp uwtable
define linkonce_odr hidden void @_ZNSt3__16vectorIN10extensions17PermissionMessageENS_9allocatorIS2_EEE21__push_back_slow_pathIS2_EEvOT_(%"class.std::__1::vector"*, %"class.extensions::PermissionMessage"* dereferenceable(88)) local_unnamed_addr #11 comdat align 2 {
  %3 = getelementptr inbounds %"class.std::__1::vector", %"class.std::__1::vector"* %0, i64 0, i32 0, i32 1
  %4 = bitcast %"class.extensions::PermissionMessage"** %3 to i64*
  %5 = load i64, i64* %4, align 8
  %6 = bitcast %"class.std::__1::vector"* %0 to i64*
  %7 = load i64, i64* %6, align 8
  %8 = sub i64 %5, %7
  %9 = sdiv exact i64 %8, 88
  %10 = add nsw i64 %9, 1
  %11 = icmp ugt i64 %10, 209622091746699450
  br i1 %11, label %12, label %14

12:                                               ; preds = %2
  %13 = bitcast %"class.std::__1::vector"* %0 to %"class.std::__1::__vector_base_common"*
  tail call void @_ZNKSt3__120__vector_base_commonILb1EE20__throw_length_errorEv(%"class.std::__1::__vector_base_common"* %13) #15
  unreachable

14:                                               ; preds = %2
  %15 = getelementptr inbounds %"class.std::__1::vector", %"class.std::__1::vector"* %0, i64 0, i32 0, i32 2, i32 0, i32 0
  %16 = bitcast %"class.extensions::PermissionMessage"** %15 to i64*
  %17 = load i64, i64* %16, align 8
  %18 = sub i64 %17, %7
  %19 = sdiv exact i64 %18, 88
  %20 = icmp ult i64 %19, 104811045873349725
  br i1 %20, label %21, label %26

21:                                               ; preds = %14
  %22 = shl nsw i64 %19, 1
  %23 = icmp ult i64 %22, %10
  %24 = select i1 %23, i64 %10, i64 %22
  %25 = icmp eq i64 %24, 0
  br i1 %25, label %31, label %26

26:                                               ; preds = %14, %21
  %27 = phi i64 [ %24, %21 ], [ 209622091746699450, %14 ]
  %28 = mul i64 %27, 88
  %29 = tail call i8* @_Znwm(i64 %28) #13
  %30 = bitcast i8* %29 to %"class.extensions::PermissionMessage"*
  br label %31

31:                                               ; preds = %21, %26
  %32 = phi i64 [ %27, %26 ], [ 0, %21 ]
  %33 = phi %"class.extensions::PermissionMessage"* [ %30, %26 ], [ null, %21 ]
  %34 = getelementptr inbounds %"class.extensions::PermissionMessage", %"class.extensions::PermissionMessage"* %33, i64 %9
  %35 = getelementptr inbounds %"class.extensions::PermissionMessage", %"class.extensions::PermissionMessage"* %33, i64 %32
  %36 = ptrtoint %"class.extensions::PermissionMessage"* %35 to i64
  tail call void @_ZN10extensions17PermissionMessageC1ERKS0_(%"class.extensions::PermissionMessage"* %34, %"class.extensions::PermissionMessage"* dereferenceable(88) %1) #14
  %37 = getelementptr inbounds %"class.extensions::PermissionMessage", %"class.extensions::PermissionMessage"* %34, i64 1
  %38 = ptrtoint %"class.extensions::PermissionMessage"* %37 to i64
  %39 = getelementptr inbounds %"class.std::__1::vector", %"class.std::__1::vector"* %0, i64 0, i32 0, i32 0
  %40 = load %"class.extensions::PermissionMessage"*, %"class.extensions::PermissionMessage"** %39, align 8
  %41 = load %"class.extensions::PermissionMessage"*, %"class.extensions::PermissionMessage"** %3, align 8
  %42 = icmp eq %"class.extensions::PermissionMessage"* %41, %40
  br i1 %42, label %43, label %45

43:                                               ; preds = %31
  %44 = ptrtoint %"class.extensions::PermissionMessage"* %40 to i64
  br label %54

45:                                               ; preds = %31, %45
  %46 = phi %"class.extensions::PermissionMessage"* [ %48, %45 ], [ %34, %31 ]
  %47 = phi %"class.extensions::PermissionMessage"* [ %49, %45 ], [ %41, %31 ]
  %48 = getelementptr inbounds %"class.extensions::PermissionMessage", %"class.extensions::PermissionMessage"* %46, i64 -1
  %49 = getelementptr inbounds %"class.extensions::PermissionMessage", %"class.extensions::PermissionMessage"* %47, i64 -1
  tail call void @_ZN10extensions17PermissionMessageC1ERKS0_(%"class.extensions::PermissionMessage"* %48, %"class.extensions::PermissionMessage"* dereferenceable(88) %49) #14
  %50 = icmp eq %"class.extensions::PermissionMessage"* %49, %40
  br i1 %50, label %51, label %45

51:                                               ; preds = %45
  %52 = load i64, i64* %6, align 8
  %53 = load %"class.extensions::PermissionMessage"*, %"class.extensions::PermissionMessage"** %3, align 8
  br label %54

54:                                               ; preds = %43, %51
  %55 = phi %"class.extensions::PermissionMessage"* [ %40, %43 ], [ %53, %51 ]
  %56 = phi %"class.extensions::PermissionMessage"* [ %34, %43 ], [ %48, %51 ]
  %57 = phi i64 [ %44, %43 ], [ %52, %51 ]
  %58 = ptrtoint %"class.extensions::PermissionMessage"* %56 to i64
  store i64 %58, i64* %6, align 8
  store i64 %38, i64* %4, align 8
  store i64 %36, i64* %16, align 8
  %59 = inttoptr i64 %57 to %"class.extensions::PermissionMessage"*
  %60 = icmp eq %"class.extensions::PermissionMessage"* %55, %59
  br i1 %60, label %68, label %61

61:                                               ; preds = %54, %61
  %62 = phi %"class.extensions::PermissionMessage"* [ %63, %61 ], [ %55, %54 ]
  %63 = getelementptr inbounds %"class.extensions::PermissionMessage", %"class.extensions::PermissionMessage"* %62, i64 -1
  %64 = bitcast %"class.extensions::PermissionMessage"* %63 to void (%"class.extensions::PermissionMessage"*)***
  %65 = load void (%"class.extensions::PermissionMessage"*)**, void (%"class.extensions::PermissionMessage"*)*** %64, align 8
  %66 = load void (%"class.extensions::PermissionMessage"*)*, void (%"class.extensions::PermissionMessage"*)** %65, align 8
  tail call void %66(%"class.extensions::PermissionMessage"* %63) #14
  %67 = icmp eq %"class.extensions::PermissionMessage"* %63, %59
  br i1 %67, label %68, label %61

68:                                               ; preds = %61, %54
  %69 = icmp eq i64 %57, 0
  br i1 %69, label %72, label %70

70:                                               ; preds = %68
  %71 = inttoptr i64 %57 to i8*
  tail call void @_ZdlPv(i8* %71) #13
  br label %72

72:                                               ; preds = %68, %70
  ret void
}

declare void @_ZN10extensions17PermissionMessageC1ERKS0_(%"class.extensions::PermissionMessage"*, %"class.extensions::PermissionMessage"* dereferenceable(88)) unnamed_addr #5

; Function Attrs: argmemonly nounwind
declare void @llvm.memset.p0i8.i64(i8* nocapture writeonly, i8, i64, i1 immarg) #4

; Function Attrs: nofree nounwind readonly
declare i32 @bcmp(i8* nocapture, i8* nocapture, i64) local_unnamed_addr #12

attributes #0 = { nofree norecurse nounwind ssp uwtable writeonly "correctly-rounded-divide-sqrt-fp-math"="false" "disable-tail-calls"="false" "less-precise-fpmad"="false" "min-legal-vector-width"="0" "no-frame-pointer-elim"="false" "no-frame-pointer-elim-non-leaf" "no-infs-fp-math"="false" "no-jump-tables"="false" "no-nans-fp-math"="false" "no-signed-zeros-fp-math"="false" "no-trapping-math"="false" "null-pointer-is-valid"="true" "stack-protector-buffer-size"="4" "target-cpu"="x86-64" "target-features"="+cx8,+fxsr,+mmx,+sse,+sse2,+sse3,+x87" "unsafe-fp-math"="false" "use-soft-float"="false" }
attributes #1 = { norecurse nounwind readnone ssp uwtable "correctly-rounded-divide-sqrt-fp-math"="false" "disable-tail-calls"="false" "less-precise-fpmad"="false" "min-legal-vector-width"="0" "no-frame-pointer-elim"="false" "no-frame-pointer-elim-non-leaf" "no-infs-fp-math"="false" "no-jump-tables"="false" "no-nans-fp-math"="false" "no-signed-zeros-fp-math"="false" "no-trapping-math"="false" "null-pointer-is-valid"="true" "stack-protector-buffer-size"="4" "target-cpu"="x86-64" "target-features"="+cx8,+fxsr,+mmx,+sse,+sse2,+sse3,+x87" "unsafe-fp-math"="false" "use-soft-float"="false" }
attributes #2 = { nounwind ssp uwtable "correctly-rounded-divide-sqrt-fp-math"="false" "disable-tail-calls"="false" "less-precise-fpmad"="false" "min-legal-vector-width"="0" "no-frame-pointer-elim"="false" "no-frame-pointer-elim-non-leaf" "no-infs-fp-math"="false" "no-jump-tables"="false" "no-nans-fp-math"="false" "no-signed-zeros-fp-math"="false" "no-trapping-math"="false" "null-pointer-is-valid"="true" "stack-protector-buffer-size"="4" "target-cpu"="x86-64" "target-features"="+cx8,+fxsr,+mmx,+sse,+sse2,+sse3,+x87" "unsafe-fp-math"="false" "use-soft-float"="false" }
attributes #3 = { nobuiltin nounwind "correctly-rounded-divide-sqrt-fp-math"="false" "disable-tail-calls"="false" "less-precise-fpmad"="false" "no-frame-pointer-elim"="false" "no-frame-pointer-elim-non-leaf" "no-infs-fp-math"="false" "no-nans-fp-math"="false" "no-signed-zeros-fp-math"="false" "no-trapping-math"="false" "null-pointer-is-valid"="true" "stack-protector-buffer-size"="4" "target-cpu"="x86-64" "target-features"="+cx8,+fxsr,+mmx,+sse,+sse2,+sse3,+x87" "unsafe-fp-math"="false" "use-soft-float"="false" }
attributes #4 = { argmemonly nounwind }
attributes #5 = { "correctly-rounded-divide-sqrt-fp-math"="false" "disable-tail-calls"="false" "less-precise-fpmad"="false" "no-frame-pointer-elim"="false" "no-frame-pointer-elim-non-leaf" "no-infs-fp-math"="false" "no-nans-fp-math"="false" "no-signed-zeros-fp-math"="false" "no-trapping-math"="false" "null-pointer-is-valid"="true" "stack-protector-buffer-size"="4" "target-cpu"="x86-64" "target-features"="+cx8,+fxsr,+mmx,+sse,+sse2,+sse3,+x87" "unsafe-fp-math"="false" "use-soft-float"="false" }
attributes #6 = { nounwind "correctly-rounded-divide-sqrt-fp-math"="false" "disable-tail-calls"="false" "less-precise-fpmad"="false" "no-frame-pointer-elim"="false" "no-frame-pointer-elim-non-leaf" "no-infs-fp-math"="false" "no-nans-fp-math"="false" "no-signed-zeros-fp-math"="false" "no-trapping-math"="false" "null-pointer-is-valid"="true" "stack-protector-buffer-size"="4" "target-cpu"="x86-64" "target-features"="+cx8,+fxsr,+mmx,+sse,+sse2,+sse3,+x87" "unsafe-fp-math"="false" "use-soft-float"="false" }
attributes #7 = { nofree nounwind readonly "correctly-rounded-divide-sqrt-fp-math"="false" "disable-tail-calls"="false" "less-precise-fpmad"="false" "no-frame-pointer-elim"="false" "no-frame-pointer-elim-non-leaf" "no-infs-fp-math"="false" "no-nans-fp-math"="false" "no-signed-zeros-fp-math"="false" "no-trapping-math"="false" "null-pointer-is-valid"="true" "stack-protector-buffer-size"="4" "target-cpu"="x86-64" "target-features"="+cx8,+fxsr,+mmx,+sse,+sse2,+sse3,+x87" "unsafe-fp-math"="false" "use-soft-float"="false" }
attributes #8 = { noreturn "correctly-rounded-divide-sqrt-fp-math"="false" "disable-tail-calls"="false" "less-precise-fpmad"="false" "no-frame-pointer-elim"="false" "no-frame-pointer-elim-non-leaf" "no-infs-fp-math"="false" "no-nans-fp-math"="false" "no-signed-zeros-fp-math"="false" "no-trapping-math"="false" "null-pointer-is-valid"="true" "stack-protector-buffer-size"="4" "target-cpu"="x86-64" "target-features"="+cx8,+fxsr,+mmx,+sse,+sse2,+sse3,+x87" "unsafe-fp-math"="false" "use-soft-float"="false" }
attributes #9 = { noreturn nounwind "correctly-rounded-divide-sqrt-fp-math"="false" "disable-tail-calls"="false" "less-precise-fpmad"="false" "no-frame-pointer-elim"="false" "no-frame-pointer-elim-non-leaf" "no-infs-fp-math"="false" "no-nans-fp-math"="false" "no-signed-zeros-fp-math"="false" "no-trapping-math"="false" "null-pointer-is-valid"="true" "stack-protector-buffer-size"="4" "target-cpu"="x86-64" "target-features"="+cx8,+fxsr,+mmx,+sse,+sse2,+sse3,+x87" "unsafe-fp-math"="false" "use-soft-float"="false" }
attributes #10 = { nobuiltin nofree "correctly-rounded-divide-sqrt-fp-math"="false" "disable-tail-calls"="false" "less-precise-fpmad"="false" "no-frame-pointer-elim"="false" "no-frame-pointer-elim-non-leaf" "no-infs-fp-math"="false" "no-nans-fp-math"="false" "no-signed-zeros-fp-math"="false" "no-trapping-math"="false" "null-pointer-is-valid"="true" "stack-protector-buffer-size"="4" "target-cpu"="x86-64" "target-features"="+cx8,+fxsr,+mmx,+sse,+sse2,+sse3,+x87" "unsafe-fp-math"="false" "use-soft-float"="false" }
attributes #11 = { inlinehint nounwind ssp uwtable "correctly-rounded-divide-sqrt-fp-math"="false" "disable-tail-calls"="false" "less-precise-fpmad"="false" "min-legal-vector-width"="0" "no-frame-pointer-elim"="false" "no-frame-pointer-elim-non-leaf" "no-infs-fp-math"="false" "no-jump-tables"="false" "no-nans-fp-math"="false" "no-signed-zeros-fp-math"="false" "no-trapping-math"="false" "null-pointer-is-valid"="true" "stack-protector-buffer-size"="4" "target-cpu"="x86-64" "target-features"="+cx8,+fxsr,+mmx,+sse,+sse2,+sse3,+x87" "unsafe-fp-math"="false" "use-soft-float"="false" }
attributes #12 = { nofree nounwind readonly }
attributes #13 = { builtin nounwind }
attributes #14 = { nounwind }
attributes #15 = { noreturn nounwind }

!llvm.module.flags = !{!0, !1}

!0 = !{i32 1, !"wchar_size", i32 4}
!1 = !{i32 7, !"PIC Level", i32 2}
!2 = !{!3}
!3 = distinct !{!3, !4, !"_ZN4base16STLSetDifferenceINSt3__13setINS1_12basic_stringIcNS1_11char_traitsIcEENS1_9allocatorIcEEEENS1_4lessIS8_EENS6_IS8_EEEESC_SC_EET_RKT0_RKT1_: argument 0"}
!4 = distinct !{!4, !"_ZN4base16STLSetDifferenceINSt3__13setINS1_12basic_stringIcNS1_11char_traitsIcEENS1_9allocatorIcEEEENS1_4lessIS8_EENS6_IS8_EEEESC_SC_EET_RKT0_RKT1_"}
!5 = !{!6}
!6 = distinct !{!6, !7, !"_ZNK10extensions16BaseSetOperatorsINS_16APIPermissionSetEE5beginEv: argument 0"}
!7 = distinct !{!7, !"_ZNK10extensions16BaseSetOperatorsINS_16APIPermissionSetEE5beginEv"}
!8 = !{!9}
!9 = distinct !{!9, !10, !"_ZNK10extensions16BaseSetOperatorsINS_21ManifestPermissionSetEE5beginEv: argument 0"}
!10 = distinct !{!10, !"_ZNK10extensions16BaseSetOperatorsINS_21ManifestPermissionSetEE5beginEv"}
!11 = !{!12}
!12 = distinct !{!12, !13, !"_ZNK10extensions16BaseSetOperatorsINS_16APIPermissionSetEE5beginEv: argument 0"}
!13 = distinct !{!13, !"_ZNK10extensions16BaseSetOperatorsINS_16APIPermissionSetEE5beginEv"}
!14 = !{!15}
!15 = distinct !{!15, !16, !"_ZNK10extensions16BaseSetOperatorsINS_21ManifestPermissionSetEE5beginEv: argument 0"}
!16 = distinct !{!16, !"_ZNK10extensions16BaseSetOperatorsINS_21ManifestPermissionSetEE5beginEv"}
!17 = distinct !{!17, !18}
!18 = !{!"llvm.loop.isvectorized", i32 1}
!19 = distinct !{!19, !20, !18}
!20 = !{!"llvm.loop.unroll.runtime.disable"}
!21 = distinct !{!21, !18}
!22 = distinct !{!22, !20, !18}
!23 = !{!24}
!24 = distinct !{!24, !25, !"_ZNK10extensions16BaseSetOperatorsINS_16APIPermissionSetEE5beginEv: argument 0"}
!25 = distinct !{!25, !"_ZNK10extensions16BaseSetOperatorsINS_16APIPermissionSetEE5beginEv"}
!26 = !{!27}
!27 = distinct !{!27, !28, !"_ZNK10extensions16BaseSetOperatorsINS_21ManifestPermissionSetEE5beginEv: argument 0"}
!28 = distinct !{!28, !"_ZNK10extensions16BaseSetOperatorsINS_21ManifestPermissionSetEE5beginEv"}
!29 = !{!30}
!30 = distinct !{!30, !31, !"_ZNK10extensions16BaseSetOperatorsINS_16APIPermissionSetEE5beginEv: argument 0"}
!31 = distinct !{!31, !"_ZNK10extensions16BaseSetOperatorsINS_16APIPermissionSetEE5beginEv"}
!32 = !{!33}
!33 = distinct !{!33, !34, !"_ZNK10extensions16BaseSetOperatorsINS_21ManifestPermissionSetEE5beginEv: argument 0"}
!34 = distinct !{!34, !"_ZNK10extensions16BaseSetOperatorsINS_21ManifestPermissionSetEE5beginEv"}
!35 = !{!36}
!36 = distinct !{!36, !37, !"_ZNK10extensions16BaseSetOperatorsINS_16APIPermissionSetEE5beginEv: argument 0"}
!37 = distinct !{!37, !"_ZNK10extensions16BaseSetOperatorsINS_16APIPermissionSetEE5beginEv"}
!38 = !{!39}
!39 = distinct !{!39, !40, !"_ZNK10extensions16BaseSetOperatorsINS_21ManifestPermissionSetEE5beginEv: argument 0"}
!40 = distinct !{!40, !"_ZNK10extensions16BaseSetOperatorsINS_21ManifestPermissionSetEE5beginEv"}
!41 = !{!42}
!42 = distinct !{!42, !43, !"_ZNK10extensions16BaseSetOperatorsINS_16APIPermissionSetEE5beginEv: argument 0"}
!43 = distinct !{!43, !"_ZNK10extensions16BaseSetOperatorsINS_16APIPermissionSetEE5beginEv"}
!44 = !{!45}
!45 = distinct !{!45, !46, !"_ZNK10extensions16BaseSetOperatorsINS_21ManifestPermissionSetEE5beginEv: argument 0"}
!46 = distinct !{!46, !"_ZNK10extensions16BaseSetOperatorsINS_21ManifestPermissionSetEE5beginEv"}
!47 = !{!48}
!48 = distinct !{!48, !49}
!49 = distinct !{!49, !"LVerDomain"}
!50 = !{!51}
!51 = distinct !{!51, !49}
!52 = distinct !{!52, !18}
!53 = distinct !{!53, !54}
!54 = !{!"llvm.loop.unroll.disable"}
!55 = distinct !{!55, !54}
!56 = distinct !{!56, !18}
!57 = !{!58}
!58 = distinct !{!58, !59}
!59 = distinct !{!59, !"LVerDomain"}
!60 = !{!61}
!61 = distinct !{!61, !59}
!62 = distinct !{!62, !18}
!63 = distinct !{!63, !54}
!64 = distinct !{!64, !54}
!65 = distinct !{!65, !18}
!66 = !{!67}
!67 = distinct !{!67, !68}
!68 = distinct !{!68, !"LVerDomain"}
!69 = !{!70}
!70 = distinct !{!70, !68}
!71 = distinct !{!71, !18}
!72 = distinct !{!72, !54}
!73 = distinct !{!73, !54}
!74 = distinct !{!74, !18}
!75 = !{!76}
!76 = distinct !{!76, !77}
!77 = distinct !{!77, !"LVerDomain"}
!78 = !{!79}
!79 = distinct !{!79, !77}
!80 = distinct !{!80, !18}
!81 = distinct !{!81, !54}
!82 = distinct !{!82, !54}
!83 = distinct !{!83, !18}
!84 = distinct !{!84, !18}
!85 = distinct !{!85, !54}
!86 = distinct !{!86, !20, !18}
!87 = !{!88}
!88 = distinct !{!88, !89}
!89 = distinct !{!89, !"LVerDomain"}
!90 = !{!91}
!91 = distinct !{!91, !89}
!92 = distinct !{!92, !18}
!93 = distinct !{!93, !54}
!94 = distinct !{!94, !54}
!95 = distinct !{!95, !18}
!96 = !{i8 0, i8 2}
!97 = !{!98}
!98 = distinct !{!98, !99}
!99 = distinct !{!99, !"LVerDomain"}
!100 = !{!101}
!101 = distinct !{!101, !99}
!102 = distinct !{!102, !18}
!103 = distinct !{!103, !54}
!104 = distinct !{!104, !54}
!105 = distinct !{!105, !18}
!106 = !{!107}
!107 = distinct !{!107, !108, !"_ZNSt3__16__treeINS_12basic_stringIcNS_11char_traitsIcEENS_9allocatorIcEEEENS_4lessIS6_EENS4_IS6_EEE16__construct_nodeIJRKS6_EEENS_10unique_ptrINS_11__tree_nodeIS6_PvEENS_22__tree_node_destructorINS4_ISH_EEEEEEDpOT_: argument 0"}
!108 = distinct !{!108, !"_ZNSt3__16__treeINS_12basic_stringIcNS_11char_traitsIcEENS_9allocatorIcEEEENS_4lessIS6_EENS4_IS6_EEE16__construct_nodeIJRKS6_EEENS_10unique_ptrINS_11__tree_nodeIS6_PvEENS_22__tree_node_destructorINS4_ISH_EEEEEEDpOT_"}
