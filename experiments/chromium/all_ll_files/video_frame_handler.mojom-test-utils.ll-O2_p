; ModuleID = 'gen/services/video_capture/public/mojom/video_frame_handler.mojom-test-utils.cc'
source_filename = "gen/services/video_capture/public/mojom/video_frame_handler.mojom-test-utils.cc"
target datalayout = "e-m:e-i64:64-f80:128-n8:16:32:64-S128"
target triple = "x86_64-unknown-linux-gnu"

module asm ".symver exp, exp@GLIBC_2.2.5"
module asm ".symver exp2, exp2@GLIBC_2.2.5"
module asm ".symver exp2f, exp2f@GLIBC_2.2.5"
module asm ".symver expf, expf@GLIBC_2.2.5"
module asm ".symver lgamma, lgamma@GLIBC_2.2.5"
module asm ".symver lgammaf, lgammaf@GLIBC_2.2.5"
module asm ".symver lgammal, lgammal@GLIBC_2.2.5"
module asm ".symver log, log@GLIBC_2.2.5"
module asm ".symver log2, log2@GLIBC_2.2.5"
module asm ".symver log2f, log2f@GLIBC_2.2.5"
module asm ".symver logf, logf@GLIBC_2.2.5"
module asm ".symver pow, pow@GLIBC_2.2.5"
module asm ".symver powf, powf@GLIBC_2.2.5"

%"class.video_capture::mojom::VideoFrameHandlerAsyncWaiter" = type { %"class.video_capture::mojom::VideoFrameHandler"* }
%"class.video_capture::mojom::VideoFrameHandler" = type { i32 (...)** }
%"class.video_capture::mojom::VideoFrameHandlerInterceptorForTesting" = type { %"class.video_capture::mojom::VideoFrameHandler" }
%"class.mojo::StructPtr" = type { %"class.std::__1::unique_ptr" }
%"class.std::__1::unique_ptr" = type { %"class.std::__1::__compressed_pair" }
%"class.std::__1::__compressed_pair" = type { %"struct.std::__1::__compressed_pair_elem" }
%"struct.std::__1::__compressed_pair_elem" = type { %"class.media::mojom::VideoBufferHandle"* }
%"class.media::mojom::VideoBufferHandle" = type { i32, %"union.media::mojom::VideoBufferHandle::Union_" }
%"union.media::mojom::VideoBufferHandle::Union_" = type { %"class.mojo::ScopedHandleBase"* }
%"class.mojo::ScopedHandleBase" = type { %"class.mojo::SharedBufferHandle" }
%"class.mojo::SharedBufferHandle" = type { %"class.mojo::Handle" }
%"class.mojo::Handle" = type { i32 }
%"class.mojo::StructPtr.25" = type { %"class.std::__1::unique_ptr.26" }
%"class.std::__1::unique_ptr.26" = type { %"class.std::__1::__compressed_pair.27" }
%"class.std::__1::__compressed_pair.27" = type { %"struct.std::__1::__compressed_pair_elem.28" }
%"struct.std::__1::__compressed_pair_elem.28" = type { %"class.video_capture::mojom::ReadyFrameInBuffer"* }
%"class.video_capture::mojom::ReadyFrameInBuffer" = type { i32, i32, %"class.mojo::PendingRemote", %"class.mojo::StructPtr.30" }
%"class.mojo::PendingRemote" = type { %"struct.mojo::internal::PendingRemoteState" }
%"struct.mojo::internal::PendingRemoteState" = type { %"class.mojo::ScopedHandleBase.29", i32 }
%"class.mojo::ScopedHandleBase.29" = type { %"class.mojo::MessagePipeHandle" }
%"class.mojo::MessagePipeHandle" = type { %"class.mojo::Handle" }
%"class.mojo::StructPtr.30" = type { %"class.std::__1::unique_ptr.31" }
%"class.std::__1::unique_ptr.31" = type { %"class.std::__1::__compressed_pair.32" }
%"class.std::__1::__compressed_pair.32" = type { %"struct.std::__1::__compressed_pair_elem.33" }
%"struct.std::__1::__compressed_pair_elem.33" = type { %"class.media::mojom::VideoFrameInfo"* }
%"class.media::mojom::VideoFrameInfo" = type { %"class.base::TimeDelta", %"struct.media::VideoFrameMetadata", i32, %"class.gfx::Size", %"class.gfx::Rect", i8, %"class.absl::optional.69", %"class.mojo::StructPtr.74" }
%"class.base::TimeDelta" = type { i64 }
%"struct.media::VideoFrameMetadata" = type { i8, %"class.absl::optional", %"class.absl::optional", %"class.absl::optional.34", %"class.absl::optional.39", %"class.absl::optional.44", i8, %"class.absl::optional.49", %"class.absl::optional.54", i8, %"class.absl::optional", i8, [3 x i8], %"class.absl::optional.59", i8, i8, i8, i8, i32, %"class.absl::optional.64", i8, %"class.absl::optional.54", %"class.absl::optional.54", %"class.absl::optional.54", %"class.absl::optional.54", %"class.absl::optional.54", %"class.absl::optional", %"class.absl::optional", %"class.absl::optional.49", %"class.absl::optional.54", %"class.absl::optional", %"class.absl::optional.49", %"class.absl::optional.34" }
%"class.absl::optional.39" = type { %"class.absl::optional_internal::optional_data.40" }
%"class.absl::optional_internal::optional_data.40" = type { %"class.absl::optional_internal::optional_data_base.41" }
%"class.absl::optional_internal::optional_data_base.41" = type { %"class.absl::optional_internal::optional_data_dtor_base.42" }
%"class.absl::optional_internal::optional_data_dtor_base.42" = type { i8, %union.anon.43 }
%union.anon.43 = type { %"class.gfx::Rect" }
%"class.absl::optional.44" = type { %"class.absl::optional_internal::optional_data.45" }
%"class.absl::optional_internal::optional_data.45" = type { %"class.absl::optional_internal::optional_data_base.46" }
%"class.absl::optional_internal::optional_data_base.46" = type { %"class.absl::optional_internal::optional_data_dtor_base.47" }
%"class.absl::optional_internal::optional_data_dtor_base.47" = type { i8, %union.anon.48 }
%union.anon.48 = type { i32 }
%"class.absl::optional.59" = type { %"class.absl::optional_internal::optional_data.60" }
%"class.absl::optional_internal::optional_data.60" = type { %"class.absl::optional_internal::optional_data_base.61" }
%"class.absl::optional_internal::optional_data_base.61" = type { %"class.absl::optional_internal::optional_data_dtor_base.62" }
%"class.absl::optional_internal::optional_data_dtor_base.62" = type { i8, [3 x i8], %union.anon.63 }
%union.anon.63 = type { %"struct.media::VideoTransformation" }
%"struct.media::VideoTransformation" = type <{ i32, i8, [3 x i8] }>
%"class.absl::optional.64" = type { %"class.absl::optional_internal::optional_data.65" }
%"class.absl::optional_internal::optional_data.65" = type { %"class.absl::optional_internal::optional_data_base.66" }
%"class.absl::optional_internal::optional_data_base.66" = type { %"class.absl::optional_internal::optional_data_dtor_base.67" }
%"class.absl::optional_internal::optional_data_dtor_base.67" = type { i8, %union.anon.68 }
%union.anon.68 = type { %"class.base::UnguessableToken" }
%"class.base::UnguessableToken" = type { %"class.base::Token" }
%"class.base::Token" = type { i64, i64 }
%"class.absl::optional.54" = type { %"class.absl::optional_internal::optional_data.55" }
%"class.absl::optional_internal::optional_data.55" = type { %"class.absl::optional_internal::optional_data_base.56" }
%"class.absl::optional_internal::optional_data_base.56" = type { %"class.absl::optional_internal::optional_data_dtor_base.57" }
%"class.absl::optional_internal::optional_data_dtor_base.57" = type { i8, %union.anon.58 }
%union.anon.58 = type { double }
%"class.absl::optional" = type { %"class.absl::optional_internal::optional_data" }
%"class.absl::optional_internal::optional_data" = type { %"class.absl::optional_internal::optional_data_base" }
%"class.absl::optional_internal::optional_data_base" = type { %"class.absl::optional_internal::optional_data_dtor_base" }
%"class.absl::optional_internal::optional_data_dtor_base" = type { i8, %union.anon }
%union.anon = type { %"class.base::TimeTicks" }
%"class.base::TimeTicks" = type { %"class.base::time_internal::TimeBase" }
%"class.base::time_internal::TimeBase" = type { i64 }
%"class.absl::optional.49" = type { %"class.absl::optional_internal::optional_data.50" }
%"class.absl::optional_internal::optional_data.50" = type { %"class.absl::optional_internal::optional_data_base.51" }
%"class.absl::optional_internal::optional_data_base.51" = type { %"class.absl::optional_internal::optional_data_dtor_base.52" }
%"class.absl::optional_internal::optional_data_dtor_base.52" = type { i8, %union.anon.53 }
%union.anon.53 = type { %"class.base::TimeDelta" }
%"class.absl::optional.34" = type { %"class.absl::optional_internal::optional_data.35" }
%"class.absl::optional_internal::optional_data.35" = type { %"class.absl::optional_internal::optional_data_base.36" }
%"class.absl::optional_internal::optional_data_base.36" = type { %"class.absl::optional_internal::optional_data_dtor_base.37" }
%"class.absl::optional_internal::optional_data_dtor_base.37" = type { i8, %union.anon.38 }
%union.anon.38 = type { i32 }
%"class.gfx::Size" = type { i32, i32 }
%"class.gfx::Rect" = type { %"class.gfx::Point", %"class.gfx::Size" }
%"class.gfx::Point" = type { i32, i32 }
%"class.absl::optional.69" = type { %"class.absl::optional_internal::optional_data.70" }
%"class.absl::optional_internal::optional_data.70" = type { %"class.absl::optional_internal::optional_data_base.71" }
%"class.absl::optional_internal::optional_data_base.71" = type { %"class.absl::optional_internal::optional_data_dtor_base.72" }
%"class.absl::optional_internal::optional_data_dtor_base.72" = type { i8, %union.anon.73 }
%union.anon.73 = type { %"class.gfx::ColorSpace" }
%"class.gfx::ColorSpace" = type { i8, i8, i8, i8, [9 x float], [7 x float] }
%"class.mojo::StructPtr.74" = type { %"class.std::__1::unique_ptr.75" }
%"class.std::__1::unique_ptr.75" = type { %"class.std::__1::__compressed_pair.76" }
%"class.std::__1::__compressed_pair.76" = type { %"struct.std::__1::__compressed_pair_elem.77" }
%"struct.std::__1::__compressed_pair_elem.77" = type { %"class.media::mojom::PlaneStrides"* }
%"class.media::mojom::PlaneStrides" = type { %"class.std::__1::vector.78" }
%"class.std::__1::vector.78" = type { %"class.std::__1::__vector_base.79" }
%"class.std::__1::__vector_base.79" = type { i32*, i32*, %"class.std::__1::__compressed_pair.80" }
%"class.std::__1::__compressed_pair.80" = type { %"struct.std::__1::__compressed_pair_elem.81" }
%"struct.std::__1::__compressed_pair_elem.81" = type { i32* }
%"class.std::__1::vector.94" = type { %"class.std::__1::__vector_base.95" }
%"class.std::__1::__vector_base.95" = type { %"class.mojo::StructPtr.25"*, %"class.mojo::StructPtr.25"*, %"class.std::__1::__compressed_pair.96" }
%"class.std::__1::__compressed_pair.96" = type { %"struct.std::__1::__compressed_pair_elem.97" }
%"struct.std::__1::__compressed_pair_elem.97" = type { %"class.mojo::StructPtr.25"* }
%"class.std::__1::basic_string" = type { %"class.std::__1::__compressed_pair.101" }
%"class.std::__1::__compressed_pair.101" = type { %"struct.std::__1::__compressed_pair_elem.102" }
%"struct.std::__1::__compressed_pair_elem.102" = type { %"struct.std::__1::basic_string<char, std::__1::char_traits<char>, std::__1::allocator<char> >::__rep" }
%"struct.std::__1::basic_string<char, std::__1::char_traits<char>, std::__1::allocator<char> >::__rep" = type { %union.anon.103 }
%union.anon.103 = type { %"struct.std::__1::basic_string<char, std::__1::char_traits<char>, std::__1::allocator<char> >::__long" }
%"struct.std::__1::basic_string<char, std::__1::char_traits<char>, std::__1::allocator<char> >::__long" = type { i8*, i64, i64 }

$_ZN13video_capture5mojom17VideoFrameHandlerD2Ev = comdat any

$_ZN13video_capture5mojom38VideoFrameHandlerInterceptorForTestingD0Ev = comdat any

@_ZTVN13video_capture5mojom38VideoFrameHandlerInterceptorForTestingE = hidden unnamed_addr constant { [14 x i8*] } { [14 x i8*] [i8* null, i8* null, i8* bitcast (void (%"class.video_capture::mojom::VideoFrameHandler"*)* @_ZN13video_capture5mojom17VideoFrameHandlerD2Ev to i8*), i8* bitcast (void (%"class.video_capture::mojom::VideoFrameHandlerInterceptorForTesting"*)* @_ZN13video_capture5mojom38VideoFrameHandlerInterceptorForTestingD0Ev to i8*), i8* bitcast (void (%"class.video_capture::mojom::VideoFrameHandlerInterceptorForTesting"*, i32, %"class.mojo::StructPtr"*)* @_ZN13video_capture5mojom38VideoFrameHandlerInterceptorForTesting11OnNewBufferEiN4mojo9StructPtrIN5media5mojom17VideoBufferHandleEEE to i8*), i8* bitcast (void (%"class.video_capture::mojom::VideoFrameHandlerInterceptorForTesting"*, %"class.mojo::StructPtr.25"*, %"class.std::__1::vector.94"*)* @_ZN13video_capture5mojom38VideoFrameHandlerInterceptorForTesting20OnFrameReadyInBufferEN4mojo9StructPtrINS0_18ReadyFrameInBufferEEENSt3__16vectorIS5_NS6_9allocatorIS5_EEEE to i8*), i8* bitcast (void (%"class.video_capture::mojom::VideoFrameHandlerInterceptorForTesting"*, i32)* @_ZN13video_capture5mojom38VideoFrameHandlerInterceptorForTesting15OnBufferRetiredEi to i8*), i8* bitcast (void (%"class.video_capture::mojom::VideoFrameHandlerInterceptorForTesting"*, i32)* @_ZN13video_capture5mojom38VideoFrameHandlerInterceptorForTesting7OnErrorEN5media17VideoCaptureErrorE to i8*), i8* bitcast (void (%"class.video_capture::mojom::VideoFrameHandlerInterceptorForTesting"*, i32)* @_ZN13video_capture5mojom38VideoFrameHandlerInterceptorForTesting14OnFrameDroppedEN5media27VideoCaptureFrameDropReasonE to i8*), i8* bitcast (void (%"class.video_capture::mojom::VideoFrameHandlerInterceptorForTesting"*, %"class.std::__1::basic_string"*)* @_ZN13video_capture5mojom38VideoFrameHandlerInterceptorForTesting5OnLogERKNSt3__112basic_stringIcNS2_11char_traitsIcEENS2_9allocatorIcEEEE to i8*), i8* bitcast (void (%"class.video_capture::mojom::VideoFrameHandlerInterceptorForTesting"*)* @_ZN13video_capture5mojom38VideoFrameHandlerInterceptorForTesting9OnStartedEv to i8*), i8* bitcast (void (%"class.video_capture::mojom::VideoFrameHandlerInterceptorForTesting"*)* @_ZN13video_capture5mojom38VideoFrameHandlerInterceptorForTesting23OnStartedUsingGpuDecodeEv to i8*), i8* bitcast (void (%"class.video_capture::mojom::VideoFrameHandlerInterceptorForTesting"*)* @_ZN13video_capture5mojom38VideoFrameHandlerInterceptorForTesting9OnStoppedEv to i8*), i8* bitcast (void ()* @__cxa_pure_virtual to i8*)] }, align 8

@_ZN13video_capture5mojom28VideoFrameHandlerAsyncWaiterC1EPNS0_17VideoFrameHandlerE = hidden unnamed_addr alias void (%"class.video_capture::mojom::VideoFrameHandlerAsyncWaiter"*, %"class.video_capture::mojom::VideoFrameHandler"*), void (%"class.video_capture::mojom::VideoFrameHandlerAsyncWaiter"*, %"class.video_capture::mojom::VideoFrameHandler"*)* @_ZN13video_capture5mojom28VideoFrameHandlerAsyncWaiterC2EPNS0_17VideoFrameHandlerE
@_ZN13video_capture5mojom28VideoFrameHandlerAsyncWaiterD1Ev = hidden unnamed_addr alias void (%"class.video_capture::mojom::VideoFrameHandlerAsyncWaiter"*), void (%"class.video_capture::mojom::VideoFrameHandlerAsyncWaiter"*)* @_ZN13video_capture5mojom28VideoFrameHandlerAsyncWaiterD2Ev

; Function Attrs: nounwind ssp uwtable
define hidden void @_ZN13video_capture5mojom38VideoFrameHandlerInterceptorForTesting11OnNewBufferEiN4mojo9StructPtrIN5media5mojom17VideoBufferHandleEEE(%"class.video_capture::mojom::VideoFrameHandlerInterceptorForTesting"*, i32, %"class.mojo::StructPtr"* nocapture) unnamed_addr #0 align 2 {
  %4 = alloca %"class.mojo::StructPtr", align 8
  %5 = bitcast %"class.video_capture::mojom::VideoFrameHandlerInterceptorForTesting"* %0 to %"class.video_capture::mojom::VideoFrameHandler"* (%"class.video_capture::mojom::VideoFrameHandlerInterceptorForTesting"*)***
  %6 = load %"class.video_capture::mojom::VideoFrameHandler"* (%"class.video_capture::mojom::VideoFrameHandlerInterceptorForTesting"*)**, %"class.video_capture::mojom::VideoFrameHandler"* (%"class.video_capture::mojom::VideoFrameHandlerInterceptorForTesting"*)*** %5, align 8
  %7 = getelementptr inbounds %"class.video_capture::mojom::VideoFrameHandler"* (%"class.video_capture::mojom::VideoFrameHandlerInterceptorForTesting"*)*, %"class.video_capture::mojom::VideoFrameHandler"* (%"class.video_capture::mojom::VideoFrameHandlerInterceptorForTesting"*)** %6, i64 11
  %8 = load %"class.video_capture::mojom::VideoFrameHandler"* (%"class.video_capture::mojom::VideoFrameHandlerInterceptorForTesting"*)*, %"class.video_capture::mojom::VideoFrameHandler"* (%"class.video_capture::mojom::VideoFrameHandlerInterceptorForTesting"*)** %7, align 8
  %9 = tail call %"class.video_capture::mojom::VideoFrameHandler"* %8(%"class.video_capture::mojom::VideoFrameHandlerInterceptorForTesting"* %0) #8
  %10 = bitcast %"class.mojo::StructPtr"* %4 to i64*
  %11 = getelementptr inbounds %"class.mojo::StructPtr", %"class.mojo::StructPtr"* %4, i64 0, i32 0, i32 0, i32 0, i32 0
  %12 = bitcast %"class.mojo::StructPtr"* %2 to i64*
  %13 = load i64, i64* %12, align 8
  store i64 %13, i64* %10, align 8
  store i64 0, i64* %12, align 8
  %14 = bitcast %"class.video_capture::mojom::VideoFrameHandler"* %9 to void (%"class.video_capture::mojom::VideoFrameHandler"*, i32, %"class.mojo::StructPtr"*)***
  %15 = load void (%"class.video_capture::mojom::VideoFrameHandler"*, i32, %"class.mojo::StructPtr"*)**, void (%"class.video_capture::mojom::VideoFrameHandler"*, i32, %"class.mojo::StructPtr"*)*** %14, align 8
  %16 = getelementptr inbounds void (%"class.video_capture::mojom::VideoFrameHandler"*, i32, %"class.mojo::StructPtr"*)*, void (%"class.video_capture::mojom::VideoFrameHandler"*, i32, %"class.mojo::StructPtr"*)** %15, i64 2
  %17 = load void (%"class.video_capture::mojom::VideoFrameHandler"*, i32, %"class.mojo::StructPtr"*)*, void (%"class.video_capture::mojom::VideoFrameHandler"*, i32, %"class.mojo::StructPtr"*)** %16, align 8
  call void %17(%"class.video_capture::mojom::VideoFrameHandler"* %9, i32 %1, %"class.mojo::StructPtr"* nonnull %4) #8
  %18 = load %"class.media::mojom::VideoBufferHandle"*, %"class.media::mojom::VideoBufferHandle"** %11, align 8
  store %"class.media::mojom::VideoBufferHandle"* null, %"class.media::mojom::VideoBufferHandle"** %11, align 8
  %19 = icmp eq %"class.media::mojom::VideoBufferHandle"* %18, null
  br i1 %19, label %22, label %20

20:                                               ; preds = %3
  call void @_ZN5media5mojom17VideoBufferHandleD1Ev(%"class.media::mojom::VideoBufferHandle"* nonnull %18) #8
  %21 = bitcast %"class.media::mojom::VideoBufferHandle"* %18 to i8*
  call void @_ZdlPv(i8* %21) #9
  br label %22

22:                                               ; preds = %3, %20
  ret void
}

; Function Attrs: nounwind ssp uwtable
define hidden void @_ZN13video_capture5mojom38VideoFrameHandlerInterceptorForTesting20OnFrameReadyInBufferEN4mojo9StructPtrINS0_18ReadyFrameInBufferEEENSt3__16vectorIS5_NS6_9allocatorIS5_EEEE(%"class.video_capture::mojom::VideoFrameHandlerInterceptorForTesting"*, %"class.mojo::StructPtr.25"* nocapture, %"class.std::__1::vector.94"* nocapture) unnamed_addr #0 align 2 {
  %4 = alloca %"class.mojo::StructPtr.25", align 8
  %5 = alloca %"class.std::__1::vector.94", align 16
  %6 = bitcast %"class.video_capture::mojom::VideoFrameHandlerInterceptorForTesting"* %0 to %"class.video_capture::mojom::VideoFrameHandler"* (%"class.video_capture::mojom::VideoFrameHandlerInterceptorForTesting"*)***
  %7 = load %"class.video_capture::mojom::VideoFrameHandler"* (%"class.video_capture::mojom::VideoFrameHandlerInterceptorForTesting"*)**, %"class.video_capture::mojom::VideoFrameHandler"* (%"class.video_capture::mojom::VideoFrameHandlerInterceptorForTesting"*)*** %6, align 8
  %8 = getelementptr inbounds %"class.video_capture::mojom::VideoFrameHandler"* (%"class.video_capture::mojom::VideoFrameHandlerInterceptorForTesting"*)*, %"class.video_capture::mojom::VideoFrameHandler"* (%"class.video_capture::mojom::VideoFrameHandlerInterceptorForTesting"*)** %7, i64 11
  %9 = load %"class.video_capture::mojom::VideoFrameHandler"* (%"class.video_capture::mojom::VideoFrameHandlerInterceptorForTesting"*)*, %"class.video_capture::mojom::VideoFrameHandler"* (%"class.video_capture::mojom::VideoFrameHandlerInterceptorForTesting"*)** %8, align 8
  %10 = tail call %"class.video_capture::mojom::VideoFrameHandler"* %9(%"class.video_capture::mojom::VideoFrameHandlerInterceptorForTesting"* %0) #8
  %11 = bitcast %"class.mojo::StructPtr.25"* %4 to i64*
  %12 = getelementptr inbounds %"class.mojo::StructPtr.25", %"class.mojo::StructPtr.25"* %4, i64 0, i32 0, i32 0, i32 0, i32 0
  %13 = bitcast %"class.mojo::StructPtr.25"* %1 to i64*
  %14 = load i64, i64* %13, align 8
  store i64 %14, i64* %11, align 8
  store i64 0, i64* %13, align 8
  %15 = bitcast %"class.std::__1::vector.94"* %2 to <2 x i64>*
  %16 = load <2 x i64>, <2 x i64>* %15, align 8
  %17 = getelementptr inbounds %"class.std::__1::vector.94", %"class.std::__1::vector.94"* %5, i64 0, i32 0, i32 1
  %18 = bitcast %"class.std::__1::vector.94"* %5 to <2 x i64>*
  store <2 x i64> %16, <2 x i64>* %18, align 16
  %19 = getelementptr inbounds %"class.std::__1::vector.94", %"class.std::__1::vector.94"* %2, i64 0, i32 0, i32 2, i32 0, i32 0
  %20 = bitcast %"class.mojo::StructPtr.25"** %19 to i64*
  %21 = load i64, i64* %20, align 8
  %22 = getelementptr inbounds %"class.std::__1::vector.94", %"class.std::__1::vector.94"* %5, i64 0, i32 0, i32 2, i32 0, i32 0
  %23 = bitcast %"class.mojo::StructPtr.25"** %22 to i64*
  store i64 %21, i64* %23, align 16
  %24 = bitcast %"class.std::__1::vector.94"* %2 to i8*
  tail call void @llvm.memset.p0i8.i64(i8* align 8 %24, i8 0, i64 24, i1 false) #8
  %25 = bitcast %"class.video_capture::mojom::VideoFrameHandler"* %10 to void (%"class.video_capture::mojom::VideoFrameHandler"*, %"class.mojo::StructPtr.25"*, %"class.std::__1::vector.94"*)***
  %26 = load void (%"class.video_capture::mojom::VideoFrameHandler"*, %"class.mojo::StructPtr.25"*, %"class.std::__1::vector.94"*)**, void (%"class.video_capture::mojom::VideoFrameHandler"*, %"class.mojo::StructPtr.25"*, %"class.std::__1::vector.94"*)*** %25, align 8
  %27 = getelementptr inbounds void (%"class.video_capture::mojom::VideoFrameHandler"*, %"class.mojo::StructPtr.25"*, %"class.std::__1::vector.94"*)*, void (%"class.video_capture::mojom::VideoFrameHandler"*, %"class.mojo::StructPtr.25"*, %"class.std::__1::vector.94"*)** %26, i64 3
  %28 = load void (%"class.video_capture::mojom::VideoFrameHandler"*, %"class.mojo::StructPtr.25"*, %"class.std::__1::vector.94"*)*, void (%"class.video_capture::mojom::VideoFrameHandler"*, %"class.mojo::StructPtr.25"*, %"class.std::__1::vector.94"*)** %27, align 8
  call void %28(%"class.video_capture::mojom::VideoFrameHandler"* %10, %"class.mojo::StructPtr.25"* nonnull %4, %"class.std::__1::vector.94"* nonnull %5) #8
  %29 = getelementptr inbounds %"class.std::__1::vector.94", %"class.std::__1::vector.94"* %5, i64 0, i32 0, i32 0
  %30 = load %"class.mojo::StructPtr.25"*, %"class.mojo::StructPtr.25"** %29, align 16
  %31 = icmp eq %"class.mojo::StructPtr.25"* %30, null
  br i1 %31, label %51, label %32

32:                                               ; preds = %3
  %33 = bitcast %"class.mojo::StructPtr.25"* %30 to i8*
  %34 = load %"class.mojo::StructPtr.25"*, %"class.mojo::StructPtr.25"** %17, align 8
  %35 = icmp eq %"class.mojo::StructPtr.25"* %34, %30
  br i1 %35, label %49, label %36

36:                                               ; preds = %32, %44
  %37 = phi %"class.mojo::StructPtr.25"* [ %38, %44 ], [ %34, %32 ]
  %38 = getelementptr inbounds %"class.mojo::StructPtr.25", %"class.mojo::StructPtr.25"* %37, i64 -1
  %39 = getelementptr inbounds %"class.mojo::StructPtr.25", %"class.mojo::StructPtr.25"* %38, i64 0, i32 0, i32 0, i32 0, i32 0
  %40 = load %"class.video_capture::mojom::ReadyFrameInBuffer"*, %"class.video_capture::mojom::ReadyFrameInBuffer"** %39, align 8
  store %"class.video_capture::mojom::ReadyFrameInBuffer"* null, %"class.video_capture::mojom::ReadyFrameInBuffer"** %39, align 8
  %41 = icmp eq %"class.video_capture::mojom::ReadyFrameInBuffer"* %40, null
  br i1 %41, label %44, label %42

42:                                               ; preds = %36
  call void @_ZN13video_capture5mojom18ReadyFrameInBufferD1Ev(%"class.video_capture::mojom::ReadyFrameInBuffer"* nonnull %40) #8
  %43 = bitcast %"class.video_capture::mojom::ReadyFrameInBuffer"* %40 to i8*
  call void @_ZdlPv(i8* %43) #9
  br label %44

44:                                               ; preds = %42, %36
  %45 = icmp eq %"class.mojo::StructPtr.25"* %38, %30
  br i1 %45, label %46, label %36

46:                                               ; preds = %44
  %47 = bitcast %"class.std::__1::vector.94"* %5 to i8**
  %48 = load i8*, i8** %47, align 16
  br label %49

49:                                               ; preds = %46, %32
  %50 = phi i8* [ %48, %46 ], [ %33, %32 ]
  store %"class.mojo::StructPtr.25"* %30, %"class.mojo::StructPtr.25"** %17, align 8
  call void @_ZdlPv(i8* %50) #9
  br label %51

51:                                               ; preds = %3, %49
  %52 = load %"class.video_capture::mojom::ReadyFrameInBuffer"*, %"class.video_capture::mojom::ReadyFrameInBuffer"** %12, align 8
  store %"class.video_capture::mojom::ReadyFrameInBuffer"* null, %"class.video_capture::mojom::ReadyFrameInBuffer"** %12, align 8
  %53 = icmp eq %"class.video_capture::mojom::ReadyFrameInBuffer"* %52, null
  br i1 %53, label %56, label %54

54:                                               ; preds = %51
  call void @_ZN13video_capture5mojom18ReadyFrameInBufferD1Ev(%"class.video_capture::mojom::ReadyFrameInBuffer"* nonnull %52) #8
  %55 = bitcast %"class.video_capture::mojom::ReadyFrameInBuffer"* %52 to i8*
  call void @_ZdlPv(i8* %55) #9
  br label %56

56:                                               ; preds = %51, %54
  ret void
}

; Function Attrs: nounwind ssp uwtable
define hidden void @_ZN13video_capture5mojom38VideoFrameHandlerInterceptorForTesting15OnBufferRetiredEi(%"class.video_capture::mojom::VideoFrameHandlerInterceptorForTesting"*, i32) unnamed_addr #0 align 2 {
  %3 = bitcast %"class.video_capture::mojom::VideoFrameHandlerInterceptorForTesting"* %0 to %"class.video_capture::mojom::VideoFrameHandler"* (%"class.video_capture::mojom::VideoFrameHandlerInterceptorForTesting"*)***
  %4 = load %"class.video_capture::mojom::VideoFrameHandler"* (%"class.video_capture::mojom::VideoFrameHandlerInterceptorForTesting"*)**, %"class.video_capture::mojom::VideoFrameHandler"* (%"class.video_capture::mojom::VideoFrameHandlerInterceptorForTesting"*)*** %3, align 8
  %5 = getelementptr inbounds %"class.video_capture::mojom::VideoFrameHandler"* (%"class.video_capture::mojom::VideoFrameHandlerInterceptorForTesting"*)*, %"class.video_capture::mojom::VideoFrameHandler"* (%"class.video_capture::mojom::VideoFrameHandlerInterceptorForTesting"*)** %4, i64 11
  %6 = load %"class.video_capture::mojom::VideoFrameHandler"* (%"class.video_capture::mojom::VideoFrameHandlerInterceptorForTesting"*)*, %"class.video_capture::mojom::VideoFrameHandler"* (%"class.video_capture::mojom::VideoFrameHandlerInterceptorForTesting"*)** %5, align 8
  %7 = tail call %"class.video_capture::mojom::VideoFrameHandler"* %6(%"class.video_capture::mojom::VideoFrameHandlerInterceptorForTesting"* %0) #8
  %8 = bitcast %"class.video_capture::mojom::VideoFrameHandler"* %7 to void (%"class.video_capture::mojom::VideoFrameHandler"*, i32)***
  %9 = load void (%"class.video_capture::mojom::VideoFrameHandler"*, i32)**, void (%"class.video_capture::mojom::VideoFrameHandler"*, i32)*** %8, align 8
  %10 = getelementptr inbounds void (%"class.video_capture::mojom::VideoFrameHandler"*, i32)*, void (%"class.video_capture::mojom::VideoFrameHandler"*, i32)** %9, i64 4
  %11 = load void (%"class.video_capture::mojom::VideoFrameHandler"*, i32)*, void (%"class.video_capture::mojom::VideoFrameHandler"*, i32)** %10, align 8
  tail call void %11(%"class.video_capture::mojom::VideoFrameHandler"* %7, i32 %1) #8
  ret void
}

; Function Attrs: nounwind ssp uwtable
define hidden void @_ZN13video_capture5mojom38VideoFrameHandlerInterceptorForTesting7OnErrorEN5media17VideoCaptureErrorE(%"class.video_capture::mojom::VideoFrameHandlerInterceptorForTesting"*, i32) unnamed_addr #0 align 2 {
  %3 = bitcast %"class.video_capture::mojom::VideoFrameHandlerInterceptorForTesting"* %0 to %"class.video_capture::mojom::VideoFrameHandler"* (%"class.video_capture::mojom::VideoFrameHandlerInterceptorForTesting"*)***
  %4 = load %"class.video_capture::mojom::VideoFrameHandler"* (%"class.video_capture::mojom::VideoFrameHandlerInterceptorForTesting"*)**, %"class.video_capture::mojom::VideoFrameHandler"* (%"class.video_capture::mojom::VideoFrameHandlerInterceptorForTesting"*)*** %3, align 8
  %5 = getelementptr inbounds %"class.video_capture::mojom::VideoFrameHandler"* (%"class.video_capture::mojom::VideoFrameHandlerInterceptorForTesting"*)*, %"class.video_capture::mojom::VideoFrameHandler"* (%"class.video_capture::mojom::VideoFrameHandlerInterceptorForTesting"*)** %4, i64 11
  %6 = load %"class.video_capture::mojom::VideoFrameHandler"* (%"class.video_capture::mojom::VideoFrameHandlerInterceptorForTesting"*)*, %"class.video_capture::mojom::VideoFrameHandler"* (%"class.video_capture::mojom::VideoFrameHandlerInterceptorForTesting"*)** %5, align 8
  %7 = tail call %"class.video_capture::mojom::VideoFrameHandler"* %6(%"class.video_capture::mojom::VideoFrameHandlerInterceptorForTesting"* %0) #8
  %8 = bitcast %"class.video_capture::mojom::VideoFrameHandler"* %7 to void (%"class.video_capture::mojom::VideoFrameHandler"*, i32)***
  %9 = load void (%"class.video_capture::mojom::VideoFrameHandler"*, i32)**, void (%"class.video_capture::mojom::VideoFrameHandler"*, i32)*** %8, align 8
  %10 = getelementptr inbounds void (%"class.video_capture::mojom::VideoFrameHandler"*, i32)*, void (%"class.video_capture::mojom::VideoFrameHandler"*, i32)** %9, i64 5
  %11 = load void (%"class.video_capture::mojom::VideoFrameHandler"*, i32)*, void (%"class.video_capture::mojom::VideoFrameHandler"*, i32)** %10, align 8
  tail call void %11(%"class.video_capture::mojom::VideoFrameHandler"* %7, i32 %1) #8
  ret void
}

; Function Attrs: nounwind ssp uwtable
define hidden void @_ZN13video_capture5mojom38VideoFrameHandlerInterceptorForTesting14OnFrameDroppedEN5media27VideoCaptureFrameDropReasonE(%"class.video_capture::mojom::VideoFrameHandlerInterceptorForTesting"*, i32) unnamed_addr #0 align 2 {
  %3 = bitcast %"class.video_capture::mojom::VideoFrameHandlerInterceptorForTesting"* %0 to %"class.video_capture::mojom::VideoFrameHandler"* (%"class.video_capture::mojom::VideoFrameHandlerInterceptorForTesting"*)***
  %4 = load %"class.video_capture::mojom::VideoFrameHandler"* (%"class.video_capture::mojom::VideoFrameHandlerInterceptorForTesting"*)**, %"class.video_capture::mojom::VideoFrameHandler"* (%"class.video_capture::mojom::VideoFrameHandlerInterceptorForTesting"*)*** %3, align 8
  %5 = getelementptr inbounds %"class.video_capture::mojom::VideoFrameHandler"* (%"class.video_capture::mojom::VideoFrameHandlerInterceptorForTesting"*)*, %"class.video_capture::mojom::VideoFrameHandler"* (%"class.video_capture::mojom::VideoFrameHandlerInterceptorForTesting"*)** %4, i64 11
  %6 = load %"class.video_capture::mojom::VideoFrameHandler"* (%"class.video_capture::mojom::VideoFrameHandlerInterceptorForTesting"*)*, %"class.video_capture::mojom::VideoFrameHandler"* (%"class.video_capture::mojom::VideoFrameHandlerInterceptorForTesting"*)** %5, align 8
  %7 = tail call %"class.video_capture::mojom::VideoFrameHandler"* %6(%"class.video_capture::mojom::VideoFrameHandlerInterceptorForTesting"* %0) #8
  %8 = bitcast %"class.video_capture::mojom::VideoFrameHandler"* %7 to void (%"class.video_capture::mojom::VideoFrameHandler"*, i32)***
  %9 = load void (%"class.video_capture::mojom::VideoFrameHandler"*, i32)**, void (%"class.video_capture::mojom::VideoFrameHandler"*, i32)*** %8, align 8
  %10 = getelementptr inbounds void (%"class.video_capture::mojom::VideoFrameHandler"*, i32)*, void (%"class.video_capture::mojom::VideoFrameHandler"*, i32)** %9, i64 6
  %11 = load void (%"class.video_capture::mojom::VideoFrameHandler"*, i32)*, void (%"class.video_capture::mojom::VideoFrameHandler"*, i32)** %10, align 8
  tail call void %11(%"class.video_capture::mojom::VideoFrameHandler"* %7, i32 %1) #8
  ret void
}

; Function Attrs: nounwind ssp uwtable
define hidden void @_ZN13video_capture5mojom38VideoFrameHandlerInterceptorForTesting5OnLogERKNSt3__112basic_stringIcNS2_11char_traitsIcEENS2_9allocatorIcEEEE(%"class.video_capture::mojom::VideoFrameHandlerInterceptorForTesting"*, %"class.std::__1::basic_string"* dereferenceable(24)) unnamed_addr #0 align 2 {
  %3 = bitcast %"class.video_capture::mojom::VideoFrameHandlerInterceptorForTesting"* %0 to %"class.video_capture::mojom::VideoFrameHandler"* (%"class.video_capture::mojom::VideoFrameHandlerInterceptorForTesting"*)***
  %4 = load %"class.video_capture::mojom::VideoFrameHandler"* (%"class.video_capture::mojom::VideoFrameHandlerInterceptorForTesting"*)**, %"class.video_capture::mojom::VideoFrameHandler"* (%"class.video_capture::mojom::VideoFrameHandlerInterceptorForTesting"*)*** %3, align 8
  %5 = getelementptr inbounds %"class.video_capture::mojom::VideoFrameHandler"* (%"class.video_capture::mojom::VideoFrameHandlerInterceptorForTesting"*)*, %"class.video_capture::mojom::VideoFrameHandler"* (%"class.video_capture::mojom::VideoFrameHandlerInterceptorForTesting"*)** %4, i64 11
  %6 = load %"class.video_capture::mojom::VideoFrameHandler"* (%"class.video_capture::mojom::VideoFrameHandlerInterceptorForTesting"*)*, %"class.video_capture::mojom::VideoFrameHandler"* (%"class.video_capture::mojom::VideoFrameHandlerInterceptorForTesting"*)** %5, align 8
  %7 = tail call %"class.video_capture::mojom::VideoFrameHandler"* %6(%"class.video_capture::mojom::VideoFrameHandlerInterceptorForTesting"* %0) #8
  %8 = bitcast %"class.video_capture::mojom::VideoFrameHandler"* %7 to void (%"class.video_capture::mojom::VideoFrameHandler"*, %"class.std::__1::basic_string"*)***
  %9 = load void (%"class.video_capture::mojom::VideoFrameHandler"*, %"class.std::__1::basic_string"*)**, void (%"class.video_capture::mojom::VideoFrameHandler"*, %"class.std::__1::basic_string"*)*** %8, align 8
  %10 = getelementptr inbounds void (%"class.video_capture::mojom::VideoFrameHandler"*, %"class.std::__1::basic_string"*)*, void (%"class.video_capture::mojom::VideoFrameHandler"*, %"class.std::__1::basic_string"*)** %9, i64 7
  %11 = load void (%"class.video_capture::mojom::VideoFrameHandler"*, %"class.std::__1::basic_string"*)*, void (%"class.video_capture::mojom::VideoFrameHandler"*, %"class.std::__1::basic_string"*)** %10, align 8
  tail call void %11(%"class.video_capture::mojom::VideoFrameHandler"* %7, %"class.std::__1::basic_string"* dereferenceable(24) %1) #8
  ret void
}

; Function Attrs: nounwind ssp uwtable
define hidden void @_ZN13video_capture5mojom38VideoFrameHandlerInterceptorForTesting9OnStartedEv(%"class.video_capture::mojom::VideoFrameHandlerInterceptorForTesting"*) unnamed_addr #0 align 2 {
  %2 = bitcast %"class.video_capture::mojom::VideoFrameHandlerInterceptorForTesting"* %0 to %"class.video_capture::mojom::VideoFrameHandler"* (%"class.video_capture::mojom::VideoFrameHandlerInterceptorForTesting"*)***
  %3 = load %"class.video_capture::mojom::VideoFrameHandler"* (%"class.video_capture::mojom::VideoFrameHandlerInterceptorForTesting"*)**, %"class.video_capture::mojom::VideoFrameHandler"* (%"class.video_capture::mojom::VideoFrameHandlerInterceptorForTesting"*)*** %2, align 8
  %4 = getelementptr inbounds %"class.video_capture::mojom::VideoFrameHandler"* (%"class.video_capture::mojom::VideoFrameHandlerInterceptorForTesting"*)*, %"class.video_capture::mojom::VideoFrameHandler"* (%"class.video_capture::mojom::VideoFrameHandlerInterceptorForTesting"*)** %3, i64 11
  %5 = load %"class.video_capture::mojom::VideoFrameHandler"* (%"class.video_capture::mojom::VideoFrameHandlerInterceptorForTesting"*)*, %"class.video_capture::mojom::VideoFrameHandler"* (%"class.video_capture::mojom::VideoFrameHandlerInterceptorForTesting"*)** %4, align 8
  %6 = tail call %"class.video_capture::mojom::VideoFrameHandler"* %5(%"class.video_capture::mojom::VideoFrameHandlerInterceptorForTesting"* %0) #8
  %7 = bitcast %"class.video_capture::mojom::VideoFrameHandler"* %6 to void (%"class.video_capture::mojom::VideoFrameHandler"*)***
  %8 = load void (%"class.video_capture::mojom::VideoFrameHandler"*)**, void (%"class.video_capture::mojom::VideoFrameHandler"*)*** %7, align 8
  %9 = getelementptr inbounds void (%"class.video_capture::mojom::VideoFrameHandler"*)*, void (%"class.video_capture::mojom::VideoFrameHandler"*)** %8, i64 8
  %10 = load void (%"class.video_capture::mojom::VideoFrameHandler"*)*, void (%"class.video_capture::mojom::VideoFrameHandler"*)** %9, align 8
  tail call void %10(%"class.video_capture::mojom::VideoFrameHandler"* %6) #8
  ret void
}

; Function Attrs: nounwind ssp uwtable
define hidden void @_ZN13video_capture5mojom38VideoFrameHandlerInterceptorForTesting23OnStartedUsingGpuDecodeEv(%"class.video_capture::mojom::VideoFrameHandlerInterceptorForTesting"*) unnamed_addr #0 align 2 {
  %2 = bitcast %"class.video_capture::mojom::VideoFrameHandlerInterceptorForTesting"* %0 to %"class.video_capture::mojom::VideoFrameHandler"* (%"class.video_capture::mojom::VideoFrameHandlerInterceptorForTesting"*)***
  %3 = load %"class.video_capture::mojom::VideoFrameHandler"* (%"class.video_capture::mojom::VideoFrameHandlerInterceptorForTesting"*)**, %"class.video_capture::mojom::VideoFrameHandler"* (%"class.video_capture::mojom::VideoFrameHandlerInterceptorForTesting"*)*** %2, align 8
  %4 = getelementptr inbounds %"class.video_capture::mojom::VideoFrameHandler"* (%"class.video_capture::mojom::VideoFrameHandlerInterceptorForTesting"*)*, %"class.video_capture::mojom::VideoFrameHandler"* (%"class.video_capture::mojom::VideoFrameHandlerInterceptorForTesting"*)** %3, i64 11
  %5 = load %"class.video_capture::mojom::VideoFrameHandler"* (%"class.video_capture::mojom::VideoFrameHandlerInterceptorForTesting"*)*, %"class.video_capture::mojom::VideoFrameHandler"* (%"class.video_capture::mojom::VideoFrameHandlerInterceptorForTesting"*)** %4, align 8
  %6 = tail call %"class.video_capture::mojom::VideoFrameHandler"* %5(%"class.video_capture::mojom::VideoFrameHandlerInterceptorForTesting"* %0) #8
  %7 = bitcast %"class.video_capture::mojom::VideoFrameHandler"* %6 to void (%"class.video_capture::mojom::VideoFrameHandler"*)***
  %8 = load void (%"class.video_capture::mojom::VideoFrameHandler"*)**, void (%"class.video_capture::mojom::VideoFrameHandler"*)*** %7, align 8
  %9 = getelementptr inbounds void (%"class.video_capture::mojom::VideoFrameHandler"*)*, void (%"class.video_capture::mojom::VideoFrameHandler"*)** %8, i64 9
  %10 = load void (%"class.video_capture::mojom::VideoFrameHandler"*)*, void (%"class.video_capture::mojom::VideoFrameHandler"*)** %9, align 8
  tail call void %10(%"class.video_capture::mojom::VideoFrameHandler"* %6) #8
  ret void
}

; Function Attrs: nounwind ssp uwtable
define hidden void @_ZN13video_capture5mojom38VideoFrameHandlerInterceptorForTesting9OnStoppedEv(%"class.video_capture::mojom::VideoFrameHandlerInterceptorForTesting"*) unnamed_addr #0 align 2 {
  %2 = bitcast %"class.video_capture::mojom::VideoFrameHandlerInterceptorForTesting"* %0 to %"class.video_capture::mojom::VideoFrameHandler"* (%"class.video_capture::mojom::VideoFrameHandlerInterceptorForTesting"*)***
  %3 = load %"class.video_capture::mojom::VideoFrameHandler"* (%"class.video_capture::mojom::VideoFrameHandlerInterceptorForTesting"*)**, %"class.video_capture::mojom::VideoFrameHandler"* (%"class.video_capture::mojom::VideoFrameHandlerInterceptorForTesting"*)*** %2, align 8
  %4 = getelementptr inbounds %"class.video_capture::mojom::VideoFrameHandler"* (%"class.video_capture::mojom::VideoFrameHandlerInterceptorForTesting"*)*, %"class.video_capture::mojom::VideoFrameHandler"* (%"class.video_capture::mojom::VideoFrameHandlerInterceptorForTesting"*)** %3, i64 11
  %5 = load %"class.video_capture::mojom::VideoFrameHandler"* (%"class.video_capture::mojom::VideoFrameHandlerInterceptorForTesting"*)*, %"class.video_capture::mojom::VideoFrameHandler"* (%"class.video_capture::mojom::VideoFrameHandlerInterceptorForTesting"*)** %4, align 8
  %6 = tail call %"class.video_capture::mojom::VideoFrameHandler"* %5(%"class.video_capture::mojom::VideoFrameHandlerInterceptorForTesting"* %0) #8
  %7 = bitcast %"class.video_capture::mojom::VideoFrameHandler"* %6 to void (%"class.video_capture::mojom::VideoFrameHandler"*)***
  %8 = load void (%"class.video_capture::mojom::VideoFrameHandler"*)**, void (%"class.video_capture::mojom::VideoFrameHandler"*)*** %7, align 8
  %9 = getelementptr inbounds void (%"class.video_capture::mojom::VideoFrameHandler"*)*, void (%"class.video_capture::mojom::VideoFrameHandler"*)** %8, i64 10
  %10 = load void (%"class.video_capture::mojom::VideoFrameHandler"*)*, void (%"class.video_capture::mojom::VideoFrameHandler"*)** %9, align 8
  tail call void %10(%"class.video_capture::mojom::VideoFrameHandler"* %6) #8
  ret void
}

; Function Attrs: nofree norecurse nounwind ssp uwtable writeonly
define hidden void @_ZN13video_capture5mojom28VideoFrameHandlerAsyncWaiterC2EPNS0_17VideoFrameHandlerE(%"class.video_capture::mojom::VideoFrameHandlerAsyncWaiter"* nocapture, %"class.video_capture::mojom::VideoFrameHandler"*) unnamed_addr #1 align 2 {
  %3 = getelementptr inbounds %"class.video_capture::mojom::VideoFrameHandlerAsyncWaiter", %"class.video_capture::mojom::VideoFrameHandlerAsyncWaiter"* %0, i64 0, i32 0
  store %"class.video_capture::mojom::VideoFrameHandler"* %1, %"class.video_capture::mojom::VideoFrameHandler"** %3, align 8
  ret void
}

; Function Attrs: norecurse nounwind readnone ssp uwtable
define hidden void @_ZN13video_capture5mojom28VideoFrameHandlerAsyncWaiterD2Ev(%"class.video_capture::mojom::VideoFrameHandlerAsyncWaiter"* nocapture) unnamed_addr #2 align 2 {
  ret void
}

; Function Attrs: nounwind ssp uwtable
define linkonce_odr hidden void @_ZN13video_capture5mojom17VideoFrameHandlerD2Ev(%"class.video_capture::mojom::VideoFrameHandler"*) unnamed_addr #0 comdat align 2 {
  ret void
}

; Function Attrs: inlinehint nounwind ssp uwtable
define linkonce_odr hidden void @_ZN13video_capture5mojom38VideoFrameHandlerInterceptorForTestingD0Ev(%"class.video_capture::mojom::VideoFrameHandlerInterceptorForTesting"*) unnamed_addr #3 comdat align 2 {
  tail call void @llvm.trap() #10
  unreachable
}

declare void @__cxa_pure_virtual() unnamed_addr

; Function Attrs: nounwind
declare void @_ZN5media5mojom17VideoBufferHandleD1Ev(%"class.media::mojom::VideoBufferHandle"*) unnamed_addr #4

; Function Attrs: nobuiltin nounwind
declare void @_ZdlPv(i8*) local_unnamed_addr #5

; Function Attrs: nounwind
declare void @_ZN13video_capture5mojom18ReadyFrameInBufferD1Ev(%"class.video_capture::mojom::ReadyFrameInBuffer"*) unnamed_addr #4

; Function Attrs: cold noreturn nounwind
declare void @llvm.trap() #6

; Function Attrs: argmemonly nounwind
declare void @llvm.memset.p0i8.i64(i8* nocapture writeonly, i8, i64, i1 immarg) #7

attributes #0 = { nounwind ssp uwtable "correctly-rounded-divide-sqrt-fp-math"="false" "disable-tail-calls"="false" "less-precise-fpmad"="false" "min-legal-vector-width"="0" "no-frame-pointer-elim"="false" "no-frame-pointer-elim-non-leaf" "no-infs-fp-math"="false" "no-jump-tables"="false" "no-nans-fp-math"="false" "no-signed-zeros-fp-math"="false" "no-trapping-math"="false" "null-pointer-is-valid"="true" "stack-protector-buffer-size"="4" "target-cpu"="x86-64" "target-features"="+cx8,+fxsr,+mmx,+sse,+sse2,+sse3,+x87" "unsafe-fp-math"="false" "use-soft-float"="false" }
attributes #1 = { nofree norecurse nounwind ssp uwtable writeonly "correctly-rounded-divide-sqrt-fp-math"="false" "disable-tail-calls"="false" "less-precise-fpmad"="false" "min-legal-vector-width"="0" "no-frame-pointer-elim"="false" "no-frame-pointer-elim-non-leaf" "no-infs-fp-math"="false" "no-jump-tables"="false" "no-nans-fp-math"="false" "no-signed-zeros-fp-math"="false" "no-trapping-math"="false" "null-pointer-is-valid"="true" "stack-protector-buffer-size"="4" "target-cpu"="x86-64" "target-features"="+cx8,+fxsr,+mmx,+sse,+sse2,+sse3,+x87" "unsafe-fp-math"="false" "use-soft-float"="false" }
attributes #2 = { norecurse nounwind readnone ssp uwtable "correctly-rounded-divide-sqrt-fp-math"="false" "disable-tail-calls"="false" "less-precise-fpmad"="false" "min-legal-vector-width"="0" "no-frame-pointer-elim"="false" "no-frame-pointer-elim-non-leaf" "no-infs-fp-math"="false" "no-jump-tables"="false" "no-nans-fp-math"="false" "no-signed-zeros-fp-math"="false" "no-trapping-math"="false" "null-pointer-is-valid"="true" "stack-protector-buffer-size"="4" "target-cpu"="x86-64" "target-features"="+cx8,+fxsr,+mmx,+sse,+sse2,+sse3,+x87" "unsafe-fp-math"="false" "use-soft-float"="false" }
attributes #3 = { inlinehint nounwind ssp uwtable "correctly-rounded-divide-sqrt-fp-math"="false" "disable-tail-calls"="false" "less-precise-fpmad"="false" "min-legal-vector-width"="0" "no-frame-pointer-elim"="false" "no-frame-pointer-elim-non-leaf" "no-infs-fp-math"="false" "no-jump-tables"="false" "no-nans-fp-math"="false" "no-signed-zeros-fp-math"="false" "no-trapping-math"="false" "null-pointer-is-valid"="true" "stack-protector-buffer-size"="4" "target-cpu"="x86-64" "target-features"="+cx8,+fxsr,+mmx,+sse,+sse2,+sse3,+x87" "unsafe-fp-math"="false" "use-soft-float"="false" }
attributes #4 = { nounwind "correctly-rounded-divide-sqrt-fp-math"="false" "disable-tail-calls"="false" "less-precise-fpmad"="false" "no-frame-pointer-elim"="false" "no-frame-pointer-elim-non-leaf" "no-infs-fp-math"="false" "no-nans-fp-math"="false" "no-signed-zeros-fp-math"="false" "no-trapping-math"="false" "null-pointer-is-valid"="true" "stack-protector-buffer-size"="4" "target-cpu"="x86-64" "target-features"="+cx8,+fxsr,+mmx,+sse,+sse2,+sse3,+x87" "unsafe-fp-math"="false" "use-soft-float"="false" }
attributes #5 = { nobuiltin nounwind "correctly-rounded-divide-sqrt-fp-math"="false" "disable-tail-calls"="false" "less-precise-fpmad"="false" "no-frame-pointer-elim"="false" "no-frame-pointer-elim-non-leaf" "no-infs-fp-math"="false" "no-nans-fp-math"="false" "no-signed-zeros-fp-math"="false" "no-trapping-math"="false" "null-pointer-is-valid"="true" "stack-protector-buffer-size"="4" "target-cpu"="x86-64" "target-features"="+cx8,+fxsr,+mmx,+sse,+sse2,+sse3,+x87" "unsafe-fp-math"="false" "use-soft-float"="false" }
attributes #6 = { cold noreturn nounwind }
attributes #7 = { argmemonly nounwind }
attributes #8 = { nounwind }
attributes #9 = { builtin nounwind }
attributes #10 = { noreturn nounwind }

!llvm.module.flags = !{!0, !1}

!0 = !{i32 1, !"wchar_size", i32 4}
!1 = !{i32 7, !"PIC Level", i32 2}
