; ModuleID = '../../third_party/libzip/src/lib/zip_pkware.c'
source_filename = "../../third_party/libzip/src/lib/zip_pkware.c"
target datalayout = "e-m:e-i64:64-f80:128-n8:16:32:64-S128"
target triple = "x86_64-unknown-linux-gnu"

%struct._zip_pkware_keys = type { [3 x i32] }

; Function Attrs: nofree norecurse nounwind ssp uwtable writeonly
define hidden void @_zip_pkware_keys_reset(%struct._zip_pkware_keys* nocapture) local_unnamed_addr #0 {
  %2 = getelementptr inbounds %struct._zip_pkware_keys, %struct._zip_pkware_keys* %0, i64 0, i32 0, i64 0
  store i32 305419896, i32* %2, align 4
  %3 = getelementptr inbounds %struct._zip_pkware_keys, %struct._zip_pkware_keys* %0, i64 0, i32 0, i64 1
  store i32 591751049, i32* %3, align 4
  %4 = getelementptr inbounds %struct._zip_pkware_keys, %struct._zip_pkware_keys* %0, i64 0, i32 0, i64 2
  store i32 878082192, i32* %4, align 4
  ret void
}

; Function Attrs: nounwind ssp uwtable
define hidden void @_zip_pkware_encrypt(%struct._zip_pkware_keys* nocapture, i8*, i8* nocapture readonly, i64) local_unnamed_addr #1 {
  %5 = alloca i8, align 1
  %6 = alloca i8, align 1
  %7 = icmp eq i64 %3, 0
  br i1 %7, label %69, label %8

8:                                                ; preds = %4
  %9 = icmp eq i8* %1, null
  %10 = getelementptr inbounds %struct._zip_pkware_keys, %struct._zip_pkware_keys* %0, i64 0, i32 0, i64 2
  %11 = getelementptr inbounds %struct._zip_pkware_keys, %struct._zip_pkware_keys* %0, i64 0, i32 0, i64 0
  %12 = getelementptr inbounds %struct._zip_pkware_keys, %struct._zip_pkware_keys* %0, i64 0, i32 0, i64 1
  br label %13

13:                                               ; preds = %66, %8
  %14 = phi i64 [ 0, %8 ], [ %67, %66 ]
  %15 = getelementptr inbounds i8, i8* %2, i64 %14
  %16 = load i8, i8* %15, align 1
  br i1 %9, label %46, label %17

17:                                               ; preds = %13
  %18 = load i32, i32* %10, align 4
  %19 = and i32 %18, 65533
  %20 = or i32 %19, 2
  %21 = xor i32 %19, 3
  %22 = mul nuw i32 %20, %21
  %23 = lshr i32 %22, 8
  %24 = trunc i32 %23 to i8
  call void @llvm.lifetime.start.p0i8(i64 1, i8* nonnull %5)
  store i8 %16, i8* %5, align 1
  %25 = load i32, i32* %11, align 4
  %26 = xor i32 %25, -1
  %27 = zext i32 %26 to i64
  %28 = call i64 @Cr_z_crc32(i64 %27, i8* nonnull %5, i32 1) #4
  %29 = trunc i64 %28 to i32
  %30 = xor i32 %29, -1
  store i32 %30, i32* %11, align 4
  %31 = load i32, i32* %12, align 4
  %32 = and i32 %30, 255
  %33 = add i32 %31, %32
  %34 = mul i32 %33, 134775813
  %35 = add i32 %34, 1
  store i32 %35, i32* %12, align 4
  %36 = lshr i32 %35, 24
  %37 = trunc i32 %36 to i8
  store i8 %37, i8* %5, align 1
  %38 = load i32, i32* %10, align 4
  %39 = xor i32 %38, -1
  %40 = zext i32 %39 to i64
  %41 = call i64 @Cr_z_crc32(i64 %40, i8* nonnull %5, i32 1) #4
  %42 = trunc i64 %41 to i32
  %43 = xor i32 %42, -1
  store i32 %43, i32* %10, align 4
  call void @llvm.lifetime.end.p0i8(i64 1, i8* nonnull %5)
  %44 = xor i8 %16, %24
  %45 = getelementptr inbounds i8, i8* %1, i64 %14
  store i8 %44, i8* %45, align 1
  br label %66

46:                                               ; preds = %13
  call void @llvm.lifetime.start.p0i8(i64 1, i8* nonnull %6)
  store i8 %16, i8* %6, align 1
  %47 = load i32, i32* %11, align 4
  %48 = xor i32 %47, -1
  %49 = zext i32 %48 to i64
  %50 = call i64 @Cr_z_crc32(i64 %49, i8* nonnull %6, i32 1) #4
  %51 = trunc i64 %50 to i32
  %52 = xor i32 %51, -1
  store i32 %52, i32* %11, align 4
  %53 = load i32, i32* %12, align 4
  %54 = and i32 %52, 255
  %55 = add i32 %53, %54
  %56 = mul i32 %55, 134775813
  %57 = add i32 %56, 1
  store i32 %57, i32* %12, align 4
  %58 = lshr i32 %57, 24
  %59 = trunc i32 %58 to i8
  store i8 %59, i8* %6, align 1
  %60 = load i32, i32* %10, align 4
  %61 = xor i32 %60, -1
  %62 = zext i32 %61 to i64
  %63 = call i64 @Cr_z_crc32(i64 %62, i8* nonnull %6, i32 1) #4
  %64 = trunc i64 %63 to i32
  %65 = xor i32 %64, -1
  store i32 %65, i32* %10, align 4
  call void @llvm.lifetime.end.p0i8(i64 1, i8* nonnull %6)
  br label %66

66:                                               ; preds = %17, %46
  %67 = add nuw i64 %14, 1
  %68 = icmp eq i64 %67, %3
  br i1 %68, label %69, label %13

69:                                               ; preds = %66, %4
  ret void
}

; Function Attrs: nounwind ssp uwtable
define hidden void @_zip_pkware_decrypt(%struct._zip_pkware_keys* nocapture, i8*, i8* nocapture readonly, i64) local_unnamed_addr #1 {
  %5 = alloca i8, align 1
  %6 = icmp eq i64 %3, 0
  br i1 %6, label %49, label %7

7:                                                ; preds = %4
  %8 = icmp eq i8* %1, null
  %9 = getelementptr inbounds %struct._zip_pkware_keys, %struct._zip_pkware_keys* %0, i64 0, i32 0, i64 2
  %10 = getelementptr inbounds %struct._zip_pkware_keys, %struct._zip_pkware_keys* %0, i64 0, i32 0, i64 0
  %11 = getelementptr inbounds %struct._zip_pkware_keys, %struct._zip_pkware_keys* %0, i64 0, i32 0, i64 1
  br label %12

12:                                               ; preds = %26, %7
  %13 = phi i64 [ 0, %7 ], [ %47, %26 ]
  %14 = getelementptr inbounds i8, i8* %2, i64 %13
  %15 = load i8, i8* %14, align 1
  br i1 %8, label %26, label %16

16:                                               ; preds = %12
  %17 = load i32, i32* %9, align 4
  %18 = and i32 %17, 65533
  %19 = or i32 %18, 2
  %20 = xor i32 %18, 3
  %21 = mul nuw i32 %19, %20
  %22 = lshr i32 %21, 8
  %23 = trunc i32 %22 to i8
  %24 = xor i8 %15, %23
  %25 = getelementptr inbounds i8, i8* %1, i64 %13
  store i8 %24, i8* %25, align 1
  br label %26

26:                                               ; preds = %12, %16
  %27 = phi i8 [ %24, %16 ], [ %15, %12 ]
  call void @llvm.lifetime.start.p0i8(i64 1, i8* nonnull %5)
  store i8 %27, i8* %5, align 1
  %28 = load i32, i32* %10, align 4
  %29 = xor i32 %28, -1
  %30 = zext i32 %29 to i64
  %31 = call i64 @Cr_z_crc32(i64 %30, i8* nonnull %5, i32 1) #4
  %32 = trunc i64 %31 to i32
  %33 = xor i32 %32, -1
  store i32 %33, i32* %10, align 4
  %34 = load i32, i32* %11, align 4
  %35 = and i32 %33, 255
  %36 = add i32 %34, %35
  %37 = mul i32 %36, 134775813
  %38 = add i32 %37, 1
  store i32 %38, i32* %11, align 4
  %39 = lshr i32 %38, 24
  %40 = trunc i32 %39 to i8
  store i8 %40, i8* %5, align 1
  %41 = load i32, i32* %9, align 4
  %42 = xor i32 %41, -1
  %43 = zext i32 %42 to i64
  %44 = call i64 @Cr_z_crc32(i64 %43, i8* nonnull %5, i32 1) #4
  %45 = trunc i64 %44 to i32
  %46 = xor i32 %45, -1
  store i32 %46, i32* %9, align 4
  call void @llvm.lifetime.end.p0i8(i64 1, i8* nonnull %5)
  %47 = add nuw i64 %13, 1
  %48 = icmp eq i64 %47, %3
  br i1 %48, label %49, label %12

49:                                               ; preds = %26, %4
  ret void
}

declare i64 @Cr_z_crc32(i64, i8*, i32) local_unnamed_addr #2

; Function Attrs: argmemonly nounwind
declare void @llvm.lifetime.start.p0i8(i64 immarg, i8* nocapture) #3

; Function Attrs: argmemonly nounwind
declare void @llvm.lifetime.end.p0i8(i64 immarg, i8* nocapture) #3

attributes #0 = { nofree norecurse nounwind ssp uwtable writeonly "correctly-rounded-divide-sqrt-fp-math"="false" "disable-tail-calls"="false" "less-precise-fpmad"="false" "min-legal-vector-width"="0" "no-frame-pointer-elim"="false" "no-frame-pointer-elim-non-leaf" "no-infs-fp-math"="false" "no-jump-tables"="false" "no-nans-fp-math"="false" "no-signed-zeros-fp-math"="false" "no-trapping-math"="false" "null-pointer-is-valid"="true" "stack-protector-buffer-size"="4" "target-cpu"="x86-64" "target-features"="+cx8,+fxsr,+mmx,+sse,+sse2,+sse3,+x87" "unsafe-fp-math"="false" "use-soft-float"="false" }
attributes #1 = { nounwind ssp uwtable "correctly-rounded-divide-sqrt-fp-math"="false" "disable-tail-calls"="false" "less-precise-fpmad"="false" "min-legal-vector-width"="0" "no-frame-pointer-elim"="false" "no-frame-pointer-elim-non-leaf" "no-infs-fp-math"="false" "no-jump-tables"="false" "no-nans-fp-math"="false" "no-signed-zeros-fp-math"="false" "no-trapping-math"="false" "null-pointer-is-valid"="true" "stack-protector-buffer-size"="4" "target-cpu"="x86-64" "target-features"="+cx8,+fxsr,+mmx,+sse,+sse2,+sse3,+x87" "unsafe-fp-math"="false" "use-soft-float"="false" }
attributes #2 = { "correctly-rounded-divide-sqrt-fp-math"="false" "disable-tail-calls"="false" "less-precise-fpmad"="false" "no-frame-pointer-elim"="false" "no-frame-pointer-elim-non-leaf" "no-infs-fp-math"="false" "no-nans-fp-math"="false" "no-signed-zeros-fp-math"="false" "no-trapping-math"="false" "null-pointer-is-valid"="true" "stack-protector-buffer-size"="4" "target-cpu"="x86-64" "target-features"="+cx8,+fxsr,+mmx,+sse,+sse2,+sse3,+x87" "unsafe-fp-math"="false" "use-soft-float"="false" }
attributes #3 = { argmemonly nounwind }
attributes #4 = { nounwind }

!llvm.module.flags = !{!0, !1}

!0 = !{i32 1, !"wchar_size", i32 4}
!1 = !{i32 7, !"PIC Level", i32 2}
