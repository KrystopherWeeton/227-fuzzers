; ModuleID = '../../third_party/pdfium/core/fpdfdoc/cpdf_apsettings.cpp'
source_filename = "../../third_party/pdfium/core/fpdfdoc/cpdf_apsettings.cpp"
target datalayout = "e-m:e-i64:64-f80:128-n8:16:32:64-S128"
target triple = "x86_64-unknown-linux-gnu"

module asm ".symver exp, exp@GLIBC_2.2.5"
module asm ".symver exp2, exp2@GLIBC_2.2.5"
module asm ".symver exp2f, exp2f@GLIBC_2.2.5"
module asm ".symver expf, expf@GLIBC_2.2.5"
module asm ".symver lgamma, lgamma@GLIBC_2.2.5"
module asm ".symver lgammaf, lgammaf@GLIBC_2.2.5"
module asm ".symver lgammal, lgammal@GLIBC_2.2.5"
module asm ".symver log, log@GLIBC_2.2.5"
module asm ".symver log2, log2@GLIBC_2.2.5"
module asm ".symver log2f, log2f@GLIBC_2.2.5"
module asm ".symver logf, logf@GLIBC_2.2.5"
module asm ".symver pow, pow@GLIBC_2.2.5"
module asm ".symver powf, powf@GLIBC_2.2.5"

%class.CPDF_ApSettings = type { %"class.fxcrt::RetainPtr" }
%"class.fxcrt::RetainPtr" = type { %"class.std::__1::unique_ptr" }
%"class.std::__1::unique_ptr" = type { %"class.std::__1::__compressed_pair" }
%"class.std::__1::__compressed_pair" = type { %"struct.std::__1::__compressed_pair_elem" }
%"struct.std::__1::__compressed_pair_elem" = type { %class.CPDF_Dictionary* }
%class.CPDF_Dictionary = type { %class.CPDF_Object, i32, %"class.fxcrt::WeakPtr", %"class.std::__1::map" }
%class.CPDF_Object = type { %"class.fxcrt::Retainable", i32, i32 }
%"class.fxcrt::Retainable" = type { i32 (...)**, i64 }
%"class.fxcrt::WeakPtr" = type { %"class.fxcrt::RetainPtr.0" }
%"class.fxcrt::RetainPtr.0" = type { %"class.std::__1::unique_ptr.1" }
%"class.std::__1::unique_ptr.1" = type { %"class.std::__1::__compressed_pair.2" }
%"class.std::__1::__compressed_pair.2" = type { %"struct.std::__1::__compressed_pair_elem.3" }
%"struct.std::__1::__compressed_pair_elem.3" = type { %"class.fxcrt::WeakPtr<fxcrt::StringPoolTemplate<fxcrt::ByteString>, std::__1::default_delete<fxcrt::StringPoolTemplate<fxcrt::ByteString> > >::Handle"* }
%"class.fxcrt::WeakPtr<fxcrt::StringPoolTemplate<fxcrt::ByteString>, std::__1::default_delete<fxcrt::StringPoolTemplate<fxcrt::ByteString> > >::Handle" = type { i64, %"class.std::__1::unique_ptr.44" }
%"class.std::__1::unique_ptr.44" = type { %"class.std::__1::__compressed_pair.45" }
%"class.std::__1::__compressed_pair.45" = type { %"struct.std::__1::__compressed_pair_elem.46" }
%"struct.std::__1::__compressed_pair_elem.46" = type { %"class.fxcrt::StringPoolTemplate"* }
%"class.fxcrt::StringPoolTemplate" = type { %"class.std::__1::unordered_set" }
%"class.std::__1::unordered_set" = type { %"class.std::__1::__hash_table" }
%"class.std::__1::__hash_table" = type <{ %"class.std::__1::unique_ptr.47", %"class.std::__1::__compressed_pair.55", %"class.std::__1::__compressed_pair.60", %"class.std::__1::__compressed_pair.62", [4 x i8] }>
%"class.std::__1::unique_ptr.47" = type { %"class.std::__1::__compressed_pair.48" }
%"class.std::__1::__compressed_pair.48" = type { %"struct.std::__1::__compressed_pair_elem.49", %"struct.std::__1::__compressed_pair_elem.50" }
%"struct.std::__1::__compressed_pair_elem.49" = type { %"struct.std::__1::__hash_node_base"** }
%"struct.std::__1::__hash_node_base" = type { %"struct.std::__1::__hash_node_base"* }
%"struct.std::__1::__compressed_pair_elem.50" = type { %"class.std::__1::__bucket_list_deallocator" }
%"class.std::__1::__bucket_list_deallocator" = type { %"class.std::__1::__compressed_pair.51" }
%"class.std::__1::__compressed_pair.51" = type { %"struct.std::__1::__compressed_pair_elem.9" }
%"struct.std::__1::__compressed_pair_elem.9" = type { i64 }
%"class.std::__1::__compressed_pair.55" = type { %"struct.std::__1::__compressed_pair_elem.56" }
%"struct.std::__1::__compressed_pair_elem.56" = type { %"struct.std::__1::__hash_node_base" }
%"class.std::__1::__compressed_pair.60" = type { %"struct.std::__1::__compressed_pair_elem.9" }
%"class.std::__1::__compressed_pair.62" = type { %"struct.std::__1::__compressed_pair_elem.63" }
%"struct.std::__1::__compressed_pair_elem.63" = type { float }
%"class.std::__1::map" = type { %"class.std::__1::__tree" }
%"class.std::__1::__tree" = type { %"class.std::__1::__tree_end_node"*, %"class.std::__1::__compressed_pair.5", %"class.std::__1::__compressed_pair.8" }
%"class.std::__1::__tree_end_node" = type { %"class.std::__1::__tree_node_base"* }
%"class.std::__1::__tree_node_base" = type opaque
%"class.std::__1::__compressed_pair.5" = type { %"struct.std::__1::__compressed_pair_elem.6" }
%"struct.std::__1::__compressed_pair_elem.6" = type { %"class.std::__1::__tree_end_node" }
%"class.std::__1::__compressed_pair.8" = type { %"struct.std::__1::__compressed_pair_elem.9" }
%"class.fxcrt::ByteString" = type { %"class.fxcrt::RetainPtr.13" }
%"class.fxcrt::RetainPtr.13" = type { %"class.std::__1::unique_ptr.14" }
%"class.std::__1::unique_ptr.14" = type { %"class.std::__1::__compressed_pair.15" }
%"class.std::__1::__compressed_pair.15" = type { %"struct.std::__1::__compressed_pair_elem.16" }
%"struct.std::__1::__compressed_pair_elem.16" = type { %"class.fxcrt::StringDataTemplate"* }
%"class.fxcrt::StringDataTemplate" = type <{ i64, i64, i64, [1 x i8], [7 x i8] }>
%class.CPDF_Array = type <{ %class.CPDF_Object, %"class.std::__1::vector", %"class.fxcrt::WeakPtr", i32, [4 x i8] }>
%"class.std::__1::vector" = type { %"class.std::__1::__vector_base" }
%"class.std::__1::__vector_base" = type { %"class.fxcrt::RetainPtr.19"*, %"class.fxcrt::RetainPtr.19"*, %"class.std::__1::__compressed_pair.25" }
%"class.fxcrt::RetainPtr.19" = type { %"class.std::__1::unique_ptr.20" }
%"class.std::__1::unique_ptr.20" = type { %"class.std::__1::__compressed_pair.21" }
%"class.std::__1::__compressed_pair.21" = type { %"struct.std::__1::__compressed_pair_elem.22" }
%"struct.std::__1::__compressed_pair_elem.22" = type { %class.CPDF_Object* }
%"class.std::__1::__compressed_pair.25" = type { %"struct.std::__1::__compressed_pair_elem.26" }
%"struct.std::__1::__compressed_pair_elem.26" = type { %"class.fxcrt::RetainPtr.19"* }
%struct.CFX_Color = type { i32, float, float, float, float }
%"class.fxcrt::WideString" = type { %"class.fxcrt::RetainPtr.30" }
%"class.fxcrt::RetainPtr.30" = type { %"class.std::__1::unique_ptr.31" }
%"class.std::__1::unique_ptr.31" = type { %"class.std::__1::__compressed_pair.32" }
%"class.std::__1::__compressed_pair.32" = type { %"struct.std::__1::__compressed_pair_elem.33" }
%"struct.std::__1::__compressed_pair_elem.33" = type { %"class.fxcrt::StringDataTemplate.34"* }
%"class.fxcrt::StringDataTemplate.34" = type <{ i64, i64, i64, [1 x i32], [4 x i8] }>
%class.CPDF_Stream = type opaque
%class.CPDF_IconFit = type { %"class.fxcrt::RetainPtr.38" }
%"class.fxcrt::RetainPtr.38" = type { %"class.std::__1::unique_ptr.39" }
%"class.std::__1::unique_ptr.39" = type { %"class.std::__1::__compressed_pair.40" }
%"class.std::__1::__compressed_pair.40" = type { %"struct.std::__1::__compressed_pair_elem.41" }
%"struct.std::__1::__compressed_pair_elem.41" = type { %class.CPDF_Dictionary* }

@.str = private unnamed_addr constant [2 x i8] c"R\00", align 1
@.str.1 = private unnamed_addr constant [3 x i8] c"IF\00", align 1
@.str.2 = private unnamed_addr constant [3 x i8] c"TP\00", align 1

@_ZN15CPDF_ApSettingsC1EP15CPDF_Dictionary = hidden unnamed_addr alias void (%class.CPDF_ApSettings*, %class.CPDF_Dictionary*), void (%class.CPDF_ApSettings*, %class.CPDF_Dictionary*)* @_ZN15CPDF_ApSettingsC2EP15CPDF_Dictionary
@_ZN15CPDF_ApSettingsC1ERKS_ = hidden unnamed_addr alias void (%class.CPDF_ApSettings*, %class.CPDF_ApSettings*), void (%class.CPDF_ApSettings*, %class.CPDF_ApSettings*)* @_ZN15CPDF_ApSettingsC2ERKS_
@_ZN15CPDF_ApSettingsD1Ev = hidden unnamed_addr alias void (%class.CPDF_ApSettings*), void (%class.CPDF_ApSettings*)* @_ZN15CPDF_ApSettingsD2Ev

; Function Attrs: nofree norecurse nounwind ssp uwtable
define hidden void @_ZN15CPDF_ApSettingsC2EP15CPDF_Dictionary(%class.CPDF_ApSettings* nocapture, %class.CPDF_Dictionary*) unnamed_addr #0 align 2 {
  %3 = ptrtoint %class.CPDF_Dictionary* %1 to i64
  %4 = bitcast %class.CPDF_ApSettings* %0 to i64*
  store i64 %3, i64* %4, align 8
  %5 = icmp eq %class.CPDF_Dictionary* %1, null
  br i1 %5, label %10, label %6

6:                                                ; preds = %2
  %7 = getelementptr inbounds %class.CPDF_Dictionary, %class.CPDF_Dictionary* %1, i64 0, i32 0, i32 0, i32 1
  %8 = load i64, i64* %7, align 8
  %9 = add nsw i64 %8, 1
  store i64 %9, i64* %7, align 8
  br label %10

10:                                               ; preds = %2, %6
  ret void
}

; Function Attrs: nofree norecurse nounwind ssp uwtable
define hidden void @_ZN15CPDF_ApSettingsC2ERKS_(%class.CPDF_ApSettings* nocapture, %class.CPDF_ApSettings* nocapture readonly dereferenceable(8)) unnamed_addr #0 align 2 {
  %3 = getelementptr inbounds %class.CPDF_ApSettings, %class.CPDF_ApSettings* %1, i64 0, i32 0, i32 0, i32 0, i32 0, i32 0
  %4 = load %class.CPDF_Dictionary*, %class.CPDF_Dictionary** %3, align 8
  %5 = ptrtoint %class.CPDF_Dictionary* %4 to i64
  %6 = bitcast %class.CPDF_ApSettings* %0 to i64*
  store i64 %5, i64* %6, align 8
  %7 = icmp eq %class.CPDF_Dictionary* %4, null
  br i1 %7, label %12, label %8

8:                                                ; preds = %2
  %9 = getelementptr inbounds %class.CPDF_Dictionary, %class.CPDF_Dictionary* %4, i64 0, i32 0, i32 0, i32 1
  %10 = load i64, i64* %9, align 8
  %11 = add nsw i64 %10, 1
  store i64 %11, i64* %9, align 8
  br label %12

12:                                               ; preds = %2, %8
  ret void
}

; Function Attrs: nounwind ssp uwtable
define hidden void @_ZN15CPDF_ApSettingsD2Ev(%class.CPDF_ApSettings* nocapture) unnamed_addr #1 align 2 {
  %2 = getelementptr inbounds %class.CPDF_ApSettings, %class.CPDF_ApSettings* %0, i64 0, i32 0, i32 0, i32 0, i32 0, i32 0
  %3 = load %class.CPDF_Dictionary*, %class.CPDF_Dictionary** %2, align 8
  store %class.CPDF_Dictionary* null, %class.CPDF_Dictionary** %2, align 8
  %4 = icmp eq %class.CPDF_Dictionary* %3, null
  br i1 %4, label %16, label %5

5:                                                ; preds = %1
  %6 = getelementptr inbounds %class.CPDF_Dictionary, %class.CPDF_Dictionary* %3, i64 0, i32 0, i32 0, i32 1
  %7 = load i64, i64* %6, align 8
  %8 = add nsw i64 %7, -1
  store i64 %8, i64* %6, align 8
  %9 = icmp eq i64 %8, 0
  br i1 %9, label %10, label %16

10:                                               ; preds = %5
  %11 = getelementptr inbounds %class.CPDF_Dictionary, %class.CPDF_Dictionary* %3, i64 0, i32 0, i32 0
  %12 = bitcast %class.CPDF_Dictionary* %3 to void (%"class.fxcrt::Retainable"*)***
  %13 = load void (%"class.fxcrt::Retainable"*)**, void (%"class.fxcrt::Retainable"*)*** %12, align 8
  %14 = getelementptr inbounds void (%"class.fxcrt::Retainable"*)*, void (%"class.fxcrt::Retainable"*)** %13, i64 1
  %15 = load void (%"class.fxcrt::Retainable"*)*, void (%"class.fxcrt::Retainable"*)** %14, align 8
  tail call void %15(%"class.fxcrt::Retainable"* nonnull %11) #5
  br label %16

16:                                               ; preds = %1, %5, %10
  ret void
}

; Function Attrs: nounwind ssp uwtable
define hidden zeroext i1 @_ZNK15CPDF_ApSettings10HasMKEntryERKN5fxcrt10ByteStringE(%class.CPDF_ApSettings* nocapture readonly, %"class.fxcrt::ByteString"* dereferenceable(8)) local_unnamed_addr #1 align 2 {
  %3 = getelementptr inbounds %class.CPDF_ApSettings, %class.CPDF_ApSettings* %0, i64 0, i32 0, i32 0, i32 0, i32 0, i32 0
  %4 = load %class.CPDF_Dictionary*, %class.CPDF_Dictionary** %3, align 8
  %5 = icmp eq %class.CPDF_Dictionary* %4, null
  br i1 %5, label %8, label %6

6:                                                ; preds = %2
  %7 = tail call zeroext i1 @_ZNK15CPDF_Dictionary8KeyExistERKN5fxcrt10ByteStringE(%class.CPDF_Dictionary* nonnull %4, %"class.fxcrt::ByteString"* dereferenceable(8) %1) #5
  br label %8

8:                                                ; preds = %2, %6
  %9 = phi i1 [ false, %2 ], [ %7, %6 ]
  ret i1 %9
}

declare zeroext i1 @_ZNK15CPDF_Dictionary8KeyExistERKN5fxcrt10ByteStringE(%class.CPDF_Dictionary*, %"class.fxcrt::ByteString"* dereferenceable(8)) local_unnamed_addr #2

; Function Attrs: nounwind ssp uwtable
define hidden i32 @_ZNK15CPDF_ApSettings11GetRotationEv(%class.CPDF_ApSettings* nocapture readonly) local_unnamed_addr #1 align 2 {
  %2 = alloca %"class.fxcrt::ByteString", align 8
  %3 = getelementptr inbounds %class.CPDF_ApSettings, %class.CPDF_ApSettings* %0, i64 0, i32 0, i32 0, i32 0, i32 0, i32 0
  %4 = load %class.CPDF_Dictionary*, %class.CPDF_Dictionary** %3, align 8
  %5 = icmp eq %class.CPDF_Dictionary* %4, null
  br i1 %5, label %9, label %6

6:                                                ; preds = %1
  %7 = bitcast %"class.fxcrt::ByteString"* %2 to i8*
  call void @llvm.lifetime.start.p0i8(i64 8, i8* nonnull %7) #5
  call void @_ZN5fxcrt10ByteStringC1EPKc(%"class.fxcrt::ByteString"* nonnull %2, i8* getelementptr inbounds ([2 x i8], [2 x i8]* @.str, i64 0, i64 0)) #5
  %8 = call i32 @_ZNK15CPDF_Dictionary13GetIntegerForERKN5fxcrt10ByteStringE(%class.CPDF_Dictionary* nonnull %4, %"class.fxcrt::ByteString"* nonnull dereferenceable(8) %2) #5
  call void @_ZN5fxcrt10ByteStringD1Ev(%"class.fxcrt::ByteString"* nonnull %2) #5
  call void @llvm.lifetime.end.p0i8(i64 8, i8* nonnull %7) #5
  br label %9

9:                                                ; preds = %1, %6
  %10 = phi i32 [ %8, %6 ], [ 0, %1 ]
  ret i32 %10
}

declare i32 @_ZNK15CPDF_Dictionary13GetIntegerForERKN5fxcrt10ByteStringE(%class.CPDF_Dictionary*, %"class.fxcrt::ByteString"* dereferenceable(8)) local_unnamed_addr #2

; Function Attrs: argmemonly nounwind
declare void @llvm.lifetime.start.p0i8(i64 immarg, i8* nocapture) #3

declare void @_ZN5fxcrt10ByteStringC1EPKc(%"class.fxcrt::ByteString"*, i8*) unnamed_addr #2

; Function Attrs: nounwind
declare void @_ZN5fxcrt10ByteStringD1Ev(%"class.fxcrt::ByteString"*) unnamed_addr #4

; Function Attrs: argmemonly nounwind
declare void @llvm.lifetime.end.p0i8(i64 immarg, i8* nocapture) #3

; Function Attrs: nounwind ssp uwtable
define hidden i64 @_ZNK15CPDF_ApSettings12GetColorARGBERKN5fxcrt10ByteStringE(%class.CPDF_ApSettings* nocapture readonly, %"class.fxcrt::ByteString"* dereferenceable(8)) local_unnamed_addr #1 align 2 {
  %3 = getelementptr inbounds %class.CPDF_ApSettings, %class.CPDF_ApSettings* %0, i64 0, i32 0, i32 0, i32 0, i32 0, i32 0
  %4 = load %class.CPDF_Dictionary*, %class.CPDF_Dictionary** %3, align 8
  %5 = icmp eq %class.CPDF_Dictionary* %4, null
  br i1 %5, label %70, label %6

6:                                                ; preds = %2
  %7 = tail call %class.CPDF_Array* @_ZN15CPDF_Dictionary11GetArrayForERKN5fxcrt10ByteStringE(%class.CPDF_Dictionary* nonnull %4, %"class.fxcrt::ByteString"* dereferenceable(8) %1) #5
  %8 = icmp eq %class.CPDF_Array* %7, null
  br i1 %8, label %70, label %9

9:                                                ; preds = %6
  %10 = getelementptr inbounds %class.CPDF_Array, %class.CPDF_Array* %7, i64 0, i32 1
  %11 = getelementptr inbounds %class.CPDF_Array, %class.CPDF_Array* %7, i64 0, i32 1, i32 0, i32 1
  %12 = bitcast %"class.fxcrt::RetainPtr.19"** %11 to i64*
  %13 = load i64, i64* %12, align 8
  %14 = bitcast %"class.std::__1::vector"* %10 to i64*
  %15 = load i64, i64* %14, align 8
  %16 = sub i64 %13, %15
  %17 = ashr exact i64 %16, 3
  switch i64 %17, label %70 [
    i64 1, label %18
    i64 3, label %27
    i64 4, label %42
  ]

18:                                               ; preds = %9
  %19 = tail call float @_ZNK10CPDF_Array11GetNumberAtEm(%class.CPDF_Array* nonnull %7, i64 0) #5
  %20 = fmul float %19, 2.550000e+02
  %21 = fptosi float %20 to i32
  %22 = shl i32 %21, 16
  %23 = shl i32 %21, 8
  %24 = or i32 %23, %21
  %25 = or i32 %24, %22
  %26 = or i32 %25, -16777216
  br label %70

27:                                               ; preds = %9
  %28 = tail call float @_ZNK10CPDF_Array11GetNumberAtEm(%class.CPDF_Array* nonnull %7, i64 0) #5
  %29 = fmul float %28, 2.550000e+02
  %30 = tail call float @_ZNK10CPDF_Array11GetNumberAtEm(%class.CPDF_Array* nonnull %7, i64 1) #5
  %31 = fmul float %30, 2.550000e+02
  %32 = tail call float @_ZNK10CPDF_Array11GetNumberAtEm(%class.CPDF_Array* nonnull %7, i64 2) #5
  %33 = fmul float %32, 2.550000e+02
  %34 = fptosi float %29 to i32
  %35 = fptosi float %31 to i32
  %36 = fptosi float %33 to i32
  %37 = shl i32 %34, 16
  %38 = shl i32 %35, 8
  %39 = or i32 %37, %38
  %40 = or i32 %39, %36
  %41 = or i32 %40, -16777216
  br label %70

42:                                               ; preds = %9
  %43 = tail call float @_ZNK10CPDF_Array11GetNumberAtEm(%class.CPDF_Array* nonnull %7, i64 0) #5
  %44 = tail call float @_ZNK10CPDF_Array11GetNumberAtEm(%class.CPDF_Array* nonnull %7, i64 1) #5
  %45 = tail call float @_ZNK10CPDF_Array11GetNumberAtEm(%class.CPDF_Array* nonnull %7, i64 2) #5
  %46 = tail call float @_ZNK10CPDF_Array11GetNumberAtEm(%class.CPDF_Array* nonnull %7, i64 3) #5
  %47 = fadd float %43, %46
  %48 = fcmp olt float %47, 1.000000e+00
  %49 = select i1 %48, float %47, float 1.000000e+00
  %50 = fsub float 1.000000e+00, %49
  %51 = fmul float %50, 2.550000e+02
  %52 = fadd float %44, %46
  %53 = fcmp olt float %52, 1.000000e+00
  %54 = select i1 %53, float %52, float 1.000000e+00
  %55 = fsub float 1.000000e+00, %54
  %56 = fmul float %55, 2.550000e+02
  %57 = fadd float %45, %46
  %58 = fcmp olt float %57, 1.000000e+00
  %59 = select i1 %58, float %57, float 1.000000e+00
  %60 = fsub float 1.000000e+00, %59
  %61 = fmul float %60, 2.550000e+02
  %62 = fptosi float %51 to i32
  %63 = fptosi float %56 to i32
  %64 = fptosi float %61 to i32
  %65 = shl i32 %62, 16
  %66 = shl i32 %63, 8
  %67 = or i32 %66, %64
  %68 = or i32 %67, %65
  %69 = or i32 %68, -16777216
  br label %70

70:                                               ; preds = %2, %9, %6, %42, %27, %18
  %71 = phi i64 [ 3, %42 ], [ 2, %27 ], [ 1, %18 ], [ 0, %2 ], [ 0, %6 ], [ 0, %9 ]
  %72 = phi i32 [ %69, %42 ], [ %41, %27 ], [ %26, %18 ], [ 0, %2 ], [ 0, %6 ], [ 0, %9 ]
  %73 = zext i32 %72 to i64
  %74 = shl nuw i64 %73, 32
  %75 = or i64 %74, %71
  ret i64 %75
}

declare %class.CPDF_Array* @_ZN15CPDF_Dictionary11GetArrayForERKN5fxcrt10ByteStringE(%class.CPDF_Dictionary*, %"class.fxcrt::ByteString"* dereferenceable(8)) local_unnamed_addr #2

declare float @_ZNK10CPDF_Array11GetNumberAtEm(%class.CPDF_Array*, i64) local_unnamed_addr #2

; Function Attrs: nounwind ssp uwtable
define hidden float @_ZNK15CPDF_ApSettings25GetOriginalColorComponentEiRKN5fxcrt10ByteStringE(%class.CPDF_ApSettings* nocapture readonly, i32, %"class.fxcrt::ByteString"* dereferenceable(8)) local_unnamed_addr #1 align 2 {
  %4 = getelementptr inbounds %class.CPDF_ApSettings, %class.CPDF_ApSettings* %0, i64 0, i32 0, i32 0, i32 0, i32 0, i32 0
  %5 = load %class.CPDF_Dictionary*, %class.CPDF_Dictionary** %4, align 8
  %6 = icmp eq %class.CPDF_Dictionary* %5, null
  br i1 %6, label %13, label %7

7:                                                ; preds = %3
  %8 = tail call %class.CPDF_Array* @_ZN15CPDF_Dictionary11GetArrayForERKN5fxcrt10ByteStringE(%class.CPDF_Dictionary* nonnull %5, %"class.fxcrt::ByteString"* dereferenceable(8) %2) #5
  %9 = icmp eq %class.CPDF_Array* %8, null
  br i1 %9, label %13, label %10

10:                                               ; preds = %7
  %11 = sext i32 %1 to i64
  %12 = tail call float @_ZNK10CPDF_Array11GetNumberAtEm(%class.CPDF_Array* nonnull %8, i64 %11) #5
  br label %13

13:                                               ; preds = %3, %10, %7
  %14 = phi float [ 0.000000e+00, %3 ], [ %12, %10 ], [ 0.000000e+00, %7 ]
  ret float %14
}

; Function Attrs: nounwind ssp uwtable
define hidden void @_ZNK15CPDF_ApSettings16GetOriginalColorERKN5fxcrt10ByteStringE(%struct.CFX_Color* noalias sret, %class.CPDF_ApSettings* nocapture readonly, %"class.fxcrt::ByteString"* dereferenceable(8)) local_unnamed_addr #1 align 2 {
  %4 = getelementptr inbounds %class.CPDF_ApSettings, %class.CPDF_ApSettings* %1, i64 0, i32 0, i32 0, i32 0, i32 0, i32 0
  %5 = load %class.CPDF_Dictionary*, %class.CPDF_Dictionary** %4, align 8
  %6 = icmp eq %class.CPDF_Dictionary* %5, null
  br i1 %6, label %7, label %9

7:                                                ; preds = %3
  %8 = bitcast %struct.CFX_Color* %0 to i8*
  call void @llvm.memset.p0i8.i64(i8* align 4 %8, i8 0, i64 20, i1 false)
  br label %51

9:                                                ; preds = %3
  %10 = tail call %class.CPDF_Array* @_ZN15CPDF_Dictionary11GetArrayForERKN5fxcrt10ByteStringE(%class.CPDF_Dictionary* nonnull %5, %"class.fxcrt::ByteString"* dereferenceable(8) %2) #5
  %11 = icmp eq %class.CPDF_Array* %10, null
  br i1 %11, label %12, label %14

12:                                               ; preds = %9
  %13 = bitcast %struct.CFX_Color* %0 to i8*
  call void @llvm.memset.p0i8.i64(i8* align 4 %13, i8 0, i64 20, i1 false)
  br label %51

14:                                               ; preds = %9
  %15 = getelementptr inbounds %class.CPDF_Array, %class.CPDF_Array* %10, i64 0, i32 1
  %16 = getelementptr inbounds %class.CPDF_Array, %class.CPDF_Array* %10, i64 0, i32 1, i32 0, i32 1
  %17 = bitcast %"class.fxcrt::RetainPtr.19"** %16 to i64*
  %18 = load i64, i64* %17, align 8
  %19 = bitcast %"class.std::__1::vector"* %15 to i64*
  %20 = load i64, i64* %19, align 8
  %21 = sub i64 %18, %20
  %22 = ashr exact i64 %21, 3
  switch i64 %22, label %49 [
    i64 1, label %23
    i64 3, label %30
    i64 4, label %39
  ]

23:                                               ; preds = %14
  %24 = tail call float @_ZNK10CPDF_Array11GetNumberAtEm(%class.CPDF_Array* nonnull %10, i64 0) #5
  %25 = getelementptr inbounds %struct.CFX_Color, %struct.CFX_Color* %0, i64 0, i32 0
  store i32 1, i32* %25, align 4
  %26 = getelementptr inbounds %struct.CFX_Color, %struct.CFX_Color* %0, i64 0, i32 1
  store float %24, float* %26, align 4
  %27 = getelementptr inbounds %struct.CFX_Color, %struct.CFX_Color* %0, i64 0, i32 2
  store float 0.000000e+00, float* %27, align 4
  %28 = getelementptr inbounds %struct.CFX_Color, %struct.CFX_Color* %0, i64 0, i32 3
  store float 0.000000e+00, float* %28, align 4
  %29 = getelementptr inbounds %struct.CFX_Color, %struct.CFX_Color* %0, i64 0, i32 4
  store float 0.000000e+00, float* %29, align 4
  br label %51

30:                                               ; preds = %14
  %31 = tail call float @_ZNK10CPDF_Array11GetNumberAtEm(%class.CPDF_Array* nonnull %10, i64 0) #5
  %32 = tail call float @_ZNK10CPDF_Array11GetNumberAtEm(%class.CPDF_Array* nonnull %10, i64 1) #5
  %33 = tail call float @_ZNK10CPDF_Array11GetNumberAtEm(%class.CPDF_Array* nonnull %10, i64 2) #5
  %34 = getelementptr inbounds %struct.CFX_Color, %struct.CFX_Color* %0, i64 0, i32 0
  store i32 2, i32* %34, align 4
  %35 = getelementptr inbounds %struct.CFX_Color, %struct.CFX_Color* %0, i64 0, i32 1
  store float %31, float* %35, align 4
  %36 = getelementptr inbounds %struct.CFX_Color, %struct.CFX_Color* %0, i64 0, i32 2
  store float %32, float* %36, align 4
  %37 = getelementptr inbounds %struct.CFX_Color, %struct.CFX_Color* %0, i64 0, i32 3
  store float %33, float* %37, align 4
  %38 = getelementptr inbounds %struct.CFX_Color, %struct.CFX_Color* %0, i64 0, i32 4
  store float 0.000000e+00, float* %38, align 4
  br label %51

39:                                               ; preds = %14
  %40 = tail call float @_ZNK10CPDF_Array11GetNumberAtEm(%class.CPDF_Array* nonnull %10, i64 0) #5
  %41 = tail call float @_ZNK10CPDF_Array11GetNumberAtEm(%class.CPDF_Array* nonnull %10, i64 1) #5
  %42 = tail call float @_ZNK10CPDF_Array11GetNumberAtEm(%class.CPDF_Array* nonnull %10, i64 2) #5
  %43 = tail call float @_ZNK10CPDF_Array11GetNumberAtEm(%class.CPDF_Array* nonnull %10, i64 3) #5
  %44 = getelementptr inbounds %struct.CFX_Color, %struct.CFX_Color* %0, i64 0, i32 0
  store i32 3, i32* %44, align 4
  %45 = getelementptr inbounds %struct.CFX_Color, %struct.CFX_Color* %0, i64 0, i32 1
  store float %40, float* %45, align 4
  %46 = getelementptr inbounds %struct.CFX_Color, %struct.CFX_Color* %0, i64 0, i32 2
  store float %41, float* %46, align 4
  %47 = getelementptr inbounds %struct.CFX_Color, %struct.CFX_Color* %0, i64 0, i32 3
  store float %42, float* %47, align 4
  %48 = getelementptr inbounds %struct.CFX_Color, %struct.CFX_Color* %0, i64 0, i32 4
  store float %43, float* %48, align 4
  br label %51

49:                                               ; preds = %14
  %50 = bitcast %struct.CFX_Color* %0 to i8*
  call void @llvm.memset.p0i8.i64(i8* align 4 %50, i8 0, i64 20, i1 false)
  br label %51

51:                                               ; preds = %12, %49, %39, %30, %23, %7
  ret void
}

; Function Attrs: nounwind ssp uwtable
define hidden void @_ZNK15CPDF_ApSettings10GetCaptionERKN5fxcrt10ByteStringE(%"class.fxcrt::WideString"* noalias sret, %class.CPDF_ApSettings* nocapture readonly, %"class.fxcrt::ByteString"* dereferenceable(8)) local_unnamed_addr #1 align 2 {
  %4 = getelementptr inbounds %class.CPDF_ApSettings, %class.CPDF_ApSettings* %1, i64 0, i32 0, i32 0, i32 0, i32 0, i32 0
  %5 = load %class.CPDF_Dictionary*, %class.CPDF_Dictionary** %4, align 8
  %6 = icmp eq %class.CPDF_Dictionary* %5, null
  br i1 %6, label %8, label %7

7:                                                ; preds = %3
  tail call void @_ZNK15CPDF_Dictionary17GetUnicodeTextForERKN5fxcrt10ByteStringE(%"class.fxcrt::WideString"* sret %0, %class.CPDF_Dictionary* nonnull %5, %"class.fxcrt::ByteString"* dereferenceable(8) %2) #5
  br label %9

8:                                                ; preds = %3
  tail call void @_ZN5fxcrt10WideStringC1Ev(%"class.fxcrt::WideString"* %0) #5
  br label %9

9:                                                ; preds = %8, %7
  ret void
}

declare void @_ZNK15CPDF_Dictionary17GetUnicodeTextForERKN5fxcrt10ByteStringE(%"class.fxcrt::WideString"* sret, %class.CPDF_Dictionary*, %"class.fxcrt::ByteString"* dereferenceable(8)) local_unnamed_addr #2

declare void @_ZN5fxcrt10WideStringC1Ev(%"class.fxcrt::WideString"*) unnamed_addr #2

; Function Attrs: nounwind ssp uwtable
define hidden %class.CPDF_Stream* @_ZNK15CPDF_ApSettings7GetIconERKN5fxcrt10ByteStringE(%class.CPDF_ApSettings* nocapture readonly, %"class.fxcrt::ByteString"* dereferenceable(8)) local_unnamed_addr #1 align 2 {
  %3 = getelementptr inbounds %class.CPDF_ApSettings, %class.CPDF_ApSettings* %0, i64 0, i32 0, i32 0, i32 0, i32 0, i32 0
  %4 = load %class.CPDF_Dictionary*, %class.CPDF_Dictionary** %3, align 8
  %5 = icmp eq %class.CPDF_Dictionary* %4, null
  br i1 %5, label %8, label %6

6:                                                ; preds = %2
  %7 = tail call %class.CPDF_Stream* @_ZN15CPDF_Dictionary12GetStreamForERKN5fxcrt10ByteStringE(%class.CPDF_Dictionary* nonnull %4, %"class.fxcrt::ByteString"* dereferenceable(8) %1) #5
  br label %8

8:                                                ; preds = %2, %6
  %9 = phi %class.CPDF_Stream* [ %7, %6 ], [ null, %2 ]
  ret %class.CPDF_Stream* %9
}

declare %class.CPDF_Stream* @_ZN15CPDF_Dictionary12GetStreamForERKN5fxcrt10ByteStringE(%class.CPDF_Dictionary*, %"class.fxcrt::ByteString"* dereferenceable(8)) local_unnamed_addr #2

; Function Attrs: nounwind ssp uwtable
define hidden void @_ZNK15CPDF_ApSettings10GetIconFitEv(%class.CPDF_IconFit* noalias sret, %class.CPDF_ApSettings* nocapture readonly) local_unnamed_addr #1 align 2 {
  %3 = alloca %"class.fxcrt::ByteString", align 8
  %4 = getelementptr inbounds %class.CPDF_ApSettings, %class.CPDF_ApSettings* %1, i64 0, i32 0, i32 0, i32 0, i32 0, i32 0
  %5 = load %class.CPDF_Dictionary*, %class.CPDF_Dictionary** %4, align 8
  %6 = icmp eq %class.CPDF_Dictionary* %5, null
  br i1 %6, label %10, label %7

7:                                                ; preds = %2
  %8 = bitcast %"class.fxcrt::ByteString"* %3 to i8*
  call void @llvm.lifetime.start.p0i8(i64 8, i8* nonnull %8) #5
  call void @_ZN5fxcrt10ByteStringC1EPKc(%"class.fxcrt::ByteString"* nonnull %3, i8* getelementptr inbounds ([3 x i8], [3 x i8]* @.str.1, i64 0, i64 0)) #5
  %9 = call %class.CPDF_Dictionary* @_ZN15CPDF_Dictionary10GetDictForERKN5fxcrt10ByteStringE(%class.CPDF_Dictionary* nonnull %5, %"class.fxcrt::ByteString"* nonnull dereferenceable(8) %3) #5
  call void @_ZN12CPDF_IconFitC1EPK15CPDF_Dictionary(%class.CPDF_IconFit* %0, %class.CPDF_Dictionary* %9) #5
  call void @_ZN5fxcrt10ByteStringD1Ev(%"class.fxcrt::ByteString"* nonnull %3) #5
  call void @llvm.lifetime.end.p0i8(i64 8, i8* nonnull %8) #5
  br label %11

10:                                               ; preds = %2
  tail call void @_ZN12CPDF_IconFitC1EPK15CPDF_Dictionary(%class.CPDF_IconFit* %0, %class.CPDF_Dictionary* null) #5
  br label %11

11:                                               ; preds = %10, %7
  ret void
}

declare %class.CPDF_Dictionary* @_ZN15CPDF_Dictionary10GetDictForERKN5fxcrt10ByteStringE(%class.CPDF_Dictionary*, %"class.fxcrt::ByteString"* dereferenceable(8)) local_unnamed_addr #2

declare void @_ZN12CPDF_IconFitC1EPK15CPDF_Dictionary(%class.CPDF_IconFit*, %class.CPDF_Dictionary*) unnamed_addr #2

; Function Attrs: nounwind ssp uwtable
define hidden i32 @_ZNK15CPDF_ApSettings15GetTextPositionEv(%class.CPDF_ApSettings* nocapture readonly) local_unnamed_addr #1 align 2 {
  %2 = alloca %"class.fxcrt::ByteString", align 8
  %3 = getelementptr inbounds %class.CPDF_ApSettings, %class.CPDF_ApSettings* %0, i64 0, i32 0, i32 0, i32 0, i32 0, i32 0
  %4 = load %class.CPDF_Dictionary*, %class.CPDF_Dictionary** %3, align 8
  %5 = icmp eq %class.CPDF_Dictionary* %4, null
  br i1 %5, label %9, label %6

6:                                                ; preds = %1
  %7 = bitcast %"class.fxcrt::ByteString"* %2 to i8*
  call void @llvm.lifetime.start.p0i8(i64 8, i8* nonnull %7) #5
  call void @_ZN5fxcrt10ByteStringC1EPKc(%"class.fxcrt::ByteString"* nonnull %2, i8* getelementptr inbounds ([3 x i8], [3 x i8]* @.str.2, i64 0, i64 0)) #5
  %8 = call i32 @_ZNK15CPDF_Dictionary13GetIntegerForERKN5fxcrt10ByteStringEi(%class.CPDF_Dictionary* nonnull %4, %"class.fxcrt::ByteString"* nonnull dereferenceable(8) %2, i32 0) #5
  call void @_ZN5fxcrt10ByteStringD1Ev(%"class.fxcrt::ByteString"* nonnull %2) #5
  call void @llvm.lifetime.end.p0i8(i64 8, i8* nonnull %7) #5
  br label %9

9:                                                ; preds = %1, %6
  %10 = phi i32 [ %8, %6 ], [ 0, %1 ]
  ret i32 %10
}

declare i32 @_ZNK15CPDF_Dictionary13GetIntegerForERKN5fxcrt10ByteStringEi(%class.CPDF_Dictionary*, %"class.fxcrt::ByteString"* dereferenceable(8), i32) local_unnamed_addr #2

; Function Attrs: argmemonly nounwind
declare void @llvm.memset.p0i8.i64(i8* nocapture writeonly, i8, i64, i1 immarg) #3

attributes #0 = { nofree norecurse nounwind ssp uwtable "correctly-rounded-divide-sqrt-fp-math"="false" "disable-tail-calls"="false" "less-precise-fpmad"="false" "min-legal-vector-width"="0" "no-frame-pointer-elim"="false" "no-frame-pointer-elim-non-leaf" "no-infs-fp-math"="false" "no-jump-tables"="false" "no-nans-fp-math"="false" "no-signed-zeros-fp-math"="false" "no-trapping-math"="false" "null-pointer-is-valid"="true" "stack-protector-buffer-size"="4" "target-cpu"="x86-64" "target-features"="+cx8,+fxsr,+mmx,+sse,+sse2,+sse3,+x87" "unsafe-fp-math"="false" "use-soft-float"="false" }
attributes #1 = { nounwind ssp uwtable "correctly-rounded-divide-sqrt-fp-math"="false" "disable-tail-calls"="false" "less-precise-fpmad"="false" "min-legal-vector-width"="0" "no-frame-pointer-elim"="false" "no-frame-pointer-elim-non-leaf" "no-infs-fp-math"="false" "no-jump-tables"="false" "no-nans-fp-math"="false" "no-signed-zeros-fp-math"="false" "no-trapping-math"="false" "null-pointer-is-valid"="true" "stack-protector-buffer-size"="4" "target-cpu"="x86-64" "target-features"="+cx8,+fxsr,+mmx,+sse,+sse2,+sse3,+x87" "unsafe-fp-math"="false" "use-soft-float"="false" }
attributes #2 = { "correctly-rounded-divide-sqrt-fp-math"="false" "disable-tail-calls"="false" "less-precise-fpmad"="false" "no-frame-pointer-elim"="false" "no-frame-pointer-elim-non-leaf" "no-infs-fp-math"="false" "no-nans-fp-math"="false" "no-signed-zeros-fp-math"="false" "no-trapping-math"="false" "null-pointer-is-valid"="true" "stack-protector-buffer-size"="4" "target-cpu"="x86-64" "target-features"="+cx8,+fxsr,+mmx,+sse,+sse2,+sse3,+x87" "unsafe-fp-math"="false" "use-soft-float"="false" }
attributes #3 = { argmemonly nounwind }
attributes #4 = { nounwind "correctly-rounded-divide-sqrt-fp-math"="false" "disable-tail-calls"="false" "less-precise-fpmad"="false" "no-frame-pointer-elim"="false" "no-frame-pointer-elim-non-leaf" "no-infs-fp-math"="false" "no-nans-fp-math"="false" "no-signed-zeros-fp-math"="false" "no-trapping-math"="false" "null-pointer-is-valid"="true" "stack-protector-buffer-size"="4" "target-cpu"="x86-64" "target-features"="+cx8,+fxsr,+mmx,+sse,+sse2,+sse3,+x87" "unsafe-fp-math"="false" "use-soft-float"="false" }
attributes #5 = { nounwind }

!llvm.module.flags = !{!0, !1}

!0 = !{i32 1, !"wchar_size", i32 4}
!1 = !{i32 7, !"PIC Level", i32 2}
