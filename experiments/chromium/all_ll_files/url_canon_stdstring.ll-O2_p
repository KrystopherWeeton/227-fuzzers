; ModuleID = '../../url/url_canon_stdstring.cc'
source_filename = "../../url/url_canon_stdstring.cc"
target datalayout = "e-m:e-i64:64-f80:128-n8:16:32:64-S128"
target triple = "x86_64-unknown-linux-gnu"

%"class.url::StdStringCanonOutput" = type { %"class.url::CanonOutputT", %"class.std::__1::basic_string"* }
%"class.url::CanonOutputT" = type { i32 (...)**, i8*, i32, i32 }
%"class.std::__1::basic_string" = type { %"class.std::__1::__compressed_pair" }
%"class.std::__1::__compressed_pair" = type { %"struct.std::__1::__compressed_pair_elem" }
%"struct.std::__1::__compressed_pair_elem" = type { %"struct.std::__1::basic_string<char, std::__1::char_traits<char>, std::__1::allocator<char> >::__rep" }
%"struct.std::__1::basic_string<char, std::__1::char_traits<char>, std::__1::allocator<char> >::__rep" = type { %union.anon }
%union.anon = type { %"struct.std::__1::basic_string<char, std::__1::char_traits<char>, std::__1::allocator<char> >::__long" }
%"struct.std::__1::basic_string<char, std::__1::char_traits<char>, std::__1::allocator<char> >::__long" = type { i8*, i64, i64 }
%"struct.std::__1::basic_string<char, std::__1::char_traits<char>, std::__1::allocator<char> >::__short" = type { [23 x i8], %struct.anon }
%struct.anon = type { i8 }

@_ZTVN3url20StdStringCanonOutputE = hidden unnamed_addr constant { [5 x i8*] } { [5 x i8*] [i8* null, i8* null, i8* bitcast (void (%"class.url::StdStringCanonOutput"*)* @_ZN3url20StdStringCanonOutputD2Ev to i8*), i8* bitcast (void (%"class.url::StdStringCanonOutput"*)* @_ZN3url20StdStringCanonOutputD0Ev to i8*), i8* bitcast (void (%"class.url::StdStringCanonOutput"*, i32)* @_ZN3url20StdStringCanonOutput6ResizeEi to i8*)] }, align 8

@_ZN3url20StdStringCanonOutputC1EPNSt3__112basic_stringIcNS1_11char_traitsIcEENS1_9allocatorIcEEEE = hidden unnamed_addr alias void (%"class.url::StdStringCanonOutput"*, %"class.std::__1::basic_string"*), void (%"class.url::StdStringCanonOutput"*, %"class.std::__1::basic_string"*)* @_ZN3url20StdStringCanonOutputC2EPNSt3__112basic_stringIcNS1_11char_traitsIcEENS1_9allocatorIcEEEE
@_ZN3url20StdStringCanonOutputD1Ev = hidden unnamed_addr alias void (%"class.url::StdStringCanonOutput"*), void (%"class.url::StdStringCanonOutput"*)* @_ZN3url20StdStringCanonOutputD2Ev

; Function Attrs: nounwind ssp uwtable
define hidden void @_ZN3url20StdStringCanonOutputC2EPNSt3__112basic_stringIcNS1_11char_traitsIcEENS1_9allocatorIcEEEE(%"class.url::StdStringCanonOutput"* nocapture, %"class.std::__1::basic_string"*) unnamed_addr #0 align 2 {
  %3 = getelementptr inbounds %"class.url::StdStringCanonOutput", %"class.url::StdStringCanonOutput"* %0, i64 0, i32 0, i32 0
  %4 = getelementptr inbounds %"class.url::StdStringCanonOutput", %"class.url::StdStringCanonOutput"* %0, i64 0, i32 0, i32 1
  %5 = bitcast i8** %4 to i8*
  tail call void @llvm.memset.p0i8.i64(i8* align 8 %5, i8 0, i64 16, i1 false) #5
  store i32 (...)** bitcast (i8** getelementptr inbounds ({ [5 x i8*] }, { [5 x i8*] }* @_ZTVN3url20StdStringCanonOutputE, i64 0, inrange i32 0, i64 2) to i32 (...)**), i32 (...)*** %3, align 8
  %6 = getelementptr inbounds %"class.url::StdStringCanonOutput", %"class.url::StdStringCanonOutput"* %0, i64 0, i32 1
  store %"class.std::__1::basic_string"* %1, %"class.std::__1::basic_string"** %6, align 8
  %7 = bitcast %"class.std::__1::basic_string"* %1 to %"struct.std::__1::basic_string<char, std::__1::char_traits<char>, std::__1::allocator<char> >::__short"*
  %8 = getelementptr inbounds %"struct.std::__1::basic_string<char, std::__1::char_traits<char>, std::__1::allocator<char> >::__short", %"struct.std::__1::basic_string<char, std::__1::char_traits<char>, std::__1::allocator<char> >::__short"* %7, i64 0, i32 1, i32 0
  %9 = load i8, i8* %8, align 1
  %10 = icmp slt i8 %9, 0
  br i1 %10, label %11, label %14

11:                                               ; preds = %2
  %12 = getelementptr inbounds %"class.std::__1::basic_string", %"class.std::__1::basic_string"* %1, i64 0, i32 0, i32 0, i32 0, i32 0, i32 0, i32 1
  %13 = load i64, i64* %12, align 8
  br label %16

14:                                               ; preds = %2
  %15 = zext i8 %9 to i64
  br label %16

16:                                               ; preds = %11, %14
  %17 = phi i64 [ %13, %11 ], [ %15, %14 ]
  %18 = trunc i64 %17 to i32
  %19 = getelementptr inbounds %"class.url::StdStringCanonOutput", %"class.url::StdStringCanonOutput"* %0, i64 0, i32 0, i32 3
  store i32 %18, i32* %19, align 4
  %20 = load i8, i8* %8, align 1
  %21 = icmp slt i8 %20, 0
  br i1 %21, label %22, label %25

22:                                               ; preds = %16
  %23 = getelementptr inbounds %"class.std::__1::basic_string", %"class.std::__1::basic_string"* %1, i64 0, i32 0, i32 0, i32 0, i32 0, i32 0, i32 1
  %24 = load i64, i64* %23, align 8
  br label %27

25:                                               ; preds = %16
  %26 = zext i8 %20 to i64
  br label %27

27:                                               ; preds = %22, %25
  %28 = phi i64 [ %24, %22 ], [ %26, %25 ]
  %29 = icmp eq i64 %28, 0
  br i1 %29, label %36, label %30

30:                                               ; preds = %27
  br i1 %21, label %31, label %34

31:                                               ; preds = %30
  %32 = getelementptr inbounds %"class.std::__1::basic_string", %"class.std::__1::basic_string"* %1, i64 0, i32 0, i32 0, i32 0, i32 0, i32 0, i32 0
  %33 = load i8*, i8** %32, align 8
  br label %36

34:                                               ; preds = %30
  %35 = bitcast %"class.std::__1::basic_string"* %1 to i8*
  br label %36

36:                                               ; preds = %34, %31, %27
  %37 = phi i8* [ null, %27 ], [ %33, %31 ], [ %35, %34 ]
  store i8* %37, i8** %4, align 8
  %38 = load i8, i8* %8, align 1
  %39 = icmp slt i8 %38, 0
  br i1 %39, label %40, label %43

40:                                               ; preds = %36
  %41 = getelementptr inbounds %"class.std::__1::basic_string", %"class.std::__1::basic_string"* %1, i64 0, i32 0, i32 0, i32 0, i32 0, i32 0, i32 1
  %42 = load i64, i64* %41, align 8
  br label %45

43:                                               ; preds = %36
  %44 = zext i8 %38 to i64
  br label %45

45:                                               ; preds = %40, %43
  %46 = phi i64 [ %42, %40 ], [ %44, %43 ]
  %47 = trunc i64 %46 to i32
  %48 = getelementptr inbounds %"class.url::StdStringCanonOutput", %"class.url::StdStringCanonOutput"* %0, i64 0, i32 0, i32 2
  store i32 %47, i32* %48, align 8
  ret void
}

; Function Attrs: norecurse nounwind readnone ssp uwtable
define hidden void @_ZN3url20StdStringCanonOutputD2Ev(%"class.url::StdStringCanonOutput"* nocapture) unnamed_addr #1 align 2 {
  ret void
}

; Function Attrs: nounwind ssp uwtable
define hidden void @_ZN3url20StdStringCanonOutputD0Ev(%"class.url::StdStringCanonOutput"*) unnamed_addr #0 align 2 {
  %2 = bitcast %"class.url::StdStringCanonOutput"* %0 to i8*
  tail call void @_ZdlPv(i8* %2) #6
  ret void
}

; Function Attrs: nobuiltin nounwind
declare void @_ZdlPv(i8*) local_unnamed_addr #2

; Function Attrs: nounwind ssp uwtable
define hidden void @_ZN3url20StdStringCanonOutput8CompleteEv(%"class.url::StdStringCanonOutput"* nocapture) local_unnamed_addr #0 align 2 {
  %2 = getelementptr inbounds %"class.url::StdStringCanonOutput", %"class.url::StdStringCanonOutput"* %0, i64 0, i32 1
  %3 = load %"class.std::__1::basic_string"*, %"class.std::__1::basic_string"** %2, align 8
  %4 = getelementptr inbounds %"class.url::StdStringCanonOutput", %"class.url::StdStringCanonOutput"* %0, i64 0, i32 0, i32 3
  %5 = load i32, i32* %4, align 4
  %6 = sext i32 %5 to i64
  tail call void @_ZNSt3__112basic_stringIcNS_11char_traitsIcEENS_9allocatorIcEEE6resizeEmc(%"class.std::__1::basic_string"* %3, i64 %6, i8 signext 0) #5
  %7 = load i32, i32* %4, align 4
  %8 = getelementptr inbounds %"class.url::StdStringCanonOutput", %"class.url::StdStringCanonOutput"* %0, i64 0, i32 0, i32 2
  store i32 %7, i32* %8, align 8
  ret void
}

; Function Attrs: nounwind ssp uwtable
define hidden void @_ZN3url20StdStringCanonOutput6ResizeEi(%"class.url::StdStringCanonOutput"* nocapture, i32) unnamed_addr #0 align 2 {
  %3 = getelementptr inbounds %"class.url::StdStringCanonOutput", %"class.url::StdStringCanonOutput"* %0, i64 0, i32 1
  %4 = load %"class.std::__1::basic_string"*, %"class.std::__1::basic_string"** %3, align 8
  %5 = sext i32 %1 to i64
  tail call void @_ZNSt3__112basic_stringIcNS_11char_traitsIcEENS_9allocatorIcEEE6resizeEmc(%"class.std::__1::basic_string"* %4, i64 %5, i8 signext 0) #5
  %6 = load %"class.std::__1::basic_string"*, %"class.std::__1::basic_string"** %3, align 8
  %7 = bitcast %"class.std::__1::basic_string"* %6 to %"struct.std::__1::basic_string<char, std::__1::char_traits<char>, std::__1::allocator<char> >::__short"*
  %8 = getelementptr inbounds %"struct.std::__1::basic_string<char, std::__1::char_traits<char>, std::__1::allocator<char> >::__short", %"struct.std::__1::basic_string<char, std::__1::char_traits<char>, std::__1::allocator<char> >::__short"* %7, i64 0, i32 1, i32 0
  %9 = load i8, i8* %8, align 1
  %10 = icmp slt i8 %9, 0
  br i1 %10, label %11, label %14

11:                                               ; preds = %2
  %12 = getelementptr inbounds %"class.std::__1::basic_string", %"class.std::__1::basic_string"* %6, i64 0, i32 0, i32 0, i32 0, i32 0, i32 0, i32 1
  %13 = load i64, i64* %12, align 8
  br label %16

14:                                               ; preds = %2
  %15 = zext i8 %9 to i64
  br label %16

16:                                               ; preds = %11, %14
  %17 = phi i64 [ %13, %11 ], [ %15, %14 ]
  %18 = icmp eq i64 %17, 0
  br i1 %18, label %25, label %19

19:                                               ; preds = %16
  br i1 %10, label %20, label %23

20:                                               ; preds = %19
  %21 = getelementptr inbounds %"class.std::__1::basic_string", %"class.std::__1::basic_string"* %6, i64 0, i32 0, i32 0, i32 0, i32 0, i32 0, i32 0
  %22 = load i8*, i8** %21, align 8
  br label %25

23:                                               ; preds = %19
  %24 = bitcast %"class.std::__1::basic_string"* %6 to i8*
  br label %25

25:                                               ; preds = %23, %20, %16
  %26 = phi i8* [ null, %16 ], [ %22, %20 ], [ %24, %23 ]
  %27 = getelementptr inbounds %"class.url::StdStringCanonOutput", %"class.url::StdStringCanonOutput"* %0, i64 0, i32 0, i32 1
  store i8* %26, i8** %27, align 8
  %28 = getelementptr inbounds %"class.url::StdStringCanonOutput", %"class.url::StdStringCanonOutput"* %0, i64 0, i32 0, i32 2
  store i32 %1, i32* %28, align 8
  ret void
}

declare void @_ZNSt3__112basic_stringIcNS_11char_traitsIcEENS_9allocatorIcEEE6resizeEmc(%"class.std::__1::basic_string"*, i64, i8 signext) local_unnamed_addr #3

; Function Attrs: argmemonly nounwind
declare void @llvm.memset.p0i8.i64(i8* nocapture writeonly, i8, i64, i1 immarg) #4

attributes #0 = { nounwind ssp uwtable "correctly-rounded-divide-sqrt-fp-math"="false" "disable-tail-calls"="false" "less-precise-fpmad"="false" "min-legal-vector-width"="0" "no-frame-pointer-elim"="false" "no-frame-pointer-elim-non-leaf" "no-infs-fp-math"="false" "no-jump-tables"="false" "no-nans-fp-math"="false" "no-signed-zeros-fp-math"="false" "no-trapping-math"="false" "null-pointer-is-valid"="true" "stack-protector-buffer-size"="4" "target-cpu"="x86-64" "target-features"="+cx8,+fxsr,+mmx,+sse,+sse2,+sse3,+x87" "unsafe-fp-math"="false" "use-soft-float"="false" }
attributes #1 = { norecurse nounwind readnone ssp uwtable "correctly-rounded-divide-sqrt-fp-math"="false" "disable-tail-calls"="false" "less-precise-fpmad"="false" "min-legal-vector-width"="0" "no-frame-pointer-elim"="false" "no-frame-pointer-elim-non-leaf" "no-infs-fp-math"="false" "no-jump-tables"="false" "no-nans-fp-math"="false" "no-signed-zeros-fp-math"="false" "no-trapping-math"="false" "null-pointer-is-valid"="true" "stack-protector-buffer-size"="4" "target-cpu"="x86-64" "target-features"="+cx8,+fxsr,+mmx,+sse,+sse2,+sse3,+x87" "unsafe-fp-math"="false" "use-soft-float"="false" }
attributes #2 = { nobuiltin nounwind "correctly-rounded-divide-sqrt-fp-math"="false" "disable-tail-calls"="false" "less-precise-fpmad"="false" "no-frame-pointer-elim"="false" "no-frame-pointer-elim-non-leaf" "no-infs-fp-math"="false" "no-nans-fp-math"="false" "no-signed-zeros-fp-math"="false" "no-trapping-math"="false" "null-pointer-is-valid"="true" "stack-protector-buffer-size"="4" "target-cpu"="x86-64" "target-features"="+cx8,+fxsr,+mmx,+sse,+sse2,+sse3,+x87" "unsafe-fp-math"="false" "use-soft-float"="false" }
attributes #3 = { "correctly-rounded-divide-sqrt-fp-math"="false" "disable-tail-calls"="false" "less-precise-fpmad"="false" "no-frame-pointer-elim"="false" "no-frame-pointer-elim-non-leaf" "no-infs-fp-math"="false" "no-nans-fp-math"="false" "no-signed-zeros-fp-math"="false" "no-trapping-math"="false" "null-pointer-is-valid"="true" "stack-protector-buffer-size"="4" "target-cpu"="x86-64" "target-features"="+cx8,+fxsr,+mmx,+sse,+sse2,+sse3,+x87" "unsafe-fp-math"="false" "use-soft-float"="false" }
attributes #4 = { argmemonly nounwind }
attributes #5 = { nounwind }
attributes #6 = { builtin nounwind }

!llvm.module.flags = !{!0, !1}

!0 = !{i32 1, !"wchar_size", i32 4}
!1 = !{i32 7, !"PIC Level", i32 2}
