; ModuleID = '../../third_party/nasm/output/outaout.c'
source_filename = "../../third_party/nasm/output/outaout.c"
target datalayout = "e-m:e-i64:64-f80:128-n8:16:32:64-S128"
target triple = "x86_64-unknown-linux-gnu"

%struct.dfmt = type { i8*, i8*, void ()*, void (i8*, i32, i32)*, void (i8*, i32, i64, i32, i8*)*, void (i8*, i8*)*, void (i32)*, void (i32, i8*)*, void ()*, %struct.pragma_facility* }
%struct.pragma_facility = type { i8*, i32 (%struct.pragma*)* }
%struct.pragma = type { %struct.pragma_facility*, i8*, i8*, i8*, i32 }
%struct.ofmt = type { i8*, i8*, i8*, i32, i32, %struct.dfmt**, %struct.dfmt*, i8*, void ()*, void ()*, void (%struct.out_data*)*, void (i32, i8*, i32, i64, i32, i32)*, void (i8*, i32, i64, i32, i8*)*, i32 (i8*, i32*)*, i32 (i8*, i32, i32, i32*, i8*)*, void (i32, i32)*, i32 (i32)*, i32 (i32, i8*)*, void ()*, %struct.pragma_facility* }
%struct.out_data = type { i64, i32, i32, i32, i32, i32, i32, i64, %struct.itemplate*, i8*, i64, i32, i32, i64, %struct.src_location }
%struct.itemplate = type opaque
%struct.src_location = type { i8*, i32 }
%struct.Section = type { %struct.SAA*, i32, i32, i32, i32, %struct.Reloc*, %struct.Reloc**, %struct.Symbol*, %struct.Symbol* }
%struct.SAA = type { i64, i64, i64, i64, i64, i64, i8**, i64, i64, i8**, i64, i64, i8** }
%struct.Reloc = type { %struct.Reloc*, i32, i32, i32, i32 }
%struct.Symbol = type { i32, i32, i32, i32, i32, %struct.Symbol*, %struct.Symbol*, i8*, i32 }
%struct.RAA = type opaque
%struct._IO_FILE = type { i32, i8*, i8*, i8*, i8*, i8*, i8*, i8*, i8*, i8*, i8*, i8*, %struct._IO_marker*, %struct._IO_FILE*, i32, i32, i64, i16, i8, [1 x i8], i8*, i64, %struct._IO_codecvt*, %struct._IO_wide_data*, %struct._IO_FILE*, i8*, i64, i32, [20 x i8] }
%struct._IO_marker = type opaque
%struct._IO_codecvt = type opaque
%struct._IO_wide_data = type opaque
%struct.tokenval = type { i8*, i64, i64, i32, i8 }
%struct.expr = type { i32, i64 }
%struct.eval_hints = type { i64, i32 }

@.str = private unnamed_addr constant [12 x i8] c"Linux a.out\00", align 1
@.str.1 = private unnamed_addr constant [5 x i8] c"aout\00", align 1
@.str.2 = private unnamed_addr constant [3 x i8] c".o\00", align 1
@null_debug_arr = external constant [2 x %struct.dfmt*], align 16
@null_debug_form = external constant %struct.dfmt, align 8
@aout_stdmac = external constant [0 x i8], align 1
@of_aout = hidden local_unnamed_addr constant %struct.ofmt { i8* getelementptr inbounds ([12 x i8], [12 x i8]* @.str, i32 0, i32 0), i8* getelementptr inbounds ([5 x i8], [5 x i8]* @.str.1, i32 0, i32 0), i8* getelementptr inbounds ([3 x i8], [3 x i8]* @.str.2, i32 0, i32 0), i32 0, i32 32, %struct.dfmt** getelementptr inbounds ([2 x %struct.dfmt*], [2 x %struct.dfmt*]* @null_debug_arr, i32 0, i32 0), %struct.dfmt* @null_debug_form, i8* getelementptr inbounds ([0 x i8], [0 x i8]* @aout_stdmac, i32 0, i32 0), void ()* @aout_init, void ()* @null_reset, void (%struct.out_data*)* @nasm_do_legacy_output, void (i32, i8*, i32, i64, i32, i32)* @aout_out, void (i8*, i32, i64, i32, i8*)* @aout_deflabel, i32 (i8*, i32*)* @aout_section_names, i32 (i8*, i32, i32, i32*, i8*)* null, void (i32, i32)* @null_sectalign, i32 (i32)* @null_segbase, i32 (i32, i8*)* @null_directive, void ()* @aout_cleanup, %struct.pragma_facility* null }, align 8
@.str.3 = private unnamed_addr constant [21 x i8] c"NetBSD/FreeBSD a.out\00", align 1
@.str.4 = private unnamed_addr constant [6 x i8] c"aoutb\00", align 1
@of_aoutb = hidden local_unnamed_addr constant %struct.ofmt { i8* getelementptr inbounds ([21 x i8], [21 x i8]* @.str.3, i32 0, i32 0), i8* getelementptr inbounds ([6 x i8], [6 x i8]* @.str.4, i32 0, i32 0), i8* getelementptr inbounds ([3 x i8], [3 x i8]* @.str.2, i32 0, i32 0), i32 0, i32 32, %struct.dfmt** getelementptr inbounds ([2 x %struct.dfmt*], [2 x %struct.dfmt*]* @null_debug_arr, i32 0, i32 0), %struct.dfmt* @null_debug_form, i8* getelementptr inbounds ([0 x i8], [0 x i8]* @aout_stdmac, i32 0, i32 0), void ()* @aoutb_init, void ()* @null_reset, void (%struct.out_data*)* @nasm_do_legacy_output, void (i32, i8*, i32, i64, i32, i32)* @aout_out, void (i8*, i32, i64, i32, i8*)* @aout_deflabel, i32 (i8*, i32*)* @aout_section_names, i32 (i8*, i32, i32, i32*, i8*)* null, void (i32, i32)* @null_sectalign, i32 (i32)* @null_segbase, i32 (i32, i8*)* @null_directive, void ()* @aout_cleanup, %struct.pragma_facility* null }, align 8
@bsd = internal unnamed_addr global i1 false, align 4
@aout_sym_sect = internal unnamed_addr global i32 0, align 4
@aout_plt_sect = internal unnamed_addr global i32 0, align 4
@aout_got_sect = internal unnamed_addr global i32 0, align 4
@aout_gotoff_sect = internal unnamed_addr global i32 0, align 4
@aout_gotpc_sect = internal unnamed_addr global i32 0, align 4
@stext = internal global %struct.Section zeroinitializer, align 8
@sdata = internal global %struct.Section zeroinitializer, align 8
@syms = internal unnamed_addr global %struct.SAA* null, align 8
@nsyms = internal unnamed_addr global i32 0, align 4
@bsym = internal unnamed_addr global %struct.RAA* null, align 8
@strs = internal unnamed_addr global %struct.SAA* null, align 8
@strslen = internal unnamed_addr global i32 0, align 4
@fwds = internal unnamed_addr global %struct.Symbol* null, align 8
@.str.5 = private unnamed_addr constant [62 x i8] c"attempt to assemble code in segment %d: defaulting to `.text'\00", align 1
@.str.6 = private unnamed_addr constant [57 x i8] c"attempt to initialize memory in the BSS section: ignored\00", align 1
@.str.7 = private unnamed_addr constant [52 x i8] c"uninitialized space declared in %s section: zeroing\00", align 1
@.str.8 = private unnamed_addr constant [5 x i8] c"code\00", align 1
@.str.9 = private unnamed_addr constant [5 x i8] c"data\00", align 1
@.str.10 = private unnamed_addr constant [54 x i8] c"a.out format does not support segment base references\00", align 1
@.str.11 = private unnamed_addr constant [51 x i8] c"Linux a.out format does not support any use of WRT\00", align 1
@is_pic = internal unnamed_addr global i1 false, align 4
@.str.12 = private unnamed_addr constant [59 x i8] c"a.out format cannot produce non-PC-relative PLT references\00", align 1
@.str.13 = private unnamed_addr constant [46 x i8] c"a.out format does not support this use of WRT\00", align 1
@.str.14 = private unnamed_addr constant [55 x i8] c"a.out format cannot produce PC-relative GOT references\00", align 1
@.str.15 = private unnamed_addr constant [66 x i8] c"`..gotoff' relocations require a non-global symbol in the section\00", align 1
@.str.16 = private unnamed_addr constant [59 x i8] c"unable to find a suitable global symbol for this reference\00", align 1
@.str.17 = private unnamed_addr constant [8 x i8] c"..gotpc\00", align 1
@.str.18 = private unnamed_addr constant [9 x i8] c"..gotoff\00", align 1
@.str.19 = private unnamed_addr constant [6 x i8] c"..got\00", align 1
@.str.20 = private unnamed_addr constant [6 x i8] c"..plt\00", align 1
@.str.21 = private unnamed_addr constant [6 x i8] c"..sym\00", align 1
@.str.22 = private unnamed_addr constant [33 x i8] c"unrecognised special symbol `%s'\00", align 1
@.str.23 = private unnamed_addr constant [49 x i8] c"cannot use relocatable expression as symbol size\00", align 1
@.str.24 = private unnamed_addr constant [2 x i8] c" \00", align 1
@.str.25 = private unnamed_addr constant [9 x i8] c"function\00", align 1
@.str.26 = private unnamed_addr constant [7 x i8] c"object\00", align 1
@.str.27 = private unnamed_addr constant [32 x i8] c"unrecognised symbol type `%.*s'\00", align 1
@.str.29 = private unnamed_addr constant [53 x i8] c"Linux a.out does not support symbol size information\00", align 1
@.str.30 = private unnamed_addr constant [42 x i8] c"no special symbol features supported here\00", align 1
@nasm_ctype_tab = external local_unnamed_addr global [256 x i16], align 16
@.str.31 = private unnamed_addr constant [6 x i8] c".text\00", align 1
@.str.32 = private unnamed_addr constant [6 x i8] c".data\00", align 1
@.str.33 = private unnamed_addr constant [5 x i8] c".bss\00", align 1
@aout_pad_sections.pad = internal global [4 x i8] c"\90\90\90\90", align 1
@ofile = external local_unnamed_addr global %struct._IO_FILE*, align 8
@sbss.1 = internal unnamed_addr global i32 0, align 8
@sbss.4 = internal unnamed_addr global i32 0, align 8
@sbss.7 = internal unnamed_addr global %struct.Symbol* null, align 8
@sbss.8 = internal unnamed_addr global %struct.Symbol* null, align 8

; Function Attrs: nounwind ssp uwtable
define internal void @aout_init() #0 {
  store i1 false, i1* @bsd, align 4
  tail call fastcc void @aoutg_init()
  store i32 -1, i32* @aout_sym_sect, align 4
  store i32 -1, i32* @aout_plt_sect, align 4
  store i32 -1, i32* @aout_got_sect, align 4
  store i32 -1, i32* @aout_gotoff_sect, align 4
  store i32 -1, i32* @aout_gotpc_sect, align 4
  ret void
}

declare void @null_reset() #1

declare void @nasm_do_legacy_output(%struct.out_data*) #1

; Function Attrs: nounwind ssp uwtable
define internal void @aout_out(i32, i8*, i32, i64, i32, i32) #0 {
  %7 = alloca i32, align 4
  %8 = bitcast i32* %7 to i8*
  call void @llvm.lifetime.start.p0i8(i64 4, i8* nonnull %8) #7
  store i32 -1431655766, i32* %7, align 4
  %9 = load i32, i32* getelementptr inbounds (%struct.Section, %struct.Section* @stext, i64 0, i32 4), align 4
  %10 = icmp eq i32 %9, %0
  br i1 %10, label %25, label %11

11:                                               ; preds = %6
  %12 = load i32, i32* getelementptr inbounds (%struct.Section, %struct.Section* @sdata, i64 0, i32 4), align 4
  %13 = icmp eq i32 %12, %0
  br i1 %13, label %25, label %14

14:                                               ; preds = %11
  %15 = load i32, i32* @sbss.4, align 8
  %16 = icmp eq i32 %15, %0
  br i1 %16, label %18, label %17

17:                                               ; preds = %14
  tail call void (i32, i8*, ...) @nasm_warn(i32 2228224, i8* getelementptr inbounds ([62 x i8], [62 x i8]* @.str.5, i64 0, i64 0), i32 %0) #7
  br label %25

18:                                               ; preds = %14
  %19 = icmp eq i32 %2, 1
  br i1 %19, label %38, label %20

20:                                               ; preds = %18
  tail call void (i32, i8*, ...) @nasm_warn(i32 2228224, i8* getelementptr inbounds ([57 x i8], [57 x i8]* @.str.6, i64 0, i64 0)) #7
  %21 = tail call i64 @realsize(i32 %2, i64 %3) #7
  %22 = load i32, i32* @sbss.1, align 8
  %23 = trunc i64 %21 to i32
  %24 = add i32 %22, %23
  br label %484

25:                                               ; preds = %11, %6, %17
  %26 = phi %struct.Section* [ @stext, %17 ], [ @stext, %6 ], [ @sdata, %11 ]
  store i32 0, i32* %7, align 4
  switch i32 %2, label %487 [
    i32 1, label %27
    i32 0, label %42
    i32 3, label %50
    i32 7, label %232
    i32 8, label %359
  ]

27:                                               ; preds = %25
  %28 = load i32, i32* getelementptr inbounds (%struct.Section, %struct.Section* @stext, i64 0, i32 4), align 4
  %29 = icmp eq i32 %28, %0
  %30 = select i1 %29, i8* getelementptr inbounds ([5 x i8], [5 x i8]* @.str.8, i64 0, i64 0), i8* getelementptr inbounds ([5 x i8], [5 x i8]* @.str.9, i64 0, i64 0)
  tail call void (i32, i8*, ...) @nasm_warn(i32 2097152, i8* getelementptr inbounds ([52 x i8], [52 x i8]* @.str.7, i64 0, i64 0), i8* %30) #7
  %31 = trunc i64 %3 to i32
  %32 = getelementptr inbounds %struct.Section, %struct.Section* %26, i64 0, i32 0
  %33 = load %struct.SAA*, %struct.SAA** %32, align 8
  %34 = and i64 %3, 4294967295
  tail call void @saa_wbytes(%struct.SAA* %33, i8* null, i64 %34) #7
  %35 = getelementptr inbounds %struct.Section, %struct.Section* %26, i64 0, i32 1
  %36 = load i32, i32* %35, align 8
  %37 = add i32 %36, %31
  br label %484

38:                                               ; preds = %18
  store i32 0, i32* %7, align 4
  %39 = load i32, i32* @sbss.1, align 8
  %40 = trunc i64 %3 to i32
  %41 = add i32 %39, %40
  br label %484

42:                                               ; preds = %25
  %43 = trunc i64 %3 to i32
  %44 = getelementptr inbounds %struct.Section, %struct.Section* %26, i64 0, i32 0
  %45 = load %struct.SAA*, %struct.SAA** %44, align 8
  %46 = and i64 %3, 4294967295
  tail call void @saa_wbytes(%struct.SAA* %45, i8* %1, i64 %46) #7
  %47 = getelementptr inbounds %struct.Section, %struct.Section* %26, i64 0, i32 1
  %48 = load i32, i32* %47, align 8
  %49 = add i32 %48, %43
  br label %484

50:                                               ; preds = %25
  %51 = trunc i64 %3 to i32
  %52 = icmp slt i32 %51, 0
  %53 = sub nsw i32 0, %51
  %54 = select i1 %52, i32 %53, i32 %51
  %55 = bitcast i8* %1 to i64*
  %56 = load i64, i64* %55, align 8
  %57 = trunc i64 %56 to i32
  %58 = icmp eq i32 %4, -1
  br i1 %58, label %218, label %59

59:                                               ; preds = %50
  %60 = and i32 %4, 1
  %61 = icmp eq i32 %60, 0
  br i1 %61, label %63, label %62

62:                                               ; preds = %59
  tail call void (i8*, ...) @nasm_nonfatal(i8* getelementptr inbounds ([54 x i8], [54 x i8]* @.str.10, i64 0, i64 0)) #7
  br label %218

63:                                               ; preds = %59
  %64 = icmp eq i32 %5, -1
  br i1 %64, label %65, label %108

65:                                               ; preds = %63
  %66 = tail call noalias i8* @nasm_malloc(i64 24) #8
  %67 = getelementptr inbounds %struct.Section, %struct.Section* %26, i64 0, i32 6
  %68 = bitcast %struct.Reloc*** %67 to i8***
  %69 = load i8**, i8*** %68, align 8
  store i8* %66, i8** %69, align 8
  %70 = bitcast i8* %66 to %struct.Reloc**
  %71 = bitcast %struct.Reloc*** %67 to i8**
  store i8* %66, i8** %71, align 8
  store %struct.Reloc* null, %struct.Reloc** %70, align 8
  %72 = getelementptr inbounds %struct.Section, %struct.Section* %26, i64 0, i32 1
  %73 = load i32, i32* %72, align 8
  %74 = getelementptr inbounds i8, i8* %66, i64 8
  %75 = bitcast i8* %74 to i32*
  store i32 %73, i32* %75, align 8
  %76 = load i32, i32* getelementptr inbounds (%struct.Section, %struct.Section* @stext, i64 0, i32 4), align 4
  %77 = icmp eq i32 %76, %4
  br i1 %77, label %84, label %78

78:                                               ; preds = %65
  %79 = load i32, i32* getelementptr inbounds (%struct.Section, %struct.Section* @sdata, i64 0, i32 4), align 4
  %80 = icmp eq i32 %79, %4
  br i1 %80, label %84, label %81

81:                                               ; preds = %78
  %82 = load i32, i32* @sbss.4, align 8
  %83 = icmp eq i32 %82, %4
  br i1 %83, label %84, label %88

84:                                               ; preds = %81, %78, %65
  %85 = phi i32 [ -8, %81 ], [ -6, %78 ], [ -4, %65 ]
  %86 = getelementptr inbounds i8, i8* %66, i64 12
  %87 = bitcast i8* %86 to i32*
  store i32 %85, i32* %87, align 4
  br label %99

88:                                               ; preds = %81
  %89 = load %struct.RAA*, %struct.RAA** @bsym, align 8
  %90 = sext i32 %4 to i64
  %91 = tail call i64 @raa_read(%struct.RAA* %89, i64 %90) #7
  %92 = trunc i64 %91 to i32
  %93 = getelementptr inbounds i8, i8* %66, i64 12
  %94 = bitcast i8* %93 to i32*
  store i32 %92, i32* %94, align 4
  %95 = lshr i64 %91, 28
  %96 = trunc i64 %95 to i32
  %97 = and i32 %96, 8
  %98 = xor i32 %97, 8
  br label %99

99:                                               ; preds = %84, %88
  %100 = phi i32 [ 0, %84 ], [ %98, %88 ]
  %101 = getelementptr inbounds i8, i8* %66, i64 20
  %102 = bitcast i8* %101 to i32*
  store i32 %100, i32* %102, align 4
  %103 = getelementptr inbounds i8, i8* %66, i64 16
  %104 = bitcast i8* %103 to i32*
  store i32 %54, i32* %104, align 8
  %105 = getelementptr inbounds %struct.Section, %struct.Section* %26, i64 0, i32 3
  %106 = load i32, i32* %105, align 8
  %107 = add i32 %106, 1
  store i32 %107, i32* %105, align 8
  br label %218

108:                                              ; preds = %63
  %109 = load i1, i1* @bsd, align 4
  br i1 %109, label %111, label %110

110:                                              ; preds = %108
  tail call void (i8*, ...) @nasm_nonfatal(i8* getelementptr inbounds ([51 x i8], [51 x i8]* @.str.11, i64 0, i64 0)) #7
  br label %218

111:                                              ; preds = %108
  %112 = load i32, i32* @aout_gotpc_sect, align 4
  %113 = add nsw i32 %112, 1
  %114 = icmp eq i32 %113, %5
  br i1 %114, label %115, label %156

115:                                              ; preds = %111
  store i1 true, i1* @is_pic, align 4
  %116 = tail call noalias i8* @nasm_malloc(i64 24) #8
  %117 = getelementptr inbounds %struct.Section, %struct.Section* %26, i64 0, i32 6
  %118 = bitcast %struct.Reloc*** %117 to i8***
  %119 = load i8**, i8*** %118, align 8
  store i8* %116, i8** %119, align 8
  %120 = bitcast i8* %116 to %struct.Reloc**
  %121 = bitcast %struct.Reloc*** %117 to i8**
  store i8* %116, i8** %121, align 8
  store %struct.Reloc* null, %struct.Reloc** %120, align 8
  %122 = getelementptr inbounds %struct.Section, %struct.Section* %26, i64 0, i32 1
  %123 = load i32, i32* %122, align 8
  %124 = getelementptr inbounds i8, i8* %116, i64 8
  %125 = bitcast i8* %124 to i32*
  store i32 %123, i32* %125, align 8
  %126 = load i32, i32* getelementptr inbounds (%struct.Section, %struct.Section* @stext, i64 0, i32 4), align 4
  %127 = icmp eq i32 %126, %4
  br i1 %127, label %134, label %128

128:                                              ; preds = %115
  %129 = load i32, i32* getelementptr inbounds (%struct.Section, %struct.Section* @sdata, i64 0, i32 4), align 4
  %130 = icmp eq i32 %129, %4
  br i1 %130, label %134, label %131

131:                                              ; preds = %128
  %132 = load i32, i32* @sbss.4, align 8
  %133 = icmp eq i32 %132, %4
  br i1 %133, label %134, label %138

134:                                              ; preds = %131, %128, %115
  %135 = phi i32 [ -8, %131 ], [ -6, %128 ], [ -4, %115 ]
  %136 = getelementptr inbounds i8, i8* %116, i64 12
  %137 = bitcast i8* %136 to i32*
  store i32 %135, i32* %137, align 4
  br label %147

138:                                              ; preds = %131
  %139 = load %struct.RAA*, %struct.RAA** @bsym, align 8
  %140 = sext i32 %4 to i64
  %141 = tail call i64 @raa_read(%struct.RAA* %139, i64 %140) #7
  %142 = trunc i64 %141 to i32
  %143 = getelementptr inbounds i8, i8* %116, i64 12
  %144 = bitcast i8* %143 to i32*
  store i32 %142, i32* %144, align 4
  %145 = icmp sgt i32 %142, -1
  %146 = select i1 %145, i32 9, i32 1
  br label %147

147:                                              ; preds = %134, %138
  %148 = phi i32 [ 1, %134 ], [ %146, %138 ]
  %149 = getelementptr inbounds i8, i8* %116, i64 20
  %150 = bitcast i8* %149 to i32*
  store i32 %148, i32* %150, align 4
  %151 = getelementptr inbounds i8, i8* %116, i64 16
  %152 = bitcast i8* %151 to i32*
  store i32 %54, i32* %152, align 8
  %153 = getelementptr inbounds %struct.Section, %struct.Section* %26, i64 0, i32 3
  %154 = load i32, i32* %153, align 8
  %155 = add i32 %154, 1
  store i32 %155, i32* %153, align 8
  br label %218

156:                                              ; preds = %111
  %157 = load i32, i32* @aout_gotoff_sect, align 4
  %158 = add nsw i32 %157, 1
  %159 = icmp eq i32 %158, %5
  br i1 %159, label %160, label %200

160:                                              ; preds = %156
  store i1 true, i1* @is_pic, align 4
  %161 = load i32, i32* getelementptr inbounds (%struct.Section, %struct.Section* @stext, i64 0, i32 4), align 4
  %162 = icmp eq i32 %161, %4
  br i1 %162, label %169, label %163

163:                                              ; preds = %160
  %164 = load i32, i32* getelementptr inbounds (%struct.Section, %struct.Section* @sdata, i64 0, i32 4), align 4
  %165 = icmp eq i32 %164, %4
  br i1 %165, label %169, label %166

166:                                              ; preds = %163
  %167 = load i32, i32* @sbss.4, align 8
  %168 = icmp eq i32 %167, %4
  br i1 %168, label %169, label %173

169:                                              ; preds = %166, %163, %160
  %170 = phi %struct.Symbol** [ @sbss.8, %166 ], [ getelementptr inbounds (%struct.Section, %struct.Section* @stext, i64 0, i32 8), %160 ], [ getelementptr inbounds (%struct.Section, %struct.Section* @sdata, i64 0, i32 8), %163 ]
  %171 = load %struct.Symbol*, %struct.Symbol** %170, align 8
  %172 = icmp eq %struct.Symbol* %171, null
  br i1 %172, label %173, label %174

173:                                              ; preds = %169, %166
  tail call void (i8*, ...) @nasm_nonfatal(i8* getelementptr inbounds ([66 x i8], [66 x i8]* @.str.15, i64 0, i64 0)) #7
  br label %174

174:                                              ; preds = %169, %173
  %175 = phi %struct.Symbol* [ %171, %169 ], [ null, %173 ]
  %176 = tail call noalias i8* @nasm_malloc(i64 24) #8
  %177 = getelementptr inbounds %struct.Section, %struct.Section* %26, i64 0, i32 6
  %178 = bitcast %struct.Reloc*** %177 to i8***
  %179 = load i8**, i8*** %178, align 8
  store i8* %176, i8** %179, align 8
  %180 = bitcast i8* %176 to %struct.Reloc**
  %181 = bitcast %struct.Reloc*** %177 to i8**
  store i8* %176, i8** %181, align 8
  store %struct.Reloc* null, %struct.Reloc** %180, align 8
  %182 = getelementptr inbounds %struct.Section, %struct.Section* %26, i64 0, i32 1
  %183 = load i32, i32* %182, align 8
  %184 = getelementptr inbounds i8, i8* %176, i64 8
  %185 = bitcast i8* %184 to i32*
  store i32 %183, i32* %185, align 8
  %186 = getelementptr inbounds %struct.Symbol, %struct.Symbol* %175, i64 0, i32 8
  %187 = load i32, i32* %186, align 8
  %188 = getelementptr inbounds i8, i8* %176, i64 12
  %189 = bitcast i8* %188 to i32*
  store i32 %187, i32* %189, align 4
  %190 = getelementptr inbounds i8, i8* %176, i64 20
  %191 = bitcast i8* %190 to i32*
  store i32 16, i32* %191, align 4
  %192 = getelementptr inbounds i8, i8* %176, i64 16
  %193 = bitcast i8* %192 to i32*
  store i32 %54, i32* %193, align 8
  %194 = getelementptr inbounds %struct.Section, %struct.Section* %26, i64 0, i32 3
  %195 = load i32, i32* %194, align 8
  %196 = add i32 %195, 1
  store i32 %196, i32* %194, align 8
  %197 = getelementptr inbounds %struct.Symbol, %struct.Symbol* %175, i64 0, i32 2
  %198 = load i32, i32* %197, align 8
  %199 = sub nsw i32 %57, %198
  br label %218

200:                                              ; preds = %156
  %201 = load i32, i32* @aout_got_sect, align 4
  %202 = add nsw i32 %201, 1
  %203 = icmp eq i32 %202, %5
  br i1 %203, label %204, label %206

204:                                              ; preds = %200
  store i1 true, i1* @is_pic, align 4
  %205 = tail call fastcc i32 @aout_add_gsym_reloc(%struct.Section* %26, i32 %4, i32 %57, i32 16, i32 %54, i32 1)
  br label %218

206:                                              ; preds = %200
  %207 = load i32, i32* @aout_sym_sect, align 4
  %208 = add nsw i32 %207, 1
  %209 = icmp eq i32 %208, %5
  br i1 %209, label %210, label %212

210:                                              ; preds = %206
  %211 = tail call fastcc i32 @aout_add_gsym_reloc(%struct.Section* %26, i32 %4, i32 %57, i32 0, i32 %54, i32 0)
  br label %218

212:                                              ; preds = %206
  %213 = load i32, i32* @aout_plt_sect, align 4
  %214 = add nsw i32 %213, 1
  %215 = icmp eq i32 %214, %5
  br i1 %215, label %216, label %217

216:                                              ; preds = %212
  store i1 true, i1* @is_pic, align 4
  tail call void (i8*, ...) @nasm_nonfatal(i8* getelementptr inbounds ([59 x i8], [59 x i8]* @.str.12, i64 0, i64 0)) #7
  br label %218

217:                                              ; preds = %212
  tail call void (i8*, ...) @nasm_nonfatal(i8* getelementptr inbounds ([46 x i8], [46 x i8]* @.str.13, i64 0, i64 0)) #7
  br label %218

218:                                              ; preds = %50, %62, %110, %174, %210, %217, %216, %204, %147, %99
  %219 = phi i32 [ %57, %62 ], [ %57, %99 ], [ %57, %147 ], [ %199, %174 ], [ %205, %204 ], [ %211, %210 ], [ %57, %216 ], [ %57, %217 ], [ %57, %110 ], [ %57, %50 ]
  %220 = icmp eq i32 %54, 2
  br i1 %220, label %221, label %224

221:                                              ; preds = %218
  %222 = bitcast i32* %7 to i16*
  %223 = trunc i32 %219 to i16
  store i16 %223, i16* %222, align 4
  br label %225

224:                                              ; preds = %218
  store i32 %219, i32* %7, align 4
  br label %225

225:                                              ; preds = %224, %221
  %226 = getelementptr inbounds %struct.Section, %struct.Section* %26, i64 0, i32 0
  %227 = load %struct.SAA*, %struct.SAA** %226, align 8
  %228 = zext i32 %54 to i64
  call void @saa_wbytes(%struct.SAA* %227, i8* nonnull %8, i64 %228) #7
  %229 = getelementptr inbounds %struct.Section, %struct.Section* %26, i64 0, i32 1
  %230 = load i32, i32* %229, align 8
  %231 = add i32 %230, %54
  br label %484

232:                                              ; preds = %25
  %233 = icmp eq i32 %4, -1
  %234 = and i32 %4, 1
  %235 = icmp eq i32 %234, 0
  %236 = or i1 %233, %235
  br i1 %236, label %238, label %237

237:                                              ; preds = %232
  tail call void (i8*, ...) @nasm_nonfatal(i8* getelementptr inbounds ([54 x i8], [54 x i8]* @.str.10, i64 0, i64 0)) #7
  br label %345

238:                                              ; preds = %232
  %239 = icmp eq i32 %5, -1
  br i1 %239, label %240, label %282

240:                                              ; preds = %238
  %241 = tail call noalias i8* @nasm_malloc(i64 24) #8
  %242 = getelementptr inbounds %struct.Section, %struct.Section* %26, i64 0, i32 6
  %243 = bitcast %struct.Reloc*** %242 to i8***
  %244 = load i8**, i8*** %243, align 8
  store i8* %241, i8** %244, align 8
  %245 = bitcast i8* %241 to %struct.Reloc**
  %246 = bitcast %struct.Reloc*** %242 to i8**
  store i8* %241, i8** %246, align 8
  store %struct.Reloc* null, %struct.Reloc** %245, align 8
  %247 = getelementptr inbounds %struct.Section, %struct.Section* %26, i64 0, i32 1
  %248 = load i32, i32* %247, align 8
  %249 = getelementptr inbounds i8, i8* %241, i64 8
  %250 = bitcast i8* %249 to i32*
  store i32 %248, i32* %250, align 8
  br i1 %233, label %260, label %251

251:                                              ; preds = %240
  %252 = load i32, i32* getelementptr inbounds (%struct.Section, %struct.Section* @stext, i64 0, i32 4), align 4
  %253 = icmp eq i32 %252, %4
  br i1 %253, label %260, label %254

254:                                              ; preds = %251
  %255 = load i32, i32* getelementptr inbounds (%struct.Section, %struct.Section* @sdata, i64 0, i32 4), align 4
  %256 = icmp eq i32 %255, %4
  br i1 %256, label %260, label %257

257:                                              ; preds = %254
  %258 = load i32, i32* @sbss.4, align 8
  %259 = icmp eq i32 %258, %4
  br i1 %259, label %260, label %264

260:                                              ; preds = %257, %254, %251, %240
  %261 = phi i32 [ -8, %257 ], [ -6, %254 ], [ -4, %251 ], [ -2, %240 ]
  %262 = getelementptr inbounds i8, i8* %241, i64 12
  %263 = bitcast i8* %262 to i32*
  store i32 %261, i32* %263, align 4
  br label %273

264:                                              ; preds = %257
  %265 = load %struct.RAA*, %struct.RAA** @bsym, align 8
  %266 = sext i32 %4 to i64
  %267 = tail call i64 @raa_read(%struct.RAA* %265, i64 %266) #7
  %268 = trunc i64 %267 to i32
  %269 = getelementptr inbounds i8, i8* %241, i64 12
  %270 = bitcast i8* %269 to i32*
  store i32 %268, i32* %270, align 4
  %271 = icmp sgt i32 %268, -1
  %272 = select i1 %271, i32 9, i32 1
  br label %273

273:                                              ; preds = %260, %264
  %274 = phi i32 [ 1, %260 ], [ %272, %264 ]
  %275 = getelementptr inbounds i8, i8* %241, i64 20
  %276 = bitcast i8* %275 to i32*
  store i32 %274, i32* %276, align 4
  %277 = getelementptr inbounds i8, i8* %241, i64 16
  %278 = bitcast i8* %277 to i32*
  store i32 2, i32* %278, align 8
  %279 = getelementptr inbounds %struct.Section, %struct.Section* %26, i64 0, i32 3
  %280 = load i32, i32* %279, align 8
  %281 = add i32 %280, 1
  store i32 %281, i32* %279, align 8
  br label %345

282:                                              ; preds = %238
  %283 = load i1, i1* @bsd, align 4
  br i1 %283, label %285, label %284

284:                                              ; preds = %282
  tail call void (i8*, ...) @nasm_nonfatal(i8* getelementptr inbounds ([51 x i8], [51 x i8]* @.str.11, i64 0, i64 0)) #7
  br label %345

285:                                              ; preds = %282
  %286 = load i32, i32* @aout_plt_sect, align 4
  %287 = add nsw i32 %286, 1
  %288 = icmp eq i32 %287, %5
  br i1 %288, label %289, label %331

289:                                              ; preds = %285
  store i1 true, i1* @is_pic, align 4
  %290 = tail call noalias i8* @nasm_malloc(i64 24) #8
  %291 = getelementptr inbounds %struct.Section, %struct.Section* %26, i64 0, i32 6
  %292 = bitcast %struct.Reloc*** %291 to i8***
  %293 = load i8**, i8*** %292, align 8
  store i8* %290, i8** %293, align 8
  %294 = bitcast i8* %290 to %struct.Reloc**
  %295 = bitcast %struct.Reloc*** %291 to i8**
  store i8* %290, i8** %295, align 8
  store %struct.Reloc* null, %struct.Reloc** %294, align 8
  %296 = getelementptr inbounds %struct.Section, %struct.Section* %26, i64 0, i32 1
  %297 = load i32, i32* %296, align 8
  %298 = getelementptr inbounds i8, i8* %290, i64 8
  %299 = bitcast i8* %298 to i32*
  store i32 %297, i32* %299, align 8
  br i1 %233, label %309, label %300

300:                                              ; preds = %289
  %301 = load i32, i32* getelementptr inbounds (%struct.Section, %struct.Section* @stext, i64 0, i32 4), align 4
  %302 = icmp eq i32 %301, %4
  br i1 %302, label %309, label %303

303:                                              ; preds = %300
  %304 = load i32, i32* getelementptr inbounds (%struct.Section, %struct.Section* @sdata, i64 0, i32 4), align 4
  %305 = icmp eq i32 %304, %4
  br i1 %305, label %309, label %306

306:                                              ; preds = %303
  %307 = load i32, i32* @sbss.4, align 8
  %308 = icmp eq i32 %307, %4
  br i1 %308, label %309, label %313

309:                                              ; preds = %306, %303, %300, %289
  %310 = phi i32 [ -8, %306 ], [ -6, %303 ], [ -4, %300 ], [ -2, %289 ]
  %311 = getelementptr inbounds i8, i8* %290, i64 12
  %312 = bitcast i8* %311 to i32*
  store i32 %310, i32* %312, align 4
  br label %322

313:                                              ; preds = %306
  %314 = load %struct.RAA*, %struct.RAA** @bsym, align 8
  %315 = sext i32 %4 to i64
  %316 = tail call i64 @raa_read(%struct.RAA* %314, i64 %315) #7
  %317 = trunc i64 %316 to i32
  %318 = getelementptr inbounds i8, i8* %290, i64 12
  %319 = bitcast i8* %318 to i32*
  store i32 %317, i32* %319, align 4
  %320 = icmp sgt i32 %317, -1
  %321 = select i1 %320, i32 41, i32 33
  br label %322

322:                                              ; preds = %309, %313
  %323 = phi i32 [ 33, %309 ], [ %321, %313 ]
  %324 = getelementptr inbounds i8, i8* %290, i64 20
  %325 = bitcast i8* %324 to i32*
  store i32 %323, i32* %325, align 4
  %326 = getelementptr inbounds i8, i8* %290, i64 16
  %327 = bitcast i8* %326 to i32*
  store i32 2, i32* %327, align 8
  %328 = getelementptr inbounds %struct.Section, %struct.Section* %26, i64 0, i32 3
  %329 = load i32, i32* %328, align 8
  %330 = add i32 %329, 1
  store i32 %330, i32* %328, align 8
  br label %345

331:                                              ; preds = %285
  %332 = load i32, i32* @aout_gotpc_sect, align 4
  %333 = add nsw i32 %332, 1
  %334 = icmp eq i32 %333, %5
  br i1 %334, label %343, label %335

335:                                              ; preds = %331
  %336 = load i32, i32* @aout_gotoff_sect, align 4
  %337 = add nsw i32 %336, 1
  %338 = icmp eq i32 %337, %5
  br i1 %338, label %343, label %339

339:                                              ; preds = %335
  %340 = load i32, i32* @aout_got_sect, align 4
  %341 = add nsw i32 %340, 1
  %342 = icmp eq i32 %341, %5
  br i1 %342, label %343, label %344

343:                                              ; preds = %339, %335, %331
  tail call void (i8*, ...) @nasm_nonfatal(i8* getelementptr inbounds ([55 x i8], [55 x i8]* @.str.14, i64 0, i64 0)) #7
  br label %345

344:                                              ; preds = %339
  tail call void (i8*, ...) @nasm_nonfatal(i8* getelementptr inbounds ([46 x i8], [46 x i8]* @.str.13, i64 0, i64 0)) #7
  br label %345

345:                                              ; preds = %273, %322, %344, %343, %284, %237
  %346 = bitcast i32* %7 to i16*
  %347 = bitcast i8* %1 to i64*
  %348 = load i64, i64* %347, align 8
  %349 = getelementptr inbounds %struct.Section, %struct.Section* %26, i64 0, i32 1
  %350 = load i32, i32* %349, align 8
  %351 = zext i32 %350 to i64
  %352 = sub i64 %348, %3
  %353 = sub i64 %352, %351
  %354 = trunc i64 %353 to i16
  store i16 %354, i16* %346, align 4
  %355 = getelementptr inbounds %struct.Section, %struct.Section* %26, i64 0, i32 0
  %356 = load %struct.SAA*, %struct.SAA** %355, align 8
  call void @saa_wbytes(%struct.SAA* %356, i8* nonnull %8, i64 2) #7
  %357 = load i32, i32* %349, align 8
  %358 = add i32 %357, 2
  br label %484

359:                                              ; preds = %25
  %360 = icmp eq i32 %4, -1
  %361 = and i32 %4, 1
  %362 = icmp eq i32 %361, 0
  %363 = or i1 %360, %362
  br i1 %363, label %365, label %364

364:                                              ; preds = %359
  tail call void (i8*, ...) @nasm_nonfatal(i8* getelementptr inbounds ([54 x i8], [54 x i8]* @.str.10, i64 0, i64 0)) #7
  br label %472

365:                                              ; preds = %359
  %366 = icmp eq i32 %5, -1
  br i1 %366, label %367, label %409

367:                                              ; preds = %365
  %368 = tail call noalias i8* @nasm_malloc(i64 24) #8
  %369 = getelementptr inbounds %struct.Section, %struct.Section* %26, i64 0, i32 6
  %370 = bitcast %struct.Reloc*** %369 to i8***
  %371 = load i8**, i8*** %370, align 8
  store i8* %368, i8** %371, align 8
  %372 = bitcast i8* %368 to %struct.Reloc**
  %373 = bitcast %struct.Reloc*** %369 to i8**
  store i8* %368, i8** %373, align 8
  store %struct.Reloc* null, %struct.Reloc** %372, align 8
  %374 = getelementptr inbounds %struct.Section, %struct.Section* %26, i64 0, i32 1
  %375 = load i32, i32* %374, align 8
  %376 = getelementptr inbounds i8, i8* %368, i64 8
  %377 = bitcast i8* %376 to i32*
  store i32 %375, i32* %377, align 8
  br i1 %360, label %387, label %378

378:                                              ; preds = %367
  %379 = load i32, i32* getelementptr inbounds (%struct.Section, %struct.Section* @stext, i64 0, i32 4), align 4
  %380 = icmp eq i32 %379, %4
  br i1 %380, label %387, label %381

381:                                              ; preds = %378
  %382 = load i32, i32* getelementptr inbounds (%struct.Section, %struct.Section* @sdata, i64 0, i32 4), align 4
  %383 = icmp eq i32 %382, %4
  br i1 %383, label %387, label %384

384:                                              ; preds = %381
  %385 = load i32, i32* @sbss.4, align 8
  %386 = icmp eq i32 %385, %4
  br i1 %386, label %387, label %391

387:                                              ; preds = %384, %381, %378, %367
  %388 = phi i32 [ -8, %384 ], [ -6, %381 ], [ -4, %378 ], [ -2, %367 ]
  %389 = getelementptr inbounds i8, i8* %368, i64 12
  %390 = bitcast i8* %389 to i32*
  store i32 %388, i32* %390, align 4
  br label %400

391:                                              ; preds = %384
  %392 = load %struct.RAA*, %struct.RAA** @bsym, align 8
  %393 = sext i32 %4 to i64
  %394 = tail call i64 @raa_read(%struct.RAA* %392, i64 %393) #7
  %395 = trunc i64 %394 to i32
  %396 = getelementptr inbounds i8, i8* %368, i64 12
  %397 = bitcast i8* %396 to i32*
  store i32 %395, i32* %397, align 4
  %398 = icmp sgt i32 %395, -1
  %399 = select i1 %398, i32 9, i32 1
  br label %400

400:                                              ; preds = %387, %391
  %401 = phi i32 [ 1, %387 ], [ %399, %391 ]
  %402 = getelementptr inbounds i8, i8* %368, i64 20
  %403 = bitcast i8* %402 to i32*
  store i32 %401, i32* %403, align 4
  %404 = getelementptr inbounds i8, i8* %368, i64 16
  %405 = bitcast i8* %404 to i32*
  store i32 4, i32* %405, align 8
  %406 = getelementptr inbounds %struct.Section, %struct.Section* %26, i64 0, i32 3
  %407 = load i32, i32* %406, align 8
  %408 = add i32 %407, 1
  store i32 %408, i32* %406, align 8
  br label %472

409:                                              ; preds = %365
  %410 = load i1, i1* @bsd, align 4
  br i1 %410, label %412, label %411

411:                                              ; preds = %409
  tail call void (i8*, ...) @nasm_nonfatal(i8* getelementptr inbounds ([51 x i8], [51 x i8]* @.str.11, i64 0, i64 0)) #7
  br label %472

412:                                              ; preds = %409
  %413 = load i32, i32* @aout_plt_sect, align 4
  %414 = add nsw i32 %413, 1
  %415 = icmp eq i32 %414, %5
  br i1 %415, label %416, label %458

416:                                              ; preds = %412
  store i1 true, i1* @is_pic, align 4
  %417 = tail call noalias i8* @nasm_malloc(i64 24) #8
  %418 = getelementptr inbounds %struct.Section, %struct.Section* %26, i64 0, i32 6
  %419 = bitcast %struct.Reloc*** %418 to i8***
  %420 = load i8**, i8*** %419, align 8
  store i8* %417, i8** %420, align 8
  %421 = bitcast i8* %417 to %struct.Reloc**
  %422 = bitcast %struct.Reloc*** %418 to i8**
  store i8* %417, i8** %422, align 8
  store %struct.Reloc* null, %struct.Reloc** %421, align 8
  %423 = getelementptr inbounds %struct.Section, %struct.Section* %26, i64 0, i32 1
  %424 = load i32, i32* %423, align 8
  %425 = getelementptr inbounds i8, i8* %417, i64 8
  %426 = bitcast i8* %425 to i32*
  store i32 %424, i32* %426, align 8
  br i1 %360, label %436, label %427

427:                                              ; preds = %416
  %428 = load i32, i32* getelementptr inbounds (%struct.Section, %struct.Section* @stext, i64 0, i32 4), align 4
  %429 = icmp eq i32 %428, %4
  br i1 %429, label %436, label %430

430:                                              ; preds = %427
  %431 = load i32, i32* getelementptr inbounds (%struct.Section, %struct.Section* @sdata, i64 0, i32 4), align 4
  %432 = icmp eq i32 %431, %4
  br i1 %432, label %436, label %433

433:                                              ; preds = %430
  %434 = load i32, i32* @sbss.4, align 8
  %435 = icmp eq i32 %434, %4
  br i1 %435, label %436, label %440

436:                                              ; preds = %433, %430, %427, %416
  %437 = phi i32 [ -8, %433 ], [ -6, %430 ], [ -4, %427 ], [ -2, %416 ]
  %438 = getelementptr inbounds i8, i8* %417, i64 12
  %439 = bitcast i8* %438 to i32*
  store i32 %437, i32* %439, align 4
  br label %449

440:                                              ; preds = %433
  %441 = load %struct.RAA*, %struct.RAA** @bsym, align 8
  %442 = sext i32 %4 to i64
  %443 = tail call i64 @raa_read(%struct.RAA* %441, i64 %442) #7
  %444 = trunc i64 %443 to i32
  %445 = getelementptr inbounds i8, i8* %417, i64 12
  %446 = bitcast i8* %445 to i32*
  store i32 %444, i32* %446, align 4
  %447 = icmp sgt i32 %444, -1
  %448 = select i1 %447, i32 41, i32 33
  br label %449

449:                                              ; preds = %436, %440
  %450 = phi i32 [ 33, %436 ], [ %448, %440 ]
  %451 = getelementptr inbounds i8, i8* %417, i64 20
  %452 = bitcast i8* %451 to i32*
  store i32 %450, i32* %452, align 4
  %453 = getelementptr inbounds i8, i8* %417, i64 16
  %454 = bitcast i8* %453 to i32*
  store i32 4, i32* %454, align 8
  %455 = getelementptr inbounds %struct.Section, %struct.Section* %26, i64 0, i32 3
  %456 = load i32, i32* %455, align 8
  %457 = add i32 %456, 1
  store i32 %457, i32* %455, align 8
  br label %472

458:                                              ; preds = %412
  %459 = load i32, i32* @aout_gotpc_sect, align 4
  %460 = add nsw i32 %459, 1
  %461 = icmp eq i32 %460, %5
  br i1 %461, label %470, label %462

462:                                              ; preds = %458
  %463 = load i32, i32* @aout_gotoff_sect, align 4
  %464 = add nsw i32 %463, 1
  %465 = icmp eq i32 %464, %5
  br i1 %465, label %470, label %466

466:                                              ; preds = %462
  %467 = load i32, i32* @aout_got_sect, align 4
  %468 = add nsw i32 %467, 1
  %469 = icmp eq i32 %468, %5
  br i1 %469, label %470, label %471

470:                                              ; preds = %466, %462, %458
  tail call void (i8*, ...) @nasm_nonfatal(i8* getelementptr inbounds ([55 x i8], [55 x i8]* @.str.14, i64 0, i64 0)) #7
  br label %472

471:                                              ; preds = %466
  tail call void (i8*, ...) @nasm_nonfatal(i8* getelementptr inbounds ([46 x i8], [46 x i8]* @.str.13, i64 0, i64 0)) #7
  br label %472

472:                                              ; preds = %400, %449, %471, %470, %411, %364
  %473 = bitcast i8* %1 to i64*
  %474 = load i64, i64* %473, align 8
  %475 = getelementptr inbounds %struct.Section, %struct.Section* %26, i64 0, i32 1
  %476 = load i32, i32* %475, align 8
  %477 = sub i64 %474, %3
  %478 = trunc i64 %477 to i32
  %479 = sub i32 %478, %476
  store i32 %479, i32* %7, align 4
  %480 = getelementptr inbounds %struct.Section, %struct.Section* %26, i64 0, i32 0
  %481 = load %struct.SAA*, %struct.SAA** %480, align 8
  call void @saa_wbytes(%struct.SAA* %481, i8* nonnull %8, i64 4) #7
  %482 = load i32, i32* %475, align 8
  %483 = add i32 %482, 4
  br label %484

484:                                              ; preds = %20, %42, %345, %472, %225, %27, %38
  %485 = phi i32* [ @sbss.1, %38 ], [ %35, %27 ], [ %229, %225 ], [ %475, %472 ], [ %349, %345 ], [ %47, %42 ], [ @sbss.1, %20 ]
  %486 = phi i32 [ %41, %38 ], [ %37, %27 ], [ %231, %225 ], [ %483, %472 ], [ %358, %345 ], [ %49, %42 ], [ %24, %20 ]
  store i32 %486, i32* %485, align 8
  br label %487

487:                                              ; preds = %484, %25
  call void @llvm.lifetime.end.p0i8(i64 4, i8* nonnull %8) #7
  ret void
}

; Function Attrs: nounwind ssp uwtable
define internal void @aout_deflabel(i8*, i32, i64, i32, i8*) #0 {
  %6 = alloca %struct.tokenval, align 8
  %7 = alloca %struct.tokenval, align 8
  %8 = alloca i32, align 4
  %9 = load i32, i32* @strslen, align 4
  %10 = add i32 %9, 4
  %11 = load i8, i8* %0, align 1
  %12 = icmp eq i8 %11, 46
  br i1 %12, label %13, label %37

13:                                               ; preds = %5
  %14 = getelementptr inbounds i8, i8* %0, i64 1
  %15 = load i8, i8* %14, align 1
  %16 = icmp eq i8 %15, 46
  br i1 %16, label %17, label %37

17:                                               ; preds = %13
  %18 = getelementptr inbounds i8, i8* %0, i64 2
  %19 = load i8, i8* %18, align 1
  %20 = icmp eq i8 %19, 64
  br i1 %20, label %37, label %21

21:                                               ; preds = %17
  %22 = tail call i32 @strcmp(i8* %0, i8* getelementptr inbounds ([8 x i8], [8 x i8]* @.str.17, i64 0, i64 0)) #9
  %23 = icmp eq i32 %22, 0
  br i1 %23, label %277, label %24

24:                                               ; preds = %21
  %25 = tail call i32 @strcmp(i8* %0, i8* getelementptr inbounds ([9 x i8], [9 x i8]* @.str.18, i64 0, i64 0)) #9
  %26 = icmp eq i32 %25, 0
  br i1 %26, label %277, label %27

27:                                               ; preds = %24
  %28 = tail call i32 @strcmp(i8* %0, i8* getelementptr inbounds ([6 x i8], [6 x i8]* @.str.19, i64 0, i64 0)) #9
  %29 = icmp eq i32 %28, 0
  br i1 %29, label %277, label %30

30:                                               ; preds = %27
  %31 = tail call i32 @strcmp(i8* %0, i8* getelementptr inbounds ([6 x i8], [6 x i8]* @.str.20, i64 0, i64 0)) #9
  %32 = icmp eq i32 %31, 0
  br i1 %32, label %277, label %33

33:                                               ; preds = %30
  %34 = tail call i32 @strcmp(i8* %0, i8* getelementptr inbounds ([6 x i8], [6 x i8]* @.str.21, i64 0, i64 0)) #9
  %35 = icmp eq i32 %34, 0
  br i1 %35, label %277, label %36

36:                                               ; preds = %33
  tail call void (i8*, ...) @nasm_nonfatal(i8* getelementptr inbounds ([33 x i8], [33 x i8]* @.str.22, i64 0, i64 0), i8* %0) #7
  br label %277

37:                                               ; preds = %17, %13, %5
  %38 = icmp eq i32 %3, 3
  br i1 %38, label %39, label %84

39:                                               ; preds = %37
  %40 = load %struct.Symbol*, %struct.Symbol** @fwds, align 8
  %41 = icmp eq %struct.Symbol* %40, null
  br i1 %41, label %277, label %42

42:                                               ; preds = %39
  %43 = getelementptr inbounds %struct.Symbol, %struct.Symbol* %40, i64 0, i32 7
  %44 = load i8*, i8** %43, align 8
  %45 = tail call i32 @strcmp(i8* %44, i8* %0) #9
  %46 = icmp eq i32 %45, 0
  br i1 %46, label %59, label %47

47:                                               ; preds = %42, %52
  %48 = phi %struct.Symbol* [ %50, %52 ], [ %40, %42 ]
  %49 = getelementptr inbounds %struct.Symbol, %struct.Symbol* %48, i64 0, i32 6
  %50 = load %struct.Symbol*, %struct.Symbol** %49, align 8
  %51 = icmp eq %struct.Symbol* %50, null
  br i1 %51, label %277, label %52

52:                                               ; preds = %47
  %53 = getelementptr inbounds %struct.Symbol, %struct.Symbol* %50, i64 0, i32 7
  %54 = load i8*, i8** %53, align 8
  %55 = tail call i32 @strcmp(i8* %54, i8* %0) #9
  %56 = icmp eq i32 %55, 0
  br i1 %56, label %57, label %47

57:                                               ; preds = %52
  %58 = getelementptr inbounds %struct.Symbol, %struct.Symbol* %48, i64 0, i32 6
  br label %59

59:                                               ; preds = %57, %42
  %60 = phi %struct.Symbol** [ @fwds, %42 ], [ %58, %57 ]
  %61 = bitcast %struct.tokenval* %6 to i8*
  call void @llvm.lifetime.start.p0i8(i64 32, i8* nonnull %61) #7
  call void @llvm.memset.p0i8.i64(i8* nonnull align 8 %61, i8 -86, i64 32, i1 false)
  %62 = tail call i8* @nasm_skip_word(i8* %4) #7
  %63 = tail call i8* @nasm_skip_spaces(i8* %62) #7
  tail call void @stdscan_reset() #7
  tail call void @stdscan_set(i8* %63) #7
  %64 = getelementptr inbounds %struct.tokenval, %struct.tokenval* %6, i64 0, i32 3
  store i32 -1, i32* %64, align 8
  %65 = call %struct.expr* @evaluate(i32 (i8*, %struct.tokenval*)* nonnull @stdscan, i8* null, %struct.tokenval* nonnull %6, i32* null, i1 zeroext true, %struct.eval_hints* null) #7
  %66 = icmp eq %struct.expr* %65, null
  br i1 %66, label %75, label %67

67:                                               ; preds = %59
  %68 = call zeroext i1 @is_simple(%struct.expr* nonnull %65) #7
  br i1 %68, label %70, label %69

69:                                               ; preds = %67
  call void (i8*, ...) @nasm_nonfatal(i8* getelementptr inbounds ([49 x i8], [49 x i8]* @.str.23, i64 0, i64 0)) #7
  br label %75

70:                                               ; preds = %67
  %71 = call i64 @reloc_value(%struct.expr* nonnull %65) #7
  %72 = trunc i64 %71 to i32
  %73 = load %struct.Symbol*, %struct.Symbol** %60, align 8
  %74 = getelementptr inbounds %struct.Symbol, %struct.Symbol* %73, i64 0, i32 3
  store i32 %72, i32* %74, align 4
  br label %75

75:                                               ; preds = %59, %69, %70
  %76 = load %struct.Symbol*, %struct.Symbol** %60, align 8
  %77 = getelementptr inbounds %struct.Symbol, %struct.Symbol* %76, i64 0, i32 7
  %78 = load i8*, i8** %77, align 8
  call void @nasm_free(i8* %78) #7
  %79 = load %struct.Symbol*, %struct.Symbol** %60, align 8
  %80 = getelementptr inbounds %struct.Symbol, %struct.Symbol* %79, i64 0, i32 6
  %81 = bitcast %struct.Symbol** %80 to i64*
  %82 = load i64, i64* %81, align 8
  %83 = bitcast %struct.Symbol** %60 to i64*
  store i64 %82, i64* %83, align 8
  call void @llvm.lifetime.end.p0i8(i64 32, i8* nonnull %61) #7
  br label %277

84:                                               ; preds = %37
  %85 = load %struct.SAA*, %struct.SAA** @strs, align 8
  %86 = tail call i64 @strlen(i8* %0) #9
  %87 = shl i64 %86, 32
  %88 = add i64 %87, 4294967296
  %89 = ashr exact i64 %88, 32
  tail call void @saa_wbytes(%struct.SAA* %85, i8* %0, i64 %89) #7
  %90 = tail call i64 @strlen(i8* %0) #9
  %91 = load i32, i32* @strslen, align 4
  %92 = trunc i64 %90 to i32
  %93 = add i32 %92, 1
  %94 = add i32 %93, %91
  store i32 %94, i32* @strslen, align 4
  %95 = load %struct.SAA*, %struct.SAA** @syms, align 8
  %96 = tail call i8* @saa_wstruct(%struct.SAA* %95) #7
  %97 = bitcast i8* %96 to i32*
  store i32 %10, i32* %97, align 8
  %98 = icmp ne i32 %3, 0
  %99 = zext i1 %98 to i32
  %100 = getelementptr inbounds i8, i8* %96, i64 4
  %101 = bitcast i8* %100 to i32*
  store i32 %99, i32* %101, align 4
  %102 = getelementptr inbounds i8, i8* %96, i64 16
  %103 = bitcast i8* %102 to i32*
  store i32 %1, i32* %103, align 8
  %104 = icmp eq i32 %1, -1
  br i1 %104, label %105, label %107

105:                                              ; preds = %84
  %106 = or i32 %99, 2
  store i32 %106, i32* %101, align 4
  br label %147

107:                                              ; preds = %84
  %108 = load i32, i32* getelementptr inbounds (%struct.Section, %struct.Section* @stext, i64 0, i32 4), align 4
  %109 = icmp eq i32 %108, %1
  br i1 %109, label %110, label %120

110:                                              ; preds = %107
  %111 = or i32 %99, 4
  store i32 %111, i32* %101, align 4
  br i1 %98, label %112, label %116

112:                                              ; preds = %110
  %113 = load i64, i64* bitcast (%struct.Symbol** getelementptr inbounds (%struct.Section, %struct.Section* @stext, i64 0, i32 7) to i64*), align 8
  %114 = getelementptr inbounds i8, i8* %96, i64 24
  %115 = bitcast i8* %114 to i64*
  store i64 %113, i64* %115, align 8
  store i8* %96, i8** bitcast (%struct.Symbol** getelementptr inbounds (%struct.Section, %struct.Section* @stext, i64 0, i32 7) to i8**), align 8
  br label %147

116:                                              ; preds = %110
  %117 = load %struct.Symbol*, %struct.Symbol** getelementptr inbounds (%struct.Section, %struct.Section* @stext, i64 0, i32 8), align 8
  %118 = icmp eq %struct.Symbol* %117, null
  br i1 %118, label %119, label %151

119:                                              ; preds = %116
  store i8* %96, i8** bitcast (%struct.Symbol** getelementptr inbounds (%struct.Section, %struct.Section* @stext, i64 0, i32 8) to i8**), align 8
  br label %151

120:                                              ; preds = %107
  %121 = load i32, i32* getelementptr inbounds (%struct.Section, %struct.Section* @sdata, i64 0, i32 4), align 4
  %122 = icmp eq i32 %121, %1
  br i1 %122, label %123, label %133

123:                                              ; preds = %120
  %124 = or i32 %99, 6
  store i32 %124, i32* %101, align 4
  br i1 %98, label %125, label %129

125:                                              ; preds = %123
  %126 = load i64, i64* bitcast (%struct.Symbol** getelementptr inbounds (%struct.Section, %struct.Section* @sdata, i64 0, i32 7) to i64*), align 8
  %127 = getelementptr inbounds i8, i8* %96, i64 24
  %128 = bitcast i8* %127 to i64*
  store i64 %126, i64* %128, align 8
  store i8* %96, i8** bitcast (%struct.Symbol** getelementptr inbounds (%struct.Section, %struct.Section* @sdata, i64 0, i32 7) to i8**), align 8
  br label %147

129:                                              ; preds = %123
  %130 = load %struct.Symbol*, %struct.Symbol** getelementptr inbounds (%struct.Section, %struct.Section* @sdata, i64 0, i32 8), align 8
  %131 = icmp eq %struct.Symbol* %130, null
  br i1 %131, label %132, label %151

132:                                              ; preds = %129
  store i8* %96, i8** bitcast (%struct.Symbol** getelementptr inbounds (%struct.Section, %struct.Section* @sdata, i64 0, i32 8) to i8**), align 8
  br label %151

133:                                              ; preds = %120
  %134 = load i32, i32* @sbss.4, align 8
  %135 = icmp eq i32 %134, %1
  br i1 %135, label %136, label %146

136:                                              ; preds = %133
  %137 = or i32 %99, 8
  store i32 %137, i32* %101, align 4
  br i1 %98, label %138, label %142

138:                                              ; preds = %136
  %139 = load i64, i64* bitcast (%struct.Symbol** @sbss.7 to i64*), align 8
  %140 = getelementptr inbounds i8, i8* %96, i64 24
  %141 = bitcast i8* %140 to i64*
  store i64 %139, i64* %141, align 8
  store i8* %96, i8** bitcast (%struct.Symbol** @sbss.7 to i8**), align 8
  br label %147

142:                                              ; preds = %136
  %143 = load %struct.Symbol*, %struct.Symbol** @sbss.8, align 8
  %144 = icmp eq %struct.Symbol* %143, null
  br i1 %144, label %145, label %151

145:                                              ; preds = %142
  store i8* %96, i8** bitcast (%struct.Symbol** @sbss.8 to i8**), align 8
  br label %151

146:                                              ; preds = %133
  store i32 1, i32* %101, align 4
  br label %147

147:                                              ; preds = %112, %146, %138, %125, %105
  %148 = icmp eq i32 %3, 2
  br i1 %148, label %149, label %151

149:                                              ; preds = %147
  %150 = trunc i64 %2 to i32
  br label %156

151:                                              ; preds = %132, %145, %119, %142, %129, %116, %147
  %152 = load i32, i32* %101, align 4
  %153 = icmp eq i32 %152, 1
  %154 = trunc i64 %2 to i32
  %155 = select i1 %153, i32 0, i32 %154
  br label %156

156:                                              ; preds = %151, %149
  %157 = phi i32 [ %155, %151 ], [ %150, %149 ]
  %158 = getelementptr inbounds i8, i8* %96, i64 8
  %159 = bitcast i8* %158 to i32*
  store i32 %157, i32* %159, align 8
  br i1 %98, label %160, label %245

160:                                              ; preds = %156
  %161 = load i32, i32* %101, align 4
  %162 = icmp ne i32 %161, 1
  %163 = icmp ne i8* %4, null
  %164 = and i1 %163, %162
  br i1 %164, label %165, label %245

165:                                              ; preds = %160
  %166 = tail call i64 @strcspn(i8* nonnull %4, i8* getelementptr inbounds ([2 x i8], [2 x i8]* @.str.24, i64 0, i64 0)) #9
  %167 = trunc i64 %166 to i32
  %168 = shl i64 %166, 32
  %169 = ashr exact i64 %168, 32
  %170 = tail call i32 @strncasecmp(i8* nonnull %4, i8* getelementptr inbounds ([9 x i8], [9 x i8]* @.str.25, i64 0, i64 0), i64 %169) #9
  %171 = icmp eq i32 %170, 0
  br i1 %171, label %172, label %174

172:                                              ; preds = %165
  %173 = or i32 %161, 512
  store i32 %173, i32* %101, align 4
  br label %183

174:                                              ; preds = %165
  %175 = tail call i32 @strncasecmp(i8* nonnull %4, i8* getelementptr inbounds ([5 x i8], [5 x i8]* @.str.9, i64 0, i64 0), i64 %169) #9
  %176 = icmp eq i32 %175, 0
  br i1 %176, label %180, label %177

177:                                              ; preds = %174
  %178 = tail call i32 @strncasecmp(i8* nonnull %4, i8* getelementptr inbounds ([7 x i8], [7 x i8]* @.str.26, i64 0, i64 0), i64 %169) #9
  %179 = icmp eq i32 %178, 0
  br i1 %179, label %180, label %182

180:                                              ; preds = %177, %174
  %181 = or i32 %161, 256
  store i32 %181, i32* %101, align 4
  br label %183

182:                                              ; preds = %177
  tail call void (i8*, ...) @nasm_nonfatal(i8* getelementptr inbounds ([32 x i8], [32 x i8]* @.str.27, i64 0, i64 0), i32 %167, i8* nonnull %4) #7
  br label %183

183:                                              ; preds = %180, %182, %172
  %184 = getelementptr inbounds i8, i8* %4, i64 %169
  %185 = load i8, i8* %184, align 1
  %186 = icmp eq i8 %185, 0
  br i1 %186, label %245, label %187

187:                                              ; preds = %183
  %188 = bitcast %struct.tokenval* %7 to i8*
  call void @llvm.lifetime.start.p0i8(i64 32, i8* nonnull %188) #7
  call void @llvm.memset.p0i8.i64(i8* nonnull align 8 %188, i8 -86, i64 32, i1 false)
  %189 = bitcast i32* %8 to i8*
  call void @llvm.lifetime.start.p0i8(i64 4, i8* nonnull %189) #7
  store i32 0, i32* %8, align 4
  %190 = tail call i8* @stdscan_get() #7
  %191 = load i1, i1* @bsd, align 4
  br i1 %191, label %192, label %204

192:                                              ; preds = %187
  %193 = load i8, i8* %184, align 1
  %194 = icmp eq i8 %193, 0
  br i1 %194, label %219, label %195

195:                                              ; preds = %192
  %196 = zext i8 %193 to i64
  %197 = getelementptr inbounds [256 x i16], [256 x i16]* @nasm_ctype_tab, i64 0, i64 %196
  %198 = load i16, i16* %197, align 2
  %199 = and i16 %198, 2
  %200 = icmp eq i16 %199, 0
  br i1 %200, label %219, label %201

201:                                              ; preds = %195
  %202 = shl i64 %166, 32
  %203 = ashr exact i64 %202, 32
  br label %205

204:                                              ; preds = %187
  tail call void (i8*, ...) @nasm_nonfatal(i8* getelementptr inbounds ([53 x i8], [53 x i8]* @.str.29, i64 0, i64 0)) #7
  br label %244

205:                                              ; preds = %201, %211
  %206 = phi i64 [ %203, %201 ], [ %207, %211 ]
  %207 = add i64 %206, 1
  %208 = getelementptr inbounds i8, i8* %4, i64 %207
  %209 = load i8, i8* %208, align 1
  %210 = icmp eq i8 %209, 0
  br i1 %210, label %217, label %211

211:                                              ; preds = %205
  %212 = zext i8 %209 to i64
  %213 = getelementptr inbounds [256 x i16], [256 x i16]* @nasm_ctype_tab, i64 0, i64 %212
  %214 = load i16, i16* %213, align 2
  %215 = and i16 %214, 2
  %216 = icmp eq i16 %215, 0
  br i1 %216, label %217, label %205

217:                                              ; preds = %205, %211
  %218 = getelementptr inbounds i8, i8* %4, i64 %207
  br label %219

219:                                              ; preds = %217, %195, %192
  %220 = phi i8* [ %184, %192 ], [ %184, %195 ], [ %218, %217 ]
  %221 = load i32, i32* %101, align 4
  %222 = or i32 %221, 16384
  store i32 %222, i32* %101, align 4
  tail call void @stdscan_reset() #7
  tail call void @stdscan_set(i8* %220) #7
  %223 = getelementptr inbounds %struct.tokenval, %struct.tokenval* %7, i64 0, i32 3
  store i32 -1, i32* %223, align 8
  %224 = call %struct.expr* @evaluate(i32 (i8*, %struct.tokenval*)* nonnull @stdscan, i8* null, %struct.tokenval* nonnull %7, i32* nonnull %8, i1 zeroext false, %struct.eval_hints* null) #7
  %225 = load i32, i32* %8, align 4
  %226 = icmp eq i32 %225, 0
  br i1 %226, label %234, label %227

227:                                              ; preds = %219
  %228 = load i64, i64* bitcast (%struct.Symbol** @fwds to i64*), align 8
  %229 = getelementptr inbounds i8, i8* %96, i64 32
  %230 = bitcast i8* %229 to i64*
  store i64 %228, i64* %230, align 8
  store i8* %96, i8** bitcast (%struct.Symbol** @fwds to i8**), align 8
  %231 = call noalias i8* @nasm_strdup(i8* %0) #7
  %232 = getelementptr inbounds i8, i8* %96, i64 40
  %233 = bitcast i8* %232 to i8**
  store i8* %231, i8** %233, align 8
  br label %244

234:                                              ; preds = %219
  %235 = icmp eq %struct.expr* %224, null
  br i1 %235, label %244, label %236

236:                                              ; preds = %234
  %237 = call zeroext i1 @is_simple(%struct.expr* nonnull %224) #7
  br i1 %237, label %239, label %238

238:                                              ; preds = %236
  call void (i8*, ...) @nasm_nonfatal(i8* getelementptr inbounds ([49 x i8], [49 x i8]* @.str.23, i64 0, i64 0)) #7
  br label %244

239:                                              ; preds = %236
  %240 = call i64 @reloc_value(%struct.expr* nonnull %224) #7
  %241 = trunc i64 %240 to i32
  %242 = getelementptr inbounds i8, i8* %96, i64 12
  %243 = bitcast i8* %242 to i32*
  store i32 %241, i32* %243, align 4
  br label %244

244:                                              ; preds = %234, %227, %238, %239, %204
  call void @stdscan_set(i8* %190) #7
  call void @llvm.lifetime.end.p0i8(i64 4, i8* nonnull %189) #7
  call void @llvm.lifetime.end.p0i8(i64 32, i8* nonnull %188) #7
  br label %245

245:                                              ; preds = %244, %183, %160, %156
  %246 = phi i32 [ 0, %160 ], [ 0, %156 ], [ 1, %183 ], [ 1, %244 ]
  %247 = load i32, i32* getelementptr inbounds (%struct.Section, %struct.Section* @stext, i64 0, i32 4), align 4
  %248 = icmp eq i32 %247, %1
  %249 = or i1 %104, %248
  %250 = load i32, i32* getelementptr inbounds (%struct.Section, %struct.Section* @sdata, i64 0, i32 4), align 4
  %251 = icmp eq i32 %250, %1
  %252 = or i1 %249, %251
  %253 = load i32, i32* @sbss.4, align 8
  %254 = icmp eq i32 %253, %1
  %255 = or i1 %252, %254
  br i1 %255, label %262, label %256

256:                                              ; preds = %245
  %257 = load %struct.RAA*, %struct.RAA** @bsym, align 8
  %258 = sext i32 %1 to i64
  %259 = load i32, i32* @nsyms, align 4
  %260 = zext i32 %259 to i64
  %261 = call %struct.RAA* @raa_write(%struct.RAA* %257, i64 %258, i64 %260) #7
  store %struct.RAA* %261, %struct.RAA** @bsym, align 8
  br label %262

262:                                              ; preds = %245, %256
  %263 = load i32, i32* @nsyms, align 4
  %264 = getelementptr inbounds i8, i8* %96, i64 48
  %265 = bitcast i8* %264 to i32*
  store i32 %263, i32* %265, align 8
  %266 = add i32 %263, 1
  store i32 %266, i32* @nsyms, align 4
  %267 = load i32, i32* %101, align 4
  %268 = and i32 %267, 16384
  %269 = icmp eq i32 %268, 0
  br i1 %269, label %272, label %270

270:                                              ; preds = %262
  %271 = add i32 %263, 2
  store i32 %271, i32* @nsyms, align 4
  br label %272

272:                                              ; preds = %262, %270
  %273 = icmp eq i8* %4, null
  %274 = icmp ne i32 %246, 0
  %275 = or i1 %273, %274
  br i1 %275, label %277, label %276

276:                                              ; preds = %272
  call void (i8*, ...) @nasm_nonfatal(i8* getelementptr inbounds ([42 x i8], [42 x i8]* @.str.30, i64 0, i64 0)) #7
  br label %277

277:                                              ; preds = %47, %39, %276, %272, %75, %36, %21, %24, %27, %30, %33
  ret void
}

; Function Attrs: nofree nounwind ssp uwtable
define internal i32 @aout_section_names(i8* readonly, i32* nocapture) #2 {
  %3 = icmp eq i8* %0, null
  br i1 %3, label %4, label %5

4:                                                ; preds = %2
  store i32 32, i32* %1, align 4
  br label %16

5:                                                ; preds = %2
  %6 = tail call i32 @strcmp(i8* nonnull %0, i8* getelementptr inbounds ([6 x i8], [6 x i8]* @.str.31, i64 0, i64 0)) #9
  %7 = icmp eq i32 %6, 0
  br i1 %7, label %16, label %8

8:                                                ; preds = %5
  %9 = tail call i32 @strcmp(i8* nonnull %0, i8* getelementptr inbounds ([6 x i8], [6 x i8]* @.str.32, i64 0, i64 0)) #9
  %10 = icmp eq i32 %9, 0
  br i1 %10, label %16, label %11

11:                                               ; preds = %8
  %12 = tail call i32 @strcmp(i8* nonnull %0, i8* getelementptr inbounds ([5 x i8], [5 x i8]* @.str.33, i64 0, i64 0)) #9
  %13 = icmp eq i32 %12, 0
  %14 = load i32, i32* @sbss.4, align 8
  %15 = select i1 %13, i32 %14, i32 -1
  ret i32 %15

16:                                               ; preds = %8, %5, %4
  %17 = phi i32* [ getelementptr inbounds (%struct.Section, %struct.Section* @stext, i64 0, i32 4), %4 ], [ getelementptr inbounds (%struct.Section, %struct.Section* @stext, i64 0, i32 4), %5 ], [ getelementptr inbounds (%struct.Section, %struct.Section* @sdata, i64 0, i32 4), %8 ]
  %18 = load i32, i32* %17, align 4
  ret i32 %18
}

declare void @null_sectalign(i32, i32) #1

declare i32 @null_segbase(i32) #1

declare i32 @null_directive(i32, i8*) #1

; Function Attrs: nounwind ssp uwtable
define internal void @aout_cleanup() #0 {
  %1 = load i32, i32* getelementptr inbounds (%struct.Section, %struct.Section* @stext, i64 0, i32 1), align 8
  %2 = sub nsw i32 0, %1
  %3 = and i32 %2, 3
  %4 = load %struct.SAA*, %struct.SAA** getelementptr inbounds (%struct.Section, %struct.Section* @stext, i64 0, i32 0), align 8
  %5 = zext i32 %3 to i64
  tail call void @saa_wbytes(%struct.SAA* %4, i8* getelementptr inbounds ([4 x i8], [4 x i8]* @aout_pad_sections.pad, i64 0, i64 0), i64 %5) #7
  %6 = load i32, i32* getelementptr inbounds (%struct.Section, %struct.Section* @stext, i64 0, i32 1), align 8
  %7 = add i32 %6, %3
  store i32 %7, i32* getelementptr inbounds (%struct.Section, %struct.Section* @stext, i64 0, i32 1), align 8
  %8 = load i32, i32* getelementptr inbounds (%struct.Section, %struct.Section* @sdata, i64 0, i32 1), align 8
  %9 = sub nsw i32 0, %8
  %10 = and i32 %9, 3
  %11 = load %struct.SAA*, %struct.SAA** getelementptr inbounds (%struct.Section, %struct.Section* @sdata, i64 0, i32 0), align 8
  %12 = zext i32 %10 to i64
  tail call void @saa_wbytes(%struct.SAA* %11, i8* getelementptr inbounds ([4 x i8], [4 x i8]* @aout_pad_sections.pad, i64 0, i64 0), i64 %12) #7
  %13 = load i32, i32* getelementptr inbounds (%struct.Section, %struct.Section* @sdata, i64 0, i32 1), align 8
  %14 = add i32 %13, %10
  store i32 %14, i32* getelementptr inbounds (%struct.Section, %struct.Section* @sdata, i64 0, i32 1), align 8
  %15 = load i32, i32* @sbss.1, align 8
  %16 = add i32 %15, 3
  %17 = and i32 %16, -4
  store i32 %17, i32* @sbss.1, align 8
  tail call fastcc void @aout_fixup_relocs(%struct.Section* nonnull @stext)
  tail call fastcc void @aout_fixup_relocs(%struct.Section* nonnull @sdata)
  %18 = load i1, i1* @bsd, align 4
  %19 = load i1, i1* @is_pic, align 4
  %20 = select i1 %19, i32 117540416, i32 117540352
  %21 = select i1 %18, i32 %20, i32 6553863
  %22 = load %struct._IO_FILE*, %struct._IO_FILE** @ofile, align 8
  tail call void @fwriteint32_t(i32 %21, %struct._IO_FILE* %22) #7
  %23 = load i32, i32* getelementptr inbounds (%struct.Section, %struct.Section* @stext, i64 0, i32 1), align 8
  %24 = load %struct._IO_FILE*, %struct._IO_FILE** @ofile, align 8
  tail call void @fwriteint32_t(i32 %23, %struct._IO_FILE* %24) #7
  %25 = load i32, i32* getelementptr inbounds (%struct.Section, %struct.Section* @sdata, i64 0, i32 1), align 8
  %26 = load %struct._IO_FILE*, %struct._IO_FILE** @ofile, align 8
  tail call void @fwriteint32_t(i32 %25, %struct._IO_FILE* %26) #7
  %27 = load i32, i32* @sbss.1, align 8
  %28 = load %struct._IO_FILE*, %struct._IO_FILE** @ofile, align 8
  tail call void @fwriteint32_t(i32 %27, %struct._IO_FILE* %28) #7
  %29 = load i32, i32* @nsyms, align 4
  %30 = mul i32 %29, 12
  %31 = load %struct._IO_FILE*, %struct._IO_FILE** @ofile, align 8
  tail call void @fwriteint32_t(i32 %30, %struct._IO_FILE* %31) #7
  %32 = load %struct._IO_FILE*, %struct._IO_FILE** @ofile, align 8
  tail call void @fwriteint32_t(i32 0, %struct._IO_FILE* %32) #7
  %33 = load i32, i32* getelementptr inbounds (%struct.Section, %struct.Section* @stext, i64 0, i32 3), align 8
  %34 = shl i32 %33, 3
  %35 = load %struct._IO_FILE*, %struct._IO_FILE** @ofile, align 8
  tail call void @fwriteint32_t(i32 %34, %struct._IO_FILE* %35) #7
  %36 = load i32, i32* getelementptr inbounds (%struct.Section, %struct.Section* @sdata, i64 0, i32 3), align 8
  %37 = shl i32 %36, 3
  %38 = load %struct._IO_FILE*, %struct._IO_FILE** @ofile, align 8
  tail call void @fwriteint32_t(i32 %37, %struct._IO_FILE* %38) #7
  %39 = load %struct.SAA*, %struct.SAA** getelementptr inbounds (%struct.Section, %struct.Section* @stext, i64 0, i32 0), align 8
  %40 = load %struct._IO_FILE*, %struct._IO_FILE** @ofile, align 8
  tail call void @saa_fpwrite(%struct.SAA* %39, %struct._IO_FILE* %40) #7
  %41 = load %struct.SAA*, %struct.SAA** getelementptr inbounds (%struct.Section, %struct.Section* @sdata, i64 0, i32 0), align 8
  %42 = load %struct._IO_FILE*, %struct._IO_FILE** @ofile, align 8
  tail call void @saa_fpwrite(%struct.SAA* %41, %struct._IO_FILE* %42) #7
  %43 = load %struct.Reloc*, %struct.Reloc** getelementptr inbounds (%struct.Section, %struct.Section* @stext, i64 0, i32 5), align 8
  %44 = icmp eq %struct.Reloc* %43, null
  br i1 %44, label %70, label %45

45:                                               ; preds = %0, %45
  %46 = phi %struct.Reloc* [ %68, %45 ], [ %43, %0 ]
  %47 = getelementptr inbounds %struct.Reloc, %struct.Reloc* %46, i64 0, i32 1
  %48 = load i32, i32* %47, align 8
  %49 = load %struct._IO_FILE*, %struct._IO_FILE** @ofile, align 8
  tail call void @fwriteint32_t(i32 %48, %struct._IO_FILE* %49) #7
  %50 = getelementptr inbounds %struct.Reloc, %struct.Reloc* %46, i64 0, i32 2
  %51 = load i32, i32* %50, align 4
  %52 = icmp slt i32 %51, 0
  %53 = sub nsw i32 0, %51
  %54 = select i1 %52, i32 %53, i32 %51
  %55 = getelementptr inbounds %struct.Reloc, %struct.Reloc* %46, i64 0, i32 4
  %56 = load i32, i32* %55, align 4
  %57 = shl i32 %56, 24
  %58 = or i32 %54, %57
  %59 = getelementptr inbounds %struct.Reloc, %struct.Reloc* %46, i64 0, i32 3
  %60 = load i32, i32* %59, align 8
  %61 = icmp eq i32 %60, 1
  %62 = icmp eq i32 %60, 2
  %63 = select i1 %62, i32 33554432, i32 67108864
  %64 = select i1 %61, i32 0, i32 %63
  %65 = or i32 %58, %64
  %66 = load %struct._IO_FILE*, %struct._IO_FILE** @ofile, align 8
  tail call void @fwriteint32_t(i32 %65, %struct._IO_FILE* %66) #7
  %67 = getelementptr inbounds %struct.Reloc, %struct.Reloc* %46, i64 0, i32 0
  %68 = load %struct.Reloc*, %struct.Reloc** %67, align 8
  %69 = icmp eq %struct.Reloc* %68, null
  br i1 %69, label %70, label %45

70:                                               ; preds = %45, %0
  %71 = load %struct.Reloc*, %struct.Reloc** getelementptr inbounds (%struct.Section, %struct.Section* @sdata, i64 0, i32 5), align 8
  %72 = icmp eq %struct.Reloc* %71, null
  br i1 %72, label %98, label %73

73:                                               ; preds = %70, %73
  %74 = phi %struct.Reloc* [ %96, %73 ], [ %71, %70 ]
  %75 = getelementptr inbounds %struct.Reloc, %struct.Reloc* %74, i64 0, i32 1
  %76 = load i32, i32* %75, align 8
  %77 = load %struct._IO_FILE*, %struct._IO_FILE** @ofile, align 8
  tail call void @fwriteint32_t(i32 %76, %struct._IO_FILE* %77) #7
  %78 = getelementptr inbounds %struct.Reloc, %struct.Reloc* %74, i64 0, i32 2
  %79 = load i32, i32* %78, align 4
  %80 = icmp slt i32 %79, 0
  %81 = sub nsw i32 0, %79
  %82 = select i1 %80, i32 %81, i32 %79
  %83 = getelementptr inbounds %struct.Reloc, %struct.Reloc* %74, i64 0, i32 4
  %84 = load i32, i32* %83, align 4
  %85 = shl i32 %84, 24
  %86 = or i32 %82, %85
  %87 = getelementptr inbounds %struct.Reloc, %struct.Reloc* %74, i64 0, i32 3
  %88 = load i32, i32* %87, align 8
  %89 = icmp eq i32 %88, 1
  %90 = icmp eq i32 %88, 2
  %91 = select i1 %90, i32 33554432, i32 67108864
  %92 = select i1 %89, i32 0, i32 %91
  %93 = or i32 %86, %92
  %94 = load %struct._IO_FILE*, %struct._IO_FILE** @ofile, align 8
  tail call void @fwriteint32_t(i32 %93, %struct._IO_FILE* %94) #7
  %95 = getelementptr inbounds %struct.Reloc, %struct.Reloc* %74, i64 0, i32 0
  %96 = load %struct.Reloc*, %struct.Reloc** %95, align 8
  %97 = icmp eq %struct.Reloc* %96, null
  br i1 %97, label %98, label %73

98:                                               ; preds = %73, %70
  %99 = load %struct.SAA*, %struct.SAA** @syms, align 8
  tail call void @saa_rewind(%struct.SAA* %99) #7
  %100 = load i32, i32* @nsyms, align 4
  %101 = icmp eq i32 %100, 0
  br i1 %101, label %154, label %102

102:                                              ; preds = %98, %149
  %103 = phi i32 [ %151, %149 ], [ 0, %98 ]
  %104 = load %struct.SAA*, %struct.SAA** @syms, align 8
  %105 = tail call i8* @saa_rstruct(%struct.SAA* %104) #7
  %106 = bitcast i8* %105 to i32*
  %107 = load i32, i32* %106, align 8
  %108 = load %struct._IO_FILE*, %struct._IO_FILE** @ofile, align 8
  tail call void @fwriteint32_t(i32 %107, %struct._IO_FILE* %108) #7
  %109 = getelementptr inbounds i8, i8* %105, i64 4
  %110 = bitcast i8* %109 to i32*
  %111 = load i32, i32* %110, align 4
  %112 = and i32 %111, -16385
  %113 = load %struct._IO_FILE*, %struct._IO_FILE** @ofile, align 8
  tail call void @fwriteint32_t(i32 %112, %struct._IO_FILE* %113) #7
  %114 = load i32, i32* %110, align 4
  %115 = and i32 %114, 14
  switch i32 %115, label %116 [
    i32 6, label %120
    i32 8, label %126
  ]

116:                                              ; preds = %102
  %117 = getelementptr inbounds i8, i8* %105, i64 8
  %118 = bitcast i8* %117 to i32*
  %119 = load i32, i32* %118, align 8
  br label %134

120:                                              ; preds = %102
  %121 = load i32, i32* getelementptr inbounds (%struct.Section, %struct.Section* @stext, i64 0, i32 1), align 8
  %122 = getelementptr inbounds i8, i8* %105, i64 8
  %123 = bitcast i8* %122 to i32*
  %124 = load i32, i32* %123, align 8
  %125 = add i32 %124, %121
  store i32 %125, i32* %123, align 8
  br label %134

126:                                              ; preds = %102
  %127 = load i32, i32* getelementptr inbounds (%struct.Section, %struct.Section* @stext, i64 0, i32 1), align 8
  %128 = load i32, i32* getelementptr inbounds (%struct.Section, %struct.Section* @sdata, i64 0, i32 1), align 8
  %129 = add i32 %128, %127
  %130 = getelementptr inbounds i8, i8* %105, i64 8
  %131 = bitcast i8* %130 to i32*
  %132 = load i32, i32* %131, align 8
  %133 = add i32 %129, %132
  store i32 %133, i32* %131, align 8
  br label %134

134:                                              ; preds = %126, %120, %116
  %135 = phi i32 [ %119, %116 ], [ %125, %120 ], [ %133, %126 ]
  %136 = load %struct._IO_FILE*, %struct._IO_FILE** @ofile, align 8
  tail call void @fwriteint32_t(i32 %135, %struct._IO_FILE* %136) #7
  %137 = load i32, i32* %110, align 4
  %138 = and i32 %137, 16384
  %139 = icmp eq i32 %138, 0
  br i1 %139, label %149, label %140

140:                                              ; preds = %134
  %141 = load i32, i32* %106, align 8
  %142 = load %struct._IO_FILE*, %struct._IO_FILE** @ofile, align 8
  tail call void @fwriteint32_t(i32 %141, %struct._IO_FILE* %142) #7
  %143 = load %struct._IO_FILE*, %struct._IO_FILE** @ofile, align 8
  tail call void @fwriteint32_t(i32 13, %struct._IO_FILE* %143) #7
  %144 = getelementptr inbounds i8, i8* %105, i64 12
  %145 = bitcast i8* %144 to i32*
  %146 = load i32, i32* %145, align 4
  %147 = load %struct._IO_FILE*, %struct._IO_FILE** @ofile, align 8
  tail call void @fwriteint32_t(i32 %146, %struct._IO_FILE* %147) #7
  %148 = add nuw i32 %103, 1
  br label %149

149:                                              ; preds = %140, %134
  %150 = phi i32 [ %148, %140 ], [ %103, %134 ]
  %151 = add i32 %150, 1
  %152 = load i32, i32* @nsyms, align 4
  %153 = icmp ult i32 %151, %152
  br i1 %153, label %102, label %154

154:                                              ; preds = %149, %98
  %155 = load i32, i32* @strslen, align 4
  %156 = add i32 %155, 4
  %157 = load %struct._IO_FILE*, %struct._IO_FILE** @ofile, align 8
  tail call void @fwriteint32_t(i32 %156, %struct._IO_FILE* %157) #7
  %158 = load %struct.SAA*, %struct.SAA** @strs, align 8
  %159 = load %struct._IO_FILE*, %struct._IO_FILE** @ofile, align 8
  tail call void @saa_fpwrite(%struct.SAA* %158, %struct._IO_FILE* %159) #7
  %160 = load %struct.SAA*, %struct.SAA** getelementptr inbounds (%struct.Section, %struct.Section* @stext, i64 0, i32 0), align 8
  tail call void @saa_free(%struct.SAA* %160) #7
  %161 = load %struct.Reloc*, %struct.Reloc** getelementptr inbounds (%struct.Section, %struct.Section* @stext, i64 0, i32 5), align 8
  %162 = icmp eq %struct.Reloc* %161, null
  br i1 %162, label %170, label %163

163:                                              ; preds = %154, %163
  %164 = phi %struct.Reloc* [ %168, %163 ], [ %161, %154 ]
  %165 = bitcast %struct.Reloc* %164 to i64*
  %166 = load i64, i64* %165, align 8
  store i64 %166, i64* bitcast (%struct.Reloc** getelementptr inbounds (%struct.Section, %struct.Section* @stext, i64 0, i32 5) to i64*), align 8
  %167 = bitcast %struct.Reloc* %164 to i8*
  tail call void @nasm_free(i8* nonnull %167) #7
  %168 = load %struct.Reloc*, %struct.Reloc** getelementptr inbounds (%struct.Section, %struct.Section* @stext, i64 0, i32 5), align 8
  %169 = icmp eq %struct.Reloc* %168, null
  br i1 %169, label %170, label %163

170:                                              ; preds = %163, %154
  %171 = load %struct.SAA*, %struct.SAA** getelementptr inbounds (%struct.Section, %struct.Section* @sdata, i64 0, i32 0), align 8
  tail call void @saa_free(%struct.SAA* %171) #7
  %172 = load %struct.Reloc*, %struct.Reloc** getelementptr inbounds (%struct.Section, %struct.Section* @sdata, i64 0, i32 5), align 8
  %173 = icmp eq %struct.Reloc* %172, null
  br i1 %173, label %181, label %174

174:                                              ; preds = %170, %174
  %175 = phi %struct.Reloc* [ %179, %174 ], [ %172, %170 ]
  %176 = bitcast %struct.Reloc* %175 to i64*
  %177 = load i64, i64* %176, align 8
  store i64 %177, i64* bitcast (%struct.Reloc** getelementptr inbounds (%struct.Section, %struct.Section* @sdata, i64 0, i32 5) to i64*), align 8
  %178 = bitcast %struct.Reloc* %175 to i8*
  tail call void @nasm_free(i8* nonnull %178) #7
  %179 = load %struct.Reloc*, %struct.Reloc** getelementptr inbounds (%struct.Section, %struct.Section* @sdata, i64 0, i32 5), align 8
  %180 = icmp eq %struct.Reloc* %179, null
  br i1 %180, label %181, label %174

181:                                              ; preds = %174, %170
  %182 = load %struct.SAA*, %struct.SAA** @syms, align 8
  tail call void @saa_free(%struct.SAA* %182) #7
  %183 = load %struct.RAA*, %struct.RAA** @bsym, align 8
  tail call void @raa_free(%struct.RAA* %183) #7
  %184 = load %struct.SAA*, %struct.SAA** @strs, align 8
  tail call void @saa_free(%struct.SAA* %184) #7
  ret void
}

; Function Attrs: nounwind ssp uwtable
define internal void @aoutb_init() #0 {
  store i1 true, i1* @bsd, align 4
  tail call fastcc void @aoutg_init()
  store i1 false, i1* @is_pic, align 4
  %1 = tail call i32 @seg_alloc() #7
  store i32 %1, i32* @aout_gotpc_sect, align 4
  %2 = add nsw i32 %1, 1
  tail call void @backend_label(i8* getelementptr inbounds ([8 x i8], [8 x i8]* @.str.17, i64 0, i64 0), i32 %2, i64 0) #7
  %3 = tail call i32 @seg_alloc() #7
  store i32 %3, i32* @aout_gotoff_sect, align 4
  %4 = add nsw i32 %3, 1
  tail call void @backend_label(i8* getelementptr inbounds ([9 x i8], [9 x i8]* @.str.18, i64 0, i64 0), i32 %4, i64 0) #7
  %5 = tail call i32 @seg_alloc() #7
  store i32 %5, i32* @aout_got_sect, align 4
  %6 = add nsw i32 %5, 1
  tail call void @backend_label(i8* getelementptr inbounds ([6 x i8], [6 x i8]* @.str.19, i64 0, i64 0), i32 %6, i64 0) #7
  %7 = tail call i32 @seg_alloc() #7
  store i32 %7, i32* @aout_plt_sect, align 4
  %8 = add nsw i32 %7, 1
  tail call void @backend_label(i8* getelementptr inbounds ([6 x i8], [6 x i8]* @.str.20, i64 0, i64 0), i32 %8, i64 0) #7
  %9 = tail call i32 @seg_alloc() #7
  store i32 %9, i32* @aout_sym_sect, align 4
  %10 = add nsw i32 %9, 1
  tail call void @backend_label(i8* getelementptr inbounds ([6 x i8], [6 x i8]* @.str.21, i64 0, i64 0), i32 %10, i64 0) #7
  ret void
}

; Function Attrs: nounwind ssp uwtable
define internal fastcc void @aoutg_init() unnamed_addr #0 {
  %1 = tail call %struct.SAA* @saa_init(i64 1) #7
  store %struct.SAA* %1, %struct.SAA** getelementptr inbounds (%struct.Section, %struct.Section* @stext, i64 0, i32 0), align 8
  store %struct.Reloc* null, %struct.Reloc** getelementptr inbounds (%struct.Section, %struct.Section* @stext, i64 0, i32 5), align 8
  store %struct.Reloc** getelementptr inbounds (%struct.Section, %struct.Section* @stext, i64 0, i32 5), %struct.Reloc*** getelementptr inbounds (%struct.Section, %struct.Section* @stext, i64 0, i32 6), align 8
  %2 = tail call %struct.SAA* @saa_init(i64 1) #7
  store %struct.SAA* %2, %struct.SAA** getelementptr inbounds (%struct.Section, %struct.Section* @sdata, i64 0, i32 0), align 8
  store %struct.Reloc* null, %struct.Reloc** getelementptr inbounds (%struct.Section, %struct.Section* @sdata, i64 0, i32 5), align 8
  store %struct.Reloc** getelementptr inbounds (%struct.Section, %struct.Section* @sdata, i64 0, i32 5), %struct.Reloc*** getelementptr inbounds (%struct.Section, %struct.Section* @sdata, i64 0, i32 6), align 8
  store i32 0, i32* @sbss.1, align 8
  store i32 0, i32* getelementptr inbounds (%struct.Section, %struct.Section* @sdata, i64 0, i32 2), align 4
  store i32 0, i32* getelementptr inbounds (%struct.Section, %struct.Section* @sdata, i64 0, i32 1), align 8
  store i32 0, i32* getelementptr inbounds (%struct.Section, %struct.Section* @stext, i64 0, i32 2), align 4
  store i32 0, i32* getelementptr inbounds (%struct.Section, %struct.Section* @stext, i64 0, i32 1), align 8
  store i32 0, i32* getelementptr inbounds (%struct.Section, %struct.Section* @sdata, i64 0, i32 3), align 8
  store i32 0, i32* getelementptr inbounds (%struct.Section, %struct.Section* @stext, i64 0, i32 3), align 8
  store %struct.Symbol* null, %struct.Symbol** @sbss.7, align 8
  store %struct.Symbol* null, %struct.Symbol** getelementptr inbounds (%struct.Section, %struct.Section* @sdata, i64 0, i32 7), align 8
  store %struct.Symbol* null, %struct.Symbol** getelementptr inbounds (%struct.Section, %struct.Section* @stext, i64 0, i32 7), align 8
  %3 = tail call i32 @seg_alloc() #7
  store i32 %3, i32* getelementptr inbounds (%struct.Section, %struct.Section* @stext, i64 0, i32 4), align 4
  %4 = tail call i32 @seg_alloc() #7
  store i32 %4, i32* getelementptr inbounds (%struct.Section, %struct.Section* @sdata, i64 0, i32 4), align 4
  %5 = tail call i32 @seg_alloc() #7
  store i32 %5, i32* @sbss.4, align 8
  store %struct.Symbol* null, %struct.Symbol** @sbss.8, align 8
  store %struct.Symbol* null, %struct.Symbol** getelementptr inbounds (%struct.Section, %struct.Section* @sdata, i64 0, i32 8), align 8
  store %struct.Symbol* null, %struct.Symbol** getelementptr inbounds (%struct.Section, %struct.Section* @stext, i64 0, i32 8), align 8
  %6 = tail call %struct.SAA* @saa_init(i64 56) #7
  store %struct.SAA* %6, %struct.SAA** @syms, align 8
  store i32 0, i32* @nsyms, align 4
  store %struct.RAA* null, %struct.RAA** @bsym, align 8
  %7 = tail call %struct.SAA* @saa_init(i64 1) #7
  store %struct.SAA* %7, %struct.SAA** @strs, align 8
  store i32 0, i32* @strslen, align 4
  store %struct.Symbol* null, %struct.Symbol** @fwds, align 8
  ret void
}

declare %struct.SAA* @saa_init(i64) local_unnamed_addr #1

declare i32 @seg_alloc() local_unnamed_addr #1

; Function Attrs: argmemonly nounwind
declare void @llvm.lifetime.start.p0i8(i64 immarg, i8* nocapture) #3

declare void @nasm_warn(i32, i8*, ...) local_unnamed_addr #1

declare i64 @realsize(i32, i64) local_unnamed_addr #1

; Function Attrs: argmemonly nounwind
declare void @llvm.memset.p0i8.i64(i8* nocapture writeonly, i8, i64, i1 immarg) #3

declare void @nasm_nonfatal(i8*, ...) local_unnamed_addr #1

; Function Attrs: nounwind ssp uwtable
define internal fastcc i32 @aout_add_gsym_reloc(%struct.Section* nocapture, i32, i32, i32, i32, i32) unnamed_addr #0 {
  %7 = load i32, i32* getelementptr inbounds (%struct.Section, %struct.Section* @stext, i64 0, i32 4), align 4
  %8 = icmp eq i32 %7, %1
  br i1 %8, label %17, label %9

9:                                                ; preds = %6
  %10 = load i32, i32* getelementptr inbounds (%struct.Section, %struct.Section* @sdata, i64 0, i32 4), align 4
  %11 = icmp eq i32 %10, %1
  br i1 %11, label %17, label %12

12:                                               ; preds = %9
  %13 = load i32, i32* @sbss.4, align 8
  %14 = icmp eq i32 %13, %1
  br i1 %14, label %17, label %15

15:                                               ; preds = %12
  %16 = icmp ne i32 %5, 0
  br label %22

17:                                               ; preds = %9, %6, %12
  %18 = phi %struct.Symbol** [ @sbss.7, %12 ], [ getelementptr inbounds (%struct.Section, %struct.Section* @stext, i64 0, i32 7), %6 ], [ getelementptr inbounds (%struct.Section, %struct.Section* @sdata, i64 0, i32 7), %9 ]
  %19 = load %struct.Symbol*, %struct.Symbol** %18, align 8
  %20 = icmp eq %struct.Symbol* %19, null
  %21 = icmp ne i32 %5, 0
  br i1 %20, label %22, label %71

22:                                               ; preds = %15, %17
  %23 = phi i1 [ %16, %15 ], [ %21, %17 ]
  %24 = icmp ne i32 %2, 0
  %25 = and i1 %24, %23
  br i1 %25, label %26, label %27

26:                                               ; preds = %22
  tail call void (i8*, ...) @nasm_nonfatal(i8* getelementptr inbounds ([59 x i8], [59 x i8]* @.str.16, i64 0, i64 0)) #7
  br label %131

27:                                               ; preds = %22
  %28 = tail call noalias i8* @nasm_malloc(i64 24) #8
  %29 = getelementptr inbounds %struct.Section, %struct.Section* %0, i64 0, i32 6
  %30 = bitcast %struct.Reloc*** %29 to i8***
  %31 = load i8**, i8*** %30, align 8
  store i8* %28, i8** %31, align 8
  %32 = bitcast i8* %28 to %struct.Reloc**
  %33 = bitcast %struct.Reloc*** %29 to i8**
  store i8* %28, i8** %33, align 8
  store %struct.Reloc* null, %struct.Reloc** %32, align 8
  %34 = getelementptr inbounds %struct.Section, %struct.Section* %0, i64 0, i32 1
  %35 = load i32, i32* %34, align 8
  %36 = getelementptr inbounds i8, i8* %28, i64 8
  %37 = bitcast i8* %36 to i32*
  store i32 %35, i32* %37, align 8
  %38 = icmp eq i32 %1, -1
  br i1 %38, label %48, label %39

39:                                               ; preds = %27
  %40 = load i32, i32* getelementptr inbounds (%struct.Section, %struct.Section* @stext, i64 0, i32 4), align 4
  %41 = icmp eq i32 %40, %1
  br i1 %41, label %48, label %42

42:                                               ; preds = %39
  %43 = load i32, i32* getelementptr inbounds (%struct.Section, %struct.Section* @sdata, i64 0, i32 4), align 4
  %44 = icmp eq i32 %43, %1
  br i1 %44, label %48, label %45

45:                                               ; preds = %42
  %46 = load i32, i32* @sbss.4, align 8
  %47 = icmp eq i32 %46, %1
  br i1 %47, label %48, label %52

48:                                               ; preds = %45, %42, %39, %27
  %49 = phi i32 [ -8, %45 ], [ -6, %42 ], [ -4, %39 ], [ -2, %27 ]
  %50 = getelementptr inbounds i8, i8* %28, i64 12
  %51 = bitcast i8* %50 to i32*
  store i32 %49, i32* %51, align 4
  br label %62

52:                                               ; preds = %45
  %53 = load %struct.RAA*, %struct.RAA** @bsym, align 8
  %54 = sext i32 %1 to i64
  %55 = tail call i64 @raa_read(%struct.RAA* %53, i64 %54) #7
  %56 = trunc i64 %55 to i32
  %57 = getelementptr inbounds i8, i8* %28, i64 12
  %58 = bitcast i8* %57 to i32*
  store i32 %56, i32* %58, align 4
  %59 = icmp sgt i32 %56, -1
  %60 = or i32 %3, 8
  %61 = select i1 %59, i32 %60, i32 %3
  br label %62

62:                                               ; preds = %48, %52
  %63 = phi i32 [ %3, %48 ], [ %61, %52 ]
  %64 = getelementptr inbounds i8, i8* %28, i64 20
  %65 = bitcast i8* %64 to i32*
  store i32 %63, i32* %65, align 4
  %66 = getelementptr inbounds i8, i8* %28, i64 16
  %67 = bitcast i8* %66 to i32*
  store i32 %4, i32* %67, align 8
  %68 = getelementptr inbounds %struct.Section, %struct.Section* %0, i64 0, i32 3
  %69 = load i32, i32* %68, align 8
  %70 = add i32 %69, 1
  store i32 %70, i32* %68, align 8
  br label %131

71:                                               ; preds = %17
  br i1 %21, label %72, label %81

72:                                               ; preds = %71, %77
  %73 = phi %struct.Symbol* [ %79, %77 ], [ %19, %71 ]
  %74 = getelementptr inbounds %struct.Symbol, %struct.Symbol* %73, i64 0, i32 2
  %75 = load i32, i32* %74, align 8
  %76 = icmp eq i32 %75, %2
  br i1 %76, label %104, label %77

77:                                               ; preds = %72
  %78 = getelementptr inbounds %struct.Symbol, %struct.Symbol* %73, i64 0, i32 5
  %79 = load %struct.Symbol*, %struct.Symbol** %78, align 8
  %80 = icmp eq %struct.Symbol* %79, null
  br i1 %80, label %99, label %72

81:                                               ; preds = %71, %94
  %82 = phi %struct.Symbol* [ %97, %94 ], [ %19, %71 ]
  %83 = phi %struct.Symbol* [ %95, %94 ], [ null, %71 ]
  %84 = getelementptr inbounds %struct.Symbol, %struct.Symbol* %82, i64 0, i32 2
  %85 = load i32, i32* %84, align 8
  %86 = icmp sgt i32 %85, %2
  br i1 %86, label %94, label %87

87:                                               ; preds = %81
  %88 = icmp eq %struct.Symbol* %83, null
  br i1 %88, label %93, label %89

89:                                               ; preds = %87
  %90 = getelementptr inbounds %struct.Symbol, %struct.Symbol* %83, i64 0, i32 2
  %91 = load i32, i32* %90, align 8
  %92 = icmp sgt i32 %85, %91
  br i1 %92, label %93, label %94

93:                                               ; preds = %87, %89
  br label %94

94:                                               ; preds = %81, %89, %93
  %95 = phi %struct.Symbol* [ %82, %93 ], [ %83, %89 ], [ %83, %81 ]
  %96 = getelementptr inbounds %struct.Symbol, %struct.Symbol* %82, i64 0, i32 5
  %97 = load %struct.Symbol*, %struct.Symbol** %96, align 8
  %98 = icmp eq %struct.Symbol* %97, null
  br i1 %98, label %99, label %81

99:                                               ; preds = %94, %77
  %100 = phi %struct.Symbol* [ null, %77 ], [ %95, %94 ]
  %101 = icmp eq %struct.Symbol* %100, null
  %102 = and i1 %21, %101
  br i1 %102, label %103, label %104

103:                                              ; preds = %99
  tail call void (i8*, ...) @nasm_nonfatal(i8* getelementptr inbounds ([59 x i8], [59 x i8]* @.str.16, i64 0, i64 0)) #7
  br label %131

104:                                              ; preds = %72, %99
  %105 = phi %struct.Symbol* [ %100, %99 ], [ %73, %72 ]
  %106 = tail call noalias i8* @nasm_malloc(i64 24) #8
  %107 = getelementptr inbounds %struct.Section, %struct.Section* %0, i64 0, i32 6
  %108 = bitcast %struct.Reloc*** %107 to i8***
  %109 = load i8**, i8*** %108, align 8
  store i8* %106, i8** %109, align 8
  %110 = bitcast i8* %106 to %struct.Reloc**
  %111 = bitcast %struct.Reloc*** %107 to i8**
  store i8* %106, i8** %111, align 8
  store %struct.Reloc* null, %struct.Reloc** %110, align 8
  %112 = getelementptr inbounds %struct.Section, %struct.Section* %0, i64 0, i32 1
  %113 = load i32, i32* %112, align 8
  %114 = getelementptr inbounds i8, i8* %106, i64 8
  %115 = bitcast i8* %114 to i32*
  store i32 %113, i32* %115, align 8
  %116 = getelementptr inbounds %struct.Symbol, %struct.Symbol* %105, i64 0, i32 8
  %117 = load i32, i32* %116, align 8
  %118 = getelementptr inbounds i8, i8* %106, i64 12
  %119 = bitcast i8* %118 to i32*
  store i32 %117, i32* %119, align 4
  %120 = or i32 %3, 8
  %121 = getelementptr inbounds i8, i8* %106, i64 20
  %122 = bitcast i8* %121 to i32*
  store i32 %120, i32* %122, align 4
  %123 = getelementptr inbounds i8, i8* %106, i64 16
  %124 = bitcast i8* %123 to i32*
  store i32 %4, i32* %124, align 8
  %125 = getelementptr inbounds %struct.Section, %struct.Section* %0, i64 0, i32 3
  %126 = load i32, i32* %125, align 8
  %127 = add i32 %126, 1
  store i32 %127, i32* %125, align 8
  %128 = getelementptr inbounds %struct.Symbol, %struct.Symbol* %105, i64 0, i32 2
  %129 = load i32, i32* %128, align 8
  %130 = sub nsw i32 %2, %129
  br label %131

131:                                              ; preds = %26, %62, %104, %103
  %132 = phi i32 [ 0, %103 ], [ %130, %104 ], [ %2, %62 ], [ %2, %26 ]
  ret i32 %132
}

; Function Attrs: argmemonly nounwind
declare void @llvm.lifetime.end.p0i8(i64 immarg, i8* nocapture) #3

declare void @saa_wbytes(%struct.SAA*, i8*, i64) local_unnamed_addr #1

; Function Attrs: allocsize(0)
declare noalias i8* @nasm_malloc(i64) local_unnamed_addr #4

declare i64 @raa_read(%struct.RAA*, i64) local_unnamed_addr #1

; Function Attrs: nofree nounwind readonly
declare i32 @strcmp(i8* nocapture, i8* nocapture) local_unnamed_addr #5

declare i8* @nasm_skip_spaces(i8*) local_unnamed_addr #1

declare i8* @nasm_skip_word(i8*) local_unnamed_addr #1

declare void @stdscan_reset() local_unnamed_addr #1

declare void @stdscan_set(i8*) local_unnamed_addr #1

declare %struct.expr* @evaluate(i32 (i8*, %struct.tokenval*)*, i8*, %struct.tokenval*, i32*, i1 zeroext, %struct.eval_hints*) local_unnamed_addr #1

declare i32 @stdscan(i8*, %struct.tokenval*) #1

declare zeroext i1 @is_simple(%struct.expr*) local_unnamed_addr #1

declare i64 @reloc_value(%struct.expr*) local_unnamed_addr #1

declare void @nasm_free(i8*) local_unnamed_addr #1

; Function Attrs: argmemonly nofree nounwind readonly
declare i64 @strlen(i8* nocapture) local_unnamed_addr #6

declare i8* @saa_wstruct(%struct.SAA*) local_unnamed_addr #1

; Function Attrs: nofree nounwind readonly
declare i64 @strcspn(i8* nocapture, i8* nocapture) local_unnamed_addr #5

; Function Attrs: nofree nounwind readonly
declare i32 @strncasecmp(i8* nocapture, i8* nocapture, i64) local_unnamed_addr #5

declare i8* @stdscan_get() local_unnamed_addr #1

declare noalias i8* @nasm_strdup(i8*) local_unnamed_addr #1

declare %struct.RAA* @raa_write(%struct.RAA*, i64, i64) local_unnamed_addr #1

; Function Attrs: nounwind ssp uwtable
define internal fastcc void @aout_fixup_relocs(%struct.Section* nocapture readonly) unnamed_addr #0 {
  %2 = alloca i32, align 4
  %3 = bitcast i32* %2 to [4 x i8]*
  %4 = getelementptr inbounds %struct.Section, %struct.Section* %0, i64 0, i32 0
  %5 = load %struct.SAA*, %struct.SAA** %4, align 8
  tail call void @saa_rewind(%struct.SAA* %5) #7
  %6 = getelementptr inbounds %struct.Section, %struct.Section* %0, i64 0, i32 5
  %7 = load %struct.Reloc*, %struct.Reloc** %6, align 8
  %8 = icmp eq %struct.Reloc* %7, null
  br i1 %8, label %70, label %9

9:                                                ; preds = %1
  %10 = bitcast i32* %2 to i8*
  %11 = getelementptr inbounds [4 x i8], [4 x i8]* %3, i64 0, i64 1
  %12 = getelementptr inbounds [4 x i8], [4 x i8]* %3, i64 0, i64 2
  %13 = getelementptr inbounds [4 x i8], [4 x i8]* %3, i64 0, i64 3
  %14 = bitcast i32* %2 to i16*
  br label %15

15:                                               ; preds = %9, %62
  %16 = phi %struct.Reloc* [ %7, %9 ], [ %68, %62 ]
  call void @llvm.lifetime.start.p0i8(i64 4, i8* nonnull %10) #7
  store i32 -1431655766, i32* %2, align 4
  %17 = load %struct.SAA*, %struct.SAA** %4, align 8
  %18 = getelementptr inbounds %struct.Reloc, %struct.Reloc* %16, i64 0, i32 1
  %19 = load i32, i32* %18, align 8
  %20 = sext i32 %19 to i64
  %21 = getelementptr inbounds %struct.Reloc, %struct.Reloc* %16, i64 0, i32 3
  %22 = load i32, i32* %21, align 8
  %23 = sext i32 %22 to i64
  call void @saa_fread(%struct.SAA* %17, i64 %20, i8* nonnull %10, i64 %23) #7
  %24 = load i8, i8* %10, align 4
  %25 = zext i8 %24 to i32
  %26 = load i32, i32* %21, align 8
  %27 = icmp sgt i32 %26, 1
  br i1 %27, label %28, label %43

28:                                               ; preds = %15
  %29 = load i8, i8* %11, align 1
  %30 = zext i8 %29 to i32
  %31 = shl nuw nsw i32 %30, 8
  %32 = or i32 %31, %25
  %33 = icmp eq i32 %26, 4
  br i1 %33, label %34, label %43

34:                                               ; preds = %28
  %35 = load i8, i8* %12, align 2
  %36 = zext i8 %35 to i32
  %37 = shl nuw nsw i32 %36, 16
  %38 = or i32 %37, %32
  %39 = load i8, i8* %13, align 1
  %40 = zext i8 %39 to i32
  %41 = shl nuw i32 %40, 24
  %42 = or i32 %38, %41
  br label %43

43:                                               ; preds = %28, %34, %15
  %44 = phi i32 [ %42, %34 ], [ %32, %28 ], [ %25, %15 ]
  %45 = getelementptr inbounds %struct.Reloc, %struct.Reloc* %16, i64 0, i32 2
  %46 = load i32, i32* %45, align 4
  switch i32 %46, label %55 [
    i32 -6, label %47
    i32 -8, label %50
  ]

47:                                               ; preds = %43
  %48 = load i32, i32* getelementptr inbounds (%struct.Section, %struct.Section* @stext, i64 0, i32 1), align 8
  %49 = add i32 %48, %44
  br label %55

50:                                               ; preds = %43
  %51 = load i32, i32* getelementptr inbounds (%struct.Section, %struct.Section* @stext, i64 0, i32 1), align 8
  %52 = load i32, i32* getelementptr inbounds (%struct.Section, %struct.Section* @sdata, i64 0, i32 1), align 8
  %53 = add i32 %51, %44
  %54 = add i32 %53, %52
  br label %55

55:                                               ; preds = %43, %50, %47
  %56 = phi i32 [ %49, %47 ], [ %54, %50 ], [ %44, %43 ]
  switch i32 %26, label %60 [
    i32 4, label %57
    i32 2, label %58
  ]

57:                                               ; preds = %55
  store i32 %56, i32* %2, align 4
  br label %62

58:                                               ; preds = %55
  %59 = trunc i32 %56 to i16
  store i16 %59, i16* %14, align 4
  br label %62

60:                                               ; preds = %55
  %61 = trunc i32 %56 to i8
  store i8 %61, i8* %10, align 4
  br label %62

62:                                               ; preds = %58, %60, %57
  %63 = load %struct.SAA*, %struct.SAA** %4, align 8
  %64 = load i32, i32* %18, align 8
  %65 = sext i32 %64 to i64
  %66 = sext i32 %26 to i64
  call void @saa_fwrite(%struct.SAA* %63, i64 %65, i8* nonnull %10, i64 %66) #7
  call void @llvm.lifetime.end.p0i8(i64 4, i8* nonnull %10) #7
  %67 = getelementptr inbounds %struct.Reloc, %struct.Reloc* %16, i64 0, i32 0
  %68 = load %struct.Reloc*, %struct.Reloc** %67, align 8
  %69 = icmp eq %struct.Reloc* %68, null
  br i1 %69, label %70, label %15

70:                                               ; preds = %62, %1
  ret void
}

declare void @saa_free(%struct.SAA*) local_unnamed_addr #1

declare void @raa_free(%struct.RAA*) local_unnamed_addr #1

declare void @saa_rewind(%struct.SAA*) local_unnamed_addr #1

declare void @saa_fread(%struct.SAA*, i64, i8*, i64) local_unnamed_addr #1

declare void @saa_fwrite(%struct.SAA*, i64, i8*, i64) local_unnamed_addr #1

declare void @fwriteint32_t(i32, %struct._IO_FILE*) local_unnamed_addr #1

declare void @saa_fpwrite(%struct.SAA*, %struct._IO_FILE*) local_unnamed_addr #1

declare i8* @saa_rstruct(%struct.SAA*) local_unnamed_addr #1

declare void @backend_label(i8*, i32, i64) local_unnamed_addr #1

attributes #0 = { nounwind ssp uwtable "correctly-rounded-divide-sqrt-fp-math"="false" "disable-tail-calls"="false" "less-precise-fpmad"="false" "min-legal-vector-width"="0" "no-frame-pointer-elim"="false" "no-frame-pointer-elim-non-leaf" "no-infs-fp-math"="false" "no-jump-tables"="false" "no-nans-fp-math"="false" "no-signed-zeros-fp-math"="false" "no-trapping-math"="false" "null-pointer-is-valid"="true" "stack-protector-buffer-size"="4" "target-cpu"="x86-64" "target-features"="+cx8,+fxsr,+mmx,+sse,+sse2,+sse3,+x87" "unsafe-fp-math"="false" "use-soft-float"="false" }
attributes #1 = { "correctly-rounded-divide-sqrt-fp-math"="false" "disable-tail-calls"="false" "less-precise-fpmad"="false" "no-frame-pointer-elim"="false" "no-frame-pointer-elim-non-leaf" "no-infs-fp-math"="false" "no-nans-fp-math"="false" "no-signed-zeros-fp-math"="false" "no-trapping-math"="false" "null-pointer-is-valid"="true" "stack-protector-buffer-size"="4" "target-cpu"="x86-64" "target-features"="+cx8,+fxsr,+mmx,+sse,+sse2,+sse3,+x87" "unsafe-fp-math"="false" "use-soft-float"="false" }
attributes #2 = { nofree nounwind ssp uwtable "correctly-rounded-divide-sqrt-fp-math"="false" "disable-tail-calls"="false" "less-precise-fpmad"="false" "min-legal-vector-width"="0" "no-frame-pointer-elim"="false" "no-frame-pointer-elim-non-leaf" "no-infs-fp-math"="false" "no-jump-tables"="false" "no-nans-fp-math"="false" "no-signed-zeros-fp-math"="false" "no-trapping-math"="false" "null-pointer-is-valid"="true" "stack-protector-buffer-size"="4" "target-cpu"="x86-64" "target-features"="+cx8,+fxsr,+mmx,+sse,+sse2,+sse3,+x87" "unsafe-fp-math"="false" "use-soft-float"="false" }
attributes #3 = { argmemonly nounwind }
attributes #4 = { allocsize(0) "correctly-rounded-divide-sqrt-fp-math"="false" "disable-tail-calls"="false" "less-precise-fpmad"="false" "no-frame-pointer-elim"="false" "no-frame-pointer-elim-non-leaf" "no-infs-fp-math"="false" "no-nans-fp-math"="false" "no-signed-zeros-fp-math"="false" "no-trapping-math"="false" "null-pointer-is-valid"="true" "stack-protector-buffer-size"="4" "target-cpu"="x86-64" "target-features"="+cx8,+fxsr,+mmx,+sse,+sse2,+sse3,+x87" "unsafe-fp-math"="false" "use-soft-float"="false" }
attributes #5 = { nofree nounwind readonly "correctly-rounded-divide-sqrt-fp-math"="false" "disable-tail-calls"="false" "less-precise-fpmad"="false" "no-frame-pointer-elim"="false" "no-frame-pointer-elim-non-leaf" "no-infs-fp-math"="false" "no-nans-fp-math"="false" "no-signed-zeros-fp-math"="false" "no-trapping-math"="false" "null-pointer-is-valid"="true" "stack-protector-buffer-size"="4" "target-cpu"="x86-64" "target-features"="+cx8,+fxsr,+mmx,+sse,+sse2,+sse3,+x87" "unsafe-fp-math"="false" "use-soft-float"="false" }
attributes #6 = { argmemonly nofree nounwind readonly "correctly-rounded-divide-sqrt-fp-math"="false" "disable-tail-calls"="false" "less-precise-fpmad"="false" "no-frame-pointer-elim"="false" "no-frame-pointer-elim-non-leaf" "no-infs-fp-math"="false" "no-nans-fp-math"="false" "no-signed-zeros-fp-math"="false" "no-trapping-math"="false" "null-pointer-is-valid"="true" "stack-protector-buffer-size"="4" "target-cpu"="x86-64" "target-features"="+cx8,+fxsr,+mmx,+sse,+sse2,+sse3,+x87" "unsafe-fp-math"="false" "use-soft-float"="false" }
attributes #7 = { nounwind }
attributes #8 = { nounwind allocsize(0) }
attributes #9 = { nounwind readonly }

!llvm.module.flags = !{!0, !1}

!0 = !{i32 1, !"wchar_size", i32 4}
!1 = !{i32 7, !"PIC Level", i32 2}
